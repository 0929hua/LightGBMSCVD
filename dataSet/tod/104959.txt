Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xeff2202
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xeff2202
0x3b: V13 = EQ V11 0xeff2202
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x7a]
---
0x40 DUP1
0x41 PUSH4 0x3ccfd60b
0x46 EQ
0x47 PUSH2 0x7a
0x4a JUMPI
---
0x41: V15 = 0x3ccfd60b
0x46: V16 = EQ 0x3ccfd60b V11
0x47: V17 = 0x7a
0x4a: JUMPI 0x7a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x8f]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0x8f
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0x8f
0x55: JUMPI 0x8f V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xc0]
---
0x56 DUP1
0x57 PUSH4 0xbbebc362
0x5c EQ
0x5d PUSH2 0xc0
0x60 JUMPI
---
0x57: V21 = 0xbbebc362
0x5c: V22 = EQ 0xbbebc362 V11
0x5d: V23 = 0xc0
0x60: JUMPI 0xc0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x1a5, 0x1e5]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x79]
---
Predecessors: [0xd]
Successors: [0xd7]
---
0x63 JUMPDEST
0x64 PUSH2 0x61
0x67 PUSH1 0x1
0x69 PUSH1 0xa0
0x6b PUSH1 0x2
0x6d EXP
0x6e SUB
0x6f PUSH1 0x4
0x71 CALLDATALOAD
0x72 AND
0x73 PUSH1 0x24
0x75 CALLDATALOAD
0x76 PUSH2 0xd7
0x79 JUMP
---
0x63: JUMPDEST 
0x64: V24 = 0x61
0x67: V25 = 0x1
0x69: V26 = 0xa0
0x6b: V27 = 0x2
0x6d: V28 = EXP 0x2 0xa0
0x6e: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f: V30 = 0x4
0x71: V31 = CALLDATALOAD 0x4
0x72: V32 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x73: V33 = 0x24
0x75: V34 = CALLDATALOAD 0x24
0x76: V35 = 0xd7
0x79: JUMP 0xd7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V32, V34]
Exit stack: [V11, 0x61, V32, V34]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0x40]
Successors: [0x82, 0x86]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c DUP1
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7a: JUMPDEST 
0x7b: V36 = CALLVALUE
0x7d: V37 = ISZERO V36
0x7e: V38 = 0x86
0x81: JUMPI 0x86 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7a]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V39 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x86
[0x86:0x8e]
---
Predecessors: [0x7a]
Successors: [0x1aa]
---
0x86 JUMPDEST
0x87 POP
0x88 PUSH2 0x61
0x8b PUSH2 0x1aa
0x8e JUMP
---
0x86: JUMPDEST 
0x88: V40 = 0x61
0x8b: V41 = 0x1aa
0x8e: JUMP 0x1aa
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0x4b]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V42 = CALLVALUE
0x92: V43 = ISZERO V42
0x93: V44 = 0x9b
0x96: JUMPI 0x9b V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V45 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0x9b
[0x9b:0xa3]
---
Predecessors: [0x8f]
Successors: [0x1e8]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0xa4
0xa0 PUSH2 0x1e8
0xa3 JUMP
---
0x9b: JUMPDEST 
0x9d: V46 = 0xa4
0xa0: V47 = 0x1e8
0xa3: JUMP 0x1e8
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0xa4]
Exit stack: [V11, 0xa4]

================================

Block 0xa4
[0xa4:0xbf]
---
Predecessors: [0x1e8]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 DUP1
0xa8 MLOAD
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 SWAP1
0xb2 SWAP3
0xb3 AND
0xb4 DUP3
0xb5 MSTORE
0xb6 MLOAD
0xb7 SWAP1
0xb8 DUP2
0xb9 SWAP1
0xba SUB
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf RETURN
---
0xa4: JUMPDEST 
0xa5: V48 = 0x40
0xa8: V49 = M[0x40]
0xa9: V50 = 0x1
0xab: V51 = 0xa0
0xad: V52 = 0x2
0xaf: V53 = EXP 0x2 0xa0
0xb0: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V55 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0xb5: M[V49] = V55
0xb6: V56 = M[0x40]
0xba: V57 = SUB V49 V56
0xbb: V58 = 0x20
0xbd: V59 = ADD 0x20 V57
0xbf: RETURN V56 V59
---
Entry stack: [V11, 0xa4, V160]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa4]

================================

Block 0xc0
[0xc0:0xd6]
---
Predecessors: [0x56]
Successors: [0x1f7]
---
0xc0 JUMPDEST
0xc1 PUSH2 0x61
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc PUSH1 0x4
0xce CALLDATALOAD
0xcf AND
0xd0 PUSH1 0x24
0xd2 CALLDATALOAD
0xd3 PUSH2 0x1f7
0xd6 JUMP
---
0xc0: JUMPDEST 
0xc1: V60 = 0x61
0xc4: V61 = 0x1
0xc6: V62 = 0xa0
0xc8: V63 = 0x2
0xca: V64 = EXP 0x2 0xa0
0xcb: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc: V66 = 0x4
0xce: V67 = CALLDATALOAD 0x4
0xcf: V68 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V69 = 0x24
0xd2: V70 = CALLDATALOAD 0x24
0xd3: V71 = 0x1f7
0xd6: JUMP 0x1f7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V68, V70]
Exit stack: [V11, 0x61, V68, V70]

================================

Block 0xd7
[0xd7:0x101]
---
Predecessors: [0x63]
Successors: [0x102, 0x1a5]
---
0xd7 JUMPDEST
0xd8 PUSH1 0x40
0xda DUP1
0xdb MLOAD
0xdc DUP3
0xdd DUP2
0xde MSTORE
0xdf NUMBER
0xe0 PUSH1 0x0
0xe2 NOT
0xe3 ADD
0xe4 BLOCKHASH
0xe5 PUSH1 0x20
0xe7 DUP3
0xe8 ADD
0xe9 MSTORE
0xea DUP2
0xeb MLOAD
0xec SWAP1
0xed DUP2
0xee SWAP1
0xef SUB
0xf0 SWAP1
0xf1 SWAP2
0xf2 ADD
0xf3 SWAP1
0xf4 SHA3
0xf5 PUSH1 0x3
0xf7 SWAP1
0xf8 DUP2
0xf9 AND
0xfa SWAP1
0xfb DUP2
0xfc EQ
0xfd ISZERO
0xfe PUSH2 0x1a5
0x101 JUMPI
---
0xd7: JUMPDEST 
0xd8: V72 = 0x40
0xdb: V73 = M[0x40]
0xde: M[V73] = V34
0xdf: V74 = NUMBER
0xe0: V75 = 0x0
0xe2: V76 = NOT 0x0
0xe3: V77 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V74
0xe4: V78 = BLOCKHASH V77
0xe5: V79 = 0x20
0xe8: V80 = ADD V73 0x20
0xe9: M[V80] = V78
0xeb: V81 = M[0x40]
0xef: V82 = SUB V73 V81
0xf2: V83 = ADD 0x40 V82
0xf4: V84 = SHA3 V81 V83
0xf5: V85 = 0x3
0xf9: V86 = AND 0x3 V84
0xfc: V87 = EQ V86 0x3
0xfd: V88 = ISZERO V87
0xfe: V89 = 0x1a5
0x101: JUMPI 0x1a5 V88
---
Entry stack: [V11, 0x61, V32, V34]
Stack pops: 1
Stack additions: [S0, V86]
Exit stack: [V11, 0x61, V32, V34, V86]

================================

Block 0x102
[0x102:0x186]
---
Predecessors: [0xd7]
Successors: [0x187, 0x18b]
---
0x102 PUSH1 0x1
0x104 DUP1
0x105 SLOAD
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b NOT
0x11c AND
0x11d PUSH1 0x1
0x11f PUSH1 0xa0
0x121 PUSH1 0x2
0x123 EXP
0x124 SUB
0x125 DUP6
0x126 DUP2
0x127 AND
0x128 SWAP2
0x129 SWAP1
0x12a SWAP2
0x12b OR
0x12c SWAP2
0x12d DUP3
0x12e SWAP1
0x12f SSTORE
0x130 PUSH1 0x40
0x132 DUP1
0x133 MLOAD
0x134 PUSH32 0x780bbe6000000000000000000000000000000000000000000000000000000000
0x155 DUP2
0x156 MSTORE
0x157 PUSH1 0x0
0x159 PUSH1 0x4
0x15b DUP3
0x15c ADD
0x15d DUP2
0x15e SWAP1
0x15f MSTORE
0x160 SWAP2
0x161 MLOAD
0x162 SWAP4
0x163 SWAP1
0x164 SWAP3
0x165 AND
0x166 SWAP3
0x167 PUSH4 0x780bbe60
0x16c SWAP3
0x16d CALLVALUE
0x16e SWAP3
0x16f PUSH1 0x24
0x171 DUP1
0x172 DUP4
0x173 ADD
0x174 SWAP4
0x175 SWAP2
0x176 SWAP3
0x177 DUP3
0x178 SWAP1
0x179 SUB
0x17a ADD
0x17b DUP2
0x17c DUP6
0x17d DUP9
0x17e DUP1
0x17f EXTCODESIZE
0x180 ISZERO
0x181 DUP1
0x182 ISZERO
0x183 PUSH2 0x18b
0x186 JUMPI
---
0x102: V90 = 0x1
0x105: V91 = S[0x1]
0x106: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V93 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x11c: V94 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V91
0x11d: V95 = 0x1
0x11f: V96 = 0xa0
0x121: V97 = 0x2
0x123: V98 = EXP 0x2 0xa0
0x124: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x12b: V101 = OR V100 V94
0x12f: S[0x1] = V101
0x130: V102 = 0x40
0x133: V103 = M[0x40]
0x134: V104 = 0x780bbe6000000000000000000000000000000000000000000000000000000000
0x156: M[V103] = 0x780bbe6000000000000000000000000000000000000000000000000000000000
0x157: V105 = 0x0
0x159: V106 = 0x4
0x15c: V107 = ADD V103 0x4
0x15f: M[V107] = 0x0
0x161: V108 = M[0x40]
0x165: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x167: V110 = 0x780bbe60
0x16d: V111 = CALLVALUE
0x16f: V112 = 0x24
0x173: V113 = ADD V103 0x24
0x179: V114 = SUB V103 V108
0x17a: V115 = ADD V114 0x24
0x17f: V116 = EXTCODESIZE V109
0x180: V117 = ISZERO V116
0x182: V118 = ISZERO V117
0x183: V119 = 0x18b
0x186: JUMPI 0x18b V118
---
Entry stack: [V11, 0x61, V32, V34, V86]
Stack pops: 3
Stack additions: [S2, S1, S0, V109, 0x780bbe60, V111, V113, 0x0, V108, V115, V108, V111, V109, V117]
Exit stack: [V11, 0x61, V32, V34, V86, V109, 0x780bbe60, V111, V113, 0x0, V108, V115, V108, V111, V109, V117]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x102]
Successors: []
---
0x187 PUSH1 0x0
0x189 DUP1
0x18a REVERT
---
0x187: V120 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V32, V34, V86, V109, 0x780bbe60, V111, V113, 0x0, V108, V115, V108, V111, V109, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V32, V34, V86, V109, 0x780bbe60, V111, V113, 0x0, V108, V115, V108, V111, V109, V117]

================================

Block 0x18b
[0x18b:0x195]
---
Predecessors: [0x102, 0x224]
Successors: [0x196, 0x19f]
---
0x18b JUMPDEST
0x18c POP
0x18d GAS
0x18e CALL
0x18f ISZERO
0x190 DUP1
0x191 ISZERO
0x192 PUSH2 0x19f
0x195 JUMPI
---
0x18b: JUMPDEST 
0x18d: V121 = GAS
0x18e: V122 = CALL V121 S1 S2 S3 S4 S5 0x0
0x18f: V123 = ISZERO V122
0x191: V124 = ISZERO V123
0x192: V125 = 0x19f
0x195: JUMPI 0x19f V124
---
Entry stack: [V11, 0x61, S13, S12, S11, S10, {0x33dddc3a, 0x780bbe60}, S8, S7, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V123]
Exit stack: [V11, 0x61, S13, S12, S11, S10, {0x33dddc3a, 0x780bbe60}, S8, S7, V123]

================================

Block 0x196
[0x196:0x19e]
---
Predecessors: [0x18b]
Successors: []
---
0x196 RETURNDATASIZE
0x197 PUSH1 0x0
0x199 DUP1
0x19a RETURNDATACOPY
0x19b RETURNDATASIZE
0x19c PUSH1 0x0
0x19e REVERT
---
0x196: V126 = RETURNDATASIZE
0x197: V127 = 0x0
0x19a: RETURNDATACOPY 0x0 0x0 V126
0x19b: V128 = RETURNDATASIZE
0x19c: V129 = 0x0
0x19e: REVERT 0x0 V128
---
Entry stack: [V11, 0x61, S7, S6, S5, S4, {0x33dddc3a, 0x780bbe60}, S2, S1, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, S7, S6, S5, S4, {0x33dddc3a, 0x780bbe60}, S2, S1, V123]

================================

Block 0x19f
[0x19f:0x1a4]
---
Predecessors: [0x18b]
Successors: [0x1a5]
---
0x19f JUMPDEST
0x1a0 POP
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
---
0x19f: JUMPDEST 
---
Entry stack: [V11, 0x61, S7, S6, S5, S4, {0x33dddc3a, 0x780bbe60}, S2, S1, V123]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x61, S7, S6, S5]

================================

Block 0x1a5
[0x1a5:0x1a9]
---
Predecessors: [0xd7, 0x19f, 0x1f7]
Successors: [0x61]
---
0x1a5 JUMPDEST
0x1a6 POP
0x1a7 POP
0x1a8 POP
0x1a9 JUMP
---
0x1a5: JUMPDEST 
0x1a9: JUMP 0x61
---
Entry stack: [V11, 0x61, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x1aa
[0x1aa:0x1db]
---
Predecessors: [0x86]
Successors: [0x1dc, 0x1e5]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae SLOAD
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 PUSH1 0x1
0x1b4 PUSH1 0xa0
0x1b6 PUSH1 0x2
0x1b8 EXP
0x1b9 SUB
0x1ba SWAP1
0x1bb SWAP2
0x1bc AND
0x1bd SWAP2
0x1be ADDRESS
0x1bf BALANCE
0x1c0 DUP1
0x1c1 ISZERO
0x1c2 PUSH2 0x8fc
0x1c5 MUL
0x1c6 SWAP3
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 DUP2
0x1ca DUP2
0x1cb DUP2
0x1cc DUP6
0x1cd DUP9
0x1ce DUP9
0x1cf CALL
0x1d0 SWAP4
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 ISZERO
0x1d6 DUP1
0x1d7 ISZERO
0x1d8 PUSH2 0x1e5
0x1db JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V130 = 0x0
0x1ae: V131 = S[0x0]
0x1af: V132 = 0x40
0x1b1: V133 = M[0x40]
0x1b2: V134 = 0x1
0x1b4: V135 = 0xa0
0x1b6: V136 = 0x2
0x1b8: V137 = EXP 0x2 0xa0
0x1b9: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bc: V139 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V140 = ADDRESS
0x1bf: V141 = BALANCE V140
0x1c1: V142 = ISZERO V141
0x1c2: V143 = 0x8fc
0x1c5: V144 = MUL 0x8fc V142
0x1cf: V145 = CALL V144 V139 V141 V133 0x0 V133 0x0
0x1d5: V146 = ISZERO V145
0x1d7: V147 = ISZERO V146
0x1d8: V148 = 0x1e5
0x1db: JUMPI 0x1e5 V147
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V146]
Exit stack: [V11, 0x61, V146]

================================

Block 0x1dc
[0x1dc:0x1e4]
---
Predecessors: [0x1aa]
Successors: []
---
0x1dc RETURNDATASIZE
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 RETURNDATACOPY
0x1e1 RETURNDATASIZE
0x1e2 PUSH1 0x0
0x1e4 REVERT
---
0x1dc: V149 = RETURNDATASIZE
0x1dd: V150 = 0x0
0x1e0: RETURNDATACOPY 0x0 0x0 V149
0x1e1: V151 = RETURNDATASIZE
0x1e2: V152 = 0x0
0x1e4: REVERT 0x0 V151
---
Entry stack: [V11, 0x61, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V146]

================================

Block 0x1e5
[0x1e5:0x1e7]
---
Predecessors: [0x1aa]
Successors: [0x61]
---
0x1e5 JUMPDEST
0x1e6 POP
0x1e7 JUMP
---
0x1e5: JUMPDEST 
0x1e7: JUMP 0x61
---
Entry stack: [V11, 0x61, V146]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e8
[0x1e8:0x1f6]
---
Predecessors: [0x9b]
Successors: [0xa4]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb SLOAD
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 AND
0x1f5 DUP2
0x1f6 JUMP
---
0x1e8: JUMPDEST 
0x1e9: V153 = 0x0
0x1eb: V154 = S[0x0]
0x1ec: V155 = 0x1
0x1ee: V156 = 0xa0
0x1f0: V157 = 0x2
0x1f2: V158 = EXP 0x2 0xa0
0x1f3: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1f6: JUMP 0xa4
---
Entry stack: [V11, 0xa4]
Stack pops: 1
Stack additions: [S0, V160]
Exit stack: [V11, 0xa4, V160]

================================

Block 0x1f7
[0x1f7:0x223]
---
Predecessors: [0xc0]
Successors: [0x1a5, 0x224]
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa DUP1
0x1fb MLOAD
0x1fc DUP3
0x1fd DUP2
0x1fe MSTORE
0x1ff NUMBER
0x200 PUSH1 0x0
0x202 NOT
0x203 ADD
0x204 BLOCKHASH
0x205 PUSH1 0x20
0x207 DUP3
0x208 ADD
0x209 MSTORE
0x20a DUP2
0x20b MLOAD
0x20c SWAP1
0x20d DUP2
0x20e SWAP1
0x20f SUB
0x210 SWAP1
0x211 SWAP2
0x212 ADD
0x213 SWAP1
0x214 SHA3
0x215 PUSH2 0x3e9
0x218 SWAP1
0x219 MOD
0x21a PUSH2 0x3d4
0x21d DUP2
0x21e LT
0x21f ISZERO
0x220 PUSH2 0x1a5
0x223 JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V161 = 0x40
0x1fb: V162 = M[0x40]
0x1fe: M[V162] = V70
0x1ff: V163 = NUMBER
0x200: V164 = 0x0
0x202: V165 = NOT 0x0
0x203: V166 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V163
0x204: V167 = BLOCKHASH V166
0x205: V168 = 0x20
0x208: V169 = ADD V162 0x20
0x209: M[V169] = V167
0x20b: V170 = M[0x40]
0x20f: V171 = SUB V162 V170
0x212: V172 = ADD 0x40 V171
0x214: V173 = SHA3 V170 V172
0x215: V174 = 0x3e9
0x219: V175 = MOD V173 0x3e9
0x21a: V176 = 0x3d4
0x21e: V177 = LT V175 0x3d4
0x21f: V178 = ISZERO V177
0x220: V179 = 0x1a5
0x223: JUMPI 0x1a5 V178
---
Entry stack: [V11, 0x61, V68, V70]
Stack pops: 1
Stack additions: [S0, V175]
Exit stack: [V11, 0x61, V68, V70, V175]

================================

Block 0x224
[0x224:0x2a8]
---
Predecessors: [0x1f7]
Successors: [0x18b, 0x2a9]
---
0x224 PUSH1 0x1
0x226 DUP1
0x227 SLOAD
0x228 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23d NOT
0x23e AND
0x23f PUSH1 0x1
0x241 PUSH1 0xa0
0x243 PUSH1 0x2
0x245 EXP
0x246 SUB
0x247 DUP6
0x248 DUP2
0x249 AND
0x24a SWAP2
0x24b SWAP1
0x24c SWAP2
0x24d OR
0x24e SWAP2
0x24f DUP3
0x250 SWAP1
0x251 SSTORE
0x252 PUSH1 0x40
0x254 DUP1
0x255 MLOAD
0x256 PUSH32 0x33dddc3a00000000000000000000000000000000000000000000000000000000
0x277 DUP2
0x278 MSTORE
0x279 PUSH1 0x0
0x27b PUSH1 0x4
0x27d DUP3
0x27e ADD
0x27f DUP2
0x280 SWAP1
0x281 MSTORE
0x282 SWAP2
0x283 MLOAD
0x284 SWAP4
0x285 SWAP1
0x286 SWAP3
0x287 AND
0x288 SWAP3
0x289 PUSH4 0x33dddc3a
0x28e SWAP3
0x28f CALLVALUE
0x290 SWAP3
0x291 PUSH1 0x24
0x293 DUP1
0x294 DUP4
0x295 ADD
0x296 SWAP4
0x297 SWAP2
0x298 SWAP3
0x299 DUP3
0x29a SWAP1
0x29b SUB
0x29c ADD
0x29d DUP2
0x29e DUP6
0x29f DUP9
0x2a0 DUP1
0x2a1 EXTCODESIZE
0x2a2 ISZERO
0x2a3 DUP1
0x2a4 ISZERO
0x2a5 PUSH2 0x18b
0x2a8 JUMPI
---
0x224: V180 = 0x1
0x227: V181 = S[0x1]
0x228: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V183 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V184 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V181
0x23f: V185 = 0x1
0x241: V186 = 0xa0
0x243: V187 = 0x2
0x245: V188 = EXP 0x2 0xa0
0x246: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x24d: V191 = OR V190 V184
0x251: S[0x1] = V191
0x252: V192 = 0x40
0x255: V193 = M[0x40]
0x256: V194 = 0x33dddc3a00000000000000000000000000000000000000000000000000000000
0x278: M[V193] = 0x33dddc3a00000000000000000000000000000000000000000000000000000000
0x279: V195 = 0x0
0x27b: V196 = 0x4
0x27e: V197 = ADD V193 0x4
0x281: M[V197] = 0x0
0x283: V198 = M[0x40]
0x287: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x289: V200 = 0x33dddc3a
0x28f: V201 = CALLVALUE
0x291: V202 = 0x24
0x295: V203 = ADD V193 0x24
0x29b: V204 = SUB V193 V198
0x29c: V205 = ADD V204 0x24
0x2a1: V206 = EXTCODESIZE V199
0x2a2: V207 = ISZERO V206
0x2a4: V208 = ISZERO V207
0x2a5: V209 = 0x18b
0x2a8: JUMPI 0x18b V208
---
Entry stack: [V11, 0x61, V68, V70, V175]
Stack pops: 3
Stack additions: [S2, S1, S0, V199, 0x33dddc3a, V201, V203, 0x0, V198, V205, V198, V201, V199, V207]
Exit stack: [V11, 0x61, V68, V70, V175, V199, 0x33dddc3a, V201, V203, 0x0, V198, V205, V198, V201, V199, V207]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x224]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V210 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V68, V70, V175, V199, 0x33dddc3a, V201, V203, 0x0, V198, V205, V198, V201, V199, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V68, V70, V175, V199, 0x33dddc3a, V201, V203, 0x0, V198, V205, V198, V201, V199, V207]

================================

Block 0x2ad
[0x2ad:0x2d8]
---
Predecessors: []
Successors: []
---
0x2ad STOP
0x2ae LOG1
0x2af PUSH6 0x627a7a723058
0x2b6 SHA3
0x2b7 PUSH23 0x33f5b3bcccdc6709215ebfd937516f8be5a4b9c10a6f6a
0x2cf GT
0x2d0 MISSING 0xd
0x2d1 TIMESTAMP
0x2d2 DUP12
0x2d3 MULMOD
0x2d4 SWAP6
0x2d5 DUP11
0x2d6 MISSING 0xcb
0x2d7 STOP
0x2d8 MISSING 0x29
---
0x2ad: STOP 
0x2ae: LOG S0 S1 S2
0x2af: V211 = 0x627a7a723058
0x2b6: V212 = SHA3 0x627a7a723058 S3
0x2b7: V213 = 0x33f5b3bcccdc6709215ebfd937516f8be5a4b9c10a6f6a
0x2cf: V214 = GT 0x33f5b3bcccdc6709215ebfd937516f8be5a4b9c10a6f6a V212
0x2d0: MISSING 0xd
0x2d1: V215 = TIMESTAMP
0x2d3: V216 = MULMOD S10 V215 S0
0x2d6: MISSING 0xcb
0x2d7: STOP 
0x2d8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V214, S10, S6, S1, S2, S3, S4, S5, V216, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0xeff2202
Entry block: 0x63
Exit block: 0x196
Body: 0x61, 0x63, 0xd7, 0x102, 0x187, 0x18b, 0x196, 0x19f, 0x1a5

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x7a
Exit block: 0x61
Body: 0x61, 0x7a, 0x82, 0x86, 0x1aa, 0x1dc, 0x1e5

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x8f
Exit block: 0xa4
Body: 0x8f, 0x97, 0x9b, 0xa4, 0x1e8

Function 3:
Public function signature: 0xbbebc362
Entry block: 0xc0
Exit block: 0x196
Body: 0x61, 0xc0, 0x18b, 0x196, 0x19f, 0x1a5, 0x1f7, 0x224, 0x2a9

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

