Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x40]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x40
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x40
0xa: JUMPI 0x40 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x4b]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x41c0e1b5
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x4b
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x41c0e1b5
0x1a: V12 = EQ V10 0x41c0e1b5
0x1b: V13 = 0x4b
0x1e: JUMPI 0x4b V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x75]
---
0x1f DUP1
0x20 PUSH4 0x8da5cb5b
0x25 EQ
0x26 PUSH2 0x75
0x29 JUMPI
---
0x20: V14 = 0x8da5cb5b
0x25: V15 = EQ 0x8da5cb5b V10
0x26: V16 = 0x75
0x29: JUMPI 0x75 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x87]
---
0x2a DUP1
0x2b PUSH4 0xe4b2fb79
0x30 EQ
0x31 PUSH2 0x87
0x34 JUMPI
---
0x2b: V17 = 0xe4b2fb79
0x30: V18 = EQ 0xe4b2fb79 V10
0x31: V19 = 0x87
0x34: JUMPI 0x87 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xb7]
---
0x35 DUP1
0x36 PUSH4 0xe97dcb62
0x3b EQ
0x3c PUSH2 0xb7
0x3f JUMPI
---
0x36: V20 = 0xe97dcb62
0x3b: V21 = EQ 0xe97dcb62 V10
0x3c: V22 = 0xb7
0x3f: JUMPI 0xb7 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x0, 0x35]
Successors: [0xbb]
---
0x40 JUMPDEST
0x41 PUSH2 0xf8
0x44 PUSH2 0xfa
0x47 PUSH2 0xbb
0x4a JUMP
---
0x40: JUMPDEST 
0x41: V23 = 0xf8
0x44: V24 = 0xfa
0x47: V25 = 0xbb
0x4a: JUMP 0xbb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8, 0xfa]
Exit stack: [V10, 0xf8, 0xfa]

================================

Block 0x4b
[0x4b:0x67]
---
Predecessors: [0xb]
Successors: [0x68, 0xfa]
---
0x4b JUMPDEST
0x4c PUSH2 0xf8
0x4f PUSH1 0x14
0x51 SLOAD
0x52 PUSH1 0x1
0x54 PUSH1 0xa0
0x56 PUSH1 0x2
0x58 EXP
0x59 SUB
0x5a SWAP1
0x5b DUP2
0x5c AND
0x5d CALLER
0x5e SWAP2
0x5f SWAP1
0x60 SWAP2
0x61 AND
0x62 EQ
0x63 ISZERO
0x64 PUSH2 0xfa
0x67 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = 0xf8
0x4f: V27 = 0x14
0x51: V28 = S[0x14]
0x52: V29 = 0x1
0x54: V30 = 0xa0
0x56: V31 = 0x2
0x58: V32 = EXP 0x2 0xa0
0x59: V33 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x5d: V35 = CALLER
0x61: V36 = AND V35 0xffffffffffffffffffffffffffffffffffffffff
0x62: V37 = EQ V36 V34
0x63: V38 = ISZERO V37
0x64: V39 = 0xfa
0x67: JUMPI 0xfa V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8]
Exit stack: [V10, 0xf8]

================================

Block 0x68
[0x68:0x74]
---
Predecessors: [0x4b]
Successors: []
---
0x68 PUSH1 0x14
0x6a SLOAD
0x6b PUSH1 0x1
0x6d PUSH1 0xa0
0x6f PUSH1 0x2
0x71 EXP
0x72 SUB
0x73 AND
0x74 SELFDESTRUCT
---
0x68: V40 = 0x14
0x6a: V41 = S[0x14]
0x6b: V42 = 0x1
0x6d: V43 = 0xa0
0x6f: V44 = 0x2
0x71: V45 = EXP 0x2 0xa0
0x72: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x74: SELFDESTRUCT V47
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x75
[0x75:0x86]
---
Predecessors: [0x1f]
Successors: [0xfc]
---
0x75 JUMPDEST
0x76 PUSH2 0xfc
0x79 PUSH1 0x14
0x7b SLOAD
0x7c PUSH1 0x1
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SUB
0x84 AND
0x85 DUP2
0x86 JUMP
---
0x75: JUMPDEST 
0x76: V48 = 0xfc
0x79: V49 = 0x14
0x7b: V50 = S[0x14]
0x7c: V51 = 0x1
0x7e: V52 = 0xa0
0x80: V53 = 0x2
0x82: V54 = EXP 0x2 0xa0
0x83: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x86: JUMP 0xfc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfc, V56]
Exit stack: [V10, 0xfc, V56]

================================

Block 0x87
[0x87:0x99]
---
Predecessors: [0x2a]
Successors: [0x9a]
---
0x87 JUMPDEST
0x88 PUSH2 0x119
0x8b PUSH1 0x4
0x8d CALLDATALOAD
0x8e PUSH1 0x0
0x90 DUP2
0x91 PUSH1 0xa
0x93 DUP2
0x94 LT
0x95 ISZERO
0x96 PUSH2 0x2
0x99 JUMPI
---
0x87: JUMPDEST 
0x88: V57 = 0x119
0x8b: V58 = 0x4
0x8d: V59 = CALLDATALOAD 0x4
0x8e: V60 = 0x0
0x91: V61 = 0xa
0x94: V62 = LT V59 0xa
0x95: V63 = ISZERO V62
0x96: V64 = 0x2
0x99: THROWI V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x119, V59, 0x0, V59]
Exit stack: [V10, 0x119, V59, 0x0, V59]

================================

Block 0x9a
[0x9a:0xb6]
---
Predecessors: [0x87]
Successors: [0x119]
---
0x9a POP
0x9b POP
0x9c PUSH1 0x2
0x9e MUL
0x9f DUP1
0xa0 SLOAD
0xa1 PUSH1 0x1
0xa3 SWAP2
0xa4 SWAP1
0xa5 SWAP2
0xa6 ADD
0xa7 SLOAD
0xa8 PUSH1 0x1
0xaa PUSH1 0xa0
0xac PUSH1 0x2
0xae EXP
0xaf SUB
0xb0 SWAP2
0xb1 SWAP1
0xb2 SWAP2
0xb3 AND
0xb4 SWAP1
0xb5 DUP3
0xb6 JUMP
---
0x9c: V65 = 0x2
0x9e: V66 = MUL 0x2 V59
0xa0: V67 = S[V66]
0xa1: V68 = 0x1
0xa6: V69 = ADD 0x1 V66
0xa7: V70 = S[V69]
0xa8: V71 = 0x1
0xaa: V72 = 0xa0
0xac: V73 = 0x2
0xae: V74 = EXP 0x2 0xa0
0xaf: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xb6: JUMP 0x119
---
Entry stack: [V10, 0x119, V59, 0x0, V59]
Stack pops: 4
Stack additions: [S3, V76, V70]
Exit stack: [V10, 0x119, V76, V70]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0x35]
Successors: [0xbb]
---
0xb7 JUMPDEST
0xb8 PUSH2 0xf8
---
0xb7: JUMPDEST 
0xb8: V77 = 0xf8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8]
Exit stack: [V10, 0xf8]

================================

Block 0xbb
[0xbb:0xd3]
---
Predecessors: [0x40, 0xb7]
Successors: [0xd4, 0x13f]
---
0xbb JUMPDEST
0xbc PUSH1 0x0
0xbe PUSH1 0x0
0xc0 PUSH1 0x0
0xc2 PUSH1 0x0
0xc4 PUSH8 0x16345785d8a0000
0xcd CALLVALUE
0xce LT
0xcf ISZERO
0xd0 PUSH2 0x13f
0xd3 JUMPI
---
0xbb: JUMPDEST 
0xbc: V78 = 0x0
0xbe: V79 = 0x0
0xc0: V80 = 0x0
0xc2: V81 = 0x0
0xc4: V82 = 0x16345785d8a0000
0xcd: V83 = CALLVALUE
0xce: V84 = LT V83 0x16345785d8a0000
0xcf: V85 = ISZERO V84
0xd0: V86 = 0x13f
0xd3: JUMPI 0x13f V85
---
Entry stack: [V10, S1, {0xf8, 0xfa}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0xf8, 0xfa}, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd4
[0xd4:0xf7]
---
Predecessors: [0xbb]
Successors: [0x587]
---
0xd4 PUSH1 0x40
0xd6 MLOAD
0xd7 PUSH1 0x1
0xd9 PUSH1 0xa0
0xdb PUSH1 0x2
0xdd EXP
0xde SUB
0xdf CALLER
0xe0 AND
0xe1 SWAP1
0xe2 DUP3
0xe3 SWAP1
0xe4 CALLVALUE
0xe5 SWAP1
0xe6 DUP3
0xe7 DUP2
0xe8 DUP2
0xe9 DUP2
0xea DUP6
0xeb DUP9
0xec DUP4
0xed CALL
0xee SWAP4
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 PUSH2 0x587
0xf7 JUMP
---
0xd4: V87 = 0x40
0xd6: V88 = M[0x40]
0xd7: V89 = 0x1
0xd9: V90 = 0xa0
0xdb: V91 = 0x2
0xdd: V92 = EXP 0x2 0xa0
0xde: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V94 = CALLER
0xe0: V95 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V96 = CALLVALUE
0xed: V97 = CALL 0x0 V95 V96 V88 0x0 V88 0x0
0xf4: V98 = 0x587
0xf7: JUMP 0x587
---
Entry stack: [V10, S5, {0xf8, 0xfa}, 0x0, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xf8
[0xf8:0xf9]
---
Predecessors: [0xfa, 0x587]
Successors: []
---
0xf8 JUMPDEST
0xf9 STOP
---
0xf8: JUMPDEST 
0xf9: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xfa
[0xfa:0xfb]
---
Predecessors: [0x4b, 0x587]
Successors: [0xf8]
---
0xfa JUMPDEST
0xfb JUMP
---
0xfa: JUMPDEST 
0xfb: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xfc
[0xfc:0x118]
---
Predecessors: [0x75]
Successors: []
---
0xfc JUMPDEST
0xfd PUSH1 0x40
0xff DUP1
0x100 MLOAD
0x101 PUSH1 0x1
0x103 PUSH1 0xa0
0x105 PUSH1 0x2
0x107 EXP
0x108 SUB
0x109 SWAP3
0x10a SWAP1
0x10b SWAP3
0x10c AND
0x10d DUP3
0x10e MSTORE
0x10f MLOAD
0x110 SWAP1
0x111 DUP2
0x112 SWAP1
0x113 SUB
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP1
0x118 RETURN
---
0xfc: JUMPDEST 
0xfd: V99 = 0x40
0x100: V100 = M[0x40]
0x101: V101 = 0x1
0x103: V102 = 0xa0
0x105: V103 = 0x2
0x107: V104 = EXP 0x2 0xa0
0x108: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x10e: M[V100] = V106
0x10f: V107 = M[0x40]
0x113: V108 = SUB V100 V107
0x114: V109 = 0x20
0x116: V110 = ADD 0x20 V108
0x118: RETURN V107 V110
---
Entry stack: [V10, 0xfc, V56]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xfc]

================================

Block 0x119
[0x119:0x13e]
---
Predecessors: [0x9a]
Successors: []
---
0x119 JUMPDEST
0x11a PUSH1 0x40
0x11c MLOAD
0x11d DUP1
0x11e DUP4
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 AND
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c ADD
0x12d DUP3
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP3
0x134 POP
0x135 POP
0x136 POP
0x137 PUSH1 0x40
0x139 MLOAD
0x13a DUP1
0x13b SWAP2
0x13c SUB
0x13d SWAP1
0x13e RETURN
---
0x119: JUMPDEST 
0x11a: V111 = 0x40
0x11c: V112 = M[0x40]
0x11f: V113 = 0x1
0x121: V114 = 0xa0
0x123: V115 = 0x2
0x125: V116 = EXP 0x2 0xa0
0x126: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x129: M[V112] = V118
0x12a: V119 = 0x20
0x12c: V120 = ADD 0x20 V112
0x12f: M[V120] = V70
0x130: V121 = 0x20
0x132: V122 = ADD 0x20 V120
0x137: V123 = 0x40
0x139: V124 = M[0x40]
0x13c: V125 = SUB V122 V124
0x13e: RETURN V124 V125
---
Entry stack: [V10, 0x119, V76, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x119]

================================

Block 0x13f
[0x13f:0x17b]
---
Predecessors: [0xbb]
Successors: [0x17c, 0x19e]
---
0x13f JUMPDEST
0x140 PUSH1 0x40
0x142 MLOAD
0x143 PUSH1 0x64
0x145 PUSH1 0x2
0x147 DUP5
0x148 MUL
0x149 DIV
0x14a SWAP5
0x14b POP
0x14c PUSH1 0x1
0x14e PUSH1 0xa0
0x150 PUSH1 0x2
0x152 EXP
0x153 SUB
0x154 CALLER
0x155 AND
0x156 SWAP1
0x157 PUSH1 0x0
0x159 SWAP1
0x15a DUP7
0x15b SWAP1
0x15c DUP3
0x15d DUP2
0x15e DUP2
0x15f DUP2
0x160 DUP6
0x161 DUP9
0x162 DUP4
0x163 CALL
0x164 POP
0x165 POP
0x166 PUSH1 0x13
0x168 SLOAD
0x169 PUSH1 0x64
0x16b PUSH1 0x3c
0x16d SWAP1
0x16e SWAP2
0x16f MUL
0x170 DIV
0x171 SWAP6
0x172 POP
0x173 POP
0x174 DUP5
0x175 EQ
0x176 SWAP1
0x177 POP
0x178 PUSH2 0x19e
0x17b JUMPI
---
0x13f: JUMPDEST 
0x140: V126 = 0x40
0x142: V127 = M[0x40]
0x143: V128 = 0x64
0x145: V129 = 0x2
0x148: V130 = MUL 0x0 0x2
0x149: V131 = DIV 0x0 0x64
0x14c: V132 = 0x1
0x14e: V133 = 0xa0
0x150: V134 = 0x2
0x152: V135 = EXP 0x2 0xa0
0x153: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x154: V137 = CALLER
0x155: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x157: V139 = 0x0
0x163: V140 = CALL 0x0 V138 0x0 V127 0x0 V127 0x0
0x166: V141 = 0x13
0x168: V142 = S[0x13]
0x169: V143 = 0x64
0x16b: V144 = 0x3c
0x16f: V145 = MUL V142 0x3c
0x170: V146 = DIV V145 0x64
0x175: V147 = EQ V146 0x0
0x178: V148 = 0x19e
0x17b: JUMPI 0x19e V147
---
Entry stack: [V10, S5, {0xf8, 0xfa}, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, V146, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, 0x0, V146, 0x0, 0x0]

================================

Block 0x17c
[0x17c:0x19d]
---
Predecessors: [0x13f]
Successors: [0x19e]
---
0x17c PUSH1 0x40
0x17e MLOAD
0x17f PUSH1 0x12
0x181 SLOAD
0x182 PUSH1 0x1
0x184 PUSH1 0xa0
0x186 PUSH1 0x2
0x188 EXP
0x189 SUB
0x18a AND
0x18b SWAP1
0x18c PUSH1 0x0
0x18e SWAP1
0x18f DUP6
0x190 SWAP1
0x191 DUP3
0x192 DUP2
0x193 DUP2
0x194 DUP2
0x195 DUP6
0x196 DUP9
0x197 DUP4
0x198 CALL
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d POP
---
0x17c: V149 = 0x40
0x17e: V150 = M[0x40]
0x17f: V151 = 0x12
0x181: V152 = S[0x12]
0x182: V153 = 0x1
0x184: V154 = 0xa0
0x186: V155 = 0x2
0x188: V156 = EXP 0x2 0xa0
0x189: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x18c: V159 = 0x0
0x198: V160 = CALL 0x0 V158 V146 V150 0x0 V150 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, 0x0, V146, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, 0x0, V146, 0x0, 0x0]

================================

Block 0x19e
[0x19e:0x1d8]
---
Predecessors: [0x13f, 0x17c]
Successors: [0x1d9, 0x203]
---
0x19e JUMPDEST
0x19f PUSH1 0x12
0x1a1 DUP1
0x1a2 SLOAD
0x1a3 PUSH1 0x10
0x1a5 SLOAD
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae AND
0x1af PUSH1 0x1
0x1b1 PUSH1 0xa0
0x1b3 PUSH1 0x2
0x1b5 EXP
0x1b6 SUB
0x1b7 NOT
0x1b8 SWAP1
0x1b9 SWAP2
0x1ba AND
0x1bb OR
0x1bc SWAP1
0x1bd SSTORE
0x1be PUSH1 0x11
0x1c0 SLOAD
0x1c1 PUSH1 0x13
0x1c3 DUP2
0x1c4 SWAP1
0x1c5 SSTORE
0x1c6 PUSH1 0x64
0x1c8 PUSH1 0x2
0x1ca SWAP2
0x1cb SWAP1
0x1cc SWAP2
0x1cd MUL
0x1ce DIV
0x1cf SWAP4
0x1d0 POP
0x1d1 PUSH1 0x0
0x1d3 DUP5
0x1d4 EQ
0x1d5 PUSH2 0x203
0x1d8 JUMPI
---
0x19e: JUMPDEST 
0x19f: V161 = 0x12
0x1a2: V162 = S[0x12]
0x1a3: V163 = 0x10
0x1a5: V164 = S[0x10]
0x1a6: V165 = 0x1
0x1a8: V166 = 0xa0
0x1aa: V167 = 0x2
0x1ac: V168 = EXP 0x2 0xa0
0x1ad: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1af: V171 = 0x1
0x1b1: V172 = 0xa0
0x1b3: V173 = 0x2
0x1b5: V174 = EXP 0x2 0xa0
0x1b6: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b7: V176 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V177 = AND V162 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x1bb: V178 = OR V177 V170
0x1bd: S[0x12] = V178
0x1be: V179 = 0x11
0x1c0: V180 = S[0x11]
0x1c1: V181 = 0x13
0x1c5: S[0x13] = V180
0x1c6: V182 = 0x64
0x1c8: V183 = 0x2
0x1cd: V184 = MUL 0x2 V180
0x1ce: V185 = DIV V184 0x64
0x1d1: V186 = 0x0
0x1d4: V187 = EQ V185 0x0
0x1d5: V188 = 0x203
0x1d8: JUMPI 0x203 V187
---
Entry stack: [V10, S5, {0xf8, 0xfa}, 0x0, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V185, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V185, V146, 0x0, 0x0]

================================

Block 0x1d9
[0x1d9:0x202]
---
Predecessors: [0x19e]
Successors: [0x203]
---
0x1d9 PUSH1 0x0
0x1db PUSH1 0x9
0x1dd POP
0x1de PUSH1 0x12
0x1e0 SWAP1
0x1e1 POP
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 SWAP1
0x1e6 SLOAD
0x1e7 PUSH1 0x1
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SUB
0x1ef AND
0x1f0 SWAP1
0x1f1 PUSH1 0x0
0x1f3 SWAP1
0x1f4 DUP7
0x1f5 SWAP1
0x1f6 DUP3
0x1f7 DUP2
0x1f8 DUP2
0x1f9 DUP2
0x1fa DUP6
0x1fb DUP9
0x1fc DUP4
0x1fd CALL
0x1fe POP
0x1ff POP
0x200 POP
0x201 POP
0x202 POP
---
0x1d9: V189 = 0x0
0x1db: V190 = 0x9
0x1de: V191 = 0x12
0x1e2: V192 = 0x40
0x1e4: V193 = M[0x40]
0x1e6: V194 = S[0x12]
0x1e7: V195 = 0x1
0x1e9: V196 = 0xa0
0x1eb: V197 = 0x2
0x1ed: V198 = EXP 0x2 0xa0
0x1ee: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x1f1: V201 = 0x0
0x1fd: V202 = CALL 0x0 V200 V185 V193 0x0 V193 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V185, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V185, V146, 0x0, 0x0]

================================

Block 0x203
[0x203:0x241]
---
Predecessors: [0x19e, 0x1d9]
Successors: [0x242, 0x26c]
---
0x203 JUMPDEST
0x204 PUSH1 0xe
0x206 SLOAD
0x207 PUSH1 0x10
0x209 DUP1
0x20a SLOAD
0x20b PUSH1 0x1
0x20d PUSH1 0xa0
0x20f PUSH1 0x2
0x211 EXP
0x212 SUB
0x213 NOT
0x214 AND
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d SWAP3
0x21e SWAP1
0x21f SWAP3
0x220 AND
0x221 SWAP2
0x222 SWAP1
0x223 SWAP2
0x224 OR
0x225 SWAP1
0x226 SSTORE
0x227 PUSH1 0xf
0x229 SLOAD
0x22a PUSH1 0x11
0x22c DUP2
0x22d SWAP1
0x22e SSTORE
0x22f PUSH1 0x64
0x231 PUSH1 0x2
0x233 SWAP2
0x234 SWAP1
0x235 SWAP2
0x236 MUL
0x237 DIV
0x238 SWAP4
0x239 POP
0x23a PUSH1 0x0
0x23c DUP5
0x23d EQ
0x23e PUSH2 0x26c
0x241 JUMPI
---
0x203: JUMPDEST 
0x204: V203 = 0xe
0x206: V204 = S[0xe]
0x207: V205 = 0x10
0x20a: V206 = S[0x10]
0x20b: V207 = 0x1
0x20d: V208 = 0xa0
0x20f: V209 = 0x2
0x211: V210 = EXP 0x2 0xa0
0x212: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x213: V212 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x214: V213 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V206
0x215: V214 = 0x1
0x217: V215 = 0xa0
0x219: V216 = 0x2
0x21b: V217 = EXP 0x2 0xa0
0x21c: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x224: V220 = OR V219 V213
0x226: S[0x10] = V220
0x227: V221 = 0xf
0x229: V222 = S[0xf]
0x22a: V223 = 0x11
0x22e: S[0x11] = V222
0x22f: V224 = 0x64
0x231: V225 = 0x2
0x236: V226 = MUL 0x2 V222
0x237: V227 = DIV V226 0x64
0x23a: V228 = 0x0
0x23d: V229 = EQ V227 0x0
0x23e: V230 = 0x26c
0x241: JUMPI 0x26c V229
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V185, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V227, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V227, V146, 0x0, 0x0]

================================

Block 0x242
[0x242:0x26b]
---
Predecessors: [0x203]
Successors: [0x26c]
---
0x242 PUSH1 0x0
0x244 PUSH1 0x8
0x246 POP
0x247 PUSH1 0x10
0x249 SWAP1
0x24a POP
0x24b PUSH1 0x40
0x24d MLOAD
0x24e SWAP1
0x24f SLOAD
0x250 PUSH1 0x1
0x252 PUSH1 0xa0
0x254 PUSH1 0x2
0x256 EXP
0x257 SUB
0x258 AND
0x259 SWAP1
0x25a PUSH1 0x0
0x25c SWAP1
0x25d DUP7
0x25e SWAP1
0x25f DUP3
0x260 DUP2
0x261 DUP2
0x262 DUP2
0x263 DUP6
0x264 DUP9
0x265 DUP4
0x266 CALL
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b POP
---
0x242: V231 = 0x0
0x244: V232 = 0x8
0x247: V233 = 0x10
0x24b: V234 = 0x40
0x24d: V235 = M[0x40]
0x24f: V236 = S[0x10]
0x250: V237 = 0x1
0x252: V238 = 0xa0
0x254: V239 = 0x2
0x256: V240 = EXP 0x2 0xa0
0x257: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x258: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x25a: V243 = 0x0
0x266: V244 = CALL 0x0 V242 V227 V235 0x0 V235 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V227, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V227, V146, 0x0, 0x0]

================================

Block 0x26c
[0x26c:0x2aa]
---
Predecessors: [0x203, 0x242]
Successors: [0x2ab, 0x2d5]
---
0x26c JUMPDEST
0x26d PUSH1 0xc
0x26f SLOAD
0x270 PUSH1 0xe
0x272 DUP1
0x273 SLOAD
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c NOT
0x27d AND
0x27e PUSH1 0x1
0x280 PUSH1 0xa0
0x282 PUSH1 0x2
0x284 EXP
0x285 SUB
0x286 SWAP3
0x287 SWAP1
0x288 SWAP3
0x289 AND
0x28a SWAP2
0x28b SWAP1
0x28c SWAP2
0x28d OR
0x28e SWAP1
0x28f SSTORE
0x290 PUSH1 0xd
0x292 SLOAD
0x293 PUSH1 0xf
0x295 DUP2
0x296 SWAP1
0x297 SSTORE
0x298 PUSH1 0x64
0x29a PUSH1 0x2
0x29c SWAP2
0x29d SWAP1
0x29e SWAP2
0x29f MUL
0x2a0 DIV
0x2a1 SWAP4
0x2a2 POP
0x2a3 PUSH1 0x0
0x2a5 DUP5
0x2a6 EQ
0x2a7 PUSH2 0x2d5
0x2aa JUMPI
---
0x26c: JUMPDEST 
0x26d: V245 = 0xc
0x26f: V246 = S[0xc]
0x270: V247 = 0xe
0x273: V248 = S[0xe]
0x274: V249 = 0x1
0x276: V250 = 0xa0
0x278: V251 = 0x2
0x27a: V252 = EXP 0x2 0xa0
0x27b: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V254 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V255 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V248
0x27e: V256 = 0x1
0x280: V257 = 0xa0
0x282: V258 = 0x2
0x284: V259 = EXP 0x2 0xa0
0x285: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x289: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x28d: V262 = OR V261 V255
0x28f: S[0xe] = V262
0x290: V263 = 0xd
0x292: V264 = S[0xd]
0x293: V265 = 0xf
0x297: S[0xf] = V264
0x298: V266 = 0x64
0x29a: V267 = 0x2
0x29f: V268 = MUL 0x2 V264
0x2a0: V269 = DIV V268 0x64
0x2a3: V270 = 0x0
0x2a6: V271 = EQ V269 0x0
0x2a7: V272 = 0x2d5
0x2aa: JUMPI 0x2d5 V271
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V227, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V269, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V269, V146, 0x0, 0x0]

================================

Block 0x2ab
[0x2ab:0x2d4]
---
Predecessors: [0x26c]
Successors: [0x2d5]
---
0x2ab PUSH1 0x0
0x2ad PUSH1 0x7
0x2af POP
0x2b0 PUSH1 0xe
0x2b2 SWAP1
0x2b3 POP
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 SWAP1
0x2b8 SLOAD
0x2b9 PUSH1 0x1
0x2bb PUSH1 0xa0
0x2bd PUSH1 0x2
0x2bf EXP
0x2c0 SUB
0x2c1 AND
0x2c2 SWAP1
0x2c3 PUSH1 0x0
0x2c5 SWAP1
0x2c6 DUP7
0x2c7 SWAP1
0x2c8 DUP3
0x2c9 DUP2
0x2ca DUP2
0x2cb DUP2
0x2cc DUP6
0x2cd DUP9
0x2ce DUP4
0x2cf CALL
0x2d0 POP
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 POP
---
0x2ab: V273 = 0x0
0x2ad: V274 = 0x7
0x2b0: V275 = 0xe
0x2b4: V276 = 0x40
0x2b6: V277 = M[0x40]
0x2b8: V278 = S[0xe]
0x2b9: V279 = 0x1
0x2bb: V280 = 0xa0
0x2bd: V281 = 0x2
0x2bf: V282 = EXP 0x2 0xa0
0x2c0: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c1: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x2c3: V285 = 0x0
0x2cf: V286 = CALL 0x0 V284 V269 V277 0x0 V277 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V269, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V269, V146, 0x0, 0x0]

================================

Block 0x2d5
[0x2d5:0x313]
---
Predecessors: [0x26c, 0x2ab]
Successors: [0x314, 0x33e]
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0xa
0x2d8 SLOAD
0x2d9 PUSH1 0xc
0x2db DUP1
0x2dc SLOAD
0x2dd PUSH1 0x1
0x2df PUSH1 0xa0
0x2e1 PUSH1 0x2
0x2e3 EXP
0x2e4 SUB
0x2e5 NOT
0x2e6 AND
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef SWAP3
0x2f0 SWAP1
0x2f1 SWAP3
0x2f2 AND
0x2f3 SWAP2
0x2f4 SWAP1
0x2f5 SWAP2
0x2f6 OR
0x2f7 SWAP1
0x2f8 SSTORE
0x2f9 PUSH1 0xb
0x2fb SLOAD
0x2fc PUSH1 0xd
0x2fe DUP2
0x2ff SWAP1
0x300 SSTORE
0x301 PUSH1 0x64
0x303 PUSH1 0x2
0x305 SWAP2
0x306 SWAP1
0x307 SWAP2
0x308 MUL
0x309 DIV
0x30a SWAP4
0x30b POP
0x30c PUSH1 0x0
0x30e DUP5
0x30f EQ
0x310 PUSH2 0x33e
0x313 JUMPI
---
0x2d5: JUMPDEST 
0x2d6: V287 = 0xa
0x2d8: V288 = S[0xa]
0x2d9: V289 = 0xc
0x2dc: V290 = S[0xc]
0x2dd: V291 = 0x1
0x2df: V292 = 0xa0
0x2e1: V293 = 0x2
0x2e3: V294 = EXP 0x2 0xa0
0x2e4: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e5: V296 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V297 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V290
0x2e7: V298 = 0x1
0x2e9: V299 = 0xa0
0x2eb: V300 = 0x2
0x2ed: V301 = EXP 0x2 0xa0
0x2ee: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f2: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x2f6: V304 = OR V303 V297
0x2f8: S[0xc] = V304
0x2f9: V305 = 0xb
0x2fb: V306 = S[0xb]
0x2fc: V307 = 0xd
0x300: S[0xd] = V306
0x301: V308 = 0x64
0x303: V309 = 0x2
0x308: V310 = MUL 0x2 V306
0x309: V311 = DIV V310 0x64
0x30c: V312 = 0x0
0x30f: V313 = EQ V311 0x0
0x310: V314 = 0x33e
0x313: JUMPI 0x33e V313
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V269, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V311, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V311, V146, 0x0, 0x0]

================================

Block 0x314
[0x314:0x33d]
---
Predecessors: [0x2d5]
Successors: [0x33e]
---
0x314 PUSH1 0x0
0x316 PUSH1 0x6
0x318 POP
0x319 PUSH1 0xc
0x31b SWAP1
0x31c POP
0x31d PUSH1 0x40
0x31f MLOAD
0x320 SWAP1
0x321 SLOAD
0x322 PUSH1 0x1
0x324 PUSH1 0xa0
0x326 PUSH1 0x2
0x328 EXP
0x329 SUB
0x32a AND
0x32b SWAP1
0x32c PUSH1 0x0
0x32e SWAP1
0x32f DUP7
0x330 SWAP1
0x331 DUP3
0x332 DUP2
0x333 DUP2
0x334 DUP2
0x335 DUP6
0x336 DUP9
0x337 DUP4
0x338 CALL
0x339 POP
0x33a POP
0x33b POP
0x33c POP
0x33d POP
---
0x314: V315 = 0x0
0x316: V316 = 0x6
0x319: V317 = 0xc
0x31d: V318 = 0x40
0x31f: V319 = M[0x40]
0x321: V320 = S[0xc]
0x322: V321 = 0x1
0x324: V322 = 0xa0
0x326: V323 = 0x2
0x328: V324 = EXP 0x2 0xa0
0x329: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32a: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x32c: V327 = 0x0
0x338: V328 = CALL 0x0 V326 V311 V319 0x0 V319 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V311, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V311, V146, 0x0, 0x0]

================================

Block 0x33e
[0x33e:0x37c]
---
Predecessors: [0x2d5, 0x314]
Successors: [0x37d, 0x3a7]
---
0x33e JUMPDEST
0x33f PUSH1 0x8
0x341 SLOAD
0x342 PUSH1 0xa
0x344 DUP1
0x345 SLOAD
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e NOT
0x34f AND
0x350 PUSH1 0x1
0x352 PUSH1 0xa0
0x354 PUSH1 0x2
0x356 EXP
0x357 SUB
0x358 SWAP3
0x359 SWAP1
0x35a SWAP3
0x35b AND
0x35c SWAP2
0x35d SWAP1
0x35e SWAP2
0x35f OR
0x360 SWAP1
0x361 SSTORE
0x362 PUSH1 0x9
0x364 SLOAD
0x365 PUSH1 0xb
0x367 DUP2
0x368 SWAP1
0x369 SSTORE
0x36a PUSH1 0x64
0x36c PUSH1 0x2
0x36e SWAP2
0x36f SWAP1
0x370 SWAP2
0x371 MUL
0x372 DIV
0x373 SWAP4
0x374 POP
0x375 PUSH1 0x0
0x377 DUP5
0x378 EQ
0x379 PUSH2 0x3a7
0x37c JUMPI
---
0x33e: JUMPDEST 
0x33f: V329 = 0x8
0x341: V330 = S[0x8]
0x342: V331 = 0xa
0x345: V332 = S[0xa]
0x346: V333 = 0x1
0x348: V334 = 0xa0
0x34a: V335 = 0x2
0x34c: V336 = EXP 0x2 0xa0
0x34d: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34e: V338 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V339 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V332
0x350: V340 = 0x1
0x352: V341 = 0xa0
0x354: V342 = 0x2
0x356: V343 = EXP 0x2 0xa0
0x357: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35b: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x35f: V346 = OR V345 V339
0x361: S[0xa] = V346
0x362: V347 = 0x9
0x364: V348 = S[0x9]
0x365: V349 = 0xb
0x369: S[0xb] = V348
0x36a: V350 = 0x64
0x36c: V351 = 0x2
0x371: V352 = MUL 0x2 V348
0x372: V353 = DIV V352 0x64
0x375: V354 = 0x0
0x378: V355 = EQ V353 0x0
0x379: V356 = 0x3a7
0x37c: JUMPI 0x3a7 V355
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V311, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V353, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V353, V146, 0x0, 0x0]

================================

Block 0x37d
[0x37d:0x3a6]
---
Predecessors: [0x33e]
Successors: [0x3a7]
---
0x37d PUSH1 0x0
0x37f PUSH1 0x5
0x381 POP
0x382 PUSH1 0xa
0x384 SWAP1
0x385 POP
0x386 PUSH1 0x40
0x388 MLOAD
0x389 SWAP1
0x38a SLOAD
0x38b PUSH1 0x1
0x38d PUSH1 0xa0
0x38f PUSH1 0x2
0x391 EXP
0x392 SUB
0x393 AND
0x394 SWAP1
0x395 PUSH1 0x0
0x397 SWAP1
0x398 DUP7
0x399 SWAP1
0x39a DUP3
0x39b DUP2
0x39c DUP2
0x39d DUP2
0x39e DUP6
0x39f DUP9
0x3a0 DUP4
0x3a1 CALL
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 POP
0x3a6 POP
---
0x37d: V357 = 0x0
0x37f: V358 = 0x5
0x382: V359 = 0xa
0x386: V360 = 0x40
0x388: V361 = M[0x40]
0x38a: V362 = S[0xa]
0x38b: V363 = 0x1
0x38d: V364 = 0xa0
0x38f: V365 = 0x2
0x391: V366 = EXP 0x2 0xa0
0x392: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x393: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x395: V369 = 0x0
0x3a1: V370 = CALL 0x0 V368 V353 V361 0x0 V361 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V353, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V353, V146, 0x0, 0x0]

================================

Block 0x3a7
[0x3a7:0x3e5]
---
Predecessors: [0x33e, 0x37d]
Successors: [0x3e6, 0x410]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x6
0x3aa SLOAD
0x3ab PUSH1 0x8
0x3ad DUP1
0x3ae SLOAD
0x3af PUSH1 0x1
0x3b1 PUSH1 0xa0
0x3b3 PUSH1 0x2
0x3b5 EXP
0x3b6 SUB
0x3b7 NOT
0x3b8 AND
0x3b9 PUSH1 0x1
0x3bb PUSH1 0xa0
0x3bd PUSH1 0x2
0x3bf EXP
0x3c0 SUB
0x3c1 SWAP3
0x3c2 SWAP1
0x3c3 SWAP3
0x3c4 AND
0x3c5 SWAP2
0x3c6 SWAP1
0x3c7 SWAP2
0x3c8 OR
0x3c9 SWAP1
0x3ca SSTORE
0x3cb PUSH1 0x7
0x3cd SLOAD
0x3ce PUSH1 0x9
0x3d0 DUP2
0x3d1 SWAP1
0x3d2 SSTORE
0x3d3 PUSH1 0x64
0x3d5 PUSH1 0x2
0x3d7 SWAP2
0x3d8 SWAP1
0x3d9 SWAP2
0x3da MUL
0x3db DIV
0x3dc SWAP4
0x3dd POP
0x3de PUSH1 0x0
0x3e0 DUP5
0x3e1 EQ
0x3e2 PUSH2 0x410
0x3e5 JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V371 = 0x6
0x3aa: V372 = S[0x6]
0x3ab: V373 = 0x8
0x3ae: V374 = S[0x8]
0x3af: V375 = 0x1
0x3b1: V376 = 0xa0
0x3b3: V377 = 0x2
0x3b5: V378 = EXP 0x2 0xa0
0x3b6: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b7: V380 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b8: V381 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V374
0x3b9: V382 = 0x1
0x3bb: V383 = 0xa0
0x3bd: V384 = 0x2
0x3bf: V385 = EXP 0x2 0xa0
0x3c0: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c4: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x3c8: V388 = OR V387 V381
0x3ca: S[0x8] = V388
0x3cb: V389 = 0x7
0x3cd: V390 = S[0x7]
0x3ce: V391 = 0x9
0x3d2: S[0x9] = V390
0x3d3: V392 = 0x64
0x3d5: V393 = 0x2
0x3da: V394 = MUL 0x2 V390
0x3db: V395 = DIV V394 0x64
0x3de: V396 = 0x0
0x3e1: V397 = EQ V395 0x0
0x3e2: V398 = 0x410
0x3e5: JUMPI 0x410 V397
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V353, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V395, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V395, V146, 0x0, 0x0]

================================

Block 0x3e6
[0x3e6:0x40f]
---
Predecessors: [0x3a7]
Successors: [0x410]
---
0x3e6 PUSH1 0x0
0x3e8 PUSH1 0x4
0x3ea POP
0x3eb PUSH1 0x8
0x3ed SWAP1
0x3ee POP
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 SWAP1
0x3f3 SLOAD
0x3f4 PUSH1 0x1
0x3f6 PUSH1 0xa0
0x3f8 PUSH1 0x2
0x3fa EXP
0x3fb SUB
0x3fc AND
0x3fd SWAP1
0x3fe PUSH1 0x0
0x400 SWAP1
0x401 DUP7
0x402 SWAP1
0x403 DUP3
0x404 DUP2
0x405 DUP2
0x406 DUP2
0x407 DUP6
0x408 DUP9
0x409 DUP4
0x40a CALL
0x40b POP
0x40c POP
0x40d POP
0x40e POP
0x40f POP
---
0x3e6: V399 = 0x0
0x3e8: V400 = 0x4
0x3eb: V401 = 0x8
0x3ef: V402 = 0x40
0x3f1: V403 = M[0x40]
0x3f3: V404 = S[0x8]
0x3f4: V405 = 0x1
0x3f6: V406 = 0xa0
0x3f8: V407 = 0x2
0x3fa: V408 = EXP 0x2 0xa0
0x3fb: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fc: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x3fe: V411 = 0x0
0x40a: V412 = CALL 0x0 V410 V395 V403 0x0 V403 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V395, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V395, V146, 0x0, 0x0]

================================

Block 0x410
[0x410:0x44e]
---
Predecessors: [0x3a7, 0x3e6]
Successors: [0x44f, 0x479]
---
0x410 JUMPDEST
0x411 PUSH1 0x4
0x413 SLOAD
0x414 PUSH1 0x6
0x416 DUP1
0x417 SLOAD
0x418 PUSH1 0x1
0x41a PUSH1 0xa0
0x41c PUSH1 0x2
0x41e EXP
0x41f SUB
0x420 NOT
0x421 AND
0x422 PUSH1 0x1
0x424 PUSH1 0xa0
0x426 PUSH1 0x2
0x428 EXP
0x429 SUB
0x42a SWAP3
0x42b SWAP1
0x42c SWAP3
0x42d AND
0x42e SWAP2
0x42f SWAP1
0x430 SWAP2
0x431 OR
0x432 SWAP1
0x433 SSTORE
0x434 PUSH1 0x5
0x436 SLOAD
0x437 PUSH1 0x7
0x439 DUP2
0x43a SWAP1
0x43b SSTORE
0x43c PUSH1 0x64
0x43e PUSH1 0x2
0x440 SWAP2
0x441 SWAP1
0x442 SWAP2
0x443 MUL
0x444 DIV
0x445 SWAP4
0x446 POP
0x447 PUSH1 0x0
0x449 DUP5
0x44a EQ
0x44b PUSH2 0x479
0x44e JUMPI
---
0x410: JUMPDEST 
0x411: V413 = 0x4
0x413: V414 = S[0x4]
0x414: V415 = 0x6
0x417: V416 = S[0x6]
0x418: V417 = 0x1
0x41a: V418 = 0xa0
0x41c: V419 = 0x2
0x41e: V420 = EXP 0x2 0xa0
0x41f: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x420: V422 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x421: V423 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V416
0x422: V424 = 0x1
0x424: V425 = 0xa0
0x426: V426 = 0x2
0x428: V427 = EXP 0x2 0xa0
0x429: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42d: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x431: V430 = OR V429 V423
0x433: S[0x6] = V430
0x434: V431 = 0x5
0x436: V432 = S[0x5]
0x437: V433 = 0x7
0x43b: S[0x7] = V432
0x43c: V434 = 0x64
0x43e: V435 = 0x2
0x443: V436 = MUL 0x2 V432
0x444: V437 = DIV V436 0x64
0x447: V438 = 0x0
0x44a: V439 = EQ V437 0x0
0x44b: V440 = 0x479
0x44e: JUMPI 0x479 V439
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V395, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V437, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V437, V146, 0x0, 0x0]

================================

Block 0x44f
[0x44f:0x478]
---
Predecessors: [0x410]
Successors: [0x479]
---
0x44f PUSH1 0x0
0x451 PUSH1 0x3
0x453 POP
0x454 PUSH1 0x6
0x456 SWAP1
0x457 POP
0x458 PUSH1 0x40
0x45a MLOAD
0x45b SWAP1
0x45c SLOAD
0x45d PUSH1 0x1
0x45f PUSH1 0xa0
0x461 PUSH1 0x2
0x463 EXP
0x464 SUB
0x465 AND
0x466 SWAP1
0x467 PUSH1 0x0
0x469 SWAP1
0x46a DUP7
0x46b SWAP1
0x46c DUP3
0x46d DUP2
0x46e DUP2
0x46f DUP2
0x470 DUP6
0x471 DUP9
0x472 DUP4
0x473 CALL
0x474 POP
0x475 POP
0x476 POP
0x477 POP
0x478 POP
---
0x44f: V441 = 0x0
0x451: V442 = 0x3
0x454: V443 = 0x6
0x458: V444 = 0x40
0x45a: V445 = M[0x40]
0x45c: V446 = S[0x6]
0x45d: V447 = 0x1
0x45f: V448 = 0xa0
0x461: V449 = 0x2
0x463: V450 = EXP 0x2 0xa0
0x464: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x465: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x467: V453 = 0x0
0x473: V454 = CALL 0x0 V452 V437 V445 0x0 V445 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V437, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V437, V146, 0x0, 0x0]

================================

Block 0x479
[0x479:0x4b4]
---
Predecessors: [0x410, 0x44f]
Successors: [0x4b5, 0x4df]
---
0x479 JUMPDEST
0x47a PUSH1 0x2
0x47c DUP1
0x47d SLOAD
0x47e PUSH1 0x4
0x480 DUP1
0x481 SLOAD
0x482 PUSH1 0x1
0x484 PUSH1 0xa0
0x486 PUSH1 0x2
0x488 EXP
0x489 SUB
0x48a NOT
0x48b AND
0x48c PUSH1 0x1
0x48e PUSH1 0xa0
0x490 PUSH1 0x2
0x492 EXP
0x493 SUB
0x494 SWAP3
0x495 SWAP1
0x496 SWAP3
0x497 AND
0x498 SWAP2
0x499 SWAP1
0x49a SWAP2
0x49b OR
0x49c SWAP1
0x49d SSTORE
0x49e PUSH1 0x3
0x4a0 SLOAD
0x4a1 PUSH1 0x5
0x4a3 DUP2
0x4a4 SWAP1
0x4a5 SSTORE
0x4a6 PUSH1 0x64
0x4a8 SWAP2
0x4a9 MUL
0x4aa DIV
0x4ab SWAP4
0x4ac POP
0x4ad PUSH1 0x0
0x4af DUP5
0x4b0 EQ
0x4b1 PUSH2 0x4df
0x4b4 JUMPI
---
0x479: JUMPDEST 
0x47a: V455 = 0x2
0x47d: V456 = S[0x2]
0x47e: V457 = 0x4
0x481: V458 = S[0x4]
0x482: V459 = 0x1
0x484: V460 = 0xa0
0x486: V461 = 0x2
0x488: V462 = EXP 0x2 0xa0
0x489: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48a: V464 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x48b: V465 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V458
0x48c: V466 = 0x1
0x48e: V467 = 0xa0
0x490: V468 = 0x2
0x492: V469 = EXP 0x2 0xa0
0x493: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x49b: V472 = OR V471 V465
0x49d: S[0x4] = V472
0x49e: V473 = 0x3
0x4a0: V474 = S[0x3]
0x4a1: V475 = 0x5
0x4a5: S[0x5] = V474
0x4a6: V476 = 0x64
0x4a9: V477 = MUL 0x2 V474
0x4aa: V478 = DIV V477 0x64
0x4ad: V479 = 0x0
0x4b0: V480 = EQ V478 0x0
0x4b1: V481 = 0x4df
0x4b4: JUMPI 0x4df V480
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V437, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V478, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V478, V146, 0x0, 0x0]

================================

Block 0x4b5
[0x4b5:0x4de]
---
Predecessors: [0x479]
Successors: [0x4df]
---
0x4b5 PUSH1 0x0
0x4b7 PUSH1 0x2
0x4b9 POP
0x4ba PUSH1 0x4
0x4bc SWAP1
0x4bd POP
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 SWAP1
0x4c2 SLOAD
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0xa0
0x4c7 PUSH1 0x2
0x4c9 EXP
0x4ca SUB
0x4cb AND
0x4cc SWAP1
0x4cd PUSH1 0x0
0x4cf SWAP1
0x4d0 DUP7
0x4d1 SWAP1
0x4d2 DUP3
0x4d3 DUP2
0x4d4 DUP2
0x4d5 DUP2
0x4d6 DUP6
0x4d7 DUP9
0x4d8 DUP4
0x4d9 CALL
0x4da POP
0x4db POP
0x4dc POP
0x4dd POP
0x4de POP
---
0x4b5: V482 = 0x0
0x4b7: V483 = 0x2
0x4ba: V484 = 0x4
0x4be: V485 = 0x40
0x4c0: V486 = M[0x40]
0x4c2: V487 = S[0x4]
0x4c3: V488 = 0x1
0x4c5: V489 = 0xa0
0x4c7: V490 = 0x2
0x4c9: V491 = EXP 0x2 0xa0
0x4ca: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cb: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x4cd: V494 = 0x0
0x4d9: V495 = CALL 0x0 V493 V478 V486 0x0 V486 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V478, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V478, V146, 0x0, 0x0]

================================

Block 0x4df
[0x4df:0x518]
---
Predecessors: [0x479, 0x4b5]
Successors: [0x519, 0x543]
---
0x4df JUMPDEST
0x4e0 PUSH1 0x0
0x4e2 DUP1
0x4e3 SLOAD
0x4e4 PUSH1 0x2
0x4e6 DUP1
0x4e7 SLOAD
0x4e8 PUSH1 0x1
0x4ea PUSH1 0xa0
0x4ec PUSH1 0x2
0x4ee EXP
0x4ef SUB
0x4f0 NOT
0x4f1 AND
0x4f2 PUSH1 0x1
0x4f4 PUSH1 0xa0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 SUB
0x4fa SWAP3
0x4fb SWAP1
0x4fc SWAP3
0x4fd AND
0x4fe SWAP2
0x4ff SWAP1
0x500 SWAP2
0x501 OR
0x502 DUP2
0x503 SSTORE
0x504 PUSH1 0x1
0x506 SLOAD
0x507 PUSH1 0x3
0x509 DUP2
0x50a SWAP1
0x50b SSTORE
0x50c PUSH1 0x64
0x50e SWAP2
0x50f MUL
0x510 DIV
0x511 SWAP5
0x512 POP
0x513 DUP5
0x514 EQ
0x515 PUSH2 0x543
0x518 JUMPI
---
0x4df: JUMPDEST 
0x4e0: V496 = 0x0
0x4e3: V497 = S[0x0]
0x4e4: V498 = 0x2
0x4e7: V499 = S[0x2]
0x4e8: V500 = 0x1
0x4ea: V501 = 0xa0
0x4ec: V502 = 0x2
0x4ee: V503 = EXP 0x2 0xa0
0x4ef: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f0: V505 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V506 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V499
0x4f2: V507 = 0x1
0x4f4: V508 = 0xa0
0x4f6: V509 = 0x2
0x4f8: V510 = EXP 0x2 0xa0
0x4f9: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x501: V513 = OR V512 V506
0x503: S[0x2] = V513
0x504: V514 = 0x1
0x506: V515 = S[0x1]
0x507: V516 = 0x3
0x50b: S[0x3] = V515
0x50c: V517 = 0x64
0x50f: V518 = MUL 0x2 V515
0x510: V519 = DIV V518 0x64
0x514: V520 = EQ V519 0x0
0x515: V521 = 0x543
0x518: JUMPI 0x543 V520
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V478, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [V519, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V519, V146, 0x0, 0x0]

================================

Block 0x519
[0x519:0x542]
---
Predecessors: [0x4df]
Successors: [0x543]
---
0x519 PUSH1 0x0
0x51b PUSH1 0x1
0x51d POP
0x51e PUSH1 0x2
0x520 SWAP1
0x521 POP
0x522 PUSH1 0x40
0x524 MLOAD
0x525 SWAP1
0x526 SLOAD
0x527 PUSH1 0x1
0x529 PUSH1 0xa0
0x52b PUSH1 0x2
0x52d EXP
0x52e SUB
0x52f AND
0x530 SWAP1
0x531 PUSH1 0x0
0x533 SWAP1
0x534 DUP7
0x535 SWAP1
0x536 DUP3
0x537 DUP2
0x538 DUP2
0x539 DUP2
0x53a DUP6
0x53b DUP9
0x53c DUP4
0x53d CALL
0x53e POP
0x53f POP
0x540 POP
0x541 POP
0x542 POP
---
0x519: V522 = 0x0
0x51b: V523 = 0x1
0x51e: V524 = 0x2
0x522: V525 = 0x40
0x524: V526 = M[0x40]
0x526: V527 = S[0x2]
0x527: V528 = 0x1
0x529: V529 = 0xa0
0x52b: V530 = 0x2
0x52d: V531 = EXP 0x2 0xa0
0x52e: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52f: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x531: V534 = 0x0
0x53d: V535 = CALL 0x0 V533 V519 V526 0x0 V526 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V519, V146, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0xf8, 0xfa}, V519, V146, 0x0, 0x0]

================================

Block 0x543
[0x543:0x586]
---
Predecessors: [0x4df, 0x519]
Successors: [0x587]
---
0x543 JUMPDEST
0x544 POP
0x545 POP
0x546 PUSH1 0x0
0x548 DUP1
0x549 SLOAD
0x54a PUSH1 0x1
0x54c PUSH1 0xa0
0x54e PUSH1 0x2
0x550 EXP
0x551 SUB
0x552 NOT
0x553 AND
0x554 CALLER
0x555 OR
0x556 DUP2
0x557 SSTORE
0x558 CALLVALUE
0x559 PUSH1 0x1
0x55b DUP2
0x55c SWAP1
0x55d SSTORE
0x55e PUSH1 0x14
0x560 SLOAD
0x561 PUSH1 0x40
0x563 MLOAD
0x564 SWAP2
0x565 SWAP3
0x566 PUSH1 0x64
0x568 DUP5
0x569 DIV
0x56a SWAP3
0x56b PUSH1 0x1
0x56d PUSH1 0xa0
0x56f PUSH1 0x2
0x571 EXP
0x572 SUB
0x573 SWAP3
0x574 SWAP1
0x575 SWAP3
0x576 AND
0x577 SWAP2
0x578 DUP4
0x579 SWAP1
0x57a DUP3
0x57b DUP2
0x57c DUP2
0x57d DUP2
0x57e DUP6
0x57f DUP9
0x580 DUP4
0x581 CALL
0x582 POP
0x583 POP
0x584 POP
0x585 POP
0x586 POP
---
0x543: JUMPDEST 
0x546: V536 = 0x0
0x549: V537 = S[0x0]
0x54a: V538 = 0x1
0x54c: V539 = 0xa0
0x54e: V540 = 0x2
0x550: V541 = EXP 0x2 0xa0
0x551: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x552: V543 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x553: V544 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V537
0x554: V545 = CALLER
0x555: V546 = OR V545 V544
0x557: S[0x0] = V546
0x558: V547 = CALLVALUE
0x559: V548 = 0x1
0x55d: S[0x1] = V547
0x55e: V549 = 0x14
0x560: V550 = S[0x14]
0x561: V551 = 0x40
0x563: V552 = M[0x40]
0x566: V553 = 0x64
0x569: V554 = DIV V547 0x64
0x56b: V555 = 0x1
0x56d: V556 = 0xa0
0x56f: V557 = 0x2
0x571: V558 = EXP 0x2 0xa0
0x572: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x576: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x581: V561 = CALL 0x0 V560 V554 V552 0x0 V552 0x0
---
Entry stack: [V10, S5, {0xf8, 0xfa}, V519, V146, 0x0, 0x0]
Stack pops: 2
Stack additions: [V547, V554]
Exit stack: [V10, S5, {0xf8, 0xfa}, V519, V146, V547, V554]

================================

Block 0x587
[0x587:0x58c]
---
Predecessors: [0xd4, 0x543]
Successors: [0xf8, 0xfa]
---
0x587 JUMPDEST
0x588 POP
0x589 POP
0x58a POP
0x58b POP
0x58c JUMP
---
0x587: JUMPDEST 
0x58c: JUMP {0xf8, 0xfa}
---
Entry stack: [V10, S5, {0xf8, 0xfa}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S5]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x4b
Exit block: 0xf8
Body: 0x4b, 0x68, 0xf8, 0xfa

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x75
Exit block: 0xfc
Body: 0x75, 0xfc

Function 2:
Public function signature: 0xe4b2fb79
Entry block: 0x87
Exit block: 0x119
Body: 0x87, 0x9a, 0x119

Function 3:
Public function signature: 0xe97dcb62
Entry block: 0xb7
Exit block: 0xf8
Body: 0xb7, 0xbb, 0xd4, 0xf8, 0xfa, 0x13f, 0x17c, 0x19e, 0x1d9, 0x203, 0x242, 0x26c, 0x2ab, 0x2d5, 0x314, 0x33e, 0x37d, 0x3a7, 0x3e6, 0x410, 0x44f, 0x479, 0x4b5, 0x4df, 0x519, 0x543, 0x587

Function 4:
Public fallback function
Entry block: 0x40
Exit block: 0xf8
Body: 0x40, 0xbb, 0xd4, 0xf8, 0xfa, 0x13f, 0x17c, 0x19e, 0x1d9, 0x203, 0x242, 0x26c, 0x2ab, 0x2d5, 0x314, 0x33e, 0x37d, 0x3a7, 0x3e6, 0x410, 0x44f, 0x479, 0x4b5, 0x4df, 0x519, 0x543, 0x587

