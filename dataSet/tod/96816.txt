Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xeff2202
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xeff2202
0x3b: V13 = EQ V11 0xeff2202
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x7a]
---
0x40 DUP1
0x41 PUSH4 0x1d955e69
0x46 EQ
0x47 PUSH2 0x7a
0x4a JUMPI
---
0x41: V15 = 0x1d955e69
0x46: V16 = EQ 0x1d955e69 V11
0x47: V17 = 0x7a
0x4a: JUMPI 0x7a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x94]
---
0x4b DUP1
0x4c PUSH4 0x3ccfd60b
0x51 EQ
0x52 PUSH2 0x94
0x55 JUMPI
---
0x4c: V18 = 0x3ccfd60b
0x51: V19 = EQ 0x3ccfd60b V11
0x52: V20 = 0x94
0x55: JUMPI 0x94 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xa9]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0xa9
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0xa9
0x60: JUMPI 0xa9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x1a7, 0x297, 0x2da]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x79]
---
Predecessors: [0xd]
Successors: [0xda]
---
0x63 JUMPDEST
0x64 PUSH2 0x61
0x67 PUSH1 0x1
0x69 PUSH1 0xa0
0x6b PUSH1 0x2
0x6d EXP
0x6e SUB
0x6f PUSH1 0x4
0x71 CALLDATALOAD
0x72 AND
0x73 PUSH1 0x24
0x75 CALLDATALOAD
0x76 PUSH2 0xda
0x79 JUMP
---
0x63: JUMPDEST 
0x64: V24 = 0x61
0x67: V25 = 0x1
0x69: V26 = 0xa0
0x6b: V27 = 0x2
0x6d: V28 = EXP 0x2 0xa0
0x6e: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f: V30 = 0x4
0x71: V31 = CALLDATALOAD 0x4
0x72: V32 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x73: V33 = 0x24
0x75: V34 = CALLDATALOAD 0x24
0x76: V35 = 0xda
0x79: JUMP 0xda
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V32, V34]
Exit stack: [V11, 0x61, V32, V34]

================================

Block 0x7a
[0x7a:0x93]
---
Predecessors: [0x40]
Successors: [0x1b1]
---
0x7a JUMPDEST
0x7b PUSH2 0x61
0x7e PUSH1 0x1
0x80 PUSH1 0xa0
0x82 PUSH1 0x2
0x84 EXP
0x85 SUB
0x86 PUSH1 0x4
0x88 CALLDATALOAD
0x89 AND
0x8a PUSH1 0x24
0x8c CALLDATALOAD
0x8d PUSH1 0x44
0x8f CALLDATALOAD
0x90 PUSH2 0x1b1
0x93 JUMP
---
0x7a: JUMPDEST 
0x7b: V36 = 0x61
0x7e: V37 = 0x1
0x80: V38 = 0xa0
0x82: V39 = 0x2
0x84: V40 = EXP 0x2 0xa0
0x85: V41 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86: V42 = 0x4
0x88: V43 = CALLDATALOAD 0x4
0x89: V44 = AND V43 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V45 = 0x24
0x8c: V46 = CALLDATALOAD 0x24
0x8d: V47 = 0x44
0x8f: V48 = CALLDATALOAD 0x44
0x90: V49 = 0x1b1
0x93: JUMP 0x1b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V44, V46, V48]
Exit stack: [V11, 0x61, V44, V46, V48]

================================

Block 0x94
[0x94:0x9b]
---
Predecessors: [0x4b]
Successors: [0x9c, 0xa0]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 DUP1
0x97 ISZERO
0x98 PUSH2 0xa0
0x9b JUMPI
---
0x94: JUMPDEST 
0x95: V50 = CALLVALUE
0x97: V51 = ISZERO V50
0x98: V52 = 0xa0
0x9b: JUMPI 0xa0 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x94]
Successors: []
---
0x9c PUSH1 0x0
0x9e DUP1
0x9f REVERT
---
0x9c: V53 = 0x0
0x9f: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xa0
[0xa0:0xa8]
---
Predecessors: [0x94]
Successors: [0x29f]
---
0xa0 JUMPDEST
0xa1 POP
0xa2 PUSH2 0x61
0xa5 PUSH2 0x29f
0xa8 JUMP
---
0xa0: JUMPDEST 
0xa2: V54 = 0x61
0xa5: V55 = 0x29f
0xa8: JUMP 0x29f
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xa9
[0xa9:0xb0]
---
Predecessors: [0x56]
Successors: [0xb1, 0xb5]
---
0xa9 JUMPDEST
0xaa CALLVALUE
0xab DUP1
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xa9: JUMPDEST 
0xaa: V56 = CALLVALUE
0xac: V57 = ISZERO V56
0xad: V58 = 0xb5
0xb0: JUMPI 0xb5 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, V56]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xa9]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V59 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V11, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56]

================================

Block 0xb5
[0xb5:0xbd]
---
Predecessors: [0xa9]
Successors: [0x2dd]
---
0xb5 JUMPDEST
0xb6 POP
0xb7 PUSH2 0xbe
0xba PUSH2 0x2dd
0xbd JUMP
---
0xb5: JUMPDEST 
0xb7: V60 = 0xbe
0xba: V61 = 0x2dd
0xbd: JUMP 0x2dd
---
Entry stack: [V11, V56]
Stack pops: 1
Stack additions: [0xbe]
Exit stack: [V11, 0xbe]

================================

Block 0xbe
[0xbe:0xd9]
---
Predecessors: [0x2dd]
Successors: []
---
0xbe JUMPDEST
0xbf PUSH1 0x40
0xc1 DUP1
0xc2 MLOAD
0xc3 PUSH1 0x1
0xc5 PUSH1 0xa0
0xc7 PUSH1 0x2
0xc9 EXP
0xca SUB
0xcb SWAP1
0xcc SWAP3
0xcd AND
0xce DUP3
0xcf MSTORE
0xd0 MLOAD
0xd1 SWAP1
0xd2 DUP2
0xd3 SWAP1
0xd4 SUB
0xd5 PUSH1 0x20
0xd7 ADD
0xd8 SWAP1
0xd9 RETURN
---
0xbe: JUMPDEST 
0xbf: V62 = 0x40
0xc2: V63 = M[0x40]
0xc3: V64 = 0x1
0xc5: V65 = 0xa0
0xc7: V66 = 0x2
0xc9: V67 = EXP 0x2 0xa0
0xca: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd: V69 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0xcf: M[V63] = V69
0xd0: V70 = M[0x40]
0xd4: V71 = SUB V63 V70
0xd5: V72 = 0x20
0xd7: V73 = ADD 0x20 V71
0xd9: RETURN V70 V73
---
Entry stack: [V11, 0xbe, V228]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbe]

================================

Block 0xda
[0xda:0x104]
---
Predecessors: [0x63]
Successors: [0x105, 0x109]
---
0xda JUMPDEST
0xdb PUSH1 0x40
0xdd DUP1
0xde MLOAD
0xdf DUP3
0xe0 DUP2
0xe1 MSTORE
0xe2 NUMBER
0xe3 PUSH1 0x0
0xe5 NOT
0xe6 ADD
0xe7 BLOCKHASH
0xe8 PUSH1 0x20
0xea DUP3
0xeb ADD
0xec MSTORE
0xed DUP2
0xee MLOAD
0xef SWAP1
0xf0 DUP2
0xf1 SWAP1
0xf2 SUB
0xf3 SWAP1
0xf4 SWAP2
0xf5 ADD
0xf6 SWAP1
0xf7 SHA3
0xf8 PUSH1 0x3
0xfa SWAP1
0xfb DUP2
0xfc AND
0xfd SWAP1
0xfe DUP2
0xff EQ
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xda: JUMPDEST 
0xdb: V74 = 0x40
0xde: V75 = M[0x40]
0xe1: M[V75] = V34
0xe2: V76 = NUMBER
0xe3: V77 = 0x0
0xe5: V78 = NOT 0x0
0xe6: V79 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V76
0xe7: V80 = BLOCKHASH V79
0xe8: V81 = 0x20
0xeb: V82 = ADD V75 0x20
0xec: M[V82] = V80
0xee: V83 = M[0x40]
0xf2: V84 = SUB V75 V83
0xf5: V85 = ADD 0x40 V84
0xf7: V86 = SHA3 V83 V85
0xf8: V87 = 0x3
0xfc: V88 = AND 0x3 V86
0xff: V89 = EQ V88 0x3
0x100: V90 = ISZERO V89
0x101: V91 = 0x109
0x104: JUMPI 0x109 V90
---
Entry stack: [V11, 0x61, V32, V34]
Stack pops: 1
Stack additions: [S0, V88]
Exit stack: [V11, 0x61, V32, V34, V88]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xda]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V92 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V32, V34, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V32, V34, V88]

================================

Block 0x109
[0x109:0x18e]
---
Predecessors: [0xda]
Successors: [0x18f, 0x193]
---
0x109 JUMPDEST
0x10a PUSH1 0x1
0x10c DUP1
0x10d SLOAD
0x10e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123 NOT
0x124 AND
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d DUP6
0x12e DUP2
0x12f AND
0x130 SWAP2
0x131 SWAP1
0x132 SWAP2
0x133 OR
0x134 SWAP2
0x135 DUP3
0x136 SWAP1
0x137 SSTORE
0x138 PUSH1 0x40
0x13a DUP1
0x13b MLOAD
0x13c PUSH32 0x780bbe6000000000000000000000000000000000000000000000000000000000
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0x0
0x161 PUSH1 0x4
0x163 DUP3
0x164 ADD
0x165 DUP2
0x166 SWAP1
0x167 MSTORE
0x168 SWAP2
0x169 MLOAD
0x16a SWAP4
0x16b SWAP1
0x16c SWAP3
0x16d AND
0x16e SWAP3
0x16f PUSH4 0x780bbe60
0x174 SWAP3
0x175 CALLVALUE
0x176 SWAP3
0x177 PUSH1 0x24
0x179 DUP1
0x17a DUP4
0x17b ADD
0x17c SWAP4
0x17d SWAP2
0x17e SWAP3
0x17f DUP3
0x180 SWAP1
0x181 SUB
0x182 ADD
0x183 DUP2
0x184 DUP6
0x185 DUP9
0x186 DUP1
0x187 EXTCODESIZE
0x188 ISZERO
0x189 DUP1
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x109: JUMPDEST 
0x10a: V93 = 0x1
0x10d: V94 = S[0x1]
0x10e: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x123: V96 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x124: V97 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V94
0x125: V98 = 0x1
0x127: V99 = 0xa0
0x129: V100 = 0x2
0x12b: V101 = EXP 0x2 0xa0
0x12c: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x133: V104 = OR V103 V97
0x137: S[0x1] = V104
0x138: V105 = 0x40
0x13b: V106 = M[0x40]
0x13c: V107 = 0x780bbe6000000000000000000000000000000000000000000000000000000000
0x15e: M[V106] = 0x780bbe6000000000000000000000000000000000000000000000000000000000
0x15f: V108 = 0x0
0x161: V109 = 0x4
0x164: V110 = ADD V106 0x4
0x167: M[V110] = 0x0
0x169: V111 = M[0x40]
0x16d: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x16f: V113 = 0x780bbe60
0x175: V114 = CALLVALUE
0x177: V115 = 0x24
0x17b: V116 = ADD V106 0x24
0x181: V117 = SUB V106 V111
0x182: V118 = ADD V117 0x24
0x187: V119 = EXTCODESIZE V112
0x188: V120 = ISZERO V119
0x18a: V121 = ISZERO V120
0x18b: V122 = 0x193
0x18e: JUMPI 0x193 V121
---
Entry stack: [V11, 0x61, V32, V34, V88]
Stack pops: 3
Stack additions: [S2, S1, S0, V112, 0x780bbe60, V114, V116, 0x0, V111, V118, V111, V114, V112, V120]
Exit stack: [V11, 0x61, V32, V34, V88, V112, 0x780bbe60, V114, V116, 0x0, V111, V118, V111, V114, V112, V120]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x109]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V123 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V32, V34, V88, V112, 0x780bbe60, V114, V116, 0x0, V111, V118, V111, V114, V112, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V32, V34, V88, V112, 0x780bbe60, V114, V116, 0x0, V111, V118, V111, V114, V112, V120]

================================

Block 0x193
[0x193:0x19d]
---
Predecessors: [0x109]
Successors: [0x19e, 0x1a7]
---
0x193 JUMPDEST
0x194 POP
0x195 GAS
0x196 CALL
0x197 ISZERO
0x198 DUP1
0x199 ISZERO
0x19a PUSH2 0x1a7
0x19d JUMPI
---
0x193: JUMPDEST 
0x195: V124 = GAS
0x196: V125 = CALL V124 V112 V114 V111 V118 V111 0x0
0x197: V126 = ISZERO V125
0x199: V127 = ISZERO V126
0x19a: V128 = 0x1a7
0x19d: JUMPI 0x1a7 V127
---
Entry stack: [V11, 0x61, V32, V34, V88, V112, 0x780bbe60, V114, V116, 0x0, V111, V118, V111, V114, V112, V120]
Stack pops: 7
Stack additions: [V126]
Exit stack: [V11, 0x61, V32, V34, V88, V112, 0x780bbe60, V114, V116, V126]

================================

Block 0x19e
[0x19e:0x1a6]
---
Predecessors: [0x193]
Successors: []
---
0x19e RETURNDATASIZE
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 RETURNDATACOPY
0x1a3 RETURNDATASIZE
0x1a4 PUSH1 0x0
0x1a6 REVERT
---
0x19e: V129 = RETURNDATASIZE
0x19f: V130 = 0x0
0x1a2: RETURNDATACOPY 0x0 0x0 V129
0x1a3: V131 = RETURNDATASIZE
0x1a4: V132 = 0x0
0x1a6: REVERT 0x0 V131
---
Entry stack: [V11, 0x61, V32, V34, V88, V112, 0x780bbe60, V114, V116, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V32, V34, V88, V112, 0x780bbe60, V114, V116, V126]

================================

Block 0x1a7
[0x1a7:0x1b0]
---
Predecessors: [0x193]
Successors: [0x61]
---
0x1a7 JUMPDEST
0x1a8 POP
0x1a9 POP
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 JUMP
---
0x1a7: JUMPDEST 
0x1b0: JUMP 0x61
---
Entry stack: [V11, 0x61, V32, V34, V88, V112, 0x780bbe60, V114, V116, V126]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b1
[0x1b1:0x1db]
---
Predecessors: [0x7a]
Successors: [0x1dc, 0x292]
---
0x1b1 JUMPDEST
0x1b2 PUSH1 0x40
0x1b4 DUP1
0x1b5 MLOAD
0x1b6 DUP4
0x1b7 DUP2
0x1b8 MSTORE
0x1b9 NUMBER
0x1ba PUSH1 0x0
0x1bc NOT
0x1bd ADD
0x1be BLOCKHASH
0x1bf PUSH1 0x20
0x1c1 DUP3
0x1c2 ADD
0x1c3 MSTORE
0x1c4 DUP2
0x1c5 MLOAD
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 SWAP1
0x1c9 SUB
0x1ca SWAP1
0x1cb SWAP2
0x1cc ADD
0x1cd SWAP1
0x1ce SHA3
0x1cf PUSH1 0x3
0x1d1 DUP2
0x1d2 MOD
0x1d3 PUSH1 0x0
0x1d5 DUP4
0x1d6 DUP3
0x1d7 EQ
0x1d8 PUSH2 0x292
0x1db JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V133 = 0x40
0x1b5: V134 = M[0x40]
0x1b8: M[V134] = V46
0x1b9: V135 = NUMBER
0x1ba: V136 = 0x0
0x1bc: V137 = NOT 0x0
0x1bd: V138 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V135
0x1be: V139 = BLOCKHASH V138
0x1bf: V140 = 0x20
0x1c2: V141 = ADD V134 0x20
0x1c3: M[V141] = V139
0x1c5: V142 = M[0x40]
0x1c9: V143 = SUB V134 V142
0x1cc: V144 = ADD 0x40 V143
0x1ce: V145 = SHA3 V142 V144
0x1cf: V146 = 0x3
0x1d2: V147 = MOD V145 0x3
0x1d3: V148 = 0x0
0x1d7: V149 = EQ V147 V48
0x1d8: V150 = 0x292
0x1db: JUMPI 0x292 V149
---
Entry stack: [V11, 0x61, V44, V46, V48]
Stack pops: 2
Stack additions: [S1, S0, V145, V147, 0x0]
Exit stack: [V11, 0x61, V44, V46, V48, V145, V147, 0x0]

================================

Block 0x1dc
[0x1dc:0x1ea]
---
Predecessors: [0x1b1]
Successors: [0x1eb, 0x292]
---
0x1dc POP
0x1dd PUSH2 0x3e9
0x1e0 DUP3
0x1e1 MOD
0x1e2 PUSH2 0x3d4
0x1e5 DUP2
0x1e6 LT
0x1e7 PUSH2 0x292
0x1ea JUMPI
---
0x1dd: V151 = 0x3e9
0x1e1: V152 = MOD V145 0x3e9
0x1e2: V153 = 0x3d4
0x1e6: V154 = LT V152 0x3d4
0x1e7: V155 = 0x292
0x1ea: JUMPI 0x292 V154
---
Entry stack: [V11, 0x61, V44, V46, V48, V145, V147, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V152]
Exit stack: [V11, 0x61, V44, V46, V48, V145, V147, V152]

================================

Block 0x1eb
[0x1eb:0x26f]
---
Predecessors: [0x1dc]
Successors: [0x270, 0x274]
---
0x1eb PUSH1 0x1
0x1ed DUP1
0x1ee SLOAD
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 NOT
0x205 AND
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e DUP9
0x20f DUP2
0x210 AND
0x211 SWAP2
0x212 SWAP1
0x213 SWAP2
0x214 OR
0x215 SWAP2
0x216 DUP3
0x217 SWAP1
0x218 SSTORE
0x219 PUSH1 0x40
0x21b DUP1
0x21c MLOAD
0x21d PUSH32 0x33dddc3a00000000000000000000000000000000000000000000000000000000
0x23e DUP2
0x23f MSTORE
0x240 PUSH1 0x0
0x242 PUSH1 0x4
0x244 DUP3
0x245 ADD
0x246 DUP2
0x247 SWAP1
0x248 MSTORE
0x249 SWAP2
0x24a MLOAD
0x24b SWAP4
0x24c SWAP1
0x24d SWAP3
0x24e AND
0x24f SWAP3
0x250 PUSH4 0x33dddc3a
0x255 SWAP3
0x256 CALLVALUE
0x257 SWAP3
0x258 PUSH1 0x24
0x25a DUP1
0x25b DUP4
0x25c ADD
0x25d SWAP4
0x25e SWAP2
0x25f SWAP3
0x260 DUP3
0x261 SWAP1
0x262 SUB
0x263 ADD
0x264 DUP2
0x265 DUP6
0x266 DUP9
0x267 DUP1
0x268 EXTCODESIZE
0x269 ISZERO
0x26a DUP1
0x26b ISZERO
0x26c PUSH2 0x274
0x26f JUMPI
---
0x1eb: V156 = 0x1
0x1ee: V157 = S[0x1]
0x1ef: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V159 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x205: V160 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V157
0x206: V161 = 0x1
0x208: V162 = 0xa0
0x20a: V163 = 0x2
0x20c: V164 = EXP 0x2 0xa0
0x20d: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x214: V167 = OR V166 V160
0x218: S[0x1] = V167
0x219: V168 = 0x40
0x21c: V169 = M[0x40]
0x21d: V170 = 0x33dddc3a00000000000000000000000000000000000000000000000000000000
0x23f: M[V169] = 0x33dddc3a00000000000000000000000000000000000000000000000000000000
0x240: V171 = 0x0
0x242: V172 = 0x4
0x245: V173 = ADD V169 0x4
0x248: M[V173] = 0x0
0x24a: V174 = M[0x40]
0x24e: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x250: V176 = 0x33dddc3a
0x256: V177 = CALLVALUE
0x258: V178 = 0x24
0x25c: V179 = ADD V169 0x24
0x262: V180 = SUB V169 V174
0x263: V181 = ADD V180 0x24
0x268: V182 = EXTCODESIZE V175
0x269: V183 = ISZERO V182
0x26b: V184 = ISZERO V183
0x26c: V185 = 0x274
0x26f: JUMPI 0x274 V184
---
Entry stack: [V11, 0x61, V44, V46, V48, V145, V147, V152]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V175, 0x33dddc3a, V177, V179, 0x0, V174, V181, V174, V177, V175, V183]
Exit stack: [V11, 0x61, V44, V46, V48, V145, V147, V152, V175, 0x33dddc3a, V177, V179, 0x0, V174, V181, V174, V177, V175, V183]

================================

Block 0x270
[0x270:0x273]
---
Predecessors: [0x1eb]
Successors: []
---
0x270 PUSH1 0x0
0x272 DUP1
0x273 REVERT
---
0x270: V186 = 0x0
0x273: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V44, V46, V48, V145, V147, V152, V175, 0x33dddc3a, V177, V179, 0x0, V174, V181, V174, V177, V175, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V145, V147, V152, V175, 0x33dddc3a, V177, V179, 0x0, V174, V181, V174, V177, V175, V183]

================================

Block 0x274
[0x274:0x27e]
---
Predecessors: [0x1eb]
Successors: [0x27f, 0x288]
---
0x274 JUMPDEST
0x275 POP
0x276 GAS
0x277 CALL
0x278 ISZERO
0x279 DUP1
0x27a ISZERO
0x27b PUSH2 0x288
0x27e JUMPI
---
0x274: JUMPDEST 
0x276: V187 = GAS
0x277: V188 = CALL V187 V175 V177 V174 V181 V174 0x0
0x278: V189 = ISZERO V188
0x27a: V190 = ISZERO V189
0x27b: V191 = 0x288
0x27e: JUMPI 0x288 V190
---
Entry stack: [V11, 0x61, V44, V46, V48, V145, V147, V152, V175, 0x33dddc3a, V177, V179, 0x0, V174, V181, V174, V177, V175, V183]
Stack pops: 7
Stack additions: [V189]
Exit stack: [V11, 0x61, V44, V46, V48, V145, V147, V152, V175, 0x33dddc3a, V177, V179, V189]

================================

Block 0x27f
[0x27f:0x287]
---
Predecessors: [0x274]
Successors: []
---
0x27f RETURNDATASIZE
0x280 PUSH1 0x0
0x282 DUP1
0x283 RETURNDATACOPY
0x284 RETURNDATASIZE
0x285 PUSH1 0x0
0x287 REVERT
---
0x27f: V192 = RETURNDATASIZE
0x280: V193 = 0x0
0x283: RETURNDATACOPY 0x0 0x0 V192
0x284: V194 = RETURNDATASIZE
0x285: V195 = 0x0
0x287: REVERT 0x0 V194
---
Entry stack: [V11, 0x61, V44, V46, V48, V145, V147, V152, V175, 0x33dddc3a, V177, V179, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V145, V147, V152, V175, 0x33dddc3a, V177, V179, V189]

================================

Block 0x288
[0x288:0x291]
---
Predecessors: [0x274]
Successors: [0x297]
---
0x288 JUMPDEST
0x289 POP
0x28a POP
0x28b POP
0x28c POP
0x28d POP
0x28e PUSH2 0x297
0x291 JUMP
---
0x288: JUMPDEST 
0x28e: V196 = 0x297
0x291: JUMP 0x297
---
Entry stack: [V11, 0x61, V44, V46, V48, V145, V147, V152, V175, 0x33dddc3a, V177, V179, V189]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V145, V147, V152]

================================

Block 0x292
[0x292:0x296]
---
Predecessors: [0x1b1, 0x1dc]
Successors: []
---
0x292 JUMPDEST
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x292: JUMPDEST 
0x293: V197 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V44, V46, V48, V145, V147, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V145, V147, S0]

================================

Block 0x297
[0x297:0x29e]
---
Predecessors: [0x288]
Successors: [0x61]
---
0x297 JUMPDEST
0x298 POP
0x299 POP
0x29a POP
0x29b POP
0x29c POP
0x29d POP
0x29e JUMP
---
0x297: JUMPDEST 
0x29e: JUMP 0x61
---
Entry stack: [V11, 0x61, V44, V46, V48, V145, V147, V152]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x29f
[0x29f:0x2d0]
---
Predecessors: [0xa0]
Successors: [0x2d1, 0x2da]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 SLOAD
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af SWAP1
0x2b0 SWAP2
0x2b1 AND
0x2b2 SWAP2
0x2b3 ADDRESS
0x2b4 BALANCE
0x2b5 DUP1
0x2b6 ISZERO
0x2b7 PUSH2 0x8fc
0x2ba MUL
0x2bb SWAP3
0x2bc SWAP1
0x2bd SWAP2
0x2be DUP2
0x2bf DUP2
0x2c0 DUP2
0x2c1 DUP6
0x2c2 DUP9
0x2c3 DUP9
0x2c4 CALL
0x2c5 SWAP4
0x2c6 POP
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca ISZERO
0x2cb DUP1
0x2cc ISZERO
0x2cd PUSH2 0x2da
0x2d0 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V198 = 0x0
0x2a3: V199 = S[0x0]
0x2a4: V200 = 0x40
0x2a6: V201 = M[0x40]
0x2a7: V202 = 0x1
0x2a9: V203 = 0xa0
0x2ab: V204 = 0x2
0x2ad: V205 = EXP 0x2 0xa0
0x2ae: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b1: V207 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V208 = ADDRESS
0x2b4: V209 = BALANCE V208
0x2b6: V210 = ISZERO V209
0x2b7: V211 = 0x8fc
0x2ba: V212 = MUL 0x8fc V210
0x2c4: V213 = CALL V212 V207 V209 V201 0x0 V201 0x0
0x2ca: V214 = ISZERO V213
0x2cc: V215 = ISZERO V214
0x2cd: V216 = 0x2da
0x2d0: JUMPI 0x2da V215
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V214]
Exit stack: [V11, 0x61, V214]

================================

Block 0x2d1
[0x2d1:0x2d9]
---
Predecessors: [0x29f]
Successors: []
---
0x2d1 RETURNDATASIZE
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 RETURNDATACOPY
0x2d6 RETURNDATASIZE
0x2d7 PUSH1 0x0
0x2d9 REVERT
---
0x2d1: V217 = RETURNDATASIZE
0x2d2: V218 = 0x0
0x2d5: RETURNDATACOPY 0x0 0x0 V217
0x2d6: V219 = RETURNDATASIZE
0x2d7: V220 = 0x0
0x2d9: REVERT 0x0 V219
---
Entry stack: [V11, 0x61, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V214]

================================

Block 0x2da
[0x2da:0x2dc]
---
Predecessors: [0x29f]
Successors: [0x61]
---
0x2da JUMPDEST
0x2db POP
0x2dc JUMP
---
0x2da: JUMPDEST 
0x2dc: JUMP 0x61
---
Entry stack: [V11, 0x61, V214]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2dd
[0x2dd:0x2eb]
---
Predecessors: [0xb5]
Successors: [0xbe]
---
0x2dd JUMPDEST
0x2de PUSH1 0x0
0x2e0 SLOAD
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 AND
0x2ea DUP2
0x2eb JUMP
---
0x2dd: JUMPDEST 
0x2de: V221 = 0x0
0x2e0: V222 = S[0x0]
0x2e1: V223 = 0x1
0x2e3: V224 = 0xa0
0x2e5: V225 = 0x2
0x2e7: V226 = EXP 0x2 0xa0
0x2e8: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e9: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x2eb: JUMP 0xbe
---
Entry stack: [V11, 0xbe]
Stack pops: 1
Stack additions: [S0, V228]
Exit stack: [V11, 0xbe, V228]

================================

Block 0x2ec
[0x2ec:0x320]
---
Predecessors: []
Successors: []
---
0x2ec STOP
0x2ed LOG1
0x2ee PUSH6 0x627a7a723058
0x2f5 SHA3
0x2f6 SHL
0x2f7 MISSING 0xf6
0x2f8 MISSING 0xd1
0x2f9 MISSING 0xcb
0x2fa GT
0x2fb DELEGATECALL
0x2fc SWAP14
0x2fd MISSING 0xd
0x2fe MISSING 0x5e
0x2ff MISSING 0xdd
0x300 DUP2
0x301 CODESIZE
0x302 MISSING 0xc9
0x303 EQ
0x304 PUSH28 0x7867d074af0ba2b1b365c925a444f45d400029
---
0x2ec: STOP 
0x2ed: LOG S0 S1 S2
0x2ee: V229 = 0x627a7a723058
0x2f5: V230 = SHA3 0x627a7a723058 S3
0x2f6: V231 = SHL V230 S4
0x2f7: MISSING 0xf6
0x2f8: MISSING 0xd1
0x2f9: MISSING 0xcb
0x2fa: V232 = GT S0 S1
0x2fb: V233 = DELEGATECALL V232 S2 S3 S4 S5 S6
0x2fd: MISSING 0xd
0x2fe: MISSING 0x5e
0x2ff: MISSING 0xdd
0x301: V234 = CODESIZE
0x302: MISSING 0xc9
0x303: V235 = EQ S0 S1
0x304: V236 = 0x7867d074af0ba2b1b365c925a444f45d400029
---
Entry stack: []
Stack pops: 0
Stack additions: [V231, S20, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, V233, V234, S1, S0, S1, 0x7867d074af0ba2b1b365c925a444f45d400029, V235]
Exit stack: []

================================

Function 0:
Public function signature: 0xeff2202
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0xda, 0x105, 0x109, 0x18f, 0x193, 0x19e, 0x1a7

Function 1:
Public function signature: 0x1d955e69
Entry block: 0x7a
Exit block: 0x61
Body: 0x61, 0x7a, 0x1b1, 0x1dc, 0x1eb, 0x270, 0x274, 0x27f, 0x288, 0x292, 0x297

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x94
Exit block: 0x61
Body: 0x61, 0x94, 0x9c, 0xa0, 0x29f, 0x2d1, 0x2da

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xa9
Exit block: 0xbe
Body: 0xa9, 0xb1, 0xb5, 0xbe, 0x2dd

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

