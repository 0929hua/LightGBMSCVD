Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5c
0xa: JUMPI 0x5c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x68]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x60659a92
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x68
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x60659a92
0x20: V14 = EQ V12 0x60659a92
0x21: V15 = 0x68
0x24: JUMPI 0x68 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x8d]
---
0x25 DUP1
0x26 PUSH4 0x664e9704
0x2b EQ
0x2c PUSH2 0x8d
0x2f JUMPI
---
0x26: V16 = 0x664e9704
0x2b: V17 = EQ 0x664e9704 V12
0x2c: V18 = 0x8d
0x2f: JUMPI 0x8d V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb2]
---
0x30 DUP1
0x31 PUSH4 0x83197ef0
0x36 EQ
0x37 PUSH2 0xb2
0x3a JUMPI
---
0x31: V19 = 0x83197ef0
0x36: V20 = EQ 0x83197ef0 V12
0x37: V21 = 0xb2
0x3a: JUMPI 0xb2 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xc7]
---
0x3b DUP1
0x3c PUSH4 0x8da5cb5b
0x41 EQ
0x42 PUSH2 0xc7
0x45 JUMPI
---
0x3c: V22 = 0x8da5cb5b
0x41: V23 = EQ 0x8da5cb5b V12
0x42: V24 = 0xc7
0x45: JUMPI 0xc7 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x5c]
---
0x46 DUP1
0x47 PUSH4 0xd0febe4c
0x4c EQ
0x4d PUSH2 0x5c
0x50 JUMPI
---
0x47: V25 = 0xd0febe4c
0x4c: V26 = EQ 0xd0febe4c V12
0x4d: V27 = 0x5c
0x50: JUMPI 0x5c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x100]
---
0x51 DUP1
0x52 PUSH4 0xf2fde38b
0x57 EQ
0x58 PUSH2 0x100
0x5b JUMPI
---
0x52: V28 = 0xf2fde38b
0x57: V29 = EQ 0xf2fde38b V12
0x58: V30 = 0x100
0x5b: JUMPI 0x100 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x5c]
---
Predecessors: [0x0, 0x46, 0x51]
Successors: [0x5d]
---
0x5c JUMPDEST
---
0x5c: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5d
[0x5d:0x64]
---
Predecessors: [0x5c]
Successors: [0x121]
---
0x5d JUMPDEST
0x5e PUSH2 0x65
0x61 PUSH2 0x121
0x64 JUMP
---
0x5d: JUMPDEST 
0x5e: V31 = 0x65
0x61: V32 = 0x121
0x64: JUMP 0x121
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x65]
Exit stack: [V12, 0x65]

================================

Block 0x65
[0x65:0x65]
---
Predecessors: [0x229, 0x43f]
Successors: [0x66]
---
0x65 JUMPDEST
---
0x65: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0x65]
Successors: []
---
0x66 JUMPDEST
0x67 STOP
---
0x66: JUMPDEST 
0x67: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68
[0x68:0x6e]
---
Predecessors: [0xb]
Successors: [0x6f, 0x73]
---
0x68 JUMPDEST
0x69 CALLVALUE
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x68: JUMPDEST 
0x69: V33 = CALLVALUE
0x6a: V34 = ISZERO V33
0x6b: V35 = 0x73
0x6e: JUMPI 0x73 V34
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x68]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V36 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73
[0x73:0x7a]
---
Predecessors: [0x68]
Successors: [0x22d]
---
0x73 JUMPDEST
0x74 PUSH2 0x7b
0x77 PUSH2 0x22d
0x7a JUMP
---
0x73: JUMPDEST 
0x74: V37 = 0x7b
0x77: V38 = 0x22d
0x7a: JUMP 0x22d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7b]
Exit stack: [V12, 0x7b]

================================

Block 0x7b
[0x7b:0x8c]
---
Predecessors: [0x2a5, 0x2a8]
Successors: []
---
0x7b JUMPDEST
0x7c PUSH1 0x40
0x7e MLOAD
0x7f SWAP1
0x80 DUP2
0x81 MSTORE
0x82 PUSH1 0x20
0x84 ADD
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 SWAP2
0x8a SUB
0x8b SWAP1
0x8c RETURN
---
0x7b: JUMPDEST 
0x7c: V39 = 0x40
0x7e: V40 = M[0x40]
0x81: M[V40] = S0
0x82: V41 = 0x20
0x84: V42 = ADD 0x20 V40
0x85: V43 = 0x40
0x87: V44 = M[0x40]
0x8a: V45 = SUB V42 V44
0x8c: RETURN V44 V45
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x8d
[0x8d:0x93]
---
Predecessors: [0x25]
Successors: [0x94, 0x98]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8d: JUMPDEST 
0x8e: V46 = CALLVALUE
0x8f: V47 = ISZERO V46
0x90: V48 = 0x98
0x93: JUMPI 0x98 V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8d]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V49 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x8d]
Successors: [0x2a8]
---
0x98 JUMPDEST
0x99 PUSH2 0x7b
0x9c PUSH2 0x2a8
0x9f JUMP
---
0x98: JUMPDEST 
0x99: V50 = 0x7b
0x9c: V51 = 0x2a8
0x9f: JUMP 0x2a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7b]
Exit stack: [V12, 0x7b]

================================

Block 0xa0
[0xa0:0xb1]
---
Predecessors: []
Successors: []
---
0xa0 JUMPDEST
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 SWAP1
0xa5 DUP2
0xa6 MSTORE
0xa7 PUSH1 0x20
0xa9 ADD
0xaa PUSH1 0x40
0xac MLOAD
0xad DUP1
0xae SWAP2
0xaf SUB
0xb0 SWAP1
0xb1 RETURN
---
0xa0: JUMPDEST 
0xa1: V52 = 0x40
0xa3: V53 = M[0x40]
0xa6: M[V53] = S0
0xa7: V54 = 0x20
0xa9: V55 = ADD 0x20 V53
0xaa: V56 = 0x40
0xac: V57 = M[0x40]
0xaf: V58 = SUB V55 V57
0xb1: RETURN V57 V58
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb2
[0xb2:0xb8]
---
Predecessors: [0x30]
Successors: [0xb9, 0xbd]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V59 = CALLVALUE
0xb4: V60 = ISZERO V59
0xb5: V61 = 0xbd
0xb8: JUMPI 0xbd V60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb2]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V62 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0xb2]
Successors: [0x2ae]
---
0xbd JUMPDEST
0xbe PUSH2 0x65
0xc1 PUSH2 0x2ae
0xc4 JUMP
---
0xbd: JUMPDEST 
0xbe: V63 = 0x65
0xc1: V64 = 0x2ae
0xc4: JUMP 0x2ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x65]
Exit stack: [V12, 0x65]

================================

Block 0xc5
[0xc5:0xc6]
---
Predecessors: []
Successors: []
---
0xc5 JUMPDEST
0xc6 STOP
---
0xc5: JUMPDEST 
0xc6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc7
[0xc7:0xcd]
---
Predecessors: [0x3b]
Successors: [0xce, 0xd2]
---
0xc7 JUMPDEST
0xc8 CALLVALUE
0xc9 ISZERO
0xca PUSH2 0xd2
0xcd JUMPI
---
0xc7: JUMPDEST 
0xc8: V65 = CALLVALUE
0xc9: V66 = ISZERO V65
0xca: V67 = 0xd2
0xcd: JUMPI 0xd2 V66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xce
[0xce:0xd1]
---
Predecessors: [0xc7]
Successors: []
---
0xce PUSH1 0x0
0xd0 DUP1
0xd1 REVERT
---
0xce: V68 = 0x0
0xd1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2
[0xd2:0xd9]
---
Predecessors: [0xc7]
Successors: [0x3d6]
---
0xd2 JUMPDEST
0xd3 PUSH2 0xda
0xd6 PUSH2 0x3d6
0xd9 JUMP
---
0xd2: JUMPDEST 
0xd3: V69 = 0xda
0xd6: V70 = 0x3d6
0xd9: JUMP 0x3d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V12, 0xda]

================================

Block 0xda
[0xda:0xf5]
---
Predecessors: [0x3d6]
Successors: []
---
0xda JUMPDEST
0xdb PUSH1 0x40
0xdd MLOAD
0xde PUSH1 0x1
0xe0 PUSH1 0xa0
0xe2 PUSH1 0x2
0xe4 EXP
0xe5 SUB
0xe6 SWAP1
0xe7 SWAP2
0xe8 AND
0xe9 DUP2
0xea MSTORE
0xeb PUSH1 0x20
0xed ADD
0xee PUSH1 0x40
0xf0 MLOAD
0xf1 DUP1
0xf2 SWAP2
0xf3 SUB
0xf4 SWAP1
0xf5 RETURN
---
0xda: JUMPDEST 
0xdb: V71 = 0x40
0xdd: V72 = M[0x40]
0xde: V73 = 0x1
0xe0: V74 = 0xa0
0xe2: V75 = 0x2
0xe4: V76 = EXP 0x2 0xa0
0xe5: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe8: V78 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0xea: M[V72] = V78
0xeb: V79 = 0x20
0xed: V80 = ADD 0x20 V72
0xee: V81 = 0x40
0xf0: V82 = M[0x40]
0xf3: V83 = SUB V80 V82
0xf5: RETURN V82 V83
---
Entry stack: [V12, 0xda, V397]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xda]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: []
Successors: [0x121]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x65
0xfa PUSH2 0x121
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V84 = 0x65
0xfa: V85 = 0x121
0xfd: JUMP 0x121
---
Entry stack: []
Stack pops: 0
Stack additions: [0x65]
Exit stack: [0x65]

================================

Block 0xfe
[0xfe:0xff]
---
Predecessors: []
Successors: []
---
0xfe JUMPDEST
0xff STOP
---
0xfe: JUMPDEST 
0xff: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x51]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V86 = CALLVALUE
0x102: V87 = ISZERO V86
0x103: V88 = 0x10b
0x106: JUMPI 0x10b V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V89 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x11e]
---
Predecessors: [0x100]
Successors: [0x3e5]
---
0x10b JUMPDEST
0x10c PUSH2 0x65
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 PUSH1 0x4
0x119 CALLDATALOAD
0x11a AND
0x11b PUSH2 0x3e5
0x11e JUMP
---
0x10b: JUMPDEST 
0x10c: V90 = 0x65
0x10f: V91 = 0x1
0x111: V92 = 0xa0
0x113: V93 = 0x2
0x115: V94 = EXP 0x2 0xa0
0x116: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x117: V96 = 0x4
0x119: V97 = CALLDATALOAD 0x4
0x11a: V98 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V99 = 0x3e5
0x11e: JUMP 0x3e5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x65, V98]
Exit stack: [V12, 0x65, V98]

================================

Block 0x11f
[0x11f:0x120]
---
Predecessors: []
Successors: []
---
0x11f JUMPDEST
0x120 STOP
---
0x11f: JUMPDEST 
0x120: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x121
[0x121:0x139]
---
Predecessors: [0x5d, 0xf6]
Successors: [0x442]
---
0x121 JUMPDEST
0x122 PUSH1 0x2
0x124 SLOAD
0x125 CALLVALUE
0x126 SWAP1
0x127 PUSH1 0x0
0x129 SWAP1
0x12a PUSH2 0x13a
0x12d SWAP1
0x12e DUP4
0x12f SWAP1
0x130 PUSH4 0xffffffff
0x135 PUSH2 0x442
0x138 AND
0x139 JUMP
---
0x121: JUMPDEST 
0x122: V100 = 0x2
0x124: V101 = S[0x2]
0x125: V102 = CALLVALUE
0x127: V103 = 0x0
0x12a: V104 = 0x13a
0x130: V105 = 0xffffffff
0x135: V106 = 0x442
0x138: V107 = AND 0x442 0xffffffff
0x139: JUMP 0x442
---
Entry stack: [V12, 0x65]
Stack pops: 0
Stack additions: [V102, 0x0, 0x13a, V102, V101]
Exit stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101]

================================

Block 0x13a
[0x13a:0x197]
---
Predecessors: [0x46a]
Successors: [0x198, 0x19c]
---
0x13a JUMPDEST
0x13b PUSH1 0x1
0x13d SLOAD
0x13e SWAP1
0x13f SWAP2
0x140 POP
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 AND
0x14a PUSH4 0xa9059cbb
0x14f CALLER
0x150 DUP4
0x151 PUSH1 0x0
0x153 PUSH1 0x40
0x155 MLOAD
0x156 PUSH1 0x20
0x158 ADD
0x159 MSTORE
0x15a PUSH1 0x40
0x15c MLOAD
0x15d PUSH1 0xe0
0x15f PUSH1 0x2
0x161 EXP
0x162 PUSH4 0xffffffff
0x167 DUP6
0x168 AND
0x169 MUL
0x16a DUP2
0x16b MSTORE
0x16c PUSH1 0x1
0x16e PUSH1 0xa0
0x170 PUSH1 0x2
0x172 EXP
0x173 SUB
0x174 SWAP1
0x175 SWAP3
0x176 AND
0x177 PUSH1 0x4
0x179 DUP4
0x17a ADD
0x17b MSTORE
0x17c PUSH1 0x24
0x17e DUP3
0x17f ADD
0x180 MSTORE
0x181 PUSH1 0x44
0x183 ADD
0x184 PUSH1 0x20
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a DUP4
0x18b SUB
0x18c DUP2
0x18d PUSH1 0x0
0x18f DUP8
0x190 DUP1
0x191 EXTCODESIZE
0x192 ISZERO
0x193 ISZERO
0x194 PUSH2 0x19c
0x197 JUMPI
---
0x13a: JUMPDEST 
0x13b: V108 = 0x1
0x13d: V109 = S[0x1]
0x141: V110 = 0x1
0x143: V111 = 0xa0
0x145: V112 = 0x2
0x147: V113 = EXP 0x2 0xa0
0x148: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x149: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x14a: V116 = 0xa9059cbb
0x14f: V117 = CALLER
0x151: V118 = 0x0
0x153: V119 = 0x40
0x155: V120 = M[0x40]
0x156: V121 = 0x20
0x158: V122 = ADD 0x20 V120
0x159: M[V122] = 0x0
0x15a: V123 = 0x40
0x15c: V124 = M[0x40]
0x15d: V125 = 0xe0
0x15f: V126 = 0x2
0x161: V127 = EXP 0x2 0xe0
0x162: V128 = 0xffffffff
0x168: V129 = AND 0xa9059cbb 0xffffffff
0x169: V130 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x16b: M[V124] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x16c: V131 = 0x1
0x16e: V132 = 0xa0
0x170: V133 = 0x2
0x172: V134 = EXP 0x2 0xa0
0x173: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V136 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x177: V137 = 0x4
0x17a: V138 = ADD V124 0x4
0x17b: M[V138] = V136
0x17c: V139 = 0x24
0x17f: V140 = ADD V124 0x24
0x180: M[V140] = V434
0x181: V141 = 0x44
0x183: V142 = ADD 0x44 V124
0x184: V143 = 0x20
0x186: V144 = 0x40
0x188: V145 = M[0x40]
0x18b: V146 = SUB V142 V145
0x18d: V147 = 0x0
0x191: V148 = EXTCODESIZE V115
0x192: V149 = ISZERO V148
0x193: V150 = ISZERO V149
0x194: V151 = 0x19c
0x197: JUMPI 0x19c V150
---
Entry stack: [V12, 0x65, V102, 0x0, V434]
Stack pops: 2
Stack additions: [S0, V115, 0xa9059cbb, V142, 0x20, V145, V146, V145, 0x0, V115]
Exit stack: [V12, 0x65, V102, V434, V115, 0xa9059cbb, V142, 0x20, V145, V146, V145, 0x0, V115]

================================

Block 0x198
[0x198:0x19b]
---
Predecessors: [0x13a]
Successors: []
---
0x198 PUSH1 0x0
0x19a DUP1
0x19b REVERT
---
0x198: V152 = 0x0
0x19b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, V102, V434, V115, 0xa9059cbb, V142, 0x20, V145, V146, V145, 0x0, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V102, V434, V115, 0xa9059cbb, V142, 0x20, V145, V146, V145, 0x0, V115]

================================

Block 0x19c
[0x19c:0x1a8]
---
Predecessors: [0x13a]
Successors: [0x1a9, 0x1ad]
---
0x19c JUMPDEST
0x19d PUSH2 0x2c6
0x1a0 GAS
0x1a1 SUB
0x1a2 CALL
0x1a3 ISZERO
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x19c: JUMPDEST 
0x19d: V153 = 0x2c6
0x1a0: V154 = GAS
0x1a1: V155 = SUB V154 0x2c6
0x1a2: V156 = CALL V155 V115 0x0 V145 V146 V145 0x20
0x1a3: V157 = ISZERO V156
0x1a4: V158 = ISZERO V157
0x1a5: V159 = 0x1ad
0x1a8: JUMPI 0x1ad V158
---
Entry stack: [V12, 0x65, V102, V434, V115, 0xa9059cbb, V142, 0x20, V145, V146, V145, 0x0, V115]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x65, V102, V434, V115, 0xa9059cbb, V142]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x19c]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V160 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, V102, V434, V115, 0xa9059cbb, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V102, V434, V115, 0xa9059cbb, V142]

================================

Block 0x1ad
[0x1ad:0x223]
---
Predecessors: [0x19c]
Successors: [0x224, 0x228]
---
0x1ad JUMPDEST
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 MLOAD
0x1b6 POP
0x1b7 POP
0x1b8 PUSH1 0x1
0x1ba PUSH1 0xa0
0x1bc PUSH1 0x2
0x1be EXP
0x1bf SUB
0x1c0 CALLER
0x1c1 AND
0x1c2 PUSH32 0x61b2357f75eed32a19939598e4c7563879bacd78e9d957c31f0f9f70a3fd14a0
0x1e3 DUP3
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 SWAP2
0x1f2 SUB
0x1f3 SWAP1
0x1f4 LOG2
0x1f5 PUSH1 0x0
0x1f7 SLOAD
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 AND
0x201 CALLVALUE
0x202 DUP1
0x203 ISZERO
0x204 PUSH2 0x8fc
0x207 MUL
0x208 SWAP1
0x209 PUSH1 0x40
0x20b MLOAD
0x20c PUSH1 0x0
0x20e PUSH1 0x40
0x210 MLOAD
0x211 DUP1
0x212 DUP4
0x213 SUB
0x214 DUP2
0x215 DUP6
0x216 DUP9
0x217 DUP9
0x218 CALL
0x219 SWAP4
0x21a POP
0x21b POP
0x21c POP
0x21d POP
0x21e ISZERO
0x21f ISZERO
0x220 PUSH2 0x228
0x223 JUMPI
---
0x1ad: JUMPDEST 
0x1b1: V161 = 0x40
0x1b3: V162 = M[0x40]
0x1b5: V163 = M[V162]
0x1b8: V164 = 0x1
0x1ba: V165 = 0xa0
0x1bc: V166 = 0x2
0x1be: V167 = EXP 0x2 0xa0
0x1bf: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c0: V169 = CALLER
0x1c1: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V171 = 0x61b2357f75eed32a19939598e4c7563879bacd78e9d957c31f0f9f70a3fd14a0
0x1e4: V172 = 0x40
0x1e6: V173 = M[0x40]
0x1e9: M[V173] = V434
0x1ea: V174 = 0x20
0x1ec: V175 = ADD 0x20 V173
0x1ed: V176 = 0x40
0x1ef: V177 = M[0x40]
0x1f2: V178 = SUB V175 V177
0x1f4: LOG V177 V178 0x61b2357f75eed32a19939598e4c7563879bacd78e9d957c31f0f9f70a3fd14a0 V170
0x1f5: V179 = 0x0
0x1f7: V180 = S[0x0]
0x1f8: V181 = 0x1
0x1fa: V182 = 0xa0
0x1fc: V183 = 0x2
0x1fe: V184 = EXP 0x2 0xa0
0x1ff: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x201: V187 = CALLVALUE
0x203: V188 = ISZERO V187
0x204: V189 = 0x8fc
0x207: V190 = MUL 0x8fc V188
0x209: V191 = 0x40
0x20b: V192 = M[0x40]
0x20c: V193 = 0x0
0x20e: V194 = 0x40
0x210: V195 = M[0x40]
0x213: V196 = SUB V192 V195
0x218: V197 = CALL V190 V186 V187 V195 V196 V195 0x0
0x21e: V198 = ISZERO V197
0x21f: V199 = ISZERO V198
0x220: V200 = 0x228
0x223: JUMPI 0x228 V199
---
Entry stack: [V12, 0x65, V102, V434, V115, 0xa9059cbb, V142]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x65, V102, V434]

================================

Block 0x224
[0x224:0x227]
---
Predecessors: [0x1ad]
Successors: []
---
0x224 PUSH1 0x0
0x226 DUP1
0x227 REVERT
---
0x224: V201 = 0x0
0x227: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, V102, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V102, V434]

================================

Block 0x228
[0x228:0x228]
---
Predecessors: [0x1ad]
Successors: [0x229]
---
0x228 JUMPDEST
---
0x228: JUMPDEST 
---
Entry stack: [V12, 0x65, V102, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V102, V434]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x228]
Successors: [0x65]
---
0x229 JUMPDEST
0x22a POP
0x22b POP
0x22c JUMP
---
0x229: JUMPDEST 
0x22c: JUMP 0x65
---
Entry stack: [V12, 0x65, V102, V434]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x283]
---
Predecessors: [0x73]
Successors: [0x284, 0x288]
---
0x22d JUMPDEST
0x22e PUSH1 0x1
0x230 SLOAD
0x231 PUSH1 0x0
0x233 SWAP1
0x234 PUSH1 0x1
0x236 PUSH1 0xa0
0x238 PUSH1 0x2
0x23a EXP
0x23b SUB
0x23c AND
0x23d PUSH4 0x70a08231
0x242 ADDRESS
0x243 DUP4
0x244 PUSH1 0x40
0x246 MLOAD
0x247 PUSH1 0x20
0x249 ADD
0x24a MSTORE
0x24b PUSH1 0x40
0x24d MLOAD
0x24e PUSH1 0xe0
0x250 PUSH1 0x2
0x252 EXP
0x253 PUSH4 0xffffffff
0x258 DUP5
0x259 AND
0x25a MUL
0x25b DUP2
0x25c MSTORE
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 SWAP1
0x266 SWAP2
0x267 AND
0x268 PUSH1 0x4
0x26a DUP3
0x26b ADD
0x26c MSTORE
0x26d PUSH1 0x24
0x26f ADD
0x270 PUSH1 0x20
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP1
0x276 DUP4
0x277 SUB
0x278 DUP2
0x279 PUSH1 0x0
0x27b DUP8
0x27c DUP1
0x27d EXTCODESIZE
0x27e ISZERO
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x22d: JUMPDEST 
0x22e: V202 = 0x1
0x230: V203 = S[0x1]
0x231: V204 = 0x0
0x234: V205 = 0x1
0x236: V206 = 0xa0
0x238: V207 = 0x2
0x23a: V208 = EXP 0x2 0xa0
0x23b: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23c: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x23d: V211 = 0x70a08231
0x242: V212 = ADDRESS
0x244: V213 = 0x40
0x246: V214 = M[0x40]
0x247: V215 = 0x20
0x249: V216 = ADD 0x20 V214
0x24a: M[V216] = 0x0
0x24b: V217 = 0x40
0x24d: V218 = M[0x40]
0x24e: V219 = 0xe0
0x250: V220 = 0x2
0x252: V221 = EXP 0x2 0xe0
0x253: V222 = 0xffffffff
0x259: V223 = AND 0x70a08231 0xffffffff
0x25a: V224 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x25c: M[V218] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x25d: V225 = 0x1
0x25f: V226 = 0xa0
0x261: V227 = 0x2
0x263: V228 = EXP 0x2 0xa0
0x264: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V230 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x268: V231 = 0x4
0x26b: V232 = ADD V218 0x4
0x26c: M[V232] = V230
0x26d: V233 = 0x24
0x26f: V234 = ADD 0x24 V218
0x270: V235 = 0x20
0x272: V236 = 0x40
0x274: V237 = M[0x40]
0x277: V238 = SUB V234 V237
0x279: V239 = 0x0
0x27d: V240 = EXTCODESIZE V210
0x27e: V241 = ISZERO V240
0x27f: V242 = ISZERO V241
0x280: V243 = 0x288
0x283: JUMPI 0x288 V242
---
Entry stack: [V12, 0x7b]
Stack pops: 0
Stack additions: [0x0, V210, 0x70a08231, V234, 0x20, V237, V238, V237, 0x0, V210]
Exit stack: [V12, 0x7b, 0x0, V210, 0x70a08231, V234, 0x20, V237, V238, V237, 0x0, V210]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x22d]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V244 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, 0x0, V210, 0x70a08231, V234, 0x20, V237, V238, V237, 0x0, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, 0x0, V210, 0x70a08231, V234, 0x20, V237, V238, V237, 0x0, V210]

================================

Block 0x288
[0x288:0x294]
---
Predecessors: [0x22d]
Successors: [0x295, 0x299]
---
0x288 JUMPDEST
0x289 PUSH2 0x2c6
0x28c GAS
0x28d SUB
0x28e CALL
0x28f ISZERO
0x290 ISZERO
0x291 PUSH2 0x299
0x294 JUMPI
---
0x288: JUMPDEST 
0x289: V245 = 0x2c6
0x28c: V246 = GAS
0x28d: V247 = SUB V246 0x2c6
0x28e: V248 = CALL V247 V210 0x0 V237 V238 V237 0x20
0x28f: V249 = ISZERO V248
0x290: V250 = ISZERO V249
0x291: V251 = 0x299
0x294: JUMPI 0x299 V250
---
Entry stack: [V12, 0x7b, 0x0, V210, 0x70a08231, V234, 0x20, V237, V238, V237, 0x0, V210]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7b, 0x0, V210, 0x70a08231, V234]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x288]
Successors: []
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
---
0x295: V252 = 0x0
0x298: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, 0x0, V210, 0x70a08231, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, 0x0, V210, 0x70a08231, V234]

================================

Block 0x299
[0x299:0x2a4]
---
Predecessors: [0x288]
Successors: [0x2a5]
---
0x299 JUMPDEST
0x29a POP
0x29b POP
0x29c POP
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 DUP1
0x2a1 MLOAD
0x2a2 SWAP2
0x2a3 POP
0x2a4 POP
---
0x299: JUMPDEST 
0x29d: V253 = 0x40
0x29f: V254 = M[0x40]
0x2a1: V255 = M[V254]
---
Entry stack: [V12, 0x7b, 0x0, V210, 0x70a08231, V234]
Stack pops: 4
Stack additions: [V255]
Exit stack: [V12, 0x7b, V255]

================================

Block 0x2a5
[0x2a5:0x2a7]
---
Predecessors: [0x299]
Successors: [0x7b]
---
0x2a5 JUMPDEST
0x2a6 SWAP1
0x2a7 JUMP
---
0x2a5: JUMPDEST 
0x2a7: JUMP 0x7b
---
Entry stack: [V12, 0x7b, V255]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V255]

================================

Block 0x2a8
[0x2a8:0x2ad]
---
Predecessors: [0x98]
Successors: [0x7b]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x2
0x2ab SLOAD
0x2ac DUP2
0x2ad JUMP
---
0x2a8: JUMPDEST 
0x2a9: V256 = 0x2
0x2ab: V257 = S[0x2]
0x2ad: JUMP 0x7b
---
Entry stack: [V12, 0x7b]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V12, 0x7b, V257]

================================

Block 0x2ae
[0x2ae:0x2c5]
---
Predecessors: [0xbd]
Successors: [0x2c6, 0x2ca]
---
0x2ae JUMPDEST
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 SLOAD
0x2b3 CALLER
0x2b4 PUSH1 0x1
0x2b6 PUSH1 0xa0
0x2b8 PUSH1 0x2
0x2ba EXP
0x2bb SUB
0x2bc SWAP1
0x2bd DUP2
0x2be AND
0x2bf SWAP2
0x2c0 AND
0x2c1 EQ
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x2ae: JUMPDEST 
0x2af: V258 = 0x0
0x2b2: V259 = S[0x0]
0x2b3: V260 = CALLER
0x2b4: V261 = 0x1
0x2b6: V262 = 0xa0
0x2b8: V263 = 0x2
0x2ba: V264 = EXP 0x2 0xa0
0x2bb: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2be: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x2c0: V267 = AND V259 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: V268 = EQ V267 V266
0x2c2: V269 = 0x2ca
0x2c5: JUMPI 0x2ca V268
---
Entry stack: [V12, 0x65]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x65, 0x0]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x2ae]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V270 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, 0x0]

================================

Block 0x2ca
[0x2ca:0x31e]
---
Predecessors: [0x2ae]
Successors: [0x31f, 0x323]
---
0x2ca JUMPDEST
0x2cb PUSH1 0x1
0x2cd SLOAD
0x2ce PUSH1 0x1
0x2d0 PUSH1 0xa0
0x2d2 PUSH1 0x2
0x2d4 EXP
0x2d5 SUB
0x2d6 AND
0x2d7 PUSH4 0x70a08231
0x2dc ADDRESS
0x2dd PUSH1 0x0
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 PUSH1 0x20
0x2e4 ADD
0x2e5 MSTORE
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 PUSH1 0xe0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee PUSH4 0xffffffff
0x2f3 DUP5
0x2f4 AND
0x2f5 MUL
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xa0
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff SUB
0x300 SWAP1
0x301 SWAP2
0x302 AND
0x303 PUSH1 0x4
0x305 DUP3
0x306 ADD
0x307 MSTORE
0x308 PUSH1 0x24
0x30a ADD
0x30b PUSH1 0x20
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 DUP4
0x312 SUB
0x313 DUP2
0x314 PUSH1 0x0
0x316 DUP8
0x317 DUP1
0x318 EXTCODESIZE
0x319 ISZERO
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V271 = 0x1
0x2cd: V272 = S[0x1]
0x2ce: V273 = 0x1
0x2d0: V274 = 0xa0
0x2d2: V275 = 0x2
0x2d4: V276 = EXP 0x2 0xa0
0x2d5: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d6: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x2d7: V279 = 0x70a08231
0x2dc: V280 = ADDRESS
0x2dd: V281 = 0x0
0x2df: V282 = 0x40
0x2e1: V283 = M[0x40]
0x2e2: V284 = 0x20
0x2e4: V285 = ADD 0x20 V283
0x2e5: M[V285] = 0x0
0x2e6: V286 = 0x40
0x2e8: V287 = M[0x40]
0x2e9: V288 = 0xe0
0x2eb: V289 = 0x2
0x2ed: V290 = EXP 0x2 0xe0
0x2ee: V291 = 0xffffffff
0x2f4: V292 = AND 0x70a08231 0xffffffff
0x2f5: V293 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2f7: M[V287] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2f8: V294 = 0x1
0x2fa: V295 = 0xa0
0x2fc: V296 = 0x2
0x2fe: V297 = EXP 0x2 0xa0
0x2ff: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x302: V299 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x303: V300 = 0x4
0x306: V301 = ADD V287 0x4
0x307: M[V301] = V299
0x308: V302 = 0x24
0x30a: V303 = ADD 0x24 V287
0x30b: V304 = 0x20
0x30d: V305 = 0x40
0x30f: V306 = M[0x40]
0x312: V307 = SUB V303 V306
0x314: V308 = 0x0
0x318: V309 = EXTCODESIZE V278
0x319: V310 = ISZERO V309
0x31a: V311 = ISZERO V310
0x31b: V312 = 0x323
0x31e: JUMPI 0x323 V311
---
Entry stack: [V12, 0x65, 0x0]
Stack pops: 0
Stack additions: [V278, 0x70a08231, V303, 0x20, V306, V307, V306, 0x0, V278]
Exit stack: [V12, 0x65, 0x0, V278, 0x70a08231, V303, 0x20, V306, V307, V306, 0x0, V278]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x2ca]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V313 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, 0x0, V278, 0x70a08231, V303, 0x20, V306, V307, V306, 0x0, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, 0x0, V278, 0x70a08231, V303, 0x20, V306, V307, V306, 0x0, V278]

================================

Block 0x323
[0x323:0x32f]
---
Predecessors: [0x2ca]
Successors: [0x330, 0x334]
---
0x323 JUMPDEST
0x324 PUSH2 0x2c6
0x327 GAS
0x328 SUB
0x329 CALL
0x32a ISZERO
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x323: JUMPDEST 
0x324: V314 = 0x2c6
0x327: V315 = GAS
0x328: V316 = SUB V315 0x2c6
0x329: V317 = CALL V316 V278 0x0 V306 V307 V306 0x20
0x32a: V318 = ISZERO V317
0x32b: V319 = ISZERO V318
0x32c: V320 = 0x334
0x32f: JUMPI 0x334 V319
---
Entry stack: [V12, 0x65, 0x0, V278, 0x70a08231, V303, 0x20, V306, V307, V306, 0x0, V278]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x65, 0x0, V278, 0x70a08231, V303]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x323]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V321 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, 0x0, V278, 0x70a08231, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, 0x0, V278, 0x70a08231, V303]

================================

Block 0x334
[0x334:0x3a4]
---
Predecessors: [0x323]
Successors: [0x3a5, 0x3a9]
---
0x334 JUMPDEST
0x335 POP
0x336 POP
0x337 POP
0x338 PUSH1 0x40
0x33a MLOAD
0x33b DUP1
0x33c MLOAD
0x33d PUSH1 0x1
0x33f SLOAD
0x340 PUSH1 0x0
0x342 DUP1
0x343 SLOAD
0x344 SWAP3
0x345 SWAP5
0x346 POP
0x347 PUSH1 0x1
0x349 PUSH1 0xa0
0x34b PUSH1 0x2
0x34d EXP
0x34e SUB
0x34f SWAP2
0x350 DUP3
0x351 AND
0x352 SWAP4
0x353 POP
0x354 PUSH4 0xa9059cbb
0x359 SWAP3
0x35a SWAP1
0x35b SWAP2
0x35c AND
0x35d SWAP1
0x35e DUP5
0x35f SWAP1
0x360 PUSH1 0x40
0x362 MLOAD
0x363 PUSH1 0x20
0x365 ADD
0x366 MSTORE
0x367 PUSH1 0x40
0x369 MLOAD
0x36a PUSH1 0xe0
0x36c PUSH1 0x2
0x36e EXP
0x36f PUSH4 0xffffffff
0x374 DUP6
0x375 AND
0x376 MUL
0x377 DUP2
0x378 MSTORE
0x379 PUSH1 0x1
0x37b PUSH1 0xa0
0x37d PUSH1 0x2
0x37f EXP
0x380 SUB
0x381 SWAP1
0x382 SWAP3
0x383 AND
0x384 PUSH1 0x4
0x386 DUP4
0x387 ADD
0x388 MSTORE
0x389 PUSH1 0x24
0x38b DUP3
0x38c ADD
0x38d MSTORE
0x38e PUSH1 0x44
0x390 ADD
0x391 PUSH1 0x20
0x393 PUSH1 0x40
0x395 MLOAD
0x396 DUP1
0x397 DUP4
0x398 SUB
0x399 DUP2
0x39a PUSH1 0x0
0x39c DUP8
0x39d DUP1
0x39e EXTCODESIZE
0x39f ISZERO
0x3a0 ISZERO
0x3a1 PUSH2 0x3a9
0x3a4 JUMPI
---
0x334: JUMPDEST 
0x338: V322 = 0x40
0x33a: V323 = M[0x40]
0x33c: V324 = M[V323]
0x33d: V325 = 0x1
0x33f: V326 = S[0x1]
0x340: V327 = 0x0
0x343: V328 = S[0x0]
0x347: V329 = 0x1
0x349: V330 = 0xa0
0x34b: V331 = 0x2
0x34d: V332 = EXP 0x2 0xa0
0x34e: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x354: V335 = 0xa9059cbb
0x35c: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x360: V337 = 0x40
0x362: V338 = M[0x40]
0x363: V339 = 0x20
0x365: V340 = ADD 0x20 V338
0x366: M[V340] = 0x0
0x367: V341 = 0x40
0x369: V342 = M[0x40]
0x36a: V343 = 0xe0
0x36c: V344 = 0x2
0x36e: V345 = EXP 0x2 0xe0
0x36f: V346 = 0xffffffff
0x375: V347 = AND 0xa9059cbb 0xffffffff
0x376: V348 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x378: M[V342] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x379: V349 = 0x1
0x37b: V350 = 0xa0
0x37d: V351 = 0x2
0x37f: V352 = EXP 0x2 0xa0
0x380: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x383: V354 = AND V336 0xffffffffffffffffffffffffffffffffffffffff
0x384: V355 = 0x4
0x387: V356 = ADD V342 0x4
0x388: M[V356] = V354
0x389: V357 = 0x24
0x38c: V358 = ADD V342 0x24
0x38d: M[V358] = V324
0x38e: V359 = 0x44
0x390: V360 = ADD 0x44 V342
0x391: V361 = 0x20
0x393: V362 = 0x40
0x395: V363 = M[0x40]
0x398: V364 = SUB V360 V363
0x39a: V365 = 0x0
0x39e: V366 = EXTCODESIZE V334
0x39f: V367 = ISZERO V366
0x3a0: V368 = ISZERO V367
0x3a1: V369 = 0x3a9
0x3a4: JUMPI 0x3a9 V368
---
Entry stack: [V12, 0x65, 0x0, V278, 0x70a08231, V303]
Stack pops: 4
Stack additions: [V324, V334, 0xa9059cbb, V360, 0x20, V363, V364, V363, 0x0, V334]
Exit stack: [V12, 0x65, V324, V334, 0xa9059cbb, V360, 0x20, V363, V364, V363, 0x0, V334]

================================

Block 0x3a5
[0x3a5:0x3a8]
---
Predecessors: [0x334]
Successors: []
---
0x3a5 PUSH1 0x0
0x3a7 DUP1
0x3a8 REVERT
---
0x3a5: V370 = 0x0
0x3a8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, V324, V334, 0xa9059cbb, V360, 0x20, V363, V364, V363, 0x0, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V324, V334, 0xa9059cbb, V360, 0x20, V363, V364, V363, 0x0, V334]

================================

Block 0x3a9
[0x3a9:0x3b5]
---
Predecessors: [0x334]
Successors: [0x3b6, 0x3ba]
---
0x3a9 JUMPDEST
0x3aa PUSH2 0x2c6
0x3ad GAS
0x3ae SUB
0x3af CALL
0x3b0 ISZERO
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3a9: JUMPDEST 
0x3aa: V371 = 0x2c6
0x3ad: V372 = GAS
0x3ae: V373 = SUB V372 0x2c6
0x3af: V374 = CALL V373 V334 0x0 V363 V364 V363 0x20
0x3b0: V375 = ISZERO V374
0x3b1: V376 = ISZERO V375
0x3b2: V377 = 0x3ba
0x3b5: JUMPI 0x3ba V376
---
Entry stack: [V12, 0x65, V324, V334, 0xa9059cbb, V360, 0x20, V363, V364, V363, 0x0, V334]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x65, V324, V334, 0xa9059cbb, V360]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3a9]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V378 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, V324, V334, 0xa9059cbb, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V324, V334, 0xa9059cbb, V360]

================================

Block 0x3ba
[0x3ba:0x3d1]
---
Predecessors: [0x3a9]
Successors: []
---
0x3ba JUMPDEST
0x3bb POP
0x3bc POP
0x3bd POP
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 DUP1
0x3c2 MLOAD
0x3c3 POP
0x3c4 POP
0x3c5 PUSH1 0x0
0x3c7 SLOAD
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf SUB
0x3d0 AND
0x3d1 SELFDESTRUCT
---
0x3ba: JUMPDEST 
0x3be: V379 = 0x40
0x3c0: V380 = M[0x40]
0x3c2: V381 = M[V380]
0x3c5: V382 = 0x0
0x3c7: V383 = S[0x0]
0x3c8: V384 = 0x1
0x3ca: V385 = 0xa0
0x3cc: V386 = 0x2
0x3ce: V387 = EXP 0x2 0xa0
0x3cf: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x3d1: SELFDESTRUCT V389
---
Entry stack: [V12, 0x65, V324, V334, 0xa9059cbb, V360]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x65, V324]

================================

Block 0x3d2
[0x3d2:0x3d2]
---
Predecessors: []
Successors: [0x3d3]
---
0x3d2 JUMPDEST
---
0x3d2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d3
[0x3d3:0x3d5]
---
Predecessors: [0x3d2]
Successors: []
Has unresolved jump.
---
0x3d3 JUMPDEST
0x3d4 POP
0x3d5 JUMP
---
0x3d3: JUMPDEST 
0x3d5: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x3d6
[0x3d6:0x3e4]
---
Predecessors: [0xd2]
Successors: [0xda]
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x0
0x3d9 SLOAD
0x3da PUSH1 0x1
0x3dc PUSH1 0xa0
0x3de PUSH1 0x2
0x3e0 EXP
0x3e1 SUB
0x3e2 AND
0x3e3 DUP2
0x3e4 JUMP
---
0x3d6: JUMPDEST 
0x3d7: V390 = 0x0
0x3d9: V391 = S[0x0]
0x3da: V392 = 0x1
0x3dc: V393 = 0xa0
0x3de: V394 = 0x2
0x3e0: V395 = EXP 0x2 0xa0
0x3e1: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e2: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x3e4: JUMP 0xda
---
Entry stack: [V12, 0xda]
Stack pops: 1
Stack additions: [S0, V397]
Exit stack: [V12, 0xda, V397]

================================

Block 0x3e5
[0x3e5:0x3fb]
---
Predecessors: [0x10b]
Successors: [0x3fc, 0x400]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x0
0x3e8 SLOAD
0x3e9 CALLER
0x3ea PUSH1 0x1
0x3ec PUSH1 0xa0
0x3ee PUSH1 0x2
0x3f0 EXP
0x3f1 SUB
0x3f2 SWAP1
0x3f3 DUP2
0x3f4 AND
0x3f5 SWAP2
0x3f6 AND
0x3f7 EQ
0x3f8 PUSH2 0x400
0x3fb JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V398 = 0x0
0x3e8: V399 = S[0x0]
0x3e9: V400 = CALLER
0x3ea: V401 = 0x1
0x3ec: V402 = 0xa0
0x3ee: V403 = 0x2
0x3f0: V404 = EXP 0x2 0xa0
0x3f1: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f4: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x3f6: V407 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V408 = EQ V407 V406
0x3f8: V409 = 0x400
0x3fb: JUMPI 0x400 V408
---
Entry stack: [V12, 0x65, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V98]

================================

Block 0x3fc
[0x3fc:0x3ff]
---
Predecessors: [0x3e5]
Successors: []
---
0x3fc PUSH1 0x0
0x3fe DUP1
0x3ff REVERT
---
0x3fc: V410 = 0x0
0x3ff: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V98]

================================

Block 0x400
[0x400:0x410]
---
Predecessors: [0x3e5]
Successors: [0x411, 0x415]
---
0x400 JUMPDEST
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 DUP2
0x40a AND
0x40b ISZERO
0x40c ISZERO
0x40d PUSH2 0x415
0x410 JUMPI
---
0x400: JUMPDEST 
0x401: V411 = 0x1
0x403: V412 = 0xa0
0x405: V413 = 0x2
0x407: V414 = EXP 0x2 0xa0
0x408: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40a: V416 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V417 = ISZERO V416
0x40c: V418 = ISZERO V417
0x40d: V419 = 0x415
0x410: JUMPI 0x415 V418
---
Entry stack: [V12, 0x65, V98]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x65, V98]

================================

Block 0x411
[0x411:0x414]
---
Predecessors: [0x400]
Successors: []
---
0x411 PUSH1 0x0
0x413 DUP1
0x414 REVERT
---
0x411: V420 = 0x0
0x414: REVERT 0x0 0x0
---
Entry stack: [V12, 0x65, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V98]

================================

Block 0x415
[0x415:0x43d]
---
Predecessors: [0x400]
Successors: [0x43e]
---
0x415 JUMPDEST
0x416 PUSH1 0x0
0x418 DUP1
0x419 SLOAD
0x41a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42f NOT
0x430 AND
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 DUP4
0x43a AND
0x43b OR
0x43c SWAP1
0x43d SSTORE
---
0x415: JUMPDEST 
0x416: V421 = 0x0
0x419: V422 = S[0x0]
0x41a: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V424 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x430: V425 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V422
0x431: V426 = 0x1
0x433: V427 = 0xa0
0x435: V428 = 0x2
0x437: V429 = EXP 0x2 0xa0
0x438: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43a: V431 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x43b: V432 = OR V431 V425
0x43d: S[0x0] = V432
---
Entry stack: [V12, 0x65, V98]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x65, V98]

================================

Block 0x43e
[0x43e:0x43e]
---
Predecessors: [0x415]
Successors: [0x43f]
---
0x43e JUMPDEST
---
0x43e: JUMPDEST 
---
Entry stack: [V12, 0x65, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V98]

================================

Block 0x43f
[0x43f:0x441]
---
Predecessors: [0x43e]
Successors: [0x65]
---
0x43f JUMPDEST
0x440 POP
0x441 JUMP
---
0x43f: JUMPDEST 
0x441: JUMP 0x65
---
Entry stack: [V12, 0x65, V98]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x442
[0x442:0x44e]
---
Predecessors: [0x121]
Successors: [0x44f, 0x45e]
---
0x442 JUMPDEST
0x443 PUSH1 0x0
0x445 DUP3
0x446 DUP3
0x447 MUL
0x448 DUP4
0x449 ISZERO
0x44a DUP1
0x44b PUSH2 0x45e
0x44e JUMPI
---
0x442: JUMPDEST 
0x443: V433 = 0x0
0x447: V434 = MUL V101 V102
0x449: V435 = ISZERO V102
0x44b: V436 = 0x45e
0x44e: JUMPI 0x45e V435
---
Entry stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V434, V435]
Exit stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434, V435]

================================

Block 0x44f
[0x44f:0x459]
---
Predecessors: [0x442]
Successors: [0x45a, 0x45b]
---
0x44f POP
0x450 DUP3
0x451 DUP5
0x452 DUP3
0x453 DUP2
0x454 ISZERO
0x455 ISZERO
0x456 PUSH2 0x45b
0x459 JUMPI
---
0x454: V437 = ISZERO V102
0x455: V438 = ISZERO V437
0x456: V439 = 0x45b
0x459: JUMPI 0x45b V438
---
Entry stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434, V435]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434, V101, V102, V434]

================================

Block 0x45a
[0x45a:0x45a]
---
Predecessors: [0x44f]
Successors: []
---
0x45a INVALID
---
0x45a: INVALID 
---
Entry stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434, V101, V102, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434, V101, V102, V434]

================================

Block 0x45b
[0x45b:0x45d]
---
Predecessors: [0x44f]
Successors: [0x45e]
---
0x45b JUMPDEST
0x45c DIV
0x45d EQ
---
0x45b: JUMPDEST 
0x45c: V440 = DIV V434 V102
0x45d: V441 = EQ V440 V101
---
Entry stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434, V101, V102, V434]
Stack pops: 3
Stack additions: [V441]
Exit stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434, V441]

================================

Block 0x45e
[0x45e:0x464]
---
Predecessors: [0x442, 0x45b]
Successors: [0x465, 0x466]
---
0x45e JUMPDEST
0x45f ISZERO
0x460 ISZERO
0x461 PUSH2 0x466
0x464 JUMPI
---
0x45e: JUMPDEST 
0x45f: V442 = ISZERO S0
0x460: V443 = ISZERO V442
0x461: V444 = 0x466
0x464: JUMPI 0x466 V443
---
Entry stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434]

================================

Block 0x465
[0x465:0x465]
---
Predecessors: [0x45e]
Successors: []
---
0x465 INVALID
---
0x465: INVALID 
---
Entry stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434]

================================

Block 0x466
[0x466:0x469]
---
Predecessors: [0x45e]
Successors: [0x46a]
---
0x466 JUMPDEST
0x467 DUP1
0x468 SWAP2
0x469 POP
---
0x466: JUMPDEST 
---
Entry stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, 0x0, V434]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, V434, V434]

================================

Block 0x46a
[0x46a:0x470]
---
Predecessors: [0x466]
Successors: [0x13a]
---
0x46a JUMPDEST
0x46b POP
0x46c SWAP3
0x46d SWAP2
0x46e POP
0x46f POP
0x470 JUMP
---
0x46a: JUMPDEST 
0x470: JUMP 0x13a
---
Entry stack: [V12, 0x65, V102, 0x0, 0x13a, V102, V101, V434, V434]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x65, V102, 0x0, V434]

================================

Block 0x471
[0x471:0x4a1]
---
Predecessors: []
Successors: []
---
0x471 STOP
0x472 LOG1
0x473 PUSH6 0x627a7a723058
0x47a SHA3
0x47b DUP9
0x47c MISSING 0xe5
0x47d MISSING 0xdd
0x47e MISSING 0x49
0x47f MISSING 0xc2
0x480 GT
0x481 MISSING 0xde
0x482 DUP6
0x483 DUP4
0x484 PUSH13 0x5132971ec26b38e26d6e0e9738
0x492 MISSING 0xc8
0x493 SHA3
0x494 MISSING 0xa8
0x495 MISSING 0xe1
0x496 PUSH11 0x3fe27ec80029
---
0x471: STOP 
0x472: LOG S0 S1 S2
0x473: V445 = 0x627a7a723058
0x47a: V446 = SHA3 0x627a7a723058 S3
0x47c: MISSING 0xe5
0x47d: MISSING 0xdd
0x47e: MISSING 0x49
0x47f: MISSING 0xc2
0x480: V447 = GT S0 S1
0x481: MISSING 0xde
0x484: V448 = 0x5132971ec26b38e26d6e0e9738
0x492: MISSING 0xc8
0x493: V449 = SHA3 S0 S1
0x494: MISSING 0xa8
0x495: MISSING 0xe1
0x496: V450 = 0x3fe27ec80029
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, V446, S4, S5, S6, S7, S8, S9, S10, S11, V447, 0x5132971ec26b38e26d6e0e9738, S2, S5, S0, S1, S2, S3, S4, S5, V449, 0x3fe27ec80029]
Exit stack: []

================================

Function 0:
Public function signature: 0x60659a92
Entry block: 0x68
Exit block: 0x7b
Body: 0x68, 0x6f, 0x73, 0x7b, 0x22d, 0x284, 0x288, 0x295, 0x299, 0x2a5

Function 1:
Public function signature: 0x664e9704
Entry block: 0x8d
Exit block: 0x7b
Body: 0x7b, 0x8d, 0x94, 0x98, 0x2a8

Function 2:
Public function signature: 0x83197ef0
Entry block: 0xb2
Exit block: 0x3ba
Body: 0xb2, 0xb9, 0xbd, 0x2ae, 0x2c6, 0x2ca, 0x31f, 0x323, 0x330, 0x334, 0x3a5, 0x3a9, 0x3b6, 0x3ba

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xc7
Exit block: 0xda
Body: 0xc7, 0xce, 0xd2, 0xda, 0x3d6

Function 4:
Public function signature: 0xd0febe4c
Entry block: 0x5c
Exit block: 0x66
Body: 0x5c, 0x5d, 0x65, 0x66

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x100
Exit block: 0x66
Body: 0x65, 0x66, 0x100, 0x107, 0x10b, 0x3e5, 0x3fc, 0x400, 0x411, 0x415, 0x43e, 0x43f

Function 6:
Public fallback function
Entry block: 0x5c
Exit block: 0x66
Body: 0x5c, 0x5d, 0x65, 0x66

Function 7:
Private function
Entry block: 0x121
Exit block: 0x43f
Body: 0x121, 0x13a, 0x19c, 0x1ad, 0x228, 0x229, 0x442, 0x44f, 0x45b, 0x45e, 0x466, 0x46a

