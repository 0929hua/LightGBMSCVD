Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6720ceb1
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x58
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6720ceb1
0x3b: V13 = EQ V11 0x6720ceb1
0x3c: V14 = 0x58
0x3f: JUMPI 0x58 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6b]
---
0x40 DUP1
0x41 PUSH4 0x8de38f98
0x46 EQ
0x47 PUSH2 0x6b
0x4a JUMPI
---
0x41: V15 = 0x8de38f98
0x46: V16 = EQ 0x8de38f98 V11
0x47: V17 = 0x6b
0x4a: JUMPI 0x6b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x9a]
---
0x4b DUP1
0x4c PUSH4 0xeabe09ad
0x51 EQ
0x52 PUSH2 0x9a
0x55 JUMPI
---
0x4c: V18 = 0xeabe09ad
0x51: V19 = EQ 0xeabe09ad V11
0x52: V20 = 0x9a
0x55: JUMPI 0x9a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0x15c]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5e]
---
Predecessors: [0xd]
Successors: [0x5f, 0x63]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a ISZERO
0x5b PUSH2 0x63
0x5e JUMPI
---
0x58: JUMPDEST 
0x59: V21 = CALLVALUE
0x5a: V22 = ISZERO V21
0x5b: V23 = 0x63
0x5e: JUMPI 0x63 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x58]
Successors: []
---
0x5f PUSH1 0x0
0x61 DUP1
0x62 REVERT
---
0x5f: V24 = 0x0
0x62: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0x58]
Successors: [0xad]
---
0x63 JUMPDEST
0x64 PUSH2 0x56
0x67 PUSH2 0xad
0x6a JUMP
---
0x63: JUMPDEST 
0x64: V25 = 0x56
0x67: V26 = 0xad
0x6a: JUMP 0xad
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x6b
[0x6b:0x71]
---
Predecessors: [0x40]
Successors: [0x72, 0x76]
---
0x6b JUMPDEST
0x6c CALLVALUE
0x6d ISZERO
0x6e PUSH2 0x76
0x71 JUMPI
---
0x6b: JUMPDEST 
0x6c: V27 = CALLVALUE
0x6d: V28 = ISZERO V27
0x6e: V29 = 0x76
0x71: JUMPI 0x76 V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x6b]
Successors: []
---
0x72 PUSH1 0x0
0x74 DUP1
0x75 REVERT
---
0x72: V30 = 0x0
0x75: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x7d]
---
Predecessors: [0x6b]
Successors: [0x15f]
---
0x76 JUMPDEST
0x77 PUSH2 0x7e
0x7a PUSH2 0x15f
0x7d JUMP
---
0x76: JUMPDEST 
0x77: V31 = 0x7e
0x7a: V32 = 0x15f
0x7d: JUMP 0x15f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7e]
Exit stack: [V11, 0x7e]

================================

Block 0x7e
[0x7e:0x99]
---
Predecessors: [0x15f, 0x16e]
Successors: []
---
0x7e JUMPDEST
0x7f PUSH1 0x40
0x81 MLOAD
0x82 PUSH1 0x1
0x84 PUSH1 0xa0
0x86 PUSH1 0x2
0x88 EXP
0x89 SUB
0x8a SWAP1
0x8b SWAP2
0x8c AND
0x8d DUP2
0x8e MSTORE
0x8f PUSH1 0x20
0x91 ADD
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 SWAP2
0x97 SUB
0x98 SWAP1
0x99 RETURN
---
0x7e: JUMPDEST 
0x7f: V33 = 0x40
0x81: V34 = M[0x40]
0x82: V35 = 0x1
0x84: V36 = 0xa0
0x86: V37 = 0x2
0x88: V38 = EXP 0x2 0xa0
0x89: V39 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c: V40 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8e: M[V34] = V40
0x8f: V41 = 0x20
0x91: V42 = ADD 0x20 V34
0x92: V43 = 0x40
0x94: V44 = M[0x40]
0x97: V45 = SUB V42 V44
0x99: RETURN V44 V45
---
Entry stack: [V11, 0x7e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x7e]

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0x4b]
Successors: [0xa1, 0xa5]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c ISZERO
0x9d PUSH2 0xa5
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V46 = CALLVALUE
0x9c: V47 = ISZERO V46
0x9d: V48 = 0xa5
0xa0: JUMPI 0xa5 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa1: V49 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa5
[0xa5:0xac]
---
Predecessors: [0x9a]
Successors: [0x16e]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x7e
0xa9 PUSH2 0x16e
0xac JUMP
---
0xa5: JUMPDEST 
0xa6: V50 = 0x7e
0xa9: V51 = 0x16e
0xac: JUMP 0x16e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7e]
Exit stack: [V11, 0x7e]

================================

Block 0xad
[0xad:0xc5]
---
Predecessors: [0x63]
Successors: [0xc6, 0xd9]
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 DUP1
0xb1 SLOAD
0xb2 CALLER
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb SWAP1
0xbc DUP2
0xbd AND
0xbe SWAP2
0xbf AND
0xc0 EQ
0xc1 DUP1
0xc2 PUSH2 0xd9
0xc5 JUMPI
---
0xad: JUMPDEST 
0xae: V52 = 0x0
0xb1: V53 = S[0x0]
0xb2: V54 = CALLER
0xb3: V55 = 0x1
0xb5: V56 = 0xa0
0xb7: V57 = 0x2
0xb9: V58 = EXP 0x2 0xa0
0xba: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xbf: V61 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V62 = EQ V61 V60
0xc2: V63 = 0xd9
0xc5: JUMPI 0xd9 V62
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: [0x0, V62]
Exit stack: [V11, 0x56, 0x0, V62]

================================

Block 0xc6
[0xc6:0xd8]
---
Predecessors: [0xad]
Successors: [0xd9]
---
0xc6 POP
0xc7 PUSH1 0x1
0xc9 SLOAD
0xca CALLER
0xcb PUSH1 0x1
0xcd PUSH1 0xa0
0xcf PUSH1 0x2
0xd1 EXP
0xd2 SUB
0xd3 SWAP1
0xd4 DUP2
0xd5 AND
0xd6 SWAP2
0xd7 AND
0xd8 EQ
---
0xc7: V64 = 0x1
0xc9: V65 = S[0x1]
0xca: V66 = CALLER
0xcb: V67 = 0x1
0xcd: V68 = 0xa0
0xcf: V69 = 0x2
0xd1: V70 = EXP 0x2 0xa0
0xd2: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xd7: V73 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xd8: V74 = EQ V73 V72
---
Entry stack: [V11, 0x56, 0x0, V62]
Stack pops: 1
Stack additions: [V74]
Exit stack: [V11, 0x56, 0x0, V74]

================================

Block 0xd9
[0xd9:0xdf]
---
Predecessors: [0xad, 0xc6]
Successors: [0xe0, 0xe4]
---
0xd9 JUMPDEST
0xda ISZERO
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd9: JUMPDEST 
0xda: V75 = ISZERO S0
0xdb: V76 = ISZERO V75
0xdc: V77 = 0xe4
0xdf: JUMPI 0xe4 V76
---
Entry stack: [V11, 0x56, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56, 0x0]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd9]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V78 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, 0x0]

================================

Block 0xe4
[0xe4:0x124]
---
Predecessors: [0xd9]
Successors: [0x125, 0x129]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x2
0xe7 PUSH1 0x1
0xe9 PUSH1 0xa0
0xeb PUSH1 0x2
0xed EXP
0xee SUB
0xef ADDRESS
0xf0 AND
0xf1 BALANCE
0xf2 PUSH1 0x0
0xf4 SLOAD
0xf5 SWAP2
0xf6 SWAP1
0xf7 DIV
0xf8 SWAP2
0xf9 POP
0xfa PUSH1 0x1
0xfc PUSH1 0xa0
0xfe PUSH1 0x2
0x100 EXP
0x101 SUB
0x102 AND
0x103 DUP2
0x104 ISZERO
0x105 PUSH2 0x8fc
0x108 MUL
0x109 DUP3
0x10a PUSH1 0x40
0x10c MLOAD
0x10d PUSH1 0x0
0x10f PUSH1 0x40
0x111 MLOAD
0x112 DUP1
0x113 DUP4
0x114 SUB
0x115 DUP2
0x116 DUP6
0x117 DUP9
0x118 DUP9
0x119 CALL
0x11a SWAP4
0x11b POP
0x11c POP
0x11d POP
0x11e POP
0x11f ISZERO
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0xe4: JUMPDEST 
0xe5: V79 = 0x2
0xe7: V80 = 0x1
0xe9: V81 = 0xa0
0xeb: V82 = 0x2
0xed: V83 = EXP 0x2 0xa0
0xee: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef: V85 = ADDRESS
0xf0: V86 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V87 = BALANCE V86
0xf2: V88 = 0x0
0xf4: V89 = S[0x0]
0xf7: V90 = DIV V87 0x2
0xfa: V91 = 0x1
0xfc: V92 = 0xa0
0xfe: V93 = 0x2
0x100: V94 = EXP 0x2 0xa0
0x101: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x102: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x104: V97 = ISZERO V90
0x105: V98 = 0x8fc
0x108: V99 = MUL 0x8fc V97
0x10a: V100 = 0x40
0x10c: V101 = M[0x40]
0x10d: V102 = 0x0
0x10f: V103 = 0x40
0x111: V104 = M[0x40]
0x114: V105 = SUB V101 V104
0x119: V106 = CALL V99 V96 V90 V104 V105 V104 0x0
0x11f: V107 = ISZERO V106
0x120: V108 = ISZERO V107
0x121: V109 = 0x129
0x124: JUMPI 0x129 V108
---
Entry stack: [V11, 0x56, 0x0]
Stack pops: 1
Stack additions: [V90]
Exit stack: [V11, 0x56, V90]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0xe4]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V110 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V90]

================================

Block 0x129
[0x129:0x157]
---
Predecessors: [0xe4]
Successors: [0x158, 0x15c]
---
0x129 JUMPDEST
0x12a PUSH1 0x1
0x12c SLOAD
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 AND
0x136 DUP2
0x137 ISZERO
0x138 PUSH2 0x8fc
0x13b MUL
0x13c DUP3
0x13d PUSH1 0x40
0x13f MLOAD
0x140 PUSH1 0x0
0x142 PUSH1 0x40
0x144 MLOAD
0x145 DUP1
0x146 DUP4
0x147 SUB
0x148 DUP2
0x149 DUP6
0x14a DUP9
0x14b DUP9
0x14c CALL
0x14d SWAP4
0x14e POP
0x14f POP
0x150 POP
0x151 POP
0x152 ISZERO
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x129: JUMPDEST 
0x12a: V111 = 0x1
0x12c: V112 = S[0x1]
0x12d: V113 = 0x1
0x12f: V114 = 0xa0
0x131: V115 = 0x2
0x133: V116 = EXP 0x2 0xa0
0x134: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x137: V119 = ISZERO V90
0x138: V120 = 0x8fc
0x13b: V121 = MUL 0x8fc V119
0x13d: V122 = 0x40
0x13f: V123 = M[0x40]
0x140: V124 = 0x0
0x142: V125 = 0x40
0x144: V126 = M[0x40]
0x147: V127 = SUB V123 V126
0x14c: V128 = CALL V121 V118 V90 V126 V127 V126 0x0
0x152: V129 = ISZERO V128
0x153: V130 = ISZERO V129
0x154: V131 = 0x15c
0x157: JUMPI 0x15c V130
---
Entry stack: [V11, 0x56, V90]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x56, V90]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x129]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V132 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V90]

================================

Block 0x15c
[0x15c:0x15e]
---
Predecessors: [0x129]
Successors: [0x56]
---
0x15c JUMPDEST
0x15d POP
0x15e JUMP
---
0x15c: JUMPDEST 
0x15e: JUMP 0x56
---
Entry stack: [V11, 0x56, V90]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x15f
[0x15f:0x16d]
---
Predecessors: [0x76]
Successors: [0x7e]
---
0x15f JUMPDEST
0x160 PUSH1 0x1
0x162 SLOAD
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b AND
0x16c DUP2
0x16d JUMP
---
0x15f: JUMPDEST 
0x160: V133 = 0x1
0x162: V134 = S[0x1]
0x163: V135 = 0x1
0x165: V136 = 0xa0
0x167: V137 = 0x2
0x169: V138 = EXP 0x2 0xa0
0x16a: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x16d: JUMP 0x7e
---
Entry stack: [V11, 0x7e]
Stack pops: 1
Stack additions: [S0, V140]
Exit stack: [V11, 0x7e, V140]

================================

Block 0x16e
[0x16e:0x17c]
---
Predecessors: [0xa5]
Successors: [0x7e]
---
0x16e JUMPDEST
0x16f PUSH1 0x0
0x171 SLOAD
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a AND
0x17b DUP2
0x17c JUMP
---
0x16e: JUMPDEST 
0x16f: V141 = 0x0
0x171: V142 = S[0x0]
0x172: V143 = 0x1
0x174: V144 = 0xa0
0x176: V145 = 0x2
0x178: V146 = EXP 0x2 0xa0
0x179: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x17c: JUMP 0x7e
---
Entry stack: [V11, 0x7e]
Stack pops: 1
Stack additions: [S0, V148]
Exit stack: [V11, 0x7e, V148]

================================

Block 0x17d
[0x17d:0x1ba]
---
Predecessors: []
Successors: []
---
0x17d STOP
0x17e LOG1
0x17f PUSH6 0x627a7a723058
0x186 SHA3
0x187 MISSING 0xdc
0x188 PUSH15 0x82e5996faba12a4b75df440615f0c8
0x198 BLOCKHASH
0x199 CALLCODE
0x19a PUSH32 0xc46ddb6eeeef89fbe3a9c51c0029
---
0x17d: STOP 
0x17e: LOG S0 S1 S2
0x17f: V149 = 0x627a7a723058
0x186: V150 = SHA3 0x627a7a723058 S3
0x187: MISSING 0xdc
0x188: V151 = 0x82e5996faba12a4b75df440615f0c8
0x198: V152 = BLOCKHASH 0x82e5996faba12a4b75df440615f0c8
0x199: V153 = CALLCODE V152 S0 S1 S2 S3 S4 S5
0x19a: V154 = 0xc46ddb6eeeef89fbe3a9c51c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V150, 0xc46ddb6eeeef89fbe3a9c51c0029, V153]
Exit stack: []

================================

Function 0:
Public function signature: 0x6720ceb1
Entry block: 0x58
Exit block: 0x56
Body: 0x56, 0x58, 0x5f, 0x63, 0xad, 0xc6, 0xd9, 0xe0, 0xe4, 0x125, 0x129, 0x158, 0x15c

Function 1:
Public function signature: 0x8de38f98
Entry block: 0x6b
Exit block: 0x7e
Body: 0x6b, 0x72, 0x76, 0x7e, 0x15f

Function 2:
Public function signature: 0xeabe09ad
Entry block: 0x9a
Exit block: 0x7e
Body: 0x7e, 0x9a, 0xa1, 0xa5, 0x16e

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

