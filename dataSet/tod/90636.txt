Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x63]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x3ccfd60b
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x63
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x3ccfd60b
0x1a: V12 = EQ V10 0x3ccfd60b
0x1b: V13 = 0x63
0x1e: JUMPI 0x63 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x81]
---
0x1f DUP1
0x20 PUSH4 0x53d52a5f
0x25 EQ
0x26 PUSH2 0x81
0x29 JUMPI
---
0x20: V14 = 0x53d52a5f
0x25: V15 = EQ 0x53d52a5f V10
0x26: V16 = 0x81
0x29: JUMPI 0x81 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xa2]
---
0x2a DUP1
0x2b PUSH4 0x777a41ca
0x30 EQ
0x31 PUSH2 0xa2
0x34 JUMPI
---
0x2b: V17 = 0x777a41ca
0x30: V18 = EQ 0x777a41ca V10
0x31: V19 = 0xa2
0x34: JUMPI 0xa2 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xc5]
---
0x35 DUP1
0x36 PUSH4 0x97a993aa
0x3b EQ
0x3c PUSH2 0xc5
0x3f JUMPI
---
0x36: V20 = 0x97a993aa
0x3b: V21 = EQ 0x97a993aa V10
0x3c: V22 = 0xc5
0x3f: JUMPI 0xc5 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xe6]
---
0x40 DUP1
0x41 PUSH4 0xdefd6c5f
0x46 EQ
0x47 PUSH2 0xe6
0x4a JUMPI
---
0x41: V23 = 0xdefd6c5f
0x46: V24 = EQ 0xdefd6c5f V10
0x47: V25 = 0xe6
0x4a: JUMPI 0xe6 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xef]
---
0x4b DUP1
0x4c PUSH4 0xf2fde38b
0x51 EQ
0x52 PUSH2 0xef
0x55 JUMPI
---
0x4c: V26 = 0xf2fde38b
0x51: V27 = EQ 0xf2fde38b V10
0x52: V28 = 0xef
0x55: JUMPI 0xef V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x110]
---
0x56 DUP1
0x57 PUSH4 0xfc0e74d1
0x5c EQ
0x5d PUSH2 0x110
0x60 JUMPI
---
0x57: V29 = 0xfc0e74d1
0x5c: V30 = EQ 0xfc0e74d1 V10
0x5d: V31 = 0x110
0x60: JUMPI 0x110 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x184, 0x186, 0x2c7]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x7c]
---
Predecessors: [0xb]
Successors: [0x7d, 0x155]
---
0x63 JUMPDEST
0x64 PUSH2 0x61
0x67 PUSH1 0x2
0x69 SLOAD
0x6a CALLER
0x6b PUSH1 0x1
0x6d PUSH1 0xa0
0x6f PUSH1 0x2
0x71 EXP
0x72 SUB
0x73 SWAP1
0x74 DUP2
0x75 AND
0x76 SWAP2
0x77 AND
0x78 EQ
0x79 PUSH2 0x155
0x7c JUMPI
---
0x63: JUMPDEST 
0x64: V32 = 0x61
0x67: V33 = 0x2
0x69: V34 = S[0x2]
0x6a: V35 = CALLER
0x6b: V36 = 0x1
0x6d: V37 = 0xa0
0x6f: V38 = 0x2
0x71: V39 = EXP 0x2 0xa0
0x72: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x77: V42 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x78: V43 = EQ V42 V41
0x79: V44 = 0x155
0x7c: JUMPI 0x155 V43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V10, 0x61]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x63]
Successors: []
---
0x7d PUSH2 0x2
0x80 JUMP
---
0x7d: V45 = 0x2
0x80: THROW 
---
Entry stack: [V10, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61]

================================

Block 0x81
[0x81:0x9d]
---
Predecessors: [0x1f]
Successors: [0x9e, 0x186]
---
0x81 JUMPDEST
0x82 PUSH2 0x61
0x85 PUSH1 0x4
0x87 CALLDATALOAD
0x88 PUSH1 0x2
0x8a SLOAD
0x8b CALLER
0x8c PUSH1 0x1
0x8e PUSH1 0xa0
0x90 PUSH1 0x2
0x92 EXP
0x93 SUB
0x94 SWAP1
0x95 DUP2
0x96 AND
0x97 SWAP2
0x98 AND
0x99 EQ
0x9a PUSH2 0x186
0x9d JUMPI
---
0x81: JUMPDEST 
0x82: V46 = 0x61
0x85: V47 = 0x4
0x87: V48 = CALLDATALOAD 0x4
0x88: V49 = 0x2
0x8a: V50 = S[0x2]
0x8b: V51 = CALLER
0x8c: V52 = 0x1
0x8e: V53 = 0xa0
0x90: V54 = 0x2
0x92: V55 = EXP 0x2 0xa0
0x93: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x98: V58 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x99: V59 = EQ V58 V57
0x9a: V60 = 0x186
0x9d: JUMPI 0x186 V59
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x61, V48]
Exit stack: [V10, 0x61, V48]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x81]
Successors: []
---
0x9e PUSH2 0x2
0xa1 JUMP
---
0x9e: V61 = 0x2
0xa1: THROW 
---
Entry stack: [V10, 0x61, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61, V48]

================================

Block 0xa2
[0xa2:0xc0]
---
Predecessors: [0x2a]
Successors: [0xc1, 0x1a8]
---
0xa2 JUMPDEST
0xa3 PUSH2 0x12e
0xa6 PUSH1 0x4
0xa8 CALLDATALOAD
0xa9 PUSH1 0x4
0xab SLOAD
0xac PUSH1 0x0
0xae SWAP1
0xaf DUP2
0xb0 SWAP1
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 AND
0xba DUP2
0xbb EQ
0xbc ISZERO
0xbd PUSH2 0x1a8
0xc0 JUMPI
---
0xa2: JUMPDEST 
0xa3: V62 = 0x12e
0xa6: V63 = 0x4
0xa8: V64 = CALLDATALOAD 0x4
0xa9: V65 = 0x4
0xab: V66 = S[0x4]
0xac: V67 = 0x0
0xb1: V68 = 0x1
0xb3: V69 = 0xa0
0xb5: V70 = 0x2
0xb7: V71 = EXP 0x2 0xa0
0xb8: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xbb: V74 = EQ 0x0 V73
0xbc: V75 = ISZERO V74
0xbd: V76 = 0x1a8
0xc0: JUMPI 0x1a8 V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12e, V64, 0x0, 0x0]
Exit stack: [V10, 0x12e, V64, 0x0, 0x0]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xa2]
Successors: []
---
0xc1 PUSH2 0x2
0xc4 JUMP
---
0xc1: V77 = 0x2
0xc4: THROW 
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12e, V64, 0x0, 0x0]

================================

Block 0xc5
[0xc5:0xe5]
---
Predecessors: [0x35]
Successors: [0x12e]
---
0xc5 JUMPDEST
0xc6 PUSH2 0x12e
0xc9 PUSH1 0x4
0xcb CALLDATALOAD
0xcc PUSH1 0x3
0xce PUSH1 0x20
0xd0 MSTORE
0xd1 PUSH1 0x0
0xd3 SWAP1
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x40
0xd8 SWAP1
0xd9 SHA3
0xda SLOAD
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 AND
0xe4 DUP2
0xe5 JUMP
---
0xc5: JUMPDEST 
0xc6: V78 = 0x12e
0xc9: V79 = 0x4
0xcb: V80 = CALLDATALOAD 0x4
0xcc: V81 = 0x3
0xce: V82 = 0x20
0xd0: M[0x20] = 0x3
0xd1: V83 = 0x0
0xd5: M[0x0] = V80
0xd6: V84 = 0x40
0xd9: V85 = SHA3 0x0 0x40
0xda: V86 = S[V85]
0xdb: V87 = 0x1
0xdd: V88 = 0xa0
0xdf: V89 = 0x2
0xe1: V90 = EXP 0x2 0xa0
0xe2: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0xe5: JUMP 0x12e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12e, V92]
Exit stack: [V10, 0x12e, V92]

================================

Block 0xe6
[0xe6:0xee]
---
Predecessors: [0x40]
Successors: [0x14b]
---
0xe6 JUMPDEST
0xe7 PUSH2 0x14b
0xea PUSH1 0x5
0xec SLOAD
0xed DUP2
0xee JUMP
---
0xe6: JUMPDEST 
0xe7: V93 = 0x14b
0xea: V94 = 0x5
0xec: V95 = S[0x5]
0xee: JUMP 0x14b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14b, V95]
Exit stack: [V10, 0x14b, V95]

================================

Block 0xef
[0xef:0x10b]
---
Predecessors: [0x4b]
Successors: [0x10c, 0x2c7]
---
0xef JUMPDEST
0xf0 PUSH2 0x61
0xf3 PUSH1 0x4
0xf5 CALLDATALOAD
0xf6 PUSH1 0x2
0xf8 SLOAD
0xf9 CALLER
0xfa PUSH1 0x1
0xfc PUSH1 0xa0
0xfe PUSH1 0x2
0x100 EXP
0x101 SUB
0x102 SWAP1
0x103 DUP2
0x104 AND
0x105 SWAP2
0x106 AND
0x107 EQ
0x108 PUSH2 0x2c7
0x10b JUMPI
---
0xef: JUMPDEST 
0xf0: V96 = 0x61
0xf3: V97 = 0x4
0xf5: V98 = CALLDATALOAD 0x4
0xf6: V99 = 0x2
0xf8: V100 = S[0x2]
0xf9: V101 = CALLER
0xfa: V102 = 0x1
0xfc: V103 = 0xa0
0xfe: V104 = 0x2
0x100: V105 = EXP 0x2 0xa0
0x101: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x106: V108 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x107: V109 = EQ V108 V107
0x108: V110 = 0x2c7
0x10b: JUMPI 0x2c7 V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x61, V98]
Exit stack: [V10, 0x61, V98]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0xef]
Successors: []
---
0x10c PUSH2 0x2
0x10f JUMP
---
0x10c: V111 = 0x2
0x10f: THROW 
---
Entry stack: [V10, 0x61, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61, V98]

================================

Block 0x110
[0x110:0x129]
---
Predecessors: [0x56]
Successors: [0x12a, 0x2e9]
---
0x110 JUMPDEST
0x111 PUSH2 0x61
0x114 PUSH1 0x2
0x116 SLOAD
0x117 CALLER
0x118 PUSH1 0x1
0x11a PUSH1 0xa0
0x11c PUSH1 0x2
0x11e EXP
0x11f SUB
0x120 SWAP1
0x121 DUP2
0x122 AND
0x123 SWAP2
0x124 AND
0x125 EQ
0x126 PUSH2 0x2e9
0x129 JUMPI
---
0x110: JUMPDEST 
0x111: V112 = 0x61
0x114: V113 = 0x2
0x116: V114 = S[0x2]
0x117: V115 = CALLER
0x118: V116 = 0x1
0x11a: V117 = 0xa0
0x11c: V118 = 0x2
0x11e: V119 = EXP 0x2 0xa0
0x11f: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x124: V122 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x125: V123 = EQ V122 V121
0x126: V124 = 0x2e9
0x129: JUMPI 0x2e9 V123
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V10, 0x61]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0x110]
Successors: []
---
0x12a PUSH2 0x2
0x12d JUMP
---
0x12a: V125 = 0x2
0x12d: THROW 
---
Entry stack: [V10, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61]

================================

Block 0x12e
[0x12e:0x14a]
---
Predecessors: [0xc5, 0x283]
Successors: []
---
0x12e JUMPDEST
0x12f PUSH1 0x40
0x131 DUP1
0x132 MLOAD
0x133 PUSH1 0x1
0x135 PUSH1 0xa0
0x137 PUSH1 0x2
0x139 EXP
0x13a SUB
0x13b SWAP3
0x13c SWAP1
0x13d SWAP3
0x13e AND
0x13f DUP3
0x140 MSTORE
0x141 MLOAD
0x142 SWAP1
0x143 DUP2
0x144 SWAP1
0x145 SUB
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP1
0x14a RETURN
---
0x12e: JUMPDEST 
0x12f: V126 = 0x40
0x132: V127 = M[0x40]
0x133: V128 = 0x1
0x135: V129 = 0xa0
0x137: V130 = 0x2
0x139: V131 = EXP 0x2 0xa0
0x13a: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x140: M[V127] = V133
0x141: V134 = M[0x40]
0x145: V135 = SUB V127 V134
0x146: V136 = 0x20
0x148: V137 = ADD 0x20 V135
0x14a: RETURN V134 V137
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x14b
[0x14b:0x154]
---
Predecessors: [0xe6]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x60
0x14e SWAP1
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 SWAP1
0x154 RETURN
---
0x14b: JUMPDEST 
0x14c: V138 = 0x60
0x150: M[0x60] = V95
0x151: V139 = 0x20
0x154: RETURN 0x60 0x20
---
Entry stack: [V10, 0x14b, V95]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x14b]

================================

Block 0x155
[0x155:0x17f]
---
Predecessors: [0x63]
Successors: [0x180, 0x184]
---
0x155 JUMPDEST
0x156 PUSH1 0x2
0x158 SLOAD
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 SWAP1
0x162 DUP2
0x163 AND
0x164 SWAP1
0x165 PUSH1 0x0
0x167 SWAP1
0x168 ADDRESS
0x169 AND
0x16a BALANCE
0x16b PUSH1 0x60
0x16d DUP3
0x16e DUP2
0x16f DUP2
0x170 DUP2
0x171 DUP6
0x172 DUP9
0x173 DUP4
0x174 CALL
0x175 SWAP4
0x176 POP
0x177 POP
0x178 POP
0x179 POP
0x17a ISZERO
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x155: JUMPDEST 
0x156: V140 = 0x2
0x158: V141 = S[0x2]
0x159: V142 = 0x1
0x15b: V143 = 0xa0
0x15d: V144 = 0x2
0x15f: V145 = EXP 0x2 0xa0
0x160: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x163: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x165: V148 = 0x0
0x168: V149 = ADDRESS
0x169: V150 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V151 = BALANCE V150
0x16b: V152 = 0x60
0x174: V153 = CALL 0x0 V147 V151 0x60 0x0 0x60 0x0
0x17a: V154 = ISZERO V153
0x17b: V155 = ISZERO V154
0x17c: V156 = 0x184
0x17f: JUMPI 0x184 V155
---
Entry stack: [V10, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x155]
Successors: []
---
0x180 PUSH2 0x2
0x183 JUMP
---
0x180: V157 = 0x2
0x183: THROW 
---
Entry stack: [V10, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61]

================================

Block 0x184
[0x184:0x185]
---
Predecessors: [0x155]
Successors: [0x61]
---
0x184 JUMPDEST
0x185 JUMP
---
0x184: JUMPDEST 
0x185: JUMP 0x61
---
Entry stack: [V10, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x186
[0x186:0x1a7]
---
Predecessors: [0x81]
Successors: [0x61]
---
0x186 JUMPDEST
0x187 PUSH1 0x4
0x189 DUP1
0x18a SLOAD
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 NOT
0x1a1 AND
0x1a2 DUP3
0x1a3 OR
0x1a4 SWAP1
0x1a5 SSTORE
0x1a6 POP
0x1a7 JUMP
---
0x186: JUMPDEST 
0x187: V158 = 0x4
0x18a: V159 = S[0x4]
0x18b: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V161 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1a1: V162 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V159
0x1a3: V163 = OR V48 V162
0x1a5: S[0x4] = V163
0x1a7: JUMP 0x61
---
Entry stack: [V10, 0x61, V48]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a8
[0x1a8:0x1c8]
---
Predecessors: [0xa2]
Successors: [0x1c9, 0x1de]
---
0x1a8 JUMPDEST
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 CALLER
0x1b2 DUP2
0x1b3 AND
0x1b4 DUP3
0x1b5 MSTORE
0x1b6 PUSH1 0x3
0x1b8 PUSH1 0x20
0x1ba MSTORE
0x1bb PUSH1 0x40
0x1bd DUP3
0x1be SHA3
0x1bf SLOAD
0x1c0 AND
0x1c1 DUP2
0x1c2 EQ
0x1c3 DUP1
0x1c4 ISZERO
0x1c5 PUSH2 0x1de
0x1c8 JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V164 = 0x1
0x1ab: V165 = 0xa0
0x1ad: V166 = 0x2
0x1af: V167 = EXP 0x2 0xa0
0x1b0: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V169 = CALLER
0x1b3: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1b5: M[0x0] = V170
0x1b6: V171 = 0x3
0x1b8: V172 = 0x20
0x1ba: M[0x20] = 0x3
0x1bb: V173 = 0x40
0x1be: V174 = SHA3 0x0 0x40
0x1bf: V175 = S[V174]
0x1c0: V176 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V177 = EQ 0x0 V176
0x1c4: V178 = ISZERO V177
0x1c5: V179 = 0x1de
0x1c8: JUMPI 0x1de V178
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0, V177]
Exit stack: [V10, 0x12e, V64, 0x0, 0x0, V177]

================================

Block 0x1c9
[0x1c9:0x1dd]
---
Predecessors: [0x1a8]
Successors: [0x1de]
---
0x1c9 POP
0x1ca PUSH1 0x2
0x1cc SLOAD
0x1cd PUSH1 0x1
0x1cf PUSH1 0xa0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 SUB
0x1d5 SWAP1
0x1d6 DUP2
0x1d7 AND
0x1d8 CALLER
0x1d9 SWAP1
0x1da SWAP2
0x1db AND
0x1dc EQ
0x1dd ISZERO
---
0x1ca: V180 = 0x2
0x1cc: V181 = S[0x2]
0x1cd: V182 = 0x1
0x1cf: V183 = 0xa0
0x1d1: V184 = 0x2
0x1d3: V185 = EXP 0x2 0xa0
0x1d4: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x1d8: V188 = CALLER
0x1db: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x1dc: V190 = EQ V189 V187
0x1dd: V191 = ISZERO V190
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0, V177]
Stack pops: 1
Stack additions: [V191]
Exit stack: [V10, 0x12e, V64, 0x0, 0x0, V191]

================================

Block 0x1de
[0x1de:0x1e4]
---
Predecessors: [0x1a8, 0x1c9]
Successors: [0x1e5, 0x1eb]
---
0x1de JUMPDEST
0x1df DUP1
0x1e0 ISZERO
0x1e1 PUSH2 0x1eb
0x1e4 JUMPI
---
0x1de: JUMPDEST 
0x1e0: V192 = ISZERO S0
0x1e1: V193 = 0x1eb
0x1e4: JUMPI 0x1eb V192
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x12e, V64, 0x0, 0x0, S0]

================================

Block 0x1e5
[0x1e5:0x1ea]
---
Predecessors: [0x1de]
Successors: [0x1eb]
---
0x1e5 POP
0x1e6 PUSH1 0x5
0x1e8 SLOAD
0x1e9 CALLVALUE
0x1ea LT
---
0x1e6: V194 = 0x5
0x1e8: V195 = S[0x5]
0x1e9: V196 = CALLVALUE
0x1ea: V197 = LT V196 V195
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V197]
Exit stack: [V10, 0x12e, V64, 0x0, 0x0, V197]

================================

Block 0x1eb
[0x1eb:0x1f0]
---
Predecessors: [0x1de, 0x1e5]
Successors: [0x1f1, 0x1f5]
---
0x1eb JUMPDEST
0x1ec ISZERO
0x1ed PUSH2 0x1f5
0x1f0 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V198 = ISZERO S0
0x1ed: V199 = 0x1f5
0x1f0: JUMPI 0x1f5 V198
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12e, V64, 0x0, 0x0]

================================

Block 0x1f1
[0x1f1:0x1f4]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f1 PUSH2 0x2
0x1f4 JUMP
---
0x1f1: V200 = 0x2
0x1f4: THROW 
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12e, V64, 0x0, 0x0]

================================

Block 0x1f5
[0x1f5:0x264]
---
Predecessors: [0x1eb]
Successors: [0x265]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x4
0x1f8 PUSH1 0x0
0x1fa SWAP1
0x1fb SLOAD
0x1fc SWAP1
0x1fd PUSH2 0x100
0x200 EXP
0x201 SWAP1
0x202 DIV
0x203 PUSH1 0x1
0x205 PUSH1 0xa0
0x207 PUSH1 0x2
0x209 EXP
0x20a SUB
0x20b AND
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 AND
0x215 PUSH4 0x656f9fe3
0x21a CALLER
0x21b DUP6
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP4
0x220 PUSH1 0xe0
0x222 PUSH1 0x2
0x224 EXP
0x225 MUL
0x226 DUP2
0x227 MSTORE
0x228 PUSH1 0x4
0x22a ADD
0x22b DUP1
0x22c DUP4
0x22d PUSH1 0x1
0x22f PUSH1 0xa0
0x231 PUSH1 0x2
0x233 EXP
0x234 SUB
0x235 AND
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x20
0x23a ADD
0x23b DUP3
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 AND
0x245 DUP2
0x246 MSTORE
0x247 PUSH1 0x20
0x249 ADD
0x24a SWAP3
0x24b POP
0x24c POP
0x24d POP
0x24e PUSH1 0x20
0x250 PUSH1 0x40
0x252 MLOAD
0x253 DUP1
0x254 DUP4
0x255 SUB
0x256 DUP2
0x257 PUSH1 0x0
0x259 DUP8
0x25a PUSH2 0x61da
0x25d GAS
0x25e SUB
0x25f CALL
0x260 ISZERO
0x261 PUSH2 0x2
0x264 JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V201 = 0x4
0x1f8: V202 = 0x0
0x1fb: V203 = S[0x4]
0x1fd: V204 = 0x100
0x200: V205 = EXP 0x100 0x0
0x202: V206 = DIV V203 0x1
0x203: V207 = 0x1
0x205: V208 = 0xa0
0x207: V209 = 0x2
0x209: V210 = EXP 0x2 0xa0
0x20a: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x20c: V213 = 0x1
0x20e: V214 = 0xa0
0x210: V215 = 0x2
0x212: V216 = EXP 0x2 0xa0
0x213: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x214: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x215: V219 = 0x656f9fe3
0x21a: V220 = CALLER
0x21c: V221 = 0x40
0x21e: V222 = M[0x40]
0x220: V223 = 0xe0
0x222: V224 = 0x2
0x224: V225 = EXP 0x2 0xe0
0x225: V226 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x656f9fe3
0x227: M[V222] = 0x656f9fe300000000000000000000000000000000000000000000000000000000
0x228: V227 = 0x4
0x22a: V228 = ADD 0x4 V222
0x22d: V229 = 0x1
0x22f: V230 = 0xa0
0x231: V231 = 0x2
0x233: V232 = EXP 0x2 0xa0
0x234: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x237: M[V228] = V234
0x238: V235 = 0x20
0x23a: V236 = ADD 0x20 V228
0x23c: V237 = 0x1
0x23e: V238 = 0xa0
0x240: V239 = 0x2
0x242: V240 = EXP 0x2 0xa0
0x243: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x246: M[V236] = V242
0x247: V243 = 0x20
0x249: V244 = ADD 0x20 V236
0x24e: V245 = 0x20
0x250: V246 = 0x40
0x252: V247 = M[0x40]
0x255: V248 = SUB V244 V247
0x257: V249 = 0x0
0x25a: V250 = 0x61da
0x25d: V251 = GAS
0x25e: V252 = SUB V251 0x61da
0x25f: V253 = CALL V252 V218 0x0 V247 V248 V247 0x20
0x260: V254 = ISZERO V253
0x261: V255 = 0x2
0x264: THROWI V254
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V218, 0x656f9fe3, V244]
Exit stack: [V10, 0x12e, V64, 0x0, 0x0, V218, 0x656f9fe3, V244]

================================

Block 0x265
[0x265:0x27e]
---
Predecessors: [0x1f5]
Successors: [0x27f, 0x283]
---
0x265 POP
0x266 POP
0x267 PUSH1 0x40
0x269 MLOAD
0x26a MLOAD
0x26b SWAP2
0x26c POP
0x26d POP
0x26e PUSH1 0x1
0x270 PUSH1 0xa0
0x272 PUSH1 0x2
0x274 EXP
0x275 SUB
0x276 DUP2
0x277 AND
0x278 DUP3
0x279 EQ
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x267: V256 = 0x40
0x269: V257 = M[0x40]
0x26a: V258 = M[V257]
0x26e: V259 = 0x1
0x270: V260 = 0xa0
0x272: V261 = 0x2
0x274: V262 = EXP 0x2 0xa0
0x275: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V264 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x279: V265 = EQ 0x0 V264
0x27a: V266 = ISZERO V265
0x27b: V267 = 0x283
0x27e: JUMPI 0x283 V266
---
Entry stack: [V10, 0x12e, V64, 0x0, 0x0, V218, 0x656f9fe3, V244]
Stack pops: 5
Stack additions: [S4, V258]
Exit stack: [V10, 0x12e, V64, 0x0, V258]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x265]
Successors: []
---
0x27f PUSH2 0x2
0x282 JUMP
---
0x27f: V268 = 0x2
0x282: THROW 
---
Entry stack: [V10, 0x12e, V64, 0x0, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12e, V64, 0x0, V258]

================================

Block 0x283
[0x283:0x2c6]
---
Predecessors: [0x265]
Successors: [0x12e]
---
0x283 JUMPDEST
0x284 DUP1
0x285 PUSH1 0x3
0x287 PUSH1 0x0
0x289 POP
0x28a PUSH1 0x0
0x28c CALLER
0x28d PUSH1 0x1
0x28f PUSH1 0xa0
0x291 PUSH1 0x2
0x293 EXP
0x294 SUB
0x295 AND
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b SWAP1
0x29c DUP2
0x29d MSTORE
0x29e PUSH1 0x20
0x2a0 ADD
0x2a1 PUSH1 0x0
0x2a3 SHA3
0x2a4 PUSH1 0x0
0x2a6 PUSH2 0x100
0x2a9 EXP
0x2aa DUP2
0x2ab SLOAD
0x2ac DUP2
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 MUL
0x2b6 NOT
0x2b7 AND
0x2b8 SWAP1
0x2b9 DUP4
0x2ba MUL
0x2bb OR
0x2bc SWAP1
0x2bd SSTORE
0x2be POP
0x2bf DUP1
0x2c0 SWAP2
0x2c1 POP
0x2c2 POP
0x2c3 SWAP2
0x2c4 SWAP1
0x2c5 POP
0x2c6 JUMP
---
0x283: JUMPDEST 
0x285: V269 = 0x3
0x287: V270 = 0x0
0x28a: V271 = 0x0
0x28c: V272 = CALLER
0x28d: V273 = 0x1
0x28f: V274 = 0xa0
0x291: V275 = 0x2
0x293: V276 = EXP 0x2 0xa0
0x294: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x297: M[0x0] = V278
0x298: V279 = 0x20
0x29a: V280 = ADD 0x20 0x0
0x29d: M[0x20] = 0x3
0x29e: V281 = 0x20
0x2a0: V282 = ADD 0x20 0x20
0x2a1: V283 = 0x0
0x2a3: V284 = SHA3 0x0 0x40
0x2a4: V285 = 0x0
0x2a6: V286 = 0x100
0x2a9: V287 = EXP 0x100 0x0
0x2ab: V288 = S[V284]
0x2ad: V289 = 0x1
0x2af: V290 = 0xa0
0x2b1: V291 = 0x2
0x2b3: V292 = EXP 0x2 0xa0
0x2b4: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V294 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2b6: V295 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V296 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V288
0x2ba: V297 = MUL V258 0x1
0x2bb: V298 = OR V297 V296
0x2bd: S[V284] = V298
0x2c6: JUMP 0x12e
---
Entry stack: [V10, 0x12e, V64, 0x0, V258]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V258]

================================

Block 0x2c7
[0x2c7:0x2e8]
---
Predecessors: [0xef]
Successors: [0x61]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x2
0x2ca DUP1
0x2cb SLOAD
0x2cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e1 NOT
0x2e2 AND
0x2e3 DUP3
0x2e4 OR
0x2e5 SWAP1
0x2e6 SSTORE
0x2e7 POP
0x2e8 JUMP
---
0x2c7: JUMPDEST 
0x2c8: V299 = 0x2
0x2cb: V300 = S[0x2]
0x2cc: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e1: V302 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V303 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V300
0x2e4: V304 = OR V98 V303
0x2e6: S[0x2] = V304
0x2e8: JUMP 0x61
---
Entry stack: [V10, 0x61, V98]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e9
[0x2e9:0x2f6]
---
Predecessors: [0x110]
Successors: []
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x2
0x2ec SLOAD
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 SUB
0x2f5 AND
0x2f6 SELFDESTRUCT
---
0x2e9: JUMPDEST 
0x2ea: V305 = 0x2
0x2ec: V306 = S[0x2]
0x2ed: V307 = 0x1
0x2ef: V308 = 0xa0
0x2f1: V309 = 0x2
0x2f3: V310 = EXP 0x2 0xa0
0x2f4: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f5: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x2f6: SELFDESTRUCT V312
---
Entry stack: [V10, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61]

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x7d, 0x155, 0x180, 0x184

Function 1:
Public function signature: 0x53d52a5f
Entry block: 0x81
Exit block: 0x61
Body: 0x61, 0x81, 0x9e, 0x186

Function 2:
Public function signature: 0x777a41ca
Entry block: 0xa2
Exit block: 0x12e
Body: 0xa2, 0xc1, 0x12e, 0x1a8, 0x1c9, 0x1de, 0x1e5, 0x1eb, 0x1f1, 0x1f5, 0x265, 0x27f, 0x283

Function 3:
Public function signature: 0x97a993aa
Entry block: 0xc5
Exit block: 0x12e
Body: 0xc5, 0x12e

Function 4:
Public function signature: 0xdefd6c5f
Entry block: 0xe6
Exit block: 0x14b
Body: 0xe6, 0x14b

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0xef
Exit block: 0x61
Body: 0x61, 0xef, 0x10c, 0x2c7

Function 6:
Public function signature: 0xfc0e74d1
Entry block: 0x110
Exit block: 0x2e9
Body: 0x110, 0x12a, 0x2e9

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

