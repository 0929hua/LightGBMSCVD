Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x55]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x55
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x55
0xc: JUMPI 0x55 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x105]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH3 0x821de3
0x39 DUP2
0x3a EQ
0x3b PUSH2 0x105
0x3e JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x821de3
0x3a: V13 = EQ V11 0x821de3
0x3b: V14 = 0x105
0x3e: JUMPI 0x105 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xd]
Successors: [0x4a, 0x136]
---
0x3f DUP1
0x40 PUSH4 0x3ef13367
0x45 EQ
0x46 PUSH2 0x136
0x49 JUMPI
---
0x40: V15 = 0x3ef13367
0x45: V16 = EQ 0x3ef13367 V11
0x46: V17 = 0x136
0x49: JUMPI 0x136 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x159]
---
0x4a DUP1
0x4b PUSH4 0x6b9f96ea
0x50 EQ
0x51 PUSH2 0x159
0x54 JUMPI
---
0x4b: V18 = 0x6b9f96ea
0x50: V19 = EQ 0x6b9f96ea V11
0x51: V20 = 0x159
0x54: JUMPI 0x159 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x55
[0x55:0x85]
---
Predecessors: [0x0, 0x4a]
Successors: [0x86, 0x8f]
---
0x55 JUMPDEST
0x56 PUSH1 0x0
0x58 DUP1
0x59 SLOAD
0x5a PUSH1 0x40
0x5c MLOAD
0x5d PUSH1 0x1
0x5f PUSH1 0xa0
0x61 PUSH1 0x2
0x63 EXP
0x64 SUB
0x65 SWAP1
0x66 SWAP2
0x67 AND
0x68 SWAP2
0x69 CALLVALUE
0x6a DUP1
0x6b ISZERO
0x6c PUSH2 0x8fc
0x6f MUL
0x70 SWAP3
0x71 SWAP1
0x72 SWAP2
0x73 DUP2
0x74 DUP2
0x75 DUP2
0x76 DUP6
0x77 DUP9
0x78 DUP9
0x79 CALL
0x7a SWAP4
0x7b POP
0x7c POP
0x7d POP
0x7e POP
0x7f ISZERO
0x80 DUP1
0x81 ISZERO
0x82 PUSH2 0x8f
0x85 JUMPI
---
0x55: JUMPDEST 
0x56: V21 = 0x0
0x59: V22 = S[0x0]
0x5a: V23 = 0x40
0x5c: V24 = M[0x40]
0x5d: V25 = 0x1
0x5f: V26 = 0xa0
0x61: V27 = 0x2
0x63: V28 = EXP 0x2 0xa0
0x64: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67: V30 = AND V22 0xffffffffffffffffffffffffffffffffffffffff
0x69: V31 = CALLVALUE
0x6b: V32 = ISZERO V31
0x6c: V33 = 0x8fc
0x6f: V34 = MUL 0x8fc V32
0x79: V35 = CALL V34 V30 V31 V24 0x0 V24 0x0
0x7f: V36 = ISZERO V35
0x81: V37 = ISZERO V36
0x82: V38 = 0x8f
0x85: JUMPI 0x8f V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x86
[0x86:0x8e]
---
Predecessors: [0x55]
Successors: []
---
0x86 RETURNDATASIZE
0x87 PUSH1 0x0
0x89 DUP1
0x8a RETURNDATACOPY
0x8b RETURNDATASIZE
0x8c PUSH1 0x0
0x8e REVERT
---
0x86: V39 = RETURNDATASIZE
0x87: V40 = 0x0
0x8a: RETURNDATACOPY 0x0 0x0 V39
0x8b: V41 = RETURNDATASIZE
0x8c: V42 = 0x0
0x8e: REVERT 0x0 V41
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x8f
[0x8f:0x104]
---
Predecessors: [0x55]
Successors: []
---
0x8f JUMPDEST
0x90 POP
0x91 PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xb2 CALLER
0xb3 CALLVALUE
0xb4 PUSH1 0x0
0xb6 CALLDATASIZE
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb DUP6
0xbc PUSH1 0x1
0xbe PUSH1 0xa0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 SUB
0xc4 AND
0xc5 PUSH1 0x1
0xc7 PUSH1 0xa0
0xc9 PUSH1 0x2
0xcb EXP
0xcc SUB
0xcd AND
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 DUP5
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 DUP1
0xda PUSH1 0x20
0xdc ADD
0xdd DUP3
0xde DUP2
0xdf SUB
0xe0 DUP3
0xe1 MSTORE
0xe2 DUP5
0xe3 DUP5
0xe4 DUP3
0xe5 DUP2
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP3
0xec POP
0xed DUP1
0xee DUP3
0xef DUP5
0xf0 CALLDATACOPY
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 SWAP3
0xf5 ADD
0xf6 DUP3
0xf7 SWAP1
0xf8 SUB
0xf9 SWAP8
0xfa POP
0xfb SWAP1
0xfc SWAP6
0xfd POP
0xfe POP
0xff POP
0x100 POP
0x101 POP
0x102 POP
0x103 LOG1
0x104 STOP
---
0x8f: JUMPDEST 
0x91: V43 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xb2: V44 = CALLER
0xb3: V45 = CALLVALUE
0xb4: V46 = 0x0
0xb6: V47 = CALLDATASIZE
0xb7: V48 = 0x40
0xb9: V49 = M[0x40]
0xbc: V50 = 0x1
0xbe: V51 = 0xa0
0xc0: V52 = 0x2
0xc2: V53 = EXP 0x2 0xa0
0xc3: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc4: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xc5: V56 = 0x1
0xc7: V57 = 0xa0
0xc9: V58 = 0x2
0xcb: V59 = EXP 0x2 0xa0
0xcc: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xcf: M[V49] = V61
0xd0: V62 = 0x20
0xd2: V63 = ADD 0x20 V49
0xd5: M[V63] = V45
0xd6: V64 = 0x20
0xd8: V65 = ADD 0x20 V63
0xda: V66 = 0x20
0xdc: V67 = ADD 0x20 V65
0xdf: V68 = SUB V67 V49
0xe1: M[V65] = V68
0xe7: M[V67] = V47
0xe8: V69 = 0x20
0xea: V70 = ADD 0x20 V67
0xf0: CALLDATACOPY V70 0x0 V47
0xf1: V71 = 0x40
0xf3: V72 = M[0x40]
0xf5: V73 = ADD V70 V47
0xf8: V74 = SUB V73 V72
0x103: LOG V72 V74 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0x104: STOP 
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0xd]
Successors: [0x10d, 0x111]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x105: JUMPDEST 
0x106: V75 = CALLVALUE
0x108: V76 = ISZERO V75
0x109: V77 = 0x111
0x10c: JUMPI 0x111 V76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V11, V75]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x105]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V78 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0x105]
Successors: [0x16e]
---
0x111 JUMPDEST
0x112 POP
0x113 PUSH2 0x11a
0x116 PUSH2 0x16e
0x119 JUMP
---
0x111: JUMPDEST 
0x113: V79 = 0x11a
0x116: V80 = 0x16e
0x119: JUMP 0x16e
---
Entry stack: [V11, V75]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x11a
[0x11a:0x135]
---
Predecessors: [0x16e]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d DUP1
0x11e MLOAD
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 SWAP1
0x128 SWAP3
0x129 AND
0x12a DUP3
0x12b MSTORE
0x12c MLOAD
0x12d SWAP1
0x12e DUP2
0x12f SWAP1
0x130 SUB
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 RETURN
---
0x11a: JUMPDEST 
0x11b: V81 = 0x40
0x11e: V82 = M[0x40]
0x11f: V83 = 0x1
0x121: V84 = 0xa0
0x123: V85 = 0x2
0x125: V86 = EXP 0x2 0xa0
0x126: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V88 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x12b: M[V82] = V88
0x12c: V89 = M[0x40]
0x130: V90 = SUB V82 V89
0x131: V91 = 0x20
0x133: V92 = ADD 0x20 V90
0x135: RETURN V89 V92
---
Entry stack: [V11, 0x11a, V120]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x11a]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0x3f]
Successors: [0x13e, 0x142]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 DUP1
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x136: JUMPDEST 
0x137: V93 = CALLVALUE
0x139: V94 = ISZERO V93
0x13a: V95 = 0x142
0x13d: JUMPI 0x142 V94
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V11, V93]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x136]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V96 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V11, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V93]

================================

Block 0x142
[0x142:0x156]
---
Predecessors: [0x136]
Successors: [0x17d]
---
0x142 JUMPDEST
0x143 POP
0x144 PUSH2 0x157
0x147 PUSH1 0x1
0x149 PUSH1 0xa0
0x14b PUSH1 0x2
0x14d EXP
0x14e SUB
0x14f PUSH1 0x4
0x151 CALLDATALOAD
0x152 AND
0x153 PUSH2 0x17d
0x156 JUMP
---
0x142: JUMPDEST 
0x144: V97 = 0x157
0x147: V98 = 0x1
0x149: V99 = 0xa0
0x14b: V100 = 0x2
0x14d: V101 = EXP 0x2 0xa0
0x14e: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14f: V103 = 0x4
0x151: V104 = CALLDATALOAD 0x4
0x152: V105 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x153: V106 = 0x17d
0x156: JUMP 0x17d
---
Entry stack: [V11, V93]
Stack pops: 1
Stack additions: [0x157, V105]
Exit stack: [V11, 0x157, V105]

================================

Block 0x157
[0x157:0x158]
---
Predecessors: [0x2f8, 0x33d]
Successors: []
---
0x157 JUMPDEST
0x158 STOP
---
0x157: JUMPDEST 
0x158: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x159
[0x159:0x160]
---
Predecessors: [0x4a]
Successors: [0x161, 0x165]
---
0x159 JUMPDEST
0x15a CALLVALUE
0x15b DUP1
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x159: JUMPDEST 
0x15a: V107 = CALLVALUE
0x15c: V108 = ISZERO V107
0x15d: V109 = 0x165
0x160: JUMPI 0x165 V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V11, V107]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x159]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V110 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V11, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V107]

================================

Block 0x165
[0x165:0x16d]
---
Predecessors: [0x159]
Successors: [0x2fe]
---
0x165 JUMPDEST
0x166 POP
0x167 PUSH2 0x157
0x16a PUSH2 0x2fe
0x16d JUMP
---
0x165: JUMPDEST 
0x167: V111 = 0x157
0x16a: V112 = 0x2fe
0x16d: JUMP 0x2fe
---
Entry stack: [V11, V107]
Stack pops: 1
Stack additions: [0x157]
Exit stack: [V11, 0x157]

================================

Block 0x16e
[0x16e:0x17c]
---
Predecessors: [0x111]
Successors: [0x11a]
---
0x16e JUMPDEST
0x16f PUSH1 0x0
0x171 SLOAD
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a AND
0x17b DUP2
0x17c JUMP
---
0x16e: JUMPDEST 
0x16f: V113 = 0x0
0x171: V114 = S[0x0]
0x172: V115 = 0x1
0x174: V116 = 0xa0
0x176: V117 = 0x2
0x178: V118 = EXP 0x2 0xa0
0x179: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x17c: JUMP 0x11a
---
Entry stack: [V11, 0x11a]
Stack pops: 1
Stack additions: [S0, V120]
Exit stack: [V11, 0x11a, V120]

================================

Block 0x17d
[0x17d:0x198]
---
Predecessors: [0x142]
Successors: [0x199, 0x19d]
---
0x17d JUMPDEST
0x17e PUSH1 0x0
0x180 DUP1
0x181 SLOAD
0x182 DUP2
0x183 SWAP1
0x184 DUP2
0x185 SWAP1
0x186 CALLER
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f SWAP1
0x190 DUP2
0x191 AND
0x192 SWAP2
0x193 AND
0x194 EQ
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x17d: JUMPDEST 
0x17e: V121 = 0x0
0x181: V122 = S[0x0]
0x186: V123 = CALLER
0x187: V124 = 0x1
0x189: V125 = 0xa0
0x18b: V126 = 0x2
0x18d: V127 = EXP 0x2 0xa0
0x18e: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x191: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x193: V130 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x194: V131 = EQ V130 V129
0x195: V132 = 0x19d
0x198: JUMPI 0x19d V131
---
Entry stack: [V11, 0x157, V105]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x157, V105, 0x0, 0x0, 0x0]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x17d]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V133 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x157, V105, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, 0x0, 0x0, 0x0]

================================

Block 0x19d
[0x19d:0x212]
---
Predecessors: [0x17d]
Successors: [0x213, 0x217]
---
0x19d JUMPDEST
0x19e DUP4
0x19f SWAP3
0x1a0 POP
0x1a1 ADDRESS
0x1a2 SWAP2
0x1a3 POP
0x1a4 DUP3
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad AND
0x1ae PUSH4 0x70a08231
0x1b3 DUP4
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 DUP3
0x1b8 PUSH4 0xffffffff
0x1bd AND
0x1be PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1dc MUL
0x1dd DUP2
0x1de MSTORE
0x1df PUSH1 0x4
0x1e1 ADD
0x1e2 DUP1
0x1e3 DUP3
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec AND
0x1ed PUSH1 0x1
0x1ef PUSH1 0xa0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 SUB
0x1f5 AND
0x1f6 DUP2
0x1f7 MSTORE
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb SWAP2
0x1fc POP
0x1fd POP
0x1fe PUSH1 0x20
0x200 PUSH1 0x40
0x202 MLOAD
0x203 DUP1
0x204 DUP4
0x205 SUB
0x206 DUP2
0x207 PUSH1 0x0
0x209 DUP8
0x20a DUP1
0x20b EXTCODESIZE
0x20c ISZERO
0x20d DUP1
0x20e ISZERO
0x20f PUSH2 0x217
0x212 JUMPI
---
0x19d: JUMPDEST 
0x1a1: V134 = ADDRESS
0x1a5: V135 = 0x1
0x1a7: V136 = 0xa0
0x1a9: V137 = 0x2
0x1ab: V138 = EXP 0x2 0xa0
0x1ac: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1ae: V141 = 0x70a08231
0x1b4: V142 = 0x40
0x1b6: V143 = M[0x40]
0x1b8: V144 = 0xffffffff
0x1bd: V145 = AND 0xffffffff 0x70a08231
0x1be: V146 = 0x100000000000000000000000000000000000000000000000000000000
0x1dc: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x1de: M[V143] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1df: V148 = 0x4
0x1e1: V149 = ADD 0x4 V143
0x1e4: V150 = 0x1
0x1e6: V151 = 0xa0
0x1e8: V152 = 0x2
0x1ea: V153 = EXP 0x2 0xa0
0x1eb: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ec: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x1ed: V156 = 0x1
0x1ef: V157 = 0xa0
0x1f1: V158 = 0x2
0x1f3: V159 = EXP 0x2 0xa0
0x1f4: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1f7: M[V149] = V161
0x1f8: V162 = 0x20
0x1fa: V163 = ADD 0x20 V149
0x1fe: V164 = 0x20
0x200: V165 = 0x40
0x202: V166 = M[0x40]
0x205: V167 = SUB V163 V166
0x207: V168 = 0x0
0x20b: V169 = EXTCODESIZE V140
0x20c: V170 = ISZERO V169
0x20e: V171 = ISZERO V170
0x20f: V172 = 0x217
0x212: JUMPI 0x217 V171
---
Entry stack: [V11, 0x157, V105, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V134, S0, V140, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V140, V170]
Exit stack: [V11, 0x157, V105, V105, V134, 0x0, V140, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V140, V170]

================================

Block 0x213
[0x213:0x216]
---
Predecessors: [0x19d]
Successors: []
---
0x213 PUSH1 0x0
0x215 DUP1
0x216 REVERT
---
0x213: V173 = 0x0
0x216: REVERT 0x0 0x0
---
Entry stack: [V11, 0x157, V105, V105, V134, 0x0, V140, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V140, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, 0x0, V140, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V140, V170]

================================

Block 0x217
[0x217:0x221]
---
Predecessors: [0x19d]
Successors: [0x222, 0x22b]
---
0x217 JUMPDEST
0x218 POP
0x219 GAS
0x21a CALL
0x21b ISZERO
0x21c DUP1
0x21d ISZERO
0x21e PUSH2 0x22b
0x221 JUMPI
---
0x217: JUMPDEST 
0x219: V174 = GAS
0x21a: V175 = CALL V174 V140 0x0 V166 V167 V166 0x20
0x21b: V176 = ISZERO V175
0x21d: V177 = ISZERO V176
0x21e: V178 = 0x22b
0x221: JUMPI 0x22b V177
---
Entry stack: [V11, 0x157, V105, V105, V134, 0x0, V140, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V140, V170]
Stack pops: 7
Stack additions: [V176]
Exit stack: [V11, 0x157, V105, V105, V134, 0x0, V140, 0x70a08231, V163, V176]

================================

Block 0x222
[0x222:0x22a]
---
Predecessors: [0x217]
Successors: []
---
0x222 RETURNDATASIZE
0x223 PUSH1 0x0
0x225 DUP1
0x226 RETURNDATACOPY
0x227 RETURNDATASIZE
0x228 PUSH1 0x0
0x22a REVERT
---
0x222: V179 = RETURNDATASIZE
0x223: V180 = 0x0
0x226: RETURNDATACOPY 0x0 0x0 V179
0x227: V181 = RETURNDATASIZE
0x228: V182 = 0x0
0x22a: REVERT 0x0 V181
---
Entry stack: [V11, 0x157, V105, V105, V134, 0x0, V140, 0x70a08231, V163, V176]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, 0x0, V140, 0x70a08231, V163, V176]

================================

Block 0x22b
[0x22b:0x23c]
---
Predecessors: [0x217]
Successors: [0x23d, 0x241]
---
0x22b JUMPDEST
0x22c POP
0x22d POP
0x22e POP
0x22f POP
0x230 PUSH1 0x40
0x232 MLOAD
0x233 RETURNDATASIZE
0x234 PUSH1 0x20
0x236 DUP2
0x237 LT
0x238 ISZERO
0x239 PUSH2 0x241
0x23c JUMPI
---
0x22b: JUMPDEST 
0x230: V183 = 0x40
0x232: V184 = M[0x40]
0x233: V185 = RETURNDATASIZE
0x234: V186 = 0x20
0x237: V187 = LT V185 0x20
0x238: V188 = ISZERO V187
0x239: V189 = 0x241
0x23c: JUMPI 0x241 V188
---
Entry stack: [V11, 0x157, V105, V105, V134, 0x0, V140, 0x70a08231, V163, V176]
Stack pops: 4
Stack additions: [V184, V185]
Exit stack: [V11, 0x157, V105, V105, V134, 0x0, V184, V185]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x22b]
Successors: []
---
0x23d PUSH1 0x0
0x23f DUP1
0x240 REVERT
---
0x23d: V190 = 0x0
0x240: REVERT 0x0 0x0
---
Entry stack: [V11, 0x157, V105, V105, V134, 0x0, V184, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, 0x0, V184, V185]

================================

Block 0x241
[0x241:0x24c]
---
Predecessors: [0x22b]
Successors: [0x24d, 0x251]
---
0x241 JUMPDEST
0x242 POP
0x243 MLOAD
0x244 SWAP1
0x245 POP
0x246 DUP1
0x247 ISZERO
0x248 ISZERO
0x249 PUSH2 0x251
0x24c JUMPI
---
0x241: JUMPDEST 
0x243: V191 = M[V184]
0x247: V192 = ISZERO V191
0x248: V193 = ISZERO V192
0x249: V194 = 0x251
0x24c: JUMPI 0x251 V193
---
Entry stack: [V11, 0x157, V105, V105, V134, 0x0, V184, V185]
Stack pops: 3
Stack additions: [V191]
Exit stack: [V11, 0x157, V105, V105, V134, V191]

================================

Block 0x24d
[0x24d:0x250]
---
Predecessors: [0x241]
Successors: [0x2f8]
---
0x24d PUSH2 0x2f8
0x250 JUMP
---
0x24d: V195 = 0x2f8
0x250: JUMP 0x2f8
---
Entry stack: [V11, 0x157, V105, V105, V134, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, V191]

================================

Block 0x251
[0x251:0x2bc]
---
Predecessors: [0x241]
Successors: [0x2bd, 0x2c1]
---
0x251 JUMPDEST
0x252 PUSH1 0x0
0x254 DUP1
0x255 SLOAD
0x256 PUSH1 0x40
0x258 DUP1
0x259 MLOAD
0x25a PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x27b DUP2
0x27c MSTORE
0x27d PUSH1 0x1
0x27f PUSH1 0xa0
0x281 PUSH1 0x2
0x283 EXP
0x284 SUB
0x285 SWAP3
0x286 DUP4
0x287 AND
0x288 PUSH1 0x4
0x28a DUP3
0x28b ADD
0x28c MSTORE
0x28d PUSH1 0x24
0x28f DUP2
0x290 ADD
0x291 DUP6
0x292 SWAP1
0x293 MSTORE
0x294 SWAP1
0x295 MLOAD
0x296 SWAP2
0x297 DUP7
0x298 AND
0x299 SWAP3
0x29a PUSH4 0xa9059cbb
0x29f SWAP3
0x2a0 PUSH1 0x44
0x2a2 DUP1
0x2a3 DUP5
0x2a4 ADD
0x2a5 SWAP4
0x2a6 PUSH1 0x20
0x2a8 SWAP4
0x2a9 SWAP1
0x2aa DUP4
0x2ab SWAP1
0x2ac SUB
0x2ad SWAP1
0x2ae SWAP2
0x2af ADD
0x2b0 SWAP1
0x2b1 DUP3
0x2b2 SWAP1
0x2b3 DUP8
0x2b4 DUP1
0x2b5 EXTCODESIZE
0x2b6 ISZERO
0x2b7 DUP1
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x251: JUMPDEST 
0x252: V196 = 0x0
0x255: V197 = S[0x0]
0x256: V198 = 0x40
0x259: V199 = M[0x40]
0x25a: V200 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x27c: M[V199] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x27d: V201 = 0x1
0x27f: V202 = 0xa0
0x281: V203 = 0x2
0x283: V204 = EXP 0x2 0xa0
0x284: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x287: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x288: V207 = 0x4
0x28b: V208 = ADD V199 0x4
0x28c: M[V208] = V206
0x28d: V209 = 0x24
0x290: V210 = ADD V199 0x24
0x293: M[V210] = V191
0x295: V211 = M[0x40]
0x298: V212 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V213 = 0xa9059cbb
0x2a0: V214 = 0x44
0x2a4: V215 = ADD V199 0x44
0x2a6: V216 = 0x20
0x2ac: V217 = SUB V199 V211
0x2af: V218 = ADD 0x44 V217
0x2b5: V219 = EXTCODESIZE V212
0x2b6: V220 = ISZERO V219
0x2b8: V221 = ISZERO V220
0x2b9: V222 = 0x2c1
0x2bc: JUMPI 0x2c1 V221
---
Entry stack: [V11, 0x157, V105, V105, V134, V191]
Stack pops: 3
Stack additions: [S2, S1, S0, V212, 0xa9059cbb, V215, 0x20, V211, V218, V211, 0x0, V212, V220]
Exit stack: [V11, 0x157, V105, V105, V134, V191, V212, 0xa9059cbb, V215, 0x20, V211, V218, V211, 0x0, V212, V220]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x251]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V223 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x157, V105, V105, V134, V191, V212, 0xa9059cbb, V215, 0x20, V211, V218, V211, 0x0, V212, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, V191, V212, 0xa9059cbb, V215, 0x20, V211, V218, V211, 0x0, V212, V220]

================================

Block 0x2c1
[0x2c1:0x2cb]
---
Predecessors: [0x251]
Successors: [0x2cc, 0x2d5]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 GAS
0x2c4 CALL
0x2c5 ISZERO
0x2c6 DUP1
0x2c7 ISZERO
0x2c8 PUSH2 0x2d5
0x2cb JUMPI
---
0x2c1: JUMPDEST 
0x2c3: V224 = GAS
0x2c4: V225 = CALL V224 V212 0x0 V211 V218 V211 0x20
0x2c5: V226 = ISZERO V225
0x2c7: V227 = ISZERO V226
0x2c8: V228 = 0x2d5
0x2cb: JUMPI 0x2d5 V227
---
Entry stack: [V11, 0x157, V105, V105, V134, V191, V212, 0xa9059cbb, V215, 0x20, V211, V218, V211, 0x0, V212, V220]
Stack pops: 7
Stack additions: [V226]
Exit stack: [V11, 0x157, V105, V105, V134, V191, V212, 0xa9059cbb, V215, V226]

================================

Block 0x2cc
[0x2cc:0x2d4]
---
Predecessors: [0x2c1]
Successors: []
---
0x2cc RETURNDATASIZE
0x2cd PUSH1 0x0
0x2cf DUP1
0x2d0 RETURNDATACOPY
0x2d1 RETURNDATASIZE
0x2d2 PUSH1 0x0
0x2d4 REVERT
---
0x2cc: V229 = RETURNDATASIZE
0x2cd: V230 = 0x0
0x2d0: RETURNDATACOPY 0x0 0x0 V229
0x2d1: V231 = RETURNDATASIZE
0x2d2: V232 = 0x0
0x2d4: REVERT 0x0 V231
---
Entry stack: [V11, 0x157, V105, V105, V134, V191, V212, 0xa9059cbb, V215, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, V191, V212, 0xa9059cbb, V215, V226]

================================

Block 0x2d5
[0x2d5:0x2e6]
---
Predecessors: [0x2c1]
Successors: [0x2e7, 0x2eb]
---
0x2d5 JUMPDEST
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd RETURNDATASIZE
0x2de PUSH1 0x20
0x2e0 DUP2
0x2e1 LT
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2d5: JUMPDEST 
0x2da: V233 = 0x40
0x2dc: V234 = M[0x40]
0x2dd: V235 = RETURNDATASIZE
0x2de: V236 = 0x20
0x2e1: V237 = LT V235 0x20
0x2e2: V238 = ISZERO V237
0x2e3: V239 = 0x2eb
0x2e6: JUMPI 0x2eb V238
---
Entry stack: [V11, 0x157, V105, V105, V134, V191, V212, 0xa9059cbb, V215, V226]
Stack pops: 4
Stack additions: [V234, V235]
Exit stack: [V11, 0x157, V105, V105, V134, V191, V234, V235]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2d5]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V240 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V11, 0x157, V105, V105, V134, V191, V234, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, V191, V234, V235]

================================

Block 0x2eb
[0x2eb:0x2f3]
---
Predecessors: [0x2d5]
Successors: [0x2f4, 0x2f8]
---
0x2eb JUMPDEST
0x2ec POP
0x2ed MLOAD
0x2ee ISZERO
0x2ef ISZERO
0x2f0 PUSH2 0x2f8
0x2f3 JUMPI
---
0x2eb: JUMPDEST 
0x2ed: V241 = M[V234]
0x2ee: V242 = ISZERO V241
0x2ef: V243 = ISZERO V242
0x2f0: V244 = 0x2f8
0x2f3: JUMPI 0x2f8 V243
---
Entry stack: [V11, 0x157, V105, V105, V134, V191, V234, V235]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, V191]

================================

Block 0x2f4
[0x2f4:0x2f7]
---
Predecessors: [0x2eb]
Successors: []
---
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 REVERT
---
0x2f4: V245 = 0x0
0x2f7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x157, V105, V105, V134, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V105, V105, V134, V191]

================================

Block 0x2f8
[0x2f8:0x2fd]
---
Predecessors: [0x24d, 0x2eb]
Successors: [0x157]
---
0x2f8 JUMPDEST
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc POP
0x2fd JUMP
---
0x2f8: JUMPDEST 
0x2fd: JUMP 0x157
---
Entry stack: [V11, 0x157, V105, V105, V134, V191]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fe
[0x2fe:0x333]
---
Predecessors: [0x165]
Successors: [0x334, 0x33d]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x0
0x301 DUP1
0x302 SLOAD
0x303 PUSH1 0x40
0x305 MLOAD
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e SWAP2
0x30f DUP3
0x310 AND
0x311 SWAP3
0x312 ADDRESS
0x313 SWAP1
0x314 SWAP3
0x315 AND
0x316 BALANCE
0x317 DUP1
0x318 ISZERO
0x319 PUSH2 0x8fc
0x31c MUL
0x31d SWAP3
0x31e SWAP1
0x31f SWAP2
0x320 SWAP1
0x321 DUP2
0x322 DUP2
0x323 DUP2
0x324 DUP6
0x325 DUP9
0x326 DUP9
0x327 CALL
0x328 SWAP4
0x329 POP
0x32a POP
0x32b POP
0x32c POP
0x32d ISZERO
0x32e DUP1
0x32f ISZERO
0x330 PUSH2 0x33d
0x333 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V246 = 0x0
0x302: V247 = S[0x0]
0x303: V248 = 0x40
0x305: V249 = M[0x40]
0x306: V250 = 0x1
0x308: V251 = 0xa0
0x30a: V252 = 0x2
0x30c: V253 = EXP 0x2 0xa0
0x30d: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x310: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x312: V256 = ADDRESS
0x315: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x316: V258 = BALANCE V257
0x318: V259 = ISZERO V258
0x319: V260 = 0x8fc
0x31c: V261 = MUL 0x8fc V259
0x327: V262 = CALL V261 V255 V258 V249 0x0 V249 0x0
0x32d: V263 = ISZERO V262
0x32f: V264 = ISZERO V263
0x330: V265 = 0x33d
0x333: JUMPI 0x33d V264
---
Entry stack: [V11, 0x157]
Stack pops: 0
Stack additions: [V263]
Exit stack: [V11, 0x157, V263]

================================

Block 0x334
[0x334:0x33c]
---
Predecessors: [0x2fe]
Successors: []
---
0x334 RETURNDATASIZE
0x335 PUSH1 0x0
0x337 DUP1
0x338 RETURNDATACOPY
0x339 RETURNDATASIZE
0x33a PUSH1 0x0
0x33c REVERT
---
0x334: V266 = RETURNDATASIZE
0x335: V267 = 0x0
0x338: RETURNDATACOPY 0x0 0x0 V266
0x339: V268 = RETURNDATASIZE
0x33a: V269 = 0x0
0x33c: REVERT 0x0 V268
---
Entry stack: [V11, 0x157, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V263]

================================

Block 0x33d
[0x33d:0x33f]
---
Predecessors: [0x2fe]
Successors: [0x157]
---
0x33d JUMPDEST
0x33e POP
0x33f JUMP
---
0x33d: JUMPDEST 
0x33f: JUMP 0x157
---
Entry stack: [V11, 0x157, V263]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x340
[0x340:0x37b]
---
Predecessors: []
Successors: []
---
0x340 STOP
0x341 LOG1
0x342 PUSH6 0x627a7a723058
0x349 SHA3
0x34a XOR
0x34b MISSING 0xb6
0x34c SWAP3
0x34d MISSING 0x29
0x34e LOG1
0x34f EXTCODESIZE
0x350 PUSH10 0xddccbf6f0fa59b5535b5
0x35b MISSING 0xb4
0x35c MISSING 0x49
0x35d MISSING 0x26
0x35e SWAP14
0x35f MSIZE
0x360 MISSING 0x49
0x361 MISSING 0x22
0x362 MISSING 0xd8
0x363 PUSH24 0x2733d54853920029
---
0x340: STOP 
0x341: LOG S0 S1 S2
0x342: V270 = 0x627a7a723058
0x349: V271 = SHA3 0x627a7a723058 S3
0x34a: V272 = XOR V271 S4
0x34b: MISSING 0xb6
0x34d: MISSING 0x29
0x34e: LOG S0 S1 S2
0x34f: V273 = EXTCODESIZE S3
0x350: V274 = 0xddccbf6f0fa59b5535b5
0x35b: MISSING 0xb4
0x35c: MISSING 0x49
0x35d: MISSING 0x26
0x35f: V275 = MSIZE
0x360: MISSING 0x49
0x361: MISSING 0x22
0x362: MISSING 0xd8
0x363: V276 = 0x2733d54853920029
---
Entry stack: []
Stack pops: 0
Stack additions: [V272, S3, S1, S2, S0, 0xddccbf6f0fa59b5535b5, V273, V275, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, 0x2733d54853920029]
Exit stack: []

================================

Function 0:
Public function signature: 0x821de3
Entry block: 0x105
Exit block: 0x11a
Body: 0x105, 0x10d, 0x111, 0x11a, 0x16e

Function 1:
Public function signature: 0x3ef13367
Entry block: 0x136
Exit block: 0x2f4
Body: 0x136, 0x13e, 0x142, 0x157, 0x17d, 0x199, 0x19d, 0x213, 0x217, 0x222, 0x22b, 0x23d, 0x241, 0x24d, 0x251, 0x2bd, 0x2c1, 0x2cc, 0x2d5, 0x2e7, 0x2eb, 0x2f4, 0x2f8

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x159
Exit block: 0x157
Body: 0x157, 0x159, 0x161, 0x165, 0x2fe, 0x334, 0x33d

Function 3:
Public fallback function
Entry block: 0x55
Exit block: 0x86
Body: 0x55, 0x86, 0x8f

