Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xc5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xc5
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xc5
0xc: JUMPI 0xc5 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x3b4]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2d05d3f
0x3c EQ
0x3d PUSH2 0x3b4
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2d05d3f
0x3c: V13 = EQ 0x2d05d3f V11
0x3d: V14 = 0x3b4
0x40: JUMPI 0x3b4 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x409]
---
0x41 DUP1
0x42 PUSH4 0xdd27120
0x47 EQ
0x48 PUSH2 0x409
0x4b JUMPI
---
0x42: V15 = 0xdd27120
0x47: V16 = EQ 0xdd27120 V11
0x48: V17 = 0x409
0x4b: JUMPI 0x409 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x436]
---
0x4c DUP1
0x4d PUSH4 0x1927a754
0x52 EQ
0x53 PUSH2 0x436
0x56 JUMPI
---
0x4d: V18 = 0x1927a754
0x52: V19 = EQ 0x1927a754 V11
0x53: V20 = 0x436
0x56: JUMPI 0x436 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x463]
---
0x57 DUP1
0x58 PUSH4 0x1b3ed722
0x5d EQ
0x5e PUSH2 0x463
0x61 JUMPI
---
0x58: V21 = 0x1b3ed722
0x5d: V22 = EQ 0x1b3ed722 V11
0x5e: V23 = 0x463
0x61: JUMPI 0x463 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x48c]
---
0x62 DUP1
0x63 PUSH4 0x3c8da588
0x68 EQ
0x69 PUSH2 0x48c
0x6c JUMPI
---
0x63: V24 = 0x3c8da588
0x68: V25 = EQ 0x3c8da588 V11
0x69: V26 = 0x48c
0x6c: JUMPI 0x48c V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x4b5]
---
0x6d DUP1
0x6e PUSH4 0x75e01780
0x73 EQ
0x74 PUSH2 0x4b5
0x77 JUMPI
---
0x6e: V27 = 0x75e01780
0x73: V28 = EQ 0x75e01780 V11
0x74: V29 = 0x4b5
0x77: JUMPI 0x4b5 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x4e2]
---
0x78 DUP1
0x79 PUSH4 0xb42072e4
0x7e EQ
0x7f PUSH2 0x4e2
0x82 JUMPI
---
0x79: V30 = 0xb42072e4
0x7e: V31 = EQ 0xb42072e4 V11
0x7f: V32 = 0x4e2
0x82: JUMPI 0x4e2 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x537]
---
0x83 DUP1
0x84 PUSH4 0xb5931f7c
0x89 EQ
0x8a PUSH2 0x537
0x8d JUMPI
---
0x84: V33 = 0xb5931f7c
0x89: V34 = EQ 0xb5931f7c V11
0x8a: V35 = 0x537
0x8d: JUMPI 0x537 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x577]
---
0x8e DUP1
0x8f PUSH4 0xb597e784
0x94 EQ
0x95 PUSH2 0x577
0x98 JUMPI
---
0x8f: V36 = 0xb597e784
0x94: V37 = EQ 0xb597e784 V11
0x95: V38 = 0x577
0x98: JUMPI 0x577 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x5b2]
---
0x99 DUP1
0x9a PUSH4 0xd05c78da
0x9f EQ
0xa0 PUSH2 0x5b2
0xa3 JUMPI
---
0x9a: V39 = 0xd05c78da
0x9f: V40 = EQ 0xd05c78da V11
0xa0: V41 = 0x5b2
0xa3: JUMPI 0x5b2 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x5f2]
---
0xa4 DUP1
0xa5 PUSH4 0xdb40e896
0xaa EQ
0xab PUSH2 0x5f2
0xae JUMPI
---
0xa5: V42 = 0xdb40e896
0xaa: V43 = EQ 0xdb40e896 V11
0xab: V44 = 0x5f2
0xae: JUMPI 0x5f2 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x61f]
---
0xaf DUP1
0xb0 PUSH4 0xef1706ce
0xb5 EQ
0xb6 PUSH2 0x61f
0xb9 JUMPI
---
0xb0: V45 = 0xef1706ce
0xb5: V46 = EQ 0xef1706ce V11
0xb6: V47 = 0x61f
0xb9: JUMPI 0x61f V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x64c]
---
0xba DUP1
0xbb PUSH4 0xfe389e09
0xc0 EQ
0xc1 PUSH2 0x64c
0xc4 JUMPI
---
0xbb: V48 = 0xfe389e09
0xc0: V49 = EQ 0xfe389e09 V11
0xc1: V50 = 0x64c
0xc4: JUMPI 0x64c V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xde]
---
Predecessors: [0x0, 0xba]
Successors: [0xdf, 0xe3]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 PUSH1 0x2
0xcb PUSH1 0x14
0xcd SWAP1
0xce SLOAD
0xcf SWAP1
0xd0 PUSH2 0x100
0xd3 EXP
0xd4 SWAP1
0xd5 DIV
0xd6 PUSH1 0xff
0xd8 AND
0xd9 ISZERO
0xda ISZERO
0xdb PUSH2 0xe3
0xde JUMPI
---
0xc5: JUMPDEST 
0xc6: V51 = 0x0
0xc9: V52 = 0x2
0xcb: V53 = 0x14
0xce: V54 = S[0x2]
0xd0: V55 = 0x100
0xd3: V56 = EXP 0x100 0x14
0xd5: V57 = DIV V54 0x10000000000000000000000000000000000000000
0xd6: V58 = 0xff
0xd8: V59 = AND 0xff V57
0xd9: V60 = ISZERO V59
0xda: V61 = ISZERO V60
0xdb: V62 = 0xe3
0xde: JUMPI 0xe3 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xc5]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V63 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xe3
[0xe3:0xf4]
---
Predecessors: [0xc5]
Successors: [0x661]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 SWAP2
0xe6 POP
0xe7 PUSH2 0xfd
0xea PUSH2 0xf5
0xed DUP4
0xee PUSH1 0x3
0xf0 SLOAD
0xf1 PUSH2 0x661
0xf4 JUMP
---
0xe3: JUMPDEST 
0xe4: V64 = CALLVALUE
0xe7: V65 = 0xfd
0xea: V66 = 0xf5
0xee: V67 = 0x3
0xf0: V68 = S[0x3]
0xf1: V69 = 0x661
0xf4: JUMP 0x661
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 2
Stack additions: [V64, S0, 0xfd, 0xf5, V64, V68]
Exit stack: [V11, V64, 0x0, 0xfd, 0xf5, V64, V68]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0x698]
Successors: [0x69f]
---
0xf5 JUMPDEST
0xf6 PUSH1 0x0
0xf8 SLOAD
0xf9 PUSH2 0x69f
0xfc JUMP
---
0xf5: JUMPDEST 
0xf6: V70 = 0x0
0xf8: V71 = S[0x0]
0xf9: V72 = 0x69f
0xfc: JUMP 0x69f
---
Entry stack: [V11, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V11, S3, 0x0, S1, S0, V71]

================================

Block 0xfd
[0xfd:0x1bf]
---
Predecessors: [0x6dc]
Successors: [0x1c0, 0x1c4]
---
0xfd JUMPDEST
0xfe SWAP1
0xff POP
0x100 PUSH1 0x2
0x102 PUSH1 0x0
0x104 SWAP1
0x105 SLOAD
0x106 SWAP1
0x107 PUSH2 0x100
0x10a EXP
0x10b SWAP1
0x10c DIV
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 PUSH4 0x70a08231
0x13e ADDRESS
0x13f PUSH1 0x0
0x141 PUSH1 0x40
0x143 MLOAD
0x144 PUSH1 0x20
0x146 ADD
0x147 MSTORE
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP3
0x14c PUSH4 0xffffffff
0x151 AND
0x152 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x170 MUL
0x171 DUP2
0x172 MSTORE
0x173 PUSH1 0x4
0x175 ADD
0x176 DUP1
0x177 DUP3
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 SWAP2
0x1aa POP
0x1ab POP
0x1ac PUSH1 0x20
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 DUP4
0x1b3 SUB
0x1b4 DUP2
0x1b5 PUSH1 0x0
0x1b7 DUP8
0x1b8 DUP1
0x1b9 EXTCODESIZE
0x1ba ISZERO
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0xfd: JUMPDEST 
0x100: V73 = 0x2
0x102: V74 = 0x0
0x105: V75 = S[0x2]
0x107: V76 = 0x100
0x10a: V77 = EXP 0x100 0x0
0x10c: V78 = DIV V75 0x1
0x10d: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x123: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x139: V83 = 0x70a08231
0x13e: V84 = ADDRESS
0x13f: V85 = 0x0
0x141: V86 = 0x40
0x143: V87 = M[0x40]
0x144: V88 = 0x20
0x146: V89 = ADD 0x20 V87
0x147: M[V89] = 0x0
0x148: V90 = 0x40
0x14a: V91 = M[0x40]
0x14c: V92 = 0xffffffff
0x151: V93 = AND 0xffffffff 0x70a08231
0x152: V94 = 0x100000000000000000000000000000000000000000000000000000000
0x170: V95 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x172: M[V91] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x173: V96 = 0x4
0x175: V97 = ADD 0x4 V91
0x178: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x18e: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1a5: M[V97] = V101
0x1a6: V102 = 0x20
0x1a8: V103 = ADD 0x20 V97
0x1ac: V104 = 0x20
0x1ae: V105 = 0x40
0x1b0: V106 = M[0x40]
0x1b3: V107 = SUB V103 V106
0x1b5: V108 = 0x0
0x1b9: V109 = EXTCODESIZE V82
0x1ba: V110 = ISZERO V109
0x1bb: V111 = ISZERO V110
0x1bc: V112 = 0x1c4
0x1bf: JUMPI 0x1c4 V111
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]
Exit stack: [V11, S2, S0, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0xfd]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V113 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V11, S10, S9, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]

================================

Block 0x1c4
[0x1c4:0x1d0]
---
Predecessors: [0xfd]
Successors: [0x1d1, 0x1d5]
---
0x1c4 JUMPDEST
0x1c5 PUSH2 0x2c6
0x1c8 GAS
0x1c9 SUB
0x1ca CALL
0x1cb ISZERO
0x1cc ISZERO
0x1cd PUSH2 0x1d5
0x1d0 JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V114 = 0x2c6
0x1c8: V115 = GAS
0x1c9: V116 = SUB V115 0x2c6
0x1ca: V117 = CALL V116 V82 0x0 V106 V107 V106 0x20
0x1cb: V118 = ISZERO V117
0x1cc: V119 = ISZERO V118
0x1cd: V120 = 0x1d5
0x1d0: JUMPI 0x1d5 V119
---
Entry stack: [V11, S10, S9, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]
Stack pops: 6
Stack additions: []
Exit stack: [V11, S10, S9, V82, 0x70a08231, V103]

================================

Block 0x1d1
[0x1d1:0x1d4]
---
Predecessors: [0x1c4]
Successors: []
---
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 REVERT
---
0x1d1: V121 = 0x0
0x1d4: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, V82, 0x70a08231, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, V82, 0x70a08231, V103]

================================

Block 0x1d5
[0x1d5:0x1e7]
---
Predecessors: [0x1c4]
Successors: [0x1e8, 0x340]
---
0x1d5 JUMPDEST
0x1d6 POP
0x1d7 POP
0x1d8 POP
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd MLOAD
0x1de SWAP1
0x1df POP
0x1e0 DUP2
0x1e1 GT
0x1e2 ISZERO
0x1e3 ISZERO
0x1e4 PUSH2 0x340
0x1e7 JUMPI
---
0x1d5: JUMPDEST 
0x1d9: V122 = 0x40
0x1db: V123 = M[0x40]
0x1dd: V124 = M[V123]
0x1e1: V125 = GT S3 V124
0x1e2: V126 = ISZERO V125
0x1e3: V127 = ISZERO V126
0x1e4: V128 = 0x340
0x1e7: JUMPI 0x340 V127
---
Entry stack: [V11, S4, S3, V82, 0x70a08231, V103]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, S4, S3]

================================

Block 0x1e8
[0x1e8:0x2af]
---
Predecessors: [0x1d5]
Successors: [0x2b0, 0x2b4]
---
0x1e8 PUSH1 0x2
0x1ea PUSH1 0x0
0x1ec SWAP1
0x1ed SLOAD
0x1ee SWAP1
0x1ef PUSH2 0x100
0x1f2 EXP
0x1f3 SWAP1
0x1f4 DIV
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 PUSH4 0xa9059cbb
0x226 CALLER
0x227 DUP4
0x228 PUSH1 0x0
0x22a PUSH1 0x40
0x22c MLOAD
0x22d PUSH1 0x20
0x22f ADD
0x230 MSTORE
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP4
0x235 PUSH4 0xffffffff
0x23a AND
0x23b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x259 MUL
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x4
0x25e ADD
0x25f DUP1
0x260 DUP4
0x261 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x276 AND
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x20
0x291 ADD
0x292 DUP3
0x293 DUP2
0x294 MSTORE
0x295 PUSH1 0x20
0x297 ADD
0x298 SWAP3
0x299 POP
0x29a POP
0x29b POP
0x29c PUSH1 0x20
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP1
0x2a2 DUP4
0x2a3 SUB
0x2a4 DUP2
0x2a5 PUSH1 0x0
0x2a7 DUP8
0x2a8 DUP1
0x2a9 EXTCODESIZE
0x2aa ISZERO
0x2ab ISZERO
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x1e8: V129 = 0x2
0x1ea: V130 = 0x0
0x1ed: V131 = S[0x2]
0x1ef: V132 = 0x100
0x1f2: V133 = EXP 0x100 0x0
0x1f4: V134 = DIV V131 0x1
0x1f5: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x20b: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x221: V139 = 0xa9059cbb
0x226: V140 = CALLER
0x228: V141 = 0x0
0x22a: V142 = 0x40
0x22c: V143 = M[0x40]
0x22d: V144 = 0x20
0x22f: V145 = ADD 0x20 V143
0x230: M[V145] = 0x0
0x231: V146 = 0x40
0x233: V147 = M[0x40]
0x235: V148 = 0xffffffff
0x23a: V149 = AND 0xffffffff 0xa9059cbb
0x23b: V150 = 0x100000000000000000000000000000000000000000000000000000000
0x259: V151 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x25b: M[V147] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x25c: V152 = 0x4
0x25e: V153 = ADD 0x4 V147
0x261: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x276: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x277: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x28e: M[V153] = V157
0x28f: V158 = 0x20
0x291: V159 = ADD 0x20 V153
0x294: M[V159] = S0
0x295: V160 = 0x20
0x297: V161 = ADD 0x20 V159
0x29c: V162 = 0x20
0x29e: V163 = 0x40
0x2a0: V164 = M[0x40]
0x2a3: V165 = SUB V161 V164
0x2a5: V166 = 0x0
0x2a9: V167 = EXTCODESIZE V138
0x2aa: V168 = ISZERO V167
0x2ab: V169 = ISZERO V168
0x2ac: V170 = 0x2b4
0x2af: JUMPI 0x2b4 V169
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: [S0, V138, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V138]
Exit stack: [V11, S1, S0, V138, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V138]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x1e8]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V171 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [V11, S10, S9, V138, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, V138, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V138]

================================

Block 0x2b4
[0x2b4:0x2c0]
---
Predecessors: [0x1e8]
Successors: [0x2c1, 0x2c5]
---
0x2b4 JUMPDEST
0x2b5 PUSH2 0x2c6
0x2b8 GAS
0x2b9 SUB
0x2ba CALL
0x2bb ISZERO
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V172 = 0x2c6
0x2b8: V173 = GAS
0x2b9: V174 = SUB V173 0x2c6
0x2ba: V175 = CALL V174 V138 0x0 V164 V165 V164 0x20
0x2bb: V176 = ISZERO V175
0x2bc: V177 = ISZERO V176
0x2bd: V178 = 0x2c5
0x2c0: JUMPI 0x2c5 V177
---
Entry stack: [V11, S10, S9, V138, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V138]
Stack pops: 6
Stack additions: []
Exit stack: [V11, S10, S9, V138, 0xa9059cbb, V161]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x2b4]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V179 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, V138, 0xa9059cbb, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, V138, 0xa9059cbb, V161]

================================

Block 0x2c5
[0x2c5:0x33f]
---
Predecessors: [0x2b4]
Successors: [0x3b0]
---
0x2c5 JUMPDEST
0x2c6 POP
0x2c7 POP
0x2c8 POP
0x2c9 PUSH1 0x40
0x2cb MLOAD
0x2cc DUP1
0x2cd MLOAD
0x2ce SWAP1
0x2cf POP
0x2d0 POP
0x2d1 PUSH32 0x1d72140a7ccdb496bef50918d2598dd7edefb514f70e6d4beb528cbd16c80b7d
0x2f2 CALLER
0x2f3 DUP3
0x2f4 PUSH1 0x40
0x2f6 MLOAD
0x2f7 DUP1
0x2f8 DUP4
0x2f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30e AND
0x30f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x324 AND
0x325 DUP2
0x326 MSTORE
0x327 PUSH1 0x20
0x329 ADD
0x32a DUP3
0x32b DUP2
0x32c MSTORE
0x32d PUSH1 0x20
0x32f ADD
0x330 SWAP3
0x331 POP
0x332 POP
0x333 POP
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 SWAP2
0x339 SUB
0x33a SWAP1
0x33b LOG1
0x33c PUSH2 0x3b0
0x33f JUMP
---
0x2c5: JUMPDEST 
0x2c9: V180 = 0x40
0x2cb: V181 = M[0x40]
0x2cd: V182 = M[V181]
0x2d1: V183 = 0x1d72140a7ccdb496bef50918d2598dd7edefb514f70e6d4beb528cbd16c80b7d
0x2f2: V184 = CALLER
0x2f4: V185 = 0x40
0x2f6: V186 = M[0x40]
0x2f9: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x30e: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x30f: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x324: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x326: M[V186] = V190
0x327: V191 = 0x20
0x329: V192 = ADD 0x20 V186
0x32c: M[V192] = S3
0x32d: V193 = 0x20
0x32f: V194 = ADD 0x20 V192
0x334: V195 = 0x40
0x336: V196 = M[0x40]
0x339: V197 = SUB V194 V196
0x33b: LOG V196 V197 0x1d72140a7ccdb496bef50918d2598dd7edefb514f70e6d4beb528cbd16c80b7d
0x33c: V198 = 0x3b0
0x33f: JUMP 0x3b0
---
Entry stack: [V11, S4, S3, V138, 0xa9059cbb, V161]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, S4, S3]

================================

Block 0x340
[0x340:0x3af]
---
Predecessors: [0x1d5]
Successors: []
---
0x340 JUMPDEST
0x341 PUSH32 0x56e60a31ff53612407261d12d05ce4b623506086477395bf1a7b299c652ae31a
0x362 CALLER
0x363 DUP3
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP4
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x394 AND
0x395 DUP2
0x396 MSTORE
0x397 PUSH1 0x20
0x399 ADD
0x39a DUP3
0x39b DUP2
0x39c MSTORE
0x39d PUSH1 0x20
0x39f ADD
0x3a0 SWAP3
0x3a1 POP
0x3a2 POP
0x3a3 POP
0x3a4 PUSH1 0x40
0x3a6 MLOAD
0x3a7 DUP1
0x3a8 SWAP2
0x3a9 SUB
0x3aa SWAP1
0x3ab LOG1
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af REVERT
---
0x340: JUMPDEST 
0x341: V199 = 0x56e60a31ff53612407261d12d05ce4b623506086477395bf1a7b299c652ae31a
0x362: V200 = CALLER
0x364: V201 = 0x40
0x366: V202 = M[0x40]
0x369: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x37f: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x394: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x396: M[V202] = V206
0x397: V207 = 0x20
0x399: V208 = ADD 0x20 V202
0x39c: M[V208] = S0
0x39d: V209 = 0x20
0x39f: V210 = ADD 0x20 V208
0x3a4: V211 = 0x40
0x3a6: V212 = M[0x40]
0x3a9: V213 = SUB V210 V212
0x3ab: LOG V212 V213 0x56e60a31ff53612407261d12d05ce4b623506086477395bf1a7b299c652ae31a
0x3ac: V214 = 0x0
0x3af: REVERT 0x0 0x0
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S1, S0]

================================

Block 0x3b0
[0x3b0:0x3b3]
---
Predecessors: [0x2c5]
Successors: []
---
0x3b0 JUMPDEST
0x3b1 POP
0x3b2 POP
0x3b3 STOP
---
0x3b0: JUMPDEST 
0x3b3: STOP 
---
Entry stack: [V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b4
[0x3b4:0x3ba]
---
Predecessors: [0xd]
Successors: [0x3bb, 0x3bf]
---
0x3b4 JUMPDEST
0x3b5 CALLVALUE
0x3b6 ISZERO
0x3b7 PUSH2 0x3bf
0x3ba JUMPI
---
0x3b4: JUMPDEST 
0x3b5: V215 = CALLVALUE
0x3b6: V216 = ISZERO V215
0x3b7: V217 = 0x3bf
0x3ba: JUMPI 0x3bf V216
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3bb
[0x3bb:0x3be]
---
Predecessors: [0x3b4]
Successors: []
---
0x3bb PUSH1 0x0
0x3bd DUP1
0x3be REVERT
---
0x3bb: V218 = 0x0
0x3be: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3bf
[0x3bf:0x3c6]
---
Predecessors: [0x3b4]
Successors: [0x6e6]
---
0x3bf JUMPDEST
0x3c0 PUSH2 0x3c7
0x3c3 PUSH2 0x6e6
0x3c6 JUMP
---
0x3bf: JUMPDEST 
0x3c0: V219 = 0x3c7
0x3c3: V220 = 0x6e6
0x3c6: JUMP 0x6e6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3c7]
Exit stack: [V11, 0x3c7]

================================

Block 0x3c7
[0x3c7:0x408]
---
Predecessors: [0x6e6]
Successors: []
---
0x3c7 JUMPDEST
0x3c8 PUSH1 0x40
0x3ca MLOAD
0x3cb DUP1
0x3cc DUP3
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x20
0x3fd ADD
0x3fe SWAP2
0x3ff POP
0x400 POP
0x401 PUSH1 0x40
0x403 MLOAD
0x404 DUP1
0x405 SWAP2
0x406 SUB
0x407 SWAP1
0x408 RETURN
---
0x3c7: JUMPDEST 
0x3c8: V221 = 0x40
0x3ca: V222 = M[0x40]
0x3cd: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x3e3: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3fa: M[V222] = V226
0x3fb: V227 = 0x20
0x3fd: V228 = ADD 0x20 V222
0x401: V229 = 0x40
0x403: V230 = M[0x40]
0x406: V231 = SUB V228 V230
0x408: RETURN V230 V231
---
Entry stack: [V11, 0x3c7, V473]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3c7]

================================

Block 0x409
[0x409:0x40f]
---
Predecessors: [0x41]
Successors: [0x410, 0x414]
---
0x409 JUMPDEST
0x40a CALLVALUE
0x40b ISZERO
0x40c PUSH2 0x414
0x40f JUMPI
---
0x409: JUMPDEST 
0x40a: V232 = CALLVALUE
0x40b: V233 = ISZERO V232
0x40c: V234 = 0x414
0x40f: JUMPI 0x414 V233
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x409]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V235 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x414
[0x414:0x41b]
---
Predecessors: [0x409]
Successors: [0x70c]
---
0x414 JUMPDEST
0x415 PUSH2 0x41c
0x418 PUSH2 0x70c
0x41b JUMP
---
0x414: JUMPDEST 
0x415: V236 = 0x41c
0x418: V237 = 0x70c
0x41b: JUMP 0x70c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x41c]
Exit stack: [V11, 0x41c]

================================

Block 0x41c
[0x41c:0x435]
---
Predecessors: [0x70c]
Successors: []
---
0x41c JUMPDEST
0x41d PUSH1 0x40
0x41f MLOAD
0x420 DUP1
0x421 DUP3
0x422 ISZERO
0x423 ISZERO
0x424 ISZERO
0x425 ISZERO
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a ADD
0x42b SWAP2
0x42c POP
0x42d POP
0x42e PUSH1 0x40
0x430 MLOAD
0x431 DUP1
0x432 SWAP2
0x433 SUB
0x434 SWAP1
0x435 RETURN
---
0x41c: JUMPDEST 
0x41d: V238 = 0x40
0x41f: V239 = M[0x40]
0x422: V240 = ISZERO V481
0x423: V241 = ISZERO V240
0x424: V242 = ISZERO V241
0x425: V243 = ISZERO V242
0x427: M[V239] = V243
0x428: V244 = 0x20
0x42a: V245 = ADD 0x20 V239
0x42e: V246 = 0x40
0x430: V247 = M[0x40]
0x433: V248 = SUB V245 V247
0x435: RETURN V247 V248
---
Entry stack: [V11, 0x41c, V481]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x41c]

================================

Block 0x436
[0x436:0x43c]
---
Predecessors: [0x4c]
Successors: [0x43d, 0x441]
---
0x436 JUMPDEST
0x437 CALLVALUE
0x438 ISZERO
0x439 PUSH2 0x441
0x43c JUMPI
---
0x436: JUMPDEST 
0x437: V249 = CALLVALUE
0x438: V250 = ISZERO V249
0x439: V251 = 0x441
0x43c: JUMPI 0x441 V250
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x43d
[0x43d:0x440]
---
Predecessors: [0x436]
Successors: []
---
0x43d PUSH1 0x0
0x43f DUP1
0x440 REVERT
---
0x43d: V252 = 0x0
0x440: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x441
[0x441:0x448]
---
Predecessors: [0x436]
Successors: [0x71f]
---
0x441 JUMPDEST
0x442 PUSH2 0x449
0x445 PUSH2 0x71f
0x448 JUMP
---
0x441: JUMPDEST 
0x442: V253 = 0x449
0x445: V254 = 0x71f
0x448: JUMP 0x71f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x449]
Exit stack: [V11, 0x449]

================================

Block 0x449
[0x449:0x462]
---
Predecessors: [0x868]
Successors: []
---
0x449 JUMPDEST
0x44a PUSH1 0x40
0x44c MLOAD
0x44d DUP1
0x44e DUP3
0x44f ISZERO
0x450 ISZERO
0x451 ISZERO
0x452 ISZERO
0x453 DUP2
0x454 MSTORE
0x455 PUSH1 0x20
0x457 ADD
0x458 SWAP2
0x459 POP
0x45a POP
0x45b PUSH1 0x40
0x45d MLOAD
0x45e DUP1
0x45f SWAP2
0x460 SUB
0x461 SWAP1
0x462 RETURN
---
0x449: JUMPDEST 
0x44a: V255 = 0x40
0x44c: V256 = M[0x40]
0x44f: V257 = ISZERO {0x0, 0x1}
0x450: V258 = ISZERO V257
0x451: V259 = ISZERO V258
0x452: V260 = ISZERO V259
0x454: M[V256] = V260
0x455: V261 = 0x20
0x457: V262 = ADD 0x20 V256
0x45b: V263 = 0x40
0x45d: V264 = M[0x40]
0x460: V265 = SUB V262 V264
0x462: RETURN V264 V265
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x463
[0x463:0x469]
---
Predecessors: [0x57]
Successors: [0x46a, 0x46e]
---
0x463 JUMPDEST
0x464 CALLVALUE
0x465 ISZERO
0x466 PUSH2 0x46e
0x469 JUMPI
---
0x463: JUMPDEST 
0x464: V266 = CALLVALUE
0x465: V267 = ISZERO V266
0x466: V268 = 0x46e
0x469: JUMPI 0x46e V267
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46a
[0x46a:0x46d]
---
Predecessors: [0x463]
Successors: []
---
0x46a PUSH1 0x0
0x46c DUP1
0x46d REVERT
---
0x46a: V269 = 0x0
0x46d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46e
[0x46e:0x475]
---
Predecessors: [0x463]
Successors: [0x86b]
---
0x46e JUMPDEST
0x46f PUSH2 0x476
0x472 PUSH2 0x86b
0x475 JUMP
---
0x46e: JUMPDEST 
0x46f: V270 = 0x476
0x472: V271 = 0x86b
0x475: JUMP 0x86b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x476]
Exit stack: [V11, 0x476]

================================

Block 0x476
[0x476:0x48b]
---
Predecessors: [0x86b]
Successors: []
---
0x476 JUMPDEST
0x477 PUSH1 0x40
0x479 MLOAD
0x47a DUP1
0x47b DUP3
0x47c DUP2
0x47d MSTORE
0x47e PUSH1 0x20
0x480 ADD
0x481 SWAP2
0x482 POP
0x483 POP
0x484 PUSH1 0x40
0x486 MLOAD
0x487 DUP1
0x488 SWAP2
0x489 SUB
0x48a SWAP1
0x48b RETURN
---
0x476: JUMPDEST 
0x477: V272 = 0x40
0x479: V273 = M[0x40]
0x47d: M[V273] = V556
0x47e: V274 = 0x20
0x480: V275 = ADD 0x20 V273
0x484: V276 = 0x40
0x486: V277 = M[0x40]
0x489: V278 = SUB V275 V277
0x48b: RETURN V277 V278
---
Entry stack: [V11, 0x476, V556]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x476]

================================

Block 0x48c
[0x48c:0x492]
---
Predecessors: [0x62]
Successors: [0x493, 0x497]
---
0x48c JUMPDEST
0x48d CALLVALUE
0x48e ISZERO
0x48f PUSH2 0x497
0x492 JUMPI
---
0x48c: JUMPDEST 
0x48d: V279 = CALLVALUE
0x48e: V280 = ISZERO V279
0x48f: V281 = 0x497
0x492: JUMPI 0x497 V280
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x493
[0x493:0x496]
---
Predecessors: [0x48c]
Successors: []
---
0x493 PUSH1 0x0
0x495 DUP1
0x496 REVERT
---
0x493: V282 = 0x0
0x496: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x497
[0x497:0x49e]
---
Predecessors: [0x48c]
Successors: [0x871]
---
0x497 JUMPDEST
0x498 PUSH2 0x49f
0x49b PUSH2 0x871
0x49e JUMP
---
0x497: JUMPDEST 
0x498: V283 = 0x49f
0x49b: V284 = 0x871
0x49e: JUMP 0x871
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x49f]
Exit stack: [V11, 0x49f]

================================

Block 0x49f
[0x49f:0x4b4]
---
Predecessors: [0x871]
Successors: []
---
0x49f JUMPDEST
0x4a0 PUSH1 0x40
0x4a2 MLOAD
0x4a3 DUP1
0x4a4 DUP3
0x4a5 DUP2
0x4a6 MSTORE
0x4a7 PUSH1 0x20
0x4a9 ADD
0x4aa SWAP2
0x4ab POP
0x4ac POP
0x4ad PUSH1 0x40
0x4af MLOAD
0x4b0 DUP1
0x4b1 SWAP2
0x4b2 SUB
0x4b3 SWAP1
0x4b4 RETURN
---
0x49f: JUMPDEST 
0x4a0: V285 = 0x40
0x4a2: V286 = M[0x40]
0x4a6: M[V286] = V558
0x4a7: V287 = 0x20
0x4a9: V288 = ADD 0x20 V286
0x4ad: V289 = 0x40
0x4af: V290 = M[0x40]
0x4b2: V291 = SUB V288 V290
0x4b4: RETURN V290 V291
---
Entry stack: [V11, 0x49f, V558]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x49f]

================================

Block 0x4b5
[0x4b5:0x4bb]
---
Predecessors: [0x6d]
Successors: [0x4bc, 0x4c0]
---
0x4b5 JUMPDEST
0x4b6 CALLVALUE
0x4b7 ISZERO
0x4b8 PUSH2 0x4c0
0x4bb JUMPI
---
0x4b5: JUMPDEST 
0x4b6: V292 = CALLVALUE
0x4b7: V293 = ISZERO V292
0x4b8: V294 = 0x4c0
0x4bb: JUMPI 0x4c0 V293
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4bc
[0x4bc:0x4bf]
---
Predecessors: [0x4b5]
Successors: []
---
0x4bc PUSH1 0x0
0x4be DUP1
0x4bf REVERT
---
0x4bc: V295 = 0x0
0x4bf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4c0
[0x4c0:0x4c7]
---
Predecessors: [0x4b5]
Successors: [0x877]
---
0x4c0 JUMPDEST
0x4c1 PUSH2 0x4c8
0x4c4 PUSH2 0x877
0x4c7 JUMP
---
0x4c0: JUMPDEST 
0x4c1: V296 = 0x4c8
0x4c4: V297 = 0x877
0x4c7: JUMP 0x877
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4c8]
Exit stack: [V11, 0x4c8]

================================

Block 0x4c8
[0x4c8:0x4e1]
---
Predecessors: [0x8d5]
Successors: []
---
0x4c8 JUMPDEST
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc DUP1
0x4cd DUP3
0x4ce ISZERO
0x4cf ISZERO
0x4d0 ISZERO
0x4d1 ISZERO
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 SWAP2
0x4d8 POP
0x4d9 POP
0x4da PUSH1 0x40
0x4dc MLOAD
0x4dd DUP1
0x4de SWAP2
0x4df SUB
0x4e0 SWAP1
0x4e1 RETURN
---
0x4c8: JUMPDEST 
0x4c9: V298 = 0x40
0x4cb: V299 = M[0x40]
0x4ce: V300 = ISZERO 0x1
0x4cf: V301 = ISZERO 0x0
0x4d0: V302 = ISZERO 0x1
0x4d1: V303 = ISZERO 0x0
0x4d3: M[V299] = 0x1
0x4d4: V304 = 0x20
0x4d6: V305 = ADD 0x20 V299
0x4da: V306 = 0x40
0x4dc: V307 = M[0x40]
0x4df: V308 = SUB V305 V307
0x4e1: RETURN V307 V308
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e2
[0x4e2:0x4e8]
---
Predecessors: [0x78]
Successors: [0x4e9, 0x4ed]
---
0x4e2 JUMPDEST
0x4e3 CALLVALUE
0x4e4 ISZERO
0x4e5 PUSH2 0x4ed
0x4e8 JUMPI
---
0x4e2: JUMPDEST 
0x4e3: V309 = CALLVALUE
0x4e4: V310 = ISZERO V309
0x4e5: V311 = 0x4ed
0x4e8: JUMPI 0x4ed V310
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e9
[0x4e9:0x4ec]
---
Predecessors: [0x4e2]
Successors: []
---
0x4e9 PUSH1 0x0
0x4eb DUP1
0x4ec REVERT
---
0x4e9: V312 = 0x0
0x4ec: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ed
[0x4ed:0x4f4]
---
Predecessors: [0x4e2]
Successors: [0x8f7]
---
0x4ed JUMPDEST
0x4ee PUSH2 0x4f5
0x4f1 PUSH2 0x8f7
0x4f4 JUMP
---
0x4ed: JUMPDEST 
0x4ee: V313 = 0x4f5
0x4f1: V314 = 0x8f7
0x4f4: JUMP 0x8f7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4f5]
Exit stack: [V11, 0x4f5]

================================

Block 0x4f5
[0x4f5:0x536]
---
Predecessors: [0x8f7]
Successors: []
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 DUP1
0x4fa DUP3
0x4fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x510 AND
0x511 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x526 AND
0x527 DUP2
0x528 MSTORE
0x529 PUSH1 0x20
0x52b ADD
0x52c SWAP2
0x52d POP
0x52e POP
0x52f PUSH1 0x40
0x531 MLOAD
0x532 DUP1
0x533 SWAP2
0x534 SUB
0x535 SWAP1
0x536 RETURN
---
0x4f5: JUMPDEST 
0x4f6: V315 = 0x40
0x4f8: V316 = M[0x40]
0x4fb: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x510: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x511: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x526: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x528: M[V316] = V320
0x529: V321 = 0x20
0x52b: V322 = ADD 0x20 V316
0x52f: V323 = 0x40
0x531: V324 = M[0x40]
0x534: V325 = SUB V322 V324
0x536: RETURN V324 V325
---
Entry stack: [V11, 0x4f5, V600]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4f5]

================================

Block 0x537
[0x537:0x53d]
---
Predecessors: [0x83]
Successors: [0x53e, 0x542]
---
0x537 JUMPDEST
0x538 CALLVALUE
0x539 ISZERO
0x53a PUSH2 0x542
0x53d JUMPI
---
0x537: JUMPDEST 
0x538: V326 = CALLVALUE
0x539: V327 = ISZERO V326
0x53a: V328 = 0x542
0x53d: JUMPI 0x542 V327
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x53e
[0x53e:0x541]
---
Predecessors: [0x537]
Successors: []
---
0x53e PUSH1 0x0
0x540 DUP1
0x541 REVERT
---
0x53e: V329 = 0x0
0x541: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x542
[0x542:0x560]
---
Predecessors: [0x537]
Successors: [0x69f]
---
0x542 JUMPDEST
0x543 PUSH2 0x561
0x546 PUSH1 0x4
0x548 DUP1
0x549 DUP1
0x54a CALLDATALOAD
0x54b SWAP1
0x54c PUSH1 0x20
0x54e ADD
0x54f SWAP1
0x550 SWAP2
0x551 SWAP1
0x552 DUP1
0x553 CALLDATALOAD
0x554 SWAP1
0x555 PUSH1 0x20
0x557 ADD
0x558 SWAP1
0x559 SWAP2
0x55a SWAP1
0x55b POP
0x55c POP
0x55d PUSH2 0x69f
0x560 JUMP
---
0x542: JUMPDEST 
0x543: V330 = 0x561
0x546: V331 = 0x4
0x54a: V332 = CALLDATALOAD 0x4
0x54c: V333 = 0x20
0x54e: V334 = ADD 0x20 0x4
0x553: V335 = CALLDATALOAD 0x24
0x555: V336 = 0x20
0x557: V337 = ADD 0x20 0x24
0x55d: V338 = 0x69f
0x560: JUMP 0x69f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x561, V332, V335]
Exit stack: [V11, 0x561, V332, V335]

================================

Block 0x561
[0x561:0x576]
---
Predecessors: [0x6dc]
Successors: []
---
0x561 JUMPDEST
0x562 PUSH1 0x40
0x564 MLOAD
0x565 DUP1
0x566 DUP3
0x567 DUP2
0x568 MSTORE
0x569 PUSH1 0x20
0x56b ADD
0x56c SWAP2
0x56d POP
0x56e POP
0x56f PUSH1 0x40
0x571 MLOAD
0x572 DUP1
0x573 SWAP2
0x574 SUB
0x575 SWAP1
0x576 RETURN
---
0x561: JUMPDEST 
0x562: V339 = 0x40
0x564: V340 = M[0x40]
0x568: M[V340] = S0
0x569: V341 = 0x20
0x56b: V342 = ADD 0x20 V340
0x56f: V343 = 0x40
0x571: V344 = M[0x40]
0x574: V345 = SUB V342 V344
0x576: RETURN V344 V345
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x577
[0x577:0x57d]
---
Predecessors: [0x8e]
Successors: [0x57e, 0x582]
---
0x577 JUMPDEST
0x578 CALLVALUE
0x579 ISZERO
0x57a PUSH2 0x582
0x57d JUMPI
---
0x577: JUMPDEST 
0x578: V346 = CALLVALUE
0x579: V347 = ISZERO V346
0x57a: V348 = 0x582
0x57d: JUMPI 0x582 V347
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x57e
[0x57e:0x581]
---
Predecessors: [0x577]
Successors: []
---
0x57e PUSH1 0x0
0x580 DUP1
0x581 REVERT
---
0x57e: V349 = 0x0
0x581: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x582
[0x582:0x597]
---
Predecessors: [0x577]
Successors: [0x91d]
---
0x582 JUMPDEST
0x583 PUSH2 0x598
0x586 PUSH1 0x4
0x588 DUP1
0x589 DUP1
0x58a CALLDATALOAD
0x58b SWAP1
0x58c PUSH1 0x20
0x58e ADD
0x58f SWAP1
0x590 SWAP2
0x591 SWAP1
0x592 POP
0x593 POP
0x594 PUSH2 0x91d
0x597 JUMP
---
0x582: JUMPDEST 
0x583: V350 = 0x598
0x586: V351 = 0x4
0x58a: V352 = CALLDATALOAD 0x4
0x58c: V353 = 0x20
0x58e: V354 = ADD 0x20 0x4
0x594: V355 = 0x91d
0x597: JUMP 0x91d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x598, V352]
Exit stack: [V11, 0x598, V352]

================================

Block 0x598
[0x598:0x5b1]
---
Predecessors: [0x997]
Successors: []
---
0x598 JUMPDEST
0x599 PUSH1 0x40
0x59b MLOAD
0x59c DUP1
0x59d DUP3
0x59e ISZERO
0x59f ISZERO
0x5a0 ISZERO
0x5a1 ISZERO
0x5a2 DUP2
0x5a3 MSTORE
0x5a4 PUSH1 0x20
0x5a6 ADD
0x5a7 SWAP2
0x5a8 POP
0x5a9 POP
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae SWAP2
0x5af SUB
0x5b0 SWAP1
0x5b1 RETURN
---
0x598: JUMPDEST 
0x599: V356 = 0x40
0x59b: V357 = M[0x40]
0x59e: V358 = ISZERO 0x1
0x59f: V359 = ISZERO 0x0
0x5a0: V360 = ISZERO 0x1
0x5a1: V361 = ISZERO 0x0
0x5a3: M[V357] = 0x1
0x5a4: V362 = 0x20
0x5a6: V363 = ADD 0x20 V357
0x5aa: V364 = 0x40
0x5ac: V365 = M[0x40]
0x5af: V366 = SUB V363 V365
0x5b1: RETURN V365 V366
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b2
[0x5b2:0x5b8]
---
Predecessors: [0x99]
Successors: [0x5b9, 0x5bd]
---
0x5b2 JUMPDEST
0x5b3 CALLVALUE
0x5b4 ISZERO
0x5b5 PUSH2 0x5bd
0x5b8 JUMPI
---
0x5b2: JUMPDEST 
0x5b3: V367 = CALLVALUE
0x5b4: V368 = ISZERO V367
0x5b5: V369 = 0x5bd
0x5b8: JUMPI 0x5bd V368
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b9
[0x5b9:0x5bc]
---
Predecessors: [0x5b2]
Successors: []
---
0x5b9 PUSH1 0x0
0x5bb DUP1
0x5bc REVERT
---
0x5b9: V370 = 0x0
0x5bc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5bd
[0x5bd:0x5db]
---
Predecessors: [0x5b2]
Successors: [0x661]
---
0x5bd JUMPDEST
0x5be PUSH2 0x5dc
0x5c1 PUSH1 0x4
0x5c3 DUP1
0x5c4 DUP1
0x5c5 CALLDATALOAD
0x5c6 SWAP1
0x5c7 PUSH1 0x20
0x5c9 ADD
0x5ca SWAP1
0x5cb SWAP2
0x5cc SWAP1
0x5cd DUP1
0x5ce CALLDATALOAD
0x5cf SWAP1
0x5d0 PUSH1 0x20
0x5d2 ADD
0x5d3 SWAP1
0x5d4 SWAP2
0x5d5 SWAP1
0x5d6 POP
0x5d7 POP
0x5d8 PUSH2 0x661
0x5db JUMP
---
0x5bd: JUMPDEST 
0x5be: V371 = 0x5dc
0x5c1: V372 = 0x4
0x5c5: V373 = CALLDATALOAD 0x4
0x5c7: V374 = 0x20
0x5c9: V375 = ADD 0x20 0x4
0x5ce: V376 = CALLDATALOAD 0x24
0x5d0: V377 = 0x20
0x5d2: V378 = ADD 0x20 0x24
0x5d8: V379 = 0x661
0x5db: JUMP 0x661
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5dc, V373, V376]
Exit stack: [V11, 0x5dc, V373, V376]

================================

Block 0x5dc
[0x5dc:0x5f1]
---
Predecessors: [0x698]
Successors: []
---
0x5dc JUMPDEST
0x5dd PUSH1 0x40
0x5df MLOAD
0x5e0 DUP1
0x5e1 DUP3
0x5e2 DUP2
0x5e3 MSTORE
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 SWAP2
0x5e8 POP
0x5e9 POP
0x5ea PUSH1 0x40
0x5ec MLOAD
0x5ed DUP1
0x5ee SWAP2
0x5ef SUB
0x5f0 SWAP1
0x5f1 RETURN
---
0x5dc: JUMPDEST 
0x5dd: V380 = 0x40
0x5df: V381 = M[0x40]
0x5e3: M[V381] = S0
0x5e4: V382 = 0x20
0x5e6: V383 = ADD 0x20 V381
0x5ea: V384 = 0x40
0x5ec: V385 = M[0x40]
0x5ef: V386 = SUB V383 V385
0x5f1: RETURN V385 V386
---
Entry stack: [V11, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S3, 0x0, S1]

================================

Block 0x5f2
[0x5f2:0x5f8]
---
Predecessors: [0xa4]
Successors: [0x5f9, 0x5fd]
---
0x5f2 JUMPDEST
0x5f3 CALLVALUE
0x5f4 ISZERO
0x5f5 PUSH2 0x5fd
0x5f8 JUMPI
---
0x5f2: JUMPDEST 
0x5f3: V387 = CALLVALUE
0x5f4: V388 = ISZERO V387
0x5f5: V389 = 0x5fd
0x5f8: JUMPI 0x5fd V388
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5f9
[0x5f9:0x5fc]
---
Predecessors: [0x5f2]
Successors: []
---
0x5f9 PUSH1 0x0
0x5fb DUP1
0x5fc REVERT
---
0x5f9: V390 = 0x0
0x5fc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5fd
[0x5fd:0x604]
---
Predecessors: [0x5f2]
Successors: [0x9a7]
---
0x5fd JUMPDEST
0x5fe PUSH2 0x605
0x601 PUSH2 0x9a7
0x604 JUMP
---
0x5fd: JUMPDEST 
0x5fe: V391 = 0x605
0x601: V392 = 0x9a7
0x604: JUMP 0x9a7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x605]
Exit stack: [V11, 0x605]

================================

Block 0x605
[0x605:0x61e]
---
Predecessors: [0xa05]
Successors: []
---
0x605 JUMPDEST
0x606 PUSH1 0x40
0x608 MLOAD
0x609 DUP1
0x60a DUP3
0x60b ISZERO
0x60c ISZERO
0x60d ISZERO
0x60e ISZERO
0x60f DUP2
0x610 MSTORE
0x611 PUSH1 0x20
0x613 ADD
0x614 SWAP2
0x615 POP
0x616 POP
0x617 PUSH1 0x40
0x619 MLOAD
0x61a DUP1
0x61b SWAP2
0x61c SUB
0x61d SWAP1
0x61e RETURN
---
0x605: JUMPDEST 
0x606: V393 = 0x40
0x608: V394 = M[0x40]
0x60b: V395 = ISZERO 0x1
0x60c: V396 = ISZERO 0x0
0x60d: V397 = ISZERO 0x1
0x60e: V398 = ISZERO 0x0
0x610: M[V394] = 0x1
0x611: V399 = 0x20
0x613: V400 = ADD 0x20 V394
0x617: V401 = 0x40
0x619: V402 = M[0x40]
0x61c: V403 = SUB V400 V402
0x61e: RETURN V402 V403
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x61f
[0x61f:0x625]
---
Predecessors: [0xaf]
Successors: [0x626, 0x62a]
---
0x61f JUMPDEST
0x620 CALLVALUE
0x621 ISZERO
0x622 PUSH2 0x62a
0x625 JUMPI
---
0x61f: JUMPDEST 
0x620: V404 = CALLVALUE
0x621: V405 = ISZERO V404
0x622: V406 = 0x62a
0x625: JUMPI 0x62a V405
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x626
[0x626:0x629]
---
Predecessors: [0x61f]
Successors: []
---
0x626 PUSH1 0x0
0x628 DUP1
0x629 REVERT
---
0x626: V407 = 0x0
0x629: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x62a
[0x62a:0x631]
---
Predecessors: [0x61f]
Successors: [0xa27]
---
0x62a JUMPDEST
0x62b PUSH2 0x632
0x62e PUSH2 0xa27
0x631 JUMP
---
0x62a: JUMPDEST 
0x62b: V408 = 0x632
0x62e: V409 = 0xa27
0x631: JUMP 0xa27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x632]
Exit stack: [V11, 0x632]

================================

Block 0x632
[0x632:0x64b]
---
Predecessors: [0xceb]
Successors: []
---
0x632 JUMPDEST
0x633 PUSH1 0x40
0x635 MLOAD
0x636 DUP1
0x637 DUP3
0x638 ISZERO
0x639 ISZERO
0x63a ISZERO
0x63b ISZERO
0x63c DUP2
0x63d MSTORE
0x63e PUSH1 0x20
0x640 ADD
0x641 SWAP2
0x642 POP
0x643 POP
0x644 PUSH1 0x40
0x646 MLOAD
0x647 DUP1
0x648 SWAP2
0x649 SUB
0x64a SWAP1
0x64b RETURN
---
0x632: JUMPDEST 
0x633: V410 = 0x40
0x635: V411 = M[0x40]
0x638: V412 = ISZERO {0x0, 0x1}
0x639: V413 = ISZERO V412
0x63a: V414 = ISZERO V413
0x63b: V415 = ISZERO V414
0x63d: M[V411] = V415
0x63e: V416 = 0x20
0x640: V417 = ADD 0x20 V411
0x644: V418 = 0x40
0x646: V419 = M[0x40]
0x649: V420 = SUB V417 V419
0x64b: RETURN V419 V420
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x64c
[0x64c:0x652]
---
Predecessors: [0xba]
Successors: [0x653, 0x657]
---
0x64c JUMPDEST
0x64d CALLVALUE
0x64e ISZERO
0x64f PUSH2 0x657
0x652 JUMPI
---
0x64c: JUMPDEST 
0x64d: V421 = CALLVALUE
0x64e: V422 = ISZERO V421
0x64f: V423 = 0x657
0x652: JUMPI 0x657 V422
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x653
[0x653:0x656]
---
Predecessors: [0x64c]
Successors: []
---
0x653 PUSH1 0x0
0x655 DUP1
0x656 REVERT
---
0x653: V424 = 0x0
0x656: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x657
[0x657:0x65e]
---
Predecessors: [0x64c]
Successors: [0xcee]
---
0x657 JUMPDEST
0x658 PUSH2 0x65f
0x65b PUSH2 0xcee
0x65e JUMP
---
0x657: JUMPDEST 
0x658: V425 = 0x65f
0x65b: V426 = 0xcee
0x65e: JUMP 0xcee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x65f]
Exit stack: [V11, 0x65f]

================================

Block 0x65f
[0x65f:0x660]
---
Predecessors: []
Successors: []
---
0x65f JUMPDEST
0x660 STOP
---
0x65f: JUMPDEST 
0x660: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x661
[0x661:0x66d]
---
Predecessors: [0xe3, 0x5bd]
Successors: [0x66e, 0x676]
---
0x661 JUMPDEST
0x662 PUSH1 0x0
0x664 DUP1
0x665 PUSH1 0x0
0x667 DUP5
0x668 EQ
0x669 ISZERO
0x66a PUSH2 0x676
0x66d JUMPI
---
0x661: JUMPDEST 
0x662: V427 = 0x0
0x665: V428 = 0x0
0x668: V429 = EQ S1 0x0
0x669: V430 = ISZERO V429
0x66a: V431 = 0x676
0x66d: JUMPI 0x676 V430
---
Entry stack: [V11, V64, 0x0, S3, {0xf5, 0x5dc}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, V64, 0x0, S3, {0xf5, 0x5dc}, S1, S0, 0x0, 0x0]

================================

Block 0x66e
[0x66e:0x675]
---
Predecessors: [0x661]
Successors: [0x698]
---
0x66e PUSH1 0x0
0x670 SWAP2
0x671 POP
0x672 PUSH2 0x698
0x675 JUMP
---
0x66e: V432 = 0x0
0x672: V433 = 0x698
0x675: JUMP 0x698
---
Entry stack: [V11, S7, 0x0, S5, {0xf5, 0x5dc}, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, S7, 0x0, S5, {0xf5, 0x5dc}, S3, S2, 0x0, 0x0]

================================

Block 0x676
[0x676:0x685]
---
Predecessors: [0x661]
Successors: [0x686, 0x687]
---
0x676 JUMPDEST
0x677 DUP3
0x678 DUP5
0x679 MUL
0x67a SWAP1
0x67b POP
0x67c DUP3
0x67d DUP5
0x67e DUP3
0x67f DUP2
0x680 ISZERO
0x681 ISZERO
0x682 PUSH2 0x687
0x685 JUMPI
---
0x676: JUMPDEST 
0x679: V434 = MUL S3 S2
0x680: V435 = ISZERO S3
0x681: V436 = ISZERO V435
0x682: V437 = 0x687
0x685: JUMPI 0x687 V436
---
Entry stack: [V11, V64, 0x0, S5, {0xf5, 0x5dc}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V434, S2, S3, V434]
Exit stack: [V11, V64, 0x0, S5, {0xf5, 0x5dc}, S3, S2, 0x0, V434, S2, S3, V434]

================================

Block 0x686
[0x686:0x686]
---
Predecessors: [0x676]
Successors: []
---
0x686 INVALID
---
0x686: INVALID 
---
Entry stack: [V11, S10, 0x0, S8, {0xf5, 0x5dc}, S6, S5, 0x0, V434, S2, S1, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, 0x0, S8, {0xf5, 0x5dc}, S6, S5, 0x0, V434, S2, S1, V434]

================================

Block 0x687
[0x687:0x68f]
---
Predecessors: [0x676]
Successors: [0x690, 0x694]
---
0x687 JUMPDEST
0x688 DIV
0x689 EQ
0x68a ISZERO
0x68b ISZERO
0x68c PUSH2 0x694
0x68f JUMPI
---
0x687: JUMPDEST 
0x688: V438 = DIV V434 S1
0x689: V439 = EQ V438 S2
0x68a: V440 = ISZERO V439
0x68b: V441 = ISZERO V440
0x68c: V442 = 0x694
0x68f: JUMPI 0x694 V441
---
Entry stack: [V11, S10, 0x0, S8, {0xf5, 0x5dc}, S6, S5, 0x0, V434, S2, S1, V434]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S10, 0x0, S8, {0xf5, 0x5dc}, S6, S5, 0x0, V434]

================================

Block 0x690
[0x690:0x693]
---
Predecessors: [0x687]
Successors: []
---
0x690 PUSH1 0x0
0x692 DUP1
0x693 REVERT
---
0x690: V443 = 0x0
0x693: REVERT 0x0 0x0
---
Entry stack: [V11, S7, 0x0, S5, {0xf5, 0x5dc}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, 0x0, S5, {0xf5, 0x5dc}, S3, S2, 0x0, S0]

================================

Block 0x694
[0x694:0x697]
---
Predecessors: [0x687]
Successors: [0x698]
---
0x694 JUMPDEST
0x695 DUP1
0x696 SWAP2
0x697 POP
---
0x694: JUMPDEST 
---
Entry stack: [V11, S7, 0x0, S5, {0xf5, 0x5dc}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, S7, 0x0, S5, {0xf5, 0x5dc}, S3, S2, S0, S0]

================================

Block 0x698
[0x698:0x69e]
---
Predecessors: [0x66e, 0x694]
Successors: [0xf5, 0x5dc]
---
0x698 JUMPDEST
0x699 POP
0x69a SWAP3
0x69b SWAP2
0x69c POP
0x69d POP
0x69e JUMP
---
0x698: JUMPDEST 
0x69e: JUMP {0xf5, 0x5dc}
---
Entry stack: [V11, S7, 0x0, S5, {0xf5, 0x5dc}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, S7, 0x0, S5, S1]

================================

Block 0x69f
[0x69f:0x6ac]
---
Predecessors: [0xf5, 0x542]
Successors: [0x6ad, 0x6b1]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x0
0x6a2 DUP1
0x6a3 PUSH1 0x0
0x6a5 DUP4
0x6a6 GT
0x6a7 ISZERO
0x6a8 ISZERO
0x6a9 PUSH2 0x6b1
0x6ac JUMPI
---
0x69f: JUMPDEST 
0x6a0: V444 = 0x0
0x6a3: V445 = 0x0
0x6a6: V446 = GT S0 0x0
0x6a7: V447 = ISZERO V446
0x6a8: V448 = ISZERO V447
0x6a9: V449 = 0x6b1
0x6ac: JUMPI 0x6b1 V448
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V11, S4, S3, S2, S1, S0, 0x0, 0x0]

================================

Block 0x6ad
[0x6ad:0x6b0]
---
Predecessors: [0x69f]
Successors: []
---
0x6ad PUSH1 0x0
0x6af DUP1
0x6b0 REVERT
---
0x6ad: V450 = 0x0
0x6b0: REVERT 0x0 0x0
---
Entry stack: [V11, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x6b1
[0x6b1:0x6ba]
---
Predecessors: [0x69f]
Successors: [0x6bb, 0x6bc]
---
0x6b1 JUMPDEST
0x6b2 DUP3
0x6b3 DUP5
0x6b4 DUP2
0x6b5 ISZERO
0x6b6 ISZERO
0x6b7 PUSH2 0x6bc
0x6ba JUMPI
---
0x6b1: JUMPDEST 
0x6b5: V451 = ISZERO S2
0x6b6: V452 = ISZERO V451
0x6b7: V453 = 0x6bc
0x6ba: JUMPI 0x6bc V452
---
Entry stack: [V11, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, S3]
Exit stack: [V11, S6, S5, S4, S3, S2, 0x0, 0x0, S2, S3]

================================

Block 0x6bb
[0x6bb:0x6bb]
---
Predecessors: [0x6b1]
Successors: []
---
0x6bb INVALID
---
0x6bb: INVALID 
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x6bc
[0x6bc:0x6c8]
---
Predecessors: [0x6b1]
Successors: [0x6c9, 0x6ca]
---
0x6bc JUMPDEST
0x6bd DIV
0x6be SWAP1
0x6bf POP
0x6c0 DUP3
0x6c1 DUP5
0x6c2 DUP2
0x6c3 ISZERO
0x6c4 ISZERO
0x6c5 PUSH2 0x6ca
0x6c8 JUMPI
---
0x6bc: JUMPDEST 
0x6bd: V454 = DIV S0 S1
0x6c3: V455 = ISZERO S4
0x6c4: V456 = ISZERO V455
0x6c5: V457 = 0x6ca
0x6c8: JUMPI 0x6ca V456
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V454, S4, S5]
Exit stack: [V11, S8, S7, S6, S5, S4, 0x0, V454, S4, S5]

================================

Block 0x6c9
[0x6c9:0x6c9]
---
Predecessors: [0x6bc]
Successors: []
---
0x6c9 INVALID
---
0x6c9: INVALID 
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x0, V454, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, 0x0, V454, S1, S0]

================================

Block 0x6ca
[0x6ca:0x6d7]
---
Predecessors: [0x6bc]
Successors: [0x6d8, 0x6dc]
---
0x6ca JUMPDEST
0x6cb MOD
0x6cc DUP2
0x6cd DUP5
0x6ce MUL
0x6cf ADD
0x6d0 DUP5
0x6d1 EQ
0x6d2 ISZERO
0x6d3 ISZERO
0x6d4 PUSH2 0x6dc
0x6d7 JUMPI
---
0x6ca: JUMPDEST 
0x6cb: V458 = MOD S0 S1
0x6ce: V459 = MUL S4 V454
0x6cf: V460 = ADD V459 V458
0x6d1: V461 = EQ S5 V460
0x6d2: V462 = ISZERO V461
0x6d3: V463 = ISZERO V462
0x6d4: V464 = 0x6dc
0x6d7: JUMPI 0x6dc V463
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x0, V454, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2]
Exit stack: [V11, S8, S7, S6, S5, S4, 0x0, V454]

================================

Block 0x6d8
[0x6d8:0x6db]
---
Predecessors: [0x6ca]
Successors: []
---
0x6d8 PUSH1 0x0
0x6da DUP1
0x6db REVERT
---
0x6d8: V465 = 0x0
0x6db: REVERT 0x0 0x0
---
Entry stack: [V11, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0x6dc
[0x6dc:0x6e5]
---
Predecessors: [0x6ca]
Successors: [0xfd, 0x561]
---
0x6dc JUMPDEST
0x6dd DUP1
0x6de SWAP2
0x6df POP
0x6e0 POP
0x6e1 SWAP3
0x6e2 SWAP2
0x6e3 POP
0x6e4 POP
0x6e5 JUMP
---
0x6dc: JUMPDEST 
0x6e5: JUMP S4
---
Entry stack: [V11, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S6, S5, S0]

================================

Block 0x6e6
[0x6e6:0x70b]
---
Predecessors: [0x3bf]
Successors: [0x3c7]
---
0x6e6 JUMPDEST
0x6e7 PUSH1 0x1
0x6e9 PUSH1 0x0
0x6eb SWAP1
0x6ec SLOAD
0x6ed SWAP1
0x6ee PUSH2 0x100
0x6f1 EXP
0x6f2 SWAP1
0x6f3 DIV
0x6f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x709 AND
0x70a DUP2
0x70b JUMP
---
0x6e6: JUMPDEST 
0x6e7: V466 = 0x1
0x6e9: V467 = 0x0
0x6ec: V468 = S[0x1]
0x6ee: V469 = 0x100
0x6f1: V470 = EXP 0x100 0x0
0x6f3: V471 = DIV V468 0x1
0x6f4: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x709: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x70b: JUMP 0x3c7
---
Entry stack: [V11, 0x3c7]
Stack pops: 1
Stack additions: [S0, V473]
Exit stack: [V11, 0x3c7, V473]

================================

Block 0x70c
[0x70c:0x71e]
---
Predecessors: [0x414]
Successors: [0x41c]
---
0x70c JUMPDEST
0x70d PUSH1 0x2
0x70f PUSH1 0x14
0x711 SWAP1
0x712 SLOAD
0x713 SWAP1
0x714 PUSH2 0x100
0x717 EXP
0x718 SWAP1
0x719 DIV
0x71a PUSH1 0xff
0x71c AND
0x71d DUP2
0x71e JUMP
---
0x70c: JUMPDEST 
0x70d: V474 = 0x2
0x70f: V475 = 0x14
0x712: V476 = S[0x2]
0x714: V477 = 0x100
0x717: V478 = EXP 0x100 0x14
0x719: V479 = DIV V476 0x10000000000000000000000000000000000000000
0x71a: V480 = 0xff
0x71c: V481 = AND 0xff V479
0x71e: JUMP 0x41c
---
Entry stack: [V11, 0x41c]
Stack pops: 1
Stack additions: [S0, V481]
Exit stack: [V11, 0x41c, V481]

================================

Block 0x71f
[0x71f:0x778]
---
Predecessors: [0x441]
Successors: [0x779, 0x77d]
---
0x71f JUMPDEST
0x720 PUSH1 0x0
0x722 PUSH1 0x1
0x724 PUSH1 0x0
0x726 SWAP1
0x727 SLOAD
0x728 SWAP1
0x729 PUSH2 0x100
0x72c EXP
0x72d SWAP1
0x72e DIV
0x72f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x744 AND
0x745 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75a AND
0x75b CALLER
0x75c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x771 AND
0x772 EQ
0x773 ISZERO
0x774 ISZERO
0x775 PUSH2 0x77d
0x778 JUMPI
---
0x71f: JUMPDEST 
0x720: V482 = 0x0
0x722: V483 = 0x1
0x724: V484 = 0x0
0x727: V485 = S[0x1]
0x729: V486 = 0x100
0x72c: V487 = EXP 0x100 0x0
0x72e: V488 = DIV V485 0x1
0x72f: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x744: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x745: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x75a: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x75b: V493 = CALLER
0x75c: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x771: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x772: V496 = EQ V495 V492
0x773: V497 = ISZERO V496
0x774: V498 = ISZERO V497
0x775: V499 = 0x77d
0x778: JUMPI 0x77d V498
---
Entry stack: [V11, 0x449]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x449, 0x0]

================================

Block 0x779
[0x779:0x77c]
---
Predecessors: [0x71f]
Successors: []
---
0x779 PUSH1 0x0
0x77b DUP1
0x77c REVERT
---
0x779: V500 = 0x0
0x77c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x449, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x449, 0x0]

================================

Block 0x77d
[0x77d:0x794]
---
Predecessors: [0x71f]
Successors: [0x795, 0x799]
---
0x77d JUMPDEST
0x77e PUSH1 0x2
0x780 PUSH1 0x14
0x782 SWAP1
0x783 SLOAD
0x784 SWAP1
0x785 PUSH2 0x100
0x788 EXP
0x789 SWAP1
0x78a DIV
0x78b PUSH1 0xff
0x78d AND
0x78e ISZERO
0x78f ISZERO
0x790 ISZERO
0x791 PUSH2 0x799
0x794 JUMPI
---
0x77d: JUMPDEST 
0x77e: V501 = 0x2
0x780: V502 = 0x14
0x783: V503 = S[0x2]
0x785: V504 = 0x100
0x788: V505 = EXP 0x100 0x14
0x78a: V506 = DIV V503 0x10000000000000000000000000000000000000000
0x78b: V507 = 0xff
0x78d: V508 = AND 0xff V506
0x78e: V509 = ISZERO V508
0x78f: V510 = ISZERO V509
0x790: V511 = ISZERO V510
0x791: V512 = 0x799
0x794: JUMPI 0x799 V511
---
Entry stack: [V11, 0x449, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x449, 0x0]

================================

Block 0x795
[0x795:0x798]
---
Predecessors: [0x77d]
Successors: []
---
0x795 PUSH1 0x0
0x797 DUP1
0x798 REVERT
---
0x795: V513 = 0x0
0x798: REVERT 0x0 0x0
---
Entry stack: [V11, 0x449, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x449, 0x0]

================================

Block 0x799
[0x799:0x80c]
---
Predecessors: [0x77d]
Successors: [0x80d, 0x863]
---
0x799 JUMPDEST
0x79a PUSH1 0x1
0x79c PUSH1 0x0
0x79e SWAP1
0x79f SLOAD
0x7a0 SWAP1
0x7a1 PUSH2 0x100
0x7a4 EXP
0x7a5 SWAP1
0x7a6 DIV
0x7a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bc AND
0x7bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d2 AND
0x7d3 PUSH2 0x8fc
0x7d6 ADDRESS
0x7d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ec AND
0x7ed BALANCE
0x7ee SWAP1
0x7ef DUP2
0x7f0 ISZERO
0x7f1 MUL
0x7f2 SWAP1
0x7f3 PUSH1 0x40
0x7f5 MLOAD
0x7f6 PUSH1 0x0
0x7f8 PUSH1 0x40
0x7fa MLOAD
0x7fb DUP1
0x7fc DUP4
0x7fd SUB
0x7fe DUP2
0x7ff DUP6
0x800 DUP9
0x801 DUP9
0x802 CALL
0x803 SWAP4
0x804 POP
0x805 POP
0x806 POP
0x807 POP
0x808 ISZERO
0x809 PUSH2 0x863
0x80c JUMPI
---
0x799: JUMPDEST 
0x79a: V514 = 0x1
0x79c: V515 = 0x0
0x79f: V516 = S[0x1]
0x7a1: V517 = 0x100
0x7a4: V518 = EXP 0x100 0x0
0x7a6: V519 = DIV V516 0x1
0x7a7: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bc: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x7bd: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d2: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x7d3: V524 = 0x8fc
0x7d6: V525 = ADDRESS
0x7d7: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ec: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x7ed: V528 = BALANCE V527
0x7f0: V529 = ISZERO V528
0x7f1: V530 = MUL V529 0x8fc
0x7f3: V531 = 0x40
0x7f5: V532 = M[0x40]
0x7f6: V533 = 0x0
0x7f8: V534 = 0x40
0x7fa: V535 = M[0x40]
0x7fd: V536 = SUB V532 V535
0x802: V537 = CALL V530 V523 V528 V535 V536 V535 0x0
0x808: V538 = ISZERO V537
0x809: V539 = 0x863
0x80c: JUMPI 0x863 V538
---
Entry stack: [V11, 0x449, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x449, 0x0]

================================

Block 0x80d
[0x80d:0x862]
---
Predecessors: [0x799]
Successors: [0x868]
---
0x80d PUSH32 0xcd639e6c9004b58476a66b3d69e887aac93116e060da7f653ded0827ab71e094
0x82e ADDRESS
0x82f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x844 AND
0x845 BALANCE
0x846 PUSH1 0x40
0x848 MLOAD
0x849 DUP1
0x84a DUP3
0x84b DUP2
0x84c MSTORE
0x84d PUSH1 0x20
0x84f ADD
0x850 SWAP2
0x851 POP
0x852 POP
0x853 PUSH1 0x40
0x855 MLOAD
0x856 DUP1
0x857 SWAP2
0x858 SUB
0x859 SWAP1
0x85a LOG1
0x85b PUSH1 0x1
0x85d SWAP1
0x85e POP
0x85f PUSH2 0x868
0x862 JUMP
---
0x80d: V540 = 0xcd639e6c9004b58476a66b3d69e887aac93116e060da7f653ded0827ab71e094
0x82e: V541 = ADDRESS
0x82f: V542 = 0xffffffffffffffffffffffffffffffffffffffff
0x844: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x845: V544 = BALANCE V543
0x846: V545 = 0x40
0x848: V546 = M[0x40]
0x84c: M[V546] = V544
0x84d: V547 = 0x20
0x84f: V548 = ADD 0x20 V546
0x853: V549 = 0x40
0x855: V550 = M[0x40]
0x858: V551 = SUB V548 V550
0x85a: LOG V550 V551 0xcd639e6c9004b58476a66b3d69e887aac93116e060da7f653ded0827ab71e094
0x85b: V552 = 0x1
0x85f: V553 = 0x868
0x862: JUMP 0x868
---
Entry stack: [V11, 0x449, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x449, 0x1]

================================

Block 0x863
[0x863:0x867]
---
Predecessors: [0x799]
Successors: [0x868]
---
0x863 JUMPDEST
0x864 PUSH1 0x0
0x866 SWAP1
0x867 POP
---
0x863: JUMPDEST 
0x864: V554 = 0x0
---
Entry stack: [V11, 0x449, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x449, 0x0]

================================

Block 0x868
[0x868:0x86a]
---
Predecessors: [0x80d, 0x863]
Successors: [0x449]
---
0x868 JUMPDEST
0x869 SWAP1
0x86a JUMP
---
0x868: JUMPDEST 
0x86a: JUMP 0x449
---
Entry stack: [V11, 0x449, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x86b
[0x86b:0x870]
---
Predecessors: [0x46e]
Successors: [0x476]
---
0x86b JUMPDEST
0x86c PUSH1 0x3
0x86e SLOAD
0x86f DUP2
0x870 JUMP
---
0x86b: JUMPDEST 
0x86c: V555 = 0x3
0x86e: V556 = S[0x3]
0x870: JUMP 0x476
---
Entry stack: [V11, 0x476]
Stack pops: 1
Stack additions: [S0, V556]
Exit stack: [V11, 0x476, V556]

================================

Block 0x871
[0x871:0x876]
---
Predecessors: [0x497]
Successors: [0x49f]
---
0x871 JUMPDEST
0x872 PUSH1 0x0
0x874 SLOAD
0x875 DUP2
0x876 JUMP
---
0x871: JUMPDEST 
0x872: V557 = 0x0
0x874: V558 = S[0x0]
0x876: JUMP 0x49f
---
Entry stack: [V11, 0x49f]
Stack pops: 1
Stack additions: [S0, V558]
Exit stack: [V11, 0x49f, V558]

================================

Block 0x877
[0x877:0x8d0]
---
Predecessors: [0x4c0]
Successors: [0x8d1, 0x8d5]
---
0x877 JUMPDEST
0x878 PUSH1 0x0
0x87a PUSH1 0x1
0x87c PUSH1 0x0
0x87e SWAP1
0x87f SLOAD
0x880 SWAP1
0x881 PUSH2 0x100
0x884 EXP
0x885 SWAP1
0x886 DIV
0x887 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89c AND
0x89d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b2 AND
0x8b3 CALLER
0x8b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c9 AND
0x8ca EQ
0x8cb ISZERO
0x8cc ISZERO
0x8cd PUSH2 0x8d5
0x8d0 JUMPI
---
0x877: JUMPDEST 
0x878: V559 = 0x0
0x87a: V560 = 0x1
0x87c: V561 = 0x0
0x87f: V562 = S[0x1]
0x881: V563 = 0x100
0x884: V564 = EXP 0x100 0x0
0x886: V565 = DIV V562 0x1
0x887: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x89c: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x89d: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x8b3: V570 = CALLER
0x8b4: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c9: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x8ca: V573 = EQ V572 V569
0x8cb: V574 = ISZERO V573
0x8cc: V575 = ISZERO V574
0x8cd: V576 = 0x8d5
0x8d0: JUMPI 0x8d5 V575
---
Entry stack: [V11, 0x4c8]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x4c8, 0x0]

================================

Block 0x8d1
[0x8d1:0x8d4]
---
Predecessors: [0x877]
Successors: []
---
0x8d1 PUSH1 0x0
0x8d3 DUP1
0x8d4 REVERT
---
0x8d1: V577 = 0x0
0x8d4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4c8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4c8, 0x0]

================================

Block 0x8d5
[0x8d5:0x8f6]
---
Predecessors: [0x877]
Successors: [0x4c8]
---
0x8d5 JUMPDEST
0x8d6 PUSH1 0x1
0x8d8 PUSH1 0x2
0x8da PUSH1 0x14
0x8dc PUSH2 0x100
0x8df EXP
0x8e0 DUP2
0x8e1 SLOAD
0x8e2 DUP2
0x8e3 PUSH1 0xff
0x8e5 MUL
0x8e6 NOT
0x8e7 AND
0x8e8 SWAP1
0x8e9 DUP4
0x8ea ISZERO
0x8eb ISZERO
0x8ec MUL
0x8ed OR
0x8ee SWAP1
0x8ef SSTORE
0x8f0 POP
0x8f1 PUSH1 0x1
0x8f3 SWAP1
0x8f4 POP
0x8f5 SWAP1
0x8f6 JUMP
---
0x8d5: JUMPDEST 
0x8d6: V578 = 0x1
0x8d8: V579 = 0x2
0x8da: V580 = 0x14
0x8dc: V581 = 0x100
0x8df: V582 = EXP 0x100 0x14
0x8e1: V583 = S[0x2]
0x8e3: V584 = 0xff
0x8e5: V585 = MUL 0xff 0x10000000000000000000000000000000000000000
0x8e6: V586 = NOT 0xff0000000000000000000000000000000000000000
0x8e7: V587 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V583
0x8ea: V588 = ISZERO 0x1
0x8eb: V589 = ISZERO 0x0
0x8ec: V590 = MUL 0x1 0x10000000000000000000000000000000000000000
0x8ed: V591 = OR 0x10000000000000000000000000000000000000000 V587
0x8ef: S[0x2] = V591
0x8f1: V592 = 0x1
0x8f6: JUMP 0x4c8
---
Entry stack: [V11, 0x4c8, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x8f7
[0x8f7:0x91c]
---
Predecessors: [0x4ed]
Successors: [0x4f5]
---
0x8f7 JUMPDEST
0x8f8 PUSH1 0x2
0x8fa PUSH1 0x0
0x8fc SWAP1
0x8fd SLOAD
0x8fe SWAP1
0x8ff PUSH2 0x100
0x902 EXP
0x903 SWAP1
0x904 DIV
0x905 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91a AND
0x91b DUP2
0x91c JUMP
---
0x8f7: JUMPDEST 
0x8f8: V593 = 0x2
0x8fa: V594 = 0x0
0x8fd: V595 = S[0x2]
0x8ff: V596 = 0x100
0x902: V597 = EXP 0x100 0x0
0x904: V598 = DIV V595 0x1
0x905: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0x91a: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x91c: JUMP 0x4f5
---
Entry stack: [V11, 0x4f5]
Stack pops: 1
Stack additions: [S0, V600]
Exit stack: [V11, 0x4f5, V600]

================================

Block 0x91d
[0x91d:0x976]
---
Predecessors: [0x582]
Successors: [0x977, 0x97b]
---
0x91d JUMPDEST
0x91e PUSH1 0x0
0x920 PUSH1 0x1
0x922 PUSH1 0x0
0x924 SWAP1
0x925 SLOAD
0x926 SWAP1
0x927 PUSH2 0x100
0x92a EXP
0x92b SWAP1
0x92c DIV
0x92d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x942 AND
0x943 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x958 AND
0x959 CALLER
0x95a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96f AND
0x970 EQ
0x971 ISZERO
0x972 ISZERO
0x973 PUSH2 0x97b
0x976 JUMPI
---
0x91d: JUMPDEST 
0x91e: V601 = 0x0
0x920: V602 = 0x1
0x922: V603 = 0x0
0x925: V604 = S[0x1]
0x927: V605 = 0x100
0x92a: V606 = EXP 0x100 0x0
0x92c: V607 = DIV V604 0x1
0x92d: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0x942: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x943: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0x958: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0x959: V612 = CALLER
0x95a: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x970: V615 = EQ V614 V611
0x971: V616 = ISZERO V615
0x972: V617 = ISZERO V616
0x973: V618 = 0x97b
0x976: JUMPI 0x97b V617
---
Entry stack: [V11, 0x598, V352]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x598, V352, 0x0]

================================

Block 0x977
[0x977:0x97a]
---
Predecessors: [0x91d]
Successors: []
---
0x977 PUSH1 0x0
0x979 DUP1
0x97a REVERT
---
0x977: V619 = 0x0
0x97a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x598, V352, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x598, V352, 0x0]

================================

Block 0x97b
[0x97b:0x992]
---
Predecessors: [0x91d]
Successors: [0x993, 0x997]
---
0x97b JUMPDEST
0x97c PUSH1 0x2
0x97e PUSH1 0x14
0x980 SWAP1
0x981 SLOAD
0x982 SWAP1
0x983 PUSH2 0x100
0x986 EXP
0x987 SWAP1
0x988 DIV
0x989 PUSH1 0xff
0x98b AND
0x98c ISZERO
0x98d ISZERO
0x98e ISZERO
0x98f PUSH2 0x997
0x992 JUMPI
---
0x97b: JUMPDEST 
0x97c: V620 = 0x2
0x97e: V621 = 0x14
0x981: V622 = S[0x2]
0x983: V623 = 0x100
0x986: V624 = EXP 0x100 0x14
0x988: V625 = DIV V622 0x10000000000000000000000000000000000000000
0x989: V626 = 0xff
0x98b: V627 = AND 0xff V625
0x98c: V628 = ISZERO V627
0x98d: V629 = ISZERO V628
0x98e: V630 = ISZERO V629
0x98f: V631 = 0x997
0x992: JUMPI 0x997 V630
---
Entry stack: [V11, 0x598, V352, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x598, V352, 0x0]

================================

Block 0x993
[0x993:0x996]
---
Predecessors: [0x97b]
Successors: []
---
0x993 PUSH1 0x0
0x995 DUP1
0x996 REVERT
---
0x993: V632 = 0x0
0x996: REVERT 0x0 0x0
---
Entry stack: [V11, 0x598, V352, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x598, V352, 0x0]

================================

Block 0x997
[0x997:0x9a6]
---
Predecessors: [0x97b]
Successors: [0x598]
---
0x997 JUMPDEST
0x998 DUP2
0x999 PUSH1 0x0
0x99b DUP2
0x99c SWAP1
0x99d SSTORE
0x99e POP
0x99f PUSH1 0x1
0x9a1 SWAP1
0x9a2 POP
0x9a3 SWAP2
0x9a4 SWAP1
0x9a5 POP
0x9a6 JUMP
---
0x997: JUMPDEST 
0x999: V633 = 0x0
0x99d: S[0x0] = V352
0x99f: V634 = 0x1
0x9a6: JUMP 0x598
---
Entry stack: [V11, 0x598, V352, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x9a7
[0x9a7:0xa00]
---
Predecessors: [0x5fd]
Successors: [0xa01, 0xa05]
---
0x9a7 JUMPDEST
0x9a8 PUSH1 0x0
0x9aa PUSH1 0x1
0x9ac PUSH1 0x0
0x9ae SWAP1
0x9af SLOAD
0x9b0 SWAP1
0x9b1 PUSH2 0x100
0x9b4 EXP
0x9b5 SWAP1
0x9b6 DIV
0x9b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9cc AND
0x9cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e2 AND
0x9e3 CALLER
0x9e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f9 AND
0x9fa EQ
0x9fb ISZERO
0x9fc ISZERO
0x9fd PUSH2 0xa05
0xa00 JUMPI
---
0x9a7: JUMPDEST 
0x9a8: V635 = 0x0
0x9aa: V636 = 0x1
0x9ac: V637 = 0x0
0x9af: V638 = S[0x1]
0x9b1: V639 = 0x100
0x9b4: V640 = EXP 0x100 0x0
0x9b6: V641 = DIV V638 0x1
0x9b7: V642 = 0xffffffffffffffffffffffffffffffffffffffff
0x9cc: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x9cd: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e2: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0x9e3: V646 = CALLER
0x9e4: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f9: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x9fa: V649 = EQ V648 V645
0x9fb: V650 = ISZERO V649
0x9fc: V651 = ISZERO V650
0x9fd: V652 = 0xa05
0xa00: JUMPI 0xa05 V651
---
Entry stack: [V11, 0x605]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x605, 0x0]

================================

Block 0xa01
[0xa01:0xa04]
---
Predecessors: [0x9a7]
Successors: []
---
0xa01 PUSH1 0x0
0xa03 DUP1
0xa04 REVERT
---
0xa01: V653 = 0x0
0xa04: REVERT 0x0 0x0
---
Entry stack: [V11, 0x605, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x605, 0x0]

================================

Block 0xa05
[0xa05:0xa26]
---
Predecessors: [0x9a7]
Successors: [0x605]
---
0xa05 JUMPDEST
0xa06 PUSH1 0x0
0xa08 PUSH1 0x2
0xa0a PUSH1 0x14
0xa0c PUSH2 0x100
0xa0f EXP
0xa10 DUP2
0xa11 SLOAD
0xa12 DUP2
0xa13 PUSH1 0xff
0xa15 MUL
0xa16 NOT
0xa17 AND
0xa18 SWAP1
0xa19 DUP4
0xa1a ISZERO
0xa1b ISZERO
0xa1c MUL
0xa1d OR
0xa1e SWAP1
0xa1f SSTORE
0xa20 POP
0xa21 PUSH1 0x1
0xa23 SWAP1
0xa24 POP
0xa25 SWAP1
0xa26 JUMP
---
0xa05: JUMPDEST 
0xa06: V654 = 0x0
0xa08: V655 = 0x2
0xa0a: V656 = 0x14
0xa0c: V657 = 0x100
0xa0f: V658 = EXP 0x100 0x14
0xa11: V659 = S[0x2]
0xa13: V660 = 0xff
0xa15: V661 = MUL 0xff 0x10000000000000000000000000000000000000000
0xa16: V662 = NOT 0xff0000000000000000000000000000000000000000
0xa17: V663 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V659
0xa1a: V664 = ISZERO 0x0
0xa1b: V665 = ISZERO 0x1
0xa1c: V666 = MUL 0x0 0x10000000000000000000000000000000000000000
0xa1d: V667 = OR 0x0 V663
0xa1f: S[0x2] = V667
0xa21: V668 = 0x1
0xa26: JUMP 0x605
---
Entry stack: [V11, 0x605, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xa27
[0xa27:0xa80]
---
Predecessors: [0x62a]
Successors: [0xa81, 0xa85]
---
0xa27 JUMPDEST
0xa28 PUSH1 0x0
0xa2a PUSH1 0x1
0xa2c PUSH1 0x0
0xa2e SWAP1
0xa2f SLOAD
0xa30 SWAP1
0xa31 PUSH2 0x100
0xa34 EXP
0xa35 SWAP1
0xa36 DIV
0xa37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4c AND
0xa4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa62 AND
0xa63 CALLER
0xa64 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa79 AND
0xa7a EQ
0xa7b ISZERO
0xa7c ISZERO
0xa7d PUSH2 0xa85
0xa80 JUMPI
---
0xa27: JUMPDEST 
0xa28: V669 = 0x0
0xa2a: V670 = 0x1
0xa2c: V671 = 0x0
0xa2f: V672 = S[0x1]
0xa31: V673 = 0x100
0xa34: V674 = EXP 0x100 0x0
0xa36: V675 = DIV V672 0x1
0xa37: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4c: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0xa4d: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xa62: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xa63: V680 = CALLER
0xa64: V681 = 0xffffffffffffffffffffffffffffffffffffffff
0xa79: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V680
0xa7a: V683 = EQ V682 V679
0xa7b: V684 = ISZERO V683
0xa7c: V685 = ISZERO V684
0xa7d: V686 = 0xa85
0xa80: JUMPI 0xa85 V685
---
Entry stack: [V11, 0x632]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x632, 0x0]

================================

Block 0xa81
[0xa81:0xa84]
---
Predecessors: [0xa27]
Successors: []
---
0xa81 PUSH1 0x0
0xa83 DUP1
0xa84 REVERT
---
0xa81: V687 = 0x0
0xa84: REVERT 0x0 0x0
---
Entry stack: [V11, 0x632, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x632, 0x0]

================================

Block 0xa85
[0xa85:0xa9c]
---
Predecessors: [0xa27]
Successors: [0xa9d, 0xaa1]
---
0xa85 JUMPDEST
0xa86 PUSH1 0x2
0xa88 PUSH1 0x14
0xa8a SWAP1
0xa8b SLOAD
0xa8c SWAP1
0xa8d PUSH2 0x100
0xa90 EXP
0xa91 SWAP1
0xa92 DIV
0xa93 PUSH1 0xff
0xa95 AND
0xa96 ISZERO
0xa97 ISZERO
0xa98 ISZERO
0xa99 PUSH2 0xaa1
0xa9c JUMPI
---
0xa85: JUMPDEST 
0xa86: V688 = 0x2
0xa88: V689 = 0x14
0xa8b: V690 = S[0x2]
0xa8d: V691 = 0x100
0xa90: V692 = EXP 0x100 0x14
0xa92: V693 = DIV V690 0x10000000000000000000000000000000000000000
0xa93: V694 = 0xff
0xa95: V695 = AND 0xff V693
0xa96: V696 = ISZERO V695
0xa97: V697 = ISZERO V696
0xa98: V698 = ISZERO V697
0xa99: V699 = 0xaa1
0xa9c: JUMPI 0xaa1 V698
---
Entry stack: [V11, 0x632, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x632, 0x0]

================================

Block 0xa9d
[0xa9d:0xaa0]
---
Predecessors: [0xa85]
Successors: []
---
0xa9d PUSH1 0x0
0xa9f DUP1
0xaa0 REVERT
---
0xa9d: V700 = 0x0
0xaa0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x632, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x632, 0x0]

================================

Block 0xaa1
[0xaa1:0xbc2]
---
Predecessors: [0xa85]
Successors: [0xbc3, 0xbc7]
---
0xaa1 JUMPDEST
0xaa2 PUSH1 0x2
0xaa4 PUSH1 0x0
0xaa6 SWAP1
0xaa7 SLOAD
0xaa8 SWAP1
0xaa9 PUSH2 0x100
0xaac EXP
0xaad SWAP1
0xaae DIV
0xaaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac4 AND
0xac5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xada AND
0xadb PUSH4 0xa9059cbb
0xae0 PUSH1 0x1
0xae2 PUSH1 0x0
0xae4 SWAP1
0xae5 SLOAD
0xae6 SWAP1
0xae7 PUSH2 0x100
0xaea EXP
0xaeb SWAP1
0xaec DIV
0xaed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb02 AND
0xb03 PUSH1 0x2
0xb05 PUSH1 0x0
0xb07 SWAP1
0xb08 SLOAD
0xb09 SWAP1
0xb0a PUSH2 0x100
0xb0d EXP
0xb0e SWAP1
0xb0f DIV
0xb10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb25 AND
0xb26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3b AND
0xb3c PUSH4 0x70a08231
0xb41 ADDRESS
0xb42 PUSH1 0x0
0xb44 PUSH1 0x40
0xb46 MLOAD
0xb47 PUSH1 0x20
0xb49 ADD
0xb4a MSTORE
0xb4b PUSH1 0x40
0xb4d MLOAD
0xb4e DUP3
0xb4f PUSH4 0xffffffff
0xb54 AND
0xb55 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb73 MUL
0xb74 DUP2
0xb75 MSTORE
0xb76 PUSH1 0x4
0xb78 ADD
0xb79 DUP1
0xb7a DUP3
0xb7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb90 AND
0xb91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba6 AND
0xba7 DUP2
0xba8 MSTORE
0xba9 PUSH1 0x20
0xbab ADD
0xbac SWAP2
0xbad POP
0xbae POP
0xbaf PUSH1 0x20
0xbb1 PUSH1 0x40
0xbb3 MLOAD
0xbb4 DUP1
0xbb5 DUP4
0xbb6 SUB
0xbb7 DUP2
0xbb8 PUSH1 0x0
0xbba DUP8
0xbbb DUP1
0xbbc EXTCODESIZE
0xbbd ISZERO
0xbbe ISZERO
0xbbf PUSH2 0xbc7
0xbc2 JUMPI
---
0xaa1: JUMPDEST 
0xaa2: V701 = 0x2
0xaa4: V702 = 0x0
0xaa7: V703 = S[0x2]
0xaa9: V704 = 0x100
0xaac: V705 = EXP 0x100 0x0
0xaae: V706 = DIV V703 0x1
0xaaf: V707 = 0xffffffffffffffffffffffffffffffffffffffff
0xac4: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0xac5: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0xada: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0xadb: V711 = 0xa9059cbb
0xae0: V712 = 0x1
0xae2: V713 = 0x0
0xae5: V714 = S[0x1]
0xae7: V715 = 0x100
0xaea: V716 = EXP 0x100 0x0
0xaec: V717 = DIV V714 0x1
0xaed: V718 = 0xffffffffffffffffffffffffffffffffffffffff
0xb02: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0xb03: V720 = 0x2
0xb05: V721 = 0x0
0xb08: V722 = S[0x2]
0xb0a: V723 = 0x100
0xb0d: V724 = EXP 0x100 0x0
0xb0f: V725 = DIV V722 0x1
0xb10: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xb25: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0xb26: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3b: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0xb3c: V730 = 0x70a08231
0xb41: V731 = ADDRESS
0xb42: V732 = 0x0
0xb44: V733 = 0x40
0xb46: V734 = M[0x40]
0xb47: V735 = 0x20
0xb49: V736 = ADD 0x20 V734
0xb4a: M[V736] = 0x0
0xb4b: V737 = 0x40
0xb4d: V738 = M[0x40]
0xb4f: V739 = 0xffffffff
0xb54: V740 = AND 0xffffffff 0x70a08231
0xb55: V741 = 0x100000000000000000000000000000000000000000000000000000000
0xb73: V742 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xb75: M[V738] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xb76: V743 = 0x4
0xb78: V744 = ADD 0x4 V738
0xb7b: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xb90: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0xb91: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xba6: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xba8: M[V744] = V748
0xba9: V749 = 0x20
0xbab: V750 = ADD 0x20 V744
0xbaf: V751 = 0x20
0xbb1: V752 = 0x40
0xbb3: V753 = M[0x40]
0xbb6: V754 = SUB V750 V753
0xbb8: V755 = 0x0
0xbbc: V756 = EXTCODESIZE V729
0xbbd: V757 = ISZERO V756
0xbbe: V758 = ISZERO V757
0xbbf: V759 = 0xbc7
0xbc2: JUMPI 0xbc7 V758
---
Entry stack: [V11, 0x632, 0x0]
Stack pops: 0
Stack additions: [V710, 0xa9059cbb, V719, V729, 0x70a08231, V750, 0x20, V753, V754, V753, 0x0, V729]
Exit stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V719, V729, 0x70a08231, V750, 0x20, V753, V754, V753, 0x0, V729]

================================

Block 0xbc3
[0xbc3:0xbc6]
---
Predecessors: [0xaa1]
Successors: []
---
0xbc3 PUSH1 0x0
0xbc5 DUP1
0xbc6 REVERT
---
0xbc3: V760 = 0x0
0xbc6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V719, V729, 0x70a08231, V750, 0x20, V753, V754, V753, 0x0, V729]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V719, V729, 0x70a08231, V750, 0x20, V753, V754, V753, 0x0, V729]

================================

Block 0xbc7
[0xbc7:0xbd3]
---
Predecessors: [0xaa1]
Successors: [0xbd4, 0xbd8]
---
0xbc7 JUMPDEST
0xbc8 PUSH2 0x2c6
0xbcb GAS
0xbcc SUB
0xbcd CALL
0xbce ISZERO
0xbcf ISZERO
0xbd0 PUSH2 0xbd8
0xbd3 JUMPI
---
0xbc7: JUMPDEST 
0xbc8: V761 = 0x2c6
0xbcb: V762 = GAS
0xbcc: V763 = SUB V762 0x2c6
0xbcd: V764 = CALL V763 V729 0x0 V753 V754 V753 0x20
0xbce: V765 = ISZERO V764
0xbcf: V766 = ISZERO V765
0xbd0: V767 = 0xbd8
0xbd3: JUMPI 0xbd8 V766
---
Entry stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V719, V729, 0x70a08231, V750, 0x20, V753, V754, V753, 0x0, V729]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V719, V729, 0x70a08231, V750]

================================

Block 0xbd4
[0xbd4:0xbd7]
---
Predecessors: [0xbc7]
Successors: []
---
0xbd4 PUSH1 0x0
0xbd6 DUP1
0xbd7 REVERT
---
0xbd4: V768 = 0x0
0xbd7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V719, V729, 0x70a08231, V750]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V719, V729, 0x70a08231, V750]

================================

Block 0xbd8
[0xbd8:0xc6a]
---
Predecessors: [0xbc7]
Successors: [0xc6b, 0xc6f]
---
0xbd8 JUMPDEST
0xbd9 POP
0xbda POP
0xbdb POP
0xbdc PUSH1 0x40
0xbde MLOAD
0xbdf DUP1
0xbe0 MLOAD
0xbe1 SWAP1
0xbe2 POP
0xbe3 PUSH1 0x0
0xbe5 PUSH1 0x40
0xbe7 MLOAD
0xbe8 PUSH1 0x20
0xbea ADD
0xbeb MSTORE
0xbec PUSH1 0x40
0xbee MLOAD
0xbef DUP4
0xbf0 PUSH4 0xffffffff
0xbf5 AND
0xbf6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc14 MUL
0xc15 DUP2
0xc16 MSTORE
0xc17 PUSH1 0x4
0xc19 ADD
0xc1a DUP1
0xc1b DUP4
0xc1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc31 AND
0xc32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc47 AND
0xc48 DUP2
0xc49 MSTORE
0xc4a PUSH1 0x20
0xc4c ADD
0xc4d DUP3
0xc4e DUP2
0xc4f MSTORE
0xc50 PUSH1 0x20
0xc52 ADD
0xc53 SWAP3
0xc54 POP
0xc55 POP
0xc56 POP
0xc57 PUSH1 0x20
0xc59 PUSH1 0x40
0xc5b MLOAD
0xc5c DUP1
0xc5d DUP4
0xc5e SUB
0xc5f DUP2
0xc60 PUSH1 0x0
0xc62 DUP8
0xc63 DUP1
0xc64 EXTCODESIZE
0xc65 ISZERO
0xc66 ISZERO
0xc67 PUSH2 0xc6f
0xc6a JUMPI
---
0xbd8: JUMPDEST 
0xbdc: V769 = 0x40
0xbde: V770 = M[0x40]
0xbe0: V771 = M[V770]
0xbe3: V772 = 0x0
0xbe5: V773 = 0x40
0xbe7: V774 = M[0x40]
0xbe8: V775 = 0x20
0xbea: V776 = ADD 0x20 V774
0xbeb: M[V776] = 0x0
0xbec: V777 = 0x40
0xbee: V778 = M[0x40]
0xbf0: V779 = 0xffffffff
0xbf5: V780 = AND 0xffffffff 0xa9059cbb
0xbf6: V781 = 0x100000000000000000000000000000000000000000000000000000000
0xc14: V782 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc16: M[V778] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc17: V783 = 0x4
0xc19: V784 = ADD 0x4 V778
0xc1c: V785 = 0xffffffffffffffffffffffffffffffffffffffff
0xc31: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V719
0xc32: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xc47: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0xc49: M[V784] = V788
0xc4a: V789 = 0x20
0xc4c: V790 = ADD 0x20 V784
0xc4f: M[V790] = V771
0xc50: V791 = 0x20
0xc52: V792 = ADD 0x20 V790
0xc57: V793 = 0x20
0xc59: V794 = 0x40
0xc5b: V795 = M[0x40]
0xc5e: V796 = SUB V792 V795
0xc60: V797 = 0x0
0xc64: V798 = EXTCODESIZE V710
0xc65: V799 = ISZERO V798
0xc66: V800 = ISZERO V799
0xc67: V801 = 0xc6f
0xc6a: JUMPI 0xc6f V800
---
Entry stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V719, V729, 0x70a08231, V750]
Stack pops: 6
Stack additions: [S5, S4, V792, 0x20, V795, V796, V795, 0x0, S5]
Exit stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V792, 0x20, V795, V796, V795, 0x0, V710]

================================

Block 0xc6b
[0xc6b:0xc6e]
---
Predecessors: [0xbd8]
Successors: []
---
0xc6b PUSH1 0x0
0xc6d DUP1
0xc6e REVERT
---
0xc6b: V802 = 0x0
0xc6e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V792, 0x20, V795, V796, V795, 0x0, V710]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V792, 0x20, V795, V796, V795, 0x0, V710]

================================

Block 0xc6f
[0xc6f:0xc7b]
---
Predecessors: [0xbd8]
Successors: [0xc7c, 0xc80]
---
0xc6f JUMPDEST
0xc70 PUSH2 0x2c6
0xc73 GAS
0xc74 SUB
0xc75 CALL
0xc76 ISZERO
0xc77 ISZERO
0xc78 PUSH2 0xc80
0xc7b JUMPI
---
0xc6f: JUMPDEST 
0xc70: V803 = 0x2c6
0xc73: V804 = GAS
0xc74: V805 = SUB V804 0x2c6
0xc75: V806 = CALL V805 V710 0x0 V795 V796 V795 0x20
0xc76: V807 = ISZERO V806
0xc77: V808 = ISZERO V807
0xc78: V809 = 0xc80
0xc7b: JUMPI 0xc80 V808
---
Entry stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V792, 0x20, V795, V796, V795, 0x0, V710]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V792]

================================

Block 0xc7c
[0xc7c:0xc7f]
---
Predecessors: [0xc6f]
Successors: []
---
0xc7c PUSH1 0x0
0xc7e DUP1
0xc7f REVERT
---
0xc7c: V810 = 0x0
0xc7f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V792]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V792]

================================

Block 0xc80
[0xc80:0xc8f]
---
Predecessors: [0xc6f]
Successors: [0xc90, 0xce6]
---
0xc80 JUMPDEST
0xc81 POP
0xc82 POP
0xc83 POP
0xc84 PUSH1 0x40
0xc86 MLOAD
0xc87 DUP1
0xc88 MLOAD
0xc89 SWAP1
0xc8a POP
0xc8b ISZERO
0xc8c PUSH2 0xce6
0xc8f JUMPI
---
0xc80: JUMPDEST 
0xc84: V811 = 0x40
0xc86: V812 = M[0x40]
0xc88: V813 = M[V812]
0xc8b: V814 = ISZERO V813
0xc8c: V815 = 0xce6
0xc8f: JUMPI 0xce6 V814
---
Entry stack: [V11, 0x632, 0x0, V710, 0xa9059cbb, V792]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x632, 0x0]

================================

Block 0xc90
[0xc90:0xce5]
---
Predecessors: [0xc80]
Successors: [0xceb]
---
0xc90 PUSH32 0x545ae0f6cb6bf7a282a3d5757836f4030f56a65d4884e02f2e70439f9378aaa4
0xcb1 ADDRESS
0xcb2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc7 AND
0xcc8 BALANCE
0xcc9 PUSH1 0x40
0xccb MLOAD
0xccc DUP1
0xccd DUP3
0xcce DUP2
0xccf MSTORE
0xcd0 PUSH1 0x20
0xcd2 ADD
0xcd3 SWAP2
0xcd4 POP
0xcd5 POP
0xcd6 PUSH1 0x40
0xcd8 MLOAD
0xcd9 DUP1
0xcda SWAP2
0xcdb SUB
0xcdc SWAP1
0xcdd LOG1
0xcde PUSH1 0x1
0xce0 SWAP1
0xce1 POP
0xce2 PUSH2 0xceb
0xce5 JUMP
---
0xc90: V816 = 0x545ae0f6cb6bf7a282a3d5757836f4030f56a65d4884e02f2e70439f9378aaa4
0xcb1: V817 = ADDRESS
0xcb2: V818 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc7: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0xcc8: V820 = BALANCE V819
0xcc9: V821 = 0x40
0xccb: V822 = M[0x40]
0xccf: M[V822] = V820
0xcd0: V823 = 0x20
0xcd2: V824 = ADD 0x20 V822
0xcd6: V825 = 0x40
0xcd8: V826 = M[0x40]
0xcdb: V827 = SUB V824 V826
0xcdd: LOG V826 V827 0x545ae0f6cb6bf7a282a3d5757836f4030f56a65d4884e02f2e70439f9378aaa4
0xcde: V828 = 0x1
0xce2: V829 = 0xceb
0xce5: JUMP 0xceb
---
Entry stack: [V11, 0x632, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x632, 0x1]

================================

Block 0xce6
[0xce6:0xcea]
---
Predecessors: [0xc80]
Successors: [0xceb]
---
0xce6 JUMPDEST
0xce7 PUSH1 0x0
0xce9 SWAP1
0xcea POP
---
0xce6: JUMPDEST 
0xce7: V830 = 0x0
---
Entry stack: [V11, 0x632, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x632, 0x0]

================================

Block 0xceb
[0xceb:0xced]
---
Predecessors: [0xc90, 0xce6]
Successors: [0x632]
---
0xceb JUMPDEST
0xcec SWAP1
0xced JUMP
---
0xceb: JUMPDEST 
0xced: JUMP 0x632
---
Entry stack: [V11, 0x632, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xcee
[0xcee:0xd45]
---
Predecessors: [0x657]
Successors: [0xd46, 0xd4a]
---
0xcee JUMPDEST
0xcef PUSH1 0x1
0xcf1 PUSH1 0x0
0xcf3 SWAP1
0xcf4 SLOAD
0xcf5 SWAP1
0xcf6 PUSH2 0x100
0xcf9 EXP
0xcfa SWAP1
0xcfb DIV
0xcfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd11 AND
0xd12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd27 AND
0xd28 CALLER
0xd29 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3e AND
0xd3f EQ
0xd40 ISZERO
0xd41 ISZERO
0xd42 PUSH2 0xd4a
0xd45 JUMPI
---
0xcee: JUMPDEST 
0xcef: V831 = 0x1
0xcf1: V832 = 0x0
0xcf4: V833 = S[0x1]
0xcf6: V834 = 0x100
0xcf9: V835 = EXP 0x100 0x0
0xcfb: V836 = DIV V833 0x1
0xcfc: V837 = 0xffffffffffffffffffffffffffffffffffffffff
0xd11: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff V836
0xd12: V839 = 0xffffffffffffffffffffffffffffffffffffffff
0xd27: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0xd28: V841 = CALLER
0xd29: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3e: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff V841
0xd3f: V844 = EQ V843 V840
0xd40: V845 = ISZERO V844
0xd41: V846 = ISZERO V845
0xd42: V847 = 0xd4a
0xd45: JUMPI 0xd4a V846
---
Entry stack: [V11, 0x65f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65f]

================================

Block 0xd46
[0xd46:0xd49]
---
Predecessors: [0xcee]
Successors: []
---
0xd46 PUSH1 0x0
0xd48 DUP1
0xd49 REVERT
---
0xd46: V848 = 0x0
0xd49: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65f]

================================

Block 0xd4a
[0xd4a:0xd61]
---
Predecessors: [0xcee]
Successors: [0xd62, 0xd66]
---
0xd4a JUMPDEST
0xd4b PUSH1 0x2
0xd4d PUSH1 0x14
0xd4f SWAP1
0xd50 SLOAD
0xd51 SWAP1
0xd52 PUSH2 0x100
0xd55 EXP
0xd56 SWAP1
0xd57 DIV
0xd58 PUSH1 0xff
0xd5a AND
0xd5b ISZERO
0xd5c ISZERO
0xd5d ISZERO
0xd5e PUSH2 0xd66
0xd61 JUMPI
---
0xd4a: JUMPDEST 
0xd4b: V849 = 0x2
0xd4d: V850 = 0x14
0xd50: V851 = S[0x2]
0xd52: V852 = 0x100
0xd55: V853 = EXP 0x100 0x14
0xd57: V854 = DIV V851 0x10000000000000000000000000000000000000000
0xd58: V855 = 0xff
0xd5a: V856 = AND 0xff V854
0xd5b: V857 = ISZERO V856
0xd5c: V858 = ISZERO V857
0xd5d: V859 = ISZERO V858
0xd5e: V860 = 0xd66
0xd61: JUMPI 0xd66 V859
---
Entry stack: [V11, 0x65f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65f]

================================

Block 0xd62
[0xd62:0xd65]
---
Predecessors: [0xd4a]
Successors: []
---
0xd62 PUSH1 0x0
0xd64 DUP1
0xd65 REVERT
---
0xd62: V861 = 0x0
0xd65: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65f]

================================

Block 0xd66
[0xd66:0xd7e]
---
Predecessors: [0xd4a]
Successors: []
---
0xd66 JUMPDEST
0xd67 CALLER
0xd68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7d AND
0xd7e SELFDESTRUCT
---
0xd66: JUMPDEST 
0xd67: V862 = CALLER
0xd68: V863 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7d: V864 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0xd7e: SELFDESTRUCT V864
---
Entry stack: [V11, 0x65f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65f]

================================

Block 0xd7f
[0xd7f:0xdaa]
---
Predecessors: []
Successors: []
---
0xd7f STOP
0xd80 LOG1
0xd81 PUSH6 0x627a7a723058
0xd88 SHA3
0xd89 MISSING 0xbe
0xd8a MISSING 0xe6
0xd8b SHR
0xd8c GASLIMIT
0xd8d DUP15
0xd8e NUMBER
0xd8f PUSH15 0x778d386780b52a31c4d2ab7c0460fd
0xd9f MISSING 0xc2
0xda0 MISSING 0xc0
0xda1 MISSING 0xcc
0xda2 LT
0xda3 SWAP6
0xda4 MISSING 0xd2
0xda5 MISSING 0xe9
0xda6 SHL
0xda7 GASLIMIT
0xda8 LT
0xda9 STOP
0xdaa MISSING 0x29
---
0xd7f: STOP 
0xd80: LOG S0 S1 S2
0xd81: V865 = 0x627a7a723058
0xd88: V866 = SHA3 0x627a7a723058 S3
0xd89: MISSING 0xbe
0xd8a: MISSING 0xe6
0xd8b: V867 = SHR S0 S1
0xd8c: V868 = GASLIMIT
0xd8e: V869 = NUMBER
0xd8f: V870 = 0x778d386780b52a31c4d2ab7c0460fd
0xd9f: MISSING 0xc2
0xda0: MISSING 0xc0
0xda1: MISSING 0xcc
0xda2: V871 = LT S0 S1
0xda4: MISSING 0xd2
0xda5: MISSING 0xe9
0xda6: V872 = SHL S0 S1
0xda7: V873 = GASLIMIT
0xda8: V874 = LT V873 V872
0xda9: STOP 
0xdaa: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V866, 0x778d386780b52a31c4d2ab7c0460fd, V869, S14, V868, V867, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S7, S2, S3, S4, S5, S6, V871, V874]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x3b4
Exit block: 0x3c7
Body: 0x3b4, 0x3bb, 0x3bf, 0x3c7, 0x6e6

Function 1:
Public function signature: 0xdd27120
Entry block: 0x409
Exit block: 0x41c
Body: 0x409, 0x410, 0x414, 0x41c, 0x70c

Function 2:
Public function signature: 0x1927a754
Entry block: 0x436
Exit block: 0x449
Body: 0x436, 0x43d, 0x441, 0x449, 0x71f, 0x779, 0x77d, 0x795, 0x799, 0x80d, 0x863, 0x868

Function 3:
Public function signature: 0x1b3ed722
Entry block: 0x463
Exit block: 0x476
Body: 0x463, 0x46a, 0x46e, 0x476, 0x86b

Function 4:
Public function signature: 0x3c8da588
Entry block: 0x48c
Exit block: 0x49f
Body: 0x48c, 0x493, 0x497, 0x49f, 0x871

Function 5:
Public function signature: 0x75e01780
Entry block: 0x4b5
Exit block: 0x4c8
Body: 0x4b5, 0x4bc, 0x4c0, 0x4c8, 0x877, 0x8d1, 0x8d5

Function 6:
Public function signature: 0xb42072e4
Entry block: 0x4e2
Exit block: 0x4f5
Body: 0x4e2, 0x4e9, 0x4ed, 0x4f5, 0x8f7

Function 7:
Public function signature: 0xb5931f7c
Entry block: 0x537
Exit block: 0x3b0
Body: 0xfd, 0x1c0, 0x1c4, 0x1d1, 0x1d5, 0x1e8, 0x2b0, 0x2b4, 0x2c1, 0x2c5, 0x340, 0x3b0, 0x537, 0x53e, 0x542, 0x561, 0x69f, 0x6ad, 0x6b1, 0x6bb, 0x6bc, 0x6c9, 0x6ca, 0x6d8, 0x6dc

Function 8:
Public function signature: 0xb597e784
Entry block: 0x577
Exit block: 0x598
Body: 0x577, 0x57e, 0x582, 0x598, 0x91d, 0x977, 0x97b, 0x993, 0x997

Function 9:
Public function signature: 0xd05c78da
Entry block: 0x5b2
Exit block: 0x5b9
Body: 0x5b2, 0x5b9, 0x5bd, 0x5dc

Function 10:
Public function signature: 0xdb40e896
Entry block: 0x5f2
Exit block: 0x605
Body: 0x5f2, 0x5f9, 0x5fd, 0x605, 0x9a7, 0xa01, 0xa05

Function 11:
Public function signature: 0xef1706ce
Entry block: 0x61f
Exit block: 0x632
Body: 0x61f, 0x626, 0x62a, 0x632, 0xa27, 0xa81, 0xa85, 0xa9d, 0xaa1, 0xbc3, 0xbc7, 0xbd4, 0xbd8, 0xc6b, 0xc6f, 0xc7c, 0xc80, 0xc90, 0xce6, 0xceb

Function 12:
Public function signature: 0xfe389e09
Entry block: 0x64c
Exit block: 0xd66
Body: 0x64c, 0x653, 0x657, 0xcee, 0xd46, 0xd4a, 0xd62, 0xd66

Function 13:
Public fallback function
Entry block: 0xc5
Exit block: 0x3b0
Body: 0xc5, 0xdf, 0xe3, 0xf5, 0xfd, 0x1c0, 0x1c4, 0x1d1, 0x1d5, 0x1e8, 0x2b0, 0x2b4, 0x2c1, 0x2c5, 0x340, 0x3b0, 0x561, 0x69f, 0x6ad, 0x6b1, 0x6bb, 0x6bc, 0x6c9, 0x6ca, 0x6d8, 0x6dc

Function 14:
Private function
Entry block: 0x661
Exit block: 0x698
Body: 0x661, 0x66e, 0x676, 0x687, 0x694, 0x698

