Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3b
0xa: JUMPI 0x3b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x101]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x41c0e1b5
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x101
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x41c0e1b5
0x20: V14 = EQ V12 0x41c0e1b5
0x21: V15 = 0x101
0x24: JUMPI 0x101 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x113]
---
0x25 DUP1
0x26 PUSH4 0x8da5cb5b
0x2b EQ
0x2c PUSH2 0x113
0x2f JUMPI
---
0x26: V16 = 0x8da5cb5b
0x2b: V17 = EQ 0x8da5cb5b V12
0x2c: V18 = 0x113
0x2f: JUMPI 0x113 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x13f]
---
0x30 DUP1
0x31 PUSH4 0xcaa2d9f8
0x36 EQ
0x37 PUSH2 0x13f
0x3a JUMPI
---
0x31: V19 = 0xcaa2d9f8
0x36: V20 = EQ 0xcaa2d9f8 V12
0x37: V21 = 0x13f
0x3a: JUMPI 0x13f V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x3e]
---
Predecessors: [0x0, 0x30]
Successors: [0x3f]
---
0x3b JUMPDEST
0x3c PUSH2 0xff
---
0x3b: JUMPDEST 
0x3c: V22 = 0xff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xff]
Exit stack: [V12, 0xff]

================================

Block 0x3f
[0x3f:0x48]
---
Predecessors: [0x3b]
Successors: [0x49, 0xfb]
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 CALLVALUE
0x43 GT
0x44 ISZERO
0x45 PUSH2 0xfb
0x48 JUMPI
---
0x3f: JUMPDEST 
0x40: V23 = 0x0
0x42: V24 = CALLVALUE
0x43: V25 = GT V24 0x0
0x44: V26 = ISZERO V25
0x45: V27 = 0xfb
0x48: JUMPI 0xfb V26
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0x49
[0x49:0x51]
---
Predecessors: [0x3f]
Successors: [0x52, 0xc5]
---
0x49 PUSH1 0x1
0x4b SLOAD
0x4c CALLVALUE
0x4d LT
0x4e PUSH2 0xc5
0x51 JUMPI
---
0x49: V28 = 0x1
0x4b: V29 = S[0x1]
0x4c: V30 = CALLVALUE
0x4d: V31 = LT V30 V29
0x4e: V32 = 0xc5
0x51: JUMPI 0xc5 V31
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0x52
[0x52:0xc4]
---
Predecessors: [0x49]
Successors: [0xc5]
---
0x52 PUSH32 0xaf420991a81cbb3b79c2422d58782b3ae7338569109e83cf9df1482d1e51fa5d
0x73 CALLER
0x74 CALLVALUE
0x75 PUSH1 0x0
0x77 CALLDATASIZE
0x78 PUSH1 0x40
0x7a MLOAD
0x7b DUP1
0x7c DUP6
0x7d PUSH1 0x1
0x7f PUSH1 0xa0
0x81 PUSH1 0x2
0x83 EXP
0x84 SUB
0x85 AND
0x86 PUSH1 0x1
0x88 PUSH1 0xa0
0x8a PUSH1 0x2
0x8c EXP
0x8d SUB
0x8e AND
0x8f DUP2
0x90 MSTORE
0x91 PUSH1 0x20
0x93 ADD
0x94 DUP5
0x95 DUP2
0x96 MSTORE
0x97 PUSH1 0x20
0x99 ADD
0x9a DUP1
0x9b PUSH1 0x20
0x9d ADD
0x9e DUP3
0x9f DUP2
0xa0 SUB
0xa1 DUP3
0xa2 MSTORE
0xa3 DUP5
0xa4 DUP5
0xa5 DUP3
0xa6 DUP2
0xa7 DUP2
0xa8 MSTORE
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP3
0xad POP
0xae DUP1
0xaf DUP3
0xb0 DUP5
0xb1 CALLDATACOPY
0xb2 PUSH1 0x40
0xb4 MLOAD
0xb5 SWAP3
0xb6 ADD
0xb7 DUP3
0xb8 SWAP1
0xb9 SUB
0xba SWAP8
0xbb POP
0xbc SWAP1
0xbd SWAP6
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 LOG1
---
0x52: V33 = 0xaf420991a81cbb3b79c2422d58782b3ae7338569109e83cf9df1482d1e51fa5d
0x73: V34 = CALLER
0x74: V35 = CALLVALUE
0x75: V36 = 0x0
0x77: V37 = CALLDATASIZE
0x78: V38 = 0x40
0x7a: V39 = M[0x40]
0x7d: V40 = 0x1
0x7f: V41 = 0xa0
0x81: V42 = 0x2
0x83: V43 = EXP 0x2 0xa0
0x84: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x86: V46 = 0x1
0x88: V47 = 0xa0
0x8a: V48 = 0x2
0x8c: V49 = EXP 0x2 0xa0
0x8d: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x90: M[V39] = V51
0x91: V52 = 0x20
0x93: V53 = ADD 0x20 V39
0x96: M[V53] = V35
0x97: V54 = 0x20
0x99: V55 = ADD 0x20 V53
0x9b: V56 = 0x20
0x9d: V57 = ADD 0x20 V55
0xa0: V58 = SUB V57 V39
0xa2: M[V55] = V58
0xa8: M[V57] = V37
0xa9: V59 = 0x20
0xab: V60 = ADD 0x20 V57
0xb1: CALLDATACOPY V60 0x0 V37
0xb2: V61 = 0x40
0xb4: V62 = M[0x40]
0xb6: V63 = ADD V60 V37
0xb9: V64 = SUB V63 V62
0xc4: LOG V62 V64 0xaf420991a81cbb3b79c2422d58782b3ae7338569109e83cf9df1482d1e51fa5d
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0xc5
[0xc5:0xf9]
---
Predecessors: [0x49, 0x52]
Successors: [0xfa, 0xfb]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 SLOAD
0xca PUSH1 0x40
0xcc MLOAD
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 SWAP2
0xd6 DUP3
0xd7 AND
0xd8 SWAP3
0xd9 ADDRESS
0xda SWAP1
0xdb SWAP3
0xdc AND
0xdd BALANCE
0xde DUP1
0xdf ISZERO
0xe0 PUSH2 0x8fc
0xe3 MUL
0xe4 SWAP3
0xe5 SWAP1
0xe6 SWAP2
0xe7 SWAP1
0xe8 DUP2
0xe9 DUP2
0xea DUP2
0xeb DUP6
0xec DUP9
0xed DUP9
0xee CALL
0xef SWAP4
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 ISZERO
0xf5 ISZERO
0xf6 PUSH2 0xfb
0xf9 JUMPI
---
0xc5: JUMPDEST 
0xc6: V65 = 0x0
0xc9: V66 = S[0x0]
0xca: V67 = 0x40
0xcc: V68 = M[0x40]
0xcd: V69 = 0x1
0xcf: V70 = 0xa0
0xd1: V71 = 0x2
0xd3: V72 = EXP 0x2 0xa0
0xd4: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xd9: V75 = ADDRESS
0xdc: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xdd: V77 = BALANCE V76
0xdf: V78 = ISZERO V77
0xe0: V79 = 0x8fc
0xe3: V80 = MUL 0x8fc V78
0xee: V81 = CALL V80 V74 V77 V68 0x0 V68 0x0
0xf4: V82 = ISZERO V81
0xf5: V83 = ISZERO V82
0xf6: V84 = 0xfb
0xf9: JUMPI 0xfb V83
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0xfa
[0xfa:0xfa]
---
Predecessors: [0xc5]
Successors: []
---
0xfa INVALID
---
0xfa: INVALID 
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0xfb
[0xfb:0xfb]
---
Predecessors: [0x3f, 0xc5, 0x161]
Successors: [0xfc]
---
0xfb JUMPDEST
---
0xfb: JUMPDEST 
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0xfc
[0xfc:0xfc]
---
Predecessors: [0xfb]
Successors: [0xfd]
---
0xfc JUMPDEST
---
0xfc: JUMPDEST 
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0xfd
[0xfd:0xfe]
---
Predecessors: [0xfc]
Successors: [0xff]
---
0xfd JUMPDEST
0xfe JUMP
---
0xfd: JUMPDEST 
0xfe: JUMP 0xff
---
Entry stack: [V12, 0xff]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: [0xfd]
Successors: []
---
0xff JUMPDEST
0x100 STOP
---
0xff: JUMPDEST 
0x100: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x101
[0x101:0x107]
---
Predecessors: [0xb]
Successors: [0x108, 0x109]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 ISZERO
0x104 PUSH2 0x109
0x107 JUMPI
---
0x101: JUMPDEST 
0x102: V85 = CALLVALUE
0x103: V86 = ISZERO V85
0x104: V87 = 0x109
0x107: JUMPI 0x109 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x108
[0x108:0x108]
---
Predecessors: [0x101]
Successors: []
---
0x108 INVALID
---
0x108: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0x101]
Successors: [0x161]
---
0x109 JUMPDEST
0x10a PUSH2 0xff
0x10d PUSH2 0x161
0x110 JUMP
---
0x109: JUMPDEST 
0x10a: V88 = 0xff
0x10d: V89 = 0x161
0x110: JUMP 0x161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xff]
Exit stack: [V12, 0xff]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: []
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x25]
Successors: [0x11a, 0x11b]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11b
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V90 = CALLVALUE
0x115: V91 = ISZERO V90
0x116: V92 = 0x11b
0x119: JUMPI 0x11b V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11a
[0x11a:0x11a]
---
Predecessors: [0x113]
Successors: []
---
0x11a INVALID
---
0x11a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x113]
Successors: [0x189]
---
0x11b JUMPDEST
0x11c PUSH2 0x123
0x11f PUSH2 0x189
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V93 = 0x123
0x11f: V94 = 0x189
0x122: JUMP 0x189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x123
[0x123:0x13e]
---
Predecessors: [0x189]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 DUP1
0x127 MLOAD
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 SWAP1
0x131 SWAP3
0x132 AND
0x133 DUP3
0x134 MSTORE
0x135 MLOAD
0x136 SWAP1
0x137 DUP2
0x138 SWAP1
0x139 SUB
0x13a PUSH1 0x20
0x13c ADD
0x13d SWAP1
0x13e RETURN
---
0x123: JUMPDEST 
0x124: V95 = 0x40
0x127: V96 = M[0x40]
0x128: V97 = 0x1
0x12a: V98 = 0xa0
0x12c: V99 = 0x2
0x12e: V100 = EXP 0x2 0xa0
0x12f: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x132: V102 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x134: M[V96] = V102
0x135: V103 = M[0x40]
0x139: V104 = SUB V96 V103
0x13a: V105 = 0x20
0x13c: V106 = ADD 0x20 V104
0x13e: RETURN V103 V106
---
Entry stack: [V12, 0x123, V146]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x123]

================================

Block 0x13f
[0x13f:0x145]
---
Predecessors: [0x30]
Successors: [0x146, 0x147]
---
0x13f JUMPDEST
0x140 CALLVALUE
0x141 ISZERO
0x142 PUSH2 0x147
0x145 JUMPI
---
0x13f: JUMPDEST 
0x140: V107 = CALLVALUE
0x141: V108 = ISZERO V107
0x142: V109 = 0x147
0x145: JUMPI 0x147 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x146]
---
Predecessors: [0x13f]
Successors: []
---
0x146 INVALID
---
0x146: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x13f]
Successors: [0x198]
---
0x147 JUMPDEST
0x148 PUSH2 0x14f
0x14b PUSH2 0x198
0x14e JUMP
---
0x147: JUMPDEST 
0x148: V110 = 0x14f
0x14b: V111 = 0x198
0x14e: JUMP 0x198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14f]
Exit stack: [V12, 0x14f]

================================

Block 0x14f
[0x14f:0x160]
---
Predecessors: [0x198]
Successors: []
---
0x14f JUMPDEST
0x150 PUSH1 0x40
0x152 DUP1
0x153 MLOAD
0x154 SWAP2
0x155 DUP3
0x156 MSTORE
0x157 MLOAD
0x158 SWAP1
0x159 DUP2
0x15a SWAP1
0x15b SUB
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP1
0x160 RETURN
---
0x14f: JUMPDEST 
0x150: V112 = 0x40
0x153: V113 = M[0x40]
0x156: M[V113] = V148
0x157: V114 = M[0x40]
0x15b: V115 = SUB V113 V114
0x15c: V116 = 0x20
0x15e: V117 = ADD 0x20 V115
0x160: RETURN V114 V117
---
Entry stack: [V12, 0x14f, V148]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x14f]

================================

Block 0x161
[0x161:0x178]
---
Predecessors: [0x109]
Successors: [0xfb, 0x179]
---
0x161 JUMPDEST
0x162 PUSH1 0x0
0x164 SLOAD
0x165 CALLER
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e SWAP1
0x16f DUP2
0x170 AND
0x171 SWAP2
0x172 AND
0x173 EQ
0x174 ISZERO
0x175 PUSH2 0xfb
0x178 JUMPI
---
0x161: JUMPDEST 
0x162: V118 = 0x0
0x164: V119 = S[0x0]
0x165: V120 = CALLER
0x166: V121 = 0x1
0x168: V122 = 0xa0
0x16a: V123 = 0x2
0x16c: V124 = EXP 0x2 0xa0
0x16d: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x172: V127 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x173: V128 = EQ V127 V126
0x174: V129 = ISZERO V128
0x175: V130 = 0xfb
0x178: JUMPI 0xfb V129
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0x179
[0x179:0x185]
---
Predecessors: [0x161]
Successors: []
---
0x179 PUSH1 0x0
0x17b SLOAD
0x17c PUSH1 0x1
0x17e PUSH1 0xa0
0x180 PUSH1 0x2
0x182 EXP
0x183 SUB
0x184 AND
0x185 SELFDESTRUCT
---
0x179: V131 = 0x0
0x17b: V132 = S[0x0]
0x17c: V133 = 0x1
0x17e: V134 = 0xa0
0x180: V135 = 0x2
0x182: V136 = EXP 0x2 0xa0
0x183: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x184: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x185: SELFDESTRUCT V138
---
Entry stack: [V12, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0x186
[0x186:0x186]
---
Predecessors: []
Successors: [0x187]
---
0x186 JUMPDEST
---
0x186: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x187
[0x187:0x188]
---
Predecessors: [0x186]
Successors: []
Has unresolved jump.
---
0x187 JUMPDEST
0x188 JUMP
---
0x187: JUMPDEST 
0x188: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x189
[0x189:0x197]
---
Predecessors: [0x11b]
Successors: [0x123]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c SLOAD
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 AND
0x196 DUP2
0x197 JUMP
---
0x189: JUMPDEST 
0x18a: V139 = 0x0
0x18c: V140 = S[0x0]
0x18d: V141 = 0x1
0x18f: V142 = 0xa0
0x191: V143 = 0x2
0x193: V144 = EXP 0x2 0xa0
0x194: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x197: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, V146]
Exit stack: [V12, 0x123, V146]

================================

Block 0x198
[0x198:0x19d]
---
Predecessors: [0x147]
Successors: [0x14f]
---
0x198 JUMPDEST
0x199 PUSH1 0x1
0x19b SLOAD
0x19c DUP2
0x19d JUMP
---
0x198: JUMPDEST 
0x199: V147 = 0x1
0x19b: V148 = S[0x1]
0x19d: JUMP 0x14f
---
Entry stack: [V12, 0x14f]
Stack pops: 1
Stack additions: [S0, V148]
Exit stack: [V12, 0x14f, V148]

================================

Block 0x19e
[0x19e:0x1c9]
---
Predecessors: []
Successors: []
---
0x19e STOP
0x19f LOG1
0x1a0 PUSH6 0x627a7a723058
0x1a7 SHA3
0x1a8 PUSH11 0x5203541ed0d9b961ec1810
0x1b4 STOP
0x1b5 SWAP7
0x1b6 DUP11
0x1b7 MISSING 0xd9
0x1b8 MISSING 0xb8
0x1b9 MISSING 0xd1
0x1ba MISSING 0xa6
0x1bb MISSING 0xfc
0x1bc SELFDESTRUCT
0x1bd MISSING 0x48
0x1be MISSING 0xb5
0x1bf MISSING 0xd3
0x1c0 AND
0x1c1 PUSH3 0x204de
0x1c5 MISSING 0xd1
0x1c6 GASLIMIT
0x1c7 SMOD
0x1c8 STOP
0x1c9 MISSING 0x29
---
0x19e: STOP 
0x19f: LOG S0 S1 S2
0x1a0: V149 = 0x627a7a723058
0x1a7: V150 = SHA3 0x627a7a723058 S3
0x1a8: V151 = 0x5203541ed0d9b961ec1810
0x1b4: STOP 
0x1b7: MISSING 0xd9
0x1b8: MISSING 0xb8
0x1b9: MISSING 0xd1
0x1ba: MISSING 0xa6
0x1bb: MISSING 0xfc
0x1bc: SELFDESTRUCT S0
0x1bd: MISSING 0x48
0x1be: MISSING 0xb5
0x1bf: MISSING 0xd3
0x1c0: V152 = AND S0 S1
0x1c1: V153 = 0x204de
0x1c5: MISSING 0xd1
0x1c6: V154 = GASLIMIT
0x1c7: V155 = SMOD V154 S0
0x1c8: STOP 
0x1c9: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5203541ed0d9b961ec1810, V150, S10, S7, S1, S2, S3, S4, S5, S6, S0, S8, S9, S10, 0x204de, V152, V155]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x101
Exit block: 0xff
Body: 0xfb, 0xfc, 0xfd, 0xff, 0x101, 0x108, 0x109, 0x161, 0x179

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x113
Exit block: 0x123
Body: 0x113, 0x11a, 0x11b, 0x123, 0x189

Function 2:
Public function signature: 0xcaa2d9f8
Entry block: 0x13f
Exit block: 0x14f
Body: 0x13f, 0x146, 0x147, 0x14f, 0x198

Function 3:
Public fallback function
Entry block: 0x3b
Exit block: 0xff
Body: 0x3b, 0x3f, 0x49, 0x52, 0xc5, 0xfa, 0xfb, 0xfc, 0xfd, 0xff

