Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x58
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x58
0x3f: JUMPI 0x58 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6d]
---
0x40 DUP1
0x41 PUSH4 0x41c0e1b5
0x46 EQ
0x47 PUSH2 0x6d
0x4a JUMPI
---
0x41: V15 = 0x41c0e1b5
0x46: V16 = EQ 0x41c0e1b5 V11
0x47: V17 = 0x6d
0x4a: JUMPI 0x6d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x82]
---
0x4b DUP1
0x4c PUSH4 0xe8f81243
0x51 EQ
0x52 PUSH2 0x82
0x55 JUMPI
---
0x4c: V18 = 0xe8f81243
0x51: V19 = EQ 0xe8f81243 V11
0x52: V20 = 0x82
0x55: JUMPI 0x82 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0xf6, 0x22f]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a DUP1
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x58: JUMPDEST 
0x59: V21 = CALLVALUE
0x5b: V22 = ISZERO V21
0x5c: V23 = 0x64
0x5f: JUMPI 0x64 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V21]
Exit stack: [V11, V21]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x58]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V24 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V21]

================================

Block 0x64
[0x64:0x6c]
---
Predecessors: [0x58]
Successors: [0x9c]
---
0x64 JUMPDEST
0x65 POP
0x66 PUSH2 0x56
0x69 PUSH2 0x9c
0x6c JUMP
---
0x64: JUMPDEST 
0x66: V25 = 0x56
0x69: V26 = 0x9c
0x6c: JUMP 0x9c
---
Entry stack: [V11, V21]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x6d
[0x6d:0x74]
---
Predecessors: [0x40]
Successors: [0x75, 0x79]
---
0x6d JUMPDEST
0x6e CALLVALUE
0x6f DUP1
0x70 ISZERO
0x71 PUSH2 0x79
0x74 JUMPI
---
0x6d: JUMPDEST 
0x6e: V27 = CALLVALUE
0x70: V28 = ISZERO V27
0x71: V29 = 0x79
0x74: JUMPI 0x79 V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x6d]
Successors: []
---
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x75: V30 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x79
[0x79:0x81]
---
Predecessors: [0x6d]
Successors: [0xf9]
---
0x79 JUMPDEST
0x7a POP
0x7b PUSH2 0x56
0x7e PUSH2 0xf9
0x81 JUMP
---
0x79: JUMPDEST 
0x7b: V31 = 0x56
0x7e: V32 = 0xf9
0x81: JUMP 0xf9
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x82
[0x82:0x9b]
---
Predecessors: [0x4b]
Successors: [0x122]
---
0x82 JUMPDEST
0x83 PUSH2 0x56
0x86 PUSH1 0x1
0x88 PUSH1 0xa0
0x8a PUSH1 0x2
0x8c EXP
0x8d SUB
0x8e PUSH1 0x4
0x90 CALLDATALOAD
0x91 AND
0x92 PUSH1 0x24
0x94 CALLDATALOAD
0x95 PUSH1 0x44
0x97 CALLDATALOAD
0x98 PUSH2 0x122
0x9b JUMP
---
0x82: JUMPDEST 
0x83: V33 = 0x56
0x86: V34 = 0x1
0x88: V35 = 0xa0
0x8a: V36 = 0x2
0x8c: V37 = EXP 0x2 0xa0
0x8d: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e: V39 = 0x4
0x90: V40 = CALLDATALOAD 0x4
0x91: V41 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x92: V42 = 0x24
0x94: V43 = CALLDATALOAD 0x24
0x95: V44 = 0x44
0x97: V45 = CALLDATALOAD 0x44
0x98: V46 = 0x122
0x9b: JUMP 0x122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56, V41, V43, V45]
Exit stack: [V11, 0x56, V41, V43, V45]

================================

Block 0x9c
[0x9c:0xb2]
---
Predecessors: [0x64]
Successors: [0xb3, 0xb7]
---
0x9c JUMPDEST
0x9d PUSH1 0x0
0x9f SLOAD
0xa0 CALLER
0xa1 PUSH1 0x1
0xa3 PUSH1 0xa0
0xa5 PUSH1 0x2
0xa7 EXP
0xa8 SUB
0xa9 SWAP1
0xaa DUP2
0xab AND
0xac SWAP2
0xad AND
0xae EQ
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V47 = 0x0
0x9f: V48 = S[0x0]
0xa0: V49 = CALLER
0xa1: V50 = 0x1
0xa3: V51 = 0xa0
0xa5: V52 = 0x2
0xa7: V53 = EXP 0x2 0xa0
0xa8: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xad: V56 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0xae: V57 = EQ V56 V55
0xaf: V58 = 0xb7
0xb2: JUMPI 0xb7 V57
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0x9c]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V59 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xb7
[0xb7:0xec]
---
Predecessors: [0x9c]
Successors: [0xed, 0xf6]
---
0xb7 JUMPDEST
0xb8 PUSH1 0x0
0xba DUP1
0xbb SLOAD
0xbc PUSH1 0x40
0xbe MLOAD
0xbf PUSH1 0x1
0xc1 PUSH1 0xa0
0xc3 PUSH1 0x2
0xc5 EXP
0xc6 SUB
0xc7 SWAP2
0xc8 DUP3
0xc9 AND
0xca SWAP3
0xcb ADDRESS
0xcc SWAP1
0xcd SWAP3
0xce AND
0xcf BALANCE
0xd0 DUP1
0xd1 ISZERO
0xd2 PUSH2 0x8fc
0xd5 MUL
0xd6 SWAP3
0xd7 SWAP1
0xd8 SWAP2
0xd9 SWAP1
0xda DUP2
0xdb DUP2
0xdc DUP2
0xdd DUP6
0xde DUP9
0xdf DUP9
0xe0 CALL
0xe1 SWAP4
0xe2 POP
0xe3 POP
0xe4 POP
0xe5 POP
0xe6 ISZERO
0xe7 DUP1
0xe8 ISZERO
0xe9 PUSH2 0xf6
0xec JUMPI
---
0xb7: JUMPDEST 
0xb8: V60 = 0x0
0xbb: V61 = S[0x0]
0xbc: V62 = 0x40
0xbe: V63 = M[0x40]
0xbf: V64 = 0x1
0xc1: V65 = 0xa0
0xc3: V66 = 0x2
0xc5: V67 = EXP 0x2 0xa0
0xc6: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xcb: V70 = ADDRESS
0xce: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xcf: V72 = BALANCE V71
0xd1: V73 = ISZERO V72
0xd2: V74 = 0x8fc
0xd5: V75 = MUL 0x8fc V73
0xe0: V76 = CALL V75 V69 V72 V63 0x0 V63 0x0
0xe6: V77 = ISZERO V76
0xe8: V78 = ISZERO V77
0xe9: V79 = 0xf6
0xec: JUMPI 0xf6 V78
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, 0x56, V77]

================================

Block 0xed
[0xed:0xf5]
---
Predecessors: [0xb7]
Successors: []
---
0xed RETURNDATASIZE
0xee PUSH1 0x0
0xf0 DUP1
0xf1 RETURNDATACOPY
0xf2 RETURNDATASIZE
0xf3 PUSH1 0x0
0xf5 REVERT
---
0xed: V80 = RETURNDATASIZE
0xee: V81 = 0x0
0xf1: RETURNDATACOPY 0x0 0x0 V80
0xf2: V82 = RETURNDATASIZE
0xf3: V83 = 0x0
0xf5: REVERT 0x0 V82
---
Entry stack: [V11, 0x56, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V77]

================================

Block 0xf6
[0xf6:0xf8]
---
Predecessors: [0xb7]
Successors: [0x56]
---
0xf6 JUMPDEST
0xf7 POP
0xf8 JUMP
---
0xf6: JUMPDEST 
0xf8: JUMP 0x56
---
Entry stack: [V11, 0x56, V77]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xf9
[0xf9:0x10f]
---
Predecessors: [0x79]
Successors: [0x110, 0x114]
---
0xf9 JUMPDEST
0xfa PUSH1 0x0
0xfc SLOAD
0xfd CALLER
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 DUP2
0x108 AND
0x109 SWAP2
0x10a AND
0x10b EQ
0x10c PUSH2 0x114
0x10f JUMPI
---
0xf9: JUMPDEST 
0xfa: V84 = 0x0
0xfc: V85 = S[0x0]
0xfd: V86 = CALLER
0xfe: V87 = 0x1
0x100: V88 = 0xa0
0x102: V89 = 0x2
0x104: V90 = EXP 0x2 0xa0
0x105: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x10a: V93 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V94 = EQ V93 V92
0x10c: V95 = 0x114
0x10f: JUMPI 0x114 V94
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0xf9]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V96 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x114
[0x114:0x121]
---
Predecessors: [0xf9]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x0
0x117 SLOAD
0x118 PUSH1 0x1
0x11a PUSH1 0xa0
0x11c PUSH1 0x2
0x11e EXP
0x11f SUB
0x120 AND
0x121 SELFDESTRUCT
---
0x114: JUMPDEST 
0x115: V97 = 0x0
0x117: V98 = S[0x0]
0x118: V99 = 0x1
0x11a: V100 = 0xa0
0x11c: V101 = 0x2
0x11e: V102 = EXP 0x2 0xa0
0x11f: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x120: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x121: SELFDESTRUCT V104
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x122
[0x122:0x17c]
---
Predecessors: [0x82]
Successors: [0x17d]
---
0x122 JUMPDEST
0x123 PUSH1 0x40
0x125 DUP1
0x126 MLOAD
0x127 PUSH13 0x1000000000000000000000000
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d ADDRESS
0x13e DUP2
0x13f DUP2
0x140 AND
0x141 DUP4
0x142 DUP2
0x143 MUL
0x144 DUP6
0x145 MSTORE
0x146 PUSH1 0x0
0x148 NOT
0x149 NUMBER
0x14a ADD
0x14b BLOCKHASH
0x14c PUSH1 0x14
0x14e DUP7
0x14f ADD
0x150 MSTORE
0x151 COINBASE
0x152 SWAP1
0x153 SWAP3
0x154 AND
0x155 SWAP1
0x156 SWAP3
0x157 MUL
0x158 PUSH1 0x34
0x15a DUP5
0x15b ADD
0x15c MSTORE
0x15d DIFFICULTY
0x15e PUSH1 0x48
0x160 DUP5
0x161 ADD
0x162 MSTORE
0x163 SWAP3
0x164 MLOAD
0x165 SWAP2
0x166 DUP3
0x167 SWAP1
0x168 SUB
0x169 PUSH1 0x68
0x16b ADD
0x16c SWAP1
0x16d SWAP2
0x16e SHA3
0x16f SWAP1
0x170 SWAP2
0x171 BALANCE
0x172 SWAP1
0x173 PUSH1 0x64
0x175 SWAP1
0x176 MOD
0x177 PUSH1 0x1
0x179 ADD
0x17a DUP6
0x17b PUSH1 0x0
---
0x122: JUMPDEST 
0x123: V105 = 0x40
0x126: V106 = M[0x40]
0x127: V107 = 0x1000000000000000000000000
0x135: V108 = 0x1
0x137: V109 = 0xa0
0x139: V110 = 0x2
0x13b: V111 = EXP 0x2 0xa0
0x13c: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13d: V113 = ADDRESS
0x140: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x143: V115 = MUL V114 0x1000000000000000000000000
0x145: M[V106] = V115
0x146: V116 = 0x0
0x148: V117 = NOT 0x0
0x149: V118 = NUMBER
0x14a: V119 = ADD V118 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x14b: V120 = BLOCKHASH V119
0x14c: V121 = 0x14
0x14f: V122 = ADD V106 0x14
0x150: M[V122] = V120
0x151: V123 = COINBASE
0x154: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x157: V125 = MUL 0x1000000000000000000000000 V124
0x158: V126 = 0x34
0x15b: V127 = ADD V106 0x34
0x15c: M[V127] = V125
0x15d: V128 = DIFFICULTY
0x15e: V129 = 0x48
0x161: V130 = ADD V106 0x48
0x162: M[V130] = V128
0x164: V131 = M[0x40]
0x168: V132 = SUB V106 V131
0x169: V133 = 0x68
0x16b: V134 = ADD 0x68 V132
0x16e: V135 = SHA3 V131 V134
0x171: V136 = BALANCE V114
0x173: V137 = 0x64
0x176: V138 = MOD V135 0x64
0x177: V139 = 0x1
0x179: V140 = ADD 0x1 V138
0x17b: V141 = 0x0
---
Entry stack: [V11, 0x56, V41, V43, V45]
Stack pops: 3
Stack additions: [S2, S1, S0, V113, V136, V140, S2, 0x0]
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, 0x0]

================================

Block 0x17d
[0x17d:0x185]
---
Predecessors: [0x122, 0x208]
Successors: [0x186, 0x219]
---
0x17d JUMPDEST
0x17e DUP6
0x17f DUP2
0x180 LT
0x181 ISZERO
0x182 PUSH2 0x219
0x185 JUMPI
---
0x17d: JUMPDEST 
0x180: V142 = LT S0 V45
0x181: V143 = ISZERO V142
0x182: V144 = 0x219
0x185: JUMPI 0x219 V143
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0]

================================

Block 0x186
[0x186:0x1ef]
---
Predecessors: [0x17d]
Successors: [0x1f0, 0x1f4]
---
0x186 PUSH1 0x40
0x188 DUP1
0x189 MLOAD
0x18a PUSH32 0xf679791d00000000000000000000000000000000000000000000000000000000
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x4
0x1af DUP2
0x1b0 ADD
0x1b1 DUP6
0x1b2 SWAP1
0x1b3 MSTORE
0x1b4 PUSH1 0x24
0x1b6 DUP2
0x1b7 ADD
0x1b8 DUP6
0x1b9 SWAP1
0x1ba MSTORE
0x1bb PUSH1 0x0
0x1bd PUSH1 0x44
0x1bf DUP3
0x1c0 ADD
0x1c1 DUP2
0x1c2 SWAP1
0x1c3 MSTORE
0x1c4 SWAP2
0x1c5 MLOAD
0x1c6 PUSH1 0x1
0x1c8 PUSH1 0xa0
0x1ca PUSH1 0x2
0x1cc EXP
0x1cd SUB
0x1ce DUP6
0x1cf AND
0x1d0 SWAP3
0x1d1 PUSH4 0xf679791d
0x1d6 SWAP3
0x1d7 DUP12
0x1d8 SWAP3
0x1d9 PUSH1 0x64
0x1db DUP1
0x1dc DUP4
0x1dd ADD
0x1de SWAP4
0x1df SWAP3
0x1e0 DUP3
0x1e1 SWAP1
0x1e2 SUB
0x1e3 ADD
0x1e4 DUP2
0x1e5 DUP6
0x1e6 DUP9
0x1e7 DUP1
0x1e8 EXTCODESIZE
0x1e9 ISZERO
0x1ea DUP1
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x186: V145 = 0x40
0x189: V146 = M[0x40]
0x18a: V147 = 0xf679791d00000000000000000000000000000000000000000000000000000000
0x1ac: M[V146] = 0xf679791d00000000000000000000000000000000000000000000000000000000
0x1ad: V148 = 0x4
0x1b0: V149 = ADD V146 0x4
0x1b3: M[V149] = V140
0x1b4: V150 = 0x24
0x1b7: V151 = ADD V146 0x24
0x1ba: M[V151] = V140
0x1bb: V152 = 0x0
0x1bd: V153 = 0x44
0x1c0: V154 = ADD V146 0x44
0x1c3: M[V154] = 0x0
0x1c5: V155 = M[0x40]
0x1c6: V156 = 0x1
0x1c8: V157 = 0xa0
0x1ca: V158 = 0x2
0x1cc: V159 = EXP 0x2 0xa0
0x1cd: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V161 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V162 = 0xf679791d
0x1d9: V163 = 0x64
0x1dd: V164 = ADD V146 0x64
0x1e2: V165 = SUB V146 V155
0x1e3: V166 = ADD V165 0x64
0x1e8: V167 = EXTCODESIZE V161
0x1e9: V168 = ISZERO V167
0x1eb: V169 = ISZERO V168
0x1ec: V170 = 0x1f4
0x1ef: JUMPI 0x1f4 V169
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V161, 0xf679791d, S6, V164, 0x0, V155, V166, V155, S6, V161, V168]
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0, V161, 0xf679791d, V43, V164, 0x0, V155, V166, V155, V43, V161, V168]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x186]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V171 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S11, V161, 0xf679791d, V43, V164, 0x0, V155, V166, V155, V43, V161, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S11, V161, 0xf679791d, V43, V164, 0x0, V155, V166, V155, V43, V161, V168]

================================

Block 0x1f4
[0x1f4:0x1fe]
---
Predecessors: [0x186]
Successors: [0x1ff, 0x208]
---
0x1f4 JUMPDEST
0x1f5 POP
0x1f6 GAS
0x1f7 CALL
0x1f8 ISZERO
0x1f9 DUP1
0x1fa ISZERO
0x1fb PUSH2 0x208
0x1fe JUMPI
---
0x1f4: JUMPDEST 
0x1f6: V172 = GAS
0x1f7: V173 = CALL V172 V161 V43 V155 V166 V155 0x0
0x1f8: V174 = ISZERO V173
0x1fa: V175 = ISZERO V174
0x1fb: V176 = 0x208
0x1fe: JUMPI 0x208 V175
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S11, V161, 0xf679791d, V43, V164, 0x0, V155, V166, V155, V43, V161, V168]
Stack pops: 7
Stack additions: [V174]
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S11, V161, 0xf679791d, V43, V164, V174]

================================

Block 0x1ff
[0x1ff:0x207]
---
Predecessors: [0x1f4]
Successors: []
---
0x1ff RETURNDATASIZE
0x200 PUSH1 0x0
0x202 DUP1
0x203 RETURNDATACOPY
0x204 RETURNDATASIZE
0x205 PUSH1 0x0
0x207 REVERT
---
0x1ff: V177 = RETURNDATASIZE
0x200: V178 = 0x0
0x203: RETURNDATACOPY 0x0 0x0 V177
0x204: V179 = RETURNDATASIZE
0x205: V180 = 0x0
0x207: REVERT 0x0 V179
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S5, V161, 0xf679791d, V43, V164, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S5, V161, 0xf679791d, V43, V164, V174]

================================

Block 0x208
[0x208:0x218]
---
Predecessors: [0x1f4]
Successors: [0x17d]
---
0x208 JUMPDEST
0x209 POP
0x20a POP
0x20b PUSH1 0x1
0x20d SWAP1
0x20e SWAP4
0x20f ADD
0x210 SWAP3
0x211 POP
0x212 PUSH2 0x17d
0x215 SWAP2
0x216 POP
0x217 POP
0x218 JUMP
---
0x208: JUMPDEST 
0x20b: V181 = 0x1
0x20f: V182 = ADD S5 0x1
0x212: V183 = 0x17d
0x218: JUMP 0x17d
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S5, V161, 0xf679791d, V43, V164, V174]
Stack pops: 6
Stack additions: [V182]
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, V182]

================================

Block 0x219
[0x219:0x22a]
---
Predecessors: [0x17d]
Successors: [0x22b, 0x22f]
---
0x219 JUMPDEST
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 DUP6
0x223 AND
0x224 BALANCE
0x225 DUP5
0x226 LT
0x227 PUSH2 0x22f
0x22a JUMPI
---
0x219: JUMPDEST 
0x21a: V184 = 0x1
0x21c: V185 = 0xa0
0x21e: V186 = 0x2
0x220: V187 = EXP 0x2 0xa0
0x221: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V189 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x224: V190 = BALANCE V189
0x226: V191 = LT V136 V190
0x227: V192 = 0x22f
0x22a: JUMPI 0x22f V191
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0]

================================

Block 0x22b
[0x22b:0x22e]
---
Predecessors: [0x219]
Successors: []
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
---
0x22b: V193 = 0x0
0x22e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0]

================================

Block 0x22f
[0x22f:0x238]
---
Predecessors: [0x219]
Successors: [0x56]
---
0x22f JUMPDEST
0x230 POP
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 POP
0x236 POP
0x237 POP
0x238 JUMP
---
0x22f: JUMPDEST 
0x238: JUMP 0x56
---
Entry stack: [V11, 0x56, V41, V43, V45, V113, V136, V140, V41, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x239
[0x239:0x279]
---
Predecessors: []
Successors: []
---
0x239 STOP
0x23a LOG1
0x23b PUSH6 0x627a7a723058
0x242 SHA3
0x243 DUP15
0x244 MSTORE
0x245 MISSING 0x5c
0x246 MISSING 0xea
0x247 MISSING 0xeb
0x248 MISSING 0xc3
0x249 PUSH17 0xfd9b9ed2b071dc7a41318e2bc7f657d383
0x25b CALLDATALOAD
0x25c MISSING 0x22
0x25d MLOAD
0x25e LOG2
0x25f MISSING 0xea
0x260 MISSING 0xe6
0x261 XOR
0x262 PUSH23 0x29
---
0x239: STOP 
0x23a: LOG S0 S1 S2
0x23b: V194 = 0x627a7a723058
0x242: V195 = SHA3 0x627a7a723058 S3
0x244: M[S17] = V195
0x245: MISSING 0x5c
0x246: MISSING 0xea
0x247: MISSING 0xeb
0x248: MISSING 0xc3
0x249: V196 = 0xfd9b9ed2b071dc7a41318e2bc7f657d383
0x25b: V197 = CALLDATALOAD 0xfd9b9ed2b071dc7a41318e2bc7f657d383
0x25c: MISSING 0x22
0x25d: V198 = M[S0]
0x25e: LOG V198 S1 S2 S3
0x25f: MISSING 0xea
0x260: MISSING 0xe6
0x261: V199 = XOR S0 S1
0x262: V200 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V197, 0x29, V199]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x58
Exit block: 0x56
Body: 0x56, 0x58, 0x60, 0x64, 0x9c, 0xb3, 0xb7, 0xed, 0xf6

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x6d
Exit block: 0x110
Body: 0x6d, 0x75, 0x79, 0xf9, 0x110, 0x114

Function 2:
Public function signature: 0xe8f81243
Entry block: 0x82
Exit block: 0x1ff
Body: 0x56, 0x82, 0x122, 0x17d, 0x186, 0x1f0, 0x1f4, 0x1ff, 0x208, 0x219, 0x22b, 0x22f

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

