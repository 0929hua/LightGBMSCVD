Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1ac9f70d
0x3c EQ
0x3d PUSH2 0x59
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1ac9f70d
0x3c: V13 = EQ 0x1ac9f70d V11
0x3d: V14 = 0x59
0x40: JUMPI 0x59 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x87]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x87
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x87
0x4b: JUMPI 0x87 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x91]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0x91
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0x91
0x56: JUMPI 0x91 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x58]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 STOP
---
0x57: JUMPDEST 
0x58: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0x84]
---
Predecessors: [0xd]
Successors: [0xe6]
---
0x59 JUMPDEST
0x5a PUSH2 0x85
0x5d PUSH1 0x4
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP2
0x7e SWAP1
0x7f POP
0x80 POP
0x81 PUSH2 0xe6
0x84 JUMP
---
0x59: JUMPDEST 
0x5a: V21 = 0x85
0x5d: V22 = 0x4
0x61: V23 = CALLDATALOAD 0x4
0x62: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x79: V26 = 0x20
0x7b: V27 = ADD 0x20 0x4
0x81: V28 = 0xe6
0x84: JUMP 0xe6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x85, V25]
Exit stack: [V11, 0x85, V25]

================================

Block 0x85
[0x85:0x86]
---
Predecessors: [0x1b6]
Successors: []
---
0x85 JUMPDEST
0x86 STOP
---
0x85: JUMPDEST 
0x86: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x41]
Successors: [0x1b9]
---
0x87 JUMPDEST
0x88 PUSH2 0x8f
0x8b PUSH2 0x1b9
0x8e JUMP
---
0x87: JUMPDEST 
0x88: V29 = 0x8f
0x8b: V30 = 0x1b9
0x8e: JUMP 0x1b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: [0x28c]
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0x97]
---
Predecessors: [0x4c]
Successors: [0x98, 0x9c]
---
0x91 JUMPDEST
0x92 CALLVALUE
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x91: JUMPDEST 
0x92: V31 = CALLVALUE
0x93: V32 = ISZERO V31
0x94: V33 = 0x9c
0x97: JUMPI 0x9c V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x91]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V34 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x91]
Successors: [0x28e]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x28e
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V35 = 0xa4
0xa0: V36 = 0x28e
0xa3: JUMP 0x28e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V11, 0xa4]

================================

Block 0xa4
[0xa4:0xe5]
---
Predecessors: [0x28e]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 DUP3
0xaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf AND
0xc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5 AND
0xd6 DUP2
0xd7 MSTORE
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP2
0xdc POP
0xdd POP
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 SWAP2
0xe3 SUB
0xe4 SWAP1
0xe5 RETURN
---
0xa4: JUMPDEST 
0xa5: V37 = 0x40
0xa7: V38 = M[0x40]
0xaa: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0xc0: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xd7: M[V38] = V42
0xd8: V43 = 0x20
0xda: V44 = ADD 0x20 V38
0xde: V45 = 0x40
0xe0: V46 = M[0x40]
0xe3: V47 = SUB V44 V46
0xe5: RETURN V46 V47
---
Entry stack: [V11, 0xa4, V144]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa4]

================================

Block 0xe6
[0xe6:0x106]
---
Predecessors: [0x59]
Successors: [0x107, 0x1b6]
---
0xe6 JUMPDEST
0xe7 ADDRESS
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd AND
0xfe BALANCE
0xff CALLVALUE
0x100 LT
0x101 ISZERO
0x102 ISZERO
0x103 PUSH2 0x1b6
0x106 JUMPI
---
0xe6: JUMPDEST 
0xe7: V48 = ADDRESS
0xe8: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xfe: V51 = BALANCE V50
0xff: V52 = CALLVALUE
0x100: V53 = LT V52 V51
0x101: V54 = ISZERO V53
0x102: V55 = ISZERO V54
0x103: V56 = 0x1b6
0x106: JUMPI 0x1b6 V55
---
Entry stack: [V11, 0x85, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85, V25]

================================

Block 0x107
[0x107:0x15a]
---
Predecessors: [0xe6]
Successors: [0x15b, 0x15f]
---
0x107 DUP1
0x108 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d AND
0x11e PUSH2 0x8fc
0x121 CALLVALUE
0x122 ADDRESS
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 BALANCE
0x13a ADD
0x13b SWAP1
0x13c DUP2
0x13d ISZERO
0x13e MUL
0x13f SWAP1
0x140 PUSH1 0x40
0x142 MLOAD
0x143 PUSH1 0x0
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 DUP4
0x14a SUB
0x14b DUP2
0x14c DUP6
0x14d DUP9
0x14e DUP9
0x14f CALL
0x150 SWAP4
0x151 POP
0x152 POP
0x153 POP
0x154 POP
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x108: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x11e: V59 = 0x8fc
0x121: V60 = CALLVALUE
0x122: V61 = ADDRESS
0x123: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x139: V64 = BALANCE V63
0x13a: V65 = ADD V64 V60
0x13d: V66 = ISZERO V65
0x13e: V67 = MUL V66 0x8fc
0x140: V68 = 0x40
0x142: V69 = M[0x40]
0x143: V70 = 0x0
0x145: V71 = 0x40
0x147: V72 = M[0x40]
0x14a: V73 = SUB V69 V72
0x14f: V74 = CALL V67 V58 V65 V72 V73 V72 0x0
0x155: V75 = ISZERO V74
0x156: V76 = ISZERO V75
0x157: V77 = 0x15f
0x15a: JUMPI 0x15f V76
---
Entry stack: [V11, 0x85, V25]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x85, V25]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x107]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V78 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x85, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85, V25]

================================

Block 0x15f
[0x15f:0x1b5]
---
Predecessors: [0x107]
Successors: [0x1b6]
---
0x15f JUMPDEST
0x160 PUSH32 0x60953744d2a7ef2c5813bd9192d479699f220928e95d49252323f282fb46fb15
0x181 ADDRESS
0x182 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x197 AND
0x198 BALANCE
0x199 CALLVALUE
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e DUP4
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 DUP3
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP3
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 SWAP2
0x1b3 SUB
0x1b4 SWAP1
0x1b5 LOG1
---
0x15f: JUMPDEST 
0x160: V79 = 0x60953744d2a7ef2c5813bd9192d479699f220928e95d49252323f282fb46fb15
0x181: V80 = ADDRESS
0x182: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x197: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x198: V83 = BALANCE V82
0x199: V84 = CALLVALUE
0x19a: V85 = 0x40
0x19c: V86 = M[0x40]
0x1a0: M[V86] = V83
0x1a1: V87 = 0x20
0x1a3: V88 = ADD 0x20 V86
0x1a6: M[V88] = V84
0x1a7: V89 = 0x20
0x1a9: V90 = ADD 0x20 V88
0x1ae: V91 = 0x40
0x1b0: V92 = M[0x40]
0x1b3: V93 = SUB V90 V92
0x1b5: LOG V92 V93 0x60953744d2a7ef2c5813bd9192d479699f220928e95d49252323f282fb46fb15
---
Entry stack: [V11, 0x85, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85, V25]

================================

Block 0x1b6
[0x1b6:0x1b8]
---
Predecessors: [0xe6, 0x15f]
Successors: [0x85]
---
0x1b6 JUMPDEST
0x1b7 POP
0x1b8 JUMP
---
0x1b6: JUMPDEST 
0x1b8: JUMP 0x85
---
Entry stack: [V11, 0x85, V25]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b9
[0x1b9:0x20f]
---
Predecessors: [0x87]
Successors: [0x210, 0x214]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd SWAP1
0x1be SLOAD
0x1bf SWAP1
0x1c0 PUSH2 0x100
0x1c3 EXP
0x1c4 SWAP1
0x1c5 DIV
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 CALLER
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 EQ
0x20a ISZERO
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V94 = 0x0
0x1be: V95 = S[0x0]
0x1c0: V96 = 0x100
0x1c3: V97 = EXP 0x100 0x0
0x1c5: V98 = DIV V95 0x1
0x1c6: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1dc: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1f2: V103 = CALLER
0x1f3: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x209: V106 = EQ V105 V102
0x20a: V107 = ISZERO V106
0x20b: V108 = ISZERO V107
0x20c: V109 = 0x214
0x20f: JUMPI 0x214 V108
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x1b9]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V110 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x214
[0x214:0x287]
---
Predecessors: [0x1b9]
Successors: [0x288, 0x28c]
---
0x214 JUMPDEST
0x215 PUSH1 0x0
0x217 DUP1
0x218 SWAP1
0x219 SLOAD
0x21a SWAP1
0x21b PUSH2 0x100
0x21e EXP
0x21f SWAP1
0x220 DIV
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24c AND
0x24d PUSH2 0x8fc
0x250 ADDRESS
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 AND
0x267 BALANCE
0x268 SWAP1
0x269 DUP2
0x26a ISZERO
0x26b MUL
0x26c SWAP1
0x26d PUSH1 0x40
0x26f MLOAD
0x270 PUSH1 0x0
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP1
0x276 DUP4
0x277 SUB
0x278 DUP2
0x279 DUP6
0x27a DUP9
0x27b DUP9
0x27c CALL
0x27d SWAP4
0x27e POP
0x27f POP
0x280 POP
0x281 POP
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x214: JUMPDEST 
0x215: V111 = 0x0
0x219: V112 = S[0x0]
0x21b: V113 = 0x100
0x21e: V114 = EXP 0x100 0x0
0x220: V115 = DIV V112 0x1
0x221: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x237: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x24d: V120 = 0x8fc
0x250: V121 = ADDRESS
0x251: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x267: V124 = BALANCE V123
0x26a: V125 = ISZERO V124
0x26b: V126 = MUL V125 0x8fc
0x26d: V127 = 0x40
0x26f: V128 = M[0x40]
0x270: V129 = 0x0
0x272: V130 = 0x40
0x274: V131 = M[0x40]
0x277: V132 = SUB V128 V131
0x27c: V133 = CALL V126 V119 V124 V131 V132 V131 0x0
0x282: V134 = ISZERO V133
0x283: V135 = ISZERO V134
0x284: V136 = 0x28c
0x287: JUMPI 0x28c V135
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x214]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V137 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x28c
[0x28c:0x28d]
---
Predecessors: [0x214]
Successors: [0x8f]
---
0x28c JUMPDEST
0x28d JUMP
---
0x28c: JUMPDEST 
0x28d: JUMP 0x8f
---
Entry stack: [V11, 0x8f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x28e
[0x28e:0x2b2]
---
Predecessors: [0x9c]
Successors: [0xa4]
---
0x28e JUMPDEST
0x28f PUSH1 0x0
0x291 DUP1
0x292 SWAP1
0x293 SLOAD
0x294 SWAP1
0x295 PUSH2 0x100
0x298 EXP
0x299 SWAP1
0x29a DIV
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 AND
0x2b1 DUP2
0x2b2 JUMP
---
0x28e: JUMPDEST 
0x28f: V138 = 0x0
0x293: V139 = S[0x0]
0x295: V140 = 0x100
0x298: V141 = EXP 0x100 0x0
0x29a: V142 = DIV V139 0x1
0x29b: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x2b2: JUMP 0xa4
---
Entry stack: [V11, 0xa4]
Stack pops: 1
Stack additions: [S0, V144]
Exit stack: [V11, 0xa4, V144]

================================

Block 0x2b3
[0x2b3:0x2e3]
---
Predecessors: []
Successors: []
---
0x2b3 STOP
0x2b4 LOG1
0x2b5 PUSH6 0x627a7a723058
0x2bc SHA3
0x2bd MISSING 0x21
0x2be MISSING 0x4e
0x2bf PUSH14 0x6133ad9c1672331aea9ce71e5dd1
0x2ce PUSH21 0xf6dc38bb7d4bed049e2c759b3ff00029
---
0x2b3: STOP 
0x2b4: LOG S0 S1 S2
0x2b5: V145 = 0x627a7a723058
0x2bc: V146 = SHA3 0x627a7a723058 S3
0x2bd: MISSING 0x21
0x2be: MISSING 0x4e
0x2bf: V147 = 0x6133ad9c1672331aea9ce71e5dd1
0x2ce: V148 = 0xf6dc38bb7d4bed049e2c759b3ff00029
---
Entry stack: []
Stack pops: 0
Stack additions: [V146, 0xf6dc38bb7d4bed049e2c759b3ff00029, 0x6133ad9c1672331aea9ce71e5dd1]
Exit stack: []

================================

Function 0:
Public function signature: 0x1ac9f70d
Entry block: 0x59
Exit block: 0x15b
Body: 0x59, 0x85, 0xe6, 0x107, 0x15b, 0x15f, 0x1b6

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x87
Exit block: 0x8f
Body: 0x87, 0x8f, 0x1b9, 0x210, 0x214, 0x288, 0x28c

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x91
Exit block: 0xa4
Body: 0x91, 0x98, 0x9c, 0xa4, 0x28e

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

