Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xad]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xad
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xad
0xa: JUMPI 0xad V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x3d4]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x29dcb0cf
0x3a EQ
0x3b PUSH2 0x3d4
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x29dcb0cf
0x3a: V12 = EQ 0x29dcb0cf V10
0x3b: V13 = 0x3d4
0x3e: JUMPI 0x3d4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x3fd]
---
0x3f DUP1
0x40 PUSH4 0x2fed95bd
0x45 EQ
0x46 PUSH2 0x3fd
0x49 JUMPI
---
0x40: V14 = 0x2fed95bd
0x45: V15 = EQ 0x2fed95bd V10
0x46: V16 = 0x3fd
0x49: JUMPI 0x3fd V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x448]
---
0x4a DUP1
0x4b PUSH4 0x343cd460
0x50 EQ
0x51 PUSH2 0x448
0x54 JUMPI
---
0x4b: V17 = 0x343cd460
0x50: V18 = EQ 0x343cd460 V10
0x51: V19 = 0x448
0x54: JUMPI 0x448 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x45d]
---
0x55 DUP1
0x56 PUSH4 0x38d52e0f
0x5b EQ
0x5c PUSH2 0x45d
0x5f JUMPI
---
0x56: V20 = 0x38d52e0f
0x5b: V21 = EQ 0x38d52e0f V10
0x5c: V22 = 0x45d
0x5f: JUMPI 0x45d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x4b2]
---
0x60 DUP1
0x61 PUSH4 0x41c0e1b5
0x66 EQ
0x67 PUSH2 0x4b2
0x6a JUMPI
---
0x61: V23 = 0x41c0e1b5
0x66: V24 = EQ 0x41c0e1b5 V10
0x67: V25 = 0x4b2
0x6a: JUMPI 0x4b2 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x4c7]
---
0x6b DUP1
0x6c PUSH4 0x603f4d52
0x71 EQ
0x72 PUSH2 0x4c7
0x75 JUMPI
---
0x6c: V26 = 0x603f4d52
0x71: V27 = EQ 0x603f4d52 V10
0x72: V28 = 0x4c7
0x75: JUMPI 0x4c7 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x4fe]
---
0x76 DUP1
0x77 PUSH4 0x687e6f44
0x7c EQ
0x7d PUSH2 0x4fe
0x80 JUMPI
---
0x77: V29 = 0x687e6f44
0x7c: V30 = EQ 0x687e6f44 V10
0x7d: V31 = 0x4fe
0x80: JUMPI 0x4fe V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x513]
---
0x81 DUP1
0x82 PUSH4 0x8d8f2adb
0x87 EQ
0x88 PUSH2 0x513
0x8b JUMPI
---
0x82: V32 = 0x8d8f2adb
0x87: V33 = EQ 0x8d8f2adb V10
0x88: V34 = 0x513
0x8b: JUMPI 0x513 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x528]
---
0x8c DUP1
0x8d PUSH4 0x8da5cb5b
0x92 EQ
0x93 PUSH2 0x528
0x96 JUMPI
---
0x8d: V35 = 0x8da5cb5b
0x92: V36 = EQ 0x8da5cb5b V10
0x93: V37 = 0x528
0x96: JUMPI 0x528 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x57d]
---
0x97 DUP1
0x98 PUSH4 0xa035b1fe
0x9d EQ
0x9e PUSH2 0x57d
0xa1 JUMPI
---
0x98: V38 = 0xa035b1fe
0x9d: V39 = EQ 0xa035b1fe V10
0x9e: V40 = 0x57d
0xa1: JUMPI 0x57d V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x5a6]
---
0xa2 DUP1
0xa3 PUSH4 0xe36b0b37
0xa8 EQ
0xa9 PUSH2 0x5a6
0xac JUMPI
---
0xa3: V41 = 0xe36b0b37
0xa8: V42 = EQ 0xe36b0b37 V10
0xa9: V43 = 0x5a6
0xac: JUMPI 0x5a6 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0x0, 0xa2]
Successors: [0xb1]
---
0xad JUMPDEST
0xae PUSH2 0x3d2
---
0xad: JUMPDEST 
0xae: V44 = 0x3d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3d2]
Exit stack: [V10, 0x3d2]

================================

Block 0xb1
[0xb1:0x17e]
---
Predecessors: [0xad]
Successors: [0x17f, 0x183]
---
0xb1 JUMPDEST
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 CALLVALUE
0xb9 SWAP4
0xba POP
0xbb PUSH1 0x0
0xbd SWAP3
0xbe POP
0xbf PUSH1 0x1
0xc1 PUSH1 0x0
0xc3 SWAP1
0xc4 SLOAD
0xc5 SWAP1
0xc6 PUSH2 0x100
0xc9 EXP
0xca SWAP1
0xcb DIV
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 PUSH4 0x70a08231
0xfd ADDRESS
0xfe PUSH1 0x0
0x100 PUSH1 0x40
0x102 MLOAD
0x103 PUSH1 0x20
0x105 ADD
0x106 MSTORE
0x107 PUSH1 0x40
0x109 MLOAD
0x10a DUP3
0x10b PUSH4 0xffffffff
0x110 AND
0x111 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12f MUL
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x4
0x134 ADD
0x135 DUP1
0x136 DUP3
0x137 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14c AND
0x14d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x162 AND
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x20
0x167 ADD
0x168 SWAP2
0x169 POP
0x16a POP
0x16b PUSH1 0x20
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 DUP4
0x172 SUB
0x173 DUP2
0x174 PUSH1 0x0
0x176 DUP8
0x177 DUP1
0x178 EXTCODESIZE
0x179 ISZERO
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0xb1: JUMPDEST 
0xb2: V45 = 0x0
0xb5: V46 = 0x0
0xb8: V47 = CALLVALUE
0xbb: V48 = 0x0
0xbf: V49 = 0x1
0xc1: V50 = 0x0
0xc4: V51 = S[0x1]
0xc6: V52 = 0x100
0xc9: V53 = EXP 0x100 0x0
0xcb: V54 = DIV V51 0x1
0xcc: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xe2: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf8: V59 = 0x70a08231
0xfd: V60 = ADDRESS
0xfe: V61 = 0x0
0x100: V62 = 0x40
0x102: V63 = M[0x40]
0x103: V64 = 0x20
0x105: V65 = ADD 0x20 V63
0x106: M[V65] = 0x0
0x107: V66 = 0x40
0x109: V67 = M[0x40]
0x10b: V68 = 0xffffffff
0x110: V69 = AND 0xffffffff 0x70a08231
0x111: V70 = 0x100000000000000000000000000000000000000000000000000000000
0x12f: V71 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x131: M[V67] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x132: V72 = 0x4
0x134: V73 = ADD 0x4 V67
0x137: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x14d: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x162: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x164: M[V73] = V77
0x165: V78 = 0x20
0x167: V79 = ADD 0x20 V73
0x16b: V80 = 0x20
0x16d: V81 = 0x40
0x16f: V82 = M[0x40]
0x172: V83 = SUB V79 V82
0x174: V84 = 0x0
0x178: V85 = EXTCODESIZE V58
0x179: V86 = ISZERO V85
0x17a: V87 = ISZERO V86
0x17b: V88 = 0x183
0x17e: JUMPI 0x183 V87
---
Entry stack: [V10, 0x3d2]
Stack pops: 0
Stack additions: [V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79, 0x20, V82, V83, V82, 0x0, V58]
Exit stack: [V10, 0x3d2, V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79, 0x20, V82, V83, V82, 0x0, V58]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0xb1]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V89 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3d2, V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79, 0x20, V82, V83, V82, 0x0, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79, 0x20, V82, V83, V82, 0x0, V58]

================================

Block 0x183
[0x183:0x18f]
---
Predecessors: [0xb1]
Successors: [0x190, 0x194]
---
0x183 JUMPDEST
0x184 PUSH2 0x2c6
0x187 GAS
0x188 SUB
0x189 CALL
0x18a ISZERO
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x183: JUMPDEST 
0x184: V90 = 0x2c6
0x187: V91 = GAS
0x188: V92 = SUB V91 0x2c6
0x189: V93 = CALL V92 V58 0x0 V82 V83 V82 0x20
0x18a: V94 = ISZERO V93
0x18b: V95 = ISZERO V94
0x18c: V96 = 0x194
0x18f: JUMPI 0x194 V95
---
Entry stack: [V10, 0x3d2, V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79, 0x20, V82, V83, V82, 0x0, V58]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x183]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V97 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3d2, V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79]

================================

Block 0x194
[0x194:0x1ab]
---
Predecessors: [0x183]
Successors: [0x1ac, 0x1ad]
---
0x194 JUMPDEST
0x195 POP
0x196 POP
0x197 POP
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c MLOAD
0x19d SWAP1
0x19e POP
0x19f SWAP2
0x1a0 POP
0x1a1 PUSH1 0x3
0x1a3 SLOAD
0x1a4 DUP5
0x1a5 DUP2
0x1a6 ISZERO
0x1a7 ISZERO
0x1a8 PUSH2 0x1ad
0x1ab JUMPI
---
0x194: JUMPDEST 
0x198: V98 = 0x40
0x19a: V99 = M[0x40]
0x19c: V100 = M[V99]
0x1a1: V101 = 0x3
0x1a3: V102 = S[0x3]
0x1a6: V103 = ISZERO V102
0x1a7: V104 = ISZERO V103
0x1a8: V105 = 0x1ad
0x1ab: JUMPI 0x1ad V104
---
Entry stack: [V10, 0x3d2, V47, 0x0, 0x0, 0x0, V58, 0x70a08231, V79]
Stack pops: 7
Stack additions: [S6, S5, V100, S3, V102, S6]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, 0x0, V102, V47]

================================

Block 0x1ac
[0x1ac:0x1ac]
---
Predecessors: [0x194]
Successors: []
---
0x1ac INVALID
---
0x1ac: INVALID 
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, 0x0, V102, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, V100, 0x0, V102, V47]

================================

Block 0x1ad
[0x1ad:0x1bb]
---
Predecessors: [0x194]
Successors: [0x1bc, 0x1bd]
---
0x1ad JUMPDEST
0x1ae DIV
0x1af SWAP1
0x1b0 POP
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0x3
0x1b5 DUP2
0x1b6 GT
0x1b7 ISZERO
0x1b8 PUSH2 0x1bd
0x1bb JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V106 = DIV V47 V102
0x1b1: V107 = 0x1
0x1b3: V108 = 0x3
0x1b6: V109 = GT 0x1 0x3
0x1b7: V110 = ISZERO 0x0
0x1b8: V111 = 0x1bd
0x1bb: JUMPI 0x1bd 0x1
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, 0x0, V102, V47]
Stack pops: 3
Stack additions: [V106, 0x1]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x1]

================================

Block 0x1bc
[0x1bc:0x1bc]
---
Predecessors: [0x1ad]
Successors: []
---
0x1bc INVALID
---
0x1bc: INVALID 
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x1]

================================

Block 0x1bd
[0x1bd:0x1d6]
---
Predecessors: [0x1ad]
Successors: [0x1d7, 0x1d8]
---
0x1bd JUMPDEST
0x1be PUSH1 0x1
0x1c0 PUSH1 0x14
0x1c2 SWAP1
0x1c3 SLOAD
0x1c4 SWAP1
0x1c5 PUSH2 0x100
0x1c8 EXP
0x1c9 SWAP1
0x1ca DIV
0x1cb PUSH1 0xff
0x1cd AND
0x1ce PUSH1 0x3
0x1d0 DUP2
0x1d1 GT
0x1d2 ISZERO
0x1d3 PUSH2 0x1d8
0x1d6 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V112 = 0x1
0x1c0: V113 = 0x14
0x1c3: V114 = S[0x1]
0x1c5: V115 = 0x100
0x1c8: V116 = EXP 0x100 0x14
0x1ca: V117 = DIV V114 0x10000000000000000000000000000000000000000
0x1cb: V118 = 0xff
0x1cd: V119 = AND 0xff V117
0x1ce: V120 = 0x3
0x1d1: V121 = GT V119 0x3
0x1d2: V122 = ISZERO V121
0x1d3: V123 = 0x1d8
0x1d6: JUMPI 0x1d8 V122
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x1]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x1, V119]

================================

Block 0x1d7
[0x1d7:0x1d7]
---
Predecessors: [0x1bd]
Successors: []
---
0x1d7 INVALID
---
0x1d7: INVALID 
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x1, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x1, V119]

================================

Block 0x1d8
[0x1d8:0x1df]
---
Predecessors: [0x1bd]
Successors: [0x1e0, 0x1e6]
---
0x1d8 JUMPDEST
0x1d9 EQ
0x1da ISZERO
0x1db DUP1
0x1dc PUSH2 0x1e6
0x1df JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V124 = EQ V119 0x1
0x1da: V125 = ISZERO V124
0x1dc: V126 = 0x1e6
0x1df: JUMPI 0x1e6 V125
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x1, V119]
Stack pops: 2
Stack additions: [V125]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, V125]

================================

Block 0x1e0
[0x1e0:0x1e5]
---
Predecessors: [0x1d8]
Successors: [0x1e6]
---
0x1e0 POP
0x1e1 PUSH1 0x2
0x1e3 SLOAD
0x1e4 TIMESTAMP
0x1e5 GT
---
0x1e1: V127 = 0x2
0x1e3: V128 = S[0x2]
0x1e4: V129 = TIMESTAMP
0x1e5: V130 = GT V129 V128
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, V125]
Stack pops: 1
Stack additions: [V130]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, V130]

================================

Block 0x1e6
[0x1e6:0x1eb]
---
Predecessors: [0x1d8, 0x1e0]
Successors: [0x1ec, 0x1f2]
---
0x1e6 JUMPDEST
0x1e7 DUP1
0x1e8 PUSH2 0x1f2
0x1eb JUMPI
---
0x1e6: JUMPDEST 
0x1e8: V131 = 0x1f2
0x1eb: JUMPI 0x1f2 S0
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, S0]

================================

Block 0x1ec
[0x1ec:0x1f1]
---
Predecessors: [0x1e6]
Successors: [0x1f2]
---
0x1ec POP
0x1ed PUSH2 0x2710
0x1f0 DUP5
0x1f1 LT
---
0x1ed: V132 = 0x2710
0x1f1: V133 = LT V47 0x2710
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V133]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, V133]

================================

Block 0x1f2
[0x1f2:0x1f7]
---
Predecessors: [0x1e6, 0x1ec]
Successors: [0x1f8, 0x1fc]
---
0x1f2 JUMPDEST
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V134 = ISZERO S0
0x1f4: V135 = 0x1fc
0x1f7: JUMPI 0x1fc V134
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V136 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106]

================================

Block 0x1fc
[0x1fc:0x204]
---
Predecessors: [0x1f2]
Successors: [0x205, 0x275]
---
0x1fc JUMPDEST
0x1fd DUP2
0x1fe DUP2
0x1ff GT
0x200 ISZERO
0x201 PUSH2 0x275
0x204 JUMPI
---
0x1fc: JUMPDEST 
0x1ff: V137 = GT V106 V100
0x200: V138 = ISZERO V137
0x201: V139 = 0x275
0x204: JUMPI 0x275 V138
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106]

================================

Block 0x205
[0x205:0x221]
---
Predecessors: [0x1fc]
Successors: [0x222, 0x223]
---
0x205 PUSH1 0x3
0x207 PUSH1 0x1
0x209 PUSH1 0x14
0x20b PUSH2 0x100
0x20e EXP
0x20f DUP2
0x210 SLOAD
0x211 DUP2
0x212 PUSH1 0xff
0x214 MUL
0x215 NOT
0x216 AND
0x217 SWAP1
0x218 DUP4
0x219 PUSH1 0x3
0x21b DUP2
0x21c GT
0x21d ISZERO
0x21e PUSH2 0x223
0x221 JUMPI
---
0x205: V140 = 0x3
0x207: V141 = 0x1
0x209: V142 = 0x14
0x20b: V143 = 0x100
0x20e: V144 = EXP 0x100 0x14
0x210: V145 = S[0x1]
0x212: V146 = 0xff
0x214: V147 = MUL 0xff 0x10000000000000000000000000000000000000000
0x215: V148 = NOT 0xff0000000000000000000000000000000000000000
0x216: V149 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V145
0x219: V150 = 0x3
0x21c: V151 = GT 0x3 0x3
0x21d: V152 = ISZERO 0x0
0x21e: V153 = 0x223
0x221: JUMPI 0x223 0x1
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106]
Stack pops: 0
Stack additions: [0x3, 0x1, V149, 0x10000000000000000000000000000000000000000, 0x3]
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x3, 0x1, V149, 0x10000000000000000000000000000000000000000, 0x3]

================================

Block 0x222
[0x222:0x222]
---
Predecessors: [0x205]
Successors: []
---
0x222 INVALID
---
0x222: INVALID 
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x3, 0x1, V149, 0x10000000000000000000000000000000000000000, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x3, 0x1, V149, 0x10000000000000000000000000000000000000000, 0x3]

================================

Block 0x223
[0x223:0x26f]
---
Predecessors: [0x205]
Successors: [0x270, 0x274]
---
0x223 JUMPDEST
0x224 MUL
0x225 OR
0x226 SWAP1
0x227 SSTORE
0x228 POP
0x229 DUP2
0x22a SWAP1
0x22b POP
0x22c PUSH1 0x3
0x22e SLOAD
0x22f DUP2
0x230 MUL
0x231 DUP5
0x232 SUB
0x233 SWAP3
0x234 POP
0x235 CALLER
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c PUSH2 0x8fc
0x24f DUP5
0x250 SWAP1
0x251 DUP2
0x252 ISZERO
0x253 MUL
0x254 SWAP1
0x255 PUSH1 0x40
0x257 MLOAD
0x258 PUSH1 0x0
0x25a PUSH1 0x40
0x25c MLOAD
0x25d DUP1
0x25e DUP4
0x25f SUB
0x260 DUP2
0x261 DUP6
0x262 DUP9
0x263 DUP9
0x264 CALL
0x265 SWAP4
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a ISZERO
0x26b ISZERO
0x26c PUSH2 0x274
0x26f JUMPI
---
0x223: JUMPDEST 
0x224: V154 = MUL 0x3 0x10000000000000000000000000000000000000000
0x225: V155 = OR 0x30000000000000000000000000000000000000000 V149
0x227: S[0x1] = V155
0x22c: V156 = 0x3
0x22e: V157 = S[0x3]
0x230: V158 = MUL V100 V157
0x232: V159 = SUB V47 V158
0x235: V160 = CALLER
0x236: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x24c: V163 = 0x8fc
0x252: V164 = ISZERO V159
0x253: V165 = MUL V164 0x8fc
0x255: V166 = 0x40
0x257: V167 = M[0x40]
0x258: V168 = 0x0
0x25a: V169 = 0x40
0x25c: V170 = M[0x40]
0x25f: V171 = SUB V167 V170
0x264: V172 = CALL V165 V162 V159 V170 V171 V170 0x0
0x26a: V173 = ISZERO V172
0x26b: V174 = ISZERO V173
0x26c: V175 = 0x274
0x26f: JUMPI 0x274 V174
---
Entry stack: [V10, 0x3d2, V47, 0x0, V100, V106, 0x3, 0x1, V149, 0x10000000000000000000000000000000000000000, 0x3]
Stack pops: 9
Stack additions: [S8, V159, S6, S6]
Exit stack: [V10, 0x3d2, V47, V159, V100, V100]

================================

Block 0x270
[0x270:0x273]
---
Predecessors: [0x223]
Successors: []
---
0x270 PUSH1 0x0
0x272 DUP1
0x273 REVERT
---
0x270: V176 = 0x0
0x273: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3d2, V47, V159, V100, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, V159, V100, V100]

================================

Block 0x274
[0x274:0x274]
---
Predecessors: [0x223]
Successors: [0x275]
---
0x274 JUMPDEST
---
0x274: JUMPDEST 
---
Entry stack: [V10, 0x3d2, V47, V159, V100, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, V159, V100, V100]

================================

Block 0x275
[0x275:0x27e]
---
Predecessors: [0x1fc, 0x274]
Successors: [0x27f, 0x3cb]
---
0x275 JUMPDEST
0x276 PUSH1 0x0
0x278 DUP2
0x279 GT
0x27a ISZERO
0x27b PUSH2 0x3cb
0x27e JUMPI
---
0x275: JUMPDEST 
0x276: V177 = 0x0
0x279: V178 = GT S0 0x0
0x27a: V179 = ISZERO V178
0x27b: V180 = 0x3cb
0x27e: JUMPI 0x3cb V179
---
Entry stack: [V10, 0x3d2, V47, S2, V100, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3d2, V47, S2, V100, S0]

================================

Block 0x27f
[0x27f:0x346]
---
Predecessors: [0x275]
Successors: [0x347, 0x34b]
---
0x27f PUSH1 0x1
0x281 PUSH1 0x0
0x283 SWAP1
0x284 SLOAD
0x285 SWAP1
0x286 PUSH2 0x100
0x289 EXP
0x28a SWAP1
0x28b DIV
0x28c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a1 AND
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 PUSH4 0xa9059cbb
0x2bd CALLER
0x2be DUP4
0x2bf PUSH1 0x0
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 MSTORE
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP4
0x2cc PUSH4 0xffffffff
0x2d1 AND
0x2d2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2f0 MUL
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x4
0x2f5 ADD
0x2f6 DUP1
0x2f7 DUP4
0x2f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30d AND
0x30e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x323 AND
0x324 DUP2
0x325 MSTORE
0x326 PUSH1 0x20
0x328 ADD
0x329 DUP3
0x32a DUP2
0x32b MSTORE
0x32c PUSH1 0x20
0x32e ADD
0x32f SWAP3
0x330 POP
0x331 POP
0x332 POP
0x333 PUSH1 0x20
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 DUP4
0x33a SUB
0x33b DUP2
0x33c PUSH1 0x0
0x33e DUP8
0x33f DUP1
0x340 EXTCODESIZE
0x341 ISZERO
0x342 ISZERO
0x343 PUSH2 0x34b
0x346 JUMPI
---
0x27f: V181 = 0x1
0x281: V182 = 0x0
0x284: V183 = S[0x1]
0x286: V184 = 0x100
0x289: V185 = EXP 0x100 0x0
0x28b: V186 = DIV V183 0x1
0x28c: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x2a2: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x2b8: V191 = 0xa9059cbb
0x2bd: V192 = CALLER
0x2bf: V193 = 0x0
0x2c1: V194 = 0x40
0x2c3: V195 = M[0x40]
0x2c4: V196 = 0x20
0x2c6: V197 = ADD 0x20 V195
0x2c7: M[V197] = 0x0
0x2c8: V198 = 0x40
0x2ca: V199 = M[0x40]
0x2cc: V200 = 0xffffffff
0x2d1: V201 = AND 0xffffffff 0xa9059cbb
0x2d2: V202 = 0x100000000000000000000000000000000000000000000000000000000
0x2f0: V203 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2f2: M[V199] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2f3: V204 = 0x4
0x2f5: V205 = ADD 0x4 V199
0x2f8: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x30e: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x323: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x325: M[V205] = V209
0x326: V210 = 0x20
0x328: V211 = ADD 0x20 V205
0x32b: M[V211] = S0
0x32c: V212 = 0x20
0x32e: V213 = ADD 0x20 V211
0x333: V214 = 0x20
0x335: V215 = 0x40
0x337: V216 = M[0x40]
0x33a: V217 = SUB V213 V216
0x33c: V218 = 0x0
0x340: V219 = EXTCODESIZE V190
0x341: V220 = ISZERO V219
0x342: V221 = ISZERO V220
0x343: V222 = 0x34b
0x346: JUMPI 0x34b V221
---
Entry stack: [V10, 0x3d2, V47, S2, V100, S0]
Stack pops: 1
Stack additions: [S0, V190, 0xa9059cbb, V213, 0x20, V216, V217, V216, 0x0, V190]
Exit stack: [V10, 0x3d2, V47, S2, V100, S0, V190, 0xa9059cbb, V213, 0x20, V216, V217, V216, 0x0, V190]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x27f]
Successors: []
---
0x347 PUSH1 0x0
0x349 DUP1
0x34a REVERT
---
0x347: V223 = 0x0
0x34a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3d2, V47, S11, V100, S9, V190, 0xa9059cbb, V213, 0x20, V216, V217, V216, 0x0, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, S11, V100, S9, V190, 0xa9059cbb, V213, 0x20, V216, V217, V216, 0x0, V190]

================================

Block 0x34b
[0x34b:0x357]
---
Predecessors: [0x27f]
Successors: [0x358, 0x35c]
---
0x34b JUMPDEST
0x34c PUSH2 0x2c6
0x34f GAS
0x350 SUB
0x351 CALL
0x352 ISZERO
0x353 ISZERO
0x354 PUSH2 0x35c
0x357 JUMPI
---
0x34b: JUMPDEST 
0x34c: V224 = 0x2c6
0x34f: V225 = GAS
0x350: V226 = SUB V225 0x2c6
0x351: V227 = CALL V226 V190 0x0 V216 V217 V216 0x20
0x352: V228 = ISZERO V227
0x353: V229 = ISZERO V228
0x354: V230 = 0x35c
0x357: JUMPI 0x35c V229
---
Entry stack: [V10, 0x3d2, V47, S11, V100, S9, V190, 0xa9059cbb, V213, 0x20, V216, V217, V216, 0x0, V190]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3d2, V47, S11, V100, S9, V190, 0xa9059cbb, V213]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x34b]
Successors: []
---
0x358 PUSH1 0x0
0x35a DUP1
0x35b REVERT
---
0x358: V231 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3d2, V47, S5, V100, S3, V190, 0xa9059cbb, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, S5, V100, S3, V190, 0xa9059cbb, V213]

================================

Block 0x35c
[0x35c:0x3c5]
---
Predecessors: [0x34b]
Successors: [0x3c6, 0x3ca]
---
0x35c JUMPDEST
0x35d POP
0x35e POP
0x35f POP
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP1
0x364 MLOAD
0x365 SWAP1
0x366 POP
0x367 POP
0x368 PUSH1 0x0
0x36a DUP1
0x36b SWAP1
0x36c SLOAD
0x36d SWAP1
0x36e PUSH2 0x100
0x371 EXP
0x372 SWAP1
0x373 DIV
0x374 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x389 AND
0x38a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39f AND
0x3a0 PUSH2 0x8fc
0x3a3 DUP5
0x3a4 DUP7
0x3a5 SUB
0x3a6 SWAP1
0x3a7 DUP2
0x3a8 ISZERO
0x3a9 MUL
0x3aa SWAP1
0x3ab PUSH1 0x40
0x3ad MLOAD
0x3ae PUSH1 0x0
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 DUP4
0x3b5 SUB
0x3b6 DUP2
0x3b7 DUP6
0x3b8 DUP9
0x3b9 DUP9
0x3ba CALL
0x3bb SWAP4
0x3bc POP
0x3bd POP
0x3be POP
0x3bf POP
0x3c0 ISZERO
0x3c1 ISZERO
0x3c2 PUSH2 0x3ca
0x3c5 JUMPI
---
0x35c: JUMPDEST 
0x360: V232 = 0x40
0x362: V233 = M[0x40]
0x364: V234 = M[V233]
0x368: V235 = 0x0
0x36c: V236 = S[0x0]
0x36e: V237 = 0x100
0x371: V238 = EXP 0x100 0x0
0x373: V239 = DIV V236 0x1
0x374: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x389: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x38a: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x3a0: V244 = 0x8fc
0x3a5: V245 = SUB V47 S5
0x3a8: V246 = ISZERO V245
0x3a9: V247 = MUL V246 0x8fc
0x3ab: V248 = 0x40
0x3ad: V249 = M[0x40]
0x3ae: V250 = 0x0
0x3b0: V251 = 0x40
0x3b2: V252 = M[0x40]
0x3b5: V253 = SUB V249 V252
0x3ba: V254 = CALL V247 V243 V245 V252 V253 V252 0x0
0x3c0: V255 = ISZERO V254
0x3c1: V256 = ISZERO V255
0x3c2: V257 = 0x3ca
0x3c5: JUMPI 0x3ca V256
---
Entry stack: [V10, 0x3d2, V47, S5, V100, S3, V190, 0xa9059cbb, V213]
Stack pops: 7
Stack additions: [S6, S5, S4, S3]
Exit stack: [V10, 0x3d2, V47, S5, V100, S3]

================================

Block 0x3c6
[0x3c6:0x3c9]
---
Predecessors: [0x35c]
Successors: []
---
0x3c6 PUSH1 0x0
0x3c8 DUP1
0x3c9 REVERT
---
0x3c6: V258 = 0x0
0x3c9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3d2, V47, S2, V100, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, S2, V100, S0]

================================

Block 0x3ca
[0x3ca:0x3ca]
---
Predecessors: [0x35c]
Successors: [0x3cb]
---
0x3ca JUMPDEST
---
0x3ca: JUMPDEST 
---
Entry stack: [V10, 0x3d2, V47, S2, V100, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, S2, V100, S0]

================================

Block 0x3cb
[0x3cb:0x3cb]
---
Predecessors: [0x275, 0x3ca]
Successors: [0x3cc]
---
0x3cb JUMPDEST
---
0x3cb: JUMPDEST 
---
Entry stack: [V10, 0x3d2, V47, S2, V100, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d2, V47, S2, V100, S0]

================================

Block 0x3cc
[0x3cc:0x3d1]
---
Predecessors: [0x3cb]
Successors: [0x3d2]
---
0x3cc JUMPDEST
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 JUMP
---
0x3cc: JUMPDEST 
0x3d1: JUMP 0x3d2
---
Entry stack: [V10, 0x3d2, V47, S2, V100, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d2
[0x3d2:0x3d3]
---
Predecessors: [0x3cc]
Successors: []
---
0x3d2 JUMPDEST
0x3d3 STOP
---
0x3d2: JUMPDEST 
0x3d3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d4
[0x3d4:0x3da]
---
Predecessors: [0xb]
Successors: [0x3db, 0x3df]
---
0x3d4 JUMPDEST
0x3d5 CALLVALUE
0x3d6 ISZERO
0x3d7 PUSH2 0x3df
0x3da JUMPI
---
0x3d4: JUMPDEST 
0x3d5: V259 = CALLVALUE
0x3d6: V260 = ISZERO V259
0x3d7: V261 = 0x3df
0x3da: JUMPI 0x3df V260
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3db
[0x3db:0x3de]
---
Predecessors: [0x3d4]
Successors: []
---
0x3db PUSH1 0x0
0x3dd DUP1
0x3de REVERT
---
0x3db: V262 = 0x0
0x3de: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3df
[0x3df:0x3e6]
---
Predecessors: [0x3d4]
Successors: [0x5bb]
---
0x3df JUMPDEST
0x3e0 PUSH2 0x3e7
0x3e3 PUSH2 0x5bb
0x3e6 JUMP
---
0x3df: JUMPDEST 
0x3e0: V263 = 0x3e7
0x3e3: V264 = 0x5bb
0x3e6: JUMP 0x5bb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3e7]
Exit stack: [V10, 0x3e7]

================================

Block 0x3e7
[0x3e7:0x3fc]
---
Predecessors: [0x5bb]
Successors: []
---
0x3e7 JUMPDEST
0x3e8 PUSH1 0x40
0x3ea MLOAD
0x3eb DUP1
0x3ec DUP3
0x3ed DUP2
0x3ee MSTORE
0x3ef PUSH1 0x20
0x3f1 ADD
0x3f2 SWAP2
0x3f3 POP
0x3f4 POP
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 DUP1
0x3f9 SWAP2
0x3fa SUB
0x3fb SWAP1
0x3fc RETURN
---
0x3e7: JUMPDEST 
0x3e8: V265 = 0x40
0x3ea: V266 = M[0x40]
0x3ee: M[V266] = V387
0x3ef: V267 = 0x20
0x3f1: V268 = ADD 0x20 V266
0x3f5: V269 = 0x40
0x3f7: V270 = M[0x40]
0x3fa: V271 = SUB V268 V270
0x3fc: RETURN V270 V271
---
Entry stack: [V10, 0x3e7, V387]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3e7]

================================

Block 0x3fd
[0x3fd:0x403]
---
Predecessors: [0x3f]
Successors: [0x404, 0x408]
---
0x3fd JUMPDEST
0x3fe CALLVALUE
0x3ff ISZERO
0x400 PUSH2 0x408
0x403 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V272 = CALLVALUE
0x3ff: V273 = ISZERO V272
0x400: V274 = 0x408
0x403: JUMPI 0x408 V273
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x404
[0x404:0x407]
---
Predecessors: [0x3fd]
Successors: []
---
0x404 PUSH1 0x0
0x406 DUP1
0x407 REVERT
---
0x404: V275 = 0x0
0x407: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x408
[0x408:0x445]
---
Predecessors: [0x3fd]
Successors: [0x5c1]
---
0x408 JUMPDEST
0x409 PUSH2 0x446
0x40c PUSH1 0x4
0x40e DUP1
0x40f DUP1
0x410 CALLDATALOAD
0x411 SWAP1
0x412 PUSH1 0x20
0x414 ADD
0x415 SWAP1
0x416 SWAP2
0x417 SWAP1
0x418 DUP1
0x419 CALLDATALOAD
0x41a SWAP1
0x41b PUSH1 0x20
0x41d ADD
0x41e SWAP1
0x41f SWAP2
0x420 SWAP1
0x421 DUP1
0x422 CALLDATALOAD
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 AND
0x439 SWAP1
0x43a PUSH1 0x20
0x43c ADD
0x43d SWAP1
0x43e SWAP2
0x43f SWAP1
0x440 POP
0x441 POP
0x442 PUSH2 0x5c1
0x445 JUMP
---
0x408: JUMPDEST 
0x409: V276 = 0x446
0x40c: V277 = 0x4
0x410: V278 = CALLDATALOAD 0x4
0x412: V279 = 0x20
0x414: V280 = ADD 0x20 0x4
0x419: V281 = CALLDATALOAD 0x24
0x41b: V282 = 0x20
0x41d: V283 = ADD 0x20 0x24
0x422: V284 = CALLDATALOAD 0x44
0x423: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x43a: V287 = 0x20
0x43c: V288 = ADD 0x20 0x44
0x442: V289 = 0x5c1
0x445: JUMP 0x5c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x446, V278, V281, V286]
Exit stack: [V10, 0x446, V278, V281, V286]

================================

Block 0x446
[0x446:0x447]
---
Predecessors: [0x69f]
Successors: []
---
0x446 JUMPDEST
0x447 STOP
---
0x446: JUMPDEST 
0x447: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x448
[0x448:0x44e]
---
Predecessors: [0x4a]
Successors: [0x44f, 0x453]
---
0x448 JUMPDEST
0x449 CALLVALUE
0x44a ISZERO
0x44b PUSH2 0x453
0x44e JUMPI
---
0x448: JUMPDEST 
0x449: V290 = CALLVALUE
0x44a: V291 = ISZERO V290
0x44b: V292 = 0x453
0x44e: JUMPI 0x453 V291
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44f
[0x44f:0x452]
---
Predecessors: [0x448]
Successors: []
---
0x44f PUSH1 0x0
0x451 DUP1
0x452 REVERT
---
0x44f: V293 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x453
[0x453:0x45a]
---
Predecessors: [0x448]
Successors: [0x6a4]
---
0x453 JUMPDEST
0x454 PUSH2 0x45b
0x457 PUSH2 0x6a4
0x45a JUMP
---
0x453: JUMPDEST 
0x454: V294 = 0x45b
0x457: V295 = 0x6a4
0x45a: JUMP 0x6a4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x45b]
Exit stack: [V10, 0x45b]

================================

Block 0x45b
[0x45b:0x45c]
---
Predecessors: [0x709]
Successors: []
---
0x45b JUMPDEST
0x45c STOP
---
0x45b: JUMPDEST 
0x45c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45d
[0x45d:0x463]
---
Predecessors: [0x55]
Successors: [0x464, 0x468]
---
0x45d JUMPDEST
0x45e CALLVALUE
0x45f ISZERO
0x460 PUSH2 0x468
0x463 JUMPI
---
0x45d: JUMPDEST 
0x45e: V296 = CALLVALUE
0x45f: V297 = ISZERO V296
0x460: V298 = 0x468
0x463: JUMPI 0x468 V297
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x45d]
Successors: []
---
0x464 PUSH1 0x0
0x466 DUP1
0x467 REVERT
---
0x464: V299 = 0x0
0x467: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x468
[0x468:0x46f]
---
Predecessors: [0x45d]
Successors: [0x70b]
---
0x468 JUMPDEST
0x469 PUSH2 0x470
0x46c PUSH2 0x70b
0x46f JUMP
---
0x468: JUMPDEST 
0x469: V300 = 0x470
0x46c: V301 = 0x70b
0x46f: JUMP 0x70b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x470]
Exit stack: [V10, 0x470]

================================

Block 0x470
[0x470:0x4b1]
---
Predecessors: [0x70b]
Successors: []
---
0x470 JUMPDEST
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP1
0x475 DUP3
0x476 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48b AND
0x48c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a1 AND
0x4a2 DUP2
0x4a3 MSTORE
0x4a4 PUSH1 0x20
0x4a6 ADD
0x4a7 SWAP2
0x4a8 POP
0x4a9 POP
0x4aa PUSH1 0x40
0x4ac MLOAD
0x4ad DUP1
0x4ae SWAP2
0x4af SUB
0x4b0 SWAP1
0x4b1 RETURN
---
0x470: JUMPDEST 
0x471: V302 = 0x40
0x473: V303 = M[0x40]
0x476: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x48b: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x48c: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x4a3: M[V303] = V307
0x4a4: V308 = 0x20
0x4a6: V309 = ADD 0x20 V303
0x4aa: V310 = 0x40
0x4ac: V311 = M[0x40]
0x4af: V312 = SUB V309 V311
0x4b1: RETURN V311 V312
---
Entry stack: [V10, 0x470, V477]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x470]

================================

Block 0x4b2
[0x4b2:0x4b8]
---
Predecessors: [0x60]
Successors: [0x4b9, 0x4bd]
---
0x4b2 JUMPDEST
0x4b3 CALLVALUE
0x4b4 ISZERO
0x4b5 PUSH2 0x4bd
0x4b8 JUMPI
---
0x4b2: JUMPDEST 
0x4b3: V313 = CALLVALUE
0x4b4: V314 = ISZERO V313
0x4b5: V315 = 0x4bd
0x4b8: JUMPI 0x4bd V314
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b9
[0x4b9:0x4bc]
---
Predecessors: [0x4b2]
Successors: []
---
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc REVERT
---
0x4b9: V316 = 0x0
0x4bc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4bd
[0x4bd:0x4c4]
---
Predecessors: [0x4b2]
Successors: [0x731]
---
0x4bd JUMPDEST
0x4be PUSH2 0x4c5
0x4c1 PUSH2 0x731
0x4c4 JUMP
---
0x4bd: JUMPDEST 
0x4be: V317 = 0x4c5
0x4c1: V318 = 0x731
0x4c4: JUMP 0x731
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4c5]
Exit stack: [V10, 0x4c5]

================================

Block 0x4c5
[0x4c5:0x4c6]
---
Predecessors: []
Successors: []
---
0x4c5 JUMPDEST
0x4c6 STOP
---
0x4c5: JUMPDEST 
0x4c6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4c7
[0x4c7:0x4cd]
---
Predecessors: [0x6b]
Successors: [0x4ce, 0x4d2]
---
0x4c7 JUMPDEST
0x4c8 CALLVALUE
0x4c9 ISZERO
0x4ca PUSH2 0x4d2
0x4cd JUMPI
---
0x4c7: JUMPDEST 
0x4c8: V319 = CALLVALUE
0x4c9: V320 = ISZERO V319
0x4ca: V321 = 0x4d2
0x4cd: JUMPI 0x4d2 V320
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ce
[0x4ce:0x4d1]
---
Predecessors: [0x4c7]
Successors: []
---
0x4ce PUSH1 0x0
0x4d0 DUP1
0x4d1 REVERT
---
0x4ce: V322 = 0x0
0x4d1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4d2
[0x4d2:0x4d9]
---
Predecessors: [0x4c7]
Successors: [0x7c9]
---
0x4d2 JUMPDEST
0x4d3 PUSH2 0x4da
0x4d6 PUSH2 0x7c9
0x4d9 JUMP
---
0x4d2: JUMPDEST 
0x4d3: V323 = 0x4da
0x4d6: V324 = 0x7c9
0x4d9: JUMP 0x7c9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4da]
Exit stack: [V10, 0x4da]

================================

Block 0x4da
[0x4da:0x4e8]
---
Predecessors: [0x7c9]
Successors: [0x4e9, 0x4ea]
---
0x4da JUMPDEST
0x4db PUSH1 0x40
0x4dd MLOAD
0x4de DUP1
0x4df DUP3
0x4e0 PUSH1 0x3
0x4e2 DUP2
0x4e3 GT
0x4e4 ISZERO
0x4e5 PUSH2 0x4ea
0x4e8 JUMPI
---
0x4da: JUMPDEST 
0x4db: V325 = 0x40
0x4dd: V326 = M[0x40]
0x4e0: V327 = 0x3
0x4e3: V328 = GT V511 0x3
0x4e4: V329 = ISZERO V328
0x4e5: V330 = 0x4ea
0x4e8: JUMPI 0x4ea V329
---
Entry stack: [V10, 0x4da, V511]
Stack pops: 1
Stack additions: [S0, V326, V326, S0]
Exit stack: [V10, 0x4da, V511, V326, V326, V511]

================================

Block 0x4e9
[0x4e9:0x4e9]
---
Predecessors: [0x4da]
Successors: []
---
0x4e9 INVALID
---
0x4e9: INVALID 
---
Entry stack: [V10, 0x4da, V511, V326, V326, V511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4da, V511, V326, V326, V511]

================================

Block 0x4ea
[0x4ea:0x4fd]
---
Predecessors: [0x4da]
Successors: []
---
0x4ea JUMPDEST
0x4eb PUSH1 0xff
0x4ed AND
0x4ee DUP2
0x4ef MSTORE
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 SWAP2
0x4f4 POP
0x4f5 POP
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 DUP1
0x4fa SWAP2
0x4fb SUB
0x4fc SWAP1
0x4fd RETURN
---
0x4ea: JUMPDEST 
0x4eb: V331 = 0xff
0x4ed: V332 = AND 0xff V511
0x4ef: M[V326] = V332
0x4f0: V333 = 0x20
0x4f2: V334 = ADD 0x20 V326
0x4f6: V335 = 0x40
0x4f8: V336 = M[0x40]
0x4fb: V337 = SUB V334 V336
0x4fd: RETURN V336 V337
---
Entry stack: [V10, 0x4da, V511, V326, V326, V511]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x4da]

================================

Block 0x4fe
[0x4fe:0x504]
---
Predecessors: [0x76]
Successors: [0x505, 0x509]
---
0x4fe JUMPDEST
0x4ff CALLVALUE
0x500 ISZERO
0x501 PUSH2 0x509
0x504 JUMPI
---
0x4fe: JUMPDEST 
0x4ff: V338 = CALLVALUE
0x500: V339 = ISZERO V338
0x501: V340 = 0x509
0x504: JUMPI 0x509 V339
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x505
[0x505:0x508]
---
Predecessors: [0x4fe]
Successors: []
---
0x505 PUSH1 0x0
0x507 DUP1
0x508 REVERT
---
0x505: V341 = 0x0
0x508: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x509
[0x509:0x510]
---
Predecessors: [0x4fe]
Successors: [0x7dc]
---
0x509 JUMPDEST
0x50a PUSH2 0x511
0x50d PUSH2 0x7dc
0x510 JUMP
---
0x509: JUMPDEST 
0x50a: V342 = 0x511
0x50d: V343 = 0x7dc
0x510: JUMP 0x7dc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x511]
Exit stack: [V10, 0x511]

================================

Block 0x511
[0x511:0x512]
---
Predecessors: [0x8d2]
Successors: []
---
0x511 JUMPDEST
0x512 STOP
---
0x511: JUMPDEST 
0x512: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x513
[0x513:0x519]
---
Predecessors: [0x81]
Successors: [0x51a, 0x51e]
---
0x513 JUMPDEST
0x514 CALLVALUE
0x515 ISZERO
0x516 PUSH2 0x51e
0x519 JUMPI
---
0x513: JUMPDEST 
0x514: V344 = CALLVALUE
0x515: V345 = ISZERO V344
0x516: V346 = 0x51e
0x519: JUMPI 0x51e V345
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51a
[0x51a:0x51d]
---
Predecessors: [0x513]
Successors: []
---
0x51a PUSH1 0x0
0x51c DUP1
0x51d REVERT
---
0x51a: V347 = 0x0
0x51d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51e
[0x51e:0x525]
---
Predecessors: [0x513]
Successors: [0x8d4]
---
0x51e JUMPDEST
0x51f PUSH2 0x526
0x522 PUSH2 0x8d4
0x525 JUMP
---
0x51e: JUMPDEST 
0x51f: V348 = 0x526
0x522: V349 = 0x8d4
0x525: JUMP 0x8d4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x526]
Exit stack: [V10, 0x526]

================================

Block 0x526
[0x526:0x527]
---
Predecessors: [0xb29]
Successors: []
---
0x526 JUMPDEST
0x527 STOP
---
0x526: JUMPDEST 
0x527: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x528
[0x528:0x52e]
---
Predecessors: [0x8c]
Successors: [0x52f, 0x533]
---
0x528 JUMPDEST
0x529 CALLVALUE
0x52a ISZERO
0x52b PUSH2 0x533
0x52e JUMPI
---
0x528: JUMPDEST 
0x529: V350 = CALLVALUE
0x52a: V351 = ISZERO V350
0x52b: V352 = 0x533
0x52e: JUMPI 0x533 V351
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x528]
Successors: []
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
---
0x52f: V353 = 0x0
0x532: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x533
[0x533:0x53a]
---
Predecessors: [0x528]
Successors: [0xb2c]
---
0x533 JUMPDEST
0x534 PUSH2 0x53b
0x537 PUSH2 0xb2c
0x53a JUMP
---
0x533: JUMPDEST 
0x534: V354 = 0x53b
0x537: V355 = 0xb2c
0x53a: JUMP 0xb2c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x53b]
Exit stack: [V10, 0x53b]

================================

Block 0x53b
[0x53b:0x57c]
---
Predecessors: [0xb2c]
Successors: []
---
0x53b JUMPDEST
0x53c PUSH1 0x40
0x53e MLOAD
0x53f DUP1
0x540 DUP3
0x541 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x556 AND
0x557 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56c AND
0x56d DUP2
0x56e MSTORE
0x56f PUSH1 0x20
0x571 ADD
0x572 SWAP2
0x573 POP
0x574 POP
0x575 PUSH1 0x40
0x577 MLOAD
0x578 DUP1
0x579 SWAP2
0x57a SUB
0x57b SWAP1
0x57c RETURN
---
0x53b: JUMPDEST 
0x53c: V356 = 0x40
0x53e: V357 = M[0x40]
0x541: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x556: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0x557: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x56c: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x56e: M[V357] = V361
0x56f: V362 = 0x20
0x571: V363 = ADD 0x20 V357
0x575: V364 = 0x40
0x577: V365 = M[0x40]
0x57a: V366 = SUB V363 V365
0x57c: RETURN V365 V366
---
Entry stack: [V10, 0x53b, V704]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x53b]

================================

Block 0x57d
[0x57d:0x583]
---
Predecessors: [0x97]
Successors: [0x584, 0x588]
---
0x57d JUMPDEST
0x57e CALLVALUE
0x57f ISZERO
0x580 PUSH2 0x588
0x583 JUMPI
---
0x57d: JUMPDEST 
0x57e: V367 = CALLVALUE
0x57f: V368 = ISZERO V367
0x580: V369 = 0x588
0x583: JUMPI 0x588 V368
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x584
[0x584:0x587]
---
Predecessors: [0x57d]
Successors: []
---
0x584 PUSH1 0x0
0x586 DUP1
0x587 REVERT
---
0x584: V370 = 0x0
0x587: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x588
[0x588:0x58f]
---
Predecessors: [0x57d]
Successors: [0xb51]
---
0x588 JUMPDEST
0x589 PUSH2 0x590
0x58c PUSH2 0xb51
0x58f JUMP
---
0x588: JUMPDEST 
0x589: V371 = 0x590
0x58c: V372 = 0xb51
0x58f: JUMP 0xb51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x590]
Exit stack: [V10, 0x590]

================================

Block 0x590
[0x590:0x5a5]
---
Predecessors: [0xb51]
Successors: []
---
0x590 JUMPDEST
0x591 PUSH1 0x40
0x593 MLOAD
0x594 DUP1
0x595 DUP3
0x596 DUP2
0x597 MSTORE
0x598 PUSH1 0x20
0x59a ADD
0x59b SWAP2
0x59c POP
0x59d POP
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 DUP1
0x5a2 SWAP2
0x5a3 SUB
0x5a4 SWAP1
0x5a5 RETURN
---
0x590: JUMPDEST 
0x591: V373 = 0x40
0x593: V374 = M[0x40]
0x597: M[V374] = V706
0x598: V375 = 0x20
0x59a: V376 = ADD 0x20 V374
0x59e: V377 = 0x40
0x5a0: V378 = M[0x40]
0x5a3: V379 = SUB V376 V378
0x5a5: RETURN V378 V379
---
Entry stack: [V10, 0x590, V706]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x590]

================================

Block 0x5a6
[0x5a6:0x5ac]
---
Predecessors: [0xa2]
Successors: [0x5ad, 0x5b1]
---
0x5a6 JUMPDEST
0x5a7 CALLVALUE
0x5a8 ISZERO
0x5a9 PUSH2 0x5b1
0x5ac JUMPI
---
0x5a6: JUMPDEST 
0x5a7: V380 = CALLVALUE
0x5a8: V381 = ISZERO V380
0x5a9: V382 = 0x5b1
0x5ac: JUMPI 0x5b1 V381
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5ad
[0x5ad:0x5b0]
---
Predecessors: [0x5a6]
Successors: []
---
0x5ad PUSH1 0x0
0x5af DUP1
0x5b0 REVERT
---
0x5ad: V383 = 0x0
0x5b0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5b1
[0x5b1:0x5b8]
---
Predecessors: [0x5a6]
Successors: [0xb57]
---
0x5b1 JUMPDEST
0x5b2 PUSH2 0x5b9
0x5b5 PUSH2 0xb57
0x5b8 JUMP
---
0x5b1: JUMPDEST 
0x5b2: V384 = 0x5b9
0x5b5: V385 = 0xb57
0x5b8: JUMP 0xb57
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b9]
Exit stack: [V10, 0x5b9]

================================

Block 0x5b9
[0x5b9:0x5ba]
---
Predecessors: [0xbd8]
Successors: []
---
0x5b9 JUMPDEST
0x5ba STOP
---
0x5b9: JUMPDEST 
0x5ba: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5bb
[0x5bb:0x5c0]
---
Predecessors: [0x3df]
Successors: [0x3e7]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x2
0x5be SLOAD
0x5bf DUP2
0x5c0 JUMP
---
0x5bb: JUMPDEST 
0x5bc: V386 = 0x2
0x5be: V387 = S[0x2]
0x5c0: JUMP 0x3e7
---
Entry stack: [V10, 0x3e7]
Stack pops: 1
Stack additions: [S0, V387]
Exit stack: [V10, 0x3e7, V387]

================================

Block 0x5c1
[0x5c1:0x617]
---
Predecessors: [0x408]
Successors: [0x618, 0x61c]
---
0x5c1 JUMPDEST
0x5c2 PUSH1 0x0
0x5c4 DUP1
0x5c5 SWAP1
0x5c6 SLOAD
0x5c7 SWAP1
0x5c8 PUSH2 0x100
0x5cb EXP
0x5cc SWAP1
0x5cd DIV
0x5ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e3 AND
0x5e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f9 AND
0x5fa CALLER
0x5fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x610 AND
0x611 EQ
0x612 ISZERO
0x613 ISZERO
0x614 PUSH2 0x61c
0x617 JUMPI
---
0x5c1: JUMPDEST 
0x5c2: V388 = 0x0
0x5c6: V389 = S[0x0]
0x5c8: V390 = 0x100
0x5cb: V391 = EXP 0x100 0x0
0x5cd: V392 = DIV V389 0x1
0x5ce: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e3: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x5e4: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x5fa: V397 = CALLER
0x5fb: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x610: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x611: V400 = EQ V399 V396
0x612: V401 = ISZERO V400
0x613: V402 = ISZERO V401
0x614: V403 = 0x61c
0x617: JUMPI 0x61c V402
---
Entry stack: [V10, 0x446, V278, V281, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x446, V278, V281, V286]

================================

Block 0x618
[0x618:0x61b]
---
Predecessors: [0x5c1]
Successors: []
---
0x618 PUSH1 0x0
0x61a DUP1
0x61b REVERT
---
0x618: V404 = 0x0
0x61b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x446, V278, V281, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x446, V278, V281, V286]

================================

Block 0x61c
[0x61c:0x638]
---
Predecessors: [0x5c1]
Successors: [0x639, 0x63a]
---
0x61c JUMPDEST
0x61d PUSH1 0x1
0x61f DUP1
0x620 PUSH1 0x14
0x622 PUSH2 0x100
0x625 EXP
0x626 DUP2
0x627 SLOAD
0x628 DUP2
0x629 PUSH1 0xff
0x62b MUL
0x62c NOT
0x62d AND
0x62e SWAP1
0x62f DUP4
0x630 PUSH1 0x3
0x632 DUP2
0x633 GT
0x634 ISZERO
0x635 PUSH2 0x63a
0x638 JUMPI
---
0x61c: JUMPDEST 
0x61d: V405 = 0x1
0x620: V406 = 0x14
0x622: V407 = 0x100
0x625: V408 = EXP 0x100 0x14
0x627: V409 = S[0x1]
0x629: V410 = 0xff
0x62b: V411 = MUL 0xff 0x10000000000000000000000000000000000000000
0x62c: V412 = NOT 0xff0000000000000000000000000000000000000000
0x62d: V413 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V409
0x630: V414 = 0x3
0x633: V415 = GT 0x1 0x3
0x634: V416 = ISZERO 0x0
0x635: V417 = 0x63a
0x638: JUMPI 0x63a 0x1
---
Entry stack: [V10, 0x446, V278, V281, V286]
Stack pops: 0
Stack additions: [0x1, 0x1, V413, 0x10000000000000000000000000000000000000000, 0x1]
Exit stack: [V10, 0x446, V278, V281, V286, 0x1, 0x1, V413, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x639
[0x639:0x639]
---
Predecessors: [0x61c]
Successors: []
---
0x639 INVALID
---
0x639: INVALID 
---
Entry stack: [V10, 0x446, V278, V281, V286, 0x1, 0x1, V413, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x446, V278, V281, V286, 0x1, 0x1, V413, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x63a
[0x63a:0x69d]
---
Predecessors: [0x61c]
Successors: [0x69e]
---
0x63a JUMPDEST
0x63b MUL
0x63c OR
0x63d SWAP1
0x63e SSTORE
0x63f POP
0x640 PUSH1 0x3c
0x642 DUP4
0x643 MUL
0x644 TIMESTAMP
0x645 ADD
0x646 PUSH1 0x2
0x648 DUP2
0x649 SWAP1
0x64a SSTORE
0x64b POP
0x64c PUSH8 0xde0b6b3a7640000
0x655 DUP3
0x656 MUL
0x657 PUSH1 0x3
0x659 DUP2
0x65a SWAP1
0x65b SSTORE
0x65c POP
0x65d DUP1
0x65e PUSH1 0x1
0x660 PUSH1 0x0
0x662 PUSH2 0x100
0x665 EXP
0x666 DUP2
0x667 SLOAD
0x668 DUP2
0x669 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67e MUL
0x67f NOT
0x680 AND
0x681 SWAP1
0x682 DUP4
0x683 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x698 AND
0x699 MUL
0x69a OR
0x69b SWAP1
0x69c SSTORE
0x69d POP
---
0x63a: JUMPDEST 
0x63b: V418 = MUL 0x1 0x10000000000000000000000000000000000000000
0x63c: V419 = OR 0x10000000000000000000000000000000000000000 V413
0x63e: S[0x1] = V419
0x640: V420 = 0x3c
0x643: V421 = MUL V278 0x3c
0x644: V422 = TIMESTAMP
0x645: V423 = ADD V422 V421
0x646: V424 = 0x2
0x64a: S[0x2] = V423
0x64c: V425 = 0xde0b6b3a7640000
0x656: V426 = MUL V281 0xde0b6b3a7640000
0x657: V427 = 0x3
0x65b: S[0x3] = V426
0x65e: V428 = 0x1
0x660: V429 = 0x0
0x662: V430 = 0x100
0x665: V431 = EXP 0x100 0x0
0x667: V432 = S[0x1]
0x669: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V434 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x67f: V435 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x680: V436 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V432
0x683: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x698: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x699: V439 = MUL V438 0x1
0x69a: V440 = OR V439 V436
0x69c: S[0x1] = V440
---
Entry stack: [V10, 0x446, V278, V281, V286, 0x1, 0x1, V413, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 8
Stack additions: [S7, S6, S5]
Exit stack: [V10, 0x446, V278, V281, V286]

================================

Block 0x69e
[0x69e:0x69e]
---
Predecessors: [0x63a]
Successors: [0x69f]
---
0x69e JUMPDEST
---
0x69e: JUMPDEST 
---
Entry stack: [V10, 0x446, V278, V281, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x446, V278, V281, V286]

================================

Block 0x69f
[0x69f:0x6a3]
---
Predecessors: [0x69e]
Successors: [0x446]
---
0x69f JUMPDEST
0x6a0 POP
0x6a1 POP
0x6a2 POP
0x6a3 JUMP
---
0x69f: JUMPDEST 
0x6a3: JUMP 0x446
---
Entry stack: [V10, 0x446, V278, V281, V286]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x6a4
[0x6a4:0x701]
---
Predecessors: [0x453]
Successors: [0x702, 0x703]
---
0x6a4 JUMPDEST
0x6a5 CALLER
0x6a6 PUSH1 0x0
0x6a8 DUP1
0x6a9 PUSH2 0x100
0x6ac EXP
0x6ad DUP2
0x6ae SLOAD
0x6af DUP2
0x6b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c5 MUL
0x6c6 NOT
0x6c7 AND
0x6c8 SWAP1
0x6c9 DUP4
0x6ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6df AND
0x6e0 MUL
0x6e1 OR
0x6e2 SWAP1
0x6e3 SSTORE
0x6e4 POP
0x6e5 PUSH1 0x0
0x6e7 PUSH1 0x1
0x6e9 PUSH1 0x14
0x6eb PUSH2 0x100
0x6ee EXP
0x6ef DUP2
0x6f0 SLOAD
0x6f1 DUP2
0x6f2 PUSH1 0xff
0x6f4 MUL
0x6f5 NOT
0x6f6 AND
0x6f7 SWAP1
0x6f8 DUP4
0x6f9 PUSH1 0x3
0x6fb DUP2
0x6fc GT
0x6fd ISZERO
0x6fe PUSH2 0x703
0x701 JUMPI
---
0x6a4: JUMPDEST 
0x6a5: V441 = CALLER
0x6a6: V442 = 0x0
0x6a9: V443 = 0x100
0x6ac: V444 = EXP 0x100 0x0
0x6ae: V445 = S[0x0]
0x6b0: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c5: V447 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6c6: V448 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6c7: V449 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V445
0x6ca: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x6df: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x6e0: V452 = MUL V451 0x1
0x6e1: V453 = OR V452 V449
0x6e3: S[0x0] = V453
0x6e5: V454 = 0x0
0x6e7: V455 = 0x1
0x6e9: V456 = 0x14
0x6eb: V457 = 0x100
0x6ee: V458 = EXP 0x100 0x14
0x6f0: V459 = S[0x1]
0x6f2: V460 = 0xff
0x6f4: V461 = MUL 0xff 0x10000000000000000000000000000000000000000
0x6f5: V462 = NOT 0xff0000000000000000000000000000000000000000
0x6f6: V463 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V459
0x6f9: V464 = 0x3
0x6fc: V465 = GT 0x0 0x3
0x6fd: V466 = ISZERO 0x0
0x6fe: V467 = 0x703
0x701: JUMPI 0x703 0x1
---
Entry stack: [V10, 0x45b]
Stack pops: 0
Stack additions: [0x0, 0x1, V463, 0x10000000000000000000000000000000000000000, 0x0]
Exit stack: [V10, 0x45b, 0x0, 0x1, V463, 0x10000000000000000000000000000000000000000, 0x0]

================================

Block 0x702
[0x702:0x702]
---
Predecessors: [0x6a4]
Successors: []
---
0x702 INVALID
---
0x702: INVALID 
---
Entry stack: [V10, 0x45b, 0x0, 0x1, V463, 0x10000000000000000000000000000000000000000, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x45b, 0x0, 0x1, V463, 0x10000000000000000000000000000000000000000, 0x0]

================================

Block 0x703
[0x703:0x708]
---
Predecessors: [0x6a4]
Successors: [0x709]
---
0x703 JUMPDEST
0x704 MUL
0x705 OR
0x706 SWAP1
0x707 SSTORE
0x708 POP
---
0x703: JUMPDEST 
0x704: V468 = MUL 0x0 0x10000000000000000000000000000000000000000
0x705: V469 = OR 0x0 V463
0x707: S[0x1] = V469
---
Entry stack: [V10, 0x45b, 0x0, 0x1, V463, 0x10000000000000000000000000000000000000000, 0x0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x45b]

================================

Block 0x709
[0x709:0x70a]
---
Predecessors: [0x703]
Successors: [0x45b]
---
0x709 JUMPDEST
0x70a JUMP
---
0x709: JUMPDEST 
0x70a: JUMP 0x45b
---
Entry stack: [V10, 0x45b]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x70b
[0x70b:0x730]
---
Predecessors: [0x468]
Successors: [0x470]
---
0x70b JUMPDEST
0x70c PUSH1 0x1
0x70e PUSH1 0x0
0x710 SWAP1
0x711 SLOAD
0x712 SWAP1
0x713 PUSH2 0x100
0x716 EXP
0x717 SWAP1
0x718 DIV
0x719 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72e AND
0x72f DUP2
0x730 JUMP
---
0x70b: JUMPDEST 
0x70c: V470 = 0x1
0x70e: V471 = 0x0
0x711: V472 = S[0x1]
0x713: V473 = 0x100
0x716: V474 = EXP 0x100 0x0
0x718: V475 = DIV V472 0x1
0x719: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x72e: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x730: JUMP 0x470
---
Entry stack: [V10, 0x470]
Stack pops: 1
Stack additions: [S0, V477]
Exit stack: [V10, 0x470, V477]

================================

Block 0x731
[0x731:0x787]
---
Predecessors: [0x4bd]
Successors: [0x788, 0x78c]
---
0x731 JUMPDEST
0x732 PUSH1 0x0
0x734 DUP1
0x735 SWAP1
0x736 SLOAD
0x737 SWAP1
0x738 PUSH2 0x100
0x73b EXP
0x73c SWAP1
0x73d DIV
0x73e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x753 AND
0x754 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x769 AND
0x76a CALLER
0x76b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x780 AND
0x781 EQ
0x782 ISZERO
0x783 ISZERO
0x784 PUSH2 0x78c
0x787 JUMPI
---
0x731: JUMPDEST 
0x732: V478 = 0x0
0x736: V479 = S[0x0]
0x738: V480 = 0x100
0x73b: V481 = EXP 0x100 0x0
0x73d: V482 = DIV V479 0x1
0x73e: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x753: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x754: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x769: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x76a: V487 = CALLER
0x76b: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x780: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x781: V490 = EQ V489 V486
0x782: V491 = ISZERO V490
0x783: V492 = ISZERO V491
0x784: V493 = 0x78c
0x787: JUMPI 0x78c V492
---
Entry stack: [V10, 0x4c5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4c5]

================================

Block 0x788
[0x788:0x78b]
---
Predecessors: [0x731]
Successors: []
---
0x788 PUSH1 0x0
0x78a DUP1
0x78b REVERT
---
0x788: V494 = 0x0
0x78b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x4c5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4c5]

================================

Block 0x78c
[0x78c:0x7c5]
---
Predecessors: [0x731]
Successors: []
---
0x78c JUMPDEST
0x78d PUSH1 0x0
0x78f DUP1
0x790 SWAP1
0x791 SLOAD
0x792 SWAP1
0x793 PUSH2 0x100
0x796 EXP
0x797 SWAP1
0x798 DIV
0x799 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ae AND
0x7af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c4 AND
0x7c5 SELFDESTRUCT
---
0x78c: JUMPDEST 
0x78d: V495 = 0x0
0x791: V496 = S[0x0]
0x793: V497 = 0x100
0x796: V498 = EXP 0x100 0x0
0x798: V499 = DIV V496 0x1
0x799: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ae: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x7af: V502 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c4: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x7c5: SELFDESTRUCT V503
---
Entry stack: [V10, 0x4c5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4c5]

================================

Block 0x7c6
[0x7c6:0x7c6]
---
Predecessors: []
Successors: [0x7c7]
---
0x7c6 JUMPDEST
---
0x7c6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7c7
[0x7c7:0x7c8]
---
Predecessors: [0x7c6]
Successors: []
Has unresolved jump.
---
0x7c7 JUMPDEST
0x7c8 JUMP
---
0x7c7: JUMPDEST 
0x7c8: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7c9
[0x7c9:0x7db]
---
Predecessors: [0x4d2]
Successors: [0x4da]
---
0x7c9 JUMPDEST
0x7ca PUSH1 0x1
0x7cc PUSH1 0x14
0x7ce SWAP1
0x7cf SLOAD
0x7d0 SWAP1
0x7d1 PUSH2 0x100
0x7d4 EXP
0x7d5 SWAP1
0x7d6 DIV
0x7d7 PUSH1 0xff
0x7d9 AND
0x7da DUP2
0x7db JUMP
---
0x7c9: JUMPDEST 
0x7ca: V504 = 0x1
0x7cc: V505 = 0x14
0x7cf: V506 = S[0x1]
0x7d1: V507 = 0x100
0x7d4: V508 = EXP 0x100 0x14
0x7d6: V509 = DIV V506 0x10000000000000000000000000000000000000000
0x7d7: V510 = 0xff
0x7d9: V511 = AND 0xff V509
0x7db: JUMP 0x4da
---
Entry stack: [V10, 0x4da]
Stack pops: 1
Stack additions: [S0, V511]
Exit stack: [V10, 0x4da, V511]

================================

Block 0x7dc
[0x7dc:0x832]
---
Predecessors: [0x509]
Successors: [0x833, 0x837]
---
0x7dc JUMPDEST
0x7dd PUSH1 0x0
0x7df DUP1
0x7e0 SWAP1
0x7e1 SLOAD
0x7e2 SWAP1
0x7e3 PUSH2 0x100
0x7e6 EXP
0x7e7 SWAP1
0x7e8 DIV
0x7e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fe AND
0x7ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x814 AND
0x815 CALLER
0x816 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82b AND
0x82c EQ
0x82d ISZERO
0x82e ISZERO
0x82f PUSH2 0x837
0x832 JUMPI
---
0x7dc: JUMPDEST 
0x7dd: V512 = 0x0
0x7e1: V513 = S[0x0]
0x7e3: V514 = 0x100
0x7e6: V515 = EXP 0x100 0x0
0x7e8: V516 = DIV V513 0x1
0x7e9: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fe: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x7ff: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x814: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x815: V521 = CALLER
0x816: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x82b: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x82c: V524 = EQ V523 V520
0x82d: V525 = ISZERO V524
0x82e: V526 = ISZERO V525
0x82f: V527 = 0x837
0x832: JUMPI 0x837 V526
---
Entry stack: [V10, 0x511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x511]

================================

Block 0x833
[0x833:0x836]
---
Predecessors: [0x7dc]
Successors: []
---
0x833 PUSH1 0x0
0x835 DUP1
0x836 REVERT
---
0x833: V528 = 0x0
0x836: REVERT 0x0 0x0
---
Entry stack: [V10, 0x511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x511]

================================

Block 0x837
[0x837:0x857]
---
Predecessors: [0x7dc]
Successors: [0x858, 0x8d0]
---
0x837 JUMPDEST
0x838 PUSH1 0x0
0x83a ADDRESS
0x83b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x850 AND
0x851 BALANCE
0x852 GT
0x853 ISZERO
0x854 PUSH2 0x8d0
0x857 JUMPI
---
0x837: JUMPDEST 
0x838: V529 = 0x0
0x83a: V530 = ADDRESS
0x83b: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x850: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x851: V533 = BALANCE V532
0x852: V534 = GT V533 0x0
0x853: V535 = ISZERO V534
0x854: V536 = 0x8d0
0x857: JUMPI 0x8d0 V535
---
Entry stack: [V10, 0x511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x511]

================================

Block 0x858
[0x858:0x8ca]
---
Predecessors: [0x837]
Successors: [0x8cb, 0x8cf]
---
0x858 PUSH1 0x0
0x85a DUP1
0x85b SWAP1
0x85c SLOAD
0x85d SWAP1
0x85e PUSH2 0x100
0x861 EXP
0x862 SWAP1
0x863 DIV
0x864 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x879 AND
0x87a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88f AND
0x890 PUSH2 0x8fc
0x893 ADDRESS
0x894 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a9 AND
0x8aa BALANCE
0x8ab SWAP1
0x8ac DUP2
0x8ad ISZERO
0x8ae MUL
0x8af SWAP1
0x8b0 PUSH1 0x40
0x8b2 MLOAD
0x8b3 PUSH1 0x0
0x8b5 PUSH1 0x40
0x8b7 MLOAD
0x8b8 DUP1
0x8b9 DUP4
0x8ba SUB
0x8bb DUP2
0x8bc DUP6
0x8bd DUP9
0x8be DUP9
0x8bf CALL
0x8c0 SWAP4
0x8c1 POP
0x8c2 POP
0x8c3 POP
0x8c4 POP
0x8c5 ISZERO
0x8c6 ISZERO
0x8c7 PUSH2 0x8cf
0x8ca JUMPI
---
0x858: V537 = 0x0
0x85c: V538 = S[0x0]
0x85e: V539 = 0x100
0x861: V540 = EXP 0x100 0x0
0x863: V541 = DIV V538 0x1
0x864: V542 = 0xffffffffffffffffffffffffffffffffffffffff
0x879: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x87a: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x88f: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V543
0x890: V546 = 0x8fc
0x893: V547 = ADDRESS
0x894: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a9: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x8aa: V550 = BALANCE V549
0x8ad: V551 = ISZERO V550
0x8ae: V552 = MUL V551 0x8fc
0x8b0: V553 = 0x40
0x8b2: V554 = M[0x40]
0x8b3: V555 = 0x0
0x8b5: V556 = 0x40
0x8b7: V557 = M[0x40]
0x8ba: V558 = SUB V554 V557
0x8bf: V559 = CALL V552 V545 V550 V557 V558 V557 0x0
0x8c5: V560 = ISZERO V559
0x8c6: V561 = ISZERO V560
0x8c7: V562 = 0x8cf
0x8ca: JUMPI 0x8cf V561
---
Entry stack: [V10, 0x511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x511]

================================

Block 0x8cb
[0x8cb:0x8ce]
---
Predecessors: [0x858]
Successors: []
---
0x8cb PUSH1 0x0
0x8cd DUP1
0x8ce REVERT
---
0x8cb: V563 = 0x0
0x8ce: REVERT 0x0 0x0
---
Entry stack: [V10, 0x511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x511]

================================

Block 0x8cf
[0x8cf:0x8cf]
---
Predecessors: [0x858]
Successors: [0x8d0]
---
0x8cf JUMPDEST
---
0x8cf: JUMPDEST 
---
Entry stack: [V10, 0x511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x511]

================================

Block 0x8d0
[0x8d0:0x8d0]
---
Predecessors: [0x837, 0x8cf]
Successors: [0x8d1]
---
0x8d0 JUMPDEST
---
0x8d0: JUMPDEST 
---
Entry stack: [V10, 0x511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x511]

================================

Block 0x8d1
[0x8d1:0x8d1]
---
Predecessors: [0x8d0]
Successors: [0x8d2]
---
0x8d1 JUMPDEST
---
0x8d1: JUMPDEST 
---
Entry stack: [V10, 0x511]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x511]

================================

Block 0x8d2
[0x8d2:0x8d3]
---
Predecessors: [0x8d1]
Successors: [0x511]
---
0x8d2 JUMPDEST
0x8d3 JUMP
---
0x8d2: JUMPDEST 
0x8d3: JUMP 0x511
---
Entry stack: [V10, 0x511]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d4
[0x8d4:0x92c]
---
Predecessors: [0x51e]
Successors: [0x92d, 0x931]
---
0x8d4 JUMPDEST
0x8d5 PUSH1 0x0
0x8d7 DUP1
0x8d8 PUSH1 0x0
0x8da SWAP1
0x8db SLOAD
0x8dc SWAP1
0x8dd PUSH2 0x100
0x8e0 EXP
0x8e1 SWAP1
0x8e2 DIV
0x8e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f8 AND
0x8f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90e AND
0x90f CALLER
0x910 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x925 AND
0x926 EQ
0x927 ISZERO
0x928 ISZERO
0x929 PUSH2 0x931
0x92c JUMPI
---
0x8d4: JUMPDEST 
0x8d5: V564 = 0x0
0x8d8: V565 = 0x0
0x8db: V566 = S[0x0]
0x8dd: V567 = 0x100
0x8e0: V568 = EXP 0x100 0x0
0x8e2: V569 = DIV V566 0x1
0x8e3: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f8: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x8f9: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x90e: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x90f: V574 = CALLER
0x910: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0x925: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x926: V577 = EQ V576 V573
0x927: V578 = ISZERO V577
0x928: V579 = ISZERO V578
0x929: V580 = 0x931
0x92c: JUMPI 0x931 V579
---
Entry stack: [V10, 0x526]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x526, 0x0]

================================

Block 0x92d
[0x92d:0x930]
---
Predecessors: [0x8d4]
Successors: []
---
0x92d PUSH1 0x0
0x92f DUP1
0x930 REVERT
---
0x92d: V581 = 0x0
0x930: REVERT 0x0 0x0
---
Entry stack: [V10, 0x526, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x526, 0x0]

================================

Block 0x931
[0x931:0x9f1]
---
Predecessors: [0x8d4]
Successors: [0x9f2, 0x9f6]
---
0x931 JUMPDEST
0x932 PUSH1 0x1
0x934 PUSH1 0x0
0x936 SWAP1
0x937 SLOAD
0x938 SWAP1
0x939 PUSH2 0x100
0x93c EXP
0x93d SWAP1
0x93e DIV
0x93f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x954 AND
0x955 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96a AND
0x96b PUSH4 0x70a08231
0x970 ADDRESS
0x971 PUSH1 0x0
0x973 PUSH1 0x40
0x975 MLOAD
0x976 PUSH1 0x20
0x978 ADD
0x979 MSTORE
0x97a PUSH1 0x40
0x97c MLOAD
0x97d DUP3
0x97e PUSH4 0xffffffff
0x983 AND
0x984 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9a2 MUL
0x9a3 DUP2
0x9a4 MSTORE
0x9a5 PUSH1 0x4
0x9a7 ADD
0x9a8 DUP1
0x9a9 DUP3
0x9aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bf AND
0x9c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d5 AND
0x9d6 DUP2
0x9d7 MSTORE
0x9d8 PUSH1 0x20
0x9da ADD
0x9db SWAP2
0x9dc POP
0x9dd POP
0x9de PUSH1 0x20
0x9e0 PUSH1 0x40
0x9e2 MLOAD
0x9e3 DUP1
0x9e4 DUP4
0x9e5 SUB
0x9e6 DUP2
0x9e7 PUSH1 0x0
0x9e9 DUP8
0x9ea DUP1
0x9eb EXTCODESIZE
0x9ec ISZERO
0x9ed ISZERO
0x9ee PUSH2 0x9f6
0x9f1 JUMPI
---
0x931: JUMPDEST 
0x932: V582 = 0x1
0x934: V583 = 0x0
0x937: V584 = S[0x1]
0x939: V585 = 0x100
0x93c: V586 = EXP 0x100 0x0
0x93e: V587 = DIV V584 0x1
0x93f: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x954: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x955: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x96a: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x96b: V592 = 0x70a08231
0x970: V593 = ADDRESS
0x971: V594 = 0x0
0x973: V595 = 0x40
0x975: V596 = M[0x40]
0x976: V597 = 0x20
0x978: V598 = ADD 0x20 V596
0x979: M[V598] = 0x0
0x97a: V599 = 0x40
0x97c: V600 = M[0x40]
0x97e: V601 = 0xffffffff
0x983: V602 = AND 0xffffffff 0x70a08231
0x984: V603 = 0x100000000000000000000000000000000000000000000000000000000
0x9a2: V604 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x9a4: M[V600] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9a5: V605 = 0x4
0x9a7: V606 = ADD 0x4 V600
0x9aa: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bf: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x9c0: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d5: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V608
0x9d7: M[V606] = V610
0x9d8: V611 = 0x20
0x9da: V612 = ADD 0x20 V606
0x9de: V613 = 0x20
0x9e0: V614 = 0x40
0x9e2: V615 = M[0x40]
0x9e5: V616 = SUB V612 V615
0x9e7: V617 = 0x0
0x9eb: V618 = EXTCODESIZE V591
0x9ec: V619 = ISZERO V618
0x9ed: V620 = ISZERO V619
0x9ee: V621 = 0x9f6
0x9f1: JUMPI 0x9f6 V620
---
Entry stack: [V10, 0x526, 0x0]
Stack pops: 0
Stack additions: [V591, 0x70a08231, V612, 0x20, V615, V616, V615, 0x0, V591]
Exit stack: [V10, 0x526, 0x0, V591, 0x70a08231, V612, 0x20, V615, V616, V615, 0x0, V591]

================================

Block 0x9f2
[0x9f2:0x9f5]
---
Predecessors: [0x931]
Successors: []
---
0x9f2 PUSH1 0x0
0x9f4 DUP1
0x9f5 REVERT
---
0x9f2: V622 = 0x0
0x9f5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x526, 0x0, V591, 0x70a08231, V612, 0x20, V615, V616, V615, 0x0, V591]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x526, 0x0, V591, 0x70a08231, V612, 0x20, V615, V616, V615, 0x0, V591]

================================

Block 0x9f6
[0x9f6:0xa02]
---
Predecessors: [0x931]
Successors: [0xa03, 0xa07]
---
0x9f6 JUMPDEST
0x9f7 PUSH2 0x2c6
0x9fa GAS
0x9fb SUB
0x9fc CALL
0x9fd ISZERO
0x9fe ISZERO
0x9ff PUSH2 0xa07
0xa02 JUMPI
---
0x9f6: JUMPDEST 
0x9f7: V623 = 0x2c6
0x9fa: V624 = GAS
0x9fb: V625 = SUB V624 0x2c6
0x9fc: V626 = CALL V625 V591 0x0 V615 V616 V615 0x20
0x9fd: V627 = ISZERO V626
0x9fe: V628 = ISZERO V627
0x9ff: V629 = 0xa07
0xa02: JUMPI 0xa07 V628
---
Entry stack: [V10, 0x526, 0x0, V591, 0x70a08231, V612, 0x20, V615, V616, V615, 0x0, V591]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x526, 0x0, V591, 0x70a08231, V612]

================================

Block 0xa03
[0xa03:0xa06]
---
Predecessors: [0x9f6]
Successors: []
---
0xa03 PUSH1 0x0
0xa05 DUP1
0xa06 REVERT
---
0xa03: V630 = 0x0
0xa06: REVERT 0x0 0x0
---
Entry stack: [V10, 0x526, 0x0, V591, 0x70a08231, V612]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x526, 0x0, V591, 0x70a08231, V612]

================================

Block 0xa07
[0xa07:0xa1c]
---
Predecessors: [0x9f6]
Successors: [0xa1d, 0xb27]
---
0xa07 JUMPDEST
0xa08 POP
0xa09 POP
0xa0a POP
0xa0b PUSH1 0x40
0xa0d MLOAD
0xa0e DUP1
0xa0f MLOAD
0xa10 SWAP1
0xa11 POP
0xa12 SWAP1
0xa13 POP
0xa14 PUSH1 0x0
0xa16 DUP2
0xa17 GT
0xa18 ISZERO
0xa19 PUSH2 0xb27
0xa1c JUMPI
---
0xa07: JUMPDEST 
0xa0b: V631 = 0x40
0xa0d: V632 = M[0x40]
0xa0f: V633 = M[V632]
0xa14: V634 = 0x0
0xa17: V635 = GT V633 0x0
0xa18: V636 = ISZERO V635
0xa19: V637 = 0xb27
0xa1c: JUMPI 0xb27 V636
---
Entry stack: [V10, 0x526, 0x0, V591, 0x70a08231, V612]
Stack pops: 4
Stack additions: [V633]
Exit stack: [V10, 0x526, V633]

================================

Block 0xa1d
[0xa1d:0xb05]
---
Predecessors: [0xa07]
Successors: [0xb06, 0xb0a]
---
0xa1d PUSH1 0x1
0xa1f PUSH1 0x0
0xa21 SWAP1
0xa22 SLOAD
0xa23 SWAP1
0xa24 PUSH2 0x100
0xa27 EXP
0xa28 SWAP1
0xa29 DIV
0xa2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3f AND
0xa40 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa55 AND
0xa56 PUSH4 0xa9059cbb
0xa5b PUSH1 0x0
0xa5d DUP1
0xa5e SWAP1
0xa5f SLOAD
0xa60 SWAP1
0xa61 PUSH2 0x100
0xa64 EXP
0xa65 SWAP1
0xa66 DIV
0xa67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7c AND
0xa7d DUP4
0xa7e PUSH1 0x0
0xa80 PUSH1 0x40
0xa82 MLOAD
0xa83 PUSH1 0x20
0xa85 ADD
0xa86 MSTORE
0xa87 PUSH1 0x40
0xa89 MLOAD
0xa8a DUP4
0xa8b PUSH4 0xffffffff
0xa90 AND
0xa91 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xaaf MUL
0xab0 DUP2
0xab1 MSTORE
0xab2 PUSH1 0x4
0xab4 ADD
0xab5 DUP1
0xab6 DUP4
0xab7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacc AND
0xacd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae2 AND
0xae3 DUP2
0xae4 MSTORE
0xae5 PUSH1 0x20
0xae7 ADD
0xae8 DUP3
0xae9 DUP2
0xaea MSTORE
0xaeb PUSH1 0x20
0xaed ADD
0xaee SWAP3
0xaef POP
0xaf0 POP
0xaf1 POP
0xaf2 PUSH1 0x20
0xaf4 PUSH1 0x40
0xaf6 MLOAD
0xaf7 DUP1
0xaf8 DUP4
0xaf9 SUB
0xafa DUP2
0xafb PUSH1 0x0
0xafd DUP8
0xafe DUP1
0xaff EXTCODESIZE
0xb00 ISZERO
0xb01 ISZERO
0xb02 PUSH2 0xb0a
0xb05 JUMPI
---
0xa1d: V638 = 0x1
0xa1f: V639 = 0x0
0xa22: V640 = S[0x1]
0xa24: V641 = 0x100
0xa27: V642 = EXP 0x100 0x0
0xa29: V643 = DIV V640 0x1
0xa2a: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3f: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0xa40: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0xa55: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0xa56: V648 = 0xa9059cbb
0xa5b: V649 = 0x0
0xa5f: V650 = S[0x0]
0xa61: V651 = 0x100
0xa64: V652 = EXP 0x100 0x0
0xa66: V653 = DIV V650 0x1
0xa67: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7c: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xa7e: V656 = 0x0
0xa80: V657 = 0x40
0xa82: V658 = M[0x40]
0xa83: V659 = 0x20
0xa85: V660 = ADD 0x20 V658
0xa86: M[V660] = 0x0
0xa87: V661 = 0x40
0xa89: V662 = M[0x40]
0xa8b: V663 = 0xffffffff
0xa90: V664 = AND 0xffffffff 0xa9059cbb
0xa91: V665 = 0x100000000000000000000000000000000000000000000000000000000
0xaaf: V666 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xab1: M[V662] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xab2: V667 = 0x4
0xab4: V668 = ADD 0x4 V662
0xab7: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0xacd: V671 = 0xffffffffffffffffffffffffffffffffffffffff
0xae2: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff V670
0xae4: M[V668] = V672
0xae5: V673 = 0x20
0xae7: V674 = ADD 0x20 V668
0xaea: M[V674] = V633
0xaeb: V675 = 0x20
0xaed: V676 = ADD 0x20 V674
0xaf2: V677 = 0x20
0xaf4: V678 = 0x40
0xaf6: V679 = M[0x40]
0xaf9: V680 = SUB V676 V679
0xafb: V681 = 0x0
0xaff: V682 = EXTCODESIZE V647
0xb00: V683 = ISZERO V682
0xb01: V684 = ISZERO V683
0xb02: V685 = 0xb0a
0xb05: JUMPI 0xb0a V684
---
Entry stack: [V10, 0x526, V633]
Stack pops: 1
Stack additions: [S0, V647, 0xa9059cbb, V676, 0x20, V679, V680, V679, 0x0, V647]
Exit stack: [V10, 0x526, V633, V647, 0xa9059cbb, V676, 0x20, V679, V680, V679, 0x0, V647]

================================

Block 0xb06
[0xb06:0xb09]
---
Predecessors: [0xa1d]
Successors: []
---
0xb06 PUSH1 0x0
0xb08 DUP1
0xb09 REVERT
---
0xb06: V686 = 0x0
0xb09: REVERT 0x0 0x0
---
Entry stack: [V10, 0x526, V633, V647, 0xa9059cbb, V676, 0x20, V679, V680, V679, 0x0, V647]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x526, V633, V647, 0xa9059cbb, V676, 0x20, V679, V680, V679, 0x0, V647]

================================

Block 0xb0a
[0xb0a:0xb16]
---
Predecessors: [0xa1d]
Successors: [0xb17, 0xb1b]
---
0xb0a JUMPDEST
0xb0b PUSH2 0x2c6
0xb0e GAS
0xb0f SUB
0xb10 CALL
0xb11 ISZERO
0xb12 ISZERO
0xb13 PUSH2 0xb1b
0xb16 JUMPI
---
0xb0a: JUMPDEST 
0xb0b: V687 = 0x2c6
0xb0e: V688 = GAS
0xb0f: V689 = SUB V688 0x2c6
0xb10: V690 = CALL V689 V647 0x0 V679 V680 V679 0x20
0xb11: V691 = ISZERO V690
0xb12: V692 = ISZERO V691
0xb13: V693 = 0xb1b
0xb16: JUMPI 0xb1b V692
---
Entry stack: [V10, 0x526, V633, V647, 0xa9059cbb, V676, 0x20, V679, V680, V679, 0x0, V647]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x526, V633, V647, 0xa9059cbb, V676]

================================

Block 0xb17
[0xb17:0xb1a]
---
Predecessors: [0xb0a]
Successors: []
---
0xb17 PUSH1 0x0
0xb19 DUP1
0xb1a REVERT
---
0xb17: V694 = 0x0
0xb1a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x526, V633, V647, 0xa9059cbb, V676]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x526, V633, V647, 0xa9059cbb, V676]

================================

Block 0xb1b
[0xb1b:0xb26]
---
Predecessors: [0xb0a]
Successors: [0xb27]
---
0xb1b JUMPDEST
0xb1c POP
0xb1d POP
0xb1e POP
0xb1f PUSH1 0x40
0xb21 MLOAD
0xb22 DUP1
0xb23 MLOAD
0xb24 SWAP1
0xb25 POP
0xb26 POP
---
0xb1b: JUMPDEST 
0xb1f: V695 = 0x40
0xb21: V696 = M[0x40]
0xb23: V697 = M[V696]
---
Entry stack: [V10, 0x526, V633, V647, 0xa9059cbb, V676]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x526, V633]

================================

Block 0xb27
[0xb27:0xb27]
---
Predecessors: [0xa07, 0xb1b]
Successors: [0xb28]
---
0xb27 JUMPDEST
---
0xb27: JUMPDEST 
---
Entry stack: [V10, 0x526, V633]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x526, V633]

================================

Block 0xb28
[0xb28:0xb28]
---
Predecessors: [0xb27]
Successors: [0xb29]
---
0xb28 JUMPDEST
---
0xb28: JUMPDEST 
---
Entry stack: [V10, 0x526, V633]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x526, V633]

================================

Block 0xb29
[0xb29:0xb2b]
---
Predecessors: [0xb28]
Successors: [0x526]
---
0xb29 JUMPDEST
0xb2a POP
0xb2b JUMP
---
0xb29: JUMPDEST 
0xb2b: JUMP 0x526
---
Entry stack: [V10, 0x526, V633]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2c
[0xb2c:0xb50]
---
Predecessors: [0x533]
Successors: [0x53b]
---
0xb2c JUMPDEST
0xb2d PUSH1 0x0
0xb2f DUP1
0xb30 SWAP1
0xb31 SLOAD
0xb32 SWAP1
0xb33 PUSH2 0x100
0xb36 EXP
0xb37 SWAP1
0xb38 DIV
0xb39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4e AND
0xb4f DUP2
0xb50 JUMP
---
0xb2c: JUMPDEST 
0xb2d: V698 = 0x0
0xb31: V699 = S[0x0]
0xb33: V700 = 0x100
0xb36: V701 = EXP 0x100 0x0
0xb38: V702 = DIV V699 0x1
0xb39: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4e: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0xb50: JUMP 0x53b
---
Entry stack: [V10, 0x53b]
Stack pops: 1
Stack additions: [S0, V704]
Exit stack: [V10, 0x53b, V704]

================================

Block 0xb51
[0xb51:0xb56]
---
Predecessors: [0x588]
Successors: [0x590]
---
0xb51 JUMPDEST
0xb52 PUSH1 0x3
0xb54 SLOAD
0xb55 DUP2
0xb56 JUMP
---
0xb51: JUMPDEST 
0xb52: V705 = 0x3
0xb54: V706 = S[0x3]
0xb56: JUMP 0x590
---
Entry stack: [V10, 0x590]
Stack pops: 1
Stack additions: [S0, V706]
Exit stack: [V10, 0x590, V706]

================================

Block 0xb57
[0xb57:0xbad]
---
Predecessors: [0x5b1]
Successors: [0xbae, 0xbb2]
---
0xb57 JUMPDEST
0xb58 PUSH1 0x0
0xb5a DUP1
0xb5b SWAP1
0xb5c SLOAD
0xb5d SWAP1
0xb5e PUSH2 0x100
0xb61 EXP
0xb62 SWAP1
0xb63 DIV
0xb64 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb79 AND
0xb7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8f AND
0xb90 CALLER
0xb91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba6 AND
0xba7 EQ
0xba8 ISZERO
0xba9 ISZERO
0xbaa PUSH2 0xbb2
0xbad JUMPI
---
0xb57: JUMPDEST 
0xb58: V707 = 0x0
0xb5c: V708 = S[0x0]
0xb5e: V709 = 0x100
0xb61: V710 = EXP 0x100 0x0
0xb63: V711 = DIV V708 0x1
0xb64: V712 = 0xffffffffffffffffffffffffffffffffffffffff
0xb79: V713 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
0xb7a: V714 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8f: V715 = AND 0xffffffffffffffffffffffffffffffffffffffff V713
0xb90: V716 = CALLER
0xb91: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xba6: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0xba7: V719 = EQ V718 V715
0xba8: V720 = ISZERO V719
0xba9: V721 = ISZERO V720
0xbaa: V722 = 0xbb2
0xbad: JUMPI 0xbb2 V721
---
Entry stack: [V10, 0x5b9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b9]

================================

Block 0xbae
[0xbae:0xbb1]
---
Predecessors: [0xb57]
Successors: []
---
0xbae PUSH1 0x0
0xbb0 DUP1
0xbb1 REVERT
---
0xbae: V723 = 0x0
0xbb1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5b9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b9]

================================

Block 0xbb2
[0xbb2:0xbcf]
---
Predecessors: [0xb57]
Successors: [0xbd0, 0xbd1]
---
0xbb2 JUMPDEST
0xbb3 PUSH1 0x2
0xbb5 PUSH1 0x1
0xbb7 PUSH1 0x14
0xbb9 PUSH2 0x100
0xbbc EXP
0xbbd DUP2
0xbbe SLOAD
0xbbf DUP2
0xbc0 PUSH1 0xff
0xbc2 MUL
0xbc3 NOT
0xbc4 AND
0xbc5 SWAP1
0xbc6 DUP4
0xbc7 PUSH1 0x3
0xbc9 DUP2
0xbca GT
0xbcb ISZERO
0xbcc PUSH2 0xbd1
0xbcf JUMPI
---
0xbb2: JUMPDEST 
0xbb3: V724 = 0x2
0xbb5: V725 = 0x1
0xbb7: V726 = 0x14
0xbb9: V727 = 0x100
0xbbc: V728 = EXP 0x100 0x14
0xbbe: V729 = S[0x1]
0xbc0: V730 = 0xff
0xbc2: V731 = MUL 0xff 0x10000000000000000000000000000000000000000
0xbc3: V732 = NOT 0xff0000000000000000000000000000000000000000
0xbc4: V733 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V729
0xbc7: V734 = 0x3
0xbca: V735 = GT 0x2 0x3
0xbcb: V736 = ISZERO 0x0
0xbcc: V737 = 0xbd1
0xbcf: JUMPI 0xbd1 0x1
---
Entry stack: [V10, 0x5b9]
Stack pops: 0
Stack additions: [0x2, 0x1, V733, 0x10000000000000000000000000000000000000000, 0x2]
Exit stack: [V10, 0x5b9, 0x2, 0x1, V733, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0xbd0
[0xbd0:0xbd0]
---
Predecessors: [0xbb2]
Successors: []
---
0xbd0 INVALID
---
0xbd0: INVALID 
---
Entry stack: [V10, 0x5b9, 0x2, 0x1, V733, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b9, 0x2, 0x1, V733, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0xbd1
[0xbd1:0xbd6]
---
Predecessors: [0xbb2]
Successors: [0xbd7]
---
0xbd1 JUMPDEST
0xbd2 MUL
0xbd3 OR
0xbd4 SWAP1
0xbd5 SSTORE
0xbd6 POP
---
0xbd1: JUMPDEST 
0xbd2: V738 = MUL 0x2 0x10000000000000000000000000000000000000000
0xbd3: V739 = OR 0x20000000000000000000000000000000000000000 V733
0xbd5: S[0x1] = V739
---
Entry stack: [V10, 0x5b9, 0x2, 0x1, V733, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x5b9]

================================

Block 0xbd7
[0xbd7:0xbd7]
---
Predecessors: [0xbd1]
Successors: [0xbd8]
---
0xbd7 JUMPDEST
---
0xbd7: JUMPDEST 
---
Entry stack: [V10, 0x5b9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b9]

================================

Block 0xbd8
[0xbd8:0xbd9]
---
Predecessors: [0xbd7]
Successors: [0x5b9]
---
0xbd8 JUMPDEST
0xbd9 JUMP
---
0xbd8: JUMPDEST 
0xbd9: JUMP 0x5b9
---
Entry stack: [V10, 0x5b9]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xbda
[0xbda:0xc05]
---
Predecessors: []
Successors: []
---
0xbda STOP
0xbdb LOG1
0xbdc PUSH6 0x627a7a723058
0xbe3 SHA3
0xbe4 MISSING 0x2b
0xbe5 SIGNEXTEND
0xbe6 MISSING 0xab
0xbe7 CODECOPY
0xbe8 MISSING 0x47
0xbe9 SWAP7
0xbea DUP9
0xbeb PUSH17 0xe0e81f12e3ab42ad3705ee0d50057e1e52
0xbfd MISSING 0xc9
0xbfe MSTORE
0xbff SHA3
0xc00 MISSING 0xa9
0xc01 MISSING 0xeb
0xc02 SWAP11
0xc03 MISSING 0xaf
0xc04 STOP
0xc05 MISSING 0x29
---
0xbda: STOP 
0xbdb: LOG S0 S1 S2
0xbdc: V740 = 0x627a7a723058
0xbe3: V741 = SHA3 0x627a7a723058 S3
0xbe4: MISSING 0x2b
0xbe5: V742 = SIGNEXTEND S0 S1
0xbe6: MISSING 0xab
0xbe7: CODECOPY S0 S1 S2
0xbe8: MISSING 0x47
0xbeb: V743 = 0xe0e81f12e3ab42ad3705ee0d50057e1e52
0xbfd: MISSING 0xc9
0xbfe: M[S0] = S1
0xbff: V744 = SHA3 S2 S3
0xc00: MISSING 0xa9
0xc01: MISSING 0xeb
0xc03: MISSING 0xaf
0xc04: STOP 
0xc05: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V741, V742, 0xe0e81f12e3ab42ad3705ee0d50057e1e52, S8, S7, S1, S2, S3, S4, S5, S6, S0, S8, V744, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x3d4
Exit block: 0x3e7
Body: 0x3d4, 0x3db, 0x3df, 0x3e7, 0x5bb

Function 1:
Public function signature: 0x2fed95bd
Entry block: 0x3fd
Exit block: 0x446
Body: 0x3fd, 0x404, 0x408, 0x446, 0x5c1, 0x618, 0x61c, 0x639, 0x63a, 0x69e, 0x69f

Function 2:
Public function signature: 0x343cd460
Entry block: 0x448
Exit block: 0x45b
Body: 0x448, 0x44f, 0x453, 0x45b, 0x6a4, 0x702, 0x703, 0x709

Function 3:
Public function signature: 0x38d52e0f
Entry block: 0x45d
Exit block: 0x470
Body: 0x45d, 0x464, 0x468, 0x470, 0x70b

Function 4:
Public function signature: 0x41c0e1b5
Entry block: 0x4b2
Exit block: 0x78c
Body: 0x4b2, 0x4b9, 0x4bd, 0x731, 0x788, 0x78c

Function 5:
Public function signature: 0x603f4d52
Entry block: 0x4c7
Exit block: 0x4e9
Body: 0x4c7, 0x4ce, 0x4d2, 0x4da, 0x4e9, 0x4ea, 0x7c9

Function 6:
Public function signature: 0x687e6f44
Entry block: 0x4fe
Exit block: 0x511
Body: 0x4fe, 0x505, 0x509, 0x511, 0x7dc, 0x833, 0x837, 0x858, 0x8cb, 0x8cf, 0x8d0, 0x8d1, 0x8d2

Function 7:
Public function signature: 0x8d8f2adb
Entry block: 0x513
Exit block: 0x526
Body: 0x513, 0x51a, 0x51e, 0x526, 0x8d4, 0x92d, 0x931, 0x9f2, 0x9f6, 0xa03, 0xa07, 0xa1d, 0xb06, 0xb0a, 0xb17, 0xb1b, 0xb27, 0xb28, 0xb29

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x528
Exit block: 0x53b
Body: 0x528, 0x52f, 0x533, 0x53b, 0xb2c

Function 9:
Public function signature: 0xa035b1fe
Entry block: 0x57d
Exit block: 0x590
Body: 0x57d, 0x584, 0x588, 0x590, 0xb51

Function 10:
Public function signature: 0xe36b0b37
Entry block: 0x5a6
Exit block: 0x5b9
Body: 0x5a6, 0x5ad, 0x5b1, 0x5b9, 0xb57, 0xbae, 0xbb2, 0xbd0, 0xbd1, 0xbd7, 0xbd8

Function 11:
Public fallback function
Entry block: 0xad
Exit block: 0x3c6
Body: 0xad, 0xb1, 0x17f, 0x183, 0x190, 0x194, 0x1ac, 0x1ad, 0x1bc, 0x1bd, 0x1d7, 0x1d8, 0x1e0, 0x1e6, 0x1ec, 0x1f2, 0x1f8, 0x1fc, 0x205, 0x222, 0x223, 0x270, 0x274, 0x275, 0x27f, 0x347, 0x34b, 0x358, 0x35c, 0x3c6, 0x3ca, 0x3cb, 0x3cc, 0x3d2

