Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xaf]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xaf
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xaf
0xc: JUMPI 0xaf V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xb1]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3fc8cef3
0x3c EQ
0x3d PUSH2 0xb1
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3fc8cef3
0x3c: V13 = EQ 0x3fc8cef3 V11
0x3d: V14 = 0xb1
0x40: JUMPI 0xb1 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x108]
---
0x41 DUP1
0x42 PUSH4 0x5e35359e
0x47 EQ
0x48 PUSH2 0x108
0x4b JUMPI
---
0x42: V15 = 0x5e35359e
0x47: V16 = EQ 0x5e35359e V11
0x48: V17 = 0x108
0x4b: JUMPI 0x108 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x18d]
---
0x4c DUP1
0x4d PUSH4 0x8322fff2
0x52 EQ
0x53 PUSH2 0x18d
0x56 JUMPI
---
0x4d: V18 = 0x8322fff2
0x52: V19 = EQ 0x8322fff2 V11
0x53: V20 = 0x18d
0x56: JUMPI 0x18d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1e4]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x1e4
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x1e4
0x61: JUMPI 0x1e4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x23b]
---
0x62 DUP1
0x63 PUSH4 0xc30c13c4
0x68 EQ
0x69 PUSH2 0x23b
0x6c JUMPI
---
0x63: V24 = 0xc30c13c4
0x68: V25 = EQ 0xc30c13c4 V11
0x69: V26 = 0x23b
0x6c: JUMPI 0x23b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x2e5]
---
0x6d DUP1
0x6e PUSH4 0xc8f4569d
0x73 EQ
0x74 PUSH2 0x2e5
0x77 JUMPI
---
0x6e: V27 = 0xc8f4569d
0x73: V28 = EQ 0xc8f4569d V11
0x74: V29 = 0x2e5
0x77: JUMPI 0x2e5 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x382]
---
0x78 DUP1
0x79 PUSH4 0xd2f7265a
0x7e EQ
0x7f PUSH2 0x382
0x82 JUMPI
---
0x79: V30 = 0xd2f7265a
0x7e: V31 = EQ 0xd2f7265a V11
0x7f: V32 = 0x382
0x82: JUMPI 0x382 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x3d9]
---
0x83 DUP1
0x84 PUSH4 0xe5b5019a
0x89 EQ
0x8a PUSH2 0x3d9
0x8d JUMPI
---
0x84: V33 = 0xe5b5019a
0x89: V34 = EQ 0xe5b5019a V11
0x8a: V35 = 0x3d9
0x8d: JUMPI 0x3d9 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x404]
---
0x8e DUP1
0x8f PUSH4 0xec556889
0x94 EQ
0x95 PUSH2 0x404
0x98 JUMPI
---
0x8f: V36 = 0xec556889
0x94: V37 = EQ 0xec556889 V11
0x95: V38 = 0x404
0x98: JUMPI 0x404 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x45b]
---
0x99 DUP1
0x9a PUSH4 0xf2fde38b
0x9f EQ
0xa0 PUSH2 0x45b
0xa3 JUMPI
---
0x9a: V39 = 0xf2fde38b
0x9f: V40 = EQ 0xf2fde38b V11
0xa0: V41 = 0x45b
0xa3: JUMPI 0x45b V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x49e]
---
0xa4 DUP1
0xa5 PUSH4 0xf3fef3a3
0xaa EQ
0xab PUSH2 0x49e
0xae JUMPI
---
0xa5: V42 = 0xf3fef3a3
0xaa: V43 = EQ 0xf3fef3a3 V11
0xab: V44 = 0x49e
0xae: JUMPI 0x49e V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0x0, 0xa4]
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0xd]
Successors: [0xb9, 0xbd]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 DUP1
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb1: JUMPDEST 
0xb2: V45 = CALLVALUE
0xb4: V46 = ISZERO V45
0xb5: V47 = 0xbd
0xb8: JUMPI 0xbd V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb1]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V48 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xbd
[0xbd:0xc5]
---
Predecessors: [0xb1]
Successors: [0x4eb]
---
0xbd JUMPDEST
0xbe POP
0xbf PUSH2 0xc6
0xc2 PUSH2 0x4eb
0xc5 JUMP
---
0xbd: JUMPDEST 
0xbf: V49 = 0xc6
0xc2: V50 = 0x4eb
0xc5: JUMP 0x4eb
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0xc6]
Exit stack: [V11, 0xc6]

================================

Block 0xc6
[0xc6:0x107]
---
Predecessors: [0x4eb]
Successors: []
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb DUP3
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP2
0xfe POP
0xff POP
0x100 PUSH1 0x40
0x102 MLOAD
0x103 DUP1
0x104 SWAP2
0x105 SUB
0x106 SWAP1
0x107 RETURN
---
0xc6: JUMPDEST 
0xc7: V51 = 0x40
0xc9: V52 = M[0x40]
0xcc: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0xe2: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xf9: M[V52] = V56
0xfa: V57 = 0x20
0xfc: V58 = ADD 0x20 V52
0x100: V59 = 0x40
0x102: V60 = M[0x40]
0x105: V61 = SUB V58 V60
0x107: RETURN V60 V61
---
Entry stack: [V11, 0xc6, V319]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc6]

================================

Block 0x108
[0x108:0x10f]
---
Predecessors: [0x41]
Successors: [0x110, 0x114]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a DUP1
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x108: JUMPDEST 
0x109: V62 = CALLVALUE
0x10b: V63 = ISZERO V62
0x10c: V64 = 0x114
0x10f: JUMPI 0x114 V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V11, V62]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x108]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V65 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V11, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62]

================================

Block 0x114
[0x114:0x172]
---
Predecessors: [0x108]
Successors: [0x511]
---
0x114 JUMPDEST
0x115 POP
0x116 PUSH2 0x173
0x119 PUSH1 0x4
0x11b DUP1
0x11c CALLDATASIZE
0x11d SUB
0x11e DUP2
0x11f ADD
0x120 SWAP1
0x121 DUP1
0x122 DUP1
0x123 CALLDATALOAD
0x124 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139 AND
0x13a SWAP1
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP1
0x13f SWAP3
0x140 SWAP2
0x141 SWAP1
0x142 DUP1
0x143 CALLDATALOAD
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a SWAP1
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP1
0x15f SWAP3
0x160 SWAP2
0x161 SWAP1
0x162 DUP1
0x163 CALLDATALOAD
0x164 SWAP1
0x165 PUSH1 0x20
0x167 ADD
0x168 SWAP1
0x169 SWAP3
0x16a SWAP2
0x16b SWAP1
0x16c POP
0x16d POP
0x16e POP
0x16f PUSH2 0x511
0x172 JUMP
---
0x114: JUMPDEST 
0x116: V66 = 0x173
0x119: V67 = 0x4
0x11c: V68 = CALLDATASIZE
0x11d: V69 = SUB V68 0x4
0x11f: V70 = ADD 0x4 V69
0x123: V71 = CALLDATALOAD 0x4
0x124: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x139: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x13b: V74 = 0x20
0x13d: V75 = ADD 0x20 0x4
0x143: V76 = CALLDATALOAD 0x24
0x144: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x15b: V79 = 0x20
0x15d: V80 = ADD 0x20 0x24
0x163: V81 = CALLDATALOAD 0x44
0x165: V82 = 0x20
0x167: V83 = ADD 0x20 0x44
0x16f: V84 = 0x511
0x172: JUMP 0x511
---
Entry stack: [V11, V62]
Stack pops: 1
Stack additions: [0x173, V73, V78, V81]
Exit stack: [V11, 0x173, V73, V78, V81]

================================

Block 0x173
[0x173:0x18c]
---
Predecessors: [0x63b]
Successors: []
---
0x173 JUMPDEST
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 DUP3
0x179 ISZERO
0x17a ISZERO
0x17b ISZERO
0x17c ISZERO
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP2
0x183 POP
0x184 POP
0x185 PUSH1 0x40
0x187 MLOAD
0x188 DUP1
0x189 SWAP2
0x18a SUB
0x18b SWAP1
0x18c RETURN
---
0x173: JUMPDEST 
0x174: V85 = 0x40
0x176: V86 = M[0x40]
0x179: V87 = ISZERO V385
0x17a: V88 = ISZERO V87
0x17b: V89 = ISZERO V88
0x17c: V90 = ISZERO V89
0x17e: M[V86] = V90
0x17f: V91 = 0x20
0x181: V92 = ADD 0x20 V86
0x185: V93 = 0x40
0x187: V94 = M[0x40]
0x18a: V95 = SUB V92 V94
0x18c: RETURN V94 V95
---
Entry stack: [V11, V385]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0x4c]
Successors: [0x195, 0x199]
---
0x18d JUMPDEST
0x18e CALLVALUE
0x18f DUP1
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18d: JUMPDEST 
0x18e: V96 = CALLVALUE
0x190: V97 = ISZERO V96
0x191: V98 = 0x199
0x194: JUMPI 0x199 V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18d]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V99 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x199
[0x199:0x1a1]
---
Predecessors: [0x18d]
Successors: [0x655]
---
0x199 JUMPDEST
0x19a POP
0x19b PUSH2 0x1a2
0x19e PUSH2 0x655
0x1a1 JUMP
---
0x199: JUMPDEST 
0x19b: V100 = 0x1a2
0x19e: V101 = 0x655
0x1a1: JUMP 0x655
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0x1a2]
Exit stack: [V11, 0x1a2]

================================

Block 0x1a2
[0x1a2:0x1e3]
---
Predecessors: [0x655]
Successors: []
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 DUP1
0x1a7 DUP3
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP2
0x1da POP
0x1db POP
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1a2: JUMPDEST 
0x1a3: V102 = 0x40
0x1a5: V103 = M[0x40]
0x1a8: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1be: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1d5: M[V103] = 0x0
0x1d6: V108 = 0x20
0x1d8: V109 = ADD 0x20 V103
0x1dc: V110 = 0x40
0x1de: V111 = M[0x40]
0x1e1: V112 = SUB V109 V111
0x1e3: RETURN V111 V112
---
Entry stack: [V11, 0x1a2, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a2]

================================

Block 0x1e4
[0x1e4:0x1eb]
---
Predecessors: [0x57]
Successors: [0x1ec, 0x1f0]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 DUP1
0x1e7 ISZERO
0x1e8 PUSH2 0x1f0
0x1eb JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V113 = CALLVALUE
0x1e7: V114 = ISZERO V113
0x1e8: V115 = 0x1f0
0x1eb: JUMPI 0x1f0 V114
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V11, V113]

================================

Block 0x1ec
[0x1ec:0x1ef]
---
Predecessors: [0x1e4]
Successors: []
---
0x1ec PUSH1 0x0
0x1ee DUP1
0x1ef REVERT
---
0x1ec: V116 = 0x0
0x1ef: REVERT 0x0 0x0
---
Entry stack: [V11, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V113]

================================

Block 0x1f0
[0x1f0:0x1f8]
---
Predecessors: [0x1e4]
Successors: [0x65a]
---
0x1f0 JUMPDEST
0x1f1 POP
0x1f2 PUSH2 0x1f9
0x1f5 PUSH2 0x65a
0x1f8 JUMP
---
0x1f0: JUMPDEST 
0x1f2: V117 = 0x1f9
0x1f5: V118 = 0x65a
0x1f8: JUMP 0x65a
---
Entry stack: [V11, V113]
Stack pops: 1
Stack additions: [0x1f9]
Exit stack: [V11, 0x1f9]

================================

Block 0x1f9
[0x1f9:0x23a]
---
Predecessors: [0x65a]
Successors: []
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd DUP1
0x1fe DUP3
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 AND
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b DUP2
0x22c MSTORE
0x22d PUSH1 0x20
0x22f ADD
0x230 SWAP2
0x231 POP
0x232 POP
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP1
0x237 SWAP2
0x238 SUB
0x239 SWAP1
0x23a RETURN
---
0x1f9: JUMPDEST 
0x1fa: V119 = 0x40
0x1fc: V120 = M[0x40]
0x1ff: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x215: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x22c: M[V120] = V124
0x22d: V125 = 0x20
0x22f: V126 = ADD 0x20 V120
0x233: V127 = 0x40
0x235: V128 = M[0x40]
0x238: V129 = SUB V126 V128
0x23a: RETURN V128 V129
---
Entry stack: [V11, 0x1f9, V395]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1f9]

================================

Block 0x23b
[0x23b:0x242]
---
Predecessors: [0x62]
Successors: [0x243, 0x247]
---
0x23b JUMPDEST
0x23c CALLVALUE
0x23d DUP1
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23b: JUMPDEST 
0x23c: V130 = CALLVALUE
0x23e: V131 = ISZERO V130
0x23f: V132 = 0x247
0x242: JUMPI 0x247 V131
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V11, V130]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23b]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V133 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V11, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V130]

================================

Block 0x247
[0x247:0x2e2]
---
Predecessors: [0x23b]
Successors: [0x67f]
---
0x247 JUMPDEST
0x248 POP
0x249 PUSH2 0x2e3
0x24c PUSH1 0x4
0x24e DUP1
0x24f CALLDATASIZE
0x250 SUB
0x251 DUP2
0x252 ADD
0x253 SWAP1
0x254 DUP1
0x255 DUP1
0x256 PUSH1 0xa0
0x258 ADD
0x259 SWAP1
0x25a PUSH1 0x5
0x25c DUP1
0x25d PUSH1 0x20
0x25f MUL
0x260 PUSH1 0x40
0x262 MLOAD
0x263 SWAP1
0x264 DUP2
0x265 ADD
0x266 PUSH1 0x40
0x268 MSTORE
0x269 DUP1
0x26a SWAP3
0x26b SWAP2
0x26c SWAP1
0x26d DUP3
0x26e PUSH1 0x5
0x270 PUSH1 0x20
0x272 MUL
0x273 DUP1
0x274 DUP3
0x275 DUP5
0x276 CALLDATACOPY
0x277 DUP3
0x278 ADD
0x279 SWAP2
0x27a POP
0x27b POP
0x27c POP
0x27d POP
0x27e POP
0x27f SWAP2
0x280 SWAP3
0x281 SWAP2
0x282 SWAP3
0x283 SWAP1
0x284 DUP1
0x285 PUSH1 0xc0
0x287 ADD
0x288 SWAP1
0x289 PUSH1 0x6
0x28b DUP1
0x28c PUSH1 0x20
0x28e MUL
0x28f PUSH1 0x40
0x291 MLOAD
0x292 SWAP1
0x293 DUP2
0x294 ADD
0x295 PUSH1 0x40
0x297 MSTORE
0x298 DUP1
0x299 SWAP3
0x29a SWAP2
0x29b SWAP1
0x29c DUP3
0x29d PUSH1 0x6
0x29f PUSH1 0x20
0x2a1 MUL
0x2a2 DUP1
0x2a3 DUP3
0x2a4 DUP5
0x2a5 CALLDATACOPY
0x2a6 DUP3
0x2a7 ADD
0x2a8 SWAP2
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad POP
0x2ae SWAP2
0x2af SWAP3
0x2b0 SWAP2
0x2b1 SWAP3
0x2b2 SWAP1
0x2b3 DUP1
0x2b4 CALLDATALOAD
0x2b5 PUSH1 0xff
0x2b7 AND
0x2b8 SWAP1
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc SWAP1
0x2bd SWAP3
0x2be SWAP2
0x2bf SWAP1
0x2c0 DUP1
0x2c1 CALLDATALOAD
0x2c2 PUSH1 0x0
0x2c4 NOT
0x2c5 AND
0x2c6 SWAP1
0x2c7 PUSH1 0x20
0x2c9 ADD
0x2ca SWAP1
0x2cb SWAP3
0x2cc SWAP2
0x2cd SWAP1
0x2ce DUP1
0x2cf CALLDATALOAD
0x2d0 PUSH1 0x0
0x2d2 NOT
0x2d3 AND
0x2d4 SWAP1
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 SWAP1
0x2d9 SWAP3
0x2da SWAP2
0x2db SWAP1
0x2dc POP
0x2dd POP
0x2de POP
0x2df PUSH2 0x67f
0x2e2 JUMP
---
0x247: JUMPDEST 
0x249: V134 = 0x2e3
0x24c: V135 = 0x4
0x24f: V136 = CALLDATASIZE
0x250: V137 = SUB V136 0x4
0x252: V138 = ADD 0x4 V137
0x256: V139 = 0xa0
0x258: V140 = ADD 0xa0 0x4
0x25a: V141 = 0x5
0x25d: V142 = 0x20
0x25f: V143 = MUL 0x20 0x5
0x260: V144 = 0x40
0x262: V145 = M[0x40]
0x265: V146 = ADD V145 0xa0
0x266: V147 = 0x40
0x268: M[0x40] = V146
0x26e: V148 = 0x5
0x270: V149 = 0x20
0x272: V150 = MUL 0x20 0x5
0x276: CALLDATACOPY V145 0x4 0xa0
0x278: V151 = ADD V145 0xa0
0x285: V152 = 0xc0
0x287: V153 = ADD 0xc0 0xa4
0x289: V154 = 0x6
0x28c: V155 = 0x20
0x28e: V156 = MUL 0x20 0x6
0x28f: V157 = 0x40
0x291: V158 = M[0x40]
0x294: V159 = ADD V158 0xc0
0x295: V160 = 0x40
0x297: M[0x40] = V159
0x29d: V161 = 0x6
0x29f: V162 = 0x20
0x2a1: V163 = MUL 0x20 0x6
0x2a5: CALLDATACOPY V158 0xa4 0xc0
0x2a7: V164 = ADD V158 0xc0
0x2b4: V165 = CALLDATALOAD 0x164
0x2b5: V166 = 0xff
0x2b7: V167 = AND 0xff V165
0x2b9: V168 = 0x20
0x2bb: V169 = ADD 0x20 0x164
0x2c1: V170 = CALLDATALOAD 0x184
0x2c2: V171 = 0x0
0x2c4: V172 = NOT 0x0
0x2c5: V173 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V170
0x2c7: V174 = 0x20
0x2c9: V175 = ADD 0x20 0x184
0x2cf: V176 = CALLDATALOAD 0x1a4
0x2d0: V177 = 0x0
0x2d2: V178 = NOT 0x0
0x2d3: V179 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V176
0x2d5: V180 = 0x20
0x2d7: V181 = ADD 0x20 0x1a4
0x2df: V182 = 0x67f
0x2e2: JUMP 0x67f
---
Entry stack: [V11, V130]
Stack pops: 1
Stack additions: [0x2e3, V145, V158, V167, V173, V179]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179]

================================

Block 0x2e3
[0x2e3:0x2e4]
---
Predecessors: [0xb8a]
Successors: []
---
0x2e3 JUMPDEST
0x2e4 STOP
---
0x2e3: JUMPDEST 
0x2e4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e5
[0x2e5:0x37f]
---
Predecessors: [0x6d]
Successors: [0xb95]
---
0x2e5 JUMPDEST
0x2e6 PUSH2 0x380
0x2e9 PUSH1 0x4
0x2eb DUP1
0x2ec CALLDATASIZE
0x2ed SUB
0x2ee DUP2
0x2ef ADD
0x2f0 SWAP1
0x2f1 DUP1
0x2f2 DUP1
0x2f3 PUSH1 0xa0
0x2f5 ADD
0x2f6 SWAP1
0x2f7 PUSH1 0x5
0x2f9 DUP1
0x2fa PUSH1 0x20
0x2fc MUL
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 SWAP1
0x301 DUP2
0x302 ADD
0x303 PUSH1 0x40
0x305 MSTORE
0x306 DUP1
0x307 SWAP3
0x308 SWAP2
0x309 SWAP1
0x30a DUP3
0x30b PUSH1 0x5
0x30d PUSH1 0x20
0x30f MUL
0x310 DUP1
0x311 DUP3
0x312 DUP5
0x313 CALLDATACOPY
0x314 DUP3
0x315 ADD
0x316 SWAP2
0x317 POP
0x318 POP
0x319 POP
0x31a POP
0x31b POP
0x31c SWAP2
0x31d SWAP3
0x31e SWAP2
0x31f SWAP3
0x320 SWAP1
0x321 DUP1
0x322 PUSH1 0xc0
0x324 ADD
0x325 SWAP1
0x326 PUSH1 0x6
0x328 DUP1
0x329 PUSH1 0x20
0x32b MUL
0x32c PUSH1 0x40
0x32e MLOAD
0x32f SWAP1
0x330 DUP2
0x331 ADD
0x332 PUSH1 0x40
0x334 MSTORE
0x335 DUP1
0x336 SWAP3
0x337 SWAP2
0x338 SWAP1
0x339 DUP3
0x33a PUSH1 0x6
0x33c PUSH1 0x20
0x33e MUL
0x33f DUP1
0x340 DUP3
0x341 DUP5
0x342 CALLDATACOPY
0x343 DUP3
0x344 ADD
0x345 SWAP2
0x346 POP
0x347 POP
0x348 POP
0x349 POP
0x34a POP
0x34b SWAP2
0x34c SWAP3
0x34d SWAP2
0x34e SWAP3
0x34f SWAP1
0x350 DUP1
0x351 CALLDATALOAD
0x352 PUSH1 0xff
0x354 AND
0x355 SWAP1
0x356 PUSH1 0x20
0x358 ADD
0x359 SWAP1
0x35a SWAP3
0x35b SWAP2
0x35c SWAP1
0x35d DUP1
0x35e CALLDATALOAD
0x35f PUSH1 0x0
0x361 NOT
0x362 AND
0x363 SWAP1
0x364 PUSH1 0x20
0x366 ADD
0x367 SWAP1
0x368 SWAP3
0x369 SWAP2
0x36a SWAP1
0x36b DUP1
0x36c CALLDATALOAD
0x36d PUSH1 0x0
0x36f NOT
0x370 AND
0x371 SWAP1
0x372 PUSH1 0x20
0x374 ADD
0x375 SWAP1
0x376 SWAP3
0x377 SWAP2
0x378 SWAP1
0x379 POP
0x37a POP
0x37b POP
0x37c PUSH2 0xb95
0x37f JUMP
---
0x2e5: JUMPDEST 
0x2e6: V183 = 0x380
0x2e9: V184 = 0x4
0x2ec: V185 = CALLDATASIZE
0x2ed: V186 = SUB V185 0x4
0x2ef: V187 = ADD 0x4 V186
0x2f3: V188 = 0xa0
0x2f5: V189 = ADD 0xa0 0x4
0x2f7: V190 = 0x5
0x2fa: V191 = 0x20
0x2fc: V192 = MUL 0x20 0x5
0x2fd: V193 = 0x40
0x2ff: V194 = M[0x40]
0x302: V195 = ADD V194 0xa0
0x303: V196 = 0x40
0x305: M[0x40] = V195
0x30b: V197 = 0x5
0x30d: V198 = 0x20
0x30f: V199 = MUL 0x20 0x5
0x313: CALLDATACOPY V194 0x4 0xa0
0x315: V200 = ADD V194 0xa0
0x322: V201 = 0xc0
0x324: V202 = ADD 0xc0 0xa4
0x326: V203 = 0x6
0x329: V204 = 0x20
0x32b: V205 = MUL 0x20 0x6
0x32c: V206 = 0x40
0x32e: V207 = M[0x40]
0x331: V208 = ADD V207 0xc0
0x332: V209 = 0x40
0x334: M[0x40] = V208
0x33a: V210 = 0x6
0x33c: V211 = 0x20
0x33e: V212 = MUL 0x20 0x6
0x342: CALLDATACOPY V207 0xa4 0xc0
0x344: V213 = ADD V207 0xc0
0x351: V214 = CALLDATALOAD 0x164
0x352: V215 = 0xff
0x354: V216 = AND 0xff V214
0x356: V217 = 0x20
0x358: V218 = ADD 0x20 0x164
0x35e: V219 = CALLDATALOAD 0x184
0x35f: V220 = 0x0
0x361: V221 = NOT 0x0
0x362: V222 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V219
0x364: V223 = 0x20
0x366: V224 = ADD 0x20 0x184
0x36c: V225 = CALLDATALOAD 0x1a4
0x36d: V226 = 0x0
0x36f: V227 = NOT 0x0
0x370: V228 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V225
0x372: V229 = 0x20
0x374: V230 = ADD 0x20 0x1a4
0x37c: V231 = 0xb95
0x37f: JUMP 0xb95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x380, V194, V207, V216, V222, V228]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228]

================================

Block 0x380
[0x380:0x381]
---
Predecessors: [0xe98]
Successors: []
---
0x380 JUMPDEST
0x381 STOP
---
0x380: JUMPDEST 
0x381: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x382
[0x382:0x389]
---
Predecessors: [0x78]
Successors: [0x38a, 0x38e]
---
0x382 JUMPDEST
0x383 CALLVALUE
0x384 DUP1
0x385 ISZERO
0x386 PUSH2 0x38e
0x389 JUMPI
---
0x382: JUMPDEST 
0x383: V232 = CALLVALUE
0x385: V233 = ISZERO V232
0x386: V234 = 0x38e
0x389: JUMPI 0x38e V233
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V232]
Exit stack: [V11, V232]

================================

Block 0x38a
[0x38a:0x38d]
---
Predecessors: [0x382]
Successors: []
---
0x38a PUSH1 0x0
0x38c DUP1
0x38d REVERT
---
0x38a: V235 = 0x0
0x38d: REVERT 0x0 0x0
---
Entry stack: [V11, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V232]

================================

Block 0x38e
[0x38e:0x396]
---
Predecessors: [0x382]
Successors: [0xea2]
---
0x38e JUMPDEST
0x38f POP
0x390 PUSH2 0x397
0x393 PUSH2 0xea2
0x396 JUMP
---
0x38e: JUMPDEST 
0x390: V236 = 0x397
0x393: V237 = 0xea2
0x396: JUMP 0xea2
---
Entry stack: [V11, V232]
Stack pops: 1
Stack additions: [0x397]
Exit stack: [V11, 0x397]

================================

Block 0x397
[0x397:0x3d8]
---
Predecessors: [0xea2]
Successors: []
---
0x397 JUMPDEST
0x398 PUSH1 0x40
0x39a MLOAD
0x39b DUP1
0x39c DUP3
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 AND
0x3b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c8 AND
0x3c9 DUP2
0x3ca MSTORE
0x3cb PUSH1 0x20
0x3cd ADD
0x3ce SWAP2
0x3cf POP
0x3d0 POP
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 DUP1
0x3d5 SWAP2
0x3d6 SUB
0x3d7 SWAP1
0x3d8 RETURN
---
0x397: JUMPDEST 
0x398: V238 = 0x40
0x39a: V239 = M[0x40]
0x39d: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V943
0x3b3: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c8: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x3ca: M[V239] = V243
0x3cb: V244 = 0x20
0x3cd: V245 = ADD 0x20 V239
0x3d1: V246 = 0x40
0x3d3: V247 = M[0x40]
0x3d6: V248 = SUB V245 V247
0x3d8: RETURN V247 V248
---
Entry stack: [V11, 0x397, V943]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x397]

================================

Block 0x3d9
[0x3d9:0x3e0]
---
Predecessors: [0x83]
Successors: [0x3e1, 0x3e5]
---
0x3d9 JUMPDEST
0x3da CALLVALUE
0x3db DUP1
0x3dc ISZERO
0x3dd PUSH2 0x3e5
0x3e0 JUMPI
---
0x3d9: JUMPDEST 
0x3da: V249 = CALLVALUE
0x3dc: V250 = ISZERO V249
0x3dd: V251 = 0x3e5
0x3e0: JUMPI 0x3e5 V250
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V249]
Exit stack: [V11, V249]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3d9]
Successors: []
---
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 REVERT
---
0x3e1: V252 = 0x0
0x3e4: REVERT 0x0 0x0
---
Entry stack: [V11, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V249]

================================

Block 0x3e5
[0x3e5:0x3ed]
---
Predecessors: [0x3d9]
Successors: [0xec8]
---
0x3e5 JUMPDEST
0x3e6 POP
0x3e7 PUSH2 0x3ee
0x3ea PUSH2 0xec8
0x3ed JUMP
---
0x3e5: JUMPDEST 
0x3e7: V253 = 0x3ee
0x3ea: V254 = 0xec8
0x3ed: JUMP 0xec8
---
Entry stack: [V11, V249]
Stack pops: 1
Stack additions: [0x3ee]
Exit stack: [V11, 0x3ee]

================================

Block 0x3ee
[0x3ee:0x403]
---
Predecessors: [0xec8]
Successors: []
---
0x3ee JUMPDEST
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 DUP3
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 SWAP2
0x3fa POP
0x3fb POP
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff DUP1
0x400 SWAP2
0x401 SUB
0x402 SWAP1
0x403 RETURN
---
0x3ee: JUMPDEST 
0x3ef: V255 = 0x40
0x3f1: V256 = M[0x40]
0x3f5: M[V256] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3f6: V257 = 0x20
0x3f8: V258 = ADD 0x20 V256
0x3fc: V259 = 0x40
0x3fe: V260 = M[0x40]
0x401: V261 = SUB V258 V260
0x403: RETURN V260 V261
---
Entry stack: [V11, 0x3ee, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3ee]

================================

Block 0x404
[0x404:0x40b]
---
Predecessors: [0x8e]
Successors: [0x40c, 0x410]
---
0x404 JUMPDEST
0x405 CALLVALUE
0x406 DUP1
0x407 ISZERO
0x408 PUSH2 0x410
0x40b JUMPI
---
0x404: JUMPDEST 
0x405: V262 = CALLVALUE
0x407: V263 = ISZERO V262
0x408: V264 = 0x410
0x40b: JUMPI 0x410 V263
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V262]
Exit stack: [V11, V262]

================================

Block 0x40c
[0x40c:0x40f]
---
Predecessors: [0x404]
Successors: []
---
0x40c PUSH1 0x0
0x40e DUP1
0x40f REVERT
---
0x40c: V265 = 0x0
0x40f: REVERT 0x0 0x0
---
Entry stack: [V11, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V262]

================================

Block 0x410
[0x410:0x418]
---
Predecessors: [0x404]
Successors: [0xeec]
---
0x410 JUMPDEST
0x411 POP
0x412 PUSH2 0x419
0x415 PUSH2 0xeec
0x418 JUMP
---
0x410: JUMPDEST 
0x412: V266 = 0x419
0x415: V267 = 0xeec
0x418: JUMP 0xeec
---
Entry stack: [V11, V262]
Stack pops: 1
Stack additions: [0x419]
Exit stack: [V11, 0x419]

================================

Block 0x419
[0x419:0x45a]
---
Predecessors: [0xeec]
Successors: []
---
0x419 JUMPDEST
0x41a PUSH1 0x40
0x41c MLOAD
0x41d DUP1
0x41e DUP3
0x41f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x434 AND
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b DUP2
0x44c MSTORE
0x44d PUSH1 0x20
0x44f ADD
0x450 SWAP2
0x451 POP
0x452 POP
0x453 PUSH1 0x40
0x455 MLOAD
0x456 DUP1
0x457 SWAP2
0x458 SUB
0x459 SWAP1
0x45a RETURN
---
0x419: JUMPDEST 
0x41a: V268 = 0x40
0x41c: V269 = M[0x40]
0x41f: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x434: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V952
0x435: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x44c: M[V269] = V273
0x44d: V274 = 0x20
0x44f: V275 = ADD 0x20 V269
0x453: V276 = 0x40
0x455: V277 = M[0x40]
0x458: V278 = SUB V275 V277
0x45a: RETURN V277 V278
---
Entry stack: [V11, 0x419, V952]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x419]

================================

Block 0x45b
[0x45b:0x462]
---
Predecessors: [0x99]
Successors: [0x463, 0x467]
---
0x45b JUMPDEST
0x45c CALLVALUE
0x45d DUP1
0x45e ISZERO
0x45f PUSH2 0x467
0x462 JUMPI
---
0x45b: JUMPDEST 
0x45c: V279 = CALLVALUE
0x45e: V280 = ISZERO V279
0x45f: V281 = 0x467
0x462: JUMPI 0x467 V280
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V279]
Exit stack: [V11, V279]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x45b]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V282 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V11, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V279]

================================

Block 0x467
[0x467:0x49b]
---
Predecessors: [0x45b]
Successors: [0xf12]
---
0x467 JUMPDEST
0x468 POP
0x469 PUSH2 0x49c
0x46c PUSH1 0x4
0x46e DUP1
0x46f CALLDATASIZE
0x470 SUB
0x471 DUP2
0x472 ADD
0x473 SWAP1
0x474 DUP1
0x475 DUP1
0x476 CALLDATALOAD
0x477 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48c AND
0x48d SWAP1
0x48e PUSH1 0x20
0x490 ADD
0x491 SWAP1
0x492 SWAP3
0x493 SWAP2
0x494 SWAP1
0x495 POP
0x496 POP
0x497 POP
0x498 PUSH2 0xf12
0x49b JUMP
---
0x467: JUMPDEST 
0x469: V283 = 0x49c
0x46c: V284 = 0x4
0x46f: V285 = CALLDATASIZE
0x470: V286 = SUB V285 0x4
0x472: V287 = ADD 0x4 V286
0x476: V288 = CALLDATALOAD 0x4
0x477: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x48c: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x48e: V291 = 0x20
0x490: V292 = ADD 0x20 0x4
0x498: V293 = 0xf12
0x49b: JUMP 0xf12
---
Entry stack: [V11, V279]
Stack pops: 1
Stack additions: [0x49c, V290]
Exit stack: [V11, 0x49c, V290]

================================

Block 0x49c
[0x49c:0x49d]
---
Predecessors: [0xfa9]
Successors: []
---
0x49c JUMPDEST
0x49d STOP
---
0x49c: JUMPDEST 
0x49d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x49e
[0x49e:0x4a5]
---
Predecessors: [0xa4]
Successors: [0x4a6, 0x4aa]
---
0x49e JUMPDEST
0x49f CALLVALUE
0x4a0 DUP1
0x4a1 ISZERO
0x4a2 PUSH2 0x4aa
0x4a5 JUMPI
---
0x49e: JUMPDEST 
0x49f: V294 = CALLVALUE
0x4a1: V295 = ISZERO V294
0x4a2: V296 = 0x4aa
0x4a5: JUMPI 0x4aa V295
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V294]
Exit stack: [V11, V294]

================================

Block 0x4a6
[0x4a6:0x4a9]
---
Predecessors: [0x49e]
Successors: []
---
0x4a6 PUSH1 0x0
0x4a8 DUP1
0x4a9 REVERT
---
0x4a6: V297 = 0x0
0x4a9: REVERT 0x0 0x0
---
Entry stack: [V11, V294]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V294]

================================

Block 0x4aa
[0x4aa:0x4e8]
---
Predecessors: [0x49e]
Successors: [0x1067]
---
0x4aa JUMPDEST
0x4ab POP
0x4ac PUSH2 0x4e9
0x4af PUSH1 0x4
0x4b1 DUP1
0x4b2 CALLDATASIZE
0x4b3 SUB
0x4b4 DUP2
0x4b5 ADD
0x4b6 SWAP1
0x4b7 DUP1
0x4b8 DUP1
0x4b9 CALLDATALOAD
0x4ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cf AND
0x4d0 SWAP1
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 SWAP1
0x4d5 SWAP3
0x4d6 SWAP2
0x4d7 SWAP1
0x4d8 DUP1
0x4d9 CALLDATALOAD
0x4da SWAP1
0x4db PUSH1 0x20
0x4dd ADD
0x4de SWAP1
0x4df SWAP3
0x4e0 SWAP2
0x4e1 SWAP1
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 PUSH2 0x1067
0x4e8 JUMP
---
0x4aa: JUMPDEST 
0x4ac: V298 = 0x4e9
0x4af: V299 = 0x4
0x4b2: V300 = CALLDATASIZE
0x4b3: V301 = SUB V300 0x4
0x4b5: V302 = ADD 0x4 V301
0x4b9: V303 = CALLDATALOAD 0x4
0x4ba: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x4d1: V306 = 0x20
0x4d3: V307 = ADD 0x20 0x4
0x4d9: V308 = CALLDATALOAD 0x24
0x4db: V309 = 0x20
0x4dd: V310 = ADD 0x20 0x24
0x4e5: V311 = 0x1067
0x4e8: JUMP 0x1067
---
Entry stack: [V11, V294]
Stack pops: 1
Stack additions: [0x4e9, V305, V308]
Exit stack: [V11, 0x4e9, V305, V308]

================================

Block 0x4e9
[0x4e9:0x4ea]
---
Predecessors: [0x1108]
Successors: []
---
0x4e9 JUMPDEST
0x4ea STOP
---
0x4e9: JUMPDEST 
0x4ea: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4eb
[0x4eb:0x510]
---
Predecessors: [0xbd]
Successors: [0xc6]
---
0x4eb JUMPDEST
0x4ec PUSH1 0x2
0x4ee PUSH1 0x0
0x4f0 SWAP1
0x4f1 SLOAD
0x4f2 SWAP1
0x4f3 PUSH2 0x100
0x4f6 EXP
0x4f7 SWAP1
0x4f8 DIV
0x4f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50e AND
0x50f DUP2
0x510 JUMP
---
0x4eb: JUMPDEST 
0x4ec: V312 = 0x2
0x4ee: V313 = 0x0
0x4f1: V314 = S[0x2]
0x4f3: V315 = 0x100
0x4f6: V316 = EXP 0x100 0x0
0x4f8: V317 = DIV V314 0x1
0x4f9: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x510: JUMP 0xc6
---
Entry stack: [V11, 0xc6]
Stack pops: 1
Stack additions: [S0, V319]
Exit stack: [V11, 0xc6, V319]

================================

Block 0x511
[0x511:0x569]
---
Predecessors: [0x114]
Successors: [0x56a, 0x56e]
---
0x511 JUMPDEST
0x512 PUSH1 0x0
0x514 DUP1
0x515 PUSH1 0x0
0x517 SWAP1
0x518 SLOAD
0x519 SWAP1
0x51a PUSH2 0x100
0x51d EXP
0x51e SWAP1
0x51f DIV
0x520 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x535 AND
0x536 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54b AND
0x54c CALLER
0x54d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x562 AND
0x563 EQ
0x564 ISZERO
0x565 ISZERO
0x566 PUSH2 0x56e
0x569 JUMPI
---
0x511: JUMPDEST 
0x512: V320 = 0x0
0x515: V321 = 0x0
0x518: V322 = S[0x0]
0x51a: V323 = 0x100
0x51d: V324 = EXP 0x100 0x0
0x51f: V325 = DIV V322 0x1
0x520: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x535: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x536: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x54b: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x54c: V330 = CALLER
0x54d: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x562: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x563: V333 = EQ V332 V329
0x564: V334 = ISZERO V333
0x565: V335 = ISZERO V334
0x566: V336 = 0x56e
0x569: JUMPI 0x56e V335
---
Entry stack: [V11, 0x173, V73, V78, V81]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x173, V73, V78, V81, 0x0]

================================

Block 0x56a
[0x56a:0x56d]
---
Predecessors: [0x511]
Successors: []
---
0x56a PUSH1 0x0
0x56c DUP1
0x56d REVERT
---
0x56a: V337 = 0x0
0x56d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x173, V73, V78, V81, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x173, V73, V78, V81, 0x0]

================================

Block 0x56e
[0x56e:0x60c]
---
Predecessors: [0x511]
Successors: [0x60d, 0x611]
---
0x56e JUMPDEST
0x56f DUP4
0x570 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x585 AND
0x586 PUSH4 0xa9059cbb
0x58b DUP5
0x58c DUP5
0x58d PUSH1 0x40
0x58f MLOAD
0x590 DUP4
0x591 PUSH4 0xffffffff
0x596 AND
0x597 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5b5 MUL
0x5b6 DUP2
0x5b7 MSTORE
0x5b8 PUSH1 0x4
0x5ba ADD
0x5bb DUP1
0x5bc DUP4
0x5bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d2 AND
0x5d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e8 AND
0x5e9 DUP2
0x5ea MSTORE
0x5eb PUSH1 0x20
0x5ed ADD
0x5ee DUP3
0x5ef DUP2
0x5f0 MSTORE
0x5f1 PUSH1 0x20
0x5f3 ADD
0x5f4 SWAP3
0x5f5 POP
0x5f6 POP
0x5f7 POP
0x5f8 PUSH1 0x20
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd DUP1
0x5fe DUP4
0x5ff SUB
0x600 DUP2
0x601 PUSH1 0x0
0x603 DUP8
0x604 DUP1
0x605 EXTCODESIZE
0x606 ISZERO
0x607 DUP1
0x608 ISZERO
0x609 PUSH2 0x611
0x60c JUMPI
---
0x56e: JUMPDEST 
0x570: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x585: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x586: V340 = 0xa9059cbb
0x58d: V341 = 0x40
0x58f: V342 = M[0x40]
0x591: V343 = 0xffffffff
0x596: V344 = AND 0xffffffff 0xa9059cbb
0x597: V345 = 0x100000000000000000000000000000000000000000000000000000000
0x5b5: V346 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x5b7: M[V342] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5b8: V347 = 0x4
0x5ba: V348 = ADD 0x4 V342
0x5bd: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d2: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x5d3: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e8: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x5ea: M[V348] = V352
0x5eb: V353 = 0x20
0x5ed: V354 = ADD 0x20 V348
0x5f0: M[V354] = V81
0x5f1: V355 = 0x20
0x5f3: V356 = ADD 0x20 V354
0x5f8: V357 = 0x20
0x5fa: V358 = 0x40
0x5fc: V359 = M[0x40]
0x5ff: V360 = SUB V356 V359
0x601: V361 = 0x0
0x605: V362 = EXTCODESIZE V339
0x606: V363 = ISZERO V362
0x608: V364 = ISZERO V363
0x609: V365 = 0x611
0x60c: JUMPI 0x611 V364
---
Entry stack: [V11, 0x173, V73, V78, V81, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V339, 0xa9059cbb, V356, 0x20, V359, V360, V359, 0x0, V339, V363]
Exit stack: [V11, 0x173, V73, V78, V81, 0x0, V339, 0xa9059cbb, V356, 0x20, V359, V360, V359, 0x0, V339, V363]

================================

Block 0x60d
[0x60d:0x610]
---
Predecessors: [0x56e]
Successors: []
---
0x60d PUSH1 0x0
0x60f DUP1
0x610 REVERT
---
0x60d: V366 = 0x0
0x610: REVERT 0x0 0x0
---
Entry stack: [V11, 0x173, V73, V78, V81, 0x0, V339, 0xa9059cbb, V356, 0x20, V359, V360, V359, 0x0, V339, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x173, V73, V78, V81, 0x0, V339, 0xa9059cbb, V356, 0x20, V359, V360, V359, 0x0, V339, V363]

================================

Block 0x611
[0x611:0x61b]
---
Predecessors: [0x56e]
Successors: [0x61c, 0x625]
---
0x611 JUMPDEST
0x612 POP
0x613 GAS
0x614 CALL
0x615 ISZERO
0x616 DUP1
0x617 ISZERO
0x618 PUSH2 0x625
0x61b JUMPI
---
0x611: JUMPDEST 
0x613: V367 = GAS
0x614: V368 = CALL V367 V339 0x0 V359 V360 V359 0x20
0x615: V369 = ISZERO V368
0x617: V370 = ISZERO V369
0x618: V371 = 0x625
0x61b: JUMPI 0x625 V370
---
Entry stack: [V11, 0x173, V73, V78, V81, 0x0, V339, 0xa9059cbb, V356, 0x20, V359, V360, V359, 0x0, V339, V363]
Stack pops: 7
Stack additions: [V369]
Exit stack: [V11, 0x173, V73, V78, V81, 0x0, V339, 0xa9059cbb, V356, V369]

================================

Block 0x61c
[0x61c:0x624]
---
Predecessors: [0x611]
Successors: []
---
0x61c RETURNDATASIZE
0x61d PUSH1 0x0
0x61f DUP1
0x620 RETURNDATACOPY
0x621 RETURNDATASIZE
0x622 PUSH1 0x0
0x624 REVERT
---
0x61c: V372 = RETURNDATASIZE
0x61d: V373 = 0x0
0x620: RETURNDATACOPY 0x0 0x0 V372
0x621: V374 = RETURNDATASIZE
0x622: V375 = 0x0
0x624: REVERT 0x0 V374
---
Entry stack: [V11, 0x173, V73, V78, V81, 0x0, V339, 0xa9059cbb, V356, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x173, V73, V78, V81, 0x0, V339, 0xa9059cbb, V356, V369]

================================

Block 0x625
[0x625:0x636]
---
Predecessors: [0x611]
Successors: [0x637, 0x63b]
---
0x625 JUMPDEST
0x626 POP
0x627 POP
0x628 POP
0x629 POP
0x62a PUSH1 0x40
0x62c MLOAD
0x62d RETURNDATASIZE
0x62e PUSH1 0x20
0x630 DUP2
0x631 LT
0x632 ISZERO
0x633 PUSH2 0x63b
0x636 JUMPI
---
0x625: JUMPDEST 
0x62a: V376 = 0x40
0x62c: V377 = M[0x40]
0x62d: V378 = RETURNDATASIZE
0x62e: V379 = 0x20
0x631: V380 = LT V378 0x20
0x632: V381 = ISZERO V380
0x633: V382 = 0x63b
0x636: JUMPI 0x63b V381
---
Entry stack: [V11, 0x173, V73, V78, V81, 0x0, V339, 0xa9059cbb, V356, V369]
Stack pops: 4
Stack additions: [V377, V378]
Exit stack: [V11, 0x173, V73, V78, V81, 0x0, V377, V378]

================================

Block 0x637
[0x637:0x63a]
---
Predecessors: [0x625]
Successors: []
---
0x637 PUSH1 0x0
0x639 DUP1
0x63a REVERT
---
0x637: V383 = 0x0
0x63a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x173, V73, V78, V81, 0x0, V377, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x173, V73, V78, V81, 0x0, V377, V378]

================================

Block 0x63b
[0x63b:0x654]
---
Predecessors: [0x625]
Successors: [0x173]
---
0x63b JUMPDEST
0x63c DUP2
0x63d ADD
0x63e SWAP1
0x63f DUP1
0x640 DUP1
0x641 MLOAD
0x642 SWAP1
0x643 PUSH1 0x20
0x645 ADD
0x646 SWAP1
0x647 SWAP3
0x648 SWAP2
0x649 SWAP1
0x64a POP
0x64b POP
0x64c POP
0x64d SWAP1
0x64e POP
0x64f SWAP4
0x650 SWAP3
0x651 POP
0x652 POP
0x653 POP
0x654 JUMP
---
0x63b: JUMPDEST 
0x63d: V384 = ADD V377 V378
0x641: V385 = M[V377]
0x643: V386 = 0x20
0x645: V387 = ADD 0x20 V377
0x654: JUMP 0x173
---
Entry stack: [V11, 0x173, V73, V78, V81, 0x0, V377, V378]
Stack pops: 7
Stack additions: [V385]
Exit stack: [V11, V385]

================================

Block 0x655
[0x655:0x659]
---
Predecessors: [0x199]
Successors: [0x1a2]
---
0x655 JUMPDEST
0x656 PUSH1 0x0
0x658 DUP2
0x659 JUMP
---
0x655: JUMPDEST 
0x656: V388 = 0x0
0x659: JUMP 0x1a2
---
Entry stack: [V11, 0x1a2]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0x1a2, 0x0]

================================

Block 0x65a
[0x65a:0x67e]
---
Predecessors: [0x1f0]
Successors: [0x1f9]
---
0x65a JUMPDEST
0x65b PUSH1 0x0
0x65d DUP1
0x65e SWAP1
0x65f SLOAD
0x660 SWAP1
0x661 PUSH2 0x100
0x664 EXP
0x665 SWAP1
0x666 DIV
0x667 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67c AND
0x67d DUP2
0x67e JUMP
---
0x65a: JUMPDEST 
0x65b: V389 = 0x0
0x65f: V390 = S[0x0]
0x661: V391 = 0x100
0x664: V392 = EXP 0x100 0x0
0x666: V393 = DIV V390 0x1
0x667: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x67c: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x67e: JUMP 0x1f9
---
Entry stack: [V11, 0x1f9]
Stack pops: 1
Stack additions: [S0, V395]
Exit stack: [V11, 0x1f9, V395]

================================

Block 0x67f
[0x67f:0x691]
---
Predecessors: [0x247]
Successors: [0x692, 0x693]
---
0x67f JUMPDEST
0x680 PUSH1 0x0
0x682 DUP1
0x683 PUSH1 0x0
0x685 DUP8
0x686 PUSH1 0x3
0x688 PUSH1 0x5
0x68a DUP2
0x68b LT
0x68c ISZERO
0x68d ISZERO
0x68e PUSH2 0x693
0x691 JUMPI
---
0x67f: JUMPDEST 
0x680: V396 = 0x0
0x683: V397 = 0x0
0x686: V398 = 0x3
0x688: V399 = 0x5
0x68b: V400 = LT 0x3 0x5
0x68c: V401 = ISZERO 0x1
0x68d: V402 = ISZERO 0x0
0x68e: V403 = 0x693
0x691: JUMPI 0x693 0x1
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, 0x0, 0x0, S4, 0x3]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, 0x0, 0x0, 0x0, V145, 0x3]

================================

Block 0x692
[0x692:0x692]
---
Predecessors: [0x67f]
Successors: []
---
0x692 INVALID
---
0x692: INVALID 
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, 0x0, 0x0, 0x0, V145, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, 0x0, 0x0, 0x0, V145, 0x3]

================================

Block 0x693
[0x693:0x730]
---
Predecessors: [0x67f]
Successors: [0x731, 0x735]
---
0x693 JUMPDEST
0x694 PUSH1 0x20
0x696 MUL
0x697 ADD
0x698 MLOAD
0x699 SWAP3
0x69a POP
0x69b DUP3
0x69c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b1 AND
0x6b2 PUSH4 0x70a08231
0x6b7 ADDRESS
0x6b8 PUSH1 0x40
0x6ba MLOAD
0x6bb DUP3
0x6bc PUSH4 0xffffffff
0x6c1 AND
0x6c2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6e0 MUL
0x6e1 DUP2
0x6e2 MSTORE
0x6e3 PUSH1 0x4
0x6e5 ADD
0x6e6 DUP1
0x6e7 DUP3
0x6e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fd AND
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 DUP2
0x715 MSTORE
0x716 PUSH1 0x20
0x718 ADD
0x719 SWAP2
0x71a POP
0x71b POP
0x71c PUSH1 0x20
0x71e PUSH1 0x40
0x720 MLOAD
0x721 DUP1
0x722 DUP4
0x723 SUB
0x724 DUP2
0x725 PUSH1 0x0
0x727 DUP8
0x728 DUP1
0x729 EXTCODESIZE
0x72a ISZERO
0x72b DUP1
0x72c ISZERO
0x72d PUSH2 0x735
0x730 JUMPI
---
0x693: JUMPDEST 
0x694: V404 = 0x20
0x696: V405 = MUL 0x20 0x3
0x697: V406 = ADD 0x60 V145
0x698: V407 = M[V406]
0x69c: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x6b2: V410 = 0x70a08231
0x6b7: V411 = ADDRESS
0x6b8: V412 = 0x40
0x6ba: V413 = M[0x40]
0x6bc: V414 = 0xffffffff
0x6c1: V415 = AND 0xffffffff 0x70a08231
0x6c2: V416 = 0x100000000000000000000000000000000000000000000000000000000
0x6e0: V417 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x6e2: M[V413] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6e3: V418 = 0x4
0x6e5: V419 = ADD 0x4 V413
0x6e8: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fd: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x6fe: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x715: M[V419] = V423
0x716: V424 = 0x20
0x718: V425 = ADD 0x20 V419
0x71c: V426 = 0x20
0x71e: V427 = 0x40
0x720: V428 = M[0x40]
0x723: V429 = SUB V425 V428
0x725: V430 = 0x0
0x729: V431 = EXTCODESIZE V409
0x72a: V432 = ISZERO V431
0x72c: V433 = ISZERO V432
0x72d: V434 = 0x735
0x730: JUMPI 0x735 V433
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, 0x0, 0x0, 0x0, V145, 0x3]
Stack pops: 5
Stack additions: [V407, S3, S2, V409, 0x70a08231, V425, 0x20, V428, V429, V428, 0x0, V409, V432]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V409, 0x70a08231, V425, 0x20, V428, V429, V428, 0x0, V409, V432]

================================

Block 0x731
[0x731:0x734]
---
Predecessors: [0x693]
Successors: []
---
0x731 PUSH1 0x0
0x733 DUP1
0x734 REVERT
---
0x731: V435 = 0x0
0x734: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V409, 0x70a08231, V425, 0x20, V428, V429, V428, 0x0, V409, V432]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V409, 0x70a08231, V425, 0x20, V428, V429, V428, 0x0, V409, V432]

================================

Block 0x735
[0x735:0x73f]
---
Predecessors: [0x693]
Successors: [0x740, 0x749]
---
0x735 JUMPDEST
0x736 POP
0x737 GAS
0x738 CALL
0x739 ISZERO
0x73a DUP1
0x73b ISZERO
0x73c PUSH2 0x749
0x73f JUMPI
---
0x735: JUMPDEST 
0x737: V436 = GAS
0x738: V437 = CALL V436 V409 0x0 V428 V429 V428 0x20
0x739: V438 = ISZERO V437
0x73b: V439 = ISZERO V438
0x73c: V440 = 0x749
0x73f: JUMPI 0x749 V439
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V409, 0x70a08231, V425, 0x20, V428, V429, V428, 0x0, V409, V432]
Stack pops: 7
Stack additions: [V438]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V409, 0x70a08231, V425, V438]

================================

Block 0x740
[0x740:0x748]
---
Predecessors: [0x735]
Successors: []
---
0x740 RETURNDATASIZE
0x741 PUSH1 0x0
0x743 DUP1
0x744 RETURNDATACOPY
0x745 RETURNDATASIZE
0x746 PUSH1 0x0
0x748 REVERT
---
0x740: V441 = RETURNDATASIZE
0x741: V442 = 0x0
0x744: RETURNDATACOPY 0x0 0x0 V441
0x745: V443 = RETURNDATASIZE
0x746: V444 = 0x0
0x748: REVERT 0x0 V443
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V409, 0x70a08231, V425, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V409, 0x70a08231, V425, V438]

================================

Block 0x749
[0x749:0x75a]
---
Predecessors: [0x735]
Successors: [0x75b, 0x75f]
---
0x749 JUMPDEST
0x74a POP
0x74b POP
0x74c POP
0x74d POP
0x74e PUSH1 0x40
0x750 MLOAD
0x751 RETURNDATASIZE
0x752 PUSH1 0x20
0x754 DUP2
0x755 LT
0x756 ISZERO
0x757 PUSH2 0x75f
0x75a JUMPI
---
0x749: JUMPDEST 
0x74e: V445 = 0x40
0x750: V446 = M[0x40]
0x751: V447 = RETURNDATASIZE
0x752: V448 = 0x20
0x755: V449 = LT V447 0x20
0x756: V450 = ISZERO V449
0x757: V451 = 0x75f
0x75a: JUMPI 0x75f V450
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V409, 0x70a08231, V425, V438]
Stack pops: 4
Stack additions: [V446, V447]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V446, V447]

================================

Block 0x75b
[0x75b:0x75e]
---
Predecessors: [0x749]
Successors: []
---
0x75b PUSH1 0x0
0x75d DUP1
0x75e REVERT
---
0x75b: V452 = 0x0
0x75e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V446, V447]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V446, V447]

================================

Block 0x75f
[0x75f:0x832]
---
Predecessors: [0x749]
Successors: [0x833, 0x837]
---
0x75f JUMPDEST
0x760 DUP2
0x761 ADD
0x762 SWAP1
0x763 DUP1
0x764 DUP1
0x765 MLOAD
0x766 SWAP1
0x767 PUSH1 0x20
0x769 ADD
0x76a SWAP1
0x76b SWAP3
0x76c SWAP2
0x76d SWAP1
0x76e POP
0x76f POP
0x770 POP
0x771 SWAP2
0x772 POP
0x773 DUP3
0x774 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x789 AND
0x78a PUSH4 0x95ea7b3
0x78f PUSH1 0x3
0x791 PUSH1 0x0
0x793 SWAP1
0x794 SLOAD
0x795 SWAP1
0x796 PUSH2 0x100
0x799 EXP
0x79a SWAP1
0x79b DIV
0x79c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b1 AND
0x7b2 DUP5
0x7b3 PUSH1 0x40
0x7b5 MLOAD
0x7b6 DUP4
0x7b7 PUSH4 0xffffffff
0x7bc AND
0x7bd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7db MUL
0x7dc DUP2
0x7dd MSTORE
0x7de PUSH1 0x4
0x7e0 ADD
0x7e1 DUP1
0x7e2 DUP4
0x7e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f8 AND
0x7f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80e AND
0x80f DUP2
0x810 MSTORE
0x811 PUSH1 0x20
0x813 ADD
0x814 DUP3
0x815 DUP2
0x816 MSTORE
0x817 PUSH1 0x20
0x819 ADD
0x81a SWAP3
0x81b POP
0x81c POP
0x81d POP
0x81e PUSH1 0x20
0x820 PUSH1 0x40
0x822 MLOAD
0x823 DUP1
0x824 DUP4
0x825 SUB
0x826 DUP2
0x827 PUSH1 0x0
0x829 DUP8
0x82a DUP1
0x82b EXTCODESIZE
0x82c ISZERO
0x82d DUP1
0x82e ISZERO
0x82f PUSH2 0x837
0x832 JUMPI
---
0x75f: JUMPDEST 
0x761: V453 = ADD V446 V447
0x765: V454 = M[V446]
0x767: V455 = 0x20
0x769: V456 = ADD 0x20 V446
0x774: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x789: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x78a: V459 = 0x95ea7b3
0x78f: V460 = 0x3
0x791: V461 = 0x0
0x794: V462 = S[0x3]
0x796: V463 = 0x100
0x799: V464 = EXP 0x100 0x0
0x79b: V465 = DIV V462 0x1
0x79c: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b1: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x7b3: V468 = 0x40
0x7b5: V469 = M[0x40]
0x7b7: V470 = 0xffffffff
0x7bc: V471 = AND 0xffffffff 0x95ea7b3
0x7bd: V472 = 0x100000000000000000000000000000000000000000000000000000000
0x7db: V473 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x95ea7b3
0x7dd: M[V469] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x7de: V474 = 0x4
0x7e0: V475 = ADD 0x4 V469
0x7e3: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x7f9: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x80e: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x810: M[V475] = V479
0x811: V480 = 0x20
0x813: V481 = ADD 0x20 V475
0x816: M[V481] = V454
0x817: V482 = 0x20
0x819: V483 = ADD 0x20 V481
0x81e: V484 = 0x20
0x820: V485 = 0x40
0x822: V486 = M[0x40]
0x825: V487 = SUB V483 V486
0x827: V488 = 0x0
0x82b: V489 = EXTCODESIZE V458
0x82c: V490 = ISZERO V489
0x82e: V491 = ISZERO V490
0x82f: V492 = 0x837
0x832: JUMPI 0x837 V491
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, 0x0, 0x0, V446, V447]
Stack pops: 5
Stack additions: [S4, V454, S2, V458, 0x95ea7b3, V483, 0x20, V486, V487, V486, 0x0, V458, V490]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V458, 0x95ea7b3, V483, 0x20, V486, V487, V486, 0x0, V458, V490]

================================

Block 0x833
[0x833:0x836]
---
Predecessors: [0x75f]
Successors: []
---
0x833 PUSH1 0x0
0x835 DUP1
0x836 REVERT
---
0x833: V493 = 0x0
0x836: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V458, 0x95ea7b3, V483, 0x20, V486, V487, V486, 0x0, V458, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V458, 0x95ea7b3, V483, 0x20, V486, V487, V486, 0x0, V458, V490]

================================

Block 0x837
[0x837:0x841]
---
Predecessors: [0x75f]
Successors: [0x842, 0x84b]
---
0x837 JUMPDEST
0x838 POP
0x839 GAS
0x83a CALL
0x83b ISZERO
0x83c DUP1
0x83d ISZERO
0x83e PUSH2 0x84b
0x841 JUMPI
---
0x837: JUMPDEST 
0x839: V494 = GAS
0x83a: V495 = CALL V494 V458 0x0 V486 V487 V486 0x20
0x83b: V496 = ISZERO V495
0x83d: V497 = ISZERO V496
0x83e: V498 = 0x84b
0x841: JUMPI 0x84b V497
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V458, 0x95ea7b3, V483, 0x20, V486, V487, V486, 0x0, V458, V490]
Stack pops: 7
Stack additions: [V496]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V458, 0x95ea7b3, V483, V496]

================================

Block 0x842
[0x842:0x84a]
---
Predecessors: [0x837]
Successors: []
---
0x842 RETURNDATASIZE
0x843 PUSH1 0x0
0x845 DUP1
0x846 RETURNDATACOPY
0x847 RETURNDATASIZE
0x848 PUSH1 0x0
0x84a REVERT
---
0x842: V499 = RETURNDATASIZE
0x843: V500 = 0x0
0x846: RETURNDATACOPY 0x0 0x0 V499
0x847: V501 = RETURNDATASIZE
0x848: V502 = 0x0
0x84a: REVERT 0x0 V501
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V458, 0x95ea7b3, V483, V496]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V458, 0x95ea7b3, V483, V496]

================================

Block 0x84b
[0x84b:0x85c]
---
Predecessors: [0x837]
Successors: [0x85d, 0x861]
---
0x84b JUMPDEST
0x84c POP
0x84d POP
0x84e POP
0x84f POP
0x850 PUSH1 0x40
0x852 MLOAD
0x853 RETURNDATASIZE
0x854 PUSH1 0x20
0x856 DUP2
0x857 LT
0x858 ISZERO
0x859 PUSH2 0x861
0x85c JUMPI
---
0x84b: JUMPDEST 
0x850: V503 = 0x40
0x852: V504 = M[0x40]
0x853: V505 = RETURNDATASIZE
0x854: V506 = 0x20
0x857: V507 = LT V505 0x20
0x858: V508 = ISZERO V507
0x859: V509 = 0x861
0x85c: JUMPI 0x861 V508
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V458, 0x95ea7b3, V483, V496]
Stack pops: 4
Stack additions: [V504, V505]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V504, V505]

================================

Block 0x85d
[0x85d:0x860]
---
Predecessors: [0x84b]
Successors: []
---
0x85d PUSH1 0x0
0x85f DUP1
0x860 REVERT
---
0x85d: V510 = 0x0
0x860: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V504, V505]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V504, V505]

================================

Block 0x861
[0x861:0x8f3]
---
Predecessors: [0x84b]
Successors: [0x8f4]
---
0x861 JUMPDEST
0x862 DUP2
0x863 ADD
0x864 SWAP1
0x865 DUP1
0x866 DUP1
0x867 MLOAD
0x868 SWAP1
0x869 PUSH1 0x20
0x86b ADD
0x86c SWAP1
0x86d SWAP3
0x86e SWAP2
0x86f SWAP1
0x870 POP
0x871 POP
0x872 POP
0x873 POP
0x874 PUSH1 0x1
0x876 PUSH1 0x0
0x878 SWAP1
0x879 SLOAD
0x87a SWAP1
0x87b PUSH2 0x100
0x87e EXP
0x87f SWAP1
0x880 DIV
0x881 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x896 AND
0x897 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ac AND
0x8ad PUSH4 0xbc61394a
0x8b2 DUP10
0x8b3 DUP10
0x8b4 DUP6
0x8b5 PUSH1 0x1
0x8b7 DUP12
0x8b8 DUP12
0x8b9 DUP12
0x8ba PUSH1 0x40
0x8bc MLOAD
0x8bd DUP9
0x8be PUSH4 0xffffffff
0x8c3 AND
0x8c4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8e2 MUL
0x8e3 DUP2
0x8e4 MSTORE
0x8e5 PUSH1 0x4
0x8e7 ADD
0x8e8 DUP1
0x8e9 DUP9
0x8ea PUSH1 0x5
0x8ec PUSH1 0x20
0x8ee MUL
0x8ef DUP1
0x8f0 DUP4
0x8f1 DUP4
0x8f2 PUSH1 0x0
---
0x861: JUMPDEST 
0x863: V511 = ADD V504 V505
0x867: V512 = M[V504]
0x869: V513 = 0x20
0x86b: V514 = ADD 0x20 V504
0x874: V515 = 0x1
0x876: V516 = 0x0
0x879: V517 = S[0x1]
0x87b: V518 = 0x100
0x87e: V519 = EXP 0x100 0x0
0x880: V520 = DIV V517 0x1
0x881: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x896: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x897: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ac: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x8ad: V525 = 0xbc61394a
0x8b5: V526 = 0x1
0x8ba: V527 = 0x40
0x8bc: V528 = M[0x40]
0x8be: V529 = 0xffffffff
0x8c3: V530 = AND 0xffffffff 0xbc61394a
0x8c4: V531 = 0x100000000000000000000000000000000000000000000000000000000
0x8e2: V532 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbc61394a
0x8e4: M[V528] = 0xbc61394a00000000000000000000000000000000000000000000000000000000
0x8e5: V533 = 0x4
0x8e7: V534 = ADD 0x4 V528
0x8ea: V535 = 0x5
0x8ec: V536 = 0x20
0x8ee: V537 = MUL 0x20 0x5
0x8f2: V538 = 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V504, V505]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V524, 0xbc61394a, S9, S8, S3, 0x1, S7, S6, S5, V534, V534, S9, 0xa0, 0xa0, V534, S9, 0x0]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V534, V145, 0xa0, 0xa0, V534, V145, 0x0]

================================

Block 0x8f4
[0x8f4:0x8fc]
---
Predecessors: [0x861, 0x8fd]
Successors: [0x8fd, 0x90f]
---
0x8f4 JUMPDEST
0x8f5 DUP4
0x8f6 DUP2
0x8f7 LT
0x8f8 ISZERO
0x8f9 PUSH2 0x90f
0x8fc JUMPI
---
0x8f4: JUMPDEST 
0x8f7: V539 = LT S0 0xa0
0x8f8: V540 = ISZERO V539
0x8f9: V541 = 0x90f
0x8fc: JUMPI 0x90f V540
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V534, V145, 0xa0, 0xa0, V534, V145, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V534, V145, 0xa0, 0xa0, V534, V145, S0]

================================

Block 0x8fd
[0x8fd:0x90e]
---
Predecessors: [0x8f4]
Successors: [0x8f4]
---
0x8fd DUP1
0x8fe DUP3
0x8ff ADD
0x900 MLOAD
0x901 DUP2
0x902 DUP5
0x903 ADD
0x904 MSTORE
0x905 PUSH1 0x20
0x907 DUP2
0x908 ADD
0x909 SWAP1
0x90a POP
0x90b PUSH2 0x8f4
0x90e JUMP
---
0x8ff: V542 = ADD V145 S0
0x900: V543 = M[V542]
0x903: V544 = ADD V534 S0
0x904: M[V544] = V543
0x905: V545 = 0x20
0x908: V546 = ADD S0 0x20
0x90b: V547 = 0x8f4
0x90e: JUMP 0x8f4
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V534, V145, 0xa0, 0xa0, V534, V145, S0]
Stack pops: 3
Stack additions: [S2, S1, V546]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V534, V145, 0xa0, 0xa0, V534, V145, V546]

================================

Block 0x90f
[0x90f:0x921]
---
Predecessors: [0x8f4]
Successors: [0x922]
---
0x90f JUMPDEST
0x910 POP
0x911 POP
0x912 POP
0x913 POP
0x914 SWAP1
0x915 POP
0x916 ADD
0x917 DUP8
0x918 PUSH1 0x6
0x91a PUSH1 0x20
0x91c MUL
0x91d DUP1
0x91e DUP4
0x91f DUP4
0x920 PUSH1 0x0
---
0x90f: JUMPDEST 
0x916: V548 = ADD 0xa0 V534
0x918: V549 = 0x6
0x91a: V550 = 0x20
0x91c: V551 = MUL 0x20 0x6
0x920: V552 = 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V534, V145, 0xa0, 0xa0, V534, V145, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, V548, S13, 0xc0, 0xc0, V548, S13, 0x0]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V548, V158, 0xc0, 0xc0, V548, V158, 0x0]

================================

Block 0x922
[0x922:0x92a]
---
Predecessors: [0x90f, 0x92b]
Successors: [0x92b, 0x93d]
---
0x922 JUMPDEST
0x923 DUP4
0x924 DUP2
0x925 LT
0x926 ISZERO
0x927 PUSH2 0x93d
0x92a JUMPI
---
0x922: JUMPDEST 
0x925: V553 = LT S0 0xc0
0x926: V554 = ISZERO V553
0x927: V555 = 0x93d
0x92a: JUMPI 0x93d V554
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V548, V158, 0xc0, 0xc0, V548, V158, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V548, V158, 0xc0, 0xc0, V548, V158, S0]

================================

Block 0x92b
[0x92b:0x93c]
---
Predecessors: [0x922]
Successors: [0x922]
---
0x92b DUP1
0x92c DUP3
0x92d ADD
0x92e MLOAD
0x92f DUP2
0x930 DUP5
0x931 ADD
0x932 MSTORE
0x933 PUSH1 0x20
0x935 DUP2
0x936 ADD
0x937 SWAP1
0x938 POP
0x939 PUSH2 0x922
0x93c JUMP
---
0x92d: V556 = ADD V158 S0
0x92e: V557 = M[V556]
0x931: V558 = ADD V548 S0
0x932: M[V558] = V557
0x933: V559 = 0x20
0x936: V560 = ADD S0 0x20
0x939: V561 = 0x922
0x93c: JUMP 0x922
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V548, V158, 0xc0, 0xc0, V548, V158, S0]
Stack pops: 3
Stack additions: [S2, S1, V560]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V548, V158, 0xc0, 0xc0, V548, V158, V560]

================================

Block 0x93d
[0x93d:0x99a]
---
Predecessors: [0x922]
Successors: [0x99b, 0x99f]
---
0x93d JUMPDEST
0x93e POP
0x93f POP
0x940 POP
0x941 POP
0x942 SWAP1
0x943 POP
0x944 ADD
0x945 DUP7
0x946 DUP2
0x947 MSTORE
0x948 PUSH1 0x20
0x94a ADD
0x94b DUP6
0x94c ISZERO
0x94d ISZERO
0x94e ISZERO
0x94f ISZERO
0x950 DUP2
0x951 MSTORE
0x952 PUSH1 0x20
0x954 ADD
0x955 DUP5
0x956 PUSH1 0xff
0x958 AND
0x959 PUSH1 0xff
0x95b AND
0x95c DUP2
0x95d MSTORE
0x95e PUSH1 0x20
0x960 ADD
0x961 DUP4
0x962 PUSH1 0x0
0x964 NOT
0x965 AND
0x966 PUSH1 0x0
0x968 NOT
0x969 AND
0x96a DUP2
0x96b MSTORE
0x96c PUSH1 0x20
0x96e ADD
0x96f DUP3
0x970 PUSH1 0x0
0x972 NOT
0x973 AND
0x974 PUSH1 0x0
0x976 NOT
0x977 AND
0x978 DUP2
0x979 MSTORE
0x97a PUSH1 0x20
0x97c ADD
0x97d SWAP8
0x97e POP
0x97f POP
0x980 POP
0x981 POP
0x982 POP
0x983 POP
0x984 POP
0x985 POP
0x986 PUSH1 0x20
0x988 PUSH1 0x40
0x98a MLOAD
0x98b DUP1
0x98c DUP4
0x98d SUB
0x98e DUP2
0x98f PUSH1 0x0
0x991 DUP8
0x992 DUP1
0x993 EXTCODESIZE
0x994 ISZERO
0x995 DUP1
0x996 ISZERO
0x997 PUSH2 0x99f
0x99a JUMPI
---
0x93d: JUMPDEST 
0x944: V562 = ADD 0xc0 V548
0x947: M[V562] = V454
0x948: V563 = 0x20
0x94a: V564 = ADD 0x20 V562
0x94c: V565 = ISZERO 0x1
0x94d: V566 = ISZERO 0x0
0x94e: V567 = ISZERO 0x1
0x94f: V568 = ISZERO 0x0
0x951: M[V564] = 0x1
0x952: V569 = 0x20
0x954: V570 = ADD 0x20 V564
0x956: V571 = 0xff
0x958: V572 = AND 0xff V167
0x959: V573 = 0xff
0x95b: V574 = AND 0xff V572
0x95d: M[V570] = V574
0x95e: V575 = 0x20
0x960: V576 = ADD 0x20 V570
0x962: V577 = 0x0
0x964: V578 = NOT 0x0
0x965: V579 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V173
0x966: V580 = 0x0
0x968: V581 = NOT 0x0
0x969: V582 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V579
0x96b: M[V576] = V582
0x96c: V583 = 0x20
0x96e: V584 = ADD 0x20 V576
0x970: V585 = 0x0
0x972: V586 = NOT 0x0
0x973: V587 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V179
0x974: V588 = 0x0
0x976: V589 = NOT 0x0
0x977: V590 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V587
0x979: M[V584] = V590
0x97a: V591 = 0x20
0x97c: V592 = ADD 0x20 V584
0x986: V593 = 0x20
0x988: V594 = 0x40
0x98a: V595 = M[0x40]
0x98d: V596 = SUB V592 V595
0x98f: V597 = 0x0
0x993: V598 = EXTCODESIZE V524
0x994: V599 = ISZERO V598
0x996: V600 = ISZERO V599
0x997: V601 = 0x99f
0x99a: JUMPI 0x99f V600
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V145, V158, V454, 0x1, V167, V173, V179, V534, V548, V158, 0xc0, 0xc0, V548, V158, S0]
Stack pops: 17
Stack additions: [S16, S15, V592, 0x20, V595, V596, V595, 0x0, S16, V599]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V592, 0x20, V595, V596, V595, 0x0, V524, V599]

================================

Block 0x99b
[0x99b:0x99e]
---
Predecessors: [0x93d]
Successors: []
---
0x99b PUSH1 0x0
0x99d DUP1
0x99e REVERT
---
0x99b: V602 = 0x0
0x99e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V592, 0x20, V595, V596, V595, 0x0, V524, V599]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V592, 0x20, V595, V596, V595, 0x0, V524, V599]

================================

Block 0x99f
[0x99f:0x9a9]
---
Predecessors: [0x93d]
Successors: [0x9aa, 0x9b3]
---
0x99f JUMPDEST
0x9a0 POP
0x9a1 GAS
0x9a2 CALL
0x9a3 ISZERO
0x9a4 DUP1
0x9a5 ISZERO
0x9a6 PUSH2 0x9b3
0x9a9 JUMPI
---
0x99f: JUMPDEST 
0x9a1: V603 = GAS
0x9a2: V604 = CALL V603 V524 0x0 V595 V596 V595 0x20
0x9a3: V605 = ISZERO V604
0x9a5: V606 = ISZERO V605
0x9a6: V607 = 0x9b3
0x9a9: JUMPI 0x9b3 V606
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V592, 0x20, V595, V596, V595, 0x0, V524, V599]
Stack pops: 7
Stack additions: [V605]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V592, V605]

================================

Block 0x9aa
[0x9aa:0x9b2]
---
Predecessors: [0x99f]
Successors: []
---
0x9aa RETURNDATASIZE
0x9ab PUSH1 0x0
0x9ad DUP1
0x9ae RETURNDATACOPY
0x9af RETURNDATASIZE
0x9b0 PUSH1 0x0
0x9b2 REVERT
---
0x9aa: V608 = RETURNDATASIZE
0x9ab: V609 = 0x0
0x9ae: RETURNDATACOPY 0x0 0x0 V608
0x9af: V610 = RETURNDATASIZE
0x9b0: V611 = 0x0
0x9b2: REVERT 0x0 V610
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V592, V605]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V592, V605]

================================

Block 0x9b3
[0x9b3:0x9c4]
---
Predecessors: [0x99f]
Successors: [0x9c5, 0x9c9]
---
0x9b3 JUMPDEST
0x9b4 POP
0x9b5 POP
0x9b6 POP
0x9b7 POP
0x9b8 PUSH1 0x40
0x9ba MLOAD
0x9bb RETURNDATASIZE
0x9bc PUSH1 0x20
0x9be DUP2
0x9bf LT
0x9c0 ISZERO
0x9c1 PUSH2 0x9c9
0x9c4 JUMPI
---
0x9b3: JUMPDEST 
0x9b8: V612 = 0x40
0x9ba: V613 = M[0x40]
0x9bb: V614 = RETURNDATASIZE
0x9bc: V615 = 0x20
0x9bf: V616 = LT V614 0x20
0x9c0: V617 = ISZERO V616
0x9c1: V618 = 0x9c9
0x9c4: JUMPI 0x9c9 V617
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V524, 0xbc61394a, V592, V605]
Stack pops: 4
Stack additions: [V613, V614]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V613, V614]

================================

Block 0x9c5
[0x9c5:0x9c8]
---
Predecessors: [0x9b3]
Successors: []
---
0x9c5 PUSH1 0x0
0x9c7 DUP1
0x9c8 REVERT
---
0x9c5: V619 = 0x0
0x9c8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V613, V614]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V613, V614]

================================

Block 0x9c9
[0x9c9:0xa93]
---
Predecessors: [0x9b3]
Successors: [0xa94, 0xa98]
---
0x9c9 JUMPDEST
0x9ca DUP2
0x9cb ADD
0x9cc SWAP1
0x9cd DUP1
0x9ce DUP1
0x9cf MLOAD
0x9d0 SWAP1
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 SWAP1
0x9d5 SWAP3
0x9d6 SWAP2
0x9d7 SWAP1
0x9d8 POP
0x9d9 POP
0x9da POP
0x9db POP
0x9dc PUSH1 0x2
0x9de PUSH1 0x0
0x9e0 SWAP1
0x9e1 SLOAD
0x9e2 SWAP1
0x9e3 PUSH2 0x100
0x9e6 EXP
0x9e7 SWAP1
0x9e8 DIV
0x9e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fe AND
0x9ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa14 AND
0xa15 PUSH4 0x70a08231
0xa1a ADDRESS
0xa1b PUSH1 0x40
0xa1d MLOAD
0xa1e DUP3
0xa1f PUSH4 0xffffffff
0xa24 AND
0xa25 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa43 MUL
0xa44 DUP2
0xa45 MSTORE
0xa46 PUSH1 0x4
0xa48 ADD
0xa49 DUP1
0xa4a DUP3
0xa4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa60 AND
0xa61 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa76 AND
0xa77 DUP2
0xa78 MSTORE
0xa79 PUSH1 0x20
0xa7b ADD
0xa7c SWAP2
0xa7d POP
0xa7e POP
0xa7f PUSH1 0x20
0xa81 PUSH1 0x40
0xa83 MLOAD
0xa84 DUP1
0xa85 DUP4
0xa86 SUB
0xa87 DUP2
0xa88 PUSH1 0x0
0xa8a DUP8
0xa8b DUP1
0xa8c EXTCODESIZE
0xa8d ISZERO
0xa8e DUP1
0xa8f ISZERO
0xa90 PUSH2 0xa98
0xa93 JUMPI
---
0x9c9: JUMPDEST 
0x9cb: V620 = ADD V613 V614
0x9cf: V621 = M[V613]
0x9d1: V622 = 0x20
0x9d3: V623 = ADD 0x20 V613
0x9dc: V624 = 0x2
0x9de: V625 = 0x0
0x9e1: V626 = S[0x2]
0x9e3: V627 = 0x100
0x9e6: V628 = EXP 0x100 0x0
0x9e8: V629 = DIV V626 0x1
0x9e9: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fe: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0x9ff: V632 = 0xffffffffffffffffffffffffffffffffffffffff
0xa14: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0xa15: V634 = 0x70a08231
0xa1a: V635 = ADDRESS
0xa1b: V636 = 0x40
0xa1d: V637 = M[0x40]
0xa1f: V638 = 0xffffffff
0xa24: V639 = AND 0xffffffff 0x70a08231
0xa25: V640 = 0x100000000000000000000000000000000000000000000000000000000
0xa43: V641 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xa45: M[V637] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa46: V642 = 0x4
0xa48: V643 = ADD 0x4 V637
0xa4b: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0xa60: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0xa61: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0xa76: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0xa78: M[V643] = V647
0xa79: V648 = 0x20
0xa7b: V649 = ADD 0x20 V643
0xa7f: V650 = 0x20
0xa81: V651 = 0x40
0xa83: V652 = M[0x40]
0xa86: V653 = SUB V649 V652
0xa88: V654 = 0x0
0xa8c: V655 = EXTCODESIZE V633
0xa8d: V656 = ISZERO V655
0xa8f: V657 = ISZERO V656
0xa90: V658 = 0xa98
0xa93: JUMPI 0xa98 V657
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V613, V614]
Stack pops: 2
Stack additions: [V633, 0x70a08231, V649, 0x20, V652, V653, V652, 0x0, V633, V656]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V633, 0x70a08231, V649, 0x20, V652, V653, V652, 0x0, V633, V656]

================================

Block 0xa94
[0xa94:0xa97]
---
Predecessors: [0x9c9]
Successors: []
---
0xa94 PUSH1 0x0
0xa96 DUP1
0xa97 REVERT
---
0xa94: V659 = 0x0
0xa97: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V633, 0x70a08231, V649, 0x20, V652, V653, V652, 0x0, V633, V656]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V633, 0x70a08231, V649, 0x20, V652, V653, V652, 0x0, V633, V656]

================================

Block 0xa98
[0xa98:0xaa2]
---
Predecessors: [0x9c9]
Successors: [0xaa3, 0xaac]
---
0xa98 JUMPDEST
0xa99 POP
0xa9a GAS
0xa9b CALL
0xa9c ISZERO
0xa9d DUP1
0xa9e ISZERO
0xa9f PUSH2 0xaac
0xaa2 JUMPI
---
0xa98: JUMPDEST 
0xa9a: V660 = GAS
0xa9b: V661 = CALL V660 V633 0x0 V652 V653 V652 0x20
0xa9c: V662 = ISZERO V661
0xa9e: V663 = ISZERO V662
0xa9f: V664 = 0xaac
0xaa2: JUMPI 0xaac V663
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V633, 0x70a08231, V649, 0x20, V652, V653, V652, 0x0, V633, V656]
Stack pops: 7
Stack additions: [V662]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V633, 0x70a08231, V649, V662]

================================

Block 0xaa3
[0xaa3:0xaab]
---
Predecessors: [0xa98]
Successors: []
---
0xaa3 RETURNDATASIZE
0xaa4 PUSH1 0x0
0xaa6 DUP1
0xaa7 RETURNDATACOPY
0xaa8 RETURNDATASIZE
0xaa9 PUSH1 0x0
0xaab REVERT
---
0xaa3: V665 = RETURNDATASIZE
0xaa4: V666 = 0x0
0xaa7: RETURNDATACOPY 0x0 0x0 V665
0xaa8: V667 = RETURNDATASIZE
0xaa9: V668 = 0x0
0xaab: REVERT 0x0 V667
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V633, 0x70a08231, V649, V662]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V633, 0x70a08231, V649, V662]

================================

Block 0xaac
[0xaac:0xabd]
---
Predecessors: [0xa98]
Successors: [0xabe, 0xac2]
---
0xaac JUMPDEST
0xaad POP
0xaae POP
0xaaf POP
0xab0 POP
0xab1 PUSH1 0x40
0xab3 MLOAD
0xab4 RETURNDATASIZE
0xab5 PUSH1 0x20
0xab7 DUP2
0xab8 LT
0xab9 ISZERO
0xaba PUSH2 0xac2
0xabd JUMPI
---
0xaac: JUMPDEST 
0xab1: V669 = 0x40
0xab3: V670 = M[0x40]
0xab4: V671 = RETURNDATASIZE
0xab5: V672 = 0x20
0xab8: V673 = LT V671 0x20
0xab9: V674 = ISZERO V673
0xaba: V675 = 0xac2
0xabd: JUMPI 0xac2 V674
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V633, 0x70a08231, V649, V662]
Stack pops: 4
Stack additions: [V670, V671]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V670, V671]

================================

Block 0xabe
[0xabe:0xac1]
---
Predecessors: [0xaac]
Successors: []
---
0xabe PUSH1 0x0
0xac0 DUP1
0xac1 REVERT
---
0xabe: V676 = 0x0
0xac1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V670, V671]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V670, V671]

================================

Block 0xac2
[0xac2:0xb61]
---
Predecessors: [0xaac]
Successors: [0xb62, 0xb66]
---
0xac2 JUMPDEST
0xac3 DUP2
0xac4 ADD
0xac5 SWAP1
0xac6 DUP1
0xac7 DUP1
0xac8 MLOAD
0xac9 SWAP1
0xaca PUSH1 0x20
0xacc ADD
0xacd SWAP1
0xace SWAP3
0xacf SWAP2
0xad0 SWAP1
0xad1 POP
0xad2 POP
0xad3 POP
0xad4 SWAP1
0xad5 POP
0xad6 PUSH1 0x2
0xad8 PUSH1 0x0
0xada SWAP1
0xadb SLOAD
0xadc SWAP1
0xadd PUSH2 0x100
0xae0 EXP
0xae1 SWAP1
0xae2 DIV
0xae3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf8 AND
0xaf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0e AND
0xb0f PUSH4 0x2e1a7d4d
0xb14 DUP3
0xb15 PUSH1 0x40
0xb17 MLOAD
0xb18 DUP3
0xb19 PUSH4 0xffffffff
0xb1e AND
0xb1f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb3d MUL
0xb3e DUP2
0xb3f MSTORE
0xb40 PUSH1 0x4
0xb42 ADD
0xb43 DUP1
0xb44 DUP3
0xb45 DUP2
0xb46 MSTORE
0xb47 PUSH1 0x20
0xb49 ADD
0xb4a SWAP2
0xb4b POP
0xb4c POP
0xb4d PUSH1 0x0
0xb4f PUSH1 0x40
0xb51 MLOAD
0xb52 DUP1
0xb53 DUP4
0xb54 SUB
0xb55 DUP2
0xb56 PUSH1 0x0
0xb58 DUP8
0xb59 DUP1
0xb5a EXTCODESIZE
0xb5b ISZERO
0xb5c DUP1
0xb5d ISZERO
0xb5e PUSH2 0xb66
0xb61 JUMPI
---
0xac2: JUMPDEST 
0xac4: V677 = ADD V670 V671
0xac8: V678 = M[V670]
0xaca: V679 = 0x20
0xacc: V680 = ADD 0x20 V670
0xad6: V681 = 0x2
0xad8: V682 = 0x0
0xadb: V683 = S[0x2]
0xadd: V684 = 0x100
0xae0: V685 = EXP 0x100 0x0
0xae2: V686 = DIV V683 0x1
0xae3: V687 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf8: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0xaf9: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0e: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0xb0f: V691 = 0x2e1a7d4d
0xb15: V692 = 0x40
0xb17: V693 = M[0x40]
0xb19: V694 = 0xffffffff
0xb1e: V695 = AND 0xffffffff 0x2e1a7d4d
0xb1f: V696 = 0x100000000000000000000000000000000000000000000000000000000
0xb3d: V697 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0xb3f: M[V693] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0xb40: V698 = 0x4
0xb42: V699 = ADD 0x4 V693
0xb46: M[V699] = V678
0xb47: V700 = 0x20
0xb49: V701 = ADD 0x20 V699
0xb4d: V702 = 0x0
0xb4f: V703 = 0x40
0xb51: V704 = M[0x40]
0xb54: V705 = SUB V701 V704
0xb56: V706 = 0x0
0xb5a: V707 = EXTCODESIZE V690
0xb5b: V708 = ISZERO V707
0xb5d: V709 = ISZERO V708
0xb5e: V710 = 0xb66
0xb61: JUMPI 0xb66 V709
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, 0x0, V670, V671]
Stack pops: 3
Stack additions: [V678, V690, 0x2e1a7d4d, V701, 0x0, V704, V705, V704, 0x0, V690, V708]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, V690, 0x2e1a7d4d, V701, 0x0, V704, V705, V704, 0x0, V690, V708]

================================

Block 0xb62
[0xb62:0xb65]
---
Predecessors: [0xac2]
Successors: []
---
0xb62 PUSH1 0x0
0xb64 DUP1
0xb65 REVERT
---
0xb62: V711 = 0x0
0xb65: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, V690, 0x2e1a7d4d, V701, 0x0, V704, V705, V704, 0x0, V690, V708]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, V690, 0x2e1a7d4d, V701, 0x0, V704, V705, V704, 0x0, V690, V708]

================================

Block 0xb66
[0xb66:0xb70]
---
Predecessors: [0xac2]
Successors: [0xb71, 0xb7a]
---
0xb66 JUMPDEST
0xb67 POP
0xb68 GAS
0xb69 CALL
0xb6a ISZERO
0xb6b DUP1
0xb6c ISZERO
0xb6d PUSH2 0xb7a
0xb70 JUMPI
---
0xb66: JUMPDEST 
0xb68: V712 = GAS
0xb69: V713 = CALL V712 V690 0x0 V704 V705 V704 0x0
0xb6a: V714 = ISZERO V713
0xb6c: V715 = ISZERO V714
0xb6d: V716 = 0xb7a
0xb70: JUMPI 0xb7a V715
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, V690, 0x2e1a7d4d, V701, 0x0, V704, V705, V704, 0x0, V690, V708]
Stack pops: 7
Stack additions: [V714]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, V690, 0x2e1a7d4d, V701, V714]

================================

Block 0xb71
[0xb71:0xb79]
---
Predecessors: [0xb66]
Successors: []
---
0xb71 RETURNDATASIZE
0xb72 PUSH1 0x0
0xb74 DUP1
0xb75 RETURNDATACOPY
0xb76 RETURNDATASIZE
0xb77 PUSH1 0x0
0xb79 REVERT
---
0xb71: V717 = RETURNDATASIZE
0xb72: V718 = 0x0
0xb75: RETURNDATACOPY 0x0 0x0 V717
0xb76: V719 = RETURNDATASIZE
0xb77: V720 = 0x0
0xb79: REVERT 0x0 V719
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, V690, 0x2e1a7d4d, V701, V714]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, V690, 0x2e1a7d4d, V701, V714]

================================

Block 0xb7a
[0xb7a:0xb89]
---
Predecessors: [0xb66]
Successors: [0x110d]
---
0xb7a JUMPDEST
0xb7b POP
0xb7c POP
0xb7d POP
0xb7e POP
0xb7f PUSH2 0xb8a
0xb82 PUSH1 0x0
0xb84 CALLER
0xb85 DUP4
0xb86 PUSH2 0x110d
0xb89 JUMP
---
0xb7a: JUMPDEST 
0xb7f: V721 = 0xb8a
0xb82: V722 = 0x0
0xb84: V723 = CALLER
0xb86: V724 = 0x110d
0xb89: JUMP 0x110d
---
Entry stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, V690, 0x2e1a7d4d, V701, V714]
Stack pops: 5
Stack additions: [S4, 0xb8a, 0x0, V723, S4]
Exit stack: [V11, 0x2e3, V145, V158, V167, V173, V179, V407, V454, V678, 0xb8a, 0x0, V723, V678]

================================

Block 0xb8a
[0xb8a:0xb94]
---
Predecessors: [0x1279]
Successors: [0x2e3]
---
0xb8a JUMPDEST
0xb8b POP
0xb8c POP
0xb8d POP
0xb8e POP
0xb8f POP
0xb90 POP
0xb91 POP
0xb92 POP
0xb93 POP
0xb94 JUMP
---
0xb8a: JUMPDEST 
0xb94: JUMP S9
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0xb95
[0xb95:0xc19]
---
Predecessors: [0x2e5]
Successors: [0xc1a, 0xc1e]
---
0xb95 JUMPDEST
0xb96 PUSH1 0x0
0xb98 DUP1
0xb99 PUSH1 0x2
0xb9b PUSH1 0x0
0xb9d SWAP1
0xb9e SLOAD
0xb9f SWAP1
0xba0 PUSH2 0x100
0xba3 EXP
0xba4 SWAP1
0xba5 DIV
0xba6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbb AND
0xbbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd1 AND
0xbd2 PUSH4 0xd0e30db0
0xbd7 CALLVALUE
0xbd8 PUSH1 0x40
0xbda MLOAD
0xbdb DUP3
0xbdc PUSH4 0xffffffff
0xbe1 AND
0xbe2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc00 MUL
0xc01 DUP2
0xc02 MSTORE
0xc03 PUSH1 0x4
0xc05 ADD
0xc06 PUSH1 0x0
0xc08 PUSH1 0x40
0xc0a MLOAD
0xc0b DUP1
0xc0c DUP4
0xc0d SUB
0xc0e DUP2
0xc0f DUP6
0xc10 DUP9
0xc11 DUP1
0xc12 EXTCODESIZE
0xc13 ISZERO
0xc14 DUP1
0xc15 ISZERO
0xc16 PUSH2 0xc1e
0xc19 JUMPI
---
0xb95: JUMPDEST 
0xb96: V725 = 0x0
0xb99: V726 = 0x2
0xb9b: V727 = 0x0
0xb9e: V728 = S[0x2]
0xba0: V729 = 0x100
0xba3: V730 = EXP 0x100 0x0
0xba5: V731 = DIV V728 0x1
0xba6: V732 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbb: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0xbbc: V734 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd1: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V733
0xbd2: V736 = 0xd0e30db0
0xbd7: V737 = CALLVALUE
0xbd8: V738 = 0x40
0xbda: V739 = M[0x40]
0xbdc: V740 = 0xffffffff
0xbe1: V741 = AND 0xffffffff 0xd0e30db0
0xbe2: V742 = 0x100000000000000000000000000000000000000000000000000000000
0xc00: V743 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0xc02: M[V739] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0xc03: V744 = 0x4
0xc05: V745 = ADD 0x4 V739
0xc06: V746 = 0x0
0xc08: V747 = 0x40
0xc0a: V748 = M[0x40]
0xc0d: V749 = SUB V745 V748
0xc12: V750 = EXTCODESIZE V735
0xc13: V751 = ISZERO V750
0xc15: V752 = ISZERO V751
0xc16: V753 = 0xc1e
0xc19: JUMPI 0xc1e V752
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228]
Stack pops: 0
Stack additions: [0x0, 0x0, V735, 0xd0e30db0, V737, V745, 0x0, V748, V749, V748, V737, V735, V751]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V735, 0xd0e30db0, V737, V745, 0x0, V748, V749, V748, V737, V735, V751]

================================

Block 0xc1a
[0xc1a:0xc1d]
---
Predecessors: [0xb95]
Successors: []
---
0xc1a PUSH1 0x0
0xc1c DUP1
0xc1d REVERT
---
0xc1a: V754 = 0x0
0xc1d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V735, 0xd0e30db0, V737, V745, 0x0, V748, V749, V748, V737, V735, V751]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V735, 0xd0e30db0, V737, V745, 0x0, V748, V749, V748, V737, V735, V751]

================================

Block 0xc1e
[0xc1e:0xc28]
---
Predecessors: [0xb95]
Successors: [0xc29, 0xc32]
---
0xc1e JUMPDEST
0xc1f POP
0xc20 GAS
0xc21 CALL
0xc22 ISZERO
0xc23 DUP1
0xc24 ISZERO
0xc25 PUSH2 0xc32
0xc28 JUMPI
---
0xc1e: JUMPDEST 
0xc20: V755 = GAS
0xc21: V756 = CALL V755 V735 V737 V748 V749 V748 0x0
0xc22: V757 = ISZERO V756
0xc24: V758 = ISZERO V757
0xc25: V759 = 0xc32
0xc28: JUMPI 0xc32 V758
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V735, 0xd0e30db0, V737, V745, 0x0, V748, V749, V748, V737, V735, V751]
Stack pops: 7
Stack additions: [V757]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V735, 0xd0e30db0, V737, V745, V757]

================================

Block 0xc29
[0xc29:0xc31]
---
Predecessors: [0xc1e]
Successors: []
---
0xc29 RETURNDATASIZE
0xc2a PUSH1 0x0
0xc2c DUP1
0xc2d RETURNDATACOPY
0xc2e RETURNDATASIZE
0xc2f PUSH1 0x0
0xc31 REVERT
---
0xc29: V760 = RETURNDATASIZE
0xc2a: V761 = 0x0
0xc2d: RETURNDATACOPY 0x0 0x0 V760
0xc2e: V762 = RETURNDATASIZE
0xc2f: V763 = 0x0
0xc31: REVERT 0x0 V762
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V735, 0xd0e30db0, V737, V745, V757]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V735, 0xd0e30db0, V737, V745, V757]

================================

Block 0xc32
[0xc32:0xcb7]
---
Predecessors: [0xc1e]
Successors: [0xcb8]
---
0xc32 JUMPDEST
0xc33 POP
0xc34 POP
0xc35 POP
0xc36 POP
0xc37 POP
0xc38 PUSH1 0x1
0xc3a PUSH1 0x0
0xc3c SWAP1
0xc3d SLOAD
0xc3e SWAP1
0xc3f PUSH2 0x100
0xc42 EXP
0xc43 SWAP1
0xc44 DIV
0xc45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5a AND
0xc5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc70 AND
0xc71 PUSH4 0xbc61394a
0xc76 DUP9
0xc77 DUP9
0xc78 CALLVALUE
0xc79 PUSH1 0x1
0xc7b DUP11
0xc7c DUP11
0xc7d DUP11
0xc7e PUSH1 0x40
0xc80 MLOAD
0xc81 DUP9
0xc82 PUSH4 0xffffffff
0xc87 AND
0xc88 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xca6 MUL
0xca7 DUP2
0xca8 MSTORE
0xca9 PUSH1 0x4
0xcab ADD
0xcac DUP1
0xcad DUP9
0xcae PUSH1 0x5
0xcb0 PUSH1 0x20
0xcb2 MUL
0xcb3 DUP1
0xcb4 DUP4
0xcb5 DUP4
0xcb6 PUSH1 0x0
---
0xc32: JUMPDEST 
0xc38: V764 = 0x1
0xc3a: V765 = 0x0
0xc3d: V766 = S[0x1]
0xc3f: V767 = 0x100
0xc42: V768 = EXP 0x100 0x0
0xc44: V769 = DIV V766 0x1
0xc45: V770 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5a: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0xc5b: V772 = 0xffffffffffffffffffffffffffffffffffffffff
0xc70: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0xc71: V774 = 0xbc61394a
0xc78: V775 = CALLVALUE
0xc79: V776 = 0x1
0xc7e: V777 = 0x40
0xc80: V778 = M[0x40]
0xc82: V779 = 0xffffffff
0xc87: V780 = AND 0xffffffff 0xbc61394a
0xc88: V781 = 0x100000000000000000000000000000000000000000000000000000000
0xca6: V782 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbc61394a
0xca8: M[V778] = 0xbc61394a00000000000000000000000000000000000000000000000000000000
0xca9: V783 = 0x4
0xcab: V784 = ADD 0x4 V778
0xcae: V785 = 0x5
0xcb0: V786 = 0x20
0xcb2: V787 = MUL 0x20 0x5
0xcb6: V788 = 0x0
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V735, 0xd0e30db0, V737, V745, V757]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, V773, 0xbc61394a, S11, S10, V775, 0x1, S9, S8, S7, V784, V784, S11, 0xa0, 0xa0, V784, S11, 0x0]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V784, V194, 0xa0, 0xa0, V784, V194, 0x0]

================================

Block 0xcb8
[0xcb8:0xcc0]
---
Predecessors: [0xc32, 0xcc1]
Successors: [0xcc1, 0xcd3]
---
0xcb8 JUMPDEST
0xcb9 DUP4
0xcba DUP2
0xcbb LT
0xcbc ISZERO
0xcbd PUSH2 0xcd3
0xcc0 JUMPI
---
0xcb8: JUMPDEST 
0xcbb: V789 = LT S0 0xa0
0xcbc: V790 = ISZERO V789
0xcbd: V791 = 0xcd3
0xcc0: JUMPI 0xcd3 V790
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V784, V194, 0xa0, 0xa0, V784, V194, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V784, V194, 0xa0, 0xa0, V784, V194, S0]

================================

Block 0xcc1
[0xcc1:0xcd2]
---
Predecessors: [0xcb8]
Successors: [0xcb8]
---
0xcc1 DUP1
0xcc2 DUP3
0xcc3 ADD
0xcc4 MLOAD
0xcc5 DUP2
0xcc6 DUP5
0xcc7 ADD
0xcc8 MSTORE
0xcc9 PUSH1 0x20
0xccb DUP2
0xccc ADD
0xccd SWAP1
0xcce POP
0xccf PUSH2 0xcb8
0xcd2 JUMP
---
0xcc3: V792 = ADD V194 S0
0xcc4: V793 = M[V792]
0xcc7: V794 = ADD V784 S0
0xcc8: M[V794] = V793
0xcc9: V795 = 0x20
0xccc: V796 = ADD S0 0x20
0xccf: V797 = 0xcb8
0xcd2: JUMP 0xcb8
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V784, V194, 0xa0, 0xa0, V784, V194, S0]
Stack pops: 3
Stack additions: [S2, S1, V796]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V784, V194, 0xa0, 0xa0, V784, V194, V796]

================================

Block 0xcd3
[0xcd3:0xce5]
---
Predecessors: [0xcb8]
Successors: [0xce6]
---
0xcd3 JUMPDEST
0xcd4 POP
0xcd5 POP
0xcd6 POP
0xcd7 POP
0xcd8 SWAP1
0xcd9 POP
0xcda ADD
0xcdb DUP8
0xcdc PUSH1 0x6
0xcde PUSH1 0x20
0xce0 MUL
0xce1 DUP1
0xce2 DUP4
0xce3 DUP4
0xce4 PUSH1 0x0
---
0xcd3: JUMPDEST 
0xcda: V798 = ADD 0xa0 V784
0xcdc: V799 = 0x6
0xcde: V800 = 0x20
0xce0: V801 = MUL 0x20 0x6
0xce4: V802 = 0x0
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V784, V194, 0xa0, 0xa0, V784, V194, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, V798, S13, 0xc0, 0xc0, V798, S13, 0x0]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V798, V207, 0xc0, 0xc0, V798, V207, 0x0]

================================

Block 0xce6
[0xce6:0xcee]
---
Predecessors: [0xcd3, 0xcef]
Successors: [0xcef, 0xd01]
---
0xce6 JUMPDEST
0xce7 DUP4
0xce8 DUP2
0xce9 LT
0xcea ISZERO
0xceb PUSH2 0xd01
0xcee JUMPI
---
0xce6: JUMPDEST 
0xce9: V803 = LT S0 0xc0
0xcea: V804 = ISZERO V803
0xceb: V805 = 0xd01
0xcee: JUMPI 0xd01 V804
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V798, V207, 0xc0, 0xc0, V798, V207, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V798, V207, 0xc0, 0xc0, V798, V207, S0]

================================

Block 0xcef
[0xcef:0xd00]
---
Predecessors: [0xce6]
Successors: [0xce6]
---
0xcef DUP1
0xcf0 DUP3
0xcf1 ADD
0xcf2 MLOAD
0xcf3 DUP2
0xcf4 DUP5
0xcf5 ADD
0xcf6 MSTORE
0xcf7 PUSH1 0x20
0xcf9 DUP2
0xcfa ADD
0xcfb SWAP1
0xcfc POP
0xcfd PUSH2 0xce6
0xd00 JUMP
---
0xcf1: V806 = ADD V207 S0
0xcf2: V807 = M[V806]
0xcf5: V808 = ADD V798 S0
0xcf6: M[V808] = V807
0xcf7: V809 = 0x20
0xcfa: V810 = ADD S0 0x20
0xcfd: V811 = 0xce6
0xd00: JUMP 0xce6
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V798, V207, 0xc0, 0xc0, V798, V207, S0]
Stack pops: 3
Stack additions: [S2, S1, V810]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V798, V207, 0xc0, 0xc0, V798, V207, V810]

================================

Block 0xd01
[0xd01:0xd5e]
---
Predecessors: [0xce6]
Successors: [0xd5f, 0xd63]
---
0xd01 JUMPDEST
0xd02 POP
0xd03 POP
0xd04 POP
0xd05 POP
0xd06 SWAP1
0xd07 POP
0xd08 ADD
0xd09 DUP7
0xd0a DUP2
0xd0b MSTORE
0xd0c PUSH1 0x20
0xd0e ADD
0xd0f DUP6
0xd10 ISZERO
0xd11 ISZERO
0xd12 ISZERO
0xd13 ISZERO
0xd14 DUP2
0xd15 MSTORE
0xd16 PUSH1 0x20
0xd18 ADD
0xd19 DUP5
0xd1a PUSH1 0xff
0xd1c AND
0xd1d PUSH1 0xff
0xd1f AND
0xd20 DUP2
0xd21 MSTORE
0xd22 PUSH1 0x20
0xd24 ADD
0xd25 DUP4
0xd26 PUSH1 0x0
0xd28 NOT
0xd29 AND
0xd2a PUSH1 0x0
0xd2c NOT
0xd2d AND
0xd2e DUP2
0xd2f MSTORE
0xd30 PUSH1 0x20
0xd32 ADD
0xd33 DUP3
0xd34 PUSH1 0x0
0xd36 NOT
0xd37 AND
0xd38 PUSH1 0x0
0xd3a NOT
0xd3b AND
0xd3c DUP2
0xd3d MSTORE
0xd3e PUSH1 0x20
0xd40 ADD
0xd41 SWAP8
0xd42 POP
0xd43 POP
0xd44 POP
0xd45 POP
0xd46 POP
0xd47 POP
0xd48 POP
0xd49 POP
0xd4a PUSH1 0x20
0xd4c PUSH1 0x40
0xd4e MLOAD
0xd4f DUP1
0xd50 DUP4
0xd51 SUB
0xd52 DUP2
0xd53 PUSH1 0x0
0xd55 DUP8
0xd56 DUP1
0xd57 EXTCODESIZE
0xd58 ISZERO
0xd59 DUP1
0xd5a ISZERO
0xd5b PUSH2 0xd63
0xd5e JUMPI
---
0xd01: JUMPDEST 
0xd08: V812 = ADD 0xc0 V798
0xd0b: M[V812] = V775
0xd0c: V813 = 0x20
0xd0e: V814 = ADD 0x20 V812
0xd10: V815 = ISZERO 0x1
0xd11: V816 = ISZERO 0x0
0xd12: V817 = ISZERO 0x1
0xd13: V818 = ISZERO 0x0
0xd15: M[V814] = 0x1
0xd16: V819 = 0x20
0xd18: V820 = ADD 0x20 V814
0xd1a: V821 = 0xff
0xd1c: V822 = AND 0xff V216
0xd1d: V823 = 0xff
0xd1f: V824 = AND 0xff V822
0xd21: M[V820] = V824
0xd22: V825 = 0x20
0xd24: V826 = ADD 0x20 V820
0xd26: V827 = 0x0
0xd28: V828 = NOT 0x0
0xd29: V829 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V222
0xd2a: V830 = 0x0
0xd2c: V831 = NOT 0x0
0xd2d: V832 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V829
0xd2f: M[V826] = V832
0xd30: V833 = 0x20
0xd32: V834 = ADD 0x20 V826
0xd34: V835 = 0x0
0xd36: V836 = NOT 0x0
0xd37: V837 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V228
0xd38: V838 = 0x0
0xd3a: V839 = NOT 0x0
0xd3b: V840 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V837
0xd3d: M[V834] = V840
0xd3e: V841 = 0x20
0xd40: V842 = ADD 0x20 V834
0xd4a: V843 = 0x20
0xd4c: V844 = 0x40
0xd4e: V845 = M[0x40]
0xd51: V846 = SUB V842 V845
0xd53: V847 = 0x0
0xd57: V848 = EXTCODESIZE V773
0xd58: V849 = ISZERO V848
0xd5a: V850 = ISZERO V849
0xd5b: V851 = 0xd63
0xd5e: JUMPI 0xd63 V850
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V194, V207, V775, 0x1, V216, V222, V228, V784, V798, V207, 0xc0, 0xc0, V798, V207, S0]
Stack pops: 17
Stack additions: [S16, S15, V842, 0x20, V845, V846, V845, 0x0, S16, V849]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V842, 0x20, V845, V846, V845, 0x0, V773, V849]

================================

Block 0xd5f
[0xd5f:0xd62]
---
Predecessors: [0xd01]
Successors: []
---
0xd5f PUSH1 0x0
0xd61 DUP1
0xd62 REVERT
---
0xd5f: V852 = 0x0
0xd62: REVERT 0x0 0x0
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V842, 0x20, V845, V846, V845, 0x0, V773, V849]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V842, 0x20, V845, V846, V845, 0x0, V773, V849]

================================

Block 0xd63
[0xd63:0xd6d]
---
Predecessors: [0xd01]
Successors: [0xd6e, 0xd77]
---
0xd63 JUMPDEST
0xd64 POP
0xd65 GAS
0xd66 CALL
0xd67 ISZERO
0xd68 DUP1
0xd69 ISZERO
0xd6a PUSH2 0xd77
0xd6d JUMPI
---
0xd63: JUMPDEST 
0xd65: V853 = GAS
0xd66: V854 = CALL V853 V773 0x0 V845 V846 V845 0x20
0xd67: V855 = ISZERO V854
0xd69: V856 = ISZERO V855
0xd6a: V857 = 0xd77
0xd6d: JUMPI 0xd77 V856
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V842, 0x20, V845, V846, V845, 0x0, V773, V849]
Stack pops: 7
Stack additions: [V855]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, V842, V855]

================================

Block 0xd6e
[0xd6e:0xd76]
---
Predecessors: [0xd63]
Successors: []
---
0xd6e RETURNDATASIZE
0xd6f PUSH1 0x0
0xd71 DUP1
0xd72 RETURNDATACOPY
0xd73 RETURNDATASIZE
0xd74 PUSH1 0x0
0xd76 REVERT
---
0xd6e: V858 = RETURNDATASIZE
0xd6f: V859 = 0x0
0xd72: RETURNDATACOPY 0x0 0x0 V858
0xd73: V860 = RETURNDATASIZE
0xd74: V861 = 0x0
0xd76: REVERT 0x0 V860
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, S1, V855]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, S1, V855]

================================

Block 0xd77
[0xd77:0xd88]
---
Predecessors: [0xd63]
Successors: [0xd89, 0xd8d]
---
0xd77 JUMPDEST
0xd78 POP
0xd79 POP
0xd7a POP
0xd7b POP
0xd7c PUSH1 0x40
0xd7e MLOAD
0xd7f RETURNDATASIZE
0xd80 PUSH1 0x20
0xd82 DUP2
0xd83 LT
0xd84 ISZERO
0xd85 PUSH2 0xd8d
0xd88 JUMPI
---
0xd77: JUMPDEST 
0xd7c: V862 = 0x40
0xd7e: V863 = M[0x40]
0xd7f: V864 = RETURNDATASIZE
0xd80: V865 = 0x20
0xd83: V866 = LT V864 0x20
0xd84: V867 = ISZERO V866
0xd85: V868 = 0xd8d
0xd88: JUMPI 0xd8d V867
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V773, 0xbc61394a, S1, V855]
Stack pops: 4
Stack additions: [V863, V864]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V863, V864]

================================

Block 0xd89
[0xd89:0xd8c]
---
Predecessors: [0xd77]
Successors: []
---
0xd89 PUSH1 0x0
0xd8b DUP1
0xd8c REVERT
---
0xd89: V869 = 0x0
0xd8c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V863, V864]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V863, V864]

================================

Block 0xd8d
[0xd8d:0xdac]
---
Predecessors: [0xd77]
Successors: [0xdad, 0xdae]
---
0xd8d JUMPDEST
0xd8e DUP2
0xd8f ADD
0xd90 SWAP1
0xd91 DUP1
0xd92 DUP1
0xd93 MLOAD
0xd94 SWAP1
0xd95 PUSH1 0x20
0xd97 ADD
0xd98 SWAP1
0xd99 SWAP3
0xd9a SWAP2
0xd9b SWAP1
0xd9c POP
0xd9d POP
0xd9e POP
0xd9f POP
0xda0 DUP7
0xda1 PUSH1 0x2
0xda3 PUSH1 0x5
0xda5 DUP2
0xda6 LT
0xda7 ISZERO
0xda8 ISZERO
0xda9 PUSH2 0xdae
0xdac JUMPI
---
0xd8d: JUMPDEST 
0xd8f: V870 = ADD V863 V864
0xd93: V871 = M[V863]
0xd95: V872 = 0x20
0xd97: V873 = ADD 0x20 V863
0xda1: V874 = 0x2
0xda3: V875 = 0x5
0xda6: V876 = LT 0x2 0x5
0xda7: V877 = ISZERO 0x1
0xda8: V878 = ISZERO 0x0
0xda9: V879 = 0xdae
0xdac: JUMPI 0xdae 0x1
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V863, V864]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S8, 0x2]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V194, 0x2]

================================

Block 0xdad
[0xdad:0xdad]
---
Predecessors: [0xd8d]
Successors: []
---
0xdad INVALID
---
0xdad: INVALID 
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V194, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V194, 0x2]

================================

Block 0xdae
[0xdae:0xe4b]
---
Predecessors: [0xd8d]
Successors: [0xe4c, 0xe50]
---
0xdae JUMPDEST
0xdaf PUSH1 0x20
0xdb1 MUL
0xdb2 ADD
0xdb3 MLOAD
0xdb4 SWAP2
0xdb5 POP
0xdb6 DUP2
0xdb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcc AND
0xdcd PUSH4 0x70a08231
0xdd2 ADDRESS
0xdd3 PUSH1 0x40
0xdd5 MLOAD
0xdd6 DUP3
0xdd7 PUSH4 0xffffffff
0xddc AND
0xddd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xdfb MUL
0xdfc DUP2
0xdfd MSTORE
0xdfe PUSH1 0x4
0xe00 ADD
0xe01 DUP1
0xe02 DUP3
0xe03 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe18 AND
0xe19 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe2e AND
0xe2f DUP2
0xe30 MSTORE
0xe31 PUSH1 0x20
0xe33 ADD
0xe34 SWAP2
0xe35 POP
0xe36 POP
0xe37 PUSH1 0x20
0xe39 PUSH1 0x40
0xe3b MLOAD
0xe3c DUP1
0xe3d DUP4
0xe3e SUB
0xe3f DUP2
0xe40 PUSH1 0x0
0xe42 DUP8
0xe43 DUP1
0xe44 EXTCODESIZE
0xe45 ISZERO
0xe46 DUP1
0xe47 ISZERO
0xe48 PUSH2 0xe50
0xe4b JUMPI
---
0xdae: JUMPDEST 
0xdaf: V880 = 0x20
0xdb1: V881 = MUL 0x20 0x2
0xdb2: V882 = ADD 0x40 V194
0xdb3: V883 = M[V882]
0xdb7: V884 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcc: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V883
0xdcd: V886 = 0x70a08231
0xdd2: V887 = ADDRESS
0xdd3: V888 = 0x40
0xdd5: V889 = M[0x40]
0xdd7: V890 = 0xffffffff
0xddc: V891 = AND 0xffffffff 0x70a08231
0xddd: V892 = 0x100000000000000000000000000000000000000000000000000000000
0xdfb: V893 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xdfd: M[V889] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xdfe: V894 = 0x4
0xe00: V895 = ADD 0x4 V889
0xe03: V896 = 0xffffffffffffffffffffffffffffffffffffffff
0xe18: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0xe19: V898 = 0xffffffffffffffffffffffffffffffffffffffff
0xe2e: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V897
0xe30: M[V895] = V899
0xe31: V900 = 0x20
0xe33: V901 = ADD 0x20 V895
0xe37: V902 = 0x20
0xe39: V903 = 0x40
0xe3b: V904 = M[0x40]
0xe3e: V905 = SUB V901 V904
0xe40: V906 = 0x0
0xe44: V907 = EXTCODESIZE V885
0xe45: V908 = ISZERO V907
0xe47: V909 = ISZERO V908
0xe48: V910 = 0xe50
0xe4b: JUMPI 0xe50 V909
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, 0x0, 0x0, V194, 0x2]
Stack pops: 4
Stack additions: [V883, S2, V885, 0x70a08231, V901, 0x20, V904, V905, V904, 0x0, V885, V908]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, V883, 0x0, V885, 0x70a08231, V901, 0x20, V904, V905, V904, 0x0, V885, V908]

================================

Block 0xe4c
[0xe4c:0xe4f]
---
Predecessors: [0xdae]
Successors: []
---
0xe4c PUSH1 0x0
0xe4e DUP1
0xe4f REVERT
---
0xe4c: V911 = 0x0
0xe4f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, V883, 0x0, V885, 0x70a08231, V901, 0x20, V904, V905, V904, 0x0, V885, V908]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, V883, 0x0, V885, 0x70a08231, V901, 0x20, V904, V905, V904, 0x0, V885, V908]

================================

Block 0xe50
[0xe50:0xe5a]
---
Predecessors: [0xdae]
Successors: [0xe5b, 0xe64]
---
0xe50 JUMPDEST
0xe51 POP
0xe52 GAS
0xe53 CALL
0xe54 ISZERO
0xe55 DUP1
0xe56 ISZERO
0xe57 PUSH2 0xe64
0xe5a JUMPI
---
0xe50: JUMPDEST 
0xe52: V912 = GAS
0xe53: V913 = CALL V912 V885 0x0 V904 V905 V904 0x20
0xe54: V914 = ISZERO V913
0xe56: V915 = ISZERO V914
0xe57: V916 = 0xe64
0xe5a: JUMPI 0xe64 V915
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, V883, 0x0, V885, 0x70a08231, V901, 0x20, V904, V905, V904, 0x0, V885, V908]
Stack pops: 7
Stack additions: [V914]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, V883, 0x0, V885, 0x70a08231, V901, V914]

================================

Block 0xe5b
[0xe5b:0xe63]
---
Predecessors: [0xe50]
Successors: []
---
0xe5b RETURNDATASIZE
0xe5c PUSH1 0x0
0xe5e DUP1
0xe5f RETURNDATACOPY
0xe60 RETURNDATASIZE
0xe61 PUSH1 0x0
0xe63 REVERT
---
0xe5b: V917 = RETURNDATASIZE
0xe5c: V918 = 0x0
0xe5f: RETURNDATACOPY 0x0 0x0 V917
0xe60: V919 = RETURNDATASIZE
0xe61: V920 = 0x0
0xe63: REVERT 0x0 V919
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, S5, 0x0, S3, 0x70a08231, S1, V914]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, S5, 0x0, S3, 0x70a08231, S1, V914]

================================

Block 0xe64
[0xe64:0xe75]
---
Predecessors: [0xe50]
Successors: [0xe76, 0xe7a]
---
0xe64 JUMPDEST
0xe65 POP
0xe66 POP
0xe67 POP
0xe68 POP
0xe69 PUSH1 0x40
0xe6b MLOAD
0xe6c RETURNDATASIZE
0xe6d PUSH1 0x20
0xe6f DUP2
0xe70 LT
0xe71 ISZERO
0xe72 PUSH2 0xe7a
0xe75 JUMPI
---
0xe64: JUMPDEST 
0xe69: V921 = 0x40
0xe6b: V922 = M[0x40]
0xe6c: V923 = RETURNDATASIZE
0xe6d: V924 = 0x20
0xe70: V925 = LT V923 0x20
0xe71: V926 = ISZERO V925
0xe72: V927 = 0xe7a
0xe75: JUMPI 0xe7a V926
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, S5, 0x0, S3, 0x70a08231, S1, V914]
Stack pops: 4
Stack additions: [V922, V923]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, S5, 0x0, V922, V923]

================================

Block 0xe76
[0xe76:0xe79]
---
Predecessors: [0xe64]
Successors: []
---
0xe76 PUSH1 0x0
0xe78 DUP1
0xe79 REVERT
---
0xe76: V928 = 0x0
0xe79: REVERT 0x0 0x0
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, S3, 0x0, V922, V923]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, S3, 0x0, V922, V923]

================================

Block 0xe7a
[0xe7a:0xe97]
---
Predecessors: [0xe64]
Successors: [0x110d]
---
0xe7a JUMPDEST
0xe7b DUP2
0xe7c ADD
0xe7d SWAP1
0xe7e DUP1
0xe7f DUP1
0xe80 MLOAD
0xe81 SWAP1
0xe82 PUSH1 0x20
0xe84 ADD
0xe85 SWAP1
0xe86 SWAP3
0xe87 SWAP2
0xe88 SWAP1
0xe89 POP
0xe8a POP
0xe8b POP
0xe8c SWAP1
0xe8d POP
0xe8e PUSH2 0xe98
0xe91 DUP3
0xe92 CALLER
0xe93 DUP4
0xe94 PUSH2 0x110d
0xe97 JUMP
---
0xe7a: JUMPDEST 
0xe7c: V929 = ADD V922 V923
0xe80: V930 = M[V922]
0xe82: V931 = 0x20
0xe84: V932 = ADD 0x20 V922
0xe8e: V933 = 0xe98
0xe92: V934 = CALLER
0xe94: V935 = 0x110d
0xe97: JUMP 0x110d
---
Entry stack: [V11, 0x380, V194, V207, V216, V222, V228, S3, 0x0, V922, V923]
Stack pops: 4
Stack additions: [S3, V930, 0xe98, S3, V934, V930]
Exit stack: [V11, 0x380, V194, V207, V216, V222, V228, S3, V930, 0xe98, S3, V934, V930]

================================

Block 0xe98
[0xe98:0xea1]
---
Predecessors: [0x1279]
Successors: [0x380]
---
0xe98 JUMPDEST
0xe99 POP
0xe9a POP
0xe9b POP
0xe9c POP
0xe9d POP
0xe9e POP
0xe9f POP
0xea0 POP
0xea1 JUMP
---
0xe98: JUMPDEST 
0xea1: JUMP S8
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 9
Stack additions: []
Exit stack: [V11, S9]

================================

Block 0xea2
[0xea2:0xec7]
---
Predecessors: [0x38e]
Successors: [0x397]
---
0xea2 JUMPDEST
0xea3 PUSH1 0x1
0xea5 PUSH1 0x0
0xea7 SWAP1
0xea8 SLOAD
0xea9 SWAP1
0xeaa PUSH2 0x100
0xead EXP
0xeae SWAP1
0xeaf DIV
0xeb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec5 AND
0xec6 DUP2
0xec7 JUMP
---
0xea2: JUMPDEST 
0xea3: V936 = 0x1
0xea5: V937 = 0x0
0xea8: V938 = S[0x1]
0xeaa: V939 = 0x100
0xead: V940 = EXP 0x100 0x0
0xeaf: V941 = DIV V938 0x1
0xeb0: V942 = 0xffffffffffffffffffffffffffffffffffffffff
0xec5: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0xec7: JUMP 0x397
---
Entry stack: [V11, 0x397]
Stack pops: 1
Stack additions: [S0, V943]
Exit stack: [V11, 0x397, V943]

================================

Block 0xec8
[0xec8:0xeeb]
---
Predecessors: [0x3e5]
Successors: [0x3ee]
---
0xec8 JUMPDEST
0xec9 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xeea DUP2
0xeeb JUMP
---
0xec8: JUMPDEST 
0xec9: V944 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xeeb: JUMP 0x3ee
---
Entry stack: [V11, 0x3ee]
Stack pops: 1
Stack additions: [S0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Exit stack: [V11, 0x3ee, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]

================================

Block 0xeec
[0xeec:0xf11]
---
Predecessors: [0x410]
Successors: [0x419]
---
0xeec JUMPDEST
0xeed PUSH1 0x3
0xeef PUSH1 0x0
0xef1 SWAP1
0xef2 SLOAD
0xef3 SWAP1
0xef4 PUSH2 0x100
0xef7 EXP
0xef8 SWAP1
0xef9 DIV
0xefa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0f AND
0xf10 DUP2
0xf11 JUMP
---
0xeec: JUMPDEST 
0xeed: V945 = 0x3
0xeef: V946 = 0x0
0xef2: V947 = S[0x3]
0xef4: V948 = 0x100
0xef7: V949 = EXP 0x100 0x0
0xef9: V950 = DIV V947 0x1
0xefa: V951 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0f: V952 = AND 0xffffffffffffffffffffffffffffffffffffffff V950
0xf11: JUMP 0x419
---
Entry stack: [V11, 0x419]
Stack pops: 1
Stack additions: [S0, V952]
Exit stack: [V11, 0x419, V952]

================================

Block 0xf12
[0xf12:0xf68]
---
Predecessors: [0x467]
Successors: [0xf69, 0xf6d]
---
0xf12 JUMPDEST
0xf13 PUSH1 0x0
0xf15 DUP1
0xf16 SWAP1
0xf17 SLOAD
0xf18 SWAP1
0xf19 PUSH2 0x100
0xf1c EXP
0xf1d SWAP1
0xf1e DIV
0xf1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf34 AND
0xf35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4a AND
0xf4b CALLER
0xf4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf61 AND
0xf62 EQ
0xf63 ISZERO
0xf64 ISZERO
0xf65 PUSH2 0xf6d
0xf68 JUMPI
---
0xf12: JUMPDEST 
0xf13: V953 = 0x0
0xf17: V954 = S[0x0]
0xf19: V955 = 0x100
0xf1c: V956 = EXP 0x100 0x0
0xf1e: V957 = DIV V954 0x1
0xf1f: V958 = 0xffffffffffffffffffffffffffffffffffffffff
0xf34: V959 = AND 0xffffffffffffffffffffffffffffffffffffffff V957
0xf35: V960 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4a: V961 = AND 0xffffffffffffffffffffffffffffffffffffffff V959
0xf4b: V962 = CALLER
0xf4c: V963 = 0xffffffffffffffffffffffffffffffffffffffff
0xf61: V964 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0xf62: V965 = EQ V964 V961
0xf63: V966 = ISZERO V965
0xf64: V967 = ISZERO V966
0xf65: V968 = 0xf6d
0xf68: JUMPI 0xf6d V967
---
Entry stack: [V11, 0x49c, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49c, V290]

================================

Block 0xf69
[0xf69:0xf6c]
---
Predecessors: [0xf12]
Successors: []
---
0xf69 PUSH1 0x0
0xf6b DUP1
0xf6c REVERT
---
0xf69: V969 = 0x0
0xf6c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x49c, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49c, V290]

================================

Block 0xf6d
[0xf6d:0xfa4]
---
Predecessors: [0xf12]
Successors: [0xfa5, 0xfa9]
---
0xf6d JUMPDEST
0xf6e PUSH1 0x0
0xf70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf85 AND
0xf86 DUP2
0xf87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9c AND
0xf9d EQ
0xf9e ISZERO
0xf9f ISZERO
0xfa0 ISZERO
0xfa1 PUSH2 0xfa9
0xfa4 JUMPI
---
0xf6d: JUMPDEST 
0xf6e: V970 = 0x0
0xf70: V971 = 0xffffffffffffffffffffffffffffffffffffffff
0xf85: V972 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xf87: V973 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9c: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0xf9d: V975 = EQ V974 0x0
0xf9e: V976 = ISZERO V975
0xf9f: V977 = ISZERO V976
0xfa0: V978 = ISZERO V977
0xfa1: V979 = 0xfa9
0xfa4: JUMPI 0xfa9 V978
---
Entry stack: [V11, 0x49c, V290]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x49c, V290]

================================

Block 0xfa5
[0xfa5:0xfa8]
---
Predecessors: [0xf6d]
Successors: []
---
0xfa5 PUSH1 0x0
0xfa7 DUP1
0xfa8 REVERT
---
0xfa5: V980 = 0x0
0xfa8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x49c, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49c, V290]

================================

Block 0xfa9
[0xfa9:0x1066]
---
Predecessors: [0xf6d]
Successors: [0x49c]
---
0xfa9 JUMPDEST
0xfaa DUP1
0xfab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc0 AND
0xfc1 PUSH1 0x0
0xfc3 DUP1
0xfc4 SWAP1
0xfc5 SLOAD
0xfc6 SWAP1
0xfc7 PUSH2 0x100
0xfca EXP
0xfcb SWAP1
0xfcc DIV
0xfcd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe2 AND
0xfe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff8 AND
0xff9 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x101a PUSH1 0x40
0x101c MLOAD
0x101d PUSH1 0x40
0x101f MLOAD
0x1020 DUP1
0x1021 SWAP2
0x1022 SUB
0x1023 SWAP1
0x1024 LOG3
0x1025 DUP1
0x1026 PUSH1 0x0
0x1028 DUP1
0x1029 PUSH2 0x100
0x102c EXP
0x102d DUP2
0x102e SLOAD
0x102f DUP2
0x1030 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1045 MUL
0x1046 NOT
0x1047 AND
0x1048 SWAP1
0x1049 DUP4
0x104a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105f AND
0x1060 MUL
0x1061 OR
0x1062 SWAP1
0x1063 SSTORE
0x1064 POP
0x1065 POP
0x1066 JUMP
---
0xfa9: JUMPDEST 
0xfab: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc0: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0xfc1: V983 = 0x0
0xfc5: V984 = S[0x0]
0xfc7: V985 = 0x100
0xfca: V986 = EXP 0x100 0x0
0xfcc: V987 = DIV V984 0x1
0xfcd: V988 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe2: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff V987
0xfe3: V990 = 0xffffffffffffffffffffffffffffffffffffffff
0xff8: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V989
0xff9: V992 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x101a: V993 = 0x40
0x101c: V994 = M[0x40]
0x101d: V995 = 0x40
0x101f: V996 = M[0x40]
0x1022: V997 = SUB V994 V996
0x1024: LOG V996 V997 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V991 V982
0x1026: V998 = 0x0
0x1029: V999 = 0x100
0x102c: V1000 = EXP 0x100 0x0
0x102e: V1001 = S[0x0]
0x1030: V1002 = 0xffffffffffffffffffffffffffffffffffffffff
0x1045: V1003 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1046: V1004 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1047: V1005 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1001
0x104a: V1006 = 0xffffffffffffffffffffffffffffffffffffffff
0x105f: V1007 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x1060: V1008 = MUL V1007 0x1
0x1061: V1009 = OR V1008 V1005
0x1063: S[0x0] = V1009
0x1066: JUMP 0x49c
---
Entry stack: [V11, 0x49c, V290]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1067
[0x1067:0x10bd]
---
Predecessors: [0x4aa]
Successors: [0x10be, 0x10c2]
---
0x1067 JUMPDEST
0x1068 PUSH1 0x0
0x106a DUP1
0x106b SWAP1
0x106c SLOAD
0x106d SWAP1
0x106e PUSH2 0x100
0x1071 EXP
0x1072 SWAP1
0x1073 DIV
0x1074 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1089 AND
0x108a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109f AND
0x10a0 CALLER
0x10a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b6 AND
0x10b7 EQ
0x10b8 ISZERO
0x10b9 ISZERO
0x10ba PUSH2 0x10c2
0x10bd JUMPI
---
0x1067: JUMPDEST 
0x1068: V1010 = 0x0
0x106c: V1011 = S[0x0]
0x106e: V1012 = 0x100
0x1071: V1013 = EXP 0x100 0x0
0x1073: V1014 = DIV V1011 0x1
0x1074: V1015 = 0xffffffffffffffffffffffffffffffffffffffff
0x1089: V1016 = AND 0xffffffffffffffffffffffffffffffffffffffff V1014
0x108a: V1017 = 0xffffffffffffffffffffffffffffffffffffffff
0x109f: V1018 = AND 0xffffffffffffffffffffffffffffffffffffffff V1016
0x10a0: V1019 = CALLER
0x10a1: V1020 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b6: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffff V1019
0x10b7: V1022 = EQ V1021 V1018
0x10b8: V1023 = ISZERO V1022
0x10b9: V1024 = ISZERO V1023
0x10ba: V1025 = 0x10c2
0x10bd: JUMPI 0x10c2 V1024
---
Entry stack: [V11, 0x4e9, V305, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e9, V305, V308]

================================

Block 0x10be
[0x10be:0x10c1]
---
Predecessors: [0x1067]
Successors: []
---
0x10be PUSH1 0x0
0x10c0 DUP1
0x10c1 REVERT
---
0x10be: V1026 = 0x0
0x10c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e9, V305, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e9, V305, V308]

================================

Block 0x10c2
[0x10c2:0x10fe]
---
Predecessors: [0x1067]
Successors: [0x10ff, 0x1108]
---
0x10c2 JUMPDEST
0x10c3 DUP2
0x10c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d9 AND
0x10da PUSH2 0x8fc
0x10dd DUP3
0x10de SWAP1
0x10df DUP2
0x10e0 ISZERO
0x10e1 MUL
0x10e2 SWAP1
0x10e3 PUSH1 0x40
0x10e5 MLOAD
0x10e6 PUSH1 0x0
0x10e8 PUSH1 0x40
0x10ea MLOAD
0x10eb DUP1
0x10ec DUP4
0x10ed SUB
0x10ee DUP2
0x10ef DUP6
0x10f0 DUP9
0x10f1 DUP9
0x10f2 CALL
0x10f3 SWAP4
0x10f4 POP
0x10f5 POP
0x10f6 POP
0x10f7 POP
0x10f8 ISZERO
0x10f9 DUP1
0x10fa ISZERO
0x10fb PUSH2 0x1108
0x10fe JUMPI
---
0x10c2: JUMPDEST 
0x10c4: V1027 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d9: V1028 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x10da: V1029 = 0x8fc
0x10e0: V1030 = ISZERO V308
0x10e1: V1031 = MUL V1030 0x8fc
0x10e3: V1032 = 0x40
0x10e5: V1033 = M[0x40]
0x10e6: V1034 = 0x0
0x10e8: V1035 = 0x40
0x10ea: V1036 = M[0x40]
0x10ed: V1037 = SUB V1033 V1036
0x10f2: V1038 = CALL V1031 V1028 V308 V1036 V1037 V1036 0x0
0x10f8: V1039 = ISZERO V1038
0x10fa: V1040 = ISZERO V1039
0x10fb: V1041 = 0x1108
0x10fe: JUMPI 0x1108 V1040
---
Entry stack: [V11, 0x4e9, V305, V308]
Stack pops: 2
Stack additions: [S1, S0, V1039]
Exit stack: [V11, 0x4e9, V305, V308, V1039]

================================

Block 0x10ff
[0x10ff:0x1107]
---
Predecessors: [0x10c2]
Successors: []
---
0x10ff RETURNDATASIZE
0x1100 PUSH1 0x0
0x1102 DUP1
0x1103 RETURNDATACOPY
0x1104 RETURNDATASIZE
0x1105 PUSH1 0x0
0x1107 REVERT
---
0x10ff: V1042 = RETURNDATASIZE
0x1100: V1043 = 0x0
0x1103: RETURNDATACOPY 0x0 0x0 V1042
0x1104: V1044 = RETURNDATASIZE
0x1105: V1045 = 0x0
0x1107: REVERT 0x0 V1044
---
Entry stack: [V11, 0x4e9, V305, V308, V1039]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e9, V305, V308, V1039]

================================

Block 0x1108
[0x1108:0x110c]
---
Predecessors: [0x10c2]
Successors: [0x4e9]
---
0x1108 JUMPDEST
0x1109 POP
0x110a POP
0x110b POP
0x110c JUMP
---
0x1108: JUMPDEST 
0x110c: JUMP 0x4e9
---
Entry stack: [V11, 0x4e9, V305, V308, V1039]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x110d
[0x110d:0x1143]
---
Predecessors: [0xb7a, 0xe7a]
Successors: [0x1144, 0x118f]
---
0x110d JUMPDEST
0x110e PUSH1 0x0
0x1110 DUP1
0x1111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1126 AND
0x1127 DUP5
0x1128 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113d AND
0x113e EQ
0x113f ISZERO
0x1140 PUSH2 0x118f
0x1143 JUMPI
---
0x110d: JUMPDEST 
0x110e: V1046 = 0x0
0x1111: V1047 = 0xffffffffffffffffffffffffffffffffffffffff
0x1126: V1048 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1128: V1049 = 0xffffffffffffffffffffffffffffffffffffffff
0x113d: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x113e: V1051 = EQ V1050 0x0
0x113f: V1052 = ISZERO V1051
0x1140: V1053 = 0x118f
0x1143: JUMPI 0x118f V1052
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0xb8a, 0xe98}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0xb8a, 0xe98}, S2, S1, S0, 0x0]

================================

Block 0x1144
[0x1144:0x117f]
---
Predecessors: [0x110d]
Successors: [0x1180, 0x1189]
---
0x1144 DUP3
0x1145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115a AND
0x115b PUSH2 0x8fc
0x115e DUP4
0x115f SWAP1
0x1160 DUP2
0x1161 ISZERO
0x1162 MUL
0x1163 SWAP1
0x1164 PUSH1 0x40
0x1166 MLOAD
0x1167 PUSH1 0x0
0x1169 PUSH1 0x40
0x116b MLOAD
0x116c DUP1
0x116d DUP4
0x116e SUB
0x116f DUP2
0x1170 DUP6
0x1171 DUP9
0x1172 DUP9
0x1173 CALL
0x1174 SWAP4
0x1175 POP
0x1176 POP
0x1177 POP
0x1178 POP
0x1179 ISZERO
0x117a DUP1
0x117b ISZERO
0x117c PUSH2 0x1189
0x117f JUMPI
---
0x1145: V1054 = 0xffffffffffffffffffffffffffffffffffffffff
0x115a: V1055 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x115b: V1056 = 0x8fc
0x1161: V1057 = ISZERO S1
0x1162: V1058 = MUL V1057 0x8fc
0x1164: V1059 = 0x40
0x1166: V1060 = M[0x40]
0x1167: V1061 = 0x0
0x1169: V1062 = 0x40
0x116b: V1063 = M[0x40]
0x116e: V1064 = SUB V1060 V1063
0x1173: V1065 = CALL V1058 V1055 S1 V1063 V1064 V1063 0x0
0x1179: V1066 = ISZERO V1065
0x117b: V1067 = ISZERO V1066
0x117c: V1068 = 0x1189
0x117f: JUMPI 0x1189 V1067
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1066]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0, V1066]

================================

Block 0x1180
[0x1180:0x1188]
---
Predecessors: [0x1144]
Successors: []
---
0x1180 RETURNDATASIZE
0x1181 PUSH1 0x0
0x1183 DUP1
0x1184 RETURNDATACOPY
0x1185 RETURNDATASIZE
0x1186 PUSH1 0x0
0x1188 REVERT
---
0x1180: V1069 = RETURNDATASIZE
0x1181: V1070 = 0x0
0x1184: RETURNDATACOPY 0x0 0x0 V1069
0x1185: V1071 = RETURNDATASIZE
0x1186: V1072 = 0x0
0x1188: REVERT 0x0 V1071
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0xb8a, 0xe98}, S4, S3, S2, 0x0, V1066]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0xb8a, 0xe98}, S4, S3, S2, 0x0, V1066]

================================

Block 0x1189
[0x1189:0x118e]
---
Predecessors: [0x1144]
Successors: [0x1279]
---
0x1189 JUMPDEST
0x118a POP
0x118b PUSH2 0x1279
0x118e JUMP
---
0x1189: JUMPDEST 
0x118b: V1073 = 0x1279
0x118e: JUMP 0x1279
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0xb8a, 0xe98}, S4, S3, S2, 0x0, V1066]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0xb8a, 0xe98}, S4, S3, S2, 0x0]

================================

Block 0x118f
[0x118f:0x122d]
---
Predecessors: [0x110d]
Successors: [0x122e, 0x1232]
---
0x118f JUMPDEST
0x1190 DUP4
0x1191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a6 AND
0x11a7 PUSH4 0xa9059cbb
0x11ac DUP5
0x11ad DUP5
0x11ae PUSH1 0x40
0x11b0 MLOAD
0x11b1 DUP4
0x11b2 PUSH4 0xffffffff
0x11b7 AND
0x11b8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11d6 MUL
0x11d7 DUP2
0x11d8 MSTORE
0x11d9 PUSH1 0x4
0x11db ADD
0x11dc DUP1
0x11dd DUP4
0x11de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f3 AND
0x11f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1209 AND
0x120a DUP2
0x120b MSTORE
0x120c PUSH1 0x20
0x120e ADD
0x120f DUP3
0x1210 DUP2
0x1211 MSTORE
0x1212 PUSH1 0x20
0x1214 ADD
0x1215 SWAP3
0x1216 POP
0x1217 POP
0x1218 POP
0x1219 PUSH1 0x20
0x121b PUSH1 0x40
0x121d MLOAD
0x121e DUP1
0x121f DUP4
0x1220 SUB
0x1221 DUP2
0x1222 PUSH1 0x0
0x1224 DUP8
0x1225 DUP1
0x1226 EXTCODESIZE
0x1227 ISZERO
0x1228 DUP1
0x1229 ISZERO
0x122a PUSH2 0x1232
0x122d JUMPI
---
0x118f: JUMPDEST 
0x1191: V1074 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a6: V1075 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x11a7: V1076 = 0xa9059cbb
0x11ae: V1077 = 0x40
0x11b0: V1078 = M[0x40]
0x11b2: V1079 = 0xffffffff
0x11b7: V1080 = AND 0xffffffff 0xa9059cbb
0x11b8: V1081 = 0x100000000000000000000000000000000000000000000000000000000
0x11d6: V1082 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x11d8: M[V1078] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x11d9: V1083 = 0x4
0x11db: V1084 = ADD 0x4 V1078
0x11de: V1085 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f3: V1086 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x11f4: V1087 = 0xffffffffffffffffffffffffffffffffffffffff
0x1209: V1088 = AND 0xffffffffffffffffffffffffffffffffffffffff V1086
0x120b: M[V1084] = V1088
0x120c: V1089 = 0x20
0x120e: V1090 = ADD 0x20 V1084
0x1211: M[V1090] = S1
0x1212: V1091 = 0x20
0x1214: V1092 = ADD 0x20 V1090
0x1219: V1093 = 0x20
0x121b: V1094 = 0x40
0x121d: V1095 = M[0x40]
0x1220: V1096 = SUB V1092 V1095
0x1222: V1097 = 0x0
0x1226: V1098 = EXTCODESIZE V1075
0x1227: V1099 = ISZERO V1098
0x1229: V1100 = ISZERO V1099
0x122a: V1101 = 0x1232
0x122d: JUMPI 0x1232 V1100
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V1075, 0xa9059cbb, V1092, 0x20, V1095, V1096, V1095, 0x0, V1075, V1099]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0, V1075, 0xa9059cbb, V1092, 0x20, V1095, V1096, V1095, 0x0, V1075, V1099]

================================

Block 0x122e
[0x122e:0x1231]
---
Predecessors: [0x118f]
Successors: []
---
0x122e PUSH1 0x0
0x1230 DUP1
0x1231 REVERT
---
0x122e: V1102 = 0x0
0x1231: REVERT 0x0 0x0
---
Entry stack: [V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0xb8a, 0xe98}, S13, S12, S11, 0x0, V1075, 0xa9059cbb, V1092, 0x20, V1095, V1096, V1095, 0x0, V1075, V1099]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0xb8a, 0xe98}, S13, S12, S11, 0x0, V1075, 0xa9059cbb, V1092, 0x20, V1095, V1096, V1095, 0x0, V1075, V1099]

================================

Block 0x1232
[0x1232:0x123c]
---
Predecessors: [0x118f]
Successors: [0x123d, 0x1246]
---
0x1232 JUMPDEST
0x1233 POP
0x1234 GAS
0x1235 CALL
0x1236 ISZERO
0x1237 DUP1
0x1238 ISZERO
0x1239 PUSH2 0x1246
0x123c JUMPI
---
0x1232: JUMPDEST 
0x1234: V1103 = GAS
0x1235: V1104 = CALL V1103 V1075 0x0 V1095 V1096 V1095 0x20
0x1236: V1105 = ISZERO V1104
0x1238: V1106 = ISZERO V1105
0x1239: V1107 = 0x1246
0x123c: JUMPI 0x1246 V1106
---
Entry stack: [V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0xb8a, 0xe98}, S13, S12, S11, 0x0, V1075, 0xa9059cbb, V1092, 0x20, V1095, V1096, V1095, 0x0, V1075, V1099]
Stack pops: 7
Stack additions: [V1105]
Exit stack: [V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0xb8a, 0xe98}, S13, S12, S11, 0x0, V1075, 0xa9059cbb, V1092, V1105]

================================

Block 0x123d
[0x123d:0x1245]
---
Predecessors: [0x1232]
Successors: []
---
0x123d RETURNDATASIZE
0x123e PUSH1 0x0
0x1240 DUP1
0x1241 RETURNDATACOPY
0x1242 RETURNDATASIZE
0x1243 PUSH1 0x0
0x1245 REVERT
---
0x123d: V1108 = RETURNDATASIZE
0x123e: V1109 = 0x0
0x1241: RETURNDATACOPY 0x0 0x0 V1108
0x1242: V1110 = RETURNDATASIZE
0x1243: V1111 = 0x0
0x1245: REVERT 0x0 V1110
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0xb8a, 0xe98}, S7, S6, S5, 0x0, S3, 0xa9059cbb, S1, V1105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0xb8a, 0xe98}, S7, S6, S5, 0x0, S3, 0xa9059cbb, S1, V1105]

================================

Block 0x1246
[0x1246:0x1257]
---
Predecessors: [0x1232]
Successors: [0x1258, 0x125c]
---
0x1246 JUMPDEST
0x1247 POP
0x1248 POP
0x1249 POP
0x124a POP
0x124b PUSH1 0x40
0x124d MLOAD
0x124e RETURNDATASIZE
0x124f PUSH1 0x20
0x1251 DUP2
0x1252 LT
0x1253 ISZERO
0x1254 PUSH2 0x125c
0x1257 JUMPI
---
0x1246: JUMPDEST 
0x124b: V1112 = 0x40
0x124d: V1113 = M[0x40]
0x124e: V1114 = RETURNDATASIZE
0x124f: V1115 = 0x20
0x1252: V1116 = LT V1114 0x20
0x1253: V1117 = ISZERO V1116
0x1254: V1118 = 0x125c
0x1257: JUMPI 0x125c V1117
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0xb8a, 0xe98}, S7, S6, S5, 0x0, S3, 0xa9059cbb, S1, V1105]
Stack pops: 4
Stack additions: [V1113, V1114]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0xb8a, 0xe98}, S7, S6, S5, 0x0, V1113, V1114]

================================

Block 0x1258
[0x1258:0x125b]
---
Predecessors: [0x1246]
Successors: []
---
0x1258 PUSH1 0x0
0x125a DUP1
0x125b REVERT
---
0x1258: V1119 = 0x0
0x125b: REVERT 0x0 0x0
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0xb8a, 0xe98}, S5, S4, S3, 0x0, V1113, V1114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0xb8a, 0xe98}, S5, S4, S3, 0x0, V1113, V1114]

================================

Block 0x125c
[0x125c:0x1273]
---
Predecessors: [0x1246]
Successors: [0x1274, 0x1278]
---
0x125c JUMPDEST
0x125d DUP2
0x125e ADD
0x125f SWAP1
0x1260 DUP1
0x1261 DUP1
0x1262 MLOAD
0x1263 SWAP1
0x1264 PUSH1 0x20
0x1266 ADD
0x1267 SWAP1
0x1268 SWAP3
0x1269 SWAP2
0x126a SWAP1
0x126b POP
0x126c POP
0x126d POP
0x126e ISZERO
0x126f ISZERO
0x1270 PUSH2 0x1278
0x1273 JUMPI
---
0x125c: JUMPDEST 
0x125e: V1120 = ADD V1113 V1114
0x1262: V1121 = M[V1113]
0x1264: V1122 = 0x20
0x1266: V1123 = ADD 0x20 V1113
0x126e: V1124 = ISZERO V1121
0x126f: V1125 = ISZERO V1124
0x1270: V1126 = 0x1278
0x1273: JUMPI 0x1278 V1125
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0xb8a, 0xe98}, S5, S4, S3, 0x0, V1113, V1114]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0xb8a, 0xe98}, S5, S4, S3, 0x0]

================================

Block 0x1274
[0x1274:0x1277]
---
Predecessors: [0x125c]
Successors: []
---
0x1274 PUSH1 0x0
0x1276 DUP1
0x1277 REVERT
---
0x1274: V1127 = 0x0
0x1277: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0]

================================

Block 0x1278
[0x1278:0x1278]
---
Predecessors: [0x125c]
Successors: [0x1279]
---
0x1278 JUMPDEST
---
0x1278: JUMPDEST 
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0]

================================

Block 0x1279
[0x1279:0x1283]
---
Predecessors: [0x1189, 0x1278]
Successors: [0xb8a, 0xe98]
---
0x1279 JUMPDEST
0x127a PUSH1 0x1
0x127c SWAP1
0x127d POP
0x127e SWAP4
0x127f SWAP3
0x1280 POP
0x1281 POP
0x1282 POP
0x1283 JUMP
---
0x1279: JUMPDEST 
0x127a: V1128 = 0x1
0x1283: JUMP {0xb8a, 0xe98}
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xb8a, 0xe98}, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x1]

================================

Block 0x1284
[0x1284:0x12bb]
---
Predecessors: []
Successors: []
---
0x1284 STOP
0x1285 LOG1
0x1286 PUSH6 0x627a7a723058
0x128d SHA3
0x128e MISSING 0xa5
0x128f CALLDATASIZE
0x1290 PUSH3 0xf3fa1
0x1294 DUP8
0x1295 MISSING 0xe
0x1296 STOP
0x1297 MISSING 0x26
0x1298 MISSING 0xec
0x1299 CALL
0x129a PC
0x129b PUSH5 0x5ae98baf1
0x12a1 MISSING 0xdb
0x12a2 MISSING 0xe9
0x12a3 MISSING 0xb9
0x12a4 CALLDATASIZE
0x12a5 DUP11
0x12a6 PUSH21 0xdbef7e01c9e3140029
---
0x1284: STOP 
0x1285: LOG S0 S1 S2
0x1286: V1129 = 0x627a7a723058
0x128d: V1130 = SHA3 0x627a7a723058 S3
0x128e: MISSING 0xa5
0x128f: V1131 = CALLDATASIZE
0x1290: V1132 = 0xf3fa1
0x1295: MISSING 0xe
0x1296: STOP 
0x1297: MISSING 0x26
0x1298: MISSING 0xec
0x1299: V1133 = CALL S0 S1 S2 S3 S4 S5 S6
0x129a: V1134 = PC
0x129b: V1135 = 0x5ae98baf1
0x12a1: MISSING 0xdb
0x12a2: MISSING 0xe9
0x12a3: MISSING 0xb9
0x12a4: V1136 = CALLDATASIZE
0x12a6: V1137 = 0xdbef7e01c9e3140029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1130, S5, 0xf3fa1, V1131, S0, S1, S2, S3, S4, S5, 0x5ae98baf1, V1134, V1133, 0xdbef7e01c9e3140029, S9, V1136, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x3fc8cef3
Entry block: 0xb1
Exit block: 0xc6
Body: 0xb1, 0xb9, 0xbd, 0xc6, 0x4eb

Function 1:
Public function signature: 0x5e35359e
Entry block: 0x108
Exit block: 0x173
Body: 0x108, 0x110, 0x114, 0x173, 0x511, 0x56a, 0x56e, 0x60d, 0x611, 0x61c, 0x625, 0x637, 0x63b

Function 2:
Public function signature: 0x8322fff2
Entry block: 0x18d
Exit block: 0x1a2
Body: 0x18d, 0x195, 0x199, 0x1a2, 0x655

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x1e4
Exit block: 0x1f9
Body: 0x1e4, 0x1ec, 0x1f0, 0x1f9, 0x65a

Function 4:
Public function signature: 0xc30c13c4
Entry block: 0x23b
Exit block: 0x2e3
Body: 0x23b, 0x243, 0x247, 0x2e3, 0x67f, 0x692, 0x693, 0x731, 0x735, 0x740, 0x749, 0x75b, 0x75f, 0x833, 0x837, 0x842, 0x84b, 0x85d, 0x861, 0x8f4, 0x8fd, 0x90f, 0x922, 0x92b, 0x93d, 0x99b, 0x99f, 0x9aa, 0x9b3, 0x9c5, 0x9c9, 0xa94, 0xa98, 0xaa3, 0xaac, 0xabe, 0xac2, 0xb62, 0xb66, 0xb71, 0xb7a, 0xb8a

Function 5:
Public function signature: 0xc8f4569d
Entry block: 0x2e5
Exit block: 0x380
Body: 0x2e5, 0x380, 0xb95, 0xc1a, 0xc1e, 0xc29, 0xc32, 0xcb8, 0xcc1, 0xcd3, 0xce6, 0xcef, 0xd01, 0xd5f, 0xd63, 0xd6e, 0xd77, 0xd89, 0xd8d, 0xdad, 0xdae, 0xe4c, 0xe50, 0xe5b, 0xe64, 0xe76, 0xe7a, 0xe98

Function 6:
Public function signature: 0xd2f7265a
Entry block: 0x382
Exit block: 0x397
Body: 0x382, 0x38a, 0x38e, 0x397, 0xea2

Function 7:
Public function signature: 0xe5b5019a
Entry block: 0x3d9
Exit block: 0x3ee
Body: 0x3d9, 0x3e1, 0x3e5, 0x3ee, 0xec8

Function 8:
Public function signature: 0xec556889
Entry block: 0x404
Exit block: 0x419
Body: 0x404, 0x40c, 0x410, 0x419, 0xeec

Function 9:
Public function signature: 0xf2fde38b
Entry block: 0x45b
Exit block: 0x49c
Body: 0x45b, 0x463, 0x467, 0x49c, 0xf12, 0xf69, 0xf6d, 0xfa5, 0xfa9

Function 10:
Public function signature: 0xf3fef3a3
Entry block: 0x49e
Exit block: 0x4e9
Body: 0x49e, 0x4a6, 0x4aa, 0x4e9, 0x1067, 0x10be, 0x10c2, 0x10ff, 0x1108

Function 11:
Public fallback function
Entry block: 0xaf
Exit block: 0xaf
Body: 0xaf

Function 12:
Private function
Entry block: 0x110d
Exit block: 0x1279
Body: 0x110d, 0x1144, 0x1189, 0x118f, 0x1232, 0x1246, 0x125c, 0x1278, 0x1279

