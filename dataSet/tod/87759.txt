Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x88]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xcf93216
0x3c EQ
0x3d PUSH2 0x88
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xcf93216
0x3c: V13 = EQ 0xcf93216 V11
0x3d: V14 = 0x88
0x40: JUMPI 0x88 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x1a0]
---
0x41 DUP1
0x42 PUSH4 0x1179a5c7
0x47 EQ
0x48 PUSH2 0x1a0
0x4b JUMPI
---
0x42: V15 = 0x1179a5c7
0x47: V16 = EQ 0x1179a5c7 V11
0x48: V17 = 0x1a0
0x4b: JUMPI 0x1a0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x2d8]
---
0x4c DUP1
0x4d PUSH4 0x13af4035
0x52 EQ
0x53 PUSH2 0x2d8
0x56 JUMPI
---
0x4d: V18 = 0x13af4035
0x52: V19 = EQ 0x13af4035 V11
0x53: V20 = 0x2d8
0x56: JUMPI 0x2d8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x31b]
---
0x57 DUP1
0x58 PUSH4 0x14174f33
0x5d EQ
0x5e PUSH2 0x31b
0x61 JUMPI
---
0x58: V21 = 0x14174f33
0x5d: V22 = EQ 0x14174f33 V11
0x5e: V23 = 0x31b
0x61: JUMPI 0x31b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x348]
---
0x62 DUP1
0x63 PUSH4 0x41c0e1b5
0x68 EQ
0x69 PUSH2 0x348
0x6c JUMPI
---
0x63: V24 = 0x41c0e1b5
0x68: V25 = EQ 0x41c0e1b5 V11
0x69: V26 = 0x348
0x6c: JUMPI 0x348 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x35f]
---
0x6d DUP1
0x6e PUSH4 0x4cddae28
0x73 EQ
0x74 PUSH2 0x35f
0x77 JUMPI
---
0x6e: V27 = 0x4cddae28
0x73: V28 = EQ 0x4cddae28 V11
0x74: V29 = 0x35f
0x77: JUMPI 0x35f V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x369]
---
0x78 DUP1
0x79 PUSH4 0x8da5cb5b
0x7e EQ
0x7f PUSH2 0x369
0x82 JUMPI
---
0x79: V30 = 0x8da5cb5b
0x7e: V31 = EQ 0x8da5cb5b V11
0x7f: V32 = 0x369
0x82: JUMPI 0x369 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x87]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x83: JUMPDEST 
0x84: V33 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0xd]
Successors: [0x90, 0x94]
---
0x88 JUMPDEST
0x89 CALLVALUE
0x8a DUP1
0x8b ISZERO
0x8c PUSH2 0x94
0x8f JUMPI
---
0x88: JUMPDEST 
0x89: V34 = CALLVALUE
0x8b: V35 = ISZERO V34
0x8c: V36 = 0x94
0x8f: JUMPI 0x94 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x88]
Successors: []
---
0x90 PUSH1 0x0
0x92 DUP1
0x93 REVERT
---
0x90: V37 = 0x0
0x93: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x94
[0x94:0x19d]
---
Predecessors: [0x88]
Successors: [0x3c0]
---
0x94 JUMPDEST
0x95 POP
0x96 PUSH2 0x19e
0x99 PUSH1 0x4
0x9b DUP1
0x9c CALLDATASIZE
0x9d SUB
0x9e DUP2
0x9f ADD
0xa0 SWAP1
0xa1 DUP1
0xa2 DUP1
0xa3 CALLDATALOAD
0xa4 SWAP1
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 SWAP1
0xa9 DUP3
0xaa ADD
0xab DUP1
0xac CALLDATALOAD
0xad SWAP1
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP1
0xb2 DUP1
0xb3 DUP1
0xb4 PUSH1 0x20
0xb6 MUL
0xb7 PUSH1 0x20
0xb9 ADD
0xba PUSH1 0x40
0xbc MLOAD
0xbd SWAP1
0xbe DUP2
0xbf ADD
0xc0 PUSH1 0x40
0xc2 MSTORE
0xc3 DUP1
0xc4 SWAP4
0xc5 SWAP3
0xc6 SWAP2
0xc7 SWAP1
0xc8 DUP2
0xc9 DUP2
0xca MSTORE
0xcb PUSH1 0x20
0xcd ADD
0xce DUP4
0xcf DUP4
0xd0 PUSH1 0x20
0xd2 MUL
0xd3 DUP1
0xd4 DUP3
0xd5 DUP5
0xd6 CALLDATACOPY
0xd7 DUP3
0xd8 ADD
0xd9 SWAP2
0xda POP
0xdb POP
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 SWAP2
0xe1 SWAP3
0xe2 SWAP2
0xe3 SWAP3
0xe4 SWAP1
0xe5 DUP1
0xe6 CALLDATALOAD
0xe7 SWAP1
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec DUP3
0xed ADD
0xee DUP1
0xef CALLDATALOAD
0xf0 SWAP1
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 DUP1
0xf6 DUP1
0xf7 PUSH1 0x20
0xf9 MUL
0xfa PUSH1 0x20
0xfc ADD
0xfd PUSH1 0x40
0xff MLOAD
0x100 SWAP1
0x101 DUP2
0x102 ADD
0x103 PUSH1 0x40
0x105 MSTORE
0x106 DUP1
0x107 SWAP4
0x108 SWAP3
0x109 SWAP2
0x10a SWAP1
0x10b DUP2
0x10c DUP2
0x10d MSTORE
0x10e PUSH1 0x20
0x110 ADD
0x111 DUP4
0x112 DUP4
0x113 PUSH1 0x20
0x115 MUL
0x116 DUP1
0x117 DUP3
0x118 DUP5
0x119 CALLDATACOPY
0x11a DUP3
0x11b ADD
0x11c SWAP2
0x11d POP
0x11e POP
0x11f POP
0x120 POP
0x121 POP
0x122 POP
0x123 SWAP2
0x124 SWAP3
0x125 SWAP2
0x126 SWAP3
0x127 SWAP1
0x128 DUP1
0x129 CALLDATALOAD
0x12a SWAP1
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP1
0x12f DUP3
0x130 ADD
0x131 DUP1
0x132 CALLDATALOAD
0x133 SWAP1
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 DUP1
0x139 DUP1
0x13a PUSH1 0x1f
0x13c ADD
0x13d PUSH1 0x20
0x13f DUP1
0x140 SWAP2
0x141 DIV
0x142 MUL
0x143 PUSH1 0x20
0x145 ADD
0x146 PUSH1 0x40
0x148 MLOAD
0x149 SWAP1
0x14a DUP2
0x14b ADD
0x14c PUSH1 0x40
0x14e MSTORE
0x14f DUP1
0x150 SWAP4
0x151 SWAP3
0x152 SWAP2
0x153 SWAP1
0x154 DUP2
0x155 DUP2
0x156 MSTORE
0x157 PUSH1 0x20
0x159 ADD
0x15a DUP4
0x15b DUP4
0x15c DUP1
0x15d DUP3
0x15e DUP5
0x15f CALLDATACOPY
0x160 DUP3
0x161 ADD
0x162 SWAP2
0x163 POP
0x164 POP
0x165 POP
0x166 POP
0x167 POP
0x168 POP
0x169 SWAP2
0x16a SWAP3
0x16b SWAP2
0x16c SWAP3
0x16d SWAP1
0x16e DUP1
0x16f CALLDATALOAD
0x170 PUSH1 0x0
0x172 NOT
0x173 AND
0x174 SWAP1
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 SWAP3
0x17a SWAP2
0x17b SWAP1
0x17c DUP1
0x17d CALLDATALOAD
0x17e PUSH1 0x0
0x180 NOT
0x181 AND
0x182 SWAP1
0x183 PUSH1 0x20
0x185 ADD
0x186 SWAP1
0x187 SWAP3
0x188 SWAP2
0x189 SWAP1
0x18a DUP1
0x18b CALLDATALOAD
0x18c PUSH1 0xff
0x18e AND
0x18f SWAP1
0x190 PUSH1 0x20
0x192 ADD
0x193 SWAP1
0x194 SWAP3
0x195 SWAP2
0x196 SWAP1
0x197 POP
0x198 POP
0x199 POP
0x19a PUSH2 0x3c0
0x19d JUMP
---
0x94: JUMPDEST 
0x96: V38 = 0x19e
0x99: V39 = 0x4
0x9c: V40 = CALLDATASIZE
0x9d: V41 = SUB V40 0x4
0x9f: V42 = ADD 0x4 V41
0xa3: V43 = CALLDATALOAD 0x4
0xa5: V44 = 0x20
0xa7: V45 = ADD 0x20 0x4
0xaa: V46 = ADD 0x4 V43
0xac: V47 = CALLDATALOAD V46
0xae: V48 = 0x20
0xb0: V49 = ADD 0x20 V46
0xb4: V50 = 0x20
0xb6: V51 = MUL 0x20 V47
0xb7: V52 = 0x20
0xb9: V53 = ADD 0x20 V51
0xba: V54 = 0x40
0xbc: V55 = M[0x40]
0xbf: V56 = ADD V55 V53
0xc0: V57 = 0x40
0xc2: M[0x40] = V56
0xca: M[V55] = V47
0xcb: V58 = 0x20
0xcd: V59 = ADD 0x20 V55
0xd0: V60 = 0x20
0xd2: V61 = MUL 0x20 V47
0xd6: CALLDATACOPY V59 V49 V61
0xd8: V62 = ADD V59 V61
0xe6: V63 = CALLDATALOAD 0x24
0xe8: V64 = 0x20
0xea: V65 = ADD 0x20 0x24
0xed: V66 = ADD 0x4 V63
0xef: V67 = CALLDATALOAD V66
0xf1: V68 = 0x20
0xf3: V69 = ADD 0x20 V66
0xf7: V70 = 0x20
0xf9: V71 = MUL 0x20 V67
0xfa: V72 = 0x20
0xfc: V73 = ADD 0x20 V71
0xfd: V74 = 0x40
0xff: V75 = M[0x40]
0x102: V76 = ADD V75 V73
0x103: V77 = 0x40
0x105: M[0x40] = V76
0x10d: M[V75] = V67
0x10e: V78 = 0x20
0x110: V79 = ADD 0x20 V75
0x113: V80 = 0x20
0x115: V81 = MUL 0x20 V67
0x119: CALLDATACOPY V79 V69 V81
0x11b: V82 = ADD V79 V81
0x129: V83 = CALLDATALOAD 0x44
0x12b: V84 = 0x20
0x12d: V85 = ADD 0x20 0x44
0x130: V86 = ADD 0x4 V83
0x132: V87 = CALLDATALOAD V86
0x134: V88 = 0x20
0x136: V89 = ADD 0x20 V86
0x13a: V90 = 0x1f
0x13c: V91 = ADD 0x1f V87
0x13d: V92 = 0x20
0x141: V93 = DIV V91 0x20
0x142: V94 = MUL V93 0x20
0x143: V95 = 0x20
0x145: V96 = ADD 0x20 V94
0x146: V97 = 0x40
0x148: V98 = M[0x40]
0x14b: V99 = ADD V98 V96
0x14c: V100 = 0x40
0x14e: M[0x40] = V99
0x156: M[V98] = V87
0x157: V101 = 0x20
0x159: V102 = ADD 0x20 V98
0x15f: CALLDATACOPY V102 V89 V87
0x161: V103 = ADD V102 V87
0x16f: V104 = CALLDATALOAD 0x64
0x170: V105 = 0x0
0x172: V106 = NOT 0x0
0x173: V107 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V104
0x175: V108 = 0x20
0x177: V109 = ADD 0x20 0x64
0x17d: V110 = CALLDATALOAD 0x84
0x17e: V111 = 0x0
0x180: V112 = NOT 0x0
0x181: V113 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V110
0x183: V114 = 0x20
0x185: V115 = ADD 0x20 0x84
0x18b: V116 = CALLDATALOAD 0xa4
0x18c: V117 = 0xff
0x18e: V118 = AND 0xff V116
0x190: V119 = 0x20
0x192: V120 = ADD 0x20 0xa4
0x19a: V121 = 0x3c0
0x19d: JUMP 0x3c0
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0x19e, V55, V75, V98, V107, V113, V118]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118]

================================

Block 0x19e
[0x19e:0x19f]
---
Predecessors: [0x7a9]
Successors: []
---
0x19e JUMPDEST
0x19f STOP
---
0x19e: JUMPDEST 
0x19f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x41]
Successors: [0x1a8, 0x1ac]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 DUP1
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V122 = CALLVALUE
0x1a3: V123 = ISZERO V122
0x1a4: V124 = 0x1ac
0x1a7: JUMPI 0x1ac V123
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V122]
Exit stack: [V11, V122]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V125 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V122]

================================

Block 0x1ac
[0x1ac:0x2d5]
---
Predecessors: [0x1a0]
Successors: [0x7ff]
---
0x1ac JUMPDEST
0x1ad POP
0x1ae PUSH2 0x2d6
0x1b1 PUSH1 0x4
0x1b3 DUP1
0x1b4 CALLDATASIZE
0x1b5 SUB
0x1b6 DUP2
0x1b7 ADD
0x1b8 SWAP1
0x1b9 DUP1
0x1ba DUP1
0x1bb CALLDATALOAD
0x1bc SWAP1
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP1
0x1c1 DUP3
0x1c2 ADD
0x1c3 DUP1
0x1c4 CALLDATALOAD
0x1c5 SWAP1
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 SWAP1
0x1ca DUP1
0x1cb DUP1
0x1cc PUSH1 0x20
0x1ce MUL
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 SWAP1
0x1d6 DUP2
0x1d7 ADD
0x1d8 PUSH1 0x40
0x1da MSTORE
0x1db DUP1
0x1dc SWAP4
0x1dd SWAP3
0x1de SWAP2
0x1df SWAP1
0x1e0 DUP2
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 DUP4
0x1e7 DUP4
0x1e8 PUSH1 0x20
0x1ea MUL
0x1eb DUP1
0x1ec DUP3
0x1ed DUP5
0x1ee CALLDATACOPY
0x1ef DUP3
0x1f0 ADD
0x1f1 SWAP2
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 SWAP2
0x1f9 SWAP3
0x1fa SWAP2
0x1fb SWAP3
0x1fc SWAP1
0x1fd DUP1
0x1fe CALLDATALOAD
0x1ff SWAP1
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP1
0x204 DUP3
0x205 ADD
0x206 DUP1
0x207 CALLDATALOAD
0x208 SWAP1
0x209 PUSH1 0x20
0x20b ADD
0x20c SWAP1
0x20d DUP1
0x20e DUP1
0x20f PUSH1 0x20
0x211 MUL
0x212 PUSH1 0x20
0x214 ADD
0x215 PUSH1 0x40
0x217 MLOAD
0x218 SWAP1
0x219 DUP2
0x21a ADD
0x21b PUSH1 0x40
0x21d MSTORE
0x21e DUP1
0x21f SWAP4
0x220 SWAP3
0x221 SWAP2
0x222 SWAP1
0x223 DUP2
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x20
0x228 ADD
0x229 DUP4
0x22a DUP4
0x22b PUSH1 0x20
0x22d MUL
0x22e DUP1
0x22f DUP3
0x230 DUP5
0x231 CALLDATACOPY
0x232 DUP3
0x233 ADD
0x234 SWAP2
0x235 POP
0x236 POP
0x237 POP
0x238 POP
0x239 POP
0x23a POP
0x23b SWAP2
0x23c SWAP3
0x23d SWAP2
0x23e SWAP3
0x23f SWAP1
0x240 DUP1
0x241 CALLDATALOAD
0x242 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x257 AND
0x258 SWAP1
0x259 PUSH1 0x20
0x25b ADD
0x25c SWAP1
0x25d SWAP3
0x25e SWAP2
0x25f SWAP1
0x260 DUP1
0x261 CALLDATALOAD
0x262 SWAP1
0x263 PUSH1 0x20
0x265 ADD
0x266 SWAP1
0x267 DUP3
0x268 ADD
0x269 DUP1
0x26a CALLDATALOAD
0x26b SWAP1
0x26c PUSH1 0x20
0x26e ADD
0x26f SWAP1
0x270 DUP1
0x271 DUP1
0x272 PUSH1 0x1f
0x274 ADD
0x275 PUSH1 0x20
0x277 DUP1
0x278 SWAP2
0x279 DIV
0x27a MUL
0x27b PUSH1 0x20
0x27d ADD
0x27e PUSH1 0x40
0x280 MLOAD
0x281 SWAP1
0x282 DUP2
0x283 ADD
0x284 PUSH1 0x40
0x286 MSTORE
0x287 DUP1
0x288 SWAP4
0x289 SWAP3
0x28a SWAP2
0x28b SWAP1
0x28c DUP2
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x20
0x291 ADD
0x292 DUP4
0x293 DUP4
0x294 DUP1
0x295 DUP3
0x296 DUP5
0x297 CALLDATACOPY
0x298 DUP3
0x299 ADD
0x29a SWAP2
0x29b POP
0x29c POP
0x29d POP
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 SWAP2
0x2a2 SWAP3
0x2a3 SWAP2
0x2a4 SWAP3
0x2a5 SWAP1
0x2a6 DUP1
0x2a7 CALLDATALOAD
0x2a8 PUSH1 0x0
0x2aa NOT
0x2ab AND
0x2ac SWAP1
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 SWAP1
0x2b1 SWAP3
0x2b2 SWAP2
0x2b3 SWAP1
0x2b4 DUP1
0x2b5 CALLDATALOAD
0x2b6 PUSH1 0x0
0x2b8 NOT
0x2b9 AND
0x2ba SWAP1
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP1
0x2bf SWAP3
0x2c0 SWAP2
0x2c1 SWAP1
0x2c2 DUP1
0x2c3 CALLDATALOAD
0x2c4 PUSH1 0xff
0x2c6 AND
0x2c7 SWAP1
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb SWAP1
0x2cc SWAP3
0x2cd SWAP2
0x2ce SWAP1
0x2cf POP
0x2d0 POP
0x2d1 POP
0x2d2 PUSH2 0x7ff
0x2d5 JUMP
---
0x1ac: JUMPDEST 
0x1ae: V126 = 0x2d6
0x1b1: V127 = 0x4
0x1b4: V128 = CALLDATASIZE
0x1b5: V129 = SUB V128 0x4
0x1b7: V130 = ADD 0x4 V129
0x1bb: V131 = CALLDATALOAD 0x4
0x1bd: V132 = 0x20
0x1bf: V133 = ADD 0x20 0x4
0x1c2: V134 = ADD 0x4 V131
0x1c4: V135 = CALLDATALOAD V134
0x1c6: V136 = 0x20
0x1c8: V137 = ADD 0x20 V134
0x1cc: V138 = 0x20
0x1ce: V139 = MUL 0x20 V135
0x1cf: V140 = 0x20
0x1d1: V141 = ADD 0x20 V139
0x1d2: V142 = 0x40
0x1d4: V143 = M[0x40]
0x1d7: V144 = ADD V143 V141
0x1d8: V145 = 0x40
0x1da: M[0x40] = V144
0x1e2: M[V143] = V135
0x1e3: V146 = 0x20
0x1e5: V147 = ADD 0x20 V143
0x1e8: V148 = 0x20
0x1ea: V149 = MUL 0x20 V135
0x1ee: CALLDATACOPY V147 V137 V149
0x1f0: V150 = ADD V147 V149
0x1fe: V151 = CALLDATALOAD 0x24
0x200: V152 = 0x20
0x202: V153 = ADD 0x20 0x24
0x205: V154 = ADD 0x4 V151
0x207: V155 = CALLDATALOAD V154
0x209: V156 = 0x20
0x20b: V157 = ADD 0x20 V154
0x20f: V158 = 0x20
0x211: V159 = MUL 0x20 V155
0x212: V160 = 0x20
0x214: V161 = ADD 0x20 V159
0x215: V162 = 0x40
0x217: V163 = M[0x40]
0x21a: V164 = ADD V163 V161
0x21b: V165 = 0x40
0x21d: M[0x40] = V164
0x225: M[V163] = V155
0x226: V166 = 0x20
0x228: V167 = ADD 0x20 V163
0x22b: V168 = 0x20
0x22d: V169 = MUL 0x20 V155
0x231: CALLDATACOPY V167 V157 V169
0x233: V170 = ADD V167 V169
0x241: V171 = CALLDATALOAD 0x44
0x242: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x257: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x259: V174 = 0x20
0x25b: V175 = ADD 0x20 0x44
0x261: V176 = CALLDATALOAD 0x64
0x263: V177 = 0x20
0x265: V178 = ADD 0x20 0x64
0x268: V179 = ADD 0x4 V176
0x26a: V180 = CALLDATALOAD V179
0x26c: V181 = 0x20
0x26e: V182 = ADD 0x20 V179
0x272: V183 = 0x1f
0x274: V184 = ADD 0x1f V180
0x275: V185 = 0x20
0x279: V186 = DIV V184 0x20
0x27a: V187 = MUL V186 0x20
0x27b: V188 = 0x20
0x27d: V189 = ADD 0x20 V187
0x27e: V190 = 0x40
0x280: V191 = M[0x40]
0x283: V192 = ADD V191 V189
0x284: V193 = 0x40
0x286: M[0x40] = V192
0x28e: M[V191] = V180
0x28f: V194 = 0x20
0x291: V195 = ADD 0x20 V191
0x297: CALLDATACOPY V195 V182 V180
0x299: V196 = ADD V195 V180
0x2a7: V197 = CALLDATALOAD 0x84
0x2a8: V198 = 0x0
0x2aa: V199 = NOT 0x0
0x2ab: V200 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V197
0x2ad: V201 = 0x20
0x2af: V202 = ADD 0x20 0x84
0x2b5: V203 = CALLDATALOAD 0xa4
0x2b6: V204 = 0x0
0x2b8: V205 = NOT 0x0
0x2b9: V206 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V203
0x2bb: V207 = 0x20
0x2bd: V208 = ADD 0x20 0xa4
0x2c3: V209 = CALLDATALOAD 0xc4
0x2c4: V210 = 0xff
0x2c6: V211 = AND 0xff V209
0x2c8: V212 = 0x20
0x2ca: V213 = ADD 0x20 0xc4
0x2d2: V214 = 0x7ff
0x2d5: JUMP 0x7ff
---
Entry stack: [V11, V122]
Stack pops: 1
Stack additions: [0x2d6, V143, V163, V173, V191, V200, V206, V211]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211]

================================

Block 0x2d6
[0x2d6:0x2d7]
---
Predecessors: [0xc85]
Successors: []
---
0x2d6 JUMPDEST
0x2d7 STOP
---
0x2d6: JUMPDEST 
0x2d7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d8
[0x2d8:0x2df]
---
Predecessors: [0x4c]
Successors: [0x2e0, 0x2e4]
---
0x2d8 JUMPDEST
0x2d9 CALLVALUE
0x2da DUP1
0x2db ISZERO
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V215 = CALLVALUE
0x2db: V216 = ISZERO V215
0x2dc: V217 = 0x2e4
0x2df: JUMPI 0x2e4 V216
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V215]
Exit stack: [V11, V215]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x2d8]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V218 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V11, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V215]

================================

Block 0x2e4
[0x2e4:0x318]
---
Predecessors: [0x2d8]
Successors: [0xcdd]
---
0x2e4 JUMPDEST
0x2e5 POP
0x2e6 PUSH2 0x319
0x2e9 PUSH1 0x4
0x2eb DUP1
0x2ec CALLDATASIZE
0x2ed SUB
0x2ee DUP2
0x2ef ADD
0x2f0 SWAP1
0x2f1 DUP1
0x2f2 DUP1
0x2f3 CALLDATALOAD
0x2f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x309 AND
0x30a SWAP1
0x30b PUSH1 0x20
0x30d ADD
0x30e SWAP1
0x30f SWAP3
0x310 SWAP2
0x311 SWAP1
0x312 POP
0x313 POP
0x314 POP
0x315 PUSH2 0xcdd
0x318 JUMP
---
0x2e4: JUMPDEST 
0x2e6: V219 = 0x319
0x2e9: V220 = 0x4
0x2ec: V221 = CALLDATASIZE
0x2ed: V222 = SUB V221 0x4
0x2ef: V223 = ADD 0x4 V222
0x2f3: V224 = CALLDATALOAD 0x4
0x2f4: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x309: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x30b: V227 = 0x20
0x30d: V228 = ADD 0x20 0x4
0x315: V229 = 0xcdd
0x318: JUMP 0xcdd
---
Entry stack: [V11, V215]
Stack pops: 1
Stack additions: [0x319, V226]
Exit stack: [V11, 0x319, V226]

================================

Block 0x319
[0x319:0x31a]
---
Predecessors: [0xd39]
Successors: []
---
0x319 JUMPDEST
0x31a STOP
---
0x319: JUMPDEST 
0x31a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x31b
[0x31b:0x322]
---
Predecessors: [0x57]
Successors: [0x323, 0x327]
---
0x31b JUMPDEST
0x31c CALLVALUE
0x31d DUP1
0x31e ISZERO
0x31f PUSH2 0x327
0x322 JUMPI
---
0x31b: JUMPDEST 
0x31c: V230 = CALLVALUE
0x31e: V231 = ISZERO V230
0x31f: V232 = 0x327
0x322: JUMPI 0x327 V231
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V11, V230]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x31b]
Successors: []
---
0x323 PUSH1 0x0
0x325 DUP1
0x326 REVERT
---
0x323: V233 = 0x0
0x326: REVERT 0x0 0x0
---
Entry stack: [V11, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V230]

================================

Block 0x327
[0x327:0x345]
---
Predecessors: [0x31b]
Successors: [0xd7d]
---
0x327 JUMPDEST
0x328 POP
0x329 PUSH2 0x346
0x32c PUSH1 0x4
0x32e DUP1
0x32f CALLDATASIZE
0x330 SUB
0x331 DUP2
0x332 ADD
0x333 SWAP1
0x334 DUP1
0x335 DUP1
0x336 CALLDATALOAD
0x337 SWAP1
0x338 PUSH1 0x20
0x33a ADD
0x33b SWAP1
0x33c SWAP3
0x33d SWAP2
0x33e SWAP1
0x33f POP
0x340 POP
0x341 POP
0x342 PUSH2 0xd7d
0x345 JUMP
---
0x327: JUMPDEST 
0x329: V234 = 0x346
0x32c: V235 = 0x4
0x32f: V236 = CALLDATASIZE
0x330: V237 = SUB V236 0x4
0x332: V238 = ADD 0x4 V237
0x336: V239 = CALLDATALOAD 0x4
0x338: V240 = 0x20
0x33a: V241 = ADD 0x20 0x4
0x342: V242 = 0xd7d
0x345: JUMP 0xd7d
---
Entry stack: [V11, V230]
Stack pops: 1
Stack additions: [0x346, V239]
Exit stack: [V11, 0x346, V239]

================================

Block 0x346
[0x346:0x347]
---
Predecessors: [0xe1f]
Successors: []
---
0x346 JUMPDEST
0x347 STOP
---
0x346: JUMPDEST 
0x347: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x348
[0x348:0x34f]
---
Predecessors: [0x62]
Successors: [0x350, 0x354]
---
0x348 JUMPDEST
0x349 CALLVALUE
0x34a DUP1
0x34b ISZERO
0x34c PUSH2 0x354
0x34f JUMPI
---
0x348: JUMPDEST 
0x349: V243 = CALLVALUE
0x34b: V244 = ISZERO V243
0x34c: V245 = 0x354
0x34f: JUMPI 0x354 V244
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V243]
Exit stack: [V11, V243]

================================

Block 0x350
[0x350:0x353]
---
Predecessors: [0x348]
Successors: []
---
0x350 PUSH1 0x0
0x352 DUP1
0x353 REVERT
---
0x350: V246 = 0x0
0x353: REVERT 0x0 0x0
---
Entry stack: [V11, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V243]

================================

Block 0x354
[0x354:0x35c]
---
Predecessors: [0x348]
Successors: [0xe23]
---
0x354 JUMPDEST
0x355 POP
0x356 PUSH2 0x35d
0x359 PUSH2 0xe23
0x35c JUMP
---
0x354: JUMPDEST 
0x356: V247 = 0x35d
0x359: V248 = 0xe23
0x35c: JUMP 0xe23
---
Entry stack: [V11, V243]
Stack pops: 1
Stack additions: [0x35d]
Exit stack: [V11, 0x35d]

================================

Block 0x35d
[0x35d:0x35e]
---
Predecessors: []
Successors: []
---
0x35d JUMPDEST
0x35e STOP
---
0x35d: JUMPDEST 
0x35e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x35f
[0x35f:0x366]
---
Predecessors: [0x6d]
Successors: [0xeba]
---
0x35f JUMPDEST
0x360 PUSH2 0x367
0x363 PUSH2 0xeba
0x366 JUMP
---
0x35f: JUMPDEST 
0x360: V249 = 0x367
0x363: V250 = 0xeba
0x366: JUMP 0xeba
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x367]
Exit stack: [V11, 0x367]

================================

Block 0x367
[0x367:0x368]
---
Predecessors: [0xeba]
Successors: []
---
0x367 JUMPDEST
0x368 STOP
---
0x367: JUMPDEST 
0x368: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x369
[0x369:0x370]
---
Predecessors: [0x78]
Successors: [0x371, 0x375]
---
0x369 JUMPDEST
0x36a CALLVALUE
0x36b DUP1
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x369: JUMPDEST 
0x36a: V251 = CALLVALUE
0x36c: V252 = ISZERO V251
0x36d: V253 = 0x375
0x370: JUMPI 0x375 V252
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V251]
Exit stack: [V11, V251]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x369]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V254 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V11, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V251]

================================

Block 0x375
[0x375:0x37d]
---
Predecessors: [0x369]
Successors: [0xebc]
---
0x375 JUMPDEST
0x376 POP
0x377 PUSH2 0x37e
0x37a PUSH2 0xebc
0x37d JUMP
---
0x375: JUMPDEST 
0x377: V255 = 0x37e
0x37a: V256 = 0xebc
0x37d: JUMP 0xebc
---
Entry stack: [V11, V251]
Stack pops: 1
Stack additions: [0x37e]
Exit stack: [V11, 0x37e]

================================

Block 0x37e
[0x37e:0x3bf]
---
Predecessors: [0xebc]
Successors: []
---
0x37e JUMPDEST
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP1
0x383 DUP3
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3af AND
0x3b0 DUP2
0x3b1 MSTORE
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 SWAP2
0x3b6 POP
0x3b7 POP
0x3b8 PUSH1 0x40
0x3ba MLOAD
0x3bb DUP1
0x3bc SWAP2
0x3bd SUB
0x3be SWAP1
0x3bf RETURN
---
0x37e: JUMPDEST 
0x37f: V257 = 0x40
0x381: V258 = M[0x40]
0x384: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V1090
0x39a: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x3b1: M[V258] = V262
0x3b2: V263 = 0x20
0x3b4: V264 = ADD 0x20 V258
0x3b8: V265 = 0x40
0x3ba: V266 = M[0x40]
0x3bd: V267 = SUB V264 V266
0x3bf: RETURN V266 V267
---
Entry stack: [V11, 0x37e, V1090]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x37e]

================================

Block 0x3c0
[0x3c0:0x3cf]
---
Predecessors: [0x94]
Successors: [0x3d0, 0x3d4]
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 PUSH1 0x0
0x3c6 DUP1
0x3c7 DUP10
0x3c8 MLOAD
0x3c9 GT
0x3ca ISZERO
0x3cb ISZERO
0x3cc PUSH2 0x3d4
0x3cf JUMPI
---
0x3c0: JUMPDEST 
0x3c1: V268 = 0x0
0x3c4: V269 = 0x0
0x3c8: V270 = M[V55]
0x3c9: V271 = GT V270 0x0
0x3ca: V272 = ISZERO V271
0x3cb: V273 = ISZERO V272
0x3cc: V274 = 0x3d4
0x3cf: JUMPI 0x3d4 V273
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0]

================================

Block 0x3d0
[0x3d0:0x3d3]
---
Predecessors: [0x3c0]
Successors: []
---
0x3d0 PUSH1 0x0
0x3d2 DUP1
0x3d3 REVERT
---
0x3d0: V275 = 0x0
0x3d3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0]

================================

Block 0x3d4
[0x3d4:0x3e7]
---
Predecessors: [0x3c0]
Successors: [0x3e8]
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x0
0x3d7 DUP1
0x3d8 DUP9
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd DUP3
0x3de DUP1
0x3df MLOAD
0x3e0 SWAP1
0x3e1 PUSH1 0x20
0x3e3 ADD
0x3e4 SWAP1
0x3e5 DUP1
0x3e6 DUP4
0x3e7 DUP4
---
0x3d4: JUMPDEST 
0x3d5: V276 = 0x0
0x3d9: V277 = 0x40
0x3db: V278 = M[0x40]
0x3df: V279 = M[V98]
0x3e1: V280 = 0x20
0x3e3: V281 = ADD 0x20 V98
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S6, V278, V278, V281, V279, V279, V278, V281]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, 0x0, 0x0, V98, V278, V278, V281, V279, V279, V278, V281]

================================

Block 0x3e8
[0x3e8:0x3f2]
---
Predecessors: [0x3d4, 0x3f3]
Successors: [0x3f3, 0x40d]
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0x20
0x3eb DUP4
0x3ec LT
0x3ed ISZERO
0x3ee ISZERO
0x3ef PUSH2 0x40d
0x3f2 JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V282 = 0x20
0x3ec: V283 = LT S2 0x20
0x3ed: V284 = ISZERO V283
0x3ee: V285 = ISZERO V284
0x3ef: V286 = 0x40d
0x3f2: JUMPI 0x40d V285
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, 0x0, 0x0, V98, V278, V278, V281, V279, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, 0x0, 0x0, V98, V278, V278, V281, V279, S2, S1, S0]

================================

Block 0x3f3
[0x3f3:0x40c]
---
Predecessors: [0x3e8]
Successors: [0x3e8]
---
0x3f3 DUP1
0x3f4 MLOAD
0x3f5 DUP3
0x3f6 MSTORE
0x3f7 PUSH1 0x20
0x3f9 DUP3
0x3fa ADD
0x3fb SWAP2
0x3fc POP
0x3fd PUSH1 0x20
0x3ff DUP2
0x400 ADD
0x401 SWAP1
0x402 POP
0x403 PUSH1 0x20
0x405 DUP4
0x406 SUB
0x407 SWAP3
0x408 POP
0x409 PUSH2 0x3e8
0x40c JUMP
---
0x3f4: V287 = M[S0]
0x3f6: M[S1] = V287
0x3f7: V288 = 0x20
0x3fa: V289 = ADD S1 0x20
0x3fd: V290 = 0x20
0x400: V291 = ADD S0 0x20
0x403: V292 = 0x20
0x406: V293 = SUB S2 0x20
0x409: V294 = 0x3e8
0x40c: JUMP 0x3e8
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, 0x0, 0x0, V98, V278, V278, V281, V279, S2, S1, S0]
Stack pops: 3
Stack additions: [V293, V289, V291]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, 0x0, 0x0, V98, V278, V278, V281, V279, V293, V289, V291]

================================

Block 0x40d
[0x40d:0x458]
---
Predecessors: [0x3e8]
Successors: [0x459, 0x4c6]
---
0x40d JUMPDEST
0x40e PUSH1 0x1
0x410 DUP4
0x411 PUSH1 0x20
0x413 SUB
0x414 PUSH2 0x100
0x417 EXP
0x418 SUB
0x419 DUP1
0x41a NOT
0x41b DUP3
0x41c MLOAD
0x41d AND
0x41e DUP2
0x41f DUP5
0x420 MLOAD
0x421 AND
0x422 DUP1
0x423 DUP3
0x424 OR
0x425 DUP6
0x426 MSTORE
0x427 POP
0x428 POP
0x429 POP
0x42a POP
0x42b POP
0x42c POP
0x42d SWAP1
0x42e POP
0x42f ADD
0x430 SWAP2
0x431 POP
0x432 POP
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x20
0x438 ADD
0x439 PUSH1 0x40
0x43b MLOAD
0x43c DUP1
0x43d SWAP2
0x43e SUB
0x43f SWAP1
0x440 SHA3
0x441 PUSH1 0x0
0x443 SWAP1
0x444 SLOAD
0x445 SWAP1
0x446 PUSH2 0x100
0x449 EXP
0x44a SWAP1
0x44b DIV
0x44c PUSH1 0xff
0x44e AND
0x44f PUSH1 0xff
0x451 AND
0x452 EQ
0x453 ISZERO
0x454 ISZERO
0x455 PUSH2 0x4c6
0x458 JUMPI
---
0x40d: JUMPDEST 
0x40e: V295 = 0x1
0x411: V296 = 0x20
0x413: V297 = SUB 0x20 S2
0x414: V298 = 0x100
0x417: V299 = EXP 0x100 V297
0x418: V300 = SUB V299 0x1
0x41a: V301 = NOT V300
0x41c: V302 = M[S0]
0x41d: V303 = AND V302 V301
0x420: V304 = M[S1]
0x421: V305 = AND V304 V300
0x424: V306 = OR V303 V305
0x426: M[S1] = V306
0x42f: V307 = ADD V279 V278
0x435: M[V307] = 0x0
0x436: V308 = 0x20
0x438: V309 = ADD 0x20 V307
0x439: V310 = 0x40
0x43b: V311 = M[0x40]
0x43e: V312 = SUB V309 V311
0x440: V313 = SHA3 V311 V312
0x441: V314 = 0x0
0x444: V315 = S[V313]
0x446: V316 = 0x100
0x449: V317 = EXP 0x100 0x0
0x44b: V318 = DIV V315 0x1
0x44c: V319 = 0xff
0x44e: V320 = AND 0xff V318
0x44f: V321 = 0xff
0x451: V322 = AND 0xff V320
0x452: V323 = EQ V322 0x0
0x453: V324 = ISZERO V323
0x454: V325 = ISZERO V324
0x455: V326 = 0x4c6
0x458: JUMPI 0x4c6 V325
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, 0x0, 0x0, V98, V278, V278, V281, V279, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0]

================================

Block 0x459
[0x459:0x4c5]
---
Predecessors: [0x40d]
Successors: []
---
0x459 PUSH1 0x40
0x45b MLOAD
0x45c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x47d DUP2
0x47e MSTORE
0x47f PUSH1 0x4
0x481 ADD
0x482 DUP1
0x483 DUP1
0x484 PUSH1 0x20
0x486 ADD
0x487 DUP3
0x488 DUP2
0x489 SUB
0x48a DUP3
0x48b MSTORE
0x48c PUSH1 0x10
0x48e DUP2
0x48f MSTORE
0x490 PUSH1 0x20
0x492 ADD
0x493 DUP1
0x494 PUSH32 0x6c6f67696420697320696e7661696c6400000000000000000000000000000000
0x4b5 DUP2
0x4b6 MSTORE
0x4b7 POP
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb SWAP2
0x4bc POP
0x4bd POP
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 DUP1
0x4c2 SWAP2
0x4c3 SUB
0x4c4 SWAP1
0x4c5 REVERT
---
0x459: V327 = 0x40
0x45b: V328 = M[0x40]
0x45c: V329 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x47e: M[V328] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x47f: V330 = 0x4
0x481: V331 = ADD 0x4 V328
0x484: V332 = 0x20
0x486: V333 = ADD 0x20 V331
0x489: V334 = SUB V333 V331
0x48b: M[V331] = V334
0x48c: V335 = 0x10
0x48f: M[V333] = 0x10
0x490: V336 = 0x20
0x492: V337 = ADD 0x20 V333
0x494: V338 = 0x6c6f67696420697320696e7661696c6400000000000000000000000000000000
0x4b6: M[V337] = 0x6c6f67696420697320696e7661696c6400000000000000000000000000000000
0x4b8: V339 = 0x20
0x4ba: V340 = ADD 0x20 V337
0x4be: V341 = 0x40
0x4c0: V342 = M[0x40]
0x4c3: V343 = SUB V340 V342
0x4c5: REVERT V342 V343
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0]

================================

Block 0x4c6
[0x4c6:0x4d9]
---
Predecessors: [0x40d]
Successors: [0x4da]
---
0x4c6 JUMPDEST
0x4c7 DUP7
0x4c8 PUSH1 0x40
0x4ca MLOAD
0x4cb PUSH1 0x20
0x4cd ADD
0x4ce DUP1
0x4cf DUP3
0x4d0 DUP1
0x4d1 MLOAD
0x4d2 SWAP1
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 SWAP1
0x4d7 DUP1
0x4d8 DUP4
0x4d9 DUP4
---
0x4c6: JUMPDEST 
0x4c8: V344 = 0x40
0x4ca: V345 = M[0x40]
0x4cb: V346 = 0x20
0x4cd: V347 = ADD 0x20 V345
0x4d1: V348 = M[V98]
0x4d3: V349 = 0x20
0x4d5: V350 = ADD 0x20 V98
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, V347, V347, V350, V348, V348, V347, V350]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V98, V347, V347, V350, V348, V348, V347, V350]

================================

Block 0x4da
[0x4da:0x4e4]
---
Predecessors: [0x4c6, 0x4e5]
Successors: [0x4e5, 0x4ff]
---
0x4da JUMPDEST
0x4db PUSH1 0x20
0x4dd DUP4
0x4de LT
0x4df ISZERO
0x4e0 ISZERO
0x4e1 PUSH2 0x4ff
0x4e4 JUMPI
---
0x4da: JUMPDEST 
0x4db: V351 = 0x20
0x4de: V352 = LT S2 0x20
0x4df: V353 = ISZERO V352
0x4e0: V354 = ISZERO V353
0x4e1: V355 = 0x4ff
0x4e4: JUMPI 0x4ff V354
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V98, V347, V347, V350, V348, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V98, V347, V347, V350, V348, S2, S1, S0]

================================

Block 0x4e5
[0x4e5:0x4fe]
---
Predecessors: [0x4da]
Successors: [0x4da]
---
0x4e5 DUP1
0x4e6 MLOAD
0x4e7 DUP3
0x4e8 MSTORE
0x4e9 PUSH1 0x20
0x4eb DUP3
0x4ec ADD
0x4ed SWAP2
0x4ee POP
0x4ef PUSH1 0x20
0x4f1 DUP2
0x4f2 ADD
0x4f3 SWAP1
0x4f4 POP
0x4f5 PUSH1 0x20
0x4f7 DUP4
0x4f8 SUB
0x4f9 SWAP3
0x4fa POP
0x4fb PUSH2 0x4da
0x4fe JUMP
---
0x4e6: V356 = M[S0]
0x4e8: M[S1] = V356
0x4e9: V357 = 0x20
0x4ec: V358 = ADD S1 0x20
0x4ef: V359 = 0x20
0x4f2: V360 = ADD S0 0x20
0x4f5: V361 = 0x20
0x4f8: V362 = SUB S2 0x20
0x4fb: V363 = 0x4da
0x4fe: JUMP 0x4da
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V98, V347, V347, V350, V348, S2, S1, S0]
Stack pops: 3
Stack additions: [V362, V358, V360]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V98, V347, V347, V350, V348, V362, V358, V360]

================================

Block 0x4ff
[0x4ff:0x542]
---
Predecessors: [0x4da]
Successors: [0x543]
---
0x4ff JUMPDEST
0x500 PUSH1 0x1
0x502 DUP4
0x503 PUSH1 0x20
0x505 SUB
0x506 PUSH2 0x100
0x509 EXP
0x50a SUB
0x50b DUP1
0x50c NOT
0x50d DUP3
0x50e MLOAD
0x50f AND
0x510 DUP2
0x511 DUP5
0x512 MLOAD
0x513 AND
0x514 DUP1
0x515 DUP3
0x516 OR
0x517 DUP6
0x518 MSTORE
0x519 POP
0x51a POP
0x51b POP
0x51c POP
0x51d POP
0x51e POP
0x51f SWAP1
0x520 POP
0x521 ADD
0x522 SWAP2
0x523 POP
0x524 POP
0x525 PUSH1 0x40
0x527 MLOAD
0x528 PUSH1 0x20
0x52a DUP2
0x52b DUP4
0x52c SUB
0x52d SUB
0x52e DUP2
0x52f MSTORE
0x530 SWAP1
0x531 PUSH1 0x40
0x533 MSTORE
0x534 PUSH1 0x40
0x536 MLOAD
0x537 DUP1
0x538 DUP3
0x539 DUP1
0x53a MLOAD
0x53b SWAP1
0x53c PUSH1 0x20
0x53e ADD
0x53f SWAP1
0x540 DUP1
0x541 DUP4
0x542 DUP4
---
0x4ff: JUMPDEST 
0x500: V364 = 0x1
0x503: V365 = 0x20
0x505: V366 = SUB 0x20 S2
0x506: V367 = 0x100
0x509: V368 = EXP 0x100 V366
0x50a: V369 = SUB V368 0x1
0x50c: V370 = NOT V369
0x50e: V371 = M[S0]
0x50f: V372 = AND V371 V370
0x512: V373 = M[S1]
0x513: V374 = AND V373 V369
0x516: V375 = OR V372 V374
0x518: M[S1] = V375
0x521: V376 = ADD V348 V347
0x525: V377 = 0x40
0x527: V378 = M[0x40]
0x528: V379 = 0x20
0x52c: V380 = SUB V376 V378
0x52d: V381 = SUB V380 0x20
0x52f: M[V378] = V381
0x531: V382 = 0x40
0x533: M[0x40] = V376
0x534: V383 = 0x40
0x536: V384 = M[0x40]
0x53a: V385 = M[V378]
0x53c: V386 = 0x20
0x53e: V387 = ADD 0x20 V378
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V98, V347, V347, V350, V348, S2, S1, S0]
Stack pops: 8
Stack additions: [V378, V384, V384, V387, V385, V385, V384, V387]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V378, V384, V384, V387, V385, V385, V384, V387]

================================

Block 0x543
[0x543:0x54d]
---
Predecessors: [0x4ff, 0x54e]
Successors: [0x54e, 0x568]
---
0x543 JUMPDEST
0x544 PUSH1 0x20
0x546 DUP4
0x547 LT
0x548 ISZERO
0x549 ISZERO
0x54a PUSH2 0x568
0x54d JUMPI
---
0x543: JUMPDEST 
0x544: V388 = 0x20
0x547: V389 = LT S2 0x20
0x548: V390 = ISZERO V389
0x549: V391 = ISZERO V390
0x54a: V392 = 0x568
0x54d: JUMPI 0x568 V391
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V378, V384, V384, V387, V385, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V378, V384, V384, V387, V385, S2, S1, S0]

================================

Block 0x54e
[0x54e:0x567]
---
Predecessors: [0x543]
Successors: [0x543]
---
0x54e DUP1
0x54f MLOAD
0x550 DUP3
0x551 MSTORE
0x552 PUSH1 0x20
0x554 DUP3
0x555 ADD
0x556 SWAP2
0x557 POP
0x558 PUSH1 0x20
0x55a DUP2
0x55b ADD
0x55c SWAP1
0x55d POP
0x55e PUSH1 0x20
0x560 DUP4
0x561 SUB
0x562 SWAP3
0x563 POP
0x564 PUSH2 0x543
0x567 JUMP
---
0x54f: V393 = M[S0]
0x551: M[S1] = V393
0x552: V394 = 0x20
0x555: V395 = ADD S1 0x20
0x558: V396 = 0x20
0x55b: V397 = ADD S0 0x20
0x55e: V398 = 0x20
0x561: V399 = SUB S2 0x20
0x564: V400 = 0x543
0x567: JUMP 0x543
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V378, V384, V384, V387, V385, S2, S1, S0]
Stack pops: 3
Stack additions: [V399, V395, V397]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V378, V384, V384, V387, V385, V399, V395, V397]

================================

Block 0x568
[0x568:0x604]
---
Predecessors: [0x543]
Successors: [0x605, 0x60e]
---
0x568 JUMPDEST
0x569 PUSH1 0x1
0x56b DUP4
0x56c PUSH1 0x20
0x56e SUB
0x56f PUSH2 0x100
0x572 EXP
0x573 SUB
0x574 DUP1
0x575 NOT
0x576 DUP3
0x577 MLOAD
0x578 AND
0x579 DUP2
0x57a DUP5
0x57b MLOAD
0x57c AND
0x57d DUP1
0x57e DUP3
0x57f OR
0x580 DUP6
0x581 MSTORE
0x582 POP
0x583 POP
0x584 POP
0x585 POP
0x586 POP
0x587 POP
0x588 SWAP1
0x589 POP
0x58a ADD
0x58b SWAP2
0x58c POP
0x58d POP
0x58e PUSH1 0x40
0x590 MLOAD
0x591 DUP1
0x592 SWAP2
0x593 SUB
0x594 SWAP1
0x595 SHA3
0x596 SWAP3
0x597 POP
0x598 PUSH1 0x1
0x59a DUP4
0x59b DUP6
0x59c DUP9
0x59d DUP9
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 PUSH1 0x0
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 PUSH1 0x20
0x5a7 ADD
0x5a8 PUSH1 0x40
0x5aa MSTORE
0x5ab PUSH1 0x40
0x5ad MLOAD
0x5ae DUP1
0x5af DUP6
0x5b0 PUSH1 0x0
0x5b2 NOT
0x5b3 AND
0x5b4 PUSH1 0x0
0x5b6 NOT
0x5b7 AND
0x5b8 DUP2
0x5b9 MSTORE
0x5ba PUSH1 0x20
0x5bc ADD
0x5bd DUP5
0x5be PUSH1 0xff
0x5c0 AND
0x5c1 PUSH1 0xff
0x5c3 AND
0x5c4 DUP2
0x5c5 MSTORE
0x5c6 PUSH1 0x20
0x5c8 ADD
0x5c9 DUP4
0x5ca PUSH1 0x0
0x5cc NOT
0x5cd AND
0x5ce PUSH1 0x0
0x5d0 NOT
0x5d1 AND
0x5d2 DUP2
0x5d3 MSTORE
0x5d4 PUSH1 0x20
0x5d6 ADD
0x5d7 DUP3
0x5d8 PUSH1 0x0
0x5da NOT
0x5db AND
0x5dc PUSH1 0x0
0x5de NOT
0x5df AND
0x5e0 DUP2
0x5e1 MSTORE
0x5e2 PUSH1 0x20
0x5e4 ADD
0x5e5 SWAP5
0x5e6 POP
0x5e7 POP
0x5e8 POP
0x5e9 POP
0x5ea POP
0x5eb PUSH1 0x20
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 PUSH1 0x20
0x5f2 DUP2
0x5f3 SUB
0x5f4 SWAP1
0x5f5 DUP1
0x5f6 DUP5
0x5f7 SUB
0x5f8 SWAP1
0x5f9 PUSH1 0x0
0x5fb DUP7
0x5fc GAS
0x5fd CALL
0x5fe ISZERO
0x5ff DUP1
0x600 ISZERO
0x601 PUSH2 0x60e
0x604 JUMPI
---
0x568: JUMPDEST 
0x569: V401 = 0x1
0x56c: V402 = 0x20
0x56e: V403 = SUB 0x20 S2
0x56f: V404 = 0x100
0x572: V405 = EXP 0x100 V403
0x573: V406 = SUB V405 0x1
0x575: V407 = NOT V406
0x577: V408 = M[S0]
0x578: V409 = AND V408 V407
0x57b: V410 = M[S1]
0x57c: V411 = AND V410 V406
0x57f: V412 = OR V409 V411
0x581: M[S1] = V412
0x58a: V413 = ADD V385 V384
0x58e: V414 = 0x40
0x590: V415 = M[0x40]
0x593: V416 = SUB V413 V415
0x595: V417 = SHA3 V415 V416
0x598: V418 = 0x1
0x59e: V419 = 0x40
0x5a0: V420 = M[0x40]
0x5a1: V421 = 0x0
0x5a4: M[V420] = 0x0
0x5a5: V422 = 0x20
0x5a7: V423 = ADD 0x20 V420
0x5a8: V424 = 0x40
0x5aa: M[0x40] = V423
0x5ab: V425 = 0x40
0x5ad: V426 = M[0x40]
0x5b0: V427 = 0x0
0x5b2: V428 = NOT 0x0
0x5b3: V429 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V417
0x5b4: V430 = 0x0
0x5b6: V431 = NOT 0x0
0x5b7: V432 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V429
0x5b9: M[V426] = V432
0x5ba: V433 = 0x20
0x5bc: V434 = ADD 0x20 V426
0x5be: V435 = 0xff
0x5c0: V436 = AND 0xff V118
0x5c1: V437 = 0xff
0x5c3: V438 = AND 0xff V436
0x5c5: M[V434] = V438
0x5c6: V439 = 0x20
0x5c8: V440 = ADD 0x20 V434
0x5ca: V441 = 0x0
0x5cc: V442 = NOT 0x0
0x5cd: V443 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V107
0x5ce: V444 = 0x0
0x5d0: V445 = NOT 0x0
0x5d1: V446 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V443
0x5d3: M[V440] = V446
0x5d4: V447 = 0x20
0x5d6: V448 = ADD 0x20 V440
0x5d8: V449 = 0x0
0x5da: V450 = NOT 0x0
0x5db: V451 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V113
0x5dc: V452 = 0x0
0x5de: V453 = NOT 0x0
0x5df: V454 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V451
0x5e1: M[V448] = V454
0x5e2: V455 = 0x20
0x5e4: V456 = ADD 0x20 V448
0x5eb: V457 = 0x20
0x5ed: V458 = 0x40
0x5ef: V459 = M[0x40]
0x5f0: V460 = 0x20
0x5f3: V461 = SUB V459 0x20
0x5f7: V462 = SUB V456 V459
0x5f9: V463 = 0x0
0x5fc: V464 = GAS
0x5fd: V465 = CALL V464 0x1 0x0 V459 V462 V461 0x20
0x5fe: V466 = ISZERO V465
0x600: V467 = ISZERO V466
0x601: V468 = 0x60e
0x604: JUMPI 0x60e V467
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, 0x0, 0x0, 0x0, V378, V384, V384, V387, V385, S2, S1, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, V417, S9, S8, 0x1, V456, V466]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, 0x0, 0x0, 0x1, V456, V466]

================================

Block 0x605
[0x605:0x60d]
---
Predecessors: [0x568]
Successors: []
---
0x605 RETURNDATASIZE
0x606 PUSH1 0x0
0x608 DUP1
0x609 RETURNDATACOPY
0x60a RETURNDATASIZE
0x60b PUSH1 0x0
0x60d REVERT
---
0x605: V469 = RETURNDATASIZE
0x606: V470 = 0x0
0x609: RETURNDATACOPY 0x0 0x0 V469
0x60a: V471 = RETURNDATASIZE
0x60b: V472 = 0x0
0x60d: REVERT 0x0 V471
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, 0x0, 0x0, 0x1, V456, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, 0x0, 0x0, 0x1, V456, V466]

================================

Block 0x60e
[0x60e:0x671]
---
Predecessors: [0x568]
Successors: [0x672, 0x6df]
---
0x60e JUMPDEST
0x60f POP
0x610 POP
0x611 POP
0x612 PUSH1 0x20
0x614 PUSH1 0x40
0x616 MLOAD
0x617 SUB
0x618 MLOAD
0x619 SWAP2
0x61a POP
0x61b PUSH1 0x1
0x61d PUSH1 0x0
0x61f SWAP1
0x620 SLOAD
0x621 SWAP1
0x622 PUSH2 0x100
0x625 EXP
0x626 SWAP1
0x627 DIV
0x628 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63d AND
0x63e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x653 AND
0x654 DUP3
0x655 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66a AND
0x66b EQ
0x66c ISZERO
0x66d ISZERO
0x66e PUSH2 0x6df
0x671 JUMPI
---
0x60e: JUMPDEST 
0x612: V473 = 0x20
0x614: V474 = 0x40
0x616: V475 = M[0x40]
0x617: V476 = SUB V475 0x20
0x618: V477 = M[V476]
0x61b: V478 = 0x1
0x61d: V479 = 0x0
0x620: V480 = S[0x1]
0x622: V481 = 0x100
0x625: V482 = EXP 0x100 0x0
0x627: V483 = DIV V480 0x1
0x628: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x63d: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x63e: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x653: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x655: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x66a: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x66b: V490 = EQ V489 V487
0x66c: V491 = ISZERO V490
0x66d: V492 = ISZERO V491
0x66e: V493 = 0x6df
0x671: JUMPI 0x6df V492
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, 0x0, 0x0, 0x1, V456, V466]
Stack pops: 5
Stack additions: [V477, S3]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, 0x0]

================================

Block 0x672
[0x672:0x6de]
---
Predecessors: [0x60e]
Successors: []
---
0x672 PUSH1 0x40
0x674 MLOAD
0x675 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x696 DUP2
0x697 MSTORE
0x698 PUSH1 0x4
0x69a ADD
0x69b DUP1
0x69c DUP1
0x69d PUSH1 0x20
0x69f ADD
0x6a0 DUP3
0x6a1 DUP2
0x6a2 SUB
0x6a3 DUP3
0x6a4 MSTORE
0x6a5 PUSH1 0xe
0x6a7 DUP2
0x6a8 MSTORE
0x6a9 PUSH1 0x20
0x6ab ADD
0x6ac DUP1
0x6ad PUSH32 0x696e7661696c64207369676e6572000000000000000000000000000000000000
0x6ce DUP2
0x6cf MSTORE
0x6d0 POP
0x6d1 PUSH1 0x20
0x6d3 ADD
0x6d4 SWAP2
0x6d5 POP
0x6d6 POP
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da DUP1
0x6db SWAP2
0x6dc SUB
0x6dd SWAP1
0x6de REVERT
---
0x672: V494 = 0x40
0x674: V495 = M[0x40]
0x675: V496 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x697: M[V495] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x698: V497 = 0x4
0x69a: V498 = ADD 0x4 V495
0x69d: V499 = 0x20
0x69f: V500 = ADD 0x20 V498
0x6a2: V501 = SUB V500 V498
0x6a4: M[V498] = V501
0x6a5: V502 = 0xe
0x6a8: M[V500] = 0xe
0x6a9: V503 = 0x20
0x6ab: V504 = ADD 0x20 V500
0x6ad: V505 = 0x696e7661696c64207369676e6572000000000000000000000000000000000000
0x6cf: M[V504] = 0x696e7661696c64207369676e6572000000000000000000000000000000000000
0x6d1: V506 = 0x20
0x6d3: V507 = ADD 0x20 V504
0x6d7: V508 = 0x40
0x6d9: V509 = M[0x40]
0x6dc: V510 = SUB V507 V509
0x6de: REVERT V509 V510
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, 0x0]

================================

Block 0x6df
[0x6df:0x6e3]
---
Predecessors: [0x60e]
Successors: [0x6e4]
---
0x6df JUMPDEST
0x6e0 PUSH1 0x0
0x6e2 SWAP1
0x6e3 POP
---
0x6df: JUMPDEST 
0x6e0: V511 = 0x0
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, 0x0]

================================

Block 0x6e4
[0x6e4:0x6ed]
---
Predecessors: [0x6df, 0x761]
Successors: [0x6ee, 0x76f]
---
0x6e4 JUMPDEST
0x6e5 DUP9
0x6e6 MLOAD
0x6e7 DUP2
0x6e8 LT
0x6e9 ISZERO
0x6ea PUSH2 0x76f
0x6ed JUMPI
---
0x6e4: JUMPDEST 
0x6e6: V512 = M[V55]
0x6e8: V513 = LT S0 V512
0x6e9: V514 = ISZERO V513
0x6ea: V515 = 0x76f
0x6ed: JUMPI 0x76f V514
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S0]

================================

Block 0x6ee
[0x6ee:0x6f9]
---
Predecessors: [0x6e4]
Successors: [0x6fa, 0x6fb]
---
0x6ee DUP9
0x6ef DUP2
0x6f0 DUP2
0x6f1 MLOAD
0x6f2 DUP2
0x6f3 LT
0x6f4 ISZERO
0x6f5 ISZERO
0x6f6 PUSH2 0x6fb
0x6f9 JUMPI
---
0x6f1: V516 = M[V55]
0x6f3: V517 = LT S0 V516
0x6f4: V518 = ISZERO V517
0x6f5: V519 = ISZERO V518
0x6f6: V520 = 0x6fb
0x6f9: JUMPI 0x6fb V519
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, S8, S0]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S0, V55, S0]

================================

Block 0x6fa
[0x6fa:0x6fa]
---
Predecessors: [0x6ee]
Successors: []
---
0x6fa INVALID
---
0x6fa: INVALID 
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S2, V55, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S2, V55, S0]

================================

Block 0x6fb
[0x6fb:0x72a]
---
Predecessors: [0x6ee]
Successors: [0x72b, 0x72c]
---
0x6fb JUMPDEST
0x6fc SWAP1
0x6fd PUSH1 0x20
0x6ff ADD
0x700 SWAP1
0x701 PUSH1 0x20
0x703 MUL
0x704 ADD
0x705 MLOAD
0x706 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71b AND
0x71c PUSH2 0x8fc
0x71f DUP10
0x720 DUP4
0x721 DUP2
0x722 MLOAD
0x723 DUP2
0x724 LT
0x725 ISZERO
0x726 ISZERO
0x727 PUSH2 0x72c
0x72a JUMPI
---
0x6fb: JUMPDEST 
0x6fd: V521 = 0x20
0x6ff: V522 = ADD 0x20 V55
0x701: V523 = 0x20
0x703: V524 = MUL 0x20 S0
0x704: V525 = ADD V524 V522
0x705: V526 = M[V525]
0x706: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x71c: V529 = 0x8fc
0x722: V530 = M[V75]
0x724: V531 = LT S2 V530
0x725: V532 = ISZERO V531
0x726: V533 = ISZERO V532
0x727: V534 = 0x72c
0x72a: JUMPI 0x72c V533
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S2, V55, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V528, 0x8fc, S9, S2]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S2, V528, 0x8fc, V75, S2]

================================

Block 0x72b
[0x72b:0x72b]
---
Predecessors: [0x6fb]
Successors: []
---
0x72b INVALID
---
0x72b: INVALID 
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S4, V528, 0x8fc, V75, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S4, V528, 0x8fc, V75, S0]

================================

Block 0x72c
[0x72c:0x757]
---
Predecessors: [0x6fb]
Successors: [0x758, 0x761]
---
0x72c JUMPDEST
0x72d SWAP1
0x72e PUSH1 0x20
0x730 ADD
0x731 SWAP1
0x732 PUSH1 0x20
0x734 MUL
0x735 ADD
0x736 MLOAD
0x737 SWAP1
0x738 DUP2
0x739 ISZERO
0x73a MUL
0x73b SWAP1
0x73c PUSH1 0x40
0x73e MLOAD
0x73f PUSH1 0x0
0x741 PUSH1 0x40
0x743 MLOAD
0x744 DUP1
0x745 DUP4
0x746 SUB
0x747 DUP2
0x748 DUP6
0x749 DUP9
0x74a DUP9
0x74b CALL
0x74c SWAP4
0x74d POP
0x74e POP
0x74f POP
0x750 POP
0x751 ISZERO
0x752 DUP1
0x753 ISZERO
0x754 PUSH2 0x761
0x757 JUMPI
---
0x72c: JUMPDEST 
0x72e: V535 = 0x20
0x730: V536 = ADD 0x20 V75
0x732: V537 = 0x20
0x734: V538 = MUL 0x20 S0
0x735: V539 = ADD V538 V536
0x736: V540 = M[V539]
0x739: V541 = ISZERO V540
0x73a: V542 = MUL V541 0x8fc
0x73c: V543 = 0x40
0x73e: V544 = M[0x40]
0x73f: V545 = 0x0
0x741: V546 = 0x40
0x743: V547 = M[0x40]
0x746: V548 = SUB V544 V547
0x74b: V549 = CALL V542 V528 V540 V547 V548 V547 0x0
0x751: V550 = ISZERO V549
0x753: V551 = ISZERO V550
0x754: V552 = 0x761
0x757: JUMPI 0x761 V551
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S4, V528, 0x8fc, V75, S0]
Stack pops: 4
Stack additions: [V550]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S4, V550]

================================

Block 0x758
[0x758:0x760]
---
Predecessors: [0x72c]
Successors: []
---
0x758 RETURNDATASIZE
0x759 PUSH1 0x0
0x75b DUP1
0x75c RETURNDATACOPY
0x75d RETURNDATASIZE
0x75e PUSH1 0x0
0x760 REVERT
---
0x758: V553 = RETURNDATASIZE
0x759: V554 = 0x0
0x75c: RETURNDATACOPY 0x0 0x0 V553
0x75d: V555 = RETURNDATASIZE
0x75e: V556 = 0x0
0x760: REVERT 0x0 V555
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S1, V550]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S1, V550]

================================

Block 0x761
[0x761:0x76e]
---
Predecessors: [0x72c]
Successors: [0x6e4]
---
0x761 JUMPDEST
0x762 POP
0x763 DUP1
0x764 DUP1
0x765 PUSH1 0x1
0x767 ADD
0x768 SWAP2
0x769 POP
0x76a POP
0x76b PUSH2 0x6e4
0x76e JUMP
---
0x761: JUMPDEST 
0x765: V557 = 0x1
0x767: V558 = ADD 0x1 S1
0x76b: V559 = 0x6e4
0x76e: JUMP 0x6e4
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S1, V550]
Stack pops: 2
Stack additions: [V558]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, V558]

================================

Block 0x76f
[0x76f:0x783]
---
Predecessors: [0x6e4]
Successors: [0x784]
---
0x76f JUMPDEST
0x770 PUSH1 0x1
0x772 PUSH1 0x0
0x774 DUP9
0x775 PUSH1 0x40
0x777 MLOAD
0x778 DUP1
0x779 DUP3
0x77a DUP1
0x77b MLOAD
0x77c SWAP1
0x77d PUSH1 0x20
0x77f ADD
0x780 SWAP1
0x781 DUP1
0x782 DUP4
0x783 DUP4
---
0x76f: JUMPDEST 
0x770: V560 = 0x1
0x772: V561 = 0x0
0x775: V562 = 0x40
0x777: V563 = M[0x40]
0x77b: V564 = M[V98]
0x77d: V565 = 0x20
0x77f: V566 = ADD 0x20 V98
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x1, 0x0, S6, V563, V563, V566, V564, V564, V563, V566]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S0, 0x1, 0x0, V98, V563, V563, V566, V564, V564, V563, V566]

================================

Block 0x784
[0x784:0x78e]
---
Predecessors: [0x76f, 0x78f]
Successors: [0x78f, 0x7a9]
---
0x784 JUMPDEST
0x785 PUSH1 0x20
0x787 DUP4
0x788 LT
0x789 ISZERO
0x78a ISZERO
0x78b PUSH2 0x7a9
0x78e JUMPI
---
0x784: JUMPDEST 
0x785: V567 = 0x20
0x788: V568 = LT S2 0x20
0x789: V569 = ISZERO V568
0x78a: V570 = ISZERO V569
0x78b: V571 = 0x7a9
0x78e: JUMPI 0x7a9 V570
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S10, 0x1, 0x0, V98, V563, V563, V566, V564, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S10, 0x1, 0x0, V98, V563, V563, V566, V564, S2, S1, S0]

================================

Block 0x78f
[0x78f:0x7a8]
---
Predecessors: [0x784]
Successors: [0x784]
---
0x78f DUP1
0x790 MLOAD
0x791 DUP3
0x792 MSTORE
0x793 PUSH1 0x20
0x795 DUP3
0x796 ADD
0x797 SWAP2
0x798 POP
0x799 PUSH1 0x20
0x79b DUP2
0x79c ADD
0x79d SWAP1
0x79e POP
0x79f PUSH1 0x20
0x7a1 DUP4
0x7a2 SUB
0x7a3 SWAP3
0x7a4 POP
0x7a5 PUSH2 0x784
0x7a8 JUMP
---
0x790: V572 = M[S0]
0x792: M[S1] = V572
0x793: V573 = 0x20
0x796: V574 = ADD S1 0x20
0x799: V575 = 0x20
0x79c: V576 = ADD S0 0x20
0x79f: V577 = 0x20
0x7a2: V578 = SUB S2 0x20
0x7a5: V579 = 0x784
0x7a8: JUMP 0x784
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S10, 0x1, 0x0, V98, V563, V563, V566, V564, S2, S1, S0]
Stack pops: 3
Stack additions: [V578, V574, V576]
Exit stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S10, 0x1, 0x0, V98, V563, V563, V566, V564, V578, V574, V576]

================================

Block 0x7a9
[0x7a9:0x7fe]
---
Predecessors: [0x784]
Successors: [0x19e]
---
0x7a9 JUMPDEST
0x7aa PUSH1 0x1
0x7ac DUP4
0x7ad PUSH1 0x20
0x7af SUB
0x7b0 PUSH2 0x100
0x7b3 EXP
0x7b4 SUB
0x7b5 DUP1
0x7b6 NOT
0x7b7 DUP3
0x7b8 MLOAD
0x7b9 AND
0x7ba DUP2
0x7bb DUP5
0x7bc MLOAD
0x7bd AND
0x7be DUP1
0x7bf DUP3
0x7c0 OR
0x7c1 DUP6
0x7c2 MSTORE
0x7c3 POP
0x7c4 POP
0x7c5 POP
0x7c6 POP
0x7c7 POP
0x7c8 POP
0x7c9 SWAP1
0x7ca POP
0x7cb ADD
0x7cc SWAP2
0x7cd POP
0x7ce POP
0x7cf SWAP1
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 PUSH1 0x20
0x7d4 ADD
0x7d5 PUSH1 0x40
0x7d7 MLOAD
0x7d8 DUP1
0x7d9 SWAP2
0x7da SUB
0x7db SWAP1
0x7dc SHA3
0x7dd PUSH1 0x0
0x7df PUSH2 0x100
0x7e2 EXP
0x7e3 DUP2
0x7e4 SLOAD
0x7e5 DUP2
0x7e6 PUSH1 0xff
0x7e8 MUL
0x7e9 NOT
0x7ea AND
0x7eb SWAP1
0x7ec DUP4
0x7ed PUSH1 0xff
0x7ef AND
0x7f0 MUL
0x7f1 OR
0x7f2 SWAP1
0x7f3 SSTORE
0x7f4 POP
0x7f5 POP
0x7f6 POP
0x7f7 POP
0x7f8 POP
0x7f9 POP
0x7fa POP
0x7fb POP
0x7fc POP
0x7fd POP
0x7fe JUMP
---
0x7a9: JUMPDEST 
0x7aa: V580 = 0x1
0x7ad: V581 = 0x20
0x7af: V582 = SUB 0x20 S2
0x7b0: V583 = 0x100
0x7b3: V584 = EXP 0x100 V582
0x7b4: V585 = SUB V584 0x1
0x7b6: V586 = NOT V585
0x7b8: V587 = M[S0]
0x7b9: V588 = AND V587 V586
0x7bc: V589 = M[S1]
0x7bd: V590 = AND V589 V585
0x7c0: V591 = OR V588 V590
0x7c2: M[S1] = V591
0x7cb: V592 = ADD V564 V563
0x7d1: M[V592] = 0x0
0x7d2: V593 = 0x20
0x7d4: V594 = ADD 0x20 V592
0x7d5: V595 = 0x40
0x7d7: V596 = M[0x40]
0x7da: V597 = SUB V594 V596
0x7dc: V598 = SHA3 V596 V597
0x7dd: V599 = 0x0
0x7df: V600 = 0x100
0x7e2: V601 = EXP 0x100 0x0
0x7e4: V602 = S[V598]
0x7e6: V603 = 0xff
0x7e8: V604 = MUL 0xff 0x1
0x7e9: V605 = NOT 0xff
0x7ea: V606 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V602
0x7ed: V607 = 0xff
0x7ef: V608 = AND 0xff 0x1
0x7f0: V609 = MUL 0x1 0x1
0x7f1: V610 = OR 0x1 V606
0x7f3: S[V598] = V610
0x7fe: JUMP 0x19e
---
Entry stack: [V11, 0x19e, V55, V75, V98, V107, V113, V118, V417, V477, S10, 0x1, 0x0, V98, V563, V563, V566, V564, S2, S1, S0]
Stack pops: 20
Stack additions: []
Exit stack: [V11]

================================

Block 0x7ff
[0x7ff:0x810]
---
Predecessors: [0x1ac]
Successors: [0x811, 0x815]
---
0x7ff JUMPDEST
0x800 PUSH1 0x0
0x802 DUP1
0x803 PUSH1 0x0
0x805 DUP1
0x806 PUSH1 0x0
0x808 DUP12
0x809 MLOAD
0x80a GT
0x80b ISZERO
0x80c ISZERO
0x80d PUSH2 0x815
0x810 JUMPI
---
0x7ff: JUMPDEST 
0x800: V611 = 0x0
0x803: V612 = 0x0
0x806: V613 = 0x0
0x809: V614 = M[V143]
0x80a: V615 = GT V614 0x0
0x80b: V616 = ISZERO V615
0x80c: V617 = ISZERO V616
0x80d: V618 = 0x815
0x810: JUMPI 0x815 V617
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x811
[0x811:0x814]
---
Predecessors: [0x7ff]
Successors: []
---
0x811 PUSH1 0x0
0x813 DUP1
0x814 REVERT
---
0x811: V619 = 0x0
0x814: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x815
[0x815:0x828]
---
Predecessors: [0x7ff]
Successors: [0x829]
---
0x815 JUMPDEST
0x816 PUSH1 0x0
0x818 DUP1
0x819 DUP10
0x81a PUSH1 0x40
0x81c MLOAD
0x81d DUP1
0x81e DUP3
0x81f DUP1
0x820 MLOAD
0x821 SWAP1
0x822 PUSH1 0x20
0x824 ADD
0x825 SWAP1
0x826 DUP1
0x827 DUP4
0x828 DUP4
---
0x815: JUMPDEST 
0x816: V620 = 0x0
0x81a: V621 = 0x40
0x81c: V622 = M[0x40]
0x820: V623 = M[V191]
0x822: V624 = 0x20
0x824: V625 = ADD 0x20 V191
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S7, V622, V622, V625, V623, V623, V622, V625]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V191, V622, V622, V625, V623, V623, V622, V625]

================================

Block 0x829
[0x829:0x833]
---
Predecessors: [0x815, 0x834]
Successors: [0x834, 0x84e]
---
0x829 JUMPDEST
0x82a PUSH1 0x20
0x82c DUP4
0x82d LT
0x82e ISZERO
0x82f ISZERO
0x830 PUSH2 0x84e
0x833 JUMPI
---
0x829: JUMPDEST 
0x82a: V626 = 0x20
0x82d: V627 = LT S2 0x20
0x82e: V628 = ISZERO V627
0x82f: V629 = ISZERO V628
0x830: V630 = 0x84e
0x833: JUMPI 0x84e V629
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V191, V622, V622, V625, V623, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V191, V622, V622, V625, V623, S2, S1, S0]

================================

Block 0x834
[0x834:0x84d]
---
Predecessors: [0x829]
Successors: [0x829]
---
0x834 DUP1
0x835 MLOAD
0x836 DUP3
0x837 MSTORE
0x838 PUSH1 0x20
0x83a DUP3
0x83b ADD
0x83c SWAP2
0x83d POP
0x83e PUSH1 0x20
0x840 DUP2
0x841 ADD
0x842 SWAP1
0x843 POP
0x844 PUSH1 0x20
0x846 DUP4
0x847 SUB
0x848 SWAP3
0x849 POP
0x84a PUSH2 0x829
0x84d JUMP
---
0x835: V631 = M[S0]
0x837: M[S1] = V631
0x838: V632 = 0x20
0x83b: V633 = ADD S1 0x20
0x83e: V634 = 0x20
0x841: V635 = ADD S0 0x20
0x844: V636 = 0x20
0x847: V637 = SUB S2 0x20
0x84a: V638 = 0x829
0x84d: JUMP 0x829
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V191, V622, V622, V625, V623, S2, S1, S0]
Stack pops: 3
Stack additions: [V637, V633, V635]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V191, V622, V622, V625, V623, V637, V633, V635]

================================

Block 0x84e
[0x84e:0x899]
---
Predecessors: [0x829]
Successors: [0x89a, 0x907]
---
0x84e JUMPDEST
0x84f PUSH1 0x1
0x851 DUP4
0x852 PUSH1 0x20
0x854 SUB
0x855 PUSH2 0x100
0x858 EXP
0x859 SUB
0x85a DUP1
0x85b NOT
0x85c DUP3
0x85d MLOAD
0x85e AND
0x85f DUP2
0x860 DUP5
0x861 MLOAD
0x862 AND
0x863 DUP1
0x864 DUP3
0x865 OR
0x866 DUP6
0x867 MSTORE
0x868 POP
0x869 POP
0x86a POP
0x86b POP
0x86c POP
0x86d POP
0x86e SWAP1
0x86f POP
0x870 ADD
0x871 SWAP2
0x872 POP
0x873 POP
0x874 SWAP1
0x875 DUP2
0x876 MSTORE
0x877 PUSH1 0x20
0x879 ADD
0x87a PUSH1 0x40
0x87c MLOAD
0x87d DUP1
0x87e SWAP2
0x87f SUB
0x880 SWAP1
0x881 SHA3
0x882 PUSH1 0x0
0x884 SWAP1
0x885 SLOAD
0x886 SWAP1
0x887 PUSH2 0x100
0x88a EXP
0x88b SWAP1
0x88c DIV
0x88d PUSH1 0xff
0x88f AND
0x890 PUSH1 0xff
0x892 AND
0x893 EQ
0x894 ISZERO
0x895 ISZERO
0x896 PUSH2 0x907
0x899 JUMPI
---
0x84e: JUMPDEST 
0x84f: V639 = 0x1
0x852: V640 = 0x20
0x854: V641 = SUB 0x20 S2
0x855: V642 = 0x100
0x858: V643 = EXP 0x100 V641
0x859: V644 = SUB V643 0x1
0x85b: V645 = NOT V644
0x85d: V646 = M[S0]
0x85e: V647 = AND V646 V645
0x861: V648 = M[S1]
0x862: V649 = AND V648 V644
0x865: V650 = OR V647 V649
0x867: M[S1] = V650
0x870: V651 = ADD V623 V622
0x876: M[V651] = 0x0
0x877: V652 = 0x20
0x879: V653 = ADD 0x20 V651
0x87a: V654 = 0x40
0x87c: V655 = M[0x40]
0x87f: V656 = SUB V653 V655
0x881: V657 = SHA3 V655 V656
0x882: V658 = 0x0
0x885: V659 = S[V657]
0x887: V660 = 0x100
0x88a: V661 = EXP 0x100 0x0
0x88c: V662 = DIV V659 0x1
0x88d: V663 = 0xff
0x88f: V664 = AND 0xff V662
0x890: V665 = 0xff
0x892: V666 = AND 0xff V664
0x893: V667 = EQ V666 0x0
0x894: V668 = ISZERO V667
0x895: V669 = ISZERO V668
0x896: V670 = 0x907
0x899: JUMPI 0x907 V669
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V191, V622, V622, V625, V623, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x89a
[0x89a:0x906]
---
Predecessors: [0x84e]
Successors: []
---
0x89a PUSH1 0x40
0x89c MLOAD
0x89d PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8be DUP2
0x8bf MSTORE
0x8c0 PUSH1 0x4
0x8c2 ADD
0x8c3 DUP1
0x8c4 DUP1
0x8c5 PUSH1 0x20
0x8c7 ADD
0x8c8 DUP3
0x8c9 DUP2
0x8ca SUB
0x8cb DUP3
0x8cc MSTORE
0x8cd PUSH1 0x10
0x8cf DUP2
0x8d0 MSTORE
0x8d1 PUSH1 0x20
0x8d3 ADD
0x8d4 DUP1
0x8d5 PUSH32 0x6c6f67696420697320696e7661696c6400000000000000000000000000000000
0x8f6 DUP2
0x8f7 MSTORE
0x8f8 POP
0x8f9 PUSH1 0x20
0x8fb ADD
0x8fc SWAP2
0x8fd POP
0x8fe POP
0x8ff PUSH1 0x40
0x901 MLOAD
0x902 DUP1
0x903 SWAP2
0x904 SUB
0x905 SWAP1
0x906 REVERT
---
0x89a: V671 = 0x40
0x89c: V672 = M[0x40]
0x89d: V673 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8bf: M[V672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8c0: V674 = 0x4
0x8c2: V675 = ADD 0x4 V672
0x8c5: V676 = 0x20
0x8c7: V677 = ADD 0x20 V675
0x8ca: V678 = SUB V677 V675
0x8cc: M[V675] = V678
0x8cd: V679 = 0x10
0x8d0: M[V677] = 0x10
0x8d1: V680 = 0x20
0x8d3: V681 = ADD 0x20 V677
0x8d5: V682 = 0x6c6f67696420697320696e7661696c6400000000000000000000000000000000
0x8f7: M[V681] = 0x6c6f67696420697320696e7661696c6400000000000000000000000000000000
0x8f9: V683 = 0x20
0x8fb: V684 = ADD 0x20 V681
0x8ff: V685 = 0x40
0x901: V686 = M[0x40]
0x904: V687 = SUB V684 V686
0x906: REVERT V686 V687
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x907
[0x907:0x91a]
---
Predecessors: [0x84e]
Successors: [0x91b]
---
0x907 JUMPDEST
0x908 DUP8
0x909 PUSH1 0x40
0x90b MLOAD
0x90c PUSH1 0x20
0x90e ADD
0x90f DUP1
0x910 DUP3
0x911 DUP1
0x912 MLOAD
0x913 SWAP1
0x914 PUSH1 0x20
0x916 ADD
0x917 SWAP1
0x918 DUP1
0x919 DUP4
0x91a DUP4
---
0x907: JUMPDEST 
0x909: V688 = 0x40
0x90b: V689 = M[0x40]
0x90c: V690 = 0x20
0x90e: V691 = ADD 0x20 V689
0x912: V692 = M[V191]
0x914: V693 = 0x20
0x916: V694 = ADD 0x20 V191
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, S7, V691, V691, V694, V692, V692, V691, V694]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V191, V691, V691, V694, V692, V692, V691, V694]

================================

Block 0x91b
[0x91b:0x925]
---
Predecessors: [0x907, 0x926]
Successors: [0x926, 0x940]
---
0x91b JUMPDEST
0x91c PUSH1 0x20
0x91e DUP4
0x91f LT
0x920 ISZERO
0x921 ISZERO
0x922 PUSH2 0x940
0x925 JUMPI
---
0x91b: JUMPDEST 
0x91c: V695 = 0x20
0x91f: V696 = LT S2 0x20
0x920: V697 = ISZERO V696
0x921: V698 = ISZERO V697
0x922: V699 = 0x940
0x925: JUMPI 0x940 V698
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V191, V691, V691, V694, V692, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V191, V691, V691, V694, V692, S2, S1, S0]

================================

Block 0x926
[0x926:0x93f]
---
Predecessors: [0x91b]
Successors: [0x91b]
---
0x926 DUP1
0x927 MLOAD
0x928 DUP3
0x929 MSTORE
0x92a PUSH1 0x20
0x92c DUP3
0x92d ADD
0x92e SWAP2
0x92f POP
0x930 PUSH1 0x20
0x932 DUP2
0x933 ADD
0x934 SWAP1
0x935 POP
0x936 PUSH1 0x20
0x938 DUP4
0x939 SUB
0x93a SWAP3
0x93b POP
0x93c PUSH2 0x91b
0x93f JUMP
---
0x927: V700 = M[S0]
0x929: M[S1] = V700
0x92a: V701 = 0x20
0x92d: V702 = ADD S1 0x20
0x930: V703 = 0x20
0x933: V704 = ADD S0 0x20
0x936: V705 = 0x20
0x939: V706 = SUB S2 0x20
0x93c: V707 = 0x91b
0x93f: JUMP 0x91b
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V191, V691, V691, V694, V692, S2, S1, S0]
Stack pops: 3
Stack additions: [V706, V702, V704]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V191, V691, V691, V694, V692, V706, V702, V704]

================================

Block 0x940
[0x940:0x983]
---
Predecessors: [0x91b]
Successors: [0x984]
---
0x940 JUMPDEST
0x941 PUSH1 0x1
0x943 DUP4
0x944 PUSH1 0x20
0x946 SUB
0x947 PUSH2 0x100
0x94a EXP
0x94b SUB
0x94c DUP1
0x94d NOT
0x94e DUP3
0x94f MLOAD
0x950 AND
0x951 DUP2
0x952 DUP5
0x953 MLOAD
0x954 AND
0x955 DUP1
0x956 DUP3
0x957 OR
0x958 DUP6
0x959 MSTORE
0x95a POP
0x95b POP
0x95c POP
0x95d POP
0x95e POP
0x95f POP
0x960 SWAP1
0x961 POP
0x962 ADD
0x963 SWAP2
0x964 POP
0x965 POP
0x966 PUSH1 0x40
0x968 MLOAD
0x969 PUSH1 0x20
0x96b DUP2
0x96c DUP4
0x96d SUB
0x96e SUB
0x96f DUP2
0x970 MSTORE
0x971 SWAP1
0x972 PUSH1 0x40
0x974 MSTORE
0x975 PUSH1 0x40
0x977 MLOAD
0x978 DUP1
0x979 DUP3
0x97a DUP1
0x97b MLOAD
0x97c SWAP1
0x97d PUSH1 0x20
0x97f ADD
0x980 SWAP1
0x981 DUP1
0x982 DUP4
0x983 DUP4
---
0x940: JUMPDEST 
0x941: V708 = 0x1
0x944: V709 = 0x20
0x946: V710 = SUB 0x20 S2
0x947: V711 = 0x100
0x94a: V712 = EXP 0x100 V710
0x94b: V713 = SUB V712 0x1
0x94d: V714 = NOT V713
0x94f: V715 = M[S0]
0x950: V716 = AND V715 V714
0x953: V717 = M[S1]
0x954: V718 = AND V717 V713
0x957: V719 = OR V716 V718
0x959: M[S1] = V719
0x962: V720 = ADD V692 V691
0x966: V721 = 0x40
0x968: V722 = M[0x40]
0x969: V723 = 0x20
0x96d: V724 = SUB V720 V722
0x96e: V725 = SUB V724 0x20
0x970: M[V722] = V725
0x972: V726 = 0x40
0x974: M[0x40] = V720
0x975: V727 = 0x40
0x977: V728 = M[0x40]
0x97b: V729 = M[V722]
0x97d: V730 = 0x20
0x97f: V731 = ADD 0x20 V722
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V191, V691, V691, V694, V692, S2, S1, S0]
Stack pops: 8
Stack additions: [V722, V728, V728, V731, V729, V729, V728, V731]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V722, V728, V728, V731, V729, V729, V728, V731]

================================

Block 0x984
[0x984:0x98e]
---
Predecessors: [0x940, 0x98f]
Successors: [0x98f, 0x9a9]
---
0x984 JUMPDEST
0x985 PUSH1 0x20
0x987 DUP4
0x988 LT
0x989 ISZERO
0x98a ISZERO
0x98b PUSH2 0x9a9
0x98e JUMPI
---
0x984: JUMPDEST 
0x985: V732 = 0x20
0x988: V733 = LT S2 0x20
0x989: V734 = ISZERO V733
0x98a: V735 = ISZERO V734
0x98b: V736 = 0x9a9
0x98e: JUMPI 0x9a9 V735
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V722, V728, V728, V731, V729, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V722, V728, V728, V731, V729, S2, S1, S0]

================================

Block 0x98f
[0x98f:0x9a8]
---
Predecessors: [0x984]
Successors: [0x984]
---
0x98f DUP1
0x990 MLOAD
0x991 DUP3
0x992 MSTORE
0x993 PUSH1 0x20
0x995 DUP3
0x996 ADD
0x997 SWAP2
0x998 POP
0x999 PUSH1 0x20
0x99b DUP2
0x99c ADD
0x99d SWAP1
0x99e POP
0x99f PUSH1 0x20
0x9a1 DUP4
0x9a2 SUB
0x9a3 SWAP3
0x9a4 POP
0x9a5 PUSH2 0x984
0x9a8 JUMP
---
0x990: V737 = M[S0]
0x992: M[S1] = V737
0x993: V738 = 0x20
0x996: V739 = ADD S1 0x20
0x999: V740 = 0x20
0x99c: V741 = ADD S0 0x20
0x99f: V742 = 0x20
0x9a2: V743 = SUB S2 0x20
0x9a5: V744 = 0x984
0x9a8: JUMP 0x984
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V722, V728, V728, V731, V729, S2, S1, S0]
Stack pops: 3
Stack additions: [V743, V739, V741]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V722, V728, V728, V731, V729, V743, V739, V741]

================================

Block 0x9a9
[0x9a9:0xa45]
---
Predecessors: [0x984]
Successors: [0xa46, 0xa4f]
---
0x9a9 JUMPDEST
0x9aa PUSH1 0x1
0x9ac DUP4
0x9ad PUSH1 0x20
0x9af SUB
0x9b0 PUSH2 0x100
0x9b3 EXP
0x9b4 SUB
0x9b5 DUP1
0x9b6 NOT
0x9b7 DUP3
0x9b8 MLOAD
0x9b9 AND
0x9ba DUP2
0x9bb DUP5
0x9bc MLOAD
0x9bd AND
0x9be DUP1
0x9bf DUP3
0x9c0 OR
0x9c1 DUP6
0x9c2 MSTORE
0x9c3 POP
0x9c4 POP
0x9c5 POP
0x9c6 POP
0x9c7 POP
0x9c8 POP
0x9c9 SWAP1
0x9ca POP
0x9cb ADD
0x9cc SWAP2
0x9cd POP
0x9ce POP
0x9cf PUSH1 0x40
0x9d1 MLOAD
0x9d2 DUP1
0x9d3 SWAP2
0x9d4 SUB
0x9d5 SWAP1
0x9d6 SHA3
0x9d7 SWAP4
0x9d8 POP
0x9d9 PUSH1 0x1
0x9db DUP5
0x9dc DUP7
0x9dd DUP10
0x9de DUP10
0x9df PUSH1 0x40
0x9e1 MLOAD
0x9e2 PUSH1 0x0
0x9e4 DUP2
0x9e5 MSTORE
0x9e6 PUSH1 0x20
0x9e8 ADD
0x9e9 PUSH1 0x40
0x9eb MSTORE
0x9ec PUSH1 0x40
0x9ee MLOAD
0x9ef DUP1
0x9f0 DUP6
0x9f1 PUSH1 0x0
0x9f3 NOT
0x9f4 AND
0x9f5 PUSH1 0x0
0x9f7 NOT
0x9f8 AND
0x9f9 DUP2
0x9fa MSTORE
0x9fb PUSH1 0x20
0x9fd ADD
0x9fe DUP5
0x9ff PUSH1 0xff
0xa01 AND
0xa02 PUSH1 0xff
0xa04 AND
0xa05 DUP2
0xa06 MSTORE
0xa07 PUSH1 0x20
0xa09 ADD
0xa0a DUP4
0xa0b PUSH1 0x0
0xa0d NOT
0xa0e AND
0xa0f PUSH1 0x0
0xa11 NOT
0xa12 AND
0xa13 DUP2
0xa14 MSTORE
0xa15 PUSH1 0x20
0xa17 ADD
0xa18 DUP3
0xa19 PUSH1 0x0
0xa1b NOT
0xa1c AND
0xa1d PUSH1 0x0
0xa1f NOT
0xa20 AND
0xa21 DUP2
0xa22 MSTORE
0xa23 PUSH1 0x20
0xa25 ADD
0xa26 SWAP5
0xa27 POP
0xa28 POP
0xa29 POP
0xa2a POP
0xa2b POP
0xa2c PUSH1 0x20
0xa2e PUSH1 0x40
0xa30 MLOAD
0xa31 PUSH1 0x20
0xa33 DUP2
0xa34 SUB
0xa35 SWAP1
0xa36 DUP1
0xa37 DUP5
0xa38 SUB
0xa39 SWAP1
0xa3a PUSH1 0x0
0xa3c DUP7
0xa3d GAS
0xa3e CALL
0xa3f ISZERO
0xa40 DUP1
0xa41 ISZERO
0xa42 PUSH2 0xa4f
0xa45 JUMPI
---
0x9a9: JUMPDEST 
0x9aa: V745 = 0x1
0x9ad: V746 = 0x20
0x9af: V747 = SUB 0x20 S2
0x9b0: V748 = 0x100
0x9b3: V749 = EXP 0x100 V747
0x9b4: V750 = SUB V749 0x1
0x9b6: V751 = NOT V750
0x9b8: V752 = M[S0]
0x9b9: V753 = AND V752 V751
0x9bc: V754 = M[S1]
0x9bd: V755 = AND V754 V750
0x9c0: V756 = OR V753 V755
0x9c2: M[S1] = V756
0x9cb: V757 = ADD V729 V728
0x9cf: V758 = 0x40
0x9d1: V759 = M[0x40]
0x9d4: V760 = SUB V757 V759
0x9d6: V761 = SHA3 V759 V760
0x9d9: V762 = 0x1
0x9df: V763 = 0x40
0x9e1: V764 = M[0x40]
0x9e2: V765 = 0x0
0x9e5: M[V764] = 0x0
0x9e6: V766 = 0x20
0x9e8: V767 = ADD 0x20 V764
0x9e9: V768 = 0x40
0x9eb: M[0x40] = V767
0x9ec: V769 = 0x40
0x9ee: V770 = M[0x40]
0x9f1: V771 = 0x0
0x9f3: V772 = NOT 0x0
0x9f4: V773 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V761
0x9f5: V774 = 0x0
0x9f7: V775 = NOT 0x0
0x9f8: V776 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V773
0x9fa: M[V770] = V776
0x9fb: V777 = 0x20
0x9fd: V778 = ADD 0x20 V770
0x9ff: V779 = 0xff
0xa01: V780 = AND 0xff V211
0xa02: V781 = 0xff
0xa04: V782 = AND 0xff V780
0xa06: M[V778] = V782
0xa07: V783 = 0x20
0xa09: V784 = ADD 0x20 V778
0xa0b: V785 = 0x0
0xa0d: V786 = NOT 0x0
0xa0e: V787 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V200
0xa0f: V788 = 0x0
0xa11: V789 = NOT 0x0
0xa12: V790 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V787
0xa14: M[V784] = V790
0xa15: V791 = 0x20
0xa17: V792 = ADD 0x20 V784
0xa19: V793 = 0x0
0xa1b: V794 = NOT 0x0
0xa1c: V795 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V206
0xa1d: V796 = 0x0
0xa1f: V797 = NOT 0x0
0xa20: V798 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V795
0xa22: M[V792] = V798
0xa23: V799 = 0x20
0xa25: V800 = ADD 0x20 V792
0xa2c: V801 = 0x20
0xa2e: V802 = 0x40
0xa30: V803 = M[0x40]
0xa31: V804 = 0x20
0xa34: V805 = SUB V803 0x20
0xa38: V806 = SUB V800 V803
0xa3a: V807 = 0x0
0xa3d: V808 = GAS
0xa3e: V809 = CALL V808 0x1 0x0 V803 V806 V805 0x20
0xa3f: V810 = ISZERO V809
0xa41: V811 = ISZERO V810
0xa42: V812 = 0xa4f
0xa45: JUMPI 0xa4f V811
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, 0x0, 0x0, 0x0, 0x0, V722, V728, V728, V731, V729, S2, S1, S0]
Stack pops: 15
Stack additions: [S14, S13, S12, V761, S10, S9, S8, 0x1, V800, V810]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, 0x0, 0x0, 0x0, 0x1, V800, V810]

================================

Block 0xa46
[0xa46:0xa4e]
---
Predecessors: [0x9a9]
Successors: []
---
0xa46 RETURNDATASIZE
0xa47 PUSH1 0x0
0xa49 DUP1
0xa4a RETURNDATACOPY
0xa4b RETURNDATASIZE
0xa4c PUSH1 0x0
0xa4e REVERT
---
0xa46: V813 = RETURNDATASIZE
0xa47: V814 = 0x0
0xa4a: RETURNDATACOPY 0x0 0x0 V813
0xa4b: V815 = RETURNDATASIZE
0xa4c: V816 = 0x0
0xa4e: REVERT 0x0 V815
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, 0x0, 0x0, 0x0, 0x1, V800, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, 0x0, 0x0, 0x0, 0x1, V800, V810]

================================

Block 0xa4f
[0xa4f:0xab2]
---
Predecessors: [0x9a9]
Successors: [0xab3, 0xb20]
---
0xa4f JUMPDEST
0xa50 POP
0xa51 POP
0xa52 POP
0xa53 PUSH1 0x20
0xa55 PUSH1 0x40
0xa57 MLOAD
0xa58 SUB
0xa59 MLOAD
0xa5a SWAP3
0xa5b POP
0xa5c PUSH1 0x1
0xa5e PUSH1 0x0
0xa60 SWAP1
0xa61 SLOAD
0xa62 SWAP1
0xa63 PUSH2 0x100
0xa66 EXP
0xa67 SWAP1
0xa68 DIV
0xa69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7e AND
0xa7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa94 AND
0xa95 DUP4
0xa96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaab AND
0xaac EQ
0xaad ISZERO
0xaae ISZERO
0xaaf PUSH2 0xb20
0xab2 JUMPI
---
0xa4f: JUMPDEST 
0xa53: V817 = 0x20
0xa55: V818 = 0x40
0xa57: V819 = M[0x40]
0xa58: V820 = SUB V819 0x20
0xa59: V821 = M[V820]
0xa5c: V822 = 0x1
0xa5e: V823 = 0x0
0xa61: V824 = S[0x1]
0xa63: V825 = 0x100
0xa66: V826 = EXP 0x100 0x0
0xa68: V827 = DIV V824 0x1
0xa69: V828 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7e: V829 = AND 0xffffffffffffffffffffffffffffffffffffffff V827
0xa7f: V830 = 0xffffffffffffffffffffffffffffffffffffffff
0xa94: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V829
0xa96: V832 = 0xffffffffffffffffffffffffffffffffffffffff
0xaab: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0xaac: V834 = EQ V833 V831
0xaad: V835 = ISZERO V834
0xaae: V836 = ISZERO V835
0xaaf: V837 = 0xb20
0xab2: JUMPI 0xb20 V836
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, 0x0, 0x0, 0x0, 0x1, V800, V810]
Stack pops: 6
Stack additions: [V821, S4, S3]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, 0x0, 0x0]

================================

Block 0xab3
[0xab3:0xb1f]
---
Predecessors: [0xa4f]
Successors: []
---
0xab3 PUSH1 0x40
0xab5 MLOAD
0xab6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xad7 DUP2
0xad8 MSTORE
0xad9 PUSH1 0x4
0xadb ADD
0xadc DUP1
0xadd DUP1
0xade PUSH1 0x20
0xae0 ADD
0xae1 DUP3
0xae2 DUP2
0xae3 SUB
0xae4 DUP3
0xae5 MSTORE
0xae6 PUSH1 0xe
0xae8 DUP2
0xae9 MSTORE
0xaea PUSH1 0x20
0xaec ADD
0xaed DUP1
0xaee PUSH32 0x696e7661696c64207369676e6572000000000000000000000000000000000000
0xb0f DUP2
0xb10 MSTORE
0xb11 POP
0xb12 PUSH1 0x20
0xb14 ADD
0xb15 SWAP2
0xb16 POP
0xb17 POP
0xb18 PUSH1 0x40
0xb1a MLOAD
0xb1b DUP1
0xb1c SWAP2
0xb1d SUB
0xb1e SWAP1
0xb1f REVERT
---
0xab3: V838 = 0x40
0xab5: V839 = M[0x40]
0xab6: V840 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xad8: M[V839] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xad9: V841 = 0x4
0xadb: V842 = ADD 0x4 V839
0xade: V843 = 0x20
0xae0: V844 = ADD 0x20 V842
0xae3: V845 = SUB V844 V842
0xae5: M[V842] = V845
0xae6: V846 = 0xe
0xae9: M[V844] = 0xe
0xaea: V847 = 0x20
0xaec: V848 = ADD 0x20 V844
0xaee: V849 = 0x696e7661696c64207369676e6572000000000000000000000000000000000000
0xb10: M[V848] = 0x696e7661696c64207369676e6572000000000000000000000000000000000000
0xb12: V850 = 0x20
0xb14: V851 = ADD 0x20 V848
0xb18: V852 = 0x40
0xb1a: V853 = M[0x40]
0xb1d: V854 = SUB V851 V853
0xb1f: REVERT V853 V854
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, 0x0, 0x0]

================================

Block 0xb20
[0xb20:0xb27]
---
Predecessors: [0xa4f]
Successors: [0xb28]
---
0xb20 JUMPDEST
0xb21 DUP9
0xb22 SWAP2
0xb23 POP
0xb24 PUSH1 0x0
0xb26 SWAP1
0xb27 POP
---
0xb20: JUMPDEST 
0xb24: V855 = 0x0
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S8, 0x0]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, 0x0]

================================

Block 0xb28
[0xb28:0xb31]
---
Predecessors: [0xb20, 0xc2c]
Successors: [0xb32, 0xc4b]
---
0xb28 JUMPDEST
0xb29 DUP11
0xb2a MLOAD
0xb2b DUP2
0xb2c LT
0xb2d ISZERO
0xb2e PUSH2 0xc4b
0xb31 JUMPI
---
0xb28: JUMPDEST 
0xb2a: V856 = M[V143]
0xb2c: V857 = LT S0 V856
0xb2d: V858 = ISZERO V857
0xb2e: V859 = 0xc4b
0xb31: JUMPI 0xc4b V858
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S0]

================================

Block 0xb32
[0xb32:0xb59]
---
Predecessors: [0xb28]
Successors: [0xb5a, 0xb5b]
---
0xb32 DUP2
0xb33 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb48 AND
0xb49 PUSH4 0xa9059cbb
0xb4e DUP13
0xb4f DUP4
0xb50 DUP2
0xb51 MLOAD
0xb52 DUP2
0xb53 LT
0xb54 ISZERO
0xb55 ISZERO
0xb56 PUSH2 0xb5b
0xb59 JUMPI
---
0xb33: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xb48: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0xb49: V862 = 0xa9059cbb
0xb51: V863 = M[V143]
0xb53: V864 = LT S0 V863
0xb54: V865 = ISZERO V864
0xb55: V866 = ISZERO V865
0xb56: V867 = 0xb5b
0xb59: JUMPI 0xb5b V866
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V861, 0xa9059cbb, S10, S0]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S0, V861, 0xa9059cbb, V143, S0]

================================

Block 0xb5a
[0xb5a:0xb5a]
---
Predecessors: [0xb32]
Successors: []
---
0xb5a INVALID
---
0xb5a: INVALID 
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S4, V861, 0xa9059cbb, V143, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S4, V861, 0xa9059cbb, V143, S0]

================================

Block 0xb5b
[0xb5b:0xb71]
---
Predecessors: [0xb32]
Successors: [0xb72, 0xb73]
---
0xb5b JUMPDEST
0xb5c SWAP1
0xb5d PUSH1 0x20
0xb5f ADD
0xb60 SWAP1
0xb61 PUSH1 0x20
0xb63 MUL
0xb64 ADD
0xb65 MLOAD
0xb66 DUP13
0xb67 DUP5
0xb68 DUP2
0xb69 MLOAD
0xb6a DUP2
0xb6b LT
0xb6c ISZERO
0xb6d ISZERO
0xb6e PUSH2 0xb73
0xb71 JUMPI
---
0xb5b: JUMPDEST 
0xb5d: V868 = 0x20
0xb5f: V869 = ADD 0x20 V143
0xb61: V870 = 0x20
0xb63: V871 = MUL 0x20 S0
0xb64: V872 = ADD V871 V869
0xb65: V873 = M[V872]
0xb69: V874 = M[V163]
0xb6b: V875 = LT S4 V874
0xb6c: V876 = ISZERO V875
0xb6d: V877 = ISZERO V876
0xb6e: V878 = 0xb73
0xb71: JUMPI 0xb73 V877
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S4, V861, 0xa9059cbb, V143, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V873, S13, S4]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S4, V861, 0xa9059cbb, V873, V163, S4]

================================

Block 0xb72
[0xb72:0xb72]
---
Predecessors: [0xb5b]
Successors: []
---
0xb72 INVALID
---
0xb72: INVALID 
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S5, V861, 0xa9059cbb, V873, V163, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S5, V861, 0xa9059cbb, V873, V163, S0]

================================

Block 0xb73
[0xb73:0xbfd]
---
Predecessors: [0xb5b]
Successors: [0xbfe, 0xc02]
---
0xb73 JUMPDEST
0xb74 SWAP1
0xb75 PUSH1 0x20
0xb77 ADD
0xb78 SWAP1
0xb79 PUSH1 0x20
0xb7b MUL
0xb7c ADD
0xb7d MLOAD
0xb7e PUSH1 0x40
0xb80 MLOAD
0xb81 DUP4
0xb82 PUSH4 0xffffffff
0xb87 AND
0xb88 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xba6 MUL
0xba7 DUP2
0xba8 MSTORE
0xba9 PUSH1 0x4
0xbab ADD
0xbac DUP1
0xbad DUP4
0xbae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc3 AND
0xbc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd9 AND
0xbda DUP2
0xbdb MSTORE
0xbdc PUSH1 0x20
0xbde ADD
0xbdf DUP3
0xbe0 DUP2
0xbe1 MSTORE
0xbe2 PUSH1 0x20
0xbe4 ADD
0xbe5 SWAP3
0xbe6 POP
0xbe7 POP
0xbe8 POP
0xbe9 PUSH1 0x20
0xbeb PUSH1 0x40
0xbed MLOAD
0xbee DUP1
0xbef DUP4
0xbf0 SUB
0xbf1 DUP2
0xbf2 PUSH1 0x0
0xbf4 DUP8
0xbf5 DUP1
0xbf6 EXTCODESIZE
0xbf7 ISZERO
0xbf8 DUP1
0xbf9 ISZERO
0xbfa PUSH2 0xc02
0xbfd JUMPI
---
0xb73: JUMPDEST 
0xb75: V879 = 0x20
0xb77: V880 = ADD 0x20 V163
0xb79: V881 = 0x20
0xb7b: V882 = MUL 0x20 S0
0xb7c: V883 = ADD V882 V880
0xb7d: V884 = M[V883]
0xb7e: V885 = 0x40
0xb80: V886 = M[0x40]
0xb82: V887 = 0xffffffff
0xb87: V888 = AND 0xffffffff 0xa9059cbb
0xb88: V889 = 0x100000000000000000000000000000000000000000000000000000000
0xba6: V890 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xba8: M[V886] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xba9: V891 = 0x4
0xbab: V892 = ADD 0x4 V886
0xbae: V893 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc3: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xbc4: V895 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd9: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V894
0xbdb: M[V892] = V896
0xbdc: V897 = 0x20
0xbde: V898 = ADD 0x20 V892
0xbe1: M[V898] = V884
0xbe2: V899 = 0x20
0xbe4: V900 = ADD 0x20 V898
0xbe9: V901 = 0x20
0xbeb: V902 = 0x40
0xbed: V903 = M[0x40]
0xbf0: V904 = SUB V900 V903
0xbf2: V905 = 0x0
0xbf6: V906 = EXTCODESIZE V861
0xbf7: V907 = ISZERO V906
0xbf9: V908 = ISZERO V907
0xbfa: V909 = 0xc02
0xbfd: JUMPI 0xc02 V908
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S5, V861, 0xa9059cbb, V873, V163, S0]
Stack pops: 5
Stack additions: [S4, S3, V900, 0x20, V903, V904, V903, 0x0, S4, V907]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S5, V861, 0xa9059cbb, V900, 0x20, V903, V904, V903, 0x0, V861, V907]

================================

Block 0xbfe
[0xbfe:0xc01]
---
Predecessors: [0xb73]
Successors: []
---
0xbfe PUSH1 0x0
0xc00 DUP1
0xc01 REVERT
---
0xbfe: V910 = 0x0
0xc01: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, V861, 0xa9059cbb, V900, 0x20, V903, V904, V903, 0x0, V861, V907]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, V861, 0xa9059cbb, V900, 0x20, V903, V904, V903, 0x0, V861, V907]

================================

Block 0xc02
[0xc02:0xc0c]
---
Predecessors: [0xb73]
Successors: [0xc0d, 0xc16]
---
0xc02 JUMPDEST
0xc03 POP
0xc04 GAS
0xc05 CALL
0xc06 ISZERO
0xc07 DUP1
0xc08 ISZERO
0xc09 PUSH2 0xc16
0xc0c JUMPI
---
0xc02: JUMPDEST 
0xc04: V911 = GAS
0xc05: V912 = CALL V911 V861 0x0 V903 V904 V903 0x20
0xc06: V913 = ISZERO V912
0xc08: V914 = ISZERO V913
0xc09: V915 = 0xc16
0xc0c: JUMPI 0xc16 V914
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, V861, 0xa9059cbb, V900, 0x20, V903, V904, V903, 0x0, V861, V907]
Stack pops: 7
Stack additions: [V913]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, V861, 0xa9059cbb, V900, V913]

================================

Block 0xc0d
[0xc0d:0xc15]
---
Predecessors: [0xc02]
Successors: []
---
0xc0d RETURNDATASIZE
0xc0e PUSH1 0x0
0xc10 DUP1
0xc11 RETURNDATACOPY
0xc12 RETURNDATASIZE
0xc13 PUSH1 0x0
0xc15 REVERT
---
0xc0d: V916 = RETURNDATASIZE
0xc0e: V917 = 0x0
0xc11: RETURNDATACOPY 0x0 0x0 V916
0xc12: V918 = RETURNDATASIZE
0xc13: V919 = 0x0
0xc15: REVERT 0x0 V918
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S4, V861, 0xa9059cbb, V900, V913]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S4, V861, 0xa9059cbb, V900, V913]

================================

Block 0xc16
[0xc16:0xc27]
---
Predecessors: [0xc02]
Successors: [0xc28, 0xc2c]
---
0xc16 JUMPDEST
0xc17 POP
0xc18 POP
0xc19 POP
0xc1a POP
0xc1b PUSH1 0x40
0xc1d MLOAD
0xc1e RETURNDATASIZE
0xc1f PUSH1 0x20
0xc21 DUP2
0xc22 LT
0xc23 ISZERO
0xc24 PUSH2 0xc2c
0xc27 JUMPI
---
0xc16: JUMPDEST 
0xc1b: V920 = 0x40
0xc1d: V921 = M[0x40]
0xc1e: V922 = RETURNDATASIZE
0xc1f: V923 = 0x20
0xc22: V924 = LT V922 0x20
0xc23: V925 = ISZERO V924
0xc24: V926 = 0xc2c
0xc27: JUMPI 0xc2c V925
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S4, V861, 0xa9059cbb, V900, V913]
Stack pops: 4
Stack additions: [V921, V922]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S4, V921, V922]

================================

Block 0xc28
[0xc28:0xc2b]
---
Predecessors: [0xc16]
Successors: []
---
0xc28 PUSH1 0x0
0xc2a DUP1
0xc2b REVERT
---
0xc28: V927 = 0x0
0xc2b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S2, V921, V922]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S2, V921, V922]

================================

Block 0xc2c
[0xc2c:0xc4a]
---
Predecessors: [0xc16]
Successors: [0xb28]
---
0xc2c JUMPDEST
0xc2d DUP2
0xc2e ADD
0xc2f SWAP1
0xc30 DUP1
0xc31 DUP1
0xc32 MLOAD
0xc33 SWAP1
0xc34 PUSH1 0x20
0xc36 ADD
0xc37 SWAP1
0xc38 SWAP3
0xc39 SWAP2
0xc3a SWAP1
0xc3b POP
0xc3c POP
0xc3d POP
0xc3e POP
0xc3f DUP1
0xc40 DUP1
0xc41 PUSH1 0x1
0xc43 ADD
0xc44 SWAP2
0xc45 POP
0xc46 POP
0xc47 PUSH2 0xb28
0xc4a JUMP
---
0xc2c: JUMPDEST 
0xc2e: V928 = ADD V921 V922
0xc32: V929 = M[V921]
0xc34: V930 = 0x20
0xc36: V931 = ADD 0x20 V921
0xc41: V932 = 0x1
0xc43: V933 = ADD 0x1 S2
0xc47: V934 = 0xb28
0xc4a: JUMP 0xb28
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S2, V921, V922]
Stack pops: 3
Stack additions: [V933]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, V933]

================================

Block 0xc4b
[0xc4b:0xc5f]
---
Predecessors: [0xb28]
Successors: [0xc60]
---
0xc4b JUMPDEST
0xc4c PUSH1 0x1
0xc4e PUSH1 0x0
0xc50 DUP10
0xc51 PUSH1 0x40
0xc53 MLOAD
0xc54 DUP1
0xc55 DUP3
0xc56 DUP1
0xc57 MLOAD
0xc58 SWAP1
0xc59 PUSH1 0x20
0xc5b ADD
0xc5c SWAP1
0xc5d DUP1
0xc5e DUP4
0xc5f DUP4
---
0xc4b: JUMPDEST 
0xc4c: V935 = 0x1
0xc4e: V936 = 0x0
0xc51: V937 = 0x40
0xc53: V938 = M[0x40]
0xc57: V939 = M[V191]
0xc59: V940 = 0x20
0xc5b: V941 = ADD 0x20 V191
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x1, 0x0, S7, V938, V938, V941, V939, V939, V938, V941]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S0, 0x1, 0x0, V191, V938, V938, V941, V939, V939, V938, V941]

================================

Block 0xc60
[0xc60:0xc6a]
---
Predecessors: [0xc4b, 0xc6b]
Successors: [0xc6b, 0xc85]
---
0xc60 JUMPDEST
0xc61 PUSH1 0x20
0xc63 DUP4
0xc64 LT
0xc65 ISZERO
0xc66 ISZERO
0xc67 PUSH2 0xc85
0xc6a JUMPI
---
0xc60: JUMPDEST 
0xc61: V942 = 0x20
0xc64: V943 = LT S2 0x20
0xc65: V944 = ISZERO V943
0xc66: V945 = ISZERO V944
0xc67: V946 = 0xc85
0xc6a: JUMPI 0xc85 V945
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, 0x1, 0x0, V191, V938, V938, V941, V939, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, 0x1, 0x0, V191, V938, V938, V941, V939, S2, S1, S0]

================================

Block 0xc6b
[0xc6b:0xc84]
---
Predecessors: [0xc60]
Successors: [0xc60]
---
0xc6b DUP1
0xc6c MLOAD
0xc6d DUP3
0xc6e MSTORE
0xc6f PUSH1 0x20
0xc71 DUP3
0xc72 ADD
0xc73 SWAP2
0xc74 POP
0xc75 PUSH1 0x20
0xc77 DUP2
0xc78 ADD
0xc79 SWAP1
0xc7a POP
0xc7b PUSH1 0x20
0xc7d DUP4
0xc7e SUB
0xc7f SWAP3
0xc80 POP
0xc81 PUSH2 0xc60
0xc84 JUMP
---
0xc6c: V947 = M[S0]
0xc6e: M[S1] = V947
0xc6f: V948 = 0x20
0xc72: V949 = ADD S1 0x20
0xc75: V950 = 0x20
0xc78: V951 = ADD S0 0x20
0xc7b: V952 = 0x20
0xc7e: V953 = SUB S2 0x20
0xc81: V954 = 0xc60
0xc84: JUMP 0xc60
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, 0x1, 0x0, V191, V938, V938, V941, V939, S2, S1, S0]
Stack pops: 3
Stack additions: [V953, V949, V951]
Exit stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, 0x1, 0x0, V191, V938, V938, V941, V939, V953, V949, V951]

================================

Block 0xc85
[0xc85:0xcdc]
---
Predecessors: [0xc60]
Successors: [0x2d6]
---
0xc85 JUMPDEST
0xc86 PUSH1 0x1
0xc88 DUP4
0xc89 PUSH1 0x20
0xc8b SUB
0xc8c PUSH2 0x100
0xc8f EXP
0xc90 SUB
0xc91 DUP1
0xc92 NOT
0xc93 DUP3
0xc94 MLOAD
0xc95 AND
0xc96 DUP2
0xc97 DUP5
0xc98 MLOAD
0xc99 AND
0xc9a DUP1
0xc9b DUP3
0xc9c OR
0xc9d DUP6
0xc9e MSTORE
0xc9f POP
0xca0 POP
0xca1 POP
0xca2 POP
0xca3 POP
0xca4 POP
0xca5 SWAP1
0xca6 POP
0xca7 ADD
0xca8 SWAP2
0xca9 POP
0xcaa POP
0xcab SWAP1
0xcac DUP2
0xcad MSTORE
0xcae PUSH1 0x20
0xcb0 ADD
0xcb1 PUSH1 0x40
0xcb3 MLOAD
0xcb4 DUP1
0xcb5 SWAP2
0xcb6 SUB
0xcb7 SWAP1
0xcb8 SHA3
0xcb9 PUSH1 0x0
0xcbb PUSH2 0x100
0xcbe EXP
0xcbf DUP2
0xcc0 SLOAD
0xcc1 DUP2
0xcc2 PUSH1 0xff
0xcc4 MUL
0xcc5 NOT
0xcc6 AND
0xcc7 SWAP1
0xcc8 DUP4
0xcc9 PUSH1 0xff
0xccb AND
0xccc MUL
0xccd OR
0xcce SWAP1
0xccf SSTORE
0xcd0 POP
0xcd1 POP
0xcd2 POP
0xcd3 POP
0xcd4 POP
0xcd5 POP
0xcd6 POP
0xcd7 POP
0xcd8 POP
0xcd9 POP
0xcda POP
0xcdb POP
0xcdc JUMP
---
0xc85: JUMPDEST 
0xc86: V955 = 0x1
0xc89: V956 = 0x20
0xc8b: V957 = SUB 0x20 S2
0xc8c: V958 = 0x100
0xc8f: V959 = EXP 0x100 V957
0xc90: V960 = SUB V959 0x1
0xc92: V961 = NOT V960
0xc94: V962 = M[S0]
0xc95: V963 = AND V962 V961
0xc98: V964 = M[S1]
0xc99: V965 = AND V964 V960
0xc9c: V966 = OR V963 V965
0xc9e: M[S1] = V966
0xca7: V967 = ADD V939 V938
0xcad: M[V967] = 0x0
0xcae: V968 = 0x20
0xcb0: V969 = ADD 0x20 V967
0xcb1: V970 = 0x40
0xcb3: V971 = M[0x40]
0xcb6: V972 = SUB V969 V971
0xcb8: V973 = SHA3 V971 V972
0xcb9: V974 = 0x0
0xcbb: V975 = 0x100
0xcbe: V976 = EXP 0x100 0x0
0xcc0: V977 = S[V973]
0xcc2: V978 = 0xff
0xcc4: V979 = MUL 0xff 0x1
0xcc5: V980 = NOT 0xff
0xcc6: V981 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V977
0xcc9: V982 = 0xff
0xccb: V983 = AND 0xff 0x1
0xccc: V984 = MUL 0x1 0x1
0xccd: V985 = OR 0x1 V981
0xccf: S[V973] = V985
0xcdc: JUMP 0x2d6
---
Entry stack: [V11, 0x2d6, V143, V163, V173, V191, V200, V206, V211, V761, V821, V173, S10, 0x1, 0x0, V191, V938, V938, V941, V939, S2, S1, S0]
Stack pops: 22
Stack additions: []
Exit stack: [V11]

================================

Block 0xcdd
[0xcdd:0xd34]
---
Predecessors: [0x2e4]
Successors: [0xd35, 0xd39]
---
0xcdd JUMPDEST
0xcde PUSH1 0x1
0xce0 PUSH1 0x0
0xce2 SWAP1
0xce3 SLOAD
0xce4 SWAP1
0xce5 PUSH2 0x100
0xce8 EXP
0xce9 SWAP1
0xcea DIV
0xceb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd00 AND
0xd01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd16 AND
0xd17 CALLER
0xd18 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2d AND
0xd2e EQ
0xd2f ISZERO
0xd30 ISZERO
0xd31 PUSH2 0xd39
0xd34 JUMPI
---
0xcdd: JUMPDEST 
0xcde: V986 = 0x1
0xce0: V987 = 0x0
0xce3: V988 = S[0x1]
0xce5: V989 = 0x100
0xce8: V990 = EXP 0x100 0x0
0xcea: V991 = DIV V988 0x1
0xceb: V992 = 0xffffffffffffffffffffffffffffffffffffffff
0xd00: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0xd01: V994 = 0xffffffffffffffffffffffffffffffffffffffff
0xd16: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V993
0xd17: V996 = CALLER
0xd18: V997 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2d: V998 = AND 0xffffffffffffffffffffffffffffffffffffffff V996
0xd2e: V999 = EQ V998 V995
0xd2f: V1000 = ISZERO V999
0xd30: V1001 = ISZERO V1000
0xd31: V1002 = 0xd39
0xd34: JUMPI 0xd39 V1001
---
Entry stack: [V11, 0x319, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x319, V226]

================================

Block 0xd35
[0xd35:0xd38]
---
Predecessors: [0xcdd]
Successors: []
---
0xd35 PUSH1 0x0
0xd37 DUP1
0xd38 REVERT
---
0xd35: V1003 = 0x0
0xd38: REVERT 0x0 0x0
---
Entry stack: [V11, 0x319, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x319, V226]

================================

Block 0xd39
[0xd39:0xd7c]
---
Predecessors: [0xcdd]
Successors: [0x319]
---
0xd39 JUMPDEST
0xd3a DUP1
0xd3b PUSH1 0x1
0xd3d PUSH1 0x0
0xd3f PUSH2 0x100
0xd42 EXP
0xd43 DUP2
0xd44 SLOAD
0xd45 DUP2
0xd46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5b MUL
0xd5c NOT
0xd5d AND
0xd5e SWAP1
0xd5f DUP4
0xd60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd75 AND
0xd76 MUL
0xd77 OR
0xd78 SWAP1
0xd79 SSTORE
0xd7a POP
0xd7b POP
0xd7c JUMP
---
0xd39: JUMPDEST 
0xd3b: V1004 = 0x1
0xd3d: V1005 = 0x0
0xd3f: V1006 = 0x100
0xd42: V1007 = EXP 0x100 0x0
0xd44: V1008 = S[0x1]
0xd46: V1009 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5b: V1010 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xd5c: V1011 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd5d: V1012 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1008
0xd60: V1013 = 0xffffffffffffffffffffffffffffffffffffffff
0xd75: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0xd76: V1015 = MUL V1014 0x1
0xd77: V1016 = OR V1015 V1012
0xd79: S[0x1] = V1016
0xd7c: JUMP 0x319
---
Entry stack: [V11, 0x319, V226]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7d
[0xd7d:0xdd4]
---
Predecessors: [0x327]
Successors: [0xdd5, 0xdd9]
---
0xd7d JUMPDEST
0xd7e PUSH1 0x1
0xd80 PUSH1 0x0
0xd82 SWAP1
0xd83 SLOAD
0xd84 SWAP1
0xd85 PUSH2 0x100
0xd88 EXP
0xd89 SWAP1
0xd8a DIV
0xd8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda0 AND
0xda1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb6 AND
0xdb7 CALLER
0xdb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcd AND
0xdce EQ
0xdcf ISZERO
0xdd0 ISZERO
0xdd1 PUSH2 0xdd9
0xdd4 JUMPI
---
0xd7d: JUMPDEST 
0xd7e: V1017 = 0x1
0xd80: V1018 = 0x0
0xd83: V1019 = S[0x1]
0xd85: V1020 = 0x100
0xd88: V1021 = EXP 0x100 0x0
0xd8a: V1022 = DIV V1019 0x1
0xd8b: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0xda0: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1022
0xda1: V1025 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb6: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0xdb7: V1027 = CALLER
0xdb8: V1028 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcd: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1027
0xdce: V1030 = EQ V1029 V1026
0xdcf: V1031 = ISZERO V1030
0xdd0: V1032 = ISZERO V1031
0xdd1: V1033 = 0xdd9
0xdd4: JUMPI 0xdd9 V1032
---
Entry stack: [V11, 0x346, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x346, V239]

================================

Block 0xdd5
[0xdd5:0xdd8]
---
Predecessors: [0xd7d]
Successors: []
---
0xdd5 PUSH1 0x0
0xdd7 DUP1
0xdd8 REVERT
---
0xdd5: V1034 = 0x0
0xdd8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x346, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x346, V239]

================================

Block 0xdd9
[0xdd9:0xe15]
---
Predecessors: [0xd7d]
Successors: [0xe16, 0xe1f]
---
0xdd9 JUMPDEST
0xdda CALLER
0xddb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf0 AND
0xdf1 PUSH2 0x8fc
0xdf4 DUP3
0xdf5 SWAP1
0xdf6 DUP2
0xdf7 ISZERO
0xdf8 MUL
0xdf9 SWAP1
0xdfa PUSH1 0x40
0xdfc MLOAD
0xdfd PUSH1 0x0
0xdff PUSH1 0x40
0xe01 MLOAD
0xe02 DUP1
0xe03 DUP4
0xe04 SUB
0xe05 DUP2
0xe06 DUP6
0xe07 DUP9
0xe08 DUP9
0xe09 CALL
0xe0a SWAP4
0xe0b POP
0xe0c POP
0xe0d POP
0xe0e POP
0xe0f ISZERO
0xe10 DUP1
0xe11 ISZERO
0xe12 PUSH2 0xe1f
0xe15 JUMPI
---
0xdd9: JUMPDEST 
0xdda: V1035 = CALLER
0xddb: V1036 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf0: V1037 = AND 0xffffffffffffffffffffffffffffffffffffffff V1035
0xdf1: V1038 = 0x8fc
0xdf7: V1039 = ISZERO V239
0xdf8: V1040 = MUL V1039 0x8fc
0xdfa: V1041 = 0x40
0xdfc: V1042 = M[0x40]
0xdfd: V1043 = 0x0
0xdff: V1044 = 0x40
0xe01: V1045 = M[0x40]
0xe04: V1046 = SUB V1042 V1045
0xe09: V1047 = CALL V1040 V1037 V239 V1045 V1046 V1045 0x0
0xe0f: V1048 = ISZERO V1047
0xe11: V1049 = ISZERO V1048
0xe12: V1050 = 0xe1f
0xe15: JUMPI 0xe1f V1049
---
Entry stack: [V11, 0x346, V239]
Stack pops: 1
Stack additions: [S0, V1048]
Exit stack: [V11, 0x346, V239, V1048]

================================

Block 0xe16
[0xe16:0xe1e]
---
Predecessors: [0xdd9]
Successors: []
---
0xe16 RETURNDATASIZE
0xe17 PUSH1 0x0
0xe19 DUP1
0xe1a RETURNDATACOPY
0xe1b RETURNDATASIZE
0xe1c PUSH1 0x0
0xe1e REVERT
---
0xe16: V1051 = RETURNDATASIZE
0xe17: V1052 = 0x0
0xe1a: RETURNDATACOPY 0x0 0x0 V1051
0xe1b: V1053 = RETURNDATASIZE
0xe1c: V1054 = 0x0
0xe1e: REVERT 0x0 V1053
---
Entry stack: [V11, 0x346, V239, V1048]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x346, V239, V1048]

================================

Block 0xe1f
[0xe1f:0xe22]
---
Predecessors: [0xdd9]
Successors: [0x346]
---
0xe1f JUMPDEST
0xe20 POP
0xe21 POP
0xe22 JUMP
---
0xe1f: JUMPDEST 
0xe22: JUMP 0x346
---
Entry stack: [V11, 0x346, V239, V1048]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0xe23
[0xe23:0xe7a]
---
Predecessors: [0x354]
Successors: [0xe7b, 0xe7f]
---
0xe23 JUMPDEST
0xe24 PUSH1 0x1
0xe26 PUSH1 0x0
0xe28 SWAP1
0xe29 SLOAD
0xe2a SWAP1
0xe2b PUSH2 0x100
0xe2e EXP
0xe2f SWAP1
0xe30 DIV
0xe31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe46 AND
0xe47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5c AND
0xe5d CALLER
0xe5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe73 AND
0xe74 EQ
0xe75 ISZERO
0xe76 ISZERO
0xe77 PUSH2 0xe7f
0xe7a JUMPI
---
0xe23: JUMPDEST 
0xe24: V1055 = 0x1
0xe26: V1056 = 0x0
0xe29: V1057 = S[0x1]
0xe2b: V1058 = 0x100
0xe2e: V1059 = EXP 0x100 0x0
0xe30: V1060 = DIV V1057 0x1
0xe31: V1061 = 0xffffffffffffffffffffffffffffffffffffffff
0xe46: V1062 = AND 0xffffffffffffffffffffffffffffffffffffffff V1060
0xe47: V1063 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5c: V1064 = AND 0xffffffffffffffffffffffffffffffffffffffff V1062
0xe5d: V1065 = CALLER
0xe5e: V1066 = 0xffffffffffffffffffffffffffffffffffffffff
0xe73: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffff V1065
0xe74: V1068 = EQ V1067 V1064
0xe75: V1069 = ISZERO V1068
0xe76: V1070 = ISZERO V1069
0xe77: V1071 = 0xe7f
0xe7a: JUMPI 0xe7f V1070
---
Entry stack: [V11, 0x35d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x35d]

================================

Block 0xe7b
[0xe7b:0xe7e]
---
Predecessors: [0xe23]
Successors: []
---
0xe7b PUSH1 0x0
0xe7d DUP1
0xe7e REVERT
---
0xe7b: V1072 = 0x0
0xe7e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x35d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x35d]

================================

Block 0xe7f
[0xe7f:0xeb9]
---
Predecessors: [0xe23]
Successors: []
---
0xe7f JUMPDEST
0xe80 PUSH1 0x1
0xe82 PUSH1 0x0
0xe84 SWAP1
0xe85 SLOAD
0xe86 SWAP1
0xe87 PUSH2 0x100
0xe8a EXP
0xe8b SWAP1
0xe8c DIV
0xe8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea2 AND
0xea3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb8 AND
0xeb9 SELFDESTRUCT
---
0xe7f: JUMPDEST 
0xe80: V1073 = 0x1
0xe82: V1074 = 0x0
0xe85: V1075 = S[0x1]
0xe87: V1076 = 0x100
0xe8a: V1077 = EXP 0x100 0x0
0xe8c: V1078 = DIV V1075 0x1
0xe8d: V1079 = 0xffffffffffffffffffffffffffffffffffffffff
0xea2: V1080 = AND 0xffffffffffffffffffffffffffffffffffffffff V1078
0xea3: V1081 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb8: V1082 = AND 0xffffffffffffffffffffffffffffffffffffffff V1080
0xeb9: SELFDESTRUCT V1082
---
Entry stack: [V11, 0x35d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x35d]

================================

Block 0xeba
[0xeba:0xebb]
---
Predecessors: [0x35f]
Successors: [0x367]
---
0xeba JUMPDEST
0xebb JUMP
---
0xeba: JUMPDEST 
0xebb: JUMP 0x367
---
Entry stack: [V11, 0x367]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xebc
[0xebc:0xee1]
---
Predecessors: [0x375]
Successors: [0x37e]
---
0xebc JUMPDEST
0xebd PUSH1 0x1
0xebf PUSH1 0x0
0xec1 SWAP1
0xec2 SLOAD
0xec3 SWAP1
0xec4 PUSH2 0x100
0xec7 EXP
0xec8 SWAP1
0xec9 DIV
0xeca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedf AND
0xee0 DUP2
0xee1 JUMP
---
0xebc: JUMPDEST 
0xebd: V1083 = 0x1
0xebf: V1084 = 0x0
0xec2: V1085 = S[0x1]
0xec4: V1086 = 0x100
0xec7: V1087 = EXP 0x100 0x0
0xec9: V1088 = DIV V1085 0x1
0xeca: V1089 = 0xffffffffffffffffffffffffffffffffffffffff
0xedf: V1090 = AND 0xffffffffffffffffffffffffffffffffffffffff V1088
0xee1: JUMP 0x37e
---
Entry stack: [V11, 0x37e]
Stack pops: 1
Stack additions: [S0, V1090]
Exit stack: [V11, 0x37e, V1090]

================================

Block 0xee2
[0xee2:0xf14]
---
Predecessors: []
Successors: []
---
0xee2 STOP
0xee3 LOG1
0xee4 PUSH6 0x627a7a723058
0xeeb SHA3
0xeec MISSING 0xbd
0xeed TIMESTAMP
0xeee DUP2
0xeef SHA3
0xef0 MISSING 0x1e
0xef1 MISSING 0xe9
0xef2 MISSING 0xb8
0xef3 EXTCODEHASH
0xef4 PUSH13 0x85837ca5554f4ef8a9b224fa70
0xf02 SMOD
0xf03 LOG3
0xf04 DUP2
0xf05 PUSH15 0x75c215e43e6a0029
---
0xee2: STOP 
0xee3: LOG S0 S1 S2
0xee4: V1091 = 0x627a7a723058
0xeeb: V1092 = SHA3 0x627a7a723058 S3
0xeec: MISSING 0xbd
0xeed: V1093 = TIMESTAMP
0xeef: V1094 = SHA3 S0 V1093
0xef0: MISSING 0x1e
0xef1: MISSING 0xe9
0xef2: MISSING 0xb8
0xef3: V1095 = EXTCODEHASH S0
0xef4: V1096 = 0x85837ca5554f4ef8a9b224fa70
0xf02: V1097 = SMOD 0x85837ca5554f4ef8a9b224fa70 V1095
0xf03: LOG V1097 S1 S2 S3 S4
0xf05: V1098 = 0x75c215e43e6a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1092, V1094, S0, 0x75c215e43e6a0029, S6, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0xcf93216
Entry block: 0x88
Exit block: 0x19e
Body: 0x88, 0x90, 0x94, 0x19e, 0x3c0, 0x3d0, 0x3d4, 0x3e8, 0x3f3, 0x40d, 0x459, 0x4c6, 0x4da, 0x4e5, 0x4ff, 0x543, 0x54e, 0x568, 0x605, 0x60e, 0x672, 0x6df, 0x6e4, 0x6ee, 0x6fa, 0x6fb, 0x72b, 0x72c, 0x758, 0x761, 0x76f, 0x784, 0x78f, 0x7a9

Function 1:
Public function signature: 0x1179a5c7
Entry block: 0x1a0
Exit block: 0xc28
Body: 0x1a0, 0x1a8, 0x1ac, 0x2d6, 0x7ff, 0x811, 0x815, 0x829, 0x834, 0x84e, 0x89a, 0x907, 0x91b, 0x926, 0x940, 0x984, 0x98f, 0x9a9, 0xa46, 0xa4f, 0xab3, 0xb20, 0xb28, 0xb32, 0xb5a, 0xb5b, 0xb72, 0xb73, 0xbfe, 0xc02, 0xc0d, 0xc16, 0xc28, 0xc2c, 0xc4b, 0xc60, 0xc6b, 0xc85

Function 2:
Public function signature: 0x13af4035
Entry block: 0x2d8
Exit block: 0x319
Body: 0x2d8, 0x2e0, 0x2e4, 0x319, 0xcdd, 0xd35, 0xd39

Function 3:
Public function signature: 0x14174f33
Entry block: 0x31b
Exit block: 0x346
Body: 0x31b, 0x323, 0x327, 0x346, 0xd7d, 0xdd5, 0xdd9, 0xe16, 0xe1f

Function 4:
Public function signature: 0x41c0e1b5
Entry block: 0x348
Exit block: 0xe7f
Body: 0x348, 0x350, 0x354, 0xe23, 0xe7b, 0xe7f

Function 5:
Public function signature: 0x4cddae28
Entry block: 0x35f
Exit block: 0x367
Body: 0x35f, 0x367, 0xeba

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x369
Exit block: 0x37e
Body: 0x369, 0x371, 0x375, 0x37e, 0xebc

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

