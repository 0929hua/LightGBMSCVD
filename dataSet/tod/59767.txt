Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x117]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x117
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x117
0xa: JUMPI 0x117 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x11c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x7bfce37
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x11c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x7bfce37
0x20: V14 = EQ V12 0x7bfce37
0x21: V15 = 0x11c
0x24: JUMPI 0x11c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x136]
---
0x25 DUP1
0x26 PUSH4 0x828d0df
0x2b EQ
0x2c PUSH2 0x136
0x2f JUMPI
---
0x26: V16 = 0x828d0df
0x2b: V17 = EQ 0x828d0df V12
0x2c: V18 = 0x136
0x2f: JUMPI 0x136 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x167]
---
0x30 DUP1
0x31 PUSH4 0x1111cd24
0x36 EQ
0x37 PUSH2 0x167
0x3a JUMPI
---
0x31: V19 = 0x1111cd24
0x36: V20 = EQ 0x1111cd24 V12
0x37: V21 = 0x167
0x3a: JUMPI 0x167 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x18f]
---
0x3b DUP1
0x3c PUSH4 0x159ce057
0x41 EQ
0x42 PUSH2 0x18f
0x45 JUMPI
---
0x3c: V22 = 0x159ce057
0x41: V23 = EQ 0x159ce057 V12
0x42: V24 = 0x18f
0x45: JUMPI 0x18f V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1b4]
---
0x46 DUP1
0x47 PUSH4 0x1e1401f8
0x4c EQ
0x4d PUSH2 0x1b4
0x50 JUMPI
---
0x47: V25 = 0x1e1401f8
0x4c: V26 = EQ 0x1e1401f8 V12
0x4d: V27 = 0x1b4
0x50: JUMPI 0x1b4 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1ee]
---
0x51 DUP1
0x52 PUSH4 0x1fbe1979
0x57 EQ
0x58 PUSH2 0x1ee
0x5b JUMPI
---
0x52: V28 = 0x1fbe1979
0x57: V29 = EQ 0x1fbe1979 V12
0x58: V30 = 0x1ee
0x5b: JUMPI 0x1ee V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x215]
---
0x5c DUP1
0x5d PUSH4 0x20582b33
0x62 EQ
0x63 PUSH2 0x215
0x66 JUMPI
---
0x5d: V31 = 0x20582b33
0x62: V32 = EQ 0x20582b33 V12
0x63: V33 = 0x215
0x66: JUMPI 0x215 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x244]
---
0x67 DUP1
0x68 PUSH4 0x35f2e0a7
0x6d EQ
0x6e PUSH2 0x244
0x71 JUMPI
---
0x68: V34 = 0x35f2e0a7
0x6d: V35 = EQ 0x35f2e0a7 V12
0x6e: V36 = 0x244
0x71: JUMPI 0x244 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x25e]
---
0x72 DUP1
0x73 PUSH4 0x387a76ce
0x78 EQ
0x79 PUSH2 0x25e
0x7c JUMPI
---
0x73: V37 = 0x387a76ce
0x78: V38 = EQ 0x387a76ce V12
0x79: V39 = 0x25e
0x7c: JUMPI 0x25e V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x28d]
---
0x7d DUP1
0x7e PUSH4 0x3bb66a7b
0x83 EQ
0x84 PUSH2 0x28d
0x87 JUMPI
---
0x7e: V40 = 0x3bb66a7b
0x83: V41 = EQ 0x3bb66a7b V12
0x84: V42 = 0x28d
0x87: JUMPI 0x28d V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2be]
---
0x88 DUP1
0x89 PUSH4 0x3ccfd60b
0x8e EQ
0x8f PUSH2 0x2be
0x92 JUMPI
---
0x89: V43 = 0x3ccfd60b
0x8e: V44 = EQ 0x3ccfd60b V12
0x8f: V45 = 0x2be
0x92: JUMPI 0x2be V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2e5]
---
0x93 DUP1
0x94 PUSH4 0x40ab7b8c
0x99 EQ
0x9a PUSH2 0x2e5
0x9d JUMPI
---
0x94: V46 = 0x40ab7b8c
0x99: V47 = EQ 0x40ab7b8c V12
0x9a: V48 = 0x2e5
0x9d: JUMPI 0x2e5 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x314]
---
0x9e DUP1
0x9f PUSH4 0x41eccbd5
0xa4 EQ
0xa5 PUSH2 0x314
0xa8 JUMPI
---
0x9f: V49 = 0x41eccbd5
0xa4: V50 = EQ 0x41eccbd5 V12
0xa5: V51 = 0x314
0xa8: JUMPI 0x314 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x339]
---
0xa9 DUP1
0xaa PUSH4 0x65483f69
0xaf EQ
0xb0 PUSH2 0x339
0xb3 JUMPI
---
0xaa: V52 = 0x65483f69
0xaf: V53 = EQ 0x65483f69 V12
0xb0: V54 = 0x339
0xb3: JUMPI 0x339 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x36a]
---
0xb4 DUP1
0xb5 PUSH4 0x77ac2957
0xba EQ
0xbb PUSH2 0x36a
0xbe JUMPI
---
0xb5: V55 = 0x77ac2957
0xba: V56 = EQ 0x77ac2957 V12
0xbb: V57 = 0x36a
0xbe: JUMPI 0x36a V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x38f]
---
0xbf DUP1
0xc0 PUSH4 0x86d1a69f
0xc5 EQ
0xc6 PUSH2 0x38f
0xc9 JUMPI
---
0xc0: V58 = 0x86d1a69f
0xc5: V59 = EQ 0x86d1a69f V12
0xc6: V60 = 0x38f
0xc9: JUMPI 0x38f V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3a4]
---
0xca DUP1
0xcb PUSH4 0x8da5cb5b
0xd0 EQ
0xd1 PUSH2 0x3a4
0xd4 JUMPI
---
0xcb: V61 = 0x8da5cb5b
0xd0: V62 = EQ 0x8da5cb5b V12
0xd1: V63 = 0x3a4
0xd4: JUMPI 0x3a4 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3d3]
---
0xd5 DUP1
0xd6 PUSH4 0xa5a9ba8d
0xdb EQ
0xdc PUSH2 0x3d3
0xdf JUMPI
---
0xd6: V64 = 0xa5a9ba8d
0xdb: V65 = EQ 0xa5a9ba8d V12
0xdc: V66 = 0x3d3
0xdf: JUMPI 0x3d3 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3fb]
---
0xe0 DUP1
0xe1 PUSH4 0xb8066bcb
0xe6 EQ
0xe7 PUSH2 0x3fb
0xea JUMPI
---
0xe1: V67 = 0xb8066bcb
0xe6: V68 = EQ 0xb8066bcb V12
0xe7: V69 = 0x3fb
0xea: JUMPI 0x3fb V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x42a]
---
0xeb DUP1
0xec PUSH4 0xb9d1ed4a
0xf1 EQ
0xf2 PUSH2 0x42a
0xf5 JUMPI
---
0xec: V70 = 0xb9d1ed4a
0xf1: V71 = EQ 0xb9d1ed4a V12
0xf2: V72 = 0x42a
0xf5: JUMPI 0x42a V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x45b]
---
0xf6 DUP1
0xf7 PUSH4 0xc3e8fb40
0xfc EQ
0xfd PUSH2 0x45b
0x100 JUMPI
---
0xf7: V73 = 0xc3e8fb40
0xfc: V74 = EQ 0xc3e8fb40 V12
0xfd: V75 = 0x45b
0x100: JUMPI 0x45b V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x48a]
---
0x101 DUP1
0x102 PUSH4 0xce31a06b
0x107 EQ
0x108 PUSH2 0x48a
0x10b JUMPI
---
0x102: V76 = 0xce31a06b
0x107: V77 = EQ 0xce31a06b V12
0x108: V78 = 0x48a
0x10b: JUMPI 0x48a V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x4b1]
---
0x10c DUP1
0x10d PUSH4 0xd75352e1
0x112 EQ
0x113 PUSH2 0x4b1
0x116 JUMPI
---
0x10d: V79 = 0xd75352e1
0x112: V80 = EQ 0xd75352e1 V12
0x113: V81 = 0x4b1
0x116: JUMPI 0x4b1 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x11b]
---
Predecessors: [0x0, 0x10c]
Successors: []
---
0x117 JUMPDEST
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x117: JUMPDEST 
0x118: V82 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11c
[0x11c:0x123]
---
Predecessors: [0xb]
Successors: [0x4c6]
---
0x11c JUMPDEST
0x11d PUSH2 0x124
0x120 PUSH2 0x4c6
0x123 JUMP
---
0x11c: JUMPDEST 
0x11d: V83 = 0x124
0x120: V84 = 0x4c6
0x123: JUMP 0x4c6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V12, 0x124]

================================

Block 0x124
[0x124:0x135]
---
Predecessors: [0x799, 0x79e, 0x848, 0x8ee, 0x97c, 0xa81, 0xcde, 0xd61, 0xe4d]
Successors: []
---
0x124 JUMPDEST
0x125 PUSH1 0x40
0x127 MLOAD
0x128 SWAP1
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e PUSH1 0x40
0x130 MLOAD
0x131 DUP1
0x132 SWAP2
0x133 SUB
0x134 SWAP1
0x135 RETURN
---
0x124: JUMPDEST 
0x125: V85 = 0x40
0x127: V86 = M[0x40]
0x12a: M[V86] = S0
0x12b: V87 = 0x20
0x12d: V88 = ADD 0x20 V86
0x12e: V89 = 0x40
0x130: V90 = M[0x40]
0x133: V91 = SUB V88 V90
0x135: RETURN V90 V91
---
Entry stack: [V12, 0x124, 0x0, S4, {0x124, 0x1e1401f8}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S4, {0x124, 0x1e1401f8}, S2, S1]

================================

Block 0x136
[0x136:0x13c]
---
Predecessors: [0x25]
Successors: [0x13d, 0x141]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x136: JUMPDEST 
0x137: V92 = CALLVALUE
0x138: V93 = ISZERO V92
0x139: V94 = 0x141
0x13c: JUMPI 0x141 V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x136]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V95 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x141
[0x141:0x154]
---
Predecessors: [0x136]
Successors: [0x79e]
---
0x141 JUMPDEST
0x142 PUSH2 0x124
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d PUSH1 0x4
0x14f CALLDATALOAD
0x150 AND
0x151 PUSH2 0x79e
0x154 JUMP
---
0x141: JUMPDEST 
0x142: V96 = 0x124
0x145: V97 = 0x1
0x147: V98 = 0xa0
0x149: V99 = 0x2
0x14b: V100 = EXP 0x2 0xa0
0x14c: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14d: V102 = 0x4
0x14f: V103 = CALLDATALOAD 0x4
0x150: V104 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x151: V105 = 0x79e
0x154: JUMP 0x79e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124, V104]
Exit stack: [V12, 0x124, V104]

================================

Block 0x155
[0x155:0x166]
---
Predecessors: []
Successors: []
---
0x155 JUMPDEST
0x156 PUSH1 0x40
0x158 MLOAD
0x159 SWAP1
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 SWAP2
0x164 SUB
0x165 SWAP1
0x166 RETURN
---
0x155: JUMPDEST 
0x156: V106 = 0x40
0x158: V107 = M[0x40]
0x15b: M[V107] = S0
0x15c: V108 = 0x20
0x15e: V109 = ADD 0x20 V107
0x15f: V110 = 0x40
0x161: V111 = M[0x40]
0x164: V112 = SUB V109 V111
0x166: RETURN V111 V112
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x167
[0x167:0x16d]
---
Predecessors: [0x30]
Successors: [0x16e, 0x172]
---
0x167 JUMPDEST
0x168 CALLVALUE
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x167: JUMPDEST 
0x168: V113 = CALLVALUE
0x169: V114 = ISZERO V113
0x16a: V115 = 0x172
0x16d: JUMPI 0x172 V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x167]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V116 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x172
[0x172:0x17c]
---
Predecessors: [0x167]
Successors: [0x7b0]
---
0x172 JUMPDEST
0x173 PUSH2 0x124
0x176 PUSH1 0x4
0x178 CALLDATALOAD
0x179 PUSH2 0x7b0
0x17c JUMP
---
0x172: JUMPDEST 
0x173: V117 = 0x124
0x176: V118 = 0x4
0x178: V119 = CALLDATALOAD 0x4
0x179: V120 = 0x7b0
0x17c: JUMP 0x7b0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124, V119]
Exit stack: [V12, 0x124, V119]

================================

Block 0x17d
[0x17d:0x18e]
---
Predecessors: []
Successors: []
---
0x17d JUMPDEST
0x17e PUSH1 0x40
0x180 MLOAD
0x181 SWAP1
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b SWAP2
0x18c SUB
0x18d SWAP1
0x18e RETURN
---
0x17d: JUMPDEST 
0x17e: V121 = 0x40
0x180: V122 = M[0x40]
0x183: M[V122] = S0
0x184: V123 = 0x20
0x186: V124 = ADD 0x20 V122
0x187: V125 = 0x40
0x189: V126 = M[0x40]
0x18c: V127 = SUB V124 V126
0x18e: RETURN V126 V127
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18f
[0x18f:0x195]
---
Predecessors: [0x3b]
Successors: [0x196, 0x19a]
---
0x18f JUMPDEST
0x190 CALLVALUE
0x191 ISZERO
0x192 PUSH2 0x19a
0x195 JUMPI
---
0x18f: JUMPDEST 
0x190: V128 = CALLVALUE
0x191: V129 = ISZERO V128
0x192: V130 = 0x19a
0x195: JUMPI 0x19a V129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0x18f]
Successors: []
---
0x196 PUSH1 0x0
0x198 DUP1
0x199 REVERT
---
0x196: V131 = 0x0
0x199: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x18f]
Successors: [0x84d]
---
0x19a JUMPDEST
0x19b PUSH2 0x124
0x19e PUSH2 0x84d
0x1a1 JUMP
---
0x19a: JUMPDEST 
0x19b: V132 = 0x124
0x19e: V133 = 0x84d
0x1a1: JUMP 0x84d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V12, 0x124]

================================

Block 0x1a2
[0x1a2:0x1b3]
---
Predecessors: []
Successors: []
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 SWAP1
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP1
0x1b0 SWAP2
0x1b1 SUB
0x1b2 SWAP1
0x1b3 RETURN
---
0x1a2: JUMPDEST 
0x1a3: V134 = 0x40
0x1a5: V135 = M[0x40]
0x1a8: M[V135] = S0
0x1a9: V136 = 0x20
0x1ab: V137 = ADD 0x20 V135
0x1ac: V138 = 0x40
0x1ae: V139 = M[0x40]
0x1b1: V140 = SUB V137 V139
0x1b3: RETURN V139 V140
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b4
[0x1b4:0x1ba]
---
Predecessors: [0x46]
Successors: [0x1bb, 0x1bf]
---
0x1b4 JUMPDEST
0x1b5 CALLVALUE
0x1b6 ISZERO
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V141 = CALLVALUE
0x1b6: V142 = ISZERO V141
0x1b7: V143 = 0x1bf
0x1ba: JUMPI 0x1bf V142
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V144 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bf
[0x1bf:0x1db]
---
Predecessors: [0x1b4]
Successors: [0x8f1]
---
0x1bf JUMPDEST
0x1c0 PUSH2 0x124
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb PUSH1 0x4
0x1cd CALLDATALOAD
0x1ce DUP2
0x1cf AND
0x1d0 SWAP1
0x1d1 PUSH1 0x24
0x1d3 CALLDATALOAD
0x1d4 AND
0x1d5 PUSH1 0x44
0x1d7 CALLDATALOAD
0x1d8 PUSH2 0x8f1
0x1db JUMP
---
0x1bf: JUMPDEST 
0x1c0: V145 = 0x124
0x1c3: V146 = 0x1
0x1c5: V147 = 0xa0
0x1c7: V148 = 0x2
0x1c9: V149 = EXP 0x2 0xa0
0x1ca: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V151 = 0x4
0x1cd: V152 = CALLDATALOAD 0x4
0x1cf: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x1d1: V154 = 0x24
0x1d3: V155 = CALLDATALOAD 0x24
0x1d4: V156 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V157 = 0x44
0x1d7: V158 = CALLDATALOAD 0x44
0x1d8: V159 = 0x8f1
0x1db: JUMP 0x8f1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124, V153, V156, V158]
Exit stack: [V12, 0x124, V153, V156, V158]

================================

Block 0x1dc
[0x1dc:0x1ed]
---
Predecessors: []
Successors: []
---
0x1dc JUMPDEST
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 DUP1
0x1ea SWAP2
0x1eb SUB
0x1ec SWAP1
0x1ed RETURN
---
0x1dc: JUMPDEST 
0x1dd: V160 = 0x40
0x1df: V161 = M[0x40]
0x1e2: M[V161] = S0
0x1e3: V162 = 0x20
0x1e5: V163 = ADD 0x20 V161
0x1e6: V164 = 0x40
0x1e8: V165 = M[0x40]
0x1eb: V166 = SUB V163 V165
0x1ed: RETURN V165 V166
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ee
[0x1ee:0x1f4]
---
Predecessors: [0x51]
Successors: [0x1f5, 0x1f9]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V167 = CALLVALUE
0x1f0: V168 = ISZERO V167
0x1f1: V169 = 0x1f9
0x1f4: JUMPI 0x1f9 V168
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V170 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x200]
---
Predecessors: [0x1ee]
Successors: [0x983]
---
0x1f9 JUMPDEST
0x1fa PUSH2 0x201
0x1fd PUSH2 0x983
0x200 JUMP
---
0x1f9: JUMPDEST 
0x1fa: V171 = 0x201
0x1fd: V172 = 0x983
0x200: JUMP 0x983
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V12, 0x201]

================================

Block 0x201
[0x201:0x214]
---
Predecessors: [0xa4a, 0xcc9, 0xf81]
Successors: []
---
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 MLOAD
0x205 SWAP1
0x206 ISZERO
0x207 ISZERO
0x208 DUP2
0x209 MSTORE
0x20a PUSH1 0x20
0x20c ADD
0x20d PUSH1 0x40
0x20f MLOAD
0x210 DUP1
0x211 SWAP2
0x212 SUB
0x213 SWAP1
0x214 RETURN
---
0x201: JUMPDEST 
0x202: V173 = 0x40
0x204: V174 = M[0x40]
0x206: V175 = ISZERO {0x0, 0x1}
0x207: V176 = ISZERO V175
0x209: M[V174] = V176
0x20a: V177 = 0x20
0x20c: V178 = ADD 0x20 V174
0x20d: V179 = 0x40
0x20f: V180 = M[0x40]
0x212: V181 = SUB V178 V180
0x214: RETURN V180 V181
---
Entry stack: [V12, 0x124, 0x0, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S1]

================================

Block 0x215
[0x215:0x21b]
---
Predecessors: [0x5c]
Successors: [0x21c, 0x220]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 ISZERO
0x218 PUSH2 0x220
0x21b JUMPI
---
0x215: JUMPDEST 
0x216: V182 = CALLVALUE
0x217: V183 = ISZERO V182
0x218: V184 = 0x220
0x21b: JUMPI 0x220 V183
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0x215]
Successors: []
---
0x21c PUSH1 0x0
0x21e DUP1
0x21f REVERT
---
0x21c: V185 = 0x0
0x21f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x220
[0x220:0x227]
---
Predecessors: [0x215]
Successors: [0xa4e]
---
0x220 JUMPDEST
0x221 PUSH2 0x228
0x224 PUSH2 0xa4e
0x227 JUMP
---
0x220: JUMPDEST 
0x221: V186 = 0x228
0x224: V187 = 0xa4e
0x227: JUMP 0xa4e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x228
[0x228:0x243]
---
Predecessors: [0xa4e, 0xa85, 0xccf, 0xd92, 0xe3e, 0xe5f]
Successors: []
---
0x228 JUMPDEST
0x229 PUSH1 0x40
0x22b MLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP1
0x235 SWAP2
0x236 AND
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x20
0x23b ADD
0x23c PUSH1 0x40
0x23e MLOAD
0x23f DUP1
0x240 SWAP2
0x241 SUB
0x242 SWAP1
0x243 RETURN
---
0x228: JUMPDEST 
0x229: V188 = 0x40
0x22b: V189 = M[0x40]
0x22c: V190 = 0x1
0x22e: V191 = 0xa0
0x230: V192 = 0x2
0x232: V193 = EXP 0x2 0xa0
0x233: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V195 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x238: M[V189] = V195
0x239: V196 = 0x20
0x23b: V197 = ADD 0x20 V189
0x23c: V198 = 0x40
0x23e: V199 = M[0x40]
0x241: V200 = SUB V197 V199
0x243: RETURN V199 V200
---
Entry stack: [V12, 0x228, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x228]

================================

Block 0x244
[0x244:0x24b]
---
Predecessors: [0x67]
Successors: [0xa5d]
---
0x244 JUMPDEST
0x245 PUSH2 0x124
0x248 PUSH2 0xa5d
0x24b JUMP
---
0x244: JUMPDEST 
0x245: V201 = 0x124
0x248: V202 = 0xa5d
0x24b: JUMP 0xa5d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V12, 0x124]

================================

Block 0x24c
[0x24c:0x25d]
---
Predecessors: []
Successors: []
---
0x24c JUMPDEST
0x24d PUSH1 0x40
0x24f MLOAD
0x250 SWAP1
0x251 DUP2
0x252 MSTORE
0x253 PUSH1 0x20
0x255 ADD
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a SWAP2
0x25b SUB
0x25c SWAP1
0x25d RETURN
---
0x24c: JUMPDEST 
0x24d: V203 = 0x40
0x24f: V204 = M[0x40]
0x252: M[V204] = S0
0x253: V205 = 0x20
0x255: V206 = ADD 0x20 V204
0x256: V207 = 0x40
0x258: V208 = M[0x40]
0x25b: V209 = SUB V206 V208
0x25d: RETURN V208 V209
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0x72]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V210 = CALLVALUE
0x260: V211 = ISZERO V210
0x261: V212 = 0x269
0x264: JUMPI 0x269 V211
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V213 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x25e]
Successors: [0xa85]
---
0x269 JUMPDEST
0x26a PUSH2 0x228
0x26d PUSH2 0xa85
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V214 = 0x228
0x26d: V215 = 0xa85
0x270: JUMP 0xa85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x271
[0x271:0x28c]
---
Predecessors: []
Successors: []
---
0x271 JUMPDEST
0x272 PUSH1 0x40
0x274 MLOAD
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d SWAP1
0x27e SWAP2
0x27f AND
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x20
0x284 ADD
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 SWAP2
0x28a SUB
0x28b SWAP1
0x28c RETURN
---
0x271: JUMPDEST 
0x272: V216 = 0x40
0x274: V217 = M[0x40]
0x275: V218 = 0x1
0x277: V219 = 0xa0
0x279: V220 = 0x2
0x27b: V221 = EXP 0x2 0xa0
0x27c: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V223 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x281: M[V217] = V223
0x282: V224 = 0x20
0x284: V225 = ADD 0x20 V217
0x285: V226 = 0x40
0x287: V227 = M[0x40]
0x28a: V228 = SUB V225 V227
0x28c: RETURN V227 V228
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28d
[0x28d:0x293]
---
Predecessors: [0x7d]
Successors: [0x294, 0x298]
---
0x28d JUMPDEST
0x28e CALLVALUE
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x28d: JUMPDEST 
0x28e: V229 = CALLVALUE
0x28f: V230 = ISZERO V229
0x290: V231 = 0x298
0x293: JUMPI 0x298 V230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x28d]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V232 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x298
[0x298:0x2ab]
---
Predecessors: [0x28d]
Successors: [0xa94]
---
0x298 JUMPDEST
0x299 PUSH2 0x124
0x29c PUSH1 0x1
0x29e PUSH1 0xa0
0x2a0 PUSH1 0x2
0x2a2 EXP
0x2a3 SUB
0x2a4 PUSH1 0x4
0x2a6 CALLDATALOAD
0x2a7 AND
0x2a8 PUSH2 0xa94
0x2ab JUMP
---
0x298: JUMPDEST 
0x299: V233 = 0x124
0x29c: V234 = 0x1
0x29e: V235 = 0xa0
0x2a0: V236 = 0x2
0x2a2: V237 = EXP 0x2 0xa0
0x2a3: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V239 = 0x4
0x2a6: V240 = CALLDATALOAD 0x4
0x2a7: V241 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V242 = 0xa94
0x2ab: JUMP 0xa94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124, V241]
Exit stack: [V12, 0x124, V241]

================================

Block 0x2ac
[0x2ac:0x2bd]
---
Predecessors: []
Successors: []
---
0x2ac JUMPDEST
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 SWAP1
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 DUP1
0x2ba SWAP2
0x2bb SUB
0x2bc SWAP1
0x2bd RETURN
---
0x2ac: JUMPDEST 
0x2ad: V243 = 0x40
0x2af: V244 = M[0x40]
0x2b2: M[V244] = S0
0x2b3: V245 = 0x20
0x2b5: V246 = ADD 0x20 V244
0x2b6: V247 = 0x40
0x2b8: V248 = M[0x40]
0x2bb: V249 = SUB V246 V248
0x2bd: RETURN V248 V249
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2be
[0x2be:0x2c4]
---
Predecessors: [0x88]
Successors: [0x2c5, 0x2c9]
---
0x2be JUMPDEST
0x2bf CALLVALUE
0x2c0 ISZERO
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2be: JUMPDEST 
0x2bf: V250 = CALLVALUE
0x2c0: V251 = ISZERO V250
0x2c1: V252 = 0x2c9
0x2c4: JUMPI 0x2c9 V251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2be]
Successors: []
---
0x2c5 PUSH1 0x0
0x2c7 DUP1
0x2c8 REVERT
---
0x2c5: V253 = 0x0
0x2c8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c9
[0x2c9:0x2d0]
---
Predecessors: [0x2be]
Successors: [0xb11]
---
0x2c9 JUMPDEST
0x2ca PUSH2 0x201
0x2cd PUSH2 0xb11
0x2d0 JUMP
---
0x2c9: JUMPDEST 
0x2ca: V254 = 0x201
0x2cd: V255 = 0xb11
0x2d0: JUMP 0xb11
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V12, 0x201]

================================

Block 0x2d1
[0x2d1:0x2e4]
---
Predecessors: []
Successors: []
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 SWAP1
0x2d6 ISZERO
0x2d7 ISZERO
0x2d8 DUP2
0x2d9 MSTORE
0x2da PUSH1 0x20
0x2dc ADD
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 SWAP2
0x2e2 SUB
0x2e3 SWAP1
0x2e4 RETURN
---
0x2d1: JUMPDEST 
0x2d2: V256 = 0x40
0x2d4: V257 = M[0x40]
0x2d6: V258 = ISZERO S0
0x2d7: V259 = ISZERO V258
0x2d9: M[V257] = V259
0x2da: V260 = 0x20
0x2dc: V261 = ADD 0x20 V257
0x2dd: V262 = 0x40
0x2df: V263 = M[0x40]
0x2e2: V264 = SUB V261 V263
0x2e4: RETURN V263 V264
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e5
[0x2e5:0x2eb]
---
Predecessors: [0x93]
Successors: [0x2ec, 0x2f0]
---
0x2e5 JUMPDEST
0x2e6 CALLVALUE
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V265 = CALLVALUE
0x2e7: V266 = ISZERO V265
0x2e8: V267 = 0x2f0
0x2eb: JUMPI 0x2f0 V266
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2e5]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V268 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f0
[0x2f0:0x2f7]
---
Predecessors: [0x2e5]
Successors: [0xccf]
---
0x2f0 JUMPDEST
0x2f1 PUSH2 0x228
0x2f4 PUSH2 0xccf
0x2f7 JUMP
---
0x2f0: JUMPDEST 
0x2f1: V269 = 0x228
0x2f4: V270 = 0xccf
0x2f7: JUMP 0xccf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x2f8
[0x2f8:0x313]
---
Predecessors: []
Successors: []
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 SWAP1
0x305 SWAP2
0x306 AND
0x307 DUP2
0x308 MSTORE
0x309 PUSH1 0x20
0x30b ADD
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP1
0x310 SWAP2
0x311 SUB
0x312 SWAP1
0x313 RETURN
---
0x2f8: JUMPDEST 
0x2f9: V271 = 0x40
0x2fb: V272 = M[0x40]
0x2fc: V273 = 0x1
0x2fe: V274 = 0xa0
0x300: V275 = 0x2
0x302: V276 = EXP 0x2 0xa0
0x303: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V278 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x308: M[V272] = V278
0x309: V279 = 0x20
0x30b: V280 = ADD 0x20 V272
0x30c: V281 = 0x40
0x30e: V282 = M[0x40]
0x311: V283 = SUB V280 V282
0x313: RETURN V282 V283
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x314
[0x314:0x31a]
---
Predecessors: [0x9e]
Successors: [0x31b, 0x31f]
---
0x314 JUMPDEST
0x315 CALLVALUE
0x316 ISZERO
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x314: JUMPDEST 
0x315: V284 = CALLVALUE
0x316: V285 = ISZERO V284
0x317: V286 = 0x31f
0x31a: JUMPI 0x31f V285
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x314]
Successors: []
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e REVERT
---
0x31b: V287 = 0x0
0x31e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31f
[0x31f:0x326]
---
Predecessors: [0x314]
Successors: [0xcde]
---
0x31f JUMPDEST
0x320 PUSH2 0x124
0x323 PUSH2 0xcde
0x326 JUMP
---
0x31f: JUMPDEST 
0x320: V288 = 0x124
0x323: V289 = 0xcde
0x326: JUMP 0xcde
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V12, 0x124]

================================

Block 0x327
[0x327:0x338]
---
Predecessors: []
Successors: []
---
0x327 JUMPDEST
0x328 PUSH1 0x40
0x32a MLOAD
0x32b SWAP1
0x32c DUP2
0x32d MSTORE
0x32e PUSH1 0x20
0x330 ADD
0x331 PUSH1 0x40
0x333 MLOAD
0x334 DUP1
0x335 SWAP2
0x336 SUB
0x337 SWAP1
0x338 RETURN
---
0x327: JUMPDEST 
0x328: V290 = 0x40
0x32a: V291 = M[0x40]
0x32d: M[V291] = S0
0x32e: V292 = 0x20
0x330: V293 = ADD 0x20 V291
0x331: V294 = 0x40
0x333: V295 = M[0x40]
0x336: V296 = SUB V293 V295
0x338: RETURN V295 V296
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x339
[0x339:0x33f]
---
Predecessors: [0xa9]
Successors: [0x340, 0x344]
---
0x339 JUMPDEST
0x33a CALLVALUE
0x33b ISZERO
0x33c PUSH2 0x344
0x33f JUMPI
---
0x339: JUMPDEST 
0x33a: V297 = CALLVALUE
0x33b: V298 = ISZERO V297
0x33c: V299 = 0x344
0x33f: JUMPI 0x344 V298
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x339]
Successors: []
---
0x340 PUSH1 0x0
0x342 DUP1
0x343 REVERT
---
0x340: V300 = 0x0
0x343: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x344
[0x344:0x357]
---
Predecessors: [0x339]
Successors: [0xce4]
---
0x344 JUMPDEST
0x345 PUSH2 0x124
0x348 PUSH1 0x1
0x34a PUSH1 0xa0
0x34c PUSH1 0x2
0x34e EXP
0x34f SUB
0x350 PUSH1 0x4
0x352 CALLDATALOAD
0x353 AND
0x354 PUSH2 0xce4
0x357 JUMP
---
0x344: JUMPDEST 
0x345: V301 = 0x124
0x348: V302 = 0x1
0x34a: V303 = 0xa0
0x34c: V304 = 0x2
0x34e: V305 = EXP 0x2 0xa0
0x34f: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V307 = 0x4
0x352: V308 = CALLDATALOAD 0x4
0x353: V309 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x354: V310 = 0xce4
0x357: JUMP 0xce4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124, V309]
Exit stack: [V12, 0x124, V309]

================================

Block 0x358
[0x358:0x369]
---
Predecessors: []
Successors: []
---
0x358 JUMPDEST
0x359 PUSH1 0x40
0x35b MLOAD
0x35c SWAP1
0x35d DUP2
0x35e MSTORE
0x35f PUSH1 0x20
0x361 ADD
0x362 PUSH1 0x40
0x364 MLOAD
0x365 DUP1
0x366 SWAP2
0x367 SUB
0x368 SWAP1
0x369 RETURN
---
0x358: JUMPDEST 
0x359: V311 = 0x40
0x35b: V312 = M[0x40]
0x35e: M[V312] = S0
0x35f: V313 = 0x20
0x361: V314 = ADD 0x20 V312
0x362: V315 = 0x40
0x364: V316 = M[0x40]
0x367: V317 = SUB V314 V316
0x369: RETURN V316 V317
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x36a
[0x36a:0x370]
---
Predecessors: [0xb4]
Successors: [0x371, 0x375]
---
0x36a JUMPDEST
0x36b CALLVALUE
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x36a: JUMPDEST 
0x36b: V318 = CALLVALUE
0x36c: V319 = ISZERO V318
0x36d: V320 = 0x375
0x370: JUMPI 0x375 V319
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x36a]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V321 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x375
[0x375:0x37c]
---
Predecessors: [0x36a]
Successors: [0xd61]
---
0x375 JUMPDEST
0x376 PUSH2 0x124
0x379 PUSH2 0xd61
0x37c JUMP
---
0x375: JUMPDEST 
0x376: V322 = 0x124
0x379: V323 = 0xd61
0x37c: JUMP 0xd61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V12, 0x124]

================================

Block 0x37d
[0x37d:0x38e]
---
Predecessors: []
Successors: []
---
0x37d JUMPDEST
0x37e PUSH1 0x40
0x380 MLOAD
0x381 SWAP1
0x382 DUP2
0x383 MSTORE
0x384 PUSH1 0x20
0x386 ADD
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b SWAP2
0x38c SUB
0x38d SWAP1
0x38e RETURN
---
0x37d: JUMPDEST 
0x37e: V324 = 0x40
0x380: V325 = M[0x40]
0x383: M[V325] = S0
0x384: V326 = 0x20
0x386: V327 = ADD 0x20 V325
0x387: V328 = 0x40
0x389: V329 = M[0x40]
0x38c: V330 = SUB V327 V329
0x38e: RETURN V329 V330
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x38f
[0x38f:0x395]
---
Predecessors: [0xbf]
Successors: [0x396, 0x39a]
---
0x38f JUMPDEST
0x390 CALLVALUE
0x391 ISZERO
0x392 PUSH2 0x39a
0x395 JUMPI
---
0x38f: JUMPDEST 
0x390: V331 = CALLVALUE
0x391: V332 = ISZERO V331
0x392: V333 = 0x39a
0x395: JUMPI 0x39a V332
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x396
[0x396:0x399]
---
Predecessors: [0x38f]
Successors: []
---
0x396 PUSH1 0x0
0x398 DUP1
0x399 REVERT
---
0x396: V334 = 0x0
0x399: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39a
[0x39a:0x3a1]
---
Predecessors: [0x38f]
Successors: [0xd67]
---
0x39a JUMPDEST
0x39b PUSH2 0x3a2
0x39e PUSH2 0xd67
0x3a1 JUMP
---
0x39a: JUMPDEST 
0x39b: V335 = 0x3a2
0x39e: V336 = 0xd67
0x3a1: JUMP 0xd67
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a2]
Exit stack: [V12, 0x3a2]

================================

Block 0x3a2
[0x3a2:0x3a3]
---
Predecessors: [0xd90]
Successors: []
---
0x3a2 JUMPDEST
0x3a3 STOP
---
0x3a2: JUMPDEST 
0x3a3: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a4
[0x3a4:0x3aa]
---
Predecessors: [0xca]
Successors: [0x3ab, 0x3af]
---
0x3a4 JUMPDEST
0x3a5 CALLVALUE
0x3a6 ISZERO
0x3a7 PUSH2 0x3af
0x3aa JUMPI
---
0x3a4: JUMPDEST 
0x3a5: V337 = CALLVALUE
0x3a6: V338 = ISZERO V337
0x3a7: V339 = 0x3af
0x3aa: JUMPI 0x3af V338
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x3a4]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae REVERT
---
0x3ab: V340 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3af
[0x3af:0x3b6]
---
Predecessors: [0x3a4]
Successors: [0xd92]
---
0x3af JUMPDEST
0x3b0 PUSH2 0x228
0x3b3 PUSH2 0xd92
0x3b6 JUMP
---
0x3af: JUMPDEST 
0x3b0: V341 = 0x228
0x3b3: V342 = 0xd92
0x3b6: JUMP 0xd92
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x3b7
[0x3b7:0x3d2]
---
Predecessors: []
Successors: []
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x40
0x3ba MLOAD
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 SWAP1
0x3c4 SWAP2
0x3c5 AND
0x3c6 DUP2
0x3c7 MSTORE
0x3c8 PUSH1 0x20
0x3ca ADD
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce DUP1
0x3cf SWAP2
0x3d0 SUB
0x3d1 SWAP1
0x3d2 RETURN
---
0x3b7: JUMPDEST 
0x3b8: V343 = 0x40
0x3ba: V344 = M[0x40]
0x3bb: V345 = 0x1
0x3bd: V346 = 0xa0
0x3bf: V347 = 0x2
0x3c1: V348 = EXP 0x2 0xa0
0x3c2: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c5: V350 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: M[V344] = V350
0x3c8: V351 = 0x20
0x3ca: V352 = ADD 0x20 V344
0x3cb: V353 = 0x40
0x3cd: V354 = M[0x40]
0x3d0: V355 = SUB V352 V354
0x3d2: RETURN V354 V355
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3d3
[0x3d3:0x3d9]
---
Predecessors: [0xd5]
Successors: [0x3da, 0x3de]
---
0x3d3 JUMPDEST
0x3d4 CALLVALUE
0x3d5 ISZERO
0x3d6 PUSH2 0x3de
0x3d9 JUMPI
---
0x3d3: JUMPDEST 
0x3d4: V356 = CALLVALUE
0x3d5: V357 = ISZERO V356
0x3d6: V358 = 0x3de
0x3d9: JUMPI 0x3de V357
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3da
[0x3da:0x3dd]
---
Predecessors: [0x3d3]
Successors: []
---
0x3da PUSH1 0x0
0x3dc DUP1
0x3dd REVERT
---
0x3da: V359 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3de
[0x3de:0x3e8]
---
Predecessors: [0x3d3]
Successors: [0xda1]
---
0x3de JUMPDEST
0x3df PUSH2 0x124
0x3e2 PUSH1 0x4
0x3e4 CALLDATALOAD
0x3e5 PUSH2 0xda1
0x3e8 JUMP
---
0x3de: JUMPDEST 
0x3df: V360 = 0x124
0x3e2: V361 = 0x4
0x3e4: V362 = CALLDATALOAD 0x4
0x3e5: V363 = 0xda1
0x3e8: JUMP 0xda1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124, V362]
Exit stack: [V12, 0x124, V362]

================================

Block 0x3e9
[0x3e9:0x3fa]
---
Predecessors: []
Successors: []
---
0x3e9 JUMPDEST
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed SWAP1
0x3ee DUP2
0x3ef MSTORE
0x3f0 PUSH1 0x20
0x3f2 ADD
0x3f3 PUSH1 0x40
0x3f5 MLOAD
0x3f6 DUP1
0x3f7 SWAP2
0x3f8 SUB
0x3f9 SWAP1
0x3fa RETURN
---
0x3e9: JUMPDEST 
0x3ea: V364 = 0x40
0x3ec: V365 = M[0x40]
0x3ef: M[V365] = S0
0x3f0: V366 = 0x20
0x3f2: V367 = ADD 0x20 V365
0x3f3: V368 = 0x40
0x3f5: V369 = M[0x40]
0x3f8: V370 = SUB V367 V369
0x3fa: RETURN V369 V370
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3fb
[0x3fb:0x401]
---
Predecessors: [0xe0]
Successors: [0x402, 0x406]
---
0x3fb JUMPDEST
0x3fc CALLVALUE
0x3fd ISZERO
0x3fe PUSH2 0x406
0x401 JUMPI
---
0x3fb: JUMPDEST 
0x3fc: V371 = CALLVALUE
0x3fd: V372 = ISZERO V371
0x3fe: V373 = 0x406
0x401: JUMPI 0x406 V372
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x402
[0x402:0x405]
---
Predecessors: [0x3fb]
Successors: []
---
0x402 PUSH1 0x0
0x404 DUP1
0x405 REVERT
---
0x402: V374 = 0x0
0x405: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x406
[0x406:0x40d]
---
Predecessors: [0x3fb]
Successors: [0xe3e]
---
0x406 JUMPDEST
0x407 PUSH2 0x228
0x40a PUSH2 0xe3e
0x40d JUMP
---
0x406: JUMPDEST 
0x407: V375 = 0x228
0x40a: V376 = 0xe3e
0x40d: JUMP 0xe3e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x40e
[0x40e:0x429]
---
Predecessors: []
Successors: []
---
0x40e JUMPDEST
0x40f PUSH1 0x40
0x411 MLOAD
0x412 PUSH1 0x1
0x414 PUSH1 0xa0
0x416 PUSH1 0x2
0x418 EXP
0x419 SUB
0x41a SWAP1
0x41b SWAP2
0x41c AND
0x41d DUP2
0x41e MSTORE
0x41f PUSH1 0x20
0x421 ADD
0x422 PUSH1 0x40
0x424 MLOAD
0x425 DUP1
0x426 SWAP2
0x427 SUB
0x428 SWAP1
0x429 RETURN
---
0x40e: JUMPDEST 
0x40f: V377 = 0x40
0x411: V378 = M[0x40]
0x412: V379 = 0x1
0x414: V380 = 0xa0
0x416: V381 = 0x2
0x418: V382 = EXP 0x2 0xa0
0x419: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41c: V384 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x41e: M[V378] = V384
0x41f: V385 = 0x20
0x421: V386 = ADD 0x20 V378
0x422: V387 = 0x40
0x424: V388 = M[0x40]
0x427: V389 = SUB V386 V388
0x429: RETURN V388 V389
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x42a
[0x42a:0x430]
---
Predecessors: [0xeb]
Successors: [0x431, 0x435]
---
0x42a JUMPDEST
0x42b CALLVALUE
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x42a: JUMPDEST 
0x42b: V390 = CALLVALUE
0x42c: V391 = ISZERO V390
0x42d: V392 = 0x435
0x430: JUMPI 0x435 V391
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x42a]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V393 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x435
[0x435:0x448]
---
Predecessors: [0x42a]
Successors: [0xe4d]
---
0x435 JUMPDEST
0x436 PUSH2 0x124
0x439 PUSH1 0x1
0x43b PUSH1 0xa0
0x43d PUSH1 0x2
0x43f EXP
0x440 SUB
0x441 PUSH1 0x4
0x443 CALLDATALOAD
0x444 AND
0x445 PUSH2 0xe4d
0x448 JUMP
---
0x435: JUMPDEST 
0x436: V394 = 0x124
0x439: V395 = 0x1
0x43b: V396 = 0xa0
0x43d: V397 = 0x2
0x43f: V398 = EXP 0x2 0xa0
0x440: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V400 = 0x4
0x443: V401 = CALLDATALOAD 0x4
0x444: V402 = AND V401 0xffffffffffffffffffffffffffffffffffffffff
0x445: V403 = 0xe4d
0x448: JUMP 0xe4d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x124, V402]
Exit stack: [V12, 0x124, V402]

================================

Block 0x449
[0x449:0x45a]
---
Predecessors: []
Successors: []
---
0x449 JUMPDEST
0x44a PUSH1 0x40
0x44c MLOAD
0x44d SWAP1
0x44e DUP2
0x44f MSTORE
0x450 PUSH1 0x20
0x452 ADD
0x453 PUSH1 0x40
0x455 MLOAD
0x456 DUP1
0x457 SWAP2
0x458 SUB
0x459 SWAP1
0x45a RETURN
---
0x449: JUMPDEST 
0x44a: V404 = 0x40
0x44c: V405 = M[0x40]
0x44f: M[V405] = S0
0x450: V406 = 0x20
0x452: V407 = ADD 0x20 V405
0x453: V408 = 0x40
0x455: V409 = M[0x40]
0x458: V410 = SUB V407 V409
0x45a: RETURN V409 V410
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x45b
[0x45b:0x461]
---
Predecessors: [0xf6]
Successors: [0x462, 0x466]
---
0x45b JUMPDEST
0x45c CALLVALUE
0x45d ISZERO
0x45e PUSH2 0x466
0x461 JUMPI
---
0x45b: JUMPDEST 
0x45c: V411 = CALLVALUE
0x45d: V412 = ISZERO V411
0x45e: V413 = 0x466
0x461: JUMPI 0x466 V412
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x462
[0x462:0x465]
---
Predecessors: [0x45b]
Successors: []
---
0x462 PUSH1 0x0
0x464 DUP1
0x465 REVERT
---
0x462: V414 = 0x0
0x465: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x466
[0x466:0x46d]
---
Predecessors: [0x45b]
Successors: [0xe5f]
---
0x466 JUMPDEST
0x467 PUSH2 0x228
0x46a PUSH2 0xe5f
0x46d JUMP
---
0x466: JUMPDEST 
0x467: V415 = 0x228
0x46a: V416 = 0xe5f
0x46d: JUMP 0xe5f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x46e
[0x46e:0x489]
---
Predecessors: []
Successors: []
---
0x46e JUMPDEST
0x46f PUSH1 0x40
0x471 MLOAD
0x472 PUSH1 0x1
0x474 PUSH1 0xa0
0x476 PUSH1 0x2
0x478 EXP
0x479 SUB
0x47a SWAP1
0x47b SWAP2
0x47c AND
0x47d DUP2
0x47e MSTORE
0x47f PUSH1 0x20
0x481 ADD
0x482 PUSH1 0x40
0x484 MLOAD
0x485 DUP1
0x486 SWAP2
0x487 SUB
0x488 SWAP1
0x489 RETURN
---
0x46e: JUMPDEST 
0x46f: V417 = 0x40
0x471: V418 = M[0x40]
0x472: V419 = 0x1
0x474: V420 = 0xa0
0x476: V421 = 0x2
0x478: V422 = EXP 0x2 0xa0
0x479: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47c: V424 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x47e: M[V418] = V424
0x47f: V425 = 0x20
0x481: V426 = ADD 0x20 V418
0x482: V427 = 0x40
0x484: V428 = M[0x40]
0x487: V429 = SUB V426 V428
0x489: RETURN V428 V429
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x48a
[0x48a:0x490]
---
Predecessors: [0x101]
Successors: [0x491, 0x495]
---
0x48a JUMPDEST
0x48b CALLVALUE
0x48c ISZERO
0x48d PUSH2 0x495
0x490 JUMPI
---
0x48a: JUMPDEST 
0x48b: V430 = CALLVALUE
0x48c: V431 = ISZERO V430
0x48d: V432 = 0x495
0x490: JUMPI 0x495 V431
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x491
[0x491:0x494]
---
Predecessors: [0x48a]
Successors: []
---
0x491 PUSH1 0x0
0x493 DUP1
0x494 REVERT
---
0x491: V433 = 0x0
0x494: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x495
[0x495:0x49c]
---
Predecessors: [0x48a]
Successors: [0xe6e]
---
0x495 JUMPDEST
0x496 PUSH2 0x201
0x499 PUSH2 0xe6e
0x49c JUMP
---
0x495: JUMPDEST 
0x496: V434 = 0x201
0x499: V435 = 0xe6e
0x49c: JUMP 0xe6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V12, 0x201]

================================

Block 0x49d
[0x49d:0x4b0]
---
Predecessors: []
Successors: []
---
0x49d JUMPDEST
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 SWAP1
0x4a2 ISZERO
0x4a3 ISZERO
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH1 0x20
0x4a8 ADD
0x4a9 PUSH1 0x40
0x4ab MLOAD
0x4ac DUP1
0x4ad SWAP2
0x4ae SUB
0x4af SWAP1
0x4b0 RETURN
---
0x49d: JUMPDEST 
0x49e: V436 = 0x40
0x4a0: V437 = M[0x40]
0x4a2: V438 = ISZERO S0
0x4a3: V439 = ISZERO V438
0x4a5: M[V437] = V439
0x4a6: V440 = 0x20
0x4a8: V441 = ADD 0x20 V437
0x4a9: V442 = 0x40
0x4ab: V443 = M[0x40]
0x4ae: V444 = SUB V441 V443
0x4b0: RETURN V443 V444
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4b1
[0x4b1:0x4b7]
---
Predecessors: [0x10c]
Successors: [0x4b8, 0x4bc]
---
0x4b1 JUMPDEST
0x4b2 CALLVALUE
0x4b3 ISZERO
0x4b4 PUSH2 0x4bc
0x4b7 JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V445 = CALLVALUE
0x4b3: V446 = ISZERO V445
0x4b4: V447 = 0x4bc
0x4b7: JUMPI 0x4bc V446
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b8
[0x4b8:0x4bb]
---
Predecessors: [0x4b1]
Successors: []
---
0x4b8 PUSH1 0x0
0x4ba DUP1
0x4bb REVERT
---
0x4b8: V448 = 0x0
0x4bb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4bc
[0x4bc:0x4c3]
---
Predecessors: [0x4b1]
Successors: [0xd90]
---
0x4bc JUMPDEST
0x4bd PUSH2 0x3a2
0x4c0 PUSH2 0xd90
0x4c3 JUMP
---
0x4bc: JUMPDEST 
0x4bd: V449 = 0x3a2
0x4c0: V450 = 0xd90
0x4c3: JUMP 0xd90
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a2]
Exit stack: [V12, 0x3a2]

================================

Block 0x4c4
[0x4c4:0x4c5]
---
Predecessors: []
Successors: []
---
0x4c4 JUMPDEST
0x4c5 STOP
---
0x4c4: JUMPDEST 
0x4c5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4c6
[0x4c6:0x507]
---
Predecessors: [0x11c, 0xa5d]
Successors: [0x508, 0x50c]
---
0x4c6 JUMPDEST
0x4c7 PUSH1 0x2
0x4c9 SLOAD
0x4ca PUSH1 0x0
0x4cc SWAP1
0x4cd DUP2
0x4ce SWAP1
0x4cf DUP2
0x4d0 SWAP1
0x4d1 PUSH1 0x1
0x4d3 PUSH1 0xa0
0x4d5 PUSH1 0x2
0x4d7 EXP
0x4d8 SUB
0x4d9 AND
0x4da PUSH4 0xd0e30db0
0x4df CALLVALUE
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 DUP3
0x4e4 PUSH4 0xffffffff
0x4e9 AND
0x4ea PUSH1 0xe0
0x4ec PUSH1 0x2
0x4ee EXP
0x4ef MUL
0x4f0 DUP2
0x4f1 MSTORE
0x4f2 PUSH1 0x4
0x4f4 ADD
0x4f5 PUSH1 0x0
0x4f7 PUSH1 0x40
0x4f9 MLOAD
0x4fa DUP1
0x4fb DUP4
0x4fc SUB
0x4fd DUP2
0x4fe DUP6
0x4ff DUP9
0x500 DUP1
0x501 EXTCODESIZE
0x502 ISZERO
0x503 ISZERO
0x504 PUSH2 0x50c
0x507 JUMPI
---
0x4c6: JUMPDEST 
0x4c7: V451 = 0x2
0x4c9: V452 = S[0x2]
0x4ca: V453 = 0x0
0x4d1: V454 = 0x1
0x4d3: V455 = 0xa0
0x4d5: V456 = 0x2
0x4d7: V457 = EXP 0x2 0xa0
0x4d8: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d9: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x4da: V460 = 0xd0e30db0
0x4df: V461 = CALLVALUE
0x4e0: V462 = 0x40
0x4e2: V463 = M[0x40]
0x4e4: V464 = 0xffffffff
0x4e9: V465 = AND 0xffffffff 0xd0e30db0
0x4ea: V466 = 0xe0
0x4ec: V467 = 0x2
0x4ee: V468 = EXP 0x2 0xe0
0x4ef: V469 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x4f1: M[V463] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x4f2: V470 = 0x4
0x4f4: V471 = ADD 0x4 V463
0x4f5: V472 = 0x0
0x4f7: V473 = 0x40
0x4f9: V474 = M[0x40]
0x4fc: V475 = SUB V471 V474
0x501: V476 = EXTCODESIZE V459
0x502: V477 = ISZERO V476
0x503: V478 = ISZERO V477
0x504: V479 = 0x50c
0x507: JUMPI 0x50c V478
---
Entry stack: [V12, 0x124, 0x0, S1, {0x124, 0xa68}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V459, 0xd0e30db0, V461, V471, 0x0, V474, V475, V474, V461, V459]
Exit stack: [V12, 0x124, 0x0, S1, {0x124, 0xa68}, 0x0, 0x0, 0x0, V459, 0xd0e30db0, V461, V471, 0x0, V474, V475, V474, V461, V459]

================================

Block 0x508
[0x508:0x50b]
---
Predecessors: [0x4c6]
Successors: []
---
0x508 PUSH1 0x0
0x50a DUP1
0x50b REVERT
---
0x508: V480 = 0x0
0x50b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S14, {0x124, 0xa68}, 0x0, 0x0, 0x0, V459, 0xd0e30db0, V461, V471, 0x0, V474, V475, V474, V461, V459]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S14, {0x124, 0xa68}, 0x0, 0x0, 0x0, V459, 0xd0e30db0, V461, V471, 0x0, V474, V475, V474, V461, V459]

================================

Block 0x50c
[0x50c:0x518]
---
Predecessors: [0x4c6]
Successors: [0x519, 0x51d]
---
0x50c JUMPDEST
0x50d PUSH2 0x25ee
0x510 GAS
0x511 SUB
0x512 CALL
0x513 ISZERO
0x514 ISZERO
0x515 PUSH2 0x51d
0x518 JUMPI
---
0x50c: JUMPDEST 
0x50d: V481 = 0x25ee
0x510: V482 = GAS
0x511: V483 = SUB V482 0x25ee
0x512: V484 = CALL V483 V459 V461 V474 V475 V474 0x0
0x513: V485 = ISZERO V484
0x514: V486 = ISZERO V485
0x515: V487 = 0x51d
0x518: JUMPI 0x51d V486
---
Entry stack: [V12, 0x124, 0x0, S14, {0x124, 0xa68}, 0x0, 0x0, 0x0, V459, 0xd0e30db0, V461, V471, 0x0, V474, V475, V474, V461, V459]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S14, {0x124, 0xa68}, 0x0, 0x0, 0x0, V459, 0xd0e30db0, V461, V471]

================================

Block 0x519
[0x519:0x51c]
---
Predecessors: [0x50c]
Successors: []
---
0x519 PUSH1 0x0
0x51b DUP1
0x51c REVERT
---
0x519: V488 = 0x0
0x51c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S8, {0x124, 0xa68}, 0x0, 0x0, 0x0, S3, 0xd0e30db0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S8, {0x124, 0xa68}, 0x0, 0x0, 0x0, S3, 0xd0e30db0, S1, S0]

================================

Block 0x51d
[0x51d:0x582]
---
Predecessors: [0x50c]
Successors: [0x583, 0x587]
---
0x51d JUMPDEST
0x51e POP
0x51f POP
0x520 PUSH1 0x2
0x522 SLOAD
0x523 PUSH1 0x1
0x525 SLOAD
0x526 PUSH1 0x1
0x528 PUSH1 0xa0
0x52a PUSH1 0x2
0x52c EXP
0x52d SUB
0x52e SWAP2
0x52f DUP3
0x530 AND
0x531 SWAP4
0x532 POP
0x533 PUSH4 0x95ea7b3
0x538 SWAP3
0x539 POP
0x53a AND
0x53b PUSH1 0x0
0x53d DUP1
0x53e PUSH1 0x40
0x540 MLOAD
0x541 PUSH1 0x20
0x543 ADD
0x544 MSTORE
0x545 PUSH1 0x40
0x547 MLOAD
0x548 PUSH1 0xe0
0x54a PUSH1 0x2
0x54c EXP
0x54d PUSH4 0xffffffff
0x552 DUP6
0x553 AND
0x554 MUL
0x555 DUP2
0x556 MSTORE
0x557 PUSH1 0x1
0x559 PUSH1 0xa0
0x55b PUSH1 0x2
0x55d EXP
0x55e SUB
0x55f SWAP1
0x560 SWAP3
0x561 AND
0x562 PUSH1 0x4
0x564 DUP4
0x565 ADD
0x566 MSTORE
0x567 PUSH1 0x24
0x569 DUP3
0x56a ADD
0x56b MSTORE
0x56c PUSH1 0x44
0x56e ADD
0x56f PUSH1 0x20
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 DUP4
0x576 SUB
0x577 DUP2
0x578 PUSH1 0x0
0x57a DUP8
0x57b DUP1
0x57c EXTCODESIZE
0x57d ISZERO
0x57e ISZERO
0x57f PUSH2 0x587
0x582 JUMPI
---
0x51d: JUMPDEST 
0x520: V489 = 0x2
0x522: V490 = S[0x2]
0x523: V491 = 0x1
0x525: V492 = S[0x1]
0x526: V493 = 0x1
0x528: V494 = 0xa0
0x52a: V495 = 0x2
0x52c: V496 = EXP 0x2 0xa0
0x52d: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x530: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x533: V499 = 0x95ea7b3
0x53a: V500 = AND V492 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V501 = 0x0
0x53e: V502 = 0x40
0x540: V503 = M[0x40]
0x541: V504 = 0x20
0x543: V505 = ADD 0x20 V503
0x544: M[V505] = 0x0
0x545: V506 = 0x40
0x547: V507 = M[0x40]
0x548: V508 = 0xe0
0x54a: V509 = 0x2
0x54c: V510 = EXP 0x2 0xe0
0x54d: V511 = 0xffffffff
0x553: V512 = AND 0x95ea7b3 0xffffffff
0x554: V513 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x556: M[V507] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x557: V514 = 0x1
0x559: V515 = 0xa0
0x55b: V516 = 0x2
0x55d: V517 = EXP 0x2 0xa0
0x55e: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x561: V519 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x562: V520 = 0x4
0x565: V521 = ADD V507 0x4
0x566: M[V521] = V519
0x567: V522 = 0x24
0x56a: V523 = ADD V507 0x24
0x56b: M[V523] = 0x0
0x56c: V524 = 0x44
0x56e: V525 = ADD 0x44 V507
0x56f: V526 = 0x20
0x571: V527 = 0x40
0x573: V528 = M[0x40]
0x576: V529 = SUB V525 V528
0x578: V530 = 0x0
0x57c: V531 = EXTCODESIZE V498
0x57d: V532 = ISZERO V531
0x57e: V533 = ISZERO V532
0x57f: V534 = 0x587
0x582: JUMPI 0x587 V533
---
Entry stack: [V12, 0x124, 0x0, S8, {0x124, 0xa68}, 0x0, 0x0, 0x0, S3, 0xd0e30db0, S1, S0]
Stack pops: 4
Stack additions: [V498, 0x95ea7b3, V525, 0x20, V528, V529, V528, 0x0, V498]
Exit stack: [V12, 0x124, 0x0, S8, {0x124, 0xa68}, 0x0, 0x0, 0x0, V498, 0x95ea7b3, V525, 0x20, V528, V529, V528, 0x0, V498]

================================

Block 0x583
[0x583:0x586]
---
Predecessors: [0x51d]
Successors: []
---
0x583 PUSH1 0x0
0x585 DUP1
0x586 REVERT
---
0x583: V535 = 0x0
0x586: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V498, 0x95ea7b3, V525, 0x20, V528, V529, V528, 0x0, V498]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V498, 0x95ea7b3, V525, 0x20, V528, V529, V528, 0x0, V498]

================================

Block 0x587
[0x587:0x593]
---
Predecessors: [0x51d]
Successors: [0x594, 0x598]
---
0x587 JUMPDEST
0x588 PUSH2 0x2c6
0x58b GAS
0x58c SUB
0x58d CALL
0x58e ISZERO
0x58f ISZERO
0x590 PUSH2 0x598
0x593 JUMPI
---
0x587: JUMPDEST 
0x588: V536 = 0x2c6
0x58b: V537 = GAS
0x58c: V538 = SUB V537 0x2c6
0x58d: V539 = CALL V538 V498 0x0 V528 V529 V528 0x20
0x58e: V540 = ISZERO V539
0x58f: V541 = ISZERO V540
0x590: V542 = 0x598
0x593: JUMPI 0x598 V541
---
Entry stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V498, 0x95ea7b3, V525, 0x20, V528, V529, V528, 0x0, V498]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V498, 0x95ea7b3, V525]

================================

Block 0x594
[0x594:0x597]
---
Predecessors: [0x587]
Successors: []
---
0x594 PUSH1 0x0
0x596 DUP1
0x597 REVERT
---
0x594: V543 = 0x0
0x597: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0x95ea7b3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0x95ea7b3, S0]

================================

Block 0x598
[0x598:0x5a8]
---
Predecessors: [0x587]
Successors: [0x5a9, 0x5aa]
---
0x598 JUMPDEST
0x599 POP
0x59a POP
0x59b POP
0x59c PUSH1 0x40
0x59e MLOAD
0x59f DUP1
0x5a0 MLOAD
0x5a1 SWAP1
0x5a2 POP
0x5a3 ISZERO
0x5a4 ISZERO
0x5a5 PUSH2 0x5aa
0x5a8 JUMPI
---
0x598: JUMPDEST 
0x59c: V544 = 0x40
0x59e: V545 = M[0x40]
0x5a0: V546 = M[V545]
0x5a3: V547 = ISZERO V546
0x5a4: V548 = ISZERO V547
0x5a5: V549 = 0x5aa
0x5a8: JUMPI 0x5aa V548
---
Entry stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0x95ea7b3, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0]

================================

Block 0x5a9
[0x5a9:0x5a9]
---
Predecessors: [0x598]
Successors: []
---
0x5a9 INVALID
---
0x5a9: INVALID 
---
Entry stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, 0x0, 0x0, 0x0]

================================

Block 0x5aa
[0x5aa:0x60b]
---
Predecessors: [0x598]
Successors: [0x60c, 0x610]
---
0x5aa JUMPDEST
0x5ab PUSH1 0x2
0x5ad SLOAD
0x5ae PUSH1 0x1
0x5b0 SLOAD
0x5b1 PUSH1 0x1
0x5b3 PUSH1 0xa0
0x5b5 PUSH1 0x2
0x5b7 EXP
0x5b8 SUB
0x5b9 SWAP2
0x5ba DUP3
0x5bb AND
0x5bc SWAP2
0x5bd PUSH4 0x95ea7b3
0x5c2 SWAP2
0x5c3 AND
0x5c4 CALLVALUE
0x5c5 PUSH1 0x0
0x5c7 PUSH1 0x40
0x5c9 MLOAD
0x5ca PUSH1 0x20
0x5cc ADD
0x5cd MSTORE
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 PUSH1 0xe0
0x5d3 PUSH1 0x2
0x5d5 EXP
0x5d6 PUSH4 0xffffffff
0x5db DUP6
0x5dc AND
0x5dd MUL
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH1 0x1
0x5e2 PUSH1 0xa0
0x5e4 PUSH1 0x2
0x5e6 EXP
0x5e7 SUB
0x5e8 SWAP1
0x5e9 SWAP3
0x5ea AND
0x5eb PUSH1 0x4
0x5ed DUP4
0x5ee ADD
0x5ef MSTORE
0x5f0 PUSH1 0x24
0x5f2 DUP3
0x5f3 ADD
0x5f4 MSTORE
0x5f5 PUSH1 0x44
0x5f7 ADD
0x5f8 PUSH1 0x20
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd DUP1
0x5fe DUP4
0x5ff SUB
0x600 DUP2
0x601 PUSH1 0x0
0x603 DUP8
0x604 DUP1
0x605 EXTCODESIZE
0x606 ISZERO
0x607 ISZERO
0x608 PUSH2 0x610
0x60b JUMPI
---
0x5aa: JUMPDEST 
0x5ab: V550 = 0x2
0x5ad: V551 = S[0x2]
0x5ae: V552 = 0x1
0x5b0: V553 = S[0x1]
0x5b1: V554 = 0x1
0x5b3: V555 = 0xa0
0x5b5: V556 = 0x2
0x5b7: V557 = EXP 0x2 0xa0
0x5b8: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bb: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x5bd: V560 = 0x95ea7b3
0x5c3: V561 = AND V553 0xffffffffffffffffffffffffffffffffffffffff
0x5c4: V562 = CALLVALUE
0x5c5: V563 = 0x0
0x5c7: V564 = 0x40
0x5c9: V565 = M[0x40]
0x5ca: V566 = 0x20
0x5cc: V567 = ADD 0x20 V565
0x5cd: M[V567] = 0x0
0x5ce: V568 = 0x40
0x5d0: V569 = M[0x40]
0x5d1: V570 = 0xe0
0x5d3: V571 = 0x2
0x5d5: V572 = EXP 0x2 0xe0
0x5d6: V573 = 0xffffffff
0x5dc: V574 = AND 0x95ea7b3 0xffffffff
0x5dd: V575 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x5df: M[V569] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x5e0: V576 = 0x1
0x5e2: V577 = 0xa0
0x5e4: V578 = 0x2
0x5e6: V579 = EXP 0x2 0xa0
0x5e7: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ea: V581 = AND V561 0xffffffffffffffffffffffffffffffffffffffff
0x5eb: V582 = 0x4
0x5ee: V583 = ADD V569 0x4
0x5ef: M[V583] = V581
0x5f0: V584 = 0x24
0x5f3: V585 = ADD V569 0x24
0x5f4: M[V585] = V562
0x5f5: V586 = 0x44
0x5f7: V587 = ADD 0x44 V569
0x5f8: V588 = 0x20
0x5fa: V589 = 0x40
0x5fc: V590 = M[0x40]
0x5ff: V591 = SUB V587 V590
0x601: V592 = 0x0
0x605: V593 = EXTCODESIZE V559
0x606: V594 = ISZERO V593
0x607: V595 = ISZERO V594
0x608: V596 = 0x610
0x60b: JUMPI 0x610 V595
---
Entry stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V559, 0x95ea7b3, V587, 0x20, V590, V591, V590, 0x0, V559]
Exit stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, 0x0, 0x0, 0x0, V559, 0x95ea7b3, V587, 0x20, V590, V591, V590, 0x0, V559]

================================

Block 0x60c
[0x60c:0x60f]
---
Predecessors: [0x5aa]
Successors: []
---
0x60c PUSH1 0x0
0x60e DUP1
0x60f REVERT
---
0x60c: V597 = 0x0
0x60f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V559, 0x95ea7b3, V587, 0x20, V590, V591, V590, 0x0, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V559, 0x95ea7b3, V587, 0x20, V590, V591, V590, 0x0, V559]

================================

Block 0x610
[0x610:0x61c]
---
Predecessors: [0x5aa]
Successors: [0x61d, 0x621]
---
0x610 JUMPDEST
0x611 PUSH2 0x2c6
0x614 GAS
0x615 SUB
0x616 CALL
0x617 ISZERO
0x618 ISZERO
0x619 PUSH2 0x621
0x61c JUMPI
---
0x610: JUMPDEST 
0x611: V598 = 0x2c6
0x614: V599 = GAS
0x615: V600 = SUB V599 0x2c6
0x616: V601 = CALL V600 V559 0x0 V590 V591 V590 0x20
0x617: V602 = ISZERO V601
0x618: V603 = ISZERO V602
0x619: V604 = 0x621
0x61c: JUMPI 0x621 V603
---
Entry stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V559, 0x95ea7b3, V587, 0x20, V590, V591, V590, 0x0, V559]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V559, 0x95ea7b3, V587]

================================

Block 0x61d
[0x61d:0x620]
---
Predecessors: [0x610]
Successors: []
---
0x61d PUSH1 0x0
0x61f DUP1
0x620 REVERT
---
0x61d: V605 = 0x0
0x620: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0x95ea7b3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0x95ea7b3, S0]

================================

Block 0x621
[0x621:0x631]
---
Predecessors: [0x610]
Successors: [0x632, 0x633]
---
0x621 JUMPDEST
0x622 POP
0x623 POP
0x624 POP
0x625 PUSH1 0x40
0x627 MLOAD
0x628 DUP1
0x629 MLOAD
0x62a SWAP1
0x62b POP
0x62c ISZERO
0x62d ISZERO
0x62e PUSH2 0x633
0x631 JUMPI
---
0x621: JUMPDEST 
0x625: V606 = 0x40
0x627: V607 = M[0x40]
0x629: V608 = M[V607]
0x62c: V609 = ISZERO V608
0x62d: V610 = ISZERO V609
0x62e: V611 = 0x633
0x631: JUMPI 0x633 V610
---
Entry stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0x95ea7b3, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0]

================================

Block 0x632
[0x632:0x632]
---
Predecessors: [0x621]
Successors: []
---
0x632 INVALID
---
0x632: INVALID 
---
Entry stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, 0x0, 0x0, 0x0]

================================

Block 0x633
[0x633:0x676]
---
Predecessors: [0x621]
Successors: [0x677, 0x67b]
---
0x633 JUMPDEST
0x634 PUSH1 0x1
0x636 SLOAD
0x637 PUSH1 0x1
0x639 PUSH1 0xa0
0x63b PUSH1 0x2
0x63d EXP
0x63e SUB
0x63f AND
0x640 PUSH4 0xfc0c546a
0x645 PUSH1 0x0
0x647 PUSH1 0x40
0x649 MLOAD
0x64a PUSH1 0x20
0x64c ADD
0x64d MSTORE
0x64e PUSH1 0x40
0x650 MLOAD
0x651 DUP2
0x652 PUSH4 0xffffffff
0x657 AND
0x658 PUSH1 0xe0
0x65a PUSH1 0x2
0x65c EXP
0x65d MUL
0x65e DUP2
0x65f MSTORE
0x660 PUSH1 0x4
0x662 ADD
0x663 PUSH1 0x20
0x665 PUSH1 0x40
0x667 MLOAD
0x668 DUP1
0x669 DUP4
0x66a SUB
0x66b DUP2
0x66c PUSH1 0x0
0x66e DUP8
0x66f DUP1
0x670 EXTCODESIZE
0x671 ISZERO
0x672 ISZERO
0x673 PUSH2 0x67b
0x676 JUMPI
---
0x633: JUMPDEST 
0x634: V612 = 0x1
0x636: V613 = S[0x1]
0x637: V614 = 0x1
0x639: V615 = 0xa0
0x63b: V616 = 0x2
0x63d: V617 = EXP 0x2 0xa0
0x63e: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63f: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0x640: V620 = 0xfc0c546a
0x645: V621 = 0x0
0x647: V622 = 0x40
0x649: V623 = M[0x40]
0x64a: V624 = 0x20
0x64c: V625 = ADD 0x20 V623
0x64d: M[V625] = 0x0
0x64e: V626 = 0x40
0x650: V627 = M[0x40]
0x652: V628 = 0xffffffff
0x657: V629 = AND 0xffffffff 0xfc0c546a
0x658: V630 = 0xe0
0x65a: V631 = 0x2
0x65c: V632 = EXP 0x2 0xe0
0x65d: V633 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfc0c546a
0x65f: M[V627] = 0xfc0c546a00000000000000000000000000000000000000000000000000000000
0x660: V634 = 0x4
0x662: V635 = ADD 0x4 V627
0x663: V636 = 0x20
0x665: V637 = 0x40
0x667: V638 = M[0x40]
0x66a: V639 = SUB V635 V638
0x66c: V640 = 0x0
0x670: V641 = EXTCODESIZE V619
0x671: V642 = ISZERO V641
0x672: V643 = ISZERO V642
0x673: V644 = 0x67b
0x676: JUMPI 0x67b V643
---
Entry stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V619, 0xfc0c546a, V635, 0x20, V638, V639, V638, 0x0, V619]
Exit stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, 0x0, 0x0, 0x0, V619, 0xfc0c546a, V635, 0x20, V638, V639, V638, 0x0, V619]

================================

Block 0x677
[0x677:0x67a]
---
Predecessors: [0x633]
Successors: []
---
0x677 PUSH1 0x0
0x679 DUP1
0x67a REVERT
---
0x677: V645 = 0x0
0x67a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V619, 0xfc0c546a, V635, 0x20, V638, V639, V638, 0x0, V619]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V619, 0xfc0c546a, V635, 0x20, V638, V639, V638, 0x0, V619]

================================

Block 0x67b
[0x67b:0x687]
---
Predecessors: [0x633]
Successors: [0x688, 0x68c]
---
0x67b JUMPDEST
0x67c PUSH2 0x2c6
0x67f GAS
0x680 SUB
0x681 CALL
0x682 ISZERO
0x683 ISZERO
0x684 PUSH2 0x68c
0x687 JUMPI
---
0x67b: JUMPDEST 
0x67c: V646 = 0x2c6
0x67f: V647 = GAS
0x680: V648 = SUB V647 0x2c6
0x681: V649 = CALL V648 V619 0x0 V638 V639 V638 0x20
0x682: V650 = ISZERO V649
0x683: V651 = ISZERO V650
0x684: V652 = 0x68c
0x687: JUMPI 0x68c V651
---
Entry stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V619, 0xfc0c546a, V635, 0x20, V638, V639, V638, 0x0, V619]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, 0x0, 0x0, V619, 0xfc0c546a, V635]

================================

Block 0x688
[0x688:0x68b]
---
Predecessors: [0x67b]
Successors: []
---
0x688 PUSH1 0x0
0x68a DUP1
0x68b REVERT
---
0x688: V653 = 0x0
0x68b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0xfc0c546a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0xfc0c546a, S0]

================================

Block 0x68c
[0x68c:0x70f]
---
Predecessors: [0x67b]
Successors: [0x710, 0x714]
---
0x68c JUMPDEST
0x68d POP
0x68e POP
0x68f POP
0x690 PUSH1 0x40
0x692 MLOAD
0x693 DUP1
0x694 MLOAD
0x695 PUSH1 0x1
0x697 DUP1
0x698 SLOAD
0x699 PUSH1 0x2
0x69b SLOAD
0x69c SWAP3
0x69d SWAP6
0x69e POP
0x69f PUSH1 0x1
0x6a1 PUSH1 0xa0
0x6a3 PUSH1 0x2
0x6a5 EXP
0x6a6 SUB
0x6a7 SWAP1
0x6a8 DUP2
0x6a9 AND
0x6aa SWAP4
0x6ab POP
0x6ac PUSH4 0x5e5144eb
0x6b1 SWAP3
0x6b2 AND
0x6b3 SWAP1
0x6b4 DUP6
0x6b5 SWAP1
0x6b6 CALLVALUE
0x6b7 SWAP1
0x6b8 PUSH1 0x0
0x6ba PUSH1 0x40
0x6bc MLOAD
0x6bd PUSH1 0x20
0x6bf ADD
0x6c0 MSTORE
0x6c1 PUSH1 0x40
0x6c3 MLOAD
0x6c4 PUSH1 0xe0
0x6c6 PUSH1 0x2
0x6c8 EXP
0x6c9 PUSH4 0xffffffff
0x6ce DUP8
0x6cf AND
0x6d0 MUL
0x6d1 DUP2
0x6d2 MSTORE
0x6d3 PUSH1 0x1
0x6d5 PUSH1 0xa0
0x6d7 PUSH1 0x2
0x6d9 EXP
0x6da SUB
0x6db SWAP5
0x6dc DUP6
0x6dd AND
0x6de PUSH1 0x4
0x6e0 DUP3
0x6e1 ADD
0x6e2 MSTORE
0x6e3 SWAP3
0x6e4 SWAP1
0x6e5 SWAP4
0x6e6 AND
0x6e7 PUSH1 0x24
0x6e9 DUP4
0x6ea ADD
0x6eb MSTORE
0x6ec PUSH1 0x44
0x6ee DUP3
0x6ef ADD
0x6f0 MSTORE
0x6f1 PUSH1 0x64
0x6f3 DUP2
0x6f4 ADD
0x6f5 SWAP2
0x6f6 SWAP1
0x6f7 SWAP2
0x6f8 MSTORE
0x6f9 PUSH1 0x84
0x6fb ADD
0x6fc PUSH1 0x20
0x6fe PUSH1 0x40
0x700 MLOAD
0x701 DUP1
0x702 DUP4
0x703 SUB
0x704 DUP2
0x705 PUSH1 0x0
0x707 DUP8
0x708 DUP1
0x709 EXTCODESIZE
0x70a ISZERO
0x70b ISZERO
0x70c PUSH2 0x714
0x70f JUMPI
---
0x68c: JUMPDEST 
0x690: V654 = 0x40
0x692: V655 = M[0x40]
0x694: V656 = M[V655]
0x695: V657 = 0x1
0x698: V658 = S[0x1]
0x699: V659 = 0x2
0x69b: V660 = S[0x2]
0x69f: V661 = 0x1
0x6a1: V662 = 0xa0
0x6a3: V663 = 0x2
0x6a5: V664 = EXP 0x2 0xa0
0x6a6: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a9: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x6ac: V667 = 0x5e5144eb
0x6b2: V668 = AND V660 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V669 = CALLVALUE
0x6b8: V670 = 0x0
0x6ba: V671 = 0x40
0x6bc: V672 = M[0x40]
0x6bd: V673 = 0x20
0x6bf: V674 = ADD 0x20 V672
0x6c0: M[V674] = 0x0
0x6c1: V675 = 0x40
0x6c3: V676 = M[0x40]
0x6c4: V677 = 0xe0
0x6c6: V678 = 0x2
0x6c8: V679 = EXP 0x2 0xe0
0x6c9: V680 = 0xffffffff
0x6cf: V681 = AND 0x5e5144eb 0xffffffff
0x6d0: V682 = MUL 0x5e5144eb 0x100000000000000000000000000000000000000000000000000000000
0x6d2: M[V676] = 0x5e5144eb00000000000000000000000000000000000000000000000000000000
0x6d3: V683 = 0x1
0x6d5: V684 = 0xa0
0x6d7: V685 = 0x2
0x6d9: V686 = EXP 0x2 0xa0
0x6da: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dd: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0x6de: V689 = 0x4
0x6e1: V690 = ADD V676 0x4
0x6e2: M[V690] = V688
0x6e6: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0x6e7: V692 = 0x24
0x6ea: V693 = ADD V676 0x24
0x6eb: M[V693] = V691
0x6ec: V694 = 0x44
0x6ef: V695 = ADD V676 0x44
0x6f0: M[V695] = V669
0x6f1: V696 = 0x64
0x6f4: V697 = ADD V676 0x64
0x6f8: M[V697] = 0x1
0x6f9: V698 = 0x84
0x6fb: V699 = ADD 0x84 V676
0x6fc: V700 = 0x20
0x6fe: V701 = 0x40
0x700: V702 = M[0x40]
0x703: V703 = SUB V699 V702
0x705: V704 = 0x0
0x709: V705 = EXTCODESIZE V666
0x70a: V706 = ISZERO V705
0x70b: V707 = ISZERO V706
0x70c: V708 = 0x714
0x70f: JUMPI 0x714 V707
---
Entry stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, 0x0, 0x0, S2, 0xfc0c546a, S0]
Stack pops: 5
Stack additions: [V656, S3, V666, 0x5e5144eb, V699, 0x20, V702, V703, V702, 0x0, V666]
Exit stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, V656, 0x0, V666, 0x5e5144eb, V699, 0x20, V702, V703, V702, 0x0, V666]

================================

Block 0x710
[0x710:0x713]
---
Predecessors: [0x68c]
Successors: []
---
0x710 PUSH1 0x0
0x712 DUP1
0x713 REVERT
---
0x710: V709 = 0x0
0x713: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, V656, 0x0, V666, 0x5e5144eb, V699, 0x20, V702, V703, V702, 0x0, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, V656, 0x0, V666, 0x5e5144eb, V699, 0x20, V702, V703, V702, 0x0, V666]

================================

Block 0x714
[0x714:0x720]
---
Predecessors: [0x68c]
Successors: [0x721, 0x725]
---
0x714 JUMPDEST
0x715 PUSH2 0x2c6
0x718 GAS
0x719 SUB
0x71a CALL
0x71b ISZERO
0x71c ISZERO
0x71d PUSH2 0x725
0x720 JUMPI
---
0x714: JUMPDEST 
0x715: V710 = 0x2c6
0x718: V711 = GAS
0x719: V712 = SUB V711 0x2c6
0x71a: V713 = CALL V712 V666 0x0 V702 V703 V702 0x20
0x71b: V714 = ISZERO V713
0x71c: V715 = ISZERO V714
0x71d: V716 = 0x725
0x720: JUMPI 0x725 V715
---
Entry stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, V656, 0x0, V666, 0x5e5144eb, V699, 0x20, V702, V703, V702, 0x0, V666]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S13, {0x124, 0xa68}, 0x0, V656, 0x0, V666, 0x5e5144eb, V699]

================================

Block 0x721
[0x721:0x724]
---
Predecessors: [0x714]
Successors: []
---
0x721 PUSH1 0x0
0x723 DUP1
0x724 REVERT
---
0x721: V717 = 0x0
0x724: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, S4, 0x0, S2, 0x5e5144eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, S4, 0x0, S2, 0x5e5144eb, S0]

================================

Block 0x725
[0x725:0x798]
---
Predecessors: [0x714]
Successors: [0x799]
---
0x725 JUMPDEST
0x726 POP
0x727 POP
0x728 POP
0x729 PUSH1 0x40
0x72b MLOAD
0x72c DUP1
0x72d MLOAD
0x72e PUSH1 0x7
0x730 DUP1
0x731 SLOAD
0x732 DUP3
0x733 ADD
0x734 SWAP1
0x735 SSTORE
0x736 PUSH1 0x1
0x738 PUSH1 0xa0
0x73a PUSH1 0x2
0x73c EXP
0x73d SUB
0x73e CALLER
0x73f AND
0x740 PUSH1 0x0
0x742 DUP2
0x743 DUP2
0x744 MSTORE
0x745 PUSH1 0x6
0x747 PUSH1 0x20
0x749 MSTORE
0x74a PUSH1 0x40
0x74c SWAP1
0x74d DUP2
0x74e SWAP1
0x74f SHA3
0x750 DUP1
0x751 SLOAD
0x752 DUP5
0x753 ADD
0x754 SWAP1
0x755 SSTORE
0x756 SWAP2
0x757 SWAP4
0x758 POP
0x759 SWAP2
0x75a POP
0x75b PUSH32 0x5b4dd6fe0156913c8cdc76239ca451f2c587f105edad7ede4739ead6adab1438
0x77c SWAP1
0x77d DUP6
0x77e SWAP1
0x77f DUP5
0x780 SWAP1
0x781 MLOAD
0x782 SWAP2
0x783 DUP3
0x784 MSTORE
0x785 PUSH1 0x20
0x787 DUP3
0x788 ADD
0x789 MSTORE
0x78a PUSH1 0x40
0x78c SWAP1
0x78d DUP2
0x78e ADD
0x78f SWAP1
0x790 MLOAD
0x791 DUP1
0x792 SWAP2
0x793 SUB
0x794 SWAP1
0x795 LOG2
0x796 DUP1
0x797 SWAP3
0x798 POP
---
0x725: JUMPDEST 
0x729: V718 = 0x40
0x72b: V719 = M[0x40]
0x72d: V720 = M[V719]
0x72e: V721 = 0x7
0x731: V722 = S[0x7]
0x733: V723 = ADD V720 V722
0x735: S[0x7] = V723
0x736: V724 = 0x1
0x738: V725 = 0xa0
0x73a: V726 = 0x2
0x73c: V727 = EXP 0x2 0xa0
0x73d: V728 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73e: V729 = CALLER
0x73f: V730 = AND V729 0xffffffffffffffffffffffffffffffffffffffff
0x740: V731 = 0x0
0x744: M[0x0] = V730
0x745: V732 = 0x6
0x747: V733 = 0x20
0x749: M[0x20] = 0x6
0x74a: V734 = 0x40
0x74f: V735 = SHA3 0x0 0x40
0x751: V736 = S[V735]
0x753: V737 = ADD V720 V736
0x755: S[V735] = V737
0x75b: V738 = 0x5b4dd6fe0156913c8cdc76239ca451f2c587f105edad7ede4739ead6adab1438
0x781: V739 = M[0x40]
0x784: M[V739] = 0x0
0x785: V740 = 0x20
0x788: V741 = ADD V739 0x20
0x789: M[V741] = V720
0x78a: V742 = 0x40
0x78e: V743 = ADD 0x40 V739
0x790: V744 = M[0x40]
0x793: V745 = SUB V743 V744
0x795: LOG V744 V745 0x5b4dd6fe0156913c8cdc76239ca451f2c587f105edad7ede4739ead6adab1438 V730
---
Entry stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, 0x0, S4, 0x0, S2, 0x5e5144eb, S0]
Stack pops: 6
Stack additions: [V720, S4, V720]
Exit stack: [V12, 0x124, 0x0, S7, {0x124, 0xa68}, V720, S4, V720]

================================

Block 0x799
[0x799:0x79d]
---
Predecessors: [0x725]
Successors: [0x124, 0xa68]
---
0x799 JUMPDEST
0x79a POP
0x79b POP
0x79c SWAP1
0x79d JUMP
---
0x799: JUMPDEST 
0x79d: JUMP {0x124, 0xa68}
---
Entry stack: [V12, 0x124, 0x0, S4, {0x124, 0xa68}, V720, S1, V720]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0x124, 0x0, S4, V720]

================================

Block 0x79e
[0x79e:0x7af]
---
Predecessors: [0x141]
Successors: [0x124]
---
0x79e JUMPDEST
0x79f PUSH1 0x6
0x7a1 PUSH1 0x20
0x7a3 MSTORE
0x7a4 PUSH1 0x0
0x7a6 SWAP1
0x7a7 DUP2
0x7a8 MSTORE
0x7a9 PUSH1 0x40
0x7ab SWAP1
0x7ac SHA3
0x7ad SLOAD
0x7ae DUP2
0x7af JUMP
---
0x79e: JUMPDEST 
0x79f: V746 = 0x6
0x7a1: V747 = 0x20
0x7a3: M[0x20] = 0x6
0x7a4: V748 = 0x0
0x7a8: M[0x0] = V104
0x7a9: V749 = 0x40
0x7ac: V750 = SHA3 0x0 0x40
0x7ad: V751 = S[V750]
0x7af: JUMP 0x124
---
Entry stack: [V12, 0x124, V104]
Stack pops: 2
Stack additions: [S1, V751]
Exit stack: [V12, 0x124, V751]

================================

Block 0x7b0
[0x7b0:0x826]
---
Predecessors: [0x172]
Successors: [0x827, 0x82b]
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x1
0x7b3 SLOAD
0x7b4 PUSH1 0x2
0x7b6 SLOAD
0x7b7 PUSH1 0x4
0x7b9 SLOAD
0x7ba PUSH1 0x0
0x7bc SWAP3
0x7bd PUSH1 0x1
0x7bf PUSH1 0xa0
0x7c1 PUSH1 0x2
0x7c3 EXP
0x7c4 SUB
0x7c5 SWAP1
0x7c6 DUP2
0x7c7 AND
0x7c8 SWAP3
0x7c9 PUSH4 0x1e1401f8
0x7ce SWAP3
0x7cf SWAP1
0x7d0 DUP3
0x7d1 AND
0x7d2 SWAP2
0x7d3 AND
0x7d4 DUP6
0x7d5 DUP6
0x7d6 PUSH1 0x40
0x7d8 MLOAD
0x7d9 PUSH1 0x20
0x7db ADD
0x7dc MSTORE
0x7dd PUSH1 0x40
0x7df MLOAD
0x7e0 PUSH1 0xe0
0x7e2 PUSH1 0x2
0x7e4 EXP
0x7e5 PUSH4 0xffffffff
0x7ea DUP7
0x7eb AND
0x7ec MUL
0x7ed DUP2
0x7ee MSTORE
0x7ef PUSH1 0x1
0x7f1 PUSH1 0xa0
0x7f3 PUSH1 0x2
0x7f5 EXP
0x7f6 SUB
0x7f7 SWAP4
0x7f8 DUP5
0x7f9 AND
0x7fa PUSH1 0x4
0x7fc DUP3
0x7fd ADD
0x7fe MSTORE
0x7ff SWAP2
0x800 SWAP1
0x801 SWAP3
0x802 AND
0x803 PUSH1 0x24
0x805 DUP3
0x806 ADD
0x807 MSTORE
0x808 PUSH1 0x44
0x80a DUP2
0x80b ADD
0x80c SWAP2
0x80d SWAP1
0x80e SWAP2
0x80f MSTORE
0x810 PUSH1 0x64
0x812 ADD
0x813 PUSH1 0x20
0x815 PUSH1 0x40
0x817 MLOAD
0x818 DUP1
0x819 DUP4
0x81a SUB
0x81b DUP2
0x81c PUSH1 0x0
0x81e DUP8
0x81f DUP1
0x820 EXTCODESIZE
0x821 ISZERO
0x822 ISZERO
0x823 PUSH2 0x82b
0x826 JUMPI
---
0x7b0: JUMPDEST 
0x7b1: V752 = 0x1
0x7b3: V753 = S[0x1]
0x7b4: V754 = 0x2
0x7b6: V755 = S[0x2]
0x7b7: V756 = 0x4
0x7b9: V757 = S[0x4]
0x7ba: V758 = 0x0
0x7bd: V759 = 0x1
0x7bf: V760 = 0xa0
0x7c1: V761 = 0x2
0x7c3: V762 = EXP 0x2 0xa0
0x7c4: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c7: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0x7c9: V765 = 0x1e1401f8
0x7d1: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0x7d3: V767 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0x7d6: V768 = 0x40
0x7d8: V769 = M[0x40]
0x7d9: V770 = 0x20
0x7db: V771 = ADD 0x20 V769
0x7dc: M[V771] = 0x0
0x7dd: V772 = 0x40
0x7df: V773 = M[0x40]
0x7e0: V774 = 0xe0
0x7e2: V775 = 0x2
0x7e4: V776 = EXP 0x2 0xe0
0x7e5: V777 = 0xffffffff
0x7eb: V778 = AND 0x1e1401f8 0xffffffff
0x7ec: V779 = MUL 0x1e1401f8 0x100000000000000000000000000000000000000000000000000000000
0x7ee: M[V773] = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x7ef: V780 = 0x1
0x7f1: V781 = 0xa0
0x7f3: V782 = 0x2
0x7f5: V783 = EXP 0x2 0xa0
0x7f6: V784 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f9: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V766
0x7fa: V786 = 0x4
0x7fd: V787 = ADD V773 0x4
0x7fe: M[V787] = V785
0x802: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0x803: V789 = 0x24
0x806: V790 = ADD V773 0x24
0x807: M[V790] = V788
0x808: V791 = 0x44
0x80b: V792 = ADD V773 0x44
0x80f: M[V792] = V119
0x810: V793 = 0x64
0x812: V794 = ADD 0x64 V773
0x813: V795 = 0x20
0x815: V796 = 0x40
0x817: V797 = M[0x40]
0x81a: V798 = SUB V794 V797
0x81c: V799 = 0x0
0x820: V800 = EXTCODESIZE V764
0x821: V801 = ISZERO V800
0x822: V802 = ISZERO V801
0x823: V803 = 0x82b
0x826: JUMPI 0x82b V802
---
Entry stack: [V12, 0x124, V119]
Stack pops: 1
Stack additions: [S0, 0x0, V764, 0x1e1401f8, V794, 0x20, V797, V798, V797, 0x0, V764]
Exit stack: [V12, 0x124, V119, 0x0, V764, 0x1e1401f8, V794, 0x20, V797, V798, V797, 0x0, V764]

================================

Block 0x827
[0x827:0x82a]
---
Predecessors: [0x7b0]
Successors: []
---
0x827 PUSH1 0x0
0x829 DUP1
0x82a REVERT
---
0x827: V804 = 0x0
0x82a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, V119, 0x0, V764, 0x1e1401f8, V794, 0x20, V797, V798, V797, 0x0, V764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, V119, 0x0, V764, 0x1e1401f8, V794, 0x20, V797, V798, V797, 0x0, V764]

================================

Block 0x82b
[0x82b:0x837]
---
Predecessors: [0x7b0, 0xa94, 0xce4, 0xda1]
Successors: [0x838, 0x83c]
---
0x82b JUMPDEST
0x82c PUSH2 0x2c6
0x82f GAS
0x830 SUB
0x831 CALL
0x832 ISZERO
0x833 ISZERO
0x834 PUSH2 0x83c
0x837 JUMPI
---
0x82b: JUMPDEST 
0x82c: V805 = 0x2c6
0x82f: V806 = GAS
0x830: V807 = SUB V806 0x2c6
0x831: V808 = CALL V807 S0 0x0 S2 S3 S4 0x20
0x832: V809 = ISZERO V808
0x833: V810 = ISZERO V809
0x834: V811 = 0x83c
0x837: JUMPI 0x83c V810
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S12, {0x124, 0x879}, S10, 0x0, S8, {0x1e1401f8, 0x70a08231}, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S12, {0x124, 0x879}, S10, 0x0, S8, {0x1e1401f8, 0x70a08231}, S6]

================================

Block 0x838
[0x838:0x83b]
---
Predecessors: [0x82b]
Successors: []
---
0x838 PUSH1 0x0
0x83a DUP1
0x83b REVERT
---
0x838: V812 = 0x0
0x83b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S6, {0x124, 0x879}, S4, 0x0, S2, {0x1e1401f8, 0x70a08231}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S6, {0x124, 0x879}, S4, 0x0, S2, {0x1e1401f8, 0x70a08231}, S0]

================================

Block 0x83c
[0x83c:0x847]
---
Predecessors: [0x82b, 0xaef, 0xd3f, 0xe1c]
Successors: [0x848]
---
0x83c JUMPDEST
0x83d POP
0x83e POP
0x83f POP
0x840 PUSH1 0x40
0x842 MLOAD
0x843 DUP1
0x844 MLOAD
0x845 SWAP2
0x846 POP
0x847 POP
---
0x83c: JUMPDEST 
0x840: V813 = 0x40
0x842: V814 = M[0x40]
0x844: V815 = M[V814]
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S6, {0x124, 0x879}, S4, 0x0, S2, {0x1e1401f8, 0x70a08231}, S0]
Stack pops: 4
Stack additions: [V815]
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S6, {0x124, 0x879}, S4, V815]

================================

Block 0x848
[0x848:0x84c]
---
Predecessors: [0x83c]
Successors: [0x124, 0x879]
---
0x848 JUMPDEST
0x849 SWAP2
0x84a SWAP1
0x84b POP
0x84c JUMP
---
0x848: JUMPDEST 
0x84c: JUMP {0x124, 0x879}
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S3, {0x124, 0x879}, S1, V815]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S3, V815]

================================

Block 0x84d
[0x84d:0x878]
---
Predecessors: [0x19a]
Successors: [0xce4]
---
0x84d JUMPDEST
0x84e PUSH1 0x1
0x850 SLOAD
0x851 PUSH1 0x4
0x853 SLOAD
0x854 PUSH1 0x2
0x856 SLOAD
0x857 PUSH1 0x0
0x859 SWAP3
0x85a PUSH1 0x1
0x85c PUSH1 0xa0
0x85e PUSH1 0x2
0x860 EXP
0x861 SUB
0x862 SWAP1
0x863 DUP2
0x864 AND
0x865 SWAP3
0x866 PUSH4 0x1e1401f8
0x86b SWAP3
0x86c SWAP1
0x86d DUP3
0x86e AND
0x86f SWAP2
0x870 AND
0x871 PUSH2 0x879
0x874 CALLER
0x875 PUSH2 0xce4
0x878 JUMP
---
0x84d: JUMPDEST 
0x84e: V816 = 0x1
0x850: V817 = S[0x1]
0x851: V818 = 0x4
0x853: V819 = S[0x4]
0x854: V820 = 0x2
0x856: V821 = S[0x2]
0x857: V822 = 0x0
0x85a: V823 = 0x1
0x85c: V824 = 0xa0
0x85e: V825 = 0x2
0x860: V826 = EXP 0x2 0xa0
0x861: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x864: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0x866: V829 = 0x1e1401f8
0x86e: V830 = AND 0xffffffffffffffffffffffffffffffffffffffff V819
0x870: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0x871: V832 = 0x879
0x874: V833 = CALLER
0x875: V834 = 0xce4
0x878: JUMP 0xce4
---
Entry stack: [V12, 0x124]
Stack pops: 0
Stack additions: [0x0, V828, 0x1e1401f8, V830, V831, 0x879, V833]
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, V831, 0x879, V833]

================================

Block 0x879
[0x879:0x8cc]
---
Predecessors: [0x848]
Successors: [0x8cd, 0x8d1]
---
0x879 JUMPDEST
0x87a PUSH1 0x0
0x87c PUSH1 0x40
0x87e MLOAD
0x87f PUSH1 0x20
0x881 ADD
0x882 MSTORE
0x883 PUSH1 0x40
0x885 MLOAD
0x886 PUSH1 0xe0
0x888 PUSH1 0x2
0x88a EXP
0x88b PUSH4 0xffffffff
0x890 DUP7
0x891 AND
0x892 MUL
0x893 DUP2
0x894 MSTORE
0x895 PUSH1 0x1
0x897 PUSH1 0xa0
0x899 PUSH1 0x2
0x89b EXP
0x89c SUB
0x89d SWAP4
0x89e DUP5
0x89f AND
0x8a0 PUSH1 0x4
0x8a2 DUP3
0x8a3 ADD
0x8a4 MSTORE
0x8a5 SWAP2
0x8a6 SWAP1
0x8a7 SWAP3
0x8a8 AND
0x8a9 PUSH1 0x24
0x8ab DUP3
0x8ac ADD
0x8ad MSTORE
0x8ae PUSH1 0x44
0x8b0 DUP2
0x8b1 ADD
0x8b2 SWAP2
0x8b3 SWAP1
0x8b4 SWAP2
0x8b5 MSTORE
0x8b6 PUSH1 0x64
0x8b8 ADD
0x8b9 PUSH1 0x20
0x8bb PUSH1 0x40
0x8bd MLOAD
0x8be DUP1
0x8bf DUP4
0x8c0 SUB
0x8c1 DUP2
0x8c2 PUSH1 0x0
0x8c4 DUP8
0x8c5 DUP1
0x8c6 EXTCODESIZE
0x8c7 ISZERO
0x8c8 ISZERO
0x8c9 PUSH2 0x8d1
0x8cc JUMPI
---
0x879: JUMPDEST 
0x87a: V835 = 0x0
0x87c: V836 = 0x40
0x87e: V837 = M[0x40]
0x87f: V838 = 0x20
0x881: V839 = ADD 0x20 V837
0x882: M[V839] = 0x0
0x883: V840 = 0x40
0x885: V841 = M[0x40]
0x886: V842 = 0xe0
0x888: V843 = 0x2
0x88a: V844 = EXP 0x2 0xe0
0x88b: V845 = 0xffffffff
0x891: V846 = AND 0x1e1401f8 0xffffffff
0x892: V847 = MUL 0x1e1401f8 0x100000000000000000000000000000000000000000000000000000000
0x894: M[V841] = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x895: V848 = 0x1
0x897: V849 = 0xa0
0x899: V850 = 0x2
0x89b: V851 = EXP 0x2 0xa0
0x89c: V852 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89f: V853 = AND 0xffffffffffffffffffffffffffffffffffffffff V830
0x8a0: V854 = 0x4
0x8a3: V855 = ADD V841 0x4
0x8a4: M[V855] = V853
0x8a8: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x8a9: V857 = 0x24
0x8ac: V858 = ADD V841 0x24
0x8ad: M[V858] = V856
0x8ae: V859 = 0x44
0x8b1: V860 = ADD V841 0x44
0x8b5: M[V860] = S0
0x8b6: V861 = 0x64
0x8b8: V862 = ADD 0x64 V841
0x8b9: V863 = 0x20
0x8bb: V864 = 0x40
0x8bd: V865 = M[0x40]
0x8c0: V866 = SUB V862 V865
0x8c2: V867 = 0x0
0x8c6: V868 = EXTCODESIZE V828
0x8c7: V869 = ISZERO V868
0x8c8: V870 = ISZERO V869
0x8c9: V871 = 0x8d1
0x8cc: JUMPI 0x8d1 V870
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V862, 0x20, V865, V866, V865, 0x0, S4]
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V862, 0x20, V865, V866, V865, 0x0, V828]

================================

Block 0x8cd
[0x8cd:0x8d0]
---
Predecessors: [0x879]
Successors: []
---
0x8cd PUSH1 0x0
0x8cf DUP1
0x8d0 REVERT
---
0x8cd: V872 = 0x0
0x8d0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V862, 0x20, V865, V866, V865, 0x0, V828]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V862, 0x20, V865, V866, V865, 0x0, V828]

================================

Block 0x8d1
[0x8d1:0x8dd]
---
Predecessors: [0x879]
Successors: [0x8de, 0x8e2]
---
0x8d1 JUMPDEST
0x8d2 PUSH2 0x2c6
0x8d5 GAS
0x8d6 SUB
0x8d7 CALL
0x8d8 ISZERO
0x8d9 ISZERO
0x8da PUSH2 0x8e2
0x8dd JUMPI
---
0x8d1: JUMPDEST 
0x8d2: V873 = 0x2c6
0x8d5: V874 = GAS
0x8d6: V875 = SUB V874 0x2c6
0x8d7: V876 = CALL V875 V828 0x0 V865 V866 V865 0x20
0x8d8: V877 = ISZERO V876
0x8d9: V878 = ISZERO V877
0x8da: V879 = 0x8e2
0x8dd: JUMPI 0x8e2 V878
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V862, 0x20, V865, V866, V865, 0x0, V828]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V862]

================================

Block 0x8de
[0x8de:0x8e1]
---
Predecessors: [0x8d1]
Successors: []
---
0x8de PUSH1 0x0
0x8e0 DUP1
0x8e1 REVERT
---
0x8de: V880 = 0x0
0x8e1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V862]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V862]

================================

Block 0x8e2
[0x8e2:0x8ed]
---
Predecessors: [0x8d1]
Successors: [0x8ee]
---
0x8e2 JUMPDEST
0x8e3 POP
0x8e4 POP
0x8e5 POP
0x8e6 PUSH1 0x40
0x8e8 MLOAD
0x8e9 DUP1
0x8ea MLOAD
0x8eb SWAP2
0x8ec POP
0x8ed POP
---
0x8e2: JUMPDEST 
0x8e6: V881 = 0x40
0x8e8: V882 = M[0x40]
0x8ea: V883 = M[V882]
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V862]
Stack pops: 4
Stack additions: [V883]
Exit stack: [V12, 0x124, V883]

================================

Block 0x8ee
[0x8ee:0x8f0]
---
Predecessors: [0x8e2]
Successors: [0x124]
---
0x8ee JUMPDEST
0x8ef SWAP1
0x8f0 JUMP
---
0x8ee: JUMPDEST 
0x8f0: JUMP 0x124
---
Entry stack: [V12, 0x124, V883]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V883]

================================

Block 0x8f1
[0x8f1:0x95a]
---
Predecessors: [0x1bf]
Successors: [0x95b, 0x95f]
---
0x8f1 JUMPDEST
0x8f2 PUSH1 0x1
0x8f4 SLOAD
0x8f5 PUSH1 0x0
0x8f7 SWAP1
0x8f8 PUSH1 0x1
0x8fa PUSH1 0xa0
0x8fc PUSH1 0x2
0x8fe EXP
0x8ff SUB
0x900 AND
0x901 PUSH4 0x1e1401f8
0x906 DUP6
0x907 DUP6
0x908 DUP6
0x909 DUP6
0x90a PUSH1 0x40
0x90c MLOAD
0x90d PUSH1 0x20
0x90f ADD
0x910 MSTORE
0x911 PUSH1 0x40
0x913 MLOAD
0x914 PUSH1 0xe0
0x916 PUSH1 0x2
0x918 EXP
0x919 PUSH4 0xffffffff
0x91e DUP7
0x91f AND
0x920 MUL
0x921 DUP2
0x922 MSTORE
0x923 PUSH1 0x1
0x925 PUSH1 0xa0
0x927 PUSH1 0x2
0x929 EXP
0x92a SUB
0x92b SWAP4
0x92c DUP5
0x92d AND
0x92e PUSH1 0x4
0x930 DUP3
0x931 ADD
0x932 MSTORE
0x933 SWAP2
0x934 SWAP1
0x935 SWAP3
0x936 AND
0x937 PUSH1 0x24
0x939 DUP3
0x93a ADD
0x93b MSTORE
0x93c PUSH1 0x44
0x93e DUP2
0x93f ADD
0x940 SWAP2
0x941 SWAP1
0x942 SWAP2
0x943 MSTORE
0x944 PUSH1 0x64
0x946 ADD
0x947 PUSH1 0x20
0x949 PUSH1 0x40
0x94b MLOAD
0x94c DUP1
0x94d DUP4
0x94e SUB
0x94f DUP2
0x950 PUSH1 0x0
0x952 DUP8
0x953 DUP1
0x954 EXTCODESIZE
0x955 ISZERO
0x956 ISZERO
0x957 PUSH2 0x95f
0x95a JUMPI
---
0x8f1: JUMPDEST 
0x8f2: V884 = 0x1
0x8f4: V885 = S[0x1]
0x8f5: V886 = 0x0
0x8f8: V887 = 0x1
0x8fa: V888 = 0xa0
0x8fc: V889 = 0x2
0x8fe: V890 = EXP 0x2 0xa0
0x8ff: V891 = SUB 0x10000000000000000000000000000000000000000 0x1
0x900: V892 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0x901: V893 = 0x1e1401f8
0x90a: V894 = 0x40
0x90c: V895 = M[0x40]
0x90d: V896 = 0x20
0x90f: V897 = ADD 0x20 V895
0x910: M[V897] = 0x0
0x911: V898 = 0x40
0x913: V899 = M[0x40]
0x914: V900 = 0xe0
0x916: V901 = 0x2
0x918: V902 = EXP 0x2 0xe0
0x919: V903 = 0xffffffff
0x91f: V904 = AND 0x1e1401f8 0xffffffff
0x920: V905 = MUL 0x1e1401f8 0x100000000000000000000000000000000000000000000000000000000
0x922: M[V899] = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x923: V906 = 0x1
0x925: V907 = 0xa0
0x927: V908 = 0x2
0x929: V909 = EXP 0x2 0xa0
0x92a: V910 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92d: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x92e: V912 = 0x4
0x931: V913 = ADD V899 0x4
0x932: M[V913] = V911
0x936: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x937: V915 = 0x24
0x93a: V916 = ADD V899 0x24
0x93b: M[V916] = V914
0x93c: V917 = 0x44
0x93f: V918 = ADD V899 0x44
0x943: M[V918] = V158
0x944: V919 = 0x64
0x946: V920 = ADD 0x64 V899
0x947: V921 = 0x20
0x949: V922 = 0x40
0x94b: V923 = M[0x40]
0x94e: V924 = SUB V920 V923
0x950: V925 = 0x0
0x954: V926 = EXTCODESIZE V892
0x955: V927 = ISZERO V926
0x956: V928 = ISZERO V927
0x957: V929 = 0x95f
0x95a: JUMPI 0x95f V928
---
Entry stack: [V12, 0x124, V153, V156, V158]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V892, 0x1e1401f8, V920, 0x20, V923, V924, V923, 0x0, V892]
Exit stack: [V12, 0x124, V153, V156, V158, 0x0, V892, 0x1e1401f8, V920, 0x20, V923, V924, V923, 0x0, V892]

================================

Block 0x95b
[0x95b:0x95e]
---
Predecessors: [0x8f1]
Successors: []
---
0x95b PUSH1 0x0
0x95d DUP1
0x95e REVERT
---
0x95b: V930 = 0x0
0x95e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, V153, V156, V158, 0x0, V892, 0x1e1401f8, V920, 0x20, V923, V924, V923, 0x0, V892]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, V153, V156, V158, 0x0, V892, 0x1e1401f8, V920, 0x20, V923, V924, V923, 0x0, V892]

================================

Block 0x95f
[0x95f:0x96b]
---
Predecessors: [0x8f1]
Successors: [0x96c, 0x970]
---
0x95f JUMPDEST
0x960 PUSH2 0x2c6
0x963 GAS
0x964 SUB
0x965 CALL
0x966 ISZERO
0x967 ISZERO
0x968 PUSH2 0x970
0x96b JUMPI
---
0x95f: JUMPDEST 
0x960: V931 = 0x2c6
0x963: V932 = GAS
0x964: V933 = SUB V932 0x2c6
0x965: V934 = CALL V933 V892 0x0 V923 V924 V923 0x20
0x966: V935 = ISZERO V934
0x967: V936 = ISZERO V935
0x968: V937 = 0x970
0x96b: JUMPI 0x970 V936
---
Entry stack: [V12, 0x124, V153, V156, V158, 0x0, V892, 0x1e1401f8, V920, 0x20, V923, V924, V923, 0x0, V892]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, V153, V156, V158, 0x0, V892, 0x1e1401f8, V920]

================================

Block 0x96c
[0x96c:0x96f]
---
Predecessors: [0x95f]
Successors: []
---
0x96c PUSH1 0x0
0x96e DUP1
0x96f REVERT
---
0x96c: V938 = 0x0
0x96f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, V153, V156, V158, 0x0, V892, 0x1e1401f8, V920]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, V153, V156, V158, 0x0, V892, 0x1e1401f8, V920]

================================

Block 0x970
[0x970:0x97b]
---
Predecessors: [0x95f]
Successors: [0x97c]
---
0x970 JUMPDEST
0x971 POP
0x972 POP
0x973 POP
0x974 PUSH1 0x40
0x976 MLOAD
0x977 DUP1
0x978 MLOAD
0x979 SWAP2
0x97a POP
0x97b POP
---
0x970: JUMPDEST 
0x974: V939 = 0x40
0x976: V940 = M[0x40]
0x978: V941 = M[V940]
---
Entry stack: [V12, 0x124, V153, V156, V158, 0x0, V892, 0x1e1401f8, V920]
Stack pops: 4
Stack additions: [V941]
Exit stack: [V12, 0x124, V153, V156, V158, V941]

================================

Block 0x97c
[0x97c:0x982]
---
Predecessors: [0x970]
Successors: [0x124]
---
0x97c JUMPDEST
0x97d SWAP4
0x97e SWAP3
0x97f POP
0x980 POP
0x981 POP
0x982 JUMP
---
0x97c: JUMPDEST 
0x982: JUMP 0x124
---
Entry stack: [V12, 0x124, V153, V156, V158, V941]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, V941]

================================

Block 0x983
[0x983:0x9a3]
---
Predecessors: [0x1f9]
Successors: [0x9a4, 0x9ac]
---
0x983 JUMPDEST
0x984 PUSH1 0x1
0x986 PUSH1 0xa0
0x988 PUSH1 0x2
0x98a EXP
0x98b SUB
0x98c CALLER
0x98d AND
0x98e PUSH1 0x0
0x990 SWAP1
0x991 DUP2
0x992 MSTORE
0x993 PUSH1 0x6
0x995 PUSH1 0x20
0x997 MSTORE
0x998 PUSH1 0x40
0x99a DUP2
0x99b SHA3
0x99c SLOAD
0x99d DUP1
0x99e ISZERO
0x99f ISZERO
0x9a0 PUSH2 0x9ac
0x9a3 JUMPI
---
0x983: JUMPDEST 
0x984: V942 = 0x1
0x986: V943 = 0xa0
0x988: V944 = 0x2
0x98a: V945 = EXP 0x2 0xa0
0x98b: V946 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98c: V947 = CALLER
0x98d: V948 = AND V947 0xffffffffffffffffffffffffffffffffffffffff
0x98e: V949 = 0x0
0x992: M[0x0] = V948
0x993: V950 = 0x6
0x995: V951 = 0x20
0x997: M[0x20] = 0x6
0x998: V952 = 0x40
0x99b: V953 = SHA3 0x0 0x40
0x99c: V954 = S[V953]
0x99e: V955 = ISZERO V954
0x99f: V956 = ISZERO V955
0x9a0: V957 = 0x9ac
0x9a3: JUMPI 0x9ac V956
---
Entry stack: [V12, 0x201]
Stack pops: 0
Stack additions: [0x0, V954]
Exit stack: [V12, 0x201, 0x0, V954]

================================

Block 0x9a4
[0x9a4:0x9ab]
---
Predecessors: [0x983]
Successors: [0xa49]
---
0x9a4 PUSH1 0x0
0x9a6 SWAP2
0x9a7 POP
0x9a8 PUSH2 0xa49
0x9ab JUMP
---
0x9a4: V958 = 0x0
0x9a8: V959 = 0xa49
0x9ab: JUMP 0xa49
---
Entry stack: [V12, 0x201, 0x0, V954]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x201, 0x0, V954]

================================

Block 0x9ac
[0x9ac:0xa21]
---
Predecessors: [0x983]
Successors: [0xa22, 0xa26]
---
0x9ac JUMPDEST
0x9ad PUSH1 0x1
0x9af PUSH1 0xa0
0x9b1 PUSH1 0x2
0x9b3 EXP
0x9b4 SUB
0x9b5 CALLER
0x9b6 DUP2
0x9b7 DUP2
0x9b8 AND
0x9b9 PUSH1 0x0
0x9bb SWAP1
0x9bc DUP2
0x9bd MSTORE
0x9be PUSH1 0x6
0x9c0 PUSH1 0x20
0x9c2 MSTORE
0x9c3 PUSH1 0x40
0x9c5 DUP1
0x9c6 DUP3
0x9c7 SHA3
0x9c8 DUP1
0x9c9 SLOAD
0x9ca DUP7
0x9cb SWAP1
0x9cc SUB
0x9cd SWAP1
0x9ce SSTORE
0x9cf PUSH1 0x3
0x9d1 SLOAD
0x9d2 SWAP1
0x9d3 SWAP4
0x9d4 AND
0x9d5 SWAP3
0x9d6 PUSH4 0xa9059cbb
0x9db SWAP3
0x9dc SWAP2
0x9dd DUP6
0x9de SWAP2
0x9df MLOAD
0x9e0 PUSH1 0x20
0x9e2 ADD
0x9e3 MSTORE
0x9e4 PUSH1 0x40
0x9e6 MLOAD
0x9e7 PUSH1 0xe0
0x9e9 PUSH1 0x2
0x9eb EXP
0x9ec PUSH4 0xffffffff
0x9f1 DUP6
0x9f2 AND
0x9f3 MUL
0x9f4 DUP2
0x9f5 MSTORE
0x9f6 PUSH1 0x1
0x9f8 PUSH1 0xa0
0x9fa PUSH1 0x2
0x9fc EXP
0x9fd SUB
0x9fe SWAP1
0x9ff SWAP3
0xa00 AND
0xa01 PUSH1 0x4
0xa03 DUP4
0xa04 ADD
0xa05 MSTORE
0xa06 PUSH1 0x24
0xa08 DUP3
0xa09 ADD
0xa0a MSTORE
0xa0b PUSH1 0x44
0xa0d ADD
0xa0e PUSH1 0x20
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 DUP1
0xa14 DUP4
0xa15 SUB
0xa16 DUP2
0xa17 PUSH1 0x0
0xa19 DUP8
0xa1a DUP1
0xa1b EXTCODESIZE
0xa1c ISZERO
0xa1d ISZERO
0xa1e PUSH2 0xa26
0xa21 JUMPI
---
0x9ac: JUMPDEST 
0x9ad: V960 = 0x1
0x9af: V961 = 0xa0
0x9b1: V962 = 0x2
0x9b3: V963 = EXP 0x2 0xa0
0x9b4: V964 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b5: V965 = CALLER
0x9b8: V966 = AND V965 0xffffffffffffffffffffffffffffffffffffffff
0x9b9: V967 = 0x0
0x9bd: M[0x0] = V966
0x9be: V968 = 0x6
0x9c0: V969 = 0x20
0x9c2: M[0x20] = 0x6
0x9c3: V970 = 0x40
0x9c7: V971 = SHA3 0x0 0x40
0x9c9: V972 = S[V971]
0x9cc: V973 = SUB V972 V954
0x9ce: S[V971] = V973
0x9cf: V974 = 0x3
0x9d1: V975 = S[0x3]
0x9d4: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff V975
0x9d6: V977 = 0xa9059cbb
0x9df: V978 = M[0x40]
0x9e0: V979 = 0x20
0x9e2: V980 = ADD 0x20 V978
0x9e3: M[V980] = 0x0
0x9e4: V981 = 0x40
0x9e6: V982 = M[0x40]
0x9e7: V983 = 0xe0
0x9e9: V984 = 0x2
0x9eb: V985 = EXP 0x2 0xe0
0x9ec: V986 = 0xffffffff
0x9f2: V987 = AND 0xa9059cbb 0xffffffff
0x9f3: V988 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x9f5: M[V982] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9f6: V989 = 0x1
0x9f8: V990 = 0xa0
0x9fa: V991 = 0x2
0x9fc: V992 = EXP 0x2 0xa0
0x9fd: V993 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa00: V994 = AND V965 0xffffffffffffffffffffffffffffffffffffffff
0xa01: V995 = 0x4
0xa04: V996 = ADD V982 0x4
0xa05: M[V996] = V994
0xa06: V997 = 0x24
0xa09: V998 = ADD V982 0x24
0xa0a: M[V998] = V954
0xa0b: V999 = 0x44
0xa0d: V1000 = ADD 0x44 V982
0xa0e: V1001 = 0x20
0xa10: V1002 = 0x40
0xa12: V1003 = M[0x40]
0xa15: V1004 = SUB V1000 V1003
0xa17: V1005 = 0x0
0xa1b: V1006 = EXTCODESIZE V976
0xa1c: V1007 = ISZERO V1006
0xa1d: V1008 = ISZERO V1007
0xa1e: V1009 = 0xa26
0xa21: JUMPI 0xa26 V1008
---
Entry stack: [V12, 0x201, 0x0, V954]
Stack pops: 1
Stack additions: [S0, V976, 0xa9059cbb, V1000, 0x20, V1003, V1004, V1003, 0x0, V976]
Exit stack: [V12, 0x201, 0x0, V954, V976, 0xa9059cbb, V1000, 0x20, V1003, V1004, V1003, 0x0, V976]

================================

Block 0xa22
[0xa22:0xa25]
---
Predecessors: [0x9ac]
Successors: []
---
0xa22 PUSH1 0x0
0xa24 DUP1
0xa25 REVERT
---
0xa22: V1010 = 0x0
0xa25: REVERT 0x0 0x0
---
Entry stack: [V12, 0x201, 0x0, V954, V976, 0xa9059cbb, V1000, 0x20, V1003, V1004, V1003, 0x0, V976]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V954, V976, 0xa9059cbb, V1000, 0x20, V1003, V1004, V1003, 0x0, V976]

================================

Block 0xa26
[0xa26:0xa32]
---
Predecessors: [0x9ac]
Successors: [0xa33, 0xa37]
---
0xa26 JUMPDEST
0xa27 PUSH2 0x2c6
0xa2a GAS
0xa2b SUB
0xa2c CALL
0xa2d ISZERO
0xa2e ISZERO
0xa2f PUSH2 0xa37
0xa32 JUMPI
---
0xa26: JUMPDEST 
0xa27: V1011 = 0x2c6
0xa2a: V1012 = GAS
0xa2b: V1013 = SUB V1012 0x2c6
0xa2c: V1014 = CALL V1013 V976 0x0 V1003 V1004 V1003 0x20
0xa2d: V1015 = ISZERO V1014
0xa2e: V1016 = ISZERO V1015
0xa2f: V1017 = 0xa37
0xa32: JUMPI 0xa37 V1016
---
Entry stack: [V12, 0x201, 0x0, V954, V976, 0xa9059cbb, V1000, 0x20, V1003, V1004, V1003, 0x0, V976]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V954, V976, 0xa9059cbb, V1000]

================================

Block 0xa33
[0xa33:0xa36]
---
Predecessors: [0xa26]
Successors: []
---
0xa33 PUSH1 0x0
0xa35 DUP1
0xa36 REVERT
---
0xa33: V1018 = 0x0
0xa36: REVERT 0x0 0x0
---
Entry stack: [V12, 0x201, 0x0, V954, V976, 0xa9059cbb, V1000]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V954, V976, 0xa9059cbb, V1000]

================================

Block 0xa37
[0xa37:0xa47]
---
Predecessors: [0xa26]
Successors: [0xa48, 0xa49]
---
0xa37 JUMPDEST
0xa38 POP
0xa39 POP
0xa3a POP
0xa3b PUSH1 0x40
0xa3d MLOAD
0xa3e DUP1
0xa3f MLOAD
0xa40 SWAP1
0xa41 POP
0xa42 ISZERO
0xa43 ISZERO
0xa44 PUSH2 0xa49
0xa47 JUMPI
---
0xa37: JUMPDEST 
0xa3b: V1019 = 0x40
0xa3d: V1020 = M[0x40]
0xa3f: V1021 = M[V1020]
0xa42: V1022 = ISZERO V1021
0xa43: V1023 = ISZERO V1022
0xa44: V1024 = 0xa49
0xa47: JUMPI 0xa49 V1023
---
Entry stack: [V12, 0x201, 0x0, V954, V976, 0xa9059cbb, V1000]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V954]

================================

Block 0xa48
[0xa48:0xa48]
---
Predecessors: [0xa37]
Successors: []
---
0xa48 INVALID
---
0xa48: INVALID 
---
Entry stack: [V12, 0x201, 0x0, V954]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V954]

================================

Block 0xa49
[0xa49:0xa49]
---
Predecessors: [0x9a4, 0xa37, 0xe88]
Successors: [0xa4a]
---
0xa49 JUMPDEST
---
0xa49: JUMPDEST 
---
Entry stack: [V12, 0x201, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, S0]

================================

Block 0xa4a
[0xa4a:0xa4d]
---
Predecessors: [0xa49]
Successors: [0x201]
---
0xa4a JUMPDEST
0xa4b POP
0xa4c SWAP1
0xa4d JUMP
---
0xa4a: JUMPDEST 
0xa4d: JUMP 0x201
---
Entry stack: [V12, 0x201, 0x0, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x0]

================================

Block 0xa4e
[0xa4e:0xa5c]
---
Predecessors: [0x220]
Successors: [0x228]
---
0xa4e JUMPDEST
0xa4f PUSH1 0x5
0xa51 SLOAD
0xa52 PUSH1 0x1
0xa54 PUSH1 0xa0
0xa56 PUSH1 0x2
0xa58 EXP
0xa59 SUB
0xa5a AND
0xa5b DUP2
0xa5c JUMP
---
0xa4e: JUMPDEST 
0xa4f: V1025 = 0x5
0xa51: V1026 = S[0x5]
0xa52: V1027 = 0x1
0xa54: V1028 = 0xa0
0xa56: V1029 = 0x2
0xa58: V1030 = EXP 0x2 0xa0
0xa59: V1031 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5a: V1032 = AND 0xffffffffffffffffffffffffffffffffffffffff V1026
0xa5c: JUMP 0x228
---
Entry stack: [V12, 0x228]
Stack pops: 1
Stack additions: [S0, V1032]
Exit stack: [V12, 0x228, V1032]

================================

Block 0xa5d
[0xa5d:0xa67]
---
Predecessors: [0x244]
Successors: [0x4c6]
---
0xa5d JUMPDEST
0xa5e PUSH1 0x0
0xa60 DUP1
0xa61 PUSH2 0xa68
0xa64 PUSH2 0x4c6
0xa67 JUMP
---
0xa5d: JUMPDEST 
0xa5e: V1033 = 0x0
0xa61: V1034 = 0xa68
0xa64: V1035 = 0x4c6
0xa67: JUMP 0x4c6
---
Entry stack: [V12, 0x124]
Stack pops: 0
Stack additions: [0x0, 0x0, 0xa68]
Exit stack: [V12, 0x124, 0x0, 0x0, 0xa68]

================================

Block 0xa68
[0xa68:0xa73]
---
Predecessors: [0x799]
Successors: [0xa74, 0xa7d]
---
0xa68 JUMPDEST
0xa69 SWAP1
0xa6a POP
0xa6b PUSH1 0x0
0xa6d DUP2
0xa6e GT
0xa6f ISZERO
0xa70 PUSH2 0xa7d
0xa73 JUMPI
---
0xa68: JUMPDEST 
0xa6b: V1036 = 0x0
0xa6e: V1037 = GT S0 0x0
0xa6f: V1038 = ISZERO V1037
0xa70: V1039 = 0xa7d
0xa73: JUMPI 0xa7d V1038
---
Entry stack: [V12, 0x124, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x124, 0x0, S0]

================================

Block 0xa74
[0xa74:0xa7a]
---
Predecessors: [0xa68]
Successors: [0xb11]
---
0xa74 PUSH2 0xa7b
0xa77 PUSH2 0xb11
0xa7a JUMP
---
0xa74: V1040 = 0xa7b
0xa77: V1041 = 0xb11
0xa7a: JUMP 0xb11
---
Entry stack: [V12, 0x124, 0x0, S0]
Stack pops: 0
Stack additions: [0xa7b]
Exit stack: [V12, 0x124, 0x0, S0, 0xa7b]

================================

Block 0xa7b
[0xa7b:0xa7c]
---
Predecessors: [0xcc9]
Successors: [0xa7d]
---
0xa7b JUMPDEST
0xa7c POP
---
0xa7b: JUMPDEST 
---
Entry stack: [V12, 0x124, 0x0, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S1]

================================

Block 0xa7d
[0xa7d:0xa80]
---
Predecessors: [0xa68, 0xa7b]
Successors: [0xa81]
---
0xa7d JUMPDEST
0xa7e DUP1
0xa7f SWAP2
0xa80 POP
---
0xa7d: JUMPDEST 
---
Entry stack: [V12, 0x124, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x124, S0, S0]

================================

Block 0xa81
[0xa81:0xa84]
---
Predecessors: [0xa7d]
Successors: [0x124]
---
0xa81 JUMPDEST
0xa82 POP
0xa83 SWAP1
0xa84 JUMP
---
0xa81: JUMPDEST 
0xa84: JUMP 0x124
---
Entry stack: [V12, 0x124, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, S1]

================================

Block 0xa85
[0xa85:0xa93]
---
Predecessors: [0x269]
Successors: [0x228]
---
0xa85 JUMPDEST
0xa86 PUSH1 0x1
0xa88 SLOAD
0xa89 PUSH1 0x1
0xa8b PUSH1 0xa0
0xa8d PUSH1 0x2
0xa8f EXP
0xa90 SUB
0xa91 AND
0xa92 DUP2
0xa93 JUMP
---
0xa85: JUMPDEST 
0xa86: V1042 = 0x1
0xa88: V1043 = S[0x1]
0xa89: V1044 = 0x1
0xa8b: V1045 = 0xa0
0xa8d: V1046 = 0x2
0xa8f: V1047 = EXP 0x2 0xa0
0xa90: V1048 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa91: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V1043
0xa93: JUMP 0x228
---
Entry stack: [V12, 0x228]
Stack pops: 1
Stack additions: [S0, V1049]
Exit stack: [V12, 0x228, V1049]

================================

Block 0xa94
[0xa94:0xaea]
---
Predecessors: [0x298]
Successors: [0x82b, 0xaeb]
---
0xa94 JUMPDEST
0xa95 PUSH1 0x2
0xa97 SLOAD
0xa98 PUSH1 0x0
0xa9a SWAP1
0xa9b PUSH1 0x1
0xa9d PUSH1 0xa0
0xa9f PUSH1 0x2
0xaa1 EXP
0xaa2 SUB
0xaa3 AND
0xaa4 PUSH4 0x70a08231
0xaa9 DUP4
0xaaa DUP4
0xaab PUSH1 0x40
0xaad MLOAD
0xaae PUSH1 0x20
0xab0 ADD
0xab1 MSTORE
0xab2 PUSH1 0x40
0xab4 MLOAD
0xab5 PUSH1 0xe0
0xab7 PUSH1 0x2
0xab9 EXP
0xaba PUSH4 0xffffffff
0xabf DUP5
0xac0 AND
0xac1 MUL
0xac2 DUP2
0xac3 MSTORE
0xac4 PUSH1 0x1
0xac6 PUSH1 0xa0
0xac8 PUSH1 0x2
0xaca EXP
0xacb SUB
0xacc SWAP1
0xacd SWAP2
0xace AND
0xacf PUSH1 0x4
0xad1 DUP3
0xad2 ADD
0xad3 MSTORE
0xad4 PUSH1 0x24
0xad6 ADD
0xad7 PUSH1 0x20
0xad9 PUSH1 0x40
0xadb MLOAD
0xadc DUP1
0xadd DUP4
0xade SUB
0xadf DUP2
0xae0 PUSH1 0x0
0xae2 DUP8
0xae3 DUP1
0xae4 EXTCODESIZE
0xae5 ISZERO
0xae6 ISZERO
0xae7 PUSH2 0x82b
0xaea JUMPI
---
0xa94: JUMPDEST 
0xa95: V1050 = 0x2
0xa97: V1051 = S[0x2]
0xa98: V1052 = 0x0
0xa9b: V1053 = 0x1
0xa9d: V1054 = 0xa0
0xa9f: V1055 = 0x2
0xaa1: V1056 = EXP 0x2 0xa0
0xaa2: V1057 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa3: V1058 = AND 0xffffffffffffffffffffffffffffffffffffffff V1051
0xaa4: V1059 = 0x70a08231
0xaab: V1060 = 0x40
0xaad: V1061 = M[0x40]
0xaae: V1062 = 0x20
0xab0: V1063 = ADD 0x20 V1061
0xab1: M[V1063] = 0x0
0xab2: V1064 = 0x40
0xab4: V1065 = M[0x40]
0xab5: V1066 = 0xe0
0xab7: V1067 = 0x2
0xab9: V1068 = EXP 0x2 0xe0
0xaba: V1069 = 0xffffffff
0xac0: V1070 = AND 0x70a08231 0xffffffff
0xac1: V1071 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xac3: M[V1065] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xac4: V1072 = 0x1
0xac6: V1073 = 0xa0
0xac8: V1074 = 0x2
0xaca: V1075 = EXP 0x2 0xa0
0xacb: V1076 = SUB 0x10000000000000000000000000000000000000000 0x1
0xace: V1077 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0xacf: V1078 = 0x4
0xad2: V1079 = ADD V1065 0x4
0xad3: M[V1079] = V1077
0xad4: V1080 = 0x24
0xad6: V1081 = ADD 0x24 V1065
0xad7: V1082 = 0x20
0xad9: V1083 = 0x40
0xadb: V1084 = M[0x40]
0xade: V1085 = SUB V1081 V1084
0xae0: V1086 = 0x0
0xae4: V1087 = EXTCODESIZE V1058
0xae5: V1088 = ISZERO V1087
0xae6: V1089 = ISZERO V1088
0xae7: V1090 = 0x82b
0xaea: JUMPI 0x82b V1089
---
Entry stack: [V12, 0x124, V241]
Stack pops: 1
Stack additions: [S0, 0x0, V1058, 0x70a08231, V1081, 0x20, V1084, V1085, V1084, 0x0, V1058]
Exit stack: [V12, 0x124, V241, 0x0, V1058, 0x70a08231, V1081, 0x20, V1084, V1085, V1084, 0x0, V1058]

================================

Block 0xaeb
[0xaeb:0xaee]
---
Predecessors: [0xa94]
Successors: []
---
0xaeb PUSH1 0x0
0xaed DUP1
0xaee REVERT
---
0xaeb: V1091 = 0x0
0xaee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, V241, 0x0, V1058, 0x70a08231, V1081, 0x20, V1084, V1085, V1084, 0x0, V1058]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, V241, 0x0, V1058, 0x70a08231, V1081, 0x20, V1084, V1085, V1084, 0x0, V1058]

================================

Block 0xaef
[0xaef:0xafb]
---
Predecessors: []
Successors: [0x83c, 0xafc]
---
0xaef JUMPDEST
0xaf0 PUSH2 0x2c6
0xaf3 GAS
0xaf4 SUB
0xaf5 CALL
0xaf6 ISZERO
0xaf7 ISZERO
0xaf8 PUSH2 0x83c
0xafb JUMPI
---
0xaef: JUMPDEST 
0xaf0: V1092 = 0x2c6
0xaf3: V1093 = GAS
0xaf4: V1094 = SUB V1093 0x2c6
0xaf5: V1095 = CALL V1094 S0 S1 S2 S3 S4 S5
0xaf6: V1096 = ISZERO V1095
0xaf7: V1097 = ISZERO V1096
0xaf8: V1098 = 0x83c
0xafb: JUMPI 0x83c V1097
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xafc
[0xafc:0xb0b]
---
Predecessors: [0xaef]
Successors: [0xb0c]
---
0xafc PUSH1 0x0
0xafe DUP1
0xaff REVERT
0xb00 JUMPDEST
0xb01 POP
0xb02 POP
0xb03 POP
0xb04 PUSH1 0x40
0xb06 MLOAD
0xb07 DUP1
0xb08 MLOAD
0xb09 SWAP2
0xb0a POP
0xb0b POP
---
0xafc: V1099 = 0x0
0xaff: REVERT 0x0 0x0
0xb00: JUMPDEST 
0xb04: V1100 = 0x40
0xb06: V1101 = M[0x40]
0xb08: V1102 = M[V1101]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1102]
Exit stack: []

================================

Block 0xb0c
[0xb0c:0xb10]
---
Predecessors: [0xafc]
Successors: []
Has unresolved jump.
---
0xb0c JUMPDEST
0xb0d SWAP2
0xb0e SWAP1
0xb0f POP
0xb10 JUMP
---
0xb0c: JUMPDEST 
0xb10: JUMP S2
---
Entry stack: [V1102]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V1102]

================================

Block 0xb11
[0xb11:0xb33]
---
Predecessors: [0x2c9, 0xa74]
Successors: [0xb34, 0xb3c]
---
0xb11 JUMPDEST
0xb12 PUSH1 0x1
0xb14 PUSH1 0xa0
0xb16 PUSH1 0x2
0xb18 EXP
0xb19 SUB
0xb1a CALLER
0xb1b AND
0xb1c PUSH1 0x0
0xb1e SWAP1
0xb1f DUP2
0xb20 MSTORE
0xb21 PUSH1 0x6
0xb23 PUSH1 0x20
0xb25 MSTORE
0xb26 PUSH1 0x40
0xb28 DUP2
0xb29 SHA3
0xb2a SLOAD
0xb2b DUP2
0xb2c DUP1
0xb2d DUP3
0xb2e ISZERO
0xb2f ISZERO
0xb30 PUSH2 0xb3c
0xb33 JUMPI
---
0xb11: JUMPDEST 
0xb12: V1103 = 0x1
0xb14: V1104 = 0xa0
0xb16: V1105 = 0x2
0xb18: V1106 = EXP 0x2 0xa0
0xb19: V1107 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1a: V1108 = CALLER
0xb1b: V1109 = AND V1108 0xffffffffffffffffffffffffffffffffffffffff
0xb1c: V1110 = 0x0
0xb20: M[0x0] = V1109
0xb21: V1111 = 0x6
0xb23: V1112 = 0x20
0xb25: M[0x20] = 0x6
0xb26: V1113 = 0x40
0xb29: V1114 = SHA3 0x0 0x40
0xb2a: V1115 = S[V1114]
0xb2e: V1116 = ISZERO V1115
0xb2f: V1117 = ISZERO V1116
0xb30: V1118 = 0xb3c
0xb33: JUMPI 0xb3c V1117
---
Entry stack: [V12, 0x124, 0x0, S1, {0x201, 0xa7b}]
Stack pops: 0
Stack additions: [0x0, V1115, 0x0, 0x0]
Exit stack: [V12, 0x124, 0x0, S1, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0]

================================

Block 0xb34
[0xb34:0xb3b]
---
Predecessors: [0xb11]
Successors: [0xcc9]
---
0xb34 PUSH1 0x0
0xb36 SWAP4
0xb37 POP
0xb38 PUSH2 0xcc9
0xb3b JUMP
---
0xb34: V1119 = 0x0
0xb38: V1120 = 0xcc9
0xb3b: JUMP 0xcc9
---
Entry stack: [V12, 0x124, 0x0, S5, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x124, 0x0, S5, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0]

================================

Block 0xb3c
[0xb3c:0xbda]
---
Predecessors: [0xb11]
Successors: [0xbdb, 0xbdf]
---
0xb3c JUMPDEST
0xb3d PUSH1 0x1
0xb3f PUSH1 0xa0
0xb41 PUSH1 0x2
0xb43 EXP
0xb44 SUB
0xb45 CALLER
0xb46 DUP2
0xb47 AND
0xb48 PUSH1 0x0
0xb4a SWAP1
0xb4b DUP2
0xb4c MSTORE
0xb4d PUSH1 0x6
0xb4f PUSH1 0x20
0xb51 MSTORE
0xb52 PUSH1 0x40
0xb54 DUP1
0xb55 DUP3
0xb56 SHA3
0xb57 DUP1
0xb58 SLOAD
0xb59 DUP8
0xb5a SWAP1
0xb5b SUB
0xb5c SWAP1
0xb5d SSTORE
0xb5e PUSH1 0x7
0xb60 DUP1
0xb61 SLOAD
0xb62 DUP8
0xb63 SWAP1
0xb64 SUB
0xb65 SWAP1
0xb66 SSTORE
0xb67 PUSH1 0x1
0xb69 DUP1
0xb6a SLOAD
0xb6b PUSH1 0x4
0xb6d SLOAD
0xb6e PUSH1 0x2
0xb70 SLOAD
0xb71 SWAP2
0xb72 DUP7
0xb73 AND
0xb74 SWAP6
0xb75 PUSH4 0x5e5144eb
0xb7a SWAP6
0xb7b SWAP2
0xb7c DUP2
0xb7d AND
0xb7e SWAP5
0xb7f SWAP3
0xb80 AND
0xb81 SWAP3
0xb82 DUP10
0xb83 SWAP3
0xb84 SWAP1
0xb85 SWAP2
0xb86 SWAP1
0xb87 MLOAD
0xb88 PUSH1 0x20
0xb8a ADD
0xb8b MSTORE
0xb8c PUSH1 0x40
0xb8e MLOAD
0xb8f PUSH1 0xe0
0xb91 PUSH1 0x2
0xb93 EXP
0xb94 PUSH4 0xffffffff
0xb99 DUP8
0xb9a AND
0xb9b MUL
0xb9c DUP2
0xb9d MSTORE
0xb9e PUSH1 0x1
0xba0 PUSH1 0xa0
0xba2 PUSH1 0x2
0xba4 EXP
0xba5 SUB
0xba6 SWAP5
0xba7 DUP6
0xba8 AND
0xba9 PUSH1 0x4
0xbab DUP3
0xbac ADD
0xbad MSTORE
0xbae SWAP3
0xbaf SWAP1
0xbb0 SWAP4
0xbb1 AND
0xbb2 PUSH1 0x24
0xbb4 DUP4
0xbb5 ADD
0xbb6 MSTORE
0xbb7 PUSH1 0x44
0xbb9 DUP3
0xbba ADD
0xbbb MSTORE
0xbbc PUSH1 0x64
0xbbe DUP2
0xbbf ADD
0xbc0 SWAP2
0xbc1 SWAP1
0xbc2 SWAP2
0xbc3 MSTORE
0xbc4 PUSH1 0x84
0xbc6 ADD
0xbc7 PUSH1 0x20
0xbc9 PUSH1 0x40
0xbcb MLOAD
0xbcc DUP1
0xbcd DUP4
0xbce SUB
0xbcf DUP2
0xbd0 PUSH1 0x0
0xbd2 DUP8
0xbd3 DUP1
0xbd4 EXTCODESIZE
0xbd5 ISZERO
0xbd6 ISZERO
0xbd7 PUSH2 0xbdf
0xbda JUMPI
---
0xb3c: JUMPDEST 
0xb3d: V1121 = 0x1
0xb3f: V1122 = 0xa0
0xb41: V1123 = 0x2
0xb43: V1124 = EXP 0x2 0xa0
0xb44: V1125 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb45: V1126 = CALLER
0xb47: V1127 = AND 0xffffffffffffffffffffffffffffffffffffffff V1126
0xb48: V1128 = 0x0
0xb4c: M[0x0] = V1127
0xb4d: V1129 = 0x6
0xb4f: V1130 = 0x20
0xb51: M[0x20] = 0x6
0xb52: V1131 = 0x40
0xb56: V1132 = SHA3 0x0 0x40
0xb58: V1133 = S[V1132]
0xb5b: V1134 = SUB V1133 V1115
0xb5d: S[V1132] = V1134
0xb5e: V1135 = 0x7
0xb61: V1136 = S[0x7]
0xb64: V1137 = SUB V1136 V1115
0xb66: S[0x7] = V1137
0xb67: V1138 = 0x1
0xb6a: V1139 = S[0x1]
0xb6b: V1140 = 0x4
0xb6d: V1141 = S[0x4]
0xb6e: V1142 = 0x2
0xb70: V1143 = S[0x2]
0xb73: V1144 = AND 0xffffffffffffffffffffffffffffffffffffffff V1139
0xb75: V1145 = 0x5e5144eb
0xb7d: V1146 = AND 0xffffffffffffffffffffffffffffffffffffffff V1141
0xb80: V1147 = AND V1143 0xffffffffffffffffffffffffffffffffffffffff
0xb87: V1148 = M[0x40]
0xb88: V1149 = 0x20
0xb8a: V1150 = ADD 0x20 V1148
0xb8b: M[V1150] = 0x0
0xb8c: V1151 = 0x40
0xb8e: V1152 = M[0x40]
0xb8f: V1153 = 0xe0
0xb91: V1154 = 0x2
0xb93: V1155 = EXP 0x2 0xe0
0xb94: V1156 = 0xffffffff
0xb9a: V1157 = AND 0x5e5144eb 0xffffffff
0xb9b: V1158 = MUL 0x5e5144eb 0x100000000000000000000000000000000000000000000000000000000
0xb9d: M[V1152] = 0x5e5144eb00000000000000000000000000000000000000000000000000000000
0xb9e: V1159 = 0x1
0xba0: V1160 = 0xa0
0xba2: V1161 = 0x2
0xba4: V1162 = EXP 0x2 0xa0
0xba5: V1163 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba8: V1164 = AND 0xffffffffffffffffffffffffffffffffffffffff V1146
0xba9: V1165 = 0x4
0xbac: V1166 = ADD V1152 0x4
0xbad: M[V1166] = V1164
0xbb1: V1167 = AND 0xffffffffffffffffffffffffffffffffffffffff V1147
0xbb2: V1168 = 0x24
0xbb5: V1169 = ADD V1152 0x24
0xbb6: M[V1169] = V1167
0xbb7: V1170 = 0x44
0xbba: V1171 = ADD V1152 0x44
0xbbb: M[V1171] = V1115
0xbbc: V1172 = 0x64
0xbbf: V1173 = ADD V1152 0x64
0xbc3: M[V1173] = 0x1
0xbc4: V1174 = 0x84
0xbc6: V1175 = ADD 0x84 V1152
0xbc7: V1176 = 0x20
0xbc9: V1177 = 0x40
0xbcb: V1178 = M[0x40]
0xbce: V1179 = SUB V1175 V1178
0xbd0: V1180 = 0x0
0xbd4: V1181 = EXTCODESIZE V1144
0xbd5: V1182 = ISZERO V1181
0xbd6: V1183 = ISZERO V1182
0xbd7: V1184 = 0xbdf
0xbda: JUMPI 0xbdf V1183
---
Entry stack: [V12, 0x124, 0x0, S5, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1144, 0x5e5144eb, V1175, 0x20, V1178, V1179, V1178, 0x0, V1144]
Exit stack: [V12, 0x124, 0x0, S5, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0, V1144, 0x5e5144eb, V1175, 0x20, V1178, V1179, V1178, 0x0, V1144]

================================

Block 0xbdb
[0xbdb:0xbde]
---
Predecessors: [0xb3c]
Successors: []
---
0xbdb PUSH1 0x0
0xbdd DUP1
0xbde REVERT
---
0xbdb: V1185 = 0x0
0xbde: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S14, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0, V1144, 0x5e5144eb, V1175, 0x20, V1178, V1179, V1178, 0x0, V1144]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S14, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0, V1144, 0x5e5144eb, V1175, 0x20, V1178, V1179, V1178, 0x0, V1144]

================================

Block 0xbdf
[0xbdf:0xbeb]
---
Predecessors: [0xb3c]
Successors: [0xbec, 0xbf0]
---
0xbdf JUMPDEST
0xbe0 PUSH2 0x2c6
0xbe3 GAS
0xbe4 SUB
0xbe5 CALL
0xbe6 ISZERO
0xbe7 ISZERO
0xbe8 PUSH2 0xbf0
0xbeb JUMPI
---
0xbdf: JUMPDEST 
0xbe0: V1186 = 0x2c6
0xbe3: V1187 = GAS
0xbe4: V1188 = SUB V1187 0x2c6
0xbe5: V1189 = CALL V1188 V1144 0x0 V1178 V1179 V1178 0x20
0xbe6: V1190 = ISZERO V1189
0xbe7: V1191 = ISZERO V1190
0xbe8: V1192 = 0xbf0
0xbeb: JUMPI 0xbf0 V1191
---
Entry stack: [V12, 0x124, 0x0, S14, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0, V1144, 0x5e5144eb, V1175, 0x20, V1178, V1179, V1178, 0x0, V1144]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S14, {0x201, 0xa7b}, 0x0, V1115, 0x0, 0x0, V1144, 0x5e5144eb, V1175]

================================

Block 0xbec
[0xbec:0xbef]
---
Predecessors: [0xbdf]
Successors: []
---
0xbec PUSH1 0x0
0xbee DUP1
0xbef REVERT
---
0xbec: V1193 = 0x0
0xbef: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S8, {0x201, 0xa7b}, 0x0, S5, 0x0, 0x0, S2, 0x5e5144eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S8, {0x201, 0xa7b}, 0x0, S5, 0x0, 0x0, S2, 0x5e5144eb, S0]

================================

Block 0xbf0
[0xbf0:0xc5a]
---
Predecessors: [0xbdf]
Successors: [0xc5b, 0xc5f]
---
0xbf0 JUMPDEST
0xbf1 POP
0xbf2 POP
0xbf3 POP
0xbf4 PUSH1 0x40
0xbf6 MLOAD
0xbf7 DUP1
0xbf8 MLOAD
0xbf9 PUSH1 0x2
0xbfb SLOAD
0xbfc SWAP1
0xbfd SWAP4
0xbfe POP
0xbff PUSH1 0x1
0xc01 PUSH1 0xa0
0xc03 PUSH1 0x2
0xc05 EXP
0xc06 SUB
0xc07 AND
0xc08 SWAP2
0xc09 POP
0xc0a DUP2
0xc0b SWAP1
0xc0c POP
0xc0d PUSH4 0x2e1a7d4d
0xc12 DUP2
0xc13 PUSH4 0x70a08231
0xc18 ADDRESS
0xc19 PUSH1 0x0
0xc1b PUSH1 0x40
0xc1d MLOAD
0xc1e PUSH1 0x20
0xc20 ADD
0xc21 MSTORE
0xc22 PUSH1 0x40
0xc24 MLOAD
0xc25 PUSH1 0xe0
0xc27 PUSH1 0x2
0xc29 EXP
0xc2a PUSH4 0xffffffff
0xc2f DUP5
0xc30 AND
0xc31 MUL
0xc32 DUP2
0xc33 MSTORE
0xc34 PUSH1 0x1
0xc36 PUSH1 0xa0
0xc38 PUSH1 0x2
0xc3a EXP
0xc3b SUB
0xc3c SWAP1
0xc3d SWAP2
0xc3e AND
0xc3f PUSH1 0x4
0xc41 DUP3
0xc42 ADD
0xc43 MSTORE
0xc44 PUSH1 0x24
0xc46 ADD
0xc47 PUSH1 0x20
0xc49 PUSH1 0x40
0xc4b MLOAD
0xc4c DUP1
0xc4d DUP4
0xc4e SUB
0xc4f DUP2
0xc50 PUSH1 0x0
0xc52 DUP8
0xc53 DUP1
0xc54 EXTCODESIZE
0xc55 ISZERO
0xc56 ISZERO
0xc57 PUSH2 0xc5f
0xc5a JUMPI
---
0xbf0: JUMPDEST 
0xbf4: V1194 = 0x40
0xbf6: V1195 = M[0x40]
0xbf8: V1196 = M[V1195]
0xbf9: V1197 = 0x2
0xbfb: V1198 = S[0x2]
0xbff: V1199 = 0x1
0xc01: V1200 = 0xa0
0xc03: V1201 = 0x2
0xc05: V1202 = EXP 0x2 0xa0
0xc06: V1203 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc07: V1204 = AND 0xffffffffffffffffffffffffffffffffffffffff V1198
0xc0d: V1205 = 0x2e1a7d4d
0xc13: V1206 = 0x70a08231
0xc18: V1207 = ADDRESS
0xc19: V1208 = 0x0
0xc1b: V1209 = 0x40
0xc1d: V1210 = M[0x40]
0xc1e: V1211 = 0x20
0xc20: V1212 = ADD 0x20 V1210
0xc21: M[V1212] = 0x0
0xc22: V1213 = 0x40
0xc24: V1214 = M[0x40]
0xc25: V1215 = 0xe0
0xc27: V1216 = 0x2
0xc29: V1217 = EXP 0x2 0xe0
0xc2a: V1218 = 0xffffffff
0xc30: V1219 = AND 0x70a08231 0xffffffff
0xc31: V1220 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xc33: M[V1214] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xc34: V1221 = 0x1
0xc36: V1222 = 0xa0
0xc38: V1223 = 0x2
0xc3a: V1224 = EXP 0x2 0xa0
0xc3b: V1225 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3e: V1226 = AND V1207 0xffffffffffffffffffffffffffffffffffffffff
0xc3f: V1227 = 0x4
0xc42: V1228 = ADD V1214 0x4
0xc43: M[V1228] = V1226
0xc44: V1229 = 0x24
0xc46: V1230 = ADD 0x24 V1214
0xc47: V1231 = 0x20
0xc49: V1232 = 0x40
0xc4b: V1233 = M[0x40]
0xc4e: V1234 = SUB V1230 V1233
0xc50: V1235 = 0x0
0xc54: V1236 = EXTCODESIZE V1204
0xc55: V1237 = ISZERO V1236
0xc56: V1238 = ISZERO V1237
0xc57: V1239 = 0xc5f
0xc5a: JUMPI 0xc5f V1238
---
Entry stack: [V12, 0x124, 0x0, S8, {0x201, 0xa7b}, 0x0, S5, 0x0, 0x0, S2, 0x5e5144eb, S0]
Stack pops: 5
Stack additions: [V1196, V1204, V1204, 0x2e1a7d4d, V1204, 0x70a08231, V1230, 0x20, V1233, V1234, V1233, 0x0, V1204]
Exit stack: [V12, 0x124, 0x0, S8, {0x201, 0xa7b}, 0x0, S5, V1196, V1204, V1204, 0x2e1a7d4d, V1204, 0x70a08231, V1230, 0x20, V1233, V1234, V1233, 0x0, V1204]

================================

Block 0xc5b
[0xc5b:0xc5e]
---
Predecessors: [0xbf0]
Successors: []
---
0xc5b PUSH1 0x0
0xc5d DUP1
0xc5e REVERT
---
0xc5b: V1240 = 0x0
0xc5e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S16, {0x201, 0xa7b}, 0x0, S13, V1196, V1204, V1204, 0x2e1a7d4d, V1204, 0x70a08231, V1230, 0x20, V1233, V1234, V1233, 0x0, V1204]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S16, {0x201, 0xa7b}, 0x0, S13, V1196, V1204, V1204, 0x2e1a7d4d, V1204, 0x70a08231, V1230, 0x20, V1233, V1234, V1233, 0x0, V1204]

================================

Block 0xc5f
[0xc5f:0xc6b]
---
Predecessors: [0xbf0]
Successors: [0xc6c, 0xc70]
---
0xc5f JUMPDEST
0xc60 PUSH2 0x2c6
0xc63 GAS
0xc64 SUB
0xc65 CALL
0xc66 ISZERO
0xc67 ISZERO
0xc68 PUSH2 0xc70
0xc6b JUMPI
---
0xc5f: JUMPDEST 
0xc60: V1241 = 0x2c6
0xc63: V1242 = GAS
0xc64: V1243 = SUB V1242 0x2c6
0xc65: V1244 = CALL V1243 V1204 0x0 V1233 V1234 V1233 0x20
0xc66: V1245 = ISZERO V1244
0xc67: V1246 = ISZERO V1245
0xc68: V1247 = 0xc70
0xc6b: JUMPI 0xc70 V1246
---
Entry stack: [V12, 0x124, 0x0, S16, {0x201, 0xa7b}, 0x0, S13, V1196, V1204, V1204, 0x2e1a7d4d, V1204, 0x70a08231, V1230, 0x20, V1233, V1234, V1233, 0x0, V1204]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S16, {0x201, 0xa7b}, 0x0, S13, V1196, V1204, V1204, 0x2e1a7d4d, V1204, 0x70a08231, V1230]

================================

Block 0xc6c
[0xc6c:0xc6f]
---
Predecessors: [0xc5f]
Successors: []
---
0xc6c PUSH1 0x0
0xc6e DUP1
0xc6f REVERT
---
0xc6c: V1248 = 0x0
0xc6f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S10, {0x201, 0xa7b}, 0x0, S7, S6, S5, S4, 0x2e1a7d4d, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S10, {0x201, 0xa7b}, 0x0, S7, S6, S5, S4, 0x2e1a7d4d, S2, 0x70a08231, S0]

================================

Block 0xc70
[0xc70:0xcab]
---
Predecessors: [0xc5f]
Successors: [0xcac, 0xcb0]
---
0xc70 JUMPDEST
0xc71 POP
0xc72 POP
0xc73 POP
0xc74 PUSH1 0x40
0xc76 MLOAD
0xc77 DUP1
0xc78 MLOAD
0xc79 SWAP1
0xc7a POP
0xc7b PUSH1 0x40
0xc7d MLOAD
0xc7e PUSH1 0xe0
0xc80 PUSH1 0x2
0xc82 EXP
0xc83 PUSH4 0xffffffff
0xc88 DUP5
0xc89 AND
0xc8a MUL
0xc8b DUP2
0xc8c MSTORE
0xc8d PUSH1 0x4
0xc8f DUP2
0xc90 ADD
0xc91 SWAP2
0xc92 SWAP1
0xc93 SWAP2
0xc94 MSTORE
0xc95 PUSH1 0x24
0xc97 ADD
0xc98 PUSH1 0x0
0xc9a PUSH1 0x40
0xc9c MLOAD
0xc9d DUP1
0xc9e DUP4
0xc9f SUB
0xca0 DUP2
0xca1 PUSH1 0x0
0xca3 DUP8
0xca4 DUP1
0xca5 EXTCODESIZE
0xca6 ISZERO
0xca7 ISZERO
0xca8 PUSH2 0xcb0
0xcab JUMPI
---
0xc70: JUMPDEST 
0xc74: V1249 = 0x40
0xc76: V1250 = M[0x40]
0xc78: V1251 = M[V1250]
0xc7b: V1252 = 0x40
0xc7d: V1253 = M[0x40]
0xc7e: V1254 = 0xe0
0xc80: V1255 = 0x2
0xc82: V1256 = EXP 0x2 0xe0
0xc83: V1257 = 0xffffffff
0xc89: V1258 = AND 0x2e1a7d4d 0xffffffff
0xc8a: V1259 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0xc8c: M[V1253] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0xc8d: V1260 = 0x4
0xc90: V1261 = ADD V1253 0x4
0xc94: M[V1261] = V1251
0xc95: V1262 = 0x24
0xc97: V1263 = ADD 0x24 V1253
0xc98: V1264 = 0x0
0xc9a: V1265 = 0x40
0xc9c: V1266 = M[0x40]
0xc9f: V1267 = SUB V1263 V1266
0xca1: V1268 = 0x0
0xca5: V1269 = EXTCODESIZE S4
0xca6: V1270 = ISZERO V1269
0xca7: V1271 = ISZERO V1270
0xca8: V1272 = 0xcb0
0xcab: JUMPI 0xcb0 V1271
---
Entry stack: [V12, 0x124, 0x0, S10, {0x201, 0xa7b}, 0x0, S7, S6, S5, S4, 0x2e1a7d4d, S2, 0x70a08231, S0]
Stack pops: 5
Stack additions: [S4, S3, V1263, 0x0, V1266, V1267, V1266, 0x0, S4]
Exit stack: [V12, 0x124, 0x0, S10, {0x201, 0xa7b}, 0x0, S7, S6, S5, S4, 0x2e1a7d4d, V1263, 0x0, V1266, V1267, V1266, 0x0, S4]

================================

Block 0xcac
[0xcac:0xcaf]
---
Predecessors: [0xc70]
Successors: []
---
0xcac PUSH1 0x0
0xcae DUP1
0xcaf REVERT
---
0xcac: V1273 = 0x0
0xcaf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S14, {0x201, 0xa7b}, 0x0, S11, S10, S9, S8, 0x2e1a7d4d, V1263, 0x0, V1266, V1267, V1266, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S14, {0x201, 0xa7b}, 0x0, S11, S10, S9, S8, 0x2e1a7d4d, V1263, 0x0, V1266, V1267, V1266, 0x0, S0]

================================

Block 0xcb0
[0xcb0:0xcbc]
---
Predecessors: [0xc70]
Successors: [0xcbd, 0xcc1]
---
0xcb0 JUMPDEST
0xcb1 PUSH2 0x2c6
0xcb4 GAS
0xcb5 SUB
0xcb6 CALL
0xcb7 ISZERO
0xcb8 ISZERO
0xcb9 PUSH2 0xcc1
0xcbc JUMPI
---
0xcb0: JUMPDEST 
0xcb1: V1274 = 0x2c6
0xcb4: V1275 = GAS
0xcb5: V1276 = SUB V1275 0x2c6
0xcb6: V1277 = CALL V1276 S0 0x0 V1266 V1267 V1266 0x0
0xcb7: V1278 = ISZERO V1277
0xcb8: V1279 = ISZERO V1278
0xcb9: V1280 = 0xcc1
0xcbc: JUMPI 0xcc1 V1279
---
Entry stack: [V12, 0x124, 0x0, S14, {0x201, 0xa7b}, 0x0, S11, S10, S9, S8, 0x2e1a7d4d, V1263, 0x0, V1266, V1267, V1266, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S14, {0x201, 0xa7b}, 0x0, S11, S10, S9, S8, 0x2e1a7d4d, V1263]

================================

Block 0xcbd
[0xcbd:0xcc0]
---
Predecessors: [0xcb0]
Successors: []
---
0xcbd PUSH1 0x0
0xcbf DUP1
0xcc0 REVERT
---
0xcbd: V1281 = 0x0
0xcc0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, S8, {0x201, 0xa7b}, 0x0, S5, S4, S3, S2, 0x2e1a7d4d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, S8, {0x201, 0xa7b}, 0x0, S5, S4, S3, S2, 0x2e1a7d4d, S0]

================================

Block 0xcc1
[0xcc1:0xcc8]
---
Predecessors: [0xcb0]
Successors: [0xcc9]
---
0xcc1 JUMPDEST
0xcc2 POP
0xcc3 POP
0xcc4 POP
0xcc5 PUSH1 0x1
0xcc7 SWAP4
0xcc8 POP
---
0xcc1: JUMPDEST 
0xcc5: V1282 = 0x1
---
Entry stack: [V12, 0x124, 0x0, S8, {0x201, 0xa7b}, 0x0, S5, S4, S3, S2, 0x2e1a7d4d, S0]
Stack pops: 7
Stack additions: [0x1, S5, S4, S3]
Exit stack: [V12, 0x124, 0x0, S8, {0x201, 0xa7b}, 0x1, S5, S4, S3]

================================

Block 0xcc9
[0xcc9:0xcce]
---
Predecessors: [0xb34, 0xcc1]
Successors: [0x201, 0xa7b]
---
0xcc9 JUMPDEST
0xcca POP
0xccb POP
0xccc POP
0xccd SWAP1
0xcce JUMP
---
0xcc9: JUMPDEST 
0xcce: JUMP {0x201, 0xa7b}
---
Entry stack: [V12, 0x124, 0x0, S5, {0x201, 0xa7b}, {0x0, 0x1}, S2, S1, S0]
Stack pops: 5
Stack additions: [S3]
Exit stack: [V12, 0x124, 0x0, S5, {0x0, 0x1}]

================================

Block 0xccf
[0xccf:0xcdd]
---
Predecessors: [0x2f0]
Successors: [0x228]
---
0xccf JUMPDEST
0xcd0 PUSH1 0x3
0xcd2 SLOAD
0xcd3 PUSH1 0x1
0xcd5 PUSH1 0xa0
0xcd7 PUSH1 0x2
0xcd9 EXP
0xcda SUB
0xcdb AND
0xcdc DUP2
0xcdd JUMP
---
0xccf: JUMPDEST 
0xcd0: V1283 = 0x3
0xcd2: V1284 = S[0x3]
0xcd3: V1285 = 0x1
0xcd5: V1286 = 0xa0
0xcd7: V1287 = 0x2
0xcd9: V1288 = EXP 0x2 0xa0
0xcda: V1289 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcdb: V1290 = AND 0xffffffffffffffffffffffffffffffffffffffff V1284
0xcdd: JUMP 0x228
---
Entry stack: [V12, 0x228]
Stack pops: 1
Stack additions: [S0, V1290]
Exit stack: [V12, 0x228, V1290]

================================

Block 0xcde
[0xcde:0xce3]
---
Predecessors: [0x31f]
Successors: [0x124]
---
0xcde JUMPDEST
0xcdf PUSH1 0x9
0xce1 SLOAD
0xce2 DUP2
0xce3 JUMP
---
0xcde: JUMPDEST 
0xcdf: V1291 = 0x9
0xce1: V1292 = S[0x9]
0xce3: JUMP 0x124
---
Entry stack: [V12, 0x124]
Stack pops: 1
Stack additions: [S0, V1292]
Exit stack: [V12, 0x124, V1292]

================================

Block 0xce4
[0xce4:0xd3a]
---
Predecessors: [0x344, 0x84d]
Successors: [0x82b, 0xd3b]
---
0xce4 JUMPDEST
0xce5 PUSH1 0x3
0xce7 SLOAD
0xce8 PUSH1 0x0
0xcea SWAP1
0xceb PUSH1 0x1
0xced PUSH1 0xa0
0xcef PUSH1 0x2
0xcf1 EXP
0xcf2 SUB
0xcf3 AND
0xcf4 PUSH4 0x70a08231
0xcf9 DUP4
0xcfa DUP4
0xcfb PUSH1 0x40
0xcfd MLOAD
0xcfe PUSH1 0x20
0xd00 ADD
0xd01 MSTORE
0xd02 PUSH1 0x40
0xd04 MLOAD
0xd05 PUSH1 0xe0
0xd07 PUSH1 0x2
0xd09 EXP
0xd0a PUSH4 0xffffffff
0xd0f DUP5
0xd10 AND
0xd11 MUL
0xd12 DUP2
0xd13 MSTORE
0xd14 PUSH1 0x1
0xd16 PUSH1 0xa0
0xd18 PUSH1 0x2
0xd1a EXP
0xd1b SUB
0xd1c SWAP1
0xd1d SWAP2
0xd1e AND
0xd1f PUSH1 0x4
0xd21 DUP3
0xd22 ADD
0xd23 MSTORE
0xd24 PUSH1 0x24
0xd26 ADD
0xd27 PUSH1 0x20
0xd29 PUSH1 0x40
0xd2b MLOAD
0xd2c DUP1
0xd2d DUP4
0xd2e SUB
0xd2f DUP2
0xd30 PUSH1 0x0
0xd32 DUP8
0xd33 DUP1
0xd34 EXTCODESIZE
0xd35 ISZERO
0xd36 ISZERO
0xd37 PUSH2 0x82b
0xd3a JUMPI
---
0xce4: JUMPDEST 
0xce5: V1293 = 0x3
0xce7: V1294 = S[0x3]
0xce8: V1295 = 0x0
0xceb: V1296 = 0x1
0xced: V1297 = 0xa0
0xcef: V1298 = 0x2
0xcf1: V1299 = EXP 0x2 0xa0
0xcf2: V1300 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf3: V1301 = AND 0xffffffffffffffffffffffffffffffffffffffff V1294
0xcf4: V1302 = 0x70a08231
0xcfb: V1303 = 0x40
0xcfd: V1304 = M[0x40]
0xcfe: V1305 = 0x20
0xd00: V1306 = ADD 0x20 V1304
0xd01: M[V1306] = 0x0
0xd02: V1307 = 0x40
0xd04: V1308 = M[0x40]
0xd05: V1309 = 0xe0
0xd07: V1310 = 0x2
0xd09: V1311 = EXP 0x2 0xe0
0xd0a: V1312 = 0xffffffff
0xd10: V1313 = AND 0x70a08231 0xffffffff
0xd11: V1314 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xd13: M[V1308] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xd14: V1315 = 0x1
0xd16: V1316 = 0xa0
0xd18: V1317 = 0x2
0xd1a: V1318 = EXP 0x2 0xa0
0xd1b: V1319 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1e: V1320 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd1f: V1321 = 0x4
0xd22: V1322 = ADD V1308 0x4
0xd23: M[V1322] = V1320
0xd24: V1323 = 0x24
0xd26: V1324 = ADD 0x24 V1308
0xd27: V1325 = 0x20
0xd29: V1326 = 0x40
0xd2b: V1327 = M[0x40]
0xd2e: V1328 = SUB V1324 V1327
0xd30: V1329 = 0x0
0xd34: V1330 = EXTCODESIZE V1301
0xd35: V1331 = ISZERO V1330
0xd36: V1332 = ISZERO V1331
0xd37: V1333 = 0x82b
0xd3a: JUMPI 0x82b V1332
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S2, {0x124, 0x879}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V1301, 0x70a08231, V1324, 0x20, V1327, V1328, V1327, 0x0, V1301]
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S2, {0x124, 0x879}, S0, 0x0, V1301, 0x70a08231, V1324, 0x20, V1327, V1328, V1327, 0x0, V1301]

================================

Block 0xd3b
[0xd3b:0xd3e]
---
Predecessors: [0xce4]
Successors: []
---
0xd3b PUSH1 0x0
0xd3d DUP1
0xd3e REVERT
---
0xd3b: V1334 = 0x0
0xd3e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S12, {0x124, 0x879}, S10, 0x0, V1301, 0x70a08231, V1324, 0x20, V1327, V1328, V1327, 0x0, V1301]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, 0x0, V828, 0x1e1401f8, V830, S12, {0x124, 0x879}, S10, 0x0, V1301, 0x70a08231, V1324, 0x20, V1327, V1328, V1327, 0x0, V1301]

================================

Block 0xd3f
[0xd3f:0xd4b]
---
Predecessors: []
Successors: [0x83c, 0xd4c]
---
0xd3f JUMPDEST
0xd40 PUSH2 0x2c6
0xd43 GAS
0xd44 SUB
0xd45 CALL
0xd46 ISZERO
0xd47 ISZERO
0xd48 PUSH2 0x83c
0xd4b JUMPI
---
0xd3f: JUMPDEST 
0xd40: V1335 = 0x2c6
0xd43: V1336 = GAS
0xd44: V1337 = SUB V1336 0x2c6
0xd45: V1338 = CALL V1337 S0 S1 S2 S3 S4 S5
0xd46: V1339 = ISZERO V1338
0xd47: V1340 = ISZERO V1339
0xd48: V1341 = 0x83c
0xd4b: JUMPI 0x83c V1340
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xd4c
[0xd4c:0xd5b]
---
Predecessors: [0xd3f]
Successors: [0xd5c]
---
0xd4c PUSH1 0x0
0xd4e DUP1
0xd4f REVERT
0xd50 JUMPDEST
0xd51 POP
0xd52 POP
0xd53 POP
0xd54 PUSH1 0x40
0xd56 MLOAD
0xd57 DUP1
0xd58 MLOAD
0xd59 SWAP2
0xd5a POP
0xd5b POP
---
0xd4c: V1342 = 0x0
0xd4f: REVERT 0x0 0x0
0xd50: JUMPDEST 
0xd54: V1343 = 0x40
0xd56: V1344 = M[0x40]
0xd58: V1345 = M[V1344]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1345]
Exit stack: []

================================

Block 0xd5c
[0xd5c:0xd60]
---
Predecessors: [0xd4c]
Successors: []
Has unresolved jump.
---
0xd5c JUMPDEST
0xd5d SWAP2
0xd5e SWAP1
0xd5f POP
0xd60 JUMP
---
0xd5c: JUMPDEST 
0xd60: JUMP S2
---
Entry stack: [V1345]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V1345]

================================

Block 0xd61
[0xd61:0xd66]
---
Predecessors: [0x375]
Successors: [0x124]
---
0xd61 JUMPDEST
0xd62 PUSH1 0x7
0xd64 SLOAD
0xd65 DUP2
0xd66 JUMP
---
0xd61: JUMPDEST 
0xd62: V1346 = 0x7
0xd64: V1347 = S[0x7]
0xd66: JUMP 0x124
---
Entry stack: [V12, 0x124]
Stack pops: 1
Stack additions: [S0, V1347]
Exit stack: [V12, 0x124, V1347]

================================

Block 0xd67
[0xd67:0xd7d]
---
Predecessors: [0x39a]
Successors: [0xd7e, 0xd82]
---
0xd67 JUMPDEST
0xd68 PUSH1 0x0
0xd6a SLOAD
0xd6b CALLER
0xd6c PUSH1 0x1
0xd6e PUSH1 0xa0
0xd70 PUSH1 0x2
0xd72 EXP
0xd73 SUB
0xd74 SWAP1
0xd75 DUP2
0xd76 AND
0xd77 SWAP2
0xd78 AND
0xd79 EQ
0xd7a PUSH2 0xd82
0xd7d JUMPI
---
0xd67: JUMPDEST 
0xd68: V1348 = 0x0
0xd6a: V1349 = S[0x0]
0xd6b: V1350 = CALLER
0xd6c: V1351 = 0x1
0xd6e: V1352 = 0xa0
0xd70: V1353 = 0x2
0xd72: V1354 = EXP 0x2 0xa0
0xd73: V1355 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd76: V1356 = AND 0xffffffffffffffffffffffffffffffffffffffff V1350
0xd78: V1357 = AND V1349 0xffffffffffffffffffffffffffffffffffffffff
0xd79: V1358 = EQ V1357 V1356
0xd7a: V1359 = 0xd82
0xd7d: JUMPI 0xd82 V1358
---
Entry stack: [V12, 0x3a2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3a2]

================================

Block 0xd7e
[0xd7e:0xd81]
---
Predecessors: [0xd67]
Successors: []
---
0xd7e PUSH1 0x0
0xd80 DUP1
0xd81 REVERT
---
0xd7e: V1360 = 0x0
0xd81: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3a2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3a2]

================================

Block 0xd82
[0xd82:0xd8f]
---
Predecessors: [0xd67]
Successors: []
---
0xd82 JUMPDEST
0xd83 PUSH1 0x0
0xd85 SLOAD
0xd86 PUSH1 0x1
0xd88 PUSH1 0xa0
0xd8a PUSH1 0x2
0xd8c EXP
0xd8d SUB
0xd8e AND
0xd8f SELFDESTRUCT
---
0xd82: JUMPDEST 
0xd83: V1361 = 0x0
0xd85: V1362 = S[0x0]
0xd86: V1363 = 0x1
0xd88: V1364 = 0xa0
0xd8a: V1365 = 0x2
0xd8c: V1366 = EXP 0x2 0xa0
0xd8d: V1367 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8e: V1368 = AND 0xffffffffffffffffffffffffffffffffffffffff V1362
0xd8f: SELFDESTRUCT V1368
---
Entry stack: [V12, 0x3a2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3a2]

================================

Block 0xd90
[0xd90:0xd91]
---
Predecessors: [0x4bc]
Successors: [0x3a2]
---
0xd90 JUMPDEST
0xd91 JUMP
---
0xd90: JUMPDEST 
0xd91: JUMP 0x3a2
---
Entry stack: [V12, 0x3a2]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd92
[0xd92:0xda0]
---
Predecessors: [0x3af]
Successors: [0x228]
---
0xd92 JUMPDEST
0xd93 PUSH1 0x0
0xd95 SLOAD
0xd96 PUSH1 0x1
0xd98 PUSH1 0xa0
0xd9a PUSH1 0x2
0xd9c EXP
0xd9d SUB
0xd9e AND
0xd9f DUP2
0xda0 JUMP
---
0xd92: JUMPDEST 
0xd93: V1369 = 0x0
0xd95: V1370 = S[0x0]
0xd96: V1371 = 0x1
0xd98: V1372 = 0xa0
0xd9a: V1373 = 0x2
0xd9c: V1374 = EXP 0x2 0xa0
0xd9d: V1375 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9e: V1376 = AND 0xffffffffffffffffffffffffffffffffffffffff V1370
0xda0: JUMP 0x228
---
Entry stack: [V12, 0x228]
Stack pops: 1
Stack additions: [S0, V1376]
Exit stack: [V12, 0x228, V1376]

================================

Block 0xda1
[0xda1:0xe17]
---
Predecessors: [0x3de]
Successors: [0x82b, 0xe18]
---
0xda1 JUMPDEST
0xda2 PUSH1 0x1
0xda4 SLOAD
0xda5 PUSH1 0x4
0xda7 SLOAD
0xda8 PUSH1 0x2
0xdaa SLOAD
0xdab PUSH1 0x0
0xdad SWAP3
0xdae PUSH1 0x1
0xdb0 PUSH1 0xa0
0xdb2 PUSH1 0x2
0xdb4 EXP
0xdb5 SUB
0xdb6 SWAP1
0xdb7 DUP2
0xdb8 AND
0xdb9 SWAP3
0xdba PUSH4 0x1e1401f8
0xdbf SWAP3
0xdc0 SWAP1
0xdc1 DUP3
0xdc2 AND
0xdc3 SWAP2
0xdc4 AND
0xdc5 DUP6
0xdc6 DUP6
0xdc7 PUSH1 0x40
0xdc9 MLOAD
0xdca PUSH1 0x20
0xdcc ADD
0xdcd MSTORE
0xdce PUSH1 0x40
0xdd0 MLOAD
0xdd1 PUSH1 0xe0
0xdd3 PUSH1 0x2
0xdd5 EXP
0xdd6 PUSH4 0xffffffff
0xddb DUP7
0xddc AND
0xddd MUL
0xdde DUP2
0xddf MSTORE
0xde0 PUSH1 0x1
0xde2 PUSH1 0xa0
0xde4 PUSH1 0x2
0xde6 EXP
0xde7 SUB
0xde8 SWAP4
0xde9 DUP5
0xdea AND
0xdeb PUSH1 0x4
0xded DUP3
0xdee ADD
0xdef MSTORE
0xdf0 SWAP2
0xdf1 SWAP1
0xdf2 SWAP3
0xdf3 AND
0xdf4 PUSH1 0x24
0xdf6 DUP3
0xdf7 ADD
0xdf8 MSTORE
0xdf9 PUSH1 0x44
0xdfb DUP2
0xdfc ADD
0xdfd SWAP2
0xdfe SWAP1
0xdff SWAP2
0xe00 MSTORE
0xe01 PUSH1 0x64
0xe03 ADD
0xe04 PUSH1 0x20
0xe06 PUSH1 0x40
0xe08 MLOAD
0xe09 DUP1
0xe0a DUP4
0xe0b SUB
0xe0c DUP2
0xe0d PUSH1 0x0
0xe0f DUP8
0xe10 DUP1
0xe11 EXTCODESIZE
0xe12 ISZERO
0xe13 ISZERO
0xe14 PUSH2 0x82b
0xe17 JUMPI
---
0xda1: JUMPDEST 
0xda2: V1377 = 0x1
0xda4: V1378 = S[0x1]
0xda5: V1379 = 0x4
0xda7: V1380 = S[0x4]
0xda8: V1381 = 0x2
0xdaa: V1382 = S[0x2]
0xdab: V1383 = 0x0
0xdae: V1384 = 0x1
0xdb0: V1385 = 0xa0
0xdb2: V1386 = 0x2
0xdb4: V1387 = EXP 0x2 0xa0
0xdb5: V1388 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb8: V1389 = AND 0xffffffffffffffffffffffffffffffffffffffff V1378
0xdba: V1390 = 0x1e1401f8
0xdc2: V1391 = AND 0xffffffffffffffffffffffffffffffffffffffff V1380
0xdc4: V1392 = AND 0xffffffffffffffffffffffffffffffffffffffff V1382
0xdc7: V1393 = 0x40
0xdc9: V1394 = M[0x40]
0xdca: V1395 = 0x20
0xdcc: V1396 = ADD 0x20 V1394
0xdcd: M[V1396] = 0x0
0xdce: V1397 = 0x40
0xdd0: V1398 = M[0x40]
0xdd1: V1399 = 0xe0
0xdd3: V1400 = 0x2
0xdd5: V1401 = EXP 0x2 0xe0
0xdd6: V1402 = 0xffffffff
0xddc: V1403 = AND 0x1e1401f8 0xffffffff
0xddd: V1404 = MUL 0x1e1401f8 0x100000000000000000000000000000000000000000000000000000000
0xddf: M[V1398] = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0xde0: V1405 = 0x1
0xde2: V1406 = 0xa0
0xde4: V1407 = 0x2
0xde6: V1408 = EXP 0x2 0xa0
0xde7: V1409 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdea: V1410 = AND 0xffffffffffffffffffffffffffffffffffffffff V1391
0xdeb: V1411 = 0x4
0xdee: V1412 = ADD V1398 0x4
0xdef: M[V1412] = V1410
0xdf3: V1413 = AND 0xffffffffffffffffffffffffffffffffffffffff V1392
0xdf4: V1414 = 0x24
0xdf7: V1415 = ADD V1398 0x24
0xdf8: M[V1415] = V1413
0xdf9: V1416 = 0x44
0xdfc: V1417 = ADD V1398 0x44
0xe00: M[V1417] = V362
0xe01: V1418 = 0x64
0xe03: V1419 = ADD 0x64 V1398
0xe04: V1420 = 0x20
0xe06: V1421 = 0x40
0xe08: V1422 = M[0x40]
0xe0b: V1423 = SUB V1419 V1422
0xe0d: V1424 = 0x0
0xe11: V1425 = EXTCODESIZE V1389
0xe12: V1426 = ISZERO V1425
0xe13: V1427 = ISZERO V1426
0xe14: V1428 = 0x82b
0xe17: JUMPI 0x82b V1427
---
Entry stack: [V12, 0x124, V362]
Stack pops: 1
Stack additions: [S0, 0x0, V1389, 0x1e1401f8, V1419, 0x20, V1422, V1423, V1422, 0x0, V1389]
Exit stack: [V12, 0x124, V362, 0x0, V1389, 0x1e1401f8, V1419, 0x20, V1422, V1423, V1422, 0x0, V1389]

================================

Block 0xe18
[0xe18:0xe1b]
---
Predecessors: [0xda1]
Successors: []
---
0xe18 PUSH1 0x0
0xe1a DUP1
0xe1b REVERT
---
0xe18: V1429 = 0x0
0xe1b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x124, V362, 0x0, V1389, 0x1e1401f8, V1419, 0x20, V1422, V1423, V1422, 0x0, V1389]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x124, V362, 0x0, V1389, 0x1e1401f8, V1419, 0x20, V1422, V1423, V1422, 0x0, V1389]

================================

Block 0xe1c
[0xe1c:0xe28]
---
Predecessors: []
Successors: [0x83c, 0xe29]
---
0xe1c JUMPDEST
0xe1d PUSH2 0x2c6
0xe20 GAS
0xe21 SUB
0xe22 CALL
0xe23 ISZERO
0xe24 ISZERO
0xe25 PUSH2 0x83c
0xe28 JUMPI
---
0xe1c: JUMPDEST 
0xe1d: V1430 = 0x2c6
0xe20: V1431 = GAS
0xe21: V1432 = SUB V1431 0x2c6
0xe22: V1433 = CALL V1432 S0 S1 S2 S3 S4 S5
0xe23: V1434 = ISZERO V1433
0xe24: V1435 = ISZERO V1434
0xe25: V1436 = 0x83c
0xe28: JUMPI 0x83c V1435
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xe29
[0xe29:0xe38]
---
Predecessors: [0xe1c]
Successors: [0xe39]
---
0xe29 PUSH1 0x0
0xe2b DUP1
0xe2c REVERT
0xe2d JUMPDEST
0xe2e POP
0xe2f POP
0xe30 POP
0xe31 PUSH1 0x40
0xe33 MLOAD
0xe34 DUP1
0xe35 MLOAD
0xe36 SWAP2
0xe37 POP
0xe38 POP
---
0xe29: V1437 = 0x0
0xe2c: REVERT 0x0 0x0
0xe2d: JUMPDEST 
0xe31: V1438 = 0x40
0xe33: V1439 = M[0x40]
0xe35: V1440 = M[V1439]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1440]
Exit stack: []

================================

Block 0xe39
[0xe39:0xe3d]
---
Predecessors: [0xe29]
Successors: []
Has unresolved jump.
---
0xe39 JUMPDEST
0xe3a SWAP2
0xe3b SWAP1
0xe3c POP
0xe3d JUMP
---
0xe39: JUMPDEST 
0xe3d: JUMP S2
---
Entry stack: [V1440]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V1440]

================================

Block 0xe3e
[0xe3e:0xe4c]
---
Predecessors: [0x406]
Successors: [0x228]
---
0xe3e JUMPDEST
0xe3f PUSH1 0x2
0xe41 SLOAD
0xe42 PUSH1 0x1
0xe44 PUSH1 0xa0
0xe46 PUSH1 0x2
0xe48 EXP
0xe49 SUB
0xe4a AND
0xe4b DUP2
0xe4c JUMP
---
0xe3e: JUMPDEST 
0xe3f: V1441 = 0x2
0xe41: V1442 = S[0x2]
0xe42: V1443 = 0x1
0xe44: V1444 = 0xa0
0xe46: V1445 = 0x2
0xe48: V1446 = EXP 0x2 0xa0
0xe49: V1447 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4a: V1448 = AND 0xffffffffffffffffffffffffffffffffffffffff V1442
0xe4c: JUMP 0x228
---
Entry stack: [V12, 0x228]
Stack pops: 1
Stack additions: [S0, V1448]
Exit stack: [V12, 0x228, V1448]

================================

Block 0xe4d
[0xe4d:0xe5e]
---
Predecessors: [0x435]
Successors: [0x124]
---
0xe4d JUMPDEST
0xe4e PUSH1 0x8
0xe50 PUSH1 0x20
0xe52 MSTORE
0xe53 PUSH1 0x0
0xe55 SWAP1
0xe56 DUP2
0xe57 MSTORE
0xe58 PUSH1 0x40
0xe5a SWAP1
0xe5b SHA3
0xe5c SLOAD
0xe5d DUP2
0xe5e JUMP
---
0xe4d: JUMPDEST 
0xe4e: V1449 = 0x8
0xe50: V1450 = 0x20
0xe52: M[0x20] = 0x8
0xe53: V1451 = 0x0
0xe57: M[0x0] = V402
0xe58: V1452 = 0x40
0xe5b: V1453 = SHA3 0x0 0x40
0xe5c: V1454 = S[V1453]
0xe5e: JUMP 0x124
---
Entry stack: [V12, 0x124, V402]
Stack pops: 2
Stack additions: [S1, V1454]
Exit stack: [V12, 0x124, V1454]

================================

Block 0xe5f
[0xe5f:0xe6d]
---
Predecessors: [0x466]
Successors: [0x228]
---
0xe5f JUMPDEST
0xe60 PUSH1 0x4
0xe62 SLOAD
0xe63 PUSH1 0x1
0xe65 PUSH1 0xa0
0xe67 PUSH1 0x2
0xe69 EXP
0xe6a SUB
0xe6b AND
0xe6c DUP2
0xe6d JUMP
---
0xe5f: JUMPDEST 
0xe60: V1455 = 0x4
0xe62: V1456 = S[0x4]
0xe63: V1457 = 0x1
0xe65: V1458 = 0xa0
0xe67: V1459 = 0x2
0xe69: V1460 = EXP 0x2 0xa0
0xe6a: V1461 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe6b: V1462 = AND 0xffffffffffffffffffffffffffffffffffffffff V1456
0xe6d: JUMP 0x228
---
Entry stack: [V12, 0x228]
Stack pops: 1
Stack additions: [S0, V1462]
Exit stack: [V12, 0x228, V1462]

================================

Block 0xe6e
[0xe6e:0xe87]
---
Predecessors: [0x495]
Successors: [0xe88, 0xe90]
---
0xe6e JUMPDEST
0xe6f PUSH1 0x0
0xe71 DUP1
0xe72 SLOAD
0xe73 DUP2
0xe74 SWAP1
0xe75 CALLER
0xe76 PUSH1 0x1
0xe78 PUSH1 0xa0
0xe7a PUSH1 0x2
0xe7c EXP
0xe7d SUB
0xe7e SWAP1
0xe7f DUP2
0xe80 AND
0xe81 SWAP2
0xe82 AND
0xe83 EQ
0xe84 PUSH2 0xe90
0xe87 JUMPI
---
0xe6e: JUMPDEST 
0xe6f: V1463 = 0x0
0xe72: V1464 = S[0x0]
0xe75: V1465 = CALLER
0xe76: V1466 = 0x1
0xe78: V1467 = 0xa0
0xe7a: V1468 = 0x2
0xe7c: V1469 = EXP 0x2 0xa0
0xe7d: V1470 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe80: V1471 = AND 0xffffffffffffffffffffffffffffffffffffffff V1465
0xe82: V1472 = AND V1464 0xffffffffffffffffffffffffffffffffffffffff
0xe83: V1473 = EQ V1472 V1471
0xe84: V1474 = 0xe90
0xe87: JUMPI 0xe90 V1473
---
Entry stack: [V12, 0x201]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x201, 0x0, 0x0]

================================

Block 0xe88
[0xe88:0xe8f]
---
Predecessors: [0xe6e]
Successors: [0xa49]
---
0xe88 PUSH1 0x0
0xe8a SWAP2
0xe8b POP
0xe8c PUSH2 0xa49
0xe8f JUMP
---
0xe88: V1475 = 0x0
0xe8c: V1476 = 0xa49
0xe8f: JUMP 0xa49
---
Entry stack: [V12, 0x201, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x201, 0x0, 0x0]

================================

Block 0xe90
[0xe90:0xeed]
---
Predecessors: [0xe6e]
Successors: [0xeee, 0xef2]
---
0xe90 JUMPDEST
0xe91 POP
0xe92 PUSH1 0x2
0xe94 SLOAD
0xe95 PUSH1 0x1
0xe97 PUSH1 0xa0
0xe99 PUSH1 0x2
0xe9b EXP
0xe9c SUB
0xe9d AND
0xe9e DUP1
0xe9f PUSH4 0xa9059cbb
0xea4 CALLER
0xea5 DUP3
0xea6 PUSH4 0x70a08231
0xeab ADDRESS
0xeac PUSH1 0x0
0xeae PUSH1 0x40
0xeb0 MLOAD
0xeb1 PUSH1 0x20
0xeb3 ADD
0xeb4 MSTORE
0xeb5 PUSH1 0x40
0xeb7 MLOAD
0xeb8 PUSH1 0xe0
0xeba PUSH1 0x2
0xebc EXP
0xebd PUSH4 0xffffffff
0xec2 DUP5
0xec3 AND
0xec4 MUL
0xec5 DUP2
0xec6 MSTORE
0xec7 PUSH1 0x1
0xec9 PUSH1 0xa0
0xecb PUSH1 0x2
0xecd EXP
0xece SUB
0xecf SWAP1
0xed0 SWAP2
0xed1 AND
0xed2 PUSH1 0x4
0xed4 DUP3
0xed5 ADD
0xed6 MSTORE
0xed7 PUSH1 0x24
0xed9 ADD
0xeda PUSH1 0x20
0xedc PUSH1 0x40
0xede MLOAD
0xedf DUP1
0xee0 DUP4
0xee1 SUB
0xee2 DUP2
0xee3 PUSH1 0x0
0xee5 DUP8
0xee6 DUP1
0xee7 EXTCODESIZE
0xee8 ISZERO
0xee9 ISZERO
0xeea PUSH2 0xef2
0xeed JUMPI
---
0xe90: JUMPDEST 
0xe92: V1477 = 0x2
0xe94: V1478 = S[0x2]
0xe95: V1479 = 0x1
0xe97: V1480 = 0xa0
0xe99: V1481 = 0x2
0xe9b: V1482 = EXP 0x2 0xa0
0xe9c: V1483 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9d: V1484 = AND 0xffffffffffffffffffffffffffffffffffffffff V1478
0xe9f: V1485 = 0xa9059cbb
0xea4: V1486 = CALLER
0xea6: V1487 = 0x70a08231
0xeab: V1488 = ADDRESS
0xeac: V1489 = 0x0
0xeae: V1490 = 0x40
0xeb0: V1491 = M[0x40]
0xeb1: V1492 = 0x20
0xeb3: V1493 = ADD 0x20 V1491
0xeb4: M[V1493] = 0x0
0xeb5: V1494 = 0x40
0xeb7: V1495 = M[0x40]
0xeb8: V1496 = 0xe0
0xeba: V1497 = 0x2
0xebc: V1498 = EXP 0x2 0xe0
0xebd: V1499 = 0xffffffff
0xec3: V1500 = AND 0x70a08231 0xffffffff
0xec4: V1501 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xec6: M[V1495] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xec7: V1502 = 0x1
0xec9: V1503 = 0xa0
0xecb: V1504 = 0x2
0xecd: V1505 = EXP 0x2 0xa0
0xece: V1506 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed1: V1507 = AND V1488 0xffffffffffffffffffffffffffffffffffffffff
0xed2: V1508 = 0x4
0xed5: V1509 = ADD V1495 0x4
0xed6: M[V1509] = V1507
0xed7: V1510 = 0x24
0xed9: V1511 = ADD 0x24 V1495
0xeda: V1512 = 0x20
0xedc: V1513 = 0x40
0xede: V1514 = M[0x40]
0xee1: V1515 = SUB V1511 V1514
0xee3: V1516 = 0x0
0xee7: V1517 = EXTCODESIZE V1484
0xee8: V1518 = ISZERO V1517
0xee9: V1519 = ISZERO V1518
0xeea: V1520 = 0xef2
0xeed: JUMPI 0xef2 V1519
---
Entry stack: [V12, 0x201, 0x0, 0x0]
Stack pops: 1
Stack additions: [V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511, 0x20, V1514, V1515, V1514, 0x0, V1484]
Exit stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511, 0x20, V1514, V1515, V1514, 0x0, V1484]

================================

Block 0xeee
[0xeee:0xef1]
---
Predecessors: [0xe90]
Successors: []
---
0xeee PUSH1 0x0
0xef0 DUP1
0xef1 REVERT
---
0xeee: V1521 = 0x0
0xef1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511, 0x20, V1514, V1515, V1514, 0x0, V1484]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511, 0x20, V1514, V1515, V1514, 0x0, V1484]

================================

Block 0xef2
[0xef2:0xefe]
---
Predecessors: [0xe90]
Successors: [0xeff, 0xf03]
---
0xef2 JUMPDEST
0xef3 PUSH2 0x2c6
0xef6 GAS
0xef7 SUB
0xef8 CALL
0xef9 ISZERO
0xefa ISZERO
0xefb PUSH2 0xf03
0xefe JUMPI
---
0xef2: JUMPDEST 
0xef3: V1522 = 0x2c6
0xef6: V1523 = GAS
0xef7: V1524 = SUB V1523 0x2c6
0xef8: V1525 = CALL V1524 V1484 0x0 V1514 V1515 V1514 0x20
0xef9: V1526 = ISZERO V1525
0xefa: V1527 = ISZERO V1526
0xefb: V1528 = 0xf03
0xefe: JUMPI 0xf03 V1527
---
Entry stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511, 0x20, V1514, V1515, V1514, 0x0, V1484]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511]

================================

Block 0xeff
[0xeff:0xf02]
---
Predecessors: [0xef2]
Successors: []
---
0xeff PUSH1 0x0
0xf01 DUP1
0xf02 REVERT
---
0xeff: V1529 = 0x0
0xf02: REVERT 0x0 0x0
---
Entry stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511]

================================

Block 0xf03
[0xf03:0xf54]
---
Predecessors: [0xef2]
Successors: [0xf55, 0xf59]
---
0xf03 JUMPDEST
0xf04 POP
0xf05 POP
0xf06 POP
0xf07 PUSH1 0x40
0xf09 MLOAD
0xf0a DUP1
0xf0b MLOAD
0xf0c SWAP1
0xf0d POP
0xf0e PUSH1 0x0
0xf10 PUSH1 0x40
0xf12 MLOAD
0xf13 PUSH1 0x20
0xf15 ADD
0xf16 MSTORE
0xf17 PUSH1 0x40
0xf19 MLOAD
0xf1a PUSH1 0xe0
0xf1c PUSH1 0x2
0xf1e EXP
0xf1f PUSH4 0xffffffff
0xf24 DUP6
0xf25 AND
0xf26 MUL
0xf27 DUP2
0xf28 MSTORE
0xf29 PUSH1 0x1
0xf2b PUSH1 0xa0
0xf2d PUSH1 0x2
0xf2f EXP
0xf30 SUB
0xf31 SWAP1
0xf32 SWAP3
0xf33 AND
0xf34 PUSH1 0x4
0xf36 DUP4
0xf37 ADD
0xf38 MSTORE
0xf39 PUSH1 0x24
0xf3b DUP3
0xf3c ADD
0xf3d MSTORE
0xf3e PUSH1 0x44
0xf40 ADD
0xf41 PUSH1 0x20
0xf43 PUSH1 0x40
0xf45 MLOAD
0xf46 DUP1
0xf47 DUP4
0xf48 SUB
0xf49 DUP2
0xf4a PUSH1 0x0
0xf4c DUP8
0xf4d DUP1
0xf4e EXTCODESIZE
0xf4f ISZERO
0xf50 ISZERO
0xf51 PUSH2 0xf59
0xf54 JUMPI
---
0xf03: JUMPDEST 
0xf07: V1530 = 0x40
0xf09: V1531 = M[0x40]
0xf0b: V1532 = M[V1531]
0xf0e: V1533 = 0x0
0xf10: V1534 = 0x40
0xf12: V1535 = M[0x40]
0xf13: V1536 = 0x20
0xf15: V1537 = ADD 0x20 V1535
0xf16: M[V1537] = 0x0
0xf17: V1538 = 0x40
0xf19: V1539 = M[0x40]
0xf1a: V1540 = 0xe0
0xf1c: V1541 = 0x2
0xf1e: V1542 = EXP 0x2 0xe0
0xf1f: V1543 = 0xffffffff
0xf25: V1544 = AND 0xa9059cbb 0xffffffff
0xf26: V1545 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xf28: M[V1539] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf29: V1546 = 0x1
0xf2b: V1547 = 0xa0
0xf2d: V1548 = 0x2
0xf2f: V1549 = EXP 0x2 0xa0
0xf30: V1550 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf33: V1551 = AND V1486 0xffffffffffffffffffffffffffffffffffffffff
0xf34: V1552 = 0x4
0xf37: V1553 = ADD V1539 0x4
0xf38: M[V1553] = V1551
0xf39: V1554 = 0x24
0xf3c: V1555 = ADD V1539 0x24
0xf3d: M[V1555] = V1532
0xf3e: V1556 = 0x44
0xf40: V1557 = ADD 0x44 V1539
0xf41: V1558 = 0x20
0xf43: V1559 = 0x40
0xf45: V1560 = M[0x40]
0xf48: V1561 = SUB V1557 V1560
0xf4a: V1562 = 0x0
0xf4e: V1563 = EXTCODESIZE V1484
0xf4f: V1564 = ISZERO V1563
0xf50: V1565 = ISZERO V1564
0xf51: V1566 = 0xf59
0xf54: JUMPI 0xf59 V1565
---
Entry stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1486, V1484, 0x70a08231, V1511]
Stack pops: 6
Stack additions: [S5, S4, V1557, 0x20, V1560, V1561, V1560, 0x0, S5]
Exit stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1557, 0x20, V1560, V1561, V1560, 0x0, V1484]

================================

Block 0xf55
[0xf55:0xf58]
---
Predecessors: [0xf03]
Successors: []
---
0xf55 PUSH1 0x0
0xf57 DUP1
0xf58 REVERT
---
0xf55: V1567 = 0x0
0xf58: REVERT 0x0 0x0
---
Entry stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1557, 0x20, V1560, V1561, V1560, 0x0, V1484]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1557, 0x20, V1560, V1561, V1560, 0x0, V1484]

================================

Block 0xf59
[0xf59:0xf65]
---
Predecessors: [0xf03]
Successors: [0xf66, 0xf6a]
---
0xf59 JUMPDEST
0xf5a PUSH2 0x2c6
0xf5d GAS
0xf5e SUB
0xf5f CALL
0xf60 ISZERO
0xf61 ISZERO
0xf62 PUSH2 0xf6a
0xf65 JUMPI
---
0xf59: JUMPDEST 
0xf5a: V1568 = 0x2c6
0xf5d: V1569 = GAS
0xf5e: V1570 = SUB V1569 0x2c6
0xf5f: V1571 = CALL V1570 V1484 0x0 V1560 V1561 V1560 0x20
0xf60: V1572 = ISZERO V1571
0xf61: V1573 = ISZERO V1572
0xf62: V1574 = 0xf6a
0xf65: JUMPI 0xf6a V1573
---
Entry stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1557, 0x20, V1560, V1561, V1560, 0x0, V1484]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1557]

================================

Block 0xf66
[0xf66:0xf69]
---
Predecessors: [0xf59]
Successors: []
---
0xf66 PUSH1 0x0
0xf68 DUP1
0xf69 REVERT
---
0xf66: V1575 = 0x0
0xf69: REVERT 0x0 0x0
---
Entry stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1557]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1557]

================================

Block 0xf6a
[0xf6a:0xf7a]
---
Predecessors: [0xf59]
Successors: [0xf7b, 0xf7c]
---
0xf6a JUMPDEST
0xf6b POP
0xf6c POP
0xf6d POP
0xf6e PUSH1 0x40
0xf70 MLOAD
0xf71 DUP1
0xf72 MLOAD
0xf73 SWAP1
0xf74 POP
0xf75 ISZERO
0xf76 ISZERO
0xf77 PUSH2 0xf7c
0xf7a JUMPI
---
0xf6a: JUMPDEST 
0xf6e: V1576 = 0x40
0xf70: V1577 = M[0x40]
0xf72: V1578 = M[V1577]
0xf75: V1579 = ISZERO V1578
0xf76: V1580 = ISZERO V1579
0xf77: V1581 = 0xf7c
0xf7a: JUMPI 0xf7c V1580
---
Entry stack: [V12, 0x201, 0x0, V1484, V1484, 0xa9059cbb, V1557]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V1484]

================================

Block 0xf7b
[0xf7b:0xf7b]
---
Predecessors: [0xf6a]
Successors: []
---
0xf7b INVALID
---
0xf7b: INVALID 
---
Entry stack: [V12, 0x201, 0x0, V1484]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x201, 0x0, V1484]

================================

Block 0xf7c
[0xf7c:0xf80]
---
Predecessors: [0xf6a]
Successors: [0xf81]
---
0xf7c JUMPDEST
0xf7d PUSH1 0x1
0xf7f SWAP2
0xf80 POP
---
0xf7c: JUMPDEST 
0xf7d: V1582 = 0x1
---
Entry stack: [V12, 0x201, 0x0, V1484]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0x201, 0x1, V1484]

================================

Block 0xf81
[0xf81:0xf84]
---
Predecessors: [0xf7c]
Successors: [0x201]
---
0xf81 JUMPDEST
0xf82 POP
0xf83 SWAP1
0xf84 JUMP
---
0xf81: JUMPDEST 
0xf84: JUMP 0x201
---
Entry stack: [V12, 0x201, 0x1, V1484]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x1]

================================

Block 0xf85
[0xf85:0xf85]
---
Predecessors: []
Successors: [0xf86]
---
0xf85 JUMPDEST
---
0xf85: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf86
[0xf86:0xfb3]
---
Predecessors: [0xf85]
Successors: []
---
0xf86 JUMPDEST
0xf87 JUMP
0xf88 STOP
0xf89 LOG1
0xf8a PUSH6 0x627a7a723058
0xf91 SHA3
0xf92 PUSH2 0x5f68
0xf95 MISSING 0xc0
0xf96 MISSING 0xef
0xf97 MISSING 0x4b
0xf98 SWAP4
0xf99 DUP10
0xf9a RETURN
0xf9b DUP12
0xf9c MISSING 0x46
0xf9d ADD
0xf9e MISSING 0x23
0xf9f SWAP13
0xfa0 PUSH15 0x943708f7ea526b8949ec9901e81970
0xfb0 MISSING 0xb3
0xfb1 RETURNDATACOPY
0xfb2 STOP
0xfb3 MISSING 0x29
---
0xf86: JUMPDEST 
0xf87: JUMP S0
0xf88: STOP 
0xf89: LOG S0 S1 S2
0xf8a: V1583 = 0x627a7a723058
0xf91: V1584 = SHA3 0x627a7a723058 S3
0xf92: V1585 = 0x5f68
0xf95: MISSING 0xc0
0xf96: MISSING 0xef
0xf97: MISSING 0x4b
0xf9a: RETURN S9 S4
0xf9c: MISSING 0x46
0xf9d: V1586 = ADD S0 S1
0xf9e: MISSING 0x23
0xfa0: V1587 = 0x943708f7ea526b8949ec9901e81970
0xfb0: MISSING 0xb3
0xfb1: RETURNDATACOPY S0 S1 S2
0xfb2: STOP 
0xfb3: MISSING 0x29
---
Entry stack: []
Stack pops: 486
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x7bfce37
Entry block: 0x11c
Exit block: 0x124
Body: 0x11c, 0x124

Function 1:
Public function signature: 0x828d0df
Entry block: 0x136
Exit block: 0x124
Body: 0x124, 0x136, 0x13d, 0x141, 0x79e

Function 2:
Public function signature: 0x1111cd24
Entry block: 0x167
Exit block: 0x124
Body: 0x124, 0x167, 0x16e, 0x172, 0x7b0, 0x827

Function 3:
Public function signature: 0x159ce057
Entry block: 0x18f
Exit block: 0x124
Body: 0x124, 0x18f, 0x196, 0x19a, 0x84d, 0x879, 0x8cd, 0x8d1, 0x8de, 0x8e2, 0x8ee

Function 4:
Public function signature: 0x1e1401f8
Entry block: 0x1b4
Exit block: 0x124
Body: 0x124, 0x1b4, 0x1bb, 0x1bf, 0x8f1, 0x95b, 0x95f, 0x96c, 0x970, 0x97c

Function 5:
Public function signature: 0x1fbe1979
Entry block: 0x1ee
Exit block: 0xa48
Body: 0x1ee, 0x1f5, 0x1f9, 0x201, 0x983, 0x9a4, 0x9ac, 0xa22, 0xa26, 0xa33, 0xa37, 0xa48, 0xa49, 0xa4a

Function 6:
Public function signature: 0x20582b33
Entry block: 0x215
Exit block: 0x228
Body: 0x215, 0x21c, 0x220, 0x228, 0xa4e

Function 7:
Public function signature: 0x35f2e0a7
Entry block: 0x244
Exit block: 0x124
Body: 0x124, 0x244, 0xa5d, 0xa68, 0xa74, 0xa7b, 0xa7d, 0xa81

Function 8:
Public function signature: 0x387a76ce
Entry block: 0x25e
Exit block: 0x228
Body: 0x228, 0x25e, 0x265, 0x269, 0xa85

Function 9:
Public function signature: 0x3bb66a7b
Entry block: 0x28d
Exit block: 0x124
Body: 0x124, 0x28d, 0x294, 0x298, 0xa94, 0xaeb

Function 10:
Public function signature: 0x3ccfd60b
Entry block: 0x2be
Exit block: 0x201
Body: 0x201, 0x2be, 0x2c5, 0x2c9

Function 11:
Public function signature: 0x40ab7b8c
Entry block: 0x2e5
Exit block: 0x228
Body: 0x228, 0x2e5, 0x2ec, 0x2f0, 0xccf

Function 12:
Public function signature: 0x41eccbd5
Entry block: 0x314
Exit block: 0x124
Body: 0x124, 0x314, 0x31b, 0x31f, 0xcde

Function 13:
Public function signature: 0x65483f69
Entry block: 0x339
Exit block: 0x340
Body: 0x124, 0x339, 0x340, 0x344

Function 14:
Public function signature: 0x77ac2957
Entry block: 0x36a
Exit block: 0x124
Body: 0x124, 0x36a, 0x371, 0x375, 0xd61

Function 15:
Public function signature: 0x86d1a69f
Entry block: 0x38f
Exit block: 0xd82
Body: 0x38f, 0x396, 0x39a, 0xd67, 0xd7e, 0xd82

Function 16:
Public function signature: 0x8da5cb5b
Entry block: 0x3a4
Exit block: 0x228
Body: 0x228, 0x3a4, 0x3ab, 0x3af, 0xd92

Function 17:
Public function signature: 0xa5a9ba8d
Entry block: 0x3d3
Exit block: 0x124
Body: 0x124, 0x3d3, 0x3da, 0x3de, 0xda1, 0xe18

Function 18:
Public function signature: 0xb8066bcb
Entry block: 0x3fb
Exit block: 0x228
Body: 0x228, 0x3fb, 0x402, 0x406, 0xe3e

Function 19:
Public function signature: 0xb9d1ed4a
Entry block: 0x42a
Exit block: 0x124
Body: 0x124, 0x42a, 0x431, 0x435, 0xe4d

Function 20:
Public function signature: 0xc3e8fb40
Entry block: 0x45b
Exit block: 0x228
Body: 0x228, 0x45b, 0x462, 0x466, 0xe5f

Function 21:
Public function signature: 0xce31a06b
Entry block: 0x48a
Exit block: 0x201
Body: 0x201, 0x48a, 0x491, 0x495, 0xa49, 0xa4a, 0xe6e, 0xe88, 0xe90, 0xeee, 0xef2, 0xeff, 0xf03, 0xf55, 0xf59, 0xf66, 0xf6a, 0xf7b, 0xf7c, 0xf81

Function 22:
Public function signature: 0xd75352e1
Entry block: 0x4b1
Exit block: 0x3a2
Body: 0x3a2, 0x4b1, 0x4b8, 0x4bc, 0xd90

Function 23:
Public fallback function
Entry block: 0x117
Exit block: 0x117
Body: 0x117

Function 24:
Private function
Entry block: 0xce4
Exit block: 0x848
Body: 0x82b, 0x83c, 0x848, 0xce4

Function 25:
Private function
Entry block: 0xb11
Exit block: 0xcc9
Body: 0xb11, 0xb34, 0xb3c, 0xbdf, 0xbf0, 0xc5f, 0xc70, 0xcb0, 0xcc1, 0xcc9

Function 26:
Private function
Entry block: 0x4c6
Exit block: 0x799
Body: 0x4c6, 0x50c, 0x51d, 0x587, 0x598, 0x5aa, 0x610, 0x621, 0x633, 0x67b, 0x68c, 0x714, 0x725, 0x799

