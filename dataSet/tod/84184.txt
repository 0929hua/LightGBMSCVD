Block 0x0
[0x0:0x1e]
---
Predecessors: []
Successors: [0x1f, 0x4d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH4 0xffffffff
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 AND
0x14 PUSH4 0x2d05d3f
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x4d
0x1e JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xffffffff
0xa: V3 = 0xe0
0xc: V4 = 0x2
0xe: V5 = EXP 0x2 0xe0
0xf: V6 = 0x0
0x11: V7 = CALLDATALOAD 0x0
0x12: V8 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x13: V9 = AND V8 0xffffffff
0x14: V10 = 0x2d05d3f
0x1a: V11 = EQ V9 0x2d05d3f
0x1b: V12 = 0x4d
0x1e: JUMPI 0x4d V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0x0]
Successors: [0x2a, 0x79]
---
0x1f DUP1
0x20 PUSH4 0x2e1a7d4d
0x25 EQ
0x26 PUSH2 0x79
0x29 JUMPI
---
0x20: V13 = 0x2e1a7d4d
0x25: V14 = EQ 0x2e1a7d4d V9
0x26: V15 = 0x79
0x29: JUMPI 0x79 V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x8e]
---
0x2a DUP1
0x2b PUSH4 0x2fd2e742
0x30 EQ
0x31 PUSH2 0x8e
0x34 JUMPI
---
0x2b: V16 = 0x2fd2e742
0x30: V17 = EQ 0x2fd2e742 V9
0x31: V18 = 0x8e
0x34: JUMPI 0x8e V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xe0]
---
0x35 DUP1
0x36 PUSH4 0x853828b6
0x3b EQ
0x3c PUSH2 0xe0
0x3f JUMPI
---
0x36: V19 = 0x853828b6
0x3b: V20 = EQ 0x853828b6 V9
0x3c: V21 = 0xe0
0x3f: JUMPI 0xe0 V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xf2]
---
0x40 DUP1
0x41 PUSH4 0xe3dc3dfa
0x46 EQ
0x47 PUSH2 0xf2
0x4a JUMPI
---
0x41: V22 = 0xe3dc3dfa
0x46: V23 = EQ 0xe3dc3dfa V9
0x47: V24 = 0xf2
0x4a: JUMPI 0xf2 V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x4b
[0x4b:0x4c]
---
Predecessors: [0x40]
Successors: []
---
0x4b JUMPDEST
0x4c INVALID
---
0x4b: JUMPDEST 
0x4c: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x4d
[0x4d:0x53]
---
Predecessors: [0x0]
Successors: [0x54, 0x55]
---
0x4d JUMPDEST
0x4e CALLVALUE
0x4f ISZERO
0x50 PUSH2 0x55
0x53 JUMPI
---
0x4d: JUMPDEST 
0x4e: V25 = CALLVALUE
0x4f: V26 = ISZERO V25
0x50: V27 = 0x55
0x53: JUMPI 0x55 V26
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x54
[0x54:0x54]
---
Predecessors: [0x4d]
Successors: []
---
0x54 INVALID
---
0x54: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x55
[0x55:0x5c]
---
Predecessors: [0x4d]
Successors: [0x10b]
---
0x55 JUMPDEST
0x56 PUSH2 0x5d
0x59 PUSH2 0x10b
0x5c JUMP
---
0x55: JUMPDEST 
0x56: V28 = 0x5d
0x59: V29 = 0x10b
0x5c: JUMP 0x10b
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x5d]
Exit stack: [V9, 0x5d]

================================

Block 0x5d
[0x5d:0x78]
---
Predecessors: [0x10b]
Successors: []
---
0x5d JUMPDEST
0x5e PUSH1 0x40
0x60 DUP1
0x61 MLOAD
0x62 PUSH1 0x1
0x64 PUSH1 0xa0
0x66 PUSH1 0x2
0x68 EXP
0x69 SUB
0x6a SWAP1
0x6b SWAP3
0x6c AND
0x6d DUP3
0x6e MSTORE
0x6f MLOAD
0x70 SWAP1
0x71 DUP2
0x72 SWAP1
0x73 SUB
0x74 PUSH1 0x20
0x76 ADD
0x77 SWAP1
0x78 RETURN
---
0x5d: JUMPDEST 
0x5e: V30 = 0x40
0x61: V31 = M[0x40]
0x62: V32 = 0x1
0x64: V33 = 0xa0
0x66: V34 = 0x2
0x68: V35 = EXP 0x2 0xa0
0x69: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c: V37 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x6e: M[V31] = V37
0x6f: V38 = M[0x40]
0x73: V39 = SUB V31 V38
0x74: V40 = 0x20
0x76: V41 = ADD 0x20 V39
0x78: RETURN V38 V41
---
Entry stack: [V9, 0x5d, V100]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x5d]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0x1f]
Successors: [0x80, 0x81]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x81
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V42 = CALLVALUE
0x7b: V43 = ISZERO V42
0x7c: V44 = 0x81
0x7f: JUMPI 0x81 V43
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x80
[0x80:0x80]
---
Predecessors: [0x79]
Successors: []
---
0x80 INVALID
---
0x80: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x79]
Successors: [0x11a]
---
0x81 JUMPDEST
0x82 PUSH2 0x8c
0x85 PUSH1 0x4
0x87 CALLDATALOAD
0x88 PUSH2 0x11a
0x8b JUMP
---
0x81: JUMPDEST 
0x82: V45 = 0x8c
0x85: V46 = 0x4
0x87: V47 = CALLDATALOAD 0x4
0x88: V48 = 0x11a
0x8b: JUMP 0x11a
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x8c, V47]
Exit stack: [V9, 0x8c, V47]

================================

Block 0x8c
[0x8c:0x8d]
---
Predecessors: [0x167, 0x207, 0x3f6]
Successors: []
---
0x8c JUMPDEST
0x8d STOP
---
0x8c: JUMPDEST 
0x8d: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x8e
[0x8e:0x94]
---
Predecessors: [0x2a]
Successors: [0x95, 0x96]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 ISZERO
0x91 PUSH2 0x96
0x94 JUMPI
---
0x8e: JUMPDEST 
0x8f: V49 = CALLVALUE
0x90: V50 = ISZERO V49
0x91: V51 = 0x96
0x94: JUMPI 0x96 V50
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x95
[0x95:0x95]
---
Predecessors: [0x8e]
Successors: []
---
0x95 INVALID
---
0x95: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8e]
Successors: [0x16a]
---
0x96 JUMPDEST
0x97 PUSH2 0xa1
0x9a PUSH1 0x4
0x9c CALLDATALOAD
0x9d PUSH2 0x16a
0xa0 JUMP
---
0x96: JUMPDEST 
0x97: V52 = 0xa1
0x9a: V53 = 0x4
0x9c: V54 = CALLDATALOAD 0x4
0x9d: V55 = 0x16a
0xa0: JUMP 0x16a
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0xa1, V54]
Exit stack: [V9, 0xa1, V54]

================================

Block 0xa1
[0xa1:0xdf]
---
Predecessors: [0x17c]
Successors: []
---
0xa1 JUMPDEST
0xa2 PUSH1 0x40
0xa4 DUP1
0xa5 MLOAD
0xa6 PUSH3 0xffffff
0xaa SWAP6
0xab DUP7
0xac AND
0xad DUP2
0xae MSTORE
0xaf PUSH1 0x1
0xb1 PUSH1 0xa0
0xb3 PUSH1 0x2
0xb5 EXP
0xb6 SUB
0xb7 SWAP1
0xb8 SWAP5
0xb9 AND
0xba PUSH1 0x20
0xbc DUP6
0xbd ADD
0xbe MSTORE
0xbf PUSH6 0xffffffffffff
0xc6 SWAP1
0xc7 SWAP3
0xc8 AND
0xc9 DUP4
0xca DUP4
0xcb ADD
0xcc MSTORE
0xcd SWAP1
0xce SWAP3
0xcf AND
0xd0 PUSH1 0x60
0xd2 DUP3
0xd3 ADD
0xd4 MSTORE
0xd5 SWAP1
0xd6 MLOAD
0xd7 SWAP1
0xd8 DUP2
0xd9 SWAP1
0xda SUB
0xdb PUSH1 0x80
0xdd ADD
0xde SWAP1
0xdf RETURN
---
0xa1: JUMPDEST 
0xa2: V56 = 0x40
0xa5: V57 = M[0x40]
0xa6: V58 = 0xffffff
0xac: V59 = AND 0xffffff V140
0xae: M[V57] = V59
0xaf: V60 = 0x1
0xb1: V61 = 0xa0
0xb3: V62 = 0x2
0xb5: V63 = EXP 0x2 0xa0
0xb6: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V65 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0xba: V66 = 0x20
0xbd: V67 = ADD V57 0x20
0xbe: M[V67] = V65
0xbf: V68 = 0xffffffffffff
0xc8: V69 = AND V154 0xffffffffffff
0xcb: V70 = ADD 0x40 V57
0xcc: M[V70] = V69
0xcf: V71 = AND 0xffffff V159
0xd0: V72 = 0x60
0xd3: V73 = ADD V57 0x60
0xd4: M[V73] = V71
0xd6: V74 = M[0x40]
0xda: V75 = SUB V57 V74
0xdb: V76 = 0x80
0xdd: V77 = ADD 0x80 V75
0xdf: RETURN V74 V77
---
Entry stack: [V9, 0xa1, V140, V148, V154, V159]
Stack pops: 4
Stack additions: []
Exit stack: [V9, 0xa1]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x35]
Successors: [0xe7, 0xe8]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xe8
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V78 = CALLVALUE
0xe2: V79 = ISZERO V78
0xe3: V80 = 0xe8
0xe6: JUMPI 0xe8 V79
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xe7
[0xe7:0xe7]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 INVALID
---
0xe7: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xe8
[0xe8:0xef]
---
Predecessors: [0xe0]
Successors: [0x1b4]
---
0xe8 JUMPDEST
0xe9 PUSH2 0x8c
0xec PUSH2 0x1b4
0xef JUMP
---
0xe8: JUMPDEST 
0xe9: V81 = 0x8c
0xec: V82 = 0x1b4
0xef: JUMP 0x1b4
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V9, 0x8c]

================================

Block 0xf0
[0xf0:0xf1]
---
Predecessors: []
Successors: []
---
0xf0 JUMPDEST
0xf1 STOP
---
0xf0: JUMPDEST 
0xf1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf2
[0xf2:0x108]
---
Predecessors: [0x40]
Successors: [0x209]
---
0xf2 JUMPDEST
0xf3 PUSH2 0x8c
0xf6 PUSH2 0xffff
0xf9 PUSH1 0x4
0xfb CALLDATALOAD
0xfc AND
0xfd PUSH3 0xffffff
0x101 PUSH1 0x24
0x103 CALLDATALOAD
0x104 AND
0x105 PUSH2 0x209
0x108 JUMP
---
0xf2: JUMPDEST 
0xf3: V83 = 0x8c
0xf6: V84 = 0xffff
0xf9: V85 = 0x4
0xfb: V86 = CALLDATALOAD 0x4
0xfc: V87 = AND V86 0xffff
0xfd: V88 = 0xffffff
0x101: V89 = 0x24
0x103: V90 = CALLDATALOAD 0x24
0x104: V91 = AND V90 0xffffff
0x105: V92 = 0x209
0x108: JUMP 0x209
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x8c, V87, V91]
Exit stack: [V9, 0x8c, V87, V91]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: []
Successors: []
---
0x109 JUMPDEST
0x10a STOP
---
0x109: JUMPDEST 
0x10a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10b
[0x10b:0x119]
---
Predecessors: [0x55]
Successors: [0x5d]
---
0x10b JUMPDEST
0x10c PUSH1 0x0
0x10e SLOAD
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 AND
0x118 DUP2
0x119 JUMP
---
0x10b: JUMPDEST 
0x10c: V93 = 0x0
0x10e: V94 = S[0x0]
0x10f: V95 = 0x1
0x111: V96 = 0xa0
0x113: V97 = 0x2
0x115: V98 = EXP 0x2 0xa0
0x116: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x117: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x119: JUMP 0x5d
---
Entry stack: [V9, 0x5d]
Stack pops: 1
Stack additions: [S0, V100]
Exit stack: [V9, 0x5d, V100]

================================

Block 0x11a
[0x11a:0x130]
---
Predecessors: [0x81]
Successors: [0x131, 0x136]
---
0x11a JUMPDEST
0x11b PUSH1 0x0
0x11d SLOAD
0x11e CALLER
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 SWAP1
0x128 DUP2
0x129 AND
0x12a SWAP2
0x12b AND
0x12c EQ
0x12d PUSH2 0x136
0x130 JUMPI
---
0x11a: JUMPDEST 
0x11b: V101 = 0x0
0x11d: V102 = S[0x0]
0x11e: V103 = CALLER
0x11f: V104 = 0x1
0x121: V105 = 0xa0
0x123: V106 = 0x2
0x125: V107 = EXP 0x2 0xa0
0x126: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x12b: V110 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V111 = EQ V110 V109
0x12d: V112 = 0x136
0x130: JUMPI 0x136 V111
---
Entry stack: [V9, 0x8c, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V47]

================================

Block 0x131
[0x131:0x135]
---
Predecessors: [0x11a]
Successors: []
---
0x131 PUSH1 0x0
0x133 PUSH1 0x0
0x135 REVERT
---
0x131: V113 = 0x0
0x133: V114 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V9, 0x8c, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V47]

================================

Block 0x136
[0x136:0x164]
---
Predecessors: [0x11a]
Successors: [0x165, 0x166]
---
0x136 JUMPDEST
0x137 PUSH1 0x0
0x139 DUP1
0x13a SLOAD
0x13b PUSH1 0x40
0x13d MLOAD
0x13e PUSH1 0x1
0x140 PUSH1 0xa0
0x142 PUSH1 0x2
0x144 EXP
0x145 SUB
0x146 SWAP1
0x147 SWAP2
0x148 AND
0x149 SWAP2
0x14a DUP4
0x14b ISZERO
0x14c PUSH2 0x8fc
0x14f MUL
0x150 SWAP2
0x151 DUP5
0x152 SWAP2
0x153 DUP2
0x154 DUP2
0x155 DUP2
0x156 DUP6
0x157 DUP9
0x158 DUP9
0x159 CALL
0x15a SWAP4
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f ISZERO
0x160 ISZERO
0x161 PUSH2 0x166
0x164 JUMPI
---
0x136: JUMPDEST 
0x137: V115 = 0x0
0x13a: V116 = S[0x0]
0x13b: V117 = 0x40
0x13d: V118 = M[0x40]
0x13e: V119 = 0x1
0x140: V120 = 0xa0
0x142: V121 = 0x2
0x144: V122 = EXP 0x2 0xa0
0x145: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x148: V124 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V125 = ISZERO V47
0x14c: V126 = 0x8fc
0x14f: V127 = MUL 0x8fc V125
0x159: V128 = CALL V127 V124 V47 V118 0x0 V118 0x0
0x15f: V129 = ISZERO V128
0x160: V130 = ISZERO V129
0x161: V131 = 0x166
0x164: JUMPI 0x166 V130
---
Entry stack: [V9, 0x8c, V47]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x8c, V47]

================================

Block 0x165
[0x165:0x165]
---
Predecessors: [0x136]
Successors: []
---
0x165 INVALID
---
0x165: INVALID 
---
Entry stack: [V9, 0x8c, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V47]

================================

Block 0x166
[0x166:0x166]
---
Predecessors: [0x136]
Successors: [0x167]
---
0x166 JUMPDEST
---
0x166: JUMPDEST 
---
Entry stack: [V9, 0x8c, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V47]

================================

Block 0x167
[0x167:0x169]
---
Predecessors: [0x166]
Successors: [0x8c]
---
0x167 JUMPDEST
0x168 POP
0x169 JUMP
---
0x167: JUMPDEST 
0x169: JUMP 0x8c
---
Entry stack: [V9, 0x8c, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x16a
[0x16a:0x176]
---
Predecessors: [0x96]
Successors: [0x177, 0x178]
---
0x16a JUMPDEST
0x16b PUSH1 0x1
0x16d DUP2
0x16e PUSH2 0x4000
0x171 DUP2
0x172 LT
0x173 PUSH2 0x178
0x176 JUMPI
---
0x16a: JUMPDEST 
0x16b: V132 = 0x1
0x16e: V133 = 0x4000
0x172: V134 = LT V54 0x4000
0x173: V135 = 0x178
0x176: JUMPI 0x178 V134
---
Entry stack: [V9, 0xa1, V54]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V9, 0xa1, V54, 0x1, V54]

================================

Block 0x177
[0x177:0x177]
---
Predecessors: [0x16a]
Successors: []
---
0x177 INVALID
---
0x177: INVALID 
---
Entry stack: [V9, 0xa1, V54, 0x1, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xa1, V54, 0x1, V54]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x16a]
Successors: [0x17c]
---
0x178 JUMPDEST
0x179 ADD
0x17a PUSH1 0x0
---
0x178: JUMPDEST 
0x179: V136 = ADD V54 0x1
0x17a: V137 = 0x0
---
Entry stack: [V9, 0xa1, V54, 0x1, V54]
Stack pops: 2
Stack additions: [V136, 0x0]
Exit stack: [V9, 0xa1, V54, V136, 0x0]

================================

Block 0x17c
[0x17c:0x1b3]
---
Predecessors: [0x178]
Successors: [0xa1]
---
0x17c JUMPDEST
0x17d POP
0x17e SLOAD
0x17f PUSH3 0xffffff
0x183 DUP1
0x184 DUP3
0x185 AND
0x186 SWAP3
0x187 POP
0x188 PUSH1 0x1
0x18a PUSH1 0xa0
0x18c PUSH1 0x2
0x18e EXP
0x18f SUB
0x190 PUSH4 0x1000000
0x195 DUP4
0x196 DIV
0x197 AND
0x198 SWAP2
0x199 PUSH6 0xffffffffffff
0x1a0 PUSH1 0xb8
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 DUP3
0x1a6 DIV
0x1a7 AND
0x1a8 SWAP2
0x1a9 PUSH1 0xe8
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SWAP1
0x1af SWAP2
0x1b0 DIV
0x1b1 AND
0x1b2 DUP5
0x1b3 JUMP
---
0x17c: JUMPDEST 
0x17e: V138 = S[V136]
0x17f: V139 = 0xffffff
0x185: V140 = AND V138 0xffffff
0x188: V141 = 0x1
0x18a: V142 = 0xa0
0x18c: V143 = 0x2
0x18e: V144 = EXP 0x2 0xa0
0x18f: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x190: V146 = 0x1000000
0x196: V147 = DIV V138 0x1000000
0x197: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x199: V149 = 0xffffffffffff
0x1a0: V150 = 0xb8
0x1a2: V151 = 0x2
0x1a4: V152 = EXP 0x2 0xb8
0x1a6: V153 = DIV V138 0x10000000000000000000000000000000000000000000000
0x1a7: V154 = AND V153 0xffffffffffff
0x1a9: V155 = 0xe8
0x1ab: V156 = 0x2
0x1ad: V157 = EXP 0x2 0xe8
0x1b0: V158 = DIV V138 0x10000000000000000000000000000000000000000000000000000000000
0x1b1: V159 = AND V158 0xffffff
0x1b3: JUMP 0xa1
---
Entry stack: [V9, 0xa1, V54, V136, 0x0]
Stack pops: 4
Stack additions: [S3, V140, V148, V154, V159]
Exit stack: [V9, 0xa1, V140, V148, V154, V159]

================================

Block 0x1b4
[0x1b4:0x1ca]
---
Predecessors: [0xe8]
Successors: [0x1cb, 0x1d0]
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x0
0x1b7 SLOAD
0x1b8 CALLER
0x1b9 PUSH1 0x1
0x1bb PUSH1 0xa0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 SUB
0x1c1 SWAP1
0x1c2 DUP2
0x1c3 AND
0x1c4 SWAP2
0x1c5 AND
0x1c6 EQ
0x1c7 PUSH2 0x1d0
0x1ca JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V160 = 0x0
0x1b7: V161 = S[0x0]
0x1b8: V162 = CALLER
0x1b9: V163 = 0x1
0x1bb: V164 = 0xa0
0x1bd: V165 = 0x2
0x1bf: V166 = EXP 0x2 0xa0
0x1c0: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x1c5: V169 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V170 = EQ V169 V168
0x1c7: V171 = 0x1d0
0x1ca: JUMPI 0x1d0 V170
---
Entry stack: [V9, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c]

================================

Block 0x1cb
[0x1cb:0x1cf]
---
Predecessors: [0x1b4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd PUSH1 0x0
0x1cf REVERT
---
0x1cb: V172 = 0x0
0x1cd: V173 = 0x0
0x1cf: REVERT 0x0 0x0
---
Entry stack: [V9, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c]

================================

Block 0x1d0
[0x1d0:0x204]
---
Predecessors: [0x1b4]
Successors: [0x205, 0x206]
---
0x1d0 JUMPDEST
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 SLOAD
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 SWAP2
0x1e1 DUP3
0x1e2 AND
0x1e3 SWAP3
0x1e4 ADDRESS
0x1e5 SWAP1
0x1e6 SWAP3
0x1e7 AND
0x1e8 BALANCE
0x1e9 DUP1
0x1ea ISZERO
0x1eb PUSH2 0x8fc
0x1ee MUL
0x1ef SWAP3
0x1f0 SWAP1
0x1f1 SWAP2
0x1f2 SWAP1
0x1f3 DUP2
0x1f4 DUP2
0x1f5 DUP2
0x1f6 DUP6
0x1f7 DUP9
0x1f8 DUP9
0x1f9 CALL
0x1fa SWAP4
0x1fb POP
0x1fc POP
0x1fd POP
0x1fe POP
0x1ff ISZERO
0x200 ISZERO
0x201 PUSH2 0x206
0x204 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V174 = 0x0
0x1d4: V175 = S[0x0]
0x1d5: V176 = 0x40
0x1d7: V177 = M[0x40]
0x1d8: V178 = 0x1
0x1da: V179 = 0xa0
0x1dc: V180 = 0x2
0x1de: V181 = EXP 0x2 0xa0
0x1df: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x1e4: V184 = ADDRESS
0x1e7: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x1e8: V186 = BALANCE V185
0x1ea: V187 = ISZERO V186
0x1eb: V188 = 0x8fc
0x1ee: V189 = MUL 0x8fc V187
0x1f9: V190 = CALL V189 V183 V186 V177 0x0 V177 0x0
0x1ff: V191 = ISZERO V190
0x200: V192 = ISZERO V191
0x201: V193 = 0x206
0x204: JUMPI 0x206 V192
---
Entry stack: [V9, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c]

================================

Block 0x205
[0x205:0x205]
---
Predecessors: [0x1d0]
Successors: []
---
0x205 INVALID
---
0x205: INVALID 
---
Entry stack: [V9, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c]

================================

Block 0x206
[0x206:0x206]
---
Predecessors: [0x1d0]
Successors: [0x207]
---
0x206 JUMPDEST
---
0x206: JUMPDEST 
---
Entry stack: [V9, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c]

================================

Block 0x207
[0x207:0x208]
---
Predecessors: [0x206]
Successors: [0x8c]
---
0x207 JUMPDEST
0x208 JUMP
---
0x207: JUMPDEST 
0x208: JUMP 0x8c
---
Entry stack: [V9, 0x8c]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x209
[0x209:0x219]
---
Predecessors: [0xf2]
Successors: [0x21a, 0x21f]
---
0x209 JUMPDEST
0x20a PUSH1 0x0
0x20c DUP1
0x20d PUSH2 0x4000
0x210 PUSH2 0xffff
0x213 DUP6
0x214 AND
0x215 LT
0x216 PUSH2 0x21f
0x219 JUMPI
---
0x209: JUMPDEST 
0x20a: V194 = 0x0
0x20d: V195 = 0x4000
0x210: V196 = 0xffff
0x214: V197 = AND V87 0xffff
0x215: V198 = LT V197 0x4000
0x216: V199 = 0x21f
0x219: JUMPI 0x21f V198
---
Entry stack: [V9, 0x8c, V87, V91]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V9, 0x8c, V87, V91, 0x0, 0x0]

================================

Block 0x21a
[0x21a:0x21e]
---
Predecessors: [0x209]
Successors: []
---
0x21a PUSH1 0x0
0x21c PUSH1 0x0
0x21e REVERT
---
0x21a: V200 = 0x0
0x21c: V201 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V9, 0x8c, V87, V91, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V87, V91, 0x0, 0x0]

================================

Block 0x21f
[0x21f:0x22f]
---
Predecessors: [0x209]
Successors: [0x230, 0x231]
---
0x21f JUMPDEST
0x220 PUSH1 0x1
0x222 PUSH2 0xffff
0x225 DUP6
0x226 AND
0x227 PUSH2 0x4000
0x22a DUP2
0x22b LT
0x22c PUSH2 0x231
0x22f JUMPI
---
0x21f: JUMPDEST 
0x220: V202 = 0x1
0x222: V203 = 0xffff
0x226: V204 = AND V87 0xffff
0x227: V205 = 0x4000
0x22b: V206 = LT V204 0x4000
0x22c: V207 = 0x231
0x22f: JUMPI 0x231 V206
---
Entry stack: [V9, 0x8c, V87, V91, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x1, V204]
Exit stack: [V9, 0x8c, V87, V91, 0x0, 0x0, 0x1, V204]

================================

Block 0x230
[0x230:0x230]
---
Predecessors: [0x21f]
Successors: []
---
0x230 INVALID
---
0x230: INVALID 
---
Entry stack: [V9, 0x8c, V87, V91, 0x0, 0x0, 0x1, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V87, V91, 0x0, 0x0, 0x1, V204]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x21f]
Successors: [0x235]
---
0x231 JUMPDEST
0x232 ADD
0x233 PUSH1 0x0
---
0x231: JUMPDEST 
0x232: V208 = ADD V204 0x1
0x233: V209 = 0x0
---
Entry stack: [V9, 0x8c, V87, V91, 0x0, 0x0, 0x1, V204]
Stack pops: 2
Stack additions: [V208, 0x0]
Exit stack: [V9, 0x8c, V87, V91, 0x0, 0x0, V208, 0x0]

================================

Block 0x235
[0x235:0x23f]
---
Predecessors: [0x231]
Successors: [0x240]
---
0x235 JUMPDEST
0x236 POP
0x237 SWAP2
0x238 POP
0x239 PUSH5 0xe8d4a51000
0x23f CALLVALUE
---
0x235: JUMPDEST 
0x239: V210 = 0xe8d4a51000
0x23f: V211 = CALLVALUE
---
Entry stack: [V9, 0x8c, V87, V91, 0x0, 0x0, V208, 0x0]
Stack pops: 4
Stack additions: [S1, S2, 0xe8d4a51000, V211]
Exit stack: [V9, 0x8c, V87, V91, V208, 0x0, 0xe8d4a51000, V211]

================================

Block 0x240
[0x240:0x260]
---
Predecessors: [0x235]
Successors: [0x261, 0x266]
---
0x240 JUMPDEST
0x241 DUP4
0x242 SLOAD
0x243 SWAP2
0x244 SWAP1
0x245 DIV
0x246 SWAP2
0x247 POP
0x248 PUSH6 0xffffffffffff
0x24f PUSH1 0xb8
0x251 PUSH1 0x2
0x253 EXP
0x254 SWAP1
0x255 SWAP2
0x256 DIV
0x257 DUP2
0x258 AND
0x259 SWAP1
0x25a DUP3
0x25b AND
0x25c GT
0x25d PUSH2 0x266
0x260 JUMPI
---
0x240: JUMPDEST 
0x242: V212 = S[V208]
0x245: V213 = DIV V211 0xe8d4a51000
0x248: V214 = 0xffffffffffff
0x24f: V215 = 0xb8
0x251: V216 = 0x2
0x253: V217 = EXP 0x2 0xb8
0x256: V218 = DIV V212 0x10000000000000000000000000000000000000000000000
0x258: V219 = AND 0xffffffffffff V218
0x25b: V220 = AND V213 0xffffffffffff
0x25c: V221 = GT V220 V219
0x25d: V222 = 0x266
0x260: JUMPI 0x266 V221
---
Entry stack: [V9, 0x8c, V87, V91, V208, 0x0, 0xe8d4a51000, V211]
Stack pops: 4
Stack additions: [S3, V213]
Exit stack: [V9, 0x8c, V87, V91, V208, V213]

================================

Block 0x261
[0x261:0x265]
---
Predecessors: [0x240]
Successors: []
---
0x261 PUSH1 0x0
0x263 PUSH1 0x0
0x265 REVERT
---
0x261: V223 = 0x0
0x263: V224 = 0x0
0x265: REVERT 0x0 0x0
---
Entry stack: [V9, 0x8c, V87, V91, V208, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V87, V91, V208, V213]

================================

Block 0x266
[0x266:0x2e9]
---
Predecessors: [0x240]
Successors: [0x2ea, 0x2eb]
---
0x266 JUMPDEST
0x267 DUP2
0x268 SLOAD
0x269 PUSH1 0xe8
0x26b PUSH1 0x2
0x26d EXP
0x26e PUSH6 0xffffffffffff
0x275 DUP4
0x276 AND
0x277 PUSH1 0xb8
0x279 PUSH1 0x2
0x27b EXP
0x27c MUL
0x27d PUSH1 0xb8
0x27f PUSH1 0x2
0x281 EXP
0x282 PUSH1 0xe8
0x284 PUSH1 0x2
0x286 EXP
0x287 SUB
0x288 NOT
0x289 PUSH1 0x1
0x28b PUSH1 0xa0
0x28d PUSH1 0x2
0x28f EXP
0x290 SUB
0x291 CALLER
0x292 AND
0x293 PUSH4 0x1000000
0x298 MUL
0x299 PUSH4 0x1000000
0x29e PUSH1 0xb8
0x2a0 PUSH1 0x2
0x2a2 EXP
0x2a3 SUB
0x2a4 NOT
0x2a5 PUSH3 0xffffff
0x2a9 DUP1
0x2aa DUP11
0x2ab AND
0x2ac PUSH3 0xffffff
0x2b0 NOT
0x2b1 SWAP1
0x2b2 SWAP8
0x2b3 AND
0x2b4 SWAP7
0x2b5 SWAP1
0x2b6 SWAP7
0x2b7 OR
0x2b8 AND
0x2b9 OR
0x2ba AND
0x2bb OR
0x2bc DUP2
0x2bd DUP2
0x2be DIV
0x2bf DUP4
0x2c0 AND
0x2c1 PUSH1 0x1
0x2c3 SWAP1
0x2c4 DUP2
0x2c5 ADD
0x2c6 SWAP1
0x2c7 SWAP4
0x2c8 AND
0x2c9 SWAP1
0x2ca SWAP2
0x2cb MUL
0x2cc PUSH1 0x1
0x2ce PUSH1 0xe8
0x2d0 PUSH1 0x2
0x2d2 EXP
0x2d3 SUB
0x2d4 SWAP1
0x2d5 SWAP2
0x2d6 AND
0x2d7 OR
0x2d8 DUP4
0x2d9 SSTORE
0x2da DUP3
0x2db SWAP1
0x2dc PUSH2 0xffff
0x2df DUP7
0x2e0 AND
0x2e1 PUSH2 0x4000
0x2e4 DUP2
0x2e5 LT
0x2e6 PUSH2 0x2eb
0x2e9 JUMPI
---
0x266: JUMPDEST 
0x268: V225 = S[V208]
0x269: V226 = 0xe8
0x26b: V227 = 0x2
0x26d: V228 = EXP 0x2 0xe8
0x26e: V229 = 0xffffffffffff
0x276: V230 = AND V213 0xffffffffffff
0x277: V231 = 0xb8
0x279: V232 = 0x2
0x27b: V233 = EXP 0x2 0xb8
0x27c: V234 = MUL 0x10000000000000000000000000000000000000000000000 V230
0x27d: V235 = 0xb8
0x27f: V236 = 0x2
0x281: V237 = EXP 0x2 0xb8
0x282: V238 = 0xe8
0x284: V239 = 0x2
0x286: V240 = EXP 0x2 0xe8
0x287: V241 = SUB 0x10000000000000000000000000000000000000000000000000000000000 0x10000000000000000000000000000000000000000000000
0x288: V242 = NOT 0xffffffffffff0000000000000000000000000000000000000000000000
0x289: V243 = 0x1
0x28b: V244 = 0xa0
0x28d: V245 = 0x2
0x28f: V246 = EXP 0x2 0xa0
0x290: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V248 = CALLER
0x292: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x293: V250 = 0x1000000
0x298: V251 = MUL 0x1000000 V249
0x299: V252 = 0x1000000
0x29e: V253 = 0xb8
0x2a0: V254 = 0x2
0x2a2: V255 = EXP 0x2 0xb8
0x2a3: V256 = SUB 0x10000000000000000000000000000000000000000000000 0x1000000
0x2a4: V257 = NOT 0xffffffffffffffffffffffffffffffffffffffff000000
0x2a5: V258 = 0xffffff
0x2ab: V259 = AND V91 0xffffff
0x2ac: V260 = 0xffffff
0x2b0: V261 = NOT 0xffffff
0x2b3: V262 = AND V225 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
0x2b7: V263 = OR V262 V259
0x2b8: V264 = AND V263 0xffffffffffffffffff0000000000000000000000000000000000000000ffffff
0x2b9: V265 = OR V264 V251
0x2ba: V266 = AND V265 0xffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffff
0x2bb: V267 = OR V266 V234
0x2be: V268 = DIV V267 0x10000000000000000000000000000000000000000000000000000000000
0x2c0: V269 = AND 0xffffff V268
0x2c1: V270 = 0x1
0x2c5: V271 = ADD 0x1 V269
0x2c8: V272 = AND 0xffffff V271
0x2cb: V273 = MUL 0x10000000000000000000000000000000000000000000000000000000000 V272
0x2cc: V274 = 0x1
0x2ce: V275 = 0xe8
0x2d0: V276 = 0x2
0x2d2: V277 = EXP 0x2 0xe8
0x2d3: V278 = SUB 0x10000000000000000000000000000000000000000000000000000000000 0x1
0x2d6: V279 = AND V267 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2d7: V280 = OR V279 V273
0x2d9: S[V208] = V280
0x2dc: V281 = 0xffff
0x2e0: V282 = AND V87 0xffff
0x2e1: V283 = 0x4000
0x2e5: V284 = LT V282 0x4000
0x2e6: V285 = 0x2eb
0x2e9: JUMPI 0x2eb V284
---
Entry stack: [V9, 0x8c, V87, V91, V208, V213]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, 0x1, V282]
Exit stack: [V9, 0x8c, V87, V91, V208, V213, V208, 0x1, V282]

================================

Block 0x2ea
[0x2ea:0x2ea]
---
Predecessors: [0x266]
Successors: []
---
0x2ea INVALID
---
0x2ea: INVALID 
---
Entry stack: [V9, 0x8c, V87, V91, V208, V213, V208, 0x1, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V87, V91, V208, V213, V208, 0x1, V282]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x266]
Successors: [0x2ef]
---
0x2eb JUMPDEST
0x2ec ADD
0x2ed PUSH1 0x0
---
0x2eb: JUMPDEST 
0x2ec: V286 = ADD V282 0x1
0x2ed: V287 = 0x0
---
Entry stack: [V9, 0x8c, V87, V91, V208, V213, V208, 0x1, V282]
Stack pops: 2
Stack additions: [V286, 0x0]
Exit stack: [V9, 0x8c, V87, V91, V208, V213, V208, V286, 0x0]

================================

Block 0x2ef
[0x2ef:0x3a3]
---
Predecessors: [0x2eb]
Successors: [0x3a4, 0x3a5]
---
0x2ef JUMPDEST
0x2f0 POP
0x2f1 DUP2
0x2f2 SLOAD
0x2f3 DUP2
0x2f4 SLOAD
0x2f5 PUSH3 0xffffff
0x2f9 NOT
0x2fa AND
0x2fb PUSH3 0xffffff
0x2ff SWAP2
0x300 DUP3
0x301 AND
0x302 OR
0x303 DUP1
0x304 DUP4
0x305 SSTORE
0x306 DUP4
0x307 SLOAD
0x308 PUSH1 0x1
0x30a PUSH1 0xa0
0x30c PUSH1 0x2
0x30e EXP
0x30f SUB
0x310 PUSH4 0x1000000
0x315 SWAP2
0x316 DUP3
0x317 SWAP1
0x318 DIV
0x319 DUP2
0x31a AND
0x31b SWAP1
0x31c SWAP2
0x31d MUL
0x31e PUSH4 0x1000000
0x323 PUSH1 0xb8
0x325 PUSH1 0x2
0x327 EXP
0x328 SUB
0x329 NOT
0x32a SWAP1
0x32b SWAP3
0x32c AND
0x32d SWAP2
0x32e SWAP1
0x32f SWAP2
0x330 OR
0x331 DUP1
0x332 DUP5
0x333 SSTORE
0x334 DUP5
0x335 SLOAD
0x336 PUSH6 0xffffffffffff
0x33d PUSH1 0xb8
0x33f PUSH1 0x2
0x341 EXP
0x342 SWAP2
0x343 DUP3
0x344 SWAP1
0x345 DIV
0x346 AND
0x347 MUL
0x348 PUSH1 0xb8
0x34a PUSH1 0x2
0x34c EXP
0x34d PUSH1 0xe8
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 NOT
0x354 SWAP1
0x355 SWAP2
0x356 AND
0x357 OR
0x358 DUP1
0x359 DUP5
0x35a SSTORE
0x35b SWAP4
0x35c SLOAD
0x35d PUSH1 0xe8
0x35f PUSH1 0x2
0x361 EXP
0x362 SWAP1
0x363 DUP2
0x364 SWAP1
0x365 DIV
0x366 SWAP1
0x367 SWAP3
0x368 AND
0x369 SWAP1
0x36a SWAP2
0x36b MUL
0x36c PUSH1 0x1
0x36e PUSH1 0xe8
0x370 PUSH1 0x2
0x372 EXP
0x373 SUB
0x374 SWAP1
0x375 SWAP4
0x376 AND
0x377 SWAP3
0x378 SWAP1
0x379 SWAP3
0x37a OR
0x37b SWAP1
0x37c SSTORE
0x37d PUSH1 0x0
0x37f DUP1
0x380 SLOAD
0x381 PUSH1 0x40
0x383 MLOAD
0x384 SWAP3
0x385 AND
0x386 SWAP2
0x387 CALLVALUE
0x388 DUP1
0x389 ISZERO
0x38a PUSH2 0x8fc
0x38d MUL
0x38e SWAP3
0x38f SWAP1
0x390 SWAP2
0x391 SWAP1
0x392 DUP2
0x393 DUP2
0x394 DUP2
0x395 DUP6
0x396 DUP9
0x397 DUP9
0x398 CALL
0x399 SWAP4
0x39a POP
0x39b POP
0x39c POP
0x39d POP
0x39e ISZERO
0x39f ISZERO
0x3a0 PUSH2 0x3a5
0x3a3 JUMPI
---
0x2ef: JUMPDEST 
0x2f2: V288 = S[V208]
0x2f4: V289 = S[V286]
0x2f5: V290 = 0xffffff
0x2f9: V291 = NOT 0xffffff
0x2fa: V292 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000 V289
0x2fb: V293 = 0xffffff
0x301: V294 = AND 0xffffff V288
0x302: V295 = OR V294 V292
0x305: S[V286] = V295
0x307: V296 = S[V208]
0x308: V297 = 0x1
0x30a: V298 = 0xa0
0x30c: V299 = 0x2
0x30e: V300 = EXP 0x2 0xa0
0x30f: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x310: V302 = 0x1000000
0x318: V303 = DIV V296 0x1000000
0x31a: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x31d: V305 = MUL 0x1000000 V304
0x31e: V306 = 0x1000000
0x323: V307 = 0xb8
0x325: V308 = 0x2
0x327: V309 = EXP 0x2 0xb8
0x328: V310 = SUB 0x10000000000000000000000000000000000000000000000 0x1000000
0x329: V311 = NOT 0xffffffffffffffffffffffffffffffffffffffff000000
0x32c: V312 = AND V295 0xffffffffffffffffff0000000000000000000000000000000000000000ffffff
0x330: V313 = OR V312 V305
0x333: S[V286] = V313
0x335: V314 = S[V208]
0x336: V315 = 0xffffffffffff
0x33d: V316 = 0xb8
0x33f: V317 = 0x2
0x341: V318 = EXP 0x2 0xb8
0x345: V319 = DIV V314 0x10000000000000000000000000000000000000000000000
0x346: V320 = AND V319 0xffffffffffff
0x347: V321 = MUL V320 0x10000000000000000000000000000000000000000000000
0x348: V322 = 0xb8
0x34a: V323 = 0x2
0x34c: V324 = EXP 0x2 0xb8
0x34d: V325 = 0xe8
0x34f: V326 = 0x2
0x351: V327 = EXP 0x2 0xe8
0x352: V328 = SUB 0x10000000000000000000000000000000000000000000000000000000000 0x10000000000000000000000000000000000000000000000
0x353: V329 = NOT 0xffffffffffff0000000000000000000000000000000000000000000000
0x356: V330 = AND V313 0xffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffff
0x357: V331 = OR V330 V321
0x35a: S[V286] = V331
0x35c: V332 = S[V208]
0x35d: V333 = 0xe8
0x35f: V334 = 0x2
0x361: V335 = EXP 0x2 0xe8
0x365: V336 = DIV V332 0x10000000000000000000000000000000000000000000000000000000000
0x368: V337 = AND 0xffffff V336
0x36b: V338 = MUL 0x10000000000000000000000000000000000000000000000000000000000 V337
0x36c: V339 = 0x1
0x36e: V340 = 0xe8
0x370: V341 = 0x2
0x372: V342 = EXP 0x2 0xe8
0x373: V343 = SUB 0x10000000000000000000000000000000000000000000000000000000000 0x1
0x376: V344 = AND V331 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x37a: V345 = OR V344 V338
0x37c: S[V286] = V345
0x37d: V346 = 0x0
0x380: V347 = S[0x0]
0x381: V348 = 0x40
0x383: V349 = M[0x40]
0x385: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x387: V351 = CALLVALUE
0x389: V352 = ISZERO V351
0x38a: V353 = 0x8fc
0x38d: V354 = MUL 0x8fc V352
0x398: V355 = CALL V354 V350 V351 V349 0x0 V349 0x0
0x39e: V356 = ISZERO V355
0x39f: V357 = ISZERO V356
0x3a0: V358 = 0x3a5
0x3a3: JUMPI 0x3a5 V357
---
Entry stack: [V9, 0x8c, V87, V91, V208, V213, V208, V286, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V9, 0x8c, V87, V91, V208, V213]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x2ef]
Successors: []
---
0x3a4 INVALID
---
0x3a4: INVALID 
---
Entry stack: [V9, 0x8c, V87, V91, V208, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x8c, V87, V91, V208, V213]

================================

Block 0x3a5
[0x3a5:0x3f5]
---
Predecessors: [0x2ef]
Successors: [0x3f6]
---
0x3a5 JUMPDEST
0x3a6 PUSH1 0x40
0x3a8 DUP1
0x3a9 MLOAD
0x3aa PUSH1 0x1
0x3ac PUSH1 0xa0
0x3ae PUSH1 0x2
0x3b0 EXP
0x3b1 SUB
0x3b2 CALLER
0x3b3 AND
0x3b4 DUP2
0x3b5 MSTORE
0x3b6 PUSH2 0xffff
0x3b9 DUP7
0x3ba AND
0x3bb PUSH1 0x20
0x3bd DUP3
0x3be ADD
0x3bf MSTORE
0x3c0 PUSH3 0xffffff
0x3c4 DUP6
0x3c5 AND
0x3c6 DUP2
0x3c7 DUP4
0x3c8 ADD
0x3c9 MSTORE
0x3ca SWAP1
0x3cb MLOAD
0x3cc PUSH32 0x1f046729f6d74e1d5744e7b35a9776038464af598317a40e42a40a53802f7462
0x3ed SWAP2
0x3ee DUP2
0x3ef SWAP1
0x3f0 SUB
0x3f1 PUSH1 0x60
0x3f3 ADD
0x3f4 SWAP1
0x3f5 LOG1
---
0x3a5: JUMPDEST 
0x3a6: V359 = 0x40
0x3a9: V360 = M[0x40]
0x3aa: V361 = 0x1
0x3ac: V362 = 0xa0
0x3ae: V363 = 0x2
0x3b0: V364 = EXP 0x2 0xa0
0x3b1: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b2: V366 = CALLER
0x3b3: V367 = AND V366 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: M[V360] = V367
0x3b6: V368 = 0xffff
0x3ba: V369 = AND V87 0xffff
0x3bb: V370 = 0x20
0x3be: V371 = ADD V360 0x20
0x3bf: M[V371] = V369
0x3c0: V372 = 0xffffff
0x3c5: V373 = AND V91 0xffffff
0x3c8: V374 = ADD 0x40 V360
0x3c9: M[V374] = V373
0x3cb: V375 = M[0x40]
0x3cc: V376 = 0x1f046729f6d74e1d5744e7b35a9776038464af598317a40e42a40a53802f7462
0x3f0: V377 = SUB V360 V375
0x3f1: V378 = 0x60
0x3f3: V379 = ADD 0x60 V377
0x3f5: LOG V375 V379 0x1f046729f6d74e1d5744e7b35a9776038464af598317a40e42a40a53802f7462
---
Entry stack: [V9, 0x8c, V87, V91, V208, V213]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, 0x8c, V87, V91, V208, V213]

================================

Block 0x3f6
[0x3f6:0x3fb]
---
Predecessors: [0x3a5]
Successors: [0x8c]
---
0x3f6 JUMPDEST
0x3f7 POP
0x3f8 POP
0x3f9 POP
0x3fa POP
0x3fb JUMP
---
0x3f6: JUMPDEST 
0x3fb: JUMP 0x8c
---
Entry stack: [V9, 0x8c, V87, V91, V208, V213]
Stack pops: 5
Stack additions: []
Exit stack: [V9]

================================

Block 0x3fc
[0x3fc:0x442]
---
Predecessors: []
Successors: []
---
0x3fc STOP
0x3fd LOG1
0x3fe PUSH6 0x627a7a723058
0x405 SHA3
0x406 MISSING 0xb8
0x407 MISSING 0xe8
0x408 MISSING 0x23
0x409 PUSH6 0x32bca06ee036
0x410 MISSING 0x5c
0x411 EXTCODECOPY
0x412 MISSING 0xd
0x413 MULMOD
0x414 EXTCODEHASH
0x415 MISSING 0xd8
0x416 STATICCALL
0x417 MISSING 0xad
0x418 BYTE
0x419 RETURNDATACOPY
0x41a MISSING 0x46
0x41b ISZERO
0x41c MISSING 0x2e
0x41d PC
0x41e MISSING 0xda
0x41f SWAP15
0x420 MISSING 0xd9
0x421 SLT
0x422 SAR
0x423 SDIV
0x424 MISSING 0xd1
0x425 PUSH29 0x29
---
0x3fc: STOP 
0x3fd: LOG S0 S1 S2
0x3fe: V380 = 0x627a7a723058
0x405: V381 = SHA3 0x627a7a723058 S3
0x406: MISSING 0xb8
0x407: MISSING 0xe8
0x408: MISSING 0x23
0x409: V382 = 0x32bca06ee036
0x410: MISSING 0x5c
0x411: EXTCODECOPY S0 S1 S2 S3
0x412: MISSING 0xd
0x413: V383 = MULMOD S0 S1 S2
0x414: V384 = EXTCODEHASH V383
0x415: MISSING 0xd8
0x416: V385 = STATICCALL S0 S1 S2 S3 S4 S5
0x417: MISSING 0xad
0x418: V386 = BYTE S0 S1
0x419: RETURNDATACOPY V386 S2 S3
0x41a: MISSING 0x46
0x41b: V387 = ISZERO S0
0x41c: MISSING 0x2e
0x41d: V388 = PC
0x41e: MISSING 0xda
0x420: MISSING 0xd9
0x421: V389 = SLT S0 S1
0x422: V390 = SAR V389 S2
0x423: V391 = SDIV V390 S3
0x424: MISSING 0xd1
0x425: V392 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V381, 0x32bca06ee036, V384, V385, V387, V388, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V391, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x4d
Exit block: 0x5d
Body: 0x4d, 0x54, 0x55, 0x5d, 0x10b

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x79
Exit block: 0x8c
Body: 0x79, 0x80, 0x81, 0x8c, 0x11a, 0x131, 0x136, 0x165, 0x166, 0x167

Function 2:
Public function signature: 0x2fd2e742
Entry block: 0x8e
Exit block: 0xa1
Body: 0x8e, 0x95, 0x96, 0xa1, 0x16a, 0x177, 0x178, 0x17c

Function 3:
Public function signature: 0x853828b6
Entry block: 0xe0
Exit block: 0x8c
Body: 0x8c, 0xe0, 0xe7, 0xe8, 0x1b4, 0x1cb, 0x1d0, 0x205, 0x206, 0x207

Function 4:
Public function signature: 0xe3dc3dfa
Entry block: 0xf2
Exit block: 0x8c
Body: 0x8c, 0xf2, 0x209, 0x21a, 0x21f, 0x230, 0x231, 0x235, 0x240, 0x261, 0x266, 0x2ea, 0x2eb, 0x2ef, 0x3a4, 0x3a5, 0x3f6

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x4b
Body: 0x4b

