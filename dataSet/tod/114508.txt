Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x58
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x58
0x3f: JUMPI 0x58 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6d]
---
0x40 DUP1
0x41 PUSH4 0x9a875cc2
0x46 EQ
0x47 PUSH2 0x6d
0x4a JUMPI
---
0x41: V15 = 0x9a875cc2
0x46: V16 = EQ 0x9a875cc2 V11
0x47: V17 = 0x6d
0x4a: JUMPI 0x6d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xe2]
---
0x4b DUP1
0x4c PUSH4 0xa01ffdff
0x51 EQ
0x52 PUSH2 0xe2
0x55 JUMPI
---
0x4c: V18 = 0xa01ffdff
0x51: V19 = EQ 0xa01ffdff V11
0x52: V20 = 0xe2
0x55: JUMPI 0xe2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0x181]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a DUP1
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x58: JUMPDEST 
0x59: V21 = CALLVALUE
0x5b: V22 = ISZERO V21
0x5c: V23 = 0x64
0x5f: JUMPI 0x64 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V21]
Exit stack: [V11, V21]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x58]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V24 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V21]

================================

Block 0x64
[0x64:0x6c]
---
Predecessors: [0x58]
Successors: [0xf7]
---
0x64 JUMPDEST
0x65 POP
0x66 PUSH2 0x56
0x69 PUSH2 0xf7
0x6c JUMP
---
0x64: JUMPDEST 
0x66: V25 = 0x56
0x69: V26 = 0xf7
0x6c: JUMP 0xf7
---
Entry stack: [V11, V21]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x6d
[0x6d:0xb8]
---
Predecessors: [0x40]
Successors: [0x184]
---
0x6d JUMPDEST
0x6e PUSH1 0x40
0x70 DUP1
0x71 MLOAD
0x72 PUSH1 0x20
0x74 PUSH1 0x4
0x76 DUP1
0x77 CALLDATALOAD
0x78 DUP1
0x79 DUP3
0x7a ADD
0x7b CALLDATALOAD
0x7c PUSH1 0x1f
0x7e DUP2
0x7f ADD
0x80 DUP5
0x81 SWAP1
0x82 DIV
0x83 DUP5
0x84 MUL
0x85 DUP6
0x86 ADD
0x87 DUP5
0x88 ADD
0x89 SWAP1
0x8a SWAP6
0x8b MSTORE
0x8c DUP5
0x8d DUP5
0x8e MSTORE
0x8f PUSH2 0xb9
0x92 SWAP5
0x93 CALLDATASIZE
0x94 SWAP5
0x95 SWAP3
0x96 SWAP4
0x97 PUSH1 0x24
0x99 SWAP4
0x9a SWAP3
0x9b DUP5
0x9c ADD
0x9d SWAP2
0x9e SWAP1
0x9f DUP2
0xa0 SWAP1
0xa1 DUP5
0xa2 ADD
0xa3 DUP4
0xa4 DUP3
0xa5 DUP1
0xa6 DUP3
0xa7 DUP5
0xa8 CALLDATACOPY
0xa9 POP
0xaa SWAP5
0xab SWAP8
0xac POP
0xad PUSH2 0x184
0xb0 SWAP7
0xb1 POP
0xb2 POP
0xb3 POP
0xb4 POP
0xb5 POP
0xb6 POP
0xb7 POP
0xb8 JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x40
0x71: V28 = M[0x40]
0x72: V29 = 0x20
0x74: V30 = 0x4
0x77: V31 = CALLDATALOAD 0x4
0x7a: V32 = ADD 0x4 V31
0x7b: V33 = CALLDATALOAD V32
0x7c: V34 = 0x1f
0x7f: V35 = ADD V33 0x1f
0x82: V36 = DIV V35 0x20
0x84: V37 = MUL 0x20 V36
0x86: V38 = ADD V28 V37
0x88: V39 = ADD 0x20 V38
0x8b: M[0x40] = V39
0x8e: M[V28] = V33
0x8f: V40 = 0xb9
0x93: V41 = CALLDATASIZE
0x97: V42 = 0x24
0x9c: V43 = ADD 0x24 V31
0xa2: V44 = ADD V28 0x20
0xa8: CALLDATACOPY V44 V43 V33
0xad: V45 = 0x184
0xb8: JUMP 0x184
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V28]
Exit stack: [V11, 0xb9, V28]

================================

Block 0xb9
[0xb9:0xe1]
---
Predecessors: [0x184]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x40
0xbc DUP1
0xbd MLOAD
0xbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3 SWAP1
0xd4 SWAP3
0xd5 AND
0xd6 DUP3
0xd7 MSTORE
0xd8 MLOAD
0xd9 SWAP1
0xda DUP2
0xdb SWAP1
0xdc SUB
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 RETURN
---
0xb9: JUMPDEST 
0xba: V46 = 0x40
0xbd: V47 = M[0x40]
0xbe: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V49 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0xd7: M[V47] = V49
0xd8: V50 = M[0x40]
0xdc: V51 = SUB V47 V50
0xdd: V52 = 0x20
0xdf: V53 = ADD 0x20 V51
0xe1: RETURN V50 V53
---
Entry stack: [V11, V98]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xe9]
---
Predecessors: [0x4b]
Successors: [0xea, 0xee]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 DUP1
0xe5 ISZERO
0xe6 PUSH2 0xee
0xe9 JUMPI
---
0xe2: JUMPDEST 
0xe3: V54 = CALLVALUE
0xe5: V55 = ISZERO V54
0xe6: V56 = 0xee
0xe9: JUMPI 0xee V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xea
[0xea:0xed]
---
Predecessors: [0xe2]
Successors: []
---
0xea PUSH1 0x0
0xec DUP1
0xed REVERT
---
0xea: V57 = 0x0
0xed: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xee
[0xee:0xf6]
---
Predecessors: [0xe2]
Successors: [0x198]
---
0xee JUMPDEST
0xef POP
0xf0 PUSH2 0x56
0xf3 PUSH2 0x198
0xf6 JUMP
---
0xee: JUMPDEST 
0xf0: V58 = 0x56
0xf3: V59 = 0x198
0xf6: JUMP 0x198
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0xf7
[0xf7:0x111]
---
Predecessors: [0x64]
Successors: [0x112, 0x12e]
---
0xf7 JUMPDEST
0xf8 CALLER
0xf9 PUSH18 0x6acbded8c0f48c88d72f2bcda42618fee4b
0x10c EQ
0x10d DUP1
0x10e PUSH2 0x12e
0x111 JUMPI
---
0xf7: JUMPDEST 
0xf8: V60 = CALLER
0xf9: V61 = 0x6acbded8c0f48c88d72f2bcda42618fee4b
0x10c: V62 = EQ 0x6acbded8c0f48c88d72f2bcda42618fee4b V60
0x10e: V63 = 0x12e
0x111: JUMPI 0x12e V62
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V11, 0x56, V62]

================================

Block 0x112
[0x112:0x12d]
---
Predecessors: [0xf7]
Successors: [0x12e]
---
0x112 POP
0x113 PUSH1 0x0
0x115 SLOAD
0x116 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b AND
0x12c CALLER
0x12d EQ
---
0x113: V64 = 0x0
0x115: V65 = S[0x0]
0x116: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x12c: V68 = CALLER
0x12d: V69 = EQ V68 V67
---
Entry stack: [V11, 0x56, V62]
Stack pops: 1
Stack additions: [V69]
Exit stack: [V11, 0x56, V69]

================================

Block 0x12e
[0x12e:0x134]
---
Predecessors: [0xf7, 0x112]
Successors: [0x135, 0x139]
---
0x12e JUMPDEST
0x12f ISZERO
0x130 ISZERO
0x131 PUSH2 0x139
0x134 JUMPI
---
0x12e: JUMPDEST 
0x12f: V70 = ISZERO S0
0x130: V71 = ISZERO V70
0x131: V72 = 0x139
0x134: JUMPI 0x139 V71
---
Entry stack: [V11, 0x56, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x135
[0x135:0x138]
---
Predecessors: [0x12e]
Successors: []
---
0x135 PUSH1 0x0
0x137 DUP1
0x138 REVERT
---
0x135: V73 = 0x0
0x138: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x139
[0x139:0x177]
---
Predecessors: [0x12e]
Successors: [0x178, 0x181]
---
0x139 JUMPDEST
0x13a PUSH1 0x0
0x13c DUP1
0x13d SLOAD
0x13e PUSH1 0x40
0x140 MLOAD
0x141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x156 SWAP1
0x157 SWAP2
0x158 AND
0x159 SWAP2
0x15a ADDRESS
0x15b BALANCE
0x15c DUP1
0x15d ISZERO
0x15e PUSH2 0x8fc
0x161 MUL
0x162 SWAP3
0x163 SWAP1
0x164 SWAP2
0x165 DUP2
0x166 DUP2
0x167 DUP2
0x168 DUP6
0x169 DUP9
0x16a DUP9
0x16b CALL
0x16c SWAP4
0x16d POP
0x16e POP
0x16f POP
0x170 POP
0x171 ISZERO
0x172 DUP1
0x173 ISZERO
0x174 PUSH2 0x181
0x177 JUMPI
---
0x139: JUMPDEST 
0x13a: V74 = 0x0
0x13d: V75 = S[0x0]
0x13e: V76 = 0x40
0x140: V77 = M[0x40]
0x141: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x158: V79 = AND V75 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V80 = ADDRESS
0x15b: V81 = BALANCE V80
0x15d: V82 = ISZERO V81
0x15e: V83 = 0x8fc
0x161: V84 = MUL 0x8fc V82
0x16b: V85 = CALL V84 V79 V81 V77 0x0 V77 0x0
0x171: V86 = ISZERO V85
0x173: V87 = ISZERO V86
0x174: V88 = 0x181
0x177: JUMPI 0x181 V87
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V11, 0x56, V86]

================================

Block 0x178
[0x178:0x180]
---
Predecessors: [0x139]
Successors: []
---
0x178 RETURNDATASIZE
0x179 PUSH1 0x0
0x17b DUP1
0x17c RETURNDATACOPY
0x17d RETURNDATASIZE
0x17e PUSH1 0x0
0x180 REVERT
---
0x178: V89 = RETURNDATASIZE
0x179: V90 = 0x0
0x17c: RETURNDATACOPY 0x0 0x0 V89
0x17d: V91 = RETURNDATASIZE
0x17e: V92 = 0x0
0x180: REVERT 0x0 V91
---
Entry stack: [V11, 0x56, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V86]

================================

Block 0x181
[0x181:0x183]
---
Predecessors: [0x139]
Successors: [0x56]
---
0x181 JUMPDEST
0x182 POP
0x183 JUMP
---
0x181: JUMPDEST 
0x183: JUMP 0x56
---
Entry stack: [V11, 0x56, V86]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x184
[0x184:0x197]
---
Predecessors: [0x6d]
Successors: [0xb9]
---
0x184 JUMPDEST
0x185 DUP1
0x186 MLOAD
0x187 PUSH1 0x0
0x189 SWAP1
0x18a CALLVALUE
0x18b SWAP1
0x18c PUSH1 0x20
0x18e DUP5
0x18f ADD
0x190 DUP3
0x191 CREATE
0x192 SWAP4
0x193 SWAP3
0x194 POP
0x195 POP
0x196 POP
0x197 JUMP
---
0x184: JUMPDEST 
0x186: V93 = M[V28]
0x187: V94 = 0x0
0x18a: V95 = CALLVALUE
0x18c: V96 = 0x20
0x18f: V97 = ADD V28 0x20
0x191: V98 = CREATE V95 V97 V93
0x197: JUMP 0xb9
---
Entry stack: [V11, 0xb9, V28]
Stack pops: 2
Stack additions: [V98]
Exit stack: [V11, V98]

================================

Block 0x198
[0x198:0x1ac]
---
Predecessors: [0xee]
Successors: []
---
0x198 JUMPDEST
0x199 PUSH18 0x6acbded8c0f48c88d72f2bcda42618fee4b
0x1ac SELFDESTRUCT
---
0x198: JUMPDEST 
0x199: V99 = 0x6acbded8c0f48c88d72f2bcda42618fee4b
0x1ac: SELFDESTRUCT 0x6acbded8c0f48c88d72f2bcda42618fee4b
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x1ad
[0x1ad:0x1d8]
---
Predecessors: []
Successors: []
---
0x1ad STOP
0x1ae LOG1
0x1af PUSH6 0x627a7a723058
0x1b6 SHA3
0x1b7 SMOD
0x1b8 MISSING 0xe3
0x1b9 SWAP3
0x1ba PUSH21 0x9060d9fcd381a6d6f17d6467bc10ef614ad0f45d76
0x1d0 MSTORE8
0x1d1 SWAP16
0x1d2 DUP4
0x1d3 SELFDESTRUCT
0x1d4 RETURN
0x1d5 MISSING 0xd
0x1d6 ISZERO
0x1d7 STOP
0x1d8 MISSING 0x29
---
0x1ad: STOP 
0x1ae: LOG S0 S1 S2
0x1af: V100 = 0x627a7a723058
0x1b6: V101 = SHA3 0x627a7a723058 S3
0x1b7: V102 = SMOD V101 S4
0x1b8: MISSING 0xe3
0x1ba: V103 = 0x9060d9fcd381a6d6f17d6467bc10ef614ad0f45d76
0x1d0: M8[0x9060d9fcd381a6d6f17d6467bc10ef614ad0f45d76] = S3
0x1d3: SELFDESTRUCT S4
0x1d4: RETURN S0 S1
0x1d5: MISSING 0xd
0x1d6: V104 = ISZERO S0
0x1d7: STOP 
0x1d8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V102, S17, S2, S0, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S1, V104]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x58
Exit block: 0x56
Body: 0x56, 0x58, 0x60, 0x64, 0xf7, 0x112, 0x12e, 0x135, 0x139, 0x178, 0x181

Function 1:
Public function signature: 0x9a875cc2
Entry block: 0x6d
Exit block: 0xb9
Body: 0x6d, 0xb9, 0x184

Function 2:
Public function signature: 0xa01ffdff
Entry block: 0xe2
Exit block: 0x198
Body: 0xe2, 0xea, 0xee, 0x198

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

