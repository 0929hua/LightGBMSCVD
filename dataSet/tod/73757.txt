Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5f
0xa: JUMPI 0x5f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xfc]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x41c0e1b5
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xfc
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x41c0e1b5
0x39: V12 = EQ V10 0x41c0e1b5
0x3a: V13 = 0xfc
0x3d: JUMPI 0xfc V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x10e]
---
0x3e DUP1
0x3f PUSH4 0xbc08a75e
0x44 EQ
0x45 PUSH2 0x10e
0x48 JUMPI
---
0x3f: V14 = 0xbc08a75e
0x44: V15 = EQ 0xbc08a75e V10
0x45: V16 = 0x10e
0x48: JUMPI 0x10e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x118]
---
0x49 DUP1
0x4a PUSH4 0xc89f2ce4
0x4f EQ
0x50 PUSH2 0x118
0x53 JUMPI
---
0x4a: V17 = 0xc89f2ce4
0x4f: V18 = EQ 0xc89f2ce4 V10
0x50: V19 = 0x118
0x53: JUMPI 0x118 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x13a]
---
0x54 DUP1
0x55 PUSH4 0xe3ffc9a3
0x5a EQ
0x5b PUSH2 0x13a
0x5e JUMPI
---
0x55: V20 = 0xe3ffc9a3
0x5a: V21 = EQ 0xe3ffc9a3 V10
0x5b: V22 = 0x13a
0x5e: JUMPI 0x13a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x0, 0x54]
Successors: [0x63]
---
0x5f JUMPDEST
0x60 PUSH2 0xfa
---
0x5f: JUMPDEST 
0x60: V23 = 0xfa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x63
[0x63:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0xb2]
---
0x63 JUMPDEST
0x64 PUSH1 0x0
0x66 PUSH7 0x38d7ea4c68000
0x6e CALLVALUE
0x6f GT
0x70 ISZERO
0x71 PUSH2 0xb2
0x74 JUMPI
---
0x63: JUMPDEST 
0x64: V24 = 0x0
0x66: V25 = 0x38d7ea4c68000
0x6e: V26 = CALLVALUE
0x6f: V27 = GT V26 0x38d7ea4c68000
0x70: V28 = ISZERO V27
0x71: V29 = 0xb2
0x74: JUMPI 0xb2 V28
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xfa, 0x0]

================================

Block 0x75
[0x75:0xb1]
---
Predecessors: [0x63]
Successors: [0xb5]
---
0x75 PUSH1 0x40
0x77 MLOAD
0x78 PUSH1 0x1
0x7a PUSH1 0xa0
0x7c PUSH1 0x2
0x7e EXP
0x7f SUB
0x80 CALLER
0x81 AND
0x82 SWAP1
0x83 PUSH7 0x38d7ea4c67fff
0x8b NOT
0x8c CALLVALUE
0x8d ADD
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x8fc
0x93 MUL
0x94 SWAP2
0x95 PUSH1 0x0
0x97 DUP2
0x98 DUP2
0x99 DUP2
0x9a DUP6
0x9b DUP9
0x9c DUP9
0x9d CALL
0x9e SWAP4
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 PUSH7 0x38d7ea4c68000
0xac SWAP1
0xad POP
0xae PUSH2 0xb5
0xb1 JUMP
---
0x75: V30 = 0x40
0x77: V31 = M[0x40]
0x78: V32 = 0x1
0x7a: V33 = 0xa0
0x7c: V34 = 0x2
0x7e: V35 = EXP 0x2 0xa0
0x7f: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80: V37 = CALLER
0x81: V38 = AND V37 0xffffffffffffffffffffffffffffffffffffffff
0x83: V39 = 0x38d7ea4c67fff
0x8b: V40 = NOT 0x38d7ea4c67fff
0x8c: V41 = CALLVALUE
0x8d: V42 = ADD V41 0xfffffffffffffffffffffffffffffffffffffffffffffffffffc72815b398000
0x8f: V43 = ISZERO V42
0x90: V44 = 0x8fc
0x93: V45 = MUL 0x8fc V43
0x95: V46 = 0x0
0x9d: V47 = CALL V45 V38 V42 V31 0x0 V31 0x0
0xa4: V48 = 0x38d7ea4c68000
0xae: V49 = 0xb5
0xb1: JUMP 0xb5
---
Entry stack: [V10, 0xfa, 0x0]
Stack pops: 1
Stack additions: [0x38d7ea4c68000]
Exit stack: [V10, 0xfa, 0x38d7ea4c68000]

================================

Block 0xb2
[0xb2:0xb4]
---
Predecessors: [0x63]
Successors: [0xb5]
---
0xb2 JUMPDEST
0xb3 POP
0xb4 CALLVALUE
---
0xb2: JUMPDEST 
0xb4: V50 = CALLVALUE
---
Entry stack: [V10, 0xfa, 0x0]
Stack pops: 1
Stack additions: [V50]
Exit stack: [V10, 0xfa, V50]

================================

Block 0xb5
[0xb5:0xb9]
---
Predecessors: [0x75, 0xb2]
Successors: [0xba]
---
0xb5 JUMPDEST
0xb6 PUSH1 0x2
0xb8 DUP1
0xb9 SLOAD
---
0xb5: JUMPDEST 
0xb6: V51 = 0x2
0xb9: V52 = S[0x2]
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 0
Stack additions: [0x2, V52]
Exit stack: [V10, 0xfa, S0, 0x2, V52]

================================

Block 0xba
[0xba:0xc1]
---
Predecessors: [0xb5]
Successors: [0xc2, 0xc6]
---
0xba JUMPDEST
0xbb MOD
0xbc ISZERO
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xba: JUMPDEST 
0xbb: V53 = MOD V52 0x2
0xbc: V54 = ISZERO V53
0xbd: V55 = ISZERO V54
0xbe: V56 = 0xc6
0xc1: JUMPI 0xc6 V55
---
Entry stack: [V10, 0xfa, S2, 0x2, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xfa, S2]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xba]
Successors: [0xf5]
---
0xc2 PUSH2 0xf5
0xc5 JUMP
---
0xc2: V57 = 0xf5
0xc5: JUMP 0xf5
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa, S0]

================================

Block 0xc6
[0xc6:0xf3]
---
Predecessors: [0xba]
Successors: [0xf4, 0xf5]
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca PUSH1 0x1
0xcc PUSH1 0xa0
0xce PUSH1 0x2
0xd0 EXP
0xd1 SUB
0xd2 CALLER
0xd3 AND
0xd4 SWAP1
0xd5 PUSH1 0x0
0xd7 SWAP1
0xd8 PUSH7 0x60a24181e4000
0xe0 SWAP1
0xe1 DUP3
0xe2 DUP2
0xe3 DUP2
0xe4 DUP2
0xe5 DUP6
0xe6 DUP9
0xe7 DUP4
0xe8 CALL
0xe9 SWAP4
0xea POP
0xeb POP
0xec POP
0xed POP
0xee ISZERO
0xef ISZERO
0xf0 PUSH2 0xf5
0xf3 JUMPI
---
0xc6: JUMPDEST 
0xc7: V58 = 0x40
0xc9: V59 = M[0x40]
0xca: V60 = 0x1
0xcc: V61 = 0xa0
0xce: V62 = 0x2
0xd0: V63 = EXP 0x2 0xa0
0xd1: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2: V65 = CALLER
0xd3: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V67 = 0x0
0xd8: V68 = 0x60a24181e4000
0xe8: V69 = CALL 0x0 V66 0x60a24181e4000 V59 0x0 V59 0x0
0xee: V70 = ISZERO V69
0xef: V71 = ISZERO V70
0xf0: V72 = 0xf5
0xf3: JUMPI 0xf5 V71
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa, S0]

================================

Block 0xf4
[0xf4:0xf4]
---
Predecessors: [0xc6]
Successors: []
---
0xf4 INVALID
---
0xf4: INVALID 
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa, S0]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0xc2, 0xc6]
Successors: [0xf6]
---
0xf5 JUMPDEST
---
0xf5: JUMPDEST 
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa, S0]

================================

Block 0xf6
[0xf6:0xf6]
---
Predecessors: [0xf5]
Successors: [0xf7]
---
0xf6 JUMPDEST
---
0xf6: JUMPDEST 
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa, S0]

================================

Block 0xf7
[0xf7:0xf9]
---
Predecessors: [0xf6]
Successors: [0xfa]
---
0xf7 JUMPDEST
0xf8 POP
0xf9 JUMP
---
0xf7: JUMPDEST 
0xf9: JUMP 0xfa
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xfa
[0xfa:0xfb]
---
Predecessors: [0xf7, 0x172]
Successors: []
---
0xfa JUMPDEST
0xfb STOP
---
0xfa: JUMPDEST 
0xfb: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfc
[0xfc:0x102]
---
Predecessors: [0xb]
Successors: [0x103, 0x104]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe ISZERO
0xff PUSH2 0x104
0x102 JUMPI
---
0xfc: JUMPDEST 
0xfd: V73 = CALLVALUE
0xfe: V74 = ISZERO V73
0xff: V75 = 0x104
0x102: JUMPI 0x104 V74
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x103
[0x103:0x103]
---
Predecessors: [0xfc]
Successors: []
---
0x103 INVALID
---
0x103: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0xfc]
Successors: [0x14c]
---
0x104 JUMPDEST
0x105 PUSH2 0xfa
0x108 PUSH2 0x14c
0x10b JUMP
---
0x104: JUMPDEST 
0x105: V76 = 0xfa
0x108: V77 = 0x14c
0x10b: JUMP 0x14c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: []
Successors: []
---
0x10c JUMPDEST
0x10d STOP
---
0x10c: JUMPDEST 
0x10d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10e
[0x10e:0x115]
---
Predecessors: [0x3e]
Successors: [0x174]
---
0x10e JUMPDEST
0x10f PUSH2 0xfa
0x112 PUSH2 0x174
0x115 JUMP
---
0x10e: JUMPDEST 
0x10f: V78 = 0xfa
0x112: V79 = 0x174
0x115: JUMP 0x174
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x116
[0x116:0x117]
---
Predecessors: []
Successors: []
---
0x116 JUMPDEST
0x117 STOP
---
0x116: JUMPDEST 
0x117: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x118
[0x118:0x11e]
---
Predecessors: [0x49]
Successors: [0x11f, 0x120]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a ISZERO
0x11b PUSH2 0x120
0x11e JUMPI
---
0x118: JUMPDEST 
0x119: V80 = CALLVALUE
0x11a: V81 = ISZERO V80
0x11b: V82 = 0x120
0x11e: JUMPI 0x120 V81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11f
[0x11f:0x11f]
---
Predecessors: [0x118]
Successors: []
---
0x11f INVALID
---
0x11f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x118]
Successors: [0x19b]
---
0x120 JUMPDEST
0x121 PUSH2 0x128
0x124 PUSH2 0x19b
0x127 JUMP
---
0x120: JUMPDEST 
0x121: V83 = 0x128
0x124: V84 = 0x19b
0x127: JUMP 0x19b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x128]
Exit stack: [V10, 0x128]

================================

Block 0x128
[0x128:0x139]
---
Predecessors: [0x19b]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b DUP1
0x12c MLOAD
0x12d SWAP2
0x12e DUP3
0x12f MSTORE
0x130 MLOAD
0x131 SWAP1
0x132 DUP2
0x133 SWAP1
0x134 SUB
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP1
0x139 RETURN
---
0x128: JUMPDEST 
0x129: V85 = 0x40
0x12c: V86 = M[0x40]
0x12f: M[V86] = V136
0x130: V87 = M[0x40]
0x134: V88 = SUB V86 V87
0x135: V89 = 0x20
0x137: V90 = ADD 0x20 V88
0x139: RETURN V87 V90
---
Entry stack: [V10, 0x128, V136]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x128]

================================

Block 0x13a
[0x13a:0x140]
---
Predecessors: [0x54]
Successors: [0x141, 0x142]
---
0x13a JUMPDEST
0x13b CALLVALUE
0x13c ISZERO
0x13d PUSH2 0x142
0x140 JUMPI
---
0x13a: JUMPDEST 
0x13b: V91 = CALLVALUE
0x13c: V92 = ISZERO V91
0x13d: V93 = 0x142
0x140: JUMPI 0x142 V92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x141
[0x141:0x141]
---
Predecessors: [0x13a]
Successors: []
---
0x141 INVALID
---
0x141: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x13a]
Successors: [0x1a1]
---
0x142 JUMPDEST
0x143 PUSH2 0xfa
0x146 PUSH2 0x1a1
0x149 JUMP
---
0x142: JUMPDEST 
0x143: V94 = 0xfa
0x146: V95 = 0x1a1
0x149: JUMP 0x1a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x14a
[0x14a:0x14b]
---
Predecessors: []
Successors: []
---
0x14a JUMPDEST
0x14b STOP
---
0x14a: JUMPDEST 
0x14b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14c
[0x14c:0x163]
---
Predecessors: [0x104]
Successors: [0x164, 0x171]
---
0x14c JUMPDEST
0x14d PUSH1 0x0
0x14f SLOAD
0x150 CALLER
0x151 PUSH1 0x1
0x153 PUSH1 0xa0
0x155 PUSH1 0x2
0x157 EXP
0x158 SUB
0x159 SWAP1
0x15a DUP2
0x15b AND
0x15c SWAP2
0x15d AND
0x15e EQ
0x15f ISZERO
0x160 PUSH2 0x171
0x163 JUMPI
---
0x14c: JUMPDEST 
0x14d: V96 = 0x0
0x14f: V97 = S[0x0]
0x150: V98 = CALLER
0x151: V99 = 0x1
0x153: V100 = 0xa0
0x155: V101 = 0x2
0x157: V102 = EXP 0x2 0xa0
0x158: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x15d: V105 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V106 = EQ V105 V104
0x15f: V107 = ISZERO V106
0x160: V108 = 0x171
0x163: JUMPI 0x171 V107
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x164
[0x164:0x170]
---
Predecessors: [0x14c]
Successors: []
---
0x164 PUSH1 0x0
0x166 SLOAD
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f AND
0x170 SELFDESTRUCT
---
0x164: V109 = 0x0
0x166: V110 = S[0x0]
0x167: V111 = 0x1
0x169: V112 = 0xa0
0x16b: V113 = 0x2
0x16d: V114 = EXP 0x2 0xa0
0x16e: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x170: SELFDESTRUCT V116
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x171
[0x171:0x171]
---
Predecessors: [0x14c, 0x174, 0x18c, 0x1a1]
Successors: [0x172]
---
0x171 JUMPDEST
---
0x171: JUMPDEST 
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: [0x171]
Successors: [0xfa]
---
0x172 JUMPDEST
0x173 JUMP
---
0x172: JUMPDEST 
0x173: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x174
[0x174:0x18b]
---
Predecessors: [0x10e]
Successors: [0x171, 0x18c]
---
0x174 JUMPDEST
0x175 PUSH1 0x0
0x177 SLOAD
0x178 CALLER
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 SWAP1
0x182 DUP2
0x183 AND
0x184 SWAP2
0x185 AND
0x186 EQ
0x187 ISZERO
0x188 PUSH2 0x171
0x18b JUMPI
---
0x174: JUMPDEST 
0x175: V117 = 0x0
0x177: V118 = S[0x0]
0x178: V119 = CALLER
0x179: V120 = 0x1
0x17b: V121 = 0xa0
0x17d: V122 = 0x2
0x17f: V123 = EXP 0x2 0xa0
0x180: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x185: V126 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x186: V127 = EQ V126 V125
0x187: V128 = ISZERO V127
0x188: V129 = 0x171
0x18b: JUMPI 0x171 V128
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x18c
[0x18c:0x197]
---
Predecessors: [0x174]
Successors: [0x171]
---
0x18c PUSH1 0x1
0x18e DUP1
0x18f SLOAD
0x190 CALLVALUE
0x191 ADD
0x192 SWAP1
0x193 SSTORE
0x194 PUSH2 0x171
0x197 JUMP
---
0x18c: V130 = 0x1
0x18f: V131 = S[0x1]
0x190: V132 = CALLVALUE
0x191: V133 = ADD V132 V131
0x193: S[0x1] = V133
0x194: V134 = 0x171
0x197: JUMP 0x171
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x198
[0x198:0x198]
---
Predecessors: []
Successors: [0x199]
---
0x198 JUMPDEST
---
0x198: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x199
[0x199:0x19a]
---
Predecessors: [0x198]
Successors: []
Has unresolved jump.
---
0x199 JUMPDEST
0x19a JUMP
---
0x199: JUMPDEST 
0x19a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x19b
[0x19b:0x1a0]
---
Predecessors: [0x120]
Successors: [0x128]
---
0x19b JUMPDEST
0x19c PUSH1 0x1
0x19e SLOAD
0x19f DUP2
0x1a0 JUMP
---
0x19b: JUMPDEST 
0x19c: V135 = 0x1
0x19e: V136 = S[0x1]
0x1a0: JUMP 0x128
---
Entry stack: [V10, 0x128]
Stack pops: 1
Stack additions: [S0, V136]
Exit stack: [V10, 0x128, V136]

================================

Block 0x1a1
[0x1a1:0x1d5]
---
Predecessors: [0x142]
Successors: [0x171, 0x1d6]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 SLOAD
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 SWAP2
0x1b2 DUP3
0x1b3 AND
0x1b4 SWAP3
0x1b5 ADDRESS
0x1b6 SWAP1
0x1b7 SWAP3
0x1b8 AND
0x1b9 BALANCE
0x1ba DUP1
0x1bb ISZERO
0x1bc PUSH2 0x8fc
0x1bf MUL
0x1c0 SWAP3
0x1c1 SWAP1
0x1c2 SWAP2
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 DUP2
0x1c6 DUP2
0x1c7 DUP6
0x1c8 DUP9
0x1c9 DUP9
0x1ca CALL
0x1cb SWAP4
0x1cc POP
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 ISZERO
0x1d1 ISZERO
0x1d2 PUSH2 0x171
0x1d5 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V137 = 0x0
0x1a5: V138 = S[0x0]
0x1a6: V139 = 0x40
0x1a8: V140 = M[0x40]
0x1a9: V141 = 0x1
0x1ab: V142 = 0xa0
0x1ad: V143 = 0x2
0x1af: V144 = EXP 0x2 0xa0
0x1b0: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b3: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x1b5: V147 = ADDRESS
0x1b8: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x1b9: V149 = BALANCE V148
0x1bb: V150 = ISZERO V149
0x1bc: V151 = 0x8fc
0x1bf: V152 = MUL 0x8fc V150
0x1ca: V153 = CALL V152 V146 V149 V140 0x0 V140 0x0
0x1d0: V154 = ISZERO V153
0x1d1: V155 = ISZERO V154
0x1d2: V156 = 0x171
0x1d5: JUMPI 0x171 V155
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x1d6
[0x1d6:0x1d6]
---
Predecessors: [0x1a1]
Successors: []
---
0x1d6 INVALID
---
0x1d6: INVALID 
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x1d7
[0x1d7:0x1d7]
---
Predecessors: []
Successors: [0x1d8]
---
0x1d7 JUMPDEST
---
0x1d7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d8
[0x1d8:0x205]
---
Predecessors: [0x1d7]
Successors: []
---
0x1d8 JUMPDEST
0x1d9 JUMP
0x1da STOP
0x1db LOG1
0x1dc PUSH6 0x627a7a723058
0x1e3 SHA3
0x1e4 SWAP4
0x1e5 MISSING 0xc4
0x1e6 MISSING 0xca
0x1e7 EQ
0x1e8 MISSING 0xe3
0x1e9 MISSING 0x29
0x1ea SWAP2
0x1eb MISSING 0xf9
0x1ec MISSING 0xe5
0x1ed MISSING 0xa6
0x1ee MISSING 0x5e
0x1ef RETURNDATACOPY
0x1f0 MISSING 0x5e
0x1f1 MISSING 0x4d
0x1f2 MISSING 0xef
0x1f3 MISSING 0x26
0x1f4 SWAP11
0x1f5 MISSING 0xa7
0x1f6 MISSING 0xba
0x1f7 LOG2
0x1f8 MISSING 0xaa
0x1f9 PUSH6 0x3c6643ef6ac1
0x200 MISSING 0x28
0x201 BALANCE
0x202 CALLVALUE
0x203 MISSING 0xa7
0x204 STOP
0x205 MISSING 0x29
---
0x1d8: JUMPDEST 
0x1d9: JUMP S0
0x1da: STOP 
0x1db: LOG S0 S1 S2
0x1dc: V157 = 0x627a7a723058
0x1e3: V158 = SHA3 0x627a7a723058 S3
0x1e5: MISSING 0xc4
0x1e6: MISSING 0xca
0x1e7: V159 = EQ S0 S1
0x1e8: MISSING 0xe3
0x1e9: MISSING 0x29
0x1eb: MISSING 0xf9
0x1ec: MISSING 0xe5
0x1ed: MISSING 0xa6
0x1ee: MISSING 0x5e
0x1ef: RETURNDATACOPY S0 S1 S2
0x1f0: MISSING 0x5e
0x1f1: MISSING 0x4d
0x1f2: MISSING 0xef
0x1f3: MISSING 0x26
0x1f5: MISSING 0xa7
0x1f6: MISSING 0xba
0x1f7: LOG S0 S1 S2 S3
0x1f8: MISSING 0xaa
0x1f9: V160 = 0x3c6643ef6ac1
0x200: MISSING 0x28
0x201: V161 = BALANCE S0
0x202: V162 = CALLVALUE
0x203: MISSING 0xa7
0x204: STOP 
0x205: MISSING 0x29
---
Entry stack: []
Stack pops: 401016
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0xfc
Exit block: 0xfa
Body: 0xfa, 0xfc, 0x103, 0x104, 0x14c, 0x164, 0x171, 0x172

Function 1:
Public function signature: 0xbc08a75e
Entry block: 0x10e
Exit block: 0xfa
Body: 0xfa, 0x10e, 0x171, 0x172, 0x174, 0x18c

Function 2:
Public function signature: 0xc89f2ce4
Entry block: 0x118
Exit block: 0x128
Body: 0x118, 0x11f, 0x120, 0x128, 0x19b

Function 3:
Public function signature: 0xe3ffc9a3
Entry block: 0x13a
Exit block: 0xfa
Body: 0xfa, 0x13a, 0x141, 0x142, 0x171, 0x172, 0x1a1, 0x1d6

Function 4:
Public fallback function
Entry block: 0x5f
Exit block: 0xfa
Body: 0x5f, 0x63, 0x75, 0xb2, 0xb5, 0xba, 0xc2, 0xc6, 0xf4, 0xf5, 0xf6, 0xf7, 0xfa

