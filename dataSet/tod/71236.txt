Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb6
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb6
0xc: JUMPI 0xb6 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xbb]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x11952369
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xbb
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x11952369
0x22: V15 = EQ V13 0x11952369
0x23: V16 = 0xbb
0x26: JUMPI 0xbb V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xd0]
---
0x27 DUP1
0x28 PUSH4 0x3ccfd60b
0x2d EQ
0x2e PUSH2 0xd0
0x31 JUMPI
---
0x28: V17 = 0x3ccfd60b
0x2d: V18 = EQ 0x3ccfd60b V13
0x2e: V19 = 0xd0
0x31: JUMPI 0xd0 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xe3]
---
0x32 DUP1
0x33 PUSH4 0x3f4ba83a
0x38 EQ
0x39 PUSH2 0xe3
0x3c JUMPI
---
0x33: V20 = 0x3f4ba83a
0x38: V21 = EQ 0x3f4ba83a V13
0x39: V22 = 0xe3
0x3c: JUMPI 0xe3 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xf6]
---
0x3d DUP1
0x3e PUSH4 0x5c975abb
0x43 EQ
0x44 PUSH2 0xf6
0x47 JUMPI
---
0x3e: V23 = 0x5c975abb
0x43: V24 = EQ 0x5c975abb V13
0x44: V25 = 0xf6
0x47: JUMPI 0xf6 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x11d]
---
0x48 DUP1
0x49 PUSH4 0x8456cb59
0x4e EQ
0x4f PUSH2 0x11d
0x52 JUMPI
---
0x49: V26 = 0x8456cb59
0x4e: V27 = EQ 0x8456cb59 V13
0x4f: V28 = 0x11d
0x52: JUMPI 0x11d V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x130]
---
0x53 DUP1
0x54 PUSH4 0x8da5cb5b
0x59 EQ
0x5a PUSH2 0x130
0x5d JUMPI
---
0x54: V29 = 0x8da5cb5b
0x59: V30 = EQ 0x8da5cb5b V13
0x5a: V31 = 0x130
0x5d: JUMPI 0x130 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x15f]
---
0x5e DUP1
0x5f PUSH4 0x8e005553
0x64 EQ
0x65 PUSH2 0x15f
0x68 JUMPI
---
0x5f: V32 = 0x8e005553
0x64: V33 = EQ 0x8e005553 V13
0x65: V34 = 0x15f
0x68: JUMPI 0x15f V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x179]
---
0x69 DUP1
0x6a PUSH4 0x94a89233
0x6f EQ
0x70 PUSH2 0x179
0x73 JUMPI
---
0x6a: V35 = 0x94a89233
0x6f: V36 = EQ 0x94a89233 V13
0x70: V37 = 0x179
0x73: JUMPI 0x179 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x18c]
---
0x74 DUP1
0x75 PUSH4 0x9652713e
0x7a EQ
0x7b PUSH2 0x18c
0x7e JUMPI
---
0x75: V38 = 0x9652713e
0x7a: V39 = EQ 0x9652713e V13
0x7b: V40 = 0x18c
0x7e: JUMPI 0x18c V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1ad]
---
0x7f DUP1
0x80 PUSH4 0xa055d455
0x85 EQ
0x86 PUSH2 0x1ad
0x89 JUMPI
---
0x80: V41 = 0xa055d455
0x85: V42 = EQ 0xa055d455 V13
0x86: V43 = 0x1ad
0x89: JUMPI 0x1ad V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x1ce]
---
0x8a DUP1
0x8b PUSH4 0xd5b2a01a
0x90 EQ
0x91 PUSH2 0x1ce
0x94 JUMPI
---
0x8b: V44 = 0xd5b2a01a
0x90: V45 = EQ 0xd5b2a01a V13
0x91: V46 = 0x1ce
0x94: JUMPI 0x1ce V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x1f8]
---
0x95 DUP1
0x96 PUSH4 0xe410a0c6
0x9b EQ
0x9c PUSH2 0x1f8
0x9f JUMPI
---
0x96: V47 = 0xe410a0c6
0x9b: V48 = EQ 0xe410a0c6 V13
0x9c: V49 = 0x1f8
0x9f: JUMPI 0x1f8 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x21e]
---
0xa0 DUP1
0xa1 PUSH4 0xe80db5db
0xa6 EQ
0xa7 PUSH2 0x21e
0xaa JUMPI
---
0xa1: V50 = 0xe80db5db
0xa6: V51 = EQ 0xe80db5db V13
0xa7: V52 = 0x21e
0xaa: JUMPI 0x21e V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x231]
---
0xab DUP1
0xac PUSH4 0xf2fde38b
0xb1 EQ
0xb2 PUSH2 0x231
0xb5 JUMPI
---
0xac: V53 = 0xf2fde38b
0xb1: V54 = EQ 0xf2fde38b V13
0xb2: V55 = 0x231
0xb5: JUMPI 0x231 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xba]
---
Predecessors: [0x0, 0xab, 0x59d]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb6: JUMPDEST 
0xb7: V56 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V151, V153, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V151, V153, S0]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0xd]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V57 = CALLVALUE
0xbd: V58 = ISZERO V57
0xbe: V59 = 0xc6
0xc1: JUMPI 0xc6 V58
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V60 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbb]
Successors: [0x250]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xce
0xca PUSH2 0x250
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V61 = 0xce
0xca: V62 = 0x250
0xcd: JUMP 0x250
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0xce
[0xce:0xcf]
---
Predecessors: [0x273, 0x32a, 0x3b8, 0x447, 0x594, 0x685, 0x6f5]
Successors: []
---
0xce JUMPDEST
0xcf STOP
---
0xce: JUMPDEST 
0xcf: STOP 
---
Entry stack: [V13, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S0]

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0x27]
Successors: [0xd7, 0xdb]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xd0: JUMPDEST 
0xd1: V63 = CALLVALUE
0xd2: V64 = ISZERO V63
0xd3: V65 = 0xdb
0xd6: JUMPI 0xdb V64
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xd0]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V66 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0xd0]
Successors: [0x275]
---
0xdb JUMPDEST
0xdc PUSH2 0xce
0xdf PUSH2 0x275
0xe2 JUMP
---
0xdb: JUMPDEST 
0xdc: V67 = 0xce
0xdf: V68 = 0x275
0xe2: JUMP 0x275
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0xe3
[0xe3:0xe9]
---
Predecessors: [0x32]
Successors: [0xea, 0xee]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 ISZERO
0xe6 PUSH2 0xee
0xe9 JUMPI
---
0xe3: JUMPDEST 
0xe4: V69 = CALLVALUE
0xe5: V70 = ISZERO V69
0xe6: V71 = 0xee
0xe9: JUMPI 0xee V70
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xea
[0xea:0xed]
---
Predecessors: [0xe3]
Successors: []
---
0xea PUSH1 0x0
0xec DUP1
0xed REVERT
---
0xea: V72 = 0x0
0xed: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xee
[0xee:0xf5]
---
Predecessors: [0xe3]
Successors: [0x2f7]
---
0xee JUMPDEST
0xef PUSH2 0xce
0xf2 PUSH2 0x2f7
0xf5 JUMP
---
0xee: JUMPDEST 
0xef: V73 = 0xce
0xf2: V74 = 0x2f7
0xf5: JUMP 0x2f7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0xf6
[0xf6:0xfc]
---
Predecessors: [0x3d]
Successors: [0xfd, 0x101]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf6: JUMPDEST 
0xf7: V75 = CALLVALUE
0xf8: V76 = ISZERO V75
0xf9: V77 = 0x101
0xfc: JUMPI 0x101 V76
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf6]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V78 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x101
[0x101:0x108]
---
Predecessors: [0xf6]
Successors: [0x376]
---
0x101 JUMPDEST
0x102 PUSH2 0x109
0x105 PUSH2 0x376
0x108 JUMP
---
0x101: JUMPDEST 
0x102: V79 = 0x109
0x105: V80 = 0x376
0x108: JUMP 0x376
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x109]
Exit stack: [V13, 0x109]

================================

Block 0x109
[0x109:0x11c]
---
Predecessors: [0x376, 0x47a]
Successors: []
---
0x109 JUMPDEST
0x10a PUSH1 0x40
0x10c MLOAD
0x10d SWAP1
0x10e ISZERO
0x10f ISZERO
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 SWAP2
0x11a SUB
0x11b SWAP1
0x11c RETURN
---
0x109: JUMPDEST 
0x10a: V81 = 0x40
0x10c: V82 = M[0x40]
0x10e: V83 = ISZERO S0
0x10f: V84 = ISZERO V83
0x111: M[V82] = V84
0x112: V85 = 0x20
0x114: V86 = ADD 0x20 V82
0x115: V87 = 0x40
0x117: V88 = M[0x40]
0x11a: V89 = SUB V86 V88
0x11c: RETURN V88 V89
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x11d
[0x11d:0x123]
---
Predecessors: [0x48]
Successors: [0x124, 0x128]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11d: JUMPDEST 
0x11e: V90 = CALLVALUE
0x11f: V91 = ISZERO V90
0x120: V92 = 0x128
0x123: JUMPI 0x128 V91
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11d]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V93 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x11d]
Successors: [0x386]
---
0x128 JUMPDEST
0x129 PUSH2 0xce
0x12c PUSH2 0x386
0x12f JUMP
---
0x128: JUMPDEST 
0x129: V94 = 0xce
0x12c: V95 = 0x386
0x12f: JUMP 0x386
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0x130
[0x130:0x136]
---
Predecessors: [0x53]
Successors: [0x137, 0x13b]
---
0x130 JUMPDEST
0x131 CALLVALUE
0x132 ISZERO
0x133 PUSH2 0x13b
0x136 JUMPI
---
0x130: JUMPDEST 
0x131: V96 = CALLVALUE
0x132: V97 = ISZERO V96
0x133: V98 = 0x13b
0x136: JUMPI 0x13b V97
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x137
[0x137:0x13a]
---
Predecessors: [0x130]
Successors: []
---
0x137 PUSH1 0x0
0x139 DUP1
0x13a REVERT
---
0x137: V99 = 0x0
0x13a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13b
[0x13b:0x142]
---
Predecessors: [0x130]
Successors: [0x40a]
---
0x13b JUMPDEST
0x13c PUSH2 0x143
0x13f PUSH2 0x40a
0x142 JUMP
---
0x13b: JUMPDEST 
0x13c: V100 = 0x143
0x13f: V101 = 0x40a
0x142: JUMP 0x40a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x143]
Exit stack: [V13, 0x143]

================================

Block 0x143
[0x143:0x15e]
---
Predecessors: [0x40a, 0x6b6]
Successors: []
---
0x143 JUMPDEST
0x144 PUSH1 0x40
0x146 MLOAD
0x147 PUSH1 0x1
0x149 PUSH1 0xa0
0x14b PUSH1 0x2
0x14d EXP
0x14e SUB
0x14f SWAP1
0x150 SWAP2
0x151 AND
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b SWAP2
0x15c SUB
0x15d SWAP1
0x15e RETURN
---
0x143: JUMPDEST 
0x144: V102 = 0x40
0x146: V103 = M[0x40]
0x147: V104 = 0x1
0x149: V105 = 0xa0
0x14b: V106 = 0x2
0x14d: V107 = EXP 0x2 0xa0
0x14e: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V109 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x153: M[V103] = V109
0x154: V110 = 0x20
0x156: V111 = ADD 0x20 V103
0x157: V112 = 0x40
0x159: V113 = M[0x40]
0x15c: V114 = SUB V111 V113
0x15e: RETURN V113 V114
---
Entry stack: [V13, 0x143, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x143]

================================

Block 0x15f
[0x15f:0x165]
---
Predecessors: [0x5e]
Successors: [0x166, 0x16a]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x15f: JUMPDEST 
0x160: V115 = CALLVALUE
0x161: V116 = ISZERO V115
0x162: V117 = 0x16a
0x165: JUMPI 0x16a V116
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x15f]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V118 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16a
[0x16a:0x178]
---
Predecessors: [0x15f]
Successors: [0x419]
---
0x16a JUMPDEST
0x16b PUSH2 0xce
0x16e PUSH2 0xffff
0x171 PUSH1 0x4
0x173 CALLDATALOAD
0x174 AND
0x175 PUSH2 0x419
0x178 JUMP
---
0x16a: JUMPDEST 
0x16b: V119 = 0xce
0x16e: V120 = 0xffff
0x171: V121 = 0x4
0x173: V122 = CALLDATALOAD 0x4
0x174: V123 = AND V122 0xffff
0x175: V124 = 0x419
0x178: JUMP 0x419
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce, V123]
Exit stack: [V13, 0xce, V123]

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x69]
Successors: [0x180, 0x184]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x179: JUMPDEST 
0x17a: V125 = CALLVALUE
0x17b: V126 = ISZERO V125
0x17c: V127 = 0x184
0x17f: JUMPI 0x184 V126
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x179]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V128 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x184
[0x184:0x18b]
---
Predecessors: [0x179]
Successors: [0x47a]
---
0x184 JUMPDEST
0x185 PUSH2 0x109
0x188 PUSH2 0x47a
0x18b JUMP
---
0x184: JUMPDEST 
0x185: V129 = 0x109
0x188: V130 = 0x47a
0x18b: JUMP 0x47a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x109]
Exit stack: [V13, 0x109]

================================

Block 0x18c
[0x18c:0x1ac]
---
Predecessors: [0x74]
Successors: [0x47f]
---
0x18c JUMPDEST
0x18d PUSH2 0xce
0x190 PUSH5 0xffffffffff
0x196 PUSH1 0x4
0x198 CALLDATALOAD
0x199 AND
0x19a PUSH1 0x24
0x19c CALLDATALOAD
0x19d PUSH1 0x1
0x19f PUSH1 0xa0
0x1a1 PUSH1 0x2
0x1a3 EXP
0x1a4 SUB
0x1a5 PUSH1 0x44
0x1a7 CALLDATALOAD
0x1a8 AND
0x1a9 PUSH2 0x47f
0x1ac JUMP
---
0x18c: JUMPDEST 
0x18d: V131 = 0xce
0x190: V132 = 0xffffffffff
0x196: V133 = 0x4
0x198: V134 = CALLDATALOAD 0x4
0x199: V135 = AND V134 0xffffffffff
0x19a: V136 = 0x24
0x19c: V137 = CALLDATALOAD 0x24
0x19d: V138 = 0x1
0x19f: V139 = 0xa0
0x1a1: V140 = 0x2
0x1a3: V141 = EXP 0x2 0xa0
0x1a4: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a5: V143 = 0x44
0x1a7: V144 = CALLDATALOAD 0x44
0x1a8: V145 = AND V144 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V146 = 0x47f
0x1ac: JUMP 0x47f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce, V135, V137, V145]
Exit stack: [V13, 0xce, V135, V137, V145]

================================

Block 0x1ad
[0x1ad:0x1cd]
---
Predecessors: [0x7f]
Successors: [0x59d]
---
0x1ad JUMPDEST
0x1ae PUSH2 0xce
0x1b1 PUSH5 0xffffffffff
0x1b7 PUSH1 0x4
0x1b9 CALLDATALOAD
0x1ba AND
0x1bb PUSH1 0x24
0x1bd CALLDATALOAD
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 PUSH1 0x44
0x1c8 CALLDATALOAD
0x1c9 AND
0x1ca PUSH2 0x59d
0x1cd JUMP
---
0x1ad: JUMPDEST 
0x1ae: V147 = 0xce
0x1b1: V148 = 0xffffffffff
0x1b7: V149 = 0x4
0x1b9: V150 = CALLDATALOAD 0x4
0x1ba: V151 = AND V150 0xffffffffff
0x1bb: V152 = 0x24
0x1bd: V153 = CALLDATALOAD 0x24
0x1be: V154 = 0x1
0x1c0: V155 = 0xa0
0x1c2: V156 = 0x2
0x1c4: V157 = EXP 0x2 0xa0
0x1c5: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V159 = 0x44
0x1c8: V160 = CALLDATALOAD 0x44
0x1c9: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V162 = 0x59d
0x1cd: JUMP 0x59d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce, V151, V153, V161]
Exit stack: [V13, 0xce, V151, V153, V161]

================================

Block 0x1ce
[0x1ce:0x1d4]
---
Predecessors: [0x8a]
Successors: [0x1d5, 0x1d9]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 ISZERO
0x1d1 PUSH2 0x1d9
0x1d4 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V163 = CALLVALUE
0x1d0: V164 = ISZERO V163
0x1d1: V165 = 0x1d9
0x1d4: JUMPI 0x1d9 V164
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d5
[0x1d5:0x1d8]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 REVERT
---
0x1d5: V166 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d9
[0x1d9:0x1e0]
---
Predecessors: [0x1ce]
Successors: [0x5b8]
---
0x1d9 JUMPDEST
0x1da PUSH2 0x1e1
0x1dd PUSH2 0x5b8
0x1e0 JUMP
---
0x1d9: JUMPDEST 
0x1da: V167 = 0x1e1
0x1dd: V168 = 0x5b8
0x1e0: JUMP 0x5b8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V13, 0x1e1]

================================

Block 0x1e1
[0x1e1:0x1f7]
---
Predecessors: [0x5b8]
Successors: []
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 PUSH2 0xffff
0x1e8 SWAP1
0x1e9 SWAP2
0x1ea AND
0x1eb DUP2
0x1ec MSTORE
0x1ed PUSH1 0x20
0x1ef ADD
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 DUP1
0x1f4 SWAP2
0x1f5 SUB
0x1f6 SWAP1
0x1f7 RETURN
---
0x1e1: JUMPDEST 
0x1e2: V169 = 0x40
0x1e4: V170 = M[0x40]
0x1e5: V171 = 0xffff
0x1ea: V172 = AND V554 0xffff
0x1ec: M[V170] = V172
0x1ed: V173 = 0x20
0x1ef: V174 = ADD 0x20 V170
0x1f0: V175 = 0x40
0x1f2: V176 = M[0x40]
0x1f5: V177 = SUB V174 V176
0x1f7: RETURN V176 V177
---
Entry stack: [V13, 0x1e1, V554]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1e1]

================================

Block 0x1f8
[0x1f8:0x1fe]
---
Predecessors: [0x95]
Successors: [0x1ff, 0x203]
---
0x1f8 JUMPDEST
0x1f9 CALLVALUE
0x1fa ISZERO
0x1fb PUSH2 0x203
0x1fe JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V178 = CALLVALUE
0x1fa: V179 = ISZERO V178
0x1fb: V180 = 0x203
0x1fe: JUMPI 0x203 V179
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ff
[0x1ff:0x202]
---
Predecessors: [0x1f8]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 REVERT
---
0x1ff: V181 = 0x0
0x202: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x203
[0x203:0x21d]
---
Predecessors: [0x1f8]
Successors: [0x5c9]
---
0x203 JUMPDEST
0x204 PUSH2 0xce
0x207 PUSH1 0x1
0x209 PUSH1 0xa0
0x20b PUSH1 0x2
0x20d EXP
0x20e SUB
0x20f PUSH1 0x4
0x211 CALLDATALOAD
0x212 AND
0x213 PUSH2 0xffff
0x216 PUSH1 0x24
0x218 CALLDATALOAD
0x219 AND
0x21a PUSH2 0x5c9
0x21d JUMP
---
0x203: JUMPDEST 
0x204: V182 = 0xce
0x207: V183 = 0x1
0x209: V184 = 0xa0
0x20b: V185 = 0x2
0x20d: V186 = EXP 0x2 0xa0
0x20e: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20f: V188 = 0x4
0x211: V189 = CALLDATALOAD 0x4
0x212: V190 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x213: V191 = 0xffff
0x216: V192 = 0x24
0x218: V193 = CALLDATALOAD 0x24
0x219: V194 = AND V193 0xffff
0x21a: V195 = 0x5c9
0x21d: JUMP 0x5c9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce, V190, V194]
Exit stack: [V13, 0xce, V190, V194]

================================

Block 0x21e
[0x21e:0x224]
---
Predecessors: [0xa0]
Successors: [0x225, 0x229]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x21e: JUMPDEST 
0x21f: V196 = CALLVALUE
0x220: V197 = ISZERO V196
0x221: V198 = 0x229
0x224: JUMPI 0x229 V197
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x21e]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V199 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x229
[0x229:0x230]
---
Predecessors: [0x21e]
Successors: [0x6b6]
---
0x229 JUMPDEST
0x22a PUSH2 0x143
0x22d PUSH2 0x6b6
0x230 JUMP
---
0x229: JUMPDEST 
0x22a: V200 = 0x143
0x22d: V201 = 0x6b6
0x230: JUMP 0x6b6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x143]
Exit stack: [V13, 0x143]

================================

Block 0x231
[0x231:0x237]
---
Predecessors: [0xab]
Successors: [0x238, 0x23c]
---
0x231 JUMPDEST
0x232 CALLVALUE
0x233 ISZERO
0x234 PUSH2 0x23c
0x237 JUMPI
---
0x231: JUMPDEST 
0x232: V202 = CALLVALUE
0x233: V203 = ISZERO V202
0x234: V204 = 0x23c
0x237: JUMPI 0x23c V203
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x238
[0x238:0x23b]
---
Predecessors: [0x231]
Successors: []
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b REVERT
---
0x238: V205 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x23c
[0x23c:0x24f]
---
Predecessors: [0x231]
Successors: [0x6c5]
---
0x23c JUMPDEST
0x23d PUSH2 0xce
0x240 PUSH1 0x1
0x242 PUSH1 0xa0
0x244 PUSH1 0x2
0x246 EXP
0x247 SUB
0x248 PUSH1 0x4
0x24a CALLDATALOAD
0x24b AND
0x24c PUSH2 0x6c5
0x24f JUMP
---
0x23c: JUMPDEST 
0x23d: V206 = 0xce
0x240: V207 = 0x1
0x242: V208 = 0xa0
0x244: V209 = 0x2
0x246: V210 = EXP 0x2 0xa0
0x247: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x248: V212 = 0x4
0x24a: V213 = CALLDATALOAD 0x4
0x24b: V214 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V215 = 0x6c5
0x24f: JUMP 0x6c5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce, V214]
Exit stack: [V13, 0xce, V214]

================================

Block 0x250
[0x250:0x266]
---
Predecessors: [0xc6]
Successors: [0x267, 0x26b]
---
0x250 JUMPDEST
0x251 PUSH1 0x1
0x253 SLOAD
0x254 CALLER
0x255 PUSH1 0x1
0x257 PUSH1 0xa0
0x259 PUSH1 0x2
0x25b EXP
0x25c SUB
0x25d SWAP1
0x25e DUP2
0x25f AND
0x260 SWAP2
0x261 AND
0x262 EQ
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x250: JUMPDEST 
0x251: V216 = 0x1
0x253: V217 = S[0x1]
0x254: V218 = CALLER
0x255: V219 = 0x1
0x257: V220 = 0xa0
0x259: V221 = 0x2
0x25b: V222 = EXP 0x2 0xa0
0x25c: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x261: V225 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x262: V226 = EQ V225 V224
0x263: V227 = 0x26b
0x266: JUMPI 0x26b V226
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x250]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V228 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x26b
[0x26b:0x272]
---
Predecessors: [0x250]
Successors: [0x275]
---
0x26b JUMPDEST
0x26c PUSH2 0x273
0x26f PUSH2 0x275
0x272 JUMP
---
0x26b: JUMPDEST 
0x26c: V229 = 0x273
0x26f: V230 = 0x275
0x272: JUMP 0x275
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: [0x273]
Exit stack: [V13, 0xce, 0x273]

================================

Block 0x273
[0x273:0x274]
---
Predecessors: [0x273, 0x2ab, 0x2bf]
Successors: [0xce, 0x273]
---
0x273 JUMPDEST
0x274 JUMP
---
0x273: JUMPDEST 
0x274: JUMP S0
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x275
[0x275:0x28c]
---
Predecessors: [0xdb, 0x26b]
Successors: [0x28d, 0x2a0]
---
0x275 JUMPDEST
0x276 PUSH1 0x0
0x278 SLOAD
0x279 CALLER
0x27a PUSH1 0x1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 SUB
0x282 SWAP1
0x283 DUP2
0x284 AND
0x285 SWAP2
0x286 AND
0x287 EQ
0x288 DUP1
0x289 PUSH2 0x2a0
0x28c JUMPI
---
0x275: JUMPDEST 
0x276: V231 = 0x0
0x278: V232 = S[0x0]
0x279: V233 = CALLER
0x27a: V234 = 0x1
0x27c: V235 = 0xa0
0x27e: V236 = 0x2
0x280: V237 = EXP 0x2 0xa0
0x281: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x286: V240 = AND V232 0xffffffffffffffffffffffffffffffffffffffff
0x287: V241 = EQ V240 V239
0x289: V242 = 0x2a0
0x28c: JUMPI 0x2a0 V241
---
Entry stack: [V13, S1, {0xce, 0x273}]
Stack pops: 0
Stack additions: [V241]
Exit stack: [V13, S1, {0xce, 0x273}, V241]

================================

Block 0x28d
[0x28d:0x29f]
---
Predecessors: [0x275]
Successors: [0x2a0]
---
0x28d POP
0x28e PUSH1 0x1
0x290 SLOAD
0x291 CALLER
0x292 PUSH1 0x1
0x294 PUSH1 0xa0
0x296 PUSH1 0x2
0x298 EXP
0x299 SUB
0x29a SWAP1
0x29b DUP2
0x29c AND
0x29d SWAP2
0x29e AND
0x29f EQ
---
0x28e: V243 = 0x1
0x290: V244 = S[0x1]
0x291: V245 = CALLER
0x292: V246 = 0x1
0x294: V247 = 0xa0
0x296: V248 = 0x2
0x298: V249 = EXP 0x2 0xa0
0x299: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x29e: V252 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V253 = EQ V252 V251
---
Entry stack: [V13, S2, {0xce, 0x273}, V241]
Stack pops: 1
Stack additions: [V253]
Exit stack: [V13, S2, {0xce, 0x273}, V253]

================================

Block 0x2a0
[0x2a0:0x2a6]
---
Predecessors: [0x275, 0x28d]
Successors: [0x2a7, 0x2ab]
---
0x2a0 JUMPDEST
0x2a1 ISZERO
0x2a2 ISZERO
0x2a3 PUSH2 0x2ab
0x2a6 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V254 = ISZERO S0
0x2a2: V255 = ISZERO V254
0x2a3: V256 = 0x2ab
0x2a6: JUMPI 0x2ab V255
---
Entry stack: [V13, S2, {0xce, 0x273}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S2, {0xce, 0x273}]

================================

Block 0x2a7
[0x2a7:0x2aa]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a7 PUSH1 0x0
0x2a9 DUP1
0x2aa REVERT
---
0x2a7: V257 = 0x0
0x2aa: REVERT 0x0 0x0
---
Entry stack: [V13, S1, {0xce, 0x273}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, {0xce, 0x273}]

================================

Block 0x2ab
[0x2ab:0x2be]
---
Predecessors: [0x2a0]
Successors: [0x273, 0x2bf]
---
0x2ab JUMPDEST
0x2ac PUSH1 0x0
0x2ae ADDRESS
0x2af PUSH1 0x1
0x2b1 PUSH1 0xa0
0x2b3 PUSH1 0x2
0x2b5 EXP
0x2b6 SUB
0x2b7 AND
0x2b8 BALANCE
0x2b9 GT
0x2ba ISZERO
0x2bb PUSH2 0x273
0x2be JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V258 = 0x0
0x2ae: V259 = ADDRESS
0x2af: V260 = 0x1
0x2b1: V261 = 0xa0
0x2b3: V262 = 0x2
0x2b5: V263 = EXP 0x2 0xa0
0x2b6: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b7: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2b8: V266 = BALANCE V265
0x2b9: V267 = GT V266 0x0
0x2ba: V268 = ISZERO V267
0x2bb: V269 = 0x273
0x2be: JUMPI 0x273 V268
---
Entry stack: [V13, S1, {0xce, 0x273}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, {0xce, 0x273}]

================================

Block 0x2bf
[0x2bf:0x2f2]
---
Predecessors: [0x2ab]
Successors: [0x273, 0x2f3]
---
0x2bf PUSH1 0x1
0x2c1 SLOAD
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0xa0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 SUB
0x2ca SWAP1
0x2cb DUP2
0x2cc AND
0x2cd SWAP1
0x2ce ADDRESS
0x2cf AND
0x2d0 BALANCE
0x2d1 DUP1
0x2d2 ISZERO
0x2d3 PUSH2 0x8fc
0x2d6 MUL
0x2d7 SWAP1
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db PUSH1 0x0
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 DUP4
0x2e2 SUB
0x2e3 DUP2
0x2e4 DUP6
0x2e5 DUP9
0x2e6 DUP9
0x2e7 CALL
0x2e8 SWAP4
0x2e9 POP
0x2ea POP
0x2eb POP
0x2ec POP
0x2ed ISZERO
0x2ee ISZERO
0x2ef PUSH2 0x273
0x2f2 JUMPI
---
0x2bf: V270 = 0x1
0x2c1: V271 = S[0x1]
0x2c2: V272 = 0x1
0x2c4: V273 = 0xa0
0x2c6: V274 = 0x2
0x2c8: V275 = EXP 0x2 0xa0
0x2c9: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cc: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x2ce: V278 = ADDRESS
0x2cf: V279 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V280 = BALANCE V279
0x2d2: V281 = ISZERO V280
0x2d3: V282 = 0x8fc
0x2d6: V283 = MUL 0x8fc V281
0x2d8: V284 = 0x40
0x2da: V285 = M[0x40]
0x2db: V286 = 0x0
0x2dd: V287 = 0x40
0x2df: V288 = M[0x40]
0x2e2: V289 = SUB V285 V288
0x2e7: V290 = CALL V283 V277 V280 V288 V289 V288 0x0
0x2ed: V291 = ISZERO V290
0x2ee: V292 = ISZERO V291
0x2ef: V293 = 0x273
0x2f2: JUMPI 0x273 V292
---
Entry stack: [V13, S1, {0xce, 0x273}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, {0xce, 0x273}]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2bf]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V294 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V13, S1, {0xce, 0x273}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, {0xce, 0x273}]

================================

Block 0x2f7
[0x2f7:0x30d]
---
Predecessors: [0xee]
Successors: [0x30e, 0x312]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x0
0x2fa SLOAD
0x2fb CALLER
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 SWAP1
0x305 DUP2
0x306 AND
0x307 SWAP2
0x308 AND
0x309 EQ
0x30a PUSH2 0x312
0x30d JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V295 = 0x0
0x2fa: V296 = S[0x0]
0x2fb: V297 = CALLER
0x2fc: V298 = 0x1
0x2fe: V299 = 0xa0
0x300: V300 = 0x2
0x302: V301 = EXP 0x2 0xa0
0x303: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x308: V304 = AND V296 0xffffffffffffffffffffffffffffffffffffffff
0x309: V305 = EQ V304 V303
0x30a: V306 = 0x312
0x30d: JUMPI 0x312 V305
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x2f7]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V307 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x312
[0x312:0x325]
---
Predecessors: [0x2f7]
Successors: [0x326, 0x32a]
---
0x312 JUMPDEST
0x313 PUSH1 0x0
0x315 SLOAD
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SWAP1
0x31c DIV
0x31d PUSH1 0xff
0x31f AND
0x320 ISZERO
0x321 ISZERO
0x322 PUSH2 0x32a
0x325 JUMPI
---
0x312: JUMPDEST 
0x313: V308 = 0x0
0x315: V309 = S[0x0]
0x316: V310 = 0xa0
0x318: V311 = 0x2
0x31a: V312 = EXP 0x2 0xa0
0x31c: V313 = DIV V309 0x10000000000000000000000000000000000000000
0x31d: V314 = 0xff
0x31f: V315 = AND 0xff V313
0x320: V316 = ISZERO V315
0x321: V317 = ISZERO V316
0x322: V318 = 0x32a
0x325: JUMPI 0x32a V317
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x312]
Successors: []
---
0x326 PUSH1 0x0
0x328 DUP1
0x329 REVERT
---
0x326: V319 = 0x0
0x329: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x32a
[0x32a:0x375]
---
Predecessors: [0x312]
Successors: [0xce]
---
0x32a JUMPDEST
0x32b PUSH1 0x0
0x32d DUP1
0x32e SLOAD
0x32f PUSH21 0xff0000000000000000000000000000000000000000
0x345 NOT
0x346 AND
0x347 SWAP1
0x348 SSTORE
0x349 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x36a PUSH1 0x40
0x36c MLOAD
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 SWAP2
0x372 SUB
0x373 SWAP1
0x374 LOG1
0x375 JUMP
---
0x32a: JUMPDEST 
0x32b: V320 = 0x0
0x32e: V321 = S[0x0]
0x32f: V322 = 0xff0000000000000000000000000000000000000000
0x345: V323 = NOT 0xff0000000000000000000000000000000000000000
0x346: V324 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V321
0x348: S[0x0] = V324
0x349: V325 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x36a: V326 = 0x40
0x36c: V327 = M[0x40]
0x36d: V328 = 0x40
0x36f: V329 = M[0x40]
0x372: V330 = SUB V327 V329
0x374: LOG V329 V330 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x375: JUMP 0xce
---
Entry stack: [V13, 0xce]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x376
[0x376:0x385]
---
Predecessors: [0x101]
Successors: [0x109]
---
0x376 JUMPDEST
0x377 PUSH1 0x0
0x379 SLOAD
0x37a PUSH1 0xa0
0x37c PUSH1 0x2
0x37e EXP
0x37f SWAP1
0x380 DIV
0x381 PUSH1 0xff
0x383 AND
0x384 DUP2
0x385 JUMP
---
0x376: JUMPDEST 
0x377: V331 = 0x0
0x379: V332 = S[0x0]
0x37a: V333 = 0xa0
0x37c: V334 = 0x2
0x37e: V335 = EXP 0x2 0xa0
0x380: V336 = DIV V332 0x10000000000000000000000000000000000000000
0x381: V337 = 0xff
0x383: V338 = AND 0xff V336
0x385: JUMP 0x109
---
Entry stack: [V13, 0x109]
Stack pops: 1
Stack additions: [S0, V338]
Exit stack: [V13, 0x109, V338]

================================

Block 0x386
[0x386:0x39c]
---
Predecessors: [0x128]
Successors: [0x39d, 0x3a1]
---
0x386 JUMPDEST
0x387 PUSH1 0x0
0x389 SLOAD
0x38a CALLER
0x38b PUSH1 0x1
0x38d PUSH1 0xa0
0x38f PUSH1 0x2
0x391 EXP
0x392 SUB
0x393 SWAP1
0x394 DUP2
0x395 AND
0x396 SWAP2
0x397 AND
0x398 EQ
0x399 PUSH2 0x3a1
0x39c JUMPI
---
0x386: JUMPDEST 
0x387: V339 = 0x0
0x389: V340 = S[0x0]
0x38a: V341 = CALLER
0x38b: V342 = 0x1
0x38d: V343 = 0xa0
0x38f: V344 = 0x2
0x391: V345 = EXP 0x2 0xa0
0x392: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x395: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x397: V348 = AND V340 0xffffffffffffffffffffffffffffffffffffffff
0x398: V349 = EQ V348 V347
0x399: V350 = 0x3a1
0x39c: JUMPI 0x3a1 V349
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x39d
[0x39d:0x3a0]
---
Predecessors: [0x386]
Successors: []
---
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 REVERT
---
0x39d: V351 = 0x0
0x3a0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x3a1
[0x3a1:0x3b3]
---
Predecessors: [0x386]
Successors: [0x3b4, 0x3b8]
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x0
0x3a4 SLOAD
0x3a5 PUSH1 0xa0
0x3a7 PUSH1 0x2
0x3a9 EXP
0x3aa SWAP1
0x3ab DIV
0x3ac PUSH1 0xff
0x3ae AND
0x3af ISZERO
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V352 = 0x0
0x3a4: V353 = S[0x0]
0x3a5: V354 = 0xa0
0x3a7: V355 = 0x2
0x3a9: V356 = EXP 0x2 0xa0
0x3ab: V357 = DIV V353 0x10000000000000000000000000000000000000000
0x3ac: V358 = 0xff
0x3ae: V359 = AND 0xff V357
0x3af: V360 = ISZERO V359
0x3b0: V361 = 0x3b8
0x3b3: JUMPI 0x3b8 V360
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x3a1]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V362 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0x3b8
[0x3b8:0x409]
---
Predecessors: [0x3a1]
Successors: [0xce]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc SLOAD
0x3bd PUSH21 0xff0000000000000000000000000000000000000000
0x3d3 NOT
0x3d4 AND
0x3d5 PUSH1 0xa0
0x3d7 PUSH1 0x2
0x3d9 EXP
0x3da OR
0x3db SWAP1
0x3dc SSTORE
0x3dd PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 PUSH1 0x40
0x403 MLOAD
0x404 DUP1
0x405 SWAP2
0x406 SUB
0x407 SWAP1
0x408 LOG1
0x409 JUMP
---
0x3b8: JUMPDEST 
0x3b9: V363 = 0x0
0x3bc: V364 = S[0x0]
0x3bd: V365 = 0xff0000000000000000000000000000000000000000
0x3d3: V366 = NOT 0xff0000000000000000000000000000000000000000
0x3d4: V367 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V364
0x3d5: V368 = 0xa0
0x3d7: V369 = 0x2
0x3d9: V370 = EXP 0x2 0xa0
0x3da: V371 = OR 0x10000000000000000000000000000000000000000 V367
0x3dc: S[0x0] = V371
0x3dd: V372 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x3fe: V373 = 0x40
0x400: V374 = M[0x40]
0x401: V375 = 0x40
0x403: V376 = M[0x40]
0x406: V377 = SUB V374 V376
0x408: LOG V376 V377 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x409: JUMP 0xce
---
Entry stack: [V13, 0xce]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x40a
[0x40a:0x418]
---
Predecessors: [0x13b]
Successors: [0x143]
---
0x40a JUMPDEST
0x40b PUSH1 0x0
0x40d SLOAD
0x40e PUSH1 0x1
0x410 PUSH1 0xa0
0x412 PUSH1 0x2
0x414 EXP
0x415 SUB
0x416 AND
0x417 DUP2
0x418 JUMP
---
0x40a: JUMPDEST 
0x40b: V378 = 0x0
0x40d: V379 = S[0x0]
0x40e: V380 = 0x1
0x410: V381 = 0xa0
0x412: V382 = 0x2
0x414: V383 = EXP 0x2 0xa0
0x415: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x416: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x418: JUMP 0x143
---
Entry stack: [V13, 0x143]
Stack pops: 1
Stack additions: [S0, V385]
Exit stack: [V13, 0x143, V385]

================================

Block 0x419
[0x419:0x427]
---
Predecessors: [0x16a]
Successors: [0x428, 0x42c]
---
0x419 JUMPDEST
0x41a PUSH2 0x2710
0x41d PUSH2 0xffff
0x420 DUP3
0x421 AND
0x422 GT
0x423 ISZERO
0x424 PUSH2 0x42c
0x427 JUMPI
---
0x419: JUMPDEST 
0x41a: V386 = 0x2710
0x41d: V387 = 0xffff
0x421: V388 = AND V123 0xffff
0x422: V389 = GT V388 0x2710
0x423: V390 = ISZERO V389
0x424: V391 = 0x42c
0x427: JUMPI 0x42c V390
---
Entry stack: [V13, 0xce, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xce, V123]

================================

Block 0x428
[0x428:0x42b]
---
Predecessors: [0x419]
Successors: []
---
0x428 PUSH1 0x0
0x42a DUP1
0x42b REVERT
---
0x428: V392 = 0x0
0x42b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V123]

================================

Block 0x42c
[0x42c:0x442]
---
Predecessors: [0x419]
Successors: [0x443, 0x447]
---
0x42c JUMPDEST
0x42d PUSH1 0x0
0x42f SLOAD
0x430 CALLER
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 SWAP1
0x43a DUP2
0x43b AND
0x43c SWAP2
0x43d AND
0x43e EQ
0x43f PUSH2 0x447
0x442 JUMPI
---
0x42c: JUMPDEST 
0x42d: V393 = 0x0
0x42f: V394 = S[0x0]
0x430: V395 = CALLER
0x431: V396 = 0x1
0x433: V397 = 0xa0
0x435: V398 = 0x2
0x437: V399 = EXP 0x2 0xa0
0x438: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x43d: V402 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x43e: V403 = EQ V402 V401
0x43f: V404 = 0x447
0x442: JUMPI 0x447 V403
---
Entry stack: [V13, 0xce, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V123]

================================

Block 0x443
[0x443:0x446]
---
Predecessors: [0x42c]
Successors: []
---
0x443 PUSH1 0x0
0x445 DUP1
0x446 REVERT
---
0x443: V405 = 0x0
0x446: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V123]

================================

Block 0x447
[0x447:0x479]
---
Predecessors: [0x42c]
Successors: [0xce]
---
0x447 JUMPDEST
0x448 PUSH1 0x1
0x44a DUP1
0x44b SLOAD
0x44c PUSH2 0xffff
0x44f SWAP1
0x450 SWAP3
0x451 AND
0x452 PUSH1 0xa0
0x454 PUSH1 0x2
0x456 EXP
0x457 MUL
0x458 PUSH22 0xffff0000000000000000000000000000000000000000
0x46f NOT
0x470 SWAP1
0x471 SWAP3
0x472 AND
0x473 SWAP2
0x474 SWAP1
0x475 SWAP2
0x476 OR
0x477 SWAP1
0x478 SSTORE
0x479 JUMP
---
0x447: JUMPDEST 
0x448: V406 = 0x1
0x44b: V407 = S[0x1]
0x44c: V408 = 0xffff
0x451: V409 = AND V123 0xffff
0x452: V410 = 0xa0
0x454: V411 = 0x2
0x456: V412 = EXP 0x2 0xa0
0x457: V413 = MUL 0x10000000000000000000000000000000000000000 V409
0x458: V414 = 0xffff0000000000000000000000000000000000000000
0x46f: V415 = NOT 0xffff0000000000000000000000000000000000000000
0x472: V416 = AND V407 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff
0x476: V417 = OR V416 V413
0x478: S[0x1] = V417
0x479: JUMP 0xce
---
Entry stack: [V13, 0xce, V123]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x47a
[0x47a:0x47e]
---
Predecessors: [0x184]
Successors: [0x109]
---
0x47a JUMPDEST
0x47b PUSH1 0x1
0x47d SWAP1
0x47e JUMP
---
0x47a: JUMPDEST 
0x47b: V418 = 0x1
0x47e: JUMP 0x109
---
Entry stack: [V13, 0x109]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x47f
[0x47f:0x498]
---
Predecessors: [0x18c]
Successors: [0x499, 0x49d]
---
0x47f JUMPDEST
0x480 PUSH1 0x1
0x482 SLOAD
0x483 PUSH1 0x0
0x485 SWAP1
0x486 CALLER
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f SWAP1
0x490 DUP2
0x491 AND
0x492 SWAP2
0x493 AND
0x494 EQ
0x495 PUSH2 0x49d
0x498 JUMPI
---
0x47f: JUMPDEST 
0x480: V419 = 0x1
0x482: V420 = S[0x1]
0x483: V421 = 0x0
0x486: V422 = CALLER
0x487: V423 = 0x1
0x489: V424 = 0xa0
0x48b: V425 = 0x2
0x48d: V426 = EXP 0x2 0xa0
0x48e: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x493: V429 = AND V420 0xffffffffffffffffffffffffffffffffffffffff
0x494: V430 = EQ V429 V428
0x495: V431 = 0x49d
0x498: JUMPI 0x49d V430
---
Entry stack: [V13, 0xce, V135, V137, V145]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xce, V135, V137, V145, 0x0]

================================

Block 0x499
[0x499:0x49c]
---
Predecessors: [0x47f]
Successors: []
---
0x499 PUSH1 0x0
0x49b DUP1
0x49c REVERT
---
0x499: V432 = 0x0
0x49c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V135, V137, V145, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, 0x0]

================================

Block 0x49d
[0x49d:0x4af]
---
Predecessors: [0x47f]
Successors: [0x4b0, 0x4b4]
---
0x49d JUMPDEST
0x49e PUSH1 0x0
0x4a0 SLOAD
0x4a1 PUSH1 0xa0
0x4a3 PUSH1 0x2
0x4a5 EXP
0x4a6 SWAP1
0x4a7 DIV
0x4a8 PUSH1 0xff
0x4aa AND
0x4ab ISZERO
0x4ac PUSH2 0x4b4
0x4af JUMPI
---
0x49d: JUMPDEST 
0x49e: V433 = 0x0
0x4a0: V434 = S[0x0]
0x4a1: V435 = 0xa0
0x4a3: V436 = 0x2
0x4a5: V437 = EXP 0x2 0xa0
0x4a7: V438 = DIV V434 0x10000000000000000000000000000000000000000
0x4a8: V439 = 0xff
0x4aa: V440 = AND 0xff V438
0x4ab: V441 = ISZERO V440
0x4ac: V442 = 0x4b4
0x4af: JUMPI 0x4b4 V441
---
Entry stack: [V13, 0xce, V135, V137, V145, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, 0x0]

================================

Block 0x4b0
[0x4b0:0x4b3]
---
Predecessors: [0x49d]
Successors: []
---
0x4b0 PUSH1 0x0
0x4b2 DUP1
0x4b3 REVERT
---
0x4b0: V443 = 0x0
0x4b3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V135, V137, V145, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, 0x0]

================================

Block 0x4b4
[0x4b4:0x4fd]
---
Predecessors: [0x49d]
Successors: [0x4fe, 0x502]
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x1
0x4b7 SLOAD
0x4b8 PUSH1 0x1
0x4ba PUSH1 0xa0
0x4bc PUSH1 0x2
0x4be EXP
0x4bf SUB
0x4c0 AND
0x4c1 PUSH4 0x999d3947
0x4c6 DUP6
0x4c7 PUSH1 0x40
0x4c9 MLOAD
0x4ca PUSH1 0xe0
0x4cc PUSH1 0x2
0x4ce EXP
0x4cf PUSH4 0xffffffff
0x4d4 DUP5
0x4d5 AND
0x4d6 MUL
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 PUSH5 0xffffffffff
0x4df SWAP1
0x4e0 SWAP2
0x4e1 AND
0x4e2 PUSH1 0x4
0x4e4 DUP3
0x4e5 ADD
0x4e6 MSTORE
0x4e7 PUSH1 0x24
0x4e9 ADD
0x4ea PUSH1 0x20
0x4ec PUSH1 0x40
0x4ee MLOAD
0x4ef DUP1
0x4f0 DUP4
0x4f1 SUB
0x4f2 DUP2
0x4f3 PUSH1 0x0
0x4f5 DUP8
0x4f6 DUP1
0x4f7 EXTCODESIZE
0x4f8 ISZERO
0x4f9 ISZERO
0x4fa PUSH2 0x502
0x4fd JUMPI
---
0x4b4: JUMPDEST 
0x4b5: V444 = 0x1
0x4b7: V445 = S[0x1]
0x4b8: V446 = 0x1
0x4ba: V447 = 0xa0
0x4bc: V448 = 0x2
0x4be: V449 = EXP 0x2 0xa0
0x4bf: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c0: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x4c1: V452 = 0x999d3947
0x4c7: V453 = 0x40
0x4c9: V454 = M[0x40]
0x4ca: V455 = 0xe0
0x4cc: V456 = 0x2
0x4ce: V457 = EXP 0x2 0xe0
0x4cf: V458 = 0xffffffff
0x4d5: V459 = AND 0x999d3947 0xffffffff
0x4d6: V460 = MUL 0x999d3947 0x100000000000000000000000000000000000000000000000000000000
0x4d8: M[V454] = 0x999d394700000000000000000000000000000000000000000000000000000000
0x4d9: V461 = 0xffffffffff
0x4e1: V462 = AND V135 0xffffffffff
0x4e2: V463 = 0x4
0x4e5: V464 = ADD V454 0x4
0x4e6: M[V464] = V462
0x4e7: V465 = 0x24
0x4e9: V466 = ADD 0x24 V454
0x4ea: V467 = 0x20
0x4ec: V468 = 0x40
0x4ee: V469 = M[0x40]
0x4f1: V470 = SUB V466 V469
0x4f3: V471 = 0x0
0x4f7: V472 = EXTCODESIZE V451
0x4f8: V473 = ISZERO V472
0x4f9: V474 = ISZERO V473
0x4fa: V475 = 0x502
0x4fd: JUMPI 0x502 V474
---
Entry stack: [V13, 0xce, V135, V137, V145, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V451, 0x999d3947, V466, 0x20, V469, V470, V469, 0x0, V451]
Exit stack: [V13, 0xce, V135, V137, V145, 0x0, V451, 0x999d3947, V466, 0x20, V469, V470, V469, 0x0, V451]

================================

Block 0x4fe
[0x4fe:0x501]
---
Predecessors: [0x4b4]
Successors: []
---
0x4fe PUSH1 0x0
0x500 DUP1
0x501 REVERT
---
0x4fe: V476 = 0x0
0x501: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V135, V137, V145, 0x0, V451, 0x999d3947, V466, 0x20, V469, V470, V469, 0x0, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, 0x0, V451, 0x999d3947, V466, 0x20, V469, V470, V469, 0x0, V451]

================================

Block 0x502
[0x502:0x50a]
---
Predecessors: [0x4b4]
Successors: [0x50b, 0x50f]
---
0x502 JUMPDEST
0x503 GAS
0x504 CALL
0x505 ISZERO
0x506 ISZERO
0x507 PUSH2 0x50f
0x50a JUMPI
---
0x502: JUMPDEST 
0x503: V477 = GAS
0x504: V478 = CALL V477 V451 0x0 V469 V470 V469 0x20
0x505: V479 = ISZERO V478
0x506: V480 = ISZERO V479
0x507: V481 = 0x50f
0x50a: JUMPI 0x50f V480
---
Entry stack: [V13, 0xce, V135, V137, V145, 0x0, V451, 0x999d3947, V466, 0x20, V469, V470, V469, 0x0, V451]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, 0x0, V451, 0x999d3947, V466]

================================

Block 0x50b
[0x50b:0x50e]
---
Predecessors: [0x502]
Successors: []
---
0x50b PUSH1 0x0
0x50d DUP1
0x50e REVERT
---
0x50b: V482 = 0x0
0x50e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V135, V137, V145, 0x0, V451, 0x999d3947, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, 0x0, V451, 0x999d3947, V466]

================================

Block 0x50f
[0x50f:0x525]
---
Predecessors: [0x502]
Successors: [0x526, 0x52a]
---
0x50f JUMPDEST
0x510 POP
0x511 POP
0x512 POP
0x513 PUSH1 0x40
0x515 MLOAD
0x516 DUP1
0x517 MLOAD
0x518 SWAP2
0x519 POP
0x51a POP
0x51b PUSH3 0x10000
0x51f DUP2
0x520 AND
0x521 ISZERO
0x522 PUSH2 0x52a
0x525 JUMPI
---
0x50f: JUMPDEST 
0x513: V483 = 0x40
0x515: V484 = M[0x40]
0x517: V485 = M[V484]
0x51b: V486 = 0x10000
0x520: V487 = AND V485 0x10000
0x521: V488 = ISZERO V487
0x522: V489 = 0x52a
0x525: JUMPI 0x52a V488
---
Entry stack: [V13, 0xce, V135, V137, V145, 0x0, V451, 0x999d3947, V466]
Stack pops: 4
Stack additions: [V485]
Exit stack: [V13, 0xce, V135, V137, V145, V485]

================================

Block 0x526
[0x526:0x529]
---
Predecessors: [0x50f]
Successors: []
---
0x526 PUSH1 0x0
0x528 DUP1
0x529 REVERT
---
0x526: V490 = 0x0
0x529: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V135, V137, V145, V485]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, V485]

================================

Block 0x52a
[0x52a:0x582]
---
Predecessors: [0x50f]
Successors: [0x583, 0x587]
---
0x52a JUMPDEST
0x52b PUSH1 0x1
0x52d SLOAD
0x52e PUSH3 0x10000
0x532 SWAP2
0x533 SWAP1
0x534 SWAP2
0x535 OR
0x536 SWAP1
0x537 PUSH1 0x1
0x539 PUSH1 0xa0
0x53b PUSH1 0x2
0x53d EXP
0x53e SUB
0x53f AND
0x540 PUSH4 0xe1af915d
0x545 DUP6
0x546 DUP4
0x547 PUSH1 0x40
0x549 MLOAD
0x54a PUSH1 0xe0
0x54c PUSH1 0x2
0x54e EXP
0x54f PUSH4 0xffffffff
0x554 DUP6
0x555 AND
0x556 MUL
0x557 DUP2
0x558 MSTORE
0x559 PUSH5 0xffffffffff
0x55f SWAP1
0x560 SWAP3
0x561 AND
0x562 PUSH1 0x4
0x564 DUP4
0x565 ADD
0x566 MSTORE
0x567 PUSH1 0x24
0x569 DUP3
0x56a ADD
0x56b MSTORE
0x56c PUSH1 0x44
0x56e ADD
0x56f PUSH1 0x0
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 DUP4
0x576 SUB
0x577 DUP2
0x578 PUSH1 0x0
0x57a DUP8
0x57b DUP1
0x57c EXTCODESIZE
0x57d ISZERO
0x57e ISZERO
0x57f PUSH2 0x587
0x582 JUMPI
---
0x52a: JUMPDEST 
0x52b: V491 = 0x1
0x52d: V492 = S[0x1]
0x52e: V493 = 0x10000
0x535: V494 = OR 0x10000 V485
0x537: V495 = 0x1
0x539: V496 = 0xa0
0x53b: V497 = 0x2
0x53d: V498 = EXP 0x2 0xa0
0x53e: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53f: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x540: V501 = 0xe1af915d
0x547: V502 = 0x40
0x549: V503 = M[0x40]
0x54a: V504 = 0xe0
0x54c: V505 = 0x2
0x54e: V506 = EXP 0x2 0xe0
0x54f: V507 = 0xffffffff
0x555: V508 = AND 0xe1af915d 0xffffffff
0x556: V509 = MUL 0xe1af915d 0x100000000000000000000000000000000000000000000000000000000
0x558: M[V503] = 0xe1af915d00000000000000000000000000000000000000000000000000000000
0x559: V510 = 0xffffffffff
0x561: V511 = AND V135 0xffffffffff
0x562: V512 = 0x4
0x565: V513 = ADD V503 0x4
0x566: M[V513] = V511
0x567: V514 = 0x24
0x56a: V515 = ADD V503 0x24
0x56b: M[V515] = V494
0x56c: V516 = 0x44
0x56e: V517 = ADD 0x44 V503
0x56f: V518 = 0x0
0x571: V519 = 0x40
0x573: V520 = M[0x40]
0x576: V521 = SUB V517 V520
0x578: V522 = 0x0
0x57c: V523 = EXTCODESIZE V500
0x57d: V524 = ISZERO V523
0x57e: V525 = ISZERO V524
0x57f: V526 = 0x587
0x582: JUMPI 0x587 V525
---
Entry stack: [V13, 0xce, V135, V137, V145, V485]
Stack pops: 4
Stack additions: [S3, S2, S1, V494, V500, 0xe1af915d, V517, 0x0, V520, V521, V520, 0x0, V500]
Exit stack: [V13, 0xce, V135, V137, V145, V494, V500, 0xe1af915d, V517, 0x0, V520, V521, V520, 0x0, V500]

================================

Block 0x583
[0x583:0x586]
---
Predecessors: [0x52a]
Successors: []
---
0x583 PUSH1 0x0
0x585 DUP1
0x586 REVERT
---
0x583: V527 = 0x0
0x586: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V135, V137, V145, V494, V500, 0xe1af915d, V517, 0x0, V520, V521, V520, 0x0, V500]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, V494, V500, 0xe1af915d, V517, 0x0, V520, V521, V520, 0x0, V500]

================================

Block 0x587
[0x587:0x58f]
---
Predecessors: [0x52a]
Successors: [0x590, 0x594]
---
0x587 JUMPDEST
0x588 GAS
0x589 CALL
0x58a ISZERO
0x58b ISZERO
0x58c PUSH2 0x594
0x58f JUMPI
---
0x587: JUMPDEST 
0x588: V528 = GAS
0x589: V529 = CALL V528 V500 0x0 V520 V521 V520 0x0
0x58a: V530 = ISZERO V529
0x58b: V531 = ISZERO V530
0x58c: V532 = 0x594
0x58f: JUMPI 0x594 V531
---
Entry stack: [V13, 0xce, V135, V137, V145, V494, V500, 0xe1af915d, V517, 0x0, V520, V521, V520, 0x0, V500]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, V494, V500, 0xe1af915d, V517]

================================

Block 0x590
[0x590:0x593]
---
Predecessors: [0x587]
Successors: []
---
0x590 PUSH1 0x0
0x592 DUP1
0x593 REVERT
---
0x590: V533 = 0x0
0x593: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V135, V137, V145, V494, V500, 0xe1af915d, V517]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V135, V137, V145, V494, V500, 0xe1af915d, V517]

================================

Block 0x594
[0x594:0x59c]
---
Predecessors: [0x587]
Successors: [0xce]
---
0x594 JUMPDEST
0x595 POP
0x596 POP
0x597 POP
0x598 POP
0x599 POP
0x59a POP
0x59b POP
0x59c JUMP
---
0x594: JUMPDEST 
0x59c: JUMP 0xce
---
Entry stack: [V13, 0xce, V135, V137, V145, V494, V500, 0xe1af915d, V517]
Stack pops: 8
Stack additions: []
Exit stack: [V13]

================================

Block 0x59d
[0x59d:0x5b3]
---
Predecessors: [0x1ad]
Successors: [0xb6, 0x5b4]
---
0x59d JUMPDEST
0x59e PUSH1 0x1
0x5a0 SLOAD
0x5a1 CALLER
0x5a2 PUSH1 0x1
0x5a4 PUSH1 0xa0
0x5a6 PUSH1 0x2
0x5a8 EXP
0x5a9 SUB
0x5aa SWAP1
0x5ab DUP2
0x5ac AND
0x5ad SWAP2
0x5ae AND
0x5af EQ
0x5b0 PUSH2 0xb6
0x5b3 JUMPI
---
0x59d: JUMPDEST 
0x59e: V534 = 0x1
0x5a0: V535 = S[0x1]
0x5a1: V536 = CALLER
0x5a2: V537 = 0x1
0x5a4: V538 = 0xa0
0x5a6: V539 = 0x2
0x5a8: V540 = EXP 0x2 0xa0
0x5a9: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ac: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x5ae: V543 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x5af: V544 = EQ V543 V542
0x5b0: V545 = 0xb6
0x5b3: JUMPI 0xb6 V544
---
Entry stack: [V13, 0xce, V151, V153, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V151, V153, V161]

================================

Block 0x5b4
[0x5b4:0x5b7]
---
Predecessors: [0x59d]
Successors: []
---
0x5b4 PUSH1 0x0
0x5b6 DUP1
0x5b7 REVERT
---
0x5b4: V546 = 0x0
0x5b7: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V151, V153, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V151, V153, V161]

================================

Block 0x5b8
[0x5b8:0x5c8]
---
Predecessors: [0x1d9]
Successors: [0x1e1]
---
0x5b8 JUMPDEST
0x5b9 PUSH1 0x1
0x5bb SLOAD
0x5bc PUSH1 0xa0
0x5be PUSH1 0x2
0x5c0 EXP
0x5c1 SWAP1
0x5c2 DIV
0x5c3 PUSH2 0xffff
0x5c6 AND
0x5c7 DUP2
0x5c8 JUMP
---
0x5b8: JUMPDEST 
0x5b9: V547 = 0x1
0x5bb: V548 = S[0x1]
0x5bc: V549 = 0xa0
0x5be: V550 = 0x2
0x5c0: V551 = EXP 0x2 0xa0
0x5c2: V552 = DIV V548 0x10000000000000000000000000000000000000000
0x5c3: V553 = 0xffff
0x5c6: V554 = AND 0xffff V552
0x5c8: JUMP 0x1e1
---
Entry stack: [V13, 0x1e1]
Stack pops: 1
Stack additions: [S0, V554]
Exit stack: [V13, 0x1e1, V554]

================================

Block 0x5c9
[0x5c9:0x5d9]
---
Predecessors: [0x203]
Successors: [0x5da, 0x5de]
---
0x5c9 JUMPDEST
0x5ca PUSH1 0x0
0x5cc PUSH2 0x2710
0x5cf PUSH2 0xffff
0x5d2 DUP4
0x5d3 AND
0x5d4 GT
0x5d5 ISZERO
0x5d6 PUSH2 0x5de
0x5d9 JUMPI
---
0x5c9: JUMPDEST 
0x5ca: V555 = 0x0
0x5cc: V556 = 0x2710
0x5cf: V557 = 0xffff
0x5d3: V558 = AND V194 0xffff
0x5d4: V559 = GT V558 0x2710
0x5d5: V560 = ISZERO V559
0x5d6: V561 = 0x5de
0x5d9: JUMPI 0x5de V560
---
Entry stack: [V13, 0xce, V190, V194]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V13, 0xce, V190, V194, 0x0]

================================

Block 0x5da
[0x5da:0x5dd]
---
Predecessors: [0x5c9]
Successors: []
---
0x5da PUSH1 0x0
0x5dc DUP1
0x5dd REVERT
---
0x5da: V562 = 0x0
0x5dd: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V190, V194, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V190, V194, 0x0]

================================

Block 0x5de
[0x5de:0x5f4]
---
Predecessors: [0x5c9]
Successors: [0x5f5, 0x5f9]
---
0x5de JUMPDEST
0x5df PUSH1 0x0
0x5e1 SLOAD
0x5e2 CALLER
0x5e3 PUSH1 0x1
0x5e5 PUSH1 0xa0
0x5e7 PUSH1 0x2
0x5e9 EXP
0x5ea SUB
0x5eb SWAP1
0x5ec DUP2
0x5ed AND
0x5ee SWAP2
0x5ef AND
0x5f0 EQ
0x5f1 PUSH2 0x5f9
0x5f4 JUMPI
---
0x5de: JUMPDEST 
0x5df: V563 = 0x0
0x5e1: V564 = S[0x0]
0x5e2: V565 = CALLER
0x5e3: V566 = 0x1
0x5e5: V567 = 0xa0
0x5e7: V568 = 0x2
0x5e9: V569 = EXP 0x2 0xa0
0x5ea: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ed: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x5ef: V572 = AND V564 0xffffffffffffffffffffffffffffffffffffffff
0x5f0: V573 = EQ V572 V571
0x5f1: V574 = 0x5f9
0x5f4: JUMPI 0x5f9 V573
---
Entry stack: [V13, 0xce, V190, V194, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V190, V194, 0x0]

================================

Block 0x5f5
[0x5f5:0x5f8]
---
Predecessors: [0x5de]
Successors: []
---
0x5f5 PUSH1 0x0
0x5f7 DUP1
0x5f8 REVERT
---
0x5f5: V575 = 0x0
0x5f8: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V190, V194, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V190, V194, 0x0]

================================

Block 0x5f9
[0x5f9:0x65e]
---
Predecessors: [0x5de]
Successors: [0x65f, 0x663]
---
0x5f9 JUMPDEST
0x5fa POP
0x5fb PUSH1 0x1
0x5fd DUP1
0x5fe SLOAD
0x5ff PUSH22 0xffff0000000000000000000000000000000000000000
0x616 NOT
0x617 AND
0x618 PUSH1 0xa0
0x61a PUSH1 0x2
0x61c EXP
0x61d PUSH2 0xffff
0x620 DUP5
0x621 AND
0x622 MUL
0x623 OR
0x624 SWAP1
0x625 SSTORE
0x626 DUP2
0x627 PUSH1 0x1
0x629 PUSH1 0xa0
0x62b PUSH1 0x2
0x62d EXP
0x62e SUB
0x62f DUP2
0x630 AND
0x631 PUSH4 0x4d6a813a
0x636 PUSH1 0x40
0x638 MLOAD
0x639 DUP2
0x63a PUSH4 0xffffffff
0x63f AND
0x640 PUSH1 0xe0
0x642 PUSH1 0x2
0x644 EXP
0x645 MUL
0x646 DUP2
0x647 MSTORE
0x648 PUSH1 0x4
0x64a ADD
0x64b PUSH1 0x20
0x64d PUSH1 0x40
0x64f MLOAD
0x650 DUP1
0x651 DUP4
0x652 SUB
0x653 DUP2
0x654 PUSH1 0x0
0x656 DUP8
0x657 DUP1
0x658 EXTCODESIZE
0x659 ISZERO
0x65a ISZERO
0x65b PUSH2 0x663
0x65e JUMPI
---
0x5f9: JUMPDEST 
0x5fb: V576 = 0x1
0x5fe: V577 = S[0x1]
0x5ff: V578 = 0xffff0000000000000000000000000000000000000000
0x616: V579 = NOT 0xffff0000000000000000000000000000000000000000
0x617: V580 = AND 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff V577
0x618: V581 = 0xa0
0x61a: V582 = 0x2
0x61c: V583 = EXP 0x2 0xa0
0x61d: V584 = 0xffff
0x621: V585 = AND V194 0xffff
0x622: V586 = MUL V585 0x10000000000000000000000000000000000000000
0x623: V587 = OR V586 V580
0x625: S[0x1] = V587
0x627: V588 = 0x1
0x629: V589 = 0xa0
0x62b: V590 = 0x2
0x62d: V591 = EXP 0x2 0xa0
0x62e: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x630: V593 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x631: V594 = 0x4d6a813a
0x636: V595 = 0x40
0x638: V596 = M[0x40]
0x63a: V597 = 0xffffffff
0x63f: V598 = AND 0xffffffff 0x4d6a813a
0x640: V599 = 0xe0
0x642: V600 = 0x2
0x644: V601 = EXP 0x2 0xe0
0x645: V602 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4d6a813a
0x647: M[V596] = 0x4d6a813a00000000000000000000000000000000000000000000000000000000
0x648: V603 = 0x4
0x64a: V604 = ADD 0x4 V596
0x64b: V605 = 0x20
0x64d: V606 = 0x40
0x64f: V607 = M[0x40]
0x652: V608 = SUB V604 V607
0x654: V609 = 0x0
0x658: V610 = EXTCODESIZE V593
0x659: V611 = ISZERO V610
0x65a: V612 = ISZERO V611
0x65b: V613 = 0x663
0x65e: JUMPI 0x663 V612
---
Entry stack: [V13, 0xce, V190, V194, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2, V593, 0x4d6a813a, V604, 0x20, V607, V608, V607, 0x0, V593]
Exit stack: [V13, 0xce, V190, V194, V190, V593, 0x4d6a813a, V604, 0x20, V607, V608, V607, 0x0, V593]

================================

Block 0x65f
[0x65f:0x662]
---
Predecessors: [0x5f9]
Successors: []
---
0x65f PUSH1 0x0
0x661 DUP1
0x662 REVERT
---
0x65f: V614 = 0x0
0x662: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V190, V194, V190, V593, 0x4d6a813a, V604, 0x20, V607, V608, V607, 0x0, V593]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V190, V194, V190, V593, 0x4d6a813a, V604, 0x20, V607, V608, V607, 0x0, V593]

================================

Block 0x663
[0x663:0x66b]
---
Predecessors: [0x5f9]
Successors: [0x66c, 0x670]
---
0x663 JUMPDEST
0x664 GAS
0x665 CALL
0x666 ISZERO
0x667 ISZERO
0x668 PUSH2 0x670
0x66b JUMPI
---
0x663: JUMPDEST 
0x664: V615 = GAS
0x665: V616 = CALL V615 V593 0x0 V607 V608 V607 0x20
0x666: V617 = ISZERO V616
0x667: V618 = ISZERO V617
0x668: V619 = 0x670
0x66b: JUMPI 0x670 V618
---
Entry stack: [V13, 0xce, V190, V194, V190, V593, 0x4d6a813a, V604, 0x20, V607, V608, V607, 0x0, V593]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xce, V190, V194, V190, V593, 0x4d6a813a, V604]

================================

Block 0x66c
[0x66c:0x66f]
---
Predecessors: [0x663]
Successors: []
---
0x66c PUSH1 0x0
0x66e DUP1
0x66f REVERT
---
0x66c: V620 = 0x0
0x66f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V190, V194, V190, V593, 0x4d6a813a, V604]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V190, V194, V190, V593, 0x4d6a813a, V604]

================================

Block 0x670
[0x670:0x680]
---
Predecessors: [0x663]
Successors: [0x681, 0x685]
---
0x670 JUMPDEST
0x671 POP
0x672 POP
0x673 POP
0x674 PUSH1 0x40
0x676 MLOAD
0x677 DUP1
0x678 MLOAD
0x679 SWAP1
0x67a POP
0x67b ISZERO
0x67c ISZERO
0x67d PUSH2 0x685
0x680 JUMPI
---
0x670: JUMPDEST 
0x674: V621 = 0x40
0x676: V622 = M[0x40]
0x678: V623 = M[V622]
0x67b: V624 = ISZERO V623
0x67c: V625 = ISZERO V624
0x67d: V626 = 0x685
0x680: JUMPI 0x685 V625
---
Entry stack: [V13, 0xce, V190, V194, V190, V593, 0x4d6a813a, V604]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xce, V190, V194, V190]

================================

Block 0x681
[0x681:0x684]
---
Predecessors: [0x670]
Successors: []
---
0x681 PUSH1 0x0
0x683 DUP1
0x684 REVERT
---
0x681: V627 = 0x0
0x684: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V190, V194, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V190, V194, V190]

================================

Block 0x685
[0x685:0x6b5]
---
Predecessors: [0x670]
Successors: [0xce]
---
0x685 JUMPDEST
0x686 PUSH1 0x1
0x688 DUP1
0x689 SLOAD
0x68a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69f NOT
0x6a0 AND
0x6a1 PUSH1 0x1
0x6a3 PUSH1 0xa0
0x6a5 PUSH1 0x2
0x6a7 EXP
0x6a8 SUB
0x6a9 SWAP3
0x6aa SWAP1
0x6ab SWAP3
0x6ac AND
0x6ad SWAP2
0x6ae SWAP1
0x6af SWAP2
0x6b0 OR
0x6b1 SWAP1
0x6b2 SSTORE
0x6b3 POP
0x6b4 POP
0x6b5 JUMP
---
0x685: JUMPDEST 
0x686: V628 = 0x1
0x689: V629 = S[0x1]
0x68a: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0x69f: V631 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V632 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V629
0x6a1: V633 = 0x1
0x6a3: V634 = 0xa0
0x6a5: V635 = 0x2
0x6a7: V636 = EXP 0x2 0xa0
0x6a8: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ac: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x6b0: V639 = OR V638 V632
0x6b2: S[0x1] = V639
0x6b5: JUMP 0xce
---
Entry stack: [V13, 0xce, V190, V194, V190]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x6b6
[0x6b6:0x6c4]
---
Predecessors: [0x229]
Successors: [0x143]
---
0x6b6 JUMPDEST
0x6b7 PUSH1 0x1
0x6b9 SLOAD
0x6ba PUSH1 0x1
0x6bc PUSH1 0xa0
0x6be PUSH1 0x2
0x6c0 EXP
0x6c1 SUB
0x6c2 AND
0x6c3 DUP2
0x6c4 JUMP
---
0x6b6: JUMPDEST 
0x6b7: V640 = 0x1
0x6b9: V641 = S[0x1]
0x6ba: V642 = 0x1
0x6bc: V643 = 0xa0
0x6be: V644 = 0x2
0x6c0: V645 = EXP 0x2 0xa0
0x6c1: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c2: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x6c4: JUMP 0x143
---
Entry stack: [V13, 0x143]
Stack pops: 1
Stack additions: [S0, V647]
Exit stack: [V13, 0x143, V647]

================================

Block 0x6c5
[0x6c5:0x6db]
---
Predecessors: [0x23c]
Successors: [0x6dc, 0x6e0]
---
0x6c5 JUMPDEST
0x6c6 PUSH1 0x0
0x6c8 SLOAD
0x6c9 CALLER
0x6ca PUSH1 0x1
0x6cc PUSH1 0xa0
0x6ce PUSH1 0x2
0x6d0 EXP
0x6d1 SUB
0x6d2 SWAP1
0x6d3 DUP2
0x6d4 AND
0x6d5 SWAP2
0x6d6 AND
0x6d7 EQ
0x6d8 PUSH2 0x6e0
0x6db JUMPI
---
0x6c5: JUMPDEST 
0x6c6: V648 = 0x0
0x6c8: V649 = S[0x0]
0x6c9: V650 = CALLER
0x6ca: V651 = 0x1
0x6cc: V652 = 0xa0
0x6ce: V653 = 0x2
0x6d0: V654 = EXP 0x2 0xa0
0x6d1: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d4: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x6d6: V657 = AND V649 0xffffffffffffffffffffffffffffffffffffffff
0x6d7: V658 = EQ V657 V656
0x6d8: V659 = 0x6e0
0x6db: JUMPI 0x6e0 V658
---
Entry stack: [V13, 0xce, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V214]

================================

Block 0x6dc
[0x6dc:0x6df]
---
Predecessors: [0x6c5]
Successors: []
---
0x6dc PUSH1 0x0
0x6de DUP1
0x6df REVERT
---
0x6dc: V660 = 0x0
0x6df: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V214]

================================

Block 0x6e0
[0x6e0:0x6f0]
---
Predecessors: [0x6c5]
Successors: [0x6f1, 0x6f5]
---
0x6e0 JUMPDEST
0x6e1 PUSH1 0x1
0x6e3 PUSH1 0xa0
0x6e5 PUSH1 0x2
0x6e7 EXP
0x6e8 SUB
0x6e9 DUP2
0x6ea AND
0x6eb ISZERO
0x6ec ISZERO
0x6ed PUSH2 0x6f5
0x6f0 JUMPI
---
0x6e0: JUMPDEST 
0x6e1: V661 = 0x1
0x6e3: V662 = 0xa0
0x6e5: V663 = 0x2
0x6e7: V664 = EXP 0x2 0xa0
0x6e8: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ea: V666 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V667 = ISZERO V666
0x6ec: V668 = ISZERO V667
0x6ed: V669 = 0x6f5
0x6f0: JUMPI 0x6f5 V668
---
Entry stack: [V13, 0xce, V214]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xce, V214]

================================

Block 0x6f1
[0x6f1:0x6f4]
---
Predecessors: [0x6e0]
Successors: []
---
0x6f1 PUSH1 0x0
0x6f3 DUP1
0x6f4 REVERT
---
0x6f1: V670 = 0x0
0x6f4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xce, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xce, V214]

================================

Block 0x6f5
[0x6f5:0x75f]
---
Predecessors: [0x6e0]
Successors: [0xce]
---
0x6f5 JUMPDEST
0x6f6 PUSH1 0x0
0x6f8 SLOAD
0x6f9 PUSH1 0x1
0x6fb PUSH1 0xa0
0x6fd PUSH1 0x2
0x6ff EXP
0x700 SUB
0x701 DUP1
0x702 DUP4
0x703 AND
0x704 SWAP2
0x705 AND
0x706 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x727 PUSH1 0x40
0x729 MLOAD
0x72a PUSH1 0x40
0x72c MLOAD
0x72d DUP1
0x72e SWAP2
0x72f SUB
0x730 SWAP1
0x731 LOG3
0x732 PUSH1 0x0
0x734 DUP1
0x735 SLOAD
0x736 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74b NOT
0x74c AND
0x74d PUSH1 0x1
0x74f PUSH1 0xa0
0x751 PUSH1 0x2
0x753 EXP
0x754 SUB
0x755 SWAP3
0x756 SWAP1
0x757 SWAP3
0x758 AND
0x759 SWAP2
0x75a SWAP1
0x75b SWAP2
0x75c OR
0x75d SWAP1
0x75e SSTORE
0x75f JUMP
---
0x6f5: JUMPDEST 
0x6f6: V671 = 0x0
0x6f8: V672 = S[0x0]
0x6f9: V673 = 0x1
0x6fb: V674 = 0xa0
0x6fd: V675 = 0x2
0x6ff: V676 = EXP 0x2 0xa0
0x700: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x703: V678 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x705: V679 = AND V672 0xffffffffffffffffffffffffffffffffffffffff
0x706: V680 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x727: V681 = 0x40
0x729: V682 = M[0x40]
0x72a: V683 = 0x40
0x72c: V684 = M[0x40]
0x72f: V685 = SUB V682 V684
0x731: LOG V684 V685 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V679 V678
0x732: V686 = 0x0
0x735: V687 = S[0x0]
0x736: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0x74b: V689 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x74c: V690 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V687
0x74d: V691 = 0x1
0x74f: V692 = 0xa0
0x751: V693 = 0x2
0x753: V694 = EXP 0x2 0xa0
0x754: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x758: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x75c: V697 = OR V696 V690
0x75e: S[0x0] = V697
0x75f: JUMP 0xce
---
Entry stack: [V13, 0xce, V214]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x760
[0x760:0x78b]
---
Predecessors: []
Successors: []
---
0x760 STOP
0x761 LOG1
0x762 PUSH6 0x627a7a723058
0x769 SHA3
0x76a MISSING 0xe6
0x76b MISSING 0xe8
0x76c MISSING 0xba
0x76d MISSING 0x27
0x76e MISSING 0xee
0x76f MISSING 0xc6
0x770 MISSING 0xb9
0x771 MISSING 0xd8
0x772 MISSING 0xb8
0x773 MISSING 0xe3
0x774 JUMP
0x775 CALL
0x776 MISSING 0xd4
0x777 SWAP4
0x778 SIGNEXTEND
0x779 ADDMOD
0x77a EQ
0x77b MISSING 0xce
0x77c CALLDATALOAD
0x77d SELFDESTRUCT
0x77e TIMESTAMP
0x77f SWAP4
0x780 MISSING 0xd4
0x781 MISSING 0xd3
0x782 DUP12
0x783 RETURN
0x784 MLOAD
0x785 PUSH3 0xc46a47
0x789 MISSING 0xb8
0x78a STOP
0x78b MISSING 0x29
---
0x760: STOP 
0x761: LOG S0 S1 S2
0x762: V698 = 0x627a7a723058
0x769: V699 = SHA3 0x627a7a723058 S3
0x76a: MISSING 0xe6
0x76b: MISSING 0xe8
0x76c: MISSING 0xba
0x76d: MISSING 0x27
0x76e: MISSING 0xee
0x76f: MISSING 0xc6
0x770: MISSING 0xb9
0x771: MISSING 0xd8
0x772: MISSING 0xb8
0x773: MISSING 0xe3
0x774: JUMP S0
0x775: V700 = CALL S0 S1 S2 S3 S4 S5 S6
0x776: MISSING 0xd4
0x778: V701 = SIGNEXTEND S4 S1
0x779: V702 = ADDMOD V701 S2 S3
0x77a: V703 = EQ V702 S0
0x77b: MISSING 0xce
0x77c: V704 = CALLDATALOAD S0
0x77d: SELFDESTRUCT V704
0x77e: V705 = TIMESTAMP
0x780: MISSING 0xd4
0x781: MISSING 0xd3
0x783: RETURN S11 S0
0x784: V706 = M[S0]
0x785: V707 = 0xc46a47
0x789: MISSING 0xb8
0x78a: STOP 
0x78b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V699, V700, V703, S3, S0, S1, S2, V705, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0xc46a47, V706]
Exit stack: []

================================

Function 0:
Public function signature: 0x11952369
Entry block: 0xbb
Exit block: 0xce
Body: 0xbb, 0xc2, 0xc6, 0xce, 0x250, 0x267, 0x26b, 0x273

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xd0
Exit block: 0xd7
Body: 0xce, 0xd0, 0xd7, 0xdb

Function 2:
Public function signature: 0x3f4ba83a
Entry block: 0xe3
Exit block: 0xce
Body: 0xce, 0xe3, 0xea, 0xee, 0x2f7, 0x30e, 0x312, 0x326, 0x32a

Function 3:
Public function signature: 0x5c975abb
Entry block: 0xf6
Exit block: 0x109
Body: 0xf6, 0xfd, 0x101, 0x109, 0x376

Function 4:
Public function signature: 0x8456cb59
Entry block: 0x11d
Exit block: 0xce
Body: 0xce, 0x11d, 0x124, 0x128, 0x386, 0x39d, 0x3a1, 0x3b4, 0x3b8

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x130
Exit block: 0x143
Body: 0x130, 0x137, 0x13b, 0x143, 0x40a

Function 6:
Public function signature: 0x8e005553
Entry block: 0x15f
Exit block: 0xce
Body: 0xce, 0x15f, 0x166, 0x16a, 0x419, 0x428, 0x42c, 0x443, 0x447

Function 7:
Public function signature: 0x94a89233
Entry block: 0x179
Exit block: 0x109
Body: 0x109, 0x179, 0x180, 0x184, 0x47a

Function 8:
Public function signature: 0x9652713e
Entry block: 0x18c
Exit block: 0xce
Body: 0xce, 0x18c, 0x47f, 0x499, 0x49d, 0x4b0, 0x4b4, 0x4fe, 0x502, 0x50b, 0x50f, 0x526, 0x52a, 0x583, 0x587, 0x590, 0x594

Function 9:
Public function signature: 0xa055d455
Entry block: 0x1ad
Exit block: 0xb6
Body: 0xb6, 0x1ad, 0x59d, 0x5b4

Function 10:
Public function signature: 0xd5b2a01a
Entry block: 0x1ce
Exit block: 0x1e1
Body: 0x1ce, 0x1d5, 0x1d9, 0x1e1, 0x5b8

Function 11:
Public function signature: 0xe410a0c6
Entry block: 0x1f8
Exit block: 0xce
Body: 0xce, 0x1f8, 0x1ff, 0x203, 0x5c9, 0x5da, 0x5de, 0x5f5, 0x5f9, 0x65f, 0x663, 0x66c, 0x670, 0x681, 0x685

Function 12:
Public function signature: 0xe80db5db
Entry block: 0x21e
Exit block: 0x143
Body: 0x143, 0x21e, 0x225, 0x229, 0x6b6

Function 13:
Public function signature: 0xf2fde38b
Entry block: 0x231
Exit block: 0xce
Body: 0xce, 0x231, 0x238, 0x23c, 0x6c5, 0x6dc, 0x6e0, 0x6f1, 0x6f5

Function 14:
Public fallback function
Entry block: 0xb6
Exit block: 0xb6
Body: 0xb6

