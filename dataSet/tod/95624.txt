Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xdb]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xdb
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xdb
0xc: JUMPI 0xdb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x1c5]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x1c5
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x1c5
0x40: JUMPI 0x1c5 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x255]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x255
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x255
0x4b: JUMPI 0x255 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x2ba]
---
0x4c DUP1
0x4d PUSH4 0xda86f7f
0x52 EQ
0x53 PUSH2 0x2ba
0x56 JUMPI
---
0x4d: V18 = 0xda86f7f
0x52: V19 = EQ 0xda86f7f V11
0x53: V20 = 0x2ba
0x56: JUMPI 0x2ba V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x2e9]
---
0x57 DUP1
0x58 PUSH4 0x18160ddd
0x5d EQ
0x5e PUSH2 0x2e9
0x61 JUMPI
---
0x58: V21 = 0x18160ddd
0x5d: V22 = EQ 0x18160ddd V11
0x5e: V23 = 0x2e9
0x61: JUMPI 0x2e9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x314]
---
0x62 DUP1
0x63 PUSH4 0x23b872dd
0x68 EQ
0x69 PUSH2 0x314
0x6c JUMPI
---
0x63: V24 = 0x23b872dd
0x68: V25 = EQ 0x23b872dd V11
0x69: V26 = 0x314
0x6c: JUMPI 0x314 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x399]
---
0x6d DUP1
0x6e PUSH4 0x313ce567
0x73 EQ
0x74 PUSH2 0x399
0x77 JUMPI
---
0x6e: V27 = 0x313ce567
0x73: V28 = EQ 0x313ce567 V11
0x74: V29 = 0x399
0x77: JUMPI 0x399 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x3ca]
---
0x78 DUP1
0x79 PUSH4 0x57376198
0x7e EQ
0x7f PUSH2 0x3ca
0x82 JUMPI
---
0x79: V30 = 0x57376198
0x7e: V31 = EQ 0x57376198 V11
0x7f: V32 = 0x3ca
0x82: JUMPI 0x3ca V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x42f]
---
0x83 DUP1
0x84 PUSH4 0x70a08231
0x89 EQ
0x8a PUSH2 0x42f
0x8d JUMPI
---
0x84: V33 = 0x70a08231
0x89: V34 = EQ 0x70a08231 V11
0x8a: V35 = 0x42f
0x8d: JUMPI 0x42f V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x486]
---
0x8e DUP1
0x8f PUSH4 0x7ecfb675
0x94 EQ
0x95 PUSH2 0x486
0x98 JUMPI
---
0x8f: V36 = 0x7ecfb675
0x94: V37 = EQ 0x7ecfb675 V11
0x95: V38 = 0x486
0x98: JUMPI 0x486 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x4b1]
---
0x99 DUP1
0x9a PUSH4 0x8da5cb5b
0x9f EQ
0xa0 PUSH2 0x4b1
0xa3 JUMPI
---
0x9a: V39 = 0x8da5cb5b
0x9f: V40 = EQ 0x8da5cb5b V11
0xa0: V41 = 0x4b1
0xa3: JUMPI 0x4b1 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x508]
---
0xa4 DUP1
0xa5 PUSH4 0x95d89b41
0xaa EQ
0xab PUSH2 0x508
0xae JUMPI
---
0xa5: V42 = 0x95d89b41
0xaa: V43 = EQ 0x95d89b41 V11
0xab: V44 = 0x508
0xae: JUMPI 0x508 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x598]
---
0xaf DUP1
0xb0 PUSH4 0xa9059cbb
0xb5 EQ
0xb6 PUSH2 0x598
0xb9 JUMPI
---
0xb0: V45 = 0xa9059cbb
0xb5: V46 = EQ 0xa9059cbb V11
0xb6: V47 = 0x598
0xb9: JUMPI 0x598 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x5fd]
---
0xba DUP1
0xbb PUSH4 0xd8cb4aa3
0xc0 EQ
0xc1 PUSH2 0x5fd
0xc4 JUMPI
---
0xbb: V48 = 0xd8cb4aa3
0xc0: V49 = EQ 0xd8cb4aa3 V11
0xc1: V50 = 0x5fd
0xc4: JUMPI 0x5fd V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x654]
---
0xc5 DUP1
0xc6 PUSH4 0xdd62ed3e
0xcb EQ
0xcc PUSH2 0x654
0xcf JUMPI
---
0xc6: V51 = 0xdd62ed3e
0xcb: V52 = EQ 0xdd62ed3e V11
0xcc: V53 = 0x654
0xcf: JUMPI 0x654 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0xc5]
Successors: [0xdb, 0x6cb]
---
0xd0 DUP1
0xd1 PUSH4 0xfdbb9fdb
0xd6 EQ
0xd7 PUSH2 0x6cb
0xda JUMPI
---
0xd1: V54 = 0xfdbb9fdb
0xd6: V55 = EQ 0xfdbb9fdb V11
0xd7: V56 = 0x6cb
0xda: JUMPI 0x6cb V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0x150]
---
Predecessors: [0x0, 0xd0]
Successors: [0x151, 0x15a]
---
0xdb JUMPDEST
0xdc PUSH1 0x6
0xde PUSH1 0x0
0xe0 SWAP1
0xe1 SLOAD
0xe2 SWAP1
0xe3 PUSH2 0x100
0xe6 EXP
0xe7 SWAP1
0xe8 DIV
0xe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe AND
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 PUSH2 0x8fc
0x118 ADDRESS
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f BALANCE
0x130 SWAP1
0x131 DUP2
0x132 ISZERO
0x133 MUL
0x134 SWAP1
0x135 PUSH1 0x40
0x137 MLOAD
0x138 PUSH1 0x0
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e DUP4
0x13f SUB
0x140 DUP2
0x141 DUP6
0x142 DUP9
0x143 DUP9
0x144 CALL
0x145 SWAP4
0x146 POP
0x147 POP
0x148 POP
0x149 POP
0x14a ISZERO
0x14b DUP1
0x14c ISZERO
0x14d PUSH2 0x15a
0x150 JUMPI
---
0xdb: JUMPDEST 
0xdc: V57 = 0x6
0xde: V58 = 0x0
0xe1: V59 = S[0x6]
0xe3: V60 = 0x100
0xe6: V61 = EXP 0x100 0x0
0xe8: V62 = DIV V59 0x1
0xe9: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xff: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x115: V67 = 0x8fc
0x118: V68 = ADDRESS
0x119: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x12f: V71 = BALANCE V70
0x132: V72 = ISZERO V71
0x133: V73 = MUL V72 0x8fc
0x135: V74 = 0x40
0x137: V75 = M[0x40]
0x138: V76 = 0x0
0x13a: V77 = 0x40
0x13c: V78 = M[0x40]
0x13f: V79 = SUB V75 V78
0x144: V80 = CALL V73 V66 V71 V78 V79 V78 0x0
0x14a: V81 = ISZERO V80
0x14c: V82 = ISZERO V81
0x14d: V83 = 0x15a
0x150: JUMPI 0x15a V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x151
[0x151:0x159]
---
Predecessors: [0xdb]
Successors: []
---
0x151 RETURNDATASIZE
0x152 PUSH1 0x0
0x154 DUP1
0x155 RETURNDATACOPY
0x156 RETURNDATASIZE
0x157 PUSH1 0x0
0x159 REVERT
---
0x151: V84 = RETURNDATASIZE
0x152: V85 = 0x0
0x155: RETURNDATACOPY 0x0 0x0 V84
0x156: V86 = RETURNDATASIZE
0x157: V87 = 0x0
0x159: REVERT 0x0 V86
---
Entry stack: [V11, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V81]

================================

Block 0x15a
[0x15a:0x1c4]
---
Predecessors: [0xdb]
Successors: []
---
0x15a JUMPDEST
0x15b POP
0x15c PUSH32 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 DUP1
0x182 PUSH1 0x20
0x184 ADD
0x185 DUP3
0x186 DUP2
0x187 SUB
0x188 DUP3
0x189 MSTORE
0x18a PUSH1 0x19
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x20
0x190 ADD
0x191 DUP1
0x192 PUSH32 0x5468616e6b7320666f7220796f757220646f6e6174696f6e2e00000000000000
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 POP
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 SWAP2
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 SWAP2
0x1c1 SUB
0x1c2 SWAP1
0x1c3 LOG1
0x1c4 STOP
---
0x15a: JUMPDEST 
0x15c: V88 = 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x17d: V89 = 0x40
0x17f: V90 = M[0x40]
0x182: V91 = 0x20
0x184: V92 = ADD 0x20 V90
0x187: V93 = SUB V92 V90
0x189: M[V90] = V93
0x18a: V94 = 0x19
0x18d: M[V92] = 0x19
0x18e: V95 = 0x20
0x190: V96 = ADD 0x20 V92
0x192: V97 = 0x5468616e6b7320666f7220796f757220646f6e6174696f6e2e00000000000000
0x1b4: M[V96] = 0x5468616e6b7320666f7220796f757220646f6e6174696f6e2e00000000000000
0x1b6: V98 = 0x20
0x1b8: V99 = ADD 0x20 V96
0x1bc: V100 = 0x40
0x1be: V101 = M[0x40]
0x1c1: V102 = SUB V99 V101
0x1c3: LOG V101 V102 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x1c4: STOP 
---
Entry stack: [V11, V81]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c5
[0x1c5:0x1cc]
---
Predecessors: [0xd]
Successors: [0x1cd, 0x1d1]
---
0x1c5 JUMPDEST
0x1c6 CALLVALUE
0x1c7 DUP1
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V103 = CALLVALUE
0x1c8: V104 = ISZERO V103
0x1c9: V105 = 0x1d1
0x1cc: JUMPI 0x1d1 V104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V103]
Exit stack: [V11, V103]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c5]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V106 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V11, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V103]

================================

Block 0x1d1
[0x1d1:0x1d9]
---
Predecessors: [0x1c5]
Successors: [0x79a]
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 PUSH2 0x1da
0x1d6 PUSH2 0x79a
0x1d9 JUMP
---
0x1d1: JUMPDEST 
0x1d3: V107 = 0x1da
0x1d6: V108 = 0x79a
0x1d9: JUMP 0x79a
---
Entry stack: [V11, V103]
Stack pops: 1
Stack additions: [0x1da]
Exit stack: [V11, 0x1da]

================================

Block 0x1da
[0x1da:0x1fe]
---
Predecessors: [0x830]
Successors: [0x1ff]
---
0x1da JUMPDEST
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de DUP1
0x1df DUP1
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 DUP3
0x1e4 DUP2
0x1e5 SUB
0x1e6 DUP3
0x1e7 MSTORE
0x1e8 DUP4
0x1e9 DUP2
0x1ea DUP2
0x1eb MLOAD
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP2
0x1f2 POP
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 SWAP1
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa DUP1
0x1fb DUP4
0x1fc DUP4
0x1fd PUSH1 0x0
---
0x1da: JUMPDEST 
0x1db: V109 = 0x40
0x1dd: V110 = M[0x40]
0x1e0: V111 = 0x20
0x1e2: V112 = ADD 0x20 V110
0x1e5: V113 = SUB V112 V110
0x1e7: M[V110] = V113
0x1eb: V114 = M[V549]
0x1ed: M[V112] = V114
0x1ee: V115 = 0x20
0x1f0: V116 = ADD 0x20 V112
0x1f4: V117 = M[V549]
0x1f6: V118 = 0x20
0x1f8: V119 = ADD 0x20 V549
0x1fd: V120 = 0x0
---
Entry stack: [V11, 0x1da, V549]
Stack pops: 1
Stack additions: [S0, V110, V110, V116, V119, V117, V117, V116, V119, 0x0]
Exit stack: [V11, 0x1da, V549, V110, V110, V116, V119, V117, V117, V116, V119, 0x0]

================================

Block 0x1ff
[0x1ff:0x207]
---
Predecessors: [0x1da, 0x208]
Successors: [0x208, 0x21a]
---
0x1ff JUMPDEST
0x200 DUP4
0x201 DUP2
0x202 LT
0x203 ISZERO
0x204 PUSH2 0x21a
0x207 JUMPI
---
0x1ff: JUMPDEST 
0x202: V121 = LT S0 V117
0x203: V122 = ISZERO V121
0x204: V123 = 0x21a
0x207: JUMPI 0x21a V122
---
Entry stack: [V11, 0x1da, V549, V110, V110, V116, V119, V117, V117, V116, V119, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1da, V549, V110, V110, V116, V119, V117, V117, V116, V119, S0]

================================

Block 0x208
[0x208:0x219]
---
Predecessors: [0x1ff]
Successors: [0x1ff]
---
0x208 DUP1
0x209 DUP3
0x20a ADD
0x20b MLOAD
0x20c DUP2
0x20d DUP5
0x20e ADD
0x20f MSTORE
0x210 PUSH1 0x20
0x212 DUP2
0x213 ADD
0x214 SWAP1
0x215 POP
0x216 PUSH2 0x1ff
0x219 JUMP
---
0x20a: V124 = ADD V119 S0
0x20b: V125 = M[V124]
0x20e: V126 = ADD V116 S0
0x20f: M[V126] = V125
0x210: V127 = 0x20
0x213: V128 = ADD S0 0x20
0x216: V129 = 0x1ff
0x219: JUMP 0x1ff
---
Entry stack: [V11, 0x1da, V549, V110, V110, V116, V119, V117, V117, V116, V119, S0]
Stack pops: 3
Stack additions: [S2, S1, V128]
Exit stack: [V11, 0x1da, V549, V110, V110, V116, V119, V117, V117, V116, V119, V128]

================================

Block 0x21a
[0x21a:0x22d]
---
Predecessors: [0x1ff]
Successors: [0x22e, 0x247]
---
0x21a JUMPDEST
0x21b POP
0x21c POP
0x21d POP
0x21e POP
0x21f SWAP1
0x220 POP
0x221 SWAP1
0x222 DUP2
0x223 ADD
0x224 SWAP1
0x225 PUSH1 0x1f
0x227 AND
0x228 DUP1
0x229 ISZERO
0x22a PUSH2 0x247
0x22d JUMPI
---
0x21a: JUMPDEST 
0x223: V130 = ADD V117 V116
0x225: V131 = 0x1f
0x227: V132 = AND 0x1f V117
0x229: V133 = ISZERO V132
0x22a: V134 = 0x247
0x22d: JUMPI 0x247 V133
---
Entry stack: [V11, 0x1da, V549, V110, V110, V116, V119, V117, V117, V116, V119, S0]
Stack pops: 7
Stack additions: [V130, V132]
Exit stack: [V11, 0x1da, V549, V110, V110, V130, V132]

================================

Block 0x22e
[0x22e:0x246]
---
Predecessors: [0x21a]
Successors: [0x247]
---
0x22e DUP1
0x22f DUP3
0x230 SUB
0x231 DUP1
0x232 MLOAD
0x233 PUSH1 0x1
0x235 DUP4
0x236 PUSH1 0x20
0x238 SUB
0x239 PUSH2 0x100
0x23c EXP
0x23d SUB
0x23e NOT
0x23f AND
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x20
0x244 ADD
0x245 SWAP2
0x246 POP
---
0x230: V135 = SUB V130 V132
0x232: V136 = M[V135]
0x233: V137 = 0x1
0x236: V138 = 0x20
0x238: V139 = SUB 0x20 V132
0x239: V140 = 0x100
0x23c: V141 = EXP 0x100 V139
0x23d: V142 = SUB V141 0x1
0x23e: V143 = NOT V142
0x23f: V144 = AND V143 V136
0x241: M[V135] = V144
0x242: V145 = 0x20
0x244: V146 = ADD 0x20 V135
---
Entry stack: [V11, 0x1da, V549, V110, V110, V130, V132]
Stack pops: 2
Stack additions: [V146, S0]
Exit stack: [V11, 0x1da, V549, V110, V110, V146, V132]

================================

Block 0x247
[0x247:0x254]
---
Predecessors: [0x21a, 0x22e]
Successors: []
---
0x247 JUMPDEST
0x248 POP
0x249 SWAP3
0x24a POP
0x24b POP
0x24c POP
0x24d PUSH1 0x40
0x24f MLOAD
0x250 DUP1
0x251 SWAP2
0x252 SUB
0x253 SWAP1
0x254 RETURN
---
0x247: JUMPDEST 
0x24d: V147 = 0x40
0x24f: V148 = M[0x40]
0x252: V149 = SUB S1 V148
0x254: RETURN V148 V149
---
Entry stack: [V11, 0x1da, V549, V110, V110, S1, V132]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x1da]

================================

Block 0x255
[0x255:0x25c]
---
Predecessors: [0x41]
Successors: [0x25d, 0x261]
---
0x255 JUMPDEST
0x256 CALLVALUE
0x257 DUP1
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x255: JUMPDEST 
0x256: V150 = CALLVALUE
0x258: V151 = ISZERO V150
0x259: V152 = 0x261
0x25c: JUMPI 0x261 V151
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V150]
Exit stack: [V11, V150]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x255]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V153 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V11, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V150]

================================

Block 0x261
[0x261:0x29f]
---
Predecessors: [0x255]
Successors: [0x838]
---
0x261 JUMPDEST
0x262 POP
0x263 PUSH2 0x2a0
0x266 PUSH1 0x4
0x268 DUP1
0x269 CALLDATASIZE
0x26a SUB
0x26b DUP2
0x26c ADD
0x26d SWAP1
0x26e DUP1
0x26f DUP1
0x270 CALLDATALOAD
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 SWAP1
0x288 PUSH1 0x20
0x28a ADD
0x28b SWAP1
0x28c SWAP3
0x28d SWAP2
0x28e SWAP1
0x28f DUP1
0x290 CALLDATALOAD
0x291 SWAP1
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 SWAP3
0x297 SWAP2
0x298 SWAP1
0x299 POP
0x29a POP
0x29b POP
0x29c PUSH2 0x838
0x29f JUMP
---
0x261: JUMPDEST 
0x263: V154 = 0x2a0
0x266: V155 = 0x4
0x269: V156 = CALLDATASIZE
0x26a: V157 = SUB V156 0x4
0x26c: V158 = ADD 0x4 V157
0x270: V159 = CALLDATALOAD 0x4
0x271: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x288: V162 = 0x20
0x28a: V163 = ADD 0x20 0x4
0x290: V164 = CALLDATALOAD 0x24
0x292: V165 = 0x20
0x294: V166 = ADD 0x20 0x24
0x29c: V167 = 0x838
0x29f: JUMP 0x838
---
Entry stack: [V11, V150]
Stack pops: 1
Stack additions: [0x2a0, V161, V164]
Exit stack: [V11, 0x2a0, V161, V164]

================================

Block 0x2a0
[0x2a0:0x2b9]
---
Predecessors: [0x838]
Successors: []
---
0x2a0 JUMPDEST
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 DUP1
0x2a5 DUP3
0x2a6 ISZERO
0x2a7 ISZERO
0x2a8 ISZERO
0x2a9 ISZERO
0x2aa DUP2
0x2ab MSTORE
0x2ac PUSH1 0x20
0x2ae ADD
0x2af SWAP2
0x2b0 POP
0x2b1 POP
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 SWAP2
0x2b7 SUB
0x2b8 SWAP1
0x2b9 RETURN
---
0x2a0: JUMPDEST 
0x2a1: V168 = 0x40
0x2a3: V169 = M[0x40]
0x2a6: V170 = ISZERO 0x1
0x2a7: V171 = ISZERO 0x0
0x2a8: V172 = ISZERO 0x1
0x2a9: V173 = ISZERO 0x0
0x2ab: M[V169] = 0x1
0x2ac: V174 = 0x20
0x2ae: V175 = ADD 0x20 V169
0x2b2: V176 = 0x40
0x2b4: V177 = M[0x40]
0x2b7: V178 = SUB V175 V177
0x2b9: RETURN V177 V178
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ba
[0x2ba:0x2c1]
---
Predecessors: [0x4c]
Successors: [0x2c2, 0x2c6]
---
0x2ba JUMPDEST
0x2bb CALLVALUE
0x2bc DUP1
0x2bd ISZERO
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V179 = CALLVALUE
0x2bd: V180 = ISZERO V179
0x2be: V181 = 0x2c6
0x2c1: JUMPI 0x2c6 V180
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V11, V179]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2ba]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V182 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V11, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V179]

================================

Block 0x2c6
[0x2c6:0x2ce]
---
Predecessors: [0x2ba]
Successors: [0x844]
---
0x2c6 JUMPDEST
0x2c7 POP
0x2c8 PUSH2 0x2cf
0x2cb PUSH2 0x844
0x2ce JUMP
---
0x2c6: JUMPDEST 
0x2c8: V183 = 0x2cf
0x2cb: V184 = 0x844
0x2ce: JUMP 0x844
---
Entry stack: [V11, V179]
Stack pops: 1
Stack additions: [0x2cf]
Exit stack: [V11, 0x2cf]

================================

Block 0x2cf
[0x2cf:0x2e8]
---
Predecessors: [0x844]
Successors: []
---
0x2cf JUMPDEST
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 DUP1
0x2d4 DUP3
0x2d5 ISZERO
0x2d6 ISZERO
0x2d7 ISZERO
0x2d8 ISZERO
0x2d9 DUP2
0x2da MSTORE
0x2db PUSH1 0x20
0x2dd ADD
0x2de SWAP2
0x2df POP
0x2e0 POP
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP1
0x2e5 SWAP2
0x2e6 SUB
0x2e7 SWAP1
0x2e8 RETURN
---
0x2cf: JUMPDEST 
0x2d0: V185 = 0x40
0x2d2: V186 = M[0x40]
0x2d5: V187 = ISZERO V602
0x2d6: V188 = ISZERO V187
0x2d7: V189 = ISZERO V188
0x2d8: V190 = ISZERO V189
0x2da: M[V186] = V190
0x2db: V191 = 0x20
0x2dd: V192 = ADD 0x20 V186
0x2e1: V193 = 0x40
0x2e3: V194 = M[0x40]
0x2e6: V195 = SUB V192 V194
0x2e8: RETURN V194 V195
---
Entry stack: [V11, 0x2cf, V602]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2cf]

================================

Block 0x2e9
[0x2e9:0x2f0]
---
Predecessors: [0x57]
Successors: [0x2f1, 0x2f5]
---
0x2e9 JUMPDEST
0x2ea CALLVALUE
0x2eb DUP1
0x2ec ISZERO
0x2ed PUSH2 0x2f5
0x2f0 JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V196 = CALLVALUE
0x2ec: V197 = ISZERO V196
0x2ed: V198 = 0x2f5
0x2f0: JUMPI 0x2f5 V197
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V196]
Exit stack: [V11, V196]

================================

Block 0x2f1
[0x2f1:0x2f4]
---
Predecessors: [0x2e9]
Successors: []
---
0x2f1 PUSH1 0x0
0x2f3 DUP1
0x2f4 REVERT
---
0x2f1: V199 = 0x0
0x2f4: REVERT 0x0 0x0
---
Entry stack: [V11, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V196]

================================

Block 0x2f5
[0x2f5:0x2fd]
---
Predecessors: [0x2e9]
Successors: [0x857]
---
0x2f5 JUMPDEST
0x2f6 POP
0x2f7 PUSH2 0x2fe
0x2fa PUSH2 0x857
0x2fd JUMP
---
0x2f5: JUMPDEST 
0x2f7: V200 = 0x2fe
0x2fa: V201 = 0x857
0x2fd: JUMP 0x857
---
Entry stack: [V11, V196]
Stack pops: 1
Stack additions: [0x2fe]
Exit stack: [V11, 0x2fe]

================================

Block 0x2fe
[0x2fe:0x313]
---
Predecessors: [0x857]
Successors: []
---
0x2fe JUMPDEST
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 DUP1
0x303 DUP3
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x20
0x308 ADD
0x309 SWAP2
0x30a POP
0x30b POP
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP1
0x310 SWAP2
0x311 SUB
0x312 SWAP1
0x313 RETURN
---
0x2fe: JUMPDEST 
0x2ff: V202 = 0x40
0x301: V203 = M[0x40]
0x305: M[V203] = V604
0x306: V204 = 0x20
0x308: V205 = ADD 0x20 V203
0x30c: V206 = 0x40
0x30e: V207 = M[0x40]
0x311: V208 = SUB V205 V207
0x313: RETURN V207 V208
---
Entry stack: [V11, 0x2fe, V604]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2fe]

================================

Block 0x314
[0x314:0x31b]
---
Predecessors: [0x62]
Successors: [0x31c, 0x320]
---
0x314 JUMPDEST
0x315 CALLVALUE
0x316 DUP1
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x314: JUMPDEST 
0x315: V209 = CALLVALUE
0x317: V210 = ISZERO V209
0x318: V211 = 0x320
0x31b: JUMPI 0x320 V210
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V11, V209]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x314]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V212 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V11, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V209]

================================

Block 0x320
[0x320:0x37e]
---
Predecessors: [0x314]
Successors: [0x85d]
---
0x320 JUMPDEST
0x321 POP
0x322 PUSH2 0x37f
0x325 PUSH1 0x4
0x327 DUP1
0x328 CALLDATASIZE
0x329 SUB
0x32a DUP2
0x32b ADD
0x32c SWAP1
0x32d DUP1
0x32e DUP1
0x32f CALLDATALOAD
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 AND
0x346 SWAP1
0x347 PUSH1 0x20
0x349 ADD
0x34a SWAP1
0x34b SWAP3
0x34c SWAP2
0x34d SWAP1
0x34e DUP1
0x34f CALLDATALOAD
0x350 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x365 AND
0x366 SWAP1
0x367 PUSH1 0x20
0x369 ADD
0x36a SWAP1
0x36b SWAP3
0x36c SWAP2
0x36d SWAP1
0x36e DUP1
0x36f CALLDATALOAD
0x370 SWAP1
0x371 PUSH1 0x20
0x373 ADD
0x374 SWAP1
0x375 SWAP3
0x376 SWAP2
0x377 SWAP1
0x378 POP
0x379 POP
0x37a POP
0x37b PUSH2 0x85d
0x37e JUMP
---
0x320: JUMPDEST 
0x322: V213 = 0x37f
0x325: V214 = 0x4
0x328: V215 = CALLDATASIZE
0x329: V216 = SUB V215 0x4
0x32b: V217 = ADD 0x4 V216
0x32f: V218 = CALLDATALOAD 0x4
0x330: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x347: V221 = 0x20
0x349: V222 = ADD 0x20 0x4
0x34f: V223 = CALLDATALOAD 0x24
0x350: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x365: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x367: V226 = 0x20
0x369: V227 = ADD 0x20 0x24
0x36f: V228 = CALLDATALOAD 0x44
0x371: V229 = 0x20
0x373: V230 = ADD 0x20 0x44
0x37b: V231 = 0x85d
0x37e: JUMP 0x85d
---
Entry stack: [V11, V209]
Stack pops: 1
Stack additions: [0x37f, V220, V225, V228]
Exit stack: [V11, 0x37f, V220, V225, V228]

================================

Block 0x37f
[0x37f:0x398]
---
Predecessors: [0x85d]
Successors: []
---
0x37f JUMPDEST
0x380 PUSH1 0x40
0x382 MLOAD
0x383 DUP1
0x384 DUP3
0x385 ISZERO
0x386 ISZERO
0x387 ISZERO
0x388 ISZERO
0x389 DUP2
0x38a MSTORE
0x38b PUSH1 0x20
0x38d ADD
0x38e SWAP2
0x38f POP
0x390 POP
0x391 PUSH1 0x40
0x393 MLOAD
0x394 DUP1
0x395 SWAP2
0x396 SUB
0x397 SWAP1
0x398 RETURN
---
0x37f: JUMPDEST 
0x380: V232 = 0x40
0x382: V233 = M[0x40]
0x385: V234 = ISZERO 0x1
0x386: V235 = ISZERO 0x0
0x387: V236 = ISZERO 0x1
0x388: V237 = ISZERO 0x0
0x38a: M[V233] = 0x1
0x38b: V238 = 0x20
0x38d: V239 = ADD 0x20 V233
0x391: V240 = 0x40
0x393: V241 = M[0x40]
0x396: V242 = SUB V239 V241
0x398: RETURN V241 V242
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x399
[0x399:0x3a0]
---
Predecessors: [0x6d]
Successors: [0x3a1, 0x3a5]
---
0x399 JUMPDEST
0x39a CALLVALUE
0x39b DUP1
0x39c ISZERO
0x39d PUSH2 0x3a5
0x3a0 JUMPI
---
0x399: JUMPDEST 
0x39a: V243 = CALLVALUE
0x39c: V244 = ISZERO V243
0x39d: V245 = 0x3a5
0x3a0: JUMPI 0x3a5 V244
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V243]
Exit stack: [V11, V243]

================================

Block 0x3a1
[0x3a1:0x3a4]
---
Predecessors: [0x399]
Successors: []
---
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 REVERT
---
0x3a1: V246 = 0x0
0x3a4: REVERT 0x0 0x0
---
Entry stack: [V11, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V243]

================================

Block 0x3a5
[0x3a5:0x3ad]
---
Predecessors: [0x399]
Successors: [0x9c4]
---
0x3a5 JUMPDEST
0x3a6 POP
0x3a7 PUSH2 0x3ae
0x3aa PUSH2 0x9c4
0x3ad JUMP
---
0x3a5: JUMPDEST 
0x3a7: V247 = 0x3ae
0x3aa: V248 = 0x9c4
0x3ad: JUMP 0x9c4
---
Entry stack: [V11, V243]
Stack pops: 1
Stack additions: [0x3ae]
Exit stack: [V11, 0x3ae]

================================

Block 0x3ae
[0x3ae:0x3c9]
---
Predecessors: [0x9c4]
Successors: []
---
0x3ae JUMPDEST
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP1
0x3b3 DUP3
0x3b4 PUSH1 0xff
0x3b6 AND
0x3b7 PUSH1 0xff
0x3b9 AND
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP2
0x3c0 POP
0x3c1 POP
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 DUP1
0x3c6 SWAP2
0x3c7 SUB
0x3c8 SWAP1
0x3c9 RETURN
---
0x3ae: JUMPDEST 
0x3af: V249 = 0x40
0x3b1: V250 = M[0x40]
0x3b4: V251 = 0xff
0x3b6: V252 = AND 0xff V671
0x3b7: V253 = 0xff
0x3b9: V254 = AND 0xff V252
0x3bb: M[V250] = V254
0x3bc: V255 = 0x20
0x3be: V256 = ADD 0x20 V250
0x3c2: V257 = 0x40
0x3c4: V258 = M[0x40]
0x3c7: V259 = SUB V256 V258
0x3c9: RETURN V258 V259
---
Entry stack: [V11, 0x3ae, V671]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3ae]

================================

Block 0x3ca
[0x3ca:0x3d1]
---
Predecessors: [0x78]
Successors: [0x3d2, 0x3d6]
---
0x3ca JUMPDEST
0x3cb CALLVALUE
0x3cc DUP1
0x3cd ISZERO
0x3ce PUSH2 0x3d6
0x3d1 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V260 = CALLVALUE
0x3cd: V261 = ISZERO V260
0x3ce: V262 = 0x3d6
0x3d1: JUMPI 0x3d6 V261
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V260]
Exit stack: [V11, V260]

================================

Block 0x3d2
[0x3d2:0x3d5]
---
Predecessors: [0x3ca]
Successors: []
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 REVERT
---
0x3d2: V263 = 0x0
0x3d5: REVERT 0x0 0x0
---
Entry stack: [V11, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V260]

================================

Block 0x3d6
[0x3d6:0x414]
---
Predecessors: [0x3ca]
Successors: [0x9d7]
---
0x3d6 JUMPDEST
0x3d7 POP
0x3d8 PUSH2 0x415
0x3db PUSH1 0x4
0x3dd DUP1
0x3de CALLDATASIZE
0x3df SUB
0x3e0 DUP2
0x3e1 ADD
0x3e2 SWAP1
0x3e3 DUP1
0x3e4 DUP1
0x3e5 CALLDATALOAD
0x3e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fb AND
0x3fc SWAP1
0x3fd PUSH1 0x20
0x3ff ADD
0x400 SWAP1
0x401 SWAP3
0x402 SWAP2
0x403 SWAP1
0x404 DUP1
0x405 CALLDATALOAD
0x406 SWAP1
0x407 PUSH1 0x20
0x409 ADD
0x40a SWAP1
0x40b SWAP3
0x40c SWAP2
0x40d SWAP1
0x40e POP
0x40f POP
0x410 POP
0x411 PUSH2 0x9d7
0x414 JUMP
---
0x3d6: JUMPDEST 
0x3d8: V264 = 0x415
0x3db: V265 = 0x4
0x3de: V266 = CALLDATASIZE
0x3df: V267 = SUB V266 0x4
0x3e1: V268 = ADD 0x4 V267
0x3e5: V269 = CALLDATALOAD 0x4
0x3e6: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fb: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x3fd: V272 = 0x20
0x3ff: V273 = ADD 0x20 0x4
0x405: V274 = CALLDATALOAD 0x24
0x407: V275 = 0x20
0x409: V276 = ADD 0x20 0x24
0x411: V277 = 0x9d7
0x414: JUMP 0x9d7
---
Entry stack: [V11, V260]
Stack pops: 1
Stack additions: [0x415, V271, V274]
Exit stack: [V11, 0x415, V271, V274]

================================

Block 0x415
[0x415:0x42e]
---
Predecessors: [0xac8]
Successors: []
---
0x415 JUMPDEST
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP1
0x41a DUP3
0x41b ISZERO
0x41c ISZERO
0x41d ISZERO
0x41e ISZERO
0x41f DUP2
0x420 MSTORE
0x421 PUSH1 0x20
0x423 ADD
0x424 SWAP2
0x425 POP
0x426 POP
0x427 PUSH1 0x40
0x429 MLOAD
0x42a DUP1
0x42b SWAP2
0x42c SUB
0x42d SWAP1
0x42e RETURN
---
0x415: JUMPDEST 
0x416: V278 = 0x40
0x418: V279 = M[0x40]
0x41b: V280 = ISZERO V728
0x41c: V281 = ISZERO V280
0x41d: V282 = ISZERO V281
0x41e: V283 = ISZERO V282
0x420: M[V279] = V283
0x421: V284 = 0x20
0x423: V285 = ADD 0x20 V279
0x427: V286 = 0x40
0x429: V287 = M[0x40]
0x42c: V288 = SUB V285 V287
0x42e: RETURN V287 V288
---
Entry stack: [V11, V728]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x42f
[0x42f:0x436]
---
Predecessors: [0x83]
Successors: [0x437, 0x43b]
---
0x42f JUMPDEST
0x430 CALLVALUE
0x431 DUP1
0x432 ISZERO
0x433 PUSH2 0x43b
0x436 JUMPI
---
0x42f: JUMPDEST 
0x430: V289 = CALLVALUE
0x432: V290 = ISZERO V289
0x433: V291 = 0x43b
0x436: JUMPI 0x43b V290
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V289]
Exit stack: [V11, V289]

================================

Block 0x437
[0x437:0x43a]
---
Predecessors: [0x42f]
Successors: []
---
0x437 PUSH1 0x0
0x439 DUP1
0x43a REVERT
---
0x437: V292 = 0x0
0x43a: REVERT 0x0 0x0
---
Entry stack: [V11, V289]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V289]

================================

Block 0x43b
[0x43b:0x46f]
---
Predecessors: [0x42f]
Successors: [0xae1]
---
0x43b JUMPDEST
0x43c POP
0x43d PUSH2 0x470
0x440 PUSH1 0x4
0x442 DUP1
0x443 CALLDATASIZE
0x444 SUB
0x445 DUP2
0x446 ADD
0x447 SWAP1
0x448 DUP1
0x449 DUP1
0x44a CALLDATALOAD
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 SWAP1
0x462 PUSH1 0x20
0x464 ADD
0x465 SWAP1
0x466 SWAP3
0x467 SWAP2
0x468 SWAP1
0x469 POP
0x46a POP
0x46b POP
0x46c PUSH2 0xae1
0x46f JUMP
---
0x43b: JUMPDEST 
0x43d: V293 = 0x470
0x440: V294 = 0x4
0x443: V295 = CALLDATASIZE
0x444: V296 = SUB V295 0x4
0x446: V297 = ADD 0x4 V296
0x44a: V298 = CALLDATALOAD 0x4
0x44b: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x462: V301 = 0x20
0x464: V302 = ADD 0x20 0x4
0x46c: V303 = 0xae1
0x46f: JUMP 0xae1
---
Entry stack: [V11, V289]
Stack pops: 1
Stack additions: [0x470, V300]
Exit stack: [V11, 0x470, V300]

================================

Block 0x470
[0x470:0x485]
---
Predecessors: [0xb9a]
Successors: []
---
0x470 JUMPDEST
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP1
0x475 DUP3
0x476 DUP2
0x477 MSTORE
0x478 PUSH1 0x20
0x47a ADD
0x47b SWAP2
0x47c POP
0x47d POP
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 SWAP2
0x483 SUB
0x484 SWAP1
0x485 RETURN
---
0x470: JUMPDEST 
0x471: V304 = 0x40
0x473: V305 = M[0x40]
0x477: M[V305] = S0
0x478: V306 = 0x20
0x47a: V307 = ADD 0x20 V305
0x47e: V308 = 0x40
0x480: V309 = M[0x40]
0x483: V310 = SUB V307 V309
0x485: RETURN V309 V310
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x486
[0x486:0x48d]
---
Predecessors: [0x8e]
Successors: [0x48e, 0x492]
---
0x486 JUMPDEST
0x487 CALLVALUE
0x488 DUP1
0x489 ISZERO
0x48a PUSH2 0x492
0x48d JUMPI
---
0x486: JUMPDEST 
0x487: V311 = CALLVALUE
0x489: V312 = ISZERO V311
0x48a: V313 = 0x492
0x48d: JUMPI 0x492 V312
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V311]
Exit stack: [V11, V311]

================================

Block 0x48e
[0x48e:0x491]
---
Predecessors: [0x486]
Successors: []
---
0x48e PUSH1 0x0
0x490 DUP1
0x491 REVERT
---
0x48e: V314 = 0x0
0x491: REVERT 0x0 0x0
---
Entry stack: [V11, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V311]

================================

Block 0x492
[0x492:0x49a]
---
Predecessors: [0x486]
Successors: [0xb9f]
---
0x492 JUMPDEST
0x493 POP
0x494 PUSH2 0x49b
0x497 PUSH2 0xb9f
0x49a JUMP
---
0x492: JUMPDEST 
0x494: V315 = 0x49b
0x497: V316 = 0xb9f
0x49a: JUMP 0xb9f
---
Entry stack: [V11, V311]
Stack pops: 1
Stack additions: [0x49b]
Exit stack: [V11, 0x49b]

================================

Block 0x49b
[0x49b:0x4b0]
---
Predecessors: [0xb9f]
Successors: []
---
0x49b JUMPDEST
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 DUP3
0x4a1 DUP2
0x4a2 MSTORE
0x4a3 PUSH1 0x20
0x4a5 ADD
0x4a6 SWAP2
0x4a7 POP
0x4a8 POP
0x4a9 PUSH1 0x40
0x4ab MLOAD
0x4ac DUP1
0x4ad SWAP2
0x4ae SUB
0x4af SWAP1
0x4b0 RETURN
---
0x49b: JUMPDEST 
0x49c: V317 = 0x40
0x49e: V318 = M[0x40]
0x4a2: M[V318] = V781
0x4a3: V319 = 0x20
0x4a5: V320 = ADD 0x20 V318
0x4a9: V321 = 0x40
0x4ab: V322 = M[0x40]
0x4ae: V323 = SUB V320 V322
0x4b0: RETURN V322 V323
---
Entry stack: [V11, 0x49b, V781]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x49b]

================================

Block 0x4b1
[0x4b1:0x4b8]
---
Predecessors: [0x99]
Successors: [0x4b9, 0x4bd]
---
0x4b1 JUMPDEST
0x4b2 CALLVALUE
0x4b3 DUP1
0x4b4 ISZERO
0x4b5 PUSH2 0x4bd
0x4b8 JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V324 = CALLVALUE
0x4b4: V325 = ISZERO V324
0x4b5: V326 = 0x4bd
0x4b8: JUMPI 0x4bd V325
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V324]
Exit stack: [V11, V324]

================================

Block 0x4b9
[0x4b9:0x4bc]
---
Predecessors: [0x4b1]
Successors: []
---
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc REVERT
---
0x4b9: V327 = 0x0
0x4bc: REVERT 0x0 0x0
---
Entry stack: [V11, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V324]

================================

Block 0x4bd
[0x4bd:0x4c5]
---
Predecessors: [0x4b1]
Successors: [0xba5]
---
0x4bd JUMPDEST
0x4be POP
0x4bf PUSH2 0x4c6
0x4c2 PUSH2 0xba5
0x4c5 JUMP
---
0x4bd: JUMPDEST 
0x4bf: V328 = 0x4c6
0x4c2: V329 = 0xba5
0x4c5: JUMP 0xba5
---
Entry stack: [V11, V324]
Stack pops: 1
Stack additions: [0x4c6]
Exit stack: [V11, 0x4c6]

================================

Block 0x4c6
[0x4c6:0x507]
---
Predecessors: [0xba5]
Successors: []
---
0x4c6 JUMPDEST
0x4c7 PUSH1 0x40
0x4c9 MLOAD
0x4ca DUP1
0x4cb DUP3
0x4cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e1 AND
0x4e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f7 AND
0x4f8 DUP2
0x4f9 MSTORE
0x4fa PUSH1 0x20
0x4fc ADD
0x4fd SWAP2
0x4fe POP
0x4ff POP
0x500 PUSH1 0x40
0x502 MLOAD
0x503 DUP1
0x504 SWAP2
0x505 SUB
0x506 SWAP1
0x507 RETURN
---
0x4c6: JUMPDEST 
0x4c7: V330 = 0x40
0x4c9: V331 = M[0x40]
0x4cc: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V789
0x4e2: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f7: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x4f9: M[V331] = V335
0x4fa: V336 = 0x20
0x4fc: V337 = ADD 0x20 V331
0x500: V338 = 0x40
0x502: V339 = M[0x40]
0x505: V340 = SUB V337 V339
0x507: RETURN V339 V340
---
Entry stack: [V11, 0x4c6, V789]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4c6]

================================

Block 0x508
[0x508:0x50f]
---
Predecessors: [0xa4]
Successors: [0x510, 0x514]
---
0x508 JUMPDEST
0x509 CALLVALUE
0x50a DUP1
0x50b ISZERO
0x50c PUSH2 0x514
0x50f JUMPI
---
0x508: JUMPDEST 
0x509: V341 = CALLVALUE
0x50b: V342 = ISZERO V341
0x50c: V343 = 0x514
0x50f: JUMPI 0x514 V342
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V341]
Exit stack: [V11, V341]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x508]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V344 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V11, V341]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V341]

================================

Block 0x514
[0x514:0x51c]
---
Predecessors: [0x508]
Successors: [0xbcb]
---
0x514 JUMPDEST
0x515 POP
0x516 PUSH2 0x51d
0x519 PUSH2 0xbcb
0x51c JUMP
---
0x514: JUMPDEST 
0x516: V345 = 0x51d
0x519: V346 = 0xbcb
0x51c: JUMP 0xbcb
---
Entry stack: [V11, V341]
Stack pops: 1
Stack additions: [0x51d]
Exit stack: [V11, 0x51d]

================================

Block 0x51d
[0x51d:0x541]
---
Predecessors: [0xc61]
Successors: [0x542]
---
0x51d JUMPDEST
0x51e PUSH1 0x40
0x520 MLOAD
0x521 DUP1
0x522 DUP1
0x523 PUSH1 0x20
0x525 ADD
0x526 DUP3
0x527 DUP2
0x528 SUB
0x529 DUP3
0x52a MSTORE
0x52b DUP4
0x52c DUP2
0x52d DUP2
0x52e MLOAD
0x52f DUP2
0x530 MSTORE
0x531 PUSH1 0x20
0x533 ADD
0x534 SWAP2
0x535 POP
0x536 DUP1
0x537 MLOAD
0x538 SWAP1
0x539 PUSH1 0x20
0x53b ADD
0x53c SWAP1
0x53d DUP1
0x53e DUP4
0x53f DUP4
0x540 PUSH1 0x0
---
0x51d: JUMPDEST 
0x51e: V347 = 0x40
0x520: V348 = M[0x40]
0x523: V349 = 0x20
0x525: V350 = ADD 0x20 V348
0x528: V351 = SUB V350 V348
0x52a: M[V348] = V351
0x52e: V352 = M[V810]
0x530: M[V350] = V352
0x531: V353 = 0x20
0x533: V354 = ADD 0x20 V350
0x537: V355 = M[V810]
0x539: V356 = 0x20
0x53b: V357 = ADD 0x20 V810
0x540: V358 = 0x0
---
Entry stack: [V11, 0x51d, V810]
Stack pops: 1
Stack additions: [S0, V348, V348, V354, V357, V355, V355, V354, V357, 0x0]
Exit stack: [V11, 0x51d, V810, V348, V348, V354, V357, V355, V355, V354, V357, 0x0]

================================

Block 0x542
[0x542:0x54a]
---
Predecessors: [0x51d, 0x54b]
Successors: [0x54b, 0x55d]
---
0x542 JUMPDEST
0x543 DUP4
0x544 DUP2
0x545 LT
0x546 ISZERO
0x547 PUSH2 0x55d
0x54a JUMPI
---
0x542: JUMPDEST 
0x545: V359 = LT S0 V355
0x546: V360 = ISZERO V359
0x547: V361 = 0x55d
0x54a: JUMPI 0x55d V360
---
Entry stack: [V11, 0x51d, V810, V348, V348, V354, V357, V355, V355, V354, V357, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x51d, V810, V348, V348, V354, V357, V355, V355, V354, V357, S0]

================================

Block 0x54b
[0x54b:0x55c]
---
Predecessors: [0x542]
Successors: [0x542]
---
0x54b DUP1
0x54c DUP3
0x54d ADD
0x54e MLOAD
0x54f DUP2
0x550 DUP5
0x551 ADD
0x552 MSTORE
0x553 PUSH1 0x20
0x555 DUP2
0x556 ADD
0x557 SWAP1
0x558 POP
0x559 PUSH2 0x542
0x55c JUMP
---
0x54d: V362 = ADD V357 S0
0x54e: V363 = M[V362]
0x551: V364 = ADD V354 S0
0x552: M[V364] = V363
0x553: V365 = 0x20
0x556: V366 = ADD S0 0x20
0x559: V367 = 0x542
0x55c: JUMP 0x542
---
Entry stack: [V11, 0x51d, V810, V348, V348, V354, V357, V355, V355, V354, V357, S0]
Stack pops: 3
Stack additions: [S2, S1, V366]
Exit stack: [V11, 0x51d, V810, V348, V348, V354, V357, V355, V355, V354, V357, V366]

================================

Block 0x55d
[0x55d:0x570]
---
Predecessors: [0x542]
Successors: [0x571, 0x58a]
---
0x55d JUMPDEST
0x55e POP
0x55f POP
0x560 POP
0x561 POP
0x562 SWAP1
0x563 POP
0x564 SWAP1
0x565 DUP2
0x566 ADD
0x567 SWAP1
0x568 PUSH1 0x1f
0x56a AND
0x56b DUP1
0x56c ISZERO
0x56d PUSH2 0x58a
0x570 JUMPI
---
0x55d: JUMPDEST 
0x566: V368 = ADD V355 V354
0x568: V369 = 0x1f
0x56a: V370 = AND 0x1f V355
0x56c: V371 = ISZERO V370
0x56d: V372 = 0x58a
0x570: JUMPI 0x58a V371
---
Entry stack: [V11, 0x51d, V810, V348, V348, V354, V357, V355, V355, V354, V357, S0]
Stack pops: 7
Stack additions: [V368, V370]
Exit stack: [V11, 0x51d, V810, V348, V348, V368, V370]

================================

Block 0x571
[0x571:0x589]
---
Predecessors: [0x55d]
Successors: [0x58a]
---
0x571 DUP1
0x572 DUP3
0x573 SUB
0x574 DUP1
0x575 MLOAD
0x576 PUSH1 0x1
0x578 DUP4
0x579 PUSH1 0x20
0x57b SUB
0x57c PUSH2 0x100
0x57f EXP
0x580 SUB
0x581 NOT
0x582 AND
0x583 DUP2
0x584 MSTORE
0x585 PUSH1 0x20
0x587 ADD
0x588 SWAP2
0x589 POP
---
0x573: V373 = SUB V368 V370
0x575: V374 = M[V373]
0x576: V375 = 0x1
0x579: V376 = 0x20
0x57b: V377 = SUB 0x20 V370
0x57c: V378 = 0x100
0x57f: V379 = EXP 0x100 V377
0x580: V380 = SUB V379 0x1
0x581: V381 = NOT V380
0x582: V382 = AND V381 V374
0x584: M[V373] = V382
0x585: V383 = 0x20
0x587: V384 = ADD 0x20 V373
---
Entry stack: [V11, 0x51d, V810, V348, V348, V368, V370]
Stack pops: 2
Stack additions: [V384, S0]
Exit stack: [V11, 0x51d, V810, V348, V348, V384, V370]

================================

Block 0x58a
[0x58a:0x597]
---
Predecessors: [0x55d, 0x571]
Successors: []
---
0x58a JUMPDEST
0x58b POP
0x58c SWAP3
0x58d POP
0x58e POP
0x58f POP
0x590 PUSH1 0x40
0x592 MLOAD
0x593 DUP1
0x594 SWAP2
0x595 SUB
0x596 SWAP1
0x597 RETURN
---
0x58a: JUMPDEST 
0x590: V385 = 0x40
0x592: V386 = M[0x40]
0x595: V387 = SUB S1 V386
0x597: RETURN V386 V387
---
Entry stack: [V11, 0x51d, V810, V348, V348, S1, V370]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x51d]

================================

Block 0x598
[0x598:0x59f]
---
Predecessors: [0xaf]
Successors: [0x5a0, 0x5a4]
---
0x598 JUMPDEST
0x599 CALLVALUE
0x59a DUP1
0x59b ISZERO
0x59c PUSH2 0x5a4
0x59f JUMPI
---
0x598: JUMPDEST 
0x599: V388 = CALLVALUE
0x59b: V389 = ISZERO V388
0x59c: V390 = 0x5a4
0x59f: JUMPI 0x5a4 V389
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V388]
Exit stack: [V11, V388]

================================

Block 0x5a0
[0x5a0:0x5a3]
---
Predecessors: [0x598]
Successors: []
---
0x5a0 PUSH1 0x0
0x5a2 DUP1
0x5a3 REVERT
---
0x5a0: V391 = 0x0
0x5a3: REVERT 0x0 0x0
---
Entry stack: [V11, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V388]

================================

Block 0x5a4
[0x5a4:0x5e2]
---
Predecessors: [0x598]
Successors: [0xc69]
---
0x5a4 JUMPDEST
0x5a5 POP
0x5a6 PUSH2 0x5e3
0x5a9 PUSH1 0x4
0x5ab DUP1
0x5ac CALLDATASIZE
0x5ad SUB
0x5ae DUP2
0x5af ADD
0x5b0 SWAP1
0x5b1 DUP1
0x5b2 DUP1
0x5b3 CALLDATALOAD
0x5b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c9 AND
0x5ca SWAP1
0x5cb PUSH1 0x20
0x5cd ADD
0x5ce SWAP1
0x5cf SWAP3
0x5d0 SWAP2
0x5d1 SWAP1
0x5d2 DUP1
0x5d3 CALLDATALOAD
0x5d4 SWAP1
0x5d5 PUSH1 0x20
0x5d7 ADD
0x5d8 SWAP1
0x5d9 SWAP3
0x5da SWAP2
0x5db SWAP1
0x5dc POP
0x5dd POP
0x5de POP
0x5df PUSH2 0xc69
0x5e2 JUMP
---
0x5a4: JUMPDEST 
0x5a6: V392 = 0x5e3
0x5a9: V393 = 0x4
0x5ac: V394 = CALLDATASIZE
0x5ad: V395 = SUB V394 0x4
0x5af: V396 = ADD 0x4 V395
0x5b3: V397 = CALLDATALOAD 0x4
0x5b4: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x5cb: V400 = 0x20
0x5cd: V401 = ADD 0x20 0x4
0x5d3: V402 = CALLDATALOAD 0x24
0x5d5: V403 = 0x20
0x5d7: V404 = ADD 0x20 0x24
0x5df: V405 = 0xc69
0x5e2: JUMP 0xc69
---
Entry stack: [V11, V388]
Stack pops: 1
Stack additions: [0x5e3, V399, V402]
Exit stack: [V11, 0x5e3, V399, V402]

================================

Block 0x5e3
[0x5e3:0x5fc]
---
Predecessors: [0xc69]
Successors: []
---
0x5e3 JUMPDEST
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 DUP1
0x5e8 DUP3
0x5e9 ISZERO
0x5ea ISZERO
0x5eb ISZERO
0x5ec ISZERO
0x5ed DUP2
0x5ee MSTORE
0x5ef PUSH1 0x20
0x5f1 ADD
0x5f2 SWAP2
0x5f3 POP
0x5f4 POP
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 DUP1
0x5f9 SWAP2
0x5fa SUB
0x5fb SWAP1
0x5fc RETURN
---
0x5e3: JUMPDEST 
0x5e4: V406 = 0x40
0x5e6: V407 = M[0x40]
0x5e9: V408 = ISZERO 0x1
0x5ea: V409 = ISZERO 0x0
0x5eb: V410 = ISZERO 0x1
0x5ec: V411 = ISZERO 0x0
0x5ee: M[V407] = 0x1
0x5ef: V412 = 0x20
0x5f1: V413 = ADD 0x20 V407
0x5f5: V414 = 0x40
0x5f7: V415 = M[0x40]
0x5fa: V416 = SUB V413 V415
0x5fc: RETURN V415 V416
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5fd
[0x5fd:0x604]
---
Predecessors: [0xba]
Successors: [0x605, 0x609]
---
0x5fd JUMPDEST
0x5fe CALLVALUE
0x5ff DUP1
0x600 ISZERO
0x601 PUSH2 0x609
0x604 JUMPI
---
0x5fd: JUMPDEST 
0x5fe: V417 = CALLVALUE
0x600: V418 = ISZERO V417
0x601: V419 = 0x609
0x604: JUMPI 0x609 V418
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V417]
Exit stack: [V11, V417]

================================

Block 0x605
[0x605:0x608]
---
Predecessors: [0x5fd]
Successors: []
---
0x605 PUSH1 0x0
0x607 DUP1
0x608 REVERT
---
0x605: V420 = 0x0
0x608: REVERT 0x0 0x0
---
Entry stack: [V11, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V417]

================================

Block 0x609
[0x609:0x63d]
---
Predecessors: [0x5fd]
Successors: [0xdcf]
---
0x609 JUMPDEST
0x60a POP
0x60b PUSH2 0x63e
0x60e PUSH1 0x4
0x610 DUP1
0x611 CALLDATASIZE
0x612 SUB
0x613 DUP2
0x614 ADD
0x615 SWAP1
0x616 DUP1
0x617 DUP1
0x618 CALLDATALOAD
0x619 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62e AND
0x62f SWAP1
0x630 PUSH1 0x20
0x632 ADD
0x633 SWAP1
0x634 SWAP3
0x635 SWAP2
0x636 SWAP1
0x637 POP
0x638 POP
0x639 POP
0x63a PUSH2 0xdcf
0x63d JUMP
---
0x609: JUMPDEST 
0x60b: V421 = 0x63e
0x60e: V422 = 0x4
0x611: V423 = CALLDATASIZE
0x612: V424 = SUB V423 0x4
0x614: V425 = ADD 0x4 V424
0x618: V426 = CALLDATALOAD 0x4
0x619: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x62e: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x630: V429 = 0x20
0x632: V430 = ADD 0x20 0x4
0x63a: V431 = 0xdcf
0x63d: JUMP 0xdcf
---
Entry stack: [V11, V417]
Stack pops: 1
Stack additions: [0x63e, V428]
Exit stack: [V11, 0x63e, V428]

================================

Block 0x63e
[0x63e:0x653]
---
Predecessors: [0xdcf]
Successors: []
---
0x63e JUMPDEST
0x63f PUSH1 0x40
0x641 MLOAD
0x642 DUP1
0x643 DUP3
0x644 DUP2
0x645 MSTORE
0x646 PUSH1 0x20
0x648 ADD
0x649 SWAP2
0x64a POP
0x64b POP
0x64c PUSH1 0x40
0x64e MLOAD
0x64f DUP1
0x650 SWAP2
0x651 SUB
0x652 SWAP1
0x653 RETURN
---
0x63e: JUMPDEST 
0x63f: V432 = 0x40
0x641: V433 = M[0x40]
0x645: M[V433] = V920
0x646: V434 = 0x20
0x648: V435 = ADD 0x20 V433
0x64c: V436 = 0x40
0x64e: V437 = M[0x40]
0x651: V438 = SUB V435 V437
0x653: RETURN V437 V438
---
Entry stack: [V11, 0x63e, V920]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x63e]

================================

Block 0x654
[0x654:0x65b]
---
Predecessors: [0xc5]
Successors: [0x65c, 0x660]
---
0x654 JUMPDEST
0x655 CALLVALUE
0x656 DUP1
0x657 ISZERO
0x658 PUSH2 0x660
0x65b JUMPI
---
0x654: JUMPDEST 
0x655: V439 = CALLVALUE
0x657: V440 = ISZERO V439
0x658: V441 = 0x660
0x65b: JUMPI 0x660 V440
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V439]
Exit stack: [V11, V439]

================================

Block 0x65c
[0x65c:0x65f]
---
Predecessors: [0x654]
Successors: []
---
0x65c PUSH1 0x0
0x65e DUP1
0x65f REVERT
---
0x65c: V442 = 0x0
0x65f: REVERT 0x0 0x0
---
Entry stack: [V11, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V439]

================================

Block 0x660
[0x660:0x6b4]
---
Predecessors: [0x654]
Successors: [0xde7]
---
0x660 JUMPDEST
0x661 POP
0x662 PUSH2 0x6b5
0x665 PUSH1 0x4
0x667 DUP1
0x668 CALLDATASIZE
0x669 SUB
0x66a DUP2
0x66b ADD
0x66c SWAP1
0x66d DUP1
0x66e DUP1
0x66f CALLDATALOAD
0x670 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x685 AND
0x686 SWAP1
0x687 PUSH1 0x20
0x689 ADD
0x68a SWAP1
0x68b SWAP3
0x68c SWAP2
0x68d SWAP1
0x68e DUP1
0x68f CALLDATALOAD
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 SWAP1
0x6a7 PUSH1 0x20
0x6a9 ADD
0x6aa SWAP1
0x6ab SWAP3
0x6ac SWAP2
0x6ad SWAP1
0x6ae POP
0x6af POP
0x6b0 POP
0x6b1 PUSH2 0xde7
0x6b4 JUMP
---
0x660: JUMPDEST 
0x662: V443 = 0x6b5
0x665: V444 = 0x4
0x668: V445 = CALLDATASIZE
0x669: V446 = SUB V445 0x4
0x66b: V447 = ADD 0x4 V446
0x66f: V448 = CALLDATALOAD 0x4
0x670: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x685: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x687: V451 = 0x20
0x689: V452 = ADD 0x20 0x4
0x68f: V453 = CALLDATALOAD 0x24
0x690: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x6a7: V456 = 0x20
0x6a9: V457 = ADD 0x20 0x24
0x6b1: V458 = 0xde7
0x6b4: JUMP 0xde7
---
Entry stack: [V11, V439]
Stack pops: 1
Stack additions: [0x6b5, V450, V455]
Exit stack: [V11, 0x6b5, V450, V455]

================================

Block 0x6b5
[0x6b5:0x6ca]
---
Predecessors: [0xde7]
Successors: []
---
0x6b5 JUMPDEST
0x6b6 PUSH1 0x40
0x6b8 MLOAD
0x6b9 DUP1
0x6ba DUP3
0x6bb DUP2
0x6bc MSTORE
0x6bd PUSH1 0x20
0x6bf ADD
0x6c0 SWAP2
0x6c1 POP
0x6c2 POP
0x6c3 PUSH1 0x40
0x6c5 MLOAD
0x6c6 DUP1
0x6c7 SWAP2
0x6c8 SUB
0x6c9 SWAP1
0x6ca RETURN
---
0x6b5: JUMPDEST 
0x6b6: V459 = 0x40
0x6b8: V460 = M[0x40]
0x6bc: M[V460] = 0x0
0x6bd: V461 = 0x20
0x6bf: V462 = ADD 0x20 V460
0x6c3: V463 = 0x40
0x6c5: V464 = M[0x40]
0x6c8: V465 = SUB V462 V464
0x6ca: RETURN V464 V465
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x6cb
[0x6cb:0x6d2]
---
Predecessors: [0xd0]
Successors: [0x6d3, 0x6d7]
---
0x6cb JUMPDEST
0x6cc CALLVALUE
0x6cd DUP1
0x6ce ISZERO
0x6cf PUSH2 0x6d7
0x6d2 JUMPI
---
0x6cb: JUMPDEST 
0x6cc: V466 = CALLVALUE
0x6ce: V467 = ISZERO V466
0x6cf: V468 = 0x6d7
0x6d2: JUMPI 0x6d7 V467
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V466]
Exit stack: [V11, V466]

================================

Block 0x6d3
[0x6d3:0x6d6]
---
Predecessors: [0x6cb]
Successors: []
---
0x6d3 PUSH1 0x0
0x6d5 DUP1
0x6d6 REVERT
---
0x6d3: V469 = 0x0
0x6d6: REVERT 0x0 0x0
---
Entry stack: [V11, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V466]

================================

Block 0x6d7
[0x6d7:0x797]
---
Predecessors: [0x6cb]
Successors: [0xdf2]
---
0x6d7 JUMPDEST
0x6d8 POP
0x6d9 PUSH2 0x798
0x6dc PUSH1 0x4
0x6de DUP1
0x6df CALLDATASIZE
0x6e0 SUB
0x6e1 DUP2
0x6e2 ADD
0x6e3 SWAP1
0x6e4 DUP1
0x6e5 DUP1
0x6e6 CALLDATALOAD
0x6e7 SWAP1
0x6e8 PUSH1 0x20
0x6ea ADD
0x6eb SWAP1
0x6ec DUP3
0x6ed ADD
0x6ee DUP1
0x6ef CALLDATALOAD
0x6f0 SWAP1
0x6f1 PUSH1 0x20
0x6f3 ADD
0x6f4 SWAP1
0x6f5 DUP1
0x6f6 DUP1
0x6f7 PUSH1 0x1f
0x6f9 ADD
0x6fa PUSH1 0x20
0x6fc DUP1
0x6fd SWAP2
0x6fe DIV
0x6ff MUL
0x700 PUSH1 0x20
0x702 ADD
0x703 PUSH1 0x40
0x705 MLOAD
0x706 SWAP1
0x707 DUP2
0x708 ADD
0x709 PUSH1 0x40
0x70b MSTORE
0x70c DUP1
0x70d SWAP4
0x70e SWAP3
0x70f SWAP2
0x710 SWAP1
0x711 DUP2
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x20
0x716 ADD
0x717 DUP4
0x718 DUP4
0x719 DUP1
0x71a DUP3
0x71b DUP5
0x71c CALLDATACOPY
0x71d DUP3
0x71e ADD
0x71f SWAP2
0x720 POP
0x721 POP
0x722 POP
0x723 POP
0x724 POP
0x725 POP
0x726 SWAP2
0x727 SWAP3
0x728 SWAP2
0x729 SWAP3
0x72a SWAP1
0x72b DUP1
0x72c CALLDATALOAD
0x72d SWAP1
0x72e PUSH1 0x20
0x730 ADD
0x731 SWAP1
0x732 DUP3
0x733 ADD
0x734 DUP1
0x735 CALLDATALOAD
0x736 SWAP1
0x737 PUSH1 0x20
0x739 ADD
0x73a SWAP1
0x73b DUP1
0x73c DUP1
0x73d PUSH1 0x1f
0x73f ADD
0x740 PUSH1 0x20
0x742 DUP1
0x743 SWAP2
0x744 DIV
0x745 MUL
0x746 PUSH1 0x20
0x748 ADD
0x749 PUSH1 0x40
0x74b MLOAD
0x74c SWAP1
0x74d DUP2
0x74e ADD
0x74f PUSH1 0x40
0x751 MSTORE
0x752 DUP1
0x753 SWAP4
0x754 SWAP3
0x755 SWAP2
0x756 SWAP1
0x757 DUP2
0x758 DUP2
0x759 MSTORE
0x75a PUSH1 0x20
0x75c ADD
0x75d DUP4
0x75e DUP4
0x75f DUP1
0x760 DUP3
0x761 DUP5
0x762 CALLDATACOPY
0x763 DUP3
0x764 ADD
0x765 SWAP2
0x766 POP
0x767 POP
0x768 POP
0x769 POP
0x76a POP
0x76b POP
0x76c SWAP2
0x76d SWAP3
0x76e SWAP2
0x76f SWAP3
0x770 SWAP1
0x771 DUP1
0x772 CALLDATALOAD
0x773 SWAP1
0x774 PUSH1 0x20
0x776 ADD
0x777 SWAP1
0x778 SWAP3
0x779 SWAP2
0x77a SWAP1
0x77b DUP1
0x77c CALLDATALOAD
0x77d SWAP1
0x77e PUSH1 0x20
0x780 ADD
0x781 SWAP1
0x782 SWAP3
0x783 SWAP2
0x784 SWAP1
0x785 DUP1
0x786 CALLDATALOAD
0x787 ISZERO
0x788 ISZERO
0x789 SWAP1
0x78a PUSH1 0x20
0x78c ADD
0x78d SWAP1
0x78e SWAP3
0x78f SWAP2
0x790 SWAP1
0x791 POP
0x792 POP
0x793 POP
0x794 PUSH2 0xdf2
0x797 JUMP
---
0x6d7: JUMPDEST 
0x6d9: V470 = 0x798
0x6dc: V471 = 0x4
0x6df: V472 = CALLDATASIZE
0x6e0: V473 = SUB V472 0x4
0x6e2: V474 = ADD 0x4 V473
0x6e6: V475 = CALLDATALOAD 0x4
0x6e8: V476 = 0x20
0x6ea: V477 = ADD 0x20 0x4
0x6ed: V478 = ADD 0x4 V475
0x6ef: V479 = CALLDATALOAD V478
0x6f1: V480 = 0x20
0x6f3: V481 = ADD 0x20 V478
0x6f7: V482 = 0x1f
0x6f9: V483 = ADD 0x1f V479
0x6fa: V484 = 0x20
0x6fe: V485 = DIV V483 0x20
0x6ff: V486 = MUL V485 0x20
0x700: V487 = 0x20
0x702: V488 = ADD 0x20 V486
0x703: V489 = 0x40
0x705: V490 = M[0x40]
0x708: V491 = ADD V490 V488
0x709: V492 = 0x40
0x70b: M[0x40] = V491
0x713: M[V490] = V479
0x714: V493 = 0x20
0x716: V494 = ADD 0x20 V490
0x71c: CALLDATACOPY V494 V481 V479
0x71e: V495 = ADD V494 V479
0x72c: V496 = CALLDATALOAD 0x24
0x72e: V497 = 0x20
0x730: V498 = ADD 0x20 0x24
0x733: V499 = ADD 0x4 V496
0x735: V500 = CALLDATALOAD V499
0x737: V501 = 0x20
0x739: V502 = ADD 0x20 V499
0x73d: V503 = 0x1f
0x73f: V504 = ADD 0x1f V500
0x740: V505 = 0x20
0x744: V506 = DIV V504 0x20
0x745: V507 = MUL V506 0x20
0x746: V508 = 0x20
0x748: V509 = ADD 0x20 V507
0x749: V510 = 0x40
0x74b: V511 = M[0x40]
0x74e: V512 = ADD V511 V509
0x74f: V513 = 0x40
0x751: M[0x40] = V512
0x759: M[V511] = V500
0x75a: V514 = 0x20
0x75c: V515 = ADD 0x20 V511
0x762: CALLDATACOPY V515 V502 V500
0x764: V516 = ADD V515 V500
0x772: V517 = CALLDATALOAD 0x44
0x774: V518 = 0x20
0x776: V519 = ADD 0x20 0x44
0x77c: V520 = CALLDATALOAD 0x64
0x77e: V521 = 0x20
0x780: V522 = ADD 0x20 0x64
0x786: V523 = CALLDATALOAD 0x84
0x787: V524 = ISZERO V523
0x788: V525 = ISZERO V524
0x78a: V526 = 0x20
0x78c: V527 = ADD 0x20 0x84
0x794: V528 = 0xdf2
0x797: JUMP 0xdf2
---
Entry stack: [V11, V466]
Stack pops: 1
Stack additions: [0x798, V490, V511, V517, V520, V525]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525]

================================

Block 0x798
[0x798:0x799]
---
Predecessors: [0xe7b]
Successors: []
---
0x798 JUMPDEST
0x799 STOP
---
0x798: JUMPDEST 
0x799: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79a
[0x79a:0x7e9]
---
Predecessors: [0x1d1]
Successors: [0x7ea, 0x830]
---
0x79a JUMPDEST
0x79b PUSH1 0x1
0x79d DUP1
0x79e SLOAD
0x79f PUSH1 0x1
0x7a1 DUP2
0x7a2 PUSH1 0x1
0x7a4 AND
0x7a5 ISZERO
0x7a6 PUSH2 0x100
0x7a9 MUL
0x7aa SUB
0x7ab AND
0x7ac PUSH1 0x2
0x7ae SWAP1
0x7af DIV
0x7b0 DUP1
0x7b1 PUSH1 0x1f
0x7b3 ADD
0x7b4 PUSH1 0x20
0x7b6 DUP1
0x7b7 SWAP2
0x7b8 DIV
0x7b9 MUL
0x7ba PUSH1 0x20
0x7bc ADD
0x7bd PUSH1 0x40
0x7bf MLOAD
0x7c0 SWAP1
0x7c1 DUP2
0x7c2 ADD
0x7c3 PUSH1 0x40
0x7c5 MSTORE
0x7c6 DUP1
0x7c7 SWAP3
0x7c8 SWAP2
0x7c9 SWAP1
0x7ca DUP2
0x7cb DUP2
0x7cc MSTORE
0x7cd PUSH1 0x20
0x7cf ADD
0x7d0 DUP3
0x7d1 DUP1
0x7d2 SLOAD
0x7d3 PUSH1 0x1
0x7d5 DUP2
0x7d6 PUSH1 0x1
0x7d8 AND
0x7d9 ISZERO
0x7da PUSH2 0x100
0x7dd MUL
0x7de SUB
0x7df AND
0x7e0 PUSH1 0x2
0x7e2 SWAP1
0x7e3 DIV
0x7e4 DUP1
0x7e5 ISZERO
0x7e6 PUSH2 0x830
0x7e9 JUMPI
---
0x79a: JUMPDEST 
0x79b: V529 = 0x1
0x79e: V530 = S[0x1]
0x79f: V531 = 0x1
0x7a2: V532 = 0x1
0x7a4: V533 = AND 0x1 V530
0x7a5: V534 = ISZERO V533
0x7a6: V535 = 0x100
0x7a9: V536 = MUL 0x100 V534
0x7aa: V537 = SUB V536 0x1
0x7ab: V538 = AND V537 V530
0x7ac: V539 = 0x2
0x7af: V540 = DIV V538 0x2
0x7b1: V541 = 0x1f
0x7b3: V542 = ADD 0x1f V540
0x7b4: V543 = 0x20
0x7b8: V544 = DIV V542 0x20
0x7b9: V545 = MUL V544 0x20
0x7ba: V546 = 0x20
0x7bc: V547 = ADD 0x20 V545
0x7bd: V548 = 0x40
0x7bf: V549 = M[0x40]
0x7c2: V550 = ADD V549 V547
0x7c3: V551 = 0x40
0x7c5: M[0x40] = V550
0x7cc: M[V549] = V540
0x7cd: V552 = 0x20
0x7cf: V553 = ADD 0x20 V549
0x7d2: V554 = S[0x1]
0x7d3: V555 = 0x1
0x7d6: V556 = 0x1
0x7d8: V557 = AND 0x1 V554
0x7d9: V558 = ISZERO V557
0x7da: V559 = 0x100
0x7dd: V560 = MUL 0x100 V558
0x7de: V561 = SUB V560 0x1
0x7df: V562 = AND V561 V554
0x7e0: V563 = 0x2
0x7e3: V564 = DIV V562 0x2
0x7e5: V565 = ISZERO V564
0x7e6: V566 = 0x830
0x7e9: JUMPI 0x830 V565
---
Entry stack: [V11, 0x1da]
Stack pops: 0
Stack additions: [V549, 0x1, V540, V553, 0x1, V564]
Exit stack: [V11, 0x1da, V549, 0x1, V540, V553, 0x1, V564]

================================

Block 0x7ea
[0x7ea:0x7f1]
---
Predecessors: [0x79a]
Successors: [0x7f2, 0x805]
---
0x7ea DUP1
0x7eb PUSH1 0x1f
0x7ed LT
0x7ee PUSH2 0x805
0x7f1 JUMPI
---
0x7eb: V567 = 0x1f
0x7ed: V568 = LT 0x1f V564
0x7ee: V569 = 0x805
0x7f1: JUMPI 0x805 V568
---
Entry stack: [V11, 0x1da, V549, 0x1, V540, V553, 0x1, V564]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1da, V549, 0x1, V540, V553, 0x1, V564]

================================

Block 0x7f2
[0x7f2:0x804]
---
Predecessors: [0x7ea]
Successors: [0x830]
---
0x7f2 PUSH2 0x100
0x7f5 DUP1
0x7f6 DUP4
0x7f7 SLOAD
0x7f8 DIV
0x7f9 MUL
0x7fa DUP4
0x7fb MSTORE
0x7fc SWAP2
0x7fd PUSH1 0x20
0x7ff ADD
0x800 SWAP2
0x801 PUSH2 0x830
0x804 JUMP
---
0x7f2: V570 = 0x100
0x7f7: V571 = S[0x1]
0x7f8: V572 = DIV V571 0x100
0x7f9: V573 = MUL V572 0x100
0x7fb: M[V553] = V573
0x7fd: V574 = 0x20
0x7ff: V575 = ADD 0x20 V553
0x801: V576 = 0x830
0x804: JUMP 0x830
---
Entry stack: [V11, 0x1da, V549, 0x1, V540, V553, 0x1, V564]
Stack pops: 3
Stack additions: [V575, S1, S0]
Exit stack: [V11, 0x1da, V549, 0x1, V540, V575, 0x1, V564]

================================

Block 0x805
[0x805:0x812]
---
Predecessors: [0x7ea]
Successors: [0x813]
---
0x805 JUMPDEST
0x806 DUP3
0x807 ADD
0x808 SWAP2
0x809 SWAP1
0x80a PUSH1 0x0
0x80c MSTORE
0x80d PUSH1 0x20
0x80f PUSH1 0x0
0x811 SHA3
0x812 SWAP1
---
0x805: JUMPDEST 
0x807: V577 = ADD V553 V564
0x80a: V578 = 0x0
0x80c: M[0x0] = 0x1
0x80d: V579 = 0x20
0x80f: V580 = 0x0
0x811: V581 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x1da, V549, 0x1, V540, V553, 0x1, V564]
Stack pops: 3
Stack additions: [V577, V581, S2]
Exit stack: [V11, 0x1da, V549, 0x1, V540, V577, V581, V553]

================================

Block 0x813
[0x813:0x826]
---
Predecessors: [0x805, 0x813]
Successors: [0x813, 0x827]
---
0x813 JUMPDEST
0x814 DUP2
0x815 SLOAD
0x816 DUP2
0x817 MSTORE
0x818 SWAP1
0x819 PUSH1 0x1
0x81b ADD
0x81c SWAP1
0x81d PUSH1 0x20
0x81f ADD
0x820 DUP1
0x821 DUP4
0x822 GT
0x823 PUSH2 0x813
0x826 JUMPI
---
0x813: JUMPDEST 
0x815: V582 = S[S1]
0x817: M[S0] = V582
0x819: V583 = 0x1
0x81b: V584 = ADD 0x1 S1
0x81d: V585 = 0x20
0x81f: V586 = ADD 0x20 S0
0x822: V587 = GT V577 V586
0x823: V588 = 0x813
0x826: JUMPI 0x813 V587
---
Entry stack: [V11, 0x1da, V549, 0x1, V540, V577, S1, S0]
Stack pops: 3
Stack additions: [S2, V584, V586]
Exit stack: [V11, 0x1da, V549, 0x1, V540, V577, V584, V586]

================================

Block 0x827
[0x827:0x82f]
---
Predecessors: [0x813]
Successors: [0x830]
---
0x827 DUP3
0x828 SWAP1
0x829 SUB
0x82a PUSH1 0x1f
0x82c AND
0x82d DUP3
0x82e ADD
0x82f SWAP2
---
0x829: V589 = SUB V586 V577
0x82a: V590 = 0x1f
0x82c: V591 = AND 0x1f V589
0x82e: V592 = ADD V577 V591
---
Entry stack: [V11, 0x1da, V549, 0x1, V540, V577, V584, V586]
Stack pops: 3
Stack additions: [V592, S1, S2]
Exit stack: [V11, 0x1da, V549, 0x1, V540, V592, V584, V577]

================================

Block 0x830
[0x830:0x837]
---
Predecessors: [0x79a, 0x7f2, 0x827]
Successors: [0x1da]
---
0x830 JUMPDEST
0x831 POP
0x832 POP
0x833 POP
0x834 POP
0x835 POP
0x836 DUP2
0x837 JUMP
---
0x830: JUMPDEST 
0x837: JUMP 0x1da
---
Entry stack: [V11, 0x1da, V549, 0x1, V540, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x1da, V549]

================================

Block 0x838
[0x838:0x843]
---
Predecessors: [0x261]
Successors: [0x2a0]
---
0x838 JUMPDEST
0x839 PUSH1 0x0
0x83b PUSH1 0x1
0x83d SWAP1
0x83e POP
0x83f SWAP3
0x840 SWAP2
0x841 POP
0x842 POP
0x843 JUMP
---
0x838: JUMPDEST 
0x839: V593 = 0x0
0x83b: V594 = 0x1
0x843: JUMP 0x2a0
---
Entry stack: [V11, 0x2a0, V161, V164]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x844
[0x844:0x856]
---
Predecessors: [0x2c6]
Successors: [0x2cf]
---
0x844 JUMPDEST
0x845 PUSH1 0x6
0x847 PUSH1 0x14
0x849 SWAP1
0x84a SLOAD
0x84b SWAP1
0x84c PUSH2 0x100
0x84f EXP
0x850 SWAP1
0x851 DIV
0x852 PUSH1 0xff
0x854 AND
0x855 DUP2
0x856 JUMP
---
0x844: JUMPDEST 
0x845: V595 = 0x6
0x847: V596 = 0x14
0x84a: V597 = S[0x6]
0x84c: V598 = 0x100
0x84f: V599 = EXP 0x100 0x14
0x851: V600 = DIV V597 0x10000000000000000000000000000000000000000
0x852: V601 = 0xff
0x854: V602 = AND 0xff V600
0x856: JUMP 0x2cf
---
Entry stack: [V11, 0x2cf]
Stack pops: 1
Stack additions: [S0, V602]
Exit stack: [V11, 0x2cf, V602]

================================

Block 0x857
[0x857:0x85c]
---
Predecessors: [0x2f5]
Successors: [0x2fe]
---
0x857 JUMPDEST
0x858 PUSH1 0x0
0x85a SLOAD
0x85b DUP2
0x85c JUMP
---
0x857: JUMPDEST 
0x858: V603 = 0x0
0x85a: V604 = S[0x0]
0x85c: JUMP 0x2fe
---
Entry stack: [V11, 0x2fe]
Stack pops: 1
Stack additions: [S0, V604]
Exit stack: [V11, 0x2fe, V604]

================================

Block 0x85d
[0x85d:0x9c3]
---
Predecessors: [0x320]
Successors: [0x37f]
---
0x85d JUMPDEST
0x85e PUSH1 0x0
0x860 PUSH8 0xde0b6b3a7640000
0x869 PUSH1 0x5
0x86b PUSH1 0x0
0x86d CALLER
0x86e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x883 AND
0x884 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x899 AND
0x89a DUP2
0x89b MSTORE
0x89c PUSH1 0x20
0x89e ADD
0x89f SWAP1
0x8a0 DUP2
0x8a1 MSTORE
0x8a2 PUSH1 0x20
0x8a4 ADD
0x8a5 PUSH1 0x0
0x8a7 SHA3
0x8a8 SLOAD
0x8a9 ADD
0x8aa PUSH1 0x5
0x8ac PUSH1 0x0
0x8ae CALLER
0x8af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c4 AND
0x8c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8da AND
0x8db DUP2
0x8dc MSTORE
0x8dd PUSH1 0x20
0x8df ADD
0x8e0 SWAP1
0x8e1 DUP2
0x8e2 MSTORE
0x8e3 PUSH1 0x20
0x8e5 ADD
0x8e6 PUSH1 0x0
0x8e8 SHA3
0x8e9 DUP2
0x8ea SWAP1
0x8eb SSTORE
0x8ec POP
0x8ed PUSH32 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x90e PUSH1 0x40
0x910 MLOAD
0x911 DUP1
0x912 DUP1
0x913 PUSH1 0x20
0x915 ADD
0x916 DUP3
0x917 DUP2
0x918 SUB
0x919 DUP3
0x91a MSTORE
0x91b PUSH1 0x11
0x91d DUP2
0x91e MSTORE
0x91f PUSH1 0x20
0x921 ADD
0x922 DUP1
0x923 PUSH32 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x944 DUP2
0x945 MSTORE
0x946 POP
0x947 PUSH1 0x20
0x949 ADD
0x94a SWAP2
0x94b POP
0x94c POP
0x94d PUSH1 0x40
0x94f MLOAD
0x950 DUP1
0x951 SWAP2
0x952 SUB
0x953 SWAP1
0x954 LOG1
0x955 DUP3
0x956 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96b AND
0x96c CALLER
0x96d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x982 AND
0x983 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x9a4 DUP5
0x9a5 PUSH1 0x40
0x9a7 MLOAD
0x9a8 DUP1
0x9a9 DUP3
0x9aa DUP2
0x9ab MSTORE
0x9ac PUSH1 0x20
0x9ae ADD
0x9af SWAP2
0x9b0 POP
0x9b1 POP
0x9b2 PUSH1 0x40
0x9b4 MLOAD
0x9b5 DUP1
0x9b6 SWAP2
0x9b7 SUB
0x9b8 SWAP1
0x9b9 LOG3
0x9ba PUSH1 0x1
0x9bc SWAP1
0x9bd POP
0x9be SWAP4
0x9bf SWAP3
0x9c0 POP
0x9c1 POP
0x9c2 POP
0x9c3 JUMP
---
0x85d: JUMPDEST 
0x85e: V605 = 0x0
0x860: V606 = 0xde0b6b3a7640000
0x869: V607 = 0x5
0x86b: V608 = 0x0
0x86d: V609 = CALLER
0x86e: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0x883: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0x884: V612 = 0xffffffffffffffffffffffffffffffffffffffff
0x899: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x89b: M[0x0] = V613
0x89c: V614 = 0x20
0x89e: V615 = ADD 0x20 0x0
0x8a1: M[0x20] = 0x5
0x8a2: V616 = 0x20
0x8a4: V617 = ADD 0x20 0x20
0x8a5: V618 = 0x0
0x8a7: V619 = SHA3 0x0 0x40
0x8a8: V620 = S[V619]
0x8a9: V621 = ADD V620 0xde0b6b3a7640000
0x8aa: V622 = 0x5
0x8ac: V623 = 0x0
0x8ae: V624 = CALLER
0x8af: V625 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c4: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x8c5: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0x8da: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V626
0x8dc: M[0x0] = V628
0x8dd: V629 = 0x20
0x8df: V630 = ADD 0x20 0x0
0x8e2: M[0x20] = 0x5
0x8e3: V631 = 0x20
0x8e5: V632 = ADD 0x20 0x20
0x8e6: V633 = 0x0
0x8e8: V634 = SHA3 0x0 0x40
0x8eb: S[V634] = V621
0x8ed: V635 = 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x90e: V636 = 0x40
0x910: V637 = M[0x40]
0x913: V638 = 0x20
0x915: V639 = ADD 0x20 V637
0x918: V640 = SUB V639 V637
0x91a: M[V637] = V640
0x91b: V641 = 0x11
0x91e: M[V639] = 0x11
0x91f: V642 = 0x20
0x921: V643 = ADD 0x20 V639
0x923: V644 = 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x945: M[V643] = 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x947: V645 = 0x20
0x949: V646 = ADD 0x20 V643
0x94d: V647 = 0x40
0x94f: V648 = M[0x40]
0x952: V649 = SUB V646 V648
0x954: LOG V648 V649 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x956: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0x96b: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x96c: V652 = CALLER
0x96d: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0x982: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0x983: V655 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x9a5: V656 = 0x40
0x9a7: V657 = M[0x40]
0x9ab: M[V657] = V228
0x9ac: V658 = 0x20
0x9ae: V659 = ADD 0x20 V657
0x9b2: V660 = 0x40
0x9b4: V661 = M[0x40]
0x9b7: V662 = SUB V659 V661
0x9b9: LOG V661 V662 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V654 V651
0x9ba: V663 = 0x1
0x9c3: JUMP 0x37f
---
Entry stack: [V11, 0x37f, V220, V225, V228]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x9c4
[0x9c4:0x9d6]
---
Predecessors: [0x3a5]
Successors: [0x3ae]
---
0x9c4 JUMPDEST
0x9c5 PUSH1 0x2
0x9c7 PUSH1 0x0
0x9c9 SWAP1
0x9ca SLOAD
0x9cb SWAP1
0x9cc PUSH2 0x100
0x9cf EXP
0x9d0 SWAP1
0x9d1 DIV
0x9d2 PUSH1 0xff
0x9d4 AND
0x9d5 DUP2
0x9d6 JUMP
---
0x9c4: JUMPDEST 
0x9c5: V664 = 0x2
0x9c7: V665 = 0x0
0x9ca: V666 = S[0x2]
0x9cc: V667 = 0x100
0x9cf: V668 = EXP 0x100 0x0
0x9d1: V669 = DIV V666 0x1
0x9d2: V670 = 0xff
0x9d4: V671 = AND 0xff V669
0x9d6: JUMP 0x3ae
---
Entry stack: [V11, 0x3ae]
Stack pops: 1
Stack additions: [S0, V671]
Exit stack: [V11, 0x3ae, V671]

================================

Block 0x9d7
[0x9d7:0xa99]
---
Predecessors: [0x3d6]
Successors: [0xa9a, 0xa9e]
---
0x9d7 JUMPDEST
0x9d8 PUSH1 0x0
0x9da DUP3
0x9db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f0 AND
0x9f1 PUSH4 0xa9059cbb
0x9f6 PUSH1 0x6
0x9f8 PUSH1 0x0
0x9fa SWAP1
0x9fb SLOAD
0x9fc SWAP1
0x9fd PUSH2 0x100
0xa00 EXP
0xa01 SWAP1
0xa02 DIV
0xa03 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa18 AND
0xa19 DUP5
0xa1a PUSH1 0x40
0xa1c MLOAD
0xa1d DUP4
0xa1e PUSH4 0xffffffff
0xa23 AND
0xa24 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa42 MUL
0xa43 DUP2
0xa44 MSTORE
0xa45 PUSH1 0x4
0xa47 ADD
0xa48 DUP1
0xa49 DUP4
0xa4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5f AND
0xa60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa75 AND
0xa76 DUP2
0xa77 MSTORE
0xa78 PUSH1 0x20
0xa7a ADD
0xa7b DUP3
0xa7c DUP2
0xa7d MSTORE
0xa7e PUSH1 0x20
0xa80 ADD
0xa81 SWAP3
0xa82 POP
0xa83 POP
0xa84 POP
0xa85 PUSH1 0x20
0xa87 PUSH1 0x40
0xa89 MLOAD
0xa8a DUP1
0xa8b DUP4
0xa8c SUB
0xa8d DUP2
0xa8e PUSH1 0x0
0xa90 DUP8
0xa91 DUP1
0xa92 EXTCODESIZE
0xa93 ISZERO
0xa94 DUP1
0xa95 ISZERO
0xa96 PUSH2 0xa9e
0xa99 JUMPI
---
0x9d7: JUMPDEST 
0x9d8: V672 = 0x0
0x9db: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f0: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x9f1: V675 = 0xa9059cbb
0x9f6: V676 = 0x6
0x9f8: V677 = 0x0
0x9fb: V678 = S[0x6]
0x9fd: V679 = 0x100
0xa00: V680 = EXP 0x100 0x0
0xa02: V681 = DIV V678 0x1
0xa03: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0xa18: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0xa1a: V684 = 0x40
0xa1c: V685 = M[0x40]
0xa1e: V686 = 0xffffffff
0xa23: V687 = AND 0xffffffff 0xa9059cbb
0xa24: V688 = 0x100000000000000000000000000000000000000000000000000000000
0xa42: V689 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xa44: M[V685] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa45: V690 = 0x4
0xa47: V691 = ADD 0x4 V685
0xa4a: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5f: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0xa60: V694 = 0xffffffffffffffffffffffffffffffffffffffff
0xa75: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0xa77: M[V691] = V695
0xa78: V696 = 0x20
0xa7a: V697 = ADD 0x20 V691
0xa7d: M[V697] = V274
0xa7e: V698 = 0x20
0xa80: V699 = ADD 0x20 V697
0xa85: V700 = 0x20
0xa87: V701 = 0x40
0xa89: V702 = M[0x40]
0xa8c: V703 = SUB V699 V702
0xa8e: V704 = 0x0
0xa92: V705 = EXTCODESIZE V674
0xa93: V706 = ISZERO V705
0xa95: V707 = ISZERO V706
0xa96: V708 = 0xa9e
0xa99: JUMPI 0xa9e V707
---
Entry stack: [V11, 0x415, V271, V274]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V674, 0xa9059cbb, V699, 0x20, V702, V703, V702, 0x0, V674, V706]
Exit stack: [V11, 0x415, V271, V274, 0x0, V674, 0xa9059cbb, V699, 0x20, V702, V703, V702, 0x0, V674, V706]

================================

Block 0xa9a
[0xa9a:0xa9d]
---
Predecessors: [0x9d7]
Successors: []
---
0xa9a PUSH1 0x0
0xa9c DUP1
0xa9d REVERT
---
0xa9a: V709 = 0x0
0xa9d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x415, V271, V274, 0x0, V674, 0xa9059cbb, V699, 0x20, V702, V703, V702, 0x0, V674, V706]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x415, V271, V274, 0x0, V674, 0xa9059cbb, V699, 0x20, V702, V703, V702, 0x0, V674, V706]

================================

Block 0xa9e
[0xa9e:0xaa8]
---
Predecessors: [0x9d7]
Successors: [0xaa9, 0xab2]
---
0xa9e JUMPDEST
0xa9f POP
0xaa0 GAS
0xaa1 CALL
0xaa2 ISZERO
0xaa3 DUP1
0xaa4 ISZERO
0xaa5 PUSH2 0xab2
0xaa8 JUMPI
---
0xa9e: JUMPDEST 
0xaa0: V710 = GAS
0xaa1: V711 = CALL V710 V674 0x0 V702 V703 V702 0x20
0xaa2: V712 = ISZERO V711
0xaa4: V713 = ISZERO V712
0xaa5: V714 = 0xab2
0xaa8: JUMPI 0xab2 V713
---
Entry stack: [V11, 0x415, V271, V274, 0x0, V674, 0xa9059cbb, V699, 0x20, V702, V703, V702, 0x0, V674, V706]
Stack pops: 7
Stack additions: [V712]
Exit stack: [V11, 0x415, V271, V274, 0x0, V674, 0xa9059cbb, V699, V712]

================================

Block 0xaa9
[0xaa9:0xab1]
---
Predecessors: [0xa9e]
Successors: []
---
0xaa9 RETURNDATASIZE
0xaaa PUSH1 0x0
0xaac DUP1
0xaad RETURNDATACOPY
0xaae RETURNDATASIZE
0xaaf PUSH1 0x0
0xab1 REVERT
---
0xaa9: V715 = RETURNDATASIZE
0xaaa: V716 = 0x0
0xaad: RETURNDATACOPY 0x0 0x0 V715
0xaae: V717 = RETURNDATASIZE
0xaaf: V718 = 0x0
0xab1: REVERT 0x0 V717
---
Entry stack: [V11, 0x415, V271, V274, 0x0, V674, 0xa9059cbb, V699, V712]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x415, V271, V274, 0x0, V674, 0xa9059cbb, V699, V712]

================================

Block 0xab2
[0xab2:0xac3]
---
Predecessors: [0xa9e]
Successors: [0xac4, 0xac8]
---
0xab2 JUMPDEST
0xab3 POP
0xab4 POP
0xab5 POP
0xab6 POP
0xab7 PUSH1 0x40
0xab9 MLOAD
0xaba RETURNDATASIZE
0xabb PUSH1 0x20
0xabd DUP2
0xabe LT
0xabf ISZERO
0xac0 PUSH2 0xac8
0xac3 JUMPI
---
0xab2: JUMPDEST 
0xab7: V719 = 0x40
0xab9: V720 = M[0x40]
0xaba: V721 = RETURNDATASIZE
0xabb: V722 = 0x20
0xabe: V723 = LT V721 0x20
0xabf: V724 = ISZERO V723
0xac0: V725 = 0xac8
0xac3: JUMPI 0xac8 V724
---
Entry stack: [V11, 0x415, V271, V274, 0x0, V674, 0xa9059cbb, V699, V712]
Stack pops: 4
Stack additions: [V720, V721]
Exit stack: [V11, 0x415, V271, V274, 0x0, V720, V721]

================================

Block 0xac4
[0xac4:0xac7]
---
Predecessors: [0xab2]
Successors: []
---
0xac4 PUSH1 0x0
0xac6 DUP1
0xac7 REVERT
---
0xac4: V726 = 0x0
0xac7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x415, V271, V274, 0x0, V720, V721]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x415, V271, V274, 0x0, V720, V721]

================================

Block 0xac8
[0xac8:0xae0]
---
Predecessors: [0xab2]
Successors: [0x415]
---
0xac8 JUMPDEST
0xac9 DUP2
0xaca ADD
0xacb SWAP1
0xacc DUP1
0xacd DUP1
0xace MLOAD
0xacf SWAP1
0xad0 PUSH1 0x20
0xad2 ADD
0xad3 SWAP1
0xad4 SWAP3
0xad5 SWAP2
0xad6 SWAP1
0xad7 POP
0xad8 POP
0xad9 POP
0xada SWAP1
0xadb POP
0xadc SWAP3
0xadd SWAP2
0xade POP
0xadf POP
0xae0 JUMP
---
0xac8: JUMPDEST 
0xaca: V727 = ADD V720 V721
0xace: V728 = M[V720]
0xad0: V729 = 0x20
0xad2: V730 = ADD 0x20 V720
0xae0: JUMP 0x415
---
Entry stack: [V11, 0x415, V271, V274, 0x0, V720, V721]
Stack pops: 6
Stack additions: [V728]
Exit stack: [V11, V728]

================================

Block 0xae1
[0xae1:0xaf8]
---
Predecessors: [0x43b]
Successors: [0xaf9, 0xb95]
---
0xae1 JUMPDEST
0xae2 PUSH1 0x0
0xae4 PUSH1 0x6
0xae6 PUSH1 0x14
0xae8 SWAP1
0xae9 SLOAD
0xaea SWAP1
0xaeb PUSH2 0x100
0xaee EXP
0xaef SWAP1
0xaf0 DIV
0xaf1 PUSH1 0xff
0xaf3 AND
0xaf4 ISZERO
0xaf5 PUSH2 0xb95
0xaf8 JUMPI
---
0xae1: JUMPDEST 
0xae2: V731 = 0x0
0xae4: V732 = 0x6
0xae6: V733 = 0x14
0xae9: V734 = S[0x6]
0xaeb: V735 = 0x100
0xaee: V736 = EXP 0x100 0x14
0xaf0: V737 = DIV V734 0x10000000000000000000000000000000000000000
0xaf1: V738 = 0xff
0xaf3: V739 = AND 0xff V737
0xaf4: V740 = ISZERO V739
0xaf5: V741 = 0xb95
0xaf8: JUMPI 0xb95 V740
---
Entry stack: [V11, 0x470, V300]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x470, V300, 0x0]

================================

Block 0xaf9
[0xaf9:0xb40]
---
Predecessors: [0xae1]
Successors: [0xb41, 0xb8b]
---
0xaf9 PUSH1 0x0
0xafb PUSH1 0x5
0xafd PUSH1 0x0
0xaff DUP5
0xb00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb15 AND
0xb16 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2b AND
0xb2c DUP2
0xb2d MSTORE
0xb2e PUSH1 0x20
0xb30 ADD
0xb31 SWAP1
0xb32 DUP2
0xb33 MSTORE
0xb34 PUSH1 0x20
0xb36 ADD
0xb37 PUSH1 0x0
0xb39 SHA3
0xb3a SLOAD
0xb3b GT
0xb3c ISZERO
0xb3d PUSH2 0xb8b
0xb40 JUMPI
---
0xaf9: V742 = 0x0
0xafb: V743 = 0x5
0xafd: V744 = 0x0
0xb00: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xb15: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0xb16: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2b: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xb2d: M[0x0] = V748
0xb2e: V749 = 0x20
0xb30: V750 = ADD 0x20 0x0
0xb33: M[0x20] = 0x5
0xb34: V751 = 0x20
0xb36: V752 = ADD 0x20 0x20
0xb37: V753 = 0x0
0xb39: V754 = SHA3 0x0 0x40
0xb3a: V755 = S[V754]
0xb3b: V756 = GT V755 0x0
0xb3c: V757 = ISZERO V756
0xb3d: V758 = 0xb8b
0xb40: JUMPI 0xb8b V757
---
Entry stack: [V11, 0x470, V300, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x470, V300, 0x0]

================================

Block 0xb41
[0xb41:0xb8a]
---
Predecessors: [0xaf9]
Successors: [0xb9a]
---
0xb41 PUSH1 0x5
0xb43 PUSH1 0x0
0xb45 DUP4
0xb46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5b AND
0xb5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb71 AND
0xb72 DUP2
0xb73 MSTORE
0xb74 PUSH1 0x20
0xb76 ADD
0xb77 SWAP1
0xb78 DUP2
0xb79 MSTORE
0xb7a PUSH1 0x20
0xb7c ADD
0xb7d PUSH1 0x0
0xb7f SHA3
0xb80 SLOAD
0xb81 PUSH1 0x4
0xb83 SLOAD
0xb84 ADD
0xb85 SWAP1
0xb86 POP
0xb87 PUSH2 0xb9a
0xb8a JUMP
---
0xb41: V759 = 0x5
0xb43: V760 = 0x0
0xb46: V761 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5b: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0xb5c: V763 = 0xffffffffffffffffffffffffffffffffffffffff
0xb71: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0xb73: M[0x0] = V764
0xb74: V765 = 0x20
0xb76: V766 = ADD 0x20 0x0
0xb79: M[0x20] = 0x5
0xb7a: V767 = 0x20
0xb7c: V768 = ADD 0x20 0x20
0xb7d: V769 = 0x0
0xb7f: V770 = SHA3 0x0 0x40
0xb80: V771 = S[V770]
0xb81: V772 = 0x4
0xb83: V773 = S[0x4]
0xb84: V774 = ADD V773 V771
0xb87: V775 = 0xb9a
0xb8a: JUMP 0xb9a
---
Entry stack: [V11, 0x470, V300, 0x0]
Stack pops: 2
Stack additions: [S1, V774]
Exit stack: [V11, 0x470, V300, V774]

================================

Block 0xb8b
[0xb8b:0xb94]
---
Predecessors: [0xaf9]
Successors: [0xb9a]
---
0xb8b JUMPDEST
0xb8c PUSH1 0x4
0xb8e SLOAD
0xb8f SWAP1
0xb90 POP
0xb91 PUSH2 0xb9a
0xb94 JUMP
---
0xb8b: JUMPDEST 
0xb8c: V776 = 0x4
0xb8e: V777 = S[0x4]
0xb91: V778 = 0xb9a
0xb94: JUMP 0xb9a
---
Entry stack: [V11, 0x470, V300, 0x0]
Stack pops: 1
Stack additions: [V777]
Exit stack: [V11, 0x470, V300, V777]

================================

Block 0xb95
[0xb95:0xb99]
---
Predecessors: [0xae1]
Successors: [0xb9a]
---
0xb95 JUMPDEST
0xb96 PUSH1 0x0
0xb98 SWAP1
0xb99 POP
---
0xb95: JUMPDEST 
0xb96: V779 = 0x0
---
Entry stack: [V11, 0x470, V300, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x470, V300, 0x0]

================================

Block 0xb9a
[0xb9a:0xb9e]
---
Predecessors: [0xb41, 0xb8b, 0xb95]
Successors: [0x470]
---
0xb9a JUMPDEST
0xb9b SWAP2
0xb9c SWAP1
0xb9d POP
0xb9e JUMP
---
0xb9a: JUMPDEST 
0xb9e: JUMP 0x470
---
Entry stack: [V11, 0x470, V300, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0xb9f
[0xb9f:0xba4]
---
Predecessors: [0x492]
Successors: [0x49b]
---
0xb9f JUMPDEST
0xba0 PUSH1 0x4
0xba2 SLOAD
0xba3 DUP2
0xba4 JUMP
---
0xb9f: JUMPDEST 
0xba0: V780 = 0x4
0xba2: V781 = S[0x4]
0xba4: JUMP 0x49b
---
Entry stack: [V11, 0x49b]
Stack pops: 1
Stack additions: [S0, V781]
Exit stack: [V11, 0x49b, V781]

================================

Block 0xba5
[0xba5:0xbca]
---
Predecessors: [0x4bd]
Successors: [0x4c6]
---
0xba5 JUMPDEST
0xba6 PUSH1 0x6
0xba8 PUSH1 0x0
0xbaa SWAP1
0xbab SLOAD
0xbac SWAP1
0xbad PUSH2 0x100
0xbb0 EXP
0xbb1 SWAP1
0xbb2 DIV
0xbb3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc8 AND
0xbc9 DUP2
0xbca JUMP
---
0xba5: JUMPDEST 
0xba6: V782 = 0x6
0xba8: V783 = 0x0
0xbab: V784 = S[0x6]
0xbad: V785 = 0x100
0xbb0: V786 = EXP 0x100 0x0
0xbb2: V787 = DIV V784 0x1
0xbb3: V788 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc8: V789 = AND 0xffffffffffffffffffffffffffffffffffffffff V787
0xbca: JUMP 0x4c6
---
Entry stack: [V11, 0x4c6]
Stack pops: 1
Stack additions: [S0, V789]
Exit stack: [V11, 0x4c6, V789]

================================

Block 0xbcb
[0xbcb:0xc1a]
---
Predecessors: [0x514]
Successors: [0xc1b, 0xc61]
---
0xbcb JUMPDEST
0xbcc PUSH1 0x3
0xbce DUP1
0xbcf SLOAD
0xbd0 PUSH1 0x1
0xbd2 DUP2
0xbd3 PUSH1 0x1
0xbd5 AND
0xbd6 ISZERO
0xbd7 PUSH2 0x100
0xbda MUL
0xbdb SUB
0xbdc AND
0xbdd PUSH1 0x2
0xbdf SWAP1
0xbe0 DIV
0xbe1 DUP1
0xbe2 PUSH1 0x1f
0xbe4 ADD
0xbe5 PUSH1 0x20
0xbe7 DUP1
0xbe8 SWAP2
0xbe9 DIV
0xbea MUL
0xbeb PUSH1 0x20
0xbed ADD
0xbee PUSH1 0x40
0xbf0 MLOAD
0xbf1 SWAP1
0xbf2 DUP2
0xbf3 ADD
0xbf4 PUSH1 0x40
0xbf6 MSTORE
0xbf7 DUP1
0xbf8 SWAP3
0xbf9 SWAP2
0xbfa SWAP1
0xbfb DUP2
0xbfc DUP2
0xbfd MSTORE
0xbfe PUSH1 0x20
0xc00 ADD
0xc01 DUP3
0xc02 DUP1
0xc03 SLOAD
0xc04 PUSH1 0x1
0xc06 DUP2
0xc07 PUSH1 0x1
0xc09 AND
0xc0a ISZERO
0xc0b PUSH2 0x100
0xc0e MUL
0xc0f SUB
0xc10 AND
0xc11 PUSH1 0x2
0xc13 SWAP1
0xc14 DIV
0xc15 DUP1
0xc16 ISZERO
0xc17 PUSH2 0xc61
0xc1a JUMPI
---
0xbcb: JUMPDEST 
0xbcc: V790 = 0x3
0xbcf: V791 = S[0x3]
0xbd0: V792 = 0x1
0xbd3: V793 = 0x1
0xbd5: V794 = AND 0x1 V791
0xbd6: V795 = ISZERO V794
0xbd7: V796 = 0x100
0xbda: V797 = MUL 0x100 V795
0xbdb: V798 = SUB V797 0x1
0xbdc: V799 = AND V798 V791
0xbdd: V800 = 0x2
0xbe0: V801 = DIV V799 0x2
0xbe2: V802 = 0x1f
0xbe4: V803 = ADD 0x1f V801
0xbe5: V804 = 0x20
0xbe9: V805 = DIV V803 0x20
0xbea: V806 = MUL V805 0x20
0xbeb: V807 = 0x20
0xbed: V808 = ADD 0x20 V806
0xbee: V809 = 0x40
0xbf0: V810 = M[0x40]
0xbf3: V811 = ADD V810 V808
0xbf4: V812 = 0x40
0xbf6: M[0x40] = V811
0xbfd: M[V810] = V801
0xbfe: V813 = 0x20
0xc00: V814 = ADD 0x20 V810
0xc03: V815 = S[0x3]
0xc04: V816 = 0x1
0xc07: V817 = 0x1
0xc09: V818 = AND 0x1 V815
0xc0a: V819 = ISZERO V818
0xc0b: V820 = 0x100
0xc0e: V821 = MUL 0x100 V819
0xc0f: V822 = SUB V821 0x1
0xc10: V823 = AND V822 V815
0xc11: V824 = 0x2
0xc14: V825 = DIV V823 0x2
0xc16: V826 = ISZERO V825
0xc17: V827 = 0xc61
0xc1a: JUMPI 0xc61 V826
---
Entry stack: [V11, 0x51d]
Stack pops: 0
Stack additions: [V810, 0x3, V801, V814, 0x3, V825]
Exit stack: [V11, 0x51d, V810, 0x3, V801, V814, 0x3, V825]

================================

Block 0xc1b
[0xc1b:0xc22]
---
Predecessors: [0xbcb]
Successors: [0xc23, 0xc36]
---
0xc1b DUP1
0xc1c PUSH1 0x1f
0xc1e LT
0xc1f PUSH2 0xc36
0xc22 JUMPI
---
0xc1c: V828 = 0x1f
0xc1e: V829 = LT 0x1f V825
0xc1f: V830 = 0xc36
0xc22: JUMPI 0xc36 V829
---
Entry stack: [V11, 0x51d, V810, 0x3, V801, V814, 0x3, V825]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x51d, V810, 0x3, V801, V814, 0x3, V825]

================================

Block 0xc23
[0xc23:0xc35]
---
Predecessors: [0xc1b]
Successors: [0xc61]
---
0xc23 PUSH2 0x100
0xc26 DUP1
0xc27 DUP4
0xc28 SLOAD
0xc29 DIV
0xc2a MUL
0xc2b DUP4
0xc2c MSTORE
0xc2d SWAP2
0xc2e PUSH1 0x20
0xc30 ADD
0xc31 SWAP2
0xc32 PUSH2 0xc61
0xc35 JUMP
---
0xc23: V831 = 0x100
0xc28: V832 = S[0x3]
0xc29: V833 = DIV V832 0x100
0xc2a: V834 = MUL V833 0x100
0xc2c: M[V814] = V834
0xc2e: V835 = 0x20
0xc30: V836 = ADD 0x20 V814
0xc32: V837 = 0xc61
0xc35: JUMP 0xc61
---
Entry stack: [V11, 0x51d, V810, 0x3, V801, V814, 0x3, V825]
Stack pops: 3
Stack additions: [V836, S1, S0]
Exit stack: [V11, 0x51d, V810, 0x3, V801, V836, 0x3, V825]

================================

Block 0xc36
[0xc36:0xc43]
---
Predecessors: [0xc1b]
Successors: [0xc44]
---
0xc36 JUMPDEST
0xc37 DUP3
0xc38 ADD
0xc39 SWAP2
0xc3a SWAP1
0xc3b PUSH1 0x0
0xc3d MSTORE
0xc3e PUSH1 0x20
0xc40 PUSH1 0x0
0xc42 SHA3
0xc43 SWAP1
---
0xc36: JUMPDEST 
0xc38: V838 = ADD V814 V825
0xc3b: V839 = 0x0
0xc3d: M[0x0] = 0x3
0xc3e: V840 = 0x20
0xc40: V841 = 0x0
0xc42: V842 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x51d, V810, 0x3, V801, V814, 0x3, V825]
Stack pops: 3
Stack additions: [V838, V842, S2]
Exit stack: [V11, 0x51d, V810, 0x3, V801, V838, V842, V814]

================================

Block 0xc44
[0xc44:0xc57]
---
Predecessors: [0xc36, 0xc44]
Successors: [0xc44, 0xc58]
---
0xc44 JUMPDEST
0xc45 DUP2
0xc46 SLOAD
0xc47 DUP2
0xc48 MSTORE
0xc49 SWAP1
0xc4a PUSH1 0x1
0xc4c ADD
0xc4d SWAP1
0xc4e PUSH1 0x20
0xc50 ADD
0xc51 DUP1
0xc52 DUP4
0xc53 GT
0xc54 PUSH2 0xc44
0xc57 JUMPI
---
0xc44: JUMPDEST 
0xc46: V843 = S[S1]
0xc48: M[S0] = V843
0xc4a: V844 = 0x1
0xc4c: V845 = ADD 0x1 S1
0xc4e: V846 = 0x20
0xc50: V847 = ADD 0x20 S0
0xc53: V848 = GT V838 V847
0xc54: V849 = 0xc44
0xc57: JUMPI 0xc44 V848
---
Entry stack: [V11, 0x51d, V810, 0x3, V801, V838, S1, S0]
Stack pops: 3
Stack additions: [S2, V845, V847]
Exit stack: [V11, 0x51d, V810, 0x3, V801, V838, V845, V847]

================================

Block 0xc58
[0xc58:0xc60]
---
Predecessors: [0xc44]
Successors: [0xc61]
---
0xc58 DUP3
0xc59 SWAP1
0xc5a SUB
0xc5b PUSH1 0x1f
0xc5d AND
0xc5e DUP3
0xc5f ADD
0xc60 SWAP2
---
0xc5a: V850 = SUB V847 V838
0xc5b: V851 = 0x1f
0xc5d: V852 = AND 0x1f V850
0xc5f: V853 = ADD V838 V852
---
Entry stack: [V11, 0x51d, V810, 0x3, V801, V838, V845, V847]
Stack pops: 3
Stack additions: [V853, S1, S2]
Exit stack: [V11, 0x51d, V810, 0x3, V801, V853, V845, V838]

================================

Block 0xc61
[0xc61:0xc68]
---
Predecessors: [0xbcb, 0xc23, 0xc58]
Successors: [0x51d]
---
0xc61 JUMPDEST
0xc62 POP
0xc63 POP
0xc64 POP
0xc65 POP
0xc66 POP
0xc67 DUP2
0xc68 JUMP
---
0xc61: JUMPDEST 
0xc68: JUMP 0x51d
---
Entry stack: [V11, 0x51d, V810, 0x3, V801, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x51d, V810]

================================

Block 0xc69
[0xc69:0xdce]
---
Predecessors: [0x5a4]
Successors: [0x5e3]
---
0xc69 JUMPDEST
0xc6a PUSH1 0x0
0xc6c PUSH8 0xde0b6b3a7640000
0xc75 PUSH1 0x5
0xc77 PUSH1 0x0
0xc79 CALLER
0xc7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8f AND
0xc90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca5 AND
0xca6 DUP2
0xca7 MSTORE
0xca8 PUSH1 0x20
0xcaa ADD
0xcab SWAP1
0xcac DUP2
0xcad MSTORE
0xcae PUSH1 0x20
0xcb0 ADD
0xcb1 PUSH1 0x0
0xcb3 SHA3
0xcb4 SLOAD
0xcb5 ADD
0xcb6 PUSH1 0x5
0xcb8 PUSH1 0x0
0xcba CALLER
0xcbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd0 AND
0xcd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce6 AND
0xce7 DUP2
0xce8 MSTORE
0xce9 PUSH1 0x20
0xceb ADD
0xcec SWAP1
0xced DUP2
0xcee MSTORE
0xcef PUSH1 0x20
0xcf1 ADD
0xcf2 PUSH1 0x0
0xcf4 SHA3
0xcf5 DUP2
0xcf6 SWAP1
0xcf7 SSTORE
0xcf8 POP
0xcf9 PUSH32 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0xd1a PUSH1 0x40
0xd1c MLOAD
0xd1d DUP1
0xd1e DUP1
0xd1f PUSH1 0x20
0xd21 ADD
0xd22 DUP3
0xd23 DUP2
0xd24 SUB
0xd25 DUP3
0xd26 MSTORE
0xd27 PUSH1 0x11
0xd29 DUP2
0xd2a MSTORE
0xd2b PUSH1 0x20
0xd2d ADD
0xd2e DUP1
0xd2f PUSH32 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0xd50 DUP2
0xd51 MSTORE
0xd52 POP
0xd53 PUSH1 0x20
0xd55 ADD
0xd56 SWAP2
0xd57 POP
0xd58 POP
0xd59 PUSH1 0x40
0xd5b MLOAD
0xd5c DUP1
0xd5d SWAP2
0xd5e SUB
0xd5f SWAP1
0xd60 LOG1
0xd61 DUP3
0xd62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd77 AND
0xd78 CALLER
0xd79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8e AND
0xd8f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdb0 DUP5
0xdb1 PUSH1 0x40
0xdb3 MLOAD
0xdb4 DUP1
0xdb5 DUP3
0xdb6 DUP2
0xdb7 MSTORE
0xdb8 PUSH1 0x20
0xdba ADD
0xdbb SWAP2
0xdbc POP
0xdbd POP
0xdbe PUSH1 0x40
0xdc0 MLOAD
0xdc1 DUP1
0xdc2 SWAP2
0xdc3 SUB
0xdc4 SWAP1
0xdc5 LOG3
0xdc6 PUSH1 0x1
0xdc8 SWAP1
0xdc9 POP
0xdca SWAP3
0xdcb SWAP2
0xdcc POP
0xdcd POP
0xdce JUMP
---
0xc69: JUMPDEST 
0xc6a: V854 = 0x0
0xc6c: V855 = 0xde0b6b3a7640000
0xc75: V856 = 0x5
0xc77: V857 = 0x0
0xc79: V858 = CALLER
0xc7a: V859 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8f: V860 = AND 0xffffffffffffffffffffffffffffffffffffffff V858
0xc90: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0xca5: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V860
0xca7: M[0x0] = V862
0xca8: V863 = 0x20
0xcaa: V864 = ADD 0x20 0x0
0xcad: M[0x20] = 0x5
0xcae: V865 = 0x20
0xcb0: V866 = ADD 0x20 0x20
0xcb1: V867 = 0x0
0xcb3: V868 = SHA3 0x0 0x40
0xcb4: V869 = S[V868]
0xcb5: V870 = ADD V869 0xde0b6b3a7640000
0xcb6: V871 = 0x5
0xcb8: V872 = 0x0
0xcba: V873 = CALLER
0xcbb: V874 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd0: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xcd1: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0xce6: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0xce8: M[0x0] = V877
0xce9: V878 = 0x20
0xceb: V879 = ADD 0x20 0x0
0xcee: M[0x20] = 0x5
0xcef: V880 = 0x20
0xcf1: V881 = ADD 0x20 0x20
0xcf2: V882 = 0x0
0xcf4: V883 = SHA3 0x0 0x40
0xcf7: S[V883] = V870
0xcf9: V884 = 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0xd1a: V885 = 0x40
0xd1c: V886 = M[0x40]
0xd1f: V887 = 0x20
0xd21: V888 = ADD 0x20 V886
0xd24: V889 = SUB V888 V886
0xd26: M[V886] = V889
0xd27: V890 = 0x11
0xd2a: M[V888] = 0x11
0xd2b: V891 = 0x20
0xd2d: V892 = ADD 0x20 V888
0xd2f: V893 = 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0xd51: M[V892] = 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0xd53: V894 = 0x20
0xd55: V895 = ADD 0x20 V892
0xd59: V896 = 0x40
0xd5b: V897 = M[0x40]
0xd5e: V898 = SUB V895 V897
0xd60: LOG V897 V898 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0xd62: V899 = 0xffffffffffffffffffffffffffffffffffffffff
0xd77: V900 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0xd78: V901 = CALLER
0xd79: V902 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8e: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0xd8f: V904 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdb1: V905 = 0x40
0xdb3: V906 = M[0x40]
0xdb7: M[V906] = V402
0xdb8: V907 = 0x20
0xdba: V908 = ADD 0x20 V906
0xdbe: V909 = 0x40
0xdc0: V910 = M[0x40]
0xdc3: V911 = SUB V908 V910
0xdc5: LOG V910 V911 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V903 V900
0xdc6: V912 = 0x1
0xdce: JUMP 0x5e3
---
Entry stack: [V11, 0x5e3, V399, V402]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xdcf
[0xdcf:0xde6]
---
Predecessors: [0x609]
Successors: [0x63e]
---
0xdcf JUMPDEST
0xdd0 PUSH1 0x5
0xdd2 PUSH1 0x20
0xdd4 MSTORE
0xdd5 DUP1
0xdd6 PUSH1 0x0
0xdd8 MSTORE
0xdd9 PUSH1 0x40
0xddb PUSH1 0x0
0xddd SHA3
0xdde PUSH1 0x0
0xde0 SWAP2
0xde1 POP
0xde2 SWAP1
0xde3 POP
0xde4 SLOAD
0xde5 DUP2
0xde6 JUMP
---
0xdcf: JUMPDEST 
0xdd0: V913 = 0x5
0xdd2: V914 = 0x20
0xdd4: M[0x20] = 0x5
0xdd6: V915 = 0x0
0xdd8: M[0x0] = V428
0xdd9: V916 = 0x40
0xddb: V917 = 0x0
0xddd: V918 = SHA3 0x0 0x40
0xdde: V919 = 0x0
0xde4: V920 = S[V918]
0xde6: JUMP 0x63e
---
Entry stack: [V11, 0x63e, V428]
Stack pops: 2
Stack additions: [S1, V920]
Exit stack: [V11, 0x63e, V920]

================================

Block 0xde7
[0xde7:0xdf1]
---
Predecessors: [0x660]
Successors: [0x6b5]
---
0xde7 JUMPDEST
0xde8 PUSH1 0x0
0xdea DUP1
0xdeb SWAP1
0xdec POP
0xded SWAP3
0xdee SWAP2
0xdef POP
0xdf0 POP
0xdf1 JUMP
---
0xde7: JUMPDEST 
0xde8: V921 = 0x0
0xdf1: JUMP 0x6b5
---
Entry stack: [V11, 0x6b5, V450, V455]
Stack pops: 3
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xdf2
[0xdf2:0xe49]
---
Predecessors: [0x6d7]
Successors: [0xe4a, 0xe4e]
---
0xdf2 JUMPDEST
0xdf3 CALLER
0xdf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe09 AND
0xe0a PUSH1 0x6
0xe0c PUSH1 0x0
0xe0e SWAP1
0xe0f SLOAD
0xe10 SWAP1
0xe11 PUSH2 0x100
0xe14 EXP
0xe15 SWAP1
0xe16 DIV
0xe17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe2c AND
0xe2d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe42 AND
0xe43 EQ
0xe44 ISZERO
0xe45 ISZERO
0xe46 PUSH2 0xe4e
0xe49 JUMPI
---
0xdf2: JUMPDEST 
0xdf3: V922 = CALLER
0xdf4: V923 = 0xffffffffffffffffffffffffffffffffffffffff
0xe09: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0xe0a: V925 = 0x6
0xe0c: V926 = 0x0
0xe0f: V927 = S[0x6]
0xe11: V928 = 0x100
0xe14: V929 = EXP 0x100 0x0
0xe16: V930 = DIV V927 0x1
0xe17: V931 = 0xffffffffffffffffffffffffffffffffffffffff
0xe2c: V932 = AND 0xffffffffffffffffffffffffffffffffffffffff V930
0xe2d: V933 = 0xffffffffffffffffffffffffffffffffffffffff
0xe42: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff V932
0xe43: V935 = EQ V934 V924
0xe44: V936 = ISZERO V935
0xe45: V937 = ISZERO V936
0xe46: V938 = 0xe4e
0xe49: JUMPI 0xe4e V937
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525]

================================

Block 0xe4a
[0xe4a:0xe4d]
---
Predecessors: [0xdf2]
Successors: []
---
0xe4a PUSH1 0x0
0xe4c DUP1
0xe4d REVERT
---
0xe4a: V939 = 0x0
0xe4d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525]

================================

Block 0xe4e
[0xe4e:0xe63]
---
Predecessors: [0xdf2]
Successors: [0xeab]
---
0xe4e JUMPDEST
0xe4f DUP5
0xe50 PUSH1 0x1
0xe52 SWAP1
0xe53 DUP1
0xe54 MLOAD
0xe55 SWAP1
0xe56 PUSH1 0x20
0xe58 ADD
0xe59 SWAP1
0xe5a PUSH2 0xe64
0xe5d SWAP3
0xe5e SWAP2
0xe5f SWAP1
0xe60 PUSH2 0xeab
0xe63 JUMP
---
0xe4e: JUMPDEST 
0xe50: V940 = 0x1
0xe54: V941 = M[V490]
0xe56: V942 = 0x20
0xe58: V943 = ADD 0x20 V490
0xe5a: V944 = 0xe64
0xe60: V945 = 0xeab
0xe63: JUMP 0xeab
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0xe64, 0x1, V943, V941]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, 0xe64, 0x1, V943, V941]

================================

Block 0xe64
[0xe64:0xe7a]
---
Predecessors: [0xf27]
Successors: [0xeab]
---
0xe64 JUMPDEST
0xe65 POP
0xe66 DUP4
0xe67 PUSH1 0x3
0xe69 SWAP1
0xe6a DUP1
0xe6b MLOAD
0xe6c SWAP1
0xe6d PUSH1 0x20
0xe6f ADD
0xe70 SWAP1
0xe71 PUSH2 0xe7b
0xe74 SWAP3
0xe75 SWAP2
0xe76 SWAP1
0xe77 PUSH2 0xeab
0xe7a JUMP
---
0xe64: JUMPDEST 
0xe67: V946 = 0x3
0xe6b: V947 = M[V511]
0xe6d: V948 = 0x20
0xe6f: V949 = ADD 0x20 V511
0xe71: V950 = 0xe7b
0xe77: V951 = 0xeab
0xe7a: JUMP 0xeab
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0x1, 0x3}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xe7b, 0x3, V949, V947]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, 0xe7b, 0x3, V949, V947]

================================

Block 0xe7b
[0xe7b:0xeaa]
---
Predecessors: [0xf27]
Successors: [0x798]
---
0xe7b JUMPDEST
0xe7c POP
0xe7d DUP3
0xe7e PUSH1 0x4
0xe80 DUP2
0xe81 SWAP1
0xe82 SSTORE
0xe83 POP
0xe84 DUP2
0xe85 PUSH1 0x0
0xe87 DUP2
0xe88 SWAP1
0xe89 SSTORE
0xe8a POP
0xe8b DUP1
0xe8c PUSH1 0x6
0xe8e PUSH1 0x14
0xe90 PUSH2 0x100
0xe93 EXP
0xe94 DUP2
0xe95 SLOAD
0xe96 DUP2
0xe97 PUSH1 0xff
0xe99 MUL
0xe9a NOT
0xe9b AND
0xe9c SWAP1
0xe9d DUP4
0xe9e ISZERO
0xe9f ISZERO
0xea0 MUL
0xea1 OR
0xea2 SWAP1
0xea3 SSTORE
0xea4 POP
0xea5 POP
0xea6 POP
0xea7 POP
0xea8 POP
0xea9 POP
0xeaa JUMP
---
0xe7b: JUMPDEST 
0xe7e: V952 = 0x4
0xe82: S[0x4] = V517
0xe85: V953 = 0x0
0xe89: S[0x0] = V520
0xe8c: V954 = 0x6
0xe8e: V955 = 0x14
0xe90: V956 = 0x100
0xe93: V957 = EXP 0x100 0x14
0xe95: V958 = S[0x6]
0xe97: V959 = 0xff
0xe99: V960 = MUL 0xff 0x10000000000000000000000000000000000000000
0xe9a: V961 = NOT 0xff0000000000000000000000000000000000000000
0xe9b: V962 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V958
0xe9e: V963 = ISZERO V525
0xe9f: V964 = ISZERO V963
0xea0: V965 = MUL V964 0x10000000000000000000000000000000000000000
0xea1: V966 = OR V965 V962
0xea3: S[0x6] = V966
0xeaa: JUMP 0x798
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0x1, 0x3}]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0xeab
[0xeab:0xedb]
---
Predecessors: [0xe4e, 0xe64]
Successors: [0xedc, 0xeec]
---
0xeab JUMPDEST
0xeac DUP3
0xead DUP1
0xeae SLOAD
0xeaf PUSH1 0x1
0xeb1 DUP2
0xeb2 PUSH1 0x1
0xeb4 AND
0xeb5 ISZERO
0xeb6 PUSH2 0x100
0xeb9 MUL
0xeba SUB
0xebb AND
0xebc PUSH1 0x2
0xebe SWAP1
0xebf DIV
0xec0 SWAP1
0xec1 PUSH1 0x0
0xec3 MSTORE
0xec4 PUSH1 0x20
0xec6 PUSH1 0x0
0xec8 SHA3
0xec9 SWAP1
0xeca PUSH1 0x1f
0xecc ADD
0xecd PUSH1 0x20
0xecf SWAP1
0xed0 DIV
0xed1 DUP2
0xed2 ADD
0xed3 SWAP3
0xed4 DUP3
0xed5 PUSH1 0x1f
0xed7 LT
0xed8 PUSH2 0xeec
0xedb JUMPI
---
0xeab: JUMPDEST 
0xeae: V967 = S[{0x1, 0x3}]
0xeaf: V968 = 0x1
0xeb2: V969 = 0x1
0xeb4: V970 = AND 0x1 V967
0xeb5: V971 = ISZERO V970
0xeb6: V972 = 0x100
0xeb9: V973 = MUL 0x100 V971
0xeba: V974 = SUB V973 0x1
0xebb: V975 = AND V974 V967
0xebc: V976 = 0x2
0xebf: V977 = DIV V975 0x2
0xec1: V978 = 0x0
0xec3: M[0x0] = {0x1, 0x3}
0xec4: V979 = 0x20
0xec6: V980 = 0x0
0xec8: V981 = SHA3 0x0 0x20
0xeca: V982 = 0x1f
0xecc: V983 = ADD 0x1f V977
0xecd: V984 = 0x20
0xed0: V985 = DIV V983 0x20
0xed2: V986 = ADD V981 V985
0xed5: V987 = 0x1f
0xed7: V988 = LT 0x1f S0
0xed8: V989 = 0xeec
0xedb: JUMPI 0xeec V988
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S1, S0]
Stack pops: 3
Stack additions: [S2, V986, S0, V981, S1]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, V986, S0, V981, S1]

================================

Block 0xedc
[0xedc:0xeeb]
---
Predecessors: [0xeab]
Successors: [0xf1a]
---
0xedc DUP1
0xedd MLOAD
0xede PUSH1 0xff
0xee0 NOT
0xee1 AND
0xee2 DUP4
0xee3 DUP1
0xee4 ADD
0xee5 OR
0xee6 DUP6
0xee7 SSTORE
0xee8 PUSH2 0xf1a
0xeeb JUMP
---
0xedd: V990 = M[S0]
0xede: V991 = 0xff
0xee0: V992 = NOT 0xff
0xee1: V993 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V990
0xee4: V994 = ADD S2 S2
0xee5: V995 = OR V994 V993
0xee7: S[{0x1, 0x3}] = V995
0xee8: V996 = 0xf1a
0xeeb: JUMP 0xf1a
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, V986, S2, V981, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, V986, S2, V981, S0]

================================

Block 0xeec
[0xeec:0xefa]
---
Predecessors: [0xeab]
Successors: [0xefb, 0xf1a]
---
0xeec JUMPDEST
0xeed DUP3
0xeee DUP1
0xeef ADD
0xef0 PUSH1 0x1
0xef2 ADD
0xef3 DUP6
0xef4 SSTORE
0xef5 DUP3
0xef6 ISZERO
0xef7 PUSH2 0xf1a
0xefa JUMPI
---
0xeec: JUMPDEST 
0xeef: V997 = ADD S2 S2
0xef0: V998 = 0x1
0xef2: V999 = ADD 0x1 V997
0xef4: S[{0x1, 0x3}] = V999
0xef6: V1000 = ISZERO S2
0xef7: V1001 = 0xf1a
0xefa: JUMPI 0xf1a V1000
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, V986, S2, V981, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, V986, S2, V981, S0]

================================

Block 0xefb
[0xefb:0xefd]
---
Predecessors: [0xeec]
Successors: [0xefe]
---
0xefb SWAP2
0xefc DUP3
0xefd ADD
---
0xefd: V1002 = ADD S0 S2
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, V986, S2, V981, S0]
Stack pops: 3
Stack additions: [S0, S1, V1002]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, V986, S0, V981, V1002]

================================

Block 0xefe
[0xefe:0xf06]
---
Predecessors: [0xefb, 0xf07]
Successors: [0xf07, 0xf19]
---
0xefe JUMPDEST
0xeff DUP3
0xf00 DUP2
0xf01 GT
0xf02 ISZERO
0xf03 PUSH2 0xf19
0xf06 JUMPI
---
0xefe: JUMPDEST 
0xf01: V1003 = GT V1002 S2
0xf02: V1004 = ISZERO V1003
0xf03: V1005 = 0xf19
0xf06: JUMPI 0xf19 V1004
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S3, S2, S1, V1002]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S3, S2, S1, V1002]

================================

Block 0xf07
[0xf07:0xf18]
---
Predecessors: [0xefe]
Successors: [0xefe]
---
0xf07 DUP3
0xf08 MLOAD
0xf09 DUP3
0xf0a SSTORE
0xf0b SWAP2
0xf0c PUSH1 0x20
0xf0e ADD
0xf0f SWAP2
0xf10 SWAP1
0xf11 PUSH1 0x1
0xf13 ADD
0xf14 SWAP1
0xf15 PUSH2 0xefe
0xf18 JUMP
---
0xf08: V1006 = M[S2]
0xf0a: S[S1] = V1006
0xf0c: V1007 = 0x20
0xf0e: V1008 = ADD 0x20 S2
0xf11: V1009 = 0x1
0xf13: V1010 = ADD 0x1 S1
0xf15: V1011 = 0xefe
0xf18: JUMP 0xefe
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S3, S2, S1, V1002]
Stack pops: 3
Stack additions: [V1008, V1010, S0]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S3, V1008, V1010, V1002]

================================

Block 0xf19
[0xf19:0xf19]
---
Predecessors: [0xefe]
Successors: [0xf1a]
---
0xf19 JUMPDEST
---
0xf19: JUMPDEST 
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S3, S2, S1, V1002]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S3, S2, S1, V1002]

================================

Block 0xf1a
[0xf1a:0xf26]
---
Predecessors: [0xedc, 0xeec, 0xf19]
Successors: [0xf2b]
---
0xf1a JUMPDEST
0xf1b POP
0xf1c SWAP1
0xf1d POP
0xf1e PUSH2 0xf27
0xf21 SWAP2
0xf22 SWAP1
0xf23 PUSH2 0xf2b
0xf26 JUMP
---
0xf1a: JUMPDEST 
0xf1e: V1012 = 0xf27
0xf23: V1013 = 0xf2b
0xf26: JUMP 0xf2b
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0xf27, S3, S1]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, S3, S1]

================================

Block 0xf27
[0xf27:0xf2a]
---
Predecessors: [0xf4d]
Successors: [0xe64, 0xe7b]
---
0xf27 JUMPDEST
0xf28 POP
0xf29 SWAP1
0xf2a JUMP
---
0xf27: JUMPDEST 
0xf2a: JUMP {0xe64, 0xe7b}
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0x1, 0x3}]

================================

Block 0xf2b
[0xf2b:0xf30]
---
Predecessors: [0xf1a]
Successors: [0xf31]
---
0xf2b JUMPDEST
0xf2c PUSH2 0xf4d
0xf2f SWAP2
0xf30 SWAP1
---
0xf2b: JUMPDEST 
0xf2c: V1014 = 0xf4d
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, S1, S0]
Stack pops: 2
Stack additions: [0xf4d, S1, S0]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, 0xf4d, S1, S0]

================================

Block 0xf31
[0xf31:0xf39]
---
Predecessors: [0xf2b, 0xf3a]
Successors: [0xf3a, 0xf49]
---
0xf31 JUMPDEST
0xf32 DUP1
0xf33 DUP3
0xf34 GT
0xf35 ISZERO
0xf36 PUSH2 0xf49
0xf39 JUMPI
---
0xf31: JUMPDEST 
0xf34: V1015 = GT S1 S0
0xf35: V1016 = ISZERO V1015
0xf36: V1017 = 0xf49
0xf39: JUMPI 0xf49 V1016
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, 0xf4d, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, 0xf4d, S1, S0]

================================

Block 0xf3a
[0xf3a:0xf48]
---
Predecessors: [0xf31]
Successors: [0xf31]
---
0xf3a PUSH1 0x0
0xf3c DUP2
0xf3d PUSH1 0x0
0xf3f SWAP1
0xf40 SSTORE
0xf41 POP
0xf42 PUSH1 0x1
0xf44 ADD
0xf45 PUSH2 0xf31
0xf48 JUMP
---
0xf3a: V1018 = 0x0
0xf3d: V1019 = 0x0
0xf40: S[S0] = 0x0
0xf42: V1020 = 0x1
0xf44: V1021 = ADD 0x1 S0
0xf45: V1022 = 0xf31
0xf48: JUMP 0xf31
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, 0xf4d, S1, S0]
Stack pops: 1
Stack additions: [V1021]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, 0xf4d, S1, V1021]

================================

Block 0xf49
[0xf49:0xf4c]
---
Predecessors: [0xf31]
Successors: [0xf4d]
---
0xf49 JUMPDEST
0xf4a POP
0xf4b SWAP1
0xf4c JUMP
---
0xf49: JUMPDEST 
0xf4c: JUMP 0xf4d
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, 0xf4d, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, S1]

================================

Block 0xf4d
[0xf4d:0xf4f]
---
Predecessors: [0xf49]
Successors: [0xf27]
---
0xf4d JUMPDEST
0xf4e SWAP1
0xf4f JUMP
---
0xf4d: JUMPDEST 
0xf4f: JUMP 0xf27
---
Entry stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, 0xf27, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x798, V490, V511, V517, V520, V525, {0xe64, 0xe7b}, {0x1, 0x3}, S0]

================================

Block 0xf50
[0xf50:0xf7f]
---
Predecessors: []
Successors: []
---
0xf50 STOP
0xf51 LOG1
0xf52 PUSH6 0x627a7a723058
0xf59 SHA3
0xf5a PUSH25 0xf4fab542cf12f706cb84d0039dcc1c52a54905c7ed6cc5b7c7
0xf74 MISSING 0xcf
0xf75 MISSING 0xf9
0xf76 COINBASE
0xf77 MISSING 0xab
0xf78 MISSING 0xb9
0xf79 PUSH6 0x29
---
0xf50: STOP 
0xf51: LOG S0 S1 S2
0xf52: V1023 = 0x627a7a723058
0xf59: V1024 = SHA3 0x627a7a723058 S3
0xf5a: V1025 = 0xf4fab542cf12f706cb84d0039dcc1c52a54905c7ed6cc5b7c7
0xf74: MISSING 0xcf
0xf75: MISSING 0xf9
0xf76: V1026 = COINBASE
0xf77: MISSING 0xab
0xf78: MISSING 0xb9
0xf79: V1027 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf4fab542cf12f706cb84d0039dcc1c52a54905c7ed6cc5b7c7, V1024, V1026, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1c5
Exit block: 0x247
Body: 0x1c5, 0x1cd, 0x1d1, 0x1da, 0x1ff, 0x208, 0x21a, 0x22e, 0x247, 0x79a, 0x7ea, 0x7f2, 0x805, 0x813, 0x827, 0x830

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x255
Exit block: 0x2a0
Body: 0x255, 0x25d, 0x261, 0x2a0, 0x838

Function 2:
Public function signature: 0xda86f7f
Entry block: 0x2ba
Exit block: 0x2cf
Body: 0x2ba, 0x2c2, 0x2c6, 0x2cf, 0x844

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x2e9
Exit block: 0x2fe
Body: 0x2e9, 0x2f1, 0x2f5, 0x2fe, 0x857

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x314
Exit block: 0x37f
Body: 0x314, 0x31c, 0x320, 0x37f, 0x85d

Function 5:
Public function signature: 0x313ce567
Entry block: 0x399
Exit block: 0x3ae
Body: 0x399, 0x3a1, 0x3a5, 0x3ae, 0x9c4

Function 6:
Public function signature: 0x57376198
Entry block: 0x3ca
Exit block: 0x415
Body: 0x3ca, 0x3d2, 0x3d6, 0x415, 0x9d7, 0xa9a, 0xa9e, 0xaa9, 0xab2, 0xac4, 0xac8

Function 7:
Public function signature: 0x70a08231
Entry block: 0x42f
Exit block: 0x470
Body: 0x42f, 0x437, 0x43b, 0x470, 0xae1, 0xaf9, 0xb41, 0xb8b, 0xb95, 0xb9a

Function 8:
Public function signature: 0x7ecfb675
Entry block: 0x486
Exit block: 0x49b
Body: 0x486, 0x48e, 0x492, 0x49b, 0xb9f

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x4b1
Exit block: 0x4c6
Body: 0x4b1, 0x4b9, 0x4bd, 0x4c6, 0xba5

Function 10:
Public function signature: 0x95d89b41
Entry block: 0x508
Exit block: 0x58a
Body: 0x508, 0x510, 0x514, 0x51d, 0x542, 0x54b, 0x55d, 0x571, 0x58a, 0xbcb, 0xc1b, 0xc23, 0xc36, 0xc44, 0xc58, 0xc61

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x598
Exit block: 0x5e3
Body: 0x598, 0x5a0, 0x5a4, 0x5e3, 0xc69

Function 12:
Public function signature: 0xd8cb4aa3
Entry block: 0x5fd
Exit block: 0x63e
Body: 0x5fd, 0x605, 0x609, 0x63e, 0xdcf

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x654
Exit block: 0x6b5
Body: 0x654, 0x65c, 0x660, 0x6b5, 0xde7

Function 14:
Public function signature: 0xfdbb9fdb
Entry block: 0x6cb
Exit block: 0x798
Body: 0x6cb, 0x6d3, 0x6d7, 0x798, 0xdf2, 0xe4a, 0xe4e, 0xe64

Function 15:
Public fallback function
Entry block: 0xdb
Exit block: 0x151
Body: 0xdb, 0x151, 0x15a

Function 16:
Private function
Entry block: 0xeab
Exit block: 0xf27
Body: 0xeab, 0xedc, 0xeec, 0xefb, 0xefe, 0xf07, 0xf19, 0xf1a, 0xf27, 0xf2b, 0xf31, 0xf3a, 0xf49, 0xf4d

