Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x4f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x2e1a7d4d
0x2e EQ
0x2f PUSH2 0x4f
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x2e1a7d4d
0x2e: V7 = EQ 0x2e1a7d4d V5
0x2f: V8 = 0x4f
0x32: JUMPI 0x4f V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x62]
---
0x33 DUP1
0x34 PUSH4 0xa7f43779
0x39 EQ
0x3a PUSH2 0x62
0x3d JUMPI
---
0x34: V9 = 0xa7f43779
0x39: V10 = EQ 0xa7f43779 V5
0x3a: V11 = 0x62
0x3d: JUMPI 0x62 V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x6f]
---
0x3e DUP1
0x3f PUSH4 0xd0e30db0
0x44 EQ
0x45 PUSH2 0x6f
0x48 JUMPI
---
0x3f: V12 = 0xd0e30db0
0x44: V13 = EQ 0xd0e30db0 V5
0x45: V14 = 0x6f
0x48: JUMPI 0x6f V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x3e]
Successors: [0x4d]
---
0x49 PUSH2 0x4d
0x4c JUMP
---
0x49: V15 = 0x4d
0x4c: JUMP 0x4d
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x49]
Successors: []
---
0x4d JUMPDEST
0x4e STOP
---
0x4d: JUMPDEST 
0x4e: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4f
[0x4f:0x5f]
---
Predecessors: [0x0]
Successors: [0xbb]
---
0x4f JUMPDEST
0x50 PUSH2 0x60
0x53 PUSH1 0x4
0x55 DUP1
0x56 CALLDATALOAD
0x57 SWAP1
0x58 PUSH1 0x20
0x5a ADD
0x5b POP
0x5c PUSH2 0xbb
0x5f JUMP
---
0x4f: JUMPDEST 
0x50: V16 = 0x60
0x53: V17 = 0x4
0x56: V18 = CALLDATALOAD 0x4
0x58: V19 = 0x20
0x5a: V20 = ADD 0x20 0x4
0x5c: V21 = 0xbb
0x5f: JUMP 0xbb
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x60, V18]
Exit stack: [V5, 0x60, V18]

================================

Block 0x60
[0x60:0x61]
---
Predecessors: [0x172]
Successors: []
---
0x60 JUMPDEST
0x61 STOP
---
0x60: JUMPDEST 
0x61: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x33]
Successors: [0x175]
---
0x62 JUMPDEST
0x63 PUSH2 0x6d
0x66 PUSH1 0x4
0x68 POP
0x69 PUSH2 0x175
0x6c JUMP
---
0x62: JUMPDEST 
0x63: V22 = 0x6d
0x66: V23 = 0x4
0x69: V24 = 0x175
0x6c: JUMP 0x175
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x6d]
Exit stack: [V5, 0x6d]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x207]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x6f
[0x6f:0x79]
---
Predecessors: [0x3e]
Successors: [0x7c]
---
0x6f JUMPDEST
0x70 PUSH2 0x7a
0x73 PUSH1 0x4
0x75 POP
0x76 PUSH2 0x7c
0x79 JUMP
---
0x6f: JUMPDEST 
0x70: V25 = 0x7a
0x73: V26 = 0x4
0x76: V27 = 0x7c
0x79: JUMP 0x7c
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V5, 0x7a]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0xb9]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x7c
[0x7c:0xb8]
---
Predecessors: [0x6f]
Successors: [0xb9]
---
0x7c JUMPDEST
0x7d CALLVALUE
0x7e PUSH1 0x1
0x80 PUSH1 0x0
0x82 POP
0x83 PUSH1 0x0
0x85 CALLER
0x86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b AND
0x9c DUP2
0x9d MSTORE
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 DUP2
0xa3 MSTORE
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 PUSH1 0x0
0xa9 SHA3
0xaa PUSH1 0x0
0xac DUP3
0xad DUP3
0xae DUP3
0xaf POP
0xb0 SLOAD
0xb1 ADD
0xb2 SWAP3
0xb3 POP
0xb4 POP
0xb5 DUP2
0xb6 SWAP1
0xb7 SSTORE
0xb8 POP
---
0x7c: JUMPDEST 
0x7d: V28 = CALLVALUE
0x7e: V29 = 0x1
0x80: V30 = 0x0
0x83: V31 = 0x0
0x85: V32 = CALLER
0x86: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x9d: M[0x0] = V34
0x9e: V35 = 0x20
0xa0: V36 = ADD 0x20 0x0
0xa3: M[0x20] = 0x1
0xa4: V37 = 0x20
0xa6: V38 = ADD 0x20 0x20
0xa7: V39 = 0x0
0xa9: V40 = SHA3 0x0 0x40
0xaa: V41 = 0x0
0xb0: V42 = S[V40]
0xb1: V43 = ADD V42 V28
0xb7: S[V40] = V43
---
Entry stack: [V5, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x7a]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0x7c]
Successors: [0x7a]
---
0xb9 JUMPDEST
0xba JUMP
---
0xb9: JUMPDEST 
0xba: JUMP 0x7a
---
Entry stack: [V5, 0x7a]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0xbb
[0xbb:0xf2]
---
Predecessors: [0x4f]
Successors: [0xf3, 0xf8]
---
0xbb JUMPDEST
0xbc DUP1
0xbd PUSH1 0x1
0xbf PUSH1 0x0
0xc1 POP
0xc2 PUSH1 0x0
0xc4 CALLER
0xc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda AND
0xdb DUP2
0xdc MSTORE
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 PUSH1 0x0
0xe8 SHA3
0xe9 PUSH1 0x0
0xeb POP
0xec SLOAD
0xed LT
0xee DUP1
0xef PUSH2 0xf8
0xf2 JUMPI
---
0xbb: JUMPDEST 
0xbd: V44 = 0x1
0xbf: V45 = 0x0
0xc2: V46 = 0x0
0xc4: V47 = CALLER
0xc5: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xda: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xdc: M[0x0] = V49
0xdd: V50 = 0x20
0xdf: V51 = ADD 0x20 0x0
0xe2: M[0x20] = 0x1
0xe3: V52 = 0x20
0xe5: V53 = ADD 0x20 0x20
0xe6: V54 = 0x0
0xe8: V55 = SHA3 0x0 0x40
0xe9: V56 = 0x0
0xec: V57 = S[V55]
0xed: V58 = LT V57 V18
0xef: V59 = 0xf8
0xf2: JUMPI 0xf8 V58
---
Entry stack: [V5, 0x60, V18]
Stack pops: 1
Stack additions: [S0, V58]
Exit stack: [V5, 0x60, V18, V58]

================================

Block 0xf3
[0xf3:0xf7]
---
Predecessors: [0xbb]
Successors: [0xf8]
---
0xf3 POP
0xf4 PUSH1 0x0
0xf6 DUP2
0xf7 EQ
---
0xf4: V60 = 0x0
0xf7: V61 = EQ V18 0x0
---
Entry stack: [V5, 0x60, V18, V58]
Stack pops: 2
Stack additions: [S1, V61]
Exit stack: [V5, 0x60, V18, V61]

================================

Block 0xf8
[0xf8:0xfd]
---
Predecessors: [0xbb, 0xf3]
Successors: [0xfe, 0x102]
---
0xf8 JUMPDEST
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf8: JUMPDEST 
0xf9: V62 = ISZERO S0
0xfa: V63 = 0x102
0xfd: JUMPI 0x102 V62
---
Entry stack: [V5, 0x60, V18, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x60, V18]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf8]
Successors: [0x172]
---
0xfe PUSH2 0x172
0x101 JUMP
---
0xfe: V64 = 0x172
0x101: JUMP 0x172
---
Entry stack: [V5, 0x60, V18]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x60, V18]

================================

Block 0x102
[0x102:0x171]
---
Predecessors: [0xf8]
Successors: [0x172]
---
0x102 JUMPDEST
0x103 DUP1
0x104 PUSH1 0x1
0x106 PUSH1 0x0
0x108 POP
0x109 PUSH1 0x0
0x10b CALLER
0x10c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121 AND
0x122 DUP2
0x123 MSTORE
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP1
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c ADD
0x12d PUSH1 0x0
0x12f SHA3
0x130 PUSH1 0x0
0x132 DUP3
0x133 DUP3
0x134 DUP3
0x135 POP
0x136 SLOAD
0x137 SUB
0x138 SWAP3
0x139 POP
0x13a POP
0x13b DUP2
0x13c SWAP1
0x13d SSTORE
0x13e POP
0x13f CALLER
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 PUSH1 0x0
0x158 DUP3
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP1
0x15e POP
0x15f PUSH1 0x0
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 DUP4
0x166 SUB
0x167 DUP2
0x168 DUP6
0x169 DUP9
0x16a DUP9
0x16b CALL
0x16c SWAP4
0x16d POP
0x16e POP
0x16f POP
0x170 POP
0x171 POP
---
0x102: JUMPDEST 
0x104: V65 = 0x1
0x106: V66 = 0x0
0x109: V67 = 0x0
0x10b: V68 = CALLER
0x10c: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x121: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x123: M[0x0] = V70
0x124: V71 = 0x20
0x126: V72 = ADD 0x20 0x0
0x129: M[0x20] = 0x1
0x12a: V73 = 0x20
0x12c: V74 = ADD 0x20 0x20
0x12d: V75 = 0x0
0x12f: V76 = SHA3 0x0 0x40
0x130: V77 = 0x0
0x136: V78 = S[V76]
0x137: V79 = SUB V78 V18
0x13d: S[V76] = V79
0x13f: V80 = CALLER
0x140: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x156: V83 = 0x0
0x159: V84 = 0x40
0x15b: V85 = M[0x40]
0x15f: V86 = 0x0
0x161: V87 = 0x40
0x163: V88 = M[0x40]
0x166: V89 = SUB V85 V88
0x16b: V90 = CALL 0x0 V82 V18 V88 V89 V88 0x0
---
Entry stack: [V5, 0x60, V18]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5, 0x60, V18]

================================

Block 0x172
[0x172:0x174]
---
Predecessors: [0xfe, 0x102]
Successors: [0x60]
---
0x172 JUMPDEST
0x173 POP
0x174 JUMP
---
0x172: JUMPDEST 
0x174: JUMP 0x60
---
Entry stack: [V5, 0x60, V18]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x175
[0x175:0x1cb]
---
Predecessors: [0x62]
Successors: [0x1cc, 0x206]
---
0x175 JUMPDEST
0x176 PUSH1 0x0
0x178 PUSH1 0x0
0x17a SWAP1
0x17b SLOAD
0x17c SWAP1
0x17d PUSH2 0x100
0x180 EXP
0x181 SWAP1
0x182 DIV
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af CALLER
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 EQ
0x1c7 ISZERO
0x1c8 PUSH2 0x206
0x1cb JUMPI
---
0x175: JUMPDEST 
0x176: V91 = 0x0
0x178: V92 = 0x0
0x17b: V93 = S[0x0]
0x17d: V94 = 0x100
0x180: V95 = EXP 0x100 0x0
0x182: V96 = DIV V93 0x1
0x183: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x199: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1af: V101 = CALLER
0x1b0: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1c6: V104 = EQ V103 V100
0x1c7: V105 = ISZERO V104
0x1c8: V106 = 0x206
0x1cb: JUMPI 0x206 V105
---
Entry stack: [V5, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6d]

================================

Block 0x1cc
[0x1cc:0x205]
---
Predecessors: [0x175]
Successors: []
---
0x1cc PUSH1 0x0
0x1ce PUSH1 0x0
0x1d0 SWAP1
0x1d1 SLOAD
0x1d2 SWAP1
0x1d3 PUSH2 0x100
0x1d6 EXP
0x1d7 SWAP1
0x1d8 DIV
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 SELFDESTRUCT
---
0x1cc: V107 = 0x0
0x1ce: V108 = 0x0
0x1d1: V109 = S[0x0]
0x1d3: V110 = 0x100
0x1d6: V111 = EXP 0x100 0x0
0x1d8: V112 = DIV V109 0x1
0x1d9: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1ef: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x205: SELFDESTRUCT V116
---
Entry stack: [V5, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6d]

================================

Block 0x206
[0x206:0x206]
---
Predecessors: [0x175]
Successors: [0x207]
---
0x206 JUMPDEST
---
0x206: JUMPDEST 
---
Entry stack: [V5, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6d]

================================

Block 0x207
[0x207:0x208]
---
Predecessors: [0x206]
Successors: [0x6d]
---
0x207 JUMPDEST
0x208 JUMP
---
0x207: JUMPDEST 
0x208: JUMP 0x6d
---
Entry stack: [V5, 0x6d]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x4f
Exit block: 0x60
Body: 0x4f, 0x60, 0xbb, 0xf3, 0xf8, 0xfe, 0x102, 0x172

Function 1:
Public function signature: 0xa7f43779
Entry block: 0x62
Exit block: 0x6d
Body: 0x62, 0x6d, 0x175, 0x1cc, 0x206, 0x207

Function 2:
Public function signature: 0xd0e30db0
Entry block: 0x6f
Exit block: 0x7a
Body: 0x6f, 0x7a, 0x7c, 0xb9

Function 3:
Public fallback function
Entry block: 0x49
Exit block: 0x4d
Body: 0x49, 0x4d

