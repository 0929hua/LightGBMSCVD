Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x3c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x27dc297e
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x3c
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x27dc297e
0x14: V9 = EQ V7 0x27dc297e
0x15: V10 = 0x3c
0x18: JUMPI 0x3c V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x132]
---
0x19 DUP1
0x1a PUSH4 0x41c0e1b5
0x1f EQ
0x20 PUSH2 0x132
0x23 JUMPI
---
0x1a: V11 = 0x41c0e1b5
0x1f: V12 = EQ 0x41c0e1b5 V7
0x20: V13 = 0x132
0x23: JUMPI 0x132 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x159]
---
0x24 DUP1
0x25 PUSH4 0xa2e62045
0x2a EQ
0x2b PUSH2 0x159
0x2e JUMPI
---
0x25: V14 = 0xa2e62045
0x2a: V15 = EQ 0xa2e62045 V7
0x2b: V16 = 0x159
0x2e: JUMPI 0x159 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x332]
---
0x2f DUP1
0x30 PUSH4 0xb7764475
0x35 EQ
0x36 PUSH2 0x332
0x39 JUMPI
---
0x30: V17 = 0xb7764475
0x35: V18 = EQ 0xb7764475 V7
0x36: V19 = 0x332
0x39: JUMPI 0x332 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x3b]
---
Predecessors: [0x2f, 0x32d, 0x4d5, 0x4da]
Successors: []
---
0x3a JUMPDEST
0x3b STOP
---
0x3a: JUMPDEST 
0x3b: STOP 
---
Entry stack: [V7, 0x3a, V35, V21, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x3a, V35, V21, S0]

================================

Block 0x3c
[0x3c:0xcb]
---
Predecessors: [0x0]
Successors: [0xcc]
---
0x3c JUMPDEST
0x3d PUSH1 0x40
0x3f DUP1
0x40 MLOAD
0x41 PUSH1 0x20
0x43 PUSH1 0x24
0x45 DUP1
0x46 CALLDATALOAD
0x47 PUSH1 0x4
0x49 DUP2
0x4a DUP2
0x4b ADD
0x4c CALLDATALOAD
0x4d PUSH1 0x1f
0x4f DUP2
0x50 ADD
0x51 DUP6
0x52 SWAP1
0x53 DIV
0x54 DUP6
0x55 MUL
0x56 DUP7
0x57 ADD
0x58 DUP6
0x59 ADD
0x5a SWAP1
0x5b SWAP7
0x5c MSTORE
0x5d DUP6
0x5e DUP6
0x5f MSTORE
0x60 PUSH2 0x3a
0x63 SWAP6
0x64 DUP2
0x65 CALLDATALOAD
0x66 SWAP6
0x67 SWAP2
0x68 SWAP5
0x69 PUSH1 0x44
0x6b SWAP5
0x6c SWAP3
0x6d SWAP4
0x6e SWAP1
0x6f SWAP3
0x70 ADD
0x71 SWAP2
0x72 DUP2
0x73 SWAP1
0x74 DUP5
0x75 ADD
0x76 DUP4
0x77 DUP3
0x78 DUP1
0x79 DUP3
0x7a DUP5
0x7b CALLDATACOPY
0x7c POP
0x7d SWAP5
0x7e SWAP7
0x7f POP
0x80 POP
0x81 POP
0x82 POP
0x83 POP
0x84 POP
0x85 POP
0x86 PUSH1 0x2
0x88 SLOAD
0x89 PUSH1 0x40
0x8b DUP1
0x8c MLOAD
0x8d PUSH1 0xe0
0x8f PUSH1 0x2
0x91 EXP
0x92 PUSH4 0x38cc4831
0x97 MUL
0x98 DUP2
0x99 MSTORE
0x9a SWAP1
0x9b MLOAD
0x9c PUSH1 0x0
0x9e SWAP3
0x9f PUSH1 0x1
0xa1 PUSH1 0xa0
0xa3 PUSH1 0x2
0xa5 EXP
0xa6 SUB
0xa7 AND
0xa8 SWAP2
0xa9 PUSH4 0x38cc4831
0xae SWAP2
0xaf PUSH1 0x4
0xb1 DUP3
0xb2 DUP2
0xb3 ADD
0xb4 SWAP3
0xb5 PUSH1 0x20
0xb7 SWAP3
0xb8 SWAP2
0xb9 SWAP1
0xba DUP3
0xbb SWAP1
0xbc SUB
0xbd ADD
0xbe DUP2
0xbf DUP8
0xc0 DUP8
0xc1 PUSH2 0x61da
0xc4 GAS
0xc5 SUB
0xc6 CALL
0xc7 ISZERO
0xc8 PUSH2 0x2
0xcb JUMPI
---
0x3c: JUMPDEST 
0x3d: V20 = 0x40
0x40: V21 = M[0x40]
0x41: V22 = 0x20
0x43: V23 = 0x24
0x46: V24 = CALLDATALOAD 0x24
0x47: V25 = 0x4
0x4b: V26 = ADD 0x4 V24
0x4c: V27 = CALLDATALOAD V26
0x4d: V28 = 0x1f
0x50: V29 = ADD V27 0x1f
0x53: V30 = DIV V29 0x20
0x55: V31 = MUL 0x20 V30
0x57: V32 = ADD V21 V31
0x59: V33 = ADD 0x20 V32
0x5c: M[0x40] = V33
0x5f: M[V21] = V27
0x60: V34 = 0x3a
0x65: V35 = CALLDATALOAD 0x4
0x69: V36 = 0x44
0x70: V37 = ADD 0x24 V24
0x75: V38 = ADD V21 0x20
0x7b: CALLDATACOPY V38 V37 V27
0x86: V39 = 0x2
0x88: V40 = S[0x2]
0x89: V41 = 0x40
0x8c: V42 = M[0x40]
0x8d: V43 = 0xe0
0x8f: V44 = 0x2
0x91: V45 = EXP 0x2 0xe0
0x92: V46 = 0x38cc4831
0x97: V47 = MUL 0x38cc4831 0x100000000000000000000000000000000000000000000000000000000
0x99: M[V42] = 0x38cc483100000000000000000000000000000000000000000000000000000000
0x9b: V48 = M[0x40]
0x9c: V49 = 0x0
0x9f: V50 = 0x1
0xa1: V51 = 0xa0
0xa3: V52 = 0x2
0xa5: V53 = EXP 0x2 0xa0
0xa6: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xa9: V56 = 0x38cc4831
0xaf: V57 = 0x4
0xb3: V58 = ADD 0x4 V42
0xb5: V59 = 0x20
0xbc: V60 = SUB V42 V48
0xbd: V61 = ADD V60 0x4
0xc1: V62 = 0x61da
0xc4: V63 = GAS
0xc5: V64 = SUB V63 0x61da
0xc6: V65 = CALL V64 V55 0x0 V48 V61 V48 0x20
0xc7: V66 = ISZERO V65
0xc8: V67 = 0x2
0xcb: THROWI V66
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x3a, V35, V21, 0x0, V55, 0x38cc4831, V58]
Exit stack: [V7, 0x3a, V35, V21, 0x0, V55, 0x38cc4831, V58]

================================

Block 0xcc
[0xcc:0x112]
---
Predecessors: [0x3c]
Successors: [0x113]
---
0xcc POP
0xcd POP
0xce POP
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 MLOAD
0xd4 SWAP1
0xd5 PUSH1 0x20
0xd7 ADD
0xd8 POP
0xd9 SWAP1
0xda POP
0xdb DUP1
0xdc PUSH1 0x1
0xde PUSH1 0xa0
0xe0 PUSH1 0x2
0xe2 EXP
0xe3 SUB
0xe4 AND
0xe5 PUSH4 0x4c773795
0xea PUSH1 0x40
0xec MLOAD
0xed DUP2
0xee PUSH1 0xe0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 MUL
0xf4 DUP2
0xf5 MSTORE
0xf6 PUSH1 0x4
0xf8 ADD
0xf9 DUP1
0xfa SWAP1
0xfb POP
0xfc PUSH1 0x20
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 DUP4
0x103 SUB
0x104 DUP2
0x105 PUSH1 0x0
0x107 DUP8
0x108 PUSH2 0x61da
0x10b GAS
0x10c SUB
0x10d CALL
0x10e ISZERO
0x10f PUSH2 0x2
0x112 JUMPI
---
0xcf: V68 = 0x40
0xd1: V69 = M[0x40]
0xd3: V70 = M[V69]
0xd5: V71 = 0x20
0xd7: V72 = ADD 0x20 V69
0xdc: V73 = 0x1
0xde: V74 = 0xa0
0xe0: V75 = 0x2
0xe2: V76 = EXP 0x2 0xa0
0xe3: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xe5: V79 = 0x4c773795
0xea: V80 = 0x40
0xec: V81 = M[0x40]
0xee: V82 = 0xe0
0xf0: V83 = 0x2
0xf2: V84 = EXP 0x2 0xe0
0xf3: V85 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c773795
0xf5: M[V81] = 0x4c77379500000000000000000000000000000000000000000000000000000000
0xf6: V86 = 0x4
0xf8: V87 = ADD 0x4 V81
0xfc: V88 = 0x20
0xfe: V89 = 0x40
0x100: V90 = M[0x40]
0x103: V91 = SUB V87 V90
0x105: V92 = 0x0
0x108: V93 = 0x61da
0x10b: V94 = GAS
0x10c: V95 = SUB V94 0x61da
0x10d: V96 = CALL V95 V78 0x0 V90 V91 V90 0x20
0x10e: V97 = ISZERO V96
0x10f: V98 = 0x2
0x112: THROWI V97
---
Entry stack: [V7, 0x3a, V35, V21, 0x0, V55, 0x38cc4831, V58]
Stack pops: 4
Stack additions: [V70, V78, 0x4c773795, V87]
Exit stack: [V7, 0x3a, V35, V21, V70, V78, 0x4c773795, V87]

================================

Block 0x113
[0x113:0x12d]
---
Predecessors: [0xcc]
Successors: [0x12e, 0x430]
---
0x113 POP
0x114 POP
0x115 PUSH1 0x40
0x117 MLOAD
0x118 MLOAD
0x119 CALLER
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 SWAP1
0x123 DUP2
0x124 AND
0x125 SWAP2
0x126 AND
0x127 EQ
0x128 SWAP1
0x129 POP
0x12a PUSH2 0x430
0x12d JUMPI
---
0x115: V99 = 0x40
0x117: V100 = M[0x40]
0x118: V101 = M[V100]
0x119: V102 = CALLER
0x11a: V103 = 0x1
0x11c: V104 = 0xa0
0x11e: V105 = 0x2
0x120: V106 = EXP 0x2 0xa0
0x121: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x126: V109 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x127: V110 = EQ V109 V108
0x12a: V111 = 0x430
0x12d: JUMPI 0x430 V110
---
Entry stack: [V7, 0x3a, V35, V21, V70, V78, 0x4c773795, V87]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0x3a, V35, V21, V70]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x113]
Successors: []
---
0x12e PUSH2 0x2
0x131 JUMP
---
0x12e: V112 = 0x2
0x131: THROW 
---
Entry stack: [V7, 0x3a, V35, V21, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x3a, V35, V21, V70]

================================

Block 0x132
[0x132:0x14d]
---
Predecessors: [0x19]
Successors: [0x14e, 0x4da]
---
0x132 JUMPDEST
0x133 PUSH2 0x3a
0x136 PUSH1 0x0
0x138 SLOAD
0x139 PUSH1 0x1
0x13b PUSH1 0xa0
0x13d PUSH1 0x2
0x13f EXP
0x140 SUB
0x141 SWAP1
0x142 DUP2
0x143 AND
0x144 CALLER
0x145 SWAP1
0x146 SWAP2
0x147 AND
0x148 EQ
0x149 ISZERO
0x14a PUSH2 0x4da
0x14d JUMPI
---
0x132: JUMPDEST 
0x133: V113 = 0x3a
0x136: V114 = 0x0
0x138: V115 = S[0x0]
0x139: V116 = 0x1
0x13b: V117 = 0xa0
0x13d: V118 = 0x2
0x13f: V119 = EXP 0x2 0xa0
0x140: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x144: V122 = CALLER
0x147: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x148: V124 = EQ V123 V121
0x149: V125 = ISZERO V124
0x14a: V126 = 0x4da
0x14d: JUMPI 0x4da V125
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x3a]
Exit stack: [V7, 0x3a]

================================

Block 0x14e
[0x14e:0x158]
---
Predecessors: [0x132]
Successors: []
---
0x14e CALLER
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 AND
0x158 SELFDESTRUCT
---
0x14e: V127 = CALLER
0x14f: V128 = 0x1
0x151: V129 = 0xa0
0x153: V130 = 0x2
0x155: V131 = EXP 0x2 0xa0
0x156: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x158: SELFDESTRUCT V133
---
Entry stack: [V7, 0x3a]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x3a]

================================

Block 0x159
[0x159:0x15c]
---
Predecessors: [0x24]
Successors: [0x15d]
---
0x159 JUMPDEST
0x15a PUSH2 0x3a
---
0x159: JUMPDEST 
0x15a: V134 = 0x3a
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x3a]
Exit stack: [V7, 0x3a]

================================

Block 0x15d
[0x15d:0x1a3]
---
Predecessors: [0x159, 0x4c7]
Successors: [0x1a4]
---
0x15d JUMPDEST
0x15e PUSH1 0x2
0x160 SLOAD
0x161 PUSH1 0x40
0x163 DUP1
0x164 MLOAD
0x165 PUSH1 0xe0
0x167 PUSH1 0x2
0x169 EXP
0x16a PUSH4 0x38cc4831
0x16f MUL
0x170 DUP2
0x171 MSTORE
0x172 SWAP1
0x173 MLOAD
0x174 PUSH1 0x0
0x176 SWAP3
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f AND
0x180 SWAP2
0x181 PUSH4 0x38cc4831
0x186 SWAP2
0x187 PUSH1 0x4
0x189 DUP3
0x18a DUP2
0x18b ADD
0x18c SWAP3
0x18d PUSH1 0x20
0x18f SWAP3
0x190 SWAP2
0x191 SWAP1
0x192 DUP3
0x193 SWAP1
0x194 SUB
0x195 ADD
0x196 DUP2
0x197 DUP8
0x198 DUP8
0x199 PUSH2 0x61da
0x19c GAS
0x19d SUB
0x19e CALL
0x19f ISZERO
0x1a0 PUSH2 0x2
0x1a3 JUMPI
---
0x15d: JUMPDEST 
0x15e: V135 = 0x2
0x160: V136 = S[0x2]
0x161: V137 = 0x40
0x164: V138 = M[0x40]
0x165: V139 = 0xe0
0x167: V140 = 0x2
0x169: V141 = EXP 0x2 0xe0
0x16a: V142 = 0x38cc4831
0x16f: V143 = MUL 0x38cc4831 0x100000000000000000000000000000000000000000000000000000000
0x171: M[V138] = 0x38cc483100000000000000000000000000000000000000000000000000000000
0x173: V144 = M[0x40]
0x174: V145 = 0x0
0x177: V146 = 0x1
0x179: V147 = 0xa0
0x17b: V148 = 0x2
0x17d: V149 = EXP 0x2 0xa0
0x17e: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17f: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x181: V152 = 0x38cc4831
0x187: V153 = 0x4
0x18b: V154 = ADD 0x4 V138
0x18d: V155 = 0x20
0x194: V156 = SUB V138 V144
0x195: V157 = ADD V156 0x4
0x199: V158 = 0x61da
0x19c: V159 = GAS
0x19d: V160 = SUB V159 0x61da
0x19e: V161 = CALL V160 V151 0x0 V144 V157 V144 0x20
0x19f: V162 = ISZERO V161
0x1a0: V163 = 0x2
0x1a3: THROWI V162
---
Entry stack: [V7, 0x3a, V35, V21, S1, {0x3a, 0x4d5}]
Stack pops: 0
Stack additions: [0x0, V151, 0x38cc4831, V154]
Exit stack: [V7, 0x3a, V35, V21, S1, {0x3a, 0x4d5}, 0x0, V151, 0x38cc4831, V154]

================================

Block 0x1a4
[0x1a4:0x21f]
---
Predecessors: [0x15d]
Successors: [0x220]
---
0x1a4 POP
0x1a5 POP
0x1a6 PUSH1 0x40
0x1a8 DUP1
0x1a9 MLOAD
0x1aa DUP1
0x1ab MLOAD
0x1ac PUSH32 0x524f388900000000000000000000000000000000000000000000000000000000
0x1cd DUP3
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 PUSH1 0x4
0x1d3 DUP4
0x1d4 ADD
0x1d5 DUP2
0x1d6 SWAP1
0x1d7 MSTORE
0x1d8 PUSH1 0x3
0x1da PUSH1 0x24
0x1dc DUP5
0x1dd ADD
0x1de MSTORE
0x1df PUSH1 0xea
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 PUSH3 0x155493
0x1e8 MUL
0x1e9 PUSH1 0x44
0x1eb DUP5
0x1ec ADD
0x1ed MSTORE
0x1ee SWAP3
0x1ef MLOAD
0x1f0 SWAP1
0x1f1 SWAP5
0x1f2 PUSH1 0x1
0x1f4 PUSH1 0xa0
0x1f6 PUSH1 0x2
0x1f8 EXP
0x1f9 SUB
0x1fa DUP7
0x1fb AND
0x1fc SWAP5
0x1fd POP
0x1fe SWAP3
0x1ff DUP5
0x200 SWAP3
0x201 PUSH4 0x524f3889
0x206 SWAP3
0x207 PUSH1 0x64
0x209 DUP3
0x20a DUP2
0x20b ADD
0x20c SWAP4
0x20d SWAP3
0x20e DUP3
0x20f SWAP1
0x210 SUB
0x211 ADD
0x212 DUP2
0x213 DUP8
0x214 DUP8
0x215 PUSH2 0x61da
0x218 GAS
0x219 SUB
0x21a CALL
0x21b ISZERO
0x21c PUSH2 0x2
0x21f JUMPI
---
0x1a6: V164 = 0x40
0x1a9: V165 = M[0x40]
0x1ab: V166 = M[V165]
0x1ac: V167 = 0x524f388900000000000000000000000000000000000000000000000000000000
0x1ce: M[V165] = 0x524f388900000000000000000000000000000000000000000000000000000000
0x1cf: V168 = 0x20
0x1d1: V169 = 0x4
0x1d4: V170 = ADD V165 0x4
0x1d7: M[V170] = 0x20
0x1d8: V171 = 0x3
0x1da: V172 = 0x24
0x1dd: V173 = ADD V165 0x24
0x1de: M[V173] = 0x3
0x1df: V174 = 0xea
0x1e1: V175 = 0x2
0x1e3: V176 = EXP 0x2 0xea
0x1e4: V177 = 0x155493
0x1e8: V178 = MUL 0x155493 0x40000000000000000000000000000000000000000000000000000000000
0x1e9: V179 = 0x44
0x1ec: V180 = ADD V165 0x44
0x1ed: M[V180] = 0x55524c0000000000000000000000000000000000000000000000000000000000
0x1ef: V181 = M[0x40]
0x1f2: V182 = 0x1
0x1f4: V183 = 0xa0
0x1f6: V184 = 0x2
0x1f8: V185 = EXP 0x2 0xa0
0x1f9: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fb: V187 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x201: V188 = 0x524f3889
0x207: V189 = 0x64
0x20b: V190 = ADD 0x64 V165
0x210: V191 = SUB V165 V181
0x211: V192 = ADD V191 0x64
0x215: V193 = 0x61da
0x218: V194 = GAS
0x219: V195 = SUB V194 0x61da
0x21a: V196 = CALL V195 V187 0x0 V181 V192 V181 0x20
0x21b: V197 = ISZERO V196
0x21c: V198 = 0x2
0x21f: THROWI V197
---
Entry stack: [V7, 0x3a, V35, V21, S5, {0x3a, 0x4d5}, 0x0, V151, 0x38cc4831, V154]
Stack pops: 4
Stack additions: [V166, V187, S3, V187, 0x524f3889, V190]
Exit stack: [V7, 0x3a, V35, V21, S5, {0x3a, 0x4d5}, V166, V187, 0x0, V187, 0x524f3889, V190]

================================

Block 0x220
[0x220:0x32c]
---
Predecessors: [0x1a4]
Successors: [0x32d]
---
0x220 POP
0x221 POP
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 MLOAD
0x227 SWAP2
0x228 POP
0x229 DUP3
0x22a DUP2
0x22b DUP2
0x22c DUP2
0x22d DUP6
0x22e DUP9
0x22f DUP4
0x230 CALL
0x231 POP
0x232 PUSH32 0xadf59f9900000000000000000000000000000000000000000000000000000000
0x253 DUP2
0x254 MSTORE
0x255 PUSH1 0x3c
0x257 PUSH1 0x4
0x259 DUP3
0x25a ADD
0x25b MSTORE
0x25c PUSH1 0x60
0x25e PUSH1 0x24
0x260 DUP3
0x261 ADD
0x262 MSTORE
0x263 PUSH1 0x3
0x265 PUSH1 0x64
0x267 DUP3
0x268 ADD
0x269 MSTORE
0x26a PUSH1 0xea
0x26c PUSH1 0x2
0x26e EXP
0x26f PUSH3 0x155493
0x273 MUL
0x274 PUSH1 0x84
0x276 DUP3
0x277 ADD
0x278 MSTORE
0x279 PUSH1 0xa0
0x27b PUSH1 0x44
0x27d DUP3
0x27e ADD
0x27f MSTORE
0x280 PUSH1 0x4c
0x282 PUSH1 0xa4
0x284 DUP3
0x285 ADD
0x286 MSTORE
0x287 PUSH32 0x6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075
0x2a8 PUSH1 0xc4
0x2aa DUP3
0x2ab ADD
0x2ac MSTORE
0x2ad PUSH32 0x626c69632f5469636b65723f706169723d455448584254292e726573756c742e
0x2ce PUSH1 0xe4
0x2d0 DUP3
0x2d1 ADD
0x2d2 MSTORE
0x2d3 PUSH32 0x58455448585842542e632e300000000000000000000000000000000000000000
0x2f4 PUSH2 0x104
0x2f7 DUP3
0x2f8 ADD
0x2f9 MSTORE
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd PUSH1 0x1
0x2ff PUSH1 0xa0
0x301 PUSH1 0x2
0x303 EXP
0x304 SUB
0x305 DUP7
0x306 AND
0x307 SWAP5
0x308 POP
0x309 PUSH4 0xadf59f99
0x30e SWAP4
0x30f PUSH2 0x124
0x312 DUP4
0x313 DUP2
0x314 ADD
0x315 SWAP5
0x316 POP
0x317 PUSH1 0x20
0x319 SWAP4
0x31a DUP4
0x31b SWAP1
0x31c SUB
0x31d ADD
0x31e SWAP1
0x31f DUP3
0x320 SWAP1
0x321 DUP8
0x322 PUSH2 0x61da
0x325 GAS
0x326 SUB
0x327 CALL
0x328 ISZERO
0x329 PUSH2 0x2
0x32c JUMPI
---
0x222: V199 = 0x40
0x224: V200 = M[0x40]
0x226: V201 = M[V200]
0x230: V202 = CALL 0x0 V187 V201 V200 0x0 V200 0x0
0x232: V203 = 0xadf59f9900000000000000000000000000000000000000000000000000000000
0x254: M[V200] = 0xadf59f9900000000000000000000000000000000000000000000000000000000
0x255: V204 = 0x3c
0x257: V205 = 0x4
0x25a: V206 = ADD V200 0x4
0x25b: M[V206] = 0x3c
0x25c: V207 = 0x60
0x25e: V208 = 0x24
0x261: V209 = ADD V200 0x24
0x262: M[V209] = 0x60
0x263: V210 = 0x3
0x265: V211 = 0x64
0x268: V212 = ADD V200 0x64
0x269: M[V212] = 0x3
0x26a: V213 = 0xea
0x26c: V214 = 0x2
0x26e: V215 = EXP 0x2 0xea
0x26f: V216 = 0x155493
0x273: V217 = MUL 0x155493 0x40000000000000000000000000000000000000000000000000000000000
0x274: V218 = 0x84
0x277: V219 = ADD V200 0x84
0x278: M[V219] = 0x55524c0000000000000000000000000000000000000000000000000000000000
0x279: V220 = 0xa0
0x27b: V221 = 0x44
0x27e: V222 = ADD V200 0x44
0x27f: M[V222] = 0xa0
0x280: V223 = 0x4c
0x282: V224 = 0xa4
0x285: V225 = ADD V200 0xa4
0x286: M[V225] = 0x4c
0x287: V226 = 0x6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075
0x2a8: V227 = 0xc4
0x2ab: V228 = ADD V200 0xc4
0x2ac: M[V228] = 0x6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075
0x2ad: V229 = 0x626c69632f5469636b65723f706169723d455448584254292e726573756c742e
0x2ce: V230 = 0xe4
0x2d1: V231 = ADD V200 0xe4
0x2d2: M[V231] = 0x626c69632f5469636b65723f706169723d455448584254292e726573756c742e
0x2d3: V232 = 0x58455448585842542e632e300000000000000000000000000000000000000000
0x2f4: V233 = 0x104
0x2f8: V234 = ADD V200 0x104
0x2f9: M[V234] = 0x58455448585842542e632e300000000000000000000000000000000000000000
0x2fa: V235 = 0x40
0x2fc: V236 = M[0x40]
0x2fd: V237 = 0x1
0x2ff: V238 = 0xa0
0x301: V239 = 0x2
0x303: V240 = EXP 0x2 0xa0
0x304: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V242 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x309: V243 = 0xadf59f99
0x30f: V244 = 0x124
0x314: V245 = ADD 0x124 V200
0x317: V246 = 0x20
0x31c: V247 = SUB V200 V236
0x31d: V248 = ADD V247 0x124
0x322: V249 = 0x61da
0x325: V250 = GAS
0x326: V251 = SUB V250 0x61da
0x327: V252 = CALL V251 V242 0x0 V236 V248 V236 0x20
0x328: V253 = ISZERO V252
0x329: V254 = 0x2
0x32c: THROWI V253
---
Entry stack: [V7, 0x3a, V35, V21, S7, {0x3a, 0x4d5}, V166, V187, 0x0, V187, 0x524f3889, V190]
Stack pops: 6
Stack additions: [S5, V242, 0xadf59f99, V245]
Exit stack: [V7, 0x3a, V35, V21, S7, {0x3a, 0x4d5}, V166, V242, 0xadf59f99, V245]

================================

Block 0x32d
[0x32d:0x331]
---
Predecessors: [0x220]
Successors: [0x3a, 0x4d5]
---
0x32d POP
0x32e POP
0x32f POP
0x330 POP
0x331 JUMP
---
0x331: JUMP {0x3a, 0x4d5}
---
Entry stack: [V7, 0x3a, V35, V21, S5, {0x3a, 0x4d5}, S3, V242, 0xadf59f99, V245]
Stack pops: 5
Stack additions: []
Exit stack: [V7, 0x3a, V35, V21, S5]

================================

Block 0x332
[0x332:0x373]
---
Predecessors: [0x2f]
Successors: [0x374, 0x428]
---
0x332 JUMPDEST
0x333 PUSH1 0x40
0x335 DUP1
0x336 MLOAD
0x337 PUSH1 0x1
0x339 DUP1
0x33a SLOAD
0x33b PUSH1 0x20
0x33d PUSH1 0x2
0x33f DUP3
0x340 DUP5
0x341 AND
0x342 ISZERO
0x343 PUSH2 0x100
0x346 MUL
0x347 PUSH1 0x0
0x349 NOT
0x34a ADD
0x34b SWAP1
0x34c SWAP3
0x34d AND
0x34e SWAP2
0x34f SWAP1
0x350 SWAP2
0x351 DIV
0x352 PUSH1 0x1f
0x354 DUP2
0x355 ADD
0x356 DUP3
0x357 SWAP1
0x358 DIV
0x359 DUP3
0x35a MUL
0x35b DUP5
0x35c ADD
0x35d DUP3
0x35e ADD
0x35f SWAP1
0x360 SWAP5
0x361 MSTORE
0x362 DUP4
0x363 DUP4
0x364 MSTORE
0x365 PUSH2 0x38f
0x368 SWAP4
0x369 SWAP1
0x36a DUP4
0x36b ADD
0x36c DUP3
0x36d DUP3
0x36e DUP1
0x36f ISZERO
0x370 PUSH2 0x428
0x373 JUMPI
---
0x332: JUMPDEST 
0x333: V255 = 0x40
0x336: V256 = M[0x40]
0x337: V257 = 0x1
0x33a: V258 = S[0x1]
0x33b: V259 = 0x20
0x33d: V260 = 0x2
0x341: V261 = AND 0x1 V258
0x342: V262 = ISZERO V261
0x343: V263 = 0x100
0x346: V264 = MUL 0x100 V262
0x347: V265 = 0x0
0x349: V266 = NOT 0x0
0x34a: V267 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V264
0x34d: V268 = AND V258 V267
0x351: V269 = DIV V268 0x2
0x352: V270 = 0x1f
0x355: V271 = ADD V269 0x1f
0x358: V272 = DIV V271 0x20
0x35a: V273 = MUL 0x20 V272
0x35c: V274 = ADD V256 V273
0x35e: V275 = ADD 0x20 V274
0x361: M[0x40] = V275
0x364: M[V256] = V269
0x365: V276 = 0x38f
0x36b: V277 = ADD V256 0x20
0x36f: V278 = ISZERO V269
0x370: V279 = 0x428
0x373: JUMPI 0x428 V278
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x38f, V256, 0x1, V269, V277, 0x1, V269]
Exit stack: [V7, 0x38f, V256, 0x1, V269, V277, 0x1, V269]

================================

Block 0x374
[0x374:0x37b]
---
Predecessors: [0x332]
Successors: [0x37c, 0x3fd]
---
0x374 DUP1
0x375 PUSH1 0x1f
0x377 LT
0x378 PUSH2 0x3fd
0x37b JUMPI
---
0x375: V280 = 0x1f
0x377: V281 = LT 0x1f V269
0x378: V282 = 0x3fd
0x37b: JUMPI 0x3fd V281
---
Entry stack: [V7, 0x38f, V256, 0x1, V269, V277, 0x1, V269]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x38f, V256, 0x1, V269, V277, 0x1, V269]

================================

Block 0x37c
[0x37c:0x38e]
---
Predecessors: [0x374]
Successors: [0x428]
---
0x37c PUSH2 0x100
0x37f DUP1
0x380 DUP4
0x381 SLOAD
0x382 DIV
0x383 MUL
0x384 DUP4
0x385 MSTORE
0x386 SWAP2
0x387 PUSH1 0x20
0x389 ADD
0x38a SWAP2
0x38b PUSH2 0x428
0x38e JUMP
---
0x37c: V283 = 0x100
0x381: V284 = S[0x1]
0x382: V285 = DIV V284 0x100
0x383: V286 = MUL V285 0x100
0x385: M[V277] = V286
0x387: V287 = 0x20
0x389: V288 = ADD 0x20 V277
0x38b: V289 = 0x428
0x38e: JUMP 0x428
---
Entry stack: [V7, 0x38f, V256, 0x1, V269, V277, 0x1, V269]
Stack pops: 3
Stack additions: [V288, S1, S0]
Exit stack: [V7, 0x38f, V256, 0x1, V269, V288, 0x1, V269]

================================

Block 0x38f
[0x38f:0x3d5]
---
Predecessors: [0x428]
Successors: [0x3d6, 0x3ef]
---
0x38f JUMPDEST
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 DUP1
0x395 PUSH1 0x20
0x397 ADD
0x398 DUP3
0x399 DUP2
0x39a SUB
0x39b DUP3
0x39c MSTORE
0x39d DUP4
0x39e DUP2
0x39f DUP2
0x3a0 MLOAD
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 PUSH1 0x20
0x3a5 ADD
0x3a6 SWAP2
0x3a7 POP
0x3a8 DUP1
0x3a9 MLOAD
0x3aa SWAP1
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae SWAP1
0x3af DUP1
0x3b0 DUP4
0x3b1 DUP4
0x3b2 DUP3
0x3b3 SWAP1
0x3b4 PUSH1 0x0
0x3b6 PUSH1 0x4
0x3b8 PUSH1 0x20
0x3ba DUP5
0x3bb PUSH1 0x1f
0x3bd ADD
0x3be DIV
0x3bf PUSH1 0x3
0x3c1 MUL
0x3c2 PUSH1 0xf
0x3c4 ADD
0x3c5 CALL
0x3c6 POP
0x3c7 SWAP1
0x3c8 POP
0x3c9 SWAP1
0x3ca DUP2
0x3cb ADD
0x3cc SWAP1
0x3cd PUSH1 0x1f
0x3cf AND
0x3d0 DUP1
0x3d1 ISZERO
0x3d2 PUSH2 0x3ef
0x3d5 JUMPI
---
0x38f: JUMPDEST 
0x390: V290 = 0x40
0x392: V291 = M[0x40]
0x395: V292 = 0x20
0x397: V293 = ADD 0x20 V291
0x39a: V294 = SUB V293 V291
0x39c: M[V291] = V294
0x3a0: V295 = M[V256]
0x3a2: M[V293] = V295
0x3a3: V296 = 0x20
0x3a5: V297 = ADD 0x20 V293
0x3a9: V298 = M[V256]
0x3ab: V299 = 0x20
0x3ad: V300 = ADD 0x20 V256
0x3b4: V301 = 0x0
0x3b6: V302 = 0x4
0x3b8: V303 = 0x20
0x3bb: V304 = 0x1f
0x3bd: V305 = ADD 0x1f V298
0x3be: V306 = DIV V305 0x20
0x3bf: V307 = 0x3
0x3c1: V308 = MUL 0x3 V306
0x3c2: V309 = 0xf
0x3c4: V310 = ADD 0xf V308
0x3c5: V311 = CALL V310 0x4 0x0 V300 V298 V297 V298
0x3cb: V312 = ADD V298 V297
0x3cd: V313 = 0x1f
0x3cf: V314 = AND 0x1f V298
0x3d1: V315 = ISZERO V314
0x3d2: V316 = 0x3ef
0x3d5: JUMPI 0x3ef V315
---
Entry stack: [V7, 0x38f, V256]
Stack pops: 1
Stack additions: [S0, V291, V291, V312, V314]
Exit stack: [V7, 0x38f, V256, V291, V291, V312, V314]

================================

Block 0x3d6
[0x3d6:0x3ee]
---
Predecessors: [0x38f]
Successors: [0x3ef]
---
0x3d6 DUP1
0x3d7 DUP3
0x3d8 SUB
0x3d9 DUP1
0x3da MLOAD
0x3db PUSH1 0x1
0x3dd DUP4
0x3de PUSH1 0x20
0x3e0 SUB
0x3e1 PUSH2 0x100
0x3e4 EXP
0x3e5 SUB
0x3e6 NOT
0x3e7 AND
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed SWAP2
0x3ee POP
---
0x3d8: V317 = SUB V312 V314
0x3da: V318 = M[V317]
0x3db: V319 = 0x1
0x3de: V320 = 0x20
0x3e0: V321 = SUB 0x20 V314
0x3e1: V322 = 0x100
0x3e4: V323 = EXP 0x100 V321
0x3e5: V324 = SUB V323 0x1
0x3e6: V325 = NOT V324
0x3e7: V326 = AND V325 V318
0x3e9: M[V317] = V326
0x3ea: V327 = 0x20
0x3ec: V328 = ADD 0x20 V317
---
Entry stack: [V7, 0x38f, V256, V291, V291, V312, V314]
Stack pops: 2
Stack additions: [V328, S0]
Exit stack: [V7, 0x38f, V256, V291, V291, V328, V314]

================================

Block 0x3ef
[0x3ef:0x3fc]
---
Predecessors: [0x38f, 0x3d6]
Successors: []
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 SWAP3
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 DUP1
0x3f9 SWAP2
0x3fa SUB
0x3fb SWAP1
0x3fc RETURN
---
0x3ef: JUMPDEST 
0x3f5: V329 = 0x40
0x3f7: V330 = M[0x40]
0x3fa: V331 = SUB S1 V330
0x3fc: RETURN V330 V331
---
Entry stack: [V7, 0x38f, V256, V291, V291, S1, V314]
Stack pops: 5
Stack additions: []
Exit stack: [V7, 0x38f]

================================

Block 0x3fd
[0x3fd:0x40a]
---
Predecessors: [0x374]
Successors: [0x40b]
---
0x3fd JUMPDEST
0x3fe DUP3
0x3ff ADD
0x400 SWAP2
0x401 SWAP1
0x402 PUSH1 0x0
0x404 MSTORE
0x405 PUSH1 0x20
0x407 PUSH1 0x0
0x409 SHA3
0x40a SWAP1
---
0x3fd: JUMPDEST 
0x3ff: V332 = ADD V277 V269
0x402: V333 = 0x0
0x404: M[0x0] = 0x1
0x405: V334 = 0x20
0x407: V335 = 0x0
0x409: V336 = SHA3 0x0 0x20
---
Entry stack: [V7, 0x38f, V256, 0x1, V269, V277, 0x1, V269]
Stack pops: 3
Stack additions: [V332, V336, S2]
Exit stack: [V7, 0x38f, V256, 0x1, V269, V332, V336, V277]

================================

Block 0x40b
[0x40b:0x41e]
---
Predecessors: [0x3fd, 0x40b]
Successors: [0x40b, 0x41f]
---
0x40b JUMPDEST
0x40c DUP2
0x40d SLOAD
0x40e DUP2
0x40f MSTORE
0x410 SWAP1
0x411 PUSH1 0x1
0x413 ADD
0x414 SWAP1
0x415 PUSH1 0x20
0x417 ADD
0x418 DUP1
0x419 DUP4
0x41a GT
0x41b PUSH2 0x40b
0x41e JUMPI
---
0x40b: JUMPDEST 
0x40d: V337 = S[S1]
0x40f: M[S0] = V337
0x411: V338 = 0x1
0x413: V339 = ADD 0x1 S1
0x415: V340 = 0x20
0x417: V341 = ADD 0x20 S0
0x41a: V342 = GT V332 V341
0x41b: V343 = 0x40b
0x41e: JUMPI 0x40b V342
---
Entry stack: [V7, 0x38f, V256, 0x1, V269, V332, S1, S0]
Stack pops: 3
Stack additions: [S2, V339, V341]
Exit stack: [V7, 0x38f, V256, 0x1, V269, V332, V339, V341]

================================

Block 0x41f
[0x41f:0x427]
---
Predecessors: [0x40b]
Successors: [0x428]
---
0x41f DUP3
0x420 SWAP1
0x421 SUB
0x422 PUSH1 0x1f
0x424 AND
0x425 DUP3
0x426 ADD
0x427 SWAP2
---
0x421: V344 = SUB V341 V332
0x422: V345 = 0x1f
0x424: V346 = AND 0x1f V344
0x426: V347 = ADD V332 V346
---
Entry stack: [V7, 0x38f, V256, 0x1, V269, V332, V339, V341]
Stack pops: 3
Stack additions: [V347, S1, S2]
Exit stack: [V7, 0x38f, V256, 0x1, V269, V347, V339, V332]

================================

Block 0x428
[0x428:0x42f]
---
Predecessors: [0x332, 0x37c, 0x41f]
Successors: [0x38f]
---
0x428 JUMPDEST
0x429 POP
0x42a POP
0x42b POP
0x42c POP
0x42d POP
0x42e DUP2
0x42f JUMP
---
0x428: JUMPDEST 
0x42f: JUMP 0x38f
---
Entry stack: [V7, 0x38f, V256, 0x1, V269, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V7, 0x38f, V256]

================================

Block 0x430
[0x430:0x46e]
---
Predecessors: [0x113]
Successors: [0x46f, 0x497]
---
0x430 JUMPDEST
0x431 DUP2
0x432 PUSH1 0x1
0x434 PUSH1 0x0
0x436 POP
0x437 SWAP1
0x438 DUP1
0x439 MLOAD
0x43a SWAP1
0x43b PUSH1 0x20
0x43d ADD
0x43e SWAP1
0x43f DUP3
0x440 DUP1
0x441 SLOAD
0x442 PUSH1 0x1
0x444 DUP2
0x445 PUSH1 0x1
0x447 AND
0x448 ISZERO
0x449 PUSH2 0x100
0x44c MUL
0x44d SUB
0x44e AND
0x44f PUSH1 0x2
0x451 SWAP1
0x452 DIV
0x453 SWAP1
0x454 PUSH1 0x0
0x456 MSTORE
0x457 PUSH1 0x20
0x459 PUSH1 0x0
0x45b SHA3
0x45c SWAP1
0x45d PUSH1 0x1f
0x45f ADD
0x460 PUSH1 0x20
0x462 SWAP1
0x463 DIV
0x464 DUP2
0x465 ADD
0x466 SWAP3
0x467 DUP3
0x468 PUSH1 0x1f
0x46a LT
0x46b PUSH2 0x497
0x46e JUMPI
---
0x430: JUMPDEST 
0x432: V348 = 0x1
0x434: V349 = 0x0
0x439: V350 = M[V21]
0x43b: V351 = 0x20
0x43d: V352 = ADD 0x20 V21
0x441: V353 = S[0x1]
0x442: V354 = 0x1
0x445: V355 = 0x1
0x447: V356 = AND 0x1 V353
0x448: V357 = ISZERO V356
0x449: V358 = 0x100
0x44c: V359 = MUL 0x100 V357
0x44d: V360 = SUB V359 0x1
0x44e: V361 = AND V360 V353
0x44f: V362 = 0x2
0x452: V363 = DIV V361 0x2
0x454: V364 = 0x0
0x456: M[0x0] = 0x1
0x457: V365 = 0x20
0x459: V366 = 0x0
0x45b: V367 = SHA3 0x0 0x20
0x45d: V368 = 0x1f
0x45f: V369 = ADD 0x1f V363
0x460: V370 = 0x20
0x463: V371 = DIV V369 0x20
0x465: V372 = ADD V367 V371
0x468: V373 = 0x1f
0x46a: V374 = LT 0x1f V350
0x46b: V375 = 0x497
0x46e: JUMPI 0x497 V374
---
Entry stack: [V7, 0x3a, V35, V21, V70]
Stack pops: 2
Stack additions: [S1, S0, 0x1, V372, V350, V367, V352]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, V350, V367, V352]

================================

Block 0x46f
[0x46f:0x47a]
---
Predecessors: [0x430]
Successors: [0x47b]
---
0x46f DUP1
0x470 MLOAD
0x471 PUSH1 0xff
0x473 NOT
0x474 AND
0x475 DUP4
0x476 DUP1
0x477 ADD
0x478 OR
0x479 DUP6
0x47a SSTORE
---
0x470: V376 = M[V352]
0x471: V377 = 0xff
0x473: V378 = NOT 0xff
0x474: V379 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V376
0x477: V380 = ADD V350 V350
0x478: V381 = OR V380 V379
0x47a: S[0x1] = V381
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, V350, V367, V352]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, V350, V367, V352]

================================

Block 0x47b
[0x47b:0x482]
---
Predecessors: [0x46f, 0x497, 0x4a9]
Successors: [0x483]
---
0x47b JUMPDEST
0x47c POP
0x47d PUSH2 0x4c7
0x480 SWAP3
0x481 SWAP2
0x482 POP
---
0x47b: JUMPDEST 
0x47d: V382 = 0x4c7
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4c7, S3, S1]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, 0x4c7, V372, S1]

================================

Block 0x483
[0x483:0x48b]
---
Predecessors: [0x47b, 0x48c]
Successors: [0x48c, 0x4d1]
---
0x483 JUMPDEST
0x484 DUP1
0x485 DUP3
0x486 GT
0x487 ISZERO
0x488 PUSH2 0x4d1
0x48b JUMPI
---
0x483: JUMPDEST 
0x486: V383 = GT V372 S0
0x487: V384 = ISZERO V383
0x488: V385 = 0x4d1
0x48b: JUMPI 0x4d1 V384
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, 0x4c7, V372, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, 0x4c7, V372, S0]

================================

Block 0x48c
[0x48c:0x496]
---
Predecessors: [0x483]
Successors: [0x483]
---
0x48c PUSH1 0x0
0x48e DUP2
0x48f SSTORE
0x490 PUSH1 0x1
0x492 ADD
0x493 PUSH2 0x483
0x496 JUMP
---
0x48c: V386 = 0x0
0x48f: S[S0] = 0x0
0x490: V387 = 0x1
0x492: V388 = ADD 0x1 S0
0x493: V389 = 0x483
0x496: JUMP 0x483
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, 0x4c7, V372, S0]
Stack pops: 1
Stack additions: [V388]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, 0x4c7, V372, V388]

================================

Block 0x497
[0x497:0x4a5]
---
Predecessors: [0x430]
Successors: [0x47b, 0x4a6]
---
0x497 JUMPDEST
0x498 DUP3
0x499 DUP1
0x49a ADD
0x49b PUSH1 0x1
0x49d ADD
0x49e DUP6
0x49f SSTORE
0x4a0 DUP3
0x4a1 ISZERO
0x4a2 PUSH2 0x47b
0x4a5 JUMPI
---
0x497: JUMPDEST 
0x49a: V390 = ADD V350 V350
0x49b: V391 = 0x1
0x49d: V392 = ADD 0x1 V390
0x49f: S[0x1] = V392
0x4a1: V393 = ISZERO V350
0x4a2: V394 = 0x47b
0x4a5: JUMPI 0x47b V393
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, V350, V367, V352]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, V350, V367, V352]

================================

Block 0x4a6
[0x4a6:0x4a8]
---
Predecessors: [0x497]
Successors: [0x4a9]
---
0x4a6 SWAP2
0x4a7 DUP3
0x4a8 ADD
---
0x4a8: V395 = ADD V352 V350
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, V350, V367, V352]
Stack pops: 3
Stack additions: [S0, S1, V395]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, V352, V367, V395]

================================

Block 0x4a9
[0x4a9:0x4b1]
---
Predecessors: [0x4a6, 0x4b2]
Successors: [0x47b, 0x4b2]
---
0x4a9 JUMPDEST
0x4aa DUP3
0x4ab DUP2
0x4ac GT
0x4ad ISZERO
0x4ae PUSH2 0x47b
0x4b1 JUMPI
---
0x4a9: JUMPDEST 
0x4ac: V396 = GT V395 S2
0x4ad: V397 = ISZERO V396
0x4ae: V398 = 0x47b
0x4b1: JUMPI 0x47b V397
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, S2, S1, V395]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, S2, S1, V395]

================================

Block 0x4b2
[0x4b2:0x4c6]
---
Predecessors: [0x4a9]
Successors: [0x4a9]
---
0x4b2 DUP3
0x4b3 MLOAD
0x4b4 DUP3
0x4b5 PUSH1 0x0
0x4b7 POP
0x4b8 SSTORE
0x4b9 SWAP2
0x4ba PUSH1 0x20
0x4bc ADD
0x4bd SWAP2
0x4be SWAP1
0x4bf PUSH1 0x1
0x4c1 ADD
0x4c2 SWAP1
0x4c3 PUSH2 0x4a9
0x4c6 JUMP
---
0x4b3: V399 = M[S2]
0x4b5: V400 = 0x0
0x4b8: S[S1] = V399
0x4ba: V401 = 0x20
0x4bc: V402 = ADD 0x20 S2
0x4bf: V403 = 0x1
0x4c1: V404 = ADD 0x1 S1
0x4c3: V405 = 0x4a9
0x4c6: JUMP 0x4a9
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, S2, S1, V395]
Stack pops: 3
Stack additions: [V402, V404, S0]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, V372, V402, V404, V395]

================================

Block 0x4c7
[0x4c7:0x4d0]
---
Predecessors: [0x4d1]
Successors: [0x15d]
---
0x4c7 JUMPDEST
0x4c8 POP
0x4c9 POP
0x4ca PUSH2 0x4d5
0x4cd PUSH2 0x15d
0x4d0 JUMP
---
0x4c7: JUMPDEST 
0x4ca: V406 = 0x4d5
0x4cd: V407 = 0x15d
0x4d0: JUMP 0x15d
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, V372]
Stack pops: 2
Stack additions: [0x4d5]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x4d5]

================================

Block 0x4d1
[0x4d1:0x4d4]
---
Predecessors: [0x483]
Successors: [0x4c7]
---
0x4d1 JUMPDEST
0x4d2 POP
0x4d3 SWAP1
0x4d4 JUMP
---
0x4d1: JUMPDEST 
0x4d4: JUMP 0x4c7
---
Entry stack: [V7, 0x3a, V35, V21, V70, 0x1, 0x4c7, V372, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x3a, V35, V21, V70, 0x1, V372]

================================

Block 0x4d5
[0x4d5:0x4d9]
---
Predecessors: [0x32d]
Successors: [0x3a]
---
0x4d5 JUMPDEST
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 JUMP
---
0x4d5: JUMPDEST 
0x4d9: JUMP 0x3a
---
Entry stack: [V7, 0x3a, V35, V21, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V7]

================================

Block 0x4da
[0x4da:0x4db]
---
Predecessors: [0x132]
Successors: [0x3a]
---
0x4da JUMPDEST
0x4db JUMP
---
0x4da: JUMPDEST 
0x4db: JUMP 0x3a
---
Entry stack: [V7, 0x3a]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Function 0:
Public function signature: 0x27dc297e
Entry block: 0x3c
Exit block: 0x3a
Body: 0x3a, 0x3c, 0xcc, 0x113, 0x12e, 0x15d, 0x1a4, 0x220, 0x32d, 0x430, 0x46f, 0x47b, 0x483, 0x48c, 0x497, 0x4a6, 0x4a9, 0x4b2, 0x4c7, 0x4d1, 0x4d5

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x132
Exit block: 0x3a
Body: 0x3a, 0x132, 0x14e, 0x4da

Function 2:
Public function signature: 0xa2e62045
Entry block: 0x159
Exit block: 0x3a
Body: 0x3a, 0x159, 0x15d, 0x1a4, 0x220, 0x32d, 0x4d5

Function 3:
Public function signature: 0xb7764475
Entry block: 0x332
Exit block: 0x3ef
Body: 0x332, 0x374, 0x37c, 0x38f, 0x3d6, 0x3ef, 0x3fd, 0x40b, 0x41f, 0x428

Function 4:
Public fallback function
Entry block: 0x3a
Exit block: 0x3a
Body: 0x3a

