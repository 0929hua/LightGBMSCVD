Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x46]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x46
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x46
0xa: JUMPI 0x46 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x4f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x41c0e1b5
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x4f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x41c0e1b5
0x20: V14 = EQ V12 0x41c0e1b5
0x21: V15 = 0x4f
0x24: JUMPI 0x4f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x61]
---
0x25 DUP1
0x26 PUSH4 0x5b980628
0x2b EQ
0x2c PUSH2 0x61
0x2f JUMPI
---
0x26: V16 = 0x5b980628
0x2b: V17 = EQ 0x5b980628 V12
0x2c: V18 = 0x61
0x2f: JUMPI 0x61 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x73]
---
0x30 DUP1
0x31 PUSH4 0x5efa79e8
0x36 EQ
0x37 PUSH2 0x73
0x3a JUMPI
---
0x31: V19 = 0x5efa79e8
0x36: V20 = EQ 0x5efa79e8 V12
0x37: V21 = 0x73
0x3a: JUMPI 0x73 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x95]
---
0x3b DUP1
0x3c PUSH4 0x8da5cb5b
0x41 EQ
0x42 PUSH2 0x95
0x45 JUMPI
---
0x3c: V22 = 0x8da5cb5b
0x41: V23 = EQ 0x8da5cb5b V12
0x42: V24 = 0x95
0x45: JUMPI 0x95 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x49]
---
Predecessors: [0x0, 0x3b]
Successors: [0x4a]
---
0x46 JUMPDEST
0x47 PUSH2 0x4d
---
0x46: JUMPDEST 
0x47: V25 = 0x4d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d]
Exit stack: [V12, 0x4d]

================================

Block 0x4a
[0x4a:0x4a]
---
Predecessors: [0x46, 0xc1, 0xea]
Successors: [0x4b]
---
0x4a JUMPDEST
---
0x4a: JUMPDEST 
---
Entry stack: [V12, 0x4d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d]

================================

Block 0x4b
[0x4b:0x4c]
---
Predecessors: [0x4a]
Successors: [0x4d]
---
0x4b JUMPDEST
0x4c JUMP
---
0x4b: JUMPDEST 
0x4c: JUMP 0x4d
---
Entry stack: [V12, 0x4d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x4b, 0x227]
Successors: []
---
0x4d JUMPDEST
0x4e STOP
---
0x4d: JUMPDEST 
0x4e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f
[0x4f:0x55]
---
Predecessors: [0xb]
Successors: [0x56, 0x57]
---
0x4f JUMPDEST
0x50 CALLVALUE
0x51 ISZERO
0x52 PUSH2 0x57
0x55 JUMPI
---
0x4f: JUMPDEST 
0x50: V26 = CALLVALUE
0x51: V27 = ISZERO V26
0x52: V28 = 0x57
0x55: JUMPI 0x57 V27
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x56
[0x56:0x56]
---
Predecessors: [0x4f]
Successors: []
---
0x56 INVALID
---
0x56: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x57
[0x57:0x5e]
---
Predecessors: [0x4f]
Successors: [0xc1]
---
0x57 JUMPDEST
0x58 PUSH2 0x4d
0x5b PUSH2 0xc1
0x5e JUMP
---
0x57: JUMPDEST 
0x58: V29 = 0x4d
0x5b: V30 = 0xc1
0x5e: JUMP 0xc1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d]
Exit stack: [V12, 0x4d]

================================

Block 0x5f
[0x5f:0x60]
---
Predecessors: []
Successors: []
---
0x5f JUMPDEST
0x60 STOP
---
0x5f: JUMPDEST 
0x60: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x61
[0x61:0x67]
---
Predecessors: [0x25]
Successors: [0x68, 0x69]
---
0x61 JUMPDEST
0x62 CALLVALUE
0x63 ISZERO
0x64 PUSH2 0x69
0x67 JUMPI
---
0x61: JUMPDEST 
0x62: V31 = CALLVALUE
0x63: V32 = ISZERO V31
0x64: V33 = 0x69
0x67: JUMPI 0x69 V32
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68
[0x68:0x68]
---
Predecessors: [0x61]
Successors: []
---
0x68 INVALID
---
0x68: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x69
[0x69:0x70]
---
Predecessors: [0x61]
Successors: [0xea]
---
0x69 JUMPDEST
0x6a PUSH2 0x4d
0x6d PUSH2 0xea
0x70 JUMP
---
0x69: JUMPDEST 
0x6a: V34 = 0x4d
0x6d: V35 = 0xea
0x70: JUMP 0xea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d]
Exit stack: [V12, 0x4d]

================================

Block 0x71
[0x71:0x72]
---
Predecessors: []
Successors: []
---
0x71 JUMPDEST
0x72 STOP
---
0x71: JUMPDEST 
0x72: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x73
[0x73:0x79]
---
Predecessors: [0x30]
Successors: [0x7a, 0x7b]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 ISZERO
0x76 PUSH2 0x7b
0x79 JUMPI
---
0x73: JUMPDEST 
0x74: V36 = CALLVALUE
0x75: V37 = ISZERO V36
0x76: V38 = 0x7b
0x79: JUMPI 0x7b V37
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a
[0x7a:0x7a]
---
Predecessors: [0x73]
Successors: []
---
0x7a INVALID
---
0x7a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b
[0x7b:0x92]
---
Predecessors: [0x73]
Successors: [0x123]
---
0x7b JUMPDEST
0x7c PUSH2 0x4d
0x7f PUSH1 0x4
0x81 CALLDATALOAD
0x82 PUSH1 0x1
0x84 PUSH1 0x60
0x86 PUSH1 0x2
0x88 EXP
0x89 SUB
0x8a NOT
0x8b PUSH1 0x24
0x8d CALLDATALOAD
0x8e AND
0x8f PUSH2 0x123
0x92 JUMP
---
0x7b: JUMPDEST 
0x7c: V39 = 0x4d
0x7f: V40 = 0x4
0x81: V41 = CALLDATALOAD 0x4
0x82: V42 = 0x1
0x84: V43 = 0x60
0x86: V44 = 0x2
0x88: V45 = EXP 0x2 0x60
0x89: V46 = SUB 0x1000000000000000000000000 0x1
0x8a: V47 = NOT 0xffffffffffffffffffffffff
0x8b: V48 = 0x24
0x8d: V49 = CALLDATALOAD 0x24
0x8e: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000
0x8f: V51 = 0x123
0x92: JUMP 0x123
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d, V41, V50]
Exit stack: [V12, 0x4d, V41, V50]

================================

Block 0x93
[0x93:0x94]
---
Predecessors: []
Successors: []
---
0x93 JUMPDEST
0x94 STOP
---
0x93: JUMPDEST 
0x94: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x95
[0x95:0x9b]
---
Predecessors: [0x3b]
Successors: [0x9c, 0x9d]
---
0x95 JUMPDEST
0x96 CALLVALUE
0x97 ISZERO
0x98 PUSH2 0x9d
0x9b JUMPI
---
0x95: JUMPDEST 
0x96: V52 = CALLVALUE
0x97: V53 = ISZERO V52
0x98: V54 = 0x9d
0x9b: JUMPI 0x9d V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0x9c]
---
Predecessors: [0x95]
Successors: []
---
0x9c INVALID
---
0x9c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x95]
Successors: [0x22d]
---
0x9d JUMPDEST
0x9e PUSH2 0xa5
0xa1 PUSH2 0x22d
0xa4 JUMP
---
0x9d: JUMPDEST 
0x9e: V55 = 0xa5
0xa1: V56 = 0x22d
0xa4: JUMP 0x22d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V12, 0xa5]

================================

Block 0xa5
[0xa5:0xc0]
---
Predecessors: [0x22d]
Successors: []
---
0xa5 JUMPDEST
0xa6 PUSH1 0x40
0xa8 DUP1
0xa9 MLOAD
0xaa PUSH1 0x1
0xac PUSH1 0xa0
0xae PUSH1 0x2
0xb0 EXP
0xb1 SUB
0xb2 SWAP1
0xb3 SWAP3
0xb4 AND
0xb5 DUP3
0xb6 MSTORE
0xb7 MLOAD
0xb8 SWAP1
0xb9 DUP2
0xba SWAP1
0xbb SUB
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP1
0xc0 RETURN
---
0xa5: JUMPDEST 
0xa6: V57 = 0x40
0xa9: V58 = M[0x40]
0xaa: V59 = 0x1
0xac: V60 = 0xa0
0xae: V61 = 0x2
0xb0: V62 = EXP 0x2 0xa0
0xb1: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V64 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0xb6: M[V58] = V64
0xb7: V65 = M[0x40]
0xbb: V66 = SUB V58 V65
0xbc: V67 = 0x20
0xbe: V68 = ADD 0x20 V66
0xc0: RETURN V65 V68
---
Entry stack: [V12, 0xa5, V217]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0xc1
[0xc1:0xd8]
---
Predecessors: [0x57]
Successors: [0x4a, 0xd9]
---
0xc1 JUMPDEST
0xc2 PUSH1 0x0
0xc4 SLOAD
0xc5 CALLER
0xc6 PUSH1 0x1
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SUB
0xce SWAP1
0xcf DUP2
0xd0 AND
0xd1 SWAP2
0xd2 AND
0xd3 EQ
0xd4 ISZERO
0xd5 PUSH2 0x4a
0xd8 JUMPI
---
0xc1: JUMPDEST 
0xc2: V69 = 0x0
0xc4: V70 = S[0x0]
0xc5: V71 = CALLER
0xc6: V72 = 0x1
0xc8: V73 = 0xa0
0xca: V74 = 0x2
0xcc: V75 = EXP 0x2 0xa0
0xcd: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0xd2: V78 = AND V70 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V79 = EQ V78 V77
0xd4: V80 = ISZERO V79
0xd5: V81 = 0x4a
0xd8: JUMPI 0x4a V80
---
Entry stack: [V12, 0x4d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d]

================================

Block 0xd9
[0xd9:0xe5]
---
Predecessors: [0xc1]
Successors: []
---
0xd9 PUSH1 0x0
0xdb SLOAD
0xdc PUSH1 0x1
0xde PUSH1 0xa0
0xe0 PUSH1 0x2
0xe2 EXP
0xe3 SUB
0xe4 AND
0xe5 SELFDESTRUCT
---
0xd9: V82 = 0x0
0xdb: V83 = S[0x0]
0xdc: V84 = 0x1
0xde: V85 = 0xa0
0xe0: V86 = 0x2
0xe2: V87 = EXP 0x2 0xa0
0xe3: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xe5: SELFDESTRUCT V89
---
Entry stack: [V12, 0x4d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d]

================================

Block 0xe6
[0xe6:0xe6]
---
Predecessors: []
Successors: [0xe7]
---
0xe6 JUMPDEST
---
0xe6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe7
[0xe7:0xe7]
---
Predecessors: [0xe6]
Successors: [0xe8]
---
0xe7 JUMPDEST
---
0xe7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe8
[0xe8:0xe9]
---
Predecessors: [0xe7]
Successors: []
Has unresolved jump.
---
0xe8 JUMPDEST
0xe9 JUMP
---
0xe8: JUMPDEST 
0xe9: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xea
[0xea:0x11e]
---
Predecessors: [0x69]
Successors: [0x4a, 0x11f]
---
0xea JUMPDEST
0xeb PUSH1 0x0
0xed DUP1
0xee SLOAD
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 PUSH1 0x1
0xf4 PUSH1 0xa0
0xf6 PUSH1 0x2
0xf8 EXP
0xf9 SUB
0xfa SWAP2
0xfb DUP3
0xfc AND
0xfd SWAP3
0xfe ADDRESS
0xff SWAP1
0x100 SWAP3
0x101 AND
0x102 BALANCE
0x103 DUP1
0x104 ISZERO
0x105 PUSH2 0x8fc
0x108 MUL
0x109 SWAP3
0x10a SWAP1
0x10b SWAP2
0x10c SWAP1
0x10d DUP2
0x10e DUP2
0x10f DUP2
0x110 DUP6
0x111 DUP9
0x112 DUP9
0x113 CALL
0x114 SWAP4
0x115 POP
0x116 POP
0x117 POP
0x118 POP
0x119 ISZERO
0x11a ISZERO
0x11b PUSH2 0x4a
0x11e JUMPI
---
0xea: JUMPDEST 
0xeb: V90 = 0x0
0xee: V91 = S[0x0]
0xef: V92 = 0x40
0xf1: V93 = M[0x40]
0xf2: V94 = 0x1
0xf4: V95 = 0xa0
0xf6: V96 = 0x2
0xf8: V97 = EXP 0x2 0xa0
0xf9: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0xfe: V100 = ADDRESS
0x101: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x102: V102 = BALANCE V101
0x104: V103 = ISZERO V102
0x105: V104 = 0x8fc
0x108: V105 = MUL 0x8fc V103
0x113: V106 = CALL V105 V99 V102 V93 0x0 V93 0x0
0x119: V107 = ISZERO V106
0x11a: V108 = ISZERO V107
0x11b: V109 = 0x4a
0x11e: JUMPI 0x4a V108
---
Entry stack: [V12, 0x4d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d]

================================

Block 0x11f
[0x11f:0x11f]
---
Predecessors: [0xea]
Successors: []
---
0x11f INVALID
---
0x11f: INVALID 
---
Entry stack: [V12, 0x4d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d]

================================

Block 0x120
[0x120:0x120]
---
Predecessors: []
Successors: [0x121]
---
0x120 JUMPDEST
---
0x120: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x121
[0x121:0x122]
---
Predecessors: [0x120]
Successors: []
Has unresolved jump.
---
0x121 JUMPDEST
0x122 JUMP
---
0x121: JUMPDEST 
0x122: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x123
[0x123:0x12f]
---
Predecessors: [0x7b]
Successors: [0x23c]
---
0x123 JUMPDEST
0x124 PUSH1 0x0
0x126 PUSH1 0x0
0x128 PUSH2 0x130
0x12b DUP5
0x12c PUSH2 0x23c
0x12f JUMP
---
0x123: JUMPDEST 
0x124: V110 = 0x0
0x126: V111 = 0x0
0x128: V112 = 0x130
0x12c: V113 = 0x23c
0x12f: JUMP 0x23c
---
Entry stack: [V12, 0x4d, V41, V50]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x130, S1]
Exit stack: [V12, 0x4d, V41, V50, 0x0, 0x0, 0x130, V41]

================================

Block 0x130
[0x130:0x13a]
---
Predecessors: [0x32e]
Successors: [0x336]
---
0x130 JUMPDEST
0x131 SWAP2
0x132 POP
0x133 PUSH2 0x13b
0x136 DUP4
0x137 PUSH2 0x336
0x13a JUMP
---
0x130: JUMPDEST 
0x133: V114 = 0x13b
0x137: V115 = 0x336
0x13a: JUMP 0x336
---
Entry stack: [V12, 0x4d, V41, V50, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S0, S1, 0x13b, S3]
Exit stack: [V12, 0x4d, V41, V50, S0, 0x0, 0x13b, V50]

================================

Block 0x13b
[0x13b:0x198]
---
Predecessors: [0x32e]
Successors: [0x199, 0x19a]
---
0x13b JUMPDEST
0x13c PUSH1 0x1
0x13e SLOAD
0x13f PUSH1 0x40
0x141 DUP1
0x142 MLOAD
0x143 PUSH1 0x0
0x145 PUSH1 0x20
0x147 SWAP2
0x148 DUP3
0x149 ADD
0x14a DUP2
0x14b SWAP1
0x14c MSTORE
0x14d DUP3
0x14e MLOAD
0x14f PUSH1 0xe0
0x151 PUSH1 0x2
0x153 EXP
0x154 PUSH4 0x5e431709
0x159 MUL
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x1
0x15e PUSH1 0xa0
0x160 PUSH1 0x2
0x162 EXP
0x163 SUB
0x164 DUP1
0x165 DUP8
0x166 AND
0x167 PUSH1 0x4
0x169 DUP4
0x16a ADD
0x16b MSTORE
0x16c PUSH1 0x24
0x16e DUP3
0x16f ADD
0x170 DUP10
0x171 SWAP1
0x172 MSTORE
0x173 SWAP4
0x174 MLOAD
0x175 SWAP6
0x176 SWAP7
0x177 POP
0x178 SWAP3
0x179 SWAP1
0x17a SWAP4
0x17b AND
0x17c SWAP4
0x17d PUSH4 0x5e431709
0x182 SWAP4
0x183 PUSH1 0x44
0x185 DUP1
0x186 DUP6
0x187 ADD
0x188 SWAP5
0x189 DUP4
0x18a SWAP1
0x18b SUB
0x18c ADD
0x18d SWAP1
0x18e DUP3
0x18f SWAP1
0x190 DUP8
0x191 DUP1
0x192 EXTCODESIZE
0x193 ISZERO
0x194 ISZERO
0x195 PUSH2 0x19a
0x198 JUMPI
---
0x13b: JUMPDEST 
0x13c: V116 = 0x1
0x13e: V117 = S[0x1]
0x13f: V118 = 0x40
0x142: V119 = M[0x40]
0x143: V120 = 0x0
0x145: V121 = 0x20
0x149: V122 = ADD 0x20 V119
0x14c: M[V122] = 0x0
0x14e: V123 = M[0x40]
0x14f: V124 = 0xe0
0x151: V125 = 0x2
0x153: V126 = EXP 0x2 0xe0
0x154: V127 = 0x5e431709
0x159: V128 = MUL 0x5e431709 0x100000000000000000000000000000000000000000000000000000000
0x15b: M[V123] = 0x5e43170900000000000000000000000000000000000000000000000000000000
0x15c: V129 = 0x1
0x15e: V130 = 0xa0
0x160: V131 = 0x2
0x162: V132 = EXP 0x2 0xa0
0x163: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x166: V134 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x167: V135 = 0x4
0x16a: V136 = ADD V123 0x4
0x16b: M[V136] = V134
0x16c: V137 = 0x24
0x16f: V138 = ADD V123 0x24
0x172: M[V138] = S2
0x174: V139 = M[0x40]
0x17b: V140 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V141 = 0x5e431709
0x183: V142 = 0x44
0x187: V143 = ADD V123 0x44
0x18b: V144 = SUB V123 V139
0x18c: V145 = ADD V144 0x44
0x192: V146 = EXTCODESIZE V140
0x193: V147 = ISZERO V146
0x194: V148 = ISZERO V147
0x195: V149 = 0x19a
0x198: JUMPI 0x19a V148
---
Entry stack: [V12, 0x4d, V41, V50, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S0, V140, 0x5e431709, V143, 0x20, V139, V145, V139, 0x0, V140]
Exit stack: [V12, 0x4d, V41, V50, S2, S0, V140, 0x5e431709, V143, 0x20, V139, V145, V139, 0x0, V140]

================================

Block 0x199
[0x199:0x199]
---
Predecessors: [0x13b]
Successors: []
---
0x199 INVALID
---
0x199: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S10, S9, V140, 0x5e431709, V143, 0x20, V139, V145, V139, 0x0, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S10, S9, V140, 0x5e431709, V143, 0x20, V139, V145, V139, 0x0, V140]

================================

Block 0x19a
[0x19a:0x1a6]
---
Predecessors: [0x13b]
Successors: [0x1a7, 0x1a8]
---
0x19a JUMPDEST
0x19b PUSH2 0x2c6
0x19e GAS
0x19f SUB
0x1a0 CALL
0x1a1 ISZERO
0x1a2 ISZERO
0x1a3 PUSH2 0x1a8
0x1a6 JUMPI
---
0x19a: JUMPDEST 
0x19b: V150 = 0x2c6
0x19e: V151 = GAS
0x19f: V152 = SUB V151 0x2c6
0x1a0: V153 = CALL V152 V140 0x0 V139 V145 V139 0x20
0x1a1: V154 = ISZERO V153
0x1a2: V155 = ISZERO V154
0x1a3: V156 = 0x1a8
0x1a6: JUMPI 0x1a8 V155
---
Entry stack: [V12, 0x4d, V41, V50, S10, S9, V140, 0x5e431709, V143, 0x20, V139, V145, V139, 0x0, V140]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S10, S9, V140, 0x5e431709, V143]

================================

Block 0x1a7
[0x1a7:0x1a7]
---
Predecessors: [0x19a]
Successors: []
---
0x1a7 INVALID
---
0x1a7: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S4, S3, V140, 0x5e431709, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S4, S3, V140, 0x5e431709, V143]

================================

Block 0x1a8
[0x1a8:0x1be]
---
Predecessors: [0x19a]
Successors: [0x1bf, 0x226]
---
0x1a8 JUMPDEST
0x1a9 POP
0x1aa POP
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae MLOAD
0x1af PUSH1 0x1
0x1b1 PUSH1 0xa0
0x1b3 PUSH1 0x2
0x1b5 EXP
0x1b6 SUB
0x1b7 AND
0x1b8 ISZERO
0x1b9 SWAP1
0x1ba POP
0x1bb PUSH2 0x226
0x1be JUMPI
---
0x1a8: JUMPDEST 
0x1ab: V157 = 0x40
0x1ad: V158 = M[0x40]
0x1ae: V159 = M[V158]
0x1af: V160 = 0x1
0x1b1: V161 = 0xa0
0x1b3: V162 = 0x2
0x1b5: V163 = EXP 0x2 0xa0
0x1b6: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b7: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x1b8: V166 = ISZERO V165
0x1bb: V167 = 0x226
0x1be: JUMPI 0x226 V166
---
Entry stack: [V12, 0x4d, V41, V50, S4, S3, V140, 0x5e431709, V143]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S4, S3]

================================

Block 0x1bf
[0x1bf:0x215]
---
Predecessors: [0x1a8]
Successors: [0x216, 0x217]
---
0x1bf PUSH1 0x1
0x1c1 SLOAD
0x1c2 PUSH1 0x1
0x1c4 PUSH1 0xa0
0x1c6 PUSH1 0x2
0x1c8 EXP
0x1c9 SUB
0x1ca AND
0x1cb PUSH4 0x2525f5c1
0x1d0 GAS
0x1d1 PUSH1 0x40
0x1d3 DUP1
0x1d4 MLOAD
0x1d5 PUSH1 0xe0
0x1d7 PUSH1 0x2
0x1d9 EXP
0x1da PUSH4 0xffffffff
0x1df DUP6
0x1e0 AND
0x1e1 MUL
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec DUP7
0x1ed AND
0x1ee PUSH1 0x4
0x1f0 DUP3
0x1f1 ADD
0x1f2 MSTORE
0x1f3 PUSH1 0x24
0x1f5 DUP2
0x1f6 ADD
0x1f7 DUP8
0x1f8 SWAP1
0x1f9 MSTORE
0x1fa SWAP1
0x1fb MLOAD
0x1fc PUSH1 0x44
0x1fe DUP1
0x1ff DUP4
0x200 ADD
0x201 SWAP3
0x202 PUSH1 0x0
0x204 SWAP3
0x205 SWAP2
0x206 SWAP1
0x207 DUP3
0x208 SWAP1
0x209 SUB
0x20a ADD
0x20b DUP2
0x20c DUP4
0x20d DUP9
0x20e DUP1
0x20f EXTCODESIZE
0x210 ISZERO
0x211 ISZERO
0x212 PUSH2 0x217
0x215 JUMPI
---
0x1bf: V168 = 0x1
0x1c1: V169 = S[0x1]
0x1c2: V170 = 0x1
0x1c4: V171 = 0xa0
0x1c6: V172 = 0x2
0x1c8: V173 = EXP 0x2 0xa0
0x1c9: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ca: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1cb: V176 = 0x2525f5c1
0x1d0: V177 = GAS
0x1d1: V178 = 0x40
0x1d4: V179 = M[0x40]
0x1d5: V180 = 0xe0
0x1d7: V181 = 0x2
0x1d9: V182 = EXP 0x2 0xe0
0x1da: V183 = 0xffffffff
0x1e0: V184 = AND 0x2525f5c1 0xffffffff
0x1e1: V185 = MUL 0x2525f5c1 0x100000000000000000000000000000000000000000000000000000000
0x1e3: M[V179] = 0x2525f5c100000000000000000000000000000000000000000000000000000000
0x1e4: V186 = 0x1
0x1e6: V187 = 0xa0
0x1e8: V188 = 0x2
0x1ea: V189 = EXP 0x2 0xa0
0x1eb: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ed: V191 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V192 = 0x4
0x1f1: V193 = ADD V179 0x4
0x1f2: M[V193] = V191
0x1f3: V194 = 0x24
0x1f6: V195 = ADD V179 0x24
0x1f9: M[V195] = S1
0x1fb: V196 = M[0x40]
0x1fc: V197 = 0x44
0x200: V198 = ADD V179 0x44
0x202: V199 = 0x0
0x209: V200 = SUB V179 V196
0x20a: V201 = ADD V200 0x44
0x20f: V202 = EXTCODESIZE V175
0x210: V203 = ISZERO V202
0x211: V204 = ISZERO V203
0x212: V205 = 0x217
0x215: JUMPI 0x217 V204
---
Entry stack: [V12, 0x4d, V41, V50, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V175, 0x2525f5c1, V177, V198, 0x0, V196, V201, V196, 0x0, V175]
Exit stack: [V12, 0x4d, V41, V50, S1, S0, V175, 0x2525f5c1, V177, V198, 0x0, V196, V201, V196, 0x0, V175]

================================

Block 0x216
[0x216:0x216]
---
Predecessors: [0x1bf]
Successors: []
---
0x216 INVALID
---
0x216: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S11, S10, V175, 0x2525f5c1, V177, V198, 0x0, V196, V201, V196, 0x0, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S11, S10, V175, 0x2525f5c1, V177, V198, 0x0, V196, V201, V196, 0x0, V175]

================================

Block 0x217
[0x217:0x21f]
---
Predecessors: [0x1bf]
Successors: [0x220, 0x221]
---
0x217 JUMPDEST
0x218 DUP8
0x219 CALL
0x21a ISZERO
0x21b ISZERO
0x21c PUSH2 0x221
0x21f JUMPI
---
0x217: JUMPDEST 
0x219: V206 = CALL V177 V175 0x0 V196 V201 V196 0x0
0x21a: V207 = ISZERO V206
0x21b: V208 = ISZERO V207
0x21c: V209 = 0x221
0x21f: JUMPI 0x221 V208
---
Entry stack: [V12, 0x4d, V41, V50, S11, S10, V175, 0x2525f5c1, V177, V198, 0x0, V196, V201, V196, 0x0, V175]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, 0x4d, V41, V50, S11, S10, V175, 0x2525f5c1, V177, V198]

================================

Block 0x220
[0x220:0x220]
---
Predecessors: [0x217]
Successors: []
---
0x220 INVALID
---
0x220: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S5, S4, V175, 0x2525f5c1, V177, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S5, S4, V175, 0x2525f5c1, V177, V198]

================================

Block 0x221
[0x221:0x225]
---
Predecessors: [0x217]
Successors: [0x226]
---
0x221 JUMPDEST
0x222 POP
0x223 POP
0x224 POP
0x225 POP
---
0x221: JUMPDEST 
---
Entry stack: [V12, 0x4d, V41, V50, S5, S4, V175, 0x2525f5c1, V177, V198]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S5, S4]

================================

Block 0x226
[0x226:0x226]
---
Predecessors: [0x1a8, 0x221]
Successors: [0x227]
---
0x226 JUMPDEST
---
0x226: JUMPDEST 
---
Entry stack: [V12, 0x4d, V41, V50, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S1, S0]

================================

Block 0x227
[0x227:0x22c]
---
Predecessors: [0x226]
Successors: [0x4d]
---
0x227 JUMPDEST
0x228 POP
0x229 POP
0x22a POP
0x22b POP
0x22c JUMP
---
0x227: JUMPDEST 
0x22c: JUMP 0x4d
---
Entry stack: [V12, 0x4d, V41, V50, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x23b]
---
Predecessors: [0x9d]
Successors: [0xa5]
---
0x22d JUMPDEST
0x22e PUSH1 0x0
0x230 SLOAD
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 AND
0x23a DUP2
0x23b JUMP
---
0x22d: JUMPDEST 
0x22e: V210 = 0x0
0x230: V211 = S[0x0]
0x231: V212 = 0x1
0x233: V213 = 0xa0
0x235: V214 = 0x2
0x237: V215 = EXP 0x2 0xa0
0x238: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x23b: JUMP 0xa5
---
Entry stack: [V12, 0xa5]
Stack pops: 1
Stack additions: [S0, V217]
Exit stack: [V12, 0xa5, V217]

================================

Block 0x23c
[0x23c:0x247]
---
Predecessors: [0x123]
Successors: [0x448]
---
0x23c JUMPDEST
0x23d PUSH1 0x0
0x23f PUSH1 0x0
0x241 PUSH2 0x248
0x244 PUSH2 0x448
0x247 JUMP
---
0x23c: JUMPDEST 
0x23d: V218 = 0x0
0x23f: V219 = 0x0
0x241: V220 = 0x248
0x244: V221 = 0x448
0x247: JUMP 0x448
---
Entry stack: [V12, 0x4d, V41, V50, 0x0, 0x0, 0x130, V41]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x248]
Exit stack: [V12, 0x4d, V41, V50, 0x0, 0x0, 0x130, V41, 0x0, 0x0, 0x248]

================================

Block 0x248
[0x248:0x256]
---
Predecessors: [0x448]
Successors: [0x257, 0x259]
---
0x248 JUMPDEST
0x249 PUSH1 0x0
0x24b PUSH1 0x20
0x24d PUSH1 0x40
0x24f MLOAD
0x250 DUP1
0x251 MSIZE
0x252 LT
0x253 PUSH2 0x259
0x256 JUMPI
---
0x248: JUMPDEST 
0x249: V222 = 0x0
0x24b: V223 = 0x20
0x24d: V224 = 0x40
0x24f: V225 = M[0x40]
0x251: V226 = MSIZE
0x252: V227 = LT V226 V225
0x253: V228 = 0x259
0x256: JUMPI 0x259 V227
---
Entry stack: [V12, 0x4d, V41, V50, S6, 0x0, {0x130, 0x13b}, S3, 0x0, 0x0, V413]
Stack pops: 0
Stack additions: [0x0, 0x20, V225]
Exit stack: [V12, 0x4d, V41, V50, S6, 0x0, {0x130, 0x13b}, S3, 0x0, 0x0, V413, 0x0, 0x20, V225]

================================

Block 0x257
[0x257:0x258]
---
Predecessors: [0x248]
Successors: [0x259]
---
0x257 POP
0x258 MSIZE
---
0x258: V229 = MSIZE
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, 0x20, V225]
Stack pops: 1
Stack additions: [V229]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, 0x20, V229]

================================

Block 0x259
[0x259:0x269]
---
Predecessors: [0x248, 0x257]
Successors: [0x26a]
---
0x259 JUMPDEST
0x25a SWAP1
0x25b DUP1
0x25c DUP3
0x25d MSTORE
0x25e DUP1
0x25f PUSH1 0x20
0x261 MUL
0x262 PUSH1 0x20
0x264 ADD
0x265 DUP3
0x266 ADD
0x267 PUSH1 0x40
0x269 MSTORE
---
0x259: JUMPDEST 
0x25d: M[S0] = 0x20
0x25f: V230 = 0x20
0x261: V231 = MUL 0x20 0x20
0x262: V232 = 0x20
0x264: V233 = ADD 0x20 0x400
0x266: V234 = ADD S0 0x420
0x267: V235 = 0x40
0x269: M[0x40] = V234
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, 0x20, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, S0, 0x20]

================================

Block 0x26a
[0x26a:0x275]
---
Predecessors: [0x259]
Successors: [0x276]
---
0x26a JUMPDEST
0x26b POP
0x26c SWAP2
0x26d POP
0x26e PUSH1 0xf
0x270 SWAP3
0x271 POP
0x272 PUSH1 0x0
0x274 SWAP1
0x275 POP
---
0x26a: JUMPDEST 
0x26e: V236 = 0xf
0x272: V237 = 0x0
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, S1, 0x20]
Stack pops: 5
Stack additions: [0xf, S1, 0x0]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0xf, S1, 0x0]

================================

Block 0x276
[0x276:0x27f]
---
Predecessors: [0x26a, 0x2c0]
Successors: [0x280, 0x2c8]
---
0x276 JUMPDEST
0x277 PUSH1 0x10
0x279 DUP2
0x27a LT
0x27b ISZERO
0x27c PUSH2 0x2c8
0x27f JUMPI
---
0x276: JUMPDEST 
0x277: V238 = 0x10
0x27a: V239 = LT S0 0x10
0x27b: V240 = ISZERO V239
0x27c: V241 = 0x2c8
0x27f: JUMPI 0x2c8 V240
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]

================================

Block 0x280
[0x280:0x289]
---
Predecessors: [0x276]
Successors: [0x28a, 0x28b]
---
0x280 DUP5
0x281 DUP2
0x282 PUSH1 0x20
0x284 DUP2
0x285 LT
0x286 PUSH2 0x28b
0x289 JUMPI
---
0x282: V242 = 0x20
0x285: V243 = LT S0 0x20
0x286: V244 = 0x28b
0x289: JUMPI 0x28b V243
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S0]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0, S4, S0]

================================

Block 0x28a
[0x28a:0x28a]
---
Predecessors: [0x280]
Successors: []
---
0x28a INVALID
---
0x28a: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x28b
[0x28b:0x29e]
---
Predecessors: [0x280]
Successors: [0x29f, 0x2a0]
---
0x28b JUMPDEST
0x28c BYTE
0x28d PUSH1 0xf8
0x28f PUSH1 0x2
0x291 EXP
0x292 MUL
0x293 DUP3
0x294 DUP5
0x295 DUP2
0x296 MLOAD
0x297 DUP2
0x298 LT
0x299 ISZERO
0x29a ISZERO
0x29b PUSH2 0x2a0
0x29e JUMPI
---
0x28b: JUMPDEST 
0x28c: V245 = BYTE S0 S1
0x28d: V246 = 0xf8
0x28f: V247 = 0x2
0x291: V248 = EXP 0x2 0xf8
0x292: V249 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V245
0x296: V250 = M[S3]
0x298: V251 = LT S4 V250
0x299: V252 = ISZERO V251
0x29a: V253 = ISZERO V252
0x29b: V254 = 0x2a0
0x29e: JUMPI 0x2a0 V253
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V249, S3, S4]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, V249, S3, S4]

================================

Block 0x29f
[0x29f:0x29f]
---
Predecessors: [0x28b]
Successors: []
---
0x29f INVALID
---
0x29f: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V249, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V249, S1, S0]

================================

Block 0x2a0
[0x2a0:0x2bf]
---
Predecessors: [0x28b]
Successors: [0x2c0]
---
0x2a0 JUMPDEST
0x2a1 SWAP1
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 ADD
0x2a6 SWAP1
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xf8
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af NOT
0x2b0 AND
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 PUSH1 0x0
0x2b5 BYTE
0x2b6 SWAP1
0x2b7 MSTORE8
0x2b8 POP
0x2b9 PUSH1 0x0
0x2bb NOT
0x2bc SWAP1
0x2bd SWAP3
0x2be ADD
0x2bf SWAP2
---
0x2a0: JUMPDEST 
0x2a2: V255 = 0x20
0x2a4: V256 = ADD 0x20 S1
0x2a5: V257 = ADD V256 S0
0x2a7: V258 = 0x1
0x2a9: V259 = 0xf8
0x2ab: V260 = 0x2
0x2ad: V261 = EXP 0x2 0xf8
0x2ae: V262 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x2af: V263 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2b0: V264 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V249
0x2b3: V265 = 0x0
0x2b5: V266 = BYTE 0x0 V264
0x2b7: M8[V257] = V266
0x2b9: V267 = 0x0
0x2bb: V268 = NOT 0x0
0x2be: V269 = ADD S5 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V249, S1, S0]
Stack pops: 6
Stack additions: [V269, S4, S3]
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, V269, S4, S3]

================================

Block 0x2c0
[0x2c0:0x2c7]
---
Predecessors: [0x2a0]
Successors: [0x276]
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x1
0x2c3 ADD
0x2c4 PUSH2 0x276
0x2c7 JUMP
---
0x2c0: JUMPDEST 
0x2c1: V270 = 0x1
0x2c3: V271 = ADD 0x1 S0
0x2c4: V272 = 0x276
0x2c7: JUMP 0x276
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, V269, S1, S0]
Stack pops: 1
Stack additions: [V271]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, V269, S1, V271]

================================

Block 0x2c8
[0x2c8:0x2cf]
---
Predecessors: [0x276]
Successors: [0x2d0]
---
0x2c8 JUMPDEST
0x2c9 POP
0x2ca PUSH1 0x1f
0x2cc SWAP2
0x2cd POP
0x2ce PUSH1 0x10
---
0x2c8: JUMPDEST 
0x2ca: V273 = 0x1f
0x2ce: V274 = 0x10
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 3
Stack additions: [0x1f, S1, 0x10]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, 0x1f, S1, 0x10]

================================

Block 0x2d0
[0x2d0:0x2d9]
---
Predecessors: [0x2c8, 0x31a]
Successors: [0x2da, 0x322]
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x20
0x2d3 DUP2
0x2d4 LT
0x2d5 ISZERO
0x2d6 PUSH2 0x322
0x2d9 JUMPI
---
0x2d0: JUMPDEST 
0x2d1: V275 = 0x20
0x2d4: V276 = LT S0 0x20
0x2d5: V277 = ISZERO V276
0x2d6: V278 = 0x322
0x2d9: JUMPI 0x322 V277
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]

================================

Block 0x2da
[0x2da:0x2e3]
---
Predecessors: [0x2d0]
Successors: [0x2e4, 0x2e5]
---
0x2da DUP5
0x2db DUP2
0x2dc PUSH1 0x20
0x2de DUP2
0x2df LT
0x2e0 PUSH2 0x2e5
0x2e3 JUMPI
---
0x2dc: V279 = 0x20
0x2df: V280 = LT S0 0x20
0x2e0: V281 = 0x2e5
0x2e3: JUMPI 0x2e5 V280
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S0]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0, S4, S0]

================================

Block 0x2e4
[0x2e4:0x2e4]
---
Predecessors: [0x2da]
Successors: []
---
0x2e4 INVALID
---
0x2e4: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x2e5
[0x2e5:0x2f8]
---
Predecessors: [0x2da]
Successors: [0x2f9, 0x2fa]
---
0x2e5 JUMPDEST
0x2e6 BYTE
0x2e7 PUSH1 0xf8
0x2e9 PUSH1 0x2
0x2eb EXP
0x2ec MUL
0x2ed DUP3
0x2ee DUP5
0x2ef DUP2
0x2f0 MLOAD
0x2f1 DUP2
0x2f2 LT
0x2f3 ISZERO
0x2f4 ISZERO
0x2f5 PUSH2 0x2fa
0x2f8 JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V282 = BYTE S0 S1
0x2e7: V283 = 0xf8
0x2e9: V284 = 0x2
0x2eb: V285 = EXP 0x2 0xf8
0x2ec: V286 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V282
0x2f0: V287 = M[S3]
0x2f2: V288 = LT S4 V287
0x2f3: V289 = ISZERO V288
0x2f4: V290 = ISZERO V289
0x2f5: V291 = 0x2fa
0x2f8: JUMPI 0x2fa V290
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V286, S3, S4]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, V286, S3, S4]

================================

Block 0x2f9
[0x2f9:0x2f9]
---
Predecessors: [0x2e5]
Successors: []
---
0x2f9 INVALID
---
0x2f9: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V286, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V286, S1, S0]

================================

Block 0x2fa
[0x2fa:0x319]
---
Predecessors: [0x2e5]
Successors: [0x31a]
---
0x2fa JUMPDEST
0x2fb SWAP1
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff ADD
0x300 SWAP1
0x301 PUSH1 0x1
0x303 PUSH1 0xf8
0x305 PUSH1 0x2
0x307 EXP
0x308 SUB
0x309 NOT
0x30a AND
0x30b SWAP1
0x30c DUP2
0x30d PUSH1 0x0
0x30f BYTE
0x310 SWAP1
0x311 MSTORE8
0x312 POP
0x313 PUSH1 0x0
0x315 NOT
0x316 SWAP1
0x317 SWAP3
0x318 ADD
0x319 SWAP2
---
0x2fa: JUMPDEST 
0x2fc: V292 = 0x20
0x2fe: V293 = ADD 0x20 S1
0x2ff: V294 = ADD V293 S0
0x301: V295 = 0x1
0x303: V296 = 0xf8
0x305: V297 = 0x2
0x307: V298 = EXP 0x2 0xf8
0x308: V299 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x309: V300 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x30a: V301 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V286
0x30d: V302 = 0x0
0x30f: V303 = BYTE 0x0 V301
0x311: M8[V294] = V303
0x313: V304 = 0x0
0x315: V305 = NOT 0x0
0x318: V306 = ADD S5 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V286, S1, S0]
Stack pops: 6
Stack additions: [V306, S4, S3]
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, V306, S4, S3]

================================

Block 0x31a
[0x31a:0x321]
---
Predecessors: [0x2fa]
Successors: [0x2d0]
---
0x31a JUMPDEST
0x31b PUSH1 0x1
0x31d ADD
0x31e PUSH2 0x2d0
0x321 JUMP
---
0x31a: JUMPDEST 
0x31b: V307 = 0x1
0x31d: V308 = ADD 0x1 S0
0x31e: V309 = 0x2d0
0x321: JUMP 0x2d0
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, V306, S1, S0]
Stack pops: 1
Stack additions: [V308]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, V306, S1, V308]

================================

Block 0x322
[0x322:0x32a]
---
Predecessors: [0x2d0]
Successors: [0x430]
---
0x322 JUMPDEST
0x323 PUSH2 0x32b
0x326 DUP3
0x327 PUSH2 0x430
0x32a JUMP
---
0x322: JUMPDEST 
0x323: V310 = 0x32b
0x327: V311 = 0x430
0x32a: JUMP 0x430
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x32b, S1]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0, 0x32b, S1]

================================

Block 0x32b
[0x32b:0x32d]
---
Predecessors: [0x436, 0x442]
Successors: [0x32e]
---
0x32b JUMPDEST
0x32c SWAP4
0x32d POP
---
0x32b: JUMPDEST 
---
Entry stack: [V12, 0x4d, V41, V50, S8, 0x0, {0x130, 0x13b}, S5, 0x0, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [V12, 0x4d, V41, V50, S8, 0x0, {0x130, 0x13b}, S5, S0, S3, S2, S1]

================================

Block 0x32e
[0x32e:0x335]
---
Predecessors: [0x32b]
Successors: [0x130, 0x13b]
---
0x32e JUMPDEST
0x32f POP
0x330 POP
0x331 POP
0x332 SWAP2
0x333 SWAP1
0x334 POP
0x335 JUMP
---
0x32e: JUMPDEST 
0x335: JUMP {0x130, 0x13b}
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S3]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, S3]

================================

Block 0x336
[0x336:0x341]
---
Predecessors: [0x130]
Successors: [0x448]
---
0x336 JUMPDEST
0x337 PUSH1 0x0
0x339 PUSH1 0x0
0x33b PUSH2 0x342
0x33e PUSH2 0x448
0x341 JUMP
---
0x336: JUMPDEST 
0x337: V312 = 0x0
0x339: V313 = 0x0
0x33b: V314 = 0x342
0x33e: V315 = 0x448
0x341: JUMP 0x448
---
Entry stack: [V12, 0x4d, V41, V50, S3, 0x0, 0x13b, V50]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x342]
Exit stack: [V12, 0x4d, V41, V50, S3, 0x0, 0x13b, V50, 0x0, 0x0, 0x342]

================================

Block 0x342
[0x342:0x350]
---
Predecessors: [0x448]
Successors: [0x351, 0x353]
---
0x342 JUMPDEST
0x343 PUSH1 0x0
0x345 PUSH1 0x14
0x347 PUSH1 0x40
0x349 MLOAD
0x34a DUP1
0x34b MSIZE
0x34c LT
0x34d PUSH2 0x353
0x350 JUMPI
---
0x342: JUMPDEST 
0x343: V316 = 0x0
0x345: V317 = 0x14
0x347: V318 = 0x40
0x349: V319 = M[0x40]
0x34b: V320 = MSIZE
0x34c: V321 = LT V320 V319
0x34d: V322 = 0x353
0x350: JUMPI 0x353 V321
---
Entry stack: [V12, 0x4d, V41, V50, S6, 0x0, {0x130, 0x13b}, S3, 0x0, 0x0, V413]
Stack pops: 0
Stack additions: [0x0, 0x14, V319]
Exit stack: [V12, 0x4d, V41, V50, S6, 0x0, {0x130, 0x13b}, S3, 0x0, 0x0, V413, 0x0, 0x14, V319]

================================

Block 0x351
[0x351:0x352]
---
Predecessors: [0x342]
Successors: [0x353]
---
0x351 POP
0x352 MSIZE
---
0x352: V323 = MSIZE
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, 0x14, V319]
Stack pops: 1
Stack additions: [V323]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, 0x14, V323]

================================

Block 0x353
[0x353:0x363]
---
Predecessors: [0x342, 0x351]
Successors: [0x364]
---
0x353 JUMPDEST
0x354 SWAP1
0x355 DUP1
0x356 DUP3
0x357 MSTORE
0x358 DUP1
0x359 PUSH1 0x20
0x35b MUL
0x35c PUSH1 0x20
0x35e ADD
0x35f DUP3
0x360 ADD
0x361 PUSH1 0x40
0x363 MSTORE
---
0x353: JUMPDEST 
0x357: M[S0] = 0x14
0x359: V324 = 0x20
0x35b: V325 = MUL 0x20 0x14
0x35c: V326 = 0x20
0x35e: V327 = ADD 0x20 0x280
0x360: V328 = ADD S0 0x2a0
0x361: V329 = 0x40
0x363: M[0x40] = V328
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, 0x14, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, S0, 0x14]

================================

Block 0x364
[0x364:0x36f]
---
Predecessors: [0x353]
Successors: [0x370]
---
0x364 JUMPDEST
0x365 POP
0x366 SWAP2
0x367 POP
0x368 PUSH1 0x9
0x36a SWAP3
0x36b POP
0x36c PUSH1 0x0
0x36e SWAP1
0x36f POP
---
0x364: JUMPDEST 
0x368: V330 = 0x9
0x36c: V331 = 0x0
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x0, V413, 0x0, S1, 0x14]
Stack pops: 5
Stack additions: [0x9, S1, 0x0]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, 0x9, S1, 0x0]

================================

Block 0x370
[0x370:0x379]
---
Predecessors: [0x364, 0x3ba]
Successors: [0x37a, 0x3c2]
---
0x370 JUMPDEST
0x371 PUSH1 0xa
0x373 DUP2
0x374 LT
0x375 ISZERO
0x376 PUSH2 0x3c2
0x379 JUMPI
---
0x370: JUMPDEST 
0x371: V332 = 0xa
0x374: V333 = LT S0 0xa
0x375: V334 = ISZERO V333
0x376: V335 = 0x3c2
0x379: JUMPI 0x3c2 V334
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]

================================

Block 0x37a
[0x37a:0x383]
---
Predecessors: [0x370]
Successors: [0x384, 0x385]
---
0x37a DUP5
0x37b DUP2
0x37c PUSH1 0x14
0x37e DUP2
0x37f LT
0x380 PUSH2 0x385
0x383 JUMPI
---
0x37c: V336 = 0x14
0x37f: V337 = LT S0 0x14
0x380: V338 = 0x385
0x383: JUMPI 0x385 V337
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S0]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0, S4, S0]

================================

Block 0x384
[0x384:0x384]
---
Predecessors: [0x37a]
Successors: []
---
0x384 INVALID
---
0x384: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x385
[0x385:0x398]
---
Predecessors: [0x37a]
Successors: [0x399, 0x39a]
---
0x385 JUMPDEST
0x386 BYTE
0x387 PUSH1 0xf8
0x389 PUSH1 0x2
0x38b EXP
0x38c MUL
0x38d DUP3
0x38e DUP5
0x38f DUP2
0x390 MLOAD
0x391 DUP2
0x392 LT
0x393 ISZERO
0x394 ISZERO
0x395 PUSH2 0x39a
0x398 JUMPI
---
0x385: JUMPDEST 
0x386: V339 = BYTE S0 S1
0x387: V340 = 0xf8
0x389: V341 = 0x2
0x38b: V342 = EXP 0x2 0xf8
0x38c: V343 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V339
0x390: V344 = M[S3]
0x392: V345 = LT S4 V344
0x393: V346 = ISZERO V345
0x394: V347 = ISZERO V346
0x395: V348 = 0x39a
0x398: JUMPI 0x39a V347
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V343, S3, S4]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, V343, S3, S4]

================================

Block 0x399
[0x399:0x399]
---
Predecessors: [0x385]
Successors: []
---
0x399 INVALID
---
0x399: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V343, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V343, S1, S0]

================================

Block 0x39a
[0x39a:0x3b9]
---
Predecessors: [0x385]
Successors: [0x3ba]
---
0x39a JUMPDEST
0x39b SWAP1
0x39c PUSH1 0x20
0x39e ADD
0x39f ADD
0x3a0 SWAP1
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xf8
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 NOT
0x3aa AND
0x3ab SWAP1
0x3ac DUP2
0x3ad PUSH1 0x0
0x3af BYTE
0x3b0 SWAP1
0x3b1 MSTORE8
0x3b2 POP
0x3b3 PUSH1 0x0
0x3b5 NOT
0x3b6 SWAP1
0x3b7 SWAP3
0x3b8 ADD
0x3b9 SWAP2
---
0x39a: JUMPDEST 
0x39c: V349 = 0x20
0x39e: V350 = ADD 0x20 S1
0x39f: V351 = ADD V350 S0
0x3a1: V352 = 0x1
0x3a3: V353 = 0xf8
0x3a5: V354 = 0x2
0x3a7: V355 = EXP 0x2 0xf8
0x3a8: V356 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x3a9: V357 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3aa: V358 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V343
0x3ad: V359 = 0x0
0x3af: V360 = BYTE 0x0 V358
0x3b1: M8[V351] = V360
0x3b3: V361 = 0x0
0x3b5: V362 = NOT 0x0
0x3b8: V363 = ADD S5 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V343, S1, S0]
Stack pops: 6
Stack additions: [V363, S4, S3]
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, V363, S4, S3]

================================

Block 0x3ba
[0x3ba:0x3c1]
---
Predecessors: [0x39a]
Successors: [0x370]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x1
0x3bd ADD
0x3be PUSH2 0x370
0x3c1 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V364 = 0x1
0x3bd: V365 = ADD 0x1 S0
0x3be: V366 = 0x370
0x3c1: JUMP 0x370
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, V363, S1, S0]
Stack pops: 1
Stack additions: [V365]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, V363, S1, V365]

================================

Block 0x3c2
[0x3c2:0x3c9]
---
Predecessors: [0x370]
Successors: [0x3ca]
---
0x3c2 JUMPDEST
0x3c3 POP
0x3c4 PUSH1 0x13
0x3c6 SWAP2
0x3c7 POP
0x3c8 PUSH1 0xa
---
0x3c2: JUMPDEST 
0x3c4: V367 = 0x13
0x3c8: V368 = 0xa
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 3
Stack additions: [0x13, S1, 0xa]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, 0x13, S1, 0xa]

================================

Block 0x3ca
[0x3ca:0x3d3]
---
Predecessors: [0x3c2, 0x414]
Successors: [0x3d4, 0x41c]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x14
0x3cd DUP2
0x3ce LT
0x3cf ISZERO
0x3d0 PUSH2 0x41c
0x3d3 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V369 = 0x14
0x3ce: V370 = LT S0 0x14
0x3cf: V371 = ISZERO V370
0x3d0: V372 = 0x41c
0x3d3: JUMPI 0x41c V371
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]

================================

Block 0x3d4
[0x3d4:0x3dd]
---
Predecessors: [0x3ca]
Successors: [0x3de, 0x3df]
---
0x3d4 DUP5
0x3d5 DUP2
0x3d6 PUSH1 0x14
0x3d8 DUP2
0x3d9 LT
0x3da PUSH2 0x3df
0x3dd JUMPI
---
0x3d6: V373 = 0x14
0x3d9: V374 = LT S0 0x14
0x3da: V375 = 0x3df
0x3dd: JUMPI 0x3df V374
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S0]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0, S4, S0]

================================

Block 0x3de
[0x3de:0x3de]
---
Predecessors: [0x3d4]
Successors: []
---
0x3de INVALID
---
0x3de: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x3df
[0x3df:0x3f2]
---
Predecessors: [0x3d4]
Successors: [0x3f3, 0x3f4]
---
0x3df JUMPDEST
0x3e0 BYTE
0x3e1 PUSH1 0xf8
0x3e3 PUSH1 0x2
0x3e5 EXP
0x3e6 MUL
0x3e7 DUP3
0x3e8 DUP5
0x3e9 DUP2
0x3ea MLOAD
0x3eb DUP2
0x3ec LT
0x3ed ISZERO
0x3ee ISZERO
0x3ef PUSH2 0x3f4
0x3f2 JUMPI
---
0x3df: JUMPDEST 
0x3e0: V376 = BYTE S0 S1
0x3e1: V377 = 0xf8
0x3e3: V378 = 0x2
0x3e5: V379 = EXP 0x2 0xf8
0x3e6: V380 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V376
0x3ea: V381 = M[S3]
0x3ec: V382 = LT S4 V381
0x3ed: V383 = ISZERO V382
0x3ee: V384 = ISZERO V383
0x3ef: V385 = 0x3f4
0x3f2: JUMPI 0x3f4 V384
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V380, S3, S4]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, V380, S3, S4]

================================

Block 0x3f3
[0x3f3:0x3f3]
---
Predecessors: [0x3df]
Successors: []
---
0x3f3 INVALID
---
0x3f3: INVALID 
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V380, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V380, S1, S0]

================================

Block 0x3f4
[0x3f4:0x413]
---
Predecessors: [0x3df]
Successors: [0x414]
---
0x3f4 JUMPDEST
0x3f5 SWAP1
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 ADD
0x3fa SWAP1
0x3fb PUSH1 0x1
0x3fd PUSH1 0xf8
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 NOT
0x404 AND
0x405 SWAP1
0x406 DUP2
0x407 PUSH1 0x0
0x409 BYTE
0x40a SWAP1
0x40b MSTORE8
0x40c POP
0x40d PUSH1 0x0
0x40f NOT
0x410 SWAP1
0x411 SWAP3
0x412 ADD
0x413 SWAP2
---
0x3f4: JUMPDEST 
0x3f6: V386 = 0x20
0x3f8: V387 = ADD 0x20 S1
0x3f9: V388 = ADD V387 S0
0x3fb: V389 = 0x1
0x3fd: V390 = 0xf8
0x3ff: V391 = 0x2
0x401: V392 = EXP 0x2 0xf8
0x402: V393 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x403: V394 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x404: V395 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V380
0x407: V396 = 0x0
0x409: V397 = BYTE 0x0 V395
0x40b: M8[V388] = V397
0x40d: V398 = 0x0
0x40f: V399 = NOT 0x0
0x412: V400 = ADD S5 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V380, S1, S0]
Stack pops: 6
Stack additions: [V400, S4, S3]
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, V400, S4, S3]

================================

Block 0x414
[0x414:0x41b]
---
Predecessors: [0x3f4]
Successors: [0x3ca]
---
0x414 JUMPDEST
0x415 PUSH1 0x1
0x417 ADD
0x418 PUSH2 0x3ca
0x41b JUMP
---
0x414: JUMPDEST 
0x415: V401 = 0x1
0x417: V402 = ADD 0x1 S0
0x418: V403 = 0x3ca
0x41b: JUMP 0x3ca
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, V400, S1, S0]
Stack pops: 1
Stack additions: [V402]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, V400, S1, V402]

================================

Block 0x41c
[0x41c:0x424]
---
Predecessors: [0x3ca]
Successors: [0x43b]
---
0x41c JUMPDEST
0x41d PUSH2 0x32b
0x420 DUP3
0x421 PUSH2 0x43b
0x424 JUMP
---
0x41c: JUMPDEST 
0x41d: V404 = 0x32b
0x421: V405 = 0x43b
0x424: JUMP 0x43b
---
Entry stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x32b, S1]
Exit stack: [V12, 0x4d, V41, V50, S7, 0x0, {0x130, 0x13b}, S4, 0x0, S2, S1, S0, 0x32b, S1]

================================

Block 0x425
[0x425:0x427]
---
Predecessors: []
Successors: [0x428]
---
0x425 JUMPDEST
0x426 SWAP4
0x427 POP
---
0x425: JUMPDEST 
---
Entry stack: []
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [S0, S3, S2, S1]

================================

Block 0x428
[0x428:0x42f]
---
Predecessors: [0x425]
Successors: []
Has unresolved jump.
---
0x428 JUMPDEST
0x429 POP
0x42a POP
0x42b POP
0x42c SWAP2
0x42d SWAP1
0x42e POP
0x42f JUMP
---
0x428: JUMPDEST 
0x42f: JUMP S5
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S3]
Exit stack: [S3]

================================

Block 0x430
[0x430:0x435]
---
Predecessors: [0x322]
Successors: [0x436]
---
0x430 JUMPDEST
0x431 PUSH1 0x20
0x433 DUP2
0x434 ADD
0x435 MLOAD
---
0x430: JUMPDEST 
0x431: V406 = 0x20
0x434: V407 = ADD S0 0x20
0x435: V408 = M[V407]
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, 0x32b, S0]
Stack pops: 1
Stack additions: [S0, V408]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, 0x32b, S0, V408]

================================

Block 0x436
[0x436:0x43a]
---
Predecessors: [0x430]
Successors: [0x32b]
---
0x436 JUMPDEST
0x437 SWAP2
0x438 SWAP1
0x439 POP
0x43a JUMP
---
0x436: JUMPDEST 
0x43a: JUMP 0x32b
---
Entry stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, 0x32b, S1, V408]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x4d, V41, V50, S10, 0x0, {0x130, 0x13b}, S7, 0x0, S5, S4, S3, V408]

================================

Block 0x43b
[0x43b:0x441]
---
Predecessors: [0x41c]
Successors: [0x442]
---
0x43b JUMPDEST
0x43c PUSH1 0x14
0x43e DUP2
0x43f ADD
0x440 MLOAD
0x441 DUP1
---
0x43b: JUMPDEST 
0x43c: V409 = 0x14
0x43f: V410 = ADD S0 0x14
0x440: V411 = M[V410]
---
Entry stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, 0x32b, S0]
Stack pops: 1
Stack additions: [S0, V411, V411]
Exit stack: [V12, 0x4d, V41, V50, S9, 0x0, {0x130, 0x13b}, S6, 0x0, S4, S3, S2, 0x32b, S0, V411, V411]

================================

Block 0x442
[0x442:0x447]
---
Predecessors: [0x43b]
Successors: [0x32b]
---
0x442 JUMPDEST
0x443 POP
0x444 SWAP2
0x445 SWAP1
0x446 POP
0x447 JUMP
---
0x442: JUMPDEST 
0x447: JUMP 0x32b
---
Entry stack: [V12, 0x4d, V41, V50, S11, 0x0, {0x130, 0x13b}, S8, 0x0, S6, S5, S4, 0x32b, S2, V411, V411]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, 0x4d, V41, V50, S11, 0x0, {0x130, 0x13b}, S8, 0x0, S6, S5, S4, V411]

================================

Block 0x448
[0x448:0x459]
---
Predecessors: [0x23c, 0x336]
Successors: [0x248, 0x342]
---
0x448 JUMPDEST
0x449 PUSH1 0x40
0x44b DUP1
0x44c MLOAD
0x44d PUSH1 0x20
0x44f DUP2
0x450 ADD
0x451 SWAP1
0x452 SWAP2
0x453 MSTORE
0x454 PUSH1 0x0
0x456 DUP2
0x457 MSTORE
0x458 SWAP1
0x459 JUMP
---
0x448: JUMPDEST 
0x449: V412 = 0x40
0x44c: V413 = M[0x40]
0x44d: V414 = 0x20
0x450: V415 = ADD V413 0x20
0x453: M[0x40] = V415
0x454: V416 = 0x0
0x457: M[V413] = 0x0
0x459: JUMP {0x248, 0x342}
---
Entry stack: [V12, 0x4d, V41, V50, S6, 0x0, {0x130, 0x13b}, S3, 0x0, 0x0, {0x248, 0x342}]
Stack pops: 1
Stack additions: [V413]
Exit stack: [V12, 0x4d, V41, V50, S6, 0x0, {0x130, 0x13b}, S3, 0x0, 0x0, V413]

================================

Block 0x45a
[0x45a:0x485]
---
Predecessors: []
Successors: []
---
0x45a STOP
0x45b LOG1
0x45c PUSH6 0x627a7a723058
0x463 SHA3
0x464 SAR
0x465 MISSING 0xe0
0x466 BLOCKHASH
0x467 PUSH29 0x9bcd3644d903f61d7262a53dc1f2a107638aa4689968dcc44bcc710a00
0x485 MISSING 0x29
---
0x45a: STOP 
0x45b: LOG S0 S1 S2
0x45c: V417 = 0x627a7a723058
0x463: V418 = SHA3 0x627a7a723058 S3
0x464: V419 = SAR V418 S4
0x465: MISSING 0xe0
0x466: V420 = BLOCKHASH S0
0x467: V421 = 0x9bcd3644d903f61d7262a53dc1f2a107638aa4689968dcc44bcc710a00
0x485: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V419, 0x9bcd3644d903f61d7262a53dc1f2a107638aa4689968dcc44bcc710a00, V420]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x4f
Exit block: 0x4d
Body: 0x4a, 0x4b, 0x4d, 0x4f, 0x56, 0x57, 0xc1, 0xd9

Function 1:
Public function signature: 0x5b980628
Entry block: 0x61
Exit block: 0x4d
Body: 0x4a, 0x4b, 0x4d, 0x61, 0x68, 0x69, 0xea, 0x11f

Function 2:
Public function signature: 0x5efa79e8
Entry block: 0x73
Exit block: 0x3f3
Body: 0x4d, 0x73, 0x7a, 0x7b, 0x123, 0x130, 0x13b, 0x199, 0x19a, 0x1a7, 0x1a8, 0x1bf, 0x216, 0x217, 0x220, 0x221, 0x226, 0x227, 0x23c, 0x248, 0x257, 0x259, 0x26a, 0x276, 0x280, 0x28a, 0x28b, 0x29f, 0x2a0, 0x2c0, 0x2c8, 0x2d0, 0x2da, 0x2e4, 0x2e5, 0x2f9, 0x2fa, 0x31a, 0x322, 0x32b, 0x32e, 0x336, 0x342, 0x351, 0x353, 0x364, 0x370, 0x37a, 0x384, 0x385, 0x399, 0x39a, 0x3ba, 0x3c2, 0x3ca, 0x3d4, 0x3de, 0x3df, 0x3f3, 0x3f4, 0x414, 0x41c, 0x430, 0x436, 0x43b, 0x442

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x95
Exit block: 0xa5
Body: 0x95, 0x9c, 0x9d, 0xa5, 0x22d

Function 4:
Public fallback function
Entry block: 0x46
Exit block: 0x4d
Body: 0x46, 0x4a, 0x4b, 0x4d

