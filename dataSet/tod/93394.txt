Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6a
0xa: JUMPI 0x6a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x138]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x41c0e1b5
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x138
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x41c0e1b5
0x39: V12 = EQ V10 0x41c0e1b5
0x3a: V13 = 0x138
0x3d: JUMPI 0x138 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x14d]
---
0x3e DUP1
0x3f PUSH4 0x99f43aba
0x44 EQ
0x45 PUSH2 0x14d
0x48 JUMPI
---
0x3f: V14 = 0x99f43aba
0x44: V15 = EQ 0x99f43aba V10
0x45: V16 = 0x14d
0x48: JUMPI 0x14d V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x17c]
---
0x49 DUP1
0x4a PUSH4 0xa6f9dae1
0x4f EQ
0x50 PUSH2 0x17c
0x53 JUMPI
---
0x4a: V17 = 0xa6f9dae1
0x4f: V18 = EQ 0xa6f9dae1 V10
0x50: V19 = 0x17c
0x53: JUMPI 0x17c V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x19d]
---
0x54 DUP1
0x55 PUSH4 0xab86de6c
0x5a EQ
0x5b PUSH2 0x19d
0x5e JUMPI
---
0x55: V20 = 0xab86de6c
0x5a: V21 = EQ 0xab86de6c V10
0x5b: V22 = 0x19d
0x5e: JUMPI 0x19d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x1be]
---
0x5f DUP1
0x60 PUSH4 0xb2bdfa7b
0x65 EQ
0x66 PUSH2 0x1be
0x69 JUMPI
---
0x60: V23 = 0xb2bdfa7b
0x65: V24 = EQ 0xb2bdfa7b V10
0x66: V25 = 0x1be
0x69: JUMPI 0x1be V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x0, 0x5f]
Successors: [0x6e]
---
0x6a JUMPDEST
0x6b PUSH2 0x136
---
0x6a: JUMPDEST 
0x6b: V26 = 0x136
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x136]
Exit stack: [V10, 0x136]

================================

Block 0x6e
[0x6e:0x78]
---
Predecessors: [0x6a]
Successors: [0x79, 0x132]
---
0x6e JUMPDEST
0x6f PUSH1 0x0
0x71 DUP1
0x72 CALLVALUE
0x73 GT
0x74 ISZERO
0x75 PUSH2 0x132
0x78 JUMPI
---
0x6e: JUMPDEST 
0x6f: V27 = 0x0
0x72: V28 = CALLVALUE
0x73: V29 = GT V28 0x0
0x74: V30 = ISZERO V29
0x75: V31 = 0x132
0x78: JUMPI 0x132 V30
---
Entry stack: [V10, 0x136]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x136, 0x0]

================================

Block 0x79
[0x79:0xa7]
---
Predecessors: [0x6e]
Successors: [0xa8, 0xac]
---
0x79 PUSH1 0x0
0x7b SLOAD
0x7c PUSH1 0x1
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SUB
0x84 AND
0x85 CALLVALUE
0x86 DUP1
0x87 ISZERO
0x88 PUSH2 0x8fc
0x8b MUL
0x8c SWAP1
0x8d PUSH1 0x40
0x8f MLOAD
0x90 PUSH1 0x0
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 DUP4
0x97 SUB
0x98 DUP2
0x99 DUP6
0x9a DUP9
0x9b DUP9
0x9c CALL
0x9d SWAP4
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 ISZERO
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0x79: V32 = 0x0
0x7b: V33 = S[0x0]
0x7c: V34 = 0x1
0x7e: V35 = 0xa0
0x80: V36 = 0x2
0x82: V37 = EXP 0x2 0xa0
0x83: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x85: V40 = CALLVALUE
0x87: V41 = ISZERO V40
0x88: V42 = 0x8fc
0x8b: V43 = MUL 0x8fc V41
0x8d: V44 = 0x40
0x8f: V45 = M[0x40]
0x90: V46 = 0x0
0x92: V47 = 0x40
0x94: V48 = M[0x40]
0x97: V49 = SUB V45 V48
0x9c: V50 = CALL V43 V39 V40 V48 V49 V48 0x0
0xa2: V51 = ISZERO V50
0xa3: V52 = ISZERO V51
0xa4: V53 = 0xac
0xa7: JUMPI 0xac V52
---
Entry stack: [V10, 0x136, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, 0x0]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0x79]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V54 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V10, 0x136, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, 0x0]

================================

Block 0xac
[0xac:0x118]
---
Predecessors: [0x79]
Successors: [0x119, 0x11d]
---
0xac JUMPDEST
0xad POP
0xae PUSH1 0x1
0xb0 SLOAD
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 AND
0xba DUP1
0xbb PUSH4 0x965b0dd
0xc0 ADDRESS
0xc1 CALLVALUE
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe3 PUSH4 0xffffffff
0xe8 DUP6
0xe9 AND
0xea MUL
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x1
0xef PUSH1 0xa0
0xf1 PUSH1 0x2
0xf3 EXP
0xf4 SUB
0xf5 SWAP1
0xf6 SWAP3
0xf7 AND
0xf8 PUSH1 0x4
0xfa DUP4
0xfb ADD
0xfc MSTORE
0xfd PUSH1 0x24
0xff DUP3
0x100 ADD
0x101 MSTORE
0x102 PUSH1 0x44
0x104 ADD
0x105 PUSH1 0x0
0x107 PUSH1 0x40
0x109 MLOAD
0x10a DUP1
0x10b DUP4
0x10c SUB
0x10d DUP2
0x10e PUSH1 0x0
0x110 DUP8
0x111 DUP1
0x112 EXTCODESIZE
0x113 ISZERO
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0xac: JUMPDEST 
0xae: V55 = 0x1
0xb0: V56 = S[0x1]
0xb1: V57 = 0x1
0xb3: V58 = 0xa0
0xb5: V59 = 0x2
0xb7: V60 = EXP 0x2 0xa0
0xb8: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xbb: V63 = 0x965b0dd
0xc0: V64 = ADDRESS
0xc1: V65 = CALLVALUE
0xc2: V66 = 0x40
0xc4: V67 = M[0x40]
0xc5: V68 = 0x100000000000000000000000000000000000000000000000000000000
0xe3: V69 = 0xffffffff
0xe9: V70 = AND 0x965b0dd 0xffffffff
0xea: V71 = MUL 0x965b0dd 0x100000000000000000000000000000000000000000000000000000000
0xec: M[V67] = 0x965b0dd00000000000000000000000000000000000000000000000000000000
0xed: V72 = 0x1
0xef: V73 = 0xa0
0xf1: V74 = 0x2
0xf3: V75 = EXP 0x2 0xa0
0xf4: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V77 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V78 = 0x4
0xfb: V79 = ADD V67 0x4
0xfc: M[V79] = V77
0xfd: V80 = 0x24
0x100: V81 = ADD V67 0x24
0x101: M[V81] = V65
0x102: V82 = 0x44
0x104: V83 = ADD 0x44 V67
0x105: V84 = 0x0
0x107: V85 = 0x40
0x109: V86 = M[0x40]
0x10c: V87 = SUB V83 V86
0x10e: V88 = 0x0
0x112: V89 = EXTCODESIZE V62
0x113: V90 = ISZERO V89
0x114: V91 = ISZERO V90
0x115: V92 = 0x11d
0x118: JUMPI 0x11d V91
---
Entry stack: [V10, 0x136, 0x0]
Stack pops: 1
Stack additions: [V62, V62, 0x965b0dd, V83, 0x0, V86, V87, V86, 0x0, V62]
Exit stack: [V10, 0x136, V62, V62, 0x965b0dd, V83, 0x0, V86, V87, V86, 0x0, V62]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0xac]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V93 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x136, V62, V62, 0x965b0dd, V83, 0x0, V86, V87, V86, 0x0, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, V62, V62, 0x965b0dd, V83, 0x0, V86, V87, V86, 0x0, V62]

================================

Block 0x11d
[0x11d:0x129]
---
Predecessors: [0xac]
Successors: [0x12a, 0x12e]
---
0x11d JUMPDEST
0x11e PUSH2 0x2c6
0x121 GAS
0x122 SUB
0x123 CALL
0x124 ISZERO
0x125 ISZERO
0x126 PUSH2 0x12e
0x129 JUMPI
---
0x11d: JUMPDEST 
0x11e: V94 = 0x2c6
0x121: V95 = GAS
0x122: V96 = SUB V95 0x2c6
0x123: V97 = CALL V96 V62 0x0 V86 V87 V86 0x0
0x124: V98 = ISZERO V97
0x125: V99 = ISZERO V98
0x126: V100 = 0x12e
0x129: JUMPI 0x12e V99
---
Entry stack: [V10, 0x136, V62, V62, 0x965b0dd, V83, 0x0, V86, V87, V86, 0x0, V62]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x136, V62, V62, 0x965b0dd, V83]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0x11d]
Successors: []
---
0x12a PUSH1 0x0
0x12c DUP1
0x12d REVERT
---
0x12a: V101 = 0x0
0x12d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x136, V62, V62, 0x965b0dd, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, V62, V62, 0x965b0dd, V83]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x11d]
Successors: [0x132]
---
0x12e JUMPDEST
0x12f POP
0x130 POP
0x131 POP
---
0x12e: JUMPDEST 
---
Entry stack: [V10, 0x136, V62, V62, 0x965b0dd, V83]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x136, V62]

================================

Block 0x132
[0x132:0x132]
---
Predecessors: [0x6e, 0x12e, 0x224, 0x268]
Successors: [0x133]
---
0x132 JUMPDEST
---
0x132: JUMPDEST 
---
Entry stack: [V10, 0x136, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, S0]

================================

Block 0x133
[0x133:0x135]
---
Predecessors: [0x132]
Successors: [0x136]
---
0x133 JUMPDEST
0x134 POP
0x135 JUMP
---
0x133: JUMPDEST 
0x135: JUMP 0x136
---
Entry stack: [V10, 0x136, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x136
[0x136:0x137]
---
Predecessors: [0x133, 0x213, 0x265, 0x2a9]
Successors: []
---
0x136 JUMPDEST
0x137 STOP
---
0x136: JUMPDEST 
0x137: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x138
[0x138:0x13e]
---
Predecessors: [0xb]
Successors: [0x13f, 0x143]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0x138: JUMPDEST 
0x139: V102 = CALLVALUE
0x13a: V103 = ISZERO V102
0x13b: V104 = 0x143
0x13e: JUMPI 0x143 V103
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0x138]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V105 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x138]
Successors: [0x1ed]
---
0x143 JUMPDEST
0x144 PUSH2 0x136
0x147 PUSH2 0x1ed
0x14a JUMP
---
0x143: JUMPDEST 
0x144: V106 = 0x136
0x147: V107 = 0x1ed
0x14a: JUMP 0x1ed
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x136]
Exit stack: [V10, 0x136]

================================

Block 0x14b
[0x14b:0x14c]
---
Predecessors: []
Successors: []
---
0x14b JUMPDEST
0x14c STOP
---
0x14b: JUMPDEST 
0x14c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0x3e]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V108 = CALLVALUE
0x14f: V109 = ISZERO V108
0x150: V110 = 0x158
0x153: JUMPI 0x158 V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V111 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x14d]
Successors: [0x215]
---
0x158 JUMPDEST
0x159 PUSH2 0x160
0x15c PUSH2 0x215
0x15f JUMP
---
0x158: JUMPDEST 
0x159: V112 = 0x160
0x15c: V113 = 0x215
0x15f: JUMP 0x215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V10, 0x160]

================================

Block 0x160
[0x160:0x17b]
---
Predecessors: [0x215, 0x2ac]
Successors: []
---
0x160 JUMPDEST
0x161 PUSH1 0x40
0x163 MLOAD
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c SWAP1
0x16d SWAP2
0x16e AND
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x20
0x173 ADD
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 SWAP2
0x179 SUB
0x17a SWAP1
0x17b RETURN
---
0x160: JUMPDEST 
0x161: V114 = 0x40
0x163: V115 = M[0x40]
0x164: V116 = 0x1
0x166: V117 = 0xa0
0x168: V118 = 0x2
0x16a: V119 = EXP 0x2 0xa0
0x16b: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V121 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x170: M[V115] = V121
0x171: V122 = 0x20
0x173: V123 = ADD 0x20 V115
0x174: V124 = 0x40
0x176: V125 = M[0x40]
0x179: V126 = SUB V123 V125
0x17b: RETURN V125 V126
---
Entry stack: [V10, 0x160, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x160]

================================

Block 0x17c
[0x17c:0x182]
---
Predecessors: [0x49]
Successors: [0x183, 0x187]
---
0x17c JUMPDEST
0x17d CALLVALUE
0x17e ISZERO
0x17f PUSH2 0x187
0x182 JUMPI
---
0x17c: JUMPDEST 
0x17d: V127 = CALLVALUE
0x17e: V128 = ISZERO V127
0x17f: V129 = 0x187
0x182: JUMPI 0x187 V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x183
[0x183:0x186]
---
Predecessors: [0x17c]
Successors: []
---
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
---
0x183: V130 = 0x0
0x186: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x187
[0x187:0x19a]
---
Predecessors: [0x17c]
Successors: [0x224]
---
0x187 JUMPDEST
0x188 PUSH2 0x136
0x18b PUSH1 0x1
0x18d PUSH1 0xa0
0x18f PUSH1 0x2
0x191 EXP
0x192 SUB
0x193 PUSH1 0x4
0x195 CALLDATALOAD
0x196 AND
0x197 PUSH2 0x224
0x19a JUMP
---
0x187: JUMPDEST 
0x188: V131 = 0x136
0x18b: V132 = 0x1
0x18d: V133 = 0xa0
0x18f: V134 = 0x2
0x191: V135 = EXP 0x2 0xa0
0x192: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x193: V137 = 0x4
0x195: V138 = CALLDATALOAD 0x4
0x196: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x197: V140 = 0x224
0x19a: JUMP 0x224
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x136, V139]
Exit stack: [V10, 0x136, V139]

================================

Block 0x19b
[0x19b:0x19c]
---
Predecessors: []
Successors: []
---
0x19b JUMPDEST
0x19c STOP
---
0x19b: JUMPDEST 
0x19c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19d
[0x19d:0x1a3]
---
Predecessors: [0x54]
Successors: [0x1a4, 0x1a8]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f ISZERO
0x1a0 PUSH2 0x1a8
0x1a3 JUMPI
---
0x19d: JUMPDEST 
0x19e: V141 = CALLVALUE
0x19f: V142 = ISZERO V141
0x1a0: V143 = 0x1a8
0x1a3: JUMPI 0x1a8 V142
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a4
[0x1a4:0x1a7]
---
Predecessors: [0x19d]
Successors: []
---
0x1a4 PUSH1 0x0
0x1a6 DUP1
0x1a7 REVERT
---
0x1a4: V144 = 0x0
0x1a7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a8
[0x1a8:0x1bb]
---
Predecessors: [0x19d]
Successors: [0x268]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x136
0x1ac PUSH1 0x1
0x1ae PUSH1 0xa0
0x1b0 PUSH1 0x2
0x1b2 EXP
0x1b3 SUB
0x1b4 PUSH1 0x4
0x1b6 CALLDATALOAD
0x1b7 AND
0x1b8 PUSH2 0x268
0x1bb JUMP
---
0x1a8: JUMPDEST 
0x1a9: V145 = 0x136
0x1ac: V146 = 0x1
0x1ae: V147 = 0xa0
0x1b0: V148 = 0x2
0x1b2: V149 = EXP 0x2 0xa0
0x1b3: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b4: V151 = 0x4
0x1b6: V152 = CALLDATALOAD 0x4
0x1b7: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V154 = 0x268
0x1bb: JUMP 0x268
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x136, V153]
Exit stack: [V10, 0x136, V153]

================================

Block 0x1bc
[0x1bc:0x1bd]
---
Predecessors: []
Successors: []
---
0x1bc JUMPDEST
0x1bd STOP
---
0x1bc: JUMPDEST 
0x1bd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1be
[0x1be:0x1c4]
---
Predecessors: [0x5f]
Successors: [0x1c5, 0x1c9]
---
0x1be JUMPDEST
0x1bf CALLVALUE
0x1c0 ISZERO
0x1c1 PUSH2 0x1c9
0x1c4 JUMPI
---
0x1be: JUMPDEST 
0x1bf: V155 = CALLVALUE
0x1c0: V156 = ISZERO V155
0x1c1: V157 = 0x1c9
0x1c4: JUMPI 0x1c9 V156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c5
[0x1c5:0x1c8]
---
Predecessors: [0x1be]
Successors: []
---
0x1c5 PUSH1 0x0
0x1c7 DUP1
0x1c8 REVERT
---
0x1c5: V158 = 0x0
0x1c8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c9
[0x1c9:0x1d0]
---
Predecessors: [0x1be]
Successors: [0x2ac]
---
0x1c9 JUMPDEST
0x1ca PUSH2 0x160
0x1cd PUSH2 0x2ac
0x1d0 JUMP
---
0x1c9: JUMPDEST 
0x1ca: V159 = 0x160
0x1cd: V160 = 0x2ac
0x1d0: JUMP 0x2ac
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V10, 0x160]

================================

Block 0x1d1
[0x1d1:0x1ec]
---
Predecessors: []
Successors: []
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 PUSH1 0x1
0x1d7 PUSH1 0xa0
0x1d9 PUSH1 0x2
0x1db EXP
0x1dc SUB
0x1dd SWAP1
0x1de SWAP2
0x1df AND
0x1e0 DUP2
0x1e1 MSTORE
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 SWAP2
0x1ea SUB
0x1eb SWAP1
0x1ec RETURN
---
0x1d1: JUMPDEST 
0x1d2: V161 = 0x40
0x1d4: V162 = M[0x40]
0x1d5: V163 = 0x1
0x1d7: V164 = 0xa0
0x1d9: V165 = 0x2
0x1db: V166 = EXP 0x2 0xa0
0x1dc: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1df: V168 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: M[V162] = V168
0x1e2: V169 = 0x20
0x1e4: V170 = ADD 0x20 V162
0x1e5: V171 = 0x40
0x1e7: V172 = M[0x40]
0x1ea: V173 = SUB V170 V172
0x1ec: RETURN V172 V173
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ed
[0x1ed:0x204]
---
Predecessors: [0x143]
Successors: [0x205, 0x212]
---
0x1ed JUMPDEST
0x1ee PUSH1 0x0
0x1f0 SLOAD
0x1f1 CALLER
0x1f2 PUSH1 0x1
0x1f4 PUSH1 0xa0
0x1f6 PUSH1 0x2
0x1f8 EXP
0x1f9 SUB
0x1fa SWAP1
0x1fb DUP2
0x1fc AND
0x1fd SWAP2
0x1fe AND
0x1ff EQ
0x200 ISZERO
0x201 PUSH2 0x212
0x204 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V174 = 0x0
0x1f0: V175 = S[0x0]
0x1f1: V176 = CALLER
0x1f2: V177 = 0x1
0x1f4: V178 = 0xa0
0x1f6: V179 = 0x2
0x1f8: V180 = EXP 0x2 0xa0
0x1f9: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fc: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x1fe: V183 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V184 = EQ V183 V182
0x200: V185 = ISZERO V184
0x201: V186 = 0x212
0x204: JUMPI 0x212 V185
---
Entry stack: [V10, 0x136]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136]

================================

Block 0x205
[0x205:0x211]
---
Predecessors: [0x1ed]
Successors: []
---
0x205 PUSH1 0x0
0x207 SLOAD
0x208 PUSH1 0x1
0x20a PUSH1 0xa0
0x20c PUSH1 0x2
0x20e EXP
0x20f SUB
0x210 AND
0x211 SELFDESTRUCT
---
0x205: V187 = 0x0
0x207: V188 = S[0x0]
0x208: V189 = 0x1
0x20a: V190 = 0xa0
0x20c: V191 = 0x2
0x20e: V192 = EXP 0x2 0xa0
0x20f: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x211: SELFDESTRUCT V194
---
Entry stack: [V10, 0x136]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136]

================================

Block 0x212
[0x212:0x212]
---
Predecessors: [0x1ed]
Successors: [0x213]
---
0x212 JUMPDEST
---
0x212: JUMPDEST 
---
Entry stack: [V10, 0x136]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136]

================================

Block 0x213
[0x213:0x214]
---
Predecessors: [0x212]
Successors: [0x136]
---
0x213 JUMPDEST
0x214 JUMP
---
0x213: JUMPDEST 
0x214: JUMP 0x136
---
Entry stack: [V10, 0x136]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x215
[0x215:0x223]
---
Predecessors: [0x158]
Successors: [0x160]
---
0x215 JUMPDEST
0x216 PUSH1 0x1
0x218 SLOAD
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 AND
0x222 DUP2
0x223 JUMP
---
0x215: JUMPDEST 
0x216: V195 = 0x1
0x218: V196 = S[0x1]
0x219: V197 = 0x1
0x21b: V198 = 0xa0
0x21d: V199 = 0x2
0x21f: V200 = EXP 0x2 0xa0
0x220: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x223: JUMP 0x160
---
Entry stack: [V10, 0x160]
Stack pops: 1
Stack additions: [S0, V202]
Exit stack: [V10, 0x160, V202]

================================

Block 0x224
[0x224:0x23b]
---
Predecessors: [0x187]
Successors: [0x132, 0x23c]
---
0x224 JUMPDEST
0x225 PUSH1 0x0
0x227 SLOAD
0x228 CALLER
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 SWAP1
0x232 DUP2
0x233 AND
0x234 SWAP2
0x235 AND
0x236 EQ
0x237 ISZERO
0x238 PUSH2 0x132
0x23b JUMPI
---
0x224: JUMPDEST 
0x225: V203 = 0x0
0x227: V204 = S[0x0]
0x228: V205 = CALLER
0x229: V206 = 0x1
0x22b: V207 = 0xa0
0x22d: V208 = 0x2
0x22f: V209 = EXP 0x2 0xa0
0x230: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x233: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x235: V212 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x236: V213 = EQ V212 V211
0x237: V214 = ISZERO V213
0x238: V215 = 0x132
0x23b: JUMPI 0x132 V214
---
Entry stack: [V10, 0x136, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, V139]

================================

Block 0x23c
[0x23c:0x263]
---
Predecessors: [0x224]
Successors: [0x264]
---
0x23c PUSH1 0x0
0x23e DUP1
0x23f SLOAD
0x240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x255 NOT
0x256 AND
0x257 PUSH1 0x1
0x259 PUSH1 0xa0
0x25b PUSH1 0x2
0x25d EXP
0x25e SUB
0x25f DUP4
0x260 AND
0x261 OR
0x262 SWAP1
0x263 SSTORE
---
0x23c: V216 = 0x0
0x23f: V217 = S[0x0]
0x240: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x255: V219 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x256: V220 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V217
0x257: V221 = 0x1
0x259: V222 = 0xa0
0x25b: V223 = 0x2
0x25d: V224 = EXP 0x2 0xa0
0x25e: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V226 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x261: V227 = OR V226 V220
0x263: S[0x0] = V227
---
Entry stack: [V10, 0x136, V139]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x136, V139]

================================

Block 0x264
[0x264:0x264]
---
Predecessors: [0x23c]
Successors: [0x265]
---
0x264 JUMPDEST
---
0x264: JUMPDEST 
---
Entry stack: [V10, 0x136, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, V139]

================================

Block 0x265
[0x265:0x267]
---
Predecessors: [0x264]
Successors: [0x136]
---
0x265 JUMPDEST
0x266 POP
0x267 JUMP
---
0x265: JUMPDEST 
0x267: JUMP 0x136
---
Entry stack: [V10, 0x136, V139]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x268
[0x268:0x27f]
---
Predecessors: [0x1a8]
Successors: [0x132, 0x280]
---
0x268 JUMPDEST
0x269 PUSH1 0x0
0x26b SLOAD
0x26c CALLER
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 SWAP1
0x276 DUP2
0x277 AND
0x278 SWAP2
0x279 AND
0x27a EQ
0x27b ISZERO
0x27c PUSH2 0x132
0x27f JUMPI
---
0x268: JUMPDEST 
0x269: V228 = 0x0
0x26b: V229 = S[0x0]
0x26c: V230 = CALLER
0x26d: V231 = 0x1
0x26f: V232 = 0xa0
0x271: V233 = 0x2
0x273: V234 = EXP 0x2 0xa0
0x274: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x279: V237 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V238 = EQ V237 V236
0x27b: V239 = ISZERO V238
0x27c: V240 = 0x132
0x27f: JUMPI 0x132 V239
---
Entry stack: [V10, 0x136, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, V153]

================================

Block 0x280
[0x280:0x2a7]
---
Predecessors: [0x268]
Successors: [0x2a8]
---
0x280 PUSH1 0x1
0x282 DUP1
0x283 SLOAD
0x284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x299 NOT
0x29a AND
0x29b PUSH1 0x1
0x29d PUSH1 0xa0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 SUB
0x2a3 DUP4
0x2a4 AND
0x2a5 OR
0x2a6 SWAP1
0x2a7 SSTORE
---
0x280: V241 = 0x1
0x283: V242 = S[0x1]
0x284: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x299: V244 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V245 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V242
0x29b: V246 = 0x1
0x29d: V247 = 0xa0
0x29f: V248 = 0x2
0x2a1: V249 = EXP 0x2 0xa0
0x2a2: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V251 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V252 = OR V251 V245
0x2a7: S[0x1] = V252
---
Entry stack: [V10, 0x136, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x136, V153]

================================

Block 0x2a8
[0x2a8:0x2a8]
---
Predecessors: [0x280]
Successors: [0x2a9]
---
0x2a8 JUMPDEST
---
0x2a8: JUMPDEST 
---
Entry stack: [V10, 0x136, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x136, V153]

================================

Block 0x2a9
[0x2a9:0x2ab]
---
Predecessors: [0x2a8]
Successors: [0x136]
---
0x2a9 JUMPDEST
0x2aa POP
0x2ab JUMP
---
0x2a9: JUMPDEST 
0x2ab: JUMP 0x136
---
Entry stack: [V10, 0x136, V153]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ac
[0x2ac:0x2ba]
---
Predecessors: [0x1c9]
Successors: [0x160]
---
0x2ac JUMPDEST
0x2ad PUSH1 0x0
0x2af SLOAD
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 AND
0x2b9 DUP2
0x2ba JUMP
---
0x2ac: JUMPDEST 
0x2ad: V253 = 0x0
0x2af: V254 = S[0x0]
0x2b0: V255 = 0x1
0x2b2: V256 = 0xa0
0x2b4: V257 = 0x2
0x2b6: V258 = EXP 0x2 0xa0
0x2b7: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b8: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x2ba: JUMP 0x160
---
Entry stack: [V10, 0x160]
Stack pops: 1
Stack additions: [S0, V260]
Exit stack: [V10, 0x160, V260]

================================

Block 0x2bb
[0x2bb:0x2e6]
---
Predecessors: []
Successors: []
---
0x2bb STOP
0x2bc LOG1
0x2bd PUSH6 0x627a7a723058
0x2c4 SHA3
0x2c5 COINBASE
0x2c6 MISSING 0xe3
0x2c7 MISSING 0xb6
0x2c8 GAS
0x2c9 CREATE2
0x2ca PUSH20 0xa93727abefd2b7f248c25236ca4bed4436ea5a49
0x2df LT
0x2e0 MISSING 0xde
0x2e1 MISSING 0xb1
0x2e2 DELEGATECALL
0x2e3 CODESIZE
0x2e4 PUSH2 0x29
---
0x2bb: STOP 
0x2bc: LOG S0 S1 S2
0x2bd: V261 = 0x627a7a723058
0x2c4: V262 = SHA3 0x627a7a723058 S3
0x2c5: V263 = COINBASE
0x2c6: MISSING 0xe3
0x2c7: MISSING 0xb6
0x2c8: V264 = GAS
0x2c9: V265 = CREATE2 V264 S0 S1 S2
0x2ca: V266 = 0xa93727abefd2b7f248c25236ca4bed4436ea5a49
0x2df: V267 = LT 0xa93727abefd2b7f248c25236ca4bed4436ea5a49 V265
0x2e0: MISSING 0xde
0x2e1: MISSING 0xb1
0x2e2: V268 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x2e3: V269 = CODESIZE
0x2e4: V270 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V263, V262, V267, 0x29, V269, V268]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x138
Exit block: 0x136
Body: 0x136, 0x138, 0x13f, 0x143, 0x1ed, 0x205, 0x212, 0x213

Function 1:
Public function signature: 0x99f43aba
Entry block: 0x14d
Exit block: 0x160
Body: 0x14d, 0x154, 0x158, 0x160, 0x215

Function 2:
Public function signature: 0xa6f9dae1
Entry block: 0x17c
Exit block: 0x136
Body: 0x132, 0x133, 0x136, 0x17c, 0x183, 0x187, 0x224, 0x23c, 0x264, 0x265

Function 3:
Public function signature: 0xab86de6c
Entry block: 0x19d
Exit block: 0x136
Body: 0x132, 0x133, 0x136, 0x19d, 0x1a4, 0x1a8, 0x268, 0x280, 0x2a8, 0x2a9

Function 4:
Public function signature: 0xb2bdfa7b
Entry block: 0x1be
Exit block: 0x160
Body: 0x160, 0x1be, 0x1c5, 0x1c9, 0x2ac

Function 5:
Public fallback function
Entry block: 0x6a
Exit block: 0x12a
Body: 0x6a, 0x6e, 0x79, 0xa8, 0xac, 0x119, 0x11d, 0x12a, 0x12e, 0x132, 0x133, 0x136

