Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x104]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1be19560
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x104
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1be19560
0x20: V14 = EQ V12 0x1be19560
0x21: V15 = 0x104
0x24: JUMPI 0x104 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x137]
---
0x25 DUP1
0x26 PUSH4 0x35faa416
0x2b EQ
0x2c PUSH2 0x137
0x2f JUMPI
---
0x26: V16 = 0x35faa416
0x2b: V17 = EQ 0x35faa416 V12
0x2c: V18 = 0x137
0x2f: JUMPI 0x137 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x15e]
---
0x30 DUP1
0x31 PUSH4 0x486b03c2
0x36 EQ
0x37 PUSH2 0x15e
0x3a JUMPI
---
0x31: V19 = 0x486b03c2
0x36: V20 = EQ 0x486b03c2 V12
0x37: V21 = 0x15e
0x3a: JUMPI 0x15e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x18e]
---
0x3b DUP1
0x3c PUSH4 0x52a23bbb
0x41 EQ
0x42 PUSH2 0x18e
0x45 JUMPI
---
0x3c: V22 = 0x52a23bbb
0x41: V23 = EQ 0x52a23bbb V12
0x42: V24 = 0x18e
0x45: JUMPI 0x18e V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1ca]
---
0x46 DUP1
0x47 PUSH4 0x6bbe0bab
0x4c EQ
0x4d PUSH2 0x1ca
0x50 JUMPI
---
0x47: V25 = 0x6bbe0bab
0x4c: V26 = EQ 0x6bbe0bab V12
0x4d: V27 = 0x1ca
0x50: JUMPI 0x1ca V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1f4]
---
0x51 DUP1
0x52 PUSH4 0x82b5b8ab
0x57 EQ
0x58 PUSH2 0x1f4
0x5b JUMPI
---
0x52: V28 = 0x82b5b8ab
0x57: V29 = EQ 0x82b5b8ab V12
0x58: V30 = 0x1f4
0x5b: JUMPI 0x1f4 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x229]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x229
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x229
0x66: JUMPI 0x229 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x258]
---
0x67 DUP1
0x68 PUSH4 0xa6f9dae1
0x6d EQ
0x6e PUSH2 0x258
0x71 JUMPI
---
0x68: V34 = 0xa6f9dae1
0x6d: V35 = EQ 0xa6f9dae1 V12
0x6e: V36 = 0x258
0x71: JUMPI 0x258 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x279]
---
0x72 DUP1
0x73 PUSH4 0xe5994905
0x78 EQ
0x79 PUSH2 0x279
0x7c JUMPI
---
0x73: V37 = 0xe5994905
0x78: V38 = EQ 0xe5994905 V12
0x79: V39 = 0x279
0x7c: JUMPI 0x279 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2bb]
---
0x7d DUP1
0x7e PUSH4 0xf5537ede
0x83 EQ
0x84 PUSH2 0x2bb
0x87 JUMPI
---
0x7e: V40 = 0xf5537ede
0x83: V41 = EQ 0xf5537ede V12
0x84: V42 = 0x2bb
0x87: JUMPI 0x2bb V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0xb8]
---
Predecessors: [0x88]
Successors: [0xb9, 0xbd]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c SLOAD
0x8d PUSH1 0x1
0x8f PUSH1 0xa0
0x91 PUSH1 0x2
0x93 EXP
0x94 SUB
0x95 AND
0x96 CALLVALUE
0x97 DUP1
0x98 ISZERO
0x99 PUSH2 0x8fc
0x9c MUL
0x9d SWAP1
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 PUSH1 0x0
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 DUP1
0xa7 DUP4
0xa8 SUB
0xa9 DUP2
0xaa DUP6
0xab DUP9
0xac DUP9
0xad CALL
0xae SWAP4
0xaf POP
0xb0 POP
0xb1 POP
0xb2 POP
0xb3 ISZERO
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = 0x0
0x8c: V44 = S[0x0]
0x8d: V45 = 0x1
0x8f: V46 = 0xa0
0x91: V47 = 0x2
0x93: V48 = EXP 0x2 0xa0
0x94: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x96: V51 = CALLVALUE
0x98: V52 = ISZERO V51
0x99: V53 = 0x8fc
0x9c: V54 = MUL 0x8fc V52
0x9e: V55 = 0x40
0xa0: V56 = M[0x40]
0xa1: V57 = 0x0
0xa3: V58 = 0x40
0xa5: V59 = M[0x40]
0xa8: V60 = SUB V56 V59
0xad: V61 = CALL V54 V50 V51 V59 V60 V59 0x0
0xb3: V62 = ISZERO V61
0xb4: V63 = ISZERO V62
0xb5: V64 = 0xbd
0xb8: JUMPI 0xbd V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0x89]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V65 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0x101]
---
Predecessors: [0x89]
Successors: [0x102]
---
0xbd JUMPDEST
0xbe PUSH32 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
0xdf CALLER
0xe0 CALLVALUE
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 PUSH1 0x1
0xe6 PUSH1 0xa0
0xe8 PUSH1 0x2
0xea EXP
0xeb SUB
0xec SWAP1
0xed SWAP3
0xee AND
0xef DUP3
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 DUP3
0xf4 ADD
0xf5 MSTORE
0xf6 PUSH1 0x40
0xf8 SWAP1
0xf9 DUP2
0xfa ADD
0xfb SWAP1
0xfc MLOAD
0xfd DUP1
0xfe SWAP2
0xff SUB
0x100 SWAP1
0x101 LOG1
---
0xbd: JUMPDEST 
0xbe: V66 = 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
0xdf: V67 = CALLER
0xe0: V68 = CALLVALUE
0xe1: V69 = 0x40
0xe3: V70 = M[0x40]
0xe4: V71 = 0x1
0xe6: V72 = 0xa0
0xe8: V73 = 0x2
0xea: V74 = EXP 0x2 0xa0
0xeb: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V76 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xf0: M[V70] = V76
0xf1: V77 = 0x20
0xf4: V78 = ADD V70 0x20
0xf5: M[V78] = V68
0xf6: V79 = 0x40
0xfa: V80 = ADD 0x40 V70
0xfc: V81 = M[0x40]
0xff: V82 = SUB V80 V81
0x101: LOG V81 V82 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x102
[0x102:0x103]
---
Predecessors: [0xbd, 0x4e5, 0x617, 0x6cf, 0x72b]
Successors: []
---
0x102 JUMPDEST
0x103 STOP
---
0x102: JUMPDEST 
0x103: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0xb]
Successors: [0x10b, 0x10f]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x104: JUMPDEST 
0x105: V83 = CALLVALUE
0x106: V84 = ISZERO V83
0x107: V85 = 0x10f
0x10a: JUMPI 0x10f V84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x104]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V86 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10f
[0x10f:0x122]
---
Predecessors: [0x104]
Successors: [0x2f7]
---
0x10f JUMPDEST
0x110 PUSH2 0x123
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b PUSH1 0x4
0x11d CALLDATALOAD
0x11e AND
0x11f PUSH2 0x2f7
0x122 JUMP
---
0x10f: JUMPDEST 
0x110: V87 = 0x123
0x113: V88 = 0x1
0x115: V89 = 0xa0
0x117: V90 = 0x2
0x119: V91 = EXP 0x2 0xa0
0x11a: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11b: V93 = 0x4
0x11d: V94 = CALLDATALOAD 0x4
0x11e: V95 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V96 = 0x2f7
0x122: JUMP 0x2f7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123, V95]
Exit stack: [V12, 0x123, V95]

================================

Block 0x123
[0x123:0x136]
---
Predecessors: [0x3fd, 0x44d, 0x587, 0x7d6]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 MLOAD
0x127 SWAP1
0x128 ISZERO
0x129 ISZERO
0x12a DUP2
0x12b MSTORE
0x12c PUSH1 0x20
0x12e ADD
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 SWAP2
0x134 SUB
0x135 SWAP1
0x136 RETURN
---
0x123: JUMPDEST 
0x124: V97 = 0x40
0x126: V98 = M[0x40]
0x128: V99 = ISZERO S0
0x129: V100 = ISZERO V99
0x12b: M[V98] = V100
0x12c: V101 = 0x20
0x12e: V102 = ADD 0x20 V98
0x12f: V103 = 0x40
0x131: V104 = M[0x40]
0x134: V105 = SUB V102 V104
0x136: RETURN V104 V105
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x137
[0x137:0x13d]
---
Predecessors: [0x25]
Successors: [0x13e, 0x142]
---
0x137 JUMPDEST
0x138 CALLVALUE
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x137: JUMPDEST 
0x138: V106 = CALLVALUE
0x139: V107 = ISZERO V106
0x13a: V108 = 0x142
0x13d: JUMPI 0x142 V107
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x137]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V109 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x137]
Successors: [0x404]
---
0x142 JUMPDEST
0x143 PUSH2 0x123
0x146 PUSH2 0x404
0x149 JUMP
---
0x142: JUMPDEST 
0x143: V110 = 0x123
0x146: V111 = 0x404
0x149: JUMP 0x404
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x14a
[0x14a:0x15d]
---
Predecessors: []
Successors: []
---
0x14a JUMPDEST
0x14b PUSH1 0x40
0x14d MLOAD
0x14e SWAP1
0x14f ISZERO
0x150 ISZERO
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x20
0x155 ADD
0x156 PUSH1 0x40
0x158 MLOAD
0x159 DUP1
0x15a SWAP2
0x15b SUB
0x15c SWAP1
0x15d RETURN
---
0x14a: JUMPDEST 
0x14b: V112 = 0x40
0x14d: V113 = M[0x40]
0x14f: V114 = ISZERO S0
0x150: V115 = ISZERO V114
0x152: M[V113] = V115
0x153: V116 = 0x20
0x155: V117 = ADD 0x20 V113
0x156: V118 = 0x40
0x158: V119 = M[0x40]
0x15b: V120 = SUB V117 V119
0x15d: RETURN V119 V120
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x15e
[0x15e:0x164]
---
Predecessors: [0x30]
Successors: [0x165, 0x169]
---
0x15e JUMPDEST
0x15f CALLVALUE
0x160 ISZERO
0x161 PUSH2 0x169
0x164 JUMPI
---
0x15e: JUMPDEST 
0x15f: V121 = CALLVALUE
0x160: V122 = ISZERO V121
0x161: V123 = 0x169
0x164: JUMPI 0x169 V122
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x168]
---
Predecessors: [0x15e]
Successors: []
---
0x165 PUSH1 0x0
0x167 DUP1
0x168 REVERT
---
0x165: V124 = 0x0
0x168: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x169
[0x169:0x18b]
---
Predecessors: [0x15e]
Successors: [0x450]
---
0x169 JUMPDEST
0x16a PUSH2 0x102
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 PUSH1 0x4
0x177 CALLDATALOAD
0x178 DUP2
0x179 AND
0x17a SWAP1
0x17b PUSH1 0x24
0x17d CALLDATALOAD
0x17e DUP2
0x17f AND
0x180 SWAP1
0x181 PUSH1 0x44
0x183 CALLDATALOAD
0x184 AND
0x185 PUSH1 0x64
0x187 CALLDATALOAD
0x188 PUSH2 0x450
0x18b JUMP
---
0x169: JUMPDEST 
0x16a: V125 = 0x102
0x16d: V126 = 0x1
0x16f: V127 = 0xa0
0x171: V128 = 0x2
0x173: V129 = EXP 0x2 0xa0
0x174: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x175: V131 = 0x4
0x177: V132 = CALLDATALOAD 0x4
0x179: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x17b: V134 = 0x24
0x17d: V135 = CALLDATALOAD 0x24
0x17f: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x181: V137 = 0x44
0x183: V138 = CALLDATALOAD 0x44
0x184: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x185: V140 = 0x64
0x187: V141 = CALLDATALOAD 0x64
0x188: V142 = 0x450
0x18b: JUMP 0x450
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x102, V133, V136, V139, V141]
Exit stack: [V12, 0x102, V133, V136, V139, V141]

================================

Block 0x18c
[0x18c:0x18d]
---
Predecessors: []
Successors: []
---
0x18c JUMPDEST
0x18d STOP
---
0x18c: JUMPDEST 
0x18d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x3b]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V143 = CALLVALUE
0x190: V144 = ISZERO V143
0x191: V145 = 0x199
0x194: JUMPI 0x199 V144
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V146 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x199
[0x199:0x1b5]
---
Predecessors: [0x18e]
Successors: [0x4ec]
---
0x199 JUMPDEST
0x19a PUSH2 0x123
0x19d PUSH1 0x1
0x19f PUSH1 0xa0
0x1a1 PUSH1 0x2
0x1a3 EXP
0x1a4 SUB
0x1a5 PUSH1 0x4
0x1a7 CALLDATALOAD
0x1a8 DUP2
0x1a9 AND
0x1aa SWAP1
0x1ab PUSH1 0x24
0x1ad CALLDATALOAD
0x1ae AND
0x1af PUSH1 0x44
0x1b1 CALLDATALOAD
0x1b2 PUSH2 0x4ec
0x1b5 JUMP
---
0x199: JUMPDEST 
0x19a: V147 = 0x123
0x19d: V148 = 0x1
0x19f: V149 = 0xa0
0x1a1: V150 = 0x2
0x1a3: V151 = EXP 0x2 0xa0
0x1a4: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a5: V153 = 0x4
0x1a7: V154 = CALLDATALOAD 0x4
0x1a9: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1ab: V156 = 0x24
0x1ad: V157 = CALLDATALOAD 0x24
0x1ae: V158 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V159 = 0x44
0x1b1: V160 = CALLDATALOAD 0x44
0x1b2: V161 = 0x4ec
0x1b5: JUMP 0x4ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123, V155, V158, V160]
Exit stack: [V12, 0x123, V155, V158, V160]

================================

Block 0x1b6
[0x1b6:0x1c9]
---
Predecessors: []
Successors: []
---
0x1b6 JUMPDEST
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba SWAP1
0x1bb ISZERO
0x1bc ISZERO
0x1bd DUP2
0x1be MSTORE
0x1bf PUSH1 0x20
0x1c1 ADD
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 DUP1
0x1c6 SWAP2
0x1c7 SUB
0x1c8 SWAP1
0x1c9 RETURN
---
0x1b6: JUMPDEST 
0x1b7: V162 = 0x40
0x1b9: V163 = M[0x40]
0x1bb: V164 = ISZERO S0
0x1bc: V165 = ISZERO V164
0x1be: M[V163] = V165
0x1bf: V166 = 0x20
0x1c1: V167 = ADD 0x20 V163
0x1c2: V168 = 0x40
0x1c4: V169 = M[0x40]
0x1c7: V170 = SUB V167 V169
0x1c9: RETURN V169 V170
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ca
[0x1ca:0x1d0]
---
Predecessors: [0x46]
Successors: [0x1d1, 0x1d5]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc ISZERO
0x1cd PUSH2 0x1d5
0x1d0 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V171 = CALLVALUE
0x1cc: V172 = ISZERO V171
0x1cd: V173 = 0x1d5
0x1d0: JUMPI 0x1d5 V172
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d1
[0x1d1:0x1d4]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 REVERT
---
0x1d1: V174 = 0x0
0x1d4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d5
[0x1d5:0x1f1]
---
Predecessors: [0x1ca]
Successors: [0x58f]
---
0x1d5 JUMPDEST
0x1d6 PUSH2 0x102
0x1d9 PUSH1 0x1
0x1db PUSH1 0xa0
0x1dd PUSH1 0x2
0x1df EXP
0x1e0 SUB
0x1e1 PUSH1 0x4
0x1e3 CALLDATALOAD
0x1e4 DUP2
0x1e5 AND
0x1e6 SWAP1
0x1e7 PUSH1 0x24
0x1e9 CALLDATALOAD
0x1ea AND
0x1eb PUSH1 0x44
0x1ed CALLDATALOAD
0x1ee PUSH2 0x58f
0x1f1 JUMP
---
0x1d5: JUMPDEST 
0x1d6: V175 = 0x102
0x1d9: V176 = 0x1
0x1db: V177 = 0xa0
0x1dd: V178 = 0x2
0x1df: V179 = EXP 0x2 0xa0
0x1e0: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e1: V181 = 0x4
0x1e3: V182 = CALLDATALOAD 0x4
0x1e5: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x1e7: V184 = 0x24
0x1e9: V185 = CALLDATALOAD 0x24
0x1ea: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V187 = 0x44
0x1ed: V188 = CALLDATALOAD 0x44
0x1ee: V189 = 0x58f
0x1f1: JUMP 0x58f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x102, V183, V186, V188]
Exit stack: [V12, 0x102, V183, V186, V188]

================================

Block 0x1f2
[0x1f2:0x1f3]
---
Predecessors: []
Successors: []
---
0x1f2 JUMPDEST
0x1f3 STOP
---
0x1f2: JUMPDEST 
0x1f3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f4
[0x1f4:0x1fa]
---
Predecessors: [0x51]
Successors: [0x1fb, 0x1ff]
---
0x1f4 JUMPDEST
0x1f5 CALLVALUE
0x1f6 ISZERO
0x1f7 PUSH2 0x1ff
0x1fa JUMPI
---
0x1f4: JUMPDEST 
0x1f5: V190 = CALLVALUE
0x1f6: V191 = ISZERO V190
0x1f7: V192 = 0x1ff
0x1fa: JUMPI 0x1ff V191
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fb
[0x1fb:0x1fe]
---
Predecessors: [0x1f4]
Successors: []
---
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe REVERT
---
0x1fb: V193 = 0x0
0x1fe: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ff
[0x1ff:0x226]
---
Predecessors: [0x1f4]
Successors: [0x61d]
---
0x1ff JUMPDEST
0x200 PUSH2 0x102
0x203 PUSH1 0x1
0x205 PUSH1 0xa0
0x207 PUSH1 0x2
0x209 EXP
0x20a SUB
0x20b PUSH1 0x4
0x20d DUP1
0x20e CALLDATALOAD
0x20f DUP3
0x210 AND
0x211 SWAP2
0x212 PUSH1 0x24
0x214 DUP1
0x215 CALLDATALOAD
0x216 SWAP1
0x217 SWAP2
0x218 AND
0x219 SWAP2
0x21a PUSH1 0x44
0x21c CALLDATALOAD
0x21d SWAP2
0x21e DUP3
0x21f ADD
0x220 SWAP2
0x221 ADD
0x222 CALLDATALOAD
0x223 PUSH2 0x61d
0x226 JUMP
---
0x1ff: JUMPDEST 
0x200: V194 = 0x102
0x203: V195 = 0x1
0x205: V196 = 0xa0
0x207: V197 = 0x2
0x209: V198 = EXP 0x2 0xa0
0x20a: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V200 = 0x4
0x20e: V201 = CALLDATALOAD 0x4
0x210: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x212: V203 = 0x24
0x215: V204 = CALLDATALOAD 0x24
0x218: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x21a: V206 = 0x44
0x21c: V207 = CALLDATALOAD 0x44
0x21f: V208 = ADD V207 0x24
0x221: V209 = ADD V207 0x4
0x222: V210 = CALLDATALOAD V209
0x223: V211 = 0x61d
0x226: JUMP 0x61d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x102, V202, V205, V208, V210]
Exit stack: [V12, 0x102, V202, V205, V208, V210]

================================

Block 0x227
[0x227:0x228]
---
Predecessors: []
Successors: []
---
0x227 JUMPDEST
0x228 STOP
---
0x227: JUMPDEST 
0x228: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x229
[0x229:0x22f]
---
Predecessors: [0x5c]
Successors: [0x230, 0x234]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b ISZERO
0x22c PUSH2 0x234
0x22f JUMPI
---
0x229: JUMPDEST 
0x22a: V212 = CALLVALUE
0x22b: V213 = ISZERO V212
0x22c: V214 = 0x234
0x22f: JUMPI 0x234 V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x229]
Successors: []
---
0x230 PUSH1 0x0
0x232 DUP1
0x233 REVERT
---
0x230: V215 = 0x0
0x233: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x234
[0x234:0x23b]
---
Predecessors: [0x229]
Successors: [0x6d7]
---
0x234 JUMPDEST
0x235 PUSH2 0x23c
0x238 PUSH2 0x6d7
0x23b JUMP
---
0x234: JUMPDEST 
0x235: V216 = 0x23c
0x238: V217 = 0x6d7
0x23b: JUMP 0x6d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23c]
Exit stack: [V12, 0x23c]

================================

Block 0x23c
[0x23c:0x257]
---
Predecessors: [0x6d7]
Successors: []
---
0x23c JUMPDEST
0x23d PUSH1 0x40
0x23f MLOAD
0x240 PUSH1 0x1
0x242 PUSH1 0xa0
0x244 PUSH1 0x2
0x246 EXP
0x247 SUB
0x248 SWAP1
0x249 SWAP2
0x24a AND
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x20
0x24f ADD
0x250 PUSH1 0x40
0x252 MLOAD
0x253 DUP1
0x254 SWAP2
0x255 SUB
0x256 SWAP1
0x257 RETURN
---
0x23c: JUMPDEST 
0x23d: V218 = 0x40
0x23f: V219 = M[0x40]
0x240: V220 = 0x1
0x242: V221 = 0xa0
0x244: V222 = 0x2
0x246: V223 = EXP 0x2 0xa0
0x247: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24a: V225 = AND V711 0xffffffffffffffffffffffffffffffffffffffff
0x24c: M[V219] = V225
0x24d: V226 = 0x20
0x24f: V227 = ADD 0x20 V219
0x250: V228 = 0x40
0x252: V229 = M[0x40]
0x255: V230 = SUB V227 V229
0x257: RETURN V229 V230
---
Entry stack: [V12, 0x23c, V711]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x23c]

================================

Block 0x258
[0x258:0x25e]
---
Predecessors: [0x67]
Successors: [0x25f, 0x263]
---
0x258 JUMPDEST
0x259 CALLVALUE
0x25a ISZERO
0x25b PUSH2 0x263
0x25e JUMPI
---
0x258: JUMPDEST 
0x259: V231 = CALLVALUE
0x25a: V232 = ISZERO V231
0x25b: V233 = 0x263
0x25e: JUMPI 0x263 V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x258]
Successors: []
---
0x25f PUSH1 0x0
0x261 DUP1
0x262 REVERT
---
0x25f: V234 = 0x0
0x262: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x263
[0x263:0x276]
---
Predecessors: [0x258]
Successors: [0x6e6]
---
0x263 JUMPDEST
0x264 PUSH2 0x102
0x267 PUSH1 0x1
0x269 PUSH1 0xa0
0x26b PUSH1 0x2
0x26d EXP
0x26e SUB
0x26f PUSH1 0x4
0x271 CALLDATALOAD
0x272 AND
0x273 PUSH2 0x6e6
0x276 JUMP
---
0x263: JUMPDEST 
0x264: V235 = 0x102
0x267: V236 = 0x1
0x269: V237 = 0xa0
0x26b: V238 = 0x2
0x26d: V239 = EXP 0x2 0xa0
0x26e: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V241 = 0x4
0x271: V242 = CALLDATALOAD 0x4
0x272: V243 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x273: V244 = 0x6e6
0x276: JUMP 0x6e6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x102, V243]
Exit stack: [V12, 0x102, V243]

================================

Block 0x277
[0x277:0x278]
---
Predecessors: []
Successors: []
---
0x277 JUMPDEST
0x278 STOP
---
0x277: JUMPDEST 
0x278: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x279
[0x279:0x27f]
---
Predecessors: [0x72]
Successors: [0x280, 0x284]
---
0x279 JUMPDEST
0x27a CALLVALUE
0x27b ISZERO
0x27c PUSH2 0x284
0x27f JUMPI
---
0x279: JUMPDEST 
0x27a: V245 = CALLVALUE
0x27b: V246 = ISZERO V245
0x27c: V247 = 0x284
0x27f: JUMPI 0x284 V246
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x283]
---
Predecessors: [0x279]
Successors: []
---
0x280 PUSH1 0x0
0x282 DUP1
0x283 REVERT
---
0x280: V248 = 0x0
0x283: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x284
[0x284:0x2a6]
---
Predecessors: [0x279]
Successors: [0x72e]
---
0x284 JUMPDEST
0x285 PUSH2 0x123
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 PUSH1 0x4
0x292 CALLDATALOAD
0x293 DUP2
0x294 AND
0x295 SWAP1
0x296 PUSH1 0x24
0x298 CALLDATALOAD
0x299 DUP2
0x29a AND
0x29b SWAP1
0x29c PUSH1 0x44
0x29e CALLDATALOAD
0x29f AND
0x2a0 PUSH1 0x64
0x2a2 CALLDATALOAD
0x2a3 PUSH2 0x72e
0x2a6 JUMP
---
0x284: JUMPDEST 
0x285: V249 = 0x123
0x288: V250 = 0x1
0x28a: V251 = 0xa0
0x28c: V252 = 0x2
0x28e: V253 = EXP 0x2 0xa0
0x28f: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V255 = 0x4
0x292: V256 = CALLDATALOAD 0x4
0x294: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x296: V258 = 0x24
0x298: V259 = CALLDATALOAD 0x24
0x29a: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x29c: V261 = 0x44
0x29e: V262 = CALLDATALOAD 0x44
0x29f: V263 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V264 = 0x64
0x2a2: V265 = CALLDATALOAD 0x64
0x2a3: V266 = 0x72e
0x2a6: JUMP 0x72e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123, V257, V260, V263, V265]
Exit stack: [V12, 0x123, V257, V260, V263, V265]

================================

Block 0x2a7
[0x2a7:0x2ba]
---
Predecessors: []
Successors: []
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab SWAP1
0x2ac ISZERO
0x2ad ISZERO
0x2ae DUP2
0x2af MSTORE
0x2b0 PUSH1 0x20
0x2b2 ADD
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 SWAP2
0x2b8 SUB
0x2b9 SWAP1
0x2ba RETURN
---
0x2a7: JUMPDEST 
0x2a8: V267 = 0x40
0x2aa: V268 = M[0x40]
0x2ac: V269 = ISZERO S0
0x2ad: V270 = ISZERO V269
0x2af: M[V268] = V270
0x2b0: V271 = 0x20
0x2b2: V272 = ADD 0x20 V268
0x2b3: V273 = 0x40
0x2b5: V274 = M[0x40]
0x2b8: V275 = SUB V272 V274
0x2ba: RETURN V274 V275
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2bb
[0x2bb:0x2c1]
---
Predecessors: [0x7d]
Successors: [0x2c2, 0x2c6]
---
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd ISZERO
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V276 = CALLVALUE
0x2bd: V277 = ISZERO V276
0x2be: V278 = 0x2c6
0x2c1: JUMPI 0x2c6 V277
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V279 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c6
[0x2c6:0x2e2]
---
Predecessors: [0x2bb]
Successors: [0x7df]
---
0x2c6 JUMPDEST
0x2c7 PUSH2 0x123
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 PUSH1 0x4
0x2d4 CALLDATALOAD
0x2d5 DUP2
0x2d6 AND
0x2d7 SWAP1
0x2d8 PUSH1 0x24
0x2da CALLDATALOAD
0x2db AND
0x2dc PUSH1 0x44
0x2de CALLDATALOAD
0x2df PUSH2 0x7df
0x2e2 JUMP
---
0x2c6: JUMPDEST 
0x2c7: V280 = 0x123
0x2ca: V281 = 0x1
0x2cc: V282 = 0xa0
0x2ce: V283 = 0x2
0x2d0: V284 = EXP 0x2 0xa0
0x2d1: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d2: V286 = 0x4
0x2d4: V287 = CALLDATALOAD 0x4
0x2d6: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x2d8: V289 = 0x24
0x2da: V290 = CALLDATALOAD 0x24
0x2db: V291 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V292 = 0x44
0x2de: V293 = CALLDATALOAD 0x44
0x2df: V294 = 0x7df
0x2e2: JUMP 0x7df
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123, V288, V291, V293]
Exit stack: [V12, 0x123, V288, V291, V293]

================================

Block 0x2e3
[0x2e3:0x2f6]
---
Predecessors: []
Successors: []
---
0x2e3 JUMPDEST
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 SWAP1
0x2e8 ISZERO
0x2e9 ISZERO
0x2ea DUP2
0x2eb MSTORE
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 DUP1
0x2f3 SWAP2
0x2f4 SUB
0x2f5 SWAP1
0x2f6 RETURN
---
0x2e3: JUMPDEST 
0x2e4: V295 = 0x40
0x2e6: V296 = M[0x40]
0x2e8: V297 = ISZERO S0
0x2e9: V298 = ISZERO V297
0x2eb: M[V296] = V298
0x2ec: V299 = 0x20
0x2ee: V300 = ADD 0x20 V296
0x2ef: V301 = 0x40
0x2f1: V302 = M[0x40]
0x2f4: V303 = SUB V300 V302
0x2f6: RETURN V302 V303
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f7
[0x2f7:0x34c]
---
Predecessors: [0x10f]
Successors: [0x34d, 0x351]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x0
0x2fa DUP2
0x2fb DUP2
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 DUP3
0x305 AND
0x306 PUSH4 0x70a08231
0x30b ADDRESS
0x30c DUP4
0x30d PUSH1 0x40
0x30f MLOAD
0x310 PUSH1 0x20
0x312 ADD
0x313 MSTORE
0x314 PUSH1 0x40
0x316 MLOAD
0x317 PUSH1 0xe0
0x319 PUSH1 0x2
0x31b EXP
0x31c PUSH4 0xffffffff
0x321 DUP5
0x322 AND
0x323 MUL
0x324 DUP2
0x325 MSTORE
0x326 PUSH1 0x1
0x328 PUSH1 0xa0
0x32a PUSH1 0x2
0x32c EXP
0x32d SUB
0x32e SWAP1
0x32f SWAP2
0x330 AND
0x331 PUSH1 0x4
0x333 DUP3
0x334 ADD
0x335 MSTORE
0x336 PUSH1 0x24
0x338 ADD
0x339 PUSH1 0x20
0x33b PUSH1 0x40
0x33d MLOAD
0x33e DUP1
0x33f DUP4
0x340 SUB
0x341 DUP2
0x342 PUSH1 0x0
0x344 DUP8
0x345 DUP1
0x346 EXTCODESIZE
0x347 ISZERO
0x348 ISZERO
0x349 PUSH2 0x351
0x34c JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V304 = 0x0
0x2fc: V305 = 0x1
0x2fe: V306 = 0xa0
0x300: V307 = 0x2
0x302: V308 = EXP 0x2 0xa0
0x303: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x305: V310 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x306: V311 = 0x70a08231
0x30b: V312 = ADDRESS
0x30d: V313 = 0x40
0x30f: V314 = M[0x40]
0x310: V315 = 0x20
0x312: V316 = ADD 0x20 V314
0x313: M[V316] = 0x0
0x314: V317 = 0x40
0x316: V318 = M[0x40]
0x317: V319 = 0xe0
0x319: V320 = 0x2
0x31b: V321 = EXP 0x2 0xe0
0x31c: V322 = 0xffffffff
0x322: V323 = AND 0x70a08231 0xffffffff
0x323: V324 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x325: M[V318] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x326: V325 = 0x1
0x328: V326 = 0xa0
0x32a: V327 = 0x2
0x32c: V328 = EXP 0x2 0xa0
0x32d: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V330 = AND V312 0xffffffffffffffffffffffffffffffffffffffff
0x331: V331 = 0x4
0x334: V332 = ADD V318 0x4
0x335: M[V332] = V330
0x336: V333 = 0x24
0x338: V334 = ADD 0x24 V318
0x339: V335 = 0x20
0x33b: V336 = 0x40
0x33d: V337 = M[0x40]
0x340: V338 = SUB V334 V337
0x342: V339 = 0x0
0x346: V340 = EXTCODESIZE V310
0x347: V341 = ISZERO V340
0x348: V342 = ISZERO V341
0x349: V343 = 0x351
0x34c: JUMPI 0x351 V342
---
Entry stack: [V12, 0x123, V95]
Stack pops: 1
Stack additions: [S0, 0x0, S0, 0x0, V310, 0x70a08231, V334, 0x20, V337, V338, V337, 0x0, V310]
Exit stack: [V12, 0x123, V95, 0x0, V95, 0x0, V310, 0x70a08231, V334, 0x20, V337, V338, V337, 0x0, V310]

================================

Block 0x34d
[0x34d:0x350]
---
Predecessors: [0x2f7]
Successors: []
---
0x34d PUSH1 0x0
0x34f DUP1
0x350 REVERT
---
0x34d: V344 = 0x0
0x350: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V95, 0x0, V95, 0x0, V310, 0x70a08231, V334, 0x20, V337, V338, V337, 0x0, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V95, 0x0, V95, 0x0, V310, 0x70a08231, V334, 0x20, V337, V338, V337, 0x0, V310]

================================

Block 0x351
[0x351:0x35d]
---
Predecessors: [0x2f7]
Successors: [0x35e, 0x362]
---
0x351 JUMPDEST
0x352 PUSH2 0x2c6
0x355 GAS
0x356 SUB
0x357 CALL
0x358 ISZERO
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x351: JUMPDEST 
0x352: V345 = 0x2c6
0x355: V346 = GAS
0x356: V347 = SUB V346 0x2c6
0x357: V348 = CALL V347 V310 0x0 V337 V338 V337 0x20
0x358: V349 = ISZERO V348
0x359: V350 = ISZERO V349
0x35a: V351 = 0x362
0x35d: JUMPI 0x362 V350
---
Entry stack: [V12, 0x123, V95, 0x0, V95, 0x0, V310, 0x70a08231, V334, 0x20, V337, V338, V337, 0x0, V310]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x123, V95, 0x0, V95, 0x0, V310, 0x70a08231, V334]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x351]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V352 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V95, 0x0, V95, 0x0, V310, 0x70a08231, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V95, 0x0, V95, 0x0, V310, 0x70a08231, V334]

================================

Block 0x362
[0x362:0x375]
---
Predecessors: [0x351]
Successors: [0x376, 0x37a]
---
0x362 JUMPDEST
0x363 POP
0x364 POP
0x365 POP
0x366 PUSH1 0x40
0x368 MLOAD
0x369 DUP1
0x36a MLOAD
0x36b SWAP2
0x36c POP
0x36d POP
0x36e PUSH1 0x0
0x370 DUP2
0x371 GT
0x372 PUSH2 0x37a
0x375 JUMPI
---
0x362: JUMPDEST 
0x366: V353 = 0x40
0x368: V354 = M[0x40]
0x36a: V355 = M[V354]
0x36e: V356 = 0x0
0x371: V357 = GT V355 0x0
0x372: V358 = 0x37a
0x375: JUMPI 0x37a V357
---
Entry stack: [V12, 0x123, V95, 0x0, V95, 0x0, V310, 0x70a08231, V334]
Stack pops: 4
Stack additions: [V355]
Exit stack: [V12, 0x123, V95, 0x0, V95, V355]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x362]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V359 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V95, 0x0, V95, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V95, 0x0, V95, V355]

================================

Block 0x37a
[0x37a:0x3db]
---
Predecessors: [0x362]
Successors: [0x3dc, 0x3e0]
---
0x37a JUMPDEST
0x37b PUSH1 0x0
0x37d DUP1
0x37e SLOAD
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 PUSH1 0x2
0x385 EXP
0x386 SUB
0x387 DUP1
0x388 DUP6
0x389 AND
0x38a SWAP3
0x38b PUSH4 0xa9059cbb
0x390 SWAP3
0x391 SWAP1
0x392 SWAP2
0x393 AND
0x394 SWAP1
0x395 DUP5
0x396 SWAP1
0x397 PUSH1 0x40
0x399 MLOAD
0x39a PUSH1 0x20
0x39c ADD
0x39d MSTORE
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 PUSH1 0xe0
0x3a3 PUSH1 0x2
0x3a5 EXP
0x3a6 PUSH4 0xffffffff
0x3ab DUP6
0x3ac AND
0x3ad MUL
0x3ae DUP2
0x3af MSTORE
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 SWAP1
0x3b9 SWAP3
0x3ba AND
0x3bb PUSH1 0x4
0x3bd DUP4
0x3be ADD
0x3bf MSTORE
0x3c0 PUSH1 0x24
0x3c2 DUP3
0x3c3 ADD
0x3c4 MSTORE
0x3c5 PUSH1 0x44
0x3c7 ADD
0x3c8 PUSH1 0x20
0x3ca PUSH1 0x40
0x3cc MLOAD
0x3cd DUP1
0x3ce DUP4
0x3cf SUB
0x3d0 DUP2
0x3d1 PUSH1 0x0
0x3d3 DUP8
0x3d4 DUP1
0x3d5 EXTCODESIZE
0x3d6 ISZERO
0x3d7 ISZERO
0x3d8 PUSH2 0x3e0
0x3db JUMPI
---
0x37a: JUMPDEST 
0x37b: V360 = 0x0
0x37e: V361 = S[0x0]
0x37f: V362 = 0x1
0x381: V363 = 0xa0
0x383: V364 = 0x2
0x385: V365 = EXP 0x2 0xa0
0x386: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V367 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V368 = 0xa9059cbb
0x393: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x397: V370 = 0x40
0x399: V371 = M[0x40]
0x39a: V372 = 0x20
0x39c: V373 = ADD 0x20 V371
0x39d: M[V373] = 0x0
0x39e: V374 = 0x40
0x3a0: V375 = M[0x40]
0x3a1: V376 = 0xe0
0x3a3: V377 = 0x2
0x3a5: V378 = EXP 0x2 0xe0
0x3a6: V379 = 0xffffffff
0x3ac: V380 = AND 0xa9059cbb 0xffffffff
0x3ad: V381 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3af: M[V375] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b0: V382 = 0x1
0x3b2: V383 = 0xa0
0x3b4: V384 = 0x2
0x3b6: V385 = EXP 0x2 0xa0
0x3b7: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ba: V387 = AND V369 0xffffffffffffffffffffffffffffffffffffffff
0x3bb: V388 = 0x4
0x3be: V389 = ADD V375 0x4
0x3bf: M[V389] = V387
0x3c0: V390 = 0x24
0x3c3: V391 = ADD V375 0x24
0x3c4: M[V391] = V355
0x3c5: V392 = 0x44
0x3c7: V393 = ADD 0x44 V375
0x3c8: V394 = 0x20
0x3ca: V395 = 0x40
0x3cc: V396 = M[0x40]
0x3cf: V397 = SUB V393 V396
0x3d1: V398 = 0x0
0x3d5: V399 = EXTCODESIZE V367
0x3d6: V400 = ISZERO V399
0x3d7: V401 = ISZERO V400
0x3d8: V402 = 0x3e0
0x3db: JUMPI 0x3e0 V401
---
Entry stack: [V12, 0x123, V95, 0x0, V95, V355]
Stack pops: 2
Stack additions: [S1, S0, V367, 0xa9059cbb, V393, 0x20, V396, V397, V396, 0x0, V367]
Exit stack: [V12, 0x123, V95, 0x0, V95, V355, V367, 0xa9059cbb, V393, 0x20, V396, V397, V396, 0x0, V367]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x37a]
Successors: []
---
0x3dc PUSH1 0x0
0x3de DUP1
0x3df REVERT
---
0x3dc: V403 = 0x0
0x3df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V95, 0x0, V95, V355, V367, 0xa9059cbb, V393, 0x20, V396, V397, V396, 0x0, V367]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V95, 0x0, V95, V355, V367, 0xa9059cbb, V393, 0x20, V396, V397, V396, 0x0, V367]

================================

Block 0x3e0
[0x3e0:0x3ec]
---
Predecessors: [0x37a]
Successors: [0x3ed, 0x3f1]
---
0x3e0 JUMPDEST
0x3e1 PUSH2 0x2c6
0x3e4 GAS
0x3e5 SUB
0x3e6 CALL
0x3e7 ISZERO
0x3e8 ISZERO
0x3e9 PUSH2 0x3f1
0x3ec JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V404 = 0x2c6
0x3e4: V405 = GAS
0x3e5: V406 = SUB V405 0x2c6
0x3e6: V407 = CALL V406 V367 0x0 V396 V397 V396 0x20
0x3e7: V408 = ISZERO V407
0x3e8: V409 = ISZERO V408
0x3e9: V410 = 0x3f1
0x3ec: JUMPI 0x3f1 V409
---
Entry stack: [V12, 0x123, V95, 0x0, V95, V355, V367, 0xa9059cbb, V393, 0x20, V396, V397, V396, 0x0, V367]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x123, V95, 0x0, V95, V355, V367, 0xa9059cbb, V393]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3e0]
Successors: []
---
0x3ed PUSH1 0x0
0x3ef DUP1
0x3f0 REVERT
---
0x3ed: V411 = 0x0
0x3f0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V95, 0x0, V95, V355, V367, 0xa9059cbb, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V95, 0x0, V95, V355, V367, 0xa9059cbb, V393]

================================

Block 0x3f1
[0x3f1:0x3fc]
---
Predecessors: [0x3e0]
Successors: [0x3fd]
---
0x3f1 JUMPDEST
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 DUP1
0x3f9 MLOAD
0x3fa SWAP4
0x3fb POP
0x3fc POP
---
0x3f1: JUMPDEST 
0x3f5: V412 = 0x40
0x3f7: V413 = M[0x40]
0x3f9: V414 = M[V413]
---
Entry stack: [V12, 0x123, V95, 0x0, V95, V355, V367, 0xa9059cbb, V393]
Stack pops: 6
Stack additions: [V414, S4, S3]
Exit stack: [V12, 0x123, V95, V414, V95, V355]

================================

Block 0x3fd
[0x3fd:0x403]
---
Predecessors: [0x3f1]
Successors: [0x123]
---
0x3fd JUMPDEST
0x3fe POP
0x3ff POP
0x400 SWAP2
0x401 SWAP1
0x402 POP
0x403 JUMP
---
0x3fd: JUMPDEST 
0x403: JUMP 0x123
---
Entry stack: [V12, 0x123, V95, V414, V95, V355]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V414]

================================

Block 0x404
[0x404:0x418]
---
Predecessors: [0x142]
Successors: [0x419, 0x41d]
---
0x404 JUMPDEST
0x405 PUSH1 0x0
0x407 PUSH1 0x1
0x409 PUSH1 0xa0
0x40b PUSH1 0x2
0x40d EXP
0x40e SUB
0x40f ADDRESS
0x410 AND
0x411 BALANCE
0x412 DUP2
0x413 SWAP1
0x414 GT
0x415 PUSH2 0x41d
0x418 JUMPI
---
0x404: JUMPDEST 
0x405: V415 = 0x0
0x407: V416 = 0x1
0x409: V417 = 0xa0
0x40b: V418 = 0x2
0x40d: V419 = EXP 0x2 0xa0
0x40e: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40f: V421 = ADDRESS
0x410: V422 = AND V421 0xffffffffffffffffffffffffffffffffffffffff
0x411: V423 = BALANCE V422
0x414: V424 = GT V423 0x0
0x415: V425 = 0x41d
0x418: JUMPI 0x41d V424
---
Entry stack: [V12, 0x123]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x123, 0x0]

================================

Block 0x419
[0x419:0x41c]
---
Predecessors: [0x404]
Successors: []
---
0x419 PUSH1 0x0
0x41b DUP1
0x41c REVERT
---
0x419: V426 = 0x0
0x41c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, 0x0]

================================

Block 0x41d
[0x41d:0x44c]
---
Predecessors: [0x404]
Successors: [0x44d]
---
0x41d JUMPDEST
0x41e PUSH1 0x0
0x420 SLOAD
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 SWAP1
0x42a DUP2
0x42b AND
0x42c SWAP1
0x42d ADDRESS
0x42e AND
0x42f BALANCE
0x430 DUP1
0x431 ISZERO
0x432 PUSH2 0x8fc
0x435 MUL
0x436 SWAP1
0x437 PUSH1 0x40
0x439 MLOAD
0x43a PUSH1 0x0
0x43c PUSH1 0x40
0x43e MLOAD
0x43f DUP1
0x440 DUP4
0x441 SUB
0x442 DUP2
0x443 DUP6
0x444 DUP9
0x445 DUP9
0x446 CALL
0x447 SWAP5
0x448 POP
0x449 POP
0x44a POP
0x44b POP
0x44c POP
---
0x41d: JUMPDEST 
0x41e: V427 = 0x0
0x420: V428 = S[0x0]
0x421: V429 = 0x1
0x423: V430 = 0xa0
0x425: V431 = 0x2
0x427: V432 = EXP 0x2 0xa0
0x428: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42b: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x42d: V435 = ADDRESS
0x42e: V436 = AND V435 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V437 = BALANCE V436
0x431: V438 = ISZERO V437
0x432: V439 = 0x8fc
0x435: V440 = MUL 0x8fc V438
0x437: V441 = 0x40
0x439: V442 = M[0x40]
0x43a: V443 = 0x0
0x43c: V444 = 0x40
0x43e: V445 = M[0x40]
0x441: V446 = SUB V442 V445
0x446: V447 = CALL V440 V434 V437 V445 V446 V445 0x0
---
Entry stack: [V12, 0x123, 0x0]
Stack pops: 1
Stack additions: [V447]
Exit stack: [V12, 0x123, V447]

================================

Block 0x44d
[0x44d:0x44f]
---
Predecessors: [0x41d]
Successors: [0x123]
---
0x44d JUMPDEST
0x44e SWAP1
0x44f JUMP
---
0x44d: JUMPDEST 
0x44f: JUMP 0x123
---
Entry stack: [V12, 0x123, V447]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V447]

================================

Block 0x450
[0x450:0x467]
---
Predecessors: [0x169]
Successors: [0x468, 0x46c]
---
0x450 JUMPDEST
0x451 PUSH1 0x0
0x453 DUP1
0x454 SLOAD
0x455 CALLER
0x456 PUSH1 0x1
0x458 PUSH1 0xa0
0x45a PUSH1 0x2
0x45c EXP
0x45d SUB
0x45e SWAP1
0x45f DUP2
0x460 AND
0x461 SWAP2
0x462 AND
0x463 EQ
0x464 PUSH2 0x46c
0x467 JUMPI
---
0x450: JUMPDEST 
0x451: V448 = 0x0
0x454: V449 = S[0x0]
0x455: V450 = CALLER
0x456: V451 = 0x1
0x458: V452 = 0xa0
0x45a: V453 = 0x2
0x45c: V454 = EXP 0x2 0xa0
0x45d: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x460: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x462: V457 = AND V449 0xffffffffffffffffffffffffffffffffffffffff
0x463: V458 = EQ V457 V456
0x464: V459 = 0x46c
0x467: JUMPI 0x46c V458
---
Entry stack: [V12, 0x102, V133, V136, V139, V141]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x102, V133, V136, V139, V141, 0x0]

================================

Block 0x468
[0x468:0x46b]
---
Predecessors: [0x450]
Successors: []
---
0x468 PUSH1 0x0
0x46a DUP1
0x46b REVERT
---
0x468: V460 = 0x0
0x46b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V133, V136, V139, V141, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V133, V136, V139, V141, 0x0]

================================

Block 0x46c
[0x46c:0x4ca]
---
Predecessors: [0x450]
Successors: [0x4cb, 0x4cf]
---
0x46c JUMPDEST
0x46d POP
0x46e DUP4
0x46f PUSH1 0x1
0x471 PUSH1 0xa0
0x473 PUSH1 0x2
0x475 EXP
0x476 SUB
0x477 DUP2
0x478 AND
0x479 PUSH4 0x23b872dd
0x47e DUP6
0x47f DUP6
0x480 DUP6
0x481 PUSH1 0x40
0x483 MLOAD
0x484 PUSH1 0xe0
0x486 PUSH1 0x2
0x488 EXP
0x489 PUSH4 0xffffffff
0x48e DUP7
0x48f AND
0x490 MUL
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x1
0x495 PUSH1 0xa0
0x497 PUSH1 0x2
0x499 EXP
0x49a SUB
0x49b SWAP4
0x49c DUP5
0x49d AND
0x49e PUSH1 0x4
0x4a0 DUP3
0x4a1 ADD
0x4a2 MSTORE
0x4a3 SWAP2
0x4a4 SWAP1
0x4a5 SWAP3
0x4a6 AND
0x4a7 PUSH1 0x24
0x4a9 DUP3
0x4aa ADD
0x4ab MSTORE
0x4ac PUSH1 0x44
0x4ae DUP2
0x4af ADD
0x4b0 SWAP2
0x4b1 SWAP1
0x4b2 SWAP2
0x4b3 MSTORE
0x4b4 PUSH1 0x64
0x4b6 ADD
0x4b7 PUSH1 0x0
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc DUP1
0x4bd DUP4
0x4be SUB
0x4bf DUP2
0x4c0 PUSH1 0x0
0x4c2 DUP8
0x4c3 DUP1
0x4c4 EXTCODESIZE
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 PUSH2 0x4cf
0x4ca JUMPI
---
0x46c: JUMPDEST 
0x46f: V461 = 0x1
0x471: V462 = 0xa0
0x473: V463 = 0x2
0x475: V464 = EXP 0x2 0xa0
0x476: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x478: V466 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x479: V467 = 0x23b872dd
0x481: V468 = 0x40
0x483: V469 = M[0x40]
0x484: V470 = 0xe0
0x486: V471 = 0x2
0x488: V472 = EXP 0x2 0xe0
0x489: V473 = 0xffffffff
0x48f: V474 = AND 0x23b872dd 0xffffffff
0x490: V475 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x492: M[V469] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x493: V476 = 0x1
0x495: V477 = 0xa0
0x497: V478 = 0x2
0x499: V479 = EXP 0x2 0xa0
0x49a: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49d: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x49e: V482 = 0x4
0x4a1: V483 = ADD V469 0x4
0x4a2: M[V483] = V481
0x4a6: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x4a7: V485 = 0x24
0x4aa: V486 = ADD V469 0x24
0x4ab: M[V486] = V484
0x4ac: V487 = 0x44
0x4af: V488 = ADD V469 0x44
0x4b3: M[V488] = V141
0x4b4: V489 = 0x64
0x4b6: V490 = ADD 0x64 V469
0x4b7: V491 = 0x0
0x4b9: V492 = 0x40
0x4bb: V493 = M[0x40]
0x4be: V494 = SUB V490 V493
0x4c0: V495 = 0x0
0x4c4: V496 = EXTCODESIZE V466
0x4c5: V497 = ISZERO V496
0x4c6: V498 = ISZERO V497
0x4c7: V499 = 0x4cf
0x4ca: JUMPI 0x4cf V498
---
Entry stack: [V12, 0x102, V133, V136, V139, V141, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V466, 0x23b872dd, V490, 0x0, V493, V494, V493, 0x0, V466]
Exit stack: [V12, 0x102, V133, V136, V139, V141, V133, V466, 0x23b872dd, V490, 0x0, V493, V494, V493, 0x0, V466]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x46c]
Successors: []
---
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce REVERT
---
0x4cb: V500 = 0x0
0x4ce: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V133, V136, V139, V141, V133, V466, 0x23b872dd, V490, 0x0, V493, V494, V493, 0x0, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V133, V136, V139, V141, V133, V466, 0x23b872dd, V490, 0x0, V493, V494, V493, 0x0, V466]

================================

Block 0x4cf
[0x4cf:0x4db]
---
Predecessors: [0x46c]
Successors: [0x4dc, 0x4e0]
---
0x4cf JUMPDEST
0x4d0 PUSH2 0x2c6
0x4d3 GAS
0x4d4 SUB
0x4d5 CALL
0x4d6 ISZERO
0x4d7 ISZERO
0x4d8 PUSH2 0x4e0
0x4db JUMPI
---
0x4cf: JUMPDEST 
0x4d0: V501 = 0x2c6
0x4d3: V502 = GAS
0x4d4: V503 = SUB V502 0x2c6
0x4d5: V504 = CALL V503 V466 0x0 V493 V494 V493 0x0
0x4d6: V505 = ISZERO V504
0x4d7: V506 = ISZERO V505
0x4d8: V507 = 0x4e0
0x4db: JUMPI 0x4e0 V506
---
Entry stack: [V12, 0x102, V133, V136, V139, V141, V133, V466, 0x23b872dd, V490, 0x0, V493, V494, V493, 0x0, V466]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x102, V133, V136, V139, V141, V133, V466, 0x23b872dd, V490]

================================

Block 0x4dc
[0x4dc:0x4df]
---
Predecessors: [0x4cf]
Successors: []
---
0x4dc PUSH1 0x0
0x4de DUP1
0x4df REVERT
---
0x4dc: V508 = 0x0
0x4df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V133, V136, V139, V141, V133, V466, 0x23b872dd, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V133, V136, V139, V141, V133, V466, 0x23b872dd, V490]

================================

Block 0x4e0
[0x4e0:0x4e3]
---
Predecessors: [0x4cf]
Successors: [0x4e4]
---
0x4e0 JUMPDEST
0x4e1 POP
0x4e2 POP
0x4e3 POP
---
0x4e0: JUMPDEST 
---
Entry stack: [V12, 0x102, V133, V136, V139, V141, V133, V466, 0x23b872dd, V490]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x102, V133, V136, V139, V141, V133]

================================

Block 0x4e4
[0x4e4:0x4e4]
---
Predecessors: [0x4e0]
Successors: [0x4e5]
---
0x4e4 JUMPDEST
---
0x4e4: JUMPDEST 
---
Entry stack: [V12, 0x102, V133, V136, V139, V141, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V133, V136, V139, V141, V133]

================================

Block 0x4e5
[0x4e5:0x4eb]
---
Predecessors: [0x4e4]
Successors: [0x102]
---
0x4e5 JUMPDEST
0x4e6 POP
0x4e7 POP
0x4e8 POP
0x4e9 POP
0x4ea POP
0x4eb JUMP
---
0x4e5: JUMPDEST 
0x4eb: JUMP 0x102
---
Entry stack: [V12, 0x102, V133, V136, V139, V141, V133]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ec
[0x4ec:0x505]
---
Predecessors: [0x199]
Successors: [0x506, 0x50a]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 SLOAD
0x4f1 DUP2
0x4f2 SWAP1
0x4f3 CALLER
0x4f4 PUSH1 0x1
0x4f6 PUSH1 0xa0
0x4f8 PUSH1 0x2
0x4fa EXP
0x4fb SUB
0x4fc SWAP1
0x4fd DUP2
0x4fe AND
0x4ff SWAP2
0x500 AND
0x501 EQ
0x502 PUSH2 0x50a
0x505 JUMPI
---
0x4ec: JUMPDEST 
0x4ed: V509 = 0x0
0x4f0: V510 = S[0x0]
0x4f3: V511 = CALLER
0x4f4: V512 = 0x1
0x4f6: V513 = 0xa0
0x4f8: V514 = 0x2
0x4fa: V515 = EXP 0x2 0xa0
0x4fb: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fe: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x500: V518 = AND V510 0xffffffffffffffffffffffffffffffffffffffff
0x501: V519 = EQ V518 V517
0x502: V520 = 0x50a
0x505: JUMPI 0x50a V519
---
Entry stack: [V12, 0x123, V155, V158, V160]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x123, V155, V158, V160, 0x0, 0x0]

================================

Block 0x506
[0x506:0x509]
---
Predecessors: [0x4ec]
Successors: []
---
0x506 PUSH1 0x0
0x508 DUP1
0x509 REVERT
---
0x506: V521 = 0x0
0x509: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V155, V158, V160, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V155, V158, V160, 0x0, 0x0]

================================

Block 0x50a
[0x50a:0x564]
---
Predecessors: [0x4ec]
Successors: [0x565, 0x569]
---
0x50a JUMPDEST
0x50b POP
0x50c DUP4
0x50d PUSH1 0x1
0x50f PUSH1 0xa0
0x511 PUSH1 0x2
0x513 EXP
0x514 SUB
0x515 DUP2
0x516 AND
0x517 PUSH4 0x95ea7b3
0x51c DUP6
0x51d DUP6
0x51e PUSH1 0x0
0x520 PUSH1 0x40
0x522 MLOAD
0x523 PUSH1 0x20
0x525 ADD
0x526 MSTORE
0x527 PUSH1 0x40
0x529 MLOAD
0x52a PUSH1 0xe0
0x52c PUSH1 0x2
0x52e EXP
0x52f PUSH4 0xffffffff
0x534 DUP6
0x535 AND
0x536 MUL
0x537 DUP2
0x538 MSTORE
0x539 PUSH1 0x1
0x53b PUSH1 0xa0
0x53d PUSH1 0x2
0x53f EXP
0x540 SUB
0x541 SWAP1
0x542 SWAP3
0x543 AND
0x544 PUSH1 0x4
0x546 DUP4
0x547 ADD
0x548 MSTORE
0x549 PUSH1 0x24
0x54b DUP3
0x54c ADD
0x54d MSTORE
0x54e PUSH1 0x44
0x550 ADD
0x551 PUSH1 0x20
0x553 PUSH1 0x40
0x555 MLOAD
0x556 DUP1
0x557 DUP4
0x558 SUB
0x559 DUP2
0x55a PUSH1 0x0
0x55c DUP8
0x55d DUP1
0x55e EXTCODESIZE
0x55f ISZERO
0x560 ISZERO
0x561 PUSH2 0x569
0x564 JUMPI
---
0x50a: JUMPDEST 
0x50d: V522 = 0x1
0x50f: V523 = 0xa0
0x511: V524 = 0x2
0x513: V525 = EXP 0x2 0xa0
0x514: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x516: V527 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x517: V528 = 0x95ea7b3
0x51e: V529 = 0x0
0x520: V530 = 0x40
0x522: V531 = M[0x40]
0x523: V532 = 0x20
0x525: V533 = ADD 0x20 V531
0x526: M[V533] = 0x0
0x527: V534 = 0x40
0x529: V535 = M[0x40]
0x52a: V536 = 0xe0
0x52c: V537 = 0x2
0x52e: V538 = EXP 0x2 0xe0
0x52f: V539 = 0xffffffff
0x535: V540 = AND 0x95ea7b3 0xffffffff
0x536: V541 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x538: M[V535] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x539: V542 = 0x1
0x53b: V543 = 0xa0
0x53d: V544 = 0x2
0x53f: V545 = EXP 0x2 0xa0
0x540: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x543: V547 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x544: V548 = 0x4
0x547: V549 = ADD V535 0x4
0x548: M[V549] = V547
0x549: V550 = 0x24
0x54c: V551 = ADD V535 0x24
0x54d: M[V551] = V160
0x54e: V552 = 0x44
0x550: V553 = ADD 0x44 V535
0x551: V554 = 0x20
0x553: V555 = 0x40
0x555: V556 = M[0x40]
0x558: V557 = SUB V553 V556
0x55a: V558 = 0x0
0x55e: V559 = EXTCODESIZE V527
0x55f: V560 = ISZERO V559
0x560: V561 = ISZERO V560
0x561: V562 = 0x569
0x564: JUMPI 0x569 V561
---
Entry stack: [V12, 0x123, V155, V158, V160, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V527, 0x95ea7b3, V553, 0x20, V556, V557, V556, 0x0, V527]
Exit stack: [V12, 0x123, V155, V158, V160, 0x0, V155, V527, 0x95ea7b3, V553, 0x20, V556, V557, V556, 0x0, V527]

================================

Block 0x565
[0x565:0x568]
---
Predecessors: [0x50a]
Successors: []
---
0x565 PUSH1 0x0
0x567 DUP1
0x568 REVERT
---
0x565: V563 = 0x0
0x568: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V155, V158, V160, 0x0, V155, V527, 0x95ea7b3, V553, 0x20, V556, V557, V556, 0x0, V527]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V155, V158, V160, 0x0, V155, V527, 0x95ea7b3, V553, 0x20, V556, V557, V556, 0x0, V527]

================================

Block 0x569
[0x569:0x575]
---
Predecessors: [0x50a, 0x7fd]
Successors: [0x576, 0x57a]
---
0x569 JUMPDEST
0x56a PUSH2 0x2c6
0x56d GAS
0x56e SUB
0x56f CALL
0x570 ISZERO
0x571 ISZERO
0x572 PUSH2 0x57a
0x575 JUMPI
---
0x569: JUMPDEST 
0x56a: V564 = 0x2c6
0x56d: V565 = GAS
0x56e: V566 = SUB V565 0x2c6
0x56f: V567 = CALL V566 S0 0x0 S2 S3 S4 0x20
0x570: V568 = ISZERO V567
0x571: V569 = ISZERO V568
0x572: V570 = 0x57a
0x575: JUMPI 0x57a V569
---
Entry stack: [V12, 0x123, S13, S12, S11, 0x0, S9, S8, {0x95ea7b3, 0xa9059cbb}, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x123, S13, S12, S11, 0x0, S9, S8, {0x95ea7b3, 0xa9059cbb}, S6]

================================

Block 0x576
[0x576:0x579]
---
Predecessors: [0x569]
Successors: []
---
0x576 PUSH1 0x0
0x578 DUP1
0x579 REVERT
---
0x576: V571 = 0x0
0x579: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, S7, S6, S5, 0x0, S3, S2, {0x95ea7b3, 0xa9059cbb}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, S7, S6, S5, 0x0, S3, S2, {0x95ea7b3, 0xa9059cbb}, S0]

================================

Block 0x57a
[0x57a:0x585]
---
Predecessors: [0x569, 0x85c]
Successors: [0x586]
---
0x57a JUMPDEST
0x57b POP
0x57c POP
0x57d POP
0x57e PUSH1 0x40
0x580 MLOAD
0x581 DUP1
0x582 MLOAD
0x583 SWAP3
0x584 POP
0x585 POP
---
0x57a: JUMPDEST 
0x57e: V572 = 0x40
0x580: V573 = M[0x40]
0x582: V574 = M[V573]
---
Entry stack: [V12, 0x123, S7, S6, S5, 0x0, S3, S2, {0x95ea7b3, 0xa9059cbb}, S0]
Stack pops: 5
Stack additions: [V574, S3]
Exit stack: [V12, 0x123, S7, S6, S5, V574, S3]

================================

Block 0x586
[0x586:0x586]
---
Predecessors: [0x57a]
Successors: [0x587]
---
0x586 JUMPDEST
---
0x586: JUMPDEST 
---
Entry stack: [V12, 0x123, S4, S3, S2, V574, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, S4, S3, S2, V574, S0]

================================

Block 0x587
[0x587:0x58e]
---
Predecessors: [0x586]
Successors: [0x123]
---
0x587 JUMPDEST
0x588 POP
0x589 SWAP4
0x58a SWAP3
0x58b POP
0x58c POP
0x58d POP
0x58e JUMP
---
0x587: JUMPDEST 
0x58e: JUMP 0x123
---
Entry stack: [V12, 0x123, S4, S3, S2, V574, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V12, V574]

================================

Block 0x58f
[0x58f:0x5a6]
---
Predecessors: [0x1d5]
Successors: [0x5a7, 0x5ab]
---
0x58f JUMPDEST
0x590 PUSH1 0x0
0x592 DUP1
0x593 SLOAD
0x594 CALLER
0x595 PUSH1 0x1
0x597 PUSH1 0xa0
0x599 PUSH1 0x2
0x59b EXP
0x59c SUB
0x59d SWAP1
0x59e DUP2
0x59f AND
0x5a0 SWAP2
0x5a1 AND
0x5a2 EQ
0x5a3 PUSH2 0x5ab
0x5a6 JUMPI
---
0x58f: JUMPDEST 
0x590: V575 = 0x0
0x593: V576 = S[0x0]
0x594: V577 = CALLER
0x595: V578 = 0x1
0x597: V579 = 0xa0
0x599: V580 = 0x2
0x59b: V581 = EXP 0x2 0xa0
0x59c: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59f: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x5a1: V584 = AND V576 0xffffffffffffffffffffffffffffffffffffffff
0x5a2: V585 = EQ V584 V583
0x5a3: V586 = 0x5ab
0x5a6: JUMPI 0x5ab V585
---
Entry stack: [V12, 0x102, V183, V186, V188]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x102, V183, V186, V188, 0x0]

================================

Block 0x5a7
[0x5a7:0x5aa]
---
Predecessors: [0x58f]
Successors: []
---
0x5a7 PUSH1 0x0
0x5a9 DUP1
0x5aa REVERT
---
0x5a7: V587 = 0x0
0x5aa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V183, V186, V188, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V183, V186, V188, 0x0]

================================

Block 0x5ab
[0x5ab:0x5fc]
---
Predecessors: [0x58f]
Successors: [0x5fd, 0x601]
---
0x5ab JUMPDEST
0x5ac POP
0x5ad DUP3
0x5ae PUSH1 0x1
0x5b0 PUSH1 0xa0
0x5b2 PUSH1 0x2
0x5b4 EXP
0x5b5 SUB
0x5b6 DUP2
0x5b7 AND
0x5b8 PUSH4 0xa9059cbb
0x5bd DUP5
0x5be DUP5
0x5bf PUSH1 0x40
0x5c1 MLOAD
0x5c2 PUSH1 0xe0
0x5c4 PUSH1 0x2
0x5c6 EXP
0x5c7 PUSH4 0xffffffff
0x5cc DUP6
0x5cd AND
0x5ce MUL
0x5cf DUP2
0x5d0 MSTORE
0x5d1 PUSH1 0x1
0x5d3 PUSH1 0xa0
0x5d5 PUSH1 0x2
0x5d7 EXP
0x5d8 SUB
0x5d9 SWAP1
0x5da SWAP3
0x5db AND
0x5dc PUSH1 0x4
0x5de DUP4
0x5df ADD
0x5e0 MSTORE
0x5e1 PUSH1 0x24
0x5e3 DUP3
0x5e4 ADD
0x5e5 MSTORE
0x5e6 PUSH1 0x44
0x5e8 ADD
0x5e9 PUSH1 0x0
0x5eb PUSH1 0x40
0x5ed MLOAD
0x5ee DUP1
0x5ef DUP4
0x5f0 SUB
0x5f1 DUP2
0x5f2 PUSH1 0x0
0x5f4 DUP8
0x5f5 DUP1
0x5f6 EXTCODESIZE
0x5f7 ISZERO
0x5f8 ISZERO
0x5f9 PUSH2 0x601
0x5fc JUMPI
---
0x5ab: JUMPDEST 
0x5ae: V588 = 0x1
0x5b0: V589 = 0xa0
0x5b2: V590 = 0x2
0x5b4: V591 = EXP 0x2 0xa0
0x5b5: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b7: V593 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x5b8: V594 = 0xa9059cbb
0x5bf: V595 = 0x40
0x5c1: V596 = M[0x40]
0x5c2: V597 = 0xe0
0x5c4: V598 = 0x2
0x5c6: V599 = EXP 0x2 0xe0
0x5c7: V600 = 0xffffffff
0x5cd: V601 = AND 0xa9059cbb 0xffffffff
0x5ce: V602 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5d0: M[V596] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5d1: V603 = 0x1
0x5d3: V604 = 0xa0
0x5d5: V605 = 0x2
0x5d7: V606 = EXP 0x2 0xa0
0x5d8: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5db: V608 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x5dc: V609 = 0x4
0x5df: V610 = ADD V596 0x4
0x5e0: M[V610] = V608
0x5e1: V611 = 0x24
0x5e4: V612 = ADD V596 0x24
0x5e5: M[V612] = V188
0x5e6: V613 = 0x44
0x5e8: V614 = ADD 0x44 V596
0x5e9: V615 = 0x0
0x5eb: V616 = 0x40
0x5ed: V617 = M[0x40]
0x5f0: V618 = SUB V614 V617
0x5f2: V619 = 0x0
0x5f6: V620 = EXTCODESIZE V593
0x5f7: V621 = ISZERO V620
0x5f8: V622 = ISZERO V621
0x5f9: V623 = 0x601
0x5fc: JUMPI 0x601 V622
---
Entry stack: [V12, 0x102, V183, V186, V188, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V593, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V593]
Exit stack: [V12, 0x102, V183, V186, V188, V183, V593, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V593]

================================

Block 0x5fd
[0x5fd:0x600]
---
Predecessors: [0x5ab]
Successors: []
---
0x5fd PUSH1 0x0
0x5ff DUP1
0x600 REVERT
---
0x5fd: V624 = 0x0
0x600: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V183, V186, V188, V183, V593, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V593]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V183, V186, V188, V183, V593, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V593]

================================

Block 0x601
[0x601:0x60d]
---
Predecessors: [0x5ab]
Successors: [0x60e, 0x612]
---
0x601 JUMPDEST
0x602 PUSH2 0x2c6
0x605 GAS
0x606 SUB
0x607 CALL
0x608 ISZERO
0x609 ISZERO
0x60a PUSH2 0x612
0x60d JUMPI
---
0x601: JUMPDEST 
0x602: V625 = 0x2c6
0x605: V626 = GAS
0x606: V627 = SUB V626 0x2c6
0x607: V628 = CALL V627 V593 0x0 V617 V618 V617 0x0
0x608: V629 = ISZERO V628
0x609: V630 = ISZERO V629
0x60a: V631 = 0x612
0x60d: JUMPI 0x612 V630
---
Entry stack: [V12, 0x102, V183, V186, V188, V183, V593, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V593]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x102, V183, V186, V188, V183, V593, 0xa9059cbb, V614]

================================

Block 0x60e
[0x60e:0x611]
---
Predecessors: [0x601]
Successors: []
---
0x60e PUSH1 0x0
0x610 DUP1
0x611 REVERT
---
0x60e: V632 = 0x0
0x611: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V183, V186, V188, V183, V593, 0xa9059cbb, V614]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V183, V186, V188, V183, V593, 0xa9059cbb, V614]

================================

Block 0x612
[0x612:0x615]
---
Predecessors: [0x601]
Successors: [0x616]
---
0x612 JUMPDEST
0x613 POP
0x614 POP
0x615 POP
---
0x612: JUMPDEST 
---
Entry stack: [V12, 0x102, V183, V186, V188, V183, V593, 0xa9059cbb, V614]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x102, V183, V186, V188, V183]

================================

Block 0x616
[0x616:0x616]
---
Predecessors: [0x612]
Successors: [0x617]
---
0x616 JUMPDEST
---
0x616: JUMPDEST 
---
Entry stack: [V12, 0x102, V183, V186, V188, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V183, V186, V188, V183]

================================

Block 0x617
[0x617:0x61c]
---
Predecessors: [0x616]
Successors: [0x102]
---
0x617 JUMPDEST
0x618 POP
0x619 POP
0x61a POP
0x61b POP
0x61c JUMP
---
0x617: JUMPDEST 
0x61c: JUMP 0x102
---
Entry stack: [V12, 0x102, V183, V186, V188, V183]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x61d
[0x61d:0x636]
---
Predecessors: [0x1ff]
Successors: [0x637, 0x63b]
---
0x61d JUMPDEST
0x61e PUSH1 0x0
0x620 DUP1
0x621 SLOAD
0x622 DUP2
0x623 SWAP1
0x624 CALLER
0x625 PUSH1 0x1
0x627 PUSH1 0xa0
0x629 PUSH1 0x2
0x62b EXP
0x62c SUB
0x62d SWAP1
0x62e DUP2
0x62f AND
0x630 SWAP2
0x631 AND
0x632 EQ
0x633 PUSH2 0x63b
0x636 JUMPI
---
0x61d: JUMPDEST 
0x61e: V633 = 0x0
0x621: V634 = S[0x0]
0x624: V635 = CALLER
0x625: V636 = 0x1
0x627: V637 = 0xa0
0x629: V638 = 0x2
0x62b: V639 = EXP 0x2 0xa0
0x62c: V640 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62f: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x631: V642 = AND V634 0xffffffffffffffffffffffffffffffffffffffff
0x632: V643 = EQ V642 V641
0x633: V644 = 0x63b
0x636: JUMPI 0x63b V643
---
Entry stack: [V12, 0x102, V202, V205, V208, V210]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x102, V202, V205, V208, V210, 0x0, 0x0]

================================

Block 0x637
[0x637:0x63a]
---
Predecessors: [0x61d]
Successors: []
---
0x637 PUSH1 0x0
0x639 DUP1
0x63a REVERT
---
0x637: V645 = 0x0
0x63a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V202, V205, V208, V210, 0x0, 0x0]

================================

Block 0x63b
[0x63b:0x641]
---
Predecessors: [0x61d]
Successors: [0x642]
---
0x63b JUMPDEST
0x63c POP
0x63d DUP5
0x63e SWAP1
0x63f POP
0x640 PUSH1 0x0
---
0x63b: JUMPDEST 
0x640: V646 = 0x0
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S5, 0x0]
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, 0x0]

================================

Block 0x642
[0x642:0x64a]
---
Predecessors: [0x63b, 0x6c5]
Successors: [0x64b, 0x6cd]
---
0x642 JUMPDEST
0x643 DUP3
0x644 DUP2
0x645 LT
0x646 ISZERO
0x647 PUSH2 0x6cd
0x64a JUMPI
---
0x642: JUMPDEST 
0x645: V647 = LT S0 V210
0x646: V648 = ISZERO V647
0x647: V649 = 0x6cd
0x64a: JUMPI 0x6cd V648
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]

================================

Block 0x64b
[0x64b:0x664]
---
Predecessors: [0x642]
Successors: [0x665, 0x666]
---
0x64b PUSH1 0x1
0x64d PUSH1 0xa0
0x64f PUSH1 0x2
0x651 EXP
0x652 SUB
0x653 DUP3
0x654 AND
0x655 PUSH4 0xa9059cbb
0x65a DUP7
0x65b DUP7
0x65c DUP7
0x65d DUP6
0x65e DUP2
0x65f DUP2
0x660 LT
0x661 PUSH2 0x666
0x664 JUMPI
---
0x64b: V650 = 0x1
0x64d: V651 = 0xa0
0x64f: V652 = 0x2
0x651: V653 = EXP 0x2 0xa0
0x652: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x654: V655 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x655: V656 = 0xa9059cbb
0x660: V657 = LT S0 V210
0x661: V658 = 0x666
0x664: JUMPI 0x666 V657
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V655, 0xa9059cbb, S4, S3, S2, S0]
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S0, V655, 0xa9059cbb, V205, V208, V210, S0]

================================

Block 0x665
[0x665:0x665]
---
Predecessors: [0x64b]
Successors: []
---
0x665 INVALID
---
0x665: INVALID 
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S6, V655, 0xa9059cbb, V205, V208, V210, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S6, V655, 0xa9059cbb, V205, V208, V210, S0]

================================

Block 0x666
[0x666:0x6ab]
---
Predecessors: [0x64b]
Successors: [0x6ac, 0x6b0]
---
0x666 JUMPDEST
0x667 SWAP1
0x668 POP
0x669 PUSH1 0x20
0x66b MUL
0x66c ADD
0x66d CALLDATALOAD
0x66e PUSH1 0x40
0x670 MLOAD
0x671 PUSH1 0xe0
0x673 PUSH1 0x2
0x675 EXP
0x676 PUSH4 0xffffffff
0x67b DUP6
0x67c AND
0x67d MUL
0x67e DUP2
0x67f MSTORE
0x680 PUSH1 0x1
0x682 PUSH1 0xa0
0x684 PUSH1 0x2
0x686 EXP
0x687 SUB
0x688 SWAP1
0x689 SWAP3
0x68a AND
0x68b PUSH1 0x4
0x68d DUP4
0x68e ADD
0x68f MSTORE
0x690 PUSH1 0x24
0x692 DUP3
0x693 ADD
0x694 MSTORE
0x695 PUSH1 0x44
0x697 ADD
0x698 PUSH1 0x0
0x69a PUSH1 0x40
0x69c MLOAD
0x69d DUP1
0x69e DUP4
0x69f SUB
0x6a0 DUP2
0x6a1 PUSH1 0x0
0x6a3 DUP8
0x6a4 DUP1
0x6a5 EXTCODESIZE
0x6a6 ISZERO
0x6a7 ISZERO
0x6a8 PUSH2 0x6b0
0x6ab JUMPI
---
0x666: JUMPDEST 
0x669: V659 = 0x20
0x66b: V660 = MUL 0x20 S0
0x66c: V661 = ADD V660 V208
0x66d: V662 = CALLDATALOAD V661
0x66e: V663 = 0x40
0x670: V664 = M[0x40]
0x671: V665 = 0xe0
0x673: V666 = 0x2
0x675: V667 = EXP 0x2 0xe0
0x676: V668 = 0xffffffff
0x67c: V669 = AND 0xa9059cbb 0xffffffff
0x67d: V670 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x67f: M[V664] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x680: V671 = 0x1
0x682: V672 = 0xa0
0x684: V673 = 0x2
0x686: V674 = EXP 0x2 0xa0
0x687: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68a: V676 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x68b: V677 = 0x4
0x68e: V678 = ADD V664 0x4
0x68f: M[V678] = V676
0x690: V679 = 0x24
0x693: V680 = ADD V664 0x24
0x694: M[V680] = V662
0x695: V681 = 0x44
0x697: V682 = ADD 0x44 V664
0x698: V683 = 0x0
0x69a: V684 = 0x40
0x69c: V685 = M[0x40]
0x69f: V686 = SUB V682 V685
0x6a1: V687 = 0x0
0x6a5: V688 = EXTCODESIZE V655
0x6a6: V689 = ISZERO V688
0x6a7: V690 = ISZERO V689
0x6a8: V691 = 0x6b0
0x6ab: JUMPI 0x6b0 V690
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S6, V655, 0xa9059cbb, V205, V208, V210, S0]
Stack pops: 6
Stack additions: [S5, S4, V682, 0x0, V685, V686, V685, 0x0, S5]
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S6, V655, 0xa9059cbb, V682, 0x0, V685, V686, V685, 0x0, V655]

================================

Block 0x6ac
[0x6ac:0x6af]
---
Predecessors: [0x666]
Successors: []
---
0x6ac PUSH1 0x0
0x6ae DUP1
0x6af REVERT
---
0x6ac: V692 = 0x0
0x6af: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S9, V655, 0xa9059cbb, V682, 0x0, V685, V686, V685, 0x0, V655]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S9, V655, 0xa9059cbb, V682, 0x0, V685, V686, V685, 0x0, V655]

================================

Block 0x6b0
[0x6b0:0x6bc]
---
Predecessors: [0x666]
Successors: [0x6bd, 0x6c1]
---
0x6b0 JUMPDEST
0x6b1 PUSH2 0x2c6
0x6b4 GAS
0x6b5 SUB
0x6b6 CALL
0x6b7 ISZERO
0x6b8 ISZERO
0x6b9 PUSH2 0x6c1
0x6bc JUMPI
---
0x6b0: JUMPDEST 
0x6b1: V693 = 0x2c6
0x6b4: V694 = GAS
0x6b5: V695 = SUB V694 0x2c6
0x6b6: V696 = CALL V695 V655 0x0 V685 V686 V685 0x0
0x6b7: V697 = ISZERO V696
0x6b8: V698 = ISZERO V697
0x6b9: V699 = 0x6c1
0x6bc: JUMPI 0x6c1 V698
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S9, V655, 0xa9059cbb, V682, 0x0, V685, V686, V685, 0x0, V655]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S9, V655, 0xa9059cbb, V682]

================================

Block 0x6bd
[0x6bd:0x6c0]
---
Predecessors: [0x6b0]
Successors: []
---
0x6bd PUSH1 0x0
0x6bf DUP1
0x6c0 REVERT
---
0x6bd: V700 = 0x0
0x6c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S3, V655, 0xa9059cbb, V682]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S3, V655, 0xa9059cbb, V682]

================================

Block 0x6c1
[0x6c1:0x6c4]
---
Predecessors: [0x6b0]
Successors: [0x6c5]
---
0x6c1 JUMPDEST
0x6c2 POP
0x6c3 POP
0x6c4 POP
---
0x6c1: JUMPDEST 
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S3, V655, 0xa9059cbb, V682]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S3]

================================

Block 0x6c5
[0x6c5:0x6cc]
---
Predecessors: [0x6c1]
Successors: [0x642]
---
0x6c5 JUMPDEST
0x6c6 PUSH1 0x1
0x6c8 ADD
0x6c9 PUSH2 0x642
0x6cc JUMP
---
0x6c5: JUMPDEST 
0x6c6: V701 = 0x1
0x6c8: V702 = ADD 0x1 S0
0x6c9: V703 = 0x642
0x6cc: JUMP 0x642
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]
Stack pops: 1
Stack additions: [V702]
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, V702]

================================

Block 0x6cd
[0x6cd:0x6cd]
---
Predecessors: [0x642]
Successors: [0x6ce]
---
0x6cd JUMPDEST
---
0x6cd: JUMPDEST 
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]

================================

Block 0x6ce
[0x6ce:0x6ce]
---
Predecessors: [0x6cd]
Successors: [0x6cf]
---
0x6ce JUMPDEST
---
0x6ce: JUMPDEST 
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]

================================

Block 0x6cf
[0x6cf:0x6d6]
---
Predecessors: [0x6ce]
Successors: [0x102]
---
0x6cf JUMPDEST
0x6d0 POP
0x6d1 POP
0x6d2 POP
0x6d3 POP
0x6d4 POP
0x6d5 POP
0x6d6 JUMP
---
0x6cf: JUMPDEST 
0x6d6: JUMP 0x102
---
Entry stack: [V12, 0x102, V202, V205, V208, V210, V202, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12]

================================

Block 0x6d7
[0x6d7:0x6e5]
---
Predecessors: [0x234]
Successors: [0x23c]
---
0x6d7 JUMPDEST
0x6d8 PUSH1 0x0
0x6da SLOAD
0x6db PUSH1 0x1
0x6dd PUSH1 0xa0
0x6df PUSH1 0x2
0x6e1 EXP
0x6e2 SUB
0x6e3 AND
0x6e4 DUP2
0x6e5 JUMP
---
0x6d7: JUMPDEST 
0x6d8: V704 = 0x0
0x6da: V705 = S[0x0]
0x6db: V706 = 0x1
0x6dd: V707 = 0xa0
0x6df: V708 = 0x2
0x6e1: V709 = EXP 0x2 0xa0
0x6e2: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e3: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0x6e5: JUMP 0x23c
---
Entry stack: [V12, 0x23c]
Stack pops: 1
Stack additions: [S0, V711]
Exit stack: [V12, 0x23c, V711]

================================

Block 0x6e6
[0x6e6:0x6fc]
---
Predecessors: [0x263]
Successors: [0x6fd, 0x701]
---
0x6e6 JUMPDEST
0x6e7 PUSH1 0x0
0x6e9 SLOAD
0x6ea CALLER
0x6eb PUSH1 0x1
0x6ed PUSH1 0xa0
0x6ef PUSH1 0x2
0x6f1 EXP
0x6f2 SUB
0x6f3 SWAP1
0x6f4 DUP2
0x6f5 AND
0x6f6 SWAP2
0x6f7 AND
0x6f8 EQ
0x6f9 PUSH2 0x701
0x6fc JUMPI
---
0x6e6: JUMPDEST 
0x6e7: V712 = 0x0
0x6e9: V713 = S[0x0]
0x6ea: V714 = CALLER
0x6eb: V715 = 0x1
0x6ed: V716 = 0xa0
0x6ef: V717 = 0x2
0x6f1: V718 = EXP 0x2 0xa0
0x6f2: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f5: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0x6f7: V721 = AND V713 0xffffffffffffffffffffffffffffffffffffffff
0x6f8: V722 = EQ V721 V720
0x6f9: V723 = 0x701
0x6fc: JUMPI 0x701 V722
---
Entry stack: [V12, 0x102, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V243]

================================

Block 0x6fd
[0x6fd:0x700]
---
Predecessors: [0x6e6]
Successors: []
---
0x6fd PUSH1 0x0
0x6ff DUP1
0x700 REVERT
---
0x6fd: V724 = 0x0
0x700: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V243]

================================

Block 0x701
[0x701:0x729]
---
Predecessors: [0x6e6]
Successors: [0x72a]
---
0x701 JUMPDEST
0x702 PUSH1 0x0
0x704 DUP1
0x705 SLOAD
0x706 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71b NOT
0x71c AND
0x71d PUSH1 0x1
0x71f PUSH1 0xa0
0x721 PUSH1 0x2
0x723 EXP
0x724 SUB
0x725 DUP4
0x726 AND
0x727 OR
0x728 SWAP1
0x729 SSTORE
---
0x701: JUMPDEST 
0x702: V725 = 0x0
0x705: V726 = S[0x0]
0x706: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V728 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x71c: V729 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V726
0x71d: V730 = 0x1
0x71f: V731 = 0xa0
0x721: V732 = 0x2
0x723: V733 = EXP 0x2 0xa0
0x724: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x726: V735 = AND V243 0xffffffffffffffffffffffffffffffffffffffff
0x727: V736 = OR V735 V729
0x729: S[0x0] = V736
---
Entry stack: [V12, 0x102, V243]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x102, V243]

================================

Block 0x72a
[0x72a:0x72a]
---
Predecessors: [0x701]
Successors: [0x72b]
---
0x72a JUMPDEST
---
0x72a: JUMPDEST 
---
Entry stack: [V12, 0x102, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V243]

================================

Block 0x72b
[0x72b:0x72d]
---
Predecessors: [0x72a]
Successors: [0x102]
---
0x72b JUMPDEST
0x72c POP
0x72d JUMP
---
0x72b: JUMPDEST 
0x72d: JUMP 0x102
---
Entry stack: [V12, 0x102, V243]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x72e
[0x72e:0x747]
---
Predecessors: [0x284]
Successors: [0x748, 0x74c]
---
0x72e JUMPDEST
0x72f PUSH1 0x0
0x731 DUP1
0x732 SLOAD
0x733 DUP2
0x734 SWAP1
0x735 CALLER
0x736 PUSH1 0x1
0x738 PUSH1 0xa0
0x73a PUSH1 0x2
0x73c EXP
0x73d SUB
0x73e SWAP1
0x73f DUP2
0x740 AND
0x741 SWAP2
0x742 AND
0x743 EQ
0x744 PUSH2 0x74c
0x747 JUMPI
---
0x72e: JUMPDEST 
0x72f: V737 = 0x0
0x732: V738 = S[0x0]
0x735: V739 = CALLER
0x736: V740 = 0x1
0x738: V741 = 0xa0
0x73a: V742 = 0x2
0x73c: V743 = EXP 0x2 0xa0
0x73d: V744 = SUB 0x10000000000000000000000000000000000000000 0x1
0x740: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V739
0x742: V746 = AND V738 0xffffffffffffffffffffffffffffffffffffffff
0x743: V747 = EQ V746 V745
0x744: V748 = 0x74c
0x747: JUMPI 0x74c V747
---
Entry stack: [V12, 0x123, V257, V260, V263, V265]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x123, V257, V260, V263, V265, 0x0, 0x0]

================================

Block 0x748
[0x748:0x74b]
---
Predecessors: [0x72e]
Successors: []
---
0x748 PUSH1 0x0
0x74a DUP1
0x74b REVERT
---
0x748: V749 = 0x0
0x74b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V257, V260, V263, V265, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V257, V260, V263, V265, 0x0, 0x0]

================================

Block 0x74c
[0x74c:0x7b3]
---
Predecessors: [0x72e]
Successors: [0x7b4, 0x7b8]
---
0x74c JUMPDEST
0x74d POP
0x74e DUP5
0x74f PUSH1 0x1
0x751 PUSH1 0xa0
0x753 PUSH1 0x2
0x755 EXP
0x756 SUB
0x757 DUP2
0x758 AND
0x759 PUSH4 0x23b872dd
0x75e DUP7
0x75f DUP7
0x760 DUP7
0x761 PUSH1 0x0
0x763 PUSH1 0x40
0x765 MLOAD
0x766 PUSH1 0x20
0x768 ADD
0x769 MSTORE
0x76a PUSH1 0x40
0x76c MLOAD
0x76d PUSH1 0xe0
0x76f PUSH1 0x2
0x771 EXP
0x772 PUSH4 0xffffffff
0x777 DUP7
0x778 AND
0x779 MUL
0x77a DUP2
0x77b MSTORE
0x77c PUSH1 0x1
0x77e PUSH1 0xa0
0x780 PUSH1 0x2
0x782 EXP
0x783 SUB
0x784 SWAP4
0x785 DUP5
0x786 AND
0x787 PUSH1 0x4
0x789 DUP3
0x78a ADD
0x78b MSTORE
0x78c SWAP2
0x78d SWAP1
0x78e SWAP3
0x78f AND
0x790 PUSH1 0x24
0x792 DUP3
0x793 ADD
0x794 MSTORE
0x795 PUSH1 0x44
0x797 DUP2
0x798 ADD
0x799 SWAP2
0x79a SWAP1
0x79b SWAP2
0x79c MSTORE
0x79d PUSH1 0x64
0x79f ADD
0x7a0 PUSH1 0x20
0x7a2 PUSH1 0x40
0x7a4 MLOAD
0x7a5 DUP1
0x7a6 DUP4
0x7a7 SUB
0x7a8 DUP2
0x7a9 PUSH1 0x0
0x7ab DUP8
0x7ac DUP1
0x7ad EXTCODESIZE
0x7ae ISZERO
0x7af ISZERO
0x7b0 PUSH2 0x7b8
0x7b3 JUMPI
---
0x74c: JUMPDEST 
0x74f: V750 = 0x1
0x751: V751 = 0xa0
0x753: V752 = 0x2
0x755: V753 = EXP 0x2 0xa0
0x756: V754 = SUB 0x10000000000000000000000000000000000000000 0x1
0x758: V755 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0x759: V756 = 0x23b872dd
0x761: V757 = 0x0
0x763: V758 = 0x40
0x765: V759 = M[0x40]
0x766: V760 = 0x20
0x768: V761 = ADD 0x20 V759
0x769: M[V761] = 0x0
0x76a: V762 = 0x40
0x76c: V763 = M[0x40]
0x76d: V764 = 0xe0
0x76f: V765 = 0x2
0x771: V766 = EXP 0x2 0xe0
0x772: V767 = 0xffffffff
0x778: V768 = AND 0x23b872dd 0xffffffff
0x779: V769 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x77b: M[V763] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x77c: V770 = 0x1
0x77e: V771 = 0xa0
0x780: V772 = 0x2
0x782: V773 = EXP 0x2 0xa0
0x783: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x786: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x787: V776 = 0x4
0x78a: V777 = ADD V763 0x4
0x78b: M[V777] = V775
0x78f: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x790: V779 = 0x24
0x793: V780 = ADD V763 0x24
0x794: M[V780] = V778
0x795: V781 = 0x44
0x798: V782 = ADD V763 0x44
0x79c: M[V782] = V265
0x79d: V783 = 0x64
0x79f: V784 = ADD 0x64 V763
0x7a0: V785 = 0x20
0x7a2: V786 = 0x40
0x7a4: V787 = M[0x40]
0x7a7: V788 = SUB V784 V787
0x7a9: V789 = 0x0
0x7ad: V790 = EXTCODESIZE V755
0x7ae: V791 = ISZERO V790
0x7af: V792 = ISZERO V791
0x7b0: V793 = 0x7b8
0x7b3: JUMPI 0x7b8 V792
---
Entry stack: [V12, 0x123, V257, V260, V263, V265, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5, V755, 0x23b872dd, V784, 0x20, V787, V788, V787, 0x0, V755]
Exit stack: [V12, 0x123, V257, V260, V263, V265, 0x0, V257, V755, 0x23b872dd, V784, 0x20, V787, V788, V787, 0x0, V755]

================================

Block 0x7b4
[0x7b4:0x7b7]
---
Predecessors: [0x74c]
Successors: []
---
0x7b4 PUSH1 0x0
0x7b6 DUP1
0x7b7 REVERT
---
0x7b4: V794 = 0x0
0x7b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V257, V260, V263, V265, 0x0, V257, V755, 0x23b872dd, V784, 0x20, V787, V788, V787, 0x0, V755]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V257, V260, V263, V265, 0x0, V257, V755, 0x23b872dd, V784, 0x20, V787, V788, V787, 0x0, V755]

================================

Block 0x7b8
[0x7b8:0x7c4]
---
Predecessors: [0x74c]
Successors: [0x7c5, 0x7c9]
---
0x7b8 JUMPDEST
0x7b9 PUSH2 0x2c6
0x7bc GAS
0x7bd SUB
0x7be CALL
0x7bf ISZERO
0x7c0 ISZERO
0x7c1 PUSH2 0x7c9
0x7c4 JUMPI
---
0x7b8: JUMPDEST 
0x7b9: V795 = 0x2c6
0x7bc: V796 = GAS
0x7bd: V797 = SUB V796 0x2c6
0x7be: V798 = CALL V797 V755 0x0 V787 V788 V787 0x20
0x7bf: V799 = ISZERO V798
0x7c0: V800 = ISZERO V799
0x7c1: V801 = 0x7c9
0x7c4: JUMPI 0x7c9 V800
---
Entry stack: [V12, 0x123, V257, V260, V263, V265, 0x0, V257, V755, 0x23b872dd, V784, 0x20, V787, V788, V787, 0x0, V755]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x123, V257, V260, V263, V265, 0x0, V257, V755, 0x23b872dd, V784]

================================

Block 0x7c5
[0x7c5:0x7c8]
---
Predecessors: [0x7b8]
Successors: []
---
0x7c5 PUSH1 0x0
0x7c7 DUP1
0x7c8 REVERT
---
0x7c5: V802 = 0x0
0x7c8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V257, V260, V263, V265, 0x0, V257, V755, 0x23b872dd, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V257, V260, V263, V265, 0x0, V257, V755, 0x23b872dd, V784]

================================

Block 0x7c9
[0x7c9:0x7d4]
---
Predecessors: [0x7b8]
Successors: [0x7d5]
---
0x7c9 JUMPDEST
0x7ca POP
0x7cb POP
0x7cc POP
0x7cd PUSH1 0x40
0x7cf MLOAD
0x7d0 DUP1
0x7d1 MLOAD
0x7d2 SWAP3
0x7d3 POP
0x7d4 POP
---
0x7c9: JUMPDEST 
0x7cd: V803 = 0x40
0x7cf: V804 = M[0x40]
0x7d1: V805 = M[V804]
---
Entry stack: [V12, 0x123, V257, V260, V263, V265, 0x0, V257, V755, 0x23b872dd, V784]
Stack pops: 5
Stack additions: [V805, S3]
Exit stack: [V12, 0x123, V257, V260, V263, V265, V805, V257]

================================

Block 0x7d5
[0x7d5:0x7d5]
---
Predecessors: [0x7c9]
Successors: [0x7d6]
---
0x7d5 JUMPDEST
---
0x7d5: JUMPDEST 
---
Entry stack: [V12, 0x123, V257, V260, V263, V265, V805, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V257, V260, V263, V265, V805, V257]

================================

Block 0x7d6
[0x7d6:0x7de]
---
Predecessors: [0x7d5]
Successors: [0x123]
---
0x7d6 JUMPDEST
0x7d7 POP
0x7d8 SWAP5
0x7d9 SWAP4
0x7da POP
0x7db POP
0x7dc POP
0x7dd POP
0x7de JUMP
---
0x7d6: JUMPDEST 
0x7de: JUMP 0x123
---
Entry stack: [V12, 0x123, V257, V260, V263, V265, V805, V257]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V12, V805]

================================

Block 0x7df
[0x7df:0x7f8]
---
Predecessors: [0x2c6]
Successors: [0x7f9, 0x7fd]
---
0x7df JUMPDEST
0x7e0 PUSH1 0x0
0x7e2 DUP1
0x7e3 SLOAD
0x7e4 DUP2
0x7e5 SWAP1
0x7e6 CALLER
0x7e7 PUSH1 0x1
0x7e9 PUSH1 0xa0
0x7eb PUSH1 0x2
0x7ed EXP
0x7ee SUB
0x7ef SWAP1
0x7f0 DUP2
0x7f1 AND
0x7f2 SWAP2
0x7f3 AND
0x7f4 EQ
0x7f5 PUSH2 0x7fd
0x7f8 JUMPI
---
0x7df: JUMPDEST 
0x7e0: V806 = 0x0
0x7e3: V807 = S[0x0]
0x7e6: V808 = CALLER
0x7e7: V809 = 0x1
0x7e9: V810 = 0xa0
0x7eb: V811 = 0x2
0x7ed: V812 = EXP 0x2 0xa0
0x7ee: V813 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f1: V814 = AND 0xffffffffffffffffffffffffffffffffffffffff V808
0x7f3: V815 = AND V807 0xffffffffffffffffffffffffffffffffffffffff
0x7f4: V816 = EQ V815 V814
0x7f5: V817 = 0x7fd
0x7f8: JUMPI 0x7fd V816
---
Entry stack: [V12, 0x123, V288, V291, V293]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x123, V288, V291, V293, 0x0, 0x0]

================================

Block 0x7f9
[0x7f9:0x7fc]
---
Predecessors: [0x7df]
Successors: []
---
0x7f9 PUSH1 0x0
0x7fb DUP1
0x7fc REVERT
---
0x7f9: V818 = 0x0
0x7fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V288, V291, V293, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V288, V291, V293, 0x0, 0x0]

================================

Block 0x7fd
[0x7fd:0x857]
---
Predecessors: [0x7df]
Successors: [0x569, 0x858]
---
0x7fd JUMPDEST
0x7fe POP
0x7ff DUP4
0x800 PUSH1 0x1
0x802 PUSH1 0xa0
0x804 PUSH1 0x2
0x806 EXP
0x807 SUB
0x808 DUP2
0x809 AND
0x80a PUSH4 0xa9059cbb
0x80f DUP6
0x810 DUP6
0x811 PUSH1 0x0
0x813 PUSH1 0x40
0x815 MLOAD
0x816 PUSH1 0x20
0x818 ADD
0x819 MSTORE
0x81a PUSH1 0x40
0x81c MLOAD
0x81d PUSH1 0xe0
0x81f PUSH1 0x2
0x821 EXP
0x822 PUSH4 0xffffffff
0x827 DUP6
0x828 AND
0x829 MUL
0x82a DUP2
0x82b MSTORE
0x82c PUSH1 0x1
0x82e PUSH1 0xa0
0x830 PUSH1 0x2
0x832 EXP
0x833 SUB
0x834 SWAP1
0x835 SWAP3
0x836 AND
0x837 PUSH1 0x4
0x839 DUP4
0x83a ADD
0x83b MSTORE
0x83c PUSH1 0x24
0x83e DUP3
0x83f ADD
0x840 MSTORE
0x841 PUSH1 0x44
0x843 ADD
0x844 PUSH1 0x20
0x846 PUSH1 0x40
0x848 MLOAD
0x849 DUP1
0x84a DUP4
0x84b SUB
0x84c DUP2
0x84d PUSH1 0x0
0x84f DUP8
0x850 DUP1
0x851 EXTCODESIZE
0x852 ISZERO
0x853 ISZERO
0x854 PUSH2 0x569
0x857 JUMPI
---
0x7fd: JUMPDEST 
0x800: V819 = 0x1
0x802: V820 = 0xa0
0x804: V821 = 0x2
0x806: V822 = EXP 0x2 0xa0
0x807: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0x809: V824 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x80a: V825 = 0xa9059cbb
0x811: V826 = 0x0
0x813: V827 = 0x40
0x815: V828 = M[0x40]
0x816: V829 = 0x20
0x818: V830 = ADD 0x20 V828
0x819: M[V830] = 0x0
0x81a: V831 = 0x40
0x81c: V832 = M[0x40]
0x81d: V833 = 0xe0
0x81f: V834 = 0x2
0x821: V835 = EXP 0x2 0xe0
0x822: V836 = 0xffffffff
0x828: V837 = AND 0xa9059cbb 0xffffffff
0x829: V838 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x82b: M[V832] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x82c: V839 = 0x1
0x82e: V840 = 0xa0
0x830: V841 = 0x2
0x832: V842 = EXP 0x2 0xa0
0x833: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x836: V844 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0x837: V845 = 0x4
0x83a: V846 = ADD V832 0x4
0x83b: M[V846] = V844
0x83c: V847 = 0x24
0x83f: V848 = ADD V832 0x24
0x840: M[V848] = V293
0x841: V849 = 0x44
0x843: V850 = ADD 0x44 V832
0x844: V851 = 0x20
0x846: V852 = 0x40
0x848: V853 = M[0x40]
0x84b: V854 = SUB V850 V853
0x84d: V855 = 0x0
0x851: V856 = EXTCODESIZE V824
0x852: V857 = ISZERO V856
0x853: V858 = ISZERO V857
0x854: V859 = 0x569
0x857: JUMPI 0x569 V858
---
Entry stack: [V12, 0x123, V288, V291, V293, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V824, 0xa9059cbb, V850, 0x20, V853, V854, V853, 0x0, V824]
Exit stack: [V12, 0x123, V288, V291, V293, 0x0, V288, V824, 0xa9059cbb, V850, 0x20, V853, V854, V853, 0x0, V824]

================================

Block 0x858
[0x858:0x85b]
---
Predecessors: [0x7fd]
Successors: []
---
0x858 PUSH1 0x0
0x85a DUP1
0x85b REVERT
---
0x858: V860 = 0x0
0x85b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x123, V288, V291, V293, 0x0, V288, V824, 0xa9059cbb, V850, 0x20, V853, V854, V853, 0x0, V824]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x123, V288, V291, V293, 0x0, V288, V824, 0xa9059cbb, V850, 0x20, V853, V854, V853, 0x0, V824]

================================

Block 0x85c
[0x85c:0x868]
---
Predecessors: []
Successors: [0x57a, 0x869]
---
0x85c JUMPDEST
0x85d PUSH2 0x2c6
0x860 GAS
0x861 SUB
0x862 CALL
0x863 ISZERO
0x864 ISZERO
0x865 PUSH2 0x57a
0x868 JUMPI
---
0x85c: JUMPDEST 
0x85d: V861 = 0x2c6
0x860: V862 = GAS
0x861: V863 = SUB V862 0x2c6
0x862: V864 = CALL V863 S0 S1 S2 S3 S4 S5
0x863: V865 = ISZERO V864
0x864: V866 = ISZERO V865
0x865: V867 = 0x57a
0x868: JUMPI 0x57a V866
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x869
[0x869:0x878]
---
Predecessors: [0x85c]
Successors: [0x879]
---
0x869 PUSH1 0x0
0x86b DUP1
0x86c REVERT
0x86d JUMPDEST
0x86e POP
0x86f POP
0x870 POP
0x871 PUSH1 0x40
0x873 MLOAD
0x874 DUP1
0x875 MLOAD
0x876 SWAP3
0x877 POP
0x878 POP
---
0x869: V868 = 0x0
0x86c: REVERT 0x0 0x0
0x86d: JUMPDEST 
0x871: V869 = 0x40
0x873: V870 = M[0x40]
0x875: V871 = M[V870]
---
Entry stack: []
Stack pops: 0
Stack additions: [S3, V871]
Exit stack: []

================================

Block 0x879
[0x879:0x879]
---
Predecessors: [0x869]
Successors: [0x87a]
---
0x879 JUMPDEST
---
0x879: JUMPDEST 
---
Entry stack: [V871, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V871, S0]

================================

Block 0x87a
[0x87a:0x8b0]
---
Predecessors: [0x879]
Successors: []
---
0x87a JUMPDEST
0x87b POP
0x87c SWAP4
0x87d SWAP3
0x87e POP
0x87f POP
0x880 POP
0x881 JUMP
0x882 STOP
0x883 LOG1
0x884 PUSH6 0x627a7a723058
0x88b SHA3
0x88c MISSING 0xc5
0x88d MISSING 0x2f
0x88e DUP7
0x88f ADDRESS
0x890 SWAP6
0x891 SWAP13
0x892 MISSING 0xad
0x893 CODESIZE
0x894 MISSING 0xee
0x895 MISSING 0x2d
0x896 CREATE
0x897 MISSING 0xe9
0x898 PUSH7 0x65886478135e1a
0x8a0 MISSING 0xc0
0x8a1 PUSH15 0x855cdebb7004c9aa7bae0029
---
0x87a: JUMPDEST 
0x881: JUMP S5
0x882: STOP 
0x883: LOG S0 S1 S2
0x884: V872 = 0x627a7a723058
0x88b: V873 = SHA3 0x627a7a723058 S3
0x88c: MISSING 0xc5
0x88d: MISSING 0x2f
0x88f: V874 = ADDRESS
0x892: MISSING 0xad
0x893: V875 = CODESIZE
0x894: MISSING 0xee
0x895: MISSING 0x2d
0x896: V876 = CREATE S0 S1 S2
0x897: MISSING 0xe9
0x898: V877 = 0x65886478135e1a
0x8a0: MISSING 0xc0
0x8a1: V878 = 0x855cdebb7004c9aa7bae0029
---
Entry stack: [V871, S0]
Stack pops: 2517
Stack additions: [0x855cdebb7004c9aa7bae0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1be19560
Entry block: 0x104
Exit block: 0x123
Body: 0x104, 0x10b, 0x10f, 0x123, 0x2f7, 0x34d, 0x351, 0x35e, 0x362, 0x376, 0x37a, 0x3dc, 0x3e0, 0x3ed, 0x3f1, 0x3fd

Function 1:
Public function signature: 0x35faa416
Entry block: 0x137
Exit block: 0x123
Body: 0x123, 0x137, 0x13e, 0x142, 0x404, 0x419, 0x41d, 0x44d

Function 2:
Public function signature: 0x486b03c2
Entry block: 0x15e
Exit block: 0x102
Body: 0x102, 0x15e, 0x165, 0x169, 0x450, 0x468, 0x46c, 0x4cb, 0x4cf, 0x4dc, 0x4e0, 0x4e4, 0x4e5

Function 3:
Public function signature: 0x52a23bbb
Entry block: 0x18e
Exit block: 0x123
Body: 0x123, 0x18e, 0x195, 0x199, 0x4ec, 0x506, 0x50a, 0x565, 0x569, 0x576, 0x57a, 0x586, 0x587

Function 4:
Public function signature: 0x6bbe0bab
Entry block: 0x1ca
Exit block: 0x102
Body: 0x102, 0x1ca, 0x1d1, 0x1d5, 0x58f, 0x5a7, 0x5ab, 0x5fd, 0x601, 0x60e, 0x612, 0x616, 0x617

Function 5:
Public function signature: 0x82b5b8ab
Entry block: 0x1f4
Exit block: 0x6bd
Body: 0x102, 0x1f4, 0x1fb, 0x1ff, 0x61d, 0x637, 0x63b, 0x642, 0x64b, 0x665, 0x666, 0x6ac, 0x6b0, 0x6bd, 0x6c1, 0x6c5, 0x6cd, 0x6ce, 0x6cf

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x229
Exit block: 0x23c
Body: 0x229, 0x230, 0x234, 0x23c, 0x6d7

Function 7:
Public function signature: 0xa6f9dae1
Entry block: 0x258
Exit block: 0x102
Body: 0x102, 0x258, 0x25f, 0x263, 0x6e6, 0x6fd, 0x701, 0x72a, 0x72b

Function 8:
Public function signature: 0xe5994905
Entry block: 0x279
Exit block: 0x123
Body: 0x123, 0x279, 0x280, 0x284, 0x72e, 0x748, 0x74c, 0x7b4, 0x7b8, 0x7c5, 0x7c9, 0x7d5, 0x7d6

Function 9:
Public function signature: 0xf5537ede
Entry block: 0x2bb
Exit block: 0x123
Body: 0x123, 0x2bb, 0x2c2, 0x2c6, 0x569, 0x576, 0x57a, 0x586, 0x587, 0x7df, 0x7f9, 0x7fd, 0x858

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x102
Body: 0x88, 0x89, 0xb9, 0xbd, 0x102

