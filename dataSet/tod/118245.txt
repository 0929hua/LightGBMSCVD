Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x104]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x104
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x104
0xa: JUMPI 0x104 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x115]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2f58015
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x115
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2f58015
0x39: V12 = EQ V10 0x2f58015
0x3a: V13 = 0x115
0x3d: JUMPI 0x115 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x127]
---
0x3e DUP1
0x3f PUSH4 0x6fdde03
0x44 EQ
0x45 PUSH2 0x127
0x48 JUMPI
---
0x3f: V14 = 0x6fdde03
0x44: V15 = EQ 0x6fdde03 V10
0x45: V16 = 0x127
0x48: JUMPI 0x127 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1b7]
---
0x49 DUP1
0x4a PUSH4 0x27e235e3
0x4f EQ
0x50 PUSH2 0x1b7
0x53 JUMPI
---
0x4a: V17 = 0x27e235e3
0x4f: V18 = EQ 0x27e235e3 V10
0x50: V19 = 0x1b7
0x53: JUMPI 0x1b7 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1e5]
---
0x54 DUP1
0x55 PUSH4 0x313ce567
0x5a EQ
0x5b PUSH2 0x1e5
0x5e JUMPI
---
0x55: V20 = 0x313ce567
0x5a: V21 = EQ 0x313ce567 V10
0x5b: V22 = 0x1e5
0x5e: JUMPI 0x1e5 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x20b]
---
0x5f DUP1
0x60 PUSH4 0x3ccfd60b
0x65 EQ
0x66 PUSH2 0x20b
0x69 JUMPI
---
0x60: V23 = 0x3ccfd60b
0x65: V24 = EQ 0x3ccfd60b V10
0x66: V25 = 0x20b
0x69: JUMPI 0x20b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x21d]
---
0x6a DUP1
0x6b PUSH4 0x434f5f27
0x70 EQ
0x71 PUSH2 0x21d
0x74 JUMPI
---
0x6b: V26 = 0x434f5f27
0x70: V27 = EQ 0x434f5f27 V10
0x71: V28 = 0x21d
0x74: JUMPI 0x21d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x24d]
---
0x75 DUP1
0x76 PUSH4 0x5259347d
0x7b EQ
0x7c PUSH2 0x24d
0x7f JUMPI
---
0x76: V29 = 0x5259347d
0x7b: V30 = EQ 0x5259347d V10
0x7c: V31 = 0x24d
0x7f: JUMPI 0x24d V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x257]
---
0x80 DUP1
0x81 PUSH4 0x62f5ed61
0x86 EQ
0x87 PUSH2 0x257
0x8a JUMPI
---
0x81: V32 = 0x62f5ed61
0x86: V33 = EQ 0x62f5ed61 V10
0x87: V34 = 0x257
0x8a: JUMPI 0x257 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x261]
---
0x8b DUP1
0x8c PUSH4 0x6360fc3f
0x91 EQ
0x92 PUSH2 0x261
0x95 JUMPI
---
0x8c: V35 = 0x6360fc3f
0x91: V36 = EQ 0x6360fc3f V10
0x92: V37 = 0x261
0x95: JUMPI 0x261 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x285]
---
0x96 DUP1
0x97 PUSH4 0x70144f8f
0x9c EQ
0x9d PUSH2 0x285
0xa0 JUMPI
---
0x97: V38 = 0x70144f8f
0x9c: V39 = EQ 0x70144f8f V10
0x9d: V40 = 0x285
0xa0: JUMPI 0x285 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x297]
---
0xa1 DUP1
0xa2 PUSH4 0x70a08231
0xa7 EQ
0xa8 PUSH2 0x297
0xab JUMPI
---
0xa2: V41 = 0x70a08231
0xa7: V42 = EQ 0x70a08231 V10
0xa8: V43 = 0x297
0xab: JUMPI 0x297 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x2c5]
---
0xac DUP1
0xad PUSH4 0x943dfef1
0xb2 EQ
0xb3 PUSH2 0x2c5
0xb6 JUMPI
---
0xad: V44 = 0x943dfef1
0xb2: V45 = EQ 0x943dfef1 V10
0xb3: V46 = 0x2c5
0xb6: JUMPI 0x2c5 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x2e7]
---
0xb7 DUP1
0xb8 PUSH4 0x95d89b41
0xbd EQ
0xbe PUSH2 0x2e7
0xc1 JUMPI
---
0xb8: V47 = 0x95d89b41
0xbd: V48 = EQ 0x95d89b41 V10
0xbe: V49 = 0x2e7
0xc1: JUMPI 0x2e7 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x377]
---
0xc2 DUP1
0xc3 PUSH4 0xa089feea
0xc8 EQ
0xc9 PUSH2 0x377
0xcc JUMPI
---
0xc3: V50 = 0xa089feea
0xc8: V51 = EQ 0xa089feea V10
0xc9: V52 = 0x377
0xcc: JUMPI 0x377 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x39b]
---
0xcd DUP1
0xce PUSH4 0xa0ef91df
0xd3 EQ
0xd4 PUSH2 0x39b
0xd7 JUMPI
---
0xce: V53 = 0xa0ef91df
0xd3: V54 = EQ 0xa0ef91df V10
0xd4: V55 = 0x39b
0xd7: JUMPI 0x39b V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x3ad]
---
0xd8 DUP1
0xd9 PUSH4 0xa9059cbb
0xde EQ
0xdf PUSH2 0x3ad
0xe2 JUMPI
---
0xd9: V56 = 0xa9059cbb
0xde: V57 = EQ 0xa9059cbb V10
0xdf: V58 = 0x3ad
0xe2: JUMPI 0x3ad V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x3ce]
---
0xe3 DUP1
0xe4 PUSH4 0xc3dac9a1
0xe9 EQ
0xea PUSH2 0x3ce
0xed JUMPI
---
0xe4: V59 = 0xc3dac9a1
0xe9: V60 = EQ 0xc3dac9a1 V10
0xea: V61 = 0x3ce
0xed: JUMPI 0x3ce V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x3f0]
---
0xee DUP1
0xef PUSH4 0xcbf0b0c0
0xf4 EQ
0xf5 PUSH2 0x3f0
0xf8 JUMPI
---
0xef: V62 = 0xcbf0b0c0
0xf4: V63 = EQ 0xcbf0b0c0 V10
0xf5: V64 = 0x3f0
0xf8: JUMPI 0x3f0 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x40e]
---
0xf9 DUP1
0xfa PUSH4 0xfc0c546a
0xff EQ
0x100 PUSH2 0x40e
0x103 JUMPI
---
0xfa: V65 = 0xfc0c546a
0xff: V66 = EQ 0xfc0c546a V10
0x100: V67 = 0x40e
0x103: JUMPI 0x40e V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x107]
---
Predecessors: [0x0, 0xf9]
Successors: [0x108]
---
0x104 JUMPDEST
0x105 PUSH2 0x113
---
0x104: JUMPDEST 
0x105: V68 = 0x113
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V10, 0x113]

================================

Block 0x108
[0x108:0x10f]
---
Predecessors: [0x104]
Successors: [0x43a]
---
0x108 JUMPDEST
0x109 PUSH2 0x110
0x10c PUSH2 0x43a
0x10f JUMP
---
0x108: JUMPDEST 
0x109: V69 = 0x110
0x10c: V70 = 0x43a
0x10f: JUMP 0x43a
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: [0x110]
Exit stack: [V10, 0x113, 0x110]

================================

Block 0x110
[0x110:0x110]
---
Predecessors: [0x111, 0x58a, 0x5d1, 0x5df, 0x685, 0xa96]
Successors: [0x111]
---
0x110 JUMPDEST
---
0x110: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: [0x110]
Successors: [0x110, 0x113]
---
0x111 JUMPDEST
0x112 JUMP
---
0x111: JUMPDEST 
0x112: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x113
[0x113:0x114]
---
Predecessors: [0x111, 0x5d1, 0x933, 0x994, 0x9c9, 0xb82]
Successors: []
---
0x113 JUMPDEST
0x114 STOP
---
0x113: JUMPDEST 
0x114: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x115
[0x115:0x11b]
---
Predecessors: [0xb]
Successors: [0x11c, 0x11d]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 ISZERO
0x118 PUSH2 0x11d
0x11b JUMPI
---
0x115: JUMPDEST 
0x116: V71 = CALLVALUE
0x117: V72 = ISZERO V71
0x118: V73 = 0x11d
0x11b: JUMPI 0x11d V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x11c]
---
Predecessors: [0x115]
Successors: []
---
0x11c INVALID
---
0x11c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11d
[0x11d:0x124]
---
Predecessors: [0x115]
Successors: [0x5d3]
---
0x11d JUMPDEST
0x11e PUSH2 0x113
0x121 PUSH2 0x5d3
0x124 JUMP
---
0x11d: JUMPDEST 
0x11e: V74 = 0x113
0x121: V75 = 0x5d3
0x124: JUMP 0x5d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V10, 0x113]

================================

Block 0x125
[0x125:0x126]
---
Predecessors: []
Successors: []
---
0x125 JUMPDEST
0x126 STOP
---
0x125: JUMPDEST 
0x126: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x3e]
Successors: [0x12e, 0x12f]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x12f
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V76 = CALLVALUE
0x129: V77 = ISZERO V76
0x12a: V78 = 0x12f
0x12d: JUMPI 0x12f V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12e
[0x12e:0x12e]
---
Predecessors: [0x127]
Successors: []
---
0x12e INVALID
---
0x12e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0x127]
Successors: [0x6ba]
---
0x12f JUMPDEST
0x130 PUSH2 0x137
0x133 PUSH2 0x6ba
0x136 JUMP
---
0x12f: JUMPDEST 
0x130: V79 = 0x137
0x133: V80 = 0x6ba
0x136: JUMP 0x6ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V10, 0x137]

================================

Block 0x137
[0x137:0x15c]
---
Predecessors: [0x740]
Successors: [0x15d, 0x17d]
---
0x137 JUMPDEST
0x138 PUSH1 0x40
0x13a DUP1
0x13b MLOAD
0x13c PUSH1 0x20
0x13e DUP1
0x13f DUP3
0x140 MSTORE
0x141 DUP4
0x142 MLOAD
0x143 DUP2
0x144 DUP4
0x145 ADD
0x146 MSTORE
0x147 DUP4
0x148 MLOAD
0x149 SWAP2
0x14a SWAP3
0x14b DUP4
0x14c SWAP3
0x14d SWAP1
0x14e DUP4
0x14f ADD
0x150 SWAP2
0x151 DUP6
0x152 ADD
0x153 SWAP1
0x154 DUP1
0x155 DUP4
0x156 DUP4
0x157 DUP3
0x158 ISZERO
0x159 PUSH2 0x17d
0x15c JUMPI
---
0x137: JUMPDEST 
0x138: V81 = 0x40
0x13b: V82 = M[0x40]
0x13c: V83 = 0x20
0x140: M[V82] = 0x20
0x142: V84 = M[S0]
0x145: V85 = ADD V82 0x20
0x146: M[V85] = V84
0x148: V86 = M[S0]
0x14f: V87 = ADD V82 0x40
0x152: V88 = ADD S0 0x20
0x158: V89 = ISZERO V86
0x159: V90 = 0x17d
0x15c: JUMPI 0x17d V89
---
Entry stack: [V10, 0x137, S0]
Stack pops: 1
Stack additions: [S0, V82, V82, V87, V88, V86, V86, V87, V88]
Exit stack: [V10, 0x137, S0, V82, V82, V87, V88, V86, V86, V87, V88]

================================

Block 0x15d
[0x15d:0x16a]
---
Predecessors: [0x137, 0x16b, 0x32b]
Successors: [0x16b, 0x17d]
---
0x15d JUMPDEST
0x15e DUP1
0x15f MLOAD
0x160 DUP3
0x161 MSTORE
0x162 PUSH1 0x20
0x164 DUP4
0x165 GT
0x166 ISZERO
0x167 PUSH2 0x17d
0x16a JUMPI
---
0x15d: JUMPDEST 
0x15f: V91 = M[S0]
0x161: M[S1] = V91
0x162: V92 = 0x20
0x165: V93 = GT S2 0x20
0x166: V94 = ISZERO V93
0x167: V95 = 0x17d
0x16a: JUMPI 0x17d V94
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x16b
[0x16b:0x17c]
---
Predecessors: [0x15d]
Successors: [0x15d]
---
0x16b PUSH1 0x1f
0x16d NOT
0x16e SWAP1
0x16f SWAP3
0x170 ADD
0x171 SWAP2
0x172 PUSH1 0x20
0x174 SWAP2
0x175 DUP3
0x176 ADD
0x177 SWAP2
0x178 ADD
0x179 PUSH2 0x15d
0x17c JUMP
---
0x16b: V96 = 0x1f
0x16d: V97 = NOT 0x1f
0x170: V98 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x172: V99 = 0x20
0x176: V100 = ADD 0x20 S1
0x178: V101 = ADD 0x20 S0
0x179: V102 = 0x15d
0x17c: JUMP 0x15d
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V98, V100, V101]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, V98, V100, V101]

================================

Block 0x17d
[0x17d:0x18f]
---
Predecessors: [0x137, 0x15d, 0x2f7, 0x31d]
Successors: [0x190, 0x1a9]
---
0x17d JUMPDEST
0x17e POP
0x17f POP
0x180 POP
0x181 SWAP1
0x182 POP
0x183 SWAP1
0x184 DUP2
0x185 ADD
0x186 SWAP1
0x187 PUSH1 0x1f
0x189 AND
0x18a DUP1
0x18b ISZERO
0x18c PUSH2 0x1a9
0x18f JUMPI
---
0x17d: JUMPDEST 
0x185: V103 = ADD S3 S5
0x187: V104 = 0x1f
0x189: V105 = AND 0x1f S3
0x18b: V106 = ISZERO V105
0x18c: V107 = 0x1a9
0x18f: JUMPI 0x1a9 V106
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V103, V105]
Exit stack: [V10, S9, S8, S7, S6, V103, V105]

================================

Block 0x190
[0x190:0x1a8]
---
Predecessors: [0x17d]
Successors: [0x1a9]
---
0x190 DUP1
0x191 DUP3
0x192 SUB
0x193 DUP1
0x194 MLOAD
0x195 PUSH1 0x1
0x197 DUP4
0x198 PUSH1 0x20
0x19a SUB
0x19b PUSH2 0x100
0x19e EXP
0x19f SUB
0x1a0 NOT
0x1a1 AND
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 SWAP2
0x1a8 POP
---
0x192: V108 = SUB V103 V105
0x194: V109 = M[V108]
0x195: V110 = 0x1
0x198: V111 = 0x20
0x19a: V112 = SUB 0x20 V105
0x19b: V113 = 0x100
0x19e: V114 = EXP 0x100 V112
0x19f: V115 = SUB V114 0x1
0x1a0: V116 = NOT V115
0x1a1: V117 = AND V116 V109
0x1a3: M[V108] = V117
0x1a4: V118 = 0x20
0x1a6: V119 = ADD 0x20 V108
---
Entry stack: [V10, S5, S4, S3, S2, V103, V105]
Stack pops: 2
Stack additions: [V119, S0]
Exit stack: [V10, S5, S4, S3, S2, V119, V105]

================================

Block 0x1a9
[0x1a9:0x1b6]
---
Predecessors: [0x17d, 0x190, 0x33d]
Successors: []
---
0x1a9 JUMPDEST
0x1aa POP
0x1ab SWAP3
0x1ac POP
0x1ad POP
0x1ae POP
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 SWAP2
0x1b4 SUB
0x1b5 SWAP1
0x1b6 RETURN
---
0x1a9: JUMPDEST 
0x1af: V120 = 0x40
0x1b1: V121 = M[0x40]
0x1b4: V122 = SUB S1 V121
0x1b6: RETURN V121 V122
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S5]

================================

Block 0x1b7
[0x1b7:0x1bd]
---
Predecessors: [0x49]
Successors: [0x1be, 0x1bf]
---
0x1b7 JUMPDEST
0x1b8 CALLVALUE
0x1b9 ISZERO
0x1ba PUSH2 0x1bf
0x1bd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V123 = CALLVALUE
0x1b9: V124 = ISZERO V123
0x1ba: V125 = 0x1bf
0x1bd: JUMPI 0x1bf V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1be
[0x1be:0x1be]
---
Predecessors: [0x1b7]
Successors: []
---
0x1be INVALID
---
0x1be: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bf
[0x1bf:0x1d2]
---
Predecessors: [0x1b7]
Successors: [0x748]
---
0x1bf JUMPDEST
0x1c0 PUSH2 0x1d3
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb PUSH1 0x4
0x1cd CALLDATALOAD
0x1ce AND
0x1cf PUSH2 0x748
0x1d2 JUMP
---
0x1bf: JUMPDEST 
0x1c0: V126 = 0x1d3
0x1c3: V127 = 0x1
0x1c5: V128 = 0xa0
0x1c7: V129 = 0x2
0x1c9: V130 = EXP 0x2 0xa0
0x1ca: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V132 = 0x4
0x1cd: V133 = CALLDATALOAD 0x4
0x1ce: V134 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x1cf: V135 = 0x748
0x1d2: JUMP 0x748
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V134]
Exit stack: [V10, 0x1d3, V134]

================================

Block 0x1d3
[0x1d3:0x1e4]
---
Predecessors: [0x748, 0x9cb, 0x9dd, 0xb86]
Successors: []
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x40
0x1d6 DUP1
0x1d7 MLOAD
0x1d8 SWAP2
0x1d9 DUP3
0x1da MSTORE
0x1db MLOAD
0x1dc SWAP1
0x1dd DUP2
0x1de SWAP1
0x1df SUB
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 SWAP1
0x1e4 RETURN
---
0x1d3: JUMPDEST 
0x1d4: V136 = 0x40
0x1d7: V137 = M[0x40]
0x1da: M[V137] = S0
0x1db: V138 = M[0x40]
0x1df: V139 = SUB V137 V138
0x1e0: V140 = 0x20
0x1e2: V141 = ADD 0x20 V139
0x1e4: RETURN V138 V141
---
Entry stack: [V10, 0x1d3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d3]

================================

Block 0x1e5
[0x1e5:0x1eb]
---
Predecessors: [0x54]
Successors: [0x1ec, 0x1ed]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 ISZERO
0x1e8 PUSH2 0x1ed
0x1eb JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V142 = CALLVALUE
0x1e7: V143 = ISZERO V142
0x1e8: V144 = 0x1ed
0x1eb: JUMPI 0x1ed V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ec
[0x1ec:0x1ec]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ec INVALID
---
0x1ec: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ed
[0x1ed:0x1f4]
---
Predecessors: [0x1e5]
Successors: [0x75a]
---
0x1ed JUMPDEST
0x1ee PUSH2 0x1f5
0x1f1 PUSH2 0x75a
0x1f4 JUMP
---
0x1ed: JUMPDEST 
0x1ee: V145 = 0x1f5
0x1f1: V146 = 0x75a
0x1f4: JUMP 0x75a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f5]
Exit stack: [V10, 0x1f5]

================================

Block 0x1f5
[0x1f5:0x20a]
---
Predecessors: [0x75a]
Successors: []
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x40
0x1f8 DUP1
0x1f9 MLOAD
0x1fa PUSH1 0xff
0x1fc SWAP1
0x1fd SWAP3
0x1fe AND
0x1ff DUP3
0x200 MSTORE
0x201 MLOAD
0x202 SWAP1
0x203 DUP2
0x204 SWAP1
0x205 SUB
0x206 PUSH1 0x20
0x208 ADD
0x209 SWAP1
0x20a RETURN
---
0x1f5: JUMPDEST 
0x1f6: V147 = 0x40
0x1f9: V148 = M[0x40]
0x1fa: V149 = 0xff
0x1fe: V150 = AND V625 0xff
0x200: M[V148] = V150
0x201: V151 = M[0x40]
0x205: V152 = SUB V148 V151
0x206: V153 = 0x20
0x208: V154 = ADD 0x20 V152
0x20a: RETURN V151 V154
---
Entry stack: [V10, 0x1f5, V625]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1f5]

================================

Block 0x20b
[0x20b:0x211]
---
Predecessors: [0x5f]
Successors: [0x212, 0x213]
---
0x20b JUMPDEST
0x20c CALLVALUE
0x20d ISZERO
0x20e PUSH2 0x213
0x211 JUMPI
---
0x20b: JUMPDEST 
0x20c: V155 = CALLVALUE
0x20d: V156 = ISZERO V155
0x20e: V157 = 0x213
0x211: JUMPI 0x213 V156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x212
[0x212:0x212]
---
Predecessors: [0x20b]
Successors: []
---
0x212 INVALID
---
0x212: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x213
[0x213:0x21a]
---
Predecessors: [0x20b]
Successors: [0x763]
---
0x213 JUMPDEST
0x214 PUSH2 0x113
0x217 PUSH2 0x763
0x21a JUMP
---
0x213: JUMPDEST 
0x214: V158 = 0x113
0x217: V159 = 0x763
0x21a: JUMP 0x763
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V10, 0x113]

================================

Block 0x21b
[0x21b:0x21c]
---
Predecessors: []
Successors: []
---
0x21b JUMPDEST
0x21c STOP
---
0x21b: JUMPDEST 
0x21c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21d
[0x21d:0x223]
---
Predecessors: [0x6a]
Successors: [0x224, 0x225]
---
0x21d JUMPDEST
0x21e CALLVALUE
0x21f ISZERO
0x220 PUSH2 0x225
0x223 JUMPI
---
0x21d: JUMPDEST 
0x21e: V160 = CALLVALUE
0x21f: V161 = ISZERO V160
0x220: V162 = 0x225
0x223: JUMPI 0x225 V161
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x224
[0x224:0x224]
---
Predecessors: [0x21d]
Successors: []
---
0x224 INVALID
---
0x224: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x225
[0x225:0x238]
---
Predecessors: [0x21d]
Successors: [0x938]
---
0x225 JUMPDEST
0x226 PUSH2 0x239
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 PUSH1 0x4
0x233 CALLDATALOAD
0x234 AND
0x235 PUSH2 0x938
0x238 JUMP
---
0x225: JUMPDEST 
0x226: V163 = 0x239
0x229: V164 = 0x1
0x22b: V165 = 0xa0
0x22d: V166 = 0x2
0x22f: V167 = EXP 0x2 0xa0
0x230: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V169 = 0x4
0x233: V170 = CALLDATALOAD 0x4
0x234: V171 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x235: V172 = 0x938
0x238: JUMP 0x938
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x239, V171]
Exit stack: [V10, 0x239, V171]

================================

Block 0x239
[0x239:0x24c]
---
Predecessors: [0x938, 0x996, 0xa71]
Successors: []
---
0x239 JUMPDEST
0x23a PUSH1 0x40
0x23c DUP1
0x23d MLOAD
0x23e SWAP2
0x23f ISZERO
0x240 ISZERO
0x241 DUP3
0x242 MSTORE
0x243 MLOAD
0x244 SWAP1
0x245 DUP2
0x246 SWAP1
0x247 SUB
0x248 PUSH1 0x20
0x24a ADD
0x24b SWAP1
0x24c RETURN
---
0x239: JUMPDEST 
0x23a: V173 = 0x40
0x23d: V174 = M[0x40]
0x23f: V175 = ISZERO S0
0x240: V176 = ISZERO V175
0x242: M[V174] = V176
0x243: V177 = M[0x40]
0x247: V178 = SUB V174 V177
0x248: V179 = 0x20
0x24a: V180 = ADD 0x20 V178
0x24c: RETURN V177 V180
---
Entry stack: [V10, 0x239, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x239]

================================

Block 0x24d
[0x24d:0x254]
---
Predecessors: [0x75]
Successors: [0x43a]
---
0x24d JUMPDEST
0x24e PUSH2 0x113
0x251 PUSH2 0x43a
0x254 JUMP
---
0x24d: JUMPDEST 
0x24e: V181 = 0x113
0x251: V182 = 0x43a
0x254: JUMP 0x43a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V10, 0x113]

================================

Block 0x255
[0x255:0x256]
---
Predecessors: []
Successors: []
---
0x255 JUMPDEST
0x256 STOP
---
0x255: JUMPDEST 
0x256: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x257
[0x257:0x25e]
---
Predecessors: [0x80]
Successors: [0x94d]
---
0x257 JUMPDEST
0x258 PUSH2 0x113
0x25b PUSH2 0x94d
0x25e JUMP
---
0x257: JUMPDEST 
0x258: V183 = 0x113
0x25b: V184 = 0x94d
0x25e: JUMP 0x94d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V10, 0x113]

================================

Block 0x25f
[0x25f:0x260]
---
Predecessors: []
Successors: []
---
0x25f JUMPDEST
0x260 STOP
---
0x25f: JUMPDEST 
0x260: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0x8b]
Successors: [0x268, 0x269]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 ISZERO
0x264 PUSH2 0x269
0x267 JUMPI
---
0x261: JUMPDEST 
0x262: V185 = CALLVALUE
0x263: V186 = ISZERO V185
0x264: V187 = 0x269
0x267: JUMPI 0x269 V186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x268
[0x268:0x268]
---
Predecessors: [0x261]
Successors: []
---
0x268 INVALID
---
0x268: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x261]
Successors: [0x996]
---
0x269 JUMPDEST
0x26a PUSH2 0x239
0x26d PUSH2 0x996
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V188 = 0x239
0x26d: V189 = 0x996
0x270: JUMP 0x996
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x239]
Exit stack: [V10, 0x239]

================================

Block 0x271
[0x271:0x284]
---
Predecessors: []
Successors: []
---
0x271 JUMPDEST
0x272 PUSH1 0x40
0x274 DUP1
0x275 MLOAD
0x276 SWAP2
0x277 ISZERO
0x278 ISZERO
0x279 DUP3
0x27a MSTORE
0x27b MLOAD
0x27c SWAP1
0x27d DUP2
0x27e SWAP1
0x27f SUB
0x280 PUSH1 0x20
0x282 ADD
0x283 SWAP1
0x284 RETURN
---
0x271: JUMPDEST 
0x272: V190 = 0x40
0x275: V191 = M[0x40]
0x277: V192 = ISZERO S0
0x278: V193 = ISZERO V192
0x27a: M[V191] = V193
0x27b: V194 = M[0x40]
0x27f: V195 = SUB V191 V194
0x280: V196 = 0x20
0x282: V197 = ADD 0x20 V195
0x284: RETURN V194 V197
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0x96]
Successors: [0x28c, 0x28d]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x28d
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V198 = CALLVALUE
0x287: V199 = ISZERO V198
0x288: V200 = 0x28d
0x28b: JUMPI 0x28d V199
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28c
[0x28c:0x28c]
---
Predecessors: [0x285]
Successors: []
---
0x28c INVALID
---
0x28c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28d
[0x28d:0x294]
---
Predecessors: [0x285]
Successors: [0x99f]
---
0x28d JUMPDEST
0x28e PUSH2 0x113
0x291 PUSH2 0x99f
0x294 JUMP
---
0x28d: JUMPDEST 
0x28e: V201 = 0x113
0x291: V202 = 0x99f
0x294: JUMP 0x99f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V10, 0x113]

================================

Block 0x295
[0x295:0x296]
---
Predecessors: []
Successors: []
---
0x295 JUMPDEST
0x296 STOP
---
0x295: JUMPDEST 
0x296: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x297
[0x297:0x29d]
---
Predecessors: [0xa1]
Successors: [0x29e, 0x29f]
---
0x297 JUMPDEST
0x298 CALLVALUE
0x299 ISZERO
0x29a PUSH2 0x29f
0x29d JUMPI
---
0x297: JUMPDEST 
0x298: V203 = CALLVALUE
0x299: V204 = ISZERO V203
0x29a: V205 = 0x29f
0x29d: JUMPI 0x29f V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29e
[0x29e:0x29e]
---
Predecessors: [0x297]
Successors: []
---
0x29e INVALID
---
0x29e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29f
[0x29f:0x2b2]
---
Predecessors: [0x297]
Successors: [0x9cb]
---
0x29f JUMPDEST
0x2a0 PUSH2 0x1d3
0x2a3 PUSH1 0x1
0x2a5 PUSH1 0xa0
0x2a7 PUSH1 0x2
0x2a9 EXP
0x2aa SUB
0x2ab PUSH1 0x4
0x2ad CALLDATALOAD
0x2ae AND
0x2af PUSH2 0x9cb
0x2b2 JUMP
---
0x29f: JUMPDEST 
0x2a0: V206 = 0x1d3
0x2a3: V207 = 0x1
0x2a5: V208 = 0xa0
0x2a7: V209 = 0x2
0x2a9: V210 = EXP 0x2 0xa0
0x2aa: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ab: V212 = 0x4
0x2ad: V213 = CALLDATALOAD 0x4
0x2ae: V214 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V215 = 0x9cb
0x2b2: JUMP 0x9cb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V214]
Exit stack: [V10, 0x1d3, V214]

================================

Block 0x2b3
[0x2b3:0x2c4]
---
Predecessors: []
Successors: []
---
0x2b3 JUMPDEST
0x2b4 PUSH1 0x40
0x2b6 DUP1
0x2b7 MLOAD
0x2b8 SWAP2
0x2b9 DUP3
0x2ba MSTORE
0x2bb MLOAD
0x2bc SWAP1
0x2bd DUP2
0x2be SWAP1
0x2bf SUB
0x2c0 PUSH1 0x20
0x2c2 ADD
0x2c3 SWAP1
0x2c4 RETURN
---
0x2b3: JUMPDEST 
0x2b4: V216 = 0x40
0x2b7: V217 = M[0x40]
0x2ba: M[V217] = S0
0x2bb: V218 = M[0x40]
0x2bf: V219 = SUB V217 V218
0x2c0: V220 = 0x20
0x2c2: V221 = ADD 0x20 V219
0x2c4: RETURN V218 V221
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c5
[0x2c5:0x2cb]
---
Predecessors: [0xac]
Successors: [0x2cc, 0x2cd]
---
0x2c5 JUMPDEST
0x2c6 CALLVALUE
0x2c7 ISZERO
0x2c8 PUSH2 0x2cd
0x2cb JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V222 = CALLVALUE
0x2c7: V223 = ISZERO V222
0x2c8: V224 = 0x2cd
0x2cb: JUMPI 0x2cd V223
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cc
[0x2cc:0x2cc]
---
Predecessors: [0x2c5]
Successors: []
---
0x2cc INVALID
---
0x2cc: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0x2c5]
Successors: [0x9dd]
---
0x2cd JUMPDEST
0x2ce PUSH2 0x1d3
0x2d1 PUSH2 0x9dd
0x2d4 JUMP
---
0x2cd: JUMPDEST 
0x2ce: V225 = 0x1d3
0x2d1: V226 = 0x9dd
0x2d4: JUMP 0x9dd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3]
Exit stack: [V10, 0x1d3]

================================

Block 0x2d5
[0x2d5:0x2e6]
---
Predecessors: []
Successors: []
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x40
0x2d8 DUP1
0x2d9 MLOAD
0x2da SWAP2
0x2db DUP3
0x2dc MSTORE
0x2dd MLOAD
0x2de SWAP1
0x2df DUP2
0x2e0 SWAP1
0x2e1 SUB
0x2e2 PUSH1 0x20
0x2e4 ADD
0x2e5 SWAP1
0x2e6 RETURN
---
0x2d5: JUMPDEST 
0x2d6: V227 = 0x40
0x2d9: V228 = M[0x40]
0x2dc: M[V228] = S0
0x2dd: V229 = M[0x40]
0x2e1: V230 = SUB V228 V229
0x2e2: V231 = 0x20
0x2e4: V232 = ADD 0x20 V230
0x2e6: RETURN V229 V232
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0xb7]
Successors: [0x2ee, 0x2ef]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 ISZERO
0x2ea PUSH2 0x2ef
0x2ed JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V233 = CALLVALUE
0x2e9: V234 = ISZERO V233
0x2ea: V235 = 0x2ef
0x2ed: JUMPI 0x2ef V234
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ee
[0x2ee:0x2ee]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ee INVALID
---
0x2ee: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ef
[0x2ef:0x2f6]
---
Predecessors: [0x2e7]
Successors: [0x9e3]
---
0x2ef JUMPDEST
0x2f0 PUSH2 0x137
0x2f3 PUSH2 0x9e3
0x2f6 JUMP
---
0x2ef: JUMPDEST 
0x2f0: V236 = 0x137
0x2f3: V237 = 0x9e3
0x2f6: JUMP 0x9e3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V10, 0x137]

================================

Block 0x2f7
[0x2f7:0x31c]
---
Predecessors: []
Successors: [0x17d, 0x31d]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x40
0x2fa DUP1
0x2fb MLOAD
0x2fc PUSH1 0x20
0x2fe DUP1
0x2ff DUP3
0x300 MSTORE
0x301 DUP4
0x302 MLOAD
0x303 DUP2
0x304 DUP4
0x305 ADD
0x306 MSTORE
0x307 DUP4
0x308 MLOAD
0x309 SWAP2
0x30a SWAP3
0x30b DUP4
0x30c SWAP3
0x30d SWAP1
0x30e DUP4
0x30f ADD
0x310 SWAP2
0x311 DUP6
0x312 ADD
0x313 SWAP1
0x314 DUP1
0x315 DUP4
0x316 DUP4
0x317 DUP3
0x318 ISZERO
0x319 PUSH2 0x17d
0x31c JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V238 = 0x40
0x2fb: V239 = M[0x40]
0x2fc: V240 = 0x20
0x300: M[V239] = 0x20
0x302: V241 = M[S0]
0x305: V242 = ADD V239 0x20
0x306: M[V242] = V241
0x308: V243 = M[S0]
0x30f: V244 = ADD V239 0x40
0x312: V245 = ADD S0 0x20
0x318: V246 = ISZERO V243
0x319: V247 = 0x17d
0x31c: JUMPI 0x17d V246
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V239, V239, V244, V245, V243, V243, V244, V245]
Exit stack: [S0, V239, V239, V244, V245, V243, V243, V244, V245]

================================

Block 0x31d
[0x31d:0x32a]
---
Predecessors: [0x2f7]
Successors: [0x17d, 0x32b]
---
0x31d JUMPDEST
0x31e DUP1
0x31f MLOAD
0x320 DUP3
0x321 MSTORE
0x322 PUSH1 0x20
0x324 DUP4
0x325 GT
0x326 ISZERO
0x327 PUSH2 0x17d
0x32a JUMPI
---
0x31d: JUMPDEST 
0x31f: V248 = M[V245]
0x321: M[V244] = V248
0x322: V249 = 0x20
0x325: V250 = GT V243 0x20
0x326: V251 = ISZERO V250
0x327: V252 = 0x17d
0x32a: JUMPI 0x17d V251
---
Entry stack: [S8, V239, V239, V244, V245, V243, V243, V244, V245]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V239, V239, V244, V245, V243, V243, V244, V245]

================================

Block 0x32b
[0x32b:0x33c]
---
Predecessors: [0x31d]
Successors: [0x15d]
---
0x32b PUSH1 0x1f
0x32d NOT
0x32e SWAP1
0x32f SWAP3
0x330 ADD
0x331 SWAP2
0x332 PUSH1 0x20
0x334 SWAP2
0x335 DUP3
0x336 ADD
0x337 SWAP2
0x338 ADD
0x339 PUSH2 0x15d
0x33c JUMP
---
0x32b: V253 = 0x1f
0x32d: V254 = NOT 0x1f
0x330: V255 = ADD V243 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x332: V256 = 0x20
0x336: V257 = ADD 0x20 V244
0x338: V258 = ADD 0x20 V245
0x339: V259 = 0x15d
0x33c: JUMP 0x15d
---
Entry stack: [S8, V239, V239, V244, V245, V243, V243, V244, V245]
Stack pops: 3
Stack additions: [V255, V257, V258]
Exit stack: [S8, V239, V239, V244, V245, V243, V255, V257, V258]

================================

Block 0x33d
[0x33d:0x34f]
---
Predecessors: []
Successors: [0x1a9, 0x350]
---
0x33d JUMPDEST
0x33e POP
0x33f POP
0x340 POP
0x341 SWAP1
0x342 POP
0x343 SWAP1
0x344 DUP2
0x345 ADD
0x346 SWAP1
0x347 PUSH1 0x1f
0x349 AND
0x34a DUP1
0x34b ISZERO
0x34c PUSH2 0x1a9
0x34f JUMPI
---
0x33d: JUMPDEST 
0x345: V260 = ADD S3 S5
0x347: V261 = 0x1f
0x349: V262 = AND 0x1f S3
0x34b: V263 = ISZERO V262
0x34c: V264 = 0x1a9
0x34f: JUMPI 0x1a9 V263
---
Entry stack: []
Stack pops: 6
Stack additions: [V260, V262]
Exit stack: [V260, V262]

================================

Block 0x350
[0x350:0x368]
---
Predecessors: [0x33d]
Successors: [0x369]
---
0x350 DUP1
0x351 DUP3
0x352 SUB
0x353 DUP1
0x354 MLOAD
0x355 PUSH1 0x1
0x357 DUP4
0x358 PUSH1 0x20
0x35a SUB
0x35b PUSH2 0x100
0x35e EXP
0x35f SUB
0x360 NOT
0x361 AND
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x20
0x366 ADD
0x367 SWAP2
0x368 POP
---
0x352: V265 = SUB V260 V262
0x354: V266 = M[V265]
0x355: V267 = 0x1
0x358: V268 = 0x20
0x35a: V269 = SUB 0x20 V262
0x35b: V270 = 0x100
0x35e: V271 = EXP 0x100 V269
0x35f: V272 = SUB V271 0x1
0x360: V273 = NOT V272
0x361: V274 = AND V273 V266
0x363: M[V265] = V274
0x364: V275 = 0x20
0x366: V276 = ADD 0x20 V265
---
Entry stack: [V260, V262]
Stack pops: 2
Stack additions: [V276, S0]
Exit stack: [V276, V262]

================================

Block 0x369
[0x369:0x376]
---
Predecessors: [0x350]
Successors: []
---
0x369 JUMPDEST
0x36a POP
0x36b SWAP3
0x36c POP
0x36d POP
0x36e POP
0x36f PUSH1 0x40
0x371 MLOAD
0x372 DUP1
0x373 SWAP2
0x374 SUB
0x375 SWAP1
0x376 RETURN
---
0x369: JUMPDEST 
0x36f: V277 = 0x40
0x371: V278 = M[0x40]
0x374: V279 = SUB V276 V278
0x376: RETURN V278 V279
---
Entry stack: [V276, V262]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x377
[0x377:0x37d]
---
Predecessors: [0xc2]
Successors: [0x37e, 0x37f]
---
0x377 JUMPDEST
0x378 CALLVALUE
0x379 ISZERO
0x37a PUSH2 0x37f
0x37d JUMPI
---
0x377: JUMPDEST 
0x378: V280 = CALLVALUE
0x379: V281 = ISZERO V280
0x37a: V282 = 0x37f
0x37d: JUMPI 0x37f V281
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37e
[0x37e:0x37e]
---
Predecessors: [0x377]
Successors: []
---
0x37e INVALID
---
0x37e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37f
[0x37f:0x386]
---
Predecessors: [0x377]
Successors: [0xa71]
---
0x37f JUMPDEST
0x380 PUSH2 0x239
0x383 PUSH2 0xa71
0x386 JUMP
---
0x37f: JUMPDEST 
0x380: V283 = 0x239
0x383: V284 = 0xa71
0x386: JUMP 0xa71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x239]
Exit stack: [V10, 0x239]

================================

Block 0x387
[0x387:0x39a]
---
Predecessors: []
Successors: []
---
0x387 JUMPDEST
0x388 PUSH1 0x40
0x38a DUP1
0x38b MLOAD
0x38c SWAP2
0x38d ISZERO
0x38e ISZERO
0x38f DUP3
0x390 MSTORE
0x391 MLOAD
0x392 SWAP1
0x393 DUP2
0x394 SWAP1
0x395 SUB
0x396 PUSH1 0x20
0x398 ADD
0x399 SWAP1
0x39a RETURN
---
0x387: JUMPDEST 
0x388: V285 = 0x40
0x38b: V286 = M[0x40]
0x38d: V287 = ISZERO S0
0x38e: V288 = ISZERO V287
0x390: M[V286] = V288
0x391: V289 = M[0x40]
0x395: V290 = SUB V286 V289
0x396: V291 = 0x20
0x398: V292 = ADD 0x20 V290
0x39a: RETURN V289 V292
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x39b
[0x39b:0x3a1]
---
Predecessors: [0xcd]
Successors: [0x3a2, 0x3a3]
---
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0x3a3
0x3a1 JUMPI
---
0x39b: JUMPDEST 
0x39c: V293 = CALLVALUE
0x39d: V294 = ISZERO V293
0x39e: V295 = 0x3a3
0x3a1: JUMPI 0x3a3 V294
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a2
[0x3a2:0x3a2]
---
Predecessors: [0x39b]
Successors: []
---
0x3a2 INVALID
---
0x3a2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a3
[0x3a3:0x3aa]
---
Predecessors: [0x39b]
Successors: [0xa7a]
---
0x3a3 JUMPDEST
0x3a4 PUSH2 0x113
0x3a7 PUSH2 0xa7a
0x3aa JUMP
---
0x3a3: JUMPDEST 
0x3a4: V296 = 0x113
0x3a7: V297 = 0xa7a
0x3aa: JUMP 0xa7a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V10, 0x113]

================================

Block 0x3ab
[0x3ab:0x3ac]
---
Predecessors: []
Successors: []
---
0x3ab JUMPDEST
0x3ac STOP
---
0x3ab: JUMPDEST 
0x3ac: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ad
[0x3ad:0x3b3]
---
Predecessors: [0xd8]
Successors: [0x3b4, 0x3b5]
---
0x3ad JUMPDEST
0x3ae CALLVALUE
0x3af ISZERO
0x3b0 PUSH2 0x3b5
0x3b3 JUMPI
---
0x3ad: JUMPDEST 
0x3ae: V298 = CALLVALUE
0x3af: V299 = ISZERO V298
0x3b0: V300 = 0x3b5
0x3b3: JUMPI 0x3b5 V299
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b4
[0x3b4:0x3b4]
---
Predecessors: [0x3ad]
Successors: []
---
0x3b4 INVALID
---
0x3b4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b5
[0x3b5:0x3cb]
---
Predecessors: [0x3ad]
Successors: [0xacb]
---
0x3b5 JUMPDEST
0x3b6 PUSH2 0x113
0x3b9 PUSH1 0x1
0x3bb PUSH1 0xa0
0x3bd PUSH1 0x2
0x3bf EXP
0x3c0 SUB
0x3c1 PUSH1 0x4
0x3c3 CALLDATALOAD
0x3c4 AND
0x3c5 PUSH1 0x24
0x3c7 CALLDATALOAD
0x3c8 PUSH2 0xacb
0x3cb JUMP
---
0x3b5: JUMPDEST 
0x3b6: V301 = 0x113
0x3b9: V302 = 0x1
0x3bb: V303 = 0xa0
0x3bd: V304 = 0x2
0x3bf: V305 = EXP 0x2 0xa0
0x3c0: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c1: V307 = 0x4
0x3c3: V308 = CALLDATALOAD 0x4
0x3c4: V309 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x3c5: V310 = 0x24
0x3c7: V311 = CALLDATALOAD 0x24
0x3c8: V312 = 0xacb
0x3cb: JUMP 0xacb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113, V309, V311]
Exit stack: [V10, 0x113, V309, V311]

================================

Block 0x3cc
[0x3cc:0x3cd]
---
Predecessors: []
Successors: []
---
0x3cc JUMPDEST
0x3cd STOP
---
0x3cc: JUMPDEST 
0x3cd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ce
[0x3ce:0x3d4]
---
Predecessors: [0xe3]
Successors: [0x3d5, 0x3d6]
---
0x3ce JUMPDEST
0x3cf CALLVALUE
0x3d0 ISZERO
0x3d1 PUSH2 0x3d6
0x3d4 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V313 = CALLVALUE
0x3d0: V314 = ISZERO V313
0x3d1: V315 = 0x3d6
0x3d4: JUMPI 0x3d6 V314
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d5
[0x3d5:0x3d5]
---
Predecessors: [0x3ce]
Successors: []
---
0x3d5 INVALID
---
0x3d5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d6
[0x3d6:0x3dd]
---
Predecessors: [0x3ce]
Successors: [0xb86]
---
0x3d6 JUMPDEST
0x3d7 PUSH2 0x1d3
0x3da PUSH2 0xb86
0x3dd JUMP
---
0x3d6: JUMPDEST 
0x3d7: V316 = 0x1d3
0x3da: V317 = 0xb86
0x3dd: JUMP 0xb86
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3]
Exit stack: [V10, 0x1d3]

================================

Block 0x3de
[0x3de:0x3ef]
---
Predecessors: []
Successors: []
---
0x3de JUMPDEST
0x3df PUSH1 0x40
0x3e1 DUP1
0x3e2 MLOAD
0x3e3 SWAP2
0x3e4 DUP3
0x3e5 MSTORE
0x3e6 MLOAD
0x3e7 SWAP1
0x3e8 DUP2
0x3e9 SWAP1
0x3ea SUB
0x3eb PUSH1 0x20
0x3ed ADD
0x3ee SWAP1
0x3ef RETURN
---
0x3de: JUMPDEST 
0x3df: V318 = 0x40
0x3e2: V319 = M[0x40]
0x3e5: M[V319] = S0
0x3e6: V320 = M[0x40]
0x3ea: V321 = SUB V319 V320
0x3eb: V322 = 0x20
0x3ed: V323 = ADD 0x20 V321
0x3ef: RETURN V320 V323
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3f0
[0x3f0:0x3f6]
---
Predecessors: [0xee]
Successors: [0x3f7, 0x3f8]
---
0x3f0 JUMPDEST
0x3f1 CALLVALUE
0x3f2 ISZERO
0x3f3 PUSH2 0x3f8
0x3f6 JUMPI
---
0x3f0: JUMPDEST 
0x3f1: V324 = CALLVALUE
0x3f2: V325 = ISZERO V324
0x3f3: V326 = 0x3f8
0x3f6: JUMPI 0x3f8 V325
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f7
[0x3f7:0x3f7]
---
Predecessors: [0x3f0]
Successors: []
---
0x3f7 INVALID
---
0x3f7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f8
[0x3f8:0x40b]
---
Predecessors: [0x3f0]
Successors: [0xb8c]
---
0x3f8 JUMPDEST
0x3f9 PUSH2 0x113
0x3fc PUSH1 0x1
0x3fe PUSH1 0xa0
0x400 PUSH1 0x2
0x402 EXP
0x403 SUB
0x404 PUSH1 0x4
0x406 CALLDATALOAD
0x407 AND
0x408 PUSH2 0xb8c
0x40b JUMP
---
0x3f8: JUMPDEST 
0x3f9: V327 = 0x113
0x3fc: V328 = 0x1
0x3fe: V329 = 0xa0
0x400: V330 = 0x2
0x402: V331 = EXP 0x2 0xa0
0x403: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x404: V333 = 0x4
0x406: V334 = CALLDATALOAD 0x4
0x407: V335 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x408: V336 = 0xb8c
0x40b: JUMP 0xb8c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113, V335]
Exit stack: [V10, 0x113, V335]

================================

Block 0x40c
[0x40c:0x40d]
---
Predecessors: []
Successors: []
---
0x40c JUMPDEST
0x40d STOP
---
0x40c: JUMPDEST 
0x40d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x40e
[0x40e:0x414]
---
Predecessors: [0xf9]
Successors: [0x415, 0x416]
---
0x40e JUMPDEST
0x40f CALLVALUE
0x410 ISZERO
0x411 PUSH2 0x416
0x414 JUMPI
---
0x40e: JUMPDEST 
0x40f: V337 = CALLVALUE
0x410: V338 = ISZERO V337
0x411: V339 = 0x416
0x414: JUMPI 0x416 V338
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x415
[0x415:0x415]
---
Predecessors: [0x40e]
Successors: []
---
0x415 INVALID
---
0x415: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x416
[0x416:0x41d]
---
Predecessors: [0x40e]
Successors: [0xbb8]
---
0x416 JUMPDEST
0x417 PUSH2 0x41e
0x41a PUSH2 0xbb8
0x41d JUMP
---
0x416: JUMPDEST 
0x417: V340 = 0x41e
0x41a: V341 = 0xbb8
0x41d: JUMP 0xbb8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41e]
Exit stack: [V10, 0x41e]

================================

Block 0x41e
[0x41e:0x439]
---
Predecessors: [0xbb8]
Successors: []
---
0x41e JUMPDEST
0x41f PUSH1 0x40
0x421 DUP1
0x422 MLOAD
0x423 PUSH1 0x1
0x425 PUSH1 0xa0
0x427 PUSH1 0x2
0x429 EXP
0x42a SUB
0x42b SWAP1
0x42c SWAP3
0x42d AND
0x42e DUP3
0x42f MSTORE
0x430 MLOAD
0x431 SWAP1
0x432 DUP2
0x433 SWAP1
0x434 SUB
0x435 PUSH1 0x20
0x437 ADD
0x438 SWAP1
0x439 RETURN
---
0x41e: JUMPDEST 
0x41f: V342 = 0x40
0x422: V343 = M[0x40]
0x423: V344 = 0x1
0x425: V345 = 0xa0
0x427: V346 = 0x2
0x429: V347 = EXP 0x2 0xa0
0x42a: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42d: V349 = AND V1026 0xffffffffffffffffffffffffffffffffffffffff
0x42f: M[V343] = V349
0x430: V350 = M[0x40]
0x434: V351 = SUB V343 V350
0x435: V352 = 0x20
0x437: V353 = ADD 0x20 V351
0x439: RETURN V350 V353
---
Entry stack: [V10, 0x41e, V1026]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x41e]

================================

Block 0x43a
[0x43a:0x448]
---
Predecessors: [0x108, 0x24d]
Successors: [0x449, 0x58f]
---
0x43a JUMPDEST
0x43b PUSH7 0x38d7ea4c68000
0x443 CALLVALUE
0x444 GT
0x445 PUSH2 0x58f
0x448 JUMPI
---
0x43a: JUMPDEST 
0x43b: V354 = 0x38d7ea4c68000
0x443: V355 = CALLVALUE
0x444: V356 = GT V355 0x38d7ea4c68000
0x445: V357 = 0x58f
0x448: JUMPI 0x58f V356
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x449
[0x449:0x453]
---
Predecessors: [0x43a]
Successors: [0x454, 0x581]
---
0x449 PUSH1 0x3
0x44b SLOAD
0x44c PUSH1 0xff
0x44e AND
0x44f ISZERO
0x450 PUSH2 0x581
0x453 JUMPI
---
0x449: V358 = 0x3
0x44b: V359 = S[0x3]
0x44c: V360 = 0xff
0x44e: V361 = AND 0xff V359
0x44f: V362 = ISZERO V361
0x450: V363 = 0x581
0x453: JUMPI 0x581 V362
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x454
[0x454:0x4b5]
---
Predecessors: [0x449]
Successors: [0x4b6, 0x4b7]
---
0x454 PUSH1 0xb
0x456 SLOAD
0x457 PUSH1 0x40
0x459 DUP1
0x45a MLOAD
0x45b PUSH1 0x0
0x45d PUSH1 0x20
0x45f SWAP2
0x460 DUP3
0x461 ADD
0x462 DUP2
0x463 SWAP1
0x464 MSTORE
0x465 DUP3
0x466 MLOAD
0x467 PUSH32 0xec81b48300000000000000000000000000000000000000000000000000000000
0x488 DUP2
0x489 MSTORE
0x48a SWAP3
0x48b MLOAD
0x48c PUSH1 0x1
0x48e PUSH1 0xa0
0x490 PUSH1 0x2
0x492 EXP
0x493 SUB
0x494 SWAP1
0x495 SWAP5
0x496 AND
0x497 SWAP4
0x498 PUSH4 0xec81b483
0x49d SWAP4
0x49e PUSH1 0x4
0x4a0 DUP1
0x4a1 DUP3
0x4a2 ADD
0x4a3 SWAP5
0x4a4 SWAP4
0x4a5 SWAP2
0x4a6 DUP4
0x4a7 SWAP1
0x4a8 SUB
0x4a9 ADD
0x4aa SWAP1
0x4ab DUP3
0x4ac SWAP1
0x4ad DUP8
0x4ae DUP1
0x4af EXTCODESIZE
0x4b0 ISZERO
0x4b1 ISZERO
0x4b2 PUSH2 0x4b7
0x4b5 JUMPI
---
0x454: V364 = 0xb
0x456: V365 = S[0xb]
0x457: V366 = 0x40
0x45a: V367 = M[0x40]
0x45b: V368 = 0x0
0x45d: V369 = 0x20
0x461: V370 = ADD 0x20 V367
0x464: M[V370] = 0x0
0x466: V371 = M[0x40]
0x467: V372 = 0xec81b48300000000000000000000000000000000000000000000000000000000
0x489: M[V371] = 0xec81b48300000000000000000000000000000000000000000000000000000000
0x48b: V373 = M[0x40]
0x48c: V374 = 0x1
0x48e: V375 = 0xa0
0x490: V376 = 0x2
0x492: V377 = EXP 0x2 0xa0
0x493: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x496: V379 = AND V365 0xffffffffffffffffffffffffffffffffffffffff
0x498: V380 = 0xec81b483
0x49e: V381 = 0x4
0x4a2: V382 = ADD V371 0x4
0x4a8: V383 = SUB V371 V373
0x4a9: V384 = ADD V383 0x4
0x4af: V385 = EXTCODESIZE V379
0x4b0: V386 = ISZERO V385
0x4b1: V387 = ISZERO V386
0x4b2: V388 = 0x4b7
0x4b5: JUMPI 0x4b7 V387
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: [V379, 0xec81b483, V382, 0x20, V373, V384, V373, 0x0, V379]
Exit stack: [V10, S1, {0x110, 0x113}, V379, 0xec81b483, V382, 0x20, V373, V384, V373, 0x0, V379]

================================

Block 0x4b6
[0x4b6:0x4b6]
---
Predecessors: [0x454]
Successors: []
---
0x4b6 INVALID
---
0x4b6: INVALID 
---
Entry stack: [V10, S10, {0x110, 0x113}, V379, 0xec81b483, V382, 0x20, V373, V384, V373, 0x0, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0x110, 0x113}, V379, 0xec81b483, V382, 0x20, V373, V384, V373, 0x0, V379]

================================

Block 0x4b7
[0x4b7:0x4c3]
---
Predecessors: [0x454]
Successors: [0x4c4, 0x4c5]
---
0x4b7 JUMPDEST
0x4b8 PUSH2 0x2c6
0x4bb GAS
0x4bc SUB
0x4bd CALL
0x4be ISZERO
0x4bf ISZERO
0x4c0 PUSH2 0x4c5
0x4c3 JUMPI
---
0x4b7: JUMPDEST 
0x4b8: V389 = 0x2c6
0x4bb: V390 = GAS
0x4bc: V391 = SUB V390 0x2c6
0x4bd: V392 = CALL V391 V379 0x0 V373 V384 V373 0x20
0x4be: V393 = ISZERO V392
0x4bf: V394 = ISZERO V393
0x4c0: V395 = 0x4c5
0x4c3: JUMPI 0x4c5 V394
---
Entry stack: [V10, S10, {0x110, 0x113}, V379, 0xec81b483, V382, 0x20, V373, V384, V373, 0x0, V379]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S10, {0x110, 0x113}, V379, 0xec81b483, V382]

================================

Block 0x4c4
[0x4c4:0x4c4]
---
Predecessors: [0x4b7]
Successors: []
---
0x4c4 INVALID
---
0x4c4: INVALID 
---
Entry stack: [V10, S4, {0x110, 0x113}, V379, 0xec81b483, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x110, 0x113}, V379, 0xec81b483, V382]

================================

Block 0x4c5
[0x4c5:0x530]
---
Predecessors: [0x4b7]
Successors: [0x531, 0x532]
---
0x4c5 JUMPDEST
0x4c6 POP
0x4c7 POP
0x4c8 PUSH1 0x40
0x4ca DUP1
0x4cb MLOAD
0x4cc DUP1
0x4cd MLOAD
0x4ce PUSH1 0xb
0x4d0 SLOAD
0x4d1 PUSH1 0x0
0x4d3 PUSH1 0x20
0x4d5 SWAP4
0x4d6 DUP5
0x4d7 ADD
0x4d8 DUP2
0x4d9 SWAP1
0x4da MSTORE
0x4db DUP5
0x4dc MLOAD
0x4dd PUSH32 0xa4625af00000000000000000000000000000000000000000000000000000000
0x4fe DUP2
0x4ff MSTORE
0x500 SWAP5
0x501 MLOAD
0x502 SWAP3
0x503 SWAP6
0x504 POP
0x505 PUSH1 0x1
0x507 PUSH1 0xa0
0x509 PUSH1 0x2
0x50b EXP
0x50c SUB
0x50d SWAP1
0x50e SWAP2
0x50f AND
0x510 SWAP4
0x511 PUSH4 0xa4625af
0x516 SWAP4
0x517 PUSH1 0x4
0x519 DUP1
0x51a DUP4
0x51b ADD
0x51c SWAP5
0x51d SWAP2
0x51e SWAP4
0x51f SWAP2
0x520 SWAP3
0x521 DUP4
0x522 SWAP1
0x523 SUB
0x524 ADD
0x525 SWAP1
0x526 DUP3
0x527 SWAP1
0x528 DUP8
0x529 DUP1
0x52a EXTCODESIZE
0x52b ISZERO
0x52c ISZERO
0x52d PUSH2 0x532
0x530 JUMPI
---
0x4c5: JUMPDEST 
0x4c8: V396 = 0x40
0x4cb: V397 = M[0x40]
0x4cd: V398 = M[V397]
0x4ce: V399 = 0xb
0x4d0: V400 = S[0xb]
0x4d1: V401 = 0x0
0x4d3: V402 = 0x20
0x4d7: V403 = ADD 0x20 V397
0x4da: M[V403] = 0x0
0x4dc: V404 = M[0x40]
0x4dd: V405 = 0xa4625af00000000000000000000000000000000000000000000000000000000
0x4ff: M[V404] = 0xa4625af00000000000000000000000000000000000000000000000000000000
0x501: V406 = M[0x40]
0x505: V407 = 0x1
0x507: V408 = 0xa0
0x509: V409 = 0x2
0x50b: V410 = EXP 0x2 0xa0
0x50c: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50f: V412 = AND V400 0xffffffffffffffffffffffffffffffffffffffff
0x511: V413 = 0xa4625af
0x517: V414 = 0x4
0x51b: V415 = ADD V404 0x4
0x523: V416 = SUB V404 V406
0x524: V417 = ADD V416 0x4
0x52a: V418 = EXTCODESIZE V412
0x52b: V419 = ISZERO V418
0x52c: V420 = ISZERO V419
0x52d: V421 = 0x532
0x530: JUMPI 0x532 V420
---
Entry stack: [V10, S4, {0x110, 0x113}, V379, 0xec81b483, V382]
Stack pops: 3
Stack additions: [V398, V412, 0xa4625af, V415, 0x20, V406, V417, V406, 0x0, V412]
Exit stack: [V10, S4, {0x110, 0x113}, V398, V412, 0xa4625af, V415, 0x20, V406, V417, V406, 0x0, V412]

================================

Block 0x531
[0x531:0x531]
---
Predecessors: [0x4c5]
Successors: []
---
0x531 INVALID
---
0x531: INVALID 
---
Entry stack: [V10, S11, {0x110, 0x113}, V398, V412, 0xa4625af, V415, 0x20, V406, V417, V406, 0x0, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0x110, 0x113}, V398, V412, 0xa4625af, V415, 0x20, V406, V417, V406, 0x0, V412]

================================

Block 0x532
[0x532:0x53e]
---
Predecessors: [0x4c5]
Successors: [0x53f, 0x540]
---
0x532 JUMPDEST
0x533 PUSH2 0x2c6
0x536 GAS
0x537 SUB
0x538 CALL
0x539 ISZERO
0x53a ISZERO
0x53b PUSH2 0x540
0x53e JUMPI
---
0x532: JUMPDEST 
0x533: V422 = 0x2c6
0x536: V423 = GAS
0x537: V424 = SUB V423 0x2c6
0x538: V425 = CALL V424 V412 0x0 V406 V417 V406 0x20
0x539: V426 = ISZERO V425
0x53a: V427 = ISZERO V426
0x53b: V428 = 0x540
0x53e: JUMPI 0x540 V427
---
Entry stack: [V10, S11, {0x110, 0x113}, V398, V412, 0xa4625af, V415, 0x20, V406, V417, V406, 0x0, V412]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S11, {0x110, 0x113}, V398, V412, 0xa4625af, V415]

================================

Block 0x53f
[0x53f:0x53f]
---
Predecessors: [0x532]
Successors: []
---
0x53f INVALID
---
0x53f: INVALID 
---
Entry stack: [V10, S5, {0x110, 0x113}, V398, V412, 0xa4625af, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x110, 0x113}, V398, V412, 0xa4625af, V415]

================================

Block 0x540
[0x540:0x550]
---
Predecessors: [0x532]
Successors: [0x551, 0x556]
---
0x540 JUMPDEST
0x541 POP
0x542 POP
0x543 PUSH1 0x40
0x545 MLOAD
0x546 MLOAD
0x547 SWAP2
0x548 SWAP1
0x549 SWAP2
0x54a LT
0x54b SWAP1
0x54c POP
0x54d PUSH2 0x556
0x550 JUMPI
---
0x540: JUMPDEST 
0x543: V429 = 0x40
0x545: V430 = M[0x40]
0x546: V431 = M[V430]
0x54a: V432 = LT V431 V398
0x54d: V433 = 0x556
0x550: JUMPI 0x556 V432
---
Entry stack: [V10, S5, {0x110, 0x113}, V398, V412, 0xa4625af, V415]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S5, {0x110, 0x113}]

================================

Block 0x551
[0x551:0x555]
---
Predecessors: [0x540]
Successors: []
---
0x551 PUSH1 0x0
0x553 PUSH1 0x0
0x555 REVERT
---
0x551: V434 = 0x0
0x553: V435 = 0x0
0x555: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x556
[0x556:0x580]
---
Predecessors: [0x540]
Successors: [0x589]
---
0x556 JUMPDEST
0x557 PUSH1 0x1
0x559 PUSH1 0xa0
0x55b PUSH1 0x2
0x55d EXP
0x55e SUB
0x55f CALLER
0x560 AND
0x561 PUSH1 0x0
0x563 SWAP1
0x564 DUP2
0x565 MSTORE
0x566 PUSH1 0x1
0x568 PUSH1 0x20
0x56a DUP2
0x56b SWAP1
0x56c MSTORE
0x56d PUSH1 0x40
0x56f SWAP1
0x570 SWAP2
0x571 SHA3
0x572 DUP1
0x573 SLOAD
0x574 PUSH1 0xff
0x576 NOT
0x577 AND
0x578 SWAP1
0x579 SWAP2
0x57a OR
0x57b SWAP1
0x57c SSTORE
0x57d PUSH2 0x589
0x580 JUMP
---
0x556: JUMPDEST 
0x557: V436 = 0x1
0x559: V437 = 0xa0
0x55b: V438 = 0x2
0x55d: V439 = EXP 0x2 0xa0
0x55e: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V441 = CALLER
0x560: V442 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x561: V443 = 0x0
0x565: M[0x0] = V442
0x566: V444 = 0x1
0x568: V445 = 0x20
0x56c: M[0x20] = 0x1
0x56d: V446 = 0x40
0x571: V447 = SHA3 0x0 0x40
0x573: V448 = S[V447]
0x574: V449 = 0xff
0x576: V450 = NOT 0xff
0x577: V451 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V448
0x57a: V452 = OR 0x1 V451
0x57c: S[V447] = V452
0x57d: V453 = 0x589
0x580: JUMP 0x589
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x581
[0x581:0x588]
---
Predecessors: [0x449]
Successors: [0x763]
---
0x581 JUMPDEST
0x582 PUSH2 0x589
0x585 PUSH2 0x763
0x588 JUMP
---
0x581: JUMPDEST 
0x582: V454 = 0x589
0x585: V455 = 0x763
0x588: JUMP 0x763
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: [0x589]
Exit stack: [V10, S1, {0x110, 0x113}, 0x589]

================================

Block 0x589
[0x589:0x589]
---
Predecessors: [0x556, 0x933]
Successors: [0x58a]
---
0x589 JUMPDEST
---
0x589: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x58a
[0x58a:0x58e]
---
Predecessors: [0x589]
Successors: [0x110]
---
0x58a JUMPDEST
0x58b PUSH2 0x110
0x58e JUMP
---
0x58a: JUMPDEST 
0x58b: V456 = 0x110
0x58e: JUMP 0x110
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x58f
[0x58f:0x59a]
---
Predecessors: [0x43a]
Successors: [0x59b, 0x5a0]
---
0x58f JUMPDEST
0x590 PUSH1 0x5
0x592 SLOAD
0x593 PUSH1 0xff
0x595 AND
0x596 ISZERO
0x597 PUSH2 0x5a0
0x59a JUMPI
---
0x58f: JUMPDEST 
0x590: V457 = 0x5
0x592: V458 = S[0x5]
0x593: V459 = 0xff
0x595: V460 = AND 0xff V458
0x596: V461 = ISZERO V460
0x597: V462 = 0x5a0
0x59a: JUMPI 0x5a0 V461
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x59b
[0x59b:0x59f]
---
Predecessors: [0x58f]
Successors: []
---
0x59b PUSH1 0x0
0x59d PUSH1 0x0
0x59f REVERT
---
0x59b: V463 = 0x0
0x59d: V464 = 0x0
0x59f: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x5a0
[0x5a0:0x5ab]
---
Predecessors: [0x58f]
Successors: [0x5ac, 0x5b1]
---
0x5a0 JUMPDEST
0x5a1 PUSH1 0x3
0x5a3 SLOAD
0x5a4 PUSH1 0xff
0x5a6 AND
0x5a7 ISZERO
0x5a8 PUSH2 0x5b1
0x5ab JUMPI
---
0x5a0: JUMPDEST 
0x5a1: V465 = 0x3
0x5a3: V466 = S[0x3]
0x5a4: V467 = 0xff
0x5a6: V468 = AND 0xff V466
0x5a7: V469 = ISZERO V468
0x5a8: V470 = 0x5b1
0x5ab: JUMPI 0x5b1 V469
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x5ac
[0x5ac:0x5b0]
---
Predecessors: [0x5a0]
Successors: []
---
0x5ac PUSH1 0x0
0x5ae PUSH1 0x0
0x5b0 REVERT
---
0x5ac: V471 = 0x0
0x5ae: V472 = 0x0
0x5b0: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x5b1
[0x5b1:0x5cf]
---
Predecessors: [0x5a0]
Successors: [0x5d0]
---
0x5b1 JUMPDEST
0x5b2 PUSH1 0x1
0x5b4 PUSH1 0xa0
0x5b6 PUSH1 0x2
0x5b8 EXP
0x5b9 SUB
0x5ba CALLER
0x5bb AND
0x5bc PUSH1 0x0
0x5be SWAP1
0x5bf DUP2
0x5c0 MSTORE
0x5c1 PUSH1 0x20
0x5c3 DUP2
0x5c4 SWAP1
0x5c5 MSTORE
0x5c6 PUSH1 0x40
0x5c8 SWAP1
0x5c9 SHA3
0x5ca DUP1
0x5cb SLOAD
0x5cc CALLVALUE
0x5cd ADD
0x5ce SWAP1
0x5cf SSTORE
---
0x5b1: JUMPDEST 
0x5b2: V473 = 0x1
0x5b4: V474 = 0xa0
0x5b6: V475 = 0x2
0x5b8: V476 = EXP 0x2 0xa0
0x5b9: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ba: V478 = CALLER
0x5bb: V479 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V480 = 0x0
0x5c0: M[0x0] = V479
0x5c1: V481 = 0x20
0x5c5: M[0x20] = 0x0
0x5c6: V482 = 0x40
0x5c9: V483 = SHA3 0x0 0x40
0x5cb: V484 = S[V483]
0x5cc: V485 = CALLVALUE
0x5cd: V486 = ADD V485 V484
0x5cf: S[V483] = V486
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x5d0
[0x5d0:0x5d0]
---
Predecessors: [0x5b1]
Successors: [0x5d1]
---
0x5d0 JUMPDEST
---
0x5d0: JUMPDEST 
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x110, 0x113}]

================================

Block 0x5d1
[0x5d1:0x5d2]
---
Predecessors: [0x5d0]
Successors: [0x110, 0x113]
---
0x5d1 JUMPDEST
0x5d2 JUMP
---
0x5d1: JUMPDEST 
0x5d2: JUMP {0x110, 0x113}
---
Entry stack: [V10, S1, {0x110, 0x113}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x5d3
[0x5d3:0x5de]
---
Predecessors: [0x11d]
Successors: [0x5df, 0x5e3]
---
0x5d3 JUMPDEST
0x5d4 PUSH1 0x3
0x5d6 SLOAD
0x5d7 PUSH1 0xff
0x5d9 AND
0x5da ISZERO
0x5db PUSH2 0x5e3
0x5de JUMPI
---
0x5d3: JUMPDEST 
0x5d4: V487 = 0x3
0x5d6: V488 = S[0x3]
0x5d7: V489 = 0xff
0x5d9: V490 = AND 0xff V488
0x5da: V491 = ISZERO V490
0x5db: V492 = 0x5e3
0x5de: JUMPI 0x5e3 V491
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x5df
[0x5df:0x5e2]
---
Predecessors: [0x5d3]
Successors: [0x110]
---
0x5df PUSH2 0x110
0x5e2 JUMP
---
0x5df: V493 = 0x110
0x5e2: JUMP 0x110
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x5e3
[0x5e3:0x5ee]
---
Predecessors: [0x5d3]
Successors: [0x5ef, 0x5f4]
---
0x5e3 JUMPDEST
0x5e4 PUSH1 0x5
0x5e6 SLOAD
0x5e7 PUSH1 0xff
0x5e9 AND
0x5ea ISZERO
0x5eb PUSH2 0x5f4
0x5ee JUMPI
---
0x5e3: JUMPDEST 
0x5e4: V494 = 0x5
0x5e6: V495 = S[0x5]
0x5e7: V496 = 0xff
0x5e9: V497 = AND 0xff V495
0x5ea: V498 = ISZERO V497
0x5eb: V499 = 0x5f4
0x5ee: JUMPI 0x5f4 V498
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x5ef
[0x5ef:0x5f3]
---
Predecessors: [0x5e3]
Successors: []
---
0x5ef PUSH1 0x0
0x5f1 PUSH1 0x0
0x5f3 REVERT
---
0x5ef: V500 = 0x0
0x5f1: V501 = 0x0
0x5f3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x5f4
[0x5f4:0x675]
---
Predecessors: [0x5e3]
Successors: [0x676, 0x677]
---
0x5f4 JUMPDEST
0x5f5 PUSH1 0x3
0x5f7 DUP1
0x5f8 SLOAD
0x5f9 PUSH1 0xff
0x5fb NOT
0x5fc AND
0x5fd PUSH1 0x1
0x5ff OR
0x600 SWAP1
0x601 SSTORE
0x602 TIMESTAMP
0x603 PUSH1 0x4
0x605 SWAP1
0x606 DUP2
0x607 SSTORE
0x608 PUSH1 0xb
0x60a SLOAD
0x60b PUSH1 0x2
0x60d SLOAD
0x60e PUSH1 0x40
0x610 DUP1
0x611 MLOAD
0x612 PUSH32 0xf48c305400000000000000000000000000000000000000000000000000000000
0x633 DUP2
0x634 MSTORE
0x635 ADDRESS
0x636 PUSH1 0x1
0x638 PUSH1 0xa0
0x63a PUSH1 0x2
0x63c EXP
0x63d SUB
0x63e SWAP1
0x63f DUP2
0x640 AND
0x641 SWAP6
0x642 DUP3
0x643 ADD
0x644 DUP7
0x645 SWAP1
0x646 MSTORE
0x647 SWAP2
0x648 MLOAD
0x649 SWAP2
0x64a SWAP1
0x64b SWAP4
0x64c AND
0x64d SWAP4
0x64e PUSH4 0xf48c3054
0x653 SWAP4
0x654 SWAP1
0x655 BALANCE
0x656 SWAP3
0x657 SWAP1
0x658 SWAP3
0x659 SUB
0x65a SWAP2
0x65b PUSH1 0x24
0x65d DUP1
0x65e DUP3
0x65f ADD
0x660 SWAP3
0x661 PUSH1 0x0
0x663 SWAP3
0x664 SWAP1
0x665 SWAP2
0x666 SWAP1
0x667 DUP3
0x668 SWAP1
0x669 SUB
0x66a ADD
0x66b DUP2
0x66c DUP6
0x66d DUP9
0x66e DUP1
0x66f EXTCODESIZE
0x670 ISZERO
0x671 ISZERO
0x672 PUSH2 0x677
0x675 JUMPI
---
0x5f4: JUMPDEST 
0x5f5: V502 = 0x3
0x5f8: V503 = S[0x3]
0x5f9: V504 = 0xff
0x5fb: V505 = NOT 0xff
0x5fc: V506 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V503
0x5fd: V507 = 0x1
0x5ff: V508 = OR 0x1 V506
0x601: S[0x3] = V508
0x602: V509 = TIMESTAMP
0x603: V510 = 0x4
0x607: S[0x4] = V509
0x608: V511 = 0xb
0x60a: V512 = S[0xb]
0x60b: V513 = 0x2
0x60d: V514 = S[0x2]
0x60e: V515 = 0x40
0x611: V516 = M[0x40]
0x612: V517 = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x634: M[V516] = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x635: V518 = ADDRESS
0x636: V519 = 0x1
0x638: V520 = 0xa0
0x63a: V521 = 0x2
0x63c: V522 = EXP 0x2 0xa0
0x63d: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x640: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x643: V525 = ADD V516 0x4
0x646: M[V525] = V524
0x648: V526 = M[0x40]
0x64c: V527 = AND V512 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V528 = 0xf48c3054
0x655: V529 = BALANCE V524
0x659: V530 = SUB V529 V514
0x65b: V531 = 0x24
0x65f: V532 = ADD V516 0x24
0x661: V533 = 0x0
0x669: V534 = SUB V516 V526
0x66a: V535 = ADD V534 0x24
0x66f: V536 = EXTCODESIZE V527
0x670: V537 = ISZERO V536
0x671: V538 = ISZERO V537
0x672: V539 = 0x677
0x675: JUMPI 0x677 V538
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: [V527, 0xf48c3054, V530, V532, 0x0, V526, V535, V526, V530, V527]
Exit stack: [V10, 0x113, V527, 0xf48c3054, V530, V532, 0x0, V526, V535, V526, V530, V527]

================================

Block 0x676
[0x676:0x676]
---
Predecessors: [0x5f4]
Successors: []
---
0x676 INVALID
---
0x676: INVALID 
---
Entry stack: [V10, 0x113, V527, 0xf48c3054, V530, V532, 0x0, V526, V535, V526, V530, V527]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113, V527, 0xf48c3054, V530, V532, 0x0, V526, V535, V526, V530, V527]

================================

Block 0x677
[0x677:0x683]
---
Predecessors: [0x5f4]
Successors: [0x684, 0x685]
---
0x677 JUMPDEST
0x678 PUSH2 0x25ee
0x67b GAS
0x67c SUB
0x67d CALL
0x67e ISZERO
0x67f ISZERO
0x680 PUSH2 0x685
0x683 JUMPI
---
0x677: JUMPDEST 
0x678: V540 = 0x25ee
0x67b: V541 = GAS
0x67c: V542 = SUB V541 0x25ee
0x67d: V543 = CALL V542 V527 V530 V526 V535 V526 0x0
0x67e: V544 = ISZERO V543
0x67f: V545 = ISZERO V544
0x680: V546 = 0x685
0x683: JUMPI 0x685 V545
---
Entry stack: [V10, 0x113, V527, 0xf48c3054, V530, V532, 0x0, V526, V535, V526, V530, V527]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x113, V527, 0xf48c3054, V530, V532]

================================

Block 0x684
[0x684:0x684]
---
Predecessors: [0x677]
Successors: []
---
0x684 INVALID
---
0x684: INVALID 
---
Entry stack: [V10, 0x113, V527, 0xf48c3054, V530, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113, V527, 0xf48c3054, V530, V532]

================================

Block 0x685
[0x685:0x6b5]
---
Predecessors: [0x677]
Successors: [0x110, 0x6b6]
---
0x685 JUMPDEST
0x686 POP
0x687 POP
0x688 PUSH1 0x2
0x68a SLOAD
0x68b PUSH1 0x40
0x68d MLOAD
0x68e PUSH1 0x1
0x690 PUSH1 0xa0
0x692 PUSH1 0x2
0x694 EXP
0x695 SUB
0x696 CALLER
0x697 AND
0x698 SWAP4
0x699 POP
0x69a DUP2
0x69b ISZERO
0x69c PUSH2 0x8fc
0x69f MUL
0x6a0 SWAP3
0x6a1 POP
0x6a2 PUSH1 0x0
0x6a4 DUP2
0x6a5 DUP2
0x6a6 DUP2
0x6a7 DUP6
0x6a8 DUP9
0x6a9 DUP9
0x6aa CALL
0x6ab SWAP4
0x6ac POP
0x6ad POP
0x6ae POP
0x6af POP
0x6b0 ISZERO
0x6b1 ISZERO
0x6b2 PUSH2 0x110
0x6b5 JUMPI
---
0x685: JUMPDEST 
0x688: V547 = 0x2
0x68a: V548 = S[0x2]
0x68b: V549 = 0x40
0x68d: V550 = M[0x40]
0x68e: V551 = 0x1
0x690: V552 = 0xa0
0x692: V553 = 0x2
0x694: V554 = EXP 0x2 0xa0
0x695: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x696: V556 = CALLER
0x697: V557 = AND V556 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V558 = ISZERO V548
0x69c: V559 = 0x8fc
0x69f: V560 = MUL 0x8fc V558
0x6a2: V561 = 0x0
0x6aa: V562 = CALL V560 V557 V548 V550 0x0 V550 0x0
0x6b0: V563 = ISZERO V562
0x6b1: V564 = ISZERO V563
0x6b2: V565 = 0x110
0x6b5: JUMPI 0x110 V564
---
Entry stack: [V10, 0x113, V527, 0xf48c3054, V530, V532]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x6b6
[0x6b6:0x6b6]
---
Predecessors: [0x685]
Successors: []
---
0x6b6 INVALID
---
0x6b6: INVALID 
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x6b7
[0x6b7:0x6b7]
---
Predecessors: []
Successors: [0x6b8]
---
0x6b7 JUMPDEST
---
0x6b7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6b8
[0x6b8:0x6b9]
---
Predecessors: [0x6b7]
Successors: []
Has unresolved jump.
---
0x6b8 JUMPDEST
0x6b9 JUMP
---
0x6b8: JUMPDEST 
0x6b9: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6ba
[0x6ba:0x6f9]
---
Predecessors: [0x12f]
Successors: [0x6fa, 0x740]
---
0x6ba JUMPDEST
0x6bb PUSH1 0x6
0x6bd DUP1
0x6be SLOAD
0x6bf PUSH1 0x40
0x6c1 DUP1
0x6c2 MLOAD
0x6c3 PUSH1 0x20
0x6c5 PUSH1 0x2
0x6c7 PUSH1 0x1
0x6c9 DUP6
0x6ca AND
0x6cb ISZERO
0x6cc PUSH2 0x100
0x6cf MUL
0x6d0 PUSH1 0x0
0x6d2 NOT
0x6d3 ADD
0x6d4 SWAP1
0x6d5 SWAP5
0x6d6 AND
0x6d7 SWAP4
0x6d8 SWAP1
0x6d9 SWAP4
0x6da DIV
0x6db PUSH1 0x1f
0x6dd DUP2
0x6de ADD
0x6df DUP5
0x6e0 SWAP1
0x6e1 DIV
0x6e2 DUP5
0x6e3 MUL
0x6e4 DUP3
0x6e5 ADD
0x6e6 DUP5
0x6e7 ADD
0x6e8 SWAP1
0x6e9 SWAP3
0x6ea MSTORE
0x6eb DUP2
0x6ec DUP2
0x6ed MSTORE
0x6ee SWAP3
0x6ef SWAP2
0x6f0 DUP4
0x6f1 ADD
0x6f2 DUP3
0x6f3 DUP3
0x6f4 DUP1
0x6f5 ISZERO
0x6f6 PUSH2 0x740
0x6f9 JUMPI
---
0x6ba: JUMPDEST 
0x6bb: V566 = 0x6
0x6be: V567 = S[0x6]
0x6bf: V568 = 0x40
0x6c2: V569 = M[0x40]
0x6c3: V570 = 0x20
0x6c5: V571 = 0x2
0x6c7: V572 = 0x1
0x6ca: V573 = AND V567 0x1
0x6cb: V574 = ISZERO V573
0x6cc: V575 = 0x100
0x6cf: V576 = MUL 0x100 V574
0x6d0: V577 = 0x0
0x6d2: V578 = NOT 0x0
0x6d3: V579 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V576
0x6d6: V580 = AND V567 V579
0x6da: V581 = DIV V580 0x2
0x6db: V582 = 0x1f
0x6de: V583 = ADD V581 0x1f
0x6e1: V584 = DIV V583 0x20
0x6e3: V585 = MUL 0x20 V584
0x6e5: V586 = ADD V569 V585
0x6e7: V587 = ADD 0x20 V586
0x6ea: M[0x40] = V587
0x6ed: M[V569] = V581
0x6f1: V588 = ADD V569 0x20
0x6f5: V589 = ISZERO V581
0x6f6: V590 = 0x740
0x6f9: JUMPI 0x740 V589
---
Entry stack: [V10, 0x137]
Stack pops: 0
Stack additions: [V569, 0x6, V581, V588, 0x6, V581]
Exit stack: [V10, 0x137, V569, 0x6, V581, V588, 0x6, V581]

================================

Block 0x6fa
[0x6fa:0x701]
---
Predecessors: [0x6ba]
Successors: [0x702, 0x715]
---
0x6fa DUP1
0x6fb PUSH1 0x1f
0x6fd LT
0x6fe PUSH2 0x715
0x701 JUMPI
---
0x6fb: V591 = 0x1f
0x6fd: V592 = LT 0x1f V581
0x6fe: V593 = 0x715
0x701: JUMPI 0x715 V592
---
Entry stack: [V10, 0x137, V569, 0x6, V581, V588, 0x6, V581]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x137, V569, 0x6, V581, V588, 0x6, V581]

================================

Block 0x702
[0x702:0x714]
---
Predecessors: [0x6fa]
Successors: [0x740]
---
0x702 PUSH2 0x100
0x705 DUP1
0x706 DUP4
0x707 SLOAD
0x708 DIV
0x709 MUL
0x70a DUP4
0x70b MSTORE
0x70c SWAP2
0x70d PUSH1 0x20
0x70f ADD
0x710 SWAP2
0x711 PUSH2 0x740
0x714 JUMP
---
0x702: V594 = 0x100
0x707: V595 = S[0x6]
0x708: V596 = DIV V595 0x100
0x709: V597 = MUL V596 0x100
0x70b: M[V588] = V597
0x70d: V598 = 0x20
0x70f: V599 = ADD 0x20 V588
0x711: V600 = 0x740
0x714: JUMP 0x740
---
Entry stack: [V10, 0x137, V569, 0x6, V581, V588, 0x6, V581]
Stack pops: 3
Stack additions: [V599, S1, S0]
Exit stack: [V10, 0x137, V569, 0x6, V581, V599, 0x6, V581]

================================

Block 0x715
[0x715:0x722]
---
Predecessors: [0x6fa, 0xa23]
Successors: [0x723]
---
0x715 JUMPDEST
0x716 DUP3
0x717 ADD
0x718 SWAP2
0x719 SWAP1
0x71a PUSH1 0x0
0x71c MSTORE
0x71d PUSH1 0x20
0x71f PUSH1 0x0
0x721 SHA3
0x722 SWAP1
---
0x715: JUMPDEST 
0x717: V601 = ADD S2 S0
0x71a: V602 = 0x0
0x71c: M[0x0] = {0x6, 0x7}
0x71d: V603 = 0x20
0x71f: V604 = 0x0
0x721: V605 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x137, S5, {0x6, 0x7}, S3, S2, {0x6, 0x7}, S0]
Stack pops: 3
Stack additions: [V601, V605, S2]
Exit stack: [V10, 0x137, S5, {0x6, 0x7}, S3, V601, V605, S2]

================================

Block 0x723
[0x723:0x736]
---
Predecessors: [0x715, 0x723, 0xa4c]
Successors: [0x723, 0x737]
---
0x723 JUMPDEST
0x724 DUP2
0x725 SLOAD
0x726 DUP2
0x727 MSTORE
0x728 SWAP1
0x729 PUSH1 0x1
0x72b ADD
0x72c SWAP1
0x72d PUSH1 0x20
0x72f ADD
0x730 DUP1
0x731 DUP4
0x732 GT
0x733 PUSH2 0x723
0x736 JUMPI
---
0x723: JUMPDEST 
0x725: V606 = S[S1]
0x727: M[S0] = V606
0x729: V607 = 0x1
0x72b: V608 = ADD 0x1 S1
0x72d: V609 = 0x20
0x72f: V610 = ADD 0x20 S0
0x732: V611 = GT S2 V610
0x733: V612 = 0x723
0x736: JUMPI 0x723 V611
---
Entry stack: [V10, 0x137, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V608, V610]
Exit stack: [V10, 0x137, S5, {0x6, 0x7}, S3, S2, V608, V610]

================================

Block 0x737
[0x737:0x73f]
---
Predecessors: [0x723]
Successors: [0x740]
---
0x737 DUP3
0x738 SWAP1
0x739 SUB
0x73a PUSH1 0x1f
0x73c AND
0x73d DUP3
0x73e ADD
0x73f SWAP2
---
0x739: V613 = SUB V610 S2
0x73a: V614 = 0x1f
0x73c: V615 = AND 0x1f V613
0x73e: V616 = ADD S2 V615
---
Entry stack: [V10, 0x137, S5, {0x6, 0x7}, S3, S2, V608, V610]
Stack pops: 3
Stack additions: [V616, S1, S2]
Exit stack: [V10, 0x137, S5, {0x6, 0x7}, S3, V616, V608, S2]

================================

Block 0x740
[0x740:0x747]
---
Predecessors: [0x6ba, 0x702, 0x737, 0x9e3, 0xa2b]
Successors: [0x137]
---
0x740 JUMPDEST
0x741 POP
0x742 POP
0x743 POP
0x744 POP
0x745 POP
0x746 DUP2
0x747 JUMP
---
0x740: JUMPDEST 
0x747: JUMP 0x137
---
Entry stack: [V10, 0x137, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x137, S5]

================================

Block 0x748
[0x748:0x759]
---
Predecessors: [0x1bf]
Successors: [0x1d3]
---
0x748 JUMPDEST
0x749 PUSH1 0x0
0x74b PUSH1 0x20
0x74d DUP2
0x74e SWAP1
0x74f MSTORE
0x750 SWAP1
0x751 DUP2
0x752 MSTORE
0x753 PUSH1 0x40
0x755 SWAP1
0x756 SHA3
0x757 SLOAD
0x758 DUP2
0x759 JUMP
---
0x748: JUMPDEST 
0x749: V617 = 0x0
0x74b: V618 = 0x20
0x74f: M[0x20] = 0x0
0x752: M[0x0] = V134
0x753: V619 = 0x40
0x756: V620 = SHA3 0x0 0x40
0x757: V621 = S[V620]
0x759: JUMP 0x1d3
---
Entry stack: [V10, 0x1d3, V134]
Stack pops: 2
Stack additions: [S1, V621]
Exit stack: [V10, 0x1d3, V621]

================================

Block 0x75a
[0x75a:0x762]
---
Predecessors: [0x1ed]
Successors: [0x1f5]
---
0x75a JUMPDEST
0x75b PUSH1 0x8
0x75d SLOAD
0x75e PUSH1 0xff
0x760 AND
0x761 DUP2
0x762 JUMP
---
0x75a: JUMPDEST 
0x75b: V622 = 0x8
0x75d: V623 = S[0x8]
0x75e: V624 = 0xff
0x760: V625 = AND 0xff V623
0x762: JUMP 0x1f5
---
Entry stack: [V10, 0x1f5]
Stack pops: 1
Stack additions: [S0, V625]
Exit stack: [V10, 0x1f5, V625]

================================

Block 0x763
[0x763:0x776]
---
Predecessors: [0x213, 0x581]
Successors: [0x777, 0x7bd]
---
0x763 JUMPDEST
0x764 PUSH1 0x3
0x766 SLOAD
0x767 PUSH1 0x0
0x769 SWAP1
0x76a DUP2
0x76b SWAP1
0x76c DUP2
0x76d SWAP1
0x76e PUSH1 0xff
0x770 AND
0x771 ISZERO
0x772 ISZERO
0x773 PUSH2 0x7bd
0x776 JUMPI
---
0x763: JUMPDEST 
0x764: V626 = 0x3
0x766: V627 = S[0x3]
0x767: V628 = 0x0
0x76e: V629 = 0xff
0x770: V630 = AND 0xff V627
0x771: V631 = ISZERO V630
0x772: V632 = ISZERO V631
0x773: V633 = 0x7bd
0x776: JUMPI 0x7bd V632
---
Entry stack: [V10, S2, S1, {0x113, 0x589}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S2, S1, {0x113, 0x589}, 0x0, 0x0, 0x0]

================================

Block 0x777
[0x777:0x7b6]
---
Predecessors: [0x763]
Successors: [0x7b7, 0x7b8]
---
0x777 PUSH1 0x1
0x779 PUSH1 0xa0
0x77b PUSH1 0x2
0x77d EXP
0x77e SUB
0x77f CALLER
0x780 AND
0x781 PUSH1 0x0
0x783 DUP2
0x784 DUP2
0x785 MSTORE
0x786 PUSH1 0x20
0x788 DUP2
0x789 SWAP1
0x78a MSTORE
0x78b PUSH1 0x40
0x78d DUP1
0x78e DUP3
0x78f SHA3
0x790 DUP1
0x791 SLOAD
0x792 SWAP1
0x793 DUP4
0x794 SWAP1
0x795 SSTORE
0x796 SWAP1
0x797 MLOAD
0x798 SWAP1
0x799 SWAP6
0x79a POP
0x79b DUP6
0x79c ISZERO
0x79d PUSH2 0x8fc
0x7a0 MUL
0x7a1 SWAP2
0x7a2 DUP7
0x7a3 SWAP2
0x7a4 SWAP1
0x7a5 DUP2
0x7a6 DUP2
0x7a7 DUP2
0x7a8 DUP6
0x7a9 DUP9
0x7aa DUP9
0x7ab CALL
0x7ac SWAP4
0x7ad POP
0x7ae POP
0x7af POP
0x7b0 POP
0x7b1 ISZERO
0x7b2 ISZERO
0x7b3 PUSH2 0x7b8
0x7b6 JUMPI
---
0x777: V634 = 0x1
0x779: V635 = 0xa0
0x77b: V636 = 0x2
0x77d: V637 = EXP 0x2 0xa0
0x77e: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77f: V639 = CALLER
0x780: V640 = AND V639 0xffffffffffffffffffffffffffffffffffffffff
0x781: V641 = 0x0
0x785: M[0x0] = V640
0x786: V642 = 0x20
0x78a: M[0x20] = 0x0
0x78b: V643 = 0x40
0x78f: V644 = SHA3 0x0 0x40
0x791: V645 = S[V644]
0x795: S[V644] = 0x0
0x797: V646 = M[0x40]
0x79c: V647 = ISZERO V645
0x79d: V648 = 0x8fc
0x7a0: V649 = MUL 0x8fc V647
0x7ab: V650 = CALL V649 V640 V645 V646 0x0 V646 0x0
0x7b1: V651 = ISZERO V650
0x7b2: V652 = ISZERO V651
0x7b3: V653 = 0x7b8
0x7b6: JUMPI 0x7b8 V652
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V645, S1, S0]
Exit stack: [V10, S5, S4, {0x113, 0x589}, V645, 0x0, 0x0]

================================

Block 0x7b7
[0x7b7:0x7b7]
---
Predecessors: [0x777]
Successors: []
---
0x7b7 INVALID
---
0x7b7: INVALID 
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, V645, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x113, 0x589}, V645, 0x0, 0x0]

================================

Block 0x7b8
[0x7b8:0x7bc]
---
Predecessors: [0x777]
Successors: [0x931]
---
0x7b8 JUMPDEST
0x7b9 PUSH2 0x931
0x7bc JUMP
---
0x7b8: JUMPDEST 
0x7b9: V654 = 0x931
0x7bc: JUMP 0x931
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, V645, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x113, 0x589}, V645, 0x0, 0x0]

================================

Block 0x7bd
[0x7bd:0x7f5]
---
Predecessors: [0x763]
Successors: [0x7f6, 0x898]
---
0x7bd JUMPDEST
0x7be POP
0x7bf POP
0x7c0 PUSH1 0xa
0x7c2 SLOAD
0x7c3 PUSH1 0x1
0x7c5 PUSH1 0xa0
0x7c7 PUSH1 0x2
0x7c9 EXP
0x7ca SUB
0x7cb CALLER
0x7cc AND
0x7cd PUSH1 0x0
0x7cf SWAP1
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 PUSH1 0x20
0x7d4 DUP2
0x7d5 DUP2
0x7d6 MSTORE
0x7d7 PUSH1 0x40
0x7d9 DUP1
0x7da DUP4
0x7db SHA3
0x7dc DUP1
0x7dd SLOAD
0x7de SWAP1
0x7df DUP5
0x7e0 SWAP1
0x7e1 SSTORE
0x7e2 PUSH1 0x1
0x7e4 SWAP1
0x7e5 SWAP3
0x7e6 MSTORE
0x7e7 DUP3
0x7e8 SHA3
0x7e9 SLOAD
0x7ea SWAP3
0x7eb MUL
0x7ec SWAP2
0x7ed PUSH1 0xff
0x7ef AND
0x7f0 ISZERO
0x7f1 ISZERO
0x7f2 PUSH2 0x898
0x7f5 JUMPI
---
0x7bd: JUMPDEST 
0x7c0: V655 = 0xa
0x7c2: V656 = S[0xa]
0x7c3: V657 = 0x1
0x7c5: V658 = 0xa0
0x7c7: V659 = 0x2
0x7c9: V660 = EXP 0x2 0xa0
0x7ca: V661 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cb: V662 = CALLER
0x7cc: V663 = AND V662 0xffffffffffffffffffffffffffffffffffffffff
0x7cd: V664 = 0x0
0x7d1: M[0x0] = V663
0x7d2: V665 = 0x20
0x7d6: M[0x20] = 0x0
0x7d7: V666 = 0x40
0x7db: V667 = SHA3 0x0 0x40
0x7dd: V668 = S[V667]
0x7e1: S[V667] = 0x0
0x7e2: V669 = 0x1
0x7e6: M[0x20] = 0x1
0x7e8: V670 = SHA3 0x0 0x40
0x7e9: V671 = S[V670]
0x7eb: V672 = MUL V656 V668
0x7ed: V673 = 0xff
0x7ef: V674 = AND 0xff V671
0x7f0: V675 = ISZERO V674
0x7f1: V676 = ISZERO V675
0x7f2: V677 = 0x898
0x7f5: JUMPI 0x898 V676
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V672, 0x0]
Exit stack: [V10, S5, S4, {0x113, 0x589}, 0x0, V672, 0x0]

================================

Block 0x7f6
[0x7f6:0x7f8]
---
Predecessors: [0x7bd]
Successors: [0x7f9]
---
0x7f6 PUSH1 0x64
0x7f8 DUP3
---
0x7f6: V678 = 0x64
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, 0x0, V672, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1]
Exit stack: [V10, S5, S4, {0x113, 0x589}, 0x0, V672, 0x0, 0x64, V672]

================================

Block 0x7f9
[0x7f9:0x874]
---
Predecessors: [0x7f6]
Successors: [0x875, 0x876]
---
0x7f9 JUMPDEST
0x7fa PUSH1 0xb
0x7fc SLOAD
0x7fd PUSH1 0xc
0x7ff SLOAD
0x800 PUSH1 0x40
0x802 DUP1
0x803 MLOAD
0x804 PUSH1 0x0
0x806 PUSH1 0x20
0x808 SWAP2
0x809 DUP3
0x80a ADD
0x80b DUP2
0x80c SWAP1
0x80d MSTORE
0x80e DUP3
0x80f MLOAD
0x810 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x831 DUP2
0x832 MSTORE
0x833 PUSH1 0x1
0x835 PUSH1 0xa0
0x837 PUSH1 0x2
0x839 EXP
0x83a SUB
0x83b SWAP5
0x83c DUP6
0x83d AND
0x83e PUSH1 0x4
0x840 DUP3
0x841 ADD
0x842 MSTORE
0x843 SWAP7
0x844 SWAP1
0x845 SWAP6
0x846 DIV
0x847 PUSH1 0x24
0x849 DUP8
0x84a ADD
0x84b DUP2
0x84c SWAP1
0x84d MSTORE
0x84e SWAP2
0x84f MLOAD
0x850 SWAP2
0x851 SWAP7
0x852 POP
0x853 SWAP2
0x854 SWAP1
0x855 SWAP3
0x856 AND
0x857 SWAP4
0x858 PUSH4 0xa9059cbb
0x85d SWAP4
0x85e PUSH1 0x44
0x860 DUP1
0x861 DUP4
0x862 ADD
0x863 SWAP5
0x864 SWAP3
0x865 DUP4
0x866 SWAP1
0x867 SUB
0x868 ADD
0x869 SWAP1
0x86a DUP3
0x86b SWAP1
0x86c DUP8
0x86d DUP1
0x86e EXTCODESIZE
0x86f ISZERO
0x870 ISZERO
0x871 PUSH2 0x876
0x874 JUMPI
---
0x7f9: JUMPDEST 
0x7fa: V679 = 0xb
0x7fc: V680 = S[0xb]
0x7fd: V681 = 0xc
0x7ff: V682 = S[0xc]
0x800: V683 = 0x40
0x803: V684 = M[0x40]
0x804: V685 = 0x0
0x806: V686 = 0x20
0x80a: V687 = ADD 0x20 V684
0x80d: M[V687] = 0x0
0x80f: V688 = M[0x40]
0x810: V689 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x832: M[V688] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x833: V690 = 0x1
0x835: V691 = 0xa0
0x837: V692 = 0x2
0x839: V693 = EXP 0x2 0xa0
0x83a: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83d: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V682
0x83e: V696 = 0x4
0x841: V697 = ADD V688 0x4
0x842: M[V697] = V695
0x846: V698 = DIV V672 0x64
0x847: V699 = 0x24
0x84a: V700 = ADD V688 0x24
0x84d: M[V700] = V698
0x84f: V701 = M[0x40]
0x856: V702 = AND V680 0xffffffffffffffffffffffffffffffffffffffff
0x858: V703 = 0xa9059cbb
0x85e: V704 = 0x44
0x862: V705 = ADD V688 0x44
0x867: V706 = SUB V688 V701
0x868: V707 = ADD V706 0x44
0x86e: V708 = EXTCODESIZE V702
0x86f: V709 = ISZERO V708
0x870: V710 = ISZERO V709
0x871: V711 = 0x876
0x874: JUMPI 0x876 V710
---
Entry stack: [V10, S7, S6, {0x113, 0x589}, 0x0, V672, 0x0, 0x64, V672]
Stack pops: 3
Stack additions: [V698, V702, 0xa9059cbb, V705, 0x20, V701, V707, V701, 0x0, V702]
Exit stack: [V10, S7, S6, {0x113, 0x589}, 0x0, V672, V698, V702, 0xa9059cbb, V705, 0x20, V701, V707, V701, 0x0, V702]

================================

Block 0x875
[0x875:0x875]
---
Predecessors: [0x7f9]
Successors: []
---
0x875 INVALID
---
0x875: INVALID 
---
Entry stack: [V10, S14, S13, {0x113, 0x589}, 0x0, V672, V698, V702, 0xa9059cbb, V705, 0x20, V701, V707, V701, 0x0, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, {0x113, 0x589}, 0x0, V672, V698, V702, 0xa9059cbb, V705, 0x20, V701, V707, V701, 0x0, V702]

================================

Block 0x876
[0x876:0x882]
---
Predecessors: [0x7f9]
Successors: [0x883, 0x884]
---
0x876 JUMPDEST
0x877 PUSH2 0x2c6
0x87a GAS
0x87b SUB
0x87c CALL
0x87d ISZERO
0x87e ISZERO
0x87f PUSH2 0x884
0x882 JUMPI
---
0x876: JUMPDEST 
0x877: V712 = 0x2c6
0x87a: V713 = GAS
0x87b: V714 = SUB V713 0x2c6
0x87c: V715 = CALL V714 V702 0x0 V701 V707 V701 0x20
0x87d: V716 = ISZERO V715
0x87e: V717 = ISZERO V716
0x87f: V718 = 0x884
0x882: JUMPI 0x884 V717
---
Entry stack: [V10, S14, S13, {0x113, 0x589}, 0x0, V672, V698, V702, 0xa9059cbb, V705, 0x20, V701, V707, V701, 0x0, V702]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, S13, {0x113, 0x589}, 0x0, V672, V698, V702, 0xa9059cbb, V705]

================================

Block 0x883
[0x883:0x883]
---
Predecessors: [0x876]
Successors: []
---
0x883 INVALID
---
0x883: INVALID 
---
Entry stack: [V10, S8, S7, {0x113, 0x589}, 0x0, V672, V698, V702, 0xa9059cbb, V705]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, {0x113, 0x589}, 0x0, V672, V698, V702, 0xa9059cbb, V705]

================================

Block 0x884
[0x884:0x892]
---
Predecessors: [0x876]
Successors: [0x893, 0x898]
---
0x884 JUMPDEST
0x885 POP
0x886 POP
0x887 PUSH1 0x40
0x889 MLOAD
0x88a MLOAD
0x88b ISZERO
0x88c ISZERO
0x88d SWAP1
0x88e POP
0x88f PUSH2 0x898
0x892 JUMPI
---
0x884: JUMPDEST 
0x887: V719 = 0x40
0x889: V720 = M[0x40]
0x88a: V721 = M[V720]
0x88b: V722 = ISZERO V721
0x88c: V723 = ISZERO V722
0x88f: V724 = 0x898
0x892: JUMPI 0x898 V723
---
Entry stack: [V10, S8, S7, {0x113, 0x589}, 0x0, V672, V698, V702, 0xa9059cbb, V705]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S8, S7, {0x113, 0x589}, 0x0, V672, V698]

================================

Block 0x893
[0x893:0x897]
---
Predecessors: [0x884]
Successors: []
---
0x893 PUSH1 0x0
0x895 PUSH1 0x0
0x897 REVERT
---
0x893: V725 = 0x0
0x895: V726 = 0x0
0x897: REVERT 0x0 0x0
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, 0x0, V672, V698]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x113, 0x589}, 0x0, V672, V698]

================================

Block 0x898
[0x898:0x898]
---
Predecessors: [0x7bd, 0x884]
Successors: [0x899]
---
0x898 JUMPDEST
---
0x898: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, 0x0, V672, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x113, 0x589}, 0x0, V672, S0]

================================

Block 0x899
[0x899:0x90d]
---
Predecessors: [0x898]
Successors: [0x90e, 0x90f]
---
0x899 JUMPDEST
0x89a PUSH1 0xb
0x89c SLOAD
0x89d PUSH1 0x40
0x89f DUP1
0x8a0 MLOAD
0x8a1 PUSH1 0x0
0x8a3 PUSH1 0x20
0x8a5 SWAP2
0x8a6 DUP3
0x8a7 ADD
0x8a8 DUP2
0x8a9 SWAP1
0x8aa MSTORE
0x8ab DUP3
0x8ac MLOAD
0x8ad PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8ce DUP2
0x8cf MSTORE
0x8d0 PUSH1 0x1
0x8d2 PUSH1 0xa0
0x8d4 PUSH1 0x2
0x8d6 EXP
0x8d7 SUB
0x8d8 CALLER
0x8d9 DUP2
0x8da AND
0x8db PUSH1 0x4
0x8dd DUP4
0x8de ADD
0x8df MSTORE
0x8e0 DUP7
0x8e1 DUP9
0x8e2 SUB
0x8e3 PUSH1 0x24
0x8e5 DUP4
0x8e6 ADD
0x8e7 MSTORE
0x8e8 SWAP4
0x8e9 MLOAD
0x8ea SWAP4
0x8eb SWAP1
0x8ec SWAP5
0x8ed AND
0x8ee SWAP4
0x8ef PUSH4 0xa9059cbb
0x8f4 SWAP4
0x8f5 PUSH1 0x44
0x8f7 DUP1
0x8f8 DUP4
0x8f9 ADD
0x8fa SWAP5
0x8fb SWAP4
0x8fc SWAP2
0x8fd SWAP3
0x8fe DUP4
0x8ff SWAP1
0x900 SUB
0x901 ADD
0x902 SWAP1
0x903 DUP3
0x904 SWAP1
0x905 DUP8
0x906 DUP1
0x907 EXTCODESIZE
0x908 ISZERO
0x909 ISZERO
0x90a PUSH2 0x90f
0x90d JUMPI
---
0x899: JUMPDEST 
0x89a: V727 = 0xb
0x89c: V728 = S[0xb]
0x89d: V729 = 0x40
0x8a0: V730 = M[0x40]
0x8a1: V731 = 0x0
0x8a3: V732 = 0x20
0x8a7: V733 = ADD 0x20 V730
0x8aa: M[V733] = 0x0
0x8ac: V734 = M[0x40]
0x8ad: V735 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8cf: M[V734] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8d0: V736 = 0x1
0x8d2: V737 = 0xa0
0x8d4: V738 = 0x2
0x8d6: V739 = EXP 0x2 0xa0
0x8d7: V740 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d8: V741 = CALLER
0x8da: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V741
0x8db: V743 = 0x4
0x8de: V744 = ADD V734 0x4
0x8df: M[V744] = V742
0x8e2: V745 = SUB S1 S0
0x8e3: V746 = 0x24
0x8e6: V747 = ADD V734 0x24
0x8e7: M[V747] = V745
0x8e9: V748 = M[0x40]
0x8ed: V749 = AND V728 0xffffffffffffffffffffffffffffffffffffffff
0x8ef: V750 = 0xa9059cbb
0x8f5: V751 = 0x44
0x8f9: V752 = ADD V734 0x44
0x900: V753 = SUB V734 V748
0x901: V754 = ADD V753 0x44
0x907: V755 = EXTCODESIZE V749
0x908: V756 = ISZERO V755
0x909: V757 = ISZERO V756
0x90a: V758 = 0x90f
0x90d: JUMPI 0x90f V757
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V749, 0xa9059cbb, V752, 0x20, V748, V754, V748, 0x0, V749]
Exit stack: [V10, S5, S4, {0x113, 0x589}, 0x0, S1, S0, V749, 0xa9059cbb, V752, 0x20, V748, V754, V748, 0x0, V749]

================================

Block 0x90e
[0x90e:0x90e]
---
Predecessors: [0x899]
Successors: []
---
0x90e INVALID
---
0x90e: INVALID 
---
Entry stack: [V10, S14, S13, {0x113, 0x589}, 0x0, S10, S9, V749, 0xa9059cbb, V752, 0x20, V748, V754, V748, 0x0, V749]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, {0x113, 0x589}, 0x0, S10, S9, V749, 0xa9059cbb, V752, 0x20, V748, V754, V748, 0x0, V749]

================================

Block 0x90f
[0x90f:0x91b]
---
Predecessors: [0x899]
Successors: [0x91c, 0x91d]
---
0x90f JUMPDEST
0x910 PUSH2 0x2c6
0x913 GAS
0x914 SUB
0x915 CALL
0x916 ISZERO
0x917 ISZERO
0x918 PUSH2 0x91d
0x91b JUMPI
---
0x90f: JUMPDEST 
0x910: V759 = 0x2c6
0x913: V760 = GAS
0x914: V761 = SUB V760 0x2c6
0x915: V762 = CALL V761 V749 0x0 V748 V754 V748 0x20
0x916: V763 = ISZERO V762
0x917: V764 = ISZERO V763
0x918: V765 = 0x91d
0x91b: JUMPI 0x91d V764
---
Entry stack: [V10, S14, S13, {0x113, 0x589}, 0x0, S10, S9, V749, 0xa9059cbb, V752, 0x20, V748, V754, V748, 0x0, V749]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, S13, {0x113, 0x589}, 0x0, S10, S9, V749, 0xa9059cbb, V752]

================================

Block 0x91c
[0x91c:0x91c]
---
Predecessors: [0x90f]
Successors: []
---
0x91c INVALID
---
0x91c: INVALID 
---
Entry stack: [V10, S8, S7, {0x113, 0x589}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, {0x113, 0x589}, 0x0, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x91d
[0x91d:0x92b]
---
Predecessors: [0x90f]
Successors: [0x92c, 0x931]
---
0x91d JUMPDEST
0x91e POP
0x91f POP
0x920 PUSH1 0x40
0x922 MLOAD
0x923 MLOAD
0x924 ISZERO
0x925 ISZERO
0x926 SWAP1
0x927 POP
0x928 PUSH2 0x931
0x92b JUMPI
---
0x91d: JUMPDEST 
0x920: V766 = 0x40
0x922: V767 = M[0x40]
0x923: V768 = M[V767]
0x924: V769 = ISZERO V768
0x925: V770 = ISZERO V769
0x928: V771 = 0x931
0x92b: JUMPI 0x931 V770
---
Entry stack: [V10, S8, S7, {0x113, 0x589}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S8, S7, {0x113, 0x589}, 0x0, S4, S3]

================================

Block 0x92c
[0x92c:0x930]
---
Predecessors: [0x91d]
Successors: []
---
0x92c PUSH1 0x0
0x92e PUSH1 0x0
0x930 REVERT
---
0x92c: V772 = 0x0
0x92e: V773 = 0x0
0x930: REVERT 0x0 0x0
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x113, 0x589}, 0x0, S1, S0]

================================

Block 0x931
[0x931:0x931]
---
Predecessors: [0x7b8, 0x91d]
Successors: [0x932]
---
0x931 JUMPDEST
---
0x931: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x113, 0x589}, S2, S1, S0]

================================

Block 0x932
[0x932:0x932]
---
Predecessors: [0x931]
Successors: [0x933]
---
0x932 JUMPDEST
---
0x932: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x113, 0x589}, S2, S1, S0]

================================

Block 0x933
[0x933:0x937]
---
Predecessors: [0x932]
Successors: [0x113, 0x589]
---
0x933 JUMPDEST
0x934 POP
0x935 POP
0x936 POP
0x937 JUMP
---
0x933: JUMPDEST 
0x937: JUMP {0x113, 0x589}
---
Entry stack: [V10, S5, S4, {0x113, 0x589}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S5, S4]

================================

Block 0x938
[0x938:0x94c]
---
Predecessors: [0x225]
Successors: [0x239]
---
0x938 JUMPDEST
0x939 PUSH1 0x1
0x93b PUSH1 0x20
0x93d MSTORE
0x93e PUSH1 0x0
0x940 SWAP1
0x941 DUP2
0x942 MSTORE
0x943 PUSH1 0x40
0x945 SWAP1
0x946 SHA3
0x947 SLOAD
0x948 PUSH1 0xff
0x94a AND
0x94b DUP2
0x94c JUMP
---
0x938: JUMPDEST 
0x939: V774 = 0x1
0x93b: V775 = 0x20
0x93d: M[0x20] = 0x1
0x93e: V776 = 0x0
0x942: M[0x0] = V171
0x943: V777 = 0x40
0x946: V778 = SHA3 0x0 0x40
0x947: V779 = S[V778]
0x948: V780 = 0xff
0x94a: V781 = AND 0xff V779
0x94c: JUMP 0x239
---
Entry stack: [V10, 0x239, V171]
Stack pops: 2
Stack additions: [S1, V781]
Exit stack: [V10, 0x239, V781]

================================

Block 0x94d
[0x94d:0x963]
---
Predecessors: [0x257]
Successors: [0x964, 0x969]
---
0x94d JUMPDEST
0x94e PUSH1 0xc
0x950 SLOAD
0x951 CALLER
0x952 PUSH1 0x1
0x954 PUSH1 0xa0
0x956 PUSH1 0x2
0x958 EXP
0x959 SUB
0x95a SWAP1
0x95b DUP2
0x95c AND
0x95d SWAP2
0x95e AND
0x95f EQ
0x960 PUSH2 0x969
0x963 JUMPI
---
0x94d: JUMPDEST 
0x94e: V782 = 0xc
0x950: V783 = S[0xc]
0x951: V784 = CALLER
0x952: V785 = 0x1
0x954: V786 = 0xa0
0x956: V787 = 0x2
0x958: V788 = EXP 0x2 0xa0
0x959: V789 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95c: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0x95e: V791 = AND V783 0xffffffffffffffffffffffffffffffffffffffff
0x95f: V792 = EQ V791 V790
0x960: V793 = 0x969
0x963: JUMPI 0x969 V792
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x964
[0x964:0x968]
---
Predecessors: [0x94d]
Successors: []
---
0x964 PUSH1 0x0
0x966 PUSH1 0x0
0x968 REVERT
---
0x964: V794 = 0x0
0x966: V795 = 0x0
0x968: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x969
[0x969:0x974]
---
Predecessors: [0x94d]
Successors: [0x975, 0x97a]
---
0x969 JUMPDEST
0x96a PUSH1 0x5
0x96c SLOAD
0x96d PUSH1 0xff
0x96f AND
0x970 ISZERO
0x971 PUSH2 0x97a
0x974 JUMPI
---
0x969: JUMPDEST 
0x96a: V796 = 0x5
0x96c: V797 = S[0x5]
0x96d: V798 = 0xff
0x96f: V799 = AND 0xff V797
0x970: V800 = ISZERO V799
0x971: V801 = 0x97a
0x974: JUMPI 0x97a V800
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x975
[0x975:0x979]
---
Predecessors: [0x969]
Successors: []
---
0x975 PUSH1 0x0
0x977 PUSH1 0x0
0x979 REVERT
---
0x975: V802 = 0x0
0x977: V803 = 0x0
0x979: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x97a
[0x97a:0x985]
---
Predecessors: [0x969]
Successors: [0x986, 0x98b]
---
0x97a JUMPDEST
0x97b PUSH1 0x3
0x97d SLOAD
0x97e PUSH1 0xff
0x980 AND
0x981 ISZERO
0x982 PUSH2 0x98b
0x985 JUMPI
---
0x97a: JUMPDEST 
0x97b: V804 = 0x3
0x97d: V805 = S[0x3]
0x97e: V806 = 0xff
0x980: V807 = AND 0xff V805
0x981: V808 = ISZERO V807
0x982: V809 = 0x98b
0x985: JUMPI 0x98b V808
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x986
[0x986:0x98a]
---
Predecessors: [0x97a]
Successors: []
---
0x986 PUSH1 0x0
0x988 PUSH1 0x0
0x98a REVERT
---
0x986: V810 = 0x0
0x988: V811 = 0x0
0x98a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x98b
[0x98b:0x993]
---
Predecessors: [0x97a]
Successors: [0x994]
---
0x98b JUMPDEST
0x98c PUSH1 0x2
0x98e DUP1
0x98f SLOAD
0x990 CALLVALUE
0x991 ADD
0x992 SWAP1
0x993 SSTORE
---
0x98b: JUMPDEST 
0x98c: V812 = 0x2
0x98f: V813 = S[0x2]
0x990: V814 = CALLVALUE
0x991: V815 = ADD V814 V813
0x993: S[0x2] = V815
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x994
[0x994:0x995]
---
Predecessors: [0x98b]
Successors: [0x113]
---
0x994 JUMPDEST
0x995 JUMP
---
0x994: JUMPDEST 
0x995: JUMP 0x113
---
Entry stack: [V10, 0x113]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x996
[0x996:0x99e]
---
Predecessors: [0x269]
Successors: [0x239]
---
0x996 JUMPDEST
0x997 PUSH1 0x3
0x999 SLOAD
0x99a PUSH1 0xff
0x99c AND
0x99d DUP2
0x99e JUMP
---
0x996: JUMPDEST 
0x997: V816 = 0x3
0x999: V817 = S[0x3]
0x99a: V818 = 0xff
0x99c: V819 = AND 0xff V817
0x99e: JUMP 0x239
---
Entry stack: [V10, 0x239]
Stack pops: 1
Stack additions: [S0, V819]
Exit stack: [V10, 0x239, V819]

================================

Block 0x99f
[0x99f:0x9b5]
---
Predecessors: [0x28d]
Successors: [0x9b6, 0x9bb]
---
0x99f JUMPDEST
0x9a0 PUSH1 0xc
0x9a2 SLOAD
0x9a3 CALLER
0x9a4 PUSH1 0x1
0x9a6 PUSH1 0xa0
0x9a8 PUSH1 0x2
0x9aa EXP
0x9ab SUB
0x9ac SWAP1
0x9ad DUP2
0x9ae AND
0x9af SWAP2
0x9b0 AND
0x9b1 EQ
0x9b2 PUSH2 0x9bb
0x9b5 JUMPI
---
0x99f: JUMPDEST 
0x9a0: V820 = 0xc
0x9a2: V821 = S[0xc]
0x9a3: V822 = CALLER
0x9a4: V823 = 0x1
0x9a6: V824 = 0xa0
0x9a8: V825 = 0x2
0x9aa: V826 = EXP 0x2 0xa0
0x9ab: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ae: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0x9b0: V829 = AND V821 0xffffffffffffffffffffffffffffffffffffffff
0x9b1: V830 = EQ V829 V828
0x9b2: V831 = 0x9bb
0x9b5: JUMPI 0x9bb V830
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x9b6
[0x9b6:0x9ba]
---
Predecessors: [0x99f]
Successors: []
---
0x9b6 PUSH1 0x0
0x9b8 PUSH1 0x0
0x9ba REVERT
---
0x9b6: V832 = 0x0
0x9b8: V833 = 0x0
0x9ba: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x9bb
[0x9bb:0x9c8]
---
Predecessors: [0x99f]
Successors: [0x9c9]
---
0x9bb JUMPDEST
0x9bc PUSH1 0x5
0x9be DUP1
0x9bf SLOAD
0x9c0 PUSH1 0xff
0x9c2 NOT
0x9c3 AND
0x9c4 PUSH1 0x1
0x9c6 OR
0x9c7 SWAP1
0x9c8 SSTORE
---
0x9bb: JUMPDEST 
0x9bc: V834 = 0x5
0x9bf: V835 = S[0x5]
0x9c0: V836 = 0xff
0x9c2: V837 = NOT 0xff
0x9c3: V838 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V835
0x9c4: V839 = 0x1
0x9c6: V840 = OR 0x1 V838
0x9c8: S[0x5] = V840
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x9c9
[0x9c9:0x9ca]
---
Predecessors: [0x9bb]
Successors: [0x113]
---
0x9c9 JUMPDEST
0x9ca JUMP
---
0x9c9: JUMPDEST 
0x9ca: JUMP 0x113
---
Entry stack: [V10, 0x113]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x9cb
[0x9cb:0x9dc]
---
Predecessors: [0x29f]
Successors: [0x1d3]
---
0x9cb JUMPDEST
0x9cc PUSH1 0x9
0x9ce PUSH1 0x20
0x9d0 MSTORE
0x9d1 PUSH1 0x0
0x9d3 SWAP1
0x9d4 DUP2
0x9d5 MSTORE
0x9d6 PUSH1 0x40
0x9d8 SWAP1
0x9d9 SHA3
0x9da SLOAD
0x9db DUP2
0x9dc JUMP
---
0x9cb: JUMPDEST 
0x9cc: V841 = 0x9
0x9ce: V842 = 0x20
0x9d0: M[0x20] = 0x9
0x9d1: V843 = 0x0
0x9d5: M[0x0] = V214
0x9d6: V844 = 0x40
0x9d9: V845 = SHA3 0x0 0x40
0x9da: V846 = S[V845]
0x9dc: JUMP 0x1d3
---
Entry stack: [V10, 0x1d3, V214]
Stack pops: 2
Stack additions: [S1, V846]
Exit stack: [V10, 0x1d3, V846]

================================

Block 0x9dd
[0x9dd:0x9e2]
---
Predecessors: [0x2cd]
Successors: [0x1d3]
---
0x9dd JUMPDEST
0x9de PUSH1 0x2
0x9e0 SLOAD
0x9e1 DUP2
0x9e2 JUMP
---
0x9dd: JUMPDEST 
0x9de: V847 = 0x2
0x9e0: V848 = S[0x2]
0x9e2: JUMP 0x1d3
---
Entry stack: [V10, 0x1d3]
Stack pops: 1
Stack additions: [S0, V848]
Exit stack: [V10, 0x1d3, V848]

================================

Block 0x9e3
[0x9e3:0xa22]
---
Predecessors: [0x2ef]
Successors: [0x740, 0xa23]
---
0x9e3 JUMPDEST
0x9e4 PUSH1 0x7
0x9e6 DUP1
0x9e7 SLOAD
0x9e8 PUSH1 0x40
0x9ea DUP1
0x9eb MLOAD
0x9ec PUSH1 0x20
0x9ee PUSH1 0x2
0x9f0 PUSH1 0x1
0x9f2 DUP6
0x9f3 AND
0x9f4 ISZERO
0x9f5 PUSH2 0x100
0x9f8 MUL
0x9f9 PUSH1 0x0
0x9fb NOT
0x9fc ADD
0x9fd SWAP1
0x9fe SWAP5
0x9ff AND
0xa00 SWAP4
0xa01 SWAP1
0xa02 SWAP4
0xa03 DIV
0xa04 PUSH1 0x1f
0xa06 DUP2
0xa07 ADD
0xa08 DUP5
0xa09 SWAP1
0xa0a DIV
0xa0b DUP5
0xa0c MUL
0xa0d DUP3
0xa0e ADD
0xa0f DUP5
0xa10 ADD
0xa11 SWAP1
0xa12 SWAP3
0xa13 MSTORE
0xa14 DUP2
0xa15 DUP2
0xa16 MSTORE
0xa17 SWAP3
0xa18 SWAP2
0xa19 DUP4
0xa1a ADD
0xa1b DUP3
0xa1c DUP3
0xa1d DUP1
0xa1e ISZERO
0xa1f PUSH2 0x740
0xa22 JUMPI
---
0x9e3: JUMPDEST 
0x9e4: V849 = 0x7
0x9e7: V850 = S[0x7]
0x9e8: V851 = 0x40
0x9eb: V852 = M[0x40]
0x9ec: V853 = 0x20
0x9ee: V854 = 0x2
0x9f0: V855 = 0x1
0x9f3: V856 = AND V850 0x1
0x9f4: V857 = ISZERO V856
0x9f5: V858 = 0x100
0x9f8: V859 = MUL 0x100 V857
0x9f9: V860 = 0x0
0x9fb: V861 = NOT 0x0
0x9fc: V862 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V859
0x9ff: V863 = AND V850 V862
0xa03: V864 = DIV V863 0x2
0xa04: V865 = 0x1f
0xa07: V866 = ADD V864 0x1f
0xa0a: V867 = DIV V866 0x20
0xa0c: V868 = MUL 0x20 V867
0xa0e: V869 = ADD V852 V868
0xa10: V870 = ADD 0x20 V869
0xa13: M[0x40] = V870
0xa16: M[V852] = V864
0xa1a: V871 = ADD V852 0x20
0xa1e: V872 = ISZERO V864
0xa1f: V873 = 0x740
0xa22: JUMPI 0x740 V872
---
Entry stack: [V10, 0x137]
Stack pops: 0
Stack additions: [V852, 0x7, V864, V871, 0x7, V864]
Exit stack: [V10, 0x137, V852, 0x7, V864, V871, 0x7, V864]

================================

Block 0xa23
[0xa23:0xa2a]
---
Predecessors: [0x9e3]
Successors: [0x715, 0xa2b]
---
0xa23 DUP1
0xa24 PUSH1 0x1f
0xa26 LT
0xa27 PUSH2 0x715
0xa2a JUMPI
---
0xa24: V874 = 0x1f
0xa26: V875 = LT 0x1f V864
0xa27: V876 = 0x715
0xa2a: JUMPI 0x715 V875
---
Entry stack: [V10, 0x137, V852, 0x7, V864, V871, 0x7, V864]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x137, V852, 0x7, V864, V871, 0x7, V864]

================================

Block 0xa2b
[0xa2b:0xa3d]
---
Predecessors: [0xa23]
Successors: [0x740]
---
0xa2b PUSH2 0x100
0xa2e DUP1
0xa2f DUP4
0xa30 SLOAD
0xa31 DIV
0xa32 MUL
0xa33 DUP4
0xa34 MSTORE
0xa35 SWAP2
0xa36 PUSH1 0x20
0xa38 ADD
0xa39 SWAP2
0xa3a PUSH2 0x740
0xa3d JUMP
---
0xa2b: V877 = 0x100
0xa30: V878 = S[0x7]
0xa31: V879 = DIV V878 0x100
0xa32: V880 = MUL V879 0x100
0xa34: M[V871] = V880
0xa36: V881 = 0x20
0xa38: V882 = ADD 0x20 V871
0xa3a: V883 = 0x740
0xa3d: JUMP 0x740
---
Entry stack: [V10, 0x137, V852, 0x7, V864, V871, 0x7, V864]
Stack pops: 3
Stack additions: [V882, S1, S0]
Exit stack: [V10, 0x137, V852, 0x7, V864, V882, 0x7, V864]

================================

Block 0xa3e
[0xa3e:0xa4b]
---
Predecessors: []
Successors: [0xa4c]
---
0xa3e JUMPDEST
0xa3f DUP3
0xa40 ADD
0xa41 SWAP2
0xa42 SWAP1
0xa43 PUSH1 0x0
0xa45 MSTORE
0xa46 PUSH1 0x20
0xa48 PUSH1 0x0
0xa4a SHA3
0xa4b SWAP1
---
0xa3e: JUMPDEST 
0xa40: V884 = ADD S2 S0
0xa43: V885 = 0x0
0xa45: M[0x0] = S1
0xa46: V886 = 0x20
0xa48: V887 = 0x0
0xa4a: V888 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V884, V888, S2]
Exit stack: [V884, V888, S2]

================================

Block 0xa4c
[0xa4c:0xa5f]
---
Predecessors: [0xa3e]
Successors: [0x723, 0xa60]
---
0xa4c JUMPDEST
0xa4d DUP2
0xa4e SLOAD
0xa4f DUP2
0xa50 MSTORE
0xa51 SWAP1
0xa52 PUSH1 0x1
0xa54 ADD
0xa55 SWAP1
0xa56 PUSH1 0x20
0xa58 ADD
0xa59 DUP1
0xa5a DUP4
0xa5b GT
0xa5c PUSH2 0x723
0xa5f JUMPI
---
0xa4c: JUMPDEST 
0xa4e: V889 = S[V888]
0xa50: M[S0] = V889
0xa52: V890 = 0x1
0xa54: V891 = ADD 0x1 V888
0xa56: V892 = 0x20
0xa58: V893 = ADD 0x20 S0
0xa5b: V894 = GT V884 V893
0xa5c: V895 = 0x723
0xa5f: JUMPI 0x723 V894
---
Entry stack: [V884, V888, S0]
Stack pops: 3
Stack additions: [S2, V891, V893]
Exit stack: [V884, V891, V893]

================================

Block 0xa60
[0xa60:0xa68]
---
Predecessors: [0xa4c]
Successors: [0xa69]
---
0xa60 DUP3
0xa61 SWAP1
0xa62 SUB
0xa63 PUSH1 0x1f
0xa65 AND
0xa66 DUP3
0xa67 ADD
0xa68 SWAP2
---
0xa62: V896 = SUB V893 V884
0xa63: V897 = 0x1f
0xa65: V898 = AND 0x1f V896
0xa67: V899 = ADD V884 V898
---
Entry stack: [V884, V891, V893]
Stack pops: 3
Stack additions: [V899, S1, S2]
Exit stack: [V899, V891, V884]

================================

Block 0xa69
[0xa69:0xa70]
---
Predecessors: [0xa60]
Successors: []
Has unresolved jump.
---
0xa69 JUMPDEST
0xa6a POP
0xa6b POP
0xa6c POP
0xa6d POP
0xa6e POP
0xa6f DUP2
0xa70 JUMP
---
0xa69: JUMPDEST 
0xa70: JUMP S6
---
Entry stack: [V899, V891, V884]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xa71
[0xa71:0xa79]
---
Predecessors: [0x37f]
Successors: [0x239]
---
0xa71 JUMPDEST
0xa72 PUSH1 0x5
0xa74 SLOAD
0xa75 PUSH1 0xff
0xa77 AND
0xa78 DUP2
0xa79 JUMP
---
0xa71: JUMPDEST 
0xa72: V900 = 0x5
0xa74: V901 = S[0x5]
0xa75: V902 = 0xff
0xa77: V903 = AND 0xff V901
0xa79: JUMP 0x239
---
Entry stack: [V10, 0x239]
Stack pops: 1
Stack additions: [S0, V903]
Exit stack: [V10, 0x239, V903]

================================

Block 0xa7a
[0xa7a:0xa90]
---
Predecessors: [0x3a3]
Successors: [0xa91, 0xa96]
---
0xa7a JUMPDEST
0xa7b PUSH1 0xc
0xa7d SLOAD
0xa7e CALLER
0xa7f PUSH1 0x1
0xa81 PUSH1 0xa0
0xa83 PUSH1 0x2
0xa85 EXP
0xa86 SUB
0xa87 SWAP1
0xa88 DUP2
0xa89 AND
0xa8a SWAP2
0xa8b AND
0xa8c EQ
0xa8d PUSH2 0xa96
0xa90 JUMPI
---
0xa7a: JUMPDEST 
0xa7b: V904 = 0xc
0xa7d: V905 = S[0xc]
0xa7e: V906 = CALLER
0xa7f: V907 = 0x1
0xa81: V908 = 0xa0
0xa83: V909 = 0x2
0xa85: V910 = EXP 0x2 0xa0
0xa86: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa89: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xa8b: V913 = AND V905 0xffffffffffffffffffffffffffffffffffffffff
0xa8c: V914 = EQ V913 V912
0xa8d: V915 = 0xa96
0xa90: JUMPI 0xa96 V914
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0xa91
[0xa91:0xa95]
---
Predecessors: [0xa7a]
Successors: []
---
0xa91 PUSH1 0x0
0xa93 PUSH1 0x0
0xa95 REVERT
---
0xa91: V916 = 0x0
0xa93: V917 = 0x0
0xa95: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0xa96
[0xa96:0xac5]
---
Predecessors: [0xa7a]
Successors: [0x110, 0xac6]
---
0xa96 JUMPDEST
0xa97 PUSH1 0x40
0xa99 MLOAD
0xa9a PUSH1 0x1
0xa9c PUSH1 0xa0
0xa9e PUSH1 0x2
0xaa0 EXP
0xaa1 SUB
0xaa2 CALLER
0xaa3 DUP2
0xaa4 AND
0xaa5 SWAP2
0xaa6 ADDRESS
0xaa7 SWAP1
0xaa8 SWAP2
0xaa9 AND
0xaaa BALANCE
0xaab DUP1
0xaac ISZERO
0xaad PUSH2 0x8fc
0xab0 MUL
0xab1 SWAP2
0xab2 PUSH1 0x0
0xab4 DUP2
0xab5 DUP2
0xab6 DUP2
0xab7 DUP6
0xab8 DUP9
0xab9 DUP9
0xaba CALL
0xabb SWAP4
0xabc POP
0xabd POP
0xabe POP
0xabf POP
0xac0 ISZERO
0xac1 ISZERO
0xac2 PUSH2 0x110
0xac5 JUMPI
---
0xa96: JUMPDEST 
0xa97: V918 = 0x40
0xa99: V919 = M[0x40]
0xa9a: V920 = 0x1
0xa9c: V921 = 0xa0
0xa9e: V922 = 0x2
0xaa0: V923 = EXP 0x2 0xa0
0xaa1: V924 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa2: V925 = CALLER
0xaa4: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V925
0xaa6: V927 = ADDRESS
0xaa9: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff V927
0xaaa: V929 = BALANCE V928
0xaac: V930 = ISZERO V929
0xaad: V931 = 0x8fc
0xab0: V932 = MUL 0x8fc V930
0xab2: V933 = 0x0
0xaba: V934 = CALL V932 V926 V929 V919 0x0 V919 0x0
0xac0: V935 = ISZERO V934
0xac1: V936 = ISZERO V935
0xac2: V937 = 0x110
0xac5: JUMPI 0x110 V936
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0xac6
[0xac6:0xac6]
---
Predecessors: [0xa96]
Successors: []
---
0xac6 INVALID
---
0xac6: INVALID 
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0xac7
[0xac7:0xac7]
---
Predecessors: []
Successors: [0xac8]
---
0xac7 JUMPDEST
---
0xac7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xac8
[0xac8:0xac8]
---
Predecessors: [0xac7]
Successors: [0xac9]
---
0xac8 JUMPDEST
---
0xac8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xac9
[0xac9:0xaca]
---
Predecessors: [0xac8]
Successors: []
Has unresolved jump.
---
0xac9 JUMPDEST
0xaca JUMP
---
0xac9: JUMPDEST 
0xaca: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xacb
[0xacb:0xaec]
---
Predecessors: [0x3b5]
Successors: [0xaed, 0xaf2]
---
0xacb JUMPDEST
0xacc PUSH1 0x1
0xace PUSH1 0xa0
0xad0 PUSH1 0x2
0xad2 EXP
0xad3 SUB
0xad4 CALLER
0xad5 AND
0xad6 PUSH1 0x0
0xad8 SWAP1
0xad9 DUP2
0xada MSTORE
0xadb PUSH1 0x9
0xadd PUSH1 0x20
0xadf MSTORE
0xae0 PUSH1 0x40
0xae2 SWAP1
0xae3 SHA3
0xae4 SLOAD
0xae5 DUP2
0xae6 SWAP1
0xae7 LT
0xae8 ISZERO
0xae9 PUSH2 0xaf2
0xaec JUMPI
---
0xacb: JUMPDEST 
0xacc: V938 = 0x1
0xace: V939 = 0xa0
0xad0: V940 = 0x2
0xad2: V941 = EXP 0x2 0xa0
0xad3: V942 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad4: V943 = CALLER
0xad5: V944 = AND V943 0xffffffffffffffffffffffffffffffffffffffff
0xad6: V945 = 0x0
0xada: M[0x0] = V944
0xadb: V946 = 0x9
0xadd: V947 = 0x20
0xadf: M[0x20] = 0x9
0xae0: V948 = 0x40
0xae3: V949 = SHA3 0x0 0x40
0xae4: V950 = S[V949]
0xae7: V951 = LT V950 V311
0xae8: V952 = ISZERO V951
0xae9: V953 = 0xaf2
0xaec: JUMPI 0xaf2 V952
---
Entry stack: [V10, 0x113, V309, V311]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x113, V309, V311]

================================

Block 0xaed
[0xaed:0xaf1]
---
Predecessors: [0xacb]
Successors: []
---
0xaed PUSH1 0x0
0xaef PUSH1 0x0
0xaf1 REVERT
---
0xaed: V954 = 0x0
0xaef: V955 = 0x0
0xaf1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113, V309, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113, V309, V311]

================================

Block 0xaf2
[0xaf2:0xb14]
---
Predecessors: [0xacb]
Successors: [0xb15, 0xb1a]
---
0xaf2 JUMPDEST
0xaf3 PUSH1 0x1
0xaf5 PUSH1 0xa0
0xaf7 PUSH1 0x2
0xaf9 EXP
0xafa SUB
0xafb DUP3
0xafc AND
0xafd PUSH1 0x0
0xaff SWAP1
0xb00 DUP2
0xb01 MSTORE
0xb02 PUSH1 0x9
0xb04 PUSH1 0x20
0xb06 MSTORE
0xb07 PUSH1 0x40
0xb09 SWAP1
0xb0a SHA3
0xb0b SLOAD
0xb0c DUP2
0xb0d DUP2
0xb0e ADD
0xb0f LT
0xb10 ISZERO
0xb11 PUSH2 0xb1a
0xb14 JUMPI
---
0xaf2: JUMPDEST 
0xaf3: V956 = 0x1
0xaf5: V957 = 0xa0
0xaf7: V958 = 0x2
0xaf9: V959 = EXP 0x2 0xa0
0xafa: V960 = SUB 0x10000000000000000000000000000000000000000 0x1
0xafc: V961 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0xafd: V962 = 0x0
0xb01: M[0x0] = V961
0xb02: V963 = 0x9
0xb04: V964 = 0x20
0xb06: M[0x20] = 0x9
0xb07: V965 = 0x40
0xb0a: V966 = SHA3 0x0 0x40
0xb0b: V967 = S[V966]
0xb0e: V968 = ADD V967 V311
0xb0f: V969 = LT V968 V967
0xb10: V970 = ISZERO V969
0xb11: V971 = 0xb1a
0xb14: JUMPI 0xb1a V970
---
Entry stack: [V10, 0x113, V309, V311]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x113, V309, V311]

================================

Block 0xb15
[0xb15:0xb19]
---
Predecessors: [0xaf2]
Successors: []
---
0xb15 PUSH1 0x0
0xb17 PUSH1 0x0
0xb19 REVERT
---
0xb15: V972 = 0x0
0xb17: V973 = 0x0
0xb19: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113, V309, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113, V309, V311]

================================

Block 0xb1a
[0xb1a:0xb81]
---
Predecessors: [0xaf2]
Successors: [0xb82]
---
0xb1a JUMPDEST
0xb1b PUSH1 0x1
0xb1d PUSH1 0xa0
0xb1f PUSH1 0x2
0xb21 EXP
0xb22 SUB
0xb23 CALLER
0xb24 DUP2
0xb25 AND
0xb26 PUSH1 0x0
0xb28 DUP2
0xb29 DUP2
0xb2a MSTORE
0xb2b PUSH1 0x9
0xb2d PUSH1 0x20
0xb2f SWAP1
0xb30 DUP2
0xb31 MSTORE
0xb32 PUSH1 0x40
0xb34 DUP1
0xb35 DUP4
0xb36 SHA3
0xb37 DUP1
0xb38 SLOAD
0xb39 DUP8
0xb3a SWAP1
0xb3b SUB
0xb3c SWAP1
0xb3d SSTORE
0xb3e SWAP4
0xb3f DUP7
0xb40 AND
0xb41 DUP1
0xb42 DUP4
0xb43 MSTORE
0xb44 SWAP2
0xb45 DUP5
0xb46 SWAP1
0xb47 SHA3
0xb48 DUP1
0xb49 SLOAD
0xb4a DUP7
0xb4b ADD
0xb4c SWAP1
0xb4d SSTORE
0xb4e DUP4
0xb4f MLOAD
0xb50 DUP6
0xb51 DUP2
0xb52 MSTORE
0xb53 SWAP4
0xb54 MLOAD
0xb55 SWAP2
0xb56 SWAP4
0xb57 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb78 SWAP3
0xb79 SWAP1
0xb7a DUP2
0xb7b SWAP1
0xb7c SUB
0xb7d SWAP1
0xb7e SWAP2
0xb7f ADD
0xb80 SWAP1
0xb81 LOG3
---
0xb1a: JUMPDEST 
0xb1b: V974 = 0x1
0xb1d: V975 = 0xa0
0xb1f: V976 = 0x2
0xb21: V977 = EXP 0x2 0xa0
0xb22: V978 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb23: V979 = CALLER
0xb25: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V979
0xb26: V981 = 0x0
0xb2a: M[0x0] = V980
0xb2b: V982 = 0x9
0xb2d: V983 = 0x20
0xb31: M[0x20] = 0x9
0xb32: V984 = 0x40
0xb36: V985 = SHA3 0x0 0x40
0xb38: V986 = S[V985]
0xb3b: V987 = SUB V986 V311
0xb3d: S[V985] = V987
0xb40: V988 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0xb43: M[0x0] = V988
0xb47: V989 = SHA3 0x0 0x40
0xb49: V990 = S[V989]
0xb4b: V991 = ADD V311 V990
0xb4d: S[V989] = V991
0xb4f: V992 = M[0x40]
0xb52: M[V992] = V311
0xb54: V993 = M[0x40]
0xb57: V994 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb7c: V995 = SUB V992 V993
0xb7f: V996 = ADD 0x20 V995
0xb81: LOG V993 V996 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V980 V988
---
Entry stack: [V10, 0x113, V309, V311]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x113, V309, V311]

================================

Block 0xb82
[0xb82:0xb85]
---
Predecessors: [0xb1a]
Successors: [0x113]
---
0xb82 JUMPDEST
0xb83 POP
0xb84 POP
0xb85 JUMP
---
0xb82: JUMPDEST 
0xb85: JUMP 0x113
---
Entry stack: [V10, 0x113, V309, V311]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xb86
[0xb86:0xb8b]
---
Predecessors: [0x3d6]
Successors: [0x1d3]
---
0xb86 JUMPDEST
0xb87 PUSH1 0x4
0xb89 SLOAD
0xb8a DUP2
0xb8b JUMP
---
0xb86: JUMPDEST 
0xb87: V997 = 0x4
0xb89: V998 = S[0x4]
0xb8b: JUMP 0x1d3
---
Entry stack: [V10, 0x1d3]
Stack pops: 1
Stack additions: [S0, V998]
Exit stack: [V10, 0x1d3, V998]

================================

Block 0xb8c
[0xb8c:0xba2]
---
Predecessors: [0x3f8]
Successors: [0xba3, 0xba8]
---
0xb8c JUMPDEST
0xb8d PUSH1 0xc
0xb8f SLOAD
0xb90 CALLER
0xb91 PUSH1 0x1
0xb93 PUSH1 0xa0
0xb95 PUSH1 0x2
0xb97 EXP
0xb98 SUB
0xb99 SWAP1
0xb9a DUP2
0xb9b AND
0xb9c SWAP2
0xb9d AND
0xb9e EQ
0xb9f PUSH2 0xba8
0xba2 JUMPI
---
0xb8c: JUMPDEST 
0xb8d: V999 = 0xc
0xb8f: V1000 = S[0xc]
0xb90: V1001 = CALLER
0xb91: V1002 = 0x1
0xb93: V1003 = 0xa0
0xb95: V1004 = 0x2
0xb97: V1005 = EXP 0x2 0xa0
0xb98: V1006 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9b: V1007 = AND 0xffffffffffffffffffffffffffffffffffffffff V1001
0xb9d: V1008 = AND V1000 0xffffffffffffffffffffffffffffffffffffffff
0xb9e: V1009 = EQ V1008 V1007
0xb9f: V1010 = 0xba8
0xba2: JUMPI 0xba8 V1009
---
Entry stack: [V10, 0x113, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113, V335]

================================

Block 0xba3
[0xba3:0xba7]
---
Predecessors: [0xb8c]
Successors: []
---
0xba3 PUSH1 0x0
0xba5 PUSH1 0x0
0xba7 REVERT
---
0xba3: V1011 = 0x0
0xba5: V1012 = 0x0
0xba7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113, V335]

================================

Block 0xba8
[0xba8:0xbb3]
---
Predecessors: [0xb8c]
Successors: []
---
0xba8 JUMPDEST
0xba9 DUP1
0xbaa PUSH1 0x1
0xbac PUSH1 0xa0
0xbae PUSH1 0x2
0xbb0 EXP
0xbb1 SUB
0xbb2 AND
0xbb3 SELFDESTRUCT
---
0xba8: JUMPDEST 
0xbaa: V1013 = 0x1
0xbac: V1014 = 0xa0
0xbae: V1015 = 0x2
0xbb0: V1016 = EXP 0x2 0xa0
0xbb1: V1017 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb2: V1018 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0xbb3: SELFDESTRUCT V1018
---
Entry stack: [V10, 0x113, V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x113, V335]

================================

Block 0xbb4
[0xbb4:0xbb4]
---
Predecessors: []
Successors: [0xbb5]
---
0xbb4 JUMPDEST
---
0xbb4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbb5
[0xbb5:0xbb7]
---
Predecessors: [0xbb4]
Successors: []
Has unresolved jump.
---
0xbb5 JUMPDEST
0xbb6 POP
0xbb7 JUMP
---
0xbb5: JUMPDEST 
0xbb7: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xbb8
[0xbb8:0xbc6]
---
Predecessors: [0x416]
Successors: [0x41e]
---
0xbb8 JUMPDEST
0xbb9 PUSH1 0xb
0xbbb SLOAD
0xbbc PUSH1 0x1
0xbbe PUSH1 0xa0
0xbc0 PUSH1 0x2
0xbc2 EXP
0xbc3 SUB
0xbc4 AND
0xbc5 DUP2
0xbc6 JUMP
---
0xbb8: JUMPDEST 
0xbb9: V1019 = 0xb
0xbbb: V1020 = S[0xb]
0xbbc: V1021 = 0x1
0xbbe: V1022 = 0xa0
0xbc0: V1023 = 0x2
0xbc2: V1024 = EXP 0x2 0xa0
0xbc3: V1025 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc4: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1020
0xbc6: JUMP 0x41e
---
Entry stack: [V10, 0x41e]
Stack pops: 1
Stack additions: [S0, V1026]
Exit stack: [V10, 0x41e, V1026]

================================

Block 0xbc7
[0xbc7:0xbf2]
---
Predecessors: []
Successors: []
---
0xbc7 STOP
0xbc8 LOG1
0xbc9 PUSH6 0x627a7a723058
0xbd0 SHA3
0xbd1 MISSING 0xbb
0xbd2 MISSING 0x5e
0xbd3 DUP8
0xbd4 MISSING 0x26
0xbd5 PUSH9 0xe52057d0e046a14cac
0xbdf SWAP2
0xbe0 BLOCKHASH
0xbe1 BLOCKHASH
0xbe2 MISSING 0xa8
0xbe3 DUP7
0xbe4 MISSING 0xbc
0xbe5 MISSING 0x22
0xbe6 PUSH7 0x119af4c7933bf5
0xbee MISSING 0xa7
0xbef MISSING 0xe3
0xbf0 CALLCODE
0xbf1 STOP
0xbf2 MISSING 0x29
---
0xbc7: STOP 
0xbc8: LOG S0 S1 S2
0xbc9: V1027 = 0x627a7a723058
0xbd0: V1028 = SHA3 0x627a7a723058 S3
0xbd1: MISSING 0xbb
0xbd2: MISSING 0x5e
0xbd4: MISSING 0x26
0xbd5: V1029 = 0xe52057d0e046a14cac
0xbe0: V1030 = BLOCKHASH S1
0xbe1: V1031 = BLOCKHASH V1030
0xbe2: MISSING 0xa8
0xbe4: MISSING 0xbc
0xbe5: MISSING 0x22
0xbe6: V1032 = 0x119af4c7933bf5
0xbee: MISSING 0xa7
0xbef: MISSING 0xe3
0xbf0: V1033 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xbf1: STOP 
0xbf2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1028, S7, S0, S1, S2, S3, S4, S5, S6, S7, V1031, S0, 0xe52057d0e046a14cac, S6, S0, S1, S2, S3, S4, S5, S6, 0x119af4c7933bf5, V1033]
Exit stack: []

================================

Function 0:
Public function signature: 0x2f58015
Entry block: 0x115
Exit block: 0x6b6
Body: 0x110, 0x111, 0x113, 0x115, 0x11c, 0x11d, 0x5d3, 0x5df, 0x5e3, 0x5ef, 0x5f4, 0x676, 0x677, 0x684, 0x685, 0x6b6

Function 1:
Public function signature: 0x6fdde03
Entry block: 0x127
Exit block: 0x1a9
Body: 0x127, 0x12e, 0x12f, 0x137, 0x15d, 0x16b, 0x17d, 0x190, 0x1a9, 0x6ba, 0x6fa, 0x702, 0x715, 0x723, 0x737, 0x740

Function 2:
Public function signature: 0x27e235e3
Entry block: 0x1b7
Exit block: 0x1d3
Body: 0x1b7, 0x1be, 0x1bf, 0x1d3, 0x748

Function 3:
Public function signature: 0x313ce567
Entry block: 0x1e5
Exit block: 0x1f5
Body: 0x1e5, 0x1ec, 0x1ed, 0x1f5, 0x75a

Function 4:
Public function signature: 0x3ccfd60b
Entry block: 0x20b
Exit block: 0x113
Body: 0x113, 0x20b, 0x212, 0x213

Function 5:
Public function signature: 0x434f5f27
Entry block: 0x21d
Exit block: 0x239
Body: 0x21d, 0x224, 0x225, 0x239, 0x938

Function 6:
Public function signature: 0x5259347d
Entry block: 0x24d
Exit block: 0x113
Body: 0x113, 0x24d

Function 7:
Public function signature: 0x62f5ed61
Entry block: 0x257
Exit block: 0x113
Body: 0x113, 0x257, 0x94d, 0x964, 0x969, 0x975, 0x97a, 0x986, 0x98b, 0x994

Function 8:
Public function signature: 0x6360fc3f
Entry block: 0x261
Exit block: 0x239
Body: 0x239, 0x261, 0x268, 0x269, 0x996

Function 9:
Public function signature: 0x70144f8f
Entry block: 0x285
Exit block: 0x113
Body: 0x113, 0x285, 0x28c, 0x28d, 0x99f, 0x9b6, 0x9bb, 0x9c9

Function 10:
Public function signature: 0x70a08231
Entry block: 0x297
Exit block: 0x1d3
Body: 0x1d3, 0x297, 0x29e, 0x29f, 0x9cb

Function 11:
Public function signature: 0x943dfef1
Entry block: 0x2c5
Exit block: 0x1d3
Body: 0x1d3, 0x2c5, 0x2cc, 0x2cd, 0x9dd

Function 12:
Public function signature: 0x95d89b41
Entry block: 0x2e7
Exit block: 0x1a9
Body: 0x137, 0x15d, 0x16b, 0x17d, 0x190, 0x1a9, 0x2e7, 0x2ee, 0x2ef, 0x715, 0x723, 0x737, 0x740, 0x9e3, 0xa23, 0xa2b

Function 13:
Public function signature: 0xa089feea
Entry block: 0x377
Exit block: 0x239
Body: 0x239, 0x377, 0x37e, 0x37f, 0xa71

Function 14:
Public function signature: 0xa0ef91df
Entry block: 0x39b
Exit block: 0x113
Body: 0x110, 0x111, 0x113, 0x39b, 0x3a2, 0x3a3, 0xa7a, 0xa91, 0xa96, 0xac6

Function 15:
Public function signature: 0xa9059cbb
Entry block: 0x3ad
Exit block: 0x113
Body: 0x113, 0x3ad, 0x3b4, 0x3b5, 0xacb, 0xaed, 0xaf2, 0xb15, 0xb1a, 0xb82

Function 16:
Public function signature: 0xc3dac9a1
Entry block: 0x3ce
Exit block: 0x1d3
Body: 0x1d3, 0x3ce, 0x3d5, 0x3d6, 0xb86

Function 17:
Public function signature: 0xcbf0b0c0
Entry block: 0x3f0
Exit block: 0xba8
Body: 0x3f0, 0x3f7, 0x3f8, 0xb8c, 0xba3, 0xba8

Function 18:
Public function signature: 0xfc0c546a
Entry block: 0x40e
Exit block: 0x41e
Body: 0x40e, 0x415, 0x416, 0x41e, 0xbb8

Function 19:
Public fallback function
Entry block: 0x104
Exit block: 0x113
Body: 0x104, 0x108, 0x110, 0x111, 0x113

Function 20:
Private function
Entry block: 0x763
Exit block: 0x933
Body: 0x763, 0x777, 0x7b8, 0x7bd, 0x7f6, 0x7f9, 0x876, 0x884, 0x898, 0x899, 0x90f, 0x91d, 0x931, 0x932, 0x933

Function 21:
Private function
Entry block: 0x43a
Exit block: 0x5d1
Body: 0x43a, 0x449, 0x454, 0x4b7, 0x4c5, 0x532, 0x540, 0x556, 0x581, 0x589, 0x58a, 0x58f, 0x5a0, 0x5b1, 0x5d0, 0x5d1

