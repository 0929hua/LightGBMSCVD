Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xb6]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x7bfce37
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xb6
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x7bfce37
0x20: V14 = EQ V12 0x7bfce37
0x21: V15 = 0xb6
0x24: JUMPI 0xb6 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd0]
---
0x25 DUP1
0x26 PUSH4 0x1111cd24
0x2b EQ
0x2c PUSH2 0xd0
0x2f JUMPI
---
0x26: V16 = 0x1111cd24
0x2b: V17 = EQ 0x1111cd24 V12
0x2c: V18 = 0xd0
0x2f: JUMPI 0xd0 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xf5]
---
0x30 DUP1
0x31 PUSH4 0x1e1401f8
0x36 EQ
0x37 PUSH2 0xf5
0x3a JUMPI
---
0x31: V19 = 0x1e1401f8
0x36: V20 = EQ 0x1e1401f8 V12
0x37: V21 = 0xf5
0x3a: JUMPI 0xf5 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x12c]
---
0x3b DUP1
0x3c PUSH4 0x387a76ce
0x41 EQ
0x42 PUSH2 0x12c
0x45 JUMPI
---
0x3c: V22 = 0x387a76ce
0x41: V23 = EQ 0x387a76ce V12
0x42: V24 = 0x12c
0x45: JUMPI 0x12c V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x158]
---
0x46 DUP1
0x47 PUSH4 0x3ccfd60b
0x4c EQ
0x4d PUSH2 0x158
0x50 JUMPI
---
0x47: V25 = 0x3ccfd60b
0x4c: V26 = EQ 0x3ccfd60b V12
0x4d: V27 = 0x158
0x50: JUMPI 0x158 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x16a]
---
0x51 DUP1
0x52 PUSH4 0x40ab7b8c
0x57 EQ
0x58 PUSH2 0x16a
0x5b JUMPI
---
0x52: V28 = 0x40ab7b8c
0x57: V29 = EQ 0x40ab7b8c V12
0x58: V30 = 0x16a
0x5b: JUMPI 0x16a V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x196]
---
0x5c DUP1
0x5d PUSH4 0x43d726d6
0x62 EQ
0x63 PUSH2 0x196
0x66 JUMPI
---
0x5d: V31 = 0x43d726d6
0x62: V32 = EQ 0x43d726d6 V12
0x63: V33 = 0x196
0x66: JUMPI 0x196 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1a8]
---
0x67 DUP1
0x68 PUSH4 0x55f57510
0x6d EQ
0x6e PUSH2 0x1a8
0x71 JUMPI
---
0x68: V34 = 0x55f57510
0x6d: V35 = EQ 0x55f57510 V12
0x6e: V36 = 0x1a8
0x71: JUMPI 0x1a8 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1d6]
---
0x72 DUP1
0x73 PUSH4 0x65483f69
0x78 EQ
0x79 PUSH2 0x1d6
0x7c JUMPI
---
0x73: V37 = 0x65483f69
0x78: V38 = EQ 0x65483f69 V12
0x79: V39 = 0x1d6
0x7c: JUMPI 0x1d6 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x204]
---
0x7d DUP1
0x7e PUSH4 0x86d1a69f
0x83 EQ
0x84 PUSH2 0x204
0x87 JUMPI
---
0x7e: V40 = 0x86d1a69f
0x83: V41 = EQ 0x86d1a69f V12
0x84: V42 = 0x204
0x87: JUMPI 0x204 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x216]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x216
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x216
0x92: JUMPI 0x216 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x242]
---
0x93 DUP1
0x94 PUSH4 0xa5a9ba8d
0x99 EQ
0x9a PUSH2 0x242
0x9d JUMPI
---
0x94: V46 = 0xa5a9ba8d
0x99: V47 = EQ 0xa5a9ba8d V12
0x9a: V48 = 0x242
0x9d: JUMPI 0x242 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x267]
---
0x9e DUP1
0x9f PUSH4 0xb8066bcb
0xa4 EQ
0xa5 PUSH2 0x267
0xa8 JUMPI
---
0x9f: V49 = 0xb8066bcb
0xa4: V50 = EQ 0xb8066bcb V12
0xa5: V51 = 0x267
0xa8: JUMPI 0x267 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x158]
---
0xa9 DUP1
0xaa PUSH4 0xd75352e1
0xaf EQ
0xb0 PUSH2 0x158
0xb3 JUMPI
---
0xaa: V52 = 0xd75352e1
0xaf: V53 = EQ 0xd75352e1 V12
0xb0: V54 = 0x158
0xb3: JUMPI 0x158 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: [0x0, 0xa9]
Successors: []
---
0xb4 JUMPDEST
0xb5 INVALID
---
0xb4: JUMPDEST 
0xb5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0xb]
Successors: [0x2a5]
---
0xb6 JUMPDEST
0xb7 PUSH2 0xbe
0xba PUSH2 0x2a5
0xbd JUMP
---
0xb6: JUMPDEST 
0xb7: V55 = 0xbe
0xba: V56 = 0x2a5
0xbd: JUMP 0x2a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe]
Exit stack: [V12, 0xbe]

================================

Block 0xbe
[0xbe:0xcf]
---
Predecessors: [0x5c6, 0x6c6, 0x761, 0x8e4, 0x97c]
Successors: []
---
0xbe JUMPDEST
0xbf PUSH1 0x40
0xc1 DUP1
0xc2 MLOAD
0xc3 SWAP2
0xc4 DUP3
0xc5 MSTORE
0xc6 MLOAD
0xc7 SWAP1
0xc8 DUP2
0xc9 SWAP1
0xca SUB
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP1
0xcf RETURN
---
0xbe: JUMPDEST 
0xbf: V57 = 0x40
0xc2: V58 = M[0x40]
0xc5: M[V58] = S0
0xc6: V59 = M[0x40]
0xca: V60 = SUB V58 V59
0xcb: V61 = 0x20
0xcd: V62 = ADD 0x20 V60
0xcf: RETURN V59 V62
---
Entry stack: [V12, 0x168, V703, V722, V726, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x168, V703, V722, V726, S2, S1]

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0x25]
Successors: [0xd7, 0xd8]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xd8
0xd6 JUMPI
---
0xd0: JUMPDEST 
0xd1: V63 = CALLVALUE
0xd2: V64 = ISZERO V63
0xd3: V65 = 0xd8
0xd6: JUMPI 0xd8 V64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd7
[0xd7:0xd7]
---
Predecessors: [0xd0]
Successors: []
---
0xd7 INVALID
---
0xd7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xd0]
Successors: [0x5cb]
---
0xd8 JUMPDEST
0xd9 PUSH2 0xbe
0xdc PUSH1 0x4
0xde CALLDATALOAD
0xdf PUSH2 0x5cb
0xe2 JUMP
---
0xd8: JUMPDEST 
0xd9: V66 = 0xbe
0xdc: V67 = 0x4
0xde: V68 = CALLDATALOAD 0x4
0xdf: V69 = 0x5cb
0xe2: JUMP 0x5cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe, V68]
Exit stack: [V12, 0xbe, V68]

================================

Block 0xe3
[0xe3:0xf4]
---
Predecessors: []
Successors: []
---
0xe3 JUMPDEST
0xe4 PUSH1 0x40
0xe6 DUP1
0xe7 MLOAD
0xe8 SWAP2
0xe9 DUP3
0xea MSTORE
0xeb MLOAD
0xec SWAP1
0xed DUP2
0xee SWAP1
0xef SUB
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP1
0xf4 RETURN
---
0xe3: JUMPDEST 
0xe4: V70 = 0x40
0xe7: V71 = M[0x40]
0xea: M[V71] = S0
0xeb: V72 = M[0x40]
0xef: V73 = SUB V71 V72
0xf0: V74 = 0x20
0xf2: V75 = ADD 0x20 V73
0xf4: RETURN V72 V75
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xf5
[0xf5:0xfb]
---
Predecessors: [0x30]
Successors: [0xfc, 0xfd]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 ISZERO
0xf8 PUSH2 0xfd
0xfb JUMPI
---
0xf5: JUMPDEST 
0xf6: V76 = CALLVALUE
0xf7: V77 = ISZERO V76
0xf8: V78 = 0xfd
0xfb: JUMPI 0xfd V77
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc
[0xfc:0xfc]
---
Predecessors: [0xf5]
Successors: []
---
0xfc INVALID
---
0xfc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfd
[0xfd:0x119]
---
Predecessors: [0xf5]
Successors: [0x6cc]
---
0xfd JUMPDEST
0xfe PUSH2 0xbe
0x101 PUSH1 0x1
0x103 PUSH1 0xa0
0x105 PUSH1 0x2
0x107 EXP
0x108 SUB
0x109 PUSH1 0x4
0x10b CALLDATALOAD
0x10c DUP2
0x10d AND
0x10e SWAP1
0x10f PUSH1 0x24
0x111 CALLDATALOAD
0x112 AND
0x113 PUSH1 0x44
0x115 CALLDATALOAD
0x116 PUSH2 0x6cc
0x119 JUMP
---
0xfd: JUMPDEST 
0xfe: V79 = 0xbe
0x101: V80 = 0x1
0x103: V81 = 0xa0
0x105: V82 = 0x2
0x107: V83 = EXP 0x2 0xa0
0x108: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x109: V85 = 0x4
0x10b: V86 = CALLDATALOAD 0x4
0x10d: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x10f: V88 = 0x24
0x111: V89 = CALLDATALOAD 0x24
0x112: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x113: V91 = 0x44
0x115: V92 = CALLDATALOAD 0x44
0x116: V93 = 0x6cc
0x119: JUMP 0x6cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe, V87, V90, V92]
Exit stack: [V12, 0xbe, V87, V90, V92]

================================

Block 0x11a
[0x11a:0x12b]
---
Predecessors: []
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d DUP1
0x11e MLOAD
0x11f SWAP2
0x120 DUP3
0x121 MSTORE
0x122 MLOAD
0x123 SWAP1
0x124 DUP2
0x125 SWAP1
0x126 SUB
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP1
0x12b RETURN
---
0x11a: JUMPDEST 
0x11b: V94 = 0x40
0x11e: V95 = M[0x40]
0x121: M[V95] = S0
0x122: V96 = M[0x40]
0x126: V97 = SUB V95 V96
0x127: V98 = 0x20
0x129: V99 = ADD 0x20 V97
0x12b: RETURN V96 V99
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x12c
[0x12c:0x132]
---
Predecessors: [0x3b]
Successors: [0x133, 0x134]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e ISZERO
0x12f PUSH2 0x134
0x132 JUMPI
---
0x12c: JUMPDEST 
0x12d: V100 = CALLVALUE
0x12e: V101 = ISZERO V100
0x12f: V102 = 0x134
0x132: JUMPI 0x134 V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x133]
---
Predecessors: [0x12c]
Successors: []
---
0x133 INVALID
---
0x133: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x134
[0x134:0x13b]
---
Predecessors: [0x12c]
Successors: [0x768]
---
0x134 JUMPDEST
0x135 PUSH2 0x13c
0x138 PUSH2 0x768
0x13b JUMP
---
0x134: JUMPDEST 
0x135: V103 = 0x13c
0x138: V104 = 0x768
0x13b: JUMP 0x768
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V12, 0x13c]

================================

Block 0x13c
[0x13c:0x157]
---
Predecessors: [0x768, 0x77a, 0x9ad, 0xabd]
Successors: []
---
0x13c JUMPDEST
0x13d PUSH1 0x40
0x13f DUP1
0x140 MLOAD
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 SWAP1
0x14a SWAP3
0x14b AND
0x14c DUP3
0x14d MSTORE
0x14e MLOAD
0x14f SWAP1
0x150 DUP2
0x151 SWAP1
0x152 SUB
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 RETURN
---
0x13c: JUMPDEST 
0x13d: V105 = 0x40
0x140: V106 = M[0x40]
0x141: V107 = 0x1
0x143: V108 = 0xa0
0x145: V109 = 0x2
0x147: V110 = EXP 0x2 0xa0
0x148: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b: V112 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x14d: M[V106] = V112
0x14e: V113 = M[0x40]
0x152: V114 = SUB V106 V113
0x153: V115 = 0x20
0x155: V116 = ADD 0x20 V114
0x157: RETURN V113 V116
---
Entry stack: [V12, 0x13c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x13c]

================================

Block 0x158
[0x158:0x15e]
---
Predecessors: [0x46, 0xa9]
Successors: [0x15f, 0x160]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a ISZERO
0x15b PUSH2 0x160
0x15e JUMPI
---
0x158: JUMPDEST 
0x159: V117 = CALLVALUE
0x15a: V118 = ISZERO V117
0x15b: V119 = 0x160
0x15e: JUMPI 0x160 V118
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15f
[0x15f:0x15f]
---
Predecessors: [0x158]
Successors: []
---
0x15f INVALID
---
0x15f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x158, 0x277]
Successors: [0x777]
---
0x160 JUMPDEST
0x161 PUSH2 0x168
0x164 PUSH2 0x777
0x167 JUMP
---
0x160: JUMPDEST 
0x161: V120 = 0x168
0x164: V121 = 0x777
0x167: JUMP 0x777
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V12, 0x168]

================================

Block 0x168
[0x168:0x169]
---
Predecessors: [0x778, 0x8e1]
Successors: []
---
0x168 JUMPDEST
0x169 STOP
---
0x168: JUMPDEST 
0x169: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x170]
---
Predecessors: [0x51]
Successors: [0x171, 0x172]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c ISZERO
0x16d PUSH2 0x172
0x170 JUMPI
---
0x16a: JUMPDEST 
0x16b: V122 = CALLVALUE
0x16c: V123 = ISZERO V122
0x16d: V124 = 0x172
0x170: JUMPI 0x172 V123
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x171
[0x171:0x171]
---
Predecessors: [0x16a]
Successors: []
---
0x171 INVALID
---
0x171: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x172
[0x172:0x179]
---
Predecessors: [0x16a]
Successors: [0x77a]
---
0x172 JUMPDEST
0x173 PUSH2 0x13c
0x176 PUSH2 0x77a
0x179 JUMP
---
0x172: JUMPDEST 
0x173: V125 = 0x13c
0x176: V126 = 0x77a
0x179: JUMP 0x77a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V12, 0x13c]

================================

Block 0x17a
[0x17a:0x195]
---
Predecessors: []
Successors: []
---
0x17a JUMPDEST
0x17b PUSH1 0x40
0x17d DUP1
0x17e MLOAD
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 SWAP1
0x188 SWAP3
0x189 AND
0x18a DUP3
0x18b MSTORE
0x18c MLOAD
0x18d SWAP1
0x18e DUP2
0x18f SWAP1
0x190 SUB
0x191 PUSH1 0x20
0x193 ADD
0x194 SWAP1
0x195 RETURN
---
0x17a: JUMPDEST 
0x17b: V127 = 0x40
0x17e: V128 = M[0x40]
0x17f: V129 = 0x1
0x181: V130 = 0xa0
0x183: V131 = 0x2
0x185: V132 = EXP 0x2 0xa0
0x186: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V134 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x18b: M[V128] = V134
0x18c: V135 = M[0x40]
0x190: V136 = SUB V128 V135
0x191: V137 = 0x20
0x193: V138 = ADD 0x20 V136
0x195: RETURN V135 V138
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x196
[0x196:0x19c]
---
Predecessors: [0x5c]
Successors: [0x19d, 0x19e]
---
0x196 JUMPDEST
0x197 CALLVALUE
0x198 ISZERO
0x199 PUSH2 0x19e
0x19c JUMPI
---
0x196: JUMPDEST 
0x197: V139 = CALLVALUE
0x198: V140 = ISZERO V139
0x199: V141 = 0x19e
0x19c: JUMPI 0x19e V140
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19d
[0x19d:0x19d]
---
Predecessors: [0x196]
Successors: []
---
0x19d INVALID
---
0x19d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19e
[0x19e:0x1a5]
---
Predecessors: [0x196]
Successors: [0x789]
---
0x19e JUMPDEST
0x19f PUSH2 0x168
0x1a2 PUSH2 0x789
0x1a5 JUMP
---
0x19e: JUMPDEST 
0x19f: V142 = 0x168
0x1a2: V143 = 0x789
0x1a5: JUMP 0x789
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V12, 0x168]

================================

Block 0x1a6
[0x1a6:0x1a7]
---
Predecessors: []
Successors: []
---
0x1a6 JUMPDEST
0x1a7 STOP
---
0x1a6: JUMPDEST 
0x1a7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0x67]
Successors: [0x1af, 0x1b0]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa ISZERO
0x1ab PUSH2 0x1b0
0x1ae JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V144 = CALLVALUE
0x1aa: V145 = ISZERO V144
0x1ab: V146 = 0x1b0
0x1ae: JUMPI 0x1b0 V145
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1af]
---
Predecessors: [0x1a8]
Successors: []
---
0x1af INVALID
---
0x1af: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1c3]
---
Predecessors: [0x1a8]
Successors: [0x8e4]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0xbe
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc PUSH1 0x4
0x1be CALLDATALOAD
0x1bf AND
0x1c0 PUSH2 0x8e4
0x1c3 JUMP
---
0x1b0: JUMPDEST 
0x1b1: V147 = 0xbe
0x1b4: V148 = 0x1
0x1b6: V149 = 0xa0
0x1b8: V150 = 0x2
0x1ba: V151 = EXP 0x2 0xa0
0x1bb: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bc: V153 = 0x4
0x1be: V154 = CALLDATALOAD 0x4
0x1bf: V155 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V156 = 0x8e4
0x1c3: JUMP 0x8e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe, V155]
Exit stack: [V12, 0xbe, V155]

================================

Block 0x1c4
[0x1c4:0x1d5]
---
Predecessors: []
Successors: []
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x40
0x1c7 DUP1
0x1c8 MLOAD
0x1c9 SWAP2
0x1ca DUP3
0x1cb MSTORE
0x1cc MLOAD
0x1cd SWAP1
0x1ce DUP2
0x1cf SWAP1
0x1d0 SUB
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP1
0x1d5 RETURN
---
0x1c4: JUMPDEST 
0x1c5: V157 = 0x40
0x1c8: V158 = M[0x40]
0x1cb: M[V158] = S0
0x1cc: V159 = M[0x40]
0x1d0: V160 = SUB V158 V159
0x1d1: V161 = 0x20
0x1d3: V162 = ADD 0x20 V160
0x1d5: RETURN V159 V162
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d6
[0x1d6:0x1dc]
---
Predecessors: [0x72]
Successors: [0x1dd, 0x1de]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 ISZERO
0x1d9 PUSH2 0x1de
0x1dc JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V163 = CALLVALUE
0x1d8: V164 = ISZERO V163
0x1d9: V165 = 0x1de
0x1dc: JUMPI 0x1de V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dd
[0x1dd:0x1dd]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dd INVALID
---
0x1dd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1de
[0x1de:0x1f1]
---
Predecessors: [0x1d6]
Successors: [0x8f6]
---
0x1de JUMPDEST
0x1df PUSH2 0xbe
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea PUSH1 0x4
0x1ec CALLDATALOAD
0x1ed AND
0x1ee PUSH2 0x8f6
0x1f1 JUMP
---
0x1de: JUMPDEST 
0x1df: V166 = 0xbe
0x1e2: V167 = 0x1
0x1e4: V168 = 0xa0
0x1e6: V169 = 0x2
0x1e8: V170 = EXP 0x2 0xa0
0x1e9: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V172 = 0x4
0x1ec: V173 = CALLDATALOAD 0x4
0x1ed: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V175 = 0x8f6
0x1f1: JUMP 0x8f6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe, V174]
Exit stack: [V12, 0xbe, V174]

================================

Block 0x1f2
[0x1f2:0x203]
---
Predecessors: []
Successors: []
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x40
0x1f5 DUP1
0x1f6 MLOAD
0x1f7 SWAP2
0x1f8 DUP3
0x1f9 MSTORE
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd SWAP1
0x1fe SUB
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP1
0x203 RETURN
---
0x1f2: JUMPDEST 
0x1f3: V176 = 0x40
0x1f6: V177 = M[0x40]
0x1f9: M[V177] = S0
0x1fa: V178 = M[0x40]
0x1fe: V179 = SUB V177 V178
0x1ff: V180 = 0x20
0x201: V181 = ADD 0x20 V179
0x203: RETURN V178 V181
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x204
[0x204:0x20a]
---
Predecessors: [0x7d]
Successors: [0x20b, 0x20c]
---
0x204 JUMPDEST
0x205 CALLVALUE
0x206 ISZERO
0x207 PUSH2 0x20c
0x20a JUMPI
---
0x204: JUMPDEST 
0x205: V182 = CALLVALUE
0x206: V183 = ISZERO V182
0x207: V184 = 0x20c
0x20a: JUMPI 0x20c V183
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20b
[0x20b:0x20b]
---
Predecessors: [0x204]
Successors: []
---
0x20b INVALID
---
0x20b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20c
[0x20c:0x213]
---
Predecessors: [0x204]
Successors: [0x981]
---
0x20c JUMPDEST
0x20d PUSH2 0x168
0x210 PUSH2 0x981
0x213 JUMP
---
0x20c: JUMPDEST 
0x20d: V185 = 0x168
0x210: V186 = 0x981
0x213: JUMP 0x981
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V12, 0x168]

================================

Block 0x214
[0x214:0x215]
---
Predecessors: []
Successors: []
---
0x214 JUMPDEST
0x215 STOP
---
0x214: JUMPDEST 
0x215: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x216
[0x216:0x21c]
---
Predecessors: [0x88]
Successors: [0x21d, 0x21e]
---
0x216 JUMPDEST
0x217 CALLVALUE
0x218 ISZERO
0x219 PUSH2 0x21e
0x21c JUMPI
---
0x216: JUMPDEST 
0x217: V187 = CALLVALUE
0x218: V188 = ISZERO V187
0x219: V189 = 0x21e
0x21c: JUMPI 0x21e V188
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21d
[0x21d:0x21d]
---
Predecessors: [0x216]
Successors: []
---
0x21d INVALID
---
0x21d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x216]
Successors: [0x9ad]
---
0x21e JUMPDEST
0x21f PUSH2 0x13c
0x222 PUSH2 0x9ad
0x225 JUMP
---
0x21e: JUMPDEST 
0x21f: V190 = 0x13c
0x222: V191 = 0x9ad
0x225: JUMP 0x9ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V12, 0x13c]

================================

Block 0x226
[0x226:0x241]
---
Predecessors: []
Successors: []
---
0x226 JUMPDEST
0x227 PUSH1 0x40
0x229 DUP1
0x22a MLOAD
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 SWAP1
0x234 SWAP3
0x235 AND
0x236 DUP3
0x237 MSTORE
0x238 MLOAD
0x239 SWAP1
0x23a DUP2
0x23b SWAP1
0x23c SUB
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP1
0x241 RETURN
---
0x226: JUMPDEST 
0x227: V192 = 0x40
0x22a: V193 = M[0x40]
0x22b: V194 = 0x1
0x22d: V195 = 0xa0
0x22f: V196 = 0x2
0x231: V197 = EXP 0x2 0xa0
0x232: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V199 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x237: M[V193] = V199
0x238: V200 = M[0x40]
0x23c: V201 = SUB V193 V200
0x23d: V202 = 0x20
0x23f: V203 = ADD 0x20 V201
0x241: RETURN V200 V203
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x242
[0x242:0x248]
---
Predecessors: [0x93]
Successors: [0x249, 0x24a]
---
0x242 JUMPDEST
0x243 CALLVALUE
0x244 ISZERO
0x245 PUSH2 0x24a
0x248 JUMPI
---
0x242: JUMPDEST 
0x243: V204 = CALLVALUE
0x244: V205 = ISZERO V204
0x245: V206 = 0x24a
0x248: JUMPI 0x24a V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x249
[0x249:0x249]
---
Predecessors: [0x242]
Successors: []
---
0x249 INVALID
---
0x249: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24a
[0x24a:0x254]
---
Predecessors: [0x242]
Successors: [0x9bc]
---
0x24a JUMPDEST
0x24b PUSH2 0xbe
0x24e PUSH1 0x4
0x250 CALLDATALOAD
0x251 PUSH2 0x9bc
0x254 JUMP
---
0x24a: JUMPDEST 
0x24b: V207 = 0xbe
0x24e: V208 = 0x4
0x250: V209 = CALLDATALOAD 0x4
0x251: V210 = 0x9bc
0x254: JUMP 0x9bc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe, V209]
Exit stack: [V12, 0xbe, V209]

================================

Block 0x255
[0x255:0x266]
---
Predecessors: []
Successors: []
---
0x255 JUMPDEST
0x256 PUSH1 0x40
0x258 DUP1
0x259 MLOAD
0x25a SWAP2
0x25b DUP3
0x25c MSTORE
0x25d MLOAD
0x25e SWAP1
0x25f DUP2
0x260 SWAP1
0x261 SUB
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP1
0x266 RETURN
---
0x255: JUMPDEST 
0x256: V211 = 0x40
0x259: V212 = M[0x40]
0x25c: M[V212] = S0
0x25d: V213 = M[0x40]
0x261: V214 = SUB V212 V213
0x262: V215 = 0x20
0x264: V216 = ADD 0x20 V214
0x266: RETURN V213 V216
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x267
[0x267:0x26d]
---
Predecessors: [0x9e]
Successors: [0x26e, 0x26f]
---
0x267 JUMPDEST
0x268 CALLVALUE
0x269 ISZERO
0x26a PUSH2 0x26f
0x26d JUMPI
---
0x267: JUMPDEST 
0x268: V217 = CALLVALUE
0x269: V218 = ISZERO V217
0x26a: V219 = 0x26f
0x26d: JUMPI 0x26f V218
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26e
[0x26e:0x26e]
---
Predecessors: [0x267]
Successors: []
---
0x26e INVALID
---
0x26e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26f
[0x26f:0x276]
---
Predecessors: [0x267]
Successors: [0xabd]
---
0x26f JUMPDEST
0x270 PUSH2 0x13c
0x273 PUSH2 0xabd
0x276 JUMP
---
0x26f: JUMPDEST 
0x270: V220 = 0x13c
0x273: V221 = 0xabd
0x276: JUMP 0xabd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V12, 0x13c]

================================

Block 0x277
[0x277:0x299]
---
Predecessors: []
Successors: [0x160, 0x29a]
---
0x277 JUMPDEST
0x278 PUSH1 0x40
0x27a DUP1
0x27b MLOAD
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 SWAP1
0x285 SWAP3
0x286 AND
0x287 DUP3
0x288 MSTORE
0x289 MLOAD
0x28a SWAP1
0x28b DUP2
0x28c SWAP1
0x28d SUB
0x28e PUSH1 0x20
0x290 ADD
0x291 SWAP1
0x292 RETURN
0x293 JUMPDEST
0x294 CALLVALUE
0x295 ISZERO
0x296 PUSH2 0x160
0x299 JUMPI
---
0x277: JUMPDEST 
0x278: V222 = 0x40
0x27b: V223 = M[0x40]
0x27c: V224 = 0x1
0x27e: V225 = 0xa0
0x280: V226 = 0x2
0x282: V227 = EXP 0x2 0xa0
0x283: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V229 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x288: M[V223] = V229
0x289: V230 = M[0x40]
0x28d: V231 = SUB V223 V230
0x28e: V232 = 0x20
0x290: V233 = ADD 0x20 V231
0x292: RETURN V230 V233
0x293: JUMPDEST 
0x294: V234 = CALLVALUE
0x295: V235 = ISZERO V234
0x296: V236 = 0x160
0x299: JUMPI 0x160 V235
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x29a
[0x29a:0x2a2]
---
Predecessors: [0x277]
Successors: [0x777]
---
0x29a INVALID
0x29b JUMPDEST
0x29c PUSH2 0x168
0x29f PUSH2 0x777
0x2a2 JUMP
---
0x29a: INVALID 
0x29b: JUMPDEST 
0x29c: V237 = 0x168
0x29f: V238 = 0x777
0x2a2: JUMP 0x777
---
Entry stack: []
Stack pops: 0
Stack additions: [0x168]
Exit stack: []

================================

Block 0x2a3
[0x2a3:0x2a4]
---
Predecessors: []
Successors: []
---
0x2a3 JUMPDEST
0x2a4 STOP
---
0x2a3: JUMPDEST 
0x2a4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a5
[0x2a5:0x2fb]
---
Predecessors: [0xb6]
Successors: [0x2fc, 0x2fd]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x0
0x2a8 PUSH1 0x0
0x2aa PUSH1 0x0
0x2ac PUSH1 0x2
0x2ae PUSH1 0x0
0x2b0 SWAP1
0x2b1 SLOAD
0x2b2 SWAP1
0x2b3 PUSH2 0x100
0x2b6 EXP
0x2b7 SWAP1
0x2b8 DIV
0x2b9 PUSH1 0x1
0x2bb PUSH1 0xa0
0x2bd PUSH1 0x2
0x2bf EXP
0x2c0 SUB
0x2c1 AND
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0xa0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 SUB
0x2ca AND
0x2cb PUSH4 0xd0e30db0
0x2d0 CALLVALUE
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP3
0x2d5 PUSH4 0xffffffff
0x2da AND
0x2db PUSH1 0xe0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 MUL
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x4
0x2e5 ADD
0x2e6 DUP1
0x2e7 SWAP1
0x2e8 POP
0x2e9 PUSH1 0x0
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee DUP1
0x2ef DUP4
0x2f0 SUB
0x2f1 DUP2
0x2f2 DUP6
0x2f3 DUP9
0x2f4 DUP1
0x2f5 EXTCODESIZE
0x2f6 ISZERO
0x2f7 ISZERO
0x2f8 PUSH2 0x2fd
0x2fb JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V239 = 0x0
0x2a8: V240 = 0x0
0x2aa: V241 = 0x0
0x2ac: V242 = 0x2
0x2ae: V243 = 0x0
0x2b1: V244 = S[0x2]
0x2b3: V245 = 0x100
0x2b6: V246 = EXP 0x100 0x0
0x2b8: V247 = DIV V244 0x1
0x2b9: V248 = 0x1
0x2bb: V249 = 0xa0
0x2bd: V250 = 0x2
0x2bf: V251 = EXP 0x2 0xa0
0x2c0: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c1: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2c2: V254 = 0x1
0x2c4: V255 = 0xa0
0x2c6: V256 = 0x2
0x2c8: V257 = EXP 0x2 0xa0
0x2c9: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ca: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x2cb: V260 = 0xd0e30db0
0x2d0: V261 = CALLVALUE
0x2d1: V262 = 0x40
0x2d3: V263 = M[0x40]
0x2d5: V264 = 0xffffffff
0x2da: V265 = AND 0xffffffff 0xd0e30db0
0x2db: V266 = 0xe0
0x2dd: V267 = 0x2
0x2df: V268 = EXP 0x2 0xe0
0x2e0: V269 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x2e2: M[V263] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x2e3: V270 = 0x4
0x2e5: V271 = ADD 0x4 V263
0x2e9: V272 = 0x0
0x2eb: V273 = 0x40
0x2ed: V274 = M[0x40]
0x2f0: V275 = SUB V271 V274
0x2f5: V276 = EXTCODESIZE V259
0x2f6: V277 = ISZERO V276
0x2f7: V278 = ISZERO V277
0x2f8: V279 = 0x2fd
0x2fb: JUMPI 0x2fd V278
---
Entry stack: [V12, 0xbe]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271, 0x0, V274, V275, V274, V261, V259]
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271, 0x0, V274, V275, V274, V261, V259]

================================

Block 0x2fc
[0x2fc:0x2fc]
---
Predecessors: [0x2a5]
Successors: []
---
0x2fc INVALID
---
0x2fc: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271, 0x0, V274, V275, V274, V261, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271, 0x0, V274, V275, V274, V261, V259]

================================

Block 0x2fd
[0x2fd:0x309]
---
Predecessors: [0x2a5]
Successors: [0x30a, 0x30b]
---
0x2fd JUMPDEST
0x2fe PUSH2 0x25ee
0x301 GAS
0x302 SUB
0x303 CALL
0x304 ISZERO
0x305 ISZERO
0x306 PUSH2 0x30b
0x309 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V280 = 0x25ee
0x301: V281 = GAS
0x302: V282 = SUB V281 0x25ee
0x303: V283 = CALL V282 V259 V261 V274 V275 V274 0x0
0x304: V284 = ISZERO V283
0x305: V285 = ISZERO V284
0x306: V286 = 0x30b
0x309: JUMPI 0x30b V285
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271, 0x0, V274, V275, V274, V261, V259]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271]

================================

Block 0x30a
[0x30a:0x30a]
---
Predecessors: [0x2fd]
Successors: []
---
0x30a INVALID
---
0x30a: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271]

================================

Block 0x30b
[0x30b:0x385]
---
Predecessors: [0x2fd]
Successors: [0x386, 0x387]
---
0x30b JUMPDEST
0x30c POP
0x30d POP
0x30e PUSH1 0x2
0x310 SLOAD
0x311 PUSH1 0x1
0x313 SLOAD
0x314 PUSH1 0x40
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0x0
0x31a PUSH1 0x20
0x31c SWAP2
0x31d DUP3
0x31e ADD
0x31f DUP2
0x320 SWAP1
0x321 MSTORE
0x322 DUP3
0x323 MLOAD
0x324 PUSH32 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x1
0x349 PUSH1 0xa0
0x34b PUSH1 0x2
0x34d EXP
0x34e SUB
0x34f SWAP5
0x350 DUP6
0x351 AND
0x352 PUSH1 0x4
0x354 DUP3
0x355 ADD
0x356 MSTORE
0x357 PUSH1 0x24
0x359 DUP2
0x35a ADD
0x35b DUP3
0x35c SWAP1
0x35d MSTORE
0x35e SWAP3
0x35f MLOAD
0x360 SWAP4
0x361 SWAP1
0x362 SWAP5
0x363 AND
0x364 SWAP6
0x365 POP
0x366 PUSH4 0x95ea7b3
0x36b SWAP5
0x36c POP
0x36d PUSH1 0x44
0x36f DUP1
0x370 DUP4
0x371 ADD
0x372 SWAP5
0x373 SWAP2
0x374 SWAP4
0x375 SWAP3
0x376 DUP4
0x377 SWAP1
0x378 SUB
0x379 ADD
0x37a SWAP1
0x37b DUP3
0x37c SWAP1
0x37d DUP8
0x37e DUP1
0x37f EXTCODESIZE
0x380 ISZERO
0x381 ISZERO
0x382 PUSH2 0x387
0x385 JUMPI
---
0x30b: JUMPDEST 
0x30e: V287 = 0x2
0x310: V288 = S[0x2]
0x311: V289 = 0x1
0x313: V290 = S[0x1]
0x314: V291 = 0x40
0x317: V292 = M[0x40]
0x318: V293 = 0x0
0x31a: V294 = 0x20
0x31e: V295 = ADD 0x20 V292
0x321: M[V295] = 0x0
0x323: V296 = M[0x40]
0x324: V297 = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x346: M[V296] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x347: V298 = 0x1
0x349: V299 = 0xa0
0x34b: V300 = 0x2
0x34d: V301 = EXP 0x2 0xa0
0x34e: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x352: V304 = 0x4
0x355: V305 = ADD V296 0x4
0x356: M[V305] = V303
0x357: V306 = 0x24
0x35a: V307 = ADD V296 0x24
0x35d: M[V307] = 0x0
0x35f: V308 = M[0x40]
0x363: V309 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x366: V310 = 0x95ea7b3
0x36d: V311 = 0x44
0x371: V312 = ADD V296 0x44
0x378: V313 = SUB V296 V308
0x379: V314 = ADD V313 0x44
0x37f: V315 = EXTCODESIZE V309
0x380: V316 = ISZERO V315
0x381: V317 = ISZERO V316
0x382: V318 = 0x387
0x385: JUMPI 0x387 V317
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V259, 0xd0e30db0, V261, V271]
Stack pops: 4
Stack additions: [V309, 0x95ea7b3, V312, 0x20, V308, V314, V308, 0x0, V309]
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V309, 0x95ea7b3, V312, 0x20, V308, V314, V308, 0x0, V309]

================================

Block 0x386
[0x386:0x386]
---
Predecessors: [0x30b]
Successors: []
---
0x386 INVALID
---
0x386: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V309, 0x95ea7b3, V312, 0x20, V308, V314, V308, 0x0, V309]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V309, 0x95ea7b3, V312, 0x20, V308, V314, V308, 0x0, V309]

================================

Block 0x387
[0x387:0x393]
---
Predecessors: [0x30b]
Successors: [0x394, 0x395]
---
0x387 JUMPDEST
0x388 PUSH2 0x2c6
0x38b GAS
0x38c SUB
0x38d CALL
0x38e ISZERO
0x38f ISZERO
0x390 PUSH2 0x395
0x393 JUMPI
---
0x387: JUMPDEST 
0x388: V319 = 0x2c6
0x38b: V320 = GAS
0x38c: V321 = SUB V320 0x2c6
0x38d: V322 = CALL V321 V309 0x0 V308 V314 V308 0x20
0x38e: V323 = ISZERO V322
0x38f: V324 = ISZERO V323
0x390: V325 = 0x395
0x393: JUMPI 0x395 V324
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V309, 0x95ea7b3, V312, 0x20, V308, V314, V308, 0x0, V309]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V309, 0x95ea7b3, V312]

================================

Block 0x394
[0x394:0x394]
---
Predecessors: [0x387]
Successors: []
---
0x394 INVALID
---
0x394: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V309, 0x95ea7b3, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V309, 0x95ea7b3, V312]

================================

Block 0x395
[0x395:0x3a3]
---
Predecessors: [0x387]
Successors: [0x3a4, 0x3a5]
---
0x395 JUMPDEST
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b MLOAD
0x39c ISZERO
0x39d ISZERO
0x39e SWAP1
0x39f POP
0x3a0 PUSH2 0x3a5
0x3a3 JUMPI
---
0x395: JUMPDEST 
0x398: V326 = 0x40
0x39a: V327 = M[0x40]
0x39b: V328 = M[V327]
0x39c: V329 = ISZERO V328
0x39d: V330 = ISZERO V329
0x3a0: V331 = 0x3a5
0x3a3: JUMPI 0x3a5 V330
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V309, 0x95ea7b3, V312]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x395]
Successors: []
---
0x3a4 INVALID
---
0x3a4: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0]

================================

Block 0x3a5
[0x3a5:0x41a]
---
Predecessors: [0x395]
Successors: [0x41b, 0x41c]
---
0x3a5 JUMPDEST
0x3a6 PUSH1 0x2
0x3a8 SLOAD
0x3a9 PUSH1 0x1
0x3ab SLOAD
0x3ac PUSH1 0x40
0x3ae DUP1
0x3af MLOAD
0x3b0 PUSH1 0x0
0x3b2 PUSH1 0x20
0x3b4 SWAP2
0x3b5 DUP3
0x3b6 ADD
0x3b7 DUP2
0x3b8 SWAP1
0x3b9 MSTORE
0x3ba DUP3
0x3bb MLOAD
0x3bc PUSH32 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x3dd DUP2
0x3de MSTORE
0x3df PUSH1 0x1
0x3e1 PUSH1 0xa0
0x3e3 PUSH1 0x2
0x3e5 EXP
0x3e6 SUB
0x3e7 SWAP5
0x3e8 DUP6
0x3e9 AND
0x3ea PUSH1 0x4
0x3ec DUP3
0x3ed ADD
0x3ee MSTORE
0x3ef CALLVALUE
0x3f0 PUSH1 0x24
0x3f2 DUP3
0x3f3 ADD
0x3f4 MSTORE
0x3f5 SWAP3
0x3f6 MLOAD
0x3f7 SWAP4
0x3f8 SWAP1
0x3f9 SWAP5
0x3fa AND
0x3fb SWAP4
0x3fc PUSH4 0x95ea7b3
0x401 SWAP4
0x402 PUSH1 0x44
0x404 DUP1
0x405 DUP6
0x406 ADD
0x407 SWAP5
0x408 SWAP2
0x409 SWAP3
0x40a SWAP2
0x40b DUP4
0x40c SWAP1
0x40d SUB
0x40e ADD
0x40f SWAP1
0x410 DUP3
0x411 SWAP1
0x412 DUP8
0x413 DUP1
0x414 EXTCODESIZE
0x415 ISZERO
0x416 ISZERO
0x417 PUSH2 0x41c
0x41a JUMPI
---
0x3a5: JUMPDEST 
0x3a6: V332 = 0x2
0x3a8: V333 = S[0x2]
0x3a9: V334 = 0x1
0x3ab: V335 = S[0x1]
0x3ac: V336 = 0x40
0x3af: V337 = M[0x40]
0x3b0: V338 = 0x0
0x3b2: V339 = 0x20
0x3b6: V340 = ADD 0x20 V337
0x3b9: M[V340] = 0x0
0x3bb: V341 = M[0x40]
0x3bc: V342 = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x3de: M[V341] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x3df: V343 = 0x1
0x3e1: V344 = 0xa0
0x3e3: V345 = 0x2
0x3e5: V346 = EXP 0x2 0xa0
0x3e6: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e9: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x3ea: V349 = 0x4
0x3ed: V350 = ADD V341 0x4
0x3ee: M[V350] = V348
0x3ef: V351 = CALLVALUE
0x3f0: V352 = 0x24
0x3f3: V353 = ADD V341 0x24
0x3f4: M[V353] = V351
0x3f6: V354 = M[0x40]
0x3fa: V355 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V356 = 0x95ea7b3
0x402: V357 = 0x44
0x406: V358 = ADD V341 0x44
0x40d: V359 = SUB V341 V354
0x40e: V360 = ADD V359 0x44
0x414: V361 = EXTCODESIZE V355
0x415: V362 = ISZERO V361
0x416: V363 = ISZERO V362
0x417: V364 = 0x41c
0x41a: JUMPI 0x41c V363
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V355, 0x95ea7b3, V358, 0x20, V354, V360, V354, 0x0, V355]
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V355, 0x95ea7b3, V358, 0x20, V354, V360, V354, 0x0, V355]

================================

Block 0x41b
[0x41b:0x41b]
---
Predecessors: [0x3a5]
Successors: []
---
0x41b INVALID
---
0x41b: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V355, 0x95ea7b3, V358, 0x20, V354, V360, V354, 0x0, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V355, 0x95ea7b3, V358, 0x20, V354, V360, V354, 0x0, V355]

================================

Block 0x41c
[0x41c:0x428]
---
Predecessors: [0x3a5]
Successors: [0x429, 0x42a]
---
0x41c JUMPDEST
0x41d PUSH2 0x2c6
0x420 GAS
0x421 SUB
0x422 CALL
0x423 ISZERO
0x424 ISZERO
0x425 PUSH2 0x42a
0x428 JUMPI
---
0x41c: JUMPDEST 
0x41d: V365 = 0x2c6
0x420: V366 = GAS
0x421: V367 = SUB V366 0x2c6
0x422: V368 = CALL V367 V355 0x0 V354 V360 V354 0x20
0x423: V369 = ISZERO V368
0x424: V370 = ISZERO V369
0x425: V371 = 0x42a
0x428: JUMPI 0x42a V370
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V355, 0x95ea7b3, V358, 0x20, V354, V360, V354, 0x0, V355]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V355, 0x95ea7b3, V358]

================================

Block 0x429
[0x429:0x429]
---
Predecessors: [0x41c]
Successors: []
---
0x429 INVALID
---
0x429: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V355, 0x95ea7b3, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V355, 0x95ea7b3, V358]

================================

Block 0x42a
[0x42a:0x438]
---
Predecessors: [0x41c]
Successors: [0x439, 0x43a]
---
0x42a JUMPDEST
0x42b POP
0x42c POP
0x42d PUSH1 0x40
0x42f MLOAD
0x430 MLOAD
0x431 ISZERO
0x432 ISZERO
0x433 SWAP1
0x434 POP
0x435 PUSH2 0x43a
0x438 JUMPI
---
0x42a: JUMPDEST 
0x42d: V372 = 0x40
0x42f: V373 = M[0x40]
0x430: V374 = M[V373]
0x431: V375 = ISZERO V374
0x432: V376 = ISZERO V375
0x435: V377 = 0x43a
0x438: JUMPI 0x43a V376
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V355, 0x95ea7b3, V358]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0]

================================

Block 0x439
[0x439:0x439]
---
Predecessors: [0x42a]
Successors: []
---
0x439 INVALID
---
0x439: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0]

================================

Block 0x43a
[0x43a:0x486]
---
Predecessors: [0x42a]
Successors: [0x487, 0x488]
---
0x43a JUMPDEST
0x43b PUSH1 0x1
0x43d SLOAD
0x43e PUSH1 0x40
0x440 DUP1
0x441 MLOAD
0x442 PUSH1 0x0
0x444 PUSH1 0x20
0x446 SWAP2
0x447 DUP3
0x448 ADD
0x449 DUP2
0x44a SWAP1
0x44b MSTORE
0x44c DUP3
0x44d MLOAD
0x44e PUSH1 0xe1
0x450 PUSH1 0x2
0x452 EXP
0x453 PUSH4 0x7e062a35
0x458 MUL
0x459 DUP2
0x45a MSTORE
0x45b SWAP3
0x45c MLOAD
0x45d PUSH1 0x1
0x45f PUSH1 0xa0
0x461 PUSH1 0x2
0x463 EXP
0x464 SUB
0x465 SWAP1
0x466 SWAP5
0x467 AND
0x468 SWAP4
0x469 PUSH4 0xfc0c546a
0x46e SWAP4
0x46f PUSH1 0x4
0x471 DUP1
0x472 DUP3
0x473 ADD
0x474 SWAP5
0x475 SWAP4
0x476 SWAP2
0x477 DUP4
0x478 SWAP1
0x479 SUB
0x47a ADD
0x47b SWAP1
0x47c DUP3
0x47d SWAP1
0x47e DUP8
0x47f DUP1
0x480 EXTCODESIZE
0x481 ISZERO
0x482 ISZERO
0x483 PUSH2 0x488
0x486 JUMPI
---
0x43a: JUMPDEST 
0x43b: V378 = 0x1
0x43d: V379 = S[0x1]
0x43e: V380 = 0x40
0x441: V381 = M[0x40]
0x442: V382 = 0x0
0x444: V383 = 0x20
0x448: V384 = ADD 0x20 V381
0x44b: M[V384] = 0x0
0x44d: V385 = M[0x40]
0x44e: V386 = 0xe1
0x450: V387 = 0x2
0x452: V388 = EXP 0x2 0xe1
0x453: V389 = 0x7e062a35
0x458: V390 = MUL 0x7e062a35 0x200000000000000000000000000000000000000000000000000000000
0x45a: M[V385] = 0xfc0c546a00000000000000000000000000000000000000000000000000000000
0x45c: V391 = M[0x40]
0x45d: V392 = 0x1
0x45f: V393 = 0xa0
0x461: V394 = 0x2
0x463: V395 = EXP 0x2 0xa0
0x464: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x467: V397 = AND V379 0xffffffffffffffffffffffffffffffffffffffff
0x469: V398 = 0xfc0c546a
0x46f: V399 = 0x4
0x473: V400 = ADD V385 0x4
0x479: V401 = SUB V385 V391
0x47a: V402 = ADD V401 0x4
0x480: V403 = EXTCODESIZE V397
0x481: V404 = ISZERO V403
0x482: V405 = ISZERO V404
0x483: V406 = 0x488
0x486: JUMPI 0x488 V405
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V397, 0xfc0c546a, V400, 0x20, V391, V402, V391, 0x0, V397]
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V397, 0xfc0c546a, V400, 0x20, V391, V402, V391, 0x0, V397]

================================

Block 0x487
[0x487:0x487]
---
Predecessors: [0x43a]
Successors: []
---
0x487 INVALID
---
0x487: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V397, 0xfc0c546a, V400, 0x20, V391, V402, V391, 0x0, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V397, 0xfc0c546a, V400, 0x20, V391, V402, V391, 0x0, V397]

================================

Block 0x488
[0x488:0x494]
---
Predecessors: [0x43a]
Successors: [0x495, 0x496]
---
0x488 JUMPDEST
0x489 PUSH2 0x2c6
0x48c GAS
0x48d SUB
0x48e CALL
0x48f ISZERO
0x490 ISZERO
0x491 PUSH2 0x496
0x494 JUMPI
---
0x488: JUMPDEST 
0x489: V407 = 0x2c6
0x48c: V408 = GAS
0x48d: V409 = SUB V408 0x2c6
0x48e: V410 = CALL V409 V397 0x0 V391 V402 V391 0x20
0x48f: V411 = ISZERO V410
0x490: V412 = ISZERO V411
0x491: V413 = 0x496
0x494: JUMPI 0x496 V412
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V397, 0xfc0c546a, V400, 0x20, V391, V402, V391, 0x0, V397]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V397, 0xfc0c546a, V400]

================================

Block 0x495
[0x495:0x495]
---
Predecessors: [0x488]
Successors: []
---
0x495 INVALID
---
0x495: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V397, 0xfc0c546a, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, 0x0, 0x0, V397, 0xfc0c546a, V400]

================================

Block 0x496
[0x496:0x520]
---
Predecessors: [0x488]
Successors: [0x521, 0x522]
---
0x496 JUMPDEST
0x497 POP
0x498 POP
0x499 PUSH1 0x40
0x49b DUP1
0x49c MLOAD
0x49d DUP1
0x49e MLOAD
0x49f PUSH1 0x1
0x4a1 DUP1
0x4a2 SLOAD
0x4a3 PUSH1 0x2
0x4a5 SLOAD
0x4a6 PUSH1 0x0
0x4a8 PUSH1 0x20
0x4aa SWAP6
0x4ab DUP7
0x4ac ADD
0x4ad DUP2
0x4ae SWAP1
0x4af MSTORE
0x4b0 DUP7
0x4b1 MLOAD
0x4b2 PUSH32 0x5e5144eb00000000000000000000000000000000000000000000000000000000
0x4d3 DUP2
0x4d4 MSTORE
0x4d5 PUSH1 0x1
0x4d7 PUSH1 0xa0
0x4d9 PUSH1 0x2
0x4db EXP
0x4dc SUB
0x4dd SWAP3
0x4de DUP4
0x4df AND
0x4e0 PUSH1 0x4
0x4e2 DUP3
0x4e3 ADD
0x4e4 MSTORE
0x4e5 DUP3
0x4e6 DUP7
0x4e7 AND
0x4e8 PUSH1 0x24
0x4ea DUP3
0x4eb ADD
0x4ec MSTORE
0x4ed CALLVALUE
0x4ee PUSH1 0x44
0x4f0 DUP3
0x4f1 ADD
0x4f2 MSTORE
0x4f3 PUSH1 0x64
0x4f5 DUP2
0x4f6 ADD
0x4f7 SWAP5
0x4f8 SWAP1
0x4f9 SWAP5
0x4fa MSTORE
0x4fb SWAP6
0x4fc MLOAD
0x4fd SWAP4
0x4fe SWAP9
0x4ff POP
0x500 AND
0x501 SWAP5
0x502 POP
0x503 PUSH4 0x5e5144eb
0x508 SWAP4
0x509 PUSH1 0x84
0x50b DUP1
0x50c DUP4
0x50d ADD
0x50e SWAP5
0x50f SWAP4
0x510 SWAP3
0x511 DUP4
0x512 SWAP1
0x513 SUB
0x514 ADD
0x515 SWAP1
0x516 DUP3
0x517 SWAP1
0x518 DUP8
0x519 DUP1
0x51a EXTCODESIZE
0x51b ISZERO
0x51c ISZERO
0x51d PUSH2 0x522
0x520 JUMPI
---
0x496: JUMPDEST 
0x499: V414 = 0x40
0x49c: V415 = M[0x40]
0x49e: V416 = M[V415]
0x49f: V417 = 0x1
0x4a2: V418 = S[0x1]
0x4a3: V419 = 0x2
0x4a5: V420 = S[0x2]
0x4a6: V421 = 0x0
0x4a8: V422 = 0x20
0x4ac: V423 = ADD 0x20 V415
0x4af: M[V423] = 0x0
0x4b1: V424 = M[0x40]
0x4b2: V425 = 0x5e5144eb00000000000000000000000000000000000000000000000000000000
0x4d4: M[V424] = 0x5e5144eb00000000000000000000000000000000000000000000000000000000
0x4d5: V426 = 0x1
0x4d7: V427 = 0xa0
0x4d9: V428 = 0x2
0x4db: V429 = EXP 0x2 0xa0
0x4dc: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x4e0: V432 = 0x4
0x4e3: V433 = ADD V424 0x4
0x4e4: M[V433] = V431
0x4e7: V434 = AND V416 0xffffffffffffffffffffffffffffffffffffffff
0x4e8: V435 = 0x24
0x4eb: V436 = ADD V424 0x24
0x4ec: M[V436] = V434
0x4ed: V437 = CALLVALUE
0x4ee: V438 = 0x44
0x4f1: V439 = ADD V424 0x44
0x4f2: M[V439] = V437
0x4f3: V440 = 0x64
0x4f6: V441 = ADD V424 0x64
0x4fa: M[V441] = 0x1
0x4fc: V442 = M[0x40]
0x500: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x503: V444 = 0x5e5144eb
0x509: V445 = 0x84
0x50d: V446 = ADD V424 0x84
0x513: V447 = SUB V424 V442
0x514: V448 = ADD V447 0x84
0x51a: V449 = EXTCODESIZE V443
0x51b: V450 = ISZERO V449
0x51c: V451 = ISZERO V450
0x51d: V452 = 0x522
0x520: JUMPI 0x522 V451
---
Entry stack: [V12, 0xbe, 0x0, 0x0, 0x0, V397, 0xfc0c546a, V400]
Stack pops: 5
Stack additions: [V416, S3, V443, 0x5e5144eb, V446, 0x20, V442, V448, V442, 0x0, V443]
Exit stack: [V12, 0xbe, 0x0, V416, 0x0, V443, 0x5e5144eb, V446, 0x20, V442, V448, V442, 0x0, V443]

================================

Block 0x521
[0x521:0x521]
---
Predecessors: [0x496]
Successors: []
---
0x521 INVALID
---
0x521: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, V416, 0x0, V443, 0x5e5144eb, V446, 0x20, V442, V448, V442, 0x0, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, V416, 0x0, V443, 0x5e5144eb, V446, 0x20, V442, V448, V442, 0x0, V443]

================================

Block 0x522
[0x522:0x52e]
---
Predecessors: [0x496]
Successors: [0x52f, 0x530]
---
0x522 JUMPDEST
0x523 PUSH2 0x2c6
0x526 GAS
0x527 SUB
0x528 CALL
0x529 ISZERO
0x52a ISZERO
0x52b PUSH2 0x530
0x52e JUMPI
---
0x522: JUMPDEST 
0x523: V453 = 0x2c6
0x526: V454 = GAS
0x527: V455 = SUB V454 0x2c6
0x528: V456 = CALL V455 V443 0x0 V442 V448 V442 0x20
0x529: V457 = ISZERO V456
0x52a: V458 = ISZERO V457
0x52b: V459 = 0x530
0x52e: JUMPI 0x530 V458
---
Entry stack: [V12, 0xbe, 0x0, V416, 0x0, V443, 0x5e5144eb, V446, 0x20, V442, V448, V442, 0x0, V443]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, V416, 0x0, V443, 0x5e5144eb, V446]

================================

Block 0x52f
[0x52f:0x52f]
---
Predecessors: [0x522]
Successors: []
---
0x52f INVALID
---
0x52f: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, V416, 0x0, V443, 0x5e5144eb, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, V416, 0x0, V443, 0x5e5144eb, V446]

================================

Block 0x530
[0x530:0x5a2]
---
Predecessors: [0x522]
Successors: [0x5a3, 0x5a4]
---
0x530 JUMPDEST
0x531 POP
0x532 POP
0x533 POP
0x534 PUSH1 0x40
0x536 MLOAD
0x537 DUP1
0x538 MLOAD
0x539 SWAP1
0x53a POP
0x53b SWAP1
0x53c POP
0x53d DUP2
0x53e PUSH1 0x1
0x540 PUSH1 0xa0
0x542 PUSH1 0x2
0x544 EXP
0x545 SUB
0x546 AND
0x547 PUSH4 0xa9059cbb
0x54c CALLER
0x54d DUP4
0x54e PUSH1 0x0
0x550 PUSH1 0x40
0x552 MLOAD
0x553 PUSH1 0x20
0x555 ADD
0x556 MSTORE
0x557 PUSH1 0x40
0x559 MLOAD
0x55a DUP4
0x55b PUSH4 0xffffffff
0x560 AND
0x561 PUSH1 0xe0
0x563 PUSH1 0x2
0x565 EXP
0x566 MUL
0x567 DUP2
0x568 MSTORE
0x569 PUSH1 0x4
0x56b ADD
0x56c DUP1
0x56d DUP4
0x56e PUSH1 0x1
0x570 PUSH1 0xa0
0x572 PUSH1 0x2
0x574 EXP
0x575 SUB
0x576 AND
0x577 PUSH1 0x1
0x579 PUSH1 0xa0
0x57b PUSH1 0x2
0x57d EXP
0x57e SUB
0x57f AND
0x580 DUP2
0x581 MSTORE
0x582 PUSH1 0x20
0x584 ADD
0x585 DUP3
0x586 DUP2
0x587 MSTORE
0x588 PUSH1 0x20
0x58a ADD
0x58b SWAP3
0x58c POP
0x58d POP
0x58e POP
0x58f PUSH1 0x20
0x591 PUSH1 0x40
0x593 MLOAD
0x594 DUP1
0x595 DUP4
0x596 SUB
0x597 DUP2
0x598 PUSH1 0x0
0x59a DUP8
0x59b DUP1
0x59c EXTCODESIZE
0x59d ISZERO
0x59e ISZERO
0x59f PUSH2 0x5a4
0x5a2 JUMPI
---
0x530: JUMPDEST 
0x534: V460 = 0x40
0x536: V461 = M[0x40]
0x538: V462 = M[V461]
0x53e: V463 = 0x1
0x540: V464 = 0xa0
0x542: V465 = 0x2
0x544: V466 = EXP 0x2 0xa0
0x545: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x546: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x547: V469 = 0xa9059cbb
0x54c: V470 = CALLER
0x54e: V471 = 0x0
0x550: V472 = 0x40
0x552: V473 = M[0x40]
0x553: V474 = 0x20
0x555: V475 = ADD 0x20 V473
0x556: M[V475] = 0x0
0x557: V476 = 0x40
0x559: V477 = M[0x40]
0x55b: V478 = 0xffffffff
0x560: V479 = AND 0xffffffff 0xa9059cbb
0x561: V480 = 0xe0
0x563: V481 = 0x2
0x565: V482 = EXP 0x2 0xe0
0x566: V483 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x568: M[V477] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x569: V484 = 0x4
0x56b: V485 = ADD 0x4 V477
0x56e: V486 = 0x1
0x570: V487 = 0xa0
0x572: V488 = 0x2
0x574: V489 = EXP 0x2 0xa0
0x575: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x576: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x577: V492 = 0x1
0x579: V493 = 0xa0
0x57b: V494 = 0x2
0x57d: V495 = EXP 0x2 0xa0
0x57e: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57f: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x581: M[V485] = V497
0x582: V498 = 0x20
0x584: V499 = ADD 0x20 V485
0x587: M[V499] = V462
0x588: V500 = 0x20
0x58a: V501 = ADD 0x20 V499
0x58f: V502 = 0x20
0x591: V503 = 0x40
0x593: V504 = M[0x40]
0x596: V505 = SUB V501 V504
0x598: V506 = 0x0
0x59c: V507 = EXTCODESIZE V468
0x59d: V508 = ISZERO V507
0x59e: V509 = ISZERO V508
0x59f: V510 = 0x5a4
0x5a2: JUMPI 0x5a4 V509
---
Entry stack: [V12, 0xbe, 0x0, V416, 0x0, V443, 0x5e5144eb, V446]
Stack pops: 5
Stack additions: [S4, V462, V468, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V468]
Exit stack: [V12, 0xbe, 0x0, V416, V462, V468, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V468]

================================

Block 0x5a3
[0x5a3:0x5a3]
---
Predecessors: [0x530]
Successors: []
---
0x5a3 INVALID
---
0x5a3: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, V416, V462, V468, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, V416, V462, V468, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V468]

================================

Block 0x5a4
[0x5a4:0x5b0]
---
Predecessors: [0x530]
Successors: [0x5b1, 0x5b2]
---
0x5a4 JUMPDEST
0x5a5 PUSH2 0x2c6
0x5a8 GAS
0x5a9 SUB
0x5aa CALL
0x5ab ISZERO
0x5ac ISZERO
0x5ad PUSH2 0x5b2
0x5b0 JUMPI
---
0x5a4: JUMPDEST 
0x5a5: V511 = 0x2c6
0x5a8: V512 = GAS
0x5a9: V513 = SUB V512 0x2c6
0x5aa: V514 = CALL V513 V468 0x0 V504 V505 V504 0x20
0x5ab: V515 = ISZERO V514
0x5ac: V516 = ISZERO V515
0x5ad: V517 = 0x5b2
0x5b0: JUMPI 0x5b2 V516
---
Entry stack: [V12, 0xbe, 0x0, V416, V462, V468, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V468]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, V416, V462, V468, 0xa9059cbb, V501]

================================

Block 0x5b1
[0x5b1:0x5b1]
---
Predecessors: [0x5a4]
Successors: []
---
0x5b1 INVALID
---
0x5b1: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, V416, V462, V468, 0xa9059cbb, V501]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, V416, V462, V468, 0xa9059cbb, V501]

================================

Block 0x5b2
[0x5b2:0x5c0]
---
Predecessors: [0x5a4]
Successors: [0x5c1, 0x5c2]
---
0x5b2 JUMPDEST
0x5b3 POP
0x5b4 POP
0x5b5 PUSH1 0x40
0x5b7 MLOAD
0x5b8 MLOAD
0x5b9 ISZERO
0x5ba ISZERO
0x5bb SWAP1
0x5bc POP
0x5bd PUSH2 0x5c2
0x5c0 JUMPI
---
0x5b2: JUMPDEST 
0x5b5: V518 = 0x40
0x5b7: V519 = M[0x40]
0x5b8: V520 = M[V519]
0x5b9: V521 = ISZERO V520
0x5ba: V522 = ISZERO V521
0x5bd: V523 = 0x5c2
0x5c0: JUMPI 0x5c2 V522
---
Entry stack: [V12, 0xbe, 0x0, V416, V462, V468, 0xa9059cbb, V501]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, V416, V462]

================================

Block 0x5c1
[0x5c1:0x5c1]
---
Predecessors: [0x5b2]
Successors: []
---
0x5c1 INVALID
---
0x5c1: INVALID 
---
Entry stack: [V12, 0xbe, 0x0, V416, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, 0x0, V416, V462]

================================

Block 0x5c2
[0x5c2:0x5c5]
---
Predecessors: [0x5b2]
Successors: [0x5c6]
---
0x5c2 JUMPDEST
0x5c3 DUP1
0x5c4 SWAP3
0x5c5 POP
---
0x5c2: JUMPDEST 
---
Entry stack: [V12, 0xbe, 0x0, V416, V462]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V12, 0xbe, V462, V416, V462]

================================

Block 0x5c6
[0x5c6:0x5ca]
---
Predecessors: [0x5c2]
Successors: [0xbe]
---
0x5c6 JUMPDEST
0x5c7 POP
0x5c8 POP
0x5c9 SWAP1
0x5ca JUMP
---
0x5c6: JUMPDEST 
0x5ca: JUMP 0xbe
---
Entry stack: [V12, 0xbe, V462, V416, V462]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, V462]

================================

Block 0x5cb
[0x5cb:0x618]
---
Predecessors: [0xd8]
Successors: [0x619, 0x61a]
---
0x5cb JUMPDEST
0x5cc PUSH1 0x1
0x5ce SLOAD
0x5cf PUSH1 0x40
0x5d1 DUP1
0x5d2 MLOAD
0x5d3 PUSH1 0x0
0x5d5 PUSH1 0x20
0x5d7 SWAP2
0x5d8 DUP3
0x5d9 ADD
0x5da DUP2
0x5db SWAP1
0x5dc MSTORE
0x5dd DUP3
0x5de MLOAD
0x5df PUSH1 0xe1
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 PUSH4 0x7e062a35
0x5e9 MUL
0x5ea DUP2
0x5eb MSTORE
0x5ec SWAP3
0x5ed MLOAD
0x5ee SWAP1
0x5ef SWAP4
0x5f0 DUP5
0x5f1 SWAP4
0x5f2 PUSH1 0x1
0x5f4 PUSH1 0xa0
0x5f6 PUSH1 0x2
0x5f8 EXP
0x5f9 SUB
0x5fa SWAP1
0x5fb SWAP2
0x5fc AND
0x5fd SWAP3
0x5fe PUSH4 0xfc0c546a
0x603 SWAP3
0x604 PUSH1 0x4
0x606 DUP1
0x607 DUP5
0x608 ADD
0x609 SWAP4
0x60a DUP3
0x60b SWAP1
0x60c SUB
0x60d ADD
0x60e DUP2
0x60f DUP8
0x610 DUP8
0x611 DUP1
0x612 EXTCODESIZE
0x613 ISZERO
0x614 ISZERO
0x615 PUSH2 0x61a
0x618 JUMPI
---
0x5cb: JUMPDEST 
0x5cc: V524 = 0x1
0x5ce: V525 = S[0x1]
0x5cf: V526 = 0x40
0x5d2: V527 = M[0x40]
0x5d3: V528 = 0x0
0x5d5: V529 = 0x20
0x5d9: V530 = ADD 0x20 V527
0x5dc: M[V530] = 0x0
0x5de: V531 = M[0x40]
0x5df: V532 = 0xe1
0x5e1: V533 = 0x2
0x5e3: V534 = EXP 0x2 0xe1
0x5e4: V535 = 0x7e062a35
0x5e9: V536 = MUL 0x7e062a35 0x200000000000000000000000000000000000000000000000000000000
0x5eb: M[V531] = 0xfc0c546a00000000000000000000000000000000000000000000000000000000
0x5ed: V537 = M[0x40]
0x5f2: V538 = 0x1
0x5f4: V539 = 0xa0
0x5f6: V540 = 0x2
0x5f8: V541 = EXP 0x2 0xa0
0x5f9: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fc: V543 = AND V525 0xffffffffffffffffffffffffffffffffffffffff
0x5fe: V544 = 0xfc0c546a
0x604: V545 = 0x4
0x608: V546 = ADD V531 0x4
0x60c: V547 = SUB V531 V537
0x60d: V548 = ADD V547 0x4
0x612: V549 = EXTCODESIZE V543
0x613: V550 = ISZERO V549
0x614: V551 = ISZERO V550
0x615: V552 = 0x61a
0x618: JUMPI 0x61a V551
---
Entry stack: [V12, 0xbe, V68]
Stack pops: 0
Stack additions: [0x0, 0x0, V543, 0xfc0c546a, V546, 0x20, V537, V548, V537, 0x0, V543]
Exit stack: [V12, 0xbe, V68, 0x0, 0x0, V543, 0xfc0c546a, V546, 0x20, V537, V548, V537, 0x0, V543]

================================

Block 0x619
[0x619:0x619]
---
Predecessors: [0x5cb]
Successors: []
---
0x619 INVALID
---
0x619: INVALID 
---
Entry stack: [V12, 0xbe, V68, 0x0, 0x0, V543, 0xfc0c546a, V546, 0x20, V537, V548, V537, 0x0, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V68, 0x0, 0x0, V543, 0xfc0c546a, V546, 0x20, V537, V548, V537, 0x0, V543]

================================

Block 0x61a
[0x61a:0x626]
---
Predecessors: [0x5cb]
Successors: [0x627, 0x628]
---
0x61a JUMPDEST
0x61b PUSH2 0x2c6
0x61e GAS
0x61f SUB
0x620 CALL
0x621 ISZERO
0x622 ISZERO
0x623 PUSH2 0x628
0x626 JUMPI
---
0x61a: JUMPDEST 
0x61b: V553 = 0x2c6
0x61e: V554 = GAS
0x61f: V555 = SUB V554 0x2c6
0x620: V556 = CALL V555 V543 0x0 V537 V548 V537 0x20
0x621: V557 = ISZERO V556
0x622: V558 = ISZERO V557
0x623: V559 = 0x628
0x626: JUMPI 0x628 V558
---
Entry stack: [V12, 0xbe, V68, 0x0, 0x0, V543, 0xfc0c546a, V546, 0x20, V537, V548, V537, 0x0, V543]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, V68, 0x0, 0x0, V543, 0xfc0c546a, V546]

================================

Block 0x627
[0x627:0x627]
---
Predecessors: [0x61a]
Successors: []
---
0x627 INVALID
---
0x627: INVALID 
---
Entry stack: [V12, 0xbe, V68, 0x0, 0x0, V543, 0xfc0c546a, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V68, 0x0, 0x0, V543, 0xfc0c546a, V546]

================================

Block 0x628
[0x628:0x6ac]
---
Predecessors: [0x61a]
Successors: [0x6ad, 0x6ae]
---
0x628 JUMPDEST
0x629 POP
0x62a POP
0x62b PUSH1 0x40
0x62d DUP1
0x62e MLOAD
0x62f DUP1
0x630 MLOAD
0x631 PUSH1 0x1
0x633 SLOAD
0x634 PUSH1 0x2
0x636 SLOAD
0x637 PUSH1 0x0
0x639 PUSH1 0x20
0x63b SWAP5
0x63c DUP6
0x63d ADD
0x63e DUP2
0x63f SWAP1
0x640 MSTORE
0x641 DUP6
0x642 MLOAD
0x643 PUSH32 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x664 DUP2
0x665 MSTORE
0x666 PUSH1 0x1
0x668 PUSH1 0xa0
0x66a PUSH1 0x2
0x66c EXP
0x66d SUB
0x66e SWAP3
0x66f DUP4
0x670 AND
0x671 PUSH1 0x4
0x673 DUP3
0x674 ADD
0x675 MSTORE
0x676 DUP3
0x677 DUP6
0x678 AND
0x679 PUSH1 0x24
0x67b DUP3
0x67c ADD
0x67d MSTORE
0x67e PUSH1 0x44
0x680 DUP2
0x681 ADD
0x682 DUP12
0x683 SWAP1
0x684 MSTORE
0x685 SWAP6
0x686 MLOAD
0x687 SWAP4
0x688 SWAP8
0x689 POP
0x68a SWAP2
0x68b AND
0x68c SWAP5
0x68d POP
0x68e PUSH4 0x1e1401f8
0x693 SWAP4
0x694 PUSH1 0x64
0x696 DUP1
0x697 DUP3
0x698 ADD
0x699 SWAP5
0x69a SWAP4
0x69b SWAP3
0x69c SWAP2
0x69d DUP4
0x69e SWAP1
0x69f SUB
0x6a0 ADD
0x6a1 SWAP1
0x6a2 DUP3
0x6a3 SWAP1
0x6a4 DUP8
0x6a5 DUP1
0x6a6 EXTCODESIZE
0x6a7 ISZERO
0x6a8 ISZERO
0x6a9 PUSH2 0x6ae
0x6ac JUMPI
---
0x628: JUMPDEST 
0x62b: V560 = 0x40
0x62e: V561 = M[0x40]
0x630: V562 = M[V561]
0x631: V563 = 0x1
0x633: V564 = S[0x1]
0x634: V565 = 0x2
0x636: V566 = S[0x2]
0x637: V567 = 0x0
0x639: V568 = 0x20
0x63d: V569 = ADD 0x20 V561
0x640: M[V569] = 0x0
0x642: V570 = M[0x40]
0x643: V571 = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x665: M[V570] = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x666: V572 = 0x1
0x668: V573 = 0xa0
0x66a: V574 = 0x2
0x66c: V575 = EXP 0x2 0xa0
0x66d: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x670: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x671: V578 = 0x4
0x674: V579 = ADD V570 0x4
0x675: M[V579] = V577
0x678: V580 = AND V562 0xffffffffffffffffffffffffffffffffffffffff
0x679: V581 = 0x24
0x67c: V582 = ADD V570 0x24
0x67d: M[V582] = V580
0x67e: V583 = 0x44
0x681: V584 = ADD V570 0x44
0x684: M[V584] = V68
0x686: V585 = M[0x40]
0x68b: V586 = AND V564 0xffffffffffffffffffffffffffffffffffffffff
0x68e: V587 = 0x1e1401f8
0x694: V588 = 0x64
0x698: V589 = ADD V570 0x64
0x69f: V590 = SUB V570 V585
0x6a0: V591 = ADD V590 0x64
0x6a6: V592 = EXTCODESIZE V586
0x6a7: V593 = ISZERO V592
0x6a8: V594 = ISZERO V593
0x6a9: V595 = 0x6ae
0x6ac: JUMPI 0x6ae V594
---
Entry stack: [V12, 0xbe, V68, 0x0, 0x0, V543, 0xfc0c546a, V546]
Stack pops: 6
Stack additions: [S5, S4, V562, V586, 0x1e1401f8, V589, 0x20, V585, V591, V585, 0x0, V586]
Exit stack: [V12, 0xbe, V68, 0x0, V562, V586, 0x1e1401f8, V589, 0x20, V585, V591, V585, 0x0, V586]

================================

Block 0x6ad
[0x6ad:0x6ad]
---
Predecessors: [0x628]
Successors: []
---
0x6ad INVALID
---
0x6ad: INVALID 
---
Entry stack: [V12, 0xbe, V68, 0x0, V562, V586, 0x1e1401f8, V589, 0x20, V585, V591, V585, 0x0, V586]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V68, 0x0, V562, V586, 0x1e1401f8, V589, 0x20, V585, V591, V585, 0x0, V586]

================================

Block 0x6ae
[0x6ae:0x6ba]
---
Predecessors: [0x628, 0xa19]
Successors: [0x6bb, 0x6bc]
---
0x6ae JUMPDEST
0x6af PUSH2 0x2c6
0x6b2 GAS
0x6b3 SUB
0x6b4 CALL
0x6b5 ISZERO
0x6b6 ISZERO
0x6b7 PUSH2 0x6bc
0x6ba JUMPI
---
0x6ae: JUMPDEST 
0x6af: V596 = 0x2c6
0x6b2: V597 = GAS
0x6b3: V598 = SUB V597 0x2c6
0x6b4: V599 = CALL V598 S0 0x0 S2 S3 S4 0x20
0x6b5: V600 = ISZERO V599
0x6b6: V601 = ISZERO V600
0x6b7: V602 = 0x6bc
0x6ba: JUMPI 0x6bc V601
---
Entry stack: [V12, 0xbe, S11, 0x0, S9, S8, 0x1e1401f8, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, S11, 0x0, S9, S8, 0x1e1401f8, S6]

================================

Block 0x6bb
[0x6bb:0x6bb]
---
Predecessors: [0x6ae]
Successors: []
---
0x6bb INVALID
---
0x6bb: INVALID 
---
Entry stack: [V12, 0xbe, S5, 0x0, S3, S2, 0x1e1401f8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, S5, 0x0, S3, S2, 0x1e1401f8, S0]

================================

Block 0x6bc
[0x6bc:0x6c5]
---
Predecessors: [0x6ae, 0xa9f]
Successors: [0x6c6]
---
0x6bc JUMPDEST
0x6bd POP
0x6be POP
0x6bf PUSH1 0x40
0x6c1 MLOAD
0x6c2 MLOAD
0x6c3 SWAP3
0x6c4 POP
0x6c5 POP
---
0x6bc: JUMPDEST 
0x6bf: V603 = 0x40
0x6c1: V604 = M[0x40]
0x6c2: V605 = M[V604]
---
Entry stack: [V12, 0xbe, S5, 0x0, S3, S2, 0x1e1401f8, S0]
Stack pops: 5
Stack additions: [V605, S3]
Exit stack: [V12, 0xbe, S5, V605, S3]

================================

Block 0x6c6
[0x6c6:0x6cb]
---
Predecessors: [0x6bc]
Successors: [0xbe]
---
0x6c6 JUMPDEST
0x6c7 POP
0x6c8 SWAP2
0x6c9 SWAP1
0x6ca POP
0x6cb JUMP
---
0x6c6: JUMPDEST 
0x6cb: JUMP 0xbe
---
Entry stack: [V12, 0xbe, S2, V605, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V605]

================================

Block 0x6cc
[0x6cc:0x747]
---
Predecessors: [0xfd]
Successors: [0x748, 0x749]
---
0x6cc JUMPDEST
0x6cd PUSH1 0x1
0x6cf SLOAD
0x6d0 PUSH1 0x40
0x6d2 DUP1
0x6d3 MLOAD
0x6d4 PUSH1 0x0
0x6d6 PUSH1 0x20
0x6d8 SWAP2
0x6d9 DUP3
0x6da ADD
0x6db DUP2
0x6dc SWAP1
0x6dd MSTORE
0x6de DUP3
0x6df MLOAD
0x6e0 PUSH32 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x701 DUP2
0x702 MSTORE
0x703 PUSH1 0x1
0x705 PUSH1 0xa0
0x707 PUSH1 0x2
0x709 EXP
0x70a SUB
0x70b DUP9
0x70c DUP2
0x70d AND
0x70e PUSH1 0x4
0x710 DUP4
0x711 ADD
0x712 MSTORE
0x713 DUP8
0x714 DUP2
0x715 AND
0x716 PUSH1 0x24
0x718 DUP4
0x719 ADD
0x71a MSTORE
0x71b PUSH1 0x44
0x71d DUP3
0x71e ADD
0x71f DUP8
0x720 SWAP1
0x721 MSTORE
0x722 SWAP4
0x723 MLOAD
0x724 SWAP2
0x725 SWAP5
0x726 SWAP4
0x727 SWAP1
0x728 SWAP4
0x729 AND
0x72a SWAP3
0x72b PUSH4 0x1e1401f8
0x730 SWAP3
0x731 PUSH1 0x64
0x733 DUP1
0x734 DUP4
0x735 ADD
0x736 SWAP4
0x737 SWAP2
0x738 SWAP3
0x739 DUP3
0x73a SWAP1
0x73b SUB
0x73c ADD
0x73d DUP2
0x73e DUP8
0x73f DUP8
0x740 DUP1
0x741 EXTCODESIZE
0x742 ISZERO
0x743 ISZERO
0x744 PUSH2 0x749
0x747 JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V606 = 0x1
0x6cf: V607 = S[0x1]
0x6d0: V608 = 0x40
0x6d3: V609 = M[0x40]
0x6d4: V610 = 0x0
0x6d6: V611 = 0x20
0x6da: V612 = ADD 0x20 V609
0x6dd: M[V612] = 0x0
0x6df: V613 = M[0x40]
0x6e0: V614 = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x702: M[V613] = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0x703: V615 = 0x1
0x705: V616 = 0xa0
0x707: V617 = 0x2
0x709: V618 = EXP 0x2 0xa0
0x70a: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70d: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x70e: V621 = 0x4
0x711: V622 = ADD V613 0x4
0x712: M[V622] = V620
0x715: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x716: V624 = 0x24
0x719: V625 = ADD V613 0x24
0x71a: M[V625] = V623
0x71b: V626 = 0x44
0x71e: V627 = ADD V613 0x44
0x721: M[V627] = V92
0x723: V628 = M[0x40]
0x729: V629 = AND V607 0xffffffffffffffffffffffffffffffffffffffff
0x72b: V630 = 0x1e1401f8
0x731: V631 = 0x64
0x735: V632 = ADD V613 0x64
0x73b: V633 = SUB V613 V628
0x73c: V634 = ADD V633 0x64
0x741: V635 = EXTCODESIZE V629
0x742: V636 = ISZERO V635
0x743: V637 = ISZERO V636
0x744: V638 = 0x749
0x747: JUMPI 0x749 V637
---
Entry stack: [V12, 0xbe, V87, V90, V92]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V629, 0x1e1401f8, V632, 0x20, V628, V634, V628, 0x0, V629]
Exit stack: [V12, 0xbe, V87, V90, V92, 0x0, V629, 0x1e1401f8, V632, 0x20, V628, V634, V628, 0x0, V629]

================================

Block 0x748
[0x748:0x748]
---
Predecessors: [0x6cc]
Successors: []
---
0x748 INVALID
---
0x748: INVALID 
---
Entry stack: [V12, 0xbe, V87, V90, V92, 0x0, V629, 0x1e1401f8, V632, 0x20, V628, V634, V628, 0x0, V629]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V87, V90, V92, 0x0, V629, 0x1e1401f8, V632, 0x20, V628, V634, V628, 0x0, V629]

================================

Block 0x749
[0x749:0x755]
---
Predecessors: [0x6cc]
Successors: [0x756, 0x757]
---
0x749 JUMPDEST
0x74a PUSH2 0x2c6
0x74d GAS
0x74e SUB
0x74f CALL
0x750 ISZERO
0x751 ISZERO
0x752 PUSH2 0x757
0x755 JUMPI
---
0x749: JUMPDEST 
0x74a: V639 = 0x2c6
0x74d: V640 = GAS
0x74e: V641 = SUB V640 0x2c6
0x74f: V642 = CALL V641 V629 0x0 V628 V634 V628 0x20
0x750: V643 = ISZERO V642
0x751: V644 = ISZERO V643
0x752: V645 = 0x757
0x755: JUMPI 0x757 V644
---
Entry stack: [V12, 0xbe, V87, V90, V92, 0x0, V629, 0x1e1401f8, V632, 0x20, V628, V634, V628, 0x0, V629]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, V87, V90, V92, 0x0, V629, 0x1e1401f8, V632]

================================

Block 0x756
[0x756:0x756]
---
Predecessors: [0x749]
Successors: []
---
0x756 INVALID
---
0x756: INVALID 
---
Entry stack: [V12, 0xbe, V87, V90, V92, 0x0, V629, 0x1e1401f8, V632]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V87, V90, V92, 0x0, V629, 0x1e1401f8, V632]

================================

Block 0x757
[0x757:0x760]
---
Predecessors: [0x749]
Successors: [0x761]
---
0x757 JUMPDEST
0x758 POP
0x759 POP
0x75a PUSH1 0x40
0x75c MLOAD
0x75d MLOAD
0x75e SWAP2
0x75f POP
0x760 POP
---
0x757: JUMPDEST 
0x75a: V646 = 0x40
0x75c: V647 = M[0x40]
0x75d: V648 = M[V647]
---
Entry stack: [V12, 0xbe, V87, V90, V92, 0x0, V629, 0x1e1401f8, V632]
Stack pops: 4
Stack additions: [V648]
Exit stack: [V12, 0xbe, V87, V90, V92, V648]

================================

Block 0x761
[0x761:0x767]
---
Predecessors: [0x757]
Successors: [0xbe]
---
0x761 JUMPDEST
0x762 SWAP4
0x763 SWAP3
0x764 POP
0x765 POP
0x766 POP
0x767 JUMP
---
0x761: JUMPDEST 
0x767: JUMP 0xbe
---
Entry stack: [V12, 0xbe, V87, V90, V92, V648]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, V648]

================================

Block 0x768
[0x768:0x776]
---
Predecessors: [0x134]
Successors: [0x13c]
---
0x768 JUMPDEST
0x769 PUSH1 0x1
0x76b SLOAD
0x76c PUSH1 0x1
0x76e PUSH1 0xa0
0x770 PUSH1 0x2
0x772 EXP
0x773 SUB
0x774 AND
0x775 DUP2
0x776 JUMP
---
0x768: JUMPDEST 
0x769: V649 = 0x1
0x76b: V650 = S[0x1]
0x76c: V651 = 0x1
0x76e: V652 = 0xa0
0x770: V653 = 0x2
0x772: V654 = EXP 0x2 0xa0
0x773: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x774: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x776: JUMP 0x13c
---
Entry stack: [V12, 0x13c]
Stack pops: 1
Stack additions: [S0, V656]
Exit stack: [V12, 0x13c, V656]

================================

Block 0x777
[0x777:0x777]
---
Predecessors: [0x160, 0x29a]
Successors: [0x778]
---
0x777 JUMPDEST
---
0x777: JUMPDEST 
---
Entry stack: [V12, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168]

================================

Block 0x778
[0x778:0x779]
---
Predecessors: [0x777]
Successors: [0x168]
---
0x778 JUMPDEST
0x779 JUMP
---
0x778: JUMPDEST 
0x779: JUMP 0x168
---
Entry stack: [V12, 0x168]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x77a
[0x77a:0x788]
---
Predecessors: [0x172]
Successors: [0x13c]
---
0x77a JUMPDEST
0x77b PUSH1 0x3
0x77d SLOAD
0x77e PUSH1 0x1
0x780 PUSH1 0xa0
0x782 PUSH1 0x2
0x784 EXP
0x785 SUB
0x786 AND
0x787 DUP2
0x788 JUMP
---
0x77a: JUMPDEST 
0x77b: V657 = 0x3
0x77d: V658 = S[0x3]
0x77e: V659 = 0x1
0x780: V660 = 0xa0
0x782: V661 = 0x2
0x784: V662 = EXP 0x2 0xa0
0x785: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x786: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x788: JUMP 0x13c
---
Entry stack: [V12, 0x13c]
Stack pops: 1
Stack additions: [S0, V664]
Exit stack: [V12, 0x13c, V664]

================================

Block 0x789
[0x789:0x7d4]
---
Predecessors: [0x19e]
Successors: [0x7d5, 0x7d6]
---
0x789 JUMPDEST
0x78a PUSH1 0x1
0x78c SLOAD
0x78d PUSH1 0x40
0x78f DUP1
0x790 MLOAD
0x791 PUSH1 0x0
0x793 PUSH1 0x20
0x795 SWAP2
0x796 DUP3
0x797 ADD
0x798 DUP2
0x799 SWAP1
0x79a MSTORE
0x79b DUP3
0x79c MLOAD
0x79d PUSH1 0xe1
0x79f PUSH1 0x2
0x7a1 EXP
0x7a2 PUSH4 0x7e062a35
0x7a7 MUL
0x7a8 DUP2
0x7a9 MSTORE
0x7aa SWAP3
0x7ab MLOAD
0x7ac SWAP1
0x7ad SWAP4
0x7ae PUSH1 0x1
0x7b0 PUSH1 0xa0
0x7b2 PUSH1 0x2
0x7b4 EXP
0x7b5 SUB
0x7b6 AND
0x7b7 SWAP3
0x7b8 PUSH4 0xfc0c546a
0x7bd SWAP3
0x7be PUSH1 0x4
0x7c0 DUP1
0x7c1 DUP4
0x7c2 ADD
0x7c3 SWAP4
0x7c4 SWAP2
0x7c5 SWAP3
0x7c6 DUP3
0x7c7 SWAP1
0x7c8 SUB
0x7c9 ADD
0x7ca DUP2
0x7cb DUP8
0x7cc DUP8
0x7cd DUP1
0x7ce EXTCODESIZE
0x7cf ISZERO
0x7d0 ISZERO
0x7d1 PUSH2 0x7d6
0x7d4 JUMPI
---
0x789: JUMPDEST 
0x78a: V665 = 0x1
0x78c: V666 = S[0x1]
0x78d: V667 = 0x40
0x790: V668 = M[0x40]
0x791: V669 = 0x0
0x793: V670 = 0x20
0x797: V671 = ADD 0x20 V668
0x79a: M[V671] = 0x0
0x79c: V672 = M[0x40]
0x79d: V673 = 0xe1
0x79f: V674 = 0x2
0x7a1: V675 = EXP 0x2 0xe1
0x7a2: V676 = 0x7e062a35
0x7a7: V677 = MUL 0x7e062a35 0x200000000000000000000000000000000000000000000000000000000
0x7a9: M[V672] = 0xfc0c546a00000000000000000000000000000000000000000000000000000000
0x7ab: V678 = M[0x40]
0x7ae: V679 = 0x1
0x7b0: V680 = 0xa0
0x7b2: V681 = 0x2
0x7b4: V682 = EXP 0x2 0xa0
0x7b5: V683 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b6: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V666
0x7b8: V685 = 0xfc0c546a
0x7be: V686 = 0x4
0x7c2: V687 = ADD V672 0x4
0x7c8: V688 = SUB V672 V678
0x7c9: V689 = ADD V688 0x4
0x7ce: V690 = EXTCODESIZE V684
0x7cf: V691 = ISZERO V690
0x7d0: V692 = ISZERO V691
0x7d1: V693 = 0x7d6
0x7d4: JUMPI 0x7d6 V692
---
Entry stack: [V12, 0x168]
Stack pops: 0
Stack additions: [0x0, V684, 0xfc0c546a, V687, 0x20, V678, V689, V678, 0x0, V684]
Exit stack: [V12, 0x168, 0x0, V684, 0xfc0c546a, V687, 0x20, V678, V689, V678, 0x0, V684]

================================

Block 0x7d5
[0x7d5:0x7d5]
---
Predecessors: [0x789]
Successors: []
---
0x7d5 INVALID
---
0x7d5: INVALID 
---
Entry stack: [V12, 0x168, 0x0, V684, 0xfc0c546a, V687, 0x20, V678, V689, V678, 0x0, V684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168, 0x0, V684, 0xfc0c546a, V687, 0x20, V678, V689, V678, 0x0, V684]

================================

Block 0x7d6
[0x7d6:0x7e2]
---
Predecessors: [0x789]
Successors: [0x7e3, 0x7e4]
---
0x7d6 JUMPDEST
0x7d7 PUSH2 0x2c6
0x7da GAS
0x7db SUB
0x7dc CALL
0x7dd ISZERO
0x7de ISZERO
0x7df PUSH2 0x7e4
0x7e2 JUMPI
---
0x7d6: JUMPDEST 
0x7d7: V694 = 0x2c6
0x7da: V695 = GAS
0x7db: V696 = SUB V695 0x2c6
0x7dc: V697 = CALL V696 V684 0x0 V678 V689 V678 0x20
0x7dd: V698 = ISZERO V697
0x7de: V699 = ISZERO V698
0x7df: V700 = 0x7e4
0x7e2: JUMPI 0x7e4 V699
---
Entry stack: [V12, 0x168, 0x0, V684, 0xfc0c546a, V687, 0x20, V678, V689, V678, 0x0, V684]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x168, 0x0, V684, 0xfc0c546a, V687]

================================

Block 0x7e3
[0x7e3:0x7e3]
---
Predecessors: [0x7d6]
Successors: []
---
0x7e3 INVALID
---
0x7e3: INVALID 
---
Entry stack: [V12, 0x168, 0x0, V684, 0xfc0c546a, V687]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168, 0x0, V684, 0xfc0c546a, V687]

================================

Block 0x7e4
[0x7e4:0x86a]
---
Predecessors: [0x7d6]
Successors: [0x8f6]
---
0x7e4 JUMPDEST
0x7e5 POP
0x7e6 POP
0x7e7 PUSH1 0x40
0x7e9 DUP1
0x7ea MLOAD
0x7eb DUP1
0x7ec MLOAD
0x7ed PUSH1 0x1
0x7ef SLOAD
0x7f0 PUSH32 0x6368616e676528494552433230546f6b656e2c494552433230546f6b656e2c75
0x811 DUP4
0x812 MSTORE
0x813 PUSH32 0x696e743235362c75696e74323536292900000000000000000000000000000000
0x834 PUSH1 0x20
0x836 DUP5
0x837 ADD
0x838 MSTORE
0x839 SWAP3
0x83a MLOAD
0x83b SWAP2
0x83c DUP3
0x83d SWAP1
0x83e SUB
0x83f PUSH1 0x30
0x841 ADD
0x842 SWAP1
0x843 SWAP2
0x844 SHA3
0x845 PUSH1 0x2
0x847 SLOAD
0x848 SWAP2
0x849 SWAP5
0x84a POP
0x84b PUSH1 0x1
0x84d PUSH1 0xa0
0x84f PUSH1 0x2
0x851 EXP
0x852 SUB
0x853 SWAP3
0x854 DUP4
0x855 AND
0x856 SWAP4
0x857 POP
0x858 PUSH1 0xe0
0x85a PUSH1 0x2
0x85c EXP
0x85d SWAP1
0x85e DIV
0x85f SWAP2
0x860 DUP5
0x861 SWAP2
0x862 AND
0x863 PUSH2 0x86b
0x866 CALLER
0x867 PUSH2 0x8f6
0x86a JUMP
---
0x7e4: JUMPDEST 
0x7e7: V701 = 0x40
0x7ea: V702 = M[0x40]
0x7ec: V703 = M[V702]
0x7ed: V704 = 0x1
0x7ef: V705 = S[0x1]
0x7f0: V706 = 0x6368616e676528494552433230546f6b656e2c494552433230546f6b656e2c75
0x812: M[V702] = 0x6368616e676528494552433230546f6b656e2c494552433230546f6b656e2c75
0x813: V707 = 0x696e743235362c75696e74323536292900000000000000000000000000000000
0x834: V708 = 0x20
0x837: V709 = ADD V702 0x20
0x838: M[V709] = 0x696e743235362c75696e74323536292900000000000000000000000000000000
0x83a: V710 = M[0x40]
0x83e: V711 = SUB V702 V710
0x83f: V712 = 0x30
0x841: V713 = ADD 0x30 V711
0x844: V714 = SHA3 V710 V713
0x845: V715 = 0x2
0x847: V716 = S[0x2]
0x84b: V717 = 0x1
0x84d: V718 = 0xa0
0x84f: V719 = 0x2
0x851: V720 = EXP 0x2 0xa0
0x852: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x855: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0x858: V723 = 0xe0
0x85a: V724 = 0x2
0x85c: V725 = EXP 0x2 0xe0
0x85e: V726 = DIV V714 0x100000000000000000000000000000000000000000000000000000000
0x862: V727 = AND V716 0xffffffffffffffffffffffffffffffffffffffff
0x863: V728 = 0x86b
0x866: V729 = CALLER
0x867: V730 = 0x8f6
0x86a: JUMP 0x8f6
---
Entry stack: [V12, 0x168, 0x0, V684, 0xfc0c546a, V687]
Stack pops: 4
Stack additions: [V703, V722, V726, V703, V727, 0x86b, V729]
Exit stack: [V12, 0x168, V703, V722, V726, V703, V727, 0x86b, V729]

================================

Block 0x86b
[0x86b:0x8ca]
---
Predecessors: [0x97c]
Successors: [0x8cb, 0x8cc]
---
0x86b JUMPDEST
0x86c PUSH1 0x40
0x86e DUP1
0x86f MLOAD
0x870 PUSH1 0x0
0x872 PUSH1 0x20
0x874 SWAP2
0x875 DUP3
0x876 ADD
0x877 MSTORE
0x878 DUP2
0x879 MLOAD
0x87a PUSH1 0xe0
0x87c PUSH1 0x2
0x87e EXP
0x87f PUSH4 0xffffffff
0x884 DUP9
0x885 AND
0x886 MUL
0x887 DUP2
0x888 MSTORE
0x889 PUSH1 0x1
0x88b PUSH1 0xa0
0x88d PUSH1 0x2
0x88f EXP
0x890 SUB
0x891 SWAP6
0x892 DUP7
0x893 AND
0x894 PUSH1 0x4
0x896 DUP3
0x897 ADD
0x898 MSTORE
0x899 SWAP4
0x89a SWAP1
0x89b SWAP5
0x89c AND
0x89d PUSH1 0x24
0x89f DUP5
0x8a0 ADD
0x8a1 MSTORE
0x8a2 PUSH1 0x44
0x8a4 DUP4
0x8a5 ADD
0x8a6 SWAP2
0x8a7 SWAP1
0x8a8 SWAP2
0x8a9 MSTORE
0x8aa PUSH1 0x1
0x8ac PUSH1 0x64
0x8ae DUP4
0x8af ADD
0x8b0 MSTORE
0x8b1 MLOAD
0x8b2 PUSH1 0x84
0x8b4 DUP1
0x8b5 DUP4
0x8b6 ADD
0x8b7 SWAP4
0x8b8 SWAP3
0x8b9 DUP3
0x8ba SWAP1
0x8bb SUB
0x8bc ADD
0x8bd DUP2
0x8be DUP7
0x8bf PUSH2 0x2c6
0x8c2 GAS
0x8c3 SUB
0x8c4 DELEGATECALL
0x8c5 ISZERO
0x8c6 ISZERO
0x8c7 PUSH2 0x8cc
0x8ca JUMPI
---
0x86b: JUMPDEST 
0x86c: V731 = 0x40
0x86f: V732 = M[0x40]
0x870: V733 = 0x0
0x872: V734 = 0x20
0x876: V735 = ADD 0x20 V732
0x877: M[V735] = 0x0
0x879: V736 = M[0x40]
0x87a: V737 = 0xe0
0x87c: V738 = 0x2
0x87e: V739 = EXP 0x2 0xe0
0x87f: V740 = 0xffffffff
0x885: V741 = AND V726 0xffffffff
0x886: V742 = MUL V741 0x100000000000000000000000000000000000000000000000000000000
0x888: M[V736] = V742
0x889: V743 = 0x1
0x88b: V744 = 0xa0
0x88d: V745 = 0x2
0x88f: V746 = EXP 0x2 0xa0
0x890: V747 = SUB 0x10000000000000000000000000000000000000000 0x1
0x893: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0x894: V749 = 0x4
0x897: V750 = ADD V736 0x4
0x898: M[V750] = V748
0x89c: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x89d: V752 = 0x24
0x8a0: V753 = ADD V736 0x24
0x8a1: M[V753] = V751
0x8a2: V754 = 0x44
0x8a5: V755 = ADD V736 0x44
0x8a9: M[V755] = S0
0x8aa: V756 = 0x1
0x8ac: V757 = 0x64
0x8af: V758 = ADD V736 0x64
0x8b0: M[V758] = 0x1
0x8b1: V759 = M[0x40]
0x8b2: V760 = 0x84
0x8b6: V761 = ADD V736 0x84
0x8bb: V762 = SUB V736 V759
0x8bc: V763 = ADD V762 0x84
0x8bf: V764 = 0x2c6
0x8c2: V765 = GAS
0x8c3: V766 = SUB V765 0x2c6
0x8c4: V767 = DELEGATECALL V766 V722 V759 V763 V759 0x20
0x8c5: V768 = ISZERO V767
0x8c6: V769 = ISZERO V768
0x8c7: V770 = 0x8cc
0x8ca: JUMPI 0x8cc V769
---
Entry stack: [V12, 0x168, V703, V722, V726, V703, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V761]
Exit stack: [V12, 0x168, V703, V722, V726, V761]

================================

Block 0x8cb
[0x8cb:0x8cb]
---
Predecessors: [0x86b]
Successors: []
---
0x8cb INVALID
---
0x8cb: INVALID 
---
Entry stack: [V12, 0x168, V703, V722, V726, V761]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168, V703, V722, V726, V761]

================================

Block 0x8cc
[0x8cc:0x8da]
---
Predecessors: [0x86b]
Successors: [0x8db, 0x8e0]
---
0x8cc JUMPDEST
0x8cd POP
0x8ce POP
0x8cf PUSH1 0x40
0x8d1 MLOAD
0x8d2 MLOAD
0x8d3 ISZERO
0x8d4 ISZERO
0x8d5 SWAP1
0x8d6 POP
0x8d7 PUSH2 0x8e0
0x8da JUMPI
---
0x8cc: JUMPDEST 
0x8cf: V771 = 0x40
0x8d1: V772 = M[0x40]
0x8d2: V773 = M[V772]
0x8d3: V774 = ISZERO V773
0x8d4: V775 = ISZERO V774
0x8d7: V776 = 0x8e0
0x8da: JUMPI 0x8e0 V775
---
Entry stack: [V12, 0x168, V703, V722, V726, V761]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x168, V703]

================================

Block 0x8db
[0x8db:0x8df]
---
Predecessors: [0x8cc]
Successors: []
---
0x8db PUSH1 0x0
0x8dd PUSH1 0x0
0x8df REVERT
---
0x8db: V777 = 0x0
0x8dd: V778 = 0x0
0x8df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x168, V703]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168, V703]

================================

Block 0x8e0
[0x8e0:0x8e0]
---
Predecessors: [0x8cc]
Successors: [0x8e1]
---
0x8e0 JUMPDEST
---
0x8e0: JUMPDEST 
---
Entry stack: [V12, 0x168, V703]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168, V703]

================================

Block 0x8e1
[0x8e1:0x8e3]
---
Predecessors: [0x8e0]
Successors: [0x168]
---
0x8e1 JUMPDEST
0x8e2 POP
0x8e3 JUMP
---
0x8e1: JUMPDEST 
0x8e3: JUMP 0x168
---
Entry stack: [V12, 0x168, V703]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x8e4
[0x8e4:0x8f5]
---
Predecessors: [0x1b0]
Successors: [0xbe]
---
0x8e4 JUMPDEST
0x8e5 PUSH1 0x4
0x8e7 PUSH1 0x20
0x8e9 MSTORE
0x8ea PUSH1 0x0
0x8ec SWAP1
0x8ed DUP2
0x8ee MSTORE
0x8ef PUSH1 0x40
0x8f1 SWAP1
0x8f2 SHA3
0x8f3 SLOAD
0x8f4 DUP2
0x8f5 JUMP
---
0x8e4: JUMPDEST 
0x8e5: V779 = 0x4
0x8e7: V780 = 0x20
0x8e9: M[0x20] = 0x4
0x8ea: V781 = 0x0
0x8ee: M[0x0] = V155
0x8ef: V782 = 0x40
0x8f2: V783 = SHA3 0x0 0x40
0x8f3: V784 = S[V783]
0x8f5: JUMP 0xbe
---
Entry stack: [V12, 0xbe, V155]
Stack pops: 2
Stack additions: [S1, V784]
Exit stack: [V12, 0xbe, V784]

================================

Block 0x8f6
[0x8f6:0x962]
---
Predecessors: [0x1de, 0x7e4]
Successors: [0x963, 0x964]
---
0x8f6 JUMPDEST
0x8f7 PUSH1 0x3
0x8f9 SLOAD
0x8fa PUSH1 0x40
0x8fc DUP1
0x8fd MLOAD
0x8fe PUSH1 0x0
0x900 PUSH1 0x20
0x902 SWAP2
0x903 DUP3
0x904 ADD
0x905 DUP2
0x906 SWAP1
0x907 MSTORE
0x908 DUP3
0x909 MLOAD
0x90a PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x92b DUP2
0x92c MSTORE
0x92d PUSH1 0x1
0x92f PUSH1 0xa0
0x931 PUSH1 0x2
0x933 EXP
0x934 SUB
0x935 DUP7
0x936 DUP2
0x937 AND
0x938 PUSH1 0x4
0x93a DUP4
0x93b ADD
0x93c MSTORE
0x93d SWAP4
0x93e MLOAD
0x93f SWAP2
0x940 SWAP5
0x941 SWAP4
0x942 SWAP1
0x943 SWAP4
0x944 AND
0x945 SWAP3
0x946 PUSH4 0x70a08231
0x94b SWAP3
0x94c PUSH1 0x24
0x94e DUP1
0x94f DUP4
0x950 ADD
0x951 SWAP4
0x952 SWAP2
0x953 SWAP3
0x954 DUP3
0x955 SWAP1
0x956 SUB
0x957 ADD
0x958 DUP2
0x959 DUP8
0x95a DUP8
0x95b DUP1
0x95c EXTCODESIZE
0x95d ISZERO
0x95e ISZERO
0x95f PUSH2 0x964
0x962 JUMPI
---
0x8f6: JUMPDEST 
0x8f7: V785 = 0x3
0x8f9: V786 = S[0x3]
0x8fa: V787 = 0x40
0x8fd: V788 = M[0x40]
0x8fe: V789 = 0x0
0x900: V790 = 0x20
0x904: V791 = ADD 0x20 V788
0x907: M[V791] = 0x0
0x909: V792 = M[0x40]
0x90a: V793 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x92c: M[V792] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x92d: V794 = 0x1
0x92f: V795 = 0xa0
0x931: V796 = 0x2
0x933: V797 = EXP 0x2 0xa0
0x934: V798 = SUB 0x10000000000000000000000000000000000000000 0x1
0x937: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x938: V800 = 0x4
0x93b: V801 = ADD V792 0x4
0x93c: M[V801] = V799
0x93e: V802 = M[0x40]
0x944: V803 = AND V786 0xffffffffffffffffffffffffffffffffffffffff
0x946: V804 = 0x70a08231
0x94c: V805 = 0x24
0x950: V806 = ADD V792 0x24
0x956: V807 = SUB V792 V802
0x957: V808 = ADD V807 0x24
0x95c: V809 = EXTCODESIZE V803
0x95d: V810 = ISZERO V809
0x95e: V811 = ISZERO V810
0x95f: V812 = 0x964
0x962: JUMPI 0x964 V811
---
Entry stack: [V12, 0x168, V703, V722, V726, V703, S2, {0xbe, 0x86b}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V803, 0x70a08231, V806, 0x20, V802, V808, V802, 0x0, V803]
Exit stack: [V12, 0x168, V703, V722, V726, V703, S2, {0xbe, 0x86b}, S0, 0x0, V803, 0x70a08231, V806, 0x20, V802, V808, V802, 0x0, V803]

================================

Block 0x963
[0x963:0x963]
---
Predecessors: [0x8f6]
Successors: []
---
0x963 INVALID
---
0x963: INVALID 
---
Entry stack: [V12, 0x168, V703, V722, V726, V703, S12, {0xbe, 0x86b}, S10, 0x0, V803, 0x70a08231, V806, 0x20, V802, V808, V802, 0x0, V803]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168, V703, V722, V726, V703, S12, {0xbe, 0x86b}, S10, 0x0, V803, 0x70a08231, V806, 0x20, V802, V808, V802, 0x0, V803]

================================

Block 0x964
[0x964:0x970]
---
Predecessors: [0x8f6]
Successors: [0x971, 0x972]
---
0x964 JUMPDEST
0x965 PUSH2 0x2c6
0x968 GAS
0x969 SUB
0x96a CALL
0x96b ISZERO
0x96c ISZERO
0x96d PUSH2 0x972
0x970 JUMPI
---
0x964: JUMPDEST 
0x965: V813 = 0x2c6
0x968: V814 = GAS
0x969: V815 = SUB V814 0x2c6
0x96a: V816 = CALL V815 V803 0x0 V802 V808 V802 0x20
0x96b: V817 = ISZERO V816
0x96c: V818 = ISZERO V817
0x96d: V819 = 0x972
0x970: JUMPI 0x972 V818
---
Entry stack: [V12, 0x168, V703, V722, V726, V703, S12, {0xbe, 0x86b}, S10, 0x0, V803, 0x70a08231, V806, 0x20, V802, V808, V802, 0x0, V803]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x168, V703, V722, V726, V703, S12, {0xbe, 0x86b}, S10, 0x0, V803, 0x70a08231, V806]

================================

Block 0x971
[0x971:0x971]
---
Predecessors: [0x964]
Successors: []
---
0x971 INVALID
---
0x971: INVALID 
---
Entry stack: [V12, 0x168, V703, V722, V726, V703, S6, {0xbe, 0x86b}, S4, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168, V703, V722, V726, V703, S6, {0xbe, 0x86b}, S4, 0x0, S2, 0x70a08231, S0]

================================

Block 0x972
[0x972:0x97b]
---
Predecessors: [0x964]
Successors: [0x97c]
---
0x972 JUMPDEST
0x973 POP
0x974 POP
0x975 PUSH1 0x40
0x977 MLOAD
0x978 MLOAD
0x979 SWAP2
0x97a POP
0x97b POP
---
0x972: JUMPDEST 
0x975: V820 = 0x40
0x977: V821 = M[0x40]
0x978: V822 = M[V821]
---
Entry stack: [V12, 0x168, V703, V722, V726, V703, S6, {0xbe, 0x86b}, S4, 0x0, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V822]
Exit stack: [V12, 0x168, V703, V722, V726, V703, S6, {0xbe, 0x86b}, S4, V822]

================================

Block 0x97c
[0x97c:0x980]
---
Predecessors: [0x972]
Successors: [0xbe, 0x86b]
---
0x97c JUMPDEST
0x97d SWAP2
0x97e SWAP1
0x97f POP
0x980 JUMP
---
0x97c: JUMPDEST 
0x980: JUMP {0xbe, 0x86b}
---
Entry stack: [V12, 0x168, V703, V722, V726, V703, S3, {0xbe, 0x86b}, S1, V822]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x168, V703, V722, V726, V703, S3, V822]

================================

Block 0x981
[0x981:0x997]
---
Predecessors: [0x20c]
Successors: [0x998, 0x99d]
---
0x981 JUMPDEST
0x982 PUSH1 0x0
0x984 SLOAD
0x985 CALLER
0x986 PUSH1 0x1
0x988 PUSH1 0xa0
0x98a PUSH1 0x2
0x98c EXP
0x98d SUB
0x98e SWAP1
0x98f DUP2
0x990 AND
0x991 SWAP2
0x992 AND
0x993 EQ
0x994 PUSH2 0x99d
0x997 JUMPI
---
0x981: JUMPDEST 
0x982: V823 = 0x0
0x984: V824 = S[0x0]
0x985: V825 = CALLER
0x986: V826 = 0x1
0x988: V827 = 0xa0
0x98a: V828 = 0x2
0x98c: V829 = EXP 0x2 0xa0
0x98d: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x990: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V825
0x992: V832 = AND V824 0xffffffffffffffffffffffffffffffffffffffff
0x993: V833 = EQ V832 V831
0x994: V834 = 0x99d
0x997: JUMPI 0x99d V833
---
Entry stack: [V12, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168]

================================

Block 0x998
[0x998:0x99c]
---
Predecessors: [0x981]
Successors: []
---
0x998 PUSH1 0x0
0x99a PUSH1 0x0
0x99c REVERT
---
0x998: V835 = 0x0
0x99a: V836 = 0x0
0x99c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168]

================================

Block 0x99d
[0x99d:0x9aa]
---
Predecessors: [0x981]
Successors: []
---
0x99d JUMPDEST
0x99e PUSH1 0x0
0x9a0 SLOAD
0x9a1 PUSH1 0x1
0x9a3 PUSH1 0xa0
0x9a5 PUSH1 0x2
0x9a7 EXP
0x9a8 SUB
0x9a9 AND
0x9aa SELFDESTRUCT
---
0x99d: JUMPDEST 
0x99e: V837 = 0x0
0x9a0: V838 = S[0x0]
0x9a1: V839 = 0x1
0x9a3: V840 = 0xa0
0x9a5: V841 = 0x2
0x9a7: V842 = EXP 0x2 0xa0
0x9a8: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a9: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0x9aa: SELFDESTRUCT V844
---
Entry stack: [V12, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x168]

================================

Block 0x9ab
[0x9ab:0x9ac]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x9ab JUMPDEST
0x9ac JUMP
---
0x9ab: JUMPDEST 
0x9ac: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9ad
[0x9ad:0x9bb]
---
Predecessors: [0x21e]
Successors: [0x13c]
---
0x9ad JUMPDEST
0x9ae PUSH1 0x0
0x9b0 SLOAD
0x9b1 PUSH1 0x1
0x9b3 PUSH1 0xa0
0x9b5 PUSH1 0x2
0x9b7 EXP
0x9b8 SUB
0x9b9 AND
0x9ba DUP2
0x9bb JUMP
---
0x9ad: JUMPDEST 
0x9ae: V845 = 0x0
0x9b0: V846 = S[0x0]
0x9b1: V847 = 0x1
0x9b3: V848 = 0xa0
0x9b5: V849 = 0x2
0x9b7: V850 = EXP 0x2 0xa0
0x9b8: V851 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b9: V852 = AND 0xffffffffffffffffffffffffffffffffffffffff V846
0x9bb: JUMP 0x13c
---
Entry stack: [V12, 0x13c]
Stack pops: 1
Stack additions: [S0, V852]
Exit stack: [V12, 0x13c, V852]

================================

Block 0x9bc
[0x9bc:0xa09]
---
Predecessors: [0x24a]
Successors: [0xa0a, 0xa0b]
---
0x9bc JUMPDEST
0x9bd PUSH1 0x1
0x9bf SLOAD
0x9c0 PUSH1 0x40
0x9c2 DUP1
0x9c3 MLOAD
0x9c4 PUSH1 0x0
0x9c6 PUSH1 0x20
0x9c8 SWAP2
0x9c9 DUP3
0x9ca ADD
0x9cb DUP2
0x9cc SWAP1
0x9cd MSTORE
0x9ce DUP3
0x9cf MLOAD
0x9d0 PUSH1 0xe1
0x9d2 PUSH1 0x2
0x9d4 EXP
0x9d5 PUSH4 0x7e062a35
0x9da MUL
0x9db DUP2
0x9dc MSTORE
0x9dd SWAP3
0x9de MLOAD
0x9df SWAP1
0x9e0 SWAP4
0x9e1 DUP5
0x9e2 SWAP4
0x9e3 PUSH1 0x1
0x9e5 PUSH1 0xa0
0x9e7 PUSH1 0x2
0x9e9 EXP
0x9ea SUB
0x9eb SWAP1
0x9ec SWAP2
0x9ed AND
0x9ee SWAP3
0x9ef PUSH4 0xfc0c546a
0x9f4 SWAP3
0x9f5 PUSH1 0x4
0x9f7 DUP1
0x9f8 DUP5
0x9f9 ADD
0x9fa SWAP4
0x9fb DUP3
0x9fc SWAP1
0x9fd SUB
0x9fe ADD
0x9ff DUP2
0xa00 DUP8
0xa01 DUP8
0xa02 DUP1
0xa03 EXTCODESIZE
0xa04 ISZERO
0xa05 ISZERO
0xa06 PUSH2 0xa0b
0xa09 JUMPI
---
0x9bc: JUMPDEST 
0x9bd: V853 = 0x1
0x9bf: V854 = S[0x1]
0x9c0: V855 = 0x40
0x9c3: V856 = M[0x40]
0x9c4: V857 = 0x0
0x9c6: V858 = 0x20
0x9ca: V859 = ADD 0x20 V856
0x9cd: M[V859] = 0x0
0x9cf: V860 = M[0x40]
0x9d0: V861 = 0xe1
0x9d2: V862 = 0x2
0x9d4: V863 = EXP 0x2 0xe1
0x9d5: V864 = 0x7e062a35
0x9da: V865 = MUL 0x7e062a35 0x200000000000000000000000000000000000000000000000000000000
0x9dc: M[V860] = 0xfc0c546a00000000000000000000000000000000000000000000000000000000
0x9de: V866 = M[0x40]
0x9e3: V867 = 0x1
0x9e5: V868 = 0xa0
0x9e7: V869 = 0x2
0x9e9: V870 = EXP 0x2 0xa0
0x9ea: V871 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ed: V872 = AND V854 0xffffffffffffffffffffffffffffffffffffffff
0x9ef: V873 = 0xfc0c546a
0x9f5: V874 = 0x4
0x9f9: V875 = ADD V860 0x4
0x9fd: V876 = SUB V860 V866
0x9fe: V877 = ADD V876 0x4
0xa03: V878 = EXTCODESIZE V872
0xa04: V879 = ISZERO V878
0xa05: V880 = ISZERO V879
0xa06: V881 = 0xa0b
0xa09: JUMPI 0xa0b V880
---
Entry stack: [V12, 0xbe, V209]
Stack pops: 0
Stack additions: [0x0, 0x0, V872, 0xfc0c546a, V875, 0x20, V866, V877, V866, 0x0, V872]
Exit stack: [V12, 0xbe, V209, 0x0, 0x0, V872, 0xfc0c546a, V875, 0x20, V866, V877, V866, 0x0, V872]

================================

Block 0xa0a
[0xa0a:0xa0a]
---
Predecessors: [0x9bc]
Successors: []
---
0xa0a INVALID
---
0xa0a: INVALID 
---
Entry stack: [V12, 0xbe, V209, 0x0, 0x0, V872, 0xfc0c546a, V875, 0x20, V866, V877, V866, 0x0, V872]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V209, 0x0, 0x0, V872, 0xfc0c546a, V875, 0x20, V866, V877, V866, 0x0, V872]

================================

Block 0xa0b
[0xa0b:0xa17]
---
Predecessors: [0x9bc]
Successors: [0xa18, 0xa19]
---
0xa0b JUMPDEST
0xa0c PUSH2 0x2c6
0xa0f GAS
0xa10 SUB
0xa11 CALL
0xa12 ISZERO
0xa13 ISZERO
0xa14 PUSH2 0xa19
0xa17 JUMPI
---
0xa0b: JUMPDEST 
0xa0c: V882 = 0x2c6
0xa0f: V883 = GAS
0xa10: V884 = SUB V883 0x2c6
0xa11: V885 = CALL V884 V872 0x0 V866 V877 V866 0x20
0xa12: V886 = ISZERO V885
0xa13: V887 = ISZERO V886
0xa14: V888 = 0xa19
0xa17: JUMPI 0xa19 V887
---
Entry stack: [V12, 0xbe, V209, 0x0, 0x0, V872, 0xfc0c546a, V875, 0x20, V866, V877, V866, 0x0, V872]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbe, V209, 0x0, 0x0, V872, 0xfc0c546a, V875]

================================

Block 0xa18
[0xa18:0xa18]
---
Predecessors: [0xa0b]
Successors: []
---
0xa18 INVALID
---
0xa18: INVALID 
---
Entry stack: [V12, 0xbe, V209, 0x0, 0x0, V872, 0xfc0c546a, V875]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V209, 0x0, 0x0, V872, 0xfc0c546a, V875]

================================

Block 0xa19
[0xa19:0xa9d]
---
Predecessors: [0xa0b]
Successors: [0x6ae, 0xa9e]
---
0xa19 JUMPDEST
0xa1a POP
0xa1b POP
0xa1c PUSH1 0x40
0xa1e DUP1
0xa1f MLOAD
0xa20 DUP1
0xa21 MLOAD
0xa22 PUSH1 0x1
0xa24 SLOAD
0xa25 PUSH1 0x2
0xa27 SLOAD
0xa28 PUSH1 0x0
0xa2a PUSH1 0x20
0xa2c SWAP5
0xa2d DUP6
0xa2e ADD
0xa2f DUP2
0xa30 SWAP1
0xa31 MSTORE
0xa32 DUP6
0xa33 MLOAD
0xa34 PUSH32 0x1e1401f800000000000000000000000000000000000000000000000000000000
0xa55 DUP2
0xa56 MSTORE
0xa57 PUSH1 0x1
0xa59 PUSH1 0xa0
0xa5b PUSH1 0x2
0xa5d EXP
0xa5e SUB
0xa5f DUP1
0xa60 DUP7
0xa61 AND
0xa62 PUSH1 0x4
0xa64 DUP4
0xa65 ADD
0xa66 MSTORE
0xa67 SWAP3
0xa68 DUP4
0xa69 AND
0xa6a PUSH1 0x24
0xa6c DUP3
0xa6d ADD
0xa6e MSTORE
0xa6f PUSH1 0x44
0xa71 DUP2
0xa72 ADD
0xa73 DUP12
0xa74 SWAP1
0xa75 MSTORE
0xa76 SWAP6
0xa77 MLOAD
0xa78 SWAP4
0xa79 SWAP8
0xa7a POP
0xa7b SWAP2
0xa7c AND
0xa7d SWAP5
0xa7e POP
0xa7f PUSH4 0x1e1401f8
0xa84 SWAP4
0xa85 PUSH1 0x64
0xa87 DUP1
0xa88 DUP3
0xa89 ADD
0xa8a SWAP5
0xa8b SWAP4
0xa8c SWAP3
0xa8d SWAP2
0xa8e DUP4
0xa8f SWAP1
0xa90 SUB
0xa91 ADD
0xa92 SWAP1
0xa93 DUP3
0xa94 SWAP1
0xa95 DUP8
0xa96 DUP1
0xa97 EXTCODESIZE
0xa98 ISZERO
0xa99 ISZERO
0xa9a PUSH2 0x6ae
0xa9d JUMPI
---
0xa19: JUMPDEST 
0xa1c: V889 = 0x40
0xa1f: V890 = M[0x40]
0xa21: V891 = M[V890]
0xa22: V892 = 0x1
0xa24: V893 = S[0x1]
0xa25: V894 = 0x2
0xa27: V895 = S[0x2]
0xa28: V896 = 0x0
0xa2a: V897 = 0x20
0xa2e: V898 = ADD 0x20 V890
0xa31: M[V898] = 0x0
0xa33: V899 = M[0x40]
0xa34: V900 = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0xa56: M[V899] = 0x1e1401f800000000000000000000000000000000000000000000000000000000
0xa57: V901 = 0x1
0xa59: V902 = 0xa0
0xa5b: V903 = 0x2
0xa5d: V904 = EXP 0x2 0xa0
0xa5e: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa61: V906 = AND V891 0xffffffffffffffffffffffffffffffffffffffff
0xa62: V907 = 0x4
0xa65: V908 = ADD V899 0x4
0xa66: M[V908] = V906
0xa69: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0xa6a: V910 = 0x24
0xa6d: V911 = ADD V899 0x24
0xa6e: M[V911] = V909
0xa6f: V912 = 0x44
0xa72: V913 = ADD V899 0x44
0xa75: M[V913] = V209
0xa77: V914 = M[0x40]
0xa7c: V915 = AND V893 0xffffffffffffffffffffffffffffffffffffffff
0xa7f: V916 = 0x1e1401f8
0xa85: V917 = 0x64
0xa89: V918 = ADD V899 0x64
0xa90: V919 = SUB V899 V914
0xa91: V920 = ADD V919 0x64
0xa97: V921 = EXTCODESIZE V915
0xa98: V922 = ISZERO V921
0xa99: V923 = ISZERO V922
0xa9a: V924 = 0x6ae
0xa9d: JUMPI 0x6ae V923
---
Entry stack: [V12, 0xbe, V209, 0x0, 0x0, V872, 0xfc0c546a, V875]
Stack pops: 6
Stack additions: [S5, S4, V891, V915, 0x1e1401f8, V918, 0x20, V914, V920, V914, 0x0, V915]
Exit stack: [V12, 0xbe, V209, 0x0, V891, V915, 0x1e1401f8, V918, 0x20, V914, V920, V914, 0x0, V915]

================================

Block 0xa9e
[0xa9e:0xa9e]
---
Predecessors: [0xa19]
Successors: []
---
0xa9e INVALID
---
0xa9e: INVALID 
---
Entry stack: [V12, 0xbe, V209, 0x0, V891, V915, 0x1e1401f8, V918, 0x20, V914, V920, V914, 0x0, V915]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V209, 0x0, V891, V915, 0x1e1401f8, V918, 0x20, V914, V920, V914, 0x0, V915]

================================

Block 0xa9f
[0xa9f:0xaab]
---
Predecessors: []
Successors: [0x6bc, 0xaac]
---
0xa9f JUMPDEST
0xaa0 PUSH2 0x2c6
0xaa3 GAS
0xaa4 SUB
0xaa5 CALL
0xaa6 ISZERO
0xaa7 ISZERO
0xaa8 PUSH2 0x6bc
0xaab JUMPI
---
0xa9f: JUMPDEST 
0xaa0: V925 = 0x2c6
0xaa3: V926 = GAS
0xaa4: V927 = SUB V926 0x2c6
0xaa5: V928 = CALL V927 S0 S1 S2 S3 S4 S5
0xaa6: V929 = ISZERO V928
0xaa7: V930 = ISZERO V929
0xaa8: V931 = 0x6bc
0xaab: JUMPI 0x6bc V930
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xaac
[0xaac:0xab6]
---
Predecessors: [0xa9f]
Successors: [0xab7]
---
0xaac INVALID
0xaad JUMPDEST
0xaae POP
0xaaf POP
0xab0 PUSH1 0x40
0xab2 MLOAD
0xab3 MLOAD
0xab4 SWAP3
0xab5 POP
0xab6 POP
---
0xaac: INVALID 
0xaad: JUMPDEST 
0xab0: V932 = 0x40
0xab2: V933 = M[0x40]
0xab3: V934 = M[V933]
---
Entry stack: []
Stack pops: 0
Stack additions: [S3, V934]
Exit stack: []

================================

Block 0xab7
[0xab7:0xabc]
---
Predecessors: [0xaac]
Successors: []
Has unresolved jump.
---
0xab7 JUMPDEST
0xab8 POP
0xab9 SWAP2
0xaba SWAP1
0xabb POP
0xabc JUMP
---
0xab7: JUMPDEST 
0xabc: JUMP S3
---
Entry stack: [V934, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V934]

================================

Block 0xabd
[0xabd:0xacb]
---
Predecessors: [0x26f]
Successors: [0x13c]
---
0xabd JUMPDEST
0xabe PUSH1 0x2
0xac0 SLOAD
0xac1 PUSH1 0x1
0xac3 PUSH1 0xa0
0xac5 PUSH1 0x2
0xac7 EXP
0xac8 SUB
0xac9 AND
0xaca DUP2
0xacb JUMP
---
0xabd: JUMPDEST 
0xabe: V935 = 0x2
0xac0: V936 = S[0x2]
0xac1: V937 = 0x1
0xac3: V938 = 0xa0
0xac5: V939 = 0x2
0xac7: V940 = EXP 0x2 0xa0
0xac8: V941 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac9: V942 = AND 0xffffffffffffffffffffffffffffffffffffffff V936
0xacb: JUMP 0x13c
---
Entry stack: [V12, 0x13c]
Stack pops: 1
Stack additions: [S0, V942]
Exit stack: [V12, 0x13c, V942]

================================

Block 0xacc
[0xacc:0xacc]
---
Predecessors: []
Successors: [0xacd]
---
0xacc JUMPDEST
---
0xacc: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xacd
[0xacd:0xb02]
---
Predecessors: [0xacc]
Successors: []
---
0xacd JUMPDEST
0xace JUMP
0xacf STOP
0xad0 LOG1
0xad1 PUSH6 0x627a7a723058
0xad8 SHA3
0xad9 MISSING 0xdf
0xada MISSING 0xd7
0xadb SLT
0xadc MUL
0xadd DIV
0xade MISSING 0xe4
0xadf MISSING 0x28
0xae0 ISZERO
0xae1 SWAP5
0xae2 EXP
0xae3 SWAP12
0xae4 MISSING 0xbe
0xae5 MISSING 0xc3
0xae6 MISSING 0xe2
0xae7 MISSING 0xd9
0xae8 PUSH26 0xb479a2884df6e0ed7f17a29a044db6490029
---
0xacd: JUMPDEST 
0xace: JUMP S0
0xacf: STOP 
0xad0: LOG S0 S1 S2
0xad1: V943 = 0x627a7a723058
0xad8: V944 = SHA3 0x627a7a723058 S3
0xad9: MISSING 0xdf
0xada: MISSING 0xd7
0xadb: V945 = SLT S0 S1
0xadc: V946 = MUL V945 S2
0xadd: V947 = DIV V946 S3
0xade: MISSING 0xe4
0xadf: MISSING 0x28
0xae0: V948 = ISZERO S0
0xae2: V949 = EXP S5 S1
0xae4: MISSING 0xbe
0xae5: MISSING 0xc3
0xae6: MISSING 0xe2
0xae7: MISSING 0xd9
0xae8: V950 = 0xb479a2884df6e0ed7f17a29a044db6490029
---
Entry stack: []
Stack pops: 760
Stack additions: [0xb479a2884df6e0ed7f17a29a044db6490029]
Exit stack: []

================================

Function 0:
Public function signature: 0x7bfce37
Entry block: 0xb6
Exit block: 0xbe
Body: 0xb6, 0xbe, 0x2a5, 0x2fc, 0x2fd, 0x30a, 0x30b, 0x386, 0x387, 0x394, 0x395, 0x3a4, 0x3a5, 0x41b, 0x41c, 0x429, 0x42a, 0x439, 0x43a, 0x487, 0x488, 0x495, 0x496, 0x521, 0x522, 0x52f, 0x530, 0x5a3, 0x5a4, 0x5b1, 0x5b2, 0x5c1, 0x5c2, 0x5c6

Function 1:
Public function signature: 0x1111cd24
Entry block: 0xd0
Exit block: 0xbe
Body: 0xbe, 0xd0, 0xd7, 0xd8, 0x5cb, 0x619, 0x61a, 0x627, 0x628, 0x6ad, 0x6ae, 0x6bb, 0x6bc, 0x6c6

Function 2:
Public function signature: 0x1e1401f8
Entry block: 0xf5
Exit block: 0xbe
Body: 0xbe, 0xf5, 0xfc, 0xfd, 0x6cc, 0x748, 0x749, 0x756, 0x757, 0x761

Function 3:
Public function signature: 0x387a76ce
Entry block: 0x12c
Exit block: 0x13c
Body: 0x12c, 0x133, 0x134, 0x13c, 0x768

Function 4:
Public function signature: 0x3ccfd60b
Entry block: 0x158
Exit block: 0x168
Body: 0x158, 0x15f, 0x160, 0x168

Function 5:
Public function signature: 0x40ab7b8c
Entry block: 0x16a
Exit block: 0x13c
Body: 0x13c, 0x16a, 0x171, 0x172, 0x77a

Function 6:
Public function signature: 0x43d726d6
Entry block: 0x196
Exit block: 0x168
Body: 0x168, 0x196, 0x19d, 0x19e, 0x789, 0x7d5, 0x7d6, 0x7e3, 0x7e4, 0x86b, 0x8cb, 0x8cc, 0x8db, 0x8e0, 0x8e1

Function 7:
Public function signature: 0x55f57510
Entry block: 0x1a8
Exit block: 0xbe
Body: 0xbe, 0x1a8, 0x1af, 0x1b0, 0x8e4

Function 8:
Public function signature: 0x65483f69
Entry block: 0x1d6
Exit block: 0xbe
Body: 0xbe, 0x1d6, 0x1dd, 0x1de

Function 9:
Public function signature: 0x86d1a69f
Entry block: 0x204
Exit block: 0x99d
Body: 0x204, 0x20b, 0x20c, 0x981, 0x998, 0x99d

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x216
Exit block: 0x13c
Body: 0x13c, 0x216, 0x21d, 0x21e, 0x9ad

Function 11:
Public function signature: 0xa5a9ba8d
Entry block: 0x242
Exit block: 0xbe
Body: 0xbe, 0x242, 0x249, 0x24a, 0x6ae, 0x6bb, 0x6bc, 0x6c6, 0x9bc, 0xa0a, 0xa0b, 0xa18, 0xa19, 0xa9e

Function 12:
Public function signature: 0xb8066bcb
Entry block: 0x267
Exit block: 0x13c
Body: 0x13c, 0x267, 0x26e, 0x26f, 0xabd

Function 13:
Public function signature: 0xd75352e1
Entry block: 0x158
Exit block: 0x168
Body: 0x158, 0x15f, 0x160, 0x168

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0xb4
Body: 0xb4

Function 15:
Private function
Entry block: 0x8f6
Exit block: 0x97c
Body: 0x8f6, 0x964, 0x972, 0x97c

Function 16:
Private function
Entry block: 0x777
Exit block: 0x8e1
Body: 0x777, 0x778

