Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1fffe0ab
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1fffe0ab
0x3c: V13 = EQ 0x1fffe0ab V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x95]
---
0x41 DUP1
0x42 PUSH4 0xb3b5eaa3
0x47 EQ
0x48 PUSH2 0x95
0x4b JUMPI
---
0x42: V15 = 0xb3b5eaa3
0x47: V16 = EQ 0xb3b5eaa3 V11
0x48: V17 = 0x95
0x4b: JUMPI 0x95 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xce]
---
0x4c DUP1
0x4d PUSH4 0xb9f11894
0x52 EQ
0x53 PUSH2 0xce
0x56 JUMPI
---
0x4d: V18 = 0xb9f11894
0x52: V19 = EQ 0xb9f11894 V11
0x53: V20 = 0xce
0x56: JUMPI 0xce V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x92]
---
Predecessors: [0x5c]
Successors: [0xfc]
---
0x67 JUMPDEST
0x68 PUSH2 0x93
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 SWAP1
0x87 PUSH1 0x20
0x89 ADD
0x8a SWAP1
0x8b SWAP2
0x8c SWAP1
0x8d POP
0x8e POP
0x8f PUSH2 0xfc
0x92 JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x93
0x6b: V27 = 0x4
0x6f: V28 = CALLDATALOAD 0x4
0x70: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x87: V31 = 0x20
0x89: V32 = ADD 0x20 0x4
0x8f: V33 = 0xfc
0x92: JUMP 0xfc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x93, V30]
Exit stack: [V11, 0x93, V30]

================================

Block 0x93
[0x93:0x94]
---
Predecessors: [0x15f]
Successors: []
---
0x93 JUMPDEST
0x94 STOP
---
0x93: JUMPDEST 
0x94: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x95
[0x95:0x9b]
---
Predecessors: [0x41]
Successors: [0x9c, 0xa0]
---
0x95 JUMPDEST
0x96 CALLVALUE
0x97 ISZERO
0x98 PUSH2 0xa0
0x9b JUMPI
---
0x95: JUMPDEST 
0x96: V34 = CALLVALUE
0x97: V35 = ISZERO V34
0x98: V36 = 0xa0
0x9b: JUMPI 0xa0 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x95]
Successors: []
---
0x9c PUSH1 0x0
0x9e DUP1
0x9f REVERT
---
0x9c: V37 = 0x0
0x9f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa0
[0xa0:0xcb]
---
Predecessors: [0x95]
Successors: [0x247]
---
0xa0 JUMPDEST
0xa1 PUSH2 0xcc
0xa4 PUSH1 0x4
0xa6 DUP1
0xa7 DUP1
0xa8 CALLDATALOAD
0xa9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe AND
0xbf SWAP1
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 SWAP1
0xc4 SWAP2
0xc5 SWAP1
0xc6 POP
0xc7 POP
0xc8 PUSH2 0x247
0xcb JUMP
---
0xa0: JUMPDEST 
0xa1: V38 = 0xcc
0xa4: V39 = 0x4
0xa8: V40 = CALLDATALOAD 0x4
0xa9: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc0: V43 = 0x20
0xc2: V44 = ADD 0x20 0x4
0xc8: V45 = 0x247
0xcb: JUMP 0x247
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcc, V42]
Exit stack: [V11, 0xcc, V42]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: []
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce
[0xce:0xf9]
---
Predecessors: [0x4c]
Successors: [0x2af]
---
0xce JUMPDEST
0xcf PUSH2 0xfa
0xd2 PUSH1 0x4
0xd4 DUP1
0xd5 DUP1
0xd6 CALLDATALOAD
0xd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec AND
0xed SWAP1
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 SWAP2
0xf3 SWAP1
0xf4 POP
0xf5 POP
0xf6 PUSH2 0x2af
0xf9 JUMP
---
0xce: JUMPDEST 
0xcf: V46 = 0xfa
0xd2: V47 = 0x4
0xd6: V48 = CALLDATALOAD 0x4
0xd7: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xec: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xee: V51 = 0x20
0xf0: V52 = ADD 0x20 0x4
0xf6: V53 = 0x2af
0xf9: JUMP 0x2af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfa, V50]
Exit stack: [V11, 0xfa, V50]

================================

Block 0xfa
[0xfa:0xfb]
---
Predecessors: [0x2af]
Successors: []
---
0xfa JUMPDEST
0xfb STOP
---
0xfa: JUMPDEST 
0xfb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfc
[0xfc:0x137]
---
Predecessors: [0x67]
Successors: [0x138, 0x139]
---
0xfc JUMPDEST
0xfd DUP1
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 PUSH2 0x8fc
0x117 PUSH1 0x2
0x119 ADDRESS
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 BALANCE
0x131 DUP2
0x132 ISZERO
0x133 ISZERO
0x134 PUSH2 0x139
0x137 JUMPI
---
0xfc: JUMPDEST 
0xfe: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x114: V56 = 0x8fc
0x117: V57 = 0x2
0x119: V58 = ADDRESS
0x11a: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x130: V61 = BALANCE V60
0x132: V62 = ISZERO 0x2
0x133: V63 = ISZERO 0x0
0x134: V64 = 0x139
0x137: JUMPI 0x139 0x1
---
Entry stack: [V11, 0x93, V30]
Stack pops: 1
Stack additions: [S0, V55, 0x8fc, 0x2, V61]
Exit stack: [V11, 0x93, V30, V55, 0x8fc, 0x2, V61]

================================

Block 0x138
[0x138:0x138]
---
Predecessors: [0xfc]
Successors: []
---
0x138 INVALID
---
0x138: INVALID 
---
Entry stack: [V11, 0x93, V30, V55, 0x8fc, 0x2, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x93, V30, V55, 0x8fc, 0x2, V61]

================================

Block 0x139
[0x139:0x15a]
---
Predecessors: [0xfc]
Successors: [0x15b, 0x15f]
---
0x139 JUMPDEST
0x13a DIV
0x13b SWAP1
0x13c DUP2
0x13d ISZERO
0x13e MUL
0x13f SWAP1
0x140 PUSH1 0x40
0x142 MLOAD
0x143 PUSH1 0x0
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 DUP4
0x14a SUB
0x14b DUP2
0x14c DUP6
0x14d DUP9
0x14e DUP9
0x14f CALL
0x150 SWAP4
0x151 POP
0x152 POP
0x153 POP
0x154 POP
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x139: JUMPDEST 
0x13a: V65 = DIV V61 0x2
0x13d: V66 = ISZERO V65
0x13e: V67 = MUL V66 0x8fc
0x140: V68 = 0x40
0x142: V69 = M[0x40]
0x143: V70 = 0x0
0x145: V71 = 0x40
0x147: V72 = M[0x40]
0x14a: V73 = SUB V69 V72
0x14f: V74 = CALL V67 V55 V65 V72 V73 V72 0x0
0x155: V75 = ISZERO V74
0x156: V76 = ISZERO V75
0x157: V77 = 0x15f
0x15a: JUMPI 0x15f V76
---
Entry stack: [V11, 0x93, V30, V55, 0x8fc, 0x2, V61]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x93, V30]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x139]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V78 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x93, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x93, V30]

================================

Block 0x15f
[0x15f:0x246]
---
Predecessors: [0x139]
Successors: [0x93]
---
0x15f JUMPDEST
0x160 ADDRESS
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 AND
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b DUP1
0x17c PUSH32 0x6469766532286164647265737329000000000000000000000000000000000000
0x19d DUP2
0x19e MSTORE
0x19f POP
0x1a0 PUSH1 0xe
0x1a2 ADD
0x1a3 SWAP1
0x1a4 POP
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 SWAP2
0x1aa SUB
0x1ab SWAP1
0x1ac SHA3
0x1ad PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1cb SWAP1
0x1cc DIV
0x1cd DUP3
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP3
0x1d2 PUSH4 0xffffffff
0x1d7 AND
0x1d8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1f6 MUL
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x4
0x1fb ADD
0x1fc DUP1
0x1fd DUP3
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a DUP2
0x22b MSTORE
0x22c PUSH1 0x20
0x22e ADD
0x22f SWAP2
0x230 POP
0x231 POP
0x232 PUSH1 0x0
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 DUP4
0x239 SUB
0x23a DUP2
0x23b PUSH1 0x0
0x23d DUP8
0x23e GAS
0x23f CALL
0x240 SWAP3
0x241 POP
0x242 POP
0x243 POP
0x244 POP
0x245 POP
0x246 JUMP
---
0x15f: JUMPDEST 
0x160: V79 = ADDRESS
0x161: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x177: V82 = 0x40
0x179: V83 = M[0x40]
0x17c: V84 = 0x6469766532286164647265737329000000000000000000000000000000000000
0x19e: M[V83] = 0x6469766532286164647265737329000000000000000000000000000000000000
0x1a0: V85 = 0xe
0x1a2: V86 = ADD 0xe V83
0x1a5: V87 = 0x40
0x1a7: V88 = M[0x40]
0x1aa: V89 = SUB V86 V88
0x1ac: V90 = SHA3 V88 V89
0x1ad: V91 = 0x100000000000000000000000000000000000000000000000000000000
0x1cc: V92 = DIV V90 0x100000000000000000000000000000000000000000000000000000000
0x1ce: V93 = 0x40
0x1d0: V94 = M[0x40]
0x1d2: V95 = 0xffffffff
0x1d7: V96 = AND 0xffffffff V92
0x1d8: V97 = 0x100000000000000000000000000000000000000000000000000000000
0x1f6: V98 = MUL 0x100000000000000000000000000000000000000000000000000000000 V96
0x1f8: M[V94] = V98
0x1f9: V99 = 0x4
0x1fb: V100 = ADD 0x4 V94
0x1fe: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x214: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x22b: M[V100] = V104
0x22c: V105 = 0x20
0x22e: V106 = ADD 0x20 V100
0x232: V107 = 0x0
0x234: V108 = 0x40
0x236: V109 = M[0x40]
0x239: V110 = SUB V106 V109
0x23b: V111 = 0x0
0x23e: V112 = GAS
0x23f: V113 = CALL V112 V81 0x0 V109 V110 V109 0x0
0x246: JUMP 0x93
---
Entry stack: [V11, 0x93, V30]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x247
[0x247:0x282]
---
Predecessors: [0xa0]
Successors: [0x283, 0x284]
---
0x247 JUMPDEST
0x248 DUP1
0x249 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25e AND
0x25f PUSH2 0x8fc
0x262 PUSH1 0x2
0x264 ADDRESS
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a AND
0x27b BALANCE
0x27c DUP2
0x27d ISZERO
0x27e ISZERO
0x27f PUSH2 0x284
0x282 JUMPI
---
0x247: JUMPDEST 
0x249: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x25e: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x25f: V116 = 0x8fc
0x262: V117 = 0x2
0x264: V118 = ADDRESS
0x265: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x27b: V121 = BALANCE V120
0x27d: V122 = ISZERO 0x2
0x27e: V123 = ISZERO 0x0
0x27f: V124 = 0x284
0x282: JUMPI 0x284 0x1
---
Entry stack: [V11, 0xcc, V42]
Stack pops: 1
Stack additions: [S0, V115, 0x8fc, 0x2, V121]
Exit stack: [V11, 0xcc, V42, V115, 0x8fc, 0x2, V121]

================================

Block 0x283
[0x283:0x283]
---
Predecessors: [0x247]
Successors: []
---
0x283 INVALID
---
0x283: INVALID 
---
Entry stack: [V11, 0xcc, V42, V115, 0x8fc, 0x2, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, V42, V115, 0x8fc, 0x2, V121]

================================

Block 0x284
[0x284:0x2a5]
---
Predecessors: [0x247]
Successors: [0x2a6, 0x2aa]
---
0x284 JUMPDEST
0x285 DIV
0x286 SWAP1
0x287 DUP2
0x288 ISZERO
0x289 MUL
0x28a SWAP1
0x28b PUSH1 0x40
0x28d MLOAD
0x28e PUSH1 0x0
0x290 PUSH1 0x40
0x292 MLOAD
0x293 DUP1
0x294 DUP4
0x295 SUB
0x296 DUP2
0x297 DUP6
0x298 DUP9
0x299 DUP9
0x29a CALL
0x29b SWAP4
0x29c POP
0x29d POP
0x29e POP
0x29f POP
0x2a0 ISZERO
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x284: JUMPDEST 
0x285: V125 = DIV V121 0x2
0x288: V126 = ISZERO V125
0x289: V127 = MUL V126 0x8fc
0x28b: V128 = 0x40
0x28d: V129 = M[0x40]
0x28e: V130 = 0x0
0x290: V131 = 0x40
0x292: V132 = M[0x40]
0x295: V133 = SUB V129 V132
0x29a: V134 = CALL V127 V115 V125 V132 V133 V132 0x0
0x2a0: V135 = ISZERO V134
0x2a1: V136 = ISZERO V135
0x2a2: V137 = 0x2aa
0x2a5: JUMPI 0x2aa V136
---
Entry stack: [V11, 0xcc, V42, V115, 0x8fc, 0x2, V121]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xcc, V42]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x284]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V138 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcc, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, V42]

================================

Block 0x2aa
[0x2aa:0x2ae]
---
Predecessors: [0x284]
Successors: []
---
0x2aa JUMPDEST
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae REVERT
---
0x2aa: JUMPDEST 
0x2ab: V139 = 0x0
0x2ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcc, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, V42]

================================

Block 0x2af
[0x2af:0x396]
---
Predecessors: [0xce]
Successors: [0xfa]
---
0x2af JUMPDEST
0x2b0 ADDRESS
0x2b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c6 AND
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca DUP1
0x2cb DUP1
0x2cc PUSH32 0x6469766528616464726573732900000000000000000000000000000000000000
0x2ed DUP2
0x2ee MSTORE
0x2ef POP
0x2f0 PUSH1 0xd
0x2f2 ADD
0x2f3 SWAP1
0x2f4 POP
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 DUP1
0x2f9 SWAP2
0x2fa SUB
0x2fb SWAP1
0x2fc SHA3
0x2fd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x31b SWAP1
0x31c DIV
0x31d DUP3
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP3
0x322 PUSH4 0xffffffff
0x327 AND
0x328 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x346 MUL
0x347 DUP2
0x348 MSTORE
0x349 PUSH1 0x4
0x34b ADD
0x34c DUP1
0x34d DUP3
0x34e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x363 AND
0x364 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x379 AND
0x37a DUP2
0x37b MSTORE
0x37c PUSH1 0x20
0x37e ADD
0x37f SWAP2
0x380 POP
0x381 POP
0x382 PUSH1 0x0
0x384 PUSH1 0x40
0x386 MLOAD
0x387 DUP1
0x388 DUP4
0x389 SUB
0x38a DUP2
0x38b PUSH1 0x0
0x38d DUP8
0x38e GAS
0x38f CALL
0x390 SWAP3
0x391 POP
0x392 POP
0x393 POP
0x394 POP
0x395 POP
0x396 JUMP
---
0x2af: JUMPDEST 
0x2b0: V140 = ADDRESS
0x2b1: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x2c7: V143 = 0x40
0x2c9: V144 = M[0x40]
0x2cc: V145 = 0x6469766528616464726573732900000000000000000000000000000000000000
0x2ee: M[V144] = 0x6469766528616464726573732900000000000000000000000000000000000000
0x2f0: V146 = 0xd
0x2f2: V147 = ADD 0xd V144
0x2f5: V148 = 0x40
0x2f7: V149 = M[0x40]
0x2fa: V150 = SUB V147 V149
0x2fc: V151 = SHA3 V149 V150
0x2fd: V152 = 0x100000000000000000000000000000000000000000000000000000000
0x31c: V153 = DIV V151 0x100000000000000000000000000000000000000000000000000000000
0x31e: V154 = 0x40
0x320: V155 = M[0x40]
0x322: V156 = 0xffffffff
0x327: V157 = AND 0xffffffff V153
0x328: V158 = 0x100000000000000000000000000000000000000000000000000000000
0x346: V159 = MUL 0x100000000000000000000000000000000000000000000000000000000 V157
0x348: M[V155] = V159
0x349: V160 = 0x4
0x34b: V161 = ADD 0x4 V155
0x34e: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x363: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x364: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x379: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x37b: M[V161] = V165
0x37c: V166 = 0x20
0x37e: V167 = ADD 0x20 V161
0x382: V168 = 0x0
0x384: V169 = 0x40
0x386: V170 = M[0x40]
0x389: V171 = SUB V167 V170
0x38b: V172 = 0x0
0x38e: V173 = GAS
0x38f: V174 = CALL V173 V142 0x0 V170 V171 V170 0x0
0x396: JUMP 0xfa
---
Entry stack: [V11, 0xfa, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x397
[0x397:0x3a1]
---
Predecessors: []
Successors: [0x3a2]
Has unresolved jump.
---
0x397 STOP
0x398 LOG1
0x399 PUSH6 0x627a7a723058
0x3a0 SHA3
0x3a1 JUMPI
---
0x397: STOP 
0x398: LOG S0 S1 S2
0x399: V175 = 0x627a7a723058
0x3a0: V176 = SHA3 0x627a7a723058 S3
0x3a1: JUMPI V176 S4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3a2
[0x3a2:0x3c2]
---
Predecessors: [0x397]
Successors: []
---
0x3a2 MISSING 0xc0
0x3a3 PUSH1 0xb3
0x3a5 CREATE2
0x3a6 SWAP4
0x3a7 MISSING 0xe4
0x3a8 PUSH4 0x4045ac28
0x3ad MISSING 0x26
0x3ae MISSING 0xe6
0x3af LOG2
0x3b0 MISSING 0xd2
0x3b1 PUSH3 0xdd4da8
0x3b5 MISSING 0xf9
0x3b6 MISSING 0x22
0x3b7 MISSING 0x26
0x3b8 CALLDATASIZE
0x3b9 DUP8
0x3ba NOT
0x3bb NUMBER
0x3bc MISSING 0x24
0x3bd MISSING 0xb8
0x3be STOP
0x3bf MISSING 0xe3
0x3c0 MISSING 0xed
0x3c1 STOP
0x3c2 MISSING 0x29
---
0x3a2: MISSING 0xc0
0x3a3: V177 = 0xb3
0x3a5: V178 = CREATE2 0xb3 S0 S1 S2
0x3a7: MISSING 0xe4
0x3a8: V179 = 0x4045ac28
0x3ad: MISSING 0x26
0x3ae: MISSING 0xe6
0x3af: LOG S0 S1 S2 S3
0x3b0: MISSING 0xd2
0x3b1: V180 = 0xdd4da8
0x3b5: MISSING 0xf9
0x3b6: MISSING 0x22
0x3b7: MISSING 0x26
0x3b8: V181 = CALLDATASIZE
0x3ba: V182 = NOT S6
0x3bb: V183 = NUMBER
0x3bc: MISSING 0x24
0x3bd: MISSING 0xb8
0x3be: STOP 
0x3bf: MISSING 0xe3
0x3c0: MISSING 0xed
0x3c1: STOP 
0x3c2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, S3, S4, S5, V178, 0x4045ac28, 0xdd4da8, V183, V182, V181, S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x1fffe0ab
Entry block: 0x5c
Exit block: 0x93
Body: 0x5c, 0x63, 0x67, 0x93, 0xfc, 0x138, 0x139, 0x15b, 0x15f

Function 1:
Public function signature: 0xb3b5eaa3
Entry block: 0x95
Exit block: 0x2a6
Body: 0x95, 0x9c, 0xa0, 0x247, 0x283, 0x284, 0x2a6, 0x2aa

Function 2:
Public function signature: 0xb9f11894
Entry block: 0xce
Exit block: 0xfa
Body: 0xce, 0xfa, 0x2af

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

