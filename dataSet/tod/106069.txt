Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xd1ed437
0x3c EQ
0x3d PUSH2 0x59
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xd1ed437
0x3c: V13 = EQ 0xd1ed437 V11
0x3d: V14 = 0x59
0x40: JUMPI 0x59 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0x99d5a3e6
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0x99d5a3e6
0x47: V16 = EQ 0x99d5a3e6 V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbb]
---
0x4c DUP1
0x4d PUSH4 0xddb49652
0x52 EQ
0x53 PUSH2 0xbb
0x56 JUMPI
---
0x4d: V18 = 0xddb49652
0x52: V19 = EQ 0xddb49652 V11
0x53: V20 = 0xbb
0x56: JUMPI 0xbb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x58]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 STOP
---
0x57: JUMPDEST 
0x58: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0xa3]
---
Predecessors: [0xd]
Successors: [0xe9]
---
0x59 JUMPDEST
0x5a PUSH2 0xa4
0x5d PUSH1 0x4
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP2
0x7e SWAP1
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96 AND
0x97 SWAP1
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP1
0x9c SWAP2
0x9d SWAP1
0x9e POP
0x9f POP
0xa0 PUSH2 0xe9
0xa3 JUMP
---
0x59: JUMPDEST 
0x5a: V21 = 0xa4
0x5d: V22 = 0x4
0x61: V23 = CALLDATALOAD 0x4
0x62: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x79: V26 = 0x20
0x7b: V27 = ADD 0x20 0x4
0x80: V28 = CALLDATALOAD 0x24
0x81: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x96: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x98: V31 = 0x20
0x9a: V32 = ADD 0x20 0x24
0xa0: V33 = 0xe9
0xa3: JUMP 0xe9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa4, V25, V30]
Exit stack: [V11, 0xa4, V25, V30]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: [0x12e]
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V34 = CALLVALUE
0xa8: V35 = ISZERO V34
0xa9: V36 = 0xb1
0xac: JUMPI 0xb1 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V37 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0xa6]
Successors: [0x249]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xb9
0xb5 PUSH2 0x249
0xb8 JUMP
---
0xb1: JUMPDEST 
0xb2: V38 = 0xb9
0xb5: V39 = 0x249
0xb8: JUMP 0x249
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: []
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbb
[0xbb:0xe6]
---
Predecessors: [0x4c]
Successors: [0x276]
---
0xbb JUMPDEST
0xbc PUSH2 0xe7
0xbf PUSH1 0x4
0xc1 DUP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf SWAP2
0xe0 SWAP1
0xe1 POP
0xe2 POP
0xe3 PUSH2 0x276
0xe6 JUMP
---
0xbb: JUMPDEST 
0xbc: V40 = 0xe7
0xbf: V41 = 0x4
0xc3: V42 = CALLDATALOAD 0x4
0xc4: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xdb: V45 = 0x20
0xdd: V46 = ADD 0x20 0x4
0xe3: V47 = 0x276
0xe6: JUMP 0x276
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe7, V44]
Exit stack: [V11, 0xe7, V44]

================================

Block 0xe7
[0xe7:0xe8]
---
Predecessors: []
Successors: []
---
0xe7 JUMPDEST
0xe8 STOP
---
0xe7: JUMPDEST 
0xe8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe9
[0xe9:0x129]
---
Predecessors: [0x59]
Successors: [0x12a, 0x12e]
---
0xe9 JUMPDEST
0xea DUP1
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 PUSH2 0x8fc
0x104 PUSH5 0xe8d4a51000
0x10a SWAP1
0x10b DUP2
0x10c ISZERO
0x10d MUL
0x10e SWAP1
0x10f PUSH1 0x40
0x111 MLOAD
0x112 PUSH1 0x0
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 DUP4
0x119 SUB
0x11a DUP2
0x11b DUP6
0x11c DUP9
0x11d DUP9
0x11e CALL
0x11f SWAP4
0x120 POP
0x121 POP
0x122 POP
0x123 POP
0x124 ISZERO
0x125 ISZERO
0x126 PUSH2 0x12e
0x129 JUMPI
---
0xe9: JUMPDEST 
0xeb: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x101: V50 = 0x8fc
0x104: V51 = 0xe8d4a51000
0x10c: V52 = ISZERO 0xe8d4a51000
0x10d: V53 = MUL 0x0 0x8fc
0x10f: V54 = 0x40
0x111: V55 = M[0x40]
0x112: V56 = 0x0
0x114: V57 = 0x40
0x116: V58 = M[0x40]
0x119: V59 = SUB V55 V58
0x11e: V60 = CALL 0x0 V49 0xe8d4a51000 V58 V59 V58 0x0
0x124: V61 = ISZERO V60
0x125: V62 = ISZERO V61
0x126: V63 = 0x12e
0x129: JUMPI 0x12e V62
---
Entry stack: [V11, 0xa4, V25, V30]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa4, V25, V30]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0xe9]
Successors: []
---
0x12a PUSH1 0x0
0x12c DUP1
0x12d REVERT
---
0x12a: V64 = 0x0
0x12d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa4, V25, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa4, V25, V30]

================================

Block 0x12e
[0x12e:0x248]
---
Predecessors: [0xe9]
Successors: [0xa4]
---
0x12e JUMPDEST
0x12f ADDRESS
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a DUP1
0x14b PUSH32 0x63616c6c3228616464726573732c616464726573732900000000000000000000
0x16c DUP2
0x16d MSTORE
0x16e POP
0x16f PUSH1 0x16
0x171 ADD
0x172 SWAP1
0x173 POP
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 SWAP2
0x179 SUB
0x17a SWAP1
0x17b SHA3
0x17c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x19a SWAP1
0x19b DIV
0x19c DUP4
0x19d DUP4
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP4
0x1a2 PUSH4 0xffffffff
0x1a7 AND
0x1a8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1c6 MUL
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x4
0x1cb ADD
0x1cc DUP1
0x1cd DUP4
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa DUP2
0x1fb MSTORE
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff DUP3
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP3
0x232 POP
0x233 POP
0x234 POP
0x235 PUSH1 0x0
0x237 PUSH1 0x40
0x239 MLOAD
0x23a DUP1
0x23b DUP4
0x23c SUB
0x23d DUP2
0x23e DUP7
0x23f GAS
0x240 DELEGATECALL
0x241 SWAP3
0x242 POP
0x243 POP
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 JUMP
---
0x12e: JUMPDEST 
0x12f: V65 = ADDRESS
0x130: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x146: V68 = 0x40
0x148: V69 = M[0x40]
0x14b: V70 = 0x63616c6c3228616464726573732c616464726573732900000000000000000000
0x16d: M[V69] = 0x63616c6c3228616464726573732c616464726573732900000000000000000000
0x16f: V71 = 0x16
0x171: V72 = ADD 0x16 V69
0x174: V73 = 0x40
0x176: V74 = M[0x40]
0x179: V75 = SUB V72 V74
0x17b: V76 = SHA3 V74 V75
0x17c: V77 = 0x100000000000000000000000000000000000000000000000000000000
0x19b: V78 = DIV V76 0x100000000000000000000000000000000000000000000000000000000
0x19e: V79 = 0x40
0x1a0: V80 = M[0x40]
0x1a2: V81 = 0xffffffff
0x1a7: V82 = AND 0xffffffff V78
0x1a8: V83 = 0x100000000000000000000000000000000000000000000000000000000
0x1c6: V84 = MUL 0x100000000000000000000000000000000000000000000000000000000 V82
0x1c8: M[V80] = V84
0x1c9: V85 = 0x4
0x1cb: V86 = ADD 0x4 V80
0x1ce: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x1e4: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x1fb: M[V86] = V90
0x1fc: V91 = 0x20
0x1fe: V92 = ADD 0x20 V86
0x200: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x216: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x22d: M[V92] = V96
0x22e: V97 = 0x20
0x230: V98 = ADD 0x20 V92
0x235: V99 = 0x0
0x237: V100 = 0x40
0x239: V101 = M[0x40]
0x23c: V102 = SUB V98 V101
0x23f: V103 = GAS
0x240: V104 = DELEGATECALL V103 V67 V101 V102 V101 0x0
0x248: JUMP 0xa4
---
Entry stack: [V11, 0xa4, V25, V30]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x249
[0x249:0x275]
---
Predecessors: [0xb1]
Successors: []
---
0x249 JUMPDEST
0x24a PUSH20 0xdc41b95d774dddf3b2b196548f114965cc8eb023
0x25f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x274 AND
0x275 SELFDESTRUCT
---
0x249: JUMPDEST 
0x24a: V105 = 0xdc41b95d774dddf3b2b196548f114965cc8eb023
0x25f: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x274: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xdc41b95d774dddf3b2b196548f114965cc8eb023
0x275: SELFDESTRUCT 0xdc41b95d774dddf3b2b196548f114965cc8eb023
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x276
[0x276:0x2b6]
---
Predecessors: [0xbb]
Successors: [0x2b7, 0x2bb]
---
0x276 JUMPDEST
0x277 DUP1
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d AND
0x28e PUSH2 0x8fc
0x291 PUSH5 0xe8d4a51000
0x297 SWAP1
0x298 DUP2
0x299 ISZERO
0x29a MUL
0x29b SWAP1
0x29c PUSH1 0x40
0x29e MLOAD
0x29f PUSH1 0x0
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 DUP1
0x2a5 DUP4
0x2a6 SUB
0x2a7 DUP2
0x2a8 DUP6
0x2a9 DUP9
0x2aa DUP9
0x2ab CALL
0x2ac SWAP4
0x2ad POP
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 ISZERO
0x2b2 ISZERO
0x2b3 PUSH2 0x2bb
0x2b6 JUMPI
---
0x276: JUMPDEST 
0x278: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x28e: V110 = 0x8fc
0x291: V111 = 0xe8d4a51000
0x299: V112 = ISZERO 0xe8d4a51000
0x29a: V113 = MUL 0x0 0x8fc
0x29c: V114 = 0x40
0x29e: V115 = M[0x40]
0x29f: V116 = 0x0
0x2a1: V117 = 0x40
0x2a3: V118 = M[0x40]
0x2a6: V119 = SUB V115 V118
0x2ab: V120 = CALL 0x0 V109 0xe8d4a51000 V118 V119 V118 0x0
0x2b1: V121 = ISZERO V120
0x2b2: V122 = ISZERO V121
0x2b3: V123 = 0x2bb
0x2b6: JUMPI 0x2bb V122
---
Entry stack: [V11, 0xe7, V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe7, V44]

================================

Block 0x2b7
[0x2b7:0x2ba]
---
Predecessors: [0x276]
Successors: []
---
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba REVERT
---
0x2b7: V124 = 0x0
0x2ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V44]

================================

Block 0x2bb
[0x2bb:0x2bf]
---
Predecessors: [0x276]
Successors: []
---
0x2bb JUMPDEST
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bb: JUMPDEST 
0x2bc: V125 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V44]

================================

Block 0x2c0
[0x2c0:0x2eb]
---
Predecessors: []
Successors: []
---
0x2c0 STOP
0x2c1 LOG1
0x2c2 PUSH6 0x627a7a723058
0x2c9 SHA3
0x2ca DUP13
0x2cb MISSING 0xed
0x2cc MISSING 0xeb
0x2cd PUSH27 0xd54cc1138bbe1232e1f45b116a41c86c21843e139b62bcb19a891e
0x2e9 MISSING 0xb9
0x2ea STOP
0x2eb MISSING 0x29
---
0x2c0: STOP 
0x2c1: LOG S0 S1 S2
0x2c2: V126 = 0x627a7a723058
0x2c9: V127 = SHA3 0x627a7a723058 S3
0x2cb: MISSING 0xed
0x2cc: MISSING 0xeb
0x2cd: V128 = 0xd54cc1138bbe1232e1f45b116a41c86c21843e139b62bcb19a891e
0x2e9: MISSING 0xb9
0x2ea: STOP 
0x2eb: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, V127, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0xd54cc1138bbe1232e1f45b116a41c86c21843e139b62bcb19a891e]
Exit stack: []

================================

Function 0:
Public function signature: 0xd1ed437
Entry block: 0x59
Exit block: 0xa4
Body: 0x59, 0xa4, 0xe9, 0x12a, 0x12e

Function 1:
Public function signature: 0x99d5a3e6
Entry block: 0xa6
Exit block: 0x249
Body: 0xa6, 0xad, 0xb1, 0x249

Function 2:
Public function signature: 0xddb49652
Entry block: 0xbb
Exit block: 0x2bb
Body: 0xbb, 0x276, 0x2b7, 0x2bb

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

