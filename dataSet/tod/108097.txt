Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x82]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x13af4035
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x82
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x13af4035
0x1a: V12 = EQ V10 0x13af4035
0x1b: V13 = 0x82
0x1e: JUMPI 0x82 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xb7]
---
0x1f DUP1
0x20 PUSH4 0x35c1d349
0x25 EQ
0x26 PUSH2 0xb7
0x29 JUMPI
---
0x20: V14 = 0x35c1d349
0x25: V15 = EQ 0x35c1d349 V10
0x26: V16 = 0xb7
0x29: JUMPI 0xb7 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x103]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0x103
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0x103
0x34: JUMPI 0x103 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x115]
---
0x35 DUP1
0x36 PUSH4 0x9003adfe
0x3b EQ
0x3c PUSH2 0x115
0x3f JUMPI
---
0x36: V20 = 0x9003adfe
0x3b: V21 = EQ 0x9003adfe V10
0x3c: V22 = 0x115
0x3f: JUMPI 0x115 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x11e]
---
0x40 DUP1
0x41 PUSH4 0xa60f3588
0x46 EQ
0x47 PUSH2 0x11e
0x4a JUMPI
---
0x41: V23 = 0xa60f3588
0x46: V24 = EQ 0xa60f3588 V10
0x47: V25 = 0x11e
0x4a: JUMPI 0x11e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x127]
---
0x4b DUP1
0x4c PUSH4 0xb69ef8a8
0x51 EQ
0x52 PUSH2 0x127
0x55 JUMPI
---
0x4c: V26 = 0xb69ef8a8
0x51: V27 = EQ 0xb69ef8a8 V10
0x52: V28 = 0x127
0x55: JUMPI 0x127 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x130]
---
0x56 DUP1
0x57 PUSH4 0xc8796572
0x5c EQ
0x5d PUSH2 0x130
0x60 JUMPI
---
0x57: V29 = 0xc8796572
0x5c: V30 = EQ 0xc8796572 V10
0x5d: V31 = 0x130
0x60: JUMPI 0x130 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x15a]
---
0x61 DUP1
0x62 PUSH4 0xe977992d
0x67 EQ
0x68 PUSH2 0x15a
0x6b JUMPI
---
0x62: V32 = 0xe977992d
0x67: V33 = EQ 0xe977992d V10
0x68: V34 = 0x15a
0x6b: JUMPI 0x15a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x171]
---
0x6c DUP1
0x6d PUSH4 0xe97dcb62
0x72 EQ
0x73 PUSH2 0x171
0x76 JUMPI
---
0x6d: V35 = 0xe97dcb62
0x72: V36 = EQ 0xe97dcb62 V10
0x73: V37 = 0x171
0x76: JUMPI 0x171 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x0, 0x6c]
Successors: [0x175]
---
0x77 JUMPDEST
0x78 PUSH2 0x1b0
0x7b PUSH2 0x158
0x7e PUSH2 0x175
0x81 JUMP
---
0x77: JUMPDEST 
0x78: V38 = 0x1b0
0x7b: V39 = 0x158
0x7e: V40 = 0x175
0x81: JUMP 0x175
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b0, 0x158]
Exit stack: [V10, 0x1b0, 0x158]

================================

Block 0x82
[0x82:0xa1]
---
Predecessors: [0xb]
Successors: [0xa2, 0xb4]
---
0x82 JUMPDEST
0x83 PUSH2 0x1b0
0x86 PUSH1 0x4
0x88 CALLDATALOAD
0x89 PUSH1 0x4
0x8b SLOAD
0x8c PUSH1 0x1
0x8e PUSH1 0xa0
0x90 PUSH1 0x2
0x92 EXP
0x93 SUB
0x94 SWAP1
0x95 DUP2
0x96 AND
0x97 CALLER
0x98 SWAP2
0x99 SWAP1
0x9a SWAP2
0x9b AND
0x9c EQ
0x9d ISZERO
0x9e PUSH2 0xb4
0xa1 JUMPI
---
0x82: JUMPDEST 
0x83: V41 = 0x1b0
0x86: V42 = 0x4
0x88: V43 = CALLDATALOAD 0x4
0x89: V44 = 0x4
0x8b: V45 = S[0x4]
0x8c: V46 = 0x1
0x8e: V47 = 0xa0
0x90: V48 = 0x2
0x92: V49 = EXP 0x2 0xa0
0x93: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x97: V52 = CALLER
0x9b: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V54 = EQ V53 V51
0x9d: V55 = ISZERO V54
0x9e: V56 = 0xb4
0xa1: JUMPI 0xb4 V55
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b0, V43]
Exit stack: [V10, 0x1b0, V43]

================================

Block 0xa2
[0xa2:0xb3]
---
Predecessors: [0x82]
Successors: [0xb4]
---
0xa2 PUSH1 0x4
0xa4 DUP1
0xa5 SLOAD
0xa6 PUSH1 0x1
0xa8 PUSH1 0xa0
0xaa PUSH1 0x2
0xac EXP
0xad SUB
0xae NOT
0xaf AND
0xb0 DUP3
0xb1 OR
0xb2 SWAP1
0xb3 SSTORE
---
0xa2: V57 = 0x4
0xa5: V58 = S[0x4]
0xa6: V59 = 0x1
0xa8: V60 = 0xa0
0xaa: V61 = 0x2
0xac: V62 = EXP 0x2 0xa0
0xad: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae: V64 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V65 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V58
0xb1: V66 = OR V43 V65
0xb3: S[0x4] = V66
---
Entry stack: [V10, 0x1b0, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1b0, V43]

================================

Block 0xb4
[0xb4:0xb6]
---
Predecessors: [0x82, 0xa2]
Successors: [0x1b0]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 JUMP
---
0xb4: JUMPDEST 
0xb6: JUMP 0x1b0
---
Entry stack: [V10, 0x1b0, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xca]
---
Predecessors: [0x1f]
Successors: [0xcb]
---
0xb7 JUMPDEST
0xb8 PUSH2 0x1b2
0xbb PUSH1 0x4
0xbd CALLDATALOAD
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 SLOAD
0xc2 DUP3
0xc3 SWAP1
0xc4 DUP2
0xc5 LT
0xc6 ISZERO
0xc7 PUSH2 0x2
0xca JUMPI
---
0xb7: JUMPDEST 
0xb8: V67 = 0x1b2
0xbb: V68 = 0x4
0xbd: V69 = CALLDATALOAD 0x4
0xbe: V70 = 0x0
0xc1: V71 = S[0x0]
0xc5: V72 = LT V69 V71
0xc6: V73 = ISZERO V72
0xc7: V74 = 0x2
0xca: THROWI V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b2, V69, 0x0, V69]
Exit stack: [V10, 0x1b2, V69, 0x0, V69]

================================

Block 0xcb
[0xcb:0x102]
---
Predecessors: [0xb7]
Successors: [0x1b2]
---
0xcb POP
0xcc DUP1
0xcd MSTORE
0xce PUSH1 0x2
0xd0 MUL
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 MLOAD
0xd5 PUSH1 0x20
0xd7 PUSH2 0x476
0xda DUP4
0xdb CODECOPY
0xdc DUP2
0xdd MLOAD
0xde SWAP2
0xdf MSTORE
0xe0 DUP2
0xe1 ADD
0xe2 SLOAD
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 MLOAD
0xe7 PUSH1 0x20
0xe9 PUSH2 0x456
0xec DUP4
0xed CODECOPY
0xee DUP2
0xef MLOAD
0xf0 SWAP2
0xf1 MSTORE
0xf2 SWAP2
0xf3 SWAP1
0xf4 SWAP2
0xf5 ADD
0xf6 SLOAD
0xf7 PUSH1 0x1
0xf9 PUSH1 0xa0
0xfb PUSH1 0x2
0xfd EXP
0xfe SUB
0xff AND
0x100 SWAP1
0x101 DUP3
0x102 JUMP
---
0xcd: M[0x0] = 0x0
0xce: V75 = 0x2
0xd0: V76 = MUL 0x2 V69
0xd1: V77 = 0x0
0xd4: V78 = M[0x0]
0xd5: V79 = 0x20
0xd7: V80 = 0x476
0xdb: CODECOPY 0x0 0x476 0x20
0xdd: V81 = M[0x0]
0xdf: M[0x0] = V78
0xe1: V82 = ADD V76 V81
0xe2: V83 = S[V82]
0xe3: V84 = 0x0
0xe6: V85 = M[0x0]
0xe7: V86 = 0x20
0xe9: V87 = 0x456
0xed: CODECOPY 0x0 0x456 0x20
0xef: V88 = M[0x0]
0xf1: M[0x0] = V85
0xf5: V89 = ADD V88 V76
0xf6: V90 = S[V89]
0xf7: V91 = 0x1
0xf9: V92 = 0xa0
0xfb: V93 = 0x2
0xfd: V94 = EXP 0x2 0xa0
0xfe: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x102: JUMP 0x1b2
---
Entry stack: [V10, 0x1b2, V69, 0x0, V69]
Stack pops: 4
Stack additions: [S3, V96, V83]
Exit stack: [V10, 0x1b2, V96, V83]

================================

Block 0x103
[0x103:0x114]
---
Predecessors: [0x2a]
Successors: [0x1d8]
---
0x103 JUMPDEST
0x104 PUSH2 0x1d8
0x107 PUSH1 0x4
0x109 SLOAD
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 AND
0x113 DUP2
0x114 JUMP
---
0x103: JUMPDEST 
0x104: V97 = 0x1d8
0x107: V98 = 0x4
0x109: V99 = S[0x4]
0x10a: V100 = 0x1
0x10c: V101 = 0xa0
0x10e: V102 = 0x2
0x110: V103 = EXP 0x2 0xa0
0x111: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x114: JUMP 0x1d8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d8, V105]
Exit stack: [V10, 0x1d8, V105]

================================

Block 0x115
[0x115:0x11d]
---
Predecessors: [0x35]
Successors: [0x1f5]
---
0x115 JUMPDEST
0x116 PUSH2 0x1f5
0x119 PUSH1 0x2
0x11b SLOAD
0x11c DUP2
0x11d JUMP
---
0x115: JUMPDEST 
0x116: V106 = 0x1f5
0x119: V107 = 0x2
0x11b: V108 = S[0x2]
0x11d: JUMP 0x1f5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f5, V108]
Exit stack: [V10, 0x1f5, V108]

================================

Block 0x11e
[0x11e:0x126]
---
Predecessors: [0x40]
Successors: [0x1f5]
---
0x11e JUMPDEST
0x11f PUSH2 0x1f5
0x122 PUSH1 0x1
0x124 SLOAD
0x125 DUP2
0x126 JUMP
---
0x11e: JUMPDEST 
0x11f: V109 = 0x1f5
0x122: V110 = 0x1
0x124: V111 = S[0x1]
0x126: JUMP 0x1f5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f5, V111]
Exit stack: [V10, 0x1f5, V111]

================================

Block 0x127
[0x127:0x12f]
---
Predecessors: [0x4b]
Successors: [0x1f5]
---
0x127 JUMPDEST
0x128 PUSH2 0x1f5
0x12b PUSH1 0x3
0x12d SLOAD
0x12e DUP2
0x12f JUMP
---
0x127: JUMPDEST 
0x128: V112 = 0x1f5
0x12b: V113 = 0x3
0x12d: V114 = S[0x3]
0x12f: JUMP 0x1f5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f5, V114]
Exit stack: [V10, 0x1f5, V114]

================================

Block 0x130
[0x130:0x14c]
---
Predecessors: [0x56]
Successors: [0x14d, 0x158]
---
0x130 JUMPDEST
0x131 PUSH2 0x1b0
0x134 PUSH1 0x4
0x136 SLOAD
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f SWAP1
0x140 DUP2
0x141 AND
0x142 CALLER
0x143 SWAP2
0x144 SWAP1
0x145 SWAP2
0x146 AND
0x147 EQ
0x148 ISZERO
0x149 PUSH2 0x158
0x14c JUMPI
---
0x130: JUMPDEST 
0x131: V115 = 0x1b0
0x134: V116 = 0x4
0x136: V117 = S[0x4]
0x137: V118 = 0x1
0x139: V119 = 0xa0
0x13b: V120 = 0x2
0x13d: V121 = EXP 0x2 0xa0
0x13e: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x141: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x142: V124 = CALLER
0x146: V125 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x147: V126 = EQ V125 V123
0x148: V127 = ISZERO V126
0x149: V128 = 0x158
0x14c: JUMPI 0x158 V127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: [V10, 0x1b0]

================================

Block 0x14d
[0x14d:0x157]
---
Predecessors: [0x130]
Successors: [0x158, 0x207]
---
0x14d PUSH1 0x2
0x14f SLOAD
0x150 PUSH1 0x0
0x152 EQ
0x153 ISZERO
0x154 PUSH2 0x207
0x157 JUMPI
---
0x14d: V129 = 0x2
0x14f: V130 = S[0x2]
0x150: V131 = 0x0
0x152: V132 = EQ 0x0 V130
0x153: V133 = ISZERO V132
0x154: V134 = 0x207
0x157: JUMPI 0x207 V133
---
Entry stack: [V10, 0x1b0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b0]

================================

Block 0x158
[0x158:0x159]
---
Predecessors: [0x130, 0x14d, 0x1ab]
Successors: [0x1b0]
---
0x158 JUMPDEST
0x159 JUMP
---
0x158: JUMPDEST 
0x159: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x15a
[0x15a:0x170]
---
Predecessors: [0x61]
Successors: [0x1b0]
---
0x15a JUMPDEST
0x15b PUSH2 0x1b0
0x15e PUSH1 0x4
0x160 DUP1
0x161 SLOAD
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a NOT
0x16b AND
0x16c CALLER
0x16d OR
0x16e SWAP1
0x16f SSTORE
0x170 JUMP
---
0x15a: JUMPDEST 
0x15b: V135 = 0x1b0
0x15e: V136 = 0x4
0x161: V137 = S[0x4]
0x162: V138 = 0x1
0x164: V139 = 0xa0
0x166: V140 = 0x2
0x168: V141 = EXP 0x2 0xa0
0x169: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V143 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V144 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V137
0x16c: V145 = CALLER
0x16d: V146 = OR V145 V144
0x16f: S[0x4] = V146
0x170: JUMP 0x1b0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x6c]
Successors: [0x175]
---
0x171 JUMPDEST
0x172 PUSH2 0x1b0
---
0x171: JUMPDEST 
0x172: V147 = 0x1b0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: [V10, 0x1b0]

================================

Block 0x175
[0x175:0x18b]
---
Predecessors: [0x77, 0x171]
Successors: [0x18c, 0x22e]
---
0x175 JUMPDEST
0x176 PUSH1 0x0
0x178 PUSH1 0x0
0x17a PUSH1 0x0
0x17c PUSH8 0xde0b6b3a7640000
0x185 CALLVALUE
0x186 LT
0x187 ISZERO
0x188 PUSH2 0x22e
0x18b JUMPI
---
0x175: JUMPDEST 
0x176: V148 = 0x0
0x178: V149 = 0x0
0x17a: V150 = 0x0
0x17c: V151 = 0xde0b6b3a7640000
0x185: V152 = CALLVALUE
0x186: V153 = LT V152 0xde0b6b3a7640000
0x187: V154 = ISZERO V153
0x188: V155 = 0x22e
0x18b: JUMPI 0x22e V154
---
Entry stack: [V10, S1, {0x158, 0x1b0}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0x158, 0x1b0}, 0x0, 0x0, 0x0]

================================

Block 0x18c
[0x18c:0x1aa]
---
Predecessors: [0x175]
Successors: [0x1ab]
---
0x18c PUSH1 0x40
0x18e MLOAD
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 CALLER
0x198 AND
0x199 SWAP1
0x19a DUP3
0x19b SWAP1
0x19c CALLVALUE
0x19d SWAP1
0x19e DUP3
0x19f DUP2
0x1a0 DUP2
0x1a1 DUP2
0x1a2 DUP6
0x1a3 DUP9
0x1a4 DUP4
0x1a5 CALL
0x1a6 POP
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa POP
---
0x18c: V156 = 0x40
0x18e: V157 = M[0x40]
0x18f: V158 = 0x1
0x191: V159 = 0xa0
0x193: V160 = 0x2
0x195: V161 = EXP 0x2 0xa0
0x196: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x197: V163 = CALLER
0x198: V164 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V165 = CALLVALUE
0x1a5: V166 = CALL 0x0 V164 V165 V157 0x0 V157 0x0
---
Entry stack: [V10, S4, {0x158, 0x1b0}, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0x158, 0x1b0}, 0x0, 0x0, 0x0]

================================

Block 0x1ab
[0x1ab:0x1af]
---
Predecessors: [0x18c, 0x37e]
Successors: [0x158, 0x1b0]
---
0x1ab JUMPDEST
0x1ac POP
0x1ad POP
0x1ae POP
0x1af JUMP
---
0x1ab: JUMPDEST 
0x1af: JUMP {0x158, 0x1b0}
---
Entry stack: [V10, S4, {0x158, 0x1b0}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x1b0
[0x1b0:0x1b1]
---
Predecessors: [0xb4, 0x158, 0x15a, 0x1ab, 0x207]
Successors: []
---
0x1b0 JUMPDEST
0x1b1 STOP
---
0x1b0: JUMPDEST 
0x1b1: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x1b2
[0x1b2:0x1d7]
---
Predecessors: [0xcb]
Successors: []
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 DUP1
0x1b7 DUP4
0x1b8 PUSH1 0x1
0x1ba PUSH1 0xa0
0x1bc PUSH1 0x2
0x1be EXP
0x1bf SUB
0x1c0 AND
0x1c1 DUP2
0x1c2 MSTORE
0x1c3 PUSH1 0x20
0x1c5 ADD
0x1c6 DUP3
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP3
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 SWAP2
0x1d5 SUB
0x1d6 SWAP1
0x1d7 RETURN
---
0x1b2: JUMPDEST 
0x1b3: V167 = 0x40
0x1b5: V168 = M[0x40]
0x1b8: V169 = 0x1
0x1ba: V170 = 0xa0
0x1bc: V171 = 0x2
0x1be: V172 = EXP 0x2 0xa0
0x1bf: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c0: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1c2: M[V168] = V174
0x1c3: V175 = 0x20
0x1c5: V176 = ADD 0x20 V168
0x1c8: M[V176] = V83
0x1c9: V177 = 0x20
0x1cb: V178 = ADD 0x20 V176
0x1d0: V179 = 0x40
0x1d2: V180 = M[0x40]
0x1d5: V181 = SUB V178 V180
0x1d7: RETURN V180 V181
---
Entry stack: [V10, 0x1b2, V96, V83]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x1d8
[0x1d8:0x1f4]
---
Predecessors: [0x103]
Successors: []
---
0x1d8 JUMPDEST
0x1d9 PUSH1 0x40
0x1db DUP1
0x1dc MLOAD
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 SWAP3
0x1e6 SWAP1
0x1e7 SWAP3
0x1e8 AND
0x1e9 DUP3
0x1ea MSTORE
0x1eb MLOAD
0x1ec SWAP1
0x1ed DUP2
0x1ee SWAP1
0x1ef SUB
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP1
0x1f4 RETURN
---
0x1d8: JUMPDEST 
0x1d9: V182 = 0x40
0x1dc: V183 = M[0x40]
0x1dd: V184 = 0x1
0x1df: V185 = 0xa0
0x1e1: V186 = 0x2
0x1e3: V187 = EXP 0x2 0xa0
0x1e4: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e8: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1ea: M[V183] = V189
0x1eb: V190 = M[0x40]
0x1ef: V191 = SUB V183 V190
0x1f0: V192 = 0x20
0x1f2: V193 = ADD 0x20 V191
0x1f4: RETURN V190 V193
---
Entry stack: [V10, 0x1d8, V105]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d8]

================================

Block 0x1f5
[0x1f5:0x206]
---
Predecessors: [0x115, 0x11e, 0x127]
Successors: []
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x40
0x1f8 DUP1
0x1f9 MLOAD
0x1fa SWAP2
0x1fb DUP3
0x1fc MSTORE
0x1fd MLOAD
0x1fe SWAP1
0x1ff DUP2
0x200 SWAP1
0x201 SUB
0x202 PUSH1 0x20
0x204 ADD
0x205 SWAP1
0x206 RETURN
---
0x1f5: JUMPDEST 
0x1f6: V194 = 0x40
0x1f9: V195 = M[0x40]
0x1fc: M[V195] = S0
0x1fd: V196 = M[0x40]
0x201: V197 = SUB V195 V196
0x202: V198 = 0x20
0x204: V199 = ADD 0x20 V197
0x206: RETURN V196 V199
---
Entry stack: [V10, 0x1f5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1f5]

================================

Block 0x207
[0x207:0x22d]
---
Predecessors: [0x14d]
Successors: [0x1b0]
---
0x207 JUMPDEST
0x208 PUSH1 0x2
0x20a SLOAD
0x20b PUSH1 0x40
0x20d MLOAD
0x20e PUSH1 0x4
0x210 SLOAD
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 AND
0x21a SWAP2
0x21b PUSH1 0x0
0x21d SWAP2
0x21e DUP3
0x21f DUP2
0x220 DUP2
0x221 DUP2
0x222 DUP6
0x223 DUP9
0x224 DUP4
0x225 CALL
0x226 POP
0x227 POP
0x228 POP
0x229 PUSH1 0x2
0x22b SSTORE
0x22c POP
0x22d JUMP
---
0x207: JUMPDEST 
0x208: V200 = 0x2
0x20a: V201 = S[0x2]
0x20b: V202 = 0x40
0x20d: V203 = M[0x40]
0x20e: V204 = 0x4
0x210: V205 = S[0x4]
0x211: V206 = 0x1
0x213: V207 = 0xa0
0x215: V208 = 0x2
0x217: V209 = EXP 0x2 0xa0
0x218: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x219: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x21b: V212 = 0x0
0x225: V213 = CALL 0x0 V211 V201 V203 0x0 V203 0x0
0x229: V214 = 0x2
0x22b: S[0x2] = 0x0
0x22d: JUMP 0x1b0
---
Entry stack: [V10, 0x1b0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x22e
[0x22e:0x23e]
---
Predecessors: [0x175]
Successors: [0x23f, 0x27a]
---
0x22e JUMPDEST
0x22f PUSH8 0x4563918244f40000
0x238 CALLVALUE
0x239 GT
0x23a ISZERO
0x23b PUSH2 0x27a
0x23e JUMPI
---
0x22e: JUMPDEST 
0x22f: V215 = 0x4563918244f40000
0x238: V216 = CALLVALUE
0x239: V217 = GT V216 0x4563918244f40000
0x23a: V218 = ISZERO V217
0x23b: V219 = 0x27a
0x23e: JUMPI 0x27a V218
---
Entry stack: [V10, S4, {0x158, 0x1b0}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x158, 0x1b0}, 0x0, 0x0, 0x0]

================================

Block 0x23f
[0x23f:0x279]
---
Predecessors: [0x22e]
Successors: [0x27e]
---
0x23f PUSH1 0x40
0x241 MLOAD
0x242 PUSH1 0x1
0x244 PUSH1 0xa0
0x246 PUSH1 0x2
0x248 EXP
0x249 SUB
0x24a CALLER
0x24b AND
0x24c SWAP1
0x24d PUSH1 0x0
0x24f SWAP1
0x250 PUSH8 0x4563918244f3ffff
0x259 NOT
0x25a CALLVALUE
0x25b ADD
0x25c SWAP1
0x25d DUP3
0x25e DUP2
0x25f DUP2
0x260 DUP2
0x261 DUP6
0x262 DUP9
0x263 DUP4
0x264 CALL
0x265 POP
0x266 PUSH8 0x4563918244f40000
0x26f SWAP7
0x270 POP
0x271 PUSH2 0x27e
0x274 SWAP4
0x275 POP
0x276 POP
0x277 POP
0x278 POP
0x279 JUMP
---
0x23f: V220 = 0x40
0x241: V221 = M[0x40]
0x242: V222 = 0x1
0x244: V223 = 0xa0
0x246: V224 = 0x2
0x248: V225 = EXP 0x2 0xa0
0x249: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24a: V227 = CALLER
0x24b: V228 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V229 = 0x0
0x250: V230 = 0x4563918244f3ffff
0x259: V231 = NOT 0x4563918244f3ffff
0x25a: V232 = CALLVALUE
0x25b: V233 = ADD V232 0xffffffffffffffffffffffffffffffffffffffffffffffffba9c6e7dbb0c0000
0x264: V234 = CALL 0x0 V228 V233 V221 0x0 V221 0x0
0x266: V235 = 0x4563918244f40000
0x271: V236 = 0x27e
0x279: JUMP 0x27e
---
Entry stack: [V10, S4, {0x158, 0x1b0}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x4563918244f40000, S1, S0]
Exit stack: [V10, S4, {0x158, 0x1b0}, 0x4563918244f40000, 0x0, 0x0]

================================

Block 0x27a
[0x27a:0x27d]
---
Predecessors: [0x22e]
Successors: [0x27e]
---
0x27a JUMPDEST
0x27b CALLVALUE
0x27c SWAP3
0x27d POP
---
0x27a: JUMPDEST 
0x27b: V237 = CALLVALUE
---
Entry stack: [V10, S4, {0x158, 0x1b0}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V237, S1, S0]
Exit stack: [V10, S4, {0x158, 0x1b0}, V237, 0x0, 0x0]

================================

Block 0x27e
[0x27e:0x298]
---
Predecessors: [0x23f, 0x27a]
Successors: [0x299, 0x2e1]
---
0x27e JUMPDEST
0x27f PUSH1 0x0
0x281 DUP1
0x282 SLOAD
0x283 PUSH1 0x1
0x285 DUP2
0x286 ADD
0x287 DUP1
0x288 DUP4
0x289 SSTORE
0x28a SWAP1
0x28b SWAP4
0x28c POP
0x28d SWAP1
0x28e DUP2
0x28f DUP5
0x290 DUP1
0x291 ISZERO
0x292 DUP3
0x293 SWAP1
0x294 GT
0x295 PUSH2 0x2e1
0x298 JUMPI
---
0x27e: JUMPDEST 
0x27f: V238 = 0x0
0x282: V239 = S[0x0]
0x283: V240 = 0x1
0x286: V241 = ADD V239 0x1
0x289: S[0x0] = V241
0x291: V242 = ISZERO V239
0x294: V243 = GT V242 V241
0x295: V244 = 0x2e1
0x298: JUMPI 0x2e1 V243
---
Entry stack: [V10, S4, {0x158, 0x1b0}, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V239, S0, V241, 0x0, V241, V239]
Exit stack: [V10, S4, {0x158, 0x1b0}, S2, V239, 0x0, V241, 0x0, V241, V239]

================================

Block 0x299
[0x299:0x2ba]
---
Predecessors: [0x27e]
Successors: [0x2bb]
---
0x299 DUP3
0x29a DUP1
0x29b MSTORE
0x29c PUSH2 0x2e1
0x29f SWAP1
0x2a0 PUSH1 0x2
0x2a2 SWAP1
0x2a3 DUP2
0x2a4 MUL
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 MLOAD
0x2a9 PUSH1 0x20
0x2ab PUSH2 0x456
0x2ae DUP4
0x2af CODECOPY
0x2b0 DUP2
0x2b1 MLOAD
0x2b2 SWAP2
0x2b3 MSTORE
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 ADD
0x2b7 SWAP2
0x2b8 DUP5
0x2b9 MUL
0x2ba ADD
---
0x29b: M[0x0] = 0x0
0x29c: V245 = 0x2e1
0x2a0: V246 = 0x2
0x2a4: V247 = MUL 0x2 V239
0x2a5: V248 = 0x0
0x2a8: V249 = M[0x0]
0x2a9: V250 = 0x20
0x2ab: V251 = 0x456
0x2af: CODECOPY 0x0 0x456 0x20
0x2b1: V252 = M[0x0]
0x2b3: M[0x0] = V249
0x2b6: V253 = ADD V252 V247
0x2b9: V254 = MUL V241 0x2
0x2ba: V255 = ADD V254 V252
---
Entry stack: [V10, S8, {0x158, 0x1b0}, S6, V239, 0x0, V241, 0x0, V241, V239]
Stack pops: 3
Stack additions: [S2, S1, 0x2e1, V253, V255]
Exit stack: [V10, S8, {0x158, 0x1b0}, S6, V239, 0x0, V241, 0x0, V241, 0x2e1, V253, V255]

================================

Block 0x2bb
[0x2bb:0x2c3]
---
Predecessors: [0x299, 0x2c4]
Successors: [0x2c4, 0x360]
---
0x2bb JUMPDEST
0x2bc DUP1
0x2bd DUP3
0x2be GT
0x2bf ISZERO
0x2c0 PUSH2 0x360
0x2c3 JUMPI
---
0x2bb: JUMPDEST 
0x2be: V256 = GT V253 S0
0x2bf: V257 = ISZERO V256
0x2c0: V258 = 0x360
0x2c3: JUMPI 0x360 V257
---
Entry stack: [V10, S10, {0x158, 0x1b0}, S8, V239, 0x0, V241, 0x0, V241, 0x2e1, V253, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S10, {0x158, 0x1b0}, S8, V239, 0x0, V241, 0x0, V241, 0x2e1, V253, S0]

================================

Block 0x2c4
[0x2c4:0x2e0]
---
Predecessors: [0x2bb]
Successors: [0x2bb]
---
0x2c4 DUP1
0x2c5 SLOAD
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce NOT
0x2cf AND
0x2d0 DUP2
0x2d1 SSTORE
0x2d2 PUSH1 0x0
0x2d4 PUSH1 0x1
0x2d6 SWAP2
0x2d7 SWAP1
0x2d8 SWAP2
0x2d9 ADD
0x2da SWAP1
0x2db DUP2
0x2dc SSTORE
0x2dd PUSH2 0x2bb
0x2e0 JUMP
---
0x2c5: V259 = S[S0]
0x2c6: V260 = 0x1
0x2c8: V261 = 0xa0
0x2ca: V262 = 0x2
0x2cc: V263 = EXP 0x2 0xa0
0x2cd: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V265 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V266 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V259
0x2d1: S[S0] = V266
0x2d2: V267 = 0x0
0x2d4: V268 = 0x1
0x2d9: V269 = ADD 0x1 S0
0x2dc: S[V269] = 0x0
0x2dd: V270 = 0x2bb
0x2e0: JUMP 0x2bb
---
Entry stack: [V10, S10, {0x158, 0x1b0}, S8, V239, 0x0, V241, 0x0, V241, 0x2e1, V253, S0]
Stack pops: 1
Stack additions: [V269]
Exit stack: [V10, S10, {0x158, 0x1b0}, S8, V239, 0x0, V241, 0x0, V241, 0x2e1, V253, V269]

================================

Block 0x2e1
[0x2e1:0x2f5]
---
Predecessors: [0x27e, 0x360]
Successors: [0x2f6]
---
0x2e1 JUMPDEST
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 CALLER
0x2e7 PUSH1 0x0
0x2e9 PUSH1 0x0
0x2eb POP
0x2ec DUP4
0x2ed DUP2
0x2ee SLOAD
0x2ef DUP2
0x2f0 LT
0x2f1 ISZERO
0x2f2 PUSH2 0x2
0x2f5 JUMPI
---
0x2e1: JUMPDEST 
0x2e6: V271 = CALLER
0x2e7: V272 = 0x0
0x2e9: V273 = 0x0
0x2ee: V274 = S[0x0]
0x2f0: V275 = LT V239 V274
0x2f1: V276 = ISZERO V275
0x2f2: V277 = 0x2
0x2f5: THROWI V276
---
Entry stack: [V10, S8, {0x158, 0x1b0}, S6, V239, 0x0, V241, 0x0, V241, S0]
Stack pops: 6
Stack additions: [S5, S4, V271, 0x0, S5]
Exit stack: [V10, S8, {0x158, 0x1b0}, S6, V239, 0x0, V271, 0x0, V239]

================================

Block 0x2f6
[0x2f6:0x32b]
---
Predecessors: [0x2e1]
Successors: [0x32c]
---
0x2f6 DUP2
0x2f7 DUP1
0x2f8 MSTORE
0x2f9 PUSH1 0x2
0x2fb MUL
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff MLOAD
0x300 PUSH1 0x20
0x302 PUSH2 0x456
0x305 DUP4
0x306 CODECOPY
0x307 DUP2
0x308 MLOAD
0x309 SWAP2
0x30a MSTORE
0x30b ADD
0x30c DUP1
0x30d SLOAD
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 NOT
0x317 AND
0x318 SWAP1
0x319 SWAP3
0x31a OR
0x31b SWAP1
0x31c SWAP2
0x31d SSTORE
0x31e DUP1
0x31f SLOAD
0x320 DUP5
0x321 SWAP2
0x322 SWAP1
0x323 DUP5
0x324 SWAP1
0x325 DUP2
0x326 LT
0x327 ISZERO
0x328 PUSH2 0x2
0x32b JUMPI
---
0x2f8: M[0x0] = 0x0
0x2f9: V278 = 0x2
0x2fb: V279 = MUL 0x2 V239
0x2fc: V280 = 0x0
0x2ff: V281 = M[0x0]
0x300: V282 = 0x20
0x302: V283 = 0x456
0x306: CODECOPY 0x0 0x456 0x20
0x308: V284 = M[0x0]
0x30a: M[0x0] = V281
0x30b: V285 = ADD V284 V279
0x30d: V286 = S[V285]
0x30e: V287 = 0x1
0x310: V288 = 0xa0
0x312: V289 = 0x2
0x314: V290 = EXP 0x2 0xa0
0x315: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x316: V292 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x317: V293 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V286
0x31a: V294 = OR V271 V293
0x31d: S[V285] = V294
0x31f: V295 = S[0x0]
0x326: V296 = LT V239 V295
0x327: V297 = ISZERO V296
0x328: V298 = 0x2
0x32b: THROWI V297
---
Entry stack: [V10, S7, {0x158, 0x1b0}, S5, V239, 0x0, V271, 0x0, V239]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, S1, S4]
Exit stack: [V10, S7, {0x158, 0x1b0}, S5, V239, 0x0, S5, 0x0, V239]

================================

Block 0x32c
[0x32c:0x348]
---
Predecessors: [0x2f6]
Successors: [0x349, 0x364]
---
0x32c PUSH1 0x2
0x32e MUL
0x32f PUSH1 0x0
0x331 DUP1
0x332 MLOAD
0x333 PUSH1 0x20
0x335 PUSH2 0x476
0x338 DUP4
0x339 CODECOPY
0x33a DUP2
0x33b MLOAD
0x33c SWAP2
0x33d MSTORE
0x33e ADD
0x33f SWAP2
0x340 SWAP1
0x341 SWAP2
0x342 SSTORE
0x343 DUP3
0x344 EQ
0x345 PUSH2 0x364
0x348 JUMPI
---
0x32c: V299 = 0x2
0x32e: V300 = MUL 0x2 V239
0x32f: V301 = 0x0
0x332: V302 = M[0x0]
0x333: V303 = 0x20
0x335: V304 = 0x476
0x339: CODECOPY 0x0 0x476 0x20
0x33b: V305 = M[0x0]
0x33d: M[0x0] = V302
0x33e: V306 = ADD V305 V300
0x342: S[V306] = S2
0x344: V307 = EQ V239 0x0
0x345: V308 = 0x364
0x348: JUMPI 0x364 V307
---
Entry stack: [V10, S7, {0x158, 0x1b0}, S5, V239, 0x0, S2, 0x0, V239]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, S7, {0x158, 0x1b0}, S5, V239, 0x0]

================================

Block 0x349
[0x349:0x35f]
---
Predecessors: [0x32c]
Successors: [0x36d]
---
0x349 PUSH1 0x2
0x34b DUP1
0x34c SLOAD
0x34d PUSH1 0x19
0x34f DUP6
0x350 DIV
0x351 ADD
0x352 SWAP1
0x353 SSTORE
0x354 PUSH1 0x3
0x356 DUP1
0x357 SLOAD
0x358 DUP5
0x359 ADD
0x35a SWAP1
0x35b SSTORE
0x35c PUSH2 0x36d
0x35f JUMP
---
0x349: V309 = 0x2
0x34c: V310 = S[0x2]
0x34d: V311 = 0x19
0x350: V312 = DIV S2 0x19
0x351: V313 = ADD V312 V310
0x353: S[0x2] = V313
0x354: V314 = 0x3
0x357: V315 = S[0x3]
0x359: V316 = ADD S2 V315
0x35b: S[0x3] = V316
0x35c: V317 = 0x36d
0x35f: JUMP 0x36d
---
Entry stack: [V10, S4, {0x158, 0x1b0}, S2, V239, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x158, 0x1b0}, S2, V239, 0x0]

================================

Block 0x360
[0x360:0x363]
---
Predecessors: [0x2bb]
Successors: [0x2e1]
---
0x360 JUMPDEST
0x361 POP
0x362 SWAP1
0x363 JUMP
---
0x360: JUMPDEST 
0x363: JUMP 0x2e1
---
Entry stack: [V10, S10, {0x158, 0x1b0}, S8, V239, 0x0, V241, 0x0, V241, 0x2e1, V253, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S10, {0x158, 0x1b0}, S8, V239, 0x0, V241, 0x0, V241, V253]

================================

Block 0x364
[0x364:0x36c]
---
Predecessors: [0x32c]
Successors: [0x36d]
---
0x364 JUMPDEST
0x365 PUSH1 0x2
0x367 DUP1
0x368 SLOAD
0x369 DUP5
0x36a ADD
0x36b SWAP1
0x36c SSTORE
---
0x364: JUMPDEST 
0x365: V318 = 0x2
0x368: V319 = S[0x2]
0x36a: V320 = ADD S2 V319
0x36c: S[0x2] = V320
---
Entry stack: [V10, S4, {0x158, 0x1b0}, S2, V239, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x158, 0x1b0}, S2, V239, 0x0]

================================

Block 0x36d
[0x36d:0x36d]
---
Predecessors: [0x349, 0x364]
Successors: [0x36e]
---
0x36d JUMPDEST
---
0x36d: JUMPDEST 
---
Entry stack: [V10, S4, {0x158, 0x1b0}, S2, V239, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x158, 0x1b0}, S2, V239, 0x0]

================================

Block 0x36e
[0x36e:0x37d]
---
Predecessors: [0x36d, 0x425]
Successors: [0x37e]
---
0x36e JUMPDEST
0x36f PUSH1 0x0
0x371 DUP1
0x372 SLOAD
0x373 PUSH1 0x1
0x375 SLOAD
0x376 SWAP1
0x377 DUP2
0x378 LT
0x379 ISZERO
0x37a PUSH2 0x2
0x37d JUMPI
---
0x36e: JUMPDEST 
0x36f: V321 = 0x0
0x372: V322 = S[0x0]
0x373: V323 = 0x1
0x375: V324 = S[0x1]
0x378: V325 = LT V324 V322
0x379: V326 = ISZERO V325
0x37a: V327 = 0x2
0x37d: THROWI V326
---
Entry stack: [V10, S4, {0x158, 0x1b0}, S2, V239, S0]
Stack pops: 0
Stack additions: [0x0, V324]
Exit stack: [V10, S4, {0x158, 0x1b0}, S2, V239, S0, 0x0, V324]

================================

Block 0x37e
[0x37e:0x3a2]
---
Predecessors: [0x36e]
Successors: [0x1ab, 0x3a3]
---
0x37e SWAP1
0x37f DUP1
0x380 MSTORE
0x381 PUSH1 0x2
0x383 SWAP1
0x384 DUP2
0x385 MUL
0x386 PUSH1 0x0
0x388 DUP1
0x389 MLOAD
0x38a PUSH1 0x20
0x38c PUSH2 0x476
0x38f DUP4
0x390 CODECOPY
0x391 DUP2
0x392 MLOAD
0x393 SWAP2
0x394 MSTORE
0x395 ADD
0x396 SLOAD
0x397 PUSH1 0x3
0x399 SLOAD
0x39a SWAP2
0x39b MUL
0x39c SWAP1
0x39d GT
0x39e ISZERO
0x39f PUSH2 0x1ab
0x3a2 JUMPI
---
0x380: M[0x0] = 0x0
0x381: V328 = 0x2
0x385: V329 = MUL 0x2 V324
0x386: V330 = 0x0
0x389: V331 = M[0x0]
0x38a: V332 = 0x20
0x38c: V333 = 0x476
0x390: CODECOPY 0x0 0x476 0x20
0x392: V334 = M[0x0]
0x394: M[0x0] = V331
0x395: V335 = ADD V334 V329
0x396: V336 = S[V335]
0x397: V337 = 0x3
0x399: V338 = S[0x3]
0x39b: V339 = MUL 0x2 V336
0x39d: V340 = GT V338 V339
0x39e: V341 = ISZERO V340
0x39f: V342 = 0x1ab
0x3a2: JUMPI 0x1ab V341
---
Entry stack: [V10, S6, {0x158, 0x1b0}, S4, V239, S2, 0x0, V324]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S6, {0x158, 0x1b0}, S4, V239, S2]

================================

Block 0x3a3
[0x3a3:0x3b4]
---
Predecessors: [0x37e]
Successors: [0x3b5]
---
0x3a3 PUSH1 0x1
0x3a5 SLOAD
0x3a6 PUSH1 0x0
0x3a8 DUP1
0x3a9 SLOAD
0x3aa PUSH1 0x32
0x3ac SWAP3
0x3ad SWAP1
0x3ae DUP2
0x3af LT
0x3b0 ISZERO
0x3b1 PUSH2 0x2
0x3b4 JUMPI
---
0x3a3: V343 = 0x1
0x3a5: V344 = S[0x1]
0x3a6: V345 = 0x0
0x3a9: V346 = S[0x0]
0x3aa: V347 = 0x32
0x3af: V348 = LT V344 V346
0x3b0: V349 = ISZERO V348
0x3b1: V350 = 0x2
0x3b4: THROWI V349
---
Entry stack: [V10, S4, {0x158, 0x1b0}, S2, V239, S0]
Stack pops: 0
Stack additions: [0x32, 0x0, V344]
Exit stack: [V10, S4, {0x158, 0x1b0}, S2, V239, S0, 0x32, 0x0, V344]

================================

Block 0x3b5
[0x3b5:0x3e2]
---
Predecessors: [0x3a3]
Successors: [0x3e3]
---
0x3b5 DUP2
0x3b6 SLOAD
0x3b7 PUSH1 0x1
0x3b9 SLOAD
0x3ba PUSH1 0x2
0x3bc SWAP3
0x3bd SWAP1
0x3be SWAP3
0x3bf MUL
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 MLOAD
0x3c4 PUSH1 0x20
0x3c6 PUSH2 0x476
0x3c9 DUP4
0x3ca CODECOPY
0x3cb DUP2
0x3cc MLOAD
0x3cd SWAP2
0x3ce MSTORE
0x3cf ADD
0x3d0 SLOAD
0x3d1 SWAP4
0x3d2 SWAP1
0x3d3 SWAP4
0x3d4 DIV
0x3d5 PUSH1 0x63
0x3d7 MUL
0x3d8 SWAP4
0x3d9 POP
0x3da SWAP1
0x3db SWAP2
0x3dc DUP2
0x3dd LT
0x3de ISZERO
0x3df PUSH2 0x2
0x3e2 JUMPI
---
0x3b6: V351 = S[0x0]
0x3b7: V352 = 0x1
0x3b9: V353 = S[0x1]
0x3ba: V354 = 0x2
0x3bf: V355 = MUL 0x2 V344
0x3c0: V356 = 0x0
0x3c3: V357 = M[0x0]
0x3c4: V358 = 0x20
0x3c6: V359 = 0x476
0x3ca: CODECOPY 0x0 0x476 0x20
0x3cc: V360 = M[0x0]
0x3ce: M[0x0] = V357
0x3cf: V361 = ADD V360 V355
0x3d0: V362 = S[V361]
0x3d4: V363 = DIV V362 0x32
0x3d5: V364 = 0x63
0x3d7: V365 = MUL 0x63 V363
0x3dd: V366 = LT V353 V351
0x3de: V367 = ISZERO V366
0x3df: V368 = 0x2
0x3e2: THROWI V367
---
Entry stack: [V10, S7, {0x158, 0x1b0}, S5, V239, S3, 0x32, 0x0, V344]
Stack pops: 4
Stack additions: [V365, S1, V353]
Exit stack: [V10, S7, {0x158, 0x1b0}, S5, V239, V365, 0x0, V353]

================================

Block 0x3e3
[0x3e3:0x424]
---
Predecessors: [0x3b5]
Successors: [0x425]
---
0x3e3 PUSH1 0x2
0x3e5 MUL
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 MLOAD
0x3ea PUSH1 0x20
0x3ec PUSH2 0x456
0x3ef DUP4
0x3f0 CODECOPY
0x3f1 DUP2
0x3f2 MLOAD
0x3f3 SWAP2
0x3f4 MSTORE
0x3f5 ADD
0x3f6 SLOAD
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa PUSH1 0x1
0x3fc PUSH1 0xa0
0x3fe PUSH1 0x2
0x400 EXP
0x401 SUB
0x402 SWAP2
0x403 SWAP1
0x404 SWAP2
0x405 AND
0x406 SWAP2
0x407 SWAP1
0x408 DUP4
0x409 SWAP1
0x40a DUP3
0x40b DUP2
0x40c DUP2
0x40d DUP2
0x40e DUP6
0x40f DUP9
0x410 DUP4
0x411 CALL
0x412 POP
0x413 POP
0x414 DUP2
0x415 SLOAD
0x416 PUSH1 0x1
0x418 SLOAD
0x419 SWAP3
0x41a SWAP4
0x41b POP
0x41c DUP3
0x41d LT
0x41e ISZERO
0x41f SWAP1
0x420 POP
0x421 PUSH2 0x2
0x424 JUMPI
---
0x3e3: V369 = 0x2
0x3e5: V370 = MUL 0x2 V353
0x3e6: V371 = 0x0
0x3e9: V372 = M[0x0]
0x3ea: V373 = 0x20
0x3ec: V374 = 0x456
0x3f0: CODECOPY 0x0 0x456 0x20
0x3f2: V375 = M[0x0]
0x3f4: M[0x0] = V372
0x3f5: V376 = ADD V375 V370
0x3f6: V377 = S[V376]
0x3f7: V378 = 0x40
0x3f9: V379 = M[0x40]
0x3fa: V380 = 0x1
0x3fc: V381 = 0xa0
0x3fe: V382 = 0x2
0x400: V383 = EXP 0x2 0xa0
0x401: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x405: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x411: V386 = CALL 0x0 V385 V365 V379 0x0 V379 0x0
0x415: V387 = S[0x0]
0x416: V388 = 0x1
0x418: V389 = S[0x1]
0x41d: V390 = LT V389 V387
0x41e: V391 = ISZERO V390
0x421: V392 = 0x2
0x424: THROWI V391
---
Entry stack: [V10, S6, {0x158, 0x1b0}, S4, V239, V365, 0x0, V353]
Stack pops: 3
Stack additions: [S2, S1, V389]
Exit stack: [V10, S6, {0x158, 0x1b0}, S4, V239, V365, 0x0, V389]

================================

Block 0x425
[0x425:0x455]
---
Predecessors: [0x3e3]
Successors: [0x36e]
---
0x425 SWAP1
0x426 DUP1
0x427 MSTORE
0x428 PUSH1 0x2
0x42a SWAP1
0x42b DUP2
0x42c MUL
0x42d PUSH1 0x0
0x42f DUP1
0x430 MLOAD
0x431 PUSH1 0x20
0x433 PUSH2 0x476
0x436 DUP4
0x437 CODECOPY
0x438 DUP2
0x439 MLOAD
0x43a SWAP2
0x43b MSTORE
0x43c ADD
0x43d SLOAD
0x43e PUSH1 0x3
0x440 DUP1
0x441 SLOAD
0x442 SWAP2
0x443 SWAP1
0x444 SWAP3
0x445 MUL
0x446 SWAP1
0x447 SUB
0x448 SWAP1
0x449 SSTORE
0x44a PUSH1 0x1
0x44c DUP1
0x44d SLOAD
0x44e DUP2
0x44f ADD
0x450 SWAP1
0x451 SSTORE
0x452 PUSH2 0x36e
0x455 JUMP
---
0x427: M[0x0] = 0x0
0x428: V393 = 0x2
0x42c: V394 = MUL 0x2 V389
0x42d: V395 = 0x0
0x430: V396 = M[0x0]
0x431: V397 = 0x20
0x433: V398 = 0x476
0x437: CODECOPY 0x0 0x476 0x20
0x439: V399 = M[0x0]
0x43b: M[0x0] = V396
0x43c: V400 = ADD V399 V394
0x43d: V401 = S[V400]
0x43e: V402 = 0x3
0x441: V403 = S[0x3]
0x445: V404 = MUL 0x2 V401
0x447: V405 = SUB V403 V404
0x449: S[0x3] = V405
0x44a: V406 = 0x1
0x44d: V407 = S[0x1]
0x44f: V408 = ADD 0x1 V407
0x451: S[0x1] = V408
0x452: V409 = 0x36e
0x455: JUMP 0x36e
---
Entry stack: [V10, S6, {0x158, 0x1b0}, S4, V239, V365, 0x0, V389]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S6, {0x158, 0x1b0}, S4, V239, V365]

================================

Block 0x456
[0x456:0x49a]
---
Predecessors: []
Successors: []
---
0x456 MISSING 0x29
0x457 MISSING 0xd
0x458 MISSING 0xec
0x459 MISSING 0xd9
0x45a SLOAD
0x45b DUP12
0x45c PUSH3 0xa8d603
0x460 GASLIMIT
0x461 MISSING 0xa9
0x462 DUP9
0x463 CODESIZE
0x464 PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x475 PUSH4 0x290decd9
0x47a SLOAD
0x47b DUP12
0x47c PUSH3 0xa8d603
0x480 GASLIMIT
0x481 MISSING 0xa9
0x482 DUP9
0x483 CODESIZE
0x484 PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x495 PUSH5 0x0
---
0x456: MISSING 0x29
0x457: MISSING 0xd
0x458: MISSING 0xec
0x459: MISSING 0xd9
0x45a: V410 = S[S0]
0x45c: V411 = 0xa8d603
0x460: V412 = GASLIMIT
0x461: MISSING 0xa9
0x463: V413 = CODESIZE
0x464: V414 = 0xc84ba6bc95484008f6362f93160ef3e5
0x475: V415 = 0x290decd9
0x47a: V416 = S[0x290decd9]
0x47c: V417 = 0xa8d603
0x480: V418 = GASLIMIT
0x481: MISSING 0xa9
0x483: V419 = CODESIZE
0x484: V420 = 0xc84ba6bc95484008f6362f93160ef3e5
0x495: V421 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V412, 0xa8d603, S11, V410, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V418, 0xa8d603, S7, V416, 0xc84ba6bc95484008f6362f93160ef3e5, V413, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0x0, 0xc84ba6bc95484008f6362f93160ef3e5, V419, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x82
Exit block: 0x1b0
Body: 0x82, 0xa2, 0xb4, 0x1b0

Function 1:
Public function signature: 0x35c1d349
Entry block: 0xb7
Exit block: 0x1b2
Body: 0xb7, 0xcb, 0x1b2

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x103
Exit block: 0x1d8
Body: 0x103, 0x1d8

Function 3:
Public function signature: 0x9003adfe
Entry block: 0x115
Exit block: 0x1f5
Body: 0x115, 0x1f5

Function 4:
Public function signature: 0xa60f3588
Entry block: 0x11e
Exit block: 0x1f5
Body: 0x11e, 0x1f5

Function 5:
Public function signature: 0xb69ef8a8
Entry block: 0x127
Exit block: 0x1f5
Body: 0x127, 0x1f5

Function 6:
Public function signature: 0xc8796572
Entry block: 0x130
Exit block: 0x1b0
Body: 0x130, 0x14d, 0x158, 0x1b0, 0x207

Function 7:
Public function signature: 0xe977992d
Entry block: 0x15a
Exit block: 0x1b0
Body: 0x15a, 0x1b0

Function 8:
Public function signature: 0xe97dcb62
Entry block: 0x171
Exit block: 0x1b0
Body: 0x158, 0x171, 0x175, 0x18c, 0x1ab, 0x1b0, 0x22e, 0x23f, 0x27a, 0x27e, 0x299, 0x2bb, 0x2c4, 0x2e1, 0x2f6, 0x32c, 0x349, 0x360, 0x364, 0x36d, 0x36e, 0x37e, 0x3a3, 0x3b5, 0x3e3, 0x425

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x1b0
Body: 0x77, 0x158, 0x175, 0x18c, 0x1ab, 0x1b0, 0x22e, 0x23f, 0x27a, 0x27e, 0x299, 0x2bb, 0x2c4, 0x2e1, 0x2f6, 0x32c, 0x349, 0x360, 0x364, 0x36d, 0x36e, 0x37e, 0x3a3, 0x3b5, 0x3e3, 0x425

