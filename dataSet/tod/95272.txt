Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xaf]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x12065fe0
0x3c EQ
0x3d PUSH2 0xaf
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x12065fe0
0x3c: V13 = EQ 0x12065fe0 V11
0x3d: V14 = 0xaf
0x40: JUMPI 0xaf V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd8]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0xd8
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0xd8
0x4b: JUMPI 0xd8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xed]
---
0x4c DUP1
0x4d PUSH4 0x8447c02f
0x52 EQ
0x53 PUSH2 0xed
0x56 JUMPI
---
0x4d: V18 = 0x8447c02f
0x52: V19 = EQ 0x8447c02f V11
0x53: V20 = 0xed
0x56: JUMPI 0xed V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x105]
---
0x57 DUP1
0x58 PUSH4 0x893d20e8
0x5d EQ
0x5e PUSH2 0x105
0x61 JUMPI
---
0x58: V21 = 0x893d20e8
0x5d: V22 = EQ 0x893d20e8 V11
0x5e: V23 = 0x105
0x61: JUMPI 0x105 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x15a]
---
0x62 DUP1
0x63 PUSH4 0xb163cc38
0x68 EQ
0x69 PUSH2 0x15a
0x6c JUMPI
---
0x63: V24 = 0xb163cc38
0x68: V25 = EQ 0xb163cc38 V11
0x69: V26 = 0x15a
0x6c: JUMPI 0x15a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0xa8]
---
Predecessors: [0x0, 0x62]
Successors: [0xa9, 0xad]
---
0x6d JUMPDEST
0x6e CALLER
0x6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84 AND
0x85 PUSH2 0x8fc
0x88 CALLVALUE
0x89 SWAP1
0x8a DUP2
0x8b ISZERO
0x8c MUL
0x8d SWAP1
0x8e PUSH1 0x40
0x90 MLOAD
0x91 PUSH1 0x0
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP1
0x97 DUP4
0x98 SUB
0x99 DUP2
0x9a DUP6
0x9b DUP9
0x9c DUP9
0x9d CALL
0x9e SWAP4
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 ISZERO
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0x6d: JUMPDEST 
0x6e: V27 = CALLER
0x6f: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x84: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x85: V30 = 0x8fc
0x88: V31 = CALLVALUE
0x8b: V32 = ISZERO V31
0x8c: V33 = MUL V32 0x8fc
0x8e: V34 = 0x40
0x90: V35 = M[0x40]
0x91: V36 = 0x0
0x93: V37 = 0x40
0x95: V38 = M[0x40]
0x98: V39 = SUB V35 V38
0x9d: V40 = CALL V33 V29 V31 V38 V39 V38 0x0
0xa3: V41 = ISZERO V40
0xa4: V42 = ISZERO V41
0xa5: V43 = 0xad
0xa8: JUMPI 0xad V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0x6d]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V44 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0x6d]
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb5]
---
Predecessors: [0xd]
Successors: [0xb6, 0xba]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 ISZERO
0xb2 PUSH2 0xba
0xb5 JUMPI
---
0xaf: JUMPDEST 
0xb0: V45 = CALLVALUE
0xb1: V46 = ISZERO V45
0xb2: V47 = 0xba
0xb5: JUMPI 0xba V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb6
[0xb6:0xb9]
---
Predecessors: [0xaf]
Successors: []
---
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 REVERT
---
0xb6: V48 = 0x0
0xb9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc1]
---
Predecessors: [0xaf]
Successors: [0x164]
---
0xba JUMPDEST
0xbb PUSH2 0xc2
0xbe PUSH2 0x164
0xc1 JUMP
---
0xba: JUMPDEST 
0xbb: V49 = 0xc2
0xbe: V50 = 0x164
0xc1: JUMP 0x164
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V11, 0xc2]

================================

Block 0xc2
[0xc2:0xd7]
---
Predecessors: [0x164]
Successors: []
---
0xc2 JUMPDEST
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 DUP1
0xc7 DUP3
0xc8 DUP2
0xc9 MSTORE
0xca PUSH1 0x20
0xcc ADD
0xcd SWAP2
0xce POP
0xcf POP
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 SWAP2
0xd5 SUB
0xd6 SWAP1
0xd7 RETURN
---
0xc2: JUMPDEST 
0xc3: V51 = 0x40
0xc5: V52 = M[0x40]
0xc9: M[V52] = V93
0xca: V53 = 0x20
0xcc: V54 = ADD 0x20 V52
0xd0: V55 = 0x40
0xd2: V56 = M[0x40]
0xd5: V57 = SUB V54 V56
0xd7: RETURN V56 V57
---
Entry stack: [V11, V93]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xd8
[0xd8:0xde]
---
Predecessors: [0x41]
Successors: [0xdf, 0xe3]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda ISZERO
0xdb PUSH2 0xe3
0xde JUMPI
---
0xd8: JUMPDEST 
0xd9: V58 = CALLVALUE
0xda: V59 = ISZERO V58
0xdb: V60 = 0xe3
0xde: JUMPI 0xe3 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xd8]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V61 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0xd8]
Successors: [0x183]
---
0xe3 JUMPDEST
0xe4 PUSH2 0xeb
0xe7 PUSH2 0x183
0xea JUMP
---
0xe3: JUMPDEST 
0xe4: V62 = 0xeb
0xe7: V63 = 0x183
0xea: JUMP 0x183
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xeb]
Exit stack: [V11, 0xeb]

================================

Block 0xeb
[0xeb:0xec]
---
Predecessors: [0x212]
Successors: []
---
0xeb JUMPDEST
0xec STOP
---
0xeb: JUMPDEST 
0xec: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xed
[0xed:0x102]
---
Predecessors: [0x4c]
Successors: [0x214]
---
0xed JUMPDEST
0xee PUSH2 0x103
0xf1 PUSH1 0x4
0xf3 DUP1
0xf4 DUP1
0xf5 CALLDATALOAD
0xf6 SWAP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP1
0xfb SWAP2
0xfc SWAP1
0xfd POP
0xfe POP
0xff PUSH2 0x214
0x102 JUMP
---
0xed: JUMPDEST 
0xee: V64 = 0x103
0xf1: V65 = 0x4
0xf5: V66 = CALLDATALOAD 0x4
0xf7: V67 = 0x20
0xf9: V68 = ADD 0x20 0x4
0xff: V69 = 0x214
0x102: JUMP 0x214
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x103, V66]
Exit stack: [V11, 0x103, V66]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: [0x2d2]
Successors: []
---
0x103 JUMPDEST
0x104 STOP
---
0x103: JUMPDEST 
0x104: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0x57]
Successors: [0x10c, 0x110]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x105: JUMPDEST 
0x106: V70 = CALLVALUE
0x107: V71 = ISZERO V70
0x108: V72 = 0x110
0x10b: JUMPI 0x110 V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x105]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V73 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x105]
Successors: [0x2d5]
---
0x110 JUMPDEST
0x111 PUSH2 0x118
0x114 PUSH2 0x2d5
0x117 JUMP
---
0x110: JUMPDEST 
0x111: V74 = 0x118
0x114: V75 = 0x2d5
0x117: JUMP 0x2d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V11, 0x118]

================================

Block 0x118
[0x118:0x159]
---
Predecessors: [0x2d5]
Successors: []
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b MLOAD
0x11c DUP1
0x11d DUP3
0x11e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133 AND
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a DUP2
0x14b MSTORE
0x14c PUSH1 0x20
0x14e ADD
0x14f SWAP2
0x150 POP
0x151 POP
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 SWAP2
0x157 SUB
0x158 SWAP1
0x159 RETURN
---
0x118: JUMPDEST 
0x119: V76 = 0x40
0x11b: V77 = M[0x40]
0x11e: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x133: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x134: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x14b: M[V77] = V81
0x14c: V82 = 0x20
0x14e: V83 = ADD 0x20 V77
0x152: V84 = 0x40
0x154: V85 = M[0x40]
0x157: V86 = SUB V83 V85
0x159: RETURN V85 V86
---
Entry stack: [V11, V174]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x15a
[0x15a:0x161]
---
Predecessors: [0x62]
Successors: [0x2fe]
---
0x15a JUMPDEST
0x15b PUSH2 0x162
0x15e PUSH2 0x2fe
0x161 JUMP
---
0x15a: JUMPDEST 
0x15b: V87 = 0x162
0x15e: V88 = 0x2fe
0x161: JUMP 0x2fe
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x162]
Exit stack: [V11, 0x162]

================================

Block 0x162
[0x162:0x163]
---
Predecessors: [0x2fe]
Successors: []
---
0x162 JUMPDEST
0x163 STOP
---
0x162: JUMPDEST 
0x163: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x164
[0x164:0x182]
---
Predecessors: [0xba]
Successors: [0xc2]
---
0x164 JUMPDEST
0x165 PUSH1 0x0
0x167 ADDRESS
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e BALANCE
0x17f SWAP1
0x180 POP
0x181 SWAP1
0x182 JUMP
---
0x164: JUMPDEST 
0x165: V89 = 0x0
0x167: V90 = ADDRESS
0x168: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x17e: V93 = BALANCE V92
0x182: JUMP 0xc2
---
Entry stack: [V11, 0xc2]
Stack pops: 1
Stack additions: [V93]
Exit stack: [V11, V93]

================================

Block 0x183
[0x183:0x1d8]
---
Predecessors: [0xe3]
Successors: [0x1d9, 0x212]
---
0x183 JUMPDEST
0x184 PUSH1 0x0
0x186 DUP1
0x187 SWAP1
0x188 SLOAD
0x189 SWAP1
0x18a PUSH2 0x100
0x18d EXP
0x18e SWAP1
0x18f DIV
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc CALLER
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 EQ
0x1d4 ISZERO
0x1d5 PUSH2 0x212
0x1d8 JUMPI
---
0x183: JUMPDEST 
0x184: V94 = 0x0
0x188: V95 = S[0x0]
0x18a: V96 = 0x100
0x18d: V97 = EXP 0x100 0x0
0x18f: V98 = DIV V95 0x1
0x190: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1a6: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1bc: V103 = CALLER
0x1bd: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1d3: V106 = EQ V105 V102
0x1d4: V107 = ISZERO V106
0x1d5: V108 = 0x212
0x1d8: JUMPI 0x212 V107
---
Entry stack: [V11, 0xeb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb]

================================

Block 0x1d9
[0x1d9:0x211]
---
Predecessors: [0x183]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc SWAP1
0x1dd SLOAD
0x1de SWAP1
0x1df PUSH2 0x100
0x1e2 EXP
0x1e3 SWAP1
0x1e4 DIV
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x210 AND
0x211 SELFDESTRUCT
---
0x1d9: V109 = 0x0
0x1dd: V110 = S[0x0]
0x1df: V111 = 0x100
0x1e2: V112 = EXP 0x100 0x0
0x1e4: V113 = DIV V110 0x1
0x1e5: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1fb: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x210: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x211: SELFDESTRUCT V117
---
Entry stack: [V11, 0xeb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb]

================================

Block 0x212
[0x212:0x213]
---
Predecessors: [0x183]
Successors: [0xeb]
---
0x212 JUMPDEST
0x213 JUMP
---
0x212: JUMPDEST 
0x213: JUMP 0xeb
---
Entry stack: [V11, 0xeb]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x214
[0x214:0x223]
---
Predecessors: [0xed]
Successors: [0x224, 0x228]
---
0x214 JUMPDEST
0x215 PUSH6 0x5af3107a4000
0x21c CALLVALUE
0x21d EQ
0x21e ISZERO
0x21f ISZERO
0x220 PUSH2 0x228
0x223 JUMPI
---
0x214: JUMPDEST 
0x215: V118 = 0x5af3107a4000
0x21c: V119 = CALLVALUE
0x21d: V120 = EQ V119 0x5af3107a4000
0x21e: V121 = ISZERO V120
0x21f: V122 = ISZERO V121
0x220: V123 = 0x228
0x223: JUMPI 0x228 V122
---
Entry stack: [V11, 0x103, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V66]

================================

Block 0x224
[0x224:0x227]
---
Predecessors: [0x214]
Successors: []
---
0x224 PUSH1 0x0
0x226 DUP1
0x227 REVERT
---
0x224: V124 = 0x0
0x227: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V66]

================================

Block 0x228
[0x228:0x232]
---
Predecessors: [0x214]
Successors: [0x233, 0x2d2]
---
0x228 JUMPDEST
0x229 PUSH1 0x1
0x22b SLOAD
0x22c DUP2
0x22d EQ
0x22e ISZERO
0x22f PUSH2 0x2d2
0x232 JUMPI
---
0x228: JUMPDEST 
0x229: V125 = 0x1
0x22b: V126 = S[0x1]
0x22d: V127 = EQ V66 V126
0x22e: V128 = ISZERO V127
0x22f: V129 = 0x2d2
0x232: JUMPI 0x2d2 V128
---
Entry stack: [V11, 0x103, V66]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x103, V66]

================================

Block 0x233
[0x233:0x270]
---
Predecessors: [0x228]
Successors: [0x271, 0x272]
---
0x233 CALLER
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a PUSH2 0x8fc
0x24d PUSH1 0xa
0x24f PUSH1 0x9
0x251 ADDRESS
0x252 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x267 AND
0x268 BALANCE
0x269 MUL
0x26a DUP2
0x26b ISZERO
0x26c ISZERO
0x26d PUSH2 0x272
0x270 JUMPI
---
0x233: V130 = CALLER
0x234: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x24a: V133 = 0x8fc
0x24d: V134 = 0xa
0x24f: V135 = 0x9
0x251: V136 = ADDRESS
0x252: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x267: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x268: V139 = BALANCE V138
0x269: V140 = MUL V139 0x9
0x26b: V141 = ISZERO 0xa
0x26c: V142 = ISZERO 0x0
0x26d: V143 = 0x272
0x270: JUMPI 0x272 0x1
---
Entry stack: [V11, 0x103, V66]
Stack pops: 0
Stack additions: [V132, 0x8fc, 0xa, V140]
Exit stack: [V11, 0x103, V66, V132, 0x8fc, 0xa, V140]

================================

Block 0x271
[0x271:0x271]
---
Predecessors: [0x233]
Successors: []
---
0x271 INVALID
---
0x271: INVALID 
---
Entry stack: [V11, 0x103, V66, V132, 0x8fc, 0xa, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V66, V132, 0x8fc, 0xa, V140]

================================

Block 0x272
[0x272:0x293]
---
Predecessors: [0x233]
Successors: [0x294, 0x298]
---
0x272 JUMPDEST
0x273 DIV
0x274 SWAP1
0x275 DUP2
0x276 ISZERO
0x277 MUL
0x278 SWAP1
0x279 PUSH1 0x40
0x27b MLOAD
0x27c PUSH1 0x0
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 DUP4
0x283 SUB
0x284 DUP2
0x285 DUP6
0x286 DUP9
0x287 DUP9
0x288 CALL
0x289 SWAP4
0x28a POP
0x28b POP
0x28c POP
0x28d POP
0x28e ISZERO
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x272: JUMPDEST 
0x273: V144 = DIV V140 0xa
0x276: V145 = ISZERO V144
0x277: V146 = MUL V145 0x8fc
0x279: V147 = 0x40
0x27b: V148 = M[0x40]
0x27c: V149 = 0x0
0x27e: V150 = 0x40
0x280: V151 = M[0x40]
0x283: V152 = SUB V148 V151
0x288: V153 = CALL V146 V132 V144 V151 V152 V151 0x0
0x28e: V154 = ISZERO V153
0x28f: V155 = ISZERO V154
0x290: V156 = 0x298
0x293: JUMPI 0x298 V155
---
Entry stack: [V11, 0x103, V66, V132, 0x8fc, 0xa, V140]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x103, V66]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x272]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V157 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V66]

================================

Block 0x298
[0x298:0x2d1]
---
Predecessors: [0x272]
Successors: []
---
0x298 JUMPDEST
0x299 PUSH1 0x0
0x29b DUP1
0x29c SWAP1
0x29d SLOAD
0x29e SWAP1
0x29f PUSH2 0x100
0x2a2 EXP
0x2a3 SWAP1
0x2a4 DIV
0x2a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ba AND
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 AND
0x2d1 SELFDESTRUCT
---
0x298: JUMPDEST 
0x299: V158 = 0x0
0x29d: V159 = S[0x0]
0x29f: V160 = 0x100
0x2a2: V161 = EXP 0x100 0x0
0x2a4: V162 = DIV V159 0x1
0x2a5: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x2bb: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2d1: SELFDESTRUCT V166
---
Entry stack: [V11, 0x103, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V66]

================================

Block 0x2d2
[0x2d2:0x2d4]
---
Predecessors: [0x228]
Successors: [0x103]
---
0x2d2 JUMPDEST
0x2d3 POP
0x2d4 JUMP
---
0x2d2: JUMPDEST 
0x2d4: JUMP 0x103
---
Entry stack: [V11, 0x103, V66]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d5
[0x2d5:0x2fd]
---
Predecessors: [0x110]
Successors: [0x118]
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 PUSH1 0x0
0x2db SWAP1
0x2dc SLOAD
0x2dd SWAP1
0x2de PUSH2 0x100
0x2e1 EXP
0x2e2 SWAP1
0x2e3 DIV
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa SWAP1
0x2fb POP
0x2fc SWAP1
0x2fd JUMP
---
0x2d5: JUMPDEST 
0x2d6: V167 = 0x0
0x2d9: V168 = 0x0
0x2dc: V169 = S[0x0]
0x2de: V170 = 0x100
0x2e1: V171 = EXP 0x100 0x0
0x2e3: V172 = DIV V169 0x1
0x2e4: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2fd: JUMP 0x118
---
Entry stack: [V11, 0x118]
Stack pops: 1
Stack additions: [V174]
Exit stack: [V11, V174]

================================

Block 0x2fe
[0x2fe:0x2ff]
---
Predecessors: [0x15a]
Successors: [0x162]
---
0x2fe JUMPDEST
0x2ff JUMP
---
0x2fe: JUMPDEST 
0x2ff: JUMP 0x162
---
Entry stack: [V11, 0x162]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x300
[0x300:0x32b]
---
Predecessors: []
Successors: []
---
0x300 STOP
0x301 LOG1
0x302 PUSH6 0x627a7a723058
0x309 SHA3
0x30a MISSING 0xb2
0x30b MLOAD
0x30c PUSH8 0xb26dd21d0705334e
0x315 BLOCKHASH
0x316 MISSING 0x2b
0x317 ADDRESS
0x318 MISSING 0xc
0x319 LOG3
0x31a PUSH1 0x37
0x31c MISSING 0xe6
0x31d SWAP6
0x31e MISSING 0x2b
0x31f MISSING 0x1e
0x320 DUP11
0x321 MSTORE8
0x322 REVERT
0x323 PUSH7 0x34d6dcc9e5df00
0x32b MISSING 0x29
---
0x300: STOP 
0x301: LOG S0 S1 S2
0x302: V175 = 0x627a7a723058
0x309: V176 = SHA3 0x627a7a723058 S3
0x30a: MISSING 0xb2
0x30b: V177 = M[S0]
0x30c: V178 = 0xb26dd21d0705334e
0x315: V179 = BLOCKHASH 0xb26dd21d0705334e
0x316: MISSING 0x2b
0x317: V180 = ADDRESS
0x318: MISSING 0xc
0x319: LOG S0 S1 S2 S3 S4
0x31a: V181 = 0x37
0x31c: MISSING 0xe6
0x31e: MISSING 0x2b
0x31f: MISSING 0x1e
0x321: M8[S10] = S0
0x322: REVERT S1 S2
0x323: V182 = 0x34d6dcc9e5df00
0x32b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V176, V179, V177, V180, 0x37, S6, S1, S2, S3, S4, S5, S0, S3, S4, S5, S6, S7, S8, S9, S10, 0x34d6dcc9e5df00]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0xaf
Exit block: 0xc2
Body: 0xaf, 0xb6, 0xba, 0xc2, 0x164

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xd8
Exit block: 0xeb
Body: 0xd8, 0xdf, 0xe3, 0xeb, 0x183, 0x1d9, 0x212

Function 2:
Public function signature: 0x8447c02f
Entry block: 0xed
Exit block: 0x298
Body: 0xed, 0x103, 0x214, 0x224, 0x228, 0x233, 0x271, 0x272, 0x294, 0x298, 0x2d2

Function 3:
Public function signature: 0x893d20e8
Entry block: 0x105
Exit block: 0x118
Body: 0x105, 0x10c, 0x110, 0x118, 0x2d5

Function 4:
Public function signature: 0xb163cc38
Entry block: 0x15a
Exit block: 0x162
Body: 0x15a, 0x162, 0x2fe

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0xad
Body: 0x6d, 0xa9, 0xad

