Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x56
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x56
0xa: JUMPI 0x56 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x61]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x27dc297e
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x61
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x27dc297e
0x1a: V12 = EQ V10 0x27dc297e
0x1b: V13 = 0x61
0x1e: JUMPI 0x61 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x17f]
---
0x1f DUP1
0x20 PUSH4 0x41c0e1b5
0x25 EQ
0x26 PUSH2 0x17f
0x29 JUMPI
---
0x20: V14 = 0x41c0e1b5
0x25: V15 = EQ 0x41c0e1b5 V10
0x26: V16 = 0x17f
0x29: JUMPI 0x17f V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x1a9]
---
0x2a DUP1
0x2b PUSH4 0x61150aae
0x30 EQ
0x31 PUSH2 0x1a9
0x34 JUMPI
---
0x2b: V17 = 0x61150aae
0x30: V18 = EQ 0x61150aae V10
0x31: V19 = 0x1a9
0x34: JUMPI 0x1a9 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x207]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x207
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x207
0x3f: JUMPI 0x207 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x219]
---
0x40 DUP1
0x41 PUSH4 0xe97dcb62
0x46 EQ
0x47 PUSH2 0x219
0x4a JUMPI
---
0x41: V23 = 0xe97dcb62
0x46: V24 = EQ 0xe97dcb62 V10
0x47: V25 = 0x219
0x4a: JUMPI 0x219 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x24f]
---
0x4b DUP1
0x4c PUSH4 0xf6b4dfb4
0x51 EQ
0x52 PUSH2 0x24f
0x55 JUMPI
---
0x4c: V26 = 0xf6b4dfb4
0x51: V27 = EQ 0xf6b4dfb4 V10
0x52: V28 = 0x24f
0x55: JUMPI 0x24f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x0, 0x4b]
Successors: [0x21d]
---
0x56 JUMPDEST
0x57 PUSH2 0x261
0x5a PUSH2 0x24d
0x5d PUSH2 0x21d
0x60 JUMP
---
0x56: JUMPDEST 
0x57: V29 = 0x261
0x5a: V30 = 0x24d
0x5d: V31 = 0x21d
0x60: JUMP 0x21d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x261, 0x24d]
Exit stack: [V10, 0x261, 0x24d]

================================

Block 0x61
[0x61:0xf3]
---
Predecessors: [0xb]
Successors: [0xf4]
---
0x61 JUMPDEST
0x62 PUSH1 0x40
0x64 DUP1
0x65 MLOAD
0x66 PUSH1 0x20
0x68 PUSH1 0x24
0x6a DUP1
0x6b CALLDATALOAD
0x6c PUSH1 0x4
0x6e DUP2
0x6f DUP2
0x70 ADD
0x71 CALLDATALOAD
0x72 PUSH1 0x1f
0x74 DUP2
0x75 ADD
0x76 DUP6
0x77 SWAP1
0x78 DIV
0x79 DUP6
0x7a MUL
0x7b DUP7
0x7c ADD
0x7d DUP6
0x7e ADD
0x7f SWAP1
0x80 SWAP7
0x81 MSTORE
0x82 DUP6
0x83 DUP6
0x84 MSTORE
0x85 PUSH2 0x261
0x88 SWAP6
0x89 DUP2
0x8a CALLDATALOAD
0x8b SWAP6
0x8c SWAP2
0x8d SWAP5
0x8e PUSH1 0x44
0x90 SWAP5
0x91 SWAP3
0x92 SWAP4
0x93 SWAP1
0x94 SWAP3
0x95 ADD
0x96 SWAP2
0x97 DUP2
0x98 SWAP1
0x99 DUP5
0x9a ADD
0x9b DUP4
0x9c DUP3
0x9d DUP1
0x9e DUP3
0x9f DUP5
0xa0 CALLDATACOPY
0xa1 POP
0xa2 SWAP5
0xa3 SWAP7
0xa4 POP
0xa5 POP
0xa6 POP
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab PUSH2 0x2ee
0xae PUSH1 0x40
0xb0 DUP1
0xb1 MLOAD
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 SLOAD
0xb6 PUSH1 0xe0
0xb8 PUSH1 0x2
0xba EXP
0xbb PUSH4 0x38cc4831
0xc0 MUL
0xc1 DUP4
0xc2 MSTORE
0xc3 SWAP3
0xc4 MLOAD
0xc5 SWAP1
0xc6 SWAP3
0xc7 PUSH1 0x1
0xc9 PUSH1 0xa0
0xcb PUSH1 0x2
0xcd EXP
0xce SUB
0xcf AND
0xd0 SWAP2
0xd1 PUSH4 0x38cc4831
0xd6 SWAP2
0xd7 PUSH1 0x4
0xd9 DUP1
0xda DUP4
0xdb ADD
0xdc SWAP3
0xdd PUSH1 0x20
0xdf SWAP3
0xe0 SWAP2
0xe1 SWAP1
0xe2 DUP3
0xe3 SWAP1
0xe4 SUB
0xe5 ADD
0xe6 DUP2
0xe7 DUP8
0xe8 DUP8
0xe9 PUSH2 0x61da
0xec GAS
0xed SUB
0xee CALL
0xef ISZERO
0xf0 PUSH2 0x2
0xf3 JUMPI
---
0x61: JUMPDEST 
0x62: V32 = 0x40
0x65: V33 = M[0x40]
0x66: V34 = 0x20
0x68: V35 = 0x24
0x6b: V36 = CALLDATALOAD 0x24
0x6c: V37 = 0x4
0x70: V38 = ADD 0x4 V36
0x71: V39 = CALLDATALOAD V38
0x72: V40 = 0x1f
0x75: V41 = ADD V39 0x1f
0x78: V42 = DIV V41 0x20
0x7a: V43 = MUL 0x20 V42
0x7c: V44 = ADD V33 V43
0x7e: V45 = ADD 0x20 V44
0x81: M[0x40] = V45
0x84: M[V33] = V39
0x85: V46 = 0x261
0x8a: V47 = CALLDATALOAD 0x4
0x8e: V48 = 0x44
0x95: V49 = ADD 0x24 V36
0x9a: V50 = ADD V33 0x20
0xa0: CALLDATACOPY V50 V49 V39
0xab: V51 = 0x2ee
0xae: V52 = 0x40
0xb1: V53 = M[0x40]
0xb2: V54 = 0x0
0xb5: V55 = S[0x0]
0xb6: V56 = 0xe0
0xb8: V57 = 0x2
0xba: V58 = EXP 0x2 0xe0
0xbb: V59 = 0x38cc4831
0xc0: V60 = MUL 0x38cc4831 0x100000000000000000000000000000000000000000000000000000000
0xc2: M[V53] = 0x38cc483100000000000000000000000000000000000000000000000000000000
0xc4: V61 = M[0x40]
0xc7: V62 = 0x1
0xc9: V63 = 0xa0
0xcb: V64 = 0x2
0xcd: V65 = EXP 0x2 0xa0
0xce: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xd1: V68 = 0x38cc4831
0xd7: V69 = 0x4
0xdb: V70 = ADD V53 0x4
0xdd: V71 = 0x20
0xe4: V72 = SUB V53 V61
0xe5: V73 = ADD V72 0x4
0xe9: V74 = 0x61da
0xec: V75 = GAS
0xed: V76 = SUB V75 0x61da
0xee: V77 = CALL V76 V67 0x0 V61 V73 V61 0x20
0xef: V78 = ISZERO V77
0xf0: V79 = 0x2
0xf3: THROWI V78
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x261, V47, V33, 0x2ee, 0x0, V67, 0x38cc4831, V70]
Exit stack: [V10, 0x261, V47, V33, 0x2ee, 0x0, V67, 0x38cc4831, V70]

================================

Block 0xf4
[0xf4:0x173]
---
Predecessors: [0x61]
Successors: [0x174]
---
0xf4 POP
0xf5 POP
0xf6 PUSH1 0x40
0xf8 DUP1
0xf9 MLOAD
0xfa DUP1
0xfb MLOAD
0xfc PUSH1 0x1
0xfe DUP1
0xff SLOAD
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 NOT
0x116 AND
0x117 SWAP1
0x118 SWAP2
0x119 OR
0x11a SWAP1
0x11b DUP2
0x11c SWAP1
0x11d SSTORE
0x11e PUSH32 0xc281d19e00000000000000000000000000000000000000000000000000000000
0x13f DUP3
0x140 MSTORE
0x141 SWAP2
0x142 MLOAD
0x143 PUSH1 0x1
0x145 PUSH1 0xa0
0x147 PUSH1 0x2
0x149 EXP
0x14a SUB
0x14b SWAP3
0x14c SWAP1
0x14d SWAP3
0x14e AND
0x14f SWAP3
0x150 POP
0x151 PUSH4 0xc281d19e
0x156 SWAP2
0x157 PUSH1 0x4
0x159 DUP3
0x15a DUP2
0x15b ADD
0x15c SWAP3
0x15d PUSH1 0x20
0x15f SWAP3
0x160 SWAP2
0x161 SWAP1
0x162 DUP3
0x163 SWAP1
0x164 SUB
0x165 ADD
0x166 DUP2
0x167 DUP8
0x168 DUP8
0x169 PUSH2 0x61da
0x16c GAS
0x16d SUB
0x16e CALL
0x16f ISZERO
0x170 PUSH2 0x2
0x173 JUMPI
---
0xf6: V80 = 0x40
0xf9: V81 = M[0x40]
0xfb: V82 = M[V81]
0xfc: V83 = 0x1
0xff: V84 = S[0x1]
0x100: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V86 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x116: V87 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V84
0x119: V88 = OR V82 V87
0x11d: S[0x1] = V88
0x11e: V89 = 0xc281d19e00000000000000000000000000000000000000000000000000000000
0x140: M[V81] = 0xc281d19e00000000000000000000000000000000000000000000000000000000
0x142: V90 = M[0x40]
0x143: V91 = 0x1
0x145: V92 = 0xa0
0x147: V93 = 0x2
0x149: V94 = EXP 0x2 0xa0
0x14a: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14e: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x151: V97 = 0xc281d19e
0x157: V98 = 0x4
0x15b: V99 = ADD 0x4 V81
0x15d: V100 = 0x20
0x164: V101 = SUB V81 V90
0x165: V102 = ADD V101 0x4
0x169: V103 = 0x61da
0x16c: V104 = GAS
0x16d: V105 = SUB V104 0x61da
0x16e: V106 = CALL V105 V96 0x0 V90 V102 V90 0x20
0x16f: V107 = ISZERO V106
0x170: V108 = 0x2
0x173: THROWI V107
---
Entry stack: [V10, 0x261, V47, V33, 0x2ee, 0x0, V67, 0x38cc4831, V70]
Stack pops: 4
Stack additions: [S3, V96, 0xc281d19e, V99]
Exit stack: [V10, 0x261, V47, V33, 0x2ee, 0x0, V96, 0xc281d19e, V99]

================================

Block 0x174
[0x174:0x17e]
---
Predecessors: [0xf4]
Successors: [0x2ee]
---
0x174 POP
0x175 POP
0x176 PUSH1 0x40
0x178 MLOAD
0x179 MLOAD
0x17a SWAP2
0x17b POP
0x17c POP
0x17d SWAP1
0x17e JUMP
---
0x176: V109 = 0x40
0x178: V110 = M[0x40]
0x179: V111 = M[V110]
0x17e: JUMP 0x2ee
---
Entry stack: [V10, 0x261, V47, V33, 0x2ee, 0x0, V96, 0xc281d19e, V99]
Stack pops: 5
Stack additions: [V111]
Exit stack: [V10, 0x261, V47, V33, V111]

================================

Block 0x17f
[0x17f:0x19b]
---
Predecessors: [0x1f]
Successors: [0x19c, 0x24d]
---
0x17f JUMPDEST
0x180 PUSH2 0x261
0x183 PUSH1 0x2
0x185 SLOAD
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e SWAP1
0x18f DUP2
0x190 AND
0x191 CALLER
0x192 SWAP2
0x193 SWAP1
0x194 SWAP2
0x195 AND
0x196 EQ
0x197 ISZERO
0x198 PUSH2 0x24d
0x19b JUMPI
---
0x17f: JUMPDEST 
0x180: V112 = 0x261
0x183: V113 = 0x2
0x185: V114 = S[0x2]
0x186: V115 = 0x1
0x188: V116 = 0xa0
0x18a: V117 = 0x2
0x18c: V118 = EXP 0x2 0xa0
0x18d: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x190: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x191: V121 = CALLER
0x195: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x196: V123 = EQ V122 V120
0x197: V124 = ISZERO V123
0x198: V125 = 0x24d
0x19b: JUMPI 0x24d V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x261]
Exit stack: [V10, 0x261]

================================

Block 0x19c
[0x19c:0x1a8]
---
Predecessors: [0x17f]
Successors: []
---
0x19c PUSH1 0x2
0x19e SLOAD
0x19f PUSH1 0x1
0x1a1 PUSH1 0xa0
0x1a3 PUSH1 0x2
0x1a5 EXP
0x1a6 SUB
0x1a7 AND
0x1a8 SELFDESTRUCT
---
0x19c: V126 = 0x2
0x19e: V127 = S[0x2]
0x19f: V128 = 0x1
0x1a1: V129 = 0xa0
0x1a3: V130 = 0x2
0x1a5: V131 = EXP 0x2 0xa0
0x1a6: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a7: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x1a8: SELFDESTRUCT V133
---
Entry stack: [V10, 0x261]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x261]

================================

Block 0x1a9
[0x1a9:0x1eb]
---
Predecessors: [0x2a]
Successors: [0x1ec, 0x405]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x40
0x1ac DUP1
0x1ad MLOAD
0x1ae PUSH1 0x4
0x1b0 DUP1
0x1b1 SLOAD
0x1b2 PUSH1 0x20
0x1b4 PUSH1 0x2
0x1b6 PUSH1 0x1
0x1b8 DUP4
0x1b9 AND
0x1ba ISZERO
0x1bb PUSH2 0x100
0x1be MUL
0x1bf PUSH1 0x0
0x1c1 NOT
0x1c2 ADD
0x1c3 SWAP1
0x1c4 SWAP3
0x1c5 AND
0x1c6 SWAP2
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 DIV
0x1ca PUSH1 0x1f
0x1cc DUP2
0x1cd ADD
0x1ce DUP3
0x1cf SWAP1
0x1d0 DIV
0x1d1 DUP3
0x1d2 MUL
0x1d3 DUP5
0x1d4 ADD
0x1d5 DUP3
0x1d6 ADD
0x1d7 SWAP1
0x1d8 SWAP5
0x1d9 MSTORE
0x1da DUP4
0x1db DUP4
0x1dc MSTORE
0x1dd PUSH2 0x263
0x1e0 SWAP4
0x1e1 SWAP1
0x1e2 DUP4
0x1e3 ADD
0x1e4 DUP3
0x1e5 DUP3
0x1e6 DUP1
0x1e7 ISZERO
0x1e8 PUSH2 0x405
0x1eb JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V134 = 0x40
0x1ad: V135 = M[0x40]
0x1ae: V136 = 0x4
0x1b1: V137 = S[0x4]
0x1b2: V138 = 0x20
0x1b4: V139 = 0x2
0x1b6: V140 = 0x1
0x1b9: V141 = AND V137 0x1
0x1ba: V142 = ISZERO V141
0x1bb: V143 = 0x100
0x1be: V144 = MUL 0x100 V142
0x1bf: V145 = 0x0
0x1c1: V146 = NOT 0x0
0x1c2: V147 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V144
0x1c5: V148 = AND V137 V147
0x1c9: V149 = DIV V148 0x2
0x1ca: V150 = 0x1f
0x1cd: V151 = ADD V149 0x1f
0x1d0: V152 = DIV V151 0x20
0x1d2: V153 = MUL 0x20 V152
0x1d4: V154 = ADD V135 V153
0x1d6: V155 = ADD 0x20 V154
0x1d9: M[0x40] = V155
0x1dc: M[V135] = V149
0x1dd: V156 = 0x263
0x1e3: V157 = ADD V135 0x20
0x1e7: V158 = ISZERO V149
0x1e8: V159 = 0x405
0x1eb: JUMPI 0x405 V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x263, V135, 0x4, V149, V157, 0x4, V149]
Exit stack: [V10, 0x263, V135, 0x4, V149, V157, 0x4, V149]

================================

Block 0x1ec
[0x1ec:0x1f3]
---
Predecessors: [0x1a9]
Successors: [0x1f4, 0x3da]
---
0x1ec DUP1
0x1ed PUSH1 0x1f
0x1ef LT
0x1f0 PUSH2 0x3da
0x1f3 JUMPI
---
0x1ed: V160 = 0x1f
0x1ef: V161 = LT 0x1f V149
0x1f0: V162 = 0x3da
0x1f3: JUMPI 0x3da V161
---
Entry stack: [V10, 0x263, V135, 0x4, V149, V157, 0x4, V149]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x263, V135, 0x4, V149, V157, 0x4, V149]

================================

Block 0x1f4
[0x1f4:0x206]
---
Predecessors: [0x1ec]
Successors: [0x405]
---
0x1f4 PUSH2 0x100
0x1f7 DUP1
0x1f8 DUP4
0x1f9 SLOAD
0x1fa DIV
0x1fb MUL
0x1fc DUP4
0x1fd MSTORE
0x1fe SWAP2
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP2
0x203 PUSH2 0x405
0x206 JUMP
---
0x1f4: V163 = 0x100
0x1f9: V164 = S[0x4]
0x1fa: V165 = DIV V164 0x100
0x1fb: V166 = MUL V165 0x100
0x1fd: M[V157] = V166
0x1ff: V167 = 0x20
0x201: V168 = ADD 0x20 V157
0x203: V169 = 0x405
0x206: JUMP 0x405
---
Entry stack: [V10, 0x263, V135, 0x4, V149, V157, 0x4, V149]
Stack pops: 3
Stack additions: [V168, S1, S0]
Exit stack: [V10, 0x263, V135, 0x4, V149, V168, 0x4, V149]

================================

Block 0x207
[0x207:0x218]
---
Predecessors: [0x35]
Successors: [0x2d1]
---
0x207 JUMPDEST
0x208 PUSH2 0x2d1
0x20b PUSH1 0x2
0x20d SLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 AND
0x217 DUP2
0x218 JUMP
---
0x207: JUMPDEST 
0x208: V170 = 0x2d1
0x20b: V171 = 0x2
0x20d: V172 = S[0x2]
0x20e: V173 = 0x1
0x210: V174 = 0xa0
0x212: V175 = 0x2
0x214: V176 = EXP 0x2 0xa0
0x215: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x218: JUMP 0x2d1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d1, V178]
Exit stack: [V10, 0x2d1, V178]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x40]
Successors: [0x21d]
---
0x219 JUMPDEST
0x21a PUSH2 0x261
---
0x219: JUMPDEST 
0x21a: V179 = 0x261
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x261]
Exit stack: [V10, 0x261]

================================

Block 0x21d
[0x21d:0x22c]
---
Predecessors: [0x56, 0x219]
Successors: [0x22d, 0x40d]
---
0x21d JUMPDEST
0x21e PUSH7 0xb1a2bc2ec50000
0x226 CALLVALUE
0x227 LT
0x228 ISZERO
0x229 PUSH2 0x40d
0x22c JUMPI
---
0x21d: JUMPDEST 
0x21e: V180 = 0xb1a2bc2ec50000
0x226: V181 = CALLVALUE
0x227: V182 = LT V181 0xb1a2bc2ec50000
0x228: V183 = ISZERO V182
0x229: V184 = 0x40d
0x22c: JUMPI 0x40d V183
---
Entry stack: [V10, S1, {0x24d, 0x261}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x24d, 0x261}]

================================

Block 0x22d
[0x22d:0x24c]
---
Predecessors: [0x21d]
Successors: [0x24d]
---
0x22d PUSH1 0x40
0x22f MLOAD
0x230 PUSH1 0x1
0x232 PUSH1 0xa0
0x234 PUSH1 0x2
0x236 EXP
0x237 SUB
0x238 CALLER
0x239 AND
0x23a SWAP1
0x23b PUSH1 0x0
0x23d SWAP1
0x23e CALLVALUE
0x23f SWAP1
0x240 DUP3
0x241 DUP2
0x242 DUP2
0x243 DUP2
0x244 DUP6
0x245 DUP9
0x246 DUP4
0x247 CALL
0x248 POP
0x249 POP
0x24a POP
0x24b POP
0x24c POP
---
0x22d: V185 = 0x40
0x22f: V186 = M[0x40]
0x230: V187 = 0x1
0x232: V188 = 0xa0
0x234: V189 = 0x2
0x236: V190 = EXP 0x2 0xa0
0x237: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x238: V192 = CALLER
0x239: V193 = AND V192 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V194 = 0x0
0x23e: V195 = CALLVALUE
0x247: V196 = CALL 0x0 V193 V195 V186 0x0 V186 0x0
---
Entry stack: [V10, S1, {0x24d, 0x261}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x24d, 0x261}]

================================

Block 0x24d
[0x24d:0x24e]
---
Predecessors: [0x17f, 0x22d, 0x24d, 0x619]
Successors: [0x24d, 0x261]
---
0x24d JUMPDEST
0x24e JUMP
---
0x24d: JUMPDEST 
0x24e: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x24f
[0x24f:0x260]
---
Predecessors: [0x4b]
Successors: [0x2d1]
---
0x24f JUMPDEST
0x250 PUSH2 0x2d1
0x253 PUSH1 0x3
0x255 SLOAD
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a PUSH1 0x2
0x25c EXP
0x25d SUB
0x25e AND
0x25f DUP2
0x260 JUMP
---
0x24f: JUMPDEST 
0x250: V197 = 0x2d1
0x253: V198 = 0x3
0x255: V199 = S[0x3]
0x256: V200 = 0x1
0x258: V201 = 0xa0
0x25a: V202 = 0x2
0x25c: V203 = EXP 0x2 0xa0
0x25d: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x260: JUMP 0x2d1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d1, V205]
Exit stack: [V10, 0x2d1, V205]

================================

Block 0x261
[0x261:0x262]
---
Predecessors: [0x24d, 0x3d0, 0x619]
Successors: []
---
0x261 JUMPDEST
0x262 STOP
---
0x261: JUMPDEST 
0x262: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x263
[0x263:0x2a9]
---
Predecessors: [0x405]
Successors: [0x2aa, 0x2c3]
---
0x263 JUMPDEST
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 DUP1
0x269 PUSH1 0x20
0x26b ADD
0x26c DUP3
0x26d DUP2
0x26e SUB
0x26f DUP3
0x270 MSTORE
0x271 DUP4
0x272 DUP2
0x273 DUP2
0x274 MLOAD
0x275 DUP2
0x276 MSTORE
0x277 PUSH1 0x20
0x279 ADD
0x27a SWAP2
0x27b POP
0x27c DUP1
0x27d MLOAD
0x27e SWAP1
0x27f PUSH1 0x20
0x281 ADD
0x282 SWAP1
0x283 DUP1
0x284 DUP4
0x285 DUP4
0x286 DUP3
0x287 SWAP1
0x288 PUSH1 0x0
0x28a PUSH1 0x4
0x28c PUSH1 0x20
0x28e DUP5
0x28f PUSH1 0x1f
0x291 ADD
0x292 DIV
0x293 PUSH1 0xf
0x295 MUL
0x296 PUSH1 0x3
0x298 ADD
0x299 CALL
0x29a POP
0x29b SWAP1
0x29c POP
0x29d SWAP1
0x29e DUP2
0x29f ADD
0x2a0 SWAP1
0x2a1 PUSH1 0x1f
0x2a3 AND
0x2a4 DUP1
0x2a5 ISZERO
0x2a6 PUSH2 0x2c3
0x2a9 JUMPI
---
0x263: JUMPDEST 
0x264: V206 = 0x40
0x266: V207 = M[0x40]
0x269: V208 = 0x20
0x26b: V209 = ADD 0x20 V207
0x26e: V210 = SUB V209 V207
0x270: M[V207] = V210
0x274: V211 = M[V135]
0x276: M[V209] = V211
0x277: V212 = 0x20
0x279: V213 = ADD 0x20 V209
0x27d: V214 = M[V135]
0x27f: V215 = 0x20
0x281: V216 = ADD 0x20 V135
0x288: V217 = 0x0
0x28a: V218 = 0x4
0x28c: V219 = 0x20
0x28f: V220 = 0x1f
0x291: V221 = ADD 0x1f V214
0x292: V222 = DIV V221 0x20
0x293: V223 = 0xf
0x295: V224 = MUL 0xf V222
0x296: V225 = 0x3
0x298: V226 = ADD 0x3 V224
0x299: V227 = CALL V226 0x4 0x0 V216 V214 V213 V214
0x29f: V228 = ADD V214 V213
0x2a1: V229 = 0x1f
0x2a3: V230 = AND 0x1f V214
0x2a5: V231 = ISZERO V230
0x2a6: V232 = 0x2c3
0x2a9: JUMPI 0x2c3 V231
---
Entry stack: [V10, 0x263, V135]
Stack pops: 1
Stack additions: [S0, V207, V207, V228, V230]
Exit stack: [V10, 0x263, V135, V207, V207, V228, V230]

================================

Block 0x2aa
[0x2aa:0x2c2]
---
Predecessors: [0x263]
Successors: [0x2c3]
---
0x2aa DUP1
0x2ab DUP3
0x2ac SUB
0x2ad DUP1
0x2ae MLOAD
0x2af PUSH1 0x1
0x2b1 DUP4
0x2b2 PUSH1 0x20
0x2b4 SUB
0x2b5 PUSH2 0x100
0x2b8 EXP
0x2b9 SUB
0x2ba NOT
0x2bb AND
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 SWAP2
0x2c2 POP
---
0x2ac: V233 = SUB V228 V230
0x2ae: V234 = M[V233]
0x2af: V235 = 0x1
0x2b2: V236 = 0x20
0x2b4: V237 = SUB 0x20 V230
0x2b5: V238 = 0x100
0x2b8: V239 = EXP 0x100 V237
0x2b9: V240 = SUB V239 0x1
0x2ba: V241 = NOT V240
0x2bb: V242 = AND V241 V234
0x2bd: M[V233] = V242
0x2be: V243 = 0x20
0x2c0: V244 = ADD 0x20 V233
---
Entry stack: [V10, 0x263, V135, V207, V207, V228, V230]
Stack pops: 2
Stack additions: [V244, S0]
Exit stack: [V10, 0x263, V135, V207, V207, V244, V230]

================================

Block 0x2c3
[0x2c3:0x2d0]
---
Predecessors: [0x263, 0x2aa]
Successors: []
---
0x2c3 JUMPDEST
0x2c4 POP
0x2c5 SWAP3
0x2c6 POP
0x2c7 POP
0x2c8 POP
0x2c9 PUSH1 0x40
0x2cb MLOAD
0x2cc DUP1
0x2cd SWAP2
0x2ce SUB
0x2cf SWAP1
0x2d0 RETURN
---
0x2c3: JUMPDEST 
0x2c9: V245 = 0x40
0x2cb: V246 = M[0x40]
0x2ce: V247 = SUB S1 V246
0x2d0: RETURN V246 V247
---
Entry stack: [V10, 0x263, V135, V207, V207, S1, V230]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x263]

================================

Block 0x2d1
[0x2d1:0x2ed]
---
Predecessors: [0x207, 0x24f]
Successors: []
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x40
0x2d4 DUP1
0x2d5 MLOAD
0x2d6 PUSH1 0x1
0x2d8 PUSH1 0xa0
0x2da PUSH1 0x2
0x2dc EXP
0x2dd SUB
0x2de SWAP3
0x2df SWAP1
0x2e0 SWAP3
0x2e1 AND
0x2e2 DUP3
0x2e3 MSTORE
0x2e4 MLOAD
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 SWAP1
0x2e8 SUB
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP1
0x2ed RETURN
---
0x2d1: JUMPDEST 
0x2d2: V248 = 0x40
0x2d5: V249 = M[0x40]
0x2d6: V250 = 0x1
0x2d8: V251 = 0xa0
0x2da: V252 = 0x2
0x2dc: V253 = EXP 0x2 0xa0
0x2dd: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2e3: M[V249] = V255
0x2e4: V256 = M[0x40]
0x2e8: V257 = SUB V249 V256
0x2e9: V258 = 0x20
0x2eb: V259 = ADD 0x20 V257
0x2ed: RETURN V256 V259
---
Entry stack: [V10, 0x2d1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2d1]

================================

Block 0x2ee
[0x2ee:0x308]
---
Predecessors: [0x174]
Successors: [0x309, 0x30d]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x1
0x2f1 PUSH1 0xa0
0x2f3 PUSH1 0x2
0x2f5 EXP
0x2f6 SUB
0x2f7 AND
0x2f8 CALLER
0x2f9 PUSH1 0x1
0x2fb PUSH1 0xa0
0x2fd PUSH1 0x2
0x2ff EXP
0x300 SUB
0x301 AND
0x302 EQ
0x303 ISZERO
0x304 ISZERO
0x305 PUSH2 0x30d
0x308 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V260 = 0x1
0x2f1: V261 = 0xa0
0x2f3: V262 = 0x2
0x2f5: V263 = EXP 0x2 0xa0
0x2f6: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x2f8: V266 = CALLER
0x2f9: V267 = 0x1
0x2fb: V268 = 0xa0
0x2fd: V269 = 0x2
0x2ff: V270 = EXP 0x2 0xa0
0x300: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x301: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x302: V273 = EQ V272 V265
0x303: V274 = ISZERO V273
0x304: V275 = ISZERO V274
0x305: V276 = 0x30d
0x308: JUMPI 0x30d V275
---
Entry stack: [V10, 0x261, V47, V33, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x261, V47, V33]

================================

Block 0x309
[0x309:0x30c]
---
Predecessors: [0x2ee]
Successors: []
---
0x309 PUSH2 0x2
0x30c JUMP
---
0x309: V277 = 0x2
0x30c: THROW 
---
Entry stack: [V10, 0x261, V47, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x261, V47, V33]

================================

Block 0x30d
[0x30d:0x377]
---
Predecessors: [0x2ee]
Successors: [0x378, 0x3a0]
---
0x30d JUMPDEST
0x30e PUSH1 0x40
0x310 MLOAD
0x311 PUSH1 0x2
0x313 SLOAD
0x314 PUSH1 0x3
0x316 SLOAD
0x317 PUSH1 0x1
0x319 PUSH1 0xa0
0x31b PUSH1 0x2
0x31d EXP
0x31e SUB
0x31f SWAP2
0x320 DUP3
0x321 AND
0x322 SWAP3
0x323 PUSH1 0x0
0x325 SWAP3
0x326 SWAP2
0x327 SWAP1
0x328 SWAP2
0x329 AND
0x32a BALANCE
0x32b SWAP1
0x32c DUP3
0x32d DUP2
0x32e DUP2
0x32f DUP2
0x330 DUP6
0x331 DUP9
0x332 DUP4
0x333 CALL
0x334 SWAP4
0x335 POP
0x336 POP
0x337 POP
0x338 POP
0x339 POP
0x33a DUP1
0x33b PUSH1 0x4
0x33d PUSH1 0x0
0x33f POP
0x340 SWAP1
0x341 DUP1
0x342 MLOAD
0x343 SWAP1
0x344 PUSH1 0x20
0x346 ADD
0x347 SWAP1
0x348 DUP3
0x349 DUP1
0x34a SLOAD
0x34b PUSH1 0x1
0x34d DUP2
0x34e PUSH1 0x1
0x350 AND
0x351 ISZERO
0x352 PUSH2 0x100
0x355 MUL
0x356 SUB
0x357 AND
0x358 PUSH1 0x2
0x35a SWAP1
0x35b DIV
0x35c SWAP1
0x35d PUSH1 0x0
0x35f MSTORE
0x360 PUSH1 0x20
0x362 PUSH1 0x0
0x364 SHA3
0x365 SWAP1
0x366 PUSH1 0x1f
0x368 ADD
0x369 PUSH1 0x20
0x36b SWAP1
0x36c DIV
0x36d DUP2
0x36e ADD
0x36f SWAP3
0x370 DUP3
0x371 PUSH1 0x1f
0x373 LT
0x374 PUSH2 0x3a0
0x377 JUMPI
---
0x30d: JUMPDEST 
0x30e: V278 = 0x40
0x310: V279 = M[0x40]
0x311: V280 = 0x2
0x313: V281 = S[0x2]
0x314: V282 = 0x3
0x316: V283 = S[0x3]
0x317: V284 = 0x1
0x319: V285 = 0xa0
0x31b: V286 = 0x2
0x31d: V287 = EXP 0x2 0xa0
0x31e: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x321: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x323: V290 = 0x0
0x329: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x32a: V292 = BALANCE V291
0x333: V293 = CALL 0x0 V289 V292 V279 0x0 V279 0x0
0x33b: V294 = 0x4
0x33d: V295 = 0x0
0x342: V296 = M[V33]
0x344: V297 = 0x20
0x346: V298 = ADD 0x20 V33
0x34a: V299 = S[0x4]
0x34b: V300 = 0x1
0x34e: V301 = 0x1
0x350: V302 = AND 0x1 V299
0x351: V303 = ISZERO V302
0x352: V304 = 0x100
0x355: V305 = MUL 0x100 V303
0x356: V306 = SUB V305 0x1
0x357: V307 = AND V306 V299
0x358: V308 = 0x2
0x35b: V309 = DIV V307 0x2
0x35d: V310 = 0x0
0x35f: M[0x0] = 0x4
0x360: V311 = 0x20
0x362: V312 = 0x0
0x364: V313 = SHA3 0x0 0x20
0x366: V314 = 0x1f
0x368: V315 = ADD 0x1f V309
0x369: V316 = 0x20
0x36c: V317 = DIV V315 0x20
0x36e: V318 = ADD V313 V317
0x371: V319 = 0x1f
0x373: V320 = LT 0x1f V296
0x374: V321 = 0x3a0
0x377: JUMPI 0x3a0 V320
---
Entry stack: [V10, 0x261, V47, V33]
Stack pops: 1
Stack additions: [S0, 0x4, V318, V296, V313, V298]
Exit stack: [V10, 0x261, V47, V33, 0x4, V318, V296, V313, V298]

================================

Block 0x378
[0x378:0x383]
---
Predecessors: [0x30d]
Successors: [0x384]
---
0x378 DUP1
0x379 MLOAD
0x37a PUSH1 0xff
0x37c NOT
0x37d AND
0x37e DUP4
0x37f DUP1
0x380 ADD
0x381 OR
0x382 DUP6
0x383 SSTORE
---
0x379: V322 = M[V298]
0x37a: V323 = 0xff
0x37c: V324 = NOT 0xff
0x37d: V325 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V322
0x380: V326 = ADD V296 V296
0x381: V327 = OR V326 V325
0x383: S[0x4] = V327
---
Entry stack: [V10, 0x261, V47, V33, 0x4, V318, V296, V313, V298]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x261, V47, V33, 0x4, V318, V296, V313, V298]

================================

Block 0x384
[0x384:0x38b]
---
Predecessors: [0x378, 0x3a0, 0x3b2]
Successors: [0x38c]
---
0x384 JUMPDEST
0x385 POP
0x386 PUSH2 0x3d0
0x389 SWAP3
0x38a SWAP2
0x38b POP
---
0x384: JUMPDEST 
0x386: V328 = 0x3d0
---
Entry stack: [V10, 0x261, V47, V33, 0x4, V318, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3d0, S3, S1]
Exit stack: [V10, 0x261, V47, V33, 0x4, 0x3d0, V318, S1]

================================

Block 0x38c
[0x38c:0x394]
---
Predecessors: [0x384, 0x395]
Successors: [0x395, 0x3d6]
---
0x38c JUMPDEST
0x38d DUP1
0x38e DUP3
0x38f GT
0x390 ISZERO
0x391 PUSH2 0x3d6
0x394 JUMPI
---
0x38c: JUMPDEST 
0x38f: V329 = GT V318 S0
0x390: V330 = ISZERO V329
0x391: V331 = 0x3d6
0x394: JUMPI 0x3d6 V330
---
Entry stack: [V10, 0x261, V47, V33, 0x4, 0x3d0, V318, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x261, V47, V33, 0x4, 0x3d0, V318, S0]

================================

Block 0x395
[0x395:0x39f]
---
Predecessors: [0x38c]
Successors: [0x38c]
---
0x395 PUSH1 0x0
0x397 DUP2
0x398 SSTORE
0x399 PUSH1 0x1
0x39b ADD
0x39c PUSH2 0x38c
0x39f JUMP
---
0x395: V332 = 0x0
0x398: S[S0] = 0x0
0x399: V333 = 0x1
0x39b: V334 = ADD 0x1 S0
0x39c: V335 = 0x38c
0x39f: JUMP 0x38c
---
Entry stack: [V10, 0x261, V47, V33, 0x4, 0x3d0, V318, S0]
Stack pops: 1
Stack additions: [V334]
Exit stack: [V10, 0x261, V47, V33, 0x4, 0x3d0, V318, V334]

================================

Block 0x3a0
[0x3a0:0x3ae]
---
Predecessors: [0x30d]
Successors: [0x384, 0x3af]
---
0x3a0 JUMPDEST
0x3a1 DUP3
0x3a2 DUP1
0x3a3 ADD
0x3a4 PUSH1 0x1
0x3a6 ADD
0x3a7 DUP6
0x3a8 SSTORE
0x3a9 DUP3
0x3aa ISZERO
0x3ab PUSH2 0x384
0x3ae JUMPI
---
0x3a0: JUMPDEST 
0x3a3: V336 = ADD V296 V296
0x3a4: V337 = 0x1
0x3a6: V338 = ADD 0x1 V336
0x3a8: S[0x4] = V338
0x3aa: V339 = ISZERO V296
0x3ab: V340 = 0x384
0x3ae: JUMPI 0x384 V339
---
Entry stack: [V10, 0x261, V47, V33, 0x4, V318, V296, V313, V298]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x261, V47, V33, 0x4, V318, V296, V313, V298]

================================

Block 0x3af
[0x3af:0x3b1]
---
Predecessors: [0x3a0]
Successors: [0x3b2]
---
0x3af SWAP2
0x3b0 DUP3
0x3b1 ADD
---
0x3b1: V341 = ADD V298 V296
---
Entry stack: [V10, 0x261, V47, V33, 0x4, V318, V296, V313, V298]
Stack pops: 3
Stack additions: [S0, S1, V341]
Exit stack: [V10, 0x261, V47, V33, 0x4, V318, V298, V313, V341]

================================

Block 0x3b2
[0x3b2:0x3ba]
---
Predecessors: [0x3af, 0x3bb]
Successors: [0x384, 0x3bb]
---
0x3b2 JUMPDEST
0x3b3 DUP3
0x3b4 DUP2
0x3b5 GT
0x3b6 ISZERO
0x3b7 PUSH2 0x384
0x3ba JUMPI
---
0x3b2: JUMPDEST 
0x3b5: V342 = GT V341 S2
0x3b6: V343 = ISZERO V342
0x3b7: V344 = 0x384
0x3ba: JUMPI 0x384 V343
---
Entry stack: [V10, 0x261, V47, V33, 0x4, V318, S2, S1, V341]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x261, V47, V33, 0x4, V318, S2, S1, V341]

================================

Block 0x3bb
[0x3bb:0x3cf]
---
Predecessors: [0x3b2]
Successors: [0x3b2]
---
0x3bb DUP3
0x3bc MLOAD
0x3bd DUP3
0x3be PUSH1 0x0
0x3c0 POP
0x3c1 SSTORE
0x3c2 SWAP2
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 SWAP2
0x3c7 SWAP1
0x3c8 PUSH1 0x1
0x3ca ADD
0x3cb SWAP1
0x3cc PUSH2 0x3b2
0x3cf JUMP
---
0x3bc: V345 = M[S2]
0x3be: V346 = 0x0
0x3c1: S[S1] = V345
0x3c3: V347 = 0x20
0x3c5: V348 = ADD 0x20 S2
0x3c8: V349 = 0x1
0x3ca: V350 = ADD 0x1 S1
0x3cc: V351 = 0x3b2
0x3cf: JUMP 0x3b2
---
Entry stack: [V10, 0x261, V47, V33, 0x4, V318, S2, S1, V341]
Stack pops: 3
Stack additions: [V348, V350, S0]
Exit stack: [V10, 0x261, V47, V33, 0x4, V318, V348, V350, V341]

================================

Block 0x3d0
[0x3d0:0x3d5]
---
Predecessors: [0x3d6]
Successors: [0x261]
---
0x3d0 JUMPDEST
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 JUMP
---
0x3d0: JUMPDEST 
0x3d5: JUMP 0x261
---
Entry stack: [V10, 0x261, V47, V33, 0x4, V318]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d6
[0x3d6:0x3d9]
---
Predecessors: [0x38c]
Successors: [0x3d0]
---
0x3d6 JUMPDEST
0x3d7 POP
0x3d8 SWAP1
0x3d9 JUMP
---
0x3d6: JUMPDEST 
0x3d9: JUMP 0x3d0
---
Entry stack: [V10, 0x261, V47, V33, 0x4, 0x3d0, V318, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x261, V47, V33, 0x4, V318]

================================

Block 0x3da
[0x3da:0x3e7]
---
Predecessors: [0x1ec]
Successors: [0x3e8]
---
0x3da JUMPDEST
0x3db DUP3
0x3dc ADD
0x3dd SWAP2
0x3de SWAP1
0x3df PUSH1 0x0
0x3e1 MSTORE
0x3e2 PUSH1 0x20
0x3e4 PUSH1 0x0
0x3e6 SHA3
0x3e7 SWAP1
---
0x3da: JUMPDEST 
0x3dc: V352 = ADD V157 V149
0x3df: V353 = 0x0
0x3e1: M[0x0] = 0x4
0x3e2: V354 = 0x20
0x3e4: V355 = 0x0
0x3e6: V356 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x263, V135, 0x4, V149, V157, 0x4, V149]
Stack pops: 3
Stack additions: [V352, V356, S2]
Exit stack: [V10, 0x263, V135, 0x4, V149, V352, V356, V157]

================================

Block 0x3e8
[0x3e8:0x3fb]
---
Predecessors: [0x3da, 0x3e8]
Successors: [0x3e8, 0x3fc]
---
0x3e8 JUMPDEST
0x3e9 DUP2
0x3ea SLOAD
0x3eb DUP2
0x3ec MSTORE
0x3ed SWAP1
0x3ee PUSH1 0x1
0x3f0 ADD
0x3f1 SWAP1
0x3f2 PUSH1 0x20
0x3f4 ADD
0x3f5 DUP1
0x3f6 DUP4
0x3f7 GT
0x3f8 PUSH2 0x3e8
0x3fb JUMPI
---
0x3e8: JUMPDEST 
0x3ea: V357 = S[S1]
0x3ec: M[S0] = V357
0x3ee: V358 = 0x1
0x3f0: V359 = ADD 0x1 S1
0x3f2: V360 = 0x20
0x3f4: V361 = ADD 0x20 S0
0x3f7: V362 = GT V352 V361
0x3f8: V363 = 0x3e8
0x3fb: JUMPI 0x3e8 V362
---
Entry stack: [V10, 0x263, V135, 0x4, V149, V352, S1, S0]
Stack pops: 3
Stack additions: [S2, V359, V361]
Exit stack: [V10, 0x263, V135, 0x4, V149, V352, V359, V361]

================================

Block 0x3fc
[0x3fc:0x404]
---
Predecessors: [0x3e8]
Successors: [0x405]
---
0x3fc DUP3
0x3fd SWAP1
0x3fe SUB
0x3ff PUSH1 0x1f
0x401 AND
0x402 DUP3
0x403 ADD
0x404 SWAP2
---
0x3fe: V364 = SUB V361 V352
0x3ff: V365 = 0x1f
0x401: V366 = AND 0x1f V364
0x403: V367 = ADD V352 V366
---
Entry stack: [V10, 0x263, V135, 0x4, V149, V352, V359, V361]
Stack pops: 3
Stack additions: [V367, S1, S2]
Exit stack: [V10, 0x263, V135, 0x4, V149, V367, V359, V352]

================================

Block 0x405
[0x405:0x40c]
---
Predecessors: [0x1a9, 0x1f4, 0x3fc]
Successors: [0x263]
---
0x405 JUMPDEST
0x406 POP
0x407 POP
0x408 POP
0x409 POP
0x40a POP
0x40b DUP2
0x40c JUMP
---
0x405: JUMPDEST 
0x40c: JUMP 0x263
---
Entry stack: [V10, 0x263, V135, 0x4, V149, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x263, V135]

================================

Block 0x40d
[0x40d:0x50a]
---
Predecessors: [0x21d]
Successors: [0x50b]
---
0x40d JUMPDEST
0x40e PUSH1 0x40
0x410 DUP1
0x411 MLOAD
0x412 DUP1
0x413 DUP3
0x414 ADD
0x415 DUP3
0x416 MSTORE
0x417 PUSH1 0x3
0x419 DUP2
0x41a MSTORE
0x41b PUSH32 0x55524c0000000000000000000000000000000000000000000000000000000000
0x43c PUSH1 0x20
0x43e DUP3
0x43f DUP2
0x440 ADD
0x441 SWAP2
0x442 SWAP1
0x443 SWAP2
0x444 MSTORE
0x445 DUP3
0x446 MLOAD
0x447 PUSH1 0x80
0x449 DUP2
0x44a ADD
0x44b DUP5
0x44c MSTORE
0x44d PUSH1 0x44
0x44f DUP2
0x450 MSTORE
0x451 PUSH32 0x6a736f6e286170692e6b72616b656e2e636f6d2f302f7075626c69632f546963
0x472 DUP2
0x473 DUP4
0x474 ADD
0x475 MSTORE
0x476 PUSH32 0x6b65723f706169723d455448555344292e726573756c742e584554485a555344
0x497 DUP2
0x498 DUP6
0x499 ADD
0x49a MSTORE
0x49b PUSH32 0x2e632e3000000000000000000000000000000000000000000000000000000000
0x4bc PUSH1 0x60
0x4be DUP3
0x4bf ADD
0x4c0 MSTORE
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 SLOAD
0x4c5 DUP6
0x4c6 MLOAD
0x4c7 PUSH1 0xe0
0x4c9 PUSH1 0x2
0x4cb EXP
0x4cc PUSH4 0x38cc4831
0x4d1 MUL
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 SWAP6
0x4d5 MLOAD
0x4d6 PUSH2 0x619
0x4d9 SWAP7
0x4da SWAP4
0x4db SWAP5
0x4dc SWAP3
0x4dd SWAP4
0x4de DUP5
0x4df SWAP4
0x4e0 PUSH1 0x1
0x4e2 PUSH1 0xa0
0x4e4 PUSH1 0x2
0x4e6 EXP
0x4e7 SUB
0x4e8 SWAP4
0x4e9 SWAP1
0x4ea SWAP4
0x4eb AND
0x4ec SWAP3
0x4ed PUSH4 0x38cc4831
0x4f2 SWAP3
0x4f3 PUSH1 0x4
0x4f5 DUP4
0x4f6 DUP2
0x4f7 ADD
0x4f8 SWAP4
0x4f9 DUP3
0x4fa SWAP1
0x4fb SUB
0x4fc ADD
0x4fd DUP2
0x4fe DUP8
0x4ff DUP8
0x500 PUSH2 0x61da
0x503 GAS
0x504 SUB
0x505 CALL
0x506 ISZERO
0x507 PUSH2 0x2
0x50a JUMPI
---
0x40d: JUMPDEST 
0x40e: V368 = 0x40
0x411: V369 = M[0x40]
0x414: V370 = ADD 0x40 V369
0x416: M[0x40] = V370
0x417: V371 = 0x3
0x41a: M[V369] = 0x3
0x41b: V372 = 0x55524c0000000000000000000000000000000000000000000000000000000000
0x43c: V373 = 0x20
0x440: V374 = ADD 0x20 V369
0x444: M[V374] = 0x55524c0000000000000000000000000000000000000000000000000000000000
0x446: V375 = M[0x40]
0x447: V376 = 0x80
0x44a: V377 = ADD V375 0x80
0x44c: M[0x40] = V377
0x44d: V378 = 0x44
0x450: M[V375] = 0x44
0x451: V379 = 0x6a736f6e286170692e6b72616b656e2e636f6d2f302f7075626c69632f546963
0x474: V380 = ADD 0x20 V375
0x475: M[V380] = 0x6a736f6e286170692e6b72616b656e2e636f6d2f302f7075626c69632f546963
0x476: V381 = 0x6b65723f706169723d455448555344292e726573756c742e584554485a555344
0x499: V382 = ADD 0x40 V375
0x49a: M[V382] = 0x6b65723f706169723d455448555344292e726573756c742e584554485a555344
0x49b: V383 = 0x2e632e3000000000000000000000000000000000000000000000000000000000
0x4bc: V384 = 0x60
0x4bf: V385 = ADD V375 0x60
0x4c0: M[V385] = 0x2e632e3000000000000000000000000000000000000000000000000000000000
0x4c1: V386 = 0x0
0x4c4: V387 = S[0x0]
0x4c6: V388 = M[0x40]
0x4c7: V389 = 0xe0
0x4c9: V390 = 0x2
0x4cb: V391 = EXP 0x2 0xe0
0x4cc: V392 = 0x38cc4831
0x4d1: V393 = MUL 0x38cc4831 0x100000000000000000000000000000000000000000000000000000000
0x4d3: M[V388] = 0x38cc483100000000000000000000000000000000000000000000000000000000
0x4d5: V394 = M[0x40]
0x4d6: V395 = 0x619
0x4e0: V396 = 0x1
0x4e2: V397 = 0xa0
0x4e4: V398 = 0x2
0x4e6: V399 = EXP 0x2 0xa0
0x4e7: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4eb: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x4ed: V402 = 0x38cc4831
0x4f3: V403 = 0x4
0x4f7: V404 = ADD 0x4 V388
0x4fb: V405 = SUB V388 V394
0x4fc: V406 = ADD V405 0x4
0x500: V407 = 0x61da
0x503: V408 = GAS
0x504: V409 = SUB V408 0x61da
0x505: V410 = CALL V409 V401 0x0 V394 V406 V394 0x20
0x506: V411 = ISZERO V410
0x507: V412 = 0x2
0x50a: THROWI V411
---
Entry stack: [V10, S1, {0x24d, 0x261}]
Stack pops: 0
Stack additions: [0x619, V369, V375, 0x0, 0x0, V401, 0x38cc4831, V404]
Exit stack: [V10, S1, {0x24d, 0x261}, 0x619, V369, V375, 0x0, 0x0, V401, 0x38cc4831, V404]

================================

Block 0x50b
[0x50b:0x5b7]
---
Predecessors: [0x40d]
Successors: [0x5b8, 0x5d1]
---
0x50b POP
0x50c POP
0x50d PUSH1 0x40
0x50f MLOAD
0x510 DUP1
0x511 MLOAD
0x512 PUSH1 0x1
0x514 DUP1
0x515 SLOAD
0x516 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52b NOT
0x52c AND
0x52d SWAP1
0x52e SWAP2
0x52f OR
0x530 SWAP1
0x531 DUP2
0x532 SWAP1
0x533 SSTORE
0x534 PUSH32 0x524f388900000000000000000000000000000000000000000000000000000000
0x555 DUP3
0x556 MSTORE
0x557 PUSH1 0x20
0x559 PUSH1 0x4
0x55b DUP4
0x55c DUP2
0x55d ADD
0x55e DUP3
0x55f DUP2
0x560 MSTORE
0x561 DUP10
0x562 MLOAD
0x563 PUSH1 0x24
0x565 DUP7
0x566 ADD
0x567 MSTORE
0x568 DUP10
0x569 MLOAD
0x56a PUSH1 0x1
0x56c PUSH1 0xa0
0x56e PUSH1 0x2
0x570 EXP
0x571 SUB
0x572 SWAP5
0x573 SWAP1
0x574 SWAP5
0x575 AND
0x576 SWAP6
0x577 POP
0x578 PUSH4 0x524f3889
0x57d SWAP5
0x57e DUP11
0x57f SWAP5
0x580 SWAP2
0x581 SWAP4
0x582 DUP5
0x583 SWAP4
0x584 PUSH1 0x44
0x586 SWAP3
0x587 SWAP1
0x588 SWAP3
0x589 ADD
0x58a SWAP3
0x58b DUP2
0x58c DUP8
0x58d ADD
0x58e SWAP3
0x58f SWAP1
0x590 SWAP2
0x591 DUP3
0x592 SWAP2
0x593 DUP6
0x594 SWAP2
0x595 DUP4
0x596 SWAP2
0x597 DUP7
0x598 SWAP2
0x599 DUP15
0x59a SWAP2
0x59b SWAP1
0x59c PUSH1 0x1f
0x59e DUP6
0x59f ADD
0x5a0 DIV
0x5a1 PUSH1 0xf
0x5a3 MUL
0x5a4 PUSH1 0x3
0x5a6 ADD
0x5a7 CALL
0x5a8 POP
0x5a9 SWAP1
0x5aa POP
0x5ab SWAP1
0x5ac DUP2
0x5ad ADD
0x5ae SWAP1
0x5af PUSH1 0x1f
0x5b1 AND
0x5b2 DUP1
0x5b3 ISZERO
0x5b4 PUSH2 0x5d1
0x5b7 JUMPI
---
0x50d: V413 = 0x40
0x50f: V414 = M[0x40]
0x511: V415 = M[V414]
0x512: V416 = 0x1
0x515: V417 = S[0x1]
0x516: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x52b: V419 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x52c: V420 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V417
0x52f: V421 = OR V415 V420
0x533: S[0x1] = V421
0x534: V422 = 0x524f388900000000000000000000000000000000000000000000000000000000
0x556: M[V414] = 0x524f388900000000000000000000000000000000000000000000000000000000
0x557: V423 = 0x20
0x559: V424 = 0x4
0x55d: V425 = ADD 0x4 V414
0x560: M[V425] = 0x20
0x562: V426 = M[V369]
0x563: V427 = 0x24
0x566: V428 = ADD V414 0x24
0x567: M[V428] = V426
0x569: V429 = M[V369]
0x56a: V430 = 0x1
0x56c: V431 = 0xa0
0x56e: V432 = 0x2
0x570: V433 = EXP 0x2 0xa0
0x571: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x575: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x578: V436 = 0x524f3889
0x584: V437 = 0x44
0x589: V438 = ADD 0x44 V414
0x58d: V439 = ADD V369 0x20
0x59c: V440 = 0x1f
0x59f: V441 = ADD V429 0x1f
0x5a0: V442 = DIV V441 0x20
0x5a1: V443 = 0xf
0x5a3: V444 = MUL 0xf V442
0x5a4: V445 = 0x3
0x5a6: V446 = ADD 0x3 V444
0x5a7: V447 = CALL V446 0x4 0x0 V439 V429 V438 V429
0x5ad: V448 = ADD V429 V438
0x5af: V449 = 0x1f
0x5b1: V450 = AND 0x1f V429
0x5b3: V451 = ISZERO V450
0x5b4: V452 = 0x5d1
0x5b7: JUMPI 0x5d1 V451
---
Entry stack: [V10, S9, {0x24d, 0x261}, 0x619, V369, V375, 0x0, 0x0, V401, 0x38cc4831, V404]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V435, 0x524f3889, S6, V425, V425, V448, V450]
Exit stack: [V10, S9, {0x24d, 0x261}, 0x619, V369, V375, 0x0, 0x0, V435, 0x524f3889, V369, V425, V425, V448, V450]

================================

Block 0x5b8
[0x5b8:0x5d0]
---
Predecessors: [0x50b]
Successors: [0x5d1]
---
0x5b8 DUP1
0x5b9 DUP3
0x5ba SUB
0x5bb DUP1
0x5bc MLOAD
0x5bd PUSH1 0x1
0x5bf DUP4
0x5c0 PUSH1 0x20
0x5c2 SUB
0x5c3 PUSH2 0x100
0x5c6 EXP
0x5c7 SUB
0x5c8 NOT
0x5c9 AND
0x5ca DUP2
0x5cb MSTORE
0x5cc PUSH1 0x20
0x5ce ADD
0x5cf SWAP2
0x5d0 POP
---
0x5ba: V453 = SUB V448 V450
0x5bc: V454 = M[V453]
0x5bd: V455 = 0x1
0x5c0: V456 = 0x20
0x5c2: V457 = SUB 0x20 V450
0x5c3: V458 = 0x100
0x5c6: V459 = EXP 0x100 V457
0x5c7: V460 = SUB V459 0x1
0x5c8: V461 = NOT V460
0x5c9: V462 = AND V461 V454
0x5cb: M[V453] = V462
0x5cc: V463 = 0x20
0x5ce: V464 = ADD 0x20 V453
---
Entry stack: [V10, S13, {0x24d, 0x261}, 0x619, S10, S9, 0x0, 0x0, V435, 0x524f3889, S4, V425, V425, V448, V450]
Stack pops: 2
Stack additions: [V464, S0]
Exit stack: [V10, S13, {0x24d, 0x261}, 0x619, S10, S9, 0x0, 0x0, V435, 0x524f3889, S4, V425, V425, V464, V450]

================================

Block 0x5d1
[0x5d1:0x5ed]
---
Predecessors: [0x50b, 0x5b8]
Successors: [0x5ee]
---
0x5d1 JUMPDEST
0x5d2 POP
0x5d3 SWAP3
0x5d4 POP
0x5d5 POP
0x5d6 POP
0x5d7 PUSH1 0x20
0x5d9 PUSH1 0x40
0x5db MLOAD
0x5dc DUP1
0x5dd DUP4
0x5de SUB
0x5df DUP2
0x5e0 PUSH1 0x0
0x5e2 DUP8
0x5e3 PUSH2 0x61da
0x5e6 GAS
0x5e7 SUB
0x5e8 CALL
0x5e9 ISZERO
0x5ea PUSH2 0x2
0x5ed JUMPI
---
0x5d1: JUMPDEST 
0x5d7: V465 = 0x20
0x5d9: V466 = 0x40
0x5db: V467 = M[0x40]
0x5de: V468 = SUB S1 V467
0x5e0: V469 = 0x0
0x5e3: V470 = 0x61da
0x5e6: V471 = GAS
0x5e7: V472 = SUB V471 0x61da
0x5e8: V473 = CALL V472 V435 0x0 V467 V468 V467 0x20
0x5e9: V474 = ISZERO V473
0x5ea: V475 = 0x2
0x5ed: THROWI V474
---
Entry stack: [V10, S13, {0x24d, 0x261}, 0x619, S10, S9, 0x0, 0x0, V435, 0x524f3889, S4, V425, V425, S1, V450]
Stack pops: 7
Stack additions: [S6, S5, S1]
Exit stack: [V10, S13, {0x24d, 0x261}, 0x619, S10, S9, 0x0, 0x0, V435, 0x524f3889, S1]

================================

Block 0x5ee
[0x5ee:0x60d]
---
Predecessors: [0x5d1]
Successors: [0x60e, 0x61c]
---
0x5ee POP
0x5ef POP
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 MLOAD
0x5f4 SWAP2
0x5f5 POP
0x5f6 POP
0x5f7 PUSH8 0xde0b6b3a7640000
0x600 PUSH3 0x30d40
0x604 GASPRICE
0x605 MUL
0x606 ADD
0x607 DUP2
0x608 GT
0x609 ISZERO
0x60a PUSH2 0x61c
0x60d JUMPI
---
0x5f0: V476 = 0x40
0x5f2: V477 = M[0x40]
0x5f3: V478 = M[V477]
0x5f7: V479 = 0xde0b6b3a7640000
0x600: V480 = 0x30d40
0x604: V481 = GASPRICE
0x605: V482 = MUL V481 0x30d40
0x606: V483 = ADD V482 0xde0b6b3a7640000
0x608: V484 = GT V478 V483
0x609: V485 = ISZERO V484
0x60a: V486 = 0x61c
0x60d: JUMPI 0x61c V485
---
Entry stack: [V10, S9, {0x24d, 0x261}, 0x619, S6, S5, 0x0, 0x0, S2, 0x524f3889, S0]
Stack pops: 4
Stack additions: [V478]
Exit stack: [V10, S9, {0x24d, 0x261}, 0x619, S6, S5, 0x0, V478]

================================

Block 0x60e
[0x60e:0x611]
---
Predecessors: [0x5ee]
Successors: [0x612]
---
0x60e PUSH1 0x0
0x610 SWAP2
0x611 POP
---
0x60e: V487 = 0x0
---
Entry stack: [V10, S6, {0x24d, 0x261}, 0x619, S3, S2, 0x0, V478]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, S6, {0x24d, 0x261}, 0x619, S3, S2, 0x0, V478]

================================

Block 0x612
[0x612:0x618]
---
Predecessors: [0x60e, 0x733]
Successors: [0x619]
---
0x612 JUMPDEST
0x613 POP
0x614 SWAP3
0x615 SWAP2
0x616 POP
0x617 POP
0x618 JUMP
---
0x612: JUMPDEST 
0x618: JUMP 0x619
---
Entry stack: [V10, S6, {0x24d, 0x261}, 0x619, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, S6, {0x24d, 0x261}, S1]

================================

Block 0x619
[0x619:0x61b]
---
Predecessors: [0x612]
Successors: [0x24d, 0x261]
---
0x619 JUMPDEST
0x61a POP
0x61b JUMP
---
0x619: JUMPDEST 
0x61b: JUMP {0x24d, 0x261}
---
Entry stack: [V10, S2, {0x24d, 0x261}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S2]

================================

Block 0x61c
[0x61c:0x6a1]
---
Predecessors: [0x5ee]
Successors: [0x6a2, 0x6bb]
---
0x61c JUMPDEST
0x61d PUSH1 0x1
0x61f PUSH1 0x0
0x621 SWAP1
0x622 SLOAD
0x623 SWAP1
0x624 PUSH2 0x100
0x627 EXP
0x628 SWAP1
0x629 DIV
0x62a PUSH1 0x1
0x62c PUSH1 0xa0
0x62e PUSH1 0x2
0x630 EXP
0x631 SUB
0x632 AND
0x633 PUSH1 0x1
0x635 PUSH1 0xa0
0x637 PUSH1 0x2
0x639 EXP
0x63a SUB
0x63b AND
0x63c PUSH4 0xadf59f99
0x641 DUP3
0x642 PUSH1 0x0
0x644 DUP8
0x645 DUP8
0x646 PUSH1 0x40
0x648 MLOAD
0x649 DUP6
0x64a PUSH1 0xe0
0x64c PUSH1 0x2
0x64e EXP
0x64f MUL
0x650 DUP2
0x651 MSTORE
0x652 PUSH1 0x4
0x654 ADD
0x655 DUP1
0x656 DUP5
0x657 DUP2
0x658 MSTORE
0x659 PUSH1 0x20
0x65b ADD
0x65c DUP1
0x65d PUSH1 0x20
0x65f ADD
0x660 DUP1
0x661 PUSH1 0x20
0x663 ADD
0x664 DUP4
0x665 DUP2
0x666 SUB
0x667 DUP4
0x668 MSTORE
0x669 DUP6
0x66a DUP2
0x66b DUP2
0x66c MLOAD
0x66d DUP2
0x66e MSTORE
0x66f PUSH1 0x20
0x671 ADD
0x672 SWAP2
0x673 POP
0x674 DUP1
0x675 MLOAD
0x676 SWAP1
0x677 PUSH1 0x20
0x679 ADD
0x67a SWAP1
0x67b DUP1
0x67c DUP4
0x67d DUP4
0x67e DUP3
0x67f SWAP1
0x680 PUSH1 0x0
0x682 PUSH1 0x4
0x684 PUSH1 0x20
0x686 DUP5
0x687 PUSH1 0x1f
0x689 ADD
0x68a DIV
0x68b PUSH1 0xf
0x68d MUL
0x68e PUSH1 0x3
0x690 ADD
0x691 CALL
0x692 POP
0x693 SWAP1
0x694 POP
0x695 SWAP1
0x696 DUP2
0x697 ADD
0x698 SWAP1
0x699 PUSH1 0x1f
0x69b AND
0x69c DUP1
0x69d ISZERO
0x69e PUSH2 0x6bb
0x6a1 JUMPI
---
0x61c: JUMPDEST 
0x61d: V488 = 0x1
0x61f: V489 = 0x0
0x622: V490 = S[0x1]
0x624: V491 = 0x100
0x627: V492 = EXP 0x100 0x0
0x629: V493 = DIV V490 0x1
0x62a: V494 = 0x1
0x62c: V495 = 0xa0
0x62e: V496 = 0x2
0x630: V497 = EXP 0x2 0xa0
0x631: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x632: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x633: V500 = 0x1
0x635: V501 = 0xa0
0x637: V502 = 0x2
0x639: V503 = EXP 0x2 0xa0
0x63a: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63b: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x63c: V506 = 0xadf59f99
0x642: V507 = 0x0
0x646: V508 = 0x40
0x648: V509 = M[0x40]
0x64a: V510 = 0xe0
0x64c: V511 = 0x2
0x64e: V512 = EXP 0x2 0xe0
0x64f: V513 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xadf59f99
0x651: M[V509] = 0xadf59f9900000000000000000000000000000000000000000000000000000000
0x652: V514 = 0x4
0x654: V515 = ADD 0x4 V509
0x658: M[V515] = 0x0
0x659: V516 = 0x20
0x65b: V517 = ADD 0x20 V515
0x65d: V518 = 0x20
0x65f: V519 = ADD 0x20 V517
0x661: V520 = 0x20
0x663: V521 = ADD 0x20 V519
0x666: V522 = SUB V521 V515
0x668: M[V517] = V522
0x66c: V523 = M[S3]
0x66e: M[V521] = V523
0x66f: V524 = 0x20
0x671: V525 = ADD 0x20 V521
0x675: V526 = M[S3]
0x677: V527 = 0x20
0x679: V528 = ADD 0x20 S3
0x680: V529 = 0x0
0x682: V530 = 0x4
0x684: V531 = 0x20
0x687: V532 = 0x1f
0x689: V533 = ADD 0x1f V526
0x68a: V534 = DIV V533 0x20
0x68b: V535 = 0xf
0x68d: V536 = MUL 0xf V534
0x68e: V537 = 0x3
0x690: V538 = ADD 0x3 V536
0x691: V539 = CALL V538 0x4 0x0 V528 V526 V525 V526
0x697: V540 = ADD V526 V525
0x699: V541 = 0x1f
0x69b: V542 = AND 0x1f V526
0x69d: V543 = ISZERO V542
0x69e: V544 = 0x6bb
0x6a1: JUMPI 0x6bb V543
---
Entry stack: [V10, S6, {0x24d, 0x261}, 0x619, S3, S2, 0x0, V478]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V505, 0xadf59f99, S0, 0x0, S3, S2, V515, V517, V519, V540, V542]
Exit stack: [V10, S6, {0x24d, 0x261}, 0x619, S3, S2, 0x0, V478, V505, 0xadf59f99, V478, 0x0, S3, S2, V515, V517, V519, V540, V542]

================================

Block 0x6a2
[0x6a2:0x6ba]
---
Predecessors: [0x61c]
Successors: [0x6bb]
---
0x6a2 DUP1
0x6a3 DUP3
0x6a4 SUB
0x6a5 DUP1
0x6a6 MLOAD
0x6a7 PUSH1 0x1
0x6a9 DUP4
0x6aa PUSH1 0x20
0x6ac SUB
0x6ad PUSH2 0x100
0x6b0 EXP
0x6b1 SUB
0x6b2 NOT
0x6b3 AND
0x6b4 DUP2
0x6b5 MSTORE
0x6b6 PUSH1 0x20
0x6b8 ADD
0x6b9 SWAP2
0x6ba POP
---
0x6a4: V545 = SUB V540 V542
0x6a6: V546 = M[V545]
0x6a7: V547 = 0x1
0x6aa: V548 = 0x20
0x6ac: V549 = SUB 0x20 V542
0x6ad: V550 = 0x100
0x6b0: V551 = EXP 0x100 V549
0x6b1: V552 = SUB V551 0x1
0x6b2: V553 = NOT V552
0x6b3: V554 = AND V553 V546
0x6b5: M[V545] = V554
0x6b6: V555 = 0x20
0x6b8: V556 = ADD 0x20 V545
---
Entry stack: [V10, S17, {0x24d, 0x261}, 0x619, S14, S13, 0x0, V478, V505, 0xadf59f99, V478, 0x0, S6, S5, V515, V517, V519, V540, V542]
Stack pops: 2
Stack additions: [V556, S0]
Exit stack: [V10, S17, {0x24d, 0x261}, 0x619, S14, S13, 0x0, V478, V505, 0xadf59f99, V478, 0x0, S6, S5, V515, V517, V519, V556, V542]

================================

Block 0x6bb
[0x6bb:0x6fa]
---
Predecessors: [0x61c, 0x6a2]
Successors: [0x6fb, 0x714]
---
0x6bb JUMPDEST
0x6bc POP
0x6bd DUP4
0x6be DUP2
0x6bf SUB
0x6c0 DUP3
0x6c1 MSTORE
0x6c2 DUP5
0x6c3 DUP2
0x6c4 DUP2
0x6c5 MLOAD
0x6c6 DUP2
0x6c7 MSTORE
0x6c8 PUSH1 0x20
0x6ca ADD
0x6cb SWAP2
0x6cc POP
0x6cd DUP1
0x6ce MLOAD
0x6cf SWAP1
0x6d0 PUSH1 0x20
0x6d2 ADD
0x6d3 SWAP1
0x6d4 DUP1
0x6d5 DUP4
0x6d6 DUP4
0x6d7 DUP3
0x6d8 SWAP1
0x6d9 PUSH1 0x0
0x6db PUSH1 0x4
0x6dd PUSH1 0x20
0x6df DUP5
0x6e0 PUSH1 0x1f
0x6e2 ADD
0x6e3 DIV
0x6e4 PUSH1 0xf
0x6e6 MUL
0x6e7 PUSH1 0x3
0x6e9 ADD
0x6ea CALL
0x6eb POP
0x6ec SWAP1
0x6ed POP
0x6ee SWAP1
0x6ef DUP2
0x6f0 ADD
0x6f1 SWAP1
0x6f2 PUSH1 0x1f
0x6f4 AND
0x6f5 DUP1
0x6f6 ISZERO
0x6f7 PUSH2 0x714
0x6fa JUMPI
---
0x6bb: JUMPDEST 
0x6bf: V557 = SUB S1 V515
0x6c1: M[V519] = V557
0x6c5: V558 = M[S5]
0x6c7: M[S1] = V558
0x6c8: V559 = 0x20
0x6ca: V560 = ADD 0x20 S1
0x6ce: V561 = M[S5]
0x6d0: V562 = 0x20
0x6d2: V563 = ADD 0x20 S5
0x6d9: V564 = 0x0
0x6db: V565 = 0x4
0x6dd: V566 = 0x20
0x6e0: V567 = 0x1f
0x6e2: V568 = ADD 0x1f V561
0x6e3: V569 = DIV V568 0x20
0x6e4: V570 = 0xf
0x6e6: V571 = MUL 0xf V569
0x6e7: V572 = 0x3
0x6e9: V573 = ADD 0x3 V571
0x6ea: V574 = CALL V573 0x4 0x0 V563 V561 V560 V561
0x6f0: V575 = ADD V561 V560
0x6f2: V576 = 0x1f
0x6f4: V577 = AND 0x1f V561
0x6f6: V578 = ISZERO V577
0x6f7: V579 = 0x714
0x6fa: JUMPI 0x714 V578
---
Entry stack: [V10, S17, {0x24d, 0x261}, 0x619, S14, S13, 0x0, V478, V505, 0xadf59f99, V478, 0x0, S6, S5, V515, V517, V519, S1, V542]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V575, V577]
Exit stack: [V10, S17, {0x24d, 0x261}, 0x619, S14, S13, 0x0, V478, V505, 0xadf59f99, V478, 0x0, S6, S5, V515, V517, V519, V575, V577]

================================

Block 0x6fb
[0x6fb:0x713]
---
Predecessors: [0x6bb]
Successors: [0x714]
---
0x6fb DUP1
0x6fc DUP3
0x6fd SUB
0x6fe DUP1
0x6ff MLOAD
0x700 PUSH1 0x1
0x702 DUP4
0x703 PUSH1 0x20
0x705 SUB
0x706 PUSH2 0x100
0x709 EXP
0x70a SUB
0x70b NOT
0x70c AND
0x70d DUP2
0x70e MSTORE
0x70f PUSH1 0x20
0x711 ADD
0x712 SWAP2
0x713 POP
---
0x6fd: V580 = SUB V575 V577
0x6ff: V581 = M[V580]
0x700: V582 = 0x1
0x703: V583 = 0x20
0x705: V584 = SUB 0x20 V577
0x706: V585 = 0x100
0x709: V586 = EXP 0x100 V584
0x70a: V587 = SUB V586 0x1
0x70b: V588 = NOT V587
0x70c: V589 = AND V588 V581
0x70e: M[V580] = V589
0x70f: V590 = 0x20
0x711: V591 = ADD 0x20 V580
---
Entry stack: [V10, S17, {0x24d, 0x261}, 0x619, S14, S13, 0x0, S11, V505, 0xadf59f99, S8, 0x0, S6, S5, V515, V517, V519, V575, V577]
Stack pops: 2
Stack additions: [V591, S0]
Exit stack: [V10, S17, {0x24d, 0x261}, 0x619, S14, S13, 0x0, S11, V505, 0xadf59f99, S8, 0x0, S6, S5, V515, V517, V519, V591, V577]

================================

Block 0x714
[0x714:0x732]
---
Predecessors: [0x6bb, 0x6fb]
Successors: [0x733]
---
0x714 JUMPDEST
0x715 POP
0x716 SWAP6
0x717 POP
0x718 POP
0x719 POP
0x71a POP
0x71b POP
0x71c POP
0x71d PUSH1 0x20
0x71f PUSH1 0x40
0x721 MLOAD
0x722 DUP1
0x723 DUP4
0x724 SUB
0x725 DUP2
0x726 DUP6
0x727 DUP9
0x728 PUSH2 0x8502
0x72b GAS
0x72c SUB
0x72d CALL
0x72e ISZERO
0x72f PUSH2 0x2
0x732 JUMPI
---
0x714: JUMPDEST 
0x71d: V592 = 0x20
0x71f: V593 = 0x40
0x721: V594 = M[0x40]
0x724: V595 = SUB S1 V594
0x728: V596 = 0x8502
0x72b: V597 = GAS
0x72c: V598 = SUB V597 0x8502
0x72d: V599 = CALL V598 V505 S8 V594 V595 V594 0x20
0x72e: V600 = ISZERO V599
0x72f: V601 = 0x2
0x732: THROWI V600
---
Entry stack: [V10, S17, {0x24d, 0x261}, 0x619, S14, S13, 0x0, S11, V505, 0xadf59f99, S8, 0x0, S6, S5, V515, V517, V519, S1, V577]
Stack pops: 11
Stack additions: [S10, S9, S8, S1]
Exit stack: [V10, S17, {0x24d, 0x261}, 0x619, S14, S13, 0x0, S11, V505, 0xadf59f99, S8, S1]

================================

Block 0x733
[0x733:0x741]
---
Predecessors: [0x714]
Successors: [0x612]
---
0x733 POP
0x734 POP
0x735 PUSH1 0x40
0x737 MLOAD
0x738 MLOAD
0x739 SWAP4
0x73a POP
0x73b PUSH2 0x612
0x73e SWAP2
0x73f POP
0x740 POP
0x741 JUMP
---
0x735: V602 = 0x40
0x737: V603 = M[0x40]
0x738: V604 = M[V603]
0x73b: V605 = 0x612
0x741: JUMP 0x612
---
Entry stack: [V10, S10, {0x24d, 0x261}, 0x619, S7, S6, 0x0, S4, V505, 0xadf59f99, S1, S0]
Stack pops: 6
Stack additions: [V604, S4]
Exit stack: [V10, S10, {0x24d, 0x261}, 0x619, S7, S6, V604, S4]

================================

Function 0:
Public function signature: 0x27dc297e
Entry block: 0x61
Exit block: 0x261
Body: 0x61, 0xf4, 0x174, 0x261, 0x2ee, 0x309, 0x30d, 0x378, 0x384, 0x38c, 0x395, 0x3a0, 0x3af, 0x3b2, 0x3bb, 0x3d0, 0x3d6

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x17f
Exit block: 0x261
Body: 0x17f, 0x19c, 0x24d, 0x261

Function 2:
Public function signature: 0x61150aae
Entry block: 0x1a9
Exit block: 0x2c3
Body: 0x1a9, 0x1ec, 0x1f4, 0x263, 0x2aa, 0x2c3, 0x3da, 0x3e8, 0x3fc, 0x405

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x207
Exit block: 0x2d1
Body: 0x207, 0x2d1

Function 4:
Public function signature: 0xe97dcb62
Entry block: 0x219
Exit block: 0x261
Body: 0x219, 0x21d, 0x22d, 0x24d, 0x261, 0x40d, 0x50b, 0x5b8, 0x5d1, 0x5ee, 0x60e, 0x612, 0x619, 0x61c, 0x6a2, 0x6bb, 0x6fb, 0x714, 0x733

Function 5:
Public function signature: 0xf6b4dfb4
Entry block: 0x24f
Exit block: 0x2d1
Body: 0x24f, 0x2d1

Function 6:
Public fallback function
Entry block: 0x56
Exit block: 0x261
Body: 0x56, 0x21d, 0x22d, 0x24d, 0x261, 0x40d, 0x50b, 0x5b8, 0x5d1, 0x5ee, 0x60e, 0x612, 0x619, 0x61c, 0x6a2, 0x6bb, 0x6fb, 0x714, 0x733

