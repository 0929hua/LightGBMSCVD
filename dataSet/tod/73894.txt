Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1fffe0ab
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1fffe0ab
0x3c: V13 = EQ 0x1fffe0ab V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc0]
---
0x41 DUP1
0x42 PUSH4 0x2e1a7d4d
0x47 EQ
0x48 PUSH2 0xc0
0x4b JUMPI
---
0x42: V15 = 0x2e1a7d4d
0x47: V16 = EQ 0x2e1a7d4d V11
0x48: V17 = 0xc0
0x4b: JUMPI 0xc0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xed]
---
0x4c DUP1
0x4d PUSH4 0x41c0e1b5
0x52 EQ
0x53 PUSH2 0xed
0x56 JUMPI
---
0x4d: V18 = 0x41c0e1b5
0x52: V19 = EQ 0x41c0e1b5 V11
0x53: V20 = 0xed
0x56: JUMPI 0xed V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x104]
---
0x57 DUP1
0x58 PUSH4 0x56d21be1
0x5d EQ
0x5e PUSH2 0x104
0x61 JUMPI
---
0x58: V21 = 0x56d21be1
0x5d: V22 = EQ 0x56d21be1 V11
0x5e: V23 = 0x104
0x61: JUMPI 0x104 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x13a]
---
0x62 DUP1
0x63 PUSH4 0x8950de60
0x68 EQ
0x69 PUSH2 0x13a
0x6c JUMPI
---
0x63: V24 = 0x8950de60
0x68: V25 = EQ 0x8950de60 V11
0x69: V26 = 0x13a
0x6c: JUMPI 0x13a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x188]
---
0x6d DUP1
0x6e PUSH4 0xd0e30db0
0x73 EQ
0x74 PUSH2 0x188
0x77 JUMPI
---
0x6e: V27 = 0xd0e30db0
0x73: V28 = EQ 0xd0e30db0 V11
0x74: V29 = 0x188
0x77: JUMPI 0x188 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x84]
---
Predecessors: [0xd]
Successors: [0x85, 0x89]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f DUP1
0x80 ISZERO
0x81 PUSH2 0x89
0x84 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x80: V32 = ISZERO V31
0x81: V33 = 0x89
0x84: JUMPI 0x89 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x85
[0x85:0x88]
---
Predecessors: [0x7d]
Successors: []
---
0x85 PUSH1 0x0
0x87 DUP1
0x88 REVERT
---
0x85: V34 = 0x0
0x88: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x89
[0x89:0xbd]
---
Predecessors: [0x7d]
Successors: [0x192]
---
0x89 JUMPDEST
0x8a POP
0x8b PUSH2 0xbe
0x8e PUSH1 0x4
0x90 DUP1
0x91 CALLDATASIZE
0x92 SUB
0x93 DUP2
0x94 ADD
0x95 SWAP1
0x96 DUP1
0x97 DUP1
0x98 CALLDATALOAD
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf SWAP1
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP1
0xb4 SWAP3
0xb5 SWAP2
0xb6 SWAP1
0xb7 POP
0xb8 POP
0xb9 POP
0xba PUSH2 0x192
0xbd JUMP
---
0x89: JUMPDEST 
0x8b: V35 = 0xbe
0x8e: V36 = 0x4
0x91: V37 = CALLDATASIZE
0x92: V38 = SUB V37 0x4
0x94: V39 = ADD 0x4 V38
0x98: V40 = CALLDATALOAD 0x4
0x99: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xb0: V43 = 0x20
0xb2: V44 = ADD 0x20 0x4
0xba: V45 = 0x192
0xbd: JUMP 0x192
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0xbe, V42]
Exit stack: [V11, 0xbe, V42]

================================

Block 0xbe
[0xbe:0xbf]
---
Predecessors: []
Successors: []
---
0xbe JUMPDEST
0xbf STOP
---
0xbe: JUMPDEST 
0xbf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc0
[0xc0:0xc7]
---
Predecessors: [0x41]
Successors: [0xc8, 0xcc]
---
0xc0 JUMPDEST
0xc1 CALLVALUE
0xc2 DUP1
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0xc0: JUMPDEST 
0xc1: V46 = CALLVALUE
0xc3: V47 = ISZERO V46
0xc4: V48 = 0xcc
0xc7: JUMPI 0xcc V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V46]
Exit stack: [V11, V46]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0xc0]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V49 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V11, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46]

================================

Block 0xcc
[0xcc:0xea]
---
Predecessors: [0xc0]
Successors: [0x1f5]
---
0xcc JUMPDEST
0xcd POP
0xce PUSH2 0xeb
0xd1 PUSH1 0x4
0xd3 DUP1
0xd4 CALLDATASIZE
0xd5 SUB
0xd6 DUP2
0xd7 ADD
0xd8 SWAP1
0xd9 DUP1
0xda DUP1
0xdb CALLDATALOAD
0xdc SWAP1
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 SWAP3
0xe2 SWAP2
0xe3 SWAP1
0xe4 POP
0xe5 POP
0xe6 POP
0xe7 PUSH2 0x1f5
0xea JUMP
---
0xcc: JUMPDEST 
0xce: V50 = 0xeb
0xd1: V51 = 0x4
0xd4: V52 = CALLDATASIZE
0xd5: V53 = SUB V52 0x4
0xd7: V54 = ADD 0x4 V53
0xdb: V55 = CALLDATALOAD 0x4
0xdd: V56 = 0x20
0xdf: V57 = ADD 0x20 0x4
0xe7: V58 = 0x1f5
0xea: JUMP 0x1f5
---
Entry stack: [V11, V46]
Stack pops: 1
Stack additions: [0xeb, V55]
Exit stack: [V11, 0xeb, V55]

================================

Block 0xeb
[0xeb:0xec]
---
Predecessors: [0x2b7]
Successors: []
---
0xeb JUMPDEST
0xec STOP
---
0xeb: JUMPDEST 
0xec: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xed
[0xed:0xf4]
---
Predecessors: [0x4c]
Successors: [0xf5, 0xf9]
---
0xed JUMPDEST
0xee CALLVALUE
0xef DUP1
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xed: JUMPDEST 
0xee: V59 = CALLVALUE
0xf0: V60 = ISZERO V59
0xf1: V61 = 0xf9
0xf4: JUMPI 0xf9 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V59]
Exit stack: [V11, V59]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xed]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V62 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V59]

================================

Block 0xf9
[0xf9:0x101]
---
Predecessors: [0xed]
Successors: [0x2bb]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH2 0x102
0xfe PUSH2 0x2bb
0x101 JUMP
---
0xf9: JUMPDEST 
0xfb: V63 = 0x102
0xfe: V64 = 0x2bb
0x101: JUMP 0x2bb
---
Entry stack: [V11, V59]
Stack pops: 1
Stack additions: [0x102]
Exit stack: [V11, 0x102]

================================

Block 0x102
[0x102:0x103]
---
Predecessors: [0x34a]
Successors: []
---
0x102 JUMPDEST
0x103 STOP
---
0x102: JUMPDEST 
0x103: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x104
[0x104:0x137]
---
Predecessors: [0x57]
Successors: [0x34c]
---
0x104 JUMPDEST
0x105 PUSH2 0x138
0x108 PUSH1 0x4
0x10a DUP1
0x10b CALLDATASIZE
0x10c SUB
0x10d DUP2
0x10e ADD
0x10f SWAP1
0x110 DUP1
0x111 DUP1
0x112 CALLDATALOAD
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 SWAP1
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP1
0x12e SWAP3
0x12f SWAP2
0x130 SWAP1
0x131 POP
0x132 POP
0x133 POP
0x134 PUSH2 0x34c
0x137 JUMP
---
0x104: JUMPDEST 
0x105: V65 = 0x138
0x108: V66 = 0x4
0x10b: V67 = CALLDATASIZE
0x10c: V68 = SUB V67 0x4
0x10e: V69 = ADD 0x4 V68
0x112: V70 = CALLDATALOAD 0x4
0x113: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x12a: V73 = 0x20
0x12c: V74 = ADD 0x20 0x4
0x134: V75 = 0x34c
0x137: JUMP 0x34c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x138, V72]
Exit stack: [V11, 0x138, V72]

================================

Block 0x138
[0x138:0x139]
---
Predecessors: [0x48e]
Successors: []
---
0x138 JUMPDEST
0x139 STOP
---
0x138: JUMPDEST 
0x139: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13a
[0x13a:0x16d]
---
Predecessors: [0x62]
Successors: [0x492]
---
0x13a JUMPDEST
0x13b PUSH2 0x16e
0x13e PUSH1 0x4
0x140 DUP1
0x141 CALLDATASIZE
0x142 SUB
0x143 DUP2
0x144 ADD
0x145 SWAP1
0x146 DUP1
0x147 DUP1
0x148 CALLDATALOAD
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f SWAP1
0x160 PUSH1 0x20
0x162 ADD
0x163 SWAP1
0x164 SWAP3
0x165 SWAP2
0x166 SWAP1
0x167 POP
0x168 POP
0x169 POP
0x16a PUSH2 0x492
0x16d JUMP
---
0x13a: JUMPDEST 
0x13b: V76 = 0x16e
0x13e: V77 = 0x4
0x141: V78 = CALLDATASIZE
0x142: V79 = SUB V78 0x4
0x144: V80 = ADD 0x4 V79
0x148: V81 = CALLDATALOAD 0x4
0x149: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x160: V84 = 0x20
0x162: V85 = ADD 0x20 0x4
0x16a: V86 = 0x492
0x16d: JUMP 0x492
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16e, V83]
Exit stack: [V11, 0x16e, V83]

================================

Block 0x16e
[0x16e:0x187]
---
Predecessors: [0x51b]
Successors: []
---
0x16e JUMPDEST
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP1
0x173 DUP3
0x174 ISZERO
0x175 ISZERO
0x176 ISZERO
0x177 ISZERO
0x178 DUP2
0x179 MSTORE
0x17a PUSH1 0x20
0x17c ADD
0x17d SWAP2
0x17e POP
0x17f POP
0x180 PUSH1 0x40
0x182 MLOAD
0x183 DUP1
0x184 SWAP2
0x185 SUB
0x186 SWAP1
0x187 RETURN
---
0x16e: JUMPDEST 
0x16f: V87 = 0x40
0x171: V88 = M[0x40]
0x174: V89 = ISZERO 0x1
0x175: V90 = ISZERO 0x0
0x176: V91 = ISZERO 0x1
0x177: V92 = ISZERO 0x0
0x179: M[V88] = 0x1
0x17a: V93 = 0x20
0x17c: V94 = ADD 0x20 V88
0x180: V95 = 0x40
0x182: V96 = M[0x40]
0x185: V97 = SUB V94 V96
0x187: RETURN V96 V97
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x188
[0x188:0x18f]
---
Predecessors: [0x6d]
Successors: [0x525]
---
0x188 JUMPDEST
0x189 PUSH2 0x190
0x18c PUSH2 0x525
0x18f JUMP
---
0x188: JUMPDEST 
0x189: V98 = 0x190
0x18c: V99 = 0x525
0x18f: JUMP 0x525
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V11, 0x190]

================================

Block 0x190
[0x190:0x191]
---
Predecessors: [0x525]
Successors: []
---
0x190 JUMPDEST
0x191 STOP
---
0x190: JUMPDEST 
0x191: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x192
[0x192:0x1e5]
---
Predecessors: [0x89]
Successors: [0x1e6, 0x1ef]
---
0x192 JUMPDEST
0x193 DUP1
0x194 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a9 AND
0x1aa PUSH2 0x8fc
0x1ad ADDRESS
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 AND
0x1c4 BALANCE
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 ISZERO
0x1c8 MUL
0x1c9 SWAP1
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd PUSH1 0x0
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP4
0x1d4 SUB
0x1d5 DUP2
0x1d6 DUP6
0x1d7 DUP9
0x1d8 DUP9
0x1d9 CALL
0x1da SWAP4
0x1db POP
0x1dc POP
0x1dd POP
0x1de POP
0x1df ISZERO
0x1e0 DUP1
0x1e1 ISZERO
0x1e2 PUSH2 0x1ef
0x1e5 JUMPI
---
0x192: JUMPDEST 
0x194: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x1aa: V102 = 0x8fc
0x1ad: V103 = ADDRESS
0x1ae: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1c4: V106 = BALANCE V105
0x1c7: V107 = ISZERO V106
0x1c8: V108 = MUL V107 0x8fc
0x1ca: V109 = 0x40
0x1cc: V110 = M[0x40]
0x1cd: V111 = 0x0
0x1cf: V112 = 0x40
0x1d1: V113 = M[0x40]
0x1d4: V114 = SUB V110 V113
0x1d9: V115 = CALL V108 V101 V106 V113 V114 V113 0x0
0x1df: V116 = ISZERO V115
0x1e1: V117 = ISZERO V116
0x1e2: V118 = 0x1ef
0x1e5: JUMPI 0x1ef V117
---
Entry stack: [V11, 0xbe, V42]
Stack pops: 1
Stack additions: [S0, V116]
Exit stack: [V11, 0xbe, V42, V116]

================================

Block 0x1e6
[0x1e6:0x1ee]
---
Predecessors: [0x192]
Successors: []
---
0x1e6 RETURNDATASIZE
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea RETURNDATACOPY
0x1eb RETURNDATASIZE
0x1ec PUSH1 0x0
0x1ee REVERT
---
0x1e6: V119 = RETURNDATASIZE
0x1e7: V120 = 0x0
0x1ea: RETURNDATACOPY 0x0 0x0 V119
0x1eb: V121 = RETURNDATASIZE
0x1ec: V122 = 0x0
0x1ee: REVERT 0x0 V121
---
Entry stack: [V11, 0xbe, V42, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbe, V42, V116]

================================

Block 0x1ef
[0x1ef:0x1f4]
---
Predecessors: [0x192]
Successors: []
---
0x1ef JUMPDEST
0x1f0 POP
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 REVERT
---
0x1ef: JUMPDEST 
0x1f1: V123 = 0x0
0x1f4: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbe, V42, V116]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbe, V42]

================================

Block 0x1f5
[0x1f5:0x24b]
---
Predecessors: [0xcc]
Successors: [0x24c, 0x250]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 SWAP1
0x1fa SLOAD
0x1fb SWAP1
0x1fc PUSH2 0x100
0x1ff EXP
0x200 SWAP1
0x201 DIV
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22d AND
0x22e CALLER
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 AND
0x245 EQ
0x246 ISZERO
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V124 = 0x0
0x1fa: V125 = S[0x0]
0x1fc: V126 = 0x100
0x1ff: V127 = EXP 0x100 0x0
0x201: V128 = DIV V125 0x1
0x202: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x218: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x22e: V133 = CALLER
0x22f: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x245: V136 = EQ V135 V132
0x246: V137 = ISZERO V136
0x247: V138 = ISZERO V137
0x248: V139 = 0x250
0x24b: JUMPI 0x250 V138
---
Entry stack: [V11, 0xeb, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb, V55]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x1f5]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V140 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xeb, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb, V55]

================================

Block 0x250
[0x250:0x2ad]
---
Predecessors: [0x1f5]
Successors: [0x2ae, 0x2b7]
---
0x250 JUMPDEST
0x251 PUSH1 0x0
0x253 DUP1
0x254 SWAP1
0x255 SLOAD
0x256 SWAP1
0x257 PUSH2 0x100
0x25a EXP
0x25b SWAP1
0x25c DIV
0x25d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x272 AND
0x273 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x288 AND
0x289 PUSH2 0x8fc
0x28c DUP3
0x28d SWAP1
0x28e DUP2
0x28f ISZERO
0x290 MUL
0x291 SWAP1
0x292 PUSH1 0x40
0x294 MLOAD
0x295 PUSH1 0x0
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP1
0x29b DUP4
0x29c SUB
0x29d DUP2
0x29e DUP6
0x29f DUP9
0x2a0 DUP9
0x2a1 CALL
0x2a2 SWAP4
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 ISZERO
0x2a8 DUP1
0x2a9 ISZERO
0x2aa PUSH2 0x2b7
0x2ad JUMPI
---
0x250: JUMPDEST 
0x251: V141 = 0x0
0x255: V142 = S[0x0]
0x257: V143 = 0x100
0x25a: V144 = EXP 0x100 0x0
0x25c: V145 = DIV V142 0x1
0x25d: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x272: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x273: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x288: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x289: V150 = 0x8fc
0x28f: V151 = ISZERO V55
0x290: V152 = MUL V151 0x8fc
0x292: V153 = 0x40
0x294: V154 = M[0x40]
0x295: V155 = 0x0
0x297: V156 = 0x40
0x299: V157 = M[0x40]
0x29c: V158 = SUB V154 V157
0x2a1: V159 = CALL V152 V149 V55 V157 V158 V157 0x0
0x2a7: V160 = ISZERO V159
0x2a9: V161 = ISZERO V160
0x2aa: V162 = 0x2b7
0x2ad: JUMPI 0x2b7 V161
---
Entry stack: [V11, 0xeb, V55]
Stack pops: 1
Stack additions: [S0, V160]
Exit stack: [V11, 0xeb, V55, V160]

================================

Block 0x2ae
[0x2ae:0x2b6]
---
Predecessors: [0x250]
Successors: []
---
0x2ae RETURNDATASIZE
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 RETURNDATACOPY
0x2b3 RETURNDATASIZE
0x2b4 PUSH1 0x0
0x2b6 REVERT
---
0x2ae: V163 = RETURNDATASIZE
0x2af: V164 = 0x0
0x2b2: RETURNDATACOPY 0x0 0x0 V163
0x2b3: V165 = RETURNDATASIZE
0x2b4: V166 = 0x0
0x2b6: REVERT 0x0 V165
---
Entry stack: [V11, 0xeb, V55, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb, V55, V160]

================================

Block 0x2b7
[0x2b7:0x2ba]
---
Predecessors: [0x250]
Successors: [0xeb]
---
0x2b7 JUMPDEST
0x2b8 POP
0x2b9 POP
0x2ba JUMP
---
0x2b7: JUMPDEST 
0x2ba: JUMP 0xeb
---
Entry stack: [V11, 0xeb, V55, V160]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bb
[0x2bb:0x310]
---
Predecessors: [0xf9]
Successors: [0x311, 0x34a]
---
0x2bb JUMPDEST
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf SWAP1
0x2c0 SLOAD
0x2c1 SWAP1
0x2c2 PUSH2 0x100
0x2c5 EXP
0x2c6 SWAP1
0x2c7 DIV
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd AND
0x2de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f3 AND
0x2f4 CALLER
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a AND
0x30b EQ
0x30c ISZERO
0x30d PUSH2 0x34a
0x310 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V167 = 0x0
0x2c0: V168 = S[0x0]
0x2c2: V169 = 0x100
0x2c5: V170 = EXP 0x100 0x0
0x2c7: V171 = DIV V168 0x1
0x2c8: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x2de: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2f4: V176 = CALLER
0x2f5: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x30b: V179 = EQ V178 V175
0x30c: V180 = ISZERO V179
0x30d: V181 = 0x34a
0x310: JUMPI 0x34a V180
---
Entry stack: [V11, 0x102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x102]

================================

Block 0x311
[0x311:0x349]
---
Predecessors: [0x2bb]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 SWAP1
0x315 SLOAD
0x316 SWAP1
0x317 PUSH2 0x100
0x31a EXP
0x31b SWAP1
0x31c DIV
0x31d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x332 AND
0x333 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x348 AND
0x349 SELFDESTRUCT
---
0x311: V182 = 0x0
0x315: V183 = S[0x0]
0x317: V184 = 0x100
0x31a: V185 = EXP 0x100 0x0
0x31c: V186 = DIV V183 0x1
0x31d: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x332: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x333: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x348: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x349: SELFDESTRUCT V190
---
Entry stack: [V11, 0x102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x102]

================================

Block 0x34a
[0x34a:0x34b]
---
Predecessors: [0x2bb]
Successors: [0x102]
---
0x34a JUMPDEST
0x34b JUMP
---
0x34a: JUMPDEST 
0x34b: JUMP 0x102
---
Entry stack: [V11, 0x102]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x34c
[0x34c:0x484]
---
Predecessors: [0x104]
Successors: [0x485, 0x48e]
---
0x34c JUMPDEST
0x34d ADDRESS
0x34e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x363 AND
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP1
0x369 PUSH32 0x6469766528616464726573732900000000000000000000000000000000000000
0x38a DUP2
0x38b MSTORE
0x38c POP
0x38d PUSH1 0xd
0x38f ADD
0x390 SWAP1
0x391 POP
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP1
0x396 SWAP2
0x397 SUB
0x398 SWAP1
0x399 SHA3
0x39a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b8 SWAP1
0x3b9 DIV
0x3ba DUP3
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be DUP3
0x3bf PUSH4 0xffffffff
0x3c4 AND
0x3c5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3e3 MUL
0x3e4 DUP2
0x3e5 MSTORE
0x3e6 PUSH1 0x4
0x3e8 ADD
0x3e9 DUP1
0x3ea DUP3
0x3eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x400 AND
0x401 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x416 AND
0x417 DUP2
0x418 MSTORE
0x419 PUSH1 0x20
0x41b ADD
0x41c SWAP2
0x41d POP
0x41e POP
0x41f PUSH1 0x0
0x421 PUSH1 0x40
0x423 MLOAD
0x424 DUP1
0x425 DUP4
0x426 SUB
0x427 DUP2
0x428 PUSH1 0x0
0x42a DUP8
0x42b GAS
0x42c CALL
0x42d SWAP3
0x42e POP
0x42f POP
0x430 POP
0x431 POP
0x432 CALLER
0x433 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x448 AND
0x449 PUSH2 0x8fc
0x44c ADDRESS
0x44d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x462 AND
0x463 BALANCE
0x464 SWAP1
0x465 DUP2
0x466 ISZERO
0x467 MUL
0x468 SWAP1
0x469 PUSH1 0x40
0x46b MLOAD
0x46c PUSH1 0x0
0x46e PUSH1 0x40
0x470 MLOAD
0x471 DUP1
0x472 DUP4
0x473 SUB
0x474 DUP2
0x475 DUP6
0x476 DUP9
0x477 DUP9
0x478 CALL
0x479 SWAP4
0x47a POP
0x47b POP
0x47c POP
0x47d POP
0x47e ISZERO
0x47f DUP1
0x480 ISZERO
0x481 PUSH2 0x48e
0x484 JUMPI
---
0x34c: JUMPDEST 
0x34d: V191 = ADDRESS
0x34e: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x363: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x364: V194 = 0x40
0x366: V195 = M[0x40]
0x369: V196 = 0x6469766528616464726573732900000000000000000000000000000000000000
0x38b: M[V195] = 0x6469766528616464726573732900000000000000000000000000000000000000
0x38d: V197 = 0xd
0x38f: V198 = ADD 0xd V195
0x392: V199 = 0x40
0x394: V200 = M[0x40]
0x397: V201 = SUB V198 V200
0x399: V202 = SHA3 V200 V201
0x39a: V203 = 0x100000000000000000000000000000000000000000000000000000000
0x3b9: V204 = DIV V202 0x100000000000000000000000000000000000000000000000000000000
0x3bb: V205 = 0x40
0x3bd: V206 = M[0x40]
0x3bf: V207 = 0xffffffff
0x3c4: V208 = AND 0xffffffff V204
0x3c5: V209 = 0x100000000000000000000000000000000000000000000000000000000
0x3e3: V210 = MUL 0x100000000000000000000000000000000000000000000000000000000 V208
0x3e5: M[V206] = V210
0x3e6: V211 = 0x4
0x3e8: V212 = ADD 0x4 V206
0x3eb: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x400: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x401: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x416: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x418: M[V212] = V216
0x419: V217 = 0x20
0x41b: V218 = ADD 0x20 V212
0x41f: V219 = 0x0
0x421: V220 = 0x40
0x423: V221 = M[0x40]
0x426: V222 = SUB V218 V221
0x428: V223 = 0x0
0x42b: V224 = GAS
0x42c: V225 = CALL V224 V193 0x0 V221 V222 V221 0x0
0x432: V226 = CALLER
0x433: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x448: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x449: V229 = 0x8fc
0x44c: V230 = ADDRESS
0x44d: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x462: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x463: V233 = BALANCE V232
0x466: V234 = ISZERO V233
0x467: V235 = MUL V234 0x8fc
0x469: V236 = 0x40
0x46b: V237 = M[0x40]
0x46c: V238 = 0x0
0x46e: V239 = 0x40
0x470: V240 = M[0x40]
0x473: V241 = SUB V237 V240
0x478: V242 = CALL V235 V228 V233 V240 V241 V240 0x0
0x47e: V243 = ISZERO V242
0x480: V244 = ISZERO V243
0x481: V245 = 0x48e
0x484: JUMPI 0x48e V244
---
Entry stack: [V11, 0x138, V72]
Stack pops: 1
Stack additions: [S0, V243]
Exit stack: [V11, 0x138, V72, V243]

================================

Block 0x485
[0x485:0x48d]
---
Predecessors: [0x34c]
Successors: []
---
0x485 RETURNDATASIZE
0x486 PUSH1 0x0
0x488 DUP1
0x489 RETURNDATACOPY
0x48a RETURNDATASIZE
0x48b PUSH1 0x0
0x48d REVERT
---
0x485: V246 = RETURNDATASIZE
0x486: V247 = 0x0
0x489: RETURNDATACOPY 0x0 0x0 V246
0x48a: V248 = RETURNDATASIZE
0x48b: V249 = 0x0
0x48d: REVERT 0x0 V248
---
Entry stack: [V11, 0x138, V72, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V72, V243]

================================

Block 0x48e
[0x48e:0x491]
---
Predecessors: [0x34c]
Successors: [0x138]
---
0x48e JUMPDEST
0x48f POP
0x490 POP
0x491 JUMP
---
0x48e: JUMPDEST 
0x491: JUMP 0x138
---
Entry stack: [V11, 0x138, V72, V243]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x492
[0x492:0x511]
---
Predecessors: [0x13a]
Successors: [0x512, 0x51b]
---
0x492 JUMPDEST
0x493 PUSH1 0x0
0x495 DUP2
0x496 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ab AND
0x4ac PUSH1 0x40
0x4ae MLOAD
0x4af PUSH1 0x0
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 DUP4
0x4b6 SUB
0x4b7 DUP2
0x4b8 DUP6
0x4b9 GAS
0x4ba DELEGATECALL
0x4bb SWAP2
0x4bc POP
0x4bd POP
0x4be POP
0x4bf CALLER
0x4c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d5 AND
0x4d6 PUSH2 0x8fc
0x4d9 ADDRESS
0x4da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ef AND
0x4f0 BALANCE
0x4f1 SWAP1
0x4f2 DUP2
0x4f3 ISZERO
0x4f4 MUL
0x4f5 SWAP1
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 PUSH1 0x0
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe DUP1
0x4ff DUP4
0x500 SUB
0x501 DUP2
0x502 DUP6
0x503 DUP9
0x504 DUP9
0x505 CALL
0x506 SWAP4
0x507 POP
0x508 POP
0x509 POP
0x50a POP
0x50b ISZERO
0x50c DUP1
0x50d ISZERO
0x50e PUSH2 0x51b
0x511 JUMPI
---
0x492: JUMPDEST 
0x493: V250 = 0x0
0x496: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ab: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x4ac: V253 = 0x40
0x4ae: V254 = M[0x40]
0x4af: V255 = 0x0
0x4b1: V256 = 0x40
0x4b3: V257 = M[0x40]
0x4b6: V258 = SUB V254 V257
0x4b9: V259 = GAS
0x4ba: V260 = DELEGATECALL V259 V252 V257 V258 V257 0x0
0x4bf: V261 = CALLER
0x4c0: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x4d6: V264 = 0x8fc
0x4d9: V265 = ADDRESS
0x4da: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ef: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x4f0: V268 = BALANCE V267
0x4f3: V269 = ISZERO V268
0x4f4: V270 = MUL V269 0x8fc
0x4f6: V271 = 0x40
0x4f8: V272 = M[0x40]
0x4f9: V273 = 0x0
0x4fb: V274 = 0x40
0x4fd: V275 = M[0x40]
0x500: V276 = SUB V272 V275
0x505: V277 = CALL V270 V263 V268 V275 V276 V275 0x0
0x50b: V278 = ISZERO V277
0x50d: V279 = ISZERO V278
0x50e: V280 = 0x51b
0x511: JUMPI 0x51b V279
---
Entry stack: [V11, 0x16e, V83]
Stack pops: 1
Stack additions: [S0, 0x0, V278]
Exit stack: [V11, 0x16e, V83, 0x0, V278]

================================

Block 0x512
[0x512:0x51a]
---
Predecessors: [0x492]
Successors: []
---
0x512 RETURNDATASIZE
0x513 PUSH1 0x0
0x515 DUP1
0x516 RETURNDATACOPY
0x517 RETURNDATASIZE
0x518 PUSH1 0x0
0x51a REVERT
---
0x512: V281 = RETURNDATASIZE
0x513: V282 = 0x0
0x516: RETURNDATACOPY 0x0 0x0 V281
0x517: V283 = RETURNDATASIZE
0x518: V284 = 0x0
0x51a: REVERT 0x0 V283
---
Entry stack: [V11, 0x16e, V83, 0x0, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16e, V83, 0x0, V278]

================================

Block 0x51b
[0x51b:0x524]
---
Predecessors: [0x492]
Successors: [0x16e]
---
0x51b JUMPDEST
0x51c POP
0x51d PUSH1 0x1
0x51f SWAP1
0x520 POP
0x521 SWAP2
0x522 SWAP1
0x523 POP
0x524 JUMP
---
0x51b: JUMPDEST 
0x51d: V285 = 0x1
0x524: JUMP 0x16e
---
Entry stack: [V11, 0x16e, V83, 0x0, V278]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x525
[0x525:0x526]
---
Predecessors: [0x188]
Successors: [0x190]
---
0x525 JUMPDEST
0x526 JUMP
---
0x525: JUMPDEST 
0x526: JUMP 0x190
---
Entry stack: [V11, 0x190]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x527
[0x527:0x552]
---
Predecessors: []
Successors: []
---
0x527 STOP
0x528 LOG1
0x529 PUSH6 0x627a7a723058
0x530 SHA3
0x531 SWAP1
0x532 SWAP7
0x533 MISSING 0xf9
0x534 CALLDATASIZE
0x535 PUSH6 0x553ade41ee30
0x53c BALANCE
0x53d SWAP16
0x53e OR
0x53f MISSING 0x28
0x540 MISSING 0xb4
0x541 MISSING 0xea
0x542 MISSING 0xab
0x543 MISSING 0x5f
0x544 TIMESTAMP
0x545 EQ
0x546 MISSING 0xf9
0x547 CALLCODE
0x548 MISSING 0x5e
0x549 MISSING 0x2e
0x54a MISSING 0xf
0x54b PUSH7 0x9c1b48ddc30029
---
0x527: STOP 
0x528: LOG S0 S1 S2
0x529: V286 = 0x627a7a723058
0x530: V287 = SHA3 0x627a7a723058 S3
0x533: MISSING 0xf9
0x534: V288 = CALLDATASIZE
0x535: V289 = 0x553ade41ee30
0x53c: V290 = BALANCE 0x553ade41ee30
0x53e: V291 = OR S14 V288
0x53f: MISSING 0x28
0x540: MISSING 0xb4
0x541: MISSING 0xea
0x542: MISSING 0xab
0x543: MISSING 0x5f
0x544: V292 = TIMESTAMP
0x545: V293 = EQ V292 S0
0x546: MISSING 0xf9
0x547: V294 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x548: MISSING 0x5e
0x549: MISSING 0x2e
0x54a: MISSING 0xf
0x54b: V295 = 0x9c1b48ddc30029
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, V287, S5, S6, S7, S8, S9, S4, V291, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V290, V293, V294, 0x9c1b48ddc30029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1fffe0ab
Entry block: 0x7d
Exit block: 0x1ef
Body: 0x7d, 0x85, 0x89, 0x192, 0x1e6, 0x1ef

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0xc0
Exit block: 0xeb
Body: 0xc0, 0xc8, 0xcc, 0xeb, 0x1f5, 0x24c, 0x250, 0x2ae, 0x2b7

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xed
Exit block: 0x102
Body: 0xed, 0xf5, 0xf9, 0x102, 0x2bb, 0x311, 0x34a

Function 3:
Public function signature: 0x56d21be1
Entry block: 0x104
Exit block: 0x138
Body: 0x104, 0x138, 0x34c, 0x485, 0x48e

Function 4:
Public function signature: 0x8950de60
Entry block: 0x13a
Exit block: 0x16e
Body: 0x13a, 0x16e, 0x492, 0x512, 0x51b

Function 5:
Public function signature: 0xd0e30db0
Entry block: 0x188
Exit block: 0x190
Body: 0x188, 0x190, 0x525

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

