Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3b
0xa: JUMPI 0x3b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x97]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x29b5b30c
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x97
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x29b5b30c
0x20: V14 = EQ V12 0x29b5b30c
0x21: V15 = 0x97
0x24: JUMPI 0x97 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xbe]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0xbe
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0xbe
0x2f: JUMPI 0xbe V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xd0]
---
0x30 DUP1
0x31 PUSH4 0xe5225381
0x36 EQ
0x37 PUSH2 0xd0
0x3a JUMPI
---
0x31: V19 = 0xe5225381
0x36: V20 = EQ 0xe5225381 V12
0x37: V21 = 0xd0
0x3a: JUMPI 0xd0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x41]
---
Predecessors: [0x0, 0x30]
Successors: [0x42, 0x43]
---
0x3b JUMPDEST
0x3c CALLVALUE
0x3d ISZERO
0x3e PUSH2 0x43
0x41 JUMPI
---
0x3b: JUMPDEST 
0x3c: V22 = CALLVALUE
0x3d: V23 = ISZERO V22
0x3e: V24 = 0x43
0x41: JUMPI 0x43 V23
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42
[0x42:0x42]
---
Predecessors: [0x3b]
Successors: []
---
0x42 INVALID
---
0x42: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43
[0x43:0x46]
---
Predecessors: [0x3b]
Successors: [0x47]
---
0x43 JUMPDEST
0x44 PUSH2 0x95
---
0x43: JUMPDEST 
0x44: V25 = 0x95
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x95]
Exit stack: [V12, 0x95]

================================

Block 0x47
[0x47:0x50]
---
Predecessors: [0x43]
Successors: [0x51, 0x92]
---
0x47 JUMPDEST
0x48 PUSH1 0x0
0x4a CALLVALUE
0x4b GT
0x4c ISZERO
0x4d PUSH2 0x92
0x50 JUMPI
---
0x47: JUMPDEST 
0x48: V26 = 0x0
0x4a: V27 = CALLVALUE
0x4b: V28 = GT V27 0x0
0x4c: V29 = ISZERO V28
0x4d: V30 = 0x92
0x50: JUMPI 0x92 V29
---
Entry stack: [V12, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95]

================================

Block 0x51
[0x51:0x91]
---
Predecessors: [0x47]
Successors: [0x92]
---
0x51 PUSH1 0x40
0x53 DUP1
0x54 MLOAD
0x55 CALLVALUE
0x56 DUP2
0x57 MSTORE
0x58 SWAP1
0x59 MLOAD
0x5a PUSH1 0x58
0x5c SWAP2
0x5d PUSH1 0x1
0x5f PUSH1 0xa0
0x61 PUSH1 0x2
0x63 EXP
0x64 SUB
0x65 CALLER
0x66 AND
0x67 SWAP2
0x68 PUSH32 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15
0x89 SWAP2
0x8a DUP2
0x8b SWAP1
0x8c SUB
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 LOG3
---
0x51: V31 = 0x40
0x54: V32 = M[0x40]
0x55: V33 = CALLVALUE
0x57: M[V32] = V33
0x59: V34 = M[0x40]
0x5a: V35 = 0x58
0x5d: V36 = 0x1
0x5f: V37 = 0xa0
0x61: V38 = 0x2
0x63: V39 = EXP 0x2 0xa0
0x64: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65: V41 = CALLER
0x66: V42 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x68: V43 = 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15
0x8c: V44 = SUB V32 V34
0x8d: V45 = 0x20
0x8f: V46 = ADD 0x20 V44
0x91: LOG V34 V46 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15 V42 0x58
---
Entry stack: [V12, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95]

================================

Block 0x92
[0x92:0x92]
---
Predecessors: [0x47, 0x51, 0x17a, 0x1a2]
Successors: [0x93]
---
0x92 JUMPDEST
---
0x92: JUMPDEST 
---
Entry stack: [V12, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95]

================================

Block 0x93
[0x93:0x94]
---
Predecessors: [0x92]
Successors: [0x95]
---
0x93 JUMPDEST
0x94 JUMP
---
0x93: JUMPDEST 
0x94: JUMP 0x95
---
Entry stack: [V12, 0x95]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x95
[0x95:0x96]
---
Predecessors: [0x93, 0x174, 0x1e9]
Successors: []
---
0x95 JUMPDEST
0x96 STOP
---
0x95: JUMPDEST 
0x96: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x97
[0x97:0x9d]
---
Predecessors: [0xb]
Successors: [0x9e, 0x9f]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 ISZERO
0x9a PUSH2 0x9f
0x9d JUMPI
---
0x97: JUMPDEST 
0x98: V47 = CALLVALUE
0x99: V48 = ISZERO V47
0x9a: V49 = 0x9f
0x9d: JUMPI 0x9f V48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0x9e]
---
Predecessors: [0x97]
Successors: []
---
0x9e INVALID
---
0x9e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f
[0x9f:0xbb]
---
Predecessors: [0x97]
Successors: [0xe2]
---
0x9f JUMPDEST
0xa0 PUSH2 0x95
0xa3 PUSH1 0x1
0xa5 PUSH1 0xa0
0xa7 PUSH1 0x2
0xa9 EXP
0xaa SUB
0xab PUSH1 0x4
0xad CALLDATALOAD
0xae DUP2
0xaf AND
0xb0 SWAP1
0xb1 PUSH1 0x24
0xb3 CALLDATALOAD
0xb4 AND
0xb5 PUSH1 0x44
0xb7 CALLDATALOAD
0xb8 PUSH2 0xe2
0xbb JUMP
---
0x9f: JUMPDEST 
0xa0: V50 = 0x95
0xa3: V51 = 0x1
0xa5: V52 = 0xa0
0xa7: V53 = 0x2
0xa9: V54 = EXP 0x2 0xa0
0xaa: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab: V56 = 0x4
0xad: V57 = CALLDATALOAD 0x4
0xaf: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xb1: V59 = 0x24
0xb3: V60 = CALLDATALOAD 0x24
0xb4: V61 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V62 = 0x44
0xb7: V63 = CALLDATALOAD 0x44
0xb8: V64 = 0xe2
0xbb: JUMP 0xe2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x95, V58, V61, V63]
Exit stack: [V12, 0x95, V58, V61, V63]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: []
Successors: []
---
0xbc JUMPDEST
0xbd STOP
---
0xbc: JUMPDEST 
0xbd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0x25]
Successors: [0xc5, 0xc6]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 ISZERO
0xc1 PUSH2 0xc6
0xc4 JUMPI
---
0xbe: JUMPDEST 
0xbf: V65 = CALLVALUE
0xc0: V66 = ISZERO V65
0xc1: V67 = 0xc6
0xc4: JUMPI 0xc6 V66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc5
[0xc5:0xc5]
---
Predecessors: [0xbe]
Successors: []
---
0xc5 INVALID
---
0xc5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbe]
Successors: [0x17a]
---
0xc6 JUMPDEST
0xc7 PUSH2 0x95
0xca PUSH2 0x17a
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V68 = 0x95
0xca: V69 = 0x17a
0xcd: JUMP 0x17a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x95]
Exit stack: [V12, 0x95]

================================

Block 0xce
[0xce:0xcf]
---
Predecessors: []
Successors: []
---
0xce JUMPDEST
0xcf STOP
---
0xce: JUMPDEST 
0xcf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0x30]
Successors: [0xd7, 0xd8]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xd8
0xd6 JUMPI
---
0xd0: JUMPDEST 
0xd1: V70 = CALLVALUE
0xd2: V71 = ISZERO V70
0xd3: V72 = 0xd8
0xd6: JUMPI 0xd8 V71
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd7
[0xd7:0xd7]
---
Predecessors: [0xd0]
Successors: []
---
0xd7 INVALID
---
0xd7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd8
[0xd8:0xdf]
---
Predecessors: [0xd0]
Successors: [0x1a2]
---
0xd8 JUMPDEST
0xd9 PUSH2 0x95
0xdc PUSH2 0x1a2
0xdf JUMP
---
0xd8: JUMPDEST 
0xd9: V73 = 0x95
0xdc: V74 = 0x1a2
0xdf: JUMP 0x1a2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x95]
Exit stack: [V12, 0x95]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: []
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe2
[0xe2:0xfa]
---
Predecessors: [0x9f]
Successors: [0xfb, 0x173]
---
0xe2 JUMPDEST
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 SLOAD
0xe7 CALLER
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 SWAP1
0xf1 DUP2
0xf2 AND
0xf3 SWAP2
0xf4 AND
0xf5 EQ
0xf6 ISZERO
0xf7 PUSH2 0x173
0xfa JUMPI
---
0xe2: JUMPDEST 
0xe3: V75 = 0x0
0xe6: V76 = S[0x0]
0xe7: V77 = CALLER
0xe8: V78 = 0x1
0xea: V79 = 0xa0
0xec: V80 = 0x2
0xee: V81 = EXP 0x2 0xa0
0xef: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xf4: V84 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V85 = EQ V84 V83
0xf6: V86 = ISZERO V85
0xf7: V87 = 0x173
0xfa: JUMPI 0x173 V86
---
Entry stack: [V12, 0x95, V58, V61, V63]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x95, V58, V61, V63, 0x0]

================================

Block 0xfb
[0xfb:0x160]
---
Predecessors: [0xe2]
Successors: [0x161, 0x162]
---
0xfb POP
0xfc PUSH1 0x40
0xfe DUP1
0xff MLOAD
0x100 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x121 DUP2
0x122 MSTORE
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b DUP5
0x12c DUP2
0x12d AND
0x12e PUSH1 0x4
0x130 DUP4
0x131 ADD
0x132 MSTORE
0x133 PUSH1 0x24
0x135 DUP3
0x136 ADD
0x137 DUP5
0x138 SWAP1
0x139 MSTORE
0x13a SWAP2
0x13b MLOAD
0x13c DUP6
0x13d SWAP3
0x13e DUP4
0x13f AND
0x140 SWAP2
0x141 PUSH4 0xa9059cbb
0x146 SWAP2
0x147 PUSH1 0x44
0x149 DUP1
0x14a DUP4
0x14b ADD
0x14c SWAP3
0x14d PUSH1 0x0
0x14f SWAP3
0x150 SWAP2
0x151 SWAP1
0x152 DUP3
0x153 SWAP1
0x154 SUB
0x155 ADD
0x156 DUP2
0x157 DUP4
0x158 DUP8
0x159 DUP1
0x15a EXTCODESIZE
0x15b ISZERO
0x15c ISZERO
0x15d PUSH2 0x162
0x160 JUMPI
---
0xfc: V88 = 0x40
0xff: V89 = M[0x40]
0x100: V90 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x122: M[V89] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x123: V91 = 0x1
0x125: V92 = 0xa0
0x127: V93 = 0x2
0x129: V94 = EXP 0x2 0xa0
0x12a: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x12e: V97 = 0x4
0x131: V98 = ADD V89 0x4
0x132: M[V98] = V96
0x133: V99 = 0x24
0x136: V100 = ADD V89 0x24
0x139: M[V100] = V63
0x13b: V101 = M[0x40]
0x13f: V102 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x141: V103 = 0xa9059cbb
0x147: V104 = 0x44
0x14b: V105 = ADD V89 0x44
0x14d: V106 = 0x0
0x154: V107 = SUB V89 V101
0x155: V108 = ADD V107 0x44
0x15a: V109 = EXTCODESIZE V102
0x15b: V110 = ISZERO V109
0x15c: V111 = ISZERO V110
0x15d: V112 = 0x162
0x160: JUMPI 0x162 V111
---
Entry stack: [V12, 0x95, V58, V61, V63, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V102, 0xa9059cbb, V105, 0x0, V101, V108, V101, 0x0, V102]
Exit stack: [V12, 0x95, V58, V61, V63, V58, V102, 0xa9059cbb, V105, 0x0, V101, V108, V101, 0x0, V102]

================================

Block 0x161
[0x161:0x161]
---
Predecessors: [0xfb]
Successors: []
---
0x161 INVALID
---
0x161: INVALID 
---
Entry stack: [V12, 0x95, V58, V61, V63, V58, V102, 0xa9059cbb, V105, 0x0, V101, V108, V101, 0x0, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95, V58, V61, V63, V58, V102, 0xa9059cbb, V105, 0x0, V101, V108, V101, 0x0, V102]

================================

Block 0x162
[0x162:0x16d]
---
Predecessors: [0xfb]
Successors: [0x16e, 0x16f]
---
0x162 JUMPDEST
0x163 PUSH1 0x32
0x165 GAS
0x166 SUB
0x167 CALL
0x168 ISZERO
0x169 ISZERO
0x16a PUSH2 0x16f
0x16d JUMPI
---
0x162: JUMPDEST 
0x163: V113 = 0x32
0x165: V114 = GAS
0x166: V115 = SUB V114 0x32
0x167: V116 = CALL V115 V102 0x0 V101 V108 V101 0x0
0x168: V117 = ISZERO V116
0x169: V118 = ISZERO V117
0x16a: V119 = 0x16f
0x16d: JUMPI 0x16f V118
---
Entry stack: [V12, 0x95, V58, V61, V63, V58, V102, 0xa9059cbb, V105, 0x0, V101, V108, V101, 0x0, V102]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x95, V58, V61, V63, V58, V102, 0xa9059cbb, V105]

================================

Block 0x16e
[0x16e:0x16e]
---
Predecessors: [0x162]
Successors: []
---
0x16e INVALID
---
0x16e: INVALID 
---
Entry stack: [V12, 0x95, V58, V61, V63, V58, V102, 0xa9059cbb, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95, V58, V61, V63, V58, V102, 0xa9059cbb, V105]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x162]
Successors: [0x173]
---
0x16f JUMPDEST
0x170 POP
0x171 POP
0x172 POP
---
0x16f: JUMPDEST 
---
Entry stack: [V12, 0x95, V58, V61, V63, V58, V102, 0xa9059cbb, V105]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x95, V58, V61, V63, V58]

================================

Block 0x173
[0x173:0x173]
---
Predecessors: [0xe2, 0x16f]
Successors: [0x174]
---
0x173 JUMPDEST
---
0x173: JUMPDEST 
---
Entry stack: [V12, 0x95, V58, V61, V63, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95, V58, V61, V63, S0]

================================

Block 0x174
[0x174:0x179]
---
Predecessors: [0x173]
Successors: [0x95]
---
0x174 JUMPDEST
0x175 POP
0x176 POP
0x177 POP
0x178 POP
0x179 JUMP
---
0x174: JUMPDEST 
0x179: JUMP 0x95
---
Entry stack: [V12, 0x95, V58, V61, V63, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x17a
[0x17a:0x191]
---
Predecessors: [0xc6]
Successors: [0x92, 0x192]
---
0x17a JUMPDEST
0x17b PUSH1 0x0
0x17d SLOAD
0x17e CALLER
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 SWAP1
0x188 DUP2
0x189 AND
0x18a SWAP2
0x18b AND
0x18c EQ
0x18d ISZERO
0x18e PUSH2 0x92
0x191 JUMPI
---
0x17a: JUMPDEST 
0x17b: V120 = 0x0
0x17d: V121 = S[0x0]
0x17e: V122 = CALLER
0x17f: V123 = 0x1
0x181: V124 = 0xa0
0x183: V125 = 0x2
0x185: V126 = EXP 0x2 0xa0
0x186: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x18b: V129 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V130 = EQ V129 V128
0x18d: V131 = ISZERO V130
0x18e: V132 = 0x92
0x191: JUMPI 0x92 V131
---
Entry stack: [V12, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95]

================================

Block 0x192
[0x192:0x19e]
---
Predecessors: [0x17a]
Successors: []
---
0x192 PUSH1 0x0
0x194 SLOAD
0x195 PUSH1 0x1
0x197 PUSH1 0xa0
0x199 PUSH1 0x2
0x19b EXP
0x19c SUB
0x19d AND
0x19e SELFDESTRUCT
---
0x192: V133 = 0x0
0x194: V134 = S[0x0]
0x195: V135 = 0x1
0x197: V136 = 0xa0
0x199: V137 = 0x2
0x19b: V138 = EXP 0x2 0xa0
0x19c: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19d: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x19e: SELFDESTRUCT V140
---
Entry stack: [V12, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95]

================================

Block 0x19f
[0x19f:0x19f]
---
Predecessors: []
Successors: [0x1a0]
---
0x19f JUMPDEST
---
0x19f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a0
[0x1a0:0x1a1]
---
Predecessors: [0x19f]
Successors: []
Has unresolved jump.
---
0x1a0 JUMPDEST
0x1a1 JUMP
---
0x1a0: JUMPDEST 
0x1a1: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a2
[0x1a2:0x1b9]
---
Predecessors: [0xd8]
Successors: [0x92, 0x1ba]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x0
0x1a5 SLOAD
0x1a6 CALLER
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af SWAP1
0x1b0 DUP2
0x1b1 AND
0x1b2 SWAP2
0x1b3 AND
0x1b4 EQ
0x1b5 ISZERO
0x1b6 PUSH2 0x92
0x1b9 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V141 = 0x0
0x1a5: V142 = S[0x0]
0x1a6: V143 = CALLER
0x1a7: V144 = 0x1
0x1a9: V145 = 0xa0
0x1ab: V146 = 0x2
0x1ad: V147 = EXP 0x2 0xa0
0x1ae: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x1b3: V150 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V151 = EQ V150 V149
0x1b5: V152 = ISZERO V151
0x1b6: V153 = 0x92
0x1b9: JUMPI 0x92 V152
---
Entry stack: [V12, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95]

================================

Block 0x1ba
[0x1ba:0x1e7]
---
Predecessors: [0x1a2]
Successors: [0x1e8]
---
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd SLOAD
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 PUSH1 0x1
0x1c3 PUSH1 0xa0
0x1c5 PUSH1 0x2
0x1c7 EXP
0x1c8 SUB
0x1c9 SWAP2
0x1ca DUP3
0x1cb AND
0x1cc SWAP3
0x1cd ADDRESS
0x1ce SWAP1
0x1cf SWAP3
0x1d0 AND
0x1d1 BALANCE
0x1d2 DUP1
0x1d3 ISZERO
0x1d4 PUSH2 0x8fc
0x1d7 MUL
0x1d8 SWAP3
0x1d9 SWAP1
0x1da SWAP2
0x1db SWAP1
0x1dc DUP2
0x1dd DUP2
0x1de DUP2
0x1df DUP6
0x1e0 DUP9
0x1e1 DUP9
0x1e2 CALL
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 POP
---
0x1ba: V154 = 0x0
0x1bd: V155 = S[0x0]
0x1be: V156 = 0x40
0x1c0: V157 = M[0x40]
0x1c1: V158 = 0x1
0x1c3: V159 = 0xa0
0x1c5: V160 = 0x2
0x1c7: V161 = EXP 0x2 0xa0
0x1c8: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1cd: V164 = ADDRESS
0x1d0: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1d1: V166 = BALANCE V165
0x1d3: V167 = ISZERO V166
0x1d4: V168 = 0x8fc
0x1d7: V169 = MUL 0x8fc V167
0x1e2: V170 = CALL V169 V163 V166 V157 0x0 V157 0x0
---
Entry stack: [V12, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95]

================================

Block 0x1e8
[0x1e8:0x1e8]
---
Predecessors: [0x1ba]
Successors: [0x1e9]
---
0x1e8 JUMPDEST
---
0x1e8: JUMPDEST 
---
Entry stack: [V12, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x95]

================================

Block 0x1e9
[0x1e9:0x1ea]
---
Predecessors: [0x1e8]
Successors: [0x95]
---
0x1e9 JUMPDEST
0x1ea JUMP
---
0x1e9: JUMPDEST 
0x1ea: JUMP 0x95
---
Entry stack: [V12, 0x95]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x21e]
---
Predecessors: []
Successors: []
---
0x1eb STOP
0x1ec LOG1
0x1ed PUSH6 0x627a7a723058
0x1f4 SHA3
0x1f5 SWAP6
0x1f6 SWAP15
0x1f7 MISSING 0xc7
0x1f8 MISSING 0xfc
0x1f9 EXTCODESIZE
0x1fa MISSING 0xd6
0x1fb PUSH2 0xd37a
0x1fe SMOD
0x1ff MISSING 0xbc
0x200 SIGNEXTEND
0x201 MISSING 0x4b
0x202 SWAP10
0x203 MISSING 0xc5
0x204 DUP1
0x205 PUSH25 0x105667dfc9090afb2d3428e557161b0029
---
0x1eb: STOP 
0x1ec: LOG S0 S1 S2
0x1ed: V171 = 0x627a7a723058
0x1f4: V172 = SHA3 0x627a7a723058 S3
0x1f7: MISSING 0xc7
0x1f8: MISSING 0xfc
0x1f9: V173 = EXTCODESIZE S0
0x1fa: MISSING 0xd6
0x1fb: V174 = 0xd37a
0x1fe: V175 = SMOD 0xd37a S0
0x1ff: MISSING 0xbc
0x200: V176 = SIGNEXTEND S0 S1
0x201: MISSING 0x4b
0x203: MISSING 0xc5
0x205: V177 = 0x105667dfc9090afb2d3428e557161b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S18, S4, S5, S6, S7, S8, V172, S10, S11, S12, S13, S14, S15, S16, S17, S9, V173, V175, V176, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, 0x105667dfc9090afb2d3428e557161b0029, S0, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x29b5b30c
Entry block: 0x97
Exit block: 0x16e
Body: 0x95, 0x97, 0x9e, 0x9f, 0xe2, 0xfb, 0x161, 0x162, 0x16e, 0x16f, 0x173, 0x174

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xbe
Exit block: 0x95
Body: 0x92, 0x93, 0x95, 0xbe, 0xc5, 0xc6, 0x17a, 0x192

Function 2:
Public function signature: 0xe5225381
Entry block: 0xd0
Exit block: 0x95
Body: 0x92, 0x93, 0x95, 0xd0, 0xd7, 0xd8, 0x1a2, 0x1ba, 0x1e8, 0x1e9

Function 3:
Public fallback function
Entry block: 0x3b
Exit block: 0x95
Body: 0x3b, 0x42, 0x43, 0x47, 0x51, 0x92, 0x93, 0x95

