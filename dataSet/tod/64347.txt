Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa0]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa0
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa0
0xc: JUMPI 0xa0 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xa5]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0xd69e26a
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xa5
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0xd69e26a
0x22: V15 = EQ V13 0xd69e26a
0x23: V16 = 0xa5
0x26: JUMPI 0xa5 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xc8]
---
0x27 DUP1
0x28 PUSH4 0x36e103c4
0x2d EQ
0x2e PUSH2 0xc8
0x31 JUMPI
---
0x28: V17 = 0x36e103c4
0x2d: V18 = EQ 0x36e103c4 V13
0x2e: V19 = 0xc8
0x31: JUMPI 0xc8 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xe3]
---
0x32 DUP1
0x33 PUSH4 0x5142c373
0x38 EQ
0x39 PUSH2 0xe3
0x3c JUMPI
---
0x33: V20 = 0x5142c373
0x38: V21 = EQ 0x5142c373 V13
0x39: V22 = 0xe3
0x3c: JUMPI 0xe3 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x10a]
---
0x3d DUP1
0x3e PUSH4 0x72d6ad88
0x43 EQ
0x44 PUSH2 0x10a
0x47 JUMPI
---
0x3e: V23 = 0x72d6ad88
0x43: V24 = EQ 0x72d6ad88 V13
0x44: V25 = 0x10a
0x47: JUMPI 0x10a V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x138]
---
0x48 DUP1
0x49 PUSH4 0x7d01a2ff
0x4e EQ
0x4f PUSH2 0x138
0x52 JUMPI
---
0x49: V26 = 0x7d01a2ff
0x4e: V27 = EQ 0x7d01a2ff V13
0x4f: V28 = 0x138
0x52: JUMPI 0x138 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x14d]
---
0x53 DUP1
0x54 PUSH4 0x89185189
0x59 EQ
0x5a PUSH2 0x14d
0x5d JUMPI
---
0x54: V29 = 0x89185189
0x59: V30 = EQ 0x89185189 V13
0x5a: V31 = 0x14d
0x5d: JUMPI 0x14d V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x16a]
---
0x5e DUP1
0x5f PUSH4 0xa43c7cf1
0x64 EQ
0x65 PUSH2 0x16a
0x68 JUMPI
---
0x5f: V32 = 0xa43c7cf1
0x64: V33 = EQ 0xa43c7cf1 V13
0x65: V34 = 0x16a
0x68: JUMPI 0x16a V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1c6]
---
0x69 DUP1
0x6a PUSH4 0xb2fda38d
0x6f EQ
0x70 PUSH2 0x1c6
0x73 JUMPI
---
0x6a: V35 = 0xb2fda38d
0x6f: V36 = EQ 0xb2fda38d V13
0x70: V37 = 0x1c6
0x73: JUMPI 0x1c6 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1de]
---
0x74 DUP1
0x75 PUSH4 0xb3e0cf7e
0x7a EQ
0x7b PUSH2 0x1de
0x7e JUMPI
---
0x75: V38 = 0xb3e0cf7e
0x7a: V39 = EQ 0xb3e0cf7e V13
0x7b: V40 = 0x1de
0x7e: JUMPI 0x1de V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x21e]
---
0x7f DUP1
0x80 PUSH4 0xc4ec0a8d
0x85 EQ
0x86 PUSH2 0x21e
0x89 JUMPI
---
0x80: V41 = 0xc4ec0a8d
0x85: V42 = EQ 0xc4ec0a8d V13
0x86: V43 = 0x21e
0x89: JUMPI 0x21e V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x23f]
---
0x8a DUP1
0x8b PUSH4 0xce7929b5
0x90 EQ
0x91 PUSH2 0x23f
0x94 JUMPI
---
0x8b: V44 = 0xce7929b5
0x90: V45 = EQ 0xce7929b5 V13
0x91: V46 = 0x23f
0x94: JUMPI 0x23f V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x254]
---
0x95 DUP1
0x96 PUSH4 0xe512e0ac
0x9b EQ
0x9c PUSH2 0x254
0x9f JUMPI
---
0x96: V47 = 0xe512e0ac
0x9b: V48 = EQ 0xe512e0ac V13
0x9c: V49 = 0x254
0x9f: JUMPI 0x254 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xa4]
---
Predecessors: [0x0, 0x95]
Successors: []
---
0xa0 JUMPDEST
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa0: JUMPDEST 
0xa1: V50 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa5
[0xa5:0xac]
---
Predecessors: [0xd]
Successors: [0xad, 0xb1]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 DUP1
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa5: JUMPDEST 
0xa6: V51 = CALLVALUE
0xa8: V52 = ISZERO V51
0xa9: V53 = 0xb1
0xac: JUMPI 0xb1 V52
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V13, V51]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa5]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V54 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V13, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V51]

================================

Block 0xb1
[0xb1:0xc5]
---
Predecessors: [0xa5]
Successors: [0x269]
---
0xb1 JUMPDEST
0xb2 POP
0xb3 PUSH2 0xc6
0xb6 PUSH1 0x1
0xb8 PUSH1 0xa0
0xba PUSH1 0x2
0xbc EXP
0xbd SUB
0xbe PUSH1 0x4
0xc0 CALLDATALOAD
0xc1 AND
0xc2 PUSH2 0x269
0xc5 JUMP
---
0xb1: JUMPDEST 
0xb3: V55 = 0xc6
0xb6: V56 = 0x1
0xb8: V57 = 0xa0
0xba: V58 = 0x2
0xbc: V59 = EXP 0x2 0xa0
0xbd: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V61 = 0x4
0xc0: V62 = CALLDATALOAD 0x4
0xc1: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V64 = 0x269
0xc5: JUMP 0x269
---
Entry stack: [V13, V51]
Stack pops: 1
Stack additions: [0xc6, V63]
Exit stack: [V13, 0xc6, V63]

================================

Block 0xc6
[0xc6:0xc7]
---
Predecessors: [0x340, 0x35b, 0x74b, 0x882, 0x935, 0x9da, 0xc14, 0xc8e]
Successors: []
---
0xc6 JUMPDEST
0xc7 STOP
---
0xc6: JUMPDEST 
0xc7: STOP 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc8
[0xc8:0xcf]
---
Predecessors: [0x27]
Successors: [0xd0, 0xd4]
---
0xc8 JUMPDEST
0xc9 CALLVALUE
0xca DUP1
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc8: JUMPDEST 
0xc9: V65 = CALLVALUE
0xcb: V66 = ISZERO V65
0xcc: V67 = 0xd4
0xcf: JUMPI 0xd4 V66
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V65]
Exit stack: [V13, V65]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc8]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V68 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V13, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V65]

================================

Block 0xd4
[0xd4:0xe2]
---
Predecessors: [0xc8]
Successors: [0x344]
---
0xd4 JUMPDEST
0xd5 POP
0xd6 PUSH2 0xc6
0xd9 PUSH1 0x4
0xdb CALLDATALOAD
0xdc PUSH1 0x0
0xde SIGNEXTEND
0xdf PUSH2 0x344
0xe2 JUMP
---
0xd4: JUMPDEST 
0xd6: V69 = 0xc6
0xd9: V70 = 0x4
0xdb: V71 = CALLDATALOAD 0x4
0xdc: V72 = 0x0
0xde: V73 = SIGNEXTEND 0x0 V71
0xdf: V74 = 0x344
0xe2: JUMP 0x344
---
Entry stack: [V13, V65]
Stack pops: 1
Stack additions: [0xc6, V73]
Exit stack: [V13, 0xc6, V73]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0x32]
Successors: [0xeb, 0xef]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 DUP1
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe3: JUMPDEST 
0xe4: V75 = CALLVALUE
0xe6: V76 = ISZERO V75
0xe7: V77 = 0xef
0xea: JUMPI 0xef V76
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V13, V75]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe3]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V78 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V13, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V75]

================================

Block 0xef
[0xef:0xf7]
---
Predecessors: [0xe3]
Successors: [0x376]
---
0xef JUMPDEST
0xf0 POP
0xf1 PUSH2 0xf8
0xf4 PUSH2 0x376
0xf7 JUMP
---
0xef: JUMPDEST 
0xf1: V79 = 0xf8
0xf4: V80 = 0x376
0xf7: JUMP 0x376
---
Entry stack: [V13, V75]
Stack pops: 1
Stack additions: [0xf8]
Exit stack: [V13, 0xf8]

================================

Block 0xf8
[0xf8:0x109]
---
Predecessors: [0x376, 0x385, 0x9dd]
Successors: []
---
0xf8 JUMPDEST
0xf9 PUSH1 0x40
0xfb DUP1
0xfc MLOAD
0xfd SWAP2
0xfe DUP3
0xff MSTORE
0x100 MLOAD
0x101 SWAP1
0x102 DUP2
0x103 SWAP1
0x104 SUB
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP1
0x109 RETURN
---
0xf8: JUMPDEST 
0xf9: V81 = 0x40
0xfc: V82 = M[0x40]
0xff: M[V82] = S0
0x100: V83 = M[0x40]
0x104: V84 = SUB V82 V83
0x105: V85 = 0x20
0x107: V86 = ADD 0x20 V84
0x109: RETURN V83 V86
---
Entry stack: [V13, 0xf8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf8]

================================

Block 0x10a
[0x10a:0x111]
---
Predecessors: [0x3d]
Successors: [0x112, 0x116]
---
0x10a JUMPDEST
0x10b CALLVALUE
0x10c DUP1
0x10d ISZERO
0x10e PUSH2 0x116
0x111 JUMPI
---
0x10a: JUMPDEST 
0x10b: V87 = CALLVALUE
0x10d: V88 = ISZERO V87
0x10e: V89 = 0x116
0x111: JUMPI 0x116 V88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V13, V87]

================================

Block 0x112
[0x112:0x115]
---
Predecessors: [0x10a]
Successors: []
---
0x112 PUSH1 0x0
0x114 DUP1
0x115 REVERT
---
0x112: V90 = 0x0
0x115: REVERT 0x0 0x0
---
Entry stack: [V13, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V87]

================================

Block 0x116
[0x116:0x11e]
---
Predecessors: [0x10a]
Successors: [0x37c]
---
0x116 JUMPDEST
0x117 POP
0x118 PUSH2 0x11f
0x11b PUSH2 0x37c
0x11e JUMP
---
0x116: JUMPDEST 
0x118: V91 = 0x11f
0x11b: V92 = 0x37c
0x11e: JUMP 0x37c
---
Entry stack: [V13, V87]
Stack pops: 1
Stack additions: [0x11f]
Exit stack: [V13, 0x11f]

================================

Block 0x11f
[0x11f:0x137]
---
Predecessors: [0x37c]
Successors: []
---
0x11f JUMPDEST
0x120 PUSH1 0x40
0x122 DUP1
0x123 MLOAD
0x124 PUSH1 0x0
0x126 SWAP3
0x127 DUP4
0x128 SIGNEXTEND
0x129 SWAP1
0x12a SWAP3
0x12b SIGNEXTEND
0x12c DUP3
0x12d MSTORE
0x12e MLOAD
0x12f SWAP1
0x130 DUP2
0x131 SWAP1
0x132 SUB
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 RETURN
---
0x11f: JUMPDEST 
0x120: V93 = 0x40
0x123: V94 = M[0x40]
0x124: V95 = 0x0
0x128: V96 = SIGNEXTEND 0x0 V320
0x12b: V97 = SIGNEXTEND 0x0 V96
0x12d: M[V94] = V97
0x12e: V98 = M[0x40]
0x132: V99 = SUB V94 V98
0x133: V100 = 0x20
0x135: V101 = ADD 0x20 V99
0x137: RETURN V98 V101
---
Entry stack: [V13, 0x11f, V320]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x11f]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x48]
Successors: [0x140, 0x144]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x138: JUMPDEST 
0x139: V102 = CALLVALUE
0x13b: V103 = ISZERO V102
0x13c: V104 = 0x144
0x13f: JUMPI 0x144 V103
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V13, V102]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x138]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V105 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V13, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V102]

================================

Block 0x144
[0x144:0x14c]
---
Predecessors: [0x138]
Successors: [0x385]
---
0x144 JUMPDEST
0x145 POP
0x146 PUSH2 0xf8
0x149 PUSH2 0x385
0x14c JUMP
---
0x144: JUMPDEST 
0x146: V106 = 0xf8
0x149: V107 = 0x385
0x14c: JUMP 0x385
---
Entry stack: [V13, V102]
Stack pops: 1
Stack additions: [0xf8]
Exit stack: [V13, 0xf8]

================================

Block 0x14d
[0x14d:0x169]
---
Predecessors: [0x53]
Successors: [0x38b]
---
0x14d JUMPDEST
0x14e PUSH2 0xc6
0x151 PUSH1 0x4
0x153 CALLDATALOAD
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c PUSH1 0x24
0x15e CALLDATALOAD
0x15f DUP2
0x160 AND
0x161 SWAP1
0x162 PUSH1 0x44
0x164 CALLDATALOAD
0x165 AND
0x166 PUSH2 0x38b
0x169 JUMP
---
0x14d: JUMPDEST 
0x14e: V108 = 0xc6
0x151: V109 = 0x4
0x153: V110 = CALLDATALOAD 0x4
0x154: V111 = 0x1
0x156: V112 = 0xa0
0x158: V113 = 0x2
0x15a: V114 = EXP 0x2 0xa0
0x15b: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V116 = 0x24
0x15e: V117 = CALLDATALOAD 0x24
0x160: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x162: V119 = 0x44
0x164: V120 = CALLDATALOAD 0x44
0x165: V121 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x166: V122 = 0x38b
0x169: JUMP 0x38b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc6, V110, V118, V121]
Exit stack: [V13, 0xc6, V110, V118, V121]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x5e]
Successors: [0x172, 0x176]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c DUP1
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x16a: JUMPDEST 
0x16b: V123 = CALLVALUE
0x16d: V124 = ISZERO V123
0x16e: V125 = 0x176
0x171: JUMPI 0x176 V124
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V123]
Exit stack: [V13, V123]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x16a]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V126 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V13, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V123]

================================

Block 0x176
[0x176:0x17e]
---
Predecessors: [0x16a]
Successors: [0x759]
---
0x176 JUMPDEST
0x177 POP
0x178 PUSH2 0x17f
0x17b PUSH2 0x759
0x17e JUMP
---
0x176: JUMPDEST 
0x178: V127 = 0x17f
0x17b: V128 = 0x759
0x17e: JUMP 0x759
---
Entry stack: [V13, V123]
Stack pops: 1
Stack additions: [0x17f]
Exit stack: [V13, 0x17f]

================================

Block 0x17f
[0x17f:0x1c5]
---
Predecessors: [0x77b]
Successors: []
---
0x17f JUMPDEST
0x180 PUSH1 0x40
0x182 DUP1
0x183 MLOAD
0x184 PUSH1 0x1
0x186 SWAP8
0x187 DUP9
0x188 SIGNEXTEND
0x189 SWAP1
0x18a SWAP8
0x18b SIGNEXTEND
0x18c DUP8
0x18d MSTORE
0x18e PUSH1 0x1
0x190 PUSH1 0xa0
0x192 PUSH1 0x2
0x194 EXP
0x195 SUB
0x196 SWAP6
0x197 DUP7
0x198 AND
0x199 PUSH1 0x20
0x19b DUP9
0x19c ADD
0x19d MSTORE
0x19e SWAP4
0x19f DUP6
0x1a0 AND
0x1a1 DUP7
0x1a2 DUP6
0x1a3 ADD
0x1a4 MSTORE
0x1a5 SWAP2
0x1a6 DUP5
0x1a7 AND
0x1a8 PUSH1 0x60
0x1aa DUP7
0x1ab ADD
0x1ac MSTORE
0x1ad DUP4
0x1ae AND
0x1af PUSH1 0x80
0x1b1 DUP6
0x1b2 ADD
0x1b3 MSTORE
0x1b4 SWAP1
0x1b5 SWAP2
0x1b6 AND
0x1b7 PUSH1 0xa0
0x1b9 DUP4
0x1ba ADD
0x1bb MSTORE
0x1bc MLOAD
0x1bd SWAP1
0x1be DUP2
0x1bf SWAP1
0x1c0 SUB
0x1c1 PUSH1 0xc0
0x1c3 ADD
0x1c4 SWAP1
0x1c5 RETURN
---
0x17f: JUMPDEST 
0x180: V129 = 0x40
0x183: V130 = M[0x40]
0x184: V131 = 0x1
0x188: V132 = SIGNEXTEND 0x1 V632
0x18b: V133 = SIGNEXTEND 0x1 V132
0x18d: M[V130] = V133
0x18e: V134 = 0x1
0x190: V135 = 0xa0
0x192: V136 = 0x2
0x194: V137 = EXP 0x2 0xa0
0x195: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0x199: V140 = 0x20
0x19c: V141 = ADD V130 0x20
0x19d: M[V141] = V139
0x1a0: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0x1a3: V143 = ADD 0x40 V130
0x1a4: M[V143] = V142
0x1a7: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x1a8: V145 = 0x60
0x1ab: V146 = ADD V130 0x60
0x1ac: M[V146] = V144
0x1ae: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x1af: V148 = 0x80
0x1b2: V149 = ADD V130 0x80
0x1b3: M[V149] = V147
0x1b6: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x1b7: V151 = 0xa0
0x1ba: V152 = ADD V130 0xa0
0x1bb: M[V152] = V150
0x1bc: V153 = M[0x40]
0x1c0: V154 = SUB V130 V153
0x1c1: V155 = 0xc0
0x1c3: V156 = ADD 0xc0 V154
0x1c5: RETURN V153 V156
---
Entry stack: [V13, V632, V654, V656, V658, V660, V662]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c6
[0x1c6:0x1cd]
---
Predecessors: [0x69]
Successors: [0x1ce, 0x1d2]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 DUP1
0x1c9 ISZERO
0x1ca PUSH2 0x1d2
0x1cd JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V157 = CALLVALUE
0x1c9: V158 = ISZERO V157
0x1ca: V159 = 0x1d2
0x1cd: JUMPI 0x1d2 V158
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V157]
Exit stack: [V13, V157]

================================

Block 0x1ce
[0x1ce:0x1d1]
---
Predecessors: [0x1c6]
Successors: []
---
0x1ce PUSH1 0x0
0x1d0 DUP1
0x1d1 REVERT
---
0x1ce: V160 = 0x0
0x1d1: REVERT 0x0 0x0
---
Entry stack: [V13, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V157]

================================

Block 0x1d2
[0x1d2:0x1dd]
---
Predecessors: [0x1c6]
Successors: [0x86b]
---
0x1d2 JUMPDEST
0x1d3 POP
0x1d4 PUSH2 0xc6
0x1d7 PUSH1 0x4
0x1d9 CALLDATALOAD
0x1da PUSH2 0x86b
0x1dd JUMP
---
0x1d2: JUMPDEST 
0x1d4: V161 = 0xc6
0x1d7: V162 = 0x4
0x1d9: V163 = CALLDATALOAD 0x4
0x1da: V164 = 0x86b
0x1dd: JUMP 0x86b
---
Entry stack: [V13, V157]
Stack pops: 1
Stack additions: [0xc6, V163]
Exit stack: [V13, 0xc6, V163]

================================

Block 0x1de
[0x1de:0x1e5]
---
Predecessors: [0x74]
Successors: [0x1e6, 0x1ea]
---
0x1de JUMPDEST
0x1df CALLVALUE
0x1e0 DUP1
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1de: JUMPDEST 
0x1df: V165 = CALLVALUE
0x1e1: V166 = ISZERO V165
0x1e2: V167 = 0x1ea
0x1e5: JUMPI 0x1ea V166
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V165]
Exit stack: [V13, V165]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1de]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V168 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V13, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V165]

================================

Block 0x1ea
[0x1ea:0x1f5]
---
Predecessors: [0x1de]
Successors: [0x887]
---
0x1ea JUMPDEST
0x1eb POP
0x1ec PUSH2 0x1f6
0x1ef PUSH1 0x4
0x1f1 CALLDATALOAD
0x1f2 PUSH2 0x887
0x1f5 JUMP
---
0x1ea: JUMPDEST 
0x1ec: V169 = 0x1f6
0x1ef: V170 = 0x4
0x1f1: V171 = CALLDATALOAD 0x4
0x1f2: V172 = 0x887
0x1f5: JUMP 0x887
---
Entry stack: [V13, V165]
Stack pops: 1
Stack additions: [0x1f6, V171]
Exit stack: [V13, 0x1f6, V171]

================================

Block 0x1f6
[0x1f6:0x21d]
---
Predecessors: [0x887]
Successors: []
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x40
0x1f9 DUP1
0x1fa MLOAD
0x1fb PUSH1 0x1
0x1fd SWAP4
0x1fe DUP5
0x1ff SIGNEXTEND
0x200 SWAP1
0x201 SWAP4
0x202 SIGNEXTEND
0x203 DUP4
0x204 MSTORE
0x205 PUSH1 0x1
0x207 PUSH1 0xa0
0x209 PUSH1 0x2
0x20b EXP
0x20c SUB
0x20d SWAP1
0x20e SWAP2
0x20f AND
0x210 PUSH1 0x20
0x212 DUP4
0x213 ADD
0x214 MSTORE
0x215 DUP1
0x216 MLOAD
0x217 SWAP2
0x218 DUP3
0x219 SWAP1
0x21a SUB
0x21b ADD
0x21c SWAP1
0x21d RETURN
---
0x1f6: JUMPDEST 
0x1f7: V173 = 0x40
0x1fa: V174 = M[0x40]
0x1fb: V175 = 0x1
0x1ff: V176 = SIGNEXTEND 0x1 V682
0x202: V177 = SIGNEXTEND 0x1 V176
0x204: M[V174] = V177
0x205: V178 = 0x1
0x207: V179 = 0xa0
0x209: V180 = 0x2
0x20b: V181 = EXP 0x2 0xa0
0x20c: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20f: V183 = AND V690 0xffffffffffffffffffffffffffffffffffffffff
0x210: V184 = 0x20
0x213: V185 = ADD V174 0x20
0x214: M[V185] = V183
0x216: V186 = M[0x40]
0x21a: V187 = SUB V174 V186
0x21b: V188 = ADD V187 0x40
0x21d: RETURN V186 V188
---
Entry stack: [V13, 0x1f6, V682, V690]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x1f6]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x7f]
Successors: [0x226, 0x22a]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 DUP1
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x21e: JUMPDEST 
0x21f: V189 = CALLVALUE
0x221: V190 = ISZERO V189
0x222: V191 = 0x22a
0x225: JUMPI 0x22a V190
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V189]
Exit stack: [V13, V189]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x21e]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V192 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V13, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V189]

================================

Block 0x22a
[0x22a:0x23e]
---
Predecessors: [0x21e]
Successors: [0x8b0]
---
0x22a JUMPDEST
0x22b POP
0x22c PUSH2 0xc6
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 PUSH1 0x4
0x239 CALLDATALOAD
0x23a AND
0x23b PUSH2 0x8b0
0x23e JUMP
---
0x22a: JUMPDEST 
0x22c: V193 = 0xc6
0x22f: V194 = 0x1
0x231: V195 = 0xa0
0x233: V196 = 0x2
0x235: V197 = EXP 0x2 0xa0
0x236: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x237: V199 = 0x4
0x239: V200 = CALLDATALOAD 0x4
0x23a: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V202 = 0x8b0
0x23e: JUMP 0x8b0
---
Entry stack: [V13, V189]
Stack pops: 1
Stack additions: [0xc6, V201]
Exit stack: [V13, 0xc6, V201]

================================

Block 0x23f
[0x23f:0x246]
---
Predecessors: [0x8a]
Successors: [0x247, 0x24b]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 DUP1
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x23f: JUMPDEST 
0x240: V203 = CALLVALUE
0x242: V204 = ISZERO V203
0x243: V205 = 0x24b
0x246: JUMPI 0x24b V204
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V203]
Exit stack: [V13, V203]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x23f]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V206 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V13, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V203]

================================

Block 0x24b
[0x24b:0x253]
---
Predecessors: [0x23f]
Successors: [0x9ad]
---
0x24b JUMPDEST
0x24c POP
0x24d PUSH2 0xc6
0x250 PUSH2 0x9ad
0x253 JUMP
---
0x24b: JUMPDEST 
0x24d: V207 = 0xc6
0x250: V208 = 0x9ad
0x253: JUMP 0x9ad
---
Entry stack: [V13, V203]
Stack pops: 1
Stack additions: [0xc6]
Exit stack: [V13, 0xc6]

================================

Block 0x254
[0x254:0x25b]
---
Predecessors: [0x95]
Successors: [0x25c, 0x260]
---
0x254 JUMPDEST
0x255 CALLVALUE
0x256 DUP1
0x257 ISZERO
0x258 PUSH2 0x260
0x25b JUMPI
---
0x254: JUMPDEST 
0x255: V209 = CALLVALUE
0x257: V210 = ISZERO V209
0x258: V211 = 0x260
0x25b: JUMPI 0x260 V210
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V13, V209]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x254]
Successors: []
---
0x25c PUSH1 0x0
0x25e DUP1
0x25f REVERT
---
0x25c: V212 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V13, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V209]

================================

Block 0x260
[0x260:0x268]
---
Predecessors: [0x254]
Successors: [0x9dd]
---
0x260 JUMPDEST
0x261 POP
0x262 PUSH2 0xf8
0x265 PUSH2 0x9dd
0x268 JUMP
---
0x260: JUMPDEST 
0x262: V213 = 0xf8
0x265: V214 = 0x9dd
0x268: JUMP 0x9dd
---
Entry stack: [V13, V209]
Stack pops: 1
Stack additions: [0xf8]
Exit stack: [V13, 0xf8]

================================

Block 0x269
[0x269:0x27c]
---
Predecessors: [0xb1]
Successors: [0x27d, 0x281]
---
0x269 JUMPDEST
0x26a PUSH1 0x0
0x26c DUP1
0x26d SLOAD
0x26e PUSH1 0x1
0x270 PUSH1 0xa0
0x272 PUSH1 0x2
0x274 EXP
0x275 SUB
0x276 AND
0x277 CALLER
0x278 EQ
0x279 PUSH2 0x281
0x27c JUMPI
---
0x269: JUMPDEST 
0x26a: V215 = 0x0
0x26d: V216 = S[0x0]
0x26e: V217 = 0x1
0x270: V218 = 0xa0
0x272: V219 = 0x2
0x274: V220 = EXP 0x2 0xa0
0x275: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x276: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x277: V223 = CALLER
0x278: V224 = EQ V223 V222
0x279: V225 = 0x281
0x27c: JUMPI 0x281 V224
---
Entry stack: [V13, 0xc6, V63]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xc6, V63, 0x0]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x269]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V226 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V63, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V63, 0x0]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x269]
Successors: [0x285]
---
0x281 JUMPDEST
0x282 POP
0x283 PUSH1 0x0
---
0x281: JUMPDEST 
0x283: V227 = 0x0
---
Entry stack: [V13, 0xc6, V63, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0xc6, V63, 0x0]

================================

Block 0x285
[0x285:0x28f]
---
Predecessors: [0x281, 0x338]
Successors: [0x290, 0x340]
---
0x285 JUMPDEST
0x286 PUSH1 0x2
0x288 SLOAD
0x289 DUP2
0x28a LT
0x28b ISZERO
0x28c PUSH2 0x340
0x28f JUMPI
---
0x285: JUMPDEST 
0x286: V228 = 0x2
0x288: V229 = S[0x2]
0x28a: V230 = LT S0 V229
0x28b: V231 = ISZERO V230
0x28c: V232 = 0x340
0x28f: JUMPI 0x340 V231
---
Entry stack: [V13, 0xc6, V63, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xc6, V63, S0]

================================

Block 0x290
[0x290:0x2b7]
---
Predecessors: [0x285]
Successors: [0x2b8, 0x338]
---
0x290 PUSH1 0x0
0x292 DUP2
0x293 DUP2
0x294 MSTORE
0x295 PUSH1 0x1
0x297 PUSH1 0x20
0x299 MSTORE
0x29a PUSH1 0x40
0x29c SWAP1
0x29d SHA3
0x29e SLOAD
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 DUP4
0x2a8 DUP2
0x2a9 AND
0x2aa PUSH3 0x10000
0x2ae SWAP1
0x2af SWAP3
0x2b0 DIV
0x2b1 AND
0x2b2 EQ
0x2b3 ISZERO
0x2b4 PUSH2 0x338
0x2b7 JUMPI
---
0x290: V233 = 0x0
0x294: M[0x0] = S0
0x295: V234 = 0x1
0x297: V235 = 0x20
0x299: M[0x20] = 0x1
0x29a: V236 = 0x40
0x29d: V237 = SHA3 0x0 0x40
0x29e: V238 = S[V237]
0x29f: V239 = 0x1
0x2a1: V240 = 0xa0
0x2a3: V241 = 0x2
0x2a5: V242 = EXP 0x2 0xa0
0x2a6: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a9: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x2aa: V245 = 0x10000
0x2b0: V246 = DIV V238 0x10000
0x2b1: V247 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V248 = EQ V247 V244
0x2b3: V249 = ISZERO V248
0x2b4: V250 = 0x338
0x2b7: JUMPI 0x338 V249
---
Entry stack: [V13, 0xc6, V63, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xc6, V63, S0]

================================

Block 0x2b8
[0x2b8:0x337]
---
Predecessors: [0x290]
Successors: [0x340]
---
0x2b8 PUSH1 0x2
0x2ba DUP1
0x2bb SLOAD
0x2bc PUSH1 0x0
0x2be SWAP1
0x2bf DUP2
0x2c0 MSTORE
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0x20
0x2c5 DUP2
0x2c6 SWAP1
0x2c7 MSTORE
0x2c8 PUSH1 0x40
0x2ca DUP1
0x2cb DUP4
0x2cc SHA3
0x2cd SLOAD
0x2ce DUP6
0x2cf DUP5
0x2d0 MSTORE
0x2d1 DUP2
0x2d2 DUP5
0x2d3 SHA3
0x2d4 DUP1
0x2d5 SLOAD
0x2d6 PUSH1 0x1
0x2d8 PUSH1 0xa0
0x2da PUSH1 0x2
0x2dc EXP
0x2dd SUB
0x2de PUSH3 0x10000
0x2e2 SWAP4
0x2e3 DUP5
0x2e4 SWAP1
0x2e5 DIV
0x2e6 AND
0x2e7 SWAP1
0x2e8 SWAP3
0x2e9 MUL
0x2ea PUSH22 0xffffffffffffffffffffffffffffffffffffffff0000
0x301 NOT
0x302 SWAP1
0x303 SWAP3
0x304 AND
0x305 SWAP2
0x306 SWAP1
0x307 SWAP2
0x308 OR
0x309 DUP1
0x30a DUP3
0x30b SSTORE
0x30c DUP6
0x30d SLOAD
0x30e DUP6
0x30f MSTORE
0x310 SWAP2
0x311 DUP5
0x312 SHA3
0x313 SLOAD
0x314 SWAP4
0x315 DUP7
0x316 SWAP1
0x317 MSTORE
0x318 SWAP3
0x319 DUP3
0x31a SIGNEXTEND
0x31b SWAP1
0x31c SWAP2
0x31d SIGNEXTEND
0x31e PUSH2 0xffff
0x321 AND
0x322 PUSH2 0xffff
0x325 NOT
0x326 SWAP1
0x327 SWAP2
0x328 AND
0x329 OR
0x32a SWAP1
0x32b SSTORE
0x32c DUP1
0x32d SLOAD
0x32e PUSH1 0x0
0x330 NOT
0x331 ADD
0x332 SWAP1
0x333 SSTORE
0x334 PUSH2 0x340
0x337 JUMP
---
0x2b8: V251 = 0x2
0x2bb: V252 = S[0x2]
0x2bc: V253 = 0x0
0x2c0: M[0x0] = V252
0x2c1: V254 = 0x1
0x2c3: V255 = 0x20
0x2c7: M[0x20] = 0x1
0x2c8: V256 = 0x40
0x2cc: V257 = SHA3 0x0 0x40
0x2cd: V258 = S[V257]
0x2d0: M[0x0] = S0
0x2d3: V259 = SHA3 0x0 0x40
0x2d5: V260 = S[V259]
0x2d6: V261 = 0x1
0x2d8: V262 = 0xa0
0x2da: V263 = 0x2
0x2dc: V264 = EXP 0x2 0xa0
0x2dd: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2de: V266 = 0x10000
0x2e5: V267 = DIV V258 0x10000
0x2e6: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V269 = MUL 0x10000 V268
0x2ea: V270 = 0xffffffffffffffffffffffffffffffffffffffff0000
0x301: V271 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x304: V272 = AND V260 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff
0x308: V273 = OR V272 V269
0x30b: S[V259] = V273
0x30d: V274 = S[0x2]
0x30f: M[0x0] = V274
0x312: V275 = SHA3 0x0 0x40
0x313: V276 = S[V275]
0x317: M[0x0] = S0
0x31a: V277 = SIGNEXTEND 0x1 V276
0x31d: V278 = SIGNEXTEND 0x1 V277
0x31e: V279 = 0xffff
0x321: V280 = AND 0xffff V278
0x322: V281 = 0xffff
0x325: V282 = NOT 0xffff
0x328: V283 = AND V273 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x329: V284 = OR V283 V280
0x32b: S[V259] = V284
0x32d: V285 = S[0x2]
0x32e: V286 = 0x0
0x330: V287 = NOT 0x0
0x331: V288 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V285
0x333: S[0x2] = V288
0x334: V289 = 0x340
0x337: JUMP 0x340
---
Entry stack: [V13, 0xc6, V63, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xc6, V63, S0]

================================

Block 0x338
[0x338:0x33f]
---
Predecessors: [0x290]
Successors: [0x285]
---
0x338 JUMPDEST
0x339 PUSH1 0x1
0x33b ADD
0x33c PUSH2 0x285
0x33f JUMP
---
0x338: JUMPDEST 
0x339: V290 = 0x1
0x33b: V291 = ADD 0x1 S0
0x33c: V292 = 0x285
0x33f: JUMP 0x285
---
Entry stack: [V13, 0xc6, V63, S0]
Stack pops: 1
Stack additions: [V291]
Exit stack: [V13, 0xc6, V63, V291]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x285, 0x2b8]
Successors: [0xc6]
---
0x340 JUMPDEST
0x341 POP
0x342 POP
0x343 JUMP
---
0x340: JUMPDEST 
0x343: JUMP 0xc6
---
Entry stack: [V13, 0xc6, V63, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x344
[0x344:0x356]
---
Predecessors: [0xd4]
Successors: [0x357, 0x35b]
---
0x344 JUMPDEST
0x345 PUSH1 0x0
0x347 SLOAD
0x348 PUSH1 0x1
0x34a PUSH1 0xa0
0x34c PUSH1 0x2
0x34e EXP
0x34f SUB
0x350 AND
0x351 CALLER
0x352 EQ
0x353 PUSH2 0x35b
0x356 JUMPI
---
0x344: JUMPDEST 
0x345: V293 = 0x0
0x347: V294 = S[0x0]
0x348: V295 = 0x1
0x34a: V296 = 0xa0
0x34c: V297 = 0x2
0x34e: V298 = EXP 0x2 0xa0
0x34f: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x351: V301 = CALLER
0x352: V302 = EQ V301 V300
0x353: V303 = 0x35b
0x356: JUMPI 0x35b V302
---
Entry stack: [V13, 0xc6, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V73]

================================

Block 0x357
[0x357:0x35a]
---
Predecessors: [0x344]
Successors: []
---
0x357 PUSH1 0x0
0x359 DUP1
0x35a REVERT
---
0x357: V304 = 0x0
0x35a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V73]

================================

Block 0x35b
[0x35b:0x375]
---
Predecessors: [0x344]
Successors: [0xc6]
---
0x35b JUMPDEST
0x35c PUSH1 0x4
0x35e DUP1
0x35f SLOAD
0x360 PUSH1 0x0
0x362 SWAP3
0x363 SWAP1
0x364 SWAP3
0x365 SIGNEXTEND
0x366 PUSH1 0xff
0x368 AND
0x369 PUSH1 0xff
0x36b NOT
0x36c SWAP1
0x36d SWAP3
0x36e AND
0x36f SWAP2
0x370 SWAP1
0x371 SWAP2
0x372 OR
0x373 SWAP1
0x374 SSTORE
0x375 JUMP
---
0x35b: JUMPDEST 
0x35c: V305 = 0x4
0x35f: V306 = S[0x4]
0x360: V307 = 0x0
0x365: V308 = SIGNEXTEND 0x0 V73
0x366: V309 = 0xff
0x368: V310 = AND 0xff V308
0x369: V311 = 0xff
0x36b: V312 = NOT 0xff
0x36e: V313 = AND V306 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x372: V314 = OR V313 V310
0x374: S[0x4] = V314
0x375: JUMP 0xc6
---
Entry stack: [V13, 0xc6, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x376
[0x376:0x37b]
---
Predecessors: [0xef]
Successors: [0xf8]
---
0x376 JUMPDEST
0x377 PUSH1 0x3
0x379 SLOAD
0x37a DUP2
0x37b JUMP
---
0x376: JUMPDEST 
0x377: V315 = 0x3
0x379: V316 = S[0x3]
0x37b: JUMP 0xf8
---
Entry stack: [V13, 0xf8]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V13, 0xf8, V316]

================================

Block 0x37c
[0x37c:0x384]
---
Predecessors: [0x116]
Successors: [0x11f]
---
0x37c JUMPDEST
0x37d PUSH1 0x4
0x37f SLOAD
0x380 PUSH1 0x0
0x382 SIGNEXTEND
0x383 DUP2
0x384 JUMP
---
0x37c: JUMPDEST 
0x37d: V317 = 0x4
0x37f: V318 = S[0x4]
0x380: V319 = 0x0
0x382: V320 = SIGNEXTEND 0x0 V318
0x384: JUMP 0x11f
---
Entry stack: [V13, 0x11f]
Stack pops: 1
Stack additions: [S0, V320]
Exit stack: [V13, 0x11f, V320]

================================

Block 0x385
[0x385:0x38a]
---
Predecessors: [0x144]
Successors: [0xf8]
---
0x385 JUMPDEST
0x386 PUSH1 0x5
0x388 SLOAD
0x389 DUP2
0x38a JUMP
---
0x385: JUMPDEST 
0x386: V321 = 0x5
0x388: V322 = S[0x5]
0x38a: JUMP 0xf8
---
Entry stack: [V13, 0xf8]
Stack pops: 1
Stack additions: [S0, V322]
Exit stack: [V13, 0xf8, V322]

================================

Block 0x38b
[0x38b:0x3a5]
---
Predecessors: [0x14d]
Successors: [0x3a6, 0x3aa]
---
0x38b JUMPDEST
0x38c PUSH1 0x0
0x38e DUP1
0x38f DUP1
0x390 DUP1
0x391 DUP1
0x392 DUP1
0x393 DUP1
0x394 DUP1
0x395 DUP1
0x396 PUSH8 0x16345785d8a0000
0x39f CALLVALUE
0x3a0 GT
0x3a1 ISZERO
0x3a2 PUSH2 0x3aa
0x3a5 JUMPI
---
0x38b: JUMPDEST 
0x38c: V323 = 0x0
0x396: V324 = 0x16345785d8a0000
0x39f: V325 = CALLVALUE
0x3a0: V326 = GT V325 0x16345785d8a0000
0x3a1: V327 = ISZERO V326
0x3a2: V328 = 0x3aa
0x3a5: JUMPI 0x3aa V327
---
Entry stack: [V13, 0xc6, V110, V118, V121]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0xc6, V110, V118, V121, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3a6
[0x3a6:0x3a9]
---
Predecessors: [0x38b]
Successors: []
---
0x3a6 PUSH1 0x0
0x3a8 DUP1
0x3a9 REVERT
---
0x3a6: V329 = 0x0
0x3a9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V110, V118, V121, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3aa
[0x3aa:0x3e9]
---
Predecessors: [0x38b]
Successors: [0x3ea, 0x3ee]
---
0x3aa JUMPDEST
0x3ab DUP11
0x3ac SWAP9
0x3ad POP
0x3ae PUSH1 0x5
0x3b0 SLOAD
0x3b1 DUP10
0x3b2 PUSH1 0x1
0x3b4 PUSH1 0xa0
0x3b6 PUSH1 0x2
0x3b8 EXP
0x3b9 SUB
0x3ba AND
0x3bb PUSH4 0xd87574e0
0x3c0 PUSH1 0x40
0x3c2 MLOAD
0x3c3 DUP2
0x3c4 PUSH4 0xffffffff
0x3c9 AND
0x3ca PUSH1 0xe0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf MUL
0x3d0 DUP2
0x3d1 MSTORE
0x3d2 PUSH1 0x4
0x3d4 ADD
0x3d5 PUSH1 0x20
0x3d7 PUSH1 0x40
0x3d9 MLOAD
0x3da DUP1
0x3db DUP4
0x3dc SUB
0x3dd DUP2
0x3de PUSH1 0x0
0x3e0 DUP8
0x3e1 DUP1
0x3e2 EXTCODESIZE
0x3e3 ISZERO
0x3e4 DUP1
0x3e5 ISZERO
0x3e6 PUSH2 0x3ee
0x3e9 JUMPI
---
0x3aa: JUMPDEST 
0x3ae: V330 = 0x5
0x3b0: V331 = S[0x5]
0x3b2: V332 = 0x1
0x3b4: V333 = 0xa0
0x3b6: V334 = 0x2
0x3b8: V335 = EXP 0x2 0xa0
0x3b9: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ba: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x3bb: V338 = 0xd87574e0
0x3c0: V339 = 0x40
0x3c2: V340 = M[0x40]
0x3c4: V341 = 0xffffffff
0x3c9: V342 = AND 0xffffffff 0xd87574e0
0x3ca: V343 = 0xe0
0x3cc: V344 = 0x2
0x3ce: V345 = EXP 0x2 0xe0
0x3cf: V346 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x3d1: M[V340] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x3d2: V347 = 0x4
0x3d4: V348 = ADD 0x4 V340
0x3d5: V349 = 0x20
0x3d7: V350 = 0x40
0x3d9: V351 = M[0x40]
0x3dc: V352 = SUB V348 V351
0x3de: V353 = 0x0
0x3e2: V354 = EXTCODESIZE V337
0x3e3: V355 = ISZERO V354
0x3e5: V356 = ISZERO V355
0x3e6: V357 = 0x3ee
0x3e9: JUMPI 0x3ee V356
---
Entry stack: [V13, 0xc6, V110, V118, V121, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S10, S7, S6, S5, S4, S3, S2, S1, S0, V331, V337, 0xd87574e0, V348, 0x20, V351, V352, V351, 0x0, V337, V355]
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V337, 0xd87574e0, V348, 0x20, V351, V352, V351, 0x0, V337, V355]

================================

Block 0x3ea
[0x3ea:0x3ed]
---
Predecessors: [0x3aa]
Successors: []
---
0x3ea PUSH1 0x0
0x3ec DUP1
0x3ed REVERT
---
0x3ea: V358 = 0x0
0x3ed: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V337, 0xd87574e0, V348, 0x20, V351, V352, V351, 0x0, V337, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V337, 0xd87574e0, V348, 0x20, V351, V352, V351, 0x0, V337, V355]

================================

Block 0x3ee
[0x3ee:0x3f8]
---
Predecessors: [0x3aa]
Successors: [0x3f9, 0x402]
---
0x3ee JUMPDEST
0x3ef POP
0x3f0 GAS
0x3f1 CALL
0x3f2 ISZERO
0x3f3 DUP1
0x3f4 ISZERO
0x3f5 PUSH2 0x402
0x3f8 JUMPI
---
0x3ee: JUMPDEST 
0x3f0: V359 = GAS
0x3f1: V360 = CALL V359 V337 0x0 V351 V352 V351 0x20
0x3f2: V361 = ISZERO V360
0x3f4: V362 = ISZERO V361
0x3f5: V363 = 0x402
0x3f8: JUMPI 0x402 V362
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V337, 0xd87574e0, V348, 0x20, V351, V352, V351, 0x0, V337, V355]
Stack pops: 7
Stack additions: [V361]
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V337, 0xd87574e0, V348, V361]

================================

Block 0x3f9
[0x3f9:0x401]
---
Predecessors: [0x3ee]
Successors: []
---
0x3f9 RETURNDATASIZE
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd RETURNDATACOPY
0x3fe RETURNDATASIZE
0x3ff PUSH1 0x0
0x401 REVERT
---
0x3f9: V364 = RETURNDATASIZE
0x3fa: V365 = 0x0
0x3fd: RETURNDATACOPY 0x0 0x0 V364
0x3fe: V366 = RETURNDATASIZE
0x3ff: V367 = 0x0
0x401: REVERT 0x0 V366
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V337, 0xd87574e0, V348, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V337, 0xd87574e0, V348, V361]

================================

Block 0x402
[0x402:0x413]
---
Predecessors: [0x3ee]
Successors: [0x414, 0x418]
---
0x402 JUMPDEST
0x403 POP
0x404 POP
0x405 POP
0x406 POP
0x407 PUSH1 0x40
0x409 MLOAD
0x40a RETURNDATASIZE
0x40b PUSH1 0x20
0x40d DUP2
0x40e LT
0x40f ISZERO
0x410 PUSH2 0x418
0x413 JUMPI
---
0x402: JUMPDEST 
0x407: V368 = 0x40
0x409: V369 = M[0x40]
0x40a: V370 = RETURNDATASIZE
0x40b: V371 = 0x20
0x40e: V372 = LT V370 0x20
0x40f: V373 = ISZERO V372
0x410: V374 = 0x418
0x413: JUMPI 0x418 V373
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V337, 0xd87574e0, V348, V361]
Stack pops: 4
Stack additions: [V369, V370]
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V369, V370]

================================

Block 0x414
[0x414:0x417]
---
Predecessors: [0x402]
Successors: []
---
0x414 PUSH1 0x0
0x416 DUP1
0x417 REVERT
---
0x414: V375 = 0x0
0x417: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V369, V370]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V369, V370]

================================

Block 0x418
[0x418:0x420]
---
Predecessors: [0x402]
Successors: [0x421, 0x425]
---
0x418 JUMPDEST
0x419 POP
0x41a MLOAD
0x41b LT
0x41c ISZERO
0x41d PUSH2 0x425
0x420 JUMPI
---
0x418: JUMPDEST 
0x41a: V376 = M[V369]
0x41b: V377 = LT V376 V331
0x41c: V378 = ISZERO V377
0x41d: V379 = 0x425
0x420: JUMPI 0x425 V378
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V331, V369, V370]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x421
[0x421:0x424]
---
Predecessors: [0x418]
Successors: []
---
0x421 PUSH1 0x0
0x423 DUP1
0x424 REVERT
---
0x421: V380 = 0x0
0x424: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x425
[0x425:0x45e]
---
Predecessors: [0x418]
Successors: [0x45f, 0x463]
---
0x425 JUMPDEST
0x426 DUP9
0x427 PUSH1 0x1
0x429 PUSH1 0xa0
0x42b PUSH1 0x2
0x42d EXP
0x42e SUB
0x42f AND
0x430 PUSH4 0x11a09ae7
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP2
0x439 PUSH4 0xffffffff
0x43e AND
0x43f PUSH1 0xe0
0x441 PUSH1 0x2
0x443 EXP
0x444 MUL
0x445 DUP2
0x446 MSTORE
0x447 PUSH1 0x4
0x449 ADD
0x44a PUSH1 0x20
0x44c PUSH1 0x40
0x44e MLOAD
0x44f DUP1
0x450 DUP4
0x451 SUB
0x452 DUP2
0x453 PUSH1 0x0
0x455 DUP8
0x456 DUP1
0x457 EXTCODESIZE
0x458 ISZERO
0x459 DUP1
0x45a ISZERO
0x45b PUSH2 0x463
0x45e JUMPI
---
0x425: JUMPDEST 
0x427: V381 = 0x1
0x429: V382 = 0xa0
0x42b: V383 = 0x2
0x42d: V384 = EXP 0x2 0xa0
0x42e: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42f: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x430: V387 = 0x11a09ae7
0x435: V388 = 0x40
0x437: V389 = M[0x40]
0x439: V390 = 0xffffffff
0x43e: V391 = AND 0xffffffff 0x11a09ae7
0x43f: V392 = 0xe0
0x441: V393 = 0x2
0x443: V394 = EXP 0x2 0xe0
0x444: V395 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x446: M[V389] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x447: V396 = 0x4
0x449: V397 = ADD 0x4 V389
0x44a: V398 = 0x20
0x44c: V399 = 0x40
0x44e: V400 = M[0x40]
0x451: V401 = SUB V397 V400
0x453: V402 = 0x0
0x457: V403 = EXTCODESIZE V386
0x458: V404 = ISZERO V403
0x45a: V405 = ISZERO V404
0x45b: V406 = 0x463
0x45e: JUMPI 0x463 V405
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V386, 0x11a09ae7, V397, 0x20, V400, V401, V400, 0x0, V386, V404]
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V386, 0x11a09ae7, V397, 0x20, V400, V401, V400, 0x0, V386, V404]

================================

Block 0x45f
[0x45f:0x462]
---
Predecessors: [0x425]
Successors: []
---
0x45f PUSH1 0x0
0x461 DUP1
0x462 REVERT
---
0x45f: V407 = 0x0
0x462: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V386, 0x11a09ae7, V397, 0x20, V400, V401, V400, 0x0, V386, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V386, 0x11a09ae7, V397, 0x20, V400, V401, V400, 0x0, V386, V404]

================================

Block 0x463
[0x463:0x46d]
---
Predecessors: [0x425]
Successors: [0x46e, 0x477]
---
0x463 JUMPDEST
0x464 POP
0x465 GAS
0x466 CALL
0x467 ISZERO
0x468 DUP1
0x469 ISZERO
0x46a PUSH2 0x477
0x46d JUMPI
---
0x463: JUMPDEST 
0x465: V408 = GAS
0x466: V409 = CALL V408 V386 0x0 V400 V401 V400 0x20
0x467: V410 = ISZERO V409
0x469: V411 = ISZERO V410
0x46a: V412 = 0x477
0x46d: JUMPI 0x477 V411
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V386, 0x11a09ae7, V397, 0x20, V400, V401, V400, 0x0, V386, V404]
Stack pops: 7
Stack additions: [V410]
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V386, 0x11a09ae7, V397, V410]

================================

Block 0x46e
[0x46e:0x476]
---
Predecessors: [0x463]
Successors: []
---
0x46e RETURNDATASIZE
0x46f PUSH1 0x0
0x471 DUP1
0x472 RETURNDATACOPY
0x473 RETURNDATASIZE
0x474 PUSH1 0x0
0x476 REVERT
---
0x46e: V413 = RETURNDATASIZE
0x46f: V414 = 0x0
0x472: RETURNDATACOPY 0x0 0x0 V413
0x473: V415 = RETURNDATASIZE
0x474: V416 = 0x0
0x476: REVERT 0x0 V415
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V386, 0x11a09ae7, V397, V410]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V386, 0x11a09ae7, V397, V410]

================================

Block 0x477
[0x477:0x488]
---
Predecessors: [0x463]
Successors: [0x489, 0x48d]
---
0x477 JUMPDEST
0x478 POP
0x479 POP
0x47a POP
0x47b POP
0x47c PUSH1 0x40
0x47e MLOAD
0x47f RETURNDATASIZE
0x480 PUSH1 0x20
0x482 DUP2
0x483 LT
0x484 ISZERO
0x485 PUSH2 0x48d
0x488 JUMPI
---
0x477: JUMPDEST 
0x47c: V417 = 0x40
0x47e: V418 = M[0x40]
0x47f: V419 = RETURNDATASIZE
0x480: V420 = 0x20
0x483: V421 = LT V419 0x20
0x484: V422 = ISZERO V421
0x485: V423 = 0x48d
0x488: JUMPI 0x48d V422
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V386, 0x11a09ae7, V397, V410]
Stack pops: 4
Stack additions: [V418, V419]
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V418, V419]

================================

Block 0x489
[0x489:0x48c]
---
Predecessors: [0x477]
Successors: []
---
0x489 PUSH1 0x0
0x48b DUP1
0x48c REVERT
---
0x489: V424 = 0x0
0x48c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V418, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V418, V419]

================================

Block 0x48d
[0x48d:0x49e]
---
Predecessors: [0x477]
Successors: [0x49f]
---
0x48d JUMPDEST
0x48e POP
0x48f MLOAD
0x490 SWAP8
0x491 POP
0x492 PUSH1 0x0
0x494 SWAP7
0x495 POP
0x496 CALLER
0x497 BALANCE
0x498 CALLVALUE
0x499 ADD
0x49a SWAP6
0x49b POP
0x49c DUP7
0x49d SWAP5
0x49e POP
---
0x48d: JUMPDEST 
0x48f: V425 = M[V418]
0x492: V426 = 0x0
0x496: V427 = CALLER
0x497: V428 = BALANCE V427
0x498: V429 = CALLVALUE
0x499: V430 = ADD V429 V428
---
Entry stack: [V13, 0xc6, V110, V118, V121, V118, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V418, V419]
Stack pops: 10
Stack additions: [V425, 0x0, V430, 0x0, S5, S4, S3, S2]
Exit stack: [V13, 0xc6, V110, V118, V121, V118, V425, 0x0, V430, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x49f
[0x49f:0x4a6]
---
Predecessors: [0x48d, 0x738]
Successors: [0x4a7, 0x743]
---
0x49f JUMPDEST
0x4a0 DUP12
0x4a1 DUP6
0x4a2 GT
0x4a3 PUSH2 0x743
0x4a6 JUMPI
---
0x49f: JUMPDEST 
0x4a2: V431 = GT S4 S11
0x4a3: V432 = 0x743
0x4a6: JUMPI 0x743 V431
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]

================================

Block 0x4a7
[0x4a7:0x4aa]
---
Predecessors: [0x49f]
Successors: [0x4ab]
---
0x4a7 PUSH1 0x0
0x4a9 SWAP4
0x4aa POP
---
0x4a7: V433 = 0x0
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, {0x0, 0x1}, S1, S0]

================================

Block 0x4ab
[0x4ab:0x4b5]
---
Predecessors: [0x4a7, 0x722]
Successors: [0x4b6, 0x72d]
---
0x4ab JUMPDEST
0x4ac PUSH1 0x2
0x4ae SLOAD
0x4af DUP5
0x4b0 LT
0x4b1 ISZERO
0x4b2 PUSH2 0x72d
0x4b5 JUMPI
---
0x4ab: JUMPDEST 
0x4ac: V434 = 0x2
0x4ae: V435 = S[0x2]
0x4b0: V436 = LT S3 V435
0x4b1: V437 = ISZERO V436
0x4b2: V438 = 0x72d
0x4b5: JUMPI 0x72d V437
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]

================================

Block 0x4b6
[0x4b6:0x580]
---
Predecessors: [0x4ab]
Successors: [0x9e3]
---
0x4b6 PUSH1 0x0
0x4b8 DUP5
0x4b9 DUP2
0x4ba MSTORE
0x4bb PUSH1 0x1
0x4bd PUSH1 0x20
0x4bf DUP2
0x4c0 SWAP1
0x4c1 MSTORE
0x4c2 PUSH1 0x40
0x4c4 SWAP2
0x4c5 DUP3
0x4c6 SWAP1
0x4c7 SHA3
0x4c8 SLOAD
0x4c9 DUP3
0x4ca MLOAD
0x4cb PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x4ec DUP2
0x4ed MSTORE
0x4ee PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x50f DUP2
0x510 DUP5
0x511 ADD
0x512 MSTORE
0x513 PUSH13 0x1000000000000000000000000
0x521 PUSH1 0x1
0x523 PUSH1 0xa0
0x525 PUSH1 0x2
0x527 EXP
0x528 SUB
0x529 PUSH3 0x10000
0x52d DUP5
0x52e DIV
0x52f AND
0x530 MUL
0x531 PUSH1 0x2
0x533 DUP3
0x534 ADD
0x535 MSTORE
0x536 PUSH1 0xff
0x538 SWAP2
0x539 DUP4
0x53a SIGNEXTEND
0x53b SWAP1
0x53c SWAP3
0x53d SIGNEXTEND
0x53e DUP9
0x53f ADD
0x540 AND
0x541 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x562 MUL
0x563 PUSH1 0x16
0x565 DUP3
0x566 ADD
0x567 MSTORE
0x568 SWAP1
0x569 MLOAD
0x56a SWAP1
0x56b DUP2
0x56c SWAP1
0x56d SUB
0x56e PUSH1 0x17
0x570 ADD
0x571 SWAP1
0x572 SHA3
0x573 PUSH1 0x3
0x575 SLOAD
0x576 PUSH2 0x581
0x579 SWAP2
0x57a SWAP1
0x57b DUP11
0x57c ADD
0x57d PUSH2 0x9e3
0x580 JUMP
---
0x4b6: V439 = 0x0
0x4ba: M[0x0] = S3
0x4bb: V440 = 0x1
0x4bd: V441 = 0x20
0x4c1: M[0x20] = 0x1
0x4c2: V442 = 0x40
0x4c7: V443 = SHA3 0x0 0x40
0x4c8: V444 = S[V443]
0x4ca: V445 = M[0x40]
0x4cb: V446 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x4ed: M[V445] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x4ee: V447 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x511: V448 = ADD 0x1 V445
0x512: M[V448] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x513: V449 = 0x1000000000000000000000000
0x521: V450 = 0x1
0x523: V451 = 0xa0
0x525: V452 = 0x2
0x527: V453 = EXP 0x2 0xa0
0x528: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x529: V455 = 0x10000
0x52e: V456 = DIV V444 0x10000
0x52f: V457 = AND V456 0xffffffffffffffffffffffffffffffffffffffff
0x530: V458 = MUL V457 0x1000000000000000000000000
0x531: V459 = 0x2
0x534: V460 = ADD V445 0x2
0x535: M[V460] = V458
0x536: V461 = 0xff
0x53a: V462 = SIGNEXTEND 0x1 V444
0x53d: V463 = SIGNEXTEND 0x1 V462
0x53f: V464 = ADD S4 V463
0x540: V465 = AND V464 0xff
0x541: V466 = 0x100000000000000000000000000000000000000000000000000000000000000
0x562: V467 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V465
0x563: V468 = 0x16
0x566: V469 = ADD V445 0x16
0x567: M[V469] = V467
0x569: V470 = M[0x40]
0x56d: V471 = SUB V445 V470
0x56e: V472 = 0x17
0x570: V473 = ADD 0x17 V471
0x572: V474 = SHA3 V470 V473
0x573: V475 = 0x3
0x575: V476 = S[0x3]
0x576: V477 = 0x581
0x57c: V478 = ADD S7 V476
0x57d: V479 = 0x9e3
0x580: JUMP 0x9e3
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x581, V474, V478]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0, 0x581, V474, V478]

================================

Block 0x581
[0x581:0x58c]
---
Predecessors: [0xc14, 0xc8e]
Successors: [0x58d, 0x722]
---
0x581 JUMPDEST
0x582 SWAP1
0x583 SWAP4
0x584 POP
0x585 SWAP2
0x586 POP
0x587 DUP3
0x588 ISZERO
0x589 PUSH2 0x722
0x58c JUMPI
---
0x581: JUMPDEST 
0x588: V480 = ISZERO {0x0, 0x1}
0x589: V481 = 0x722
0x58c: JUMPI 0x722 V480
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: [S1, S0, S2]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}, S0, S2]

================================

Block 0x58d
[0x58d:0x5b1]
---
Predecessors: [0x581]
Successors: [0x5b2, 0x64f]
---
0x58d POP
0x58e PUSH1 0x0
0x590 DUP4
0x591 DUP2
0x592 MSTORE
0x593 PUSH1 0x1
0x595 PUSH1 0x20
0x597 MSTORE
0x598 PUSH1 0x40
0x59a SWAP1
0x59b SHA3
0x59c SLOAD
0x59d PUSH3 0x10000
0x5a1 SWAP1
0x5a2 DIV
0x5a3 PUSH1 0x1
0x5a5 PUSH1 0xa0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa SUB
0x5ab AND
0x5ac DUP2
0x5ad ISZERO
0x5ae PUSH2 0x64f
0x5b1 JUMPI
---
0x58e: V482 = 0x0
0x592: M[0x0] = S3
0x593: V483 = 0x1
0x595: V484 = 0x20
0x597: M[0x20] = 0x1
0x598: V485 = 0x40
0x59b: V486 = SHA3 0x0 0x40
0x59c: V487 = S[V486]
0x59d: V488 = 0x10000
0x5a2: V489 = DIV V487 0x10000
0x5a3: V490 = 0x1
0x5a5: V491 = 0xa0
0x5a7: V492 = 0x2
0x5a9: V493 = EXP 0x2 0xa0
0x5aa: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ab: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x5ad: V496 = ISZERO S1
0x5ae: V497 = 0x64f
0x5b1: JUMPI 0x64f V496
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V495]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, V495]

================================

Block 0x5b2
[0x5b2:0x62c]
---
Predecessors: [0x58d]
Successors: [0x62d, 0x631]
---
0x5b2 PUSH1 0x4
0x5b4 DUP1
0x5b5 SLOAD
0x5b6 PUSH1 0x40
0x5b8 DUP1
0x5b9 MLOAD
0x5ba PUSH32 0x2bf727900000000000000000000000000000000000000000000000000000000
0x5db DUP2
0x5dc MSTORE
0x5dd SWAP3
0x5de DUP4
0x5df ADD
0x5e0 DUP9
0x5e1 SWAP1
0x5e2 MSTORE
0x5e3 PUSH1 0x0
0x5e5 SWAP2
0x5e6 DUP3
0x5e7 SIGNEXTEND
0x5e8 DUP3
0x5e9 SIGNEXTEND
0x5ea DUP3
0x5eb SIGNEXTEND
0x5ec PUSH1 0x24
0x5ee DUP5
0x5ef ADD
0x5f0 MSTORE
0x5f1 PUSH1 0x1
0x5f3 PUSH1 0xa0
0x5f5 PUSH1 0x2
0x5f7 EXP
0x5f8 SUB
0x5f9 DUP15
0x5fa DUP2
0x5fb AND
0x5fc PUSH1 0x44
0x5fe DUP6
0x5ff ADD
0x600 MSTORE
0x601 DUP14
0x602 DUP2
0x603 AND
0x604 PUSH1 0x64
0x606 DUP6
0x607 ADD
0x608 MSTORE
0x609 SWAP1
0x60a MLOAD
0x60b SWAP1
0x60c DUP5
0x60d AND
0x60e SWAP3
0x60f PUSH4 0x2bf7279
0x614 SWAP3
0x615 CALLVALUE
0x616 SWAP3
0x617 PUSH1 0x84
0x619 DUP1
0x61a DUP5
0x61b ADD
0x61c SWAP4
0x61d DUP3
0x61e SWAP1
0x61f SUB
0x620 ADD
0x621 DUP2
0x622 DUP6
0x623 DUP9
0x624 DUP1
0x625 EXTCODESIZE
0x626 ISZERO
0x627 DUP1
0x628 ISZERO
0x629 PUSH2 0x631
0x62c JUMPI
---
0x5b2: V498 = 0x4
0x5b5: V499 = S[0x4]
0x5b6: V500 = 0x40
0x5b9: V501 = M[0x40]
0x5ba: V502 = 0x2bf727900000000000000000000000000000000000000000000000000000000
0x5dc: M[V501] = 0x2bf727900000000000000000000000000000000000000000000000000000000
0x5df: V503 = ADD V501 0x4
0x5e2: M[V503] = S4
0x5e3: V504 = 0x0
0x5e7: V505 = SIGNEXTEND 0x0 V499
0x5e9: V506 = SIGNEXTEND 0x0 V505
0x5eb: V507 = SIGNEXTEND 0x0 V506
0x5ec: V508 = 0x24
0x5ef: V509 = ADD V501 0x24
0x5f0: M[V509] = V507
0x5f1: V510 = 0x1
0x5f3: V511 = 0xa0
0x5f5: V512 = 0x2
0x5f7: V513 = EXP 0x2 0xa0
0x5f8: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fb: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x5fc: V516 = 0x44
0x5ff: V517 = ADD V501 0x44
0x600: M[V517] = V515
0x603: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x604: V519 = 0x64
0x607: V520 = ADD V501 0x64
0x608: M[V520] = V518
0x60a: V521 = M[0x40]
0x60d: V522 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V523 = 0x2bf7279
0x615: V524 = CALLVALUE
0x617: V525 = 0x84
0x61b: V526 = ADD V501 0x84
0x61f: V527 = SUB V501 V521
0x620: V528 = ADD V527 0x84
0x625: V529 = EXTCODESIZE V522
0x626: V530 = ISZERO V529
0x628: V531 = ISZERO V530
0x629: V532 = 0x631
0x62c: JUMPI 0x631 V531
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, V495]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V522, 0x2bf7279, V524, V526, 0x0, V521, V528, V521, V524, V522, V530]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, V495, V522, 0x2bf7279, V524, V526, 0x0, V521, V528, V521, V524, V522, V530]

================================

Block 0x62d
[0x62d:0x630]
---
Predecessors: [0x5b2]
Successors: []
---
0x62d PUSH1 0x0
0x62f DUP1
0x630 REVERT
---
0x62d: V533 = 0x0
0x630: REVERT 0x0 0x0
---
Entry stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, V495, V522, 0x2bf7279, V524, V526, 0x0, V521, V528, V521, V524, V522, V530]
Stack pops: 0
Stack additions: []
Exit stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, V495, V522, 0x2bf7279, V524, V526, 0x0, V521, V528, V521, V524, V522, V530]

================================

Block 0x631
[0x631:0x63b]
---
Predecessors: [0x5b2]
Successors: [0x63c, 0x645]
---
0x631 JUMPDEST
0x632 POP
0x633 GAS
0x634 CALL
0x635 ISZERO
0x636 DUP1
0x637 ISZERO
0x638 PUSH2 0x645
0x63b JUMPI
---
0x631: JUMPDEST 
0x633: V534 = GAS
0x634: V535 = CALL V534 V522 V524 V521 V528 V521 0x0
0x635: V536 = ISZERO V535
0x637: V537 = ISZERO V536
0x638: V538 = 0x645
0x63b: JUMPI 0x645 V537
---
Entry stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, V495, V522, 0x2bf7279, V524, V526, 0x0, V521, V528, V521, V524, V522, V530]
Stack pops: 7
Stack additions: [V536]
Exit stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, V495, V522, 0x2bf7279, V524, V526, V536]

================================

Block 0x63c
[0x63c:0x644]
---
Predecessors: [0x631]
Successors: []
---
0x63c RETURNDATASIZE
0x63d PUSH1 0x0
0x63f DUP1
0x640 RETURNDATACOPY
0x641 RETURNDATASIZE
0x642 PUSH1 0x0
0x644 REVERT
---
0x63c: V539 = RETURNDATASIZE
0x63d: V540 = 0x0
0x640: RETURNDATACOPY 0x0 0x0 V539
0x641: V541 = RETURNDATASIZE
0x642: V542 = 0x0
0x644: REVERT 0x0 V541
---
Entry stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, S6, V495, V522, 0x2bf7279, V524, V526, V536]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, S6, V495, V522, 0x2bf7279, V524, V526, V536]

================================

Block 0x645
[0x645:0x64e]
---
Predecessors: [0x631]
Successors: [0x6e4]
---
0x645 JUMPDEST
0x646 POP
0x647 POP
0x648 POP
0x649 POP
0x64a POP
0x64b PUSH2 0x6e4
0x64e JUMP
---
0x645: JUMPDEST 
0x64b: V543 = 0x6e4
0x64e: JUMP 0x6e4
---
Entry stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, S6, V495, V522, 0x2bf7279, V524, V526, V536]
Stack pops: 5
Stack additions: []
Exit stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, S6, V495]

================================

Block 0x64f
[0x64f:0x6c5]
---
Predecessors: [0x58d]
Successors: [0x6c6, 0x6ca]
---
0x64f JUMPDEST
0x650 PUSH1 0x40
0x652 DUP1
0x653 MLOAD
0x654 PUSH32 0x2bf727900000000000000000000000000000000000000000000000000000000
0x675 DUP2
0x676 MSTORE
0x677 PUSH1 0x4
0x679 DUP2
0x67a ADD
0x67b DUP8
0x67c SWAP1
0x67d MSTORE
0x67e PUSH1 0x1
0x680 PUSH1 0x24
0x682 DUP3
0x683 ADD
0x684 MSTORE
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d DUP14
0x68e DUP2
0x68f AND
0x690 PUSH1 0x44
0x692 DUP4
0x693 ADD
0x694 MSTORE
0x695 DUP13
0x696 DUP2
0x697 AND
0x698 PUSH1 0x64
0x69a DUP4
0x69b ADD
0x69c MSTORE
0x69d SWAP2
0x69e MLOAD
0x69f SWAP2
0x6a0 DUP4
0x6a1 AND
0x6a2 SWAP2
0x6a3 PUSH4 0x2bf7279
0x6a8 SWAP2
0x6a9 CALLVALUE
0x6aa SWAP2
0x6ab PUSH1 0x84
0x6ad DUP1
0x6ae DUP4
0x6af ADD
0x6b0 SWAP3
0x6b1 PUSH1 0x0
0x6b3 SWAP3
0x6b4 SWAP2
0x6b5 SWAP1
0x6b6 DUP3
0x6b7 SWAP1
0x6b8 SUB
0x6b9 ADD
0x6ba DUP2
0x6bb DUP6
0x6bc DUP9
0x6bd DUP1
0x6be EXTCODESIZE
0x6bf ISZERO
0x6c0 DUP1
0x6c1 ISZERO
0x6c2 PUSH2 0x6ca
0x6c5 JUMPI
---
0x64f: JUMPDEST 
0x650: V544 = 0x40
0x653: V545 = M[0x40]
0x654: V546 = 0x2bf727900000000000000000000000000000000000000000000000000000000
0x676: M[V545] = 0x2bf727900000000000000000000000000000000000000000000000000000000
0x677: V547 = 0x4
0x67a: V548 = ADD V545 0x4
0x67d: M[V548] = S4
0x67e: V549 = 0x1
0x680: V550 = 0x24
0x683: V551 = ADD V545 0x24
0x684: M[V551] = 0x1
0x685: V552 = 0x1
0x687: V553 = 0xa0
0x689: V554 = 0x2
0x68b: V555 = EXP 0x2 0xa0
0x68c: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68f: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x690: V558 = 0x44
0x693: V559 = ADD V545 0x44
0x694: M[V559] = V557
0x697: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x698: V561 = 0x64
0x69b: V562 = ADD V545 0x64
0x69c: M[V562] = V560
0x69e: V563 = M[0x40]
0x6a1: V564 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x6a3: V565 = 0x2bf7279
0x6a9: V566 = CALLVALUE
0x6ab: V567 = 0x84
0x6af: V568 = ADD V545 0x84
0x6b1: V569 = 0x0
0x6b8: V570 = SUB V545 V563
0x6b9: V571 = ADD V570 0x84
0x6be: V572 = EXTCODESIZE V564
0x6bf: V573 = ISZERO V572
0x6c1: V574 = ISZERO V573
0x6c2: V575 = 0x6ca
0x6c5: JUMPI 0x6ca V574
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, V495]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V564, 0x2bf7279, V566, V568, 0x0, V563, V571, V563, V566, V564, V573]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, V495, V564, 0x2bf7279, V566, V568, 0x0, V563, V571, V563, V566, V564, V573]

================================

Block 0x6c6
[0x6c6:0x6c9]
---
Predecessors: [0x64f]
Successors: []
---
0x6c6 PUSH1 0x0
0x6c8 DUP1
0x6c9 REVERT
---
0x6c6: V576 = 0x0
0x6c9: REVERT 0x0 0x0
---
Entry stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, V495, V564, 0x2bf7279, V566, V568, 0x0, V563, V571, V563, V566, V564, V573]
Stack pops: 0
Stack additions: []
Exit stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, V495, V564, 0x2bf7279, V566, V568, 0x0, V563, V571, V563, V566, V564, V573]

================================

Block 0x6ca
[0x6ca:0x6d4]
---
Predecessors: [0x64f]
Successors: [0x6d5, 0x6de]
---
0x6ca JUMPDEST
0x6cb POP
0x6cc GAS
0x6cd CALL
0x6ce ISZERO
0x6cf DUP1
0x6d0 ISZERO
0x6d1 PUSH2 0x6de
0x6d4 JUMPI
---
0x6ca: JUMPDEST 
0x6cc: V577 = GAS
0x6cd: V578 = CALL V577 V564 V566 V563 V571 V563 0x0
0x6ce: V579 = ISZERO V578
0x6d0: V580 = ISZERO V579
0x6d1: V581 = 0x6de
0x6d4: JUMPI 0x6de V580
---
Entry stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, V495, V564, 0x2bf7279, V566, V568, 0x0, V563, V571, V563, V566, V564, V573]
Stack pops: 7
Stack additions: [V579]
Exit stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, V495, V564, 0x2bf7279, V566, V568, V579]

================================

Block 0x6d5
[0x6d5:0x6dd]
---
Predecessors: [0x6ca]
Successors: []
---
0x6d5 RETURNDATASIZE
0x6d6 PUSH1 0x0
0x6d8 DUP1
0x6d9 RETURNDATACOPY
0x6da RETURNDATASIZE
0x6db PUSH1 0x0
0x6dd REVERT
---
0x6d5: V582 = RETURNDATASIZE
0x6d6: V583 = 0x0
0x6d9: RETURNDATACOPY 0x0 0x0 V582
0x6da: V584 = RETURNDATASIZE
0x6db: V585 = 0x0
0x6dd: REVERT 0x0 V584
---
Entry stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, S6, V495, V564, 0x2bf7279, V566, V568, V579]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, S6, V495, V564, 0x2bf7279, V566, V568, V579]

================================

Block 0x6de
[0x6de:0x6e3]
---
Predecessors: [0x6ca]
Successors: [0x6e4]
---
0x6de JUMPDEST
0x6df POP
0x6e0 POP
0x6e1 POP
0x6e2 POP
0x6e3 POP
---
0x6de: JUMPDEST 
---
Entry stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, S6, V495, V564, 0x2bf7279, V566, V568, V579]
Stack pops: 5
Stack additions: []
Exit stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, S6, V495]

================================

Block 0x6e4
[0x6e4:0x718]
---
Predecessors: [0x645, 0x6de]
Successors: [0x719, 0x71d]
---
0x6e4 JUMPDEST
0x6e5 PUSH1 0x0
0x6e7 DUP5
0x6e8 DUP2
0x6e9 MSTORE
0x6ea PUSH1 0x1
0x6ec PUSH1 0x20
0x6ee DUP2
0x6ef SWAP1
0x6f0 MSTORE
0x6f1 PUSH1 0x40
0x6f3 SWAP1
0x6f4 SWAP2
0x6f5 SHA3
0x6f6 DUP1
0x6f7 SLOAD
0x6f8 DUP1
0x6f9 DUP4
0x6fa SIGNEXTEND
0x6fb DUP9
0x6fc ADD
0x6fd DUP4
0x6fe ADD
0x6ff DUP4
0x700 SIGNEXTEND
0x701 PUSH2 0xffff
0x704 AND
0x705 PUSH2 0xffff
0x708 NOT
0x709 SWAP1
0x70a SWAP2
0x70b AND
0x70c OR
0x70d SWAP1
0x70e SSTORE
0x70f SWAP7
0x710 POP
0x711 CALLER
0x712 BALANCE
0x713 DUP7
0x714 LT
0x715 PUSH2 0x71d
0x718 JUMPI
---
0x6e4: JUMPDEST 
0x6e5: V586 = 0x0
0x6e9: M[0x0] = S3
0x6ea: V587 = 0x1
0x6ec: V588 = 0x20
0x6f0: M[0x20] = 0x1
0x6f1: V589 = 0x40
0x6f5: V590 = SHA3 0x0 0x40
0x6f7: V591 = S[V590]
0x6fa: V592 = SIGNEXTEND 0x1 V591
0x6fc: V593 = ADD S4 V592
0x6fe: V594 = ADD 0x1 V593
0x700: V595 = SIGNEXTEND 0x1 V594
0x701: V596 = 0xffff
0x704: V597 = AND 0xffff V595
0x705: V598 = 0xffff
0x708: V599 = NOT 0xffff
0x70b: V600 = AND V591 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x70c: V601 = OR V600 V597
0x70e: S[V590] = V601
0x711: V602 = CALLER
0x712: V603 = BALANCE V602
0x714: V604 = LT S5 V603
0x715: V605 = 0x71d
0x718: JUMPI 0x71d V604
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, V495]
Stack pops: 7
Stack additions: [0x1, S5, S4, S3, S2, S1, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x1, S5, S4, S3, {0x0, 0x1}, S1, V495]

================================

Block 0x719
[0x719:0x71c]
---
Predecessors: [0x6e4]
Successors: []
---
0x719 PUSH1 0x0
0x71b DUP1
0x71c REVERT
---
0x719: V606 = 0x0
0x71c: REVERT 0x0 0x0
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x1, S5, S4, S3, {0x0, 0x1}, S1, V495]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x1, S5, S4, S3, {0x0, 0x1}, S1, V495]

================================

Block 0x71d
[0x71d:0x721]
---
Predecessors: [0x6e4]
Successors: [0x72d]
---
0x71d JUMPDEST
0x71e PUSH2 0x72d
0x721 JUMP
---
0x71d: JUMPDEST 
0x71e: V607 = 0x72d
0x721: JUMP 0x72d
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x1, S5, S4, S3, {0x0, 0x1}, S1, V495]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x1, S5, S4, S3, {0x0, 0x1}, S1, V495]

================================

Block 0x722
[0x722:0x72c]
---
Predecessors: [0x581]
Successors: [0x4ab]
---
0x722 JUMPDEST
0x723 PUSH1 0x1
0x725 SWAP1
0x726 SWAP4
0x727 ADD
0x728 SWAP3
0x729 PUSH2 0x4ab
0x72c JUMP
---
0x722: JUMPDEST 
0x723: V608 = 0x1
0x727: V609 = ADD S3 0x1
0x729: V610 = 0x4ab
0x72c: JUMP 0x4ab
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 4
Stack additions: [V609, S2, S1, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V609, {0x0, 0x1}, S1, S0]

================================

Block 0x72d
[0x72d:0x733]
---
Predecessors: [0x4ab, 0x71d]
Successors: [0x734, 0x738]
---
0x72d JUMPDEST
0x72e DUP7
0x72f ISZERO
0x730 PUSH2 0x738
0x733 JUMPI
---
0x72d: JUMPDEST 
0x72f: V611 = ISZERO S6
0x730: V612 = 0x738
0x733: JUMPI 0x738 V611
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]

================================

Block 0x734
[0x734:0x737]
---
Predecessors: [0x72d]
Successors: [0x743]
---
0x734 PUSH2 0x743
0x737 JUMP
---
0x734: V613 = 0x743
0x737: JUMP 0x743
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]

================================

Block 0x738
[0x738:0x742]
---
Predecessors: [0x72d]
Successors: [0x49f]
---
0x738 JUMPDEST
0x739 PUSH1 0x1
0x73b SWAP1
0x73c SWAP5
0x73d ADD
0x73e SWAP4
0x73f PUSH2 0x49f
0x742 JUMP
---
0x738: JUMPDEST 
0x739: V614 = 0x1
0x73d: V615 = ADD S4 0x1
0x73f: V616 = 0x49f
0x742: JUMP 0x49f
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 5
Stack additions: [V615, S3, S2, S1, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V615, S3, {0x0, 0x1}, S1, S0]

================================

Block 0x743
[0x743:0x74a]
---
Predecessors: [0x49f, 0x734]
Successors: [0x9ad]
---
0x743 JUMPDEST
0x744 PUSH2 0x74b
0x747 PUSH2 0x9ad
0x74a JUMP
---
0x743: JUMPDEST 
0x744: V617 = 0x74b
0x747: V618 = 0x9ad
0x74a: JUMP 0x9ad
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 0
Stack additions: [0x74b]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0, 0x74b]

================================

Block 0x74b
[0x74b:0x758]
---
Predecessors: [0x9da]
Successors: [0xc6]
---
0x74b JUMPDEST
0x74c POP
0x74d POP
0x74e POP
0x74f POP
0x750 POP
0x751 POP
0x752 POP
0x753 POP
0x754 POP
0x755 POP
0x756 POP
0x757 POP
0x758 JUMP
---
0x74b: JUMPDEST 
0x758: JUMP S12
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13]

================================

Block 0x759
[0x759:0x776]
---
Predecessors: [0x176]
Successors: [0x777, 0x77b]
---
0x759 JUMPDEST
0x75a PUSH1 0x0
0x75c DUP1
0x75d SLOAD
0x75e DUP2
0x75f SWAP1
0x760 DUP2
0x761 SWAP1
0x762 DUP2
0x763 SWAP1
0x764 DUP2
0x765 SWAP1
0x766 DUP2
0x767 SWAP1
0x768 PUSH1 0x1
0x76a PUSH1 0xa0
0x76c PUSH1 0x2
0x76e EXP
0x76f SUB
0x770 AND
0x771 CALLER
0x772 EQ
0x773 PUSH2 0x77b
0x776 JUMPI
---
0x759: JUMPDEST 
0x75a: V619 = 0x0
0x75d: V620 = S[0x0]
0x768: V621 = 0x1
0x76a: V622 = 0xa0
0x76c: V623 = 0x2
0x76e: V624 = EXP 0x2 0xa0
0x76f: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x770: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x771: V627 = CALLER
0x772: V628 = EQ V627 V626
0x773: V629 = 0x77b
0x776: JUMPI 0x77b V628
---
Entry stack: [V13, 0x17f]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x17f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x777
[0x777:0x77a]
---
Predecessors: [0x759]
Successors: []
---
0x777 PUSH1 0x0
0x779 DUP1
0x77a REVERT
---
0x777: V630 = 0x0
0x77a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x17f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x77b
[0x77b:0x86a]
---
Predecessors: [0x759]
Successors: [0x17f]
---
0x77b JUMPDEST
0x77c POP
0x77d POP
0x77e PUSH1 0x2
0x780 SLOAD
0x781 PUSH1 0x1
0x783 PUSH1 0x20
0x785 MSTORE
0x786 PUSH32 0xa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49
0x7a7 SLOAD
0x7a8 PUSH32 0xcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f
0x7c9 SLOAD
0x7ca PUSH32 0xd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f
0x7eb SLOAD
0x7ec PUSH32 0x7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b
0x80d SLOAD
0x80e PUSH1 0x4
0x810 PUSH1 0x0
0x812 MSTORE
0x813 PUSH32 0xedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567643
0x834 SLOAD
0x835 SWAP5
0x836 SWAP10
0x837 PUSH1 0x1
0x839 PUSH1 0xa0
0x83b PUSH1 0x2
0x83d EXP
0x83e SUB
0x83f PUSH3 0x10000
0x843 SWAP6
0x844 DUP7
0x845 SWAP1
0x846 DIV
0x847 DUP2
0x848 AND
0x849 SWAP11
0x84a POP
0x84b SWAP4
0x84c DUP6
0x84d SWAP1
0x84e DIV
0x84f DUP5
0x850 AND
0x851 SWAP9
0x852 POP
0x853 SWAP2
0x854 DUP5
0x855 SWAP1
0x856 DIV
0x857 DUP4
0x858 AND
0x859 SWAP7
0x85a POP
0x85b DUP4
0x85c SWAP1
0x85d DIV
0x85e DUP3
0x85f AND
0x860 SWAP5
0x861 POP
0x862 SWAP2
0x863 SWAP1
0x864 SWAP3
0x865 DIV
0x866 SWAP1
0x867 SWAP2
0x868 AND
0x869 SWAP1
0x86a JUMP
---
0x77b: JUMPDEST 
0x77e: V631 = 0x2
0x780: V632 = S[0x2]
0x781: V633 = 0x1
0x783: V634 = 0x20
0x785: M[0x20] = 0x1
0x786: V635 = 0xa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49
0x7a7: V636 = S[0xa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49]
0x7a8: V637 = 0xcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f
0x7c9: V638 = S[0xcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f]
0x7ca: V639 = 0xd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f
0x7eb: V640 = S[0xd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f]
0x7ec: V641 = 0x7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b
0x80d: V642 = S[0x7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b]
0x80e: V643 = 0x4
0x810: V644 = 0x0
0x812: M[0x0] = 0x4
0x813: V645 = 0xedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567643
0x834: V646 = S[0xedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567643]
0x837: V647 = 0x1
0x839: V648 = 0xa0
0x83b: V649 = 0x2
0x83d: V650 = EXP 0x2 0xa0
0x83e: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83f: V652 = 0x10000
0x846: V653 = DIV V636 0x10000
0x848: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x84e: V655 = DIV V638 0x10000
0x850: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x856: V657 = DIV V640 0x10000
0x858: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x85d: V659 = DIV V642 0x10000
0x85f: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0x865: V661 = DIV V646 0x10000
0x868: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0x86a: JUMP 0x17f
---
Entry stack: [V13, 0x17f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [V632, V654, V656, V658, V660, V662]
Exit stack: [V13, V632, V654, V656, V658, V660, V662]

================================

Block 0x86b
[0x86b:0x87d]
---
Predecessors: [0x1d2]
Successors: [0x87e, 0x882]
---
0x86b JUMPDEST
0x86c PUSH1 0x0
0x86e SLOAD
0x86f PUSH1 0x1
0x871 PUSH1 0xa0
0x873 PUSH1 0x2
0x875 EXP
0x876 SUB
0x877 AND
0x878 CALLER
0x879 EQ
0x87a PUSH2 0x882
0x87d JUMPI
---
0x86b: JUMPDEST 
0x86c: V663 = 0x0
0x86e: V664 = S[0x0]
0x86f: V665 = 0x1
0x871: V666 = 0xa0
0x873: V667 = 0x2
0x875: V668 = EXP 0x2 0xa0
0x876: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x877: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0x878: V671 = CALLER
0x879: V672 = EQ V671 V670
0x87a: V673 = 0x882
0x87d: JUMPI 0x882 V672
---
Entry stack: [V13, 0xc6, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V163]

================================

Block 0x87e
[0x87e:0x881]
---
Predecessors: [0x86b]
Successors: []
---
0x87e PUSH1 0x0
0x880 DUP1
0x881 REVERT
---
0x87e: V674 = 0x0
0x881: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V163]

================================

Block 0x882
[0x882:0x886]
---
Predecessors: [0x86b]
Successors: [0xc6]
---
0x882 JUMPDEST
0x883 PUSH1 0x5
0x885 SSTORE
0x886 JUMP
---
0x882: JUMPDEST 
0x883: V675 = 0x5
0x885: S[0x5] = V163
0x886: JUMP 0xc6
---
Entry stack: [V13, 0xc6, V163]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x887
[0x887:0x8af]
---
Predecessors: [0x1ea]
Successors: [0x1f6]
---
0x887 JUMPDEST
0x888 PUSH1 0x1
0x88a PUSH1 0x20
0x88c DUP2
0x88d SWAP1
0x88e MSTORE
0x88f PUSH1 0x0
0x891 SWAP2
0x892 DUP3
0x893 MSTORE
0x894 PUSH1 0x40
0x896 SWAP1
0x897 SWAP2
0x898 SHA3
0x899 SLOAD
0x89a SWAP1
0x89b DUP2
0x89c SWAP1
0x89d SIGNEXTEND
0x89e SWAP1
0x89f PUSH3 0x10000
0x8a3 SWAP1
0x8a4 DIV
0x8a5 PUSH1 0x1
0x8a7 PUSH1 0xa0
0x8a9 PUSH1 0x2
0x8ab EXP
0x8ac SUB
0x8ad AND
0x8ae DUP3
0x8af JUMP
---
0x887: JUMPDEST 
0x888: V676 = 0x1
0x88a: V677 = 0x20
0x88e: M[0x20] = 0x1
0x88f: V678 = 0x0
0x893: M[0x0] = V171
0x894: V679 = 0x40
0x898: V680 = SHA3 0x0 0x40
0x899: V681 = S[V680]
0x89d: V682 = SIGNEXTEND 0x1 V681
0x89f: V683 = 0x10000
0x8a4: V684 = DIV V681 0x10000
0x8a5: V685 = 0x1
0x8a7: V686 = 0xa0
0x8a9: V687 = 0x2
0x8ab: V688 = EXP 0x2 0xa0
0x8ac: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ad: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x8af: JUMP 0x1f6
---
Entry stack: [V13, 0x1f6, V171]
Stack pops: 2
Stack additions: [S1, V682, V690]
Exit stack: [V13, 0x1f6, V682, V690]

================================

Block 0x8b0
[0x8b0:0x8c5]
---
Predecessors: [0x22a]
Successors: [0x8c6, 0x8ca]
---
0x8b0 JUMPDEST
0x8b1 PUSH1 0x0
0x8b3 DUP1
0x8b4 SLOAD
0x8b5 DUP2
0x8b6 SWAP1
0x8b7 PUSH1 0x1
0x8b9 PUSH1 0xa0
0x8bb PUSH1 0x2
0x8bd EXP
0x8be SUB
0x8bf AND
0x8c0 CALLER
0x8c1 EQ
0x8c2 PUSH2 0x8ca
0x8c5 JUMPI
---
0x8b0: JUMPDEST 
0x8b1: V691 = 0x0
0x8b4: V692 = S[0x0]
0x8b7: V693 = 0x1
0x8b9: V694 = 0xa0
0x8bb: V695 = 0x2
0x8bd: V696 = EXP 0x2 0xa0
0x8be: V697 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bf: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0x8c0: V699 = CALLER
0x8c1: V700 = EQ V699 V698
0x8c2: V701 = 0x8ca
0x8c5: JUMPI 0x8ca V700
---
Entry stack: [V13, 0xc6, V201]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0xc6, V201, 0x0, 0x0]

================================

Block 0x8c6
[0x8c6:0x8c9]
---
Predecessors: [0x8b0]
Successors: []
---
0x8c6 PUSH1 0x0
0x8c8 DUP1
0x8c9 REVERT
---
0x8c6: V702 = 0x0
0x8c9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V201, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V201, 0x0, 0x0]

================================

Block 0x8ca
[0x8ca:0x906]
---
Predecessors: [0x8b0]
Successors: [0x907, 0x90b]
---
0x8ca JUMPDEST
0x8cb DUP3
0x8cc SWAP2
0x8cd POP
0x8ce DUP2
0x8cf PUSH1 0x1
0x8d1 PUSH1 0xa0
0x8d3 PUSH1 0x2
0x8d5 EXP
0x8d6 SUB
0x8d7 AND
0x8d8 PUSH4 0xd087d288
0x8dd PUSH1 0x40
0x8df MLOAD
0x8e0 DUP2
0x8e1 PUSH4 0xffffffff
0x8e6 AND
0x8e7 PUSH1 0xe0
0x8e9 PUSH1 0x2
0x8eb EXP
0x8ec MUL
0x8ed DUP2
0x8ee MSTORE
0x8ef PUSH1 0x4
0x8f1 ADD
0x8f2 PUSH1 0x20
0x8f4 PUSH1 0x40
0x8f6 MLOAD
0x8f7 DUP1
0x8f8 DUP4
0x8f9 SUB
0x8fa DUP2
0x8fb PUSH1 0x0
0x8fd DUP8
0x8fe DUP1
0x8ff EXTCODESIZE
0x900 ISZERO
0x901 DUP1
0x902 ISZERO
0x903 PUSH2 0x90b
0x906 JUMPI
---
0x8ca: JUMPDEST 
0x8cf: V703 = 0x1
0x8d1: V704 = 0xa0
0x8d3: V705 = 0x2
0x8d5: V706 = EXP 0x2 0xa0
0x8d6: V707 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d7: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x8d8: V709 = 0xd087d288
0x8dd: V710 = 0x40
0x8df: V711 = M[0x40]
0x8e1: V712 = 0xffffffff
0x8e6: V713 = AND 0xffffffff 0xd087d288
0x8e7: V714 = 0xe0
0x8e9: V715 = 0x2
0x8eb: V716 = EXP 0x2 0xe0
0x8ec: V717 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd087d288
0x8ee: M[V711] = 0xd087d28800000000000000000000000000000000000000000000000000000000
0x8ef: V718 = 0x4
0x8f1: V719 = ADD 0x4 V711
0x8f2: V720 = 0x20
0x8f4: V721 = 0x40
0x8f6: V722 = M[0x40]
0x8f9: V723 = SUB V719 V722
0x8fb: V724 = 0x0
0x8ff: V725 = EXTCODESIZE V708
0x900: V726 = ISZERO V725
0x902: V727 = ISZERO V726
0x903: V728 = 0x90b
0x906: JUMPI 0x90b V727
---
Entry stack: [V13, 0xc6, V201, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V708, 0xd087d288, V719, 0x20, V722, V723, V722, 0x0, V708, V726]
Exit stack: [V13, 0xc6, V201, V201, 0x0, V708, 0xd087d288, V719, 0x20, V722, V723, V722, 0x0, V708, V726]

================================

Block 0x907
[0x907:0x90a]
---
Predecessors: [0x8ca]
Successors: []
---
0x907 PUSH1 0x0
0x909 DUP1
0x90a REVERT
---
0x907: V729 = 0x0
0x90a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V201, V201, 0x0, V708, 0xd087d288, V719, 0x20, V722, V723, V722, 0x0, V708, V726]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V201, V201, 0x0, V708, 0xd087d288, V719, 0x20, V722, V723, V722, 0x0, V708, V726]

================================

Block 0x90b
[0x90b:0x915]
---
Predecessors: [0x8ca]
Successors: [0x916, 0x91f]
---
0x90b JUMPDEST
0x90c POP
0x90d GAS
0x90e CALL
0x90f ISZERO
0x910 DUP1
0x911 ISZERO
0x912 PUSH2 0x91f
0x915 JUMPI
---
0x90b: JUMPDEST 
0x90d: V730 = GAS
0x90e: V731 = CALL V730 V708 0x0 V722 V723 V722 0x20
0x90f: V732 = ISZERO V731
0x911: V733 = ISZERO V732
0x912: V734 = 0x91f
0x915: JUMPI 0x91f V733
---
Entry stack: [V13, 0xc6, V201, V201, 0x0, V708, 0xd087d288, V719, 0x20, V722, V723, V722, 0x0, V708, V726]
Stack pops: 7
Stack additions: [V732]
Exit stack: [V13, 0xc6, V201, V201, 0x0, V708, 0xd087d288, V719, V732]

================================

Block 0x916
[0x916:0x91e]
---
Predecessors: [0x90b]
Successors: []
---
0x916 RETURNDATASIZE
0x917 PUSH1 0x0
0x919 DUP1
0x91a RETURNDATACOPY
0x91b RETURNDATASIZE
0x91c PUSH1 0x0
0x91e REVERT
---
0x916: V735 = RETURNDATASIZE
0x917: V736 = 0x0
0x91a: RETURNDATACOPY 0x0 0x0 V735
0x91b: V737 = RETURNDATASIZE
0x91c: V738 = 0x0
0x91e: REVERT 0x0 V737
---
Entry stack: [V13, 0xc6, V201, V201, 0x0, V708, 0xd087d288, V719, V732]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V201, V201, 0x0, V708, 0xd087d288, V719, V732]

================================

Block 0x91f
[0x91f:0x930]
---
Predecessors: [0x90b]
Successors: [0x931, 0x935]
---
0x91f JUMPDEST
0x920 POP
0x921 POP
0x922 POP
0x923 POP
0x924 PUSH1 0x40
0x926 MLOAD
0x927 RETURNDATASIZE
0x928 PUSH1 0x20
0x92a DUP2
0x92b LT
0x92c ISZERO
0x92d PUSH2 0x935
0x930 JUMPI
---
0x91f: JUMPDEST 
0x924: V739 = 0x40
0x926: V740 = M[0x40]
0x927: V741 = RETURNDATASIZE
0x928: V742 = 0x20
0x92b: V743 = LT V741 0x20
0x92c: V744 = ISZERO V743
0x92d: V745 = 0x935
0x930: JUMPI 0x935 V744
---
Entry stack: [V13, 0xc6, V201, V201, 0x0, V708, 0xd087d288, V719, V732]
Stack pops: 4
Stack additions: [V740, V741]
Exit stack: [V13, 0xc6, V201, V201, 0x0, V740, V741]

================================

Block 0x931
[0x931:0x934]
---
Predecessors: [0x91f]
Successors: []
---
0x931 PUSH1 0x0
0x933 DUP1
0x934 REVERT
---
0x931: V746 = 0x0
0x934: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc6, V201, V201, 0x0, V740, V741]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc6, V201, V201, 0x0, V740, V741]

================================

Block 0x935
[0x935:0x9ac]
---
Predecessors: [0x91f]
Successors: [0xc6]
---
0x935 JUMPDEST
0x936 POP
0x937 MLOAD
0x938 PUSH1 0x2
0x93a DUP1
0x93b SLOAD
0x93c PUSH1 0x0
0x93e SWAP1
0x93f DUP2
0x940 MSTORE
0x941 PUSH1 0x1
0x943 PUSH1 0x20
0x945 DUP2
0x946 SWAP1
0x947 MSTORE
0x948 PUSH1 0x40
0x94a DUP1
0x94b DUP4
0x94c SHA3
0x94d DUP1
0x94e SLOAD
0x94f PUSH1 0x1
0x951 PUSH1 0xa0
0x953 PUSH1 0x2
0x955 EXP
0x956 SUB
0x957 SWAP1
0x958 SWAP10
0x959 AND
0x95a PUSH3 0x10000
0x95e MUL
0x95f PUSH22 0xffffffffffffffffffffffffffffffffffffffff0000
0x976 NOT
0x977 SWAP1
0x978 SWAP10
0x979 AND
0x97a SWAP9
0x97b SWAP1
0x97c SWAP9
0x97d OR
0x97e SWAP1
0x97f SWAP8
0x980 SSTORE
0x981 DUP3
0x982 SLOAD
0x983 DUP3
0x984 MSTORE
0x985 SWAP6
0x986 DUP2
0x987 SHA3
0x988 DUP1
0x989 SLOAD
0x98a SWAP4
0x98b SWAP1
0x98c SWAP2
0x98d SIGNEXTEND
0x98e DUP7
0x98f SIGNEXTEND
0x990 PUSH2 0xffff
0x993 AND
0x994 PUSH2 0xffff
0x997 NOT
0x998 SWAP1
0x999 SWAP4
0x99a AND
0x99b SWAP3
0x99c SWAP1
0x99d SWAP3
0x99e OR
0x99f SWAP1
0x9a0 SWAP2
0x9a1 SSTORE
0x9a2 DUP1
0x9a3 SLOAD
0x9a4 SWAP1
0x9a5 SWAP4
0x9a6 ADD
0x9a7 SWAP1
0x9a8 SWAP3
0x9a9 SSTORE
0x9aa POP
0x9ab POP
0x9ac JUMP
---
0x935: JUMPDEST 
0x937: V747 = M[V740]
0x938: V748 = 0x2
0x93b: V749 = S[0x2]
0x93c: V750 = 0x0
0x940: M[0x0] = V749
0x941: V751 = 0x1
0x943: V752 = 0x20
0x947: M[0x20] = 0x1
0x948: V753 = 0x40
0x94c: V754 = SHA3 0x0 0x40
0x94e: V755 = S[V754]
0x94f: V756 = 0x1
0x951: V757 = 0xa0
0x953: V758 = 0x2
0x955: V759 = EXP 0x2 0xa0
0x956: V760 = SUB 0x10000000000000000000000000000000000000000 0x1
0x959: V761 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x95a: V762 = 0x10000
0x95e: V763 = MUL 0x10000 V761
0x95f: V764 = 0xffffffffffffffffffffffffffffffffffffffff0000
0x976: V765 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x979: V766 = AND V755 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff
0x97d: V767 = OR V766 V763
0x980: S[V754] = V767
0x982: V768 = S[0x2]
0x984: M[0x0] = V768
0x987: V769 = SHA3 0x0 0x40
0x989: V770 = S[V769]
0x98d: V771 = SIGNEXTEND 0x0 V747
0x98f: V772 = SIGNEXTEND 0x1 V771
0x990: V773 = 0xffff
0x993: V774 = AND 0xffff V772
0x994: V775 = 0xffff
0x997: V776 = NOT 0xffff
0x99a: V777 = AND V770 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x99e: V778 = OR V777 V774
0x9a1: S[V769] = V778
0x9a3: V779 = S[0x2]
0x9a6: V780 = ADD 0x1 V779
0x9a9: S[0x2] = V780
0x9ac: JUMP 0xc6
---
Entry stack: [V13, 0xc6, V201, V201, 0x0, V740, V741]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x9ad
[0x9ad:0x9d0]
---
Predecessors: [0x24b, 0x743]
Successors: [0x9d1, 0x9da]
---
0x9ad JUMPDEST
0x9ae PUSH1 0x40
0x9b0 MLOAD
0x9b1 CALLER
0x9b2 SWAP1
0x9b3 ADDRESS
0x9b4 BALANCE
0x9b5 DUP1
0x9b6 ISZERO
0x9b7 PUSH2 0x8fc
0x9ba MUL
0x9bb SWAP2
0x9bc PUSH1 0x0
0x9be DUP2
0x9bf DUP2
0x9c0 DUP2
0x9c1 DUP6
0x9c2 DUP9
0x9c3 DUP9
0x9c4 CALL
0x9c5 SWAP4
0x9c6 POP
0x9c7 POP
0x9c8 POP
0x9c9 POP
0x9ca ISZERO
0x9cb DUP1
0x9cc ISZERO
0x9cd PUSH2 0x9da
0x9d0 JUMPI
---
0x9ad: JUMPDEST 
0x9ae: V781 = 0x40
0x9b0: V782 = M[0x40]
0x9b1: V783 = CALLER
0x9b3: V784 = ADDRESS
0x9b4: V785 = BALANCE V784
0x9b6: V786 = ISZERO V785
0x9b7: V787 = 0x8fc
0x9ba: V788 = MUL 0x8fc V786
0x9bc: V789 = 0x0
0x9c4: V790 = CALL V788 V783 V785 V782 0x0 V782 0x0
0x9ca: V791 = ISZERO V790
0x9cc: V792 = ISZERO V791
0x9cd: V793 = 0x9da
0x9d0: JUMPI 0x9da V792
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x1}, S2, S1, {0xc6, 0x74b}]
Stack pops: 0
Stack additions: [V791]
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x1}, S2, S1, {0xc6, 0x74b}, V791]

================================

Block 0x9d1
[0x9d1:0x9d9]
---
Predecessors: [0x9ad]
Successors: []
---
0x9d1 RETURNDATASIZE
0x9d2 PUSH1 0x0
0x9d4 DUP1
0x9d5 RETURNDATACOPY
0x9d6 RETURNDATASIZE
0x9d7 PUSH1 0x0
0x9d9 REVERT
---
0x9d1: V794 = RETURNDATASIZE
0x9d2: V795 = 0x0
0x9d5: RETURNDATACOPY 0x0 0x0 V794
0x9d6: V796 = RETURNDATASIZE
0x9d7: V797 = 0x0
0x9d9: REVERT 0x0 V796
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}, S3, S2, {0xc6, 0x74b}, V791]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}, S3, S2, {0xc6, 0x74b}, V791]

================================

Block 0x9da
[0x9da:0x9dc]
---
Predecessors: [0x9ad]
Successors: [0xc6, 0x74b]
---
0x9da JUMPDEST
0x9db POP
0x9dc JUMP
---
0x9da: JUMPDEST 
0x9dc: JUMP {0xc6, 0x74b}
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}, S3, S2, {0xc6, 0x74b}, V791]
Stack pops: 2
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}, S3, S2]

================================

Block 0x9dd
[0x9dd:0x9e2]
---
Predecessors: [0x260]
Successors: [0xf8]
---
0x9dd JUMPDEST
0x9de PUSH1 0x2
0x9e0 SLOAD
0x9e1 DUP2
0x9e2 JUMP
---
0x9dd: JUMPDEST 
0x9de: V798 = 0x2
0x9e0: V799 = S[0x2]
0x9e2: JUMP 0xf8
---
Entry stack: [V13, 0xf8]
Stack pops: 1
Stack additions: [S0, V799]
Exit stack: [V13, 0xf8, V799]

================================

Block 0x9e3
[0x9e3:0xa40]
---
Predecessors: [0x4b6]
Successors: [0xa41]
---
0x9e3 JUMPDEST
0x9e4 PUSH1 0x0
0x9e6 DUP1
0x9e7 PUSH1 0x0
0x9e9 PUSH2 0xb62
0x9ec NUMBER
0x9ed PUSH2 0xb56
0x9f0 TIMESTAMP
0x9f1 DUP9
0x9f2 PUSH1 0x40
0x9f4 MLOAD
0x9f5 PUSH1 0x20
0x9f7 ADD
0x9f8 DUP1
0x9f9 DUP3
0x9fa PUSH1 0x1
0x9fc PUSH1 0xa0
0x9fe PUSH1 0x2
0xa00 EXP
0xa01 SUB
0xa02 AND
0xa03 PUSH1 0x1
0xa05 PUSH1 0xa0
0xa07 PUSH1 0x2
0xa09 EXP
0xa0a SUB
0xa0b AND
0xa0c PUSH13 0x1000000000000000000000000
0xa1a MUL
0xa1b DUP2
0xa1c MSTORE
0xa1d PUSH1 0x14
0xa1f ADD
0xa20 SWAP2
0xa21 POP
0xa22 POP
0xa23 PUSH1 0x40
0xa25 MLOAD
0xa26 PUSH1 0x20
0xa28 DUP2
0xa29 DUP4
0xa2a SUB
0xa2b SUB
0xa2c DUP2
0xa2d MSTORE
0xa2e SWAP1
0xa2f PUSH1 0x40
0xa31 MSTORE
0xa32 PUSH1 0x40
0xa34 MLOAD
0xa35 DUP1
0xa36 DUP3
0xa37 DUP1
0xa38 MLOAD
0xa39 SWAP1
0xa3a PUSH1 0x20
0xa3c ADD
0xa3d SWAP1
0xa3e DUP1
0xa3f DUP4
0xa40 DUP4
---
0x9e3: JUMPDEST 
0x9e4: V800 = 0x0
0x9e7: V801 = 0x0
0x9e9: V802 = 0xb62
0x9ec: V803 = NUMBER
0x9ed: V804 = 0xb56
0x9f0: V805 = TIMESTAMP
0x9f2: V806 = 0x40
0x9f4: V807 = M[0x40]
0x9f5: V808 = 0x20
0x9f7: V809 = ADD 0x20 V807
0x9fa: V810 = 0x1
0x9fc: V811 = 0xa0
0x9fe: V812 = 0x2
0xa00: V813 = EXP 0x2 0xa0
0xa01: V814 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa02: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0xa03: V816 = 0x1
0xa05: V817 = 0xa0
0xa07: V818 = 0x2
0xa09: V819 = EXP 0x2 0xa0
0xa0a: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0b: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff V815
0xa0c: V822 = 0x1000000000000000000000000
0xa1a: V823 = MUL 0x1000000000000000000000000 V821
0xa1c: M[V809] = V823
0xa1d: V824 = 0x14
0xa1f: V825 = ADD 0x14 V809
0xa23: V826 = 0x40
0xa25: V827 = M[0x40]
0xa26: V828 = 0x20
0xa2a: V829 = SUB V825 V827
0xa2b: V830 = SUB V829 0x20
0xa2d: M[V827] = V830
0xa2f: V831 = 0x40
0xa31: M[0x40] = V825
0xa32: V832 = 0x40
0xa34: V833 = M[0x40]
0xa38: V834 = M[V827]
0xa3a: V835 = 0x20
0xa3c: V836 = ADD 0x20 V827
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x1}, S4, S3, 0x581, V474, V478]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V827, V833, V833, V836, V834, V834, V833, V836]
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x1}, S4, S3, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V827, V833, V833, V836, V834, V834, V833, V836]

================================

Block 0xa41
[0xa41:0xa49]
---
Predecessors: [0x9e3, 0xa4a]
Successors: [0xa4a, 0xa60]
---
0xa41 JUMPDEST
0xa42 PUSH1 0x20
0xa44 DUP4
0xa45 LT
0xa46 PUSH2 0xa60
0xa49 JUMPI
---
0xa41: JUMPDEST 
0xa42: V837 = 0x20
0xa45: V838 = LT S2 0x20
0xa46: V839 = 0xa60
0xa49: JUMPI 0xa60 V838
---
Entry stack: [S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x0, 0x1}, S19, S18, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V827, V833, V833, V836, V834, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x0, 0x1}, S19, S18, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V827, V833, V833, V836, V834, S2, S1, S0]

================================

Block 0xa4a
[0xa4a:0xa5f]
---
Predecessors: [0xa41]
Successors: [0xa41]
---
0xa4a DUP1
0xa4b MLOAD
0xa4c DUP3
0xa4d MSTORE
0xa4e PUSH1 0x1f
0xa50 NOT
0xa51 SWAP1
0xa52 SWAP3
0xa53 ADD
0xa54 SWAP2
0xa55 PUSH1 0x20
0xa57 SWAP2
0xa58 DUP3
0xa59 ADD
0xa5a SWAP2
0xa5b ADD
0xa5c PUSH2 0xa41
0xa5f JUMP
---
0xa4b: V840 = M[S0]
0xa4d: M[S1] = V840
0xa4e: V841 = 0x1f
0xa50: V842 = NOT 0x1f
0xa53: V843 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xa55: V844 = 0x20
0xa59: V845 = ADD 0x20 S1
0xa5b: V846 = ADD 0x20 S0
0xa5c: V847 = 0xa41
0xa5f: JUMP 0xa41
---
Entry stack: [S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x0, 0x1}, S19, S18, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V827, V833, V833, V836, V834, S2, S1, S0]
Stack pops: 3
Stack additions: [V843, V845, V846]
Exit stack: [S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x0, 0x1}, S19, S18, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V827, V833, V833, V836, V834, V843, V845, V846]

================================

Block 0xa60
[0xa60:0xa94]
---
Predecessors: [0xa41]
Successors: [0xa95, 0xa96]
---
0xa60 JUMPDEST
0xa61 MLOAD
0xa62 DUP2
0xa63 MLOAD
0xa64 PUSH1 0x20
0xa66 SWAP4
0xa67 SWAP1
0xa68 SWAP4
0xa69 SUB
0xa6a PUSH2 0x100
0xa6d EXP
0xa6e PUSH1 0x0
0xa70 NOT
0xa71 ADD
0xa72 DUP1
0xa73 NOT
0xa74 SWAP1
0xa75 SWAP2
0xa76 AND
0xa77 SWAP3
0xa78 AND
0xa79 SWAP2
0xa7a SWAP1
0xa7b SWAP2
0xa7c OR
0xa7d SWAP1
0xa7e MSTORE
0xa7f PUSH1 0x40
0xa81 MLOAD
0xa82 SWAP3
0xa83 ADD
0xa84 DUP3
0xa85 SWAP1
0xa86 SUB
0xa87 SWAP1
0xa88 SWAP2
0xa89 SHA3
0xa8a SWAP3
0xa8b POP
0xa8c POP
0xa8d POP
0xa8e DUP2
0xa8f ISZERO
0xa90 ISZERO
0xa91 PUSH2 0xa96
0xa94 JUMPI
---
0xa60: JUMPDEST 
0xa61: V848 = M[S0]
0xa63: V849 = M[S1]
0xa64: V850 = 0x20
0xa69: V851 = SUB 0x20 S2
0xa6a: V852 = 0x100
0xa6d: V853 = EXP 0x100 V851
0xa6e: V854 = 0x0
0xa70: V855 = NOT 0x0
0xa71: V856 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V853
0xa73: V857 = NOT V856
0xa76: V858 = AND V848 V857
0xa78: V859 = AND V849 V856
0xa7c: V860 = OR V859 V858
0xa7e: M[S1] = V860
0xa7f: V861 = 0x40
0xa81: V862 = M[0x40]
0xa83: V863 = ADD V833 V834
0xa86: V864 = SUB V863 V862
0xa89: V865 = SHA3 V862 V864
0xa8f: V866 = ISZERO V805
0xa90: V867 = ISZERO V866
0xa91: V868 = 0xa96
0xa94: JUMPI 0xa96 V867
---
Entry stack: [S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x0, 0x1}, S19, S18, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V827, V833, V833, V836, V834, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V865]
Exit stack: [S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x0, 0x1}, S19, S18, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V865]

================================

Block 0xa95
[0xa95:0xa95]
---
Predecessors: [0xa60]
Successors: []
---
0xa95 INVALID
---
0xa95: INVALID 
---
Entry stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, S11, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V865]
Stack pops: 0
Stack additions: []
Exit stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, S11, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V865]

================================

Block 0xa96
[0xa96:0xaef]
---
Predecessors: [0xa60]
Successors: [0xaf0]
---
0xa96 JUMPDEST
0xa97 DIV
0xa98 PUSH2 0xb56
0xa9b GASLIMIT
0xa9c PUSH2 0xb56
0xa9f TIMESTAMP
0xaa0 COINBASE
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 PUSH1 0x20
0xaa6 ADD
0xaa7 DUP1
0xaa8 DUP3
0xaa9 PUSH1 0x1
0xaab PUSH1 0xa0
0xaad PUSH1 0x2
0xaaf EXP
0xab0 SUB
0xab1 AND
0xab2 PUSH1 0x1
0xab4 PUSH1 0xa0
0xab6 PUSH1 0x2
0xab8 EXP
0xab9 SUB
0xaba AND
0xabb PUSH13 0x1000000000000000000000000
0xac9 MUL
0xaca DUP2
0xacb MSTORE
0xacc PUSH1 0x14
0xace ADD
0xacf SWAP2
0xad0 POP
0xad1 POP
0xad2 PUSH1 0x40
0xad4 MLOAD
0xad5 PUSH1 0x20
0xad7 DUP2
0xad8 DUP4
0xad9 SUB
0xada SUB
0xadb DUP2
0xadc MSTORE
0xadd SWAP1
0xade PUSH1 0x40
0xae0 MSTORE
0xae1 PUSH1 0x40
0xae3 MLOAD
0xae4 DUP1
0xae5 DUP3
0xae6 DUP1
0xae7 MLOAD
0xae8 SWAP1
0xae9 PUSH1 0x20
0xaeb ADD
0xaec SWAP1
0xaed DUP1
0xaee DUP4
0xaef DUP4
---
0xa96: JUMPDEST 
0xa97: V869 = DIV V865 V805
0xa98: V870 = 0xb56
0xa9b: V871 = GASLIMIT
0xa9c: V872 = 0xb56
0xa9f: V873 = TIMESTAMP
0xaa0: V874 = COINBASE
0xaa1: V875 = 0x40
0xaa3: V876 = M[0x40]
0xaa4: V877 = 0x20
0xaa6: V878 = ADD 0x20 V876
0xaa9: V879 = 0x1
0xaab: V880 = 0xa0
0xaad: V881 = 0x2
0xaaf: V882 = EXP 0x2 0xa0
0xab0: V883 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab1: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V874
0xab2: V885 = 0x1
0xab4: V886 = 0xa0
0xab6: V887 = 0x2
0xab8: V888 = EXP 0x2 0xa0
0xab9: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaba: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0xabb: V891 = 0x1000000000000000000000000
0xac9: V892 = MUL 0x1000000000000000000000000 V890
0xacb: M[V878] = V892
0xacc: V893 = 0x14
0xace: V894 = ADD 0x14 V878
0xad2: V895 = 0x40
0xad4: V896 = M[0x40]
0xad5: V897 = 0x20
0xad9: V898 = SUB V894 V896
0xada: V899 = SUB V898 0x20
0xadc: M[V896] = V899
0xade: V900 = 0x40
0xae0: M[0x40] = V894
0xae1: V901 = 0x40
0xae3: V902 = M[0x40]
0xae7: V903 = M[V896]
0xae9: V904 = 0x20
0xaeb: V905 = ADD 0x20 V896
---
Entry stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, S11, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V805, V865]
Stack pops: 2
Stack additions: [V869, 0xb56, V871, 0xb56, V873, V896, V902, V902, V905, V903, V903, V902, V905]
Exit stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, S12, S11, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V896, V902, V902, V905, V903, V903, V902, V905]

================================

Block 0xaf0
[0xaf0:0xaf8]
---
Predecessors: [0xa96, 0xaf9]
Successors: [0xaf9, 0xb0f]
---
0xaf0 JUMPDEST
0xaf1 PUSH1 0x20
0xaf3 DUP4
0xaf4 LT
0xaf5 PUSH2 0xb0f
0xaf8 JUMPI
---
0xaf0: JUMPDEST 
0xaf1: V906 = 0x20
0xaf4: V907 = LT S2 0x20
0xaf5: V908 = 0xb0f
0xaf8: JUMPI 0xb0f V907
---
Entry stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, {0x0, 0x1}, S23, S22, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V896, V902, V902, V905, V903, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, {0x0, 0x1}, S23, S22, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V896, V902, V902, V905, V903, S2, S1, S0]

================================

Block 0xaf9
[0xaf9:0xb0e]
---
Predecessors: [0xaf0]
Successors: [0xaf0]
---
0xaf9 DUP1
0xafa MLOAD
0xafb DUP3
0xafc MSTORE
0xafd PUSH1 0x1f
0xaff NOT
0xb00 SWAP1
0xb01 SWAP3
0xb02 ADD
0xb03 SWAP2
0xb04 PUSH1 0x20
0xb06 SWAP2
0xb07 DUP3
0xb08 ADD
0xb09 SWAP2
0xb0a ADD
0xb0b PUSH2 0xaf0
0xb0e JUMP
---
0xafa: V909 = M[S0]
0xafc: M[S1] = V909
0xafd: V910 = 0x1f
0xaff: V911 = NOT 0x1f
0xb02: V912 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xb04: V913 = 0x20
0xb08: V914 = ADD 0x20 S1
0xb0a: V915 = ADD 0x20 S0
0xb0b: V916 = 0xaf0
0xb0e: JUMP 0xaf0
---
Entry stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, {0x0, 0x1}, S23, S22, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V896, V902, V902, V905, V903, S2, S1, S0]
Stack pops: 3
Stack additions: [V912, V914, V915]
Exit stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, {0x0, 0x1}, S23, S22, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V896, V902, V902, V905, V903, V912, V914, V915]

================================

Block 0xb0f
[0xb0f:0xb43]
---
Predecessors: [0xaf0]
Successors: [0xb44, 0xb45]
---
0xb0f JUMPDEST
0xb10 MLOAD
0xb11 DUP2
0xb12 MLOAD
0xb13 PUSH1 0x20
0xb15 SWAP4
0xb16 SWAP1
0xb17 SWAP4
0xb18 SUB
0xb19 PUSH2 0x100
0xb1c EXP
0xb1d PUSH1 0x0
0xb1f NOT
0xb20 ADD
0xb21 DUP1
0xb22 NOT
0xb23 SWAP1
0xb24 SWAP2
0xb25 AND
0xb26 SWAP3
0xb27 AND
0xb28 SWAP2
0xb29 SWAP1
0xb2a SWAP2
0xb2b OR
0xb2c SWAP1
0xb2d MSTORE
0xb2e PUSH1 0x40
0xb30 MLOAD
0xb31 SWAP3
0xb32 ADD
0xb33 DUP3
0xb34 SWAP1
0xb35 SUB
0xb36 SWAP1
0xb37 SWAP2
0xb38 SHA3
0xb39 SWAP3
0xb3a POP
0xb3b POP
0xb3c POP
0xb3d DUP2
0xb3e ISZERO
0xb3f ISZERO
0xb40 PUSH2 0xb45
0xb43 JUMPI
---
0xb0f: JUMPDEST 
0xb10: V917 = M[S0]
0xb12: V918 = M[S1]
0xb13: V919 = 0x20
0xb18: V920 = SUB 0x20 S2
0xb19: V921 = 0x100
0xb1c: V922 = EXP 0x100 V920
0xb1d: V923 = 0x0
0xb1f: V924 = NOT 0x0
0xb20: V925 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V922
0xb22: V926 = NOT V925
0xb25: V927 = AND V917 V926
0xb27: V928 = AND V918 V925
0xb2b: V929 = OR V928 V927
0xb2d: M[S1] = V929
0xb2e: V930 = 0x40
0xb30: V931 = M[0x40]
0xb32: V932 = ADD V902 V903
0xb35: V933 = SUB V932 V931
0xb38: V934 = SHA3 V931 V933
0xb3e: V935 = ISZERO V873
0xb3f: V936 = ISZERO V935
0xb40: V937 = 0xb45
0xb43: JUMPI 0xb45 V936
---
Entry stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, {0x0, 0x1}, S23, S22, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V896, V902, V902, V905, V903, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V934]
Exit stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, {0x0, 0x1}, S23, S22, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V934]

================================

Block 0xb44
[0xb44:0xb44]
---
Predecessors: [0xb0f]
Successors: []
---
0xb44 INVALID
---
0xb44: INVALID 
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x1}, S16, S15, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V934]
Stack pops: 0
Stack additions: []
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x1}, S16, S15, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V934]

================================

Block 0xb45
[0xb45:0xb55]
---
Predecessors: [0xb0f]
Successors: [0xc1c]
---
0xb45 JUMPDEST
0xb46 DIV
0xb47 PUSH2 0xb56
0xb4a TIMESTAMP
0xb4b DIFFICULTY
0xb4c PUSH4 0xffffffff
0xb51 PUSH2 0xc1c
0xb54 AND
0xb55 JUMP
---
0xb45: JUMPDEST 
0xb46: V938 = DIV V934 V873
0xb47: V939 = 0xb56
0xb4a: V940 = TIMESTAMP
0xb4b: V941 = DIFFICULTY
0xb4c: V942 = 0xffffffff
0xb51: V943 = 0xc1c
0xb54: V944 = AND 0xc1c 0xffffffff
0xb55: JUMP 0xc1c
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x1}, S16, S15, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V873, V934]
Stack pops: 2
Stack additions: [V938, 0xb56, V940, V941]
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x1}, S16, S15, 0x581, V474, V478, 0x0, 0x0, 0x0, 0xb62, V803, 0xb56, V869, 0xb56, V871, 0xb56, V938, 0xb56, V940, V941]

================================

Block 0xb56
[0xb56:0xb61]
---
Predecessors: [0xc14, 0xc8e]
Successors: [0xc1c]
---
0xb56 JUMPDEST
0xb57 SWAP1
0xb58 PUSH4 0xffffffff
0xb5d PUSH2 0xc1c
0xb60 AND
0xb61 JUMP
---
0xb56: JUMPDEST 
0xb58: V945 = 0xffffffff
0xb5d: V946 = 0xc1c
0xb60: V947 = AND 0xc1c 0xffffffff
0xb61: JUMP 0xc1c
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0xb62
[0xb62:0xb90]
---
Predecessors: [0xc14, 0xc8e]
Successors: [0xb91]
---
0xb62 JUMPDEST
0xb63 PUSH1 0x40
0xb65 MLOAD
0xb66 PUSH1 0x20
0xb68 ADD
0xb69 DUP1
0xb6a DUP3
0xb6b DUP2
0xb6c MSTORE
0xb6d PUSH1 0x20
0xb6f ADD
0xb70 SWAP2
0xb71 POP
0xb72 POP
0xb73 PUSH1 0x40
0xb75 MLOAD
0xb76 PUSH1 0x20
0xb78 DUP2
0xb79 DUP4
0xb7a SUB
0xb7b SUB
0xb7c DUP2
0xb7d MSTORE
0xb7e SWAP1
0xb7f PUSH1 0x40
0xb81 MSTORE
0xb82 PUSH1 0x40
0xb84 MLOAD
0xb85 DUP1
0xb86 DUP3
0xb87 DUP1
0xb88 MLOAD
0xb89 SWAP1
0xb8a PUSH1 0x20
0xb8c ADD
0xb8d SWAP1
0xb8e DUP1
0xb8f DUP4
0xb90 DUP4
---
0xb62: JUMPDEST 
0xb63: V948 = 0x40
0xb65: V949 = M[0x40]
0xb66: V950 = 0x20
0xb68: V951 = ADD 0x20 V949
0xb6c: M[V951] = S0
0xb6d: V952 = 0x20
0xb6f: V953 = ADD 0x20 V951
0xb73: V954 = 0x40
0xb75: V955 = M[0x40]
0xb76: V956 = 0x20
0xb7a: V957 = SUB V953 V955
0xb7b: V958 = SUB V957 0x20
0xb7d: M[V955] = V958
0xb7f: V959 = 0x40
0xb81: M[0x40] = V953
0xb82: V960 = 0x40
0xb84: V961 = M[0x40]
0xb88: V962 = M[V955]
0xb8a: V963 = 0x20
0xb8c: V964 = ADD 0x20 V955
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V955, V961, V961, V964, V962, V962, V961, V964]
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V955, V961, V961, V964, V962, V962, V961, V964]

================================

Block 0xb91
[0xb91:0xb99]
---
Predecessors: [0xb62, 0xb9a]
Successors: [0xb9a, 0xbb0]
---
0xb91 JUMPDEST
0xb92 PUSH1 0x20
0xb94 DUP4
0xb95 LT
0xb96 PUSH2 0xbb0
0xb99 JUMPI
---
0xb91: JUMPDEST 
0xb92: V965 = 0x20
0xb95: V966 = LT S2 0x20
0xb96: V967 = 0xbb0
0xb99: JUMPI 0xbb0 V966
---
Entry stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V955, V961, V961, V964, V962, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V955, V961, V961, V964, V962, S2, S1, S0]

================================

Block 0xb9a
[0xb9a:0xbaf]
---
Predecessors: [0xb91]
Successors: [0xb91]
---
0xb9a DUP1
0xb9b MLOAD
0xb9c DUP3
0xb9d MSTORE
0xb9e PUSH1 0x1f
0xba0 NOT
0xba1 SWAP1
0xba2 SWAP3
0xba3 ADD
0xba4 SWAP2
0xba5 PUSH1 0x20
0xba7 SWAP2
0xba8 DUP3
0xba9 ADD
0xbaa SWAP2
0xbab ADD
0xbac PUSH2 0xb91
0xbaf JUMP
---
0xb9b: V968 = M[S0]
0xb9d: M[S1] = V968
0xb9e: V969 = 0x1f
0xba0: V970 = NOT 0x1f
0xba3: V971 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xba5: V972 = 0x20
0xba9: V973 = ADD 0x20 S1
0xbab: V974 = ADD 0x20 S0
0xbac: V975 = 0xb91
0xbaf: JUMP 0xb91
---
Entry stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V955, V961, V961, V964, V962, S2, S1, S0]
Stack pops: 3
Stack additions: [V971, V973, V974]
Exit stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V955, V961, V961, V964, V962, V971, V973, V974]

================================

Block 0xbb0
[0xbb0:0xbf3]
---
Predecessors: [0xb91]
Successors: [0xbf4, 0xc0c]
---
0xbb0 JUMPDEST
0xbb1 MLOAD
0xbb2 DUP2
0xbb3 MLOAD
0xbb4 PUSH1 0x20
0xbb6 SWAP4
0xbb7 SWAP1
0xbb8 SWAP4
0xbb9 SUB
0xbba PUSH2 0x100
0xbbd EXP
0xbbe PUSH1 0x0
0xbc0 NOT
0xbc1 ADD
0xbc2 DUP1
0xbc3 NOT
0xbc4 SWAP1
0xbc5 SWAP2
0xbc6 AND
0xbc7 SWAP3
0xbc8 AND
0xbc9 SWAP2
0xbca SWAP1
0xbcb SWAP2
0xbcc OR
0xbcd SWAP1
0xbce MSTORE
0xbcf PUSH1 0x40
0xbd1 MLOAD
0xbd2 SWAP3
0xbd3 ADD
0xbd4 DUP3
0xbd5 SWAP1
0xbd6 SUB
0xbd7 SWAP1
0xbd8 SWAP2
0xbd9 SHA3
0xbda SWAP4
0xbdb POP
0xbdc DUP7
0xbdd SWAP3
0xbde POP
0xbdf PUSH2 0x3e8
0xbe2 SWAP2
0xbe3 POP
0xbe4 DUP4
0xbe5 SWAP1
0xbe6 POP
0xbe7 DIV
0xbe8 PUSH2 0x3e8
0xbeb MUL
0xbec DUP3
0xbed SUB
0xbee LT
0xbef ISZERO
0xbf0 PUSH2 0xc0c
0xbf3 JUMPI
---
0xbb0: JUMPDEST 
0xbb1: V976 = M[S0]
0xbb3: V977 = M[S1]
0xbb4: V978 = 0x20
0xbb9: V979 = SUB 0x20 S2
0xbba: V980 = 0x100
0xbbd: V981 = EXP 0x100 V979
0xbbe: V982 = 0x0
0xbc0: V983 = NOT 0x0
0xbc1: V984 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V981
0xbc3: V985 = NOT V984
0xbc6: V986 = AND V976 V985
0xbc8: V987 = AND V977 V984
0xbcc: V988 = OR V987 V986
0xbce: M[S1] = V988
0xbcf: V989 = 0x40
0xbd1: V990 = M[0x40]
0xbd3: V991 = ADD V961 V962
0xbd6: V992 = SUB V991 V990
0xbd9: V993 = SHA3 V990 V992
0xbdf: V994 = 0x3e8
0xbe7: V995 = DIV V993 0x3e8
0xbe8: V996 = 0x3e8
0xbeb: V997 = MUL 0x3e8 V995
0xbed: V998 = SUB V993 V997
0xbee: V999 = LT V998 S11
0xbef: V1000 = ISZERO V999
0xbf0: V1001 = 0xc0c
0xbf3: JUMPI 0xc0c V1000
---
Entry stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V955, V961, V961, V964, V962, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, V993]
Exit stack: [S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V993]

================================

Block 0xbf4
[0xbf4:0xc0b]
---
Predecessors: [0xbb0]
Successors: [0xc14]
---
0xbf4 PUSH1 0x1
0xbf6 PUSH1 0x5
0xbf8 PUSH2 0x3e8
0xbfb DUP4
0xbfc DIV
0xbfd PUSH2 0x3e8
0xc00 MUL
0xc01 DUP4
0xc02 SUB
0xc03 LT
0xc04 SWAP3
0xc05 POP
0xc06 SWAP3
0xc07 POP
0xc08 PUSH2 0xc14
0xc0b JUMP
---
0xbf4: V1002 = 0x1
0xbf6: V1003 = 0x5
0xbf8: V1004 = 0x3e8
0xbfc: V1005 = DIV V993 0x3e8
0xbfd: V1006 = 0x3e8
0xc00: V1007 = MUL 0x3e8 V1005
0xc02: V1008 = SUB V993 V1007
0xc03: V1009 = LT V1008 0x5
0xc08: V1010 = 0xc14
0xc0b: JUMP 0xc14
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V993]
Stack pops: 3
Stack additions: [0x1, V1009, S0]
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, V1009, V993]

================================

Block 0xc0c
[0xc0c:0xc13]
---
Predecessors: [0xbb0]
Successors: [0xc14]
---
0xc0c JUMPDEST
0xc0d PUSH1 0x0
0xc0f DUP1
0xc10 SWAP3
0xc11 POP
0xc12 SWAP3
0xc13 POP
---
0xc0c: JUMPDEST 
0xc0d: V1011 = 0x0
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V993]
Stack pops: 3
Stack additions: [0x0, 0x0, S0]
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x0, V993]

================================

Block 0xc14
[0xc14:0xc1b]
---
Predecessors: [0xbf4, 0xc0c]
Successors: [0xc6, 0x581, 0xb56, 0xb62]
---
0xc14 JUMPDEST
0xc15 POP
0xc16 SWAP3
0xc17 POP
0xc18 SWAP3
0xc19 SWAP1
0xc1a POP
0xc1b JUMP
---
0xc14: JUMPDEST 
0xc1b: JUMP S5
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, S1, V993]
Stack pops: 6
Stack additions: [S2, S1]
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x1}, S1]

================================

Block 0xc1c
[0xc1c:0xc27]
---
Predecessors: [0xb45, 0xb56]
Successors: [0xc28, 0xc8e]
---
0xc1c JUMPDEST
0xc1d DUP2
0xc1e DUP2
0xc1f ADD
0xc20 DUP3
0xc21 DUP2
0xc22 LT
0xc23 ISZERO
0xc24 PUSH2 0xc8e
0xc27 JUMPI
---
0xc1c: JUMPDEST 
0xc1f: V1012 = ADD S0 S1
0xc22: V1013 = LT V1012 S1
0xc23: V1014 = ISZERO V1013
0xc24: V1015 = 0xc8e
0xc27: JUMPI 0xc8e V1014
---
Entry stack: [S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1012]
Exit stack: [S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1012]

================================

Block 0xc28
[0xc28:0xc8d]
---
Predecessors: [0xc1c]
Successors: []
---
0xc28 PUSH1 0x40
0xc2a DUP1
0xc2b MLOAD
0xc2c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc4d DUP2
0xc4e MSTORE
0xc4f PUSH1 0x20
0xc51 PUSH1 0x4
0xc53 DUP3
0xc54 ADD
0xc55 MSTORE
0xc56 PUSH1 0x13
0xc58 PUSH1 0x24
0xc5a DUP3
0xc5b ADD
0xc5c MSTORE
0xc5d PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0xc7e PUSH1 0x44
0xc80 DUP3
0xc81 ADD
0xc82 MSTORE
0xc83 SWAP1
0xc84 MLOAD
0xc85 SWAP1
0xc86 DUP2
0xc87 SWAP1
0xc88 SUB
0xc89 PUSH1 0x64
0xc8b ADD
0xc8c SWAP1
0xc8d REVERT
---
0xc28: V1016 = 0x40
0xc2b: V1017 = M[0x40]
0xc2c: V1018 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc4e: M[V1017] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc4f: V1019 = 0x20
0xc51: V1020 = 0x4
0xc54: V1021 = ADD V1017 0x4
0xc55: M[V1021] = 0x20
0xc56: V1022 = 0x13
0xc58: V1023 = 0x24
0xc5b: V1024 = ADD V1017 0x24
0xc5c: M[V1024] = 0x13
0xc5d: V1025 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0xc7e: V1026 = 0x44
0xc81: V1027 = ADD V1017 0x44
0xc82: M[V1027] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0xc84: V1028 = M[0x40]
0xc88: V1029 = SUB V1017 V1028
0xc89: V1030 = 0x64
0xc8b: V1031 = ADD 0x64 V1029
0xc8d: REVERT V1028 V1031
---
Entry stack: [S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1012]
Stack pops: 0
Stack additions: []
Exit stack: [S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1012]

================================

Block 0xc8e
[0xc8e:0xc93]
---
Predecessors: [0xc1c]
Successors: [0xc6, 0x581, 0xb56, 0xb62]
---
0xc8e JUMPDEST
0xc8f SWAP3
0xc90 SWAP2
0xc91 POP
0xc92 POP
0xc93 JUMP
---
0xc8e: JUMPDEST 
0xc93: JUMP S3
---
Entry stack: [S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1012]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1012]

================================

Block 0xc94
[0xc94:0xcc2]
---
Predecessors: []
Successors: []
---
0xc94 STOP
0xc95 LOG1
0xc96 PUSH6 0x627a7a723058
0xc9d SHA3
0xc9e MISSING 0x4a
0xc9f MISSING 0xb2
0xca0 GAS
0xca1 MISSING 0xfb
0xca2 MISSING 0xf
0xca3 GAS
0xca4 SLOAD
0xca5 MISSING 0xd2
0xca6 MISSING 0xd1
0xca7 MISSING 0x4b
0xca8 CODESIZE
0xca9 MISSING 0xcc
0xcaa MISSING 0xbd
0xcab PUSH23 0x29e246007d3e36158188471df3302fda1e0e0029
---
0xc94: STOP 
0xc95: LOG S0 S1 S2
0xc96: V1032 = 0x627a7a723058
0xc9d: V1033 = SHA3 0x627a7a723058 S3
0xc9e: MISSING 0x4a
0xc9f: MISSING 0xb2
0xca0: V1034 = GAS
0xca1: MISSING 0xfb
0xca2: MISSING 0xf
0xca3: V1035 = GAS
0xca4: V1036 = S[V1035]
0xca5: MISSING 0xd2
0xca6: MISSING 0xd1
0xca7: MISSING 0x4b
0xca8: V1037 = CODESIZE
0xca9: MISSING 0xcc
0xcaa: MISSING 0xbd
0xcab: V1038 = 0x29e246007d3e36158188471df3302fda1e0e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1033, V1034, V1036, V1037, 0x29e246007d3e36158188471df3302fda1e0e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xd69e26a
Entry block: 0xa5
Exit block: 0xc6
Body: 0xa5, 0xad, 0xb1, 0xc6, 0x269, 0x27d, 0x281, 0x285, 0x290, 0x2b8, 0x338, 0x340

Function 1:
Public function signature: 0x36e103c4
Entry block: 0xc8
Exit block: 0xc6
Body: 0xc6, 0xc8, 0xd0, 0xd4, 0x344, 0x357, 0x35b

Function 2:
Public function signature: 0x5142c373
Entry block: 0xe3
Exit block: 0xf8
Body: 0xe3, 0xeb, 0xef, 0xf8, 0x376

Function 3:
Public function signature: 0x72d6ad88
Entry block: 0x10a
Exit block: 0x11f
Body: 0x10a, 0x112, 0x116, 0x11f, 0x37c

Function 4:
Public function signature: 0x7d01a2ff
Entry block: 0x138
Exit block: 0xf8
Body: 0xf8, 0x138, 0x140, 0x144, 0x385

Function 5:
Public function signature: 0x89185189
Entry block: 0x14d
Exit block: 0x719
Body: 0xc6, 0x14d, 0x38b, 0x3a6, 0x3aa, 0x3ea, 0x3ee, 0x3f9, 0x402, 0x414, 0x418, 0x421, 0x425, 0x45f, 0x463, 0x46e, 0x477, 0x489, 0x48d, 0x49f, 0x4a7, 0x4ab, 0x4b6, 0x581, 0x58d, 0x5b2, 0x62d, 0x631, 0x63c, 0x645, 0x64f, 0x6c6, 0x6ca, 0x6d5, 0x6de, 0x6e4, 0x719, 0x71d, 0x722, 0x72d, 0x734, 0x738, 0x743, 0x74b, 0x9e3, 0xa41, 0xa4a, 0xa60, 0xa95, 0xa96, 0xaf0, 0xaf9, 0xb0f, 0xb44, 0xb45, 0xb56, 0xb62, 0xb91, 0xb9a, 0xbb0, 0xbf4, 0xc0c, 0xc14, 0xc1c, 0xc28, 0xc8e

Function 6:
Public function signature: 0xa43c7cf1
Entry block: 0x16a
Exit block: 0x17f
Body: 0x16a, 0x172, 0x176, 0x17f, 0x759, 0x777, 0x77b

Function 7:
Public function signature: 0xb2fda38d
Entry block: 0x1c6
Exit block: 0xc6
Body: 0xc6, 0x1c6, 0x1ce, 0x1d2, 0x86b, 0x87e, 0x882

Function 8:
Public function signature: 0xb3e0cf7e
Entry block: 0x1de
Exit block: 0x1f6
Body: 0x1de, 0x1e6, 0x1ea, 0x1f6, 0x887

Function 9:
Public function signature: 0xc4ec0a8d
Entry block: 0x21e
Exit block: 0xc6
Body: 0xc6, 0x21e, 0x226, 0x22a, 0x8b0, 0x8c6, 0x8ca, 0x907, 0x90b, 0x916, 0x91f, 0x931, 0x935

Function 10:
Public function signature: 0xce7929b5
Entry block: 0x23f
Exit block: 0xc6
Body: 0xc6, 0x23f, 0x247, 0x24b

Function 11:
Public function signature: 0xe512e0ac
Entry block: 0x254
Exit block: 0xf8
Body: 0xf8, 0x254, 0x25c, 0x260, 0x9dd

Function 12:
Public fallback function
Entry block: 0xa0
Exit block: 0xa0
Body: 0xa0

Function 13:
Private function
Entry block: 0x9ad
Exit block: 0x9da
Body: 0x9ad, 0x9da

