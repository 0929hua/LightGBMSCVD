Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2be93952
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x84
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2be93952
0x3b: V13 = EQ V11 0x2be93952
0x3c: V14 = 0x84
0x3f: JUMPI 0x84 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x98]
---
0x40 DUP1
0x41 PUSH4 0x3989650f
0x46 EQ
0x47 PUSH2 0x98
0x4a JUMPI
---
0x41: V15 = 0x3989650f
0x46: V16 = EQ 0x3989650f V11
0x47: V17 = 0x98
0x4a: JUMPI 0x98 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcb]
---
0x4b DUP1
0x4c PUSH4 0x3ccfd60b
0x51 EQ
0x52 PUSH2 0xcb
0x55 JUMPI
---
0x4c: V18 = 0x3ccfd60b
0x51: V19 = EQ 0x3ccfd60b V11
0x52: V20 = 0xcb
0x55: JUMPI 0xcb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xe0]
---
0x56 DUP1
0x57 PUSH4 0x42cde4e8
0x5c EQ
0x5d PUSH2 0xe0
0x60 JUMPI
---
0x57: V21 = 0x42cde4e8
0x5c: V22 = EQ 0x42cde4e8 V11
0x5d: V23 = 0xe0
0x60: JUMPI 0xe0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xf5]
---
0x61 DUP1
0x62 PUSH4 0x694e80c3
0x67 EQ
0x68 PUSH2 0xf5
0x6b JUMPI
---
0x62: V24 = 0x694e80c3
0x67: V25 = EQ 0x694e80c3 V11
0x68: V26 = 0xf5
0x6b: JUMPI 0xf5 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x10d]
---
0x6c DUP1
0x6d PUSH4 0x8da5cb5b
0x72 EQ
0x73 PUSH2 0x10d
0x76 JUMPI
---
0x6d: V27 = 0x8da5cb5b
0x72: V28 = EQ 0x8da5cb5b V11
0x73: V29 = 0x10d
0x76: JUMPI 0x10d V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x13e]
---
0x77 DUP1
0x78 PUSH4 0xf68b6704
0x7d EQ
0x7e PUSH2 0x13e
0x81 JUMPI
---
0x78: V30 = 0xf68b6704
0x7d: V31 = EQ 0xf68b6704 V11
0x7e: V32 = 0x13e
0x81: JUMPI 0x13e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x1d8, 0x23f, 0x25f, 0x2a3]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x97]
---
Predecessors: [0xd]
Successors: [0x152]
---
0x84 JUMPDEST
0x85 PUSH2 0x82
0x88 PUSH1 0x1
0x8a PUSH1 0xa0
0x8c PUSH1 0x2
0x8e EXP
0x8f SUB
0x90 PUSH1 0x4
0x92 CALLDATALOAD
0x93 AND
0x94 PUSH2 0x152
0x97 JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x82
0x88: V34 = 0x1
0x8a: V35 = 0xa0
0x8c: V36 = 0x2
0x8e: V37 = EXP 0x2 0xa0
0x8f: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90: V39 = 0x4
0x92: V40 = CALLDATALOAD 0x4
0x93: V41 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x94: V42 = 0x152
0x97: JUMP 0x152
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V41]
Exit stack: [V11, 0x82, V41]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x40]
Successors: [0xa0, 0xa4]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a DUP1
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x98: JUMPDEST 
0x99: V43 = CALLVALUE
0x9b: V44 = ISZERO V43
0x9c: V45 = 0xa4
0x9f: JUMPI 0xa4 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x98]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V46 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xa4
[0xa4:0xb8]
---
Predecessors: [0x98]
Successors: [0x1e0]
---
0xa4 JUMPDEST
0xa5 POP
0xa6 PUSH2 0xb9
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 PUSH1 0x4
0xb3 CALLDATALOAD
0xb4 AND
0xb5 PUSH2 0x1e0
0xb8 JUMP
---
0xa4: JUMPDEST 
0xa6: V47 = 0xb9
0xa9: V48 = 0x1
0xab: V49 = 0xa0
0xad: V50 = 0x2
0xaf: V51 = EXP 0x2 0xa0
0xb0: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1: V53 = 0x4
0xb3: V54 = CALLDATALOAD 0x4
0xb4: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V56 = 0x1e0
0xb8: JUMP 0x1e0
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xb9, V55]
Exit stack: [V11, 0xb9, V55]

================================

Block 0xb9
[0xb9:0xca]
---
Predecessors: [0x1e0, 0x242]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x40
0xbc DUP1
0xbd MLOAD
0xbe SWAP2
0xbf DUP3
0xc0 MSTORE
0xc1 MLOAD
0xc2 SWAP1
0xc3 DUP2
0xc4 SWAP1
0xc5 SUB
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP1
0xca RETURN
---
0xb9: JUMPDEST 
0xba: V57 = 0x40
0xbd: V58 = M[0x40]
0xc0: M[V58] = S0
0xc1: V59 = M[0x40]
0xc5: V60 = SUB V58 V59
0xc6: V61 = 0x20
0xc8: V62 = ADD 0x20 V60
0xca: RETURN V59 V62
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0x4b]
Successors: [0xd3, 0xd7]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd DUP1
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcb: JUMPDEST 
0xcc: V63 = CALLVALUE
0xce: V64 = ISZERO V63
0xcf: V65 = 0xd7
0xd2: JUMPI 0xd7 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcb]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V66 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0xd7
[0xd7:0xdf]
---
Predecessors: [0xcb]
Successors: [0x1ed]
---
0xd7 JUMPDEST
0xd8 POP
0xd9 PUSH2 0x82
0xdc PUSH2 0x1ed
0xdf JUMP
---
0xd7: JUMPDEST 
0xd9: V67 = 0x82
0xdc: V68 = 0x1ed
0xdf: JUMP 0x1ed
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0x56]
Successors: [0xe8, 0xec]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 DUP1
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xe0: JUMPDEST 
0xe1: V69 = CALLVALUE
0xe3: V70 = ISZERO V69
0xe4: V71 = 0xec
0xe7: JUMPI 0xec V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xe0]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V72 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0xec
[0xec:0xf4]
---
Predecessors: [0xe0]
Successors: [0x242]
---
0xec JUMPDEST
0xed POP
0xee PUSH2 0xb9
0xf1 PUSH2 0x242
0xf4 JUMP
---
0xec: JUMPDEST 
0xee: V73 = 0xb9
0xf1: V74 = 0x242
0xf4: JUMP 0x242
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0x61]
Successors: [0xfd, 0x101]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf5: JUMPDEST 
0xf6: V75 = CALLVALUE
0xf8: V76 = ISZERO V75
0xf9: V77 = 0x101
0xfc: JUMPI 0x101 V76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V11, V75]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf5]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V78 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V11, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75]

================================

Block 0x101
[0x101:0x10c]
---
Predecessors: [0xf5]
Successors: [0x248]
---
0x101 JUMPDEST
0x102 POP
0x103 PUSH2 0x82
0x106 PUSH1 0x4
0x108 CALLDATALOAD
0x109 PUSH2 0x248
0x10c JUMP
---
0x101: JUMPDEST 
0x103: V79 = 0x82
0x106: V80 = 0x4
0x108: V81 = CALLDATALOAD 0x4
0x109: V82 = 0x248
0x10c: JUMP 0x248
---
Entry stack: [V11, V75]
Stack pops: 1
Stack additions: [0x82, V81]
Exit stack: [V11, 0x82, V81]

================================

Block 0x10d
[0x10d:0x114]
---
Predecessors: [0x6c]
Successors: [0x115, 0x119]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f DUP1
0x110 ISZERO
0x111 PUSH2 0x119
0x114 JUMPI
---
0x10d: JUMPDEST 
0x10e: V83 = CALLVALUE
0x110: V84 = ISZERO V83
0x111: V85 = 0x119
0x114: JUMPI 0x119 V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V11, V83]

================================

Block 0x115
[0x115:0x118]
---
Predecessors: [0x10d]
Successors: []
---
0x115 PUSH1 0x0
0x117 DUP1
0x118 REVERT
---
0x115: V86 = 0x0
0x118: REVERT 0x0 0x0
---
Entry stack: [V11, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V83]

================================

Block 0x119
[0x119:0x121]
---
Predecessors: [0x10d]
Successors: [0x264]
---
0x119 JUMPDEST
0x11a POP
0x11b PUSH2 0x122
0x11e PUSH2 0x264
0x121 JUMP
---
0x119: JUMPDEST 
0x11b: V87 = 0x122
0x11e: V88 = 0x264
0x121: JUMP 0x264
---
Entry stack: [V11, V83]
Stack pops: 1
Stack additions: [0x122]
Exit stack: [V11, 0x122]

================================

Block 0x122
[0x122:0x13d]
---
Predecessors: [0x264]
Successors: []
---
0x122 JUMPDEST
0x123 PUSH1 0x40
0x125 DUP1
0x126 MLOAD
0x127 PUSH1 0x1
0x129 PUSH1 0xa0
0x12b PUSH1 0x2
0x12d EXP
0x12e SUB
0x12f SWAP1
0x130 SWAP3
0x131 AND
0x132 DUP3
0x133 MSTORE
0x134 MLOAD
0x135 SWAP1
0x136 DUP2
0x137 SWAP1
0x138 SUB
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP1
0x13d RETURN
---
0x122: JUMPDEST 
0x123: V89 = 0x40
0x126: V90 = M[0x40]
0x127: V91 = 0x1
0x129: V92 = 0xa0
0x12b: V93 = 0x2
0x12d: V94 = EXP 0x2 0xa0
0x12e: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V96 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x133: M[V90] = V96
0x134: V97 = M[0x40]
0x138: V98 = SUB V90 V97
0x139: V99 = 0x20
0x13b: V100 = ADD 0x20 V98
0x13d: RETURN V97 V100
---
Entry stack: [V11, 0x122, V221]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x122]

================================

Block 0x13e
[0x13e:0x151]
---
Predecessors: [0x77]
Successors: [0x273]
---
0x13e JUMPDEST
0x13f PUSH2 0x82
0x142 PUSH1 0x1
0x144 PUSH1 0xa0
0x146 PUSH1 0x2
0x148 EXP
0x149 SUB
0x14a PUSH1 0x4
0x14c CALLDATALOAD
0x14d AND
0x14e PUSH2 0x273
0x151 JUMP
---
0x13e: JUMPDEST 
0x13f: V101 = 0x82
0x142: V102 = 0x1
0x144: V103 = 0xa0
0x146: V104 = 0x2
0x148: V105 = EXP 0x2 0xa0
0x149: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a: V107 = 0x4
0x14c: V108 = CALLDATALOAD 0x4
0x14d: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V110 = 0x273
0x151: JUMP 0x273
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V109]
Exit stack: [V11, 0x82, V109]

================================

Block 0x152
[0x152:0x165]
---
Predecessors: [0x84]
Successors: [0x166, 0x16a]
---
0x152 JUMPDEST
0x153 PUSH1 0x0
0x155 DUP1
0x156 SLOAD
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f AND
0x160 CALLER
0x161 EQ
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x152: JUMPDEST 
0x153: V111 = 0x0
0x156: V112 = S[0x0]
0x157: V113 = 0x1
0x159: V114 = 0xa0
0x15b: V115 = 0x2
0x15d: V116 = EXP 0x2 0xa0
0x15e: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x160: V119 = CALLER
0x161: V120 = EQ V119 V118
0x162: V121 = 0x16a
0x165: JUMPI 0x16a V120
---
Entry stack: [V11, 0x82, V41]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x82, V41, 0x0]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x152]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V122 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V41, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, 0x0]

================================

Block 0x16a
[0x16a:0x1bf]
---
Predecessors: [0x152]
Successors: [0x1c0, 0x1c4]
---
0x16a JUMPDEST
0x16b DUP2
0x16c SWAP1
0x16d POP
0x16e DUP1
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 AND
0x178 PUSH4 0xe9fad8ee
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP2
0x181 PUSH4 0xffffffff
0x186 AND
0x187 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1a5 MUL
0x1a6 DUP2
0x1a7 MSTORE
0x1a8 PUSH1 0x4
0x1aa ADD
0x1ab PUSH1 0x0
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 DUP4
0x1b2 SUB
0x1b3 DUP2
0x1b4 PUSH1 0x0
0x1b6 DUP8
0x1b7 DUP1
0x1b8 EXTCODESIZE
0x1b9 ISZERO
0x1ba DUP1
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x16a: JUMPDEST 
0x16f: V123 = 0x1
0x171: V124 = 0xa0
0x173: V125 = 0x2
0x175: V126 = EXP 0x2 0xa0
0x176: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x177: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x178: V129 = 0xe9fad8ee
0x17d: V130 = 0x40
0x17f: V131 = M[0x40]
0x181: V132 = 0xffffffff
0x186: V133 = AND 0xffffffff 0xe9fad8ee
0x187: V134 = 0x100000000000000000000000000000000000000000000000000000000
0x1a5: V135 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe9fad8ee
0x1a7: M[V131] = 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x1a8: V136 = 0x4
0x1aa: V137 = ADD 0x4 V131
0x1ab: V138 = 0x0
0x1ad: V139 = 0x40
0x1af: V140 = M[0x40]
0x1b2: V141 = SUB V137 V140
0x1b4: V142 = 0x0
0x1b8: V143 = EXTCODESIZE V128
0x1b9: V144 = ISZERO V143
0x1bb: V145 = ISZERO V144
0x1bc: V146 = 0x1c4
0x1bf: JUMPI 0x1c4 V145
---
Entry stack: [V11, 0x82, V41, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V128, 0xe9fad8ee, V137, 0x0, V140, V141, V140, 0x0, V128, V144]
Exit stack: [V11, 0x82, V41, V41, V128, 0xe9fad8ee, V137, 0x0, V140, V141, V140, 0x0, V128, V144]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x16a]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V147 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V41, V41, V128, 0xe9fad8ee, V137, 0x0, V140, V141, V140, 0x0, V128, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, V41, V128, 0xe9fad8ee, V137, 0x0, V140, V141, V140, 0x0, V128, V144]

================================

Block 0x1c4
[0x1c4:0x1ce]
---
Predecessors: [0x16a]
Successors: [0x1cf, 0x1d8]
---
0x1c4 JUMPDEST
0x1c5 POP
0x1c6 GAS
0x1c7 CALL
0x1c8 ISZERO
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d8
0x1ce JUMPI
---
0x1c4: JUMPDEST 
0x1c6: V148 = GAS
0x1c7: V149 = CALL V148 V128 0x0 V140 V141 V140 0x0
0x1c8: V150 = ISZERO V149
0x1ca: V151 = ISZERO V150
0x1cb: V152 = 0x1d8
0x1ce: JUMPI 0x1d8 V151
---
Entry stack: [V11, 0x82, V41, V41, V128, 0xe9fad8ee, V137, 0x0, V140, V141, V140, 0x0, V128, V144]
Stack pops: 7
Stack additions: [V150]
Exit stack: [V11, 0x82, V41, V41, V128, 0xe9fad8ee, V137, V150]

================================

Block 0x1cf
[0x1cf:0x1d7]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cf RETURNDATASIZE
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 RETURNDATACOPY
0x1d4 RETURNDATASIZE
0x1d5 PUSH1 0x0
0x1d7 REVERT
---
0x1cf: V153 = RETURNDATASIZE
0x1d0: V154 = 0x0
0x1d3: RETURNDATACOPY 0x0 0x0 V153
0x1d4: V155 = RETURNDATASIZE
0x1d5: V156 = 0x0
0x1d7: REVERT 0x0 V155
---
Entry stack: [V11, 0x82, V41, V41, V128, 0xe9fad8ee, V137, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, V41, V128, 0xe9fad8ee, V137, V150]

================================

Block 0x1d8
[0x1d8:0x1df]
---
Predecessors: [0x1c4]
Successors: [0x82]
---
0x1d8 JUMPDEST
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd POP
0x1de POP
0x1df JUMP
---
0x1d8: JUMPDEST 
0x1df: JUMP 0x82
---
Entry stack: [V11, 0x82, V41, V41, V128, 0xe9fad8ee, V137, V150]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e0
[0x1e0:0x1ec]
---
Predecessors: [0xa4]
Successors: [0xb9]
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0xa0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 SUB
0x1e9 AND
0x1ea BALANCE
0x1eb SWAP1
0x1ec JUMP
---
0x1e0: JUMPDEST 
0x1e1: V157 = 0x1
0x1e3: V158 = 0xa0
0x1e5: V159 = 0x2
0x1e7: V160 = EXP 0x2 0xa0
0x1e8: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e9: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x1ea: V163 = BALANCE V162
0x1ec: JUMP 0xb9
---
Entry stack: [V11, 0xb9, V55]
Stack pops: 2
Stack additions: [V163]
Exit stack: [V11, V163]

================================

Block 0x1ed
[0x1ed:0x1ff]
---
Predecessors: [0xd7]
Successors: [0x200, 0x204]
---
0x1ed JUMPDEST
0x1ee PUSH1 0x0
0x1f0 SLOAD
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 AND
0x1fa CALLER
0x1fb EQ
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V164 = 0x0
0x1f0: V165 = S[0x0]
0x1f1: V166 = 0x1
0x1f3: V167 = 0xa0
0x1f5: V168 = 0x2
0x1f7: V169 = EXP 0x2 0xa0
0x1f8: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1fa: V172 = CALLER
0x1fb: V173 = EQ V172 V171
0x1fc: V174 = 0x204
0x1ff: JUMPI 0x204 V173
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1ed]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V175 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x204
[0x204:0x235]
---
Predecessors: [0x1ed]
Successors: [0x236, 0x23f]
---
0x204 JUMPDEST
0x205 PUSH1 0x0
0x207 DUP1
0x208 SLOAD
0x209 PUSH1 0x40
0x20b MLOAD
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 SWAP1
0x215 SWAP2
0x216 AND
0x217 SWAP2
0x218 ADDRESS
0x219 BALANCE
0x21a DUP1
0x21b ISZERO
0x21c PUSH2 0x8fc
0x21f MUL
0x220 SWAP3
0x221 SWAP1
0x222 SWAP2
0x223 DUP2
0x224 DUP2
0x225 DUP2
0x226 DUP6
0x227 DUP9
0x228 DUP9
0x229 CALL
0x22a SWAP4
0x22b POP
0x22c POP
0x22d POP
0x22e POP
0x22f ISZERO
0x230 DUP1
0x231 ISZERO
0x232 PUSH2 0x23f
0x235 JUMPI
---
0x204: JUMPDEST 
0x205: V176 = 0x0
0x208: V177 = S[0x0]
0x209: V178 = 0x40
0x20b: V179 = M[0x40]
0x20c: V180 = 0x1
0x20e: V181 = 0xa0
0x210: V182 = 0x2
0x212: V183 = EXP 0x2 0xa0
0x213: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V185 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x218: V186 = ADDRESS
0x219: V187 = BALANCE V186
0x21b: V188 = ISZERO V187
0x21c: V189 = 0x8fc
0x21f: V190 = MUL 0x8fc V188
0x229: V191 = CALL V190 V185 V187 V179 0x0 V179 0x0
0x22f: V192 = ISZERO V191
0x231: V193 = ISZERO V192
0x232: V194 = 0x23f
0x235: JUMPI 0x23f V193
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V11, 0x82, V192]

================================

Block 0x236
[0x236:0x23e]
---
Predecessors: [0x204]
Successors: []
---
0x236 RETURNDATASIZE
0x237 PUSH1 0x0
0x239 DUP1
0x23a RETURNDATACOPY
0x23b RETURNDATASIZE
0x23c PUSH1 0x0
0x23e REVERT
---
0x236: V195 = RETURNDATASIZE
0x237: V196 = 0x0
0x23a: RETURNDATACOPY 0x0 0x0 V195
0x23b: V197 = RETURNDATASIZE
0x23c: V198 = 0x0
0x23e: REVERT 0x0 V197
---
Entry stack: [V11, 0x82, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V192]

================================

Block 0x23f
[0x23f:0x241]
---
Predecessors: [0x204]
Successors: [0x82]
---
0x23f JUMPDEST
0x240 POP
0x241 JUMP
---
0x23f: JUMPDEST 
0x241: JUMP 0x82
---
Entry stack: [V11, 0x82, V192]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x242
[0x242:0x247]
---
Predecessors: [0xec]
Successors: [0xb9]
---
0x242 JUMPDEST
0x243 PUSH1 0x1
0x245 SLOAD
0x246 DUP2
0x247 JUMP
---
0x242: JUMPDEST 
0x243: V199 = 0x1
0x245: V200 = S[0x1]
0x247: JUMP 0xb9
---
Entry stack: [V11, 0xb9]
Stack pops: 1
Stack additions: [S0, V200]
Exit stack: [V11, 0xb9, V200]

================================

Block 0x248
[0x248:0x25a]
---
Predecessors: [0x101]
Successors: [0x25b, 0x25f]
---
0x248 JUMPDEST
0x249 PUSH1 0x0
0x24b SLOAD
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 AND
0x255 CALLER
0x256 EQ
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x248: JUMPDEST 
0x249: V201 = 0x0
0x24b: V202 = S[0x0]
0x24c: V203 = 0x1
0x24e: V204 = 0xa0
0x250: V205 = 0x2
0x252: V206 = EXP 0x2 0xa0
0x253: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x255: V209 = CALLER
0x256: V210 = EQ V209 V208
0x257: V211 = 0x25f
0x25a: JUMPI 0x25f V210
---
Entry stack: [V11, 0x82, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V81]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x248]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V212 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V81]

================================

Block 0x25f
[0x25f:0x263]
---
Predecessors: [0x248]
Successors: [0x82]
---
0x25f JUMPDEST
0x260 PUSH1 0x1
0x262 SSTORE
0x263 JUMP
---
0x25f: JUMPDEST 
0x260: V213 = 0x1
0x262: S[0x1] = V81
0x263: JUMP 0x82
---
Entry stack: [V11, 0x82, V81]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x264
[0x264:0x272]
---
Predecessors: [0x119]
Successors: [0x122]
---
0x264 JUMPDEST
0x265 PUSH1 0x0
0x267 SLOAD
0x268 PUSH1 0x1
0x26a PUSH1 0xa0
0x26c PUSH1 0x2
0x26e EXP
0x26f SUB
0x270 AND
0x271 DUP2
0x272 JUMP
---
0x264: JUMPDEST 
0x265: V214 = 0x0
0x267: V215 = S[0x0]
0x268: V216 = 0x1
0x26a: V217 = 0xa0
0x26c: V218 = 0x2
0x26e: V219 = EXP 0x2 0xa0
0x26f: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x272: JUMP 0x122
---
Entry stack: [V11, 0x122]
Stack pops: 1
Stack additions: [S0, V221]
Exit stack: [V11, 0x122, V221]

================================

Block 0x273
[0x273:0x285]
---
Predecessors: [0x13e]
Successors: [0x286, 0x28a]
---
0x273 JUMPDEST
0x274 PUSH1 0x0
0x276 SLOAD
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f AND
0x280 CALLER
0x281 EQ
0x282 PUSH2 0x28a
0x285 JUMPI
---
0x273: JUMPDEST 
0x274: V222 = 0x0
0x276: V223 = S[0x0]
0x277: V224 = 0x1
0x279: V225 = 0xa0
0x27b: V226 = 0x2
0x27d: V227 = EXP 0x2 0xa0
0x27e: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x280: V230 = CALLER
0x281: V231 = EQ V230 V229
0x282: V232 = 0x28a
0x285: JUMPI 0x28a V231
---
Entry stack: [V11, 0x82, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V109]

================================

Block 0x286
[0x286:0x289]
---
Predecessors: [0x273]
Successors: []
---
0x286 PUSH1 0x0
0x288 DUP1
0x289 REVERT
---
0x286: V233 = 0x0
0x289: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V109]

================================

Block 0x28a
[0x28a:0x29e]
---
Predecessors: [0x273]
Successors: [0x29f, 0x2a3]
---
0x28a JUMPDEST
0x28b PUSH1 0x1
0x28d SLOAD
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 DUP3
0x297 AND
0x298 BALANCE
0x299 GT
0x29a ISZERO
0x29b PUSH2 0x2a3
0x29e JUMPI
---
0x28a: JUMPDEST 
0x28b: V234 = 0x1
0x28d: V235 = S[0x1]
0x28e: V236 = 0x1
0x290: V237 = 0xa0
0x292: V238 = 0x2
0x294: V239 = EXP 0x2 0xa0
0x295: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V241 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x298: V242 = BALANCE V241
0x299: V243 = GT V242 V235
0x29a: V244 = ISZERO V243
0x29b: V245 = 0x2a3
0x29e: JUMPI 0x2a3 V244
---
Entry stack: [V11, 0x82, V109]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V109]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x28a]
Successors: []
---
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 REVERT
---
0x29f: V246 = 0x0
0x2a2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V109]

================================

Block 0x2a3
[0x2a3:0x2c2]
---
Predecessors: [0x28a]
Successors: [0x82]
---
0x2a3 JUMPDEST
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af DUP3
0x2b0 AND
0x2b1 SWAP1
0x2b2 CALLVALUE
0x2b3 SWAP1
0x2b4 PUSH1 0x0
0x2b6 DUP2
0x2b7 DUP2
0x2b8 DUP2
0x2b9 DUP6
0x2ba DUP8
0x2bb GAS
0x2bc CALL
0x2bd POP
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 JUMP
---
0x2a3: JUMPDEST 
0x2a4: V247 = 0x40
0x2a6: V248 = M[0x40]
0x2a7: V249 = 0x1
0x2a9: V250 = 0xa0
0x2ab: V251 = 0x2
0x2ad: V252 = EXP 0x2 0xa0
0x2ae: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b0: V254 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V255 = CALLVALUE
0x2b4: V256 = 0x0
0x2bb: V257 = GAS
0x2bc: V258 = CALL V257 V254 V255 V248 0x0 V248 0x0
0x2c2: JUMP 0x82
---
Entry stack: [V11, 0x82, V109]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c3
[0x2c3:0x2f3]
---
Predecessors: []
Successors: []
---
0x2c3 STOP
0x2c4 LOG1
0x2c5 PUSH6 0x627a7a723058
0x2cc SHA3
0x2cd PUSH16 0x62c1c70bb64809511694cdcba546c252
0x2de SWAP16
0x2df MISSING 0xbc
0x2e0 MISSING 0xee
0x2e1 MISSING 0xb6
0x2e2 MISSING 0x28
0x2e3 MISSING 0x2f
0x2e4 MISSING 0xec
0x2e5 CALLER
0x2e6 SAR
0x2e7 MISSING 0xeb
0x2e8 MISSING 0x2e
0x2e9 PUSH10 0x1aeac10029
---
0x2c3: STOP 
0x2c4: LOG S0 S1 S2
0x2c5: V259 = 0x627a7a723058
0x2cc: V260 = SHA3 0x627a7a723058 S3
0x2cd: V261 = 0x62c1c70bb64809511694cdcba546c252
0x2df: MISSING 0xbc
0x2e0: MISSING 0xee
0x2e1: MISSING 0xb6
0x2e2: MISSING 0x28
0x2e3: MISSING 0x2f
0x2e4: MISSING 0xec
0x2e5: V262 = CALLER
0x2e6: V263 = SAR V262 S0
0x2e7: MISSING 0xeb
0x2e8: MISSING 0x2e
0x2e9: V264 = 0x1aeac10029
---
Entry stack: []
Stack pops: 0
Stack additions: [S18, V260, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, 0x62c1c70bb64809511694cdcba546c252, V263, 0x1aeac10029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2be93952
Entry block: 0x84
Exit block: 0x82
Body: 0x82, 0x84, 0x152, 0x166, 0x16a, 0x1c0, 0x1c4, 0x1cf, 0x1d8

Function 1:
Public function signature: 0x3989650f
Entry block: 0x98
Exit block: 0xb9
Body: 0x98, 0xa0, 0xa4, 0xb9, 0x1e0

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xcb
Exit block: 0x82
Body: 0x82, 0xcb, 0xd3, 0xd7, 0x1ed, 0x200, 0x204, 0x236, 0x23f

Function 3:
Public function signature: 0x42cde4e8
Entry block: 0xe0
Exit block: 0xb9
Body: 0xb9, 0xe0, 0xe8, 0xec, 0x242

Function 4:
Public function signature: 0x694e80c3
Entry block: 0xf5
Exit block: 0x82
Body: 0x82, 0xf5, 0xfd, 0x101, 0x248, 0x25b, 0x25f

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x10d
Exit block: 0x122
Body: 0x10d, 0x115, 0x119, 0x122, 0x264

Function 6:
Public function signature: 0xf68b6704
Entry block: 0x13e
Exit block: 0x82
Body: 0x82, 0x13e, 0x273, 0x286, 0x28a, 0x29f, 0x2a3

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

