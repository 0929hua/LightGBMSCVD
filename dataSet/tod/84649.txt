Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x4bb278f3
0x34 EQ
0x35 PUSH2 0x49
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x4bb278f3
0x34: V9 = EQ 0x4bb278f3 V7
0x35: V10 = 0x49
0x38: JUMPI 0x49 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x58]
---
0x39 DUP1
0x3a PUSH4 0x590e1ae3
0x3f EQ
0x40 PUSH2 0x58
0x43 JUMPI
---
0x3a: V11 = 0x590e1ae3
0x3f: V12 = EQ 0x590e1ae3 V7
0x40: V13 = 0x58
0x43: JUMPI 0x58 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x48]
---
Predecessors: [0x39]
Successors: []
---
0x44 JUMPDEST
0x45 PUSH2 0x0
0x48 JUMP
---
0x44: JUMPDEST 
0x45: V14 = 0x0
0x48: THROW 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0x4e]
---
Predecessors: [0x0]
Successors: [0x4f]
---
0x49 JUMPDEST
0x4a CALLVALUE
0x4b PUSH2 0x0
0x4e JUMPI
---
0x49: JUMPDEST 
0x4a: V15 = CALLVALUE
0x4b: V16 = 0x0
0x4e: THROWI V15
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x55]
---
Predecessors: [0x49]
Successors: [0x67]
---
0x4f PUSH2 0x56
0x52 PUSH2 0x67
0x55 JUMP
---
0x4f: V17 = 0x56
0x52: V18 = 0x67
0x55: JUMP 0x67
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V7, 0x56]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x189]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x58
[0x58:0x5d]
---
Predecessors: [0x39]
Successors: [0x5e]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a PUSH2 0x0
0x5d JUMPI
---
0x58: JUMPDEST 
0x59: V19 = CALLVALUE
0x5a: V20 = 0x0
0x5d: THROWI V19
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5e
[0x5e:0x64]
---
Predecessors: [0x58]
Successors: [0x18b]
---
0x5e PUSH2 0x65
0x61 PUSH2 0x18b
0x64 JUMP
---
0x5e: V21 = 0x65
0x61: V22 = 0x18b
0x64: JUMP 0x18b
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x65]
Exit stack: [V7, 0x65]

================================

Block 0x65
[0x65:0x66]
---
Predecessors: [0x2ad]
Successors: []
---
0x65 JUMPDEST
0x66 STOP
---
0x65: JUMPDEST 
0x66: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x67
[0x67:0xbd]
---
Predecessors: [0x4f]
Successors: [0xbe, 0x110]
---
0x67 JUMPDEST
0x68 PUSH1 0x0
0x6a PUSH1 0x0
0x6c SWAP1
0x6d SLOAD
0x6e SWAP1
0x6f PUSH2 0x100
0x72 EXP
0x73 SWAP1
0x74 DIV
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 CALLER
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 EQ
0xb9 DUP1
0xba PUSH2 0x110
0xbd JUMPI
---
0x67: JUMPDEST 
0x68: V23 = 0x0
0x6a: V24 = 0x0
0x6d: V25 = S[0x0]
0x6f: V26 = 0x100
0x72: V27 = EXP 0x100 0x0
0x74: V28 = DIV V25 0x1
0x75: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x8b: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0xa1: V33 = CALLER
0xa2: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xb8: V36 = EQ V35 V32
0xba: V37 = 0x110
0xbd: JUMPI 0x110 V36
---
Entry stack: [V7, 0x56]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V7, 0x56, V36]

================================

Block 0xbe
[0xbe:0x10f]
---
Predecessors: [0x67]
Successors: [0x110]
---
0xbe POP
0xbf PUSH1 0x2
0xc1 PUSH1 0x0
0xc3 SWAP1
0xc4 SLOAD
0xc5 SWAP1
0xc6 PUSH2 0x100
0xc9 EXP
0xca SWAP1
0xcb DIV
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 CALLER
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f EQ
---
0xbf: V38 = 0x2
0xc1: V39 = 0x0
0xc4: V40 = S[0x2]
0xc6: V41 = 0x100
0xc9: V42 = EXP 0x100 0x0
0xcb: V43 = DIV V40 0x1
0xcc: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xe2: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xf8: V48 = CALLER
0xf9: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x10f: V51 = EQ V50 V47
---
Entry stack: [V7, 0x56, V36]
Stack pops: 1
Stack additions: [V51]
Exit stack: [V7, 0x56, V51]

================================

Block 0x110
[0x110:0x115]
---
Predecessors: [0x67, 0xbe]
Successors: [0x116, 0x188]
---
0x110 JUMPDEST
0x111 ISZERO
0x112 PUSH2 0x188
0x115 JUMPI
---
0x110: JUMPDEST 
0x111: V52 = ISZERO S0
0x112: V53 = 0x188
0x115: JUMPI 0x188 V52
---
Entry stack: [V7, 0x56, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x56]

================================

Block 0x116
[0x116:0x187]
---
Predecessors: [0x110]
Successors: [0x188]
---
0x116 PUSH1 0x1
0x118 PUSH1 0x0
0x11a SWAP1
0x11b SLOAD
0x11c SWAP1
0x11d PUSH2 0x100
0x120 EXP
0x121 SWAP1
0x122 DIV
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f PUSH2 0x8fc
0x152 ADDRESS
0x153 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x168 AND
0x169 BALANCE
0x16a SWAP1
0x16b DUP2
0x16c ISZERO
0x16d MUL
0x16e SWAP1
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP1
0x173 SWAP1
0x174 POP
0x175 PUSH1 0x0
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b DUP4
0x17c SUB
0x17d DUP2
0x17e DUP6
0x17f DUP9
0x180 DUP9
0x181 CALL
0x182 SWAP4
0x183 POP
0x184 POP
0x185 POP
0x186 POP
0x187 POP
---
0x116: V54 = 0x1
0x118: V55 = 0x0
0x11b: V56 = S[0x1]
0x11d: V57 = 0x100
0x120: V58 = EXP 0x100 0x0
0x122: V59 = DIV V56 0x1
0x123: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x139: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x14f: V64 = 0x8fc
0x152: V65 = ADDRESS
0x153: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x168: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x169: V68 = BALANCE V67
0x16c: V69 = ISZERO V68
0x16d: V70 = MUL V69 0x8fc
0x16f: V71 = 0x40
0x171: V72 = M[0x40]
0x175: V73 = 0x0
0x177: V74 = 0x40
0x179: V75 = M[0x40]
0x17c: V76 = SUB V72 V75
0x181: V77 = CALL V70 V63 V68 V75 V76 V75 0x0
---
Entry stack: [V7, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x56]

================================

Block 0x188
[0x188:0x188]
---
Predecessors: [0x110, 0x116]
Successors: [0x189]
---
0x188 JUMPDEST
---
0x188: JUMPDEST 
---
Entry stack: [V7, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x56]

================================

Block 0x189
[0x189:0x18a]
---
Predecessors: [0x188]
Successors: [0x56]
---
0x189 JUMPDEST
0x18a JUMP
---
0x189: JUMPDEST 
0x18a: JUMP 0x56
---
Entry stack: [V7, 0x56]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x18b
[0x18b:0x1e1]
---
Predecessors: [0x5e]
Successors: [0x1e2, 0x234]
---
0x18b JUMPDEST
0x18c PUSH1 0x1
0x18e PUSH1 0x0
0x190 SWAP1
0x191 SLOAD
0x192 SWAP1
0x193 PUSH2 0x100
0x196 EXP
0x197 SWAP1
0x198 DIV
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c4 AND
0x1c5 CALLER
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc EQ
0x1dd DUP1
0x1de PUSH2 0x234
0x1e1 JUMPI
---
0x18b: JUMPDEST 
0x18c: V78 = 0x1
0x18e: V79 = 0x0
0x191: V80 = S[0x1]
0x193: V81 = 0x100
0x196: V82 = EXP 0x100 0x0
0x198: V83 = DIV V80 0x1
0x199: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1af: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c4: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x1c5: V88 = CALLER
0x1c6: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x1dc: V91 = EQ V90 V87
0x1de: V92 = 0x234
0x1e1: JUMPI 0x234 V91
---
Entry stack: [V7, 0x65]
Stack pops: 0
Stack additions: [V91]
Exit stack: [V7, 0x65, V91]

================================

Block 0x1e2
[0x1e2:0x233]
---
Predecessors: [0x18b]
Successors: [0x234]
---
0x1e2 POP
0x1e3 PUSH1 0x2
0x1e5 PUSH1 0x0
0x1e7 SWAP1
0x1e8 SLOAD
0x1e9 SWAP1
0x1ea PUSH2 0x100
0x1ed EXP
0x1ee SWAP1
0x1ef DIV
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 AND
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c CALLER
0x21d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x232 AND
0x233 EQ
---
0x1e3: V93 = 0x2
0x1e5: V94 = 0x0
0x1e8: V95 = S[0x2]
0x1ea: V96 = 0x100
0x1ed: V97 = EXP 0x100 0x0
0x1ef: V98 = DIV V95 0x1
0x1f0: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x206: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x21c: V103 = CALLER
0x21d: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x232: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x233: V106 = EQ V105 V102
---
Entry stack: [V7, 0x65, V91]
Stack pops: 1
Stack additions: [V106]
Exit stack: [V7, 0x65, V106]

================================

Block 0x234
[0x234:0x239]
---
Predecessors: [0x18b, 0x1e2]
Successors: [0x23a, 0x2ac]
---
0x234 JUMPDEST
0x235 ISZERO
0x236 PUSH2 0x2ac
0x239 JUMPI
---
0x234: JUMPDEST 
0x235: V107 = ISZERO S0
0x236: V108 = 0x2ac
0x239: JUMPI 0x2ac V107
---
Entry stack: [V7, 0x65, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x65]

================================

Block 0x23a
[0x23a:0x2ab]
---
Predecessors: [0x234]
Successors: [0x2ac]
---
0x23a PUSH1 0x0
0x23c PUSH1 0x0
0x23e SWAP1
0x23f SLOAD
0x240 SWAP1
0x241 PUSH2 0x100
0x244 EXP
0x245 SWAP1
0x246 DIV
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x272 AND
0x273 PUSH2 0x8fc
0x276 ADDRESS
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d BALANCE
0x28e SWAP1
0x28f DUP2
0x290 ISZERO
0x291 MUL
0x292 SWAP1
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 SWAP1
0x298 POP
0x299 PUSH1 0x0
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f DUP4
0x2a0 SUB
0x2a1 DUP2
0x2a2 DUP6
0x2a3 DUP9
0x2a4 DUP9
0x2a5 CALL
0x2a6 SWAP4
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab POP
---
0x23a: V109 = 0x0
0x23c: V110 = 0x0
0x23f: V111 = S[0x0]
0x241: V112 = 0x100
0x244: V113 = EXP 0x100 0x0
0x246: V114 = DIV V111 0x1
0x247: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x25d: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x272: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x273: V119 = 0x8fc
0x276: V120 = ADDRESS
0x277: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x28d: V123 = BALANCE V122
0x290: V124 = ISZERO V123
0x291: V125 = MUL V124 0x8fc
0x293: V126 = 0x40
0x295: V127 = M[0x40]
0x299: V128 = 0x0
0x29b: V129 = 0x40
0x29d: V130 = M[0x40]
0x2a0: V131 = SUB V127 V130
0x2a5: V132 = CALL V125 V118 V123 V130 V131 V130 0x0
---
Entry stack: [V7, 0x65]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x65]

================================

Block 0x2ac
[0x2ac:0x2ac]
---
Predecessors: [0x234, 0x23a]
Successors: [0x2ad]
---
0x2ac JUMPDEST
---
0x2ac: JUMPDEST 
---
Entry stack: [V7, 0x65]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x65]

================================

Block 0x2ad
[0x2ad:0x2ae]
---
Predecessors: [0x2ac]
Successors: [0x65]
---
0x2ad JUMPDEST
0x2ae JUMP
---
0x2ad: JUMPDEST 
0x2ae: JUMP 0x65
---
Entry stack: [V7, 0x65]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x2af
[0x2af:0x2dc]
---
Predecessors: []
Successors: []
---
0x2af STOP
0x2b0 LOG1
0x2b1 PUSH6 0x627a7a723058
0x2b8 SHA3
0x2b9 MISSING 0xba
0x2ba MISSING 0x2e
0x2bb MISSING 0xd1
0x2bc MISSING 0xea
0x2bd GASLIMIT
0x2be MISSING 0xf9
0x2bf SIGNEXTEND
0x2c0 MISSING 0x5c
0x2c1 MISSING 0xde
0x2c2 EXTCODEHASH
0x2c3 PUSH25 0x17da1e4c12754d3caec594d4c2ea7d382c12764a6b0029
---
0x2af: STOP 
0x2b0: LOG S0 S1 S2
0x2b1: V133 = 0x627a7a723058
0x2b8: V134 = SHA3 0x627a7a723058 S3
0x2b9: MISSING 0xba
0x2ba: MISSING 0x2e
0x2bb: MISSING 0xd1
0x2bc: MISSING 0xea
0x2bd: V135 = GASLIMIT
0x2be: MISSING 0xf9
0x2bf: V136 = SIGNEXTEND S0 S1
0x2c0: MISSING 0x5c
0x2c1: MISSING 0xde
0x2c2: V137 = EXTCODEHASH S0
0x2c3: V138 = 0x17da1e4c12754d3caec594d4c2ea7d382c12764a6b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V134, V135, V136, 0x17da1e4c12754d3caec594d4c2ea7d382c12764a6b0029, V137]
Exit stack: []

================================

Function 0:
Public function signature: 0x4bb278f3
Entry block: 0x49
Exit block: 0x56
Body: 0x49, 0x4f, 0x56, 0x67, 0xbe, 0x110, 0x116, 0x188, 0x189

Function 1:
Public function signature: 0x590e1ae3
Entry block: 0x58
Exit block: 0x65
Body: 0x58, 0x5e, 0x65, 0x18b, 0x1e2, 0x234, 0x23a, 0x2ac, 0x2ad

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x44
Body: 0x44

