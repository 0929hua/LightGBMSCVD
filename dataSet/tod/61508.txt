Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x130]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x130
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x130
0xa: JUMPI 0x130 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x142]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x142
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x142
0x3d: JUMPI 0x142 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1cd]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x1cd
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x1cd
0x48: JUMPI 0x1cd V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x203]
---
0x49 DUP1
0x4a PUSH4 0xc5a534e
0x4f EQ
0x50 PUSH2 0x203
0x53 JUMPI
---
0x4a: V17 = 0xc5a534e
0x4f: V18 = EQ 0xc5a534e V10
0x50: V19 = 0x203
0x53: JUMPI 0x203 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x22a]
---
0x54 DUP1
0x55 PUSH4 0x18160ddd
0x5a EQ
0x5b PUSH2 0x22a
0x5e JUMPI
---
0x55: V20 = 0x18160ddd
0x5a: V21 = EQ 0x18160ddd V10
0x5b: V22 = 0x22a
0x5e: JUMPI 0x22a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x24f]
---
0x5f DUP1
0x60 PUSH4 0x23b872dd
0x65 EQ
0x66 PUSH2 0x24f
0x69 JUMPI
---
0x60: V23 = 0x23b872dd
0x65: V24 = EQ 0x23b872dd V10
0x66: V25 = 0x24f
0x69: JUMPI 0x24f V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x28b]
---
0x6a DUP1
0x6b PUSH4 0x23c4841e
0x70 EQ
0x71 PUSH2 0x28b
0x74 JUMPI
---
0x6b: V26 = 0x23c4841e
0x70: V27 = EQ 0x23c4841e V10
0x71: V28 = 0x28b
0x74: JUMPI 0x28b V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2a0]
---
0x75 DUP1
0x76 PUSH4 0x313ce567
0x7b EQ
0x7c PUSH2 0x2a0
0x7f JUMPI
---
0x76: V29 = 0x313ce567
0x7b: V30 = EQ 0x313ce567 V10
0x7c: V31 = 0x2a0
0x7f: JUMPI 0x2a0 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2c5]
---
0x80 DUP1
0x81 PUSH4 0x385ab2d7
0x86 EQ
0x87 PUSH2 0x2c5
0x8a JUMPI
---
0x81: V32 = 0x385ab2d7
0x86: V33 = EQ 0x385ab2d7 V10
0x87: V34 = 0x2c5
0x8a: JUMPI 0x2c5 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2ec]
---
0x8b DUP1
0x8c PUSH4 0x55434bc9
0x91 EQ
0x92 PUSH2 0x2ec
0x95 JUMPI
---
0x8c: V35 = 0x55434bc9
0x91: V36 = EQ 0x55434bc9 V10
0x92: V37 = 0x2ec
0x95: JUMPI 0x2ec V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x301]
---
0x96 DUP1
0x97 PUSH4 0x6217229b
0x9c EQ
0x9d PUSH2 0x301
0xa0 JUMPI
---
0x97: V38 = 0x6217229b
0x9c: V39 = EQ 0x6217229b V10
0x9d: V40 = 0x301
0xa0: JUMPI 0x301 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x326]
---
0xa1 DUP1
0xa2 PUSH4 0x70a08231
0xa7 EQ
0xa8 PUSH2 0x326
0xab JUMPI
---
0xa2: V41 = 0x70a08231
0xa7: V42 = EQ 0x70a08231 V10
0xa8: V43 = 0x326
0xab: JUMPI 0x326 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x357]
---
0xac DUP1
0xad PUSH4 0x8a7f1146
0xb2 EQ
0xb3 PUSH2 0x357
0xb6 JUMPI
---
0xad: V44 = 0x8a7f1146
0xb2: V45 = EQ 0x8a7f1146 V10
0xb3: V46 = 0x357
0xb6: JUMPI 0x357 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x36c]
---
0xb7 DUP1
0xb8 PUSH4 0x8c2e6b3f
0xbd EQ
0xbe PUSH2 0x36c
0xc1 JUMPI
---
0xb8: V47 = 0x8c2e6b3f
0xbd: V48 = EQ 0x8c2e6b3f V10
0xbe: V49 = 0x36c
0xc1: JUMPI 0x36c V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x384]
---
0xc2 DUP1
0xc3 PUSH4 0x8da5cb5b
0xc8 EQ
0xc9 PUSH2 0x384
0xcc JUMPI
---
0xc3: V50 = 0x8da5cb5b
0xc8: V51 = EQ 0x8da5cb5b V10
0xc9: V52 = 0x384
0xcc: JUMPI 0x384 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x3b3]
---
0xcd DUP1
0xce PUSH4 0x95d89b41
0xd3 EQ
0xd4 PUSH2 0x3b3
0xd7 JUMPI
---
0xce: V53 = 0x95d89b41
0xd3: V54 = EQ 0x95d89b41 V10
0xd4: V55 = 0x3b3
0xd7: JUMPI 0x3b3 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x43e]
---
0xd8 DUP1
0xd9 PUSH4 0x9c7ebb30
0xde EQ
0xdf PUSH2 0x43e
0xe2 JUMPI
---
0xd9: V56 = 0x9c7ebb30
0xde: V57 = EQ 0x9c7ebb30 V10
0xdf: V58 = 0x43e
0xe2: JUMPI 0x43e V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x456]
---
0xe3 DUP1
0xe4 PUSH4 0xa9059cbb
0xe9 EQ
0xea PUSH2 0x456
0xed JUMPI
---
0xe4: V59 = 0xa9059cbb
0xe9: V60 = EQ 0xa9059cbb V10
0xea: V61 = 0x456
0xed: JUMPI 0x456 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x48c]
---
0xee DUP1
0xef PUSH4 0xdd62ed3e
0xf4 EQ
0xf5 PUSH2 0x48c
0xf8 JUMPI
---
0xef: V62 = 0xdd62ed3e
0xf4: V63 = EQ 0xdd62ed3e V10
0xf5: V64 = 0x48c
0xf8: JUMPI 0x48c V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x4c3]
---
0xf9 DUP1
0xfa PUSH4 0xf2fde38b
0xff EQ
0x100 PUSH2 0x4c3
0x103 JUMPI
---
0xfa: V65 = 0xf2fde38b
0xff: V66 = EQ 0xf2fde38b V10
0x100: V67 = 0x4c3
0x103: JUMPI 0x4c3 V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x10e]
---
Predecessors: [0xf9]
Successors: [0x10f, 0x4e4]
---
0x104 DUP1
0x105 PUSH4 0xf355b92d
0x10a EQ
0x10b PUSH2 0x4e4
0x10e JUMPI
---
0x105: V68 = 0xf355b92d
0x10a: V69 = EQ 0xf355b92d V10
0x10b: V70 = 0x4e4
0x10e: JUMPI 0x4e4 V69
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x119]
---
Predecessors: [0x104]
Successors: [0x11a, 0x4fa]
---
0x10f DUP1
0x110 PUSH4 0xf58fef8e
0x115 EQ
0x116 PUSH2 0x4fa
0x119 JUMPI
---
0x110: V71 = 0xf58fef8e
0x115: V72 = EQ 0xf58fef8e V10
0x116: V73 = 0x4fa
0x119: JUMPI 0x4fa V72
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x11a
[0x11a:0x124]
---
Predecessors: [0x10f]
Successors: [0x125, 0x50f]
---
0x11a DUP1
0x11b PUSH4 0xfc37987b
0x120 EQ
0x121 PUSH2 0x50f
0x124 JUMPI
---
0x11b: V74 = 0xfc37987b
0x120: V75 = EQ 0xfc37987b V10
0x121: V76 = 0x50f
0x124: JUMPI 0x50f V75
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x125
[0x125:0x12f]
---
Predecessors: [0x11a]
Successors: [0x130, 0x534]
---
0x125 DUP1
0x126 PUSH4 0xff993a18
0x12b EQ
0x12c PUSH2 0x534
0x12f JUMPI
---
0x126: V77 = 0xff993a18
0x12b: V78 = EQ 0xff993a18 V10
0x12c: V79 = 0x534
0x12f: JUMPI 0x534 V78
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x130
[0x130:0x133]
---
Predecessors: [0x0, 0x125]
Successors: [0x134]
---
0x130 JUMPDEST
0x131 PUSH2 0x140
---
0x130: JUMPDEST 
0x131: V80 = 0x140
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V10, 0x140]

================================

Block 0x134
[0x134:0x13c]
---
Predecessors: [0x130]
Successors: [0x54c]
---
0x134 JUMPDEST
0x135 PUSH2 0x13d
0x138 CALLER
0x139 PUSH2 0x54c
0x13c JUMP
---
0x134: JUMPDEST 
0x135: V81 = 0x13d
0x138: V82 = CALLER
0x139: V83 = 0x54c
0x13c: JUMP 0x54c
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: [0x13d, V82]
Exit stack: [V10, 0x140, 0x13d, V82]

================================

Block 0x13d
[0x13d:0x13d]
---
Predecessors: [0x69f, 0x9cd]
Successors: [0x13e]
---
0x13d JUMPDEST
---
0x13d: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x13e
[0x13e:0x13f]
---
Predecessors: [0x13d]
Successors: [0x140, 0x1ef]
---
0x13e JUMPDEST
0x13f JUMP
---
0x13e: JUMPDEST 
0x13f: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x140
[0x140:0x141]
---
Predecessors: [0x13e, 0x69f, 0x906, 0x93d, 0x98b, 0xa7a, 0xcbe, 0xe81, 0xf27, 0xf54]
Successors: []
---
0x140 JUMPDEST
0x141 STOP
---
0x140: JUMPDEST 
0x141: STOP 
---
Entry stack: [V10, S6, {0x13d, 0x140}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, {0x13d, 0x140}, S4, S3, S2, S1, S0]

================================

Block 0x142
[0x142:0x148]
---
Predecessors: [0xb]
Successors: [0x149, 0x14d]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x142: JUMPDEST 
0x143: V84 = CALLVALUE
0x144: V85 = ISZERO V84
0x145: V86 = 0x14d
0x148: JUMPI 0x14d V85
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x142]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V87 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14d
[0x14d:0x154]
---
Predecessors: [0x142]
Successors: [0x6a5]
---
0x14d JUMPDEST
0x14e PUSH2 0x155
0x151 PUSH2 0x6a5
0x154 JUMP
---
0x14d: JUMPDEST 
0x14e: V88 = 0x155
0x151: V89 = 0x6a5
0x154: JUMP 0x6a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x155]
Exit stack: [V10, 0x155]

================================

Block 0x155
[0x155:0x178]
---
Predecessors: [0x73b]
Successors: [0x179]
---
0x155 JUMPDEST
0x156 PUSH1 0x40
0x158 MLOAD
0x159 PUSH1 0x20
0x15b DUP1
0x15c DUP3
0x15d MSTORE
0x15e DUP2
0x15f SWAP1
0x160 DUP2
0x161 ADD
0x162 DUP4
0x163 DUP2
0x164 DUP2
0x165 MLOAD
0x166 DUP2
0x167 MSTORE
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP2
0x16c POP
0x16d DUP1
0x16e MLOAD
0x16f SWAP1
0x170 PUSH1 0x20
0x172 ADD
0x173 SWAP1
0x174 DUP1
0x175 DUP4
0x176 DUP4
0x177 PUSH1 0x0
---
0x155: JUMPDEST 
0x156: V90 = 0x40
0x158: V91 = M[0x40]
0x159: V92 = 0x20
0x15d: M[V91] = 0x20
0x161: V93 = ADD V91 0x20
0x165: V94 = M[S0]
0x167: M[V93] = V94
0x168: V95 = 0x20
0x16a: V96 = ADD 0x20 V93
0x16e: V97 = M[S0]
0x170: V98 = 0x20
0x172: V99 = ADD 0x20 S0
0x177: V100 = 0x0
---
Entry stack: [V10, 0x155, S0]
Stack pops: 1
Stack additions: [S0, V91, V91, V96, V99, V97, V97, V96, V99, 0x0]
Exit stack: [V10, 0x155, S0, V91, V91, V96, V99, V97, V97, V96, V99, 0x0]

================================

Block 0x179
[0x179:0x181]
---
Predecessors: [0x155, 0x18a, 0x3fb]
Successors: [0x182, 0x192]
---
0x179 JUMPDEST
0x17a DUP4
0x17b DUP2
0x17c LT
0x17d ISZERO
0x17e PUSH2 0x192
0x181 JUMPI
---
0x179: JUMPDEST 
0x17c: V101 = LT S0 S3
0x17d: V102 = ISZERO V101
0x17e: V103 = 0x192
0x181: JUMPI 0x192 V102
---
Entry stack: [V10, 0x155, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x155, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x182
[0x182:0x189]
---
Predecessors: [0x179]
Successors: [0x18a]
---
0x182 DUP1
0x183 DUP3
0x184 ADD
0x185 MLOAD
0x186 DUP2
0x187 DUP5
0x188 ADD
0x189 MSTORE
---
0x184: V104 = ADD S1 S0
0x185: V105 = M[V104]
0x188: V106 = ADD S2 S0
0x189: M[V106] = V105
---
Entry stack: [V10, 0x155, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x155, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x18a
[0x18a:0x191]
---
Predecessors: [0x182]
Successors: [0x179]
---
0x18a JUMPDEST
0x18b PUSH1 0x20
0x18d ADD
0x18e PUSH2 0x179
0x191 JUMP
---
0x18a: JUMPDEST 
0x18b: V107 = 0x20
0x18d: V108 = ADD 0x20 S0
0x18e: V109 = 0x179
0x191: JUMP 0x179
---
Entry stack: [V10, 0x155, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V10, 0x155, S9, S8, S7, S6, S5, S4, S3, S2, S1, V108]

================================

Block 0x192
[0x192:0x1a5]
---
Predecessors: [0x179, 0x3ea]
Successors: [0x1a6, 0x1bf]
---
0x192 JUMPDEST
0x193 POP
0x194 POP
0x195 POP
0x196 POP
0x197 SWAP1
0x198 POP
0x199 SWAP1
0x19a DUP2
0x19b ADD
0x19c SWAP1
0x19d PUSH1 0x1f
0x19f AND
0x1a0 DUP1
0x1a1 ISZERO
0x1a2 PUSH2 0x1bf
0x1a5 JUMPI
---
0x192: JUMPDEST 
0x19b: V110 = ADD S4 S6
0x19d: V111 = 0x1f
0x19f: V112 = AND 0x1f S4
0x1a1: V113 = ISZERO V112
0x1a2: V114 = 0x1bf
0x1a5: JUMPI 0x1bf V113
---
Entry stack: [V10, 0x155, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V110, V112]
Exit stack: [V10, 0x155, S9, S8, S7, V110, V112]

================================

Block 0x1a6
[0x1a6:0x1be]
---
Predecessors: [0x192]
Successors: [0x1bf]
---
0x1a6 DUP1
0x1a7 DUP3
0x1a8 SUB
0x1a9 DUP1
0x1aa MLOAD
0x1ab PUSH1 0x1
0x1ad DUP4
0x1ae PUSH1 0x20
0x1b0 SUB
0x1b1 PUSH2 0x100
0x1b4 EXP
0x1b5 SUB
0x1b6 NOT
0x1b7 AND
0x1b8 DUP2
0x1b9 MSTORE
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP2
0x1be POP
---
0x1a8: V115 = SUB V110 V112
0x1aa: V116 = M[V115]
0x1ab: V117 = 0x1
0x1ae: V118 = 0x20
0x1b0: V119 = SUB 0x20 V112
0x1b1: V120 = 0x100
0x1b4: V121 = EXP 0x100 V119
0x1b5: V122 = SUB V121 0x1
0x1b6: V123 = NOT V122
0x1b7: V124 = AND V123 V116
0x1b9: M[V115] = V124
0x1ba: V125 = 0x20
0x1bc: V126 = ADD 0x20 V115
---
Entry stack: [V10, 0x155, S4, S3, S2, V110, V112]
Stack pops: 2
Stack additions: [V126, S0]
Exit stack: [V10, 0x155, S4, S3, S2, V126, V112]

================================

Block 0x1bf
[0x1bf:0x1cc]
---
Predecessors: [0x192, 0x1a6, 0x403]
Successors: []
---
0x1bf JUMPDEST
0x1c0 POP
0x1c1 SWAP3
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc RETURN
---
0x1bf: JUMPDEST 
0x1c5: V127 = 0x40
0x1c7: V128 = M[0x40]
0x1ca: V129 = SUB S1 V128
0x1cc: RETURN V128 V129
---
Entry stack: [V10, 0x155, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x155]

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x3e]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V130 = CALLVALUE
0x1cf: V131 = ISZERO V130
0x1d0: V132 = 0x1d8
0x1d3: JUMPI 0x1d8 V131
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V133 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d8
[0x1d8:0x1ee]
---
Predecessors: [0x1cd]
Successors: [0x743]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x1ef
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 PUSH1 0x4
0x1e6 CALLDATALOAD
0x1e7 AND
0x1e8 PUSH1 0x24
0x1ea CALLDATALOAD
0x1eb PUSH2 0x743
0x1ee JUMP
---
0x1d8: JUMPDEST 
0x1d9: V134 = 0x1ef
0x1dc: V135 = 0x1
0x1de: V136 = 0xa0
0x1e0: V137 = 0x2
0x1e2: V138 = EXP 0x2 0xa0
0x1e3: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V140 = 0x4
0x1e6: V141 = CALLDATALOAD 0x4
0x1e7: V142 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V143 = 0x24
0x1ea: V144 = CALLDATALOAD 0x24
0x1eb: V145 = 0x743
0x1ee: JUMP 0x743
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ef, V142, V144]
Exit stack: [V10, 0x1ef, V142, V144]

================================

Block 0x1ef
[0x1ef:0x202]
---
Predecessors: [0x13e, 0x7e4, 0x7ea, 0x906, 0x945, 0xd7c]
Successors: []
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 SWAP1
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 DUP2
0x1f7 MSTORE
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe DUP1
0x1ff SWAP2
0x200 SUB
0x201 SWAP1
0x202 RETURN
---
0x1ef: JUMPDEST 
0x1f0: V146 = 0x40
0x1f2: V147 = M[0x40]
0x1f4: V148 = ISZERO S0
0x1f5: V149 = ISZERO V148
0x1f7: M[V147] = V149
0x1f8: V150 = 0x20
0x1fa: V151 = ADD 0x20 V147
0x1fb: V152 = 0x40
0x1fd: V153 = M[0x40]
0x200: V154 = SUB V151 V153
0x202: RETURN V153 V154
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x203
[0x203:0x209]
---
Predecessors: [0x49]
Successors: [0x20a, 0x20e]
---
0x203 JUMPDEST
0x204 CALLVALUE
0x205 ISZERO
0x206 PUSH2 0x20e
0x209 JUMPI
---
0x203: JUMPDEST 
0x204: V155 = CALLVALUE
0x205: V156 = ISZERO V155
0x206: V157 = 0x20e
0x209: JUMPI 0x20e V156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20a
[0x20a:0x20d]
---
Predecessors: [0x203]
Successors: []
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
---
0x20a: V158 = 0x0
0x20d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20e
[0x20e:0x215]
---
Predecessors: [0x203]
Successors: [0x7ea]
---
0x20e JUMPDEST
0x20f PUSH2 0x1ef
0x212 PUSH2 0x7ea
0x215 JUMP
---
0x20e: JUMPDEST 
0x20f: V159 = 0x1ef
0x212: V160 = 0x7ea
0x215: JUMP 0x7ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ef]
Exit stack: [V10, 0x1ef]

================================

Block 0x216
[0x216:0x229]
---
Predecessors: []
Successors: []
---
0x216 JUMPDEST
0x217 PUSH1 0x40
0x219 MLOAD
0x21a SWAP1
0x21b ISZERO
0x21c ISZERO
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 SWAP2
0x227 SUB
0x228 SWAP1
0x229 RETURN
---
0x216: JUMPDEST 
0x217: V161 = 0x40
0x219: V162 = M[0x40]
0x21b: V163 = ISZERO S0
0x21c: V164 = ISZERO V163
0x21e: M[V162] = V164
0x21f: V165 = 0x20
0x221: V166 = ADD 0x20 V162
0x222: V167 = 0x40
0x224: V168 = M[0x40]
0x227: V169 = SUB V166 V168
0x229: RETURN V168 V169
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x54]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V170 = CALLVALUE
0x22c: V171 = ISZERO V170
0x22d: V172 = 0x235
0x230: JUMPI 0x235 V171
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V173 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x235
[0x235:0x23c]
---
Predecessors: [0x22a]
Successors: [0x7f3]
---
0x235 JUMPDEST
0x236 PUSH2 0x23d
0x239 PUSH2 0x7f3
0x23c JUMP
---
0x235: JUMPDEST 
0x236: V174 = 0x23d
0x239: V175 = 0x7f3
0x23c: JUMP 0x7f3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V10, 0x23d]

================================

Block 0x23d
[0x23d:0x24e]
---
Predecessors: [0x7f3, 0x93f, 0x98d, 0x9ad, 0xda9, 0xeb1]
Successors: []
---
0x23d JUMPDEST
0x23e PUSH1 0x40
0x240 MLOAD
0x241 SWAP1
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x20
0x246 ADD
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b SWAP2
0x24c SUB
0x24d SWAP1
0x24e RETURN
---
0x23d: JUMPDEST 
0x23e: V176 = 0x40
0x240: V177 = M[0x40]
0x243: M[V177] = S0
0x244: V178 = 0x20
0x246: V179 = ADD 0x20 V177
0x247: V180 = 0x40
0x249: V181 = M[0x40]
0x24c: V182 = SUB V179 V181
0x24e: RETURN V181 V182
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x24f
[0x24f:0x255]
---
Predecessors: [0x5f]
Successors: [0x256, 0x25a]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24f: JUMPDEST 
0x250: V183 = CALLVALUE
0x251: V184 = ISZERO V183
0x252: V185 = 0x25a
0x255: JUMPI 0x25a V184
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24f]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V186 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25a
[0x25a:0x276]
---
Predecessors: [0x24f]
Successors: [0x7f9]
---
0x25a JUMPDEST
0x25b PUSH2 0x1ef
0x25e PUSH1 0x1
0x260 PUSH1 0xa0
0x262 PUSH1 0x2
0x264 EXP
0x265 SUB
0x266 PUSH1 0x4
0x268 CALLDATALOAD
0x269 DUP2
0x26a AND
0x26b SWAP1
0x26c PUSH1 0x24
0x26e CALLDATALOAD
0x26f AND
0x270 PUSH1 0x44
0x272 CALLDATALOAD
0x273 PUSH2 0x7f9
0x276 JUMP
---
0x25a: JUMPDEST 
0x25b: V187 = 0x1ef
0x25e: V188 = 0x1
0x260: V189 = 0xa0
0x262: V190 = 0x2
0x264: V191 = EXP 0x2 0xa0
0x265: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V193 = 0x4
0x268: V194 = CALLDATALOAD 0x4
0x26a: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x26c: V196 = 0x24
0x26e: V197 = CALLDATALOAD 0x24
0x26f: V198 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x270: V199 = 0x44
0x272: V200 = CALLDATALOAD 0x44
0x273: V201 = 0x7f9
0x276: JUMP 0x7f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ef, V195, V198, V200]
Exit stack: [V10, 0x1ef, V195, V198, V200]

================================

Block 0x277
[0x277:0x28a]
---
Predecessors: []
Successors: []
---
0x277 JUMPDEST
0x278 PUSH1 0x40
0x27a MLOAD
0x27b SWAP1
0x27c ISZERO
0x27d ISZERO
0x27e DUP2
0x27f MSTORE
0x280 PUSH1 0x20
0x282 ADD
0x283 PUSH1 0x40
0x285 MLOAD
0x286 DUP1
0x287 SWAP2
0x288 SUB
0x289 SWAP1
0x28a RETURN
---
0x277: JUMPDEST 
0x278: V202 = 0x40
0x27a: V203 = M[0x40]
0x27c: V204 = ISZERO S0
0x27d: V205 = ISZERO V204
0x27f: M[V203] = V205
0x280: V206 = 0x20
0x282: V207 = ADD 0x20 V203
0x283: V208 = 0x40
0x285: V209 = M[0x40]
0x288: V210 = SUB V207 V209
0x28a: RETURN V209 V210
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28b
[0x28b:0x291]
---
Predecessors: [0x6a]
Successors: [0x292, 0x296]
---
0x28b JUMPDEST
0x28c CALLVALUE
0x28d ISZERO
0x28e PUSH2 0x296
0x291 JUMPI
---
0x28b: JUMPDEST 
0x28c: V211 = CALLVALUE
0x28d: V212 = ISZERO V211
0x28e: V213 = 0x296
0x291: JUMPI 0x296 V212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x28b]
Successors: []
---
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x292: V214 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x296
[0x296:0x29d]
---
Predecessors: [0x28b]
Successors: [0x90e]
---
0x296 JUMPDEST
0x297 PUSH2 0x140
0x29a PUSH2 0x90e
0x29d JUMP
---
0x296: JUMPDEST 
0x297: V215 = 0x140
0x29a: V216 = 0x90e
0x29d: JUMP 0x90e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V10, 0x140]

================================

Block 0x29e
[0x29e:0x29f]
---
Predecessors: []
Successors: []
---
0x29e JUMPDEST
0x29f STOP
---
0x29e: JUMPDEST 
0x29f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a0
[0x2a0:0x2a6]
---
Predecessors: [0x75]
Successors: [0x2a7, 0x2ab]
---
0x2a0 JUMPDEST
0x2a1 CALLVALUE
0x2a2 ISZERO
0x2a3 PUSH2 0x2ab
0x2a6 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V217 = CALLVALUE
0x2a2: V218 = ISZERO V217
0x2a3: V219 = 0x2ab
0x2a6: JUMPI 0x2ab V218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a7
[0x2a7:0x2aa]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a7 PUSH1 0x0
0x2a9 DUP1
0x2aa REVERT
---
0x2a7: V220 = 0x0
0x2aa: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ab
[0x2ab:0x2b2]
---
Predecessors: [0x2a0]
Successors: [0x93f]
---
0x2ab JUMPDEST
0x2ac PUSH2 0x23d
0x2af PUSH2 0x93f
0x2b2 JUMP
---
0x2ab: JUMPDEST 
0x2ac: V221 = 0x23d
0x2af: V222 = 0x93f
0x2b2: JUMP 0x93f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V10, 0x23d]

================================

Block 0x2b3
[0x2b3:0x2c4]
---
Predecessors: []
Successors: []
---
0x2b3 JUMPDEST
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 SWAP1
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 DUP1
0x2c1 SWAP2
0x2c2 SUB
0x2c3 SWAP1
0x2c4 RETURN
---
0x2b3: JUMPDEST 
0x2b4: V223 = 0x40
0x2b6: V224 = M[0x40]
0x2b9: M[V224] = S0
0x2ba: V225 = 0x20
0x2bc: V226 = ADD 0x20 V224
0x2bd: V227 = 0x40
0x2bf: V228 = M[0x40]
0x2c2: V229 = SUB V226 V228
0x2c4: RETURN V228 V229
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c5
[0x2c5:0x2cb]
---
Predecessors: [0x80]
Successors: [0x2cc, 0x2d0]
---
0x2c5 JUMPDEST
0x2c6 CALLVALUE
0x2c7 ISZERO
0x2c8 PUSH2 0x2d0
0x2cb JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V230 = CALLVALUE
0x2c7: V231 = ISZERO V230
0x2c8: V232 = 0x2d0
0x2cb: JUMPI 0x2d0 V231
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cc
[0x2cc:0x2cf]
---
Predecessors: [0x2c5]
Successors: []
---
0x2cc PUSH1 0x0
0x2ce DUP1
0x2cf REVERT
---
0x2cc: V233 = 0x0
0x2cf: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d0
[0x2d0:0x2d7]
---
Predecessors: [0x2c5]
Successors: [0x945]
---
0x2d0 JUMPDEST
0x2d1 PUSH2 0x1ef
0x2d4 PUSH2 0x945
0x2d7 JUMP
---
0x2d0: JUMPDEST 
0x2d1: V234 = 0x1ef
0x2d4: V235 = 0x945
0x2d7: JUMP 0x945
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ef]
Exit stack: [V10, 0x1ef]

================================

Block 0x2d8
[0x2d8:0x2eb]
---
Predecessors: []
Successors: []
---
0x2d8 JUMPDEST
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc SWAP1
0x2dd ISZERO
0x2de ISZERO
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 DUP1
0x2e8 SWAP2
0x2e9 SUB
0x2ea SWAP1
0x2eb RETURN
---
0x2d8: JUMPDEST 
0x2d9: V236 = 0x40
0x2db: V237 = M[0x40]
0x2dd: V238 = ISZERO S0
0x2de: V239 = ISZERO V238
0x2e0: M[V237] = V239
0x2e1: V240 = 0x20
0x2e3: V241 = ADD 0x20 V237
0x2e4: V242 = 0x40
0x2e6: V243 = M[0x40]
0x2e9: V244 = SUB V241 V243
0x2eb: RETURN V243 V244
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ec
[0x2ec:0x2f2]
---
Predecessors: [0x8b]
Successors: [0x2f3, 0x2f7]
---
0x2ec JUMPDEST
0x2ed CALLVALUE
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V245 = CALLVALUE
0x2ee: V246 = ISZERO V245
0x2ef: V247 = 0x2f7
0x2f2: JUMPI 0x2f7 V246
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2ec]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V248 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f7
[0x2f7:0x2fe]
---
Predecessors: [0x2ec]
Successors: [0x953]
---
0x2f7 JUMPDEST
0x2f8 PUSH2 0x140
0x2fb PUSH2 0x953
0x2fe JUMP
---
0x2f7: JUMPDEST 
0x2f8: V249 = 0x140
0x2fb: V250 = 0x953
0x2fe: JUMP 0x953
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V10, 0x140]

================================

Block 0x2ff
[0x2ff:0x300]
---
Predecessors: []
Successors: []
---
0x2ff JUMPDEST
0x300 STOP
---
0x2ff: JUMPDEST 
0x300: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x301
[0x301:0x307]
---
Predecessors: [0x96]
Successors: [0x308, 0x30c]
---
0x301 JUMPDEST
0x302 CALLVALUE
0x303 ISZERO
0x304 PUSH2 0x30c
0x307 JUMPI
---
0x301: JUMPDEST 
0x302: V251 = CALLVALUE
0x303: V252 = ISZERO V251
0x304: V253 = 0x30c
0x307: JUMPI 0x30c V252
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x308
[0x308:0x30b]
---
Predecessors: [0x301]
Successors: []
---
0x308 PUSH1 0x0
0x30a DUP1
0x30b REVERT
---
0x308: V254 = 0x0
0x30b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30c
[0x30c:0x313]
---
Predecessors: [0x301]
Successors: [0x98d]
---
0x30c JUMPDEST
0x30d PUSH2 0x23d
0x310 PUSH2 0x98d
0x313 JUMP
---
0x30c: JUMPDEST 
0x30d: V255 = 0x23d
0x310: V256 = 0x98d
0x313: JUMP 0x98d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V10, 0x23d]

================================

Block 0x314
[0x314:0x325]
---
Predecessors: []
Successors: []
---
0x314 JUMPDEST
0x315 PUSH1 0x40
0x317 MLOAD
0x318 SWAP1
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 SWAP2
0x323 SUB
0x324 SWAP1
0x325 RETURN
---
0x314: JUMPDEST 
0x315: V257 = 0x40
0x317: V258 = M[0x40]
0x31a: M[V258] = S0
0x31b: V259 = 0x20
0x31d: V260 = ADD 0x20 V258
0x31e: V261 = 0x40
0x320: V262 = M[0x40]
0x323: V263 = SUB V260 V262
0x325: RETURN V262 V263
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x326
[0x326:0x32c]
---
Predecessors: [0xa1]
Successors: [0x32d, 0x331]
---
0x326 JUMPDEST
0x327 CALLVALUE
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x326: JUMPDEST 
0x327: V264 = CALLVALUE
0x328: V265 = ISZERO V264
0x329: V266 = 0x331
0x32c: JUMPI 0x331 V265
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x326]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V267 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x331
[0x331:0x344]
---
Predecessors: [0x326]
Successors: [0x993]
---
0x331 JUMPDEST
0x332 PUSH2 0x23d
0x335 PUSH1 0x1
0x337 PUSH1 0xa0
0x339 PUSH1 0x2
0x33b EXP
0x33c SUB
0x33d PUSH1 0x4
0x33f CALLDATALOAD
0x340 AND
0x341 PUSH2 0x993
0x344 JUMP
---
0x331: JUMPDEST 
0x332: V268 = 0x23d
0x335: V269 = 0x1
0x337: V270 = 0xa0
0x339: V271 = 0x2
0x33b: V272 = EXP 0x2 0xa0
0x33c: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33d: V274 = 0x4
0x33f: V275 = CALLDATALOAD 0x4
0x340: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x341: V277 = 0x993
0x344: JUMP 0x993
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d, V276]
Exit stack: [V10, 0x23d, V276]

================================

Block 0x345
[0x345:0x356]
---
Predecessors: []
Successors: []
---
0x345 JUMPDEST
0x346 PUSH1 0x40
0x348 MLOAD
0x349 SWAP1
0x34a DUP2
0x34b MSTORE
0x34c PUSH1 0x20
0x34e ADD
0x34f PUSH1 0x40
0x351 MLOAD
0x352 DUP1
0x353 SWAP2
0x354 SUB
0x355 SWAP1
0x356 RETURN
---
0x345: JUMPDEST 
0x346: V278 = 0x40
0x348: V279 = M[0x40]
0x34b: M[V279] = S0
0x34c: V280 = 0x20
0x34e: V281 = ADD 0x20 V279
0x34f: V282 = 0x40
0x351: V283 = M[0x40]
0x354: V284 = SUB V281 V283
0x356: RETURN V283 V284
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x357
[0x357:0x35d]
---
Predecessors: [0xac]
Successors: [0x35e, 0x362]
---
0x357 JUMPDEST
0x358 CALLVALUE
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x357: JUMPDEST 
0x358: V285 = CALLVALUE
0x359: V286 = ISZERO V285
0x35a: V287 = 0x362
0x35d: JUMPI 0x362 V286
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x357]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V288 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x362
[0x362:0x369]
---
Predecessors: [0x357]
Successors: [0x9b2]
---
0x362 JUMPDEST
0x363 PUSH2 0x140
0x366 PUSH2 0x9b2
0x369 JUMP
---
0x362: JUMPDEST 
0x363: V289 = 0x140
0x366: V290 = 0x9b2
0x369: JUMP 0x9b2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V10, 0x140]

================================

Block 0x36a
[0x36a:0x36b]
---
Predecessors: []
Successors: []
---
0x36a JUMPDEST
0x36b STOP
---
0x36a: JUMPDEST 
0x36b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x36c
[0x36c:0x372]
---
Predecessors: [0xb7]
Successors: [0x373, 0x377]
---
0x36c JUMPDEST
0x36d CALLVALUE
0x36e ISZERO
0x36f PUSH2 0x377
0x372 JUMPI
---
0x36c: JUMPDEST 
0x36d: V291 = CALLVALUE
0x36e: V292 = ISZERO V291
0x36f: V293 = 0x377
0x372: JUMPI 0x377 V292
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x373
[0x373:0x376]
---
Predecessors: [0x36c]
Successors: []
---
0x373 PUSH1 0x0
0x375 DUP1
0x376 REVERT
---
0x373: V294 = 0x0
0x376: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x377
[0x377:0x381]
---
Predecessors: [0x36c]
Successors: [0xa0a]
---
0x377 JUMPDEST
0x378 PUSH2 0x140
0x37b PUSH1 0x4
0x37d CALLDATALOAD
0x37e PUSH2 0xa0a
0x381 JUMP
---
0x377: JUMPDEST 
0x378: V295 = 0x140
0x37b: V296 = 0x4
0x37d: V297 = CALLDATALOAD 0x4
0x37e: V298 = 0xa0a
0x381: JUMP 0xa0a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140, V297]
Exit stack: [V10, 0x140, V297]

================================

Block 0x382
[0x382:0x383]
---
Predecessors: []
Successors: []
---
0x382 JUMPDEST
0x383 STOP
---
0x382: JUMPDEST 
0x383: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x384
[0x384:0x38a]
---
Predecessors: [0xc2]
Successors: [0x38b, 0x38f]
---
0x384 JUMPDEST
0x385 CALLVALUE
0x386 ISZERO
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x384: JUMPDEST 
0x385: V299 = CALLVALUE
0x386: V300 = ISZERO V299
0x387: V301 = 0x38f
0x38a: JUMPI 0x38f V300
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x384]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V302 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38f
[0x38f:0x396]
---
Predecessors: [0x384]
Successors: [0xa7e]
---
0x38f JUMPDEST
0x390 PUSH2 0x397
0x393 PUSH2 0xa7e
0x396 JUMP
---
0x38f: JUMPDEST 
0x390: V303 = 0x397
0x393: V304 = 0xa7e
0x396: JUMP 0xa7e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x397]
Exit stack: [V10, 0x397]

================================

Block 0x397
[0x397:0x3b2]
---
Predecessors: [0xa7e]
Successors: []
---
0x397 JUMPDEST
0x398 PUSH1 0x40
0x39a MLOAD
0x39b PUSH1 0x1
0x39d PUSH1 0xa0
0x39f PUSH1 0x2
0x3a1 EXP
0x3a2 SUB
0x3a3 SWAP1
0x3a4 SWAP2
0x3a5 AND
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x20
0x3aa ADD
0x3ab PUSH1 0x40
0x3ad MLOAD
0x3ae DUP1
0x3af SWAP2
0x3b0 SUB
0x3b1 SWAP1
0x3b2 RETURN
---
0x397: JUMPDEST 
0x398: V305 = 0x40
0x39a: V306 = M[0x40]
0x39b: V307 = 0x1
0x39d: V308 = 0xa0
0x39f: V309 = 0x2
0x3a1: V310 = EXP 0x2 0xa0
0x3a2: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a5: V312 = AND V920 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: M[V306] = V312
0x3a8: V313 = 0x20
0x3aa: V314 = ADD 0x20 V306
0x3ab: V315 = 0x40
0x3ad: V316 = M[0x40]
0x3b0: V317 = SUB V314 V316
0x3b2: RETURN V316 V317
---
Entry stack: [V10, 0x397, V920]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x397]

================================

Block 0x3b3
[0x3b3:0x3b9]
---
Predecessors: [0xcd]
Successors: [0x3ba, 0x3be]
---
0x3b3 JUMPDEST
0x3b4 CALLVALUE
0x3b5 ISZERO
0x3b6 PUSH2 0x3be
0x3b9 JUMPI
---
0x3b3: JUMPDEST 
0x3b4: V318 = CALLVALUE
0x3b5: V319 = ISZERO V318
0x3b6: V320 = 0x3be
0x3b9: JUMPI 0x3be V319
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ba
[0x3ba:0x3bd]
---
Predecessors: [0x3b3]
Successors: []
---
0x3ba PUSH1 0x0
0x3bc DUP1
0x3bd REVERT
---
0x3ba: V321 = 0x0
0x3bd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3be
[0x3be:0x3c5]
---
Predecessors: [0x3b3]
Successors: [0xa8d]
---
0x3be JUMPDEST
0x3bf PUSH2 0x155
0x3c2 PUSH2 0xa8d
0x3c5 JUMP
---
0x3be: JUMPDEST 
0x3bf: V322 = 0x155
0x3c2: V323 = 0xa8d
0x3c5: JUMP 0xa8d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x155]
Exit stack: [V10, 0x155]

================================

Block 0x3c6
[0x3c6:0x3e9]
---
Predecessors: []
Successors: [0x3ea]
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca PUSH1 0x20
0x3cc DUP1
0x3cd DUP3
0x3ce MSTORE
0x3cf DUP2
0x3d0 SWAP1
0x3d1 DUP2
0x3d2 ADD
0x3d3 DUP4
0x3d4 DUP2
0x3d5 DUP2
0x3d6 MLOAD
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 PUSH1 0x20
0x3db ADD
0x3dc SWAP2
0x3dd POP
0x3de DUP1
0x3df MLOAD
0x3e0 SWAP1
0x3e1 PUSH1 0x20
0x3e3 ADD
0x3e4 SWAP1
0x3e5 DUP1
0x3e6 DUP4
0x3e7 DUP4
0x3e8 PUSH1 0x0
---
0x3c6: JUMPDEST 
0x3c7: V324 = 0x40
0x3c9: V325 = M[0x40]
0x3ca: V326 = 0x20
0x3ce: M[V325] = 0x20
0x3d2: V327 = ADD V325 0x20
0x3d6: V328 = M[S0]
0x3d8: M[V327] = V328
0x3d9: V329 = 0x20
0x3db: V330 = ADD 0x20 V327
0x3df: V331 = M[S0]
0x3e1: V332 = 0x20
0x3e3: V333 = ADD 0x20 S0
0x3e8: V334 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V325, V325, V330, V333, V331, V331, V330, V333, 0x0]
Exit stack: [S0, V325, V325, V330, V333, V331, V331, V330, V333, 0x0]

================================

Block 0x3ea
[0x3ea:0x3f2]
---
Predecessors: [0x3c6]
Successors: [0x192, 0x3f3]
---
0x3ea JUMPDEST
0x3eb DUP4
0x3ec DUP2
0x3ed LT
0x3ee ISZERO
0x3ef PUSH2 0x192
0x3f2 JUMPI
---
0x3ea: JUMPDEST 
0x3ed: V335 = LT 0x0 V331
0x3ee: V336 = ISZERO V335
0x3ef: V337 = 0x192
0x3f2: JUMPI 0x192 V336
---
Entry stack: [S9, V325, V325, V330, V333, V331, V331, V330, V333, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V325, V325, V330, V333, V331, V331, V330, V333, 0x0]

================================

Block 0x3f3
[0x3f3:0x3fa]
---
Predecessors: [0x3ea]
Successors: [0x3fb]
---
0x3f3 DUP1
0x3f4 DUP3
0x3f5 ADD
0x3f6 MLOAD
0x3f7 DUP2
0x3f8 DUP5
0x3f9 ADD
0x3fa MSTORE
---
0x3f5: V338 = ADD V333 0x0
0x3f6: V339 = M[V338]
0x3f9: V340 = ADD V330 0x0
0x3fa: M[V340] = V339
---
Entry stack: [S9, V325, V325, V330, V333, V331, V331, V330, V333, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V325, V325, V330, V333, V331, V331, V330, V333, 0x0]

================================

Block 0x3fb
[0x3fb:0x402]
---
Predecessors: [0x3f3]
Successors: [0x179]
---
0x3fb JUMPDEST
0x3fc PUSH1 0x20
0x3fe ADD
0x3ff PUSH2 0x179
0x402 JUMP
---
0x3fb: JUMPDEST 
0x3fc: V341 = 0x20
0x3fe: V342 = ADD 0x20 0x0
0x3ff: V343 = 0x179
0x402: JUMP 0x179
---
Entry stack: [S9, V325, V325, V330, V333, V331, V331, V330, V333, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V325, V325, V330, V333, V331, V331, V330, V333, 0x20]

================================

Block 0x403
[0x403:0x416]
---
Predecessors: []
Successors: [0x1bf, 0x417]
---
0x403 JUMPDEST
0x404 POP
0x405 POP
0x406 POP
0x407 POP
0x408 SWAP1
0x409 POP
0x40a SWAP1
0x40b DUP2
0x40c ADD
0x40d SWAP1
0x40e PUSH1 0x1f
0x410 AND
0x411 DUP1
0x412 ISZERO
0x413 PUSH2 0x1bf
0x416 JUMPI
---
0x403: JUMPDEST 
0x40c: V344 = ADD S4 S6
0x40e: V345 = 0x1f
0x410: V346 = AND 0x1f S4
0x412: V347 = ISZERO V346
0x413: V348 = 0x1bf
0x416: JUMPI 0x1bf V347
---
Entry stack: []
Stack pops: 7
Stack additions: [V344, V346]
Exit stack: [V344, V346]

================================

Block 0x417
[0x417:0x42f]
---
Predecessors: [0x403]
Successors: [0x430]
---
0x417 DUP1
0x418 DUP3
0x419 SUB
0x41a DUP1
0x41b MLOAD
0x41c PUSH1 0x1
0x41e DUP4
0x41f PUSH1 0x20
0x421 SUB
0x422 PUSH2 0x100
0x425 EXP
0x426 SUB
0x427 NOT
0x428 AND
0x429 DUP2
0x42a MSTORE
0x42b PUSH1 0x20
0x42d ADD
0x42e SWAP2
0x42f POP
---
0x419: V349 = SUB V344 V346
0x41b: V350 = M[V349]
0x41c: V351 = 0x1
0x41f: V352 = 0x20
0x421: V353 = SUB 0x20 V346
0x422: V354 = 0x100
0x425: V355 = EXP 0x100 V353
0x426: V356 = SUB V355 0x1
0x427: V357 = NOT V356
0x428: V358 = AND V357 V350
0x42a: M[V349] = V358
0x42b: V359 = 0x20
0x42d: V360 = ADD 0x20 V349
---
Entry stack: [V344, V346]
Stack pops: 2
Stack additions: [V360, S0]
Exit stack: [V360, V346]

================================

Block 0x430
[0x430:0x43d]
---
Predecessors: [0x417]
Successors: []
---
0x430 JUMPDEST
0x431 POP
0x432 SWAP3
0x433 POP
0x434 POP
0x435 POP
0x436 PUSH1 0x40
0x438 MLOAD
0x439 DUP1
0x43a SWAP2
0x43b SUB
0x43c SWAP1
0x43d RETURN
---
0x430: JUMPDEST 
0x436: V361 = 0x40
0x438: V362 = M[0x40]
0x43b: V363 = SUB V360 V362
0x43d: RETURN V362 V363
---
Entry stack: [V360, V346]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x43e
[0x43e:0x444]
---
Predecessors: [0xd8]
Successors: [0x445, 0x449]
---
0x43e JUMPDEST
0x43f CALLVALUE
0x440 ISZERO
0x441 PUSH2 0x449
0x444 JUMPI
---
0x43e: JUMPDEST 
0x43f: V364 = CALLVALUE
0x440: V365 = ISZERO V364
0x441: V366 = 0x449
0x444: JUMPI 0x449 V365
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x445
[0x445:0x448]
---
Predecessors: [0x43e]
Successors: []
---
0x445 PUSH1 0x0
0x447 DUP1
0x448 REVERT
---
0x445: V367 = 0x0
0x448: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x449
[0x449:0x453]
---
Predecessors: [0x43e]
Successors: [0xb2b]
---
0x449 JUMPDEST
0x44a PUSH2 0x140
0x44d PUSH1 0x4
0x44f CALLDATALOAD
0x450 PUSH2 0xb2b
0x453 JUMP
---
0x449: JUMPDEST 
0x44a: V368 = 0x140
0x44d: V369 = 0x4
0x44f: V370 = CALLDATALOAD 0x4
0x450: V371 = 0xb2b
0x453: JUMP 0xb2b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140, V370]
Exit stack: [V10, 0x140, V370]

================================

Block 0x454
[0x454:0x455]
---
Predecessors: []
Successors: []
---
0x454 JUMPDEST
0x455 STOP
---
0x454: JUMPDEST 
0x455: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x456
[0x456:0x45c]
---
Predecessors: [0xe3]
Successors: [0x45d, 0x461]
---
0x456 JUMPDEST
0x457 CALLVALUE
0x458 ISZERO
0x459 PUSH2 0x461
0x45c JUMPI
---
0x456: JUMPDEST 
0x457: V372 = CALLVALUE
0x458: V373 = ISZERO V372
0x459: V374 = 0x461
0x45c: JUMPI 0x461 V373
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45d
[0x45d:0x460]
---
Predecessors: [0x456]
Successors: []
---
0x45d PUSH1 0x0
0x45f DUP1
0x460 REVERT
---
0x45d: V375 = 0x0
0x460: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x461
[0x461:0x477]
---
Predecessors: [0x456]
Successors: [0xcc2]
---
0x461 JUMPDEST
0x462 PUSH2 0x1ef
0x465 PUSH1 0x1
0x467 PUSH1 0xa0
0x469 PUSH1 0x2
0x46b EXP
0x46c SUB
0x46d PUSH1 0x4
0x46f CALLDATALOAD
0x470 AND
0x471 PUSH1 0x24
0x473 CALLDATALOAD
0x474 PUSH2 0xcc2
0x477 JUMP
---
0x461: JUMPDEST 
0x462: V376 = 0x1ef
0x465: V377 = 0x1
0x467: V378 = 0xa0
0x469: V379 = 0x2
0x46b: V380 = EXP 0x2 0xa0
0x46c: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46d: V382 = 0x4
0x46f: V383 = CALLDATALOAD 0x4
0x470: V384 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0x471: V385 = 0x24
0x473: V386 = CALLDATALOAD 0x24
0x474: V387 = 0xcc2
0x477: JUMP 0xcc2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ef, V384, V386]
Exit stack: [V10, 0x1ef, V384, V386]

================================

Block 0x478
[0x478:0x48b]
---
Predecessors: []
Successors: []
---
0x478 JUMPDEST
0x479 PUSH1 0x40
0x47b MLOAD
0x47c SWAP1
0x47d ISZERO
0x47e ISZERO
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x20
0x483 ADD
0x484 PUSH1 0x40
0x486 MLOAD
0x487 DUP1
0x488 SWAP2
0x489 SUB
0x48a SWAP1
0x48b RETURN
---
0x478: JUMPDEST 
0x479: V388 = 0x40
0x47b: V389 = M[0x40]
0x47d: V390 = ISZERO S0
0x47e: V391 = ISZERO V390
0x480: M[V389] = V391
0x481: V392 = 0x20
0x483: V393 = ADD 0x20 V389
0x484: V394 = 0x40
0x486: V395 = M[0x40]
0x489: V396 = SUB V393 V395
0x48b: RETURN V395 V396
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x48c
[0x48c:0x492]
---
Predecessors: [0xee]
Successors: [0x493, 0x497]
---
0x48c JUMPDEST
0x48d CALLVALUE
0x48e ISZERO
0x48f PUSH2 0x497
0x492 JUMPI
---
0x48c: JUMPDEST 
0x48d: V397 = CALLVALUE
0x48e: V398 = ISZERO V397
0x48f: V399 = 0x497
0x492: JUMPI 0x497 V398
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x493
[0x493:0x496]
---
Predecessors: [0x48c]
Successors: []
---
0x493 PUSH1 0x0
0x495 DUP1
0x496 REVERT
---
0x493: V400 = 0x0
0x496: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x497
[0x497:0x4b0]
---
Predecessors: [0x48c]
Successors: [0xd82]
---
0x497 JUMPDEST
0x498 PUSH2 0x23d
0x49b PUSH1 0x1
0x49d PUSH1 0xa0
0x49f PUSH1 0x2
0x4a1 EXP
0x4a2 SUB
0x4a3 PUSH1 0x4
0x4a5 CALLDATALOAD
0x4a6 DUP2
0x4a7 AND
0x4a8 SWAP1
0x4a9 PUSH1 0x24
0x4ab CALLDATALOAD
0x4ac AND
0x4ad PUSH2 0xd82
0x4b0 JUMP
---
0x497: JUMPDEST 
0x498: V401 = 0x23d
0x49b: V402 = 0x1
0x49d: V403 = 0xa0
0x49f: V404 = 0x2
0x4a1: V405 = EXP 0x2 0xa0
0x4a2: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a3: V407 = 0x4
0x4a5: V408 = CALLDATALOAD 0x4
0x4a7: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x4a9: V410 = 0x24
0x4ab: V411 = CALLDATALOAD 0x24
0x4ac: V412 = AND V411 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V413 = 0xd82
0x4b0: JUMP 0xd82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d, V409, V412]
Exit stack: [V10, 0x23d, V409, V412]

================================

Block 0x4b1
[0x4b1:0x4c2]
---
Predecessors: []
Successors: []
---
0x4b1 JUMPDEST
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 SWAP1
0x4b6 DUP2
0x4b7 MSTORE
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be DUP1
0x4bf SWAP2
0x4c0 SUB
0x4c1 SWAP1
0x4c2 RETURN
---
0x4b1: JUMPDEST 
0x4b2: V414 = 0x40
0x4b4: V415 = M[0x40]
0x4b7: M[V415] = S0
0x4b8: V416 = 0x20
0x4ba: V417 = ADD 0x20 V415
0x4bb: V418 = 0x40
0x4bd: V419 = M[0x40]
0x4c0: V420 = SUB V417 V419
0x4c2: RETURN V419 V420
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4c3
[0x4c3:0x4c9]
---
Predecessors: [0xf9]
Successors: [0x4ca, 0x4ce]
---
0x4c3 JUMPDEST
0x4c4 CALLVALUE
0x4c5 ISZERO
0x4c6 PUSH2 0x4ce
0x4c9 JUMPI
---
0x4c3: JUMPDEST 
0x4c4: V421 = CALLVALUE
0x4c5: V422 = ISZERO V421
0x4c6: V423 = 0x4ce
0x4c9: JUMPI 0x4ce V422
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ca
[0x4ca:0x4cd]
---
Predecessors: [0x4c3]
Successors: []
---
0x4ca PUSH1 0x0
0x4cc DUP1
0x4cd REVERT
---
0x4ca: V424 = 0x0
0x4cd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ce
[0x4ce:0x4e1]
---
Predecessors: [0x4c3]
Successors: [0xdaf]
---
0x4ce JUMPDEST
0x4cf PUSH2 0x140
0x4d2 PUSH1 0x1
0x4d4 PUSH1 0xa0
0x4d6 PUSH1 0x2
0x4d8 EXP
0x4d9 SUB
0x4da PUSH1 0x4
0x4dc CALLDATALOAD
0x4dd AND
0x4de PUSH2 0xdaf
0x4e1 JUMP
---
0x4ce: JUMPDEST 
0x4cf: V425 = 0x140
0x4d2: V426 = 0x1
0x4d4: V427 = 0xa0
0x4d6: V428 = 0x2
0x4d8: V429 = EXP 0x2 0xa0
0x4d9: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4da: V431 = 0x4
0x4dc: V432 = CALLDATALOAD 0x4
0x4dd: V433 = AND V432 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V434 = 0xdaf
0x4e1: JUMP 0xdaf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140, V433]
Exit stack: [V10, 0x140, V433]

================================

Block 0x4e2
[0x4e2:0x4e3]
---
Predecessors: []
Successors: []
---
0x4e2 JUMPDEST
0x4e3 STOP
---
0x4e2: JUMPDEST 
0x4e3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4e4
[0x4e4:0x4f7]
---
Predecessors: [0x104]
Successors: [0x54c]
---
0x4e4 JUMPDEST
0x4e5 PUSH2 0x140
0x4e8 PUSH1 0x1
0x4ea PUSH1 0xa0
0x4ec PUSH1 0x2
0x4ee EXP
0x4ef SUB
0x4f0 PUSH1 0x4
0x4f2 CALLDATALOAD
0x4f3 AND
0x4f4 PUSH2 0x54c
0x4f7 JUMP
---
0x4e4: JUMPDEST 
0x4e5: V435 = 0x140
0x4e8: V436 = 0x1
0x4ea: V437 = 0xa0
0x4ec: V438 = 0x2
0x4ee: V439 = EXP 0x2 0xa0
0x4ef: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f0: V441 = 0x4
0x4f2: V442 = CALLDATALOAD 0x4
0x4f3: V443 = AND V442 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V444 = 0x54c
0x4f7: JUMP 0x54c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140, V443]
Exit stack: [V10, 0x140, V443]

================================

Block 0x4f8
[0x4f8:0x4f9]
---
Predecessors: []
Successors: []
---
0x4f8 JUMPDEST
0x4f9 STOP
---
0x4f8: JUMPDEST 
0x4f9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4fa
[0x4fa:0x500]
---
Predecessors: [0x10f]
Successors: [0x501, 0x505]
---
0x4fa JUMPDEST
0x4fb CALLVALUE
0x4fc ISZERO
0x4fd PUSH2 0x505
0x500 JUMPI
---
0x4fa: JUMPDEST 
0x4fb: V445 = CALLVALUE
0x4fc: V446 = ISZERO V445
0x4fd: V447 = 0x505
0x500: JUMPI 0x505 V446
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x501
[0x501:0x504]
---
Predecessors: [0x4fa]
Successors: []
---
0x501 PUSH1 0x0
0x503 DUP1
0x504 REVERT
---
0x501: V448 = 0x0
0x504: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x505
[0x505:0x50c]
---
Predecessors: [0x4fa]
Successors: [0xe85]
---
0x505 JUMPDEST
0x506 PUSH2 0x140
0x509 PUSH2 0xe85
0x50c JUMP
---
0x505: JUMPDEST 
0x506: V449 = 0x140
0x509: V450 = 0xe85
0x50c: JUMP 0xe85
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V10, 0x140]

================================

Block 0x50d
[0x50d:0x50e]
---
Predecessors: []
Successors: []
---
0x50d JUMPDEST
0x50e STOP
---
0x50d: JUMPDEST 
0x50e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x50f
[0x50f:0x515]
---
Predecessors: [0x11a]
Successors: [0x516, 0x51a]
---
0x50f JUMPDEST
0x510 CALLVALUE
0x511 ISZERO
0x512 PUSH2 0x51a
0x515 JUMPI
---
0x50f: JUMPDEST 
0x510: V451 = CALLVALUE
0x511: V452 = ISZERO V451
0x512: V453 = 0x51a
0x515: JUMPI 0x51a V452
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x516
[0x516:0x519]
---
Predecessors: [0x50f]
Successors: []
---
0x516 PUSH1 0x0
0x518 DUP1
0x519 REVERT
---
0x516: V454 = 0x0
0x519: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51a
[0x51a:0x521]
---
Predecessors: [0x50f]
Successors: [0xeb1]
---
0x51a JUMPDEST
0x51b PUSH2 0x23d
0x51e PUSH2 0xeb1
0x521 JUMP
---
0x51a: JUMPDEST 
0x51b: V455 = 0x23d
0x51e: V456 = 0xeb1
0x521: JUMP 0xeb1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V10, 0x23d]

================================

Block 0x522
[0x522:0x533]
---
Predecessors: []
Successors: []
---
0x522 JUMPDEST
0x523 PUSH1 0x40
0x525 MLOAD
0x526 SWAP1
0x527 DUP2
0x528 MSTORE
0x529 PUSH1 0x20
0x52b ADD
0x52c PUSH1 0x40
0x52e MLOAD
0x52f DUP1
0x530 SWAP2
0x531 SUB
0x532 SWAP1
0x533 RETURN
---
0x522: JUMPDEST 
0x523: V457 = 0x40
0x525: V458 = M[0x40]
0x528: M[V458] = S0
0x529: V459 = 0x20
0x52b: V460 = ADD 0x20 V458
0x52c: V461 = 0x40
0x52e: V462 = M[0x40]
0x531: V463 = SUB V460 V462
0x533: RETURN V462 V463
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x534
[0x534:0x53a]
---
Predecessors: [0x125]
Successors: [0x53b, 0x53f]
---
0x534 JUMPDEST
0x535 CALLVALUE
0x536 ISZERO
0x537 PUSH2 0x53f
0x53a JUMPI
---
0x534: JUMPDEST 
0x535: V464 = CALLVALUE
0x536: V465 = ISZERO V464
0x537: V466 = 0x53f
0x53a: JUMPI 0x53f V465
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x53b
[0x53b:0x53e]
---
Predecessors: [0x534]
Successors: []
---
0x53b PUSH1 0x0
0x53d DUP1
0x53e REVERT
---
0x53b: V467 = 0x0
0x53e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x53f
[0x53f:0x549]
---
Predecessors: [0x534]
Successors: [0xeb7]
---
0x53f JUMPDEST
0x540 PUSH2 0x140
0x543 PUSH1 0x4
0x545 CALLDATALOAD
0x546 PUSH2 0xeb7
0x549 JUMP
---
0x53f: JUMPDEST 
0x540: V468 = 0x140
0x543: V469 = 0x4
0x545: V470 = CALLDATALOAD 0x4
0x546: V471 = 0xeb7
0x549: JUMP 0xeb7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x140, V470]
Exit stack: [V10, 0x140, V470]

================================

Block 0x54a
[0x54a:0x54b]
---
Predecessors: []
Successors: []
---
0x54a JUMPDEST
0x54b STOP
---
0x54a: JUMPDEST 
0x54b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x54c
[0x54c:0x55f]
---
Predecessors: [0x134, 0x4e4]
Successors: [0x560, 0x564]
---
0x54c JUMPDEST
0x54d PUSH1 0x9
0x54f SLOAD
0x550 PUSH1 0x0
0x552 SWAP1
0x553 DUP2
0x554 SWAP1
0x555 DUP2
0x556 SWAP1
0x557 PUSH1 0xff
0x559 AND
0x55a ISZERO
0x55b ISZERO
0x55c PUSH2 0x564
0x55f JUMPI
---
0x54c: JUMPDEST 
0x54d: V472 = 0x9
0x54f: V473 = S[0x9]
0x550: V474 = 0x0
0x557: V475 = 0xff
0x559: V476 = AND 0xff V473
0x55a: V477 = ISZERO V476
0x55b: V478 = ISZERO V477
0x55c: V479 = 0x564
0x55f: JUMPI 0x564 V478
---
Entry stack: [V10, S2, {0x13d, 0x140}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S2, {0x13d, 0x140}, S0, 0x0, 0x0, 0x0]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x54c]
Successors: []
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 REVERT
---
0x560: V480 = 0x0
0x563: REVERT 0x0 0x0
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]

================================

Block 0x564
[0x564:0x574]
---
Predecessors: [0x54c]
Successors: [0x575, 0x579]
---
0x564 JUMPDEST
0x565 PUSH1 0x1
0x567 PUSH1 0xa0
0x569 PUSH1 0x2
0x56b EXP
0x56c SUB
0x56d DUP5
0x56e AND
0x56f ISZERO
0x570 ISZERO
0x571 PUSH2 0x579
0x574 JUMPI
---
0x564: JUMPDEST 
0x565: V481 = 0x1
0x567: V482 = 0xa0
0x569: V483 = 0x2
0x56b: V484 = EXP 0x2 0xa0
0x56c: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56e: V486 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x56f: V487 = ISZERO V486
0x570: V488 = ISZERO V487
0x571: V489 = 0x579
0x574: JUMPI 0x579 V488
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]

================================

Block 0x575
[0x575:0x578]
---
Predecessors: [0x564]
Successors: []
---
0x575 PUSH1 0x0
0x577 DUP1
0x578 REVERT
---
0x575: V490 = 0x0
0x578: REVERT 0x0 0x0
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]

================================

Block 0x579
[0x579:0x58f]
---
Predecessors: [0x564]
Successors: [0x590, 0x594]
---
0x579 JUMPDEST
0x57a PUSH1 0x3
0x57c SLOAD
0x57d PUSH1 0x1
0x57f PUSH1 0xa0
0x581 PUSH1 0x2
0x583 EXP
0x584 SUB
0x585 DUP6
0x586 DUP2
0x587 AND
0x588 SWAP2
0x589 AND
0x58a EQ
0x58b ISZERO
0x58c PUSH2 0x594
0x58f JUMPI
---
0x579: JUMPDEST 
0x57a: V491 = 0x3
0x57c: V492 = S[0x3]
0x57d: V493 = 0x1
0x57f: V494 = 0xa0
0x581: V495 = 0x2
0x583: V496 = EXP 0x2 0xa0
0x584: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x589: V499 = AND V492 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V500 = EQ V499 V498
0x58b: V501 = ISZERO V500
0x58c: V502 = 0x594
0x58f: JUMPI 0x594 V501
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]

================================

Block 0x590
[0x590:0x593]
---
Predecessors: [0x579]
Successors: []
---
0x590 PUSH1 0x0
0x592 DUP1
0x593 REVERT
---
0x590: V503 = 0x0
0x593: REVERT 0x0 0x0
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]

================================

Block 0x594
[0x594:0x59c]
---
Predecessors: [0x579]
Successors: [0x59d, 0x5a1]
---
0x594 JUMPDEST
0x595 PUSH1 0x0
0x597 CALLVALUE
0x598 GT
0x599 PUSH2 0x5a1
0x59c JUMPI
---
0x594: JUMPDEST 
0x595: V504 = 0x0
0x597: V505 = CALLVALUE
0x598: V506 = GT V505 0x0
0x599: V507 = 0x5a1
0x59c: JUMPI 0x5a1 V506
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]

================================

Block 0x59d
[0x59d:0x5a0]
---
Predecessors: [0x594]
Successors: []
---
0x59d PUSH1 0x0
0x59f DUP1
0x5a0 REVERT
---
0x59d: V508 = 0x0
0x5a0: REVERT 0x0 0x0
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]

================================

Block 0x5a1
[0x5a1:0x5ac]
---
Predecessors: [0x594]
Successors: [0xf2b]
---
0x5a1 JUMPDEST
0x5a2 CALLVALUE
0x5a3 SWAP3
0x5a4 POP
0x5a5 PUSH2 0x5ad
0x5a8 DUP4
0x5a9 PUSH2 0xf2b
0x5ac JUMP
---
0x5a1: JUMPDEST 
0x5a2: V509 = CALLVALUE
0x5a5: V510 = 0x5ad
0x5a9: V511 = 0xf2b
0x5ac: JUMP 0xf2b
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V509, S1, S0, 0x5ad, V509]
Exit stack: [V10, S5, {0x13d, 0x140}, S3, V509, 0x0, 0x0, 0x5ad, V509]

================================

Block 0x5ad
[0x5ad:0x5c3]
---
Predecessors: [0xf54]
Successors: [0xf59]
---
0x5ad JUMPDEST
0x5ae SWAP2
0x5af POP
0x5b0 PUSH2 0x5c4
0x5b3 PUSH1 0x7
0x5b5 SLOAD
0x5b6 DUP4
0x5b7 PUSH2 0xf59
0x5ba SWAP1
0x5bb SWAP2
0x5bc SWAP1
0x5bd PUSH4 0xffffffff
0x5c2 AND
0x5c3 JUMP
---
0x5ad: JUMPDEST 
0x5b0: V512 = 0x5c4
0x5b3: V513 = 0x7
0x5b5: V514 = S[0x7]
0x5b7: V515 = 0xf59
0x5bd: V516 = 0xffffffff
0x5c2: V517 = AND 0xffffffff 0xf59
0x5c3: JUMP 0xf59
---
Entry stack: [V10, S6, {0x13d, 0x140}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x5c4, S0, V514]
Exit stack: [V10, S6, {0x13d, 0x140}, S4, S3, S0, S1, 0x5c4, S0, V514]

================================

Block 0x5c4
[0x5c4:0x5ef]
---
Predecessors: [0xf81]
Successors: [0xf88]
---
0x5c4 JUMPDEST
0x5c5 PUSH1 0x1
0x5c7 PUSH1 0xa0
0x5c9 PUSH1 0x2
0x5cb EXP
0x5cc SUB
0x5cd DUP6
0x5ce AND
0x5cf PUSH1 0x0
0x5d1 SWAP1
0x5d2 DUP2
0x5d3 MSTORE
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0x20
0x5d8 MSTORE
0x5d9 PUSH1 0x40
0x5db SWAP1
0x5dc SHA3
0x5dd SLOAD
0x5de SWAP1
0x5df SWAP2
0x5e0 POP
0x5e1 PUSH2 0x5f0
0x5e4 SWAP1
0x5e5 DUP3
0x5e6 PUSH4 0xffffffff
0x5eb PUSH2 0xf88
0x5ee AND
0x5ef JUMP
---
0x5c4: JUMPDEST 
0x5c5: V518 = 0x1
0x5c7: V519 = 0xa0
0x5c9: V520 = 0x2
0x5cb: V521 = EXP 0x2 0xa0
0x5cc: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ce: V523 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x5cf: V524 = 0x0
0x5d3: M[0x0] = V523
0x5d4: V525 = 0x1
0x5d6: V526 = 0x20
0x5d8: M[0x20] = 0x1
0x5d9: V527 = 0x40
0x5dc: V528 = SHA3 0x0 0x40
0x5dd: V529 = S[V528]
0x5e1: V530 = 0x5f0
0x5e6: V531 = 0xffffffff
0x5eb: V532 = 0xf88
0x5ee: V533 = AND 0xf88 0xffffffff
0x5ef: JUMP 0xf88
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S0, 0x5f0, V529, S0]
Exit stack: [V10, S6, S5, S4, S3, S2, S0, 0x5f0, V529, S0]

================================

Block 0x5f0
[0x5f0:0x627]
---
Predecessors: [0xf81]
Successors: [0xfa2]
---
0x5f0 JUMPDEST
0x5f1 PUSH1 0x1
0x5f3 PUSH1 0xa0
0x5f5 PUSH1 0x2
0x5f7 EXP
0x5f8 SUB
0x5f9 DUP1
0x5fa DUP7
0x5fb AND
0x5fc PUSH1 0x0
0x5fe SWAP1
0x5ff DUP2
0x600 MSTORE
0x601 PUSH1 0x1
0x603 PUSH1 0x20
0x605 MSTORE
0x606 PUSH1 0x40
0x608 DUP1
0x609 DUP3
0x60a SHA3
0x60b SWAP4
0x60c SWAP1
0x60d SWAP4
0x60e SSTORE
0x60f PUSH1 0x3
0x611 SLOAD
0x612 SWAP1
0x613 SWAP2
0x614 AND
0x615 DUP2
0x616 MSTORE
0x617 SHA3
0x618 SLOAD
0x619 PUSH2 0x628
0x61c SWAP1
0x61d DUP3
0x61e PUSH4 0xffffffff
0x623 PUSH2 0xfa2
0x626 AND
0x627 JUMP
---
0x5f0: JUMPDEST 
0x5f1: V534 = 0x1
0x5f3: V535 = 0xa0
0x5f5: V536 = 0x2
0x5f7: V537 = EXP 0x2 0xa0
0x5f8: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fb: V539 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x5fc: V540 = 0x0
0x600: M[0x0] = V539
0x601: V541 = 0x1
0x603: V542 = 0x20
0x605: M[0x20] = 0x1
0x606: V543 = 0x40
0x60a: V544 = SHA3 0x0 0x40
0x60e: S[V544] = S0
0x60f: V545 = 0x3
0x611: V546 = S[0x3]
0x614: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x616: M[0x0] = V547
0x617: V548 = SHA3 0x0 0x40
0x618: V549 = S[V548]
0x619: V550 = 0x628
0x61e: V551 = 0xffffffff
0x623: V552 = 0xfa2
0x626: V553 = AND 0xfa2 0xffffffff
0x627: JUMP 0xfa2
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x628, V549, S1]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, 0x628, V549, S1]

================================

Block 0x628
[0x628:0x69d]
---
Predecessors: [0xfb3]
Successors: [0x69e]
---
0x628 JUMPDEST
0x629 PUSH1 0x3
0x62b SLOAD
0x62c PUSH1 0x1
0x62e PUSH1 0xa0
0x630 PUSH1 0x2
0x632 EXP
0x633 SUB
0x634 SWAP1
0x635 DUP2
0x636 AND
0x637 PUSH1 0x0
0x639 SWAP1
0x63a DUP2
0x63b MSTORE
0x63c PUSH1 0x1
0x63e PUSH1 0x20
0x640 MSTORE
0x641 PUSH1 0x40
0x643 SWAP1
0x644 DUP2
0x645 SWAP1
0x646 SHA3
0x647 SWAP3
0x648 SWAP1
0x649 SWAP3
0x64a SSTORE
0x64b PUSH1 0x7
0x64d SLOAD
0x64e DUP7
0x64f DUP3
0x650 AND
0x651 SWAP3
0x652 CALLER
0x653 SWAP1
0x654 SWAP3
0x655 AND
0x656 SWAP2
0x657 PUSH31 0xfe0e12b43090c1fc19a34aefa5cc138a4eeafc60ab800f855c730b3fb9480e
0x677 SWAP2
0x678 DUP7
0x679 SWAP2
0x67a DUP7
0x67b SWAP2
0x67c SWAP1
0x67d MLOAD
0x67e DUP1
0x67f DUP5
0x680 DUP2
0x681 MSTORE
0x682 PUSH1 0x20
0x684 ADD
0x685 DUP4
0x686 DUP2
0x687 MSTORE
0x688 PUSH1 0x20
0x68a ADD
0x68b DUP3
0x68c DUP2
0x68d MSTORE
0x68e PUSH1 0x20
0x690 ADD
0x691 SWAP4
0x692 POP
0x693 POP
0x694 POP
0x695 POP
0x696 PUSH1 0x40
0x698 MLOAD
0x699 DUP1
0x69a SWAP2
0x69b SUB
0x69c SWAP1
0x69d LOG3
---
0x628: JUMPDEST 
0x629: V554 = 0x3
0x62b: V555 = S[0x3]
0x62c: V556 = 0x1
0x62e: V557 = 0xa0
0x630: V558 = 0x2
0x632: V559 = EXP 0x2 0xa0
0x633: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x636: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x637: V562 = 0x0
0x63b: M[0x0] = V561
0x63c: V563 = 0x1
0x63e: V564 = 0x20
0x640: M[0x20] = 0x1
0x641: V565 = 0x40
0x646: V566 = SHA3 0x0 0x40
0x64a: S[V566] = S0
0x64b: V567 = 0x7
0x64d: V568 = S[0x7]
0x650: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x652: V570 = CALLER
0x655: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x657: V572 = 0xfe0e12b43090c1fc19a34aefa5cc138a4eeafc60ab800f855c730b3fb9480e
0x67d: V573 = M[0x40]
0x681: M[V573] = S2
0x682: V574 = 0x20
0x684: V575 = ADD 0x20 V573
0x687: M[V575] = S1
0x688: V576 = 0x20
0x68a: V577 = ADD 0x20 V575
0x68d: M[V577] = V568
0x68e: V578 = 0x20
0x690: V579 = ADD 0x20 V577
0x696: V580 = 0x40
0x698: V581 = M[0x40]
0x69b: V582 = SUB V579 V581
0x69d: LOG V581 V582 0xfe0e12b43090c1fc19a34aefa5cc138a4eeafc60ab800f855c730b3fb9480e V571 V569
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [V10, S6, S5, S4, S3, S2, S1]

================================

Block 0x69e
[0x69e:0x69e]
---
Predecessors: [0x628]
Successors: [0x69f]
---
0x69e JUMPDEST
---
0x69e: JUMPDEST 
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, S3, S2, S1, S0]

================================

Block 0x69f
[0x69f:0x6a4]
---
Predecessors: [0x69e]
Successors: [0x13d, 0x140]
---
0x69f JUMPDEST
0x6a0 POP
0x6a1 POP
0x6a2 POP
0x6a3 POP
0x6a4 JUMP
---
0x69f: JUMPDEST 
0x6a4: JUMP S4
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S5]

================================

Block 0x6a5
[0x6a5:0x6f4]
---
Predecessors: [0x14d]
Successors: [0x6f5, 0x73b]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x4
0x6a8 DUP1
0x6a9 SLOAD
0x6aa PUSH1 0x1
0x6ac DUP2
0x6ad PUSH1 0x1
0x6af AND
0x6b0 ISZERO
0x6b1 PUSH2 0x100
0x6b4 MUL
0x6b5 SUB
0x6b6 AND
0x6b7 PUSH1 0x2
0x6b9 SWAP1
0x6ba DIV
0x6bb DUP1
0x6bc PUSH1 0x1f
0x6be ADD
0x6bf PUSH1 0x20
0x6c1 DUP1
0x6c2 SWAP2
0x6c3 DIV
0x6c4 MUL
0x6c5 PUSH1 0x20
0x6c7 ADD
0x6c8 PUSH1 0x40
0x6ca MLOAD
0x6cb SWAP1
0x6cc DUP2
0x6cd ADD
0x6ce PUSH1 0x40
0x6d0 MSTORE
0x6d1 DUP1
0x6d2 SWAP3
0x6d3 SWAP2
0x6d4 SWAP1
0x6d5 DUP2
0x6d6 DUP2
0x6d7 MSTORE
0x6d8 PUSH1 0x20
0x6da ADD
0x6db DUP3
0x6dc DUP1
0x6dd SLOAD
0x6de PUSH1 0x1
0x6e0 DUP2
0x6e1 PUSH1 0x1
0x6e3 AND
0x6e4 ISZERO
0x6e5 PUSH2 0x100
0x6e8 MUL
0x6e9 SUB
0x6ea AND
0x6eb PUSH1 0x2
0x6ed SWAP1
0x6ee DIV
0x6ef DUP1
0x6f0 ISZERO
0x6f1 PUSH2 0x73b
0x6f4 JUMPI
---
0x6a5: JUMPDEST 
0x6a6: V583 = 0x4
0x6a9: V584 = S[0x4]
0x6aa: V585 = 0x1
0x6ad: V586 = 0x1
0x6af: V587 = AND 0x1 V584
0x6b0: V588 = ISZERO V587
0x6b1: V589 = 0x100
0x6b4: V590 = MUL 0x100 V588
0x6b5: V591 = SUB V590 0x1
0x6b6: V592 = AND V591 V584
0x6b7: V593 = 0x2
0x6ba: V594 = DIV V592 0x2
0x6bc: V595 = 0x1f
0x6be: V596 = ADD 0x1f V594
0x6bf: V597 = 0x20
0x6c3: V598 = DIV V596 0x20
0x6c4: V599 = MUL V598 0x20
0x6c5: V600 = 0x20
0x6c7: V601 = ADD 0x20 V599
0x6c8: V602 = 0x40
0x6ca: V603 = M[0x40]
0x6cd: V604 = ADD V603 V601
0x6ce: V605 = 0x40
0x6d0: M[0x40] = V604
0x6d7: M[V603] = V594
0x6d8: V606 = 0x20
0x6da: V607 = ADD 0x20 V603
0x6dd: V608 = S[0x4]
0x6de: V609 = 0x1
0x6e1: V610 = 0x1
0x6e3: V611 = AND 0x1 V608
0x6e4: V612 = ISZERO V611
0x6e5: V613 = 0x100
0x6e8: V614 = MUL 0x100 V612
0x6e9: V615 = SUB V614 0x1
0x6ea: V616 = AND V615 V608
0x6eb: V617 = 0x2
0x6ee: V618 = DIV V616 0x2
0x6f0: V619 = ISZERO V618
0x6f1: V620 = 0x73b
0x6f4: JUMPI 0x73b V619
---
Entry stack: [V10, 0x155]
Stack pops: 0
Stack additions: [V603, 0x4, V594, V607, 0x4, V618]
Exit stack: [V10, 0x155, V603, 0x4, V594, V607, 0x4, V618]

================================

Block 0x6f5
[0x6f5:0x6fc]
---
Predecessors: [0x6a5]
Successors: [0x6fd, 0x710]
---
0x6f5 DUP1
0x6f6 PUSH1 0x1f
0x6f8 LT
0x6f9 PUSH2 0x710
0x6fc JUMPI
---
0x6f6: V621 = 0x1f
0x6f8: V622 = LT 0x1f V618
0x6f9: V623 = 0x710
0x6fc: JUMPI 0x710 V622
---
Entry stack: [V10, 0x155, V603, 0x4, V594, V607, 0x4, V618]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x155, V603, 0x4, V594, V607, 0x4, V618]

================================

Block 0x6fd
[0x6fd:0x70f]
---
Predecessors: [0x6f5]
Successors: [0x73b]
---
0x6fd PUSH2 0x100
0x700 DUP1
0x701 DUP4
0x702 SLOAD
0x703 DIV
0x704 MUL
0x705 DUP4
0x706 MSTORE
0x707 SWAP2
0x708 PUSH1 0x20
0x70a ADD
0x70b SWAP2
0x70c PUSH2 0x73b
0x70f JUMP
---
0x6fd: V624 = 0x100
0x702: V625 = S[0x4]
0x703: V626 = DIV V625 0x100
0x704: V627 = MUL V626 0x100
0x706: M[V607] = V627
0x708: V628 = 0x20
0x70a: V629 = ADD 0x20 V607
0x70c: V630 = 0x73b
0x70f: JUMP 0x73b
---
Entry stack: [V10, 0x155, V603, 0x4, V594, V607, 0x4, V618]
Stack pops: 3
Stack additions: [V629, S1, S0]
Exit stack: [V10, 0x155, V603, 0x4, V594, V629, 0x4, V618]

================================

Block 0x710
[0x710:0x71d]
---
Predecessors: [0x6f5, 0xadd]
Successors: [0x71e]
---
0x710 JUMPDEST
0x711 DUP3
0x712 ADD
0x713 SWAP2
0x714 SWAP1
0x715 PUSH1 0x0
0x717 MSTORE
0x718 PUSH1 0x20
0x71a PUSH1 0x0
0x71c SHA3
0x71d SWAP1
---
0x710: JUMPDEST 
0x712: V631 = ADD S2 S0
0x715: V632 = 0x0
0x717: M[0x0] = {0x4, 0x5}
0x718: V633 = 0x20
0x71a: V634 = 0x0
0x71c: V635 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x155, S5, {0x4, 0x5}, S3, S2, {0x4, 0x5}, S0]
Stack pops: 3
Stack additions: [V631, V635, S2]
Exit stack: [V10, 0x155, S5, {0x4, 0x5}, S3, V631, V635, S2]

================================

Block 0x71e
[0x71e:0x731]
---
Predecessors: [0x710, 0x71e, 0xb06]
Successors: [0x71e, 0x732]
---
0x71e JUMPDEST
0x71f DUP2
0x720 SLOAD
0x721 DUP2
0x722 MSTORE
0x723 SWAP1
0x724 PUSH1 0x1
0x726 ADD
0x727 SWAP1
0x728 PUSH1 0x20
0x72a ADD
0x72b DUP1
0x72c DUP4
0x72d GT
0x72e PUSH2 0x71e
0x731 JUMPI
---
0x71e: JUMPDEST 
0x720: V636 = S[S1]
0x722: M[S0] = V636
0x724: V637 = 0x1
0x726: V638 = ADD 0x1 S1
0x728: V639 = 0x20
0x72a: V640 = ADD 0x20 S0
0x72d: V641 = GT S2 V640
0x72e: V642 = 0x71e
0x731: JUMPI 0x71e V641
---
Entry stack: [V10, 0x155, S5, {0x4, 0x5}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V638, V640]
Exit stack: [V10, 0x155, S5, {0x4, 0x5}, S3, S2, V638, V640]

================================

Block 0x732
[0x732:0x73a]
---
Predecessors: [0x71e]
Successors: [0x73b]
---
0x732 DUP3
0x733 SWAP1
0x734 SUB
0x735 PUSH1 0x1f
0x737 AND
0x738 DUP3
0x739 ADD
0x73a SWAP2
---
0x734: V643 = SUB V640 S2
0x735: V644 = 0x1f
0x737: V645 = AND 0x1f V643
0x739: V646 = ADD S2 V645
---
Entry stack: [V10, 0x155, S5, {0x4, 0x5}, S3, S2, V638, V640]
Stack pops: 3
Stack additions: [V646, S1, S2]
Exit stack: [V10, 0x155, S5, {0x4, 0x5}, S3, V646, V638, S2]

================================

Block 0x73b
[0x73b:0x742]
---
Predecessors: [0x6a5, 0x6fd, 0x732, 0xa8d, 0xae5]
Successors: [0x155]
---
0x73b JUMPDEST
0x73c POP
0x73d POP
0x73e POP
0x73f POP
0x740 POP
0x741 DUP2
0x742 JUMP
---
0x73b: JUMPDEST 
0x742: JUMP 0x155
---
Entry stack: [V10, 0x155, S5, {0x4, 0x5}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x155, S5]

================================

Block 0x743
[0x743:0x74c]
---
Predecessors: [0x1d8]
Successors: [0x74d, 0x775]
---
0x743 JUMPDEST
0x744 PUSH1 0x0
0x746 DUP2
0x747 ISZERO
0x748 DUP1
0x749 PUSH2 0x775
0x74c JUMPI
---
0x743: JUMPDEST 
0x744: V647 = 0x0
0x747: V648 = ISZERO V144
0x749: V649 = 0x775
0x74c: JUMPI 0x775 V648
---
Entry stack: [V10, 0x1ef, V142, V144]
Stack pops: 1
Stack additions: [S0, 0x0, V648]
Exit stack: [V10, 0x1ef, V142, V144, 0x0, V648]

================================

Block 0x74d
[0x74d:0x774]
---
Predecessors: [0x743]
Successors: [0x775]
---
0x74d POP
0x74e PUSH1 0x1
0x750 PUSH1 0xa0
0x752 PUSH1 0x2
0x754 EXP
0x755 SUB
0x756 CALLER
0x757 DUP2
0x758 AND
0x759 PUSH1 0x0
0x75b SWAP1
0x75c DUP2
0x75d MSTORE
0x75e PUSH1 0x2
0x760 PUSH1 0x20
0x762 SWAP1
0x763 DUP2
0x764 MSTORE
0x765 PUSH1 0x40
0x767 DUP1
0x768 DUP4
0x769 SHA3
0x76a SWAP4
0x76b DUP8
0x76c AND
0x76d DUP4
0x76e MSTORE
0x76f SWAP3
0x770 SWAP1
0x771 MSTORE
0x772 SHA3
0x773 SLOAD
0x774 ISZERO
---
0x74e: V650 = 0x1
0x750: V651 = 0xa0
0x752: V652 = 0x2
0x754: V653 = EXP 0x2 0xa0
0x755: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x756: V655 = CALLER
0x758: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x759: V657 = 0x0
0x75d: M[0x0] = V656
0x75e: V658 = 0x2
0x760: V659 = 0x20
0x764: M[0x20] = 0x2
0x765: V660 = 0x40
0x769: V661 = SHA3 0x0 0x40
0x76c: V662 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x76e: M[0x0] = V662
0x771: M[0x20] = V661
0x772: V663 = SHA3 0x0 0x40
0x773: V664 = S[V663]
0x774: V665 = ISZERO V664
---
Entry stack: [V10, 0x1ef, V142, V144, 0x0, V648]
Stack pops: 4
Stack additions: [S3, S2, S1, V665]
Exit stack: [V10, 0x1ef, V142, V144, 0x0, V665]

================================

Block 0x775
[0x775:0x77b]
---
Predecessors: [0x743, 0x74d]
Successors: [0x77c, 0x780]
---
0x775 JUMPDEST
0x776 ISZERO
0x777 ISZERO
0x778 PUSH2 0x780
0x77b JUMPI
---
0x775: JUMPDEST 
0x776: V666 = ISZERO S0
0x777: V667 = ISZERO V666
0x778: V668 = 0x780
0x77b: JUMPI 0x780 V667
---
Entry stack: [V10, 0x1ef, V142, V144, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1ef, V142, V144, 0x0]

================================

Block 0x77c
[0x77c:0x77f]
---
Predecessors: [0x775]
Successors: []
---
0x77c PUSH1 0x0
0x77e DUP1
0x77f REVERT
---
0x77c: V669 = 0x0
0x77f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ef, V142, V144, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ef, V142, V144, 0x0]

================================

Block 0x780
[0x780:0x7e3]
---
Predecessors: [0x775]
Successors: [0x7e4]
---
0x780 JUMPDEST
0x781 PUSH1 0x1
0x783 PUSH1 0xa0
0x785 PUSH1 0x2
0x787 EXP
0x788 SUB
0x789 CALLER
0x78a DUP2
0x78b AND
0x78c PUSH1 0x0
0x78e DUP2
0x78f DUP2
0x790 MSTORE
0x791 PUSH1 0x2
0x793 PUSH1 0x20
0x795 SWAP1
0x796 DUP2
0x797 MSTORE
0x798 PUSH1 0x40
0x79a DUP1
0x79b DUP4
0x79c SHA3
0x79d SWAP5
0x79e DUP9
0x79f AND
0x7a0 DUP1
0x7a1 DUP5
0x7a2 MSTORE
0x7a3 SWAP5
0x7a4 SWAP1
0x7a5 SWAP2
0x7a6 MSTORE
0x7a7 SWAP1
0x7a8 DUP2
0x7a9 SWAP1
0x7aa SHA3
0x7ab DUP6
0x7ac SWAP1
0x7ad SSTORE
0x7ae PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x7cf SWAP1
0x7d0 DUP6
0x7d1 SWAP1
0x7d2 MLOAD
0x7d3 SWAP1
0x7d4 DUP2
0x7d5 MSTORE
0x7d6 PUSH1 0x20
0x7d8 ADD
0x7d9 PUSH1 0x40
0x7db MLOAD
0x7dc DUP1
0x7dd SWAP2
0x7de SUB
0x7df SWAP1
0x7e0 LOG3
0x7e1 POP
0x7e2 PUSH1 0x1
---
0x780: JUMPDEST 
0x781: V670 = 0x1
0x783: V671 = 0xa0
0x785: V672 = 0x2
0x787: V673 = EXP 0x2 0xa0
0x788: V674 = SUB 0x10000000000000000000000000000000000000000 0x1
0x789: V675 = CALLER
0x78b: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0x78c: V677 = 0x0
0x790: M[0x0] = V676
0x791: V678 = 0x2
0x793: V679 = 0x20
0x797: M[0x20] = 0x2
0x798: V680 = 0x40
0x79c: V681 = SHA3 0x0 0x40
0x79f: V682 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x7a2: M[0x0] = V682
0x7a6: M[0x20] = V681
0x7aa: V683 = SHA3 0x0 0x40
0x7ad: S[V683] = V144
0x7ae: V684 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x7d2: V685 = M[0x40]
0x7d5: M[V685] = V144
0x7d6: V686 = 0x20
0x7d8: V687 = ADD 0x20 V685
0x7d9: V688 = 0x40
0x7db: V689 = M[0x40]
0x7de: V690 = SUB V687 V689
0x7e0: LOG V689 V690 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V676 V682
0x7e2: V691 = 0x1
---
Entry stack: [V10, 0x1ef, V142, V144, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x1ef, V142, V144, 0x1]

================================

Block 0x7e4
[0x7e4:0x7e9]
---
Predecessors: [0x780]
Successors: [0x1ef]
---
0x7e4 JUMPDEST
0x7e5 SWAP3
0x7e6 SWAP2
0x7e7 POP
0x7e8 POP
0x7e9 JUMP
---
0x7e4: JUMPDEST 
0x7e9: JUMP 0x1ef
---
Entry stack: [V10, 0x1ef, V142, V144, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x7ea
[0x7ea:0x7f2]
---
Predecessors: [0x20e]
Successors: [0x1ef]
---
0x7ea JUMPDEST
0x7eb PUSH1 0x9
0x7ed SLOAD
0x7ee PUSH1 0xff
0x7f0 AND
0x7f1 DUP2
0x7f2 JUMP
---
0x7ea: JUMPDEST 
0x7eb: V692 = 0x9
0x7ed: V693 = S[0x9]
0x7ee: V694 = 0xff
0x7f0: V695 = AND 0xff V693
0x7f2: JUMP 0x1ef
---
Entry stack: [V10, 0x1ef]
Stack pops: 1
Stack additions: [S0, V695]
Exit stack: [V10, 0x1ef, V695]

================================

Block 0x7f3
[0x7f3:0x7f8]
---
Predecessors: [0x235]
Successors: [0x23d]
---
0x7f3 JUMPDEST
0x7f4 PUSH1 0x0
0x7f6 SLOAD
0x7f7 DUP2
0x7f8 JUMP
---
0x7f3: JUMPDEST 
0x7f4: V696 = 0x0
0x7f6: V697 = S[0x0]
0x7f8: JUMP 0x23d
---
Entry stack: [V10, 0x23d]
Stack pops: 1
Stack additions: [S0, V697]
Exit stack: [V10, 0x23d, V697]

================================

Block 0x7f9
[0x7f9:0x83f]
---
Predecessors: [0x25a]
Successors: [0xf88]
---
0x7f9 JUMPDEST
0x7fa PUSH1 0x1
0x7fc PUSH1 0xa0
0x7fe PUSH1 0x2
0x800 EXP
0x801 SUB
0x802 DUP1
0x803 DUP5
0x804 AND
0x805 PUSH1 0x0
0x807 SWAP1
0x808 DUP2
0x809 MSTORE
0x80a PUSH1 0x2
0x80c PUSH1 0x20
0x80e SWAP1
0x80f DUP2
0x810 MSTORE
0x811 PUSH1 0x40
0x813 DUP1
0x814 DUP4
0x815 SHA3
0x816 CALLER
0x817 DUP6
0x818 AND
0x819 DUP5
0x81a MSTORE
0x81b DUP3
0x81c MSTORE
0x81d DUP1
0x81e DUP4
0x81f SHA3
0x820 SLOAD
0x821 SWAP4
0x822 DUP7
0x823 AND
0x824 DUP4
0x825 MSTORE
0x826 PUSH1 0x1
0x828 SWAP1
0x829 SWAP2
0x82a MSTORE
0x82b DUP2
0x82c SHA3
0x82d SLOAD
0x82e SWAP1
0x82f SWAP2
0x830 SWAP1
0x831 PUSH2 0x840
0x834 SWAP1
0x835 DUP5
0x836 PUSH4 0xffffffff
0x83b PUSH2 0xf88
0x83e AND
0x83f JUMP
---
0x7f9: JUMPDEST 
0x7fa: V698 = 0x1
0x7fc: V699 = 0xa0
0x7fe: V700 = 0x2
0x800: V701 = EXP 0x2 0xa0
0x801: V702 = SUB 0x10000000000000000000000000000000000000000 0x1
0x804: V703 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x805: V704 = 0x0
0x809: M[0x0] = V703
0x80a: V705 = 0x2
0x80c: V706 = 0x20
0x810: M[0x20] = 0x2
0x811: V707 = 0x40
0x815: V708 = SHA3 0x0 0x40
0x816: V709 = CALLER
0x818: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0x81a: M[0x0] = V710
0x81c: M[0x20] = V708
0x81f: V711 = SHA3 0x0 0x40
0x820: V712 = S[V711]
0x823: V713 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x825: M[0x0] = V713
0x826: V714 = 0x1
0x82a: M[0x20] = 0x1
0x82c: V715 = SHA3 0x0 0x40
0x82d: V716 = S[V715]
0x831: V717 = 0x840
0x836: V718 = 0xffffffff
0x83b: V719 = 0xf88
0x83e: V720 = AND 0xf88 0xffffffff
0x83f: JUMP 0xf88
---
Entry stack: [V10, 0x1ef, V195, V198, V200]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V712, 0x840, V716, S0]
Exit stack: [V10, 0x1ef, V195, V198, V200, 0x0, V712, 0x840, V716, V200]

================================

Block 0x840
[0x840:0x874]
---
Predecessors: [0xf81]
Successors: [0xfa2]
---
0x840 JUMPDEST
0x841 PUSH1 0x1
0x843 PUSH1 0xa0
0x845 PUSH1 0x2
0x847 EXP
0x848 SUB
0x849 DUP1
0x84a DUP7
0x84b AND
0x84c PUSH1 0x0
0x84e SWAP1
0x84f DUP2
0x850 MSTORE
0x851 PUSH1 0x1
0x853 PUSH1 0x20
0x855 MSTORE
0x856 PUSH1 0x40
0x858 DUP1
0x859 DUP3
0x85a SHA3
0x85b SWAP4
0x85c SWAP1
0x85d SWAP4
0x85e SSTORE
0x85f SWAP1
0x860 DUP8
0x861 AND
0x862 DUP2
0x863 MSTORE
0x864 SHA3
0x865 SLOAD
0x866 PUSH2 0x875
0x869 SWAP1
0x86a DUP5
0x86b PUSH4 0xffffffff
0x870 PUSH2 0xfa2
0x873 AND
0x874 JUMP
---
0x840: JUMPDEST 
0x841: V721 = 0x1
0x843: V722 = 0xa0
0x845: V723 = 0x2
0x847: V724 = EXP 0x2 0xa0
0x848: V725 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84b: V726 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x84c: V727 = 0x0
0x850: M[0x0] = V726
0x851: V728 = 0x1
0x853: V729 = 0x20
0x855: M[0x20] = 0x1
0x856: V730 = 0x40
0x85a: V731 = SHA3 0x0 0x40
0x85e: S[V731] = S0
0x861: V732 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x863: M[0x0] = V732
0x864: V733 = SHA3 0x0 0x40
0x865: V734 = S[V733]
0x866: V735 = 0x875
0x86b: V736 = 0xffffffff
0x870: V737 = 0xfa2
0x873: V738 = AND 0xfa2 0xffffffff
0x874: JUMP 0xfa2
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x875, V734, S3]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, 0x875, V734, S3]

================================

Block 0x875
[0x875:0x89d]
---
Predecessors: [0xfb3]
Successors: [0xfa2]
---
0x875 JUMPDEST
0x876 PUSH1 0x1
0x878 PUSH1 0xa0
0x87a PUSH1 0x2
0x87c EXP
0x87d SUB
0x87e DUP7
0x87f AND
0x880 PUSH1 0x0
0x882 SWAP1
0x883 DUP2
0x884 MSTORE
0x885 PUSH1 0x1
0x887 PUSH1 0x20
0x889 MSTORE
0x88a PUSH1 0x40
0x88c SWAP1
0x88d SHA3
0x88e SSTORE
0x88f PUSH2 0x89e
0x892 DUP2
0x893 DUP5
0x894 PUSH4 0xffffffff
0x899 PUSH2 0xfa2
0x89c AND
0x89d JUMP
---
0x875: JUMPDEST 
0x876: V739 = 0x1
0x878: V740 = 0xa0
0x87a: V741 = 0x2
0x87c: V742 = EXP 0x2 0xa0
0x87d: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87f: V744 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x880: V745 = 0x0
0x884: M[0x0] = V744
0x885: V746 = 0x1
0x887: V747 = 0x20
0x889: M[0x20] = 0x1
0x88a: V748 = 0x40
0x88d: V749 = SHA3 0x0 0x40
0x88e: S[V749] = V1361
0x88f: V750 = 0x89e
0x894: V751 = 0xffffffff
0x899: V752 = 0xfa2
0x89c: V753 = AND 0xfa2 0xffffffff
0x89d: JUMP 0xfa2
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, V1361]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x89e, S1, S3]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, 0x89e, S1, S3]

================================

Block 0x89e
[0x89e:0x905]
---
Predecessors: [0xfb3]
Successors: [0x906]
---
0x89e JUMPDEST
0x89f PUSH1 0x1
0x8a1 PUSH1 0xa0
0x8a3 PUSH1 0x2
0x8a5 EXP
0x8a6 SUB
0x8a7 DUP1
0x8a8 DUP8
0x8a9 AND
0x8aa PUSH1 0x0
0x8ac DUP2
0x8ad DUP2
0x8ae MSTORE
0x8af PUSH1 0x2
0x8b1 PUSH1 0x20
0x8b3 SWAP1
0x8b4 DUP2
0x8b5 MSTORE
0x8b6 PUSH1 0x40
0x8b8 DUP1
0x8b9 DUP4
0x8ba SHA3
0x8bb CALLER
0x8bc DUP7
0x8bd AND
0x8be DUP5
0x8bf MSTORE
0x8c0 SWAP1
0x8c1 SWAP2
0x8c2 MSTORE
0x8c3 SWAP1
0x8c4 DUP2
0x8c5 SWAP1
0x8c6 SHA3
0x8c7 SWAP4
0x8c8 SWAP1
0x8c9 SWAP4
0x8ca SSTORE
0x8cb SWAP1
0x8cc DUP7
0x8cd AND
0x8ce SWAP2
0x8cf PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8f0 SWAP1
0x8f1 DUP7
0x8f2 SWAP1
0x8f3 MLOAD
0x8f4 SWAP1
0x8f5 DUP2
0x8f6 MSTORE
0x8f7 PUSH1 0x20
0x8f9 ADD
0x8fa PUSH1 0x40
0x8fc MLOAD
0x8fd DUP1
0x8fe SWAP2
0x8ff SUB
0x900 SWAP1
0x901 LOG3
0x902 PUSH1 0x1
0x904 SWAP2
0x905 POP
---
0x89e: JUMPDEST 
0x89f: V754 = 0x1
0x8a1: V755 = 0xa0
0x8a3: V756 = 0x2
0x8a5: V757 = EXP 0x2 0xa0
0x8a6: V758 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a9: V759 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x8aa: V760 = 0x0
0x8ae: M[0x0] = V759
0x8af: V761 = 0x2
0x8b1: V762 = 0x20
0x8b5: M[0x20] = 0x2
0x8b6: V763 = 0x40
0x8ba: V764 = SHA3 0x0 0x40
0x8bb: V765 = CALLER
0x8bd: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V765
0x8bf: M[0x0] = V766
0x8c2: M[0x20] = V764
0x8c6: V767 = SHA3 0x0 0x40
0x8ca: S[V767] = V1361
0x8cd: V768 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x8cf: V769 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8f3: V770 = M[0x40]
0x8f6: M[V770] = S3
0x8f7: V771 = 0x20
0x8f9: V772 = ADD 0x20 V770
0x8fa: V773 = 0x40
0x8fc: V774 = M[0x40]
0x8ff: V775 = SUB V772 V774
0x901: LOG V774 V775 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V759 V768
0x902: V776 = 0x1
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, V1361]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x1, S1]
Exit stack: [V10, S6, S5, S4, S3, 0x1, S1]

================================

Block 0x906
[0x906:0x90d]
---
Predecessors: [0x89e]
Successors: [0x140, 0x1ef, 0xc42]
---
0x906 JUMPDEST
0x907 POP
0x908 SWAP4
0x909 SWAP3
0x90a POP
0x90b POP
0x90c POP
0x90d JUMP
---
0x906: JUMPDEST 
0x90d: JUMP S5
---
Entry stack: [V10, S5, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V10, 0x1]

================================

Block 0x90e
[0x90e:0x924]
---
Predecessors: [0x296]
Successors: [0x925, 0x929]
---
0x90e JUMPDEST
0x90f PUSH1 0x3
0x911 SLOAD
0x912 CALLER
0x913 PUSH1 0x1
0x915 PUSH1 0xa0
0x917 PUSH1 0x2
0x919 EXP
0x91a SUB
0x91b SWAP1
0x91c DUP2
0x91d AND
0x91e SWAP2
0x91f AND
0x920 EQ
0x921 PUSH2 0x929
0x924 JUMPI
---
0x90e: JUMPDEST 
0x90f: V777 = 0x3
0x911: V778 = S[0x3]
0x912: V779 = CALLER
0x913: V780 = 0x1
0x915: V781 = 0xa0
0x917: V782 = 0x2
0x919: V783 = EXP 0x2 0xa0
0x91a: V784 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91d: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V779
0x91f: V786 = AND V778 0xffffffffffffffffffffffffffffffffffffffff
0x920: V787 = EQ V786 V785
0x921: V788 = 0x929
0x924: JUMPI 0x929 V787
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x925
[0x925:0x928]
---
Predecessors: [0x90e]
Successors: []
---
0x925 PUSH1 0x0
0x927 DUP1
0x928 REVERT
---
0x925: V789 = 0x0
0x928: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x929
[0x929:0x93b]
---
Predecessors: [0x90e]
Successors: [0x93c]
---
0x929 JUMPDEST
0x92a PUSH1 0x9
0x92c DUP1
0x92d SLOAD
0x92e PUSH1 0xff
0x930 NOT
0x931 DUP2
0x932 AND
0x933 PUSH1 0xff
0x935 SWAP1
0x936 SWAP2
0x937 AND
0x938 ISZERO
0x939 OR
0x93a SWAP1
0x93b SSTORE
---
0x929: JUMPDEST 
0x92a: V790 = 0x9
0x92d: V791 = S[0x9]
0x92e: V792 = 0xff
0x930: V793 = NOT 0xff
0x932: V794 = AND V791 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x933: V795 = 0xff
0x937: V796 = AND V791 0xff
0x938: V797 = ISZERO V796
0x939: V798 = OR V797 V794
0x93b: S[0x9] = V798
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x93c
[0x93c:0x93c]
---
Predecessors: [0x929]
Successors: [0x93d]
---
0x93c JUMPDEST
---
0x93c: JUMPDEST 
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x93d
[0x93d:0x93e]
---
Predecessors: [0x93c]
Successors: [0x140]
---
0x93d JUMPDEST
0x93e JUMP
---
0x93d: JUMPDEST 
0x93e: JUMP 0x140
---
Entry stack: [V10, 0x140]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x93f
[0x93f:0x944]
---
Predecessors: [0x2ab]
Successors: [0x23d]
---
0x93f JUMPDEST
0x940 PUSH1 0x6
0x942 SLOAD
0x943 DUP2
0x944 JUMP
---
0x93f: JUMPDEST 
0x940: V799 = 0x6
0x942: V800 = S[0x6]
0x944: JUMP 0x23d
---
Entry stack: [V10, 0x23d]
Stack pops: 1
Stack additions: [S0, V800]
Exit stack: [V10, 0x23d, V800]

================================

Block 0x945
[0x945:0x952]
---
Predecessors: [0x2d0]
Successors: [0x1ef]
---
0x945 JUMPDEST
0x946 PUSH1 0x9
0x948 SLOAD
0x949 PUSH2 0x100
0x94c SWAP1
0x94d DIV
0x94e PUSH1 0xff
0x950 AND
0x951 DUP2
0x952 JUMP
---
0x945: JUMPDEST 
0x946: V801 = 0x9
0x948: V802 = S[0x9]
0x949: V803 = 0x100
0x94d: V804 = DIV V802 0x100
0x94e: V805 = 0xff
0x950: V806 = AND 0xff V804
0x952: JUMP 0x1ef
---
Entry stack: [V10, 0x1ef]
Stack pops: 1
Stack additions: [S0, V806]
Exit stack: [V10, 0x1ef, V806]

================================

Block 0x953
[0x953:0x969]
---
Predecessors: [0x2f7]
Successors: [0x96a, 0x96e]
---
0x953 JUMPDEST
0x954 PUSH1 0x3
0x956 SLOAD
0x957 CALLER
0x958 PUSH1 0x1
0x95a PUSH1 0xa0
0x95c PUSH1 0x2
0x95e EXP
0x95f SUB
0x960 SWAP1
0x961 DUP2
0x962 AND
0x963 SWAP2
0x964 AND
0x965 EQ
0x966 PUSH2 0x96e
0x969 JUMPI
---
0x953: JUMPDEST 
0x954: V807 = 0x3
0x956: V808 = S[0x3]
0x957: V809 = CALLER
0x958: V810 = 0x1
0x95a: V811 = 0xa0
0x95c: V812 = 0x2
0x95e: V813 = EXP 0x2 0xa0
0x95f: V814 = SUB 0x10000000000000000000000000000000000000000 0x1
0x962: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff V809
0x964: V816 = AND V808 0xffffffffffffffffffffffffffffffffffffffff
0x965: V817 = EQ V816 V815
0x966: V818 = 0x96e
0x969: JUMPI 0x96e V817
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x96a
[0x96a:0x96d]
---
Predecessors: [0x953]
Successors: []
---
0x96a PUSH1 0x0
0x96c DUP1
0x96d REVERT
---
0x96a: V819 = 0x0
0x96d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x96e
[0x96e:0x989]
---
Predecessors: [0x953]
Successors: [0x98a]
---
0x96e JUMPDEST
0x96f PUSH1 0x9
0x971 DUP1
0x972 SLOAD
0x973 PUSH2 0xff00
0x976 NOT
0x977 DUP2
0x978 AND
0x979 PUSH2 0x100
0x97c SWAP2
0x97d DUP3
0x97e SWAP1
0x97f DIV
0x980 PUSH1 0xff
0x982 AND
0x983 ISZERO
0x984 SWAP1
0x985 SWAP2
0x986 MUL
0x987 OR
0x988 SWAP1
0x989 SSTORE
---
0x96e: JUMPDEST 
0x96f: V820 = 0x9
0x972: V821 = S[0x9]
0x973: V822 = 0xff00
0x976: V823 = NOT 0xff00
0x978: V824 = AND V821 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x979: V825 = 0x100
0x97f: V826 = DIV V821 0x100
0x980: V827 = 0xff
0x982: V828 = AND 0xff V826
0x983: V829 = ISZERO V828
0x986: V830 = MUL 0x100 V829
0x987: V831 = OR V830 V824
0x989: S[0x9] = V831
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x98a
[0x98a:0x98a]
---
Predecessors: [0x96e]
Successors: [0x98b]
---
0x98a JUMPDEST
---
0x98a: JUMPDEST 
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x98b
[0x98b:0x98c]
---
Predecessors: [0x98a]
Successors: [0x140]
---
0x98b JUMPDEST
0x98c JUMP
---
0x98b: JUMPDEST 
0x98c: JUMP 0x140
---
Entry stack: [V10, 0x140]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x98d
[0x98d:0x992]
---
Predecessors: [0x30c]
Successors: [0x23d]
---
0x98d JUMPDEST
0x98e PUSH1 0x8
0x990 SLOAD
0x991 DUP2
0x992 JUMP
---
0x98d: JUMPDEST 
0x98e: V832 = 0x8
0x990: V833 = S[0x8]
0x992: JUMP 0x23d
---
Entry stack: [V10, 0x23d]
Stack pops: 1
Stack additions: [S0, V833]
Exit stack: [V10, 0x23d, V833]

================================

Block 0x993
[0x993:0x9ac]
---
Predecessors: [0x331]
Successors: [0x9ad]
---
0x993 JUMPDEST
0x994 PUSH1 0x1
0x996 PUSH1 0xa0
0x998 PUSH1 0x2
0x99a EXP
0x99b SUB
0x99c DUP2
0x99d AND
0x99e PUSH1 0x0
0x9a0 SWAP1
0x9a1 DUP2
0x9a2 MSTORE
0x9a3 PUSH1 0x1
0x9a5 PUSH1 0x20
0x9a7 MSTORE
0x9a8 PUSH1 0x40
0x9aa SWAP1
0x9ab SHA3
0x9ac SLOAD
---
0x993: JUMPDEST 
0x994: V834 = 0x1
0x996: V835 = 0xa0
0x998: V836 = 0x2
0x99a: V837 = EXP 0x2 0xa0
0x99b: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99d: V839 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x99e: V840 = 0x0
0x9a2: M[0x0] = V839
0x9a3: V841 = 0x1
0x9a5: V842 = 0x20
0x9a7: M[0x20] = 0x1
0x9a8: V843 = 0x40
0x9ab: V844 = SHA3 0x0 0x40
0x9ac: V845 = S[V844]
---
Entry stack: [V10, 0x23d, V276]
Stack pops: 1
Stack additions: [S0, V845]
Exit stack: [V10, 0x23d, V276, V845]

================================

Block 0x9ad
[0x9ad:0x9b1]
---
Predecessors: [0x993]
Successors: [0x23d]
---
0x9ad JUMPDEST
0x9ae SWAP2
0x9af SWAP1
0x9b0 POP
0x9b1 JUMP
---
0x9ad: JUMPDEST 
0x9b1: JUMP 0x23d
---
Entry stack: [V10, 0x23d, V276, V845]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V845]

================================

Block 0x9b2
[0x9b2:0x9c8]
---
Predecessors: [0x362]
Successors: [0x9c9, 0x9cd]
---
0x9b2 JUMPDEST
0x9b3 PUSH1 0x3
0x9b5 SLOAD
0x9b6 CALLER
0x9b7 PUSH1 0x1
0x9b9 PUSH1 0xa0
0x9bb PUSH1 0x2
0x9bd EXP
0x9be SUB
0x9bf SWAP1
0x9c0 DUP2
0x9c1 AND
0x9c2 SWAP2
0x9c3 AND
0x9c4 EQ
0x9c5 PUSH2 0x9cd
0x9c8 JUMPI
---
0x9b2: JUMPDEST 
0x9b3: V846 = 0x3
0x9b5: V847 = S[0x3]
0x9b6: V848 = CALLER
0x9b7: V849 = 0x1
0x9b9: V850 = 0xa0
0x9bb: V851 = 0x2
0x9bd: V852 = EXP 0x2 0xa0
0x9be: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c1: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0x9c3: V855 = AND V847 0xffffffffffffffffffffffffffffffffffffffff
0x9c4: V856 = EQ V855 V854
0x9c5: V857 = 0x9cd
0x9c8: JUMPI 0x9cd V856
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x9c9
[0x9c9:0x9cc]
---
Predecessors: [0x9b2]
Successors: []
---
0x9c9 PUSH1 0x0
0x9cb DUP1
0x9cc REVERT
---
0x9c9: V858 = 0x0
0x9cc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0x9cd
[0x9cd:0xa01]
---
Predecessors: [0x9b2]
Successors: [0x13d, 0xa02]
---
0x9cd JUMPDEST
0x9ce PUSH1 0x3
0x9d0 SLOAD
0x9d1 PUSH1 0x1
0x9d3 PUSH1 0xa0
0x9d5 PUSH1 0x2
0x9d7 EXP
0x9d8 SUB
0x9d9 SWAP1
0x9da DUP2
0x9db AND
0x9dc SWAP1
0x9dd ADDRESS
0x9de AND
0x9df BALANCE
0x9e0 DUP1
0x9e1 ISZERO
0x9e2 PUSH2 0x8fc
0x9e5 MUL
0x9e6 SWAP1
0x9e7 PUSH1 0x40
0x9e9 MLOAD
0x9ea PUSH1 0x0
0x9ec PUSH1 0x40
0x9ee MLOAD
0x9ef DUP1
0x9f0 DUP4
0x9f1 SUB
0x9f2 DUP2
0x9f3 DUP6
0x9f4 DUP9
0x9f5 DUP9
0x9f6 CALL
0x9f7 SWAP4
0x9f8 POP
0x9f9 POP
0x9fa POP
0x9fb POP
0x9fc ISZERO
0x9fd ISZERO
0x9fe PUSH2 0x13d
0xa01 JUMPI
---
0x9cd: JUMPDEST 
0x9ce: V859 = 0x3
0x9d0: V860 = S[0x3]
0x9d1: V861 = 0x1
0x9d3: V862 = 0xa0
0x9d5: V863 = 0x2
0x9d7: V864 = EXP 0x2 0xa0
0x9d8: V865 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9db: V866 = AND 0xffffffffffffffffffffffffffffffffffffffff V860
0x9dd: V867 = ADDRESS
0x9de: V868 = AND V867 0xffffffffffffffffffffffffffffffffffffffff
0x9df: V869 = BALANCE V868
0x9e1: V870 = ISZERO V869
0x9e2: V871 = 0x8fc
0x9e5: V872 = MUL 0x8fc V870
0x9e7: V873 = 0x40
0x9e9: V874 = M[0x40]
0x9ea: V875 = 0x0
0x9ec: V876 = 0x40
0x9ee: V877 = M[0x40]
0x9f1: V878 = SUB V874 V877
0x9f6: V879 = CALL V872 V866 V869 V877 V878 V877 0x0
0x9fc: V880 = ISZERO V879
0x9fd: V881 = ISZERO V880
0x9fe: V882 = 0x13d
0xa01: JUMPI 0x13d V881
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0xa02
[0xa02:0xa05]
---
Predecessors: [0x9cd]
Successors: []
---
0xa02 PUSH1 0x0
0xa04 DUP1
0xa05 REVERT
---
0xa02: V883 = 0x0
0xa05: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0xa06
[0xa06:0xa06]
---
Predecessors: []
Successors: [0xa07]
---
0xa06 JUMPDEST
---
0xa06: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa07
[0xa07:0xa07]
---
Predecessors: [0xa06]
Successors: [0xa08]
---
0xa07 JUMPDEST
---
0xa07: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa08
[0xa08:0xa09]
---
Predecessors: [0xa07]
Successors: []
Has unresolved jump.
---
0xa08 JUMPDEST
0xa09 JUMP
---
0xa08: JUMPDEST 
0xa09: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa0a
[0xa0a:0xa23]
---
Predecessors: [0x377]
Successors: [0xa24, 0xa28]
---
0xa0a JUMPDEST
0xa0b PUSH1 0x3
0xa0d SLOAD
0xa0e PUSH1 0x0
0xa10 SWAP1
0xa11 CALLER
0xa12 PUSH1 0x1
0xa14 PUSH1 0xa0
0xa16 PUSH1 0x2
0xa18 EXP
0xa19 SUB
0xa1a SWAP1
0xa1b DUP2
0xa1c AND
0xa1d SWAP2
0xa1e AND
0xa1f EQ
0xa20 PUSH2 0xa28
0xa23 JUMPI
---
0xa0a: JUMPDEST 
0xa0b: V884 = 0x3
0xa0d: V885 = S[0x3]
0xa0e: V886 = 0x0
0xa11: V887 = CALLER
0xa12: V888 = 0x1
0xa14: V889 = 0xa0
0xa16: V890 = 0x2
0xa18: V891 = EXP 0x2 0xa0
0xa19: V892 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1c: V893 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0xa1e: V894 = AND V885 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V895 = EQ V894 V893
0xa20: V896 = 0xa28
0xa23: JUMPI 0xa28 V895
---
Entry stack: [V10, 0x140, V297]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x140, V297, 0x0]

================================

Block 0xa24
[0xa24:0xa27]
---
Predecessors: [0xa0a]
Successors: []
---
0xa24 PUSH1 0x0
0xa26 DUP1
0xa27 REVERT
---
0xa24: V897 = 0x0
0xa27: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V297, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V297, 0x0]

================================

Block 0xa28
[0xa28:0xa30]
---
Predecessors: [0xa0a]
Successors: [0xa31, 0xa35]
---
0xa28 JUMPDEST
0xa29 PUSH1 0x0
0xa2b DUP3
0xa2c GT
0xa2d PUSH2 0xa35
0xa30 JUMPI
---
0xa28: JUMPDEST 
0xa29: V898 = 0x0
0xa2c: V899 = GT V297 0x0
0xa2d: V900 = 0xa35
0xa30: JUMPI 0xa35 V899
---
Entry stack: [V10, 0x140, V297, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x140, V297, 0x0]

================================

Block 0xa31
[0xa31:0xa34]
---
Predecessors: [0xa28]
Successors: []
---
0xa31 PUSH1 0x0
0xa33 DUP1
0xa34 REVERT
---
0xa31: V901 = 0x0
0xa34: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V297, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V297, 0x0]

================================

Block 0xa35
[0xa35:0xa78]
---
Predecessors: [0xa28]
Successors: [0xa79]
---
0xa35 JUMPDEST
0xa36 POP
0xa37 PUSH1 0x8
0xa39 DUP1
0xa3a SLOAD
0xa3b SWAP1
0xa3c DUP3
0xa3d SWAP1
0xa3e SSTORE
0xa3f PUSH32 0xfa46b8b4ccaecf1d18401d52f6693d32659468c8553f904bf40cbcfd416ac0f6
0xa60 DUP2
0xa61 DUP4
0xa62 PUSH1 0x40
0xa64 MLOAD
0xa65 SWAP2
0xa66 DUP3
0xa67 MSTORE
0xa68 PUSH1 0x20
0xa6a DUP3
0xa6b ADD
0xa6c MSTORE
0xa6d PUSH1 0x40
0xa6f SWAP1
0xa70 DUP2
0xa71 ADD
0xa72 SWAP1
0xa73 MLOAD
0xa74 DUP1
0xa75 SWAP2
0xa76 SUB
0xa77 SWAP1
0xa78 LOG1
---
0xa35: JUMPDEST 
0xa37: V902 = 0x8
0xa3a: V903 = S[0x8]
0xa3e: S[0x8] = V297
0xa3f: V904 = 0xfa46b8b4ccaecf1d18401d52f6693d32659468c8553f904bf40cbcfd416ac0f6
0xa62: V905 = 0x40
0xa64: V906 = M[0x40]
0xa67: M[V906] = V903
0xa68: V907 = 0x20
0xa6b: V908 = ADD V906 0x20
0xa6c: M[V908] = V297
0xa6d: V909 = 0x40
0xa71: V910 = ADD 0x40 V906
0xa73: V911 = M[0x40]
0xa76: V912 = SUB V910 V911
0xa78: LOG V911 V912 0xfa46b8b4ccaecf1d18401d52f6693d32659468c8553f904bf40cbcfd416ac0f6
---
Entry stack: [V10, 0x140, V297, 0x0]
Stack pops: 2
Stack additions: [S1, V903]
Exit stack: [V10, 0x140, V297, V903]

================================

Block 0xa79
[0xa79:0xa79]
---
Predecessors: [0xa35]
Successors: [0xa7a]
---
0xa79 JUMPDEST
---
0xa79: JUMPDEST 
---
Entry stack: [V10, 0x140, V297, V903]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V297, V903]

================================

Block 0xa7a
[0xa7a:0xa7d]
---
Predecessors: [0xa79]
Successors: [0x140]
---
0xa7a JUMPDEST
0xa7b POP
0xa7c POP
0xa7d JUMP
---
0xa7a: JUMPDEST 
0xa7d: JUMP 0x140
---
Entry stack: [V10, 0x140, V297, V903]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xa7e
[0xa7e:0xa8c]
---
Predecessors: [0x38f]
Successors: [0x397]
---
0xa7e JUMPDEST
0xa7f PUSH1 0x3
0xa81 SLOAD
0xa82 PUSH1 0x1
0xa84 PUSH1 0xa0
0xa86 PUSH1 0x2
0xa88 EXP
0xa89 SUB
0xa8a AND
0xa8b DUP2
0xa8c JUMP
---
0xa7e: JUMPDEST 
0xa7f: V913 = 0x3
0xa81: V914 = S[0x3]
0xa82: V915 = 0x1
0xa84: V916 = 0xa0
0xa86: V917 = 0x2
0xa88: V918 = EXP 0x2 0xa0
0xa89: V919 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8a: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0xa8c: JUMP 0x397
---
Entry stack: [V10, 0x397]
Stack pops: 1
Stack additions: [S0, V920]
Exit stack: [V10, 0x397, V920]

================================

Block 0xa8d
[0xa8d:0xadc]
---
Predecessors: [0x3be]
Successors: [0x73b, 0xadd]
---
0xa8d JUMPDEST
0xa8e PUSH1 0x5
0xa90 DUP1
0xa91 SLOAD
0xa92 PUSH1 0x1
0xa94 DUP2
0xa95 PUSH1 0x1
0xa97 AND
0xa98 ISZERO
0xa99 PUSH2 0x100
0xa9c MUL
0xa9d SUB
0xa9e AND
0xa9f PUSH1 0x2
0xaa1 SWAP1
0xaa2 DIV
0xaa3 DUP1
0xaa4 PUSH1 0x1f
0xaa6 ADD
0xaa7 PUSH1 0x20
0xaa9 DUP1
0xaaa SWAP2
0xaab DIV
0xaac MUL
0xaad PUSH1 0x20
0xaaf ADD
0xab0 PUSH1 0x40
0xab2 MLOAD
0xab3 SWAP1
0xab4 DUP2
0xab5 ADD
0xab6 PUSH1 0x40
0xab8 MSTORE
0xab9 DUP1
0xaba SWAP3
0xabb SWAP2
0xabc SWAP1
0xabd DUP2
0xabe DUP2
0xabf MSTORE
0xac0 PUSH1 0x20
0xac2 ADD
0xac3 DUP3
0xac4 DUP1
0xac5 SLOAD
0xac6 PUSH1 0x1
0xac8 DUP2
0xac9 PUSH1 0x1
0xacb AND
0xacc ISZERO
0xacd PUSH2 0x100
0xad0 MUL
0xad1 SUB
0xad2 AND
0xad3 PUSH1 0x2
0xad5 SWAP1
0xad6 DIV
0xad7 DUP1
0xad8 ISZERO
0xad9 PUSH2 0x73b
0xadc JUMPI
---
0xa8d: JUMPDEST 
0xa8e: V921 = 0x5
0xa91: V922 = S[0x5]
0xa92: V923 = 0x1
0xa95: V924 = 0x1
0xa97: V925 = AND 0x1 V922
0xa98: V926 = ISZERO V925
0xa99: V927 = 0x100
0xa9c: V928 = MUL 0x100 V926
0xa9d: V929 = SUB V928 0x1
0xa9e: V930 = AND V929 V922
0xa9f: V931 = 0x2
0xaa2: V932 = DIV V930 0x2
0xaa4: V933 = 0x1f
0xaa6: V934 = ADD 0x1f V932
0xaa7: V935 = 0x20
0xaab: V936 = DIV V934 0x20
0xaac: V937 = MUL V936 0x20
0xaad: V938 = 0x20
0xaaf: V939 = ADD 0x20 V937
0xab0: V940 = 0x40
0xab2: V941 = M[0x40]
0xab5: V942 = ADD V941 V939
0xab6: V943 = 0x40
0xab8: M[0x40] = V942
0xabf: M[V941] = V932
0xac0: V944 = 0x20
0xac2: V945 = ADD 0x20 V941
0xac5: V946 = S[0x5]
0xac6: V947 = 0x1
0xac9: V948 = 0x1
0xacb: V949 = AND 0x1 V946
0xacc: V950 = ISZERO V949
0xacd: V951 = 0x100
0xad0: V952 = MUL 0x100 V950
0xad1: V953 = SUB V952 0x1
0xad2: V954 = AND V953 V946
0xad3: V955 = 0x2
0xad6: V956 = DIV V954 0x2
0xad8: V957 = ISZERO V956
0xad9: V958 = 0x73b
0xadc: JUMPI 0x73b V957
---
Entry stack: [V10, 0x155]
Stack pops: 0
Stack additions: [V941, 0x5, V932, V945, 0x5, V956]
Exit stack: [V10, 0x155, V941, 0x5, V932, V945, 0x5, V956]

================================

Block 0xadd
[0xadd:0xae4]
---
Predecessors: [0xa8d]
Successors: [0x710, 0xae5]
---
0xadd DUP1
0xade PUSH1 0x1f
0xae0 LT
0xae1 PUSH2 0x710
0xae4 JUMPI
---
0xade: V959 = 0x1f
0xae0: V960 = LT 0x1f V956
0xae1: V961 = 0x710
0xae4: JUMPI 0x710 V960
---
Entry stack: [V10, 0x155, V941, 0x5, V932, V945, 0x5, V956]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x155, V941, 0x5, V932, V945, 0x5, V956]

================================

Block 0xae5
[0xae5:0xaf7]
---
Predecessors: [0xadd]
Successors: [0x73b]
---
0xae5 PUSH2 0x100
0xae8 DUP1
0xae9 DUP4
0xaea SLOAD
0xaeb DIV
0xaec MUL
0xaed DUP4
0xaee MSTORE
0xaef SWAP2
0xaf0 PUSH1 0x20
0xaf2 ADD
0xaf3 SWAP2
0xaf4 PUSH2 0x73b
0xaf7 JUMP
---
0xae5: V962 = 0x100
0xaea: V963 = S[0x5]
0xaeb: V964 = DIV V963 0x100
0xaec: V965 = MUL V964 0x100
0xaee: M[V945] = V965
0xaf0: V966 = 0x20
0xaf2: V967 = ADD 0x20 V945
0xaf4: V968 = 0x73b
0xaf7: JUMP 0x73b
---
Entry stack: [V10, 0x155, V941, 0x5, V932, V945, 0x5, V956]
Stack pops: 3
Stack additions: [V967, S1, S0]
Exit stack: [V10, 0x155, V941, 0x5, V932, V967, 0x5, V956]

================================

Block 0xaf8
[0xaf8:0xb05]
---
Predecessors: []
Successors: [0xb06]
---
0xaf8 JUMPDEST
0xaf9 DUP3
0xafa ADD
0xafb SWAP2
0xafc SWAP1
0xafd PUSH1 0x0
0xaff MSTORE
0xb00 PUSH1 0x20
0xb02 PUSH1 0x0
0xb04 SHA3
0xb05 SWAP1
---
0xaf8: JUMPDEST 
0xafa: V969 = ADD S2 S0
0xafd: V970 = 0x0
0xaff: M[0x0] = S1
0xb00: V971 = 0x20
0xb02: V972 = 0x0
0xb04: V973 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V969, V973, S2]
Exit stack: [V969, V973, S2]

================================

Block 0xb06
[0xb06:0xb19]
---
Predecessors: [0xaf8]
Successors: [0x71e, 0xb1a]
---
0xb06 JUMPDEST
0xb07 DUP2
0xb08 SLOAD
0xb09 DUP2
0xb0a MSTORE
0xb0b SWAP1
0xb0c PUSH1 0x1
0xb0e ADD
0xb0f SWAP1
0xb10 PUSH1 0x20
0xb12 ADD
0xb13 DUP1
0xb14 DUP4
0xb15 GT
0xb16 PUSH2 0x71e
0xb19 JUMPI
---
0xb06: JUMPDEST 
0xb08: V974 = S[V973]
0xb0a: M[S0] = V974
0xb0c: V975 = 0x1
0xb0e: V976 = ADD 0x1 V973
0xb10: V977 = 0x20
0xb12: V978 = ADD 0x20 S0
0xb15: V979 = GT V969 V978
0xb16: V980 = 0x71e
0xb19: JUMPI 0x71e V979
---
Entry stack: [V969, V973, S0]
Stack pops: 3
Stack additions: [S2, V976, V978]
Exit stack: [V969, V976, V978]

================================

Block 0xb1a
[0xb1a:0xb22]
---
Predecessors: [0xb06]
Successors: [0xb23]
---
0xb1a DUP3
0xb1b SWAP1
0xb1c SUB
0xb1d PUSH1 0x1f
0xb1f AND
0xb20 DUP3
0xb21 ADD
0xb22 SWAP2
---
0xb1c: V981 = SUB V978 V969
0xb1d: V982 = 0x1f
0xb1f: V983 = AND 0x1f V981
0xb21: V984 = ADD V969 V983
---
Entry stack: [V969, V976, V978]
Stack pops: 3
Stack additions: [V984, S1, S2]
Exit stack: [V984, V976, V969]

================================

Block 0xb23
[0xb23:0xb2a]
---
Predecessors: [0xb1a]
Successors: []
Has unresolved jump.
---
0xb23 JUMPDEST
0xb24 POP
0xb25 POP
0xb26 POP
0xb27 POP
0xb28 POP
0xb29 DUP2
0xb2a JUMP
---
0xb23: JUMPDEST 
0xb2a: JUMP S6
---
Entry stack: [V984, V976, V969]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xb2b
[0xb2b:0xb3f]
---
Predecessors: [0x449]
Successors: [0xb40, 0xb44]
---
0xb2b JUMPDEST
0xb2c PUSH1 0x9
0xb2e SLOAD
0xb2f PUSH1 0x0
0xb31 SWAP1
0xb32 PUSH2 0x100
0xb35 SWAP1
0xb36 DIV
0xb37 PUSH1 0xff
0xb39 AND
0xb3a ISZERO
0xb3b ISZERO
0xb3c PUSH2 0xb44
0xb3f JUMPI
---
0xb2b: JUMPDEST 
0xb2c: V985 = 0x9
0xb2e: V986 = S[0x9]
0xb2f: V987 = 0x0
0xb32: V988 = 0x100
0xb36: V989 = DIV V986 0x100
0xb37: V990 = 0xff
0xb39: V991 = AND 0xff V989
0xb3a: V992 = ISZERO V991
0xb3b: V993 = ISZERO V992
0xb3c: V994 = 0xb44
0xb3f: JUMPI 0xb44 V993
---
Entry stack: [V10, 0x140, V370]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xb40
[0xb40:0xb43]
---
Predecessors: [0xb2b]
Successors: []
---
0xb40 PUSH1 0x0
0xb42 DUP1
0xb43 REVERT
---
0xb40: V995 = 0x0
0xb43: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xb44
[0xb44:0xb5b]
---
Predecessors: [0xb2b]
Successors: [0xb5c, 0xb60]
---
0xb44 JUMPDEST
0xb45 PUSH1 0x3
0xb47 SLOAD
0xb48 CALLER
0xb49 PUSH1 0x1
0xb4b PUSH1 0xa0
0xb4d PUSH1 0x2
0xb4f EXP
0xb50 SUB
0xb51 SWAP1
0xb52 DUP2
0xb53 AND
0xb54 SWAP2
0xb55 AND
0xb56 EQ
0xb57 ISZERO
0xb58 PUSH2 0xb60
0xb5b JUMPI
---
0xb44: JUMPDEST 
0xb45: V996 = 0x3
0xb47: V997 = S[0x3]
0xb48: V998 = CALLER
0xb49: V999 = 0x1
0xb4b: V1000 = 0xa0
0xb4d: V1001 = 0x2
0xb4f: V1002 = EXP 0x2 0xa0
0xb50: V1003 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb53: V1004 = AND 0xffffffffffffffffffffffffffffffffffffffff V998
0xb55: V1005 = AND V997 0xffffffffffffffffffffffffffffffffffffffff
0xb56: V1006 = EQ V1005 V1004
0xb57: V1007 = ISZERO V1006
0xb58: V1008 = 0xb60
0xb5b: JUMPI 0xb60 V1007
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xb5c
[0xb5c:0xb5f]
---
Predecessors: [0xb44]
Successors: []
---
0xb5c PUSH1 0x0
0xb5e DUP1
0xb5f REVERT
---
0xb5c: V1009 = 0x0
0xb5f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xb60
[0xb60:0xb70]
---
Predecessors: [0xb44]
Successors: [0xb71, 0xb75]
---
0xb60 JUMPDEST
0xb61 PUSH1 0x1
0xb63 PUSH1 0xa0
0xb65 PUSH1 0x2
0xb67 EXP
0xb68 SUB
0xb69 CALLER
0xb6a AND
0xb6b ISZERO
0xb6c ISZERO
0xb6d PUSH2 0xb75
0xb70 JUMPI
---
0xb60: JUMPDEST 
0xb61: V1010 = 0x1
0xb63: V1011 = 0xa0
0xb65: V1012 = 0x2
0xb67: V1013 = EXP 0x2 0xa0
0xb68: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb69: V1015 = CALLER
0xb6a: V1016 = AND V1015 0xffffffffffffffffffffffffffffffffffffffff
0xb6b: V1017 = ISZERO V1016
0xb6c: V1018 = ISZERO V1017
0xb6d: V1019 = 0xb75
0xb70: JUMPI 0xb75 V1018
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xb71
[0xb71:0xb74]
---
Predecessors: [0xb60]
Successors: []
---
0xb71 PUSH1 0x0
0xb73 DUP1
0xb74 REVERT
---
0xb71: V1020 = 0x0
0xb74: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xb75
[0xb75:0xb7d]
---
Predecessors: [0xb60]
Successors: [0xb7e, 0xb82]
---
0xb75 JUMPDEST
0xb76 PUSH1 0x0
0xb78 DUP3
0xb79 GT
0xb7a PUSH2 0xb82
0xb7d JUMPI
---
0xb75: JUMPDEST 
0xb76: V1021 = 0x0
0xb79: V1022 = GT V370 0x0
0xb7a: V1023 = 0xb82
0xb7d: JUMPI 0xb82 V1022
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xb7e
[0xb7e:0xb81]
---
Predecessors: [0xb75]
Successors: []
---
0xb7e PUSH1 0x0
0xb80 DUP1
0xb81 REVERT
---
0xb7e: V1024 = 0x0
0xb81: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xb82
[0xb82:0xba3]
---
Predecessors: [0xb75]
Successors: [0xba4, 0xba8]
---
0xb82 JUMPDEST
0xb83 PUSH1 0x1
0xb85 PUSH1 0xa0
0xb87 PUSH1 0x2
0xb89 EXP
0xb8a SUB
0xb8b CALLER
0xb8c AND
0xb8d PUSH1 0x0
0xb8f SWAP1
0xb90 DUP2
0xb91 MSTORE
0xb92 PUSH1 0x1
0xb94 PUSH1 0x20
0xb96 MSTORE
0xb97 PUSH1 0x40
0xb99 SWAP1
0xb9a SHA3
0xb9b SLOAD
0xb9c DUP3
0xb9d SWAP1
0xb9e LT
0xb9f ISZERO
0xba0 PUSH2 0xba8
0xba3 JUMPI
---
0xb82: JUMPDEST 
0xb83: V1025 = 0x1
0xb85: V1026 = 0xa0
0xb87: V1027 = 0x2
0xb89: V1028 = EXP 0x2 0xa0
0xb8a: V1029 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8b: V1030 = CALLER
0xb8c: V1031 = AND V1030 0xffffffffffffffffffffffffffffffffffffffff
0xb8d: V1032 = 0x0
0xb91: M[0x0] = V1031
0xb92: V1033 = 0x1
0xb94: V1034 = 0x20
0xb96: M[0x20] = 0x1
0xb97: V1035 = 0x40
0xb9a: V1036 = SHA3 0x0 0x40
0xb9b: V1037 = S[V1036]
0xb9e: V1038 = LT V1037 V370
0xb9f: V1039 = ISZERO V1038
0xba0: V1040 = 0xba8
0xba3: JUMPI 0xba8 V1039
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xba4
[0xba4:0xba7]
---
Predecessors: [0xb82]
Successors: []
---
0xba4 PUSH1 0x0
0xba6 DUP1
0xba7 REVERT
---
0xba4: V1041 = 0x0
0xba7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V370, 0x0]

================================

Block 0xba8
[0xba8:0xbd2]
---
Predecessors: [0xb82]
Successors: [0xf88]
---
0xba8 JUMPDEST
0xba9 PUSH1 0x3
0xbab SLOAD
0xbac PUSH1 0x1
0xbae PUSH1 0xa0
0xbb0 PUSH1 0x2
0xbb2 EXP
0xbb3 SUB
0xbb4 AND
0xbb5 PUSH1 0x0
0xbb7 SWAP1
0xbb8 DUP2
0xbb9 MSTORE
0xbba PUSH1 0x1
0xbbc PUSH1 0x20
0xbbe MSTORE
0xbbf PUSH1 0x40
0xbc1 SWAP1
0xbc2 SHA3
0xbc3 SLOAD
0xbc4 PUSH2 0xbd3
0xbc7 SWAP1
0xbc8 DUP4
0xbc9 PUSH4 0xffffffff
0xbce PUSH2 0xf88
0xbd1 AND
0xbd2 JUMP
---
0xba8: JUMPDEST 
0xba9: V1042 = 0x3
0xbab: V1043 = S[0x3]
0xbac: V1044 = 0x1
0xbae: V1045 = 0xa0
0xbb0: V1046 = 0x2
0xbb2: V1047 = EXP 0x2 0xa0
0xbb3: V1048 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb4: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V1043
0xbb5: V1050 = 0x0
0xbb9: M[0x0] = V1049
0xbba: V1051 = 0x1
0xbbc: V1052 = 0x20
0xbbe: M[0x20] = 0x1
0xbbf: V1053 = 0x40
0xbc2: V1054 = SHA3 0x0 0x40
0xbc3: V1055 = S[V1054]
0xbc4: V1056 = 0xbd3
0xbc9: V1057 = 0xffffffff
0xbce: V1058 = 0xf88
0xbd1: V1059 = AND 0xf88 0xffffffff
0xbd2: JUMP 0xf88
---
Entry stack: [V10, 0x140, V370, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xbd3, V1055, S1]
Exit stack: [V10, 0x140, V370, 0x0, 0xbd3, V1055, V370]

================================

Block 0xbd3
[0xbd3:0xc0b]
---
Predecessors: [0xf81]
Successors: [0xfa2]
---
0xbd3 JUMPDEST
0xbd4 PUSH1 0x3
0xbd6 SLOAD
0xbd7 PUSH1 0x1
0xbd9 PUSH1 0xa0
0xbdb PUSH1 0x2
0xbdd EXP
0xbde SUB
0xbdf SWAP1
0xbe0 DUP2
0xbe1 AND
0xbe2 PUSH1 0x0
0xbe4 SWAP1
0xbe5 DUP2
0xbe6 MSTORE
0xbe7 PUSH1 0x1
0xbe9 PUSH1 0x20
0xbeb MSTORE
0xbec PUSH1 0x40
0xbee DUP1
0xbef DUP3
0xbf0 SHA3
0xbf1 SWAP4
0xbf2 SWAP1
0xbf3 SWAP4
0xbf4 SSTORE
0xbf5 CALLER
0xbf6 SWAP1
0xbf7 SWAP2
0xbf8 AND
0xbf9 DUP2
0xbfa MSTORE
0xbfb SHA3
0xbfc SLOAD
0xbfd PUSH2 0xc0c
0xc00 SWAP1
0xc01 DUP4
0xc02 PUSH4 0xffffffff
0xc07 PUSH2 0xfa2
0xc0a AND
0xc0b JUMP
---
0xbd3: JUMPDEST 
0xbd4: V1060 = 0x3
0xbd6: V1061 = S[0x3]
0xbd7: V1062 = 0x1
0xbd9: V1063 = 0xa0
0xbdb: V1064 = 0x2
0xbdd: V1065 = EXP 0x2 0xa0
0xbde: V1066 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe1: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffff V1061
0xbe2: V1068 = 0x0
0xbe6: M[0x0] = V1067
0xbe7: V1069 = 0x1
0xbe9: V1070 = 0x20
0xbeb: M[0x20] = 0x1
0xbec: V1071 = 0x40
0xbf0: V1072 = SHA3 0x0 0x40
0xbf4: S[V1072] = S0
0xbf5: V1073 = CALLER
0xbf8: V1074 = AND 0xffffffffffffffffffffffffffffffffffffffff V1073
0xbfa: M[0x0] = V1074
0xbfb: V1075 = SHA3 0x0 0x40
0xbfc: V1076 = S[V1075]
0xbfd: V1077 = 0xc0c
0xc02: V1078 = 0xffffffff
0xc07: V1079 = 0xfa2
0xc0a: V1080 = AND 0xfa2 0xffffffff
0xc0b: JUMP 0xfa2
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xc0c, V1076, S2]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, 0xc0c, V1076, S2]

================================

Block 0xc0c
[0xc0c:0xc3c]
---
Predecessors: [0xfb3]
Successors: [0xfb9]
---
0xc0c JUMPDEST
0xc0d PUSH1 0x1
0xc0f PUSH1 0xa0
0xc11 PUSH1 0x2
0xc13 EXP
0xc14 SUB
0xc15 CALLER
0xc16 AND
0xc17 PUSH1 0x0
0xc19 SWAP1
0xc1a DUP2
0xc1b MSTORE
0xc1c PUSH1 0x1
0xc1e PUSH1 0x20
0xc20 MSTORE
0xc21 PUSH1 0x40
0xc23 SWAP1
0xc24 SHA3
0xc25 SSTORE
0xc26 PUSH1 0x8
0xc28 SLOAD
0xc29 PUSH2 0xc42
0xc2c SWAP1
0xc2d PUSH2 0xc3d
0xc30 SWAP1
0xc31 DUP5
0xc32 SWAP1
0xc33 PUSH4 0xffffffff
0xc38 PUSH2 0xfb9
0xc3b AND
0xc3c JUMP
---
0xc0c: JUMPDEST 
0xc0d: V1081 = 0x1
0xc0f: V1082 = 0xa0
0xc11: V1083 = 0x2
0xc13: V1084 = EXP 0x2 0xa0
0xc14: V1085 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc15: V1086 = CALLER
0xc16: V1087 = AND V1086 0xffffffffffffffffffffffffffffffffffffffff
0xc17: V1088 = 0x0
0xc1b: M[0x0] = V1087
0xc1c: V1089 = 0x1
0xc1e: V1090 = 0x20
0xc20: M[0x20] = 0x1
0xc21: V1091 = 0x40
0xc24: V1092 = SHA3 0x0 0x40
0xc25: S[V1092] = S0
0xc26: V1093 = 0x8
0xc28: V1094 = S[0x8]
0xc29: V1095 = 0xc42
0xc2d: V1096 = 0xc3d
0xc33: V1097 = 0xffffffff
0xc38: V1098 = 0xfb9
0xc3b: V1099 = AND 0xfb9 0xffffffff
0xc3c: JUMP 0xfb9
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xc42, 0xc3d, S2, V1094]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, 0xc42, 0xc3d, S2, V1094]

================================

Block 0xc3d
[0xc3d:0xc41]
---
Predecessors: [0xfce]
Successors: [0xfd5]
---
0xc3d JUMPDEST
0xc3e PUSH2 0xfd5
0xc41 JUMP
---
0xc3d: JUMPDEST 
0xc3e: V1100 = 0xfd5
0xc41: JUMP 0xfd5
---
Entry stack: [V10, S9, {0x13d, 0x140}, S7, V509, S5, {0x0, 0x140}, S3, S2, {0x0, 0xc42}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, {0x13d, 0x140}, S7, V509, S5, {0x0, 0x140}, S3, S2, {0x0, 0xc42}, S0]

================================

Block 0xc42
[0xc42:0xc70]
---
Predecessors: [0x906, 0xf54]
Successors: [0xc71, 0xc75]
---
0xc42 JUMPDEST
0xc43 SWAP1
0xc44 POP
0xc45 PUSH1 0x1
0xc47 PUSH1 0xa0
0xc49 PUSH1 0x2
0xc4b EXP
0xc4c SUB
0xc4d CALLER
0xc4e AND
0xc4f DUP2
0xc50 ISZERO
0xc51 PUSH2 0x8fc
0xc54 MUL
0xc55 DUP3
0xc56 PUSH1 0x40
0xc58 MLOAD
0xc59 PUSH1 0x0
0xc5b PUSH1 0x40
0xc5d MLOAD
0xc5e DUP1
0xc5f DUP4
0xc60 SUB
0xc61 DUP2
0xc62 DUP6
0xc63 DUP9
0xc64 DUP9
0xc65 CALL
0xc66 SWAP4
0xc67 POP
0xc68 POP
0xc69 POP
0xc6a POP
0xc6b ISZERO
0xc6c ISZERO
0xc6d PUSH2 0xc75
0xc70 JUMPI
---
0xc42: JUMPDEST 
0xc45: V1101 = 0x1
0xc47: V1102 = 0xa0
0xc49: V1103 = 0x2
0xc4b: V1104 = EXP 0x2 0xa0
0xc4c: V1105 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc4d: V1106 = CALLER
0xc4e: V1107 = AND V1106 0xffffffffffffffffffffffffffffffffffffffff
0xc50: V1108 = ISZERO S0
0xc51: V1109 = 0x8fc
0xc54: V1110 = MUL 0x8fc V1108
0xc56: V1111 = 0x40
0xc58: V1112 = M[0x40]
0xc59: V1113 = 0x0
0xc5b: V1114 = 0x40
0xc5d: V1115 = M[0x40]
0xc60: V1116 = SUB V1112 V1115
0xc65: V1117 = CALL V1110 V1107 S0 V1115 V1116 V1115 0x0
0xc6b: V1118 = ISZERO V1117
0xc6c: V1119 = ISZERO V1118
0xc6d: V1120 = 0xc75
0xc70: JUMPI 0xc75 V1119
---
Entry stack: [V10, S6, {0x13d, 0x140}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S6, {0x13d, 0x140}, S4, S3, S2, S0]

================================

Block 0xc71
[0xc71:0xc74]
---
Predecessors: [0xc42]
Successors: []
---
0xc71 PUSH1 0x0
0xc73 DUP1
0xc74 REVERT
---
0xc71: V1121 = 0x0
0xc74: REVERT 0x0 0x0
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]

================================

Block 0xc75
[0xc75:0xcbb]
---
Predecessors: [0xc42]
Successors: [0xcbc]
---
0xc75 JUMPDEST
0xc76 CALLER
0xc77 PUSH1 0x1
0xc79 PUSH1 0xa0
0xc7b PUSH1 0x2
0xc7d EXP
0xc7e SUB
0xc7f AND
0xc80 PUSH32 0x35ea94addbc62df281ade49cc2ad9b3d9259166170cf702928b4ddc045f7256e
0xca1 DUP3
0xca2 PUSH1 0x8
0xca4 SLOAD
0xca5 PUSH1 0x40
0xca7 MLOAD
0xca8 SWAP2
0xca9 DUP3
0xcaa MSTORE
0xcab PUSH1 0x20
0xcad DUP3
0xcae ADD
0xcaf MSTORE
0xcb0 PUSH1 0x40
0xcb2 SWAP1
0xcb3 DUP2
0xcb4 ADD
0xcb5 SWAP1
0xcb6 MLOAD
0xcb7 DUP1
0xcb8 SWAP2
0xcb9 SUB
0xcba SWAP1
0xcbb LOG2
---
0xc75: JUMPDEST 
0xc76: V1122 = CALLER
0xc77: V1123 = 0x1
0xc79: V1124 = 0xa0
0xc7b: V1125 = 0x2
0xc7d: V1126 = EXP 0x2 0xa0
0xc7e: V1127 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7f: V1128 = AND 0xffffffffffffffffffffffffffffffffffffffff V1122
0xc80: V1129 = 0x35ea94addbc62df281ade49cc2ad9b3d9259166170cf702928b4ddc045f7256e
0xca2: V1130 = 0x8
0xca4: V1131 = S[0x8]
0xca5: V1132 = 0x40
0xca7: V1133 = M[0x40]
0xcaa: M[V1133] = S0
0xcab: V1134 = 0x20
0xcae: V1135 = ADD V1133 0x20
0xcaf: M[V1135] = V1131
0xcb0: V1136 = 0x40
0xcb4: V1137 = ADD 0x40 V1133
0xcb6: V1138 = M[0x40]
0xcb9: V1139 = SUB V1137 V1138
0xcbb: LOG V1138 V1139 0x35ea94addbc62df281ade49cc2ad9b3d9259166170cf702928b4ddc045f7256e V1128
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]

================================

Block 0xcbc
[0xcbc:0xcbc]
---
Predecessors: [0xc75]
Successors: [0xcbd]
---
0xcbc JUMPDEST
---
0xcbc: JUMPDEST 
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]

================================

Block 0xcbd
[0xcbd:0xcbd]
---
Predecessors: [0xcbc]
Successors: [0xcbe]
---
0xcbd JUMPDEST
---
0xcbd: JUMPDEST 
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]

================================

Block 0xcbe
[0xcbe:0xcc1]
---
Predecessors: [0xcbd]
Successors: [0x140]
---
0xcbe JUMPDEST
0xcbf POP
0xcc0 POP
0xcc1 JUMP
---
0xcbe: JUMPDEST 
0xcc1: JUMP S2
---
Entry stack: [V10, S5, {0x13d, 0x140}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S5, {0x13d, 0x140}, S3]

================================

Block 0xcc2
[0xcc2:0xcea]
---
Predecessors: [0x461]
Successors: [0xfa2]
---
0xcc2 JUMPDEST
0xcc3 PUSH1 0x1
0xcc5 PUSH1 0xa0
0xcc7 PUSH1 0x2
0xcc9 EXP
0xcca SUB
0xccb CALLER
0xccc AND
0xccd PUSH1 0x0
0xccf SWAP1
0xcd0 DUP2
0xcd1 MSTORE
0xcd2 PUSH1 0x1
0xcd4 PUSH1 0x20
0xcd6 MSTORE
0xcd7 PUSH1 0x40
0xcd9 DUP2
0xcda SHA3
0xcdb SLOAD
0xcdc PUSH2 0xceb
0xcdf SWAP1
0xce0 DUP4
0xce1 PUSH4 0xffffffff
0xce6 PUSH2 0xfa2
0xce9 AND
0xcea JUMP
---
0xcc2: JUMPDEST 
0xcc3: V1140 = 0x1
0xcc5: V1141 = 0xa0
0xcc7: V1142 = 0x2
0xcc9: V1143 = EXP 0x2 0xa0
0xcca: V1144 = SUB 0x10000000000000000000000000000000000000000 0x1
0xccb: V1145 = CALLER
0xccc: V1146 = AND V1145 0xffffffffffffffffffffffffffffffffffffffff
0xccd: V1147 = 0x0
0xcd1: M[0x0] = V1146
0xcd2: V1148 = 0x1
0xcd4: V1149 = 0x20
0xcd6: M[0x20] = 0x1
0xcd7: V1150 = 0x40
0xcda: V1151 = SHA3 0x0 0x40
0xcdb: V1152 = S[V1151]
0xcdc: V1153 = 0xceb
0xce1: V1154 = 0xffffffff
0xce6: V1155 = 0xfa2
0xce9: V1156 = AND 0xfa2 0xffffffff
0xcea: JUMP 0xfa2
---
Entry stack: [V10, 0x1ef, V384, V386]
Stack pops: 1
Stack additions: [S0, 0x0, 0xceb, V1152, S0]
Exit stack: [V10, 0x1ef, V384, V386, 0x0, 0xceb, V1152, V386]

================================

Block 0xceb
[0xceb:0xd1f]
---
Predecessors: [0xfb3]
Successors: [0xf88]
---
0xceb JUMPDEST
0xcec PUSH1 0x1
0xcee PUSH1 0xa0
0xcf0 PUSH1 0x2
0xcf2 EXP
0xcf3 SUB
0xcf4 CALLER
0xcf5 DUP2
0xcf6 AND
0xcf7 PUSH1 0x0
0xcf9 SWAP1
0xcfa DUP2
0xcfb MSTORE
0xcfc PUSH1 0x1
0xcfe PUSH1 0x20
0xd00 MSTORE
0xd01 PUSH1 0x40
0xd03 DUP1
0xd04 DUP3
0xd05 SHA3
0xd06 SWAP4
0xd07 SWAP1
0xd08 SWAP4
0xd09 SSTORE
0xd0a SWAP1
0xd0b DUP6
0xd0c AND
0xd0d DUP2
0xd0e MSTORE
0xd0f SHA3
0xd10 SLOAD
0xd11 PUSH2 0xd20
0xd14 SWAP1
0xd15 DUP4
0xd16 PUSH4 0xffffffff
0xd1b PUSH2 0xf88
0xd1e AND
0xd1f JUMP
---
0xceb: JUMPDEST 
0xcec: V1157 = 0x1
0xcee: V1158 = 0xa0
0xcf0: V1159 = 0x2
0xcf2: V1160 = EXP 0x2 0xa0
0xcf3: V1161 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf4: V1162 = CALLER
0xcf6: V1163 = AND 0xffffffffffffffffffffffffffffffffffffffff V1162
0xcf7: V1164 = 0x0
0xcfb: M[0x0] = V1163
0xcfc: V1165 = 0x1
0xcfe: V1166 = 0x20
0xd00: M[0x20] = 0x1
0xd01: V1167 = 0x40
0xd05: V1168 = SHA3 0x0 0x40
0xd09: S[V1168] = S0
0xd0c: V1169 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xd0e: M[0x0] = V1169
0xd0f: V1170 = SHA3 0x0 0x40
0xd10: V1171 = S[V1170]
0xd11: V1172 = 0xd20
0xd16: V1173 = 0xffffffff
0xd1b: V1174 = 0xf88
0xd1e: V1175 = AND 0xf88 0xffffffff
0xd1f: JUMP 0xf88
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xd20, V1171, S2]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, 0xd20, V1171, S2]

================================

Block 0xd20
[0xd20:0xd7b]
---
Predecessors: [0xf81]
Successors: [0xd7c]
---
0xd20 JUMPDEST
0xd21 PUSH1 0x1
0xd23 PUSH1 0xa0
0xd25 PUSH1 0x2
0xd27 EXP
0xd28 SUB
0xd29 DUP1
0xd2a DUP6
0xd2b AND
0xd2c PUSH1 0x0
0xd2e DUP2
0xd2f DUP2
0xd30 MSTORE
0xd31 PUSH1 0x1
0xd33 PUSH1 0x20
0xd35 MSTORE
0xd36 PUSH1 0x40
0xd38 SWAP1
0xd39 DUP2
0xd3a SWAP1
0xd3b SHA3
0xd3c SWAP4
0xd3d SWAP1
0xd3e SWAP4
0xd3f SSTORE
0xd40 SWAP2
0xd41 CALLER
0xd42 SWAP1
0xd43 SWAP2
0xd44 AND
0xd45 SWAP1
0xd46 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd67 SWAP1
0xd68 DUP6
0xd69 SWAP1
0xd6a MLOAD
0xd6b SWAP1
0xd6c DUP2
0xd6d MSTORE
0xd6e PUSH1 0x20
0xd70 ADD
0xd71 PUSH1 0x40
0xd73 MLOAD
0xd74 DUP1
0xd75 SWAP2
0xd76 SUB
0xd77 SWAP1
0xd78 LOG3
0xd79 POP
0xd7a PUSH1 0x1
---
0xd20: JUMPDEST 
0xd21: V1176 = 0x1
0xd23: V1177 = 0xa0
0xd25: V1178 = 0x2
0xd27: V1179 = EXP 0x2 0xa0
0xd28: V1180 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2b: V1181 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xd2c: V1182 = 0x0
0xd30: M[0x0] = V1181
0xd31: V1183 = 0x1
0xd33: V1184 = 0x20
0xd35: M[0x20] = 0x1
0xd36: V1185 = 0x40
0xd3b: V1186 = SHA3 0x0 0x40
0xd3f: S[V1186] = S0
0xd41: V1187 = CALLER
0xd44: V1188 = AND 0xffffffffffffffffffffffffffffffffffffffff V1187
0xd46: V1189 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd6a: V1190 = M[0x40]
0xd6d: M[V1190] = S2
0xd6e: V1191 = 0x20
0xd70: V1192 = ADD 0x20 V1190
0xd71: V1193 = 0x40
0xd73: V1194 = M[0x40]
0xd76: V1195 = SUB V1192 V1194
0xd78: LOG V1194 V1195 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1188 V1181
0xd7a: V1196 = 0x1
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [V10, S6, S5, S4, S3, S2, 0x1]

================================

Block 0xd7c
[0xd7c:0xd81]
---
Predecessors: [0xd20]
Successors: [0x1ef]
---
0xd7c JUMPDEST
0xd7d SWAP3
0xd7e SWAP2
0xd7f POP
0xd80 POP
0xd81 JUMP
---
0xd7c: JUMPDEST 
0xd81: JUMP S3
---
Entry stack: [V10, S5, S4, S3, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S5, S4, 0x1]

================================

Block 0xd82
[0xd82:0xda8]
---
Predecessors: [0x497]
Successors: [0xda9]
---
0xd82 JUMPDEST
0xd83 PUSH1 0x1
0xd85 PUSH1 0xa0
0xd87 PUSH1 0x2
0xd89 EXP
0xd8a SUB
0xd8b DUP1
0xd8c DUP4
0xd8d AND
0xd8e PUSH1 0x0
0xd90 SWAP1
0xd91 DUP2
0xd92 MSTORE
0xd93 PUSH1 0x2
0xd95 PUSH1 0x20
0xd97 SWAP1
0xd98 DUP2
0xd99 MSTORE
0xd9a PUSH1 0x40
0xd9c DUP1
0xd9d DUP4
0xd9e SHA3
0xd9f SWAP4
0xda0 DUP6
0xda1 AND
0xda2 DUP4
0xda3 MSTORE
0xda4 SWAP3
0xda5 SWAP1
0xda6 MSTORE
0xda7 SHA3
0xda8 SLOAD
---
0xd82: JUMPDEST 
0xd83: V1197 = 0x1
0xd85: V1198 = 0xa0
0xd87: V1199 = 0x2
0xd89: V1200 = EXP 0x2 0xa0
0xd8a: V1201 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8d: V1202 = AND V409 0xffffffffffffffffffffffffffffffffffffffff
0xd8e: V1203 = 0x0
0xd92: M[0x0] = V1202
0xd93: V1204 = 0x2
0xd95: V1205 = 0x20
0xd99: M[0x20] = 0x2
0xd9a: V1206 = 0x40
0xd9e: V1207 = SHA3 0x0 0x40
0xda1: V1208 = AND V412 0xffffffffffffffffffffffffffffffffffffffff
0xda3: M[0x0] = V1208
0xda6: M[0x20] = V1207
0xda7: V1209 = SHA3 0x0 0x40
0xda8: V1210 = S[V1209]
---
Entry stack: [V10, 0x23d, V409, V412]
Stack pops: 2
Stack additions: [S1, S0, V1210]
Exit stack: [V10, 0x23d, V409, V412, V1210]

================================

Block 0xda9
[0xda9:0xdae]
---
Predecessors: [0xd82]
Successors: [0x23d]
---
0xda9 JUMPDEST
0xdaa SWAP3
0xdab SWAP2
0xdac POP
0xdad POP
0xdae JUMP
---
0xda9: JUMPDEST 
0xdae: JUMP 0x23d
---
Entry stack: [V10, 0x23d, V409, V412, V1210]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V1210]

================================

Block 0xdaf
[0xdaf:0xdc8]
---
Predecessors: [0x4ce]
Successors: [0xdc9, 0xdcd]
---
0xdaf JUMPDEST
0xdb0 PUSH1 0x3
0xdb2 SLOAD
0xdb3 PUSH1 0x0
0xdb5 SWAP1
0xdb6 CALLER
0xdb7 PUSH1 0x1
0xdb9 PUSH1 0xa0
0xdbb PUSH1 0x2
0xdbd EXP
0xdbe SUB
0xdbf SWAP1
0xdc0 DUP2
0xdc1 AND
0xdc2 SWAP2
0xdc3 AND
0xdc4 EQ
0xdc5 PUSH2 0xdcd
0xdc8 JUMPI
---
0xdaf: JUMPDEST 
0xdb0: V1211 = 0x3
0xdb2: V1212 = S[0x3]
0xdb3: V1213 = 0x0
0xdb6: V1214 = CALLER
0xdb7: V1215 = 0x1
0xdb9: V1216 = 0xa0
0xdbb: V1217 = 0x2
0xdbd: V1218 = EXP 0x2 0xa0
0xdbe: V1219 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc1: V1220 = AND 0xffffffffffffffffffffffffffffffffffffffff V1214
0xdc3: V1221 = AND V1212 0xffffffffffffffffffffffffffffffffffffffff
0xdc4: V1222 = EQ V1221 V1220
0xdc5: V1223 = 0xdcd
0xdc8: JUMPI 0xdcd V1222
---
Entry stack: [V10, 0x140, V433]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x140, V433, 0x0]

================================

Block 0xdc9
[0xdc9:0xdcc]
---
Predecessors: [0xdaf]
Successors: []
---
0xdc9 PUSH1 0x0
0xdcb DUP1
0xdcc REVERT
---
0xdc9: V1224 = 0x0
0xdcc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V433, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V433, 0x0]

================================

Block 0xdcd
[0xdcd:0xe05]
---
Predecessors: [0xdaf]
Successors: [0xf88]
---
0xdcd JUMPDEST
0xdce POP
0xdcf PUSH1 0x3
0xdd1 SLOAD
0xdd2 PUSH1 0x1
0xdd4 PUSH1 0xa0
0xdd6 PUSH1 0x2
0xdd8 EXP
0xdd9 SUB
0xdda SWAP1
0xddb DUP2
0xddc AND
0xddd PUSH1 0x0
0xddf DUP2
0xde0 DUP2
0xde1 MSTORE
0xde2 PUSH1 0x1
0xde4 PUSH1 0x20
0xde6 MSTORE
0xde7 PUSH1 0x40
0xde9 DUP1
0xdea DUP3
0xdeb SHA3
0xdec SLOAD
0xded SWAP4
0xdee DUP6
0xdef AND
0xdf0 DUP3
0xdf1 MSTORE
0xdf2 SWAP1
0xdf3 SHA3
0xdf4 SLOAD
0xdf5 SWAP1
0xdf6 SWAP2
0xdf7 PUSH2 0xe06
0xdfa SWAP2
0xdfb SWAP1
0xdfc PUSH4 0xffffffff
0xe01 PUSH2 0xf88
0xe04 AND
0xe05 JUMP
---
0xdcd: JUMPDEST 
0xdcf: V1225 = 0x3
0xdd1: V1226 = S[0x3]
0xdd2: V1227 = 0x1
0xdd4: V1228 = 0xa0
0xdd6: V1229 = 0x2
0xdd8: V1230 = EXP 0x2 0xa0
0xdd9: V1231 = SUB 0x10000000000000000000000000000000000000000 0x1
0xddc: V1232 = AND 0xffffffffffffffffffffffffffffffffffffffff V1226
0xddd: V1233 = 0x0
0xde1: M[0x0] = V1232
0xde2: V1234 = 0x1
0xde4: V1235 = 0x20
0xde6: M[0x20] = 0x1
0xde7: V1236 = 0x40
0xdeb: V1237 = SHA3 0x0 0x40
0xdec: V1238 = S[V1237]
0xdef: V1239 = AND V433 0xffffffffffffffffffffffffffffffffffffffff
0xdf1: M[0x0] = V1239
0xdf3: V1240 = SHA3 0x0 0x40
0xdf4: V1241 = S[V1240]
0xdf7: V1242 = 0xe06
0xdfc: V1243 = 0xffffffff
0xe01: V1244 = 0xf88
0xe04: V1245 = AND 0xf88 0xffffffff
0xe05: JUMP 0xf88
---
Entry stack: [V10, 0x140, V433, 0x0]
Stack pops: 2
Stack additions: [S1, V1232, 0xe06, V1241, V1238]
Exit stack: [V10, 0x140, V433, V1232, 0xe06, V1241, V1238]

================================

Block 0xe06
[0xe06:0xe38]
---
Predecessors: [0xf81]
Successors: [0x1003]
---
0xe06 JUMPDEST
0xe07 PUSH1 0x1
0xe09 PUSH1 0xa0
0xe0b PUSH1 0x2
0xe0d EXP
0xe0e SUB
0xe0f DUP1
0xe10 DUP5
0xe11 AND
0xe12 PUSH1 0x0
0xe14 SWAP1
0xe15 DUP2
0xe16 MSTORE
0xe17 PUSH1 0x1
0xe19 PUSH1 0x20
0xe1b MSTORE
0xe1c PUSH1 0x40
0xe1e DUP1
0xe1f DUP3
0xe20 SHA3
0xe21 SWAP4
0xe22 SWAP1
0xe23 SWAP4
0xe24 SSTORE
0xe25 PUSH1 0x3
0xe27 SLOAD
0xe28 SWAP1
0xe29 SWAP2
0xe2a AND
0xe2b DUP2
0xe2c MSTORE
0xe2d SWAP1
0xe2e DUP2
0xe2f SHA3
0xe30 SSTORE
0xe31 PUSH2 0xe39
0xe34 DUP3
0xe35 PUSH2 0x1003
0xe38 JUMP
---
0xe06: JUMPDEST 
0xe07: V1246 = 0x1
0xe09: V1247 = 0xa0
0xe0b: V1248 = 0x2
0xe0d: V1249 = EXP 0x2 0xa0
0xe0e: V1250 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe11: V1251 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xe12: V1252 = 0x0
0xe16: M[0x0] = V1251
0xe17: V1253 = 0x1
0xe19: V1254 = 0x20
0xe1b: M[0x20] = 0x1
0xe1c: V1255 = 0x40
0xe20: V1256 = SHA3 0x0 0x40
0xe24: S[V1256] = S0
0xe25: V1257 = 0x3
0xe27: V1258 = S[0x3]
0xe2a: V1259 = AND 0xffffffffffffffffffffffffffffffffffffffff V1258
0xe2c: M[0x0] = V1259
0xe2f: V1260 = SHA3 0x0 0x40
0xe30: S[V1260] = 0x0
0xe31: V1261 = 0xe39
0xe35: V1262 = 0x1003
0xe38: JUMP 0x1003
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xe39, S2]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, 0xe39, S2]

================================

Block 0xe39
[0xe39:0xe7f]
---
Predecessors: [0x1058]
Successors: [0xe80]
---
0xe39 JUMPDEST
0xe3a PUSH32 0x6efdecdd31c4bac6304b013412b81d6c3cccf803b5808a2e6f07374bd3001d0
0xe5b DUP2
0xe5c DUP4
0xe5d PUSH1 0x40
0xe5f MLOAD
0xe60 PUSH1 0x1
0xe62 PUSH1 0xa0
0xe64 PUSH1 0x2
0xe66 EXP
0xe67 SUB
0xe68 SWAP3
0xe69 DUP4
0xe6a AND
0xe6b DUP2
0xe6c MSTORE
0xe6d SWAP2
0xe6e AND
0xe6f PUSH1 0x20
0xe71 DUP3
0xe72 ADD
0xe73 MSTORE
0xe74 PUSH1 0x40
0xe76 SWAP1
0xe77 DUP2
0xe78 ADD
0xe79 SWAP1
0xe7a MLOAD
0xe7b DUP1
0xe7c SWAP2
0xe7d SUB
0xe7e SWAP1
0xe7f LOG1
---
0xe39: JUMPDEST 
0xe3a: V1263 = 0x6efdecdd31c4bac6304b013412b81d6c3cccf803b5808a2e6f07374bd3001d0
0xe5d: V1264 = 0x40
0xe5f: V1265 = M[0x40]
0xe60: V1266 = 0x1
0xe62: V1267 = 0xa0
0xe64: V1268 = 0x2
0xe66: V1269 = EXP 0x2 0xa0
0xe67: V1270 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe6a: V1271 = AND 0xffffffffffffffffffffffffffffffffffffffff V1232
0xe6c: M[V1265] = V1271
0xe6e: V1272 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0xe6f: V1273 = 0x20
0xe72: V1274 = ADD V1265 0x20
0xe73: M[V1274] = V1272
0xe74: V1275 = 0x40
0xe78: V1276 = ADD 0x40 V1265
0xe7a: V1277 = M[0x40]
0xe7d: V1278 = SUB V1276 V1277
0xe7f: LOG V1277 V1278 0x6efdecdd31c4bac6304b013412b81d6c3cccf803b5808a2e6f07374bd3001d0
---
Entry stack: [V10, 0x140, V433, V1232]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x140, V433, V1232]

================================

Block 0xe80
[0xe80:0xe80]
---
Predecessors: [0xe39]
Successors: [0xe81]
---
0xe80 JUMPDEST
---
0xe80: JUMPDEST 
---
Entry stack: [V10, 0x140, V433, V1232]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V433, V1232]

================================

Block 0xe81
[0xe81:0xe84]
---
Predecessors: [0xe80]
Successors: [0x140]
---
0xe81 JUMPDEST
0xe82 POP
0xe83 POP
0xe84 JUMP
---
0xe81: JUMPDEST 
0xe84: JUMP 0x140
---
Entry stack: [V10, 0x140, V433, V1232]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xe85
[0xe85:0xe9b]
---
Predecessors: [0x505]
Successors: [0xe9c, 0xea0]
---
0xe85 JUMPDEST
0xe86 PUSH1 0x3
0xe88 SLOAD
0xe89 CALLER
0xe8a PUSH1 0x1
0xe8c PUSH1 0xa0
0xe8e PUSH1 0x2
0xe90 EXP
0xe91 SUB
0xe92 SWAP1
0xe93 DUP2
0xe94 AND
0xe95 SWAP2
0xe96 AND
0xe97 EQ
0xe98 PUSH2 0xea0
0xe9b JUMPI
---
0xe85: JUMPDEST 
0xe86: V1279 = 0x3
0xe88: V1280 = S[0x3]
0xe89: V1281 = CALLER
0xe8a: V1282 = 0x1
0xe8c: V1283 = 0xa0
0xe8e: V1284 = 0x2
0xe90: V1285 = EXP 0x2 0xa0
0xe91: V1286 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe94: V1287 = AND 0xffffffffffffffffffffffffffffffffffffffff V1281
0xe96: V1288 = AND V1280 0xffffffffffffffffffffffffffffffffffffffff
0xe97: V1289 = EQ V1288 V1287
0xe98: V1290 = 0xea0
0xe9b: JUMPI 0xea0 V1289
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0xe9c
[0xe9c:0xe9f]
---
Predecessors: [0xe85]
Successors: []
---
0xe9c PUSH1 0x0
0xe9e DUP1
0xe9f REVERT
---
0xe9c: V1291 = 0x0
0xe9f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0xea0
[0xea0:0xead]
---
Predecessors: [0xe85]
Successors: []
---
0xea0 JUMPDEST
0xea1 PUSH1 0x3
0xea3 SLOAD
0xea4 PUSH1 0x1
0xea6 PUSH1 0xa0
0xea8 PUSH1 0x2
0xeaa EXP
0xeab SUB
0xeac AND
0xead SELFDESTRUCT
---
0xea0: JUMPDEST 
0xea1: V1292 = 0x3
0xea3: V1293 = S[0x3]
0xea4: V1294 = 0x1
0xea6: V1295 = 0xa0
0xea8: V1296 = 0x2
0xeaa: V1297 = EXP 0x2 0xa0
0xeab: V1298 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeac: V1299 = AND 0xffffffffffffffffffffffffffffffffffffffff V1293
0xead: SELFDESTRUCT V1299
---
Entry stack: [V10, 0x140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140]

================================

Block 0xeae
[0xeae:0xeae]
---
Predecessors: []
Successors: [0xeaf]
---
0xeae JUMPDEST
---
0xeae: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xeaf
[0xeaf:0xeb0]
---
Predecessors: [0xeae]
Successors: []
Has unresolved jump.
---
0xeaf JUMPDEST
0xeb0 JUMP
---
0xeaf: JUMPDEST 
0xeb0: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xeb1
[0xeb1:0xeb6]
---
Predecessors: [0x51a]
Successors: [0x23d]
---
0xeb1 JUMPDEST
0xeb2 PUSH1 0x7
0xeb4 SLOAD
0xeb5 DUP2
0xeb6 JUMP
---
0xeb1: JUMPDEST 
0xeb2: V1300 = 0x7
0xeb4: V1301 = S[0x7]
0xeb6: JUMP 0x23d
---
Entry stack: [V10, 0x23d]
Stack pops: 1
Stack additions: [S0, V1301]
Exit stack: [V10, 0x23d, V1301]

================================

Block 0xeb7
[0xeb7:0xed0]
---
Predecessors: [0x53f]
Successors: [0xed1, 0xed5]
---
0xeb7 JUMPDEST
0xeb8 PUSH1 0x3
0xeba SLOAD
0xebb PUSH1 0x0
0xebd SWAP1
0xebe CALLER
0xebf PUSH1 0x1
0xec1 PUSH1 0xa0
0xec3 PUSH1 0x2
0xec5 EXP
0xec6 SUB
0xec7 SWAP1
0xec8 DUP2
0xec9 AND
0xeca SWAP2
0xecb AND
0xecc EQ
0xecd PUSH2 0xed5
0xed0 JUMPI
---
0xeb7: JUMPDEST 
0xeb8: V1302 = 0x3
0xeba: V1303 = S[0x3]
0xebb: V1304 = 0x0
0xebe: V1305 = CALLER
0xebf: V1306 = 0x1
0xec1: V1307 = 0xa0
0xec3: V1308 = 0x2
0xec5: V1309 = EXP 0x2 0xa0
0xec6: V1310 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec9: V1311 = AND 0xffffffffffffffffffffffffffffffffffffffff V1305
0xecb: V1312 = AND V1303 0xffffffffffffffffffffffffffffffffffffffff
0xecc: V1313 = EQ V1312 V1311
0xecd: V1314 = 0xed5
0xed0: JUMPI 0xed5 V1313
---
Entry stack: [V10, 0x140, V470]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x140, V470, 0x0]

================================

Block 0xed1
[0xed1:0xed4]
---
Predecessors: [0xeb7]
Successors: []
---
0xed1 PUSH1 0x0
0xed3 DUP1
0xed4 REVERT
---
0xed1: V1315 = 0x0
0xed4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V470, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V470, 0x0]

================================

Block 0xed5
[0xed5:0xedd]
---
Predecessors: [0xeb7]
Successors: [0xede, 0xee2]
---
0xed5 JUMPDEST
0xed6 PUSH1 0x0
0xed8 DUP3
0xed9 GT
0xeda PUSH2 0xee2
0xedd JUMPI
---
0xed5: JUMPDEST 
0xed6: V1316 = 0x0
0xed9: V1317 = GT V470 0x0
0xeda: V1318 = 0xee2
0xedd: JUMPI 0xee2 V1317
---
Entry stack: [V10, 0x140, V470, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x140, V470, 0x0]

================================

Block 0xede
[0xede:0xee1]
---
Predecessors: [0xed5]
Successors: []
---
0xede PUSH1 0x0
0xee0 DUP1
0xee1 REVERT
---
0xede: V1319 = 0x0
0xee1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x140, V470, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V470, 0x0]

================================

Block 0xee2
[0xee2:0xf25]
---
Predecessors: [0xed5]
Successors: [0xf26]
---
0xee2 JUMPDEST
0xee3 POP
0xee4 PUSH1 0x7
0xee6 DUP1
0xee7 SLOAD
0xee8 SWAP1
0xee9 DUP3
0xeea SWAP1
0xeeb SSTORE
0xeec PUSH32 0xcfa7074b22c98fb9291e698be8caae9fd3391198b3dd068fbe42c6da6b9c9bf5
0xf0d DUP2
0xf0e DUP4
0xf0f PUSH1 0x40
0xf11 MLOAD
0xf12 SWAP2
0xf13 DUP3
0xf14 MSTORE
0xf15 PUSH1 0x20
0xf17 DUP3
0xf18 ADD
0xf19 MSTORE
0xf1a PUSH1 0x40
0xf1c SWAP1
0xf1d DUP2
0xf1e ADD
0xf1f SWAP1
0xf20 MLOAD
0xf21 DUP1
0xf22 SWAP2
0xf23 SUB
0xf24 SWAP1
0xf25 LOG1
---
0xee2: JUMPDEST 
0xee4: V1320 = 0x7
0xee7: V1321 = S[0x7]
0xeeb: S[0x7] = V470
0xeec: V1322 = 0xcfa7074b22c98fb9291e698be8caae9fd3391198b3dd068fbe42c6da6b9c9bf5
0xf0f: V1323 = 0x40
0xf11: V1324 = M[0x40]
0xf14: M[V1324] = V1321
0xf15: V1325 = 0x20
0xf18: V1326 = ADD V1324 0x20
0xf19: M[V1326] = V470
0xf1a: V1327 = 0x40
0xf1e: V1328 = ADD 0x40 V1324
0xf20: V1329 = M[0x40]
0xf23: V1330 = SUB V1328 V1329
0xf25: LOG V1329 V1330 0xcfa7074b22c98fb9291e698be8caae9fd3391198b3dd068fbe42c6da6b9c9bf5
---
Entry stack: [V10, 0x140, V470, 0x0]
Stack pops: 2
Stack additions: [S1, V1321]
Exit stack: [V10, 0x140, V470, V1321]

================================

Block 0xf26
[0xf26:0xf26]
---
Predecessors: [0xee2]
Successors: [0xf27]
---
0xf26 JUMPDEST
---
0xf26: JUMPDEST 
---
Entry stack: [V10, 0x140, V470, V1321]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x140, V470, V1321]

================================

Block 0xf27
[0xf27:0xf2a]
---
Predecessors: [0xf26]
Successors: [0x140]
---
0xf27 JUMPDEST
0xf28 POP
0xf29 POP
0xf2a JUMP
---
0xf27: JUMPDEST 
0xf2a: JUMP 0x140
---
Entry stack: [V10, 0x140, V470, V1321]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xf2b
[0xf2b:0xf34]
---
Predecessors: [0x5a1]
Successors: [0xf35, 0xf39]
---
0xf2b JUMPDEST
0xf2c PUSH1 0x0
0xf2e DUP1
0xf2f DUP3
0xf30 GT
0xf31 PUSH2 0xf39
0xf34 JUMPI
---
0xf2b: JUMPDEST 
0xf2c: V1331 = 0x0
0xf30: V1332 = GT V509 0x0
0xf31: V1333 = 0xf39
0xf34: JUMPI 0xf39 V1332
---
Entry stack: [V10, S7, {0x13d, 0x140}, S5, V509, 0x0, 0x0, 0x5ad, V509]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V10, S7, {0x13d, 0x140}, S5, V509, 0x0, 0x0, 0x5ad, V509, 0x0]

================================

Block 0xf35
[0xf35:0xf38]
---
Predecessors: [0xf2b]
Successors: []
---
0xf35 PUSH1 0x0
0xf37 DUP1
0xf38 REVERT
---
0xf35: V1334 = 0x0
0xf38: REVERT 0x0 0x0
---
Entry stack: [V10, S8, {0x13d, 0x140}, S6, V509, 0x0, 0x0, 0x5ad, V509, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0x13d, 0x140}, S6, V509, 0x0, 0x0, 0x5ad, V509, 0x0]

================================

Block 0xf39
[0xf39:0xf50]
---
Predecessors: [0xf2b]
Successors: [0xfb9]
---
0xf39 JUMPDEST
0xf3a PUSH2 0xf51
0xf3d DUP3
0xf3e PUSH8 0xde0b6b3a7640000
0xf47 PUSH4 0xffffffff
0xf4c PUSH2 0xfb9
0xf4f AND
0xf50 JUMP
---
0xf39: JUMPDEST 
0xf3a: V1335 = 0xf51
0xf3e: V1336 = 0xde0b6b3a7640000
0xf47: V1337 = 0xffffffff
0xf4c: V1338 = 0xfb9
0xf4f: V1339 = AND 0xfb9 0xffffffff
0xf50: JUMP 0xfb9
---
Entry stack: [V10, S8, {0x13d, 0x140}, S6, V509, 0x0, 0x0, 0x5ad, V509, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xf51, S1, 0xde0b6b3a7640000]
Exit stack: [V10, S8, {0x13d, 0x140}, S6, V509, 0x0, 0x0, 0x5ad, V509, 0x0, 0xf51, V509, 0xde0b6b3a7640000]

================================

Block 0xf51
[0xf51:0xf53]
---
Predecessors: [0xf81, 0xfce]
Successors: [0xf54]
---
0xf51 JUMPDEST
0xf52 SWAP1
0xf53 POP
---
0xf51: JUMPDEST 
---
Entry stack: [V10, S9, {0x13d, 0x140}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S9, {0x13d, 0x140}, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xf54
[0xf54:0xf58]
---
Predecessors: [0xf51]
Successors: [0x140, 0x5ad, 0xc42]
---
0xf54 JUMPDEST
0xf55 SWAP2
0xf56 SWAP1
0xf57 POP
0xf58 JUMP
---
0xf54: JUMPDEST 
0xf58: JUMP S2
---
Entry stack: [V10, S8, {0x13d, 0x140}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S8, {0x13d, 0x140}, S6, S5, S4, S3, S0]

================================

Block 0xf59
[0xf59:0xf65]
---
Predecessors: [0x5ad, 0xfe3]
Successors: [0xf66, 0xf75]
---
0xf59 JUMPDEST
0xf5a PUSH1 0x0
0xf5c DUP3
0xf5d DUP3
0xf5e MUL
0xf5f DUP4
0xf60 ISZERO
0xf61 DUP1
0xf62 PUSH2 0xf75
0xf65 JUMPI
---
0xf59: JUMPDEST 
0xf5a: V1340 = 0x0
0xf5e: V1341 = MUL S0 S1
0xf60: V1342 = ISZERO S1
0xf62: V1343 = 0xf75
0xf65: JUMPI 0xf75 V1342
---
Entry stack: [V10, S13, {0x13d, 0x140}, S11, V509, S9, S8, S7, S6, S5, S4, S3, {0x5c4, 0xf51}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1341, V1342]
Exit stack: [V10, S13, {0x13d, 0x140}, S11, V509, S9, S8, S7, S6, S5, S4, S3, {0x5c4, 0xf51}, S1, S0, 0x0, V1341, V1342]

================================

Block 0xf66
[0xf66:0xf70]
---
Predecessors: [0xf59]
Successors: [0xf71, 0xf72]
---
0xf66 POP
0xf67 DUP3
0xf68 DUP5
0xf69 DUP3
0xf6a DUP2
0xf6b ISZERO
0xf6c ISZERO
0xf6d PUSH2 0xf72
0xf70 JUMPI
---
0xf6b: V1344 = ISZERO S4
0xf6c: V1345 = ISZERO V1344
0xf6d: V1346 = 0xf72
0xf70: JUMPI 0xf72 V1345
---
Entry stack: [V10, S16, {0x13d, 0x140}, S14, V509, S12, S11, S10, S9, S8, S7, S6, {0x5c4, 0xf51}, S4, S3, 0x0, V1341, V1342]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V10, S16, {0x13d, 0x140}, S14, V509, S12, S11, S10, S9, S8, S7, S6, {0x5c4, 0xf51}, S4, S3, 0x0, V1341, S3, S4, V1341]

================================

Block 0xf71
[0xf71:0xf71]
---
Predecessors: [0xf66]
Successors: []
---
0xf71 INVALID
---
0xf71: INVALID 
---
Entry stack: [V10, S18, {0x13d, 0x140}, S16, V509, S14, S13, S12, S11, S10, S9, S8, {0x5c4, 0xf51}, S6, S5, 0x0, V1341, S2, S1, V1341]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S18, {0x13d, 0x140}, S16, V509, S14, S13, S12, S11, S10, S9, S8, {0x5c4, 0xf51}, S6, S5, 0x0, V1341, S2, S1, V1341]

================================

Block 0xf72
[0xf72:0xf74]
---
Predecessors: [0xf66]
Successors: [0xf75]
---
0xf72 JUMPDEST
0xf73 DIV
0xf74 EQ
---
0xf72: JUMPDEST 
0xf73: V1347 = DIV V1341 S1
0xf74: V1348 = EQ V1347 S2
---
Entry stack: [V10, S18, {0x13d, 0x140}, S16, V509, S14, S13, S12, S11, S10, S9, S8, {0x5c4, 0xf51}, S6, S5, 0x0, V1341, S2, S1, V1341]
Stack pops: 3
Stack additions: [V1348]
Exit stack: [V10, S18, {0x13d, 0x140}, S16, V509, S14, S13, S12, S11, S10, S9, S8, {0x5c4, 0xf51}, S6, S5, 0x0, V1341, V1348]

================================

Block 0xf75
[0xf75:0xf7b]
---
Predecessors: [0xf59, 0xf72]
Successors: [0xf7c, 0xf7d]
---
0xf75 JUMPDEST
0xf76 ISZERO
0xf77 ISZERO
0xf78 PUSH2 0xf7d
0xf7b JUMPI
---
0xf75: JUMPDEST 
0xf76: V1349 = ISZERO S0
0xf77: V1350 = ISZERO V1349
0xf78: V1351 = 0xf7d
0xf7b: JUMPI 0xf7d V1350
---
Entry stack: [V10, S16, {0x13d, 0x140}, S14, V509, S12, S11, S10, S9, S8, S7, S6, {0x5c4, 0xf51}, S4, S3, 0x0, V1341, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S16, {0x13d, 0x140}, S14, V509, S12, S11, S10, S9, S8, S7, S6, {0x5c4, 0xf51}, S4, S3, 0x0, V1341]

================================

Block 0xf7c
[0xf7c:0xf7c]
---
Predecessors: [0xf75]
Successors: []
---
0xf7c INVALID
---
0xf7c: INVALID 
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, {0x5c4, 0xf51}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, S6, S5, {0x5c4, 0xf51}, S3, S2, 0x0, S0]

================================

Block 0xf7d
[0xf7d:0xf80]
---
Predecessors: [0xf75, 0xf88]
Successors: [0xf81]
---
0xf7d JUMPDEST
0xf7e DUP1
0xf7f SWAP2
0xf80 POP
---
0xf7d: JUMPDEST 
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, {0x5c4, 0x5f0, 0x840, 0xbd3, 0xd20, 0xe06, 0xf51}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, S10, S9, S8, S7, S6, S5, {0x5c4, 0x5f0, 0x840, 0xbd3, 0xd20, 0xe06, 0xf51}, S3, S2, S0, S0]

================================

Block 0xf81
[0xf81:0xf87]
---
Predecessors: [0xf7d]
Successors: [0x5c4, 0x5f0, 0x840, 0xbd3, 0xd20, 0xe06, 0xf51]
---
0xf81 JUMPDEST
0xf82 POP
0xf83 SWAP3
0xf84 SWAP2
0xf85 POP
0xf86 POP
0xf87 JUMP
---
0xf81: JUMPDEST 
0xf87: JUMP {0x5c4, 0x5f0, 0x840, 0xbd3, 0xd20, 0xe06, 0xf51}
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, {0x5c4, 0x5f0, 0x840, 0xbd3, 0xd20, 0xe06, 0xf51}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xf88
[0xf88:0xf95]
---
Predecessors: [0x5c4, 0x7f9, 0xba8, 0xceb, 0xdcd]
Successors: [0xf7d, 0xf96]
---
0xf88 JUMPDEST
0xf89 PUSH1 0x0
0xf8b DUP3
0xf8c DUP3
0xf8d ADD
0xf8e DUP4
0xf8f DUP2
0xf90 LT
0xf91 ISZERO
0xf92 PUSH2 0xf7d
0xf95 JUMPI
---
0xf88: JUMPDEST 
0xf89: V1352 = 0x0
0xf8d: V1353 = ADD S0 S1
0xf90: V1354 = LT V1353 S1
0xf91: V1355 = ISZERO V1354
0xf92: V1356 = 0xf7d
0xf95: JUMPI 0xf7d V1355
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, {0x5f0, 0x840, 0xbd3, 0xd20, 0xe06}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1353]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, {0x5f0, 0x840, 0xbd3, 0xd20, 0xe06}, S1, S0, 0x0, V1353]

================================

Block 0xf96
[0xf96:0xf96]
---
Predecessors: [0xf88]
Successors: []
---
0xf96 INVALID
---
0xf96: INVALID 
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, {0x5f0, 0x840, 0xbd3, 0xd20, 0xe06}, S3, S2, 0x0, V1353]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, S6, S5, {0x5f0, 0x840, 0xbd3, 0xd20, 0xe06}, S3, S2, 0x0, V1353]

================================

Block 0xf97
[0xf97:0xf9a]
---
Predecessors: []
Successors: [0xf9b]
---
0xf97 JUMPDEST
0xf98 DUP1
0xf99 SWAP2
0xf9a POP
---
0xf97: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xf9b
[0xf9b:0xfa1]
---
Predecessors: [0xf97]
Successors: []
Has unresolved jump.
---
0xf9b JUMPDEST
0xf9c POP
0xf9d SWAP3
0xf9e SWAP2
0xf9f POP
0xfa0 POP
0xfa1 JUMP
---
0xf9b: JUMPDEST 
0xfa1: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xfa2
[0xfa2:0xfac]
---
Predecessors: [0x5f0, 0x840, 0x875, 0xbd3, 0xcc2]
Successors: [0xfad, 0xfae]
---
0xfa2 JUMPDEST
0xfa3 PUSH1 0x0
0xfa5 DUP3
0xfa6 DUP3
0xfa7 GT
0xfa8 ISZERO
0xfa9 PUSH2 0xfae
0xfac JUMPI
---
0xfa2: JUMPDEST 
0xfa3: V1357 = 0x0
0xfa7: V1358 = GT S0 S1
0xfa8: V1359 = ISZERO V1358
0xfa9: V1360 = 0xfae
0xfac: JUMPI 0xfae V1359
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, {0x628, 0x875, 0x89e, 0xc0c, 0xceb}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, {0x628, 0x875, 0x89e, 0xc0c, 0xceb}, S1, S0, 0x0]

================================

Block 0xfad
[0xfad:0xfad]
---
Predecessors: [0xfa2]
Successors: []
---
0xfad INVALID
---
0xfad: INVALID 
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, {0x628, 0x875, 0x89e, 0xc0c, 0xceb}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4, {0x628, 0x875, 0x89e, 0xc0c, 0xceb}, S2, S1, 0x0]

================================

Block 0xfae
[0xfae:0xfb2]
---
Predecessors: [0xfa2]
Successors: [0xfb3]
---
0xfae JUMPDEST
0xfaf POP
0xfb0 DUP1
0xfb1 DUP3
0xfb2 SUB
---
0xfae: JUMPDEST 
0xfb2: V1361 = SUB S2 S1
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, {0x628, 0x875, 0x89e, 0xc0c, 0xceb}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1361]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, {0x628, 0x875, 0x89e, 0xc0c, 0xceb}, S2, S1, V1361]

================================

Block 0xfb3
[0xfb3:0xfb8]
---
Predecessors: [0xfae]
Successors: [0x628, 0x875, 0x89e, 0xc0c, 0xceb]
---
0xfb3 JUMPDEST
0xfb4 SWAP3
0xfb5 SWAP2
0xfb6 POP
0xfb7 POP
0xfb8 JUMP
---
0xfb3: JUMPDEST 
0xfb8: JUMP {0x628, 0x875, 0x89e, 0xc0c, 0xceb}
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, {0x628, 0x875, 0x89e, 0xc0c, 0xceb}, S2, S1, V1361]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, V1361]

================================

Block 0xfb9
[0xfb9:0xfc5]
---
Predecessors: [0xc0c, 0xf39]
Successors: [0xfc6, 0xfc7]
---
0xfb9 JUMPDEST
0xfba PUSH1 0x0
0xfbc DUP1
0xfbd DUP3
0xfbe DUP5
0xfbf DUP2
0xfc0 ISZERO
0xfc1 ISZERO
0xfc2 PUSH2 0xfc7
0xfc5 JUMPI
---
0xfb9: JUMPDEST 
0xfba: V1362 = 0x0
0xfc0: V1363 = ISZERO S0
0xfc1: V1364 = ISZERO V1363
0xfc2: V1365 = 0xfc7
0xfc5: JUMPI 0xfc7 V1364
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xc42}, {0xc3d, 0xf51}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xc42}, {0xc3d, 0xf51}, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0xfc6
[0xfc6:0xfc6]
---
Predecessors: [0xfb9]
Successors: []
---
0xfc6 INVALID
---
0xfc6: INVALID 
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0xc42}, {0xc3d, 0xf51}, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0xc42}, {0xc3d, 0xf51}, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0xfc7
[0xfc7:0xfcd]
---
Predecessors: [0xfb9]
Successors: [0xfce]
---
0xfc7 JUMPDEST
0xfc8 DIV
0xfc9 SWAP1
0xfca POP
0xfcb DUP1
0xfcc SWAP2
0xfcd POP
---
0xfc7: JUMPDEST 
0xfc8: V1366 = DIV S0 S1
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0xc42}, {0xc3d, 0xf51}, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V1366, V1366]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0xc42}, {0xc3d, 0xf51}, S5, S4, V1366, V1366]

================================

Block 0xfce
[0xfce:0xfd4]
---
Predecessors: [0xfc7]
Successors: [0xc3d, 0xf51]
---
0xfce JUMPDEST
0xfcf POP
0xfd0 SWAP3
0xfd1 SWAP2
0xfd2 POP
0xfd3 POP
0xfd4 JUMP
---
0xfce: JUMPDEST 
0xfd4: JUMP {0xc3d, 0xf51}
---
Entry stack: [V10, S13, {0x13d, 0x140}, S11, V509, S9, {0x0, 0x140}, S7, S6, {0x0, 0xc42}, {0xc3d, 0xf51}, S3, S2, V1366, V1366]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, S13, {0x13d, 0x140}, S11, V509, S9, {0x0, 0x140}, S7, S6, {0x0, 0xc42}, V1366]

================================

Block 0xfd5
[0xfd5:0xfde]
---
Predecessors: [0xc3d]
Successors: [0xfdf, 0xfe3]
---
0xfd5 JUMPDEST
0xfd6 PUSH1 0x0
0xfd8 DUP1
0xfd9 DUP3
0xfda GT
0xfdb PUSH2 0xfe3
0xfde JUMPI
---
0xfd5: JUMPDEST 
0xfd6: V1367 = 0x0
0xfda: V1368 = GT S0 0x0
0xfdb: V1369 = 0xfe3
0xfde: JUMPI 0xfe3 V1368
---
Entry stack: [V10, S9, {0x13d, 0x140}, S7, V509, S5, {0x0, 0x140}, S3, S2, {0x0, 0xc42}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V10, S9, {0x13d, 0x140}, S7, V509, S5, {0x0, 0x140}, S3, S2, {0x0, 0xc42}, S0, 0x0]

================================

Block 0xfdf
[0xfdf:0xfe2]
---
Predecessors: [0xfd5]
Successors: []
---
0xfdf PUSH1 0x0
0xfe1 DUP1
0xfe2 REVERT
---
0xfdf: V1370 = 0x0
0xfe2: REVERT 0x0 0x0
---
Entry stack: [V10, S10, {0x13d, 0x140}, S8, V509, S6, {0x0, 0x140}, S4, S3, {0x0, 0xc42}, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0x13d, 0x140}, S8, V509, S6, {0x0, 0x140}, S4, S3, {0x0, 0xc42}, S1, 0x0]

================================

Block 0xfe3
[0xfe3:0xffa]
---
Predecessors: [0xfd5]
Successors: [0xf59]
---
0xfe3 JUMPDEST
0xfe4 PUSH2 0xf51
0xfe7 DUP3
0xfe8 PUSH8 0xde0b6b3a7640000
0xff1 PUSH4 0xffffffff
0xff6 PUSH2 0xf59
0xff9 AND
0xffa JUMP
---
0xfe3: JUMPDEST 
0xfe4: V1371 = 0xf51
0xfe8: V1372 = 0xde0b6b3a7640000
0xff1: V1373 = 0xffffffff
0xff6: V1374 = 0xf59
0xff9: V1375 = AND 0xf59 0xffffffff
0xffa: JUMP 0xf59
---
Entry stack: [V10, S10, {0x13d, 0x140}, S8, V509, S6, {0x0, 0x140}, S4, S3, {0x0, 0xc42}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xf51, S1, 0xde0b6b3a7640000]
Exit stack: [V10, S10, {0x13d, 0x140}, S8, V509, S6, {0x0, 0x140}, S4, S3, {0x0, 0xc42}, S1, 0x0, 0xf51, S1, 0xde0b6b3a7640000]

================================

Block 0xffb
[0xffb:0xffd]
---
Predecessors: []
Successors: [0xffe]
---
0xffb JUMPDEST
0xffc SWAP1
0xffd POP
---
0xffb: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xffe
[0xffe:0x1002]
---
Predecessors: [0xffb]
Successors: []
Has unresolved jump.
---
0xffe JUMPDEST
0xfff SWAP2
0x1000 SWAP1
0x1001 POP
0x1002 JUMP
---
0xffe: JUMPDEST 
0x1002: JUMP S2
---
Entry stack: [S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x1003
[0x1003:0x1019]
---
Predecessors: [0xe06]
Successors: [0x101a, 0x101e]
---
0x1003 JUMPDEST
0x1004 PUSH1 0x3
0x1006 SLOAD
0x1007 CALLER
0x1008 PUSH1 0x1
0x100a PUSH1 0xa0
0x100c PUSH1 0x2
0x100e EXP
0x100f SUB
0x1010 SWAP1
0x1011 DUP2
0x1012 AND
0x1013 SWAP2
0x1014 AND
0x1015 EQ
0x1016 PUSH2 0x101e
0x1019 JUMPI
---
0x1003: JUMPDEST 
0x1004: V1376 = 0x3
0x1006: V1377 = S[0x3]
0x1007: V1378 = CALLER
0x1008: V1379 = 0x1
0x100a: V1380 = 0xa0
0x100c: V1381 = 0x2
0x100e: V1382 = EXP 0x2 0xa0
0x100f: V1383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1012: V1384 = AND 0xffffffffffffffffffffffffffffffffffffffff V1378
0x1014: V1385 = AND V1377 0xffffffffffffffffffffffffffffffffffffffff
0x1015: V1386 = EQ V1385 V1384
0x1016: V1387 = 0x101e
0x1019: JUMPI 0x101e V1386
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]

================================

Block 0x101a
[0x101a:0x101d]
---
Predecessors: [0x1003]
Successors: []
---
0x101a PUSH1 0x0
0x101c DUP1
0x101d REVERT
---
0x101a: V1388 = 0x0
0x101d: REVERT 0x0 0x0
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]

================================

Block 0x101e
[0x101e:0x102d]
---
Predecessors: [0x1003]
Successors: [0x102e, 0x1056]
---
0x101e JUMPDEST
0x101f PUSH1 0x1
0x1021 PUSH1 0xa0
0x1023 PUSH1 0x2
0x1025 EXP
0x1026 SUB
0x1027 DUP2
0x1028 AND
0x1029 ISZERO
0x102a PUSH2 0x1056
0x102d JUMPI
---
0x101e: JUMPDEST 
0x101f: V1389 = 0x1
0x1021: V1390 = 0xa0
0x1023: V1391 = 0x2
0x1025: V1392 = EXP 0x2 0xa0
0x1026: V1393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1028: V1394 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1029: V1395 = ISZERO V1394
0x102a: V1396 = 0x1056
0x102d: JUMPI 0x1056 V1395
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]

================================

Block 0x102e
[0x102e:0x1055]
---
Predecessors: [0x101e]
Successors: [0x1056]
---
0x102e PUSH1 0x3
0x1030 DUP1
0x1031 SLOAD
0x1032 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1047 NOT
0x1048 AND
0x1049 PUSH1 0x1
0x104b PUSH1 0xa0
0x104d PUSH1 0x2
0x104f EXP
0x1050 SUB
0x1051 DUP4
0x1052 AND
0x1053 OR
0x1054 SWAP1
0x1055 SSTORE
---
0x102e: V1397 = 0x3
0x1031: V1398 = S[0x3]
0x1032: V1399 = 0xffffffffffffffffffffffffffffffffffffffff
0x1047: V1400 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1048: V1401 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1398
0x1049: V1402 = 0x1
0x104b: V1403 = 0xa0
0x104d: V1404 = 0x2
0x104f: V1405 = EXP 0x2 0xa0
0x1050: V1406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1052: V1407 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1053: V1408 = OR V1407 V1401
0x1055: S[0x3] = V1408
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]

================================

Block 0x1056
[0x1056:0x1056]
---
Predecessors: [0x101e, 0x102e]
Successors: [0x1057]
---
0x1056 JUMPDEST
---
0x1056: JUMPDEST 
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]

================================

Block 0x1057
[0x1057:0x1057]
---
Predecessors: [0x1056]
Successors: [0x1058]
---
0x1057 JUMPDEST
---
0x1057: JUMPDEST 
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0xe39, S0]

================================

Block 0x1058
[0x1058:0x105a]
---
Predecessors: [0x1057]
Successors: [0xe39]
---
0x1058 JUMPDEST
0x1059 POP
0x105a JUMP
---
0x1058: JUMPDEST 
0x105a: JUMP 0xe39
---
Entry stack: [V10, 0x140, V433, V1232, 0xe39, V433]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x140, V433, V1232]

================================

Block 0x105b
[0x105b:0x109d]
---
Predecessors: []
Successors: []
---
0x105b STOP
0x105c LOG1
0x105d PUSH6 0x627a7a723058
0x1064 SHA3
0x1065 MISSING 0xbc
0x1066 PUSH28 0xbacc02c97b553e3ee9ba4de412b8b5d00d796843bf73d389844fc996
0x1083 PUSH26 0x5b0029
---
0x105b: STOP 
0x105c: LOG S0 S1 S2
0x105d: V1409 = 0x627a7a723058
0x1064: V1410 = SHA3 0x627a7a723058 S3
0x1065: MISSING 0xbc
0x1066: V1411 = 0xbacc02c97b553e3ee9ba4de412b8b5d00d796843bf73d389844fc996
0x1083: V1412 = 0x5b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1410, 0x5b0029, 0xbacc02c97b553e3ee9ba4de412b8b5d00d796843bf73d389844fc996]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x142
Exit block: 0x1bf
Body: 0x142, 0x149, 0x14d, 0x155, 0x179, 0x182, 0x18a, 0x192, 0x1a6, 0x1bf, 0x6a5, 0x6f5, 0x6fd, 0x710, 0x71e, 0x732, 0x73b

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x1cd
Exit block: 0x1ef
Body: 0x1cd, 0x1d4, 0x1d8, 0x1ef, 0x743, 0x74d, 0x775, 0x77c, 0x780, 0x7e4

Function 2:
Public function signature: 0xc5a534e
Entry block: 0x203
Exit block: 0x1ef
Body: 0x1ef, 0x203, 0x20a, 0x20e, 0x7ea

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x22a
Exit block: 0x23d
Body: 0x22a, 0x231, 0x235, 0x23d, 0x7f3

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x24f
Exit block: 0x140
Body: 0x140, 0x24f, 0x256, 0x25a, 0x7f9, 0x840

Function 5:
Public function signature: 0x23c4841e
Entry block: 0x28b
Exit block: 0x140
Body: 0x140, 0x28b, 0x292, 0x296, 0x90e, 0x925, 0x929, 0x93c, 0x93d

Function 6:
Public function signature: 0x313ce567
Entry block: 0x2a0
Exit block: 0x23d
Body: 0x23d, 0x2a0, 0x2a7, 0x2ab, 0x93f

Function 7:
Public function signature: 0x385ab2d7
Entry block: 0x2c5
Exit block: 0x1ef
Body: 0x1ef, 0x2c5, 0x2cc, 0x2d0, 0x945

Function 8:
Public function signature: 0x55434bc9
Entry block: 0x2ec
Exit block: 0x140
Body: 0x140, 0x2ec, 0x2f3, 0x2f7, 0x953, 0x96a, 0x96e, 0x98a, 0x98b

Function 9:
Public function signature: 0x6217229b
Entry block: 0x301
Exit block: 0x23d
Body: 0x23d, 0x301, 0x308, 0x30c, 0x98d

Function 10:
Public function signature: 0x70a08231
Entry block: 0x326
Exit block: 0x23d
Body: 0x23d, 0x326, 0x32d, 0x331, 0x993, 0x9ad

Function 11:
Public function signature: 0x8a7f1146
Entry block: 0x357
Exit block: 0x1ef
Body: 0x13d, 0x13e, 0x140, 0x1ef, 0x357, 0x35e, 0x362, 0x9b2, 0x9c9, 0x9cd, 0xa02

Function 12:
Public function signature: 0x8c2e6b3f
Entry block: 0x36c
Exit block: 0x140
Body: 0x140, 0x36c, 0x373, 0x377, 0xa0a, 0xa24, 0xa28, 0xa31, 0xa35, 0xa79, 0xa7a

Function 13:
Public function signature: 0x8da5cb5b
Entry block: 0x384
Exit block: 0x397
Body: 0x384, 0x38b, 0x38f, 0x397, 0xa7e

Function 14:
Public function signature: 0x95d89b41
Entry block: 0x3b3
Exit block: 0x1bf
Body: 0x155, 0x179, 0x182, 0x18a, 0x192, 0x1a6, 0x1bf, 0x3b3, 0x3ba, 0x3be, 0x710, 0x71e, 0x732, 0x73b, 0xa8d, 0xadd, 0xae5

Function 15:
Public function signature: 0x9c7ebb30
Entry block: 0x43e
Exit block: 0x140
Body: 0x140, 0x43e, 0x445, 0x449, 0xb2b, 0xb40, 0xb44, 0xb5c, 0xb60, 0xb71, 0xb75, 0xb7e, 0xb82, 0xba4, 0xba8, 0xbd3

Function 16:
Public function signature: 0xa9059cbb
Entry block: 0x456
Exit block: 0xf96
Body: 0x456, 0x45d, 0x461, 0xcc2, 0xceb, 0xf96

Function 17:
Public function signature: 0xdd62ed3e
Entry block: 0x48c
Exit block: 0x23d
Body: 0x23d, 0x48c, 0x493, 0x497, 0xd82, 0xda9

Function 18:
Public function signature: 0xf2fde38b
Entry block: 0x4c3
Exit block: 0x140
Body: 0x140, 0x4c3, 0x4ca, 0x4ce, 0xdaf, 0xdc9, 0xdcd, 0xe06, 0xe39, 0xe80, 0xe81, 0x1003, 0x101a, 0x101e, 0x102e, 0x1056, 0x1057, 0x1058

Function 19:
Public function signature: 0xf355b92d
Entry block: 0x4e4
Exit block: 0x140
Body: 0x140, 0x4e4

Function 20:
Public function signature: 0xf58fef8e
Entry block: 0x4fa
Exit block: 0xea0
Body: 0x4fa, 0x501, 0x505, 0xe85, 0xe9c, 0xea0

Function 21:
Public function signature: 0xfc37987b
Entry block: 0x50f
Exit block: 0x23d
Body: 0x23d, 0x50f, 0x516, 0x51a, 0xeb1

Function 22:
Public function signature: 0xff993a18
Entry block: 0x534
Exit block: 0x140
Body: 0x140, 0x534, 0x53b, 0x53f, 0xeb7, 0xed1, 0xed5, 0xede, 0xee2, 0xf26, 0xf27

Function 23:
Public fallback function
Entry block: 0x130
Exit block: 0x1ef
Body: 0x130, 0x134, 0x13d, 0x13e, 0x140, 0x1ef

Function 24:
Private function
Entry block: 0xf59
Exit block: 0xf81
Body: 0x5ad, 0x5c4, 0x5f0, 0x5f0, 0x840, 0x875, 0x875, 0xbd3, 0xc0c, 0xc0c, 0xc3d, 0xceb, 0xf51, 0xf54, 0xf59, 0xf66, 0xf72, 0xf75, 0xf7d, 0xf81, 0xfa2, 0xfae, 0xfb3, 0xfb9, 0xfc7, 0xfce, 0xfd5, 0xfe3

Function 25:
Private function
Entry block: 0xf88
Exit block: 0xf81
Body: 0x5ad, 0x5c4, 0x5c4, 0x5f0, 0x5f0, 0xf51, 0xf54, 0xf7d, 0xf81, 0xf88

Function 26:
Private function
Entry block: 0xfb9
Exit block: 0xfce
Body: 0xfb9, 0xfc7, 0xfce

Function 27:
Private function
Entry block: 0xfa2
Exit block: 0xfb3
Body: 0xfa2, 0xfae, 0xfb3

Function 28:
Private function
Entry block: 0x54c
Exit block: 0x69f
Body: 0x54c, 0x564, 0x579, 0x594, 0x5a1, 0x5ad, 0x5c4, 0x5f0, 0x628, 0x69e, 0x69f, 0xc42, 0xc75, 0xcbc, 0xcbd, 0xcbe, 0xf2b, 0xf39, 0xf51, 0xf54

