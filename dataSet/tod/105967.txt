Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x101]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x101
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x101
0xa: JUMPI 0x101 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x103]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x103
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x103
0x24: JUMPI 0x103 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x141]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x141
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x141
0x2f: JUMPI 0x141 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x174]
---
0x30 DUP1
0x31 PUSH4 0x18160ddd
0x36 EQ
0x37 PUSH2 0x174
0x3a JUMPI
---
0x31: V19 = 0x18160ddd
0x36: V20 = EQ 0x18160ddd V12
0x37: V21 = 0x174
0x3a: JUMPI 0x174 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x196]
---
0x3b DUP1
0x3c PUSH4 0x23b872dd
0x41 EQ
0x42 PUSH2 0x196
0x45 JUMPI
---
0x3c: V22 = 0x23b872dd
0x41: V23 = EQ 0x23b872dd V12
0x42: V24 = 0x196
0x45: JUMPI 0x196 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1cf]
---
0x46 DUP1
0x47 PUSH4 0x313ce567
0x4c EQ
0x4d PUSH2 0x1cf
0x50 JUMPI
---
0x47: V25 = 0x313ce567
0x4c: V26 = EQ 0x313ce567 V12
0x4d: V27 = 0x1cf
0x50: JUMPI 0x1cf V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1f5]
---
0x51 DUP1
0x52 PUSH4 0x4ba0a5ee
0x57 EQ
0x58 PUSH2 0x1f5
0x5b JUMPI
---
0x52: V28 = 0x4ba0a5ee
0x57: V29 = EQ 0x4ba0a5ee V12
0x58: V30 = 0x1f5
0x5b: JUMPI 0x1f5 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x225]
---
0x5c DUP1
0x5d PUSH4 0x59138d13
0x62 EQ
0x63 PUSH2 0x225
0x66 JUMPI
---
0x5d: V31 = 0x59138d13
0x62: V32 = EQ 0x59138d13 V12
0x63: V33 = 0x225
0x66: JUMPI 0x225 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x251]
---
0x67 DUP1
0x68 PUSH4 0x618d7ae4
0x6d EQ
0x6e PUSH2 0x251
0x71 JUMPI
---
0x68: V34 = 0x618d7ae4
0x6d: V35 = EQ 0x618d7ae4 V12
0x6e: V36 = 0x251
0x71: JUMPI 0x251 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x26a]
---
0x72 DUP1
0x73 PUSH4 0x70a08231
0x78 EQ
0x79 PUSH2 0x26a
0x7c JUMPI
---
0x73: V37 = 0x70a08231
0x78: V38 = EQ 0x70a08231 V12
0x79: V39 = 0x26a
0x7c: JUMPI 0x26a V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x298]
---
0x7d DUP1
0x7e PUSH4 0x7adbf973
0x83 EQ
0x84 PUSH2 0x298
0x87 JUMPI
---
0x7e: V40 = 0x7adbf973
0x83: V41 = EQ 0x7adbf973 V12
0x84: V42 = 0x298
0x87: JUMPI 0x298 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2b6]
---
0x88 DUP1
0x89 PUSH4 0x7dc0d1d0
0x8e EQ
0x8f PUSH2 0x2b6
0x92 JUMPI
---
0x89: V43 = 0x7dc0d1d0
0x8e: V44 = EQ 0x7dc0d1d0 V12
0x8f: V45 = 0x2b6
0x92: JUMPI 0x2b6 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2e2]
---
0x93 DUP1
0x94 PUSH4 0x8da5cb5b
0x99 EQ
0x9a PUSH2 0x2e2
0x9d JUMPI
---
0x94: V46 = 0x8da5cb5b
0x99: V47 = EQ 0x8da5cb5b V12
0x9a: V48 = 0x2e2
0x9d: JUMPI 0x2e2 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x30e]
---
0x9e DUP1
0x9f PUSH4 0x95d89b41
0xa4 EQ
0xa5 PUSH2 0x30e
0xa8 JUMPI
---
0x9f: V49 = 0x95d89b41
0xa4: V50 = EQ 0x95d89b41 V12
0xa5: V51 = 0x30e
0xa8: JUMPI 0x30e V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x353]
---
0xa9 DUP1
0xaa PUSH4 0x9d0bcca0
0xaf EQ
0xb0 PUSH2 0x353
0xb3 JUMPI
---
0xaa: V52 = 0x9d0bcca0
0xaf: V53 = EQ 0x9d0bcca0 V12
0xb0: V54 = 0x353
0xb3: JUMPI 0x353 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x37f]
---
0xb4 DUP1
0xb5 PUSH4 0xa0712d68
0xba EQ
0xbb PUSH2 0x37f
0xbe JUMPI
---
0xb5: V55 = 0xa0712d68
0xba: V56 = EQ 0xa0712d68 V12
0xbb: V57 = 0x37f
0xbe: JUMPI 0x37f V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x394]
---
0xbf DUP1
0xc0 PUSH4 0xaaf50292
0xc5 EQ
0xc6 PUSH2 0x394
0xc9 JUMPI
---
0xc0: V58 = 0xaaf50292
0xc5: V59 = EQ 0xaaf50292 V12
0xc6: V60 = 0x394
0xc9: JUMPI 0x394 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3b2]
---
0xca DUP1
0xcb PUSH4 0xbeabacc8
0xd0 EQ
0xd1 PUSH2 0x3b2
0xd4 JUMPI
---
0xcb: V61 = 0xbeabacc8
0xd0: V62 = EQ 0xbeabacc8 V12
0xd1: V63 = 0x3b2
0xd4: JUMPI 0x3b2 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3eb]
---
0xd5 DUP1
0xd6 PUSH4 0xd5582965
0xdb EQ
0xdc PUSH2 0x3eb
0xdf JUMPI
---
0xd6: V64 = 0xd5582965
0xdb: V65 = EQ 0xd5582965 V12
0xdc: V66 = 0x3eb
0xdf: JUMPI 0x3eb V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3fd]
---
0xe0 DUP1
0xe1 PUSH4 0xdd62ed3e
0xe6 EQ
0xe7 PUSH2 0x3fd
0xea JUMPI
---
0xe1: V67 = 0xdd62ed3e
0xe6: V68 = EQ 0xdd62ed3e V12
0xe7: V69 = 0x3fd
0xea: JUMPI 0x3fd V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x431]
---
0xeb DUP1
0xec PUSH4 0xeeeb702e
0xf1 EQ
0xf2 PUSH2 0x431
0xf5 JUMPI
---
0xec: V70 = 0xeeeb702e
0xf1: V71 = EQ 0xeeeb702e V12
0xf2: V72 = 0x431
0xf5: JUMPI 0x431 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x443]
---
0xf6 DUP1
0xf7 PUSH4 0xf2fde38b
0xfc EQ
0xfd PUSH2 0x443
0x100 JUMPI
---
0xf7: V73 = 0xf2fde38b
0xfc: V74 = EQ 0xf2fde38b V12
0xfd: V75 = 0x443
0x100: JUMPI 0x443 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x102]
---
Predecessors: [0x0, 0xf6]
Successors: []
---
0x101 JUMPDEST
0x102 INVALID
---
0x101: JUMPDEST 
0x102: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x103
[0x103:0x109]
---
Predecessors: [0xb]
Successors: [0x10a, 0x10b]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 ISZERO
0x106 PUSH2 0x10b
0x109 JUMPI
---
0x103: JUMPDEST 
0x104: V76 = CALLVALUE
0x105: V77 = ISZERO V76
0x106: V78 = 0x10b
0x109: JUMPI 0x10b V77
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0x103]
Successors: []
---
0x10a INVALID
---
0x10a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x103]
Successors: [0x461]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x461
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V79 = 0x113
0x10f: V80 = 0x461
0x112: JUMP 0x461
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V12, 0x113]

================================

Block 0x113
[0x113:0x140]
---
Predecessors: [0x480]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 DUP1
0x117 MLOAD
0x118 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x131 NOT
0x132 SWAP1
0x133 SWAP3
0x134 AND
0x135 DUP3
0x136 MSTORE
0x137 MLOAD
0x138 SWAP1
0x139 DUP2
0x13a SWAP1
0x13b SUB
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP1
0x140 RETURN
---
0x113: JUMPDEST 
0x114: V81 = 0x40
0x117: V82 = M[0x40]
0x118: V83 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x131: V84 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x134: V85 = AND V403 0xffffffffffffffff000000000000000000000000000000000000000000000000
0x136: M[V82] = V85
0x137: V86 = M[0x40]
0x13b: V87 = SUB V82 V86
0x13c: V88 = 0x20
0x13e: V89 = ADD 0x20 V87
0x140: RETURN V86 V89
---
Entry stack: [V12, V403]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x141
[0x141:0x147]
---
Predecessors: [0x25]
Successors: [0x148, 0x149]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 ISZERO
0x144 PUSH2 0x149
0x147 JUMPI
---
0x141: JUMPDEST 
0x142: V90 = CALLVALUE
0x143: V91 = ISZERO V90
0x144: V92 = 0x149
0x147: JUMPI 0x149 V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x148
[0x148:0x148]
---
Predecessors: [0x141]
Successors: []
---
0x148 INVALID
---
0x148: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x149
[0x149:0x15f]
---
Predecessors: [0x141]
Successors: [0x483]
---
0x149 JUMPDEST
0x14a PUSH2 0x160
0x14d PUSH1 0x1
0x14f PUSH1 0xa0
0x151 PUSH1 0x2
0x153 EXP
0x154 SUB
0x155 PUSH1 0x4
0x157 CALLDATALOAD
0x158 AND
0x159 PUSH1 0x24
0x15b CALLDATALOAD
0x15c PUSH2 0x483
0x15f JUMP
---
0x149: JUMPDEST 
0x14a: V93 = 0x160
0x14d: V94 = 0x1
0x14f: V95 = 0xa0
0x151: V96 = 0x2
0x153: V97 = EXP 0x2 0xa0
0x154: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V99 = 0x4
0x157: V100 = CALLDATALOAD 0x4
0x158: V101 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x159: V102 = 0x24
0x15b: V103 = CALLDATALOAD 0x24
0x15c: V104 = 0x483
0x15f: JUMP 0x483
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160, V101, V103]
Exit stack: [V12, 0x160, V101, V103]

================================

Block 0x160
[0x160:0x173]
---
Predecessors: [0x486, 0x496, 0x4b7, 0xa5d]
Successors: []
---
0x160 JUMPDEST
0x161 PUSH1 0x40
0x163 DUP1
0x164 MLOAD
0x165 SWAP2
0x166 ISZERO
0x167 ISZERO
0x168 DUP3
0x169 MSTORE
0x16a MLOAD
0x16b SWAP1
0x16c DUP2
0x16d SWAP1
0x16e SUB
0x16f PUSH1 0x20
0x171 ADD
0x172 SWAP1
0x173 RETURN
---
0x160: JUMPDEST 
0x161: V105 = 0x40
0x164: V106 = M[0x40]
0x166: V107 = ISZERO S0
0x167: V108 = ISZERO V107
0x169: M[V106] = V108
0x16a: V109 = M[0x40]
0x16e: V110 = SUB V106 V109
0x16f: V111 = 0x20
0x171: V112 = ADD 0x20 V110
0x173: RETURN V109 V112
---
Entry stack: [V12, 0x268, V209, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x268, V209, S2, S1]

================================

Block 0x174
[0x174:0x17a]
---
Predecessors: [0x30]
Successors: [0x17b, 0x17c]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 ISZERO
0x177 PUSH2 0x17c
0x17a JUMPI
---
0x174: JUMPDEST 
0x175: V113 = CALLVALUE
0x176: V114 = ISZERO V113
0x177: V115 = 0x17c
0x17a: JUMPI 0x17c V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17b
[0x17b:0x17b]
---
Predecessors: [0x174]
Successors: []
---
0x17b INVALID
---
0x17b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x174]
Successors: [0x48c]
---
0x17c JUMPDEST
0x17d PUSH2 0x184
0x180 PUSH2 0x48c
0x183 JUMP
---
0x17c: JUMPDEST 
0x17d: V116 = 0x184
0x180: V117 = 0x48c
0x183: JUMP 0x48c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x184]
Exit stack: [V12, 0x184]

================================

Block 0x184
[0x184:0x195]
---
Predecessors: [0x486, 0x490, 0x6c9]
Successors: []
---
0x184 JUMPDEST
0x185 PUSH1 0x40
0x187 DUP1
0x188 MLOAD
0x189 SWAP2
0x18a DUP3
0x18b MSTORE
0x18c MLOAD
0x18d SWAP1
0x18e DUP2
0x18f SWAP1
0x190 SUB
0x191 PUSH1 0x20
0x193 ADD
0x194 SWAP1
0x195 RETURN
---
0x184: JUMPDEST 
0x185: V118 = 0x40
0x188: V119 = M[0x40]
0x18b: M[V119] = S0
0x18c: V120 = M[0x40]
0x190: V121 = SUB V119 V120
0x191: V122 = 0x20
0x193: V123 = ADD 0x20 V121
0x195: RETURN V120 V123
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x196
[0x196:0x19c]
---
Predecessors: [0x3b]
Successors: [0x19d, 0x19e]
---
0x196 JUMPDEST
0x197 CALLVALUE
0x198 ISZERO
0x199 PUSH2 0x19e
0x19c JUMPI
---
0x196: JUMPDEST 
0x197: V124 = CALLVALUE
0x198: V125 = ISZERO V124
0x199: V126 = 0x19e
0x19c: JUMPI 0x19e V125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19d
[0x19d:0x19d]
---
Predecessors: [0x196]
Successors: []
---
0x19d INVALID
---
0x19d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19e
[0x19e:0x1ba]
---
Predecessors: [0x196]
Successors: [0x493]
---
0x19e JUMPDEST
0x19f PUSH2 0x160
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa PUSH1 0x4
0x1ac CALLDATALOAD
0x1ad DUP2
0x1ae AND
0x1af SWAP1
0x1b0 PUSH1 0x24
0x1b2 CALLDATALOAD
0x1b3 AND
0x1b4 PUSH1 0x44
0x1b6 CALLDATALOAD
0x1b7 PUSH2 0x493
0x1ba JUMP
---
0x19e: JUMPDEST 
0x19f: V127 = 0x160
0x1a2: V128 = 0x1
0x1a4: V129 = 0xa0
0x1a6: V130 = 0x2
0x1a8: V131 = EXP 0x2 0xa0
0x1a9: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1aa: V133 = 0x4
0x1ac: V134 = CALLDATALOAD 0x4
0x1ae: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x1b0: V136 = 0x24
0x1b2: V137 = CALLDATALOAD 0x24
0x1b3: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V139 = 0x44
0x1b6: V140 = CALLDATALOAD 0x44
0x1b7: V141 = 0x493
0x1ba: JUMP 0x493
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160, V135, V138, V140]
Exit stack: [V12, 0x160, V135, V138, V140]

================================

Block 0x1bb
[0x1bb:0x1ce]
---
Predecessors: []
Successors: []
---
0x1bb JUMPDEST
0x1bc PUSH1 0x40
0x1be DUP1
0x1bf MLOAD
0x1c0 SWAP2
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 DUP3
0x1c4 MSTORE
0x1c5 MLOAD
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 SWAP1
0x1c9 SUB
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP1
0x1ce RETURN
---
0x1bb: JUMPDEST 
0x1bc: V142 = 0x40
0x1bf: V143 = M[0x40]
0x1c1: V144 = ISZERO S0
0x1c2: V145 = ISZERO V144
0x1c4: M[V143] = V145
0x1c5: V146 = M[0x40]
0x1c9: V147 = SUB V143 V146
0x1ca: V148 = 0x20
0x1cc: V149 = ADD 0x20 V147
0x1ce: RETURN V146 V149
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x46]
Successors: [0x1d6, 0x1d7]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1d7
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V150 = CALLVALUE
0x1d1: V151 = ISZERO V150
0x1d2: V152 = 0x1d7
0x1d5: JUMPI 0x1d7 V151
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d6
[0x1d6:0x1d6]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 INVALID
---
0x1d6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x1cf]
Successors: [0x49d]
---
0x1d7 JUMPDEST
0x1d8 PUSH2 0x1df
0x1db PUSH2 0x49d
0x1de JUMP
---
0x1d7: JUMPDEST 
0x1d8: V153 = 0x1df
0x1db: V154 = 0x49d
0x1de: JUMP 0x49d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1df]
Exit stack: [V12, 0x1df]

================================

Block 0x1df
[0x1df:0x1f4]
---
Predecessors: [0x4b4]
Successors: []
---
0x1df JUMPDEST
0x1e0 PUSH1 0x40
0x1e2 DUP1
0x1e3 MLOAD
0x1e4 PUSH1 0xff
0x1e6 SWAP1
0x1e7 SWAP3
0x1e8 AND
0x1e9 DUP3
0x1ea MSTORE
0x1eb MLOAD
0x1ec SWAP1
0x1ed DUP2
0x1ee SWAP1
0x1ef SUB
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP1
0x1f4 RETURN
---
0x1df: JUMPDEST 
0x1e0: V155 = 0x40
0x1e3: V156 = M[0x40]
0x1e4: V157 = 0xff
0x1e8: V158 = AND V413 0xff
0x1ea: M[V156] = V158
0x1eb: V159 = M[0x40]
0x1ef: V160 = SUB V156 V159
0x1f0: V161 = 0x20
0x1f2: V162 = ADD 0x20 V160
0x1f4: RETURN V159 V162
---
Entry stack: [V12, V413]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x51]
Successors: [0x1fc, 0x1fd]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 ISZERO
0x1f8 PUSH2 0x1fd
0x1fb JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V163 = CALLVALUE
0x1f7: V164 = ISZERO V163
0x1f8: V165 = 0x1fd
0x1fb: JUMPI 0x1fd V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x1fc]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fc INVALID
---
0x1fc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x210]
---
Predecessors: [0x1f5]
Successors: [0x4b7]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x160
0x201 PUSH1 0x1
0x203 PUSH1 0xa0
0x205 PUSH1 0x2
0x207 EXP
0x208 SUB
0x209 PUSH1 0x4
0x20b CALLDATALOAD
0x20c AND
0x20d PUSH2 0x4b7
0x210 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V166 = 0x160
0x201: V167 = 0x1
0x203: V168 = 0xa0
0x205: V169 = 0x2
0x207: V170 = EXP 0x2 0xa0
0x208: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V172 = 0x4
0x20b: V173 = CALLDATALOAD 0x4
0x20c: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V175 = 0x4b7
0x210: JUMP 0x4b7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160, V174]
Exit stack: [V12, 0x160, V174]

================================

Block 0x211
[0x211:0x224]
---
Predecessors: []
Successors: []
---
0x211 JUMPDEST
0x212 PUSH1 0x40
0x214 DUP1
0x215 MLOAD
0x216 SWAP2
0x217 ISZERO
0x218 ISZERO
0x219 DUP3
0x21a MSTORE
0x21b MLOAD
0x21c SWAP1
0x21d DUP2
0x21e SWAP1
0x21f SUB
0x220 PUSH1 0x20
0x222 ADD
0x223 SWAP1
0x224 RETURN
---
0x211: JUMPDEST 
0x212: V176 = 0x40
0x215: V177 = M[0x40]
0x217: V178 = ISZERO S0
0x218: V179 = ISZERO V178
0x21a: M[V177] = V179
0x21b: V180 = M[0x40]
0x21f: V181 = SUB V177 V180
0x220: V182 = 0x20
0x222: V183 = ADD 0x20 V181
0x224: RETURN V180 V183
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x5c]
Successors: [0x22c, 0x22d]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x22d
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V184 = CALLVALUE
0x227: V185 = ISZERO V184
0x228: V186 = 0x22d
0x22b: JUMPI 0x22d V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x22c]
---
Predecessors: [0x225]
Successors: []
---
0x22c INVALID
---
0x22c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x234]
---
Predecessors: [0x225]
Successors: [0x4cc]
---
0x22d JUMPDEST
0x22e PUSH2 0x235
0x231 PUSH2 0x4cc
0x234 JUMP
---
0x22d: JUMPDEST 
0x22e: V187 = 0x235
0x231: V188 = 0x4cc
0x234: JUMP 0x4cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V12, 0x235]

================================

Block 0x235
[0x235:0x250]
---
Predecessors: [0x4cc, 0x782, 0x79e, 0x7ba]
Successors: []
---
0x235 JUMPDEST
0x236 PUSH1 0x40
0x238 DUP1
0x239 MLOAD
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 SWAP1
0x243 SWAP3
0x244 AND
0x245 DUP3
0x246 MSTORE
0x247 MLOAD
0x248 SWAP1
0x249 DUP2
0x24a SWAP1
0x24b SUB
0x24c PUSH1 0x20
0x24e ADD
0x24f SWAP1
0x250 RETURN
---
0x235: JUMPDEST 
0x236: V189 = 0x40
0x239: V190 = M[0x40]
0x23a: V191 = 0x1
0x23c: V192 = 0xa0
0x23e: V193 = 0x2
0x240: V194 = EXP 0x2 0xa0
0x241: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V196 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x246: M[V190] = V196
0x247: V197 = M[0x40]
0x24b: V198 = SUB V190 V197
0x24c: V199 = 0x20
0x24e: V200 = ADD 0x20 V198
0x250: RETURN V197 V200
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x251
[0x251:0x267]
---
Predecessors: [0x67]
Successors: [0x4db]
---
0x251 JUMPDEST
0x252 PUSH2 0x268
0x255 PUSH1 0x1
0x257 PUSH1 0xa0
0x259 PUSH1 0x2
0x25b EXP
0x25c SUB
0x25d PUSH1 0x4
0x25f CALLDATALOAD
0x260 AND
0x261 PUSH1 0x24
0x263 CALLDATALOAD
0x264 PUSH2 0x4db
0x267 JUMP
---
0x251: JUMPDEST 
0x252: V201 = 0x268
0x255: V202 = 0x1
0x257: V203 = 0xa0
0x259: V204 = 0x2
0x25b: V205 = EXP 0x2 0xa0
0x25c: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25d: V207 = 0x4
0x25f: V208 = CALLDATALOAD 0x4
0x260: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x261: V210 = 0x24
0x263: V211 = CALLDATALOAD 0x24
0x264: V212 = 0x4db
0x267: JUMP 0x4db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x268, V209, V211]
Exit stack: [V12, 0x268, V209, V211]

================================

Block 0x268
[0x268:0x269]
---
Predecessors: [0x623, 0x77f, 0xac7]
Successors: []
---
0x268 JUMPDEST
0x269 STOP
---
0x268: JUMPDEST 
0x269: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26a
[0x26a:0x270]
---
Predecessors: [0x72]
Successors: [0x271, 0x272]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c ISZERO
0x26d PUSH2 0x272
0x270 JUMPI
---
0x26a: JUMPDEST 
0x26b: V213 = CALLVALUE
0x26c: V214 = ISZERO V213
0x26d: V215 = 0x272
0x270: JUMPI 0x272 V214
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x271
[0x271:0x271]
---
Predecessors: [0x26a]
Successors: []
---
0x271 INVALID
---
0x271: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x272
[0x272:0x285]
---
Predecessors: [0x26a]
Successors: [0x628]
---
0x272 JUMPDEST
0x273 PUSH2 0x184
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e PUSH1 0x4
0x280 CALLDATALOAD
0x281 AND
0x282 PUSH2 0x628
0x285 JUMP
---
0x272: JUMPDEST 
0x273: V216 = 0x184
0x276: V217 = 0x1
0x278: V218 = 0xa0
0x27a: V219 = 0x2
0x27c: V220 = EXP 0x2 0xa0
0x27d: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V222 = 0x4
0x280: V223 = CALLDATALOAD 0x4
0x281: V224 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x282: V225 = 0x628
0x285: JUMP 0x628
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x184, V224]
Exit stack: [V12, 0x184, V224]

================================

Block 0x286
[0x286:0x297]
---
Predecessors: []
Successors: []
---
0x286 JUMPDEST
0x287 PUSH1 0x40
0x289 DUP1
0x28a MLOAD
0x28b SWAP2
0x28c DUP3
0x28d MSTORE
0x28e MLOAD
0x28f SWAP1
0x290 DUP2
0x291 SWAP1
0x292 SUB
0x293 PUSH1 0x20
0x295 ADD
0x296 SWAP1
0x297 RETURN
---
0x286: JUMPDEST 
0x287: V226 = 0x40
0x28a: V227 = M[0x40]
0x28d: M[V227] = S0
0x28e: V228 = M[0x40]
0x292: V229 = SUB V227 V228
0x293: V230 = 0x20
0x295: V231 = ADD 0x20 V229
0x297: RETURN V228 V231
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x298
[0x298:0x29e]
---
Predecessors: [0x7d]
Successors: [0x29f, 0x2a0]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a ISZERO
0x29b PUSH2 0x2a0
0x29e JUMPI
---
0x298: JUMPDEST 
0x299: V232 = CALLVALUE
0x29a: V233 = ISZERO V232
0x29b: V234 = 0x2a0
0x29e: JUMPI 0x2a0 V233
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29f
[0x29f:0x29f]
---
Predecessors: [0x298]
Successors: []
---
0x29f INVALID
---
0x29f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2b3]
---
Predecessors: [0x298]
Successors: [0x6ce]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x268
0x2a4 PUSH1 0x1
0x2a6 PUSH1 0xa0
0x2a8 PUSH1 0x2
0x2aa EXP
0x2ab SUB
0x2ac PUSH1 0x4
0x2ae CALLDATALOAD
0x2af AND
0x2b0 PUSH2 0x6ce
0x2b3 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V235 = 0x268
0x2a4: V236 = 0x1
0x2a6: V237 = 0xa0
0x2a8: V238 = 0x2
0x2aa: V239 = EXP 0x2 0xa0
0x2ab: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ac: V241 = 0x4
0x2ae: V242 = CALLDATALOAD 0x4
0x2af: V243 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V244 = 0x6ce
0x2b3: JUMP 0x6ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x268, V243]
Exit stack: [V12, 0x268, V243]

================================

Block 0x2b4
[0x2b4:0x2b5]
---
Predecessors: []
Successors: []
---
0x2b4 JUMPDEST
0x2b5 STOP
---
0x2b4: JUMPDEST 
0x2b5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b6
[0x2b6:0x2bc]
---
Predecessors: [0x88]
Successors: [0x2bd, 0x2be]
---
0x2b6 JUMPDEST
0x2b7 CALLVALUE
0x2b8 ISZERO
0x2b9 PUSH2 0x2be
0x2bc JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V245 = CALLVALUE
0x2b8: V246 = ISZERO V245
0x2b9: V247 = 0x2be
0x2bc: JUMPI 0x2be V246
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bd
[0x2bd:0x2bd]
---
Predecessors: [0x2b6]
Successors: []
---
0x2bd INVALID
---
0x2bd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2be
[0x2be:0x2c5]
---
Predecessors: [0x2b6]
Successors: [0x782]
---
0x2be JUMPDEST
0x2bf PUSH2 0x235
0x2c2 PUSH2 0x782
0x2c5 JUMP
---
0x2be: JUMPDEST 
0x2bf: V248 = 0x235
0x2c2: V249 = 0x782
0x2c5: JUMP 0x782
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V12, 0x235]

================================

Block 0x2c6
[0x2c6:0x2e1]
---
Predecessors: []
Successors: []
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x40
0x2c9 DUP1
0x2ca MLOAD
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 SWAP1
0x2d4 SWAP3
0x2d5 AND
0x2d6 DUP3
0x2d7 MSTORE
0x2d8 MLOAD
0x2d9 SWAP1
0x2da DUP2
0x2db SWAP1
0x2dc SUB
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 SWAP1
0x2e1 RETURN
---
0x2c6: JUMPDEST 
0x2c7: V250 = 0x40
0x2ca: V251 = M[0x40]
0x2cb: V252 = 0x1
0x2cd: V253 = 0xa0
0x2cf: V254 = 0x2
0x2d1: V255 = EXP 0x2 0xa0
0x2d2: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V257 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: M[V251] = V257
0x2d8: V258 = M[0x40]
0x2dc: V259 = SUB V251 V258
0x2dd: V260 = 0x20
0x2df: V261 = ADD 0x20 V259
0x2e1: RETURN V258 V261
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e2
[0x2e2:0x2e8]
---
Predecessors: [0x93]
Successors: [0x2e9, 0x2ea]
---
0x2e2 JUMPDEST
0x2e3 CALLVALUE
0x2e4 ISZERO
0x2e5 PUSH2 0x2ea
0x2e8 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V262 = CALLVALUE
0x2e4: V263 = ISZERO V262
0x2e5: V264 = 0x2ea
0x2e8: JUMPI 0x2ea V263
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e9
[0x2e9:0x2e9]
---
Predecessors: [0x2e2]
Successors: []
---
0x2e9 INVALID
---
0x2e9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ea
[0x2ea:0x2f1]
---
Predecessors: [0x2e2]
Successors: [0x791]
---
0x2ea JUMPDEST
0x2eb PUSH2 0x235
0x2ee PUSH2 0x791
0x2f1 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V265 = 0x235
0x2ee: V266 = 0x791
0x2f1: JUMP 0x791
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V12, 0x235]

================================

Block 0x2f2
[0x2f2:0x30d]
---
Predecessors: []
Successors: []
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x40
0x2f5 DUP1
0x2f6 MLOAD
0x2f7 PUSH1 0x1
0x2f9 PUSH1 0xa0
0x2fb PUSH1 0x2
0x2fd EXP
0x2fe SUB
0x2ff SWAP1
0x300 SWAP3
0x301 AND
0x302 DUP3
0x303 MSTORE
0x304 MLOAD
0x305 SWAP1
0x306 DUP2
0x307 SWAP1
0x308 SUB
0x309 PUSH1 0x20
0x30b ADD
0x30c SWAP1
0x30d RETURN
---
0x2f2: JUMPDEST 
0x2f3: V267 = 0x40
0x2f6: V268 = M[0x40]
0x2f7: V269 = 0x1
0x2f9: V270 = 0xa0
0x2fb: V271 = 0x2
0x2fd: V272 = EXP 0x2 0xa0
0x2fe: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x301: V274 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x303: M[V268] = V274
0x304: V275 = M[0x40]
0x308: V276 = SUB V268 V275
0x309: V277 = 0x20
0x30b: V278 = ADD 0x20 V276
0x30d: RETURN V275 V278
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0x9e]
Successors: [0x315, 0x316]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x316
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V279 = CALLVALUE
0x310: V280 = ISZERO V279
0x311: V281 = 0x316
0x314: JUMPI 0x316 V280
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x315
[0x315:0x315]
---
Predecessors: [0x30e]
Successors: []
---
0x315 INVALID
---
0x315: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x316
[0x316:0x31d]
---
Predecessors: [0x30e]
Successors: [0x7a1]
---
0x316 JUMPDEST
0x317 PUSH2 0x31e
0x31a PUSH2 0x7a1
0x31d JUMP
---
0x316: JUMPDEST 
0x317: V282 = 0x31e
0x31a: V283 = 0x7a1
0x31d: JUMP 0x7a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x31e]
Exit stack: [V12, 0x31e]

================================

Block 0x31e
[0x31e:0x352]
---
Predecessors: [0x7b7]
Successors: []
---
0x31e JUMPDEST
0x31f PUSH1 0x40
0x321 DUP1
0x322 MLOAD
0x323 PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000
0x344 SWAP1
0x345 SWAP3
0x346 AND
0x347 DUP3
0x348 MSTORE
0x349 MLOAD
0x34a SWAP1
0x34b DUP2
0x34c SWAP1
0x34d SUB
0x34e PUSH1 0x20
0x350 ADD
0x351 SWAP1
0x352 RETURN
---
0x31e: JUMPDEST 
0x31f: V284 = 0x40
0x322: V285 = M[0x40]
0x323: V286 = 0xffffffff00000000000000000000000000000000000000000000000000000000
0x346: V287 = AND V686 0xffffffff00000000000000000000000000000000000000000000000000000000
0x348: M[V285] = V287
0x349: V288 = M[0x40]
0x34d: V289 = SUB V285 V288
0x34e: V290 = 0x20
0x350: V291 = ADD 0x20 V289
0x352: RETURN V288 V291
---
Entry stack: [V12, V686]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x353
[0x353:0x359]
---
Predecessors: [0xa9]
Successors: [0x35a, 0x35b]
---
0x353 JUMPDEST
0x354 CALLVALUE
0x355 ISZERO
0x356 PUSH2 0x35b
0x359 JUMPI
---
0x353: JUMPDEST 
0x354: V292 = CALLVALUE
0x355: V293 = ISZERO V292
0x356: V294 = 0x35b
0x359: JUMPI 0x35b V293
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35a
[0x35a:0x35a]
---
Predecessors: [0x353]
Successors: []
---
0x35a INVALID
---
0x35a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35b
[0x35b:0x362]
---
Predecessors: [0x353]
Successors: [0x7ba]
---
0x35b JUMPDEST
0x35c PUSH2 0x235
0x35f PUSH2 0x7ba
0x362 JUMP
---
0x35b: JUMPDEST 
0x35c: V295 = 0x235
0x35f: V296 = 0x7ba
0x362: JUMP 0x7ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V12, 0x235]

================================

Block 0x363
[0x363:0x37e]
---
Predecessors: []
Successors: []
---
0x363 JUMPDEST
0x364 PUSH1 0x40
0x366 DUP1
0x367 MLOAD
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 SWAP1
0x371 SWAP3
0x372 AND
0x373 DUP3
0x374 MSTORE
0x375 MLOAD
0x376 SWAP1
0x377 DUP2
0x378 SWAP1
0x379 SUB
0x37a PUSH1 0x20
0x37c ADD
0x37d SWAP1
0x37e RETURN
---
0x363: JUMPDEST 
0x364: V297 = 0x40
0x367: V298 = M[0x40]
0x368: V299 = 0x1
0x36a: V300 = 0xa0
0x36c: V301 = 0x2
0x36e: V302 = EXP 0x2 0xa0
0x36f: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x372: V304 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x374: M[V298] = V304
0x375: V305 = M[0x40]
0x379: V306 = SUB V298 V305
0x37a: V307 = 0x20
0x37c: V308 = ADD 0x20 V306
0x37e: RETURN V305 V308
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37f
[0x37f:0x385]
---
Predecessors: [0xb4]
Successors: [0x386, 0x387]
---
0x37f JUMPDEST
0x380 CALLVALUE
0x381 ISZERO
0x382 PUSH2 0x387
0x385 JUMPI
---
0x37f: JUMPDEST 
0x380: V309 = CALLVALUE
0x381: V310 = ISZERO V309
0x382: V311 = 0x387
0x385: JUMPI 0x387 V310
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x386
[0x386:0x386]
---
Predecessors: [0x37f]
Successors: []
---
0x386 INVALID
---
0x386: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x387
[0x387:0x391]
---
Predecessors: [0x37f]
Successors: [0x7c9]
---
0x387 JUMPDEST
0x388 PUSH2 0x268
0x38b PUSH1 0x4
0x38d CALLDATALOAD
0x38e PUSH2 0x7c9
0x391 JUMP
---
0x387: JUMPDEST 
0x388: V312 = 0x268
0x38b: V313 = 0x4
0x38d: V314 = CALLDATALOAD 0x4
0x38e: V315 = 0x7c9
0x391: JUMP 0x7c9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x268, V314]
Exit stack: [V12, 0x268, V314]

================================

Block 0x392
[0x392:0x393]
---
Predecessors: []
Successors: []
---
0x392 JUMPDEST
0x393 STOP
---
0x392: JUMPDEST 
0x393: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x394
[0x394:0x39a]
---
Predecessors: [0xbf]
Successors: [0x39b, 0x39c]
---
0x394 JUMPDEST
0x395 CALLVALUE
0x396 ISZERO
0x397 PUSH2 0x39c
0x39a JUMPI
---
0x394: JUMPDEST 
0x395: V316 = CALLVALUE
0x396: V317 = ISZERO V316
0x397: V318 = 0x39c
0x39a: JUMPI 0x39c V317
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39b
[0x39b:0x39b]
---
Predecessors: [0x394]
Successors: []
---
0x39b INVALID
---
0x39b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39c
[0x39c:0x3af]
---
Predecessors: [0x394]
Successors: [0x89b]
---
0x39c JUMPDEST
0x39d PUSH2 0x268
0x3a0 PUSH1 0x1
0x3a2 PUSH1 0xa0
0x3a4 PUSH1 0x2
0x3a6 EXP
0x3a7 SUB
0x3a8 PUSH1 0x4
0x3aa CALLDATALOAD
0x3ab AND
0x3ac PUSH2 0x89b
0x3af JUMP
---
0x39c: JUMPDEST 
0x39d: V319 = 0x268
0x3a0: V320 = 0x1
0x3a2: V321 = 0xa0
0x3a4: V322 = 0x2
0x3a6: V323 = EXP 0x2 0xa0
0x3a7: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a8: V325 = 0x4
0x3aa: V326 = CALLDATALOAD 0x4
0x3ab: V327 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V328 = 0x89b
0x3af: JUMP 0x89b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x268, V327]
Exit stack: [V12, 0x268, V327]

================================

Block 0x3b0
[0x3b0:0x3b1]
---
Predecessors: []
Successors: []
---
0x3b0 JUMPDEST
0x3b1 STOP
---
0x3b0: JUMPDEST 
0x3b1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3b2
[0x3b2:0x3b8]
---
Predecessors: [0xca]
Successors: [0x3b9, 0x3ba]
---
0x3b2 JUMPDEST
0x3b3 CALLVALUE
0x3b4 ISZERO
0x3b5 PUSH2 0x3ba
0x3b8 JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V329 = CALLVALUE
0x3b4: V330 = ISZERO V329
0x3b5: V331 = 0x3ba
0x3b8: JUMPI 0x3ba V330
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b9
[0x3b9:0x3b9]
---
Predecessors: [0x3b2]
Successors: []
---
0x3b9 INVALID
---
0x3b9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ba
[0x3ba:0x3d6]
---
Predecessors: [0x3b2]
Successors: [0x90e]
---
0x3ba JUMPDEST
0x3bb PUSH2 0x160
0x3be PUSH1 0x1
0x3c0 PUSH1 0xa0
0x3c2 PUSH1 0x2
0x3c4 EXP
0x3c5 SUB
0x3c6 PUSH1 0x4
0x3c8 CALLDATALOAD
0x3c9 DUP2
0x3ca AND
0x3cb SWAP1
0x3cc PUSH1 0x24
0x3ce CALLDATALOAD
0x3cf AND
0x3d0 PUSH1 0x44
0x3d2 CALLDATALOAD
0x3d3 PUSH2 0x90e
0x3d6 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V332 = 0x160
0x3be: V333 = 0x1
0x3c0: V334 = 0xa0
0x3c2: V335 = 0x2
0x3c4: V336 = EXP 0x2 0xa0
0x3c5: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c6: V338 = 0x4
0x3c8: V339 = CALLDATALOAD 0x4
0x3ca: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x3cc: V341 = 0x24
0x3ce: V342 = CALLDATALOAD 0x24
0x3cf: V343 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V344 = 0x44
0x3d2: V345 = CALLDATALOAD 0x44
0x3d3: V346 = 0x90e
0x3d6: JUMP 0x90e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160, V340, V343, V345]
Exit stack: [V12, 0x160, V340, V343, V345]

================================

Block 0x3d7
[0x3d7:0x3ea]
---
Predecessors: []
Successors: []
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x40
0x3da DUP1
0x3db MLOAD
0x3dc SWAP2
0x3dd ISZERO
0x3de ISZERO
0x3df DUP3
0x3e0 MSTORE
0x3e1 MLOAD
0x3e2 SWAP1
0x3e3 DUP2
0x3e4 SWAP1
0x3e5 SUB
0x3e6 PUSH1 0x20
0x3e8 ADD
0x3e9 SWAP1
0x3ea RETURN
---
0x3d7: JUMPDEST 
0x3d8: V347 = 0x40
0x3db: V348 = M[0x40]
0x3dd: V349 = ISZERO S0
0x3de: V350 = ISZERO V349
0x3e0: M[V348] = V350
0x3e1: V351 = M[0x40]
0x3e5: V352 = SUB V348 V351
0x3e6: V353 = 0x20
0x3e8: V354 = ADD 0x20 V352
0x3ea: RETURN V351 V354
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3eb
[0x3eb:0x3f1]
---
Predecessors: [0xd5]
Successors: [0x3f2, 0x3f3]
---
0x3eb JUMPDEST
0x3ec CALLVALUE
0x3ed ISZERO
0x3ee PUSH2 0x3f3
0x3f1 JUMPI
---
0x3eb: JUMPDEST 
0x3ec: V355 = CALLVALUE
0x3ed: V356 = ISZERO V355
0x3ee: V357 = 0x3f3
0x3f1: JUMPI 0x3f3 V356
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f2
[0x3f2:0x3f2]
---
Predecessors: [0x3eb]
Successors: []
---
0x3f2 INVALID
---
0x3f2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f3
[0x3f3:0x3fa]
---
Predecessors: [0x3eb]
Successors: [0xa65]
---
0x3f3 JUMPDEST
0x3f4 PUSH2 0x268
0x3f7 PUSH2 0xa65
0x3fa JUMP
---
0x3f3: JUMPDEST 
0x3f4: V358 = 0x268
0x3f7: V359 = 0xa65
0x3fa: JUMP 0xa65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x268]
Exit stack: [V12, 0x268]

================================

Block 0x3fb
[0x3fb:0x3fc]
---
Predecessors: []
Successors: []
---
0x3fb JUMPDEST
0x3fc STOP
---
0x3fb: JUMPDEST 
0x3fc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3fd
[0x3fd:0x403]
---
Predecessors: [0xe0]
Successors: [0x404, 0x405]
---
0x3fd JUMPDEST
0x3fe CALLVALUE
0x3ff ISZERO
0x400 PUSH2 0x405
0x403 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V360 = CALLVALUE
0x3ff: V361 = ISZERO V360
0x400: V362 = 0x405
0x403: JUMPI 0x405 V361
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x404
[0x404:0x404]
---
Predecessors: [0x3fd]
Successors: []
---
0x404 INVALID
---
0x404: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x405
[0x405:0x41e]
---
Predecessors: [0x3fd]
Successors: [0x483]
---
0x405 JUMPDEST
0x406 PUSH2 0x184
0x409 PUSH1 0x1
0x40b PUSH1 0xa0
0x40d PUSH1 0x2
0x40f EXP
0x410 SUB
0x411 PUSH1 0x4
0x413 CALLDATALOAD
0x414 DUP2
0x415 AND
0x416 SWAP1
0x417 PUSH1 0x24
0x419 CALLDATALOAD
0x41a AND
0x41b PUSH2 0x483
0x41e JUMP
---
0x405: JUMPDEST 
0x406: V363 = 0x184
0x409: V364 = 0x1
0x40b: V365 = 0xa0
0x40d: V366 = 0x2
0x40f: V367 = EXP 0x2 0xa0
0x410: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V369 = 0x4
0x413: V370 = CALLDATALOAD 0x4
0x415: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x417: V372 = 0x24
0x419: V373 = CALLDATALOAD 0x24
0x41a: V374 = AND V373 0xffffffffffffffffffffffffffffffffffffffff
0x41b: V375 = 0x483
0x41e: JUMP 0x483
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x184, V371, V374]
Exit stack: [V12, 0x184, V371, V374]

================================

Block 0x41f
[0x41f:0x430]
---
Predecessors: []
Successors: []
---
0x41f JUMPDEST
0x420 PUSH1 0x40
0x422 DUP1
0x423 MLOAD
0x424 SWAP2
0x425 DUP3
0x426 MSTORE
0x427 MLOAD
0x428 SWAP1
0x429 DUP2
0x42a SWAP1
0x42b SUB
0x42c PUSH1 0x20
0x42e ADD
0x42f SWAP1
0x430 RETURN
---
0x41f: JUMPDEST 
0x420: V376 = 0x40
0x423: V377 = M[0x40]
0x426: M[V377] = S0
0x427: V378 = M[0x40]
0x42b: V379 = SUB V377 V378
0x42c: V380 = 0x20
0x42e: V381 = ADD 0x20 V379
0x430: RETURN V378 V381
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x431
[0x431:0x437]
---
Predecessors: [0xeb]
Successors: [0x438, 0x439]
---
0x431 JUMPDEST
0x432 CALLVALUE
0x433 ISZERO
0x434 PUSH2 0x439
0x437 JUMPI
---
0x431: JUMPDEST 
0x432: V382 = CALLVALUE
0x433: V383 = ISZERO V382
0x434: V384 = 0x439
0x437: JUMPI 0x439 V383
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x438
[0x438:0x438]
---
Predecessors: [0x431]
Successors: []
---
0x438 INVALID
---
0x438: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x439
[0x439:0x440]
---
Predecessors: [0x431]
Successors: [0xad2]
---
0x439 JUMPDEST
0x43a PUSH2 0x268
0x43d PUSH2 0xad2
0x440 JUMP
---
0x439: JUMPDEST 
0x43a: V385 = 0x268
0x43d: V386 = 0xad2
0x440: JUMP 0xad2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x268]
Exit stack: [V12, 0x268]

================================

Block 0x441
[0x441:0x442]
---
Predecessors: []
Successors: []
---
0x441 JUMPDEST
0x442 STOP
---
0x441: JUMPDEST 
0x442: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x443
[0x443:0x449]
---
Predecessors: [0xf6]
Successors: [0x44a, 0x44b]
---
0x443 JUMPDEST
0x444 CALLVALUE
0x445 ISZERO
0x446 PUSH2 0x44b
0x449 JUMPI
---
0x443: JUMPDEST 
0x444: V387 = CALLVALUE
0x445: V388 = ISZERO V387
0x446: V389 = 0x44b
0x449: JUMPI 0x44b V388
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44a
[0x44a:0x44a]
---
Predecessors: [0x443]
Successors: []
---
0x44a INVALID
---
0x44a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44b
[0x44b:0x45e]
---
Predecessors: [0x443]
Successors: [0xb55]
---
0x44b JUMPDEST
0x44c PUSH2 0x268
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 PUSH1 0x4
0x459 CALLDATALOAD
0x45a AND
0x45b PUSH2 0xb55
0x45e JUMP
---
0x44b: JUMPDEST 
0x44c: V390 = 0x268
0x44f: V391 = 0x1
0x451: V392 = 0xa0
0x453: V393 = 0x2
0x455: V394 = EXP 0x2 0xa0
0x456: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V396 = 0x4
0x459: V397 = CALLDATALOAD 0x4
0x45a: V398 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V399 = 0xb55
0x45e: JUMP 0xb55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x268, V398]
Exit stack: [V12, 0x268, V398]

================================

Block 0x45f
[0x45f:0x460]
---
Predecessors: []
Successors: []
---
0x45f JUMPDEST
0x460 STOP
---
0x45f: JUMPDEST 
0x460: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x461
[0x461:0x47f]
---
Predecessors: [0x10b]
Successors: [0x480]
---
0x461 JUMPDEST
0x462 PUSH1 0x6
0x464 SLOAD
0x465 PUSH25 0x1000000000000000000000000000000000000000000000000
0x47f MUL
---
0x461: JUMPDEST 
0x462: V400 = 0x6
0x464: V401 = S[0x6]
0x465: V402 = 0x1000000000000000000000000000000000000000000000000
0x47f: V403 = MUL 0x1000000000000000000000000000000000000000000000000 V401
---
Entry stack: [V12, 0x113]
Stack pops: 0
Stack additions: [V403]
Exit stack: [V12, 0x113, V403]

================================

Block 0x480
[0x480:0x482]
---
Predecessors: [0x461]
Successors: [0x113]
---
0x480 JUMPDEST
0x481 SWAP1
0x482 JUMP
---
0x480: JUMPDEST 
0x482: JUMP 0x113
---
Entry stack: [V12, 0x113, V403]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V403]

================================

Block 0x483
[0x483:0x485]
---
Predecessors: [0x149, 0x405]
Successors: [0x486]
---
0x483 JUMPDEST
0x484 PUSH1 0x0
---
0x483: JUMPDEST 
0x484: V404 = 0x0
---
Entry stack: [V12, {0x160, 0x184}, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, {0x160, 0x184}, S1, S0, 0x0]

================================

Block 0x486
[0x486:0x48b]
---
Predecessors: [0x483]
Successors: [0x160, 0x184]
---
0x486 JUMPDEST
0x487 SWAP3
0x488 SWAP2
0x489 POP
0x48a POP
0x48b JUMP
---
0x486: JUMPDEST 
0x48b: JUMP {0x160, 0x184}
---
Entry stack: [V12, {0x160, 0x184}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x0]

================================

Block 0x48c
[0x48c:0x48f]
---
Predecessors: [0x17c]
Successors: [0x490]
---
0x48c JUMPDEST
0x48d PUSH1 0x7
0x48f SLOAD
---
0x48c: JUMPDEST 
0x48d: V405 = 0x7
0x48f: V406 = S[0x7]
---
Entry stack: [V12, 0x184]
Stack pops: 0
Stack additions: [V406]
Exit stack: [V12, 0x184, V406]

================================

Block 0x490
[0x490:0x492]
---
Predecessors: [0x48c]
Successors: [0x184]
---
0x490 JUMPDEST
0x491 SWAP1
0x492 JUMP
---
0x490: JUMPDEST 
0x492: JUMP 0x184
---
Entry stack: [V12, 0x184, V406]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V406]

================================

Block 0x493
[0x493:0x495]
---
Predecessors: [0x19e]
Successors: [0x496]
---
0x493 JUMPDEST
0x494 PUSH1 0x0
---
0x493: JUMPDEST 
0x494: V407 = 0x0
---
Entry stack: [V12, 0x160, V135, V138, V140]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x160, V135, V138, V140, 0x0]

================================

Block 0x496
[0x496:0x49c]
---
Predecessors: [0x493]
Successors: [0x160]
---
0x496 JUMPDEST
0x497 SWAP4
0x498 SWAP3
0x499 POP
0x49a POP
0x49b POP
0x49c JUMP
---
0x496: JUMPDEST 
0x49c: JUMP 0x160
---
Entry stack: [V12, 0x160, V135, V138, V140, 0x0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, 0x0]

================================

Block 0x49d
[0x49d:0x4b3]
---
Predecessors: [0x1d7]
Successors: [0x4b4]
---
0x49d JUMPDEST
0x49e PUSH1 0x6
0x4a0 SLOAD
0x4a1 PUSH13 0x1000000000000000000000000
0x4af SWAP1
0x4b0 DIV
0x4b1 PUSH1 0xff
0x4b3 AND
---
0x49d: JUMPDEST 
0x49e: V408 = 0x6
0x4a0: V409 = S[0x6]
0x4a1: V410 = 0x1000000000000000000000000
0x4b0: V411 = DIV V409 0x1000000000000000000000000
0x4b1: V412 = 0xff
0x4b3: V413 = AND 0xff V411
---
Entry stack: [V12, 0x1df]
Stack pops: 0
Stack additions: [V413]
Exit stack: [V12, 0x1df, V413]

================================

Block 0x4b4
[0x4b4:0x4b6]
---
Predecessors: [0x49d]
Successors: [0x1df]
---
0x4b4 JUMPDEST
0x4b5 SWAP1
0x4b6 JUMP
---
0x4b4: JUMPDEST 
0x4b6: JUMP 0x1df
---
Entry stack: [V12, 0x1df, V413]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V413]

================================

Block 0x4b7
[0x4b7:0x4cb]
---
Predecessors: [0x1fd]
Successors: [0x160]
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x5
0x4ba PUSH1 0x20
0x4bc MSTORE
0x4bd PUSH1 0x0
0x4bf SWAP1
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 PUSH1 0x40
0x4c4 SWAP1
0x4c5 SHA3
0x4c6 SLOAD
0x4c7 PUSH1 0xff
0x4c9 AND
0x4ca DUP2
0x4cb JUMP
---
0x4b7: JUMPDEST 
0x4b8: V414 = 0x5
0x4ba: V415 = 0x20
0x4bc: M[0x20] = 0x5
0x4bd: V416 = 0x0
0x4c1: M[0x0] = V174
0x4c2: V417 = 0x40
0x4c5: V418 = SHA3 0x0 0x40
0x4c6: V419 = S[V418]
0x4c7: V420 = 0xff
0x4c9: V421 = AND 0xff V419
0x4cb: JUMP 0x160
---
Entry stack: [V12, 0x160, V174]
Stack pops: 2
Stack additions: [S1, V421]
Exit stack: [V12, 0x160, V421]

================================

Block 0x4cc
[0x4cc:0x4da]
---
Predecessors: [0x22d]
Successors: [0x235]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x1
0x4cf SLOAD
0x4d0 PUSH1 0x1
0x4d2 PUSH1 0xa0
0x4d4 PUSH1 0x2
0x4d6 EXP
0x4d7 SUB
0x4d8 AND
0x4d9 DUP2
0x4da JUMP
---
0x4cc: JUMPDEST 
0x4cd: V422 = 0x1
0x4cf: V423 = S[0x1]
0x4d0: V424 = 0x1
0x4d2: V425 = 0xa0
0x4d4: V426 = 0x2
0x4d6: V427 = EXP 0x2 0xa0
0x4d7: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d8: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x4da: JUMP 0x235
---
Entry stack: [V12, 0x235]
Stack pops: 1
Stack additions: [S0, V429]
Exit stack: [V12, 0x235, V429]

================================

Block 0x4db
[0x4db:0x4f4]
---
Predecessors: [0x251]
Successors: [0x4f5, 0x55c]
---
0x4db JUMPDEST
0x4dc PUSH1 0x2
0x4de SLOAD
0x4df PUSH1 0x0
0x4e1 SWAP1
0x4e2 CALLER
0x4e3 PUSH1 0x1
0x4e5 PUSH1 0xa0
0x4e7 PUSH1 0x2
0x4e9 EXP
0x4ea SUB
0x4eb SWAP1
0x4ec DUP2
0x4ed AND
0x4ee SWAP2
0x4ef AND
0x4f0 EQ
0x4f1 PUSH2 0x55c
0x4f4 JUMPI
---
0x4db: JUMPDEST 
0x4dc: V430 = 0x2
0x4de: V431 = S[0x2]
0x4df: V432 = 0x0
0x4e2: V433 = CALLER
0x4e3: V434 = 0x1
0x4e5: V435 = 0xa0
0x4e7: V436 = 0x2
0x4e9: V437 = EXP 0x2 0xa0
0x4ea: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x4ef: V440 = AND V431 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V441 = EQ V440 V439
0x4f1: V442 = 0x55c
0x4f4: JUMPI 0x55c V441
---
Entry stack: [V12, 0x268, V209, V211]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x268, V209, V211, 0x0]

================================

Block 0x4f5
[0x4f5:0x55b]
---
Predecessors: [0x4db]
Successors: [0x622]
---
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 PUSH1 0x1
0x4fa PUSH1 0xa0
0x4fc PUSH1 0x2
0x4fe EXP
0x4ff SUB
0x500 CALLER
0x501 AND
0x502 SWAP1
0x503 CALLVALUE
0x504 DUP1
0x505 ISZERO
0x506 PUSH2 0x8fc
0x509 MUL
0x50a SWAP2
0x50b PUSH1 0x0
0x50d DUP2
0x50e DUP2
0x50f DUP2
0x510 DUP6
0x511 DUP9
0x512 DUP9
0x513 CALL
0x514 PUSH1 0x40
0x516 DUP1
0x517 MLOAD
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 CALLER
0x521 AND
0x522 DUP2
0x523 MSTORE
0x524 SWAP1
0x525 MLOAD
0x526 SWAP2
0x527 SWAP7
0x528 POP
0x529 PUSH32 0xda30cab8fb2c28848455e55d70c72edb9e639f97a81d6ec4b9bde452f277f0e6
0x54a SWAP6
0x54b POP
0x54c DUP2
0x54d SWAP1
0x54e SUB
0x54f PUSH1 0x20
0x551 ADD
0x552 SWAP4
0x553 POP
0x554 SWAP2
0x555 POP
0x556 POP
0x557 LOG1
0x558 PUSH2 0x622
0x55b JUMP
---
0x4f5: V443 = 0x40
0x4f7: V444 = M[0x40]
0x4f8: V445 = 0x1
0x4fa: V446 = 0xa0
0x4fc: V447 = 0x2
0x4fe: V448 = EXP 0x2 0xa0
0x4ff: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V450 = CALLER
0x501: V451 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0x503: V452 = CALLVALUE
0x505: V453 = ISZERO V452
0x506: V454 = 0x8fc
0x509: V455 = MUL 0x8fc V453
0x50b: V456 = 0x0
0x513: V457 = CALL V455 V451 V452 V444 0x0 V444 0x0
0x514: V458 = 0x40
0x517: V459 = M[0x40]
0x518: V460 = 0x1
0x51a: V461 = 0xa0
0x51c: V462 = 0x2
0x51e: V463 = EXP 0x2 0xa0
0x51f: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x520: V465 = CALLER
0x521: V466 = AND V465 0xffffffffffffffffffffffffffffffffffffffff
0x523: M[V459] = V466
0x525: V467 = M[0x40]
0x529: V468 = 0xda30cab8fb2c28848455e55d70c72edb9e639f97a81d6ec4b9bde452f277f0e6
0x54e: V469 = SUB V459 V467
0x54f: V470 = 0x20
0x551: V471 = ADD 0x20 V469
0x557: LOG V467 V471 0xda30cab8fb2c28848455e55d70c72edb9e639f97a81d6ec4b9bde452f277f0e6
0x558: V472 = 0x622
0x55b: JUMP 0x622
---
Entry stack: [V12, 0x268, V209, V211, 0x0]
Stack pops: 1
Stack additions: [V457]
Exit stack: [V12, 0x268, V209, V211, V457]

================================

Block 0x55c
[0x55c:0x573]
---
Predecessors: [0x4db]
Successors: [0x90e]
---
0x55c JUMPDEST
0x55d PUSH1 0x2
0x55f SLOAD
0x560 PUSH2 0x574
0x563 SWAP1
0x564 DUP5
0x565 SWAP1
0x566 PUSH1 0x1
0x568 PUSH1 0xa0
0x56a PUSH1 0x2
0x56c EXP
0x56d SUB
0x56e AND
0x56f DUP5
0x570 PUSH2 0x90e
0x573 JUMP
---
0x55c: JUMPDEST 
0x55d: V473 = 0x2
0x55f: V474 = S[0x2]
0x560: V475 = 0x574
0x566: V476 = 0x1
0x568: V477 = 0xa0
0x56a: V478 = 0x2
0x56c: V479 = EXP 0x2 0xa0
0x56d: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56e: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x570: V482 = 0x90e
0x573: JUMP 0x90e
---
Entry stack: [V12, 0x268, V209, V211, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x574, S2, V481, S1]
Exit stack: [V12, 0x268, V209, V211, 0x0, 0x574, V209, V481, V211]

================================

Block 0x574
[0x574:0x579]
---
Predecessors: [0xa5d]
Successors: [0x57a, 0x5f8]
---
0x574 JUMPDEST
0x575 ISZERO
0x576 PUSH2 0x5f8
0x579 JUMPI
---
0x574: JUMPDEST 
0x575: V483 = ISZERO {0x0, 0x1}
0x576: V484 = 0x5f8
0x579: JUMPI 0x5f8 V483
---
Entry stack: [V12, 0x268, V209, V211, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S1]

================================

Block 0x57a
[0x57a:0x5f7]
---
Predecessors: [0x574]
Successors: [0x622]
---
0x57a PUSH1 0x40
0x57c MLOAD
0x57d PUSH1 0x1
0x57f PUSH1 0xa0
0x581 PUSH1 0x2
0x583 EXP
0x584 SUB
0x585 DUP5
0x586 AND
0x587 SWAP1
0x588 CALLVALUE
0x589 DUP1
0x58a ISZERO
0x58b PUSH2 0x8fc
0x58e MUL
0x58f SWAP2
0x590 PUSH1 0x0
0x592 DUP2
0x593 DUP2
0x594 DUP2
0x595 DUP6
0x596 DUP9
0x597 DUP9
0x598 CALL
0x599 PUSH1 0x2
0x59b SLOAD
0x59c PUSH1 0x40
0x59e DUP1
0x59f MLOAD
0x5a0 PUSH1 0x1
0x5a2 PUSH1 0xa0
0x5a4 PUSH1 0x2
0x5a6 EXP
0x5a7 SUB
0x5a8 SWAP3
0x5a9 DUP4
0x5aa AND
0x5ab DUP2
0x5ac MSTORE
0x5ad SWAP2
0x5ae DUP11
0x5af AND
0x5b0 PUSH1 0x20
0x5b2 DUP4
0x5b3 ADD
0x5b4 MSTORE
0x5b5 DUP2
0x5b6 DUP2
0x5b7 ADD
0x5b8 DUP10
0x5b9 SWAP1
0x5ba MSTORE
0x5bb CALLVALUE
0x5bc PUSH1 0x60
0x5be DUP4
0x5bf ADD
0x5c0 MSTORE
0x5c1 MLOAD
0x5c2 SWAP2
0x5c3 SWAP7
0x5c4 POP
0x5c5 PUSH32 0x6218e45d791556fd6296d210adbe9de8687e40a2d9053158e22b1e3e9b8e20a7
0x5e6 SWAP6
0x5e7 POP
0x5e8 DUP2
0x5e9 SWAP1
0x5ea SUB
0x5eb PUSH1 0x80
0x5ed ADD
0x5ee SWAP4
0x5ef POP
0x5f0 SWAP2
0x5f1 POP
0x5f2 POP
0x5f3 LOG1
0x5f4 PUSH2 0x622
0x5f7 JUMP
---
0x57a: V485 = 0x40
0x57c: V486 = M[0x40]
0x57d: V487 = 0x1
0x57f: V488 = 0xa0
0x581: V489 = 0x2
0x583: V490 = EXP 0x2 0xa0
0x584: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x586: V492 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x588: V493 = CALLVALUE
0x58a: V494 = ISZERO V493
0x58b: V495 = 0x8fc
0x58e: V496 = MUL 0x8fc V494
0x590: V497 = 0x0
0x598: V498 = CALL V496 V492 V493 V486 0x0 V486 0x0
0x599: V499 = 0x2
0x59b: V500 = S[0x2]
0x59c: V501 = 0x40
0x59f: V502 = M[0x40]
0x5a0: V503 = 0x1
0x5a2: V504 = 0xa0
0x5a4: V505 = 0x2
0x5a6: V506 = EXP 0x2 0xa0
0x5a7: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x5ac: M[V502] = V508
0x5af: V509 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x5b0: V510 = 0x20
0x5b3: V511 = ADD V502 0x20
0x5b4: M[V511] = V509
0x5b7: V512 = ADD 0x40 V502
0x5ba: M[V512] = V211
0x5bb: V513 = CALLVALUE
0x5bc: V514 = 0x60
0x5bf: V515 = ADD V502 0x60
0x5c0: M[V515] = V513
0x5c1: V516 = M[0x40]
0x5c5: V517 = 0x6218e45d791556fd6296d210adbe9de8687e40a2d9053158e22b1e3e9b8e20a7
0x5ea: V518 = SUB V502 V516
0x5eb: V519 = 0x80
0x5ed: V520 = ADD 0x80 V518
0x5f3: LOG V516 V520 0x6218e45d791556fd6296d210adbe9de8687e40a2d9053158e22b1e3e9b8e20a7
0x5f4: V521 = 0x622
0x5f7: JUMP 0x622
---
Entry stack: [V12, 0x268, V209, V211, S0]
Stack pops: 3
Stack additions: [S2, S1, V498]
Exit stack: [V12, 0x268, V209, V211, V498]

================================

Block 0x5f8
[0x5f8:0x621]
---
Predecessors: [0x574]
Successors: [0x622]
---
0x5f8 JUMPDEST
0x5f9 PUSH1 0x2
0x5fb SLOAD
0x5fc PUSH1 0x40
0x5fe MLOAD
0x5ff PUSH1 0x1
0x601 PUSH1 0xa0
0x603 PUSH1 0x2
0x605 EXP
0x606 SUB
0x607 SWAP1
0x608 SWAP2
0x609 AND
0x60a SWAP1
0x60b CALLVALUE
0x60c DUP1
0x60d ISZERO
0x60e PUSH2 0x8fc
0x611 MUL
0x612 SWAP2
0x613 PUSH1 0x0
0x615 DUP2
0x616 DUP2
0x617 DUP2
0x618 DUP6
0x619 DUP9
0x61a DUP9
0x61b CALL
0x61c SWAP5
0x61d POP
0x61e POP
0x61f POP
0x620 POP
0x621 POP
---
0x5f8: JUMPDEST 
0x5f9: V522 = 0x2
0x5fb: V523 = S[0x2]
0x5fc: V524 = 0x40
0x5fe: V525 = M[0x40]
0x5ff: V526 = 0x1
0x601: V527 = 0xa0
0x603: V528 = 0x2
0x605: V529 = EXP 0x2 0xa0
0x606: V530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x609: V531 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x60b: V532 = CALLVALUE
0x60d: V533 = ISZERO V532
0x60e: V534 = 0x8fc
0x611: V535 = MUL 0x8fc V533
0x613: V536 = 0x0
0x61b: V537 = CALL V535 V531 V532 V525 0x0 V525 0x0
---
Entry stack: [V12, 0x268, V209, V211, S0]
Stack pops: 1
Stack additions: [V537]
Exit stack: [V12, 0x268, V209, V211, V537]

================================

Block 0x622
[0x622:0x622]
---
Predecessors: [0x4f5, 0x57a, 0x5f8]
Successors: [0x623]
---
0x622 JUMPDEST
---
0x622: JUMPDEST 
---
Entry stack: [V12, 0x268, V209, V211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S0]

================================

Block 0x623
[0x623:0x627]
---
Predecessors: [0x622]
Successors: [0x268]
---
0x623 JUMPDEST
0x624 POP
0x625 POP
0x626 POP
0x627 JUMP
---
0x623: JUMPDEST 
0x627: JUMP 0x268
---
Entry stack: [V12, 0x268, V209, V211, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x628
[0x628:0x656]
---
Predecessors: [0x272]
Successors: [0x657, 0x6c8]
---
0x628 JUMPDEST
0x629 PUSH1 0x1
0x62b PUSH1 0xa0
0x62d PUSH1 0x2
0x62f EXP
0x630 SUB
0x631 DUP2
0x632 AND
0x633 PUSH1 0x0
0x635 SWAP1
0x636 DUP2
0x637 MSTORE
0x638 PUSH1 0x4
0x63a PUSH1 0x20
0x63c SWAP1
0x63d DUP2
0x63e MSTORE
0x63f PUSH1 0x40
0x641 DUP1
0x642 DUP4
0x643 SHA3
0x644 SLOAD
0x645 PUSH1 0x5
0x647 SWAP1
0x648 SWAP3
0x649 MSTORE
0x64a SWAP1
0x64b SWAP2
0x64c SHA3
0x64d SLOAD
0x64e PUSH1 0xff
0x650 AND
0x651 ISZERO
0x652 ISZERO
0x653 PUSH2 0x6c8
0x656 JUMPI
---
0x628: JUMPDEST 
0x629: V538 = 0x1
0x62b: V539 = 0xa0
0x62d: V540 = 0x2
0x62f: V541 = EXP 0x2 0xa0
0x630: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x632: V543 = AND V224 0xffffffffffffffffffffffffffffffffffffffff
0x633: V544 = 0x0
0x637: M[0x0] = V543
0x638: V545 = 0x4
0x63a: V546 = 0x20
0x63e: M[0x20] = 0x4
0x63f: V547 = 0x40
0x643: V548 = SHA3 0x0 0x40
0x644: V549 = S[V548]
0x645: V550 = 0x5
0x649: M[0x20] = 0x5
0x64c: V551 = SHA3 0x0 0x40
0x64d: V552 = S[V551]
0x64e: V553 = 0xff
0x650: V554 = AND 0xff V552
0x651: V555 = ISZERO V554
0x652: V556 = ISZERO V555
0x653: V557 = 0x6c8
0x656: JUMPI 0x6c8 V556
---
Entry stack: [V12, 0x184, V224]
Stack pops: 1
Stack additions: [S0, V549]
Exit stack: [V12, 0x184, V224, V549]

================================

Block 0x657
[0x657:0x6ac]
---
Predecessors: [0x628]
Successors: [0x6ad, 0x6ae]
---
0x657 PUSH1 0x3
0x659 SLOAD
0x65a PUSH1 0x40
0x65c DUP1
0x65d MLOAD
0x65e PUSH1 0x0
0x660 PUSH1 0x20
0x662 SWAP2
0x663 DUP3
0x664 ADD
0x665 DUP2
0x666 SWAP1
0x667 MSTORE
0x668 DUP3
0x669 MLOAD
0x66a PUSH1 0xe0
0x66c PUSH1 0x2
0x66e EXP
0x66f PUSH4 0x70a08231
0x674 MUL
0x675 DUP2
0x676 MSTORE
0x677 PUSH1 0x1
0x679 PUSH1 0xa0
0x67b PUSH1 0x2
0x67d EXP
0x67e SUB
0x67f DUP8
0x680 DUP2
0x681 AND
0x682 PUSH1 0x4
0x684 DUP4
0x685 ADD
0x686 MSTORE
0x687 SWAP4
0x688 MLOAD
0x689 SWAP4
0x68a SWAP1
0x68b SWAP5
0x68c AND
0x68d SWAP4
0x68e PUSH4 0x70a08231
0x693 SWAP4
0x694 PUSH1 0x24
0x696 DUP1
0x697 DUP4
0x698 ADD
0x699 SWAP5
0x69a SWAP4
0x69b SWAP2
0x69c SWAP3
0x69d DUP4
0x69e SWAP1
0x69f SUB
0x6a0 ADD
0x6a1 SWAP1
0x6a2 DUP3
0x6a3 SWAP1
0x6a4 DUP8
0x6a5 DUP1
0x6a6 EXTCODESIZE
0x6a7 ISZERO
0x6a8 ISZERO
0x6a9 PUSH2 0x6ae
0x6ac JUMPI
---
0x657: V558 = 0x3
0x659: V559 = S[0x3]
0x65a: V560 = 0x40
0x65d: V561 = M[0x40]
0x65e: V562 = 0x0
0x660: V563 = 0x20
0x664: V564 = ADD 0x20 V561
0x667: M[V564] = 0x0
0x669: V565 = M[0x40]
0x66a: V566 = 0xe0
0x66c: V567 = 0x2
0x66e: V568 = EXP 0x2 0xe0
0x66f: V569 = 0x70a08231
0x674: V570 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x676: M[V565] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x677: V571 = 0x1
0x679: V572 = 0xa0
0x67b: V573 = 0x2
0x67d: V574 = EXP 0x2 0xa0
0x67e: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x681: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x682: V577 = 0x4
0x685: V578 = ADD V565 0x4
0x686: M[V578] = V576
0x688: V579 = M[0x40]
0x68c: V580 = AND V559 0xffffffffffffffffffffffffffffffffffffffff
0x68e: V581 = 0x70a08231
0x694: V582 = 0x24
0x698: V583 = ADD V565 0x24
0x69f: V584 = SUB V565 V579
0x6a0: V585 = ADD V584 0x24
0x6a6: V586 = EXTCODESIZE V580
0x6a7: V587 = ISZERO V586
0x6a8: V588 = ISZERO V587
0x6a9: V589 = 0x6ae
0x6ac: JUMPI 0x6ae V588
---
Entry stack: [V12, 0x184, V224, V549]
Stack pops: 2
Stack additions: [S1, S0, V580, 0x70a08231, V583, 0x20, V579, V585, V579, 0x0, V580]
Exit stack: [V12, 0x184, V224, V549, V580, 0x70a08231, V583, 0x20, V579, V585, V579, 0x0, V580]

================================

Block 0x6ad
[0x6ad:0x6ad]
---
Predecessors: [0x657]
Successors: []
---
0x6ad INVALID
---
0x6ad: INVALID 
---
Entry stack: [V12, 0x184, V224, V549, V580, 0x70a08231, V583, 0x20, V579, V585, V579, 0x0, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x184, V224, V549, V580, 0x70a08231, V583, 0x20, V579, V585, V579, 0x0, V580]

================================

Block 0x6ae
[0x6ae:0x6b9]
---
Predecessors: [0x657]
Successors: [0x6ba, 0x6bb]
---
0x6ae JUMPDEST
0x6af PUSH1 0x32
0x6b1 GAS
0x6b2 SUB
0x6b3 CALL
0x6b4 ISZERO
0x6b5 ISZERO
0x6b6 PUSH2 0x6bb
0x6b9 JUMPI
---
0x6ae: JUMPDEST 
0x6af: V590 = 0x32
0x6b1: V591 = GAS
0x6b2: V592 = SUB V591 0x32
0x6b3: V593 = CALL V592 V580 0x0 V579 V585 V579 0x20
0x6b4: V594 = ISZERO V593
0x6b5: V595 = ISZERO V594
0x6b6: V596 = 0x6bb
0x6b9: JUMPI 0x6bb V595
---
Entry stack: [V12, 0x184, V224, V549, V580, 0x70a08231, V583, 0x20, V579, V585, V579, 0x0, V580]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x184, V224, V549, V580, 0x70a08231, V583]

================================

Block 0x6ba
[0x6ba:0x6ba]
---
Predecessors: [0x6ae]
Successors: []
---
0x6ba INVALID
---
0x6ba: INVALID 
---
Entry stack: [V12, 0x184, V224, V549, V580, 0x70a08231, V583]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x184, V224, V549, V580, 0x70a08231, V583]

================================

Block 0x6bb
[0x6bb:0x6c7]
---
Predecessors: [0x6ae]
Successors: [0x6c8]
---
0x6bb JUMPDEST
0x6bc POP
0x6bd POP
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 MLOAD
0x6c2 SWAP2
0x6c3 SWAP1
0x6c4 SWAP2
0x6c5 ADD
0x6c6 SWAP1
0x6c7 POP
---
0x6bb: JUMPDEST 
0x6be: V597 = 0x40
0x6c0: V598 = M[0x40]
0x6c1: V599 = M[V598]
0x6c5: V600 = ADD V599 V549
---
Entry stack: [V12, 0x184, V224, V549, V580, 0x70a08231, V583]
Stack pops: 4
Stack additions: [V600]
Exit stack: [V12, 0x184, V224, V600]

================================

Block 0x6c8
[0x6c8:0x6c8]
---
Predecessors: [0x628, 0x6bb]
Successors: [0x6c9]
---
0x6c8 JUMPDEST
---
0x6c8: JUMPDEST 
---
Entry stack: [V12, 0x184, V224, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x184, V224, S0]

================================

Block 0x6c9
[0x6c9:0x6cd]
---
Predecessors: [0x6c8]
Successors: [0x184]
---
0x6c9 JUMPDEST
0x6ca SWAP2
0x6cb SWAP1
0x6cc POP
0x6cd JUMP
---
0x6c9: JUMPDEST 
0x6cd: JUMP 0x184
---
Entry stack: [V12, 0x184, V224, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x6ce
[0x6ce:0x6e5]
---
Predecessors: [0x2a0]
Successors: [0x6e6, 0x747]
---
0x6ce JUMPDEST
0x6cf PUSH1 0x0
0x6d1 SLOAD
0x6d2 CALLER
0x6d3 PUSH1 0x1
0x6d5 PUSH1 0xa0
0x6d7 PUSH1 0x2
0x6d9 EXP
0x6da SUB
0x6db SWAP1
0x6dc DUP2
0x6dd AND
0x6de SWAP2
0x6df AND
0x6e0 EQ
0x6e1 ISZERO
0x6e2 PUSH2 0x747
0x6e5 JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V601 = 0x0
0x6d1: V602 = S[0x0]
0x6d2: V603 = CALLER
0x6d3: V604 = 0x1
0x6d5: V605 = 0xa0
0x6d7: V606 = 0x2
0x6d9: V607 = EXP 0x2 0xa0
0x6da: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dd: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x6df: V610 = AND V602 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V611 = EQ V610 V609
0x6e1: V612 = ISZERO V611
0x6e2: V613 = 0x747
0x6e5: JUMPI 0x747 V612
---
Entry stack: [V12, 0x268, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V243]

================================

Block 0x6e6
[0x6e6:0x741]
---
Predecessors: [0x6ce]
Successors: [0x742]
---
0x6e6 PUSH1 0x2
0x6e8 DUP1
0x6e9 SLOAD
0x6ea PUSH1 0x1
0x6ec PUSH1 0xa0
0x6ee PUSH1 0x2
0x6f0 EXP
0x6f1 SUB
0x6f2 NOT
0x6f3 AND
0x6f4 PUSH1 0x1
0x6f6 PUSH1 0xa0
0x6f8 PUSH1 0x2
0x6fa EXP
0x6fb SUB
0x6fc DUP4
0x6fd DUP2
0x6fe AND
0x6ff SWAP2
0x700 DUP3
0x701 OR
0x702 SWAP1
0x703 SWAP3
0x704 SSTORE
0x705 PUSH1 0x40
0x707 DUP1
0x708 MLOAD
0x709 SWAP2
0x70a DUP3
0x70b MSTORE
0x70c ORIGIN
0x70d SWAP1
0x70e SWAP3
0x70f AND
0x710 PUSH1 0x20
0x712 DUP3
0x713 ADD
0x714 MSTORE
0x715 DUP2
0x716 MLOAD
0x717 PUSH32 0xc1d3048301c0d23629a2532c8defa6d68f8e1a0e4157918769e9fb1b2eeb888e
0x738 SWAP3
0x739 SWAP2
0x73a DUP2
0x73b SWAP1
0x73c SUB
0x73d SWAP1
0x73e SWAP2
0x73f ADD
0x740 SWAP1
0x741 LOG1
---
0x6e6: V614 = 0x2
0x6e9: V615 = S[0x2]
0x6ea: V616 = 0x1
0x6ec: V617 = 0xa0
0x6ee: V618 = 0x2
0x6f0: V619 = EXP 0x2 0xa0
0x6f1: V620 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f2: V621 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6f3: V622 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V615
0x6f4: V623 = 0x1
0x6f6: V624 = 0xa0
0x6f8: V625 = 0x2
0x6fa: V626 = EXP 0x2 0xa0
0x6fb: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fe: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x701: V629 = OR V628 V622
0x704: S[0x2] = V629
0x705: V630 = 0x40
0x708: V631 = M[0x40]
0x70b: M[V631] = V628
0x70c: V632 = ORIGIN
0x70f: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x710: V634 = 0x20
0x713: V635 = ADD V631 0x20
0x714: M[V635] = V633
0x716: V636 = M[0x40]
0x717: V637 = 0xc1d3048301c0d23629a2532c8defa6d68f8e1a0e4157918769e9fb1b2eeb888e
0x73c: V638 = SUB V631 V636
0x73f: V639 = ADD 0x40 V638
0x741: LOG V636 V639 0xc1d3048301c0d23629a2532c8defa6d68f8e1a0e4157918769e9fb1b2eeb888e
---
Entry stack: [V12, 0x268, V243]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x268, V243]

================================

Block 0x742
[0x742:0x746]
---
Predecessors: [0x6e6]
Successors: [0x77e]
---
0x742 JUMPDEST
0x743 PUSH2 0x77e
0x746 JUMP
---
0x742: JUMPDEST 
0x743: V640 = 0x77e
0x746: JUMP 0x77e
---
Entry stack: [V12, 0x268, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V243]

================================

Block 0x747
[0x747:0x77d]
---
Predecessors: [0x6ce, 0x7c9, 0x89b, 0xad2, 0xb55]
Successors: [0x77e]
---
0x747 JUMPDEST
0x748 PUSH1 0x0
0x74a SLOAD
0x74b PUSH1 0x40
0x74d DUP1
0x74e MLOAD
0x74f PUSH1 0x1
0x751 PUSH1 0xa0
0x753 PUSH1 0x2
0x755 EXP
0x756 SUB
0x757 CALLER
0x758 DUP2
0x759 AND
0x75a DUP3
0x75b MSTORE
0x75c SWAP1
0x75d SWAP3
0x75e AND
0x75f PUSH1 0x20
0x761 DUP4
0x762 ADD
0x763 MSTORE
0x764 DUP1
0x765 MLOAD
0x766 PUSH1 0x0
0x768 DUP1
0x769 MLOAD
0x76a PUSH1 0x20
0x76c PUSH2 0xd52
0x76f DUP4
0x770 CODECOPY
0x771 DUP2
0x772 MLOAD
0x773 SWAP2
0x774 MSTORE
0x775 SWAP3
0x776 DUP2
0x777 SWAP1
0x778 SUB
0x779 SWAP1
0x77a SWAP2
0x77b ADD
0x77c SWAP1
0x77d LOG1
---
0x747: JUMPDEST 
0x748: V641 = 0x0
0x74a: V642 = S[0x0]
0x74b: V643 = 0x40
0x74e: V644 = M[0x40]
0x74f: V645 = 0x1
0x751: V646 = 0xa0
0x753: V647 = 0x2
0x755: V648 = EXP 0x2 0xa0
0x756: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x757: V650 = CALLER
0x759: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x75b: M[V644] = V651
0x75e: V652 = AND V642 0xffffffffffffffffffffffffffffffffffffffff
0x75f: V653 = 0x20
0x762: V654 = ADD V644 0x20
0x763: M[V654] = V652
0x765: V655 = M[0x40]
0x766: V656 = 0x0
0x769: V657 = M[0x0]
0x76a: V658 = 0x20
0x76c: V659 = 0xd52
0x770: CODECOPY 0x0 0xd52 0x20
0x772: V660 = M[0x0]
0x774: M[0x0] = V657
0x778: V661 = SUB V644 V655
0x77b: V662 = ADD 0x40 V661
0x77d: LOG V655 V662 V660
---
Entry stack: [V12, 0x268, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, S0]

================================

Block 0x77e
[0x77e:0x77e]
---
Predecessors: [0x742, 0x747, 0x85b, 0x8ce, 0xb15, 0xb88]
Successors: [0x77f]
---
0x77e JUMPDEST
---
0x77e: JUMPDEST 
---
Entry stack: [V12, 0x268, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, S0]

================================

Block 0x77f
[0x77f:0x781]
---
Predecessors: [0x77e]
Successors: [0x268]
---
0x77f JUMPDEST
0x780 POP
0x781 JUMP
---
0x77f: JUMPDEST 
0x781: JUMP 0x268
---
Entry stack: [V12, 0x268, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x782
[0x782:0x790]
---
Predecessors: [0x2be]
Successors: [0x235]
---
0x782 JUMPDEST
0x783 PUSH1 0x2
0x785 SLOAD
0x786 PUSH1 0x1
0x788 PUSH1 0xa0
0x78a PUSH1 0x2
0x78c EXP
0x78d SUB
0x78e AND
0x78f DUP2
0x790 JUMP
---
0x782: JUMPDEST 
0x783: V663 = 0x2
0x785: V664 = S[0x2]
0x786: V665 = 0x1
0x788: V666 = 0xa0
0x78a: V667 = 0x2
0x78c: V668 = EXP 0x2 0xa0
0x78d: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78e: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0x790: JUMP 0x235
---
Entry stack: [V12, 0x235]
Stack pops: 1
Stack additions: [S0, V670]
Exit stack: [V12, 0x235, V670]

================================

Block 0x791
[0x791:0x79d]
---
Predecessors: [0x2ea]
Successors: [0x79e]
---
0x791 JUMPDEST
0x792 PUSH1 0x0
0x794 SLOAD
0x795 PUSH1 0x1
0x797 PUSH1 0xa0
0x799 PUSH1 0x2
0x79b EXP
0x79c SUB
0x79d AND
---
0x791: JUMPDEST 
0x792: V671 = 0x0
0x794: V672 = S[0x0]
0x795: V673 = 0x1
0x797: V674 = 0xa0
0x799: V675 = 0x2
0x79b: V676 = EXP 0x2 0xa0
0x79c: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79d: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
---
Entry stack: [V12, 0x235]
Stack pops: 0
Stack additions: [V678]
Exit stack: [V12, 0x235, V678]

================================

Block 0x79e
[0x79e:0x7a0]
---
Predecessors: [0x791]
Successors: [0x235]
---
0x79e JUMPDEST
0x79f SWAP1
0x7a0 JUMP
---
0x79e: JUMPDEST 
0x7a0: JUMP 0x235
---
Entry stack: [V12, 0x235, V678]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V678]

================================

Block 0x7a1
[0x7a1:0x7b6]
---
Predecessors: [0x316]
Successors: [0x7b7]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x6
0x7a4 SLOAD
0x7a5 PUSH9 0x10000000000000000
0x7af SWAP1
0x7b0 DIV
0x7b1 PUSH1 0xe0
0x7b3 PUSH1 0x2
0x7b5 EXP
0x7b6 MUL
---
0x7a1: JUMPDEST 
0x7a2: V679 = 0x6
0x7a4: V680 = S[0x6]
0x7a5: V681 = 0x10000000000000000
0x7b0: V682 = DIV V680 0x10000000000000000
0x7b1: V683 = 0xe0
0x7b3: V684 = 0x2
0x7b5: V685 = EXP 0x2 0xe0
0x7b6: V686 = MUL 0x100000000000000000000000000000000000000000000000000000000 V682
---
Entry stack: [V12, 0x31e]
Stack pops: 0
Stack additions: [V686]
Exit stack: [V12, 0x31e, V686]

================================

Block 0x7b7
[0x7b7:0x7b9]
---
Predecessors: [0x7a1]
Successors: [0x31e]
---
0x7b7 JUMPDEST
0x7b8 SWAP1
0x7b9 JUMP
---
0x7b7: JUMPDEST 
0x7b9: JUMP 0x31e
---
Entry stack: [V12, 0x31e, V686]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V686]

================================

Block 0x7ba
[0x7ba:0x7c8]
---
Predecessors: [0x35b]
Successors: [0x235]
---
0x7ba JUMPDEST
0x7bb PUSH1 0x3
0x7bd SLOAD
0x7be PUSH1 0x1
0x7c0 PUSH1 0xa0
0x7c2 PUSH1 0x2
0x7c4 EXP
0x7c5 SUB
0x7c6 AND
0x7c7 DUP2
0x7c8 JUMP
---
0x7ba: JUMPDEST 
0x7bb: V687 = 0x3
0x7bd: V688 = S[0x3]
0x7be: V689 = 0x1
0x7c0: V690 = 0xa0
0x7c2: V691 = 0x2
0x7c4: V692 = EXP 0x2 0xa0
0x7c5: V693 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c6: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0x7c8: JUMP 0x235
---
Entry stack: [V12, 0x235]
Stack pops: 1
Stack additions: [S0, V694]
Exit stack: [V12, 0x235, V694]

================================

Block 0x7c9
[0x7c9:0x7e0]
---
Predecessors: [0x387]
Successors: [0x747, 0x7e1]
---
0x7c9 JUMPDEST
0x7ca PUSH1 0x0
0x7cc SLOAD
0x7cd CALLER
0x7ce PUSH1 0x1
0x7d0 PUSH1 0xa0
0x7d2 PUSH1 0x2
0x7d4 EXP
0x7d5 SUB
0x7d6 SWAP1
0x7d7 DUP2
0x7d8 AND
0x7d9 SWAP2
0x7da AND
0x7db EQ
0x7dc ISZERO
0x7dd PUSH2 0x747
0x7e0 JUMPI
---
0x7c9: JUMPDEST 
0x7ca: V695 = 0x0
0x7cc: V696 = S[0x0]
0x7cd: V697 = CALLER
0x7ce: V698 = 0x1
0x7d0: V699 = 0xa0
0x7d2: V700 = 0x2
0x7d4: V701 = EXP 0x2 0xa0
0x7d5: V702 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d8: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0x7da: V704 = AND V696 0xffffffffffffffffffffffffffffffffffffffff
0x7db: V705 = EQ V704 V703
0x7dc: V706 = ISZERO V705
0x7dd: V707 = 0x747
0x7e0: JUMPI 0x747 V706
---
Entry stack: [V12, 0x268, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V314]

================================

Block 0x7e1
[0x7e1:0x7eb]
---
Predecessors: [0x7c9]
Successors: [0x7ec, 0x7f4]
---
0x7e1 PUSH1 0x0
0x7e3 DUP2
0x7e4 GT
0x7e5 ISZERO
0x7e6 DUP1
0x7e7 ISZERO
0x7e8 PUSH2 0x7f4
0x7eb JUMPI
---
0x7e1: V708 = 0x0
0x7e4: V709 = GT V314 0x0
0x7e5: V710 = ISZERO V709
0x7e7: V711 = ISZERO V710
0x7e8: V712 = 0x7f4
0x7eb: JUMPI 0x7f4 V711
---
Entry stack: [V12, 0x268, V314]
Stack pops: 1
Stack additions: [S0, V710]
Exit stack: [V12, 0x268, V314, V710]

================================

Block 0x7ec
[0x7ec:0x7f3]
---
Predecessors: [0x7e1]
Successors: [0x7f4]
---
0x7ec POP
0x7ed PUSH1 0x8
0x7ef SLOAD
0x7f0 PUSH1 0xff
0x7f2 AND
0x7f3 ISZERO
---
0x7ed: V713 = 0x8
0x7ef: V714 = S[0x8]
0x7f0: V715 = 0xff
0x7f2: V716 = AND 0xff V714
0x7f3: V717 = ISZERO V716
---
Entry stack: [V12, 0x268, V314, V710]
Stack pops: 1
Stack additions: [V717]
Exit stack: [V12, 0x268, V314, V717]

================================

Block 0x7f4
[0x7f4:0x7f9]
---
Predecessors: [0x7e1, 0x7ec]
Successors: [0x7fa, 0x7ff]
---
0x7f4 JUMPDEST
0x7f5 ISZERO
0x7f6 PUSH2 0x7ff
0x7f9 JUMPI
---
0x7f4: JUMPDEST 
0x7f5: V718 = ISZERO S0
0x7f6: V719 = 0x7ff
0x7f9: JUMPI 0x7ff V718
---
Entry stack: [V12, 0x268, V314, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x268, V314]

================================

Block 0x7fa
[0x7fa:0x7fe]
---
Predecessors: [0x7f4]
Successors: []
---
0x7fa PUSH1 0x0
0x7fc PUSH1 0x0
0x7fe REVERT
---
0x7fa: V720 = 0x0
0x7fc: V721 = 0x0
0x7fe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x268, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V314]

================================

Block 0x7ff
[0x7ff:0x85a]
---
Predecessors: [0x7f4]
Successors: [0x85b]
---
0x7ff JUMPDEST
0x800 PUSH1 0x1
0x802 PUSH1 0xa0
0x804 PUSH1 0x2
0x806 EXP
0x807 SUB
0x808 CALLER
0x809 AND
0x80a PUSH1 0x0
0x80c SWAP1
0x80d DUP2
0x80e MSTORE
0x80f PUSH1 0x4
0x811 PUSH1 0x20
0x813 SWAP1
0x814 DUP2
0x815 MSTORE
0x816 PUSH1 0x40
0x818 SWAP2
0x819 DUP3
0x81a SWAP1
0x81b SHA3
0x81c DUP1
0x81d SLOAD
0x81e DUP5
0x81f ADD
0x820 SWAP1
0x821 SSTORE
0x822 PUSH1 0x7
0x824 DUP1
0x825 SLOAD
0x826 DUP5
0x827 ADD
0x828 SWAP1
0x829 SSTORE
0x82a DUP2
0x82b MLOAD
0x82c DUP4
0x82d DUP2
0x82e MSTORE
0x82f SWAP2
0x830 MLOAD
0x831 PUSH32 0x176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a
0x852 SWAP3
0x853 DUP2
0x854 SWAP1
0x855 SUB
0x856 SWAP1
0x857 SWAP2
0x858 ADD
0x859 SWAP1
0x85a LOG1
---
0x7ff: JUMPDEST 
0x800: V722 = 0x1
0x802: V723 = 0xa0
0x804: V724 = 0x2
0x806: V725 = EXP 0x2 0xa0
0x807: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x808: V727 = CALLER
0x809: V728 = AND V727 0xffffffffffffffffffffffffffffffffffffffff
0x80a: V729 = 0x0
0x80e: M[0x0] = V728
0x80f: V730 = 0x4
0x811: V731 = 0x20
0x815: M[0x20] = 0x4
0x816: V732 = 0x40
0x81b: V733 = SHA3 0x0 0x40
0x81d: V734 = S[V733]
0x81f: V735 = ADD V314 V734
0x821: S[V733] = V735
0x822: V736 = 0x7
0x825: V737 = S[0x7]
0x827: V738 = ADD V314 V737
0x829: S[0x7] = V738
0x82b: V739 = M[0x40]
0x82e: M[V739] = V314
0x830: V740 = M[0x40]
0x831: V741 = 0x176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a
0x855: V742 = SUB V739 V740
0x858: V743 = ADD 0x20 V742
0x85a: LOG V740 V743 0x176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a
---
Entry stack: [V12, 0x268, V314]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x268, V314]

================================

Block 0x85b
[0x85b:0x85f]
---
Predecessors: [0x7ff]
Successors: [0x77e]
---
0x85b JUMPDEST
0x85c PUSH2 0x77e
0x85f JUMP
---
0x85b: JUMPDEST 
0x85c: V744 = 0x77e
0x85f: JUMP 0x77e
---
Entry stack: [V12, 0x268, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V314]

================================

Block 0x860
[0x860:0x896]
---
Predecessors: []
Successors: [0x897]
---
0x860 JUMPDEST
0x861 PUSH1 0x0
0x863 SLOAD
0x864 PUSH1 0x40
0x866 DUP1
0x867 MLOAD
0x868 PUSH1 0x1
0x86a PUSH1 0xa0
0x86c PUSH1 0x2
0x86e EXP
0x86f SUB
0x870 CALLER
0x871 DUP2
0x872 AND
0x873 DUP3
0x874 MSTORE
0x875 SWAP1
0x876 SWAP3
0x877 AND
0x878 PUSH1 0x20
0x87a DUP4
0x87b ADD
0x87c MSTORE
0x87d DUP1
0x87e MLOAD
0x87f PUSH1 0x0
0x881 DUP1
0x882 MLOAD
0x883 PUSH1 0x20
0x885 PUSH2 0xd52
0x888 DUP4
0x889 CODECOPY
0x88a DUP2
0x88b MLOAD
0x88c SWAP2
0x88d MSTORE
0x88e SWAP3
0x88f DUP2
0x890 SWAP1
0x891 SUB
0x892 SWAP1
0x893 SWAP2
0x894 ADD
0x895 SWAP1
0x896 LOG1
---
0x860: JUMPDEST 
0x861: V745 = 0x0
0x863: V746 = S[0x0]
0x864: V747 = 0x40
0x867: V748 = M[0x40]
0x868: V749 = 0x1
0x86a: V750 = 0xa0
0x86c: V751 = 0x2
0x86e: V752 = EXP 0x2 0xa0
0x86f: V753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x870: V754 = CALLER
0x872: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0x874: M[V748] = V755
0x877: V756 = AND V746 0xffffffffffffffffffffffffffffffffffffffff
0x878: V757 = 0x20
0x87b: V758 = ADD V748 0x20
0x87c: M[V758] = V756
0x87e: V759 = M[0x40]
0x87f: V760 = 0x0
0x882: V761 = M[0x0]
0x883: V762 = 0x20
0x885: V763 = 0xd52
0x889: CODECOPY 0x0 0xd52 0x20
0x88b: V764 = M[0x0]
0x88d: M[0x0] = V761
0x891: V765 = SUB V748 V759
0x894: V766 = ADD 0x40 V765
0x896: LOG V759 V766 V764
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x897
[0x897:0x897]
---
Predecessors: [0x860]
Successors: [0x898]
---
0x897 JUMPDEST
---
0x897: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x898
[0x898:0x89a]
---
Predecessors: [0x897]
Successors: []
Has unresolved jump.
---
0x898 JUMPDEST
0x899 POP
0x89a JUMP
---
0x898: JUMPDEST 
0x89a: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x89b
[0x89b:0x8b2]
---
Predecessors: [0x39c]
Successors: [0x747, 0x8b3]
---
0x89b JUMPDEST
0x89c PUSH1 0x0
0x89e SLOAD
0x89f CALLER
0x8a0 PUSH1 0x1
0x8a2 PUSH1 0xa0
0x8a4 PUSH1 0x2
0x8a6 EXP
0x8a7 SUB
0x8a8 SWAP1
0x8a9 DUP2
0x8aa AND
0x8ab SWAP2
0x8ac AND
0x8ad EQ
0x8ae ISZERO
0x8af PUSH2 0x747
0x8b2 JUMPI
---
0x89b: JUMPDEST 
0x89c: V767 = 0x0
0x89e: V768 = S[0x0]
0x89f: V769 = CALLER
0x8a0: V770 = 0x1
0x8a2: V771 = 0xa0
0x8a4: V772 = 0x2
0x8a6: V773 = EXP 0x2 0xa0
0x8a7: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8aa: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x8ac: V776 = AND V768 0xffffffffffffffffffffffffffffffffffffffff
0x8ad: V777 = EQ V776 V775
0x8ae: V778 = ISZERO V777
0x8af: V779 = 0x747
0x8b2: JUMPI 0x747 V778
---
Entry stack: [V12, 0x268, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V327]

================================

Block 0x8b3
[0x8b3:0x8cd]
---
Predecessors: [0x89b]
Successors: [0x8ce]
---
0x8b3 PUSH1 0x1
0x8b5 DUP1
0x8b6 SLOAD
0x8b7 PUSH1 0x1
0x8b9 PUSH1 0xa0
0x8bb PUSH1 0x2
0x8bd EXP
0x8be SUB
0x8bf NOT
0x8c0 AND
0x8c1 PUSH1 0x1
0x8c3 PUSH1 0xa0
0x8c5 PUSH1 0x2
0x8c7 EXP
0x8c8 SUB
0x8c9 DUP4
0x8ca AND
0x8cb OR
0x8cc SWAP1
0x8cd SSTORE
---
0x8b3: V780 = 0x1
0x8b6: V781 = S[0x1]
0x8b7: V782 = 0x1
0x8b9: V783 = 0xa0
0x8bb: V784 = 0x2
0x8bd: V785 = EXP 0x2 0xa0
0x8be: V786 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bf: V787 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8c0: V788 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V781
0x8c1: V789 = 0x1
0x8c3: V790 = 0xa0
0x8c5: V791 = 0x2
0x8c7: V792 = EXP 0x2 0xa0
0x8c8: V793 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ca: V794 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x8cb: V795 = OR V794 V788
0x8cd: S[0x1] = V795
---
Entry stack: [V12, 0x268, V327]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x268, V327]

================================

Block 0x8ce
[0x8ce:0x8d2]
---
Predecessors: [0x8b3]
Successors: [0x77e]
---
0x8ce JUMPDEST
0x8cf PUSH2 0x77e
0x8d2 JUMP
---
0x8ce: JUMPDEST 
0x8cf: V796 = 0x77e
0x8d2: JUMP 0x77e
---
Entry stack: [V12, 0x268, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V327]

================================

Block 0x8d3
[0x8d3:0x909]
---
Predecessors: []
Successors: [0x90a]
---
0x8d3 JUMPDEST
0x8d4 PUSH1 0x0
0x8d6 SLOAD
0x8d7 PUSH1 0x40
0x8d9 DUP1
0x8da MLOAD
0x8db PUSH1 0x1
0x8dd PUSH1 0xa0
0x8df PUSH1 0x2
0x8e1 EXP
0x8e2 SUB
0x8e3 CALLER
0x8e4 DUP2
0x8e5 AND
0x8e6 DUP3
0x8e7 MSTORE
0x8e8 SWAP1
0x8e9 SWAP3
0x8ea AND
0x8eb PUSH1 0x20
0x8ed DUP4
0x8ee ADD
0x8ef MSTORE
0x8f0 DUP1
0x8f1 MLOAD
0x8f2 PUSH1 0x0
0x8f4 DUP1
0x8f5 MLOAD
0x8f6 PUSH1 0x20
0x8f8 PUSH2 0xd52
0x8fb DUP4
0x8fc CODECOPY
0x8fd DUP2
0x8fe MLOAD
0x8ff SWAP2
0x900 MSTORE
0x901 SWAP3
0x902 DUP2
0x903 SWAP1
0x904 SUB
0x905 SWAP1
0x906 SWAP2
0x907 ADD
0x908 SWAP1
0x909 LOG1
---
0x8d3: JUMPDEST 
0x8d4: V797 = 0x0
0x8d6: V798 = S[0x0]
0x8d7: V799 = 0x40
0x8da: V800 = M[0x40]
0x8db: V801 = 0x1
0x8dd: V802 = 0xa0
0x8df: V803 = 0x2
0x8e1: V804 = EXP 0x2 0xa0
0x8e2: V805 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e3: V806 = CALLER
0x8e5: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V806
0x8e7: M[V800] = V807
0x8ea: V808 = AND V798 0xffffffffffffffffffffffffffffffffffffffff
0x8eb: V809 = 0x20
0x8ee: V810 = ADD V800 0x20
0x8ef: M[V810] = V808
0x8f1: V811 = M[0x40]
0x8f2: V812 = 0x0
0x8f5: V813 = M[0x0]
0x8f6: V814 = 0x20
0x8f8: V815 = 0xd52
0x8fc: CODECOPY 0x0 0xd52 0x20
0x8fe: V816 = M[0x0]
0x900: M[0x0] = V813
0x904: V817 = SUB V800 V811
0x907: V818 = ADD 0x40 V817
0x909: LOG V811 V818 V816
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x90a
[0x90a:0x90a]
---
Predecessors: [0x8d3]
Successors: [0x90b]
---
0x90a JUMPDEST
---
0x90a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x90b
[0x90b:0x90d]
---
Predecessors: [0x90a]
Successors: []
Has unresolved jump.
---
0x90b JUMPDEST
0x90c POP
0x90d JUMP
---
0x90b: JUMPDEST 
0x90d: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x90e
[0x90e:0x929]
---
Predecessors: [0x3ba, 0x55c]
Successors: [0x92a, 0x93c]
---
0x90e JUMPDEST
0x90f PUSH1 0x1
0x911 SLOAD
0x912 PUSH1 0x0
0x914 SWAP1
0x915 CALLER
0x916 SWAP1
0x917 PUSH1 0x1
0x919 PUSH1 0xa0
0x91b PUSH1 0x2
0x91d EXP
0x91e SUB
0x91f DUP1
0x920 DUP4
0x921 AND
0x922 SWAP2
0x923 AND
0x924 EQ
0x925 DUP1
0x926 PUSH2 0x93c
0x929 JUMPI
---
0x90e: JUMPDEST 
0x90f: V819 = 0x1
0x911: V820 = S[0x1]
0x912: V821 = 0x0
0x915: V822 = CALLER
0x917: V823 = 0x1
0x919: V824 = 0xa0
0x91b: V825 = 0x2
0x91d: V826 = EXP 0x2 0xa0
0x91e: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x921: V828 = AND V822 0xffffffffffffffffffffffffffffffffffffffff
0x923: V829 = AND V820 0xffffffffffffffffffffffffffffffffffffffff
0x924: V830 = EQ V829 V828
0x926: V831 = 0x93c
0x929: JUMPI 0x93c V830
---
Entry stack: [V12, 0x268, V209, V211, S4, {0x160, 0x574}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, V822, V830]
Exit stack: [V12, 0x268, V209, V211, S4, {0x160, 0x574}, S2, S1, S0, 0x0, V822, V830]

================================

Block 0x92a
[0x92a:0x93b]
---
Predecessors: [0x90e]
Successors: [0x93c]
---
0x92a POP
0x92b PUSH1 0x2
0x92d SLOAD
0x92e PUSH1 0x1
0x930 PUSH1 0xa0
0x932 PUSH1 0x2
0x934 EXP
0x935 SUB
0x936 DUP3
0x937 DUP2
0x938 AND
0x939 SWAP2
0x93a AND
0x93b EQ
---
0x92b: V832 = 0x2
0x92d: V833 = S[0x2]
0x92e: V834 = 0x1
0x930: V835 = 0xa0
0x932: V836 = 0x2
0x934: V837 = EXP 0x2 0xa0
0x935: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0x938: V839 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0x93a: V840 = AND V833 0xffffffffffffffffffffffffffffffffffffffff
0x93b: V841 = EQ V840 V839
---
Entry stack: [V12, 0x268, V209, V211, S7, {0x160, 0x574}, S5, S4, S3, 0x0, V822, V830]
Stack pops: 2
Stack additions: [S1, V841]
Exit stack: [V12, 0x268, V209, V211, S7, {0x160, 0x574}, S5, S4, S3, 0x0, V822, V841]

================================

Block 0x93c
[0x93c:0x941]
---
Predecessors: [0x90e, 0x92a]
Successors: [0x942, 0xa1f]
---
0x93c JUMPDEST
0x93d ISZERO
0x93e PUSH2 0xa1f
0x941 JUMPI
---
0x93c: JUMPDEST 
0x93d: V842 = ISZERO S0
0x93e: V843 = 0xa1f
0x941: JUMPI 0xa1f V842
---
Entry stack: [V12, 0x268, V209, V211, S7, {0x160, 0x574}, S5, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S7, {0x160, 0x574}, S5, S4, S3, 0x0, S1]

================================

Block 0x942
[0x942:0x949]
---
Predecessors: [0x93c]
Successors: [0x94a, 0x952]
---
0x942 PUSH1 0x0
0x944 DUP4
0x945 GT
0x946 PUSH2 0x952
0x949 JUMPI
---
0x942: V844 = 0x0
0x945: V845 = GT S2 0x0
0x946: V846 = 0x952
0x949: JUMPI 0x952 V845
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]

================================

Block 0x94a
[0x94a:0x951]
---
Predecessors: [0x942]
Successors: [0xa1a]
---
0x94a PUSH1 0x0
0x94c SWAP2
0x94d POP
0x94e PUSH2 0xa1a
0x951 JUMP
---
0x94a: V847 = 0x0
0x94e: V848 = 0xa1a
0x951: JUMP 0xa1a
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]

================================

Block 0x952
[0x952:0x974]
---
Predecessors: [0x942]
Successors: [0x975, 0x97d]
---
0x952 JUMPDEST
0x953 PUSH1 0x1
0x955 PUSH1 0xa0
0x957 PUSH1 0x2
0x959 EXP
0x95a SUB
0x95b DUP6
0x95c AND
0x95d PUSH1 0x0
0x95f SWAP1
0x960 DUP2
0x961 MSTORE
0x962 PUSH1 0x5
0x964 PUSH1 0x20
0x966 MSTORE
0x967 PUSH1 0x40
0x969 SWAP1
0x96a SHA3
0x96b SLOAD
0x96c PUSH1 0xff
0x96e AND
0x96f ISZERO
0x970 ISZERO
0x971 PUSH2 0x97d
0x974 JUMPI
---
0x952: JUMPDEST 
0x953: V849 = 0x1
0x955: V850 = 0xa0
0x957: V851 = 0x2
0x959: V852 = EXP 0x2 0xa0
0x95a: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95c: V854 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x95d: V855 = 0x0
0x961: M[0x0] = V854
0x962: V856 = 0x5
0x964: V857 = 0x20
0x966: M[0x20] = 0x5
0x967: V858 = 0x40
0x96a: V859 = SHA3 0x0 0x40
0x96b: V860 = S[V859]
0x96c: V861 = 0xff
0x96e: V862 = AND 0xff V860
0x96f: V863 = ISZERO V862
0x970: V864 = ISZERO V863
0x971: V865 = 0x97d
0x974: JUMPI 0x97d V864
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]

================================

Block 0x975
[0x975:0x97c]
---
Predecessors: [0x952]
Successors: [0xbc8]
---
0x975 PUSH2 0x97d
0x978 DUP6
0x979 PUSH2 0xbc8
0x97c JUMP
---
0x975: V866 = 0x97d
0x979: V867 = 0xbc8
0x97c: JUMP 0xbc8
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x97d, S4]
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0, 0x97d, S4]

================================

Block 0x97d
[0x97d:0x97d]
---
Predecessors: [0x952, 0xd4c]
Successors: [0x97e]
---
0x97d JUMPDEST
---
0x97d: JUMPDEST 
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]

================================

Block 0x97e
[0x97e:0x99f]
---
Predecessors: [0x97d]
Successors: [0x9a0, 0x9a8]
---
0x97e JUMPDEST
0x97f PUSH1 0x1
0x981 PUSH1 0xa0
0x983 PUSH1 0x2
0x985 EXP
0x986 SUB
0x987 DUP6
0x988 AND
0x989 PUSH1 0x0
0x98b SWAP1
0x98c DUP2
0x98d MSTORE
0x98e PUSH1 0x4
0x990 PUSH1 0x20
0x992 MSTORE
0x993 PUSH1 0x40
0x995 SWAP1
0x996 SHA3
0x997 SLOAD
0x998 DUP4
0x999 SWAP1
0x99a LT
0x99b ISZERO
0x99c PUSH2 0x9a8
0x99f JUMPI
---
0x97e: JUMPDEST 
0x97f: V868 = 0x1
0x981: V869 = 0xa0
0x983: V870 = 0x2
0x985: V871 = EXP 0x2 0xa0
0x986: V872 = SUB 0x10000000000000000000000000000000000000000 0x1
0x988: V873 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x989: V874 = 0x0
0x98d: M[0x0] = V873
0x98e: V875 = 0x4
0x990: V876 = 0x20
0x992: M[0x20] = 0x4
0x993: V877 = 0x40
0x996: V878 = SHA3 0x0 0x40
0x997: V879 = S[V878]
0x99a: V880 = LT V879 S2
0x99b: V881 = ISZERO V880
0x99c: V882 = 0x9a8
0x99f: JUMPI 0x9a8 V881
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]

================================

Block 0x9a0
[0x9a0:0x9a7]
---
Predecessors: [0x97e]
Successors: [0xa1a]
---
0x9a0 PUSH1 0x0
0x9a2 SWAP2
0x9a3 POP
0x9a4 PUSH2 0xa1a
0x9a7 JUMP
---
0x9a0: V883 = 0x0
0x9a4: V884 = 0xa1a
0x9a7: JUMP 0xa1a
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]

================================

Block 0x9a8
[0x9a8:0xa19]
---
Predecessors: [0x97e]
Successors: [0xa1a]
---
0x9a8 JUMPDEST
0x9a9 PUSH1 0x1
0x9ab PUSH1 0xa0
0x9ad PUSH1 0x2
0x9af EXP
0x9b0 SUB
0x9b1 DUP1
0x9b2 DUP7
0x9b3 AND
0x9b4 PUSH1 0x0
0x9b6 DUP2
0x9b7 DUP2
0x9b8 MSTORE
0x9b9 PUSH1 0x4
0x9bb PUSH1 0x20
0x9bd SWAP1
0x9be DUP2
0x9bf MSTORE
0x9c0 PUSH1 0x40
0x9c2 DUP1
0x9c3 DUP4
0x9c4 SHA3
0x9c5 DUP1
0x9c6 SLOAD
0x9c7 DUP10
0x9c8 SWAP1
0x9c9 SUB
0x9ca SWAP1
0x9cb SSTORE
0x9cc SWAP4
0x9cd DUP9
0x9ce AND
0x9cf DUP1
0x9d0 DUP4
0x9d1 MSTORE
0x9d2 SWAP2
0x9d3 DUP5
0x9d4 SWAP1
0x9d5 SHA3
0x9d6 DUP1
0x9d7 SLOAD
0x9d8 DUP9
0x9d9 ADD
0x9da SWAP1
0x9db SSTORE
0x9dc DUP4
0x9dd MLOAD
0x9de DUP8
0x9df DUP2
0x9e0 MSTORE
0x9e1 GASPRICE
0x9e2 SWAP2
0x9e3 DUP2
0x9e4 ADD
0x9e5 SWAP2
0x9e6 SWAP1
0x9e7 SWAP2
0x9e8 MSTORE
0x9e9 DUP4
0x9ea MLOAD
0x9eb SWAP2
0x9ec SWAP4
0x9ed PUSH32 0x9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44
0xa0e SWAP3
0xa0f SWAP2
0xa10 DUP3
0xa11 SWAP1
0xa12 SUB
0xa13 ADD
0xa14 SWAP1
0xa15 LOG3
0xa16 PUSH1 0x1
0xa18 SWAP2
0xa19 POP
---
0x9a8: JUMPDEST 
0x9a9: V885 = 0x1
0x9ab: V886 = 0xa0
0x9ad: V887 = 0x2
0x9af: V888 = EXP 0x2 0xa0
0x9b0: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b3: V890 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x9b4: V891 = 0x0
0x9b8: M[0x0] = V890
0x9b9: V892 = 0x4
0x9bb: V893 = 0x20
0x9bf: M[0x20] = 0x4
0x9c0: V894 = 0x40
0x9c4: V895 = SHA3 0x0 0x40
0x9c6: V896 = S[V895]
0x9c9: V897 = SUB V896 S2
0x9cb: S[V895] = V897
0x9ce: V898 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x9d1: M[0x0] = V898
0x9d5: V899 = SHA3 0x0 0x40
0x9d7: V900 = S[V899]
0x9d9: V901 = ADD S2 V900
0x9db: S[V899] = V901
0x9dd: V902 = M[0x40]
0x9e0: M[V902] = S2
0x9e1: V903 = GASPRICE
0x9e4: V904 = ADD V902 0x20
0x9e8: M[V904] = V903
0x9ea: V905 = M[0x40]
0x9ed: V906 = 0x9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44
0xa12: V907 = SUB V902 V905
0xa13: V908 = ADD V907 0x40
0xa15: LOG V905 V908 0x9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44 V890 V898
0xa16: V909 = 0x1
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, 0x1, S0]
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x1, S0]

================================

Block 0xa1a
[0xa1a:0xa1e]
---
Predecessors: [0x94a, 0x9a0, 0x9a8]
Successors: [0xa5c]
---
0xa1a JUMPDEST
0xa1b PUSH2 0xa5c
0xa1e JUMP
---
0xa1a: JUMPDEST 
0xa1b: V910 = 0xa5c
0xa1e: JUMP 0xa5c
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0xa1f
[0xa1f:0xa5b]
---
Predecessors: [0x93c]
Successors: [0xa5c]
---
0xa1f JUMPDEST
0xa20 PUSH1 0x40
0xa22 DUP1
0xa23 MLOAD
0xa24 PUSH1 0x1
0xa26 PUSH1 0xa0
0xa28 PUSH1 0x2
0xa2a EXP
0xa2b SUB
0xa2c DUP4
0xa2d AND
0xa2e DUP2
0xa2f MSTORE
0xa30 SWAP1
0xa31 MLOAD
0xa32 PUSH32 0xda30cab8fb2c28848455e55d70c72edb9e639f97a81d6ec4b9bde452f277f0e6
0xa53 SWAP2
0xa54 DUP2
0xa55 SWAP1
0xa56 SUB
0xa57 PUSH1 0x20
0xa59 ADD
0xa5a SWAP1
0xa5b LOG1
---
0xa1f: JUMPDEST 
0xa20: V911 = 0x40
0xa23: V912 = M[0x40]
0xa24: V913 = 0x1
0xa26: V914 = 0xa0
0xa28: V915 = 0x2
0xa2a: V916 = EXP 0x2 0xa0
0xa2b: V917 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2d: V918 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xa2f: M[V912] = V918
0xa31: V919 = M[0x40]
0xa32: V920 = 0xda30cab8fb2c28848455e55d70c72edb9e639f97a81d6ec4b9bde452f277f0e6
0xa56: V921 = SUB V912 V919
0xa57: V922 = 0x20
0xa59: V923 = ADD 0x20 V921
0xa5b: LOG V919 V923 0xda30cab8fb2c28848455e55d70c72edb9e639f97a81d6ec4b9bde452f277f0e6
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, 0x0, S0]

================================

Block 0xa5c
[0xa5c:0xa5c]
---
Predecessors: [0xa1a, 0xa1f]
Successors: [0xa5d]
---
0xa5c JUMPDEST
---
0xa5c: JUMPDEST 
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0xa5d
[0xa5d:0xa64]
---
Predecessors: [0xa5c]
Successors: [0x160, 0x574]
---
0xa5d JUMPDEST
0xa5e POP
0xa5f SWAP4
0xa60 SWAP3
0xa61 POP
0xa62 POP
0xa63 POP
0xa64 JUMP
---
0xa5d: JUMPDEST 
0xa64: JUMP {0x160, 0x574}
---
Entry stack: [V12, 0x268, V209, V211, S6, {0x160, 0x574}, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V12, 0x268, V209, V211, S6, {0x0, 0x1}]

================================

Block 0xa65
[0xa65:0xa7c]
---
Predecessors: [0x3f3]
Successors: [0xa7d, 0xa8f]
---
0xa65 JUMPDEST
0xa66 PUSH1 0x0
0xa68 SLOAD
0xa69 CALLER
0xa6a PUSH1 0x1
0xa6c PUSH1 0xa0
0xa6e PUSH1 0x2
0xa70 EXP
0xa71 SUB
0xa72 SWAP1
0xa73 DUP2
0xa74 AND
0xa75 SWAP2
0xa76 AND
0xa77 EQ
0xa78 ISZERO
0xa79 PUSH2 0xa8f
0xa7c JUMPI
---
0xa65: JUMPDEST 
0xa66: V924 = 0x0
0xa68: V925 = S[0x0]
0xa69: V926 = CALLER
0xa6a: V927 = 0x1
0xa6c: V928 = 0xa0
0xa6e: V929 = 0x2
0xa70: V930 = EXP 0x2 0xa0
0xa71: V931 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa74: V932 = AND 0xffffffffffffffffffffffffffffffffffffffff V926
0xa76: V933 = AND V925 0xffffffffffffffffffffffffffffffffffffffff
0xa77: V934 = EQ V933 V932
0xa78: V935 = ISZERO V934
0xa79: V936 = 0xa8f
0xa7c: JUMPI 0xa8f V935
---
Entry stack: [V12, 0x268]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268]

================================

Block 0xa7d
[0xa7d:0xa89]
---
Predecessors: [0xa65]
Successors: [0xa8a]
---
0xa7d PUSH1 0x8
0xa7f DUP1
0xa80 SLOAD
0xa81 PUSH1 0xff
0xa83 NOT
0xa84 AND
0xa85 PUSH1 0x1
0xa87 OR
0xa88 SWAP1
0xa89 SSTORE
---
0xa7d: V937 = 0x8
0xa80: V938 = S[0x8]
0xa81: V939 = 0xff
0xa83: V940 = NOT 0xff
0xa84: V941 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V938
0xa85: V942 = 0x1
0xa87: V943 = OR 0x1 V941
0xa89: S[0x8] = V943
---
Entry stack: [V12, 0x268]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268]

================================

Block 0xa8a
[0xa8a:0xa8e]
---
Predecessors: [0xa7d]
Successors: [0xac6]
---
0xa8a JUMPDEST
0xa8b PUSH2 0xac6
0xa8e JUMP
---
0xa8a: JUMPDEST 
0xa8b: V944 = 0xac6
0xa8e: JUMP 0xac6
---
Entry stack: [V12, 0x268]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268]

================================

Block 0xa8f
[0xa8f:0xac5]
---
Predecessors: [0xa65]
Successors: [0xac6]
---
0xa8f JUMPDEST
0xa90 PUSH1 0x0
0xa92 SLOAD
0xa93 PUSH1 0x40
0xa95 DUP1
0xa96 MLOAD
0xa97 PUSH1 0x1
0xa99 PUSH1 0xa0
0xa9b PUSH1 0x2
0xa9d EXP
0xa9e SUB
0xa9f CALLER
0xaa0 DUP2
0xaa1 AND
0xaa2 DUP3
0xaa3 MSTORE
0xaa4 SWAP1
0xaa5 SWAP3
0xaa6 AND
0xaa7 PUSH1 0x20
0xaa9 DUP4
0xaaa ADD
0xaab MSTORE
0xaac DUP1
0xaad MLOAD
0xaae PUSH1 0x0
0xab0 DUP1
0xab1 MLOAD
0xab2 PUSH1 0x20
0xab4 PUSH2 0xd52
0xab7 DUP4
0xab8 CODECOPY
0xab9 DUP2
0xaba MLOAD
0xabb SWAP2
0xabc MSTORE
0xabd SWAP3
0xabe DUP2
0xabf SWAP1
0xac0 SUB
0xac1 SWAP1
0xac2 SWAP2
0xac3 ADD
0xac4 SWAP1
0xac5 LOG1
---
0xa8f: JUMPDEST 
0xa90: V945 = 0x0
0xa92: V946 = S[0x0]
0xa93: V947 = 0x40
0xa96: V948 = M[0x40]
0xa97: V949 = 0x1
0xa99: V950 = 0xa0
0xa9b: V951 = 0x2
0xa9d: V952 = EXP 0x2 0xa0
0xa9e: V953 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9f: V954 = CALLER
0xaa1: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V954
0xaa3: M[V948] = V955
0xaa6: V956 = AND V946 0xffffffffffffffffffffffffffffffffffffffff
0xaa7: V957 = 0x20
0xaaa: V958 = ADD V948 0x20
0xaab: M[V958] = V956
0xaad: V959 = M[0x40]
0xaae: V960 = 0x0
0xab1: V961 = M[0x0]
0xab2: V962 = 0x20
0xab4: V963 = 0xd52
0xab8: CODECOPY 0x0 0xd52 0x20
0xaba: V964 = M[0x0]
0xabc: M[0x0] = V961
0xac0: V965 = SUB V948 V959
0xac3: V966 = ADD 0x40 V965
0xac5: LOG V959 V966 V964
---
Entry stack: [V12, 0x268]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268]

================================

Block 0xac6
[0xac6:0xac6]
---
Predecessors: [0xa8a, 0xa8f]
Successors: [0xac7]
---
0xac6 JUMPDEST
---
0xac6: JUMPDEST 
---
Entry stack: [V12, 0x268]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268]

================================

Block 0xac7
[0xac7:0xac8]
---
Predecessors: [0xac6]
Successors: [0x268]
---
0xac7 JUMPDEST
0xac8 JUMP
---
0xac7: JUMPDEST 
0xac8: JUMP 0x268
---
Entry stack: [V12, 0x268]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xac9
[0xac9:0xacb]
---
Predecessors: []
Successors: [0xacc]
---
0xac9 JUMPDEST
0xaca PUSH1 0x0
---
0xac9: JUMPDEST 
0xaca: V967 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: [0x0]

================================

Block 0xacc
[0xacc:0xad1]
---
Predecessors: [0xac9]
Successors: []
Has unresolved jump.
---
0xacc JUMPDEST
0xacd SWAP3
0xace SWAP2
0xacf POP
0xad0 POP
0xad1 JUMP
---
0xacc: JUMPDEST 
0xad1: JUMP S3
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [0x0]

================================

Block 0xad2
[0xad2:0xaea]
---
Predecessors: [0x439]
Successors: [0x747, 0xaeb]
---
0xad2 JUMPDEST
0xad3 PUSH1 0x0
0xad5 DUP1
0xad6 SLOAD
0xad7 CALLER
0xad8 PUSH1 0x1
0xada PUSH1 0xa0
0xadc PUSH1 0x2
0xade EXP
0xadf SUB
0xae0 SWAP1
0xae1 DUP2
0xae2 AND
0xae3 SWAP2
0xae4 AND
0xae5 EQ
0xae6 ISZERO
0xae7 PUSH2 0x747
0xaea JUMPI
---
0xad2: JUMPDEST 
0xad3: V968 = 0x0
0xad6: V969 = S[0x0]
0xad7: V970 = CALLER
0xad8: V971 = 0x1
0xada: V972 = 0xa0
0xadc: V973 = 0x2
0xade: V974 = EXP 0x2 0xa0
0xadf: V975 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae2: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff V970
0xae4: V977 = AND V969 0xffffffffffffffffffffffffffffffffffffffff
0xae5: V978 = EQ V977 V976
0xae6: V979 = ISZERO V978
0xae7: V980 = 0x747
0xaea: JUMPI 0x747 V979
---
Entry stack: [V12, 0x268]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x268, 0x0]

================================

Block 0xaeb
[0xaeb:0xb14]
---
Predecessors: [0xad2]
Successors: [0xb15]
---
0xaeb PUSH1 0x40
0xaed MLOAD
0xaee PUSH1 0x1
0xaf0 PUSH1 0xa0
0xaf2 PUSH1 0x2
0xaf4 EXP
0xaf5 SUB
0xaf6 CALLER
0xaf7 DUP2
0xaf8 AND
0xaf9 SWAP2
0xafa ADDRESS
0xafb SWAP1
0xafc SWAP2
0xafd AND
0xafe BALANCE
0xaff DUP1
0xb00 ISZERO
0xb01 PUSH2 0x8fc
0xb04 MUL
0xb05 SWAP2
0xb06 PUSH1 0x0
0xb08 DUP2
0xb09 DUP2
0xb0a DUP2
0xb0b DUP6
0xb0c DUP9
0xb0d DUP9
0xb0e CALL
0xb0f SWAP5
0xb10 POP
0xb11 POP
0xb12 POP
0xb13 POP
0xb14 POP
---
0xaeb: V981 = 0x40
0xaed: V982 = M[0x40]
0xaee: V983 = 0x1
0xaf0: V984 = 0xa0
0xaf2: V985 = 0x2
0xaf4: V986 = EXP 0x2 0xa0
0xaf5: V987 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf6: V988 = CALLER
0xaf8: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff V988
0xafa: V990 = ADDRESS
0xafd: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0xafe: V992 = BALANCE V991
0xb00: V993 = ISZERO V992
0xb01: V994 = 0x8fc
0xb04: V995 = MUL 0x8fc V993
0xb06: V996 = 0x0
0xb0e: V997 = CALL V995 V989 V992 V982 0x0 V982 0x0
---
Entry stack: [V12, 0x268, 0x0]
Stack pops: 1
Stack additions: [V997]
Exit stack: [V12, 0x268, V997]

================================

Block 0xb15
[0xb15:0xb19]
---
Predecessors: [0xaeb]
Successors: [0x77e]
---
0xb15 JUMPDEST
0xb16 PUSH2 0x77e
0xb19 JUMP
---
0xb15: JUMPDEST 
0xb16: V998 = 0x77e
0xb19: JUMP 0x77e
---
Entry stack: [V12, 0x268, V997]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V997]

================================

Block 0xb1a
[0xb1a:0xb50]
---
Predecessors: []
Successors: [0xb51]
---
0xb1a JUMPDEST
0xb1b PUSH1 0x0
0xb1d SLOAD
0xb1e PUSH1 0x40
0xb20 DUP1
0xb21 MLOAD
0xb22 PUSH1 0x1
0xb24 PUSH1 0xa0
0xb26 PUSH1 0x2
0xb28 EXP
0xb29 SUB
0xb2a CALLER
0xb2b DUP2
0xb2c AND
0xb2d DUP3
0xb2e MSTORE
0xb2f SWAP1
0xb30 SWAP3
0xb31 AND
0xb32 PUSH1 0x20
0xb34 DUP4
0xb35 ADD
0xb36 MSTORE
0xb37 DUP1
0xb38 MLOAD
0xb39 PUSH1 0x0
0xb3b DUP1
0xb3c MLOAD
0xb3d PUSH1 0x20
0xb3f PUSH2 0xd52
0xb42 DUP4
0xb43 CODECOPY
0xb44 DUP2
0xb45 MLOAD
0xb46 SWAP2
0xb47 MSTORE
0xb48 SWAP3
0xb49 DUP2
0xb4a SWAP1
0xb4b SUB
0xb4c SWAP1
0xb4d SWAP2
0xb4e ADD
0xb4f SWAP1
0xb50 LOG1
---
0xb1a: JUMPDEST 
0xb1b: V999 = 0x0
0xb1d: V1000 = S[0x0]
0xb1e: V1001 = 0x40
0xb21: V1002 = M[0x40]
0xb22: V1003 = 0x1
0xb24: V1004 = 0xa0
0xb26: V1005 = 0x2
0xb28: V1006 = EXP 0x2 0xa0
0xb29: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2a: V1008 = CALLER
0xb2c: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0xb2e: M[V1002] = V1009
0xb31: V1010 = AND V1000 0xffffffffffffffffffffffffffffffffffffffff
0xb32: V1011 = 0x20
0xb35: V1012 = ADD V1002 0x20
0xb36: M[V1012] = V1010
0xb38: V1013 = M[0x40]
0xb39: V1014 = 0x0
0xb3c: V1015 = M[0x0]
0xb3d: V1016 = 0x20
0xb3f: V1017 = 0xd52
0xb43: CODECOPY 0x0 0xd52 0x20
0xb45: V1018 = M[0x0]
0xb47: M[0x0] = V1015
0xb4b: V1019 = SUB V1002 V1013
0xb4e: V1020 = ADD 0x40 V1019
0xb50: LOG V1013 V1020 V1018
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb51
[0xb51:0xb51]
---
Predecessors: [0xb1a]
Successors: [0xb52]
---
0xb51 JUMPDEST
---
0xb51: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb52
[0xb52:0xb54]
---
Predecessors: [0xb51]
Successors: []
Has unresolved jump.
---
0xb52 JUMPDEST
0xb53 POP
0xb54 JUMP
---
0xb52: JUMPDEST 
0xb54: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xb55
[0xb55:0xb6c]
---
Predecessors: [0x44b]
Successors: [0x747, 0xb6d]
---
0xb55 JUMPDEST
0xb56 PUSH1 0x0
0xb58 SLOAD
0xb59 CALLER
0xb5a PUSH1 0x1
0xb5c PUSH1 0xa0
0xb5e PUSH1 0x2
0xb60 EXP
0xb61 SUB
0xb62 SWAP1
0xb63 DUP2
0xb64 AND
0xb65 SWAP2
0xb66 AND
0xb67 EQ
0xb68 ISZERO
0xb69 PUSH2 0x747
0xb6c JUMPI
---
0xb55: JUMPDEST 
0xb56: V1021 = 0x0
0xb58: V1022 = S[0x0]
0xb59: V1023 = CALLER
0xb5a: V1024 = 0x1
0xb5c: V1025 = 0xa0
0xb5e: V1026 = 0x2
0xb60: V1027 = EXP 0x2 0xa0
0xb61: V1028 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb64: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1023
0xb66: V1030 = AND V1022 0xffffffffffffffffffffffffffffffffffffffff
0xb67: V1031 = EQ V1030 V1029
0xb68: V1032 = ISZERO V1031
0xb69: V1033 = 0x747
0xb6c: JUMPI 0x747 V1032
---
Entry stack: [V12, 0x268, V398]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V398]

================================

Block 0xb6d
[0xb6d:0xb87]
---
Predecessors: [0xb55]
Successors: [0xb88]
---
0xb6d PUSH1 0x0
0xb6f DUP1
0xb70 SLOAD
0xb71 PUSH1 0x1
0xb73 PUSH1 0xa0
0xb75 PUSH1 0x2
0xb77 EXP
0xb78 SUB
0xb79 NOT
0xb7a AND
0xb7b PUSH1 0x1
0xb7d PUSH1 0xa0
0xb7f PUSH1 0x2
0xb81 EXP
0xb82 SUB
0xb83 DUP4
0xb84 AND
0xb85 OR
0xb86 SWAP1
0xb87 SSTORE
---
0xb6d: V1034 = 0x0
0xb70: V1035 = S[0x0]
0xb71: V1036 = 0x1
0xb73: V1037 = 0xa0
0xb75: V1038 = 0x2
0xb77: V1039 = EXP 0x2 0xa0
0xb78: V1040 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb79: V1041 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb7a: V1042 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1035
0xb7b: V1043 = 0x1
0xb7d: V1044 = 0xa0
0xb7f: V1045 = 0x2
0xb81: V1046 = EXP 0x2 0xa0
0xb82: V1047 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb84: V1048 = AND V398 0xffffffffffffffffffffffffffffffffffffffff
0xb85: V1049 = OR V1048 V1042
0xb87: S[0x0] = V1049
---
Entry stack: [V12, 0x268, V398]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x268, V398]

================================

Block 0xb88
[0xb88:0xb8c]
---
Predecessors: [0xb6d]
Successors: [0x77e]
---
0xb88 JUMPDEST
0xb89 PUSH2 0x77e
0xb8c JUMP
---
0xb88: JUMPDEST 
0xb89: V1050 = 0x77e
0xb8c: JUMP 0x77e
---
Entry stack: [V12, 0x268, V398]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V398]

================================

Block 0xb8d
[0xb8d:0xbc3]
---
Predecessors: []
Successors: [0xbc4]
---
0xb8d JUMPDEST
0xb8e PUSH1 0x0
0xb90 SLOAD
0xb91 PUSH1 0x40
0xb93 DUP1
0xb94 MLOAD
0xb95 PUSH1 0x1
0xb97 PUSH1 0xa0
0xb99 PUSH1 0x2
0xb9b EXP
0xb9c SUB
0xb9d CALLER
0xb9e DUP2
0xb9f AND
0xba0 DUP3
0xba1 MSTORE
0xba2 SWAP1
0xba3 SWAP3
0xba4 AND
0xba5 PUSH1 0x20
0xba7 DUP4
0xba8 ADD
0xba9 MSTORE
0xbaa DUP1
0xbab MLOAD
0xbac PUSH1 0x0
0xbae DUP1
0xbaf MLOAD
0xbb0 PUSH1 0x20
0xbb2 PUSH2 0xd52
0xbb5 DUP4
0xbb6 CODECOPY
0xbb7 DUP2
0xbb8 MLOAD
0xbb9 SWAP2
0xbba MSTORE
0xbbb SWAP3
0xbbc DUP2
0xbbd SWAP1
0xbbe SUB
0xbbf SWAP1
0xbc0 SWAP2
0xbc1 ADD
0xbc2 SWAP1
0xbc3 LOG1
---
0xb8d: JUMPDEST 
0xb8e: V1051 = 0x0
0xb90: V1052 = S[0x0]
0xb91: V1053 = 0x40
0xb94: V1054 = M[0x40]
0xb95: V1055 = 0x1
0xb97: V1056 = 0xa0
0xb99: V1057 = 0x2
0xb9b: V1058 = EXP 0x2 0xa0
0xb9c: V1059 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9d: V1060 = CALLER
0xb9f: V1061 = AND 0xffffffffffffffffffffffffffffffffffffffff V1060
0xba1: M[V1054] = V1061
0xba4: V1062 = AND V1052 0xffffffffffffffffffffffffffffffffffffffff
0xba5: V1063 = 0x20
0xba8: V1064 = ADD V1054 0x20
0xba9: M[V1064] = V1062
0xbab: V1065 = M[0x40]
0xbac: V1066 = 0x0
0xbaf: V1067 = M[0x0]
0xbb0: V1068 = 0x20
0xbb2: V1069 = 0xd52
0xbb6: CODECOPY 0x0 0xd52 0x20
0xbb8: V1070 = M[0x0]
0xbba: M[0x0] = V1067
0xbbe: V1071 = SUB V1054 V1065
0xbc1: V1072 = ADD 0x40 V1071
0xbc3: LOG V1065 V1072 V1070
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbc4
[0xbc4:0xbc4]
---
Predecessors: [0xb8d]
Successors: [0xbc5]
---
0xbc4 JUMPDEST
---
0xbc4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbc5
[0xbc5:0xbc7]
---
Predecessors: [0xbc4]
Successors: []
Has unresolved jump.
---
0xbc5 JUMPDEST
0xbc6 POP
0xbc7 JUMP
---
0xbc5: JUMPDEST 
0xbc7: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xbc8
[0xbc8:0xc1b]
---
Predecessors: [0x975]
Successors: [0xc1c, 0xc1d]
---
0xbc8 JUMPDEST
0xbc9 PUSH1 0x3
0xbcb SLOAD
0xbcc PUSH1 0x40
0xbce DUP1
0xbcf MLOAD
0xbd0 PUSH1 0x0
0xbd2 PUSH1 0x20
0xbd4 SWAP2
0xbd5 DUP3
0xbd6 ADD
0xbd7 DUP2
0xbd8 SWAP1
0xbd9 MSTORE
0xbda DUP3
0xbdb MLOAD
0xbdc PUSH1 0xe0
0xbde PUSH1 0x2
0xbe0 EXP
0xbe1 PUSH4 0x70a08231
0xbe6 MUL
0xbe7 DUP2
0xbe8 MSTORE
0xbe9 PUSH1 0x1
0xbeb PUSH1 0xa0
0xbed PUSH1 0x2
0xbef EXP
0xbf0 SUB
0xbf1 DUP7
0xbf2 DUP2
0xbf3 AND
0xbf4 PUSH1 0x4
0xbf6 DUP4
0xbf7 ADD
0xbf8 MSTORE
0xbf9 SWAP4
0xbfa MLOAD
0xbfb SWAP2
0xbfc SWAP5
0xbfd DUP6
0xbfe SWAP5
0xbff AND
0xc00 SWAP3
0xc01 PUSH4 0x70a08231
0xc06 SWAP3
0xc07 PUSH1 0x24
0xc09 DUP1
0xc0a DUP5
0xc0b ADD
0xc0c SWAP4
0xc0d DUP3
0xc0e SWAP1
0xc0f SUB
0xc10 ADD
0xc11 DUP2
0xc12 DUP8
0xc13 DUP8
0xc14 DUP1
0xc15 EXTCODESIZE
0xc16 ISZERO
0xc17 ISZERO
0xc18 PUSH2 0xc1d
0xc1b JUMPI
---
0xbc8: JUMPDEST 
0xbc9: V1073 = 0x3
0xbcb: V1074 = S[0x3]
0xbcc: V1075 = 0x40
0xbcf: V1076 = M[0x40]
0xbd0: V1077 = 0x0
0xbd2: V1078 = 0x20
0xbd6: V1079 = ADD 0x20 V1076
0xbd9: M[V1079] = 0x0
0xbdb: V1080 = M[0x40]
0xbdc: V1081 = 0xe0
0xbde: V1082 = 0x2
0xbe0: V1083 = EXP 0x2 0xe0
0xbe1: V1084 = 0x70a08231
0xbe6: V1085 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xbe8: M[V1080] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbe9: V1086 = 0x1
0xbeb: V1087 = 0xa0
0xbed: V1088 = 0x2
0xbef: V1089 = EXP 0x2 0xa0
0xbf0: V1090 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf3: V1091 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbf4: V1092 = 0x4
0xbf7: V1093 = ADD V1080 0x4
0xbf8: M[V1093] = V1091
0xbfa: V1094 = M[0x40]
0xbff: V1095 = AND 0xffffffffffffffffffffffffffffffffffffffff V1074
0xc01: V1096 = 0x70a08231
0xc07: V1097 = 0x24
0xc0b: V1098 = ADD V1080 0x24
0xc0f: V1099 = SUB V1080 V1094
0xc10: V1100 = ADD V1099 0x24
0xc15: V1101 = EXTCODESIZE V1095
0xc16: V1102 = ISZERO V1101
0xc17: V1103 = ISZERO V1102
0xc18: V1104 = 0xc1d
0xc1b: JUMPI 0xc1d V1103
---
Entry stack: [V12, 0x268, V209, V211, S8, {0x160, 0x574}, S6, S5, S4, 0x0, S2, 0x97d, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, V1095, 0x70a08231, V1098, 0x20, V1094, V1100, V1094, 0x0, V1095]
Exit stack: [V12, 0x268, V209, V211, S8, {0x160, 0x574}, S6, S5, S4, 0x0, S2, 0x97d, S0, 0x0, 0x0, V1095, 0x70a08231, V1098, 0x20, V1094, V1100, V1094, 0x0, V1095]

================================

Block 0xc1c
[0xc1c:0xc1c]
---
Predecessors: [0xbc8]
Successors: []
---
0xc1c INVALID
---
0xc1c: INVALID 
---
Entry stack: [V12, 0x268, V209, V211, S19, {0x160, 0x574}, S17, S16, S15, 0x0, S13, 0x97d, S11, 0x0, 0x0, V1095, 0x70a08231, V1098, 0x20, V1094, V1100, V1094, 0x0, V1095]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S19, {0x160, 0x574}, S17, S16, S15, 0x0, S13, 0x97d, S11, 0x0, 0x0, V1095, 0x70a08231, V1098, 0x20, V1094, V1100, V1094, 0x0, V1095]

================================

Block 0xc1d
[0xc1d:0xc28]
---
Predecessors: [0xbc8]
Successors: [0xc29, 0xc2a]
---
0xc1d JUMPDEST
0xc1e PUSH1 0x32
0xc20 GAS
0xc21 SUB
0xc22 CALL
0xc23 ISZERO
0xc24 ISZERO
0xc25 PUSH2 0xc2a
0xc28 JUMPI
---
0xc1d: JUMPDEST 
0xc1e: V1105 = 0x32
0xc20: V1106 = GAS
0xc21: V1107 = SUB V1106 0x32
0xc22: V1108 = CALL V1107 V1095 0x0 V1094 V1100 V1094 0x20
0xc23: V1109 = ISZERO V1108
0xc24: V1110 = ISZERO V1109
0xc25: V1111 = 0xc2a
0xc28: JUMPI 0xc2a V1110
---
Entry stack: [V12, 0x268, V209, V211, S19, {0x160, 0x574}, S17, S16, S15, 0x0, S13, 0x97d, S11, 0x0, 0x0, V1095, 0x70a08231, V1098, 0x20, V1094, V1100, V1094, 0x0, V1095]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S19, {0x160, 0x574}, S17, S16, S15, 0x0, S13, 0x97d, S11, 0x0, 0x0, V1095, 0x70a08231, V1098]

================================

Block 0xc29
[0xc29:0xc29]
---
Predecessors: [0xc1d]
Successors: []
---
0xc29 INVALID
---
0xc29: INVALID 
---
Entry stack: [V12, 0x268, V209, V211, S13, {0x160, 0x574}, S11, S10, S9, 0x0, S7, 0x97d, S5, 0x0, 0x0, V1095, 0x70a08231, V1098]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S13, {0x160, 0x574}, S11, S10, S9, 0x0, S7, 0x97d, S5, 0x0, 0x0, V1095, 0x70a08231, V1098]

================================

Block 0xc2a
[0xc2a:0xc3c]
---
Predecessors: [0xc1d]
Successors: [0xc3d, 0xd28]
---
0xc2a JUMPDEST
0xc2b POP
0xc2c POP
0xc2d PUSH1 0x40
0xc2f MLOAD
0xc30 MLOAD
0xc31 SWAP3
0xc32 POP
0xc33 POP
0xc34 PUSH1 0x0
0xc36 DUP3
0xc37 GT
0xc38 ISZERO
0xc39 PUSH2 0xd28
0xc3c JUMPI
---
0xc2a: JUMPDEST 
0xc2d: V1112 = 0x40
0xc2f: V1113 = M[0x40]
0xc30: V1114 = M[V1113]
0xc34: V1115 = 0x0
0xc37: V1116 = GT V1114 0x0
0xc38: V1117 = ISZERO V1116
0xc39: V1118 = 0xd28
0xc3c: JUMPI 0xd28 V1117
---
Entry stack: [V12, 0x268, V209, V211, S13, {0x160, 0x574}, S11, S10, S9, 0x0, S7, 0x97d, S5, 0x0, 0x0, V1095, 0x70a08231, V1098]
Stack pops: 5
Stack additions: [V1114, S3]
Exit stack: [V12, 0x268, V209, V211, S13, {0x160, 0x574}, S11, S10, S9, 0x0, S7, 0x97d, S5, V1114, 0x0]

================================

Block 0xc3d
[0xc3d:0xcb7]
---
Predecessors: [0xc2a]
Successors: [0xcb8, 0xcb9]
---
0xc3d PUSH1 0x3
0xc3f SLOAD
0xc40 PUSH1 0x40
0xc42 DUP1
0xc43 MLOAD
0xc44 PUSH1 0x0
0xc46 PUSH1 0x20
0xc48 SWAP2
0xc49 DUP3
0xc4a ADD
0xc4b DUP2
0xc4c SWAP1
0xc4d MSTORE
0xc4e DUP3
0xc4f MLOAD
0xc50 PUSH32 0xbeabacc800000000000000000000000000000000000000000000000000000000
0xc71 DUP2
0xc72 MSTORE
0xc73 PUSH1 0x1
0xc75 PUSH1 0xa0
0xc77 PUSH1 0x2
0xc79 EXP
0xc7a SUB
0xc7b DUP9
0xc7c DUP2
0xc7d AND
0xc7e PUSH1 0x4
0xc80 DUP4
0xc81 ADD
0xc82 MSTORE
0xc83 ADDRESS
0xc84 DUP2
0xc85 AND
0xc86 PUSH1 0x24
0xc88 DUP4
0xc89 ADD
0xc8a MSTORE
0xc8b PUSH1 0x44
0xc8d DUP3
0xc8e ADD
0xc8f DUP9
0xc90 SWAP1
0xc91 MSTORE
0xc92 SWAP4
0xc93 MLOAD
0xc94 SWAP4
0xc95 SWAP1
0xc96 SWAP5
0xc97 AND
0xc98 SWAP4
0xc99 PUSH4 0xbeabacc8
0xc9e SWAP4
0xc9f PUSH1 0x64
0xca1 DUP1
0xca2 DUP4
0xca3 ADD
0xca4 SWAP5
0xca5 SWAP4
0xca6 SWAP2
0xca7 SWAP3
0xca8 DUP4
0xca9 SWAP1
0xcaa SUB
0xcab ADD
0xcac SWAP1
0xcad DUP3
0xcae SWAP1
0xcaf DUP8
0xcb0 DUP1
0xcb1 EXTCODESIZE
0xcb2 ISZERO
0xcb3 ISZERO
0xcb4 PUSH2 0xcb9
0xcb7 JUMPI
---
0xc3d: V1119 = 0x3
0xc3f: V1120 = S[0x3]
0xc40: V1121 = 0x40
0xc43: V1122 = M[0x40]
0xc44: V1123 = 0x0
0xc46: V1124 = 0x20
0xc4a: V1125 = ADD 0x20 V1122
0xc4d: M[V1125] = 0x0
0xc4f: V1126 = M[0x40]
0xc50: V1127 = 0xbeabacc800000000000000000000000000000000000000000000000000000000
0xc72: M[V1126] = 0xbeabacc800000000000000000000000000000000000000000000000000000000
0xc73: V1128 = 0x1
0xc75: V1129 = 0xa0
0xc77: V1130 = 0x2
0xc79: V1131 = EXP 0x2 0xa0
0xc7a: V1132 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7d: V1133 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xc7e: V1134 = 0x4
0xc81: V1135 = ADD V1126 0x4
0xc82: M[V1135] = V1133
0xc83: V1136 = ADDRESS
0xc85: V1137 = AND 0xffffffffffffffffffffffffffffffffffffffff V1136
0xc86: V1138 = 0x24
0xc89: V1139 = ADD V1126 0x24
0xc8a: M[V1139] = V1137
0xc8b: V1140 = 0x44
0xc8e: V1141 = ADD V1126 0x44
0xc91: M[V1141] = V1114
0xc93: V1142 = M[0x40]
0xc97: V1143 = AND V1120 0xffffffffffffffffffffffffffffffffffffffff
0xc99: V1144 = 0xbeabacc8
0xc9f: V1145 = 0x64
0xca3: V1146 = ADD V1126 0x64
0xcaa: V1147 = SUB V1126 V1142
0xcab: V1148 = ADD V1147 0x64
0xcb1: V1149 = EXTCODESIZE V1143
0xcb2: V1150 = ISZERO V1149
0xcb3: V1151 = ISZERO V1150
0xcb4: V1152 = 0xcb9
0xcb7: JUMPI 0xcb9 V1151
---
Entry stack: [V12, 0x268, V209, V211, S10, {0x160, 0x574}, S8, S7, S6, 0x0, S4, 0x97d, S2, V1114, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1143, 0xbeabacc8, V1146, 0x20, V1142, V1148, V1142, 0x0, V1143]
Exit stack: [V12, 0x268, V209, V211, S10, {0x160, 0x574}, S8, S7, S6, 0x0, S4, 0x97d, S2, V1114, 0x0, V1143, 0xbeabacc8, V1146, 0x20, V1142, V1148, V1142, 0x0, V1143]

================================

Block 0xcb8
[0xcb8:0xcb8]
---
Predecessors: [0xc3d]
Successors: []
---
0xcb8 INVALID
---
0xcb8: INVALID 
---
Entry stack: [V12, 0x268, V209, V211, S19, {0x160, 0x574}, S17, S16, S15, 0x0, S13, 0x97d, S11, V1114, 0x0, V1143, 0xbeabacc8, V1146, 0x20, V1142, V1148, V1142, 0x0, V1143]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S19, {0x160, 0x574}, S17, S16, S15, 0x0, S13, 0x97d, S11, V1114, 0x0, V1143, 0xbeabacc8, V1146, 0x20, V1142, V1148, V1142, 0x0, V1143]

================================

Block 0xcb9
[0xcb9:0xcc4]
---
Predecessors: [0xc3d]
Successors: [0xcc5, 0xcc6]
---
0xcb9 JUMPDEST
0xcba PUSH1 0x32
0xcbc GAS
0xcbd SUB
0xcbe CALL
0xcbf ISZERO
0xcc0 ISZERO
0xcc1 PUSH2 0xcc6
0xcc4 JUMPI
---
0xcb9: JUMPDEST 
0xcba: V1153 = 0x32
0xcbc: V1154 = GAS
0xcbd: V1155 = SUB V1154 0x32
0xcbe: V1156 = CALL V1155 V1143 0x0 V1142 V1148 V1142 0x20
0xcbf: V1157 = ISZERO V1156
0xcc0: V1158 = ISZERO V1157
0xcc1: V1159 = 0xcc6
0xcc4: JUMPI 0xcc6 V1158
---
Entry stack: [V12, 0x268, V209, V211, S19, {0x160, 0x574}, S17, S16, S15, 0x0, S13, 0x97d, S11, V1114, 0x0, V1143, 0xbeabacc8, V1146, 0x20, V1142, V1148, V1142, 0x0, V1143]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S19, {0x160, 0x574}, S17, S16, S15, 0x0, S13, 0x97d, S11, V1114, 0x0, V1143, 0xbeabacc8, V1146]

================================

Block 0xcc5
[0xcc5:0xcc5]
---
Predecessors: [0xcb9]
Successors: []
---
0xcc5 INVALID
---
0xcc5: INVALID 
---
Entry stack: [V12, 0x268, V209, V211, S13, {0x160, 0x574}, S11, S10, S9, 0x0, S7, 0x97d, S5, V1114, 0x0, V1143, 0xbeabacc8, V1146]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S13, {0x160, 0x574}, S11, S10, S9, 0x0, S7, 0x97d, S5, V1114, 0x0, V1143, 0xbeabacc8, V1146]

================================

Block 0xcc6
[0xcc6:0xd27]
---
Predecessors: [0xcb9]
Successors: [0xd28]
---
0xcc6 JUMPDEST
0xcc7 POP
0xcc8 POP
0xcc9 PUSH1 0x40
0xccb DUP1
0xccc MLOAD
0xccd DUP1
0xcce MLOAD
0xccf PUSH1 0x1
0xcd1 PUSH1 0xa0
0xcd3 PUSH1 0x2
0xcd5 EXP
0xcd6 SUB
0xcd7 DUP8
0xcd8 AND
0xcd9 PUSH1 0x0
0xcdb DUP2
0xcdc DUP2
0xcdd MSTORE
0xcde PUSH1 0x4
0xce0 PUSH1 0x20
0xce2 SWAP1
0xce3 DUP2
0xce4 MSTORE
0xce5 SWAP1
0xce6 DUP6
0xce7 SWAP1
0xce8 SHA3
0xce9 DUP1
0xcea SLOAD
0xceb DUP10
0xcec ADD
0xced SWAP1
0xcee SSTORE
0xcef SWAP1
0xcf0 DUP4
0xcf1 MSTORE
0xcf2 DUP3
0xcf3 ADD
0xcf4 DUP7
0xcf5 SWAP1
0xcf6 MSTORE
0xcf7 DUP3
0xcf8 MLOAD
0xcf9 SWAP1
0xcfa SWAP5
0xcfb POP
0xcfc PUSH32 0x5c2da67751b5c2b8ffb1579ea16e70cf01e4b94068f0d42369de650adc07f613
0xd1d SWAP4
0xd1e POP
0xd1f SWAP1
0xd20 DUP2
0xd21 SWAP1
0xd22 SUB
0xd23 SWAP1
0xd24 SWAP2
0xd25 ADD
0xd26 SWAP1
0xd27 LOG1
---
0xcc6: JUMPDEST 
0xcc9: V1160 = 0x40
0xccc: V1161 = M[0x40]
0xcce: V1162 = M[V1161]
0xccf: V1163 = 0x1
0xcd1: V1164 = 0xa0
0xcd3: V1165 = 0x2
0xcd5: V1166 = EXP 0x2 0xa0
0xcd6: V1167 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd8: V1168 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xcd9: V1169 = 0x0
0xcdd: M[0x0] = V1168
0xcde: V1170 = 0x4
0xce0: V1171 = 0x20
0xce4: M[0x20] = 0x4
0xce8: V1172 = SHA3 0x0 0x40
0xcea: V1173 = S[V1172]
0xcec: V1174 = ADD V1114 V1173
0xcee: S[V1172] = V1174
0xcf1: M[V1161] = V1168
0xcf3: V1175 = ADD V1161 0x20
0xcf6: M[V1175] = V1114
0xcf8: V1176 = M[0x40]
0xcfc: V1177 = 0x5c2da67751b5c2b8ffb1579ea16e70cf01e4b94068f0d42369de650adc07f613
0xd22: V1178 = SUB V1161 V1176
0xd25: V1179 = ADD 0x40 V1178
0xd27: LOG V1176 V1179 0x5c2da67751b5c2b8ffb1579ea16e70cf01e4b94068f0d42369de650adc07f613
---
Entry stack: [V12, 0x268, V209, V211, S13, {0x160, 0x574}, S11, S10, S9, 0x0, S7, 0x97d, S5, V1114, 0x0, V1143, 0xbeabacc8, V1146]
Stack pops: 6
Stack additions: [S5, S4, V1162]
Exit stack: [V12, 0x268, V209, V211, S13, {0x160, 0x574}, S11, S10, S9, 0x0, S7, 0x97d, S5, V1114, V1162]

================================

Block 0xd28
[0xd28:0xd4b]
---
Predecessors: [0xc2a, 0xcc6]
Successors: [0xd4c]
---
0xd28 JUMPDEST
0xd29 PUSH1 0x1
0xd2b PUSH1 0xa0
0xd2d PUSH1 0x2
0xd2f EXP
0xd30 SUB
0xd31 DUP4
0xd32 AND
0xd33 PUSH1 0x0
0xd35 SWAP1
0xd36 DUP2
0xd37 MSTORE
0xd38 PUSH1 0x5
0xd3a PUSH1 0x20
0xd3c MSTORE
0xd3d PUSH1 0x40
0xd3f SWAP1
0xd40 SHA3
0xd41 DUP1
0xd42 SLOAD
0xd43 PUSH1 0xff
0xd45 NOT
0xd46 AND
0xd47 PUSH1 0x1
0xd49 OR
0xd4a SWAP1
0xd4b SSTORE
---
0xd28: JUMPDEST 
0xd29: V1180 = 0x1
0xd2b: V1181 = 0xa0
0xd2d: V1182 = 0x2
0xd2f: V1183 = EXP 0x2 0xa0
0xd30: V1184 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd32: V1185 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xd33: V1186 = 0x0
0xd37: M[0x0] = V1185
0xd38: V1187 = 0x5
0xd3a: V1188 = 0x20
0xd3c: M[0x20] = 0x5
0xd3d: V1189 = 0x40
0xd40: V1190 = SHA3 0x0 0x40
0xd42: V1191 = S[V1190]
0xd43: V1192 = 0xff
0xd45: V1193 = NOT 0xff
0xd46: V1194 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1191
0xd47: V1195 = 0x1
0xd49: V1196 = OR 0x1 V1194
0xd4b: S[V1190] = V1196
---
Entry stack: [V12, 0x268, V209, V211, S10, {0x160, 0x574}, S8, S7, S6, 0x0, S4, 0x97d, S2, V1114, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x268, V209, V211, S10, {0x160, 0x574}, S8, S7, S6, 0x0, S4, 0x97d, S2, V1114, S0]

================================

Block 0xd4c
[0xd4c:0xd50]
---
Predecessors: [0xd28]
Successors: [0x97d]
---
0xd4c JUMPDEST
0xd4d POP
0xd4e POP
0xd4f POP
0xd50 JUMP
---
0xd4c: JUMPDEST 
0xd50: JUMP 0x97d
---
Entry stack: [V12, 0x268, V209, V211, S10, {0x160, 0x574}, S8, S7, S6, 0x0, S4, 0x97d, S2, V1114, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x268, V209, V211, S10, {0x160, 0x574}, S8, S7, S6, 0x0, S4]

================================

Block 0xd51
[0xd51:0xdab]
---
Predecessors: []
Successors: []
---
0xd51 STOP
0xd52 MISSING 0x23
0xd53 MISSING 0x29
0xd54 MISSING 0x5f
0xd55 MISSING 0xe
0xd56 LT
0xd57 MISSING 0x4d
0xd58 SGT
0xd59 PUSH30 0x137555eb51dbe25a9e6827007f9feb6ae8bb562312e3e202a165627a7a72
0xd78 ADDRESS
0xd79 PC
0xd7a SHA3
0xd7b MISSING 0xc1
0xd7c MISSING 0xdc
0xd7d MISSING 0xe0
0xd7e MISSING 0xec
0xd7f MISSING 0x24
0xd80 MISSING 0xd7
0xd81 MISSING 0xd9
0xd82 MISSING 0xc3
0xd83 PUSH3 0xb920e9
0xd87 GASPRICE
0xd88 SWAP4
0xd89 MISSING 0xdb
0xd8a SWAP12
0xd8b PUSH32 0xc5d20075648355125de005b0b938ff0029
---
0xd51: STOP 
0xd52: MISSING 0x23
0xd53: MISSING 0x29
0xd54: MISSING 0x5f
0xd55: MISSING 0xe
0xd56: V1197 = LT S0 S1
0xd57: MISSING 0x4d
0xd58: V1198 = SGT S0 S1
0xd59: V1199 = 0x137555eb51dbe25a9e6827007f9feb6ae8bb562312e3e202a165627a7a72
0xd78: V1200 = ADDRESS
0xd79: V1201 = PC
0xd7a: V1202 = SHA3 V1201 V1200
0xd7b: MISSING 0xc1
0xd7c: MISSING 0xdc
0xd7d: MISSING 0xe0
0xd7e: MISSING 0xec
0xd7f: MISSING 0x24
0xd80: MISSING 0xd7
0xd81: MISSING 0xd9
0xd82: MISSING 0xc3
0xd83: V1203 = 0xb920e9
0xd87: V1204 = GASPRICE
0xd89: MISSING 0xdb
0xd8b: V1205 = 0xc5d20075648355125de005b0b938ff0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1197, V1202, 0x137555eb51dbe25a9e6827007f9feb6ae8bb562312e3e202a165627a7a72, V1198, S2, 0xb920e9, S0, S1, V1204, 0xc5d20075648355125de005b0b938ff0029, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x103
Exit block: 0x113
Body: 0x103, 0x10a, 0x10b, 0x113, 0x461, 0x480

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x141
Exit block: 0x160
Body: 0x141, 0x148, 0x149, 0x160

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x174
Exit block: 0x184
Body: 0x174, 0x17b, 0x17c, 0x184, 0x48c, 0x490

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x196
Exit block: 0x160
Body: 0x160, 0x196, 0x19d, 0x19e, 0x493, 0x496

Function 4:
Public function signature: 0x313ce567
Entry block: 0x1cf
Exit block: 0x1df
Body: 0x1cf, 0x1d6, 0x1d7, 0x1df, 0x49d, 0x4b4

Function 5:
Public function signature: 0x4ba0a5ee
Entry block: 0x1f5
Exit block: 0x160
Body: 0x160, 0x1f5, 0x1fc, 0x1fd, 0x4b7

Function 6:
Public function signature: 0x59138d13
Entry block: 0x225
Exit block: 0x235
Body: 0x225, 0x22c, 0x22d, 0x235, 0x4cc

Function 7:
Public function signature: 0x618d7ae4
Entry block: 0x251
Exit block: 0x268
Body: 0x251, 0x268, 0x4db, 0x4f5, 0x55c, 0x574, 0x57a, 0x5f8, 0x622, 0x623

Function 8:
Public function signature: 0x70a08231
Entry block: 0x26a
Exit block: 0x184
Body: 0x184, 0x26a, 0x271, 0x272, 0x628, 0x657, 0x6ad, 0x6ae, 0x6ba, 0x6bb, 0x6c8, 0x6c9

Function 9:
Public function signature: 0x7adbf973
Entry block: 0x298
Exit block: 0x268
Body: 0x268, 0x298, 0x29f, 0x2a0, 0x6ce, 0x6e6, 0x742, 0x747, 0x77e, 0x77f

Function 10:
Public function signature: 0x7dc0d1d0
Entry block: 0x2b6
Exit block: 0x235
Body: 0x235, 0x2b6, 0x2bd, 0x2be, 0x782

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x2e2
Exit block: 0x235
Body: 0x235, 0x2e2, 0x2e9, 0x2ea, 0x791, 0x79e

Function 12:
Public function signature: 0x95d89b41
Entry block: 0x30e
Exit block: 0x31e
Body: 0x30e, 0x315, 0x316, 0x31e, 0x7a1, 0x7b7

Function 13:
Public function signature: 0x9d0bcca0
Entry block: 0x353
Exit block: 0x235
Body: 0x235, 0x353, 0x35a, 0x35b, 0x7ba

Function 14:
Public function signature: 0xa0712d68
Entry block: 0x37f
Exit block: 0x268
Body: 0x268, 0x37f, 0x386, 0x387, 0x747, 0x77e, 0x77f, 0x7c9, 0x7e1, 0x7ec, 0x7f4, 0x7fa, 0x7ff, 0x85b

Function 15:
Public function signature: 0xaaf50292
Entry block: 0x394
Exit block: 0x268
Body: 0x268, 0x394, 0x39b, 0x39c, 0x747, 0x77e, 0x77f, 0x89b, 0x8b3, 0x8ce

Function 16:
Public function signature: 0xbeabacc8
Entry block: 0x3b2
Exit block: 0x3b9
Body: 0x160, 0x3b2, 0x3b9, 0x3ba

Function 17:
Public function signature: 0xd5582965
Entry block: 0x3eb
Exit block: 0x268
Body: 0x268, 0x3eb, 0x3f2, 0x3f3, 0xa65, 0xa7d, 0xa8a, 0xa8f, 0xac6, 0xac7

Function 18:
Public function signature: 0xdd62ed3e
Entry block: 0x3fd
Exit block: 0x404
Body: 0x184, 0x3fd, 0x404, 0x405

Function 19:
Public function signature: 0xeeeb702e
Entry block: 0x431
Exit block: 0x268
Body: 0x268, 0x431, 0x438, 0x439, 0x747, 0x77e, 0x77f, 0xad2, 0xaeb, 0xb15

Function 20:
Public function signature: 0xf2fde38b
Entry block: 0x443
Exit block: 0x268
Body: 0x268, 0x443, 0x44a, 0x44b, 0x747, 0x77e, 0x77f, 0xb55, 0xb6d, 0xb88

Function 21:
Public fallback function
Entry block: 0x101
Exit block: 0x101
Body: 0x101

Function 22:
Private function
Entry block: 0x90e
Exit block: 0xa5d
Body: 0x90e, 0x92a, 0x93c, 0x942, 0x94a, 0x952, 0x975, 0x97d, 0x97e, 0x9a0, 0x9a8, 0xa1a, 0xa1f, 0xa5c, 0xa5d, 0xbc8, 0xc1d, 0xc2a, 0xc3d, 0xcb9, 0xcc6, 0xd28, 0xd4c

Function 23:
Private function
Entry block: 0x483
Exit block: 0x486
Body: 0x483, 0x486

