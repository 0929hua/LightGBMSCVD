Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x72]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3576a32f
0x3c EQ
0x3d PUSH2 0x72
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3576a32f
0x3c: V13 = EQ 0x3576a32f V11
0x3d: V14 = 0x72
0x40: JUMPI 0x72 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb5]
---
0x41 DUP1
0x42 PUSH4 0x3af8e4ab
0x47 EQ
0x48 PUSH2 0xb5
0x4b JUMPI
---
0x42: V15 = 0x3af8e4ab
0x47: V16 = EQ 0x3af8e4ab V11
0x48: V17 = 0xb5
0x4b: JUMPI 0xb5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x10c]
---
0x4c DUP1
0x4d PUSH4 0x3ccfd60b
0x52 EQ
0x53 PUSH2 0x10c
0x56 JUMPI
---
0x4d: V18 = 0x3ccfd60b
0x52: V19 = EQ 0x3ccfd60b V11
0x53: V20 = 0x10c
0x56: JUMPI 0x10c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x123]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x123
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x123
0x61: JUMPI 0x123 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x17a]
---
0x62 DUP1
0x63 PUSH4 0xad8733ca
0x68 EQ
0x69 PUSH2 0x17a
0x6c JUMPI
---
0x63: V24 = 0xad8733ca
0x68: V25 = EQ 0xad8733ca V11
0x69: V26 = 0x17a
0x6c: JUMPI 0x17a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x71]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0xd]
Successors: [0x7a, 0x7e]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 DUP1
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x72: JUMPDEST 
0x73: V28 = CALLVALUE
0x75: V29 = ISZERO V28
0x76: V30 = 0x7e
0x79: JUMPI 0x7e V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x72]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V31 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7e
[0x7e:0xb2]
---
Predecessors: [0x72]
Successors: [0x257]
---
0x7e JUMPDEST
0x7f POP
0x80 PUSH2 0xb3
0x83 PUSH1 0x4
0x85 DUP1
0x86 CALLDATASIZE
0x87 SUB
0x88 DUP2
0x89 ADD
0x8a SWAP1
0x8b DUP1
0x8c DUP1
0x8d CALLDATALOAD
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 SWAP1
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 SWAP1
0xa9 SWAP3
0xaa SWAP2
0xab SWAP1
0xac POP
0xad POP
0xae POP
0xaf PUSH2 0x257
0xb2 JUMP
---
0x7e: JUMPDEST 
0x80: V32 = 0xb3
0x83: V33 = 0x4
0x86: V34 = CALLDATASIZE
0x87: V35 = SUB V34 0x4
0x89: V36 = ADD 0x4 V35
0x8d: V37 = CALLDATALOAD 0x4
0x8e: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xa5: V40 = 0x20
0xa7: V41 = ADD 0x20 0x4
0xaf: V42 = 0x257
0xb2: JUMP 0x257
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0xb3, V39]
Exit stack: [V11, 0xb3, V39]

================================

Block 0xb3
[0xb3:0xb4]
---
Predecessors: [0x30a]
Successors: []
---
0xb3 JUMPDEST
0xb4 STOP
---
0xb3: JUMPDEST 
0xb4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0x41]
Successors: [0xbd, 0xc1]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 DUP1
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb5: JUMPDEST 
0xb6: V43 = CALLVALUE
0xb8: V44 = ISZERO V43
0xb9: V45 = 0xc1
0xbc: JUMPI 0xc1 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb5]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V46 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xc1
[0xc1:0xc9]
---
Predecessors: [0xb5]
Successors: [0x34d]
---
0xc1 JUMPDEST
0xc2 POP
0xc3 PUSH2 0xca
0xc6 PUSH2 0x34d
0xc9 JUMP
---
0xc1: JUMPDEST 
0xc3: V47 = 0xca
0xc6: V48 = 0x34d
0xc9: JUMP 0x34d
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xca]
Exit stack: [V11, 0xca]

================================

Block 0xca
[0xca:0x10b]
---
Predecessors: [0x34d]
Successors: []
---
0xca JUMPDEST
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf DUP3
0xd0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5 AND
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc DUP2
0xfd MSTORE
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP2
0x102 POP
0x103 POP
0x104 PUSH1 0x40
0x106 MLOAD
0x107 DUP1
0x108 SWAP2
0x109 SUB
0x10a SWAP1
0x10b RETURN
---
0xca: JUMPDEST 
0xcb: V49 = 0x40
0xcd: V50 = M[0x40]
0xd0: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0xe6: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xfd: M[V50] = V54
0xfe: V55 = 0x20
0x100: V56 = ADD 0x20 V50
0x104: V57 = 0x40
0x106: V58 = M[0x40]
0x109: V59 = SUB V56 V58
0x10b: RETURN V58 V59
---
Entry stack: [V11, 0xca, V195]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xca]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0x4c]
Successors: [0x114, 0x118]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e DUP1
0x10f ISZERO
0x110 PUSH2 0x118
0x113 JUMPI
---
0x10c: JUMPDEST 
0x10d: V60 = CALLVALUE
0x10f: V61 = ISZERO V60
0x110: V62 = 0x118
0x113: JUMPI 0x118 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, V60]

================================

Block 0x114
[0x114:0x117]
---
Predecessors: [0x10c]
Successors: []
---
0x114 PUSH1 0x0
0x116 DUP1
0x117 REVERT
---
0x114: V63 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V11, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V60]

================================

Block 0x118
[0x118:0x120]
---
Predecessors: [0x10c]
Successors: [0x372]
---
0x118 JUMPDEST
0x119 POP
0x11a PUSH2 0x121
0x11d PUSH2 0x372
0x120 JUMP
---
0x118: JUMPDEST 
0x11a: V64 = 0x121
0x11d: V65 = 0x372
0x120: JUMP 0x372
---
Entry stack: [V11, V60]
Stack pops: 1
Stack additions: [0x121]
Exit stack: [V11, 0x121]

================================

Block 0x121
[0x121:0x122]
---
Predecessors: [0x4a4]
Successors: []
---
0x121 JUMPDEST
0x122 STOP
---
0x121: JUMPDEST 
0x122: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x57]
Successors: [0x12b, 0x12f]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 DUP1
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x123: JUMPDEST 
0x124: V66 = CALLVALUE
0x126: V67 = ISZERO V66
0x127: V68 = 0x12f
0x12a: JUMPI 0x12f V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V11, V66]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x123]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V69 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66]

================================

Block 0x12f
[0x12f:0x137]
---
Predecessors: [0x123]
Successors: [0x4a7]
---
0x12f JUMPDEST
0x130 POP
0x131 PUSH2 0x138
0x134 PUSH2 0x4a7
0x137 JUMP
---
0x12f: JUMPDEST 
0x131: V70 = 0x138
0x134: V71 = 0x4a7
0x137: JUMP 0x4a7
---
Entry stack: [V11, V66]
Stack pops: 1
Stack additions: [0x138]
Exit stack: [V11, 0x138]

================================

Block 0x138
[0x138:0x179]
---
Predecessors: [0x4a7]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a DUP2
0x16b MSTORE
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP2
0x170 POP
0x171 POP
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 SWAP2
0x177 SUB
0x178 SWAP1
0x179 RETURN
---
0x138: JUMPDEST 
0x139: V72 = 0x40
0x13b: V73 = M[0x40]
0x13e: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x154: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x16b: M[V73] = V77
0x16c: V78 = 0x20
0x16e: V79 = ADD 0x20 V73
0x172: V80 = 0x40
0x174: V81 = M[0x40]
0x177: V82 = SUB V79 V81
0x179: RETURN V81 V82
---
Entry stack: [V11, 0x138, V266]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x138]

================================

Block 0x17a
[0x17a:0x181]
---
Predecessors: [0x62]
Successors: [0x182, 0x186]
---
0x17a JUMPDEST
0x17b CALLVALUE
0x17c DUP1
0x17d ISZERO
0x17e PUSH2 0x186
0x181 JUMPI
---
0x17a: JUMPDEST 
0x17b: V83 = CALLVALUE
0x17d: V84 = ISZERO V83
0x17e: V85 = 0x186
0x181: JUMPI 0x186 V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V11, V83]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x17a]
Successors: []
---
0x182 PUSH1 0x0
0x184 DUP1
0x185 REVERT
---
0x182: V86 = 0x0
0x185: REVERT 0x0 0x0
---
Entry stack: [V11, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V83]

================================

Block 0x186
[0x186:0x240]
---
Predecessors: [0x17a]
Successors: [0x4cd]
---
0x186 JUMPDEST
0x187 POP
0x188 PUSH2 0x241
0x18b PUSH1 0x4
0x18d DUP1
0x18e CALLDATASIZE
0x18f SUB
0x190 DUP2
0x191 ADD
0x192 SWAP1
0x193 DUP1
0x194 DUP1
0x195 CALLDATALOAD
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac SWAP1
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP1
0x1b1 SWAP3
0x1b2 SWAP2
0x1b3 SWAP1
0x1b4 DUP1
0x1b5 CALLDATALOAD
0x1b6 SWAP1
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba SWAP1
0x1bb DUP3
0x1bc ADD
0x1bd DUP1
0x1be CALLDATALOAD
0x1bf SWAP1
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 DUP1
0x1c5 DUP1
0x1c6 PUSH1 0x20
0x1c8 MUL
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf SWAP1
0x1d0 DUP2
0x1d1 ADD
0x1d2 PUSH1 0x40
0x1d4 MSTORE
0x1d5 DUP1
0x1d6 SWAP4
0x1d7 SWAP3
0x1d8 SWAP2
0x1d9 SWAP1
0x1da DUP2
0x1db DUP2
0x1dc MSTORE
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 DUP4
0x1e1 DUP4
0x1e2 PUSH1 0x20
0x1e4 MUL
0x1e5 DUP1
0x1e6 DUP3
0x1e7 DUP5
0x1e8 CALLDATACOPY
0x1e9 DUP3
0x1ea ADD
0x1eb SWAP2
0x1ec POP
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 POP
0x1f2 SWAP2
0x1f3 SWAP3
0x1f4 SWAP2
0x1f5 SWAP3
0x1f6 SWAP1
0x1f7 DUP1
0x1f8 CALLDATALOAD
0x1f9 SWAP1
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe DUP3
0x1ff ADD
0x200 DUP1
0x201 CALLDATALOAD
0x202 SWAP1
0x203 PUSH1 0x20
0x205 ADD
0x206 SWAP1
0x207 DUP1
0x208 DUP1
0x209 PUSH1 0x20
0x20b MUL
0x20c PUSH1 0x20
0x20e ADD
0x20f PUSH1 0x40
0x211 MLOAD
0x212 SWAP1
0x213 DUP2
0x214 ADD
0x215 PUSH1 0x40
0x217 MSTORE
0x218 DUP1
0x219 SWAP4
0x21a SWAP3
0x21b SWAP2
0x21c SWAP1
0x21d DUP2
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x20
0x222 ADD
0x223 DUP4
0x224 DUP4
0x225 PUSH1 0x20
0x227 MUL
0x228 DUP1
0x229 DUP3
0x22a DUP5
0x22b CALLDATACOPY
0x22c DUP3
0x22d ADD
0x22e SWAP2
0x22f POP
0x230 POP
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 SWAP2
0x236 SWAP3
0x237 SWAP2
0x238 SWAP3
0x239 SWAP1
0x23a POP
0x23b POP
0x23c POP
0x23d PUSH2 0x4cd
0x240 JUMP
---
0x186: JUMPDEST 
0x188: V87 = 0x241
0x18b: V88 = 0x4
0x18e: V89 = CALLDATASIZE
0x18f: V90 = SUB V89 0x4
0x191: V91 = ADD 0x4 V90
0x195: V92 = CALLDATALOAD 0x4
0x196: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1ad: V95 = 0x20
0x1af: V96 = ADD 0x20 0x4
0x1b5: V97 = CALLDATALOAD 0x24
0x1b7: V98 = 0x20
0x1b9: V99 = ADD 0x20 0x24
0x1bc: V100 = ADD 0x4 V97
0x1be: V101 = CALLDATALOAD V100
0x1c0: V102 = 0x20
0x1c2: V103 = ADD 0x20 V100
0x1c6: V104 = 0x20
0x1c8: V105 = MUL 0x20 V101
0x1c9: V106 = 0x20
0x1cb: V107 = ADD 0x20 V105
0x1cc: V108 = 0x40
0x1ce: V109 = M[0x40]
0x1d1: V110 = ADD V109 V107
0x1d2: V111 = 0x40
0x1d4: M[0x40] = V110
0x1dc: M[V109] = V101
0x1dd: V112 = 0x20
0x1df: V113 = ADD 0x20 V109
0x1e2: V114 = 0x20
0x1e4: V115 = MUL 0x20 V101
0x1e8: CALLDATACOPY V113 V103 V115
0x1ea: V116 = ADD V113 V115
0x1f8: V117 = CALLDATALOAD 0x44
0x1fa: V118 = 0x20
0x1fc: V119 = ADD 0x20 0x44
0x1ff: V120 = ADD 0x4 V117
0x201: V121 = CALLDATALOAD V120
0x203: V122 = 0x20
0x205: V123 = ADD 0x20 V120
0x209: V124 = 0x20
0x20b: V125 = MUL 0x20 V121
0x20c: V126 = 0x20
0x20e: V127 = ADD 0x20 V125
0x20f: V128 = 0x40
0x211: V129 = M[0x40]
0x214: V130 = ADD V129 V127
0x215: V131 = 0x40
0x217: M[0x40] = V130
0x21f: M[V129] = V121
0x220: V132 = 0x20
0x222: V133 = ADD 0x20 V129
0x225: V134 = 0x20
0x227: V135 = MUL 0x20 V121
0x22b: CALLDATACOPY V133 V123 V135
0x22d: V136 = ADD V133 V135
0x23d: V137 = 0x4cd
0x240: JUMP 0x4cd
---
Entry stack: [V11, V83]
Stack pops: 1
Stack additions: [0x241, V94, V109, V129]
Exit stack: [V11, 0x241, V94, V109, V129]

================================

Block 0x241
[0x241:0x256]
---
Predecessors: [0x6a9]
Successors: []
---
0x241 JUMPDEST
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 DUP3
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x20
0x24b ADD
0x24c SWAP2
0x24d POP
0x24e POP
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP1
0x253 SWAP2
0x254 SUB
0x255 SWAP1
0x256 RETURN
---
0x241: JUMPDEST 
0x242: V138 = 0x40
0x244: V139 = M[0x40]
0x248: M[V139] = S0
0x249: V140 = 0x20
0x24b: V141 = ADD 0x20 V139
0x24f: V142 = 0x40
0x251: V143 = M[0x40]
0x254: V144 = SUB V141 V143
0x256: RETURN V143 V144
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x257
[0x257:0x2ad]
---
Predecessors: [0x7e]
Successors: [0x2ae, 0x2ff]
---
0x257 JUMPDEST
0x258 PUSH1 0x1
0x25a PUSH1 0x0
0x25c SWAP1
0x25d SLOAD
0x25e SWAP1
0x25f PUSH2 0x100
0x262 EXP
0x263 SWAP1
0x264 DIV
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a AND
0x27b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x290 AND
0x291 CALLER
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 EQ
0x2a9 DUP1
0x2aa PUSH2 0x2ff
0x2ad JUMPI
---
0x257: JUMPDEST 
0x258: V145 = 0x1
0x25a: V146 = 0x0
0x25d: V147 = S[0x1]
0x25f: V148 = 0x100
0x262: V149 = EXP 0x100 0x0
0x264: V150 = DIV V147 0x1
0x265: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x27b: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x290: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x291: V155 = CALLER
0x292: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2a8: V158 = EQ V157 V154
0x2aa: V159 = 0x2ff
0x2ad: JUMPI 0x2ff V158
---
Entry stack: [V11, 0xb3, V39]
Stack pops: 0
Stack additions: [V158]
Exit stack: [V11, 0xb3, V39, V158]

================================

Block 0x2ae
[0x2ae:0x2fe]
---
Predecessors: [0x257]
Successors: [0x2ff]
---
0x2ae POP
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 SWAP1
0x2b3 SLOAD
0x2b4 SWAP1
0x2b5 PUSH2 0x100
0x2b8 EXP
0x2b9 SWAP1
0x2ba DIV
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 AND
0x2d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e6 AND
0x2e7 CALLER
0x2e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fd AND
0x2fe EQ
---
0x2af: V160 = 0x0
0x2b3: V161 = S[0x0]
0x2b5: V162 = 0x100
0x2b8: V163 = EXP 0x100 0x0
0x2ba: V164 = DIV V161 0x1
0x2bb: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2d1: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2e7: V169 = CALLER
0x2e8: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2fe: V172 = EQ V171 V168
---
Entry stack: [V11, 0xb3, V39, V158]
Stack pops: 1
Stack additions: [V172]
Exit stack: [V11, 0xb3, V39, V172]

================================

Block 0x2ff
[0x2ff:0x305]
---
Predecessors: [0x257, 0x2ae]
Successors: [0x306, 0x30a]
---
0x2ff JUMPDEST
0x300 ISZERO
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2ff: JUMPDEST 
0x300: V173 = ISZERO S0
0x301: V174 = ISZERO V173
0x302: V175 = 0x30a
0x305: JUMPI 0x30a V174
---
Entry stack: [V11, 0xb3, V39, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb3, V39]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2ff]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V176 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb3, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb3, V39]

================================

Block 0x30a
[0x30a:0x34c]
---
Predecessors: [0x2ff]
Successors: [0xb3]
---
0x30a JUMPDEST
0x30b DUP1
0x30c PUSH1 0x0
0x30e DUP1
0x30f PUSH2 0x100
0x312 EXP
0x313 DUP2
0x314 SLOAD
0x315 DUP2
0x316 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32b MUL
0x32c NOT
0x32d AND
0x32e SWAP1
0x32f DUP4
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 AND
0x346 MUL
0x347 OR
0x348 SWAP1
0x349 SSTORE
0x34a POP
0x34b POP
0x34c JUMP
---
0x30a: JUMPDEST 
0x30c: V177 = 0x0
0x30f: V178 = 0x100
0x312: V179 = EXP 0x100 0x0
0x314: V180 = S[0x0]
0x316: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V182 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x32c: V183 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V184 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V180
0x330: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x346: V187 = MUL V186 0x1
0x347: V188 = OR V187 V184
0x349: S[0x0] = V188
0x34c: JUMP 0xb3
---
Entry stack: [V11, 0xb3, V39]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x34d
[0x34d:0x371]
---
Predecessors: [0xc1]
Successors: [0xca]
---
0x34d JUMPDEST
0x34e PUSH1 0x0
0x350 DUP1
0x351 SWAP1
0x352 SLOAD
0x353 SWAP1
0x354 PUSH2 0x100
0x357 EXP
0x358 SWAP1
0x359 DIV
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 DUP2
0x371 JUMP
---
0x34d: JUMPDEST 
0x34e: V189 = 0x0
0x352: V190 = S[0x0]
0x354: V191 = 0x100
0x357: V192 = EXP 0x100 0x0
0x359: V193 = DIV V190 0x1
0x35a: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x371: JUMP 0xca
---
Entry stack: [V11, 0xca]
Stack pops: 1
Stack additions: [S0, V195]
Exit stack: [V11, 0xca, V195]

================================

Block 0x372
[0x372:0x3c8]
---
Predecessors: [0x118]
Successors: [0x3c9, 0x41a]
---
0x372 JUMPDEST
0x373 PUSH1 0x1
0x375 PUSH1 0x0
0x377 SWAP1
0x378 SLOAD
0x379 SWAP1
0x37a PUSH2 0x100
0x37d EXP
0x37e SWAP1
0x37f DIV
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac CALLER
0x3ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c2 AND
0x3c3 EQ
0x3c4 DUP1
0x3c5 PUSH2 0x41a
0x3c8 JUMPI
---
0x372: JUMPDEST 
0x373: V196 = 0x1
0x375: V197 = 0x0
0x378: V198 = S[0x1]
0x37a: V199 = 0x100
0x37d: V200 = EXP 0x100 0x0
0x37f: V201 = DIV V198 0x1
0x380: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x396: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x3ac: V206 = CALLER
0x3ad: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c2: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x3c3: V209 = EQ V208 V205
0x3c5: V210 = 0x41a
0x3c8: JUMPI 0x41a V209
---
Entry stack: [V11, 0x121]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V11, 0x121, V209]

================================

Block 0x3c9
[0x3c9:0x419]
---
Predecessors: [0x372]
Successors: [0x41a]
---
0x3c9 POP
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd SWAP1
0x3ce SLOAD
0x3cf SWAP1
0x3d0 PUSH2 0x100
0x3d3 EXP
0x3d4 SWAP1
0x3d5 DIV
0x3d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3eb AND
0x3ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x401 AND
0x402 CALLER
0x403 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x418 AND
0x419 EQ
---
0x3ca: V211 = 0x0
0x3ce: V212 = S[0x0]
0x3d0: V213 = 0x100
0x3d3: V214 = EXP 0x100 0x0
0x3d5: V215 = DIV V212 0x1
0x3d6: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3ec: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x401: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x402: V220 = CALLER
0x403: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x418: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x419: V223 = EQ V222 V219
---
Entry stack: [V11, 0x121, V209]
Stack pops: 1
Stack additions: [V223]
Exit stack: [V11, 0x121, V223]

================================

Block 0x41a
[0x41a:0x420]
---
Predecessors: [0x372, 0x3c9]
Successors: [0x421, 0x425]
---
0x41a JUMPDEST
0x41b ISZERO
0x41c ISZERO
0x41d PUSH2 0x425
0x420 JUMPI
---
0x41a: JUMPDEST 
0x41b: V224 = ISZERO S0
0x41c: V225 = ISZERO V224
0x41d: V226 = 0x425
0x420: JUMPI 0x425 V225
---
Entry stack: [V11, 0x121, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x121]

================================

Block 0x421
[0x421:0x424]
---
Predecessors: [0x41a]
Successors: []
---
0x421 PUSH1 0x0
0x423 DUP1
0x424 REVERT
---
0x421: V227 = 0x0
0x424: REVERT 0x0 0x0
---
Entry stack: [V11, 0x121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121]

================================

Block 0x425
[0x425:0x49a]
---
Predecessors: [0x41a]
Successors: [0x49b, 0x4a4]
---
0x425 JUMPDEST
0x426 PUSH1 0x1
0x428 PUSH1 0x0
0x42a SWAP1
0x42b SLOAD
0x42c SWAP1
0x42d PUSH2 0x100
0x430 EXP
0x431 SWAP1
0x432 DIV
0x433 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x448 AND
0x449 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45e AND
0x45f PUSH2 0x8fc
0x462 ADDRESS
0x463 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x478 AND
0x479 BALANCE
0x47a SWAP1
0x47b DUP2
0x47c ISZERO
0x47d MUL
0x47e SWAP1
0x47f PUSH1 0x40
0x481 MLOAD
0x482 PUSH1 0x0
0x484 PUSH1 0x40
0x486 MLOAD
0x487 DUP1
0x488 DUP4
0x489 SUB
0x48a DUP2
0x48b DUP6
0x48c DUP9
0x48d DUP9
0x48e CALL
0x48f SWAP4
0x490 POP
0x491 POP
0x492 POP
0x493 POP
0x494 ISZERO
0x495 DUP1
0x496 ISZERO
0x497 PUSH2 0x4a4
0x49a JUMPI
---
0x425: JUMPDEST 
0x426: V228 = 0x1
0x428: V229 = 0x0
0x42b: V230 = S[0x1]
0x42d: V231 = 0x100
0x430: V232 = EXP 0x100 0x0
0x432: V233 = DIV V230 0x1
0x433: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x448: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x449: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x45f: V238 = 0x8fc
0x462: V239 = ADDRESS
0x463: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x478: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x479: V242 = BALANCE V241
0x47c: V243 = ISZERO V242
0x47d: V244 = MUL V243 0x8fc
0x47f: V245 = 0x40
0x481: V246 = M[0x40]
0x482: V247 = 0x0
0x484: V248 = 0x40
0x486: V249 = M[0x40]
0x489: V250 = SUB V246 V249
0x48e: V251 = CALL V244 V237 V242 V249 V250 V249 0x0
0x494: V252 = ISZERO V251
0x496: V253 = ISZERO V252
0x497: V254 = 0x4a4
0x49a: JUMPI 0x4a4 V253
---
Entry stack: [V11, 0x121]
Stack pops: 0
Stack additions: [V252]
Exit stack: [V11, 0x121, V252]

================================

Block 0x49b
[0x49b:0x4a3]
---
Predecessors: [0x425]
Successors: []
---
0x49b RETURNDATASIZE
0x49c PUSH1 0x0
0x49e DUP1
0x49f RETURNDATACOPY
0x4a0 RETURNDATASIZE
0x4a1 PUSH1 0x0
0x4a3 REVERT
---
0x49b: V255 = RETURNDATASIZE
0x49c: V256 = 0x0
0x49f: RETURNDATACOPY 0x0 0x0 V255
0x4a0: V257 = RETURNDATASIZE
0x4a1: V258 = 0x0
0x4a3: REVERT 0x0 V257
---
Entry stack: [V11, 0x121, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V252]

================================

Block 0x4a4
[0x4a4:0x4a6]
---
Predecessors: [0x425]
Successors: [0x121]
---
0x4a4 JUMPDEST
0x4a5 POP
0x4a6 JUMP
---
0x4a4: JUMPDEST 
0x4a6: JUMP 0x121
---
Entry stack: [V11, 0x121, V252]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a7
[0x4a7:0x4cc]
---
Predecessors: [0x12f]
Successors: [0x138]
---
0x4a7 JUMPDEST
0x4a8 PUSH1 0x1
0x4aa PUSH1 0x0
0x4ac SWAP1
0x4ad SLOAD
0x4ae SWAP1
0x4af PUSH2 0x100
0x4b2 EXP
0x4b3 SWAP1
0x4b4 DIV
0x4b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ca AND
0x4cb DUP2
0x4cc JUMP
---
0x4a7: JUMPDEST 
0x4a8: V259 = 0x1
0x4aa: V260 = 0x0
0x4ad: V261 = S[0x1]
0x4af: V262 = 0x100
0x4b2: V263 = EXP 0x100 0x0
0x4b4: V264 = DIV V261 0x1
0x4b5: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ca: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x4cc: JUMP 0x138
---
Entry stack: [V11, 0x138]
Stack pops: 1
Stack additions: [S0, V266]
Exit stack: [V11, 0x138, V266]

================================

Block 0x4cd
[0x4cd:0x526]
---
Predecessors: [0x186]
Successors: [0x527, 0x578]
---
0x4cd JUMPDEST
0x4ce PUSH1 0x0
0x4d0 DUP1
0x4d1 PUSH1 0x1
0x4d3 PUSH1 0x0
0x4d5 SWAP1
0x4d6 SLOAD
0x4d7 SWAP1
0x4d8 PUSH2 0x100
0x4db EXP
0x4dc SWAP1
0x4dd DIV
0x4de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f3 AND
0x4f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x509 AND
0x50a CALLER
0x50b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x520 AND
0x521 EQ
0x522 DUP1
0x523 PUSH2 0x578
0x526 JUMPI
---
0x4cd: JUMPDEST 
0x4ce: V267 = 0x0
0x4d1: V268 = 0x1
0x4d3: V269 = 0x0
0x4d6: V270 = S[0x1]
0x4d8: V271 = 0x100
0x4db: V272 = EXP 0x100 0x0
0x4dd: V273 = DIV V270 0x1
0x4de: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f3: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x4f4: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x509: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x50a: V278 = CALLER
0x50b: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x520: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x521: V281 = EQ V280 V277
0x523: V282 = 0x578
0x526: JUMPI 0x578 V281
---
Entry stack: [V11, 0x241, V94, V109, V129]
Stack pops: 0
Stack additions: [0x0, 0x0, V281]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0, V281]

================================

Block 0x527
[0x527:0x577]
---
Predecessors: [0x4cd]
Successors: [0x578]
---
0x527 POP
0x528 PUSH1 0x0
0x52a DUP1
0x52b SWAP1
0x52c SLOAD
0x52d SWAP1
0x52e PUSH2 0x100
0x531 EXP
0x532 SWAP1
0x533 DIV
0x534 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x549 AND
0x54a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55f AND
0x560 CALLER
0x561 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x576 AND
0x577 EQ
---
0x528: V283 = 0x0
0x52c: V284 = S[0x0]
0x52e: V285 = 0x100
0x531: V286 = EXP 0x100 0x0
0x533: V287 = DIV V284 0x1
0x534: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x549: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x54a: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x55f: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x560: V292 = CALLER
0x561: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x576: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x577: V295 = EQ V294 V291
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0, V281]
Stack pops: 1
Stack additions: [V295]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0, V295]

================================

Block 0x578
[0x578:0x57e]
---
Predecessors: [0x4cd, 0x527]
Successors: [0x57f, 0x583]
---
0x578 JUMPDEST
0x579 ISZERO
0x57a ISZERO
0x57b PUSH2 0x583
0x57e JUMPI
---
0x578: JUMPDEST 
0x579: V296 = ISZERO S0
0x57a: V297 = ISZERO V296
0x57b: V298 = 0x583
0x57e: JUMPI 0x583 V297
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0]

================================

Block 0x57f
[0x57f:0x582]
---
Predecessors: [0x578]
Successors: []
---
0x57f PUSH1 0x0
0x581 DUP1
0x582 REVERT
---
0x57f: V299 = 0x0
0x582: REVERT 0x0 0x0
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0]

================================

Block 0x583
[0x583:0x587]
---
Predecessors: [0x578]
Successors: [0x588]
---
0x583 JUMPDEST
0x584 PUSH1 0x0
0x586 SWAP1
0x587 POP
---
0x583: JUMPDEST 
0x584: V300 = 0x0
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, 0x0]

================================

Block 0x588
[0x588:0x591]
---
Predecessors: [0x583, 0x68c]
Successors: [0x592, 0x6a9]
---
0x588 JUMPDEST
0x589 DUP4
0x58a MLOAD
0x58b DUP2
0x58c LT
0x58d ISZERO
0x58e PUSH2 0x6a9
0x591 JUMPI
---
0x588: JUMPDEST 
0x58a: V301 = M[V109]
0x58c: V302 = LT S0 V301
0x58d: V303 = ISZERO V302
0x58e: V304 = 0x6a9
0x591: JUMPI 0x6a9 V303
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S0]

================================

Block 0x592
[0x592:0x5b9]
---
Predecessors: [0x588]
Successors: [0x5ba, 0x5bb]
---
0x592 DUP5
0x593 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a8 AND
0x5a9 PUSH4 0xa9059cbb
0x5ae DUP6
0x5af DUP4
0x5b0 DUP2
0x5b1 MLOAD
0x5b2 DUP2
0x5b3 LT
0x5b4 ISZERO
0x5b5 ISZERO
0x5b6 PUSH2 0x5bb
0x5b9 JUMPI
---
0x593: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x5a9: V307 = 0xa9059cbb
0x5b1: V308 = M[V109]
0x5b3: V309 = LT S0 V308
0x5b4: V310 = ISZERO V309
0x5b5: V311 = ISZERO V310
0x5b6: V312 = 0x5bb
0x5b9: JUMPI 0x5bb V311
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V306, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S0, V306, 0xa9059cbb, V109, S0]

================================

Block 0x5ba
[0x5ba:0x5ba]
---
Predecessors: [0x592]
Successors: []
---
0x5ba INVALID
---
0x5ba: INVALID 
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S4, V306, 0xa9059cbb, V109, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S4, V306, 0xa9059cbb, V109, S0]

================================

Block 0x5bb
[0x5bb:0x5d1]
---
Predecessors: [0x592]
Successors: [0x5d2, 0x5d3]
---
0x5bb JUMPDEST
0x5bc SWAP1
0x5bd PUSH1 0x20
0x5bf ADD
0x5c0 SWAP1
0x5c1 PUSH1 0x20
0x5c3 MUL
0x5c4 ADD
0x5c5 MLOAD
0x5c6 DUP6
0x5c7 DUP5
0x5c8 DUP2
0x5c9 MLOAD
0x5ca DUP2
0x5cb LT
0x5cc ISZERO
0x5cd ISZERO
0x5ce PUSH2 0x5d3
0x5d1 JUMPI
---
0x5bb: JUMPDEST 
0x5bd: V313 = 0x20
0x5bf: V314 = ADD 0x20 V109
0x5c1: V315 = 0x20
0x5c3: V316 = MUL 0x20 S0
0x5c4: V317 = ADD V316 V314
0x5c5: V318 = M[V317]
0x5c9: V319 = M[V129]
0x5cb: V320 = LT S4 V319
0x5cc: V321 = ISZERO V320
0x5cd: V322 = ISZERO V321
0x5ce: V323 = 0x5d3
0x5d1: JUMPI 0x5d3 V322
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S4, V306, 0xa9059cbb, V109, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V318, S6, S4]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S4, V306, 0xa9059cbb, V318, V129, S4]

================================

Block 0x5d2
[0x5d2:0x5d2]
---
Predecessors: [0x5bb]
Successors: []
---
0x5d2 INVALID
---
0x5d2: INVALID 
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S5, V306, 0xa9059cbb, V318, V129, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S5, V306, 0xa9059cbb, V318, V129, S0]

================================

Block 0x5d3
[0x5d3:0x65d]
---
Predecessors: [0x5bb]
Successors: [0x65e, 0x662]
---
0x5d3 JUMPDEST
0x5d4 SWAP1
0x5d5 PUSH1 0x20
0x5d7 ADD
0x5d8 SWAP1
0x5d9 PUSH1 0x20
0x5db MUL
0x5dc ADD
0x5dd MLOAD
0x5de PUSH1 0x40
0x5e0 MLOAD
0x5e1 DUP4
0x5e2 PUSH4 0xffffffff
0x5e7 AND
0x5e8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x606 MUL
0x607 DUP2
0x608 MSTORE
0x609 PUSH1 0x4
0x60b ADD
0x60c DUP1
0x60d DUP4
0x60e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x623 AND
0x624 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x639 AND
0x63a DUP2
0x63b MSTORE
0x63c PUSH1 0x20
0x63e ADD
0x63f DUP3
0x640 DUP2
0x641 MSTORE
0x642 PUSH1 0x20
0x644 ADD
0x645 SWAP3
0x646 POP
0x647 POP
0x648 POP
0x649 PUSH1 0x20
0x64b PUSH1 0x40
0x64d MLOAD
0x64e DUP1
0x64f DUP4
0x650 SUB
0x651 DUP2
0x652 PUSH1 0x0
0x654 DUP8
0x655 DUP1
0x656 EXTCODESIZE
0x657 ISZERO
0x658 DUP1
0x659 ISZERO
0x65a PUSH2 0x662
0x65d JUMPI
---
0x5d3: JUMPDEST 
0x5d5: V324 = 0x20
0x5d7: V325 = ADD 0x20 V129
0x5d9: V326 = 0x20
0x5db: V327 = MUL 0x20 S0
0x5dc: V328 = ADD V327 V325
0x5dd: V329 = M[V328]
0x5de: V330 = 0x40
0x5e0: V331 = M[0x40]
0x5e2: V332 = 0xffffffff
0x5e7: V333 = AND 0xffffffff 0xa9059cbb
0x5e8: V334 = 0x100000000000000000000000000000000000000000000000000000000
0x606: V335 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x608: M[V331] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x609: V336 = 0x4
0x60b: V337 = ADD 0x4 V331
0x60e: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x623: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x624: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x639: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x63b: M[V337] = V341
0x63c: V342 = 0x20
0x63e: V343 = ADD 0x20 V337
0x641: M[V343] = V329
0x642: V344 = 0x20
0x644: V345 = ADD 0x20 V343
0x649: V346 = 0x20
0x64b: V347 = 0x40
0x64d: V348 = M[0x40]
0x650: V349 = SUB V345 V348
0x652: V350 = 0x0
0x656: V351 = EXTCODESIZE V306
0x657: V352 = ISZERO V351
0x659: V353 = ISZERO V352
0x65a: V354 = 0x662
0x65d: JUMPI 0x662 V353
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S5, V306, 0xa9059cbb, V318, V129, S0]
Stack pops: 5
Stack additions: [S4, S3, V345, 0x20, V348, V349, V348, 0x0, S4, V352]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S5, V306, 0xa9059cbb, V345, 0x20, V348, V349, V348, 0x0, V306, V352]

================================

Block 0x65e
[0x65e:0x661]
---
Predecessors: [0x5d3]
Successors: []
---
0x65e PUSH1 0x0
0x660 DUP1
0x661 REVERT
---
0x65e: V355 = 0x0
0x661: REVERT 0x0 0x0
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S10, V306, 0xa9059cbb, V345, 0x20, V348, V349, V348, 0x0, V306, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S10, V306, 0xa9059cbb, V345, 0x20, V348, V349, V348, 0x0, V306, V352]

================================

Block 0x662
[0x662:0x66c]
---
Predecessors: [0x5d3]
Successors: [0x66d, 0x676]
---
0x662 JUMPDEST
0x663 POP
0x664 GAS
0x665 CALL
0x666 ISZERO
0x667 DUP1
0x668 ISZERO
0x669 PUSH2 0x676
0x66c JUMPI
---
0x662: JUMPDEST 
0x664: V356 = GAS
0x665: V357 = CALL V356 V306 0x0 V348 V349 V348 0x20
0x666: V358 = ISZERO V357
0x668: V359 = ISZERO V358
0x669: V360 = 0x676
0x66c: JUMPI 0x676 V359
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S10, V306, 0xa9059cbb, V345, 0x20, V348, V349, V348, 0x0, V306, V352]
Stack pops: 7
Stack additions: [V358]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S10, V306, 0xa9059cbb, V345, V358]

================================

Block 0x66d
[0x66d:0x675]
---
Predecessors: [0x662]
Successors: []
---
0x66d RETURNDATASIZE
0x66e PUSH1 0x0
0x670 DUP1
0x671 RETURNDATACOPY
0x672 RETURNDATASIZE
0x673 PUSH1 0x0
0x675 REVERT
---
0x66d: V361 = RETURNDATASIZE
0x66e: V362 = 0x0
0x671: RETURNDATACOPY 0x0 0x0 V361
0x672: V363 = RETURNDATASIZE
0x673: V364 = 0x0
0x675: REVERT 0x0 V363
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S4, V306, 0xa9059cbb, V345, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S4, V306, 0xa9059cbb, V345, V358]

================================

Block 0x676
[0x676:0x687]
---
Predecessors: [0x662]
Successors: [0x688, 0x68c]
---
0x676 JUMPDEST
0x677 POP
0x678 POP
0x679 POP
0x67a POP
0x67b PUSH1 0x40
0x67d MLOAD
0x67e RETURNDATASIZE
0x67f PUSH1 0x20
0x681 DUP2
0x682 LT
0x683 ISZERO
0x684 PUSH2 0x68c
0x687 JUMPI
---
0x676: JUMPDEST 
0x67b: V365 = 0x40
0x67d: V366 = M[0x40]
0x67e: V367 = RETURNDATASIZE
0x67f: V368 = 0x20
0x682: V369 = LT V367 0x20
0x683: V370 = ISZERO V369
0x684: V371 = 0x68c
0x687: JUMPI 0x68c V370
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S4, V306, 0xa9059cbb, V345, V358]
Stack pops: 4
Stack additions: [V366, V367]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S4, V366, V367]

================================

Block 0x688
[0x688:0x68b]
---
Predecessors: [0x676]
Successors: []
---
0x688 PUSH1 0x0
0x68a DUP1
0x68b REVERT
---
0x688: V372 = 0x0
0x68b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S2, V366, V367]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, S2, V366, V367]

================================

Block 0x68c
[0x68c:0x6a8]
---
Predecessors: [0x676]
Successors: [0x588]
---
0x68c JUMPDEST
0x68d DUP2
0x68e ADD
0x68f SWAP1
0x690 DUP1
0x691 DUP1
0x692 MLOAD
0x693 SWAP1
0x694 PUSH1 0x20
0x696 ADD
0x697 SWAP1
0x698 SWAP3
0x699 SWAP2
0x69a SWAP1
0x69b POP
0x69c POP
0x69d POP
0x69e POP
0x69f PUSH1 0x1
0x6a1 DUP2
0x6a2 ADD
0x6a3 SWAP1
0x6a4 POP
0x6a5 PUSH2 0x588
0x6a8 JUMP
---
0x68c: JUMPDEST 
0x68e: V373 = ADD V366 V367
0x692: V374 = M[V366]
0x694: V375 = 0x20
0x696: V376 = ADD 0x20 V366
0x69f: V377 = 0x1
0x6a2: V378 = ADD S2 0x1
0x6a5: V379 = 0x588
0x6a8: JUMP 0x588
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S2, V366, V367]
Stack pops: 3
Stack additions: [V378]
Exit stack: [V11, 0x241, V94, V109, V129, 0x0, V378]

================================

Block 0x6a9
[0x6a9:0x6b3]
---
Predecessors: [0x588]
Successors: [0x241]
---
0x6a9 JUMPDEST
0x6aa DUP1
0x6ab SWAP2
0x6ac POP
0x6ad POP
0x6ae SWAP4
0x6af SWAP3
0x6b0 POP
0x6b1 POP
0x6b2 POP
0x6b3 JUMP
---
0x6a9: JUMPDEST 
0x6b3: JUMP 0x241
---
Entry stack: [V11, 0x241, V94, V109, V129, 0x0, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x6b4
[0x6b4:0x6df]
---
Predecessors: []
Successors: []
---
0x6b4 STOP
0x6b5 LOG1
0x6b6 PUSH6 0x627a7a723058
0x6bd SHA3
0x6be GT
0x6bf MISSING 0xec
0x6c0 SWAP7
0x6c1 SWAP10
0x6c2 DUP3
0x6c3 SHA3
0x6c4 SWAP7
0x6c5 MISSING 0x1e
0x6c6 DUP12
0x6c7 PUSH24 0x9a4e620c4687e623bfa3f277f2e18bea2c9e891c124a0029
---
0x6b4: STOP 
0x6b5: LOG S0 S1 S2
0x6b6: V380 = 0x627a7a723058
0x6bd: V381 = SHA3 0x627a7a723058 S3
0x6be: V382 = GT V381 S4
0x6bf: MISSING 0xec
0x6c3: V383 = SHA3 S2 S10
0x6c5: MISSING 0x1e
0x6c7: V384 = 0x9a4e620c4687e623bfa3f277f2e18bea2c9e891c124a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V382, S0, S1, S2, S3, S4, S5, S6, V383, S8, S9, S7, 0x9a4e620c4687e623bfa3f277f2e18bea2c9e891c124a0029, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x3576a32f
Entry block: 0x72
Exit block: 0xb3
Body: 0x72, 0x7a, 0x7e, 0xb3, 0x257, 0x2ae, 0x2ff, 0x306, 0x30a

Function 1:
Public function signature: 0x3af8e4ab
Entry block: 0xb5
Exit block: 0xca
Body: 0xb5, 0xbd, 0xc1, 0xca, 0x34d

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x10c
Exit block: 0x121
Body: 0x10c, 0x114, 0x118, 0x121, 0x372, 0x3c9, 0x41a, 0x421, 0x425, 0x49b, 0x4a4

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x123
Exit block: 0x138
Body: 0x123, 0x12b, 0x12f, 0x138, 0x4a7

Function 4:
Public function signature: 0xad8733ca
Entry block: 0x17a
Exit block: 0x688
Body: 0x17a, 0x182, 0x186, 0x241, 0x4cd, 0x527, 0x578, 0x57f, 0x583, 0x588, 0x592, 0x5ba, 0x5bb, 0x5d2, 0x5d3, 0x65e, 0x662, 0x66d, 0x676, 0x688, 0x68c, 0x6a9

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

