Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x60]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x60
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x60
0xa: JUMPI 0x60 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x118]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x4c2412a2
0x3a EQ
0x3b PUSH2 0x118
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x4c2412a2
0x3a: V12 = EQ 0x4c2412a2 V10
0x3b: V13 = 0x118
0x3e: JUMPI 0x118 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x13b]
---
0x3f DUP1
0x40 PUSH4 0x8fb5d4bc
0x45 EQ
0x46 PUSH2 0x13b
0x49 JUMPI
---
0x40: V14 = 0x8fb5d4bc
0x45: V15 = EQ 0x8fb5d4bc V10
0x46: V16 = 0x13b
0x49: JUMPI 0x13b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x16e]
---
0x4a DUP1
0x4b PUSH4 0x9de2ee21
0x50 EQ
0x51 PUSH2 0x16e
0x54 JUMPI
---
0x4b: V17 = 0x9de2ee21
0x50: V18 = EQ 0x9de2ee21 V10
0x51: V19 = 0x16e
0x54: JUMPI 0x16e V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1bd]
---
0x55 DUP1
0x56 PUSH4 0xf58fef8e
0x5b EQ
0x5c PUSH2 0x1bd
0x5f JUMPI
---
0x56: V20 = 0xf58fef8e
0x5b: V21 = EQ 0xf58fef8e V10
0x5c: V22 = 0x1bd
0x5f: JUMPI 0x1bd V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x0, 0x55]
Successors: [0x64]
---
0x60 JUMPDEST
0x61 PUSH2 0x116
---
0x60: JUMPDEST 
0x61: V23 = 0x116
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x116]
Exit stack: [V10, 0x116]

================================

Block 0x64
[0x64:0x113]
---
Predecessors: [0x60]
Successors: [0x114]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 PUSH1 0x1
0x68 PUSH1 0x0
0x6a CALLER
0x6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80 AND
0x81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96 AND
0x97 DUP2
0x98 MSTORE
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP1
0x9d DUP2
0x9e MSTORE
0x9f PUSH1 0x20
0xa1 ADD
0xa2 PUSH1 0x0
0xa4 SHA3
0xa5 DUP2
0xa6 SWAP1
0xa7 SSTORE
0xa8 POP
0xa9 PUSH32 0xf2f3fe78fb5fe02187ccc6aa607d3d2ca4c070ee2a1466ad7baefc075aa68439
0xca CALLER
0xcb CALLVALUE
0xcc PUSH1 0x40
0xce MLOAD
0xcf DUP1
0xd0 DUP4
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x20
0x101 ADD
0x102 DUP3
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP3
0x109 POP
0x10a POP
0x10b POP
0x10c PUSH1 0x40
0x10e MLOAD
0x10f DUP1
0x110 SWAP2
0x111 SUB
0x112 SWAP1
0x113 LOG1
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = 0x1
0x68: V26 = 0x0
0x6a: V27 = CALLER
0x6b: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x80: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x81: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x96: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x98: M[0x0] = V31
0x99: V32 = 0x20
0x9b: V33 = ADD 0x20 0x0
0x9e: M[0x20] = 0x1
0x9f: V34 = 0x20
0xa1: V35 = ADD 0x20 0x20
0xa2: V36 = 0x0
0xa4: V37 = SHA3 0x0 0x40
0xa7: S[V37] = V24
0xa9: V38 = 0xf2f3fe78fb5fe02187ccc6aa607d3d2ca4c070ee2a1466ad7baefc075aa68439
0xca: V39 = CALLER
0xcb: V40 = CALLVALUE
0xcc: V41 = 0x40
0xce: V42 = M[0x40]
0xd1: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xe7: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xfe: M[V42] = V46
0xff: V47 = 0x20
0x101: V48 = ADD 0x20 V42
0x104: M[V48] = V40
0x105: V49 = 0x20
0x107: V50 = ADD 0x20 V48
0x10c: V51 = 0x40
0x10e: V52 = M[0x40]
0x111: V53 = SUB V50 V52
0x113: LOG V52 V53 0xf2f3fe78fb5fe02187ccc6aa607d3d2ca4c070ee2a1466ad7baefc075aa68439
---
Entry stack: [V10, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x116]

================================

Block 0x114
[0x114:0x115]
---
Predecessors: [0x64]
Successors: [0x116]
---
0x114 JUMPDEST
0x115 JUMP
---
0x114: JUMPDEST 
0x115: JUMP 0x116
---
Entry stack: [V10, 0x116]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x116
[0x116:0x117]
---
Predecessors: [0x114]
Successors: []
---
0x116 JUMPDEST
0x117 STOP
---
0x116: JUMPDEST 
0x117: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x118
[0x118:0x11d]
---
Predecessors: [0xb]
Successors: [0x11e]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a PUSH2 0x0
0x11d JUMPI
---
0x118: JUMPDEST 
0x119: V54 = CALLVALUE
0x11a: V55 = 0x0
0x11d: THROWI V54
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11e
[0x11e:0x124]
---
Predecessors: [0x118]
Successors: [0x1cc]
---
0x11e PUSH2 0x125
0x121 PUSH2 0x1cc
0x124 JUMP
---
0x11e: V56 = 0x125
0x121: V57 = 0x1cc
0x124: JUMP 0x1cc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x125]
Exit stack: [V10, 0x125]

================================

Block 0x125
[0x125:0x13a]
---
Predecessors: [0x1cc]
Successors: []
---
0x125 JUMPDEST
0x126 PUSH1 0x40
0x128 MLOAD
0x129 DUP1
0x12a DUP3
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP2
0x131 POP
0x132 POP
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0x125: JUMPDEST 
0x126: V58 = 0x40
0x128: V59 = M[0x40]
0x12c: M[V59] = V95
0x12d: V60 = 0x20
0x12f: V61 = ADD 0x20 V59
0x133: V62 = 0x40
0x135: V63 = M[0x40]
0x138: V64 = SUB V61 V63
0x13a: RETURN V63 V64
---
Entry stack: [V10, 0x125, V95]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x125]

================================

Block 0x13b
[0x13b:0x140]
---
Predecessors: [0x3f]
Successors: [0x141]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d PUSH2 0x0
0x140 JUMPI
---
0x13b: JUMPDEST 
0x13c: V65 = CALLVALUE
0x13d: V66 = 0x0
0x140: THROWI V65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x141
[0x141:0x16b]
---
Predecessors: [0x13b]
Successors: [0x1d2]
---
0x141 PUSH2 0x16c
0x144 PUSH1 0x4
0x146 DUP1
0x147 DUP1
0x148 CALLDATALOAD
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f SWAP1
0x160 PUSH1 0x20
0x162 ADD
0x163 SWAP1
0x164 SWAP2
0x165 SWAP1
0x166 POP
0x167 POP
0x168 PUSH2 0x1d2
0x16b JUMP
---
0x141: V67 = 0x16c
0x144: V68 = 0x4
0x148: V69 = CALLDATALOAD 0x4
0x149: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x160: V72 = 0x20
0x162: V73 = ADD 0x20 0x4
0x168: V74 = 0x1d2
0x16b: JUMP 0x1d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16c, V71]
Exit stack: [V10, 0x16c, V71]

================================

Block 0x16c
[0x16c:0x16d]
---
Predecessors: [0x2a2]
Successors: []
---
0x16c JUMPDEST
0x16d STOP
---
0x16c: JUMPDEST 
0x16d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16e
[0x16e:0x173]
---
Predecessors: [0x4a]
Successors: [0x174]
---
0x16e JUMPDEST
0x16f CALLVALUE
0x170 PUSH2 0x0
0x173 JUMPI
---
0x16e: JUMPDEST 
0x16f: V75 = CALLVALUE
0x170: V76 = 0x0
0x173: THROWI V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x174
[0x174:0x17a]
---
Predecessors: [0x16e]
Successors: [0x2a5]
---
0x174 PUSH2 0x17b
0x177 PUSH2 0x2a5
0x17a JUMP
---
0x174: V77 = 0x17b
0x177: V78 = 0x2a5
0x17a: JUMP 0x2a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17b]
Exit stack: [V10, 0x17b]

================================

Block 0x17b
[0x17b:0x1bc]
---
Predecessors: [0x2a5]
Successors: []
---
0x17b JUMPDEST
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP3
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP2
0x1b3 POP
0x1b4 POP
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 DUP1
0x1b9 SWAP2
0x1ba SUB
0x1bb SWAP1
0x1bc RETURN
---
0x17b: JUMPDEST 
0x17c: V79 = 0x40
0x17e: V80 = M[0x40]
0x181: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x197: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x1ae: M[V80] = V84
0x1af: V85 = 0x20
0x1b1: V86 = ADD 0x20 V80
0x1b5: V87 = 0x40
0x1b7: V88 = M[0x40]
0x1ba: V89 = SUB V86 V88
0x1bc: RETURN V88 V89
---
Entry stack: [V10, 0x17b, V144]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x17b]

================================

Block 0x1bd
[0x1bd:0x1c2]
---
Predecessors: [0x55]
Successors: [0x1c3]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf PUSH2 0x0
0x1c2 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V90 = CALLVALUE
0x1bf: V91 = 0x0
0x1c2: THROWI V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c3
[0x1c3:0x1c9]
---
Predecessors: [0x1bd]
Successors: [0x2cb]
---
0x1c3 PUSH2 0x1ca
0x1c6 PUSH2 0x2cb
0x1c9 JUMP
---
0x1c3: V92 = 0x1ca
0x1c6: V93 = 0x2cb
0x1c9: JUMP 0x2cb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ca]
Exit stack: [V10, 0x1ca]

================================

Block 0x1ca
[0x1ca:0x1cb]
---
Predecessors: [0x35d]
Successors: []
---
0x1ca JUMPDEST
0x1cb STOP
---
0x1ca: JUMPDEST 
0x1cb: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cc
[0x1cc:0x1d1]
---
Predecessors: [0x11e]
Successors: [0x125]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x2
0x1cf SLOAD
0x1d0 DUP2
0x1d1 JUMP
---
0x1cc: JUMPDEST 
0x1cd: V94 = 0x2
0x1cf: V95 = S[0x2]
0x1d1: JUMP 0x125
---
Entry stack: [V10, 0x125]
Stack pops: 1
Stack additions: [S0, V95]
Exit stack: [V10, 0x125, V95]

================================

Block 0x1d2
[0x1d2:0x228]
---
Predecessors: [0x141]
Successors: [0x229, 0x2a1]
---
0x1d2 JUMPDEST
0x1d3 CALLER
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea PUSH1 0x0
0x1ec PUSH1 0x0
0x1ee SWAP1
0x1ef SLOAD
0x1f0 SWAP1
0x1f1 PUSH2 0x100
0x1f4 EXP
0x1f5 SWAP1
0x1f6 DIV
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x222 AND
0x223 EQ
0x224 ISZERO
0x225 PUSH2 0x2a1
0x228 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V96 = CALLER
0x1d4: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1ea: V99 = 0x0
0x1ec: V100 = 0x0
0x1ef: V101 = S[0x0]
0x1f1: V102 = 0x100
0x1f4: V103 = EXP 0x100 0x0
0x1f6: V104 = DIV V101 0x1
0x1f7: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x20d: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x222: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x223: V109 = EQ V108 V98
0x224: V110 = ISZERO V109
0x225: V111 = 0x2a1
0x228: JUMPI 0x2a1 V110
---
Entry stack: [V10, 0x16c, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x16c, V71]

================================

Block 0x229
[0x229:0x2a0]
---
Predecessors: [0x1d2]
Successors: [0x2a1]
---
0x229 DUP1
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f AND
0x240 PUSH2 0x8fc
0x243 PUSH1 0x1
0x245 PUSH1 0x0
0x247 DUP5
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 DUP2
0x275 MSTORE
0x276 PUSH1 0x20
0x278 ADD
0x279 SWAP1
0x27a DUP2
0x27b MSTORE
0x27c PUSH1 0x20
0x27e ADD
0x27f PUSH1 0x0
0x281 SHA3
0x282 SLOAD
0x283 SWAP1
0x284 DUP2
0x285 ISZERO
0x286 MUL
0x287 SWAP1
0x288 PUSH1 0x40
0x28a MLOAD
0x28b DUP1
0x28c SWAP1
0x28d POP
0x28e PUSH1 0x0
0x290 PUSH1 0x40
0x292 MLOAD
0x293 DUP1
0x294 DUP4
0x295 SUB
0x296 DUP2
0x297 DUP6
0x298 DUP9
0x299 DUP9
0x29a CALL
0x29b SWAP4
0x29c POP
0x29d POP
0x29e POP
0x29f POP
0x2a0 POP
---
0x22a: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x240: V114 = 0x8fc
0x243: V115 = 0x1
0x245: V116 = 0x0
0x248: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x25e: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x275: M[0x0] = V120
0x276: V121 = 0x20
0x278: V122 = ADD 0x20 0x0
0x27b: M[0x20] = 0x1
0x27c: V123 = 0x20
0x27e: V124 = ADD 0x20 0x20
0x27f: V125 = 0x0
0x281: V126 = SHA3 0x0 0x40
0x282: V127 = S[V126]
0x285: V128 = ISZERO V127
0x286: V129 = MUL V128 0x8fc
0x288: V130 = 0x40
0x28a: V131 = M[0x40]
0x28e: V132 = 0x0
0x290: V133 = 0x40
0x292: V134 = M[0x40]
0x295: V135 = SUB V131 V134
0x29a: V136 = CALL V129 V113 V127 V134 V135 V134 0x0
---
Entry stack: [V10, 0x16c, V71]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x16c, V71]

================================

Block 0x2a1
[0x2a1:0x2a1]
---
Predecessors: [0x1d2, 0x229]
Successors: [0x2a2]
---
0x2a1 JUMPDEST
---
0x2a1: JUMPDEST 
---
Entry stack: [V10, 0x16c, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x16c, V71]

================================

Block 0x2a2
[0x2a2:0x2a4]
---
Predecessors: [0x2a1]
Successors: [0x16c]
---
0x2a2 JUMPDEST
0x2a3 POP
0x2a4 JUMP
---
0x2a2: JUMPDEST 
0x2a4: JUMP 0x16c
---
Entry stack: [V10, 0x16c, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a5
[0x2a5:0x2ca]
---
Predecessors: [0x174]
Successors: [0x17b]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x0
0x2a8 PUSH1 0x0
0x2aa SWAP1
0x2ab SLOAD
0x2ac SWAP1
0x2ad PUSH2 0x100
0x2b0 EXP
0x2b1 SWAP1
0x2b2 DIV
0x2b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c8 AND
0x2c9 DUP2
0x2ca JUMP
---
0x2a5: JUMPDEST 
0x2a6: V137 = 0x0
0x2a8: V138 = 0x0
0x2ab: V139 = S[0x0]
0x2ad: V140 = 0x100
0x2b0: V141 = EXP 0x100 0x0
0x2b2: V142 = DIV V139 0x1
0x2b3: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x2ca: JUMP 0x17b
---
Entry stack: [V10, 0x17b]
Stack pops: 1
Stack additions: [S0, V144]
Exit stack: [V10, 0x17b, V144]

================================

Block 0x2cb
[0x2cb:0x321]
---
Predecessors: [0x1c3]
Successors: [0x322, 0x35c]
---
0x2cb JUMPDEST
0x2cc CALLER
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 PUSH1 0x0
0x2e5 PUSH1 0x0
0x2e7 SWAP1
0x2e8 SLOAD
0x2e9 SWAP1
0x2ea PUSH2 0x100
0x2ed EXP
0x2ee SWAP1
0x2ef DIV
0x2f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x305 AND
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b AND
0x31c EQ
0x31d ISZERO
0x31e PUSH2 0x35c
0x321 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V145 = CALLER
0x2cd: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x2e3: V148 = 0x0
0x2e5: V149 = 0x0
0x2e8: V150 = S[0x0]
0x2ea: V151 = 0x100
0x2ed: V152 = EXP 0x100 0x0
0x2ef: V153 = DIV V150 0x1
0x2f0: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x305: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x306: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x31c: V158 = EQ V157 V147
0x31d: V159 = ISZERO V158
0x31e: V160 = 0x35c
0x321: JUMPI 0x35c V159
---
Entry stack: [V10, 0x1ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ca]

================================

Block 0x322
[0x322:0x35b]
---
Predecessors: [0x2cb]
Successors: []
---
0x322 PUSH1 0x0
0x324 PUSH1 0x0
0x326 SWAP1
0x327 SLOAD
0x328 SWAP1
0x329 PUSH2 0x100
0x32c EXP
0x32d SWAP1
0x32e DIV
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 AND
0x345 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35a AND
0x35b SELFDESTRUCT
---
0x322: V161 = 0x0
0x324: V162 = 0x0
0x327: V163 = S[0x0]
0x329: V164 = 0x100
0x32c: V165 = EXP 0x100 0x0
0x32e: V166 = DIV V163 0x1
0x32f: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x345: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x35b: SELFDESTRUCT V170
---
Entry stack: [V10, 0x1ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ca]

================================

Block 0x35c
[0x35c:0x35c]
---
Predecessors: [0x2cb]
Successors: [0x35d]
---
0x35c JUMPDEST
---
0x35c: JUMPDEST 
---
Entry stack: [V10, 0x1ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ca]

================================

Block 0x35d
[0x35d:0x35e]
---
Predecessors: [0x35c]
Successors: [0x1ca]
---
0x35d JUMPDEST
0x35e JUMP
---
0x35d: JUMPDEST 
0x35e: JUMP 0x1ca
---
Entry stack: [V10, 0x1ca]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x35f
[0x35f:0x38c]
---
Predecessors: []
Successors: []
---
0x35f STOP
0x360 LOG1
0x361 PUSH6 0x627a7a723058
0x368 SHA3
0x369 MISSING 0x2e
0x36a SWAP1
0x36b MISSING 0x2a
0x36c DUP15
0x36d MISSING 0xe7
0x36e SWAP7
0x36f PUSH29 0x5f1a12ebf56224bb5ae63738aa24a3d4ca2c0f45e574e1d36d0029
---
0x35f: STOP 
0x360: LOG S0 S1 S2
0x361: V171 = 0x627a7a723058
0x368: V172 = SHA3 0x627a7a723058 S3
0x369: MISSING 0x2e
0x36b: MISSING 0x2a
0x36d: MISSING 0xe7
0x36f: V173 = 0x5f1a12ebf56224bb5ae63738aa24a3d4ca2c0f45e574e1d36d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V172, S1, S0, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0x5f1a12ebf56224bb5ae63738aa24a3d4ca2c0f45e574e1d36d0029, S7, S1, S2, S3, S4, S5, S6, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x4c2412a2
Entry block: 0x118
Exit block: 0x125
Body: 0x118, 0x11e, 0x125, 0x1cc

Function 1:
Public function signature: 0x8fb5d4bc
Entry block: 0x13b
Exit block: 0x16c
Body: 0x13b, 0x141, 0x16c, 0x1d2, 0x229, 0x2a1, 0x2a2

Function 2:
Public function signature: 0x9de2ee21
Entry block: 0x16e
Exit block: 0x17b
Body: 0x16e, 0x174, 0x17b, 0x2a5

Function 3:
Public function signature: 0xf58fef8e
Entry block: 0x1bd
Exit block: 0x1ca
Body: 0x1bd, 0x1c3, 0x1ca, 0x2cb, 0x322, 0x35c, 0x35d

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0x116
Body: 0x60, 0x64, 0x114, 0x116

