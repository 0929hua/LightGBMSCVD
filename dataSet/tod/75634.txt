Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa5]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x45f7850
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa5
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x45f7850
0x3b: V13 = EQ V11 0x45f7850
0x3c: V14 = 0xa5
0x3f: JUMPI 0xa5 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc9]
---
0x40 DUP1
0x41 PUSH4 0x144fa6d7
0x46 EQ
0x47 PUSH2 0xc9
0x4a JUMPI
---
0x41: V15 = 0x144fa6d7
0x46: V16 = EQ 0x144fa6d7 V11
0x47: V17 = 0xc9
0x4a: JUMPI 0xc9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xea]
---
0x4b DUP1
0x4c PUSH4 0x6459361d
0x51 EQ
0x52 PUSH2 0xea
0x55 JUMPI
---
0x4c: V18 = 0x6459361d
0x51: V19 = EQ 0x6459361d V11
0x52: V20 = 0xea
0x55: JUMPI 0xea V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x143]
---
0x56 DUP1
0x57 PUSH4 0x6b7cc44f
0x5c EQ
0x5d PUSH2 0x143
0x60 JUMPI
---
0x57: V21 = 0x6b7cc44f
0x5c: V22 = EQ 0x6b7cc44f V11
0x5d: V23 = 0x143
0x60: JUMPI 0x143 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1cd]
---
0x61 DUP1
0x62 PUSH4 0x7362377b
0x67 EQ
0x68 PUSH2 0x1cd
0x6b JUMPI
---
0x62: V24 = 0x7362377b
0x67: V25 = EQ 0x7362377b V11
0x68: V26 = 0x1cd
0x6b: JUMPI 0x1cd V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1e2]
---
0x6c DUP1
0x6d PUSH4 0x8c8e8fee
0x72 EQ
0x73 PUSH2 0x1e2
0x76 JUMPI
---
0x6d: V27 = 0x8c8e8fee
0x72: V28 = EQ 0x8c8e8fee V11
0x73: V29 = 0x1e2
0x76: JUMPI 0x1e2 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x213]
---
0x77 DUP1
0x78 PUSH4 0x8da5cb5b
0x7d EQ
0x7e PUSH2 0x213
0x81 JUMPI
---
0x78: V30 = 0x8da5cb5b
0x7d: V31 = EQ 0x8da5cb5b V11
0x7e: V32 = 0x213
0x81: JUMPI 0x213 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x228]
---
0x82 DUP1
0x83 PUSH4 0xbeb0a416
0x88 EQ
0x89 PUSH2 0x228
0x8c JUMPI
---
0x83: V33 = 0xbeb0a416
0x88: V34 = EQ 0xbeb0a416 V11
0x89: V35 = 0x228
0x8c: JUMPI 0x228 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x23d]
---
0x8d DUP1
0x8e PUSH4 0xf2fde38b
0x93 EQ
0x94 PUSH2 0x23d
0x97 JUMPI
---
0x8e: V36 = 0xf2fde38b
0x93: V37 = EQ 0xf2fde38b V11
0x94: V38 = 0x23d
0x97: JUMPI 0x23d V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x25e]
---
0x98 DUP1
0x99 PUSH4 0xf87f44b9
0x9e EQ
0x9f PUSH2 0x25e
0xa2 JUMPI
---
0x99: V39 = 0xf87f44b9
0x9e: V40 = EQ 0xf87f44b9 V11
0x9f: V41 = 0x25e
0xa2: JUMPI 0x25e V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x0, 0x98, 0x304, 0x364, 0x3bd, 0x49e, 0x531]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V11, 0xa3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, S1, S0]

================================

Block 0xa5
[0xa5:0xac]
---
Predecessors: [0xd]
Successors: [0xad, 0xb1]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 DUP1
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa5: JUMPDEST 
0xa6: V42 = CALLVALUE
0xa8: V43 = ISZERO V42
0xa9: V44 = 0xb1
0xac: JUMPI 0xb1 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa5]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V45 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xb1
[0xb1:0xc8]
---
Predecessors: [0xa5]
Successors: [0x2b7]
---
0xb1 JUMPDEST
0xb2 POP
0xb3 PUSH2 0xa3
0xb6 PUSH1 0x1
0xb8 PUSH1 0xa0
0xba PUSH1 0x2
0xbc EXP
0xbd SUB
0xbe PUSH1 0x4
0xc0 CALLDATALOAD
0xc1 AND
0xc2 PUSH1 0x24
0xc4 CALLDATALOAD
0xc5 PUSH2 0x2b7
0xc8 JUMP
---
0xb1: JUMPDEST 
0xb3: V46 = 0xa3
0xb6: V47 = 0x1
0xb8: V48 = 0xa0
0xba: V49 = 0x2
0xbc: V50 = EXP 0x2 0xa0
0xbd: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V52 = 0x4
0xc0: V53 = CALLDATALOAD 0x4
0xc1: V54 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V55 = 0x24
0xc4: V56 = CALLDATALOAD 0x24
0xc5: V57 = 0x2b7
0xc8: JUMP 0x2b7
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0xa3, V54, V56]
Exit stack: [V11, 0xa3, V54, V56]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x40]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V58 = CALLVALUE
0xcc: V59 = ISZERO V58
0xcd: V60 = 0xd5
0xd0: JUMPI 0xd5 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V61 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xd5
[0xd5:0xe9]
---
Predecessors: [0xc9]
Successors: [0x34d]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xa3
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 PUSH1 0x4
0xe4 CALLDATALOAD
0xe5 AND
0xe6 PUSH2 0x34d
0xe9 JUMP
---
0xd5: JUMPDEST 
0xd7: V62 = 0xa3
0xda: V63 = 0x1
0xdc: V64 = 0xa0
0xde: V65 = 0x2
0xe0: V66 = EXP 0x2 0xa0
0xe1: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V68 = 0x4
0xe4: V69 = CALLDATALOAD 0x4
0xe5: V70 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V71 = 0x34d
0xe9: JUMP 0x34d
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xa3, V70]
Exit stack: [V11, 0xa3, V70]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0x4b]
Successors: [0xf2, 0xf6]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec DUP1
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xea: JUMPDEST 
0xeb: V72 = CALLVALUE
0xed: V73 = ISZERO V72
0xee: V74 = 0xf6
0xf1: JUMPI 0xf6 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V72]
Exit stack: [V11, V72]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xea]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V75 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V11, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72]

================================

Block 0xf6
[0xf6:0x142]
---
Predecessors: [0xea]
Successors: [0x393]
---
0xf6 JUMPDEST
0xf7 POP
0xf8 PUSH1 0x40
0xfa DUP1
0xfb MLOAD
0xfc PUSH1 0x20
0xfe PUSH1 0x4
0x100 DUP1
0x101 CALLDATALOAD
0x102 DUP1
0x103 DUP3
0x104 ADD
0x105 CALLDATALOAD
0x106 PUSH1 0x1f
0x108 DUP2
0x109 ADD
0x10a DUP5
0x10b SWAP1
0x10c DIV
0x10d DUP5
0x10e MUL
0x10f DUP6
0x110 ADD
0x111 DUP5
0x112 ADD
0x113 SWAP1
0x114 SWAP6
0x115 MSTORE
0x116 DUP5
0x117 DUP5
0x118 MSTORE
0x119 PUSH2 0xa3
0x11c SWAP5
0x11d CALLDATASIZE
0x11e SWAP5
0x11f SWAP3
0x120 SWAP4
0x121 PUSH1 0x24
0x123 SWAP4
0x124 SWAP3
0x125 DUP5
0x126 ADD
0x127 SWAP2
0x128 SWAP1
0x129 DUP2
0x12a SWAP1
0x12b DUP5
0x12c ADD
0x12d DUP4
0x12e DUP3
0x12f DUP1
0x130 DUP3
0x131 DUP5
0x132 CALLDATACOPY
0x133 POP
0x134 SWAP5
0x135 SWAP8
0x136 POP
0x137 PUSH2 0x393
0x13a SWAP7
0x13b POP
0x13c POP
0x13d POP
0x13e POP
0x13f POP
0x140 POP
0x141 POP
0x142 JUMP
---
0xf6: JUMPDEST 
0xf8: V76 = 0x40
0xfb: V77 = M[0x40]
0xfc: V78 = 0x20
0xfe: V79 = 0x4
0x101: V80 = CALLDATALOAD 0x4
0x104: V81 = ADD 0x4 V80
0x105: V82 = CALLDATALOAD V81
0x106: V83 = 0x1f
0x109: V84 = ADD V82 0x1f
0x10c: V85 = DIV V84 0x20
0x10e: V86 = MUL 0x20 V85
0x110: V87 = ADD V77 V86
0x112: V88 = ADD 0x20 V87
0x115: M[0x40] = V88
0x118: M[V77] = V82
0x119: V89 = 0xa3
0x11d: V90 = CALLDATASIZE
0x121: V91 = 0x24
0x126: V92 = ADD 0x24 V80
0x12c: V93 = ADD V77 0x20
0x132: CALLDATACOPY V93 V92 V82
0x137: V94 = 0x393
0x142: JUMP 0x393
---
Entry stack: [V11, V72]
Stack pops: 1
Stack additions: [0xa3, V77]
Exit stack: [V11, 0xa3, V77]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x56]
Successors: [0x14b, 0x14f]
---
0x143 JUMPDEST
0x144 CALLVALUE
0x145 DUP1
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x143: JUMPDEST 
0x144: V95 = CALLVALUE
0x146: V96 = ISZERO V95
0x147: V97 = 0x14f
0x14a: JUMPI 0x14f V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V11, V95]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x143]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V98 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V11, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V95]

================================

Block 0x14f
[0x14f:0x157]
---
Predecessors: [0x143]
Successors: [0x3c1]
---
0x14f JUMPDEST
0x150 POP
0x151 PUSH2 0x158
0x154 PUSH2 0x3c1
0x157 JUMP
---
0x14f: JUMPDEST 
0x151: V99 = 0x158
0x154: V100 = 0x3c1
0x157: JUMP 0x3c1
---
Entry stack: [V11, V95]
Stack pops: 1
Stack additions: [0x158]
Exit stack: [V11, 0x158]

================================

Block 0x158
[0x158:0x179]
---
Predecessors: [0x444]
Successors: [0x17a]
---
0x158 JUMPDEST
0x159 PUSH1 0x40
0x15b DUP1
0x15c MLOAD
0x15d PUSH1 0x20
0x15f DUP1
0x160 DUP3
0x161 MSTORE
0x162 DUP4
0x163 MLOAD
0x164 DUP2
0x165 DUP4
0x166 ADD
0x167 MSTORE
0x168 DUP4
0x169 MLOAD
0x16a SWAP2
0x16b SWAP3
0x16c DUP4
0x16d SWAP3
0x16e SWAP1
0x16f DUP4
0x170 ADD
0x171 SWAP2
0x172 DUP6
0x173 ADD
0x174 SWAP1
0x175 DUP1
0x176 DUP4
0x177 DUP4
0x178 PUSH1 0x0
---
0x158: JUMPDEST 
0x159: V101 = 0x40
0x15c: V102 = M[0x40]
0x15d: V103 = 0x20
0x161: M[V102] = 0x20
0x163: V104 = M[S0]
0x166: V105 = ADD V102 0x20
0x167: M[V105] = V104
0x169: V106 = M[S0]
0x170: V107 = ADD V102 0x40
0x173: V108 = ADD S0 0x20
0x178: V109 = 0x0
---
Entry stack: [V11, 0x158, S0]
Stack pops: 1
Stack additions: [S0, V102, V102, V107, V108, V106, V106, V107, V108, 0x0]
Exit stack: [V11, 0x158, S0, V102, V102, V107, V108, V106, V106, V107, V108, 0x0]

================================

Block 0x17a
[0x17a:0x182]
---
Predecessors: [0x158, 0x183]
Successors: [0x183, 0x192]
---
0x17a JUMPDEST
0x17b DUP4
0x17c DUP2
0x17d LT
0x17e ISZERO
0x17f PUSH2 0x192
0x182 JUMPI
---
0x17a: JUMPDEST 
0x17d: V110 = LT S0 V106
0x17e: V111 = ISZERO V110
0x17f: V112 = 0x192
0x182: JUMPI 0x192 V111
---
Entry stack: [V11, 0x158, S9, V102, V102, V107, V108, V106, V106, V107, V108, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x158, S9, V102, V102, V107, V108, V106, V106, V107, V108, S0]

================================

Block 0x183
[0x183:0x191]
---
Predecessors: [0x17a]
Successors: [0x17a]
---
0x183 DUP2
0x184 DUP2
0x185 ADD
0x186 MLOAD
0x187 DUP4
0x188 DUP3
0x189 ADD
0x18a MSTORE
0x18b PUSH1 0x20
0x18d ADD
0x18e PUSH2 0x17a
0x191 JUMP
---
0x185: V113 = ADD S0 V108
0x186: V114 = M[V113]
0x189: V115 = ADD S0 V107
0x18a: M[V115] = V114
0x18b: V116 = 0x20
0x18d: V117 = ADD 0x20 S0
0x18e: V118 = 0x17a
0x191: JUMP 0x17a
---
Entry stack: [V11, 0x158, S9, V102, V102, V107, V108, V106, V106, V107, V108, S0]
Stack pops: 3
Stack additions: [S2, S1, V117]
Exit stack: [V11, 0x158, S9, V102, V102, V107, V108, V106, V106, V107, V108, V117]

================================

Block 0x192
[0x192:0x1a5]
---
Predecessors: [0x17a]
Successors: [0x1a6, 0x1bf]
---
0x192 JUMPDEST
0x193 POP
0x194 POP
0x195 POP
0x196 POP
0x197 SWAP1
0x198 POP
0x199 SWAP1
0x19a DUP2
0x19b ADD
0x19c SWAP1
0x19d PUSH1 0x1f
0x19f AND
0x1a0 DUP1
0x1a1 ISZERO
0x1a2 PUSH2 0x1bf
0x1a5 JUMPI
---
0x192: JUMPDEST 
0x19b: V119 = ADD V106 V107
0x19d: V120 = 0x1f
0x19f: V121 = AND 0x1f V106
0x1a1: V122 = ISZERO V121
0x1a2: V123 = 0x1bf
0x1a5: JUMPI 0x1bf V122
---
Entry stack: [V11, 0x158, S9, V102, V102, V107, V108, V106, V106, V107, V108, S0]
Stack pops: 7
Stack additions: [V119, V121]
Exit stack: [V11, 0x158, S9, V102, V102, V119, V121]

================================

Block 0x1a6
[0x1a6:0x1be]
---
Predecessors: [0x192]
Successors: [0x1bf]
---
0x1a6 DUP1
0x1a7 DUP3
0x1a8 SUB
0x1a9 DUP1
0x1aa MLOAD
0x1ab PUSH1 0x1
0x1ad DUP4
0x1ae PUSH1 0x20
0x1b0 SUB
0x1b1 PUSH2 0x100
0x1b4 EXP
0x1b5 SUB
0x1b6 NOT
0x1b7 AND
0x1b8 DUP2
0x1b9 MSTORE
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP2
0x1be POP
---
0x1a8: V124 = SUB V119 V121
0x1aa: V125 = M[V124]
0x1ab: V126 = 0x1
0x1ae: V127 = 0x20
0x1b0: V128 = SUB 0x20 V121
0x1b1: V129 = 0x100
0x1b4: V130 = EXP 0x100 V128
0x1b5: V131 = SUB V130 0x1
0x1b6: V132 = NOT V131
0x1b7: V133 = AND V132 V125
0x1b9: M[V124] = V133
0x1ba: V134 = 0x20
0x1bc: V135 = ADD 0x20 V124
---
Entry stack: [V11, 0x158, S4, V102, V102, V119, V121]
Stack pops: 2
Stack additions: [V135, S0]
Exit stack: [V11, 0x158, S4, V102, V102, V135, V121]

================================

Block 0x1bf
[0x1bf:0x1cc]
---
Predecessors: [0x192, 0x1a6]
Successors: []
---
0x1bf JUMPDEST
0x1c0 POP
0x1c1 SWAP3
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc RETURN
---
0x1bf: JUMPDEST 
0x1c5: V136 = 0x40
0x1c7: V137 = M[0x40]
0x1ca: V138 = SUB S1 V137
0x1cc: RETURN V137 V138
---
Entry stack: [V11, 0x158, S4, V102, V102, S1, V121]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x158]

================================

Block 0x1cd
[0x1cd:0x1d4]
---
Predecessors: [0x61]
Successors: [0x1d5, 0x1d9]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf DUP1
0x1d0 ISZERO
0x1d1 PUSH2 0x1d9
0x1d4 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V139 = CALLVALUE
0x1d0: V140 = ISZERO V139
0x1d1: V141 = 0x1d9
0x1d4: JUMPI 0x1d9 V140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V139]
Exit stack: [V11, V139]

================================

Block 0x1d5
[0x1d5:0x1d8]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 REVERT
---
0x1d5: V142 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V11, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V139]

================================

Block 0x1d9
[0x1d9:0x1e1]
---
Predecessors: [0x1cd]
Successors: [0x44c]
---
0x1d9 JUMPDEST
0x1da POP
0x1db PUSH2 0xa3
0x1de PUSH2 0x44c
0x1e1 JUMP
---
0x1d9: JUMPDEST 
0x1db: V143 = 0xa3
0x1de: V144 = 0x44c
0x1e1: JUMP 0x44c
---
Entry stack: [V11, V139]
Stack pops: 1
Stack additions: [0xa3]
Exit stack: [V11, 0xa3]

================================

Block 0x1e2
[0x1e2:0x1e9]
---
Predecessors: [0x6c]
Successors: [0x1ea, 0x1ee]
---
0x1e2 JUMPDEST
0x1e3 CALLVALUE
0x1e4 DUP1
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V145 = CALLVALUE
0x1e5: V146 = ISZERO V145
0x1e6: V147 = 0x1ee
0x1e9: JUMPI 0x1ee V146
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V145]
Exit stack: [V11, V145]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1e2]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V148 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V11, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V145]

================================

Block 0x1ee
[0x1ee:0x1f6]
---
Predecessors: [0x1e2]
Successors: [0x4a1]
---
0x1ee JUMPDEST
0x1ef POP
0x1f0 PUSH2 0x1f7
0x1f3 PUSH2 0x4a1
0x1f6 JUMP
---
0x1ee: JUMPDEST 
0x1f0: V149 = 0x1f7
0x1f3: V150 = 0x4a1
0x1f6: JUMP 0x4a1
---
Entry stack: [V11, V145]
Stack pops: 1
Stack additions: [0x1f7]
Exit stack: [V11, 0x1f7]

================================

Block 0x1f7
[0x1f7:0x212]
---
Predecessors: [0x4a1, 0x4b0]
Successors: []
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa DUP1
0x1fb MLOAD
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 SWAP1
0x205 SWAP3
0x206 AND
0x207 DUP3
0x208 MSTORE
0x209 MLOAD
0x20a SWAP1
0x20b DUP2
0x20c SWAP1
0x20d SUB
0x20e PUSH1 0x20
0x210 ADD
0x211 SWAP1
0x212 RETURN
---
0x1f7: JUMPDEST 
0x1f8: V151 = 0x40
0x1fb: V152 = M[0x40]
0x1fc: V153 = 0x1
0x1fe: V154 = 0xa0
0x200: V155 = 0x2
0x202: V156 = EXP 0x2 0xa0
0x203: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V158 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x208: M[V152] = V158
0x209: V159 = M[0x40]
0x20d: V160 = SUB V152 V159
0x20e: V161 = 0x20
0x210: V162 = ADD 0x20 V160
0x212: RETURN V159 V162
---
Entry stack: [V11, 0x1f7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1f7]

================================

Block 0x213
[0x213:0x21a]
---
Predecessors: [0x77]
Successors: [0x21b, 0x21f]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 DUP1
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x213: JUMPDEST 
0x214: V163 = CALLVALUE
0x216: V164 = ISZERO V163
0x217: V165 = 0x21f
0x21a: JUMPI 0x21f V164
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V163]
Exit stack: [V11, V163]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x213]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V166 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V11, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V163]

================================

Block 0x21f
[0x21f:0x227]
---
Predecessors: [0x213]
Successors: [0x4b0]
---
0x21f JUMPDEST
0x220 POP
0x221 PUSH2 0x1f7
0x224 PUSH2 0x4b0
0x227 JUMP
---
0x21f: JUMPDEST 
0x221: V167 = 0x1f7
0x224: V168 = 0x4b0
0x227: JUMP 0x4b0
---
Entry stack: [V11, V163]
Stack pops: 1
Stack additions: [0x1f7]
Exit stack: [V11, 0x1f7]

================================

Block 0x228
[0x228:0x22f]
---
Predecessors: [0x82]
Successors: [0x230, 0x234]
---
0x228 JUMPDEST
0x229 CALLVALUE
0x22a DUP1
0x22b ISZERO
0x22c PUSH2 0x234
0x22f JUMPI
---
0x228: JUMPDEST 
0x229: V169 = CALLVALUE
0x22b: V170 = ISZERO V169
0x22c: V171 = 0x234
0x22f: JUMPI 0x234 V170
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V169]
Exit stack: [V11, V169]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x228]
Successors: []
---
0x230 PUSH1 0x0
0x232 DUP1
0x233 REVERT
---
0x230: V172 = 0x0
0x233: REVERT 0x0 0x0
---
Entry stack: [V11, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V169]

================================

Block 0x234
[0x234:0x23c]
---
Predecessors: [0x228]
Successors: [0x4bf]
---
0x234 JUMPDEST
0x235 POP
0x236 PUSH2 0x158
0x239 PUSH2 0x4bf
0x23c JUMP
---
0x234: JUMPDEST 
0x236: V173 = 0x158
0x239: V174 = 0x4bf
0x23c: JUMP 0x4bf
---
Entry stack: [V11, V169]
Stack pops: 1
Stack additions: [0x158]
Exit stack: [V11, 0x158]

================================

Block 0x23d
[0x23d:0x244]
---
Predecessors: [0x8d]
Successors: [0x245, 0x249]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f DUP1
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x23d: JUMPDEST 
0x23e: V175 = CALLVALUE
0x240: V176 = ISZERO V175
0x241: V177 = 0x249
0x244: JUMPI 0x249 V176
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V175]
Exit stack: [V11, V175]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x23d]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V178 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V11, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V175]

================================

Block 0x249
[0x249:0x25d]
---
Predecessors: [0x23d]
Successors: [0x51a]
---
0x249 JUMPDEST
0x24a POP
0x24b PUSH2 0xa3
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 PUSH1 0x4
0x258 CALLDATALOAD
0x259 AND
0x25a PUSH2 0x51a
0x25d JUMP
---
0x249: JUMPDEST 
0x24b: V179 = 0xa3
0x24e: V180 = 0x1
0x250: V181 = 0xa0
0x252: V182 = 0x2
0x254: V183 = EXP 0x2 0xa0
0x255: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V185 = 0x4
0x258: V186 = CALLDATALOAD 0x4
0x259: V187 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V188 = 0x51a
0x25d: JUMP 0x51a
---
Entry stack: [V11, V175]
Stack pops: 1
Stack additions: [0xa3, V187]
Exit stack: [V11, 0xa3, V187]

================================

Block 0x25e
[0x25e:0x265]
---
Predecessors: [0x98]
Successors: [0x266, 0x26a]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 DUP1
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x25e: JUMPDEST 
0x25f: V189 = CALLVALUE
0x261: V190 = ISZERO V189
0x262: V191 = 0x26a
0x265: JUMPI 0x26a V190
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V189]
Exit stack: [V11, V189]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x25e]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V192 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V11, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V189]

================================

Block 0x26a
[0x26a:0x2b6]
---
Predecessors: [0x25e]
Successors: [0x560]
---
0x26a JUMPDEST
0x26b POP
0x26c PUSH1 0x40
0x26e DUP1
0x26f MLOAD
0x270 PUSH1 0x20
0x272 PUSH1 0x4
0x274 DUP1
0x275 CALLDATALOAD
0x276 DUP1
0x277 DUP3
0x278 ADD
0x279 CALLDATALOAD
0x27a PUSH1 0x1f
0x27c DUP2
0x27d ADD
0x27e DUP5
0x27f SWAP1
0x280 DIV
0x281 DUP5
0x282 MUL
0x283 DUP6
0x284 ADD
0x285 DUP5
0x286 ADD
0x287 SWAP1
0x288 SWAP6
0x289 MSTORE
0x28a DUP5
0x28b DUP5
0x28c MSTORE
0x28d PUSH2 0xa3
0x290 SWAP5
0x291 CALLDATASIZE
0x292 SWAP5
0x293 SWAP3
0x294 SWAP4
0x295 PUSH1 0x24
0x297 SWAP4
0x298 SWAP3
0x299 DUP5
0x29a ADD
0x29b SWAP2
0x29c SWAP1
0x29d DUP2
0x29e SWAP1
0x29f DUP5
0x2a0 ADD
0x2a1 DUP4
0x2a2 DUP3
0x2a3 DUP1
0x2a4 DUP3
0x2a5 DUP5
0x2a6 CALLDATACOPY
0x2a7 POP
0x2a8 SWAP5
0x2a9 SWAP8
0x2aa POP
0x2ab PUSH2 0x560
0x2ae SWAP7
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 JUMP
---
0x26a: JUMPDEST 
0x26c: V193 = 0x40
0x26f: V194 = M[0x40]
0x270: V195 = 0x20
0x272: V196 = 0x4
0x275: V197 = CALLDATALOAD 0x4
0x278: V198 = ADD 0x4 V197
0x279: V199 = CALLDATALOAD V198
0x27a: V200 = 0x1f
0x27d: V201 = ADD V199 0x1f
0x280: V202 = DIV V201 0x20
0x282: V203 = MUL 0x20 V202
0x284: V204 = ADD V194 V203
0x286: V205 = ADD 0x20 V204
0x289: M[0x40] = V205
0x28c: M[V194] = V199
0x28d: V206 = 0xa3
0x291: V207 = CALLDATASIZE
0x295: V208 = 0x24
0x29a: V209 = ADD 0x24 V197
0x2a0: V210 = ADD V194 0x20
0x2a6: CALLDATACOPY V210 V209 V199
0x2ab: V211 = 0x560
0x2b6: JUMP 0x560
---
Entry stack: [V11, V189]
Stack pops: 1
Stack additions: [0xa3, V194]
Exit stack: [V11, 0xa3, V194]

================================

Block 0x2b7
[0x2b7:0x2c9]
---
Predecessors: [0xb1]
Successors: [0x2ca, 0x2ce]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x0
0x2ba SLOAD
0x2bb PUSH1 0x1
0x2bd PUSH1 0xa0
0x2bf PUSH1 0x2
0x2c1 EXP
0x2c2 SUB
0x2c3 AND
0x2c4 CALLER
0x2c5 EQ
0x2c6 PUSH2 0x2ce
0x2c9 JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V212 = 0x0
0x2ba: V213 = S[0x0]
0x2bb: V214 = 0x1
0x2bd: V215 = 0xa0
0x2bf: V216 = 0x2
0x2c1: V217 = EXP 0x2 0xa0
0x2c2: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c3: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x2c4: V220 = CALLER
0x2c5: V221 = EQ V220 V219
0x2c6: V222 = 0x2ce
0x2c9: JUMPI 0x2ce V221
---
Entry stack: [V11, 0xa3, V54, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V54, V56]

================================

Block 0x2ca
[0x2ca:0x2cd]
---
Predecessors: [0x2b7]
Successors: []
---
0x2ca PUSH1 0x0
0x2cc DUP1
0x2cd REVERT
---
0x2ca: V223 = 0x0
0x2cd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V54, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V54, V56]

================================

Block 0x2ce
[0x2ce:0x2fa]
---
Predecessors: [0x2b7]
Successors: [0x2fb, 0x304]
---
0x2ce JUMPDEST
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 PUSH1 0x1
0x2d4 PUSH1 0xa0
0x2d6 PUSH1 0x2
0x2d8 EXP
0x2d9 SUB
0x2da DUP4
0x2db AND
0x2dc SWAP1
0x2dd DUP3
0x2de ISZERO
0x2df PUSH2 0x8fc
0x2e2 MUL
0x2e3 SWAP1
0x2e4 DUP4
0x2e5 SWAP1
0x2e6 PUSH1 0x0
0x2e8 DUP2
0x2e9 DUP2
0x2ea DUP2
0x2eb DUP6
0x2ec DUP9
0x2ed DUP9
0x2ee CALL
0x2ef SWAP4
0x2f0 POP
0x2f1 POP
0x2f2 POP
0x2f3 POP
0x2f4 ISZERO
0x2f5 DUP1
0x2f6 ISZERO
0x2f7 PUSH2 0x304
0x2fa JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V224 = 0x40
0x2d1: V225 = M[0x40]
0x2d2: V226 = 0x1
0x2d4: V227 = 0xa0
0x2d6: V228 = 0x2
0x2d8: V229 = EXP 0x2 0xa0
0x2d9: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2db: V231 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V232 = ISZERO V56
0x2df: V233 = 0x8fc
0x2e2: V234 = MUL 0x8fc V232
0x2e6: V235 = 0x0
0x2ee: V236 = CALL V234 V231 V56 V225 0x0 V225 0x0
0x2f4: V237 = ISZERO V236
0x2f6: V238 = ISZERO V237
0x2f7: V239 = 0x304
0x2fa: JUMPI 0x304 V238
---
Entry stack: [V11, 0xa3, V54, V56]
Stack pops: 2
Stack additions: [S1, S0, V237]
Exit stack: [V11, 0xa3, V54, V56, V237]

================================

Block 0x2fb
[0x2fb:0x303]
---
Predecessors: [0x2ce]
Successors: []
---
0x2fb RETURNDATASIZE
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff RETURNDATACOPY
0x300 RETURNDATASIZE
0x301 PUSH1 0x0
0x303 REVERT
---
0x2fb: V240 = RETURNDATASIZE
0x2fc: V241 = 0x0
0x2ff: RETURNDATACOPY 0x0 0x0 V240
0x300: V242 = RETURNDATASIZE
0x301: V243 = 0x0
0x303: REVERT 0x0 V242
---
Entry stack: [V11, 0xa3, V54, V56, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V54, V56, V237]

================================

Block 0x304
[0x304:0x34c]
---
Predecessors: [0x2ce]
Successors: [0xa3]
---
0x304 JUMPDEST
0x305 POP
0x306 PUSH1 0x40
0x308 DUP1
0x309 MLOAD
0x30a PUSH1 0x1
0x30c PUSH1 0xa0
0x30e PUSH1 0x2
0x310 EXP
0x311 SUB
0x312 DUP5
0x313 AND
0x314 DUP2
0x315 MSTORE
0x316 PUSH1 0x20
0x318 DUP2
0x319 ADD
0x31a DUP4
0x31b SWAP1
0x31c MSTORE
0x31d DUP2
0x31e MLOAD
0x31f PUSH32 0x2e3c6e936a26a74d3954d12bf453beeb5bd72f10f63907eade84e468cdf5a105
0x340 SWAP3
0x341 SWAP2
0x342 DUP2
0x343 SWAP1
0x344 SUB
0x345 SWAP1
0x346 SWAP2
0x347 ADD
0x348 SWAP1
0x349 LOG1
0x34a POP
0x34b POP
0x34c JUMP
---
0x304: JUMPDEST 
0x306: V244 = 0x40
0x309: V245 = M[0x40]
0x30a: V246 = 0x1
0x30c: V247 = 0xa0
0x30e: V248 = 0x2
0x310: V249 = EXP 0x2 0xa0
0x311: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x313: V251 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0x315: M[V245] = V251
0x316: V252 = 0x20
0x319: V253 = ADD V245 0x20
0x31c: M[V253] = V56
0x31e: V254 = M[0x40]
0x31f: V255 = 0x2e3c6e936a26a74d3954d12bf453beeb5bd72f10f63907eade84e468cdf5a105
0x344: V256 = SUB V245 V254
0x347: V257 = ADD 0x40 V256
0x349: LOG V254 V257 0x2e3c6e936a26a74d3954d12bf453beeb5bd72f10f63907eade84e468cdf5a105
0x34c: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V54, V56, V237]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x34d
[0x34d:0x35f]
---
Predecessors: [0xd5]
Successors: [0x360, 0x364]
---
0x34d JUMPDEST
0x34e PUSH1 0x0
0x350 SLOAD
0x351 PUSH1 0x1
0x353 PUSH1 0xa0
0x355 PUSH1 0x2
0x357 EXP
0x358 SUB
0x359 AND
0x35a CALLER
0x35b EQ
0x35c PUSH2 0x364
0x35f JUMPI
---
0x34d: JUMPDEST 
0x34e: V258 = 0x0
0x350: V259 = S[0x0]
0x351: V260 = 0x1
0x353: V261 = 0xa0
0x355: V262 = 0x2
0x357: V263 = EXP 0x2 0xa0
0x358: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x35a: V266 = CALLER
0x35b: V267 = EQ V266 V265
0x35c: V268 = 0x364
0x35f: JUMPI 0x364 V267
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V70]

================================

Block 0x360
[0x360:0x363]
---
Predecessors: [0x34d]
Successors: []
---
0x360 PUSH1 0x0
0x362 DUP1
0x363 REVERT
---
0x360: V269 = 0x0
0x363: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V70]

================================

Block 0x364
[0x364:0x392]
---
Predecessors: [0x34d]
Successors: [0xa3]
---
0x364 JUMPDEST
0x365 PUSH1 0x1
0x367 DUP1
0x368 SLOAD
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e NOT
0x37f AND
0x380 PUSH1 0x1
0x382 PUSH1 0xa0
0x384 PUSH1 0x2
0x386 EXP
0x387 SUB
0x388 SWAP3
0x389 SWAP1
0x38a SWAP3
0x38b AND
0x38c SWAP2
0x38d SWAP1
0x38e SWAP2
0x38f OR
0x390 SWAP1
0x391 SSTORE
0x392 JUMP
---
0x364: JUMPDEST 
0x365: V270 = 0x1
0x368: V271 = S[0x1]
0x369: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V273 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V274 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V271
0x380: V275 = 0x1
0x382: V276 = 0xa0
0x384: V277 = 0x2
0x386: V278 = EXP 0x2 0xa0
0x387: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38b: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x38f: V281 = OR V280 V274
0x391: S[0x1] = V281
0x392: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x393
[0x393:0x3a5]
---
Predecessors: [0xf6]
Successors: [0x3a6, 0x3aa]
---
0x393 JUMPDEST
0x394 PUSH1 0x0
0x396 SLOAD
0x397 PUSH1 0x1
0x399 PUSH1 0xa0
0x39b PUSH1 0x2
0x39d EXP
0x39e SUB
0x39f AND
0x3a0 CALLER
0x3a1 EQ
0x3a2 PUSH2 0x3aa
0x3a5 JUMPI
---
0x393: JUMPDEST 
0x394: V282 = 0x0
0x396: V283 = S[0x0]
0x397: V284 = 0x1
0x399: V285 = 0xa0
0x39b: V286 = 0x2
0x39d: V287 = EXP 0x2 0xa0
0x39e: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39f: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x3a0: V290 = CALLER
0x3a1: V291 = EQ V290 V289
0x3a2: V292 = 0x3aa
0x3a5: JUMPI 0x3aa V291
---
Entry stack: [V11, 0xa3, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V77]

================================

Block 0x3a6
[0x3a6:0x3a9]
---
Predecessors: [0x393]
Successors: []
---
0x3a6 PUSH1 0x0
0x3a8 DUP1
0x3a9 REVERT
---
0x3a6: V293 = 0x0
0x3a9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V77]

================================

Block 0x3aa
[0x3aa:0x3bc]
---
Predecessors: [0x393]
Successors: [0x586]
---
0x3aa JUMPDEST
0x3ab DUP1
0x3ac MLOAD
0x3ad PUSH2 0x3bd
0x3b0 SWAP1
0x3b1 PUSH1 0x2
0x3b3 SWAP1
0x3b4 PUSH1 0x20
0x3b6 DUP5
0x3b7 ADD
0x3b8 SWAP1
0x3b9 PUSH2 0x586
0x3bc JUMP
---
0x3aa: JUMPDEST 
0x3ac: V294 = M[V77]
0x3ad: V295 = 0x3bd
0x3b1: V296 = 0x2
0x3b4: V297 = 0x20
0x3b7: V298 = ADD V77 0x20
0x3b9: V299 = 0x586
0x3bc: JUMP 0x586
---
Entry stack: [V11, 0xa3, V77]
Stack pops: 1
Stack additions: [S0, 0x3bd, 0x2, V298, V294]
Exit stack: [V11, 0xa3, V77, 0x3bd, 0x2, V298, V294]

================================

Block 0x3bd
[0x3bd:0x3c0]
---
Predecessors: [0x600]
Successors: [0xa3]
---
0x3bd JUMPDEST
0x3be POP
0x3bf POP
0x3c0 JUMP
---
0x3bd: JUMPDEST 
0x3c0: JUMP {0x2, 0x3, 0xa3}
---
Entry stack: [V11, 0xa3, S4, S3, {0x2, 0x3, 0xa3}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xa3, S4, S3]

================================

Block 0x3c1
[0x3c1:0x3fd]
---
Predecessors: [0x14f]
Successors: [0x3fe, 0x444]
---
0x3c1 JUMPDEST
0x3c2 PUSH1 0x2
0x3c4 DUP1
0x3c5 SLOAD
0x3c6 PUSH1 0x40
0x3c8 DUP1
0x3c9 MLOAD
0x3ca PUSH1 0x20
0x3cc PUSH1 0x1
0x3ce DUP5
0x3cf AND
0x3d0 ISZERO
0x3d1 PUSH2 0x100
0x3d4 MUL
0x3d5 PUSH1 0x0
0x3d7 NOT
0x3d8 ADD
0x3d9 SWAP1
0x3da SWAP4
0x3db AND
0x3dc DUP5
0x3dd SWAP1
0x3de DIV
0x3df PUSH1 0x1f
0x3e1 DUP2
0x3e2 ADD
0x3e3 DUP5
0x3e4 SWAP1
0x3e5 DIV
0x3e6 DUP5
0x3e7 MUL
0x3e8 DUP3
0x3e9 ADD
0x3ea DUP5
0x3eb ADD
0x3ec SWAP1
0x3ed SWAP3
0x3ee MSTORE
0x3ef DUP2
0x3f0 DUP2
0x3f1 MSTORE
0x3f2 SWAP3
0x3f3 SWAP2
0x3f4 DUP4
0x3f5 ADD
0x3f6 DUP3
0x3f7 DUP3
0x3f8 DUP1
0x3f9 ISZERO
0x3fa PUSH2 0x444
0x3fd JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V300 = 0x2
0x3c5: V301 = S[0x2]
0x3c6: V302 = 0x40
0x3c9: V303 = M[0x40]
0x3ca: V304 = 0x20
0x3cc: V305 = 0x1
0x3cf: V306 = AND V301 0x1
0x3d0: V307 = ISZERO V306
0x3d1: V308 = 0x100
0x3d4: V309 = MUL 0x100 V307
0x3d5: V310 = 0x0
0x3d7: V311 = NOT 0x0
0x3d8: V312 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V309
0x3db: V313 = AND V301 V312
0x3de: V314 = DIV V313 0x2
0x3df: V315 = 0x1f
0x3e2: V316 = ADD V314 0x1f
0x3e5: V317 = DIV V316 0x20
0x3e7: V318 = MUL 0x20 V317
0x3e9: V319 = ADD V303 V318
0x3eb: V320 = ADD 0x20 V319
0x3ee: M[0x40] = V320
0x3f1: M[V303] = V314
0x3f5: V321 = ADD V303 0x20
0x3f9: V322 = ISZERO V314
0x3fa: V323 = 0x444
0x3fd: JUMPI 0x444 V322
---
Entry stack: [V11, 0x158]
Stack pops: 0
Stack additions: [V303, 0x2, V314, V321, 0x2, V314]
Exit stack: [V11, 0x158, V303, 0x2, V314, V321, 0x2, V314]

================================

Block 0x3fe
[0x3fe:0x405]
---
Predecessors: [0x3c1]
Successors: [0x406, 0x419]
---
0x3fe DUP1
0x3ff PUSH1 0x1f
0x401 LT
0x402 PUSH2 0x419
0x405 JUMPI
---
0x3ff: V324 = 0x1f
0x401: V325 = LT 0x1f V314
0x402: V326 = 0x419
0x405: JUMPI 0x419 V325
---
Entry stack: [V11, 0x158, V303, 0x2, V314, V321, 0x2, V314]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x158, V303, 0x2, V314, V321, 0x2, V314]

================================

Block 0x406
[0x406:0x418]
---
Predecessors: [0x3fe]
Successors: [0x444]
---
0x406 PUSH2 0x100
0x409 DUP1
0x40a DUP4
0x40b SLOAD
0x40c DIV
0x40d MUL
0x40e DUP4
0x40f MSTORE
0x410 SWAP2
0x411 PUSH1 0x20
0x413 ADD
0x414 SWAP2
0x415 PUSH2 0x444
0x418 JUMP
---
0x406: V327 = 0x100
0x40b: V328 = S[0x2]
0x40c: V329 = DIV V328 0x100
0x40d: V330 = MUL V329 0x100
0x40f: M[V321] = V330
0x411: V331 = 0x20
0x413: V332 = ADD 0x20 V321
0x415: V333 = 0x444
0x418: JUMP 0x444
---
Entry stack: [V11, 0x158, V303, 0x2, V314, V321, 0x2, V314]
Stack pops: 3
Stack additions: [V332, S1, S0]
Exit stack: [V11, 0x158, V303, 0x2, V314, V332, 0x2, V314]

================================

Block 0x419
[0x419:0x426]
---
Predecessors: [0x3fe, 0x4ff]
Successors: [0x427]
---
0x419 JUMPDEST
0x41a DUP3
0x41b ADD
0x41c SWAP2
0x41d SWAP1
0x41e PUSH1 0x0
0x420 MSTORE
0x421 PUSH1 0x20
0x423 PUSH1 0x0
0x425 SHA3
0x426 SWAP1
---
0x419: JUMPDEST 
0x41b: V334 = ADD S2 S0
0x41e: V335 = 0x0
0x420: M[0x0] = {0x2, 0x3}
0x421: V336 = 0x20
0x423: V337 = 0x0
0x425: V338 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x158, S5, {0x2, 0x3}, S3, S2, {0x2, 0x3}, S0]
Stack pops: 3
Stack additions: [V334, V338, S2]
Exit stack: [V11, 0x158, S5, {0x2, 0x3}, S3, V334, V338, S2]

================================

Block 0x427
[0x427:0x43a]
---
Predecessors: [0x419, 0x427]
Successors: [0x427, 0x43b]
---
0x427 JUMPDEST
0x428 DUP2
0x429 SLOAD
0x42a DUP2
0x42b MSTORE
0x42c SWAP1
0x42d PUSH1 0x1
0x42f ADD
0x430 SWAP1
0x431 PUSH1 0x20
0x433 ADD
0x434 DUP1
0x435 DUP4
0x436 GT
0x437 PUSH2 0x427
0x43a JUMPI
---
0x427: JUMPDEST 
0x429: V339 = S[S1]
0x42b: M[S0] = V339
0x42d: V340 = 0x1
0x42f: V341 = ADD 0x1 S1
0x431: V342 = 0x20
0x433: V343 = ADD 0x20 S0
0x436: V344 = GT V334 V343
0x437: V345 = 0x427
0x43a: JUMPI 0x427 V344
---
Entry stack: [V11, 0x158, S5, {0x2, 0x3}, S3, V334, S1, S0]
Stack pops: 3
Stack additions: [S2, V341, V343]
Exit stack: [V11, 0x158, S5, {0x2, 0x3}, S3, V334, V341, V343]

================================

Block 0x43b
[0x43b:0x443]
---
Predecessors: [0x427]
Successors: [0x444]
---
0x43b DUP3
0x43c SWAP1
0x43d SUB
0x43e PUSH1 0x1f
0x440 AND
0x441 DUP3
0x442 ADD
0x443 SWAP2
---
0x43d: V346 = SUB V343 V334
0x43e: V347 = 0x1f
0x440: V348 = AND 0x1f V346
0x442: V349 = ADD V334 V348
---
Entry stack: [V11, 0x158, S5, {0x2, 0x3}, S3, V334, V341, V343]
Stack pops: 3
Stack additions: [V349, S1, S2]
Exit stack: [V11, 0x158, S5, {0x2, 0x3}, S3, V349, V341, V334]

================================

Block 0x444
[0x444:0x44b]
---
Predecessors: [0x3c1, 0x406, 0x43b, 0x4bf, 0x507]
Successors: [0x158]
---
0x444 JUMPDEST
0x445 POP
0x446 POP
0x447 POP
0x448 POP
0x449 POP
0x44a DUP2
0x44b JUMP
---
0x444: JUMPDEST 
0x44b: JUMP 0x158
---
Entry stack: [V11, 0x158, S5, {0x2, 0x3}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x158, S5]

================================

Block 0x44c
[0x44c:0x45e]
---
Predecessors: [0x1d9]
Successors: [0x45f, 0x463]
---
0x44c JUMPDEST
0x44d PUSH1 0x0
0x44f SLOAD
0x450 PUSH1 0x1
0x452 PUSH1 0xa0
0x454 PUSH1 0x2
0x456 EXP
0x457 SUB
0x458 AND
0x459 CALLER
0x45a EQ
0x45b PUSH2 0x463
0x45e JUMPI
---
0x44c: JUMPDEST 
0x44d: V350 = 0x0
0x44f: V351 = S[0x0]
0x450: V352 = 0x1
0x452: V353 = 0xa0
0x454: V354 = 0x2
0x456: V355 = EXP 0x2 0xa0
0x457: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x459: V358 = CALLER
0x45a: V359 = EQ V358 V357
0x45b: V360 = 0x463
0x45e: JUMPI 0x463 V359
---
Entry stack: [V11, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3]

================================

Block 0x45f
[0x45f:0x462]
---
Predecessors: [0x44c]
Successors: []
---
0x45f PUSH1 0x0
0x461 DUP1
0x462 REVERT
---
0x45f: V361 = 0x0
0x462: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3]

================================

Block 0x463
[0x463:0x494]
---
Predecessors: [0x44c]
Successors: [0x495, 0x49e]
---
0x463 JUMPDEST
0x464 PUSH1 0x0
0x466 DUP1
0x467 SLOAD
0x468 PUSH1 0x40
0x46a MLOAD
0x46b PUSH1 0x1
0x46d PUSH1 0xa0
0x46f PUSH1 0x2
0x471 EXP
0x472 SUB
0x473 SWAP1
0x474 SWAP2
0x475 AND
0x476 SWAP2
0x477 ADDRESS
0x478 BALANCE
0x479 DUP1
0x47a ISZERO
0x47b PUSH2 0x8fc
0x47e MUL
0x47f SWAP3
0x480 SWAP1
0x481 SWAP2
0x482 DUP2
0x483 DUP2
0x484 DUP2
0x485 DUP6
0x486 DUP9
0x487 DUP9
0x488 CALL
0x489 SWAP4
0x48a POP
0x48b POP
0x48c POP
0x48d POP
0x48e ISZERO
0x48f DUP1
0x490 ISZERO
0x491 PUSH2 0x49e
0x494 JUMPI
---
0x463: JUMPDEST 
0x464: V362 = 0x0
0x467: V363 = S[0x0]
0x468: V364 = 0x40
0x46a: V365 = M[0x40]
0x46b: V366 = 0x1
0x46d: V367 = 0xa0
0x46f: V368 = 0x2
0x471: V369 = EXP 0x2 0xa0
0x472: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x475: V371 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x477: V372 = ADDRESS
0x478: V373 = BALANCE V372
0x47a: V374 = ISZERO V373
0x47b: V375 = 0x8fc
0x47e: V376 = MUL 0x8fc V374
0x488: V377 = CALL V376 V371 V373 V365 0x0 V365 0x0
0x48e: V378 = ISZERO V377
0x490: V379 = ISZERO V378
0x491: V380 = 0x49e
0x494: JUMPI 0x49e V379
---
Entry stack: [V11, 0xa3]
Stack pops: 0
Stack additions: [V378]
Exit stack: [V11, 0xa3, V378]

================================

Block 0x495
[0x495:0x49d]
---
Predecessors: [0x463]
Successors: []
---
0x495 RETURNDATASIZE
0x496 PUSH1 0x0
0x498 DUP1
0x499 RETURNDATACOPY
0x49a RETURNDATASIZE
0x49b PUSH1 0x0
0x49d REVERT
---
0x495: V381 = RETURNDATASIZE
0x496: V382 = 0x0
0x499: RETURNDATACOPY 0x0 0x0 V381
0x49a: V383 = RETURNDATASIZE
0x49b: V384 = 0x0
0x49d: REVERT 0x0 V383
---
Entry stack: [V11, 0xa3, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V378]

================================

Block 0x49e
[0x49e:0x4a0]
---
Predecessors: [0x463]
Successors: [0xa3]
---
0x49e JUMPDEST
0x49f POP
0x4a0 JUMP
---
0x49e: JUMPDEST 
0x4a0: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V378]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a1
[0x4a1:0x4af]
---
Predecessors: [0x1ee]
Successors: [0x1f7]
---
0x4a1 JUMPDEST
0x4a2 PUSH1 0x1
0x4a4 SLOAD
0x4a5 PUSH1 0x1
0x4a7 PUSH1 0xa0
0x4a9 PUSH1 0x2
0x4ab EXP
0x4ac SUB
0x4ad AND
0x4ae DUP2
0x4af JUMP
---
0x4a1: JUMPDEST 
0x4a2: V385 = 0x1
0x4a4: V386 = S[0x1]
0x4a5: V387 = 0x1
0x4a7: V388 = 0xa0
0x4a9: V389 = 0x2
0x4ab: V390 = EXP 0x2 0xa0
0x4ac: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ad: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x4af: JUMP 0x1f7
---
Entry stack: [V11, 0x1f7]
Stack pops: 1
Stack additions: [S0, V392]
Exit stack: [V11, 0x1f7, V392]

================================

Block 0x4b0
[0x4b0:0x4be]
---
Predecessors: [0x21f]
Successors: [0x1f7]
---
0x4b0 JUMPDEST
0x4b1 PUSH1 0x0
0x4b3 SLOAD
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc AND
0x4bd DUP2
0x4be JUMP
---
0x4b0: JUMPDEST 
0x4b1: V393 = 0x0
0x4b3: V394 = S[0x0]
0x4b4: V395 = 0x1
0x4b6: V396 = 0xa0
0x4b8: V397 = 0x2
0x4ba: V398 = EXP 0x2 0xa0
0x4bb: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bc: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x4be: JUMP 0x1f7
---
Entry stack: [V11, 0x1f7]
Stack pops: 1
Stack additions: [S0, V400]
Exit stack: [V11, 0x1f7, V400]

================================

Block 0x4bf
[0x4bf:0x4fe]
---
Predecessors: [0x234]
Successors: [0x444, 0x4ff]
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x3
0x4c2 DUP1
0x4c3 SLOAD
0x4c4 PUSH1 0x40
0x4c6 DUP1
0x4c7 MLOAD
0x4c8 PUSH1 0x20
0x4ca PUSH1 0x2
0x4cc PUSH1 0x1
0x4ce DUP6
0x4cf AND
0x4d0 ISZERO
0x4d1 PUSH2 0x100
0x4d4 MUL
0x4d5 PUSH1 0x0
0x4d7 NOT
0x4d8 ADD
0x4d9 SWAP1
0x4da SWAP5
0x4db AND
0x4dc SWAP4
0x4dd SWAP1
0x4de SWAP4
0x4df DIV
0x4e0 PUSH1 0x1f
0x4e2 DUP2
0x4e3 ADD
0x4e4 DUP5
0x4e5 SWAP1
0x4e6 DIV
0x4e7 DUP5
0x4e8 MUL
0x4e9 DUP3
0x4ea ADD
0x4eb DUP5
0x4ec ADD
0x4ed SWAP1
0x4ee SWAP3
0x4ef MSTORE
0x4f0 DUP2
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 SWAP3
0x4f4 SWAP2
0x4f5 DUP4
0x4f6 ADD
0x4f7 DUP3
0x4f8 DUP3
0x4f9 DUP1
0x4fa ISZERO
0x4fb PUSH2 0x444
0x4fe JUMPI
---
0x4bf: JUMPDEST 
0x4c0: V401 = 0x3
0x4c3: V402 = S[0x3]
0x4c4: V403 = 0x40
0x4c7: V404 = M[0x40]
0x4c8: V405 = 0x20
0x4ca: V406 = 0x2
0x4cc: V407 = 0x1
0x4cf: V408 = AND V402 0x1
0x4d0: V409 = ISZERO V408
0x4d1: V410 = 0x100
0x4d4: V411 = MUL 0x100 V409
0x4d5: V412 = 0x0
0x4d7: V413 = NOT 0x0
0x4d8: V414 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V411
0x4db: V415 = AND V402 V414
0x4df: V416 = DIV V415 0x2
0x4e0: V417 = 0x1f
0x4e3: V418 = ADD V416 0x1f
0x4e6: V419 = DIV V418 0x20
0x4e8: V420 = MUL 0x20 V419
0x4ea: V421 = ADD V404 V420
0x4ec: V422 = ADD 0x20 V421
0x4ef: M[0x40] = V422
0x4f2: M[V404] = V416
0x4f6: V423 = ADD V404 0x20
0x4fa: V424 = ISZERO V416
0x4fb: V425 = 0x444
0x4fe: JUMPI 0x444 V424
---
Entry stack: [V11, 0x158]
Stack pops: 0
Stack additions: [V404, 0x3, V416, V423, 0x3, V416]
Exit stack: [V11, 0x158, V404, 0x3, V416, V423, 0x3, V416]

================================

Block 0x4ff
[0x4ff:0x506]
---
Predecessors: [0x4bf]
Successors: [0x419, 0x507]
---
0x4ff DUP1
0x500 PUSH1 0x1f
0x502 LT
0x503 PUSH2 0x419
0x506 JUMPI
---
0x500: V426 = 0x1f
0x502: V427 = LT 0x1f V416
0x503: V428 = 0x419
0x506: JUMPI 0x419 V427
---
Entry stack: [V11, 0x158, V404, 0x3, V416, V423, 0x3, V416]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x158, V404, 0x3, V416, V423, 0x3, V416]

================================

Block 0x507
[0x507:0x519]
---
Predecessors: [0x4ff]
Successors: [0x444]
---
0x507 PUSH2 0x100
0x50a DUP1
0x50b DUP4
0x50c SLOAD
0x50d DIV
0x50e MUL
0x50f DUP4
0x510 MSTORE
0x511 SWAP2
0x512 PUSH1 0x20
0x514 ADD
0x515 SWAP2
0x516 PUSH2 0x444
0x519 JUMP
---
0x507: V429 = 0x100
0x50c: V430 = S[0x3]
0x50d: V431 = DIV V430 0x100
0x50e: V432 = MUL V431 0x100
0x510: M[V423] = V432
0x512: V433 = 0x20
0x514: V434 = ADD 0x20 V423
0x516: V435 = 0x444
0x519: JUMP 0x444
---
Entry stack: [V11, 0x158, V404, 0x3, V416, V423, 0x3, V416]
Stack pops: 3
Stack additions: [V434, S1, S0]
Exit stack: [V11, 0x158, V404, 0x3, V416, V434, 0x3, V416]

================================

Block 0x51a
[0x51a:0x52c]
---
Predecessors: [0x249]
Successors: [0x52d, 0x531]
---
0x51a JUMPDEST
0x51b PUSH1 0x0
0x51d SLOAD
0x51e PUSH1 0x1
0x520 PUSH1 0xa0
0x522 PUSH1 0x2
0x524 EXP
0x525 SUB
0x526 AND
0x527 CALLER
0x528 EQ
0x529 PUSH2 0x531
0x52c JUMPI
---
0x51a: JUMPDEST 
0x51b: V436 = 0x0
0x51d: V437 = S[0x0]
0x51e: V438 = 0x1
0x520: V439 = 0xa0
0x522: V440 = 0x2
0x524: V441 = EXP 0x2 0xa0
0x525: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x526: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x527: V444 = CALLER
0x528: V445 = EQ V444 V443
0x529: V446 = 0x531
0x52c: JUMPI 0x531 V445
---
Entry stack: [V11, 0xa3, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V187]

================================

Block 0x52d
[0x52d:0x530]
---
Predecessors: [0x51a]
Successors: []
---
0x52d PUSH1 0x0
0x52f DUP1
0x530 REVERT
---
0x52d: V447 = 0x0
0x530: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V187]

================================

Block 0x531
[0x531:0x55f]
---
Predecessors: [0x51a]
Successors: [0xa3]
---
0x531 JUMPDEST
0x532 PUSH1 0x0
0x534 DUP1
0x535 SLOAD
0x536 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54b NOT
0x54c AND
0x54d PUSH1 0x1
0x54f PUSH1 0xa0
0x551 PUSH1 0x2
0x553 EXP
0x554 SUB
0x555 SWAP3
0x556 SWAP1
0x557 SWAP3
0x558 AND
0x559 SWAP2
0x55a SWAP1
0x55b SWAP2
0x55c OR
0x55d SWAP1
0x55e SSTORE
0x55f JUMP
---
0x531: JUMPDEST 
0x532: V448 = 0x0
0x535: V449 = S[0x0]
0x536: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x54b: V451 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V452 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V449
0x54d: V453 = 0x1
0x54f: V454 = 0xa0
0x551: V455 = 0x2
0x553: V456 = EXP 0x2 0xa0
0x554: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x558: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x55c: V459 = OR V458 V452
0x55e: S[0x0] = V459
0x55f: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V187]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x560
[0x560:0x572]
---
Predecessors: [0x26a]
Successors: [0x573, 0x577]
---
0x560 JUMPDEST
0x561 PUSH1 0x0
0x563 SLOAD
0x564 PUSH1 0x1
0x566 PUSH1 0xa0
0x568 PUSH1 0x2
0x56a EXP
0x56b SUB
0x56c AND
0x56d CALLER
0x56e EQ
0x56f PUSH2 0x577
0x572 JUMPI
---
0x560: JUMPDEST 
0x561: V460 = 0x0
0x563: V461 = S[0x0]
0x564: V462 = 0x1
0x566: V463 = 0xa0
0x568: V464 = 0x2
0x56a: V465 = EXP 0x2 0xa0
0x56b: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56c: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x56d: V468 = CALLER
0x56e: V469 = EQ V468 V467
0x56f: V470 = 0x577
0x572: JUMPI 0x577 V469
---
Entry stack: [V11, 0xa3, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V194]

================================

Block 0x573
[0x573:0x576]
---
Predecessors: [0x560]
Successors: []
---
0x573 PUSH1 0x0
0x575 DUP1
0x576 REVERT
---
0x573: V471 = 0x0
0x576: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V194]

================================

Block 0x577
[0x577:0x585]
---
Predecessors: [0x560]
Successors: [0x586]
---
0x577 JUMPDEST
0x578 DUP1
0x579 MLOAD
0x57a PUSH2 0x3bd
0x57d SWAP1
0x57e PUSH1 0x3
0x580 SWAP1
0x581 PUSH1 0x20
0x583 DUP5
0x584 ADD
0x585 SWAP1
---
0x577: JUMPDEST 
0x579: V472 = M[V194]
0x57a: V473 = 0x3bd
0x57e: V474 = 0x3
0x581: V475 = 0x20
0x584: V476 = ADD V194 0x20
---
Entry stack: [V11, 0xa3, V194]
Stack pops: 1
Stack additions: [S0, 0x3bd, 0x3, V476, V472]
Exit stack: [V11, 0xa3, V194, 0x3bd, 0x3, V476, V472]

================================

Block 0x586
[0x586:0x5b6]
---
Predecessors: [0x3aa, 0x577]
Successors: [0x5b7, 0x5c7]
---
0x586 JUMPDEST
0x587 DUP3
0x588 DUP1
0x589 SLOAD
0x58a PUSH1 0x1
0x58c DUP2
0x58d PUSH1 0x1
0x58f AND
0x590 ISZERO
0x591 PUSH2 0x100
0x594 MUL
0x595 SUB
0x596 AND
0x597 PUSH1 0x2
0x599 SWAP1
0x59a DIV
0x59b SWAP1
0x59c PUSH1 0x0
0x59e MSTORE
0x59f PUSH1 0x20
0x5a1 PUSH1 0x0
0x5a3 SHA3
0x5a4 SWAP1
0x5a5 PUSH1 0x1f
0x5a7 ADD
0x5a8 PUSH1 0x20
0x5aa SWAP1
0x5ab DIV
0x5ac DUP2
0x5ad ADD
0x5ae SWAP3
0x5af DUP3
0x5b0 PUSH1 0x1f
0x5b2 LT
0x5b3 PUSH2 0x5c7
0x5b6 JUMPI
---
0x586: JUMPDEST 
0x589: V477 = S[{0x2, 0x3}]
0x58a: V478 = 0x1
0x58d: V479 = 0x1
0x58f: V480 = AND 0x1 V477
0x590: V481 = ISZERO V480
0x591: V482 = 0x100
0x594: V483 = MUL 0x100 V481
0x595: V484 = SUB V483 0x1
0x596: V485 = AND V484 V477
0x597: V486 = 0x2
0x59a: V487 = DIV V485 0x2
0x59c: V488 = 0x0
0x59e: M[0x0] = {0x2, 0x3}
0x59f: V489 = 0x20
0x5a1: V490 = 0x0
0x5a3: V491 = SHA3 0x0 0x20
0x5a5: V492 = 0x1f
0x5a7: V493 = ADD 0x1f V487
0x5a8: V494 = 0x20
0x5ab: V495 = DIV V493 0x20
0x5ad: V496 = ADD V491 V495
0x5b0: V497 = 0x1f
0x5b2: V498 = LT 0x1f S0
0x5b3: V499 = 0x5c7
0x5b6: JUMPI 0x5c7 V498
---
Entry stack: [V11, 0xa3, S4, 0x3bd, {0x2, 0x3}, S1, S0]
Stack pops: 3
Stack additions: [S2, V496, S0, V491, S1]
Exit stack: [V11, 0xa3, S4, 0x3bd, {0x2, 0x3}, V496, S0, V491, S1]

================================

Block 0x5b7
[0x5b7:0x5c6]
---
Predecessors: [0x586]
Successors: [0x5f4]
---
0x5b7 DUP1
0x5b8 MLOAD
0x5b9 PUSH1 0xff
0x5bb NOT
0x5bc AND
0x5bd DUP4
0x5be DUP1
0x5bf ADD
0x5c0 OR
0x5c1 DUP6
0x5c2 SSTORE
0x5c3 PUSH2 0x5f4
0x5c6 JUMP
---
0x5b8: V500 = M[S0]
0x5b9: V501 = 0xff
0x5bb: V502 = NOT 0xff
0x5bc: V503 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V500
0x5bf: V504 = ADD S2 S2
0x5c0: V505 = OR V504 V503
0x5c2: S[{0x2, 0x3}] = V505
0x5c3: V506 = 0x5f4
0x5c6: JUMP 0x5f4
---
Entry stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, V491, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, V491, S0]

================================

Block 0x5c7
[0x5c7:0x5d5]
---
Predecessors: [0x586]
Successors: [0x5d6, 0x5f4]
---
0x5c7 JUMPDEST
0x5c8 DUP3
0x5c9 DUP1
0x5ca ADD
0x5cb PUSH1 0x1
0x5cd ADD
0x5ce DUP6
0x5cf SSTORE
0x5d0 DUP3
0x5d1 ISZERO
0x5d2 PUSH2 0x5f4
0x5d5 JUMPI
---
0x5c7: JUMPDEST 
0x5ca: V507 = ADD S2 S2
0x5cb: V508 = 0x1
0x5cd: V509 = ADD 0x1 V507
0x5cf: S[{0x2, 0x3}] = V509
0x5d1: V510 = ISZERO S2
0x5d2: V511 = 0x5f4
0x5d5: JUMPI 0x5f4 V510
---
Entry stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, V491, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, V491, S0]

================================

Block 0x5d6
[0x5d6:0x5d8]
---
Predecessors: [0x5c7]
Successors: [0x5d9]
---
0x5d6 SWAP2
0x5d7 DUP3
0x5d8 ADD
---
0x5d8: V512 = ADD S0 S2
---
Entry stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, V491, S0]
Stack pops: 3
Stack additions: [S0, S1, V512]
Exit stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S0, V491, V512]

================================

Block 0x5d9
[0x5d9:0x5e1]
---
Predecessors: [0x5d6, 0x5e2]
Successors: [0x5e2, 0x5f4]
---
0x5d9 JUMPDEST
0x5da DUP3
0x5db DUP2
0x5dc GT
0x5dd ISZERO
0x5de PUSH2 0x5f4
0x5e1 JUMPI
---
0x5d9: JUMPDEST 
0x5dc: V513 = GT V512 S2
0x5dd: V514 = ISZERO V513
0x5de: V515 = 0x5f4
0x5e1: JUMPI 0x5f4 V514
---
Entry stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, S1, V512]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, S1, V512]

================================

Block 0x5e2
[0x5e2:0x5f3]
---
Predecessors: [0x5d9]
Successors: [0x5d9]
---
0x5e2 DUP3
0x5e3 MLOAD
0x5e4 DUP3
0x5e5 SSTORE
0x5e6 SWAP2
0x5e7 PUSH1 0x20
0x5e9 ADD
0x5ea SWAP2
0x5eb SWAP1
0x5ec PUSH1 0x1
0x5ee ADD
0x5ef SWAP1
0x5f0 PUSH2 0x5d9
0x5f3 JUMP
---
0x5e3: V516 = M[S2]
0x5e5: S[S1] = V516
0x5e7: V517 = 0x20
0x5e9: V518 = ADD 0x20 S2
0x5ec: V519 = 0x1
0x5ee: V520 = ADD 0x1 S1
0x5f0: V521 = 0x5d9
0x5f3: JUMP 0x5d9
---
Entry stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, S1, V512]
Stack pops: 3
Stack additions: [V518, V520, S0]
Exit stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, V518, V520, V512]

================================

Block 0x5f4
[0x5f4:0x5ff]
---
Predecessors: [0x5b7, 0x5c7, 0x5d9]
Successors: [0x604]
---
0x5f4 JUMPDEST
0x5f5 POP
0x5f6 PUSH2 0x600
0x5f9 SWAP3
0x5fa SWAP2
0x5fb POP
0x5fc PUSH2 0x604
0x5ff JUMP
---
0x5f4: JUMPDEST 
0x5f6: V522 = 0x600
0x5fc: V523 = 0x604
0x5ff: JUMP 0x604
---
Entry stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, V496, S2, S1, S0]
Stack pops: 4
Stack additions: [0x600, S3, S1]
Exit stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, 0x600, V496, S1]

================================

Block 0x600
[0x600:0x603]
---
Predecessors: [0x60a, 0x61e]
Successors: [0x3bd, 0x61e]
---
0x600 JUMPDEST
0x601 POP
0x602 SWAP1
0x603 JUMP
---
0x600: JUMPDEST 
0x603: JUMP S2
---
Entry stack: [V11, 0xa3, S6, S5, {0x2, 0x3, 0xa3}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xa3, S6, S5, {0x2, 0x3, 0xa3}, S3, S1]

================================

Block 0x604
[0x604:0x609]
---
Predecessors: [0x5f4]
Successors: [0x60a]
---
0x604 JUMPDEST
0x605 PUSH2 0x61e
0x608 SWAP2
0x609 SWAP1
---
0x604: JUMPDEST 
0x605: V524 = 0x61e
---
Entry stack: [V11, 0xa3, S5, 0x3bd, {0x2, 0x3}, 0x600, V496, S0]
Stack pops: 2
Stack additions: [0x61e, S1, S0]
Exit stack: [V11, 0xa3, S5, 0x3bd, {0x2, 0x3}, 0x600, 0x61e, V496, S0]

================================

Block 0x60a
[0x60a:0x612]
---
Predecessors: [0x604, 0x613]
Successors: [0x600, 0x613]
---
0x60a JUMPDEST
0x60b DUP1
0x60c DUP3
0x60d GT
0x60e ISZERO
0x60f PUSH2 0x600
0x612 JUMPI
---
0x60a: JUMPDEST 
0x60d: V525 = GT V496 S0
0x60e: V526 = ISZERO V525
0x60f: V527 = 0x600
0x612: JUMPI 0x600 V526
---
Entry stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, 0x600, 0x61e, V496, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, 0x600, 0x61e, V496, S0]

================================

Block 0x613
[0x613:0x61d]
---
Predecessors: [0x60a]
Successors: [0x60a]
---
0x613 PUSH1 0x0
0x615 DUP2
0x616 SSTORE
0x617 PUSH1 0x1
0x619 ADD
0x61a PUSH2 0x60a
0x61d JUMP
---
0x613: V528 = 0x0
0x616: S[S0] = 0x0
0x617: V529 = 0x1
0x619: V530 = ADD 0x1 S0
0x61a: V531 = 0x60a
0x61d: JUMP 0x60a
---
Entry stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, 0x600, 0x61e, V496, S0]
Stack pops: 1
Stack additions: [V530]
Exit stack: [V11, 0xa3, S6, 0x3bd, {0x2, 0x3}, 0x600, 0x61e, V496, V530]

================================

Block 0x61e
[0x61e:0x620]
---
Predecessors: [0x600]
Successors: [0x600]
---
0x61e JUMPDEST
0x61f SWAP1
0x620 JUMP
---
0x61e: JUMPDEST 
0x620: JUMP S1
---
Entry stack: [V11, 0xa3, S4, S3, {0x2, 0x3, 0xa3}, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xa3, S4, S3, {0x2, 0x3, 0xa3}, S0]

================================

Block 0x621
[0x621:0x652]
---
Predecessors: []
Successors: []
---
0x621 STOP
0x622 LOG1
0x623 PUSH6 0x627a7a723058
0x62a SHA3
0x62b LOG2
0x62c MISSING 0xb9
0x62d MISSING 0x49
0x62e MISSING 0xfb
0x62f MISSING 0x4a
0x630 DUP9
0x631 COINBASE
0x632 EXTCODECOPY
0x633 SWAP8
0x634 MISSING 0xcb
0x635 MISSING 0x47
0x636 MISSING 0xd6
0x637 PUSH27 0xb87812ee4a81e027d32d46c844a85f87a6a2b80029
---
0x621: STOP 
0x622: LOG S0 S1 S2
0x623: V532 = 0x627a7a723058
0x62a: V533 = SHA3 0x627a7a723058 S3
0x62b: LOG V533 S4 S5 S6
0x62c: MISSING 0xb9
0x62d: MISSING 0x49
0x62e: MISSING 0xfb
0x62f: MISSING 0x4a
0x631: V534 = COINBASE
0x632: EXTCODECOPY V534 S8 S0 S1
0x634: MISSING 0xcb
0x635: MISSING 0x47
0x636: MISSING 0xd6
0x637: V535 = 0xb87812ee4a81e027d32d46c844a85f87a6a2b80029
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, S3, S4, S5, S6, S7, S8, S9, S2, 0xb87812ee4a81e027d32d46c844a85f87a6a2b80029]
Exit stack: []

================================

Function 0:
Public function signature: 0x45f7850
Entry block: 0xa5
Exit block: 0xa3
Body: 0xa3, 0xa5, 0xad, 0xb1, 0x2b7, 0x2ca, 0x2ce, 0x2fb, 0x304

Function 1:
Public function signature: 0x144fa6d7
Entry block: 0xc9
Exit block: 0xa3
Body: 0xa3, 0xc9, 0xd1, 0xd5, 0x34d, 0x360, 0x364

Function 2:
Public function signature: 0x6459361d
Entry block: 0xea
Exit block: 0xa3
Body: 0xa3, 0xea, 0xf2, 0xf6, 0x393, 0x3a6, 0x3aa, 0x3bd

Function 3:
Public function signature: 0x6b7cc44f
Entry block: 0x143
Exit block: 0x1bf
Body: 0x143, 0x14b, 0x14f, 0x158, 0x17a, 0x183, 0x192, 0x1a6, 0x1bf, 0x3c1, 0x3fe, 0x406, 0x419, 0x427, 0x43b, 0x444

Function 4:
Public function signature: 0x7362377b
Entry block: 0x1cd
Exit block: 0xa3
Body: 0xa3, 0x1cd, 0x1d5, 0x1d9, 0x44c, 0x45f, 0x463, 0x495, 0x49e

Function 5:
Public function signature: 0x8c8e8fee
Entry block: 0x1e2
Exit block: 0x1f7
Body: 0x1e2, 0x1ea, 0x1ee, 0x1f7, 0x4a1

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x213
Exit block: 0x1f7
Body: 0x1f7, 0x213, 0x21b, 0x21f, 0x4b0

Function 7:
Public function signature: 0xbeb0a416
Entry block: 0x228
Exit block: 0x1bf
Body: 0x158, 0x17a, 0x183, 0x192, 0x1a6, 0x1bf, 0x228, 0x230, 0x234, 0x419, 0x427, 0x43b, 0x444, 0x4bf, 0x4ff, 0x507

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x23d
Exit block: 0xa3
Body: 0xa3, 0x23d, 0x245, 0x249, 0x51a, 0x52d, 0x531

Function 9:
Public function signature: 0xf87f44b9
Entry block: 0x25e
Exit block: 0xa3
Body: 0xa3, 0x25e, 0x266, 0x26a, 0x3bd, 0x560, 0x573, 0x577

Function 10:
Public fallback function
Entry block: 0xa3
Exit block: 0xa3
Body: 0xa3

Function 11:
Private function
Entry block: 0x586
Exit block: 0x600
Body: 0x586, 0x5b7, 0x5c7, 0x5d6, 0x5d9, 0x5e2, 0x5f4, 0x600, 0x604, 0x60a, 0x613, 0x61e

