Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x96]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x55f6d4a9
0x3c EQ
0x3d PUSH2 0x96
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x55f6d4a9
0x3c: V13 = EQ 0x55f6d4a9 V11
0x3d: V14 = 0x96
0x40: JUMPI 0x96 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x65]
---
Predecessors: [0x0, 0xd]
Successors: [0x66, 0x67]
---
0x41 JUMPDEST
0x42 CALLER
0x43 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58 AND
0x59 PUSH2 0x8fc
0x5c PUSH1 0x2
0x5e CALLVALUE
0x5f DUP2
0x60 ISZERO
0x61 ISZERO
0x62 PUSH2 0x67
0x65 JUMPI
---
0x41: JUMPDEST 
0x42: V15 = CALLER
0x43: V16 = 0xffffffffffffffffffffffffffffffffffffffff
0x58: V17 = AND 0xffffffffffffffffffffffffffffffffffffffff V15
0x59: V18 = 0x8fc
0x5c: V19 = 0x2
0x5e: V20 = CALLVALUE
0x60: V21 = ISZERO 0x2
0x61: V22 = ISZERO 0x0
0x62: V23 = 0x67
0x65: JUMPI 0x67 0x1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V17, 0x8fc, 0x2, V20]
Exit stack: [V11, V17, 0x8fc, 0x2, V20]

================================

Block 0x66
[0x66:0x66]
---
Predecessors: [0x41]
Successors: []
---
0x66 INVALID
---
0x66: INVALID 
---
Entry stack: [V11, V17, 0x8fc, 0x2, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V17, 0x8fc, 0x2, V20]

================================

Block 0x67
[0x67:0x89]
---
Predecessors: [0x41]
Successors: [0x8a, 0x93]
---
0x67 JUMPDEST
0x68 DIV
0x69 SWAP1
0x6a DUP2
0x6b ISZERO
0x6c MUL
0x6d SWAP1
0x6e PUSH1 0x40
0x70 MLOAD
0x71 PUSH1 0x0
0x73 PUSH1 0x40
0x75 MLOAD
0x76 DUP1
0x77 DUP4
0x78 SUB
0x79 DUP2
0x7a DUP6
0x7b DUP9
0x7c DUP9
0x7d CALL
0x7e SWAP4
0x7f POP
0x80 POP
0x81 POP
0x82 POP
0x83 ISZERO
0x84 DUP1
0x85 ISZERO
0x86 PUSH2 0x93
0x89 JUMPI
---
0x67: JUMPDEST 
0x68: V24 = DIV V20 0x2
0x6b: V25 = ISZERO V24
0x6c: V26 = MUL V25 0x8fc
0x6e: V27 = 0x40
0x70: V28 = M[0x40]
0x71: V29 = 0x0
0x73: V30 = 0x40
0x75: V31 = M[0x40]
0x78: V32 = SUB V28 V31
0x7d: V33 = CALL V26 V17 V24 V31 V32 V31 0x0
0x83: V34 = ISZERO V33
0x85: V35 = ISZERO V34
0x86: V36 = 0x93
0x89: JUMPI 0x93 V35
---
Entry stack: [V11, V17, 0x8fc, 0x2, V20]
Stack pops: 4
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x8a
[0x8a:0x92]
---
Predecessors: [0x67]
Successors: []
---
0x8a RETURNDATASIZE
0x8b PUSH1 0x0
0x8d DUP1
0x8e RETURNDATACOPY
0x8f RETURNDATASIZE
0x90 PUSH1 0x0
0x92 REVERT
---
0x8a: V37 = RETURNDATASIZE
0x8b: V38 = 0x0
0x8e: RETURNDATACOPY 0x0 0x0 V37
0x8f: V39 = RETURNDATASIZE
0x90: V40 = 0x0
0x92: REVERT 0x0 V39
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x93
[0x93:0x95]
---
Predecessors: [0x67]
Successors: []
---
0x93 JUMPDEST
0x94 POP
0x95 STOP
---
0x93: JUMPDEST 
0x95: STOP 
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x96
[0x96:0x9d]
---
Predecessors: [0xd]
Successors: [0x9e, 0xa2]
---
0x96 JUMPDEST
0x97 CALLVALUE
0x98 DUP1
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x96: JUMPDEST 
0x97: V41 = CALLVALUE
0x99: V42 = ISZERO V41
0x9a: V43 = 0xa2
0x9d: JUMPI 0xa2 V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x96]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V44 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0xa2
[0xa2:0xaa]
---
Predecessors: [0x96]
Successors: [0xad]
---
0xa2 JUMPDEST
0xa3 POP
0xa4 PUSH2 0xab
0xa7 PUSH2 0xad
0xaa JUMP
---
0xa2: JUMPDEST 
0xa4: V45 = 0xab
0xa7: V46 = 0xad
0xaa: JUMP 0xad
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [0xab]
Exit stack: [V11, 0xab]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0x165]
Successors: []
---
0xab JUMPDEST
0xac STOP
---
0xab: JUMPDEST 
0xac: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0x103]
---
Predecessors: [0xa2]
Successors: [0x104, 0x108]
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 DUP1
0xb1 SWAP1
0xb2 SLOAD
0xb3 SWAP1
0xb4 PUSH2 0x100
0xb7 EXP
0xb8 SWAP1
0xb9 DIV
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5 AND
0xe6 CALLER
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd EQ
0xfe ISZERO
0xff ISZERO
0x100 PUSH2 0x108
0x103 JUMPI
---
0xad: JUMPDEST 
0xae: V47 = 0x0
0xb2: V48 = S[0x0]
0xb4: V49 = 0x100
0xb7: V50 = EXP 0x100 0x0
0xb9: V51 = DIV V48 0x1
0xba: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xd0: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xe6: V56 = CALLER
0xe7: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xfd: V59 = EQ V58 V55
0xfe: V60 = ISZERO V59
0xff: V61 = ISZERO V60
0x100: V62 = 0x108
0x103: JUMPI 0x108 V61
---
Entry stack: [V11, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xab]

================================

Block 0x104
[0x104:0x107]
---
Predecessors: [0xad]
Successors: []
---
0x104 PUSH1 0x0
0x106 DUP1
0x107 REVERT
---
0x104: V63 = 0x0
0x107: REVERT 0x0 0x0
---
Entry stack: [V11, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xab]

================================

Block 0x108
[0x108:0x15b]
---
Predecessors: [0xad]
Successors: [0x15c, 0x165]
---
0x108 JUMPDEST
0x109 CALLER
0x10a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f AND
0x120 PUSH2 0x8fc
0x123 ADDRESS
0x124 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139 AND
0x13a BALANCE
0x13b SWAP1
0x13c DUP2
0x13d ISZERO
0x13e MUL
0x13f SWAP1
0x140 PUSH1 0x40
0x142 MLOAD
0x143 PUSH1 0x0
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 DUP4
0x14a SUB
0x14b DUP2
0x14c DUP6
0x14d DUP9
0x14e DUP9
0x14f CALL
0x150 SWAP4
0x151 POP
0x152 POP
0x153 POP
0x154 POP
0x155 ISZERO
0x156 DUP1
0x157 ISZERO
0x158 PUSH2 0x165
0x15b JUMPI
---
0x108: JUMPDEST 
0x109: V64 = CALLER
0x10a: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x120: V67 = 0x8fc
0x123: V68 = ADDRESS
0x124: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x139: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x13a: V71 = BALANCE V70
0x13d: V72 = ISZERO V71
0x13e: V73 = MUL V72 0x8fc
0x140: V74 = 0x40
0x142: V75 = M[0x40]
0x143: V76 = 0x0
0x145: V77 = 0x40
0x147: V78 = M[0x40]
0x14a: V79 = SUB V75 V78
0x14f: V80 = CALL V73 V66 V71 V78 V79 V78 0x0
0x155: V81 = ISZERO V80
0x157: V82 = ISZERO V81
0x158: V83 = 0x165
0x15b: JUMPI 0x165 V82
---
Entry stack: [V11, 0xab]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V11, 0xab, V81]

================================

Block 0x15c
[0x15c:0x164]
---
Predecessors: [0x108]
Successors: []
---
0x15c RETURNDATASIZE
0x15d PUSH1 0x0
0x15f DUP1
0x160 RETURNDATACOPY
0x161 RETURNDATASIZE
0x162 PUSH1 0x0
0x164 REVERT
---
0x15c: V84 = RETURNDATASIZE
0x15d: V85 = 0x0
0x160: RETURNDATACOPY 0x0 0x0 V84
0x161: V86 = RETURNDATASIZE
0x162: V87 = 0x0
0x164: REVERT 0x0 V86
---
Entry stack: [V11, 0xab, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xab, V81]

================================

Block 0x165
[0x165:0x167]
---
Predecessors: [0x108]
Successors: [0xab]
---
0x165 JUMPDEST
0x166 POP
0x167 JUMP
---
0x165: JUMPDEST 
0x167: JUMP 0xab
---
Entry stack: [V11, 0xab, V81]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x168
[0x168:0x199]
---
Predecessors: []
Successors: []
---
0x168 STOP
0x169 LOG1
0x16a PUSH6 0x627a7a723058
0x171 SHA3
0x172 SWAP14
0x173 MISSING 0x28
0x174 MSIZE
0x175 MISSING 0xb1
0x176 MISSING 0xdb
0x177 MISSING 0xc7
0x178 CREATE
0x179 MISSING 0xd8
0x17a SHL
0x17b SWAP2
0x17c SHL
0x17d MISSING 0xd8
0x17e MISSING 0x48
0x17f MISSING 0xcd
0x180 DIV
0x181 EQ
0x182 MISSING 0xf7
0x183 MULMOD
0x184 CREATE
0x185 DUP15
0x186 REVERT
0x187 MISSING 0xb5
0x188 PUSH17 0x725b50ad60d631a0ef0029
---
0x168: STOP 
0x169: LOG S0 S1 S2
0x16a: V88 = 0x627a7a723058
0x171: V89 = SHA3 0x627a7a723058 S3
0x173: MISSING 0x28
0x174: V90 = MSIZE
0x175: MISSING 0xb1
0x176: MISSING 0xdb
0x177: MISSING 0xc7
0x178: V91 = CREATE S0 S1 S2
0x179: MISSING 0xd8
0x17a: V92 = SHL S0 S1
0x17c: V93 = SHL S3 S2
0x17d: MISSING 0xd8
0x17e: MISSING 0x48
0x17f: MISSING 0xcd
0x180: V94 = DIV S0 S1
0x181: V95 = EQ V94 S2
0x182: MISSING 0xf7
0x183: V96 = MULMOD S0 S1 S2
0x184: V97 = CREATE V96 S3 S4
0x186: REVERT S18 V97
0x187: MISSING 0xb5
0x188: V98 = 0x725b50ad60d631a0ef0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V89, V90, V91, V93, V92, V95, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, 0x725b50ad60d631a0ef0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x55f6d4a9
Entry block: 0x96
Exit block: 0xab
Body: 0x96, 0x9e, 0xa2, 0xab, 0xad, 0x104, 0x108, 0x15c, 0x165

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x8a
Body: 0x41, 0x66, 0x67, 0x8a, 0x93

