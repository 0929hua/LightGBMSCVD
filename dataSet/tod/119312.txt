Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xbd]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xbd
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0xbd
0x24: JUMPI 0xbd V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xec]
---
0x25 DUP1
0x26 PUSH4 0x12aa03eb
0x2b EQ
0x2c PUSH2 0xec
0x2f JUMPI
---
0x26: V16 = 0x12aa03eb
0x2b: V17 = EQ 0x12aa03eb V12
0x2c: V18 = 0xec
0x2f: JUMPI 0xec V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x117]
---
0x30 DUP1
0x31 PUSH4 0x3b172a32
0x36 EQ
0x37 PUSH2 0x117
0x3a JUMPI
---
0x31: V19 = 0x3b172a32
0x36: V20 = EQ 0x3b172a32 V12
0x37: V21 = 0x117
0x3a: JUMPI 0x117 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x12a]
---
0x3b DUP1
0x3c PUSH4 0xb562ce95
0x41 EQ
0x42 PUSH2 0x12a
0x45 JUMPI
---
0x3c: V22 = 0xb562ce95
0x41: V23 = EQ 0xb562ce95 V12
0x42: V24 = 0x12a
0x45: JUMPI 0x12a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x143]
---
0x46 DUP1
0x47 PUSH4 0xb8066bcb
0x4c EQ
0x4d PUSH2 0x143
0x50 JUMPI
---
0x47: V25 = 0xb8066bcb
0x4c: V26 = EQ 0xb8066bcb V12
0x4d: V27 = 0x143
0x50: JUMPI 0x143 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x156]
---
0x51 DUP1
0x52 PUSH4 0xbd38837b
0x57 EQ
0x58 PUSH2 0x156
0x5b JUMPI
---
0x52: V28 = 0xbd38837b
0x57: V29 = EQ 0xbd38837b V12
0x58: V30 = 0x156
0x5b: JUMPI 0x156 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x169]
---
0x5c DUP1
0x5d PUSH4 0xd2d66244
0x62 EQ
0x63 PUSH2 0x169
0x66 JUMPI
---
0x5d: V31 = 0xd2d66244
0x62: V32 = EQ 0xd2d66244 V12
0x63: V33 = 0x169
0x66: JUMPI 0x169 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0xa1]
---
Predecessors: [0x0, 0x5c]
Successors: [0xa2, 0xa6]
---
0x67 JUMPDEST
0x68 PUSH1 0x2
0x6a SLOAD
0x6b PUSH1 0x1
0x6d PUSH1 0xa0
0x6f PUSH1 0x2
0x71 EXP
0x72 SUB
0x73 AND
0x74 PUSH4 0xd0e30db0
0x79 CALLVALUE
0x7a PUSH1 0x40
0x7c MLOAD
0x7d DUP3
0x7e PUSH4 0xffffffff
0x83 AND
0x84 PUSH1 0xe0
0x86 PUSH1 0x2
0x88 EXP
0x89 MUL
0x8a DUP2
0x8b MSTORE
0x8c PUSH1 0x4
0x8e ADD
0x8f PUSH1 0x0
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 DUP4
0x96 SUB
0x97 DUP2
0x98 DUP6
0x99 DUP9
0x9a DUP1
0x9b EXTCODESIZE
0x9c ISZERO
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x67: JUMPDEST 
0x68: V34 = 0x2
0x6a: V35 = S[0x2]
0x6b: V36 = 0x1
0x6d: V37 = 0xa0
0x6f: V38 = 0x2
0x71: V39 = EXP 0x2 0xa0
0x72: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x74: V42 = 0xd0e30db0
0x79: V43 = CALLVALUE
0x7a: V44 = 0x40
0x7c: V45 = M[0x40]
0x7e: V46 = 0xffffffff
0x83: V47 = AND 0xffffffff 0xd0e30db0
0x84: V48 = 0xe0
0x86: V49 = 0x2
0x88: V50 = EXP 0x2 0xe0
0x89: V51 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x8b: M[V45] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x8c: V52 = 0x4
0x8e: V53 = ADD 0x4 V45
0x8f: V54 = 0x0
0x91: V55 = 0x40
0x93: V56 = M[0x40]
0x96: V57 = SUB V53 V56
0x9b: V58 = EXTCODESIZE V41
0x9c: V59 = ISZERO V58
0x9d: V60 = ISZERO V59
0x9e: V61 = 0xa6
0xa1: JUMPI 0xa6 V60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V41, 0xd0e30db0, V43, V53, 0x0, V56, V57, V56, V43, V41]
Exit stack: [V12, V41, 0xd0e30db0, V43, V53, 0x0, V56, V57, V56, V43, V41]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x67]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V62 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V12, V41, 0xd0e30db0, V43, V53, 0x0, V56, V57, V56, V43, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V41, 0xd0e30db0, V43, V53, 0x0, V56, V57, V56, V43, V41]

================================

Block 0xa6
[0xa6:0xb2]
---
Predecessors: [0x67]
Successors: [0xb3, 0xb7]
---
0xa6 JUMPDEST
0xa7 PUSH2 0x25ee
0xaa GAS
0xab SUB
0xac CALL
0xad ISZERO
0xae ISZERO
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0xa6: JUMPDEST 
0xa7: V63 = 0x25ee
0xaa: V64 = GAS
0xab: V65 = SUB V64 0x25ee
0xac: V66 = CALL V65 V41 V43 V56 V57 V56 0x0
0xad: V67 = ISZERO V66
0xae: V68 = ISZERO V67
0xaf: V69 = 0xb7
0xb2: JUMPI 0xb7 V68
---
Entry stack: [V12, V41, 0xd0e30db0, V43, V53, 0x0, V56, V57, V56, V43, V41]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V41, 0xd0e30db0, V43, V53]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0xa6]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V70 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V12, V41, 0xd0e30db0, V43, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V41, 0xd0e30db0, V43, V53]

================================

Block 0xb7
[0xb7:0xbc]
---
Predecessors: [0xa6]
Successors: []
---
0xb7 JUMPDEST
0xb8 POP
0xb9 POP
0xba POP
0xbb POP
0xbc STOP
---
0xb7: JUMPDEST 
0xbc: STOP 
---
Entry stack: [V12, V41, 0xd0e30db0, V43, V53]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0xc3]
---
Predecessors: [0xb]
Successors: [0xc4, 0xc8]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbd: JUMPDEST 
0xbe: V71 = CALLVALUE
0xbf: V72 = ISZERO V71
0xc0: V73 = 0xc8
0xc3: JUMPI 0xc8 V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbd]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V74 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc8
[0xc8:0xcf]
---
Predecessors: [0xbd]
Successors: [0x17e]
---
0xc8 JUMPDEST
0xc9 PUSH2 0xd0
0xcc PUSH2 0x17e
0xcf JUMP
---
0xc8: JUMPDEST 
0xc9: V75 = 0xd0
0xcc: V76 = 0x17e
0xcf: JUMP 0x17e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V12, 0xd0]

================================

Block 0xd0
[0xd0:0xeb]
---
Predecessors: [0x17e, 0x25a, 0x3a4, 0x3b3]
Successors: []
---
0xd0 JUMPDEST
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 PUSH1 0x1
0xd6 PUSH1 0xa0
0xd8 PUSH1 0x2
0xda EXP
0xdb SUB
0xdc SWAP1
0xdd SWAP2
0xde AND
0xdf DUP2
0xe0 MSTORE
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 PUSH1 0x40
0xe6 MLOAD
0xe7 DUP1
0xe8 SWAP2
0xe9 SUB
0xea SWAP1
0xeb RETURN
---
0xd0: JUMPDEST 
0xd1: V77 = 0x40
0xd3: V78 = M[0x40]
0xd4: V79 = 0x1
0xd6: V80 = 0xa0
0xd8: V81 = 0x2
0xda: V82 = EXP 0x2 0xa0
0xdb: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde: V84 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe0: M[V78] = V84
0xe1: V85 = 0x20
0xe3: V86 = ADD 0x20 V78
0xe4: V87 = 0x40
0xe6: V88 = M[0x40]
0xe9: V89 = SUB V86 V88
0xeb: RETURN V88 V89
---
Entry stack: [V12, 0xd0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0xec
[0xec:0xf2]
---
Predecessors: [0x25]
Successors: [0xf3, 0xf7]
---
0xec JUMPDEST
0xed CALLVALUE
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xec: JUMPDEST 
0xed: V90 = CALLVALUE
0xee: V91 = ISZERO V90
0xef: V92 = 0xf7
0xf2: JUMPI 0xf7 V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xec]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V93 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0x104]
---
Predecessors: [0xec]
Successors: [0x18d]
---
0xf7 JUMPDEST
0xf8 PUSH2 0x105
0xfb PUSH1 0x4
0xfd CALLDATALOAD
0xfe PUSH1 0x24
0x100 CALLDATALOAD
0x101 PUSH2 0x18d
0x104 JUMP
---
0xf7: JUMPDEST 
0xf8: V94 = 0x105
0xfb: V95 = 0x4
0xfd: V96 = CALLDATALOAD 0x4
0xfe: V97 = 0x24
0x100: V98 = CALLDATALOAD 0x24
0x101: V99 = 0x18d
0x104: JUMP 0x18d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V96, V98]
Exit stack: [V12, 0x105, V96, V98]

================================

Block 0x105
[0x105:0x116]
---
Predecessors: [0x254]
Successors: []
---
0x105 JUMPDEST
0x106 PUSH1 0x40
0x108 MLOAD
0x109 SWAP1
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f PUSH1 0x40
0x111 MLOAD
0x112 DUP1
0x113 SWAP2
0x114 SUB
0x115 SWAP1
0x116 RETURN
---
0x105: JUMPDEST 
0x106: V100 = 0x40
0x108: V101 = M[0x40]
0x10b: M[V101] = S0
0x10c: V102 = 0x20
0x10e: V103 = ADD 0x20 V101
0x10f: V104 = 0x40
0x111: V105 = M[0x40]
0x114: V106 = SUB V103 V105
0x116: RETURN V105 V106
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x30]
Successors: [0x11e, 0x122]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V107 = CALLVALUE
0x119: V108 = ISZERO V107
0x11a: V109 = 0x122
0x11d: JUMPI 0x122 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x117]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V110 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x117]
Successors: [0x25a]
---
0x122 JUMPDEST
0x123 PUSH2 0xd0
0x126 PUSH2 0x25a
0x129 JUMP
---
0x122: JUMPDEST 
0x123: V111 = 0xd0
0x126: V112 = 0x25a
0x129: JUMP 0x25a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V12, 0xd0]

================================

Block 0x12a
[0x12a:0x130]
---
Predecessors: [0x3b]
Successors: [0x131, 0x135]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x12a: JUMPDEST 
0x12b: V113 = CALLVALUE
0x12c: V114 = ISZERO V113
0x12d: V115 = 0x135
0x130: JUMPI 0x135 V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x12a]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V116 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x135
[0x135:0x142]
---
Predecessors: [0x12a]
Successors: [0x269]
---
0x135 JUMPDEST
0x136 PUSH2 0x105
0x139 PUSH1 0x4
0x13b CALLDATALOAD
0x13c PUSH1 0x24
0x13e CALLDATALOAD
0x13f PUSH2 0x269
0x142 JUMP
---
0x135: JUMPDEST 
0x136: V117 = 0x105
0x139: V118 = 0x4
0x13b: V119 = CALLDATALOAD 0x4
0x13c: V120 = 0x24
0x13e: V121 = CALLDATALOAD 0x24
0x13f: V122 = 0x269
0x142: JUMP 0x269
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V119, V121]
Exit stack: [V12, 0x105, V119, V121]

================================

Block 0x143
[0x143:0x149]
---
Predecessors: [0x46]
Successors: [0x14a, 0x14e]
---
0x143 JUMPDEST
0x144 CALLVALUE
0x145 ISZERO
0x146 PUSH2 0x14e
0x149 JUMPI
---
0x143: JUMPDEST 
0x144: V123 = CALLVALUE
0x145: V124 = ISZERO V123
0x146: V125 = 0x14e
0x149: JUMPI 0x14e V124
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0x143]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V126 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x143]
Successors: [0x3a4]
---
0x14e JUMPDEST
0x14f PUSH2 0xd0
0x152 PUSH2 0x3a4
0x155 JUMP
---
0x14e: JUMPDEST 
0x14f: V127 = 0xd0
0x152: V128 = 0x3a4
0x155: JUMP 0x3a4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V12, 0xd0]

================================

Block 0x156
[0x156:0x15c]
---
Predecessors: [0x51]
Successors: [0x15d, 0x161]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0x156: JUMPDEST 
0x157: V129 = CALLVALUE
0x158: V130 = ISZERO V129
0x159: V131 = 0x161
0x15c: JUMPI 0x161 V130
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x156]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V132 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x161
[0x161:0x168]
---
Predecessors: [0x156]
Successors: [0x3b3]
---
0x161 JUMPDEST
0x162 PUSH2 0xd0
0x165 PUSH2 0x3b3
0x168 JUMP
---
0x161: JUMPDEST 
0x162: V133 = 0xd0
0x165: V134 = 0x3b3
0x168: JUMP 0x3b3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V12, 0xd0]

================================

Block 0x169
[0x169:0x16f]
---
Predecessors: [0x5c]
Successors: [0x170, 0x174]
---
0x169 JUMPDEST
0x16a CALLVALUE
0x16b ISZERO
0x16c PUSH2 0x174
0x16f JUMPI
---
0x169: JUMPDEST 
0x16a: V135 = CALLVALUE
0x16b: V136 = ISZERO V135
0x16c: V137 = 0x174
0x16f: JUMPI 0x174 V136
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x170
[0x170:0x173]
---
Predecessors: [0x169]
Successors: []
---
0x170 PUSH1 0x0
0x172 DUP1
0x173 REVERT
---
0x170: V138 = 0x0
0x173: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x174
[0x174:0x17b]
---
Predecessors: [0x169]
Successors: [0x3cb]
---
0x174 JUMPDEST
0x175 PUSH2 0x17c
0x178 PUSH2 0x3cb
0x17b JUMP
---
0x174: JUMPDEST 
0x175: V139 = 0x17c
0x178: V140 = 0x3cb
0x17b: JUMP 0x3cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x17c]
Exit stack: [V12, 0x17c]

================================

Block 0x17c
[0x17c:0x17d]
---
Predecessors: [0x5e9]
Successors: []
---
0x17c JUMPDEST
0x17d STOP
---
0x17c: JUMPDEST 
0x17d: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x18c]
---
Predecessors: [0xc8]
Successors: [0xd0]
---
0x17e JUMPDEST
0x17f PUSH1 0x0
0x181 SLOAD
0x182 PUSH1 0x1
0x184 PUSH1 0xa0
0x186 PUSH1 0x2
0x188 EXP
0x189 SUB
0x18a AND
0x18b DUP2
0x18c JUMP
---
0x17e: JUMPDEST 
0x17f: V141 = 0x0
0x181: V142 = S[0x0]
0x182: V143 = 0x1
0x184: V144 = 0xa0
0x186: V145 = 0x2
0x188: V146 = EXP 0x2 0xa0
0x189: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x18c: JUMP 0xd0
---
Entry stack: [V12, 0xd0]
Stack pops: 1
Stack additions: [S0, V148]
Exit stack: [V12, 0xd0, V148]

================================

Block 0x18d
[0x18d:0x1a4]
---
Predecessors: [0xf7]
Successors: [0x1a5, 0x1a9]
---
0x18d JUMPDEST
0x18e PUSH1 0x0
0x190 DUP1
0x191 SLOAD
0x192 CALLER
0x193 PUSH1 0x1
0x195 PUSH1 0xa0
0x197 PUSH1 0x2
0x199 EXP
0x19a SUB
0x19b SWAP1
0x19c DUP2
0x19d AND
0x19e SWAP2
0x19f AND
0x1a0 EQ
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x18d: JUMPDEST 
0x18e: V149 = 0x0
0x191: V150 = S[0x0]
0x192: V151 = CALLER
0x193: V152 = 0x1
0x195: V153 = 0xa0
0x197: V154 = 0x2
0x199: V155 = EXP 0x2 0xa0
0x19a: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19d: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x19f: V158 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V159 = EQ V158 V157
0x1a1: V160 = 0x1a9
0x1a4: JUMPI 0x1a9 V159
---
Entry stack: [V12, 0x105, V96, V98]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x105, V96, V98, 0x0]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x18d]
Successors: [0x254]
---
0x1a5 PUSH2 0x254
0x1a8 JUMP
---
0x1a5: V161 = 0x254
0x1a8: JUMP 0x254
---
Entry stack: [V12, 0x105, V96, V98, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V96, V98, 0x0]

================================

Block 0x1a9
[0x1a9:0x232]
---
Predecessors: [0x18d]
Successors: [0x233, 0x237]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x1
0x1ac SLOAD
0x1ad PUSH1 0x2
0x1af SLOAD
0x1b0 PUSH20 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x1c5 SWAP2
0x1c6 PUSH4 0x75892cf1
0x1cb SWAP2
0x1cc PUSH1 0x1
0x1ce PUSH1 0xa0
0x1d0 PUSH1 0x2
0x1d2 EXP
0x1d3 SUB
0x1d4 SWAP2
0x1d5 DUP3
0x1d6 AND
0x1d7 SWAP2
0x1d8 AND
0x1d9 DUP7
0x1da DUP7
0x1db PUSH1 0x0
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 MSTORE
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 PUSH1 0xe0
0x1e9 PUSH1 0x2
0x1eb EXP
0x1ec PUSH4 0xffffffff
0x1f1 DUP8
0x1f2 AND
0x1f3 MUL
0x1f4 DUP2
0x1f5 MSTORE
0x1f6 PUSH1 0x1
0x1f8 PUSH1 0xa0
0x1fa PUSH1 0x2
0x1fc EXP
0x1fd SUB
0x1fe SWAP5
0x1ff DUP6
0x200 AND
0x201 PUSH1 0x4
0x203 DUP3
0x204 ADD
0x205 MSTORE
0x206 SWAP3
0x207 SWAP1
0x208 SWAP4
0x209 AND
0x20a PUSH1 0x24
0x20c DUP4
0x20d ADD
0x20e MSTORE
0x20f PUSH1 0x44
0x211 DUP3
0x212 ADD
0x213 MSTORE
0x214 PUSH1 0x64
0x216 DUP2
0x217 ADD
0x218 SWAP2
0x219 SWAP1
0x21a SWAP2
0x21b MSTORE
0x21c PUSH1 0x84
0x21e ADD
0x21f PUSH1 0x20
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP4
0x226 SUB
0x227 DUP2
0x228 PUSH1 0x0
0x22a DUP8
0x22b DUP1
0x22c EXTCODESIZE
0x22d ISZERO
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V162 = 0x1
0x1ac: V163 = S[0x1]
0x1ad: V164 = 0x2
0x1af: V165 = S[0x2]
0x1b0: V166 = 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x1c6: V167 = 0x75892cf1
0x1cc: V168 = 0x1
0x1ce: V169 = 0xa0
0x1d0: V170 = 0x2
0x1d2: V171 = EXP 0x2 0xa0
0x1d3: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x1d8: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1db: V175 = 0x0
0x1dd: V176 = 0x40
0x1df: V177 = M[0x40]
0x1e0: V178 = 0x20
0x1e2: V179 = ADD 0x20 V177
0x1e3: M[V179] = 0x0
0x1e4: V180 = 0x40
0x1e6: V181 = M[0x40]
0x1e7: V182 = 0xe0
0x1e9: V183 = 0x2
0x1eb: V184 = EXP 0x2 0xe0
0x1ec: V185 = 0xffffffff
0x1f2: V186 = AND 0x75892cf1 0xffffffff
0x1f3: V187 = MUL 0x75892cf1 0x100000000000000000000000000000000000000000000000000000000
0x1f5: M[V181] = 0x75892cf100000000000000000000000000000000000000000000000000000000
0x1f6: V188 = 0x1
0x1f8: V189 = 0xa0
0x1fa: V190 = 0x2
0x1fc: V191 = EXP 0x2 0xa0
0x1fd: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x201: V194 = 0x4
0x204: V195 = ADD V181 0x4
0x205: M[V195] = V193
0x209: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x20a: V197 = 0x24
0x20d: V198 = ADD V181 0x24
0x20e: M[V198] = V196
0x20f: V199 = 0x44
0x212: V200 = ADD V181 0x44
0x213: M[V200] = V96
0x214: V201 = 0x64
0x217: V202 = ADD V181 0x64
0x21b: M[V202] = V98
0x21c: V203 = 0x84
0x21e: V204 = ADD 0x84 V181
0x21f: V205 = 0x20
0x221: V206 = 0x40
0x223: V207 = M[0x40]
0x226: V208 = SUB V204 V207
0x228: V209 = 0x0
0x22c: V210 = EXTCODESIZE 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x22d: V211 = ISZERO V210
0x22e: V212 = ISZERO V211
0x22f: V213 = 0x237
0x232: JUMPI 0x237 V212
---
Entry stack: [V12, 0x105, V96, V98, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, V204, 0x20, V207, V208, V207, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]
Exit stack: [V12, 0x105, V96, V98, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, V204, 0x20, V207, V208, V207, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x1a9]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V214 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V96, V98, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, V204, 0x20, V207, V208, V207, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V96, V98, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, V204, 0x20, V207, V208, V207, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]

================================

Block 0x237
[0x237:0x243]
---
Predecessors: [0x1a9, 0x30c]
Successors: [0x244, 0x248]
---
0x237 JUMPDEST
0x238 PUSH2 0x2c6
0x23b GAS
0x23c SUB
0x23d CALL
0x23e ISZERO
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x237: JUMPDEST 
0x238: V215 = 0x2c6
0x23b: V216 = GAS
0x23c: V217 = SUB V216 0x2c6
0x23d: V218 = CALL V217 0xb626a5facc4de1c813f5293ec3be31979f1d1c78 0x0 S2 S3 S4 0x20
0x23e: V219 = ISZERO V218
0x23f: V220 = ISZERO V219
0x240: V221 = 0x248
0x243: JUMPI 0x248 V220
---
Entry stack: [V12, 0x105, S11, S10, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, S6, 0x20, S4, S3, S2, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x105, S11, S10, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, S6]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x237]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V222 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, S5, S4, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, S5, S4, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, S0]

================================

Block 0x248
[0x248:0x253]
---
Predecessors: [0x237]
Successors: [0x254]
---
0x248 JUMPDEST
0x249 POP
0x24a POP
0x24b POP
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 MLOAD
0x251 SWAP2
0x252 POP
0x253 POP
---
0x248: JUMPDEST 
0x24c: V223 = 0x40
0x24e: V224 = M[0x40]
0x250: V225 = M[V224]
---
Entry stack: [V12, 0x105, S5, S4, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, S0]
Stack pops: 4
Stack additions: [V225]
Exit stack: [V12, 0x105, S5, S4, V225]

================================

Block 0x254
[0x254:0x259]
---
Predecessors: [0x1a5, 0x248, 0x281]
Successors: [0x105]
---
0x254 JUMPDEST
0x255 SWAP3
0x256 SWAP2
0x257 POP
0x258 POP
0x259 JUMP
---
0x254: JUMPDEST 
0x259: JUMP 0x105
---
Entry stack: [V12, 0x105, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x25a
[0x25a:0x268]
---
Predecessors: [0x122]
Successors: [0xd0]
---
0x25a JUMPDEST
0x25b PUSH1 0x1
0x25d SLOAD
0x25e PUSH1 0x1
0x260 PUSH1 0xa0
0x262 PUSH1 0x2
0x264 EXP
0x265 SUB
0x266 AND
0x267 DUP2
0x268 JUMP
---
0x25a: JUMPDEST 
0x25b: V226 = 0x1
0x25d: V227 = S[0x1]
0x25e: V228 = 0x1
0x260: V229 = 0xa0
0x262: V230 = 0x2
0x264: V231 = EXP 0x2 0xa0
0x265: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x268: JUMP 0xd0
---
Entry stack: [V12, 0xd0]
Stack pops: 1
Stack additions: [S0, V233]
Exit stack: [V12, 0xd0, V233]

================================

Block 0x269
[0x269:0x280]
---
Predecessors: [0x135]
Successors: [0x281, 0x288]
---
0x269 JUMPDEST
0x26a PUSH1 0x0
0x26c DUP1
0x26d SLOAD
0x26e CALLER
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 SWAP1
0x278 DUP2
0x279 AND
0x27a SWAP2
0x27b AND
0x27c EQ
0x27d PUSH2 0x288
0x280 JUMPI
---
0x269: JUMPDEST 
0x26a: V234 = 0x0
0x26d: V235 = S[0x0]
0x26e: V236 = CALLER
0x26f: V237 = 0x1
0x271: V238 = 0xa0
0x273: V239 = 0x2
0x275: V240 = EXP 0x2 0xa0
0x276: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x27b: V243 = AND V235 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V244 = EQ V243 V242
0x27d: V245 = 0x288
0x280: JUMPI 0x288 V244
---
Entry stack: [V12, 0x105, V119, V121]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x105, V119, V121, 0x0]

================================

Block 0x281
[0x281:0x287]
---
Predecessors: [0x269]
Successors: [0x254]
---
0x281 POP
0x282 PUSH1 0x0
0x284 PUSH2 0x254
0x287 JUMP
---
0x282: V246 = 0x0
0x284: V247 = 0x254
0x287: JUMP 0x254
---
Entry stack: [V12, 0x105, V119, V121, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x105, V119, V121, 0x0]

================================

Block 0x288
[0x288:0x2f6]
---
Predecessors: [0x269]
Successors: [0x2f7, 0x2fb]
---
0x288 JUMPDEST
0x289 PUSH1 0x2
0x28b SLOAD
0x28c PUSH1 0x1
0x28e PUSH1 0xa0
0x290 PUSH1 0x2
0x292 EXP
0x293 SUB
0x294 AND
0x295 PUSH4 0x95ea7b3
0x29a PUSH20 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x2af DUP6
0x2b0 PUSH1 0x0
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 MSTORE
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc PUSH1 0xe0
0x2be PUSH1 0x2
0x2c0 EXP
0x2c1 PUSH4 0xffffffff
0x2c6 DUP6
0x2c7 AND
0x2c8 MUL
0x2c9 DUP2
0x2ca MSTORE
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 SWAP1
0x2d4 SWAP3
0x2d5 AND
0x2d6 PUSH1 0x4
0x2d8 DUP4
0x2d9 ADD
0x2da MSTORE
0x2db PUSH1 0x24
0x2dd DUP3
0x2de ADD
0x2df MSTORE
0x2e0 PUSH1 0x44
0x2e2 ADD
0x2e3 PUSH1 0x20
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 DUP1
0x2e9 DUP4
0x2ea SUB
0x2eb DUP2
0x2ec PUSH1 0x0
0x2ee DUP8
0x2ef DUP1
0x2f0 EXTCODESIZE
0x2f1 ISZERO
0x2f2 ISZERO
0x2f3 PUSH2 0x2fb
0x2f6 JUMPI
---
0x288: JUMPDEST 
0x289: V248 = 0x2
0x28b: V249 = S[0x2]
0x28c: V250 = 0x1
0x28e: V251 = 0xa0
0x290: V252 = 0x2
0x292: V253 = EXP 0x2 0xa0
0x293: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x295: V256 = 0x95ea7b3
0x29a: V257 = 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x2b0: V258 = 0x0
0x2b2: V259 = 0x40
0x2b4: V260 = M[0x40]
0x2b5: V261 = 0x20
0x2b7: V262 = ADD 0x20 V260
0x2b8: M[V262] = 0x0
0x2b9: V263 = 0x40
0x2bb: V264 = M[0x40]
0x2bc: V265 = 0xe0
0x2be: V266 = 0x2
0x2c0: V267 = EXP 0x2 0xe0
0x2c1: V268 = 0xffffffff
0x2c7: V269 = AND 0x95ea7b3 0xffffffff
0x2c8: V270 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x2ca: M[V264] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x2cb: V271 = 0x1
0x2cd: V272 = 0xa0
0x2cf: V273 = 0x2
0x2d1: V274 = EXP 0x2 0xa0
0x2d2: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V276 = AND 0xb626a5facc4de1c813f5293ec3be31979f1d1c78 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: V277 = 0x4
0x2d9: V278 = ADD V264 0x4
0x2da: M[V278] = 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x2db: V279 = 0x24
0x2de: V280 = ADD V264 0x24
0x2df: M[V280] = V119
0x2e0: V281 = 0x44
0x2e2: V282 = ADD 0x44 V264
0x2e3: V283 = 0x20
0x2e5: V284 = 0x40
0x2e7: V285 = M[0x40]
0x2ea: V286 = SUB V282 V285
0x2ec: V287 = 0x0
0x2f0: V288 = EXTCODESIZE V255
0x2f1: V289 = ISZERO V288
0x2f2: V290 = ISZERO V289
0x2f3: V291 = 0x2fb
0x2f6: JUMPI 0x2fb V290
---
Entry stack: [V12, 0x105, V119, V121, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V255, 0x95ea7b3, V282, 0x20, V285, V286, V285, 0x0, V255]
Exit stack: [V12, 0x105, V119, V121, 0x0, V255, 0x95ea7b3, V282, 0x20, V285, V286, V285, 0x0, V255]

================================

Block 0x2f7
[0x2f7:0x2fa]
---
Predecessors: [0x288]
Successors: []
---
0x2f7 PUSH1 0x0
0x2f9 DUP1
0x2fa REVERT
---
0x2f7: V292 = 0x0
0x2fa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V119, V121, 0x0, V255, 0x95ea7b3, V282, 0x20, V285, V286, V285, 0x0, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V119, V121, 0x0, V255, 0x95ea7b3, V282, 0x20, V285, V286, V285, 0x0, V255]

================================

Block 0x2fb
[0x2fb:0x307]
---
Predecessors: [0x288]
Successors: [0x308, 0x30c]
---
0x2fb JUMPDEST
0x2fc PUSH2 0x2c6
0x2ff GAS
0x300 SUB
0x301 CALL
0x302 ISZERO
0x303 ISZERO
0x304 PUSH2 0x30c
0x307 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V293 = 0x2c6
0x2ff: V294 = GAS
0x300: V295 = SUB V294 0x2c6
0x301: V296 = CALL V295 V255 0x0 V285 V286 V285 0x20
0x302: V297 = ISZERO V296
0x303: V298 = ISZERO V297
0x304: V299 = 0x30c
0x307: JUMPI 0x30c V298
---
Entry stack: [V12, 0x105, V119, V121, 0x0, V255, 0x95ea7b3, V282, 0x20, V285, V286, V285, 0x0, V255]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x105, V119, V121, 0x0, V255, 0x95ea7b3, V282]

================================

Block 0x308
[0x308:0x30b]
---
Predecessors: [0x2fb]
Successors: []
---
0x308 PUSH1 0x0
0x30a DUP1
0x30b REVERT
---
0x308: V300 = 0x0
0x30b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V119, V121, 0x0, V255, 0x95ea7b3, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V119, V121, 0x0, V255, 0x95ea7b3, V282]

================================

Block 0x30c
[0x30c:0x39f]
---
Predecessors: [0x2fb]
Successors: [0x237, 0x3a0]
---
0x30c JUMPDEST
0x30d POP
0x30e POP
0x30f POP
0x310 PUSH1 0x40
0x312 MLOAD
0x313 DUP1
0x314 MLOAD
0x315 POP
0x316 POP
0x317 PUSH1 0x2
0x319 SLOAD
0x31a PUSH1 0x1
0x31c SLOAD
0x31d PUSH20 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x332 SWAP2
0x333 PUSH4 0x75892cf1
0x338 SWAP2
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 SWAP2
0x342 DUP3
0x343 AND
0x344 SWAP2
0x345 AND
0x346 DUP7
0x347 DUP7
0x348 PUSH1 0x0
0x34a PUSH1 0x40
0x34c MLOAD
0x34d PUSH1 0x20
0x34f ADD
0x350 MSTORE
0x351 PUSH1 0x40
0x353 MLOAD
0x354 PUSH1 0xe0
0x356 PUSH1 0x2
0x358 EXP
0x359 PUSH4 0xffffffff
0x35e DUP8
0x35f AND
0x360 MUL
0x361 DUP2
0x362 MSTORE
0x363 PUSH1 0x1
0x365 PUSH1 0xa0
0x367 PUSH1 0x2
0x369 EXP
0x36a SUB
0x36b SWAP5
0x36c DUP6
0x36d AND
0x36e PUSH1 0x4
0x370 DUP3
0x371 ADD
0x372 MSTORE
0x373 SWAP3
0x374 SWAP1
0x375 SWAP4
0x376 AND
0x377 PUSH1 0x24
0x379 DUP4
0x37a ADD
0x37b MSTORE
0x37c PUSH1 0x44
0x37e DUP3
0x37f ADD
0x380 MSTORE
0x381 PUSH1 0x64
0x383 DUP2
0x384 ADD
0x385 SWAP2
0x386 SWAP1
0x387 SWAP2
0x388 MSTORE
0x389 PUSH1 0x84
0x38b ADD
0x38c PUSH1 0x20
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 DUP4
0x393 SUB
0x394 DUP2
0x395 PUSH1 0x0
0x397 DUP8
0x398 DUP1
0x399 EXTCODESIZE
0x39a ISZERO
0x39b ISZERO
0x39c PUSH2 0x237
0x39f JUMPI
---
0x30c: JUMPDEST 
0x310: V301 = 0x40
0x312: V302 = M[0x40]
0x314: V303 = M[V302]
0x317: V304 = 0x2
0x319: V305 = S[0x2]
0x31a: V306 = 0x1
0x31c: V307 = S[0x1]
0x31d: V308 = 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x333: V309 = 0x75892cf1
0x339: V310 = 0x1
0x33b: V311 = 0xa0
0x33d: V312 = 0x2
0x33f: V313 = EXP 0x2 0xa0
0x340: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x343: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x345: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x348: V317 = 0x0
0x34a: V318 = 0x40
0x34c: V319 = M[0x40]
0x34d: V320 = 0x20
0x34f: V321 = ADD 0x20 V319
0x350: M[V321] = 0x0
0x351: V322 = 0x40
0x353: V323 = M[0x40]
0x354: V324 = 0xe0
0x356: V325 = 0x2
0x358: V326 = EXP 0x2 0xe0
0x359: V327 = 0xffffffff
0x35f: V328 = AND 0x75892cf1 0xffffffff
0x360: V329 = MUL 0x75892cf1 0x100000000000000000000000000000000000000000000000000000000
0x362: M[V323] = 0x75892cf100000000000000000000000000000000000000000000000000000000
0x363: V330 = 0x1
0x365: V331 = 0xa0
0x367: V332 = 0x2
0x369: V333 = EXP 0x2 0xa0
0x36a: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36d: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x36e: V336 = 0x4
0x371: V337 = ADD V323 0x4
0x372: M[V337] = V335
0x376: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x377: V339 = 0x24
0x37a: V340 = ADD V323 0x24
0x37b: M[V340] = V338
0x37c: V341 = 0x44
0x37f: V342 = ADD V323 0x44
0x380: M[V342] = V119
0x381: V343 = 0x64
0x384: V344 = ADD V323 0x64
0x388: M[V344] = V121
0x389: V345 = 0x84
0x38b: V346 = ADD 0x84 V323
0x38c: V347 = 0x20
0x38e: V348 = 0x40
0x390: V349 = M[0x40]
0x393: V350 = SUB V346 V349
0x395: V351 = 0x0
0x399: V352 = EXTCODESIZE 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x39a: V353 = ISZERO V352
0x39b: V354 = ISZERO V353
0x39c: V355 = 0x237
0x39f: JUMPI 0x237 V354
---
Entry stack: [V12, 0x105, V119, V121, 0x0, V255, 0x95ea7b3, V282]
Stack pops: 6
Stack additions: [S5, S4, S3, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, V346, 0x20, V349, V350, V349, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]
Exit stack: [V12, 0x105, V119, V121, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, V346, 0x20, V349, V350, V349, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x30c]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V356 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V119, V121, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, V346, 0x20, V349, V350, V349, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V119, V121, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78, 0x75892cf1, V346, 0x20, V349, V350, V349, 0x0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]

================================

Block 0x3a4
[0x3a4:0x3b2]
---
Predecessors: [0x14e]
Successors: [0xd0]
---
0x3a4 JUMPDEST
0x3a5 PUSH1 0x2
0x3a7 SLOAD
0x3a8 PUSH1 0x1
0x3aa PUSH1 0xa0
0x3ac PUSH1 0x2
0x3ae EXP
0x3af SUB
0x3b0 AND
0x3b1 DUP2
0x3b2 JUMP
---
0x3a4: JUMPDEST 
0x3a5: V357 = 0x2
0x3a7: V358 = S[0x2]
0x3a8: V359 = 0x1
0x3aa: V360 = 0xa0
0x3ac: V361 = 0x2
0x3ae: V362 = EXP 0x2 0xa0
0x3af: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b0: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x3b2: JUMP 0xd0
---
Entry stack: [V12, 0xd0]
Stack pops: 1
Stack additions: [S0, V364]
Exit stack: [V12, 0xd0, V364]

================================

Block 0x3b3
[0x3b3:0x3ca]
---
Predecessors: [0x161]
Successors: [0xd0]
---
0x3b3 JUMPDEST
0x3b4 PUSH20 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x3c9 DUP2
0x3ca JUMP
---
0x3b3: JUMPDEST 
0x3b4: V365 = 0xb626a5facc4de1c813f5293ec3be31979f1d1c78
0x3ca: JUMP 0xd0
---
Entry stack: [V12, 0xd0]
Stack pops: 1
Stack additions: [S0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]
Exit stack: [V12, 0xd0, 0xb626a5facc4de1c813f5293ec3be31979f1d1c78]

================================

Block 0x3cb
[0x3cb:0x3e1]
---
Predecessors: [0x174]
Successors: [0x3e2, 0x3e6]
---
0x3cb JUMPDEST
0x3cc PUSH1 0x0
0x3ce SLOAD
0x3cf CALLER
0x3d0 PUSH1 0x1
0x3d2 PUSH1 0xa0
0x3d4 PUSH1 0x2
0x3d6 EXP
0x3d7 SUB
0x3d8 SWAP1
0x3d9 DUP2
0x3da AND
0x3db SWAP2
0x3dc AND
0x3dd EQ
0x3de PUSH2 0x3e6
0x3e1 JUMPI
---
0x3cb: JUMPDEST 
0x3cc: V366 = 0x0
0x3ce: V367 = S[0x0]
0x3cf: V368 = CALLER
0x3d0: V369 = 0x1
0x3d2: V370 = 0xa0
0x3d4: V371 = 0x2
0x3d6: V372 = EXP 0x2 0xa0
0x3d7: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3da: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x3dc: V375 = AND V367 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V376 = EQ V375 V374
0x3de: V377 = 0x3e6
0x3e1: JUMPI 0x3e6 V376
---
Entry stack: [V12, 0x17c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c]

================================

Block 0x3e2
[0x3e2:0x3e5]
---
Predecessors: [0x3cb]
Successors: [0x5e9]
---
0x3e2 PUSH2 0x5e9
0x3e5 JUMP
---
0x3e2: V378 = 0x5e9
0x3e5: JUMP 0x5e9
---
Entry stack: [V12, 0x17c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c]

================================

Block 0x3e6
[0x3e6:0x41a]
---
Predecessors: [0x3cb]
Successors: [0x41b, 0x41f]
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x0
0x3e9 SLOAD
0x3ea PUSH1 0x1
0x3ec PUSH1 0xa0
0x3ee PUSH1 0x2
0x3f0 EXP
0x3f1 SUB
0x3f2 SWAP1
0x3f3 DUP2
0x3f4 AND
0x3f5 SWAP1
0x3f6 ADDRESS
0x3f7 AND
0x3f8 BALANCE
0x3f9 DUP1
0x3fa ISZERO
0x3fb PUSH2 0x8fc
0x3fe MUL
0x3ff SWAP1
0x400 PUSH1 0x40
0x402 MLOAD
0x403 PUSH1 0x0
0x405 PUSH1 0x40
0x407 MLOAD
0x408 DUP1
0x409 DUP4
0x40a SUB
0x40b DUP2
0x40c DUP6
0x40d DUP9
0x40e DUP9
0x40f CALL
0x410 SWAP4
0x411 POP
0x412 POP
0x413 POP
0x414 POP
0x415 ISZERO
0x416 ISZERO
0x417 PUSH2 0x41f
0x41a JUMPI
---
0x3e6: JUMPDEST 
0x3e7: V379 = 0x0
0x3e9: V380 = S[0x0]
0x3ea: V381 = 0x1
0x3ec: V382 = 0xa0
0x3ee: V383 = 0x2
0x3f0: V384 = EXP 0x2 0xa0
0x3f1: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f4: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x3f6: V387 = ADDRESS
0x3f7: V388 = AND V387 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V389 = BALANCE V388
0x3fa: V390 = ISZERO V389
0x3fb: V391 = 0x8fc
0x3fe: V392 = MUL 0x8fc V390
0x400: V393 = 0x40
0x402: V394 = M[0x40]
0x403: V395 = 0x0
0x405: V396 = 0x40
0x407: V397 = M[0x40]
0x40a: V398 = SUB V394 V397
0x40f: V399 = CALL V392 V386 V389 V397 V398 V397 0x0
0x415: V400 = ISZERO V399
0x416: V401 = ISZERO V400
0x417: V402 = 0x41f
0x41a: JUMPI 0x41f V401
---
Entry stack: [V12, 0x17c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c]

================================

Block 0x41b
[0x41b:0x41e]
---
Predecessors: [0x3e6]
Successors: []
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
---
0x41b: V403 = 0x0
0x41e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c]

================================

Block 0x41f
[0x41f:0x485]
---
Predecessors: [0x3e6]
Successors: [0x486, 0x48a]
---
0x41f JUMPDEST
0x420 PUSH1 0x2
0x422 SLOAD
0x423 PUSH1 0x0
0x425 DUP1
0x426 SLOAD
0x427 PUSH1 0x1
0x429 PUSH1 0xa0
0x42b PUSH1 0x2
0x42d EXP
0x42e SUB
0x42f SWAP3
0x430 DUP4
0x431 AND
0x432 SWAP3
0x433 PUSH4 0x205c2878
0x438 SWAP3
0x439 SWAP2
0x43a AND
0x43b SWAP1
0x43c DUP4
0x43d SWAP1
0x43e PUSH4 0x70a08231
0x443 SWAP1
0x444 ADDRESS
0x445 SWAP1
0x446 PUSH1 0x40
0x448 MLOAD
0x449 PUSH1 0x20
0x44b ADD
0x44c MSTORE
0x44d PUSH1 0x40
0x44f MLOAD
0x450 PUSH1 0xe0
0x452 PUSH1 0x2
0x454 EXP
0x455 PUSH4 0xffffffff
0x45a DUP5
0x45b AND
0x45c MUL
0x45d DUP2
0x45e MSTORE
0x45f PUSH1 0x1
0x461 PUSH1 0xa0
0x463 PUSH1 0x2
0x465 EXP
0x466 SUB
0x467 SWAP1
0x468 SWAP2
0x469 AND
0x46a PUSH1 0x4
0x46c DUP3
0x46d ADD
0x46e MSTORE
0x46f PUSH1 0x24
0x471 ADD
0x472 PUSH1 0x20
0x474 PUSH1 0x40
0x476 MLOAD
0x477 DUP1
0x478 DUP4
0x479 SUB
0x47a DUP2
0x47b PUSH1 0x0
0x47d DUP8
0x47e DUP1
0x47f EXTCODESIZE
0x480 ISZERO
0x481 ISZERO
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x41f: JUMPDEST 
0x420: V404 = 0x2
0x422: V405 = S[0x2]
0x423: V406 = 0x0
0x426: V407 = S[0x0]
0x427: V408 = 0x1
0x429: V409 = 0xa0
0x42b: V410 = 0x2
0x42d: V411 = EXP 0x2 0xa0
0x42e: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x431: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x433: V414 = 0x205c2878
0x43a: V415 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x43e: V416 = 0x70a08231
0x444: V417 = ADDRESS
0x446: V418 = 0x40
0x448: V419 = M[0x40]
0x449: V420 = 0x20
0x44b: V421 = ADD 0x20 V419
0x44c: M[V421] = 0x0
0x44d: V422 = 0x40
0x44f: V423 = M[0x40]
0x450: V424 = 0xe0
0x452: V425 = 0x2
0x454: V426 = EXP 0x2 0xe0
0x455: V427 = 0xffffffff
0x45b: V428 = AND 0x70a08231 0xffffffff
0x45c: V429 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x45e: M[V423] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x45f: V430 = 0x1
0x461: V431 = 0xa0
0x463: V432 = 0x2
0x465: V433 = EXP 0x2 0xa0
0x466: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x469: V435 = AND V417 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V436 = 0x4
0x46d: V437 = ADD V423 0x4
0x46e: M[V437] = V435
0x46f: V438 = 0x24
0x471: V439 = ADD 0x24 V423
0x472: V440 = 0x20
0x474: V441 = 0x40
0x476: V442 = M[0x40]
0x479: V443 = SUB V439 V442
0x47b: V444 = 0x0
0x47f: V445 = EXTCODESIZE V413
0x480: V446 = ISZERO V445
0x481: V447 = ISZERO V446
0x482: V448 = 0x48a
0x485: JUMPI 0x48a V447
---
Entry stack: [V12, 0x17c]
Stack pops: 0
Stack additions: [V413, 0x205c2878, V415, V413, 0x70a08231, V439, 0x20, V442, V443, V442, 0x0, V413]
Exit stack: [V12, 0x17c, V413, 0x205c2878, V415, V413, 0x70a08231, V439, 0x20, V442, V443, V442, 0x0, V413]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x41f]
Successors: []
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
---
0x486: V449 = 0x0
0x489: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c, V413, 0x205c2878, V415, V413, 0x70a08231, V439, 0x20, V442, V443, V442, 0x0, V413]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c, V413, 0x205c2878, V415, V413, 0x70a08231, V439, 0x20, V442, V443, V442, 0x0, V413]

================================

Block 0x48a
[0x48a:0x496]
---
Predecessors: [0x41f]
Successors: [0x497, 0x49b]
---
0x48a JUMPDEST
0x48b PUSH2 0x2c6
0x48e GAS
0x48f SUB
0x490 CALL
0x491 ISZERO
0x492 ISZERO
0x493 PUSH2 0x49b
0x496 JUMPI
---
0x48a: JUMPDEST 
0x48b: V450 = 0x2c6
0x48e: V451 = GAS
0x48f: V452 = SUB V451 0x2c6
0x490: V453 = CALL V452 V413 0x0 V442 V443 V442 0x20
0x491: V454 = ISZERO V453
0x492: V455 = ISZERO V454
0x493: V456 = 0x49b
0x496: JUMPI 0x49b V455
---
Entry stack: [V12, 0x17c, V413, 0x205c2878, V415, V413, 0x70a08231, V439, 0x20, V442, V443, V442, 0x0, V413]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x17c, V413, 0x205c2878, V415, V413, 0x70a08231, V439]

================================

Block 0x497
[0x497:0x49a]
---
Predecessors: [0x48a]
Successors: []
---
0x497 PUSH1 0x0
0x499 DUP1
0x49a REVERT
---
0x497: V457 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c, V413, 0x205c2878, V415, V413, 0x70a08231, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c, V413, 0x205c2878, V415, V413, 0x70a08231, V439]

================================

Block 0x49b
[0x49b:0x4e3]
---
Predecessors: [0x48a]
Successors: [0x4e4, 0x4e8]
---
0x49b JUMPDEST
0x49c POP
0x49d POP
0x49e POP
0x49f PUSH1 0x40
0x4a1 MLOAD
0x4a2 DUP1
0x4a3 MLOAD
0x4a4 SWAP1
0x4a5 POP
0x4a6 PUSH1 0x40
0x4a8 MLOAD
0x4a9 PUSH1 0xe0
0x4ab PUSH1 0x2
0x4ad EXP
0x4ae PUSH4 0xffffffff
0x4b3 DUP6
0x4b4 AND
0x4b5 MUL
0x4b6 DUP2
0x4b7 MSTORE
0x4b8 PUSH1 0x1
0x4ba PUSH1 0xa0
0x4bc PUSH1 0x2
0x4be EXP
0x4bf SUB
0x4c0 SWAP1
0x4c1 SWAP3
0x4c2 AND
0x4c3 PUSH1 0x4
0x4c5 DUP4
0x4c6 ADD
0x4c7 MSTORE
0x4c8 PUSH1 0x24
0x4ca DUP3
0x4cb ADD
0x4cc MSTORE
0x4cd PUSH1 0x44
0x4cf ADD
0x4d0 PUSH1 0x0
0x4d2 PUSH1 0x40
0x4d4 MLOAD
0x4d5 DUP1
0x4d6 DUP4
0x4d7 SUB
0x4d8 DUP2
0x4d9 PUSH1 0x0
0x4db DUP8
0x4dc DUP1
0x4dd EXTCODESIZE
0x4de ISZERO
0x4df ISZERO
0x4e0 PUSH2 0x4e8
0x4e3 JUMPI
---
0x49b: JUMPDEST 
0x49f: V458 = 0x40
0x4a1: V459 = M[0x40]
0x4a3: V460 = M[V459]
0x4a6: V461 = 0x40
0x4a8: V462 = M[0x40]
0x4a9: V463 = 0xe0
0x4ab: V464 = 0x2
0x4ad: V465 = EXP 0x2 0xe0
0x4ae: V466 = 0xffffffff
0x4b4: V467 = AND 0x205c2878 0xffffffff
0x4b5: V468 = MUL 0x205c2878 0x100000000000000000000000000000000000000000000000000000000
0x4b7: M[V462] = 0x205c287800000000000000000000000000000000000000000000000000000000
0x4b8: V469 = 0x1
0x4ba: V470 = 0xa0
0x4bc: V471 = 0x2
0x4be: V472 = EXP 0x2 0xa0
0x4bf: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c2: V474 = AND V415 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V475 = 0x4
0x4c6: V476 = ADD V462 0x4
0x4c7: M[V476] = V474
0x4c8: V477 = 0x24
0x4cb: V478 = ADD V462 0x24
0x4cc: M[V478] = V460
0x4cd: V479 = 0x44
0x4cf: V480 = ADD 0x44 V462
0x4d0: V481 = 0x0
0x4d2: V482 = 0x40
0x4d4: V483 = M[0x40]
0x4d7: V484 = SUB V480 V483
0x4d9: V485 = 0x0
0x4dd: V486 = EXTCODESIZE V413
0x4de: V487 = ISZERO V486
0x4df: V488 = ISZERO V487
0x4e0: V489 = 0x4e8
0x4e3: JUMPI 0x4e8 V488
---
Entry stack: [V12, 0x17c, V413, 0x205c2878, V415, V413, 0x70a08231, V439]
Stack pops: 6
Stack additions: [S5, S4, V480, 0x0, V483, V484, V483, 0x0, S5]
Exit stack: [V12, 0x17c, V413, 0x205c2878, V480, 0x0, V483, V484, V483, 0x0, V413]

================================

Block 0x4e4
[0x4e4:0x4e7]
---
Predecessors: [0x49b]
Successors: []
---
0x4e4 PUSH1 0x0
0x4e6 DUP1
0x4e7 REVERT
---
0x4e4: V490 = 0x0
0x4e7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c, V413, 0x205c2878, V480, 0x0, V483, V484, V483, 0x0, V413]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c, V413, 0x205c2878, V480, 0x0, V483, V484, V483, 0x0, V413]

================================

Block 0x4e8
[0x4e8:0x4f4]
---
Predecessors: [0x49b]
Successors: [0x4f5, 0x4f9]
---
0x4e8 JUMPDEST
0x4e9 PUSH2 0x2c6
0x4ec GAS
0x4ed SUB
0x4ee CALL
0x4ef ISZERO
0x4f0 ISZERO
0x4f1 PUSH2 0x4f9
0x4f4 JUMPI
---
0x4e8: JUMPDEST 
0x4e9: V491 = 0x2c6
0x4ec: V492 = GAS
0x4ed: V493 = SUB V492 0x2c6
0x4ee: V494 = CALL V493 V413 0x0 V483 V484 V483 0x0
0x4ef: V495 = ISZERO V494
0x4f0: V496 = ISZERO V495
0x4f1: V497 = 0x4f9
0x4f4: JUMPI 0x4f9 V496
---
Entry stack: [V12, 0x17c, V413, 0x205c2878, V480, 0x0, V483, V484, V483, 0x0, V413]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x17c, V413, 0x205c2878, V480]

================================

Block 0x4f5
[0x4f5:0x4f8]
---
Predecessors: [0x4e8]
Successors: []
---
0x4f5 PUSH1 0x0
0x4f7 DUP1
0x4f8 REVERT
---
0x4f5: V498 = 0x0
0x4f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c, V413, 0x205c2878, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c, V413, 0x205c2878, V480]

================================

Block 0x4f9
[0x4f9:0x561]
---
Predecessors: [0x4e8]
Successors: [0x562, 0x566]
---
0x4f9 JUMPDEST
0x4fa POP
0x4fb POP
0x4fc PUSH1 0x1
0x4fe SLOAD
0x4ff PUSH1 0x0
0x501 DUP1
0x502 SLOAD
0x503 PUSH1 0x1
0x505 PUSH1 0xa0
0x507 PUSH1 0x2
0x509 EXP
0x50a SUB
0x50b SWAP3
0x50c DUP4
0x50d AND
0x50e SWAP4
0x50f POP
0x510 PUSH4 0xa9059cbb
0x515 SWAP3
0x516 AND
0x517 SWAP1
0x518 DUP4
0x519 SWAP1
0x51a PUSH4 0x70a08231
0x51f SWAP1
0x520 ADDRESS
0x521 SWAP1
0x522 PUSH1 0x40
0x524 MLOAD
0x525 PUSH1 0x20
0x527 ADD
0x528 MSTORE
0x529 PUSH1 0x40
0x52b MLOAD
0x52c PUSH1 0xe0
0x52e PUSH1 0x2
0x530 EXP
0x531 PUSH4 0xffffffff
0x536 DUP5
0x537 AND
0x538 MUL
0x539 DUP2
0x53a MSTORE
0x53b PUSH1 0x1
0x53d PUSH1 0xa0
0x53f PUSH1 0x2
0x541 EXP
0x542 SUB
0x543 SWAP1
0x544 SWAP2
0x545 AND
0x546 PUSH1 0x4
0x548 DUP3
0x549 ADD
0x54a MSTORE
0x54b PUSH1 0x24
0x54d ADD
0x54e PUSH1 0x20
0x550 PUSH1 0x40
0x552 MLOAD
0x553 DUP1
0x554 DUP4
0x555 SUB
0x556 DUP2
0x557 PUSH1 0x0
0x559 DUP8
0x55a DUP1
0x55b EXTCODESIZE
0x55c ISZERO
0x55d ISZERO
0x55e PUSH2 0x566
0x561 JUMPI
---
0x4f9: JUMPDEST 
0x4fc: V499 = 0x1
0x4fe: V500 = S[0x1]
0x4ff: V501 = 0x0
0x502: V502 = S[0x0]
0x503: V503 = 0x1
0x505: V504 = 0xa0
0x507: V505 = 0x2
0x509: V506 = EXP 0x2 0xa0
0x50a: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50d: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x510: V509 = 0xa9059cbb
0x516: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x51a: V511 = 0x70a08231
0x520: V512 = ADDRESS
0x522: V513 = 0x40
0x524: V514 = M[0x40]
0x525: V515 = 0x20
0x527: V516 = ADD 0x20 V514
0x528: M[V516] = 0x0
0x529: V517 = 0x40
0x52b: V518 = M[0x40]
0x52c: V519 = 0xe0
0x52e: V520 = 0x2
0x530: V521 = EXP 0x2 0xe0
0x531: V522 = 0xffffffff
0x537: V523 = AND 0x70a08231 0xffffffff
0x538: V524 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x53a: M[V518] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x53b: V525 = 0x1
0x53d: V526 = 0xa0
0x53f: V527 = 0x2
0x541: V528 = EXP 0x2 0xa0
0x542: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x545: V530 = AND V512 0xffffffffffffffffffffffffffffffffffffffff
0x546: V531 = 0x4
0x549: V532 = ADD V518 0x4
0x54a: M[V532] = V530
0x54b: V533 = 0x24
0x54d: V534 = ADD 0x24 V518
0x54e: V535 = 0x20
0x550: V536 = 0x40
0x552: V537 = M[0x40]
0x555: V538 = SUB V534 V537
0x557: V539 = 0x0
0x55b: V540 = EXTCODESIZE V508
0x55c: V541 = ISZERO V540
0x55d: V542 = ISZERO V541
0x55e: V543 = 0x566
0x561: JUMPI 0x566 V542
---
Entry stack: [V12, 0x17c, V413, 0x205c2878, V480]
Stack pops: 3
Stack additions: [V508, 0xa9059cbb, V510, V508, 0x70a08231, V534, 0x20, V537, V538, V537, 0x0, V508]
Exit stack: [V12, 0x17c, V508, 0xa9059cbb, V510, V508, 0x70a08231, V534, 0x20, V537, V538, V537, 0x0, V508]

================================

Block 0x562
[0x562:0x565]
---
Predecessors: [0x4f9]
Successors: []
---
0x562 PUSH1 0x0
0x564 DUP1
0x565 REVERT
---
0x562: V544 = 0x0
0x565: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c, V508, 0xa9059cbb, V510, V508, 0x70a08231, V534, 0x20, V537, V538, V537, 0x0, V508]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c, V508, 0xa9059cbb, V510, V508, 0x70a08231, V534, 0x20, V537, V538, V537, 0x0, V508]

================================

Block 0x566
[0x566:0x572]
---
Predecessors: [0x4f9]
Successors: [0x573, 0x577]
---
0x566 JUMPDEST
0x567 PUSH2 0x2c6
0x56a GAS
0x56b SUB
0x56c CALL
0x56d ISZERO
0x56e ISZERO
0x56f PUSH2 0x577
0x572 JUMPI
---
0x566: JUMPDEST 
0x567: V545 = 0x2c6
0x56a: V546 = GAS
0x56b: V547 = SUB V546 0x2c6
0x56c: V548 = CALL V547 V508 0x0 V537 V538 V537 0x20
0x56d: V549 = ISZERO V548
0x56e: V550 = ISZERO V549
0x56f: V551 = 0x577
0x572: JUMPI 0x577 V550
---
Entry stack: [V12, 0x17c, V508, 0xa9059cbb, V510, V508, 0x70a08231, V534, 0x20, V537, V538, V537, 0x0, V508]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x17c, V508, 0xa9059cbb, V510, V508, 0x70a08231, V534]

================================

Block 0x573
[0x573:0x576]
---
Predecessors: [0x566]
Successors: []
---
0x573 PUSH1 0x0
0x575 DUP1
0x576 REVERT
---
0x573: V552 = 0x0
0x576: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c, V508, 0xa9059cbb, V510, V508, 0x70a08231, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c, V508, 0xa9059cbb, V510, V508, 0x70a08231, V534]

================================

Block 0x577
[0x577:0x5c8]
---
Predecessors: [0x566]
Successors: [0x5c9, 0x5cd]
---
0x577 JUMPDEST
0x578 POP
0x579 POP
0x57a POP
0x57b PUSH1 0x40
0x57d MLOAD
0x57e DUP1
0x57f MLOAD
0x580 SWAP1
0x581 POP
0x582 PUSH1 0x0
0x584 PUSH1 0x40
0x586 MLOAD
0x587 PUSH1 0x20
0x589 ADD
0x58a MSTORE
0x58b PUSH1 0x40
0x58d MLOAD
0x58e PUSH1 0xe0
0x590 PUSH1 0x2
0x592 EXP
0x593 PUSH4 0xffffffff
0x598 DUP6
0x599 AND
0x59a MUL
0x59b DUP2
0x59c MSTORE
0x59d PUSH1 0x1
0x59f PUSH1 0xa0
0x5a1 PUSH1 0x2
0x5a3 EXP
0x5a4 SUB
0x5a5 SWAP1
0x5a6 SWAP3
0x5a7 AND
0x5a8 PUSH1 0x4
0x5aa DUP4
0x5ab ADD
0x5ac MSTORE
0x5ad PUSH1 0x24
0x5af DUP3
0x5b0 ADD
0x5b1 MSTORE
0x5b2 PUSH1 0x44
0x5b4 ADD
0x5b5 PUSH1 0x20
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba DUP1
0x5bb DUP4
0x5bc SUB
0x5bd DUP2
0x5be PUSH1 0x0
0x5c0 DUP8
0x5c1 DUP1
0x5c2 EXTCODESIZE
0x5c3 ISZERO
0x5c4 ISZERO
0x5c5 PUSH2 0x5cd
0x5c8 JUMPI
---
0x577: JUMPDEST 
0x57b: V553 = 0x40
0x57d: V554 = M[0x40]
0x57f: V555 = M[V554]
0x582: V556 = 0x0
0x584: V557 = 0x40
0x586: V558 = M[0x40]
0x587: V559 = 0x20
0x589: V560 = ADD 0x20 V558
0x58a: M[V560] = 0x0
0x58b: V561 = 0x40
0x58d: V562 = M[0x40]
0x58e: V563 = 0xe0
0x590: V564 = 0x2
0x592: V565 = EXP 0x2 0xe0
0x593: V566 = 0xffffffff
0x599: V567 = AND 0xa9059cbb 0xffffffff
0x59a: V568 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x59c: M[V562] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x59d: V569 = 0x1
0x59f: V570 = 0xa0
0x5a1: V571 = 0x2
0x5a3: V572 = EXP 0x2 0xa0
0x5a4: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a7: V574 = AND V510 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V575 = 0x4
0x5ab: V576 = ADD V562 0x4
0x5ac: M[V576] = V574
0x5ad: V577 = 0x24
0x5b0: V578 = ADD V562 0x24
0x5b1: M[V578] = V555
0x5b2: V579 = 0x44
0x5b4: V580 = ADD 0x44 V562
0x5b5: V581 = 0x20
0x5b7: V582 = 0x40
0x5b9: V583 = M[0x40]
0x5bc: V584 = SUB V580 V583
0x5be: V585 = 0x0
0x5c2: V586 = EXTCODESIZE V508
0x5c3: V587 = ISZERO V586
0x5c4: V588 = ISZERO V587
0x5c5: V589 = 0x5cd
0x5c8: JUMPI 0x5cd V588
---
Entry stack: [V12, 0x17c, V508, 0xa9059cbb, V510, V508, 0x70a08231, V534]
Stack pops: 6
Stack additions: [S5, S4, V580, 0x20, V583, V584, V583, 0x0, S5]
Exit stack: [V12, 0x17c, V508, 0xa9059cbb, V580, 0x20, V583, V584, V583, 0x0, V508]

================================

Block 0x5c9
[0x5c9:0x5cc]
---
Predecessors: [0x577]
Successors: []
---
0x5c9 PUSH1 0x0
0x5cb DUP1
0x5cc REVERT
---
0x5c9: V590 = 0x0
0x5cc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c, V508, 0xa9059cbb, V580, 0x20, V583, V584, V583, 0x0, V508]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c, V508, 0xa9059cbb, V580, 0x20, V583, V584, V583, 0x0, V508]

================================

Block 0x5cd
[0x5cd:0x5d9]
---
Predecessors: [0x577]
Successors: [0x5da, 0x5de]
---
0x5cd JUMPDEST
0x5ce PUSH2 0x2c6
0x5d1 GAS
0x5d2 SUB
0x5d3 CALL
0x5d4 ISZERO
0x5d5 ISZERO
0x5d6 PUSH2 0x5de
0x5d9 JUMPI
---
0x5cd: JUMPDEST 
0x5ce: V591 = 0x2c6
0x5d1: V592 = GAS
0x5d2: V593 = SUB V592 0x2c6
0x5d3: V594 = CALL V593 V508 0x0 V583 V584 V583 0x20
0x5d4: V595 = ISZERO V594
0x5d5: V596 = ISZERO V595
0x5d6: V597 = 0x5de
0x5d9: JUMPI 0x5de V596
---
Entry stack: [V12, 0x17c, V508, 0xa9059cbb, V580, 0x20, V583, V584, V583, 0x0, V508]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x17c, V508, 0xa9059cbb, V580]

================================

Block 0x5da
[0x5da:0x5dd]
---
Predecessors: [0x5cd]
Successors: []
---
0x5da PUSH1 0x0
0x5dc DUP1
0x5dd REVERT
---
0x5da: V598 = 0x0
0x5dd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17c, V508, 0xa9059cbb, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17c, V508, 0xa9059cbb, V580]

================================

Block 0x5de
[0x5de:0x5e8]
---
Predecessors: [0x5cd]
Successors: [0x5e9]
---
0x5de JUMPDEST
0x5df POP
0x5e0 POP
0x5e1 POP
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 DUP1
0x5e6 MLOAD
0x5e7 POP
0x5e8 POP
---
0x5de: JUMPDEST 
0x5e2: V599 = 0x40
0x5e4: V600 = M[0x40]
0x5e6: V601 = M[V600]
---
Entry stack: [V12, 0x17c, V508, 0xa9059cbb, V580]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x17c]

================================

Block 0x5e9
[0x5e9:0x5ea]
---
Predecessors: [0x3e2, 0x5de]
Successors: [0x17c]
---
0x5e9 JUMPDEST
0x5ea JUMP
---
0x5e9: JUMPDEST 
0x5ea: JUMP 0x17c
---
Entry stack: [V12, 0x17c]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x5eb
[0x5eb:0x616]
---
Predecessors: []
Successors: []
---
0x5eb STOP
0x5ec LOG1
0x5ed PUSH6 0x627a7a723058
0x5f4 SHA3
0x5f5 CALLDATALOAD
0x5f6 TIMESTAMP
0x5f7 MISSING 0xf7
0x5f8 PC
0x5f9 ADDMOD
0x5fa PUSH26 0xba85f6ca099d0a9bd6ecf65b3542720a45f10731521b7301c8a1
0x615 STOP
0x616 MISSING 0x29
---
0x5eb: STOP 
0x5ec: LOG S0 S1 S2
0x5ed: V602 = 0x627a7a723058
0x5f4: V603 = SHA3 0x627a7a723058 S3
0x5f5: V604 = CALLDATALOAD V603
0x5f6: V605 = TIMESTAMP
0x5f7: MISSING 0xf7
0x5f8: V606 = PC
0x5f9: V607 = ADDMOD V606 S0 S1
0x5fa: V608 = 0xba85f6ca099d0a9bd6ecf65b3542720a45f10731521b7301c8a1
0x615: STOP 
0x616: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V605, V604, 0xba85f6ca099d0a9bd6ecf65b3542720a45f10731521b7301c8a1, V607]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xbd
Exit block: 0xd0
Body: 0xbd, 0xc4, 0xc8, 0xd0, 0x17e

Function 1:
Public function signature: 0x12aa03eb
Entry block: 0xec
Exit block: 0x244
Body: 0xec, 0xf3, 0xf7, 0x105, 0x18d, 0x1a5, 0x1a9, 0x233, 0x237, 0x244, 0x248, 0x254

Function 2:
Public function signature: 0x3b172a32
Entry block: 0x117
Exit block: 0xd0
Body: 0xd0, 0x117, 0x11e, 0x122, 0x25a

Function 3:
Public function signature: 0xb562ce95
Entry block: 0x12a
Exit block: 0x244
Body: 0x105, 0x12a, 0x131, 0x135, 0x237, 0x244, 0x248, 0x254, 0x269, 0x281, 0x288, 0x2f7, 0x2fb, 0x308, 0x30c, 0x3a0

Function 4:
Public function signature: 0xb8066bcb
Entry block: 0x143
Exit block: 0xd0
Body: 0xd0, 0x143, 0x14a, 0x14e, 0x3a4

Function 5:
Public function signature: 0xbd38837b
Entry block: 0x156
Exit block: 0xd0
Body: 0xd0, 0x156, 0x15d, 0x161, 0x3b3

Function 6:
Public function signature: 0xd2d66244
Entry block: 0x169
Exit block: 0x5da
Body: 0x169, 0x170, 0x174, 0x17c, 0x3cb, 0x3e2, 0x3e6, 0x41b, 0x41f, 0x486, 0x48a, 0x497, 0x49b, 0x4e4, 0x4e8, 0x4f5, 0x4f9, 0x562, 0x566, 0x573, 0x577, 0x5c9, 0x5cd, 0x5da, 0x5de, 0x5e9

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0xb3
Body: 0x67, 0xa2, 0xa6, 0xb3, 0xb7

