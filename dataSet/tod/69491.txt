Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x59
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x59
0x40: JUMPI 0x59 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x6e]
---
0x41 DUP1
0x42 PUSH4 0xa2b2cad2
0x47 EQ
0x48 PUSH2 0x6e
0x4b JUMPI
---
0x42: V15 = 0xa2b2cad2
0x47: V16 = EQ 0xa2b2cad2 V11
0x48: V17 = 0x6e
0x4b: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x9c]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0x9c
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0x9c
0x56: JUMPI 0x9c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x58]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 STOP
---
0x57: JUMPDEST 
0x58: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x59 JUMPDEST
0x5a CALLVALUE
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x59: JUMPDEST 
0x5a: V21 = CALLVALUE
0x5b: V22 = ISZERO V21
0x5c: V23 = 0x64
0x5f: JUMPI 0x64 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x59]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V24 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0x59]
Successors: [0xf1]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0xf1
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V25 = 0x6c
0x68: V26 = 0xf1
0x6b: JUMP 0xf1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0xf1]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x99]
---
Predecessors: [0x41]
Successors: [0x161]
---
0x6e JUMPDEST
0x6f PUSH2 0x9a
0x72 PUSH1 0x4
0x74 DUP1
0x75 DUP1
0x76 CALLDATALOAD
0x77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c AND
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 SWAP2
0x93 SWAP1
0x94 POP
0x95 POP
0x96 PUSH2 0x161
0x99 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x9a
0x72: V28 = 0x4
0x76: V29 = CALLDATALOAD 0x4
0x77: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x8e: V32 = 0x20
0x90: V33 = ADD 0x20 0x4
0x96: V34 = 0x161
0x99: JUMP 0x161
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9a, V31]
Exit stack: [V11, 0x9a, V31]

================================

Block 0x9a
[0x9a:0x9b]
---
Predecessors: [0x5c2]
Successors: []
---
0x9a JUMPDEST
0x9b STOP
---
0x9a: JUMPDEST 
0x9b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0x4c]
Successors: [0xa3, 0xa7]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa7
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V35 = CALLVALUE
0x9e: V36 = ISZERO V35
0x9f: V37 = 0xa7
0xa2: JUMPI 0xa7 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa6]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 REVERT
---
0xa3: V38 = 0x0
0xa6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa7
[0xa7:0xae]
---
Predecessors: [0x9c]
Successors: [0x5c9]
---
0xa7 JUMPDEST
0xa8 PUSH2 0xaf
0xab PUSH2 0x5c9
0xae JUMP
---
0xa7: JUMPDEST 
0xa8: V39 = 0xaf
0xab: V40 = 0x5c9
0xae: JUMP 0x5c9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V11, 0xaf]

================================

Block 0xaf
[0xaf:0xf0]
---
Predecessors: [0x5c9]
Successors: []
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 DUP3
0xb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca AND
0xcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0 AND
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP2
0xe7 POP
0xe8 POP
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed SWAP2
0xee SUB
0xef SWAP1
0xf0 RETURN
---
0xaf: JUMPDEST 
0xb0: V41 = 0x40
0xb2: V42 = M[0x40]
0xb5: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xca: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0xcb: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xe2: M[V42] = V46
0xe3: V47 = 0x20
0xe5: V48 = ADD 0x20 V42
0xe9: V49 = 0x40
0xeb: V50 = M[0x40]
0xee: V51 = SUB V48 V50
0xf0: RETURN V50 V51
---
Entry stack: [V11, 0xaf, V297]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xaf]

================================

Block 0xf1
[0xf1:0x160]
---
Predecessors: [0x64]
Successors: [0x6c]
---
0xf1 JUMPDEST
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 SWAP1
0xf6 SLOAD
0xf7 SWAP1
0xf8 PUSH2 0x100
0xfb EXP
0xfc SWAP1
0xfd DIV
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 AND
0x12a PUSH2 0x8fc
0x12d ADDRESS
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 BALANCE
0x145 SWAP1
0x146 DUP2
0x147 ISZERO
0x148 MUL
0x149 SWAP1
0x14a PUSH1 0x40
0x14c MLOAD
0x14d PUSH1 0x0
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 DUP4
0x154 SUB
0x155 DUP2
0x156 DUP6
0x157 DUP9
0x158 DUP9
0x159 CALL
0x15a SWAP4
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f POP
0x160 JUMP
---
0xf1: JUMPDEST 
0xf2: V52 = 0x0
0xf6: V53 = S[0x0]
0xf8: V54 = 0x100
0xfb: V55 = EXP 0x100 0x0
0xfd: V56 = DIV V53 0x1
0xfe: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x114: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x12a: V61 = 0x8fc
0x12d: V62 = ADDRESS
0x12e: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x144: V65 = BALANCE V64
0x147: V66 = ISZERO V65
0x148: V67 = MUL V66 0x8fc
0x14a: V68 = 0x40
0x14c: V69 = M[0x40]
0x14d: V70 = 0x0
0x14f: V71 = 0x40
0x151: V72 = M[0x40]
0x154: V73 = SUB V69 V72
0x159: V74 = CALL V67 V60 V65 V72 V73 V72 0x0
0x160: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x161
[0x161:0x1bd]
---
Predecessors: [0x6e]
Successors: [0x1be, 0x1c2]
---
0x161 JUMPDEST
0x162 PUSH1 0x0
0x164 DUP1
0x165 PUSH1 0x0
0x167 DUP1
0x168 PUSH1 0x0
0x16a DUP1
0x16b SWAP1
0x16c SLOAD
0x16d SWAP1
0x16e PUSH2 0x100
0x171 EXP
0x172 SWAP1
0x173 DIV
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 CALLER
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 EQ
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x161: JUMPDEST 
0x162: V75 = 0x0
0x165: V76 = 0x0
0x168: V77 = 0x0
0x16c: V78 = S[0x0]
0x16e: V79 = 0x100
0x171: V80 = EXP 0x100 0x0
0x173: V81 = DIV V78 0x1
0x174: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x18a: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1a0: V86 = CALLER
0x1a1: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x1b7: V89 = EQ V88 V85
0x1b8: V90 = ISZERO V89
0x1b9: V91 = ISZERO V90
0x1ba: V92 = 0x1c2
0x1bd: JUMPI 0x1c2 V91
---
Entry stack: [V11, 0x9a, V31]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x9a, V31, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x161]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V93 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a, V31, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V31, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x1c2
[0x1c2:0x295]
---
Predecessors: [0x161]
Successors: [0x296, 0x29a]
---
0x1c2 JUMPDEST
0x1c3 ADDRESS
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da BALANCE
0x1db SWAP4
0x1dc POP
0x1dd DUP5
0x1de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f3 AND
0x1f4 CALLVALUE
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 DUP1
0x1f9 DUP1
0x1fa PUSH32 0x696e697428290000000000000000000000000000000000000000000000000000
0x21b DUP2
0x21c MSTORE
0x21d POP
0x21e PUSH1 0x6
0x220 ADD
0x221 SWAP1
0x222 POP
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP2
0x228 SUB
0x229 SWAP1
0x22a SHA3
0x22b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x249 SWAP1
0x24a DIV
0x24b SWAP1
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP3
0x250 PUSH4 0xffffffff
0x255 AND
0x256 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x274 MUL
0x275 DUP2
0x276 MSTORE
0x277 PUSH1 0x4
0x279 ADD
0x27a PUSH1 0x0
0x27c PUSH1 0x40
0x27e MLOAD
0x27f DUP1
0x280 DUP4
0x281 SUB
0x282 DUP2
0x283 DUP6
0x284 DUP9
0x285 PUSH2 0x8796
0x288 GAS
0x289 SUB
0x28a CALL
0x28b SWAP4
0x28c POP
0x28d POP
0x28e POP
0x28f POP
0x290 ISZERO
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V94 = ADDRESS
0x1c4: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1da: V97 = BALANCE V96
0x1de: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x1f4: V100 = CALLVALUE
0x1f5: V101 = 0x40
0x1f7: V102 = M[0x40]
0x1fa: V103 = 0x696e697428290000000000000000000000000000000000000000000000000000
0x21c: M[V102] = 0x696e697428290000000000000000000000000000000000000000000000000000
0x21e: V104 = 0x6
0x220: V105 = ADD 0x6 V102
0x223: V106 = 0x40
0x225: V107 = M[0x40]
0x228: V108 = SUB V105 V107
0x22a: V109 = SHA3 V107 V108
0x22b: V110 = 0x100000000000000000000000000000000000000000000000000000000
0x24a: V111 = DIV V109 0x100000000000000000000000000000000000000000000000000000000
0x24c: V112 = 0x40
0x24e: V113 = M[0x40]
0x250: V114 = 0xffffffff
0x255: V115 = AND 0xffffffff V111
0x256: V116 = 0x100000000000000000000000000000000000000000000000000000000
0x274: V117 = MUL 0x100000000000000000000000000000000000000000000000000000000 V115
0x276: M[V113] = V117
0x277: V118 = 0x4
0x279: V119 = ADD 0x4 V113
0x27a: V120 = 0x0
0x27c: V121 = 0x40
0x27e: V122 = M[0x40]
0x281: V123 = SUB V119 V122
0x285: V124 = 0x8796
0x288: V125 = GAS
0x289: V126 = SUB V125 0x8796
0x28a: V127 = CALL V126 V99 V100 V122 V123 V122 0x0
0x290: V128 = ISZERO V127
0x291: V129 = ISZERO V128
0x292: V130 = 0x29a
0x295: JUMPI 0x29a V129
---
Entry stack: [V11, 0x9a, V31, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, V97, S2, S1, S0]
Exit stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x1c2]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V131 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0]

================================

Block 0x29a
[0x29a:0x360]
---
Predecessors: [0x1c2]
Successors: [0x361, 0x365]
---
0x29a JUMPDEST
0x29b DUP5
0x29c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b1 AND
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 DUP1
0x2b7 PUSH32 0x53657452656c65617365446174652875696e7432353629000000000000000000
0x2d8 DUP2
0x2d9 MSTORE
0x2da POP
0x2db PUSH1 0x17
0x2dd ADD
0x2de SWAP1
0x2df POP
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 DUP1
0x2e4 SWAP2
0x2e5 SUB
0x2e6 SWAP1
0x2e7 SHA3
0x2e8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x306 SWAP1
0x307 DIV
0x308 PUSH1 0x1
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP3
0x30e PUSH4 0xffffffff
0x313 AND
0x314 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x332 MUL
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x4
0x337 ADD
0x338 DUP1
0x339 DUP3
0x33a PUSH1 0xff
0x33c AND
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 SWAP2
0x343 POP
0x344 POP
0x345 PUSH1 0x0
0x347 PUSH1 0x40
0x349 MLOAD
0x34a DUP1
0x34b DUP4
0x34c SUB
0x34d DUP2
0x34e PUSH1 0x0
0x350 DUP8
0x351 PUSH2 0x646e
0x354 GAS
0x355 SUB
0x356 CALL
0x357 SWAP3
0x358 POP
0x359 POP
0x35a POP
0x35b ISZERO
0x35c ISZERO
0x35d PUSH2 0x365
0x360 JUMPI
---
0x29a: JUMPDEST 
0x29c: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x2b2: V134 = 0x40
0x2b4: V135 = M[0x40]
0x2b7: V136 = 0x53657452656c65617365446174652875696e7432353629000000000000000000
0x2d9: M[V135] = 0x53657452656c65617365446174652875696e7432353629000000000000000000
0x2db: V137 = 0x17
0x2dd: V138 = ADD 0x17 V135
0x2e0: V139 = 0x40
0x2e2: V140 = M[0x40]
0x2e5: V141 = SUB V138 V140
0x2e7: V142 = SHA3 V140 V141
0x2e8: V143 = 0x100000000000000000000000000000000000000000000000000000000
0x307: V144 = DIV V142 0x100000000000000000000000000000000000000000000000000000000
0x308: V145 = 0x1
0x30a: V146 = 0x40
0x30c: V147 = M[0x40]
0x30e: V148 = 0xffffffff
0x313: V149 = AND 0xffffffff V144
0x314: V150 = 0x100000000000000000000000000000000000000000000000000000000
0x332: V151 = MUL 0x100000000000000000000000000000000000000000000000000000000 V149
0x334: M[V147] = V151
0x335: V152 = 0x4
0x337: V153 = ADD 0x4 V147
0x33a: V154 = 0xff
0x33c: V155 = AND 0xff 0x1
0x33e: M[V153] = 0x1
0x33f: V156 = 0x20
0x341: V157 = ADD 0x20 V153
0x345: V158 = 0x0
0x347: V159 = 0x40
0x349: V160 = M[0x40]
0x34c: V161 = SUB V157 V160
0x34e: V162 = 0x0
0x351: V163 = 0x646e
0x354: V164 = GAS
0x355: V165 = SUB V164 0x646e
0x356: V166 = CALL V165 V133 0x0 V160 V161 V160 0x0
0x35b: V167 = ISZERO V166
0x35c: V168 = ISZERO V167
0x35d: V169 = 0x365
0x360: JUMPI 0x365 V168
---
Entry stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0]

================================

Block 0x361
[0x361:0x364]
---
Predecessors: [0x29a]
Successors: []
---
0x361 PUSH1 0x0
0x363 DUP1
0x364 REVERT
---
0x361: V170 = 0x0
0x364: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0]

================================

Block 0x365
[0x365:0x385]
---
Predecessors: [0x29a]
Successors: [0x386, 0x387]
---
0x365 JUMPDEST
0x366 CALLVALUE
0x367 DUP6
0x368 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37d AND
0x37e BALANCE
0x37f DUP2
0x380 ISZERO
0x381 ISZERO
0x382 PUSH2 0x387
0x385 JUMPI
---
0x365: JUMPDEST 
0x366: V171 = CALLVALUE
0x368: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x37d: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x37e: V174 = BALANCE V173
0x380: V175 = ISZERO V171
0x381: V176 = ISZERO V175
0x382: V177 = 0x387
0x385: JUMPI 0x387 V176
---
Entry stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V171, V174]
Exit stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0, V171, V174]

================================

Block 0x386
[0x386:0x386]
---
Predecessors: [0x365]
Successors: []
---
0x386 INVALID
---
0x386: INVALID 
---
Entry stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0, V171, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0, V171, V174]

================================

Block 0x387
[0x387:0x3ac]
---
Predecessors: [0x365]
Successors: [0x3ad]
---
0x387 JUMPDEST
0x388 DIV
0x389 SWAP3
0x38a POP
0x38b DUP3
0x38c CALLVALUE
0x38d MUL
0x38e DUP6
0x38f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a4 AND
0x3a5 BALANCE
0x3a6 SUB
0x3a7 SWAP2
0x3a8 POP
0x3a9 PUSH1 0x0
0x3ab SWAP1
0x3ac POP
---
0x387: JUMPDEST 
0x388: V178 = DIV V174 V171
0x38c: V179 = CALLVALUE
0x38d: V180 = MUL V179 V178
0x38f: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x3a5: V183 = BALANCE V182
0x3a6: V184 = SUB V183 V180
0x3a9: V185 = 0x0
---
Entry stack: [V11, 0x9a, V31, V97, 0x0, 0x0, 0x0, V171, V174]
Stack pops: 7
Stack additions: [S6, S5, V178, V184, 0x0]
Exit stack: [V11, 0x9a, V31, V97, V178, V184, 0x0]

================================

Block 0x3ad
[0x3ad:0x3b5]
---
Predecessors: [0x387, 0x47c]
Successors: [0x3b6, 0x489]
---
0x3ad JUMPDEST
0x3ae DUP3
0x3af DUP2
0x3b0 LT
0x3b1 ISZERO
0x3b2 PUSH2 0x489
0x3b5 JUMPI
---
0x3ad: JUMPDEST 
0x3b0: V186 = LT S0 V178
0x3b1: V187 = ISZERO V186
0x3b2: V188 = 0x489
0x3b5: JUMPI 0x489 V187
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9a, V31, V97, V178, V184, S0]

================================

Block 0x3b6
[0x3b6:0x477]
---
Predecessors: [0x3ad]
Successors: [0x478, 0x47c]
---
0x3b6 DUP5
0x3b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cc AND
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 DUP1
0x3d1 DUP1
0x3d2 PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0x3f3 DUP2
0x3f4 MSTORE
0x3f5 POP
0x3f6 PUSH1 0x11
0x3f8 ADD
0x3f9 SWAP1
0x3fa POP
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe DUP1
0x3ff SWAP2
0x400 SUB
0x401 SWAP1
0x402 SHA3
0x403 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x421 SWAP1
0x422 DIV
0x423 CALLVALUE
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP3
0x428 PUSH4 0xffffffff
0x42d AND
0x42e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x44c MUL
0x44d DUP2
0x44e MSTORE
0x44f PUSH1 0x4
0x451 ADD
0x452 DUP1
0x453 DUP3
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 SWAP2
0x45a POP
0x45b POP
0x45c PUSH1 0x0
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP1
0x462 DUP4
0x463 SUB
0x464 DUP2
0x465 PUSH1 0x0
0x467 DUP8
0x468 PUSH2 0x646e
0x46b GAS
0x46c SUB
0x46d CALL
0x46e SWAP3
0x46f POP
0x470 POP
0x471 POP
0x472 ISZERO
0x473 ISZERO
0x474 PUSH2 0x47c
0x477 JUMPI
---
0x3b7: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cc: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x3cd: V191 = 0x40
0x3cf: V192 = M[0x40]
0x3d2: V193 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x3f4: M[V192] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x3f6: V194 = 0x11
0x3f8: V195 = ADD 0x11 V192
0x3fb: V196 = 0x40
0x3fd: V197 = M[0x40]
0x400: V198 = SUB V195 V197
0x402: V199 = SHA3 V197 V198
0x403: V200 = 0x100000000000000000000000000000000000000000000000000000000
0x422: V201 = DIV V199 0x100000000000000000000000000000000000000000000000000000000
0x423: V202 = CALLVALUE
0x424: V203 = 0x40
0x426: V204 = M[0x40]
0x428: V205 = 0xffffffff
0x42d: V206 = AND 0xffffffff V201
0x42e: V207 = 0x100000000000000000000000000000000000000000000000000000000
0x44c: V208 = MUL 0x100000000000000000000000000000000000000000000000000000000 V206
0x44e: M[V204] = V208
0x44f: V209 = 0x4
0x451: V210 = ADD 0x4 V204
0x455: M[V210] = V202
0x456: V211 = 0x20
0x458: V212 = ADD 0x20 V210
0x45c: V213 = 0x0
0x45e: V214 = 0x40
0x460: V215 = M[0x40]
0x463: V216 = SUB V212 V215
0x465: V217 = 0x0
0x468: V218 = 0x646e
0x46b: V219 = GAS
0x46c: V220 = SUB V219 0x646e
0x46d: V221 = CALL V220 V190 0x0 V215 V216 V215 0x0
0x472: V222 = ISZERO V221
0x473: V223 = ISZERO V222
0x474: V224 = 0x47c
0x477: JUMPI 0x47c V223
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9a, V31, V97, V178, V184, S0]

================================

Block 0x478
[0x478:0x47b]
---
Predecessors: [0x3b6]
Successors: []
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
---
0x478: V225 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V31, V97, V178, V184, S0]

================================

Block 0x47c
[0x47c:0x488]
---
Predecessors: [0x3b6]
Successors: [0x3ad]
---
0x47c JUMPDEST
0x47d DUP1
0x47e DUP1
0x47f PUSH1 0x1
0x481 ADD
0x482 SWAP2
0x483 POP
0x484 POP
0x485 PUSH2 0x3ad
0x488 JUMP
---
0x47c: JUMPDEST 
0x47f: V226 = 0x1
0x481: V227 = ADD 0x1 S0
0x485: V228 = 0x3ad
0x488: JUMP 0x3ad
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 1
Stack additions: [V227]
Exit stack: [V11, 0x9a, V31, V97, V178, V184, V227]

================================

Block 0x489
[0x489:0x566]
---
Predecessors: [0x3ad]
Successors: [0x567, 0x56b]
---
0x489 JUMPDEST
0x48a DUP5
0x48b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a0 AND
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 DUP1
0x4a5 DUP1
0x4a6 PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0x4c7 DUP2
0x4c8 MSTORE
0x4c9 POP
0x4ca PUSH1 0x11
0x4cc ADD
0x4cd SWAP1
0x4ce POP
0x4cf PUSH1 0x40
0x4d1 MLOAD
0x4d2 DUP1
0x4d3 SWAP2
0x4d4 SUB
0x4d5 SWAP1
0x4d6 SHA3
0x4d7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4f5 SWAP1
0x4f6 DIV
0x4f7 DUP4
0x4f8 PUSH1 0x40
0x4fa MLOAD
0x4fb DUP3
0x4fc PUSH4 0xffffffff
0x501 AND
0x502 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x520 MUL
0x521 DUP2
0x522 MSTORE
0x523 PUSH1 0x4
0x525 ADD
0x526 DUP1
0x527 DUP3
0x528 DUP2
0x529 MSTORE
0x52a PUSH1 0x20
0x52c ADD
0x52d SWAP2
0x52e POP
0x52f POP
0x530 PUSH1 0x0
0x532 PUSH1 0x40
0x534 MLOAD
0x535 DUP1
0x536 DUP4
0x537 SUB
0x538 DUP2
0x539 PUSH1 0x0
0x53b DUP8
0x53c PUSH2 0x646e
0x53f GAS
0x540 SUB
0x541 CALL
0x542 SWAP3
0x543 POP
0x544 POP
0x545 POP
0x546 POP
0x547 DUP4
0x548 ADDRESS
0x549 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55e AND
0x55f BALANCE
0x560 GT
0x561 ISZERO
0x562 ISZERO
0x563 PUSH2 0x56b
0x566 JUMPI
---
0x489: JUMPDEST 
0x48b: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a0: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x4a1: V231 = 0x40
0x4a3: V232 = M[0x40]
0x4a6: V233 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x4c8: M[V232] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x4ca: V234 = 0x11
0x4cc: V235 = ADD 0x11 V232
0x4cf: V236 = 0x40
0x4d1: V237 = M[0x40]
0x4d4: V238 = SUB V235 V237
0x4d6: V239 = SHA3 V237 V238
0x4d7: V240 = 0x100000000000000000000000000000000000000000000000000000000
0x4f6: V241 = DIV V239 0x100000000000000000000000000000000000000000000000000000000
0x4f8: V242 = 0x40
0x4fa: V243 = M[0x40]
0x4fc: V244 = 0xffffffff
0x501: V245 = AND 0xffffffff V241
0x502: V246 = 0x100000000000000000000000000000000000000000000000000000000
0x520: V247 = MUL 0x100000000000000000000000000000000000000000000000000000000 V245
0x522: M[V243] = V247
0x523: V248 = 0x4
0x525: V249 = ADD 0x4 V243
0x529: M[V249] = V184
0x52a: V250 = 0x20
0x52c: V251 = ADD 0x20 V249
0x530: V252 = 0x0
0x532: V253 = 0x40
0x534: V254 = M[0x40]
0x537: V255 = SUB V251 V254
0x539: V256 = 0x0
0x53c: V257 = 0x646e
0x53f: V258 = GAS
0x540: V259 = SUB V258 0x646e
0x541: V260 = CALL V259 V230 0x0 V254 V255 V254 0x0
0x548: V261 = ADDRESS
0x549: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x55e: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x55f: V264 = BALANCE V263
0x560: V265 = GT V264 V97
0x561: V266 = ISZERO V265
0x562: V267 = ISZERO V266
0x563: V268 = 0x56b
0x566: JUMPI 0x56b V267
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9a, V31, V97, V178, V184, S0]

================================

Block 0x567
[0x567:0x56a]
---
Predecessors: [0x489]
Successors: []
---
0x567 PUSH1 0x0
0x569 DUP1
0x56a REVERT
---
0x567: V269 = 0x0
0x56a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V31, V97, V178, V184, S0]

================================

Block 0x56b
[0x56b:0x5bd]
---
Predecessors: [0x489]
Successors: [0x5be, 0x5c2]
---
0x56b JUMPDEST
0x56c CALLER
0x56d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x582 AND
0x583 PUSH2 0x8fc
0x586 ADDRESS
0x587 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59c AND
0x59d BALANCE
0x59e SWAP1
0x59f DUP2
0x5a0 ISZERO
0x5a1 MUL
0x5a2 SWAP1
0x5a3 PUSH1 0x40
0x5a5 MLOAD
0x5a6 PUSH1 0x0
0x5a8 PUSH1 0x40
0x5aa MLOAD
0x5ab DUP1
0x5ac DUP4
0x5ad SUB
0x5ae DUP2
0x5af DUP6
0x5b0 DUP9
0x5b1 DUP9
0x5b2 CALL
0x5b3 SWAP4
0x5b4 POP
0x5b5 POP
0x5b6 POP
0x5b7 POP
0x5b8 ISZERO
0x5b9 ISZERO
0x5ba PUSH2 0x5c2
0x5bd JUMPI
---
0x56b: JUMPDEST 
0x56c: V270 = CALLER
0x56d: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x582: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x583: V273 = 0x8fc
0x586: V274 = ADDRESS
0x587: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x59c: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x59d: V277 = BALANCE V276
0x5a0: V278 = ISZERO V277
0x5a1: V279 = MUL V278 0x8fc
0x5a3: V280 = 0x40
0x5a5: V281 = M[0x40]
0x5a6: V282 = 0x0
0x5a8: V283 = 0x40
0x5aa: V284 = M[0x40]
0x5ad: V285 = SUB V281 V284
0x5b2: V286 = CALL V279 V272 V277 V284 V285 V284 0x0
0x5b8: V287 = ISZERO V286
0x5b9: V288 = ISZERO V287
0x5ba: V289 = 0x5c2
0x5bd: JUMPI 0x5c2 V288
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V31, V97, V178, V184, S0]

================================

Block 0x5be
[0x5be:0x5c1]
---
Predecessors: [0x56b]
Successors: []
---
0x5be PUSH1 0x0
0x5c0 DUP1
0x5c1 REVERT
---
0x5be: V290 = 0x0
0x5c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V31, V97, V178, V184, S0]

================================

Block 0x5c2
[0x5c2:0x5c8]
---
Predecessors: [0x56b]
Successors: [0x9a]
---
0x5c2 JUMPDEST
0x5c3 POP
0x5c4 POP
0x5c5 POP
0x5c6 POP
0x5c7 POP
0x5c8 JUMP
---
0x5c2: JUMPDEST 
0x5c8: JUMP 0x9a
---
Entry stack: [V11, 0x9a, V31, V97, V178, V184, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c9
[0x5c9:0x5ed]
---
Predecessors: [0xa7]
Successors: [0xaf]
---
0x5c9 JUMPDEST
0x5ca PUSH1 0x0
0x5cc DUP1
0x5cd SWAP1
0x5ce SLOAD
0x5cf SWAP1
0x5d0 PUSH2 0x100
0x5d3 EXP
0x5d4 SWAP1
0x5d5 DIV
0x5d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5eb AND
0x5ec DUP2
0x5ed JUMP
---
0x5c9: JUMPDEST 
0x5ca: V291 = 0x0
0x5ce: V292 = S[0x0]
0x5d0: V293 = 0x100
0x5d3: V294 = EXP 0x100 0x0
0x5d5: V295 = DIV V292 0x1
0x5d6: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x5eb: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x5ed: JUMP 0xaf
---
Entry stack: [V11, 0xaf]
Stack pops: 1
Stack additions: [S0, V297]
Exit stack: [V11, 0xaf, V297]

================================

Block 0x5ee
[0x5ee:0x619]
---
Predecessors: []
Successors: []
---
0x5ee STOP
0x5ef LOG1
0x5f0 PUSH6 0x627a7a723058
0x5f7 SHA3
0x5f8 PUSH28 0xd7d55f67236e1b3d7482c901ddccabf7ef88dabb2a288f0eebc10faa
0x615 MISSING 0xe7
0x616 SLOAD
0x617 MISSING 0xf6
0x618 STOP
0x619 MISSING 0x29
---
0x5ee: STOP 
0x5ef: LOG S0 S1 S2
0x5f0: V298 = 0x627a7a723058
0x5f7: V299 = SHA3 0x627a7a723058 S3
0x5f8: V300 = 0xd7d55f67236e1b3d7482c901ddccabf7ef88dabb2a288f0eebc10faa
0x615: MISSING 0xe7
0x616: V301 = S[S0]
0x617: MISSING 0xf6
0x618: STOP 
0x619: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd7d55f67236e1b3d7482c901ddccabf7ef88dabb2a288f0eebc10faa, V299, V301]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x59
Exit block: 0x6c
Body: 0x59, 0x60, 0x64, 0x6c, 0xf1

Function 1:
Public function signature: 0xa2b2cad2
Entry block: 0x6e
Exit block: 0x9a
Body: 0x6e, 0x9a, 0x161, 0x1be, 0x1c2, 0x296, 0x29a, 0x361, 0x365, 0x386, 0x387, 0x3ad, 0x3b6, 0x478, 0x47c, 0x489, 0x567, 0x56b, 0x5be, 0x5c2

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x9c
Exit block: 0xaf
Body: 0x9c, 0xa3, 0xa7, 0xaf, 0x5c9

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

