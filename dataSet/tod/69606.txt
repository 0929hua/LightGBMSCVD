Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x33f707d1
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x33f707d1
0x3c: V13 = EQ 0x33f707d1 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7f]
---
0x41 DUP1
0x42 PUSH4 0x367c1a67
0x47 EQ
0x48 PUSH2 0x7f
0x4b JUMPI
---
0x42: V15 = 0x367c1a67
0x47: V16 = EQ 0x367c1a67 V11
0x48: V17 = 0x7f
0x4b: JUMPI 0x7f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x94]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x94
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x94
0x56: JUMPI 0x94 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x7c]
---
Predecessors: [0x5c]
Successors: [0xe9]
---
0x67 JUMPDEST
0x68 PUSH2 0x7d
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 SWAP2
0x76 SWAP1
0x77 POP
0x78 POP
0x79 PUSH2 0xe9
0x7c JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x7d
0x6b: V27 = 0x4
0x6f: V28 = CALLDATALOAD 0x4
0x71: V29 = 0x20
0x73: V30 = ADD 0x20 0x4
0x79: V31 = 0xe9
0x7c: JUMP 0xe9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7d, V28]
Exit stack: [V11, 0x7d, V28]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x184]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f
[0x7f:0x85]
---
Predecessors: [0x41]
Successors: [0x86, 0x8a]
---
0x7f JUMPDEST
0x80 CALLVALUE
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x7f: JUMPDEST 
0x80: V32 = CALLVALUE
0x81: V33 = ISZERO V32
0x82: V34 = 0x8a
0x85: JUMPI 0x8a V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7f]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V35 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x7f]
Successors: [0x187]
---
0x8a JUMPDEST
0x8b PUSH2 0x92
0x8e PUSH2 0x187
0x91 JUMP
---
0x8a: JUMPDEST 
0x8b: V36 = 0x92
0x8e: V37 = 0x187
0x91: JUMP 0x187
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x92]
Exit stack: [V11, 0x92]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: []
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x94
[0x94:0x9a]
---
Predecessors: [0x4c]
Successors: [0x9b, 0x9f]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x94: JUMPDEST 
0x95: V38 = CALLVALUE
0x96: V39 = ISZERO V38
0x97: V40 = 0x9f
0x9a: JUMPI 0x9f V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x94]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V41 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa6]
---
Predecessors: [0x94]
Successors: [0x21c]
---
0x9f JUMPDEST
0xa0 PUSH2 0xa7
0xa3 PUSH2 0x21c
0xa6 JUMP
---
0x9f: JUMPDEST 
0xa0: V42 = 0xa7
0xa3: V43 = 0x21c
0xa6: JUMP 0x21c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa7]
Exit stack: [V11, 0xa7]

================================

Block 0xa7
[0xa7:0xe8]
---
Predecessors: [0x21c]
Successors: []
---
0xa7 JUMPDEST
0xa8 PUSH1 0x40
0xaa MLOAD
0xab DUP1
0xac DUP3
0xad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2 AND
0xc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8 AND
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP2
0xdf POP
0xe0 POP
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 DUP1
0xe5 SWAP2
0xe6 SUB
0xe7 SWAP1
0xe8 RETURN
---
0xa7: JUMPDEST 
0xa8: V44 = 0x40
0xaa: V45 = M[0x40]
0xad: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0xc3: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xda: M[V45] = V49
0xdb: V50 = 0x20
0xdd: V51 = ADD 0x20 V45
0xe1: V52 = 0x40
0xe3: V53 = M[0x40]
0xe6: V54 = SUB V51 V53
0xe8: RETURN V53 V54
---
Entry stack: [V11, 0xa7, V121]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa7]

================================

Block 0xe9
[0xe9:0x13f]
---
Predecessors: [0x67]
Successors: [0x140, 0x144]
---
0xe9 JUMPDEST
0xea PUSH1 0x0
0xec DUP1
0xed SWAP1
0xee SLOAD
0xef SWAP1
0xf0 PUSH2 0x100
0xf3 EXP
0xf4 SWAP1
0xf5 DIV
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121 AND
0x122 CALLER
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 EQ
0x13a ISZERO
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0xe9: JUMPDEST 
0xea: V55 = 0x0
0xee: V56 = S[0x0]
0xf0: V57 = 0x100
0xf3: V58 = EXP 0x100 0x0
0xf5: V59 = DIV V56 0x1
0xf6: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x10c: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x121: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x122: V64 = CALLER
0x123: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x139: V67 = EQ V66 V63
0x13a: V68 = ISZERO V67
0x13b: V69 = ISZERO V68
0x13c: V70 = 0x144
0x13f: JUMPI 0x144 V69
---
Entry stack: [V11, 0x7d, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, V28]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0xe9]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V71 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7d, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, V28]

================================

Block 0x144
[0x144:0x17f]
---
Predecessors: [0xe9]
Successors: [0x180, 0x184]
---
0x144 JUMPDEST
0x145 CALLER
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c PUSH2 0x8fc
0x15f DUP3
0x160 SWAP1
0x161 DUP2
0x162 ISZERO
0x163 MUL
0x164 SWAP1
0x165 PUSH1 0x40
0x167 MLOAD
0x168 PUSH1 0x0
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e DUP4
0x16f SUB
0x170 DUP2
0x171 DUP6
0x172 DUP9
0x173 DUP9
0x174 CALL
0x175 SWAP4
0x176 POP
0x177 POP
0x178 POP
0x179 POP
0x17a ISZERO
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x144: JUMPDEST 
0x145: V72 = CALLER
0x146: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x15c: V75 = 0x8fc
0x162: V76 = ISZERO V28
0x163: V77 = MUL V76 0x8fc
0x165: V78 = 0x40
0x167: V79 = M[0x40]
0x168: V80 = 0x0
0x16a: V81 = 0x40
0x16c: V82 = M[0x40]
0x16f: V83 = SUB V79 V82
0x174: V84 = CALL V77 V74 V28 V82 V83 V82 0x0
0x17a: V85 = ISZERO V84
0x17b: V86 = ISZERO V85
0x17c: V87 = 0x184
0x17f: JUMPI 0x184 V86
---
Entry stack: [V11, 0x7d, V28]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7d, V28]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x144]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V88 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7d, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, V28]

================================

Block 0x184
[0x184:0x186]
---
Predecessors: [0x144]
Successors: [0x7d]
---
0x184 JUMPDEST
0x185 POP
0x186 JUMP
---
0x184: JUMPDEST 
0x186: JUMP 0x7d
---
Entry stack: [V11, 0x7d, V28]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x187
[0x187:0x1dd]
---
Predecessors: [0x8a]
Successors: [0x1de, 0x1e2]
---
0x187 JUMPDEST
0x188 PUSH1 0x0
0x18a DUP1
0x18b SWAP1
0x18c SLOAD
0x18d SWAP1
0x18e PUSH2 0x100
0x191 EXP
0x192 SWAP1
0x193 DIV
0x194 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a9 AND
0x1aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bf AND
0x1c0 CALLER
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 EQ
0x1d8 ISZERO
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x187: JUMPDEST 
0x188: V89 = 0x0
0x18c: V90 = S[0x0]
0x18e: V91 = 0x100
0x191: V92 = EXP 0x100 0x0
0x193: V93 = DIV V90 0x1
0x194: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1aa: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1c0: V98 = CALLER
0x1c1: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1d7: V101 = EQ V100 V97
0x1d8: V102 = ISZERO V101
0x1d9: V103 = ISZERO V102
0x1da: V104 = 0x1e2
0x1dd: JUMPI 0x1e2 V103
---
Entry stack: [V11, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x187]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V105 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92]

================================

Block 0x1e2
[0x1e2:0x21b]
---
Predecessors: [0x187]
Successors: []
---
0x1e2 JUMPDEST
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 SWAP1
0x1e7 SLOAD
0x1e8 SWAP1
0x1e9 PUSH2 0x100
0x1ec EXP
0x1ed SWAP1
0x1ee DIV
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b SELFDESTRUCT
---
0x1e2: JUMPDEST 
0x1e3: V106 = 0x0
0x1e7: V107 = S[0x0]
0x1e9: V108 = 0x100
0x1ec: V109 = EXP 0x100 0x0
0x1ee: V110 = DIV V107 0x1
0x1ef: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x205: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x21b: SELFDESTRUCT V114
---
Entry stack: [V11, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92]

================================

Block 0x21c
[0x21c:0x240]
---
Predecessors: [0x9f]
Successors: [0xa7]
---
0x21c JUMPDEST
0x21d PUSH1 0x0
0x21f DUP1
0x220 SWAP1
0x221 SLOAD
0x222 SWAP1
0x223 PUSH2 0x100
0x226 EXP
0x227 SWAP1
0x228 DIV
0x229 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23e AND
0x23f DUP2
0x240 JUMP
---
0x21c: JUMPDEST 
0x21d: V115 = 0x0
0x221: V116 = S[0x0]
0x223: V117 = 0x100
0x226: V118 = EXP 0x100 0x0
0x228: V119 = DIV V116 0x1
0x229: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x240: JUMP 0xa7
---
Entry stack: [V11, 0xa7]
Stack pops: 1
Stack additions: [S0, V121]
Exit stack: [V11, 0xa7, V121]

================================

Block 0x241
[0x241:0x27c]
---
Predecessors: []
Successors: []
---
0x241 STOP
0x242 LOG1
0x243 PUSH6 0x627a7a723058
0x24a SHA3
0x24b DUP2
0x24c PUSH17 0x593dbc9b8fcde8d414c210f83d3c92d81d
0x25e EXP
0x25f MISSING 0x4b
0x260 LOG1
0x261 MISSING 0x2c
0x262 MISSING 0xde
0x263 STATICCALL
0x264 PUSH24 0x7146c6ad30a40029
---
0x241: STOP 
0x242: LOG S0 S1 S2
0x243: V122 = 0x627a7a723058
0x24a: V123 = SHA3 0x627a7a723058 S3
0x24c: V124 = 0x593dbc9b8fcde8d414c210f83d3c92d81d
0x25e: V125 = EXP 0x593dbc9b8fcde8d414c210f83d3c92d81d S4
0x25f: MISSING 0x4b
0x260: LOG S0 S1 S2
0x261: MISSING 0x2c
0x262: MISSING 0xde
0x263: V126 = STATICCALL S0 S1 S2 S3 S4 S5
0x264: V127 = 0x7146c6ad30a40029
---
Entry stack: []
Stack pops: 0
Stack additions: [V125, V123, S4, 0x7146c6ad30a40029, V126]
Exit stack: []

================================

Function 0:
Public function signature: 0x33f707d1
Entry block: 0x5c
Exit block: 0x7d
Body: 0x5c, 0x63, 0x67, 0x7d, 0xe9, 0x140, 0x144, 0x180, 0x184

Function 1:
Public function signature: 0x367c1a67
Entry block: 0x7f
Exit block: 0x1e2
Body: 0x7f, 0x86, 0x8a, 0x187, 0x1de, 0x1e2

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x94
Exit block: 0xa7
Body: 0x94, 0x9b, 0x9f, 0xa7, 0x21c

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

