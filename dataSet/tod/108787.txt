Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe0
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe0
0xa: JUMPI 0xe0 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xe2]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x13faede6
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xe2
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x13faede6
0x20: V14 = EQ V12 0x13faede6
0x21: V15 = 0xe2
0x24: JUMPI 0xe2 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x104]
---
0x25 DUP1
0x26 PUSH4 0x142769aa
0x2b EQ
0x2c PUSH2 0x104
0x2f JUMPI
---
0x26: V16 = 0x142769aa
0x2b: V17 = EQ 0x142769aa V12
0x2c: V18 = 0x104
0x2f: JUMPI 0x104 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x123]
---
0x30 DUP1
0x31 PUSH4 0x171fcb5a
0x36 EQ
0x37 PUSH2 0x123
0x3a JUMPI
---
0x31: V19 = 0x171fcb5a
0x36: V20 = EQ 0x171fcb5a V12
0x37: V21 = 0x123
0x3a: JUMPI 0x123 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x139]
---
0x3b DUP1
0x3c PUSH4 0x1fe9eabc
0x41 EQ
0x42 PUSH2 0x139
0x45 JUMPI
---
0x3c: V22 = 0x1fe9eabc
0x41: V23 = EQ 0x1fe9eabc V12
0x42: V24 = 0x139
0x45: JUMPI 0x139 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x160]
---
0x46 DUP1
0x47 PUSH4 0x4173ffbc
0x4c EQ
0x4d PUSH2 0x160
0x50 JUMPI
---
0x47: V25 = 0x4173ffbc
0x4c: V26 = EQ 0x4173ffbc V12
0x4d: V27 = 0x160
0x50: JUMPI 0x160 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x188]
---
0x51 DUP1
0x52 PUSH4 0x41c0e1b5
0x57 EQ
0x58 PUSH2 0x188
0x5b JUMPI
---
0x52: V28 = 0x41c0e1b5
0x57: V29 = EQ 0x41c0e1b5 V12
0x58: V30 = 0x188
0x5b: JUMPI 0x188 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x19a]
---
0x5c DUP1
0x5d PUSH4 0x44a0d68a
0x62 EQ
0x63 PUSH2 0x19a
0x66 JUMPI
---
0x5d: V31 = 0x44a0d68a
0x62: V32 = EQ 0x44a0d68a V12
0x63: V33 = 0x19a
0x66: JUMPI 0x19a V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c1]
---
0x67 DUP1
0x68 PUSH4 0x6ac5db19
0x6d EQ
0x6e PUSH2 0x1c1
0x71 JUMPI
---
0x68: V34 = 0x6ac5db19
0x6d: V35 = EQ 0x6ac5db19 V12
0x6e: V36 = 0x1c1
0x71: JUMPI 0x1c1 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1e3]
---
0x72 DUP1
0x73 PUSH4 0x8da5cb5b
0x78 EQ
0x79 PUSH2 0x1e3
0x7c JUMPI
---
0x73: V37 = 0x8da5cb5b
0x78: V38 = EQ 0x8da5cb5b V12
0x79: V39 = 0x1e3
0x7c: JUMPI 0x1e3 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x20f]
---
0x7d DUP1
0x7e PUSH4 0x936315d6
0x83 EQ
0x84 PUSH2 0x20f
0x87 JUMPI
---
0x7e: V40 = 0x936315d6
0x83: V41 = EQ 0x936315d6 V12
0x84: V42 = 0x20f
0x87: JUMPI 0x20f V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x264]
---
0x88 DUP1
0x89 PUSH4 0x942ea466
0x8e EQ
0x8f PUSH2 0x264
0x92 JUMPI
---
0x89: V43 = 0x942ea466
0x8e: V44 = EQ 0x942ea466 V12
0x8f: V45 = 0x264
0x92: JUMPI 0x264 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2af]
---
0x93 DUP1
0x94 PUSH4 0x9edf42ff
0x99 EQ
0x9a PUSH2 0x2af
0x9d JUMPI
---
0x94: V46 = 0x9edf42ff
0x99: V47 = EQ 0x9edf42ff V12
0x9a: V48 = 0x2af
0x9d: JUMPI 0x2af V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x303]
---
0x9e DUP1
0x9f PUSH4 0xccca123b
0xa4 EQ
0xa5 PUSH2 0x303
0xa8 JUMPI
---
0x9f: V49 = 0xccca123b
0xa4: V50 = EQ 0xccca123b V12
0xa5: V51 = 0x303
0xa8: JUMPI 0x303 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x329]
---
0xa9 DUP1
0xaa PUSH4 0xcf041d58
0xaf EQ
0xb0 PUSH2 0x329
0xb3 JUMPI
---
0xaa: V52 = 0xcf041d58
0xaf: V53 = EQ 0xcf041d58 V12
0xb0: V54 = 0x329
0xb3: JUMPI 0x329 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x353]
---
0xb4 DUP1
0xb5 PUSH4 0xdf32754b
0xba EQ
0xbb PUSH2 0x353
0xbe JUMPI
---
0xb5: V55 = 0xdf32754b
0xba: V56 = EQ 0xdf32754b V12
0xbb: V57 = 0x353
0xbe: JUMPI 0x353 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x365]
---
0xbf DUP1
0xc0 PUSH4 0xf1f76438
0xc5 EQ
0xc6 PUSH2 0x365
0xc9 JUMPI
---
0xc0: V58 = 0xf1f76438
0xc5: V59 = EQ 0xf1f76438 V12
0xc6: V60 = 0x365
0xc9: JUMPI 0x365 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x395]
---
0xca DUP1
0xcb PUSH4 0xf2fde38b
0xd0 EQ
0xd1 PUSH2 0x395
0xd4 JUMPI
---
0xcb: V61 = 0xf2fde38b
0xd0: V62 = EQ 0xf2fde38b V12
0xd1: V63 = 0x395
0xd4: JUMPI 0x395 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3b3]
---
0xd5 DUP1
0xd6 PUSH4 0xf3fef3a3
0xdb EQ
0xdc PUSH2 0x3b3
0xdf JUMPI
---
0xd6: V64 = 0xf3fef3a3
0xdb: V65 = EQ 0xf3fef3a3 V12
0xdc: V66 = 0x3b3
0xdf: JUMPI 0x3b3 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: [0x0, 0xd5]
Successors: []
---
0xe0 JUMPDEST
0xe1 INVALID
---
0xe0: JUMPDEST 
0xe1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0xb]
Successors: [0xe9, 0xea]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xea
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V67 = CALLVALUE
0xe4: V68 = ISZERO V67
0xe5: V69 = 0xea
0xe8: JUMPI 0xea V68
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe9
[0xe9:0xe9]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 INVALID
---
0xe9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0xe2]
Successors: [0x3e6]
---
0xea JUMPDEST
0xeb PUSH2 0xf2
0xee PUSH2 0x3e6
0xf1 JUMP
---
0xea: JUMPDEST 
0xeb: V70 = 0xf2
0xee: V71 = 0x3e6
0xf1: JUMP 0x3e6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf2]
Exit stack: [V12, 0xf2]

================================

Block 0xf2
[0xf2:0x103]
---
Predecessors: [0x3e6, 0x630, 0x6c8, 0xacb]
Successors: []
---
0xf2 JUMPDEST
0xf3 PUSH1 0x40
0xf5 DUP1
0xf6 MLOAD
0xf7 SWAP2
0xf8 DUP3
0xf9 MSTORE
0xfa MLOAD
0xfb SWAP1
0xfc DUP2
0xfd SWAP1
0xfe SUB
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP1
0x103 RETURN
---
0xf2: JUMPDEST 
0xf3: V72 = 0x40
0xf6: V73 = M[0x40]
0xf9: M[V73] = S0
0xfa: V74 = M[0x40]
0xfe: V75 = SUB V73 V74
0xff: V76 = 0x20
0x101: V77 = ADD 0x20 V75
0x103: RETURN V74 V77
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x104
[0x104:0x120]
---
Predecessors: [0x25]
Successors: [0x3ec]
---
0x104 JUMPDEST
0x105 PUSH2 0x121
0x108 PUSH1 0x1
0x10a PUSH1 0xa0
0x10c PUSH1 0x2
0x10e EXP
0x10f SUB
0x110 PUSH1 0x4
0x112 CALLDATALOAD
0x113 AND
0x114 PUSH1 0x24
0x116 CALLDATALOAD
0x117 PUSH1 0xff
0x119 PUSH1 0x44
0x11b CALLDATALOAD
0x11c AND
0x11d PUSH2 0x3ec
0x120 JUMP
---
0x104: JUMPDEST 
0x105: V78 = 0x121
0x108: V79 = 0x1
0x10a: V80 = 0xa0
0x10c: V81 = 0x2
0x10e: V82 = EXP 0x2 0xa0
0x10f: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0x110: V84 = 0x4
0x112: V85 = CALLDATALOAD 0x4
0x113: V86 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0x114: V87 = 0x24
0x116: V88 = CALLDATALOAD 0x24
0x117: V89 = 0xff
0x119: V90 = 0x44
0x11b: V91 = CALLDATALOAD 0x44
0x11c: V92 = AND V91 0xff
0x11d: V93 = 0x3ec
0x120: JUMP 0x3ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121, V86, V88, V92]
Exit stack: [V12, 0x121, V86, V88, V92]

================================

Block 0x121
[0x121:0x122]
---
Predecessors: [0x578, 0x630, 0x710, 0x824, 0x8ba, 0x98b, 0xa4b, 0xacb]
Successors: []
---
0x121 JUMPDEST
0x122 STOP
---
0x121: JUMPDEST 
0x122: STOP 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x123
[0x123:0x136]
---
Predecessors: [0x30]
Successors: [0x57d]
---
0x123 JUMPDEST
0x124 PUSH2 0x121
0x127 PUSH1 0x1
0x129 PUSH1 0xa0
0x12b PUSH1 0x2
0x12d EXP
0x12e SUB
0x12f PUSH1 0x4
0x131 CALLDATALOAD
0x132 AND
0x133 PUSH2 0x57d
0x136 JUMP
---
0x123: JUMPDEST 
0x124: V94 = 0x121
0x127: V95 = 0x1
0x129: V96 = 0xa0
0x12b: V97 = 0x2
0x12d: V98 = EXP 0x2 0xa0
0x12e: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V100 = 0x4
0x131: V101 = CALLDATALOAD 0x4
0x132: V102 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x133: V103 = 0x57d
0x136: JUMP 0x57d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121, V102]
Exit stack: [V12, 0x121, V102]

================================

Block 0x137
[0x137:0x138]
---
Predecessors: []
Successors: []
---
0x137 JUMPDEST
0x138 STOP
---
0x137: JUMPDEST 
0x138: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x3b]
Successors: [0x140, 0x141]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x141
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V104 = CALLVALUE
0x13b: V105 = ISZERO V104
0x13c: V106 = 0x141
0x13f: JUMPI 0x141 V105
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x140
[0x140:0x140]
---
Predecessors: [0x139]
Successors: []
---
0x140 INVALID
---
0x140: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x141
[0x141:0x14b]
---
Predecessors: [0x139]
Successors: [0x59c]
---
0x141 JUMPDEST
0x142 PUSH2 0x14c
0x145 PUSH1 0x4
0x147 CALLDATALOAD
0x148 PUSH2 0x59c
0x14b JUMP
---
0x141: JUMPDEST 
0x142: V107 = 0x14c
0x145: V108 = 0x4
0x147: V109 = CALLDATALOAD 0x4
0x148: V110 = 0x59c
0x14b: JUMP 0x59c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c, V109]
Exit stack: [V12, 0x14c, V109]

================================

Block 0x14c
[0x14c:0x15f]
---
Predecessors: [0x5fb, 0x6c3, 0x803, 0x87c, 0x90e]
Successors: []
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f DUP1
0x150 MLOAD
0x151 SWAP2
0x152 ISZERO
0x153 ISZERO
0x154 DUP3
0x155 MSTORE
0x156 MLOAD
0x157 SWAP1
0x158 DUP2
0x159 SWAP1
0x15a SUB
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP1
0x15f RETURN
---
0x14c: JUMPDEST 
0x14d: V111 = 0x40
0x150: V112 = M[0x40]
0x152: V113 = ISZERO {0x0, 0x1}
0x153: V114 = ISZERO V113
0x155: M[V112] = V114
0x156: V115 = M[0x40]
0x15a: V116 = SUB V112 V115
0x15b: V117 = 0x20
0x15d: V118 = ADD 0x20 V116
0x15f: RETURN V115 V118
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1]

================================

Block 0x160
[0x160:0x166]
---
Predecessors: [0x46]
Successors: [0x167, 0x168]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 ISZERO
0x163 PUSH2 0x168
0x166 JUMPI
---
0x160: JUMPDEST 
0x161: V119 = CALLVALUE
0x162: V120 = ISZERO V119
0x163: V121 = 0x168
0x166: JUMPI 0x168 V120
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x167
[0x167:0x167]
---
Predecessors: [0x160]
Successors: []
---
0x167 INVALID
---
0x167: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x168
[0x168:0x175]
---
Predecessors: [0x160]
Successors: [0x600]
---
0x168 JUMPDEST
0x169 PUSH2 0xf2
0x16c PUSH1 0x4
0x16e CALLDATALOAD
0x16f PUSH1 0x24
0x171 CALLDATALOAD
0x172 PUSH2 0x600
0x175 JUMP
---
0x168: JUMPDEST 
0x169: V122 = 0xf2
0x16c: V123 = 0x4
0x16e: V124 = CALLDATALOAD 0x4
0x16f: V125 = 0x24
0x171: V126 = CALLDATALOAD 0x24
0x172: V127 = 0x600
0x175: JUMP 0x600
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf2, V124, V126]
Exit stack: [V12, 0xf2, V124, V126]

================================

Block 0x176
[0x176:0x187]
---
Predecessors: []
Successors: []
---
0x176 JUMPDEST
0x177 PUSH1 0x40
0x179 DUP1
0x17a MLOAD
0x17b SWAP2
0x17c DUP3
0x17d MSTORE
0x17e MLOAD
0x17f SWAP1
0x180 DUP2
0x181 SWAP1
0x182 SUB
0x183 PUSH1 0x20
0x185 ADD
0x186 SWAP1
0x187 RETURN
---
0x176: JUMPDEST 
0x177: V128 = 0x40
0x17a: V129 = M[0x40]
0x17d: M[V129] = S0
0x17e: V130 = M[0x40]
0x182: V131 = SUB V129 V130
0x183: V132 = 0x20
0x185: V133 = ADD 0x20 V131
0x187: RETURN V130 V133
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x188
[0x188:0x18e]
---
Predecessors: [0x51]
Successors: [0x18f, 0x190]
---
0x188 JUMPDEST
0x189 CALLVALUE
0x18a ISZERO
0x18b PUSH2 0x190
0x18e JUMPI
---
0x188: JUMPDEST 
0x189: V134 = CALLVALUE
0x18a: V135 = ISZERO V134
0x18b: V136 = 0x190
0x18e: JUMPI 0x190 V135
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18f
[0x18f:0x18f]
---
Predecessors: [0x188]
Successors: []
---
0x18f INVALID
---
0x18f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x190
[0x190:0x197]
---
Predecessors: [0x188]
Successors: [0x636]
---
0x190 JUMPDEST
0x191 PUSH2 0x121
0x194 PUSH2 0x636
0x197 JUMP
---
0x190: JUMPDEST 
0x191: V137 = 0x121
0x194: V138 = 0x636
0x197: JUMP 0x636
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x198
[0x198:0x199]
---
Predecessors: []
Successors: []
---
0x198 JUMPDEST
0x199 STOP
---
0x198: JUMPDEST 
0x199: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x5c]
Successors: [0x1a1, 0x1a2]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c ISZERO
0x19d PUSH2 0x1a2
0x1a0 JUMPI
---
0x19a: JUMPDEST 
0x19b: V139 = CALLVALUE
0x19c: V140 = ISZERO V139
0x19d: V141 = 0x1a2
0x1a0: JUMPI 0x1a2 V140
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a1
[0x1a1:0x1a1]
---
Predecessors: [0x19a]
Successors: []
---
0x1a1 INVALID
---
0x1a1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a2
[0x1a2:0x1ac]
---
Predecessors: [0x19a]
Successors: [0x663]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x14c
0x1a6 PUSH1 0x4
0x1a8 CALLDATALOAD
0x1a9 PUSH2 0x663
0x1ac JUMP
---
0x1a2: JUMPDEST 
0x1a3: V142 = 0x14c
0x1a6: V143 = 0x4
0x1a8: V144 = CALLDATALOAD 0x4
0x1a9: V145 = 0x663
0x1ac: JUMP 0x663
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c, V144]
Exit stack: [V12, 0x14c, V144]

================================

Block 0x1ad
[0x1ad:0x1c0]
---
Predecessors: []
Successors: []
---
0x1ad JUMPDEST
0x1ae PUSH1 0x40
0x1b0 DUP1
0x1b1 MLOAD
0x1b2 SWAP2
0x1b3 ISZERO
0x1b4 ISZERO
0x1b5 DUP3
0x1b6 MSTORE
0x1b7 MLOAD
0x1b8 SWAP1
0x1b9 DUP2
0x1ba SWAP1
0x1bb SUB
0x1bc PUSH1 0x20
0x1be ADD
0x1bf SWAP1
0x1c0 RETURN
---
0x1ad: JUMPDEST 
0x1ae: V146 = 0x40
0x1b1: V147 = M[0x40]
0x1b3: V148 = ISZERO S0
0x1b4: V149 = ISZERO V148
0x1b6: M[V147] = V149
0x1b7: V150 = M[0x40]
0x1bb: V151 = SUB V147 V150
0x1bc: V152 = 0x20
0x1be: V153 = ADD 0x20 V151
0x1c0: RETURN V150 V153
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1c1
[0x1c1:0x1c7]
---
Predecessors: [0x67]
Successors: [0x1c8, 0x1c9]
---
0x1c1 JUMPDEST
0x1c2 CALLVALUE
0x1c3 ISZERO
0x1c4 PUSH2 0x1c9
0x1c7 JUMPI
---
0x1c1: JUMPDEST 
0x1c2: V154 = CALLVALUE
0x1c3: V155 = ISZERO V154
0x1c4: V156 = 0x1c9
0x1c7: JUMPI 0x1c9 V155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c8
[0x1c8:0x1c8]
---
Predecessors: [0x1c1]
Successors: []
---
0x1c8 INVALID
---
0x1c8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c9
[0x1c9:0x1d0]
---
Predecessors: [0x1c1]
Successors: [0x6c8]
---
0x1c9 JUMPDEST
0x1ca PUSH2 0xf2
0x1cd PUSH2 0x6c8
0x1d0 JUMP
---
0x1c9: JUMPDEST 
0x1ca: V157 = 0xf2
0x1cd: V158 = 0x6c8
0x1d0: JUMP 0x6c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf2]
Exit stack: [V12, 0xf2]

================================

Block 0x1d1
[0x1d1:0x1e2]
---
Predecessors: []
Successors: []
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x40
0x1d4 DUP1
0x1d5 MLOAD
0x1d6 SWAP2
0x1d7 DUP3
0x1d8 MSTORE
0x1d9 MLOAD
0x1da SWAP1
0x1db DUP2
0x1dc SWAP1
0x1dd SUB
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 SWAP1
0x1e2 RETURN
---
0x1d1: JUMPDEST 
0x1d2: V159 = 0x40
0x1d5: V160 = M[0x40]
0x1d8: M[V160] = S0
0x1d9: V161 = M[0x40]
0x1dd: V162 = SUB V160 V161
0x1de: V163 = 0x20
0x1e0: V164 = ADD 0x20 V162
0x1e2: RETURN V161 V164
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e3
[0x1e3:0x1e9]
---
Predecessors: [0x72]
Successors: [0x1ea, 0x1eb]
---
0x1e3 JUMPDEST
0x1e4 CALLVALUE
0x1e5 ISZERO
0x1e6 PUSH2 0x1eb
0x1e9 JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V165 = CALLVALUE
0x1e5: V166 = ISZERO V165
0x1e6: V167 = 0x1eb
0x1e9: JUMPI 0x1eb V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ea
[0x1ea:0x1ea]
---
Predecessors: [0x1e3]
Successors: []
---
0x1ea INVALID
---
0x1ea: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x1f2]
---
Predecessors: [0x1e3]
Successors: [0x6ce]
---
0x1eb JUMPDEST
0x1ec PUSH2 0x1f3
0x1ef PUSH2 0x6ce
0x1f2 JUMP
---
0x1eb: JUMPDEST 
0x1ec: V168 = 0x1f3
0x1ef: V169 = 0x6ce
0x1f2: JUMP 0x6ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f3]
Exit stack: [V12, 0x1f3]

================================

Block 0x1f3
[0x1f3:0x20e]
---
Predecessors: [0x6ce]
Successors: []
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x40
0x1f6 DUP1
0x1f7 MLOAD
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 SWAP1
0x201 SWAP3
0x202 AND
0x203 DUP3
0x204 MSTORE
0x205 MLOAD
0x206 SWAP1
0x207 DUP2
0x208 SWAP1
0x209 SUB
0x20a PUSH1 0x20
0x20c ADD
0x20d SWAP1
0x20e RETURN
---
0x1f3: JUMPDEST 
0x1f4: V170 = 0x40
0x1f7: V171 = M[0x40]
0x1f8: V172 = 0x1
0x1fa: V173 = 0xa0
0x1fc: V174 = 0x2
0x1fe: V175 = EXP 0x2 0xa0
0x1ff: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V177 = AND V649 0xffffffffffffffffffffffffffffffffffffffff
0x204: M[V171] = V177
0x205: V178 = M[0x40]
0x209: V179 = SUB V171 V178
0x20a: V180 = 0x20
0x20c: V181 = ADD 0x20 V179
0x20e: RETURN V178 V181
---
Entry stack: [V12, 0x1f3, V649]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f3]

================================

Block 0x20f
[0x20f:0x215]
---
Predecessors: [0x7d]
Successors: [0x216, 0x217]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 ISZERO
0x212 PUSH2 0x217
0x215 JUMPI
---
0x20f: JUMPDEST 
0x210: V182 = CALLVALUE
0x211: V183 = ISZERO V182
0x212: V184 = 0x217
0x215: JUMPI 0x217 V183
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x216
[0x216:0x216]
---
Predecessors: [0x20f]
Successors: []
---
0x216 INVALID
---
0x216: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x217
[0x217:0x22a]
---
Predecessors: [0x20f]
Successors: [0x6dd]
---
0x217 JUMPDEST
0x218 PUSH2 0x22b
0x21b PUSH1 0x1
0x21d PUSH1 0xa0
0x21f PUSH1 0x2
0x221 EXP
0x222 SUB
0x223 PUSH1 0x4
0x225 CALLDATALOAD
0x226 AND
0x227 PUSH2 0x6dd
0x22a JUMP
---
0x217: JUMPDEST 
0x218: V185 = 0x22b
0x21b: V186 = 0x1
0x21d: V187 = 0xa0
0x21f: V188 = 0x2
0x221: V189 = EXP 0x2 0xa0
0x222: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V191 = 0x4
0x225: V192 = CALLDATALOAD 0x4
0x226: V193 = AND V192 0xffffffffffffffffffffffffffffffffffffffff
0x227: V194 = 0x6dd
0x22a: JUMP 0x6dd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22b, V193]
Exit stack: [V12, 0x22b, V193]

================================

Block 0x22b
[0x22b:0x263]
---
Predecessors: [0x630, 0x710, 0xa4b]
Successors: []
---
0x22b JUMPDEST
0x22c PUSH1 0x40
0x22e DUP1
0x22f MLOAD
0x230 SWAP6
0x231 ISZERO
0x232 ISZERO
0x233 DUP7
0x234 MSTORE
0x235 PUSH1 0x20
0x237 DUP7
0x238 ADD
0x239 SWAP5
0x23a SWAP1
0x23b SWAP5
0x23c MSTORE
0x23d DUP5
0x23e DUP5
0x23f ADD
0x240 SWAP3
0x241 SWAP1
0x242 SWAP3
0x243 MSTORE
0x244 PUSH1 0x1
0x246 PUSH1 0xa0
0x248 PUSH1 0x2
0x24a EXP
0x24b SUB
0x24c SWAP1
0x24d DUP2
0x24e AND
0x24f PUSH1 0x60
0x251 DUP6
0x252 ADD
0x253 MSTORE
0x254 AND
0x255 PUSH1 0x80
0x257 DUP4
0x258 ADD
0x259 MSTORE
0x25a MLOAD
0x25b SWAP1
0x25c DUP2
0x25d SWAP1
0x25e SUB
0x25f PUSH1 0xa0
0x261 ADD
0x262 SWAP1
0x263 RETURN
---
0x22b: JUMPDEST 
0x22c: V195 = 0x40
0x22f: V196 = M[0x40]
0x231: V197 = ISZERO S4
0x232: V198 = ISZERO V197
0x234: M[V196] = V198
0x235: V199 = 0x20
0x238: V200 = ADD V196 0x20
0x23c: M[V200] = S3
0x23f: V201 = ADD 0x40 V196
0x243: M[V201] = S2
0x244: V202 = 0x1
0x246: V203 = 0xa0
0x248: V204 = 0x2
0x24a: V205 = EXP 0x2 0xa0
0x24b: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24e: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x24f: V208 = 0x60
0x252: V209 = ADD V196 0x60
0x253: M[V209] = V207
0x254: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x255: V211 = 0x80
0x258: V212 = ADD V196 0x80
0x259: M[V212] = V210
0x25a: V213 = M[0x40]
0x25e: V214 = SUB V196 V213
0x25f: V215 = 0xa0
0x261: V216 = ADD 0xa0 V214
0x263: RETURN V213 V216
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5]

================================

Block 0x264
[0x264:0x26a]
---
Predecessors: [0x88]
Successors: [0x26b, 0x26c]
---
0x264 JUMPDEST
0x265 CALLVALUE
0x266 ISZERO
0x267 PUSH2 0x26c
0x26a JUMPI
---
0x264: JUMPDEST 
0x265: V217 = CALLVALUE
0x266: V218 = ISZERO V217
0x267: V219 = 0x26c
0x26a: JUMPI 0x26c V218
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26b
[0x26b:0x26b]
---
Predecessors: [0x264]
Successors: []
---
0x26b INVALID
---
0x26b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26c
[0x26c:0x27f]
---
Predecessors: [0x264]
Successors: [0x719]
---
0x26c JUMPDEST
0x26d PUSH2 0x280
0x270 PUSH1 0x1
0x272 PUSH1 0xa0
0x274 PUSH1 0x2
0x276 EXP
0x277 SUB
0x278 PUSH1 0x4
0x27a CALLDATALOAD
0x27b AND
0x27c PUSH2 0x719
0x27f JUMP
---
0x26c: JUMPDEST 
0x26d: V220 = 0x280
0x270: V221 = 0x1
0x272: V222 = 0xa0
0x274: V223 = 0x2
0x276: V224 = EXP 0x2 0xa0
0x277: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x278: V226 = 0x4
0x27a: V227 = CALLDATALOAD 0x4
0x27b: V228 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V229 = 0x719
0x27f: JUMP 0x719
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x280, V228]
Exit stack: [V12, 0x280, V228]

================================

Block 0x280
[0x280:0x2ae]
---
Predecessors: [0x745]
Successors: []
---
0x280 JUMPDEST
0x281 PUSH1 0x40
0x283 DUP1
0x284 MLOAD
0x285 SWAP5
0x286 DUP6
0x287 MSTORE
0x288 PUSH1 0x20
0x28a DUP6
0x28b ADD
0x28c SWAP4
0x28d SWAP1
0x28e SWAP4
0x28f MSTORE
0x290 DUP4
0x291 DUP4
0x292 ADD
0x293 SWAP2
0x294 SWAP1
0x295 SWAP2
0x296 MSTORE
0x297 PUSH1 0x1
0x299 PUSH1 0xa0
0x29b PUSH1 0x2
0x29d EXP
0x29e SUB
0x29f AND
0x2a0 PUSH1 0x60
0x2a2 DUP4
0x2a3 ADD
0x2a4 MSTORE
0x2a5 MLOAD
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 SWAP1
0x2a9 SUB
0x2aa PUSH1 0x80
0x2ac ADD
0x2ad SWAP1
0x2ae RETURN
---
0x280: JUMPDEST 
0x281: V230 = 0x40
0x284: V231 = M[0x40]
0x287: M[V231] = V676
0x288: V232 = 0x20
0x28b: V233 = ADD V231 0x20
0x28f: M[V233] = V678
0x292: V234 = ADD 0x40 V231
0x296: M[V234] = V681
0x297: V235 = 0x1
0x299: V236 = 0xa0
0x29b: V237 = 0x2
0x29d: V238 = EXP 0x2 0xa0
0x29e: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29f: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2a0: V241 = 0x60
0x2a3: V242 = ADD V231 0x60
0x2a4: M[V242] = V240
0x2a5: V243 = M[0x40]
0x2a9: V244 = SUB V231 V243
0x2aa: V245 = 0x80
0x2ac: V246 = ADD 0x80 V244
0x2ae: RETURN V243 V246
---
Entry stack: [V12, V676, V678, V681, V228]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x2af
[0x2af:0x2b5]
---
Predecessors: [0x93]
Successors: [0x2b6, 0x2b7]
---
0x2af JUMPDEST
0x2b0 CALLVALUE
0x2b1 ISZERO
0x2b2 PUSH2 0x2b7
0x2b5 JUMPI
---
0x2af: JUMPDEST 
0x2b0: V247 = CALLVALUE
0x2b1: V248 = ISZERO V247
0x2b2: V249 = 0x2b7
0x2b5: JUMPI 0x2b7 V248
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b6
[0x2b6:0x2b6]
---
Predecessors: [0x2af]
Successors: []
---
0x2b6 INVALID
---
0x2b6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b7
[0x2b7:0x2ca]
---
Predecessors: [0x2af]
Successors: [0x74c]
---
0x2b7 JUMPDEST
0x2b8 PUSH2 0x2cb
0x2bb PUSH1 0x1
0x2bd PUSH1 0xa0
0x2bf PUSH1 0x2
0x2c1 EXP
0x2c2 SUB
0x2c3 PUSH1 0x4
0x2c5 CALLDATALOAD
0x2c6 AND
0x2c7 PUSH2 0x74c
0x2ca JUMP
---
0x2b7: JUMPDEST 
0x2b8: V250 = 0x2cb
0x2bb: V251 = 0x1
0x2bd: V252 = 0xa0
0x2bf: V253 = 0x2
0x2c1: V254 = EXP 0x2 0xa0
0x2c2: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c3: V256 = 0x4
0x2c5: V257 = CALLDATALOAD 0x4
0x2c6: V258 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: V259 = 0x74c
0x2ca: JUMP 0x74c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2cb, V258]
Exit stack: [V12, 0x2cb, V258]

================================

Block 0x2cb
[0x2cb:0x302]
---
Predecessors: [0x74c]
Successors: []
---
0x2cb JUMPDEST
0x2cc PUSH1 0x40
0x2ce DUP1
0x2cf MLOAD
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 SWAP1
0x2d9 SWAP7
0x2da AND
0x2db DUP7
0x2dc MSTORE
0x2dd PUSH1 0x20
0x2df DUP7
0x2e0 ADD
0x2e1 SWAP5
0x2e2 SWAP1
0x2e3 SWAP5
0x2e4 MSTORE
0x2e5 DUP5
0x2e6 DUP5
0x2e7 ADD
0x2e8 SWAP3
0x2e9 SWAP1
0x2ea SWAP3
0x2eb MSTORE
0x2ec PUSH1 0x60
0x2ee DUP5
0x2ef ADD
0x2f0 MSTORE
0x2f1 PUSH1 0xff
0x2f3 AND
0x2f4 PUSH1 0x80
0x2f6 DUP4
0x2f7 ADD
0x2f8 MSTORE
0x2f9 MLOAD
0x2fa SWAP1
0x2fb DUP2
0x2fc SWAP1
0x2fd SUB
0x2fe PUSH1 0xa0
0x300 ADD
0x301 SWAP1
0x302 RETURN
---
0x2cb: JUMPDEST 
0x2cc: V260 = 0x40
0x2cf: V261 = M[0x40]
0x2d0: V262 = 0x1
0x2d2: V263 = 0xa0
0x2d4: V264 = 0x2
0x2d6: V265 = EXP 0x2 0xa0
0x2d7: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2da: V267 = AND V704 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: M[V261] = V267
0x2dd: V268 = 0x20
0x2e0: V269 = ADD V261 0x20
0x2e4: M[V269] = V690
0x2e7: V270 = ADD 0x40 V261
0x2eb: M[V270] = V693
0x2ec: V271 = 0x60
0x2ef: V272 = ADD V261 0x60
0x2f0: M[V272] = V695
0x2f1: V273 = 0xff
0x2f3: V274 = AND 0xff V706
0x2f4: V275 = 0x80
0x2f7: V276 = ADD V261 0x80
0x2f8: M[V276] = V274
0x2f9: V277 = M[0x40]
0x2fd: V278 = SUB V261 V277
0x2fe: V279 = 0xa0
0x300: V280 = ADD 0xa0 V278
0x302: RETURN V277 V280
---
Entry stack: [V12, 0x2cb, V704, V690, V693, V695, V706]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x2cb]

================================

Block 0x303
[0x303:0x309]
---
Predecessors: [0x9e]
Successors: [0x30a, 0x30b]
---
0x303 JUMPDEST
0x304 CALLVALUE
0x305 ISZERO
0x306 PUSH2 0x30b
0x309 JUMPI
---
0x303: JUMPDEST 
0x304: V281 = CALLVALUE
0x305: V282 = ISZERO V281
0x306: V283 = 0x30b
0x309: JUMPI 0x30b V282
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30a
[0x30a:0x30a]
---
Predecessors: [0x303]
Successors: []
---
0x30a INVALID
---
0x30a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30b
[0x30b:0x312]
---
Predecessors: [0x303]
Successors: [0x789]
---
0x30b JUMPDEST
0x30c PUSH2 0x313
0x30f PUSH2 0x789
0x312 JUMP
---
0x30b: JUMPDEST 
0x30c: V284 = 0x313
0x30f: V285 = 0x789
0x312: JUMP 0x789
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x313]
Exit stack: [V12, 0x313]

================================

Block 0x313
[0x313:0x328]
---
Predecessors: [0x789]
Successors: []
---
0x313 JUMPDEST
0x314 PUSH1 0x40
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0xff
0x31a SWAP1
0x31b SWAP3
0x31c AND
0x31d DUP3
0x31e MSTORE
0x31f MLOAD
0x320 SWAP1
0x321 DUP2
0x322 SWAP1
0x323 SUB
0x324 PUSH1 0x20
0x326 ADD
0x327 SWAP1
0x328 RETURN
---
0x313: JUMPDEST 
0x314: V286 = 0x40
0x317: V287 = M[0x40]
0x318: V288 = 0xff
0x31c: V289 = AND V710 0xff
0x31e: M[V287] = V289
0x31f: V290 = M[0x40]
0x323: V291 = SUB V287 V290
0x324: V292 = 0x20
0x326: V293 = ADD 0x20 V291
0x328: RETURN V290 V293
---
Entry stack: [V12, 0x313, V710]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x313]

================================

Block 0x329
[0x329:0x32f]
---
Predecessors: [0xa9]
Successors: [0x330, 0x331]
---
0x329 JUMPDEST
0x32a CALLVALUE
0x32b ISZERO
0x32c PUSH2 0x331
0x32f JUMPI
---
0x329: JUMPDEST 
0x32a: V294 = CALLVALUE
0x32b: V295 = ISZERO V294
0x32c: V296 = 0x331
0x32f: JUMPI 0x331 V295
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x330
[0x330:0x330]
---
Predecessors: [0x329]
Successors: []
---
0x330 INVALID
---
0x330: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x331
[0x331:0x33e]
---
Predecessors: [0x329]
Successors: [0x792]
---
0x331 JUMPDEST
0x332 PUSH2 0x14c
0x335 PUSH1 0xff
0x337 PUSH1 0x4
0x339 CALLDATALOAD
0x33a AND
0x33b PUSH2 0x792
0x33e JUMP
---
0x331: JUMPDEST 
0x332: V297 = 0x14c
0x335: V298 = 0xff
0x337: V299 = 0x4
0x339: V300 = CALLDATALOAD 0x4
0x33a: V301 = AND V300 0xff
0x33b: V302 = 0x792
0x33e: JUMP 0x792
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c, V301]
Exit stack: [V12, 0x14c, V301]

================================

Block 0x33f
[0x33f:0x352]
---
Predecessors: []
Successors: []
---
0x33f JUMPDEST
0x340 PUSH1 0x40
0x342 DUP1
0x343 MLOAD
0x344 SWAP2
0x345 ISZERO
0x346 ISZERO
0x347 DUP3
0x348 MSTORE
0x349 MLOAD
0x34a SWAP1
0x34b DUP2
0x34c SWAP1
0x34d SUB
0x34e PUSH1 0x20
0x350 ADD
0x351 SWAP1
0x352 RETURN
---
0x33f: JUMPDEST 
0x340: V303 = 0x40
0x343: V304 = M[0x40]
0x345: V305 = ISZERO S0
0x346: V306 = ISZERO V305
0x348: M[V304] = V306
0x349: V307 = M[0x40]
0x34d: V308 = SUB V304 V307
0x34e: V309 = 0x20
0x350: V310 = ADD 0x20 V308
0x352: RETURN V307 V310
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x353
[0x353:0x359]
---
Predecessors: [0xb4]
Successors: [0x35a, 0x35b]
---
0x353 JUMPDEST
0x354 CALLVALUE
0x355 ISZERO
0x356 PUSH2 0x35b
0x359 JUMPI
---
0x353: JUMPDEST 
0x354: V311 = CALLVALUE
0x355: V312 = ISZERO V311
0x356: V313 = 0x35b
0x359: JUMPI 0x35b V312
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35a
[0x35a:0x35a]
---
Predecessors: [0x353]
Successors: []
---
0x35a INVALID
---
0x35a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35b
[0x35b:0x362]
---
Predecessors: [0x353]
Successors: [0x808]
---
0x35b JUMPDEST
0x35c PUSH2 0x121
0x35f PUSH2 0x808
0x362 JUMP
---
0x35b: JUMPDEST 
0x35c: V314 = 0x121
0x35f: V315 = 0x808
0x362: JUMP 0x808
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x363
[0x363:0x364]
---
Predecessors: []
Successors: []
---
0x363 JUMPDEST
0x364 STOP
---
0x363: JUMPDEST 
0x364: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x365
[0x365:0x36b]
---
Predecessors: [0xbf]
Successors: [0x36c, 0x36d]
---
0x365 JUMPDEST
0x366 CALLVALUE
0x367 ISZERO
0x368 PUSH2 0x36d
0x36b JUMPI
---
0x365: JUMPDEST 
0x366: V316 = CALLVALUE
0x367: V317 = ISZERO V316
0x368: V318 = 0x36d
0x36b: JUMPI 0x36d V317
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36c
[0x36c:0x36c]
---
Predecessors: [0x365]
Successors: []
---
0x36c INVALID
---
0x36c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36d
[0x36d:0x380]
---
Predecessors: [0x365]
Successors: [0x826]
---
0x36d JUMPDEST
0x36e PUSH2 0x14c
0x371 PUSH1 0x1
0x373 PUSH1 0xa0
0x375 PUSH1 0x2
0x377 EXP
0x378 SUB
0x379 PUSH1 0x4
0x37b CALLDATALOAD
0x37c AND
0x37d PUSH2 0x826
0x380 JUMP
---
0x36d: JUMPDEST 
0x36e: V319 = 0x14c
0x371: V320 = 0x1
0x373: V321 = 0xa0
0x375: V322 = 0x2
0x377: V323 = EXP 0x2 0xa0
0x378: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x379: V325 = 0x4
0x37b: V326 = CALLDATALOAD 0x4
0x37c: V327 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x37d: V328 = 0x826
0x380: JUMP 0x826
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c, V327]
Exit stack: [V12, 0x14c, V327]

================================

Block 0x381
[0x381:0x394]
---
Predecessors: []
Successors: []
---
0x381 JUMPDEST
0x382 PUSH1 0x40
0x384 DUP1
0x385 MLOAD
0x386 SWAP2
0x387 ISZERO
0x388 ISZERO
0x389 DUP3
0x38a MSTORE
0x38b MLOAD
0x38c SWAP1
0x38d DUP2
0x38e SWAP1
0x38f SUB
0x390 PUSH1 0x20
0x392 ADD
0x393 SWAP1
0x394 RETURN
---
0x381: JUMPDEST 
0x382: V329 = 0x40
0x385: V330 = M[0x40]
0x387: V331 = ISZERO S0
0x388: V332 = ISZERO V331
0x38a: M[V330] = V332
0x38b: V333 = M[0x40]
0x38f: V334 = SUB V330 V333
0x390: V335 = 0x20
0x392: V336 = ADD 0x20 V334
0x394: RETURN V333 V336
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x395
[0x395:0x39b]
---
Predecessors: [0xca]
Successors: [0x39c, 0x39d]
---
0x395 JUMPDEST
0x396 CALLVALUE
0x397 ISZERO
0x398 PUSH2 0x39d
0x39b JUMPI
---
0x395: JUMPDEST 
0x396: V337 = CALLVALUE
0x397: V338 = ISZERO V337
0x398: V339 = 0x39d
0x39b: JUMPI 0x39d V338
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39c
[0x39c:0x39c]
---
Predecessors: [0x395]
Successors: []
---
0x39c INVALID
---
0x39c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39d
[0x39d:0x3b0]
---
Predecessors: [0x395]
Successors: [0x881]
---
0x39d JUMPDEST
0x39e PUSH2 0x121
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xa0
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 PUSH1 0x4
0x3ab CALLDATALOAD
0x3ac AND
0x3ad PUSH2 0x881
0x3b0 JUMP
---
0x39d: JUMPDEST 
0x39e: V340 = 0x121
0x3a1: V341 = 0x1
0x3a3: V342 = 0xa0
0x3a5: V343 = 0x2
0x3a7: V344 = EXP 0x2 0xa0
0x3a8: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a9: V346 = 0x4
0x3ab: V347 = CALLDATALOAD 0x4
0x3ac: V348 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V349 = 0x881
0x3b0: JUMP 0x881
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121, V348]
Exit stack: [V12, 0x121, V348]

================================

Block 0x3b1
[0x3b1:0x3b2]
---
Predecessors: []
Successors: []
---
0x3b1 JUMPDEST
0x3b2 STOP
---
0x3b1: JUMPDEST 
0x3b2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3b3
[0x3b3:0x3b9]
---
Predecessors: [0xd5]
Successors: [0x3ba, 0x3bb]
---
0x3b3 JUMPDEST
0x3b4 CALLVALUE
0x3b5 ISZERO
0x3b6 PUSH2 0x3bb
0x3b9 JUMPI
---
0x3b3: JUMPDEST 
0x3b4: V350 = CALLVALUE
0x3b5: V351 = ISZERO V350
0x3b6: V352 = 0x3bb
0x3b9: JUMPI 0x3bb V351
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ba
[0x3ba:0x3ba]
---
Predecessors: [0x3b3]
Successors: []
---
0x3ba INVALID
---
0x3ba: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3bb
[0x3bb:0x3d1]
---
Predecessors: [0x3b3]
Successors: [0x8bd]
---
0x3bb JUMPDEST
0x3bc PUSH2 0x14c
0x3bf PUSH1 0x1
0x3c1 PUSH1 0xa0
0x3c3 PUSH1 0x2
0x3c5 EXP
0x3c6 SUB
0x3c7 PUSH1 0x4
0x3c9 CALLDATALOAD
0x3ca AND
0x3cb PUSH1 0x24
0x3cd CALLDATALOAD
0x3ce PUSH2 0x8bd
0x3d1 JUMP
---
0x3bb: JUMPDEST 
0x3bc: V353 = 0x14c
0x3bf: V354 = 0x1
0x3c1: V355 = 0xa0
0x3c3: V356 = 0x2
0x3c5: V357 = EXP 0x2 0xa0
0x3c6: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c7: V359 = 0x4
0x3c9: V360 = CALLDATALOAD 0x4
0x3ca: V361 = AND V360 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V362 = 0x24
0x3cd: V363 = CALLDATALOAD 0x24
0x3ce: V364 = 0x8bd
0x3d1: JUMP 0x8bd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c, V361, V363]
Exit stack: [V12, 0x14c, V361, V363]

================================

Block 0x3d2
[0x3d2:0x3e5]
---
Predecessors: []
Successors: []
---
0x3d2 JUMPDEST
0x3d3 PUSH1 0x40
0x3d5 DUP1
0x3d6 MLOAD
0x3d7 SWAP2
0x3d8 ISZERO
0x3d9 ISZERO
0x3da DUP3
0x3db MSTORE
0x3dc MLOAD
0x3dd SWAP1
0x3de DUP2
0x3df SWAP1
0x3e0 SUB
0x3e1 PUSH1 0x20
0x3e3 ADD
0x3e4 SWAP1
0x3e5 RETURN
---
0x3d2: JUMPDEST 
0x3d3: V365 = 0x40
0x3d6: V366 = M[0x40]
0x3d8: V367 = ISZERO S0
0x3d9: V368 = ISZERO V367
0x3db: M[V366] = V368
0x3dc: V369 = M[0x40]
0x3e0: V370 = SUB V366 V369
0x3e1: V371 = 0x20
0x3e3: V372 = ADD 0x20 V370
0x3e5: RETURN V369 V372
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e6
[0x3e6:0x3eb]
---
Predecessors: [0xea]
Successors: [0xf2]
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x0
0x3e9 SLOAD
0x3ea DUP2
0x3eb JUMP
---
0x3e6: JUMPDEST 
0x3e7: V373 = 0x0
0x3e9: V374 = S[0x0]
0x3eb: JUMP 0xf2
---
Entry stack: [V12, 0xf2]
Stack pops: 1
Stack additions: [S0, V374]
Exit stack: [V12, 0xf2, V374]

================================

Block 0x3ec
[0x3ec:0x3f6]
---
Predecessors: [0x104]
Successors: [0x3f7, 0x3fc]
---
0x3ec JUMPDEST
0x3ed PUSH1 0x0
0x3ef SLOAD
0x3f0 CALLVALUE
0x3f1 LT
0x3f2 ISZERO
0x3f3 PUSH2 0x3fc
0x3f6 JUMPI
---
0x3ec: JUMPDEST 
0x3ed: V375 = 0x0
0x3ef: V376 = S[0x0]
0x3f0: V377 = CALLVALUE
0x3f1: V378 = LT V377 V376
0x3f2: V379 = ISZERO V378
0x3f3: V380 = 0x3fc
0x3f6: JUMPI 0x3fc V379
---
Entry stack: [V12, 0x121, V86, V88, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121, V86, V88, V92]

================================

Block 0x3f7
[0x3f7:0x3fb]
---
Predecessors: [0x3ec]
Successors: []
---
0x3f7 PUSH1 0x0
0x3f9 PUSH1 0x0
0x3fb REVERT
---
0x3f7: V381 = 0x0
0x3f9: V382 = 0x0
0x3fb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x121, V86, V88, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121, V86, V88, V92]

================================

Block 0x3fc
[0x3fc:0x404]
---
Predecessors: [0x3ec]
Successors: [0x826]
---
0x3fc JUMPDEST
0x3fd PUSH2 0x405
0x400 DUP4
0x401 PUSH2 0x826
0x404 JUMP
---
0x3fc: JUMPDEST 
0x3fd: V383 = 0x405
0x401: V384 = 0x826
0x404: JUMP 0x826
---
Entry stack: [V12, 0x121, V86, V88, V92]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x405, S2]
Exit stack: [V12, 0x121, V86, V88, V92, 0x405, V86]

================================

Block 0x405
[0x405:0x40a]
---
Predecessors: [0x5fb, 0x87c]
Successors: [0x40b, 0x40c]
---
0x405 JUMPDEST
0x406 ISZERO
0x407 PUSH2 0x40c
0x40a JUMPI
---
0x405: JUMPDEST 
0x406: V385 = ISZERO {0x0, 0x1}
0x407: V386 = 0x40c
0x40a: JUMPI 0x40c V385
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1]

================================

Block 0x40b
[0x40b:0x40b]
---
Predecessors: [0x405]
Successors: []
---
0x40b INVALID
---
0x40b: INVALID 
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]

================================

Block 0x40c
[0x40c:0x4a5]
---
Predecessors: [0x405]
Successors: [0x4a6, 0x4c5]
---
0x40c JUMPDEST
0x40d PUSH1 0x40
0x40f DUP1
0x410 MLOAD
0x411 PUSH1 0xa0
0x413 DUP2
0x414 ADD
0x415 DUP3
0x416 MSTORE
0x417 ORIGIN
0x418 PUSH1 0x1
0x41a PUSH1 0xa0
0x41c PUSH1 0x2
0x41e EXP
0x41f SUB
0x420 SWAP1
0x421 DUP2
0x422 AND
0x423 DUP3
0x424 MSTORE
0x425 PUSH1 0x0
0x427 PUSH1 0x20
0x429 DUP1
0x42a DUP5
0x42b ADD
0x42c DUP3
0x42d DUP2
0x42e MSTORE
0x42f NUMBER
0x430 DUP6
0x431 DUP8
0x432 ADD
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x2
0x438 DUP1
0x439 SLOAD
0x43a PUSH1 0x60
0x43c DUP9
0x43d ADD
0x43e SWAP1
0x43f DUP2
0x440 MSTORE
0x441 PUSH1 0x1
0x443 DUP1
0x444 SLOAD
0x445 PUSH1 0xff
0x447 SWAP1
0x448 DUP2
0x449 AND
0x44a PUSH1 0x80
0x44c DUP12
0x44d ADD
0x44e SWAP1
0x44f DUP2
0x450 MSTORE
0x451 DUP15
0x452 DUP11
0x453 AND
0x454 DUP10
0x455 MSTORE
0x456 PUSH1 0x3
0x458 SWAP8
0x459 DUP9
0x45a SWAP1
0x45b MSTORE
0x45c SWAP11
0x45d SWAP1
0x45e SWAP8
0x45f SHA3
0x460 SWAP9
0x461 MLOAD
0x462 DUP10
0x463 SLOAD
0x464 PUSH1 0x1
0x466 PUSH1 0xa0
0x468 PUSH1 0x2
0x46a EXP
0x46b SUB
0x46c NOT
0x46d AND
0x46e SWAP9
0x46f AND
0x470 SWAP8
0x471 SWAP1
0x472 SWAP8
0x473 OR
0x474 DUP9
0x475 SSTORE
0x476 SWAP3
0x477 MLOAD
0x478 DUP8
0x479 DUP8
0x47a ADD
0x47b SSTORE
0x47c SWAP1
0x47d MLOAD
0x47e SWAP1
0x47f DUP7
0x480 ADD
0x481 SSTORE
0x482 MLOAD
0x483 SWAP1
0x484 DUP5
0x485 ADD
0x486 SSTORE
0x487 SWAP3
0x488 MLOAD
0x489 PUSH1 0x4
0x48b SWAP1
0x48c SWAP3
0x48d ADD
0x48e DUP1
0x48f SLOAD
0x490 PUSH1 0xff
0x492 NOT
0x493 AND
0x494 SWAP3
0x495 SWAP1
0x496 SWAP4
0x497 AND
0x498 SWAP2
0x499 SWAP1
0x49a SWAP2
0x49b OR
0x49c SWAP1
0x49d SWAP2
0x49e SSTORE
0x49f DUP3
0x4a0 GT
0x4a1 ISZERO
0x4a2 PUSH2 0x4c5
0x4a5 JUMPI
---
0x40c: JUMPDEST 
0x40d: V387 = 0x40
0x410: V388 = M[0x40]
0x411: V389 = 0xa0
0x414: V390 = ADD V388 0xa0
0x416: M[0x40] = V390
0x417: V391 = ORIGIN
0x418: V392 = 0x1
0x41a: V393 = 0xa0
0x41c: V394 = 0x2
0x41e: V395 = EXP 0x2 0xa0
0x41f: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x424: M[V388] = V397
0x425: V398 = 0x0
0x427: V399 = 0x20
0x42b: V400 = ADD V388 0x20
0x42e: M[V400] = 0x0
0x42f: V401 = NUMBER
0x432: V402 = ADD 0x40 V388
0x435: M[V402] = V401
0x436: V403 = 0x2
0x439: V404 = S[0x2]
0x43a: V405 = 0x60
0x43d: V406 = ADD V388 0x60
0x440: M[V406] = V404
0x441: V407 = 0x1
0x444: V408 = S[0x1]
0x445: V409 = 0xff
0x449: V410 = AND 0xff V408
0x44a: V411 = 0x80
0x44d: V412 = ADD V388 0x80
0x450: M[V412] = V410
0x453: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x455: M[0x0] = V413
0x456: V414 = 0x3
0x45b: M[0x20] = 0x3
0x45f: V415 = SHA3 0x0 0x40
0x461: V416 = M[V388]
0x463: V417 = S[V415]
0x464: V418 = 0x1
0x466: V419 = 0xa0
0x468: V420 = 0x2
0x46a: V421 = EXP 0x2 0xa0
0x46b: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46c: V423 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x46d: V424 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V417
0x46f: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x473: V426 = OR V425 V424
0x475: S[V415] = V426
0x477: V427 = M[V400]
0x47a: V428 = ADD 0x1 V415
0x47b: S[V428] = V427
0x47d: V429 = M[V402]
0x480: V430 = ADD V415 0x2
0x481: S[V430] = V429
0x482: V431 = M[V406]
0x485: V432 = ADD V415 0x3
0x486: S[V432] = V431
0x488: V433 = M[V412]
0x489: V434 = 0x4
0x48d: V435 = ADD V415 0x4
0x48f: V436 = S[V435]
0x490: V437 = 0xff
0x492: V438 = NOT 0xff
0x493: V439 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V436
0x497: V440 = AND 0xff V433
0x49b: V441 = OR V440 V439
0x49e: S[V435] = V441
0x4a0: V442 = GT S1 0x1
0x4a1: V443 = ISZERO V442
0x4a2: V444 = 0x4c5
0x4a5: JUMPI 0x4c5 V443
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]

================================

Block 0x4a6
[0x4a6:0x4c4]
---
Predecessors: [0x40c]
Successors: [0x4c5]
---
0x4a6 PUSH1 0x1
0x4a8 PUSH1 0xa0
0x4aa PUSH1 0x2
0x4ac EXP
0x4ad SUB
0x4ae DUP4
0x4af AND
0x4b0 PUSH1 0x0
0x4b2 SWAP1
0x4b3 DUP2
0x4b4 MSTORE
0x4b5 PUSH1 0x3
0x4b7 PUSH1 0x20
0x4b9 DUP2
0x4ba SWAP1
0x4bb MSTORE
0x4bc PUSH1 0x40
0x4be SWAP1
0x4bf SWAP2
0x4c0 SHA3
0x4c1 ADD
0x4c2 DUP3
0x4c3 SWAP1
0x4c4 SSTORE
---
0x4a6: V445 = 0x1
0x4a8: V446 = 0xa0
0x4aa: V447 = 0x2
0x4ac: V448 = EXP 0x2 0xa0
0x4ad: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4af: V450 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V451 = 0x0
0x4b4: M[0x0] = V450
0x4b5: V452 = 0x3
0x4b7: V453 = 0x20
0x4bb: M[0x20] = 0x3
0x4bc: V454 = 0x40
0x4c0: V455 = SHA3 0x0 0x40
0x4c1: V456 = ADD V455 0x3
0x4c4: S[V456] = S1
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]

================================

Block 0x4c5
[0x4c5:0x4d2]
---
Predecessors: [0x40c, 0x4a6]
Successors: [0x4d3, 0x4db]
---
0x4c5 JUMPDEST
0x4c6 PUSH1 0x0
0x4c8 DUP2
0x4c9 PUSH1 0xff
0x4cb AND
0x4cc GT
0x4cd DUP1
0x4ce ISZERO
0x4cf PUSH2 0x4db
0x4d2 JUMPI
---
0x4c5: JUMPDEST 
0x4c6: V457 = 0x0
0x4c9: V458 = 0xff
0x4cb: V459 = AND 0xff S0
0x4cc: V460 = GT V459 0x0
0x4ce: V461 = ISZERO V460
0x4cf: V462 = 0x4db
0x4d2: JUMPI 0x4db V461
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V460]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0, V460]

================================

Block 0x4d3
[0x4d3:0x4da]
---
Predecessors: [0x4c5]
Successors: [0x4db]
---
0x4d3 POP
0x4d4 PUSH1 0x8
0x4d6 DUP2
0x4d7 PUSH1 0xff
0x4d9 AND
0x4da LT
---
0x4d4: V463 = 0x8
0x4d7: V464 = 0xff
0x4d9: V465 = AND 0xff S1
0x4da: V466 = LT V465 0x8
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1, V460]
Stack pops: 2
Stack additions: [S1, V466]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1, V466]

================================

Block 0x4db
[0x4db:0x4e0]
---
Predecessors: [0x4c5, 0x4d3]
Successors: [0x4e1, 0x509]
---
0x4db JUMPDEST
0x4dc ISZERO
0x4dd PUSH2 0x509
0x4e0 JUMPI
---
0x4db: JUMPDEST 
0x4dc: V467 = ISZERO S0
0x4dd: V468 = 0x509
0x4e0: JUMPI 0x509 V467
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1]

================================

Block 0x4e1
[0x4e1:0x508]
---
Predecessors: [0x4db]
Successors: [0x509]
---
0x4e1 PUSH1 0x1
0x4e3 PUSH1 0xa0
0x4e5 PUSH1 0x2
0x4e7 EXP
0x4e8 SUB
0x4e9 DUP4
0x4ea AND
0x4eb PUSH1 0x0
0x4ed SWAP1
0x4ee DUP2
0x4ef MSTORE
0x4f0 PUSH1 0x3
0x4f2 PUSH1 0x20
0x4f4 MSTORE
0x4f5 PUSH1 0x40
0x4f7 SWAP1
0x4f8 SHA3
0x4f9 PUSH1 0x4
0x4fb ADD
0x4fc DUP1
0x4fd SLOAD
0x4fe PUSH1 0xff
0x500 NOT
0x501 AND
0x502 PUSH1 0xff
0x504 DUP4
0x505 AND
0x506 OR
0x507 SWAP1
0x508 SSTORE
---
0x4e1: V469 = 0x1
0x4e3: V470 = 0xa0
0x4e5: V471 = 0x2
0x4e7: V472 = EXP 0x2 0xa0
0x4e8: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V474 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x4eb: V475 = 0x0
0x4ef: M[0x0] = V474
0x4f0: V476 = 0x3
0x4f2: V477 = 0x20
0x4f4: M[0x20] = 0x3
0x4f5: V478 = 0x40
0x4f8: V479 = SHA3 0x0 0x40
0x4f9: V480 = 0x4
0x4fb: V481 = ADD 0x4 V479
0x4fd: V482 = S[V481]
0x4fe: V483 = 0xff
0x500: V484 = NOT 0xff
0x501: V485 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V482
0x502: V486 = 0xff
0x505: V487 = AND S0 0xff
0x506: V488 = OR V487 V485
0x508: S[V481] = V488
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]

================================

Block 0x509
[0x509:0x577]
---
Predecessors: [0x4db, 0x4e1]
Successors: [0x578]
---
0x509 JUMPDEST
0x50a PUSH1 0x1
0x50c PUSH1 0xa0
0x50e PUSH1 0x2
0x510 EXP
0x511 SUB
0x512 DUP4
0x513 AND
0x514 PUSH1 0x0
0x516 DUP2
0x517 DUP2
0x518 MSTORE
0x519 PUSH1 0x3
0x51b PUSH1 0x20
0x51d DUP2
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x40
0x522 SWAP3
0x523 DUP4
0x524 SWAP1
0x525 SHA3
0x526 SWAP2
0x527 DUP3
0x528 ADD
0x529 SLOAD
0x52a PUSH1 0x2
0x52c DUP4
0x52d ADD
0x52e SLOAD
0x52f PUSH1 0x4
0x531 SWAP1
0x532 SWAP4
0x533 ADD
0x534 SLOAD
0x535 DUP5
0x536 MLOAD
0x537 SWAP6
0x538 DUP7
0x539 MSTORE
0x53a SWAP2
0x53b DUP6
0x53c ADD
0x53d MSTORE
0x53e DUP4
0x53f DUP4
0x540 ADD
0x541 SWAP2
0x542 SWAP1
0x543 SWAP2
0x544 MSTORE
0x545 PUSH1 0xff
0x547 AND
0x548 PUSH1 0x60
0x54a DUP4
0x54b ADD
0x54c MSTORE
0x54d MLOAD
0x54e PUSH32 0xa2605dc1353bea55de8ac977b40ab996f4e7340179b5f62f70f479cfff7a0cf8
0x56f SWAP2
0x570 DUP2
0x571 SWAP1
0x572 SUB
0x573 PUSH1 0x80
0x575 ADD
0x576 SWAP1
0x577 LOG1
---
0x509: JUMPDEST 
0x50a: V489 = 0x1
0x50c: V490 = 0xa0
0x50e: V491 = 0x2
0x510: V492 = EXP 0x2 0xa0
0x511: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V494 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x514: V495 = 0x0
0x518: M[0x0] = V494
0x519: V496 = 0x3
0x51b: V497 = 0x20
0x51f: M[0x20] = 0x3
0x520: V498 = 0x40
0x525: V499 = SHA3 0x0 0x40
0x528: V500 = ADD V499 0x3
0x529: V501 = S[V500]
0x52a: V502 = 0x2
0x52d: V503 = ADD V499 0x2
0x52e: V504 = S[V503]
0x52f: V505 = 0x4
0x533: V506 = ADD V499 0x4
0x534: V507 = S[V506]
0x536: V508 = M[0x40]
0x539: M[V508] = V494
0x53c: V509 = ADD V508 0x20
0x53d: M[V509] = V501
0x540: V510 = ADD 0x40 V508
0x544: M[V510] = V504
0x545: V511 = 0xff
0x547: V512 = AND 0xff V507
0x548: V513 = 0x60
0x54b: V514 = ADD V508 0x60
0x54c: M[V514] = V512
0x54d: V515 = M[0x40]
0x54e: V516 = 0xa2605dc1353bea55de8ac977b40ab996f4e7340179b5f62f70f479cfff7a0cf8
0x572: V517 = SUB V508 V515
0x573: V518 = 0x80
0x575: V519 = ADD 0x80 V517
0x577: LOG V515 V519 0xa2605dc1353bea55de8ac977b40ab996f4e7340179b5f62f70f479cfff7a0cf8
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]

================================

Block 0x578
[0x578:0x57c]
---
Predecessors: [0x509]
Successors: [0x121, 0x587, 0x6f1]
---
0x578 JUMPDEST
0x579 POP
0x57a POP
0x57b POP
0x57c JUMP
---
0x578: JUMPDEST 
0x57c: JUMP {0x121, 0x587, 0x6f1}
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4]

================================

Block 0x57d
[0x57d:0x586]
---
Predecessors: [0x123]
Successors: [0x914]
---
0x57d JUMPDEST
0x57e PUSH2 0x587
0x581 DUP2
0x582 CALLER
0x583 PUSH2 0x914
0x586 JUMP
---
0x57d: JUMPDEST 
0x57e: V520 = 0x587
0x582: V521 = CALLER
0x583: V522 = 0x914
0x586: JUMP 0x914
---
Entry stack: [V12, 0x121, V102]
Stack pops: 1
Stack additions: [S0, 0x587, S0, V521]
Exit stack: [V12, 0x121, V102, 0x587, V102, V521]

================================

Block 0x587
[0x587:0x58d]
---
Predecessors: [0x578, 0x630, 0x98b, 0xa4b]
Successors: [0x58e, 0x58f]
---
0x587 JUMPDEST
0x588 ISZERO
0x589 ISZERO
0x58a PUSH2 0x58f
0x58d JUMPI
---
0x587: JUMPDEST 
0x588: V523 = ISZERO S0
0x589: V524 = ISZERO V523
0x58a: V525 = 0x58f
0x58d: JUMPI 0x58f V524
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x58e
[0x58e:0x58e]
---
Predecessors: [0x587]
Successors: []
---
0x58e INVALID
---
0x58e: INVALID 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x58f
[0x58f:0x597]
---
Predecessors: [0x587]
Successors: [0x991]
---
0x58f JUMPDEST
0x590 PUSH2 0x598
0x593 DUP2
0x594 PUSH2 0x991
0x597 JUMP
---
0x58f: JUMPDEST 
0x590: V526 = 0x598
0x594: V527 = 0x991
0x597: JUMP 0x991
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x598, S0]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0, 0x598, S0]

================================

Block 0x598
[0x598:0x598]
---
Predecessors: [0x630, 0x98b, 0xa4b]
Successors: [0x599]
---
0x598 JUMPDEST
---
0x598: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x599
[0x599:0x59b]
---
Predecessors: [0x598]
Successors: []
Has unresolved jump.
---
0x599 JUMPDEST
0x59a POP
0x59b JUMP
---
0x599: JUMPDEST 
0x59b: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x59c
[0x59c:0x5b5]
---
Predecessors: [0x141]
Successors: [0x5b6, 0x5bb]
---
0x59c JUMPDEST
0x59d PUSH1 0x4
0x59f SLOAD
0x5a0 PUSH1 0x0
0x5a2 SWAP1
0x5a3 CALLER
0x5a4 PUSH1 0x1
0x5a6 PUSH1 0xa0
0x5a8 PUSH1 0x2
0x5aa EXP
0x5ab SUB
0x5ac SWAP1
0x5ad DUP2
0x5ae AND
0x5af SWAP2
0x5b0 AND
0x5b1 EQ
0x5b2 PUSH2 0x5bb
0x5b5 JUMPI
---
0x59c: JUMPDEST 
0x59d: V528 = 0x4
0x59f: V529 = S[0x4]
0x5a0: V530 = 0x0
0x5a3: V531 = CALLER
0x5a4: V532 = 0x1
0x5a6: V533 = 0xa0
0x5a8: V534 = 0x2
0x5aa: V535 = EXP 0x2 0xa0
0x5ab: V536 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ae: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x5b0: V538 = AND V529 0xffffffffffffffffffffffffffffffffffffffff
0x5b1: V539 = EQ V538 V537
0x5b2: V540 = 0x5bb
0x5b5: JUMPI 0x5bb V539
---
Entry stack: [V12, 0x14c, V109]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x14c, V109, 0x0]

================================

Block 0x5b6
[0x5b6:0x5ba]
---
Predecessors: [0x59c]
Successors: []
---
0x5b6 PUSH1 0x0
0x5b8 PUSH1 0x0
0x5ba REVERT
---
0x5b6: V541 = 0x0
0x5b8: V542 = 0x0
0x5ba: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14c, V109, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V109, 0x0]

================================

Block 0x5bb
[0x5bb:0x5f9]
---
Predecessors: [0x59c]
Successors: [0x5fa]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x2
0x5be DUP3
0x5bf SWAP1
0x5c0 SSTORE
0x5c1 PUSH1 0x0
0x5c3 SLOAD
0x5c4 PUSH1 0x1
0x5c6 SLOAD
0x5c7 PUSH1 0x40
0x5c9 DUP1
0x5ca MLOAD
0x5cb SWAP3
0x5cc DUP4
0x5cd MSTORE
0x5ce PUSH1 0x20
0x5d0 DUP4
0x5d1 ADD
0x5d2 DUP6
0x5d3 SWAP1
0x5d4 MSTORE
0x5d5 PUSH1 0xff
0x5d7 SWAP1
0x5d8 SWAP2
0x5d9 AND
0x5da DUP3
0x5db DUP3
0x5dc ADD
0x5dd MSTORE
0x5de MLOAD
0x5df PUSH1 0x0
0x5e1 DUP1
0x5e2 MLOAD
0x5e3 PUSH1 0x20
0x5e5 PUSH2 0xb26
0x5e8 DUP4
0x5e9 CODECOPY
0x5ea DUP2
0x5eb MLOAD
0x5ec SWAP2
0x5ed MSTORE
0x5ee SWAP2
0x5ef DUP2
0x5f0 SWAP1
0x5f1 SUB
0x5f2 PUSH1 0x60
0x5f4 ADD
0x5f5 SWAP1
0x5f6 LOG1
0x5f7 POP
0x5f8 PUSH1 0x1
---
0x5bb: JUMPDEST 
0x5bc: V543 = 0x2
0x5c0: S[0x2] = V109
0x5c1: V544 = 0x0
0x5c3: V545 = S[0x0]
0x5c4: V546 = 0x1
0x5c6: V547 = S[0x1]
0x5c7: V548 = 0x40
0x5ca: V549 = M[0x40]
0x5cd: M[V549] = V545
0x5ce: V550 = 0x20
0x5d1: V551 = ADD V549 0x20
0x5d4: M[V551] = V109
0x5d5: V552 = 0xff
0x5d9: V553 = AND V547 0xff
0x5dc: V554 = ADD 0x40 V549
0x5dd: M[V554] = V553
0x5de: V555 = M[0x40]
0x5df: V556 = 0x0
0x5e2: V557 = M[0x0]
0x5e3: V558 = 0x20
0x5e5: V559 = 0xb26
0x5e9: CODECOPY 0x0 0xb26 0x20
0x5eb: V560 = M[0x0]
0x5ed: M[0x0] = V557
0x5f1: V561 = SUB V549 V555
0x5f2: V562 = 0x60
0x5f4: V563 = ADD 0x60 V561
0x5f6: LOG V555 V563 V560
0x5f8: V564 = 0x1
---
Entry stack: [V12, 0x14c, V109, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x14c, V109, 0x1]

================================

Block 0x5fa
[0x5fa:0x5fa]
---
Predecessors: [0x5bb, 0x871]
Successors: [0x5fb]
---
0x5fa JUMPDEST
---
0x5fa: JUMPDEST 
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, {0x14c, 0x405, 0x91f}, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, {0x14c, 0x405, 0x91f}, S1, 0x1]

================================

Block 0x5fb
[0x5fb:0x5ff]
---
Predecessors: [0x5fa]
Successors: [0x14c, 0x405, 0x91f]
---
0x5fb JUMPDEST
0x5fc SWAP2
0x5fd SWAP1
0x5fe POP
0x5ff JUMP
---
0x5fb: JUMPDEST 
0x5ff: JUMP {0x14c, 0x405, 0x91f}
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, {0x14c, 0x405, 0x91f}, S1, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, 0x1]

================================

Block 0x600
[0x600:0x623]
---
Predecessors: [0x168, 0x99e]
Successors: [0x624, 0x625]
---
0x600 JUMPDEST
0x601 PUSH1 0x40
0x603 DUP1
0x604 MLOAD
0x605 DUP4
0x606 BLOCKHASH
0x607 DUP2
0x608 MSTORE
0x609 SWAP1
0x60a MLOAD
0x60b SWAP1
0x60c DUP2
0x60d SWAP1
0x60e SUB
0x60f PUSH1 0x20
0x611 ADD
0x612 SWAP1
0x613 SHA3
0x614 PUSH1 0x0
0x616 SWAP1
0x617 PUSH2 0x62d
0x61a SWAP1
0x61b DUP4
0x61c SWAP1
0x61d DUP2
0x61e ISZERO
0x61f ISZERO
0x620 PUSH2 0x625
0x623 JUMPI
---
0x600: JUMPDEST 
0x601: V565 = 0x40
0x604: V566 = M[0x40]
0x606: V567 = BLOCKHASH S1
0x608: M[V566] = V567
0x60a: V568 = M[0x40]
0x60e: V569 = SUB V566 V568
0x60f: V570 = 0x20
0x611: V571 = ADD 0x20 V569
0x613: V572 = SHA3 V568 V571
0x614: V573 = 0x0
0x617: V574 = 0x62d
0x61e: V575 = ISZERO S0
0x61f: V576 = ISZERO V575
0x620: V577 = 0x625
0x623: JUMPI 0x625 V576
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xf2, 0x9d2}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x62d, S0, V572]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xf2, 0x9d2}, S1, S0, 0x0, 0x62d, S0, V572]

================================

Block 0x624
[0x624:0x624]
---
Predecessors: [0x600]
Successors: []
---
0x624 INVALID
---
0x624: INVALID 
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0xf2, 0x9d2}, S5, S4, 0x0, 0x62d, S1, V572]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0xf2, 0x9d2}, S5, S4, 0x0, 0x62d, S1, V572]

================================

Block 0x625
[0x625:0x62c]
---
Predecessors: [0x600]
Successors: [0xa50]
---
0x625 JUMPDEST
0x626 MOD
0x627 PUSH1 0x1
0x629 PUSH2 0xa50
0x62c JUMP
---
0x625: JUMPDEST 
0x626: V578 = MOD V572 S1
0x627: V579 = 0x1
0x629: V580 = 0xa50
0x62c: JUMP 0xa50
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0xf2, 0x9d2}, S5, S4, 0x0, 0x62d, S1, V572]
Stack pops: 2
Stack additions: [V578, 0x1]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0xf2, 0x9d2}, S5, S4, 0x0, 0x62d, V578, 0x1]

================================

Block 0x62d
[0x62d:0x62f]
---
Predecessors: [0xa71]
Successors: [0x630]
---
0x62d JUMPDEST
0x62e SWAP1
0x62f POP
---
0x62d: JUMPDEST 
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x630
[0x630:0x635]
---
Predecessors: [0x62d, 0x97e]
Successors: [0xf2, 0x121, 0x22b, 0x587, 0x598, 0x6f1, 0x9d2]
---
0x630 JUMPDEST
0x631 SWAP3
0x632 SWAP2
0x633 POP
0x634 POP
0x635 JUMP
---
0x630: JUMPDEST 
0x635: JUMP S3
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0x636
[0x636:0x64c]
---
Predecessors: [0x190]
Successors: [0x64d, 0x652]
---
0x636 JUMPDEST
0x637 PUSH1 0x4
0x639 SLOAD
0x63a CALLER
0x63b PUSH1 0x1
0x63d PUSH1 0xa0
0x63f PUSH1 0x2
0x641 EXP
0x642 SUB
0x643 SWAP1
0x644 DUP2
0x645 AND
0x646 SWAP2
0x647 AND
0x648 EQ
0x649 PUSH2 0x652
0x64c JUMPI
---
0x636: JUMPDEST 
0x637: V581 = 0x4
0x639: V582 = S[0x4]
0x63a: V583 = CALLER
0x63b: V584 = 0x1
0x63d: V585 = 0xa0
0x63f: V586 = 0x2
0x641: V587 = EXP 0x2 0xa0
0x642: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x645: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x647: V590 = AND V582 0xffffffffffffffffffffffffffffffffffffffff
0x648: V591 = EQ V590 V589
0x649: V592 = 0x652
0x64c: JUMPI 0x652 V591
---
Entry stack: [V12, 0x121]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121]

================================

Block 0x64d
[0x64d:0x651]
---
Predecessors: [0x636]
Successors: []
---
0x64d PUSH1 0x0
0x64f PUSH1 0x0
0x651 REVERT
---
0x64d: V593 = 0x0
0x64f: V594 = 0x0
0x651: REVERT 0x0 0x0
---
Entry stack: [V12, 0x121]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121]

================================

Block 0x652
[0x652:0x65f]
---
Predecessors: [0x636]
Successors: []
---
0x652 JUMPDEST
0x653 PUSH1 0x4
0x655 SLOAD
0x656 PUSH1 0x1
0x658 PUSH1 0xa0
0x65a PUSH1 0x2
0x65c EXP
0x65d SUB
0x65e AND
0x65f SELFDESTRUCT
---
0x652: JUMPDEST 
0x653: V595 = 0x4
0x655: V596 = S[0x4]
0x656: V597 = 0x1
0x658: V598 = 0xa0
0x65a: V599 = 0x2
0x65c: V600 = EXP 0x2 0xa0
0x65d: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65e: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x65f: SELFDESTRUCT V602
---
Entry stack: [V12, 0x121]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121]

================================

Block 0x660
[0x660:0x660]
---
Predecessors: []
Successors: [0x661]
---
0x660 JUMPDEST
---
0x660: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x661
[0x661:0x662]
---
Predecessors: [0x660]
Successors: []
Has unresolved jump.
---
0x661 JUMPDEST
0x662 JUMP
---
0x661: JUMPDEST 
0x662: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x663
[0x663:0x67c]
---
Predecessors: [0x1a2]
Successors: [0x67d, 0x682]
---
0x663 JUMPDEST
0x664 PUSH1 0x4
0x666 SLOAD
0x667 PUSH1 0x0
0x669 SWAP1
0x66a CALLER
0x66b PUSH1 0x1
0x66d PUSH1 0xa0
0x66f PUSH1 0x2
0x671 EXP
0x672 SUB
0x673 SWAP1
0x674 DUP2
0x675 AND
0x676 SWAP2
0x677 AND
0x678 EQ
0x679 PUSH2 0x682
0x67c JUMPI
---
0x663: JUMPDEST 
0x664: V603 = 0x4
0x666: V604 = S[0x4]
0x667: V605 = 0x0
0x66a: V606 = CALLER
0x66b: V607 = 0x1
0x66d: V608 = 0xa0
0x66f: V609 = 0x2
0x671: V610 = EXP 0x2 0xa0
0x672: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x675: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x677: V613 = AND V604 0xffffffffffffffffffffffffffffffffffffffff
0x678: V614 = EQ V613 V612
0x679: V615 = 0x682
0x67c: JUMPI 0x682 V614
---
Entry stack: [V12, 0x14c, V144]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x14c, V144, 0x0]

================================

Block 0x67d
[0x67d:0x681]
---
Predecessors: [0x663]
Successors: []
---
0x67d PUSH1 0x0
0x67f PUSH1 0x0
0x681 REVERT
---
0x67d: V616 = 0x0
0x67f: V617 = 0x0
0x681: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14c, V144, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V144, 0x0]

================================

Block 0x682
[0x682:0x6c1]
---
Predecessors: [0x663]
Successors: [0x6c2]
---
0x682 JUMPDEST
0x683 PUSH1 0x0
0x685 DUP3
0x686 SWAP1
0x687 SSTORE
0x688 PUSH1 0x2
0x68a SLOAD
0x68b PUSH1 0x1
0x68d SLOAD
0x68e PUSH1 0x40
0x690 DUP1
0x691 MLOAD
0x692 DUP6
0x693 DUP2
0x694 MSTORE
0x695 PUSH1 0x20
0x697 DUP2
0x698 ADD
0x699 SWAP4
0x69a SWAP1
0x69b SWAP4
0x69c MSTORE
0x69d PUSH1 0xff
0x69f SWAP1
0x6a0 SWAP2
0x6a1 AND
0x6a2 DUP3
0x6a3 DUP3
0x6a4 ADD
0x6a5 MSTORE
0x6a6 MLOAD
0x6a7 PUSH1 0x0
0x6a9 DUP1
0x6aa MLOAD
0x6ab PUSH1 0x20
0x6ad PUSH2 0xb26
0x6b0 DUP4
0x6b1 CODECOPY
0x6b2 DUP2
0x6b3 MLOAD
0x6b4 SWAP2
0x6b5 MSTORE
0x6b6 SWAP2
0x6b7 DUP2
0x6b8 SWAP1
0x6b9 SUB
0x6ba PUSH1 0x60
0x6bc ADD
0x6bd SWAP1
0x6be LOG1
0x6bf POP
0x6c0 PUSH1 0x1
---
0x682: JUMPDEST 
0x683: V618 = 0x0
0x687: S[0x0] = V144
0x688: V619 = 0x2
0x68a: V620 = S[0x2]
0x68b: V621 = 0x1
0x68d: V622 = S[0x1]
0x68e: V623 = 0x40
0x691: V624 = M[0x40]
0x694: M[V624] = V144
0x695: V625 = 0x20
0x698: V626 = ADD V624 0x20
0x69c: M[V626] = V620
0x69d: V627 = 0xff
0x6a1: V628 = AND V622 0xff
0x6a4: V629 = ADD 0x40 V624
0x6a5: M[V629] = V628
0x6a6: V630 = M[0x40]
0x6a7: V631 = 0x0
0x6aa: V632 = M[0x0]
0x6ab: V633 = 0x20
0x6ad: V634 = 0xb26
0x6b1: CODECOPY 0x0 0xb26 0x20
0x6b3: V635 = M[0x0]
0x6b5: M[0x0] = V632
0x6b9: V636 = SUB V624 V630
0x6ba: V637 = 0x60
0x6bc: V638 = ADD 0x60 V636
0x6be: LOG V630 V638 V635
0x6c0: V639 = 0x1
---
Entry stack: [V12, 0x14c, V144, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x14c, V144, 0x1]

================================

Block 0x6c2
[0x6c2:0x6c2]
---
Predecessors: [0x682]
Successors: [0x6c3]
---
0x6c2 JUMPDEST
---
0x6c2: JUMPDEST 
---
Entry stack: [V12, 0x14c, V144, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V144, 0x1]

================================

Block 0x6c3
[0x6c3:0x6c7]
---
Predecessors: [0x6c2]
Successors: [0x14c]
---
0x6c3 JUMPDEST
0x6c4 SWAP2
0x6c5 SWAP1
0x6c6 POP
0x6c7 JUMP
---
0x6c3: JUMPDEST 
0x6c7: JUMP 0x14c
---
Entry stack: [V12, 0x14c, V144, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x6c8
[0x6c8:0x6cd]
---
Predecessors: [0x1c9]
Successors: [0xf2]
---
0x6c8 JUMPDEST
0x6c9 PUSH1 0x2
0x6cb SLOAD
0x6cc DUP2
0x6cd JUMP
---
0x6c8: JUMPDEST 
0x6c9: V640 = 0x2
0x6cb: V641 = S[0x2]
0x6cd: JUMP 0xf2
---
Entry stack: [V12, 0xf2]
Stack pops: 1
Stack additions: [S0, V641]
Exit stack: [V12, 0xf2, V641]

================================

Block 0x6ce
[0x6ce:0x6dc]
---
Predecessors: [0x1eb]
Successors: [0x1f3]
---
0x6ce JUMPDEST
0x6cf PUSH1 0x4
0x6d1 SLOAD
0x6d2 PUSH1 0x1
0x6d4 PUSH1 0xa0
0x6d6 PUSH1 0x2
0x6d8 EXP
0x6d9 SUB
0x6da AND
0x6db DUP2
0x6dc JUMP
---
0x6ce: JUMPDEST 
0x6cf: V642 = 0x4
0x6d1: V643 = S[0x4]
0x6d2: V644 = 0x1
0x6d4: V645 = 0xa0
0x6d6: V646 = 0x2
0x6d8: V647 = EXP 0x2 0xa0
0x6d9: V648 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6da: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0x6dc: JUMP 0x1f3
---
Entry stack: [V12, 0x1f3]
Stack pops: 1
Stack additions: [S0, V649]
Exit stack: [V12, 0x1f3, V649]

================================

Block 0x6dd
[0x6dd:0x6f0]
---
Predecessors: [0x217]
Successors: [0x914]
---
0x6dd JUMPDEST
0x6de PUSH1 0x0
0x6e0 PUSH1 0x0
0x6e2 PUSH1 0x0
0x6e4 PUSH1 0x0
0x6e6 PUSH1 0x0
0x6e8 PUSH2 0x6f1
0x6eb DUP7
0x6ec CALLER
0x6ed PUSH2 0x914
0x6f0 JUMP
---
0x6dd: JUMPDEST 
0x6de: V650 = 0x0
0x6e0: V651 = 0x0
0x6e2: V652 = 0x0
0x6e4: V653 = 0x0
0x6e6: V654 = 0x0
0x6e8: V655 = 0x6f1
0x6ec: V656 = CALLER
0x6ed: V657 = 0x914
0x6f0: JUMP 0x914
---
Entry stack: [V12, 0x22b, V193]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6f1, S0, V656]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6f1, V193, V656]

================================

Block 0x6f1
[0x6f1:0x6f9]
---
Predecessors: [0x578, 0x630, 0x98b, 0xa4b]
Successors: [0xa78]
---
0x6f1 JUMPDEST
0x6f2 PUSH2 0x6fa
0x6f5 DUP8
0x6f6 PUSH2 0xa78
0x6f9 JUMP
---
0x6f1: JUMPDEST 
0x6f2: V658 = 0x6fa
0x6f6: V659 = 0xa78
0x6f9: JUMP 0xa78
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x6fa, S6]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x6fa, S6]

================================

Block 0x6fa
[0x6fa:0x702]
---
Predecessors: [0xacb]
Successors: [0xad2]
---
0x6fa JUMPDEST
0x6fb PUSH2 0x703
0x6fe DUP9
0x6ff PUSH2 0xad2
0x702 JUMP
---
0x6fa: JUMPDEST 
0x6fb: V660 = 0x703
0x6ff: V661 = 0xad2
0x702: JUMP 0xad2
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x703, S7]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x703, S7]

================================

Block 0x703
[0x703:0x70f]
---
Predecessors: [0xb05]
Successors: [0x710]
---
0x703 JUMPDEST
0x704 DUP9
0x705 CALLER
0x706 SWAP5
0x707 POP
0x708 SWAP5
0x709 POP
0x70a SWAP5
0x70b POP
0x70c SWAP5
0x70d POP
0x70e SWAP5
0x70f POP
---
0x703: JUMPDEST 
0x705: V662 = CALLER
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S2, S1, S0, S8, V662]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S2, S1, S0, S8, V662]

================================

Block 0x710
[0x710:0x718]
---
Predecessors: [0x703]
Successors: [0x121, 0x22b]
---
0x710 JUMPDEST
0x711 SWAP2
0x712 SWAP4
0x713 SWAP6
0x714 SWAP1
0x715 SWAP3
0x716 SWAP5
0x717 POP
0x718 JUMP
---
0x710: JUMPDEST 
0x718: JUMP S6
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V662]
Stack pops: 7
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, S11, S10, S9, S8, S7, S4, S3, S2, S1, V662]

================================

Block 0x719
[0x719:0x744]
---
Predecessors: [0x26c]
Successors: [0x745]
---
0x719 JUMPDEST
0x71a PUSH1 0x1
0x71c PUSH1 0xa0
0x71e PUSH1 0x2
0x720 EXP
0x721 SUB
0x722 DUP2
0x723 AND
0x724 PUSH1 0x0
0x726 SWAP1
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x3
0x72b PUSH1 0x20
0x72d DUP2
0x72e SWAP1
0x72f MSTORE
0x730 PUSH1 0x40
0x732 SWAP1
0x733 SWAP2
0x734 SHA3
0x735 PUSH1 0x1
0x737 DUP2
0x738 ADD
0x739 SLOAD
0x73a SWAP2
0x73b DUP2
0x73c ADD
0x73d SLOAD
0x73e PUSH1 0x2
0x740 SWAP1
0x741 SWAP2
0x742 ADD
0x743 SLOAD
0x744 DUP4
---
0x719: JUMPDEST 
0x71a: V663 = 0x1
0x71c: V664 = 0xa0
0x71e: V665 = 0x2
0x720: V666 = EXP 0x2 0xa0
0x721: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x723: V668 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x724: V669 = 0x0
0x728: M[0x0] = V668
0x729: V670 = 0x3
0x72b: V671 = 0x20
0x72f: M[0x20] = 0x3
0x730: V672 = 0x40
0x734: V673 = SHA3 0x0 0x40
0x735: V674 = 0x1
0x738: V675 = ADD V673 0x1
0x739: V676 = S[V675]
0x73c: V677 = ADD V673 0x3
0x73d: V678 = S[V677]
0x73e: V679 = 0x2
0x742: V680 = ADD V673 0x2
0x743: V681 = S[V680]
---
Entry stack: [V12, 0x280, V228]
Stack pops: 1
Stack additions: [S0, V676, V678, V681, S0]
Exit stack: [V12, 0x280, V228, V676, V678, V681, V228]

================================

Block 0x745
[0x745:0x74b]
---
Predecessors: [0x719]
Successors: [0x280]
---
0x745 JUMPDEST
0x746 SWAP2
0x747 SWAP4
0x748 POP
0x749 SWAP2
0x74a SWAP4
0x74b JUMP
---
0x745: JUMPDEST 
0x74b: JUMP 0x280
---
Entry stack: [V12, 0x280, V228, V676, V678, V681, V228]
Stack pops: 6
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, V676, V678, V681, V228]

================================

Block 0x74c
[0x74c:0x788]
---
Predecessors: [0x2b7]
Successors: [0x2cb]
---
0x74c JUMPDEST
0x74d PUSH1 0x3
0x74f PUSH1 0x20
0x751 DUP2
0x752 SWAP1
0x753 MSTORE
0x754 PUSH1 0x0
0x756 SWAP2
0x757 DUP3
0x758 MSTORE
0x759 PUSH1 0x40
0x75b SWAP1
0x75c SWAP2
0x75d SHA3
0x75e DUP1
0x75f SLOAD
0x760 PUSH1 0x1
0x762 DUP3
0x763 ADD
0x764 SLOAD
0x765 PUSH1 0x2
0x767 DUP4
0x768 ADD
0x769 SLOAD
0x76a SWAP4
0x76b DUP4
0x76c ADD
0x76d SLOAD
0x76e PUSH1 0x4
0x770 SWAP1
0x771 SWAP4
0x772 ADD
0x773 SLOAD
0x774 PUSH1 0x1
0x776 PUSH1 0xa0
0x778 PUSH1 0x2
0x77a EXP
0x77b SUB
0x77c SWAP1
0x77d SWAP3
0x77e AND
0x77f SWAP4
0x780 SWAP1
0x781 SWAP3
0x782 SWAP1
0x783 SWAP2
0x784 PUSH1 0xff
0x786 AND
0x787 DUP6
0x788 JUMP
---
0x74c: JUMPDEST 
0x74d: V682 = 0x3
0x74f: V683 = 0x20
0x753: M[0x20] = 0x3
0x754: V684 = 0x0
0x758: M[0x0] = V258
0x759: V685 = 0x40
0x75d: V686 = SHA3 0x0 0x40
0x75f: V687 = S[V686]
0x760: V688 = 0x1
0x763: V689 = ADD V686 0x1
0x764: V690 = S[V689]
0x765: V691 = 0x2
0x768: V692 = ADD V686 0x2
0x769: V693 = S[V692]
0x76c: V694 = ADD V686 0x3
0x76d: V695 = S[V694]
0x76e: V696 = 0x4
0x772: V697 = ADD V686 0x4
0x773: V698 = S[V697]
0x774: V699 = 0x1
0x776: V700 = 0xa0
0x778: V701 = 0x2
0x77a: V702 = EXP 0x2 0xa0
0x77b: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77e: V704 = AND V687 0xffffffffffffffffffffffffffffffffffffffff
0x784: V705 = 0xff
0x786: V706 = AND 0xff V698
0x788: JUMP 0x2cb
---
Entry stack: [V12, 0x2cb, V258]
Stack pops: 2
Stack additions: [S1, V704, V690, V693, V695, V706]
Exit stack: [V12, 0x2cb, V704, V690, V693, V695, V706]

================================

Block 0x789
[0x789:0x791]
---
Predecessors: [0x30b]
Successors: [0x313]
---
0x789 JUMPDEST
0x78a PUSH1 0x1
0x78c SLOAD
0x78d PUSH1 0xff
0x78f AND
0x790 DUP2
0x791 JUMP
---
0x789: JUMPDEST 
0x78a: V707 = 0x1
0x78c: V708 = S[0x1]
0x78d: V709 = 0xff
0x78f: V710 = AND 0xff V708
0x791: JUMP 0x313
---
Entry stack: [V12, 0x313]
Stack pops: 1
Stack additions: [S0, V710]
Exit stack: [V12, 0x313, V710]

================================

Block 0x792
[0x792:0x7ab]
---
Predecessors: [0x331]
Successors: [0x7ac, 0x7b1]
---
0x792 JUMPDEST
0x793 PUSH1 0x4
0x795 SLOAD
0x796 PUSH1 0x0
0x798 SWAP1
0x799 CALLER
0x79a PUSH1 0x1
0x79c PUSH1 0xa0
0x79e PUSH1 0x2
0x7a0 EXP
0x7a1 SUB
0x7a2 SWAP1
0x7a3 DUP2
0x7a4 AND
0x7a5 SWAP2
0x7a6 AND
0x7a7 EQ
0x7a8 PUSH2 0x7b1
0x7ab JUMPI
---
0x792: JUMPDEST 
0x793: V711 = 0x4
0x795: V712 = S[0x4]
0x796: V713 = 0x0
0x799: V714 = CALLER
0x79a: V715 = 0x1
0x79c: V716 = 0xa0
0x79e: V717 = 0x2
0x7a0: V718 = EXP 0x2 0xa0
0x7a1: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a4: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0x7a6: V721 = AND V712 0xffffffffffffffffffffffffffffffffffffffff
0x7a7: V722 = EQ V721 V720
0x7a8: V723 = 0x7b1
0x7ab: JUMPI 0x7b1 V722
---
Entry stack: [V12, 0x14c, V301]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x14c, V301, 0x0]

================================

Block 0x7ac
[0x7ac:0x7b0]
---
Predecessors: [0x792]
Successors: []
---
0x7ac PUSH1 0x0
0x7ae PUSH1 0x0
0x7b0 REVERT
---
0x7ac: V724 = 0x0
0x7ae: V725 = 0x0
0x7b0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14c, V301, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V301, 0x0]

================================

Block 0x7b1
[0x7b1:0x801]
---
Predecessors: [0x792]
Successors: [0x802]
---
0x7b1 JUMPDEST
0x7b2 PUSH1 0x1
0x7b4 DUP1
0x7b5 SLOAD
0x7b6 PUSH1 0xff
0x7b8 NOT
0x7b9 AND
0x7ba PUSH1 0xff
0x7bc DUP5
0x7bd DUP2
0x7be AND
0x7bf SWAP2
0x7c0 SWAP1
0x7c1 SWAP2
0x7c2 OR
0x7c3 SWAP2
0x7c4 DUP3
0x7c5 SWAP1
0x7c6 SSTORE
0x7c7 PUSH1 0x0
0x7c9 SLOAD
0x7ca PUSH1 0x2
0x7cc SLOAD
0x7cd PUSH1 0x40
0x7cf DUP1
0x7d0 MLOAD
0x7d1 SWAP3
0x7d2 DUP4
0x7d3 MSTORE
0x7d4 PUSH1 0x20
0x7d6 DUP4
0x7d7 ADD
0x7d8 SWAP2
0x7d9 SWAP1
0x7da SWAP2
0x7db MSTORE
0x7dc SWAP3
0x7dd SWAP1
0x7de SWAP2
0x7df AND
0x7e0 DUP2
0x7e1 DUP4
0x7e2 ADD
0x7e3 MSTORE
0x7e4 SWAP1
0x7e5 MLOAD
0x7e6 PUSH1 0x0
0x7e8 DUP1
0x7e9 MLOAD
0x7ea PUSH1 0x20
0x7ec PUSH2 0xb26
0x7ef DUP4
0x7f0 CODECOPY
0x7f1 DUP2
0x7f2 MLOAD
0x7f3 SWAP2
0x7f4 MSTORE
0x7f5 SWAP2
0x7f6 PUSH1 0x60
0x7f8 SWAP1
0x7f9 DUP3
0x7fa SWAP1
0x7fb SUB
0x7fc ADD
0x7fd SWAP1
0x7fe LOG1
0x7ff POP
0x800 PUSH1 0x1
---
0x7b1: JUMPDEST 
0x7b2: V726 = 0x1
0x7b5: V727 = S[0x1]
0x7b6: V728 = 0xff
0x7b8: V729 = NOT 0xff
0x7b9: V730 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V727
0x7ba: V731 = 0xff
0x7be: V732 = AND 0xff V301
0x7c2: V733 = OR V732 V730
0x7c6: S[0x1] = V733
0x7c7: V734 = 0x0
0x7c9: V735 = S[0x0]
0x7ca: V736 = 0x2
0x7cc: V737 = S[0x2]
0x7cd: V738 = 0x40
0x7d0: V739 = M[0x40]
0x7d3: M[V739] = V735
0x7d4: V740 = 0x20
0x7d7: V741 = ADD V739 0x20
0x7db: M[V741] = V737
0x7df: V742 = AND 0xff V733
0x7e2: V743 = ADD 0x40 V739
0x7e3: M[V743] = V742
0x7e5: V744 = M[0x40]
0x7e6: V745 = 0x0
0x7e9: V746 = M[0x0]
0x7ea: V747 = 0x20
0x7ec: V748 = 0xb26
0x7f0: CODECOPY 0x0 0xb26 0x20
0x7f2: V749 = M[0x0]
0x7f4: M[0x0] = V746
0x7f6: V750 = 0x60
0x7fb: V751 = SUB V739 V744
0x7fc: V752 = ADD V751 0x60
0x7fe: LOG V744 V752 V749
0x800: V753 = 0x1
---
Entry stack: [V12, 0x14c, V301, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x14c, V301, 0x1]

================================

Block 0x802
[0x802:0x802]
---
Predecessors: [0x7b1]
Successors: [0x803]
---
0x802 JUMPDEST
---
0x802: JUMPDEST 
---
Entry stack: [V12, 0x14c, V301, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V301, 0x1]

================================

Block 0x803
[0x803:0x807]
---
Predecessors: [0x802]
Successors: [0x14c]
---
0x803 JUMPDEST
0x804 SWAP2
0x805 SWAP1
0x806 POP
0x807 JUMP
---
0x803: JUMPDEST 
0x807: JUMP 0x14c
---
Entry stack: [V12, 0x14c, V301, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x808
[0x808:0x823]
---
Predecessors: [0x35b]
Successors: [0x824]
---
0x808 JUMPDEST
0x809 PUSH1 0x4
0x80b DUP1
0x80c SLOAD
0x80d PUSH1 0x1
0x80f PUSH1 0xa0
0x811 PUSH1 0x2
0x813 EXP
0x814 SUB
0x815 NOT
0x816 AND
0x817 CALLER
0x818 PUSH1 0x1
0x81a PUSH1 0xa0
0x81c PUSH1 0x2
0x81e EXP
0x81f SUB
0x820 AND
0x821 OR
0x822 SWAP1
0x823 SSTORE
---
0x808: JUMPDEST 
0x809: V754 = 0x4
0x80c: V755 = S[0x4]
0x80d: V756 = 0x1
0x80f: V757 = 0xa0
0x811: V758 = 0x2
0x813: V759 = EXP 0x2 0xa0
0x814: V760 = SUB 0x10000000000000000000000000000000000000000 0x1
0x815: V761 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x816: V762 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V755
0x817: V763 = CALLER
0x818: V764 = 0x1
0x81a: V765 = 0xa0
0x81c: V766 = 0x2
0x81e: V767 = EXP 0x2 0xa0
0x81f: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x820: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V763
0x821: V770 = OR V769 V762
0x823: S[0x4] = V770
---
Entry stack: [V12, 0x121]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121]

================================

Block 0x824
[0x824:0x825]
---
Predecessors: [0x808]
Successors: [0x121]
---
0x824 JUMPDEST
0x825 JUMP
---
0x824: JUMPDEST 
0x825: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x826
[0x826:0x849]
---
Predecessors: [0x36d, 0x3fc, 0x914]
Successors: [0x84a, 0x86b]
---
0x826 JUMPDEST
0x827 PUSH1 0x1
0x829 PUSH1 0xa0
0x82b PUSH1 0x2
0x82d EXP
0x82e SUB
0x82f DUP2
0x830 AND
0x831 PUSH1 0x0
0x833 SWAP1
0x834 DUP2
0x835 MSTORE
0x836 PUSH1 0x3
0x838 PUSH1 0x20
0x83a MSTORE
0x83b PUSH1 0x40
0x83d DUP2
0x83e SHA3
0x83f PUSH1 0x1
0x841 ADD
0x842 SLOAD
0x843 ISZERO
0x844 DUP1
0x845 ISZERO
0x846 PUSH2 0x86b
0x849 JUMPI
---
0x826: JUMPDEST 
0x827: V771 = 0x1
0x829: V772 = 0xa0
0x82b: V773 = 0x2
0x82d: V774 = EXP 0x2 0xa0
0x82e: V775 = SUB 0x10000000000000000000000000000000000000000 0x1
0x830: V776 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x831: V777 = 0x0
0x835: M[0x0] = V776
0x836: V778 = 0x3
0x838: V779 = 0x20
0x83a: M[0x20] = 0x3
0x83b: V780 = 0x40
0x83e: V781 = SHA3 0x0 0x40
0x83f: V782 = 0x1
0x841: V783 = ADD 0x1 V781
0x842: V784 = S[V783]
0x843: V785 = ISZERO V784
0x845: V786 = ISZERO V785
0x846: V787 = 0x86b
0x849: JUMPI 0x86b V786
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S8, {0x0, 0x121}, S6, {0x121, 0x587, 0x6f1}, S4, S3, S2, {0x14c, 0x405, 0x91f}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V785]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S8, {0x0, 0x121}, S6, {0x121, 0x587, 0x6f1}, S4, S3, S2, {0x14c, 0x405, 0x91f}, S0, 0x0, V785]

================================

Block 0x84a
[0x84a:0x86a]
---
Predecessors: [0x826]
Successors: [0x86b]
---
0x84a POP
0x84b PUSH1 0x1
0x84d PUSH1 0xa0
0x84f PUSH1 0x2
0x851 EXP
0x852 SUB
0x853 DUP3
0x854 AND
0x855 PUSH1 0x0
0x857 SWAP1
0x858 DUP2
0x859 MSTORE
0x85a PUSH1 0x3
0x85c PUSH1 0x20
0x85e MSTORE
0x85f PUSH1 0x40
0x861 DUP2
0x862 SHA3
0x863 PUSH1 0x4
0x865 ADD
0x866 SLOAD
0x867 PUSH1 0xff
0x869 AND
0x86a GT
---
0x84b: V788 = 0x1
0x84d: V789 = 0xa0
0x84f: V790 = 0x2
0x851: V791 = EXP 0x2 0xa0
0x852: V792 = SUB 0x10000000000000000000000000000000000000000 0x1
0x854: V793 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x855: V794 = 0x0
0x859: M[0x0] = V793
0x85a: V795 = 0x3
0x85c: V796 = 0x20
0x85e: M[0x20] = 0x3
0x85f: V797 = 0x40
0x862: V798 = SHA3 0x0 0x40
0x863: V799 = 0x4
0x865: V800 = ADD 0x4 V798
0x866: V801 = S[V800]
0x867: V802 = 0xff
0x869: V803 = AND 0xff V801
0x86a: V804 = GT V803 0x0
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S10, {0x0, 0x121}, S8, {0x121, 0x587, 0x6f1}, S6, S5, S4, {0x14c, 0x405, 0x91f}, S2, 0x0, V785]
Stack pops: 3
Stack additions: [S2, S1, V804]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S10, {0x0, 0x121}, S8, {0x121, 0x587, 0x6f1}, S6, S5, S4, {0x14c, 0x405, 0x91f}, S2, 0x0, V804]

================================

Block 0x86b
[0x86b:0x870]
---
Predecessors: [0x826, 0x84a]
Successors: [0x871, 0x878]
---
0x86b JUMPDEST
0x86c ISZERO
0x86d PUSH2 0x878
0x870 JUMPI
---
0x86b: JUMPDEST 
0x86c: V805 = ISZERO S0
0x86d: V806 = 0x878
0x870: JUMPI 0x878 V805
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S10, {0x0, 0x121}, S8, {0x121, 0x587, 0x6f1}, S6, S5, S4, {0x14c, 0x405, 0x91f}, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S10, {0x0, 0x121}, S8, {0x121, 0x587, 0x6f1}, S6, S5, S4, {0x14c, 0x405, 0x91f}, S2, 0x0]

================================

Block 0x871
[0x871:0x877]
---
Predecessors: [0x86b]
Successors: [0x5fa]
---
0x871 POP
0x872 PUSH1 0x1
0x874 PUSH2 0x5fa
0x877 JUMP
---
0x872: V807 = 0x1
0x874: V808 = 0x5fa
0x877: JUMP 0x5fa
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, {0x14c, 0x405, 0x91f}, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, {0x14c, 0x405, 0x91f}, S1, 0x1]

================================

Block 0x878
[0x878:0x87b]
---
Predecessors: [0x86b]
Successors: [0x87c]
---
0x878 JUMPDEST
0x879 POP
0x87a PUSH1 0x0
---
0x878: JUMPDEST 
0x87a: V809 = 0x0
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, {0x14c, 0x405, 0x91f}, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, {0x14c, 0x405, 0x91f}, S1, 0x0]

================================

Block 0x87c
[0x87c:0x880]
---
Predecessors: [0x878]
Successors: [0x14c, 0x405, 0x91f]
---
0x87c JUMPDEST
0x87d SWAP2
0x87e SWAP1
0x87f POP
0x880 JUMP
---
0x87c: JUMPDEST 
0x880: JUMP {0x14c, 0x405, 0x91f}
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, {0x14c, 0x405, 0x91f}, S1, 0x0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S9, {0x0, 0x121}, S7, {0x121, 0x587, 0x6f1}, S5, S4, S3, 0x0]

================================

Block 0x881
[0x881:0x897]
---
Predecessors: [0x39d]
Successors: [0x898, 0x89d]
---
0x881 JUMPDEST
0x882 PUSH1 0x4
0x884 SLOAD
0x885 CALLER
0x886 PUSH1 0x1
0x888 PUSH1 0xa0
0x88a PUSH1 0x2
0x88c EXP
0x88d SUB
0x88e SWAP1
0x88f DUP2
0x890 AND
0x891 SWAP2
0x892 AND
0x893 EQ
0x894 PUSH2 0x89d
0x897 JUMPI
---
0x881: JUMPDEST 
0x882: V810 = 0x4
0x884: V811 = S[0x4]
0x885: V812 = CALLER
0x886: V813 = 0x1
0x888: V814 = 0xa0
0x88a: V815 = 0x2
0x88c: V816 = EXP 0x2 0xa0
0x88d: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x890: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x892: V819 = AND V811 0xffffffffffffffffffffffffffffffffffffffff
0x893: V820 = EQ V819 V818
0x894: V821 = 0x89d
0x897: JUMPI 0x89d V820
---
Entry stack: [V12, 0x121, V348]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121, V348]

================================

Block 0x898
[0x898:0x89c]
---
Predecessors: [0x881]
Successors: []
---
0x898 PUSH1 0x0
0x89a PUSH1 0x0
0x89c REVERT
---
0x898: V822 = 0x0
0x89a: V823 = 0x0
0x89c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x121, V348]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121, V348]

================================

Block 0x89d
[0x89d:0x8b8]
---
Predecessors: [0x881]
Successors: [0x8b9]
---
0x89d JUMPDEST
0x89e PUSH1 0x4
0x8a0 DUP1
0x8a1 SLOAD
0x8a2 PUSH1 0x1
0x8a4 PUSH1 0xa0
0x8a6 PUSH1 0x2
0x8a8 EXP
0x8a9 SUB
0x8aa NOT
0x8ab AND
0x8ac PUSH1 0x1
0x8ae PUSH1 0xa0
0x8b0 PUSH1 0x2
0x8b2 EXP
0x8b3 SUB
0x8b4 DUP4
0x8b5 AND
0x8b6 OR
0x8b7 SWAP1
0x8b8 SSTORE
---
0x89d: JUMPDEST 
0x89e: V824 = 0x4
0x8a1: V825 = S[0x4]
0x8a2: V826 = 0x1
0x8a4: V827 = 0xa0
0x8a6: V828 = 0x2
0x8a8: V829 = EXP 0x2 0xa0
0x8a9: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8aa: V831 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8ab: V832 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V825
0x8ac: V833 = 0x1
0x8ae: V834 = 0xa0
0x8b0: V835 = 0x2
0x8b2: V836 = EXP 0x2 0xa0
0x8b3: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b5: V838 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x8b6: V839 = OR V838 V832
0x8b8: S[0x4] = V839
---
Entry stack: [V12, 0x121, V348]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x121, V348]

================================

Block 0x8b9
[0x8b9:0x8b9]
---
Predecessors: [0x89d]
Successors: [0x8ba]
---
0x8b9 JUMPDEST
---
0x8b9: JUMPDEST 
---
Entry stack: [V12, 0x121, V348]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x121, V348]

================================

Block 0x8ba
[0x8ba:0x8bc]
---
Predecessors: [0x8b9]
Successors: [0x121]
---
0x8ba JUMPDEST
0x8bb POP
0x8bc JUMP
---
0x8ba: JUMPDEST 
0x8bc: JUMP 0x121
---
Entry stack: [V12, 0x121, V348]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x8bd
[0x8bd:0x8d6]
---
Predecessors: [0x3bb]
Successors: [0x8d7, 0x8dc]
---
0x8bd JUMPDEST
0x8be PUSH1 0x4
0x8c0 SLOAD
0x8c1 PUSH1 0x0
0x8c3 SWAP1
0x8c4 CALLER
0x8c5 PUSH1 0x1
0x8c7 PUSH1 0xa0
0x8c9 PUSH1 0x2
0x8cb EXP
0x8cc SUB
0x8cd SWAP1
0x8ce DUP2
0x8cf AND
0x8d0 SWAP2
0x8d1 AND
0x8d2 EQ
0x8d3 PUSH2 0x8dc
0x8d6 JUMPI
---
0x8bd: JUMPDEST 
0x8be: V840 = 0x4
0x8c0: V841 = S[0x4]
0x8c1: V842 = 0x0
0x8c4: V843 = CALLER
0x8c5: V844 = 0x1
0x8c7: V845 = 0xa0
0x8c9: V846 = 0x2
0x8cb: V847 = EXP 0x2 0xa0
0x8cc: V848 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8cf: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0x8d1: V850 = AND V841 0xffffffffffffffffffffffffffffffffffffffff
0x8d2: V851 = EQ V850 V849
0x8d3: V852 = 0x8dc
0x8d6: JUMPI 0x8dc V851
---
Entry stack: [V12, 0x14c, V361, V363]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x14c, V361, V363, 0x0]

================================

Block 0x8d7
[0x8d7:0x8db]
---
Predecessors: [0x8bd]
Successors: []
---
0x8d7 PUSH1 0x0
0x8d9 PUSH1 0x0
0x8db REVERT
---
0x8d7: V853 = 0x0
0x8d9: V854 = 0x0
0x8db: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14c, V361, V363, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V361, V363, 0x0]

================================

Block 0x8dc
[0x8dc:0x907]
---
Predecessors: [0x8bd]
Successors: [0x908, 0x909]
---
0x8dc JUMPDEST
0x8dd PUSH1 0x40
0x8df MLOAD
0x8e0 PUSH1 0x1
0x8e2 PUSH1 0xa0
0x8e4 PUSH1 0x2
0x8e6 EXP
0x8e7 SUB
0x8e8 DUP5
0x8e9 AND
0x8ea SWAP1
0x8eb DUP4
0x8ec ISZERO
0x8ed PUSH2 0x8fc
0x8f0 MUL
0x8f1 SWAP1
0x8f2 DUP5
0x8f3 SWAP1
0x8f4 PUSH1 0x0
0x8f6 DUP2
0x8f7 DUP2
0x8f8 DUP2
0x8f9 DUP6
0x8fa DUP9
0x8fb DUP9
0x8fc CALL
0x8fd SWAP4
0x8fe POP
0x8ff POP
0x900 POP
0x901 POP
0x902 ISZERO
0x903 ISZERO
0x904 PUSH2 0x909
0x907 JUMPI
---
0x8dc: JUMPDEST 
0x8dd: V855 = 0x40
0x8df: V856 = M[0x40]
0x8e0: V857 = 0x1
0x8e2: V858 = 0xa0
0x8e4: V859 = 0x2
0x8e6: V860 = EXP 0x2 0xa0
0x8e7: V861 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e9: V862 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x8ec: V863 = ISZERO V363
0x8ed: V864 = 0x8fc
0x8f0: V865 = MUL 0x8fc V863
0x8f4: V866 = 0x0
0x8fc: V867 = CALL V865 V862 V363 V856 0x0 V856 0x0
0x902: V868 = ISZERO V867
0x903: V869 = ISZERO V868
0x904: V870 = 0x909
0x907: JUMPI 0x909 V869
---
Entry stack: [V12, 0x14c, V361, V363, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x14c, V361, V363, 0x0]

================================

Block 0x908
[0x908:0x908]
---
Predecessors: [0x8dc]
Successors: []
---
0x908 INVALID
---
0x908: INVALID 
---
Entry stack: [V12, 0x14c, V361, V363, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V361, V363, 0x0]

================================

Block 0x909
[0x909:0x90c]
---
Predecessors: [0x8dc]
Successors: [0x90d]
---
0x909 JUMPDEST
0x90a POP
0x90b PUSH1 0x1
---
0x909: JUMPDEST 
0x90b: V871 = 0x1
---
Entry stack: [V12, 0x14c, V361, V363, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x14c, V361, V363, 0x1]

================================

Block 0x90d
[0x90d:0x90d]
---
Predecessors: [0x909]
Successors: [0x90e]
---
0x90d JUMPDEST
---
0x90d: JUMPDEST 
---
Entry stack: [V12, 0x14c, V361, V363, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V361, V363, 0x1]

================================

Block 0x90e
[0x90e:0x913]
---
Predecessors: [0x90d]
Successors: [0x14c]
---
0x90e JUMPDEST
0x90f SWAP3
0x910 SWAP2
0x911 POP
0x912 POP
0x913 JUMP
---
0x90e: JUMPDEST 
0x913: JUMP 0x14c
---
Entry stack: [V12, 0x14c, V361, V363, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x914
[0x914:0x91e]
---
Predecessors: [0x57d, 0x6dd]
Successors: [0x826]
---
0x914 JUMPDEST
0x915 PUSH1 0x0
0x917 PUSH2 0x91f
0x91a DUP4
0x91b PUSH2 0x826
0x91e JUMP
---
0x914: JUMPDEST 
0x915: V872 = 0x0
0x917: V873 = 0x91f
0x91b: V874 = 0x826
0x91e: JUMP 0x826
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S5, {0x0, 0x121}, S3, {0x587, 0x6f1}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x91f, S1]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S5, {0x0, 0x121}, S3, {0x587, 0x6f1}, S1, S0, 0x0, 0x91f, S1]

================================

Block 0x91f
[0x91f:0x924]
---
Predecessors: [0x5fb, 0x87c]
Successors: [0x925, 0x985]
---
0x91f JUMPDEST
0x920 ISZERO
0x921 PUSH2 0x985
0x924 JUMPI
---
0x91f: JUMPDEST 
0x920: V875 = ISZERO {0x0, 0x1}
0x921: V876 = 0x985
0x924: JUMPI 0x985 V875
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S7, {0x0, 0x121}, S5, {0x121, 0x587, 0x6f1}, S3, S2, S1]

================================

Block 0x925
[0x925:0x92c]
---
Predecessors: [0x91f]
Successors: [0xa78]
---
0x925 PUSH2 0x92d
0x928 DUP4
0x929 PUSH2 0xa78
0x92c JUMP
---
0x925: V877 = 0x92d
0x929: V878 = 0xa78
0x92c: JUMP 0xa78
---
Entry stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x92d, S2]
Exit stack: [V12, 0x22b, V193, 0x0, 0x0, S6, {0x0, 0x121}, S4, {0x121, 0x587, 0x6f1}, S2, S1, S0, 0x92d, S2]

================================

Block 0x92d
[0x92d:0x933]
---
Predecessors: [0xacb]
Successors: [0x934, 0x985]
---
0x92d JUMPDEST
0x92e ISZERO
0x92f ISZERO
0x930 PUSH2 0x985
0x933 JUMPI
---
0x92d: JUMPDEST 
0x92e: V879 = ISZERO S0
0x92f: V880 = ISZERO V879
0x930: V881 = 0x985
0x933: JUMPI 0x985 V880
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x934
[0x934:0x956]
---
Predecessors: [0x92d]
Successors: [0x957, 0x978]
---
0x934 PUSH1 0x1
0x936 PUSH1 0xa0
0x938 PUSH1 0x2
0x93a EXP
0x93b SUB
0x93c DUP1
0x93d DUP5
0x93e AND
0x93f PUSH1 0x0
0x941 DUP2
0x942 DUP2
0x943 MSTORE
0x944 PUSH1 0x3
0x946 PUSH1 0x20
0x948 MSTORE
0x949 PUSH1 0x40
0x94b SWAP1
0x94c SHA3
0x94d SLOAD
0x94e SWAP1
0x94f SWAP2
0x950 AND
0x951 EQ
0x952 DUP1
0x953 PUSH2 0x978
0x956 JUMPI
---
0x934: V882 = 0x1
0x936: V883 = 0xa0
0x938: V884 = 0x2
0x93a: V885 = EXP 0x2 0xa0
0x93b: V886 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93e: V887 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x93f: V888 = 0x0
0x943: M[0x0] = V887
0x944: V889 = 0x3
0x946: V890 = 0x20
0x948: M[0x20] = 0x3
0x949: V891 = 0x40
0x94c: V892 = SHA3 0x0 0x40
0x94d: V893 = S[V892]
0x950: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V893
0x951: V895 = EQ V894 V887
0x953: V896 = 0x978
0x956: JUMPI 0x978 V895
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V895]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V895]

================================

Block 0x957
[0x957:0x977]
---
Predecessors: [0x934]
Successors: [0x978]
---
0x957 POP
0x958 PUSH1 0x1
0x95a PUSH1 0xa0
0x95c PUSH1 0x2
0x95e EXP
0x95f SUB
0x960 DUP4
0x961 DUP2
0x962 AND
0x963 PUSH1 0x0
0x965 SWAP1
0x966 DUP2
0x967 MSTORE
0x968 PUSH1 0x3
0x96a PUSH1 0x20
0x96c MSTORE
0x96d PUSH1 0x40
0x96f SWAP1
0x970 SHA3
0x971 SLOAD
0x972 DUP2
0x973 AND
0x974 SWAP1
0x975 DUP4
0x976 AND
0x977 EQ
---
0x958: V897 = 0x1
0x95a: V898 = 0xa0
0x95c: V899 = 0x2
0x95e: V900 = EXP 0x2 0xa0
0x95f: V901 = SUB 0x10000000000000000000000000000000000000000 0x1
0x962: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x963: V903 = 0x0
0x967: M[0x0] = V902
0x968: V904 = 0x3
0x96a: V905 = 0x20
0x96c: M[0x20] = 0x3
0x96d: V906 = 0x40
0x970: V907 = SHA3 0x0 0x40
0x971: V908 = S[V907]
0x973: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0x976: V910 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x977: V911 = EQ V910 V909
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V895]
Stack pops: 4
Stack additions: [S3, S2, S1, V911]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V911]

================================

Block 0x978
[0x978:0x97d]
---
Predecessors: [0x934, 0x957]
Successors: [0x97e, 0x985]
---
0x978 JUMPDEST
0x979 ISZERO
0x97a PUSH2 0x985
0x97d JUMPI
---
0x978: JUMPDEST 
0x979: V912 = ISZERO S0
0x97a: V913 = 0x985
0x97d: JUMPI 0x985 V912
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x97e
[0x97e:0x984]
---
Predecessors: [0x978]
Successors: [0x630]
---
0x97e POP
0x97f PUSH1 0x1
0x981 PUSH2 0x630
0x984 JUMP
---
0x97f: V914 = 0x1
0x981: V915 = 0x630
0x984: JUMP 0x630
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x985
[0x985:0x985]
---
Predecessors: [0x91f, 0x92d, 0x978]
Successors: [0x986]
---
0x985 JUMPDEST
---
0x985: JUMPDEST 
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x986
[0x986:0x986]
---
Predecessors: [0x985]
Successors: [0x987]
---
0x986 JUMPDEST
---
0x986: JUMPDEST 
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x987
[0x987:0x98a]
---
Predecessors: [0x986]
Successors: [0x98b]
---
0x987 JUMPDEST
0x988 POP
0x989 PUSH1 0x0
---
0x987: JUMPDEST 
0x989: V916 = 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x98b
[0x98b:0x990]
---
Predecessors: [0x987]
Successors: [0x121, 0x587, 0x598, 0x6f1]
---
0x98b JUMPDEST
0x98c SWAP3
0x98d SWAP2
0x98e POP
0x98f POP
0x990 JUMP
---
0x98b: JUMPDEST 
0x990: JUMP S3
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0]

================================

Block 0x991
[0x991:0x99d]
---
Predecessors: [0x58f]
Successors: [0xad2]
---
0x991 JUMPDEST
0x992 PUSH1 0x0
0x994 PUSH1 0x0
0x996 PUSH2 0x99e
0x999 DUP4
0x99a PUSH2 0xad2
0x99d JUMP
---
0x991: JUMPDEST 
0x992: V917 = 0x0
0x994: V918 = 0x0
0x996: V919 = 0x99e
0x99a: V920 = 0xad2
0x99d: JUMP 0xad2
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x598, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x99e, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x598, S0, 0x0, 0x0, 0x99e, S0]

================================

Block 0x99e
[0x99e:0x9d1]
---
Predecessors: [0xb05]
Successors: [0x600]
---
0x99e JUMPDEST
0x99f SWAP2
0x9a0 POP
0x9a1 PUSH2 0x9d2
0x9a4 DUP3
0x9a5 PUSH1 0x3
0x9a7 PUSH1 0x0
0x9a9 DUP7
0x9aa PUSH1 0x1
0x9ac PUSH1 0xa0
0x9ae PUSH1 0x2
0x9b0 EXP
0x9b1 SUB
0x9b2 AND
0x9b3 PUSH1 0x1
0x9b5 PUSH1 0xa0
0x9b7 PUSH1 0x2
0x9b9 EXP
0x9ba SUB
0x9bb AND
0x9bc DUP2
0x9bd MSTORE
0x9be PUSH1 0x20
0x9c0 ADD
0x9c1 SWAP1
0x9c2 DUP2
0x9c3 MSTORE
0x9c4 PUSH1 0x20
0x9c6 ADD
0x9c7 PUSH1 0x0
0x9c9 SHA3
0x9ca PUSH1 0x3
0x9cc ADD
0x9cd SLOAD
0x9ce PUSH2 0x600
0x9d1 JUMP
---
0x99e: JUMPDEST 
0x9a1: V921 = 0x9d2
0x9a5: V922 = 0x3
0x9a7: V923 = 0x0
0x9aa: V924 = 0x1
0x9ac: V925 = 0xa0
0x9ae: V926 = 0x2
0x9b0: V927 = EXP 0x2 0xa0
0x9b1: V928 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b2: V929 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x9b3: V930 = 0x1
0x9b5: V931 = 0xa0
0x9b7: V932 = 0x2
0x9b9: V933 = EXP 0x2 0xa0
0x9ba: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9bb: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V929
0x9bd: M[0x0] = V935
0x9be: V936 = 0x20
0x9c0: V937 = ADD 0x20 0x0
0x9c3: M[0x20] = 0x3
0x9c4: V938 = 0x20
0x9c6: V939 = ADD 0x20 0x20
0x9c7: V940 = 0x0
0x9c9: V941 = SHA3 0x0 0x40
0x9ca: V942 = 0x3
0x9cc: V943 = ADD 0x3 V941
0x9cd: V944 = S[V943]
0x9ce: V945 = 0x600
0x9d1: JUMP 0x600
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S0, S1, 0x9d2, S0, V944]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, 0x9d2, S0, V944]

================================

Block 0x9d2
[0x9d2:0xa4a]
---
Predecessors: [0x630, 0xacb]
Successors: [0xa4b]
---
0x9d2 JUMPDEST
0x9d3 PUSH1 0x1
0x9d5 PUSH1 0xa0
0x9d7 PUSH1 0x2
0x9d9 EXP
0x9da SUB
0x9db DUP5
0x9dc AND
0x9dd PUSH1 0x0
0x9df DUP2
0x9e0 DUP2
0x9e1 MSTORE
0x9e2 PUSH1 0x3
0x9e4 PUSH1 0x20
0x9e6 DUP2
0x9e7 DUP2
0x9e8 MSTORE
0x9e9 PUSH1 0x40
0x9eb SWAP3
0x9ec DUP4
0x9ed SWAP1
0x9ee SHA3
0x9ef PUSH1 0x1
0x9f1 DUP2
0x9f2 ADD
0x9f3 DUP7
0x9f4 SWAP1
0x9f5 SSTORE
0x9f6 PUSH1 0x4
0x9f8 DUP2
0x9f9 ADD
0x9fa DUP1
0x9fb SLOAD
0x9fc PUSH1 0xff
0x9fe NOT
0x9ff AND
0xa00 SWAP1
0xa01 SSTORE
0xa02 PUSH1 0x2
0xa04 DUP2
0xa05 ADD
0xa06 DUP9
0xa07 SWAP1
0xa08 SSTORE
0xa09 SWAP1
0xa0a SWAP2
0xa0b ADD
0xa0c SLOAD
0xa0d DUP3
0xa0e MLOAD
0xa0f SWAP4
0xa10 DUP5
0xa11 MSTORE
0xa12 SWAP1
0xa13 DUP4
0xa14 ADD
0xa15 MSTORE
0xa16 DUP2
0xa17 DUP2
0xa18 ADD
0xa19 DUP4
0xa1a SWAP1
0xa1b MSTORE
0xa1c MLOAD
0xa1d SWAP2
0xa1e SWAP3
0xa1f POP
0xa20 PUSH32 0x7482e5336f1e1d41a854354f7d34587683eada063aece86f3318e562e124381d
0xa41 SWAP2
0xa42 SWAP1
0xa43 DUP2
0xa44 SWAP1
0xa45 SUB
0xa46 PUSH1 0x60
0xa48 ADD
0xa49 SWAP1
0xa4a LOG1
---
0x9d2: JUMPDEST 
0x9d3: V946 = 0x1
0x9d5: V947 = 0xa0
0x9d7: V948 = 0x2
0x9d9: V949 = EXP 0x2 0xa0
0x9da: V950 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9dc: V951 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x9dd: V952 = 0x0
0x9e1: M[0x0] = V951
0x9e2: V953 = 0x3
0x9e4: V954 = 0x20
0x9e8: M[0x20] = 0x3
0x9e9: V955 = 0x40
0x9ee: V956 = SHA3 0x0 0x40
0x9ef: V957 = 0x1
0x9f2: V958 = ADD V956 0x1
0x9f5: S[V958] = S0
0x9f6: V959 = 0x4
0x9f9: V960 = ADD V956 0x4
0x9fb: V961 = S[V960]
0x9fc: V962 = 0xff
0x9fe: V963 = NOT 0xff
0x9ff: V964 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V961
0xa01: S[V960] = V964
0xa02: V965 = 0x2
0xa05: V966 = ADD V956 0x2
0xa08: S[V966] = S2
0xa0b: V967 = ADD 0x3 V956
0xa0c: V968 = S[V967]
0xa0e: V969 = M[0x40]
0xa11: M[V969] = V951
0xa14: V970 = ADD V969 0x20
0xa15: M[V970] = V968
0xa18: V971 = ADD 0x40 V969
0xa1b: M[V971] = S0
0xa1c: V972 = M[0x40]
0xa20: V973 = 0x7482e5336f1e1d41a854354f7d34587683eada063aece86f3318e562e124381d
0xa45: V974 = SUB V969 V972
0xa46: V975 = 0x60
0xa48: V976 = ADD 0x60 V974
0xa4a: LOG V972 V976 0x7482e5336f1e1d41a854354f7d34587683eada063aece86f3318e562e124381d
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S0]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xa4b
[0xa4b:0xa4f]
---
Predecessors: [0x9d2]
Successors: [0x121, 0x22b, 0x587, 0x598, 0x6f1]
---
0xa4b JUMPDEST
0xa4c POP
0xa4d POP
0xa4e POP
0xa4f JUMP
---
0xa4b: JUMPDEST 
0xa4f: JUMP S3
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0xa50
[0xa50:0xa5f]
---
Predecessors: [0x625, 0xa78, 0xad2]
Successors: [0xa60, 0xa65]
---
0xa50 JUMPDEST
0xa51 PUSH1 0x0
0xa53 DUP3
0xa54 DUP3
0xa55 ADD
0xa56 DUP4
0xa57 DUP2
0xa58 LT
0xa59 DUP1
0xa5a ISZERO
0xa5b SWAP1
0xa5c PUSH2 0xa65
0xa5f JUMPI
---
0xa50: JUMPDEST 
0xa51: V977 = 0x0
0xa55: V978 = ADD S0 S1
0xa58: V979 = LT V978 S1
0xa5a: V980 = ISZERO V979
0xa5c: V981 = 0xa65
0xa5f: JUMPI 0xa65 V979
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, {0x62d, 0xaac, 0xb02}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V978, V980]
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, {0x62d, 0xaac, 0xb02}, S1, S0, 0x0, V978, V980]

================================

Block 0xa60
[0xa60:0xa64]
---
Predecessors: [0xa50]
Successors: [0xa65]
---
0xa60 POP
0xa61 DUP3
0xa62 DUP2
0xa63 LT
0xa64 ISZERO
---
0xa63: V982 = LT V978 S3
0xa64: V983 = ISZERO V982
---
Entry stack: [V12, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x62d, 0xaac, 0xb02}, S4, S3, 0x0, V978, V980]
Stack pops: 4
Stack additions: [S3, S2, S1, V983]
Exit stack: [V12, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x62d, 0xaac, 0xb02}, S4, S3, 0x0, V978, V983]

================================

Block 0xa65
[0xa65:0xa6b]
---
Predecessors: [0xa50, 0xa60]
Successors: [0xa6c, 0xa6d]
---
0xa65 JUMPDEST
0xa66 ISZERO
0xa67 ISZERO
0xa68 PUSH2 0xa6d
0xa6b JUMPI
---
0xa65: JUMPDEST 
0xa66: V984 = ISZERO S0
0xa67: V985 = ISZERO V984
0xa68: V986 = 0xa6d
0xa6b: JUMPI 0xa6d V985
---
Entry stack: [V12, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x62d, 0xaac, 0xb02}, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x62d, 0xaac, 0xb02}, S4, S3, 0x0, S1]

================================

Block 0xa6c
[0xa6c:0xa6c]
---
Predecessors: [0xa65]
Successors: []
---
0xa6c INVALID
---
0xa6c: INVALID 
---
Entry stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x62d, 0xaac, 0xb02}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x62d, 0xaac, 0xb02}, S3, S2, 0x0, S0]

================================

Block 0xa6d
[0xa6d:0xa70]
---
Predecessors: [0xa65]
Successors: [0xa71]
---
0xa6d JUMPDEST
0xa6e DUP1
0xa6f SWAP2
0xa70 POP
---
0xa6d: JUMPDEST 
---
Entry stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x62d, 0xaac, 0xb02}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x62d, 0xaac, 0xb02}, S3, S2, S0, S0]

================================

Block 0xa71
[0xa71:0xa77]
---
Predecessors: [0xa6d]
Successors: [0x62d, 0xaac, 0xb02]
---
0xa71 JUMPDEST
0xa72 POP
0xa73 SWAP3
0xa74 SWAP2
0xa75 POP
0xa76 POP
0xa77 JUMP
---
0xa71: JUMPDEST 
0xa77: JUMP {0x62d, 0xaac, 0xb02}
---
Entry stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x62d, 0xaac, 0xb02}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S1]

================================

Block 0xa78
[0xa78:0xaab]
---
Predecessors: [0x6f1, 0x925]
Successors: [0xa50]
---
0xa78 JUMPDEST
0xa79 PUSH1 0x1
0xa7b PUSH1 0xa0
0xa7d PUSH1 0x2
0xa7f EXP
0xa80 SUB
0xa81 DUP2
0xa82 AND
0xa83 PUSH1 0x0
0xa85 SWAP1
0xa86 DUP2
0xa87 MSTORE
0xa88 PUSH1 0x3
0xa8a PUSH1 0x20
0xa8c MSTORE
0xa8d PUSH1 0x40
0xa8f DUP2
0xa90 SHA3
0xa91 PUSH1 0x2
0xa93 DUP2
0xa94 ADD
0xa95 SLOAD
0xa96 PUSH1 0x4
0xa98 SWAP1
0xa99 SWAP2
0xa9a ADD
0xa9b SLOAD
0xa9c DUP3
0xa9d SWAP2
0xa9e DUP3
0xa9f SWAP2
0xaa0 PUSH2 0xaac
0xaa3 SWAP2
0xaa4 SWAP1
0xaa5 PUSH1 0xff
0xaa7 AND
0xaa8 PUSH2 0xa50
0xaab JUMP
---
0xa78: JUMPDEST 
0xa79: V987 = 0x1
0xa7b: V988 = 0xa0
0xa7d: V989 = 0x2
0xa7f: V990 = EXP 0x2 0xa0
0xa80: V991 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa82: V992 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xa83: V993 = 0x0
0xa87: M[0x0] = V992
0xa88: V994 = 0x3
0xa8a: V995 = 0x20
0xa8c: M[0x20] = 0x3
0xa8d: V996 = 0x40
0xa90: V997 = SHA3 0x0 0x40
0xa91: V998 = 0x2
0xa94: V999 = ADD V997 0x2
0xa95: V1000 = S[V999]
0xa96: V1001 = 0x4
0xa9a: V1002 = ADD V997 0x4
0xa9b: V1003 = S[V1002]
0xaa0: V1004 = 0xaac
0xaa5: V1005 = 0xff
0xaa7: V1006 = AND 0xff V1003
0xaa8: V1007 = 0xa50
0xaab: JUMP 0xa50
---
Entry stack: [V12, 0x22b, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x6fa, 0x92d}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0xaac, V1000, V1006]
Exit stack: [V12, 0x22b, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x6fa, 0x92d}, S0, 0x0, 0x0, 0x0, 0xaac, V1000, V1006]

================================

Block 0xaac
[0xaac:0xaba]
---
Predecessors: [0xa71]
Successors: [0xabb, 0xac7]
---
0xaac JUMPDEST
0xaad SWAP2
0xaae POP
0xaaf PUSH1 0x0
0xab1 SWAP1
0xab2 POP
0xab3 NUMBER
0xab4 DUP3
0xab5 GT
0xab6 ISZERO
0xab7 PUSH2 0xac7
0xaba JUMPI
---
0xaac: JUMPDEST 
0xaaf: V1008 = 0x0
0xab3: V1009 = NUMBER
0xab5: V1010 = GT S0 V1009
0xab6: V1011 = ISZERO V1010
0xab7: V1012 = 0xac7
0xaba: JUMPI 0xac7 V1011
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S0, 0x0]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, 0x0]

================================

Block 0xabb
[0xabb:0xac3]
---
Predecessors: [0xaac]
Successors: [0xb0a]
---
0xabb PUSH2 0xac4
0xabe DUP3
0xabf NUMBER
0xac0 PUSH2 0xb0a
0xac3 JUMP
---
0xabb: V1013 = 0xac4
0xabf: V1014 = NUMBER
0xac0: V1015 = 0xb0a
0xac3: JUMP 0xb0a
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xac4, S1, V1014]
Exit stack: [S16, 0x22b, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, 0xac4, S1, V1014]

================================

Block 0xac4
[0xac4:0xac6]
---
Predecessors: [0xb1e]
Successors: [0xac7]
---
0xac4 JUMPDEST
0xac5 SWAP1
0xac6 POP
---
0xac4: JUMPDEST 
---
Entry stack: [V12, 0x22b, V193, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1041]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x22b, V193, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1041]

================================

Block 0xac7
[0xac7:0xaca]
---
Predecessors: [0xaac, 0xac4]
Successors: [0xacb]
---
0xac7 JUMPDEST
0xac8 DUP1
0xac9 SWAP3
0xaca POP
---
0xac7: JUMPDEST 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, S0]

================================

Block 0xacb
[0xacb:0xad1]
---
Predecessors: [0xac7]
Successors: [0xf2, 0x121, 0x6fa, 0x92d, 0x9d2]
---
0xacb JUMPDEST
0xacc POP
0xacd POP
0xace SWAP2
0xacf SWAP1
0xad0 POP
0xad1 JUMP
---
0xacb: JUMPDEST 
0xad1: JUMP S4
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S2]

================================

Block 0xad2
[0xad2:0xb01]
---
Predecessors: [0x6fa, 0x991]
Successors: [0xa50]
---
0xad2 JUMPDEST
0xad3 PUSH1 0x1
0xad5 PUSH1 0xa0
0xad7 PUSH1 0x2
0xad9 EXP
0xada SUB
0xadb DUP2
0xadc AND
0xadd PUSH1 0x0
0xadf SWAP1
0xae0 DUP2
0xae1 MSTORE
0xae2 PUSH1 0x3
0xae4 PUSH1 0x20
0xae6 MSTORE
0xae7 PUSH1 0x40
0xae9 DUP2
0xaea SHA3
0xaeb PUSH1 0x2
0xaed DUP2
0xaee ADD
0xaef SLOAD
0xaf0 PUSH1 0x4
0xaf2 SWAP1
0xaf3 SWAP2
0xaf4 ADD
0xaf5 SLOAD
0xaf6 PUSH2 0xb02
0xaf9 SWAP2
0xafa SWAP1
0xafb PUSH1 0xff
0xafd AND
0xafe PUSH2 0xa50
0xb01 JUMP
---
0xad2: JUMPDEST 
0xad3: V1016 = 0x1
0xad5: V1017 = 0xa0
0xad7: V1018 = 0x2
0xad9: V1019 = EXP 0x2 0xa0
0xada: V1020 = SUB 0x10000000000000000000000000000000000000000 0x1
0xadc: V1021 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xadd: V1022 = 0x0
0xae1: M[0x0] = V1021
0xae2: V1023 = 0x3
0xae4: V1024 = 0x20
0xae6: M[0x20] = 0x3
0xae7: V1025 = 0x40
0xaea: V1026 = SHA3 0x0 0x40
0xaeb: V1027 = 0x2
0xaee: V1028 = ADD V1026 0x2
0xaef: V1029 = S[V1028]
0xaf0: V1030 = 0x4
0xaf4: V1031 = ADD V1026 0x4
0xaf5: V1032 = S[V1031]
0xaf6: V1033 = 0xb02
0xafb: V1034 = 0xff
0xafd: V1035 = AND 0xff V1032
0xafe: V1036 = 0xa50
0xb01: JUMP 0xa50
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x703, 0x99e}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0xb02, V1029, V1035]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x703, 0x99e}, S0, 0x0, 0xb02, V1029, V1035]

================================

Block 0xb02
[0xb02:0xb04]
---
Predecessors: [0xa71]
Successors: [0xb05]
---
0xb02 JUMPDEST
0xb03 SWAP1
0xb04 POP
---
0xb02: JUMPDEST 
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xb05
[0xb05:0xb09]
---
Predecessors: [0xb02]
Successors: [0x703, 0x99e]
---
0xb05 JUMPDEST
0xb06 SWAP2
0xb07 SWAP1
0xb08 POP
0xb09 JUMP
---
0xb05: JUMPDEST 
0xb09: THROW 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0]

================================

Block 0xb0a
[0xb0a:0xb15]
---
Predecessors: [0xabb]
Successors: [0xb16, 0xb17]
---
0xb0a JUMPDEST
0xb0b PUSH1 0x0
0xb0d DUP1
0xb0e DUP3
0xb0f DUP5
0xb10 LT
0xb11 ISZERO
0xb12 PUSH2 0xb17
0xb15 JUMPI
---
0xb0a: JUMPDEST 
0xb0b: V1037 = 0x0
0xb10: V1038 = LT S1 V1014
0xb11: V1039 = ISZERO V1038
0xb12: V1040 = 0xb17
0xb15: JUMPI 0xb17 V1039
---
Entry stack: [V12, 0x22b, V193, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0xac4, S1, V1014]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V12, 0x22b, V193, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0xac4, S1, V1014, 0x0, 0x0]

================================

Block 0xb16
[0xb16:0xb16]
---
Predecessors: [0xb0a]
Successors: []
---
0xb16 INVALID
---
0xb16: INVALID 
---
Entry stack: [V12, 0x22b, V193, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xac4, S3, V1014, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22b, V193, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xac4, S3, V1014, 0x0, 0x0]

================================

Block 0xb17
[0xb17:0xb1d]
---
Predecessors: [0xb0a]
Successors: [0xb1e]
---
0xb17 JUMPDEST
0xb18 POP
0xb19 POP
0xb1a DUP1
0xb1b DUP3
0xb1c SUB
0xb1d DUP1
---
0xb17: JUMPDEST 
0xb1c: V1041 = SUB S3 V1014
---
Entry stack: [V12, 0x22b, V193, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xac4, S3, V1014, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V1041, V1041]
Exit stack: [V12, 0x22b, V193, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xac4, S3, V1014, V1041, V1041]

================================

Block 0xb1e
[0xb1e:0xb24]
---
Predecessors: [0xb17]
Successors: [0xac4]
---
0xb1e JUMPDEST
0xb1f POP
0xb20 SWAP3
0xb21 SWAP2
0xb22 POP
0xb23 POP
0xb24 JUMP
---
0xb1e: JUMPDEST 
0xb24: JUMP 0xac4
---
Entry stack: [V12, 0x22b, V193, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xac4, S3, V1014, V1041, V1041]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x22b, V193, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, V1041]

================================

Block 0xb25
[0xb25:0xb81]
---
Predecessors: []
Successors: []
---
0xb25 STOP
0xb26 MISSING 0xcf
0xb27 BLOCKHASH
0xb28 CALLCODE
0xb29 SWAP1
0xb2a MISSING 0x4a
0xb2b MISSING 0x4d
0xb2c NUMBER
0xb2d MISSING 0xcd
0xb2e MISSING 0xb0
0xb2f MISSING 0xce
0xb30 MISSING 0x27
0xb31 MISSING 0xb4
0xb32 MISSING 0xa7
0xb33 PUSH21 0x34c9eb3163b7380be392336f70ae1ccc33aca16562
0xb49 PUSH27 0x7a72305820a9d7be74ce0cf7c7cbee5779767de6b2adf13989e9e1
0xb65 PUSH28 0xc7545423077cb86bc90029
---
0xb25: STOP 
0xb26: MISSING 0xcf
0xb27: V1042 = BLOCKHASH S0
0xb28: V1043 = CALLCODE V1042 S1 S2 S3 S4 S5 S6
0xb2a: MISSING 0x4a
0xb2b: MISSING 0x4d
0xb2c: V1044 = NUMBER
0xb2d: MISSING 0xcd
0xb2e: MISSING 0xb0
0xb2f: MISSING 0xce
0xb30: MISSING 0x27
0xb31: MISSING 0xb4
0xb32: MISSING 0xa7
0xb33: V1045 = 0x34c9eb3163b7380be392336f70ae1ccc33aca16562
0xb49: V1046 = 0x7a72305820a9d7be74ce0cf7c7cbee5779767de6b2adf13989e9e1
0xb65: V1047 = 0xc7545423077cb86bc90029
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, V1043, V1044, 0xc7545423077cb86bc90029, 0x7a72305820a9d7be74ce0cf7c7cbee5779767de6b2adf13989e9e1, 0x34c9eb3163b7380be392336f70ae1ccc33aca16562]
Exit stack: []

================================

Function 0:
Public function signature: 0x13faede6
Entry block: 0xe2
Exit block: 0xf2
Body: 0xe2, 0xe9, 0xea, 0xf2, 0x3e6

Function 1:
Public function signature: 0x142769aa
Entry block: 0x104
Exit block: 0x599
Body: 0x104, 0x121, 0x3ec, 0x3f7, 0x3fc, 0x405, 0x40b, 0x40c, 0x4a6, 0x4c5, 0x4d3, 0x4db, 0x4e1, 0x509, 0x578, 0x58e, 0x599

Function 2:
Public function signature: 0x171fcb5a
Entry block: 0x123
Exit block: 0x58e
Body: 0x123, 0x57d, 0x587, 0x58e, 0x599

Function 3:
Public function signature: 0x1fe9eabc
Entry block: 0x139
Exit block: 0x599
Body: 0x139, 0x140, 0x141, 0x599, 0x59c, 0x5b6, 0x5bb

Function 4:
Public function signature: 0x4173ffbc
Entry block: 0x160
Exit block: 0xf2
Body: 0xf2, 0x160, 0x167, 0x168

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x188
Exit block: 0x652
Body: 0x188, 0x18f, 0x190, 0x636, 0x64d, 0x652

Function 6:
Public function signature: 0x44a0d68a
Entry block: 0x19a
Exit block: 0x14c
Body: 0x14c, 0x19a, 0x1a1, 0x1a2, 0x663, 0x67d, 0x682, 0x6c2, 0x6c3

Function 7:
Public function signature: 0x6ac5db19
Entry block: 0x1c1
Exit block: 0xf2
Body: 0xf2, 0x1c1, 0x1c8, 0x1c9, 0x6c8

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x1e3
Exit block: 0x1f3
Body: 0x1e3, 0x1ea, 0x1eb, 0x1f3, 0x6ce

Function 9:
Public function signature: 0x936315d6
Entry block: 0x20f
Exit block: 0x599
Body: 0x20f, 0x216, 0x217, 0x599, 0x6dd, 0x6f1

Function 10:
Public function signature: 0x942ea466
Entry block: 0x264
Exit block: 0x280
Body: 0x264, 0x26b, 0x26c, 0x280, 0x719, 0x745

Function 11:
Public function signature: 0x9edf42ff
Entry block: 0x2af
Exit block: 0x2cb
Body: 0x2af, 0x2b6, 0x2b7, 0x2cb, 0x74c

Function 12:
Public function signature: 0xccca123b
Entry block: 0x303
Exit block: 0x313
Body: 0x303, 0x30a, 0x30b, 0x313, 0x789

Function 13:
Public function signature: 0xcf041d58
Entry block: 0x329
Exit block: 0x14c
Body: 0x14c, 0x329, 0x330, 0x331, 0x792, 0x7ac, 0x7b1, 0x802, 0x803

Function 14:
Public function signature: 0xdf32754b
Entry block: 0x353
Exit block: 0x121
Body: 0x121, 0x353, 0x35a, 0x35b, 0x808, 0x824

Function 15:
Public function signature: 0xf1f76438
Entry block: 0x365
Exit block: 0x36c
Body: 0x14c, 0x365, 0x36c, 0x36d

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x395
Exit block: 0x121
Body: 0x121, 0x395, 0x39c, 0x39d, 0x881, 0x898, 0x89d, 0x8b9, 0x8ba

Function 17:
Public function signature: 0xf3fef3a3
Entry block: 0x3b3
Exit block: 0x14c
Body: 0x14c, 0x3b3, 0x3ba, 0x3bb, 0x8bd, 0x8d7, 0x8dc, 0x908, 0x909, 0x90d, 0x90e

Function 18:
Public fallback function
Entry block: 0xe0
Exit block: 0xe0
Body: 0xe0

Function 19:
Private function
Entry block: 0xad2
Exit block: 0xb05
Body: 0xad2, 0xb02, 0xb05

Function 20:
Private function
Entry block: 0x600
Exit block: 0xacb
Body: 0x587, 0x58f, 0x600, 0x625, 0x62d, 0x630, 0x6f1, 0x6f1, 0x6f1, 0x6fa, 0x6fa, 0x92d, 0x934, 0x957, 0x978, 0x97e, 0x985, 0x986, 0x987, 0x98b, 0x991, 0x99e, 0x99e, 0x9d2, 0xa4b, 0xa50, 0xa60, 0xa65, 0xa6d, 0xa71, 0xaac, 0xabb, 0xac4, 0xac7, 0xacb, 0xad2, 0xb02, 0xb05, 0xb0a, 0xb17, 0xb1e

Function 21:
Private function
Entry block: 0xa78
Exit block: 0xacb
Body: 0x587, 0x58f, 0x6f1, 0x6fa, 0x991, 0x99e, 0x99e, 0x9d2, 0xa4b, 0xa78, 0xaac, 0xabb, 0xac4, 0xac7, 0xacb, 0xad2, 0xb02, 0xb05, 0xb0a, 0xb17, 0xb1e

Function 22:
Private function
Entry block: 0xa50
Exit block: 0xa71
Body: 0x587, 0x58f, 0x62d, 0x630, 0x6f1, 0x6f1, 0x6fa, 0x991, 0x99e, 0x99e, 0x9d2, 0xa4b, 0xa50, 0xa60, 0xa65, 0xa6d, 0xa71, 0xad2, 0xb02, 0xb05

Function 23:
Private function
Entry block: 0x826
Exit block: 0x87c
Body: 0x5fa, 0x5fb, 0x826, 0x84a, 0x86b, 0x871, 0x878, 0x87c

Function 24:
Private function
Entry block: 0x914
Exit block: 0xa4b
Body: 0x630, 0x914, 0x91f, 0x925, 0x92d, 0x934, 0x957, 0x978, 0x97e, 0x985, 0x986, 0x987, 0x98b, 0x9d2, 0xa4b

