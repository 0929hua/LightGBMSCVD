Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x48
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x48
0xa: JUMPI 0x48 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xb6]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x6b9f96ea
0x34 EQ
0x35 PUSH2 0xb6
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x6b9f96ea
0x34: V10 = EQ 0x6b9f96ea V8
0x35: V11 = 0xb6
0x38: JUMPI 0xb6 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xca]
---
0x39 DUP1
0x3a PUSH4 0xca325469
0x3f EQ
0x40 PUSH2 0xca
0x43 JUMPI
---
0x3a: V12 = 0xca325469
0x3f: V13 = EQ 0xca325469 V8
0x40: V14 = 0xca
0x43: JUMPI 0xca V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: [0x48]
---
0x44 PUSH2 0x48
0x47 JUMP
---
0x44: V15 = 0x48
0x47: JUMP 0x48
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x48
[0x48:0x4b]
---
Predecessors: [0x0, 0x44]
Successors: [0x4c]
---
0x48 JUMPDEST
0x49 PUSH2 0xb4
---
0x48: JUMPDEST 
0x49: V16 = 0xb4
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V8, 0xb4]

================================

Block 0x4c
[0x4c:0xac]
---
Predecessors: [0x48]
Successors: [0xad, 0xb1]
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f PUSH1 0x0
0x51 SWAP1
0x52 SLOAD
0x53 SWAP1
0x54 PUSH2 0x100
0x57 EXP
0x58 SWAP1
0x59 DIV
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 PUSH2 0x8fc
0x89 CALLVALUE
0x8a SWAP1
0x8b DUP2
0x8c ISZERO
0x8d MUL
0x8e SWAP1
0x8f PUSH1 0x40
0x91 MLOAD
0x92 DUP1
0x93 SWAP1
0x94 POP
0x95 PUSH1 0x0
0x97 PUSH1 0x40
0x99 MLOAD
0x9a DUP1
0x9b DUP4
0x9c SUB
0x9d DUP2
0x9e DUP6
0x9f DUP9
0xa0 DUP9
0xa1 CALL
0xa2 SWAP4
0xa3 POP
0xa4 POP
0xa5 POP
0xa6 POP
0xa7 ISZERO
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0x4c: JUMPDEST 
0x4d: V17 = 0x0
0x4f: V18 = 0x0
0x52: V19 = S[0x0]
0x54: V20 = 0x100
0x57: V21 = EXP 0x100 0x0
0x59: V22 = DIV V19 0x1
0x5a: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x70: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x86: V27 = 0x8fc
0x89: V28 = CALLVALUE
0x8c: V29 = ISZERO V28
0x8d: V30 = MUL V29 0x8fc
0x8f: V31 = 0x40
0x91: V32 = M[0x40]
0x95: V33 = 0x0
0x97: V34 = 0x40
0x99: V35 = M[0x40]
0x9c: V36 = SUB V32 V35
0xa1: V37 = CALL V30 V26 V28 V35 V36 V35 0x0
0xa7: V38 = ISZERO V37
0xa8: V39 = ISZERO V38
0xa9: V40 = 0xb1
0xac: JUMPI 0xb1 V39
---
Entry stack: [V8, 0xb4]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb4]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0x4c]
Successors: []
---
0xad PUSH2 0x2
0xb0 JUMP
---
0xad: V41 = 0x2
0xb0: THROW 
---
Entry stack: [V8, 0xb4]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb4]

================================

Block 0xb1
[0xb1:0xb1]
---
Predecessors: [0x4c]
Successors: [0xb2]
---
0xb1 JUMPDEST
---
0xb1: JUMPDEST 
---
Entry stack: [V8, 0xb4]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb4]

================================

Block 0xb2
[0xb2:0xb3]
---
Predecessors: [0xb1]
Successors: [0xb4]
---
0xb2 JUMPDEST
0xb3 JUMP
---
0xb2: JUMPDEST 
0xb3: JUMP 0xb4
---
Entry stack: [V8, 0xb4]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: [0xb2]
Successors: []
---
0xb4 JUMPDEST
0xb5 STOP
---
0xb4: JUMPDEST 
0xb5: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xb6
[0xb6:0xbb]
---
Predecessors: [0xb]
Successors: [0xbc]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 PUSH2 0x2
0xbb JUMPI
---
0xb6: JUMPDEST 
0xb7: V42 = CALLVALUE
0xb8: V43 = 0x2
0xbb: THROWI V42
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xbc
[0xbc:0xc7]
---
Predecessors: [0xb6]
Successors: [0x108]
---
0xbc PUSH2 0xc8
0xbf PUSH1 0x4
0xc1 DUP1
0xc2 POP
0xc3 POP
0xc4 PUSH2 0x108
0xc7 JUMP
---
0xbc: V44 = 0xc8
0xbf: V45 = 0x4
0xc4: V46 = 0x108
0xc7: JUMP 0x108
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V8, 0xc8]

================================

Block 0xc8
[0xc8:0xc9]
---
Predecessors: [0x185]
Successors: []
---
0xc8 JUMPDEST
0xc9 STOP
---
0xc8: JUMPDEST 
0xc9: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xca
[0xca:0xcf]
---
Predecessors: [0x39]
Successors: [0xd0]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc PUSH2 0x2
0xcf JUMPI
---
0xca: JUMPDEST 
0xcb: V47 = CALLVALUE
0xcc: V48 = 0x2
0xcf: THROWI V47
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xd0
[0xd0:0xdb]
---
Predecessors: [0xca]
Successors: [0x187]
---
0xd0 PUSH2 0xdc
0xd3 PUSH1 0x4
0xd5 DUP1
0xd6 POP
0xd7 POP
0xd8 PUSH2 0x187
0xdb JUMP
---
0xd0: V49 = 0xdc
0xd3: V50 = 0x4
0xd8: V51 = 0x187
0xdb: JUMP 0x187
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V8, 0xdc]

================================

Block 0xdc
[0xdc:0x107]
---
Predecessors: [0x187]
Successors: []
---
0xdc JUMPDEST
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 DUP3
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP2
0xfe POP
0xff POP
0x100 PUSH1 0x40
0x102 MLOAD
0x103 DUP1
0x104 SWAP2
0x105 SUB
0x106 SWAP1
0x107 RETURN
---
0xdc: JUMPDEST 
0xdd: V52 = 0x40
0xdf: V53 = M[0x40]
0xe2: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0xf9: M[V53] = V55
0xfa: V56 = 0x20
0xfc: V57 = ADD 0x20 V53
0x100: V58 = 0x40
0x102: V59 = M[0x40]
0x105: V60 = SUB V57 V59
0x107: RETURN V59 V60
---
Entry stack: [V8, 0xdc, V96]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xdc]

================================

Block 0x108
[0x108:0x17f]
---
Predecessors: [0xbc]
Successors: [0x180, 0x184]
---
0x108 JUMPDEST
0x109 PUSH1 0x0
0x10b PUSH1 0x0
0x10d SWAP1
0x10e SLOAD
0x10f SWAP1
0x110 PUSH2 0x100
0x113 EXP
0x114 SWAP1
0x115 DIV
0x116 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b AND
0x12c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x141 AND
0x142 PUSH2 0x8fc
0x145 ADDRESS
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c BALANCE
0x15d SWAP1
0x15e DUP2
0x15f ISZERO
0x160 MUL
0x161 SWAP1
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 SWAP1
0x167 POP
0x168 PUSH1 0x0
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e DUP4
0x16f SUB
0x170 DUP2
0x171 DUP6
0x172 DUP9
0x173 DUP9
0x174 CALL
0x175 SWAP4
0x176 POP
0x177 POP
0x178 POP
0x179 POP
0x17a ISZERO
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x108: JUMPDEST 
0x109: V61 = 0x0
0x10b: V62 = 0x0
0x10e: V63 = S[0x0]
0x110: V64 = 0x100
0x113: V65 = EXP 0x100 0x0
0x115: V66 = DIV V63 0x1
0x116: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x12c: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x141: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x142: V71 = 0x8fc
0x145: V72 = ADDRESS
0x146: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x15c: V75 = BALANCE V74
0x15f: V76 = ISZERO V75
0x160: V77 = MUL V76 0x8fc
0x162: V78 = 0x40
0x164: V79 = M[0x40]
0x168: V80 = 0x0
0x16a: V81 = 0x40
0x16c: V82 = M[0x40]
0x16f: V83 = SUB V79 V82
0x174: V84 = CALL V77 V70 V75 V82 V83 V82 0x0
0x17a: V85 = ISZERO V84
0x17b: V86 = ISZERO V85
0x17c: V87 = 0x184
0x17f: JUMPI 0x184 V86
---
Entry stack: [V8, 0xc8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc8]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x108]
Successors: []
---
0x180 PUSH2 0x2
0x183 JUMP
---
0x180: V88 = 0x2
0x183: THROW 
---
Entry stack: [V8, 0xc8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc8]

================================

Block 0x184
[0x184:0x184]
---
Predecessors: [0x108]
Successors: [0x185]
---
0x184 JUMPDEST
---
0x184: JUMPDEST 
---
Entry stack: [V8, 0xc8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc8]

================================

Block 0x185
[0x185:0x186]
---
Predecessors: [0x184]
Successors: [0xc8]
---
0x185 JUMPDEST
0x186 JUMP
---
0x185: JUMPDEST 
0x186: JUMP 0xc8
---
Entry stack: [V8, 0xc8]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x187
[0x187:0x1ac]
---
Predecessors: [0xd0]
Successors: [0xdc]
---
0x187 JUMPDEST
0x188 PUSH1 0x0
0x18a PUSH1 0x0
0x18c SWAP1
0x18d SLOAD
0x18e SWAP1
0x18f PUSH2 0x100
0x192 EXP
0x193 SWAP1
0x194 DIV
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab DUP2
0x1ac JUMP
---
0x187: JUMPDEST 
0x188: V89 = 0x0
0x18a: V90 = 0x0
0x18d: V91 = S[0x0]
0x18f: V92 = 0x100
0x192: V93 = EXP 0x100 0x0
0x194: V94 = DIV V91 0x1
0x195: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1ac: JUMP 0xdc
---
Entry stack: [V8, 0xdc]
Stack pops: 1
Stack additions: [S0, V96]
Exit stack: [V8, 0xdc, V96]

================================

Function 0:
Public function signature: 0x6b9f96ea
Entry block: 0xb6
Exit block: 0xc8
Body: 0xb6, 0xbc, 0xc8, 0x108, 0x180, 0x184, 0x185

Function 1:
Public function signature: 0xca325469
Entry block: 0xca
Exit block: 0xdc
Body: 0xca, 0xd0, 0xdc, 0x187

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0xb4
Body: 0x44, 0x48, 0x4c, 0xad, 0xb1, 0xb2, 0xb4

