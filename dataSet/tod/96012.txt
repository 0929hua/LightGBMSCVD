Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xf6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xf6
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xf6
0xa: JUMPI 0xf6 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xfb]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x9648a9d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xfb
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x9648a9d
0x20: V14 = EQ V12 0x9648a9d
0x21: V15 = 0xfb
0x24: JUMPI 0xfb V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x135]
---
0x25 DUP1
0x26 PUSH4 0x12921758
0x2b EQ
0x2c PUSH2 0x135
0x2f JUMPI
---
0x26: V16 = 0x12921758
0x2b: V17 = EQ 0x12921758 V12
0x2c: V18 = 0x135
0x2f: JUMPI 0x135 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x15c]
---
0x30 DUP1
0x31 PUSH4 0x1de26e16
0x36 EQ
0x37 PUSH2 0x15c
0x3a JUMPI
---
0x31: V19 = 0x1de26e16
0x36: V20 = EQ 0x1de26e16 V12
0x37: V21 = 0x15c
0x3a: JUMPI 0x15c V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x177]
---
0x3b DUP1
0x3c PUSH4 0x2b0109be
0x41 EQ
0x42 PUSH2 0x177
0x45 JUMPI
---
0x3c: V22 = 0x2b0109be
0x41: V23 = EQ 0x2b0109be V12
0x42: V24 = 0x177
0x45: JUMPI 0x177 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1b7]
---
0x46 DUP1
0x47 PUSH4 0x39c79e0c
0x4c EQ
0x4d PUSH2 0x1b7
0x50 JUMPI
---
0x47: V25 = 0x39c79e0c
0x4c: V26 = EQ 0x39c79e0c V12
0x4d: V27 = 0x1b7
0x50: JUMPI 0x1b7 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1cf]
---
0x51 DUP1
0x52 PUSH4 0x3c46f72f
0x57 EQ
0x58 PUSH2 0x1cf
0x5b JUMPI
---
0x52: V28 = 0x3c46f72f
0x57: V29 = EQ 0x3c46f72f V12
0x58: V30 = 0x1cf
0x5b: JUMPI 0x1cf V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x205]
---
0x5c DUP1
0x5d PUSH4 0x68b45a2c
0x62 EQ
0x63 PUSH2 0x205
0x66 JUMPI
---
0x5d: V31 = 0x68b45a2c
0x62: V32 = EQ 0x68b45a2c V12
0x63: V33 = 0x205
0x66: JUMPI 0x205 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x23b]
---
0x67 DUP1
0x68 PUSH4 0x75f99680
0x6d EQ
0x6e PUSH2 0x23b
0x71 JUMPI
---
0x68: V34 = 0x75f99680
0x6d: V35 = EQ 0x75f99680 V12
0x6e: V36 = 0x23b
0x71: JUMPI 0x23b V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x253]
---
0x72 DUP1
0x73 PUSH4 0x79f48d4c
0x78 EQ
0x79 PUSH2 0x253
0x7c JUMPI
---
0x73: V37 = 0x79f48d4c
0x78: V38 = EQ 0x79f48d4c V12
0x79: V39 = 0x253
0x7c: JUMPI 0x253 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x26e]
---
0x7d DUP1
0x7e PUSH4 0x83197ef0
0x83 EQ
0x84 PUSH2 0x26e
0x87 JUMPI
---
0x7e: V40 = 0x83197ef0
0x83: V41 = EQ 0x83197ef0 V12
0x84: V42 = 0x26e
0x87: JUMPI 0x26e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x283]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x283
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x283
0x92: JUMPI 0x283 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2b2]
---
0x93 DUP1
0x94 PUSH4 0x9a851616
0x99 EQ
0x9a PUSH2 0x2b2
0x9d JUMPI
---
0x94: V46 = 0x9a851616
0x99: V47 = EQ 0x9a851616 V12
0x9a: V48 = 0x2b2
0x9d: JUMPI 0x2b2 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x307]
---
0x9e DUP1
0x9f PUSH4 0xab40428e
0xa4 EQ
0xa5 PUSH2 0x307
0xa8 JUMPI
---
0x9f: V49 = 0xab40428e
0xa4: V50 = EQ 0xab40428e V12
0xa5: V51 = 0x307
0xa8: JUMPI 0x307 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x322]
---
0xa9 DUP1
0xaa PUSH4 0xbaa77746
0xaf EQ
0xb0 PUSH2 0x322
0xb3 JUMPI
---
0xaa: V52 = 0xbaa77746
0xaf: V53 = EQ 0xbaa77746 V12
0xb0: V54 = 0x322
0xb3: JUMPI 0x322 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x35b]
---
0xb4 DUP1
0xb5 PUSH4 0xd0fa96ba
0xba EQ
0xbb PUSH2 0x35b
0xbe JUMPI
---
0xb5: V55 = 0xd0fa96ba
0xba: V56 = EQ 0xd0fa96ba V12
0xbb: V57 = 0x35b
0xbe: JUMPI 0x35b V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x205]
---
0xbf DUP1
0xc0 PUSH4 0xe20bff5c
0xc5 EQ
0xc6 PUSH2 0x205
0xc9 JUMPI
---
0xc0: V58 = 0xe20bff5c
0xc5: V59 = EQ 0xe20bff5c V12
0xc6: V60 = 0x205
0xc9: JUMPI 0x205 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3bb]
---
0xca DUP1
0xcb PUSH4 0xe66eefc8
0xd0 EQ
0xd1 PUSH2 0x3bb
0xd4 JUMPI
---
0xcb: V61 = 0xe66eefc8
0xd0: V62 = EQ 0xe66eefc8 V12
0xd1: V63 = 0x3bb
0xd4: JUMPI 0x3bb V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3e3]
---
0xd5 DUP1
0xd6 PUSH4 0xf03cd5ca
0xdb EQ
0xdc PUSH2 0x3e3
0xdf JUMPI
---
0xd6: V64 = 0xf03cd5ca
0xdb: V65 = EQ 0xf03cd5ca V12
0xdc: V66 = 0x3e3
0xdf: JUMPI 0x3e3 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x40b]
---
0xe0 DUP1
0xe1 PUSH4 0xf2fde38b
0xe6 EQ
0xe7 PUSH2 0x40b
0xea JUMPI
---
0xe1: V67 = 0xf2fde38b
0xe6: V68 = EQ 0xf2fde38b V12
0xe7: V69 = 0x40b
0xea: JUMPI 0x40b V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x42c]
---
0xeb DUP1
0xec PUSH4 0xf5074f41
0xf1 EQ
0xf2 PUSH2 0x42c
0xf5 JUMPI
---
0xec: V70 = 0xf5074f41
0xf1: V71 = EQ 0xf5074f41 V12
0xf2: V72 = 0x42c
0xf5: JUMPI 0x42c V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xfa]
---
Predecessors: [0x0, 0xeb]
Successors: []
---
0xf6 JUMPDEST
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf6: JUMPDEST 
0xf7: V73 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfb
[0xfb:0x101]
---
Predecessors: [0xb]
Successors: [0x102, 0x106]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfb: JUMPDEST 
0xfc: V74 = CALLVALUE
0xfd: V75 = ISZERO V74
0xfe: V76 = 0x106
0x101: JUMPI 0x106 V75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfb]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V77 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfb]
Successors: [0x44d]
---
0x106 JUMPDEST
0x107 PUSH2 0x111
0x10a PUSH1 0x4
0x10c CALLDATALOAD
0x10d PUSH2 0x44d
0x110 JUMP
---
0x106: JUMPDEST 
0x107: V78 = 0x111
0x10a: V79 = 0x4
0x10c: V80 = CALLDATALOAD 0x4
0x10d: V81 = 0x44d
0x110: JUMP 0x44d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x111, V80]
Exit stack: [V12, 0x111, V80]

================================

Block 0x111
[0x111:0x11f]
---
Predecessors: [0x463]
Successors: [0x120, 0x121]
---
0x111 JUMPDEST
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 DUP3
0x117 PUSH1 0x2
0x119 DUP2
0x11a GT
0x11b ISZERO
0x11c PUSH2 0x121
0x11f JUMPI
---
0x111: JUMPDEST 
0x112: V82 = 0x40
0x114: V83 = M[0x40]
0x117: V84 = 0x2
0x11a: V85 = GT V442 0x2
0x11b: V86 = ISZERO V85
0x11c: V87 = 0x121
0x11f: JUMPI 0x121 V86
---
Entry stack: [V12, V442]
Stack pops: 1
Stack additions: [S0, V83, V83, S0]
Exit stack: [V12, V442, V83, V83, V442]

================================

Block 0x120
[0x120:0x120]
---
Predecessors: [0x111]
Successors: []
---
0x120 INVALID
---
0x120: INVALID 
---
Entry stack: [V12, V442, V83, V83, V442]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V442, V83, V83, V442]

================================

Block 0x121
[0x121:0x134]
---
Predecessors: [0x111]
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0xff
0x124 AND
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP2
0x12b POP
0x12c POP
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 SWAP2
0x132 SUB
0x133 SWAP1
0x134 RETURN
---
0x121: JUMPDEST 
0x122: V88 = 0xff
0x124: V89 = AND 0xff V442
0x126: M[V83] = V89
0x127: V90 = 0x20
0x129: V91 = ADD 0x20 V83
0x12d: V92 = 0x40
0x12f: V93 = M[0x40]
0x132: V94 = SUB V91 V93
0x134: RETURN V93 V94
---
Entry stack: [V12, V442, V83, V83, V442]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x135
[0x135:0x13b]
---
Predecessors: [0x25]
Successors: [0x13c, 0x140]
---
0x135 JUMPDEST
0x136 CALLVALUE
0x137 ISZERO
0x138 PUSH2 0x140
0x13b JUMPI
---
0x135: JUMPDEST 
0x136: V95 = CALLVALUE
0x137: V96 = ISZERO V95
0x138: V97 = 0x140
0x13b: JUMPI 0x140 V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x135]
Successors: []
---
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
---
0x13c: V98 = 0x0
0x13f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x140
[0x140:0x159]
---
Predecessors: [0x135]
Successors: [0x468]
---
0x140 JUMPDEST
0x141 PUSH2 0x15a
0x144 PUSH1 0x4
0x146 CALLDATALOAD
0x147 PUSH1 0x24
0x149 CALLDATALOAD
0x14a PUSH1 0xff
0x14c PUSH1 0x44
0x14e CALLDATALOAD
0x14f AND
0x150 PUSH1 0x64
0x152 CALLDATALOAD
0x153 PUSH1 0x84
0x155 CALLDATALOAD
0x156 PUSH2 0x468
0x159 JUMP
---
0x140: JUMPDEST 
0x141: V99 = 0x15a
0x144: V100 = 0x4
0x146: V101 = CALLDATALOAD 0x4
0x147: V102 = 0x24
0x149: V103 = CALLDATALOAD 0x24
0x14a: V104 = 0xff
0x14c: V105 = 0x44
0x14e: V106 = CALLDATALOAD 0x44
0x14f: V107 = AND V106 0xff
0x150: V108 = 0x64
0x152: V109 = CALLDATALOAD 0x64
0x153: V110 = 0x84
0x155: V111 = CALLDATALOAD 0x84
0x156: V112 = 0x468
0x159: JUMP 0x468
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V101, V103, V107, V109, V111]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111]

================================

Block 0x15a
[0x15a:0x15b]
---
Predecessors: [0x48b, 0x598, 0x973, 0xa60, 0xcb3, 0xe89, 0x117e]
Successors: []
---
0x15a JUMPDEST
0x15b STOP
---
0x15a: JUMPDEST 
0x15b: STOP 
---
Entry stack: [S4, S3, S2, V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S4, S3, S2, V12, S0]

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x30]
Successors: [0x163, 0x167]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V113 = CALLVALUE
0x15e: V114 = ISZERO V113
0x15f: V115 = 0x167
0x162: JUMPI 0x167 V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0x15c]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V116 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x167
[0x167:0x174]
---
Predecessors: [0x15c]
Successors: [0x492]
---
0x167 JUMPDEST
0x168 PUSH2 0x15a
0x16b PUSH1 0x4
0x16d CALLDATALOAD
0x16e PUSH1 0x24
0x170 CALLDATALOAD
0x171 PUSH2 0x492
0x174 JUMP
---
0x167: JUMPDEST 
0x168: V117 = 0x15a
0x16b: V118 = 0x4
0x16d: V119 = CALLDATALOAD 0x4
0x16e: V120 = 0x24
0x170: V121 = CALLDATALOAD 0x24
0x171: V122 = 0x492
0x174: JUMP 0x492
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V119, V121]
Exit stack: [V12, 0x15a, V119, V121]

================================

Block 0x175
[0x175:0x176]
---
Predecessors: []
Successors: []
---
0x175 JUMPDEST
0x176 STOP
---
0x175: JUMPDEST 
0x176: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x177
[0x177:0x17d]
---
Predecessors: [0x3b]
Successors: [0x17e, 0x182]
---
0x177 JUMPDEST
0x178 CALLVALUE
0x179 ISZERO
0x17a PUSH2 0x182
0x17d JUMPI
---
0x177: JUMPDEST 
0x178: V123 = CALLVALUE
0x179: V124 = ISZERO V123
0x17a: V125 = 0x182
0x17d: JUMPI 0x182 V124
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x181]
---
Predecessors: [0x177]
Successors: []
---
0x17e PUSH1 0x0
0x180 DUP1
0x181 REVERT
---
0x17e: V126 = 0x0
0x181: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x1a4]
---
Predecessors: [0x177]
Successors: [0x59e]
---
0x182 JUMPDEST
0x183 PUSH2 0x1a5
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e PUSH1 0x4
0x190 CALLDATALOAD
0x191 DUP2
0x192 AND
0x193 SWAP1
0x194 PUSH1 0x24
0x196 CALLDATALOAD
0x197 AND
0x198 PUSH1 0x44
0x19a CALLDATALOAD
0x19b PUSH1 0x64
0x19d CALLDATALOAD
0x19e PUSH1 0x84
0x1a0 CALLDATALOAD
0x1a1 PUSH2 0x59e
0x1a4 JUMP
---
0x182: JUMPDEST 
0x183: V127 = 0x1a5
0x186: V128 = 0x1
0x188: V129 = 0xa0
0x18a: V130 = 0x2
0x18c: V131 = EXP 0x2 0xa0
0x18d: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V133 = 0x4
0x190: V134 = CALLDATALOAD 0x4
0x192: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x194: V136 = 0x24
0x196: V137 = CALLDATALOAD 0x24
0x197: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x198: V139 = 0x44
0x19a: V140 = CALLDATALOAD 0x44
0x19b: V141 = 0x64
0x19d: V142 = CALLDATALOAD 0x64
0x19e: V143 = 0x84
0x1a0: V144 = CALLDATALOAD 0x84
0x1a1: V145 = 0x59e
0x1a4: JUMP 0x59e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5, V135, V138, V140, V142, V144]
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144]

================================

Block 0x1a5
[0x1a5:0x1b6]
---
Predecessors: [0x83f, 0x110c, 0x1124]
Successors: []
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 SWAP1
0x1aa DUP2
0x1ab MSTORE
0x1ac PUSH1 0x20
0x1ae ADD
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 SWAP2
0x1b4 SUB
0x1b5 SWAP1
0x1b6 RETURN
---
0x1a5: JUMPDEST 
0x1a6: V146 = 0x40
0x1a8: V147 = M[0x40]
0x1ab: M[V147] = S0
0x1ac: V148 = 0x20
0x1ae: V149 = ADD 0x20 V147
0x1af: V150 = 0x40
0x1b1: V151 = M[0x40]
0x1b4: V152 = SUB V149 V151
0x1b6: RETURN V151 V152
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b7
[0x1b7:0x1bd]
---
Predecessors: [0x46]
Successors: [0x1be, 0x1c2]
---
0x1b7 JUMPDEST
0x1b8 CALLVALUE
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V153 = CALLVALUE
0x1b9: V154 = ISZERO V153
0x1ba: V155 = 0x1c2
0x1bd: JUMPI 0x1c2 V154
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b7]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V156 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c2
[0x1c2:0x1cc]
---
Predecessors: [0x1b7]
Successors: [0x84b]
---
0x1c2 JUMPDEST
0x1c3 PUSH2 0x15a
0x1c6 PUSH1 0x4
0x1c8 CALLDATALOAD
0x1c9 PUSH2 0x84b
0x1cc JUMP
---
0x1c2: JUMPDEST 
0x1c3: V157 = 0x15a
0x1c6: V158 = 0x4
0x1c8: V159 = CALLDATALOAD 0x4
0x1c9: V160 = 0x84b
0x1cc: JUMP 0x84b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V159]
Exit stack: [V12, 0x15a, V159]

================================

Block 0x1cd
[0x1cd:0x1ce]
---
Predecessors: []
Successors: []
---
0x1cd JUMPDEST
0x1ce STOP
---
0x1cd: JUMPDEST 
0x1ce: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x51]
Successors: [0x1d6, 0x1da]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V161 = CALLVALUE
0x1d1: V162 = ISZERO V161
0x1d2: V163 = 0x1da
0x1d5: JUMPI 0x1da V162
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V164 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1da
[0x1da:0x1f0]
---
Predecessors: [0x1cf]
Successors: [0x977]
---
0x1da JUMPDEST
0x1db PUSH2 0x1f1
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 PUSH1 0x4
0x1e8 CALLDATALOAD
0x1e9 AND
0x1ea PUSH1 0x24
0x1ec CALLDATALOAD
0x1ed PUSH2 0x977
0x1f0 JUMP
---
0x1da: JUMPDEST 
0x1db: V165 = 0x1f1
0x1de: V166 = 0x1
0x1e0: V167 = 0xa0
0x1e2: V168 = 0x2
0x1e4: V169 = EXP 0x2 0xa0
0x1e5: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V171 = 0x4
0x1e8: V172 = CALLDATALOAD 0x4
0x1e9: V173 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V174 = 0x24
0x1ec: V175 = CALLDATALOAD 0x24
0x1ed: V176 = 0x977
0x1f0: JUMP 0x977
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f1, V173, V175]
Exit stack: [V12, 0x1f1, V173, V175]

================================

Block 0x1f1
[0x1f1:0x204]
---
Predecessors: [0x9e0, 0xa26, 0xdf6, 0x1065, 0x10a9]
Successors: []
---
0x1f1 JUMPDEST
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 SWAP1
0x1f6 ISZERO
0x1f7 ISZERO
0x1f8 DUP2
0x1f9 MSTORE
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 DUP1
0x201 SWAP2
0x202 SUB
0x203 SWAP1
0x204 RETURN
---
0x1f1: JUMPDEST 
0x1f2: V177 = 0x40
0x1f4: V178 = M[0x40]
0x1f6: V179 = ISZERO S0
0x1f7: V180 = ISZERO V179
0x1f9: M[V178] = V180
0x1fa: V181 = 0x20
0x1fc: V182 = ADD 0x20 V178
0x1fd: V183 = 0x40
0x1ff: V184 = M[0x40]
0x202: V185 = SUB V182 V184
0x204: RETURN V184 V185
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2, S1]

================================

Block 0x205
[0x205:0x20b]
---
Predecessors: [0x5c, 0xbf]
Successors: [0x20c, 0x210]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x205: JUMPDEST 
0x206: V186 = CALLVALUE
0x207: V187 = ISZERO V186
0x208: V188 = 0x210
0x20b: JUMPI 0x210 V187
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x205]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V189 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x226]
---
Predecessors: [0x205, 0x371]
Successors: [0x9e7]
---
0x210 JUMPDEST
0x211 PUSH2 0x1f1
0x214 PUSH1 0x1
0x216 PUSH1 0xa0
0x218 PUSH1 0x2
0x21a EXP
0x21b SUB
0x21c PUSH1 0x4
0x21e CALLDATALOAD
0x21f AND
0x220 PUSH1 0x24
0x222 CALLDATALOAD
0x223 PUSH2 0x9e7
0x226 JUMP
---
0x210: JUMPDEST 
0x211: V190 = 0x1f1
0x214: V191 = 0x1
0x216: V192 = 0xa0
0x218: V193 = 0x2
0x21a: V194 = EXP 0x2 0xa0
0x21b: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21c: V196 = 0x4
0x21e: V197 = CALLDATALOAD 0x4
0x21f: V198 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x220: V199 = 0x24
0x222: V200 = CALLDATALOAD 0x24
0x223: V201 = 0x9e7
0x226: JUMP 0x9e7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f1, V198, V200]
Exit stack: [V12, 0x1f1, V198, V200]

================================

Block 0x227
[0x227:0x23a]
---
Predecessors: []
Successors: []
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a MLOAD
0x22b SWAP1
0x22c ISZERO
0x22d ISZERO
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x20
0x232 ADD
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP1
0x237 SWAP2
0x238 SUB
0x239 SWAP1
0x23a RETURN
---
0x227: JUMPDEST 
0x228: V202 = 0x40
0x22a: V203 = M[0x40]
0x22c: V204 = ISZERO S0
0x22d: V205 = ISZERO V204
0x22f: M[V203] = V205
0x230: V206 = 0x20
0x232: V207 = ADD 0x20 V203
0x233: V208 = 0x40
0x235: V209 = M[0x40]
0x238: V210 = SUB V207 V209
0x23a: RETURN V209 V210
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x23b
[0x23b:0x241]
---
Predecessors: [0x67]
Successors: [0x242, 0x246]
---
0x23b JUMPDEST
0x23c CALLVALUE
0x23d ISZERO
0x23e PUSH2 0x246
0x241 JUMPI
---
0x23b: JUMPDEST 
0x23c: V211 = CALLVALUE
0x23d: V212 = ISZERO V211
0x23e: V213 = 0x246
0x241: JUMPI 0x246 V212
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x242
[0x242:0x245]
---
Predecessors: [0x23b]
Successors: []
---
0x242 PUSH1 0x0
0x244 DUP1
0x245 REVERT
---
0x242: V214 = 0x0
0x245: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x246
[0x246:0x250]
---
Predecessors: [0x23b]
Successors: [0xa2d]
---
0x246 JUMPDEST
0x247 PUSH2 0x15a
0x24a PUSH1 0x4
0x24c CALLDATALOAD
0x24d PUSH2 0xa2d
0x250 JUMP
---
0x246: JUMPDEST 
0x247: V215 = 0x15a
0x24a: V216 = 0x4
0x24c: V217 = CALLDATALOAD 0x4
0x24d: V218 = 0xa2d
0x250: JUMP 0xa2d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V217]
Exit stack: [V12, 0x15a, V217]

================================

Block 0x251
[0x251:0x252]
---
Predecessors: []
Successors: []
---
0x251 JUMPDEST
0x252 STOP
---
0x251: JUMPDEST 
0x252: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x253
[0x253:0x259]
---
Predecessors: [0x72]
Successors: [0x25a, 0x25e]
---
0x253 JUMPDEST
0x254 CALLVALUE
0x255 ISZERO
0x256 PUSH2 0x25e
0x259 JUMPI
---
0x253: JUMPDEST 
0x254: V219 = CALLVALUE
0x255: V220 = ISZERO V219
0x256: V221 = 0x25e
0x259: JUMPI 0x25e V220
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25a
[0x25a:0x25d]
---
Predecessors: [0x253]
Successors: []
---
0x25a PUSH1 0x0
0x25c DUP1
0x25d REVERT
---
0x25a: V222 = 0x0
0x25d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25e
[0x25e:0x26b]
---
Predecessors: [0x253]
Successors: [0xa63]
---
0x25e JUMPDEST
0x25f PUSH2 0x15a
0x262 PUSH1 0x4
0x264 CALLDATALOAD
0x265 PUSH1 0x24
0x267 CALLDATALOAD
0x268 PUSH2 0xa63
0x26b JUMP
---
0x25e: JUMPDEST 
0x25f: V223 = 0x15a
0x262: V224 = 0x4
0x264: V225 = CALLDATALOAD 0x4
0x265: V226 = 0x24
0x267: V227 = CALLDATALOAD 0x24
0x268: V228 = 0xa63
0x26b: JUMP 0xa63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V225, V227]
Exit stack: [V12, 0x15a, V225, V227]

================================

Block 0x26c
[0x26c:0x26d]
---
Predecessors: []
Successors: []
---
0x26c JUMPDEST
0x26d STOP
---
0x26c: JUMPDEST 
0x26d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x26e
[0x26e:0x274]
---
Predecessors: [0x7d]
Successors: [0x275, 0x279]
---
0x26e JUMPDEST
0x26f CALLVALUE
0x270 ISZERO
0x271 PUSH2 0x279
0x274 JUMPI
---
0x26e: JUMPDEST 
0x26f: V229 = CALLVALUE
0x270: V230 = ISZERO V229
0x271: V231 = 0x279
0x274: JUMPI 0x279 V230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x275
[0x275:0x278]
---
Predecessors: [0x26e]
Successors: []
---
0x275 PUSH1 0x0
0x277 DUP1
0x278 REVERT
---
0x275: V232 = 0x0
0x278: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x279
[0x279:0x280]
---
Predecessors: [0x26e]
Successors: [0xcbb]
---
0x279 JUMPDEST
0x27a PUSH2 0x15a
0x27d PUSH2 0xcbb
0x280 JUMP
---
0x279: JUMPDEST 
0x27a: V233 = 0x15a
0x27d: V234 = 0xcbb
0x280: JUMP 0xcbb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V12, 0x15a]

================================

Block 0x281
[0x281:0x282]
---
Predecessors: []
Successors: []
---
0x281 JUMPDEST
0x282 STOP
---
0x281: JUMPDEST 
0x282: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x283
[0x283:0x289]
---
Predecessors: [0x88]
Successors: [0x28a, 0x28e]
---
0x283 JUMPDEST
0x284 CALLVALUE
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x283: JUMPDEST 
0x284: V235 = CALLVALUE
0x285: V236 = ISZERO V235
0x286: V237 = 0x28e
0x289: JUMPI 0x28e V236
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x283]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V238 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28e
[0x28e:0x295]
---
Predecessors: [0x283]
Successors: [0xce7]
---
0x28e JUMPDEST
0x28f PUSH2 0x296
0x292 PUSH2 0xce7
0x295 JUMP
---
0x28e: JUMPDEST 
0x28f: V239 = 0x296
0x292: V240 = 0xce7
0x295: JUMP 0xce7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x296]
Exit stack: [V12, 0x296]

================================

Block 0x296
[0x296:0x2b1]
---
Predecessors: [0xce7]
Successors: []
---
0x296 JUMPDEST
0x297 PUSH1 0x40
0x299 MLOAD
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 SWAP1
0x2a3 SWAP2
0x2a4 AND
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 RETURN
---
0x296: JUMPDEST 
0x297: V241 = 0x40
0x299: V242 = M[0x40]
0x29a: V243 = 0x1
0x29c: V244 = 0xa0
0x29e: V245 = 0x2
0x2a0: V246 = EXP 0x2 0xa0
0x2a1: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V248 = AND V1248 0xffffffffffffffffffffffffffffffffffffffff
0x2a6: M[V242] = V248
0x2a7: V249 = 0x20
0x2a9: V250 = ADD 0x20 V242
0x2aa: V251 = 0x40
0x2ac: V252 = M[0x40]
0x2af: V253 = SUB V250 V252
0x2b1: RETURN V252 V253
---
Entry stack: [V12, 0x296, V1248]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x296]

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0x93]
Successors: [0x2b9, 0x2bd]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V254 = CALLVALUE
0x2b4: V255 = ISZERO V254
0x2b5: V256 = 0x2bd
0x2b8: JUMPI 0x2bd V255
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V257 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bd
[0x2bd:0x2f2]
---
Predecessors: [0x2b2]
Successors: [0xcf6]
---
0x2bd JUMPDEST
0x2be PUSH2 0x1f1
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0xa0
0x2c5 PUSH1 0x2
0x2c7 EXP
0x2c8 SUB
0x2c9 PUSH1 0x4
0x2cb CALLDATALOAD
0x2cc DUP2
0x2cd AND
0x2ce SWAP1
0x2cf PUSH4 0xffffffff
0x2d4 PUSH1 0x24
0x2d6 CALLDATALOAD
0x2d7 AND
0x2d8 SWAP1
0x2d9 PUSH1 0x44
0x2db CALLDATALOAD
0x2dc AND
0x2dd PUSH1 0x64
0x2df CALLDATALOAD
0x2e0 PUSH1 0x84
0x2e2 CALLDATALOAD
0x2e3 PUSH1 0xff
0x2e5 PUSH1 0xa4
0x2e7 CALLDATALOAD
0x2e8 AND
0x2e9 PUSH1 0xc4
0x2eb CALLDATALOAD
0x2ec PUSH1 0xe4
0x2ee CALLDATALOAD
0x2ef PUSH2 0xcf6
0x2f2 JUMP
---
0x2bd: JUMPDEST 
0x2be: V258 = 0x1f1
0x2c1: V259 = 0x1
0x2c3: V260 = 0xa0
0x2c5: V261 = 0x2
0x2c7: V262 = EXP 0x2 0xa0
0x2c8: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c9: V264 = 0x4
0x2cb: V265 = CALLDATALOAD 0x4
0x2cd: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x2cf: V267 = 0xffffffff
0x2d4: V268 = 0x24
0x2d6: V269 = CALLDATALOAD 0x24
0x2d7: V270 = AND V269 0xffffffff
0x2d9: V271 = 0x44
0x2db: V272 = CALLDATALOAD 0x44
0x2dc: V273 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V274 = 0x64
0x2df: V275 = CALLDATALOAD 0x64
0x2e0: V276 = 0x84
0x2e2: V277 = CALLDATALOAD 0x84
0x2e3: V278 = 0xff
0x2e5: V279 = 0xa4
0x2e7: V280 = CALLDATALOAD 0xa4
0x2e8: V281 = AND V280 0xff
0x2e9: V282 = 0xc4
0x2eb: V283 = CALLDATALOAD 0xc4
0x2ec: V284 = 0xe4
0x2ee: V285 = CALLDATALOAD 0xe4
0x2ef: V286 = 0xcf6
0x2f2: JUMP 0xcf6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f1, V266, V270, V273, V275, V277, V281, V283, V285]
Exit stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285]

================================

Block 0x2f3
[0x2f3:0x306]
---
Predecessors: []
Successors: []
---
0x2f3 JUMPDEST
0x2f4 PUSH1 0x40
0x2f6 MLOAD
0x2f7 SWAP1
0x2f8 ISZERO
0x2f9 ISZERO
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 DUP1
0x303 SWAP2
0x304 SUB
0x305 SWAP1
0x306 RETURN
---
0x2f3: JUMPDEST 
0x2f4: V287 = 0x40
0x2f6: V288 = M[0x40]
0x2f8: V289 = ISZERO S0
0x2f9: V290 = ISZERO V289
0x2fb: M[V288] = V290
0x2fc: V291 = 0x20
0x2fe: V292 = ADD 0x20 V288
0x2ff: V293 = 0x40
0x301: V294 = M[0x40]
0x304: V295 = SUB V292 V294
0x306: RETURN V294 V295
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x307
[0x307:0x30d]
---
Predecessors: [0x9e]
Successors: [0x30e, 0x312]
---
0x307 JUMPDEST
0x308 CALLVALUE
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x307: JUMPDEST 
0x308: V296 = CALLVALUE
0x309: V297 = ISZERO V296
0x30a: V298 = 0x312
0x30d: JUMPI 0x312 V297
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x307]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V299 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x312
[0x312:0x31f]
---
Predecessors: [0x307]
Successors: [0xe03]
---
0x312 JUMPDEST
0x313 PUSH2 0x15a
0x316 PUSH1 0x4
0x318 CALLDATALOAD
0x319 PUSH1 0x24
0x31b CALLDATALOAD
0x31c PUSH2 0xe03
0x31f JUMP
---
0x312: JUMPDEST 
0x313: V300 = 0x15a
0x316: V301 = 0x4
0x318: V302 = CALLDATALOAD 0x4
0x319: V303 = 0x24
0x31b: V304 = CALLDATALOAD 0x24
0x31c: V305 = 0xe03
0x31f: JUMP 0xe03
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V302, V304]
Exit stack: [V12, 0x15a, V302, V304]

================================

Block 0x320
[0x320:0x321]
---
Predecessors: []
Successors: []
---
0x320 JUMPDEST
0x321 STOP
---
0x320: JUMPDEST 
0x321: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x322
[0x322:0x328]
---
Predecessors: [0xa9]
Successors: [0x329, 0x32d]
---
0x322 JUMPDEST
0x323 CALLVALUE
0x324 ISZERO
0x325 PUSH2 0x32d
0x328 JUMPI
---
0x322: JUMPDEST 
0x323: V306 = CALLVALUE
0x324: V307 = ISZERO V306
0x325: V308 = 0x32d
0x328: JUMPI 0x32d V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x329
[0x329:0x32c]
---
Predecessors: [0x322]
Successors: []
---
0x329 PUSH1 0x0
0x32b DUP1
0x32c REVERT
---
0x329: V309 = 0x0
0x32c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32d
[0x32d:0x346]
---
Predecessors: [0x322]
Successors: [0xe8e]
---
0x32d JUMPDEST
0x32e PUSH2 0x1f1
0x331 PUSH1 0x4
0x333 CALLDATALOAD
0x334 PUSH1 0x24
0x336 CALLDATALOAD
0x337 PUSH1 0xff
0x339 PUSH1 0x44
0x33b CALLDATALOAD
0x33c AND
0x33d PUSH1 0x64
0x33f CALLDATALOAD
0x340 PUSH1 0x84
0x342 CALLDATALOAD
0x343 PUSH2 0xe8e
0x346 JUMP
---
0x32d: JUMPDEST 
0x32e: V310 = 0x1f1
0x331: V311 = 0x4
0x333: V312 = CALLDATALOAD 0x4
0x334: V313 = 0x24
0x336: V314 = CALLDATALOAD 0x24
0x337: V315 = 0xff
0x339: V316 = 0x44
0x33b: V317 = CALLDATALOAD 0x44
0x33c: V318 = AND V317 0xff
0x33d: V319 = 0x64
0x33f: V320 = CALLDATALOAD 0x64
0x340: V321 = 0x84
0x342: V322 = CALLDATALOAD 0x84
0x343: V323 = 0xe8e
0x346: JUMP 0xe8e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f1, V312, V314, V318, V320, V322]
Exit stack: [V12, 0x1f1, V312, V314, V318, V320, V322]

================================

Block 0x347
[0x347:0x35a]
---
Predecessors: []
Successors: []
---
0x347 JUMPDEST
0x348 PUSH1 0x40
0x34a MLOAD
0x34b SWAP1
0x34c ISZERO
0x34d ISZERO
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x20
0x352 ADD
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 SWAP2
0x358 SUB
0x359 SWAP1
0x35a RETURN
---
0x347: JUMPDEST 
0x348: V324 = 0x40
0x34a: V325 = M[0x40]
0x34c: V326 = ISZERO S0
0x34d: V327 = ISZERO V326
0x34f: M[V325] = V327
0x350: V328 = 0x20
0x352: V329 = ADD 0x20 V325
0x353: V330 = 0x40
0x355: V331 = M[0x40]
0x358: V332 = SUB V329 V331
0x35a: RETURN V331 V332
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35b
[0x35b:0x361]
---
Predecessors: [0xb4]
Successors: [0x362, 0x366]
---
0x35b JUMPDEST
0x35c CALLVALUE
0x35d ISZERO
0x35e PUSH2 0x366
0x361 JUMPI
---
0x35b: JUMPDEST 
0x35c: V333 = CALLVALUE
0x35d: V334 = ISZERO V333
0x35e: V335 = 0x366
0x361: JUMPI 0x366 V334
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x362
[0x362:0x365]
---
Predecessors: [0x35b]
Successors: []
---
0x362 PUSH1 0x0
0x364 DUP1
0x365 REVERT
---
0x362: V336 = 0x0
0x365: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x366
[0x366:0x370]
---
Predecessors: [0x35b]
Successors: [0x1072]
---
0x366 JUMPDEST
0x367 PUSH2 0x1f1
0x36a PUSH1 0x4
0x36c CALLDATALOAD
0x36d PUSH2 0x1072
0x370 JUMP
---
0x366: JUMPDEST 
0x367: V337 = 0x1f1
0x36a: V338 = 0x4
0x36c: V339 = CALLDATALOAD 0x4
0x36d: V340 = 0x1072
0x370: JUMP 0x1072
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f1, V339]
Exit stack: [V12, 0x1f1, V339]

================================

Block 0x371
[0x371:0x38b]
---
Predecessors: []
Successors: [0x210, 0x38c]
---
0x371 JUMPDEST
0x372 PUSH1 0x40
0x374 MLOAD
0x375 SWAP1
0x376 ISZERO
0x377 ISZERO
0x378 DUP2
0x379 MSTORE
0x37a PUSH1 0x20
0x37c ADD
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 SWAP2
0x382 SUB
0x383 SWAP1
0x384 RETURN
0x385 JUMPDEST
0x386 CALLVALUE
0x387 ISZERO
0x388 PUSH2 0x210
0x38b JUMPI
---
0x371: JUMPDEST 
0x372: V341 = 0x40
0x374: V342 = M[0x40]
0x376: V343 = ISZERO S0
0x377: V344 = ISZERO V343
0x379: M[V342] = V344
0x37a: V345 = 0x20
0x37c: V346 = ADD 0x20 V342
0x37d: V347 = 0x40
0x37f: V348 = M[0x40]
0x382: V349 = SUB V346 V348
0x384: RETURN V348 V349
0x385: JUMPDEST 
0x386: V350 = CALLVALUE
0x387: V351 = ISZERO V350
0x388: V352 = 0x210
0x38b: JUMPI 0x210 V351
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x38c
[0x38c:0x3a6]
---
Predecessors: [0x371]
Successors: [0x9e7]
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
0x390 JUMPDEST
0x391 PUSH2 0x1f1
0x394 PUSH1 0x1
0x396 PUSH1 0xa0
0x398 PUSH1 0x2
0x39a EXP
0x39b SUB
0x39c PUSH1 0x4
0x39e CALLDATALOAD
0x39f AND
0x3a0 PUSH1 0x24
0x3a2 CALLDATALOAD
0x3a3 PUSH2 0x9e7
0x3a6 JUMP
---
0x38c: V353 = 0x0
0x38f: REVERT 0x0 0x0
0x390: JUMPDEST 
0x391: V354 = 0x1f1
0x394: V355 = 0x1
0x396: V356 = 0xa0
0x398: V357 = 0x2
0x39a: V358 = EXP 0x2 0xa0
0x39b: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39c: V360 = 0x4
0x39e: V361 = CALLDATALOAD 0x4
0x39f: V362 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x3a0: V363 = 0x24
0x3a2: V364 = CALLDATALOAD 0x24
0x3a3: V365 = 0x9e7
0x3a6: JUMP 0x9e7
---
Entry stack: []
Stack pops: 0
Stack additions: [V364, V362, 0x1f1]
Exit stack: []

================================

Block 0x3a7
[0x3a7:0x3ba]
---
Predecessors: []
Successors: []
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab SWAP1
0x3ac ISZERO
0x3ad ISZERO
0x3ae DUP2
0x3af MSTORE
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 SWAP2
0x3b8 SUB
0x3b9 SWAP1
0x3ba RETURN
---
0x3a7: JUMPDEST 
0x3a8: V366 = 0x40
0x3aa: V367 = M[0x40]
0x3ac: V368 = ISZERO S0
0x3ad: V369 = ISZERO V368
0x3af: M[V367] = V369
0x3b0: V370 = 0x20
0x3b2: V371 = ADD 0x20 V367
0x3b3: V372 = 0x40
0x3b5: V373 = M[0x40]
0x3b8: V374 = SUB V371 V373
0x3ba: RETURN V373 V374
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3bb
[0x3bb:0x3c1]
---
Predecessors: [0xca]
Successors: [0x3c2, 0x3c6]
---
0x3bb JUMPDEST
0x3bc CALLVALUE
0x3bd ISZERO
0x3be PUSH2 0x3c6
0x3c1 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V375 = CALLVALUE
0x3bd: V376 = ISZERO V375
0x3be: V377 = 0x3c6
0x3c1: JUMPI 0x3c6 V376
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c2
[0x3c2:0x3c5]
---
Predecessors: [0x3bb]
Successors: []
---
0x3c2 PUSH1 0x0
0x3c4 DUP1
0x3c5 REVERT
---
0x3c2: V378 = 0x0
0x3c5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c6
[0x3c6:0x3d0]
---
Predecessors: [0x3bb]
Successors: [0x10f9]
---
0x3c6 JUMPDEST
0x3c7 PUSH2 0x1a5
0x3ca PUSH1 0x4
0x3cc CALLDATALOAD
0x3cd PUSH2 0x10f9
0x3d0 JUMP
---
0x3c6: JUMPDEST 
0x3c7: V379 = 0x1a5
0x3ca: V380 = 0x4
0x3cc: V381 = CALLDATALOAD 0x4
0x3cd: V382 = 0x10f9
0x3d0: JUMP 0x10f9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5, V381]
Exit stack: [V12, 0x1a5, V381]

================================

Block 0x3d1
[0x3d1:0x3e2]
---
Predecessors: []
Successors: []
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 SWAP1
0x3d6 DUP2
0x3d7 MSTORE
0x3d8 PUSH1 0x20
0x3da ADD
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de DUP1
0x3df SWAP2
0x3e0 SUB
0x3e1 SWAP1
0x3e2 RETURN
---
0x3d1: JUMPDEST 
0x3d2: V383 = 0x40
0x3d4: V384 = M[0x40]
0x3d7: M[V384] = S0
0x3d8: V385 = 0x20
0x3da: V386 = ADD 0x20 V384
0x3db: V387 = 0x40
0x3dd: V388 = M[0x40]
0x3e0: V389 = SUB V386 V388
0x3e2: RETURN V388 V389
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e3
[0x3e3:0x3e9]
---
Predecessors: [0xd5]
Successors: [0x3ea, 0x3ee]
---
0x3e3 JUMPDEST
0x3e4 CALLVALUE
0x3e5 ISZERO
0x3e6 PUSH2 0x3ee
0x3e9 JUMPI
---
0x3e3: JUMPDEST 
0x3e4: V390 = CALLVALUE
0x3e5: V391 = ISZERO V390
0x3e6: V392 = 0x3ee
0x3e9: JUMPI 0x3ee V391
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ea
[0x3ea:0x3ed]
---
Predecessors: [0x3e3]
Successors: []
---
0x3ea PUSH1 0x0
0x3ec DUP1
0x3ed REVERT
---
0x3ea: V393 = 0x0
0x3ed: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ee
[0x3ee:0x3f8]
---
Predecessors: [0x3e3]
Successors: [0x1111]
---
0x3ee JUMPDEST
0x3ef PUSH2 0x1a5
0x3f2 PUSH1 0x4
0x3f4 CALLDATALOAD
0x3f5 PUSH2 0x1111
0x3f8 JUMP
---
0x3ee: JUMPDEST 
0x3ef: V394 = 0x1a5
0x3f2: V395 = 0x4
0x3f4: V396 = CALLDATALOAD 0x4
0x3f5: V397 = 0x1111
0x3f8: JUMP 0x1111
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5, V396]
Exit stack: [V12, 0x1a5, V396]

================================

Block 0x3f9
[0x3f9:0x40a]
---
Predecessors: []
Successors: []
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd SWAP1
0x3fe DUP2
0x3ff MSTORE
0x400 PUSH1 0x20
0x402 ADD
0x403 PUSH1 0x40
0x405 MLOAD
0x406 DUP1
0x407 SWAP2
0x408 SUB
0x409 SWAP1
0x40a RETURN
---
0x3f9: JUMPDEST 
0x3fa: V398 = 0x40
0x3fc: V399 = M[0x40]
0x3ff: M[V399] = S0
0x400: V400 = 0x20
0x402: V401 = ADD 0x20 V399
0x403: V402 = 0x40
0x405: V403 = M[0x40]
0x408: V404 = SUB V401 V403
0x40a: RETURN V403 V404
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x40b
[0x40b:0x411]
---
Predecessors: [0xe0]
Successors: [0x412, 0x416]
---
0x40b JUMPDEST
0x40c CALLVALUE
0x40d ISZERO
0x40e PUSH2 0x416
0x411 JUMPI
---
0x40b: JUMPDEST 
0x40c: V405 = CALLVALUE
0x40d: V406 = ISZERO V405
0x40e: V407 = 0x416
0x411: JUMPI 0x416 V406
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x412
[0x412:0x415]
---
Predecessors: [0x40b]
Successors: []
---
0x412 PUSH1 0x0
0x414 DUP1
0x415 REVERT
---
0x412: V408 = 0x0
0x415: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x416
[0x416:0x429]
---
Predecessors: [0x40b]
Successors: [0x1129]
---
0x416 JUMPDEST
0x417 PUSH2 0x15a
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 PUSH1 0x4
0x424 CALLDATALOAD
0x425 AND
0x426 PUSH2 0x1129
0x429 JUMP
---
0x416: JUMPDEST 
0x417: V409 = 0x15a
0x41a: V410 = 0x1
0x41c: V411 = 0xa0
0x41e: V412 = 0x2
0x420: V413 = EXP 0x2 0xa0
0x421: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V415 = 0x4
0x424: V416 = CALLDATALOAD 0x4
0x425: V417 = AND V416 0xffffffffffffffffffffffffffffffffffffffff
0x426: V418 = 0x1129
0x429: JUMP 0x1129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V417]
Exit stack: [V12, 0x15a, V417]

================================

Block 0x42a
[0x42a:0x42b]
---
Predecessors: []
Successors: []
---
0x42a JUMPDEST
0x42b STOP
---
0x42a: JUMPDEST 
0x42b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42c
[0x42c:0x432]
---
Predecessors: [0xeb]
Successors: [0x433, 0x437]
---
0x42c JUMPDEST
0x42d CALLVALUE
0x42e ISZERO
0x42f PUSH2 0x437
0x432 JUMPI
---
0x42c: JUMPDEST 
0x42d: V419 = CALLVALUE
0x42e: V420 = ISZERO V419
0x42f: V421 = 0x437
0x432: JUMPI 0x437 V420
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x433
[0x433:0x436]
---
Predecessors: [0x42c]
Successors: []
---
0x433 PUSH1 0x0
0x435 DUP1
0x436 REVERT
---
0x433: V422 = 0x0
0x436: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x437
[0x437:0x44a]
---
Predecessors: [0x42c]
Successors: [0x1181]
---
0x437 JUMPDEST
0x438 PUSH2 0x15a
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 PUSH1 0x4
0x445 CALLDATALOAD
0x446 AND
0x447 PUSH2 0x1181
0x44a JUMP
---
0x437: JUMPDEST 
0x438: V423 = 0x15a
0x43b: V424 = 0x1
0x43d: V425 = 0xa0
0x43f: V426 = 0x2
0x441: V427 = EXP 0x2 0xa0
0x442: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x443: V429 = 0x4
0x445: V430 = CALLDATALOAD 0x4
0x446: V431 = AND V430 0xffffffffffffffffffffffffffffffffffffffff
0x447: V432 = 0x1181
0x44a: JUMP 0x1181
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V431]
Exit stack: [V12, 0x15a, V431]

================================

Block 0x44b
[0x44b:0x44c]
---
Predecessors: []
Successors: []
---
0x44b JUMPDEST
0x44c STOP
---
0x44b: JUMPDEST 
0x44c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x44d
[0x44d:0x462]
---
Predecessors: [0x106]
Successors: [0x463]
---
0x44d JUMPDEST
0x44e PUSH1 0x0
0x450 DUP2
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x1
0x455 PUSH1 0x20
0x457 MSTORE
0x458 PUSH1 0x40
0x45a SWAP1
0x45b SHA3
0x45c PUSH1 0x5
0x45e ADD
0x45f SLOAD
0x460 PUSH1 0xff
0x462 AND
---
0x44d: JUMPDEST 
0x44e: V433 = 0x0
0x452: M[0x0] = V80
0x453: V434 = 0x1
0x455: V435 = 0x20
0x457: M[0x20] = 0x1
0x458: V436 = 0x40
0x45b: V437 = SHA3 0x0 0x40
0x45c: V438 = 0x5
0x45e: V439 = ADD 0x5 V437
0x45f: V440 = S[V439]
0x460: V441 = 0xff
0x462: V442 = AND 0xff V440
---
Entry stack: [V12, 0x111, V80]
Stack pops: 1
Stack additions: [S0, V442]
Exit stack: [V12, 0x111, V80, V442]

================================

Block 0x463
[0x463:0x467]
---
Predecessors: [0x44d]
Successors: [0x111]
---
0x463 JUMPDEST
0x464 SWAP2
0x465 SWAP1
0x466 POP
0x467 JUMP
---
0x463: JUMPDEST 
0x467: JUMP 0x111
---
Entry stack: [V12, 0x111, V80, V442]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V442]

================================

Block 0x468
[0x468:0x474]
---
Predecessors: [0x140]
Successors: [0xe8e]
---
0x468 JUMPDEST
0x469 PUSH2 0x475
0x46c DUP6
0x46d DUP6
0x46e DUP6
0x46f DUP6
0x470 DUP6
0x471 PUSH2 0xe8e
0x474 JUMP
---
0x468: JUMPDEST 
0x469: V443 = 0x475
0x471: V444 = 0xe8e
0x474: JUMP 0xe8e
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x475, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111]

================================

Block 0x475
[0x475:0x47b]
---
Predecessors: [0x1065]
Successors: [0x47c, 0x480]
---
0x475 JUMPDEST
0x476 ISZERO
0x477 ISZERO
0x478 PUSH2 0x480
0x47b JUMPI
---
0x475: JUMPDEST 
0x476: V445 = ISZERO S0
0x477: V446 = ISZERO V445
0x478: V447 = 0x480
0x47b: JUMPI 0x480 V446
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111]

================================

Block 0x47c
[0x47c:0x47f]
---
Predecessors: [0x475]
Successors: [0x48a]
---
0x47c PUSH2 0x48a
0x47f JUMP
---
0x47c: V448 = 0x48a
0x47f: JUMP 0x48a
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111]

================================

Block 0x480
[0x480:0x489]
---
Predecessors: [0x475]
Successors: [0xa63]
---
0x480 JUMPDEST
0x481 PUSH2 0x48a
0x484 DUP6
0x485 DUP6
0x486 PUSH2 0xa63
0x489 JUMP
---
0x480: JUMPDEST 
0x481: V449 = 0x48a
0x486: V450 = 0xa63
0x489: JUMP 0xa63
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x48a, S4, S3]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x48a, V101, V103]

================================

Block 0x48a
[0x48a:0x48a]
---
Predecessors: [0x47c, 0xcb3]
Successors: [0x48b]
---
0x48a JUMPDEST
---
0x48a: JUMPDEST 
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111]

================================

Block 0x48b
[0x48b:0x491]
---
Predecessors: [0x48a]
Successors: [0x15a]
---
0x48b JUMPDEST
0x48c POP
0x48d POP
0x48e POP
0x48f POP
0x490 POP
0x491 JUMP
---
0x48b: JUMPDEST 
0x491: JUMP 0x15a
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x492
[0x492:0x49e]
---
Predecessors: [0x167]
Successors: [0x9e7]
---
0x492 JUMPDEST
0x493 PUSH1 0x0
0x495 DUP1
0x496 PUSH2 0x49f
0x499 CALLER
0x49a DUP6
0x49b PUSH2 0x9e7
0x49e JUMP
---
0x492: JUMPDEST 
0x493: V451 = 0x0
0x496: V452 = 0x49f
0x499: V453 = CALLER
0x49b: V454 = 0x9e7
0x49e: JUMP 0x9e7
---
Entry stack: [V12, 0x15a, V119, V121]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x49f, V453, S1]
Exit stack: [V12, 0x15a, V119, V121, 0x0, 0x0, 0x49f, V453, V119]

================================

Block 0x49f
[0x49f:0x4a5]
---
Predecessors: [0x9e0, 0xa26]
Successors: [0x4a6, 0x4aa]
---
0x49f JUMPDEST
0x4a0 ISZERO
0x4a1 ISZERO
0x4a2 PUSH2 0x4aa
0x4a5 JUMPI
---
0x49f: JUMPDEST 
0x4a0: V455 = ISZERO S0
0x4a1: V456 = ISZERO V455
0x4a2: V457 = 0x4aa
0x4a5: JUMPI 0x4aa V456
---
Entry stack: [V12, 0x15a, V119, S3, {0x0, 0x15a}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V119, S3, {0x0, 0x15a}, S1]

================================

Block 0x4a6
[0x4a6:0x4a9]
---
Predecessors: [0x49f]
Successors: []
---
0x4a6 PUSH1 0x0
0x4a8 DUP1
0x4a9 REVERT
---
0x4a6: V458 = 0x0
0x4a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, 0x0, S0]

================================

Block 0x4aa
[0x4aa:0x52e]
---
Predecessors: [0x49f]
Successors: [0x52f, 0x533]
---
0x4aa JUMPDEST
0x4ab POP
0x4ac POP
0x4ad PUSH1 0x0
0x4af DUP3
0x4b0 DUP2
0x4b1 MSTORE
0x4b2 PUSH1 0x1
0x4b4 PUSH1 0x20
0x4b6 MSTORE
0x4b7 PUSH1 0x40
0x4b9 DUP1
0x4ba DUP3
0x4bb SHA3
0x4bc PUSH1 0x2
0x4be DUP2
0x4bf ADD
0x4c0 SLOAD
0x4c1 DUP2
0x4c2 SLOAD
0x4c3 SWAP2
0x4c4 SWAP4
0x4c5 PUSH1 0x1
0x4c7 PUSH1 0xa0
0x4c9 PUSH1 0x2
0x4cb EXP
0x4cc SUB
0x4cd SWAP2
0x4ce DUP3
0x4cf AND
0x4d0 SWAP4
0x4d1 DUP5
0x4d2 SWAP4
0x4d3 PUSH4 0x23b872dd
0x4d8 SWAP4
0x4d9 AND
0x4da SWAP2
0x4db ADDRESS
0x4dc SWAP2
0x4dd DUP9
0x4de SWAP2
0x4df SWAP1
0x4e0 MLOAD
0x4e1 PUSH1 0x20
0x4e3 ADD
0x4e4 MSTORE
0x4e5 PUSH1 0x40
0x4e7 MLOAD
0x4e8 PUSH1 0xe0
0x4ea PUSH1 0x2
0x4ec EXP
0x4ed PUSH4 0xffffffff
0x4f2 DUP7
0x4f3 AND
0x4f4 MUL
0x4f5 DUP2
0x4f6 MSTORE
0x4f7 PUSH1 0x1
0x4f9 PUSH1 0xa0
0x4fb PUSH1 0x2
0x4fd EXP
0x4fe SUB
0x4ff SWAP4
0x500 DUP5
0x501 AND
0x502 PUSH1 0x4
0x504 DUP3
0x505 ADD
0x506 MSTORE
0x507 SWAP2
0x508 SWAP1
0x509 SWAP3
0x50a AND
0x50b PUSH1 0x24
0x50d DUP3
0x50e ADD
0x50f MSTORE
0x510 PUSH1 0x44
0x512 DUP2
0x513 ADD
0x514 SWAP2
0x515 SWAP1
0x516 SWAP2
0x517 MSTORE
0x518 PUSH1 0x64
0x51a ADD
0x51b PUSH1 0x20
0x51d PUSH1 0x40
0x51f MLOAD
0x520 DUP1
0x521 DUP4
0x522 SUB
0x523 DUP2
0x524 PUSH1 0x0
0x526 DUP8
0x527 DUP1
0x528 EXTCODESIZE
0x529 ISZERO
0x52a ISZERO
0x52b PUSH2 0x533
0x52e JUMPI
---
0x4aa: JUMPDEST 
0x4ad: V459 = 0x0
0x4b1: M[0x0] = V119
0x4b2: V460 = 0x1
0x4b4: V461 = 0x20
0x4b6: M[0x20] = 0x1
0x4b7: V462 = 0x40
0x4bb: V463 = SHA3 0x0 0x40
0x4bc: V464 = 0x2
0x4bf: V465 = ADD V463 0x2
0x4c0: V466 = S[V465]
0x4c2: V467 = S[V463]
0x4c5: V468 = 0x1
0x4c7: V469 = 0xa0
0x4c9: V470 = 0x2
0x4cb: V471 = EXP 0x2 0xa0
0x4cc: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x4d3: V474 = 0x23b872dd
0x4d9: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x4db: V476 = ADDRESS
0x4e0: V477 = M[0x40]
0x4e1: V478 = 0x20
0x4e3: V479 = ADD 0x20 V477
0x4e4: M[V479] = 0x0
0x4e5: V480 = 0x40
0x4e7: V481 = M[0x40]
0x4e8: V482 = 0xe0
0x4ea: V483 = 0x2
0x4ec: V484 = EXP 0x2 0xe0
0x4ed: V485 = 0xffffffff
0x4f3: V486 = AND 0x23b872dd 0xffffffff
0x4f4: V487 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x4f6: M[V481] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x4f7: V488 = 0x1
0x4f9: V489 = 0xa0
0x4fb: V490 = 0x2
0x4fd: V491 = EXP 0x2 0xa0
0x4fe: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x501: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x502: V494 = 0x4
0x505: V495 = ADD V481 0x4
0x506: M[V495] = V493
0x50a: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x50b: V497 = 0x24
0x50e: V498 = ADD V481 0x24
0x50f: M[V498] = V496
0x510: V499 = 0x44
0x513: V500 = ADD V481 0x44
0x517: M[V500] = V121
0x518: V501 = 0x64
0x51a: V502 = ADD 0x64 V481
0x51b: V503 = 0x20
0x51d: V504 = 0x40
0x51f: V505 = M[0x40]
0x522: V506 = SUB V502 V505
0x524: V507 = 0x0
0x528: V508 = EXTCODESIZE V473
0x529: V509 = ISZERO V508
0x52a: V510 = ISZERO V509
0x52b: V511 = 0x533
0x52e: JUMPI 0x533 V510
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, V463, V473, V473, 0x23b872dd, V502, 0x20, V505, V506, V505, 0x0, V473]
Exit stack: [V12, 0x15a, V119, V121, V463, V473, V473, 0x23b872dd, V502, 0x20, V505, V506, V505, 0x0, V473]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x4aa]
Successors: []
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
---
0x52f: V512 = 0x0
0x532: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V119, V121, V463, V473, V473, 0x23b872dd, V502, 0x20, V505, V506, V505, 0x0, V473]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, V463, V473, V473, 0x23b872dd, V502, 0x20, V505, V506, V505, 0x0, V473]

================================

Block 0x533
[0x533:0x53f]
---
Predecessors: [0x4aa]
Successors: [0x540, 0x544]
---
0x533 JUMPDEST
0x534 PUSH2 0x2c6
0x537 GAS
0x538 SUB
0x539 CALL
0x53a ISZERO
0x53b ISZERO
0x53c PUSH2 0x544
0x53f JUMPI
---
0x533: JUMPDEST 
0x534: V513 = 0x2c6
0x537: V514 = GAS
0x538: V515 = SUB V514 0x2c6
0x539: V516 = CALL V515 V473 0x0 V505 V506 V505 0x20
0x53a: V517 = ISZERO V516
0x53b: V518 = ISZERO V517
0x53c: V519 = 0x544
0x53f: JUMPI 0x544 V518
---
Entry stack: [V12, 0x15a, V119, V121, V463, V473, V473, 0x23b872dd, V502, 0x20, V505, V506, V505, 0x0, V473]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, V463, V473, V473, 0x23b872dd, V502]

================================

Block 0x540
[0x540:0x543]
---
Predecessors: [0x533]
Successors: []
---
0x540 PUSH1 0x0
0x542 DUP1
0x543 REVERT
---
0x540: V520 = 0x0
0x543: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V119, V121, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, S4, S3, S2, 0x23b872dd, S0]

================================

Block 0x544
[0x544:0x554]
---
Predecessors: [0x533]
Successors: [0x555, 0x559]
---
0x544 JUMPDEST
0x545 POP
0x546 POP
0x547 POP
0x548 PUSH1 0x40
0x54a MLOAD
0x54b DUP1
0x54c MLOAD
0x54d SWAP1
0x54e POP
0x54f ISZERO
0x550 ISZERO
0x551 PUSH2 0x559
0x554 JUMPI
---
0x544: JUMPDEST 
0x548: V521 = 0x40
0x54a: V522 = M[0x40]
0x54c: V523 = M[V522]
0x54f: V524 = ISZERO V523
0x550: V525 = ISZERO V524
0x551: V526 = 0x559
0x554: JUMPI 0x559 V525
---
Entry stack: [V12, 0x15a, V119, V121, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, S4, S3]

================================

Block 0x555
[0x555:0x558]
---
Predecessors: [0x544]
Successors: []
---
0x555 PUSH1 0x0
0x557 DUP1
0x558 REVERT
---
0x555: V527 = 0x0
0x558: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V119, V121, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, S1, S0]

================================

Block 0x559
[0x559:0x597]
---
Predecessors: [0x544]
Successors: [0x598]
---
0x559 JUMPDEST
0x55a PUSH1 0x3
0x55c DUP3
0x55d ADD
0x55e DUP1
0x55f SLOAD
0x560 DUP5
0x561 ADD
0x562 SWAP1
0x563 SSTORE
0x564 DUP4
0x565 PUSH32 0x6f850cda6d6b2f5cca622bc2d4739e4ed917c12d29f9a92b9e6c127abe398424
0x586 DUP5
0x587 PUSH1 0x40
0x589 MLOAD
0x58a SWAP1
0x58b DUP2
0x58c MSTORE
0x58d PUSH1 0x20
0x58f ADD
0x590 PUSH1 0x40
0x592 MLOAD
0x593 DUP1
0x594 SWAP2
0x595 SUB
0x596 SWAP1
0x597 LOG2
---
0x559: JUMPDEST 
0x55a: V528 = 0x3
0x55d: V529 = ADD S1 0x3
0x55f: V530 = S[V529]
0x561: V531 = ADD V121 V530
0x563: S[V529] = V531
0x565: V532 = 0x6f850cda6d6b2f5cca622bc2d4739e4ed917c12d29f9a92b9e6c127abe398424
0x587: V533 = 0x40
0x589: V534 = M[0x40]
0x58c: M[V534] = V121
0x58d: V535 = 0x20
0x58f: V536 = ADD 0x20 V534
0x590: V537 = 0x40
0x592: V538 = M[0x40]
0x595: V539 = SUB V536 V538
0x597: LOG V538 V539 0x6f850cda6d6b2f5cca622bc2d4739e4ed917c12d29f9a92b9e6c127abe398424 V119
---
Entry stack: [V12, 0x15a, V119, V121, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x15a, V119, V121, S1, S0]

================================

Block 0x598
[0x598:0x59d]
---
Predecessors: [0x559]
Successors: [0x15a]
---
0x598 JUMPDEST
0x599 POP
0x59a POP
0x59b POP
0x59c POP
0x59d JUMP
---
0x598: JUMPDEST 
0x59d: JUMP S4
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x59e
[0x59e:0x657]
---
Predecessors: [0x182]
Successors: [0x658, 0x65c]
---
0x59e JUMPDEST
0x59f PUSH1 0x2
0x5a1 DUP1
0x5a2 SLOAD
0x5a3 PUSH8 0xffffffff00000000
0x5ac NOT
0x5ad DUP2
0x5ae AND
0x5af PUSH5 0x100000000
0x5b5 SWAP2
0x5b6 DUP3
0x5b7 SWAP1
0x5b8 DIV
0x5b9 PUSH4 0xffffffff
0x5be SWAP1
0x5bf DUP2
0x5c0 AND
0x5c1 PUSH1 0x1
0x5c3 DUP2
0x5c4 ADD
0x5c5 SWAP1
0x5c6 SWAP2
0x5c7 AND
0x5c8 SWAP1
0x5c9 SWAP3
0x5ca MUL
0x5cb OR
0x5cc SWAP1
0x5cd SWAP2
0x5ce SSTORE
0x5cf PUSH1 0x0
0x5d1 SWAP1
0x5d2 DUP2
0x5d3 SWAP1
0x5d4 DUP2
0x5d5 SWAP1
0x5d6 DUP2
0x5d7 SWAP1
0x5d8 TIMESTAMP
0x5d9 ADD
0x5da PUSH1 0x40
0x5dc MLOAD
0x5dd SWAP1
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH1 0x20
0x5e2 ADD
0x5e3 PUSH1 0x40
0x5e5 MLOAD
0x5e6 DUP1
0x5e7 SWAP2
0x5e8 SUB
0x5e9 SWAP1
0x5ea SHA3
0x5eb SWAP3
0x5ec POP
0x5ed CALLER
0x5ee SWAP2
0x5ef POP
0x5f0 DUP9
0x5f1 SWAP1
0x5f2 POP
0x5f3 DUP1
0x5f4 PUSH1 0x1
0x5f6 PUSH1 0xa0
0x5f8 PUSH1 0x2
0x5fa EXP
0x5fb SUB
0x5fc AND
0x5fd PUSH4 0x23b872dd
0x602 DUP4
0x603 ADDRESS
0x604 DUP9
0x605 PUSH1 0x0
0x607 PUSH1 0x40
0x609 MLOAD
0x60a PUSH1 0x20
0x60c ADD
0x60d MSTORE
0x60e PUSH1 0x40
0x610 MLOAD
0x611 PUSH1 0xe0
0x613 PUSH1 0x2
0x615 EXP
0x616 PUSH4 0xffffffff
0x61b DUP7
0x61c AND
0x61d MUL
0x61e DUP2
0x61f MSTORE
0x620 PUSH1 0x1
0x622 PUSH1 0xa0
0x624 PUSH1 0x2
0x626 EXP
0x627 SUB
0x628 SWAP4
0x629 DUP5
0x62a AND
0x62b PUSH1 0x4
0x62d DUP3
0x62e ADD
0x62f MSTORE
0x630 SWAP2
0x631 SWAP1
0x632 SWAP3
0x633 AND
0x634 PUSH1 0x24
0x636 DUP3
0x637 ADD
0x638 MSTORE
0x639 PUSH1 0x44
0x63b DUP2
0x63c ADD
0x63d SWAP2
0x63e SWAP1
0x63f SWAP2
0x640 MSTORE
0x641 PUSH1 0x64
0x643 ADD
0x644 PUSH1 0x20
0x646 PUSH1 0x40
0x648 MLOAD
0x649 DUP1
0x64a DUP4
0x64b SUB
0x64c DUP2
0x64d PUSH1 0x0
0x64f DUP8
0x650 DUP1
0x651 EXTCODESIZE
0x652 ISZERO
0x653 ISZERO
0x654 PUSH2 0x65c
0x657 JUMPI
---
0x59e: JUMPDEST 
0x59f: V540 = 0x2
0x5a2: V541 = S[0x2]
0x5a3: V542 = 0xffffffff00000000
0x5ac: V543 = NOT 0xffffffff00000000
0x5ae: V544 = AND V541 0xffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff
0x5af: V545 = 0x100000000
0x5b8: V546 = DIV V541 0x100000000
0x5b9: V547 = 0xffffffff
0x5c0: V548 = AND 0xffffffff V546
0x5c1: V549 = 0x1
0x5c4: V550 = ADD V548 0x1
0x5c7: V551 = AND 0xffffffff V550
0x5ca: V552 = MUL 0x100000000 V551
0x5cb: V553 = OR V552 V544
0x5ce: S[0x2] = V553
0x5cf: V554 = 0x0
0x5d8: V555 = TIMESTAMP
0x5d9: V556 = ADD V555 V548
0x5da: V557 = 0x40
0x5dc: V558 = M[0x40]
0x5df: M[V558] = V556
0x5e0: V559 = 0x20
0x5e2: V560 = ADD 0x20 V558
0x5e3: V561 = 0x40
0x5e5: V562 = M[0x40]
0x5e8: V563 = SUB V560 V562
0x5ea: V564 = SHA3 V562 V563
0x5ed: V565 = CALLER
0x5f4: V566 = 0x1
0x5f6: V567 = 0xa0
0x5f8: V568 = 0x2
0x5fa: V569 = EXP 0x2 0xa0
0x5fb: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fc: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x5fd: V572 = 0x23b872dd
0x603: V573 = ADDRESS
0x605: V574 = 0x0
0x607: V575 = 0x40
0x609: V576 = M[0x40]
0x60a: V577 = 0x20
0x60c: V578 = ADD 0x20 V576
0x60d: M[V578] = 0x0
0x60e: V579 = 0x40
0x610: V580 = M[0x40]
0x611: V581 = 0xe0
0x613: V582 = 0x2
0x615: V583 = EXP 0x2 0xe0
0x616: V584 = 0xffffffff
0x61c: V585 = AND 0x23b872dd 0xffffffff
0x61d: V586 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x61f: M[V580] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x620: V587 = 0x1
0x622: V588 = 0xa0
0x624: V589 = 0x2
0x626: V590 = EXP 0x2 0xa0
0x627: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62a: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x62b: V593 = 0x4
0x62e: V594 = ADD V580 0x4
0x62f: M[V594] = V592
0x633: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x634: V596 = 0x24
0x637: V597 = ADD V580 0x24
0x638: M[V597] = V595
0x639: V598 = 0x44
0x63c: V599 = ADD V580 0x44
0x640: M[V599] = V144
0x641: V600 = 0x64
0x643: V601 = ADD 0x64 V580
0x644: V602 = 0x20
0x646: V603 = 0x40
0x648: V604 = M[0x40]
0x64b: V605 = SUB V601 V604
0x64d: V606 = 0x0
0x651: V607 = EXTCODESIZE V571
0x652: V608 = ISZERO V607
0x653: V609 = ISZERO V608
0x654: V610 = 0x65c
0x657: JUMPI 0x65c V609
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, V564, V565, S4, V571, 0x23b872dd, V601, 0x20, V604, V605, V604, 0x0, V571]
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V571, 0x23b872dd, V601, 0x20, V604, V605, V604, 0x0, V571]

================================

Block 0x658
[0x658:0x65b]
---
Predecessors: [0x59e]
Successors: []
---
0x658 PUSH1 0x0
0x65a DUP1
0x65b REVERT
---
0x658: V611 = 0x0
0x65b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V571, 0x23b872dd, V601, 0x20, V604, V605, V604, 0x0, V571]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V571, 0x23b872dd, V601, 0x20, V604, V605, V604, 0x0, V571]

================================

Block 0x65c
[0x65c:0x668]
---
Predecessors: [0x59e]
Successors: [0x669, 0x66d]
---
0x65c JUMPDEST
0x65d PUSH2 0x2c6
0x660 GAS
0x661 SUB
0x662 CALL
0x663 ISZERO
0x664 ISZERO
0x665 PUSH2 0x66d
0x668 JUMPI
---
0x65c: JUMPDEST 
0x65d: V612 = 0x2c6
0x660: V613 = GAS
0x661: V614 = SUB V613 0x2c6
0x662: V615 = CALL V614 V571 0x0 V604 V605 V604 0x20
0x663: V616 = ISZERO V615
0x664: V617 = ISZERO V616
0x665: V618 = 0x66d
0x668: JUMPI 0x66d V617
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V571, 0x23b872dd, V601, 0x20, V604, V605, V604, 0x0, V571]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V571, 0x23b872dd, V601]

================================

Block 0x669
[0x669:0x66c]
---
Predecessors: [0x65c]
Successors: []
---
0x669 PUSH1 0x0
0x66b DUP1
0x66c REVERT
---
0x669: V619 = 0x0
0x66c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V571, 0x23b872dd, V601]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V571, 0x23b872dd, V601]

================================

Block 0x66d
[0x66d:0x67d]
---
Predecessors: [0x65c]
Successors: [0x67e, 0x682]
---
0x66d JUMPDEST
0x66e POP
0x66f POP
0x670 POP
0x671 PUSH1 0x40
0x673 MLOAD
0x674 DUP1
0x675 MLOAD
0x676 SWAP1
0x677 POP
0x678 ISZERO
0x679 ISZERO
0x67a PUSH2 0x682
0x67d JUMPI
---
0x66d: JUMPDEST 
0x671: V620 = 0x40
0x673: V621 = M[0x40]
0x675: V622 = M[V621]
0x678: V623 = ISZERO V622
0x679: V624 = ISZERO V623
0x67a: V625 = 0x682
0x67d: JUMPI 0x682 V624
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V571, 0x23b872dd, V601]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135]

================================

Block 0x67e
[0x67e:0x681]
---
Predecessors: [0x66d]
Successors: []
---
0x67e PUSH1 0x0
0x680 DUP1
0x681 REVERT
---
0x67e: V626 = 0x0
0x681: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135]

================================

Block 0x682
[0x682:0x6d3]
---
Predecessors: [0x66d]
Successors: [0x6d4, 0x6d5]
---
0x682 JUMPDEST
0x683 PUSH2 0x100
0x686 PUSH1 0x40
0x688 MLOAD
0x689 SWAP1
0x68a DUP2
0x68b ADD
0x68c PUSH1 0x40
0x68e MSTORE
0x68f DUP1
0x690 DUP4
0x691 PUSH1 0x1
0x693 PUSH1 0xa0
0x695 PUSH1 0x2
0x697 EXP
0x698 SUB
0x699 AND
0x69a DUP2
0x69b MSTORE
0x69c PUSH1 0x20
0x69e ADD
0x69f DUP10
0x6a0 PUSH1 0x1
0x6a2 PUSH1 0xa0
0x6a4 PUSH1 0x2
0x6a6 EXP
0x6a7 SUB
0x6a8 AND
0x6a9 DUP2
0x6aa MSTORE
0x6ab PUSH1 0x20
0x6ad ADD
0x6ae DUP11
0x6af PUSH1 0x1
0x6b1 PUSH1 0xa0
0x6b3 PUSH1 0x2
0x6b5 EXP
0x6b6 SUB
0x6b7 AND
0x6b8 DUP2
0x6b9 MSTORE
0x6ba PUSH1 0x20
0x6bc ADD
0x6bd DUP7
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x20
0x6c2 ADD
0x6c3 DUP8
0x6c4 DUP2
0x6c5 MSTORE
0x6c6 PUSH1 0x20
0x6c8 ADD
0x6c9 PUSH1 0x0
0x6cb PUSH1 0x2
0x6cd DUP2
0x6ce GT
0x6cf ISZERO
0x6d0 PUSH2 0x6d5
0x6d3 JUMPI
---
0x682: JUMPDEST 
0x683: V627 = 0x100
0x686: V628 = 0x40
0x688: V629 = M[0x40]
0x68b: V630 = ADD V629 0x100
0x68c: V631 = 0x40
0x68e: M[0x40] = V630
0x691: V632 = 0x1
0x693: V633 = 0xa0
0x695: V634 = 0x2
0x697: V635 = EXP 0x2 0xa0
0x698: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x699: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x69b: M[V629] = V637
0x69c: V638 = 0x20
0x69e: V639 = ADD 0x20 V629
0x6a0: V640 = 0x1
0x6a2: V641 = 0xa0
0x6a4: V642 = 0x2
0x6a6: V643 = EXP 0x2 0xa0
0x6a7: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a8: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x6aa: M[V639] = V645
0x6ab: V646 = 0x20
0x6ad: V647 = ADD 0x20 V639
0x6af: V648 = 0x1
0x6b1: V649 = 0xa0
0x6b3: V650 = 0x2
0x6b5: V651 = EXP 0x2 0xa0
0x6b6: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b7: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x6b9: M[V647] = V653
0x6ba: V654 = 0x20
0x6bc: V655 = ADD 0x20 V647
0x6bf: M[V655] = V144
0x6c0: V656 = 0x20
0x6c2: V657 = ADD 0x20 V655
0x6c5: M[V657] = V142
0x6c6: V658 = 0x20
0x6c8: V659 = ADD 0x20 V657
0x6c9: V660 = 0x0
0x6cb: V661 = 0x2
0x6ce: V662 = GT 0x0 0x2
0x6cf: V663 = ISZERO 0x0
0x6d0: V664 = 0x6d5
0x6d3: JUMPI 0x6d5 0x1
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V629, V659, 0x0]
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V629, V659, 0x0]

================================

Block 0x6d4
[0x6d4:0x6d4]
---
Predecessors: [0x682]
Successors: []
---
0x6d4 INVALID
---
0x6d4: INVALID 
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V629, V659, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V629, V659, 0x0]

================================

Block 0x6d5
[0x6d5:0x7b7]
---
Predecessors: [0x682]
Successors: [0x7b8, 0x7b9]
---
0x6d5 JUMPDEST
0x6d6 DUP2
0x6d7 MSTORE
0x6d8 TIMESTAMP
0x6d9 DUP10
0x6da ADD
0x6db PUSH1 0x20
0x6dd DUP1
0x6de DUP4
0x6df ADD
0x6e0 SWAP2
0x6e1 SWAP1
0x6e2 SWAP2
0x6e3 MSTORE
0x6e4 PUSH1 0x0
0x6e6 PUSH1 0x40
0x6e8 SWAP3
0x6e9 DUP4
0x6ea ADD
0x6eb DUP2
0x6ec SWAP1
0x6ed MSTORE
0x6ee DUP7
0x6ef DUP2
0x6f0 MSTORE
0x6f1 PUSH1 0x1
0x6f3 SWAP1
0x6f4 SWAP2
0x6f5 MSTORE
0x6f6 SHA3
0x6f7 DUP2
0x6f8 MLOAD
0x6f9 DUP2
0x6fa SLOAD
0x6fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x710 NOT
0x711 AND
0x712 PUSH1 0x1
0x714 PUSH1 0xa0
0x716 PUSH1 0x2
0x718 EXP
0x719 SUB
0x71a SWAP2
0x71b SWAP1
0x71c SWAP2
0x71d AND
0x71e OR
0x71f DUP2
0x720 SSTORE
0x721 PUSH1 0x20
0x723 DUP3
0x724 ADD
0x725 MLOAD
0x726 PUSH1 0x1
0x728 DUP3
0x729 ADD
0x72a DUP1
0x72b SLOAD
0x72c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x741 NOT
0x742 AND
0x743 PUSH1 0x1
0x745 PUSH1 0xa0
0x747 PUSH1 0x2
0x749 EXP
0x74a SUB
0x74b SWAP3
0x74c SWAP1
0x74d SWAP3
0x74e AND
0x74f SWAP2
0x750 SWAP1
0x751 SWAP2
0x752 OR
0x753 SWAP1
0x754 SSTORE
0x755 PUSH1 0x40
0x757 DUP3
0x758 ADD
0x759 MLOAD
0x75a PUSH1 0x2
0x75c DUP3
0x75d ADD
0x75e DUP1
0x75f SLOAD
0x760 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x775 NOT
0x776 AND
0x777 PUSH1 0x1
0x779 PUSH1 0xa0
0x77b PUSH1 0x2
0x77d EXP
0x77e SUB
0x77f SWAP3
0x780 SWAP1
0x781 SWAP3
0x782 AND
0x783 SWAP2
0x784 SWAP1
0x785 SWAP2
0x786 OR
0x787 SWAP1
0x788 SSTORE
0x789 PUSH1 0x60
0x78b DUP3
0x78c ADD
0x78d MLOAD
0x78e DUP2
0x78f PUSH1 0x3
0x791 ADD
0x792 SSTORE
0x793 PUSH1 0x80
0x795 DUP3
0x796 ADD
0x797 MLOAD
0x798 DUP2
0x799 PUSH1 0x4
0x79b ADD
0x79c SSTORE
0x79d PUSH1 0xa0
0x79f DUP3
0x7a0 ADD
0x7a1 MLOAD
0x7a2 PUSH1 0x5
0x7a4 DUP3
0x7a5 ADD
0x7a6 DUP1
0x7a7 SLOAD
0x7a8 PUSH1 0xff
0x7aa NOT
0x7ab AND
0x7ac PUSH1 0x1
0x7ae DUP4
0x7af PUSH1 0x2
0x7b1 DUP2
0x7b2 GT
0x7b3 ISZERO
0x7b4 PUSH2 0x7b9
0x7b7 JUMPI
---
0x6d5: JUMPDEST 
0x6d7: M[V659] = 0x0
0x6d8: V665 = TIMESTAMP
0x6da: V666 = ADD V140 V665
0x6db: V667 = 0x20
0x6df: V668 = ADD V659 0x20
0x6e3: M[V668] = V666
0x6e4: V669 = 0x0
0x6e6: V670 = 0x40
0x6ea: V671 = ADD 0x40 V659
0x6ed: M[V671] = 0x0
0x6f0: M[0x0] = V564
0x6f1: V672 = 0x1
0x6f5: M[0x20] = 0x1
0x6f6: V673 = SHA3 0x0 0x40
0x6f8: V674 = M[V629]
0x6fa: V675 = S[V673]
0x6fb: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0x710: V677 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x711: V678 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V675
0x712: V679 = 0x1
0x714: V680 = 0xa0
0x716: V681 = 0x2
0x718: V682 = EXP 0x2 0xa0
0x719: V683 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71d: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0x71e: V685 = OR V684 V678
0x720: S[V673] = V685
0x721: V686 = 0x20
0x724: V687 = ADD V629 0x20
0x725: V688 = M[V687]
0x726: V689 = 0x1
0x729: V690 = ADD V673 0x1
0x72b: V691 = S[V690]
0x72c: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0x741: V693 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x742: V694 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V691
0x743: V695 = 0x1
0x745: V696 = 0xa0
0x747: V697 = 0x2
0x749: V698 = EXP 0x2 0xa0
0x74a: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74e: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0x752: V701 = OR V700 V694
0x754: S[V690] = V701
0x755: V702 = 0x40
0x758: V703 = ADD V629 0x40
0x759: V704 = M[V703]
0x75a: V705 = 0x2
0x75d: V706 = ADD V673 0x2
0x75f: V707 = S[V706]
0x760: V708 = 0xffffffffffffffffffffffffffffffffffffffff
0x775: V709 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x776: V710 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V707
0x777: V711 = 0x1
0x779: V712 = 0xa0
0x77b: V713 = 0x2
0x77d: V714 = EXP 0x2 0xa0
0x77e: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x782: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0x786: V717 = OR V716 V710
0x788: S[V706] = V717
0x789: V718 = 0x60
0x78c: V719 = ADD V629 0x60
0x78d: V720 = M[V719]
0x78f: V721 = 0x3
0x791: V722 = ADD 0x3 V673
0x792: S[V722] = V720
0x793: V723 = 0x80
0x796: V724 = ADD V629 0x80
0x797: V725 = M[V724]
0x799: V726 = 0x4
0x79b: V727 = ADD 0x4 V673
0x79c: S[V727] = V725
0x79d: V728 = 0xa0
0x7a0: V729 = ADD V629 0xa0
0x7a1: V730 = M[V729]
0x7a2: V731 = 0x5
0x7a5: V732 = ADD V673 0x5
0x7a7: V733 = S[V732]
0x7a8: V734 = 0xff
0x7aa: V735 = NOT 0xff
0x7ab: V736 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V733
0x7ac: V737 = 0x1
0x7af: V738 = 0x2
0x7b2: V739 = GT V730 0x2
0x7b3: V740 = ISZERO V739
0x7b4: V741 = 0x7b9
0x7b7: JUMPI 0x7b9 V740
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V629, V659, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V673, V730, V732, V736, 0x1, V730]
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V629, V673, V730, V732, V736, 0x1, V730]

================================

Block 0x7b8
[0x7b8:0x7b8]
---
Predecessors: [0x6d5]
Successors: []
---
0x7b8 INVALID
---
0x7b8: INVALID 
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V629, V673, V730, V732, V736, 0x1, V730]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V629, V673, V730, V732, V736, 0x1, V730]

================================

Block 0x7b9
[0x7b9:0x83e]
---
Predecessors: [0x6d5]
Successors: [0x83f]
---
0x7b9 JUMPDEST
0x7ba MUL
0x7bb OR
0x7bc SWAP1
0x7bd SSTORE
0x7be POP
0x7bf PUSH1 0xc0
0x7c1 DUP3
0x7c2 ADD
0x7c3 MLOAD
0x7c4 DUP2
0x7c5 PUSH1 0x6
0x7c7 ADD
0x7c8 SSTORE
0x7c9 PUSH1 0xe0
0x7cb DUP3
0x7cc ADD
0x7cd MLOAD
0x7ce DUP2
0x7cf PUSH1 0x7
0x7d1 ADD
0x7d2 SSTORE
0x7d3 SWAP1
0x7d4 POP
0x7d5 POP
0x7d6 DUP8
0x7d7 PUSH1 0x1
0x7d9 PUSH1 0xa0
0x7db PUSH1 0x2
0x7dd EXP
0x7de SUB
0x7df AND
0x7e0 DUP3
0x7e1 PUSH1 0x1
0x7e3 PUSH1 0xa0
0x7e5 PUSH1 0x2
0x7e7 EXP
0x7e8 SUB
0x7e9 AND
0x7ea PUSH32 0x2168a0a10cb12f43941acf9cdef54ba002be7269f2b8b38d4ee9e54eb48a4662
0x80b DUP6
0x80c DUP9
0x80d DUP11
0x80e DUP13
0x80f TIMESTAMP
0x810 ADD
0x811 PUSH1 0x40
0x813 MLOAD
0x814 SWAP4
0x815 DUP5
0x816 MSTORE
0x817 PUSH1 0x20
0x819 DUP5
0x81a ADD
0x81b SWAP3
0x81c SWAP1
0x81d SWAP3
0x81e MSTORE
0x81f PUSH1 0x40
0x821 DUP1
0x822 DUP5
0x823 ADD
0x824 SWAP2
0x825 SWAP1
0x826 SWAP2
0x827 MSTORE
0x828 PUSH1 0x60
0x82a DUP4
0x82b ADD
0x82c SWAP2
0x82d SWAP1
0x82e SWAP2
0x82f MSTORE
0x830 PUSH1 0x80
0x832 SWAP1
0x833 SWAP2
0x834 ADD
0x835 SWAP1
0x836 MLOAD
0x837 DUP1
0x838 SWAP2
0x839 SUB
0x83a SWAP1
0x83b LOG3
0x83c DUP3
0x83d SWAP4
0x83e POP
---
0x7b9: JUMPDEST 
0x7ba: V742 = MUL V730 0x1
0x7bb: V743 = OR V742 V736
0x7bd: S[V732] = V743
0x7bf: V744 = 0xc0
0x7c2: V745 = ADD V629 0xc0
0x7c3: V746 = M[V745]
0x7c5: V747 = 0x6
0x7c7: V748 = ADD 0x6 V673
0x7c8: S[V748] = V746
0x7c9: V749 = 0xe0
0x7cc: V750 = ADD V629 0xe0
0x7cd: V751 = M[V750]
0x7cf: V752 = 0x7
0x7d1: V753 = ADD 0x7 V673
0x7d2: S[V753] = V751
0x7d7: V754 = 0x1
0x7d9: V755 = 0xa0
0x7db: V756 = 0x2
0x7dd: V757 = EXP 0x2 0xa0
0x7de: V758 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7df: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x7e1: V760 = 0x1
0x7e3: V761 = 0xa0
0x7e5: V762 = 0x2
0x7e7: V763 = EXP 0x2 0xa0
0x7e8: V764 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e9: V765 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x7ea: V766 = 0x2168a0a10cb12f43941acf9cdef54ba002be7269f2b8b38d4ee9e54eb48a4662
0x80f: V767 = TIMESTAMP
0x810: V768 = ADD V767 V140
0x811: V769 = 0x40
0x813: V770 = M[0x40]
0x816: M[V770] = V564
0x817: V771 = 0x20
0x81a: V772 = ADD V770 0x20
0x81e: M[V772] = V144
0x81f: V773 = 0x40
0x823: V774 = ADD V770 0x40
0x827: M[V774] = V142
0x828: V775 = 0x60
0x82b: V776 = ADD V770 0x60
0x82f: M[V776] = V768
0x830: V777 = 0x80
0x834: V778 = ADD V770 0x80
0x836: V779 = M[0x40]
0x839: V780 = SUB V778 V779
0x83b: LOG V779 V780 0x2168a0a10cb12f43941acf9cdef54ba002be7269f2b8b38d4ee9e54eb48a4662 V765 V759
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, 0x0, V564, V565, V135, V629, V673, V730, V732, V736, 0x1, V730]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S9, S9, S8, S7]
Exit stack: [V12, 0x1a5, V135, V138, V140, V142, V144, V564, V564, V565, V135]

================================

Block 0x83f
[0x83f:0x84a]
---
Predecessors: [0x7b9]
Successors: [0x1a5]
---
0x83f JUMPDEST
0x840 POP
0x841 POP
0x842 POP
0x843 SWAP6
0x844 SWAP5
0x845 POP
0x846 POP
0x847 POP
0x848 POP
0x849 POP
0x84a JUMP
---
0x83f: JUMPDEST 
0x84a: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5, V135, V138, V140, V142, V144, V564, V564, V565, V135]
Stack pops: 10
Stack additions: [S3]
Exit stack: [V12, V564]

================================

Block 0x84b
[0x84b:0x85b]
---
Predecessors: [0x1c2]
Successors: [0x85c]
---
0x84b JUMPDEST
0x84c PUSH1 0x0
0x84e DUP2
0x84f DUP2
0x850 MSTORE
0x851 PUSH1 0x1
0x853 PUSH1 0x20
0x855 MSTORE
0x856 PUSH1 0x40
0x858 SWAP1
0x859 SHA3
0x85a PUSH1 0x2
---
0x84b: JUMPDEST 
0x84c: V781 = 0x0
0x850: M[0x0] = V159
0x851: V782 = 0x1
0x853: V783 = 0x20
0x855: M[0x20] = 0x1
0x856: V784 = 0x40
0x859: V785 = SHA3 0x0 0x40
0x85a: V786 = 0x2
---
Entry stack: [V12, 0x15a, V159]
Stack pops: 1
Stack additions: [S0, V785, 0x2]
Exit stack: [V12, 0x15a, V159, V785, 0x2]

================================

Block 0x85c
[0x85c:0x86d]
---
Predecessors: [0x84b]
Successors: [0x86e, 0x86f]
---
0x85c JUMPDEST
0x85d PUSH1 0x5
0x85f DUP3
0x860 ADD
0x861 SLOAD
0x862 PUSH1 0xff
0x864 AND
0x865 PUSH1 0x2
0x867 DUP2
0x868 GT
0x869 ISZERO
0x86a PUSH2 0x86f
0x86d JUMPI
---
0x85c: JUMPDEST 
0x85d: V787 = 0x5
0x860: V788 = ADD V785 0x5
0x861: V789 = S[V788]
0x862: V790 = 0xff
0x864: V791 = AND 0xff V789
0x865: V792 = 0x2
0x868: V793 = GT V791 0x2
0x869: V794 = ISZERO V793
0x86a: V795 = 0x86f
0x86d: JUMPI 0x86f V794
---
Entry stack: [V12, 0x15a, V159, V785, 0x2]
Stack pops: 2
Stack additions: [S1, S0, V791]
Exit stack: [V12, 0x15a, V159, V785, 0x2, V791]

================================

Block 0x86e
[0x86e:0x86e]
---
Predecessors: [0x85c]
Successors: []
---
0x86e INVALID
---
0x86e: INVALID 
---
Entry stack: [V12, 0x15a, V159, V785, 0x2, V791]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V159, V785, 0x2, V791]

================================

Block 0x86f
[0x86f:0x876]
---
Predecessors: [0x85c]
Successors: [0x877, 0x8bc]
---
0x86f JUMPDEST
0x870 EQ
0x871 DUP1
0x872 ISZERO
0x873 PUSH2 0x8bc
0x876 JUMPI
---
0x86f: JUMPDEST 
0x870: V796 = EQ V791 0x2
0x872: V797 = ISZERO V796
0x873: V798 = 0x8bc
0x876: JUMPI 0x8bc V797
---
Entry stack: [V12, 0x15a, V159, V785, 0x2, V791]
Stack pops: 2
Stack additions: [V796]
Exit stack: [V12, 0x15a, V159, V785, V796]

================================

Block 0x877
[0x877:0x88e]
---
Predecessors: [0x86f]
Successors: [0x88f, 0x8a1]
---
0x877 POP
0x878 PUSH1 0x0
0x87a SLOAD
0x87b CALLER
0x87c PUSH1 0x1
0x87e PUSH1 0xa0
0x880 PUSH1 0x2
0x882 EXP
0x883 SUB
0x884 SWAP1
0x885 DUP2
0x886 AND
0x887 SWAP2
0x888 AND
0x889 EQ
0x88a DUP1
0x88b PUSH2 0x8a1
0x88e JUMPI
---
0x878: V799 = 0x0
0x87a: V800 = S[0x0]
0x87b: V801 = CALLER
0x87c: V802 = 0x1
0x87e: V803 = 0xa0
0x880: V804 = 0x2
0x882: V805 = EXP 0x2 0xa0
0x883: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x886: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0x888: V808 = AND V800 0xffffffffffffffffffffffffffffffffffffffff
0x889: V809 = EQ V808 V807
0x88b: V810 = 0x8a1
0x88e: JUMPI 0x8a1 V809
---
Entry stack: [V12, 0x15a, V159, V785, V796]
Stack pops: 1
Stack additions: [V809]
Exit stack: [V12, 0x15a, V159, V785, V809]

================================

Block 0x88f
[0x88f:0x8a0]
---
Predecessors: [0x877]
Successors: [0x8a1]
---
0x88f POP
0x890 DUP1
0x891 SLOAD
0x892 CALLER
0x893 PUSH1 0x1
0x895 PUSH1 0xa0
0x897 PUSH1 0x2
0x899 EXP
0x89a SUB
0x89b SWAP1
0x89c DUP2
0x89d AND
0x89e SWAP2
0x89f AND
0x8a0 EQ
---
0x891: V811 = S[V785]
0x892: V812 = CALLER
0x893: V813 = 0x1
0x895: V814 = 0xa0
0x897: V815 = 0x2
0x899: V816 = EXP 0x2 0xa0
0x89a: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89d: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x89f: V819 = AND V811 0xffffffffffffffffffffffffffffffffffffffff
0x8a0: V820 = EQ V819 V818
---
Entry stack: [V12, 0x15a, V159, V785, V809]
Stack pops: 2
Stack additions: [S1, V820]
Exit stack: [V12, 0x15a, V159, V785, V820]

================================

Block 0x8a1
[0x8a1:0x8a6]
---
Predecessors: [0x877, 0x88f]
Successors: [0x8a7, 0x8bc]
---
0x8a1 JUMPDEST
0x8a2 DUP1
0x8a3 PUSH2 0x8bc
0x8a6 JUMPI
---
0x8a1: JUMPDEST 
0x8a3: V821 = 0x8bc
0x8a6: JUMPI 0x8bc S0
---
Entry stack: [V12, 0x15a, V159, V785, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V159, V785, S0]

================================

Block 0x8a7
[0x8a7:0x8bb]
---
Predecessors: [0x8a1]
Successors: [0x8bc]
---
0x8a7 POP
0x8a8 PUSH1 0x1
0x8aa DUP2
0x8ab ADD
0x8ac SLOAD
0x8ad CALLER
0x8ae PUSH1 0x1
0x8b0 PUSH1 0xa0
0x8b2 PUSH1 0x2
0x8b4 EXP
0x8b5 SUB
0x8b6 SWAP1
0x8b7 DUP2
0x8b8 AND
0x8b9 SWAP2
0x8ba AND
0x8bb EQ
---
0x8a8: V822 = 0x1
0x8ab: V823 = ADD V785 0x1
0x8ac: V824 = S[V823]
0x8ad: V825 = CALLER
0x8ae: V826 = 0x1
0x8b0: V827 = 0xa0
0x8b2: V828 = 0x2
0x8b4: V829 = EXP 0x2 0xa0
0x8b5: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b8: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V825
0x8ba: V832 = AND V824 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: V833 = EQ V832 V831
---
Entry stack: [V12, 0x15a, V159, V785, S0]
Stack pops: 2
Stack additions: [S1, V833]
Exit stack: [V12, 0x15a, V159, V785, V833]

================================

Block 0x8bc
[0x8bc:0x8bc]
---
Predecessors: [0x86f, 0x8a1, 0x8a7]
Successors: [0x8bd]
---
0x8bc JUMPDEST
---
0x8bc: JUMPDEST 
---
Entry stack: [V12, 0x15a, V159, V785, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V159, V785, S0]

================================

Block 0x8bd
[0x8bd:0x8c2]
---
Predecessors: [0x8bc]
Successors: [0x8c3, 0x972]
---
0x8bd JUMPDEST
0x8be ISZERO
0x8bf PUSH2 0x972
0x8c2 JUMPI
---
0x8bd: JUMPDEST 
0x8be: V834 = ISZERO S0
0x8bf: V835 = 0x972
0x8c2: JUMPI 0x972 V834
---
Entry stack: [V12, 0x15a, V159, V785, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V159, V785]

================================

Block 0x8c3
[0x8c3:0x8cf]
---
Predecessors: [0x8bd]
Successors: [0x8d0, 0x909]
---
0x8c3 PUSH1 0x0
0x8c5 DUP2
0x8c6 PUSH1 0x3
0x8c8 ADD
0x8c9 SLOAD
0x8ca GT
0x8cb ISZERO
0x8cc PUSH2 0x909
0x8cf JUMPI
---
0x8c3: V836 = 0x0
0x8c6: V837 = 0x3
0x8c8: V838 = ADD 0x3 V785
0x8c9: V839 = S[V838]
0x8ca: V840 = GT V839 0x0
0x8cb: V841 = ISZERO V840
0x8cc: V842 = 0x909
0x8cf: JUMPI 0x909 V841
---
Entry stack: [V12, 0x15a, V159, V785]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V159, V785]

================================

Block 0x8d0
[0x8d0:0x904]
---
Predecessors: [0x8c3]
Successors: [0x905, 0x909]
---
0x8d0 DUP1
0x8d1 SLOAD
0x8d2 PUSH1 0x3
0x8d4 DUP3
0x8d5 ADD
0x8d6 SLOAD
0x8d7 PUSH1 0x1
0x8d9 PUSH1 0xa0
0x8db PUSH1 0x2
0x8dd EXP
0x8de SUB
0x8df SWAP1
0x8e0 SWAP2
0x8e1 AND
0x8e2 SWAP1
0x8e3 DUP1
0x8e4 ISZERO
0x8e5 PUSH2 0x8fc
0x8e8 MUL
0x8e9 SWAP1
0x8ea PUSH1 0x40
0x8ec MLOAD
0x8ed PUSH1 0x0
0x8ef PUSH1 0x40
0x8f1 MLOAD
0x8f2 DUP1
0x8f3 DUP4
0x8f4 SUB
0x8f5 DUP2
0x8f6 DUP6
0x8f7 DUP9
0x8f8 DUP9
0x8f9 CALL
0x8fa SWAP4
0x8fb POP
0x8fc POP
0x8fd POP
0x8fe POP
0x8ff ISZERO
0x900 ISZERO
0x901 PUSH2 0x909
0x904 JUMPI
---
0x8d1: V843 = S[V785]
0x8d2: V844 = 0x3
0x8d5: V845 = ADD V785 0x3
0x8d6: V846 = S[V845]
0x8d7: V847 = 0x1
0x8d9: V848 = 0xa0
0x8db: V849 = 0x2
0x8dd: V850 = EXP 0x2 0xa0
0x8de: V851 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e1: V852 = AND V843 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V853 = ISZERO V846
0x8e5: V854 = 0x8fc
0x8e8: V855 = MUL 0x8fc V853
0x8ea: V856 = 0x40
0x8ec: V857 = M[0x40]
0x8ed: V858 = 0x0
0x8ef: V859 = 0x40
0x8f1: V860 = M[0x40]
0x8f4: V861 = SUB V857 V860
0x8f9: V862 = CALL V855 V852 V846 V860 V861 V860 0x0
0x8ff: V863 = ISZERO V862
0x900: V864 = ISZERO V863
0x901: V865 = 0x909
0x904: JUMPI 0x909 V864
---
Entry stack: [V12, 0x15a, V159, V785]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V159, V785]

================================

Block 0x905
[0x905:0x908]
---
Predecessors: [0x8d0]
Successors: []
---
0x905 PUSH1 0x0
0x907 DUP1
0x908 REVERT
---
0x905: V866 = 0x0
0x908: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V159, V785]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V159, V785]

================================

Block 0x909
[0x909:0x909]
---
Predecessors: [0x8c3, 0x8d0]
Successors: [0x90a]
---
0x909 JUMPDEST
---
0x909: JUMPDEST 
---
Entry stack: [V12, 0x15a, V159, V785]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V159, V785]

================================

Block 0x90a
[0x90a:0x971]
---
Predecessors: [0x909]
Successors: [0x972]
---
0x90a JUMPDEST
0x90b PUSH1 0x0
0x90d DUP3
0x90e DUP2
0x90f MSTORE
0x910 PUSH1 0x1
0x912 PUSH1 0x20
0x914 DUP2
0x915 SWAP1
0x916 MSTORE
0x917 PUSH1 0x40
0x919 DUP3
0x91a SHA3
0x91b DUP1
0x91c SLOAD
0x91d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x932 NOT
0x933 SWAP1
0x934 DUP2
0x935 AND
0x936 DUP3
0x937 SSTORE
0x938 SWAP2
0x939 DUP2
0x93a ADD
0x93b DUP1
0x93c SLOAD
0x93d DUP4
0x93e AND
0x93f SWAP1
0x940 SSTORE
0x941 PUSH1 0x2
0x943 DUP2
0x944 ADD
0x945 DUP1
0x946 SLOAD
0x947 SWAP1
0x948 SWAP3
0x949 AND
0x94a SWAP1
0x94b SWAP2
0x94c SSTORE
0x94d PUSH1 0x3
0x94f DUP2
0x950 ADD
0x951 DUP3
0x952 SWAP1
0x953 SSTORE
0x954 PUSH1 0x4
0x956 DUP2
0x957 ADD
0x958 DUP3
0x959 SWAP1
0x95a SSTORE
0x95b PUSH1 0x5
0x95d DUP2
0x95e ADD
0x95f DUP1
0x960 SLOAD
0x961 PUSH1 0xff
0x963 NOT
0x964 AND
0x965 SWAP1
0x966 SSTORE
0x967 PUSH1 0x6
0x969 DUP2
0x96a ADD
0x96b DUP3
0x96c SWAP1
0x96d SSTORE
0x96e PUSH1 0x7
0x970 ADD
0x971 SSTORE
---
0x90a: JUMPDEST 
0x90b: V867 = 0x0
0x90f: M[0x0] = V159
0x910: V868 = 0x1
0x912: V869 = 0x20
0x916: M[0x20] = 0x1
0x917: V870 = 0x40
0x91a: V871 = SHA3 0x0 0x40
0x91c: V872 = S[V871]
0x91d: V873 = 0xffffffffffffffffffffffffffffffffffffffff
0x932: V874 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x935: V875 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V872
0x937: S[V871] = V875
0x93a: V876 = ADD V871 0x1
0x93c: V877 = S[V876]
0x93e: V878 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V877
0x940: S[V876] = V878
0x941: V879 = 0x2
0x944: V880 = ADD V871 0x2
0x946: V881 = S[V880]
0x949: V882 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V881
0x94c: S[V880] = V882
0x94d: V883 = 0x3
0x950: V884 = ADD V871 0x3
0x953: S[V884] = 0x0
0x954: V885 = 0x4
0x957: V886 = ADD V871 0x4
0x95a: S[V886] = 0x0
0x95b: V887 = 0x5
0x95e: V888 = ADD V871 0x5
0x960: V889 = S[V888]
0x961: V890 = 0xff
0x963: V891 = NOT 0xff
0x964: V892 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V889
0x966: S[V888] = V892
0x967: V893 = 0x6
0x96a: V894 = ADD V871 0x6
0x96d: S[V894] = 0x0
0x96e: V895 = 0x7
0x970: V896 = ADD 0x7 V871
0x971: S[V896] = 0x0
---
Entry stack: [V12, 0x15a, V159, V785]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x15a, V159, V785]

================================

Block 0x972
[0x972:0x972]
---
Predecessors: [0x8bd, 0x90a]
Successors: [0x973]
---
0x972 JUMPDEST
---
0x972: JUMPDEST 
---
Entry stack: [V12, 0x15a, V159, V785]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V159, V785]

================================

Block 0x973
[0x973:0x976]
---
Predecessors: [0x972]
Successors: [0x15a]
---
0x973 JUMPDEST
0x974 POP
0x975 POP
0x976 JUMP
---
0x973: JUMPDEST 
0x976: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V159, V785]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x977
[0x977:0x988]
---
Predecessors: [0x1da, 0xa2d]
Successors: [0x989]
---
0x977 JUMPDEST
0x978 PUSH1 0x0
0x97a DUP2
0x97b DUP2
0x97c MSTORE
0x97d PUSH1 0x1
0x97f PUSH1 0x20
0x981 DUP2
0x982 SWAP1
0x983 MSTORE
0x984 PUSH1 0x40
0x986 DUP3
0x987 SHA3
0x988 SWAP1
---
0x977: JUMPDEST 
0x978: V897 = 0x0
0x97c: M[0x0] = S0
0x97d: V898 = 0x1
0x97f: V899 = 0x20
0x983: M[0x20] = 0x1
0x984: V900 = 0x40
0x987: V901 = SHA3 0x0 0x40
---
Entry stack: [V12, 0x15a, S3, {0x1f1, 0xa37}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V901, 0x1]
Exit stack: [V12, 0x15a, S3, {0x1f1, 0xa37}, S1, S0, 0x0, V901, 0x1]

================================

Block 0x989
[0x989:0x99a]
---
Predecessors: [0x977]
Successors: [0x99b, 0x99c]
---
0x989 JUMPDEST
0x98a PUSH1 0x5
0x98c DUP3
0x98d ADD
0x98e SLOAD
0x98f PUSH1 0xff
0x991 AND
0x992 PUSH1 0x2
0x994 DUP2
0x995 GT
0x996 ISZERO
0x997 PUSH2 0x99c
0x99a JUMPI
---
0x989: JUMPDEST 
0x98a: V902 = 0x5
0x98d: V903 = ADD V901 0x5
0x98e: V904 = S[V903]
0x98f: V905 = 0xff
0x991: V906 = AND 0xff V904
0x992: V907 = 0x2
0x995: V908 = GT V906 0x2
0x996: V909 = ISZERO V908
0x997: V910 = 0x99c
0x99a: JUMPI 0x99c V909
---
Entry stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, 0x1]
Stack pops: 2
Stack additions: [S1, S0, V906]
Exit stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, 0x1, V906]

================================

Block 0x99b
[0x99b:0x99b]
---
Predecessors: [0x989]
Successors: []
---
0x99b INVALID
---
0x99b: INVALID 
---
Entry stack: [V12, 0x15a, S7, {0x1f1, 0xa37}, S5, S4, 0x0, V901, 0x1, V906]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S7, {0x1f1, 0xa37}, S5, S4, 0x0, V901, 0x1, V906]

================================

Block 0x99c
[0x99c:0x9a3]
---
Predecessors: [0x989]
Successors: [0x9a4, 0x9cc]
---
0x99c JUMPDEST
0x99d EQ
0x99e DUP1
0x99f ISZERO
0x9a0 PUSH2 0x9cc
0x9a3 JUMPI
---
0x99c: JUMPDEST 
0x99d: V911 = EQ V906 0x1
0x99f: V912 = ISZERO V911
0x9a0: V913 = 0x9cc
0x9a3: JUMPI 0x9cc V912
---
Entry stack: [V12, 0x15a, S7, {0x1f1, 0xa37}, S5, S4, 0x0, V901, 0x1, V906]
Stack pops: 2
Stack additions: [V911]
Exit stack: [V12, 0x15a, S7, {0x1f1, 0xa37}, S5, S4, 0x0, V901, V911]

================================

Block 0x9a4
[0x9a4:0x9b9]
---
Predecessors: [0x99c]
Successors: [0x9ba, 0x9cc]
---
0x9a4 POP
0x9a5 DUP1
0x9a6 SLOAD
0x9a7 PUSH1 0x1
0x9a9 PUSH1 0xa0
0x9ab PUSH1 0x2
0x9ad EXP
0x9ae SUB
0x9af DUP6
0x9b0 DUP2
0x9b1 AND
0x9b2 SWAP2
0x9b3 AND
0x9b4 EQ
0x9b5 DUP1
0x9b6 PUSH2 0x9cc
0x9b9 JUMPI
---
0x9a6: V914 = S[V901]
0x9a7: V915 = 0x1
0x9a9: V916 = 0xa0
0x9ab: V917 = 0x2
0x9ad: V918 = EXP 0x2 0xa0
0x9ae: V919 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b1: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x9b3: V921 = AND V914 0xffffffffffffffffffffffffffffffffffffffff
0x9b4: V922 = EQ V921 V920
0x9b6: V923 = 0x9cc
0x9b9: JUMPI 0x9cc V922
---
Entry stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, V911]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V922]
Exit stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, V922]

================================

Block 0x9ba
[0x9ba:0x9cb]
---
Predecessors: [0x9a4]
Successors: [0x9cc]
---
0x9ba POP
0x9bb PUSH1 0x0
0x9bd SLOAD
0x9be PUSH1 0x1
0x9c0 PUSH1 0xa0
0x9c2 PUSH1 0x2
0x9c4 EXP
0x9c5 SUB
0x9c6 DUP6
0x9c7 DUP2
0x9c8 AND
0x9c9 SWAP2
0x9ca AND
0x9cb EQ
---
0x9bb: V924 = 0x0
0x9bd: V925 = S[0x0]
0x9be: V926 = 0x1
0x9c0: V927 = 0xa0
0x9c2: V928 = 0x2
0x9c4: V929 = EXP 0x2 0xa0
0x9c5: V930 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c8: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x9ca: V932 = AND V925 0xffffffffffffffffffffffffffffffffffffffff
0x9cb: V933 = EQ V932 V931
---
Entry stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, V922]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V933]
Exit stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, V933]

================================

Block 0x9cc
[0x9cc:0x9cc]
---
Predecessors: [0x99c, 0x9a4, 0x9ba]
Successors: [0x9cd]
---
0x9cc JUMPDEST
---
0x9cc: JUMPDEST 
---
Entry stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, S0]

================================

Block 0x9cd
[0x9cd:0x9d3]
---
Predecessors: [0x9cc]
Successors: [0x9d4, 0x9dd]
---
0x9cd JUMPDEST
0x9ce DUP1
0x9cf ISZERO
0x9d0 PUSH2 0x9dd
0x9d3 JUMPI
---
0x9cd: JUMPDEST 
0x9cf: V934 = ISZERO S0
0x9d0: V935 = 0x9dd
0x9d3: JUMPI 0x9dd V934
---
Entry stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, S0]

================================

Block 0x9d4
[0x9d4:0x9dc]
---
Predecessors: [0x9cd]
Successors: [0x9dd]
---
0x9d4 POP
0x9d5 TIMESTAMP
0x9d6 DUP2
0x9d7 PUSH1 0x6
0x9d9 ADD
0x9da SLOAD
0x9db GT
0x9dc ISZERO
---
0x9d5: V936 = TIMESTAMP
0x9d7: V937 = 0x6
0x9d9: V938 = ADD 0x6 V901
0x9da: V939 = S[V938]
0x9db: V940 = GT V939 V936
0x9dc: V941 = ISZERO V940
---
Entry stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, S0]
Stack pops: 2
Stack additions: [S1, V941]
Exit stack: [V12, 0x15a, S6, {0x1f1, 0xa37}, S4, S3, 0x0, V901, V941]

================================

Block 0x9dd
[0x9dd:0x9df]
---
Predecessors: [0x9cd, 0x9d4, 0xa0a, 0x10d5]
Successors: [0x9e0]
---
0x9dd JUMPDEST
0x9de SWAP2
0x9df POP
---
0x9dd: JUMPDEST 
---
Entry stack: [V12, 0x15a, V119, S8, {0x0, 0x15a}, S6, {0x1f1, 0x49f, 0xa37}, S4, S3, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0x15a, V119, S8, {0x0, 0x15a}, S6, {0x1f1, 0x49f, 0xa37}, S4, S3, S0, S1]

================================

Block 0x9e0
[0x9e0:0x9e6]
---
Predecessors: [0x9dd]
Successors: [0x1f1, 0x49f, 0xa37, 0xe0f]
---
0x9e0 JUMPDEST
0x9e1 POP
0x9e2 SWAP3
0x9e3 SWAP2
0x9e4 POP
0x9e5 POP
0x9e6 JUMP
---
0x9e0: JUMPDEST 
0x9e6: JUMP {0x1f1, 0x49f, 0xa37}
---
Entry stack: [V12, 0x15a, V119, S7, {0x0, 0x15a}, S5, {0x1f1, 0x49f, 0xa37}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x15a, V119, S7, {0x0, 0x15a}, S5, S1]

================================

Block 0x9e7
[0x9e7:0x9f6]
---
Predecessors: [0x210, 0x38c, 0x492, 0xe03]
Successors: [0x9f7]
---
0x9e7 JUMPDEST
0x9e8 PUSH1 0x0
0x9ea DUP2
0x9eb DUP2
0x9ec MSTORE
0x9ed PUSH1 0x1
0x9ef PUSH1 0x20
0x9f1 MSTORE
0x9f2 PUSH1 0x40
0x9f4 DUP2
0x9f5 SHA3
0x9f6 DUP2
---
0x9e7: JUMPDEST 
0x9e8: V942 = 0x0
0x9ec: M[0x0] = S0
0x9ed: V943 = 0x1
0x9ef: V944 = 0x20
0x9f1: M[0x20] = 0x1
0x9f2: V945 = 0x40
0x9f5: V946 = SHA3 0x0 0x40
---
Entry stack: [V12, S7, S6, S5, S4, S3, {0x1f1, 0x49f, 0xe0f}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V946, 0x0]
Exit stack: [V12, S7, S6, S5, S4, S3, {0x1f1, 0x49f, 0xe0f}, S1, S0, 0x0, V946, 0x0]

================================

Block 0x9f7
[0x9f7:0xa08]
---
Predecessors: [0x9e7, 0x10af]
Successors: [0xa09, 0xa0a]
---
0x9f7 JUMPDEST
0x9f8 PUSH1 0x5
0x9fa DUP3
0x9fb ADD
0x9fc SLOAD
0x9fd PUSH1 0xff
0x9ff AND
0xa00 PUSH1 0x2
0xa02 DUP2
0xa03 GT
0xa04 ISZERO
0xa05 PUSH2 0xa0a
0xa08 JUMPI
---
0x9f7: JUMPDEST 
0x9f8: V947 = 0x5
0x9fb: V948 = ADD S1 0x5
0x9fc: V949 = S[V948]
0x9fd: V950 = 0xff
0x9ff: V951 = AND 0xff V949
0xa00: V952 = 0x2
0xa03: V953 = GT V951 0x2
0xa04: V954 = ISZERO V953
0xa05: V955 = 0xa0a
0xa08: JUMPI 0xa0a V954
---
Entry stack: [V12, S10, S9, S8, S7, S6, {0x1f1, 0x49f, 0xe0f}, S4, S3, 0x0, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V951]
Exit stack: [V12, S10, S9, S8, S7, S6, {0x1f1, 0x49f, 0xe0f}, S4, S3, 0x0, S1, 0x0, V951]

================================

Block 0xa09
[0xa09:0xa09]
---
Predecessors: [0x9f7]
Successors: []
---
0xa09 INVALID
---
0xa09: INVALID 
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S7, {0x1f1, 0x49f}, S5, S4, 0x0, S2, 0x0, V951]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, 0x0, S7, {0x1f1, 0x49f}, S5, S4, 0x0, S2, 0x0, V951]

================================

Block 0xa0a
[0xa0a:0xa11]
---
Predecessors: [0x9f7, 0x10c3]
Successors: [0x9dd, 0xa12]
---
0xa0a JUMPDEST
0xa0b EQ
0xa0c DUP1
0xa0d ISZERO
0xa0e PUSH2 0x9dd
0xa11 JUMPI
---
0xa0a: JUMPDEST 
0xa0b: V956 = EQ S0 S1
0xa0d: V957 = ISZERO V956
0xa0e: V958 = 0x9dd
0xa11: JUMPI 0x9dd V957
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S7, {0x1f1, 0x49f}, S5, S4, 0x0, S2, S1, S0]
Stack pops: 2
Stack additions: [V956]
Exit stack: [V12, 0x15a, V119, V121, 0x0, S7, {0x1f1, 0x49f}, S5, S4, 0x0, S2, V956]

================================

Block 0xa12
[0xa12:0xa22]
---
Predecessors: [0xa0a]
Successors: [0xa23]
---
0xa12 POP
0xa13 DUP1
0xa14 SLOAD
0xa15 PUSH1 0x1
0xa17 PUSH1 0xa0
0xa19 PUSH1 0x2
0xa1b EXP
0xa1c SUB
0xa1d DUP6
0xa1e DUP2
0xa1f AND
0xa20 SWAP2
0xa21 AND
0xa22 EQ
---
0xa14: V959 = S[S1]
0xa15: V960 = 0x1
0xa17: V961 = 0xa0
0xa19: V962 = 0x2
0xa1b: V963 = EXP 0x2 0xa0
0xa1c: V964 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1f: V965 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xa21: V966 = AND V959 0xffffffffffffffffffffffffffffffffffffffff
0xa22: V967 = EQ V966 V965
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S6, {0x1f1, 0x49f}, S4, S3, 0x0, S1, V956]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V967]
Exit stack: [V12, 0x15a, V119, V121, 0x0, S6, {0x1f1, 0x49f}, S4, S3, 0x0, S1, V967]

================================

Block 0xa23
[0xa23:0xa25]
---
Predecessors: [0xa12]
Successors: [0xa26]
---
0xa23 JUMPDEST
0xa24 SWAP2
0xa25 POP
---
0xa23: JUMPDEST 
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S6, {0x1f1, 0x49f}, S4, S3, 0x0, S1, V967]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0x15a, V119, V121, 0x0, S6, {0x1f1, 0x49f}, S4, S3, V967, S1]

================================

Block 0xa26
[0xa26:0xa2c]
---
Predecessors: [0xa23]
Successors: [0x1f1, 0x49f, 0xe0f]
---
0xa26 JUMPDEST
0xa27 POP
0xa28 SWAP3
0xa29 SWAP2
0xa2a POP
0xa2b POP
0xa2c JUMP
---
0xa26: JUMPDEST 
0xa2c: JUMP {0x1f1, 0x49f}
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S5, {0x1f1, 0x49f}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x15a, V119, V121, 0x0, S5, S1]

================================

Block 0xa2d
[0xa2d:0xa36]
---
Predecessors: [0x246]
Successors: [0x977]
---
0xa2d JUMPDEST
0xa2e PUSH2 0xa37
0xa31 CALLER
0xa32 DUP3
0xa33 PUSH2 0x977
0xa36 JUMP
---
0xa2d: JUMPDEST 
0xa2e: V968 = 0xa37
0xa31: V969 = CALLER
0xa33: V970 = 0x977
0xa36: JUMP 0x977
---
Entry stack: [V12, 0x15a, V217]
Stack pops: 1
Stack additions: [S0, 0xa37, V969, S0]
Exit stack: [V12, 0x15a, V217, 0xa37, V969, V217]

================================

Block 0xa37
[0xa37:0xa3d]
---
Predecessors: [0x9e0]
Successors: [0xa3e, 0xa42]
---
0xa37 JUMPDEST
0xa38 ISZERO
0xa39 ISZERO
0xa3a PUSH2 0xa42
0xa3d JUMPI
---
0xa37: JUMPDEST 
0xa38: V971 = ISZERO S0
0xa39: V972 = ISZERO V971
0xa3a: V973 = 0xa42
0xa3d: JUMPI 0xa42 V972
---
Entry stack: [V12, 0x15a, V119, S3, {0x0, 0x15a}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V119, S3, {0x0, 0x15a}, S1]

================================

Block 0xa3e
[0xa3e:0xa41]
---
Predecessors: [0xa37]
Successors: []
---
0xa3e PUSH1 0x0
0xa40 DUP1
0xa41 REVERT
---
0xa3e: V974 = 0x0
0xa41: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, 0x0, S0]

================================

Block 0xa42
[0xa42:0xa5e]
---
Predecessors: [0xa37]
Successors: [0xa63]
---
0xa42 JUMPDEST
0xa43 PUSH1 0x0
0xa45 DUP2
0xa46 DUP2
0xa47 MSTORE
0xa48 PUSH1 0x1
0xa4a PUSH1 0x20
0xa4c MSTORE
0xa4d PUSH1 0x40
0xa4f SWAP1
0xa50 SHA3
0xa51 PUSH1 0x7
0xa53 ADD
0xa54 SLOAD
0xa55 PUSH2 0xa5f
0xa58 SWAP1
0xa59 DUP3
0xa5a SWAP1
0xa5b PUSH2 0xa63
0xa5e JUMP
---
0xa42: JUMPDEST 
0xa43: V975 = 0x0
0xa47: M[0x0] = S0
0xa48: V976 = 0x1
0xa4a: V977 = 0x20
0xa4c: M[0x20] = 0x1
0xa4d: V978 = 0x40
0xa50: V979 = SHA3 0x0 0x40
0xa51: V980 = 0x7
0xa53: V981 = ADD 0x7 V979
0xa54: V982 = S[V981]
0xa55: V983 = 0xa5f
0xa5b: V984 = 0xa63
0xa5e: JUMP 0xa63
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S0]
Stack pops: 1
Stack additions: [S0, 0xa5f, S0, V982]
Exit stack: [V12, 0x15a, V119, V121, 0x0, S0, 0xa5f, S0, V982]

================================

Block 0xa5f
[0xa5f:0xa5f]
---
Predecessors: [0xcb3, 0x1144]
Successors: [0xa60]
---
0xa5f JUMPDEST
---
0xa5f: JUMPDEST 
---
Entry stack: [S4, S3, V12, 0x15a, V417]
Stack pops: 0
Stack additions: []
Exit stack: [S4, S3, V12, 0x15a, V417]

================================

Block 0xa60
[0xa60:0xa62]
---
Predecessors: [0xa5f]
Successors: [0x15a]
---
0xa60 JUMPDEST
0xa61 POP
0xa62 JUMP
---
0xa60: JUMPDEST 
0xa62: JUMP 0x15a
---
Entry stack: [S4, S3, V12, 0x15a, V417]
Stack pops: 2
Stack additions: []
Exit stack: [S4, S3, V12]

================================

Block 0xa63
[0xa63:0xa92]
---
Predecessors: [0x25e, 0x480, 0xa42]
Successors: [0xa93, 0xb2a]
---
0xa63 JUMPDEST
0xa64 PUSH1 0x0
0xa66 DUP3
0xa67 DUP2
0xa68 MSTORE
0xa69 PUSH1 0x1
0xa6b PUSH1 0x20
0xa6d MSTORE
0xa6e PUSH1 0x40
0xa70 DUP2
0xa71 SHA3
0xa72 PUSH1 0x2
0xa74 DUP2
0xa75 ADD
0xa76 SLOAD
0xa77 PUSH1 0x3
0xa79 DUP3
0xa7a ADD
0xa7b SLOAD
0xa7c SWAP2
0xa7d SWAP3
0xa7e DUP5
0xa7f SWAP3
0xa80 SWAP1
0xa81 SWAP2
0xa82 PUSH1 0x1
0xa84 PUSH1 0xa0
0xa86 PUSH1 0x2
0xa88 EXP
0xa89 SUB
0xa8a AND
0xa8b SWAP1
0xa8c DUP4
0xa8d GT
0xa8e ISZERO
0xa8f PUSH2 0xb2a
0xa92 JUMPI
---
0xa63: JUMPDEST 
0xa64: V985 = 0x0
0xa68: M[0x0] = S1
0xa69: V986 = 0x1
0xa6b: V987 = 0x20
0xa6d: M[0x20] = 0x1
0xa6e: V988 = 0x40
0xa71: V989 = SHA3 0x0 0x40
0xa72: V990 = 0x2
0xa75: V991 = ADD V989 0x2
0xa76: V992 = S[V991]
0xa77: V993 = 0x3
0xa7a: V994 = ADD V989 0x3
0xa7b: V995 = S[V994]
0xa82: V996 = 0x1
0xa84: V997 = 0xa0
0xa86: V998 = 0x2
0xa88: V999 = EXP 0x2 0xa0
0xa89: V1000 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8a: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0xa8d: V1002 = GT S0 V995
0xa8e: V1003 = ISZERO V1002
0xa8f: V1004 = 0xb2a
0xa92: JUMPI 0xb2a V1003
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x15a, 0x48a, 0xa5f}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V989, S0, 0x0, V1001]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x15a, 0x48a, 0xa5f}, S1, S0, V989, S0, 0x0, V1001]

================================

Block 0xa93
[0xa93:0xafa]
---
Predecessors: [0xa63]
Successors: [0xafb, 0xaff]
---
0xa93 PUSH1 0x3
0xa95 DUP5
0xa96 ADD
0xa97 SLOAD
0xa98 PUSH1 0x1
0xa9a DUP6
0xa9b ADD
0xa9c SLOAD
0xa9d SWAP1
0xa9e SWAP4
0xa9f POP
0xaa0 PUSH1 0x1
0xaa2 PUSH1 0xa0
0xaa4 PUSH1 0x2
0xaa6 EXP
0xaa7 SUB
0xaa8 DUP1
0xaa9 DUP4
0xaaa AND
0xaab SWAP2
0xaac PUSH4 0xa9059cbb
0xab1 SWAP2
0xab2 AND
0xab3 DUP6
0xab4 PUSH1 0x0
0xab6 PUSH1 0x40
0xab8 MLOAD
0xab9 PUSH1 0x20
0xabb ADD
0xabc MSTORE
0xabd PUSH1 0x40
0xabf MLOAD
0xac0 PUSH1 0xe0
0xac2 PUSH1 0x2
0xac4 EXP
0xac5 PUSH4 0xffffffff
0xaca DUP6
0xacb AND
0xacc MUL
0xacd DUP2
0xace MSTORE
0xacf PUSH1 0x1
0xad1 PUSH1 0xa0
0xad3 PUSH1 0x2
0xad5 EXP
0xad6 SUB
0xad7 SWAP1
0xad8 SWAP3
0xad9 AND
0xada PUSH1 0x4
0xadc DUP4
0xadd ADD
0xade MSTORE
0xadf PUSH1 0x24
0xae1 DUP3
0xae2 ADD
0xae3 MSTORE
0xae4 PUSH1 0x44
0xae6 ADD
0xae7 PUSH1 0x20
0xae9 PUSH1 0x40
0xaeb MLOAD
0xaec DUP1
0xaed DUP4
0xaee SUB
0xaef DUP2
0xaf0 PUSH1 0x0
0xaf2 DUP8
0xaf3 DUP1
0xaf4 EXTCODESIZE
0xaf5 ISZERO
0xaf6 ISZERO
0xaf7 PUSH2 0xaff
0xafa JUMPI
---
0xa93: V1005 = 0x3
0xa96: V1006 = ADD V989 0x3
0xa97: V1007 = S[V1006]
0xa98: V1008 = 0x1
0xa9b: V1009 = ADD V989 0x1
0xa9c: V1010 = S[V1009]
0xaa0: V1011 = 0x1
0xaa2: V1012 = 0xa0
0xaa4: V1013 = 0x2
0xaa6: V1014 = EXP 0x2 0xa0
0xaa7: V1015 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaaa: V1016 = AND V1001 0xffffffffffffffffffffffffffffffffffffffff
0xaac: V1017 = 0xa9059cbb
0xab2: V1018 = AND 0xffffffffffffffffffffffffffffffffffffffff V1010
0xab4: V1019 = 0x0
0xab6: V1020 = 0x40
0xab8: V1021 = M[0x40]
0xab9: V1022 = 0x20
0xabb: V1023 = ADD 0x20 V1021
0xabc: M[V1023] = 0x0
0xabd: V1024 = 0x40
0xabf: V1025 = M[0x40]
0xac0: V1026 = 0xe0
0xac2: V1027 = 0x2
0xac4: V1028 = EXP 0x2 0xe0
0xac5: V1029 = 0xffffffff
0xacb: V1030 = AND 0xa9059cbb 0xffffffff
0xacc: V1031 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xace: M[V1025] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xacf: V1032 = 0x1
0xad1: V1033 = 0xa0
0xad3: V1034 = 0x2
0xad5: V1035 = EXP 0x2 0xa0
0xad6: V1036 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad9: V1037 = AND V1018 0xffffffffffffffffffffffffffffffffffffffff
0xada: V1038 = 0x4
0xadd: V1039 = ADD V1025 0x4
0xade: M[V1039] = V1037
0xadf: V1040 = 0x24
0xae2: V1041 = ADD V1025 0x24
0xae3: M[V1041] = V1007
0xae4: V1042 = 0x44
0xae6: V1043 = ADD 0x44 V1025
0xae7: V1044 = 0x20
0xae9: V1045 = 0x40
0xaeb: V1046 = M[0x40]
0xaee: V1047 = SUB V1043 V1046
0xaf0: V1048 = 0x0
0xaf4: V1049 = EXTCODESIZE V1016
0xaf5: V1050 = ISZERO V1049
0xaf6: V1051 = ISZERO V1050
0xaf7: V1052 = 0xaff
0xafa: JUMPI 0xaff V1051
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S7, {0x15a, 0x48a, 0xa5f}, S5, S4, V989, S2, 0x0, V1001]
Stack pops: 4
Stack additions: [S3, V1007, S1, S0, V1016, 0xa9059cbb, V1043, 0x20, V1046, V1047, V1046, 0x0, V1016]
Exit stack: [V12, 0x15a, V119, V121, 0x0, S7, {0x15a, 0x48a, 0xa5f}, S5, S4, V989, V1007, 0x0, V1001, V1016, 0xa9059cbb, V1043, 0x20, V1046, V1047, V1046, 0x0, V1016]

================================

Block 0xafb
[0xafb:0xafe]
---
Predecessors: [0xa93]
Successors: []
---
0xafb PUSH1 0x0
0xafd DUP1
0xafe REVERT
---
0xafb: V1053 = 0x0
0xafe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S16, {0x15a, 0x48a, 0xa5f}, S14, S13, S12, V1007, 0x0, S9, V1016, 0xa9059cbb, V1043, 0x20, V1046, V1047, V1046, 0x0, V1016]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, 0x0, S16, {0x15a, 0x48a, 0xa5f}, S14, S13, S12, V1007, 0x0, S9, V1016, 0xa9059cbb, V1043, 0x20, V1046, V1047, V1046, 0x0, V1016]

================================

Block 0xaff
[0xaff:0xb0b]
---
Predecessors: [0xa93]
Successors: [0xb0c, 0xb10]
---
0xaff JUMPDEST
0xb00 PUSH2 0x2c6
0xb03 GAS
0xb04 SUB
0xb05 CALL
0xb06 ISZERO
0xb07 ISZERO
0xb08 PUSH2 0xb10
0xb0b JUMPI
---
0xaff: JUMPDEST 
0xb00: V1054 = 0x2c6
0xb03: V1055 = GAS
0xb04: V1056 = SUB V1055 0x2c6
0xb05: V1057 = CALL V1056 V1016 0x0 V1046 V1047 V1046 0x20
0xb06: V1058 = ISZERO V1057
0xb07: V1059 = ISZERO V1058
0xb08: V1060 = 0xb10
0xb0b: JUMPI 0xb10 V1059
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S16, {0x15a, 0x48a, 0xa5f}, S14, S13, S12, V1007, 0x0, S9, V1016, 0xa9059cbb, V1043, 0x20, V1046, V1047, V1046, 0x0, V1016]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, 0x0, S16, {0x15a, 0x48a, 0xa5f}, S14, S13, S12, V1007, 0x0, S9, V1016, 0xa9059cbb, V1043]

================================

Block 0xb0c
[0xb0c:0xb0f]
---
Predecessors: [0xaff]
Successors: []
---
0xb0c PUSH1 0x0
0xb0e DUP1
0xb0f REVERT
---
0xb0c: V1061 = 0x0
0xb0f: REVERT 0x0 0x0
---
Entry stack: [S14, S13, S12, S11, V12, {0x15a, 0x48a, 0xa5f}, V225, S7, S6, S5, 0x0, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, S12, S11, V12, {0x15a, 0x48a, 0xa5f}, V225, S7, S6, S5, 0x0, S3, S2, 0xa9059cbb, S0]

================================

Block 0xb10
[0xb10:0xb20]
---
Predecessors: [0xaff]
Successors: [0xb21, 0xb25]
---
0xb10 JUMPDEST
0xb11 POP
0xb12 POP
0xb13 POP
0xb14 PUSH1 0x40
0xb16 MLOAD
0xb17 DUP1
0xb18 MLOAD
0xb19 SWAP1
0xb1a POP
0xb1b ISZERO
0xb1c ISZERO
0xb1d PUSH2 0xb25
0xb20 JUMPI
---
0xb10: JUMPDEST 
0xb14: V1062 = 0x40
0xb16: V1063 = M[0x40]
0xb18: V1064 = M[V1063]
0xb1b: V1065 = ISZERO V1064
0xb1c: V1066 = ISZERO V1065
0xb1d: V1067 = 0xb25
0xb20: JUMPI 0xb25 V1066
---
Entry stack: [S14, S13, S12, S11, V12, {0x15a, 0x48a, 0xa5f}, V225, S7, S6, S5, 0x0, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S14, S13, S12, S11, V12, {0x15a, 0x48a, 0xa5f}, V225, S7, S6, S5, 0x0, S3]

================================

Block 0xb21
[0xb21:0xb24]
---
Predecessors: [0xb10]
Successors: []
---
0xb21 PUSH1 0x0
0xb23 DUP1
0xb24 REVERT
---
0xb21: V1068 = 0x0
0xb24: REVERT 0x0 0x0
---
Entry stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, 0x0, S0]

================================

Block 0xb25
[0xb25:0xb29]
---
Predecessors: [0xb10]
Successors: [0xc50]
---
0xb25 JUMPDEST
0xb26 PUSH2 0xc50
0xb29 JUMP
---
0xb25: JUMPDEST 
0xb26: V1069 = 0xc50
0xb29: JUMP 0xc50
---
Entry stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, 0x0, S0]

================================

Block 0xb2a
[0xb2a:0xb8a]
---
Predecessors: [0xa63]
Successors: [0xb8b, 0xb8f]
---
0xb2a JUMPDEST
0xb2b PUSH1 0x1
0xb2d DUP5
0xb2e ADD
0xb2f SLOAD
0xb30 PUSH1 0x1
0xb32 PUSH1 0xa0
0xb34 PUSH1 0x2
0xb36 EXP
0xb37 SUB
0xb38 DUP1
0xb39 DUP4
0xb3a AND
0xb3b SWAP2
0xb3c PUSH4 0xa9059cbb
0xb41 SWAP2
0xb42 AND
0xb43 DUP6
0xb44 PUSH1 0x0
0xb46 PUSH1 0x40
0xb48 MLOAD
0xb49 PUSH1 0x20
0xb4b ADD
0xb4c MSTORE
0xb4d PUSH1 0x40
0xb4f MLOAD
0xb50 PUSH1 0xe0
0xb52 PUSH1 0x2
0xb54 EXP
0xb55 PUSH4 0xffffffff
0xb5a DUP6
0xb5b AND
0xb5c MUL
0xb5d DUP2
0xb5e MSTORE
0xb5f PUSH1 0x1
0xb61 PUSH1 0xa0
0xb63 PUSH1 0x2
0xb65 EXP
0xb66 SUB
0xb67 SWAP1
0xb68 SWAP3
0xb69 AND
0xb6a PUSH1 0x4
0xb6c DUP4
0xb6d ADD
0xb6e MSTORE
0xb6f PUSH1 0x24
0xb71 DUP3
0xb72 ADD
0xb73 MSTORE
0xb74 PUSH1 0x44
0xb76 ADD
0xb77 PUSH1 0x20
0xb79 PUSH1 0x40
0xb7b MLOAD
0xb7c DUP1
0xb7d DUP4
0xb7e SUB
0xb7f DUP2
0xb80 PUSH1 0x0
0xb82 DUP8
0xb83 DUP1
0xb84 EXTCODESIZE
0xb85 ISZERO
0xb86 ISZERO
0xb87 PUSH2 0xb8f
0xb8a JUMPI
---
0xb2a: JUMPDEST 
0xb2b: V1070 = 0x1
0xb2e: V1071 = ADD V989 0x1
0xb2f: V1072 = S[V1071]
0xb30: V1073 = 0x1
0xb32: V1074 = 0xa0
0xb34: V1075 = 0x2
0xb36: V1076 = EXP 0x2 0xa0
0xb37: V1077 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3a: V1078 = AND V1001 0xffffffffffffffffffffffffffffffffffffffff
0xb3c: V1079 = 0xa9059cbb
0xb42: V1080 = AND 0xffffffffffffffffffffffffffffffffffffffff V1072
0xb44: V1081 = 0x0
0xb46: V1082 = 0x40
0xb48: V1083 = M[0x40]
0xb49: V1084 = 0x20
0xb4b: V1085 = ADD 0x20 V1083
0xb4c: M[V1085] = 0x0
0xb4d: V1086 = 0x40
0xb4f: V1087 = M[0x40]
0xb50: V1088 = 0xe0
0xb52: V1089 = 0x2
0xb54: V1090 = EXP 0x2 0xe0
0xb55: V1091 = 0xffffffff
0xb5b: V1092 = AND 0xa9059cbb 0xffffffff
0xb5c: V1093 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb5e: M[V1087] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb5f: V1094 = 0x1
0xb61: V1095 = 0xa0
0xb63: V1096 = 0x2
0xb65: V1097 = EXP 0x2 0xa0
0xb66: V1098 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb69: V1099 = AND V1080 0xffffffffffffffffffffffffffffffffffffffff
0xb6a: V1100 = 0x4
0xb6d: V1101 = ADD V1087 0x4
0xb6e: M[V1101] = V1099
0xb6f: V1102 = 0x24
0xb72: V1103 = ADD V1087 0x24
0xb73: M[V1103] = S2
0xb74: V1104 = 0x44
0xb76: V1105 = ADD 0x44 V1087
0xb77: V1106 = 0x20
0xb79: V1107 = 0x40
0xb7b: V1108 = M[0x40]
0xb7e: V1109 = SUB V1105 V1108
0xb80: V1110 = 0x0
0xb84: V1111 = EXTCODESIZE V1078
0xb85: V1112 = ISZERO V1111
0xb86: V1113 = ISZERO V1112
0xb87: V1114 = 0xb8f
0xb8a: JUMPI 0xb8f V1113
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, {0x15a, 0x48a, 0xa5f}, S5, S4, V989, S2, 0x0, V1001]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V1078, 0xa9059cbb, V1105, 0x20, V1108, V1109, V1108, 0x0, V1078]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, {0x15a, 0x48a, 0xa5f}, S5, S4, V989, S2, 0x0, V1001, V1078, 0xa9059cbb, V1105, 0x20, V1108, V1109, V1108, 0x0, V1078]

================================

Block 0xb8b
[0xb8b:0xb8e]
---
Predecessors: [0xb2a]
Successors: []
---
0xb8b PUSH1 0x0
0xb8d DUP1
0xb8e REVERT
---
0xb8b: V1115 = 0x0
0xb8e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S16, {0x15a, 0x48a, 0xa5f}, S14, S13, V989, S11, 0x0, V1001, V1078, 0xa9059cbb, V1105, 0x20, V1108, V1109, V1108, 0x0, V1078]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, 0x0, S16, {0x15a, 0x48a, 0xa5f}, S14, S13, V989, S11, 0x0, V1001, V1078, 0xa9059cbb, V1105, 0x20, V1108, V1109, V1108, 0x0, V1078]

================================

Block 0xb8f
[0xb8f:0xb9b]
---
Predecessors: [0xb2a]
Successors: [0xb9c, 0xba0]
---
0xb8f JUMPDEST
0xb90 PUSH2 0x2c6
0xb93 GAS
0xb94 SUB
0xb95 CALL
0xb96 ISZERO
0xb97 ISZERO
0xb98 PUSH2 0xba0
0xb9b JUMPI
---
0xb8f: JUMPDEST 
0xb90: V1116 = 0x2c6
0xb93: V1117 = GAS
0xb94: V1118 = SUB V1117 0x2c6
0xb95: V1119 = CALL V1118 V1078 0x0 V1108 V1109 V1108 0x20
0xb96: V1120 = ISZERO V1119
0xb97: V1121 = ISZERO V1120
0xb98: V1122 = 0xba0
0xb9b: JUMPI 0xba0 V1121
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S16, {0x15a, 0x48a, 0xa5f}, S14, S13, V989, S11, 0x0, V1001, V1078, 0xa9059cbb, V1105, 0x20, V1108, V1109, V1108, 0x0, V1078]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, 0x0, S16, {0x15a, 0x48a, 0xa5f}, S14, S13, V989, S11, 0x0, V1001, V1078, 0xa9059cbb, V1105]

================================

Block 0xb9c
[0xb9c:0xb9f]
---
Predecessors: [0xb8f]
Successors: []
---
0xb9c PUSH1 0x0
0xb9e DUP1
0xb9f REVERT
---
0xb9c: V1123 = 0x0
0xb9f: REVERT 0x0 0x0
---
Entry stack: [S14, S13, S12, S11, V12, {0x15a, 0x48a, 0xa5f}, V225, S7, S6, S5, 0x0, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, S12, S11, V12, {0x15a, 0x48a, 0xa5f}, V225, S7, S6, S5, 0x0, S3, S2, 0xa9059cbb, S0]

================================

Block 0xba0
[0xba0:0xbb0]
---
Predecessors: [0xb8f]
Successors: [0xbb1, 0xbb5]
---
0xba0 JUMPDEST
0xba1 POP
0xba2 POP
0xba3 POP
0xba4 PUSH1 0x40
0xba6 MLOAD
0xba7 DUP1
0xba8 MLOAD
0xba9 SWAP1
0xbaa POP
0xbab ISZERO
0xbac ISZERO
0xbad PUSH2 0xbb5
0xbb0 JUMPI
---
0xba0: JUMPDEST 
0xba4: V1124 = 0x40
0xba6: V1125 = M[0x40]
0xba8: V1126 = M[V1125]
0xbab: V1127 = ISZERO V1126
0xbac: V1128 = ISZERO V1127
0xbad: V1129 = 0xbb5
0xbb0: JUMPI 0xbb5 V1128
---
Entry stack: [S14, S13, S12, S11, V12, {0x15a, 0x48a, 0xa5f}, V225, S7, S6, S5, 0x0, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S14, S13, S12, S11, V12, {0x15a, 0x48a, 0xa5f}, V225, S7, S6, S5, 0x0, S3]

================================

Block 0xbb1
[0xbb1:0xbb4]
---
Predecessors: [0xba0]
Successors: []
---
0xbb1 PUSH1 0x0
0xbb3 DUP1
0xbb4 REVERT
---
0xbb1: V1130 = 0x0
0xbb4: REVERT 0x0 0x0
---
Entry stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, 0x0, S0]

================================

Block 0xbb5
[0xbb5:0xc1d]
---
Predecessors: [0xba0]
Successors: [0xc1e, 0xc22]
---
0xbb5 JUMPDEST
0xbb6 PUSH1 0x3
0xbb8 DUP5
0xbb9 ADD
0xbba SLOAD
0xbbb DUP5
0xbbc SLOAD
0xbbd SWAP1
0xbbe DUP5
0xbbf SWAP1
0xbc0 SUB
0xbc1 SWAP3
0xbc2 POP
0xbc3 PUSH1 0x1
0xbc5 PUSH1 0xa0
0xbc7 PUSH1 0x2
0xbc9 EXP
0xbca SUB
0xbcb DUP1
0xbcc DUP4
0xbcd AND
0xbce SWAP2
0xbcf PUSH4 0xa9059cbb
0xbd4 SWAP2
0xbd5 AND
0xbd6 DUP5
0xbd7 PUSH1 0x0
0xbd9 PUSH1 0x40
0xbdb MLOAD
0xbdc PUSH1 0x20
0xbde ADD
0xbdf MSTORE
0xbe0 PUSH1 0x40
0xbe2 MLOAD
0xbe3 PUSH1 0xe0
0xbe5 PUSH1 0x2
0xbe7 EXP
0xbe8 PUSH4 0xffffffff
0xbed DUP6
0xbee AND
0xbef MUL
0xbf0 DUP2
0xbf1 MSTORE
0xbf2 PUSH1 0x1
0xbf4 PUSH1 0xa0
0xbf6 PUSH1 0x2
0xbf8 EXP
0xbf9 SUB
0xbfa SWAP1
0xbfb SWAP3
0xbfc AND
0xbfd PUSH1 0x4
0xbff DUP4
0xc00 ADD
0xc01 MSTORE
0xc02 PUSH1 0x24
0xc04 DUP3
0xc05 ADD
0xc06 MSTORE
0xc07 PUSH1 0x44
0xc09 ADD
0xc0a PUSH1 0x20
0xc0c PUSH1 0x40
0xc0e MLOAD
0xc0f DUP1
0xc10 DUP4
0xc11 SUB
0xc12 DUP2
0xc13 PUSH1 0x0
0xc15 DUP8
0xc16 DUP1
0xc17 EXTCODESIZE
0xc18 ISZERO
0xc19 ISZERO
0xc1a PUSH2 0xc22
0xc1d JUMPI
---
0xbb5: JUMPDEST 
0xbb6: V1131 = 0x3
0xbb9: V1132 = ADD S3 0x3
0xbba: V1133 = S[V1132]
0xbbc: V1134 = S[S3]
0xbc0: V1135 = SUB V1133 S2
0xbc3: V1136 = 0x1
0xbc5: V1137 = 0xa0
0xbc7: V1138 = 0x2
0xbc9: V1139 = EXP 0x2 0xa0
0xbca: V1140 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbcd: V1141 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xbcf: V1142 = 0xa9059cbb
0xbd5: V1143 = AND 0xffffffffffffffffffffffffffffffffffffffff V1134
0xbd7: V1144 = 0x0
0xbd9: V1145 = 0x40
0xbdb: V1146 = M[0x40]
0xbdc: V1147 = 0x20
0xbde: V1148 = ADD 0x20 V1146
0xbdf: M[V1148] = 0x0
0xbe0: V1149 = 0x40
0xbe2: V1150 = M[0x40]
0xbe3: V1151 = 0xe0
0xbe5: V1152 = 0x2
0xbe7: V1153 = EXP 0x2 0xe0
0xbe8: V1154 = 0xffffffff
0xbee: V1155 = AND 0xa9059cbb 0xffffffff
0xbef: V1156 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xbf1: M[V1150] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbf2: V1157 = 0x1
0xbf4: V1158 = 0xa0
0xbf6: V1159 = 0x2
0xbf8: V1160 = EXP 0x2 0xa0
0xbf9: V1161 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbfc: V1162 = AND V1143 0xffffffffffffffffffffffffffffffffffffffff
0xbfd: V1163 = 0x4
0xc00: V1164 = ADD V1150 0x4
0xc01: M[V1164] = V1162
0xc02: V1165 = 0x24
0xc05: V1166 = ADD V1150 0x24
0xc06: M[V1166] = V1135
0xc07: V1167 = 0x44
0xc09: V1168 = ADD 0x44 V1150
0xc0a: V1169 = 0x20
0xc0c: V1170 = 0x40
0xc0e: V1171 = M[0x40]
0xc11: V1172 = SUB V1168 V1171
0xc13: V1173 = 0x0
0xc17: V1174 = EXTCODESIZE V1141
0xc18: V1175 = ISZERO V1174
0xc19: V1176 = ISZERO V1175
0xc1a: V1177 = 0xc22
0xc1d: JUMPI 0xc22 V1176
---
Entry stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, V1135, S0, V1141, 0xa9059cbb, V1168, 0x20, V1171, V1172, V1171, 0x0, V1141]
Exit stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, V1135, S0, V1141, 0xa9059cbb, V1168, 0x20, V1171, V1172, V1171, 0x0, V1141]

================================

Block 0xc1e
[0xc1e:0xc21]
---
Predecessors: [0xbb5]
Successors: []
---
0xc1e PUSH1 0x0
0xc20 DUP1
0xc21 REVERT
---
0xc1e: V1178 = 0x0
0xc21: REVERT 0x0 0x0
---
Entry stack: [S20, S19, S18, S17, V12, {0x15a, 0x48a, 0xa5f}, V225, S13, S12, S11, V1135, S9, V1141, 0xa9059cbb, V1168, 0x20, V1171, V1172, V1171, 0x0, V1141]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, V12, {0x15a, 0x48a, 0xa5f}, V225, S13, S12, S11, V1135, S9, V1141, 0xa9059cbb, V1168, 0x20, V1171, V1172, V1171, 0x0, V1141]

================================

Block 0xc22
[0xc22:0xc2e]
---
Predecessors: [0xbb5]
Successors: [0xc2f, 0xc33]
---
0xc22 JUMPDEST
0xc23 PUSH2 0x2c6
0xc26 GAS
0xc27 SUB
0xc28 CALL
0xc29 ISZERO
0xc2a ISZERO
0xc2b PUSH2 0xc33
0xc2e JUMPI
---
0xc22: JUMPDEST 
0xc23: V1179 = 0x2c6
0xc26: V1180 = GAS
0xc27: V1181 = SUB V1180 0x2c6
0xc28: V1182 = CALL V1181 V1141 0x0 V1171 V1172 V1171 0x20
0xc29: V1183 = ISZERO V1182
0xc2a: V1184 = ISZERO V1183
0xc2b: V1185 = 0xc33
0xc2e: JUMPI 0xc33 V1184
---
Entry stack: [S20, S19, S18, S17, V12, {0x15a, 0x48a, 0xa5f}, V225, S13, S12, S11, V1135, S9, V1141, 0xa9059cbb, V1168, 0x20, V1171, V1172, V1171, 0x0, V1141]
Stack pops: 6
Stack additions: []
Exit stack: [S20, S19, S18, S17, V12, {0x15a, 0x48a, 0xa5f}, V225, S13, S12, S11, V1135, S9, V1141, 0xa9059cbb, V1168]

================================

Block 0xc2f
[0xc2f:0xc32]
---
Predecessors: [0xc22]
Successors: []
---
0xc2f PUSH1 0x0
0xc31 DUP1
0xc32 REVERT
---
0xc2f: V1186 = 0x0
0xc32: REVERT 0x0 0x0
---
Entry stack: [S14, S13, S12, S11, S10, {0x48a, 0xa5f}, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, {0x48a, 0xa5f}, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0xc33
[0xc33:0xc43]
---
Predecessors: [0xc22]
Successors: [0xc44, 0xc48]
---
0xc33 JUMPDEST
0xc34 POP
0xc35 POP
0xc36 POP
0xc37 PUSH1 0x40
0xc39 MLOAD
0xc3a DUP1
0xc3b MLOAD
0xc3c SWAP1
0xc3d POP
0xc3e ISZERO
0xc3f ISZERO
0xc40 PUSH2 0xc48
0xc43 JUMPI
---
0xc33: JUMPDEST 
0xc37: V1187 = 0x40
0xc39: V1188 = M[0x40]
0xc3b: V1189 = M[V1188]
0xc3e: V1190 = ISZERO V1189
0xc3f: V1191 = ISZERO V1190
0xc40: V1192 = 0xc48
0xc43: JUMPI 0xc48 V1191
---
Entry stack: [S14, S13, S12, S11, S10, {0x48a, 0xa5f}, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, {0x48a, 0xa5f}, S8, S7, S6, S5, S4, S3]

================================

Block 0xc44
[0xc44:0xc47]
---
Predecessors: [0xc33]
Successors: []
---
0xc44 PUSH1 0x0
0xc46 DUP1
0xc47 REVERT
---
0xc44: V1193 = 0x0
0xc47: REVERT 0x0 0x0
---
Entry stack: [S11, S10, S9, S8, S7, {0x48a, 0xa5f}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, {0x48a, 0xa5f}, S5, S4, S3, S2, S1, S0]

================================

Block 0xc48
[0xc48:0xc4f]
---
Predecessors: [0xc33]
Successors: [0xc50]
---
0xc48 JUMPDEST
0xc49 PUSH1 0x0
0xc4b PUSH1 0x3
0xc4d DUP6
0xc4e ADD
0xc4f SSTORE
---
0xc48: JUMPDEST 
0xc49: V1194 = 0x0
0xc4b: V1195 = 0x3
0xc4e: V1196 = ADD S3 0x3
0xc4f: S[V1196] = 0x0
---
Entry stack: [S11, S10, S9, S8, S7, {0x48a, 0xa5f}, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S11, S10, S9, S8, S7, {0x48a, 0xa5f}, S5, S4, S3, S2, S1, S0]

================================

Block 0xc50
[0xc50:0xc71]
---
Predecessors: [0xb25, 0xc48]
Successors: [0xc72]
---
0xc50 JUMPDEST
0xc51 PUSH1 0x0
0xc53 DUP7
0xc54 DUP2
0xc55 MSTORE
0xc56 PUSH1 0x1
0xc58 PUSH1 0x20
0xc5a DUP2
0xc5b SWAP1
0xc5c MSTORE
0xc5d PUSH1 0x40
0xc5f SWAP1
0xc60 SWAP2
0xc61 SHA3
0xc62 PUSH1 0x5
0xc64 ADD
0xc65 DUP1
0xc66 SLOAD
0xc67 PUSH1 0x2
0xc69 SWAP3
0xc6a PUSH1 0xff
0xc6c NOT
0xc6d SWAP1
0xc6e SWAP2
0xc6f AND
0xc70 SWAP1
0xc71 DUP4
---
0xc50: JUMPDEST 
0xc51: V1197 = 0x0
0xc55: M[0x0] = V225
0xc56: V1198 = 0x1
0xc58: V1199 = 0x20
0xc5c: M[0x20] = 0x1
0xc5d: V1200 = 0x40
0xc61: V1201 = SHA3 0x0 0x40
0xc62: V1202 = 0x5
0xc64: V1203 = ADD 0x5 V1201
0xc66: V1204 = S[V1203]
0xc67: V1205 = 0x2
0xc6a: V1206 = 0xff
0xc6c: V1207 = NOT 0xff
0xc6f: V1208 = AND V1204 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
---
Entry stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x2, V1203, V1208, 0x1, 0x2]
Exit stack: [S11, S10, S9, S8, V12, {0x15a, 0x48a, 0xa5f}, V225, S4, S3, S2, S1, S0, 0x2, V1203, V1208, 0x1, 0x2]

================================

Block 0xc72
[0xc72:0xcb2]
---
Predecessors: [0xc50]
Successors: [0xcb3]
---
0xc72 JUMPDEST
0xc73 MUL
0xc74 OR
0xc75 SWAP1
0xc76 SSTORE
0xc77 POP
0xc78 DUP6
0xc79 PUSH32 0xabfecb41642f4ef37a31c1721c2da0a771e03d530ea99bf54d900d29130f5125
0xc9a DUP7
0xc9b DUP5
0xc9c PUSH1 0x40
0xc9e MLOAD
0xc9f SWAP2
0xca0 DUP3
0xca1 MSTORE
0xca2 PUSH1 0x20
0xca4 DUP3
0xca5 ADD
0xca6 MSTORE
0xca7 PUSH1 0x40
0xca9 SWAP1
0xcaa DUP2
0xcab ADD
0xcac SWAP1
0xcad MLOAD
0xcae DUP1
0xcaf SWAP2
0xcb0 SUB
0xcb1 SWAP1
0xcb2 LOG2
---
0xc72: JUMPDEST 
0xc73: V1209 = MUL 0x2 0x1
0xc74: V1210 = OR 0x2 V1208
0xc76: S[V1203] = V1210
0xc79: V1211 = 0xabfecb41642f4ef37a31c1721c2da0a771e03d530ea99bf54d900d29130f5125
0xc9c: V1212 = 0x40
0xc9e: V1213 = M[0x40]
0xca1: M[V1213] = S9
0xca2: V1214 = 0x20
0xca5: V1215 = ADD V1213 0x20
0xca6: M[V1215] = S6
0xca7: V1216 = 0x40
0xcab: V1217 = ADD 0x40 V1213
0xcad: V1218 = M[0x40]
0xcb0: V1219 = SUB V1217 V1218
0xcb2: LOG V1218 V1219 0xabfecb41642f4ef37a31c1721c2da0a771e03d530ea99bf54d900d29130f5125 S10
---
Entry stack: [S16, S15, S14, S13, S12, {0x48a, 0xa5f}, S10, S9, S8, S7, S6, S5, 0x2, V1203, V1208, 0x1, 0x2]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5]
Exit stack: [S16, S15, S14, S13, S12, {0x48a, 0xa5f}, S10, S9, S8, S7, S6, S5]

================================

Block 0xcb3
[0xcb3:0xcba]
---
Predecessors: [0xc72]
Successors: [0x15a, 0x48a, 0xa5f]
---
0xcb3 JUMPDEST
0xcb4 POP
0xcb5 POP
0xcb6 POP
0xcb7 POP
0xcb8 POP
0xcb9 POP
0xcba JUMP
---
0xcb3: JUMPDEST 
0xcba: JUMP {0x48a, 0xa5f}
---
Entry stack: [S11, S10, S9, S8, S7, {0x48a, 0xa5f}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7]

================================

Block 0xcbb
[0xcbb:0xcd1]
---
Predecessors: [0x279]
Successors: [0xcd2, 0xcd6]
---
0xcbb JUMPDEST
0xcbc PUSH1 0x0
0xcbe SLOAD
0xcbf CALLER
0xcc0 PUSH1 0x1
0xcc2 PUSH1 0xa0
0xcc4 PUSH1 0x2
0xcc6 EXP
0xcc7 SUB
0xcc8 SWAP1
0xcc9 DUP2
0xcca AND
0xccb SWAP2
0xccc AND
0xccd EQ
0xcce PUSH2 0xcd6
0xcd1 JUMPI
---
0xcbb: JUMPDEST 
0xcbc: V1220 = 0x0
0xcbe: V1221 = S[0x0]
0xcbf: V1222 = CALLER
0xcc0: V1223 = 0x1
0xcc2: V1224 = 0xa0
0xcc4: V1225 = 0x2
0xcc6: V1226 = EXP 0x2 0xa0
0xcc7: V1227 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcca: V1228 = AND 0xffffffffffffffffffffffffffffffffffffffff V1222
0xccc: V1229 = AND V1221 0xffffffffffffffffffffffffffffffffffffffff
0xccd: V1230 = EQ V1229 V1228
0xcce: V1231 = 0xcd6
0xcd1: JUMPI 0xcd6 V1230
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0xcd2
[0xcd2:0xcd5]
---
Predecessors: [0xcbb]
Successors: []
---
0xcd2 PUSH1 0x0
0xcd4 DUP1
0xcd5 REVERT
---
0xcd2: V1232 = 0x0
0xcd5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0xcd6
[0xcd6:0xce3]
---
Predecessors: [0xcbb]
Successors: []
---
0xcd6 JUMPDEST
0xcd7 PUSH1 0x0
0xcd9 SLOAD
0xcda PUSH1 0x1
0xcdc PUSH1 0xa0
0xcde PUSH1 0x2
0xce0 EXP
0xce1 SUB
0xce2 AND
0xce3 SELFDESTRUCT
---
0xcd6: JUMPDEST 
0xcd7: V1233 = 0x0
0xcd9: V1234 = S[0x0]
0xcda: V1235 = 0x1
0xcdc: V1236 = 0xa0
0xcde: V1237 = 0x2
0xce0: V1238 = EXP 0x2 0xa0
0xce1: V1239 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce2: V1240 = AND 0xffffffffffffffffffffffffffffffffffffffff V1234
0xce3: SELFDESTRUCT V1240
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0xce4
[0xce4:0xce4]
---
Predecessors: []
Successors: [0xce5]
---
0xce4 JUMPDEST
---
0xce4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce5
[0xce5:0xce6]
---
Predecessors: [0xce4]
Successors: []
Has unresolved jump.
---
0xce5 JUMPDEST
0xce6 JUMP
---
0xce5: JUMPDEST 
0xce6: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xce7
[0xce7:0xcf5]
---
Predecessors: [0x28e]
Successors: [0x296]
---
0xce7 JUMPDEST
0xce8 PUSH1 0x0
0xcea SLOAD
0xceb PUSH1 0x1
0xced PUSH1 0xa0
0xcef PUSH1 0x2
0xcf1 EXP
0xcf2 SUB
0xcf3 AND
0xcf4 DUP2
0xcf5 JUMP
---
0xce7: JUMPDEST 
0xce8: V1241 = 0x0
0xcea: V1242 = S[0x0]
0xceb: V1243 = 0x1
0xced: V1244 = 0xa0
0xcef: V1245 = 0x2
0xcf1: V1246 = EXP 0x2 0xa0
0xcf2: V1247 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf3: V1248 = AND 0xffffffffffffffffffffffffffffffffffffffff V1242
0xcf5: JUMP 0x296
---
Entry stack: [V12, 0x296]
Stack pops: 1
Stack additions: [S0, V1248]
Exit stack: [V12, 0x296, V1248]

================================

Block 0xcf6
[0xcf6:0xd61]
---
Predecessors: [0x2bd]
Successors: [0xd62, 0xd66]
---
0xcf6 JUMPDEST
0xcf7 PUSH1 0x0
0xcf9 DUP1
0xcfa PUSH1 0x2
0xcfc DUP10
0xcfd DUP10
0xcfe DUP10
0xcff DUP10
0xd00 PUSH1 0x0
0xd02 PUSH1 0x40
0xd04 MLOAD
0xd05 PUSH1 0x20
0xd07 ADD
0xd08 MSTORE
0xd09 PUSH1 0x40
0xd0b MLOAD
0xd0c PUSH4 0xffffffff
0xd11 SWAP5
0xd12 SWAP1
0xd13 SWAP5
0xd14 AND
0xd15 PUSH1 0xe0
0xd17 PUSH1 0x2
0xd19 EXP
0xd1a MUL
0xd1b DUP5
0xd1c MSTORE
0xd1d PUSH1 0x1
0xd1f PUSH1 0xa0
0xd21 PUSH1 0x2
0xd23 EXP
0xd24 SUB
0xd25 SWAP3
0xd26 SWAP1
0xd27 SWAP3
0xd28 AND
0xd29 PUSH13 0x1000000000000000000000000
0xd37 MUL
0xd38 PUSH1 0x4
0xd3a DUP5
0xd3b ADD
0xd3c MSTORE
0xd3d PUSH1 0x18
0xd3f DUP4
0xd40 ADD
0xd41 MSTORE
0xd42 PUSH1 0x38
0xd44 DUP3
0xd45 ADD
0xd46 MSTORE
0xd47 PUSH1 0x58
0xd49 ADD
0xd4a PUSH1 0x20
0xd4c PUSH1 0x40
0xd4e MLOAD
0xd4f DUP1
0xd50 DUP4
0xd51 SUB
0xd52 DUP2
0xd53 PUSH1 0x0
0xd55 DUP7
0xd56 PUSH2 0x646e
0xd59 GAS
0xd5a SUB
0xd5b CALL
0xd5c ISZERO
0xd5d ISZERO
0xd5e PUSH2 0xd66
0xd61 JUMPI
---
0xcf6: JUMPDEST 
0xcf7: V1249 = 0x0
0xcfa: V1250 = 0x2
0xd00: V1251 = 0x0
0xd02: V1252 = 0x40
0xd04: V1253 = M[0x40]
0xd05: V1254 = 0x20
0xd07: V1255 = ADD 0x20 V1253
0xd08: M[V1255] = 0x0
0xd09: V1256 = 0x40
0xd0b: V1257 = M[0x40]
0xd0c: V1258 = 0xffffffff
0xd14: V1259 = AND 0xffffffff V270
0xd15: V1260 = 0xe0
0xd17: V1261 = 0x2
0xd19: V1262 = EXP 0x2 0xe0
0xd1a: V1263 = MUL 0x100000000000000000000000000000000000000000000000000000000 V1259
0xd1c: M[V1257] = V1263
0xd1d: V1264 = 0x1
0xd1f: V1265 = 0xa0
0xd21: V1266 = 0x2
0xd23: V1267 = EXP 0x2 0xa0
0xd24: V1268 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd28: V1269 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0xd29: V1270 = 0x1000000000000000000000000
0xd37: V1271 = MUL 0x1000000000000000000000000 V1269
0xd38: V1272 = 0x4
0xd3b: V1273 = ADD V1257 0x4
0xd3c: M[V1273] = V1271
0xd3d: V1274 = 0x18
0xd40: V1275 = ADD V1257 0x18
0xd41: M[V1275] = V275
0xd42: V1276 = 0x38
0xd45: V1277 = ADD V1257 0x38
0xd46: M[V1277] = V277
0xd47: V1278 = 0x58
0xd49: V1279 = ADD 0x58 V1257
0xd4a: V1280 = 0x20
0xd4c: V1281 = 0x40
0xd4e: V1282 = M[0x40]
0xd51: V1283 = SUB V1279 V1282
0xd53: V1284 = 0x0
0xd56: V1285 = 0x646e
0xd59: V1286 = GAS
0xd5a: V1287 = SUB V1286 0x646e
0xd5b: V1288 = CALL V1287 0x2 0x0 V1282 V1283 V1282 0x20
0xd5c: V1289 = ISZERO V1288
0xd5d: V1290 = ISZERO V1289
0xd5e: V1291 = 0xd66
0xd61: JUMPI 0xd66 V1290
---
Entry stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, 0x2, V1279]
Exit stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, 0x0, 0x0, 0x2, V1279]

================================

Block 0xd62
[0xd62:0xd65]
---
Predecessors: [0xcf6]
Successors: []
---
0xd62 PUSH1 0x0
0xd64 DUP1
0xd65 REVERT
---
0xd62: V1292 = 0x0
0xd65: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, 0x0, 0x0, 0x2, V1279]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, 0x0, 0x0, 0x2, V1279]

================================

Block 0xd66
[0xd66:0xdd1]
---
Predecessors: [0xcf6]
Successors: [0xdd2, 0xdd6]
---
0xd66 JUMPDEST
0xd67 POP
0xd68 POP
0xd69 PUSH1 0x40
0xd6b MLOAD
0xd6c DUP1
0xd6d MLOAD
0xd6e SWAP1
0xd6f POP
0xd70 SWAP1
0xd71 POP
0xd72 PUSH1 0x1
0xd74 DUP2
0xd75 DUP7
0xd76 DUP7
0xd77 DUP7
0xd78 PUSH1 0x40
0xd7a MLOAD
0xd7b PUSH1 0x0
0xd7d DUP2
0xd7e MSTORE
0xd7f PUSH1 0x20
0xd81 ADD
0xd82 PUSH1 0x40
0xd84 MSTORE
0xd85 PUSH1 0x0
0xd87 PUSH1 0x40
0xd89 MLOAD
0xd8a PUSH1 0x20
0xd8c ADD
0xd8d MSTORE
0xd8e PUSH1 0x40
0xd90 MLOAD
0xd91 SWAP4
0xd92 DUP5
0xd93 MSTORE
0xd94 PUSH1 0xff
0xd96 SWAP1
0xd97 SWAP3
0xd98 AND
0xd99 PUSH1 0x20
0xd9b DUP1
0xd9c DUP6
0xd9d ADD
0xd9e SWAP2
0xd9f SWAP1
0xda0 SWAP2
0xda1 MSTORE
0xda2 PUSH1 0x40
0xda4 DUP1
0xda5 DUP6
0xda6 ADD
0xda7 SWAP3
0xda8 SWAP1
0xda9 SWAP3
0xdaa MSTORE
0xdab PUSH1 0x60
0xdad DUP5
0xdae ADD
0xdaf SWAP3
0xdb0 SWAP1
0xdb1 SWAP3
0xdb2 MSTORE
0xdb3 PUSH1 0x80
0xdb5 SWAP1
0xdb6 SWAP3
0xdb7 ADD
0xdb8 SWAP2
0xdb9 MLOAD
0xdba PUSH1 0x20
0xdbc DUP2
0xdbd SUB
0xdbe SWAP1
0xdbf DUP1
0xdc0 DUP5
0xdc1 SUB
0xdc2 SWAP1
0xdc3 PUSH1 0x0
0xdc5 DUP7
0xdc6 PUSH2 0x646e
0xdc9 GAS
0xdca SUB
0xdcb CALL
0xdcc ISZERO
0xdcd ISZERO
0xdce PUSH2 0xdd6
0xdd1 JUMPI
---
0xd66: JUMPDEST 
0xd69: V1293 = 0x40
0xd6b: V1294 = M[0x40]
0xd6d: V1295 = M[V1294]
0xd72: V1296 = 0x1
0xd78: V1297 = 0x40
0xd7a: V1298 = M[0x40]
0xd7b: V1299 = 0x0
0xd7e: M[V1298] = 0x0
0xd7f: V1300 = 0x20
0xd81: V1301 = ADD 0x20 V1298
0xd82: V1302 = 0x40
0xd84: M[0x40] = V1301
0xd85: V1303 = 0x0
0xd87: V1304 = 0x40
0xd89: V1305 = M[0x40]
0xd8a: V1306 = 0x20
0xd8c: V1307 = ADD 0x20 V1305
0xd8d: M[V1307] = 0x0
0xd8e: V1308 = 0x40
0xd90: V1309 = M[0x40]
0xd93: M[V1309] = V1295
0xd94: V1310 = 0xff
0xd98: V1311 = AND V281 0xff
0xd99: V1312 = 0x20
0xd9d: V1313 = ADD V1309 0x20
0xda1: M[V1313] = V1311
0xda2: V1314 = 0x40
0xda6: V1315 = ADD V1309 0x40
0xdaa: M[V1315] = V283
0xdab: V1316 = 0x60
0xdae: V1317 = ADD V1309 0x60
0xdb2: M[V1317] = V285
0xdb3: V1318 = 0x80
0xdb7: V1319 = ADD V1309 0x80
0xdb9: V1320 = M[0x40]
0xdba: V1321 = 0x20
0xdbd: V1322 = SUB V1320 0x20
0xdc1: V1323 = SUB V1319 V1320
0xdc3: V1324 = 0x0
0xdc6: V1325 = 0x646e
0xdc9: V1326 = GAS
0xdca: V1327 = SUB V1326 0x646e
0xdcb: V1328 = CALL V1327 0x1 0x0 V1320 V1323 V1322 0x20
0xdcc: V1329 = ISZERO V1328
0xdcd: V1330 = ISZERO V1329
0xdce: V1331 = 0xdd6
0xdd1: JUMPI 0xdd6 V1330
---
Entry stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, 0x0, 0x0, 0x2, V1279]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V1295, 0x1, V1319]
Exit stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, 0x0, V1295, 0x1, V1319]

================================

Block 0xdd2
[0xdd2:0xdd5]
---
Predecessors: [0xd66]
Successors: []
---
0xdd2 PUSH1 0x0
0xdd4 DUP1
0xdd5 REVERT
---
0xdd2: V1332 = 0x0
0xdd5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, 0x0, V1295, 0x1, V1319]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, 0x0, V1295, 0x1, V1319]

================================

Block 0xdd6
[0xdd6:0xdf5]
---
Predecessors: [0xd66]
Successors: [0xdf6]
---
0xdd6 JUMPDEST
0xdd7 POP
0xdd8 POP
0xdd9 PUSH1 0x20
0xddb PUSH1 0x40
0xddd MLOAD
0xdde SUB
0xddf MLOAD
0xde0 PUSH1 0x1
0xde2 PUSH1 0xa0
0xde4 PUSH1 0x2
0xde6 EXP
0xde7 SUB
0xde8 AND
0xde9 DUP11
0xdea PUSH1 0x1
0xdec PUSH1 0xa0
0xdee PUSH1 0x2
0xdf0 EXP
0xdf1 SUB
0xdf2 AND
0xdf3 EQ
0xdf4 SWAP2
0xdf5 POP
---
0xdd6: JUMPDEST 
0xdd9: V1333 = 0x20
0xddb: V1334 = 0x40
0xddd: V1335 = M[0x40]
0xdde: V1336 = SUB V1335 0x20
0xddf: V1337 = M[V1336]
0xde0: V1338 = 0x1
0xde2: V1339 = 0xa0
0xde4: V1340 = 0x2
0xde6: V1341 = EXP 0x2 0xa0
0xde7: V1342 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde8: V1343 = AND 0xffffffffffffffffffffffffffffffffffffffff V1337
0xdea: V1344 = 0x1
0xdec: V1345 = 0xa0
0xdee: V1346 = 0x2
0xdf0: V1347 = EXP 0x2 0xa0
0xdf1: V1348 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf2: V1349 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0xdf3: V1350 = EQ V1349 V1343
---
Entry stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, 0x0, V1295, 0x1, V1319]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, V1350, S2]
Exit stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, V1350, V1295]

================================

Block 0xdf6
[0xdf6:0xe02]
---
Predecessors: [0xdd6]
Successors: [0x1f1]
---
0xdf6 JUMPDEST
0xdf7 POP
0xdf8 SWAP9
0xdf9 SWAP8
0xdfa POP
0xdfb POP
0xdfc POP
0xdfd POP
0xdfe POP
0xdff POP
0xe00 POP
0xe01 POP
0xe02 JUMP
---
0xdf6: JUMPDEST 
0xe02: JUMP 0x1f1
---
Entry stack: [V12, 0x1f1, V266, V270, V273, V275, V277, V281, V283, V285, V1350, V1295]
Stack pops: 11
Stack additions: [S1]
Exit stack: [V12, V1350]

================================

Block 0xe03
[0xe03:0xe0e]
---
Predecessors: [0x312]
Successors: [0x9e7]
---
0xe03 JUMPDEST
0xe04 PUSH1 0x0
0xe06 PUSH2 0xe0f
0xe09 CALLER
0xe0a DUP5
0xe0b PUSH2 0x9e7
0xe0e JUMP
---
0xe03: JUMPDEST 
0xe04: V1351 = 0x0
0xe06: V1352 = 0xe0f
0xe09: V1353 = CALLER
0xe0b: V1354 = 0x9e7
0xe0e: JUMP 0x9e7
---
Entry stack: [V12, 0x15a, V302, V304]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0xe0f, V1353, S1]
Exit stack: [V12, 0x15a, V302, V304, 0x0, 0xe0f, V1353, V302]

================================

Block 0xe0f
[0xe0f:0xe15]
---
Predecessors: [0x9e0, 0xa26]
Successors: [0xe16, 0xe1a]
---
0xe0f JUMPDEST
0xe10 ISZERO
0xe11 ISZERO
0xe12 PUSH2 0xe1a
0xe15 JUMPI
---
0xe0f: JUMPDEST 
0xe10: V1355 = ISZERO S0
0xe11: V1356 = ISZERO V1355
0xe12: V1357 = 0xe1a
0xe15: JUMPI 0xe1a V1356
---
Entry stack: [V12, 0x15a, V119, S3, {0x0, 0x15a}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V119, S3, {0x0, 0x15a}, S1]

================================

Block 0xe16
[0xe16:0xe19]
---
Predecessors: [0xe0f]
Successors: []
---
0xe16 PUSH1 0x0
0xe18 DUP1
0xe19 REVERT
---
0xe16: V1358 = 0x0
0xe19: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V119, V121, 0x0, S0]

================================

Block 0xe1a
[0xe1a:0xe3b]
---
Predecessors: [0xe0f]
Successors: [0xe3c]
---
0xe1a JUMPDEST
0xe1b POP
0xe1c PUSH1 0x0
0xe1e DUP3
0xe1f DUP2
0xe20 MSTORE
0xe21 PUSH1 0x1
0xe23 PUSH1 0x20
0xe25 DUP2
0xe26 SWAP1
0xe27 MSTORE
0xe28 PUSH1 0x40
0xe2a SWAP1
0xe2b SWAP2
0xe2c SHA3
0xe2d PUSH1 0x5
0xe2f DUP2
0xe30 ADD
0xe31 DUP1
0xe32 SLOAD
0xe33 SWAP2
0xe34 SWAP3
0xe35 SWAP2
0xe36 PUSH1 0xff
0xe38 NOT
0xe39 AND
0xe3a DUP3
0xe3b DUP1
---
0xe1a: JUMPDEST 
0xe1c: V1359 = 0x0
0xe20: M[0x0] = V121
0xe21: V1360 = 0x1
0xe23: V1361 = 0x20
0xe27: M[0x20] = 0x1
0xe28: V1362 = 0x40
0xe2c: V1363 = SHA3 0x0 0x40
0xe2d: V1364 = 0x5
0xe30: V1365 = ADD V1363 0x5
0xe32: V1366 = S[V1365]
0xe36: V1367 = 0xff
0xe38: V1368 = NOT 0xff
0xe39: V1369 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1366
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V1363, 0x1, V1365, V1369, 0x1, 0x1]
Exit stack: [V12, 0x15a, V119, V121, 0x0, V1363, 0x1, V1365, V1369, 0x1, 0x1]

================================

Block 0xe3c
[0xe3c:0xe88]
---
Predecessors: [0xe1a]
Successors: [0xe89]
---
0xe3c JUMPDEST
0xe3d MUL
0xe3e OR
0xe3f SWAP1
0xe40 SSTORE
0xe41 POP
0xe42 PUSH1 0x4
0xe44 DUP2
0xe45 ADD
0xe46 SLOAD
0xe47 TIMESTAMP
0xe48 ADD
0xe49 PUSH1 0x6
0xe4b DUP3
0xe4c ADD
0xe4d SSTORE
0xe4e PUSH1 0x7
0xe50 DUP2
0xe51 ADD
0xe52 DUP3
0xe53 SWAP1
0xe54 SSTORE
0xe55 DUP3
0xe56 PUSH32 0x673a31efff5b18f60225e513fd4f0f53c708661f184c1898f5c52e85bd95d500
0xe77 DUP4
0xe78 PUSH1 0x40
0xe7a MLOAD
0xe7b SWAP1
0xe7c DUP2
0xe7d MSTORE
0xe7e PUSH1 0x20
0xe80 ADD
0xe81 PUSH1 0x40
0xe83 MLOAD
0xe84 DUP1
0xe85 SWAP2
0xe86 SUB
0xe87 SWAP1
0xe88 LOG2
---
0xe3c: JUMPDEST 
0xe3d: V1370 = MUL 0x1 0x1
0xe3e: V1371 = OR 0x1 V1369
0xe40: S[V1365] = V1371
0xe42: V1372 = 0x4
0xe45: V1373 = ADD V1363 0x4
0xe46: V1374 = S[V1373]
0xe47: V1375 = TIMESTAMP
0xe48: V1376 = ADD V1375 V1374
0xe49: V1377 = 0x6
0xe4c: V1378 = ADD V1363 0x6
0xe4d: S[V1378] = V1376
0xe4e: V1379 = 0x7
0xe51: V1380 = ADD V1363 0x7
0xe54: S[V1380] = 0x0
0xe56: V1381 = 0x673a31efff5b18f60225e513fd4f0f53c708661f184c1898f5c52e85bd95d500
0xe78: V1382 = 0x40
0xe7a: V1383 = M[0x40]
0xe7d: M[V1383] = 0x0
0xe7e: V1384 = 0x20
0xe80: V1385 = ADD 0x20 V1383
0xe81: V1386 = 0x40
0xe83: V1387 = M[0x40]
0xe86: V1388 = SUB V1385 V1387
0xe88: LOG V1387 V1388 0x673a31efff5b18f60225e513fd4f0f53c708661f184c1898f5c52e85bd95d500 V121
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, V1363, 0x1, V1365, V1369, 0x1, 0x1]
Stack pops: 8
Stack additions: [S7, S6, S5]
Exit stack: [V12, 0x15a, V119, V121, 0x0, V1363]

================================

Block 0xe89
[0xe89:0xe8d]
---
Predecessors: [0xe3c]
Successors: [0x15a]
Has unresolved jump.
---
0xe89 JUMPDEST
0xe8a POP
0xe8b POP
0xe8c POP
0xe8d JUMP
---
0xe89: JUMPDEST 
0xe8d: JUMP V119
---
Entry stack: [V12, 0x15a, V119, V121, 0x0, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0xe8e
[0xe8e:0xe98]
---
Predecessors: [0x32d, 0x468]
Successors: [0x11ac]
---
0xe8e JUMPDEST
0xe8f PUSH1 0x0
0xe91 DUP1
0xe92 PUSH2 0xe99
0xe95 PUSH2 0x11ac
0xe98 JUMP
---
0xe8e: JUMPDEST 
0xe8f: V1389 = 0x0
0xe92: V1390 = 0xe99
0xe95: V1391 = 0x11ac
0xe98: JUMP 0x11ac
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, S6, {0x1f1, 0x475}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0xe99]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, S6, {0x1f1, 0x475}, S4, S3, S2, S1, S0, 0x0, 0x0, 0xe99]

================================

Block 0xe99
[0xe99:0xf52]
---
Predecessors: [0x11ac]
Successors: [0xf53]
---
0xe99 JUMPDEST
0xe9a PUSH1 0x0
0xe9c DUP9
0xe9d DUP2
0xe9e MSTORE
0xe9f PUSH1 0x1
0xea1 PUSH1 0x20
0xea3 MSTORE
0xea4 PUSH1 0x40
0xea6 DUP1
0xea7 DUP3
0xea8 SHA3
0xea9 SWAP4
0xeaa POP
0xeab DUP2
0xeac SWAP1
0xead DUP1
0xeae MLOAD
0xeaf SWAP1
0xeb0 DUP2
0xeb1 ADD
0xeb2 PUSH1 0x40
0xeb4 SWAP1
0xeb5 DUP2
0xeb6 MSTORE
0xeb7 PUSH1 0x1c
0xeb9 DUP3
0xeba MSTORE
0xebb PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0xedc PUSH1 0x20
0xede DUP4
0xedf ADD
0xee0 MSTORE
0xee1 PUSH1 0x2
0xee3 SLOAD
0xee4 SWAP2
0xee5 SWAP5
0xee6 POP
0xee7 DUP12
0xee8 SWAP2
0xee9 DUP12
0xeea SWAP2
0xeeb ADDRESS
0xeec SWAP2
0xeed PUSH4 0xffffffff
0xef2 AND
0xef3 SWAP1
0xef4 MLOAD
0xef5 SWAP4
0xef6 DUP5
0xef7 MSTORE
0xef8 PUSH1 0x20
0xefa DUP5
0xefb ADD
0xefc SWAP3
0xefd SWAP1
0xefe SWAP3
0xeff MSTORE
0xf00 PUSH1 0x1
0xf02 PUSH1 0xa0
0xf04 PUSH1 0x2
0xf06 EXP
0xf07 SUB
0xf08 AND
0xf09 PUSH13 0x1000000000000000000000000
0xf17 MUL
0xf18 PUSH1 0x40
0xf1a DUP1
0xf1b DUP5
0xf1c ADD
0xf1d SWAP2
0xf1e SWAP1
0xf1f SWAP2
0xf20 MSTORE
0xf21 PUSH4 0xffffffff
0xf26 SWAP1
0xf27 SWAP2
0xf28 AND
0xf29 PUSH1 0xe0
0xf2b PUSH1 0x2
0xf2d EXP
0xf2e MUL
0xf2f PUSH1 0x54
0xf31 DUP4
0xf32 ADD
0xf33 MSTORE
0xf34 PUSH1 0x58
0xf36 SWAP1
0xf37 SWAP2
0xf38 ADD
0xf39 SWAP1
0xf3a MLOAD
0xf3b DUP1
0xf3c SWAP2
0xf3d SUB
0xf3e SWAP1
0xf3f SHA3
0xf40 SWAP2
0xf41 POP
0xf42 DUP3
0xf43 DUP3
0xf44 PUSH1 0x40
0xf46 MLOAD
0xf47 DUP1
0xf48 DUP4
0xf49 DUP1
0xf4a MLOAD
0xf4b SWAP1
0xf4c PUSH1 0x20
0xf4e ADD
0xf4f SWAP1
0xf50 DUP1
0xf51 DUP4
0xf52 DUP4
---
0xe99: JUMPDEST 
0xe9a: V1392 = 0x0
0xe9e: M[0x0] = S7
0xe9f: V1393 = 0x1
0xea1: V1394 = 0x20
0xea3: M[0x20] = 0x1
0xea4: V1395 = 0x40
0xea8: V1396 = SHA3 0x0 0x40
0xeae: V1397 = M[0x40]
0xeb1: V1398 = ADD V1397 0x40
0xeb2: V1399 = 0x40
0xeb6: M[0x40] = V1398
0xeb7: V1400 = 0x1c
0xeba: M[V1397] = 0x1c
0xebb: V1401 = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0xedc: V1402 = 0x20
0xedf: V1403 = ADD V1397 0x20
0xee0: M[V1403] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0xee1: V1404 = 0x2
0xee3: V1405 = S[0x2]
0xeeb: V1406 = ADDRESS
0xeed: V1407 = 0xffffffff
0xef2: V1408 = AND 0xffffffff V1405
0xef4: V1409 = M[0x40]
0xef7: M[V1409] = S7
0xef8: V1410 = 0x20
0xefb: V1411 = ADD V1409 0x20
0xeff: M[V1411] = S6
0xf00: V1412 = 0x1
0xf02: V1413 = 0xa0
0xf04: V1414 = 0x2
0xf06: V1415 = EXP 0x2 0xa0
0xf07: V1416 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf08: V1417 = AND 0xffffffffffffffffffffffffffffffffffffffff V1406
0xf09: V1418 = 0x1000000000000000000000000
0xf17: V1419 = MUL 0x1000000000000000000000000 V1417
0xf18: V1420 = 0x40
0xf1c: V1421 = ADD V1409 0x40
0xf20: M[V1421] = V1419
0xf21: V1422 = 0xffffffff
0xf28: V1423 = AND V1408 0xffffffff
0xf29: V1424 = 0xe0
0xf2b: V1425 = 0x2
0xf2d: V1426 = EXP 0x2 0xe0
0xf2e: V1427 = MUL 0x100000000000000000000000000000000000000000000000000000000 V1423
0xf2f: V1428 = 0x54
0xf32: V1429 = ADD V1409 0x54
0xf33: M[V1429] = V1427
0xf34: V1430 = 0x58
0xf38: V1431 = ADD V1409 0x58
0xf3a: V1432 = M[0x40]
0xf3d: V1433 = SUB V1431 V1432
0xf3f: V1434 = SHA3 V1432 V1433
0xf44: V1435 = 0x40
0xf46: V1436 = M[0x40]
0xf4a: V1437 = M[V1397]
0xf4c: V1438 = 0x20
0xf4e: V1439 = ADD 0x20 V1397
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, S9, {0x1f1, 0x475}, S7, S6, S5, S4, S3, 0x0, 0x0, V1666]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, V1437, V1436, V1439]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, S9, {0x1f1, 0x475}, S7, S6, S5, S4, S3, 0x0, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, V1437, V1436, V1439]

================================

Block 0xf53
[0xf53:0xf5b]
---
Predecessors: [0xe99, 0xf60]
Successors: [0xf5c, 0xf73]
---
0xf53 JUMPDEST
0xf54 PUSH1 0x20
0xf56 DUP4
0xf57 LT
0xf58 PUSH2 0xf73
0xf5b JUMPI
---
0xf53: JUMPDEST 
0xf54: V1440 = 0x20
0xf57: V1441 = LT S2 0x20
0xf58: V1442 = 0xf73
0xf5b: JUMPI 0xf73 V1441
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, S20, {0x1f1, 0x475}, S18, S17, S16, S15, S14, 0x0, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, S20, {0x1f1, 0x475}, S18, S17, S16, S15, S14, 0x0, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, S2, S1, S0]

================================

Block 0xf5c
[0xf5c:0xf5f]
---
Predecessors: [0xf53]
Successors: [0xf60]
---
0xf5c DUP1
0xf5d MLOAD
0xf5e DUP3
0xf5f MSTORE
---
0xf5d: V1443 = M[S0]
0xf5f: M[S1] = V1443
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, S2, S1, S0]

================================

Block 0xf60
[0xf60:0xf72]
---
Predecessors: [0xf5c]
Successors: [0xf53]
---
0xf60 JUMPDEST
0xf61 PUSH1 0x1f
0xf63 NOT
0xf64 SWAP1
0xf65 SWAP3
0xf66 ADD
0xf67 SWAP2
0xf68 PUSH1 0x20
0xf6a SWAP2
0xf6b DUP3
0xf6c ADD
0xf6d SWAP2
0xf6e ADD
0xf6f PUSH2 0xf53
0xf72 JUMP
---
0xf60: JUMPDEST 
0xf61: V1444 = 0x1f
0xf63: V1445 = NOT 0x1f
0xf66: V1446 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xf68: V1447 = 0x20
0xf6c: V1448 = ADD 0x20 S1
0xf6e: V1449 = ADD 0x20 S0
0xf6f: V1450 = 0xf53
0xf72: JUMP 0xf53
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, S2, S1, S0]
Stack pops: 3
Stack additions: [V1446, V1448, V1449]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, V1446, V1448, V1449]

================================

Block 0xf73
[0xf73:0xfa9]
---
Predecessors: [0xf53]
Successors: [0xfaa]
---
0xf73 JUMPDEST
0xf74 PUSH1 0x1
0xf76 DUP4
0xf77 PUSH1 0x20
0xf79 SUB
0xf7a PUSH2 0x100
0xf7d EXP
0xf7e SUB
0xf7f DUP1
0xf80 NOT
0xf81 DUP3
0xf82 MLOAD
0xf83 AND
0xf84 DUP2
0xf85 DUP5
0xf86 MLOAD
0xf87 AND
0xf88 OR
0xf89 SWAP1
0xf8a SWAP3
0xf8b MSTORE
0xf8c POP
0xf8d POP
0xf8e POP
0xf8f SWAP2
0xf90 SWAP1
0xf91 SWAP2
0xf92 ADD
0xf93 SWAP3
0xf94 DUP4
0xf95 MSTORE
0xf96 POP
0xf97 POP
0xf98 PUSH1 0x20
0xf9a ADD
0xf9b SWAP1
0xf9c POP
0xf9d PUSH1 0x40
0xf9f MLOAD
0xfa0 SWAP1
0xfa1 DUP2
0xfa2 SWAP1
0xfa3 SUB
0xfa4 SWAP1
0xfa5 SHA3
0xfa6 SWAP1
0xfa7 POP
0xfa8 PUSH1 0x0
---
0xf73: JUMPDEST 
0xf74: V1451 = 0x1
0xf77: V1452 = 0x20
0xf79: V1453 = SUB 0x20 S2
0xf7a: V1454 = 0x100
0xf7d: V1455 = EXP 0x100 V1453
0xf7e: V1456 = SUB V1455 0x1
0xf80: V1457 = NOT V1456
0xf82: V1458 = M[S0]
0xf83: V1459 = AND V1458 V1457
0xf86: V1460 = M[S1]
0xf87: V1461 = AND V1460 V1456
0xf88: V1462 = OR V1461 V1459
0xf8b: M[S1] = V1462
0xf92: V1463 = ADD V1437 V1436
0xf95: M[V1463] = V1434
0xf98: V1464 = 0x20
0xf9a: V1465 = ADD 0x20 V1463
0xf9d: V1466 = 0x40
0xf9f: V1467 = M[0x40]
0xfa3: V1468 = SUB V1465 V1467
0xfa5: V1469 = SHA3 V1467 V1468
0xfa8: V1470 = 0x0
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, 0x0, V1397, V1434, V1436, V1436, V1439, V1437, S2, S1, S0]
Stack pops: 10
Stack additions: [V1469, 0x0]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, V1469, 0x0]

================================

Block 0xfaa
[0xfaa:0xfbb]
---
Predecessors: [0xf73]
Successors: [0xfbc, 0xfbd]
---
0xfaa JUMPDEST
0xfab PUSH1 0x5
0xfad DUP6
0xfae ADD
0xfaf SLOAD
0xfb0 PUSH1 0xff
0xfb2 AND
0xfb3 PUSH1 0x2
0xfb5 DUP2
0xfb6 GT
0xfb7 ISZERO
0xfb8 PUSH2 0xfbd
0xfbb JUMPI
---
0xfaa: JUMPDEST 
0xfab: V1471 = 0x5
0xfae: V1472 = ADD V1396 0x5
0xfaf: V1473 = S[V1472]
0xfb0: V1474 = 0xff
0xfb2: V1475 = AND 0xff V1473
0xfb3: V1476 = 0x2
0xfb6: V1477 = GT V1475 0x2
0xfb7: V1478 = ISZERO V1477
0xfb8: V1479 = 0xfbd
0xfbb: JUMPI 0xfbd V1478
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, V1469, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1475]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, V1469, 0x0, V1475]

================================

Block 0xfbc
[0xfbc:0xfbc]
---
Predecessors: [0xfaa]
Successors: []
---
0xfbc INVALID
---
0xfbc: INVALID 
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x0, V1475]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x0, V1475]

================================

Block 0xfbd
[0xfbd:0xfc3]
---
Predecessors: [0xfaa]
Successors: [0xfc4, 0xfdc]
---
0xfbd JUMPDEST
0xfbe EQ
0xfbf DUP1
0xfc0 PUSH2 0xfdc
0xfc3 JUMPI
---
0xfbd: JUMPDEST 
0xfbe: V1480 = EQ V1475 0x0
0xfc0: V1481 = 0xfdc
0xfc3: JUMPI 0xfdc V1480
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x0, V1475]
Stack pops: 2
Stack additions: [V1480]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, V1480]

================================

Block 0xfc4
[0xfc4:0xfc6]
---
Predecessors: [0xfbd]
Successors: [0xfc7]
---
0xfc4 POP
0xfc5 PUSH1 0x1
---
0xfc5: V1482 = 0x1
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, V1480]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, 0x1]

================================

Block 0xfc7
[0xfc7:0xfd8]
---
Predecessors: [0xfc4]
Successors: [0xfd9, 0xfda]
---
0xfc7 JUMPDEST
0xfc8 PUSH1 0x5
0xfca DUP6
0xfcb ADD
0xfcc SLOAD
0xfcd PUSH1 0xff
0xfcf AND
0xfd0 PUSH1 0x2
0xfd2 DUP2
0xfd3 GT
0xfd4 ISZERO
0xfd5 PUSH2 0xfda
0xfd8 JUMPI
---
0xfc7: JUMPDEST 
0xfc8: V1483 = 0x5
0xfcb: V1484 = ADD V1396 0x5
0xfcc: V1485 = S[V1484]
0xfcd: V1486 = 0xff
0xfcf: V1487 = AND 0xff V1485
0xfd0: V1488 = 0x2
0xfd3: V1489 = GT V1487 0x2
0xfd4: V1490 = ISZERO V1489
0xfd5: V1491 = 0xfda
0xfd8: JUMPI 0xfda V1490
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, 0x1]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1487]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, 0x1, V1487]

================================

Block 0xfd9
[0xfd9:0xfd9]
---
Predecessors: [0xfc7]
Successors: []
---
0xfd9 INVALID
---
0xfd9: INVALID 
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x1, V1487]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x1, V1487]

================================

Block 0xfda
[0xfda:0xfdb]
---
Predecessors: [0xfc7]
Successors: [0xfdc]
---
0xfda JUMPDEST
0xfdb EQ
---
0xfda: JUMPDEST 
0xfdb: V1492 = EQ V1487 0x1
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x1, V1487]
Stack pops: 2
Stack additions: [V1492]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, V1492]

================================

Block 0xfdc
[0xfdc:0xfe2]
---
Predecessors: [0xfbd, 0xfda]
Successors: [0xfe3, 0x1062]
---
0xfdc JUMPDEST
0xfdd DUP1
0xfde ISZERO
0xfdf PUSH2 0x1062
0xfe2 JUMPI
---
0xfdc: JUMPDEST 
0xfde: V1493 = ISZERO S0
0xfdf: V1494 = 0x1062
0xfe2: JUMPI 0x1062 V1493
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, S0]

================================

Block 0xfe3
[0xfe3:0x1043]
---
Predecessors: [0xfdc]
Successors: [0x1044, 0x1048]
---
0xfe3 POP
0xfe4 PUSH1 0x1
0xfe6 DUP2
0xfe7 DUP10
0xfe8 DUP10
0xfe9 DUP10
0xfea PUSH1 0x40
0xfec MLOAD
0xfed PUSH1 0x0
0xfef DUP2
0xff0 MSTORE
0xff1 PUSH1 0x20
0xff3 ADD
0xff4 PUSH1 0x40
0xff6 MSTORE
0xff7 PUSH1 0x0
0xff9 PUSH1 0x40
0xffb MLOAD
0xffc PUSH1 0x20
0xffe ADD
0xfff MSTORE
0x1000 PUSH1 0x40
0x1002 MLOAD
0x1003 SWAP4
0x1004 DUP5
0x1005 MSTORE
0x1006 PUSH1 0xff
0x1008 SWAP1
0x1009 SWAP3
0x100a AND
0x100b PUSH1 0x20
0x100d DUP1
0x100e DUP6
0x100f ADD
0x1010 SWAP2
0x1011 SWAP1
0x1012 SWAP2
0x1013 MSTORE
0x1014 PUSH1 0x40
0x1016 DUP1
0x1017 DUP6
0x1018 ADD
0x1019 SWAP3
0x101a SWAP1
0x101b SWAP3
0x101c MSTORE
0x101d PUSH1 0x60
0x101f DUP5
0x1020 ADD
0x1021 SWAP3
0x1022 SWAP1
0x1023 SWAP3
0x1024 MSTORE
0x1025 PUSH1 0x80
0x1027 SWAP1
0x1028 SWAP3
0x1029 ADD
0x102a SWAP2
0x102b MLOAD
0x102c PUSH1 0x20
0x102e DUP2
0x102f SUB
0x1030 SWAP1
0x1031 DUP1
0x1032 DUP5
0x1033 SUB
0x1034 SWAP1
0x1035 PUSH1 0x0
0x1037 DUP7
0x1038 PUSH2 0x646e
0x103b GAS
0x103c SUB
0x103d CALL
0x103e ISZERO
0x103f ISZERO
0x1040 PUSH2 0x1048
0x1043 JUMPI
---
0xfe4: V1495 = 0x1
0xfea: V1496 = 0x40
0xfec: V1497 = M[0x40]
0xfed: V1498 = 0x0
0xff0: M[V1497] = 0x0
0xff1: V1499 = 0x20
0xff3: V1500 = ADD 0x20 V1497
0xff4: V1501 = 0x40
0xff6: M[0x40] = V1500
0xff7: V1502 = 0x0
0xff9: V1503 = 0x40
0xffb: V1504 = M[0x40]
0xffc: V1505 = 0x20
0xffe: V1506 = ADD 0x20 V1504
0xfff: M[V1506] = 0x0
0x1000: V1507 = 0x40
0x1002: V1508 = M[0x40]
0x1005: M[V1508] = S1
0x1006: V1509 = 0xff
0x100a: V1510 = AND V107 0xff
0x100b: V1511 = 0x20
0x100f: V1512 = ADD V1508 0x20
0x1013: M[V1512] = V1510
0x1014: V1513 = 0x40
0x1018: V1514 = ADD V1508 0x40
0x101c: M[V1514] = V109
0x101d: V1515 = 0x60
0x1020: V1516 = ADD V1508 0x60
0x1024: M[V1516] = V111
0x1025: V1517 = 0x80
0x1029: V1518 = ADD V1508 0x80
0x102b: V1519 = M[0x40]
0x102c: V1520 = 0x20
0x102f: V1521 = SUB V1519 0x20
0x1033: V1522 = SUB V1518 V1519
0x1035: V1523 = 0x0
0x1038: V1524 = 0x646e
0x103b: V1525 = GAS
0x103c: V1526 = SUB V1525 0x646e
0x103d: V1527 = CALL V1526 0x1 0x0 V1519 V1522 V1521 0x20
0x103e: V1528 = ISZERO V1527
0x103f: V1529 = ISZERO V1528
0x1040: V1530 = 0x1048
0x1043: JUMPI 0x1048 V1529
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, 0x1, V1518]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, 0x1, V1518]

================================

Block 0x1044
[0x1044:0x1047]
---
Predecessors: [0xfe3]
Successors: []
---
0x1044 PUSH1 0x0
0x1046 DUP1
0x1047 REVERT
---
0x1044: V1531 = 0x0
0x1047: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x1, V1518]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x1, V1518]

================================

Block 0x1048
[0x1048:0x1061]
---
Predecessors: [0xfe3]
Successors: [0x1062]
---
0x1048 JUMPDEST
0x1049 POP
0x104a POP
0x104b PUSH1 0x20
0x104d PUSH1 0x40
0x104f MLOAD
0x1050 SUB
0x1051 MLOAD
0x1052 DUP5
0x1053 SLOAD
0x1054 PUSH1 0x1
0x1056 PUSH1 0xa0
0x1058 PUSH1 0x2
0x105a EXP
0x105b SUB
0x105c SWAP1
0x105d DUP2
0x105e AND
0x105f SWAP2
0x1060 AND
0x1061 EQ
---
0x1048: JUMPDEST 
0x104b: V1532 = 0x20
0x104d: V1533 = 0x40
0x104f: V1534 = M[0x40]
0x1050: V1535 = SUB V1534 0x20
0x1051: V1536 = M[V1535]
0x1053: V1537 = S[V1396]
0x1054: V1538 = 0x1
0x1056: V1539 = 0xa0
0x1058: V1540 = 0x2
0x105a: V1541 = EXP 0x2 0xa0
0x105b: V1542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x105e: V1543 = AND 0xffffffffffffffffffffffffffffffffffffffff V1537
0x1060: V1544 = AND V1536 0xffffffffffffffffffffffffffffffffffffffff
0x1061: V1545 = EQ V1544 V1543
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, 0x1, V1518]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V1545]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S2, V1545]

================================

Block 0x1062
[0x1062:0x1064]
---
Predecessors: [0xfdc, 0x1048]
Successors: [0x1065]
---
0x1062 JUMPDEST
0x1063 SWAP5
0x1064 POP
---
0x1062: JUMPDEST 
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, 0x0, V1396, V1397, V1434, S1, S0]
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, S0, V1396, V1397, V1434, S1]

================================

Block 0x1065
[0x1065:0x1071]
---
Predecessors: [0x1062]
Successors: [0x1f1, 0x475]
---
0x1065 JUMPDEST
0x1066 POP
0x1067 POP
0x1068 POP
0x1069 POP
0x106a SWAP6
0x106b SWAP5
0x106c POP
0x106d POP
0x106e POP
0x106f POP
0x1070 POP
0x1071 JUMP
---
0x1065: JUMPDEST 
0x1071: JUMP 0x475
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, V111, 0x475, V101, V103, V107, V109, V111, S4, V1396, V1397, V1434, S0]
Stack pops: 11
Stack additions: [S4]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, V111, S4]

================================

Block 0x1072
[0x1072:0x1081]
---
Predecessors: [0x366]
Successors: [0x1082]
---
0x1072 JUMPDEST
0x1073 PUSH1 0x0
0x1075 DUP2
0x1076 DUP2
0x1077 MSTORE
0x1078 PUSH1 0x1
0x107a PUSH1 0x20
0x107c MSTORE
0x107d PUSH1 0x40
0x107f DUP2
0x1080 SHA3
0x1081 DUP2
---
0x1072: JUMPDEST 
0x1073: V1546 = 0x0
0x1077: M[0x0] = V339
0x1078: V1547 = 0x1
0x107a: V1548 = 0x20
0x107c: M[0x20] = 0x1
0x107d: V1549 = 0x40
0x1080: V1550 = SHA3 0x0 0x40
---
Entry stack: [V12, 0x1f1, V339]
Stack pops: 1
Stack additions: [S0, 0x0, V1550, 0x0]
Exit stack: [V12, 0x1f1, V339, 0x0, V1550, 0x0]

================================

Block 0x1082
[0x1082:0x1093]
---
Predecessors: [0x1072]
Successors: [0x1094, 0x1095]
---
0x1082 JUMPDEST
0x1083 PUSH1 0x5
0x1085 DUP3
0x1086 ADD
0x1087 SLOAD
0x1088 PUSH1 0xff
0x108a AND
0x108b PUSH1 0x2
0x108d DUP2
0x108e GT
0x108f ISZERO
0x1090 PUSH2 0x1095
0x1093 JUMPI
---
0x1082: JUMPDEST 
0x1083: V1551 = 0x5
0x1086: V1552 = ADD V1550 0x5
0x1087: V1553 = S[V1552]
0x1088: V1554 = 0xff
0x108a: V1555 = AND 0xff V1553
0x108b: V1556 = 0x2
0x108e: V1557 = GT V1555 0x2
0x108f: V1558 = ISZERO V1557
0x1090: V1559 = 0x1095
0x1093: JUMPI 0x1095 V1558
---
Entry stack: [V12, 0x1f1, V339, 0x0, V1550, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V1555]
Exit stack: [V12, 0x1f1, V339, 0x0, V1550, 0x0, V1555]

================================

Block 0x1094
[0x1094:0x1094]
---
Predecessors: [0x1082]
Successors: []
---
0x1094 INVALID
---
0x1094: INVALID 
---
Entry stack: [V12, 0x1f1, V339, 0x0, V1550, 0x0, V1555]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f1, V339, 0x0, V1550, 0x0, V1555]

================================

Block 0x1095
[0x1095:0x109c]
---
Predecessors: [0x1082]
Successors: [0x109d, 0x10a6]
---
0x1095 JUMPDEST
0x1096 EQ
0x1097 DUP1
0x1098 ISZERO
0x1099 PUSH2 0x10a6
0x109c JUMPI
---
0x1095: JUMPDEST 
0x1096: V1560 = EQ V1555 0x0
0x1098: V1561 = ISZERO V1560
0x1099: V1562 = 0x10a6
0x109c: JUMPI 0x10a6 V1561
---
Entry stack: [V12, 0x1f1, V339, 0x0, V1550, 0x0, V1555]
Stack pops: 2
Stack additions: [V1560]
Exit stack: [V12, 0x1f1, V339, 0x0, V1550, V1560]

================================

Block 0x109d
[0x109d:0x10a5]
---
Predecessors: [0x1095]
Successors: [0x10a6]
---
0x109d POP
0x109e TIMESTAMP
0x109f DUP2
0x10a0 PUSH1 0x6
0x10a2 ADD
0x10a3 SLOAD
0x10a4 LT
0x10a5 ISZERO
---
0x109e: V1563 = TIMESTAMP
0x10a0: V1564 = 0x6
0x10a2: V1565 = ADD 0x6 V1550
0x10a3: V1566 = S[V1565]
0x10a4: V1567 = LT V1566 V1563
0x10a5: V1568 = ISZERO V1567
---
Entry stack: [V12, 0x1f1, V339, 0x0, V1550, V1560]
Stack pops: 2
Stack additions: [S1, V1568]
Exit stack: [V12, 0x1f1, V339, 0x0, V1550, V1568]

================================

Block 0x10a6
[0x10a6:0x10a8]
---
Predecessors: [0x1095, 0x109d]
Successors: [0x10a9]
---
0x10a6 JUMPDEST
0x10a7 SWAP2
0x10a8 POP
---
0x10a6: JUMPDEST 
---
Entry stack: [V12, 0x1f1, V339, 0x0, V1550, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0x1f1, V339, S0, V1550]

================================

Block 0x10a9
[0x10a9:0x10ae]
---
Predecessors: [0x10a6]
Successors: [0x1f1]
---
0x10a9 JUMPDEST
0x10aa POP
0x10ab SWAP2
0x10ac SWAP1
0x10ad POP
0x10ae JUMP
---
0x10a9: JUMPDEST 
0x10ae: JUMP 0x1f1
---
Entry stack: [V12, 0x1f1, V339, S1, V1550]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, S1]

================================

Block 0x10af
[0x10af:0x10c2]
---
Predecessors: []
Successors: [0x9f7]
---
0x10af JUMPDEST
0x10b0 PUSH1 0x0
0x10b2 DUP2
0x10b3 DUP2
0x10b4 MSTORE
0x10b5 PUSH1 0x1
0x10b7 PUSH1 0x20
0x10b9 MSTORE
0x10ba PUSH1 0x40
0x10bc DUP2
0x10bd SHA3
0x10be DUP2
0x10bf PUSH2 0x9f7
0x10c2 JUMP
---
0x10af: JUMPDEST 
0x10b0: V1569 = 0x0
0x10b4: M[0x0] = S0
0x10b5: V1570 = 0x1
0x10b7: V1571 = 0x20
0x10b9: M[0x20] = 0x1
0x10ba: V1572 = 0x40
0x10bd: V1573 = SHA3 0x0 0x40
0x10bf: V1574 = 0x9f7
0x10c2: JUMP 0x9f7
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, 0x0, V1573, 0x0]
Exit stack: [S0, 0x0, V1573, 0x0]

================================

Block 0x10c3
[0x10c3:0x10d4]
---
Predecessors: []
Successors: [0xa0a, 0x10d5]
---
0x10c3 JUMPDEST
0x10c4 PUSH1 0x5
0x10c6 DUP3
0x10c7 ADD
0x10c8 SLOAD
0x10c9 PUSH1 0xff
0x10cb AND
0x10cc PUSH1 0x2
0x10ce DUP2
0x10cf GT
0x10d0 ISZERO
0x10d1 PUSH2 0xa0a
0x10d4 JUMPI
---
0x10c3: JUMPDEST 
0x10c4: V1575 = 0x5
0x10c7: V1576 = ADD S1 0x5
0x10c8: V1577 = S[V1576]
0x10c9: V1578 = 0xff
0x10cb: V1579 = AND 0xff V1577
0x10cc: V1580 = 0x2
0x10cf: V1581 = GT V1579 0x2
0x10d0: V1582 = ISZERO V1581
0x10d1: V1583 = 0xa0a
0x10d4: JUMPI 0xa0a V1582
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0, V1579]
Exit stack: [S1, S0, V1579]

================================

Block 0x10d5
[0x10d5:0x10dd]
---
Predecessors: [0x10c3]
Successors: [0x9dd, 0x10de]
---
0x10d5 INVALID
0x10d6 JUMPDEST
0x10d7 EQ
0x10d8 DUP1
0x10d9 ISZERO
0x10da PUSH2 0x9dd
0x10dd JUMPI
---
0x10d5: INVALID 
0x10d6: JUMPDEST 
0x10d7: V1584 = EQ S0 S1
0x10d9: V1585 = ISZERO V1584
0x10da: V1586 = 0x9dd
0x10dd: JUMPI 0x9dd V1585
---
Entry stack: [S2, S1, V1579]
Stack pops: 0
Stack additions: [V1584]
Exit stack: []

================================

Block 0x10de
[0x10de:0x10ee]
---
Predecessors: [0x10d5]
Successors: [0x10ef]
---
0x10de POP
0x10df DUP1
0x10e0 SLOAD
0x10e1 PUSH1 0x1
0x10e3 PUSH1 0xa0
0x10e5 PUSH1 0x2
0x10e7 EXP
0x10e8 SUB
0x10e9 DUP6
0x10ea DUP2
0x10eb AND
0x10ec SWAP2
0x10ed AND
0x10ee EQ
---
0x10e0: V1587 = S[S1]
0x10e1: V1588 = 0x1
0x10e3: V1589 = 0xa0
0x10e5: V1590 = 0x2
0x10e7: V1591 = EXP 0x2 0xa0
0x10e8: V1592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10eb: V1593 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x10ed: V1594 = AND V1587 0xffffffffffffffffffffffffffffffffffffffff
0x10ee: V1595 = EQ V1594 V1593
---
Entry stack: [V1584]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V1595]
Exit stack: [S3, S2, S1, S0, V1595]

================================

Block 0x10ef
[0x10ef:0x10f1]
---
Predecessors: [0x10de]
Successors: [0x10f2]
---
0x10ef JUMPDEST
0x10f0 SWAP2
0x10f1 POP
---
0x10ef: JUMPDEST 
---
Entry stack: [S4, S3, S2, S1, V1595]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [S4, S3, V1595, S1]

================================

Block 0x10f2
[0x10f2:0x10f8]
---
Predecessors: [0x10ef]
Successors: []
Has unresolved jump.
---
0x10f2 JUMPDEST
0x10f3 POP
0x10f4 SWAP3
0x10f5 SWAP2
0x10f6 POP
0x10f7 POP
0x10f8 JUMP
---
0x10f2: JUMPDEST 
0x10f8: JUMP S4
---
Entry stack: [S3, S2, V1595, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V1595]

================================

Block 0x10f9
[0x10f9:0x110b]
---
Predecessors: [0x3c6]
Successors: [0x110c]
---
0x10f9 JUMPDEST
0x10fa PUSH1 0x0
0x10fc DUP2
0x10fd DUP2
0x10fe MSTORE
0x10ff PUSH1 0x1
0x1101 PUSH1 0x20
0x1103 MSTORE
0x1104 PUSH1 0x40
0x1106 SWAP1
0x1107 SHA3
0x1108 PUSH1 0x7
0x110a ADD
0x110b SLOAD
---
0x10f9: JUMPDEST 
0x10fa: V1596 = 0x0
0x10fe: M[0x0] = V381
0x10ff: V1597 = 0x1
0x1101: V1598 = 0x20
0x1103: M[0x20] = 0x1
0x1104: V1599 = 0x40
0x1107: V1600 = SHA3 0x0 0x40
0x1108: V1601 = 0x7
0x110a: V1602 = ADD 0x7 V1600
0x110b: V1603 = S[V1602]
---
Entry stack: [V12, 0x1a5, V381]
Stack pops: 1
Stack additions: [S0, V1603]
Exit stack: [V12, 0x1a5, V381, V1603]

================================

Block 0x110c
[0x110c:0x1110]
---
Predecessors: [0x10f9]
Successors: [0x1a5]
---
0x110c JUMPDEST
0x110d SWAP2
0x110e SWAP1
0x110f POP
0x1110 JUMP
---
0x110c: JUMPDEST 
0x1110: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5, V381, V1603]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1603]

================================

Block 0x1111
[0x1111:0x1123]
---
Predecessors: [0x3ee]
Successors: [0x1124]
---
0x1111 JUMPDEST
0x1112 PUSH1 0x0
0x1114 DUP2
0x1115 DUP2
0x1116 MSTORE
0x1117 PUSH1 0x1
0x1119 PUSH1 0x20
0x111b MSTORE
0x111c PUSH1 0x40
0x111e SWAP1
0x111f SHA3
0x1120 PUSH1 0x6
0x1122 ADD
0x1123 SLOAD
---
0x1111: JUMPDEST 
0x1112: V1604 = 0x0
0x1116: M[0x0] = V396
0x1117: V1605 = 0x1
0x1119: V1606 = 0x20
0x111b: M[0x20] = 0x1
0x111c: V1607 = 0x40
0x111f: V1608 = SHA3 0x0 0x40
0x1120: V1609 = 0x6
0x1122: V1610 = ADD 0x6 V1608
0x1123: V1611 = S[V1610]
---
Entry stack: [V12, 0x1a5, V396]
Stack pops: 1
Stack additions: [S0, V1611]
Exit stack: [V12, 0x1a5, V396, V1611]

================================

Block 0x1124
[0x1124:0x1128]
---
Predecessors: [0x1111]
Successors: [0x1a5]
---
0x1124 JUMPDEST
0x1125 SWAP2
0x1126 SWAP1
0x1127 POP
0x1128 JUMP
---
0x1124: JUMPDEST 
0x1128: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5, V396, V1611]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1611]

================================

Block 0x1129
[0x1129:0x113f]
---
Predecessors: [0x416]
Successors: [0x1140, 0x1144]
---
0x1129 JUMPDEST
0x112a PUSH1 0x0
0x112c SLOAD
0x112d CALLER
0x112e PUSH1 0x1
0x1130 PUSH1 0xa0
0x1132 PUSH1 0x2
0x1134 EXP
0x1135 SUB
0x1136 SWAP1
0x1137 DUP2
0x1138 AND
0x1139 SWAP2
0x113a AND
0x113b EQ
0x113c PUSH2 0x1144
0x113f JUMPI
---
0x1129: JUMPDEST 
0x112a: V1612 = 0x0
0x112c: V1613 = S[0x0]
0x112d: V1614 = CALLER
0x112e: V1615 = 0x1
0x1130: V1616 = 0xa0
0x1132: V1617 = 0x2
0x1134: V1618 = EXP 0x2 0xa0
0x1135: V1619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1138: V1620 = AND 0xffffffffffffffffffffffffffffffffffffffff V1614
0x113a: V1621 = AND V1613 0xffffffffffffffffffffffffffffffffffffffff
0x113b: V1622 = EQ V1621 V1620
0x113c: V1623 = 0x1144
0x113f: JUMPI 0x1144 V1622
---
Entry stack: [V12, 0x15a, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V417]

================================

Block 0x1140
[0x1140:0x1143]
---
Predecessors: [0x1129]
Successors: []
---
0x1140 PUSH1 0x0
0x1142 DUP1
0x1143 REVERT
---
0x1140: V1624 = 0x0
0x1143: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V417]

================================

Block 0x1144
[0x1144:0x1153]
---
Predecessors: [0x1129]
Successors: [0xa5f, 0x1154]
---
0x1144 JUMPDEST
0x1145 PUSH1 0x1
0x1147 PUSH1 0xa0
0x1149 PUSH1 0x2
0x114b EXP
0x114c SUB
0x114d DUP2
0x114e AND
0x114f ISZERO
0x1150 PUSH2 0xa5f
0x1153 JUMPI
---
0x1144: JUMPDEST 
0x1145: V1625 = 0x1
0x1147: V1626 = 0xa0
0x1149: V1627 = 0x2
0x114b: V1628 = EXP 0x2 0xa0
0x114c: V1629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114e: V1630 = AND V417 0xffffffffffffffffffffffffffffffffffffffff
0x114f: V1631 = ISZERO V1630
0x1150: V1632 = 0xa5f
0x1153: JUMPI 0xa5f V1631
---
Entry stack: [V12, 0x15a, V417]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V417]

================================

Block 0x1154
[0x1154:0x117b]
---
Predecessors: [0x1144]
Successors: [0x117c]
---
0x1154 PUSH1 0x0
0x1156 DUP1
0x1157 SLOAD
0x1158 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116d NOT
0x116e AND
0x116f PUSH1 0x1
0x1171 PUSH1 0xa0
0x1173 PUSH1 0x2
0x1175 EXP
0x1176 SUB
0x1177 DUP4
0x1178 AND
0x1179 OR
0x117a SWAP1
0x117b SSTORE
---
0x1154: V1633 = 0x0
0x1157: V1634 = S[0x0]
0x1158: V1635 = 0xffffffffffffffffffffffffffffffffffffffff
0x116d: V1636 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x116e: V1637 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1634
0x116f: V1638 = 0x1
0x1171: V1639 = 0xa0
0x1173: V1640 = 0x2
0x1175: V1641 = EXP 0x2 0xa0
0x1176: V1642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1178: V1643 = AND V417 0xffffffffffffffffffffffffffffffffffffffff
0x1179: V1644 = OR V1643 V1637
0x117b: S[0x0] = V1644
---
Entry stack: [V12, 0x15a, V417]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V417]

================================

Block 0x117c
[0x117c:0x117c]
---
Predecessors: [0x1154]
Successors: [0x117d]
---
0x117c JUMPDEST
---
0x117c: JUMPDEST 
---
Entry stack: [V12, 0x15a, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V417]

================================

Block 0x117d
[0x117d:0x117d]
---
Predecessors: [0x117c]
Successors: [0x117e]
---
0x117d JUMPDEST
---
0x117d: JUMPDEST 
---
Entry stack: [V12, 0x15a, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V417]

================================

Block 0x117e
[0x117e:0x1180]
---
Predecessors: [0x117d]
Successors: [0x15a]
---
0x117e JUMPDEST
0x117f POP
0x1180 JUMP
---
0x117e: JUMPDEST 
0x1180: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V417]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1181
[0x1181:0x1197]
---
Predecessors: [0x437]
Successors: [0x1198, 0x119c]
---
0x1181 JUMPDEST
0x1182 PUSH1 0x0
0x1184 SLOAD
0x1185 CALLER
0x1186 PUSH1 0x1
0x1188 PUSH1 0xa0
0x118a PUSH1 0x2
0x118c EXP
0x118d SUB
0x118e SWAP1
0x118f DUP2
0x1190 AND
0x1191 SWAP2
0x1192 AND
0x1193 EQ
0x1194 PUSH2 0x119c
0x1197 JUMPI
---
0x1181: JUMPDEST 
0x1182: V1645 = 0x0
0x1184: V1646 = S[0x0]
0x1185: V1647 = CALLER
0x1186: V1648 = 0x1
0x1188: V1649 = 0xa0
0x118a: V1650 = 0x2
0x118c: V1651 = EXP 0x2 0xa0
0x118d: V1652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1190: V1653 = AND 0xffffffffffffffffffffffffffffffffffffffff V1647
0x1192: V1654 = AND V1646 0xffffffffffffffffffffffffffffffffffffffff
0x1193: V1655 = EQ V1654 V1653
0x1194: V1656 = 0x119c
0x1197: JUMPI 0x119c V1655
---
Entry stack: [V12, 0x15a, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V431]

================================

Block 0x1198
[0x1198:0x119b]
---
Predecessors: [0x1181]
Successors: []
---
0x1198 PUSH1 0x0
0x119a DUP1
0x119b REVERT
---
0x1198: V1657 = 0x0
0x119b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V431]

================================

Block 0x119c
[0x119c:0x11a7]
---
Predecessors: [0x1181]
Successors: []
---
0x119c JUMPDEST
0x119d DUP1
0x119e PUSH1 0x1
0x11a0 PUSH1 0xa0
0x11a2 PUSH1 0x2
0x11a4 EXP
0x11a5 SUB
0x11a6 AND
0x11a7 SELFDESTRUCT
---
0x119c: JUMPDEST 
0x119e: V1658 = 0x1
0x11a0: V1659 = 0xa0
0x11a2: V1660 = 0x2
0x11a4: V1661 = EXP 0x2 0xa0
0x11a5: V1662 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a6: V1663 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x11a7: SELFDESTRUCT V1663
---
Entry stack: [V12, 0x15a, V431]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V431]

================================

Block 0x11a8
[0x11a8:0x11a8]
---
Predecessors: []
Successors: [0x11a9]
---
0x11a8 JUMPDEST
---
0x11a8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11a9
[0x11a9:0x11ab]
---
Predecessors: [0x11a8]
Successors: []
Has unresolved jump.
---
0x11a9 JUMPDEST
0x11aa POP
0x11ab JUMP
---
0x11a9: JUMPDEST 
0x11ab: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x11ac
[0x11ac:0x11bd]
---
Predecessors: [0xe8e]
Successors: [0xe99]
---
0x11ac JUMPDEST
0x11ad PUSH1 0x20
0x11af PUSH1 0x40
0x11b1 MLOAD
0x11b2 SWAP1
0x11b3 DUP2
0x11b4 ADD
0x11b5 PUSH1 0x40
0x11b7 MSTORE
0x11b8 PUSH1 0x0
0x11ba DUP2
0x11bb MSTORE
0x11bc SWAP1
0x11bd JUMP
---
0x11ac: JUMPDEST 
0x11ad: V1664 = 0x20
0x11af: V1665 = 0x40
0x11b1: V1666 = M[0x40]
0x11b4: V1667 = ADD V1666 0x20
0x11b5: V1668 = 0x40
0x11b7: M[0x40] = V1667
0x11b8: V1669 = 0x0
0x11bb: M[V1666] = 0x0
0x11bd: JUMP 0xe99
---
Entry stack: [V12, 0x15a, V101, V103, V107, V109, S9, {0x1f1, 0x475}, S7, S6, S5, S4, S3, 0x0, 0x0, 0xe99]
Stack pops: 1
Stack additions: [V1666]
Exit stack: [V12, 0x15a, V101, V103, V107, V109, S9, {0x1f1, 0x475}, S7, S6, S5, S4, S3, 0x0, 0x0, V1666]

================================

Block 0x11be
[0x11be:0x11e9]
---
Predecessors: []
Successors: []
---
0x11be STOP
0x11bf LOG1
0x11c0 PUSH6 0x627a7a723058
0x11c7 SHA3
0x11c8 BLOCKHASH
0x11c9 MISSING 0xe3
0x11ca RETURNDATACOPY
0x11cb MISSING 0xd
0x11cc SWAP4
0x11cd CALLVALUE
0x11ce DUP9
0x11cf DUP6
0x11d0 OR
0x11d1 SHR
0x11d2 MISSING 0xf9
0x11d3 MISSING 0x1e
0x11d4 SWAP14
0x11d5 SWAP3
0x11d6 PUSH7 0x6674492b39d850
0x11de MISSING 0xdc
0x11df MISSING 0xe6
0x11e0 SWAP1
0x11e1 MISSING 0xef
0x11e2 DUP16
0x11e3 MISSING 0xd1
0x11e4 MISSING 0x23
0x11e5 MISSING 0xd4
0x11e6 SWAP1
0x11e7 MISSING 0xae
0x11e8 STOP
0x11e9 MISSING 0x29
---
0x11be: STOP 
0x11bf: LOG S0 S1 S2
0x11c0: V1670 = 0x627a7a723058
0x11c7: V1671 = SHA3 0x627a7a723058 S3
0x11c8: V1672 = BLOCKHASH V1671
0x11c9: MISSING 0xe3
0x11ca: RETURNDATACOPY S0 S1 S2
0x11cb: MISSING 0xd
0x11cd: V1673 = CALLVALUE
0x11d0: V1674 = OR S3 S7
0x11d1: V1675 = SHR V1674 V1673
0x11d2: MISSING 0xf9
0x11d3: MISSING 0x1e
0x11d6: V1676 = 0x6674492b39d850
0x11de: MISSING 0xdc
0x11df: MISSING 0xe6
0x11e1: MISSING 0xef
0x11e3: MISSING 0xd1
0x11e4: MISSING 0x23
0x11e5: MISSING 0xd4
0x11e7: MISSING 0xae
0x11e8: STOP 
0x11e9: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1672, V1675, S4, S1, S2, S3, S0, S5, S6, S7, 0x6674492b39d850, S3, S1, S2, S14, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S1, S0, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S1, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x9648a9d
Entry block: 0xfb
Exit block: 0x121
Body: 0xfb, 0x102, 0x106, 0x111, 0x120, 0x121, 0x44d, 0x463

Function 1:
Public function signature: 0x12921758
Entry block: 0x135
Exit block: 0x15a
Body: 0x135, 0x13c, 0x140, 0x15a, 0x468, 0x475, 0x47c, 0x480, 0x48a, 0x48b

Function 2:
Public function signature: 0x1de26e16
Entry block: 0x15c
Exit block: 0x15a
Body: 0x15a, 0x15c, 0x163, 0x167, 0x492, 0x49f, 0x4a6, 0x4aa, 0x52f, 0x533, 0x540, 0x544, 0x555, 0x559, 0x598

Function 3:
Public function signature: 0x2b0109be
Entry block: 0x177
Exit block: 0x1a5
Body: 0x177, 0x17e, 0x182, 0x1a5, 0x59e, 0x658, 0x65c, 0x669, 0x66d, 0x67e, 0x682, 0x6d4, 0x6d5, 0x7b8, 0x7b9, 0x83f

Function 4:
Public function signature: 0x39c79e0c
Entry block: 0x1b7
Exit block: 0x905
Body: 0x15a, 0x1b7, 0x1be, 0x1c2, 0x84b, 0x85c, 0x86e, 0x86f, 0x877, 0x88f, 0x8a1, 0x8a7, 0x8bc, 0x8bd, 0x8c3, 0x8d0, 0x905, 0x909, 0x90a, 0x972, 0x973

Function 5:
Public function signature: 0x3c46f72f
Entry block: 0x1cf
Exit block: 0x1d6
Body: 0x1cf, 0x1d6, 0x1da, 0x1f1

Function 6:
Public function signature: 0x68b45a2c
Entry block: 0x205
Exit block: 0x20c
Body: 0x1f1, 0x205, 0x20c, 0x210

Function 7:
Public function signature: 0x75f99680
Entry block: 0x23b
Exit block: 0x15a
Body: 0x15a, 0x23b, 0x242, 0x246, 0xa2d, 0xa37, 0xa3e, 0xa42, 0xa5f, 0xa60

Function 8:
Public function signature: 0x79f48d4c
Entry block: 0x253
Exit block: 0x15a
Body: 0x15a, 0x253, 0x25a, 0x25e

Function 9:
Public function signature: 0x83197ef0
Entry block: 0x26e
Exit block: 0xcd2
Body: 0x26e, 0x275, 0x279, 0xcbb, 0xcd2, 0xcd6

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x283
Exit block: 0x296
Body: 0x283, 0x28a, 0x28e, 0x296, 0xce7

Function 11:
Public function signature: 0x9a851616
Entry block: 0x2b2
Exit block: 0x1f1
Body: 0x1f1, 0x2b2, 0x2b9, 0x2bd, 0xcf6, 0xd62, 0xd66, 0xdd2, 0xdd6, 0xdf6

Function 12:
Public function signature: 0xab40428e
Entry block: 0x307
Exit block: 0x15a
Body: 0x15a, 0x307, 0x30e, 0x312, 0xe03, 0xe0f, 0xe16, 0xe1a, 0xe3c, 0xe89

Function 13:
Public function signature: 0xbaa77746
Entry block: 0x322
Exit block: 0x1f1
Body: 0x1f1, 0x322, 0x329, 0x32d

Function 14:
Public function signature: 0xd0fa96ba
Entry block: 0x35b
Exit block: 0x1f1
Body: 0x1f1, 0x35b, 0x362, 0x366, 0x1072, 0x1082, 0x1094, 0x1095, 0x109d, 0x10a6, 0x10a9

Function 15:
Public function signature: 0xe20bff5c
Entry block: 0x205
Exit block: 0x20c
Body: 0x1f1, 0x205, 0x20c, 0x210

Function 16:
Public function signature: 0xe66eefc8
Entry block: 0x3bb
Exit block: 0x1a5
Body: 0x1a5, 0x3bb, 0x3c2, 0x3c6, 0x10f9, 0x110c

Function 17:
Public function signature: 0xf03cd5ca
Entry block: 0x3e3
Exit block: 0x1a5
Body: 0x1a5, 0x3e3, 0x3ea, 0x3ee, 0x1111, 0x1124

Function 18:
Public function signature: 0xf2fde38b
Entry block: 0x40b
Exit block: 0x15a
Body: 0x15a, 0x40b, 0x412, 0x416, 0xa5f, 0xa60, 0x1129, 0x1140, 0x1144, 0x1154, 0x117c, 0x117d, 0x117e

Function 19:
Public function signature: 0xf5074f41
Entry block: 0x42c
Exit block: 0x119c
Body: 0x42c, 0x433, 0x437, 0x1181, 0x1198, 0x119c

Function 20:
Public fallback function
Entry block: 0xf6
Exit block: 0xf6
Body: 0xf6

Function 21:
Private function
Entry block: 0x9e7
Exit block: 0xa26
Body: 0x9dd, 0x9e0, 0x9e7, 0x9f7, 0xa0a, 0xa12, 0xa23, 0xa26

Function 22:
Private function
Entry block: 0xa63
Exit block: 0xcb3
Body: 0xa63, 0xa93, 0xaff, 0xb10, 0xb25, 0xb2a, 0xb8f, 0xba0, 0xbb5, 0xc22, 0xc33, 0xc48, 0xc50, 0xc72, 0xcb3

Function 23:
Private function
Entry block: 0xe8e
Exit block: 0x1065
Body: 0xe8e, 0xe99, 0xf53, 0xf5c, 0xf60, 0xf73, 0xfaa, 0xfbd, 0xfc4, 0xfc7, 0xfda, 0xfdc, 0xfe3, 0x1048, 0x1062, 0x1065, 0x11ac

Function 24:
Private function
Entry block: 0x977
Exit block: 0x9e0
Body: 0x977, 0x989, 0x99c, 0x9a4, 0x9ba, 0x9cc, 0x9cd, 0x9d4, 0x9dd, 0x9e0

