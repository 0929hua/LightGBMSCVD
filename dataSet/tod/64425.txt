Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x55]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x92a5cce
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x55
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x92a5cce
0x22: V15 = EQ V13 0x92a5cce
0x23: V16 = 0x55
0x26: JUMPI 0x55 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x6a]
---
0x27 DUP1
0x28 PUSH4 0x3c059027
0x2d EQ
0x2e PUSH2 0x6a
0x31 JUMPI
---
0x28: V17 = 0x3c059027
0x2d: V18 = EQ 0x3c059027 V13
0x2e: V19 = 0x6a
0x31: JUMPI 0x6a V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x8b]
---
0x32 DUP1
0x33 PUSH4 0x3ccfd60b
0x38 EQ
0x39 PUSH2 0x8b
0x3c JUMPI
---
0x33: V20 = 0x3ccfd60b
0x38: V21 = EQ 0x3ccfd60b V13
0x39: V22 = 0x8b
0x3c: JUMPI 0x8b V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xa0]
---
0x3d DUP1
0x3e PUSH4 0x89476069
0x43 EQ
0x44 PUSH2 0xa0
0x47 JUMPI
---
0x3e: V23 = 0x89476069
0x43: V24 = EQ 0x89476069 V13
0x44: V25 = 0xa0
0x47: JUMPI 0xa0 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xc1]
---
0x48 DUP1
0x49 PUSH4 0x8a8bddb9
0x4e EQ
0x4f PUSH2 0xc1
0x52 JUMPI
---
0x49: V26 = 0x8a8bddb9
0x4e: V27 = EQ 0x8a8bddb9 V13
0x4f: V28 = 0xc1
0x52: JUMPI 0xc1 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x54]
---
Predecessors: [0x0, 0x48, 0x362, 0x3b9]
Successors: []
---
0x53 JUMPDEST
0x54 STOP
---
0x53: JUMPDEST 
0x54: STOP 
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S0]

================================

Block 0x55
[0x55:0x5c]
---
Predecessors: [0xd]
Successors: [0x5d, 0x61]
---
0x55 JUMPDEST
0x56 CALLVALUE
0x57 DUP1
0x58 ISZERO
0x59 PUSH2 0x61
0x5c JUMPI
---
0x55: JUMPDEST 
0x56: V29 = CALLVALUE
0x58: V30 = ISZERO V29
0x59: V31 = 0x61
0x5c: JUMPI 0x61 V30
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V29]
Exit stack: [V13, V29]

================================

Block 0x5d
[0x5d:0x60]
---
Predecessors: [0x55]
Successors: []
---
0x5d PUSH1 0x0
0x5f DUP1
0x60 REVERT
---
0x5d: V32 = 0x0
0x60: REVERT 0x0 0x0
---
Entry stack: [V13, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V29]

================================

Block 0x61
[0x61:0x69]
---
Predecessors: [0x55]
Successors: [0x10f]
---
0x61 JUMPDEST
0x62 POP
0x63 PUSH2 0x53
0x66 PUSH2 0x10f
0x69 JUMP
---
0x61: JUMPDEST 
0x63: V33 = 0x53
0x66: V34 = 0x10f
0x69: JUMP 0x10f
---
Entry stack: [V13, V29]
Stack pops: 1
Stack additions: [0x53]
Exit stack: [V13, 0x53]

================================

Block 0x6a
[0x6a:0x71]
---
Predecessors: [0x27]
Successors: [0x72, 0x76]
---
0x6a JUMPDEST
0x6b CALLVALUE
0x6c DUP1
0x6d ISZERO
0x6e PUSH2 0x76
0x71 JUMPI
---
0x6a: JUMPDEST 
0x6b: V35 = CALLVALUE
0x6d: V36 = ISZERO V35
0x6e: V37 = 0x76
0x71: JUMPI 0x76 V36
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V13, V35]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x6a]
Successors: []
---
0x72 PUSH1 0x0
0x74 DUP1
0x75 REVERT
---
0x72: V38 = 0x0
0x75: REVERT 0x0 0x0
---
Entry stack: [V13, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V35]

================================

Block 0x76
[0x76:0x8a]
---
Predecessors: [0x6a]
Successors: [0x134]
---
0x76 JUMPDEST
0x77 POP
0x78 PUSH2 0x53
0x7b PUSH1 0x1
0x7d PUSH1 0xa0
0x7f PUSH1 0x2
0x81 EXP
0x82 SUB
0x83 PUSH1 0x4
0x85 CALLDATALOAD
0x86 AND
0x87 PUSH2 0x134
0x8a JUMP
---
0x76: JUMPDEST 
0x78: V39 = 0x53
0x7b: V40 = 0x1
0x7d: V41 = 0xa0
0x7f: V42 = 0x2
0x81: V43 = EXP 0x2 0xa0
0x82: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83: V45 = 0x4
0x85: V46 = CALLDATALOAD 0x4
0x86: V47 = AND V46 0xffffffffffffffffffffffffffffffffffffffff
0x87: V48 = 0x134
0x8a: JUMP 0x134
---
Entry stack: [V13, V35]
Stack pops: 1
Stack additions: [0x53, V47]
Exit stack: [V13, 0x53, V47]

================================

Block 0x8b
[0x8b:0x92]
---
Predecessors: [0x32]
Successors: [0x93, 0x97]
---
0x8b JUMPDEST
0x8c CALLVALUE
0x8d DUP1
0x8e ISZERO
0x8f PUSH2 0x97
0x92 JUMPI
---
0x8b: JUMPDEST 
0x8c: V49 = CALLVALUE
0x8e: V50 = ISZERO V49
0x8f: V51 = 0x97
0x92: JUMPI 0x97 V50
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V13, V49]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x8b]
Successors: []
---
0x93 PUSH1 0x0
0x95 DUP1
0x96 REVERT
---
0x93: V52 = 0x0
0x96: REVERT 0x0 0x0
---
Entry stack: [V13, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V49]

================================

Block 0x97
[0x97:0x9f]
---
Predecessors: [0x8b]
Successors: [0x368]
---
0x97 JUMPDEST
0x98 POP
0x99 PUSH2 0x53
0x9c PUSH2 0x368
0x9f JUMP
---
0x97: JUMPDEST 
0x99: V53 = 0x53
0x9c: V54 = 0x368
0x9f: JUMP 0x368
---
Entry stack: [V13, V49]
Stack pops: 1
Stack additions: [0x53]
Exit stack: [V13, 0x53]

================================

Block 0xa0
[0xa0:0xa7]
---
Predecessors: [0x3d]
Successors: [0xa8, 0xac]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 DUP1
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa0: JUMPDEST 
0xa1: V55 = CALLVALUE
0xa3: V56 = ISZERO V55
0xa4: V57 = 0xac
0xa7: JUMPI 0xac V56
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V13, V55]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa0]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V58 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V13, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V55]

================================

Block 0xac
[0xac:0xc0]
---
Predecessors: [0xa0]
Successors: [0x3bc]
---
0xac JUMPDEST
0xad POP
0xae PUSH2 0x53
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 PUSH1 0x4
0xbb CALLDATALOAD
0xbc AND
0xbd PUSH2 0x3bc
0xc0 JUMP
---
0xac: JUMPDEST 
0xae: V59 = 0x53
0xb1: V60 = 0x1
0xb3: V61 = 0xa0
0xb5: V62 = 0x2
0xb7: V63 = EXP 0x2 0xa0
0xb8: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V65 = 0x4
0xbb: V66 = CALLDATALOAD 0x4
0xbc: V67 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xbd: V68 = 0x3bc
0xc0: JUMP 0x3bc
---
Entry stack: [V13, V55]
Stack pops: 1
Stack additions: [0x53, V67]
Exit stack: [V13, 0x53, V67]

================================

Block 0xc1
[0xc1:0xc8]
---
Predecessors: [0x48]
Successors: [0xc9, 0xcd]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 DUP1
0xc4 ISZERO
0xc5 PUSH2 0xcd
0xc8 JUMPI
---
0xc1: JUMPDEST 
0xc2: V69 = CALLVALUE
0xc4: V70 = ISZERO V69
0xc5: V71 = 0xcd
0xc8: JUMPI 0xcd V70
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V13, V69]

================================

Block 0xc9
[0xc9:0xcc]
---
Predecessors: [0xc1]
Successors: []
---
0xc9 PUSH1 0x0
0xcb DUP1
0xcc REVERT
---
0xc9: V72 = 0x0
0xcc: REVERT 0x0 0x0
---
Entry stack: [V13, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V69]

================================

Block 0xcd
[0xcd:0xfc]
---
Predecessors: [0xc1]
Successors: [0x4c4]
---
0xcd JUMPDEST
0xce POP
0xcf PUSH2 0xfd
0xd2 PUSH1 0xff
0xd4 PUSH1 0x4
0xd6 DUP1
0xd7 CALLDATALOAD
0xd8 DUP3
0xd9 AND
0xda SWAP2
0xdb PUSH1 0x24
0xdd DUP1
0xde CALLDATALOAD
0xdf SWAP1
0xe0 DUP2
0xe1 ADD
0xe2 SWAP3
0xe3 ADD
0xe4 CALLDATALOAD
0xe5 SWAP1
0xe6 PUSH1 0x44
0xe8 SWAP1
0xe9 PUSH1 0xe4
0xeb SWAP1
0xec PUSH2 0x1c4
0xef CALLDATALOAD
0xf0 AND
0xf1 PUSH2 0x1e4
0xf4 CALLDATALOAD
0xf5 PUSH2 0x204
0xf8 CALLDATALOAD
0xf9 PUSH2 0x4c4
0xfc JUMP
---
0xcd: JUMPDEST 
0xcf: V73 = 0xfd
0xd2: V74 = 0xff
0xd4: V75 = 0x4
0xd7: V76 = CALLDATALOAD 0x4
0xd9: V77 = AND 0xff V76
0xdb: V78 = 0x24
0xde: V79 = CALLDATALOAD 0x24
0xe1: V80 = ADD V79 0x24
0xe3: V81 = ADD 0x4 V79
0xe4: V82 = CALLDATALOAD V81
0xe6: V83 = 0x44
0xe9: V84 = 0xe4
0xec: V85 = 0x1c4
0xef: V86 = CALLDATALOAD 0x1c4
0xf0: V87 = AND V86 0xff
0xf1: V88 = 0x1e4
0xf4: V89 = CALLDATALOAD 0x1e4
0xf5: V90 = 0x204
0xf8: V91 = CALLDATALOAD 0x204
0xf9: V92 = 0x4c4
0xfc: JUMP 0x4c4
---
Entry stack: [V13, V69]
Stack pops: 1
Stack additions: [0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91]

================================

Block 0xfd
[0xfd:0x10e]
---
Predecessors: [0x813]
Successors: []
---
0xfd JUMPDEST
0xfe PUSH1 0x40
0x100 DUP1
0x101 MLOAD
0x102 SWAP2
0x103 DUP3
0x104 MSTORE
0x105 MLOAD
0x106 SWAP1
0x107 DUP2
0x108 SWAP1
0x109 SUB
0x10a PUSH1 0x20
0x10c ADD
0x10d SWAP1
0x10e RETURN
---
0xfd: JUMPDEST 
0xfe: V93 = 0x40
0x101: V94 = M[0x40]
0x104: M[V94] = V745
0x105: V95 = M[0x40]
0x109: V96 = SUB V94 V95
0x10a: V97 = 0x20
0x10c: V98 = ADD 0x20 V96
0x10e: RETURN V95 V98
---
Entry stack: [V13, V745]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x10f
[0x10f:0x121]
---
Predecessors: [0x61]
Successors: [0x122, 0x126]
---
0x10f JUMPDEST
0x110 PUSH1 0x2
0x112 SLOAD
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b AND
0x11c CALLER
0x11d EQ
0x11e PUSH2 0x126
0x121 JUMPI
---
0x10f: JUMPDEST 
0x110: V99 = 0x2
0x112: V100 = S[0x2]
0x113: V101 = 0x1
0x115: V102 = 0xa0
0x117: V103 = 0x2
0x119: V104 = EXP 0x2 0xa0
0x11a: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11b: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x11c: V107 = CALLER
0x11d: V108 = EQ V107 V106
0x11e: V109 = 0x126
0x121: JUMPI 0x126 V108
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x10f]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V110 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53]

================================

Block 0x126
[0x126:0x133]
---
Predecessors: [0x10f]
Successors: []
---
0x126 JUMPDEST
0x127 PUSH1 0x2
0x129 SLOAD
0x12a PUSH1 0x1
0x12c PUSH1 0xa0
0x12e PUSH1 0x2
0x130 EXP
0x131 SUB
0x132 AND
0x133 SELFDESTRUCT
---
0x126: JUMPDEST 
0x127: V111 = 0x2
0x129: V112 = S[0x2]
0x12a: V113 = 0x1
0x12c: V114 = 0xa0
0x12e: V115 = 0x2
0x130: V116 = EXP 0x2 0xa0
0x131: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x132: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x133: SELFDESTRUCT V118
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53]

================================

Block 0x134
[0x134:0x149]
---
Predecessors: [0x76, 0x52a]
Successors: [0x14a, 0x14e]
---
0x134 JUMPDEST
0x135 PUSH1 0x2
0x137 SLOAD
0x138 PUSH1 0x0
0x13a SWAP1
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 AND
0x144 CALLER
0x145 EQ
0x146 PUSH2 0x14e
0x149 JUMPI
---
0x134: JUMPDEST 
0x135: V119 = 0x2
0x137: V120 = S[0x2]
0x138: V121 = 0x0
0x13b: V122 = 0x1
0x13d: V123 = 0xa0
0x13f: V124 = 0x2
0x141: V125 = EXP 0x2 0xa0
0x142: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x144: V128 = CALLER
0x145: V129 = EQ V128 V127
0x146: V130 = 0x14e
0x149: JUMPI 0x14e V129
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S2, {0x53, 0x57a}, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S2, {0x53, 0x57a}, S0, 0x0]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0x134]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V131 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S3, {0x53, 0x57a}, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S3, {0x53, 0x57a}, S1, 0x0]

================================

Block 0x14e
[0x14e:0x1a8]
---
Predecessors: [0x134]
Successors: [0x1a9, 0x1ad]
---
0x14e JUMPDEST
0x14f POP
0x150 PUSH1 0x0
0x152 DUP1
0x153 SLOAD
0x154 PUSH1 0x40
0x156 DUP1
0x157 MLOAD
0x158 PUSH1 0xe0
0x15a PUSH1 0x2
0x15c EXP
0x15d PUSH4 0x95ea7b3
0x162 MUL
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x1
0x167 PUSH1 0xa0
0x169 PUSH1 0x2
0x16b EXP
0x16c SUB
0x16d SWAP3
0x16e DUP4
0x16f AND
0x170 PUSH1 0x4
0x172 DUP3
0x173 ADD
0x174 MSTORE
0x175 PUSH1 0x0
0x177 NOT
0x178 PUSH1 0x24
0x17a DUP3
0x17b ADD
0x17c MSTORE
0x17d SWAP1
0x17e MLOAD
0x17f DUP5
0x180 SWAP4
0x181 SWAP3
0x182 DUP5
0x183 AND
0x184 SWAP3
0x185 PUSH4 0x95ea7b3
0x18a SWAP3
0x18b PUSH1 0x44
0x18d DUP1
0x18e DUP3
0x18f ADD
0x190 SWAP4
0x191 PUSH1 0x20
0x193 SWAP4
0x194 SWAP1
0x195 SWAP3
0x196 DUP4
0x197 SWAP1
0x198 SUB
0x199 SWAP1
0x19a SWAP2
0x19b ADD
0x19c SWAP1
0x19d DUP3
0x19e SWAP1
0x19f DUP8
0x1a0 DUP1
0x1a1 EXTCODESIZE
0x1a2 ISZERO
0x1a3 DUP1
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x14e: JUMPDEST 
0x150: V132 = 0x0
0x153: V133 = S[0x0]
0x154: V134 = 0x40
0x157: V135 = M[0x40]
0x158: V136 = 0xe0
0x15a: V137 = 0x2
0x15c: V138 = EXP 0x2 0xe0
0x15d: V139 = 0x95ea7b3
0x162: V140 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x164: M[V135] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x165: V141 = 0x1
0x167: V142 = 0xa0
0x169: V143 = 0x2
0x16b: V144 = EXP 0x2 0xa0
0x16c: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x170: V147 = 0x4
0x173: V148 = ADD V135 0x4
0x174: M[V148] = V146
0x175: V149 = 0x0
0x177: V150 = NOT 0x0
0x178: V151 = 0x24
0x17b: V152 = ADD V135 0x24
0x17c: M[V152] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x17e: V153 = M[0x40]
0x183: V154 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x185: V155 = 0x95ea7b3
0x18b: V156 = 0x44
0x18f: V157 = ADD V135 0x44
0x191: V158 = 0x20
0x198: V159 = SUB V135 V153
0x19b: V160 = ADD 0x44 V159
0x1a1: V161 = EXTCODESIZE V154
0x1a2: V162 = ISZERO V161
0x1a4: V163 = ISZERO V162
0x1a5: V164 = 0x1ad
0x1a8: JUMPI 0x1ad V163
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S3, {0x53, 0x57a}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V154, 0x95ea7b3, V157, 0x20, V153, V160, V153, 0x0, V154, V162]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S3, {0x53, 0x57a}, S1, S1, V154, 0x95ea7b3, V157, 0x20, V153, V160, V153, 0x0, V154, V162]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x14e]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V165 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V154, 0x95ea7b3, V157, 0x20, V153, V160, V153, 0x0, V154, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V154, 0x95ea7b3, V157, 0x20, V153, V160, V153, 0x0, V154, V162]

================================

Block 0x1ad
[0x1ad:0x1b7]
---
Predecessors: [0x14e]
Successors: [0x1b8, 0x1c1]
---
0x1ad JUMPDEST
0x1ae POP
0x1af GAS
0x1b0 CALL
0x1b1 ISZERO
0x1b2 DUP1
0x1b3 ISZERO
0x1b4 PUSH2 0x1c1
0x1b7 JUMPI
---
0x1ad: JUMPDEST 
0x1af: V166 = GAS
0x1b0: V167 = CALL V166 V154 0x0 V153 V160 V153 0x20
0x1b1: V168 = ISZERO V167
0x1b3: V169 = ISZERO V168
0x1b4: V170 = 0x1c1
0x1b7: JUMPI 0x1c1 V169
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V154, 0x95ea7b3, V157, 0x20, V153, V160, V153, 0x0, V154, V162]
Stack pops: 7
Stack additions: [V168]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V154, 0x95ea7b3, V157, V168]

================================

Block 0x1b8
[0x1b8:0x1c0]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b8 RETURNDATASIZE
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc RETURNDATACOPY
0x1bd RETURNDATASIZE
0x1be PUSH1 0x0
0x1c0 REVERT
---
0x1b8: V171 = RETURNDATASIZE
0x1b9: V172 = 0x0
0x1bc: RETURNDATACOPY 0x0 0x0 V171
0x1bd: V173 = RETURNDATASIZE
0x1be: V174 = 0x0
0x1c0: REVERT 0x0 V173
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V168]

================================

Block 0x1c1
[0x1c1:0x1d2]
---
Predecessors: [0x1ad]
Successors: [0x1d3, 0x1d7]
---
0x1c1 JUMPDEST
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 RETURNDATASIZE
0x1ca PUSH1 0x20
0x1cc DUP2
0x1cd LT
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1c1: JUMPDEST 
0x1c6: V175 = 0x40
0x1c8: V176 = M[0x40]
0x1c9: V177 = RETURNDATASIZE
0x1ca: V178 = 0x20
0x1cd: V179 = LT V177 0x20
0x1ce: V180 = ISZERO V179
0x1cf: V181 = 0x1d7
0x1d2: JUMPI 0x1d7 V180
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V168]
Stack pops: 4
Stack additions: [V176, V177]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, V176, V177]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1c1]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V182 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V176, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V176, V177]

================================

Block 0x1d7
[0x1d7:0x22e]
---
Predecessors: [0x1c1]
Successors: [0x22f, 0x233]
---
0x1d7 JUMPDEST
0x1d8 POP
0x1d9 POP
0x1da PUSH1 0x1
0x1dc SLOAD
0x1dd PUSH1 0x40
0x1df DUP1
0x1e0 MLOAD
0x1e1 PUSH1 0xe0
0x1e3 PUSH1 0x2
0x1e5 EXP
0x1e6 PUSH4 0x95ea7b3
0x1eb MUL
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x1
0x1f0 PUSH1 0xa0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SUB
0x1f6 SWAP3
0x1f7 DUP4
0x1f8 AND
0x1f9 PUSH1 0x4
0x1fb DUP3
0x1fc ADD
0x1fd MSTORE
0x1fe PUSH1 0x0
0x200 NOT
0x201 PUSH1 0x24
0x203 DUP3
0x204 ADD
0x205 MSTORE
0x206 SWAP1
0x207 MLOAD
0x208 SWAP2
0x209 DUP4
0x20a AND
0x20b SWAP2
0x20c PUSH4 0x95ea7b3
0x211 SWAP2
0x212 PUSH1 0x44
0x214 DUP1
0x215 DUP3
0x216 ADD
0x217 SWAP3
0x218 PUSH1 0x20
0x21a SWAP3
0x21b SWAP1
0x21c SWAP2
0x21d SWAP1
0x21e DUP3
0x21f SWAP1
0x220 SUB
0x221 ADD
0x222 DUP2
0x223 PUSH1 0x0
0x225 DUP8
0x226 DUP1
0x227 EXTCODESIZE
0x228 ISZERO
0x229 DUP1
0x22a ISZERO
0x22b PUSH2 0x233
0x22e JUMPI
---
0x1d7: JUMPDEST 
0x1da: V183 = 0x1
0x1dc: V184 = S[0x1]
0x1dd: V185 = 0x40
0x1e0: V186 = M[0x40]
0x1e1: V187 = 0xe0
0x1e3: V188 = 0x2
0x1e5: V189 = EXP 0x2 0xe0
0x1e6: V190 = 0x95ea7b3
0x1eb: V191 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x1ed: M[V186] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x1ee: V192 = 0x1
0x1f0: V193 = 0xa0
0x1f2: V194 = 0x2
0x1f4: V195 = EXP 0x2 0xa0
0x1f5: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f8: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x1f9: V198 = 0x4
0x1fc: V199 = ADD V186 0x4
0x1fd: M[V199] = V197
0x1fe: V200 = 0x0
0x200: V201 = NOT 0x0
0x201: V202 = 0x24
0x204: V203 = ADD V186 0x24
0x205: M[V203] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x207: V204 = M[0x40]
0x20a: V205 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V206 = 0x95ea7b3
0x212: V207 = 0x44
0x216: V208 = ADD V186 0x44
0x218: V209 = 0x20
0x220: V210 = SUB V186 V204
0x221: V211 = ADD V210 0x44
0x223: V212 = 0x0
0x227: V213 = EXTCODESIZE V205
0x228: V214 = ISZERO V213
0x22a: V215 = ISZERO V214
0x22b: V216 = 0x233
0x22e: JUMPI 0x233 V215
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V176, V177]
Stack pops: 3
Stack additions: [S2, V205, 0x95ea7b3, V208, 0x20, V204, V211, V204, 0x0, V205, V214]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V205, 0x95ea7b3, V208, 0x20, V204, V211, V204, 0x0, V205, V214]

================================

Block 0x22f
[0x22f:0x232]
---
Predecessors: [0x1d7]
Successors: []
---
0x22f PUSH1 0x0
0x231 DUP1
0x232 REVERT
---
0x22f: V217 = 0x0
0x232: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V205, 0x95ea7b3, V208, 0x20, V204, V211, V204, 0x0, V205, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V205, 0x95ea7b3, V208, 0x20, V204, V211, V204, 0x0, V205, V214]

================================

Block 0x233
[0x233:0x23d]
---
Predecessors: [0x1d7]
Successors: [0x23e, 0x247]
---
0x233 JUMPDEST
0x234 POP
0x235 GAS
0x236 CALL
0x237 ISZERO
0x238 DUP1
0x239 ISZERO
0x23a PUSH2 0x247
0x23d JUMPI
---
0x233: JUMPDEST 
0x235: V218 = GAS
0x236: V219 = CALL V218 V205 0x0 V204 V211 V204 0x20
0x237: V220 = ISZERO V219
0x239: V221 = ISZERO V220
0x23a: V222 = 0x247
0x23d: JUMPI 0x247 V221
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V205, 0x95ea7b3, V208, 0x20, V204, V211, V204, 0x0, V205, V214]
Stack pops: 7
Stack additions: [V220]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V205, 0x95ea7b3, V208, V220]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x233]
Successors: []
---
0x23e RETURNDATASIZE
0x23f PUSH1 0x0
0x241 DUP1
0x242 RETURNDATACOPY
0x243 RETURNDATASIZE
0x244 PUSH1 0x0
0x246 REVERT
---
0x23e: V223 = RETURNDATASIZE
0x23f: V224 = 0x0
0x242: RETURNDATACOPY 0x0 0x0 V223
0x243: V225 = RETURNDATASIZE
0x244: V226 = 0x0
0x246: REVERT 0x0 V225
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V220]

================================

Block 0x247
[0x247:0x258]
---
Predecessors: [0x233]
Successors: [0x259, 0x25d]
---
0x247 JUMPDEST
0x248 POP
0x249 POP
0x24a POP
0x24b POP
0x24c PUSH1 0x40
0x24e MLOAD
0x24f RETURNDATASIZE
0x250 PUSH1 0x20
0x252 DUP2
0x253 LT
0x254 ISZERO
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x247: JUMPDEST 
0x24c: V227 = 0x40
0x24e: V228 = M[0x40]
0x24f: V229 = RETURNDATASIZE
0x250: V230 = 0x20
0x253: V231 = LT V229 0x20
0x254: V232 = ISZERO V231
0x255: V233 = 0x25d
0x258: JUMPI 0x25d V232
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V220]
Stack pops: 4
Stack additions: [V228, V229]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, V228, V229]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x247]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V234 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V228, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V228, V229]

================================

Block 0x25d
[0x25d:0x2ad]
---
Predecessors: [0x247]
Successors: [0x2ae, 0x2b2]
---
0x25d JUMPDEST
0x25e POP
0x25f POP
0x260 PUSH1 0x40
0x262 DUP1
0x263 MLOAD
0x264 PUSH1 0xe0
0x266 PUSH1 0x2
0x268 EXP
0x269 PUSH4 0x95ea7b3
0x26e MUL
0x26f DUP2
0x270 MSTORE
0x271 ADDRESS
0x272 PUSH1 0x4
0x274 DUP3
0x275 ADD
0x276 MSTORE
0x277 PUSH1 0x0
0x279 NOT
0x27a PUSH1 0x24
0x27c DUP3
0x27d ADD
0x27e MSTORE
0x27f SWAP1
0x280 MLOAD
0x281 PUSH1 0x1
0x283 PUSH1 0xa0
0x285 PUSH1 0x2
0x287 EXP
0x288 SUB
0x289 DUP4
0x28a AND
0x28b SWAP2
0x28c PUSH4 0x95ea7b3
0x291 SWAP2
0x292 PUSH1 0x44
0x294 DUP1
0x295 DUP4
0x296 ADD
0x297 SWAP3
0x298 PUSH1 0x20
0x29a SWAP3
0x29b SWAP2
0x29c SWAP1
0x29d DUP3
0x29e SWAP1
0x29f SUB
0x2a0 ADD
0x2a1 DUP2
0x2a2 PUSH1 0x0
0x2a4 DUP8
0x2a5 DUP1
0x2a6 EXTCODESIZE
0x2a7 ISZERO
0x2a8 DUP1
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x25d: JUMPDEST 
0x260: V235 = 0x40
0x263: V236 = M[0x40]
0x264: V237 = 0xe0
0x266: V238 = 0x2
0x268: V239 = EXP 0x2 0xe0
0x269: V240 = 0x95ea7b3
0x26e: V241 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x270: M[V236] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x271: V242 = ADDRESS
0x272: V243 = 0x4
0x275: V244 = ADD V236 0x4
0x276: M[V244] = V242
0x277: V245 = 0x0
0x279: V246 = NOT 0x0
0x27a: V247 = 0x24
0x27d: V248 = ADD V236 0x24
0x27e: M[V248] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x280: V249 = M[0x40]
0x281: V250 = 0x1
0x283: V251 = 0xa0
0x285: V252 = 0x2
0x287: V253 = EXP 0x2 0xa0
0x288: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28a: V255 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V256 = 0x95ea7b3
0x292: V257 = 0x44
0x296: V258 = ADD V236 0x44
0x298: V259 = 0x20
0x29f: V260 = SUB V236 V249
0x2a0: V261 = ADD V260 0x44
0x2a2: V262 = 0x0
0x2a6: V263 = EXTCODESIZE V255
0x2a7: V264 = ISZERO V263
0x2a9: V265 = ISZERO V264
0x2aa: V266 = 0x2b2
0x2ad: JUMPI 0x2b2 V265
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V228, V229]
Stack pops: 3
Stack additions: [S2, V255, 0x95ea7b3, V258, 0x20, V249, V261, V249, 0x0, V255, V264]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V255, 0x95ea7b3, V258, 0x20, V249, V261, V249, 0x0, V255, V264]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x25d]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V267 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V255, 0x95ea7b3, V258, 0x20, V249, V261, V249, 0x0, V255, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V255, 0x95ea7b3, V258, 0x20, V249, V261, V249, 0x0, V255, V264]

================================

Block 0x2b2
[0x2b2:0x2bc]
---
Predecessors: [0x25d]
Successors: [0x2bd, 0x2c6]
---
0x2b2 JUMPDEST
0x2b3 POP
0x2b4 GAS
0x2b5 CALL
0x2b6 ISZERO
0x2b7 DUP1
0x2b8 ISZERO
0x2b9 PUSH2 0x2c6
0x2bc JUMPI
---
0x2b2: JUMPDEST 
0x2b4: V268 = GAS
0x2b5: V269 = CALL V268 V255 0x0 V249 V261 V249 0x20
0x2b6: V270 = ISZERO V269
0x2b8: V271 = ISZERO V270
0x2b9: V272 = 0x2c6
0x2bc: JUMPI 0x2c6 V271
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V255, 0x95ea7b3, V258, 0x20, V249, V261, V249, 0x0, V255, V264]
Stack pops: 7
Stack additions: [V270]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V255, 0x95ea7b3, V258, V270]

================================

Block 0x2bd
[0x2bd:0x2c5]
---
Predecessors: [0x2b2]
Successors: []
---
0x2bd RETURNDATASIZE
0x2be PUSH1 0x0
0x2c0 DUP1
0x2c1 RETURNDATACOPY
0x2c2 RETURNDATASIZE
0x2c3 PUSH1 0x0
0x2c5 REVERT
---
0x2bd: V273 = RETURNDATASIZE
0x2be: V274 = 0x0
0x2c1: RETURNDATACOPY 0x0 0x0 V273
0x2c2: V275 = RETURNDATASIZE
0x2c3: V276 = 0x0
0x2c5: REVERT 0x0 V275
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V270]

================================

Block 0x2c6
[0x2c6:0x2d7]
---
Predecessors: [0x2b2]
Successors: [0x2d8, 0x2dc]
---
0x2c6 JUMPDEST
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca POP
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce RETURNDATASIZE
0x2cf PUSH1 0x20
0x2d1 DUP2
0x2d2 LT
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2c6: JUMPDEST 
0x2cb: V277 = 0x40
0x2cd: V278 = M[0x40]
0x2ce: V279 = RETURNDATASIZE
0x2cf: V280 = 0x20
0x2d2: V281 = LT V279 0x20
0x2d3: V282 = ISZERO V281
0x2d4: V283 = 0x2dc
0x2d7: JUMPI 0x2dc V282
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, 0x95ea7b3, S1, V270]
Stack pops: 4
Stack additions: [V278, V279]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, V278, V279]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2c6]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V284 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V278, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V278, V279]

================================

Block 0x2dc
[0x2dc:0x333]
---
Predecessors: [0x2c6]
Successors: [0x334, 0x338]
---
0x2dc JUMPDEST
0x2dd POP
0x2de POP
0x2df PUSH1 0x2
0x2e1 SLOAD
0x2e2 PUSH1 0x40
0x2e4 DUP1
0x2e5 MLOAD
0x2e6 PUSH1 0xe0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb PUSH4 0x95ea7b3
0x2f0 MUL
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb SWAP3
0x2fc DUP4
0x2fd AND
0x2fe PUSH1 0x4
0x300 DUP3
0x301 ADD
0x302 MSTORE
0x303 PUSH1 0x0
0x305 NOT
0x306 PUSH1 0x24
0x308 DUP3
0x309 ADD
0x30a MSTORE
0x30b SWAP1
0x30c MLOAD
0x30d SWAP2
0x30e DUP4
0x30f AND
0x310 SWAP2
0x311 PUSH4 0x95ea7b3
0x316 SWAP2
0x317 PUSH1 0x44
0x319 DUP1
0x31a DUP3
0x31b ADD
0x31c SWAP3
0x31d PUSH1 0x20
0x31f SWAP3
0x320 SWAP1
0x321 SWAP2
0x322 SWAP1
0x323 DUP3
0x324 SWAP1
0x325 SUB
0x326 ADD
0x327 DUP2
0x328 PUSH1 0x0
0x32a DUP8
0x32b DUP1
0x32c EXTCODESIZE
0x32d ISZERO
0x32e DUP1
0x32f ISZERO
0x330 PUSH2 0x338
0x333 JUMPI
---
0x2dc: JUMPDEST 
0x2df: V285 = 0x2
0x2e1: V286 = S[0x2]
0x2e2: V287 = 0x40
0x2e5: V288 = M[0x40]
0x2e6: V289 = 0xe0
0x2e8: V290 = 0x2
0x2ea: V291 = EXP 0x2 0xe0
0x2eb: V292 = 0x95ea7b3
0x2f0: V293 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x2f2: M[V288] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x2f3: V294 = 0x1
0x2f5: V295 = 0xa0
0x2f7: V296 = 0x2
0x2f9: V297 = EXP 0x2 0xa0
0x2fa: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x2fe: V300 = 0x4
0x301: V301 = ADD V288 0x4
0x302: M[V301] = V299
0x303: V302 = 0x0
0x305: V303 = NOT 0x0
0x306: V304 = 0x24
0x309: V305 = ADD V288 0x24
0x30a: M[V305] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x30c: V306 = M[0x40]
0x30f: V307 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x311: V308 = 0x95ea7b3
0x317: V309 = 0x44
0x31b: V310 = ADD V288 0x44
0x31d: V311 = 0x20
0x325: V312 = SUB V288 V306
0x326: V313 = ADD V312 0x44
0x328: V314 = 0x0
0x32c: V315 = EXTCODESIZE V307
0x32d: V316 = ISZERO V315
0x32f: V317 = ISZERO V316
0x330: V318 = 0x338
0x333: JUMPI 0x338 V317
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V278, V279]
Stack pops: 3
Stack additions: [S2, V307, 0x95ea7b3, V310, 0x20, V306, V313, V306, 0x0, V307, V316]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V307, 0x95ea7b3, V310, 0x20, V306, V313, V306, 0x0, V307, V316]

================================

Block 0x334
[0x334:0x337]
---
Predecessors: [0x2dc]
Successors: []
---
0x334 PUSH1 0x0
0x336 DUP1
0x337 REVERT
---
0x334: V319 = 0x0
0x337: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V307, 0x95ea7b3, V310, 0x20, V306, V313, V306, 0x0, V307, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, V307, 0x95ea7b3, V310, 0x20, V306, V313, V306, 0x0, V307, V316]

================================

Block 0x338
[0x338:0x342]
---
Predecessors: [0x2dc, 0x475]
Successors: [0x343, 0x34c]
---
0x338 JUMPDEST
0x339 POP
0x33a GAS
0x33b CALL
0x33c ISZERO
0x33d DUP1
0x33e ISZERO
0x33f PUSH2 0x34c
0x342 JUMPI
---
0x338: JUMPDEST 
0x33a: V320 = GAS
0x33b: V321 = CALL V320 S1 0x0 S3 S4 S5 0x20
0x33c: V322 = ISZERO V321
0x33e: V323 = ISZERO V322
0x33f: V324 = 0x34c
0x342: JUMPI 0x34c V323
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, S9, {0x95ea7b3, 0xa9059cbb}, S7, 0x20, S5, S4, S3, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V322]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S13, {0x53, 0x57a}, S11, S10, S9, {0x95ea7b3, 0xa9059cbb}, S7, V322]

================================

Block 0x343
[0x343:0x34b]
---
Predecessors: [0x338]
Successors: []
---
0x343 RETURNDATASIZE
0x344 PUSH1 0x0
0x346 DUP1
0x347 RETURNDATACOPY
0x348 RETURNDATASIZE
0x349 PUSH1 0x0
0x34b REVERT
---
0x343: V325 = RETURNDATASIZE
0x344: V326 = 0x0
0x347: RETURNDATACOPY 0x0 0x0 V325
0x348: V327 = RETURNDATASIZE
0x349: V328 = 0x0
0x34b: REVERT 0x0 V327
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, {0x95ea7b3, 0xa9059cbb}, S1, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, {0x95ea7b3, 0xa9059cbb}, S1, V322]

================================

Block 0x34c
[0x34c:0x35d]
---
Predecessors: [0x338]
Successors: [0x35e, 0x362]
---
0x34c JUMPDEST
0x34d POP
0x34e POP
0x34f POP
0x350 POP
0x351 PUSH1 0x40
0x353 MLOAD
0x354 RETURNDATASIZE
0x355 PUSH1 0x20
0x357 DUP2
0x358 LT
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x34c: JUMPDEST 
0x351: V329 = 0x40
0x353: V330 = M[0x40]
0x354: V331 = RETURNDATASIZE
0x355: V332 = 0x20
0x358: V333 = LT V331 0x20
0x359: V334 = ISZERO V333
0x35a: V335 = 0x362
0x35d: JUMPI 0x362 V334
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, S3, {0x95ea7b3, 0xa9059cbb}, S1, V322]
Stack pops: 4
Stack additions: [V330, V331]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S7, {0x53, 0x57a}, S5, S4, V330, V331]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x34c]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V336 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V330, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V330, V331]

================================

Block 0x362
[0x362:0x367]
---
Predecessors: [0x34c]
Successors: [0x53, 0x57a]
---
0x362 JUMPDEST
0x363 POP
0x364 POP
0x365 POP
0x366 POP
0x367 JUMP
---
0x362: JUMPDEST 
0x367: JUMP {0x53, 0x57a}
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5, {0x53, 0x57a}, S3, S2, V330, V331]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S5]

================================

Block 0x368
[0x368:0x37a]
---
Predecessors: [0x97]
Successors: [0x37b, 0x37f]
---
0x368 JUMPDEST
0x369 PUSH1 0x2
0x36b SLOAD
0x36c PUSH1 0x1
0x36e PUSH1 0xa0
0x370 PUSH1 0x2
0x372 EXP
0x373 SUB
0x374 AND
0x375 CALLER
0x376 EQ
0x377 PUSH2 0x37f
0x37a JUMPI
---
0x368: JUMPDEST 
0x369: V337 = 0x2
0x36b: V338 = S[0x2]
0x36c: V339 = 0x1
0x36e: V340 = 0xa0
0x370: V341 = 0x2
0x372: V342 = EXP 0x2 0xa0
0x373: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x374: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x375: V345 = CALLER
0x376: V346 = EQ V345 V344
0x377: V347 = 0x37f
0x37a: JUMPI 0x37f V346
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53]

================================

Block 0x37b
[0x37b:0x37e]
---
Predecessors: [0x368]
Successors: []
---
0x37b PUSH1 0x0
0x37d DUP1
0x37e REVERT
---
0x37b: V348 = 0x0
0x37e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53]

================================

Block 0x37f
[0x37f:0x3af]
---
Predecessors: [0x368]
Successors: [0x3b0, 0x3b9]
---
0x37f JUMPDEST
0x380 PUSH1 0x2
0x382 SLOAD
0x383 PUSH1 0x40
0x385 MLOAD
0x386 PUSH1 0x1
0x388 PUSH1 0xa0
0x38a PUSH1 0x2
0x38c EXP
0x38d SUB
0x38e SWAP1
0x38f SWAP2
0x390 AND
0x391 SWAP1
0x392 ADDRESS
0x393 BALANCE
0x394 DUP1
0x395 ISZERO
0x396 PUSH2 0x8fc
0x399 MUL
0x39a SWAP2
0x39b PUSH1 0x0
0x39d DUP2
0x39e DUP2
0x39f DUP2
0x3a0 DUP6
0x3a1 DUP9
0x3a2 DUP9
0x3a3 CALL
0x3a4 SWAP4
0x3a5 POP
0x3a6 POP
0x3a7 POP
0x3a8 POP
0x3a9 ISZERO
0x3aa DUP1
0x3ab ISZERO
0x3ac PUSH2 0x3b9
0x3af JUMPI
---
0x37f: JUMPDEST 
0x380: V349 = 0x2
0x382: V350 = S[0x2]
0x383: V351 = 0x40
0x385: V352 = M[0x40]
0x386: V353 = 0x1
0x388: V354 = 0xa0
0x38a: V355 = 0x2
0x38c: V356 = EXP 0x2 0xa0
0x38d: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x390: V358 = AND V350 0xffffffffffffffffffffffffffffffffffffffff
0x392: V359 = ADDRESS
0x393: V360 = BALANCE V359
0x395: V361 = ISZERO V360
0x396: V362 = 0x8fc
0x399: V363 = MUL 0x8fc V361
0x39b: V364 = 0x0
0x3a3: V365 = CALL V363 V358 V360 V352 0x0 V352 0x0
0x3a9: V366 = ISZERO V365
0x3ab: V367 = ISZERO V366
0x3ac: V368 = 0x3b9
0x3af: JUMPI 0x3b9 V367
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: [V366]
Exit stack: [V13, 0x53, V366]

================================

Block 0x3b0
[0x3b0:0x3b8]
---
Predecessors: [0x37f]
Successors: []
---
0x3b0 RETURNDATASIZE
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 RETURNDATACOPY
0x3b5 RETURNDATASIZE
0x3b6 PUSH1 0x0
0x3b8 REVERT
---
0x3b0: V369 = RETURNDATASIZE
0x3b1: V370 = 0x0
0x3b4: RETURNDATACOPY 0x0 0x0 V369
0x3b5: V371 = RETURNDATASIZE
0x3b6: V372 = 0x0
0x3b8: REVERT 0x0 V371
---
Entry stack: [V13, 0x53, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V366]

================================

Block 0x3b9
[0x3b9:0x3bb]
---
Predecessors: [0x37f]
Successors: [0x53]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb JUMP
---
0x3b9: JUMPDEST 
0x3bb: JUMP 0x53
---
Entry stack: [V13, 0x53, V366]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x3bc
[0x3bc:0x3d1]
---
Predecessors: [0xac]
Successors: [0x3d2, 0x3d6]
---
0x3bc JUMPDEST
0x3bd PUSH1 0x2
0x3bf SLOAD
0x3c0 PUSH1 0x0
0x3c2 SWAP1
0x3c3 PUSH1 0x1
0x3c5 PUSH1 0xa0
0x3c7 PUSH1 0x2
0x3c9 EXP
0x3ca SUB
0x3cb AND
0x3cc CALLER
0x3cd EQ
0x3ce PUSH2 0x3d6
0x3d1 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V373 = 0x2
0x3bf: V374 = S[0x2]
0x3c0: V375 = 0x0
0x3c3: V376 = 0x1
0x3c5: V377 = 0xa0
0x3c7: V378 = 0x2
0x3c9: V379 = EXP 0x2 0xa0
0x3ca: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cb: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x3cc: V382 = CALLER
0x3cd: V383 = EQ V382 V381
0x3ce: V384 = 0x3d6
0x3d1: JUMPI 0x3d6 V383
---
Entry stack: [V13, 0x53, V67]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x53, V67, 0x0]

================================

Block 0x3d2
[0x3d2:0x3d5]
---
Predecessors: [0x3bc]
Successors: []
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 REVERT
---
0x3d2: V385 = 0x0
0x3d5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V67, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V67, 0x0]

================================

Block 0x3d6
[0x3d6:0x446]
---
Predecessors: [0x3bc]
Successors: [0x447, 0x44b]
---
0x3d6 JUMPDEST
0x3d7 POP
0x3d8 PUSH1 0x2
0x3da SLOAD
0x3db PUSH1 0x40
0x3dd DUP1
0x3de MLOAD
0x3df PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x400 DUP2
0x401 MSTORE
0x402 ADDRESS
0x403 PUSH1 0x4
0x405 DUP3
0x406 ADD
0x407 MSTORE
0x408 SWAP1
0x409 MLOAD
0x40a DUP4
0x40b SWAP3
0x40c PUSH1 0x1
0x40e PUSH1 0xa0
0x410 PUSH1 0x2
0x412 EXP
0x413 SUB
0x414 DUP1
0x415 DUP6
0x416 AND
0x417 SWAP4
0x418 PUSH4 0xa9059cbb
0x41d SWAP4
0x41e SWAP3
0x41f SWAP1
0x420 SWAP2
0x421 AND
0x422 SWAP2
0x423 DUP5
0x424 SWAP2
0x425 PUSH4 0x70a08231
0x42a SWAP2
0x42b PUSH1 0x24
0x42d DUP1
0x42e DUP4
0x42f ADD
0x430 SWAP3
0x431 PUSH1 0x20
0x433 SWAP3
0x434 SWAP2
0x435 SWAP1
0x436 DUP3
0x437 SWAP1
0x438 SUB
0x439 ADD
0x43a DUP2
0x43b PUSH1 0x0
0x43d DUP8
0x43e DUP1
0x43f EXTCODESIZE
0x440 ISZERO
0x441 DUP1
0x442 ISZERO
0x443 PUSH2 0x44b
0x446 JUMPI
---
0x3d6: JUMPDEST 
0x3d8: V386 = 0x2
0x3da: V387 = S[0x2]
0x3db: V388 = 0x40
0x3de: V389 = M[0x40]
0x3df: V390 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x401: M[V389] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x402: V391 = ADDRESS
0x403: V392 = 0x4
0x406: V393 = ADD V389 0x4
0x407: M[V393] = V391
0x409: V394 = M[0x40]
0x40c: V395 = 0x1
0x40e: V396 = 0xa0
0x410: V397 = 0x2
0x412: V398 = EXP 0x2 0xa0
0x413: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x416: V400 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0x418: V401 = 0xa9059cbb
0x421: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x425: V403 = 0x70a08231
0x42b: V404 = 0x24
0x42f: V405 = ADD V389 0x24
0x431: V406 = 0x20
0x438: V407 = SUB V389 V394
0x439: V408 = ADD V407 0x24
0x43b: V409 = 0x0
0x43f: V410 = EXTCODESIZE V400
0x440: V411 = ISZERO V410
0x442: V412 = ISZERO V411
0x443: V413 = 0x44b
0x446: JUMPI 0x44b V412
---
Entry stack: [V13, 0x53, V67, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, 0x20, V394, V408, V394, 0x0, V400, V411]
Exit stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, 0x20, V394, V408, V394, 0x0, V400, V411]

================================

Block 0x447
[0x447:0x44a]
---
Predecessors: [0x3d6]
Successors: []
---
0x447 PUSH1 0x0
0x449 DUP1
0x44a REVERT
---
0x447: V414 = 0x0
0x44a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, 0x20, V394, V408, V394, 0x0, V400, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, 0x20, V394, V408, V394, 0x0, V400, V411]

================================

Block 0x44b
[0x44b:0x455]
---
Predecessors: [0x3d6]
Successors: [0x456, 0x45f]
---
0x44b JUMPDEST
0x44c POP
0x44d GAS
0x44e CALL
0x44f ISZERO
0x450 DUP1
0x451 ISZERO
0x452 PUSH2 0x45f
0x455 JUMPI
---
0x44b: JUMPDEST 
0x44d: V415 = GAS
0x44e: V416 = CALL V415 V400 0x0 V394 V408 V394 0x20
0x44f: V417 = ISZERO V416
0x451: V418 = ISZERO V417
0x452: V419 = 0x45f
0x455: JUMPI 0x45f V418
---
Entry stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, 0x20, V394, V408, V394, 0x0, V400, V411]
Stack pops: 7
Stack additions: [V417]
Exit stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, V417]

================================

Block 0x456
[0x456:0x45e]
---
Predecessors: [0x44b]
Successors: []
---
0x456 RETURNDATASIZE
0x457 PUSH1 0x0
0x459 DUP1
0x45a RETURNDATACOPY
0x45b RETURNDATASIZE
0x45c PUSH1 0x0
0x45e REVERT
---
0x456: V420 = RETURNDATASIZE
0x457: V421 = 0x0
0x45a: RETURNDATACOPY 0x0 0x0 V420
0x45b: V422 = RETURNDATASIZE
0x45c: V423 = 0x0
0x45e: REVERT 0x0 V422
---
Entry stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, V417]

================================

Block 0x45f
[0x45f:0x470]
---
Predecessors: [0x44b]
Successors: [0x471, 0x475]
---
0x45f JUMPDEST
0x460 POP
0x461 POP
0x462 POP
0x463 POP
0x464 PUSH1 0x40
0x466 MLOAD
0x467 RETURNDATASIZE
0x468 PUSH1 0x20
0x46a DUP2
0x46b LT
0x46c ISZERO
0x46d PUSH2 0x475
0x470 JUMPI
---
0x45f: JUMPDEST 
0x464: V424 = 0x40
0x466: V425 = M[0x40]
0x467: V426 = RETURNDATASIZE
0x468: V427 = 0x20
0x46b: V428 = LT V426 0x20
0x46c: V429 = ISZERO V428
0x46d: V430 = 0x475
0x470: JUMPI 0x475 V429
---
Entry stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V400, 0x70a08231, V405, V417]
Stack pops: 4
Stack additions: [V425, V426]
Exit stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V425, V426]

================================

Block 0x471
[0x471:0x474]
---
Predecessors: [0x45f]
Successors: []
---
0x471 PUSH1 0x0
0x473 DUP1
0x474 REVERT
---
0x471: V431 = 0x0
0x474: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V425, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V425, V426]

================================

Block 0x475
[0x475:0x4bf]
---
Predecessors: [0x45f]
Successors: [0x338, 0x4c0]
---
0x475 JUMPDEST
0x476 POP
0x477 MLOAD
0x478 PUSH1 0x40
0x47a DUP1
0x47b MLOAD
0x47c PUSH1 0xe0
0x47e PUSH1 0x2
0x480 EXP
0x481 PUSH4 0xffffffff
0x486 DUP7
0x487 AND
0x488 MUL
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0x1
0x48d PUSH1 0xa0
0x48f PUSH1 0x2
0x491 EXP
0x492 SUB
0x493 SWAP1
0x494 SWAP4
0x495 AND
0x496 PUSH1 0x4
0x498 DUP5
0x499 ADD
0x49a MSTORE
0x49b PUSH1 0x24
0x49d DUP4
0x49e ADD
0x49f SWAP2
0x4a0 SWAP1
0x4a1 SWAP2
0x4a2 MSTORE
0x4a3 MLOAD
0x4a4 PUSH1 0x44
0x4a6 DUP1
0x4a7 DUP4
0x4a8 ADD
0x4a9 SWAP3
0x4aa PUSH1 0x20
0x4ac SWAP3
0x4ad SWAP2
0x4ae SWAP1
0x4af DUP3
0x4b0 SWAP1
0x4b1 SUB
0x4b2 ADD
0x4b3 DUP2
0x4b4 PUSH1 0x0
0x4b6 DUP8
0x4b7 DUP1
0x4b8 EXTCODESIZE
0x4b9 ISZERO
0x4ba DUP1
0x4bb ISZERO
0x4bc PUSH2 0x338
0x4bf JUMPI
---
0x475: JUMPDEST 
0x477: V432 = M[V425]
0x478: V433 = 0x40
0x47b: V434 = M[0x40]
0x47c: V435 = 0xe0
0x47e: V436 = 0x2
0x480: V437 = EXP 0x2 0xe0
0x481: V438 = 0xffffffff
0x487: V439 = AND 0xa9059cbb 0xffffffff
0x488: V440 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x48a: M[V434] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x48b: V441 = 0x1
0x48d: V442 = 0xa0
0x48f: V443 = 0x2
0x491: V444 = EXP 0x2 0xa0
0x492: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x495: V446 = AND V402 0xffffffffffffffffffffffffffffffffffffffff
0x496: V447 = 0x4
0x499: V448 = ADD V434 0x4
0x49a: M[V448] = V446
0x49b: V449 = 0x24
0x49e: V450 = ADD V434 0x24
0x4a2: M[V450] = V432
0x4a3: V451 = M[0x40]
0x4a4: V452 = 0x44
0x4a8: V453 = ADD V434 0x44
0x4aa: V454 = 0x20
0x4b1: V455 = SUB V434 V451
0x4b2: V456 = ADD V455 0x44
0x4b4: V457 = 0x0
0x4b8: V458 = EXTCODESIZE V400
0x4b9: V459 = ISZERO V458
0x4bb: V460 = ISZERO V459
0x4bc: V461 = 0x338
0x4bf: JUMPI 0x338 V460
---
Entry stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V402, V425, V426]
Stack pops: 5
Stack additions: [S4, S3, V453, 0x20, V451, V456, V451, 0x0, S4, V459]
Exit stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V453, 0x20, V451, V456, V451, 0x0, V400, V459]

================================

Block 0x4c0
[0x4c0:0x4c3]
---
Predecessors: [0x475]
Successors: []
---
0x4c0 PUSH1 0x0
0x4c2 DUP1
0x4c3 REVERT
---
0x4c0: V462 = 0x0
0x4c3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V453, 0x20, V451, V456, V451, 0x0, V400, V459]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V67, V67, V400, 0xa9059cbb, V453, 0x20, V451, V456, V451, 0x0, V400, V459]

================================

Block 0x4c4
[0x4c4:0x4dd]
---
Predecessors: [0xcd]
Successors: [0x4de, 0x4e2]
---
0x4c4 JUMPDEST
0x4c5 PUSH1 0x2
0x4c7 SLOAD
0x4c8 PUSH1 0x0
0x4ca SWAP1
0x4cb DUP2
0x4cc SWAP1
0x4cd DUP2
0x4ce SWAP1
0x4cf PUSH1 0x1
0x4d1 PUSH1 0xa0
0x4d3 PUSH1 0x2
0x4d5 EXP
0x4d6 SUB
0x4d7 AND
0x4d8 CALLER
0x4d9 EQ
0x4da PUSH2 0x4e2
0x4dd JUMPI
---
0x4c4: JUMPDEST 
0x4c5: V463 = 0x2
0x4c7: V464 = S[0x2]
0x4c8: V465 = 0x0
0x4cf: V466 = 0x1
0x4d1: V467 = 0xa0
0x4d3: V468 = 0x2
0x4d5: V469 = EXP 0x2 0xa0
0x4d6: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d7: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x4d8: V472 = CALLER
0x4d9: V473 = EQ V472 V471
0x4da: V474 = 0x4e2
0x4dd: JUMPI 0x4e2 V473
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]

================================

Block 0x4de
[0x4de:0x4e1]
---
Predecessors: [0x4c4]
Successors: []
---
0x4de PUSH1 0x0
0x4e0 DUP1
0x4e1 REVERT
---
0x4de: V475 = 0x0
0x4e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]

================================

Block 0x4e2
[0x4e2:0x4f3]
---
Predecessors: [0x4c4]
Successors: [0x4f4, 0x4f8]
---
0x4e2 JUMPDEST
0x4e3 PUSH1 0x1
0x4e5 PUSH1 0xa0
0x4e7 PUSH1 0x2
0x4e9 EXP
0x4ea SUB
0x4eb DUP9
0x4ec CALLDATALOAD
0x4ed AND
0x4ee ISZERO
0x4ef ISZERO
0x4f0 PUSH2 0x4f8
0x4f3 JUMPI
---
0x4e2: JUMPDEST 
0x4e3: V476 = 0x1
0x4e5: V477 = 0xa0
0x4e7: V478 = 0x2
0x4e9: V479 = EXP 0x2 0xa0
0x4ea: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ec: V481 = CALLDATALOAD 0x44
0x4ed: V482 = AND V481 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V483 = ISZERO V482
0x4ef: V484 = ISZERO V483
0x4f0: V485 = 0x4f8
0x4f3: JUMPI 0x4f8 V484
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]

================================

Block 0x4f4
[0x4f4:0x4f7]
---
Predecessors: [0x4e2]
Successors: []
---
0x4f4 PUSH1 0x0
0x4f6 DUP1
0x4f7 REVERT
---
0x4f4: V486 = 0x0
0x4f7: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]

================================

Block 0x4f8
[0x4f8:0x50c]
---
Predecessors: [0x4e2]
Successors: [0x50d, 0x511]
---
0x4f8 JUMPDEST
0x4f9 PUSH1 0x1
0x4fb PUSH1 0xa0
0x4fd PUSH1 0x2
0x4ff EXP
0x500 SUB
0x501 PUSH1 0x20
0x503 DUP10
0x504 ADD
0x505 CALLDATALOAD
0x506 AND
0x507 ISZERO
0x508 ISZERO
0x509 PUSH2 0x511
0x50c JUMPI
---
0x4f8: JUMPDEST 
0x4f9: V487 = 0x1
0x4fb: V488 = 0xa0
0x4fd: V489 = 0x2
0x4ff: V490 = EXP 0x2 0xa0
0x500: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x501: V492 = 0x20
0x504: V493 = ADD 0x44 0x20
0x505: V494 = CALLDATALOAD 0x64
0x506: V495 = AND V494 0xffffffffffffffffffffffffffffffffffffffff
0x507: V496 = ISZERO V495
0x508: V497 = ISZERO V496
0x509: V498 = 0x511
0x50c: JUMPI 0x511 V497
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]

================================

Block 0x50d
[0x50d:0x510]
---
Predecessors: [0x4f8]
Successors: []
---
0x50d PUSH1 0x0
0x50f DUP1
0x510 REVERT
---
0x50d: V499 = 0x0
0x510: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]

================================

Block 0x511
[0x511:0x525]
---
Predecessors: [0x4f8]
Successors: [0x526, 0x52a]
---
0x511 JUMPDEST
0x512 PUSH1 0x1
0x514 PUSH1 0xa0
0x516 PUSH1 0x2
0x518 EXP
0x519 SUB
0x51a PUSH1 0x40
0x51c DUP10
0x51d ADD
0x51e CALLDATALOAD
0x51f AND
0x520 ISZERO
0x521 ISZERO
0x522 PUSH2 0x52a
0x525 JUMPI
---
0x511: JUMPDEST 
0x512: V500 = 0x1
0x514: V501 = 0xa0
0x516: V502 = 0x2
0x518: V503 = EXP 0x2 0xa0
0x519: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51a: V505 = 0x40
0x51d: V506 = ADD 0x44 0x40
0x51e: V507 = CALLDATALOAD 0x84
0x51f: V508 = AND V507 0xffffffffffffffffffffffffffffffffffffffff
0x520: V509 = ISZERO V508
0x521: V510 = ISZERO V509
0x522: V511 = 0x52a
0x525: JUMPI 0x52a V510
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]

================================

Block 0x526
[0x526:0x529]
---
Predecessors: [0x511]
Successors: []
---
0x526 PUSH1 0x0
0x528 DUP1
0x529 REVERT
---
0x526: V512 = 0x0
0x529: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]

================================

Block 0x52a
[0x52a:0x579]
---
Predecessors: [0x511]
Successors: [0x134]
---
0x52a JUMPDEST
0x52b PUSH1 0x0
0x52d DUP1
0x52e SLOAD
0x52f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x544 NOT
0x545 SWAP1
0x546 DUP2
0x547 AND
0x548 PUSH1 0x1
0x54a PUSH1 0xa0
0x54c PUSH1 0x2
0x54e EXP
0x54f SUB
0x550 DUP12
0x551 CALLDATALOAD
0x552 DUP2
0x553 AND
0x554 SWAP2
0x555 SWAP1
0x556 SWAP2
0x557 OR
0x558 SWAP1
0x559 SWAP3
0x55a SSTORE
0x55b PUSH1 0x1
0x55d DUP1
0x55e SLOAD
0x55f SWAP1
0x560 SWAP2
0x561 AND
0x562 PUSH1 0x20
0x564 DUP12
0x565 ADD
0x566 CALLDATALOAD
0x567 DUP4
0x568 AND
0x569 OR
0x56a SWAP1
0x56b SSTORE
0x56c PUSH2 0x57a
0x56f SWAP1
0x570 PUSH1 0x40
0x572 DUP11
0x573 ADD
0x574 CALLDATALOAD
0x575 AND
0x576 PUSH2 0x134
0x579 JUMP
---
0x52a: JUMPDEST 
0x52b: V513 = 0x0
0x52e: V514 = S[0x0]
0x52f: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x544: V516 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x547: V517 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V514
0x548: V518 = 0x1
0x54a: V519 = 0xa0
0x54c: V520 = 0x2
0x54e: V521 = EXP 0x2 0xa0
0x54f: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x551: V523 = CALLDATALOAD 0x44
0x553: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x557: V525 = OR V524 V517
0x55a: S[0x0] = V525
0x55b: V526 = 0x1
0x55e: V527 = S[0x1]
0x561: V528 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V527
0x562: V529 = 0x20
0x565: V530 = ADD 0x44 0x20
0x566: V531 = CALLDATALOAD 0x64
0x568: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x569: V533 = OR V532 V528
0x56b: S[0x1] = V533
0x56c: V534 = 0x57a
0x570: V535 = 0x40
0x573: V536 = ADD 0x44 0x40
0x574: V537 = CALLDATALOAD 0x84
0x575: V538 = AND V537 0xffffffffffffffffffffffffffffffffffffffff
0x576: V539 = 0x134
0x579: JUMP 0x134
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x57a, V538]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, 0x0, 0x57a, V538]

================================

Block 0x57a
[0x57a:0x58b]
---
Predecessors: [0x362]
Successors: [0x58c, 0x58d]
---
0x57a JUMPDEST
0x57b POP
0x57c POP
0x57d ADDRESS
0x57e BALANCE
0x57f PUSH1 0x0
0x581 DUP1
0x582 DUP12
0x583 PUSH1 0x1
0x585 DUP2
0x586 GT
0x587 ISZERO
0x588 PUSH2 0x58d
0x58b JUMPI
---
0x57a: JUMPDEST 
0x57d: V540 = ADDRESS
0x57e: V541 = BALANCE V540
0x57f: V542 = 0x0
0x583: V543 = 0x1
0x586: V544 = GT V77 0x1
0x587: V545 = ISZERO V544
0x588: V546 = 0x58d
0x58b: JUMPI 0x58d V545
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, 0x0, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V541, 0x0, 0x0, S10]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x0, V77]

================================

Block 0x58c
[0x58c:0x58c]
---
Predecessors: [0x57a]
Successors: []
---
0x58c INVALID
---
0x58c: INVALID 
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x0, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x0, V77]

================================

Block 0x58d
[0x58d:0x593]
---
Predecessors: [0x57a]
Successors: [0x594, 0x6d6]
---
0x58d JUMPDEST
0x58e EQ
0x58f ISZERO
0x590 PUSH2 0x6d6
0x593 JUMPI
---
0x58d: JUMPDEST 
0x58e: V547 = EQ V77 0x0
0x58f: V548 = ISZERO V547
0x590: V549 = 0x6d6
0x593: JUMPI 0x6d6 V548
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x0, V77]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0]

================================

Block 0x594
[0x594:0x604]
---
Predecessors: [0x58d]
Successors: [0x824]
---
0x594 PUSH1 0x40
0x596 DUP1
0x597 MLOAD
0x598 PUSH2 0x140
0x59b DUP2
0x59c ADD
0x59d SWAP1
0x59e SWAP2
0x59f MSTORE
0x5a0 PUSH2 0x605
0x5a3 SWAP1
0x5a4 DUP1
0x5a5 PUSH1 0xa0
0x5a7 DUP2
0x5a8 DUP2
0x5a9 ADD
0x5aa SWAP1
0x5ab DUP13
0x5ac SWAP1
0x5ad PUSH1 0x5
0x5af SWAP1
0x5b0 DUP4
0x5b1 SWAP1
0x5b2 DUP4
0x5b3 SWAP1
0x5b4 DUP1
0x5b5 DUP3
0x5b6 DUP5
0x5b7 CALLDATACOPY
0x5b8 DUP3
0x5b9 ADD
0x5ba SWAP2
0x5bb POP
0x5bc POP
0x5bd POP
0x5be POP
0x5bf POP
0x5c0 DUP2
0x5c1 MSTORE
0x5c2 PUSH1 0x20
0x5c4 ADD
0x5c5 DUP10
0x5c6 PUSH1 0x7
0x5c8 DUP1
0x5c9 PUSH1 0x20
0x5cb MUL
0x5cc PUSH1 0x40
0x5ce MLOAD
0x5cf SWAP1
0x5d0 DUP2
0x5d1 ADD
0x5d2 PUSH1 0x40
0x5d4 MSTORE
0x5d5 DUP1
0x5d6 SWAP3
0x5d7 SWAP2
0x5d8 SWAP1
0x5d9 DUP3
0x5da PUSH1 0x7
0x5dc PUSH1 0x20
0x5de MUL
0x5df DUP1
0x5e0 DUP3
0x5e1 DUP5
0x5e2 CALLDATACOPY
0x5e3 POP
0x5e4 POP
0x5e5 POP
0x5e6 SWAP2
0x5e7 DUP4
0x5e8 MSTORE
0x5e9 POP
0x5ea POP
0x5eb PUSH1 0xff
0x5ed DUP10
0x5ee AND
0x5ef PUSH1 0x20
0x5f1 DUP3
0x5f2 ADD
0x5f3 MSTORE
0x5f4 PUSH1 0x40
0x5f6 DUP2
0x5f7 ADD
0x5f8 DUP9
0x5f9 SWAP1
0x5fa MSTORE
0x5fb PUSH1 0x60
0x5fd ADD
0x5fe DUP7
0x5ff SWAP1
0x600 MSTORE
0x601 PUSH2 0x824
0x604 JUMP
---
0x594: V550 = 0x40
0x597: V551 = M[0x40]
0x598: V552 = 0x140
0x59c: V553 = ADD V551 0x140
0x59f: M[0x40] = V553
0x5a0: V554 = 0x605
0x5a5: V555 = 0xa0
0x5a9: V556 = ADD 0xa0 V551
0x5ad: V557 = 0x5
0x5b7: CALLDATACOPY V556 0x44 0xa0
0x5b9: V558 = ADD V556 0xa0
0x5c1: M[V551] = V556
0x5c2: V559 = 0x20
0x5c4: V560 = ADD 0x20 V551
0x5c6: V561 = 0x7
0x5c9: V562 = 0x20
0x5cb: V563 = MUL 0x20 0x7
0x5cc: V564 = 0x40
0x5ce: V565 = M[0x40]
0x5d1: V566 = ADD V565 0xe0
0x5d2: V567 = 0x40
0x5d4: M[0x40] = V566
0x5da: V568 = 0x7
0x5dc: V569 = 0x20
0x5de: V570 = MUL 0x20 0x7
0x5e2: CALLDATACOPY V565 0xe4 0xe0
0x5e8: M[V560] = V565
0x5eb: V571 = 0xff
0x5ee: V572 = AND V87 0xff
0x5ef: V573 = 0x20
0x5f2: V574 = ADD V560 0x20
0x5f3: M[V574] = V572
0x5f4: V575 = 0x40
0x5f7: V576 = ADD V560 0x40
0x5fa: M[V576] = V89
0x5fb: V577 = 0x60
0x5fd: V578 = ADD 0x60 V560
0x600: M[V578] = V91
0x601: V579 = 0x824
0x604: JUMP 0x824
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x605, V551]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551]

================================

Block 0x605
[0x605:0x69f]
---
Predecessors: [0x9ac]
Successors: [0x6a0, 0x6a4]
---
0x605 JUMPDEST
0x606 PUSH1 0x1
0x608 SLOAD
0x609 PUSH1 0x40
0x60b MLOAD
0x60c PUSH32 0xf3898a9700000000000000000000000000000000000000000000000000000000
0x62d DUP2
0x62e MSTORE
0x62f PUSH1 0x24
0x631 DUP2
0x632 ADD
0x633 DUP4
0x634 SWAP1
0x635 MSTORE
0x636 PUSH1 0x20
0x638 DUP1
0x639 DUP12
0x63a ADD
0x63b CALLDATALOAD
0x63c PUSH1 0x44
0x63e DUP4
0x63f ADD
0x640 DUP2
0x641 SWAP1
0x642 MSTORE
0x643 PUSH1 0x60
0x645 PUSH1 0x4
0x647 DUP5
0x648 ADD
0x649 SWAP1
0x64a DUP2
0x64b MSTORE
0x64c PUSH1 0x64
0x64e DUP5
0x64f ADD
0x650 DUP16
0x651 SWAP1
0x652 MSTORE
0x653 SWAP5
0x654 SWAP6
0x655 POP
0x656 PUSH1 0x1
0x658 PUSH1 0xa0
0x65a PUSH1 0x2
0x65c EXP
0x65d SUB
0x65e SWAP1
0x65f SWAP4
0x660 AND
0x661 SWAP4
0x662 PUSH4 0xf3898a97
0x667 SWAP4
0x668 DUP16
0x669 SWAP4
0x66a DUP16
0x66b SWAP4
0x66c DUP9
0x66d SWAP4
0x66e SWAP2
0x66f DUP3
0x670 SWAP2
0x671 PUSH1 0x84
0x673 SWAP1
0x674 SWAP2
0x675 ADD
0x676 SWAP1
0x677 DUP8
0x678 SWAP1
0x679 DUP8
0x67a MUL
0x67b DUP1
0x67c DUP3
0x67d DUP5
0x67e CALLDATACOPY
0x67f DUP3
0x680 ADD
0x681 SWAP2
0x682 POP
0x683 POP
0x684 SWAP6
0x685 POP
0x686 POP
0x687 POP
0x688 POP
0x689 POP
0x68a POP
0x68b PUSH1 0x20
0x68d PUSH1 0x40
0x68f MLOAD
0x690 DUP1
0x691 DUP4
0x692 SUB
0x693 DUP2
0x694 PUSH1 0x0
0x696 DUP8
0x697 DUP1
0x698 EXTCODESIZE
0x699 ISZERO
0x69a DUP1
0x69b ISZERO
0x69c PUSH2 0x6a4
0x69f JUMPI
---
0x605: JUMPDEST 
0x606: V580 = 0x1
0x608: V581 = S[0x1]
0x609: V582 = 0x40
0x60b: V583 = M[0x40]
0x60c: V584 = 0xf3898a9700000000000000000000000000000000000000000000000000000000
0x62e: M[V583] = 0xf3898a9700000000000000000000000000000000000000000000000000000000
0x62f: V585 = 0x24
0x632: V586 = ADD V583 0x24
0x635: M[V586] = V1162
0x636: V587 = 0x20
0x63a: V588 = ADD 0xe4 0x20
0x63b: V589 = CALLDATALOAD 0x104
0x63c: V590 = 0x44
0x63f: V591 = ADD V583 0x44
0x642: M[V591] = V589
0x643: V592 = 0x60
0x645: V593 = 0x4
0x648: V594 = ADD V583 0x4
0x64b: M[V594] = 0x60
0x64c: V595 = 0x64
0x64f: V596 = ADD V583 0x64
0x652: M[V596] = V82
0x656: V597 = 0x1
0x658: V598 = 0xa0
0x65a: V599 = 0x2
0x65c: V600 = EXP 0x2 0xa0
0x65d: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x660: V602 = AND V581 0xffffffffffffffffffffffffffffffffffffffff
0x662: V603 = 0xf3898a97
0x671: V604 = 0x84
0x675: V605 = ADD V583 0x84
0x67a: V606 = MUL V82 0x20
0x67e: CALLDATACOPY V605 V80 V606
0x680: V607 = ADD V605 V606
0x68b: V608 = 0x20
0x68d: V609 = 0x40
0x68f: V610 = M[0x40]
0x692: V611 = SUB V607 V610
0x694: V612 = 0x0
0x698: V613 = EXTCODESIZE V602
0x699: V614 = ISZERO V613
0x69b: V615 = ISZERO V614
0x69c: V616 = 0x6a4
0x69f: JUMPI 0x6a4 V615
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V1162]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, V602, 0xf3898a97, V607, 0x20, V610, V611, V610, 0x0, V602, V614]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V602, 0xf3898a97, V607, 0x20, V610, V611, V610, 0x0, V602, V614]

================================

Block 0x6a0
[0x6a0:0x6a3]
---
Predecessors: [0x605]
Successors: []
---
0x6a0 PUSH1 0x0
0x6a2 DUP1
0x6a3 REVERT
---
0x6a0: V617 = 0x0
0x6a3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V602, 0xf3898a97, V607, 0x20, V610, V611, V610, 0x0, V602, V614]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V602, 0xf3898a97, V607, 0x20, V610, V611, V610, 0x0, V602, V614]

================================

Block 0x6a4
[0x6a4:0x6ae]
---
Predecessors: [0x605]
Successors: [0x6af, 0x6b8]
---
0x6a4 JUMPDEST
0x6a5 POP
0x6a6 GAS
0x6a7 CALL
0x6a8 ISZERO
0x6a9 DUP1
0x6aa ISZERO
0x6ab PUSH2 0x6b8
0x6ae JUMPI
---
0x6a4: JUMPDEST 
0x6a6: V618 = GAS
0x6a7: V619 = CALL V618 V602 0x0 V610 V611 V610 0x20
0x6a8: V620 = ISZERO V619
0x6aa: V621 = ISZERO V620
0x6ab: V622 = 0x6b8
0x6ae: JUMPI 0x6b8 V621
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V602, 0xf3898a97, V607, 0x20, V610, V611, V610, 0x0, V602, V614]
Stack pops: 7
Stack additions: [V620]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V602, 0xf3898a97, V607, V620]

================================

Block 0x6af
[0x6af:0x6b7]
---
Predecessors: [0x6a4]
Successors: []
---
0x6af RETURNDATASIZE
0x6b0 PUSH1 0x0
0x6b2 DUP1
0x6b3 RETURNDATACOPY
0x6b4 RETURNDATASIZE
0x6b5 PUSH1 0x0
0x6b7 REVERT
---
0x6af: V623 = RETURNDATASIZE
0x6b0: V624 = 0x0
0x6b3: RETURNDATACOPY 0x0 0x0 V623
0x6b4: V625 = RETURNDATASIZE
0x6b5: V626 = 0x0
0x6b7: REVERT 0x0 V625
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V602, 0xf3898a97, V607, V620]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V602, 0xf3898a97, V607, V620]

================================

Block 0x6b8
[0x6b8:0x6c9]
---
Predecessors: [0x6a4]
Successors: [0x6ca, 0x6ce]
---
0x6b8 JUMPDEST
0x6b9 POP
0x6ba POP
0x6bb POP
0x6bc POP
0x6bd PUSH1 0x40
0x6bf MLOAD
0x6c0 RETURNDATASIZE
0x6c1 PUSH1 0x20
0x6c3 DUP2
0x6c4 LT
0x6c5 ISZERO
0x6c6 PUSH2 0x6ce
0x6c9 JUMPI
---
0x6b8: JUMPDEST 
0x6bd: V627 = 0x40
0x6bf: V628 = M[0x40]
0x6c0: V629 = RETURNDATASIZE
0x6c1: V630 = 0x20
0x6c4: V631 = LT V629 0x20
0x6c5: V632 = ISZERO V631
0x6c6: V633 = 0x6ce
0x6c9: JUMPI 0x6ce V632
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V602, 0xf3898a97, V607, V620]
Stack pops: 4
Stack additions: [V628, V629]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V628, V629]

================================

Block 0x6ca
[0x6ca:0x6cd]
---
Predecessors: [0x6b8]
Successors: []
---
0x6ca PUSH1 0x0
0x6cc DUP1
0x6cd REVERT
---
0x6ca: V634 = 0x0
0x6cd: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V628, V629]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V628, V629]

================================

Block 0x6ce
[0x6ce:0x6d5]
---
Predecessors: [0x6b8]
Successors: [0x806]
---
0x6ce JUMPDEST
0x6cf POP
0x6d0 PUSH2 0x806
0x6d3 SWAP1
0x6d4 POP
0x6d5 JUMP
---
0x6ce: JUMPDEST 
0x6d0: V635 = 0x806
0x6d5: JUMP 0x806
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162, V628, V629]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V1162]

================================

Block 0x6d6
[0x6d6:0x75e]
---
Predecessors: [0x58d]
Successors: [0x75f, 0x763]
---
0x6d6 JUMPDEST
0x6d7 PUSH1 0x1
0x6d9 SLOAD
0x6da PUSH1 0x1
0x6dc PUSH1 0xa0
0x6de PUSH1 0x2
0x6e0 EXP
0x6e1 SUB
0x6e2 AND
0x6e3 PUSH4 0xf3898a97
0x6e8 DUP9
0x6e9 PUSH1 0x0
0x6eb PUSH1 0x20
0x6ed MUL
0x6ee ADD
0x6ef CALLDATALOAD
0x6f0 DUP13
0x6f1 DUP13
0x6f2 DUP12
0x6f3 PUSH1 0x0
0x6f5 PUSH1 0x20
0x6f7 MUL
0x6f8 ADD
0x6f9 CALLDATALOAD
0x6fa DUP13
0x6fb PUSH1 0x1
0x6fd PUSH1 0x20
0x6ff MUL
0x700 ADD
0x701 CALLDATALOAD
0x702 PUSH1 0x40
0x704 MLOAD
0x705 DUP7
0x706 PUSH4 0xffffffff
0x70b AND
0x70c PUSH1 0xe0
0x70e PUSH1 0x2
0x710 EXP
0x711 MUL
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x4
0x716 ADD
0x717 DUP1
0x718 DUP1
0x719 PUSH1 0x20
0x71b ADD
0x71c DUP5
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x20
0x721 ADD
0x722 DUP4
0x723 DUP2
0x724 MSTORE
0x725 PUSH1 0x20
0x727 ADD
0x728 DUP3
0x729 DUP2
0x72a SUB
0x72b DUP3
0x72c MSTORE
0x72d DUP7
0x72e DUP7
0x72f DUP3
0x730 DUP2
0x731 DUP2
0x732 MSTORE
0x733 PUSH1 0x20
0x735 ADD
0x736 SWAP3
0x737 POP
0x738 PUSH1 0x20
0x73a MUL
0x73b DUP1
0x73c DUP3
0x73d DUP5
0x73e CALLDATACOPY
0x73f DUP3
0x740 ADD
0x741 SWAP2
0x742 POP
0x743 POP
0x744 SWAP6
0x745 POP
0x746 POP
0x747 POP
0x748 POP
0x749 POP
0x74a POP
0x74b PUSH1 0x20
0x74d PUSH1 0x40
0x74f MLOAD
0x750 DUP1
0x751 DUP4
0x752 SUB
0x753 DUP2
0x754 DUP6
0x755 DUP9
0x756 DUP1
0x757 EXTCODESIZE
0x758 ISZERO
0x759 DUP1
0x75a ISZERO
0x75b PUSH2 0x763
0x75e JUMPI
---
0x6d6: JUMPDEST 
0x6d7: V636 = 0x1
0x6d9: V637 = S[0x1]
0x6da: V638 = 0x1
0x6dc: V639 = 0xa0
0x6de: V640 = 0x2
0x6e0: V641 = EXP 0x2 0xa0
0x6e1: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e2: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x6e3: V644 = 0xf3898a97
0x6e9: V645 = 0x0
0x6eb: V646 = 0x20
0x6ed: V647 = MUL 0x20 0x0
0x6ee: V648 = ADD 0x0 0xe4
0x6ef: V649 = CALLDATALOAD 0xe4
0x6f3: V650 = 0x0
0x6f5: V651 = 0x20
0x6f7: V652 = MUL 0x20 0x0
0x6f8: V653 = ADD 0x0 0xe4
0x6f9: V654 = CALLDATALOAD 0xe4
0x6fb: V655 = 0x1
0x6fd: V656 = 0x20
0x6ff: V657 = MUL 0x20 0x1
0x700: V658 = ADD 0x20 0xe4
0x701: V659 = CALLDATALOAD 0x104
0x702: V660 = 0x40
0x704: V661 = M[0x40]
0x706: V662 = 0xffffffff
0x70b: V663 = AND 0xffffffff 0xf3898a97
0x70c: V664 = 0xe0
0x70e: V665 = 0x2
0x710: V666 = EXP 0x2 0xe0
0x711: V667 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf3898a97
0x713: M[V661] = 0xf3898a9700000000000000000000000000000000000000000000000000000000
0x714: V668 = 0x4
0x716: V669 = ADD 0x4 V661
0x719: V670 = 0x20
0x71b: V671 = ADD 0x20 V669
0x71e: M[V671] = V654
0x71f: V672 = 0x20
0x721: V673 = ADD 0x20 V671
0x724: M[V673] = V659
0x725: V674 = 0x20
0x727: V675 = ADD 0x20 V673
0x72a: V676 = SUB V675 V669
0x72c: M[V669] = V676
0x732: M[V675] = V82
0x733: V677 = 0x20
0x735: V678 = ADD 0x20 V675
0x738: V679 = 0x20
0x73a: V680 = MUL 0x20 V82
0x73e: CALLDATACOPY V678 V80 V680
0x740: V681 = ADD V678 V680
0x74b: V682 = 0x20
0x74d: V683 = 0x40
0x74f: V684 = M[0x40]
0x752: V685 = SUB V681 V684
0x757: V686 = EXTCODESIZE V643
0x758: V687 = ISZERO V686
0x75a: V688 = ISZERO V687
0x75b: V689 = 0x763
0x75e: JUMPI 0x763 V688
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V643, 0xf3898a97, V649, V681, 0x20, V684, V685, V684, V649, V643, V687]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V643, 0xf3898a97, V649, V681, 0x20, V684, V685, V684, V649, V643, V687]

================================

Block 0x75f
[0x75f:0x762]
---
Predecessors: [0x6d6]
Successors: []
---
0x75f PUSH1 0x0
0x761 DUP1
0x762 REVERT
---
0x75f: V690 = 0x0
0x762: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V643, 0xf3898a97, V649, V681, 0x20, V684, V685, V684, V649, V643, V687]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V643, 0xf3898a97, V649, V681, 0x20, V684, V685, V684, V649, V643, V687]

================================

Block 0x763
[0x763:0x76d]
---
Predecessors: [0x6d6]
Successors: [0x76e, 0x777]
---
0x763 JUMPDEST
0x764 POP
0x765 GAS
0x766 CALL
0x767 ISZERO
0x768 DUP1
0x769 ISZERO
0x76a PUSH2 0x777
0x76d JUMPI
---
0x763: JUMPDEST 
0x765: V691 = GAS
0x766: V692 = CALL V691 V643 V649 V684 V685 V684 0x20
0x767: V693 = ISZERO V692
0x769: V694 = ISZERO V693
0x76a: V695 = 0x777
0x76d: JUMPI 0x777 V694
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V643, 0xf3898a97, V649, V681, 0x20, V684, V685, V684, V649, V643, V687]
Stack pops: 7
Stack additions: [V693]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V643, 0xf3898a97, V649, V681, V693]

================================

Block 0x76e
[0x76e:0x776]
---
Predecessors: [0x763]
Successors: []
---
0x76e RETURNDATASIZE
0x76f PUSH1 0x0
0x771 DUP1
0x772 RETURNDATACOPY
0x773 RETURNDATASIZE
0x774 PUSH1 0x0
0x776 REVERT
---
0x76e: V696 = RETURNDATASIZE
0x76f: V697 = 0x0
0x772: RETURNDATACOPY 0x0 0x0 V696
0x773: V698 = RETURNDATASIZE
0x774: V699 = 0x0
0x776: REVERT 0x0 V698
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V643, 0xf3898a97, V649, V681, V693]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V643, 0xf3898a97, V649, V681, V693]

================================

Block 0x777
[0x777:0x789]
---
Predecessors: [0x763]
Successors: [0x78a, 0x78e]
---
0x777 JUMPDEST
0x778 POP
0x779 POP
0x77a POP
0x77b POP
0x77c POP
0x77d PUSH1 0x40
0x77f MLOAD
0x780 RETURNDATASIZE
0x781 PUSH1 0x20
0x783 DUP2
0x784 LT
0x785 ISZERO
0x786 PUSH2 0x78e
0x789 JUMPI
---
0x777: JUMPDEST 
0x77d: V700 = 0x40
0x77f: V701 = M[0x40]
0x780: V702 = RETURNDATASIZE
0x781: V703 = 0x20
0x784: V704 = LT V702 0x20
0x785: V705 = ISZERO V704
0x786: V706 = 0x78e
0x789: JUMPI 0x78e V705
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V643, 0xf3898a97, V649, V681, V693]
Stack pops: 5
Stack additions: [V701, V702]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V701, V702]

================================

Block 0x78a
[0x78a:0x78d]
---
Predecessors: [0x777]
Successors: []
---
0x78a PUSH1 0x0
0x78c DUP1
0x78d REVERT
---
0x78a: V707 = 0x0
0x78d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V701, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V701, V702]

================================

Block 0x78e
[0x78e:0x805]
---
Predecessors: [0x777]
Successors: [0x9b2]
---
0x78e JUMPDEST
0x78f POP
0x790 MLOAD
0x791 PUSH1 0x40
0x793 DUP1
0x794 MLOAD
0x795 PUSH2 0x140
0x798 DUP2
0x799 ADD
0x79a SWAP1
0x79b SWAP2
0x79c MSTORE
0x79d SWAP1
0x79e SWAP2
0x79f POP
0x7a0 PUSH2 0x806
0x7a3 SWAP1
0x7a4 DUP1
0x7a5 PUSH1 0xa0
0x7a7 DUP2
0x7a8 DUP2
0x7a9 ADD
0x7aa SWAP1
0x7ab DUP13
0x7ac SWAP1
0x7ad PUSH1 0x5
0x7af SWAP1
0x7b0 DUP4
0x7b1 SWAP1
0x7b2 DUP4
0x7b3 SWAP1
0x7b4 DUP1
0x7b5 DUP3
0x7b6 DUP5
0x7b7 CALLDATACOPY
0x7b8 DUP3
0x7b9 ADD
0x7ba SWAP2
0x7bb POP
0x7bc POP
0x7bd POP
0x7be POP
0x7bf POP
0x7c0 DUP2
0x7c1 MSTORE
0x7c2 PUSH1 0x20
0x7c4 ADD
0x7c5 DUP10
0x7c6 PUSH1 0x7
0x7c8 DUP1
0x7c9 PUSH1 0x20
0x7cb MUL
0x7cc PUSH1 0x40
0x7ce MLOAD
0x7cf SWAP1
0x7d0 DUP2
0x7d1 ADD
0x7d2 PUSH1 0x40
0x7d4 MSTORE
0x7d5 DUP1
0x7d6 SWAP3
0x7d7 SWAP2
0x7d8 SWAP1
0x7d9 DUP3
0x7da PUSH1 0x7
0x7dc PUSH1 0x20
0x7de MUL
0x7df DUP1
0x7e0 DUP3
0x7e1 DUP5
0x7e2 CALLDATACOPY
0x7e3 POP
0x7e4 POP
0x7e5 POP
0x7e6 SWAP2
0x7e7 DUP4
0x7e8 MSTORE
0x7e9 POP
0x7ea POP
0x7eb PUSH1 0xff
0x7ed DUP10
0x7ee AND
0x7ef PUSH1 0x20
0x7f1 DUP3
0x7f2 ADD
0x7f3 MSTORE
0x7f4 PUSH1 0x40
0x7f6 DUP2
0x7f7 ADD
0x7f8 DUP9
0x7f9 SWAP1
0x7fa MSTORE
0x7fb PUSH1 0x60
0x7fd ADD
0x7fe DUP7
0x7ff SWAP1
0x800 MSTORE
0x801 DUP3
0x802 PUSH2 0x9b2
0x805 JUMP
---
0x78e: JUMPDEST 
0x790: V708 = M[V701]
0x791: V709 = 0x40
0x794: V710 = M[0x40]
0x795: V711 = 0x140
0x799: V712 = ADD V710 0x140
0x79c: M[0x40] = V712
0x7a0: V713 = 0x806
0x7a5: V714 = 0xa0
0x7a9: V715 = ADD 0xa0 V710
0x7ad: V716 = 0x5
0x7b7: CALLDATACOPY V715 0x44 0xa0
0x7b9: V717 = ADD V715 0xa0
0x7c1: M[V710] = V715
0x7c2: V718 = 0x20
0x7c4: V719 = ADD 0x20 V710
0x7c6: V720 = 0x7
0x7c9: V721 = 0x20
0x7cb: V722 = MUL 0x20 0x7
0x7cc: V723 = 0x40
0x7ce: V724 = M[0x40]
0x7d1: V725 = ADD V724 0xe0
0x7d2: V726 = 0x40
0x7d4: M[0x40] = V725
0x7da: V727 = 0x7
0x7dc: V728 = 0x20
0x7de: V729 = MUL 0x20 0x7
0x7e2: CALLDATACOPY V724 0xe4 0xe0
0x7e8: M[V719] = V724
0x7eb: V730 = 0xff
0x7ee: V731 = AND V87 0xff
0x7ef: V732 = 0x20
0x7f2: V733 = ADD V719 0x20
0x7f3: M[V733] = V731
0x7f4: V734 = 0x40
0x7f7: V735 = ADD V719 0x40
0x7fa: M[V735] = V89
0x7fb: V736 = 0x60
0x7fd: V737 = ADD 0x60 V719
0x800: M[V737] = V91
0x802: V738 = 0x9b2
0x805: JUMP 0x9b2
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V701, V702]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, V708, 0x806, V710, V708]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708]

================================

Block 0x806
[0x806:0x80e]
---
Predecessors: [0x6ce, 0xc3c]
Successors: [0x80f, 0x813]
---
0x806 JUMPDEST
0x807 ADDRESS
0x808 BALANCE
0x809 DUP3
0x80a LT
0x80b PUSH2 0x813
0x80e JUMPI
---
0x806: JUMPDEST 
0x807: V739 = ADDRESS
0x808: V740 = BALANCE V739
0x80a: V741 = LT V541 V740
0x80b: V742 = 0x813
0x80e: JUMPI 0x813 V741
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, S0]

================================

Block 0x80f
[0x80f:0x812]
---
Predecessors: [0x806]
Successors: []
---
0x80f PUSH1 0x0
0x811 DUP1
0x812 REVERT
---
0x80f: V743 = 0x0
0x812: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, S0]

================================

Block 0x813
[0x813:0x823]
---
Predecessors: [0x806]
Successors: [0xfd]
---
0x813 JUMPDEST
0x814 POP
0x815 POP
0x816 ADDRESS
0x817 BALANCE
0x818 SWAP10
0x819 SWAP9
0x81a POP
0x81b POP
0x81c POP
0x81d POP
0x81e POP
0x81f POP
0x820 POP
0x821 POP
0x822 POP
0x823 JUMP
---
0x813: JUMPDEST 
0x816: V744 = ADDRESS
0x817: V745 = BALANCE V744
0x823: JUMP 0xfd
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, S0]
Stack pops: 12
Stack additions: [V745]
Exit stack: [V13, V745]

================================

Block 0x824
[0x824:0x86f]
---
Predecessors: [0x594]
Successors: [0x870, 0x874]
---
0x824 JUMPDEST
0x825 PUSH1 0x0
0x827 DUP1
0x828 SLOAD
0x829 PUSH1 0x20
0x82b DUP4
0x82c ADD
0x82d MLOAD
0x82e PUSH1 0x1
0x830 PUSH1 0xa0
0x832 PUSH1 0x2
0x834 EXP
0x835 SUB
0x836 SWAP1
0x837 SWAP2
0x838 AND
0x839 SWAP1
0x83a PUSH4 0xd0e30db0
0x83f SWAP1
0x840 PUSH1 0x2
0x842 PUSH1 0x20
0x844 MUL
0x845 ADD
0x846 MLOAD
0x847 PUSH1 0x40
0x849 MLOAD
0x84a DUP3
0x84b PUSH4 0xffffffff
0x850 AND
0x851 PUSH1 0xe0
0x853 PUSH1 0x2
0x855 EXP
0x856 MUL
0x857 DUP2
0x858 MSTORE
0x859 PUSH1 0x4
0x85b ADD
0x85c PUSH1 0x0
0x85e PUSH1 0x40
0x860 MLOAD
0x861 DUP1
0x862 DUP4
0x863 SUB
0x864 DUP2
0x865 DUP6
0x866 DUP9
0x867 DUP1
0x868 EXTCODESIZE
0x869 ISZERO
0x86a DUP1
0x86b ISZERO
0x86c PUSH2 0x874
0x86f JUMPI
---
0x824: JUMPDEST 
0x825: V746 = 0x0
0x828: V747 = S[0x0]
0x829: V748 = 0x20
0x82c: V749 = ADD V551 0x20
0x82d: V750 = M[V749]
0x82e: V751 = 0x1
0x830: V752 = 0xa0
0x832: V753 = 0x2
0x834: V754 = EXP 0x2 0xa0
0x835: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x838: V756 = AND V747 0xffffffffffffffffffffffffffffffffffffffff
0x83a: V757 = 0xd0e30db0
0x840: V758 = 0x2
0x842: V759 = 0x20
0x844: V760 = MUL 0x20 0x2
0x845: V761 = ADD 0x40 V750
0x846: V762 = M[V761]
0x847: V763 = 0x40
0x849: V764 = M[0x40]
0x84b: V765 = 0xffffffff
0x850: V766 = AND 0xffffffff 0xd0e30db0
0x851: V767 = 0xe0
0x853: V768 = 0x2
0x855: V769 = EXP 0x2 0xe0
0x856: V770 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x858: M[V764] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x859: V771 = 0x4
0x85b: V772 = ADD 0x4 V764
0x85c: V773 = 0x0
0x85e: V774 = 0x40
0x860: V775 = M[0x40]
0x863: V776 = SUB V772 V775
0x868: V777 = EXTCODESIZE V756
0x869: V778 = ISZERO V777
0x86b: V779 = ISZERO V778
0x86c: V780 = 0x874
0x86f: JUMPI 0x874 V779
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551]
Stack pops: 1
Stack additions: [S0, 0x0, V756, 0xd0e30db0, V762, V772, 0x0, V775, V776, V775, V762, V756, V778]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V756, 0xd0e30db0, V762, V772, 0x0, V775, V776, V775, V762, V756, V778]

================================

Block 0x870
[0x870:0x873]
---
Predecessors: [0x824]
Successors: []
---
0x870 PUSH1 0x0
0x872 DUP1
0x873 REVERT
---
0x870: V781 = 0x0
0x873: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V756, 0xd0e30db0, V762, V772, 0x0, V775, V776, V775, V762, V756, V778]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V756, 0xd0e30db0, V762, V772, 0x0, V775, V776, V775, V762, V756, V778]

================================

Block 0x874
[0x874:0x87e]
---
Predecessors: [0x824]
Successors: [0x87f, 0x888]
---
0x874 JUMPDEST
0x875 POP
0x876 GAS
0x877 CALL
0x878 ISZERO
0x879 DUP1
0x87a ISZERO
0x87b PUSH2 0x888
0x87e JUMPI
---
0x874: JUMPDEST 
0x876: V782 = GAS
0x877: V783 = CALL V782 V756 V762 V775 V776 V775 0x0
0x878: V784 = ISZERO V783
0x87a: V785 = ISZERO V784
0x87b: V786 = 0x888
0x87e: JUMPI 0x888 V785
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V756, 0xd0e30db0, V762, V772, 0x0, V775, V776, V775, V762, V756, V778]
Stack pops: 7
Stack additions: [V784]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V756, 0xd0e30db0, V762, V772, V784]

================================

Block 0x87f
[0x87f:0x887]
---
Predecessors: [0x874]
Successors: []
---
0x87f RETURNDATASIZE
0x880 PUSH1 0x0
0x882 DUP1
0x883 RETURNDATACOPY
0x884 RETURNDATASIZE
0x885 PUSH1 0x0
0x887 REVERT
---
0x87f: V787 = RETURNDATASIZE
0x880: V788 = 0x0
0x883: RETURNDATACOPY 0x0 0x0 V787
0x884: V789 = RETURNDATASIZE
0x885: V790 = 0x0
0x887: REVERT 0x0 V789
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V756, 0xd0e30db0, V762, V772, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V756, 0xd0e30db0, V762, V772, V784]

================================

Block 0x888
[0x888:0x97f]
---
Predecessors: [0x874]
Successors: [0x980, 0x984]
---
0x888 JUMPDEST
0x889 POP
0x88a POP
0x88b PUSH1 0x0
0x88d SLOAD
0x88e DUP6
0x88f MLOAD
0x890 PUSH1 0x60
0x892 DUP1
0x893 DUP3
0x894 ADD
0x895 MLOAD
0x896 PUSH1 0x20
0x898 DUP10
0x899 ADD
0x89a MLOAD
0x89b PUSH1 0x40
0x89d DUP1
0x89e DUP3
0x89f ADD
0x8a0 MLOAD
0x8a1 PUSH1 0x80
0x8a3 SWAP6
0x8a4 DUP7
0x8a5 ADD
0x8a6 MLOAD
0x8a7 DUP4
0x8a8 DUP7
0x8a9 ADD
0x8aa MLOAD
0x8ab DUP8
0x8ac DUP6
0x8ad ADD
0x8ae MLOAD
0x8af PUSH1 0xa0
0x8b1 DUP7
0x8b2 ADD
0x8b3 MLOAD
0x8b4 SWAP5
0x8b5 DUP16
0x8b6 ADD
0x8b7 MLOAD
0x8b8 SWAP8
0x8b9 DUP16
0x8ba ADD
0x8bb MLOAD
0x8bc SWAP9
0x8bd DUP16
0x8be ADD
0x8bf MLOAD
0x8c0 PUSH1 0x1
0x8c2 PUSH1 0xa0
0x8c4 PUSH1 0x2
0x8c6 EXP
0x8c7 SUB
0x8c8 SWAP1
0x8c9 SWAP11
0x8ca AND
0x8cb SWAP13
0x8cc POP
0x8cd PUSH4 0xa19b14a
0x8d2 SWAP12
0x8d3 POP
0x8d4 SWAP6
0x8d5 SWAP10
0x8d6 POP
0x8d7 SWAP2
0x8d8 SWAP8
0x8d9 SWAP1
0x8da SWAP7
0x8db SWAP2
0x8dc SWAP6
0x8dd SWAP3
0x8de SWAP4
0x8df ADDRESS
0x8e0 SWAP4
0x8e1 SWAP3
0x8e2 SWAP2
0x8e3 SWAP1
0x8e4 PUSH1 0x6
0x8e6 PUSH1 0x20
0x8e8 MUL
0x8e9 ADD
0x8ea MLOAD
0x8eb PUSH1 0x40
0x8ed DUP1
0x8ee MLOAD
0x8ef PUSH1 0xe0
0x8f1 PUSH1 0x2
0x8f3 EXP
0x8f4 PUSH4 0xffffffff
0x8f9 DUP16
0x8fa AND
0x8fb MUL
0x8fc DUP2
0x8fd MSTORE
0x8fe PUSH1 0x1
0x900 PUSH1 0xa0
0x902 PUSH1 0x2
0x904 EXP
0x905 SUB
0x906 SWAP13
0x907 DUP14
0x908 AND
0x909 PUSH1 0x4
0x90b DUP3
0x90c ADD
0x90d MSTORE
0x90e PUSH1 0x24
0x910 DUP2
0x911 ADD
0x912 SWAP12
0x913 SWAP1
0x914 SWAP12
0x915 MSTORE
0x916 SWAP9
0x917 DUP12
0x918 AND
0x919 PUSH1 0x44
0x91b DUP12
0x91c ADD
0x91d MSTORE
0x91e PUSH1 0x64
0x920 DUP11
0x921 ADD
0x922 SWAP8
0x923 SWAP1
0x924 SWAP8
0x925 MSTORE
0x926 PUSH1 0x84
0x928 DUP10
0x929 ADD
0x92a SWAP6
0x92b SWAP1
0x92c SWAP6
0x92d MSTORE
0x92e PUSH1 0xa4
0x930 DUP9
0x931 ADD
0x932 SWAP4
0x933 SWAP1
0x934 SWAP4
0x935 MSTORE
0x936 SWAP7
0x937 AND
0x938 PUSH1 0xc4
0x93a DUP7
0x93b ADD
0x93c MSTORE
0x93d PUSH1 0xff
0x93f SWAP1
0x940 SWAP6
0x941 AND
0x942 PUSH1 0xe4
0x944 DUP6
0x945 ADD
0x946 MSTORE
0x947 PUSH2 0x104
0x94a DUP5
0x94b ADD
0x94c SWAP5
0x94d SWAP1
0x94e SWAP5
0x94f MSTORE
0x950 PUSH2 0x124
0x953 DUP4
0x954 ADD
0x955 SWAP4
0x956 SWAP1
0x957 SWAP4
0x958 MSTORE
0x959 PUSH2 0x144
0x95c DUP3
0x95d ADD
0x95e SWAP3
0x95f SWAP1
0x960 SWAP3
0x961 MSTORE
0x962 SWAP1
0x963 MLOAD
0x964 PUSH2 0x164
0x967 DUP1
0x968 DUP4
0x969 ADD
0x96a SWAP3
0x96b PUSH1 0x0
0x96d SWAP3
0x96e SWAP2
0x96f SWAP1
0x970 DUP3
0x971 SWAP1
0x972 SUB
0x973 ADD
0x974 DUP2
0x975 DUP4
0x976 DUP8
0x977 DUP1
0x978 EXTCODESIZE
0x979 ISZERO
0x97a DUP1
0x97b ISZERO
0x97c PUSH2 0x984
0x97f JUMPI
---
0x888: JUMPDEST 
0x88b: V791 = 0x0
0x88d: V792 = S[0x0]
0x88f: V793 = M[V551]
0x890: V794 = 0x60
0x894: V795 = ADD V793 0x60
0x895: V796 = M[V795]
0x896: V797 = 0x20
0x899: V798 = ADD V551 0x20
0x89a: V799 = M[V798]
0x89b: V800 = 0x40
0x89f: V801 = ADD V799 0x40
0x8a0: V802 = M[V801]
0x8a1: V803 = 0x80
0x8a5: V804 = ADD 0x80 V793
0x8a6: V805 = M[V804]
0x8a9: V806 = ADD 0x60 V799
0x8aa: V807 = M[V806]
0x8ad: V808 = ADD V799 0x80
0x8ae: V809 = M[V808]
0x8af: V810 = 0xa0
0x8b2: V811 = ADD V799 0xa0
0x8b3: V812 = M[V811]
0x8b6: V813 = ADD V551 0x40
0x8b7: V814 = M[V813]
0x8ba: V815 = ADD V551 0x60
0x8bb: V816 = M[V815]
0x8be: V817 = ADD V551 0x80
0x8bf: V818 = M[V817]
0x8c0: V819 = 0x1
0x8c2: V820 = 0xa0
0x8c4: V821 = 0x2
0x8c6: V822 = EXP 0x2 0xa0
0x8c7: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ca: V824 = AND V792 0xffffffffffffffffffffffffffffffffffffffff
0x8cd: V825 = 0xa19b14a
0x8df: V826 = ADDRESS
0x8e4: V827 = 0x6
0x8e6: V828 = 0x20
0x8e8: V829 = MUL 0x20 0x6
0x8e9: V830 = ADD 0xc0 V799
0x8ea: V831 = M[V830]
0x8eb: V832 = 0x40
0x8ee: V833 = M[0x40]
0x8ef: V834 = 0xe0
0x8f1: V835 = 0x2
0x8f3: V836 = EXP 0x2 0xe0
0x8f4: V837 = 0xffffffff
0x8fa: V838 = AND 0xa19b14a 0xffffffff
0x8fb: V839 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x8fd: M[V833] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x8fe: V840 = 0x1
0x900: V841 = 0xa0
0x902: V842 = 0x2
0x904: V843 = EXP 0x2 0xa0
0x905: V844 = SUB 0x10000000000000000000000000000000000000000 0x1
0x908: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V796
0x909: V846 = 0x4
0x90c: V847 = ADD V833 0x4
0x90d: M[V847] = V845
0x90e: V848 = 0x24
0x911: V849 = ADD V833 0x24
0x915: M[V849] = V802
0x918: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0x919: V851 = 0x44
0x91c: V852 = ADD V833 0x44
0x91d: M[V852] = V850
0x91e: V853 = 0x64
0x921: V854 = ADD V833 0x64
0x925: M[V854] = V807
0x926: V855 = 0x84
0x929: V856 = ADD V833 0x84
0x92d: M[V856] = V809
0x92e: V857 = 0xa4
0x931: V858 = ADD V833 0xa4
0x935: M[V858] = V812
0x937: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0x938: V860 = 0xc4
0x93b: V861 = ADD V833 0xc4
0x93c: M[V861] = V859
0x93d: V862 = 0xff
0x941: V863 = AND V814 0xff
0x942: V864 = 0xe4
0x945: V865 = ADD V833 0xe4
0x946: M[V865] = V863
0x947: V866 = 0x104
0x94b: V867 = ADD V833 0x104
0x94f: M[V867] = V816
0x950: V868 = 0x124
0x954: V869 = ADD V833 0x124
0x958: M[V869] = V818
0x959: V870 = 0x144
0x95d: V871 = ADD V833 0x144
0x961: M[V871] = V831
0x963: V872 = M[0x40]
0x964: V873 = 0x164
0x969: V874 = ADD V833 0x164
0x96b: V875 = 0x0
0x972: V876 = SUB V833 V872
0x973: V877 = ADD V876 0x164
0x978: V878 = EXTCODESIZE V824
0x979: V879 = ISZERO V878
0x97b: V880 = ISZERO V879
0x97c: V881 = 0x984
0x97f: JUMPI 0x984 V880
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V756, 0xd0e30db0, V762, V772, V784]
Stack pops: 7
Stack additions: [S6, S5, V824, 0xa19b14a, V874, 0x0, V872, V877, V872, 0x0, V824, V879]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V824, 0xa19b14a, V874, 0x0, V872, V877, V872, 0x0, V824, V879]

================================

Block 0x980
[0x980:0x983]
---
Predecessors: [0x888]
Successors: []
---
0x980 PUSH1 0x0
0x982 DUP1
0x983 REVERT
---
0x980: V882 = 0x0
0x983: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V824, 0xa19b14a, V874, 0x0, V872, V877, V872, 0x0, V824, V879]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V824, 0xa19b14a, V874, 0x0, V872, V877, V872, 0x0, V824, V879]

================================

Block 0x984
[0x984:0x98e]
---
Predecessors: [0x888]
Successors: [0x98f, 0x998]
---
0x984 JUMPDEST
0x985 POP
0x986 GAS
0x987 CALL
0x988 ISZERO
0x989 DUP1
0x98a ISZERO
0x98b PUSH2 0x998
0x98e JUMPI
---
0x984: JUMPDEST 
0x986: V883 = GAS
0x987: V884 = CALL V883 V824 0x0 V872 V877 V872 0x0
0x988: V885 = ISZERO V884
0x98a: V886 = ISZERO V885
0x98b: V887 = 0x998
0x98e: JUMPI 0x998 V886
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V824, 0xa19b14a, V874, 0x0, V872, V877, V872, 0x0, V824, V879]
Stack pops: 7
Stack additions: [V885]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V824, 0xa19b14a, V874, V885]

================================

Block 0x98f
[0x98f:0x997]
---
Predecessors: [0x984]
Successors: []
---
0x98f RETURNDATASIZE
0x990 PUSH1 0x0
0x992 DUP1
0x993 RETURNDATACOPY
0x994 RETURNDATASIZE
0x995 PUSH1 0x0
0x997 REVERT
---
0x98f: V888 = RETURNDATASIZE
0x990: V889 = 0x0
0x993: RETURNDATACOPY 0x0 0x0 V888
0x994: V890 = RETURNDATASIZE
0x995: V891 = 0x0
0x997: REVERT 0x0 V890
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V824, 0xa19b14a, V874, V885]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V824, 0xa19b14a, V874, V885]

================================

Block 0x998
[0x998:0x9ab]
---
Predecessors: [0x984]
Successors: [0xc44]
---
0x998 JUMPDEST
0x999 POP
0x99a POP
0x99b DUP4
0x99c MLOAD
0x99d PUSH1 0x80
0x99f ADD
0x9a0 MLOAD
0x9a1 PUSH2 0x9ac
0x9a4 SWAP3
0x9a5 POP
0x9a6 SWAP1
0x9a7 POP
0x9a8 PUSH2 0xc44
0x9ab JUMP
---
0x998: JUMPDEST 
0x99c: V892 = M[V551]
0x99d: V893 = 0x80
0x99f: V894 = ADD 0x80 V892
0x9a0: V895 = M[V894]
0x9a1: V896 = 0x9ac
0x9a8: V897 = 0xc44
0x9ab: JUMP 0xc44
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V824, 0xa19b14a, V874, V885]
Stack pops: 6
Stack additions: [S5, S4, 0x9ac, V895]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895]

================================

Block 0x9ac
[0x9ac:0x9b1]
---
Predecessors: [0xd63]
Successors: [0x605]
---
0x9ac JUMPDEST
0x9ad SWAP3
0x9ae SWAP2
0x9af POP
0x9b0 POP
0x9b1 JUMP
---
0x9ac: JUMPDEST 
0x9b1: JUMP 0x605
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V1162]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, V1162]

================================

Block 0x9b2
[0x9b2:0xa1e]
---
Predecessors: [0x78e]
Successors: [0xa1f, 0xa23]
---
0x9b2 JUMPDEST
0x9b3 PUSH1 0x0
0x9b5 DUP1
0x9b6 SLOAD
0x9b7 DUP4
0x9b8 MLOAD
0x9b9 PUSH1 0x60
0x9bb ADD
0x9bc MLOAD
0x9bd PUSH1 0x40
0x9bf DUP1
0x9c0 MLOAD
0x9c1 PUSH32 0x338b5dea00000000000000000000000000000000000000000000000000000000
0x9e2 DUP2
0x9e3 MSTORE
0x9e4 PUSH1 0x1
0x9e6 PUSH1 0xa0
0x9e8 PUSH1 0x2
0x9ea EXP
0x9eb SUB
0x9ec SWAP3
0x9ed DUP4
0x9ee AND
0x9ef PUSH1 0x4
0x9f1 DUP3
0x9f2 ADD
0x9f3 MSTORE
0x9f4 PUSH1 0x24
0x9f6 DUP2
0x9f7 ADD
0x9f8 DUP7
0x9f9 SWAP1
0x9fa MSTORE
0x9fb SWAP1
0x9fc MLOAD
0x9fd SWAP2
0x9fe SWAP1
0x9ff SWAP3
0xa00 AND
0xa01 SWAP3
0xa02 PUSH4 0x338b5dea
0xa07 SWAP3
0xa08 PUSH1 0x44
0xa0a DUP1
0xa0b DUP3
0xa0c ADD
0xa0d SWAP4
0xa0e SWAP2
0xa0f DUP3
0xa10 SWAP1
0xa11 SUB
0xa12 ADD
0xa13 DUP2
0xa14 DUP4
0xa15 DUP8
0xa16 DUP1
0xa17 EXTCODESIZE
0xa18 ISZERO
0xa19 DUP1
0xa1a ISZERO
0xa1b PUSH2 0xa23
0xa1e JUMPI
---
0x9b2: JUMPDEST 
0x9b3: V898 = 0x0
0x9b6: V899 = S[0x0]
0x9b8: V900 = M[V710]
0x9b9: V901 = 0x60
0x9bb: V902 = ADD 0x60 V900
0x9bc: V903 = M[V902]
0x9bd: V904 = 0x40
0x9c0: V905 = M[0x40]
0x9c1: V906 = 0x338b5dea00000000000000000000000000000000000000000000000000000000
0x9e3: M[V905] = 0x338b5dea00000000000000000000000000000000000000000000000000000000
0x9e4: V907 = 0x1
0x9e6: V908 = 0xa0
0x9e8: V909 = 0x2
0x9ea: V910 = EXP 0x2 0xa0
0x9eb: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ee: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V903
0x9ef: V913 = 0x4
0x9f2: V914 = ADD V905 0x4
0x9f3: M[V914] = V912
0x9f4: V915 = 0x24
0x9f7: V916 = ADD V905 0x24
0x9fa: M[V916] = V708
0x9fc: V917 = M[0x40]
0xa00: V918 = AND V899 0xffffffffffffffffffffffffffffffffffffffff
0xa02: V919 = 0x338b5dea
0xa08: V920 = 0x44
0xa0c: V921 = ADD V905 0x44
0xa11: V922 = SUB V905 V917
0xa12: V923 = ADD V922 0x44
0xa17: V924 = EXTCODESIZE V918
0xa18: V925 = ISZERO V924
0xa1a: V926 = ISZERO V925
0xa1b: V927 = 0xa23
0xa1e: JUMPI 0xa23 V926
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708]
Stack pops: 2
Stack additions: [S1, S0, V918, 0x338b5dea, V921, 0x0, V917, V923, V917, 0x0, V918, V925]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V918, 0x338b5dea, V921, 0x0, V917, V923, V917, 0x0, V918, V925]

================================

Block 0xa1f
[0xa1f:0xa22]
---
Predecessors: [0x9b2]
Successors: []
---
0xa1f PUSH1 0x0
0xa21 DUP1
0xa22 REVERT
---
0xa1f: V928 = 0x0
0xa22: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V918, 0x338b5dea, V921, 0x0, V917, V923, V917, 0x0, V918, V925]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V918, 0x338b5dea, V921, 0x0, V917, V923, V917, 0x0, V918, V925]

================================

Block 0xa23
[0xa23:0xa2d]
---
Predecessors: [0x9b2]
Successors: [0xa2e, 0xa37]
---
0xa23 JUMPDEST
0xa24 POP
0xa25 GAS
0xa26 CALL
0xa27 ISZERO
0xa28 DUP1
0xa29 ISZERO
0xa2a PUSH2 0xa37
0xa2d JUMPI
---
0xa23: JUMPDEST 
0xa25: V929 = GAS
0xa26: V930 = CALL V929 V918 0x0 V917 V923 V917 0x0
0xa27: V931 = ISZERO V930
0xa29: V932 = ISZERO V931
0xa2a: V933 = 0xa37
0xa2d: JUMPI 0xa37 V932
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V918, 0x338b5dea, V921, 0x0, V917, V923, V917, 0x0, V918, V925]
Stack pops: 7
Stack additions: [V931]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V918, 0x338b5dea, V921, V931]

================================

Block 0xa2e
[0xa2e:0xa36]
---
Predecessors: [0xa23]
Successors: []
---
0xa2e RETURNDATASIZE
0xa2f PUSH1 0x0
0xa31 DUP1
0xa32 RETURNDATACOPY
0xa33 RETURNDATASIZE
0xa34 PUSH1 0x0
0xa36 REVERT
---
0xa2e: V934 = RETURNDATASIZE
0xa2f: V935 = 0x0
0xa32: RETURNDATACOPY 0x0 0x0 V934
0xa33: V936 = RETURNDATASIZE
0xa34: V937 = 0x0
0xa36: REVERT 0x0 V936
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V918, 0x338b5dea, V921, V931]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V918, 0x338b5dea, V921, V931]

================================

Block 0xa37
[0xa37:0xb2d]
---
Predecessors: [0xa23]
Successors: [0xb2e, 0xb32]
---
0xa37 JUMPDEST
0xa38 POP
0xa39 POP
0xa3a PUSH1 0x0
0xa3c SLOAD
0xa3d DUP5
0xa3e MLOAD
0xa3f PUSH1 0x60
0xa41 DUP1
0xa42 DUP3
0xa43 ADD
0xa44 MLOAD
0xa45 PUSH1 0x20
0xa47 DUP9
0xa48 ADD
0xa49 MLOAD
0xa4a PUSH1 0x40
0xa4c DUP1
0xa4d DUP3
0xa4e ADD
0xa4f MLOAD
0xa50 PUSH1 0x80
0xa52 SWAP6
0xa53 DUP7
0xa54 ADD
0xa55 MLOAD
0xa56 DUP4
0xa57 DUP7
0xa58 ADD
0xa59 MLOAD
0xa5a DUP8
0xa5b DUP6
0xa5c ADD
0xa5d MLOAD
0xa5e PUSH1 0xa0
0xa60 DUP7
0xa61 ADD
0xa62 MLOAD
0xa63 SWAP5
0xa64 DUP15
0xa65 ADD
0xa66 MLOAD
0xa67 SWAP8
0xa68 DUP15
0xa69 ADD
0xa6a MLOAD
0xa6b SWAP9
0xa6c DUP15
0xa6d ADD
0xa6e MLOAD
0xa6f PUSH1 0x1
0xa71 PUSH1 0xa0
0xa73 PUSH1 0x2
0xa75 EXP
0xa76 SUB
0xa77 SWAP1
0xa78 SWAP11
0xa79 AND
0xa7a SWAP12
0xa7b POP
0xa7c PUSH4 0xa19b14a
0xa81 SWAP11
0xa82 POP
0xa83 SWAP6
0xa84 SWAP9
0xa85 SWAP3
0xa86 SWAP8
0xa87 SWAP2
0xa88 SWAP7
0xa89 SWAP1
0xa8a SWAP6
0xa8b SWAP5
0xa8c ADDRESS
0xa8d SWAP4
0xa8e SWAP2
0xa8f SWAP3
0xa90 SWAP2
0xa91 SWAP1
0xa92 PUSH1 0x6
0xa94 PUSH1 0x20
0xa96 MUL
0xa97 ADD
0xa98 MLOAD
0xa99 PUSH1 0x40
0xa9b DUP1
0xa9c MLOAD
0xa9d PUSH1 0xe0
0xa9f PUSH1 0x2
0xaa1 EXP
0xaa2 PUSH4 0xffffffff
0xaa7 DUP16
0xaa8 AND
0xaa9 MUL
0xaaa DUP2
0xaab MSTORE
0xaac PUSH1 0x1
0xaae PUSH1 0xa0
0xab0 PUSH1 0x2
0xab2 EXP
0xab3 SUB
0xab4 SWAP13
0xab5 DUP14
0xab6 AND
0xab7 PUSH1 0x4
0xab9 DUP3
0xaba ADD
0xabb MSTORE
0xabc PUSH1 0x24
0xabe DUP2
0xabf ADD
0xac0 SWAP12
0xac1 SWAP1
0xac2 SWAP12
0xac3 MSTORE
0xac4 SWAP9
0xac5 DUP12
0xac6 AND
0xac7 PUSH1 0x44
0xac9 DUP12
0xaca ADD
0xacb MSTORE
0xacc PUSH1 0x64
0xace DUP11
0xacf ADD
0xad0 SWAP8
0xad1 SWAP1
0xad2 SWAP8
0xad3 MSTORE
0xad4 PUSH1 0x84
0xad6 DUP10
0xad7 ADD
0xad8 SWAP6
0xad9 SWAP1
0xada SWAP6
0xadb MSTORE
0xadc PUSH1 0xa4
0xade DUP9
0xadf ADD
0xae0 SWAP4
0xae1 SWAP1
0xae2 SWAP4
0xae3 MSTORE
0xae4 SWAP7
0xae5 AND
0xae6 PUSH1 0xc4
0xae8 DUP7
0xae9 ADD
0xaea MSTORE
0xaeb PUSH1 0xff
0xaed SWAP1
0xaee SWAP6
0xaef AND
0xaf0 PUSH1 0xe4
0xaf2 DUP6
0xaf3 ADD
0xaf4 MSTORE
0xaf5 PUSH2 0x104
0xaf8 DUP5
0xaf9 ADD
0xafa SWAP5
0xafb SWAP1
0xafc SWAP5
0xafd MSTORE
0xafe PUSH2 0x124
0xb01 DUP4
0xb02 ADD
0xb03 SWAP4
0xb04 SWAP1
0xb05 SWAP4
0xb06 MSTORE
0xb07 PUSH2 0x144
0xb0a DUP3
0xb0b ADD
0xb0c SWAP3
0xb0d SWAP1
0xb0e SWAP3
0xb0f MSTORE
0xb10 SWAP1
0xb11 MLOAD
0xb12 PUSH2 0x164
0xb15 DUP1
0xb16 DUP4
0xb17 ADD
0xb18 SWAP3
0xb19 PUSH1 0x0
0xb1b SWAP3
0xb1c SWAP2
0xb1d SWAP1
0xb1e DUP3
0xb1f SWAP1
0xb20 SUB
0xb21 ADD
0xb22 DUP2
0xb23 DUP4
0xb24 DUP8
0xb25 DUP1
0xb26 EXTCODESIZE
0xb27 ISZERO
0xb28 DUP1
0xb29 ISZERO
0xb2a PUSH2 0xb32
0xb2d JUMPI
---
0xa37: JUMPDEST 
0xa3a: V938 = 0x0
0xa3c: V939 = S[0x0]
0xa3e: V940 = M[V710]
0xa3f: V941 = 0x60
0xa43: V942 = ADD V940 0x60
0xa44: V943 = M[V942]
0xa45: V944 = 0x20
0xa48: V945 = ADD V710 0x20
0xa49: V946 = M[V945]
0xa4a: V947 = 0x40
0xa4e: V948 = ADD V946 0x40
0xa4f: V949 = M[V948]
0xa50: V950 = 0x80
0xa54: V951 = ADD 0x80 V940
0xa55: V952 = M[V951]
0xa58: V953 = ADD 0x60 V946
0xa59: V954 = M[V953]
0xa5c: V955 = ADD V946 0x80
0xa5d: V956 = M[V955]
0xa5e: V957 = 0xa0
0xa61: V958 = ADD V946 0xa0
0xa62: V959 = M[V958]
0xa65: V960 = ADD V710 0x40
0xa66: V961 = M[V960]
0xa69: V962 = ADD V710 0x60
0xa6a: V963 = M[V962]
0xa6d: V964 = ADD V710 0x80
0xa6e: V965 = M[V964]
0xa6f: V966 = 0x1
0xa71: V967 = 0xa0
0xa73: V968 = 0x2
0xa75: V969 = EXP 0x2 0xa0
0xa76: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa79: V971 = AND V939 0xffffffffffffffffffffffffffffffffffffffff
0xa7c: V972 = 0xa19b14a
0xa8c: V973 = ADDRESS
0xa92: V974 = 0x6
0xa94: V975 = 0x20
0xa96: V976 = MUL 0x20 0x6
0xa97: V977 = ADD 0xc0 V946
0xa98: V978 = M[V977]
0xa99: V979 = 0x40
0xa9c: V980 = M[0x40]
0xa9d: V981 = 0xe0
0xa9f: V982 = 0x2
0xaa1: V983 = EXP 0x2 0xe0
0xaa2: V984 = 0xffffffff
0xaa8: V985 = AND 0xa19b14a 0xffffffff
0xaa9: V986 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0xaab: M[V980] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0xaac: V987 = 0x1
0xaae: V988 = 0xa0
0xab0: V989 = 0x2
0xab2: V990 = EXP 0x2 0xa0
0xab3: V991 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab6: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V943
0xab7: V993 = 0x4
0xaba: V994 = ADD V980 0x4
0xabb: M[V994] = V992
0xabc: V995 = 0x24
0xabf: V996 = ADD V980 0x24
0xac3: M[V996] = V949
0xac6: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V952
0xac7: V998 = 0x44
0xaca: V999 = ADD V980 0x44
0xacb: M[V999] = V997
0xacc: V1000 = 0x64
0xacf: V1001 = ADD V980 0x64
0xad3: M[V1001] = V954
0xad4: V1002 = 0x84
0xad7: V1003 = ADD V980 0x84
0xadb: M[V1003] = V956
0xadc: V1004 = 0xa4
0xadf: V1005 = ADD V980 0xa4
0xae3: M[V1005] = V959
0xae5: V1006 = AND 0xffffffffffffffffffffffffffffffffffffffff V973
0xae6: V1007 = 0xc4
0xae9: V1008 = ADD V980 0xc4
0xaea: M[V1008] = V1006
0xaeb: V1009 = 0xff
0xaef: V1010 = AND V961 0xff
0xaf0: V1011 = 0xe4
0xaf3: V1012 = ADD V980 0xe4
0xaf4: M[V1012] = V1010
0xaf5: V1013 = 0x104
0xaf9: V1014 = ADD V980 0x104
0xafd: M[V1014] = V963
0xafe: V1015 = 0x124
0xb02: V1016 = ADD V980 0x124
0xb06: M[V1016] = V965
0xb07: V1017 = 0x144
0xb0b: V1018 = ADD V980 0x144
0xb0f: M[V1018] = V978
0xb11: V1019 = M[0x40]
0xb12: V1020 = 0x164
0xb17: V1021 = ADD V980 0x164
0xb19: V1022 = 0x0
0xb20: V1023 = SUB V980 V1019
0xb21: V1024 = ADD V1023 0x164
0xb26: V1025 = EXTCODESIZE V971
0xb27: V1026 = ISZERO V1025
0xb29: V1027 = ISZERO V1026
0xb2a: V1028 = 0xb32
0xb2d: JUMPI 0xb32 V1027
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V918, 0x338b5dea, V921, V931]
Stack pops: 6
Stack additions: [S5, S4, V971, 0xa19b14a, V1021, 0x0, V1019, V1024, V1019, 0x0, V971, V1026]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V971, 0xa19b14a, V1021, 0x0, V1019, V1024, V1019, 0x0, V971, V1026]

================================

Block 0xb2e
[0xb2e:0xb31]
---
Predecessors: [0xa37]
Successors: []
---
0xb2e PUSH1 0x0
0xb30 DUP1
0xb31 REVERT
---
0xb2e: V1029 = 0x0
0xb31: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V971, 0xa19b14a, V1021, 0x0, V1019, V1024, V1019, 0x0, V971, V1026]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V971, 0xa19b14a, V1021, 0x0, V1019, V1024, V1019, 0x0, V971, V1026]

================================

Block 0xb32
[0xb32:0xb3c]
---
Predecessors: [0xa37]
Successors: [0xb3d, 0xb46]
---
0xb32 JUMPDEST
0xb33 POP
0xb34 GAS
0xb35 CALL
0xb36 ISZERO
0xb37 DUP1
0xb38 ISZERO
0xb39 PUSH2 0xb46
0xb3c JUMPI
---
0xb32: JUMPDEST 
0xb34: V1030 = GAS
0xb35: V1031 = CALL V1030 V971 0x0 V1019 V1024 V1019 0x0
0xb36: V1032 = ISZERO V1031
0xb38: V1033 = ISZERO V1032
0xb39: V1034 = 0xb46
0xb3c: JUMPI 0xb46 V1033
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V971, 0xa19b14a, V1021, 0x0, V1019, V1024, V1019, 0x0, V971, V1026]
Stack pops: 7
Stack additions: [V1032]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V971, 0xa19b14a, V1021, V1032]

================================

Block 0xb3d
[0xb3d:0xb45]
---
Predecessors: [0xb32]
Successors: []
---
0xb3d RETURNDATASIZE
0xb3e PUSH1 0x0
0xb40 DUP1
0xb41 RETURNDATACOPY
0xb42 RETURNDATASIZE
0xb43 PUSH1 0x0
0xb45 REVERT
---
0xb3d: V1035 = RETURNDATASIZE
0xb3e: V1036 = 0x0
0xb41: RETURNDATACOPY 0x0 0x0 V1035
0xb42: V1037 = RETURNDATASIZE
0xb43: V1038 = 0x0
0xb45: REVERT 0x0 V1037
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V971, 0xa19b14a, V1021, V1032]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V971, 0xa19b14a, V1021, V1032]

================================

Block 0xb46
[0xb46:0xbbb]
---
Predecessors: [0xb32]
Successors: [0xbbc, 0xbc0]
---
0xb46 JUMPDEST
0xb47 POP
0xb48 POP
0xb49 PUSH1 0x0
0xb4b DUP1
0xb4c SLOAD
0xb4d PUSH1 0x40
0xb4f DUP1
0xb50 MLOAD
0xb51 PUSH32 0xf7888aec00000000000000000000000000000000000000000000000000000000
0xb72 DUP2
0xb73 MSTORE
0xb74 PUSH1 0x4
0xb76 DUP2
0xb77 ADD
0xb78 DUP5
0xb79 SWAP1
0xb7a MSTORE
0xb7b ADDRESS
0xb7c PUSH1 0x24
0xb7e DUP3
0xb7f ADD
0xb80 MSTORE
0xb81 SWAP1
0xb82 MLOAD
0xb83 PUSH1 0x1
0xb85 PUSH1 0xa0
0xb87 PUSH1 0x2
0xb89 EXP
0xb8a SUB
0xb8b SWAP1
0xb8c SWAP3
0xb8d AND
0xb8e SWAP5
0xb8f POP
0xb90 PUSH4 0x2e1a7d4d
0xb95 SWAP4
0xb96 POP
0xb97 DUP5
0xb98 SWAP3
0xb99 PUSH4 0xf7888aec
0xb9e SWAP3
0xb9f PUSH1 0x44
0xba1 DUP1
0xba2 DUP5
0xba3 ADD
0xba4 SWAP4
0xba5 PUSH1 0x20
0xba7 SWAP4
0xba8 SWAP1
0xba9 DUP4
0xbaa SWAP1
0xbab SUB
0xbac SWAP1
0xbad SWAP2
0xbae ADD
0xbaf SWAP1
0xbb0 DUP3
0xbb1 SWAP1
0xbb2 DUP8
0xbb3 DUP1
0xbb4 EXTCODESIZE
0xbb5 ISZERO
0xbb6 DUP1
0xbb7 ISZERO
0xbb8 PUSH2 0xbc0
0xbbb JUMPI
---
0xb46: JUMPDEST 
0xb49: V1039 = 0x0
0xb4c: V1040 = S[0x0]
0xb4d: V1041 = 0x40
0xb50: V1042 = M[0x40]
0xb51: V1043 = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0xb73: M[V1042] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0xb74: V1044 = 0x4
0xb77: V1045 = ADD V1042 0x4
0xb7a: M[V1045] = 0x0
0xb7b: V1046 = ADDRESS
0xb7c: V1047 = 0x24
0xb7f: V1048 = ADD V1042 0x24
0xb80: M[V1048] = V1046
0xb82: V1049 = M[0x40]
0xb83: V1050 = 0x1
0xb85: V1051 = 0xa0
0xb87: V1052 = 0x2
0xb89: V1053 = EXP 0x2 0xa0
0xb8a: V1054 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8d: V1055 = AND V1040 0xffffffffffffffffffffffffffffffffffffffff
0xb90: V1056 = 0x2e1a7d4d
0xb99: V1057 = 0xf7888aec
0xb9f: V1058 = 0x44
0xba3: V1059 = ADD V1042 0x44
0xba5: V1060 = 0x20
0xbab: V1061 = SUB V1042 V1049
0xbae: V1062 = ADD 0x44 V1061
0xbb4: V1063 = EXTCODESIZE V1055
0xbb5: V1064 = ISZERO V1063
0xbb7: V1065 = ISZERO V1064
0xbb8: V1066 = 0xbc0
0xbbb: JUMPI 0xbc0 V1065
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V971, 0xa19b14a, V1021, V1032]
Stack pops: 4
Stack additions: [V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, 0x20, V1049, V1062, V1049, 0x0, V1055, V1064]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, 0x20, V1049, V1062, V1049, 0x0, V1055, V1064]

================================

Block 0xbbc
[0xbbc:0xbbf]
---
Predecessors: [0xb46]
Successors: []
---
0xbbc PUSH1 0x0
0xbbe DUP1
0xbbf REVERT
---
0xbbc: V1067 = 0x0
0xbbf: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, 0x20, V1049, V1062, V1049, 0x0, V1055, V1064]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, 0x20, V1049, V1062, V1049, 0x0, V1055, V1064]

================================

Block 0xbc0
[0xbc0:0xbca]
---
Predecessors: [0xb46]
Successors: [0xbcb, 0xbd4]
---
0xbc0 JUMPDEST
0xbc1 POP
0xbc2 GAS
0xbc3 CALL
0xbc4 ISZERO
0xbc5 DUP1
0xbc6 ISZERO
0xbc7 PUSH2 0xbd4
0xbca JUMPI
---
0xbc0: JUMPDEST 
0xbc2: V1068 = GAS
0xbc3: V1069 = CALL V1068 V1055 0x0 V1049 V1062 V1049 0x20
0xbc4: V1070 = ISZERO V1069
0xbc6: V1071 = ISZERO V1070
0xbc7: V1072 = 0xbd4
0xbca: JUMPI 0xbd4 V1071
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, 0x20, V1049, V1062, V1049, 0x0, V1055, V1064]
Stack pops: 7
Stack additions: [V1070]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, V1070]

================================

Block 0xbcb
[0xbcb:0xbd3]
---
Predecessors: [0xbc0]
Successors: []
---
0xbcb RETURNDATASIZE
0xbcc PUSH1 0x0
0xbce DUP1
0xbcf RETURNDATACOPY
0xbd0 RETURNDATASIZE
0xbd1 PUSH1 0x0
0xbd3 REVERT
---
0xbcb: V1073 = RETURNDATASIZE
0xbcc: V1074 = 0x0
0xbcf: RETURNDATACOPY 0x0 0x0 V1073
0xbd0: V1075 = RETURNDATASIZE
0xbd1: V1076 = 0x0
0xbd3: REVERT 0x0 V1075
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, V1070]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, V1070]

================================

Block 0xbd4
[0xbd4:0xbe5]
---
Predecessors: [0xbc0]
Successors: [0xbe6, 0xbea]
---
0xbd4 JUMPDEST
0xbd5 POP
0xbd6 POP
0xbd7 POP
0xbd8 POP
0xbd9 PUSH1 0x40
0xbdb MLOAD
0xbdc RETURNDATASIZE
0xbdd PUSH1 0x20
0xbdf DUP2
0xbe0 LT
0xbe1 ISZERO
0xbe2 PUSH2 0xbea
0xbe5 JUMPI
---
0xbd4: JUMPDEST 
0xbd9: V1077 = 0x40
0xbdb: V1078 = M[0x40]
0xbdc: V1079 = RETURNDATASIZE
0xbdd: V1080 = 0x20
0xbe0: V1081 = LT V1079 0x20
0xbe1: V1082 = ISZERO V1081
0xbe2: V1083 = 0xbea
0xbe5: JUMPI 0xbea V1082
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1055, 0xf7888aec, V1059, V1070]
Stack pops: 4
Stack additions: [V1078, V1079]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1078, V1079]

================================

Block 0xbe6
[0xbe6:0xbe9]
---
Predecessors: [0xbd4]
Successors: []
---
0xbe6 PUSH1 0x0
0xbe8 DUP1
0xbe9 REVERT
---
0xbe6: V1084 = 0x0
0xbe9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1078, V1079]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1078, V1079]

================================

Block 0xbea
[0xbea:0xc23]
---
Predecessors: [0xbd4]
Successors: [0xc24, 0xc28]
---
0xbea JUMPDEST
0xbeb POP
0xbec MLOAD
0xbed PUSH1 0x40
0xbef DUP1
0xbf0 MLOAD
0xbf1 PUSH1 0xe0
0xbf3 PUSH1 0x2
0xbf5 EXP
0xbf6 PUSH4 0xffffffff
0xbfb DUP6
0xbfc AND
0xbfd MUL
0xbfe DUP2
0xbff MSTORE
0xc00 PUSH1 0x4
0xc02 DUP2
0xc03 ADD
0xc04 SWAP3
0xc05 SWAP1
0xc06 SWAP3
0xc07 MSTORE
0xc08 MLOAD
0xc09 PUSH1 0x24
0xc0b DUP1
0xc0c DUP4
0xc0d ADD
0xc0e SWAP3
0xc0f PUSH1 0x0
0xc11 SWAP3
0xc12 SWAP2
0xc13 SWAP1
0xc14 DUP3
0xc15 SWAP1
0xc16 SUB
0xc17 ADD
0xc18 DUP2
0xc19 DUP4
0xc1a DUP8
0xc1b DUP1
0xc1c EXTCODESIZE
0xc1d ISZERO
0xc1e DUP1
0xc1f ISZERO
0xc20 PUSH2 0xc28
0xc23 JUMPI
---
0xbea: JUMPDEST 
0xbec: V1085 = M[V1078]
0xbed: V1086 = 0x40
0xbf0: V1087 = M[0x40]
0xbf1: V1088 = 0xe0
0xbf3: V1089 = 0x2
0xbf5: V1090 = EXP 0x2 0xe0
0xbf6: V1091 = 0xffffffff
0xbfc: V1092 = AND 0x2e1a7d4d 0xffffffff
0xbfd: V1093 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0xbff: M[V1087] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0xc00: V1094 = 0x4
0xc03: V1095 = ADD V1087 0x4
0xc07: M[V1095] = V1085
0xc08: V1096 = M[0x40]
0xc09: V1097 = 0x24
0xc0d: V1098 = ADD V1087 0x24
0xc0f: V1099 = 0x0
0xc16: V1100 = SUB V1087 V1096
0xc17: V1101 = ADD V1100 0x24
0xc1c: V1102 = EXTCODESIZE V1055
0xc1d: V1103 = ISZERO V1102
0xc1f: V1104 = ISZERO V1103
0xc20: V1105 = 0xc28
0xc23: JUMPI 0xc28 V1104
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1078, V1079]
Stack pops: 4
Stack additions: [S3, S2, V1098, 0x0, V1096, V1101, V1096, 0x0, S3, V1103]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1098, 0x0, V1096, V1101, V1096, 0x0, V1055, V1103]

================================

Block 0xc24
[0xc24:0xc27]
---
Predecessors: [0xbea]
Successors: []
---
0xc24 PUSH1 0x0
0xc26 DUP1
0xc27 REVERT
---
0xc24: V1106 = 0x0
0xc27: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1098, 0x0, V1096, V1101, V1096, 0x0, V1055, V1103]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1098, 0x0, V1096, V1101, V1096, 0x0, V1055, V1103]

================================

Block 0xc28
[0xc28:0xc32]
---
Predecessors: [0xbea]
Successors: [0xc33, 0xc3c]
---
0xc28 JUMPDEST
0xc29 POP
0xc2a GAS
0xc2b CALL
0xc2c ISZERO
0xc2d DUP1
0xc2e ISZERO
0xc2f PUSH2 0xc3c
0xc32 JUMPI
---
0xc28: JUMPDEST 
0xc2a: V1107 = GAS
0xc2b: V1108 = CALL V1107 V1055 0x0 V1096 V1101 V1096 0x0
0xc2c: V1109 = ISZERO V1108
0xc2e: V1110 = ISZERO V1109
0xc2f: V1111 = 0xc3c
0xc32: JUMPI 0xc3c V1110
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1098, 0x0, V1096, V1101, V1096, 0x0, V1055, V1103]
Stack pops: 7
Stack additions: [V1109]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1098, V1109]

================================

Block 0xc33
[0xc33:0xc3b]
---
Predecessors: [0xc28]
Successors: []
---
0xc33 RETURNDATASIZE
0xc34 PUSH1 0x0
0xc36 DUP1
0xc37 RETURNDATACOPY
0xc38 RETURNDATASIZE
0xc39 PUSH1 0x0
0xc3b REVERT
---
0xc33: V1112 = RETURNDATASIZE
0xc34: V1113 = 0x0
0xc37: RETURNDATACOPY 0x0 0x0 V1112
0xc38: V1114 = RETURNDATASIZE
0xc39: V1115 = 0x0
0xc3b: REVERT 0x0 V1114
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1098, V1109]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1098, V1109]

================================

Block 0xc3c
[0xc3c:0xc43]
---
Predecessors: [0xc28]
Successors: [0x806]
---
0xc3c JUMPDEST
0xc3d POP
0xc3e POP
0xc3f POP
0xc40 POP
0xc41 POP
0xc42 POP
0xc43 JUMP
---
0xc3c: JUMPDEST 
0xc43: JUMP 0x806
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708, 0x806, V710, V708, V1055, 0x2e1a7d4d, V1098, V1109]
Stack pops: 7
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, V708]

================================

Block 0xc44
[0xc44:0xcb0]
---
Predecessors: [0x998]
Successors: [0xcb1, 0xcb5]
---
0xc44 JUMPDEST
0xc45 PUSH1 0x0
0xc47 DUP1
0xc48 SLOAD
0xc49 PUSH1 0x40
0xc4b DUP1
0xc4c MLOAD
0xc4d PUSH32 0xf7888aec00000000000000000000000000000000000000000000000000000000
0xc6e DUP2
0xc6f MSTORE
0xc70 PUSH1 0x1
0xc72 PUSH1 0xa0
0xc74 PUSH1 0x2
0xc76 EXP
0xc77 SUB
0xc78 DUP6
0xc79 DUP2
0xc7a AND
0xc7b PUSH1 0x4
0xc7d DUP4
0xc7e ADD
0xc7f MSTORE
0xc80 ADDRESS
0xc81 PUSH1 0x24
0xc83 DUP4
0xc84 ADD
0xc85 MSTORE
0xc86 SWAP2
0xc87 MLOAD
0xc88 DUP5
0xc89 SWAP4
0xc8a SWAP3
0xc8b SWAP1
0xc8c SWAP3
0xc8d AND
0xc8e SWAP2
0xc8f PUSH4 0xf7888aec
0xc94 SWAP2
0xc95 PUSH1 0x44
0xc97 DUP1
0xc98 DUP3
0xc99 ADD
0xc9a SWAP3
0xc9b PUSH1 0x20
0xc9d SWAP3
0xc9e SWAP1
0xc9f SWAP2
0xca0 SWAP1
0xca1 DUP3
0xca2 SWAP1
0xca3 SUB
0xca4 ADD
0xca5 DUP2
0xca6 DUP8
0xca7 DUP8
0xca8 DUP1
0xca9 EXTCODESIZE
0xcaa ISZERO
0xcab DUP1
0xcac ISZERO
0xcad PUSH2 0xcb5
0xcb0 JUMPI
---
0xc44: JUMPDEST 
0xc45: V1116 = 0x0
0xc48: V1117 = S[0x0]
0xc49: V1118 = 0x40
0xc4c: V1119 = M[0x40]
0xc4d: V1120 = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0xc6f: M[V1119] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0xc70: V1121 = 0x1
0xc72: V1122 = 0xa0
0xc74: V1123 = 0x2
0xc76: V1124 = EXP 0x2 0xa0
0xc77: V1125 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7a: V1126 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0xc7b: V1127 = 0x4
0xc7e: V1128 = ADD V1119 0x4
0xc7f: M[V1128] = V1126
0xc80: V1129 = ADDRESS
0xc81: V1130 = 0x24
0xc84: V1131 = ADD V1119 0x24
0xc85: M[V1131] = V1129
0xc87: V1132 = M[0x40]
0xc8d: V1133 = AND V1117 0xffffffffffffffffffffffffffffffffffffffff
0xc8f: V1134 = 0xf7888aec
0xc95: V1135 = 0x44
0xc99: V1136 = ADD V1119 0x44
0xc9b: V1137 = 0x20
0xca3: V1138 = SUB V1119 V1132
0xca4: V1139 = ADD V1138 0x44
0xca9: V1140 = EXTCODESIZE V1133
0xcaa: V1141 = ISZERO V1140
0xcac: V1142 = ISZERO V1141
0xcad: V1143 = 0xcb5
0xcb0: JUMPI 0xcb5 V1142
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, V1133, 0xf7888aec, V1136, 0x20, V1132, V1139, V1132, 0x0, V1133, V1141]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1133, 0xf7888aec, V1136, 0x20, V1132, V1139, V1132, 0x0, V1133, V1141]

================================

Block 0xcb1
[0xcb1:0xcb4]
---
Predecessors: [0xc44]
Successors: []
---
0xcb1 PUSH1 0x0
0xcb3 DUP1
0xcb4 REVERT
---
0xcb1: V1144 = 0x0
0xcb4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1133, 0xf7888aec, V1136, 0x20, V1132, V1139, V1132, 0x0, V1133, V1141]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1133, 0xf7888aec, V1136, 0x20, V1132, V1139, V1132, 0x0, V1133, V1141]

================================

Block 0xcb5
[0xcb5:0xcbf]
---
Predecessors: [0xc44]
Successors: [0xcc0, 0xcc9]
---
0xcb5 JUMPDEST
0xcb6 POP
0xcb7 GAS
0xcb8 CALL
0xcb9 ISZERO
0xcba DUP1
0xcbb ISZERO
0xcbc PUSH2 0xcc9
0xcbf JUMPI
---
0xcb5: JUMPDEST 
0xcb7: V1145 = GAS
0xcb8: V1146 = CALL V1145 V1133 0x0 V1132 V1139 V1132 0x20
0xcb9: V1147 = ISZERO V1146
0xcbb: V1148 = ISZERO V1147
0xcbc: V1149 = 0xcc9
0xcbf: JUMPI 0xcc9 V1148
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1133, 0xf7888aec, V1136, 0x20, V1132, V1139, V1132, 0x0, V1133, V1141]
Stack pops: 7
Stack additions: [V1147]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1133, 0xf7888aec, V1136, V1147]

================================

Block 0xcc0
[0xcc0:0xcc8]
---
Predecessors: [0xcb5]
Successors: []
---
0xcc0 RETURNDATASIZE
0xcc1 PUSH1 0x0
0xcc3 DUP1
0xcc4 RETURNDATACOPY
0xcc5 RETURNDATASIZE
0xcc6 PUSH1 0x0
0xcc8 REVERT
---
0xcc0: V1150 = RETURNDATASIZE
0xcc1: V1151 = 0x0
0xcc4: RETURNDATACOPY 0x0 0x0 V1150
0xcc5: V1152 = RETURNDATASIZE
0xcc6: V1153 = 0x0
0xcc8: REVERT 0x0 V1152
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1133, 0xf7888aec, V1136, V1147]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1133, 0xf7888aec, V1136, V1147]

================================

Block 0xcc9
[0xcc9:0xcda]
---
Predecessors: [0xcb5]
Successors: [0xcdb, 0xcdf]
---
0xcc9 JUMPDEST
0xcca POP
0xccb POP
0xccc POP
0xccd POP
0xcce PUSH1 0x40
0xcd0 MLOAD
0xcd1 RETURNDATASIZE
0xcd2 PUSH1 0x20
0xcd4 DUP2
0xcd5 LT
0xcd6 ISZERO
0xcd7 PUSH2 0xcdf
0xcda JUMPI
---
0xcc9: JUMPDEST 
0xcce: V1154 = 0x40
0xcd0: V1155 = M[0x40]
0xcd1: V1156 = RETURNDATASIZE
0xcd2: V1157 = 0x20
0xcd5: V1158 = LT V1156 0x20
0xcd6: V1159 = ISZERO V1158
0xcd7: V1160 = 0xcdf
0xcda: JUMPI 0xcdf V1159
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1133, 0xf7888aec, V1136, V1147]
Stack pops: 4
Stack additions: [V1155, V1156]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1155, V1156]

================================

Block 0xcdb
[0xcdb:0xcde]
---
Predecessors: [0xcc9]
Successors: []
---
0xcdb PUSH1 0x0
0xcdd DUP1
0xcde REVERT
---
0xcdb: V1161 = 0x0
0xcde: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1155, V1156]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1155, V1156]

================================

Block 0xcdf
[0xcdf:0xd4a]
---
Predecessors: [0xcc9]
Successors: [0xd4b, 0xd4f]
---
0xcdf JUMPDEST
0xce0 POP
0xce1 MLOAD
0xce2 PUSH1 0x0
0xce4 DUP1
0xce5 SLOAD
0xce6 PUSH1 0x40
0xce8 DUP1
0xce9 MLOAD
0xcea PUSH32 0x9e281a9800000000000000000000000000000000000000000000000000000000
0xd0b DUP2
0xd0c MSTORE
0xd0d PUSH1 0x1
0xd0f PUSH1 0xa0
0xd11 PUSH1 0x2
0xd13 EXP
0xd14 SUB
0xd15 DUP9
0xd16 DUP2
0xd17 AND
0xd18 PUSH1 0x4
0xd1a DUP4
0xd1b ADD
0xd1c MSTORE
0xd1d PUSH1 0x24
0xd1f DUP3
0xd20 ADD
0xd21 DUP7
0xd22 SWAP1
0xd23 MSTORE
0xd24 SWAP2
0xd25 MLOAD
0xd26 SWAP5
0xd27 SWAP6
0xd28 POP
0xd29 SWAP2
0xd2a AND
0xd2b SWAP3
0xd2c PUSH4 0x9e281a98
0xd31 SWAP3
0xd32 PUSH1 0x44
0xd34 DUP1
0xd35 DUP5
0xd36 ADD
0xd37 SWAP4
0xd38 SWAP2
0xd39 SWAP3
0xd3a SWAP2
0xd3b DUP3
0xd3c SWAP1
0xd3d SUB
0xd3e ADD
0xd3f DUP2
0xd40 DUP4
0xd41 DUP8
0xd42 DUP1
0xd43 EXTCODESIZE
0xd44 ISZERO
0xd45 DUP1
0xd46 ISZERO
0xd47 PUSH2 0xd4f
0xd4a JUMPI
---
0xcdf: JUMPDEST 
0xce1: V1162 = M[V1155]
0xce2: V1163 = 0x0
0xce5: V1164 = S[0x0]
0xce6: V1165 = 0x40
0xce9: V1166 = M[0x40]
0xcea: V1167 = 0x9e281a9800000000000000000000000000000000000000000000000000000000
0xd0c: M[V1166] = 0x9e281a9800000000000000000000000000000000000000000000000000000000
0xd0d: V1168 = 0x1
0xd0f: V1169 = 0xa0
0xd11: V1170 = 0x2
0xd13: V1171 = EXP 0x2 0xa0
0xd14: V1172 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd17: V1173 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0xd18: V1174 = 0x4
0xd1b: V1175 = ADD V1166 0x4
0xd1c: M[V1175] = V1173
0xd1d: V1176 = 0x24
0xd20: V1177 = ADD V1166 0x24
0xd23: M[V1177] = V1162
0xd25: V1178 = M[0x40]
0xd2a: V1179 = AND V1164 0xffffffffffffffffffffffffffffffffffffffff
0xd2c: V1180 = 0x9e281a98
0xd32: V1181 = 0x44
0xd36: V1182 = ADD V1166 0x44
0xd3d: V1183 = SUB V1166 V1178
0xd3e: V1184 = ADD V1183 0x44
0xd43: V1185 = EXTCODESIZE V1179
0xd44: V1186 = ISZERO V1185
0xd46: V1187 = ISZERO V1186
0xd47: V1188 = 0xd4f
0xd4a: JUMPI 0xd4f V1187
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, 0x0, V1155, V1156]
Stack pops: 5
Stack additions: [S4, S3, V1162, V1179, 0x9e281a98, V1182, 0x0, V1178, V1184, V1178, 0x0, V1179, V1186]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, V1162, V1179, 0x9e281a98, V1182, 0x0, V1178, V1184, V1178, 0x0, V1179, V1186]

================================

Block 0xd4b
[0xd4b:0xd4e]
---
Predecessors: [0xcdf]
Successors: []
---
0xd4b PUSH1 0x0
0xd4d DUP1
0xd4e REVERT
---
0xd4b: V1189 = 0x0
0xd4e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, V1162, V1179, 0x9e281a98, V1182, 0x0, V1178, V1184, V1178, 0x0, V1179, V1186]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, V1162, V1179, 0x9e281a98, V1182, 0x0, V1178, V1184, V1178, 0x0, V1179, V1186]

================================

Block 0xd4f
[0xd4f:0xd59]
---
Predecessors: [0xcdf]
Successors: [0xd5a, 0xd63]
---
0xd4f JUMPDEST
0xd50 POP
0xd51 GAS
0xd52 CALL
0xd53 ISZERO
0xd54 DUP1
0xd55 ISZERO
0xd56 PUSH2 0xd63
0xd59 JUMPI
---
0xd4f: JUMPDEST 
0xd51: V1190 = GAS
0xd52: V1191 = CALL V1190 V1179 0x0 V1178 V1184 V1178 0x0
0xd53: V1192 = ISZERO V1191
0xd55: V1193 = ISZERO V1192
0xd56: V1194 = 0xd63
0xd59: JUMPI 0xd63 V1193
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, V1162, V1179, 0x9e281a98, V1182, 0x0, V1178, V1184, V1178, 0x0, V1179, V1186]
Stack pops: 7
Stack additions: [V1192]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, V1162, V1179, 0x9e281a98, V1182, V1192]

================================

Block 0xd5a
[0xd5a:0xd62]
---
Predecessors: [0xd4f]
Successors: []
---
0xd5a RETURNDATASIZE
0xd5b PUSH1 0x0
0xd5d DUP1
0xd5e RETURNDATACOPY
0xd5f RETURNDATASIZE
0xd60 PUSH1 0x0
0xd62 REVERT
---
0xd5a: V1195 = RETURNDATASIZE
0xd5b: V1196 = 0x0
0xd5e: RETURNDATACOPY 0x0 0x0 V1195
0xd5f: V1197 = RETURNDATASIZE
0xd60: V1198 = 0x0
0xd62: REVERT 0x0 V1197
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, V1162, V1179, 0x9e281a98, V1182, V1192]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, V1162, V1179, 0x9e281a98, V1182, V1192]

================================

Block 0xd63
[0xd63:0xd6d]
---
Predecessors: [0xd4f]
Successors: [0x9ac]
---
0xd63 JUMPDEST
0xd64 POP
0xd65 SWAP3
0xd66 SWAP6
0xd67 SWAP5
0xd68 POP
0xd69 POP
0xd6a POP
0xd6b POP
0xd6c POP
0xd6d JUMP
---
0xd63: JUMPDEST 
0xd6d: JUMP 0x9ac
---
Entry stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, 0x9ac, V895, 0x0, V1162, V1179, 0x9e281a98, V1182, V1192]
Stack pops: 8
Stack additions: [S4]
Exit stack: [V13, 0xfd, V77, V80, V82, 0x44, 0xe4, V87, V89, V91, 0x0, V541, 0x0, 0x605, V551, 0x0, V1162]

================================

Block 0xd6e
[0xd6e:0xd99]
---
Predecessors: []
Successors: []
---
0xd6e STOP
0xd6f LOG1
0xd70 PUSH6 0x627a7a723058
0xd77 SHA3
0xd78 MISSING 0xab
0xd79 CODESIZE
0xd7a MISSING 0xbc
0xd7b PUSH5 0xba8932e29
0xd81 PUSH12 0x3a1e81ba22b98aee755e15d9
0xd8e SELFDESTRUCT
0xd8f CODESIZE
0xd90 MISSING 0xcc
0xd91 MISSING 0xda
0xd92 NUMBER
0xd93 MISSING 0xc9
0xd94 MISSING 0xb5
0xd95 MISSING 0xaf
0xd96 LOG0
0xd97 MISSING 0x2d
0xd98 STOP
0xd99 MISSING 0x29
---
0xd6e: STOP 
0xd6f: LOG S0 S1 S2
0xd70: V1199 = 0x627a7a723058
0xd77: V1200 = SHA3 0x627a7a723058 S3
0xd78: MISSING 0xab
0xd79: V1201 = CODESIZE
0xd7a: MISSING 0xbc
0xd7b: V1202 = 0xba8932e29
0xd81: V1203 = 0x3a1e81ba22b98aee755e15d9
0xd8e: SELFDESTRUCT 0x3a1e81ba22b98aee755e15d9
0xd8f: V1204 = CODESIZE
0xd90: MISSING 0xcc
0xd91: MISSING 0xda
0xd92: V1205 = NUMBER
0xd93: MISSING 0xc9
0xd94: MISSING 0xb5
0xd95: MISSING 0xaf
0xd96: LOG S0 S1
0xd97: MISSING 0x2d
0xd98: STOP 
0xd99: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1200, V1201, 0xba8932e29, V1204, V1205]
Exit stack: []

================================

Function 0:
Public function signature: 0x92a5cce
Entry block: 0x55
Exit block: 0x126
Body: 0x55, 0x5d, 0x61, 0x10f, 0x122, 0x126

Function 1:
Public function signature: 0x3c059027
Entry block: 0x6a
Exit block: 0x72
Body: 0x53, 0x6a, 0x72, 0x76

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x8b
Exit block: 0x53
Body: 0x53, 0x8b, 0x93, 0x97, 0x368, 0x37b, 0x37f, 0x3b0, 0x3b9

Function 3:
Public function signature: 0x89476069
Entry block: 0xa0
Exit block: 0x58c
Body: 0xa0, 0xa8, 0xac, 0x3bc, 0x3d2, 0x3d6, 0x447, 0x44b, 0x456, 0x45f, 0x471, 0x475, 0x4c0, 0x58c

Function 4:
Public function signature: 0x8a8bddb9
Entry block: 0xc1
Exit block: 0x6ca
Body: 0xc1, 0xc9, 0xcd, 0xfd, 0x4c4, 0x4de, 0x4e2, 0x4f4, 0x4f8, 0x50d, 0x511, 0x526, 0x52a, 0x57a, 0x58c, 0x58d, 0x594, 0x605, 0x6a0, 0x6a4, 0x6af, 0x6b8, 0x6ca, 0x6ce, 0x6d6, 0x75f, 0x763, 0x76e, 0x777, 0x78a, 0x78e, 0x806, 0x80f, 0x813, 0x824, 0x870, 0x874, 0x87f, 0x888, 0x980, 0x984, 0x98f, 0x998, 0x9ac, 0x9b2, 0xa1f, 0xa23, 0xa2e, 0xa37, 0xb2e, 0xb32, 0xb3d, 0xb46, 0xbbc, 0xbc0, 0xbcb, 0xbd4, 0xbe6, 0xbea, 0xc24, 0xc28, 0xc33, 0xc3c, 0xc44, 0xcb1, 0xcb5, 0xcc0, 0xcc9, 0xcdb, 0xcdf, 0xd4b, 0xd4f, 0xd5a, 0xd63

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0x53
Body: 0x53

Function 6:
Private function
Entry block: 0x134
Exit block: 0x362
Body: 0x134, 0x14e, 0x1ad, 0x1c1, 0x1d7, 0x233, 0x247, 0x25d, 0x2b2, 0x2c6, 0x2dc, 0x338, 0x34c, 0x362

