Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x8a]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3ccfd60b
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x8a
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3ccfd60b
0x20: V14 = EQ V12 0x3ccfd60b
0x21: V15 = 0x8a
0x24: JUMPI 0x8a V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x9c]
---
0x25 DUP1
0x26 PUSH4 0x3f4ba83a
0x2b EQ
0x2c PUSH2 0x9c
0x2f JUMPI
---
0x26: V16 = 0x3f4ba83a
0x2b: V17 = EQ 0x3f4ba83a V12
0x2c: V18 = 0x9c
0x2f: JUMPI 0x9c V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xc0]
---
0x30 DUP1
0x31 PUSH4 0x4fa51a39
0x36 EQ
0x37 PUSH2 0xc0
0x3a JUMPI
---
0x31: V19 = 0x4fa51a39
0x36: V20 = EQ 0x4fa51a39 V12
0x37: V21 = 0xc0
0x3a: JUMPI 0xc0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xd7]
---
0x3b DUP1
0x3c PUSH4 0x5c975abb
0x41 EQ
0x42 PUSH2 0xd7
0x45 JUMPI
---
0x3c: V22 = 0x5c975abb
0x41: V23 = EQ 0x5c975abb V12
0x42: V24 = 0xd7
0x45: JUMPI 0xd7 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xfb]
---
0x46 DUP1
0x47 PUSH4 0x83197ef0
0x4c EQ
0x4d PUSH2 0xfb
0x50 JUMPI
---
0x47: V25 = 0x83197ef0
0x4c: V26 = EQ 0x83197ef0 V12
0x4d: V27 = 0xfb
0x50: JUMPI 0xfb V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x10d]
---
0x51 DUP1
0x52 PUSH4 0x8456cb59
0x57 EQ
0x58 PUSH2 0x10d
0x5b JUMPI
---
0x52: V28 = 0x8456cb59
0x57: V29 = EQ 0x8456cb59 V12
0x58: V30 = 0x10d
0x5b: JUMPI 0x10d V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x131]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x131
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x131
0x66: JUMPI 0x131 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x15d]
---
0x67 DUP1
0x68 PUSH4 0xef9e5743
0x6d EQ
0x6e PUSH2 0x15d
0x71 JUMPI
---
0x68: V34 = 0xef9e5743
0x6d: V35 = EQ 0xef9e5743 V12
0x6e: V36 = 0x15d
0x71: JUMPI 0x15d V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x18c]
---
0x72 DUP1
0x73 PUSH4 0xf2fde38b
0x78 EQ
0x79 PUSH2 0x18c
0x7c JUMPI
---
0x73: V37 = 0xf2fde38b
0x78: V38 = EQ 0xf2fde38b V12
0x79: V39 = 0x18c
0x7c: JUMPI 0x18c V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1aa]
---
0x7d DUP1
0x7e PUSH4 0xf5074f41
0x83 EQ
0x84 PUSH2 0x1aa
0x87 JUMPI
---
0x7e: V40 = 0xf5074f41
0x83: V41 = EQ 0xf5074f41 V12
0x84: V42 = 0x1aa
0x87: JUMPI 0x1aa V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x89]
---
Predecessors: [0x0, 0x7d]
Successors: []
---
0x88 JUMPDEST
0x89 INVALID
---
0x88: JUMPDEST 
0x89: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0x90]
---
Predecessors: [0xb]
Successors: [0x91, 0x92]
---
0x8a JUMPDEST
0x8b CALLVALUE
0x8c ISZERO
0x8d PUSH2 0x92
0x90 JUMPI
---
0x8a: JUMPDEST 
0x8b: V43 = CALLVALUE
0x8c: V44 = ISZERO V43
0x8d: V45 = 0x92
0x90: JUMPI 0x92 V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91
[0x91:0x91]
---
Predecessors: [0x8a]
Successors: []
---
0x91 INVALID
---
0x91: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x92
[0x92:0x99]
---
Predecessors: [0x8a]
Successors: [0x1c8]
---
0x92 JUMPDEST
0x93 PUSH2 0x9a
0x96 PUSH2 0x1c8
0x99 JUMP
---
0x92: JUMPDEST 
0x93: V46 = 0x9a
0x96: V47 = 0x1c8
0x99: JUMP 0x1c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V12, 0x9a]

================================

Block 0x9a
[0x9a:0x9b]
---
Predecessors: [0x266, 0x35f, 0x484]
Successors: []
---
0x9a JUMPDEST
0x9b STOP
---
0x9a: JUMPDEST 
0x9b: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0x25]
Successors: [0xa3, 0xa4]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa4
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V48 = CALLVALUE
0x9e: V49 = ISZERO V48
0x9f: V50 = 0xa4
0xa2: JUMPI 0xa4 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xa3]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 INVALID
---
0xa3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa4
[0xa4:0xab]
---
Predecessors: [0x9c]
Successors: [0x269]
---
0xa4 JUMPDEST
0xa5 PUSH2 0xac
0xa8 PUSH2 0x269
0xab JUMP
---
0xa4: JUMPDEST 
0xa5: V51 = 0xac
0xa8: V52 = 0x269
0xab: JUMP 0x269
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xac]
Exit stack: [V12, 0xac]

================================

Block 0xac
[0xac:0xbf]
---
Predecessors: [0x2dc, 0x362, 0x417]
Successors: []
---
0xac JUMPDEST
0xad PUSH1 0x40
0xaf DUP1
0xb0 MLOAD
0xb1 SWAP2
0xb2 ISZERO
0xb3 ISZERO
0xb4 DUP3
0xb5 MSTORE
0xb6 MLOAD
0xb7 SWAP1
0xb8 DUP2
0xb9 SWAP1
0xba SUB
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf RETURN
---
0xac: JUMPDEST 
0xad: V53 = 0x40
0xb0: V54 = M[0x40]
0xb2: V55 = ISZERO S0
0xb3: V56 = ISZERO V55
0xb5: M[V54] = V56
0xb6: V57 = M[0x40]
0xba: V58 = SUB V54 V57
0xbb: V59 = 0x20
0xbd: V60 = ADD 0x20 V58
0xbf: RETURN V57 V60
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0xc0
[0xc0:0xd4]
---
Predecessors: [0x30]
Successors: [0x2df]
---
0xc0 JUMPDEST
0xc1 PUSH2 0x9a
0xc4 PUSH1 0x1
0xc6 PUSH1 0xb0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc NOT
0xcd PUSH1 0x4
0xcf CALLDATALOAD
0xd0 AND
0xd1 PUSH2 0x2df
0xd4 JUMP
---
0xc0: JUMPDEST 
0xc1: V61 = 0x9a
0xc4: V62 = 0x1
0xc6: V63 = 0xb0
0xc8: V64 = 0x2
0xca: V65 = EXP 0x2 0xb0
0xcb: V66 = SUB 0x100000000000000000000000000000000000000000000 0x1
0xcc: V67 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0xcd: V68 = 0x4
0xcf: V69 = CALLDATALOAD 0x4
0xd0: V70 = AND V69 0xffffffffffffffffffff00000000000000000000000000000000000000000000
0xd1: V71 = 0x2df
0xd4: JUMP 0x2df
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V70]
Exit stack: [V12, 0x9a, V70]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: []
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x3b]
Successors: [0xde, 0xdf]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xdf
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V72 = CALLVALUE
0xd9: V73 = ISZERO V72
0xda: V74 = 0xdf
0xdd: JUMPI 0xdf V73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xde
[0xde:0xde]
---
Predecessors: [0xd7]
Successors: []
---
0xde INVALID
---
0xde: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd7]
Successors: [0x362]
---
0xdf JUMPDEST
0xe0 PUSH2 0xac
0xe3 PUSH2 0x362
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V75 = 0xac
0xe3: V76 = 0x362
0xe6: JUMP 0x362
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xac]
Exit stack: [V12, 0xac]

================================

Block 0xe7
[0xe7:0xfa]
---
Predecessors: []
Successors: []
---
0xe7 JUMPDEST
0xe8 PUSH1 0x40
0xea DUP1
0xeb MLOAD
0xec SWAP2
0xed ISZERO
0xee ISZERO
0xef DUP3
0xf0 MSTORE
0xf1 MLOAD
0xf2 SWAP1
0xf3 DUP2
0xf4 SWAP1
0xf5 SUB
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP1
0xfa RETURN
---
0xe7: JUMPDEST 
0xe8: V77 = 0x40
0xeb: V78 = M[0x40]
0xed: V79 = ISZERO S0
0xee: V80 = ISZERO V79
0xf0: M[V78] = V80
0xf1: V81 = M[0x40]
0xf5: V82 = SUB V78 V81
0xf6: V83 = 0x20
0xf8: V84 = ADD 0x20 V82
0xfa: RETURN V81 V84
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xfb
[0xfb:0x101]
---
Predecessors: [0x46]
Successors: [0x102, 0x103]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd ISZERO
0xfe PUSH2 0x103
0x101 JUMPI
---
0xfb: JUMPDEST 
0xfc: V85 = CALLVALUE
0xfd: V86 = ISZERO V85
0xfe: V87 = 0x103
0x101: JUMPI 0x103 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x102
[0x102:0x102]
---
Predecessors: [0xfb]
Successors: []
---
0x102 INVALID
---
0x102: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0xfb]
Successors: [0x372]
---
0x103 JUMPDEST
0x104 PUSH2 0x9a
0x107 PUSH2 0x372
0x10a JUMP
---
0x103: JUMPDEST 
0x104: V88 = 0x9a
0x107: V89 = 0x372
0x10a: JUMP 0x372
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V12, 0x9a]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: []
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10d
[0x10d:0x113]
---
Predecessors: [0x51]
Successors: [0x114, 0x115]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f ISZERO
0x110 PUSH2 0x115
0x113 JUMPI
---
0x10d: JUMPDEST 
0x10e: V90 = CALLVALUE
0x10f: V91 = ISZERO V90
0x110: V92 = 0x115
0x113: JUMPI 0x115 V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x114
[0x114:0x114]
---
Predecessors: [0x10d]
Successors: []
---
0x114 INVALID
---
0x114: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x115
[0x115:0x11c]
---
Predecessors: [0x10d]
Successors: [0x39f]
---
0x115 JUMPDEST
0x116 PUSH2 0xac
0x119 PUSH2 0x39f
0x11c JUMP
---
0x115: JUMPDEST 
0x116: V93 = 0xac
0x119: V94 = 0x39f
0x11c: JUMP 0x39f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xac]
Exit stack: [V12, 0xac]

================================

Block 0x11d
[0x11d:0x130]
---
Predecessors: []
Successors: []
---
0x11d JUMPDEST
0x11e PUSH1 0x40
0x120 DUP1
0x121 MLOAD
0x122 SWAP2
0x123 ISZERO
0x124 ISZERO
0x125 DUP3
0x126 MSTORE
0x127 MLOAD
0x128 SWAP1
0x129 DUP2
0x12a SWAP1
0x12b SUB
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 RETURN
---
0x11d: JUMPDEST 
0x11e: V95 = 0x40
0x121: V96 = M[0x40]
0x123: V97 = ISZERO S0
0x124: V98 = ISZERO V97
0x126: M[V96] = V98
0x127: V99 = M[0x40]
0x12b: V100 = SUB V96 V99
0x12c: V101 = 0x20
0x12e: V102 = ADD 0x20 V100
0x130: RETURN V99 V102
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x131
[0x131:0x137]
---
Predecessors: [0x5c]
Successors: [0x138, 0x139]
---
0x131 JUMPDEST
0x132 CALLVALUE
0x133 ISZERO
0x134 PUSH2 0x139
0x137 JUMPI
---
0x131: JUMPDEST 
0x132: V103 = CALLVALUE
0x133: V104 = ISZERO V103
0x134: V105 = 0x139
0x137: JUMPI 0x139 V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x138
[0x138:0x138]
---
Predecessors: [0x131]
Successors: []
---
0x138 INVALID
---
0x138: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x131]
Successors: [0x41a]
---
0x139 JUMPDEST
0x13a PUSH2 0x141
0x13d PUSH2 0x41a
0x140 JUMP
---
0x139: JUMPDEST 
0x13a: V106 = 0x141
0x13d: V107 = 0x41a
0x140: JUMP 0x41a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x141
[0x141:0x15c]
---
Predecessors: [0x41a]
Successors: []
---
0x141 JUMPDEST
0x142 PUSH1 0x40
0x144 DUP1
0x145 MLOAD
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e SWAP1
0x14f SWAP3
0x150 AND
0x151 DUP3
0x152 MSTORE
0x153 MLOAD
0x154 SWAP1
0x155 DUP2
0x156 SWAP1
0x157 SUB
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP1
0x15c RETURN
---
0x141: JUMPDEST 
0x142: V108 = 0x40
0x145: V109 = M[0x40]
0x146: V110 = 0x1
0x148: V111 = 0xa0
0x14a: V112 = 0x2
0x14c: V113 = EXP 0x2 0xa0
0x14d: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V115 = AND V406 0xffffffffffffffffffffffffffffffffffffffff
0x152: M[V109] = V115
0x153: V116 = M[0x40]
0x157: V117 = SUB V109 V116
0x158: V118 = 0x20
0x15a: V119 = ADD 0x20 V117
0x15c: RETURN V116 V119
---
Entry stack: [V12, 0x141, V406]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x15d
[0x15d:0x163]
---
Predecessors: [0x67]
Successors: [0x164, 0x165]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f ISZERO
0x160 PUSH2 0x165
0x163 JUMPI
---
0x15d: JUMPDEST 
0x15e: V120 = CALLVALUE
0x15f: V121 = ISZERO V120
0x160: V122 = 0x165
0x163: JUMPI 0x165 V121
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x15d]
Successors: []
---
0x164 INVALID
---
0x164: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x179]
---
Predecessors: [0x15d]
Successors: [0x429]
---
0x165 JUMPDEST
0x166 PUSH2 0x17a
0x169 PUSH1 0x1
0x16b PUSH1 0xb0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 NOT
0x172 PUSH1 0x4
0x174 CALLDATALOAD
0x175 AND
0x176 PUSH2 0x429
0x179 JUMP
---
0x165: JUMPDEST 
0x166: V123 = 0x17a
0x169: V124 = 0x1
0x16b: V125 = 0xb0
0x16d: V126 = 0x2
0x16f: V127 = EXP 0x2 0xb0
0x170: V128 = SUB 0x100000000000000000000000000000000000000000000 0x1
0x171: V129 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x172: V130 = 0x4
0x174: V131 = CALLDATALOAD 0x4
0x175: V132 = AND V131 0xffffffffffffffffffff00000000000000000000000000000000000000000000
0x176: V133 = 0x429
0x179: JUMP 0x429
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x17a, V132]
Exit stack: [V12, 0x17a, V132]

================================

Block 0x17a
[0x17a:0x18b]
---
Predecessors: [0x429]
Successors: []
---
0x17a JUMPDEST
0x17b PUSH1 0x40
0x17d DUP1
0x17e MLOAD
0x17f SWAP2
0x180 DUP3
0x181 MSTORE
0x182 MLOAD
0x183 SWAP1
0x184 DUP2
0x185 SWAP1
0x186 SUB
0x187 PUSH1 0x20
0x189 ADD
0x18a SWAP1
0x18b RETURN
---
0x17a: JUMPDEST 
0x17b: V134 = 0x40
0x17e: V135 = M[0x40]
0x181: M[V135] = V412
0x182: V136 = M[0x40]
0x186: V137 = SUB V135 V136
0x187: V138 = 0x20
0x189: V139 = ADD 0x20 V137
0x18b: RETURN V136 V139
---
Entry stack: [V12, 0x17a, V412]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x17a]

================================

Block 0x18c
[0x18c:0x192]
---
Predecessors: [0x72]
Successors: [0x193, 0x194]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e ISZERO
0x18f PUSH2 0x194
0x192 JUMPI
---
0x18c: JUMPDEST 
0x18d: V140 = CALLVALUE
0x18e: V141 = ISZERO V140
0x18f: V142 = 0x194
0x192: JUMPI 0x194 V141
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x193
[0x193:0x193]
---
Predecessors: [0x18c]
Successors: []
---
0x193 INVALID
---
0x193: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x194
[0x194:0x1a7]
---
Predecessors: [0x18c]
Successors: [0x43b]
---
0x194 JUMPDEST
0x195 PUSH2 0x9a
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 PUSH1 0x4
0x1a2 CALLDATALOAD
0x1a3 AND
0x1a4 PUSH2 0x43b
0x1a7 JUMP
---
0x194: JUMPDEST 
0x195: V143 = 0x9a
0x198: V144 = 0x1
0x19a: V145 = 0xa0
0x19c: V146 = 0x2
0x19e: V147 = EXP 0x2 0xa0
0x19f: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V149 = 0x4
0x1a2: V150 = CALLDATALOAD 0x4
0x1a3: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V152 = 0x43b
0x1a7: JUMP 0x43b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V151]
Exit stack: [V12, 0x9a, V151]

================================

Block 0x1a8
[0x1a8:0x1a9]
---
Predecessors: []
Successors: []
---
0x1a8 JUMPDEST
0x1a9 STOP
---
0x1a8: JUMPDEST 
0x1a9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1aa
[0x1aa:0x1b0]
---
Predecessors: [0x7d]
Successors: [0x1b1, 0x1b2]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac ISZERO
0x1ad PUSH2 0x1b2
0x1b0 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V153 = CALLVALUE
0x1ac: V154 = ISZERO V153
0x1ad: V155 = 0x1b2
0x1b0: JUMPI 0x1b2 V154
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b1
[0x1b1:0x1b1]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b1 INVALID
---
0x1b1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1c5]
---
Predecessors: [0x1aa]
Successors: [0x487]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x9a
0x1b6 PUSH1 0x1
0x1b8 PUSH1 0xa0
0x1ba PUSH1 0x2
0x1bc EXP
0x1bd SUB
0x1be PUSH1 0x4
0x1c0 CALLDATALOAD
0x1c1 AND
0x1c2 PUSH2 0x487
0x1c5 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V156 = 0x9a
0x1b6: V157 = 0x1
0x1b8: V158 = 0xa0
0x1ba: V159 = 0x2
0x1bc: V160 = EXP 0x2 0xa0
0x1bd: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V162 = 0x4
0x1c0: V163 = CALLDATALOAD 0x4
0x1c1: V164 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V165 = 0x487
0x1c5: JUMP 0x487
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V164]
Exit stack: [V12, 0x9a, V164]

================================

Block 0x1c6
[0x1c6:0x1c7]
---
Predecessors: []
Successors: []
---
0x1c6 JUMPDEST
0x1c7 STOP
---
0x1c6: JUMPDEST 
0x1c7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c8
[0x1c8:0x1df]
---
Predecessors: [0x92]
Successors: [0x1e0, 0x1e5]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc SLOAD
0x1cd CALLER
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 AND
0x1d9 SWAP2
0x1da AND
0x1db EQ
0x1dc PUSH2 0x1e5
0x1df JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V166 = 0x0
0x1cc: V167 = S[0x0]
0x1cd: V168 = CALLER
0x1ce: V169 = 0x1
0x1d0: V170 = 0xa0
0x1d2: V171 = 0x2
0x1d4: V172 = EXP 0x2 0xa0
0x1d5: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x1da: V175 = AND V167 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V176 = EQ V175 V174
0x1dc: V177 = 0x1e5
0x1df: JUMPI 0x1e5 V176
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x9a, 0x0]

================================

Block 0x1e0
[0x1e0:0x1e4]
---
Predecessors: [0x1c8]
Successors: []
---
0x1e0 PUSH1 0x0
0x1e2 PUSH1 0x0
0x1e4 REVERT
---
0x1e0: V178 = 0x0
0x1e2: V179 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, 0x0]

================================

Block 0x1e5
[0x1e5:0x1f7]
---
Predecessors: [0x1c8]
Successors: [0x1f8, 0x1fd]
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x0
0x1e8 SLOAD
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SWAP1
0x1ef DIV
0x1f0 PUSH1 0xff
0x1f2 AND
0x1f3 ISZERO
0x1f4 PUSH2 0x1fd
0x1f7 JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V180 = 0x0
0x1e8: V181 = S[0x0]
0x1e9: V182 = 0xa0
0x1eb: V183 = 0x2
0x1ed: V184 = EXP 0x2 0xa0
0x1ef: V185 = DIV V181 0x10000000000000000000000000000000000000000
0x1f0: V186 = 0xff
0x1f2: V187 = AND 0xff V185
0x1f3: V188 = ISZERO V187
0x1f4: V189 = 0x1fd
0x1f7: JUMPI 0x1fd V188
---
Entry stack: [V12, 0x9a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, 0x0]

================================

Block 0x1f8
[0x1f8:0x1fc]
---
Predecessors: [0x1e5]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa PUSH1 0x0
0x1fc REVERT
---
0x1f8: V190 = 0x0
0x1fa: V191 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, 0x0]

================================

Block 0x1fd
[0x1fd:0x230]
---
Predecessors: [0x1e5]
Successors: [0x231, 0x232]
---
0x1fd JUMPDEST
0x1fe POP
0x1ff PUSH1 0x0
0x201 DUP1
0x202 SLOAD
0x203 PUSH1 0x40
0x205 MLOAD
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e ADDRESS
0x20f DUP2
0x210 AND
0x211 BALANCE
0x212 SWAP4
0x213 SWAP3
0x214 AND
0x215 SWAP2
0x216 DUP4
0x217 ISZERO
0x218 PUSH2 0x8fc
0x21b MUL
0x21c SWAP2
0x21d DUP5
0x21e SWAP2
0x21f DUP2
0x220 DUP2
0x221 DUP2
0x222 DUP6
0x223 DUP9
0x224 DUP9
0x225 CALL
0x226 SWAP4
0x227 POP
0x228 POP
0x229 POP
0x22a POP
0x22b ISZERO
0x22c ISZERO
0x22d PUSH2 0x232
0x230 JUMPI
---
0x1fd: JUMPDEST 
0x1ff: V192 = 0x0
0x202: V193 = S[0x0]
0x203: V194 = 0x40
0x205: V195 = M[0x40]
0x206: V196 = 0x1
0x208: V197 = 0xa0
0x20a: V198 = 0x2
0x20c: V199 = EXP 0x2 0xa0
0x20d: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V201 = ADDRESS
0x210: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x211: V203 = BALANCE V202
0x214: V204 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x217: V205 = ISZERO V203
0x218: V206 = 0x8fc
0x21b: V207 = MUL 0x8fc V205
0x225: V208 = CALL V207 V204 V203 V195 0x0 V195 0x0
0x22b: V209 = ISZERO V208
0x22c: V210 = ISZERO V209
0x22d: V211 = 0x232
0x230: JUMPI 0x232 V210
---
Entry stack: [V12, 0x9a, 0x0]
Stack pops: 1
Stack additions: [V203]
Exit stack: [V12, 0x9a, V203]

================================

Block 0x231
[0x231:0x231]
---
Predecessors: [0x1fd]
Successors: []
---
0x231 INVALID
---
0x231: INVALID 
---
Entry stack: [V12, 0x9a, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V203]

================================

Block 0x232
[0x232:0x263]
---
Predecessors: [0x1fd]
Successors: [0x264]
---
0x232 JUMPDEST
0x233 PUSH1 0x0
0x235 DUP1
0x236 SLOAD
0x237 PUSH1 0x40
0x239 DUP1
0x23a MLOAD
0x23b DUP5
0x23c DUP2
0x23d MSTORE
0x23e SWAP1
0x23f MLOAD
0x240 PUSH1 0x1
0x242 PUSH1 0xa0
0x244 PUSH1 0x2
0x246 EXP
0x247 SUB
0x248 SWAP1
0x249 SWAP3
0x24a AND
0x24b SWAP2
0x24c PUSH1 0x0
0x24e DUP1
0x24f MLOAD
0x250 PUSH1 0x20
0x252 PUSH2 0x4b4
0x255 DUP4
0x256 CODECOPY
0x257 DUP2
0x258 MLOAD
0x259 SWAP2
0x25a MSTORE
0x25b SWAP2
0x25c DUP2
0x25d SWAP1
0x25e SUB
0x25f PUSH1 0x20
0x261 ADD
0x262 SWAP1
0x263 LOG3
---
0x232: JUMPDEST 
0x233: V212 = 0x0
0x236: V213 = S[0x0]
0x237: V214 = 0x40
0x23a: V215 = M[0x40]
0x23d: M[V215] = V203
0x23f: V216 = M[0x40]
0x240: V217 = 0x1
0x242: V218 = 0xa0
0x244: V219 = 0x2
0x246: V220 = EXP 0x2 0xa0
0x247: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24a: V222 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V223 = 0x0
0x24f: V224 = M[0x0]
0x250: V225 = 0x20
0x252: V226 = 0x4b4
0x256: CODECOPY 0x0 0x4b4 0x20
0x258: V227 = M[0x0]
0x25a: M[0x0] = V224
0x25e: V228 = SUB V215 V216
0x25f: V229 = 0x20
0x261: V230 = ADD 0x20 V228
0x263: LOG V216 V230 V227 V222 0x0
---
Entry stack: [V12, 0x9a, V203]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V203]

================================

Block 0x264
[0x264:0x264]
---
Predecessors: [0x232, 0x457]
Successors: [0x265]
---
0x264 JUMPDEST
---
0x264: JUMPDEST 
---
Entry stack: [V12, 0x9a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S0]

================================

Block 0x265
[0x265:0x265]
---
Predecessors: [0x264]
Successors: [0x266]
---
0x265 JUMPDEST
---
0x265: JUMPDEST 
---
Entry stack: [V12, 0x9a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S0]

================================

Block 0x266
[0x266:0x268]
---
Predecessors: [0x265]
Successors: [0x9a]
---
0x266 JUMPDEST
0x267 POP
0x268 JUMP
---
0x266: JUMPDEST 
0x268: JUMP 0x9a
---
Entry stack: [V12, 0x9a, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x280]
---
Predecessors: [0xa4]
Successors: [0x281, 0x286]
---
0x269 JUMPDEST
0x26a PUSH1 0x0
0x26c DUP1
0x26d SLOAD
0x26e CALLER
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 SWAP1
0x278 DUP2
0x279 AND
0x27a SWAP2
0x27b AND
0x27c EQ
0x27d PUSH2 0x286
0x280 JUMPI
---
0x269: JUMPDEST 
0x26a: V231 = 0x0
0x26d: V232 = S[0x0]
0x26e: V233 = CALLER
0x26f: V234 = 0x1
0x271: V235 = 0xa0
0x273: V236 = 0x2
0x275: V237 = EXP 0x2 0xa0
0x276: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x27b: V240 = AND V232 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V241 = EQ V240 V239
0x27d: V242 = 0x286
0x280: JUMPI 0x286 V241
---
Entry stack: [V12, 0xac]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x281
[0x281:0x285]
---
Predecessors: [0x269]
Successors: []
---
0x281 PUSH1 0x0
0x283 PUSH1 0x0
0x285 REVERT
---
0x281: V243 = 0x0
0x283: V244 = 0x0
0x285: REVERT 0x0 0x0
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x286
[0x286:0x299]
---
Predecessors: [0x269]
Successors: [0x29a, 0x29f]
---
0x286 JUMPDEST
0x287 PUSH1 0x0
0x289 SLOAD
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SWAP1
0x290 DIV
0x291 PUSH1 0xff
0x293 AND
0x294 ISZERO
0x295 ISZERO
0x296 PUSH2 0x29f
0x299 JUMPI
---
0x286: JUMPDEST 
0x287: V245 = 0x0
0x289: V246 = S[0x0]
0x28a: V247 = 0xa0
0x28c: V248 = 0x2
0x28e: V249 = EXP 0x2 0xa0
0x290: V250 = DIV V246 0x10000000000000000000000000000000000000000
0x291: V251 = 0xff
0x293: V252 = AND 0xff V250
0x294: V253 = ISZERO V252
0x295: V254 = ISZERO V253
0x296: V255 = 0x29f
0x299: JUMPI 0x29f V254
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x29a
[0x29a:0x29e]
---
Predecessors: [0x286]
Successors: []
---
0x29a PUSH1 0x0
0x29c PUSH1 0x0
0x29e REVERT
---
0x29a: V256 = 0x0
0x29c: V257 = 0x0
0x29e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x29f
[0x29f:0x2d9]
---
Predecessors: [0x286]
Successors: [0x2da]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 SLOAD
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 PUSH1 0xff
0x2ab MUL
0x2ac NOT
0x2ad AND
0x2ae DUP2
0x2af SSTORE
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x2d4 SWAP2
0x2d5 SWAP1
0x2d6 LOG1
0x2d7 POP
0x2d8 PUSH1 0x1
---
0x29f: JUMPDEST 
0x2a0: V258 = 0x0
0x2a3: V259 = S[0x0]
0x2a4: V260 = 0xa0
0x2a6: V261 = 0x2
0x2a8: V262 = EXP 0x2 0xa0
0x2a9: V263 = 0xff
0x2ab: V264 = MUL 0xff 0x10000000000000000000000000000000000000000
0x2ac: V265 = NOT 0xff0000000000000000000000000000000000000000
0x2ad: V266 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V259
0x2af: S[0x0] = V266
0x2b0: V267 = 0x40
0x2b2: V268 = M[0x40]
0x2b3: V269 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x2d6: LOG V268 0x0 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x2d8: V270 = 0x1
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x2da
[0x2da:0x2da]
---
Predecessors: [0x29f]
Successors: [0x2db]
---
0x2da JUMPDEST
---
0x2da: JUMPDEST 
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x2db
[0x2db:0x2db]
---
Predecessors: [0x2da]
Successors: [0x2dc]
---
0x2db JUMPDEST
---
0x2db: JUMPDEST 
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x2dc
[0x2dc:0x2de]
---
Predecessors: [0x2db]
Successors: [0xac]
---
0x2dc JUMPDEST
0x2dd SWAP1
0x2de JUMP
---
0x2dc: JUMPDEST 
0x2de: JUMP 0xac
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x2df
[0x2df:0x2f1]
---
Predecessors: [0xc0]
Successors: [0x2f2, 0x2f7]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x0
0x2e2 SLOAD
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SWAP1
0x2e9 DIV
0x2ea PUSH1 0xff
0x2ec AND
0x2ed ISZERO
0x2ee PUSH2 0x2f7
0x2f1 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V271 = 0x0
0x2e2: V272 = S[0x0]
0x2e3: V273 = 0xa0
0x2e5: V274 = 0x2
0x2e7: V275 = EXP 0x2 0xa0
0x2e9: V276 = DIV V272 0x10000000000000000000000000000000000000000
0x2ea: V277 = 0xff
0x2ec: V278 = AND 0xff V276
0x2ed: V279 = ISZERO V278
0x2ee: V280 = 0x2f7
0x2f1: JUMPI 0x2f7 V279
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V70]

================================

Block 0x2f2
[0x2f2:0x2f6]
---
Predecessors: [0x2df]
Successors: []
---
0x2f2 PUSH1 0x0
0x2f4 PUSH1 0x0
0x2f6 REVERT
---
0x2f2: V281 = 0x0
0x2f4: V282 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V70]

================================

Block 0x2f7
[0x2f7:0x308]
---
Predecessors: [0x2df]
Successors: [0x309, 0x30e]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xb0
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff SUB
0x300 NOT
0x301 DUP2
0x302 AND
0x303 ISZERO
0x304 ISZERO
0x305 PUSH2 0x30e
0x308 JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V283 = 0x1
0x2fa: V284 = 0xb0
0x2fc: V285 = 0x2
0x2fe: V286 = EXP 0x2 0xb0
0x2ff: V287 = SUB 0x100000000000000000000000000000000000000000000 0x1
0x300: V288 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x302: V289 = AND V70 0xffffffffffffffffffff00000000000000000000000000000000000000000000
0x303: V290 = ISZERO V289
0x304: V291 = ISZERO V290
0x305: V292 = 0x30e
0x308: JUMPI 0x30e V291
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V70]

================================

Block 0x309
[0x309:0x30d]
---
Predecessors: [0x2f7]
Successors: []
---
0x309 PUSH1 0x0
0x30b PUSH1 0x0
0x30d REVERT
---
0x309: V293 = 0x0
0x30b: V294 = 0x0
0x30d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V70]

================================

Block 0x30e
[0x30e:0x35d]
---
Predecessors: [0x2f7]
Successors: [0x35e]
---
0x30e JUMPDEST
0x30f PUSH1 0x1
0x311 PUSH1 0xb0
0x313 PUSH1 0x2
0x315 EXP
0x316 SUB
0x317 NOT
0x318 DUP2
0x319 AND
0x31a PUSH1 0x0
0x31c DUP2
0x31d DUP2
0x31e MSTORE
0x31f PUSH1 0x1
0x321 PUSH1 0x20
0x323 SWAP1
0x324 DUP2
0x325 MSTORE
0x326 PUSH1 0x40
0x328 SWAP2
0x329 DUP3
0x32a SWAP1
0x32b SHA3
0x32c DUP1
0x32d SLOAD
0x32e CALLVALUE
0x32f SWAP1
0x330 DUP2
0x331 ADD
0x332 SWAP1
0x333 SWAP2
0x334 SSTORE
0x335 DUP3
0x336 MLOAD
0x337 SWAP1
0x338 DUP2
0x339 MSTORE
0x33a SWAP2
0x33b MLOAD
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 CALLER
0x345 AND
0x346 SWAP3
0x347 PUSH1 0x0
0x349 DUP1
0x34a MLOAD
0x34b PUSH1 0x20
0x34d PUSH2 0x4b4
0x350 DUP4
0x351 CODECOPY
0x352 DUP2
0x353 MLOAD
0x354 SWAP2
0x355 MSTORE
0x356 SWAP3
0x357 SWAP1
0x358 DUP3
0x359 SWAP1
0x35a SUB
0x35b ADD
0x35c SWAP1
0x35d LOG3
---
0x30e: JUMPDEST 
0x30f: V295 = 0x1
0x311: V296 = 0xb0
0x313: V297 = 0x2
0x315: V298 = EXP 0x2 0xb0
0x316: V299 = SUB 0x100000000000000000000000000000000000000000000 0x1
0x317: V300 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x319: V301 = AND V70 0xffffffffffffffffffff00000000000000000000000000000000000000000000
0x31a: V302 = 0x0
0x31e: M[0x0] = V301
0x31f: V303 = 0x1
0x321: V304 = 0x20
0x325: M[0x20] = 0x1
0x326: V305 = 0x40
0x32b: V306 = SHA3 0x0 0x40
0x32d: V307 = S[V306]
0x32e: V308 = CALLVALUE
0x331: V309 = ADD V308 V307
0x334: S[V306] = V309
0x336: V310 = M[0x40]
0x339: M[V310] = V308
0x33b: V311 = M[0x40]
0x33c: V312 = 0x1
0x33e: V313 = 0xa0
0x340: V314 = 0x2
0x342: V315 = EXP 0x2 0xa0
0x343: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V317 = CALLER
0x345: V318 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x347: V319 = 0x0
0x34a: V320 = M[0x0]
0x34b: V321 = 0x20
0x34d: V322 = 0x4b4
0x351: CODECOPY 0x0 0x4b4 0x20
0x353: V323 = M[0x0]
0x355: M[0x0] = V320
0x35a: V324 = SUB V310 V311
0x35b: V325 = ADD V324 0x20
0x35d: LOG V311 V325 V323 V318 V301
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V70]

================================

Block 0x35e
[0x35e:0x35e]
---
Predecessors: [0x30e]
Successors: [0x35f]
---
0x35e JUMPDEST
---
0x35e: JUMPDEST 
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V70]

================================

Block 0x35f
[0x35f:0x361]
---
Predecessors: [0x35e]
Successors: [0x9a]
---
0x35f JUMPDEST
0x360 POP
0x361 JUMP
---
0x35f: JUMPDEST 
0x361: JUMP 0x9a
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x362
[0x362:0x371]
---
Predecessors: [0xdf]
Successors: [0xac]
---
0x362 JUMPDEST
0x363 PUSH1 0x0
0x365 SLOAD
0x366 PUSH1 0xa0
0x368 PUSH1 0x2
0x36a EXP
0x36b SWAP1
0x36c DIV
0x36d PUSH1 0xff
0x36f AND
0x370 DUP2
0x371 JUMP
---
0x362: JUMPDEST 
0x363: V326 = 0x0
0x365: V327 = S[0x0]
0x366: V328 = 0xa0
0x368: V329 = 0x2
0x36a: V330 = EXP 0x2 0xa0
0x36c: V331 = DIV V327 0x10000000000000000000000000000000000000000
0x36d: V332 = 0xff
0x36f: V333 = AND 0xff V331
0x371: JUMP 0xac
---
Entry stack: [V12, 0xac]
Stack pops: 1
Stack additions: [S0, V333]
Exit stack: [V12, 0xac, V333]

================================

Block 0x372
[0x372:0x388]
---
Predecessors: [0x103]
Successors: [0x389, 0x38e]
---
0x372 JUMPDEST
0x373 PUSH1 0x0
0x375 SLOAD
0x376 CALLER
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f SWAP1
0x380 DUP2
0x381 AND
0x382 SWAP2
0x383 AND
0x384 EQ
0x385 PUSH2 0x38e
0x388 JUMPI
---
0x372: JUMPDEST 
0x373: V334 = 0x0
0x375: V335 = S[0x0]
0x376: V336 = CALLER
0x377: V337 = 0x1
0x379: V338 = 0xa0
0x37b: V339 = 0x2
0x37d: V340 = EXP 0x2 0xa0
0x37e: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x381: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x383: V343 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x384: V344 = EQ V343 V342
0x385: V345 = 0x38e
0x388: JUMPI 0x38e V344
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x389
[0x389:0x38d]
---
Predecessors: [0x372]
Successors: []
---
0x389 PUSH1 0x0
0x38b PUSH1 0x0
0x38d REVERT
---
0x389: V346 = 0x0
0x38b: V347 = 0x0
0x38d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x38e
[0x38e:0x39b]
---
Predecessors: [0x372]
Successors: []
---
0x38e JUMPDEST
0x38f PUSH1 0x0
0x391 SLOAD
0x392 PUSH1 0x1
0x394 PUSH1 0xa0
0x396 PUSH1 0x2
0x398 EXP
0x399 SUB
0x39a AND
0x39b SELFDESTRUCT
---
0x38e: JUMPDEST 
0x38f: V348 = 0x0
0x391: V349 = S[0x0]
0x392: V350 = 0x1
0x394: V351 = 0xa0
0x396: V352 = 0x2
0x398: V353 = EXP 0x2 0xa0
0x399: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39a: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x39b: SELFDESTRUCT V355
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x39c
[0x39c:0x39c]
---
Predecessors: []
Successors: [0x39d]
---
0x39c JUMPDEST
---
0x39c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x39d
[0x39d:0x39e]
---
Predecessors: [0x39c]
Successors: []
Has unresolved jump.
---
0x39d JUMPDEST
0x39e JUMP
---
0x39d: JUMPDEST 
0x39e: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x39f
[0x39f:0x3b6]
---
Predecessors: [0x115]
Successors: [0x3b7, 0x3bc]
---
0x39f JUMPDEST
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 SLOAD
0x3a4 CALLER
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad SWAP1
0x3ae DUP2
0x3af AND
0x3b0 SWAP2
0x3b1 AND
0x3b2 EQ
0x3b3 PUSH2 0x3bc
0x3b6 JUMPI
---
0x39f: JUMPDEST 
0x3a0: V356 = 0x0
0x3a3: V357 = S[0x0]
0x3a4: V358 = CALLER
0x3a5: V359 = 0x1
0x3a7: V360 = 0xa0
0x3a9: V361 = 0x2
0x3ab: V362 = EXP 0x2 0xa0
0x3ac: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x3b1: V365 = AND V357 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V366 = EQ V365 V364
0x3b3: V367 = 0x3bc
0x3b6: JUMPI 0x3bc V366
---
Entry stack: [V12, 0xac]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x3b7
[0x3b7:0x3bb]
---
Predecessors: [0x39f]
Successors: []
---
0x3b7 PUSH1 0x0
0x3b9 PUSH1 0x0
0x3bb REVERT
---
0x3b7: V368 = 0x0
0x3b9: V369 = 0x0
0x3bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x3bc
[0x3bc:0x3ce]
---
Predecessors: [0x39f]
Successors: [0x3cf, 0x3d4]
---
0x3bc JUMPDEST
0x3bd PUSH1 0x0
0x3bf SLOAD
0x3c0 PUSH1 0xa0
0x3c2 PUSH1 0x2
0x3c4 EXP
0x3c5 SWAP1
0x3c6 DIV
0x3c7 PUSH1 0xff
0x3c9 AND
0x3ca ISZERO
0x3cb PUSH2 0x3d4
0x3ce JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V370 = 0x0
0x3bf: V371 = S[0x0]
0x3c0: V372 = 0xa0
0x3c2: V373 = 0x2
0x3c4: V374 = EXP 0x2 0xa0
0x3c6: V375 = DIV V371 0x10000000000000000000000000000000000000000
0x3c7: V376 = 0xff
0x3c9: V377 = AND 0xff V375
0x3ca: V378 = ISZERO V377
0x3cb: V379 = 0x3d4
0x3ce: JUMPI 0x3d4 V378
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x3cf
[0x3cf:0x3d3]
---
Predecessors: [0x3bc]
Successors: []
---
0x3cf PUSH1 0x0
0x3d1 PUSH1 0x0
0x3d3 REVERT
---
0x3cf: V380 = 0x0
0x3d1: V381 = 0x0
0x3d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x3d4
[0x3d4:0x414]
---
Predecessors: [0x3bc]
Successors: [0x415]
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x0
0x3d7 DUP1
0x3d8 SLOAD
0x3d9 PUSH1 0xa0
0x3db PUSH1 0x2
0x3dd EXP
0x3de PUSH1 0xff
0x3e0 MUL
0x3e1 NOT
0x3e2 AND
0x3e3 PUSH1 0xa0
0x3e5 PUSH1 0x2
0x3e7 EXP
0x3e8 OR
0x3e9 DUP2
0x3ea SSTORE
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x40f SWAP2
0x410 SWAP1
0x411 LOG1
0x412 POP
0x413 PUSH1 0x1
---
0x3d4: JUMPDEST 
0x3d5: V382 = 0x0
0x3d8: V383 = S[0x0]
0x3d9: V384 = 0xa0
0x3db: V385 = 0x2
0x3dd: V386 = EXP 0x2 0xa0
0x3de: V387 = 0xff
0x3e0: V388 = MUL 0xff 0x10000000000000000000000000000000000000000
0x3e1: V389 = NOT 0xff0000000000000000000000000000000000000000
0x3e2: V390 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V383
0x3e3: V391 = 0xa0
0x3e5: V392 = 0x2
0x3e7: V393 = EXP 0x2 0xa0
0x3e8: V394 = OR 0x10000000000000000000000000000000000000000 V390
0x3ea: S[0x0] = V394
0x3eb: V395 = 0x40
0x3ed: V396 = M[0x40]
0x3ee: V397 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x411: LOG V396 0x0 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x413: V398 = 0x1
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x415
[0x415:0x415]
---
Predecessors: [0x3d4]
Successors: [0x416]
---
0x415 JUMPDEST
---
0x415: JUMPDEST 
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x416
[0x416:0x416]
---
Predecessors: [0x415]
Successors: [0x417]
---
0x416 JUMPDEST
---
0x416: JUMPDEST 
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x417
[0x417:0x419]
---
Predecessors: [0x416]
Successors: [0xac]
---
0x417 JUMPDEST
0x418 SWAP1
0x419 JUMP
---
0x417: JUMPDEST 
0x419: JUMP 0xac
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x41a
[0x41a:0x428]
---
Predecessors: [0x139]
Successors: [0x141]
---
0x41a JUMPDEST
0x41b PUSH1 0x0
0x41d SLOAD
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 AND
0x427 DUP2
0x428 JUMP
---
0x41a: JUMPDEST 
0x41b: V399 = 0x0
0x41d: V400 = S[0x0]
0x41e: V401 = 0x1
0x420: V402 = 0xa0
0x422: V403 = 0x2
0x424: V404 = EXP 0x2 0xa0
0x425: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x426: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x428: JUMP 0x141
---
Entry stack: [V12, 0x141]
Stack pops: 1
Stack additions: [S0, V406]
Exit stack: [V12, 0x141, V406]

================================

Block 0x429
[0x429:0x43a]
---
Predecessors: [0x165]
Successors: [0x17a]
---
0x429 JUMPDEST
0x42a PUSH1 0x1
0x42c PUSH1 0x20
0x42e MSTORE
0x42f PUSH1 0x0
0x431 SWAP1
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x40
0x436 SWAP1
0x437 SHA3
0x438 SLOAD
0x439 DUP2
0x43a JUMP
---
0x429: JUMPDEST 
0x42a: V407 = 0x1
0x42c: V408 = 0x20
0x42e: M[0x20] = 0x1
0x42f: V409 = 0x0
0x433: M[0x0] = V132
0x434: V410 = 0x40
0x437: V411 = SHA3 0x0 0x40
0x438: V412 = S[V411]
0x43a: JUMP 0x17a
---
Entry stack: [V12, 0x17a, V132]
Stack pops: 2
Stack additions: [S1, V412]
Exit stack: [V12, 0x17a, V412]

================================

Block 0x43b
[0x43b:0x451]
---
Predecessors: [0x194]
Successors: [0x452, 0x457]
---
0x43b JUMPDEST
0x43c PUSH1 0x0
0x43e SLOAD
0x43f CALLER
0x440 PUSH1 0x1
0x442 PUSH1 0xa0
0x444 PUSH1 0x2
0x446 EXP
0x447 SUB
0x448 SWAP1
0x449 DUP2
0x44a AND
0x44b SWAP2
0x44c AND
0x44d EQ
0x44e PUSH2 0x457
0x451 JUMPI
---
0x43b: JUMPDEST 
0x43c: V413 = 0x0
0x43e: V414 = S[0x0]
0x43f: V415 = CALLER
0x440: V416 = 0x1
0x442: V417 = 0xa0
0x444: V418 = 0x2
0x446: V419 = EXP 0x2 0xa0
0x447: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44a: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x44c: V422 = AND V414 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V423 = EQ V422 V421
0x44e: V424 = 0x457
0x451: JUMPI 0x457 V423
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V151]

================================

Block 0x452
[0x452:0x456]
---
Predecessors: [0x43b]
Successors: []
---
0x452 PUSH1 0x0
0x454 PUSH1 0x0
0x456 REVERT
---
0x452: V425 = 0x0
0x454: V426 = 0x0
0x456: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V151]

================================

Block 0x457
[0x457:0x466]
---
Predecessors: [0x43b]
Successors: [0x264, 0x467]
---
0x457 JUMPDEST
0x458 PUSH1 0x1
0x45a PUSH1 0xa0
0x45c PUSH1 0x2
0x45e EXP
0x45f SUB
0x460 DUP2
0x461 AND
0x462 ISZERO
0x463 PUSH2 0x264
0x466 JUMPI
---
0x457: JUMPDEST 
0x458: V427 = 0x1
0x45a: V428 = 0xa0
0x45c: V429 = 0x2
0x45e: V430 = EXP 0x2 0xa0
0x45f: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V432 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x462: V433 = ISZERO V432
0x463: V434 = 0x264
0x466: JUMPI 0x264 V433
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V151]

================================

Block 0x467
[0x467:0x481]
---
Predecessors: [0x457]
Successors: [0x482]
---
0x467 PUSH1 0x0
0x469 DUP1
0x46a SLOAD
0x46b PUSH1 0x1
0x46d PUSH1 0xa0
0x46f PUSH1 0x2
0x471 EXP
0x472 SUB
0x473 NOT
0x474 AND
0x475 PUSH1 0x1
0x477 PUSH1 0xa0
0x479 PUSH1 0x2
0x47b EXP
0x47c SUB
0x47d DUP4
0x47e AND
0x47f OR
0x480 SWAP1
0x481 SSTORE
---
0x467: V435 = 0x0
0x46a: V436 = S[0x0]
0x46b: V437 = 0x1
0x46d: V438 = 0xa0
0x46f: V439 = 0x2
0x471: V440 = EXP 0x2 0xa0
0x472: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x473: V442 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x474: V443 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V436
0x475: V444 = 0x1
0x477: V445 = 0xa0
0x479: V446 = 0x2
0x47b: V447 = EXP 0x2 0xa0
0x47c: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V449 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V450 = OR V449 V443
0x481: S[0x0] = V450
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V151]

================================

Block 0x482
[0x482:0x482]
---
Predecessors: [0x467]
Successors: [0x483]
---
0x482 JUMPDEST
---
0x482: JUMPDEST 
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V151]

================================

Block 0x483
[0x483:0x483]
---
Predecessors: [0x482]
Successors: [0x484]
---
0x483 JUMPDEST
---
0x483: JUMPDEST 
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V151]

================================

Block 0x484
[0x484:0x486]
---
Predecessors: [0x483]
Successors: [0x9a]
---
0x484 JUMPDEST
0x485 POP
0x486 JUMP
---
0x484: JUMPDEST 
0x486: JUMP 0x9a
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x487
[0x487:0x49d]
---
Predecessors: [0x1b2]
Successors: [0x49e, 0x4a3]
---
0x487 JUMPDEST
0x488 PUSH1 0x0
0x48a SLOAD
0x48b CALLER
0x48c PUSH1 0x1
0x48e PUSH1 0xa0
0x490 PUSH1 0x2
0x492 EXP
0x493 SUB
0x494 SWAP1
0x495 DUP2
0x496 AND
0x497 SWAP2
0x498 AND
0x499 EQ
0x49a PUSH2 0x4a3
0x49d JUMPI
---
0x487: JUMPDEST 
0x488: V451 = 0x0
0x48a: V452 = S[0x0]
0x48b: V453 = CALLER
0x48c: V454 = 0x1
0x48e: V455 = 0xa0
0x490: V456 = 0x2
0x492: V457 = EXP 0x2 0xa0
0x493: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x496: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x498: V460 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x499: V461 = EQ V460 V459
0x49a: V462 = 0x4a3
0x49d: JUMPI 0x4a3 V461
---
Entry stack: [V12, 0x9a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V164]

================================

Block 0x49e
[0x49e:0x4a2]
---
Predecessors: [0x487]
Successors: []
---
0x49e PUSH1 0x0
0x4a0 PUSH1 0x0
0x4a2 REVERT
---
0x49e: V463 = 0x0
0x4a0: V464 = 0x0
0x4a2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V164]

================================

Block 0x4a3
[0x4a3:0x4ae]
---
Predecessors: [0x487]
Successors: []
---
0x4a3 JUMPDEST
0x4a4 DUP1
0x4a5 PUSH1 0x1
0x4a7 PUSH1 0xa0
0x4a9 PUSH1 0x2
0x4ab EXP
0x4ac SUB
0x4ad AND
0x4ae SELFDESTRUCT
---
0x4a3: JUMPDEST 
0x4a5: V465 = 0x1
0x4a7: V466 = 0xa0
0x4a9: V467 = 0x2
0x4ab: V468 = EXP 0x2 0xa0
0x4ac: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ad: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x4ae: SELFDESTRUCT V470
---
Entry stack: [V12, 0x9a, V164]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V164]

================================

Block 0x4af
[0x4af:0x4af]
---
Predecessors: []
Successors: [0x4b0]
---
0x4af JUMPDEST
---
0x4af: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x50e]
---
Predecessors: [0x4af]
Successors: []
---
0x4b0 JUMPDEST
0x4b1 POP
0x4b2 JUMP
0x4b3 STOP
0x4b4 MISSING 0xe1
0x4b5 REVERT
0x4b6 MISSING 0xb0
0x4b7 MISSING 0xa5
0x4b8 MISSING 0xe
0x4b9 PUSH21 0x2b6ef36889a8d1ce12bd3faa56c0b482869be8d0e4
0x4cf PUSH11 0x3e12652fa165627a7a7230
0x4db PC
0x4dc SHA3
0x4dd MISSING 0x4e
0x4de CODESIZE
0x4df SWAP16
0x4e0 MISSING 0xf
0x4e1 DUP8
0x4e2 NOT
0x4e3 POP
0x4e4 SWAP12
0x4e5 LOG2
0x4e6 MISSING 0xc8
0x4e7 PUSH7 0x24019d5d19033e
0x4ef INVALID
0x4f0 REVERT
0x4f1 PUSH29 0xb3a3fb0c1e47d4f2360a00029
---
0x4b0: JUMPDEST 
0x4b2: JUMP S1
0x4b3: STOP 
0x4b4: MISSING 0xe1
0x4b5: REVERT S0 S1
0x4b6: MISSING 0xb0
0x4b7: MISSING 0xa5
0x4b8: MISSING 0xe
0x4b9: V471 = 0x2b6ef36889a8d1ce12bd3faa56c0b482869be8d0e4
0x4cf: V472 = 0x3e12652fa165627a7a7230
0x4db: V473 = PC
0x4dc: V474 = SHA3 V473 0x3e12652fa165627a7a7230
0x4dd: MISSING 0x4e
0x4de: V475 = CODESIZE
0x4e0: MISSING 0xf
0x4e2: V476 = NOT S7
0x4e5: LOG S12 S1 S2 S3
0x4e6: MISSING 0xc8
0x4e7: V477 = 0x24019d5d19033e
0x4ef: INVALID 
0x4f0: REVERT S0 S1
0x4f1: V478 = 0xb3a3fb0c1e47d4f2360a00029
---
Entry stack: []
Stack pops: 7986
Stack additions: [0xb3a3fb0c1e47d4f2360a00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x8a
Exit block: 0x9a
Body: 0x8a, 0x91, 0x92, 0x9a, 0x1c8, 0x1e0, 0x1e5, 0x1f8, 0x1fd, 0x231, 0x232, 0x264, 0x265, 0x266

Function 1:
Public function signature: 0x3f4ba83a
Entry block: 0x9c
Exit block: 0xac
Body: 0x9c, 0xa3, 0xa4, 0xac, 0x269, 0x281, 0x286, 0x29a, 0x29f, 0x2da, 0x2db, 0x2dc

Function 2:
Public function signature: 0x4fa51a39
Entry block: 0xc0
Exit block: 0x9a
Body: 0x9a, 0xc0, 0x2df, 0x2f2, 0x2f7, 0x309, 0x30e, 0x35e, 0x35f

Function 3:
Public function signature: 0x5c975abb
Entry block: 0xd7
Exit block: 0xac
Body: 0xac, 0xd7, 0xde, 0xdf, 0x362

Function 4:
Public function signature: 0x83197ef0
Entry block: 0xfb
Exit block: 0x389
Body: 0xfb, 0x102, 0x103, 0x372, 0x389, 0x38e

Function 5:
Public function signature: 0x8456cb59
Entry block: 0x10d
Exit block: 0xac
Body: 0xac, 0x10d, 0x114, 0x115, 0x39f, 0x3b7, 0x3bc, 0x3cf, 0x3d4, 0x415, 0x416, 0x417

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x131
Exit block: 0x141
Body: 0x131, 0x138, 0x139, 0x141, 0x41a

Function 7:
Public function signature: 0xef9e5743
Entry block: 0x15d
Exit block: 0x17a
Body: 0x15d, 0x164, 0x165, 0x17a, 0x429

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x18c
Exit block: 0x9a
Body: 0x9a, 0x18c, 0x193, 0x194, 0x264, 0x265, 0x266, 0x43b, 0x452, 0x457, 0x467, 0x482, 0x483, 0x484

Function 9:
Public function signature: 0xf5074f41
Entry block: 0x1aa
Exit block: 0x4a3
Body: 0x1aa, 0x1b1, 0x1b2, 0x487, 0x49e, 0x4a3

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x88
Body: 0x88

