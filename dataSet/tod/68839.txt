Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x481c6a75
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x481c6a75
0x3b: V13 = EQ V11 0x481c6a75
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa8]
---
0x40 DUP1
0x41 PUSH4 0x5b980628
0x46 EQ
0x47 PUSH2 0xa8
0x4a JUMPI
---
0x41: V15 = 0x5b980628
0x46: V16 = EQ 0x5b980628 V11
0x47: V17 = 0xa8
0x4a: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xbb]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0xbb
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0xbb
0x55: JUMPI 0xbb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xce]
---
0x56 DUP1
0x57 PUSH4 0x8da7f232
0x5c EQ
0x5d PUSH2 0xce
0x60 JUMPI
---
0x57: V21 = 0x8da7f232
0x5c: V22 = EQ 0x8da7f232 V11
0x5d: V23 = 0xce
0x60: JUMPI 0xce V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xfa]
---
0x61 DUP1
0x62 PUSH4 0xcc79eaf0
0x67 EQ
0x68 PUSH2 0xfa
0x6b JUMPI
---
0x62: V24 = 0xcc79eaf0
0x67: V25 = EQ 0xcc79eaf0 V11
0x68: V26 = 0xfa
0x6b: JUMPI 0xfa V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x150]
---
0x6c DUP1
0x6d PUSH4 0xfeee8139
0x72 EQ
0x73 PUSH2 0x150
0x76 JUMPI
---
0x6d: V27 = 0xfeee8139
0x72: V28 = EQ 0xfeee8139 V11
0x73: V29 = 0x150
0x76: JUMPI 0x150 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x25c, 0x403]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0xd]
Successors: [0x80, 0x84]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7b: V31 = ISZERO V30
0x7c: V32 = 0x84
0x7f: JUMPI 0x84 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x79]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V33 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x8b]
---
Predecessors: [0x79]
Successors: [0x1d4]
---
0x84 JUMPDEST
0x85 PUSH2 0x8c
0x88 PUSH2 0x1d4
0x8b JUMP
---
0x84: JUMPDEST 
0x85: V34 = 0x8c
0x88: V35 = 0x1d4
0x8b: JUMP 0x1d4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V11, 0x8c]

================================

Block 0x8c
[0x8c:0xa7]
---
Predecessors: [0x1d4, 0x25f]
Successors: []
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f MLOAD
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 SWAP1
0x99 SWAP2
0x9a AND
0x9b DUP2
0x9c MSTORE
0x9d PUSH1 0x20
0x9f ADD
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 DUP1
0xa4 SWAP2
0xa5 SUB
0xa6 SWAP1
0xa7 RETURN
---
0x8c: JUMPDEST 
0x8d: V36 = 0x40
0x8f: V37 = M[0x40]
0x90: V38 = 0x1
0x92: V39 = 0xa0
0x94: V40 = 0x2
0x96: V41 = EXP 0x2 0xa0
0x97: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V43 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x9c: M[V37] = V43
0x9d: V44 = 0x20
0x9f: V45 = ADD 0x20 V37
0xa0: V46 = 0x40
0xa2: V47 = M[0x40]
0xa5: V48 = SUB V45 V47
0xa7: RETURN V47 V48
---
Entry stack: [V11, 0x8c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8c]

================================

Block 0xa8
[0xa8:0xae]
---
Predecessors: [0x40]
Successors: [0xaf, 0xb3]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa ISZERO
0xab PUSH2 0xb3
0xae JUMPI
---
0xa8: JUMPDEST 
0xa9: V49 = CALLVALUE
0xaa: V50 = ISZERO V49
0xab: V51 = 0xb3
0xae: JUMPI 0xb3 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb2]
---
Predecessors: [0xa8]
Successors: []
---
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 REVERT
---
0xaf: V52 = 0x0
0xb2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0xa8]
Successors: [0x1e4]
---
0xb3 JUMPDEST
0xb4 PUSH2 0x77
0xb7 PUSH2 0x1e4
0xba JUMP
---
0xb3: JUMPDEST 
0xb4: V53 = 0x77
0xb7: V54 = 0x1e4
0xba: JUMP 0x1e4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0x4b]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V55 = CALLVALUE
0xbd: V56 = ISZERO V55
0xbe: V57 = 0xc6
0xc1: JUMPI 0xc6 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V58 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbb]
Successors: [0x25f]
---
0xc6 JUMPDEST
0xc7 PUSH2 0x8c
0xca PUSH2 0x25f
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V59 = 0x8c
0xca: V60 = 0x25f
0xcd: JUMP 0x25f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V11, 0x8c]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x56]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V61 = CALLVALUE
0xd0: V62 = ISZERO V61
0xd1: V63 = 0xd9
0xd4: JUMPI 0xd9 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V64 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0xce]
Successors: [0x26f]
---
0xd9 JUMPDEST
0xda PUSH2 0xe4
0xdd PUSH1 0x4
0xdf CALLDATALOAD
0xe0 PUSH2 0x26f
0xe3 JUMP
---
0xd9: JUMPDEST 
0xda: V65 = 0xe4
0xdd: V66 = 0x4
0xdf: V67 = CALLDATALOAD 0x4
0xe0: V68 = 0x26f
0xe3: JUMP 0x26f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe4, V67]
Exit stack: [V11, 0xe4, V67]

================================

Block 0xe4
[0xe4:0xf9]
---
Predecessors: [0x27e]
Successors: []
---
0xe4 JUMPDEST
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 PUSH1 0xff
0xea SWAP1
0xeb SWAP2
0xec AND
0xed DUP2
0xee MSTORE
0xef PUSH1 0x20
0xf1 ADD
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 DUP1
0xf6 SWAP2
0xf7 SUB
0xf8 SWAP1
0xf9 RETURN
---
0xe4: JUMPDEST 
0xe5: V69 = 0x40
0xe7: V70 = M[0x40]
0xe8: V71 = 0xff
0xec: V72 = AND V226 0xff
0xee: M[V70] = V72
0xef: V73 = 0x20
0xf1: V74 = ADD 0x20 V70
0xf2: V75 = 0x40
0xf4: V76 = M[0x40]
0xf7: V77 = SUB V74 V76
0xf9: RETURN V76 V77
---
Entry stack: [V11, 0xe4, V226]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe4]

================================

Block 0xfa
[0xfa:0x100]
---
Predecessors: [0x61]
Successors: [0x101, 0x105]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc ISZERO
0xfd PUSH2 0x105
0x100 JUMPI
---
0xfa: JUMPDEST 
0xfb: V78 = CALLVALUE
0xfc: V79 = ISZERO V78
0xfd: V80 = 0x105
0x100: JUMPI 0x105 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0xfa]
Successors: []
---
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x101: V81 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x105
[0x105:0x115]
---
Predecessors: [0xfa]
Successors: [0x298]
---
0x105 JUMPDEST
0x106 PUSH2 0x116
0x109 PUSH4 0xffffffff
0x10e PUSH1 0x4
0x110 CALLDATALOAD
0x111 AND
0x112 PUSH2 0x298
0x115 JUMP
---
0x105: JUMPDEST 
0x106: V82 = 0x116
0x109: V83 = 0xffffffff
0x10e: V84 = 0x4
0x110: V85 = CALLDATALOAD 0x4
0x111: V86 = AND V85 0xffffffff
0x112: V87 = 0x298
0x115: JUMP 0x298
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x116, V86]
Exit stack: [V11, 0x116, V86]

================================

Block 0x116
[0x116:0x124]
---
Predecessors: [0x328]
Successors: [0x125]
---
0x116 JUMPDEST
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b DUP3
0x11c PUSH3 0x186a00
0x120 DUP1
0x121 DUP4
0x122 DUP4
0x123 PUSH1 0x0
---
0x116: JUMPDEST 
0x117: V88 = 0x40
0x119: V89 = M[0x40]
0x11c: V90 = 0x186a00
0x123: V91 = 0x0
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V370]
Stack pops: 1
Stack additions: [S0, V89, V89, S0, 0x186a00, 0x186a00, V89, S0, 0x0]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V89, V89, S0, 0x186a00, 0x186a00, V89, S0, 0x0]

================================

Block 0x125
[0x125:0x12d]
---
Predecessors: [0x116, 0x12e]
Successors: [0x12e, 0x13d]
---
0x125 JUMPDEST
0x126 DUP4
0x127 DUP2
0x128 LT
0x129 ISZERO
0x12a PUSH2 0x13d
0x12d JUMPI
---
0x125: JUMPDEST 
0x128: V92 = LT S0 0x186a00
0x129: V93 = ISZERO V92
0x12a: V94 = 0x13d
0x12d: JUMPI 0x13d V93
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V370, V89, V89, V370, 0x186a00, 0x186a00, V89, V370, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V370, V89, V89, V370, 0x186a00, 0x186a00, V89, V370, S0]

================================

Block 0x12e
[0x12e:0x13c]
---
Predecessors: [0x125]
Successors: [0x125]
---
0x12e DUP1
0x12f DUP3
0x130 ADD
0x131 MLOAD
0x132 DUP4
0x133 DUP3
0x134 ADD
0x135 MSTORE
0x136 PUSH1 0x20
0x138 ADD
0x139 PUSH2 0x125
0x13c JUMP
---
0x130: V95 = ADD V370 S0
0x131: V96 = M[V95]
0x134: V97 = ADD S0 V89
0x135: M[V97] = V96
0x136: V98 = 0x20
0x138: V99 = ADD 0x20 S0
0x139: V100 = 0x125
0x13c: JUMP 0x125
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V370, V89, V89, V370, 0x186a00, 0x186a00, V89, V370, S0]
Stack pops: 3
Stack additions: [S2, S1, V99]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V370, V89, V89, V370, 0x186a00, 0x186a00, V89, V370, V99]

================================

Block 0x13d
[0x13d:0x14f]
---
Predecessors: [0x125]
Successors: []
---
0x13d JUMPDEST
0x13e POP
0x13f POP
0x140 POP
0x141 POP
0x142 SWAP1
0x143 POP
0x144 ADD
0x145 SWAP2
0x146 POP
0x147 POP
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c SWAP2
0x14d SUB
0x14e SWAP1
0x14f RETURN
---
0x13d: JUMPDEST 
0x144: V101 = ADD 0x186a00 V89
0x148: V102 = 0x40
0x14a: V103 = M[0x40]
0x14d: V104 = SUB V101 V103
0x14f: RETURN V103 V104
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V370, V89, V89, V370, 0x186a00, 0x186a00, V89, V370, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9]

================================

Block 0x150
[0x150:0x1d3]
---
Predecessors: [0x6c]
Successors: [0x32f]
---
0x150 JUMPDEST
0x151 PUSH2 0x77
0x154 PUSH1 0x4
0x156 PUSH1 0x24
0x158 DUP2
0x159 CALLDATALOAD
0x15a DUP2
0x15b DUP2
0x15c ADD
0x15d SWAP1
0x15e DUP4
0x15f ADD
0x160 CALLDATALOAD
0x161 DUP1
0x162 PUSH1 0x20
0x164 DUP2
0x165 DUP2
0x166 MUL
0x167 ADD
0x168 PUSH1 0x40
0x16a MLOAD
0x16b SWAP1
0x16c DUP2
0x16d ADD
0x16e PUSH1 0x40
0x170 MSTORE
0x171 DUP1
0x172 SWAP4
0x173 SWAP3
0x174 SWAP2
0x175 SWAP1
0x176 DUP2
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x20
0x17b ADD
0x17c DUP4
0x17d DUP4
0x17e PUSH1 0x20
0x180 MUL
0x181 DUP1
0x182 DUP3
0x183 DUP5
0x184 CALLDATACOPY
0x185 DUP3
0x186 ADD
0x187 SWAP2
0x188 POP
0x189 POP
0x18a POP
0x18b POP
0x18c POP
0x18d POP
0x18e SWAP2
0x18f SWAP1
0x190 DUP1
0x191 CALLDATALOAD
0x192 SWAP1
0x193 PUSH1 0x20
0x195 ADD
0x196 SWAP1
0x197 DUP3
0x198 ADD
0x199 DUP1
0x19a CALLDATALOAD
0x19b SWAP1
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 DUP1
0x1a1 DUP1
0x1a2 PUSH1 0x20
0x1a4 MUL
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 PUSH1 0x40
0x1aa MLOAD
0x1ab SWAP1
0x1ac DUP2
0x1ad ADD
0x1ae PUSH1 0x40
0x1b0 MSTORE
0x1b1 DUP1
0x1b2 SWAP4
0x1b3 SWAP3
0x1b4 SWAP2
0x1b5 SWAP1
0x1b6 DUP2
0x1b7 DUP2
0x1b8 MSTORE
0x1b9 PUSH1 0x20
0x1bb ADD
0x1bc DUP4
0x1bd DUP4
0x1be PUSH1 0x20
0x1c0 MUL
0x1c1 DUP1
0x1c2 DUP3
0x1c3 DUP5
0x1c4 CALLDATACOPY
0x1c5 POP
0x1c6 SWAP5
0x1c7 SWAP7
0x1c8 POP
0x1c9 PUSH2 0x32f
0x1cc SWAP6
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 JUMP
---
0x150: JUMPDEST 
0x151: V105 = 0x77
0x154: V106 = 0x4
0x156: V107 = 0x24
0x159: V108 = CALLDATALOAD 0x4
0x15c: V109 = ADD V108 0x24
0x15f: V110 = ADD 0x4 V108
0x160: V111 = CALLDATALOAD V110
0x162: V112 = 0x20
0x166: V113 = MUL 0x20 V111
0x167: V114 = ADD V113 0x20
0x168: V115 = 0x40
0x16a: V116 = M[0x40]
0x16d: V117 = ADD V116 V114
0x16e: V118 = 0x40
0x170: M[0x40] = V117
0x178: M[V116] = V111
0x179: V119 = 0x20
0x17b: V120 = ADD 0x20 V116
0x17e: V121 = 0x20
0x180: V122 = MUL 0x20 V111
0x184: CALLDATACOPY V120 V109 V122
0x186: V123 = ADD V120 V122
0x191: V124 = CALLDATALOAD 0x24
0x193: V125 = 0x20
0x195: V126 = ADD 0x20 0x24
0x198: V127 = ADD 0x4 V124
0x19a: V128 = CALLDATALOAD V127
0x19c: V129 = 0x20
0x19e: V130 = ADD 0x20 V127
0x1a2: V131 = 0x20
0x1a4: V132 = MUL 0x20 V128
0x1a5: V133 = 0x20
0x1a7: V134 = ADD 0x20 V132
0x1a8: V135 = 0x40
0x1aa: V136 = M[0x40]
0x1ad: V137 = ADD V136 V134
0x1ae: V138 = 0x40
0x1b0: M[0x40] = V137
0x1b8: M[V136] = V128
0x1b9: V139 = 0x20
0x1bb: V140 = ADD 0x20 V136
0x1be: V141 = 0x20
0x1c0: V142 = MUL 0x20 V128
0x1c4: CALLDATACOPY V140 V130 V142
0x1c9: V143 = 0x32f
0x1d3: JUMP 0x32f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V116, V136]
Exit stack: [V11, 0x77, V116, V136]

================================

Block 0x1d4
[0x1d4:0x1e3]
---
Predecessors: [0x84]
Successors: [0x8c]
---
0x1d4 JUMPDEST
0x1d5 PUSH2 0x7a12
0x1d8 SLOAD
0x1d9 PUSH1 0x1
0x1db PUSH1 0xa0
0x1dd PUSH1 0x2
0x1df EXP
0x1e0 SUB
0x1e1 AND
0x1e2 DUP2
0x1e3 JUMP
---
0x1d4: JUMPDEST 
0x1d5: V144 = 0x7a12
0x1d8: V145 = S[0x7a12]
0x1d9: V146 = 0x1
0x1db: V147 = 0xa0
0x1dd: V148 = 0x2
0x1df: V149 = EXP 0x2 0xa0
0x1e0: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e1: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1e3: JUMP 0x8c
---
Entry stack: [V11, 0x8c]
Stack pops: 1
Stack additions: [S0, V151]
Exit stack: [V11, 0x8c, V151]

================================

Block 0x1e4
[0x1e4:0x1ff]
---
Predecessors: [0xb3]
Successors: [0x200, 0x214]
---
0x1e4 JUMPDEST
0x1e5 PUSH2 0x7a12
0x1e8 SLOAD
0x1e9 PUSH1 0x0
0x1eb SWAP1
0x1ec CALLER
0x1ed PUSH1 0x1
0x1ef PUSH1 0xa0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 SUB
0x1f5 SWAP1
0x1f6 DUP2
0x1f7 AND
0x1f8 SWAP2
0x1f9 AND
0x1fa EQ
0x1fb DUP1
0x1fc PUSH2 0x214
0x1ff JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V152 = 0x7a12
0x1e8: V153 = S[0x7a12]
0x1e9: V154 = 0x0
0x1ec: V155 = CALLER
0x1ed: V156 = 0x1
0x1ef: V157 = 0xa0
0x1f1: V158 = 0x2
0x1f3: V159 = EXP 0x2 0xa0
0x1f4: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f7: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1f9: V162 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V163 = EQ V162 V161
0x1fc: V164 = 0x214
0x1ff: JUMPI 0x214 V163
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x0, V163]
Exit stack: [V11, 0x77, 0x0, V163]

================================

Block 0x200
[0x200:0x213]
---
Predecessors: [0x1e4]
Successors: [0x214]
---
0x200 POP
0x201 PUSH2 0x7a13
0x204 SLOAD
0x205 CALLER
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e SWAP1
0x20f DUP2
0x210 AND
0x211 SWAP2
0x212 AND
0x213 EQ
---
0x201: V165 = 0x7a13
0x204: V166 = S[0x7a13]
0x205: V167 = CALLER
0x206: V168 = 0x1
0x208: V169 = 0xa0
0x20a: V170 = 0x2
0x20c: V171 = EXP 0x2 0xa0
0x20d: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x212: V174 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x213: V175 = EQ V174 V173
---
Entry stack: [V11, 0x77, 0x0, V163]
Stack pops: 1
Stack additions: [V175]
Exit stack: [V11, 0x77, 0x0, V175]

================================

Block 0x214
[0x214:0x21a]
---
Predecessors: [0x1e4, 0x200]
Successors: [0x21b, 0x21f]
---
0x214 JUMPDEST
0x215 ISZERO
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x214: JUMPDEST 
0x215: V176 = ISZERO S0
0x216: V177 = ISZERO V176
0x217: V178 = 0x21f
0x21a: JUMPI 0x21f V177
---
Entry stack: [V11, 0x77, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, 0x0]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x214]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V179 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x0]

================================

Block 0x21f
[0x21f:0x257]
---
Predecessors: [0x214]
Successors: [0x258, 0x25c]
---
0x21f JUMPDEST
0x220 POP
0x221 PUSH2 0x7a13
0x224 SLOAD
0x225 ADDRESS
0x226 SWAP1
0x227 PUSH1 0x1
0x229 PUSH1 0xa0
0x22b PUSH1 0x2
0x22d EXP
0x22e SUB
0x22f SWAP1
0x230 DUP2
0x231 AND
0x232 SWAP1
0x233 DUP3
0x234 AND
0x235 BALANCE
0x236 DUP1
0x237 ISZERO
0x238 PUSH2 0x8fc
0x23b MUL
0x23c SWAP1
0x23d PUSH1 0x40
0x23f MLOAD
0x240 PUSH1 0x0
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 DUP4
0x247 SUB
0x248 DUP2
0x249 DUP6
0x24a DUP9
0x24b DUP9
0x24c CALL
0x24d SWAP4
0x24e POP
0x24f POP
0x250 POP
0x251 POP
0x252 ISZERO
0x253 ISZERO
0x254 PUSH2 0x25c
0x257 JUMPI
---
0x21f: JUMPDEST 
0x221: V180 = 0x7a13
0x224: V181 = S[0x7a13]
0x225: V182 = ADDRESS
0x227: V183 = 0x1
0x229: V184 = 0xa0
0x22b: V185 = 0x2
0x22d: V186 = EXP 0x2 0xa0
0x22e: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x234: V189 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x235: V190 = BALANCE V189
0x237: V191 = ISZERO V190
0x238: V192 = 0x8fc
0x23b: V193 = MUL 0x8fc V191
0x23d: V194 = 0x40
0x23f: V195 = M[0x40]
0x240: V196 = 0x0
0x242: V197 = 0x40
0x244: V198 = M[0x40]
0x247: V199 = SUB V195 V198
0x24c: V200 = CALL V193 V188 V190 V198 V199 V198 0x0
0x252: V201 = ISZERO V200
0x253: V202 = ISZERO V201
0x254: V203 = 0x25c
0x257: JUMPI 0x25c V202
---
Entry stack: [V11, 0x77, 0x0]
Stack pops: 1
Stack additions: [V182]
Exit stack: [V11, 0x77, V182]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x21f]
Successors: []
---
0x258 PUSH1 0x0
0x25a DUP1
0x25b REVERT
---
0x258: V204 = 0x0
0x25b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V182]

================================

Block 0x25c
[0x25c:0x25e]
---
Predecessors: [0x21f]
Successors: [0x77]
---
0x25c JUMPDEST
0x25d POP
0x25e JUMP
---
0x25c: JUMPDEST 
0x25e: JUMP 0x77
---
Entry stack: [V11, 0x77, V182]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x25f
[0x25f:0x26e]
---
Predecessors: [0xc6]
Successors: [0x8c]
---
0x25f JUMPDEST
0x260 PUSH2 0x7a13
0x263 SLOAD
0x264 PUSH1 0x1
0x266 PUSH1 0xa0
0x268 PUSH1 0x2
0x26a EXP
0x26b SUB
0x26c AND
0x26d DUP2
0x26e JUMP
---
0x25f: JUMPDEST 
0x260: V205 = 0x7a13
0x263: V206 = S[0x7a13]
0x264: V207 = 0x1
0x266: V208 = 0xa0
0x268: V209 = 0x2
0x26a: V210 = EXP 0x2 0xa0
0x26b: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26c: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x26e: JUMP 0x8c
---
Entry stack: [V11, 0x8c]
Stack pops: 1
Stack additions: [S0, V212]
Exit stack: [V11, 0x8c, V212]

================================

Block 0x26f
[0x26f:0x27c]
---
Predecessors: [0xd9]
Successors: [0x27d, 0x27e]
---
0x26f JUMPDEST
0x270 PUSH1 0x0
0x272 DUP2
0x273 PUSH3 0xf4240
0x277 DUP2
0x278 LT
0x279 PUSH2 0x27e
0x27c JUMPI
---
0x26f: JUMPDEST 
0x270: V213 = 0x0
0x273: V214 = 0xf4240
0x278: V215 = LT V67 0xf4240
0x279: V216 = 0x27e
0x27c: JUMPI 0x27e V215
---
Entry stack: [V11, 0xe4, V67]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0xe4, V67, 0x0, V67]

================================

Block 0x27d
[0x27d:0x27d]
---
Predecessors: [0x26f]
Successors: []
---
0x27d INVALID
---
0x27d: INVALID 
---
Entry stack: [V11, 0xe4, V67, 0x0, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe4, V67, 0x0, V67]

================================

Block 0x27e
[0x27e:0x297]
---
Predecessors: [0x26f]
Successors: [0xe4]
---
0x27e JUMPDEST
0x27f PUSH1 0x20
0x281 SWAP2
0x282 DUP3
0x283 DUP3
0x284 DIV
0x285 ADD
0x286 SWAP2
0x287 SWAP1
0x288 MOD
0x289 SWAP2
0x28a POP
0x28b SLOAD
0x28c SWAP1
0x28d PUSH2 0x100
0x290 EXP
0x291 SWAP1
0x292 DIV
0x293 PUSH1 0xff
0x295 AND
0x296 DUP2
0x297 JUMP
---
0x27e: JUMPDEST 
0x27f: V217 = 0x20
0x284: V218 = DIV V67 0x20
0x285: V219 = ADD V218 0x0
0x288: V220 = MOD V67 0x20
0x28b: V221 = S[V219]
0x28d: V222 = 0x100
0x290: V223 = EXP 0x100 V220
0x292: V224 = DIV V221 V223
0x293: V225 = 0xff
0x295: V226 = AND 0xff V224
0x297: JUMP 0xe4
---
Entry stack: [V11, 0xe4, V67, 0x0, V67]
Stack pops: 4
Stack additions: [S3, V226]
Exit stack: [V11, 0xe4, V226]

================================

Block 0x298
[0x298:0x29f]
---
Predecessors: [0x105]
Successors: [0x434]
---
0x298 JUMPDEST
0x299 PUSH2 0x2a0
0x29c PUSH2 0x434
0x29f JUMP
---
0x298: JUMPDEST 
0x299: V227 = 0x2a0
0x29c: V228 = 0x434
0x29f: JUMP 0x434
---
Entry stack: [V11, 0x116, V86]
Stack pops: 0
Stack additions: [0x2a0]
Exit stack: [V11, 0x116, V86, 0x2a0]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x45a]
Successors: [0x434]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x2a8
0x2a4 PUSH2 0x434
0x2a7 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V229 = 0x2a8
0x2a4: V230 = 0x434
0x2a7: JUMP 0x434
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V370]
Stack pops: 0
Stack additions: [0x2a8]
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V370, 0x2a8]

================================

Block 0x2a8
[0x2a8:0x2ba]
---
Predecessors: [0x45a]
Successors: [0x2bb, 0x2bf]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x0
0x2ab PUSH3 0xf4240
0x2af PUSH4 0xffffffff
0x2b4 DUP6
0x2b5 AND
0x2b6 LT
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V231 = 0x0
0x2ab: V232 = 0xf4240
0x2af: V233 = 0xffffffff
0x2b5: V234 = AND S2 0xffffffff
0x2b6: V235 = LT V234 0xf4240
0x2b7: V236 = 0x2bf
0x2ba: JUMPI 0x2bf V235
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V370]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V370, 0x0]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2a8]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V237 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, 0x0]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2a8]
Successors: [0x2c3]
---
0x2bf JUMPDEST
0x2c0 POP
0x2c1 PUSH1 0x0
---
0x2bf: JUMPDEST 
0x2c1: V238 = 0x0
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, 0x0]

================================

Block 0x2c3
[0x2c3:0x2d3]
---
Predecessors: [0x2bf, 0x313]
Successors: [0x2d4, 0x328]
---
0x2c3 JUMPDEST
0x2c4 PUSH2 0xc350
0x2c7 DUP2
0x2c8 PUSH4 0xffffffff
0x2cd AND
0x2ce LT
0x2cf ISZERO
0x2d0 PUSH2 0x328
0x2d3 JUMPI
---
0x2c3: JUMPDEST 
0x2c4: V239 = 0xc350
0x2c8: V240 = 0xffffffff
0x2cd: V241 = AND 0xffffffff S0
0x2ce: V242 = LT V241 0xc350
0x2cf: V243 = ISZERO V242
0x2d0: V244 = 0x328
0x2d3: JUMPI 0x328 V243
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, S0]

================================

Block 0x2d4
[0x2d4:0x2e8]
---
Predecessors: [0x2c3]
Successors: [0x2e9, 0x2ea]
---
0x2d4 PUSH1 0x0
0x2d6 PUSH4 0xffffffff
0x2db DUP6
0x2dc DUP4
0x2dd ADD
0x2de AND
0x2df PUSH3 0xf4240
0x2e3 DUP2
0x2e4 LT
0x2e5 PUSH2 0x2ea
0x2e8 JUMPI
---
0x2d4: V245 = 0x0
0x2d6: V246 = 0xffffffff
0x2dd: V247 = ADD S0 S3
0x2de: V248 = AND V247 0xffffffff
0x2df: V249 = 0xf4240
0x2e4: V250 = LT V248 0xf4240
0x2e5: V251 = 0x2ea
0x2e8: JUMPI 0x2ea V250
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, V248]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, S0, 0x0, V248]

================================

Block 0x2e9
[0x2e9:0x2e9]
---
Predecessors: [0x2d4]
Successors: []
---
0x2e9 INVALID
---
0x2e9: INVALID 
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V370, S2, 0x0, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V370, S2, 0x0, V248]

================================

Block 0x2ea
[0x2ea:0x311]
---
Predecessors: [0x2d4]
Successors: [0x312, 0x313]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x20
0x2ed DUP2
0x2ee DIV
0x2ef SWAP1
0x2f0 SWAP2
0x2f1 ADD
0x2f2 SLOAD
0x2f3 PUSH1 0xff
0x2f5 PUSH1 0x1f
0x2f7 SWAP1
0x2f8 SWAP3
0x2f9 AND
0x2fa PUSH2 0x100
0x2fd EXP
0x2fe SWAP1
0x2ff DIV
0x300 AND
0x301 DUP3
0x302 PUSH4 0xffffffff
0x307 DUP4
0x308 AND
0x309 PUSH2 0xc350
0x30c DUP2
0x30d LT
0x30e PUSH2 0x313
0x311 JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V252 = 0x20
0x2ee: V253 = DIV V248 0x20
0x2f1: V254 = ADD 0x0 V253
0x2f2: V255 = S[V254]
0x2f3: V256 = 0xff
0x2f5: V257 = 0x1f
0x2f9: V258 = AND V248 0x1f
0x2fa: V259 = 0x100
0x2fd: V260 = EXP 0x100 V258
0x2ff: V261 = DIV V255 V260
0x300: V262 = AND V261 0xff
0x302: V263 = 0xffffffff
0x308: V264 = AND S2 0xffffffff
0x309: V265 = 0xc350
0x30d: V266 = LT V264 0xc350
0x30e: V267 = 0x313
0x311: JUMPI 0x313 V266
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V370, S2, 0x0, V248]
Stack pops: 4
Stack additions: [S3, S2, V262, S3, V264]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc}, V262, S3, V264]

================================

Block 0x312
[0x312:0x312]
---
Predecessors: [0x2ea]
Successors: []
---
0x312 INVALID
---
0x312: INVALID 
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V370, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc}, V262, V370, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V370, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc}, V262, V370, V264]

================================

Block 0x313
[0x313:0x327]
---
Predecessors: [0x2ea]
Successors: [0x2c3]
---
0x313 JUMPDEST
0x314 PUSH1 0xff
0x316 SWAP1
0x317 SWAP3
0x318 AND
0x319 PUSH1 0x20
0x31b SWAP3
0x31c SWAP1
0x31d SWAP3
0x31e MUL
0x31f ADD
0x320 MSTORE
0x321 PUSH1 0x1
0x323 ADD
0x324 PUSH2 0x2c3
0x327 JUMP
---
0x313: JUMPDEST 
0x314: V268 = 0xff
0x318: V269 = AND V262 0xff
0x319: V270 = 0x20
0x31e: V271 = MUL 0x20 V264
0x31f: V272 = ADD V271 V370
0x320: M[V272] = V269
0x321: V273 = 0x1
0x323: V274 = ADD 0x1 {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc}
0x324: V275 = 0x2c3
0x327: JUMP 0x2c3
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V370, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc}, V262, V370, V264]
Stack pops: 4
Stack additions: [V274]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V370, V274]

================================

Block 0x328
[0x328:0x32e]
---
Predecessors: [0x2c3]
Successors: [0x116]
---
0x328 JUMPDEST
0x329 POP
0x32a SWAP3
0x32b SWAP2
0x32c POP
0x32d POP
0x32e JUMP
---
0x328: JUMPDEST 
0x32e: JUMP S4
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V370, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V370]

================================

Block 0x32f
[0x32f:0x33b]
---
Predecessors: [0x150]
Successors: [0x33c, 0x340]
---
0x32f JUMPDEST
0x330 PUSH1 0x0
0x332 PUSH2 0x100
0x335 DUP4
0x336 MLOAD
0x337 LT
0x338 PUSH2 0x340
0x33b JUMPI
---
0x32f: JUMPDEST 
0x330: V276 = 0x0
0x332: V277 = 0x100
0x336: V278 = M[V116]
0x337: V279 = LT V278 0x100
0x338: V280 = 0x340
0x33b: JUMPI 0x340 V279
---
Entry stack: [V11, 0x77, V116, V136]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x77, V116, V136, 0x0]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x32f]
Successors: []
---
0x33c PUSH1 0x0
0x33e DUP1
0x33f REVERT
---
0x33c: V281 = 0x0
0x33f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V116, V136, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V116, V136, 0x0]

================================

Block 0x340
[0x340:0x352]
---
Predecessors: [0x32f]
Successors: [0x353, 0x367]
---
0x340 JUMPDEST
0x341 DUP3
0x342 MLOAD
0x343 PUSH6 0x5af3107a4000
0x34a MUL
0x34b CALLVALUE
0x34c LT
0x34d ISZERO
0x34e DUP1
0x34f PUSH2 0x367
0x352 JUMPI
---
0x340: JUMPDEST 
0x342: V282 = M[V116]
0x343: V283 = 0x5af3107a4000
0x34a: V284 = MUL 0x5af3107a4000 V282
0x34b: V285 = CALLVALUE
0x34c: V286 = LT V285 V284
0x34d: V287 = ISZERO V286
0x34f: V288 = 0x367
0x352: JUMPI 0x367 V287
---
Entry stack: [V11, 0x77, V116, V136, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V287]
Exit stack: [V11, 0x77, V116, V136, 0x0, V287]

================================

Block 0x353
[0x353:0x366]
---
Predecessors: [0x340]
Successors: [0x367]
---
0x353 POP
0x354 PUSH2 0x7a12
0x357 SLOAD
0x358 CALLER
0x359 PUSH1 0x1
0x35b PUSH1 0xa0
0x35d PUSH1 0x2
0x35f EXP
0x360 SUB
0x361 SWAP1
0x362 DUP2
0x363 AND
0x364 SWAP2
0x365 AND
0x366 EQ
---
0x354: V289 = 0x7a12
0x357: V290 = S[0x7a12]
0x358: V291 = CALLER
0x359: V292 = 0x1
0x35b: V293 = 0xa0
0x35d: V294 = 0x2
0x35f: V295 = EXP 0x2 0xa0
0x360: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x363: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x365: V298 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x366: V299 = EQ V298 V297
---
Entry stack: [V11, 0x77, V116, V136, 0x0, V287]
Stack pops: 1
Stack additions: [V299]
Exit stack: [V11, 0x77, V116, V136, 0x0, V299]

================================

Block 0x367
[0x367:0x36d]
---
Predecessors: [0x340, 0x353]
Successors: [0x36e, 0x372]
---
0x367 JUMPDEST
0x368 ISZERO
0x369 ISZERO
0x36a PUSH2 0x372
0x36d JUMPI
---
0x367: JUMPDEST 
0x368: V300 = ISZERO S0
0x369: V301 = ISZERO V300
0x36a: V302 = 0x372
0x36d: JUMPI 0x372 V301
---
Entry stack: [V11, 0x77, V116, V136, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V116, V136, 0x0]

================================

Block 0x36e
[0x36e:0x371]
---
Predecessors: [0x367]
Successors: []
---
0x36e PUSH1 0x0
0x370 DUP1
0x371 REVERT
---
0x36e: V303 = 0x0
0x371: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V116, V136, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V116, V136, 0x0]

================================

Block 0x372
[0x372:0x37b]
---
Predecessors: [0x367]
Successors: [0x37c, 0x380]
---
0x372 JUMPDEST
0x373 DUP3
0x374 MLOAD
0x375 DUP3
0x376 MLOAD
0x377 EQ
0x378 PUSH2 0x380
0x37b JUMPI
---
0x372: JUMPDEST 
0x374: V304 = M[V116]
0x376: V305 = M[V136]
0x377: V306 = EQ V305 V304
0x378: V307 = 0x380
0x37b: JUMPI 0x380 V306
---
Entry stack: [V11, 0x77, V116, V136, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V116, V136, 0x0]

================================

Block 0x37c
[0x37c:0x37f]
---
Predecessors: [0x372]
Successors: []
---
0x37c PUSH1 0x0
0x37e DUP1
0x37f REVERT
---
0x37c: V308 = 0x0
0x37f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V116, V136, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V116, V136, 0x0]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x372]
Successors: [0x384]
---
0x380 JUMPDEST
0x381 POP
0x382 PUSH1 0x0
---
0x380: JUMPDEST 
0x382: V309 = 0x0
---
Entry stack: [V11, 0x77, V116, V136, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x77, V116, V136, 0x0]

================================

Block 0x384
[0x384:0x390]
---
Predecessors: [0x380, 0x3d6]
Successors: [0x391, 0x403]
---
0x384 JUMPDEST
0x385 DUP3
0x386 MLOAD
0x387 DUP2
0x388 PUSH1 0xff
0x38a AND
0x38b LT
0x38c ISZERO
0x38d PUSH2 0x403
0x390 JUMPI
---
0x384: JUMPDEST 
0x386: V310 = M[V116]
0x388: V311 = 0xff
0x38a: V312 = AND 0xff S0
0x38b: V313 = LT V312 V310
0x38c: V314 = ISZERO V313
0x38d: V315 = 0x403
0x390: JUMPI 0x403 V314
---
Entry stack: [V11, 0x77, V116, V136, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V116, V136, S0]

================================

Block 0x391
[0x391:0x39d]
---
Predecessors: [0x384]
Successors: [0x39e, 0x39f]
---
0x391 DUP2
0x392 DUP2
0x393 PUSH1 0xff
0x395 AND
0x396 DUP2
0x397 MLOAD
0x398 DUP2
0x399 LT
0x39a PUSH2 0x39f
0x39d JUMPI
---
0x393: V316 = 0xff
0x395: V317 = AND 0xff S0
0x397: V318 = M[V136]
0x399: V319 = LT V317 V318
0x39a: V320 = 0x39f
0x39d: JUMPI 0x39f V319
---
Entry stack: [V11, 0x77, V116, V136, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, V317]
Exit stack: [V11, 0x77, V116, V136, S0, V136, V317]

================================

Block 0x39e
[0x39e:0x39e]
---
Predecessors: [0x391]
Successors: []
---
0x39e INVALID
---
0x39e: INVALID 
---
Entry stack: [V11, 0x77, V116, V136, S2, V136, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V116, V136, S2, V136, V317]

================================

Block 0x39f
[0x39f:0x3b8]
---
Predecessors: [0x391]
Successors: [0x3b9, 0x3ba]
---
0x39f JUMPDEST
0x3a0 SWAP1
0x3a1 PUSH1 0x20
0x3a3 ADD
0x3a4 SWAP1
0x3a5 PUSH1 0x20
0x3a7 MUL
0x3a8 ADD
0x3a9 MLOAD
0x3aa PUSH1 0x0
0x3ac DUP5
0x3ad DUP4
0x3ae PUSH1 0xff
0x3b0 AND
0x3b1 DUP2
0x3b2 MLOAD
0x3b3 DUP2
0x3b4 LT
0x3b5 PUSH2 0x3ba
0x3b8 JUMPI
---
0x39f: JUMPDEST 
0x3a1: V321 = 0x20
0x3a3: V322 = ADD 0x20 V136
0x3a5: V323 = 0x20
0x3a7: V324 = MUL 0x20 V317
0x3a8: V325 = ADD V324 V322
0x3a9: V326 = M[V325]
0x3aa: V327 = 0x0
0x3ae: V328 = 0xff
0x3b0: V329 = AND 0xff S2
0x3b2: V330 = M[V116]
0x3b4: V331 = LT V329 V330
0x3b5: V332 = 0x3ba
0x3b8: JUMPI 0x3ba V331
---
Entry stack: [V11, 0x77, V116, V136, S2, V136, V317]
Stack pops: 5
Stack additions: [S4, S3, S2, V326, 0x0, S4, V329]
Exit stack: [V11, 0x77, V116, V136, S2, V326, 0x0, V116, V329]

================================

Block 0x3b9
[0x3b9:0x3b9]
---
Predecessors: [0x39f]
Successors: []
---
0x3b9 INVALID
---
0x3b9: INVALID 
---
Entry stack: [V11, 0x77, V116, V136, S4, V326, 0x0, V116, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V116, V136, S4, V326, 0x0, V116, V329]

================================

Block 0x3ba
[0x3ba:0x3d4]
---
Predecessors: [0x39f]
Successors: [0x3d5, 0x3d6]
---
0x3ba JUMPDEST
0x3bb SWAP1
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP1
0x3c0 PUSH1 0x20
0x3c2 MUL
0x3c3 ADD
0x3c4 MLOAD
0x3c5 PUSH4 0xffffffff
0x3ca AND
0x3cb PUSH3 0xf4240
0x3cf DUP2
0x3d0 LT
0x3d1 PUSH2 0x3d6
0x3d4 JUMPI
---
0x3ba: JUMPDEST 
0x3bc: V333 = 0x20
0x3be: V334 = ADD 0x20 V116
0x3c0: V335 = 0x20
0x3c2: V336 = MUL 0x20 V329
0x3c3: V337 = ADD V336 V334
0x3c4: V338 = M[V337]
0x3c5: V339 = 0xffffffff
0x3ca: V340 = AND 0xffffffff V338
0x3cb: V341 = 0xf4240
0x3d0: V342 = LT V340 0xf4240
0x3d1: V343 = 0x3d6
0x3d4: JUMPI 0x3d6 V342
---
Entry stack: [V11, 0x77, V116, V136, S4, V326, 0x0, V116, V329]
Stack pops: 2
Stack additions: [V340]
Exit stack: [V11, 0x77, V116, V136, S4, V326, 0x0, V340]

================================

Block 0x3d5
[0x3d5:0x3d5]
---
Predecessors: [0x3ba]
Successors: []
---
0x3d5 INVALID
---
0x3d5: INVALID 
---
Entry stack: [V11, 0x77, V116, V136, S3, V326, 0x0, V340]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V116, V136, S3, V326, 0x0, V340]

================================

Block 0x3d6
[0x3d6:0x402]
---
Predecessors: [0x3ba]
Successors: [0x384]
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x20
0x3d9 SWAP2
0x3da DUP3
0x3db DUP3
0x3dc DIV
0x3dd ADD
0x3de SWAP2
0x3df SWAP1
0x3e0 MOD
0x3e1 PUSH2 0x100
0x3e4 EXP
0x3e5 DUP2
0x3e6 SLOAD
0x3e7 DUP2
0x3e8 PUSH1 0xff
0x3ea MUL
0x3eb NOT
0x3ec AND
0x3ed SWAP1
0x3ee DUP4
0x3ef PUSH1 0xff
0x3f1 AND
0x3f2 MUL
0x3f3 OR
0x3f4 SWAP1
0x3f5 SSTORE
0x3f6 POP
0x3f7 DUP1
0x3f8 DUP1
0x3f9 PUSH1 0x1
0x3fb ADD
0x3fc SWAP2
0x3fd POP
0x3fe POP
0x3ff PUSH2 0x384
0x402 JUMP
---
0x3d6: JUMPDEST 
0x3d7: V344 = 0x20
0x3dc: V345 = DIV V340 0x20
0x3dd: V346 = ADD V345 0x0
0x3e0: V347 = MOD V340 0x20
0x3e1: V348 = 0x100
0x3e4: V349 = EXP 0x100 V347
0x3e6: V350 = S[V346]
0x3e8: V351 = 0xff
0x3ea: V352 = MUL 0xff V349
0x3eb: V353 = NOT V352
0x3ec: V354 = AND V353 V350
0x3ef: V355 = 0xff
0x3f1: V356 = AND 0xff V326
0x3f2: V357 = MUL V356 V349
0x3f3: V358 = OR V357 V354
0x3f5: S[V346] = V358
0x3f9: V359 = 0x1
0x3fb: V360 = ADD 0x1 S3
0x3ff: V361 = 0x384
0x402: JUMP 0x384
---
Entry stack: [V11, 0x77, V116, V136, S3, V326, 0x0, V340]
Stack pops: 4
Stack additions: [V360]
Exit stack: [V11, 0x77, V116, V136, V360]

================================

Block 0x403
[0x403:0x433]
---
Predecessors: [0x384]
Successors: [0x77]
---
0x403 JUMPDEST
0x404 PUSH32 0xf2e795d4a33ae9a0d3282888375b8ae781ea4de1cbf101ac96150aa95ccff0b4
0x425 PUSH1 0x40
0x427 MLOAD
0x428 PUSH1 0x40
0x42a MLOAD
0x42b DUP1
0x42c SWAP2
0x42d SUB
0x42e SWAP1
0x42f LOG1
0x430 POP
0x431 POP
0x432 POP
0x433 JUMP
---
0x403: JUMPDEST 
0x404: V362 = 0xf2e795d4a33ae9a0d3282888375b8ae781ea4de1cbf101ac96150aa95ccff0b4
0x425: V363 = 0x40
0x427: V364 = M[0x40]
0x428: V365 = 0x40
0x42a: V366 = M[0x40]
0x42d: V367 = SUB V364 V366
0x42f: LOG V366 V367 0xf2e795d4a33ae9a0d3282888375b8ae781ea4de1cbf101ac96150aa95ccff0b4
0x433: JUMP 0x77
---
Entry stack: [V11, 0x77, V116, V136, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x434
[0x434:0x445]
---
Predecessors: [0x298, 0x2a0]
Successors: [0x446]
---
0x434 JUMPDEST
0x435 PUSH3 0x186a00
0x439 PUSH1 0x40
0x43b MLOAD
0x43c SWAP1
0x43d DUP2
0x43e ADD
0x43f PUSH1 0x40
0x441 MSTORE
0x442 PUSH2 0xc350
0x445 DUP2
---
0x434: JUMPDEST 
0x435: V368 = 0x186a00
0x439: V369 = 0x40
0x43b: V370 = M[0x40]
0x43e: V371 = ADD V370 0x186a00
0x43f: V372 = 0x40
0x441: M[0x40] = V371
0x442: V373 = 0xc350
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x2a0, 0x2a8}]
Stack pops: 0
Stack additions: [V370, 0xc350, V370]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x2a0, 0x2a8}, V370, 0xc350, V370]

================================

Block 0x446
[0x446:0x459]
---
Predecessors: [0x434, 0x446]
Successors: [0x446, 0x45a]
---
0x446 JUMPDEST
0x447 PUSH1 0x0
0x449 DUP2
0x44a MSTORE
0x44b PUSH1 0x0
0x44d NOT
0x44e SWAP1
0x44f SWAP2
0x450 ADD
0x451 SWAP1
0x452 PUSH1 0x20
0x454 ADD
0x455 DUP2
0x456 PUSH2 0x446
0x459 JUMPI
---
0x446: JUMPDEST 
0x447: V374 = 0x0
0x44a: M[S0] = 0x0
0x44b: V375 = 0x0
0x44d: V376 = NOT 0x0
0x450: V377 = ADD S1 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x452: V378 = 0x20
0x454: V379 = ADD 0x20 S0
0x456: V380 = 0x446
0x459: JUMPI 0x446 V377
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2a0, 0x2a8}, V370, S1, S0]
Stack pops: 2
Stack additions: [V377, V379]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2a0, 0x2a8}, V370, V377, V379]

================================

Block 0x45a
[0x45a:0x45e]
---
Predecessors: [0x446]
Successors: [0x2a0, 0x2a8]
---
0x45a SWAP1
0x45b POP
0x45c POP
0x45d SWAP1
0x45e JUMP
---
0x45e: JUMP {0x2a0, 0x2a8}
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2a0, 0x2a8}, V370, V377, V379]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V370]

================================

Block 0x45f
[0x45f:0x48a]
---
Predecessors: []
Successors: []
---
0x45f STOP
0x460 LOG1
0x461 PUSH6 0x627a7a723058
0x468 SHA3
0x469 OR
0x46a PUSH30 0x5b2b4adb269813a49e492ce738cfb07969278b44cbfddb7e9e9a4d3298d4
0x489 STOP
0x48a MISSING 0x29
---
0x45f: STOP 
0x460: LOG S0 S1 S2
0x461: V381 = 0x627a7a723058
0x468: V382 = SHA3 0x627a7a723058 S3
0x469: V383 = OR V382 S4
0x46a: V384 = 0x5b2b4adb269813a49e492ce738cfb07969278b44cbfddb7e9e9a4d3298d4
0x489: STOP 
0x48a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5b2b4adb269813a49e492ce738cfb07969278b44cbfddb7e9e9a4d3298d4, V383]
Exit stack: []

================================

Function 0:
Public function signature: 0x481c6a75
Entry block: 0x79
Exit block: 0x8c
Body: 0x79, 0x80, 0x84, 0x8c, 0x1d4

Function 1:
Public function signature: 0x5b980628
Entry block: 0xa8
Exit block: 0x77
Body: 0x77, 0xa8, 0xaf, 0xb3, 0x1e4, 0x200, 0x214, 0x21b, 0x21f, 0x258, 0x25c

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xbb
Exit block: 0x8c
Body: 0x8c, 0xbb, 0xc2, 0xc6, 0x25f

Function 3:
Public function signature: 0x8da7f232
Entry block: 0xce
Exit block: 0xe4
Body: 0xce, 0xd5, 0xd9, 0xe4, 0x26f, 0x27d, 0x27e

Function 4:
Public function signature: 0xcc79eaf0
Entry block: 0xfa
Exit block: 0x13d
Body: 0xfa, 0x101, 0x105, 0x116, 0x125, 0x12e, 0x13d, 0x298, 0x2a0

Function 5:
Public function signature: 0xfeee8139
Entry block: 0x150
Exit block: 0x3d5
Body: 0x77, 0x150, 0x32f, 0x33c, 0x340, 0x353, 0x367, 0x36e, 0x372, 0x37c, 0x380, 0x384, 0x391, 0x39e, 0x39f, 0x3b9, 0x3ba, 0x3d5, 0x3d6, 0x403

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x434
Exit block: 0x45a
Body: 0x434, 0x446, 0x45a

