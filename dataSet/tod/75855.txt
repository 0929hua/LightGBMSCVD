Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x93]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x93
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x93
0xa: JUMPI 0x93 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x95]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x97c1e25
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x95
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x97c1e25
0x20: V14 = EQ V12 0x97c1e25
0x21: V15 = 0x95
0x24: JUMPI 0x95 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xa7]
---
0x25 DUP1
0x26 PUSH4 0xc36add8
0x2b EQ
0x2c PUSH2 0xa7
0x2f JUMPI
---
0x26: V16 = 0xc36add8
0x2b: V17 = EQ 0xc36add8 V12
0x2c: V18 = 0xa7
0x2f: JUMPI 0xa7 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xd3]
---
0x30 DUP1
0x31 PUSH4 0x1b15982a
0x36 EQ
0x37 PUSH2 0xd3
0x3a JUMPI
---
0x31: V19 = 0x1b15982a
0x36: V20 = EQ 0x1b15982a V12
0x37: V21 = 0xd3
0x3a: JUMPI 0xd3 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe9]
---
0x3b DUP1
0x3c PUSH4 0x26b85ee1
0x41 EQ
0x42 PUSH2 0xe9
0x45 JUMPI
---
0x3c: V22 = 0x26b85ee1
0x41: V23 = EQ 0x26b85ee1 V12
0x42: V24 = 0xe9
0x45: JUMPI 0xe9 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x115]
---
0x46 DUP1
0x47 PUSH4 0x6b3fc293
0x4c EQ
0x4d PUSH2 0x115
0x50 JUMPI
---
0x47: V25 = 0x6b3fc293
0x4c: V26 = EQ 0x6b3fc293 V12
0x4d: V27 = 0x115
0x50: JUMPI 0x115 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x144]
---
0x51 DUP1
0x52 PUSH4 0xb2a20cf0
0x57 EQ
0x58 PUSH2 0x144
0x5b JUMPI
---
0x52: V28 = 0xb2a20cf0
0x57: V29 = EQ 0xb2a20cf0 V12
0x58: V30 = 0x144
0x5b: JUMPI 0x144 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x162]
---
0x5c DUP1
0x5d PUSH4 0xba45b0b8
0x62 EQ
0x63 PUSH2 0x162
0x66 JUMPI
---
0x5d: V31 = 0xba45b0b8
0x62: V32 = EQ 0xba45b0b8 V12
0x63: V33 = 0x162
0x66: JUMPI 0x162 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x186]
---
0x67 DUP1
0x68 PUSH4 0xc2fc74b4
0x6d EQ
0x6e PUSH2 0x186
0x71 JUMPI
---
0x68: V34 = 0xc2fc74b4
0x6d: V35 = EQ 0xc2fc74b4 V12
0x6e: V36 = 0x186
0x71: JUMPI 0x186 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1b2]
---
0x72 DUP1
0x73 PUSH4 0xc77911aa
0x78 EQ
0x79 PUSH2 0x1b2
0x7c JUMPI
---
0x73: V37 = 0xc77911aa
0x78: V38 = EQ 0xc77911aa V12
0x79: V39 = 0x1b2
0x7c: JUMPI 0x1b2 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1e2]
---
0x7d DUP1
0x7e PUSH4 0xc8db233e
0x83 EQ
0x84 PUSH2 0x1e2
0x87 JUMPI
---
0x7e: V40 = 0xc8db233e
0x83: V41 = EQ 0xc8db233e V12
0x84: V42 = 0x1e2
0x87: JUMPI 0x1e2 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x200]
---
0x88 DUP1
0x89 PUSH4 0xf52c85fd
0x8e EQ
0x8f PUSH2 0x200
0x92 JUMPI
---
0x89: V43 = 0xf52c85fd
0x8e: V44 = EQ 0xf52c85fd V12
0x8f: V45 = 0x200
0x92: JUMPI 0x200 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x94]
---
Predecessors: [0x0, 0x88]
Successors: []
---
0x93 JUMPDEST
0x94 INVALID
---
0x93: JUMPDEST 
0x94: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95
[0x95:0x9b]
---
Predecessors: [0xb]
Successors: [0x9c, 0x9d]
---
0x95 JUMPDEST
0x96 CALLVALUE
0x97 ISZERO
0x98 PUSH2 0x9d
0x9b JUMPI
---
0x95: JUMPDEST 
0x96: V46 = CALLVALUE
0x97: V47 = ISZERO V46
0x98: V48 = 0x9d
0x9b: JUMPI 0x9d V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0x9c]
---
Predecessors: [0x95]
Successors: []
---
0x9c INVALID
---
0x9c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x95]
Successors: [0x22c]
---
0x9d JUMPDEST
0x9e PUSH2 0xa5
0xa1 PUSH2 0x22c
0xa4 JUMP
---
0x9d: JUMPDEST 
0x9e: V49 = 0xa5
0xa1: V50 = 0x22c
0xa4: JUMP 0x22c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V12, 0xa5]

================================

Block 0xa5
[0xa5:0xa6]
---
Predecessors: [0x285, 0x4a4, 0x7d8, 0x890]
Successors: []
---
0xa5 JUMPDEST
0xa6 STOP
---
0xa5: JUMPDEST 
0xa6: STOP 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S0]

================================

Block 0xa7
[0xa7:0xd0]
---
Predecessors: [0x25]
Successors: [0x258]
---
0xa7 JUMPDEST
0xa8 PUSH2 0xa5
0xab PUSH1 0x4
0xad CALLDATALOAD
0xae PUSH1 0x24
0xb0 CALLDATALOAD
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 PUSH1 0x44
0xbb CALLDATALOAD
0xbc DUP2
0xbd AND
0xbe SWAP1
0xbf PUSH1 0x64
0xc1 CALLDATALOAD
0xc2 DUP2
0xc3 AND
0xc4 SWAP1
0xc5 PUSH1 0x84
0xc7 CALLDATALOAD
0xc8 SWAP1
0xc9 PUSH1 0xa4
0xcb CALLDATALOAD
0xcc AND
0xcd PUSH2 0x258
0xd0 JUMP
---
0xa7: JUMPDEST 
0xa8: V51 = 0xa5
0xab: V52 = 0x4
0xad: V53 = CALLDATALOAD 0x4
0xae: V54 = 0x24
0xb0: V55 = CALLDATALOAD 0x24
0xb1: V56 = 0x1
0xb3: V57 = 0xa0
0xb5: V58 = 0x2
0xb7: V59 = EXP 0x2 0xa0
0xb8: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V61 = 0x44
0xbb: V62 = CALLDATALOAD 0x44
0xbd: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xbf: V64 = 0x64
0xc1: V65 = CALLDATALOAD 0x64
0xc3: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xc5: V67 = 0x84
0xc7: V68 = CALLDATALOAD 0x84
0xc9: V69 = 0xa4
0xcb: V70 = CALLDATALOAD 0xa4
0xcc: V71 = AND V70 0xffffffffffffffffffffffffffffffffffffffff
0xcd: V72 = 0x258
0xd0: JUMP 0x258
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V53, V55, V63, V66, V68, V71]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, V71]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: []
Successors: []
---
0xd1 JUMPDEST
0xd2 STOP
---
0xd1: JUMPDEST 
0xd2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd3
[0xd3:0xe6]
---
Predecessors: [0x30]
Successors: [0x28d]
---
0xd3 JUMPDEST
0xd4 PUSH2 0xa5
0xd7 PUSH1 0x1
0xd9 PUSH1 0xa0
0xdb PUSH1 0x2
0xdd EXP
0xde SUB
0xdf PUSH1 0x4
0xe1 CALLDATALOAD
0xe2 AND
0xe3 PUSH2 0x28d
0xe6 JUMP
---
0xd3: JUMPDEST 
0xd4: V73 = 0xa5
0xd7: V74 = 0x1
0xd9: V75 = 0xa0
0xdb: V76 = 0x2
0xdd: V77 = EXP 0x2 0xa0
0xde: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V79 = 0x4
0xe1: V80 = CALLDATALOAD 0x4
0xe2: V81 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V82 = 0x28d
0xe6: JUMP 0x28d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V81]
Exit stack: [V12, 0xa5, V81]

================================

Block 0xe7
[0xe7:0xe8]
---
Predecessors: []
Successors: []
---
0xe7 JUMPDEST
0xe8 STOP
---
0xe7: JUMPDEST 
0xe8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe9
[0xe9:0xef]
---
Predecessors: [0x3b]
Successors: [0xf0, 0xf1]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb ISZERO
0xec PUSH2 0xf1
0xef JUMPI
---
0xe9: JUMPDEST 
0xea: V83 = CALLVALUE
0xeb: V84 = ISZERO V83
0xec: V85 = 0xf1
0xef: JUMPI 0xf1 V84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf0
[0xf0:0xf0]
---
Predecessors: [0xe9]
Successors: []
---
0xf0 INVALID
---
0xf0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0xe9]
Successors: [0x4a8]
---
0xf1 JUMPDEST
0xf2 PUSH2 0xf9
0xf5 PUSH2 0x4a8
0xf8 JUMP
---
0xf1: JUMPDEST 
0xf2: V86 = 0xf9
0xf5: V87 = 0x4a8
0xf8: JUMP 0x4a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf9]
Exit stack: [V12, 0xf9]

================================

Block 0xf9
[0xf9:0x114]
---
Predecessors: [0x4a8, 0xa4a, 0xc88]
Successors: []
---
0xf9 JUMPDEST
0xfa PUSH1 0x40
0xfc DUP1
0xfd MLOAD
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 SWAP3
0x108 AND
0x109 DUP3
0x10a MSTORE
0x10b MLOAD
0x10c SWAP1
0x10d DUP2
0x10e SWAP1
0x10f SUB
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP1
0x114 RETURN
---
0xf9: JUMPDEST 
0xfa: V88 = 0x40
0xfd: V89 = M[0x40]
0xfe: V90 = 0x1
0x100: V91 = 0xa0
0x102: V92 = 0x2
0x104: V93 = EXP 0x2 0xa0
0x105: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V95 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10a: M[V89] = V95
0x10b: V96 = M[0x40]
0x10f: V97 = SUB V89 V96
0x110: V98 = 0x20
0x112: V99 = ADD 0x20 V97
0x114: RETURN V96 V99
---
Entry stack: [V12, 0xf9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf9]

================================

Block 0x115
[0x115:0x141]
---
Predecessors: [0x46]
Successors: [0x4b7]
---
0x115 JUMPDEST
0x116 PUSH2 0xa5
0x119 PUSH1 0x4
0x11b CALLDATALOAD
0x11c PUSH1 0x24
0x11e CALLDATALOAD
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 PUSH1 0x44
0x129 CALLDATALOAD
0x12a DUP2
0x12b AND
0x12c SWAP1
0x12d PUSH1 0x64
0x12f CALLDATALOAD
0x130 DUP2
0x131 AND
0x132 SWAP1
0x133 PUSH1 0x84
0x135 CALLDATALOAD
0x136 SWAP1
0x137 PUSH1 0xa4
0x139 CALLDATALOAD
0x13a AND
0x13b PUSH1 0xc4
0x13d CALLDATALOAD
0x13e PUSH2 0x4b7
0x141 JUMP
---
0x115: JUMPDEST 
0x116: V100 = 0xa5
0x119: V101 = 0x4
0x11b: V102 = CALLDATALOAD 0x4
0x11c: V103 = 0x24
0x11e: V104 = CALLDATALOAD 0x24
0x11f: V105 = 0x1
0x121: V106 = 0xa0
0x123: V107 = 0x2
0x125: V108 = EXP 0x2 0xa0
0x126: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V110 = 0x44
0x129: V111 = CALLDATALOAD 0x44
0x12b: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x12d: V113 = 0x64
0x12f: V114 = CALLDATALOAD 0x64
0x131: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x133: V116 = 0x84
0x135: V117 = CALLDATALOAD 0x84
0x137: V118 = 0xa4
0x139: V119 = CALLDATALOAD 0xa4
0x13a: V120 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V121 = 0xc4
0x13d: V122 = CALLDATALOAD 0xc4
0x13e: V123 = 0x4b7
0x141: JUMP 0x4b7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V102, V104, V112, V115, V117, V120, V122]
Exit stack: [V12, 0xa5, V102, V104, V112, V115, V117, V120, V122]

================================

Block 0x142
[0x142:0x143]
---
Predecessors: []
Successors: []
---
0x142 JUMPDEST
0x143 STOP
---
0x142: JUMPDEST 
0x143: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x144
[0x144:0x14a]
---
Predecessors: [0x51]
Successors: [0x14b, 0x14c]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 ISZERO
0x147 PUSH2 0x14c
0x14a JUMPI
---
0x144: JUMPDEST 
0x145: V124 = CALLVALUE
0x146: V125 = ISZERO V124
0x147: V126 = 0x14c
0x14a: JUMPI 0x14c V125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14b
[0x14b:0x14b]
---
Predecessors: [0x144]
Successors: []
---
0x14b INVALID
---
0x14b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14c
[0x14c:0x15f]
---
Predecessors: [0x144]
Successors: [0x7e3]
---
0x14c JUMPDEST
0x14d PUSH2 0xa5
0x150 PUSH1 0x1
0x152 PUSH1 0xa0
0x154 PUSH1 0x2
0x156 EXP
0x157 SUB
0x158 PUSH1 0x4
0x15a CALLDATALOAD
0x15b AND
0x15c PUSH2 0x7e3
0x15f JUMP
---
0x14c: JUMPDEST 
0x14d: V127 = 0xa5
0x150: V128 = 0x1
0x152: V129 = 0xa0
0x154: V130 = 0x2
0x156: V131 = EXP 0x2 0xa0
0x157: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x158: V133 = 0x4
0x15a: V134 = CALLDATALOAD 0x4
0x15b: V135 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V136 = 0x7e3
0x15f: JUMP 0x7e3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V135]
Exit stack: [V12, 0xa5, V135]

================================

Block 0x160
[0x160:0x161]
---
Predecessors: []
Successors: []
---
0x160 JUMPDEST
0x161 STOP
---
0x160: JUMPDEST 
0x161: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x162
[0x162:0x168]
---
Predecessors: [0x5c]
Successors: [0x169, 0x16a]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x16a
0x168 JUMPI
---
0x162: JUMPDEST 
0x163: V137 = CALLVALUE
0x164: V138 = ISZERO V137
0x165: V139 = 0x16a
0x168: JUMPI 0x16a V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x169
[0x169:0x169]
---
Predecessors: [0x162]
Successors: []
---
0x169 INVALID
---
0x169: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x183]
---
Predecessors: [0x162]
Successors: [0x894]
---
0x16a JUMPDEST
0x16b PUSH2 0xa5
0x16e PUSH1 0x1
0x170 PUSH1 0xa0
0x172 PUSH1 0x2
0x174 EXP
0x175 SUB
0x176 PUSH1 0x4
0x178 CALLDATALOAD
0x179 DUP2
0x17a AND
0x17b SWAP1
0x17c PUSH1 0x24
0x17e CALLDATALOAD
0x17f AND
0x180 PUSH2 0x894
0x183 JUMP
---
0x16a: JUMPDEST 
0x16b: V140 = 0xa5
0x16e: V141 = 0x1
0x170: V142 = 0xa0
0x172: V143 = 0x2
0x174: V144 = EXP 0x2 0xa0
0x175: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V146 = 0x4
0x178: V147 = CALLDATALOAD 0x4
0x17a: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x17c: V149 = 0x24
0x17e: V150 = CALLDATALOAD 0x24
0x17f: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x180: V152 = 0x894
0x183: JUMP 0x894
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V148, V151]
Exit stack: [V12, 0xa5, V148, V151]

================================

Block 0x184
[0x184:0x185]
---
Predecessors: []
Successors: []
---
0x184 JUMPDEST
0x185 STOP
---
0x184: JUMPDEST 
0x185: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x67]
Successors: [0x18d, 0x18e]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x18e
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V153 = CALLVALUE
0x188: V154 = ISZERO V153
0x189: V155 = 0x18e
0x18c: JUMPI 0x18e V154
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18d
[0x18d:0x18d]
---
Predecessors: [0x186]
Successors: []
---
0x18d INVALID
---
0x18d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18e
[0x18e:0x195]
---
Predecessors: [0x186]
Successors: [0xa4a]
---
0x18e JUMPDEST
0x18f PUSH2 0xf9
0x192 PUSH2 0xa4a
0x195 JUMP
---
0x18e: JUMPDEST 
0x18f: V156 = 0xf9
0x192: V157 = 0xa4a
0x195: JUMP 0xa4a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf9]
Exit stack: [V12, 0xf9]

================================

Block 0x196
[0x196:0x1b1]
---
Predecessors: []
Successors: []
---
0x196 JUMPDEST
0x197 PUSH1 0x40
0x199 DUP1
0x19a MLOAD
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 SWAP1
0x1a4 SWAP3
0x1a5 AND
0x1a6 DUP3
0x1a7 MSTORE
0x1a8 MLOAD
0x1a9 SWAP1
0x1aa DUP2
0x1ab SWAP1
0x1ac SUB
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP1
0x1b1 RETURN
---
0x196: JUMPDEST 
0x197: V158 = 0x40
0x19a: V159 = M[0x40]
0x19b: V160 = 0x1
0x19d: V161 = 0xa0
0x19f: V162 = 0x2
0x1a1: V163 = EXP 0x2 0xa0
0x1a2: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a5: V165 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: M[V159] = V165
0x1a8: V166 = M[0x40]
0x1ac: V167 = SUB V159 V166
0x1ad: V168 = 0x20
0x1af: V169 = ADD 0x20 V167
0x1b1: RETURN V166 V169
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b2
[0x1b2:0x1b8]
---
Predecessors: [0x72]
Successors: [0x1b9, 0x1ba]
---
0x1b2 JUMPDEST
0x1b3 CALLVALUE
0x1b4 ISZERO
0x1b5 PUSH2 0x1ba
0x1b8 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V170 = CALLVALUE
0x1b4: V171 = ISZERO V170
0x1b5: V172 = 0x1ba
0x1b8: JUMPI 0x1ba V171
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b9
[0x1b9:0x1b9]
---
Predecessors: [0x1b2]
Successors: []
---
0x1b9 INVALID
---
0x1b9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ba
[0x1ba:0x1cd]
---
Predecessors: [0x1b2]
Successors: [0xa59]
---
0x1ba JUMPDEST
0x1bb PUSH2 0x1ce
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 PUSH1 0x4
0x1c8 CALLDATALOAD
0x1c9 AND
0x1ca PUSH2 0xa59
0x1cd JUMP
---
0x1ba: JUMPDEST 
0x1bb: V173 = 0x1ce
0x1be: V174 = 0x1
0x1c0: V175 = 0xa0
0x1c2: V176 = 0x2
0x1c4: V177 = EXP 0x2 0xa0
0x1c5: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V179 = 0x4
0x1c8: V180 = CALLDATALOAD 0x4
0x1c9: V181 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V182 = 0xa59
0x1cd: JUMP 0xa59
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ce, V181]
Exit stack: [V12, 0x1ce, V181]

================================

Block 0x1ce
[0x1ce:0x1e1]
---
Predecessors: [0xa59]
Successors: []
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 DUP1
0x1d2 MLOAD
0x1d3 SWAP2
0x1d4 ISZERO
0x1d5 ISZERO
0x1d6 DUP3
0x1d7 MSTORE
0x1d8 MLOAD
0x1d9 SWAP1
0x1da DUP2
0x1db SWAP1
0x1dc SUB
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP1
0x1e1 RETURN
---
0x1ce: JUMPDEST 
0x1cf: V183 = 0x40
0x1d2: V184 = M[0x40]
0x1d4: V185 = ISZERO V983
0x1d5: V186 = ISZERO V185
0x1d7: M[V184] = V186
0x1d8: V187 = M[0x40]
0x1dc: V188 = SUB V184 V187
0x1dd: V189 = 0x20
0x1df: V190 = ADD 0x20 V188
0x1e1: RETURN V187 V190
---
Entry stack: [V12, 0x1ce, V983]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1ce]

================================

Block 0x1e2
[0x1e2:0x1e8]
---
Predecessors: [0x7d]
Successors: [0x1e9, 0x1ea]
---
0x1e2 JUMPDEST
0x1e3 CALLVALUE
0x1e4 ISZERO
0x1e5 PUSH2 0x1ea
0x1e8 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V191 = CALLVALUE
0x1e4: V192 = ISZERO V191
0x1e5: V193 = 0x1ea
0x1e8: JUMPI 0x1ea V192
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e9
[0x1e9:0x1e9]
---
Predecessors: [0x1e2]
Successors: []
---
0x1e9 INVALID
---
0x1e9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ea
[0x1ea:0x1fd]
---
Predecessors: [0x1e2]
Successors: [0xa6e]
---
0x1ea JUMPDEST
0x1eb PUSH2 0xa5
0x1ee PUSH1 0x1
0x1f0 PUSH1 0xa0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SUB
0x1f6 PUSH1 0x4
0x1f8 CALLDATALOAD
0x1f9 AND
0x1fa PUSH2 0xa6e
0x1fd JUMP
---
0x1ea: JUMPDEST 
0x1eb: V194 = 0xa5
0x1ee: V195 = 0x1
0x1f0: V196 = 0xa0
0x1f2: V197 = 0x2
0x1f4: V198 = EXP 0x2 0xa0
0x1f5: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f6: V200 = 0x4
0x1f8: V201 = CALLDATALOAD 0x4
0x1f9: V202 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V203 = 0xa6e
0x1fd: JUMP 0xa6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V202]
Exit stack: [V12, 0xa5, V202]

================================

Block 0x1fe
[0x1fe:0x1ff]
---
Predecessors: []
Successors: []
---
0x1fe JUMPDEST
0x1ff STOP
---
0x1fe: JUMPDEST 
0x1ff: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x200
[0x200:0x206]
---
Predecessors: [0x88]
Successors: [0x207, 0x208]
---
0x200 JUMPDEST
0x201 CALLVALUE
0x202 ISZERO
0x203 PUSH2 0x208
0x206 JUMPI
---
0x200: JUMPDEST 
0x201: V204 = CALLVALUE
0x202: V205 = ISZERO V204
0x203: V206 = 0x208
0x206: JUMPI 0x208 V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x207
[0x207:0x207]
---
Predecessors: [0x200]
Successors: []
---
0x207 INVALID
---
0x207: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x200]
Successors: [0xc88]
---
0x208 JUMPDEST
0x209 PUSH2 0xf9
0x20c PUSH2 0xc88
0x20f JUMP
---
0x208: JUMPDEST 
0x209: V207 = 0xf9
0x20c: V208 = 0xc88
0x20f: JUMP 0xc88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf9]
Exit stack: [V12, 0xf9]

================================

Block 0x210
[0x210:0x22b]
---
Predecessors: []
Successors: []
---
0x210 JUMPDEST
0x211 PUSH1 0x40
0x213 DUP1
0x214 MLOAD
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d SWAP1
0x21e SWAP3
0x21f AND
0x220 DUP3
0x221 MSTORE
0x222 MLOAD
0x223 SWAP1
0x224 DUP2
0x225 SWAP1
0x226 SUB
0x227 PUSH1 0x20
0x229 ADD
0x22a SWAP1
0x22b RETURN
---
0x210: JUMPDEST 
0x211: V209 = 0x40
0x214: V210 = M[0x40]
0x215: V211 = 0x1
0x217: V212 = 0xa0
0x219: V213 = 0x2
0x21b: V214 = EXP 0x2 0xa0
0x21c: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V216 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x221: M[V210] = V216
0x222: V217 = M[0x40]
0x226: V218 = SUB V210 V217
0x227: V219 = 0x20
0x229: V220 = ADD 0x20 V218
0x22b: RETURN V217 V220
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22c
[0x22c:0x242]
---
Predecessors: [0x9d]
Successors: [0x243, 0x248]
---
0x22c JUMPDEST
0x22d PUSH1 0x3
0x22f SLOAD
0x230 CALLER
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 SWAP1
0x23a DUP2
0x23b AND
0x23c SWAP2
0x23d AND
0x23e EQ
0x23f PUSH2 0x248
0x242 JUMPI
---
0x22c: JUMPDEST 
0x22d: V221 = 0x3
0x22f: V222 = S[0x3]
0x230: V223 = CALLER
0x231: V224 = 0x1
0x233: V225 = 0xa0
0x235: V226 = 0x2
0x237: V227 = EXP 0x2 0xa0
0x238: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x23d: V230 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V231 = EQ V230 V229
0x23f: V232 = 0x248
0x242: JUMPI 0x248 V231
---
Entry stack: [V12, 0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0x243
[0x243:0x247]
---
Predecessors: [0x22c]
Successors: []
---
0x243 PUSH1 0x0
0x245 PUSH1 0x0
0x247 REVERT
---
0x243: V233 = 0x0
0x245: V234 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0x248
[0x248:0x255]
---
Predecessors: [0x22c]
Successors: []
---
0x248 JUMPDEST
0x249 PUSH1 0x3
0x24b SLOAD
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 AND
0x255 SELFDESTRUCT
---
0x248: JUMPDEST 
0x249: V235 = 0x3
0x24b: V236 = S[0x3]
0x24c: V237 = 0x1
0x24e: V238 = 0xa0
0x250: V239 = 0x2
0x252: V240 = EXP 0x2 0xa0
0x253: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x255: SELFDESTRUCT V242
---
Entry stack: [V12, 0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0x256
[0x256:0x257]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x256 JUMPDEST
0x257 JUMP
---
0x256: JUMPDEST 
0x257: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x258
[0x258:0x26e]
---
Predecessors: [0xa7]
Successors: [0x26f, 0x274]
---
0x258 JUMPDEST
0x259 PUSH1 0x1
0x25b SLOAD
0x25c CALLER
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 SWAP1
0x266 DUP2
0x267 AND
0x268 SWAP2
0x269 AND
0x26a EQ
0x26b PUSH2 0x274
0x26e JUMPI
---
0x258: JUMPDEST 
0x259: V243 = 0x1
0x25b: V244 = S[0x1]
0x25c: V245 = CALLER
0x25d: V246 = 0x1
0x25f: V247 = 0xa0
0x261: V248 = 0x2
0x263: V249 = EXP 0x2 0xa0
0x264: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x269: V252 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V253 = EQ V252 V251
0x26b: V254 = 0x274
0x26e: JUMPI 0x274 V253
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, V71]

================================

Block 0x26f
[0x26f:0x273]
---
Predecessors: [0x258]
Successors: []
---
0x26f PUSH1 0x0
0x271 PUSH1 0x0
0x273 REVERT
---
0x26f: V255 = 0x0
0x271: V256 = 0x0
0x273: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, V71]

================================

Block 0x274
[0x274:0x283]
---
Predecessors: [0x258]
Successors: [0x4b7]
---
0x274 JUMPDEST
0x275 PUSH2 0x284
0x278 DUP7
0x279 DUP7
0x27a DUP7
0x27b DUP7
0x27c DUP7
0x27d DUP7
0x27e PUSH1 0x1
0x280 PUSH2 0x4b7
0x283 JUMP
---
0x274: JUMPDEST 
0x275: V257 = 0x284
0x27e: V258 = 0x1
0x280: V259 = 0x4b7
0x283: JUMP 0x4b7
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, V71]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x284, S5, S4, S3, S2, S1, S0, 0x1]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, V71, 0x284, V53, V55, V63, V66, V68, V71, 0x1]

================================

Block 0x284
[0x284:0x284]
---
Predecessors: [0x7d8, 0xa33]
Successors: [0x285]
---
0x284 JUMPDEST
---
0x284: JUMPDEST 
---
Entry stack: [V12, 0xa5, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, S5, S4, S3, S2, S1, S0]

================================

Block 0x285
[0x285:0x28c]
---
Predecessors: [0x284]
Successors: [0xa5]
---
0x285 JUMPDEST
0x286 POP
0x287 POP
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c JUMP
---
0x285: JUMPDEST 
0x28c: JUMP 0xa5
---
Entry stack: [V12, 0xa5, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12]

================================

Block 0x28d
[0x28d:0x2af]
---
Predecessors: [0xd3]
Successors: [0x2b0, 0x2b5]
---
0x28d JUMPDEST
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 DUP2
0x297 AND
0x298 PUSH1 0x0
0x29a SWAP1
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x20
0x29f DUP2
0x2a0 SWAP1
0x2a1 MSTORE
0x2a2 PUSH1 0x40
0x2a4 DUP2
0x2a5 SHA3
0x2a6 SLOAD
0x2a7 PUSH1 0xff
0x2a9 AND
0x2aa ISZERO
0x2ab ISZERO
0x2ac PUSH2 0x2b5
0x2af JUMPI
---
0x28d: JUMPDEST 
0x28e: V260 = 0x1
0x290: V261 = 0xa0
0x292: V262 = 0x2
0x294: V263 = EXP 0x2 0xa0
0x295: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V265 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x298: V266 = 0x0
0x29c: M[0x0] = V265
0x29d: V267 = 0x20
0x2a1: M[0x20] = 0x0
0x2a2: V268 = 0x40
0x2a5: V269 = SHA3 0x0 0x40
0x2a6: V270 = S[V269]
0x2a7: V271 = 0xff
0x2a9: V272 = AND 0xff V270
0x2aa: V273 = ISZERO V272
0x2ab: V274 = ISZERO V273
0x2ac: V275 = 0x2b5
0x2af: JUMPI 0x2b5 V274
---
Entry stack: [V12, 0xa5, V81]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0xa5, V81, 0x0]

================================

Block 0x2b0
[0x2b0:0x2b4]
---
Predecessors: [0x28d]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 PUSH1 0x0
0x2b4 REVERT
---
0x2b0: V276 = 0x0
0x2b2: V277 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V81, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V81, 0x0]

================================

Block 0x2b5
[0x2b5:0x326]
---
Predecessors: [0x28d]
Successors: [0x327, 0x328]
---
0x2b5 JUMPDEST
0x2b6 POP
0x2b7 PUSH1 0x1
0x2b9 PUSH1 0xa0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be SUB
0x2bf DUP1
0x2c0 DUP3
0x2c1 AND
0x2c2 PUSH1 0x0
0x2c4 DUP2
0x2c5 DUP2
0x2c6 MSTORE
0x2c7 PUSH1 0x20
0x2c9 DUP2
0x2ca SWAP1
0x2cb MSTORE
0x2cc PUSH1 0x40
0x2ce DUP1
0x2cf DUP3
0x2d0 SHA3
0x2d1 DUP1
0x2d2 SLOAD
0x2d3 PUSH1 0xff
0x2d5 NOT
0x2d6 AND
0x2d7 SWAP1
0x2d8 SSTORE
0x2d9 DUP1
0x2da MLOAD
0x2db PUSH32 0x1b15982a00000000000000000000000000000000000000000000000000000000
0x2fc DUP2
0x2fd MSTORE
0x2fe CALLER
0x2ff SWAP1
0x300 SWAP5
0x301 AND
0x302 PUSH1 0x4
0x304 DUP6
0x305 ADD
0x306 MSTORE
0x307 MLOAD
0x308 DUP5
0x309 SWAP4
0x30a PUSH4 0x1b15982a
0x30f SWAP3
0x310 CALLVALUE
0x311 SWAP3
0x312 PUSH1 0x24
0x314 DUP1
0x315 DUP5
0x316 ADD
0x317 SWAP4
0x318 DUP3
0x319 SWAP1
0x31a SUB
0x31b ADD
0x31c DUP2
0x31d DUP6
0x31e DUP9
0x31f DUP1
0x320 EXTCODESIZE
0x321 ISZERO
0x322 ISZERO
0x323 PUSH2 0x328
0x326 JUMPI
---
0x2b5: JUMPDEST 
0x2b7: V278 = 0x1
0x2b9: V279 = 0xa0
0x2bb: V280 = 0x2
0x2bd: V281 = EXP 0x2 0xa0
0x2be: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c1: V283 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V284 = 0x0
0x2c6: M[0x0] = V283
0x2c7: V285 = 0x20
0x2cb: M[0x20] = 0x0
0x2cc: V286 = 0x40
0x2d0: V287 = SHA3 0x0 0x40
0x2d2: V288 = S[V287]
0x2d3: V289 = 0xff
0x2d5: V290 = NOT 0xff
0x2d6: V291 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V288
0x2d8: S[V287] = V291
0x2da: V292 = M[0x40]
0x2db: V293 = 0x1b15982a00000000000000000000000000000000000000000000000000000000
0x2fd: M[V292] = 0x1b15982a00000000000000000000000000000000000000000000000000000000
0x2fe: V294 = CALLER
0x301: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x302: V296 = 0x4
0x305: V297 = ADD V292 0x4
0x306: M[V297] = V295
0x307: V298 = M[0x40]
0x30a: V299 = 0x1b15982a
0x310: V300 = CALLVALUE
0x312: V301 = 0x24
0x316: V302 = ADD V292 0x24
0x31a: V303 = SUB V292 V298
0x31b: V304 = ADD V303 0x24
0x320: V305 = EXTCODESIZE V283
0x321: V306 = ISZERO V305
0x322: V307 = ISZERO V306
0x323: V308 = 0x328
0x326: JUMPI 0x328 V307
---
Entry stack: [V12, 0xa5, V81, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V283, 0x1b15982a, V300, V302, 0x0, V298, V304, V298, V300, V283]
Exit stack: [V12, 0xa5, V81, V81, V283, 0x1b15982a, V300, V302, 0x0, V298, V304, V298, V300, V283]

================================

Block 0x327
[0x327:0x327]
---
Predecessors: [0x2b5]
Successors: []
---
0x327 INVALID
---
0x327: INVALID 
---
Entry stack: [V12, 0xa5, V81, V81, V283, 0x1b15982a, V300, V302, 0x0, V298, V304, V298, V300, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V81, V81, V283, 0x1b15982a, V300, V302, 0x0, V298, V304, V298, V300, V283]

================================

Block 0x328
[0x328:0x334]
---
Predecessors: [0x2b5]
Successors: [0x335, 0x336]
---
0x328 JUMPDEST
0x329 PUSH2 0x25ee
0x32c GAS
0x32d SUB
0x32e CALL
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x336
0x334 JUMPI
---
0x328: JUMPDEST 
0x329: V309 = 0x25ee
0x32c: V310 = GAS
0x32d: V311 = SUB V310 0x25ee
0x32e: V312 = CALL V311 V283 V300 V298 V304 V298 0x0
0x32f: V313 = ISZERO V312
0x330: V314 = ISZERO V313
0x331: V315 = 0x336
0x334: JUMPI 0x336 V314
---
Entry stack: [V12, 0xa5, V81, V81, V283, 0x1b15982a, V300, V302, 0x0, V298, V304, V298, V300, V283]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V81, V81, V283, 0x1b15982a, V300, V302]

================================

Block 0x335
[0x335:0x335]
---
Predecessors: [0x328]
Successors: []
---
0x335 INVALID
---
0x335: INVALID 
---
Entry stack: [V12, 0xa5, V81, V81, V283, 0x1b15982a, V300, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V81, V81, V283, 0x1b15982a, V300, V302]

================================

Block 0x336
[0x336:0x39f]
---
Predecessors: [0x328]
Successors: [0x3a0, 0x3a1]
---
0x336 JUMPDEST
0x337 POP
0x338 POP
0x339 POP
0x33a POP
0x33b PUSH32 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86
0x35c DUP2
0x35d PUSH1 0x1
0x35f PUSH1 0xa0
0x361 PUSH1 0x2
0x363 EXP
0x364 SUB
0x365 AND
0x366 PUSH4 0x1d143848
0x36b PUSH1 0x0
0x36d PUSH1 0x40
0x36f MLOAD
0x370 PUSH1 0x20
0x372 ADD
0x373 MSTORE
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP2
0x378 PUSH4 0xffffffff
0x37d AND
0x37e PUSH1 0xe0
0x380 PUSH1 0x2
0x382 EXP
0x383 MUL
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x4
0x388 ADD
0x389 DUP1
0x38a SWAP1
0x38b POP
0x38c PUSH1 0x20
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 DUP4
0x393 SUB
0x394 DUP2
0x395 PUSH1 0x0
0x397 DUP8
0x398 DUP1
0x399 EXTCODESIZE
0x39a ISZERO
0x39b ISZERO
0x39c PUSH2 0x3a1
0x39f JUMPI
---
0x336: JUMPDEST 
0x33b: V316 = 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86
0x35d: V317 = 0x1
0x35f: V318 = 0xa0
0x361: V319 = 0x2
0x363: V320 = EXP 0x2 0xa0
0x364: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x365: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x366: V323 = 0x1d143848
0x36b: V324 = 0x0
0x36d: V325 = 0x40
0x36f: V326 = M[0x40]
0x370: V327 = 0x20
0x372: V328 = ADD 0x20 V326
0x373: M[V328] = 0x0
0x374: V329 = 0x40
0x376: V330 = M[0x40]
0x378: V331 = 0xffffffff
0x37d: V332 = AND 0xffffffff 0x1d143848
0x37e: V333 = 0xe0
0x380: V334 = 0x2
0x382: V335 = EXP 0x2 0xe0
0x383: V336 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1d143848
0x385: M[V330] = 0x1d14384800000000000000000000000000000000000000000000000000000000
0x386: V337 = 0x4
0x388: V338 = ADD 0x4 V330
0x38c: V339 = 0x20
0x38e: V340 = 0x40
0x390: V341 = M[0x40]
0x393: V342 = SUB V338 V341
0x395: V343 = 0x0
0x399: V344 = EXTCODESIZE V322
0x39a: V345 = ISZERO V344
0x39b: V346 = ISZERO V345
0x39c: V347 = 0x3a1
0x39f: JUMPI 0x3a1 V346
---
Entry stack: [V12, 0xa5, V81, V81, V283, 0x1b15982a, V300, V302]
Stack pops: 5
Stack additions: [S4, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86, V322, 0x1d143848, V338, 0x20, V341, V342, V341, 0x0, V322]
Exit stack: [V12, 0xa5, V81, V81, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86, V322, 0x1d143848, V338, 0x20, V341, V342, V341, 0x0, V322]

================================

Block 0x3a0
[0x3a0:0x3a0]
---
Predecessors: [0x336]
Successors: []
---
0x3a0 INVALID
---
0x3a0: INVALID 
---
Entry stack: [V12, 0xa5, V81, V81, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86, V322, 0x1d143848, V338, 0x20, V341, V342, V341, 0x0, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V81, V81, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86, V322, 0x1d143848, V338, 0x20, V341, V342, V341, 0x0, V322]

================================

Block 0x3a1
[0x3a1:0x3ad]
---
Predecessors: [0x336, 0xb17]
Successors: [0x3ae, 0x3af]
---
0x3a1 JUMPDEST
0x3a2 PUSH2 0x2c6
0x3a5 GAS
0x3a6 SUB
0x3a7 CALL
0x3a8 ISZERO
0x3a9 ISZERO
0x3aa PUSH2 0x3af
0x3ad JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V348 = 0x2c6
0x3a5: V349 = GAS
0x3a6: V350 = SUB V349 0x2c6
0x3a7: V351 = CALL V350 S0 0x0 S2 S3 S4 0x20
0x3a8: V352 = ISZERO V351
0x3a9: V353 = ISZERO V352
0x3aa: V354 = 0x3af
0x3ad: JUMPI 0x3af V353
---
Entry stack: [V12, 0xa5, S11, S10, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S8, 0x1d143848, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, S11, S10, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S8, 0x1d143848, S6]

================================

Block 0x3ae
[0x3ae:0x3ae]
---
Predecessors: [0x3a1]
Successors: []
---
0x3ae INVALID
---
0x3ae: INVALID 
---
Entry stack: [V12, 0xa5, S5, S4, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S2, 0x1d143848, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, S5, S4, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S2, 0x1d143848, S0]

================================

Block 0x3af
[0x3af:0x3fd]
---
Predecessors: [0x3a1, 0xb81]
Successors: [0x3fe, 0x3ff]
---
0x3af JUMPDEST
0x3b0 POP
0x3b1 POP
0x3b2 POP
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 MLOAD
0x3b8 SWAP1
0x3b9 POP
0x3ba DUP3
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 AND
0x3c4 PUSH4 0x8da5cb5b
0x3c9 PUSH1 0x0
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 MSTORE
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP2
0x3d6 PUSH4 0xffffffff
0x3db AND
0x3dc PUSH1 0xe0
0x3de PUSH1 0x2
0x3e0 EXP
0x3e1 MUL
0x3e2 DUP2
0x3e3 MSTORE
0x3e4 PUSH1 0x4
0x3e6 ADD
0x3e7 DUP1
0x3e8 SWAP1
0x3e9 POP
0x3ea PUSH1 0x20
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef DUP1
0x3f0 DUP4
0x3f1 SUB
0x3f2 DUP2
0x3f3 PUSH1 0x0
0x3f5 DUP8
0x3f6 DUP1
0x3f7 EXTCODESIZE
0x3f8 ISZERO
0x3f9 ISZERO
0x3fa PUSH2 0x3ff
0x3fd JUMPI
---
0x3af: JUMPDEST 
0x3b3: V355 = 0x40
0x3b5: V356 = M[0x40]
0x3b7: V357 = M[V356]
0x3bb: V358 = 0x1
0x3bd: V359 = 0xa0
0x3bf: V360 = 0x2
0x3c1: V361 = EXP 0x2 0xa0
0x3c2: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x3c4: V364 = 0x8da5cb5b
0x3c9: V365 = 0x0
0x3cb: V366 = 0x40
0x3cd: V367 = M[0x40]
0x3ce: V368 = 0x20
0x3d0: V369 = ADD 0x20 V367
0x3d1: M[V369] = 0x0
0x3d2: V370 = 0x40
0x3d4: V371 = M[0x40]
0x3d6: V372 = 0xffffffff
0x3db: V373 = AND 0xffffffff 0x8da5cb5b
0x3dc: V374 = 0xe0
0x3de: V375 = 0x2
0x3e0: V376 = EXP 0x2 0xe0
0x3e1: V377 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x3e3: M[V371] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x3e4: V378 = 0x4
0x3e6: V379 = ADD 0x4 V371
0x3ea: V380 = 0x20
0x3ec: V381 = 0x40
0x3ee: V382 = M[0x40]
0x3f1: V383 = SUB V379 V382
0x3f3: V384 = 0x0
0x3f7: V385 = EXTCODESIZE V363
0x3f8: V386 = ISZERO V385
0x3f9: V387 = ISZERO V386
0x3fa: V388 = 0x3ff
0x3fd: JUMPI 0x3ff V387
---
Entry stack: [V12, 0xa5, S5, S4, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S2, 0x1d143848, S0]
Stack pops: 5
Stack additions: [S4, S3, V357, V363, 0x8da5cb5b, V379, 0x20, V382, V383, V382, 0x0, V363]
Exit stack: [V12, 0xa5, S5, S4, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, V357, V363, 0x8da5cb5b, V379, 0x20, V382, V383, V382, 0x0, V363]

================================

Block 0x3fe
[0x3fe:0x3fe]
---
Predecessors: [0x3af]
Successors: []
---
0x3fe INVALID
---
0x3fe: INVALID 
---
Entry stack: [V12, 0xa5, S12, S11, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, V357, V363, 0x8da5cb5b, V379, 0x20, V382, V383, V382, 0x0, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, S12, S11, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, V357, V363, 0x8da5cb5b, V379, 0x20, V382, V383, V382, 0x0, V363]

================================

Block 0x3ff
[0x3ff:0x40b]
---
Predecessors: [0x3af, 0xb8e]
Successors: [0x40c, 0x40d]
---
0x3ff JUMPDEST
0x400 PUSH2 0x2c6
0x403 GAS
0x404 SUB
0x405 CALL
0x406 ISZERO
0x407 ISZERO
0x408 PUSH2 0x40d
0x40b JUMPI
---
0x3ff: JUMPDEST 
0x400: V389 = 0x2c6
0x403: V390 = GAS
0x404: V391 = SUB V390 0x2c6
0x405: V392 = CALL V391 S0 0x0 S2 S3 S4 0x20
0x406: V393 = ISZERO V392
0x407: V394 = ISZERO V393
0x408: V395 = 0x40d
0x40b: JUMPI 0x40d V394
---
Entry stack: [V12, 0xa5, S12, S11, S10, S9, S8, 0x8da5cb5b, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, S12, S11, S10, S9, S8, 0x8da5cb5b, S6]

================================

Block 0x40c
[0x40c:0x40c]
---
Predecessors: [0x3ff]
Successors: []
---
0x40c INVALID
---
0x40c: INVALID 
---
Entry stack: [V12, 0xa5, S6, S5, S4, S3, S2, 0x8da5cb5b, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, S6, S5, S4, S3, S2, 0x8da5cb5b, S0]

================================

Block 0x40d
[0x40d:0x45b]
---
Predecessors: [0x3ff, 0xbde]
Successors: [0x45c, 0x45d]
---
0x40d JUMPDEST
0x40e POP
0x40f POP
0x410 POP
0x411 PUSH1 0x40
0x413 MLOAD
0x414 DUP1
0x415 MLOAD
0x416 SWAP1
0x417 POP
0x418 DUP4
0x419 PUSH1 0x1
0x41b PUSH1 0xa0
0x41d PUSH1 0x2
0x41f EXP
0x420 SUB
0x421 AND
0x422 PUSH4 0x77c93662
0x427 PUSH1 0x0
0x429 PUSH1 0x40
0x42b MLOAD
0x42c PUSH1 0x20
0x42e ADD
0x42f MSTORE
0x430 PUSH1 0x40
0x432 MLOAD
0x433 DUP2
0x434 PUSH4 0xffffffff
0x439 AND
0x43a PUSH1 0xe0
0x43c PUSH1 0x2
0x43e EXP
0x43f MUL
0x440 DUP2
0x441 MSTORE
0x442 PUSH1 0x4
0x444 ADD
0x445 DUP1
0x446 SWAP1
0x447 POP
0x448 PUSH1 0x20
0x44a PUSH1 0x40
0x44c MLOAD
0x44d DUP1
0x44e DUP4
0x44f SUB
0x450 DUP2
0x451 PUSH1 0x0
0x453 DUP8
0x454 DUP1
0x455 EXTCODESIZE
0x456 ISZERO
0x457 ISZERO
0x458 PUSH2 0x45d
0x45b JUMPI
---
0x40d: JUMPDEST 
0x411: V396 = 0x40
0x413: V397 = M[0x40]
0x415: V398 = M[V397]
0x419: V399 = 0x1
0x41b: V400 = 0xa0
0x41d: V401 = 0x2
0x41f: V402 = EXP 0x2 0xa0
0x420: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x421: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x422: V405 = 0x77c93662
0x427: V406 = 0x0
0x429: V407 = 0x40
0x42b: V408 = M[0x40]
0x42c: V409 = 0x20
0x42e: V410 = ADD 0x20 V408
0x42f: M[V410] = 0x0
0x430: V411 = 0x40
0x432: V412 = M[0x40]
0x434: V413 = 0xffffffff
0x439: V414 = AND 0xffffffff 0x77c93662
0x43a: V415 = 0xe0
0x43c: V416 = 0x2
0x43e: V417 = EXP 0x2 0xe0
0x43f: V418 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x77c93662
0x441: M[V412] = 0x77c9366200000000000000000000000000000000000000000000000000000000
0x442: V419 = 0x4
0x444: V420 = ADD 0x4 V412
0x448: V421 = 0x20
0x44a: V422 = 0x40
0x44c: V423 = M[0x40]
0x44f: V424 = SUB V420 V423
0x451: V425 = 0x0
0x455: V426 = EXTCODESIZE V404
0x456: V427 = ISZERO V426
0x457: V428 = ISZERO V427
0x458: V429 = 0x45d
0x45b: JUMPI 0x45d V428
---
Entry stack: [V12, 0xa5, S6, S5, S4, S3, S2, 0x8da5cb5b, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V398, V404, 0x77c93662, V420, 0x20, V423, V424, V423, 0x0, V404]
Exit stack: [V12, 0xa5, S6, S5, S4, S3, V398, V404, 0x77c93662, V420, 0x20, V423, V424, V423, 0x0, V404]

================================

Block 0x45c
[0x45c:0x45c]
---
Predecessors: [0x40d]
Successors: []
---
0x45c INVALID
---
0x45c: INVALID 
---
Entry stack: [V12, 0xa5, S13, S12, S11, S10, V398, V404, 0x77c93662, V420, 0x20, V423, V424, V423, 0x0, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, S13, S12, S11, S10, V398, V404, 0x77c93662, V420, 0x20, V423, V424, V423, 0x0, V404]

================================

Block 0x45d
[0x45d:0x469]
---
Predecessors: [0x40d, 0xbec]
Successors: [0x46a, 0x46b]
---
0x45d JUMPDEST
0x45e PUSH2 0x2c6
0x461 GAS
0x462 SUB
0x463 CALL
0x464 ISZERO
0x465 ISZERO
0x466 PUSH2 0x46b
0x469 JUMPI
---
0x45d: JUMPDEST 
0x45e: V430 = 0x2c6
0x461: V431 = GAS
0x462: V432 = SUB V431 0x2c6
0x463: V433 = CALL V432 S0 0x0 S2 S3 S4 0x20
0x464: V434 = ISZERO V433
0x465: V435 = ISZERO V434
0x466: V436 = 0x46b
0x469: JUMPI 0x46b V435
---
Entry stack: [V12, 0xa5, S13, S12, S11, S10, S9, S8, 0x77c93662, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, S13, S12, S11, S10, S9, S8, 0x77c93662, S6]

================================

Block 0x46a
[0x46a:0x46a]
---
Predecessors: [0x45d]
Successors: []
---
0x46a INVALID
---
0x46a: INVALID 
---
Entry stack: [V12, 0xa5, S7, S6, S5, S4, S3, S2, 0x77c93662, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, S7, S6, S5, S4, S3, S2, 0x77c93662, S0]

================================

Block 0x46b
[0x46b:0x4a3]
---
Predecessors: [0x45d, 0xc3c]
Successors: [0x4a4]
---
0x46b JUMPDEST
0x46c POP
0x46d POP
0x46e PUSH1 0x40
0x470 DUP1
0x471 MLOAD
0x472 DUP1
0x473 MLOAD
0x474 PUSH1 0x1
0x476 PUSH1 0xa0
0x478 PUSH1 0x2
0x47a EXP
0x47b SUB
0x47c SWAP6
0x47d DUP7
0x47e AND
0x47f DUP3
0x480 MSTORE
0x481 SWAP4
0x482 DUP6
0x483 AND
0x484 PUSH1 0x20
0x486 DUP3
0x487 ADD
0x488 MSTORE
0x489 SWAP3
0x48a DUP5
0x48b AND
0x48c DUP4
0x48d DUP3
0x48e ADD
0x48f MSTORE
0x490 SWAP3
0x491 DUP7
0x492 AND
0x493 PUSH1 0x60
0x495 DUP4
0x496 ADD
0x497 MSTORE
0x498 POP
0x499 SWAP1
0x49a MLOAD
0x49b SWAP1
0x49c DUP2
0x49d SWAP1
0x49e SUB
0x49f PUSH1 0x80
0x4a1 ADD
0x4a2 SWAP1
0x4a3 LOG1
---
0x46b: JUMPDEST 
0x46e: V437 = 0x40
0x471: V438 = M[0x40]
0x473: V439 = M[V438]
0x474: V440 = 0x1
0x476: V441 = 0xa0
0x478: V442 = 0x2
0x47a: V443 = EXP 0x2 0xa0
0x47b: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x480: M[V438] = V445
0x483: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x484: V447 = 0x20
0x487: V448 = ADD V438 0x20
0x488: M[V448] = V446
0x48b: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x48e: V450 = ADD 0x40 V438
0x48f: M[V450] = V449
0x492: V451 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x493: V452 = 0x60
0x496: V453 = ADD V438 0x60
0x497: M[V453] = V451
0x49a: V454 = M[0x40]
0x49e: V455 = SUB V438 V454
0x49f: V456 = 0x80
0x4a1: V457 = ADD 0x80 V455
0x4a3: LOG V454 V457 S5
---
Entry stack: [V12, 0xa5, S7, S6, S5, S4, S3, S2, 0x77c93662, S0]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, 0xa5, S7, S6]

================================

Block 0x4a4
[0x4a4:0x4a7]
---
Predecessors: [0x46b]
Successors: [0xa5]
---
0x4a4 JUMPDEST
0x4a5 POP
0x4a6 POP
0x4a7 JUMP
---
0x4a4: JUMPDEST 
0x4a7: JUMP 0xa5
---
Entry stack: [V12, 0xa5, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a8
[0x4a8:0x4b6]
---
Predecessors: [0xf1]
Successors: [0xf9]
---
0x4a8 JUMPDEST
0x4a9 PUSH1 0x3
0x4ab SLOAD
0x4ac PUSH1 0x1
0x4ae PUSH1 0xa0
0x4b0 PUSH1 0x2
0x4b2 EXP
0x4b3 SUB
0x4b4 AND
0x4b5 DUP2
0x4b6 JUMP
---
0x4a8: JUMPDEST 
0x4a9: V458 = 0x3
0x4ab: V459 = S[0x3]
0x4ac: V460 = 0x1
0x4ae: V461 = 0xa0
0x4b0: V462 = 0x2
0x4b2: V463 = EXP 0x2 0xa0
0x4b3: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b4: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x4b6: JUMP 0xf9
---
Entry stack: [V12, 0xf9]
Stack pops: 1
Stack additions: [S0, V465]
Exit stack: [V12, 0xf9, V465]

================================

Block 0x4b7
[0x4b7:0x4d2]
---
Predecessors: [0x115, 0x274]
Successors: [0x4d3, 0x4d8]
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x1
0x4ba SLOAD
0x4bb PUSH1 0x0
0x4bd SWAP1
0x4be DUP2
0x4bf SWAP1
0x4c0 CALLER
0x4c1 PUSH1 0x1
0x4c3 PUSH1 0xa0
0x4c5 PUSH1 0x2
0x4c7 EXP
0x4c8 SUB
0x4c9 SWAP1
0x4ca DUP2
0x4cb AND
0x4cc SWAP2
0x4cd AND
0x4ce EQ
0x4cf PUSH2 0x4d8
0x4d2 JUMPI
---
0x4b7: JUMPDEST 
0x4b8: V466 = 0x1
0x4ba: V467 = S[0x1]
0x4bb: V468 = 0x0
0x4c0: V469 = CALLER
0x4c1: V470 = 0x1
0x4c3: V471 = 0xa0
0x4c5: V472 = 0x2
0x4c7: V473 = EXP 0x2 0xa0
0x4c8: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cb: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x4cd: V476 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x4ce: V477 = EQ V476 V475
0x4cf: V478 = 0x4d8
0x4d2: JUMPI 0x4d8 V477
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S8, {0xa5, 0x284}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S8, {0xa5, 0x284}, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0]

================================

Block 0x4d3
[0x4d3:0x4d7]
---
Predecessors: [0x4b7]
Successors: []
---
0x4d3 PUSH1 0x0
0x4d5 PUSH1 0x0
0x4d7 REVERT
---
0x4d3: V479 = 0x0
0x4d5: V480 = 0x0
0x4d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x4d8
[0x4d8:0x4e1]
---
Predecessors: [0x4b7]
Successors: [0x4e2, 0x4e7]
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x3
0x4db DUP4
0x4dc GT
0x4dd ISZERO
0x4de PUSH2 0x4e7
0x4e1 JUMPI
---
0x4d8: JUMPDEST 
0x4d9: V481 = 0x3
0x4dc: V482 = GT S2 0x3
0x4dd: V483 = ISZERO V482
0x4de: V484 = 0x4e7
0x4e1: JUMPI 0x4e7 V483
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x4e2
[0x4e2:0x4e6]
---
Predecessors: [0x4d8]
Successors: []
---
0x4e2 PUSH1 0x0
0x4e4 PUSH1 0x0
0x4e6 REVERT
---
0x4e2: V485 = 0x0
0x4e4: V486 = 0x0
0x4e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x4e7
[0x4e7:0x4f0]
---
Predecessors: [0x4d8]
Successors: [0x4f1, 0x4f6]
---
0x4e7 JUMPDEST
0x4e8 PUSH1 0x1
0x4ea DUP4
0x4eb LT
0x4ec ISZERO
0x4ed PUSH2 0x4f6
0x4f0 JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V487 = 0x1
0x4eb: V488 = LT S2 0x1
0x4ec: V489 = ISZERO V488
0x4ed: V490 = 0x4f6
0x4f0: JUMPI 0x4f6 V489
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x4f1
[0x4f1:0x4f5]
---
Predecessors: [0x4e7]
Successors: []
---
0x4f1 PUSH1 0x0
0x4f3 PUSH1 0x0
0x4f5 REVERT
---
0x4f1: V491 = 0x0
0x4f3: V492 = 0x0
0x4f5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x4f6
[0x4f6:0x506]
---
Predecessors: [0x4e7]
Successors: [0x507, 0x556]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x1
0x4f9 PUSH1 0xa0
0x4fb PUSH1 0x2
0x4fd EXP
0x4fe SUB
0x4ff DUP8
0x500 AND
0x501 ISZERO
0x502 ISZERO
0x503 PUSH2 0x556
0x506 JUMPI
---
0x4f6: JUMPDEST 
0x4f7: V493 = 0x1
0x4f9: V494 = 0xa0
0x4fb: V495 = 0x2
0x4fd: V496 = EXP 0x2 0xa0
0x4fe: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V498 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x501: V499 = ISZERO V498
0x502: V500 = ISZERO V499
0x503: V501 = 0x556
0x506: JUMPI 0x556 V500
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x507
[0x507:0x510]
---
Predecessors: [0x4f6]
Successors: [0x511, 0x516]
---
0x507 DUP9
0x508 DUP4
0x509 MUL
0x50a CALLVALUE
0x50b LT
0x50c ISZERO
0x50d PUSH2 0x516
0x510 JUMPI
---
0x509: V502 = MUL S2 S8
0x50a: V503 = CALLVALUE
0x50b: V504 = LT V503 V502
0x50c: V505 = ISZERO V504
0x50d: V506 = 0x516
0x510: JUMPI 0x516 V505
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x511
[0x511:0x515]
---
Predecessors: [0x507]
Successors: []
---
0x511 PUSH1 0x0
0x513 PUSH1 0x0
0x515 REVERT
---
0x511: V507 = 0x0
0x513: V508 = 0x0
0x515: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x516
[0x516:0x520]
---
Predecessors: [0x507]
Successors: [0x521, 0x550]
---
0x516 JUMPDEST
0x517 DUP3
0x518 DUP10
0x519 MUL
0x51a CALLVALUE
0x51b GT
0x51c ISZERO
0x51d PUSH2 0x550
0x520 JUMPI
---
0x516: JUMPDEST 
0x519: V509 = MUL S8 S2
0x51a: V510 = CALLVALUE
0x51b: V511 = GT V510 V509
0x51c: V512 = ISZERO V511
0x51d: V513 = 0x550
0x520: JUMPI 0x550 V512
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x521
[0x521:0x54e]
---
Predecessors: [0x516]
Successors: [0x54f, 0x550]
---
0x521 PUSH1 0x40
0x523 MLOAD
0x524 PUSH1 0x1
0x526 PUSH1 0xa0
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c CALLER
0x52d AND
0x52e SWAP1
0x52f DUP11
0x530 DUP6
0x531 MUL
0x532 CALLVALUE
0x533 SUB
0x534 DUP1
0x535 ISZERO
0x536 PUSH2 0x8fc
0x539 MUL
0x53a SWAP2
0x53b PUSH1 0x0
0x53d DUP2
0x53e DUP2
0x53f DUP2
0x540 DUP6
0x541 DUP9
0x542 DUP9
0x543 CALL
0x544 SWAP4
0x545 POP
0x546 POP
0x547 POP
0x548 POP
0x549 ISZERO
0x54a ISZERO
0x54b PUSH2 0x550
0x54e JUMPI
---
0x521: V514 = 0x40
0x523: V515 = M[0x40]
0x524: V516 = 0x1
0x526: V517 = 0xa0
0x528: V518 = 0x2
0x52a: V519 = EXP 0x2 0xa0
0x52b: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52c: V521 = CALLER
0x52d: V522 = AND V521 0xffffffffffffffffffffffffffffffffffffffff
0x531: V523 = MUL S2 S8
0x532: V524 = CALLVALUE
0x533: V525 = SUB V524 V523
0x535: V526 = ISZERO V525
0x536: V527 = 0x8fc
0x539: V528 = MUL 0x8fc V526
0x53b: V529 = 0x0
0x543: V530 = CALL V528 V522 V525 V515 0x0 V515 0x0
0x549: V531 = ISZERO V530
0x54a: V532 = ISZERO V531
0x54b: V533 = 0x550
0x54e: JUMPI 0x550 V532
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x54f
[0x54f:0x54f]
---
Predecessors: [0x521]
Successors: []
---
0x54f INVALID
---
0x54f: INVALID 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x550
[0x550:0x550]
---
Predecessors: [0x516, 0x521]
Successors: [0x551]
---
0x550 JUMPDEST
---
0x550: JUMPDEST 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x551
[0x551:0x555]
---
Predecessors: [0x550]
Successors: [0x5ed]
---
0x551 JUMPDEST
0x552 PUSH2 0x5ed
0x555 JUMP
---
0x551: JUMPDEST 
0x552: V534 = 0x5ed
0x555: JUMP 0x5ed
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x556
[0x556:0x5cd]
---
Predecessors: [0x4f6]
Successors: [0x5ce, 0x5cf]
---
0x556 JUMPDEST
0x557 PUSH1 0x40
0x559 DUP1
0x55a MLOAD
0x55b PUSH1 0x0
0x55d PUSH1 0x20
0x55f SWAP2
0x560 DUP3
0x561 ADD
0x562 DUP2
0x563 SWAP1
0x564 MSTORE
0x565 DUP3
0x566 MLOAD
0x567 PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x588 DUP2
0x589 MSTORE
0x58a PUSH1 0x1
0x58c PUSH1 0xa0
0x58e PUSH1 0x2
0x590 EXP
0x591 SUB
0x592 CALLER
0x593 DUP2
0x594 AND
0x595 PUSH1 0x4
0x597 DUP4
0x598 ADD
0x599 MSTORE
0x59a ADDRESS
0x59b DUP2
0x59c AND
0x59d PUSH1 0x24
0x59f DUP4
0x5a0 ADD
0x5a1 MSTORE
0x5a2 DUP8
0x5a3 DUP15
0x5a4 MUL
0x5a5 PUSH1 0x44
0x5a7 DUP4
0x5a8 ADD
0x5a9 MSTORE
0x5aa SWAP4
0x5ab MLOAD
0x5ac SWAP4
0x5ad DUP12
0x5ae AND
0x5af SWAP4
0x5b0 PUSH4 0x23b872dd
0x5b5 SWAP4
0x5b6 PUSH1 0x64
0x5b8 DUP1
0x5b9 DUP5
0x5ba ADD
0x5bb SWAP5
0x5bc SWAP2
0x5bd SWAP4
0x5be DUP4
0x5bf SWAP1
0x5c0 SUB
0x5c1 ADD
0x5c2 SWAP1
0x5c3 DUP3
0x5c4 SWAP1
0x5c5 DUP8
0x5c6 DUP1
0x5c7 EXTCODESIZE
0x5c8 ISZERO
0x5c9 ISZERO
0x5ca PUSH2 0x5cf
0x5cd JUMPI
---
0x556: JUMPDEST 
0x557: V535 = 0x40
0x55a: V536 = M[0x40]
0x55b: V537 = 0x0
0x55d: V538 = 0x20
0x561: V539 = ADD 0x20 V536
0x564: M[V539] = 0x0
0x566: V540 = M[0x40]
0x567: V541 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x589: M[V540] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x58a: V542 = 0x1
0x58c: V543 = 0xa0
0x58e: V544 = 0x2
0x590: V545 = EXP 0x2 0xa0
0x591: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x592: V547 = CALLER
0x594: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x595: V549 = 0x4
0x598: V550 = ADD V540 0x4
0x599: M[V550] = V548
0x59a: V551 = ADDRESS
0x59c: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x59d: V553 = 0x24
0x5a0: V554 = ADD V540 0x24
0x5a1: M[V554] = V552
0x5a4: V555 = MUL S8 S2
0x5a5: V556 = 0x44
0x5a8: V557 = ADD V540 0x44
0x5a9: M[V557] = V555
0x5ab: V558 = M[0x40]
0x5ae: V559 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x5b0: V560 = 0x23b872dd
0x5b6: V561 = 0x64
0x5ba: V562 = ADD V540 0x64
0x5c0: V563 = SUB V540 V558
0x5c1: V564 = ADD V563 0x64
0x5c7: V565 = EXTCODESIZE V559
0x5c8: V566 = ISZERO V565
0x5c9: V567 = ISZERO V566
0x5ca: V568 = 0x5cf
0x5cd: JUMPI 0x5cf V567
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V559, 0x23b872dd, V562, 0x20, V558, V564, V558, 0x0, V559]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0, V559, 0x23b872dd, V562, 0x20, V558, V564, V558, 0x0, V559]

================================

Block 0x5ce
[0x5ce:0x5ce]
---
Predecessors: [0x556]
Successors: []
---
0x5ce INVALID
---
0x5ce: INVALID 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S19, {0xa5, 0x284}, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, V559, 0x23b872dd, V562, 0x20, V558, V564, V558, 0x0, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S19, {0xa5, 0x284}, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, V559, 0x23b872dd, V562, 0x20, V558, V564, V558, 0x0, V559]

================================

Block 0x5cf
[0x5cf:0x5db]
---
Predecessors: [0x556]
Successors: [0x5dc, 0x5dd]
---
0x5cf JUMPDEST
0x5d0 PUSH2 0x2c6
0x5d3 GAS
0x5d4 SUB
0x5d5 CALL
0x5d6 ISZERO
0x5d7 ISZERO
0x5d8 PUSH2 0x5dd
0x5db JUMPI
---
0x5cf: JUMPDEST 
0x5d0: V569 = 0x2c6
0x5d3: V570 = GAS
0x5d4: V571 = SUB V570 0x2c6
0x5d5: V572 = CALL V571 V559 0x0 V558 V564 V558 0x20
0x5d6: V573 = ISZERO V572
0x5d7: V574 = ISZERO V573
0x5d8: V575 = 0x5dd
0x5db: JUMPI 0x5dd V574
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S19, {0xa5, 0x284}, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, V559, 0x23b872dd, V562, 0x20, V558, V564, V558, 0x0, V559]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S19, {0xa5, 0x284}, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, V559, 0x23b872dd, V562]

================================

Block 0x5dc
[0x5dc:0x5dc]
---
Predecessors: [0x5cf]
Successors: []
---
0x5dc INVALID
---
0x5dc: INVALID 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S13, {0xa5, 0x284}, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S13, {0xa5, 0x284}, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, S2, 0x23b872dd, S0]

================================

Block 0x5dd
[0x5dd:0x5eb]
---
Predecessors: [0x5cf]
Successors: [0x5ec, 0x5ed]
---
0x5dd JUMPDEST
0x5de POP
0x5df POP
0x5e0 PUSH1 0x40
0x5e2 MLOAD
0x5e3 MLOAD
0x5e4 ISZERO
0x5e5 ISZERO
0x5e6 SWAP1
0x5e7 POP
0x5e8 PUSH2 0x5ed
0x5eb JUMPI
---
0x5dd: JUMPDEST 
0x5e0: V576 = 0x40
0x5e2: V577 = M[0x40]
0x5e3: V578 = M[V577]
0x5e4: V579 = ISZERO V578
0x5e5: V580 = ISZERO V579
0x5e8: V581 = 0x5ed
0x5eb: JUMPI 0x5ed V580
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S13, {0xa5, 0x284}, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, S2, 0x23b872dd, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S13, {0xa5, 0x284}, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x0]

================================

Block 0x5ec
[0x5ec:0x5ec]
---
Predecessors: [0x5dd]
Successors: []
---
0x5ec INVALID
---
0x5ec: INVALID 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x5ed
[0x5ed:0x5ed]
---
Predecessors: [0x551, 0x5dd]
Successors: [0x5ee]
---
0x5ed JUMPDEST
---
0x5ed: JUMPDEST 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x5ee
[0x5ee:0x5f2]
---
Predecessors: [0x5ed]
Successors: [0x5f3]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x0
0x5f1 SWAP2
0x5f2 POP
---
0x5ee: JUMPDEST 
0x5ef: V582 = 0x0
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x5f3
[0x5f3:0x5fb]
---
Predecessors: [0x5ee, 0x7cc]
Successors: [0x5fc, 0x7d7]
---
0x5f3 JUMPDEST
0x5f4 DUP3
0x5f5 DUP3
0x5f6 LT
0x5f7 ISZERO
0x5f8 PUSH2 0x7d7
0x5fb JUMPI
---
0x5f3: JUMPDEST 
0x5f6: V583 = LT S1 S2
0x5f7: V584 = ISZERO V583
0x5f8: V585 = 0x7d7
0x5fb: JUMPI 0x7d7 V584
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5fc
[0x5fc:0x60a]
---
Predecessors: [0x5f3]
Successors: [0x60b, 0x611]
---
0x5fc PUSH1 0x1
0x5fe PUSH1 0xa0
0x600 PUSH1 0x2
0x602 EXP
0x603 SUB
0x604 DUP8
0x605 AND
0x606 ISZERO
0x607 PUSH2 0x611
0x60a JUMPI
---
0x5fc: V586 = 0x1
0x5fe: V587 = 0xa0
0x600: V588 = 0x2
0x602: V589 = EXP 0x2 0xa0
0x603: V590 = SUB 0x10000000000000000000000000000000000000000 0x1
0x605: V591 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x606: V592 = ISZERO V591
0x607: V593 = 0x611
0x60a: JUMPI 0x611 V592
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x60b
[0x60b:0x610]
---
Predecessors: [0x5fc]
Successors: [0x613]
---
0x60b PUSH1 0x0
0x60d PUSH2 0x613
0x610 JUMP
---
0x60b: V594 = 0x0
0x60d: V595 = 0x613
0x610: JUMP 0x613
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x611
[0x611:0x612]
---
Predecessors: [0x5fc]
Successors: [0x613]
---
0x611 JUMPDEST
0x612 DUP9
---
0x611: JUMPDEST 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, S8]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0, S8]

================================

Block 0x613
[0x613:0x63b]
---
Predecessors: [0x60b, 0x611]
Successors: [0xc97]
---
0x613 JUMPDEST
0x614 PUSH1 0x1
0x616 SLOAD
0x617 PUSH1 0x2
0x619 SLOAD
0x61a CALLER
0x61b SWAP2
0x61c PUSH1 0x1
0x61e PUSH1 0xa0
0x620 PUSH1 0x2
0x622 EXP
0x623 SUB
0x624 SWAP1
0x625 DUP2
0x626 AND
0x627 SWAP2
0x628 DUP9
0x629 SWAP2
0x62a DUP15
0x62b SWAP2
0x62c DUP15
0x62d SWAP2
0x62e DUP15
0x62f SWAP2
0x630 DUP15
0x631 SWAP2
0x632 DUP15
0x633 SWAP2
0x634 AND
0x635 PUSH2 0x63c
0x638 PUSH2 0xc97
0x63b JUMP
---
0x613: JUMPDEST 
0x614: V596 = 0x1
0x616: V597 = S[0x1]
0x617: V598 = 0x2
0x619: V599 = S[0x2]
0x61a: V600 = CALLER
0x61c: V601 = 0x1
0x61e: V602 = 0xa0
0x620: V603 = 0x2
0x622: V604 = EXP 0x2 0xa0
0x623: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x626: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x634: V607 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x635: V608 = 0x63c
0x638: V609 = 0xc97
0x63b: JUMP 0xc97
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S11, {0xa5, 0x284}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V600, V606, S4, S9, S8, S7, S6, S5, V607, 0x63c]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S11, {0xa5, 0x284}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V600, V606, S4, S9, S8, S7, S6, S5, V607, 0x63c]

================================

Block 0x63c
[0x63c:0x69d]
---
Predecessors: [0xc97]
Successors: [0x69e, 0x69f]
---
0x63c JUMPDEST
0x63d PUSH1 0x1
0x63f PUSH1 0xa0
0x641 PUSH1 0x2
0x643 EXP
0x644 SUB
0x645 SWAP10
0x646 DUP11
0x647 AND
0x648 DUP2
0x649 MSTORE
0x64a SWAP8
0x64b DUP10
0x64c AND
0x64d PUSH1 0x20
0x64f DUP10
0x650 ADD
0x651 MSTORE
0x652 SWAP6
0x653 DUP9
0x654 AND
0x655 PUSH1 0x40
0x657 DUP1
0x658 DUP10
0x659 ADD
0x65a SWAP2
0x65b SWAP1
0x65c SWAP2
0x65d MSTORE
0x65e PUSH1 0x60
0x660 DUP9
0x661 ADD
0x662 SWAP6
0x663 SWAP1
0x664 SWAP6
0x665 MSTORE
0x666 PUSH1 0x80
0x668 DUP8
0x669 ADD
0x66a SWAP4
0x66b SWAP1
0x66c SWAP4
0x66d MSTORE
0x66e SWAP1
0x66f DUP7
0x670 AND
0x671 PUSH1 0xa0
0x673 DUP7
0x674 ADD
0x675 MSTORE
0x676 DUP6
0x677 AND
0x678 PUSH1 0xc0
0x67a DUP6
0x67b ADD
0x67c MSTORE
0x67d PUSH1 0xe0
0x67f DUP5
0x680 ADD
0x681 MSTORE
0x682 SWAP3
0x683 AND
0x684 PUSH2 0x100
0x687 DUP3
0x688 ADD
0x689 MSTORE
0x68a SWAP1
0x68b MLOAD
0x68c SWAP1
0x68d DUP2
0x68e SWAP1
0x68f SUB
0x690 PUSH2 0x120
0x693 ADD
0x694 SWAP1
0x695 DUP3
0x696 CREATE
0x697 DUP1
0x698 ISZERO
0x699 ISZERO
0x69a PUSH2 0x69f
0x69d JUMPI
---
0x63c: JUMPDEST 
0x63d: V610 = 0x1
0x63f: V611 = 0xa0
0x641: V612 = 0x2
0x643: V613 = EXP 0x2 0xa0
0x644: V614 = SUB 0x10000000000000000000000000000000000000000 0x1
0x647: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x649: M[V1193] = V615
0x64c: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x64d: V617 = 0x20
0x650: V618 = ADD V1193 0x20
0x651: M[V618] = V616
0x654: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x655: V620 = 0x40
0x659: V621 = ADD V1193 0x40
0x65d: M[V621] = V619
0x65e: V622 = 0x60
0x661: V623 = ADD V1193 0x60
0x665: M[V623] = S6
0x666: V624 = 0x80
0x669: V625 = ADD V1193 0x80
0x66d: M[V625] = S5
0x670: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x671: V627 = 0xa0
0x674: V628 = ADD V1193 0xa0
0x675: M[V628] = V626
0x677: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x678: V630 = 0xc0
0x67b: V631 = ADD V1193 0xc0
0x67c: M[V631] = V629
0x67d: V632 = 0xe0
0x680: V633 = ADD V1193 0xe0
0x681: M[V633] = S2
0x683: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x684: V635 = 0x100
0x688: V636 = ADD V1193 0x100
0x689: M[V636] = V634
0x68b: V637 = M[0x40]
0x68f: V638 = SUB V1193 V637
0x690: V639 = 0x120
0x693: V640 = ADD 0x120 V638
0x696: V641 = CREATE S10 V637 V640
0x698: V642 = ISZERO V641
0x699: V643 = ISZERO V642
0x69a: V644 = 0x69f
0x69d: JUMPI 0x69f V643
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S21, {0xa5, 0x284}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1193]
Stack pops: 11
Stack additions: [S10, V641]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S21, {0xa5, 0x284}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V641]

================================

Block 0x69e
[0x69e:0x69e]
---
Predecessors: [0x63c]
Successors: []
---
0x69e INVALID
---
0x69e: INVALID 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S12, {0xa5, 0x284}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V641]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S12, {0xa5, 0x284}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V641]

================================

Block 0x69f
[0x69f:0x6cf]
---
Predecessors: [0x63c]
Successors: [0x6d0, 0x755]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x1
0x6a2 PUSH1 0xa0
0x6a4 PUSH1 0x2
0x6a6 EXP
0x6a7 SUB
0x6a8 DUP1
0x6a9 DUP3
0x6aa AND
0x6ab PUSH1 0x0
0x6ad SWAP1
0x6ae DUP2
0x6af MSTORE
0x6b0 PUSH1 0x20
0x6b2 DUP2
0x6b3 SWAP1
0x6b4 MSTORE
0x6b5 PUSH1 0x40
0x6b7 SWAP1
0x6b8 SHA3
0x6b9 DUP1
0x6ba SLOAD
0x6bb PUSH1 0xff
0x6bd NOT
0x6be AND
0x6bf PUSH1 0x1
0x6c1 OR
0x6c2 SWAP1
0x6c3 SSTORE
0x6c4 SWAP1
0x6c5 SWAP3
0x6c6 POP
0x6c7 DUP9
0x6c8 AND
0x6c9 ISZERO
0x6ca SWAP1
0x6cb POP
0x6cc PUSH2 0x755
0x6cf JUMPI
---
0x69f: JUMPDEST 
0x6a0: V645 = 0x1
0x6a2: V646 = 0xa0
0x6a4: V647 = 0x2
0x6a6: V648 = EXP 0x2 0xa0
0x6a7: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6aa: V650 = AND V641 0xffffffffffffffffffffffffffffffffffffffff
0x6ab: V651 = 0x0
0x6af: M[0x0] = V650
0x6b0: V652 = 0x20
0x6b4: M[0x20] = 0x0
0x6b5: V653 = 0x40
0x6b8: V654 = SHA3 0x0 0x40
0x6ba: V655 = S[V654]
0x6bb: V656 = 0xff
0x6bd: V657 = NOT 0xff
0x6be: V658 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V655
0x6bf: V659 = 0x1
0x6c1: V660 = OR 0x1 V658
0x6c3: S[V654] = V660
0x6c8: V661 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V662 = ISZERO V661
0x6cc: V663 = 0x755
0x6cf: JUMPI 0x755 V662
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S12, {0xa5, 0x284}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V641]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S12, {0xa5, 0x284}, S10, S9, S8, S7, S6, S5, S4, S3, V641]

================================

Block 0x6d0
[0x6d0:0x735]
---
Predecessors: [0x69f]
Successors: [0x736, 0x737]
---
0x6d0 DUP7
0x6d1 PUSH1 0x1
0x6d3 PUSH1 0xa0
0x6d5 PUSH1 0x2
0x6d7 EXP
0x6d8 SUB
0x6d9 AND
0x6da PUSH4 0xa9059cbb
0x6df DUP3
0x6e0 DUP12
0x6e1 PUSH1 0x0
0x6e3 PUSH1 0x40
0x6e5 MLOAD
0x6e6 PUSH1 0x20
0x6e8 ADD
0x6e9 MSTORE
0x6ea PUSH1 0x40
0x6ec MLOAD
0x6ed DUP4
0x6ee PUSH4 0xffffffff
0x6f3 AND
0x6f4 PUSH1 0xe0
0x6f6 PUSH1 0x2
0x6f8 EXP
0x6f9 MUL
0x6fa DUP2
0x6fb MSTORE
0x6fc PUSH1 0x4
0x6fe ADD
0x6ff DUP1
0x700 DUP4
0x701 PUSH1 0x1
0x703 PUSH1 0xa0
0x705 PUSH1 0x2
0x707 EXP
0x708 SUB
0x709 AND
0x70a PUSH1 0x1
0x70c PUSH1 0xa0
0x70e PUSH1 0x2
0x710 EXP
0x711 SUB
0x712 AND
0x713 DUP2
0x714 MSTORE
0x715 PUSH1 0x20
0x717 ADD
0x718 DUP3
0x719 DUP2
0x71a MSTORE
0x71b PUSH1 0x20
0x71d ADD
0x71e SWAP3
0x71f POP
0x720 POP
0x721 POP
0x722 PUSH1 0x20
0x724 PUSH1 0x40
0x726 MLOAD
0x727 DUP1
0x728 DUP4
0x729 SUB
0x72a DUP2
0x72b PUSH1 0x0
0x72d DUP8
0x72e DUP1
0x72f EXTCODESIZE
0x730 ISZERO
0x731 ISZERO
0x732 PUSH2 0x737
0x735 JUMPI
---
0x6d1: V664 = 0x1
0x6d3: V665 = 0xa0
0x6d5: V666 = 0x2
0x6d7: V667 = EXP 0x2 0xa0
0x6d8: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d9: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x6da: V670 = 0xa9059cbb
0x6e1: V671 = 0x0
0x6e3: V672 = 0x40
0x6e5: V673 = M[0x40]
0x6e6: V674 = 0x20
0x6e8: V675 = ADD 0x20 V673
0x6e9: M[V675] = 0x0
0x6ea: V676 = 0x40
0x6ec: V677 = M[0x40]
0x6ee: V678 = 0xffffffff
0x6f3: V679 = AND 0xffffffff 0xa9059cbb
0x6f4: V680 = 0xe0
0x6f6: V681 = 0x2
0x6f8: V682 = EXP 0x2 0xe0
0x6f9: V683 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x6fb: M[V677] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6fc: V684 = 0x4
0x6fe: V685 = ADD 0x4 V677
0x701: V686 = 0x1
0x703: V687 = 0xa0
0x705: V688 = 0x2
0x707: V689 = EXP 0x2 0xa0
0x708: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x709: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x70a: V692 = 0x1
0x70c: V693 = 0xa0
0x70e: V694 = 0x2
0x710: V695 = EXP 0x2 0xa0
0x711: V696 = SUB 0x10000000000000000000000000000000000000000 0x1
0x712: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0x714: M[V685] = V697
0x715: V698 = 0x20
0x717: V699 = ADD 0x20 V685
0x71a: M[V699] = S8
0x71b: V700 = 0x20
0x71d: V701 = ADD 0x20 V699
0x722: V702 = 0x20
0x724: V703 = 0x40
0x726: V704 = M[0x40]
0x729: V705 = SUB V701 V704
0x72b: V706 = 0x0
0x72f: V707 = EXTCODESIZE V669
0x730: V708 = ISZERO V707
0x731: V709 = ISZERO V708
0x732: V710 = 0x737
0x735: JUMPI 0x737 V709
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V669, 0xa9059cbb, V701, 0x20, V704, V705, V704, 0x0, V669]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0, V669, 0xa9059cbb, V701, 0x20, V704, V705, V704, 0x0, V669]

================================

Block 0x736
[0x736:0x736]
---
Predecessors: [0x6d0]
Successors: []
---
0x736 INVALID
---
0x736: INVALID 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S19, {0xa5, 0x284}, S17, S16, S15, S14, S13, S12, S11, S10, S9, V669, 0xa9059cbb, V701, 0x20, V704, V705, V704, 0x0, V669]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S19, {0xa5, 0x284}, S17, S16, S15, S14, S13, S12, S11, S10, S9, V669, 0xa9059cbb, V701, 0x20, V704, V705, V704, 0x0, V669]

================================

Block 0x737
[0x737:0x743]
---
Predecessors: [0x6d0]
Successors: [0x744, 0x745]
---
0x737 JUMPDEST
0x738 PUSH2 0x2c6
0x73b GAS
0x73c SUB
0x73d CALL
0x73e ISZERO
0x73f ISZERO
0x740 PUSH2 0x745
0x743 JUMPI
---
0x737: JUMPDEST 
0x738: V711 = 0x2c6
0x73b: V712 = GAS
0x73c: V713 = SUB V712 0x2c6
0x73d: V714 = CALL V713 V669 0x0 V704 V705 V704 0x20
0x73e: V715 = ISZERO V714
0x73f: V716 = ISZERO V715
0x740: V717 = 0x745
0x743: JUMPI 0x745 V716
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S19, {0xa5, 0x284}, S17, S16, S15, S14, S13, S12, S11, S10, S9, V669, 0xa9059cbb, V701, 0x20, V704, V705, V704, 0x0, V669]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S19, {0xa5, 0x284}, S17, S16, S15, S14, S13, S12, S11, S10, S9, V669, 0xa9059cbb, V701]

================================

Block 0x744
[0x744:0x744]
---
Predecessors: [0x737]
Successors: []
---
0x744 INVALID
---
0x744: INVALID 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S13, {0xa5, 0x284}, S11, S10, S9, S8, S7, S6, S5, S4, S3, V669, 0xa9059cbb, V701]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S13, {0xa5, 0x284}, S11, S10, S9, S8, S7, S6, S5, S4, S3, V669, 0xa9059cbb, V701]

================================

Block 0x745
[0x745:0x753]
---
Predecessors: [0x737]
Successors: [0x754, 0x755]
---
0x745 JUMPDEST
0x746 POP
0x747 POP
0x748 PUSH1 0x40
0x74a MLOAD
0x74b MLOAD
0x74c ISZERO
0x74d ISZERO
0x74e SWAP1
0x74f POP
0x750 PUSH2 0x755
0x753 JUMPI
---
0x745: JUMPDEST 
0x748: V718 = 0x40
0x74a: V719 = M[0x40]
0x74b: V720 = M[V719]
0x74c: V721 = ISZERO V720
0x74d: V722 = ISZERO V721
0x750: V723 = 0x755
0x753: JUMPI 0x755 V722
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S13, {0xa5, 0x284}, S11, S10, S9, S8, S7, S6, S5, S4, S3, V669, 0xa9059cbb, V701]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S13, {0xa5, 0x284}, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x754
[0x754:0x754]
---
Predecessors: [0x745]
Successors: []
---
0x754 INVALID
---
0x754: INVALID 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x755
[0x755:0x755]
---
Predecessors: [0x69f, 0x745]
Successors: [0x756]
---
0x755 JUMPDEST
---
0x755: JUMPDEST 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x756
[0x756:0x7cb]
---
Predecessors: [0x755]
Successors: [0x7cc]
---
0x756 JUMPDEST
0x757 PUSH1 0x1
0x759 SLOAD
0x75a PUSH1 0x40
0x75c DUP1
0x75d MLOAD
0x75e PUSH1 0x1
0x760 PUSH1 0xa0
0x762 PUSH1 0x2
0x764 EXP
0x765 SUB
0x766 CALLER
0x767 DUP2
0x768 AND
0x769 DUP3
0x76a MSTORE
0x76b SWAP3
0x76c DUP4
0x76d AND
0x76e PUSH1 0x20
0x770 DUP3
0x771 ADD
0x772 MSTORE
0x773 DUP7
0x774 DUP4
0x775 AND
0x776 DUP2
0x777 DUP4
0x778 ADD
0x779 MSTORE
0x77a DUP4
0x77b DUP4
0x77c AND
0x77d PUSH1 0x60
0x77f DUP3
0x780 ADD
0x781 MSTORE
0x782 PUSH1 0x80
0x784 DUP2
0x785 ADD
0x786 DUP13
0x787 SWAP1
0x788 MSTORE
0x789 PUSH1 0xa0
0x78b DUP2
0x78c ADD
0x78d DUP12
0x78e SWAP1
0x78f MSTORE
0x790 DUP10
0x791 DUP4
0x792 AND
0x793 PUSH1 0xc0
0x795 DUP3
0x796 ADD
0x797 MSTORE
0x798 SWAP2
0x799 DUP9
0x79a AND
0x79b PUSH1 0xe0
0x79d DUP4
0x79e ADD
0x79f MSTORE
0x7a0 MLOAD
0x7a1 PUSH32 0xb37a1c53aba4fad02b291de64661708d721fe305d8052657a781feca311494ee
0x7c2 SWAP2
0x7c3 DUP2
0x7c4 SWAP1
0x7c5 SUB
0x7c6 PUSH2 0x100
0x7c9 ADD
0x7ca SWAP1
0x7cb LOG1
---
0x756: JUMPDEST 
0x757: V724 = 0x1
0x759: V725 = S[0x1]
0x75a: V726 = 0x40
0x75d: V727 = M[0x40]
0x75e: V728 = 0x1
0x760: V729 = 0xa0
0x762: V730 = 0x2
0x764: V731 = EXP 0x2 0xa0
0x765: V732 = SUB 0x10000000000000000000000000000000000000000 0x1
0x766: V733 = CALLER
0x768: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V733
0x76a: M[V727] = V734
0x76d: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0x76e: V736 = 0x20
0x771: V737 = ADD V727 0x20
0x772: M[V737] = V735
0x775: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x778: V739 = ADD 0x40 V727
0x779: M[V739] = V738
0x77c: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x77d: V741 = 0x60
0x780: V742 = ADD V727 0x60
0x781: M[V742] = V740
0x782: V743 = 0x80
0x785: V744 = ADD V727 0x80
0x788: M[V744] = S8
0x789: V745 = 0xa0
0x78c: V746 = ADD V727 0xa0
0x78f: M[V746] = S7
0x792: V747 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x793: V748 = 0xc0
0x796: V749 = ADD V727 0xc0
0x797: M[V749] = V747
0x79a: V750 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V751 = 0xe0
0x79e: V752 = ADD V727 0xe0
0x79f: M[V752] = V750
0x7a0: V753 = M[0x40]
0x7a1: V754 = 0xb37a1c53aba4fad02b291de64661708d721fe305d8052657a781feca311494ee
0x7c5: V755 = SUB V727 V753
0x7c6: V756 = 0x100
0x7c9: V757 = ADD 0x100 V755
0x7cb: LOG V753 V757 0xb37a1c53aba4fad02b291de64661708d721fe305d8052657a781feca311494ee
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7cc
[0x7cc:0x7d6]
---
Predecessors: [0x756]
Successors: [0x5f3]
---
0x7cc JUMPDEST
0x7cd PUSH1 0x1
0x7cf SWAP1
0x7d0 SWAP2
0x7d1 ADD
0x7d2 SWAP1
0x7d3 PUSH2 0x5f3
0x7d6 JUMP
---
0x7cc: JUMPDEST 
0x7cd: V758 = 0x1
0x7d1: V759 = ADD S1 0x1
0x7d3: V760 = 0x5f3
0x7d6: JUMP 0x5f3
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V759, S0]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, V759, S0]

================================

Block 0x7d7
[0x7d7:0x7d7]
---
Predecessors: [0x5f3]
Successors: [0x7d8]
---
0x7d7 JUMPDEST
---
0x7d7: JUMPDEST 
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7d8
[0x7d8:0x7e2]
---
Predecessors: [0x7d7]
Successors: [0xa5, 0x284]
---
0x7d8 JUMPDEST
0x7d9 POP
0x7da POP
0x7db POP
0x7dc POP
0x7dd POP
0x7de POP
0x7df POP
0x7e0 POP
0x7e1 POP
0x7e2 JUMP
---
0x7d8: JUMPDEST 
0x7e2: JUMP {0xa5, 0x284}
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10, {0xa5, 0x284}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S10]

================================

Block 0x7e3
[0x7e3:0x805]
---
Predecessors: [0x14c]
Successors: [0x806, 0x80b]
---
0x7e3 JUMPDEST
0x7e4 PUSH1 0x1
0x7e6 PUSH1 0xa0
0x7e8 PUSH1 0x2
0x7ea EXP
0x7eb SUB
0x7ec DUP2
0x7ed AND
0x7ee PUSH1 0x0
0x7f0 SWAP1
0x7f1 DUP2
0x7f2 MSTORE
0x7f3 PUSH1 0x20
0x7f5 DUP2
0x7f6 SWAP1
0x7f7 MSTORE
0x7f8 PUSH1 0x40
0x7fa DUP2
0x7fb SHA3
0x7fc SLOAD
0x7fd PUSH1 0xff
0x7ff AND
0x800 ISZERO
0x801 ISZERO
0x802 PUSH2 0x80b
0x805 JUMPI
---
0x7e3: JUMPDEST 
0x7e4: V761 = 0x1
0x7e6: V762 = 0xa0
0x7e8: V763 = 0x2
0x7ea: V764 = EXP 0x2 0xa0
0x7eb: V765 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ed: V766 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x7ee: V767 = 0x0
0x7f2: M[0x0] = V766
0x7f3: V768 = 0x20
0x7f7: M[0x20] = 0x0
0x7f8: V769 = 0x40
0x7fb: V770 = SHA3 0x0 0x40
0x7fc: V771 = S[V770]
0x7fd: V772 = 0xff
0x7ff: V773 = AND 0xff V771
0x800: V774 = ISZERO V773
0x801: V775 = ISZERO V774
0x802: V776 = 0x80b
0x805: JUMPI 0x80b V775
---
Entry stack: [V12, 0xa5, V135]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0xa5, V135, 0x0]

================================

Block 0x806
[0x806:0x80a]
---
Predecessors: [0x7e3]
Successors: []
---
0x806 PUSH1 0x0
0x808 PUSH1 0x0
0x80a REVERT
---
0x806: V777 = 0x0
0x808: V778 = 0x0
0x80a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V135, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V135, 0x0]

================================

Block 0x80b
[0x80b:0x87c]
---
Predecessors: [0x7e3]
Successors: [0x87d, 0x87e]
---
0x80b JUMPDEST
0x80c POP
0x80d PUSH1 0x1
0x80f PUSH1 0xa0
0x811 PUSH1 0x2
0x813 EXP
0x814 SUB
0x815 DUP1
0x816 DUP3
0x817 AND
0x818 PUSH1 0x0
0x81a DUP2
0x81b DUP2
0x81c MSTORE
0x81d PUSH1 0x20
0x81f DUP2
0x820 SWAP1
0x821 MSTORE
0x822 PUSH1 0x40
0x824 DUP1
0x825 DUP3
0x826 SHA3
0x827 DUP1
0x828 SLOAD
0x829 PUSH1 0xff
0x82b NOT
0x82c AND
0x82d SWAP1
0x82e SSTORE
0x82f DUP1
0x830 MLOAD
0x831 PUSH32 0x2ebf1d5800000000000000000000000000000000000000000000000000000000
0x852 DUP2
0x853 MSTORE
0x854 CALLER
0x855 SWAP1
0x856 SWAP5
0x857 AND
0x858 PUSH1 0x4
0x85a DUP6
0x85b ADD
0x85c MSTORE
0x85d MLOAD
0x85e DUP5
0x85f SWAP4
0x860 PUSH4 0x2ebf1d58
0x865 SWAP3
0x866 PUSH1 0x24
0x868 DUP1
0x869 DUP4
0x86a ADD
0x86b SWAP4
0x86c SWAP2
0x86d SWAP3
0x86e DUP3
0x86f SWAP1
0x870 SUB
0x871 ADD
0x872 DUP2
0x873 DUP4
0x874 DUP8
0x875 DUP1
0x876 EXTCODESIZE
0x877 ISZERO
0x878 ISZERO
0x879 PUSH2 0x87e
0x87c JUMPI
---
0x80b: JUMPDEST 
0x80d: V779 = 0x1
0x80f: V780 = 0xa0
0x811: V781 = 0x2
0x813: V782 = EXP 0x2 0xa0
0x814: V783 = SUB 0x10000000000000000000000000000000000000000 0x1
0x817: V784 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x818: V785 = 0x0
0x81c: M[0x0] = V784
0x81d: V786 = 0x20
0x821: M[0x20] = 0x0
0x822: V787 = 0x40
0x826: V788 = SHA3 0x0 0x40
0x828: V789 = S[V788]
0x829: V790 = 0xff
0x82b: V791 = NOT 0xff
0x82c: V792 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V789
0x82e: S[V788] = V792
0x830: V793 = M[0x40]
0x831: V794 = 0x2ebf1d5800000000000000000000000000000000000000000000000000000000
0x853: M[V793] = 0x2ebf1d5800000000000000000000000000000000000000000000000000000000
0x854: V795 = CALLER
0x857: V796 = AND 0xffffffffffffffffffffffffffffffffffffffff V795
0x858: V797 = 0x4
0x85b: V798 = ADD V793 0x4
0x85c: M[V798] = V796
0x85d: V799 = M[0x40]
0x860: V800 = 0x2ebf1d58
0x866: V801 = 0x24
0x86a: V802 = ADD V793 0x24
0x870: V803 = SUB V793 V799
0x871: V804 = ADD V803 0x24
0x876: V805 = EXTCODESIZE V784
0x877: V806 = ISZERO V805
0x878: V807 = ISZERO V806
0x879: V808 = 0x87e
0x87c: JUMPI 0x87e V807
---
Entry stack: [V12, 0xa5, V135, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V784, 0x2ebf1d58, V802, 0x0, V799, V804, V799, 0x0, V784]
Exit stack: [V12, 0xa5, V135, V135, V784, 0x2ebf1d58, V802, 0x0, V799, V804, V799, 0x0, V784]

================================

Block 0x87d
[0x87d:0x87d]
---
Predecessors: [0x80b]
Successors: []
---
0x87d INVALID
---
0x87d: INVALID 
---
Entry stack: [V12, 0xa5, V135, V135, V784, 0x2ebf1d58, V802, 0x0, V799, V804, V799, 0x0, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V135, V135, V784, 0x2ebf1d58, V802, 0x0, V799, V804, V799, 0x0, V784]

================================

Block 0x87e
[0x87e:0x88a]
---
Predecessors: [0x80b]
Successors: [0x88b, 0x88c]
---
0x87e JUMPDEST
0x87f PUSH2 0x2c6
0x882 GAS
0x883 SUB
0x884 CALL
0x885 ISZERO
0x886 ISZERO
0x887 PUSH2 0x88c
0x88a JUMPI
---
0x87e: JUMPDEST 
0x87f: V809 = 0x2c6
0x882: V810 = GAS
0x883: V811 = SUB V810 0x2c6
0x884: V812 = CALL V811 V784 0x0 V799 V804 V799 0x0
0x885: V813 = ISZERO V812
0x886: V814 = ISZERO V813
0x887: V815 = 0x88c
0x88a: JUMPI 0x88c V814
---
Entry stack: [V12, 0xa5, V135, V135, V784, 0x2ebf1d58, V802, 0x0, V799, V804, V799, 0x0, V784]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V135, V135, V784, 0x2ebf1d58, V802]

================================

Block 0x88b
[0x88b:0x88b]
---
Predecessors: [0x87e]
Successors: []
---
0x88b INVALID
---
0x88b: INVALID 
---
Entry stack: [V12, 0xa5, V135, V135, V784, 0x2ebf1d58, V802]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V135, V135, V784, 0x2ebf1d58, V802]

================================

Block 0x88c
[0x88c:0x88f]
---
Predecessors: [0x87e]
Successors: [0x890]
---
0x88c JUMPDEST
0x88d POP
0x88e POP
0x88f POP
---
0x88c: JUMPDEST 
---
Entry stack: [V12, 0xa5, V135, V135, V784, 0x2ebf1d58, V802]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa5, V135, V135]

================================

Block 0x890
[0x890:0x893]
---
Predecessors: [0x88c]
Successors: [0xa5]
---
0x890 JUMPDEST
0x891 POP
0x892 POP
0x893 JUMP
---
0x890: JUMPDEST 
0x893: JUMP 0xa5
---
Entry stack: [V12, 0xa5, V135, V135]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x894
[0x894:0x8b6]
---
Predecessors: [0x16a]
Successors: [0x8b7, 0x8bc]
---
0x894 JUMPDEST
0x895 PUSH1 0x1
0x897 PUSH1 0xa0
0x899 PUSH1 0x2
0x89b EXP
0x89c SUB
0x89d DUP2
0x89e AND
0x89f PUSH1 0x0
0x8a1 SWAP1
0x8a2 DUP2
0x8a3 MSTORE
0x8a4 PUSH1 0x20
0x8a6 DUP2
0x8a7 SWAP1
0x8a8 MSTORE
0x8a9 PUSH1 0x40
0x8ab DUP2
0x8ac SHA3
0x8ad SLOAD
0x8ae PUSH1 0xff
0x8b0 AND
0x8b1 ISZERO
0x8b2 ISZERO
0x8b3 PUSH2 0x8bc
0x8b6 JUMPI
---
0x894: JUMPDEST 
0x895: V816 = 0x1
0x897: V817 = 0xa0
0x899: V818 = 0x2
0x89b: V819 = EXP 0x2 0xa0
0x89c: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89e: V821 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x89f: V822 = 0x0
0x8a3: M[0x0] = V821
0x8a4: V823 = 0x20
0x8a8: M[0x20] = 0x0
0x8a9: V824 = 0x40
0x8ac: V825 = SHA3 0x0 0x40
0x8ad: V826 = S[V825]
0x8ae: V827 = 0xff
0x8b0: V828 = AND 0xff V826
0x8b1: V829 = ISZERO V828
0x8b2: V830 = ISZERO V829
0x8b3: V831 = 0x8bc
0x8b6: JUMPI 0x8bc V830
---
Entry stack: [V12, 0xa5, V148, V151]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0xa5, V148, V151, 0x0]

================================

Block 0x8b7
[0x8b7:0x8bb]
---
Predecessors: [0x894]
Successors: []
---
0x8b7 PUSH1 0x0
0x8b9 PUSH1 0x0
0x8bb REVERT
---
0x8b7: V832 = 0x0
0x8b9: V833 = 0x0
0x8bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V148, V151, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, 0x0]

================================

Block 0x8bc
[0x8bc:0x924]
---
Predecessors: [0x894]
Successors: [0x925, 0x926]
---
0x8bc JUMPDEST
0x8bd DUP2
0x8be SWAP1
0x8bf POP
0x8c0 PUSH32 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69
0x8e1 DUP2
0x8e2 PUSH1 0x1
0x8e4 PUSH1 0xa0
0x8e6 PUSH1 0x2
0x8e8 EXP
0x8e9 SUB
0x8ea AND
0x8eb PUSH4 0x8da5cb5b
0x8f0 PUSH1 0x0
0x8f2 PUSH1 0x40
0x8f4 MLOAD
0x8f5 PUSH1 0x20
0x8f7 ADD
0x8f8 MSTORE
0x8f9 PUSH1 0x40
0x8fb MLOAD
0x8fc DUP2
0x8fd PUSH4 0xffffffff
0x902 AND
0x903 PUSH1 0xe0
0x905 PUSH1 0x2
0x907 EXP
0x908 MUL
0x909 DUP2
0x90a MSTORE
0x90b PUSH1 0x4
0x90d ADD
0x90e DUP1
0x90f SWAP1
0x910 POP
0x911 PUSH1 0x20
0x913 PUSH1 0x40
0x915 MLOAD
0x916 DUP1
0x917 DUP4
0x918 SUB
0x919 DUP2
0x91a PUSH1 0x0
0x91c DUP8
0x91d DUP1
0x91e EXTCODESIZE
0x91f ISZERO
0x920 ISZERO
0x921 PUSH2 0x926
0x924 JUMPI
---
0x8bc: JUMPDEST 
0x8c0: V834 = 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69
0x8e2: V835 = 0x1
0x8e4: V836 = 0xa0
0x8e6: V837 = 0x2
0x8e8: V838 = EXP 0x2 0xa0
0x8e9: V839 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ea: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x8eb: V841 = 0x8da5cb5b
0x8f0: V842 = 0x0
0x8f2: V843 = 0x40
0x8f4: V844 = M[0x40]
0x8f5: V845 = 0x20
0x8f7: V846 = ADD 0x20 V844
0x8f8: M[V846] = 0x0
0x8f9: V847 = 0x40
0x8fb: V848 = M[0x40]
0x8fd: V849 = 0xffffffff
0x902: V850 = AND 0xffffffff 0x8da5cb5b
0x903: V851 = 0xe0
0x905: V852 = 0x2
0x907: V853 = EXP 0x2 0xe0
0x908: V854 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x90a: M[V848] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x90b: V855 = 0x4
0x90d: V856 = ADD 0x4 V848
0x911: V857 = 0x20
0x913: V858 = 0x40
0x915: V859 = M[0x40]
0x918: V860 = SUB V856 V859
0x91a: V861 = 0x0
0x91e: V862 = EXTCODESIZE V840
0x91f: V863 = ISZERO V862
0x920: V864 = ISZERO V863
0x921: V865 = 0x926
0x924: JUMPI 0x926 V864
---
Entry stack: [V12, 0xa5, V148, V151, 0x0]
Stack pops: 2
Stack additions: [S1, S1, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856, 0x20, V859, V860, V859, 0x0, V840]
Exit stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856, 0x20, V859, V860, V859, 0x0, V840]

================================

Block 0x925
[0x925:0x925]
---
Predecessors: [0x8bc]
Successors: []
---
0x925 INVALID
---
0x925: INVALID 
---
Entry stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856, 0x20, V859, V860, V859, 0x0, V840]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856, 0x20, V859, V860, V859, 0x0, V840]

================================

Block 0x926
[0x926:0x932]
---
Predecessors: [0x8bc]
Successors: [0x933, 0x934]
---
0x926 JUMPDEST
0x927 PUSH2 0x2c6
0x92a GAS
0x92b SUB
0x92c CALL
0x92d ISZERO
0x92e ISZERO
0x92f PUSH2 0x934
0x932 JUMPI
---
0x926: JUMPDEST 
0x927: V866 = 0x2c6
0x92a: V867 = GAS
0x92b: V868 = SUB V867 0x2c6
0x92c: V869 = CALL V868 V840 0x0 V859 V860 V859 0x20
0x92d: V870 = ISZERO V869
0x92e: V871 = ISZERO V870
0x92f: V872 = 0x934
0x932: JUMPI 0x934 V871
---
Entry stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856, 0x20, V859, V860, V859, 0x0, V840]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856]

================================

Block 0x933
[0x933:0x933]
---
Predecessors: [0x926]
Successors: []
---
0x933 INVALID
---
0x933: INVALID 
---
Entry stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856]

================================

Block 0x934
[0x934:0x983]
---
Predecessors: [0x926]
Successors: [0x984, 0x985]
---
0x934 JUMPDEST
0x935 POP
0x936 POP
0x937 POP
0x938 PUSH1 0x40
0x93a MLOAD
0x93b DUP1
0x93c MLOAD
0x93d SWAP1
0x93e POP
0x93f DUP5
0x940 DUP4
0x941 PUSH1 0x1
0x943 PUSH1 0xa0
0x945 PUSH1 0x2
0x947 EXP
0x948 SUB
0x949 AND
0x94a PUSH4 0x77c93662
0x94f PUSH1 0x0
0x951 PUSH1 0x40
0x953 MLOAD
0x954 PUSH1 0x20
0x956 ADD
0x957 MSTORE
0x958 PUSH1 0x40
0x95a MLOAD
0x95b DUP2
0x95c PUSH4 0xffffffff
0x961 AND
0x962 PUSH1 0xe0
0x964 PUSH1 0x2
0x966 EXP
0x967 MUL
0x968 DUP2
0x969 MSTORE
0x96a PUSH1 0x4
0x96c ADD
0x96d DUP1
0x96e SWAP1
0x96f POP
0x970 PUSH1 0x20
0x972 PUSH1 0x40
0x974 MLOAD
0x975 DUP1
0x976 DUP4
0x977 SUB
0x978 DUP2
0x979 PUSH1 0x0
0x97b DUP8
0x97c DUP1
0x97d EXTCODESIZE
0x97e ISZERO
0x97f ISZERO
0x980 PUSH2 0x985
0x983 JUMPI
---
0x934: JUMPDEST 
0x938: V873 = 0x40
0x93a: V874 = M[0x40]
0x93c: V875 = M[V874]
0x941: V876 = 0x1
0x943: V877 = 0xa0
0x945: V878 = 0x2
0x947: V879 = EXP 0x2 0xa0
0x948: V880 = SUB 0x10000000000000000000000000000000000000000 0x1
0x949: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x94a: V882 = 0x77c93662
0x94f: V883 = 0x0
0x951: V884 = 0x40
0x953: V885 = M[0x40]
0x954: V886 = 0x20
0x956: V887 = ADD 0x20 V885
0x957: M[V887] = 0x0
0x958: V888 = 0x40
0x95a: V889 = M[0x40]
0x95c: V890 = 0xffffffff
0x961: V891 = AND 0xffffffff 0x77c93662
0x962: V892 = 0xe0
0x964: V893 = 0x2
0x966: V894 = EXP 0x2 0xe0
0x967: V895 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x77c93662
0x969: M[V889] = 0x77c9366200000000000000000000000000000000000000000000000000000000
0x96a: V896 = 0x4
0x96c: V897 = ADD 0x4 V889
0x970: V898 = 0x20
0x972: V899 = 0x40
0x974: V900 = M[0x40]
0x977: V901 = SUB V897 V900
0x979: V902 = 0x0
0x97d: V903 = EXTCODESIZE V881
0x97e: V904 = ISZERO V903
0x97f: V905 = ISZERO V904
0x980: V906 = 0x985
0x983: JUMPI 0x985 V905
---
Entry stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V840, 0x8da5cb5b, V856]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V875, S6, V881, 0x77c93662, V897, 0x20, V900, V901, V900, 0x0, V881]
Exit stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V875, V148, V881, 0x77c93662, V897, 0x20, V900, V901, V900, 0x0, V881]

================================

Block 0x984
[0x984:0x984]
---
Predecessors: [0x934]
Successors: []
---
0x984 INVALID
---
0x984: INVALID 
---
Entry stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V875, V148, V881, 0x77c93662, V897, 0x20, V900, V901, V900, 0x0, V881]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V875, V148, V881, 0x77c93662, V897, 0x20, V900, V901, V900, 0x0, V881]

================================

Block 0x985
[0x985:0x991]
---
Predecessors: [0x934]
Successors: [0x992, 0x993]
---
0x985 JUMPDEST
0x986 PUSH2 0x2c6
0x989 GAS
0x98a SUB
0x98b CALL
0x98c ISZERO
0x98d ISZERO
0x98e PUSH2 0x993
0x991 JUMPI
---
0x985: JUMPDEST 
0x986: V907 = 0x2c6
0x989: V908 = GAS
0x98a: V909 = SUB V908 0x2c6
0x98b: V910 = CALL V909 V881 0x0 V900 V901 V900 0x20
0x98c: V911 = ISZERO V910
0x98d: V912 = ISZERO V911
0x98e: V913 = 0x993
0x991: JUMPI 0x993 V912
---
Entry stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V875, V148, V881, 0x77c93662, V897, 0x20, V900, V901, V900, 0x0, V881]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V875, V148, V881, 0x77c93662, V897]

================================

Block 0x992
[0x992:0x992]
---
Predecessors: [0x985]
Successors: []
---
0x992 INVALID
---
0x992: INVALID 
---
Entry stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V875, V148, V881, 0x77c93662, V897]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V875, V148, V881, 0x77c93662, V897]

================================

Block 0x993
[0x993:0xa31]
---
Predecessors: [0x985]
Successors: [0xa32, 0xa33]
---
0x993 JUMPDEST
0x994 POP
0x995 POP
0x996 PUSH1 0x40
0x998 DUP1
0x999 MLOAD
0x99a DUP1
0x99b MLOAD
0x99c PUSH1 0x1
0x99e PUSH1 0xa0
0x9a0 PUSH1 0x2
0x9a2 EXP
0x9a3 SUB
0x9a4 SWAP6
0x9a5 DUP7
0x9a6 AND
0x9a7 DUP3
0x9a8 MSTORE
0x9a9 SWAP4
0x9aa DUP6
0x9ab AND
0x9ac PUSH1 0x20
0x9ae DUP3
0x9af ADD
0x9b0 MSTORE
0x9b1 SWAP3
0x9b2 DUP5
0x9b3 AND
0x9b4 DUP4
0x9b5 DUP3
0x9b6 ADD
0x9b7 MSTORE
0x9b8 SWAP3
0x9b9 DUP7
0x9ba AND
0x9bb PUSH1 0x60
0x9bd DUP4
0x9be ADD
0x9bf MSTORE
0x9c0 POP
0x9c1 SWAP1
0x9c2 MLOAD
0x9c3 SWAP1
0x9c4 DUP2
0x9c5 SWAP1
0x9c6 SUB
0x9c7 PUSH1 0x80
0x9c9 ADD
0x9ca SWAP1
0x9cb LOG1
0x9cc PUSH1 0x40
0x9ce DUP1
0x9cf MLOAD
0x9d0 PUSH32 0xba45b0b800000000000000000000000000000000000000000000000000000000
0x9f1 DUP2
0x9f2 MSTORE
0x9f3 PUSH1 0x1
0x9f5 PUSH1 0xa0
0x9f7 PUSH1 0x2
0x9f9 EXP
0x9fa SUB
0x9fb CALLER
0x9fc DUP2
0x9fd AND
0x9fe PUSH1 0x4
0xa00 DUP4
0xa01 ADD
0xa02 MSTORE
0xa03 DUP6
0xa04 DUP2
0xa05 AND
0xa06 PUSH1 0x24
0xa08 DUP4
0xa09 ADD
0xa0a MSTORE
0xa0b SWAP2
0xa0c MLOAD
0xa0d SWAP2
0xa0e DUP4
0xa0f AND
0xa10 SWAP2
0xa11 PUSH4 0xba45b0b8
0xa16 SWAP2
0xa17 PUSH1 0x44
0xa19 DUP1
0xa1a DUP3
0xa1b ADD
0xa1c SWAP3
0xa1d PUSH1 0x0
0xa1f SWAP3
0xa20 SWAP1
0xa21 SWAP2
0xa22 SWAP1
0xa23 DUP3
0xa24 SWAP1
0xa25 SUB
0xa26 ADD
0xa27 DUP2
0xa28 DUP4
0xa29 DUP8
0xa2a DUP1
0xa2b EXTCODESIZE
0xa2c ISZERO
0xa2d ISZERO
0xa2e PUSH2 0xa33
0xa31 JUMPI
---
0x993: JUMPDEST 
0x996: V914 = 0x40
0x999: V915 = M[0x40]
0x99b: V916 = M[V915]
0x99c: V917 = 0x1
0x99e: V918 = 0xa0
0x9a0: V919 = 0x2
0x9a2: V920 = EXP 0x2 0xa0
0x9a3: V921 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a6: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0x9a8: M[V915] = V922
0x9ab: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x9ac: V924 = 0x20
0x9af: V925 = ADD V915 0x20
0x9b0: M[V925] = V923
0x9b3: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V916
0x9b6: V927 = ADD 0x40 V915
0x9b7: M[V927] = V926
0x9ba: V928 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x9bb: V929 = 0x60
0x9be: V930 = ADD V915 0x60
0x9bf: M[V930] = V928
0x9c2: V931 = M[0x40]
0x9c6: V932 = SUB V915 V931
0x9c7: V933 = 0x80
0x9c9: V934 = ADD 0x80 V932
0x9cb: LOG V931 V934 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69
0x9cc: V935 = 0x40
0x9cf: V936 = M[0x40]
0x9d0: V937 = 0xba45b0b800000000000000000000000000000000000000000000000000000000
0x9f2: M[V936] = 0xba45b0b800000000000000000000000000000000000000000000000000000000
0x9f3: V938 = 0x1
0x9f5: V939 = 0xa0
0x9f7: V940 = 0x2
0x9f9: V941 = EXP 0x2 0xa0
0x9fa: V942 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fb: V943 = CALLER
0x9fd: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff V943
0x9fe: V945 = 0x4
0xa01: V946 = ADD V936 0x4
0xa02: M[V946] = V944
0xa05: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0xa06: V948 = 0x24
0xa09: V949 = ADD V936 0x24
0xa0a: M[V949] = V947
0xa0c: V950 = M[0x40]
0xa0f: V951 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0xa11: V952 = 0xba45b0b8
0xa17: V953 = 0x44
0xa1b: V954 = ADD V936 0x44
0xa1d: V955 = 0x0
0xa25: V956 = SUB V936 V950
0xa26: V957 = ADD V956 0x44
0xa2b: V958 = EXTCODESIZE V951
0xa2c: V959 = ISZERO V958
0xa2d: V960 = ISZERO V959
0xa2e: V961 = 0xa33
0xa31: JUMPI 0xa33 V960
---
Entry stack: [V12, 0xa5, V148, V151, V151, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V875, V148, V881, 0x77c93662, V897]
Stack pops: 9
Stack additions: [S8, S7, S6, V951, 0xba45b0b8, V954, 0x0, V950, V957, V950, 0x0, V951]
Exit stack: [V12, 0xa5, V148, V151, V151, V951, 0xba45b0b8, V954, 0x0, V950, V957, V950, 0x0, V951]

================================

Block 0xa32
[0xa32:0xa32]
---
Predecessors: [0x993]
Successors: []
---
0xa32 INVALID
---
0xa32: INVALID 
---
Entry stack: [V12, 0xa5, V148, V151, V151, V951, 0xba45b0b8, V954, 0x0, V950, V957, V950, 0x0, V951]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, V951, 0xba45b0b8, V954, 0x0, V950, V957, V950, 0x0, V951]

================================

Block 0xa33
[0xa33:0xa3f]
---
Predecessors: [0x993]
Successors: [0x284, 0xa40]
---
0xa33 JUMPDEST
0xa34 PUSH2 0x2c6
0xa37 GAS
0xa38 SUB
0xa39 CALL
0xa3a ISZERO
0xa3b ISZERO
0xa3c PUSH2 0x284
0xa3f JUMPI
---
0xa33: JUMPDEST 
0xa34: V962 = 0x2c6
0xa37: V963 = GAS
0xa38: V964 = SUB V963 0x2c6
0xa39: V965 = CALL V964 V951 0x0 V950 V957 V950 0x0
0xa3a: V966 = ISZERO V965
0xa3b: V967 = ISZERO V966
0xa3c: V968 = 0x284
0xa3f: JUMPI 0x284 V967
---
Entry stack: [V12, 0xa5, V148, V151, V151, V951, 0xba45b0b8, V954, 0x0, V950, V957, V950, 0x0, V951]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, V951, 0xba45b0b8, V954]

================================

Block 0xa40
[0xa40:0xa40]
---
Predecessors: [0xa33]
Successors: []
---
0xa40 INVALID
---
0xa40: INVALID 
---
Entry stack: [V12, 0xa5, V148, V151, V151, V951, 0xba45b0b8, V954]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V148, V151, V151, V951, 0xba45b0b8, V954]

================================

Block 0xa41
[0xa41:0xa44]
---
Predecessors: []
Successors: [0xa45]
---
0xa41 JUMPDEST
0xa42 POP
0xa43 POP
0xa44 POP
---
0xa41: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xa45
[0xa45:0xa49]
---
Predecessors: [0xa41]
Successors: []
Has unresolved jump.
---
0xa45 JUMPDEST
0xa46 POP
0xa47 POP
0xa48 POP
0xa49 JUMP
---
0xa45: JUMPDEST 
0xa49: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xa4a
[0xa4a:0xa58]
---
Predecessors: [0x18e]
Successors: [0xf9]
---
0xa4a JUMPDEST
0xa4b PUSH1 0x1
0xa4d SLOAD
0xa4e PUSH1 0x1
0xa50 PUSH1 0xa0
0xa52 PUSH1 0x2
0xa54 EXP
0xa55 SUB
0xa56 AND
0xa57 DUP2
0xa58 JUMP
---
0xa4a: JUMPDEST 
0xa4b: V969 = 0x1
0xa4d: V970 = S[0x1]
0xa4e: V971 = 0x1
0xa50: V972 = 0xa0
0xa52: V973 = 0x2
0xa54: V974 = EXP 0x2 0xa0
0xa55: V975 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa56: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff V970
0xa58: JUMP 0xf9
---
Entry stack: [V12, 0xf9]
Stack pops: 1
Stack additions: [S0, V976]
Exit stack: [V12, 0xf9, V976]

================================

Block 0xa59
[0xa59:0xa6d]
---
Predecessors: [0x1ba]
Successors: [0x1ce]
---
0xa59 JUMPDEST
0xa5a PUSH1 0x0
0xa5c PUSH1 0x20
0xa5e DUP2
0xa5f SWAP1
0xa60 MSTORE
0xa61 SWAP1
0xa62 DUP2
0xa63 MSTORE
0xa64 PUSH1 0x40
0xa66 SWAP1
0xa67 SHA3
0xa68 SLOAD
0xa69 PUSH1 0xff
0xa6b AND
0xa6c DUP2
0xa6d JUMP
---
0xa59: JUMPDEST 
0xa5a: V977 = 0x0
0xa5c: V978 = 0x20
0xa60: M[0x20] = 0x0
0xa63: M[0x0] = V181
0xa64: V979 = 0x40
0xa67: V980 = SHA3 0x0 0x40
0xa68: V981 = S[V980]
0xa69: V982 = 0xff
0xa6b: V983 = AND 0xff V981
0xa6d: JUMP 0x1ce
---
Entry stack: [V12, 0x1ce, V181]
Stack pops: 2
Stack additions: [S1, V983]
Exit stack: [V12, 0x1ce, V983]

================================

Block 0xa6e
[0xa6e:0xa90]
---
Predecessors: [0x1ea]
Successors: [0xa91, 0xa96]
---
0xa6e JUMPDEST
0xa6f PUSH1 0x1
0xa71 PUSH1 0xa0
0xa73 PUSH1 0x2
0xa75 EXP
0xa76 SUB
0xa77 DUP2
0xa78 AND
0xa79 PUSH1 0x0
0xa7b SWAP1
0xa7c DUP2
0xa7d MSTORE
0xa7e PUSH1 0x20
0xa80 DUP2
0xa81 SWAP1
0xa82 MSTORE
0xa83 PUSH1 0x40
0xa85 DUP2
0xa86 SHA3
0xa87 SLOAD
0xa88 PUSH1 0xff
0xa8a AND
0xa8b ISZERO
0xa8c ISZERO
0xa8d PUSH2 0xa96
0xa90 JUMPI
---
0xa6e: JUMPDEST 
0xa6f: V984 = 0x1
0xa71: V985 = 0xa0
0xa73: V986 = 0x2
0xa75: V987 = EXP 0x2 0xa0
0xa76: V988 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa78: V989 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0xa79: V990 = 0x0
0xa7d: M[0x0] = V989
0xa7e: V991 = 0x20
0xa82: M[0x20] = 0x0
0xa83: V992 = 0x40
0xa86: V993 = SHA3 0x0 0x40
0xa87: V994 = S[V993]
0xa88: V995 = 0xff
0xa8a: V996 = AND 0xff V994
0xa8b: V997 = ISZERO V996
0xa8c: V998 = ISZERO V997
0xa8d: V999 = 0xa96
0xa90: JUMPI 0xa96 V998
---
Entry stack: [V12, 0xa5, V202]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0xa5, V202, 0x0]

================================

Block 0xa91
[0xa91:0xa95]
---
Predecessors: [0xa6e]
Successors: []
---
0xa91 PUSH1 0x0
0xa93 PUSH1 0x0
0xa95 REVERT
---
0xa91: V1000 = 0x0
0xa93: V1001 = 0x0
0xa95: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V202, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V202, 0x0]

================================

Block 0xa96
[0xa96:0xb07]
---
Predecessors: [0xa6e]
Successors: [0xb08, 0xb09]
---
0xa96 JUMPDEST
0xa97 POP
0xa98 PUSH1 0x1
0xa9a PUSH1 0xa0
0xa9c PUSH1 0x2
0xa9e EXP
0xa9f SUB
0xaa0 DUP1
0xaa1 DUP3
0xaa2 AND
0xaa3 PUSH1 0x0
0xaa5 DUP2
0xaa6 DUP2
0xaa7 MSTORE
0xaa8 PUSH1 0x20
0xaaa DUP2
0xaab SWAP1
0xaac MSTORE
0xaad PUSH1 0x40
0xaaf DUP1
0xab0 DUP3
0xab1 SHA3
0xab2 DUP1
0xab3 SLOAD
0xab4 PUSH1 0xff
0xab6 NOT
0xab7 AND
0xab8 SWAP1
0xab9 SSTORE
0xaba DUP1
0xabb MLOAD
0xabc PUSH32 0xc8db233e00000000000000000000000000000000000000000000000000000000
0xadd DUP2
0xade MSTORE
0xadf CALLER
0xae0 SWAP1
0xae1 SWAP5
0xae2 AND
0xae3 PUSH1 0x4
0xae5 DUP6
0xae6 ADD
0xae7 MSTORE
0xae8 MLOAD
0xae9 DUP5
0xaea SWAP4
0xaeb PUSH4 0xc8db233e
0xaf0 SWAP3
0xaf1 PUSH1 0x24
0xaf3 DUP1
0xaf4 DUP4
0xaf5 ADD
0xaf6 SWAP4
0xaf7 SWAP2
0xaf8 SWAP3
0xaf9 DUP3
0xafa SWAP1
0xafb SUB
0xafc ADD
0xafd DUP2
0xafe DUP4
0xaff DUP8
0xb00 DUP1
0xb01 EXTCODESIZE
0xb02 ISZERO
0xb03 ISZERO
0xb04 PUSH2 0xb09
0xb07 JUMPI
---
0xa96: JUMPDEST 
0xa98: V1002 = 0x1
0xa9a: V1003 = 0xa0
0xa9c: V1004 = 0x2
0xa9e: V1005 = EXP 0x2 0xa0
0xa9f: V1006 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa2: V1007 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0xaa3: V1008 = 0x0
0xaa7: M[0x0] = V1007
0xaa8: V1009 = 0x20
0xaac: M[0x20] = 0x0
0xaad: V1010 = 0x40
0xab1: V1011 = SHA3 0x0 0x40
0xab3: V1012 = S[V1011]
0xab4: V1013 = 0xff
0xab6: V1014 = NOT 0xff
0xab7: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1012
0xab9: S[V1011] = V1015
0xabb: V1016 = M[0x40]
0xabc: V1017 = 0xc8db233e00000000000000000000000000000000000000000000000000000000
0xade: M[V1016] = 0xc8db233e00000000000000000000000000000000000000000000000000000000
0xadf: V1018 = CALLER
0xae2: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V1018
0xae3: V1020 = 0x4
0xae6: V1021 = ADD V1016 0x4
0xae7: M[V1021] = V1019
0xae8: V1022 = M[0x40]
0xaeb: V1023 = 0xc8db233e
0xaf1: V1024 = 0x24
0xaf5: V1025 = ADD V1016 0x24
0xafb: V1026 = SUB V1016 V1022
0xafc: V1027 = ADD V1026 0x24
0xb01: V1028 = EXTCODESIZE V1007
0xb02: V1029 = ISZERO V1028
0xb03: V1030 = ISZERO V1029
0xb04: V1031 = 0xb09
0xb07: JUMPI 0xb09 V1030
---
Entry stack: [V12, 0xa5, V202, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V1007, 0xc8db233e, V1025, 0x0, V1022, V1027, V1022, 0x0, V1007]
Exit stack: [V12, 0xa5, V202, V202, V1007, 0xc8db233e, V1025, 0x0, V1022, V1027, V1022, 0x0, V1007]

================================

Block 0xb08
[0xb08:0xb08]
---
Predecessors: [0xa96]
Successors: []
---
0xb08 INVALID
---
0xb08: INVALID 
---
Entry stack: [V12, 0xa5, V202, V202, V1007, 0xc8db233e, V1025, 0x0, V1022, V1027, V1022, 0x0, V1007]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V202, V202, V1007, 0xc8db233e, V1025, 0x0, V1022, V1027, V1022, 0x0, V1007]

================================

Block 0xb09
[0xb09:0xb15]
---
Predecessors: [0xa96]
Successors: [0xb16, 0xb17]
---
0xb09 JUMPDEST
0xb0a PUSH2 0x2c6
0xb0d GAS
0xb0e SUB
0xb0f CALL
0xb10 ISZERO
0xb11 ISZERO
0xb12 PUSH2 0xb17
0xb15 JUMPI
---
0xb09: JUMPDEST 
0xb0a: V1032 = 0x2c6
0xb0d: V1033 = GAS
0xb0e: V1034 = SUB V1033 0x2c6
0xb0f: V1035 = CALL V1034 V1007 0x0 V1022 V1027 V1022 0x0
0xb10: V1036 = ISZERO V1035
0xb11: V1037 = ISZERO V1036
0xb12: V1038 = 0xb17
0xb15: JUMPI 0xb17 V1037
---
Entry stack: [V12, 0xa5, V202, V202, V1007, 0xc8db233e, V1025, 0x0, V1022, V1027, V1022, 0x0, V1007]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V202, V202, V1007, 0xc8db233e, V1025]

================================

Block 0xb16
[0xb16:0xb16]
---
Predecessors: [0xb09]
Successors: []
---
0xb16 INVALID
---
0xb16: INVALID 
---
Entry stack: [V12, 0xa5, V202, V202, V1007, 0xc8db233e, V1025]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V202, V202, V1007, 0xc8db233e, V1025]

================================

Block 0xb17
[0xb17:0xb7f]
---
Predecessors: [0xb09]
Successors: [0x3a1, 0xb80]
---
0xb17 JUMPDEST
0xb18 POP
0xb19 POP
0xb1a POP
0xb1b PUSH32 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7
0xb3c DUP2
0xb3d PUSH1 0x1
0xb3f PUSH1 0xa0
0xb41 PUSH1 0x2
0xb43 EXP
0xb44 SUB
0xb45 AND
0xb46 PUSH4 0x1d143848
0xb4b PUSH1 0x0
0xb4d PUSH1 0x40
0xb4f MLOAD
0xb50 PUSH1 0x20
0xb52 ADD
0xb53 MSTORE
0xb54 PUSH1 0x40
0xb56 MLOAD
0xb57 DUP2
0xb58 PUSH4 0xffffffff
0xb5d AND
0xb5e PUSH1 0xe0
0xb60 PUSH1 0x2
0xb62 EXP
0xb63 MUL
0xb64 DUP2
0xb65 MSTORE
0xb66 PUSH1 0x4
0xb68 ADD
0xb69 DUP1
0xb6a SWAP1
0xb6b POP
0xb6c PUSH1 0x20
0xb6e PUSH1 0x40
0xb70 MLOAD
0xb71 DUP1
0xb72 DUP4
0xb73 SUB
0xb74 DUP2
0xb75 PUSH1 0x0
0xb77 DUP8
0xb78 DUP1
0xb79 EXTCODESIZE
0xb7a ISZERO
0xb7b ISZERO
0xb7c PUSH2 0x3a1
0xb7f JUMPI
---
0xb17: JUMPDEST 
0xb1b: V1039 = 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7
0xb3d: V1040 = 0x1
0xb3f: V1041 = 0xa0
0xb41: V1042 = 0x2
0xb43: V1043 = EXP 0x2 0xa0
0xb44: V1044 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb45: V1045 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0xb46: V1046 = 0x1d143848
0xb4b: V1047 = 0x0
0xb4d: V1048 = 0x40
0xb4f: V1049 = M[0x40]
0xb50: V1050 = 0x20
0xb52: V1051 = ADD 0x20 V1049
0xb53: M[V1051] = 0x0
0xb54: V1052 = 0x40
0xb56: V1053 = M[0x40]
0xb58: V1054 = 0xffffffff
0xb5d: V1055 = AND 0xffffffff 0x1d143848
0xb5e: V1056 = 0xe0
0xb60: V1057 = 0x2
0xb62: V1058 = EXP 0x2 0xe0
0xb63: V1059 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1d143848
0xb65: M[V1053] = 0x1d14384800000000000000000000000000000000000000000000000000000000
0xb66: V1060 = 0x4
0xb68: V1061 = ADD 0x4 V1053
0xb6c: V1062 = 0x20
0xb6e: V1063 = 0x40
0xb70: V1064 = M[0x40]
0xb73: V1065 = SUB V1061 V1064
0xb75: V1066 = 0x0
0xb79: V1067 = EXTCODESIZE V1045
0xb7a: V1068 = ISZERO V1067
0xb7b: V1069 = ISZERO V1068
0xb7c: V1070 = 0x3a1
0xb7f: JUMPI 0x3a1 V1069
---
Entry stack: [V12, 0xa5, V202, V202, V1007, 0xc8db233e, V1025]
Stack pops: 4
Stack additions: [S3, 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, V1045, 0x1d143848, V1061, 0x20, V1064, V1065, V1064, 0x0, V1045]
Exit stack: [V12, 0xa5, V202, V202, 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, V1045, 0x1d143848, V1061, 0x20, V1064, V1065, V1064, 0x0, V1045]

================================

Block 0xb80
[0xb80:0xb80]
---
Predecessors: [0xb17]
Successors: []
---
0xb80 INVALID
---
0xb80: INVALID 
---
Entry stack: [V12, 0xa5, V202, V202, 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, V1045, 0x1d143848, V1061, 0x20, V1064, V1065, V1064, 0x0, V1045]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V202, V202, 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, V1045, 0x1d143848, V1061, 0x20, V1064, V1065, V1064, 0x0, V1045]

================================

Block 0xb81
[0xb81:0xb8d]
---
Predecessors: []
Successors: [0x3af, 0xb8e]
---
0xb81 JUMPDEST
0xb82 PUSH2 0x2c6
0xb85 GAS
0xb86 SUB
0xb87 CALL
0xb88 ISZERO
0xb89 ISZERO
0xb8a PUSH2 0x3af
0xb8d JUMPI
---
0xb81: JUMPDEST 
0xb82: V1071 = 0x2c6
0xb85: V1072 = GAS
0xb86: V1073 = SUB V1072 0x2c6
0xb87: V1074 = CALL V1073 S0 S1 S2 S3 S4 S5
0xb88: V1075 = ISZERO V1074
0xb89: V1076 = ISZERO V1075
0xb8a: V1077 = 0x3af
0xb8d: JUMPI 0x3af V1076
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xb8e
[0xb8e:0xbdd]
---
Predecessors: [0xb81]
Successors: [0x3ff, 0xbde]
---
0xb8e INVALID
0xb8f JUMPDEST
0xb90 POP
0xb91 POP
0xb92 POP
0xb93 PUSH1 0x40
0xb95 MLOAD
0xb96 DUP1
0xb97 MLOAD
0xb98 SWAP1
0xb99 POP
0xb9a DUP3
0xb9b PUSH1 0x1
0xb9d PUSH1 0xa0
0xb9f PUSH1 0x2
0xba1 EXP
0xba2 SUB
0xba3 AND
0xba4 PUSH4 0x8da5cb5b
0xba9 PUSH1 0x0
0xbab PUSH1 0x40
0xbad MLOAD
0xbae PUSH1 0x20
0xbb0 ADD
0xbb1 MSTORE
0xbb2 PUSH1 0x40
0xbb4 MLOAD
0xbb5 DUP2
0xbb6 PUSH4 0xffffffff
0xbbb AND
0xbbc PUSH1 0xe0
0xbbe PUSH1 0x2
0xbc0 EXP
0xbc1 MUL
0xbc2 DUP2
0xbc3 MSTORE
0xbc4 PUSH1 0x4
0xbc6 ADD
0xbc7 DUP1
0xbc8 SWAP1
0xbc9 POP
0xbca PUSH1 0x20
0xbcc PUSH1 0x40
0xbce MLOAD
0xbcf DUP1
0xbd0 DUP4
0xbd1 SUB
0xbd2 DUP2
0xbd3 PUSH1 0x0
0xbd5 DUP8
0xbd6 DUP1
0xbd7 EXTCODESIZE
0xbd8 ISZERO
0xbd9 ISZERO
0xbda PUSH2 0x3ff
0xbdd JUMPI
---
0xb8e: INVALID 
0xb8f: JUMPDEST 
0xb93: V1078 = 0x40
0xb95: V1079 = M[0x40]
0xb97: V1080 = M[V1079]
0xb9b: V1081 = 0x1
0xb9d: V1082 = 0xa0
0xb9f: V1083 = 0x2
0xba1: V1084 = EXP 0x2 0xa0
0xba2: V1085 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba3: V1086 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xba4: V1087 = 0x8da5cb5b
0xba9: V1088 = 0x0
0xbab: V1089 = 0x40
0xbad: V1090 = M[0x40]
0xbae: V1091 = 0x20
0xbb0: V1092 = ADD 0x20 V1090
0xbb1: M[V1092] = 0x0
0xbb2: V1093 = 0x40
0xbb4: V1094 = M[0x40]
0xbb6: V1095 = 0xffffffff
0xbbb: V1096 = AND 0xffffffff 0x8da5cb5b
0xbbc: V1097 = 0xe0
0xbbe: V1098 = 0x2
0xbc0: V1099 = EXP 0x2 0xe0
0xbc1: V1100 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xbc3: M[V1094] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xbc4: V1101 = 0x4
0xbc6: V1102 = ADD 0x4 V1094
0xbca: V1103 = 0x20
0xbcc: V1104 = 0x40
0xbce: V1105 = M[0x40]
0xbd1: V1106 = SUB V1102 V1105
0xbd3: V1107 = 0x0
0xbd7: V1108 = EXTCODESIZE V1086
0xbd8: V1109 = ISZERO V1108
0xbd9: V1110 = ISZERO V1109
0xbda: V1111 = 0x3ff
0xbdd: JUMPI 0x3ff V1110
---
Entry stack: []
Stack pops: 0
Stack additions: [V1086, 0x0, V1105, V1106, V1105, 0x20, V1102, 0x8da5cb5b, V1086, V1080, S3, S4]
Exit stack: []

================================

Block 0xbde
[0xbde:0xbeb]
---
Predecessors: [0xb8e]
Successors: [0x40d, 0xbec]
---
0xbde INVALID
0xbdf JUMPDEST
0xbe0 PUSH2 0x2c6
0xbe3 GAS
0xbe4 SUB
0xbe5 CALL
0xbe6 ISZERO
0xbe7 ISZERO
0xbe8 PUSH2 0x40d
0xbeb JUMPI
---
0xbde: INVALID 
0xbdf: JUMPDEST 
0xbe0: V1112 = 0x2c6
0xbe3: V1113 = GAS
0xbe4: V1114 = SUB V1113 0x2c6
0xbe5: V1115 = CALL V1114 S0 S1 S2 S3 S4 S5
0xbe6: V1116 = ISZERO V1115
0xbe7: V1117 = ISZERO V1116
0xbe8: V1118 = 0x40d
0xbeb: JUMPI 0x40d V1117
---
Entry stack: [S11, S10, V1080, V1086, 0x8da5cb5b, V1102, 0x20, V1105, V1106, V1105, 0x0, V1086]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbec
[0xbec:0xc3b]
---
Predecessors: [0xbde]
Successors: [0x45d, 0xc3c]
---
0xbec INVALID
0xbed JUMPDEST
0xbee POP
0xbef POP
0xbf0 POP
0xbf1 PUSH1 0x40
0xbf3 MLOAD
0xbf4 DUP1
0xbf5 MLOAD
0xbf6 SWAP1
0xbf7 POP
0xbf8 DUP4
0xbf9 PUSH1 0x1
0xbfb PUSH1 0xa0
0xbfd PUSH1 0x2
0xbff EXP
0xc00 SUB
0xc01 AND
0xc02 PUSH4 0x77c93662
0xc07 PUSH1 0x0
0xc09 PUSH1 0x40
0xc0b MLOAD
0xc0c PUSH1 0x20
0xc0e ADD
0xc0f MSTORE
0xc10 PUSH1 0x40
0xc12 MLOAD
0xc13 DUP2
0xc14 PUSH4 0xffffffff
0xc19 AND
0xc1a PUSH1 0xe0
0xc1c PUSH1 0x2
0xc1e EXP
0xc1f MUL
0xc20 DUP2
0xc21 MSTORE
0xc22 PUSH1 0x4
0xc24 ADD
0xc25 DUP1
0xc26 SWAP1
0xc27 POP
0xc28 PUSH1 0x20
0xc2a PUSH1 0x40
0xc2c MLOAD
0xc2d DUP1
0xc2e DUP4
0xc2f SUB
0xc30 DUP2
0xc31 PUSH1 0x0
0xc33 DUP8
0xc34 DUP1
0xc35 EXTCODESIZE
0xc36 ISZERO
0xc37 ISZERO
0xc38 PUSH2 0x45d
0xc3b JUMPI
---
0xbec: INVALID 
0xbed: JUMPDEST 
0xbf1: V1119 = 0x40
0xbf3: V1120 = M[0x40]
0xbf5: V1121 = M[V1120]
0xbf9: V1122 = 0x1
0xbfb: V1123 = 0xa0
0xbfd: V1124 = 0x2
0xbff: V1125 = EXP 0x2 0xa0
0xc00: V1126 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc01: V1127 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xc02: V1128 = 0x77c93662
0xc07: V1129 = 0x0
0xc09: V1130 = 0x40
0xc0b: V1131 = M[0x40]
0xc0c: V1132 = 0x20
0xc0e: V1133 = ADD 0x20 V1131
0xc0f: M[V1133] = 0x0
0xc10: V1134 = 0x40
0xc12: V1135 = M[0x40]
0xc14: V1136 = 0xffffffff
0xc19: V1137 = AND 0xffffffff 0x77c93662
0xc1a: V1138 = 0xe0
0xc1c: V1139 = 0x2
0xc1e: V1140 = EXP 0x2 0xe0
0xc1f: V1141 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x77c93662
0xc21: M[V1135] = 0x77c9366200000000000000000000000000000000000000000000000000000000
0xc22: V1142 = 0x4
0xc24: V1143 = ADD 0x4 V1135
0xc28: V1144 = 0x20
0xc2a: V1145 = 0x40
0xc2c: V1146 = M[0x40]
0xc2f: V1147 = SUB V1143 V1146
0xc31: V1148 = 0x0
0xc35: V1149 = EXTCODESIZE V1127
0xc36: V1150 = ISZERO V1149
0xc37: V1151 = ISZERO V1150
0xc38: V1152 = 0x45d
0xc3b: JUMPI 0x45d V1151
---
Entry stack: []
Stack pops: 0
Stack additions: [V1127, 0x0, V1146, V1147, V1146, 0x20, V1143, 0x77c93662, V1127, V1121, S3, S4, S5]
Exit stack: []

================================

Block 0xc3c
[0xc3c:0xc49]
---
Predecessors: [0xbec]
Successors: [0x46b, 0xc4a]
---
0xc3c INVALID
0xc3d JUMPDEST
0xc3e PUSH2 0x2c6
0xc41 GAS
0xc42 SUB
0xc43 CALL
0xc44 ISZERO
0xc45 ISZERO
0xc46 PUSH2 0x46b
0xc49 JUMPI
---
0xc3c: INVALID 
0xc3d: JUMPDEST 
0xc3e: V1153 = 0x2c6
0xc41: V1154 = GAS
0xc42: V1155 = SUB V1154 0x2c6
0xc43: V1156 = CALL V1155 S0 S1 S2 S3 S4 S5
0xc44: V1157 = ISZERO V1156
0xc45: V1158 = ISZERO V1157
0xc46: V1159 = 0x46b
0xc49: JUMPI 0x46b V1158
---
Entry stack: [S12, S11, S10, V1121, V1127, 0x77c93662, V1143, 0x20, V1146, V1147, V1146, 0x0, V1127]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc4a
[0xc4a:0xc83]
---
Predecessors: [0xc3c]
Successors: [0xc84]
---
0xc4a INVALID
0xc4b JUMPDEST
0xc4c POP
0xc4d POP
0xc4e PUSH1 0x40
0xc50 DUP1
0xc51 MLOAD
0xc52 DUP1
0xc53 MLOAD
0xc54 PUSH1 0x1
0xc56 PUSH1 0xa0
0xc58 PUSH1 0x2
0xc5a EXP
0xc5b SUB
0xc5c SWAP6
0xc5d DUP7
0xc5e AND
0xc5f DUP3
0xc60 MSTORE
0xc61 SWAP4
0xc62 DUP6
0xc63 AND
0xc64 PUSH1 0x20
0xc66 DUP3
0xc67 ADD
0xc68 MSTORE
0xc69 SWAP3
0xc6a DUP5
0xc6b AND
0xc6c DUP4
0xc6d DUP3
0xc6e ADD
0xc6f MSTORE
0xc70 SWAP3
0xc71 DUP7
0xc72 AND
0xc73 PUSH1 0x60
0xc75 DUP4
0xc76 ADD
0xc77 MSTORE
0xc78 POP
0xc79 SWAP1
0xc7a MLOAD
0xc7b SWAP1
0xc7c DUP2
0xc7d SWAP1
0xc7e SUB
0xc7f PUSH1 0x80
0xc81 ADD
0xc82 SWAP1
0xc83 LOG1
---
0xc4a: INVALID 
0xc4b: JUMPDEST 
0xc4e: V1160 = 0x40
0xc51: V1161 = M[0x40]
0xc53: V1162 = M[V1161]
0xc54: V1163 = 0x1
0xc56: V1164 = 0xa0
0xc58: V1165 = 0x2
0xc5a: V1166 = EXP 0x2 0xa0
0xc5b: V1167 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5e: V1168 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc60: M[V1161] = V1168
0xc63: V1169 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc64: V1170 = 0x20
0xc67: V1171 = ADD V1161 0x20
0xc68: M[V1171] = V1169
0xc6b: V1172 = AND 0xffffffffffffffffffffffffffffffffffffffff V1162
0xc6e: V1173 = ADD 0x40 V1161
0xc6f: M[V1173] = V1172
0xc72: V1174 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0xc73: V1175 = 0x60
0xc76: V1176 = ADD V1161 0x60
0xc77: M[V1176] = V1174
0xc7a: V1177 = M[0x40]
0xc7e: V1178 = SUB V1161 V1177
0xc7f: V1179 = 0x80
0xc81: V1180 = ADD 0x80 V1178
0xc83: LOG V1177 V1180 S5
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, S7]
Exit stack: []

================================

Block 0xc84
[0xc84:0xc87]
---
Predecessors: [0xc4a]
Successors: []
Has unresolved jump.
---
0xc84 JUMPDEST
0xc85 POP
0xc86 POP
0xc87 JUMP
---
0xc84: JUMPDEST 
0xc87: JUMP S2
---
Entry stack: [S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xc88
[0xc88:0xc96]
---
Predecessors: [0x208]
Successors: [0xf9]
---
0xc88 JUMPDEST
0xc89 PUSH1 0x2
0xc8b SLOAD
0xc8c PUSH1 0x1
0xc8e PUSH1 0xa0
0xc90 PUSH1 0x2
0xc92 EXP
0xc93 SUB
0xc94 AND
0xc95 DUP2
0xc96 JUMP
---
0xc88: JUMPDEST 
0xc89: V1181 = 0x2
0xc8b: V1182 = S[0x2]
0xc8c: V1183 = 0x1
0xc8e: V1184 = 0xa0
0xc90: V1185 = 0x2
0xc92: V1186 = EXP 0x2 0xa0
0xc93: V1187 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc94: V1188 = AND 0xffffffffffffffffffffffffffffffffffffffff V1182
0xc96: JUMP 0xf9
---
Entry stack: [V12, 0xf9]
Stack pops: 1
Stack additions: [S0, V1188]
Exit stack: [V12, 0xf9, V1188]

================================

Block 0xc97
[0xc97:0xca6]
---
Predecessors: [0x613]
Successors: [0x63c]
---
0xc97 JUMPDEST
0xc98 PUSH1 0x40
0xc9a MLOAD
0xc9b PUSH2 0x855
0xc9e DUP1
0xc9f PUSH2 0xca8
0xca2 DUP4
0xca3 CODECOPY
0xca4 ADD
0xca5 SWAP1
0xca6 JUMP
---
0xc97: JUMPDEST 
0xc98: V1189 = 0x40
0xc9a: V1190 = M[0x40]
0xc9b: V1191 = 0x855
0xc9f: V1192 = 0xca8
0xca3: CODECOPY V1190 0xca8 0x855
0xca4: V1193 = ADD 0x855 V1190
0xca6: JUMP 0x63c
---
Entry stack: [V12, 0xa5, V53, V55, V63, V66, V68, S21, {0xa5, 0x284}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V600, V606, S7, S6, S5, S4, S3, S2, V607, 0x63c]
Stack pops: 1
Stack additions: [V1193]
Exit stack: [V12, 0xa5, V53, V55, V63, V66, V68, S21, {0xa5, 0x284}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V600, V606, S7, S6, S5, S4, S3, S2, V607, V1193]

================================

Block 0xca7
[0xca7:0xcf6]
---
Predecessors: []
Successors: [0xcf7]
---
0xca7 STOP
0xca8 PUSH1 0x60
0xcaa PUSH1 0x40
0xcac MSTORE
0xcad PUSH1 0x40
0xcaf MLOAD
0xcb0 PUSH2 0x120
0xcb3 DUP1
0xcb4 PUSH2 0x855
0xcb7 DUP4
0xcb8 CODECOPY
0xcb9 DUP2
0xcba ADD
0xcbb PUSH1 0x40
0xcbd SWAP1
0xcbe DUP2
0xcbf MSTORE
0xcc0 DUP2
0xcc1 MLOAD
0xcc2 PUSH1 0x20
0xcc4 DUP4
0xcc5 ADD
0xcc6 MLOAD
0xcc7 SWAP2
0xcc8 DUP4
0xcc9 ADD
0xcca MLOAD
0xccb PUSH1 0x60
0xccd DUP5
0xcce ADD
0xccf MLOAD
0xcd0 PUSH1 0x80
0xcd2 DUP6
0xcd3 ADD
0xcd4 MLOAD
0xcd5 PUSH1 0xa0
0xcd7 DUP7
0xcd8 ADD
0xcd9 MLOAD
0xcda PUSH1 0xc0
0xcdc DUP8
0xcdd ADD
0xcde MLOAD
0xcdf PUSH1 0xe0
0xce1 DUP9
0xce2 ADD
0xce3 MLOAD
0xce4 PUSH2 0x100
0xce7 SWAP1
0xce8 SWAP9
0xce9 ADD
0xcea MLOAD
0xceb SWAP6
0xcec SWAP8
0xced SWAP5
0xcee SWAP6
0xcef SWAP4
0xcf0 SWAP5
0xcf1 SWAP3
0xcf2 SWAP4
0xcf3 SWAP2
0xcf4 SWAP3
0xcf5 SWAP1
0xcf6 SWAP2
---
0xca7: STOP 
0xca8: V1194 = 0x60
0xcaa: V1195 = 0x40
0xcac: M[0x40] = 0x60
0xcad: V1196 = 0x40
0xcaf: V1197 = M[0x40]
0xcb0: V1198 = 0x120
0xcb4: V1199 = 0x855
0xcb8: CODECOPY V1197 0x855 0x120
0xcba: V1200 = ADD V1197 0x120
0xcbb: V1201 = 0x40
0xcbf: M[0x40] = V1200
0xcc1: V1202 = M[V1197]
0xcc2: V1203 = 0x20
0xcc5: V1204 = ADD V1197 0x20
0xcc6: V1205 = M[V1204]
0xcc9: V1206 = ADD V1197 0x40
0xcca: V1207 = M[V1206]
0xccb: V1208 = 0x60
0xcce: V1209 = ADD V1197 0x60
0xccf: V1210 = M[V1209]
0xcd0: V1211 = 0x80
0xcd3: V1212 = ADD V1197 0x80
0xcd4: V1213 = M[V1212]
0xcd5: V1214 = 0xa0
0xcd8: V1215 = ADD V1197 0xa0
0xcd9: V1216 = M[V1215]
0xcda: V1217 = 0xc0
0xcdd: V1218 = ADD V1197 0xc0
0xcde: V1219 = M[V1218]
0xcdf: V1220 = 0xe0
0xce2: V1221 = ADD V1197 0xe0
0xce3: V1222 = M[V1221]
0xce4: V1223 = 0x100
0xce9: V1224 = ADD V1197 0x100
0xcea: V1225 = M[V1224]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1225, V1222, V1219, V1216, V1213, V1210, V1207, V1205, V1202]
Exit stack: []

================================

Block 0xcf7
[0xcf7:0xd0b]
---
Predecessors: [0xca7]
Successors: [0xd0c]
---
0xcf7 JUMPDEST
0xcf8 PUSH1 0x1
0xcfa PUSH1 0xa0
0xcfc PUSH1 0x2
0xcfe EXP
0xcff SUB
0xd00 DUP5
0xd01 DUP2
0xd02 AND
0xd03 SWAP1
0xd04 DUP5
0xd05 AND
0xd06 EQ
0xd07 ISZERO
0xd08 PUSH2 0x69
0xd0b JUMPI
---
0xcf7: JUMPDEST 
0xcf8: V1226 = 0x1
0xcfa: V1227 = 0xa0
0xcfc: V1228 = 0x2
0xcfe: V1229 = EXP 0x2 0xa0
0xcff: V1230 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd02: V1231 = AND 0xffffffffffffffffffffffffffffffffffffffff V1216
0xd05: V1232 = AND V1219 0xffffffffffffffffffffffffffffffffffffffff
0xd06: V1233 = EQ V1232 V1231
0xd07: V1234 = ISZERO V1233
0xd08: V1235 = 0x69
0xd0b: THROWI V1234
---
Entry stack: [V1202, V1205, V1207, V1210, V1213, V1216, V1219, V1222, V1225]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V1202, V1205, V1207, V1210, V1213, V1216, V1219, V1222, V1225]

================================

Block 0xd0c
[0xd0c:0xd19]
---
Predecessors: [0xcf7]
Successors: [0xd1a]
---
0xd0c PUSH1 0x0
0xd0e PUSH1 0x0
0xd10 REVERT
0xd11 JUMPDEST
0xd12 TIMESTAMP
0xd13 DUP3
0xd14 SWAP1
0xd15 LT
0xd16 PUSH2 0x77
0xd19 JUMPI
---
0xd0c: V1236 = 0x0
0xd0e: V1237 = 0x0
0xd10: REVERT 0x0 0x0
0xd11: JUMPDEST 
0xd12: V1238 = TIMESTAMP
0xd15: V1239 = LT V1238 S1
0xd16: V1240 = 0x77
0xd19: THROWI V1239
---
Entry stack: [V1202, V1205, V1207, V1210, V1213, V1216, V1219, V1222, V1225]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xd1a
[0xd1a:0xd38]
---
Predecessors: [0xd0c]
Successors: [0xd39]
---
0xd1a PUSH1 0x0
0xd1c PUSH1 0x0
0xd1e REVERT
0xd1f JUMPDEST
0xd20 PUSH1 0x5
0xd22 SLOAD
0xd23 PUSH1 0x7
0xd25 SLOAD
0xd26 PUSH1 0x1
0xd28 PUSH1 0xa0
0xd2a PUSH1 0x2
0xd2c EXP
0xd2d SUB
0xd2e SWAP1
0xd2f DUP2
0xd30 AND
0xd31 SWAP2
0xd32 AND
0xd33 EQ
0xd34 DUP1
0xd35 PUSH2 0xa6
0xd38 JUMPI
---
0xd1a: V1241 = 0x0
0xd1c: V1242 = 0x0
0xd1e: REVERT 0x0 0x0
0xd1f: JUMPDEST 
0xd20: V1243 = 0x5
0xd22: V1244 = S[0x5]
0xd23: V1245 = 0x7
0xd25: V1246 = S[0x7]
0xd26: V1247 = 0x1
0xd28: V1248 = 0xa0
0xd2a: V1249 = 0x2
0xd2c: V1250 = EXP 0x2 0xa0
0xd2d: V1251 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd30: V1252 = AND 0xffffffffffffffffffffffffffffffffffffffff V1246
0xd32: V1253 = AND V1244 0xffffffffffffffffffffffffffffffffffffffff
0xd33: V1254 = EQ V1253 V1252
0xd35: V1255 = 0xa6
0xd38: THROWI V1254
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [V1254]
Exit stack: []

================================

Block 0xd39
[0xd39:0xd4d]
---
Predecessors: [0xd1a]
Successors: [0xd4e]
---
0xd39 POP
0xd3a PUSH1 0x5
0xd3c SLOAD
0xd3d PUSH1 0x6
0xd3f SLOAD
0xd40 PUSH1 0x1
0xd42 PUSH1 0xa0
0xd44 PUSH1 0x2
0xd46 EXP
0xd47 SUB
0xd48 SWAP1
0xd49 DUP2
0xd4a AND
0xd4b SWAP2
0xd4c AND
0xd4d EQ
---
0xd3a: V1256 = 0x5
0xd3c: V1257 = S[0x5]
0xd3d: V1258 = 0x6
0xd3f: V1259 = S[0x6]
0xd40: V1260 = 0x1
0xd42: V1261 = 0xa0
0xd44: V1262 = 0x2
0xd46: V1263 = EXP 0x2 0xa0
0xd47: V1264 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4a: V1265 = AND 0xffffffffffffffffffffffffffffffffffffffff V1259
0xd4c: V1266 = AND V1257 0xffffffffffffffffffffffffffffffffffffffff
0xd4d: V1267 = EQ V1266 V1265
---
Entry stack: [V1254]
Stack pops: 1
Stack additions: [V1267]
Exit stack: [V1267]

================================

Block 0xd4e
[0xd4e:0xd54]
---
Predecessors: [0xd39]
Successors: [0xd55]
---
0xd4e JUMPDEST
0xd4f ISZERO
0xd50 ISZERO
0xd51 PUSH2 0xb2
0xd54 JUMPI
---
0xd4e: JUMPDEST 
0xd4f: V1268 = ISZERO V1267
0xd50: V1269 = ISZERO V1268
0xd51: V1270 = 0xb2
0xd54: THROWI V1269
---
Entry stack: [V1267]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xd55
[0xd55:0xdd8]
---
Predecessors: [0xd4e]
Successors: [0xdd9]
---
0xd55 PUSH1 0x0
0xd57 PUSH1 0x0
0xd59 REVERT
0xd5a JUMPDEST
0xd5b PUSH1 0x1
0xd5d DUP1
0xd5e SLOAD
0xd5f PUSH1 0x1
0xd61 PUSH1 0xa0
0xd63 PUSH1 0x2
0xd65 EXP
0xd66 SUB
0xd67 NOT
0xd68 SWAP1
0xd69 DUP2
0xd6a AND
0xd6b CALLER
0xd6c PUSH1 0x1
0xd6e PUSH1 0xa0
0xd70 PUSH1 0x2
0xd72 EXP
0xd73 SUB
0xd74 SWAP1
0xd75 DUP2
0xd76 AND
0xd77 SWAP2
0xd78 SWAP1
0xd79 SWAP2
0xd7a OR
0xd7b SWAP1
0xd7c SWAP3
0xd7d SSTORE
0xd7e PUSH1 0x5
0xd80 DUP1
0xd81 SLOAD
0xd82 DUP3
0xd83 AND
0xd84 DUP5
0xd85 DUP5
0xd86 AND
0xd87 OR
0xd88 SWAP1
0xd89 SSTORE
0xd8a PUSH1 0x2
0xd8c DUP1
0xd8d SLOAD
0xd8e DUP3
0xd8f AND
0xd90 DUP13
0xd91 DUP5
0xd92 AND
0xd93 OR
0xd94 SWAP1
0xd95 SSTORE
0xd96 PUSH1 0x3
0xd98 DUP1
0xd99 SLOAD
0xd9a DUP3
0xd9b AND
0xd9c DUP12
0xd9d DUP5
0xd9e AND
0xd9f OR
0xda0 SWAP1
0xda1 SSTORE
0xda2 PUSH1 0x4
0xda4 DUP1
0xda5 SLOAD
0xda6 DUP3
0xda7 AND
0xda8 DUP11
0xda9 DUP5
0xdaa AND
0xdab OR
0xdac SWAP1
0xdad SSTORE
0xdae PUSH1 0x6
0xdb0 DUP1
0xdb1 SLOAD
0xdb2 DUP3
0xdb3 AND
0xdb4 DUP8
0xdb5 DUP5
0xdb6 AND
0xdb7 OR
0xdb8 SWAP1
0xdb9 SSTORE
0xdba PUSH1 0x7
0xdbc DUP1
0xdbd SLOAD
0xdbe SWAP1
0xdbf SWAP2
0xdc0 AND
0xdc1 SWAP2
0xdc2 DUP6
0xdc3 AND
0xdc4 SWAP2
0xdc5 SWAP1
0xdc6 SWAP2
0xdc7 OR
0xdc8 SWAP1
0xdc9 SSTORE
0xdca PUSH1 0x8
0xdcc DUP7
0xdcd SWAP1
0xdce SSTORE
0xdcf PUSH1 0x9
0xdd1 DUP6
0xdd2 SWAP1
0xdd3 SSTORE
0xdd4 PUSH1 0x0
0xdd6 DUP3
0xdd7 SWAP1
0xdd8 SSTORE
---
0xd55: V1271 = 0x0
0xd57: V1272 = 0x0
0xd59: REVERT 0x0 0x0
0xd5a: JUMPDEST 
0xd5b: V1273 = 0x1
0xd5e: V1274 = S[0x1]
0xd5f: V1275 = 0x1
0xd61: V1276 = 0xa0
0xd63: V1277 = 0x2
0xd65: V1278 = EXP 0x2 0xa0
0xd66: V1279 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd67: V1280 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd6a: V1281 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1274
0xd6b: V1282 = CALLER
0xd6c: V1283 = 0x1
0xd6e: V1284 = 0xa0
0xd70: V1285 = 0x2
0xd72: V1286 = EXP 0x2 0xa0
0xd73: V1287 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd76: V1288 = AND 0xffffffffffffffffffffffffffffffffffffffff V1282
0xd7a: V1289 = OR V1288 V1281
0xd7d: S[0x1] = V1289
0xd7e: V1290 = 0x5
0xd81: V1291 = S[0x5]
0xd83: V1292 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1291
0xd86: V1293 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd87: V1294 = OR V1293 V1292
0xd89: S[0x5] = V1294
0xd8a: V1295 = 0x2
0xd8d: V1296 = S[0x2]
0xd8f: V1297 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1296
0xd92: V1298 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xd93: V1299 = OR V1298 V1297
0xd95: S[0x2] = V1299
0xd96: V1300 = 0x3
0xd99: V1301 = S[0x3]
0xd9b: V1302 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1301
0xd9e: V1303 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xd9f: V1304 = OR V1303 V1302
0xda1: S[0x3] = V1304
0xda2: V1305 = 0x4
0xda5: V1306 = S[0x4]
0xda7: V1307 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1306
0xdaa: V1308 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xdab: V1309 = OR V1308 V1307
0xdad: S[0x4] = V1309
0xdae: V1310 = 0x6
0xdb1: V1311 = S[0x6]
0xdb3: V1312 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1311
0xdb6: V1313 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xdb7: V1314 = OR V1313 V1312
0xdb9: S[0x6] = V1314
0xdba: V1315 = 0x7
0xdbd: V1316 = S[0x7]
0xdc0: V1317 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1316
0xdc3: V1318 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xdc7: V1319 = OR V1318 V1317
0xdc9: S[0x7] = V1319
0xdca: V1320 = 0x8
0xdce: S[0x8] = S5
0xdcf: V1321 = 0x9
0xdd3: S[0x9] = S4
0xdd4: V1322 = 0x0
0xdd8: S[0x0] = S1
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0xdd9
[0xdd9:0xde2]
---
Predecessors: [0xd55]
Successors: [0xde3]
---
0xdd9 JUMPDEST
0xdda POP
0xddb POP
0xddc POP
0xddd POP
0xdde POP
0xddf POP
0xde0 POP
0xde1 POP
0xde2 POP
---
0xdd9: JUMPDEST 
---
Entry stack: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: []

================================

Block 0xde3
[0xde3:0xdfc]
---
Predecessors: [0xdd9]
Successors: [0xdfd]
---
0xde3 JUMPDEST
0xde4 PUSH2 0x70b
0xde7 DUP1
0xde8 PUSH2 0x14a
0xdeb PUSH1 0x0
0xded CODECOPY
0xdee PUSH1 0x0
0xdf0 RETURN
0xdf1 STOP
0xdf2 PUSH1 0x60
0xdf4 PUSH1 0x40
0xdf6 MSTORE
0xdf7 CALLDATASIZE
0xdf8 ISZERO
0xdf9 PUSH2 0xcd
0xdfc JUMPI
---
0xde3: JUMPDEST 
0xde4: V1323 = 0x70b
0xde8: V1324 = 0x14a
0xdeb: V1325 = 0x0
0xded: CODECOPY 0x0 0x14a 0x70b
0xdee: V1326 = 0x0
0xdf0: RETURN 0x0 0x70b
0xdf1: STOP 
0xdf2: V1327 = 0x60
0xdf4: V1328 = 0x40
0xdf6: M[0x40] = 0x60
0xdf7: V1329 = CALLDATASIZE
0xdf8: V1330 = ISZERO V1329
0xdf9: V1331 = 0xcd
0xdfc: THROWI V1330
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdfd
[0xdfd:0xe2f]
---
Predecessors: [0xde3]
Successors: [0xe30]
---
0xdfd PUSH4 0xffffffff
0xe02 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe20 PUSH1 0x0
0xe22 CALLDATALOAD
0xe23 DIV
0xe24 AND
0xe25 PUSH4 0x1b15982a
0xe2a DUP2
0xe2b EQ
0xe2c PUSH2 0xcf
0xe2f JUMPI
---
0xdfd: V1332 = 0xffffffff
0xe02: V1333 = 0x100000000000000000000000000000000000000000000000000000000
0xe20: V1334 = 0x0
0xe22: V1335 = CALLDATALOAD 0x0
0xe23: V1336 = DIV V1335 0x100000000000000000000000000000000000000000000000000000000
0xe24: V1337 = AND V1336 0xffffffff
0xe25: V1338 = 0x1b15982a
0xe2b: V1339 = EQ V1337 0x1b15982a
0xe2c: V1340 = 0xcf
0xe2f: THROWI V1339
---
Entry stack: []
Stack pops: 0
Stack additions: [V1337]
Exit stack: [V1337]

================================

Block 0xe30
[0xe30:0xe3a]
---
Predecessors: [0xdfd]
Successors: [0xe3b]
---
0xe30 DUP1
0xe31 PUSH4 0x1d143848
0xe36 EQ
0xe37 PUSH2 0xe5
0xe3a JUMPI
---
0xe31: V1341 = 0x1d143848
0xe36: V1342 = EQ 0x1d143848 V1337
0xe37: V1343 = 0xe5
0xe3a: THROWI V1342
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe3b
[0xe3b:0xe45]
---
Predecessors: [0xe30]
Successors: [0xe46]
---
0xe3b DUP1
0xe3c PUSH4 0x28f833b7
0xe41 EQ
0xe42 PUSH2 0x111
0xe45 JUMPI
---
0xe3c: V1344 = 0x28f833b7
0xe41: V1345 = EQ 0x28f833b7 V1337
0xe42: V1346 = 0x111
0xe45: THROWI V1345
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe46
[0xe46:0xe50]
---
Predecessors: [0xe3b]
Successors: [0xe51]
---
0xe46 DUP1
0xe47 PUSH4 0x2ebf1d58
0xe4c EQ
0xe4d PUSH2 0x13d
0xe50 JUMPI
---
0xe47: V1347 = 0x2ebf1d58
0xe4c: V1348 = EQ 0x2ebf1d58 V1337
0xe4d: V1349 = 0x13d
0xe50: THROWI V1348
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe51
[0xe51:0xe5b]
---
Predecessors: [0xe46]
Successors: [0xe5c]
---
0xe51 DUP1
0xe52 PUSH4 0x419759f5
0xe57 EQ
0xe58 PUSH2 0x15b
0xe5b JUMPI
---
0xe52: V1350 = 0x419759f5
0xe57: V1351 = EQ 0x419759f5 V1337
0xe58: V1352 = 0x15b
0xe5b: THROWI V1351
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe5c
[0xe5c:0xe66]
---
Predecessors: [0xe51]
Successors: [0xe67]
---
0xe5c DUP1
0xe5d PUSH4 0x633423be
0xe62 EQ
0xe63 PUSH2 0x17d
0xe66 JUMPI
---
0xe5d: V1353 = 0x633423be
0xe62: V1354 = EQ 0x633423be V1337
0xe63: V1355 = 0x17d
0xe66: THROWI V1354
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe67
[0xe67:0xe71]
---
Predecessors: [0xe5c]
Successors: [0xe72]
---
0xe67 DUP1
0xe68 PUSH4 0x77c93662
0xe6d EQ
0xe6e PUSH2 0x1a9
0xe71 JUMPI
---
0xe68: V1356 = 0x77c93662
0xe6d: V1357 = EQ 0x77c93662 V1337
0xe6e: V1358 = 0x1a9
0xe71: THROWI V1357
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe72
[0xe72:0xe7c]
---
Predecessors: [0xe67]
Successors: [0xe7d]
---
0xe72 DUP1
0xe73 PUSH4 0x8da5cb5b
0xe78 EQ
0xe79 PUSH2 0x1d5
0xe7c JUMPI
---
0xe73: V1359 = 0x8da5cb5b
0xe78: V1360 = EQ 0x8da5cb5b V1337
0xe79: V1361 = 0x1d5
0xe7c: THROWI V1360
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe7d
[0xe7d:0xe87]
---
Predecessors: [0xe72]
Successors: [0xe88]
---
0xe7d DUP1
0xe7e PUSH4 0xba45b0b8
0xe83 EQ
0xe84 PUSH2 0x201
0xe87 JUMPI
---
0xe7e: V1362 = 0xba45b0b8
0xe83: V1363 = EQ 0xba45b0b8 V1337
0xe84: V1364 = 0x201
0xe87: THROWI V1363
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe88
[0xe88:0xe92]
---
Predecessors: [0xe7d]
Successors: [0xe93]
---
0xe88 DUP1
0xe89 PUSH4 0xc35905c6
0xe8e EQ
0xe8f PUSH2 0x225
0xe92 JUMPI
---
0xe89: V1365 = 0xc35905c6
0xe8e: V1366 = EQ 0xc35905c6 V1337
0xe8f: V1367 = 0x225
0xe92: THROWI V1366
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe93
[0xe93:0xe9d]
---
Predecessors: [0xe88]
Successors: [0xe9e]
---
0xe93 DUP1
0xe94 PUSH4 0xc8db233e
0xe99 EQ
0xe9a PUSH2 0x247
0xe9d JUMPI
---
0xe94: V1368 = 0xc8db233e
0xe99: V1369 = EQ 0xc8db233e V1337
0xe9a: V1370 = 0x247
0xe9d: THROWI V1369
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xe9e
[0xe9e:0xea8]
---
Predecessors: [0xe93]
Successors: [0xea9]
---
0xe9e DUP1
0xe9f PUSH4 0xcd446e22
0xea4 EQ
0xea5 PUSH2 0x265
0xea8 JUMPI
---
0xe9f: V1371 = 0xcd446e22
0xea4: V1372 = EQ 0xcd446e22 V1337
0xea5: V1373 = 0x265
0xea8: THROWI V1372
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xea9
[0xea9:0xeb3]
---
Predecessors: [0xe9e]
Successors: [0xeb4]
---
0xea9 DUP1
0xeaa PUSH4 0xda284dcc
0xeaf EQ
0xeb0 PUSH2 0x291
0xeb3 JUMPI
---
0xeaa: V1374 = 0xda284dcc
0xeaf: V1375 = EQ 0xda284dcc V1337
0xeb0: V1376 = 0x291
0xeb3: THROWI V1375
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xeb4
[0xeb4:0xebe]
---
Predecessors: [0xea9]
Successors: [0xebf]
---
0xeb4 DUP1
0xeb5 PUSH4 0xf52c85fd
0xeba EQ
0xebb PUSH2 0x2b3
0xebe JUMPI
---
0xeb5: V1377 = 0xf52c85fd
0xeba: V1378 = EQ 0xf52c85fd V1337
0xebb: V1379 = 0x2b3
0xebe: THROWI V1378
---
Entry stack: [V1337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1337]

================================

Block 0xebf
[0xebf:0xedd]
---
Predecessors: [0xeb4]
Successors: [0xede]
---
0xebf JUMPDEST
0xec0 INVALID
0xec1 JUMPDEST
0xec2 PUSH2 0xe3
0xec5 PUSH1 0x1
0xec7 PUSH1 0xa0
0xec9 PUSH1 0x2
0xecb EXP
0xecc SUB
0xecd PUSH1 0x4
0xecf CALLDATALOAD
0xed0 AND
0xed1 PUSH2 0x2df
0xed4 JUMP
0xed5 JUMPDEST
0xed6 STOP
0xed7 JUMPDEST
0xed8 CALLVALUE
0xed9 ISZERO
0xeda PUSH2 0xed
0xedd JUMPI
---
0xebf: JUMPDEST 
0xec0: INVALID 
0xec1: JUMPDEST 
0xec2: V1380 = 0xe3
0xec5: V1381 = 0x1
0xec7: V1382 = 0xa0
0xec9: V1383 = 0x2
0xecb: V1384 = EXP 0x2 0xa0
0xecc: V1385 = SUB 0x10000000000000000000000000000000000000000 0x1
0xecd: V1386 = 0x4
0xecf: V1387 = CALLDATALOAD 0x4
0xed0: V1388 = AND V1387 0xffffffffffffffffffffffffffffffffffffffff
0xed1: V1389 = 0x2df
0xed4: THROW 
0xed5: JUMPDEST 
0xed6: STOP 
0xed7: JUMPDEST 
0xed8: V1390 = CALLVALUE
0xed9: V1391 = ISZERO V1390
0xeda: V1392 = 0xed
0xedd: THROWI V1391
---
Entry stack: [V1337]
Stack pops: 0
Stack additions: [V1388, 0xe3]
Exit stack: []

================================

Block 0xede
[0xede:0xf09]
---
Predecessors: [0xebf]
Successors: [0xf0a]
---
0xede INVALID
0xedf JUMPDEST
0xee0 PUSH2 0xf5
0xee3 PUSH2 0x4cf
0xee6 JUMP
0xee7 JUMPDEST
0xee8 PUSH1 0x40
0xeea DUP1
0xeeb MLOAD
0xeec PUSH1 0x1
0xeee PUSH1 0xa0
0xef0 PUSH1 0x2
0xef2 EXP
0xef3 SUB
0xef4 SWAP1
0xef5 SWAP3
0xef6 AND
0xef7 DUP3
0xef8 MSTORE
0xef9 MLOAD
0xefa SWAP1
0xefb DUP2
0xefc SWAP1
0xefd SUB
0xefe PUSH1 0x20
0xf00 ADD
0xf01 SWAP1
0xf02 RETURN
0xf03 JUMPDEST
0xf04 CALLVALUE
0xf05 ISZERO
0xf06 PUSH2 0x119
0xf09 JUMPI
---
0xede: INVALID 
0xedf: JUMPDEST 
0xee0: V1393 = 0xf5
0xee3: V1394 = 0x4cf
0xee6: THROW 
0xee7: JUMPDEST 
0xee8: V1395 = 0x40
0xeeb: V1396 = M[0x40]
0xeec: V1397 = 0x1
0xeee: V1398 = 0xa0
0xef0: V1399 = 0x2
0xef2: V1400 = EXP 0x2 0xa0
0xef3: V1401 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef6: V1402 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xef8: M[V1396] = V1402
0xef9: V1403 = M[0x40]
0xefd: V1404 = SUB V1396 V1403
0xefe: V1405 = 0x20
0xf00: V1406 = ADD 0x20 V1404
0xf02: RETURN V1403 V1406
0xf03: JUMPDEST 
0xf04: V1407 = CALLVALUE
0xf05: V1408 = ISZERO V1407
0xf06: V1409 = 0x119
0xf09: THROWI V1408
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0xf0a
[0xf0a:0xf35]
---
Predecessors: [0xede]
Successors: [0xf36]
---
0xf0a INVALID
0xf0b JUMPDEST
0xf0c PUSH2 0xf5
0xf0f PUSH2 0x4de
0xf12 JUMP
0xf13 JUMPDEST
0xf14 PUSH1 0x40
0xf16 DUP1
0xf17 MLOAD
0xf18 PUSH1 0x1
0xf1a PUSH1 0xa0
0xf1c PUSH1 0x2
0xf1e EXP
0xf1f SUB
0xf20 SWAP1
0xf21 SWAP3
0xf22 AND
0xf23 DUP3
0xf24 MSTORE
0xf25 MLOAD
0xf26 SWAP1
0xf27 DUP2
0xf28 SWAP1
0xf29 SUB
0xf2a PUSH1 0x20
0xf2c ADD
0xf2d SWAP1
0xf2e RETURN
0xf2f JUMPDEST
0xf30 CALLVALUE
0xf31 ISZERO
0xf32 PUSH2 0x145
0xf35 JUMPI
---
0xf0a: INVALID 
0xf0b: JUMPDEST 
0xf0c: V1410 = 0xf5
0xf0f: V1411 = 0x4de
0xf12: THROW 
0xf13: JUMPDEST 
0xf14: V1412 = 0x40
0xf17: V1413 = M[0x40]
0xf18: V1414 = 0x1
0xf1a: V1415 = 0xa0
0xf1c: V1416 = 0x2
0xf1e: V1417 = EXP 0x2 0xa0
0xf1f: V1418 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf22: V1419 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf24: M[V1413] = V1419
0xf25: V1420 = M[0x40]
0xf29: V1421 = SUB V1413 V1420
0xf2a: V1422 = 0x20
0xf2c: V1423 = ADD 0x20 V1421
0xf2e: RETURN V1420 V1423
0xf2f: JUMPDEST 
0xf30: V1424 = CALLVALUE
0xf31: V1425 = ISZERO V1424
0xf32: V1426 = 0x145
0xf35: THROWI V1425
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0xf36
[0xf36:0xf53]
---
Predecessors: [0xf0a]
Successors: [0xf54]
---
0xf36 INVALID
0xf37 JUMPDEST
0xf38 PUSH2 0xe3
0xf3b PUSH1 0x1
0xf3d PUSH1 0xa0
0xf3f PUSH1 0x2
0xf41 EXP
0xf42 SUB
0xf43 PUSH1 0x4
0xf45 CALLDATALOAD
0xf46 AND
0xf47 PUSH2 0x4ed
0xf4a JUMP
0xf4b JUMPDEST
0xf4c STOP
0xf4d JUMPDEST
0xf4e CALLVALUE
0xf4f ISZERO
0xf50 PUSH2 0x163
0xf53 JUMPI
---
0xf36: INVALID 
0xf37: JUMPDEST 
0xf38: V1427 = 0xe3
0xf3b: V1428 = 0x1
0xf3d: V1429 = 0xa0
0xf3f: V1430 = 0x2
0xf41: V1431 = EXP 0x2 0xa0
0xf42: V1432 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf43: V1433 = 0x4
0xf45: V1434 = CALLDATALOAD 0x4
0xf46: V1435 = AND V1434 0xffffffffffffffffffffffffffffffffffffffff
0xf47: V1436 = 0x4ed
0xf4a: THROW 
0xf4b: JUMPDEST 
0xf4c: STOP 
0xf4d: JUMPDEST 
0xf4e: V1437 = CALLVALUE
0xf4f: V1438 = ISZERO V1437
0xf50: V1439 = 0x163
0xf53: THROWI V1438
---
Entry stack: []
Stack pops: 0
Stack additions: [V1435, 0xe3]
Exit stack: []

================================

Block 0xf54
[0xf54:0xf75]
---
Predecessors: [0xf36]
Successors: [0xf76]
---
0xf54 INVALID
0xf55 JUMPDEST
0xf56 PUSH2 0x16b
0xf59 PUSH2 0x4fc
0xf5c JUMP
0xf5d JUMPDEST
0xf5e PUSH1 0x40
0xf60 DUP1
0xf61 MLOAD
0xf62 SWAP2
0xf63 DUP3
0xf64 MSTORE
0xf65 MLOAD
0xf66 SWAP1
0xf67 DUP2
0xf68 SWAP1
0xf69 SUB
0xf6a PUSH1 0x20
0xf6c ADD
0xf6d SWAP1
0xf6e RETURN
0xf6f JUMPDEST
0xf70 CALLVALUE
0xf71 ISZERO
0xf72 PUSH2 0x185
0xf75 JUMPI
---
0xf54: INVALID 
0xf55: JUMPDEST 
0xf56: V1440 = 0x16b
0xf59: V1441 = 0x4fc
0xf5c: THROW 
0xf5d: JUMPDEST 
0xf5e: V1442 = 0x40
0xf61: V1443 = M[0x40]
0xf64: M[V1443] = S0
0xf65: V1444 = M[0x40]
0xf69: V1445 = SUB V1443 V1444
0xf6a: V1446 = 0x20
0xf6c: V1447 = ADD 0x20 V1445
0xf6e: RETURN V1444 V1447
0xf6f: JUMPDEST 
0xf70: V1448 = CALLVALUE
0xf71: V1449 = ISZERO V1448
0xf72: V1450 = 0x185
0xf75: THROWI V1449
---
Entry stack: []
Stack pops: 0
Stack additions: [0x16b]
Exit stack: []

================================

Block 0xf76
[0xf76:0xfa1]
---
Predecessors: [0xf54]
Successors: [0xfa2]
---
0xf76 INVALID
0xf77 JUMPDEST
0xf78 PUSH2 0xf5
0xf7b PUSH2 0x502
0xf7e JUMP
0xf7f JUMPDEST
0xf80 PUSH1 0x40
0xf82 DUP1
0xf83 MLOAD
0xf84 PUSH1 0x1
0xf86 PUSH1 0xa0
0xf88 PUSH1 0x2
0xf8a EXP
0xf8b SUB
0xf8c SWAP1
0xf8d SWAP3
0xf8e AND
0xf8f DUP3
0xf90 MSTORE
0xf91 MLOAD
0xf92 SWAP1
0xf93 DUP2
0xf94 SWAP1
0xf95 SUB
0xf96 PUSH1 0x20
0xf98 ADD
0xf99 SWAP1
0xf9a RETURN
0xf9b JUMPDEST
0xf9c CALLVALUE
0xf9d ISZERO
0xf9e PUSH2 0x1b1
0xfa1 JUMPI
---
0xf76: INVALID 
0xf77: JUMPDEST 
0xf78: V1451 = 0xf5
0xf7b: V1452 = 0x502
0xf7e: THROW 
0xf7f: JUMPDEST 
0xf80: V1453 = 0x40
0xf83: V1454 = M[0x40]
0xf84: V1455 = 0x1
0xf86: V1456 = 0xa0
0xf88: V1457 = 0x2
0xf8a: V1458 = EXP 0x2 0xa0
0xf8b: V1459 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8e: V1460 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf90: M[V1454] = V1460
0xf91: V1461 = M[0x40]
0xf95: V1462 = SUB V1454 V1461
0xf96: V1463 = 0x20
0xf98: V1464 = ADD 0x20 V1462
0xf9a: RETURN V1461 V1464
0xf9b: JUMPDEST 
0xf9c: V1465 = CALLVALUE
0xf9d: V1466 = ISZERO V1465
0xf9e: V1467 = 0x1b1
0xfa1: THROWI V1466
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0xfa2
[0xfa2:0xfcd]
---
Predecessors: [0xf76]
Successors: [0xfce]
---
0xfa2 INVALID
0xfa3 JUMPDEST
0xfa4 PUSH2 0xf5
0xfa7 PUSH2 0x511
0xfaa JUMP
0xfab JUMPDEST
0xfac PUSH1 0x40
0xfae DUP1
0xfaf MLOAD
0xfb0 PUSH1 0x1
0xfb2 PUSH1 0xa0
0xfb4 PUSH1 0x2
0xfb6 EXP
0xfb7 SUB
0xfb8 SWAP1
0xfb9 SWAP3
0xfba AND
0xfbb DUP3
0xfbc MSTORE
0xfbd MLOAD
0xfbe SWAP1
0xfbf DUP2
0xfc0 SWAP1
0xfc1 SUB
0xfc2 PUSH1 0x20
0xfc4 ADD
0xfc5 SWAP1
0xfc6 RETURN
0xfc7 JUMPDEST
0xfc8 CALLVALUE
0xfc9 ISZERO
0xfca PUSH2 0x1dd
0xfcd JUMPI
---
0xfa2: INVALID 
0xfa3: JUMPDEST 
0xfa4: V1468 = 0xf5
0xfa7: V1469 = 0x511
0xfaa: THROW 
0xfab: JUMPDEST 
0xfac: V1470 = 0x40
0xfaf: V1471 = M[0x40]
0xfb0: V1472 = 0x1
0xfb2: V1473 = 0xa0
0xfb4: V1474 = 0x2
0xfb6: V1475 = EXP 0x2 0xa0
0xfb7: V1476 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfba: V1477 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xfbc: M[V1471] = V1477
0xfbd: V1478 = M[0x40]
0xfc1: V1479 = SUB V1471 V1478
0xfc2: V1480 = 0x20
0xfc4: V1481 = ADD 0x20 V1479
0xfc6: RETURN V1478 V1481
0xfc7: JUMPDEST 
0xfc8: V1482 = CALLVALUE
0xfc9: V1483 = ISZERO V1482
0xfca: V1484 = 0x1dd
0xfcd: THROWI V1483
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0xfce
[0xfce:0xff9]
---
Predecessors: [0xfa2]
Successors: [0xffa]
---
0xfce INVALID
0xfcf JUMPDEST
0xfd0 PUSH2 0xf5
0xfd3 PUSH2 0x520
0xfd6 JUMP
0xfd7 JUMPDEST
0xfd8 PUSH1 0x40
0xfda DUP1
0xfdb MLOAD
0xfdc PUSH1 0x1
0xfde PUSH1 0xa0
0xfe0 PUSH1 0x2
0xfe2 EXP
0xfe3 SUB
0xfe4 SWAP1
0xfe5 SWAP3
0xfe6 AND
0xfe7 DUP3
0xfe8 MSTORE
0xfe9 MLOAD
0xfea SWAP1
0xfeb DUP2
0xfec SWAP1
0xfed SUB
0xfee PUSH1 0x20
0xff0 ADD
0xff1 SWAP1
0xff2 RETURN
0xff3 JUMPDEST
0xff4 CALLVALUE
0xff5 ISZERO
0xff6 PUSH2 0x209
0xff9 JUMPI
---
0xfce: INVALID 
0xfcf: JUMPDEST 
0xfd0: V1485 = 0xf5
0xfd3: V1486 = 0x520
0xfd6: THROW 
0xfd7: JUMPDEST 
0xfd8: V1487 = 0x40
0xfdb: V1488 = M[0x40]
0xfdc: V1489 = 0x1
0xfde: V1490 = 0xa0
0xfe0: V1491 = 0x2
0xfe2: V1492 = EXP 0x2 0xa0
0xfe3: V1493 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe6: V1494 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xfe8: M[V1488] = V1494
0xfe9: V1495 = M[0x40]
0xfed: V1496 = SUB V1488 V1495
0xfee: V1497 = 0x20
0xff0: V1498 = ADD 0x20 V1496
0xff2: RETURN V1495 V1498
0xff3: JUMPDEST 
0xff4: V1499 = CALLVALUE
0xff5: V1500 = ISZERO V1499
0xff6: V1501 = 0x209
0xff9: THROWI V1500
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0xffa
[0xffa:0x101d]
---
Predecessors: [0xfce]
Successors: [0x101e]
---
0xffa INVALID
0xffb JUMPDEST
0xffc PUSH2 0xe3
0xfff PUSH1 0x1
0x1001 PUSH1 0xa0
0x1003 PUSH1 0x2
0x1005 EXP
0x1006 SUB
0x1007 PUSH1 0x4
0x1009 CALLDATALOAD
0x100a DUP2
0x100b AND
0x100c SWAP1
0x100d PUSH1 0x24
0x100f CALLDATALOAD
0x1010 AND
0x1011 PUSH2 0x52f
0x1014 JUMP
0x1015 JUMPDEST
0x1016 STOP
0x1017 JUMPDEST
0x1018 CALLVALUE
0x1019 ISZERO
0x101a PUSH2 0x22d
0x101d JUMPI
---
0xffa: INVALID 
0xffb: JUMPDEST 
0xffc: V1502 = 0xe3
0xfff: V1503 = 0x1
0x1001: V1504 = 0xa0
0x1003: V1505 = 0x2
0x1005: V1506 = EXP 0x2 0xa0
0x1006: V1507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1007: V1508 = 0x4
0x1009: V1509 = CALLDATALOAD 0x4
0x100b: V1510 = AND 0xffffffffffffffffffffffffffffffffffffffff V1509
0x100d: V1511 = 0x24
0x100f: V1512 = CALLDATALOAD 0x24
0x1010: V1513 = AND V1512 0xffffffffffffffffffffffffffffffffffffffff
0x1011: V1514 = 0x52f
0x1014: THROW 
0x1015: JUMPDEST 
0x1016: STOP 
0x1017: JUMPDEST 
0x1018: V1515 = CALLVALUE
0x1019: V1516 = ISZERO V1515
0x101a: V1517 = 0x22d
0x101d: THROWI V1516
---
Entry stack: []
Stack pops: 0
Stack additions: [V1513, V1510, 0xe3]
Exit stack: []

================================

Block 0x101e
[0x101e:0x103f]
---
Predecessors: [0xffa]
Successors: [0x1040]
---
0x101e INVALID
0x101f JUMPDEST
0x1020 PUSH2 0x16b
0x1023 PUSH2 0x593
0x1026 JUMP
0x1027 JUMPDEST
0x1028 PUSH1 0x40
0x102a DUP1
0x102b MLOAD
0x102c SWAP2
0x102d DUP3
0x102e MSTORE
0x102f MLOAD
0x1030 SWAP1
0x1031 DUP2
0x1032 SWAP1
0x1033 SUB
0x1034 PUSH1 0x20
0x1036 ADD
0x1037 SWAP1
0x1038 RETURN
0x1039 JUMPDEST
0x103a CALLVALUE
0x103b ISZERO
0x103c PUSH2 0x24f
0x103f JUMPI
---
0x101e: INVALID 
0x101f: JUMPDEST 
0x1020: V1518 = 0x16b
0x1023: V1519 = 0x593
0x1026: THROW 
0x1027: JUMPDEST 
0x1028: V1520 = 0x40
0x102b: V1521 = M[0x40]
0x102e: M[V1521] = S0
0x102f: V1522 = M[0x40]
0x1033: V1523 = SUB V1521 V1522
0x1034: V1524 = 0x20
0x1036: V1525 = ADD 0x20 V1523
0x1038: RETURN V1522 V1525
0x1039: JUMPDEST 
0x103a: V1526 = CALLVALUE
0x103b: V1527 = ISZERO V1526
0x103c: V1528 = 0x24f
0x103f: THROWI V1527
---
Entry stack: []
Stack pops: 0
Stack additions: [0x16b]
Exit stack: []

================================

Block 0x1040
[0x1040:0x105d]
---
Predecessors: [0x101e]
Successors: [0x105e]
---
0x1040 INVALID
0x1041 JUMPDEST
0x1042 PUSH2 0xe3
0x1045 PUSH1 0x1
0x1047 PUSH1 0xa0
0x1049 PUSH1 0x2
0x104b EXP
0x104c SUB
0x104d PUSH1 0x4
0x104f CALLDATALOAD
0x1050 AND
0x1051 PUSH2 0x599
0x1054 JUMP
0x1055 JUMPDEST
0x1056 STOP
0x1057 JUMPDEST
0x1058 CALLVALUE
0x1059 ISZERO
0x105a PUSH2 0x26d
0x105d JUMPI
---
0x1040: INVALID 
0x1041: JUMPDEST 
0x1042: V1529 = 0xe3
0x1045: V1530 = 0x1
0x1047: V1531 = 0xa0
0x1049: V1532 = 0x2
0x104b: V1533 = EXP 0x2 0xa0
0x104c: V1534 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104d: V1535 = 0x4
0x104f: V1536 = CALLDATALOAD 0x4
0x1050: V1537 = AND V1536 0xffffffffffffffffffffffffffffffffffffffff
0x1051: V1538 = 0x599
0x1054: THROW 
0x1055: JUMPDEST 
0x1056: STOP 
0x1057: JUMPDEST 
0x1058: V1539 = CALLVALUE
0x1059: V1540 = ISZERO V1539
0x105a: V1541 = 0x26d
0x105d: THROWI V1540
---
Entry stack: []
Stack pops: 0
Stack additions: [V1537, 0xe3]
Exit stack: []

================================

Block 0x105e
[0x105e:0x1089]
---
Predecessors: [0x1040]
Successors: [0x108a]
---
0x105e INVALID
0x105f JUMPDEST
0x1060 PUSH2 0xf5
0x1063 PUSH2 0x6bb
0x1066 JUMP
0x1067 JUMPDEST
0x1068 PUSH1 0x40
0x106a DUP1
0x106b MLOAD
0x106c PUSH1 0x1
0x106e PUSH1 0xa0
0x1070 PUSH1 0x2
0x1072 EXP
0x1073 SUB
0x1074 SWAP1
0x1075 SWAP3
0x1076 AND
0x1077 DUP3
0x1078 MSTORE
0x1079 MLOAD
0x107a SWAP1
0x107b DUP2
0x107c SWAP1
0x107d SUB
0x107e PUSH1 0x20
0x1080 ADD
0x1081 SWAP1
0x1082 RETURN
0x1083 JUMPDEST
0x1084 CALLVALUE
0x1085 ISZERO
0x1086 PUSH2 0x299
0x1089 JUMPI
---
0x105e: INVALID 
0x105f: JUMPDEST 
0x1060: V1542 = 0xf5
0x1063: V1543 = 0x6bb
0x1066: THROW 
0x1067: JUMPDEST 
0x1068: V1544 = 0x40
0x106b: V1545 = M[0x40]
0x106c: V1546 = 0x1
0x106e: V1547 = 0xa0
0x1070: V1548 = 0x2
0x1072: V1549 = EXP 0x2 0xa0
0x1073: V1550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1076: V1551 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1078: M[V1545] = V1551
0x1079: V1552 = M[0x40]
0x107d: V1553 = SUB V1545 V1552
0x107e: V1554 = 0x20
0x1080: V1555 = ADD 0x20 V1553
0x1082: RETURN V1552 V1555
0x1083: JUMPDEST 
0x1084: V1556 = CALLVALUE
0x1085: V1557 = ISZERO V1556
0x1086: V1558 = 0x299
0x1089: THROWI V1557
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0x108a
[0x108a:0x10ab]
---
Predecessors: [0x105e]
Successors: [0x10ac]
---
0x108a INVALID
0x108b JUMPDEST
0x108c PUSH2 0x16b
0x108f PUSH2 0x6ca
0x1092 JUMP
0x1093 JUMPDEST
0x1094 PUSH1 0x40
0x1096 DUP1
0x1097 MLOAD
0x1098 SWAP2
0x1099 DUP3
0x109a MSTORE
0x109b MLOAD
0x109c SWAP1
0x109d DUP2
0x109e SWAP1
0x109f SUB
0x10a0 PUSH1 0x20
0x10a2 ADD
0x10a3 SWAP1
0x10a4 RETURN
0x10a5 JUMPDEST
0x10a6 CALLVALUE
0x10a7 ISZERO
0x10a8 PUSH2 0x2bb
0x10ab JUMPI
---
0x108a: INVALID 
0x108b: JUMPDEST 
0x108c: V1559 = 0x16b
0x108f: V1560 = 0x6ca
0x1092: THROW 
0x1093: JUMPDEST 
0x1094: V1561 = 0x40
0x1097: V1562 = M[0x40]
0x109a: M[V1562] = S0
0x109b: V1563 = M[0x40]
0x109f: V1564 = SUB V1562 V1563
0x10a0: V1565 = 0x20
0x10a2: V1566 = ADD 0x20 V1564
0x10a4: RETURN V1563 V1566
0x10a5: JUMPDEST 
0x10a6: V1567 = CALLVALUE
0x10a7: V1568 = ISZERO V1567
0x10a8: V1569 = 0x2bb
0x10ab: THROWI V1568
---
Entry stack: []
Stack pops: 0
Stack additions: [0x16b]
Exit stack: []

================================

Block 0x10ac
[0x10ac:0x10e7]
---
Predecessors: [0x108a]
Successors: [0x10e8]
---
0x10ac INVALID
0x10ad JUMPDEST
0x10ae PUSH2 0xf5
0x10b1 PUSH2 0x6d0
0x10b4 JUMP
0x10b5 JUMPDEST
0x10b6 PUSH1 0x40
0x10b8 DUP1
0x10b9 MLOAD
0x10ba PUSH1 0x1
0x10bc PUSH1 0xa0
0x10be PUSH1 0x2
0x10c0 EXP
0x10c1 SUB
0x10c2 SWAP1
0x10c3 SWAP3
0x10c4 AND
0x10c5 DUP3
0x10c6 MSTORE
0x10c7 MLOAD
0x10c8 SWAP1
0x10c9 DUP2
0x10ca SWAP1
0x10cb SUB
0x10cc PUSH1 0x20
0x10ce ADD
0x10cf SWAP1
0x10d0 RETURN
0x10d1 JUMPDEST
0x10d2 PUSH1 0x1
0x10d4 SLOAD
0x10d5 CALLER
0x10d6 PUSH1 0x1
0x10d8 PUSH1 0xa0
0x10da PUSH1 0x2
0x10dc EXP
0x10dd SUB
0x10de SWAP1
0x10df DUP2
0x10e0 AND
0x10e1 SWAP2
0x10e2 AND
0x10e3 EQ
0x10e4 PUSH2 0x2fb
0x10e7 JUMPI
---
0x10ac: INVALID 
0x10ad: JUMPDEST 
0x10ae: V1570 = 0xf5
0x10b1: V1571 = 0x6d0
0x10b4: THROW 
0x10b5: JUMPDEST 
0x10b6: V1572 = 0x40
0x10b9: V1573 = M[0x40]
0x10ba: V1574 = 0x1
0x10bc: V1575 = 0xa0
0x10be: V1576 = 0x2
0x10c0: V1577 = EXP 0x2 0xa0
0x10c1: V1578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c4: V1579 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10c6: M[V1573] = V1579
0x10c7: V1580 = M[0x40]
0x10cb: V1581 = SUB V1573 V1580
0x10cc: V1582 = 0x20
0x10ce: V1583 = ADD 0x20 V1581
0x10d0: RETURN V1580 V1583
0x10d1: JUMPDEST 
0x10d2: V1584 = 0x1
0x10d4: V1585 = S[0x1]
0x10d5: V1586 = CALLER
0x10d6: V1587 = 0x1
0x10d8: V1588 = 0xa0
0x10da: V1589 = 0x2
0x10dc: V1590 = EXP 0x2 0xa0
0x10dd: V1591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e0: V1592 = AND 0xffffffffffffffffffffffffffffffffffffffff V1586
0x10e2: V1593 = AND V1585 0xffffffffffffffffffffffffffffffffffffffff
0x10e3: V1594 = EQ V1593 V1592
0x10e4: V1595 = 0x2fb
0x10e7: THROWI V1594
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0x10e8
[0x10e8:0x1102]
---
Predecessors: [0x10ac]
Successors: [0x1103]
---
0x10e8 PUSH1 0x0
0x10ea PUSH1 0x0
0x10ec REVERT
0x10ed JUMPDEST
0x10ee PUSH1 0x3
0x10f0 SLOAD
0x10f1 PUSH1 0x1
0x10f3 PUSH1 0xa0
0x10f5 PUSH1 0x2
0x10f7 EXP
0x10f8 SUB
0x10f9 DUP3
0x10fa DUP2
0x10fb AND
0x10fc SWAP2
0x10fd AND
0x10fe EQ
0x10ff PUSH2 0x316
0x1102 JUMPI
---
0x10e8: V1596 = 0x0
0x10ea: V1597 = 0x0
0x10ec: REVERT 0x0 0x0
0x10ed: JUMPDEST 
0x10ee: V1598 = 0x3
0x10f0: V1599 = S[0x3]
0x10f1: V1600 = 0x1
0x10f3: V1601 = 0xa0
0x10f5: V1602 = 0x2
0x10f7: V1603 = EXP 0x2 0xa0
0x10f8: V1604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10fb: V1605 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x10fd: V1606 = AND V1599 0xffffffffffffffffffffffffffffffffffffffff
0x10fe: V1607 = EQ V1606 V1605
0x10ff: V1608 = 0x316
0x1102: THROWI V1607
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x1103
[0x1103:0x1114]
---
Predecessors: [0x10e8]
Successors: [0x1115]
---
0x1103 PUSH1 0x0
0x1105 PUSH1 0x0
0x1107 REVERT
0x1108 JUMPDEST
0x1109 PUSH1 0x0
0x110b SLOAD
0x110c TIMESTAMP
0x110d LT
0x110e ISZERO
0x110f DUP1
0x1110 ISZERO
0x1111 PUSH2 0x32e
0x1114 JUMPI
---
0x1103: V1609 = 0x0
0x1105: V1610 = 0x0
0x1107: REVERT 0x0 0x0
0x1108: JUMPDEST 
0x1109: V1611 = 0x0
0x110b: V1612 = S[0x0]
0x110c: V1613 = TIMESTAMP
0x110d: V1614 = LT V1613 V1612
0x110e: V1615 = ISZERO V1614
0x1110: V1616 = ISZERO V1615
0x1111: V1617 = 0x32e
0x1114: THROWI V1616
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V1615]
Exit stack: []

================================

Block 0x1115
[0x1115:0x111f]
---
Predecessors: [0x1103]
Successors: [0x1120]
---
0x1115 POP
0x1116 PUSH1 0x0
0x1118 SLOAD
0x1119 PUSH3 0x15180
0x111d ADD
0x111e TIMESTAMP
0x111f LT
---
0x1116: V1618 = 0x0
0x1118: V1619 = S[0x0]
0x1119: V1620 = 0x15180
0x111d: V1621 = ADD 0x15180 V1619
0x111e: V1622 = TIMESTAMP
0x111f: V1623 = LT V1622 V1621
---
Entry stack: [V1615]
Stack pops: 1
Stack additions: [V1623]
Exit stack: [V1623]

================================

Block 0x1120
[0x1120:0x1126]
---
Predecessors: [0x1115]
Successors: [0x1127]
---
0x1120 JUMPDEST
0x1121 ISZERO
0x1122 ISZERO
0x1123 PUSH2 0x33a
0x1126 JUMPI
---
0x1120: JUMPDEST 
0x1121: V1624 = ISZERO V1623
0x1122: V1625 = ISZERO V1624
0x1123: V1626 = 0x33a
0x1126: THROWI V1625
---
Entry stack: [V1623]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1127
[0x1127:0x113d]
---
Predecessors: [0x1120]
Successors: [0x113e]
---
0x1127 PUSH1 0x0
0x1129 PUSH1 0x0
0x112b REVERT
0x112c JUMPDEST
0x112d PUSH1 0x6
0x112f SLOAD
0x1130 PUSH1 0x1
0x1132 PUSH1 0xa0
0x1134 PUSH1 0x2
0x1136 EXP
0x1137 SUB
0x1138 AND
0x1139 ISZERO
0x113a PUSH2 0x3e6
0x113d JUMPI
---
0x1127: V1627 = 0x0
0x1129: V1628 = 0x0
0x112b: REVERT 0x0 0x0
0x112c: JUMPDEST 
0x112d: V1629 = 0x6
0x112f: V1630 = S[0x6]
0x1130: V1631 = 0x1
0x1132: V1632 = 0xa0
0x1134: V1633 = 0x2
0x1136: V1634 = EXP 0x2 0xa0
0x1137: V1635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1138: V1636 = AND 0xffffffffffffffffffffffffffffffffffffffff V1630
0x1139: V1637 = ISZERO V1636
0x113a: V1638 = 0x3e6
0x113d: THROWI V1637
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x113e
[0x113e:0x11b8]
---
Predecessors: [0x1127]
Successors: [0x11b9]
---
0x113e PUSH1 0x6
0x1140 SLOAD
0x1141 PUSH1 0x3
0x1143 SLOAD
0x1144 PUSH1 0x8
0x1146 SLOAD
0x1147 PUSH1 0x40
0x1149 DUP1
0x114a MLOAD
0x114b PUSH1 0x0
0x114d PUSH1 0x20
0x114f SWAP2
0x1150 DUP3
0x1151 ADD
0x1152 DUP2
0x1153 SWAP1
0x1154 MSTORE
0x1155 DUP3
0x1156 MLOAD
0x1157 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1178 DUP2
0x1179 MSTORE
0x117a PUSH1 0x1
0x117c PUSH1 0xa0
0x117e PUSH1 0x2
0x1180 EXP
0x1181 SUB
0x1182 SWAP6
0x1183 DUP7
0x1184 AND
0x1185 PUSH1 0x4
0x1187 DUP3
0x1188 ADD
0x1189 MSTORE
0x118a PUSH1 0x24
0x118c DUP2
0x118d ADD
0x118e SWAP5
0x118f SWAP1
0x1190 SWAP5
0x1191 MSTORE
0x1192 SWAP2
0x1193 MLOAD
0x1194 SWAP4
0x1195 SWAP1
0x1196 SWAP5
0x1197 AND
0x1198 SWAP4
0x1199 PUSH4 0xa9059cbb
0x119e SWAP4
0x119f PUSH1 0x44
0x11a1 DUP1
0x11a2 DUP6
0x11a3 ADD
0x11a4 SWAP5
0x11a5 SWAP3
0x11a6 SWAP4
0x11a7 SWAP2
0x11a8 SWAP3
0x11a9 DUP4
0x11aa SWAP1
0x11ab SUB
0x11ac ADD
0x11ad SWAP1
0x11ae DUP3
0x11af SWAP1
0x11b0 DUP8
0x11b1 DUP1
0x11b2 EXTCODESIZE
0x11b3 ISZERO
0x11b4 ISZERO
0x11b5 PUSH2 0x3c8
0x11b8 JUMPI
---
0x113e: V1639 = 0x6
0x1140: V1640 = S[0x6]
0x1141: V1641 = 0x3
0x1143: V1642 = S[0x3]
0x1144: V1643 = 0x8
0x1146: V1644 = S[0x8]
0x1147: V1645 = 0x40
0x114a: V1646 = M[0x40]
0x114b: V1647 = 0x0
0x114d: V1648 = 0x20
0x1151: V1649 = ADD 0x20 V1646
0x1154: M[V1649] = 0x0
0x1156: V1650 = M[0x40]
0x1157: V1651 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1179: M[V1650] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x117a: V1652 = 0x1
0x117c: V1653 = 0xa0
0x117e: V1654 = 0x2
0x1180: V1655 = EXP 0x2 0xa0
0x1181: V1656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1184: V1657 = AND 0xffffffffffffffffffffffffffffffffffffffff V1642
0x1185: V1658 = 0x4
0x1188: V1659 = ADD V1650 0x4
0x1189: M[V1659] = V1657
0x118a: V1660 = 0x24
0x118d: V1661 = ADD V1650 0x24
0x1191: M[V1661] = V1644
0x1193: V1662 = M[0x40]
0x1197: V1663 = AND V1640 0xffffffffffffffffffffffffffffffffffffffff
0x1199: V1664 = 0xa9059cbb
0x119f: V1665 = 0x44
0x11a3: V1666 = ADD V1650 0x44
0x11ab: V1667 = SUB V1650 V1662
0x11ac: V1668 = ADD V1667 0x44
0x11b2: V1669 = EXTCODESIZE V1663
0x11b3: V1670 = ISZERO V1669
0x11b4: V1671 = ISZERO V1670
0x11b5: V1672 = 0x3c8
0x11b8: THROWI V1671
---
Entry stack: []
Stack pops: 0
Stack additions: [V1663, 0xa9059cbb, V1666, 0x20, V1662, V1668, V1662, 0x0, V1663]
Exit stack: [V1663, 0xa9059cbb, V1666, 0x20, V1662, V1668, V1662, 0x0, V1663]

================================

Block 0x11b9
[0x11b9:0x11c6]
---
Predecessors: [0x113e]
Successors: [0x11c7]
---
0x11b9 INVALID
0x11ba JUMPDEST
0x11bb PUSH2 0x2c6
0x11be GAS
0x11bf SUB
0x11c0 CALL
0x11c1 ISZERO
0x11c2 ISZERO
0x11c3 PUSH2 0x3d6
0x11c6 JUMPI
---
0x11b9: INVALID 
0x11ba: JUMPDEST 
0x11bb: V1673 = 0x2c6
0x11be: V1674 = GAS
0x11bf: V1675 = SUB V1674 0x2c6
0x11c0: V1676 = CALL V1675 S0 S1 S2 S3 S4 S5
0x11c1: V1677 = ISZERO V1676
0x11c2: V1678 = ISZERO V1677
0x11c3: V1679 = 0x3d6
0x11c6: THROWI V1678
---
Entry stack: [V1663, 0xa9059cbb, V1666, 0x20, V1662, V1668, V1662, 0x0, V1663]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11c7
[0x11c7:0x11d6]
---
Predecessors: [0x11b9]
Successors: [0x11d7]
---
0x11c7 INVALID
0x11c8 JUMPDEST
0x11c9 POP
0x11ca POP
0x11cb PUSH1 0x40
0x11cd MLOAD
0x11ce MLOAD
0x11cf ISZERO
0x11d0 ISZERO
0x11d1 SWAP1
0x11d2 POP
0x11d3 PUSH2 0x3e6
0x11d6 JUMPI
---
0x11c7: INVALID 
0x11c8: JUMPDEST 
0x11cb: V1680 = 0x40
0x11cd: V1681 = M[0x40]
0x11ce: V1682 = M[V1681]
0x11cf: V1683 = ISZERO V1682
0x11d0: V1684 = ISZERO V1683
0x11d3: V1685 = 0x3e6
0x11d6: THROWI V1684
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11d7
[0x11d7:0x11d8]
---
Predecessors: [0x11c7]
Successors: [0x11d9]
---
0x11d7 INVALID
0x11d8 JUMPDEST
---
0x11d7: INVALID 
0x11d8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11d9
[0x11d9:0x11eb]
---
Predecessors: [0x11d7]
Successors: [0x11ec]
---
0x11d9 JUMPDEST
0x11da PUSH1 0x7
0x11dc SLOAD
0x11dd PUSH1 0x1
0x11df PUSH1 0xa0
0x11e1 PUSH1 0x2
0x11e3 EXP
0x11e4 SUB
0x11e5 AND
0x11e6 ISZERO
0x11e7 ISZERO
0x11e8 PUSH2 0x417
0x11eb JUMPI
---
0x11d9: JUMPDEST 
0x11da: V1686 = 0x7
0x11dc: V1687 = S[0x7]
0x11dd: V1688 = 0x1
0x11df: V1689 = 0xa0
0x11e1: V1690 = 0x2
0x11e3: V1691 = EXP 0x2 0xa0
0x11e4: V1692 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e5: V1693 = AND 0xffffffffffffffffffffffffffffffffffffffff V1687
0x11e6: V1694 = ISZERO V1693
0x11e7: V1695 = ISZERO V1694
0x11e8: V1696 = 0x417
0x11eb: THROWI V1695
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11ec
[0x11ec:0x11f5]
---
Predecessors: [0x11d9]
Successors: [0x11f6]
---
0x11ec PUSH1 0x9
0x11ee SLOAD
0x11ef CALLVALUE
0x11f0 LT
0x11f1 ISZERO
0x11f2 PUSH2 0x409
0x11f5 JUMPI
---
0x11ec: V1697 = 0x9
0x11ee: V1698 = S[0x9]
0x11ef: V1699 = CALLVALUE
0x11f0: V1700 = LT V1699 V1698
0x11f1: V1701 = ISZERO V1700
0x11f2: V1702 = 0x409
0x11f5: THROWI V1701
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11f6
[0x11f6:0x128f]
---
Predecessors: [0x11ec]
Successors: [0x1290]
---
0x11f6 PUSH1 0x0
0x11f8 PUSH1 0x0
0x11fa REVERT
0x11fb JUMPDEST
0x11fc PUSH1 0x2
0x11fe SLOAD
0x11ff PUSH1 0x1
0x1201 PUSH1 0xa0
0x1203 PUSH1 0x2
0x1205 EXP
0x1206 SUB
0x1207 AND
0x1208 SELFDESTRUCT
0x1209 JUMPDEST
0x120a PUSH1 0x7
0x120c SLOAD
0x120d PUSH1 0x3
0x120f SLOAD
0x1210 PUSH1 0x2
0x1212 SLOAD
0x1213 PUSH1 0x9
0x1215 SLOAD
0x1216 PUSH1 0x40
0x1218 DUP1
0x1219 MLOAD
0x121a PUSH1 0x0
0x121c PUSH1 0x20
0x121e SWAP2
0x121f DUP3
0x1220 ADD
0x1221 DUP2
0x1222 SWAP1
0x1223 MSTORE
0x1224 DUP3
0x1225 MLOAD
0x1226 PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1247 DUP2
0x1248 MSTORE
0x1249 PUSH1 0x1
0x124b PUSH1 0xa0
0x124d PUSH1 0x2
0x124f EXP
0x1250 SUB
0x1251 SWAP7
0x1252 DUP8
0x1253 AND
0x1254 PUSH1 0x4
0x1256 DUP3
0x1257 ADD
0x1258 MSTORE
0x1259 SWAP5
0x125a DUP7
0x125b AND
0x125c PUSH1 0x24
0x125e DUP7
0x125f ADD
0x1260 MSTORE
0x1261 PUSH1 0x44
0x1263 DUP6
0x1264 ADD
0x1265 SWAP4
0x1266 SWAP1
0x1267 SWAP4
0x1268 MSTORE
0x1269 SWAP1
0x126a MLOAD
0x126b SWAP4
0x126c SWAP1
0x126d SWAP5
0x126e AND
0x126f SWAP4
0x1270 PUSH4 0x23b872dd
0x1275 SWAP4
0x1276 PUSH1 0x64
0x1278 DUP1
0x1279 DUP6
0x127a ADD
0x127b SWAP5
0x127c SWAP3
0x127d SWAP4
0x127e SWAP2
0x127f SWAP3
0x1280 DUP4
0x1281 SWAP1
0x1282 SUB
0x1283 ADD
0x1284 SWAP1
0x1285 DUP3
0x1286 SWAP1
0x1287 DUP8
0x1288 DUP1
0x1289 EXTCODESIZE
0x128a ISZERO
0x128b ISZERO
0x128c PUSH2 0x49f
0x128f JUMPI
---
0x11f6: V1703 = 0x0
0x11f8: V1704 = 0x0
0x11fa: REVERT 0x0 0x0
0x11fb: JUMPDEST 
0x11fc: V1705 = 0x2
0x11fe: V1706 = S[0x2]
0x11ff: V1707 = 0x1
0x1201: V1708 = 0xa0
0x1203: V1709 = 0x2
0x1205: V1710 = EXP 0x2 0xa0
0x1206: V1711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1207: V1712 = AND 0xffffffffffffffffffffffffffffffffffffffff V1706
0x1208: SELFDESTRUCT V1712
0x1209: JUMPDEST 
0x120a: V1713 = 0x7
0x120c: V1714 = S[0x7]
0x120d: V1715 = 0x3
0x120f: V1716 = S[0x3]
0x1210: V1717 = 0x2
0x1212: V1718 = S[0x2]
0x1213: V1719 = 0x9
0x1215: V1720 = S[0x9]
0x1216: V1721 = 0x40
0x1219: V1722 = M[0x40]
0x121a: V1723 = 0x0
0x121c: V1724 = 0x20
0x1220: V1725 = ADD 0x20 V1722
0x1223: M[V1725] = 0x0
0x1225: V1726 = M[0x40]
0x1226: V1727 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1248: M[V1726] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1249: V1728 = 0x1
0x124b: V1729 = 0xa0
0x124d: V1730 = 0x2
0x124f: V1731 = EXP 0x2 0xa0
0x1250: V1732 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1253: V1733 = AND 0xffffffffffffffffffffffffffffffffffffffff V1716
0x1254: V1734 = 0x4
0x1257: V1735 = ADD V1726 0x4
0x1258: M[V1735] = V1733
0x125b: V1736 = AND 0xffffffffffffffffffffffffffffffffffffffff V1718
0x125c: V1737 = 0x24
0x125f: V1738 = ADD V1726 0x24
0x1260: M[V1738] = V1736
0x1261: V1739 = 0x44
0x1264: V1740 = ADD V1726 0x44
0x1268: M[V1740] = V1720
0x126a: V1741 = M[0x40]
0x126e: V1742 = AND V1714 0xffffffffffffffffffffffffffffffffffffffff
0x1270: V1743 = 0x23b872dd
0x1276: V1744 = 0x64
0x127a: V1745 = ADD V1726 0x64
0x1282: V1746 = SUB V1726 V1741
0x1283: V1747 = ADD V1746 0x64
0x1289: V1748 = EXTCODESIZE V1742
0x128a: V1749 = ISZERO V1748
0x128b: V1750 = ISZERO V1749
0x128c: V1751 = 0x49f
0x128f: THROWI V1750
---
Entry stack: []
Stack pops: 0
Stack additions: [V1742, 0x0, V1741, V1747, V1741, 0x20, V1745, 0x23b872dd, V1742]
Exit stack: []

================================

Block 0x1290
[0x1290:0x129d]
---
Predecessors: [0x11f6]
Successors: [0x129e]
---
0x1290 INVALID
0x1291 JUMPDEST
0x1292 PUSH2 0x2c6
0x1295 GAS
0x1296 SUB
0x1297 CALL
0x1298 ISZERO
0x1299 ISZERO
0x129a PUSH2 0x4ad
0x129d JUMPI
---
0x1290: INVALID 
0x1291: JUMPDEST 
0x1292: V1752 = 0x2c6
0x1295: V1753 = GAS
0x1296: V1754 = SUB V1753 0x2c6
0x1297: V1755 = CALL V1754 S0 S1 S2 S3 S4 S5
0x1298: V1756 = ISZERO V1755
0x1299: V1757 = ISZERO V1756
0x129a: V1758 = 0x4ad
0x129d: THROWI V1757
---
Entry stack: [V1742, 0x23b872dd, V1745, 0x20, V1741, V1747, V1741, 0x0, V1742]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x129e
[0x129e:0x12ad]
---
Predecessors: [0x1290]
Successors: [0x12ae]
---
0x129e INVALID
0x129f JUMPDEST
0x12a0 POP
0x12a1 POP
0x12a2 PUSH1 0x40
0x12a4 MLOAD
0x12a5 MLOAD
0x12a6 ISZERO
0x12a7 ISZERO
0x12a8 SWAP1
0x12a9 POP
0x12aa PUSH2 0x4bd
0x12ad JUMPI
---
0x129e: INVALID 
0x129f: JUMPDEST 
0x12a2: V1759 = 0x40
0x12a4: V1760 = M[0x40]
0x12a5: V1761 = M[V1760]
0x12a6: V1762 = ISZERO V1761
0x12a7: V1763 = ISZERO V1762
0x12aa: V1764 = 0x4bd
0x12ad: THROWI V1763
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12ae
[0x12ae:0x12bd]
---
Predecessors: [0x129e]
Successors: [0x12be]
---
0x12ae INVALID
0x12af JUMPDEST
0x12b0 PUSH1 0x3
0x12b2 SLOAD
0x12b3 PUSH1 0x1
0x12b5 PUSH1 0xa0
0x12b7 PUSH1 0x2
0x12b9 EXP
0x12ba SUB
0x12bb AND
0x12bc SELFDESTRUCT
0x12bd JUMPDEST
---
0x12ae: INVALID 
0x12af: JUMPDEST 
0x12b0: V1765 = 0x3
0x12b2: V1766 = S[0x3]
0x12b3: V1767 = 0x1
0x12b5: V1768 = 0xa0
0x12b7: V1769 = 0x2
0x12b9: V1770 = EXP 0x2 0xa0
0x12ba: V1771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12bb: V1772 = AND 0xffffffffffffffffffffffffffffffffffffffff V1766
0x12bc: SELFDESTRUCT V1772
0x12bd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12be
[0x12be:0x1337]
---
Predecessors: [0x12ae]
Successors: [0x1338]
---
0x12be JUMPDEST
0x12bf POP
0x12c0 JUMP
0x12c1 JUMPDEST
0x12c2 PUSH1 0x2
0x12c4 SLOAD
0x12c5 PUSH1 0x1
0x12c7 PUSH1 0xa0
0x12c9 PUSH1 0x2
0x12cb EXP
0x12cc SUB
0x12cd AND
0x12ce DUP2
0x12cf JUMP
0x12d0 JUMPDEST
0x12d1 PUSH1 0x6
0x12d3 SLOAD
0x12d4 PUSH1 0x1
0x12d6 PUSH1 0xa0
0x12d8 PUSH1 0x2
0x12da EXP
0x12db SUB
0x12dc AND
0x12dd DUP2
0x12de JUMP
0x12df JUMPDEST
0x12e0 DUP1
0x12e1 PUSH1 0x1
0x12e3 PUSH1 0xa0
0x12e5 PUSH1 0x2
0x12e7 EXP
0x12e8 SUB
0x12e9 AND
0x12ea SELFDESTRUCT
0x12eb JUMPDEST
0x12ec POP
0x12ed JUMP
0x12ee JUMPDEST
0x12ef PUSH1 0x8
0x12f1 SLOAD
0x12f2 DUP2
0x12f3 JUMP
0x12f4 JUMPDEST
0x12f5 PUSH1 0x7
0x12f7 SLOAD
0x12f8 PUSH1 0x1
0x12fa PUSH1 0xa0
0x12fc PUSH1 0x2
0x12fe EXP
0x12ff SUB
0x1300 AND
0x1301 DUP2
0x1302 JUMP
0x1303 JUMPDEST
0x1304 PUSH1 0x4
0x1306 SLOAD
0x1307 PUSH1 0x1
0x1309 PUSH1 0xa0
0x130b PUSH1 0x2
0x130d EXP
0x130e SUB
0x130f AND
0x1310 DUP2
0x1311 JUMP
0x1312 JUMPDEST
0x1313 PUSH1 0x3
0x1315 SLOAD
0x1316 PUSH1 0x1
0x1318 PUSH1 0xa0
0x131a PUSH1 0x2
0x131c EXP
0x131d SUB
0x131e AND
0x131f DUP2
0x1320 JUMP
0x1321 JUMPDEST
0x1322 PUSH1 0x1
0x1324 SLOAD
0x1325 CALLER
0x1326 PUSH1 0x1
0x1328 PUSH1 0xa0
0x132a PUSH1 0x2
0x132c EXP
0x132d SUB
0x132e SWAP1
0x132f DUP2
0x1330 AND
0x1331 SWAP2
0x1332 AND
0x1333 EQ
0x1334 PUSH2 0x54b
0x1337 JUMPI
---
0x12be: JUMPDEST 
0x12c0: JUMP S1
0x12c1: JUMPDEST 
0x12c2: V1773 = 0x2
0x12c4: V1774 = S[0x2]
0x12c5: V1775 = 0x1
0x12c7: V1776 = 0xa0
0x12c9: V1777 = 0x2
0x12cb: V1778 = EXP 0x2 0xa0
0x12cc: V1779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12cd: V1780 = AND 0xffffffffffffffffffffffffffffffffffffffff V1774
0x12cf: JUMP S0
0x12d0: JUMPDEST 
0x12d1: V1781 = 0x6
0x12d3: V1782 = S[0x6]
0x12d4: V1783 = 0x1
0x12d6: V1784 = 0xa0
0x12d8: V1785 = 0x2
0x12da: V1786 = EXP 0x2 0xa0
0x12db: V1787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12dc: V1788 = AND 0xffffffffffffffffffffffffffffffffffffffff V1782
0x12de: JUMP S0
0x12df: JUMPDEST 
0x12e1: V1789 = 0x1
0x12e3: V1790 = 0xa0
0x12e5: V1791 = 0x2
0x12e7: V1792 = EXP 0x2 0xa0
0x12e8: V1793 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e9: V1794 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12ea: SELFDESTRUCT V1794
0x12eb: JUMPDEST 
0x12ed: JUMP S1
0x12ee: JUMPDEST 
0x12ef: V1795 = 0x8
0x12f1: V1796 = S[0x8]
0x12f3: JUMP S0
0x12f4: JUMPDEST 
0x12f5: V1797 = 0x7
0x12f7: V1798 = S[0x7]
0x12f8: V1799 = 0x1
0x12fa: V1800 = 0xa0
0x12fc: V1801 = 0x2
0x12fe: V1802 = EXP 0x2 0xa0
0x12ff: V1803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1300: V1804 = AND 0xffffffffffffffffffffffffffffffffffffffff V1798
0x1302: JUMP S0
0x1303: JUMPDEST 
0x1304: V1805 = 0x4
0x1306: V1806 = S[0x4]
0x1307: V1807 = 0x1
0x1309: V1808 = 0xa0
0x130b: V1809 = 0x2
0x130d: V1810 = EXP 0x2 0xa0
0x130e: V1811 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130f: V1812 = AND 0xffffffffffffffffffffffffffffffffffffffff V1806
0x1311: JUMP S0
0x1312: JUMPDEST 
0x1313: V1813 = 0x3
0x1315: V1814 = S[0x3]
0x1316: V1815 = 0x1
0x1318: V1816 = 0xa0
0x131a: V1817 = 0x2
0x131c: V1818 = EXP 0x2 0xa0
0x131d: V1819 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131e: V1820 = AND 0xffffffffffffffffffffffffffffffffffffffff V1814
0x1320: JUMP S0
0x1321: JUMPDEST 
0x1322: V1821 = 0x1
0x1324: V1822 = S[0x1]
0x1325: V1823 = CALLER
0x1326: V1824 = 0x1
0x1328: V1825 = 0xa0
0x132a: V1826 = 0x2
0x132c: V1827 = EXP 0x2 0xa0
0x132d: V1828 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1330: V1829 = AND 0xffffffffffffffffffffffffffffffffffffffff V1823
0x1332: V1830 = AND V1822 0xffffffffffffffffffffffffffffffffffffffff
0x1333: V1831 = EQ V1830 V1829
0x1334: V1832 = 0x54b
0x1337: THROWI V1831
---
Entry stack: []
Stack pops: 578
Stack additions: []
Exit stack: []

================================

Block 0x1338
[0x1338:0x1352]
---
Predecessors: [0x12be]
Successors: [0x1353]
---
0x1338 PUSH1 0x0
0x133a PUSH1 0x0
0x133c REVERT
0x133d JUMPDEST
0x133e PUSH1 0x3
0x1340 SLOAD
0x1341 PUSH1 0x1
0x1343 PUSH1 0xa0
0x1345 PUSH1 0x2
0x1347 EXP
0x1348 SUB
0x1349 DUP4
0x134a DUP2
0x134b AND
0x134c SWAP2
0x134d AND
0x134e EQ
0x134f PUSH2 0x566
0x1352 JUMPI
---
0x1338: V1833 = 0x0
0x133a: V1834 = 0x0
0x133c: REVERT 0x0 0x0
0x133d: JUMPDEST 
0x133e: V1835 = 0x3
0x1340: V1836 = S[0x3]
0x1341: V1837 = 0x1
0x1343: V1838 = 0xa0
0x1345: V1839 = 0x2
0x1347: V1840 = EXP 0x2 0xa0
0x1348: V1841 = SUB 0x10000000000000000000000000000000000000000 0x1
0x134b: V1842 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x134d: V1843 = AND V1836 0xffffffffffffffffffffffffffffffffffffffff
0x134e: V1844 = EQ V1843 V1842
0x134f: V1845 = 0x566
0x1352: THROWI V1844
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x1353
[0x1353:0x1380]
---
Predecessors: [0x1338]
Successors: [0x1381]
---
0x1353 PUSH1 0x0
0x1355 PUSH1 0x0
0x1357 REVERT
0x1358 JUMPDEST
0x1359 PUSH1 0x3
0x135b DUP1
0x135c SLOAD
0x135d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1372 NOT
0x1373 AND
0x1374 PUSH1 0x1
0x1376 PUSH1 0xa0
0x1378 PUSH1 0x2
0x137a EXP
0x137b SUB
0x137c DUP4
0x137d AND
0x137e OR
0x137f SWAP1
0x1380 SSTORE
---
0x1353: V1846 = 0x0
0x1355: V1847 = 0x0
0x1357: REVERT 0x0 0x0
0x1358: JUMPDEST 
0x1359: V1848 = 0x3
0x135c: V1849 = S[0x3]
0x135d: V1850 = 0xffffffffffffffffffffffffffffffffffffffff
0x1372: V1851 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1373: V1852 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1849
0x1374: V1853 = 0x1
0x1376: V1854 = 0xa0
0x1378: V1855 = 0x2
0x137a: V1856 = EXP 0x2 0xa0
0x137b: V1857 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137d: V1858 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x137e: V1859 = OR V1858 V1852
0x1380: S[0x3] = V1859
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x1381
[0x1381:0x13a1]
---
Predecessors: [0x1353]
Successors: [0x13a2]
---
0x1381 JUMPDEST
0x1382 POP
0x1383 POP
0x1384 JUMP
0x1385 JUMPDEST
0x1386 PUSH1 0x9
0x1388 SLOAD
0x1389 DUP2
0x138a JUMP
0x138b JUMPDEST
0x138c PUSH1 0x1
0x138e SLOAD
0x138f CALLER
0x1390 PUSH1 0x1
0x1392 PUSH1 0xa0
0x1394 PUSH1 0x2
0x1396 EXP
0x1397 SUB
0x1398 SWAP1
0x1399 DUP2
0x139a AND
0x139b SWAP2
0x139c AND
0x139d EQ
0x139e PUSH2 0x5b5
0x13a1 JUMPI
---
0x1381: JUMPDEST 
0x1384: JUMP S2
0x1385: JUMPDEST 
0x1386: V1860 = 0x9
0x1388: V1861 = S[0x9]
0x138a: JUMP S0
0x138b: JUMPDEST 
0x138c: V1862 = 0x1
0x138e: V1863 = S[0x1]
0x138f: V1864 = CALLER
0x1390: V1865 = 0x1
0x1392: V1866 = 0xa0
0x1394: V1867 = 0x2
0x1396: V1868 = EXP 0x2 0xa0
0x1397: V1869 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139a: V1870 = AND 0xffffffffffffffffffffffffffffffffffffffff V1864
0x139c: V1871 = AND V1863 0xffffffffffffffffffffffffffffffffffffffff
0x139d: V1872 = EQ V1871 V1870
0x139e: V1873 = 0x5b5
0x13a1: THROWI V1872
---
Entry stack: [S0]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x13a2
[0x13a2:0x13bd]
---
Predecessors: [0x1381]
Successors: [0x13be]
---
0x13a2 PUSH1 0x0
0x13a4 PUSH1 0x0
0x13a6 REVERT
0x13a7 JUMPDEST
0x13a8 PUSH1 0x3
0x13aa SLOAD
0x13ab PUSH1 0x1
0x13ad PUSH1 0xa0
0x13af PUSH1 0x2
0x13b1 EXP
0x13b2 SUB
0x13b3 DUP3
0x13b4 DUP2
0x13b5 AND
0x13b6 SWAP2
0x13b7 AND
0x13b8 EQ
0x13b9 DUP1
0x13ba PUSH2 0x5f0
0x13bd JUMPI
---
0x13a2: V1874 = 0x0
0x13a4: V1875 = 0x0
0x13a6: REVERT 0x0 0x0
0x13a7: JUMPDEST 
0x13a8: V1876 = 0x3
0x13aa: V1877 = S[0x3]
0x13ab: V1878 = 0x1
0x13ad: V1879 = 0xa0
0x13af: V1880 = 0x2
0x13b1: V1881 = EXP 0x2 0xa0
0x13b2: V1882 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13b5: V1883 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x13b7: V1884 = AND V1877 0xffffffffffffffffffffffffffffffffffffffff
0x13b8: V1885 = EQ V1884 V1883
0x13ba: V1886 = 0x5f0
0x13bd: THROWI V1885
---
Entry stack: []
Stack pops: 0
Stack additions: [V1885, S0]
Exit stack: []

================================

Block 0x13be
[0x13be:0x13cf]
---
Predecessors: [0x13a2]
Successors: [0x13d0]
---
0x13be POP
0x13bf PUSH1 0x0
0x13c1 SLOAD
0x13c2 PUSH3 0x15180
0x13c6 ADD
0x13c7 TIMESTAMP
0x13c8 LT
0x13c9 ISZERO
0x13ca DUP1
0x13cb ISZERO
0x13cc PUSH2 0x5f0
0x13cf JUMPI
---
0x13bf: V1887 = 0x0
0x13c1: V1888 = S[0x0]
0x13c2: V1889 = 0x15180
0x13c6: V1890 = ADD 0x15180 V1888
0x13c7: V1891 = TIMESTAMP
0x13c8: V1892 = LT V1891 V1890
0x13c9: V1893 = ISZERO V1892
0x13cb: V1894 = ISZERO V1893
0x13cc: V1895 = 0x5f0
0x13cf: THROWI V1894
---
Entry stack: [S1, V1885]
Stack pops: 1
Stack additions: [V1893]
Exit stack: [S1, V1893]

================================

Block 0x13d0
[0x13d0:0x13e1]
---
Predecessors: [0x13be]
Successors: [0x13e2]
---
0x13d0 POP
0x13d1 PUSH1 0x2
0x13d3 SLOAD
0x13d4 PUSH1 0x1
0x13d6 PUSH1 0xa0
0x13d8 PUSH1 0x2
0x13da EXP
0x13db SUB
0x13dc DUP3
0x13dd DUP2
0x13de AND
0x13df SWAP2
0x13e0 AND
0x13e1 EQ
---
0x13d1: V1896 = 0x2
0x13d3: V1897 = S[0x2]
0x13d4: V1898 = 0x1
0x13d6: V1899 = 0xa0
0x13d8: V1900 = 0x2
0x13da: V1901 = EXP 0x2 0xa0
0x13db: V1902 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13de: V1903 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x13e0: V1904 = AND V1897 0xffffffffffffffffffffffffffffffffffffffff
0x13e1: V1905 = EQ V1904 V1903
---
Entry stack: [S1, V1893]
Stack pops: 2
Stack additions: [S1, V1905]
Exit stack: [S1, V1905]

================================

Block 0x13e2
[0x13e2:0x13e2]
---
Predecessors: [0x13d0]
Successors: [0x13e3]
---
0x13e2 JUMPDEST
---
0x13e2: JUMPDEST 
---
Entry stack: [S1, V1905]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1905]

================================

Block 0x13e3
[0x13e3:0x13e9]
---
Predecessors: [0x13e2]
Successors: [0x13ea]
---
0x13e3 JUMPDEST
0x13e4 ISZERO
0x13e5 ISZERO
0x13e6 PUSH2 0x5fd
0x13e9 JUMPI
---
0x13e3: JUMPDEST 
0x13e4: V1906 = ISZERO V1905
0x13e5: V1907 = ISZERO V1906
0x13e6: V1908 = 0x5fd
0x13e9: THROWI V1907
---
Entry stack: [S1, V1905]
Stack pops: 1
Stack additions: []
Exit stack: [S1]

================================

Block 0x13ea
[0x13ea:0x1400]
---
Predecessors: [0x13e3]
Successors: [0x1401]
---
0x13ea PUSH1 0x0
0x13ec PUSH1 0x0
0x13ee REVERT
0x13ef JUMPDEST
0x13f0 PUSH1 0x6
0x13f2 SLOAD
0x13f3 PUSH1 0x1
0x13f5 PUSH1 0xa0
0x13f7 PUSH1 0x2
0x13f9 EXP
0x13fa SUB
0x13fb AND
0x13fc ISZERO
0x13fd PUSH2 0x409
0x1400 JUMPI
---
0x13ea: V1909 = 0x0
0x13ec: V1910 = 0x0
0x13ee: REVERT 0x0 0x0
0x13ef: JUMPDEST 
0x13f0: V1911 = 0x6
0x13f2: V1912 = S[0x6]
0x13f3: V1913 = 0x1
0x13f5: V1914 = 0xa0
0x13f7: V1915 = 0x2
0x13f9: V1916 = EXP 0x2 0xa0
0x13fa: V1917 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13fb: V1918 = AND 0xffffffffffffffffffffffffffffffffffffffff V1912
0x13fc: V1919 = ISZERO V1918
0x13fd: V1920 = 0x409
0x1400: THROWI V1919
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1401
[0x1401:0x147b]
---
Predecessors: [0x13ea]
Successors: [0x147c]
---
0x1401 PUSH1 0x6
0x1403 SLOAD
0x1404 PUSH1 0x2
0x1406 SLOAD
0x1407 PUSH1 0x8
0x1409 SLOAD
0x140a PUSH1 0x40
0x140c DUP1
0x140d MLOAD
0x140e PUSH1 0x0
0x1410 PUSH1 0x20
0x1412 SWAP2
0x1413 DUP3
0x1414 ADD
0x1415 DUP2
0x1416 SWAP1
0x1417 MSTORE
0x1418 DUP3
0x1419 MLOAD
0x141a PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x143b DUP2
0x143c MSTORE
0x143d PUSH1 0x1
0x143f PUSH1 0xa0
0x1441 PUSH1 0x2
0x1443 EXP
0x1444 SUB
0x1445 SWAP6
0x1446 DUP7
0x1447 AND
0x1448 PUSH1 0x4
0x144a DUP3
0x144b ADD
0x144c MSTORE
0x144d PUSH1 0x24
0x144f DUP2
0x1450 ADD
0x1451 SWAP5
0x1452 SWAP1
0x1453 SWAP5
0x1454 MSTORE
0x1455 SWAP2
0x1456 MLOAD
0x1457 SWAP4
0x1458 SWAP1
0x1459 SWAP5
0x145a AND
0x145b SWAP4
0x145c PUSH4 0xa9059cbb
0x1461 SWAP4
0x1462 PUSH1 0x44
0x1464 DUP1
0x1465 DUP6
0x1466 ADD
0x1467 SWAP5
0x1468 SWAP3
0x1469 SWAP4
0x146a SWAP2
0x146b SWAP3
0x146c DUP4
0x146d SWAP1
0x146e SUB
0x146f ADD
0x1470 SWAP1
0x1471 DUP3
0x1472 SWAP1
0x1473 DUP8
0x1474 DUP1
0x1475 EXTCODESIZE
0x1476 ISZERO
0x1477 ISZERO
0x1478 PUSH2 0x68b
0x147b JUMPI
---
0x1401: V1921 = 0x6
0x1403: V1922 = S[0x6]
0x1404: V1923 = 0x2
0x1406: V1924 = S[0x2]
0x1407: V1925 = 0x8
0x1409: V1926 = S[0x8]
0x140a: V1927 = 0x40
0x140d: V1928 = M[0x40]
0x140e: V1929 = 0x0
0x1410: V1930 = 0x20
0x1414: V1931 = ADD 0x20 V1928
0x1417: M[V1931] = 0x0
0x1419: V1932 = M[0x40]
0x141a: V1933 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x143c: M[V1932] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x143d: V1934 = 0x1
0x143f: V1935 = 0xa0
0x1441: V1936 = 0x2
0x1443: V1937 = EXP 0x2 0xa0
0x1444: V1938 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1447: V1939 = AND 0xffffffffffffffffffffffffffffffffffffffff V1924
0x1448: V1940 = 0x4
0x144b: V1941 = ADD V1932 0x4
0x144c: M[V1941] = V1939
0x144d: V1942 = 0x24
0x1450: V1943 = ADD V1932 0x24
0x1454: M[V1943] = V1926
0x1456: V1944 = M[0x40]
0x145a: V1945 = AND V1922 0xffffffffffffffffffffffffffffffffffffffff
0x145c: V1946 = 0xa9059cbb
0x1462: V1947 = 0x44
0x1466: V1948 = ADD V1932 0x44
0x146e: V1949 = SUB V1932 V1944
0x146f: V1950 = ADD V1949 0x44
0x1475: V1951 = EXTCODESIZE V1945
0x1476: V1952 = ISZERO V1951
0x1477: V1953 = ISZERO V1952
0x1478: V1954 = 0x68b
0x147b: THROWI V1953
---
Entry stack: []
Stack pops: 0
Stack additions: [V1945, 0xa9059cbb, V1948, 0x20, V1944, V1950, V1944, 0x0, V1945]
Exit stack: [V1945, 0xa9059cbb, V1948, 0x20, V1944, V1950, V1944, 0x0, V1945]

================================

Block 0x147c
[0x147c:0x1489]
---
Predecessors: [0x1401]
Successors: [0x148a]
---
0x147c INVALID
0x147d JUMPDEST
0x147e PUSH2 0x2c6
0x1481 GAS
0x1482 SUB
0x1483 CALL
0x1484 ISZERO
0x1485 ISZERO
0x1486 PUSH2 0x699
0x1489 JUMPI
---
0x147c: INVALID 
0x147d: JUMPDEST 
0x147e: V1955 = 0x2c6
0x1481: V1956 = GAS
0x1482: V1957 = SUB V1956 0x2c6
0x1483: V1958 = CALL V1957 S0 S1 S2 S3 S4 S5
0x1484: V1959 = ISZERO V1958
0x1485: V1960 = ISZERO V1959
0x1486: V1961 = 0x699
0x1489: THROWI V1960
---
Entry stack: [V1945, 0xa9059cbb, V1948, 0x20, V1944, V1950, V1944, 0x0, V1945]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x148a
[0x148a:0x1499]
---
Predecessors: [0x147c]
Successors: [0x149a]
---
0x148a INVALID
0x148b JUMPDEST
0x148c POP
0x148d POP
0x148e PUSH1 0x40
0x1490 MLOAD
0x1491 MLOAD
0x1492 ISZERO
0x1493 ISZERO
0x1494 SWAP1
0x1495 POP
0x1496 PUSH2 0x409
0x1499 JUMPI
---
0x148a: INVALID 
0x148b: JUMPDEST 
0x148e: V1962 = 0x40
0x1490: V1963 = M[0x40]
0x1491: V1964 = M[V1963]
0x1492: V1965 = ISZERO V1964
0x1493: V1966 = ISZERO V1965
0x1496: V1967 = 0x409
0x1499: THROWI V1966
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x149a
[0x149a:0x149b]
---
Predecessors: [0x148a]
Successors: [0x149c]
---
0x149a INVALID
0x149b JUMPDEST
---
0x149a: INVALID 
0x149b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x149c
[0x149c:0x14e2]
---
Predecessors: [0x149a]
Successors: [0x14e3]
---
0x149c JUMPDEST
0x149d PUSH1 0x2
0x149f SLOAD
0x14a0 PUSH1 0x1
0x14a2 PUSH1 0xa0
0x14a4 PUSH1 0x2
0x14a6 EXP
0x14a7 SUB
0x14a8 AND
0x14a9 SELFDESTRUCT
0x14aa JUMPDEST
0x14ab POP
0x14ac JUMP
0x14ad JUMPDEST
0x14ae PUSH1 0x1
0x14b0 SLOAD
0x14b1 PUSH1 0x1
0x14b3 PUSH1 0xa0
0x14b5 PUSH1 0x2
0x14b7 EXP
0x14b8 SUB
0x14b9 AND
0x14ba DUP2
0x14bb JUMP
0x14bc JUMPDEST
0x14bd PUSH1 0x0
0x14bf SLOAD
0x14c0 DUP2
0x14c1 JUMP
0x14c2 JUMPDEST
0x14c3 PUSH1 0x5
0x14c5 SLOAD
0x14c6 PUSH1 0x1
0x14c8 PUSH1 0xa0
0x14ca PUSH1 0x2
0x14cc EXP
0x14cd SUB
0x14ce AND
0x14cf DUP2
0x14d0 JUMP
0x14d1 STOP
0x14d2 LOG1
0x14d3 PUSH6 0x627a7a723058
0x14da SHA3
0x14db MSIZE
0x14dc DUP6
0x14dd NUMBER
0x14de CODECOPY
0x14df MISSING 0xad
0x14e0 SDIV
0x14e1 MISSING 0xc5
0x14e2 GAS
---
0x149c: JUMPDEST 
0x149d: V1968 = 0x2
0x149f: V1969 = S[0x2]
0x14a0: V1970 = 0x1
0x14a2: V1971 = 0xa0
0x14a4: V1972 = 0x2
0x14a6: V1973 = EXP 0x2 0xa0
0x14a7: V1974 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a8: V1975 = AND 0xffffffffffffffffffffffffffffffffffffffff V1969
0x14a9: SELFDESTRUCT V1975
0x14aa: JUMPDEST 
0x14ac: JUMP S1
0x14ad: JUMPDEST 
0x14ae: V1976 = 0x1
0x14b0: V1977 = S[0x1]
0x14b1: V1978 = 0x1
0x14b3: V1979 = 0xa0
0x14b5: V1980 = 0x2
0x14b7: V1981 = EXP 0x2 0xa0
0x14b8: V1982 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b9: V1983 = AND 0xffffffffffffffffffffffffffffffffffffffff V1977
0x14bb: JUMP S0
0x14bc: JUMPDEST 
0x14bd: V1984 = 0x0
0x14bf: V1985 = S[0x0]
0x14c1: JUMP S0
0x14c2: JUMPDEST 
0x14c3: V1986 = 0x5
0x14c5: V1987 = S[0x5]
0x14c6: V1988 = 0x1
0x14c8: V1989 = 0xa0
0x14ca: V1990 = 0x2
0x14cc: V1991 = EXP 0x2 0xa0
0x14cd: V1992 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14ce: V1993 = AND 0xffffffffffffffffffffffffffffffffffffffff V1987
0x14d0: JUMP S0
0x14d1: STOP 
0x14d2: LOG S0 S1 S2
0x14d3: V1994 = 0x627a7a723058
0x14da: V1995 = SHA3 0x627a7a723058 S3
0x14db: V1996 = MSIZE
0x14dd: V1997 = NUMBER
0x14de: CODECOPY V1997 S7 V1996
0x14df: MISSING 0xad
0x14e0: V1998 = SDIV S0 S1
0x14e1: MISSING 0xc5
0x14e2: V1999 = GAS
---
Entry stack: []
Stack pops: 0
Stack additions: [V1983, S0, V1985, S0, V1993, S0, V1995, S4, S5, S6, S7, V1998, V1999]
Exit stack: []

================================

Block 0x14e3
[0x14e3:0x153d]
---
Predecessors: [0x149c]
Successors: []
---
0x14e3 JUMPDEST
0x14e4 MISSING 0x47
0x14e5 CREATE
0x14e6 LOG3
0x14e7 MISSING 0x2c
0x14e8 MISSING 0xe7
0x14e9 MISSING 0xbc
0x14ea MISSING 0xde
0x14eb PUSH20 0x2e1f1208494a57d87c4643cc723e8c0029a16562
0x1500 PUSH27 0x7a72305820dce2c9cf67f9411a9a45328a5e8f9051fd08c43cbbab
0x151c DUP10
0x151d MISSING 0xa5
0x151e SLOAD
0x151f MISSING 0xc1
0x1520 MISSING 0xe6
0x1521 PUSH28 0xcbe3b1380029
---
0x14e3: JUMPDEST 
0x14e4: MISSING 0x47
0x14e5: V2000 = CREATE S0 S1 S2
0x14e6: LOG V2000 S3 S4 S5 S6
0x14e7: MISSING 0x2c
0x14e8: MISSING 0xe7
0x14e9: MISSING 0xbc
0x14ea: MISSING 0xde
0x14eb: V2001 = 0x2e1f1208494a57d87c4643cc723e8c0029a16562
0x1500: V2002 = 0x7a72305820dce2c9cf67f9411a9a45328a5e8f9051fd08c43cbbab
0x151d: MISSING 0xa5
0x151e: V2003 = S[S0]
0x151f: MISSING 0xc1
0x1520: MISSING 0xe6
0x1521: V2004 = 0xcbe3b1380029
---
Entry stack: [V1999]
Stack pops: 0
Stack additions: [S7, 0x7a72305820dce2c9cf67f9411a9a45328a5e8f9051fd08c43cbbab, 0x2e1f1208494a57d87c4643cc723e8c0029a16562, S0, S1, S2, S3, S4, S5, S6, S7, V2003, 0xcbe3b1380029]
Exit stack: []

================================

Function 0:
Public function signature: 0x97c1e25
Entry block: 0x95
Exit block: 0x243
Body: 0x95, 0x9c, 0x9d, 0x22c, 0x243, 0x248

Function 1:
Public function signature: 0xc36add8
Entry block: 0xa7
Exit block: 0xa5
Body: 0xa5, 0xa7, 0x258, 0x26f, 0x274, 0x284, 0x285

Function 2:
Public function signature: 0x1b15982a
Entry block: 0xd3
Exit block: 0xa5
Body: 0xa5, 0xd3, 0x28d, 0x2b0, 0x2b5, 0x327, 0x328, 0x335, 0x336, 0x3a0, 0x3a1, 0x3ae, 0x3af, 0x3fe, 0x3ff, 0x40c, 0x40d, 0x45c, 0x45d, 0x46a, 0x46b, 0x4a4

Function 3:
Public function signature: 0x26b85ee1
Entry block: 0xe9
Exit block: 0xf9
Body: 0xe9, 0xf0, 0xf1, 0xf9, 0x4a8

Function 4:
Public function signature: 0x6b3fc293
Entry block: 0x115
Exit block: 0xa5
Body: 0xa5, 0x115

Function 5:
Public function signature: 0xb2a20cf0
Entry block: 0x144
Exit block: 0xa5
Body: 0xa5, 0x144, 0x14b, 0x14c, 0x7e3, 0x806, 0x80b, 0x87d, 0x87e, 0x88b, 0x88c, 0x890

Function 6:
Public function signature: 0xba45b0b8
Entry block: 0x162
Exit block: 0xa5
Body: 0xa5, 0x162, 0x169, 0x16a, 0x284, 0x285, 0x894, 0x8b7, 0x8bc, 0x925, 0x926, 0x933, 0x934, 0x984, 0x985, 0x992, 0x993, 0xa32, 0xa33, 0xa40

Function 7:
Public function signature: 0xc2fc74b4
Entry block: 0x186
Exit block: 0xf9
Body: 0xf9, 0x186, 0x18d, 0x18e, 0xa4a

Function 8:
Public function signature: 0xc77911aa
Entry block: 0x1b2
Exit block: 0x1ce
Body: 0x1b2, 0x1b9, 0x1ba, 0x1ce, 0xa59

Function 9:
Public function signature: 0xc8db233e
Entry block: 0x1e2
Exit block: 0xa5
Body: 0xa5, 0x1e2, 0x1e9, 0x1ea, 0x3a1, 0x3ae, 0x3af, 0x3fe, 0x3ff, 0x40c, 0x40d, 0x45c, 0x45d, 0x46a, 0x46b, 0x4a4, 0xa6e, 0xa91, 0xa96, 0xb08, 0xb09, 0xb16, 0xb17, 0xb80

Function 10:
Public function signature: 0xf52c85fd
Entry block: 0x200
Exit block: 0xf9
Body: 0xf9, 0x200, 0x207, 0x208, 0xc88

Function 11:
Public fallback function
Entry block: 0x93
Exit block: 0x93
Body: 0x93

Function 12:
Private function
Entry block: 0x4b7
Exit block: 0x7d8
Body: 0x4b7, 0x4d8, 0x4e7, 0x4f6, 0x507, 0x516, 0x521, 0x550, 0x551, 0x556, 0x5cf, 0x5dd, 0x5ed, 0x5ee, 0x5f3, 0x5fc, 0x60b, 0x611, 0x613, 0x63c, 0x69f, 0x6d0, 0x737, 0x745, 0x755, 0x756, 0x7cc, 0x7d7, 0x7d8, 0xc97

