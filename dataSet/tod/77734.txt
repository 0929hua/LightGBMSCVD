Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2852b71c
0x3c EQ
0x3d PUSH2 0x7e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2852b71c
0x3c: V13 = EQ 0x2852b71c V11
0x3d: V14 = 0x7e
0x40: JUMPI 0x7e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x88]
---
0x41 DUP1
0x42 PUSH4 0xc2dc3b79
0x47 EQ
0x48 PUSH2 0x88
0x4b JUMPI
---
0x42: V15 = 0xc2dc3b79
0x47: V16 = EQ 0xc2dc3b79 V11
0x48: V17 = 0x88
0x4b: JUMPI 0x88 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x92]
---
0x4c DUP1
0x4d PUSH4 0xe0d7cb6f
0x52 EQ
0x53 PUSH2 0x92
0x56 JUMPI
---
0x4d: V18 = 0xe0d7cb6f
0x52: V19 = EQ 0xe0d7cb6f V11
0x53: V20 = 0x92
0x56: JUMPI 0x92 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x9c]
---
0x57 DUP1
0x58 PUSH4 0xea8a1af0
0x5d EQ
0x5e PUSH2 0x9c
0x61 JUMPI
---
0x58: V21 = 0xea8a1af0
0x5d: V22 = EQ 0xea8a1af0 V11
0x5e: V23 = 0x9c
0x61: JUMPI 0x9c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x7d]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x1
0x65 PUSH1 0x0
0x67 DUP1
0x68 PUSH2 0x100
0x6b EXP
0x6c DUP2
0x6d SLOAD
0x6e DUP2
0x6f PUSH1 0xff
0x71 MUL
0x72 NOT
0x73 AND
0x74 SWAP1
0x75 DUP4
0x76 ISZERO
0x77 ISZERO
0x78 MUL
0x79 OR
0x7a SWAP1
0x7b SSTORE
0x7c POP
0x7d STOP
---
0x62: JUMPDEST 
0x63: V24 = 0x1
0x65: V25 = 0x0
0x68: V26 = 0x100
0x6b: V27 = EXP 0x100 0x0
0x6d: V28 = S[0x0]
0x6f: V29 = 0xff
0x71: V30 = MUL 0xff 0x1
0x72: V31 = NOT 0xff
0x73: V32 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V28
0x76: V33 = ISZERO 0x1
0x77: V34 = ISZERO 0x0
0x78: V35 = MUL 0x1 0x1
0x79: V36 = OR 0x1 V32
0x7b: S[0x0] = V36
0x7d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x85]
---
Predecessors: [0xd]
Successors: [0xa6]
---
0x7e JUMPDEST
0x7f PUSH2 0x86
0x82 PUSH2 0xa6
0x85 JUMP
---
0x7e: JUMPDEST 
0x7f: V37 = 0x86
0x82: V38 = 0xa6
0x85: JUMP 0xa6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0x86
[0x86:0x87]
---
Predecessors: [0x124]
Successors: []
---
0x86 JUMPDEST
0x87 STOP
---
0x86: JUMPDEST 
0x87: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x41]
Successors: [0x126]
---
0x88 JUMPDEST
0x89 PUSH2 0x90
0x8c PUSH2 0x126
0x8f JUMP
---
0x88: JUMPDEST 
0x89: V39 = 0x90
0x8c: V40 = 0x126
0x8f: JUMP 0x126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90]
Exit stack: [V11, 0x90]

================================

Block 0x90
[0x90:0x91]
---
Predecessors: [0x21a]
Successors: []
---
0x90 JUMPDEST
0x91 STOP
---
0x90: JUMPDEST 
0x91: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x99]
---
Predecessors: [0x4c]
Successors: [0x21c]
---
0x92 JUMPDEST
0x93 PUSH2 0x9a
0x96 PUSH2 0x21c
0x99 JUMP
---
0x92: JUMPDEST 
0x93: V41 = 0x9a
0x96: V42 = 0x21c
0x99: JUMP 0x21c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V11, 0x9a]

================================

Block 0x9a
[0x9a:0x9b]
---
Predecessors: [0x446]
Successors: []
---
0x9a JUMPDEST
0x9b STOP
---
0x9a: JUMPDEST 
0x9b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x57]
Successors: [0x448]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x448
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V43 = 0xa4
0xa0: V44 = 0x448
0xa3: JUMP 0x448
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V11, 0xa4]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: [0x4f2]
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6
[0xa6:0xbc]
---
Predecessors: [0x7e]
Successors: [0xbd, 0x124]
---
0xa6 JUMPDEST
0xa7 PUSH1 0x0
0xa9 PUSH1 0x1
0xab SWAP1
0xac SLOAD
0xad SWAP1
0xae PUSH2 0x100
0xb1 EXP
0xb2 SWAP1
0xb3 DIV
0xb4 PUSH1 0xff
0xb6 AND
0xb7 ISZERO
0xb8 ISZERO
0xb9 PUSH2 0x124
0xbc JUMPI
---
0xa6: JUMPDEST 
0xa7: V45 = 0x0
0xa9: V46 = 0x1
0xac: V47 = S[0x0]
0xae: V48 = 0x100
0xb1: V49 = EXP 0x100 0x1
0xb3: V50 = DIV V47 0x100
0xb4: V51 = 0xff
0xb6: V52 = AND 0xff V50
0xb7: V53 = ISZERO V52
0xb8: V54 = ISZERO V53
0xb9: V55 = 0x124
0xbc: JUMPI 0x124 V54
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0xbd
[0xbd:0x123]
---
Predecessors: [0xa6]
Successors: [0x124]
---
0xbd CALLER
0xbe PUSH1 0x0
0xc0 PUSH1 0x4
0xc2 PUSH2 0x100
0xc5 EXP
0xc6 DUP2
0xc7 SLOAD
0xc8 DUP2
0xc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde MUL
0xdf NOT
0xe0 AND
0xe1 SWAP1
0xe2 DUP4
0xe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8 AND
0xf9 MUL
0xfa OR
0xfb SWAP1
0xfc SSTORE
0xfd POP
0xfe PUSH1 0x1
0x100 PUSH1 0x0
0x102 PUSH1 0x1
0x104 PUSH2 0x100
0x107 EXP
0x108 DUP2
0x109 SLOAD
0x10a DUP2
0x10b PUSH1 0xff
0x10d MUL
0x10e NOT
0x10f AND
0x110 SWAP1
0x111 DUP4
0x112 ISZERO
0x113 ISZERO
0x114 MUL
0x115 OR
0x116 SWAP1
0x117 SSTORE
0x118 POP
0x119 PUSH1 0x5
0x11b SLOAD
0x11c NUMBER
0x11d ADD
0x11e PUSH1 0x6
0x120 DUP2
0x121 SWAP1
0x122 SSTORE
0x123 POP
---
0xbd: V56 = CALLER
0xbe: V57 = 0x0
0xc0: V58 = 0x4
0xc2: V59 = 0x100
0xc5: V60 = EXP 0x100 0x4
0xc7: V61 = S[0x0]
0xc9: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0xde: V63 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x100000000
0xdf: V64 = NOT 0xffffffffffffffffffffffffffffffffffffffff00000000
0xe0: V65 = AND 0xffffffffffffffff0000000000000000000000000000000000000000ffffffff V61
0xe3: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf9: V68 = MUL V67 0x100000000
0xfa: V69 = OR V68 V65
0xfc: S[0x0] = V69
0xfe: V70 = 0x1
0x100: V71 = 0x0
0x102: V72 = 0x1
0x104: V73 = 0x100
0x107: V74 = EXP 0x100 0x1
0x109: V75 = S[0x0]
0x10b: V76 = 0xff
0x10d: V77 = MUL 0xff 0x100
0x10e: V78 = NOT 0xff00
0x10f: V79 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V75
0x112: V80 = ISZERO 0x1
0x113: V81 = ISZERO 0x0
0x114: V82 = MUL 0x1 0x100
0x115: V83 = OR 0x100 V79
0x117: S[0x0] = V83
0x119: V84 = 0x5
0x11b: V85 = S[0x5]
0x11c: V86 = NUMBER
0x11d: V87 = ADD V86 V85
0x11e: V88 = 0x6
0x122: S[0x6] = V87
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x124
[0x124:0x125]
---
Predecessors: [0xa6, 0xbd]
Successors: [0x86]
---
0x124 JUMPDEST
0x125 JUMP
---
0x124: JUMPDEST 
0x125: JUMP 0x86
---
Entry stack: [V11, 0x86]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x126
[0x126:0x130]
---
Predecessors: [0x88]
Successors: [0x131, 0x21a]
---
0x126 JUMPDEST
0x127 PUSH1 0x6
0x129 SLOAD
0x12a NUMBER
0x12b GT
0x12c ISZERO
0x12d PUSH2 0x21a
0x130 JUMPI
---
0x126: JUMPDEST 
0x127: V89 = 0x6
0x129: V90 = S[0x6]
0x12a: V91 = NUMBER
0x12b: V92 = GT V91 V90
0x12c: V93 = ISZERO V92
0x12d: V94 = 0x21a
0x130: JUMPI 0x21a V93
---
Entry stack: [V11, 0x90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90]

================================

Block 0x131
[0x131:0x186]
---
Predecessors: [0x126]
Successors: [0x187, 0x1d9]
---
0x131 PUSH1 0x1
0x133 PUSH1 0x0
0x135 SWAP1
0x136 SLOAD
0x137 SWAP1
0x138 PUSH2 0x100
0x13b EXP
0x13c SWAP1
0x13d DIV
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a CALLER
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 EQ
0x182 DUP1
0x183 PUSH2 0x1d9
0x186 JUMPI
---
0x131: V95 = 0x1
0x133: V96 = 0x0
0x136: V97 = S[0x1]
0x138: V98 = 0x100
0x13b: V99 = EXP 0x100 0x0
0x13d: V100 = DIV V97 0x1
0x13e: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x154: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x16a: V105 = CALLER
0x16b: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x181: V108 = EQ V107 V104
0x183: V109 = 0x1d9
0x186: JUMPI 0x1d9 V108
---
Entry stack: [V11, 0x90]
Stack pops: 0
Stack additions: [V108]
Exit stack: [V11, 0x90, V108]

================================

Block 0x187
[0x187:0x1d8]
---
Predecessors: [0x131]
Successors: [0x1d9]
---
0x187 POP
0x188 PUSH1 0x0
0x18a PUSH1 0x4
0x18c SWAP1
0x18d SLOAD
0x18e SWAP1
0x18f PUSH2 0x100
0x192 EXP
0x193 SWAP1
0x194 DIV
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 CALLER
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 EQ
---
0x188: V110 = 0x0
0x18a: V111 = 0x4
0x18d: V112 = S[0x0]
0x18f: V113 = 0x100
0x192: V114 = EXP 0x100 0x4
0x194: V115 = DIV V112 0x100000000
0x195: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1ab: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1c1: V120 = CALLER
0x1c2: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1d8: V123 = EQ V122 V119
---
Entry stack: [V11, 0x90, V108]
Stack pops: 1
Stack additions: [V123]
Exit stack: [V11, 0x90, V123]

================================

Block 0x1d9
[0x1d9:0x1de]
---
Predecessors: [0x131, 0x187]
Successors: [0x1df, 0x219]
---
0x1d9 JUMPDEST
0x1da ISZERO
0x1db PUSH2 0x219
0x1de JUMPI
---
0x1d9: JUMPDEST 
0x1da: V124 = ISZERO S0
0x1db: V125 = 0x219
0x1de: JUMPI 0x219 V124
---
Entry stack: [V11, 0x90, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x90]

================================

Block 0x1df
[0x1df:0x218]
---
Predecessors: [0x1d9]
Successors: []
---
0x1df PUSH1 0x2
0x1e1 PUSH1 0x0
0x1e3 SWAP1
0x1e4 SLOAD
0x1e5 SWAP1
0x1e6 PUSH2 0x100
0x1e9 EXP
0x1ea SWAP1
0x1eb DIV
0x1ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x201 AND
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 SELFDESTRUCT
---
0x1df: V126 = 0x2
0x1e1: V127 = 0x0
0x1e4: V128 = S[0x2]
0x1e6: V129 = 0x100
0x1e9: V130 = EXP 0x100 0x0
0x1eb: V131 = DIV V128 0x1
0x1ec: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x201: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x202: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x218: SELFDESTRUCT V135
---
Entry stack: [V11, 0x90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90]

================================

Block 0x219
[0x219:0x219]
---
Predecessors: [0x1d9]
Successors: [0x21a]
---
0x219 JUMPDEST
---
0x219: JUMPDEST 
---
Entry stack: [V11, 0x90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90]

================================

Block 0x21a
[0x21a:0x21b]
---
Predecessors: [0x126, 0x219]
Successors: [0x90]
---
0x21a JUMPDEST
0x21b JUMP
---
0x21a: JUMPDEST 
0x21b: JUMP 0x90
---
Entry stack: [V11, 0x90]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x21c
[0x21c:0x231]
---
Predecessors: [0x92]
Successors: [0x232, 0x446]
---
0x21c JUMPDEST
0x21d PUSH1 0x0
0x21f PUSH1 0x1
0x221 SWAP1
0x222 SLOAD
0x223 SWAP1
0x224 PUSH2 0x100
0x227 EXP
0x228 SWAP1
0x229 DIV
0x22a PUSH1 0xff
0x22c AND
0x22d ISZERO
0x22e PUSH2 0x446
0x231 JUMPI
---
0x21c: JUMPDEST 
0x21d: V136 = 0x0
0x21f: V137 = 0x1
0x222: V138 = S[0x0]
0x224: V139 = 0x100
0x227: V140 = EXP 0x100 0x1
0x229: V141 = DIV V138 0x100
0x22a: V142 = 0xff
0x22c: V143 = AND 0xff V141
0x22d: V144 = ISZERO V143
0x22e: V145 = 0x446
0x231: JUMPI 0x446 V144
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x232
[0x232:0x287]
---
Predecessors: [0x21c]
Successors: [0x288, 0x2a3]
---
0x232 PUSH1 0x1
0x234 PUSH1 0x0
0x236 SWAP1
0x237 SLOAD
0x238 SWAP1
0x239 PUSH2 0x100
0x23c EXP
0x23d SWAP1
0x23e DIV
0x23f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x254 AND
0x255 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26a AND
0x26b CALLER
0x26c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x281 AND
0x282 EQ
0x283 ISZERO
0x284 PUSH2 0x2a3
0x287 JUMPI
---
0x232: V146 = 0x1
0x234: V147 = 0x0
0x237: V148 = S[0x1]
0x239: V149 = 0x100
0x23c: V150 = EXP 0x100 0x0
0x23e: V151 = DIV V148 0x1
0x23f: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x254: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x255: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x26b: V156 = CALLER
0x26c: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x281: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x282: V159 = EQ V158 V155
0x283: V160 = ISZERO V159
0x284: V161 = 0x2a3
0x287: JUMPI 0x2a3 V160
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x288
[0x288:0x2a2]
---
Predecessors: [0x232]
Successors: [0x2a3]
---
0x288 PUSH1 0x1
0x28a PUSH1 0x0
0x28c PUSH1 0x2
0x28e PUSH2 0x100
0x291 EXP
0x292 DUP2
0x293 SLOAD
0x294 DUP2
0x295 PUSH1 0xff
0x297 MUL
0x298 NOT
0x299 AND
0x29a SWAP1
0x29b DUP4
0x29c ISZERO
0x29d ISZERO
0x29e MUL
0x29f OR
0x2a0 SWAP1
0x2a1 SSTORE
0x2a2 POP
---
0x288: V162 = 0x1
0x28a: V163 = 0x0
0x28c: V164 = 0x2
0x28e: V165 = 0x100
0x291: V166 = EXP 0x100 0x2
0x293: V167 = S[0x0]
0x295: V168 = 0xff
0x297: V169 = MUL 0xff 0x10000
0x298: V170 = NOT 0xff0000
0x299: V171 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V167
0x29c: V172 = ISZERO 0x1
0x29d: V173 = ISZERO 0x0
0x29e: V174 = MUL 0x1 0x10000
0x29f: V175 = OR 0x10000 V171
0x2a1: S[0x0] = V175
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x2a3
[0x2a3:0x2f9]
---
Predecessors: [0x232, 0x288]
Successors: [0x2fa, 0x315]
---
0x2a3 JUMPDEST
0x2a4 PUSH1 0x0
0x2a6 PUSH1 0x4
0x2a8 SWAP1
0x2a9 SLOAD
0x2aa SWAP1
0x2ab PUSH2 0x100
0x2ae EXP
0x2af SWAP1
0x2b0 DIV
0x2b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c6 AND
0x2c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dc AND
0x2dd CALLER
0x2de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f3 AND
0x2f4 EQ
0x2f5 ISZERO
0x2f6 PUSH2 0x315
0x2f9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V176 = 0x0
0x2a6: V177 = 0x4
0x2a9: V178 = S[0x0]
0x2ab: V179 = 0x100
0x2ae: V180 = EXP 0x100 0x4
0x2b0: V181 = DIV V178 0x100000000
0x2b1: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2c7: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x2dd: V186 = CALLER
0x2de: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x2f4: V189 = EQ V188 V185
0x2f5: V190 = ISZERO V189
0x2f6: V191 = 0x315
0x2f9: JUMPI 0x315 V190
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x2fa
[0x2fa:0x314]
---
Predecessors: [0x2a3]
Successors: [0x315]
---
0x2fa PUSH1 0x1
0x2fc PUSH1 0x0
0x2fe PUSH1 0x3
0x300 PUSH2 0x100
0x303 EXP
0x304 DUP2
0x305 SLOAD
0x306 DUP2
0x307 PUSH1 0xff
0x309 MUL
0x30a NOT
0x30b AND
0x30c SWAP1
0x30d DUP4
0x30e ISZERO
0x30f ISZERO
0x310 MUL
0x311 OR
0x312 SWAP1
0x313 SSTORE
0x314 POP
---
0x2fa: V192 = 0x1
0x2fc: V193 = 0x0
0x2fe: V194 = 0x3
0x300: V195 = 0x100
0x303: V196 = EXP 0x100 0x3
0x305: V197 = S[0x0]
0x307: V198 = 0xff
0x309: V199 = MUL 0xff 0x1000000
0x30a: V200 = NOT 0xff000000
0x30b: V201 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff V197
0x30e: V202 = ISZERO 0x1
0x30f: V203 = ISZERO 0x0
0x310: V204 = MUL 0x1 0x1000000
0x311: V205 = OR 0x1000000 V201
0x313: S[0x0] = V205
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x315
[0x315:0x32b]
---
Predecessors: [0x2a3, 0x2fa]
Successors: [0x32c, 0x33d]
---
0x315 JUMPDEST
0x316 PUSH1 0x0
0x318 PUSH1 0x2
0x31a SWAP1
0x31b SLOAD
0x31c SWAP1
0x31d PUSH2 0x100
0x320 EXP
0x321 SWAP1
0x322 DIV
0x323 PUSH1 0xff
0x325 AND
0x326 DUP1
0x327 ISZERO
0x328 PUSH2 0x33d
0x32b JUMPI
---
0x315: JUMPDEST 
0x316: V206 = 0x0
0x318: V207 = 0x2
0x31b: V208 = S[0x0]
0x31d: V209 = 0x100
0x320: V210 = EXP 0x100 0x2
0x322: V211 = DIV V208 0x10000
0x323: V212 = 0xff
0x325: V213 = AND 0xff V211
0x327: V214 = ISZERO V213
0x328: V215 = 0x33d
0x32b: JUMPI 0x33d V214
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: [V213]
Exit stack: [V11, 0x9a, V213]

================================

Block 0x32c
[0x32c:0x33c]
---
Predecessors: [0x315]
Successors: [0x33d]
---
0x32c POP
0x32d PUSH1 0x0
0x32f PUSH1 0x3
0x331 SWAP1
0x332 SLOAD
0x333 SWAP1
0x334 PUSH2 0x100
0x337 EXP
0x338 SWAP1
0x339 DIV
0x33a PUSH1 0xff
0x33c AND
---
0x32d: V216 = 0x0
0x32f: V217 = 0x3
0x332: V218 = S[0x0]
0x334: V219 = 0x100
0x337: V220 = EXP 0x100 0x3
0x339: V221 = DIV V218 0x1000000
0x33a: V222 = 0xff
0x33c: V223 = AND 0xff V221
---
Entry stack: [V11, 0x9a, V213]
Stack pops: 1
Stack additions: [V223]
Exit stack: [V11, 0x9a, V223]

================================

Block 0x33d
[0x33d:0x342]
---
Predecessors: [0x315, 0x32c]
Successors: [0x343, 0x445]
---
0x33d JUMPDEST
0x33e ISZERO
0x33f PUSH2 0x445
0x342 JUMPI
---
0x33d: JUMPDEST 
0x33e: V224 = ISZERO S0
0x33f: V225 = 0x445
0x342: JUMPI 0x445 V224
---
Entry stack: [V11, 0x9a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x343
[0x343:0x3a1]
---
Predecessors: [0x33d]
Successors: [0x3a2, 0x3a6]
---
0x343 PUSH1 0x0
0x345 PUSH1 0x4
0x347 SWAP1
0x348 SLOAD
0x349 SWAP1
0x34a PUSH2 0x100
0x34d EXP
0x34e SWAP1
0x34f DIV
0x350 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x365 AND
0x366 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37b AND
0x37c PUSH2 0x8fc
0x37f PUSH1 0x4
0x381 SLOAD
0x382 SWAP1
0x383 DUP2
0x384 ISZERO
0x385 MUL
0x386 SWAP1
0x387 PUSH1 0x40
0x389 MLOAD
0x38a PUSH1 0x0
0x38c PUSH1 0x40
0x38e MLOAD
0x38f DUP1
0x390 DUP4
0x391 SUB
0x392 DUP2
0x393 DUP6
0x394 DUP9
0x395 DUP9
0x396 CALL
0x397 SWAP4
0x398 POP
0x399 POP
0x39a POP
0x39b POP
0x39c ISZERO
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x343: V226 = 0x0
0x345: V227 = 0x4
0x348: V228 = S[0x0]
0x34a: V229 = 0x100
0x34d: V230 = EXP 0x100 0x4
0x34f: V231 = DIV V228 0x100000000
0x350: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x365: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x366: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x37c: V236 = 0x8fc
0x37f: V237 = 0x4
0x381: V238 = S[0x4]
0x384: V239 = ISZERO V238
0x385: V240 = MUL V239 0x8fc
0x387: V241 = 0x40
0x389: V242 = M[0x40]
0x38a: V243 = 0x0
0x38c: V244 = 0x40
0x38e: V245 = M[0x40]
0x391: V246 = SUB V242 V245
0x396: V247 = CALL V240 V235 V238 V245 V246 V245 0x0
0x39c: V248 = ISZERO V247
0x39d: V249 = ISZERO V248
0x39e: V250 = 0x3a6
0x3a1: JUMPI 0x3a6 V249
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x343]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V251 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x3a6
[0x3a6:0x405]
---
Predecessors: [0x343]
Successors: [0x406, 0x40a]
---
0x3a6 JUMPDEST
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0x0
0x3ab SWAP1
0x3ac SLOAD
0x3ad SWAP1
0x3ae PUSH2 0x100
0x3b1 EXP
0x3b2 SWAP1
0x3b3 DIV
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3df AND
0x3e0 PUSH2 0x8fc
0x3e3 PUSH1 0x3
0x3e5 SLOAD
0x3e6 SWAP1
0x3e7 DUP2
0x3e8 ISZERO
0x3e9 MUL
0x3ea SWAP1
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee PUSH1 0x0
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 DUP4
0x3f5 SUB
0x3f6 DUP2
0x3f7 DUP6
0x3f8 DUP9
0x3f9 DUP9
0x3fa CALL
0x3fb SWAP4
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff POP
0x400 ISZERO
0x401 ISZERO
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3a6: JUMPDEST 
0x3a7: V252 = 0x1
0x3a9: V253 = 0x0
0x3ac: V254 = S[0x1]
0x3ae: V255 = 0x100
0x3b1: V256 = EXP 0x100 0x0
0x3b3: V257 = DIV V254 0x1
0x3b4: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x3ca: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x3e0: V262 = 0x8fc
0x3e3: V263 = 0x3
0x3e5: V264 = S[0x3]
0x3e8: V265 = ISZERO V264
0x3e9: V266 = MUL V265 0x8fc
0x3eb: V267 = 0x40
0x3ed: V268 = M[0x40]
0x3ee: V269 = 0x0
0x3f0: V270 = 0x40
0x3f2: V271 = M[0x40]
0x3f5: V272 = SUB V268 V271
0x3fa: V273 = CALL V266 V261 V264 V271 V272 V271 0x0
0x400: V274 = ISZERO V273
0x401: V275 = ISZERO V274
0x402: V276 = 0x40a
0x405: JUMPI 0x40a V275
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3a6]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V277 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x40a
[0x40a:0x444]
---
Predecessors: [0x3a6]
Successors: []
---
0x40a JUMPDEST
0x40b PUSH1 0x2
0x40d PUSH1 0x0
0x40f SWAP1
0x410 SLOAD
0x411 SWAP1
0x412 PUSH2 0x100
0x415 EXP
0x416 SWAP1
0x417 DIV
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 SELFDESTRUCT
---
0x40a: JUMPDEST 
0x40b: V278 = 0x2
0x40d: V279 = 0x0
0x410: V280 = S[0x2]
0x412: V281 = 0x100
0x415: V282 = EXP 0x100 0x0
0x417: V283 = DIV V280 0x1
0x418: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x42e: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x444: SELFDESTRUCT V287
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x445
[0x445:0x445]
---
Predecessors: [0x33d]
Successors: [0x446]
---
0x445 JUMPDEST
---
0x445: JUMPDEST 
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x446
[0x446:0x447]
---
Predecessors: [0x21c, 0x445]
Successors: [0x9a]
---
0x446 JUMPDEST
0x447 JUMP
---
0x446: JUMPDEST 
0x447: JUMP 0x9a
---
Entry stack: [V11, 0x9a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x448
[0x448:0x45f]
---
Predecessors: [0x9c]
Successors: [0x460, 0x4b2]
---
0x448 JUMPDEST
0x449 PUSH1 0x0
0x44b PUSH1 0x1
0x44d SWAP1
0x44e SLOAD
0x44f SWAP1
0x450 PUSH2 0x100
0x453 EXP
0x454 SWAP1
0x455 DIV
0x456 PUSH1 0xff
0x458 AND
0x459 ISZERO
0x45a DUP1
0x45b ISZERO
0x45c PUSH2 0x4b2
0x45f JUMPI
---
0x448: JUMPDEST 
0x449: V288 = 0x0
0x44b: V289 = 0x1
0x44e: V290 = S[0x0]
0x450: V291 = 0x100
0x453: V292 = EXP 0x100 0x1
0x455: V293 = DIV V290 0x100
0x456: V294 = 0xff
0x458: V295 = AND 0xff V293
0x459: V296 = ISZERO V295
0x45b: V297 = ISZERO V296
0x45c: V298 = 0x4b2
0x45f: JUMPI 0x4b2 V297
---
Entry stack: [V11, 0xa4]
Stack pops: 0
Stack additions: [V296]
Exit stack: [V11, 0xa4, V296]

================================

Block 0x460
[0x460:0x4b1]
---
Predecessors: [0x448]
Successors: [0x4b2]
---
0x460 POP
0x461 PUSH1 0x1
0x463 PUSH1 0x0
0x465 SWAP1
0x466 SLOAD
0x467 SWAP1
0x468 PUSH2 0x100
0x46b EXP
0x46c SWAP1
0x46d DIV
0x46e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x483 AND
0x484 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x499 AND
0x49a CALLER
0x49b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b0 AND
0x4b1 EQ
---
0x461: V299 = 0x1
0x463: V300 = 0x0
0x466: V301 = S[0x1]
0x468: V302 = 0x100
0x46b: V303 = EXP 0x100 0x0
0x46d: V304 = DIV V301 0x1
0x46e: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x483: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x484: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x499: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x49a: V309 = CALLER
0x49b: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x4b1: V312 = EQ V311 V308
---
Entry stack: [V11, 0xa4, V296]
Stack pops: 1
Stack additions: [V312]
Exit stack: [V11, 0xa4, V312]

================================

Block 0x4b2
[0x4b2:0x4b7]
---
Predecessors: [0x448, 0x460]
Successors: [0x4b8, 0x4f2]
---
0x4b2 JUMPDEST
0x4b3 ISZERO
0x4b4 PUSH2 0x4f2
0x4b7 JUMPI
---
0x4b2: JUMPDEST 
0x4b3: V313 = ISZERO S0
0x4b4: V314 = 0x4f2
0x4b7: JUMPI 0x4f2 V313
---
Entry stack: [V11, 0xa4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa4]

================================

Block 0x4b8
[0x4b8:0x4f1]
---
Predecessors: [0x4b2]
Successors: []
---
0x4b8 PUSH1 0x1
0x4ba PUSH1 0x0
0x4bc SWAP1
0x4bd SLOAD
0x4be SWAP1
0x4bf PUSH2 0x100
0x4c2 EXP
0x4c3 SWAP1
0x4c4 DIV
0x4c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4da AND
0x4db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f0 AND
0x4f1 SELFDESTRUCT
---
0x4b8: V315 = 0x1
0x4ba: V316 = 0x0
0x4bd: V317 = S[0x1]
0x4bf: V318 = 0x100
0x4c2: V319 = EXP 0x100 0x0
0x4c4: V320 = DIV V317 0x1
0x4c5: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x4da: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x4db: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x4f1: SELFDESTRUCT V324
---
Entry stack: [V11, 0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa4]

================================

Block 0x4f2
[0x4f2:0x4f3]
---
Predecessors: [0x4b2]
Successors: [0xa4]
---
0x4f2 JUMPDEST
0x4f3 JUMP
---
0x4f2: JUMPDEST 
0x4f3: JUMP 0xa4
---
Entry stack: [V11, 0xa4]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4f4
[0x4f4:0x526]
---
Predecessors: []
Successors: []
---
0x4f4 STOP
0x4f5 LOG1
0x4f6 PUSH6 0x627a7a723058
0x4fd SHA3
0x4fe PUSH9 0x3847ccf84ec9bea887
0x508 CALLVALUE
0x509 PUSH29 0x75abfd879bf0b4757426d930b7c56e5c962548960029
---
0x4f4: STOP 
0x4f5: LOG S0 S1 S2
0x4f6: V325 = 0x627a7a723058
0x4fd: V326 = SHA3 0x627a7a723058 S3
0x4fe: V327 = 0x3847ccf84ec9bea887
0x508: V328 = CALLVALUE
0x509: V329 = 0x75abfd879bf0b4757426d930b7c56e5c962548960029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x75abfd879bf0b4757426d930b7c56e5c962548960029, V328, 0x3847ccf84ec9bea887, V326]
Exit stack: []

================================

Function 0:
Public function signature: 0x2852b71c
Entry block: 0x7e
Exit block: 0x86
Body: 0x7e, 0x86, 0xa6, 0xbd, 0x124

Function 1:
Public function signature: 0xc2dc3b79
Entry block: 0x88
Exit block: 0x1df
Body: 0x88, 0x90, 0x126, 0x131, 0x187, 0x1d9, 0x1df, 0x219, 0x21a

Function 2:
Public function signature: 0xe0d7cb6f
Entry block: 0x92
Exit block: 0x40a
Body: 0x92, 0x9a, 0x21c, 0x232, 0x288, 0x2a3, 0x2fa, 0x315, 0x32c, 0x33d, 0x343, 0x3a2, 0x3a6, 0x406, 0x40a, 0x445, 0x446

Function 3:
Public function signature: 0xea8a1af0
Entry block: 0x9c
Exit block: 0xa4
Body: 0x9c, 0xa4, 0x448, 0x460, 0x4b2, 0x4b8, 0x4f2

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

