Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6a
0xa: JUMPI 0x6a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xc0]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH3 0x362a95
0x39 EQ
0x3a PUSH2 0xc0
0x3d JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x362a95
0x39: V12 = EQ 0x362a95 V10
0x3a: V13 = 0xc0
0x3d: JUMPI 0xc0 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xee]
---
0x3e DUP1
0x3f PUSH4 0xcd865ec
0x44 EQ
0x45 PUSH2 0xee
0x48 JUMPI
---
0x3f: V14 = 0xcd865ec
0x44: V15 = EQ 0xcd865ec V10
0x45: V16 = 0xee
0x48: JUMPI 0xee V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x124]
---
0x49 DUP1
0x4a PUSH4 0x3ccfd60b
0x4f EQ
0x50 PUSH2 0x124
0x53 JUMPI
---
0x4a: V17 = 0x3ccfd60b
0x4f: V18 = EQ 0x3ccfd60b V10
0x50: V19 = 0x124
0x53: JUMPI 0x124 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x136]
---
0x54 DUP1
0x55 PUSH4 0x70a08231
0x5a EQ
0x5b PUSH2 0x136
0x5e JUMPI
---
0x55: V20 = 0x70a08231
0x5a: V21 = EQ 0x70a08231 V10
0x5b: V22 = 0x136
0x5e: JUMPI 0x136 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x180]
---
0x5f DUP1
0x60 PUSH4 0x8da5cb5b
0x65 EQ
0x66 PUSH2 0x180
0x69 JUMPI
---
0x60: V23 = 0x8da5cb5b
0x65: V24 = EQ 0x8da5cb5b V10
0x66: V25 = 0x180
0x69: JUMPI 0x180 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x0, 0x5f]
Successors: [0x6e]
---
0x6a JUMPDEST
0x6b PUSH2 0xbe
---
0x6a: JUMPDEST 
0x6b: V26 = 0xbe
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbe]
Exit stack: [V10, 0xbe]

================================

Block 0x6e
[0x6e:0xbb]
---
Predecessors: [0x6a]
Successors: [0xbc]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 PUSH1 0x1
0x72 PUSH1 0x0
0x74 CALLER
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 DUP2
0xa8 MSTORE
0xa9 PUSH1 0x20
0xab ADD
0xac PUSH1 0x0
0xae SHA3
0xaf PUSH1 0x0
0xb1 DUP3
0xb2 DUP3
0xb3 SLOAD
0xb4 ADD
0xb5 SWAP3
0xb6 POP
0xb7 POP
0xb8 DUP2
0xb9 SWAP1
0xba SSTORE
0xbb POP
---
0x6e: JUMPDEST 
0x6f: V27 = CALLVALUE
0x70: V28 = 0x1
0x72: V29 = 0x0
0x74: V30 = CALLER
0x75: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x8b: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa2: M[0x0] = V34
0xa3: V35 = 0x20
0xa5: V36 = ADD 0x20 0x0
0xa8: M[0x20] = 0x1
0xa9: V37 = 0x20
0xab: V38 = ADD 0x20 0x20
0xac: V39 = 0x0
0xae: V40 = SHA3 0x0 0x40
0xaf: V41 = 0x0
0xb3: V42 = S[V40]
0xb4: V43 = ADD V42 V27
0xba: S[V40] = V43
---
Entry stack: [V10, 0xbe]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbe]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x6e]
Successors: [0xbe]
---
0xbc JUMPDEST
0xbd JUMP
---
0xbc: JUMPDEST 
0xbd: JUMP 0xbe
---
Entry stack: [V10, 0xbe]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xbe
[0xbe:0xbf]
---
Predecessors: [0xbc]
Successors: []
---
0xbe JUMPDEST
0xbf STOP
---
0xbe: JUMPDEST 
0xbf: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc0
[0xc0:0xeb]
---
Predecessors: [0xb]
Successors: [0x1d2]
---
0xc0 JUMPDEST
0xc1 PUSH2 0xec
0xc4 PUSH1 0x4
0xc6 DUP1
0xc7 DUP1
0xc8 CALLDATALOAD
0xc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde AND
0xdf SWAP1
0xe0 PUSH1 0x20
0xe2 ADD
0xe3 SWAP1
0xe4 SWAP2
0xe5 SWAP1
0xe6 POP
0xe7 POP
0xe8 PUSH2 0x1d2
0xeb JUMP
---
0xc0: JUMPDEST 
0xc1: V44 = 0xec
0xc4: V45 = 0x4
0xc8: V46 = CALLDATALOAD 0x4
0xc9: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xde: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xe0: V49 = 0x20
0xe2: V50 = ADD 0x20 0x4
0xe8: V51 = 0x1d2
0xeb: JUMP 0x1d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xec, V48]
Exit stack: [V10, 0xec, V48]

================================

Block 0xec
[0xec:0xed]
---
Predecessors: [0x220]
Successors: []
---
0xec JUMPDEST
0xed STOP
---
0xec: JUMPDEST 
0xed: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0x3e]
Successors: [0xf5, 0xf6]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 ISZERO
0xf1 PUSH2 0xf6
0xf4 JUMPI
---
0xee: JUMPDEST 
0xef: V52 = CALLVALUE
0xf0: V53 = ISZERO V52
0xf1: V54 = 0xf6
0xf4: JUMPI 0xf6 V53
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0xee]
Successors: []
---
0xf5 INVALID
---
0xf5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf6
[0xf6:0x121]
---
Predecessors: [0xee]
Successors: [0x223]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x122
0xfa PUSH1 0x4
0xfc DUP1
0xfd DUP1
0xfe CALLDATALOAD
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 SWAP1
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP1
0x11a SWAP2
0x11b SWAP1
0x11c POP
0x11d POP
0x11e PUSH2 0x223
0x121 JUMP
---
0xf6: JUMPDEST 
0xf7: V55 = 0x122
0xfa: V56 = 0x4
0xfe: V57 = CALLDATALOAD 0x4
0xff: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x116: V60 = 0x20
0x118: V61 = ADD 0x20 0x4
0x11e: V62 = 0x223
0x121: JUMP 0x223
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x122, V59]
Exit stack: [V10, 0x122, V59]

================================

Block 0x122
[0x122:0x123]
---
Predecessors: [0x28b]
Successors: []
---
0x122 JUMPDEST
0x123 STOP
---
0x122: JUMPDEST 
0x123: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x49]
Successors: [0x12b, 0x12c]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12c
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V63 = CALLVALUE
0x126: V64 = ISZERO V63
0x127: V65 = 0x12c
0x12a: JUMPI 0x12c V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x12b]
---
Predecessors: [0x124]
Successors: []
---
0x12b INVALID
---
0x12b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x124]
Successors: [0x28e]
---
0x12c JUMPDEST
0x12d PUSH2 0x134
0x130 PUSH2 0x28e
0x133 JUMP
---
0x12c: JUMPDEST 
0x12d: V66 = 0x134
0x130: V67 = 0x28e
0x133: JUMP 0x28e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x134]
Exit stack: [V10, 0x134]

================================

Block 0x134
[0x134:0x135]
---
Predecessors: [0x298]
Successors: []
---
0x134 JUMPDEST
0x135 STOP
---
0x134: JUMPDEST 
0x135: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x136
[0x136:0x13c]
---
Predecessors: [0x54]
Successors: [0x13d, 0x13e]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 ISZERO
0x139 PUSH2 0x13e
0x13c JUMPI
---
0x136: JUMPDEST 
0x137: V68 = CALLVALUE
0x138: V69 = ISZERO V68
0x139: V70 = 0x13e
0x13c: JUMPI 0x13e V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13d
[0x13d:0x13d]
---
Predecessors: [0x136]
Successors: []
---
0x13d INVALID
---
0x13d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13e
[0x13e:0x169]
---
Predecessors: [0x136]
Successors: [0x29a]
---
0x13e JUMPDEST
0x13f PUSH2 0x16a
0x142 PUSH1 0x4
0x144 DUP1
0x145 DUP1
0x146 CALLDATALOAD
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d SWAP1
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP1
0x162 SWAP2
0x163 SWAP1
0x164 POP
0x165 POP
0x166 PUSH2 0x29a
0x169 JUMP
---
0x13e: JUMPDEST 
0x13f: V71 = 0x16a
0x142: V72 = 0x4
0x146: V73 = CALLDATALOAD 0x4
0x147: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x15e: V76 = 0x20
0x160: V77 = ADD 0x20 0x4
0x166: V78 = 0x29a
0x169: JUMP 0x29a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16a, V75]
Exit stack: [V10, 0x16a, V75]

================================

Block 0x16a
[0x16a:0x17f]
---
Predecessors: [0x29a]
Successors: []
---
0x16a JUMPDEST
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f DUP3
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x20
0x174 ADD
0x175 SWAP2
0x176 POP
0x177 POP
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c SWAP2
0x17d SUB
0x17e SWAP1
0x17f RETURN
---
0x16a: JUMPDEST 
0x16b: V79 = 0x40
0x16d: V80 = M[0x40]
0x171: M[V80] = V149
0x172: V81 = 0x20
0x174: V82 = ADD 0x20 V80
0x178: V83 = 0x40
0x17a: V84 = M[0x40]
0x17d: V85 = SUB V82 V84
0x17f: RETURN V84 V85
---
Entry stack: [V10, 0x16a, V149]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x16a]

================================

Block 0x180
[0x180:0x186]
---
Predecessors: [0x5f]
Successors: [0x187, 0x188]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 ISZERO
0x183 PUSH2 0x188
0x186 JUMPI
---
0x180: JUMPDEST 
0x181: V86 = CALLVALUE
0x182: V87 = ISZERO V86
0x183: V88 = 0x188
0x186: JUMPI 0x188 V87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x187
[0x187:0x187]
---
Predecessors: [0x180]
Successors: []
---
0x187 INVALID
---
0x187: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x188
[0x188:0x18f]
---
Predecessors: [0x180]
Successors: [0x2b2]
---
0x188 JUMPDEST
0x189 PUSH2 0x190
0x18c PUSH2 0x2b2
0x18f JUMP
---
0x188: JUMPDEST 
0x189: V89 = 0x190
0x18c: V90 = 0x2b2
0x18f: JUMP 0x2b2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V10, 0x190]

================================

Block 0x190
[0x190:0x1d1]
---
Predecessors: [0x2b2]
Successors: []
---
0x190 JUMPDEST
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP3
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 DUP2
0x1c3 MSTORE
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP2
0x1c8 POP
0x1c9 POP
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd DUP1
0x1ce SWAP2
0x1cf SUB
0x1d0 SWAP1
0x1d1 RETURN
---
0x190: JUMPDEST 
0x191: V91 = 0x40
0x193: V92 = M[0x40]
0x196: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x1ac: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1c3: M[V92] = V96
0x1c4: V97 = 0x20
0x1c6: V98 = ADD 0x20 V92
0x1ca: V99 = 0x40
0x1cc: V100 = M[0x40]
0x1cf: V101 = SUB V98 V100
0x1d1: RETURN V100 V101
---
Entry stack: [V10, 0x190, V157]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x190]

================================

Block 0x1d2
[0x1d2:0x21f]
---
Predecessors: [0xc0]
Successors: [0x220]
---
0x1d2 JUMPDEST
0x1d3 CALLVALUE
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0x0
0x1d8 DUP4
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 DUP2
0x206 MSTORE
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP1
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x20
0x20f ADD
0x210 PUSH1 0x0
0x212 SHA3
0x213 PUSH1 0x0
0x215 DUP3
0x216 DUP3
0x217 SLOAD
0x218 ADD
0x219 SWAP3
0x21a POP
0x21b POP
0x21c DUP2
0x21d SWAP1
0x21e SSTORE
0x21f POP
---
0x1d2: JUMPDEST 
0x1d3: V102 = CALLVALUE
0x1d4: V103 = 0x1
0x1d6: V104 = 0x0
0x1d9: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x1ef: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x206: M[0x0] = V108
0x207: V109 = 0x20
0x209: V110 = ADD 0x20 0x0
0x20c: M[0x20] = 0x1
0x20d: V111 = 0x20
0x20f: V112 = ADD 0x20 0x20
0x210: V113 = 0x0
0x212: V114 = SHA3 0x0 0x40
0x213: V115 = 0x0
0x217: V116 = S[V114]
0x218: V117 = ADD V116 V102
0x21e: S[V114] = V117
---
Entry stack: [V10, 0xec, V48]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xec, V48]

================================

Block 0x220
[0x220:0x222]
---
Predecessors: [0x1d2]
Successors: [0xec]
---
0x220 JUMPDEST
0x221 POP
0x222 JUMP
---
0x220: JUMPDEST 
0x222: JUMP 0xec
---
Entry stack: [V10, 0xec, V48]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x223
[0x223:0x27a]
---
Predecessors: [0xf6]
Successors: [0x27b, 0x280]
---
0x223 JUMPDEST
0x224 CALLER
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a AND
0x23b PUSH1 0x0
0x23d PUSH1 0x0
0x23f SWAP1
0x240 SLOAD
0x241 SWAP1
0x242 PUSH2 0x100
0x245 EXP
0x246 SWAP1
0x247 DIV
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 EQ
0x275 ISZERO
0x276 ISZERO
0x277 PUSH2 0x280
0x27a JUMPI
---
0x223: JUMPDEST 
0x224: V118 = CALLER
0x225: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x23b: V121 = 0x0
0x23d: V122 = 0x0
0x240: V123 = S[0x0]
0x242: V124 = 0x100
0x245: V125 = EXP 0x100 0x0
0x247: V126 = DIV V123 0x1
0x248: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x25e: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x274: V131 = EQ V130 V120
0x275: V132 = ISZERO V131
0x276: V133 = ISZERO V132
0x277: V134 = 0x280
0x27a: JUMPI 0x280 V133
---
Entry stack: [V10, 0x122, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x122, V59]

================================

Block 0x27b
[0x27b:0x27f]
---
Predecessors: [0x223]
Successors: []
---
0x27b PUSH1 0x0
0x27d PUSH1 0x0
0x27f REVERT
---
0x27b: V135 = 0x0
0x27d: V136 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x122, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x122, V59]

================================

Block 0x280
[0x280:0x288]
---
Predecessors: [0x223]
Successors: [0x2d8]
---
0x280 JUMPDEST
0x281 PUSH2 0x289
0x284 DUP2
0x285 PUSH2 0x2d8
0x288 JUMP
---
0x280: JUMPDEST 
0x281: V137 = 0x289
0x285: V138 = 0x2d8
0x288: JUMP 0x2d8
---
Entry stack: [V10, 0x122, V59]
Stack pops: 1
Stack additions: [S0, 0x289, S0]
Exit stack: [V10, 0x122, V59, 0x289, V59]

================================

Block 0x289
[0x289:0x289]
---
Predecessors: [0x3b0]
Successors: [0x28a]
---
0x289 JUMPDEST
---
0x289: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x28a
[0x28a:0x28a]
---
Predecessors: [0x289]
Successors: [0x28b]
---
0x28a JUMPDEST
---
0x28a: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x28b
[0x28b:0x28d]
---
Predecessors: [0x28a]
Successors: [0x122]
---
0x28b JUMPDEST
0x28c POP
0x28d JUMP
---
0x28b: JUMPDEST 
0x28d: JUMP S1
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x12c]
Successors: [0x2d8]
---
0x28e JUMPDEST
0x28f PUSH2 0x297
0x292 CALLER
0x293 PUSH2 0x2d8
0x296 JUMP
---
0x28e: JUMPDEST 
0x28f: V139 = 0x297
0x292: V140 = CALLER
0x293: V141 = 0x2d8
0x296: JUMP 0x2d8
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: [0x297, V140]
Exit stack: [V10, 0x134, 0x297, V140]

================================

Block 0x297
[0x297:0x297]
---
Predecessors: [0x3b0]
Successors: [0x298]
---
0x297 JUMPDEST
---
0x297: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x298
[0x298:0x299]
---
Predecessors: [0x297]
Successors: [0x134]
---
0x298 JUMPDEST
0x299 JUMP
---
0x298: JUMPDEST 
0x299: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x29a
[0x29a:0x2b1]
---
Predecessors: [0x13e]
Successors: [0x16a]
---
0x29a JUMPDEST
0x29b PUSH1 0x1
0x29d PUSH1 0x20
0x29f MSTORE
0x2a0 DUP1
0x2a1 PUSH1 0x0
0x2a3 MSTORE
0x2a4 PUSH1 0x40
0x2a6 PUSH1 0x0
0x2a8 SHA3
0x2a9 PUSH1 0x0
0x2ab SWAP2
0x2ac POP
0x2ad SWAP1
0x2ae POP
0x2af SLOAD
0x2b0 DUP2
0x2b1 JUMP
---
0x29a: JUMPDEST 
0x29b: V142 = 0x1
0x29d: V143 = 0x20
0x29f: M[0x20] = 0x1
0x2a1: V144 = 0x0
0x2a3: M[0x0] = V75
0x2a4: V145 = 0x40
0x2a6: V146 = 0x0
0x2a8: V147 = SHA3 0x0 0x40
0x2a9: V148 = 0x0
0x2af: V149 = S[V147]
0x2b1: JUMP 0x16a
---
Entry stack: [V10, 0x16a, V75]
Stack pops: 2
Stack additions: [S1, V149]
Exit stack: [V10, 0x16a, V149]

================================

Block 0x2b2
[0x2b2:0x2d7]
---
Predecessors: [0x188]
Successors: [0x190]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x0
0x2b5 PUSH1 0x0
0x2b7 SWAP1
0x2b8 SLOAD
0x2b9 SWAP1
0x2ba PUSH2 0x100
0x2bd EXP
0x2be SWAP1
0x2bf DIV
0x2c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d5 AND
0x2d6 DUP2
0x2d7 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V150 = 0x0
0x2b5: V151 = 0x0
0x2b8: V152 = S[0x0]
0x2ba: V153 = 0x100
0x2bd: V154 = EXP 0x100 0x0
0x2bf: V155 = DIV V152 0x1
0x2c0: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2d7: JUMP 0x190
---
Entry stack: [V10, 0x190]
Stack pops: 1
Stack additions: [S0, V157]
Exit stack: [V10, 0x190, V157]

================================

Block 0x2d8
[0x2d8:0x325]
---
Predecessors: [0x280, 0x28e]
Successors: [0x326, 0x3af]
---
0x2d8 JUMPDEST
0x2d9 PUSH1 0x0
0x2db PUSH1 0x1
0x2dd PUSH1 0x0
0x2df DUP4
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 AND
0x2f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30b AND
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x20
0x316 ADD
0x317 PUSH1 0x0
0x319 SHA3
0x31a SLOAD
0x31b SWAP1
0x31c POP
0x31d PUSH1 0x0
0x31f DUP2
0x320 GT
0x321 ISZERO
0x322 PUSH2 0x3af
0x325 JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V158 = 0x0
0x2db: V159 = 0x1
0x2dd: V160 = 0x0
0x2e0: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2f6: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x30d: M[0x0] = V164
0x30e: V165 = 0x20
0x310: V166 = ADD 0x20 0x0
0x313: M[0x20] = 0x1
0x314: V167 = 0x20
0x316: V168 = ADD 0x20 0x20
0x317: V169 = 0x0
0x319: V170 = SHA3 0x0 0x40
0x31a: V171 = S[V170]
0x31d: V172 = 0x0
0x320: V173 = GT V171 0x0
0x321: V174 = ISZERO V173
0x322: V175 = 0x3af
0x325: JUMPI 0x3af V174
---
Entry stack: [V10, S3, S2, {0x289, 0x297}, S0]
Stack pops: 1
Stack additions: [S0, V171]
Exit stack: [V10, S3, S2, {0x289, 0x297}, S0, V171]

================================

Block 0x326
[0x326:0x3a8]
---
Predecessors: [0x2d8]
Successors: [0x3a9, 0x3ae]
---
0x326 PUSH1 0x0
0x328 PUSH1 0x1
0x32a PUSH1 0x0
0x32c DUP5
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x358 AND
0x359 DUP2
0x35a MSTORE
0x35b PUSH1 0x20
0x35d ADD
0x35e SWAP1
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x20
0x363 ADD
0x364 PUSH1 0x0
0x366 SHA3
0x367 DUP2
0x368 SWAP1
0x369 SSTORE
0x36a POP
0x36b CALLER
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 PUSH2 0x8fc
0x385 DUP3
0x386 SWAP1
0x387 DUP2
0x388 ISZERO
0x389 MUL
0x38a SWAP1
0x38b PUSH1 0x40
0x38d MLOAD
0x38e DUP1
0x38f SWAP1
0x390 POP
0x391 PUSH1 0x0
0x393 PUSH1 0x40
0x395 MLOAD
0x396 DUP1
0x397 DUP4
0x398 SUB
0x399 DUP2
0x39a DUP6
0x39b DUP9
0x39c DUP9
0x39d CALL
0x39e SWAP4
0x39f POP
0x3a0 POP
0x3a1 POP
0x3a2 POP
0x3a3 ISZERO
0x3a4 ISZERO
0x3a5 PUSH2 0x3ae
0x3a8 JUMPI
---
0x326: V176 = 0x0
0x328: V177 = 0x1
0x32a: V178 = 0x0
0x32d: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x343: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x358: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x35a: M[0x0] = V182
0x35b: V183 = 0x20
0x35d: V184 = ADD 0x20 0x0
0x360: M[0x20] = 0x1
0x361: V185 = 0x20
0x363: V186 = ADD 0x20 0x20
0x364: V187 = 0x0
0x366: V188 = SHA3 0x0 0x40
0x369: S[V188] = 0x0
0x36b: V189 = CALLER
0x36c: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x382: V192 = 0x8fc
0x388: V193 = ISZERO V171
0x389: V194 = MUL V193 0x8fc
0x38b: V195 = 0x40
0x38d: V196 = M[0x40]
0x391: V197 = 0x0
0x393: V198 = 0x40
0x395: V199 = M[0x40]
0x398: V200 = SUB V196 V199
0x39d: V201 = CALL V194 V191 V171 V199 V200 V199 0x0
0x3a3: V202 = ISZERO V201
0x3a4: V203 = ISZERO V202
0x3a5: V204 = 0x3ae
0x3a8: JUMPI 0x3ae V203
---
Entry stack: [V10, S4, S3, {0x289, 0x297}, S1, V171]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S4, S3, {0x289, 0x297}, S1, V171]

================================

Block 0x3a9
[0x3a9:0x3ad]
---
Predecessors: [0x326]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab PUSH1 0x0
0x3ad REVERT
---
0x3a9: V205 = 0x0
0x3ab: V206 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V10, S4, S3, {0x289, 0x297}, S1, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, {0x289, 0x297}, S1, V171]

================================

Block 0x3ae
[0x3ae:0x3ae]
---
Predecessors: [0x326]
Successors: [0x3af]
---
0x3ae JUMPDEST
---
0x3ae: JUMPDEST 
---
Entry stack: [V10, S4, S3, {0x289, 0x297}, S1, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, {0x289, 0x297}, S1, V171]

================================

Block 0x3af
[0x3af:0x3af]
---
Predecessors: [0x2d8, 0x3ae]
Successors: [0x3b0]
---
0x3af JUMPDEST
---
0x3af: JUMPDEST 
---
Entry stack: [V10, S4, S3, {0x289, 0x297}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, {0x289, 0x297}, S1, S0]

================================

Block 0x3b0
[0x3b0:0x3b3]
---
Predecessors: [0x3af]
Successors: [0x289, 0x297]
---
0x3b0 JUMPDEST
0x3b1 POP
0x3b2 POP
0x3b3 JUMP
---
0x3b0: JUMPDEST 
0x3b3: JUMP {0x289, 0x297}
---
Entry stack: [V10, S4, S3, {0x289, 0x297}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S4, S3]

================================

Block 0x3b4
[0x3b4:0x3df]
---
Predecessors: []
Successors: []
---
0x3b4 STOP
0x3b5 LOG1
0x3b6 PUSH6 0x627a7a723058
0x3bd SHA3
0x3be MISSING 0x1f
0x3bf MISSING 0x2e
0x3c0 PUSH26 0x2a3b55079c9d75a4344e5337c16b68582868cf6a8dcf6ca23961
0x3db MISSING 0xa6
0x3dc SWAP5
0x3dd SWAP16
0x3de STOP
0x3df MISSING 0x29
---
0x3b4: STOP 
0x3b5: LOG S0 S1 S2
0x3b6: V207 = 0x627a7a723058
0x3bd: V208 = SHA3 0x627a7a723058 S3
0x3be: MISSING 0x1f
0x3bf: MISSING 0x2e
0x3c0: V209 = 0x2a3b55079c9d75a4344e5337c16b68582868cf6a8dcf6ca23961
0x3db: MISSING 0xa6
0x3de: STOP 
0x3df: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V208, 0x2a3b55079c9d75a4344e5337c16b68582868cf6a8dcf6ca23961, S16, S1, S2, S3, S4, S0, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x362a95
Entry block: 0xc0
Exit block: 0xec
Body: 0xc0, 0xec, 0x1d2, 0x220

Function 1:
Public function signature: 0xcd865ec
Entry block: 0xee
Exit block: 0x122
Body: 0xee, 0xf5, 0xf6, 0x122, 0x223, 0x27b, 0x280, 0x289, 0x28a, 0x28b

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x124
Exit block: 0x134
Body: 0x124, 0x12b, 0x12c, 0x134, 0x28e, 0x297, 0x298

Function 3:
Public function signature: 0x70a08231
Entry block: 0x136
Exit block: 0x16a
Body: 0x136, 0x13d, 0x13e, 0x16a, 0x29a

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x180
Exit block: 0x190
Body: 0x180, 0x187, 0x188, 0x190, 0x2b2

Function 5:
Public fallback function
Entry block: 0x6a
Exit block: 0xbe
Body: 0x6a, 0x6e, 0xbc, 0xbe

Function 6:
Private function
Entry block: 0x2d8
Exit block: 0x3b0
Body: 0x2d8, 0x326, 0x3ae, 0x3af, 0x3b0

