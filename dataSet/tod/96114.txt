Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x174]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2af4c31e
0x3c EQ
0x3d PUSH2 0x174
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2af4c31e
0x3c: V13 = EQ 0x2af4c31e V11
0x3d: V14 = 0x174
0x40: JUMPI 0x174 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x1cf]
---
0x41 DUP1
0x42 PUSH4 0x43f7505a
0x47 EQ
0x48 PUSH2 0x1cf
0x4b JUMPI
---
0x42: V15 = 0x43f7505a
0x47: V16 = EQ 0x43f7505a V11
0x48: V17 = 0x1cf
0x4b: JUMPI 0x1cf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x254]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x254
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x254
0x56: JUMPI 0x254 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x2ab]
---
0x57 DUP1
0x58 PUSH4 0xc763f216
0x5d EQ
0x5e PUSH2 0x2ab
0x61 JUMPI
---
0x58: V21 = 0xc763f216
0x5d: V22 = EQ 0xc763f216 V11
0x5e: V23 = 0x2ab
0x61: JUMPI 0x2ab V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x306]
---
0x62 DUP1
0x63 PUSH4 0xfbfa77cf
0x68 EQ
0x69 PUSH2 0x306
0x6c JUMPI
---
0x63: V24 = 0xfbfa77cf
0x68: V25 = EQ 0xfbfa77cf V11
0x69: V26 = 0x306
0x6c: JUMPI 0x306 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0xe1]
---
Predecessors: [0x0, 0x62]
Successors: [0xe2, 0xeb]
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 SWAP1
0x72 SLOAD
0x73 SWAP1
0x74 PUSH2 0x100
0x77 EXP
0x78 SWAP1
0x79 DIV
0x7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f AND
0x90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5 AND
0xa6 PUSH2 0x8fc
0xa9 ADDRESS
0xaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf AND
0xc0 BALANCE
0xc1 SWAP1
0xc2 DUP2
0xc3 ISZERO
0xc4 MUL
0xc5 SWAP1
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 PUSH1 0x0
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf DUP4
0xd0 SUB
0xd1 DUP2
0xd2 DUP6
0xd3 DUP9
0xd4 DUP9
0xd5 CALL
0xd6 SWAP4
0xd7 POP
0xd8 POP
0xd9 POP
0xda POP
0xdb ISZERO
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xeb
0xe1 JUMPI
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x72: V28 = S[0x0]
0x74: V29 = 0x100
0x77: V30 = EXP 0x100 0x0
0x79: V31 = DIV V28 0x1
0x7a: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x90: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xa6: V36 = 0x8fc
0xa9: V37 = ADDRESS
0xaa: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xc0: V40 = BALANCE V39
0xc3: V41 = ISZERO V40
0xc4: V42 = MUL V41 0x8fc
0xc6: V43 = 0x40
0xc8: V44 = M[0x40]
0xc9: V45 = 0x0
0xcb: V46 = 0x40
0xcd: V47 = M[0x40]
0xd0: V48 = SUB V44 V47
0xd5: V49 = CALL V42 V35 V40 V47 V48 V47 0x0
0xdb: V50 = ISZERO V49
0xdd: V51 = ISZERO V50
0xde: V52 = 0xeb
0xe1: JUMPI 0xeb V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0x6d]
Successors: []
---
0xe2 RETURNDATASIZE
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 RETURNDATACOPY
0xe7 RETURNDATASIZE
0xe8 PUSH1 0x0
0xea REVERT
---
0xe2: V53 = RETURNDATASIZE
0xe3: V54 = 0x0
0xe6: RETURNDATACOPY 0x0 0x0 V53
0xe7: V55 = RETURNDATASIZE
0xe8: V56 = 0x0
0xea: REVERT 0x0 V55
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xeb
[0xeb:0x173]
---
Predecessors: [0x6d]
Successors: []
---
0xeb JUMPDEST
0xec POP
0xed PUSH1 0x0
0xef DUP1
0xf0 SWAP1
0xf1 SLOAD
0xf2 SWAP1
0xf3 PUSH2 0x100
0xf6 EXP
0xf7 SWAP1
0xf8 DIV
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124 AND
0x125 CALLER
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c PUSH32 0xbfb7efd7d5ea800a27a15d77272a7f3467a453990b2e81d1b7537725bb2ea166
0x15d CALLVALUE
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP1
0x162 DUP3
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x20
0x167 ADD
0x168 SWAP2
0x169 POP
0x16a POP
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f SWAP2
0x170 SUB
0x171 SWAP1
0x172 LOG3
0x173 STOP
---
0xeb: JUMPDEST 
0xed: V57 = 0x0
0xf1: V58 = S[0x0]
0xf3: V59 = 0x100
0xf6: V60 = EXP 0x100 0x0
0xf8: V61 = DIV V58 0x1
0xf9: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x10f: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x124: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x125: V66 = CALLER
0x126: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x13c: V69 = 0xbfb7efd7d5ea800a27a15d77272a7f3467a453990b2e81d1b7537725bb2ea166
0x15d: V70 = CALLVALUE
0x15e: V71 = 0x40
0x160: V72 = M[0x40]
0x164: M[V72] = V70
0x165: V73 = 0x20
0x167: V74 = ADD 0x20 V72
0x16b: V75 = 0x40
0x16d: V76 = M[0x40]
0x170: V77 = SUB V74 V76
0x172: LOG V76 V77 0xbfb7efd7d5ea800a27a15d77272a7f3467a453990b2e81d1b7537725bb2ea166 V68 V65
0x173: STOP 
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x174
[0x174:0x17b]
---
Predecessors: [0xd]
Successors: [0x17c, 0x180]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 DUP1
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x174: JUMPDEST 
0x175: V78 = CALLVALUE
0x177: V79 = ISZERO V78
0x178: V80 = 0x180
0x17b: JUMPI 0x180 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x174]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V81 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x180
[0x180:0x1b4]
---
Predecessors: [0x174]
Successors: [0x35d]
---
0x180 JUMPDEST
0x181 POP
0x182 PUSH2 0x1b5
0x185 PUSH1 0x4
0x187 DUP1
0x188 CALLDATASIZE
0x189 SUB
0x18a DUP2
0x18b ADD
0x18c SWAP1
0x18d DUP1
0x18e DUP1
0x18f CALLDATALOAD
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 SWAP1
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP1
0x1ab SWAP3
0x1ac SWAP2
0x1ad SWAP1
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 PUSH2 0x35d
0x1b4 JUMP
---
0x180: JUMPDEST 
0x182: V82 = 0x1b5
0x185: V83 = 0x4
0x188: V84 = CALLDATASIZE
0x189: V85 = SUB V84 0x4
0x18b: V86 = ADD 0x4 V85
0x18f: V87 = CALLDATALOAD 0x4
0x190: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1a7: V90 = 0x20
0x1a9: V91 = ADD 0x20 0x4
0x1b1: V92 = 0x35d
0x1b4: JUMP 0x35d
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x1b5, V89]
Exit stack: [V11, 0x1b5, V89]

================================

Block 0x1b5
[0x1b5:0x1ce]
---
Predecessors: [0x423]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x40
0x1b8 MLOAD
0x1b9 DUP1
0x1ba DUP3
0x1bb ISZERO
0x1bc ISZERO
0x1bd ISZERO
0x1be ISZERO
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP2
0x1c5 POP
0x1c6 POP
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca DUP1
0x1cb SWAP2
0x1cc SUB
0x1cd SWAP1
0x1ce RETURN
---
0x1b5: JUMPDEST 
0x1b6: V93 = 0x40
0x1b8: V94 = M[0x40]
0x1bb: V95 = ISZERO 0x1
0x1bc: V96 = ISZERO 0x0
0x1bd: V97 = ISZERO 0x1
0x1be: V98 = ISZERO 0x0
0x1c0: M[V94] = 0x1
0x1c1: V99 = 0x20
0x1c3: V100 = ADD 0x20 V94
0x1c7: V101 = 0x40
0x1c9: V102 = M[0x40]
0x1cc: V103 = SUB V100 V102
0x1ce: RETURN V102 V103
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x41]
Successors: [0x1d7, 0x1db]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 DUP1
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V104 = CALLVALUE
0x1d2: V105 = ISZERO V104
0x1d3: V106 = 0x1db
0x1d6: JUMPI 0x1db V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V107 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x1db
[0x1db:0x239]
---
Predecessors: [0x1cf]
Successors: [0x46c]
---
0x1db JUMPDEST
0x1dc POP
0x1dd PUSH2 0x23a
0x1e0 PUSH1 0x4
0x1e2 DUP1
0x1e3 CALLDATASIZE
0x1e4 SUB
0x1e5 DUP2
0x1e6 ADD
0x1e7 SWAP1
0x1e8 DUP1
0x1e9 DUP1
0x1ea CALLDATALOAD
0x1eb SWAP1
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef SWAP1
0x1f0 SWAP3
0x1f1 SWAP2
0x1f2 SWAP1
0x1f3 DUP1
0x1f4 CALLDATALOAD
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b SWAP1
0x20c PUSH1 0x20
0x20e ADD
0x20f SWAP1
0x210 SWAP3
0x211 SWAP2
0x212 SWAP1
0x213 DUP1
0x214 CALLDATALOAD
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b SWAP1
0x22c PUSH1 0x20
0x22e ADD
0x22f SWAP1
0x230 SWAP3
0x231 SWAP2
0x232 SWAP1
0x233 POP
0x234 POP
0x235 POP
0x236 PUSH2 0x46c
0x239 JUMP
---
0x1db: JUMPDEST 
0x1dd: V108 = 0x23a
0x1e0: V109 = 0x4
0x1e3: V110 = CALLDATASIZE
0x1e4: V111 = SUB V110 0x4
0x1e6: V112 = ADD 0x4 V111
0x1ea: V113 = CALLDATALOAD 0x4
0x1ec: V114 = 0x20
0x1ee: V115 = ADD 0x20 0x4
0x1f4: V116 = CALLDATALOAD 0x24
0x1f5: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x20c: V119 = 0x20
0x20e: V120 = ADD 0x20 0x24
0x214: V121 = CALLDATALOAD 0x44
0x215: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x22c: V124 = 0x20
0x22e: V125 = ADD 0x20 0x44
0x236: V126 = 0x46c
0x239: JUMP 0x46c
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x23a, V113, V118, V123]
Exit stack: [V11, 0x23a, V113, V118, V123]

================================

Block 0x23a
[0x23a:0x253]
---
Predecessors: [0x8c7]
Successors: []
---
0x23a JUMPDEST
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f DUP3
0x240 ISZERO
0x241 ISZERO
0x242 ISZERO
0x243 ISZERO
0x244 DUP2
0x245 MSTORE
0x246 PUSH1 0x20
0x248 ADD
0x249 SWAP2
0x24a POP
0x24b POP
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 SWAP2
0x251 SUB
0x252 SWAP1
0x253 RETURN
---
0x23a: JUMPDEST 
0x23b: V127 = 0x40
0x23d: V128 = M[0x40]
0x240: V129 = ISZERO 0x1
0x241: V130 = ISZERO 0x0
0x242: V131 = ISZERO 0x1
0x243: V132 = ISZERO 0x0
0x245: M[V128] = 0x1
0x246: V133 = 0x20
0x248: V134 = ADD 0x20 V128
0x24c: V135 = 0x40
0x24e: V136 = M[0x40]
0x251: V137 = SUB V134 V136
0x253: RETURN V136 V137
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x254
[0x254:0x25b]
---
Predecessors: [0x4c]
Successors: [0x25c, 0x260]
---
0x254 JUMPDEST
0x255 CALLVALUE
0x256 DUP1
0x257 ISZERO
0x258 PUSH2 0x260
0x25b JUMPI
---
0x254: JUMPDEST 
0x255: V138 = CALLVALUE
0x257: V139 = ISZERO V138
0x258: V140 = 0x260
0x25b: JUMPI 0x260 V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V11, V138]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x254]
Successors: []
---
0x25c PUSH1 0x0
0x25e DUP1
0x25f REVERT
---
0x25c: V141 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V11, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V138]

================================

Block 0x260
[0x260:0x268]
---
Predecessors: [0x254]
Successors: [0x8d2]
---
0x260 JUMPDEST
0x261 POP
0x262 PUSH2 0x269
0x265 PUSH2 0x8d2
0x268 JUMP
---
0x260: JUMPDEST 
0x262: V142 = 0x269
0x265: V143 = 0x8d2
0x268: JUMP 0x8d2
---
Entry stack: [V11, V138]
Stack pops: 1
Stack additions: [0x269]
Exit stack: [V11, 0x269]

================================

Block 0x269
[0x269:0x2aa]
---
Predecessors: [0x8d2]
Successors: []
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP1
0x26e DUP3
0x26f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x284 AND
0x285 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29a AND
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x20
0x29f ADD
0x2a0 SWAP2
0x2a1 POP
0x2a2 POP
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 DUP1
0x2a7 SWAP2
0x2a8 SUB
0x2a9 SWAP1
0x2aa RETURN
---
0x269: JUMPDEST 
0x26a: V144 = 0x40
0x26c: V145 = M[0x40]
0x26f: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x284: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x285: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x29c: M[V145] = V149
0x29d: V150 = 0x20
0x29f: V151 = ADD 0x20 V145
0x2a3: V152 = 0x40
0x2a5: V153 = M[0x40]
0x2a8: V154 = SUB V151 V153
0x2aa: RETURN V153 V154
---
Entry stack: [V11, 0x269, V455]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x269]

================================

Block 0x2ab
[0x2ab:0x2b2]
---
Predecessors: [0x57]
Successors: [0x2b3, 0x2b7]
---
0x2ab JUMPDEST
0x2ac CALLVALUE
0x2ad DUP1
0x2ae ISZERO
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V155 = CALLVALUE
0x2ae: V156 = ISZERO V155
0x2af: V157 = 0x2b7
0x2b2: JUMPI 0x2b7 V156
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V155]
Exit stack: [V11, V155]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x2ab]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V158 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V11, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V155]

================================

Block 0x2b7
[0x2b7:0x2eb]
---
Predecessors: [0x2ab]
Successors: [0x8f7]
---
0x2b7 JUMPDEST
0x2b8 POP
0x2b9 PUSH2 0x2ec
0x2bc PUSH1 0x4
0x2be DUP1
0x2bf CALLDATASIZE
0x2c0 SUB
0x2c1 DUP2
0x2c2 ADD
0x2c3 SWAP1
0x2c4 DUP1
0x2c5 DUP1
0x2c6 CALLDATALOAD
0x2c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dc AND
0x2dd SWAP1
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 SWAP1
0x2e2 SWAP3
0x2e3 SWAP2
0x2e4 SWAP1
0x2e5 POP
0x2e6 POP
0x2e7 POP
0x2e8 PUSH2 0x8f7
0x2eb JUMP
---
0x2b7: JUMPDEST 
0x2b9: V159 = 0x2ec
0x2bc: V160 = 0x4
0x2bf: V161 = CALLDATASIZE
0x2c0: V162 = SUB V161 0x4
0x2c2: V163 = ADD 0x4 V162
0x2c6: V164 = CALLDATALOAD 0x4
0x2c7: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2de: V167 = 0x20
0x2e0: V168 = ADD 0x20 0x4
0x2e8: V169 = 0x8f7
0x2eb: JUMP 0x8f7
---
Entry stack: [V11, V155]
Stack pops: 1
Stack additions: [0x2ec, V166]
Exit stack: [V11, 0x2ec, V166]

================================

Block 0x2ec
[0x2ec:0x305]
---
Predecessors: [0x9bd]
Successors: []
---
0x2ec JUMPDEST
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 DUP3
0x2f2 ISZERO
0x2f3 ISZERO
0x2f4 ISZERO
0x2f5 ISZERO
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP2
0x2fc POP
0x2fd POP
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 DUP1
0x302 SWAP2
0x303 SUB
0x304 SWAP1
0x305 RETURN
---
0x2ec: JUMPDEST 
0x2ed: V170 = 0x40
0x2ef: V171 = M[0x40]
0x2f2: V172 = ISZERO 0x1
0x2f3: V173 = ISZERO 0x0
0x2f4: V174 = ISZERO 0x1
0x2f5: V175 = ISZERO 0x0
0x2f7: M[V171] = 0x1
0x2f8: V176 = 0x20
0x2fa: V177 = ADD 0x20 V171
0x2fe: V178 = 0x40
0x300: V179 = M[0x40]
0x303: V180 = SUB V177 V179
0x305: RETURN V179 V180
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0x62]
Successors: [0x30e, 0x312]
---
0x306 JUMPDEST
0x307 CALLVALUE
0x308 DUP1
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x306: JUMPDEST 
0x307: V181 = CALLVALUE
0x309: V182 = ISZERO V181
0x30a: V183 = 0x312
0x30d: JUMPI 0x312 V182
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V181]
Exit stack: [V11, V181]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x306]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V184 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V11, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V181]

================================

Block 0x312
[0x312:0x31a]
---
Predecessors: [0x306]
Successors: [0xa07]
---
0x312 JUMPDEST
0x313 POP
0x314 PUSH2 0x31b
0x317 PUSH2 0xa07
0x31a JUMP
---
0x312: JUMPDEST 
0x314: V185 = 0x31b
0x317: V186 = 0xa07
0x31a: JUMP 0xa07
---
Entry stack: [V11, V181]
Stack pops: 1
Stack additions: [0x31b]
Exit stack: [V11, 0x31b]

================================

Block 0x31b
[0x31b:0x35c]
---
Predecessors: [0xa07]
Successors: []
---
0x31b JUMPDEST
0x31c PUSH1 0x40
0x31e MLOAD
0x31f DUP1
0x320 DUP3
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x20
0x351 ADD
0x352 SWAP2
0x353 POP
0x354 POP
0x355 PUSH1 0x40
0x357 MLOAD
0x358 DUP1
0x359 SWAP2
0x35a SUB
0x35b SWAP1
0x35c RETURN
---
0x31b: JUMPDEST 
0x31c: V187 = 0x40
0x31e: V188 = M[0x40]
0x321: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x337: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x34e: M[V188] = V192
0x34f: V193 = 0x20
0x351: V194 = ADD 0x20 V188
0x355: V195 = 0x40
0x357: V196 = M[0x40]
0x35a: V197 = SUB V194 V196
0x35c: RETURN V196 V197
---
Entry stack: [V11, 0x31b, V511]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x31b]

================================

Block 0x35d
[0x35d:0x3b5]
---
Predecessors: [0x180]
Successors: [0x3b6, 0x423]
---
0x35d JUMPDEST
0x35e PUSH1 0x0
0x360 DUP1
0x361 PUSH1 0x0
0x363 SWAP1
0x364 SLOAD
0x365 SWAP1
0x366 PUSH2 0x100
0x369 EXP
0x36a SWAP1
0x36b DIV
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 AND
0x398 CALLER
0x399 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ae AND
0x3af EQ
0x3b0 ISZERO
0x3b1 ISZERO
0x3b2 PUSH2 0x423
0x3b5 JUMPI
---
0x35d: JUMPDEST 
0x35e: V198 = 0x0
0x361: V199 = 0x0
0x364: V200 = S[0x0]
0x366: V201 = 0x100
0x369: V202 = EXP 0x100 0x0
0x36b: V203 = DIV V200 0x1
0x36c: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x382: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x398: V208 = CALLER
0x399: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ae: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x3af: V211 = EQ V210 V207
0x3b0: V212 = ISZERO V211
0x3b1: V213 = ISZERO V212
0x3b2: V214 = 0x423
0x3b5: JUMPI 0x423 V213
---
Entry stack: [V11, 0x1b5, V89]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1b5, V89, 0x0]

================================

Block 0x3b6
[0x3b6:0x422]
---
Predecessors: [0x35d]
Successors: []
---
0x3b6 PUSH1 0x40
0x3b8 MLOAD
0x3b9 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x4
0x3de ADD
0x3df DUP1
0x3e0 DUP1
0x3e1 PUSH1 0x20
0x3e3 ADD
0x3e4 DUP3
0x3e5 DUP2
0x3e6 SUB
0x3e7 DUP3
0x3e8 MSTORE
0x3e9 PUSH1 0x16
0x3eb DUP2
0x3ec MSTORE
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 DUP1
0x3f1 PUSH32 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x412 DUP2
0x413 MSTORE
0x414 POP
0x415 PUSH1 0x20
0x417 ADD
0x418 SWAP2
0x419 POP
0x41a POP
0x41b PUSH1 0x40
0x41d MLOAD
0x41e DUP1
0x41f SWAP2
0x420 SUB
0x421 SWAP1
0x422 REVERT
---
0x3b6: V215 = 0x40
0x3b8: V216 = M[0x40]
0x3b9: V217 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3db: M[V216] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3dc: V218 = 0x4
0x3de: V219 = ADD 0x4 V216
0x3e1: V220 = 0x20
0x3e3: V221 = ADD 0x20 V219
0x3e6: V222 = SUB V221 V219
0x3e8: M[V219] = V222
0x3e9: V223 = 0x16
0x3ec: M[V221] = 0x16
0x3ed: V224 = 0x20
0x3ef: V225 = ADD 0x20 V221
0x3f1: V226 = 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x413: M[V225] = 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x415: V227 = 0x20
0x417: V228 = ADD 0x20 V225
0x41b: V229 = 0x40
0x41d: V230 = M[0x40]
0x420: V231 = SUB V228 V230
0x422: REVERT V230 V231
---
Entry stack: [V11, 0x1b5, V89, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b5, V89, 0x0]

================================

Block 0x423
[0x423:0x46b]
---
Predecessors: [0x35d]
Successors: [0x1b5]
---
0x423 JUMPDEST
0x424 DUP2
0x425 PUSH1 0x0
0x427 DUP1
0x428 PUSH2 0x100
0x42b EXP
0x42c DUP2
0x42d SLOAD
0x42e DUP2
0x42f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x444 MUL
0x445 NOT
0x446 AND
0x447 SWAP1
0x448 DUP4
0x449 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45e AND
0x45f MUL
0x460 OR
0x461 SWAP1
0x462 SSTORE
0x463 POP
0x464 PUSH1 0x1
0x466 SWAP1
0x467 POP
0x468 SWAP2
0x469 SWAP1
0x46a POP
0x46b JUMP
---
0x423: JUMPDEST 
0x425: V232 = 0x0
0x428: V233 = 0x100
0x42b: V234 = EXP 0x100 0x0
0x42d: V235 = S[0x0]
0x42f: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x444: V237 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x445: V238 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x446: V239 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V235
0x449: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x45f: V242 = MUL V241 0x1
0x460: V243 = OR V242 V239
0x462: S[0x0] = V243
0x464: V244 = 0x1
0x46b: JUMP 0x1b5
---
Entry stack: [V11, 0x1b5, V89, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x46c
[0x46c:0x4c4]
---
Predecessors: [0x1db]
Successors: [0x4c5, 0x532]
---
0x46c JUMPDEST
0x46d PUSH1 0x0
0x46f DUP1
0x470 PUSH1 0x0
0x472 SWAP1
0x473 SLOAD
0x474 SWAP1
0x475 PUSH2 0x100
0x478 EXP
0x479 SWAP1
0x47a DIV
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a6 AND
0x4a7 CALLER
0x4a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bd AND
0x4be EQ
0x4bf ISZERO
0x4c0 ISZERO
0x4c1 PUSH2 0x532
0x4c4 JUMPI
---
0x46c: JUMPDEST 
0x46d: V245 = 0x0
0x470: V246 = 0x0
0x473: V247 = S[0x0]
0x475: V248 = 0x100
0x478: V249 = EXP 0x100 0x0
0x47a: V250 = DIV V247 0x1
0x47b: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x491: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a6: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x4a7: V255 = CALLER
0x4a8: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4be: V258 = EQ V257 V254
0x4bf: V259 = ISZERO V258
0x4c0: V260 = ISZERO V259
0x4c1: V261 = 0x532
0x4c4: JUMPI 0x532 V260
---
Entry stack: [V11, 0x23a, V113, V118, V123]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x4c5
[0x4c5:0x531]
---
Predecessors: [0x46c]
Successors: []
---
0x4c5 PUSH1 0x40
0x4c7 MLOAD
0x4c8 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4e9 DUP2
0x4ea MSTORE
0x4eb PUSH1 0x4
0x4ed ADD
0x4ee DUP1
0x4ef DUP1
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 DUP3
0x4f4 DUP2
0x4f5 SUB
0x4f6 DUP3
0x4f7 MSTORE
0x4f8 PUSH1 0x16
0x4fa DUP2
0x4fb MSTORE
0x4fc PUSH1 0x20
0x4fe ADD
0x4ff DUP1
0x500 PUSH32 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x521 DUP2
0x522 MSTORE
0x523 POP
0x524 PUSH1 0x20
0x526 ADD
0x527 SWAP2
0x528 POP
0x529 POP
0x52a PUSH1 0x40
0x52c MLOAD
0x52d DUP1
0x52e SWAP2
0x52f SUB
0x530 SWAP1
0x531 REVERT
---
0x4c5: V262 = 0x40
0x4c7: V263 = M[0x40]
0x4c8: V264 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4ea: M[V263] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4eb: V265 = 0x4
0x4ed: V266 = ADD 0x4 V263
0x4f0: V267 = 0x20
0x4f2: V268 = ADD 0x20 V266
0x4f5: V269 = SUB V268 V266
0x4f7: M[V266] = V269
0x4f8: V270 = 0x16
0x4fb: M[V268] = 0x16
0x4fc: V271 = 0x20
0x4fe: V272 = ADD 0x20 V268
0x500: V273 = 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x522: M[V272] = 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x524: V274 = 0x20
0x526: V275 = ADD 0x20 V272
0x52a: V276 = 0x40
0x52c: V277 = M[0x40]
0x52f: V278 = SUB V275 V277
0x531: REVERT V277 V278
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x532
[0x532:0x53c]
---
Predecessors: [0x46c]
Successors: [0x53d, 0x5aa]
---
0x532 JUMPDEST
0x533 PUSH1 0x0
0x535 DUP5
0x536 GT
0x537 ISZERO
0x538 ISZERO
0x539 PUSH2 0x5aa
0x53c JUMPI
---
0x532: JUMPDEST 
0x533: V279 = 0x0
0x536: V280 = GT V113 0x0
0x537: V281 = ISZERO V280
0x538: V282 = ISZERO V281
0x539: V283 = 0x5aa
0x53c: JUMPI 0x5aa V282
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x53d
[0x53d:0x5a9]
---
Predecessors: [0x532]
Successors: []
---
0x53d PUSH1 0x40
0x53f MLOAD
0x540 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x561 DUP2
0x562 MSTORE
0x563 PUSH1 0x4
0x565 ADD
0x566 DUP1
0x567 DUP1
0x568 PUSH1 0x20
0x56a ADD
0x56b DUP3
0x56c DUP2
0x56d SUB
0x56e DUP3
0x56f MSTORE
0x570 PUSH1 0x1a
0x572 DUP2
0x573 MSTORE
0x574 PUSH1 0x20
0x576 ADD
0x577 DUP1
0x578 PUSH32 0x546861742773204e4f5420612076616c696420616d6f756e7421000000000000
0x599 DUP2
0x59a MSTORE
0x59b POP
0x59c PUSH1 0x20
0x59e ADD
0x59f SWAP2
0x5a0 POP
0x5a1 POP
0x5a2 PUSH1 0x40
0x5a4 MLOAD
0x5a5 DUP1
0x5a6 SWAP2
0x5a7 SUB
0x5a8 SWAP1
0x5a9 REVERT
---
0x53d: V284 = 0x40
0x53f: V285 = M[0x40]
0x540: V286 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x562: M[V285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x563: V287 = 0x4
0x565: V288 = ADD 0x4 V285
0x568: V289 = 0x20
0x56a: V290 = ADD 0x20 V288
0x56d: V291 = SUB V290 V288
0x56f: M[V288] = V291
0x570: V292 = 0x1a
0x573: M[V290] = 0x1a
0x574: V293 = 0x20
0x576: V294 = ADD 0x20 V290
0x578: V295 = 0x546861742773204e4f5420612076616c696420616d6f756e7421000000000000
0x59a: M[V294] = 0x546861742773204e4f5420612076616c696420616d6f756e7421000000000000
0x59c: V296 = 0x20
0x59e: V297 = ADD 0x20 V294
0x5a2: V298 = 0x40
0x5a4: V299 = M[0x40]
0x5a7: V300 = SUB V297 V299
0x5a9: REVERT V299 V300
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x5aa
[0x5aa:0x5e1]
---
Predecessors: [0x532]
Successors: [0x5e2, 0x64f]
---
0x5aa JUMPDEST
0x5ab PUSH1 0x0
0x5ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c2 AND
0x5c3 DUP3
0x5c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d9 AND
0x5da EQ
0x5db ISZERO
0x5dc ISZERO
0x5dd ISZERO
0x5de PUSH2 0x64f
0x5e1 JUMPI
---
0x5aa: JUMPDEST 
0x5ab: V301 = 0x0
0x5ad: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5c4: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d9: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x5da: V306 = EQ V305 0x0
0x5db: V307 = ISZERO V306
0x5dc: V308 = ISZERO V307
0x5dd: V309 = ISZERO V308
0x5de: V310 = 0x64f
0x5e1: JUMPI 0x64f V309
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x5e2
[0x5e2:0x64e]
---
Predecessors: [0x5aa]
Successors: []
---
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x606 DUP2
0x607 MSTORE
0x608 PUSH1 0x4
0x60a ADD
0x60b DUP1
0x60c DUP1
0x60d PUSH1 0x20
0x60f ADD
0x610 DUP3
0x611 DUP2
0x612 SUB
0x613 DUP3
0x614 MSTORE
0x615 PUSH1 0x10
0x617 DUP2
0x618 MSTORE
0x619 PUSH1 0x20
0x61b ADD
0x61c DUP1
0x61d PUSH32 0x496e76616c696420416464726573732100000000000000000000000000000000
0x63e DUP2
0x63f MSTORE
0x640 POP
0x641 PUSH1 0x20
0x643 ADD
0x644 SWAP2
0x645 POP
0x646 POP
0x647 PUSH1 0x40
0x649 MLOAD
0x64a DUP1
0x64b SWAP2
0x64c SUB
0x64d SWAP1
0x64e REVERT
---
0x5e2: V311 = 0x40
0x5e4: V312 = M[0x40]
0x5e5: V313 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x607: M[V312] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x608: V314 = 0x4
0x60a: V315 = ADD 0x4 V312
0x60d: V316 = 0x20
0x60f: V317 = ADD 0x20 V315
0x612: V318 = SUB V317 V315
0x614: M[V315] = V318
0x615: V319 = 0x10
0x618: M[V317] = 0x10
0x619: V320 = 0x20
0x61b: V321 = ADD 0x20 V317
0x61d: V322 = 0x496e76616c696420416464726573732100000000000000000000000000000000
0x63f: M[V321] = 0x496e76616c696420416464726573732100000000000000000000000000000000
0x641: V323 = 0x20
0x643: V324 = ADD 0x20 V321
0x647: V325 = 0x40
0x649: V326 = M[0x40]
0x64c: V327 = SUB V324 V326
0x64e: REVERT V326 V327
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x64f
[0x64f:0x686]
---
Predecessors: [0x5aa]
Successors: [0x687, 0x6f4]
---
0x64f JUMPDEST
0x650 PUSH1 0x0
0x652 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x667 AND
0x668 DUP4
0x669 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67e AND
0x67f EQ
0x680 ISZERO
0x681 ISZERO
0x682 ISZERO
0x683 PUSH2 0x6f4
0x686 JUMPI
---
0x64f: JUMPDEST 
0x650: V328 = 0x0
0x652: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x667: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x669: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x67f: V333 = EQ V332 0x0
0x680: V334 = ISZERO V333
0x681: V335 = ISZERO V334
0x682: V336 = ISZERO V335
0x683: V337 = 0x6f4
0x686: JUMPI 0x6f4 V336
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x687
[0x687:0x6f3]
---
Predecessors: [0x64f]
Successors: []
---
0x687 PUSH1 0x40
0x689 MLOAD
0x68a PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6ab DUP2
0x6ac MSTORE
0x6ad PUSH1 0x4
0x6af ADD
0x6b0 DUP1
0x6b1 DUP1
0x6b2 PUSH1 0x20
0x6b4 ADD
0x6b5 DUP3
0x6b6 DUP2
0x6b7 SUB
0x6b8 DUP3
0x6b9 MSTORE
0x6ba PUSH1 0x1f
0x6bc DUP2
0x6bd MSTORE
0x6be PUSH1 0x20
0x6c0 ADD
0x6c1 DUP1
0x6c2 PUSH32 0x496e76616c696420546f6b656e20436f6e747261637420416464726573732100
0x6e3 DUP2
0x6e4 MSTORE
0x6e5 POP
0x6e6 PUSH1 0x20
0x6e8 ADD
0x6e9 SWAP2
0x6ea POP
0x6eb POP
0x6ec PUSH1 0x40
0x6ee MLOAD
0x6ef DUP1
0x6f0 SWAP2
0x6f1 SUB
0x6f2 SWAP1
0x6f3 REVERT
---
0x687: V338 = 0x40
0x689: V339 = M[0x40]
0x68a: V340 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6ac: M[V339] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6ad: V341 = 0x4
0x6af: V342 = ADD 0x4 V339
0x6b2: V343 = 0x20
0x6b4: V344 = ADD 0x20 V342
0x6b7: V345 = SUB V344 V342
0x6b9: M[V342] = V345
0x6ba: V346 = 0x1f
0x6bd: M[V344] = 0x1f
0x6be: V347 = 0x20
0x6c0: V348 = ADD 0x20 V344
0x6c2: V349 = 0x496e76616c696420546f6b656e20436f6e747261637420416464726573732100
0x6e4: M[V348] = 0x496e76616c696420546f6b656e20436f6e747261637420416464726573732100
0x6e6: V350 = 0x20
0x6e8: V351 = ADD 0x20 V348
0x6ec: V352 = 0x40
0x6ee: V353 = M[0x40]
0x6f1: V354 = SUB V351 V353
0x6f3: REVERT V353 V354
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x6f4
[0x6f4:0x729]
---
Predecessors: [0x64f]
Successors: [0x72a, 0x80b]
---
0x6f4 JUMPDEST
0x6f5 PUSH1 0x0
0x6f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70c AND
0x70d DUP3
0x70e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x723 AND
0x724 EQ
0x725 ISZERO
0x726 PUSH2 0x80b
0x729 JUMPI
---
0x6f4: JUMPDEST 
0x6f5: V355 = 0x0
0x6f7: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x70c: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x70e: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x723: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x724: V360 = EQ V359 0x0
0x725: V361 = ISZERO V360
0x726: V362 = 0x80b
0x729: JUMPI 0x80b V361
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x72a
[0x72a:0x7e9]
---
Predecessors: [0x6f4]
Successors: [0x7ea, 0x7ee]
---
0x72a DUP3
0x72b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x740 AND
0x741 PUSH4 0xa9059cbb
0x746 PUSH1 0x1
0x748 PUSH1 0x0
0x74a SWAP1
0x74b SLOAD
0x74c SWAP1
0x74d PUSH2 0x100
0x750 EXP
0x751 SWAP1
0x752 DIV
0x753 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x768 AND
0x769 DUP7
0x76a PUSH1 0x40
0x76c MLOAD
0x76d DUP4
0x76e PUSH4 0xffffffff
0x773 AND
0x774 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x792 MUL
0x793 DUP2
0x794 MSTORE
0x795 PUSH1 0x4
0x797 ADD
0x798 DUP1
0x799 DUP4
0x79a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7af AND
0x7b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c5 AND
0x7c6 DUP2
0x7c7 MSTORE
0x7c8 PUSH1 0x20
0x7ca ADD
0x7cb DUP3
0x7cc DUP2
0x7cd MSTORE
0x7ce PUSH1 0x20
0x7d0 ADD
0x7d1 SWAP3
0x7d2 POP
0x7d3 POP
0x7d4 POP
0x7d5 PUSH1 0x0
0x7d7 PUSH1 0x40
0x7d9 MLOAD
0x7da DUP1
0x7db DUP4
0x7dc SUB
0x7dd DUP2
0x7de PUSH1 0x0
0x7e0 DUP8
0x7e1 DUP1
0x7e2 EXTCODESIZE
0x7e3 ISZERO
0x7e4 DUP1
0x7e5 ISZERO
0x7e6 PUSH2 0x7ee
0x7e9 JUMPI
---
0x72b: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x740: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x741: V365 = 0xa9059cbb
0x746: V366 = 0x1
0x748: V367 = 0x0
0x74b: V368 = S[0x1]
0x74d: V369 = 0x100
0x750: V370 = EXP 0x100 0x0
0x752: V371 = DIV V368 0x1
0x753: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x768: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x76a: V374 = 0x40
0x76c: V375 = M[0x40]
0x76e: V376 = 0xffffffff
0x773: V377 = AND 0xffffffff 0xa9059cbb
0x774: V378 = 0x100000000000000000000000000000000000000000000000000000000
0x792: V379 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x794: M[V375] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x795: V380 = 0x4
0x797: V381 = ADD 0x4 V375
0x79a: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x7af: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x7b0: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c5: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x7c7: M[V381] = V385
0x7c8: V386 = 0x20
0x7ca: V387 = ADD 0x20 V381
0x7cd: M[V387] = V113
0x7ce: V388 = 0x20
0x7d0: V389 = ADD 0x20 V387
0x7d5: V390 = 0x0
0x7d7: V391 = 0x40
0x7d9: V392 = M[0x40]
0x7dc: V393 = SUB V389 V392
0x7de: V394 = 0x0
0x7e2: V395 = EXTCODESIZE V364
0x7e3: V396 = ISZERO V395
0x7e5: V397 = ISZERO V396
0x7e6: V398 = 0x7ee
0x7e9: JUMPI 0x7ee V397
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V364, 0xa9059cbb, V389, 0x0, V392, V393, V392, 0x0, V364, V396]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0, V364, 0xa9059cbb, V389, 0x0, V392, V393, V392, 0x0, V364, V396]

================================

Block 0x7ea
[0x7ea:0x7ed]
---
Predecessors: [0x72a]
Successors: []
---
0x7ea PUSH1 0x0
0x7ec DUP1
0x7ed REVERT
---
0x7ea: V399 = 0x0
0x7ed: REVERT 0x0 0x0
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0, V364, 0xa9059cbb, V389, 0x0, V392, V393, V392, 0x0, V364, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0, V364, 0xa9059cbb, V389, 0x0, V392, V393, V392, 0x0, V364, V396]

================================

Block 0x7ee
[0x7ee:0x7f8]
---
Predecessors: [0x72a]
Successors: [0x7f9, 0x802]
---
0x7ee JUMPDEST
0x7ef POP
0x7f0 GAS
0x7f1 CALL
0x7f2 ISZERO
0x7f3 DUP1
0x7f4 ISZERO
0x7f5 PUSH2 0x802
0x7f8 JUMPI
---
0x7ee: JUMPDEST 
0x7f0: V400 = GAS
0x7f1: V401 = CALL V400 V364 0x0 V392 V393 V392 0x0
0x7f2: V402 = ISZERO V401
0x7f4: V403 = ISZERO V402
0x7f5: V404 = 0x802
0x7f8: JUMPI 0x802 V403
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0, V364, 0xa9059cbb, V389, 0x0, V392, V393, V392, 0x0, V364, V396]
Stack pops: 7
Stack additions: [V402]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0, V364, 0xa9059cbb, V389, V402]

================================

Block 0x7f9
[0x7f9:0x801]
---
Predecessors: [0x7ee]
Successors: []
---
0x7f9 RETURNDATASIZE
0x7fa PUSH1 0x0
0x7fc DUP1
0x7fd RETURNDATACOPY
0x7fe RETURNDATASIZE
0x7ff PUSH1 0x0
0x801 REVERT
---
0x7f9: V405 = RETURNDATASIZE
0x7fa: V406 = 0x0
0x7fd: RETURNDATACOPY 0x0 0x0 V405
0x7fe: V407 = RETURNDATASIZE
0x7ff: V408 = 0x0
0x801: REVERT 0x0 V407
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0, V364, 0xa9059cbb, V389, V402]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0, V364, 0xa9059cbb, V389, V402]

================================

Block 0x802
[0x802:0x80a]
---
Predecessors: [0x7ee]
Successors: [0x8c7]
---
0x802 JUMPDEST
0x803 POP
0x804 POP
0x805 POP
0x806 POP
0x807 PUSH2 0x8c7
0x80a JUMP
---
0x802: JUMPDEST 
0x807: V409 = 0x8c7
0x80a: JUMP 0x8c7
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0, V364, 0xa9059cbb, V389, V402]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x80b
[0x80b:0x8a9]
---
Predecessors: [0x6f4]
Successors: [0x8aa, 0x8ae]
---
0x80b JUMPDEST
0x80c DUP3
0x80d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x822 AND
0x823 PUSH4 0xa9059cbb
0x828 DUP4
0x829 DUP7
0x82a PUSH1 0x40
0x82c MLOAD
0x82d DUP4
0x82e PUSH4 0xffffffff
0x833 AND
0x834 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x852 MUL
0x853 DUP2
0x854 MSTORE
0x855 PUSH1 0x4
0x857 ADD
0x858 DUP1
0x859 DUP4
0x85a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86f AND
0x870 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x885 AND
0x886 DUP2
0x887 MSTORE
0x888 PUSH1 0x20
0x88a ADD
0x88b DUP3
0x88c DUP2
0x88d MSTORE
0x88e PUSH1 0x20
0x890 ADD
0x891 SWAP3
0x892 POP
0x893 POP
0x894 POP
0x895 PUSH1 0x0
0x897 PUSH1 0x40
0x899 MLOAD
0x89a DUP1
0x89b DUP4
0x89c SUB
0x89d DUP2
0x89e PUSH1 0x0
0x8a0 DUP8
0x8a1 DUP1
0x8a2 EXTCODESIZE
0x8a3 ISZERO
0x8a4 DUP1
0x8a5 ISZERO
0x8a6 PUSH2 0x8ae
0x8a9 JUMPI
---
0x80b: JUMPDEST 
0x80d: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x822: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x823: V412 = 0xa9059cbb
0x82a: V413 = 0x40
0x82c: V414 = M[0x40]
0x82e: V415 = 0xffffffff
0x833: V416 = AND 0xffffffff 0xa9059cbb
0x834: V417 = 0x100000000000000000000000000000000000000000000000000000000
0x852: V418 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x854: M[V414] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x855: V419 = 0x4
0x857: V420 = ADD 0x4 V414
0x85a: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x86f: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x870: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x885: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x887: M[V420] = V424
0x888: V425 = 0x20
0x88a: V426 = ADD 0x20 V420
0x88d: M[V426] = V113
0x88e: V427 = 0x20
0x890: V428 = ADD 0x20 V426
0x895: V429 = 0x0
0x897: V430 = 0x40
0x899: V431 = M[0x40]
0x89c: V432 = SUB V428 V431
0x89e: V433 = 0x0
0x8a2: V434 = EXTCODESIZE V411
0x8a3: V435 = ISZERO V434
0x8a5: V436 = ISZERO V435
0x8a6: V437 = 0x8ae
0x8a9: JUMPI 0x8ae V436
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]

================================

Block 0x8aa
[0x8aa:0x8ad]
---
Predecessors: [0x80b]
Successors: []
---
0x8aa PUSH1 0x0
0x8ac DUP1
0x8ad REVERT
---
0x8aa: V438 = 0x0
0x8ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]

================================

Block 0x8ae
[0x8ae:0x8b8]
---
Predecessors: [0x80b]
Successors: [0x8b9, 0x8c2]
---
0x8ae JUMPDEST
0x8af POP
0x8b0 GAS
0x8b1 CALL
0x8b2 ISZERO
0x8b3 DUP1
0x8b4 ISZERO
0x8b5 PUSH2 0x8c2
0x8b8 JUMPI
---
0x8ae: JUMPDEST 
0x8b0: V439 = GAS
0x8b1: V440 = CALL V439 V411 0x0 V431 V432 V431 0x0
0x8b2: V441 = ISZERO V440
0x8b4: V442 = ISZERO V441
0x8b5: V443 = 0x8c2
0x8b8: JUMPI 0x8c2 V442
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]
Stack pops: 7
Stack additions: [V441]
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0, V411, 0xa9059cbb, V428, V441]

================================

Block 0x8b9
[0x8b9:0x8c1]
---
Predecessors: [0x8ae]
Successors: []
---
0x8b9 RETURNDATASIZE
0x8ba PUSH1 0x0
0x8bc DUP1
0x8bd RETURNDATACOPY
0x8be RETURNDATASIZE
0x8bf PUSH1 0x0
0x8c1 REVERT
---
0x8b9: V444 = RETURNDATASIZE
0x8ba: V445 = 0x0
0x8bd: RETURNDATACOPY 0x0 0x0 V444
0x8be: V446 = RETURNDATASIZE
0x8bf: V447 = 0x0
0x8c1: REVERT 0x0 V446
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0, V411, 0xa9059cbb, V428, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0, V411, 0xa9059cbb, V428, V441]

================================

Block 0x8c2
[0x8c2:0x8c6]
---
Predecessors: [0x8ae]
Successors: [0x8c7]
---
0x8c2 JUMPDEST
0x8c3 POP
0x8c4 POP
0x8c5 POP
0x8c6 POP
---
0x8c2: JUMPDEST 
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0, V411, 0xa9059cbb, V428, V441]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x23a, V113, V118, V123, 0x0]

================================

Block 0x8c7
[0x8c7:0x8d1]
---
Predecessors: [0x802, 0x8c2]
Successors: [0x23a]
---
0x8c7 JUMPDEST
0x8c8 PUSH1 0x1
0x8ca SWAP1
0x8cb POP
0x8cc SWAP4
0x8cd SWAP3
0x8ce POP
0x8cf POP
0x8d0 POP
0x8d1 JUMP
---
0x8c7: JUMPDEST 
0x8c8: V448 = 0x1
0x8d1: JUMP 0x23a
---
Entry stack: [V11, 0x23a, V113, V118, V123, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x8d2
[0x8d2:0x8f6]
---
Predecessors: [0x260]
Successors: [0x269]
---
0x8d2 JUMPDEST
0x8d3 PUSH1 0x0
0x8d5 DUP1
0x8d6 SWAP1
0x8d7 SLOAD
0x8d8 SWAP1
0x8d9 PUSH2 0x100
0x8dc EXP
0x8dd SWAP1
0x8de DIV
0x8df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f4 AND
0x8f5 DUP2
0x8f6 JUMP
---
0x8d2: JUMPDEST 
0x8d3: V449 = 0x0
0x8d7: V450 = S[0x0]
0x8d9: V451 = 0x100
0x8dc: V452 = EXP 0x100 0x0
0x8de: V453 = DIV V450 0x1
0x8df: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f4: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x8f6: JUMP 0x269
---
Entry stack: [V11, 0x269]
Stack pops: 1
Stack additions: [S0, V455]
Exit stack: [V11, 0x269, V455]

================================

Block 0x8f7
[0x8f7:0x94f]
---
Predecessors: [0x2b7]
Successors: [0x950, 0x9bd]
---
0x8f7 JUMPDEST
0x8f8 PUSH1 0x0
0x8fa DUP1
0x8fb PUSH1 0x0
0x8fd SWAP1
0x8fe SLOAD
0x8ff SWAP1
0x900 PUSH2 0x100
0x903 EXP
0x904 SWAP1
0x905 DIV
0x906 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91b AND
0x91c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x931 AND
0x932 CALLER
0x933 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x948 AND
0x949 EQ
0x94a ISZERO
0x94b ISZERO
0x94c PUSH2 0x9bd
0x94f JUMPI
---
0x8f7: JUMPDEST 
0x8f8: V456 = 0x0
0x8fb: V457 = 0x0
0x8fe: V458 = S[0x0]
0x900: V459 = 0x100
0x903: V460 = EXP 0x100 0x0
0x905: V461 = DIV V458 0x1
0x906: V462 = 0xffffffffffffffffffffffffffffffffffffffff
0x91b: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x91c: V464 = 0xffffffffffffffffffffffffffffffffffffffff
0x931: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x932: V466 = CALLER
0x933: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x948: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x949: V469 = EQ V468 V465
0x94a: V470 = ISZERO V469
0x94b: V471 = ISZERO V470
0x94c: V472 = 0x9bd
0x94f: JUMPI 0x9bd V471
---
Entry stack: [V11, 0x2ec, V166]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x2ec, V166, 0x0]

================================

Block 0x950
[0x950:0x9bc]
---
Predecessors: [0x8f7]
Successors: []
---
0x950 PUSH1 0x40
0x952 MLOAD
0x953 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x974 DUP2
0x975 MSTORE
0x976 PUSH1 0x4
0x978 ADD
0x979 DUP1
0x97a DUP1
0x97b PUSH1 0x20
0x97d ADD
0x97e DUP3
0x97f DUP2
0x980 SUB
0x981 DUP3
0x982 MSTORE
0x983 PUSH1 0x16
0x985 DUP2
0x986 MSTORE
0x987 PUSH1 0x20
0x989 ADD
0x98a DUP1
0x98b PUSH32 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x9ac DUP2
0x9ad MSTORE
0x9ae POP
0x9af PUSH1 0x20
0x9b1 ADD
0x9b2 SWAP2
0x9b3 POP
0x9b4 POP
0x9b5 PUSH1 0x40
0x9b7 MLOAD
0x9b8 DUP1
0x9b9 SWAP2
0x9ba SUB
0x9bb SWAP1
0x9bc REVERT
---
0x950: V473 = 0x40
0x952: V474 = M[0x40]
0x953: V475 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x975: M[V474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x976: V476 = 0x4
0x978: V477 = ADD 0x4 V474
0x97b: V478 = 0x20
0x97d: V479 = ADD 0x20 V477
0x980: V480 = SUB V479 V477
0x982: M[V477] = V480
0x983: V481 = 0x16
0x986: M[V479] = 0x16
0x987: V482 = 0x20
0x989: V483 = ADD 0x20 V479
0x98b: V484 = 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x9ad: M[V483] = 0x596f7520617265204e4f5420417574686f72697a656400000000000000000000
0x9af: V485 = 0x20
0x9b1: V486 = ADD 0x20 V483
0x9b5: V487 = 0x40
0x9b7: V488 = M[0x40]
0x9ba: V489 = SUB V486 V488
0x9bc: REVERT V488 V489
---
Entry stack: [V11, 0x2ec, V166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2ec, V166, 0x0]

================================

Block 0x9bd
[0x9bd:0xa06]
---
Predecessors: [0x8f7]
Successors: [0x2ec]
---
0x9bd JUMPDEST
0x9be DUP2
0x9bf PUSH1 0x1
0x9c1 PUSH1 0x0
0x9c3 PUSH2 0x100
0x9c6 EXP
0x9c7 DUP2
0x9c8 SLOAD
0x9c9 DUP2
0x9ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9df MUL
0x9e0 NOT
0x9e1 AND
0x9e2 SWAP1
0x9e3 DUP4
0x9e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f9 AND
0x9fa MUL
0x9fb OR
0x9fc SWAP1
0x9fd SSTORE
0x9fe POP
0x9ff PUSH1 0x1
0xa01 SWAP1
0xa02 POP
0xa03 SWAP2
0xa04 SWAP1
0xa05 POP
0xa06 JUMP
---
0x9bd: JUMPDEST 
0x9bf: V490 = 0x1
0x9c1: V491 = 0x0
0x9c3: V492 = 0x100
0x9c6: V493 = EXP 0x100 0x0
0x9c8: V494 = S[0x1]
0x9ca: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x9df: V496 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x9e0: V497 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9e1: V498 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V494
0x9e4: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f9: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x9fa: V501 = MUL V500 0x1
0x9fb: V502 = OR V501 V498
0x9fd: S[0x1] = V502
0x9ff: V503 = 0x1
0xa06: JUMP 0x2ec
---
Entry stack: [V11, 0x2ec, V166, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xa07
[0xa07:0xa2c]
---
Predecessors: [0x312]
Successors: [0x31b]
---
0xa07 JUMPDEST
0xa08 PUSH1 0x1
0xa0a PUSH1 0x0
0xa0c SWAP1
0xa0d SLOAD
0xa0e SWAP1
0xa0f PUSH2 0x100
0xa12 EXP
0xa13 SWAP1
0xa14 DIV
0xa15 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2a AND
0xa2b DUP2
0xa2c JUMP
---
0xa07: JUMPDEST 
0xa08: V504 = 0x1
0xa0a: V505 = 0x0
0xa0d: V506 = S[0x1]
0xa0f: V507 = 0x100
0xa12: V508 = EXP 0x100 0x0
0xa14: V509 = DIV V506 0x1
0xa15: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2a: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0xa2c: JUMP 0x31b
---
Entry stack: [V11, 0x31b]
Stack pops: 1
Stack additions: [S0, V511]
Exit stack: [V11, 0x31b, V511]

================================

Block 0xa2d
[0xa2d:0xa58]
---
Predecessors: []
Successors: []
---
0xa2d STOP
0xa2e LOG1
0xa2f PUSH6 0x627a7a723058
0xa36 SHA3
0xa37 MISSING 0xfc
0xa38 MISSING 0x4c
0xa39 MISSING 0xf8
0xa3a PUSH5 0xa6d95636c4
0xa40 MISSING 0xcb
0xa41 MISSING 0x47
0xa42 SWAP13
0xa43 DUP2
0xa44 MSTORE8
0xa45 CALLDATASIZE
0xa46 MISSING 0x26
0xa47 MISSING 0xc8
0xa48 DUP3
0xa49 SELFDESTRUCT
0xa4a MISSING 0xda
0xa4b MISSING 0xaf
0xa4c SUB
0xa4d SHR
0xa4e DIV
0xa4f MISSING 0xd3
0xa50 BALANCE
0xa51 MISSING 0xc2
0xa52 EXTCODEHASH
0xa53 MISSING 0xdb
0xa54 DUP9
0xa55 MISSING 0x26
0xa56 MISSING 0xfc
0xa57 STOP
0xa58 MISSING 0x29
---
0xa2d: STOP 
0xa2e: LOG S0 S1 S2
0xa2f: V512 = 0x627a7a723058
0xa36: V513 = SHA3 0x627a7a723058 S3
0xa37: MISSING 0xfc
0xa38: MISSING 0x4c
0xa39: MISSING 0xf8
0xa3a: V514 = 0xa6d95636c4
0xa40: MISSING 0xcb
0xa41: MISSING 0x47
0xa44: M8[S1] = S13
0xa45: V515 = CALLDATASIZE
0xa46: MISSING 0x26
0xa47: MISSING 0xc8
0xa49: SELFDESTRUCT S2
0xa4a: MISSING 0xda
0xa4b: MISSING 0xaf
0xa4c: V516 = SUB S0 S1
0xa4d: V517 = SHR V516 S2
0xa4e: V518 = DIV V517 S3
0xa4f: MISSING 0xd3
0xa50: V519 = BALANCE S0
0xa51: MISSING 0xc2
0xa52: V520 = EXTCODEHASH S0
0xa53: MISSING 0xdb
0xa55: MISSING 0x26
0xa56: MISSING 0xfc
0xa57: STOP 
0xa58: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V513, 0xa6d95636c4, V515, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S0, S1, S2, V518, V519, V520, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x2af4c31e
Entry block: 0x174
Exit block: 0x1b5
Body: 0x174, 0x17c, 0x180, 0x1b5, 0x35d, 0x3b6, 0x423

Function 1:
Public function signature: 0x43f7505a
Entry block: 0x1cf
Exit block: 0x23a
Body: 0x1cf, 0x1d7, 0x1db, 0x23a, 0x46c, 0x4c5, 0x532, 0x53d, 0x5aa, 0x5e2, 0x64f, 0x687, 0x6f4, 0x72a, 0x7ea, 0x7ee, 0x7f9, 0x802, 0x80b, 0x8aa, 0x8ae, 0x8b9, 0x8c2, 0x8c7

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x254
Exit block: 0x269
Body: 0x254, 0x25c, 0x260, 0x269, 0x8d2

Function 3:
Public function signature: 0xc763f216
Entry block: 0x2ab
Exit block: 0x2ec
Body: 0x2ab, 0x2b3, 0x2b7, 0x2ec, 0x8f7, 0x950, 0x9bd

Function 4:
Public function signature: 0xfbfa77cf
Entry block: 0x306
Exit block: 0x31b
Body: 0x306, 0x30e, 0x312, 0x31b, 0xa07

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0xeb
Body: 0x6d, 0xe2, 0xeb

