Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xce7929b5
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xce7929b5
0x3c: V13 = EQ 0xce7929b5 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x68]
---
0x41 DUP1
0x42 PUSH4 0xfeba894c
0x47 EQ
0x48 PUSH2 0x68
0x4b JUMPI
---
0x42: V15 = 0xfeba894c
0x47: V16 = EQ 0xfeba894c V11
0x48: V17 = 0x68
0x4b: JUMPI 0x68 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0x72]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0x72
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0x72
0x65: JUMP 0x72
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0xf0]
Successors: []
---
0x66 JUMPDEST
0x67 STOP
---
0x66: JUMPDEST 
0x67: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x68
[0x68:0x6f]
---
Predecessors: [0x41]
Successors: [0xf3]
---
0x68 JUMPDEST
0x69 PUSH2 0x70
0x6c PUSH2 0xf3
0x6f JUMP
---
0x68: JUMPDEST 
0x69: V25 = 0x70
0x6c: V26 = 0xf3
0x6f: JUMP 0xf3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x70]
Exit stack: [V11, 0x70]

================================

Block 0x70
[0x70:0x71]
---
Predecessors: [0x169]
Successors: []
---
0x70 JUMPDEST
0x71 STOP
---
0x70: JUMPDEST 
0x71: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0xe6]
---
Predecessors: [0x5d]
Successors: [0xe7, 0xf0]
---
0x72 JUMPDEST
0x73 PUSH1 0x0
0x75 DUP1
0x76 SWAP1
0x77 SLOAD
0x78 SWAP1
0x79 PUSH2 0x100
0x7c EXP
0x7d SWAP1
0x7e DIV
0x7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94 AND
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab PUSH2 0x8fc
0xae ADDRESS
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 BALANCE
0xc6 SWAP1
0xc7 DUP2
0xc8 ISZERO
0xc9 MUL
0xca SWAP1
0xcb PUSH1 0x40
0xcd MLOAD
0xce PUSH1 0x0
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 DUP4
0xd5 SUB
0xd6 DUP2
0xd7 DUP6
0xd8 DUP9
0xd9 DUP9
0xda CALL
0xdb SWAP4
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 ISZERO
0xe1 DUP1
0xe2 ISZERO
0xe3 PUSH2 0xf0
0xe6 JUMPI
---
0x72: JUMPDEST 
0x73: V27 = 0x0
0x77: V28 = S[0x0]
0x79: V29 = 0x100
0x7c: V30 = EXP 0x100 0x0
0x7e: V31 = DIV V28 0x1
0x7f: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x94: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x95: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xab: V36 = 0x8fc
0xae: V37 = ADDRESS
0xaf: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xc5: V40 = BALANCE V39
0xc8: V41 = ISZERO V40
0xc9: V42 = MUL V41 0x8fc
0xcb: V43 = 0x40
0xcd: V44 = M[0x40]
0xce: V45 = 0x0
0xd0: V46 = 0x40
0xd2: V47 = M[0x40]
0xd5: V48 = SUB V44 V47
0xda: V49 = CALL V42 V35 V40 V47 V48 V47 0x0
0xe0: V50 = ISZERO V49
0xe2: V51 = ISZERO V50
0xe3: V52 = 0xf0
0xe6: JUMPI 0xf0 V51
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, 0x66, V50]

================================

Block 0xe7
[0xe7:0xef]
---
Predecessors: [0x72]
Successors: []
---
0xe7 RETURNDATASIZE
0xe8 PUSH1 0x0
0xea DUP1
0xeb RETURNDATACOPY
0xec RETURNDATASIZE
0xed PUSH1 0x0
0xef REVERT
---
0xe7: V53 = RETURNDATASIZE
0xe8: V54 = 0x0
0xeb: RETURNDATACOPY 0x0 0x0 V53
0xec: V55 = RETURNDATASIZE
0xed: V56 = 0x0
0xef: REVERT 0x0 V55
---
Entry stack: [V11, 0x66, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, V50]

================================

Block 0xf0
[0xf0:0xf2]
---
Predecessors: [0x72]
Successors: [0x66]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 JUMP
---
0xf0: JUMPDEST 
0xf2: JUMP 0x66
---
Entry stack: [V11, 0x66, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0x121]
---
Predecessors: [0x68]
Successors: [0x122, 0x169]
---
0xf3 JUMPDEST
0xf4 PUSH1 0x0
0xf6 CALLVALUE
0xf7 CALLER
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e BALANCE
0x10f ADD
0x110 SWAP1
0x111 POP
0x112 PUSH8 0x1aa79902020a000
0x11b DUP2
0x11c GT
0x11d ISZERO
0x11e PUSH2 0x169
0x121 JUMPI
---
0xf3: JUMPDEST 
0xf4: V57 = 0x0
0xf6: V58 = CALLVALUE
0xf7: V59 = CALLER
0xf8: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x10e: V62 = BALANCE V61
0x10f: V63 = ADD V62 V58
0x112: V64 = 0x1aa79902020a000
0x11c: V65 = GT V63 0x1aa79902020a000
0x11d: V66 = ISZERO V65
0x11e: V67 = 0x169
0x121: JUMPI 0x169 V66
---
Entry stack: [V11, 0x70]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, 0x70, V63]

================================

Block 0x122
[0x122:0x15d]
---
Predecessors: [0xf3]
Successors: [0x15e, 0x167]
---
0x122 CALLER
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 PUSH2 0x8fc
0x13c CALLVALUE
0x13d SWAP1
0x13e DUP2
0x13f ISZERO
0x140 MUL
0x141 SWAP1
0x142 PUSH1 0x40
0x144 MLOAD
0x145 PUSH1 0x0
0x147 PUSH1 0x40
0x149 MLOAD
0x14a DUP1
0x14b DUP4
0x14c SUB
0x14d DUP2
0x14e DUP6
0x14f DUP9
0x150 DUP9
0x151 CALL
0x152 SWAP4
0x153 POP
0x154 POP
0x155 POP
0x156 POP
0x157 ISZERO
0x158 DUP1
0x159 ISZERO
0x15a PUSH2 0x167
0x15d JUMPI
---
0x122: V68 = CALLER
0x123: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x139: V71 = 0x8fc
0x13c: V72 = CALLVALUE
0x13f: V73 = ISZERO V72
0x140: V74 = MUL V73 0x8fc
0x142: V75 = 0x40
0x144: V76 = M[0x40]
0x145: V77 = 0x0
0x147: V78 = 0x40
0x149: V79 = M[0x40]
0x14c: V80 = SUB V76 V79
0x151: V81 = CALL V74 V70 V72 V79 V80 V79 0x0
0x157: V82 = ISZERO V81
0x159: V83 = ISZERO V82
0x15a: V84 = 0x167
0x15d: JUMPI 0x167 V83
---
Entry stack: [V11, 0x70, V63]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V11, 0x70, V63, V82]

================================

Block 0x15e
[0x15e:0x166]
---
Predecessors: [0x122]
Successors: []
---
0x15e RETURNDATASIZE
0x15f PUSH1 0x0
0x161 DUP1
0x162 RETURNDATACOPY
0x163 RETURNDATASIZE
0x164 PUSH1 0x0
0x166 REVERT
---
0x15e: V85 = RETURNDATASIZE
0x15f: V86 = 0x0
0x162: RETURNDATACOPY 0x0 0x0 V85
0x163: V87 = RETURNDATASIZE
0x164: V88 = 0x0
0x166: REVERT 0x0 V87
---
Entry stack: [V11, 0x70, V63, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70, V63, V82]

================================

Block 0x167
[0x167:0x168]
---
Predecessors: [0x122]
Successors: [0x169]
---
0x167 JUMPDEST
0x168 POP
---
0x167: JUMPDEST 
---
Entry stack: [V11, 0x70, V63, V82]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x70, V63]

================================

Block 0x169
[0x169:0x16b]
---
Predecessors: [0xf3, 0x167]
Successors: [0x70]
---
0x169 JUMPDEST
0x16a POP
0x16b JUMP
---
0x169: JUMPDEST 
0x16b: JUMP 0x70
---
Entry stack: [V11, 0x70, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x16c
[0x16c:0x1af]
---
Predecessors: []
Successors: []
---
0x16c STOP
0x16d LOG1
0x16e PUSH6 0x627a7a723058
0x175 SHA3
0x176 SWAP7
0x177 XOR
0x178 PUSH19 0x4b90e75c1efbe1262cabbbc2d12bc079aea071
0x18c AND
0x18d MISSING 0x25
0x18e MISSING 0xfb
0x18f PUSH32 0x416601dc97250029
---
0x16c: STOP 
0x16d: LOG S0 S1 S2
0x16e: V89 = 0x627a7a723058
0x175: V90 = SHA3 0x627a7a723058 S3
0x177: V91 = XOR S10 S4
0x178: V92 = 0x4b90e75c1efbe1262cabbbc2d12bc079aea071
0x18c: V93 = AND 0x4b90e75c1efbe1262cabbbc2d12bc079aea071 V91
0x18d: MISSING 0x25
0x18e: MISSING 0xfb
0x18f: V94 = 0x416601dc97250029
---
Entry stack: []
Stack pops: 0
Stack additions: [V93, S5, S6, S7, S8, S9, V90, 0x416601dc97250029]
Exit stack: []

================================

Function 0:
Public function signature: 0xce7929b5
Entry block: 0x51
Exit block: 0x66
Body: 0x51, 0x59, 0x5d, 0x66, 0x72, 0xe7, 0xf0

Function 1:
Public function signature: 0xfeba894c
Entry block: 0x68
Exit block: 0x70
Body: 0x68, 0x70, 0xf3, 0x122, 0x15e, 0x167, 0x169

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

