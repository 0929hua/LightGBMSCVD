Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x12ae6397
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x12ae6397
0x3b: V13 = EQ V11 0x12ae6397
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6b]
---
0x40 DUP1
0x41 PUSH4 0x212c5fea
0x46 EQ
0x47 PUSH2 0x6b
0x4a JUMPI
---
0x41: V15 = 0x212c5fea
0x46: V16 = EQ 0x212c5fea V11
0x47: V17 = 0x6b
0x4a: JUMPI 0x6b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x85]
---
0x4b DUP1
0x4c PUSH4 0x6d4ce63c
0x51 EQ
0x52 PUSH2 0x85
0x55 JUMPI
---
0x4c: V18 = 0x6d4ce63c
0x51: V19 = EQ 0x6d4ce63c V11
0x52: V20 = 0x85
0x55: JUMPI 0x85 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x8d]
---
0x56 DUP1
0x57 PUSH4 0xefbe1c1c
0x5c EQ
0x5d PUSH2 0x8d
0x60 JUMPI
---
0x57: V21 = 0xefbe1c1c
0x5c: V22 = EQ 0xefbe1c1c V11
0x5d: V23 = 0x8d
0x60: JUMPI 0x8d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0xe1, 0x13d]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0xa2]
---
0x63 JUMPDEST
0x64 PUSH2 0x61
0x67 PUSH2 0xa2
0x6a JUMP
---
0x63: JUMPDEST 
0x64: V24 = 0x61
0x67: V25 = 0xa2
0x6a: JUMP 0xa2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x6b
[0x6b:0x72]
---
Predecessors: [0x40]
Successors: [0x73, 0x77]
---
0x6b JUMPDEST
0x6c CALLVALUE
0x6d DUP1
0x6e ISZERO
0x6f PUSH2 0x77
0x72 JUMPI
---
0x6b: JUMPDEST 
0x6c: V26 = CALLVALUE
0x6e: V27 = ISZERO V26
0x6f: V28 = 0x77
0x72: JUMPI 0x77 V27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V26]
Exit stack: [V11, V26]

================================

Block 0x73
[0x73:0x76]
---
Predecessors: [0x6b]
Successors: []
---
0x73 PUSH1 0x0
0x75 DUP1
0x76 REVERT
---
0x73: V29 = 0x0
0x76: REVERT 0x0 0x0
---
Entry stack: [V11, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26]

================================

Block 0x77
[0x77:0x84]
---
Predecessors: [0x6b]
Successors: [0xe3]
---
0x77 JUMPDEST
0x78 POP
0x79 PUSH2 0x61
0x7c PUSH1 0x4
0x7e CALLDATALOAD
0x7f ISZERO
0x80 ISZERO
0x81 PUSH2 0xe3
0x84 JUMP
---
0x77: JUMPDEST 
0x79: V30 = 0x61
0x7c: V31 = 0x4
0x7e: V32 = CALLDATALOAD 0x4
0x7f: V33 = ISZERO V32
0x80: V34 = ISZERO V33
0x81: V35 = 0xe3
0x84: JUMP 0xe3
---
Entry stack: [V11, V26]
Stack pops: 1
Stack additions: [0x61, V34]
Exit stack: [V11, 0x61, V34]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x4b]
Successors: [0x140]
---
0x85 JUMPDEST
0x86 PUSH2 0x61
0x89 PUSH2 0x140
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V36 = 0x61
0x89: V37 = 0x140
0x8c: JUMP 0x140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x8d
[0x8d:0x94]
---
Predecessors: [0x56]
Successors: [0x95, 0x99]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f DUP1
0x90 ISZERO
0x91 PUSH2 0x99
0x94 JUMPI
---
0x8d: JUMPDEST 
0x8e: V38 = CALLVALUE
0x90: V39 = ISZERO V38
0x91: V40 = 0x99
0x94: JUMPI 0x99 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V11, V38]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x8d]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V41 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V11, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38]

================================

Block 0x99
[0x99:0xa1]
---
Predecessors: [0x8d]
Successors: [0x1a5]
---
0x99 JUMPDEST
0x9a POP
0x9b PUSH2 0x61
0x9e PUSH2 0x1a5
0xa1 JUMP
---
0x99: JUMPDEST 
0x9b: V42 = 0x61
0x9e: V43 = 0x1a5
0xa1: JUMP 0x1a5
---
Entry stack: [V11, V38]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xa2
[0xa2:0xc1]
---
Predecessors: [0x63]
Successors: [0xc2, 0xe1]
---
0xa2 JUMPDEST
0xa3 PUSH1 0x0
0xa5 SLOAD
0xa6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb AND
0xbc ISZERO
0xbd ISZERO
0xbe PUSH2 0xe1
0xc1 JUMPI
---
0xa2: JUMPDEST 
0xa3: V44 = 0x0
0xa5: V45 = S[0x0]
0xa6: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xbc: V48 = ISZERO V47
0xbd: V49 = ISZERO V48
0xbe: V50 = 0xe1
0xc1: JUMPI 0xe1 V49
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xc2
[0xc2:0xe0]
---
Predecessors: [0xa2]
Successors: [0xe1]
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 SLOAD
0xc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb NOT
0xdc AND
0xdd CALLER
0xde OR
0xdf SWAP1
0xe0 SSTORE
---
0xc2: V51 = 0x0
0xc5: V52 = S[0x0]
0xc6: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V54 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V55 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V52
0xdd: V56 = CALLER
0xde: V57 = OR V56 V55
0xe0: S[0x0] = V57
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xe1
[0xe1:0xe2]
---
Predecessors: [0xa2, 0xc2, 0x173, 0x1a5]
Successors: [0x61]
---
0xe1 JUMPDEST
0xe2 JUMP
---
0xe1: JUMPDEST 
0xe2: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0x103]
---
Predecessors: [0x77]
Successors: [0x104, 0x13d]
---
0xe3 JUMPDEST
0xe4 PUSH1 0x0
0xe6 SLOAD
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd CALLER
0xfe EQ
0xff ISZERO
0x100 PUSH2 0x13d
0x103 JUMPI
---
0xe3: JUMPDEST 
0xe4: V58 = 0x0
0xe6: V59 = S[0x0]
0xe7: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xfd: V62 = CALLER
0xfe: V63 = EQ V62 V61
0xff: V64 = ISZERO V63
0x100: V65 = 0x13d
0x103: JUMPI 0x13d V64
---
Entry stack: [V11, 0x61, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V34]

================================

Block 0x104
[0x104:0x13c]
---
Predecessors: [0xe3]
Successors: [0x13d]
---
0x104 PUSH1 0x0
0x106 DUP1
0x107 SLOAD
0x108 PUSH21 0xff0000000000000000000000000000000000000000
0x11e NOT
0x11f AND
0x120 PUSH21 0x10000000000000000000000000000000000000000
0x136 DUP4
0x137 ISZERO
0x138 ISZERO
0x139 MUL
0x13a OR
0x13b SWAP1
0x13c SSTORE
---
0x104: V66 = 0x0
0x107: V67 = S[0x0]
0x108: V68 = 0xff0000000000000000000000000000000000000000
0x11e: V69 = NOT 0xff0000000000000000000000000000000000000000
0x11f: V70 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V67
0x120: V71 = 0x10000000000000000000000000000000000000000
0x137: V72 = ISZERO V34
0x138: V73 = ISZERO V72
0x139: V74 = MUL V73 0x10000000000000000000000000000000000000000
0x13a: V75 = OR V74 V70
0x13c: S[0x0] = V75
---
Entry stack: [V11, 0x61, V34]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V34]

================================

Block 0x13d
[0x13d:0x13f]
---
Predecessors: [0xe3, 0x104, 0x179]
Successors: [0x61]
---
0x13d JUMPDEST
0x13e POP
0x13f JUMP
---
0x13d: JUMPDEST 
0x13f: JUMP 0x61
---
Entry stack: [V11, 0x61, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x140
[0x140:0x152]
---
Predecessors: [0x85]
Successors: [0x153, 0x173]
---
0x140 JUMPDEST
0x141 PUSH8 0xde0b6b3a7640000
0x14a CALLVALUE
0x14b LT
0x14c ISZERO
0x14d DUP1
0x14e ISZERO
0x14f PUSH2 0x173
0x152 JUMPI
---
0x140: JUMPDEST 
0x141: V76 = 0xde0b6b3a7640000
0x14a: V77 = CALLVALUE
0x14b: V78 = LT V77 0xde0b6b3a7640000
0x14c: V79 = ISZERO V78
0x14e: V80 = ISZERO V79
0x14f: V81 = 0x173
0x152: JUMPI 0x173 V80
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, 0x61, V79]

================================

Block 0x153
[0x153:0x172]
---
Predecessors: [0x140]
Successors: [0x173]
---
0x153 POP
0x154 PUSH1 0x0
0x156 SLOAD
0x157 PUSH21 0x10000000000000000000000000000000000000000
0x16d SWAP1
0x16e DIV
0x16f PUSH1 0xff
0x171 AND
0x172 ISZERO
---
0x154: V82 = 0x0
0x156: V83 = S[0x0]
0x157: V84 = 0x10000000000000000000000000000000000000000
0x16e: V85 = DIV V83 0x10000000000000000000000000000000000000000
0x16f: V86 = 0xff
0x171: V87 = AND 0xff V85
0x172: V88 = ISZERO V87
---
Entry stack: [V11, 0x61, V79]
Stack pops: 1
Stack additions: [V88]
Exit stack: [V11, 0x61, V88]

================================

Block 0x173
[0x173:0x178]
---
Predecessors: [0x140, 0x153]
Successors: [0xe1, 0x179]
---
0x173 JUMPDEST
0x174 ISZERO
0x175 PUSH2 0xe1
0x178 JUMPI
---
0x173: JUMPDEST 
0x174: V89 = ISZERO S0
0x175: V90 = 0xe1
0x178: JUMPI 0xe1 V89
---
Entry stack: [V11, 0x61, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x179
[0x179:0x19b]
---
Predecessors: [0x173]
Successors: [0x13d, 0x19c]
---
0x179 PUSH1 0x40
0x17b MLOAD
0x17c CALLER
0x17d SWAP1
0x17e ADDRESS
0x17f BALANCE
0x180 DUP1
0x181 ISZERO
0x182 PUSH2 0x8fc
0x185 MUL
0x186 SWAP2
0x187 PUSH1 0x0
0x189 DUP2
0x18a DUP2
0x18b DUP2
0x18c DUP6
0x18d DUP9
0x18e DUP9
0x18f CALL
0x190 SWAP4
0x191 POP
0x192 POP
0x193 POP
0x194 POP
0x195 ISZERO
0x196 DUP1
0x197 ISZERO
0x198 PUSH2 0x13d
0x19b JUMPI
---
0x179: V91 = 0x40
0x17b: V92 = M[0x40]
0x17c: V93 = CALLER
0x17e: V94 = ADDRESS
0x17f: V95 = BALANCE V94
0x181: V96 = ISZERO V95
0x182: V97 = 0x8fc
0x185: V98 = MUL 0x8fc V96
0x187: V99 = 0x0
0x18f: V100 = CALL V98 V93 V95 V92 0x0 V92 0x0
0x195: V101 = ISZERO V100
0x197: V102 = ISZERO V101
0x198: V103 = 0x13d
0x19b: JUMPI 0x13d V102
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V11, 0x61, V101]

================================

Block 0x19c
[0x19c:0x1a4]
---
Predecessors: [0x179]
Successors: []
---
0x19c RETURNDATASIZE
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 RETURNDATACOPY
0x1a1 RETURNDATASIZE
0x1a2 PUSH1 0x0
0x1a4 REVERT
---
0x19c: V104 = RETURNDATASIZE
0x19d: V105 = 0x0
0x1a0: RETURNDATACOPY 0x0 0x0 V104
0x1a1: V106 = RETURNDATASIZE
0x1a2: V107 = 0x0
0x1a4: REVERT 0x0 V106
---
Entry stack: [V11, 0x61, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V101]

================================

Block 0x1a5
[0x1a5:0x1c5]
---
Predecessors: [0x99]
Successors: [0xe1, 0x1c6]
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x0
0x1a8 SLOAD
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be AND
0x1bf CALLER
0x1c0 EQ
0x1c1 ISZERO
0x1c2 PUSH2 0xe1
0x1c5 JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V108 = 0x0
0x1a8: V109 = S[0x0]
0x1a9: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1bf: V112 = CALLER
0x1c0: V113 = EQ V112 V111
0x1c1: V114 = ISZERO V113
0x1c2: V115 = 0xe1
0x1c5: JUMPI 0xe1 V114
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1c6
[0x1c6:0x1c7]
---
Predecessors: [0x1a5]
Successors: []
---
0x1c6 CALLER
0x1c7 SELFDESTRUCT
---
0x1c6: V116 = CALLER
0x1c7: SELFDESTRUCT V116
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1c8
[0x1c8:0x1f3]
---
Predecessors: []
Successors: []
---
0x1c8 STOP
0x1c9 LOG1
0x1ca PUSH6 0x627a7a723058
0x1d1 SHA3
0x1d2 STATICCALL
0x1d3 MISSING 0xef
0x1d4 MISSING 0x4f
0x1d5 CALLDATACOPY
0x1d6 MISSING 0xe7
0x1d7 MISSING 0xf
0x1d8 SELFDESTRUCT
0x1d9 SELFDESTRUCT
0x1da PUSH17 0x4311b814ae4c5f8348535c1717b2a286df
0x1ec MISSING 0xdf
0x1ed DUP4
0x1ee BYTE
0x1ef MISSING 0x4e
0x1f0 MLOAD
0x1f1 MISSING 0xcf
0x1f2 STOP
0x1f3 MISSING 0x29
---
0x1c8: STOP 
0x1c9: LOG S0 S1 S2
0x1ca: V117 = 0x627a7a723058
0x1d1: V118 = SHA3 0x627a7a723058 S3
0x1d2: V119 = STATICCALL V118 S4 S5 S6 S7 S8
0x1d3: MISSING 0xef
0x1d4: MISSING 0x4f
0x1d5: CALLDATACOPY S0 S1 S2
0x1d6: MISSING 0xe7
0x1d7: MISSING 0xf
0x1d8: SELFDESTRUCT S0
0x1d9: SELFDESTRUCT S0
0x1da: V120 = 0x4311b814ae4c5f8348535c1717b2a286df
0x1ec: MISSING 0xdf
0x1ee: V121 = BYTE S3 S0
0x1ef: MISSING 0x4e
0x1f0: V122 = M[S0]
0x1f1: MISSING 0xcf
0x1f2: STOP 
0x1f3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V119, 0x4311b814ae4c5f8348535c1717b2a286df, V121, S1, S2, S3, V122]
Exit stack: []

================================

Function 0:
Public function signature: 0x12ae6397
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0xa2, 0xc2, 0xe1

Function 1:
Public function signature: 0x212c5fea
Entry block: 0x6b
Exit block: 0x61
Body: 0x61, 0x6b, 0x73, 0x77, 0xe3, 0x104, 0x13d

Function 2:
Public function signature: 0x6d4ce63c
Entry block: 0x85
Exit block: 0x61
Body: 0x61, 0x85, 0xe1, 0x13d, 0x140, 0x153, 0x173, 0x179, 0x19c

Function 3:
Public function signature: 0xefbe1c1c
Entry block: 0x8d
Exit block: 0x61
Body: 0x61, 0x8d, 0x95, 0x99, 0xe1, 0x1a5, 0x1c6

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

