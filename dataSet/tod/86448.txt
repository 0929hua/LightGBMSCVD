Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3059b1dc
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3059b1dc
0x20: V14 = EQ V12 0x3059b1dc
0x21: V15 = 0x6c
0x24: JUMPI 0x6c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xa0]
---
0x25 DUP1
0x26 PUSH4 0x3e764713
0x2b EQ
0x2c PUSH2 0xa0
0x2f JUMPI
---
0x26: V16 = 0x3e764713
0x2b: V17 = EQ 0x3e764713 V12
0x2c: V18 = 0xa0
0x2f: JUMPI 0xa0 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xd2]
---
0x30 DUP1
0x31 PUSH4 0x83197ef0
0x36 EQ
0x37 PUSH2 0xd2
0x3a JUMPI
---
0x31: V19 = 0x83197ef0
0x36: V20 = EQ 0x83197ef0 V12
0x37: V21 = 0xd2
0x3a: JUMPI 0xd2 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe7]
---
0x3b DUP1
0x3c PUSH4 0x8da5cb5b
0x41 EQ
0x42 PUSH2 0xe7
0x45 JUMPI
---
0x3c: V22 = 0x8da5cb5b
0x41: V23 = EQ 0x8da5cb5b V12
0x42: V24 = 0xe7
0x45: JUMPI 0xe7 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x116]
---
0x46 DUP1
0x47 PUSH4 0xe95fb7a6
0x4c EQ
0x4d PUSH2 0x116
0x50 JUMPI
---
0x47: V25 = 0xe95fb7a6
0x4c: V26 = EQ 0xe95fb7a6 V12
0x4d: V27 = 0x116
0x50: JUMPI 0x116 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x149]
---
0x51 DUP1
0x52 PUSH4 0xf2fde38b
0x57 EQ
0x58 PUSH2 0x149
0x5b JUMPI
---
0x52: V28 = 0xf2fde38b
0x57: V29 = EQ 0xf2fde38b V12
0x58: V30 = 0x149
0x5b: JUMPI 0x149 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x16a]
---
0x5c DUP1
0x5d PUSH4 0xf5074f41
0x62 EQ
0x63 PUSH2 0x16a
0x66 JUMPI
---
0x5d: V31 = 0xf5074f41
0x62: V32 = EQ 0xf5074f41 V12
0x63: V33 = 0x16a
0x66: JUMPI 0x16a V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x6b]
---
Predecessors: [0x0, 0x5c]
Successors: []
---
0x67 JUMPDEST
0x68 PUSH1 0x0
0x6a DUP1
0x6b REVERT
---
0x67: JUMPDEST 
0x68: V34 = 0x0
0x6b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6c
[0x6c:0x72]
---
Predecessors: [0xb]
Successors: [0x73, 0x77]
---
0x6c JUMPDEST
0x6d CALLVALUE
0x6e ISZERO
0x6f PUSH2 0x77
0x72 JUMPI
---
0x6c: JUMPDEST 
0x6d: V35 = CALLVALUE
0x6e: V36 = ISZERO V35
0x6f: V37 = 0x77
0x72: JUMPI 0x77 V36
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73
[0x73:0x76]
---
Predecessors: [0x6c]
Successors: []
---
0x73 PUSH1 0x0
0x75 DUP1
0x76 REVERT
---
0x73: V38 = 0x0
0x76: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77
[0x77:0x8b]
---
Predecessors: [0x6c]
Successors: [0x18b]
---
0x77 JUMPDEST
0x78 PUSH2 0x8c
0x7b PUSH3 0xffffff
0x7f PUSH1 0x4
0x81 CALLDATALOAD
0x82 AND
0x83 PUSH1 0x24
0x85 CALLDATALOAD
0x86 ISZERO
0x87 ISZERO
0x88 PUSH2 0x18b
0x8b JUMP
---
0x77: JUMPDEST 
0x78: V39 = 0x8c
0x7b: V40 = 0xffffff
0x7f: V41 = 0x4
0x81: V42 = CALLDATALOAD 0x4
0x82: V43 = AND V42 0xffffff
0x83: V44 = 0x24
0x85: V45 = CALLDATALOAD 0x24
0x86: V46 = ISZERO V45
0x87: V47 = ISZERO V46
0x88: V48 = 0x18b
0x8b: JUMP 0x18b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c, V43, V47]
Exit stack: [V12, 0x8c, V43, V47]

================================

Block 0x8c
[0x8c:0x9f]
---
Predecessors: [0x225, 0x326, 0x3c5]
Successors: []
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f MLOAD
0x90 SWAP1
0x91 ISZERO
0x92 ISZERO
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c SWAP2
0x9d SUB
0x9e SWAP1
0x9f RETURN
---
0x8c: JUMPDEST 
0x8d: V49 = 0x40
0x8f: V50 = M[0x40]
0x91: V51 = ISZERO 0x1
0x92: V52 = ISZERO 0x0
0x94: M[V50] = 0x1
0x95: V53 = 0x20
0x97: V54 = ADD 0x20 V50
0x98: V55 = 0x40
0x9a: V56 = M[0x40]
0x9d: V57 = SUB V54 V56
0x9f: RETURN V56 V57
---
Entry stack: [V12, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0
[0xa0:0xa6]
---
Predecessors: [0x25]
Successors: [0xa7, 0xab]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 ISZERO
0xa3 PUSH2 0xab
0xa6 JUMPI
---
0xa0: JUMPDEST 
0xa1: V58 = CALLVALUE
0xa2: V59 = ISZERO V58
0xa3: V60 = 0xab
0xa6: JUMPI 0xab V59
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7
[0xa7:0xaa]
---
Predecessors: [0xa0]
Successors: []
---
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa REVERT
---
0xa7: V61 = 0x0
0xaa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xab
[0xab:0xbd]
---
Predecessors: [0xa0]
Successors: [0x22c]
---
0xab JUMPDEST
0xac PUSH2 0x8c
0xaf PUSH3 0xffffff
0xb3 PUSH1 0x4
0xb5 CALLDATALOAD
0xb6 AND
0xb7 PUSH1 0x24
0xb9 CALLDATALOAD
0xba PUSH2 0x22c
0xbd JUMP
---
0xab: JUMPDEST 
0xac: V62 = 0x8c
0xaf: V63 = 0xffffff
0xb3: V64 = 0x4
0xb5: V65 = CALLDATALOAD 0x4
0xb6: V66 = AND V65 0xffffff
0xb7: V67 = 0x24
0xb9: V68 = CALLDATALOAD 0x24
0xba: V69 = 0x22c
0xbd: JUMP 0x22c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c, V66, V68]
Exit stack: [V12, 0x8c, V66, V68]

================================

Block 0xbe
[0xbe:0xd1]
---
Predecessors: []
Successors: []
---
0xbe JUMPDEST
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 SWAP1
0xc3 ISZERO
0xc4 ISZERO
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP1
0xce SWAP2
0xcf SUB
0xd0 SWAP1
0xd1 RETURN
---
0xbe: JUMPDEST 
0xbf: V70 = 0x40
0xc1: V71 = M[0x40]
0xc3: V72 = ISZERO S0
0xc4: V73 = ISZERO V72
0xc6: M[V71] = V73
0xc7: V74 = 0x20
0xc9: V75 = ADD 0x20 V71
0xca: V76 = 0x40
0xcc: V77 = M[0x40]
0xcf: V78 = SUB V75 V77
0xd1: RETURN V77 V78
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0x30]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V79 = CALLVALUE
0xd4: V80 = ISZERO V79
0xd5: V81 = 0xdd
0xd8: JUMPI 0xdd V80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V82 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x32e]
---
0xdd JUMPDEST
0xde PUSH2 0xe5
0xe1 PUSH2 0x32e
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V83 = 0xe5
0xe1: V84 = 0x32e
0xe4: JUMP 0x32e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V12, 0xe5]

================================

Block 0xe5
[0xe5:0xe6]
---
Predecessors: [0x41f]
Successors: []
---
0xe5 JUMPDEST
0xe6 STOP
---
0xe5: JUMPDEST 
0xe6: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0x3b]
Successors: [0xee, 0xf2]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V85 = CALLVALUE
0xe9: V86 = ISZERO V85
0xea: V87 = 0xf2
0xed: JUMPI 0xf2 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe7]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V88 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xe7]
Successors: [0x35a]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x35a
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V89 = 0xfa
0xf6: V90 = 0x35a
0xf9: JUMP 0x35a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V12, 0xfa]

================================

Block 0xfa
[0xfa:0x115]
---
Predecessors: [0x35a]
Successors: []
---
0xfa JUMPDEST
0xfb PUSH1 0x40
0xfd MLOAD
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 SWAP2
0x108 AND
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d ADD
0x10e PUSH1 0x40
0x110 MLOAD
0x111 DUP1
0x112 SWAP2
0x113 SUB
0x114 SWAP1
0x115 RETURN
---
0xfa: JUMPDEST 
0xfb: V91 = 0x40
0xfd: V92 = M[0x40]
0xfe: V93 = 0x1
0x100: V94 = 0xa0
0x102: V95 = 0x2
0x104: V96 = EXP 0x2 0xa0
0x105: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V98 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x10a: M[V92] = V98
0x10b: V99 = 0x20
0x10d: V100 = ADD 0x20 V92
0x10e: V101 = 0x40
0x110: V102 = M[0x40]
0x113: V103 = SUB V100 V102
0x115: RETURN V102 V103
---
Entry stack: [V12, 0xfa, V327]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xfa]

================================

Block 0x116
[0x116:0x11c]
---
Predecessors: [0x46]
Successors: [0x11d, 0x121]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 ISZERO
0x119 PUSH2 0x121
0x11c JUMPI
---
0x116: JUMPDEST 
0x117: V104 = CALLVALUE
0x118: V105 = ISZERO V104
0x119: V106 = 0x121
0x11c: JUMPI 0x121 V105
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11d
[0x11d:0x120]
---
Predecessors: [0x116]
Successors: []
---
0x11d PUSH1 0x0
0x11f DUP1
0x120 REVERT
---
0x11d: V107 = 0x0
0x120: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x121
[0x121:0x134]
---
Predecessors: [0x116]
Successors: [0x369]
---
0x121 JUMPDEST
0x122 PUSH2 0x8c
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d PUSH1 0x4
0x12f CALLDATALOAD
0x130 AND
0x131 PUSH2 0x369
0x134 JUMP
---
0x121: JUMPDEST 
0x122: V108 = 0x8c
0x125: V109 = 0x1
0x127: V110 = 0xa0
0x129: V111 = 0x2
0x12b: V112 = EXP 0x2 0xa0
0x12c: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V114 = 0x4
0x12f: V115 = CALLDATALOAD 0x4
0x130: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x131: V117 = 0x369
0x134: JUMP 0x369
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c, V116]
Exit stack: [V12, 0x8c, V116]

================================

Block 0x135
[0x135:0x148]
---
Predecessors: []
Successors: []
---
0x135 JUMPDEST
0x136 PUSH1 0x40
0x138 MLOAD
0x139 SWAP1
0x13a ISZERO
0x13b ISZERO
0x13c DUP2
0x13d MSTORE
0x13e PUSH1 0x20
0x140 ADD
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP2
0x146 SUB
0x147 SWAP1
0x148 RETURN
---
0x135: JUMPDEST 
0x136: V118 = 0x40
0x138: V119 = M[0x40]
0x13a: V120 = ISZERO S0
0x13b: V121 = ISZERO V120
0x13d: M[V119] = V121
0x13e: V122 = 0x20
0x140: V123 = ADD 0x20 V119
0x141: V124 = 0x40
0x143: V125 = M[0x40]
0x146: V126 = SUB V123 V125
0x148: RETURN V125 V126
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x149
[0x149:0x14f]
---
Predecessors: [0x51]
Successors: [0x150, 0x154]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x149: JUMPDEST 
0x14a: V127 = CALLVALUE
0x14b: V128 = ISZERO V127
0x14c: V129 = 0x154
0x14f: JUMPI 0x154 V128
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x149]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V130 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x154
[0x154:0x167]
---
Predecessors: [0x149]
Successors: [0x3ca]
---
0x154 JUMPDEST
0x155 PUSH2 0xe5
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 PUSH1 0x4
0x162 CALLDATALOAD
0x163 AND
0x164 PUSH2 0x3ca
0x167 JUMP
---
0x154: JUMPDEST 
0x155: V131 = 0xe5
0x158: V132 = 0x1
0x15a: V133 = 0xa0
0x15c: V134 = 0x2
0x15e: V135 = EXP 0x2 0xa0
0x15f: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V137 = 0x4
0x162: V138 = CALLDATALOAD 0x4
0x163: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x164: V140 = 0x3ca
0x167: JUMP 0x3ca
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe5, V139]
Exit stack: [V12, 0xe5, V139]

================================

Block 0x168
[0x168:0x169]
---
Predecessors: []
Successors: []
---
0x168 JUMPDEST
0x169 STOP
---
0x168: JUMPDEST 
0x169: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x16a
[0x16a:0x170]
---
Predecessors: [0x5c]
Successors: [0x171, 0x175]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x16a: JUMPDEST 
0x16b: V141 = CALLVALUE
0x16c: V142 = ISZERO V141
0x16d: V143 = 0x175
0x170: JUMPI 0x175 V142
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x16a]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V144 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x175
[0x175:0x188]
---
Predecessors: [0x16a]
Successors: [0x422]
---
0x175 JUMPDEST
0x176 PUSH2 0xe5
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 PUSH1 0x4
0x183 CALLDATALOAD
0x184 AND
0x185 PUSH2 0x422
0x188 JUMP
---
0x175: JUMPDEST 
0x176: V145 = 0xe5
0x179: V146 = 0x1
0x17b: V147 = 0xa0
0x17d: V148 = 0x2
0x17f: V149 = EXP 0x2 0xa0
0x180: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V151 = 0x4
0x183: V152 = CALLDATALOAD 0x4
0x184: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x185: V154 = 0x422
0x188: JUMP 0x422
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe5, V153]
Exit stack: [V12, 0xe5, V153]

================================

Block 0x189
[0x189:0x18a]
---
Predecessors: []
Successors: []
---
0x189 JUMPDEST
0x18a STOP
---
0x189: JUMPDEST 
0x18a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x18b
[0x18b:0x19a]
---
Predecessors: [0x77]
Successors: [0x19b, 0x19f]
---
0x18b JUMPDEST
0x18c PUSH1 0x0
0x18e DUP1
0x18f PUSH3 0xffffff
0x193 DUP5
0x194 AND
0x195 ISZERO
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x18b: JUMPDEST 
0x18c: V155 = 0x0
0x18f: V156 = 0xffffff
0x194: V157 = AND V43 0xffffff
0x195: V158 = ISZERO V157
0x196: V159 = ISZERO V158
0x197: V160 = 0x19f
0x19a: JUMPI 0x19f V159
---
Entry stack: [V12, 0x8c, V43, V47]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V12, 0x8c, V43, V47, 0x0, 0x0]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x18b]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V161 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V43, V47, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V43, V47, 0x0, 0x0]

================================

Block 0x19f
[0x19f:0x1b1]
---
Predecessors: [0x18b]
Successors: [0x1b2, 0x1b6]
---
0x19f JUMPDEST
0x1a0 PUSH1 0x1
0x1a2 SLOAD
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab AND
0x1ac ISZERO
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V162 = 0x1
0x1a2: V163 = S[0x1]
0x1a3: V164 = 0x1
0x1a5: V165 = 0xa0
0x1a7: V166 = 0x2
0x1a9: V167 = EXP 0x2 0xa0
0x1aa: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ab: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x1ac: V170 = ISZERO V169
0x1ad: V171 = ISZERO V170
0x1ae: V172 = 0x1b6
0x1b1: JUMPI 0x1b6 V171
---
Entry stack: [V12, 0x8c, V43, V47, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V43, V47, 0x0, 0x0]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x19f]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V173 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V43, V47, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V43, V47, 0x0, 0x0]

================================

Block 0x1b6
[0x1b6:0x207]
---
Predecessors: [0x19f]
Successors: [0x208, 0x20c]
---
0x1b6 JUMPDEST
0x1b7 POP
0x1b8 PUSH1 0x1
0x1ba SLOAD
0x1bb PUSH1 0x1
0x1bd PUSH1 0xa0
0x1bf PUSH1 0x2
0x1c1 EXP
0x1c2 SUB
0x1c3 AND
0x1c4 DUP1
0x1c5 PUSH4 0xda66a9ad
0x1ca DUP6
0x1cb DUP6
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf PUSH1 0xe0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 PUSH4 0xffffffff
0x1d9 DUP6
0x1da AND
0x1db MUL
0x1dc DUP2
0x1dd MSTORE
0x1de PUSH3 0xffffff
0x1e2 SWAP1
0x1e3 SWAP3
0x1e4 AND
0x1e5 PUSH1 0x4
0x1e7 DUP4
0x1e8 ADD
0x1e9 MSTORE
0x1ea ISZERO
0x1eb ISZERO
0x1ec PUSH1 0x24
0x1ee DUP3
0x1ef ADD
0x1f0 MSTORE
0x1f1 PUSH1 0x44
0x1f3 ADD
0x1f4 PUSH1 0x0
0x1f6 PUSH1 0x40
0x1f8 MLOAD
0x1f9 DUP1
0x1fa DUP4
0x1fb SUB
0x1fc DUP2
0x1fd PUSH1 0x0
0x1ff DUP8
0x200 DUP1
0x201 EXTCODESIZE
0x202 ISZERO
0x203 ISZERO
0x204 PUSH2 0x20c
0x207 JUMPI
---
0x1b6: JUMPDEST 
0x1b8: V174 = 0x1
0x1ba: V175 = S[0x1]
0x1bb: V176 = 0x1
0x1bd: V177 = 0xa0
0x1bf: V178 = 0x2
0x1c1: V179 = EXP 0x2 0xa0
0x1c2: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x1c5: V182 = 0xda66a9ad
0x1cc: V183 = 0x40
0x1ce: V184 = M[0x40]
0x1cf: V185 = 0xe0
0x1d1: V186 = 0x2
0x1d3: V187 = EXP 0x2 0xe0
0x1d4: V188 = 0xffffffff
0x1da: V189 = AND 0xda66a9ad 0xffffffff
0x1db: V190 = MUL 0xda66a9ad 0x100000000000000000000000000000000000000000000000000000000
0x1dd: M[V184] = 0xda66a9ad00000000000000000000000000000000000000000000000000000000
0x1de: V191 = 0xffffff
0x1e4: V192 = AND V43 0xffffff
0x1e5: V193 = 0x4
0x1e8: V194 = ADD V184 0x4
0x1e9: M[V194] = V192
0x1ea: V195 = ISZERO V47
0x1eb: V196 = ISZERO V195
0x1ec: V197 = 0x24
0x1ef: V198 = ADD V184 0x24
0x1f0: M[V198] = V196
0x1f1: V199 = 0x44
0x1f3: V200 = ADD 0x44 V184
0x1f4: V201 = 0x0
0x1f6: V202 = 0x40
0x1f8: V203 = M[0x40]
0x1fb: V204 = SUB V200 V203
0x1fd: V205 = 0x0
0x201: V206 = EXTCODESIZE V181
0x202: V207 = ISZERO V206
0x203: V208 = ISZERO V207
0x204: V209 = 0x20c
0x207: JUMPI 0x20c V208
---
Entry stack: [V12, 0x8c, V43, V47, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V181, V181, 0xda66a9ad, V200, 0x0, V203, V204, V203, 0x0, V181]
Exit stack: [V12, 0x8c, V43, V47, 0x0, V181, V181, 0xda66a9ad, V200, 0x0, V203, V204, V203, 0x0, V181]

================================

Block 0x208
[0x208:0x20b]
---
Predecessors: [0x1b6]
Successors: []
---
0x208 PUSH1 0x0
0x20a DUP1
0x20b REVERT
---
0x208: V210 = 0x0
0x20b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V43, V47, 0x0, V181, V181, 0xda66a9ad, V200, 0x0, V203, V204, V203, 0x0, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V43, V47, 0x0, V181, V181, 0xda66a9ad, V200, 0x0, V203, V204, V203, 0x0, V181]

================================

Block 0x20c
[0x20c:0x218]
---
Predecessors: [0x1b6]
Successors: [0x219, 0x21d]
---
0x20c JUMPDEST
0x20d PUSH2 0x2c6
0x210 GAS
0x211 SUB
0x212 CALL
0x213 ISZERO
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x20c: JUMPDEST 
0x20d: V211 = 0x2c6
0x210: V212 = GAS
0x211: V213 = SUB V212 0x2c6
0x212: V214 = CALL V213 V181 0x0 V203 V204 V203 0x0
0x213: V215 = ISZERO V214
0x214: V216 = ISZERO V215
0x215: V217 = 0x21d
0x218: JUMPI 0x21d V216
---
Entry stack: [V12, 0x8c, V43, V47, 0x0, V181, V181, 0xda66a9ad, V200, 0x0, V203, V204, V203, 0x0, V181]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8c, V43, V47, 0x0, V181, V181, 0xda66a9ad, V200]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x20c]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V218 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V43, V47, 0x0, V181, V181, 0xda66a9ad, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V43, V47, 0x0, V181, V181, 0xda66a9ad, V200]

================================

Block 0x21d
[0x21d:0x224]
---
Predecessors: [0x20c]
Successors: [0x225]
---
0x21d JUMPDEST
0x21e POP
0x21f POP
0x220 POP
0x221 PUSH1 0x1
0x223 SWAP2
0x224 POP
---
0x21d: JUMPDEST 
0x221: V219 = 0x1
---
Entry stack: [V12, 0x8c, V43, V47, 0x0, V181, V181, 0xda66a9ad, V200]
Stack pops: 5
Stack additions: [0x1, S3]
Exit stack: [V12, 0x8c, V43, V47, 0x1, V181]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x21d]
Successors: [0x8c]
---
0x225 JUMPDEST
0x226 POP
0x227 SWAP3
0x228 SWAP2
0x229 POP
0x22a POP
0x22b JUMP
---
0x225: JUMPDEST 
0x22b: JUMP 0x8c
---
Entry stack: [V12, 0x8c, V43, V47, 0x1, V181]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x1]

================================

Block 0x22c
[0x22c:0x23c]
---
Predecessors: [0xab]
Successors: [0x23d, 0x241]
---
0x22c JUMPDEST
0x22d PUSH1 0x0
0x22f DUP1
0x230 DUP1
0x231 PUSH3 0xffffff
0x235 DUP6
0x236 AND
0x237 ISZERO
0x238 ISZERO
0x239 PUSH2 0x241
0x23c JUMPI
---
0x22c: JUMPDEST 
0x22d: V220 = 0x0
0x231: V221 = 0xffffff
0x236: V222 = AND V66 0xffffff
0x237: V223 = ISZERO V222
0x238: V224 = ISZERO V223
0x239: V225 = 0x241
0x23c: JUMPI 0x241 V224
---
Entry stack: [V12, 0x8c, V66, V68]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x8c, V66, V68, 0x0, 0x0, 0x0]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x22c]
Successors: []
---
0x23d PUSH1 0x0
0x23f DUP1
0x240 REVERT
---
0x23d: V226 = 0x0
0x240: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V66, V68, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V66, V68, 0x0, 0x0, 0x0]

================================

Block 0x241
[0x241:0x253]
---
Predecessors: [0x22c]
Successors: [0x254, 0x258]
---
0x241 JUMPDEST
0x242 PUSH1 0x1
0x244 SLOAD
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d AND
0x24e ISZERO
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x241: JUMPDEST 
0x242: V227 = 0x1
0x244: V228 = S[0x1]
0x245: V229 = 0x1
0x247: V230 = 0xa0
0x249: V231 = 0x2
0x24b: V232 = EXP 0x2 0xa0
0x24c: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24d: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x24e: V235 = ISZERO V234
0x24f: V236 = ISZERO V235
0x250: V237 = 0x258
0x253: JUMPI 0x258 V236
---
Entry stack: [V12, 0x8c, V66, V68, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V66, V68, 0x0, 0x0, 0x0]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x241]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V238 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V66, V68, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V66, V68, 0x0, 0x0, 0x0]

================================

Block 0x258
[0x258:0x27e]
---
Predecessors: [0x241]
Successors: [0x44d]
---
0x258 JUMPDEST
0x259 POP
0x25a POP
0x25b PUSH1 0x1
0x25d SLOAD
0x25e PUSH3 0xffffff
0x262 DUP5
0x263 AND
0x264 DUP4
0x265 ADD
0x266 SWAP1
0x267 PUSH1 0x1
0x269 PUSH1 0xa0
0x26b PUSH1 0x2
0x26d EXP
0x26e SUB
0x26f AND
0x270 DUP1
0x271 PUSH4 0xcb92dfef
0x276 DUP7
0x277 PUSH2 0x27f
0x27a DUP6
0x27b PUSH2 0x44d
0x27e JUMP
---
0x258: JUMPDEST 
0x25b: V239 = 0x1
0x25d: V240 = S[0x1]
0x25e: V241 = 0xffffff
0x263: V242 = AND V66 0xffffff
0x265: V243 = ADD V68 V242
0x267: V244 = 0x1
0x269: V245 = 0xa0
0x26b: V246 = 0x2
0x26d: V247 = EXP 0x2 0xa0
0x26e: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x271: V250 = 0xcb92dfef
0x277: V251 = 0x27f
0x27b: V252 = 0x44d
0x27e: JUMP 0x44d
---
Entry stack: [V12, 0x8c, V66, V68, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, V243, V249, V249, 0xcb92dfef, S4, 0x27f, V243]
Exit stack: [V12, 0x8c, V66, V68, 0x0, V243, V249, V249, 0xcb92dfef, V66, 0x27f, V243]

================================

Block 0x27f
[0x27f:0x287]
---
Predecessors: [0x47a]
Successors: [0x47f]
---
0x27f JUMPDEST
0x280 PUSH2 0x288
0x283 DUP7
0x284 PUSH2 0x47f
0x287 JUMP
---
0x27f: JUMPDEST 
0x280: V253 = 0x288
0x284: V254 = 0x47f
0x287: JUMP 0x47f
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, V249, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x288, S5]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, V249, S3, S2, S1, S0, 0x288, S5]

================================

Block 0x288
[0x288:0x308]
---
Predecessors: [0x47a]
Successors: [0x309, 0x30d]
---
0x288 JUMPDEST
0x289 PUSH1 0x40
0x28b MLOAD
0x28c PUSH1 0xe0
0x28e PUSH1 0x2
0x290 EXP
0x291 PUSH4 0xffffffff
0x296 DUP7
0x297 AND
0x298 MUL
0x299 DUP2
0x29a MSTORE
0x29b PUSH3 0xffffff
0x29f SWAP1
0x2a0 SWAP4
0x2a1 AND
0x2a2 PUSH1 0x4
0x2a4 DUP5
0x2a5 ADD
0x2a6 MSTORE
0x2a7 PUSH21 0xffffffffffffffffffffffffffffffffffffffffff
0x2bd NOT
0x2be SWAP2
0x2bf DUP3
0x2c0 AND
0x2c1 PUSH1 0x24
0x2c3 DUP5
0x2c4 ADD
0x2c5 MSTORE
0x2c6 AND
0x2c7 PUSH1 0x44
0x2c9 DUP3
0x2ca ADD
0x2cb MSTORE
0x2cc PUSH32 0x2f6c696e6b000000000000000000000000000000000000000000000000000000
0x2ed PUSH1 0x64
0x2ef DUP3
0x2f0 ADD
0x2f1 MSTORE
0x2f2 PUSH1 0x84
0x2f4 ADD
0x2f5 PUSH1 0x0
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa DUP1
0x2fb DUP4
0x2fc SUB
0x2fd DUP2
0x2fe PUSH1 0x0
0x300 DUP8
0x301 DUP1
0x302 EXTCODESIZE
0x303 ISZERO
0x304 ISZERO
0x305 PUSH2 0x30d
0x308 JUMPI
---
0x288: JUMPDEST 
0x289: V255 = 0x40
0x28b: V256 = M[0x40]
0x28c: V257 = 0xe0
0x28e: V258 = 0x2
0x290: V259 = EXP 0x2 0xe0
0x291: V260 = 0xffffffff
0x297: V261 = AND S3 0xffffffff
0x298: V262 = MUL V261 0x100000000000000000000000000000000000000000000000000000000
0x29a: M[V256] = V262
0x29b: V263 = 0xffffff
0x2a1: V264 = AND S2 0xffffff
0x2a2: V265 = 0x4
0x2a5: V266 = ADD V256 0x4
0x2a6: M[V266] = V264
0x2a7: V267 = 0xffffffffffffffffffffffffffffffffffffffffff
0x2bd: V268 = NOT 0xffffffffffffffffffffffffffffffffffffffffff
0x2c0: V269 = AND 0xffffffffffffffffffffff000000000000000000000000000000000000000000 S1
0x2c1: V270 = 0x24
0x2c4: V271 = ADD V256 0x24
0x2c5: M[V271] = V269
0x2c6: V272 = AND S0 0xffffffffffffffffffffff000000000000000000000000000000000000000000
0x2c7: V273 = 0x44
0x2ca: V274 = ADD V256 0x44
0x2cb: M[V274] = V272
0x2cc: V275 = 0x2f6c696e6b000000000000000000000000000000000000000000000000000000
0x2ed: V276 = 0x64
0x2f0: V277 = ADD V256 0x64
0x2f1: M[V277] = 0x2f6c696e6b000000000000000000000000000000000000000000000000000000
0x2f2: V278 = 0x84
0x2f4: V279 = ADD 0x84 V256
0x2f5: V280 = 0x0
0x2f7: V281 = 0x40
0x2f9: V282 = M[0x40]
0x2fc: V283 = SUB V279 V282
0x2fe: V284 = 0x0
0x302: V285 = EXTCODESIZE V249
0x303: V286 = ISZERO V285
0x304: V287 = ISZERO V286
0x305: V288 = 0x30d
0x308: JUMPI 0x30d V287
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, V249, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V279, 0x0, V282, V283, V282, 0x0, S4]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, V249, S3, V279, 0x0, V282, V283, V282, 0x0, V249]

================================

Block 0x309
[0x309:0x30c]
---
Predecessors: [0x288]
Successors: []
---
0x309 PUSH1 0x0
0x30b DUP1
0x30c REVERT
---
0x309: V289 = 0x0
0x30c: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, V249, S7, V279, 0x0, V282, V283, V282, 0x0, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, V249, S7, V279, 0x0, V282, V283, V282, 0x0, V249]

================================

Block 0x30d
[0x30d:0x319]
---
Predecessors: [0x288]
Successors: [0x31a, 0x31e]
---
0x30d JUMPDEST
0x30e PUSH2 0x2c6
0x311 GAS
0x312 SUB
0x313 CALL
0x314 ISZERO
0x315 ISZERO
0x316 PUSH2 0x31e
0x319 JUMPI
---
0x30d: JUMPDEST 
0x30e: V290 = 0x2c6
0x311: V291 = GAS
0x312: V292 = SUB V291 0x2c6
0x313: V293 = CALL V292 V249 0x0 V282 V283 V282 0x0
0x314: V294 = ISZERO V293
0x315: V295 = ISZERO V294
0x316: V296 = 0x31e
0x319: JUMPI 0x31e V295
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, V249, S7, V279, 0x0, V282, V283, V282, 0x0, V249]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, V249, S7, V279]

================================

Block 0x31a
[0x31a:0x31d]
---
Predecessors: [0x30d]
Successors: []
---
0x31a PUSH1 0x0
0x31c DUP1
0x31d REVERT
---
0x31a: V297 = 0x0
0x31d: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, V249, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, V249, S1, S0]

================================

Block 0x31e
[0x31e:0x325]
---
Predecessors: [0x30d]
Successors: [0x326]
---
0x31e JUMPDEST
0x31f POP
0x320 POP
0x321 POP
0x322 PUSH1 0x1
0x324 SWAP3
0x325 POP
---
0x31e: JUMPDEST 
0x322: V298 = 0x1
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, V249, S1, S0]
Stack pops: 6
Stack additions: [0x1, S4, S3]
Exit stack: [V12, S8, S7, S6, 0x1, S4, S3]

================================

Block 0x326
[0x326:0x32d]
---
Predecessors: [0x31e]
Successors: [0x8c]
---
0x326 JUMPDEST
0x327 POP
0x328 POP
0x329 SWAP3
0x32a SWAP2
0x32b POP
0x32c POP
0x32d JUMP
---
0x326: JUMPDEST 
0x32d: JUMP S5
---
Entry stack: [V12, S5, S4, S3, 0x1, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V12, 0x1]

================================

Block 0x32e
[0x32e:0x344]
---
Predecessors: [0xdd]
Successors: [0x345, 0x349]
---
0x32e JUMPDEST
0x32f PUSH1 0x0
0x331 SLOAD
0x332 CALLER
0x333 PUSH1 0x1
0x335 PUSH1 0xa0
0x337 PUSH1 0x2
0x339 EXP
0x33a SUB
0x33b SWAP1
0x33c DUP2
0x33d AND
0x33e SWAP2
0x33f AND
0x340 EQ
0x341 PUSH2 0x349
0x344 JUMPI
---
0x32e: JUMPDEST 
0x32f: V299 = 0x0
0x331: V300 = S[0x0]
0x332: V301 = CALLER
0x333: V302 = 0x1
0x335: V303 = 0xa0
0x337: V304 = 0x2
0x339: V305 = EXP 0x2 0xa0
0x33a: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33d: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x33f: V308 = AND V300 0xffffffffffffffffffffffffffffffffffffffff
0x340: V309 = EQ V308 V307
0x341: V310 = 0x349
0x344: JUMPI 0x349 V309
---
Entry stack: [V12, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5]

================================

Block 0x345
[0x345:0x348]
---
Predecessors: [0x32e]
Successors: []
---
0x345 PUSH1 0x0
0x347 DUP1
0x348 REVERT
---
0x345: V311 = 0x0
0x348: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5]

================================

Block 0x349
[0x349:0x356]
---
Predecessors: [0x32e]
Successors: []
---
0x349 JUMPDEST
0x34a PUSH1 0x0
0x34c SLOAD
0x34d PUSH1 0x1
0x34f PUSH1 0xa0
0x351 PUSH1 0x2
0x353 EXP
0x354 SUB
0x355 AND
0x356 SELFDESTRUCT
---
0x349: JUMPDEST 
0x34a: V312 = 0x0
0x34c: V313 = S[0x0]
0x34d: V314 = 0x1
0x34f: V315 = 0xa0
0x351: V316 = 0x2
0x353: V317 = EXP 0x2 0xa0
0x354: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x356: SELFDESTRUCT V319
---
Entry stack: [V12, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5]

================================

Block 0x357
[0x357:0x357]
---
Predecessors: []
Successors: [0x358]
---
0x357 JUMPDEST
---
0x357: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x358
[0x358:0x359]
---
Predecessors: [0x357]
Successors: []
Has unresolved jump.
---
0x358 JUMPDEST
0x359 JUMP
---
0x358: JUMPDEST 
0x359: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35a
[0x35a:0x368]
---
Predecessors: [0xf2]
Successors: [0xfa]
---
0x35a JUMPDEST
0x35b PUSH1 0x0
0x35d SLOAD
0x35e PUSH1 0x1
0x360 PUSH1 0xa0
0x362 PUSH1 0x2
0x364 EXP
0x365 SUB
0x366 AND
0x367 DUP2
0x368 JUMP
---
0x35a: JUMPDEST 
0x35b: V320 = 0x0
0x35d: V321 = S[0x0]
0x35e: V322 = 0x1
0x360: V323 = 0xa0
0x362: V324 = 0x2
0x364: V325 = EXP 0x2 0xa0
0x365: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x366: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x368: JUMP 0xfa
---
Entry stack: [V12, 0xfa]
Stack pops: 1
Stack additions: [S0, V327]
Exit stack: [V12, 0xfa, V327]

================================

Block 0x369
[0x369:0x380]
---
Predecessors: [0x121]
Successors: [0x381, 0x385]
---
0x369 JUMPDEST
0x36a PUSH1 0x0
0x36c DUP1
0x36d SLOAD
0x36e CALLER
0x36f PUSH1 0x1
0x371 PUSH1 0xa0
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 SWAP1
0x378 DUP2
0x379 AND
0x37a SWAP2
0x37b AND
0x37c EQ
0x37d PUSH2 0x385
0x380 JUMPI
---
0x369: JUMPDEST 
0x36a: V328 = 0x0
0x36d: V329 = S[0x0]
0x36e: V330 = CALLER
0x36f: V331 = 0x1
0x371: V332 = 0xa0
0x373: V333 = 0x2
0x375: V334 = EXP 0x2 0xa0
0x376: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x379: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x37b: V337 = AND V329 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V338 = EQ V337 V336
0x37d: V339 = 0x385
0x380: JUMPI 0x385 V338
---
Entry stack: [V12, 0x8c, V116]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x8c, V116, 0x0]

================================

Block 0x381
[0x381:0x384]
---
Predecessors: [0x369]
Successors: []
---
0x381 PUSH1 0x0
0x383 DUP1
0x384 REVERT
---
0x381: V340 = 0x0
0x384: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V116, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V116, 0x0]

================================

Block 0x385
[0x385:0x395]
---
Predecessors: [0x369]
Successors: [0x396, 0x39a]
---
0x385 JUMPDEST
0x386 PUSH1 0x1
0x388 PUSH1 0xa0
0x38a PUSH1 0x2
0x38c EXP
0x38d SUB
0x38e DUP3
0x38f AND
0x390 ISZERO
0x391 ISZERO
0x392 PUSH2 0x39a
0x395 JUMPI
---
0x385: JUMPDEST 
0x386: V341 = 0x1
0x388: V342 = 0xa0
0x38a: V343 = 0x2
0x38c: V344 = EXP 0x2 0xa0
0x38d: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V346 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x390: V347 = ISZERO V346
0x391: V348 = ISZERO V347
0x392: V349 = 0x39a
0x395: JUMPI 0x39a V348
---
Entry stack: [V12, 0x8c, V116, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x8c, V116, 0x0]

================================

Block 0x396
[0x396:0x399]
---
Predecessors: [0x385]
Successors: []
---
0x396 PUSH1 0x0
0x398 DUP1
0x399 REVERT
---
0x396: V350 = 0x0
0x399: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V116, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V116, 0x0]

================================

Block 0x39a
[0x39a:0x3c3]
---
Predecessors: [0x385]
Successors: [0x3c4]
---
0x39a JUMPDEST
0x39b POP
0x39c PUSH1 0x1
0x39e DUP1
0x39f SLOAD
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 NOT
0x3b6 AND
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be SUB
0x3bf DUP4
0x3c0 AND
0x3c1 OR
0x3c2 DUP2
0x3c3 SSTORE
---
0x39a: JUMPDEST 
0x39c: V351 = 0x1
0x39f: V352 = S[0x1]
0x3a0: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V354 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V355 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V352
0x3b7: V356 = 0x1
0x3b9: V357 = 0xa0
0x3bb: V358 = 0x2
0x3bd: V359 = EXP 0x2 0xa0
0x3be: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c0: V361 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V362 = OR V361 V355
0x3c3: S[0x1] = V362
---
Entry stack: [V12, 0x8c, V116, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x8c, V116, 0x1]

================================

Block 0x3c4
[0x3c4:0x3c4]
---
Predecessors: [0x39a]
Successors: [0x3c5]
---
0x3c4 JUMPDEST
---
0x3c4: JUMPDEST 
---
Entry stack: [V12, 0x8c, V116, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V116, 0x1]

================================

Block 0x3c5
[0x3c5:0x3c9]
---
Predecessors: [0x3c4]
Successors: [0x8c]
---
0x3c5 JUMPDEST
0x3c6 SWAP2
0x3c7 SWAP1
0x3c8 POP
0x3c9 JUMP
---
0x3c5: JUMPDEST 
0x3c9: JUMP 0x8c
---
Entry stack: [V12, 0x8c, V116, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x3ca
[0x3ca:0x3e0]
---
Predecessors: [0x154]
Successors: [0x3e1, 0x3e5]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x0
0x3cd SLOAD
0x3ce CALLER
0x3cf PUSH1 0x1
0x3d1 PUSH1 0xa0
0x3d3 PUSH1 0x2
0x3d5 EXP
0x3d6 SUB
0x3d7 SWAP1
0x3d8 DUP2
0x3d9 AND
0x3da SWAP2
0x3db AND
0x3dc EQ
0x3dd PUSH2 0x3e5
0x3e0 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V363 = 0x0
0x3cd: V364 = S[0x0]
0x3ce: V365 = CALLER
0x3cf: V366 = 0x1
0x3d1: V367 = 0xa0
0x3d3: V368 = 0x2
0x3d5: V369 = EXP 0x2 0xa0
0x3d6: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d9: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x3db: V372 = AND V364 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V373 = EQ V372 V371
0x3dd: V374 = 0x3e5
0x3e0: JUMPI 0x3e5 V373
---
Entry stack: [V12, 0xe5, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5, V139]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3ca]
Successors: []
---
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 REVERT
---
0x3e1: V375 = 0x0
0x3e4: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe5, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5, V139]

================================

Block 0x3e5
[0x3e5:0x3f4]
---
Predecessors: [0x3ca]
Successors: [0x3f5, 0x41d]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x1
0x3e8 PUSH1 0xa0
0x3ea PUSH1 0x2
0x3ec EXP
0x3ed SUB
0x3ee DUP2
0x3ef AND
0x3f0 ISZERO
0x3f1 PUSH2 0x41d
0x3f4 JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V376 = 0x1
0x3e8: V377 = 0xa0
0x3ea: V378 = 0x2
0x3ec: V379 = EXP 0x2 0xa0
0x3ed: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ef: V381 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V382 = ISZERO V381
0x3f1: V383 = 0x41d
0x3f4: JUMPI 0x41d V382
---
Entry stack: [V12, 0xe5, V139]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe5, V139]

================================

Block 0x3f5
[0x3f5:0x41c]
---
Predecessors: [0x3e5]
Successors: [0x41d]
---
0x3f5 PUSH1 0x0
0x3f7 DUP1
0x3f8 SLOAD
0x3f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40e NOT
0x40f AND
0x410 PUSH1 0x1
0x412 PUSH1 0xa0
0x414 PUSH1 0x2
0x416 EXP
0x417 SUB
0x418 DUP4
0x419 AND
0x41a OR
0x41b SWAP1
0x41c SSTORE
---
0x3f5: V384 = 0x0
0x3f8: V385 = S[0x0]
0x3f9: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V387 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V388 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V385
0x410: V389 = 0x1
0x412: V390 = 0xa0
0x414: V391 = 0x2
0x416: V392 = EXP 0x2 0xa0
0x417: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x419: V394 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x41a: V395 = OR V394 V388
0x41c: S[0x0] = V395
---
Entry stack: [V12, 0xe5, V139]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe5, V139]

================================

Block 0x41d
[0x41d:0x41d]
---
Predecessors: [0x3e5, 0x3f5]
Successors: [0x41e]
---
0x41d JUMPDEST
---
0x41d: JUMPDEST 
---
Entry stack: [V12, 0xe5, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5, V139]

================================

Block 0x41e
[0x41e:0x41e]
---
Predecessors: [0x41d]
Successors: [0x41f]
---
0x41e JUMPDEST
---
0x41e: JUMPDEST 
---
Entry stack: [V12, 0xe5, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5, V139]

================================

Block 0x41f
[0x41f:0x421]
---
Predecessors: [0x41e]
Successors: [0xe5]
---
0x41f JUMPDEST
0x420 POP
0x421 JUMP
---
0x41f: JUMPDEST 
0x421: JUMP 0xe5
---
Entry stack: [V12, 0xe5, V139]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x422
[0x422:0x438]
---
Predecessors: [0x175]
Successors: [0x439, 0x43d]
---
0x422 JUMPDEST
0x423 PUSH1 0x0
0x425 SLOAD
0x426 CALLER
0x427 PUSH1 0x1
0x429 PUSH1 0xa0
0x42b PUSH1 0x2
0x42d EXP
0x42e SUB
0x42f SWAP1
0x430 DUP2
0x431 AND
0x432 SWAP2
0x433 AND
0x434 EQ
0x435 PUSH2 0x43d
0x438 JUMPI
---
0x422: JUMPDEST 
0x423: V396 = 0x0
0x425: V397 = S[0x0]
0x426: V398 = CALLER
0x427: V399 = 0x1
0x429: V400 = 0xa0
0x42b: V401 = 0x2
0x42d: V402 = EXP 0x2 0xa0
0x42e: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x431: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x433: V405 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x434: V406 = EQ V405 V404
0x435: V407 = 0x43d
0x438: JUMPI 0x43d V406
---
Entry stack: [V12, 0xe5, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5, V153]

================================

Block 0x439
[0x439:0x43c]
---
Predecessors: [0x422]
Successors: []
---
0x439 PUSH1 0x0
0x43b DUP1
0x43c REVERT
---
0x439: V408 = 0x0
0x43c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe5, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe5, V153]

================================

Block 0x43d
[0x43d:0x448]
---
Predecessors: [0x422]
Successors: []
---
0x43d JUMPDEST
0x43e DUP1
0x43f PUSH1 0x1
0x441 PUSH1 0xa0
0x443 PUSH1 0x2
0x445 EXP
0x446 SUB
0x447 AND
0x448 SELFDESTRUCT
---
0x43d: JUMPDEST 
0x43f: V409 = 0x1
0x441: V410 = 0xa0
0x443: V411 = 0x2
0x445: V412 = EXP 0x2 0xa0
0x446: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x447: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x448: SELFDESTRUCT V414
---
Entry stack: [V12, 0xe5, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe5, V153]

================================

Block 0x449
[0x449:0x449]
---
Predecessors: []
Successors: [0x44a]
---
0x449 JUMPDEST
---
0x449: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x44a
[0x44a:0x44c]
---
Predecessors: [0x449]
Successors: []
Has unresolved jump.
---
0x44a JUMPDEST
0x44b POP
0x44c JUMP
---
0x44a: JUMPDEST 
0x44c: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x44d
[0x44d:0x45c]
---
Predecessors: [0x258]
Successors: [0x45d, 0x45e]
---
0x44d JUMPDEST
0x44e PUSH1 0x0
0x450 PUSH1 0x2
0x452 SLOAD
0x453 DUP3
0x454 DUP4
0x455 MUL
0x456 DUP2
0x457 ISZERO
0x458 ISZERO
0x459 PUSH2 0x45e
0x45c JUMPI
---
0x44d: JUMPDEST 
0x44e: V415 = 0x0
0x450: V416 = 0x2
0x452: V417 = S[0x2]
0x455: V418 = MUL V243 V243
0x457: V419 = ISZERO V417
0x458: V420 = ISZERO V419
0x459: V421 = 0x45e
0x45c: JUMPI 0x45e V420
---
Entry stack: [V12, 0x8c, V66, V68, 0x0, V243, V249, V249, 0xcb92dfef, V66, 0x27f, V243]
Stack pops: 1
Stack additions: [S0, 0x0, V417, V418]
Exit stack: [V12, 0x8c, V66, V68, 0x0, V243, V249, V249, 0xcb92dfef, V66, 0x27f, V243, 0x0, V417, V418]

================================

Block 0x45d
[0x45d:0x45d]
---
Predecessors: [0x44d]
Successors: []
---
0x45d INVALID
---
0x45d: INVALID 
---
Entry stack: [V12, 0x8c, V66, V68, 0x0, V243, V249, V249, 0xcb92dfef, V66, 0x27f, V243, 0x0, V417, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V66, V68, 0x0, V243, V249, V249, 0xcb92dfef, V66, 0x27f, V243, 0x0, V417, V418]

================================

Block 0x45e
[0x45e:0x479]
---
Predecessors: [0x44d, 0x47f]
Successors: [0x47a]
---
0x45e JUMPDEST
0x45f MOD
0x460 PUSH22 0x1000000000000000000000000000000000000000000
0x477 MUL
0x478 SWAP1
0x479 POP
---
0x45e: JUMPDEST 
0x45f: V422 = MOD S0 S1
0x460: V423 = 0x1000000000000000000000000000000000000000000
0x477: V424 = MUL 0x1000000000000000000000000000000000000000000 V422
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x27f, 0x288}, S3, 0x0, S1, S0]
Stack pops: 3
Stack additions: [V424]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x27f, 0x288}, S3, V424]

================================

Block 0x47a
[0x47a:0x47e]
---
Predecessors: [0x45e]
Successors: [0x27f, 0x288]
---
0x47a JUMPDEST
0x47b SWAP2
0x47c SWAP1
0x47d POP
0x47e JUMP
---
0x47a: JUMPDEST 
0x47e: JUMP {0x27f, 0x288}
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x27f, 0x288}, S1, V424]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V424]

================================

Block 0x47f
[0x47f:0x490]
---
Predecessors: [0x27f]
Successors: [0x45e, 0x491]
---
0x47f JUMPDEST
0x480 PUSH1 0x0
0x482 PUSH1 0x2
0x484 SLOAD
0x485 DUP3
0x486 DUP4
0x487 DUP5
0x488 MUL
0x489 MUL
0x48a DUP2
0x48b ISZERO
0x48c ISZERO
0x48d PUSH2 0x45e
0x490 JUMPI
---
0x47f: JUMPDEST 
0x480: V425 = 0x0
0x482: V426 = 0x2
0x484: V427 = S[0x2]
0x488: V428 = MUL S0 S0
0x489: V429 = MUL V428 S0
0x48b: V430 = ISZERO V427
0x48c: V431 = ISZERO V430
0x48d: V432 = 0x45e
0x490: JUMPI 0x45e V431
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, V249, S5, S4, S3, S2, 0x288, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V427, V429]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, V249, S5, S4, S3, S2, 0x288, S0, 0x0, V427, V429]

================================

Block 0x491
[0x491:0x491]
---
Predecessors: [0x47f]
Successors: []
---
0x491 INVALID
---
0x491: INVALID 
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, V249, S8, S7, S6, S5, 0x288, S3, 0x0, V427, V429]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, V249, S8, S7, S6, S5, 0x288, S3, 0x0, V427, V429]

================================

Block 0x492
[0x492:0x4ad]
---
Predecessors: []
Successors: [0x4ae]
---
0x492 JUMPDEST
0x493 MOD
0x494 PUSH22 0x1000000000000000000000000000000000000000000
0x4ab MUL
0x4ac SWAP1
0x4ad POP
---
0x492: JUMPDEST 
0x493: V433 = MOD S0 S1
0x494: V434 = 0x1000000000000000000000000000000000000000000
0x4ab: V435 = MUL 0x1000000000000000000000000000000000000000000 V433
---
Entry stack: []
Stack pops: 3
Stack additions: [V435]
Exit stack: [V435]

================================

Block 0x4ae
[0x4ae:0x4e8]
---
Predecessors: [0x492]
Successors: []
---
0x4ae JUMPDEST
0x4af SWAP2
0x4b0 SWAP1
0x4b1 POP
0x4b2 JUMP
0x4b3 STOP
0x4b4 LOG1
0x4b5 PUSH6 0x627a7a723058
0x4bc SHA3
0x4bd MISSING 0xf6
0x4be STOP
0x4bf MISSING 0xc3
0x4c0 DUP4
0x4c1 LOG1
0x4c2 MISSING 0x23
0x4c3 PC
0x4c4 CALL
0x4c5 PC
0x4c6 LT
0x4c7 SGT
0x4c8 SWAP15
0x4c9 MISSING 0xcd
0x4ca MISSING 0xd8
0x4cb SUB
0x4cc GASLIMIT
0x4cd COINBASE
0x4ce SHR
0x4cf MISSING 0x21
0x4d0 PUSH24 0xeeebb0fdc8db8bde26398ffd0029
---
0x4ae: JUMPDEST 
0x4b2: JUMP S2
0x4b3: STOP 
0x4b4: LOG S0 S1 S2
0x4b5: V436 = 0x627a7a723058
0x4bc: V437 = SHA3 0x627a7a723058 S3
0x4bd: MISSING 0xf6
0x4be: STOP 
0x4bf: MISSING 0xc3
0x4c1: LOG S3 S0 S1
0x4c2: MISSING 0x23
0x4c3: V438 = PC
0x4c4: V439 = CALL V438 S0 S1 S2 S3 S4 S5
0x4c5: V440 = PC
0x4c6: V441 = LT V440 V439
0x4c7: V442 = SGT V441 S6
0x4c9: MISSING 0xcd
0x4ca: MISSING 0xd8
0x4cb: V443 = SUB S0 S1
0x4cc: V444 = GASLIMIT
0x4cd: V445 = COINBASE
0x4ce: V446 = SHR V445 V444
0x4cf: MISSING 0x21
0x4d0: V447 = 0xeeebb0fdc8db8bde26398ffd0029
---
Entry stack: [V435]
Stack pops: 1134
Stack additions: [0xeeebb0fdc8db8bde26398ffd0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3059b1dc
Entry block: 0x6c
Exit block: 0x8c
Body: 0x6c, 0x73, 0x77, 0x8c, 0x18b, 0x19b, 0x19f, 0x1b2, 0x1b6, 0x208, 0x20c, 0x219, 0x21d, 0x225

Function 1:
Public function signature: 0x3e764713
Entry block: 0xa0
Exit block: 0x8c
Body: 0x8c, 0xa0, 0xa7, 0xab, 0x22c, 0x23d, 0x241, 0x254, 0x258, 0x27f, 0x288, 0x309, 0x30d, 0x31a, 0x31e, 0x326, 0x44d, 0x45d, 0x45e, 0x47a, 0x47f, 0x491

Function 2:
Public function signature: 0x83197ef0
Entry block: 0xd2
Exit block: 0x349
Body: 0xd2, 0xd9, 0xdd, 0x32e, 0x345, 0x349

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xe7
Exit block: 0xfa
Body: 0xe7, 0xee, 0xf2, 0xfa, 0x35a

Function 4:
Public function signature: 0xe95fb7a6
Entry block: 0x116
Exit block: 0x8c
Body: 0x8c, 0x116, 0x11d, 0x121, 0x369, 0x381, 0x385, 0x396, 0x39a, 0x3c4, 0x3c5

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x149
Exit block: 0xe5
Body: 0xe5, 0x149, 0x150, 0x154, 0x3ca, 0x3e1, 0x3e5, 0x3f5, 0x41d, 0x41e, 0x41f

Function 6:
Public function signature: 0xf5074f41
Entry block: 0x16a
Exit block: 0x43d
Body: 0x16a, 0x171, 0x175, 0x422, 0x439, 0x43d

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0x67
Body: 0x67

