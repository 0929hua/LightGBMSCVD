Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x69]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x69
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x69
0xc: JUMPI 0x69 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x6b]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x144d8961
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x6b
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x144d8961
0x22: V15 = EQ V13 0x144d8961
0x23: V16 = 0x6b
0x26: JUMPI 0x6b V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x8c]
---
0x27 DUP1
0x28 PUSH4 0x3ccfd60b
0x2d EQ
0x2e PUSH2 0x8c
0x31 JUMPI
---
0x28: V17 = 0x3ccfd60b
0x2d: V18 = EQ 0x3ccfd60b V13
0x2e: V19 = 0x8c
0x31: JUMPI 0x8c V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xa1]
---
0x32 DUP1
0x33 PUSH4 0x42df3d61
0x38 EQ
0x39 PUSH2 0xa1
0x3c JUMPI
---
0x33: V20 = 0x42df3d61
0x38: V21 = EQ 0x42df3d61 V13
0x39: V22 = 0xa1
0x3c: JUMPI 0xa1 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xb9]
---
0x3d DUP1
0x3e PUSH4 0x7f99fac8
0x43 EQ
0x44 PUSH2 0xb9
0x47 JUMPI
---
0x3e: V23 = 0x7f99fac8
0x43: V24 = EQ 0x7f99fac8 V13
0x44: V25 = 0xb9
0x47: JUMPI 0xb9 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xce]
---
0x48 DUP1
0x49 PUSH4 0x853828b6
0x4e EQ
0x4f PUSH2 0xce
0x52 JUMPI
---
0x49: V26 = 0x853828b6
0x4e: V27 = EQ 0x853828b6 V13
0x4f: V28 = 0xce
0x52: JUMPI 0xce V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0xe3]
---
0x53 DUP1
0x54 PUSH4 0xce5494bb
0x59 EQ
0x5a PUSH2 0xe3
0x5d JUMPI
---
0x54: V29 = 0xce5494bb
0x59: V30 = EQ 0xce5494bb V13
0x5a: V31 = 0xe3
0x5d: JUMPI 0xe3 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x104]
---
0x5e DUP1
0x5f PUSH4 0xea0e2e8f
0x64 EQ
0x65 PUSH2 0x104
0x68 JUMPI
---
0x5f: V32 = 0xea0e2e8f
0x64: V33 = EQ 0xea0e2e8f V13
0x65: V34 = 0x104
0x68: JUMPI 0x104 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x6a]
---
Predecessors: [0x0, 0x5e, 0x12b, 0x1e5, 0x271, 0x818, 0x9ae, 0xc7c]
Successors: []
---
0x69 JUMPDEST
0x6a STOP
---
0x69: JUMPDEST 
0x6a: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6b
[0x6b:0x72]
---
Predecessors: [0xd]
Successors: [0x73, 0x77]
---
0x6b JUMPDEST
0x6c CALLVALUE
0x6d DUP1
0x6e ISZERO
0x6f PUSH2 0x77
0x72 JUMPI
---
0x6b: JUMPDEST 
0x6c: V35 = CALLVALUE
0x6e: V36 = ISZERO V35
0x6f: V37 = 0x77
0x72: JUMPI 0x77 V36
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V13, V35]

================================

Block 0x73
[0x73:0x76]
---
Predecessors: [0x6b]
Successors: []
---
0x73 PUSH1 0x0
0x75 DUP1
0x76 REVERT
---
0x73: V38 = 0x0
0x76: REVERT 0x0 0x0
---
Entry stack: [V13, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V35]

================================

Block 0x77
[0x77:0x8b]
---
Predecessors: [0x6b]
Successors: [0x12b]
---
0x77 JUMPDEST
0x78 POP
0x79 PUSH2 0x69
0x7c PUSH1 0x1
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SUB
0x84 PUSH1 0x4
0x86 CALLDATALOAD
0x87 AND
0x88 PUSH2 0x12b
0x8b JUMP
---
0x77: JUMPDEST 
0x79: V39 = 0x69
0x7c: V40 = 0x1
0x7e: V41 = 0xa0
0x80: V42 = 0x2
0x82: V43 = EXP 0x2 0xa0
0x83: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84: V45 = 0x4
0x86: V46 = CALLDATALOAD 0x4
0x87: V47 = AND V46 0xffffffffffffffffffffffffffffffffffffffff
0x88: V48 = 0x12b
0x8b: JUMP 0x12b
---
Entry stack: [V13, V35]
Stack pops: 1
Stack additions: [0x69, V47]
Exit stack: [V13, 0x69, V47]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x27]
Successors: [0x94, 0x98]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8c: JUMPDEST 
0x8d: V49 = CALLVALUE
0x8f: V50 = ISZERO V49
0x90: V51 = 0x98
0x93: JUMPI 0x98 V50
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V13, V49]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8c]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V52 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V13, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V49]

================================

Block 0x98
[0x98:0xa0]
---
Predecessors: [0x8c]
Successors: [0x189]
---
0x98 JUMPDEST
0x99 POP
0x9a PUSH2 0x69
0x9d PUSH2 0x189
0xa0 JUMP
---
0x98: JUMPDEST 
0x9a: V53 = 0x69
0x9d: V54 = 0x189
0xa0: JUMP 0x189
---
Entry stack: [V13, V49]
Stack pops: 1
Stack additions: [0x69]
Exit stack: [V13, 0x69]

================================

Block 0xa1
[0xa1:0xa8]
---
Predecessors: [0x32]
Successors: [0xa9, 0xad]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 DUP1
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0xa1: JUMPDEST 
0xa2: V55 = CALLVALUE
0xa4: V56 = ISZERO V55
0xa5: V57 = 0xad
0xa8: JUMPI 0xad V56
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V13, V55]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0xa1]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V58 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V13, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V55]

================================

Block 0xad
[0xad:0xb8]
---
Predecessors: [0xa1]
Successors: [0x1e8]
---
0xad JUMPDEST
0xae POP
0xaf PUSH2 0x69
0xb2 PUSH1 0x4
0xb4 CALLDATALOAD
0xb5 PUSH2 0x1e8
0xb8 JUMP
---
0xad: JUMPDEST 
0xaf: V59 = 0x69
0xb2: V60 = 0x4
0xb4: V61 = CALLDATALOAD 0x4
0xb5: V62 = 0x1e8
0xb8: JUMP 0x1e8
---
Entry stack: [V13, V55]
Stack pops: 1
Stack additions: [0x69, V61]
Exit stack: [V13, 0x69, V61]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0x3d]
Successors: [0xc1, 0xc5]
---
0xb9 JUMPDEST
0xba CALLVALUE
0xbb DUP1
0xbc ISZERO
0xbd PUSH2 0xc5
0xc0 JUMPI
---
0xb9: JUMPDEST 
0xba: V63 = CALLVALUE
0xbc: V64 = ISZERO V63
0xbd: V65 = 0xc5
0xc0: JUMPI 0xc5 V64
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V13, V63]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xb9]
Successors: []
---
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 REVERT
---
0xc1: V66 = 0x0
0xc4: REVERT 0x0 0x0
---
Entry stack: [V13, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V63]

================================

Block 0xc5
[0xc5:0xcd]
---
Predecessors: [0xb9]
Successors: [0x275]
---
0xc5 JUMPDEST
0xc6 POP
0xc7 PUSH2 0x69
0xca PUSH2 0x275
0xcd JUMP
---
0xc5: JUMPDEST 
0xc7: V67 = 0x69
0xca: V68 = 0x275
0xcd: JUMP 0x275
---
Entry stack: [V13, V63]
Stack pops: 1
Stack additions: [0x69]
Exit stack: [V13, 0x69]

================================

Block 0xce
[0xce:0xd5]
---
Predecessors: [0x48]
Successors: [0xd6, 0xda]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 DUP1
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xce: JUMPDEST 
0xcf: V69 = CALLVALUE
0xd1: V70 = ISZERO V69
0xd2: V71 = 0xda
0xd5: JUMPI 0xda V70
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V13, V69]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xce]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V72 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V13, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V69]

================================

Block 0xda
[0xda:0xe2]
---
Predecessors: [0xce]
Successors: [0x81f]
---
0xda JUMPDEST
0xdb POP
0xdc PUSH2 0x69
0xdf PUSH2 0x81f
0xe2 JUMP
---
0xda: JUMPDEST 
0xdc: V73 = 0x69
0xdf: V74 = 0x81f
0xe2: JUMP 0x81f
---
Entry stack: [V13, V69]
Stack pops: 1
Stack additions: [0x69]
Exit stack: [V13, 0x69]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0x53]
Successors: [0xeb, 0xef]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 DUP1
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe3: JUMPDEST 
0xe4: V75 = CALLVALUE
0xe6: V76 = ISZERO V75
0xe7: V77 = 0xef
0xea: JUMPI 0xef V76
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V13, V75]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe3]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V78 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V13, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V75]

================================

Block 0xef
[0xef:0x103]
---
Predecessors: [0xe3]
Successors: [0x870]
---
0xef JUMPDEST
0xf0 POP
0xf1 PUSH2 0x69
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc PUSH1 0x4
0xfe CALLDATALOAD
0xff AND
0x100 PUSH2 0x870
0x103 JUMP
---
0xef: JUMPDEST 
0xf1: V79 = 0x69
0xf4: V80 = 0x1
0xf6: V81 = 0xa0
0xf8: V82 = 0x2
0xfa: V83 = EXP 0x2 0xa0
0xfb: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V85 = 0x4
0xfe: V86 = CALLDATALOAD 0x4
0xff: V87 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x100: V88 = 0x870
0x103: JUMP 0x870
---
Entry stack: [V13, V75]
Stack pops: 1
Stack additions: [0x69, V87]
Exit stack: [V13, 0x69, V87]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0x5e]
Successors: [0x10c, 0x110]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 DUP1
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x104: JUMPDEST 
0x105: V89 = CALLVALUE
0x107: V90 = ISZERO V89
0x108: V91 = 0x110
0x10b: JUMPI 0x110 V90
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V13, V89]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x104]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V92 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V13, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V89]

================================

Block 0x110
[0x110:0x118]
---
Predecessors: [0x104]
Successors: [0x9b3]
---
0x110 JUMPDEST
0x111 POP
0x112 PUSH2 0x119
0x115 PUSH2 0x9b3
0x118 JUMP
---
0x110: JUMPDEST 
0x112: V93 = 0x119
0x115: V94 = 0x9b3
0x118: JUMP 0x9b3
---
Entry stack: [V13, V89]
Stack pops: 1
Stack additions: [0x119]
Exit stack: [V13, 0x119]

================================

Block 0x119
[0x119:0x12a]
---
Predecessors: [0x9b3]
Successors: []
---
0x119 JUMPDEST
0x11a PUSH1 0x40
0x11c DUP1
0x11d MLOAD
0x11e SWAP2
0x11f DUP3
0x120 MSTORE
0x121 MLOAD
0x122 SWAP1
0x123 DUP2
0x124 SWAP1
0x125 SUB
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a RETURN
---
0x119: JUMPDEST 
0x11a: V95 = 0x40
0x11d: V96 = M[0x40]
0x120: M[V96] = V933
0x121: V97 = M[0x40]
0x125: V98 = SUB V96 V97
0x126: V99 = 0x20
0x128: V100 = ADD 0x20 V98
0x12a: RETURN V97 V100
---
Entry stack: [V13, V933]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x12b
[0x12b:0x188]
---
Predecessors: [0x77]
Successors: [0x69]
---
0x12b JUMPDEST
0x12c PUSH1 0x1
0x12e DUP1
0x12f SLOAD
0x130 DUP1
0x131 DUP3
0x132 ADD
0x133 DUP3
0x134 SSTORE
0x135 PUSH1 0x0
0x137 SWAP2
0x138 SWAP1
0x139 SWAP2
0x13a MSTORE
0x13b PUSH32 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x15c ADD
0x15d DUP1
0x15e SLOAD
0x15f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x174 NOT
0x175 AND
0x176 PUSH1 0x1
0x178 PUSH1 0xa0
0x17a PUSH1 0x2
0x17c EXP
0x17d SUB
0x17e SWAP3
0x17f SWAP1
0x180 SWAP3
0x181 AND
0x182 SWAP2
0x183 SWAP1
0x184 SWAP2
0x185 OR
0x186 SWAP1
0x187 SSTORE
0x188 JUMP
---
0x12b: JUMPDEST 
0x12c: V101 = 0x1
0x12f: V102 = S[0x1]
0x132: V103 = ADD 0x1 V102
0x134: S[0x1] = V103
0x135: V104 = 0x0
0x13a: M[0x0] = 0x1
0x13b: V105 = 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x15c: V106 = ADD 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6 V102
0x15e: V107 = S[V106]
0x15f: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x174: V109 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x175: V110 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V107
0x176: V111 = 0x1
0x178: V112 = 0xa0
0x17a: V113 = 0x2
0x17c: V114 = EXP 0x2 0xa0
0x17d: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x185: V117 = OR V116 V110
0x187: S[V106] = V117
0x188: JUMP 0x69
---
Entry stack: [V13, 0x69, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x189
[0x189:0x19b]
---
Predecessors: [0x98]
Successors: [0x19c, 0x1a0]
---
0x189 JUMPDEST
0x18a PUSH1 0x2
0x18c SLOAD
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 AND
0x196 CALLER
0x197 EQ
0x198 PUSH2 0x1a0
0x19b JUMPI
---
0x189: JUMPDEST 
0x18a: V118 = 0x2
0x18c: V119 = S[0x2]
0x18d: V120 = 0x1
0x18f: V121 = 0xa0
0x191: V122 = 0x2
0x193: V123 = EXP 0x2 0xa0
0x194: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x196: V126 = CALLER
0x197: V127 = EQ V126 V125
0x198: V128 = 0x1a0
0x19b: JUMPI 0x1a0 V127
---
Entry stack: [V13, 0x69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69]

================================

Block 0x19c
[0x19c:0x19f]
---
Predecessors: [0x189]
Successors: []
---
0x19c PUSH1 0x0
0x19e DUP1
0x19f REVERT
---
0x19c: V129 = 0x0
0x19f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69]

================================

Block 0x1a0
[0x1a0:0x1db]
---
Predecessors: [0x189]
Successors: [0x1dc, 0x1e5]
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x2
0x1a3 SLOAD
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af SWAP1
0x1b0 SWAP2
0x1b1 AND
0x1b2 SWAP1
0x1b3 PUSH8 0x16345785d89ffff
0x1bc NOT
0x1bd ADDRESS
0x1be BALANCE
0x1bf ADD
0x1c0 DUP1
0x1c1 ISZERO
0x1c2 PUSH2 0x8fc
0x1c5 MUL
0x1c6 SWAP2
0x1c7 PUSH1 0x0
0x1c9 DUP2
0x1ca DUP2
0x1cb DUP2
0x1cc DUP6
0x1cd DUP9
0x1ce DUP9
0x1cf CALL
0x1d0 SWAP4
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 ISZERO
0x1d6 DUP1
0x1d7 ISZERO
0x1d8 PUSH2 0x1e5
0x1db JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V130 = 0x2
0x1a3: V131 = S[0x2]
0x1a4: V132 = 0x40
0x1a6: V133 = M[0x40]
0x1a7: V134 = 0x1
0x1a9: V135 = 0xa0
0x1ab: V136 = 0x2
0x1ad: V137 = EXP 0x2 0xa0
0x1ae: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V139 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V140 = 0x16345785d89ffff
0x1bc: V141 = NOT 0x16345785d89ffff
0x1bd: V142 = ADDRESS
0x1be: V143 = BALANCE V142
0x1bf: V144 = ADD V143 0xfffffffffffffffffffffffffffffffffffffffffffffffffe9cba87a2760000
0x1c1: V145 = ISZERO V144
0x1c2: V146 = 0x8fc
0x1c5: V147 = MUL 0x8fc V145
0x1c7: V148 = 0x0
0x1cf: V149 = CALL V147 V139 V144 V133 0x0 V133 0x0
0x1d5: V150 = ISZERO V149
0x1d7: V151 = ISZERO V150
0x1d8: V152 = 0x1e5
0x1db: JUMPI 0x1e5 V151
---
Entry stack: [V13, 0x69]
Stack pops: 0
Stack additions: [V150]
Exit stack: [V13, 0x69, V150]

================================

Block 0x1dc
[0x1dc:0x1e4]
---
Predecessors: [0x1a0]
Successors: []
---
0x1dc RETURNDATASIZE
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 RETURNDATACOPY
0x1e1 RETURNDATASIZE
0x1e2 PUSH1 0x0
0x1e4 REVERT
---
0x1dc: V153 = RETURNDATASIZE
0x1dd: V154 = 0x0
0x1e0: RETURNDATACOPY 0x0 0x0 V153
0x1e1: V155 = RETURNDATASIZE
0x1e2: V156 = 0x0
0x1e4: REVERT 0x0 V155
---
Entry stack: [V13, 0x69, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V150]

================================

Block 0x1e5
[0x1e5:0x1e7]
---
Predecessors: [0x1a0, 0x836]
Successors: [0x69]
---
0x1e5 JUMPDEST
0x1e6 POP
0x1e7 JUMP
---
0x1e5: JUMPDEST 
0x1e7: JUMP 0x69
---
Entry stack: [V13, 0x69, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e8
[0x1e8:0x1ea]
---
Predecessors: [0xad, 0xe2c]
Successors: [0x1eb]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
---
0x1e8: JUMPDEST 
0x1e9: V157 = 0x0
---
Entry stack: [V13, 0x69, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x69, S0, 0x0]

================================

Block 0x1eb
[0x1eb:0x1f3]
---
Predecessors: [0x1e8, 0x22b]
Successors: [0x1f4, 0x271]
---
0x1eb JUMPDEST
0x1ec DUP2
0x1ed DUP2
0x1ee LT
0x1ef ISZERO
0x1f0 PUSH2 0x271
0x1f3 JUMPI
---
0x1eb: JUMPDEST 
0x1ee: V158 = LT S0 S1
0x1ef: V159 = ISZERO V158
0x1f0: V160 = 0x271
0x1f3: JUMPI 0x271 V159
---
Entry stack: [V13, 0x69, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x69, S1, S0]

================================

Block 0x1f4
[0x1f4:0x1fd]
---
Predecessors: [0x1eb]
Successors: [0xcfb]
---
0x1f4 PUSH1 0x1
0x1f6 ADDRESS
0x1f7 PUSH2 0x1fe
0x1fa PUSH2 0xcfb
0x1fd JUMP
---
0x1f4: V161 = 0x1
0x1f6: V162 = ADDRESS
0x1f7: V163 = 0x1fe
0x1fa: V164 = 0xcfb
0x1fd: JUMP 0xcfb
---
Entry stack: [V13, 0x69, S1, S0]
Stack pops: 0
Stack additions: [0x1, V162, 0x1fe]
Exit stack: [V13, 0x69, S1, S0, 0x1, V162, 0x1fe]

================================

Block 0x1fe
[0x1fe:0x221]
---
Predecessors: [0xcfb]
Successors: [0x222, 0x22b]
---
0x1fe JUMPDEST
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 SWAP1
0x208 SWAP2
0x209 AND
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x40
0x20e MLOAD
0x20f SWAP1
0x210 DUP2
0x211 SWAP1
0x212 SUB
0x213 PUSH1 0x20
0x215 ADD
0x216 SWAP1
0x217 PUSH1 0x0
0x219 CREATE
0x21a DUP1
0x21b ISZERO
0x21c DUP1
0x21d ISZERO
0x21e PUSH2 0x22b
0x221 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V165 = 0x1
0x201: V166 = 0xa0
0x203: V167 = 0x2
0x205: V168 = EXP 0x2 0xa0
0x206: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V170 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x20b: M[V1189] = V170
0x20c: V171 = 0x40
0x20e: V172 = M[0x40]
0x212: V173 = SUB V1189 V172
0x213: V174 = 0x20
0x215: V175 = ADD 0x20 V173
0x217: V176 = 0x0
0x219: V177 = CREATE 0x0 V172 V175
0x21b: V178 = ISZERO V177
0x21d: V179 = ISZERO V178
0x21e: V180 = 0x22b
0x221: JUMPI 0x22b V179
---
Entry stack: [V13, 0x69, S4, S3, 0x1, V162, V1189]
Stack pops: 2
Stack additions: [V177, V178]
Exit stack: [V13, 0x69, S4, S3, 0x1, V177, V178]

================================

Block 0x222
[0x222:0x22a]
---
Predecessors: [0x1fe]
Successors: []
---
0x222 RETURNDATASIZE
0x223 PUSH1 0x0
0x225 DUP1
0x226 RETURNDATACOPY
0x227 RETURNDATASIZE
0x228 PUSH1 0x0
0x22a REVERT
---
0x222: V181 = RETURNDATASIZE
0x223: V182 = 0x0
0x226: RETURNDATACOPY 0x0 0x0 V181
0x227: V183 = RETURNDATASIZE
0x228: V184 = 0x0
0x22a: REVERT 0x0 V183
---
Entry stack: [V13, 0x69, S4, S3, 0x1, V177, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S4, S3, 0x1, V177, V178]

================================

Block 0x22b
[0x22b:0x270]
---
Predecessors: [0x1fe]
Successors: [0x1eb]
---
0x22b JUMPDEST
0x22c POP
0x22d DUP2
0x22e SLOAD
0x22f PUSH1 0x1
0x231 DUP1
0x232 DUP3
0x233 ADD
0x234 DUP5
0x235 SSTORE
0x236 PUSH1 0x0
0x238 SWAP4
0x239 DUP5
0x23a MSTORE
0x23b PUSH1 0x20
0x23d SWAP1
0x23e SWAP4
0x23f SHA3
0x240 ADD
0x241 DUP1
0x242 SLOAD
0x243 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x258 NOT
0x259 AND
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 SWAP3
0x263 SWAP1
0x264 SWAP3
0x265 AND
0x266 SWAP2
0x267 SWAP1
0x268 SWAP2
0x269 OR
0x26a SWAP1
0x26b SSTORE
0x26c ADD
0x26d PUSH2 0x1eb
0x270 JUMP
---
0x22b: JUMPDEST 
0x22e: V185 = S[0x1]
0x22f: V186 = 0x1
0x233: V187 = ADD V185 0x1
0x235: S[0x1] = V187
0x236: V188 = 0x0
0x23a: M[0x0] = 0x1
0x23b: V189 = 0x20
0x23f: V190 = SHA3 0x0 0x20
0x240: V191 = ADD V190 V185
0x242: V192 = S[V191]
0x243: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x258: V194 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x259: V195 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V192
0x25a: V196 = 0x1
0x25c: V197 = 0xa0
0x25e: V198 = 0x2
0x260: V199 = EXP 0x2 0xa0
0x261: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x269: V202 = OR V201 V195
0x26b: S[V191] = V202
0x26c: V203 = ADD 0x1 S3
0x26d: V204 = 0x1eb
0x270: JUMP 0x1eb
---
Entry stack: [V13, 0x69, S4, S3, 0x1, V177, V178]
Stack pops: 4
Stack additions: [V203]
Exit stack: [V13, 0x69, S4, V203]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x1eb]
Successors: [0x69]
---
0x271 JUMPDEST
0x272 POP
0x273 POP
0x274 JUMP
---
0x271: JUMPDEST 
0x274: JUMP 0x69
---
Entry stack: [V13, 0x69, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x275
[0x275:0x2d4]
---
Predecessors: [0xc5]
Successors: [0x2d5, 0x2d9]
---
0x275 JUMPDEST
0x276 PUSH1 0x0
0x278 DUP1
0x279 PUSH1 0x0
0x27b DUP1
0x27c PUSH1 0x0
0x27e PUSH8 0x58d15e176280000
0x287 PUSH1 0x3
0x289 PUSH1 0x0
0x28b SWAP1
0x28c SLOAD
0x28d SWAP1
0x28e PUSH2 0x100
0x291 EXP
0x292 SWAP1
0x293 DIV
0x294 PUSH1 0x1
0x296 PUSH1 0xa0
0x298 PUSH1 0x2
0x29a EXP
0x29b SUB
0x29c AND
0x29d PUSH1 0x1
0x29f PUSH1 0xa0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 SUB
0x2a5 AND
0x2a6 PUSH4 0xd87574e0
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP2
0x2af PUSH4 0xffffffff
0x2b4 AND
0x2b5 PUSH1 0xe0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba MUL
0x2bb DUP2
0x2bc MSTORE
0x2bd PUSH1 0x4
0x2bf ADD
0x2c0 PUSH1 0x20
0x2c2 PUSH1 0x40
0x2c4 MLOAD
0x2c5 DUP1
0x2c6 DUP4
0x2c7 SUB
0x2c8 DUP2
0x2c9 PUSH1 0x0
0x2cb DUP8
0x2cc DUP1
0x2cd EXTCODESIZE
0x2ce ISZERO
0x2cf DUP1
0x2d0 ISZERO
0x2d1 PUSH2 0x2d9
0x2d4 JUMPI
---
0x275: JUMPDEST 
0x276: V205 = 0x0
0x279: V206 = 0x0
0x27c: V207 = 0x0
0x27e: V208 = 0x58d15e176280000
0x287: V209 = 0x3
0x289: V210 = 0x0
0x28c: V211 = S[0x3]
0x28e: V212 = 0x100
0x291: V213 = EXP 0x100 0x0
0x293: V214 = DIV V211 0x1
0x294: V215 = 0x1
0x296: V216 = 0xa0
0x298: V217 = 0x2
0x29a: V218 = EXP 0x2 0xa0
0x29b: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x29d: V221 = 0x1
0x29f: V222 = 0xa0
0x2a1: V223 = 0x2
0x2a3: V224 = EXP 0x2 0xa0
0x2a4: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a5: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x2a6: V227 = 0xd87574e0
0x2ab: V228 = 0x40
0x2ad: V229 = M[0x40]
0x2af: V230 = 0xffffffff
0x2b4: V231 = AND 0xffffffff 0xd87574e0
0x2b5: V232 = 0xe0
0x2b7: V233 = 0x2
0x2b9: V234 = EXP 0x2 0xe0
0x2ba: V235 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x2bc: M[V229] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x2bd: V236 = 0x4
0x2bf: V237 = ADD 0x4 V229
0x2c0: V238 = 0x20
0x2c2: V239 = 0x40
0x2c4: V240 = M[0x40]
0x2c7: V241 = SUB V237 V240
0x2c9: V242 = 0x0
0x2cd: V243 = EXTCODESIZE V226
0x2ce: V244 = ISZERO V243
0x2d0: V245 = ISZERO V244
0x2d1: V246 = 0x2d9
0x2d4: JUMPI 0x2d9 V245
---
Entry stack: [V13, 0x69]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, 0x20, V240, V241, V240, 0x0, V226, V244]
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, 0x20, V240, V241, V240, 0x0, V226, V244]

================================

Block 0x2d5
[0x2d5:0x2d8]
---
Predecessors: [0x275]
Successors: []
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
---
0x2d5: V247 = 0x0
0x2d8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, 0x20, V240, V241, V240, 0x0, V226, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, 0x20, V240, V241, V240, 0x0, V226, V244]

================================

Block 0x2d9
[0x2d9:0x2e3]
---
Predecessors: [0x275]
Successors: [0x2e4, 0x2ed]
---
0x2d9 JUMPDEST
0x2da POP
0x2db GAS
0x2dc CALL
0x2dd ISZERO
0x2de DUP1
0x2df ISZERO
0x2e0 PUSH2 0x2ed
0x2e3 JUMPI
---
0x2d9: JUMPDEST 
0x2db: V248 = GAS
0x2dc: V249 = CALL V248 V226 0x0 V240 V241 V240 0x20
0x2dd: V250 = ISZERO V249
0x2df: V251 = ISZERO V250
0x2e0: V252 = 0x2ed
0x2e3: JUMPI 0x2ed V251
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, 0x20, V240, V241, V240, 0x0, V226, V244]
Stack pops: 7
Stack additions: [V250]
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, V250]

================================

Block 0x2e4
[0x2e4:0x2ec]
---
Predecessors: [0x2d9]
Successors: []
---
0x2e4 RETURNDATASIZE
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 RETURNDATACOPY
0x2e9 RETURNDATASIZE
0x2ea PUSH1 0x0
0x2ec REVERT
---
0x2e4: V253 = RETURNDATASIZE
0x2e5: V254 = 0x0
0x2e8: RETURNDATACOPY 0x0 0x0 V253
0x2e9: V255 = RETURNDATASIZE
0x2ea: V256 = 0x0
0x2ec: REVERT 0x0 V255
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, V250]

================================

Block 0x2ed
[0x2ed:0x2fe]
---
Predecessors: [0x2d9]
Successors: [0x2ff, 0x303]
---
0x2ed JUMPDEST
0x2ee POP
0x2ef POP
0x2f0 POP
0x2f1 POP
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 RETURNDATASIZE
0x2f6 PUSH1 0x20
0x2f8 DUP2
0x2f9 LT
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2ed: JUMPDEST 
0x2f2: V257 = 0x40
0x2f4: V258 = M[0x40]
0x2f5: V259 = RETURNDATASIZE
0x2f6: V260 = 0x20
0x2f9: V261 = LT V259 0x20
0x2fa: V262 = ISZERO V261
0x2fb: V263 = 0x303
0x2fe: JUMPI 0x303 V262
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V226, 0xd87574e0, V237, V250]
Stack pops: 4
Stack additions: [V258, V259]
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V258, V259]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2ed]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V264 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V258, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V258, V259]

================================

Block 0x303
[0x303:0x30a]
---
Predecessors: [0x2ed]
Successors: [0x30b, 0x30f]
---
0x303 JUMPDEST
0x304 POP
0x305 MLOAD
0x306 GT
0x307 PUSH2 0x30f
0x30a JUMPI
---
0x303: JUMPDEST 
0x305: V265 = M[V258]
0x306: V266 = GT V265 0x58d15e176280000
0x307: V267 = 0x30f
0x30a: JUMPI 0x30f V266
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V258, V259]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x30b
[0x30b:0x30e]
---
Predecessors: [0x303]
Successors: []
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
---
0x30b: V268 = 0x0
0x30e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x30f
[0x30f:0x35d]
---
Predecessors: [0x303]
Successors: [0x35e, 0x362]
---
0x30f JUMPDEST
0x310 PUSH1 0x3
0x312 PUSH1 0x0
0x314 SWAP1
0x315 SLOAD
0x316 SWAP1
0x317 PUSH2 0x100
0x31a EXP
0x31b SWAP1
0x31c DIV
0x31d PUSH1 0x1
0x31f PUSH1 0xa0
0x321 PUSH1 0x2
0x323 EXP
0x324 SUB
0x325 AND
0x326 PUSH1 0x1
0x328 PUSH1 0xa0
0x32a PUSH1 0x2
0x32c EXP
0x32d SUB
0x32e AND
0x32f PUSH4 0x11a09ae7
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP2
0x338 PUSH4 0xffffffff
0x33d AND
0x33e PUSH1 0xe0
0x340 PUSH1 0x2
0x342 EXP
0x343 MUL
0x344 DUP2
0x345 MSTORE
0x346 PUSH1 0x4
0x348 ADD
0x349 PUSH1 0x20
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f DUP4
0x350 SUB
0x351 DUP2
0x352 PUSH1 0x0
0x354 DUP8
0x355 DUP1
0x356 EXTCODESIZE
0x357 ISZERO
0x358 DUP1
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x30f: JUMPDEST 
0x310: V269 = 0x3
0x312: V270 = 0x0
0x315: V271 = S[0x3]
0x317: V272 = 0x100
0x31a: V273 = EXP 0x100 0x0
0x31c: V274 = DIV V271 0x1
0x31d: V275 = 0x1
0x31f: V276 = 0xa0
0x321: V277 = 0x2
0x323: V278 = EXP 0x2 0xa0
0x324: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x325: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x326: V281 = 0x1
0x328: V282 = 0xa0
0x32a: V283 = 0x2
0x32c: V284 = EXP 0x2 0xa0
0x32d: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32e: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x32f: V287 = 0x11a09ae7
0x334: V288 = 0x40
0x336: V289 = M[0x40]
0x338: V290 = 0xffffffff
0x33d: V291 = AND 0xffffffff 0x11a09ae7
0x33e: V292 = 0xe0
0x340: V293 = 0x2
0x342: V294 = EXP 0x2 0xe0
0x343: V295 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x345: M[V289] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x346: V296 = 0x4
0x348: V297 = ADD 0x4 V289
0x349: V298 = 0x20
0x34b: V299 = 0x40
0x34d: V300 = M[0x40]
0x350: V301 = SUB V297 V300
0x352: V302 = 0x0
0x356: V303 = EXTCODESIZE V286
0x357: V304 = ISZERO V303
0x359: V305 = ISZERO V304
0x35a: V306 = 0x362
0x35d: JUMPI 0x362 V305
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V286, 0x11a09ae7, V297, 0x20, V300, V301, V300, 0x0, V286, V304]
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V286, 0x11a09ae7, V297, 0x20, V300, V301, V300, 0x0, V286, V304]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x30f]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V307 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V286, 0x11a09ae7, V297, 0x20, V300, V301, V300, 0x0, V286, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V286, 0x11a09ae7, V297, 0x20, V300, V301, V300, 0x0, V286, V304]

================================

Block 0x362
[0x362:0x36c]
---
Predecessors: [0x30f]
Successors: [0x36d, 0x376]
---
0x362 JUMPDEST
0x363 POP
0x364 GAS
0x365 CALL
0x366 ISZERO
0x367 DUP1
0x368 ISZERO
0x369 PUSH2 0x376
0x36c JUMPI
---
0x362: JUMPDEST 
0x364: V308 = GAS
0x365: V309 = CALL V308 V286 0x0 V300 V301 V300 0x20
0x366: V310 = ISZERO V309
0x368: V311 = ISZERO V310
0x369: V312 = 0x376
0x36c: JUMPI 0x376 V311
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V286, 0x11a09ae7, V297, 0x20, V300, V301, V300, 0x0, V286, V304]
Stack pops: 7
Stack additions: [V310]
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V286, 0x11a09ae7, V297, V310]

================================

Block 0x36d
[0x36d:0x375]
---
Predecessors: [0x362]
Successors: []
---
0x36d RETURNDATASIZE
0x36e PUSH1 0x0
0x370 DUP1
0x371 RETURNDATACOPY
0x372 RETURNDATASIZE
0x373 PUSH1 0x0
0x375 REVERT
---
0x36d: V313 = RETURNDATASIZE
0x36e: V314 = 0x0
0x371: RETURNDATACOPY 0x0 0x0 V313
0x372: V315 = RETURNDATASIZE
0x373: V316 = 0x0
0x375: REVERT 0x0 V315
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V286, 0x11a09ae7, V297, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V286, 0x11a09ae7, V297, V310]

================================

Block 0x376
[0x376:0x387]
---
Predecessors: [0x362]
Successors: [0x388, 0x38c]
---
0x376 JUMPDEST
0x377 POP
0x378 POP
0x379 POP
0x37a POP
0x37b PUSH1 0x40
0x37d MLOAD
0x37e RETURNDATASIZE
0x37f PUSH1 0x20
0x381 DUP2
0x382 LT
0x383 ISZERO
0x384 PUSH2 0x38c
0x387 JUMPI
---
0x376: JUMPDEST 
0x37b: V317 = 0x40
0x37d: V318 = M[0x40]
0x37e: V319 = RETURNDATASIZE
0x37f: V320 = 0x20
0x382: V321 = LT V319 0x20
0x383: V322 = ISZERO V321
0x384: V323 = 0x38c
0x387: JUMPI 0x38c V322
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V286, 0x11a09ae7, V297, V310]
Stack pops: 4
Stack additions: [V318, V319]
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V318, V319]

================================

Block 0x388
[0x388:0x38b]
---
Predecessors: [0x376]
Successors: []
---
0x388 PUSH1 0x0
0x38a DUP1
0x38b REVERT
---
0x388: V324 = 0x0
0x38b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V318, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V318, V319]

================================

Block 0x38c
[0x38c:0x398]
---
Predecessors: [0x376]
Successors: [0x399, 0x39d]
---
0x38c JUMPDEST
0x38d POP
0x38e MLOAD
0x38f SWAP5
0x390 POP
0x391 PUSH1 0x0
0x393 DUP6
0x394 GT
0x395 PUSH2 0x39d
0x398 JUMPI
---
0x38c: JUMPDEST 
0x38e: V325 = M[V318]
0x391: V326 = 0x0
0x394: V327 = GT V325 0x0
0x395: V328 = 0x39d
0x398: JUMPI 0x39d V327
---
Entry stack: [V13, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, V318, V319]
Stack pops: 7
Stack additions: [V325, S5, S4, S3, S2]
Exit stack: [V13, 0x69, V325, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x399
[0x399:0x39c]
---
Predecessors: [0x38c]
Successors: []
---
0x399 PUSH1 0x0
0x39b DUP1
0x39c REVERT
---
0x399: V329 = 0x0
0x39c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, V325, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V325, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x39d
[0x39d:0x3a1]
---
Predecessors: [0x38c]
Successors: [0x3a2]
---
0x39d JUMPDEST
0x39e PUSH1 0x0
0x3a0 SWAP4
0x3a1 POP
---
0x39d: JUMPDEST 
0x39e: V330 = 0x0
---
Entry stack: [V13, 0x69, V325, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V13, 0x69, V325, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3a2
[0x3a2:0x3ac]
---
Predecessors: [0x39d, 0x4ea]
Successors: [0x3ad, 0x4f5]
---
0x3a2 JUMPDEST
0x3a3 PUSH1 0x1
0x3a5 SLOAD
0x3a6 DUP5
0x3a7 LT
0x3a8 ISZERO
0x3a9 PUSH2 0x4f5
0x3ac JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V331 = 0x1
0x3a5: V332 = S[0x1]
0x3a7: V333 = LT S3 V332
0x3a8: V334 = ISZERO V333
0x3a9: V335 = 0x4f5
0x3ac: JUMPI 0x4f5 V334
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3ad
[0x3ad:0x3b8]
---
Predecessors: [0x3a2]
Successors: [0x3b9, 0x3ba]
---
0x3ad PUSH1 0x1
0x3af DUP1
0x3b0 SLOAD
0x3b1 DUP6
0x3b2 SWAP1
0x3b3 DUP2
0x3b4 LT
0x3b5 PUSH2 0x3ba
0x3b8 JUMPI
---
0x3ad: V336 = 0x1
0x3b0: V337 = S[0x1]
0x3b4: V338 = LT S3 V337
0x3b5: V339 = 0x3ba
0x3b8: JUMPI 0x3ba V338
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x1, S3]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1, S3]

================================

Block 0x3b9
[0x3b9:0x3b9]
---
Predecessors: [0x3ad]
Successors: []
---
0x3b9 INVALID
---
0x3b9: INVALID 
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]

================================

Block 0x3ba
[0x3ba:0x3e0]
---
Predecessors: [0x3ad]
Successors: [0x3e1, 0x3e2]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x0
0x3bd SWAP2
0x3be DUP3
0x3bf MSTORE
0x3c0 PUSH1 0x20
0x3c2 SWAP1
0x3c3 SWAP2
0x3c4 SHA3
0x3c5 ADD
0x3c6 SLOAD
0x3c7 PUSH1 0x1
0x3c9 DUP1
0x3ca SLOAD
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 SWAP1
0x3d4 SWAP3
0x3d5 AND
0x3d6 SWAP5
0x3d7 POP
0x3d8 SWAP1
0x3d9 DUP6
0x3da SWAP1
0x3db DUP2
0x3dc LT
0x3dd PUSH2 0x3e2
0x3e0 JUMPI
---
0x3ba: JUMPDEST 
0x3bb: V340 = 0x0
0x3bf: M[0x0] = 0x1
0x3c0: V341 = 0x20
0x3c4: V342 = SHA3 0x0 0x20
0x3c5: V343 = ADD V342 S0
0x3c6: V344 = S[V343]
0x3c7: V345 = 0x1
0x3ca: V346 = S[0x1]
0x3cb: V347 = 0x1
0x3cd: V348 = 0xa0
0x3cf: V349 = 0x2
0x3d1: V350 = EXP 0x2 0xa0
0x3d2: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d5: V352 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V353 = LT S5 V346
0x3dd: V354 = 0x3e2
0x3e0: JUMPI 0x3e2 V353
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S5, V352, S3, S2, 0x1, S5]
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V352, S3, S2, 0x1, S5]

================================

Block 0x3e1
[0x3e1:0x3e1]
---
Predecessors: [0x3ba]
Successors: []
---
0x3e1 INVALID
---
0x3e1: INVALID 
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V352, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V352, S3, S2, 0x1, S0]

================================

Block 0x3e2
[0x3e2:0x438]
---
Predecessors: [0x3ba]
Successors: [0x439, 0x43d]
---
0x3e2 JUMPDEST
0x3e3 SWAP1
0x3e4 PUSH1 0x0
0x3e6 MSTORE
0x3e7 PUSH1 0x20
0x3e9 PUSH1 0x0
0x3eb SHA3
0x3ec ADD
0x3ed PUSH1 0x0
0x3ef SWAP1
0x3f0 SLOAD
0x3f1 SWAP1
0x3f2 PUSH2 0x100
0x3f5 EXP
0x3f6 SWAP1
0x3f7 DIV
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 AND
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 AND
0x40a PUSH4 0xaffed0e0
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP2
0x413 PUSH4 0xffffffff
0x418 AND
0x419 PUSH1 0xe0
0x41b PUSH1 0x2
0x41d EXP
0x41e MUL
0x41f DUP2
0x420 MSTORE
0x421 PUSH1 0x4
0x423 ADD
0x424 PUSH1 0x20
0x426 PUSH1 0x40
0x428 MLOAD
0x429 DUP1
0x42a DUP4
0x42b SUB
0x42c DUP2
0x42d PUSH1 0x0
0x42f DUP8
0x430 DUP1
0x431 EXTCODESIZE
0x432 ISZERO
0x433 DUP1
0x434 ISZERO
0x435 PUSH2 0x43d
0x438 JUMPI
---
0x3e2: JUMPDEST 
0x3e4: V355 = 0x0
0x3e6: M[0x0] = 0x1
0x3e7: V356 = 0x20
0x3e9: V357 = 0x0
0x3eb: V358 = SHA3 0x0 0x20
0x3ec: V359 = ADD V358 S0
0x3ed: V360 = 0x0
0x3f0: V361 = S[V359]
0x3f2: V362 = 0x100
0x3f5: V363 = EXP 0x100 0x0
0x3f7: V364 = DIV V361 0x1
0x3f8: V365 = 0x1
0x3fa: V366 = 0xa0
0x3fc: V367 = 0x2
0x3fe: V368 = EXP 0x2 0xa0
0x3ff: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x401: V371 = 0x1
0x403: V372 = 0xa0
0x405: V373 = 0x2
0x407: V374 = EXP 0x2 0xa0
0x408: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x409: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x40a: V377 = 0xaffed0e0
0x40f: V378 = 0x40
0x411: V379 = M[0x40]
0x413: V380 = 0xffffffff
0x418: V381 = AND 0xffffffff 0xaffed0e0
0x419: V382 = 0xe0
0x41b: V383 = 0x2
0x41d: V384 = EXP 0x2 0xe0
0x41e: V385 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xaffed0e0
0x420: M[V379] = 0xaffed0e000000000000000000000000000000000000000000000000000000000
0x421: V386 = 0x4
0x423: V387 = ADD 0x4 V379
0x424: V388 = 0x20
0x426: V389 = 0x40
0x428: V390 = M[0x40]
0x42b: V391 = SUB V387 V390
0x42d: V392 = 0x0
0x431: V393 = EXTCODESIZE V376
0x432: V394 = ISZERO V393
0x434: V395 = ISZERO V394
0x435: V396 = 0x43d
0x438: JUMPI 0x43d V395
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V352, S3, S2, 0x1, S0]
Stack pops: 2
Stack additions: [V376, 0xaffed0e0, V387, 0x20, V390, V391, V390, 0x0, V376, V394]
Exit stack: [S14, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, S4, S3, S2, V376, 0xaffed0e0, V387, 0x20, V390, V391, V390, 0x0, V376, V394]

================================

Block 0x439
[0x439:0x43c]
---
Predecessors: [0x3e2]
Successors: []
---
0x439 PUSH1 0x0
0x43b DUP1
0x43c REVERT
---
0x439: V397 = 0x0
0x43c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V352, S11, S10, V376, 0xaffed0e0, V387, 0x20, V390, V391, V390, 0x0, V376, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V352, S11, S10, V376, 0xaffed0e0, V387, 0x20, V390, V391, V390, 0x0, V376, V394]

================================

Block 0x43d
[0x43d:0x447]
---
Predecessors: [0x3e2]
Successors: [0x448, 0x451]
---
0x43d JUMPDEST
0x43e POP
0x43f GAS
0x440 CALL
0x441 ISZERO
0x442 DUP1
0x443 ISZERO
0x444 PUSH2 0x451
0x447 JUMPI
---
0x43d: JUMPDEST 
0x43f: V398 = GAS
0x440: V399 = CALL V398 V376 0x0 V390 V391 V390 0x20
0x441: V400 = ISZERO V399
0x443: V401 = ISZERO V400
0x444: V402 = 0x451
0x447: JUMPI 0x451 V401
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V352, S11, S10, V376, 0xaffed0e0, V387, 0x20, V390, V391, V390, 0x0, V376, V394]
Stack pops: 7
Stack additions: [V400]
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V352, S11, S10, V376, 0xaffed0e0, V387, V400]

================================

Block 0x448
[0x448:0x450]
---
Predecessors: [0x43d]
Successors: []
---
0x448 RETURNDATASIZE
0x449 PUSH1 0x0
0x44b DUP1
0x44c RETURNDATACOPY
0x44d RETURNDATASIZE
0x44e PUSH1 0x0
0x450 REVERT
---
0x448: V403 = RETURNDATASIZE
0x449: V404 = 0x0
0x44c: RETURNDATACOPY 0x0 0x0 V403
0x44d: V405 = RETURNDATASIZE
0x44e: V406 = 0x0
0x450: REVERT 0x0 V405
---
Entry stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V352, S5, S4, V376, 0xaffed0e0, V387, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V352, S5, S4, V376, 0xaffed0e0, V387, V400]

================================

Block 0x451
[0x451:0x462]
---
Predecessors: [0x43d]
Successors: [0x463, 0x467]
---
0x451 JUMPDEST
0x452 POP
0x453 POP
0x454 POP
0x455 POP
0x456 PUSH1 0x40
0x458 MLOAD
0x459 RETURNDATASIZE
0x45a PUSH1 0x20
0x45c DUP2
0x45d LT
0x45e ISZERO
0x45f PUSH2 0x467
0x462 JUMPI
---
0x451: JUMPDEST 
0x456: V407 = 0x40
0x458: V408 = M[0x40]
0x459: V409 = RETURNDATASIZE
0x45a: V410 = 0x20
0x45d: V411 = LT V409 0x20
0x45e: V412 = ISZERO V411
0x45f: V413 = 0x467
0x462: JUMPI 0x467 V412
---
Entry stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V352, S5, S4, V376, 0xaffed0e0, V387, V400]
Stack pops: 4
Stack additions: [V408, V409]
Exit stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V352, S5, S4, V408, V409]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x451]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V414 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V352, S3, S2, V408, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V352, S3, S2, V408, V409]

================================

Block 0x467
[0x467:0x474]
---
Predecessors: [0x451]
Successors: [0x9b9]
---
0x467 JUMPDEST
0x468 POP
0x469 MLOAD
0x46a SWAP2
0x46b POP
0x46c PUSH2 0x475
0x46f DUP4
0x470 DUP4
0x471 PUSH2 0x9b9
0x474 JUMP
---
0x467: JUMPDEST 
0x469: V415 = M[V408]
0x46c: V416 = 0x475
0x471: V417 = 0x9b9
0x474: JUMP 0x9b9
---
Entry stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V352, S3, S2, V408, V409]
Stack pops: 5
Stack additions: [S4, V415, S2, 0x475, S4, V415]
Exit stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V352, V415, S2, 0x475, V352, V415]

================================

Block 0x475
[0x475:0x480]
---
Predecessors: [0x9b9]
Successors: [0xa60]
---
0x475 JUMPDEST
0x476 SWAP1
0x477 POP
0x478 PUSH2 0x481
0x47b DUP2
0x47c DUP7
0x47d PUSH2 0xa60
0x480 JUMP
---
0x475: JUMPDEST 
0x478: V418 = 0x481
0x47d: V419 = 0xa60
0x480: JUMP 0xa60
---
Entry stack: [V13, 0x69, S11, {0x0, 0x69}, S9, S8, S7, S6, S5, S4, S3, S2, S1, V960]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S0, 0x481, S0, S5]
Exit stack: [V13, 0x69, S11, {0x0, 0x69}, S9, S8, S7, S6, S5, S4, S3, S2, V960, 0x481, V960, S5]

================================

Block 0x481
[0x481:0x486]
---
Predecessors: [0x818, 0xc7c]
Successors: [0x487, 0x4ea]
---
0x481 JUMPDEST
0x482 ISZERO
0x483 PUSH2 0x4ea
0x486 JUMPI
---
0x481: JUMPDEST 
0x482: V420 = ISZERO S0
0x483: V421 = 0x4ea
0x486: JUMPI 0x4ea V420
---
Entry stack: [V13, 0x69, S17, {0x0, 0x69}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x69, S17, {0x0, 0x69}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x487
[0x487:0x4c7]
---
Predecessors: [0x481]
Successors: [0x4c8, 0x4cc]
---
0x487 DUP3
0x488 PUSH1 0x1
0x48a PUSH1 0xa0
0x48c PUSH1 0x2
0x48e EXP
0x48f SUB
0x490 AND
0x491 PUSH4 0xb8d1beb1
0x496 PUSH8 0x16345785d8a0000
0x49f PUSH1 0x40
0x4a1 MLOAD
0x4a2 DUP3
0x4a3 PUSH4 0xffffffff
0x4a8 AND
0x4a9 PUSH1 0xe0
0x4ab PUSH1 0x2
0x4ad EXP
0x4ae MUL
0x4af DUP2
0x4b0 MSTORE
0x4b1 PUSH1 0x4
0x4b3 ADD
0x4b4 PUSH1 0x0
0x4b6 PUSH1 0x40
0x4b8 MLOAD
0x4b9 DUP1
0x4ba DUP4
0x4bb SUB
0x4bc DUP2
0x4bd DUP6
0x4be DUP9
0x4bf DUP1
0x4c0 EXTCODESIZE
0x4c1 ISZERO
0x4c2 DUP1
0x4c3 ISZERO
0x4c4 PUSH2 0x4cc
0x4c7 JUMPI
---
0x488: V422 = 0x1
0x48a: V423 = 0xa0
0x48c: V424 = 0x2
0x48e: V425 = EXP 0x2 0xa0
0x48f: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x490: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x491: V428 = 0xb8d1beb1
0x496: V429 = 0x16345785d8a0000
0x49f: V430 = 0x40
0x4a1: V431 = M[0x40]
0x4a3: V432 = 0xffffffff
0x4a8: V433 = AND 0xffffffff 0xb8d1beb1
0x4a9: V434 = 0xe0
0x4ab: V435 = 0x2
0x4ad: V436 = EXP 0x2 0xe0
0x4ae: V437 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb8d1beb1
0x4b0: M[V431] = 0xb8d1beb100000000000000000000000000000000000000000000000000000000
0x4b1: V438 = 0x4
0x4b3: V439 = ADD 0x4 V431
0x4b4: V440 = 0x0
0x4b6: V441 = 0x40
0x4b8: V442 = M[0x40]
0x4bb: V443 = SUB V439 V442
0x4c0: V444 = EXTCODESIZE V427
0x4c1: V445 = ISZERO V444
0x4c3: V446 = ISZERO V445
0x4c4: V447 = 0x4cc
0x4c7: JUMPI 0x4cc V446
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V427, 0xb8d1beb1, 0x16345785d8a0000, V439, 0x0, V442, V443, V442, 0x16345785d8a0000, V427, V445]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V427, 0xb8d1beb1, 0x16345785d8a0000, V439, 0x0, V442, V443, V442, 0x16345785d8a0000, V427, V445]

================================

Block 0x4c8
[0x4c8:0x4cb]
---
Predecessors: [0x487]
Successors: []
---
0x4c8 PUSH1 0x0
0x4ca DUP1
0x4cb REVERT
---
0x4c8: V448 = 0x0
0x4cb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V427, 0xb8d1beb1, 0x16345785d8a0000, V439, 0x0, V442, V443, V442, 0x16345785d8a0000, V427, V445]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V427, 0xb8d1beb1, 0x16345785d8a0000, V439, 0x0, V442, V443, V442, 0x16345785d8a0000, V427, V445]

================================

Block 0x4cc
[0x4cc:0x4d6]
---
Predecessors: [0x487, 0x633]
Successors: [0x4d7, 0x4e0]
---
0x4cc JUMPDEST
0x4cd POP
0x4ce GAS
0x4cf CALL
0x4d0 ISZERO
0x4d1 DUP1
0x4d2 ISZERO
0x4d3 PUSH2 0x4e0
0x4d6 JUMPI
---
0x4cc: JUMPDEST 
0x4ce: V449 = GAS
0x4cf: V450 = CALL V449 S1 0x16345785d8a0000 S3 S4 S5 0x0
0x4d0: V451 = ISZERO V450
0x4d2: V452 = ISZERO V451
0x4d3: V453 = 0x4e0
0x4d6: JUMPI 0x4e0 V452
---
Entry stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0xb8d1beb1, 0x16345785d8a0000, S7, 0x0, S5, S4, S3, 0x16345785d8a0000, S1, S0]
Stack pops: 7
Stack additions: [V451]
Exit stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0xb8d1beb1, 0x16345785d8a0000, S7, V451]

================================

Block 0x4d7
[0x4d7:0x4df]
---
Predecessors: [0x4cc]
Successors: []
---
0x4d7 RETURNDATASIZE
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db RETURNDATACOPY
0x4dc RETURNDATASIZE
0x4dd PUSH1 0x0
0x4df REVERT
---
0x4d7: V454 = RETURNDATASIZE
0x4d8: V455 = 0x0
0x4db: RETURNDATACOPY 0x0 0x0 V454
0x4dc: V456 = RETURNDATASIZE
0x4dd: V457 = 0x0
0x4df: REVERT 0x0 V456
---
Entry stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xb8d1beb1, 0x16345785d8a0000, S1, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xb8d1beb1, 0x16345785d8a0000, S1, V451]

================================

Block 0x4e0
[0x4e0:0x4e9]
---
Predecessors: [0x4cc]
Successors: [0x818]
---
0x4e0 JUMPDEST
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 POP
0x4e6 PUSH2 0x818
0x4e9 JUMP
---
0x4e0: JUMPDEST 
0x4e6: V458 = 0x818
0x4e9: JUMP 0x818
---
Entry stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xb8d1beb1, 0x16345785d8a0000, S1, V451]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5]

================================

Block 0x4ea
[0x4ea:0x4f4]
---
Predecessors: [0x481]
Successors: [0x3a2]
---
0x4ea JUMPDEST
0x4eb PUSH1 0x1
0x4ed SWAP1
0x4ee SWAP4
0x4ef ADD
0x4f0 SWAP3
0x4f1 PUSH2 0x3a2
0x4f4 JUMP
---
0x4ea: JUMPDEST 
0x4eb: V459 = 0x1
0x4ef: V460 = ADD S3 0x1
0x4f1: V461 = 0x3a2
0x4f4: JUMP 0x3a2
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V460, S2, S1, S0]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V460, S2, S1, S0]

================================

Block 0x4f5
[0x4f5:0x4f9]
---
Predecessors: [0x3a2]
Successors: [0x4fa]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x0
0x4f8 SWAP4
0x4f9 POP
---
0x4f5: JUMPDEST 
0x4f6: V462 = 0x0
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]

================================

Block 0x4fa
[0x4fa:0x504]
---
Predecessors: [0x4f5, 0x67d]
Successors: [0x505, 0x688]
---
0x4fa JUMPDEST
0x4fb PUSH1 0x1
0x4fd SLOAD
0x4fe DUP5
0x4ff LT
0x500 ISZERO
0x501 PUSH2 0x688
0x504 JUMPI
---
0x4fa: JUMPDEST 
0x4fb: V463 = 0x1
0x4fd: V464 = S[0x1]
0x4ff: V465 = LT S3 V464
0x500: V466 = ISZERO V465
0x501: V467 = 0x688
0x504: JUMPI 0x688 V466
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x505
[0x505:0x510]
---
Predecessors: [0x4fa]
Successors: [0x511, 0x512]
---
0x505 PUSH1 0x1
0x507 DUP1
0x508 SLOAD
0x509 DUP6
0x50a SWAP1
0x50b DUP2
0x50c LT
0x50d PUSH2 0x512
0x510 JUMPI
---
0x505: V468 = 0x1
0x508: V469 = S[0x1]
0x50c: V470 = LT S3 V469
0x50d: V471 = 0x512
0x510: JUMPI 0x512 V470
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x1, S3]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1, S3]

================================

Block 0x511
[0x511:0x511]
---
Predecessors: [0x505]
Successors: []
---
0x511 INVALID
---
0x511: INVALID 
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]

================================

Block 0x512
[0x512:0x538]
---
Predecessors: [0x505]
Successors: [0x539, 0x53a]
---
0x512 JUMPDEST
0x513 PUSH1 0x0
0x515 SWAP2
0x516 DUP3
0x517 MSTORE
0x518 PUSH1 0x20
0x51a SWAP1
0x51b SWAP2
0x51c SHA3
0x51d ADD
0x51e SLOAD
0x51f PUSH1 0x1
0x521 DUP1
0x522 SLOAD
0x523 PUSH1 0x1
0x525 PUSH1 0xa0
0x527 PUSH1 0x2
0x529 EXP
0x52a SUB
0x52b SWAP1
0x52c SWAP3
0x52d AND
0x52e SWAP5
0x52f POP
0x530 SWAP1
0x531 DUP6
0x532 SWAP1
0x533 DUP2
0x534 LT
0x535 PUSH2 0x53a
0x538 JUMPI
---
0x512: JUMPDEST 
0x513: V472 = 0x0
0x517: M[0x0] = 0x1
0x518: V473 = 0x20
0x51c: V474 = SHA3 0x0 0x20
0x51d: V475 = ADD V474 S0
0x51e: V476 = S[V475]
0x51f: V477 = 0x1
0x522: V478 = S[0x1]
0x523: V479 = 0x1
0x525: V480 = 0xa0
0x527: V481 = 0x2
0x529: V482 = EXP 0x2 0xa0
0x52a: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52d: V484 = AND V476 0xffffffffffffffffffffffffffffffffffffffff
0x534: V485 = LT S5 V478
0x535: V486 = 0x53a
0x538: JUMPI 0x53a V485
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S5, V484, S3, S2, 0x1, S5]
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V484, S3, S2, 0x1, S5]

================================

Block 0x539
[0x539:0x539]
---
Predecessors: [0x512]
Successors: []
---
0x539 INVALID
---
0x539: INVALID 
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V484, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V484, S3, S2, 0x1, S0]

================================

Block 0x53a
[0x53a:0x590]
---
Predecessors: [0x512]
Successors: [0x591, 0x595]
---
0x53a JUMPDEST
0x53b SWAP1
0x53c PUSH1 0x0
0x53e MSTORE
0x53f PUSH1 0x20
0x541 PUSH1 0x0
0x543 SHA3
0x544 ADD
0x545 PUSH1 0x0
0x547 SWAP1
0x548 SLOAD
0x549 SWAP1
0x54a PUSH2 0x100
0x54d EXP
0x54e SWAP1
0x54f DIV
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 AND
0x559 PUSH1 0x1
0x55b PUSH1 0xa0
0x55d PUSH1 0x2
0x55f EXP
0x560 SUB
0x561 AND
0x562 PUSH4 0xaffed0e0
0x567 PUSH1 0x40
0x569 MLOAD
0x56a DUP2
0x56b PUSH4 0xffffffff
0x570 AND
0x571 PUSH1 0xe0
0x573 PUSH1 0x2
0x575 EXP
0x576 MUL
0x577 DUP2
0x578 MSTORE
0x579 PUSH1 0x4
0x57b ADD
0x57c PUSH1 0x20
0x57e PUSH1 0x40
0x580 MLOAD
0x581 DUP1
0x582 DUP4
0x583 SUB
0x584 DUP2
0x585 PUSH1 0x0
0x587 DUP8
0x588 DUP1
0x589 EXTCODESIZE
0x58a ISZERO
0x58b DUP1
0x58c ISZERO
0x58d PUSH2 0x595
0x590 JUMPI
---
0x53a: JUMPDEST 
0x53c: V487 = 0x0
0x53e: M[0x0] = 0x1
0x53f: V488 = 0x20
0x541: V489 = 0x0
0x543: V490 = SHA3 0x0 0x20
0x544: V491 = ADD V490 S0
0x545: V492 = 0x0
0x548: V493 = S[V491]
0x54a: V494 = 0x100
0x54d: V495 = EXP 0x100 0x0
0x54f: V496 = DIV V493 0x1
0x550: V497 = 0x1
0x552: V498 = 0xa0
0x554: V499 = 0x2
0x556: V500 = EXP 0x2 0xa0
0x557: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x558: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x559: V503 = 0x1
0x55b: V504 = 0xa0
0x55d: V505 = 0x2
0x55f: V506 = EXP 0x2 0xa0
0x560: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x561: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x562: V509 = 0xaffed0e0
0x567: V510 = 0x40
0x569: V511 = M[0x40]
0x56b: V512 = 0xffffffff
0x570: V513 = AND 0xffffffff 0xaffed0e0
0x571: V514 = 0xe0
0x573: V515 = 0x2
0x575: V516 = EXP 0x2 0xe0
0x576: V517 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xaffed0e0
0x578: M[V511] = 0xaffed0e000000000000000000000000000000000000000000000000000000000
0x579: V518 = 0x4
0x57b: V519 = ADD 0x4 V511
0x57c: V520 = 0x20
0x57e: V521 = 0x40
0x580: V522 = M[0x40]
0x583: V523 = SUB V519 V522
0x585: V524 = 0x0
0x589: V525 = EXTCODESIZE V508
0x58a: V526 = ISZERO V525
0x58c: V527 = ISZERO V526
0x58d: V528 = 0x595
0x590: JUMPI 0x595 V527
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V484, S3, S2, 0x1, S0]
Stack pops: 2
Stack additions: [V508, 0xaffed0e0, V519, 0x20, V522, V523, V522, 0x0, V508, V526]
Exit stack: [S14, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, S4, S3, S2, V508, 0xaffed0e0, V519, 0x20, V522, V523, V522, 0x0, V508, V526]

================================

Block 0x591
[0x591:0x594]
---
Predecessors: [0x53a]
Successors: []
---
0x591 PUSH1 0x0
0x593 DUP1
0x594 REVERT
---
0x591: V529 = 0x0
0x594: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V484, S11, S10, V508, 0xaffed0e0, V519, 0x20, V522, V523, V522, 0x0, V508, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V484, S11, S10, V508, 0xaffed0e0, V519, 0x20, V522, V523, V522, 0x0, V508, V526]

================================

Block 0x595
[0x595:0x59f]
---
Predecessors: [0x53a]
Successors: [0x5a0, 0x5a9]
---
0x595 JUMPDEST
0x596 POP
0x597 GAS
0x598 CALL
0x599 ISZERO
0x59a DUP1
0x59b ISZERO
0x59c PUSH2 0x5a9
0x59f JUMPI
---
0x595: JUMPDEST 
0x597: V530 = GAS
0x598: V531 = CALL V530 V508 0x0 V522 V523 V522 0x20
0x599: V532 = ISZERO V531
0x59b: V533 = ISZERO V532
0x59c: V534 = 0x5a9
0x59f: JUMPI 0x5a9 V533
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V484, S11, S10, V508, 0xaffed0e0, V519, 0x20, V522, V523, V522, 0x0, V508, V526]
Stack pops: 7
Stack additions: [V532]
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V484, S11, S10, V508, 0xaffed0e0, V519, V532]

================================

Block 0x5a0
[0x5a0:0x5a8]
---
Predecessors: [0x595]
Successors: []
---
0x5a0 RETURNDATASIZE
0x5a1 PUSH1 0x0
0x5a3 DUP1
0x5a4 RETURNDATACOPY
0x5a5 RETURNDATASIZE
0x5a6 PUSH1 0x0
0x5a8 REVERT
---
0x5a0: V535 = RETURNDATASIZE
0x5a1: V536 = 0x0
0x5a4: RETURNDATACOPY 0x0 0x0 V535
0x5a5: V537 = RETURNDATASIZE
0x5a6: V538 = 0x0
0x5a8: REVERT 0x0 V537
---
Entry stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V484, S5, S4, V508, 0xaffed0e0, V519, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V484, S5, S4, V508, 0xaffed0e0, V519, V532]

================================

Block 0x5a9
[0x5a9:0x5ba]
---
Predecessors: [0x595]
Successors: [0x5bb, 0x5bf]
---
0x5a9 JUMPDEST
0x5aa POP
0x5ab POP
0x5ac POP
0x5ad POP
0x5ae PUSH1 0x40
0x5b0 MLOAD
0x5b1 RETURNDATASIZE
0x5b2 PUSH1 0x20
0x5b4 DUP2
0x5b5 LT
0x5b6 ISZERO
0x5b7 PUSH2 0x5bf
0x5ba JUMPI
---
0x5a9: JUMPDEST 
0x5ae: V539 = 0x40
0x5b0: V540 = M[0x40]
0x5b1: V541 = RETURNDATASIZE
0x5b2: V542 = 0x20
0x5b5: V543 = LT V541 0x20
0x5b6: V544 = ISZERO V543
0x5b7: V545 = 0x5bf
0x5ba: JUMPI 0x5bf V544
---
Entry stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V484, S5, S4, V508, 0xaffed0e0, V519, V532]
Stack pops: 4
Stack additions: [V540, V541]
Exit stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V484, S5, S4, V540, V541]

================================

Block 0x5bb
[0x5bb:0x5be]
---
Predecessors: [0x5a9]
Successors: []
---
0x5bb PUSH1 0x0
0x5bd DUP1
0x5be REVERT
---
0x5bb: V546 = 0x0
0x5be: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V484, S3, S2, V540, V541]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V484, S3, S2, V540, V541]

================================

Block 0x5bf
[0x5bf:0x5cf]
---
Predecessors: [0x5a9]
Successors: [0x9b9]
---
0x5bf JUMPDEST
0x5c0 POP
0x5c1 MLOAD
0x5c2 PUSH1 0x1
0x5c4 ADD
0x5c5 SWAP2
0x5c6 POP
0x5c7 PUSH2 0x5d0
0x5ca DUP4
0x5cb DUP4
0x5cc PUSH2 0x9b9
0x5cf JUMP
---
0x5bf: JUMPDEST 
0x5c1: V547 = M[V540]
0x5c2: V548 = 0x1
0x5c4: V549 = ADD 0x1 V547
0x5c7: V550 = 0x5d0
0x5cc: V551 = 0x9b9
0x5cf: JUMP 0x9b9
---
Entry stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V484, S3, S2, V540, V541]
Stack pops: 5
Stack additions: [S4, V549, S2, 0x5d0, S4, V549]
Exit stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V484, V549, S2, 0x5d0, V484, V549]

================================

Block 0x5d0
[0x5d0:0x5db]
---
Predecessors: [0x9b9]
Successors: [0xa60]
---
0x5d0 JUMPDEST
0x5d1 SWAP1
0x5d2 POP
0x5d3 PUSH2 0x5dc
0x5d6 DUP2
0x5d7 DUP7
0x5d8 PUSH2 0xa60
0x5db JUMP
---
0x5d0: JUMPDEST 
0x5d3: V552 = 0x5dc
0x5d8: V553 = 0xa60
0x5db: JUMP 0xa60
---
Entry stack: [V13, 0x69, S11, {0x0, 0x69}, S9, S8, S7, S6, S5, S4, S3, S2, S1, V960]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S0, 0x5dc, S0, S5]
Exit stack: [V13, 0x69, S11, {0x0, 0x69}, S9, S8, S7, S6, S5, S4, S3, S2, V960, 0x5dc, V960, S5]

================================

Block 0x5dc
[0x5dc:0x5e1]
---
Predecessors: [0x818, 0xc7c]
Successors: [0x5e2, 0x67d]
---
0x5dc JUMPDEST
0x5dd ISZERO
0x5de PUSH2 0x67d
0x5e1 JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V554 = ISZERO S0
0x5de: V555 = 0x67d
0x5e1: JUMPI 0x67d V554
---
Entry stack: [V13, 0x69, S17, {0x0, 0x69}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x69, S17, {0x0, 0x69}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x5e2
[0x5e2:0x61a]
---
Predecessors: [0x5dc]
Successors: [0x61b, 0x61f]
---
0x5e2 DUP3
0x5e3 PUSH1 0x1
0x5e5 PUSH1 0xa0
0x5e7 PUSH1 0x2
0x5e9 EXP
0x5ea SUB
0x5eb AND
0x5ec PUSH4 0xcfc09032
0x5f1 PUSH1 0x40
0x5f3 MLOAD
0x5f4 DUP2
0x5f5 PUSH4 0xffffffff
0x5fa AND
0x5fb PUSH1 0xe0
0x5fd PUSH1 0x2
0x5ff EXP
0x600 MUL
0x601 DUP2
0x602 MSTORE
0x603 PUSH1 0x4
0x605 ADD
0x606 PUSH1 0x0
0x608 PUSH1 0x40
0x60a MLOAD
0x60b DUP1
0x60c DUP4
0x60d SUB
0x60e DUP2
0x60f PUSH1 0x0
0x611 DUP8
0x612 DUP1
0x613 EXTCODESIZE
0x614 ISZERO
0x615 DUP1
0x616 ISZERO
0x617 PUSH2 0x61f
0x61a JUMPI
---
0x5e3: V556 = 0x1
0x5e5: V557 = 0xa0
0x5e7: V558 = 0x2
0x5e9: V559 = EXP 0x2 0xa0
0x5ea: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5eb: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x5ec: V562 = 0xcfc09032
0x5f1: V563 = 0x40
0x5f3: V564 = M[0x40]
0x5f5: V565 = 0xffffffff
0x5fa: V566 = AND 0xffffffff 0xcfc09032
0x5fb: V567 = 0xe0
0x5fd: V568 = 0x2
0x5ff: V569 = EXP 0x2 0xe0
0x600: V570 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xcfc09032
0x602: M[V564] = 0xcfc0903200000000000000000000000000000000000000000000000000000000
0x603: V571 = 0x4
0x605: V572 = ADD 0x4 V564
0x606: V573 = 0x0
0x608: V574 = 0x40
0x60a: V575 = M[0x40]
0x60d: V576 = SUB V572 V575
0x60f: V577 = 0x0
0x613: V578 = EXTCODESIZE V561
0x614: V579 = ISZERO V578
0x616: V580 = ISZERO V579
0x617: V581 = 0x61f
0x61a: JUMPI 0x61f V580
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V561, 0xcfc09032, V572, 0x0, V575, V576, V575, 0x0, V561, V579]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V561, 0xcfc09032, V572, 0x0, V575, V576, V575, 0x0, V561, V579]

================================

Block 0x61b
[0x61b:0x61e]
---
Predecessors: [0x5e2]
Successors: []
---
0x61b PUSH1 0x0
0x61d DUP1
0x61e REVERT
---
0x61b: V582 = 0x0
0x61e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V561, 0xcfc09032, V572, 0x0, V575, V576, V575, 0x0, V561, V579]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V561, 0xcfc09032, V572, 0x0, V575, V576, V575, 0x0, V561, V579]

================================

Block 0x61f
[0x61f:0x629]
---
Predecessors: [0x5e2, 0x7c6]
Successors: [0x62a, 0x633]
---
0x61f JUMPDEST
0x620 POP
0x621 GAS
0x622 CALL
0x623 ISZERO
0x624 DUP1
0x625 ISZERO
0x626 PUSH2 0x633
0x629 JUMPI
---
0x61f: JUMPDEST 
0x621: V583 = GAS
0x622: V584 = CALL V583 S1 0x0 S3 S4 S5 0x0
0x623: V585 = ISZERO V584
0x625: V586 = ISZERO V585
0x626: V587 = 0x633
0x629: JUMPI 0x633 V586
---
Entry stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0xcfc09032, S7, 0x0, S5, S4, S3, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V585]
Exit stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0xcfc09032, S7, V585]

================================

Block 0x62a
[0x62a:0x632]
---
Predecessors: [0x61f]
Successors: []
---
0x62a RETURNDATASIZE
0x62b PUSH1 0x0
0x62d DUP1
0x62e RETURNDATACOPY
0x62f RETURNDATASIZE
0x630 PUSH1 0x0
0x632 REVERT
---
0x62a: V588 = RETURNDATASIZE
0x62b: V589 = 0x0
0x62e: RETURNDATACOPY 0x0 0x0 V588
0x62f: V590 = RETURNDATASIZE
0x630: V591 = 0x0
0x632: REVERT 0x0 V590
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xcfc09032, S1, V585]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xcfc09032, S1, V585]

================================

Block 0x633
[0x633:0x678]
---
Predecessors: [0x61f]
Successors: [0x4cc, 0x679]
---
0x633 JUMPDEST
0x634 POP
0x635 POP
0x636 POP
0x637 POP
0x638 DUP3
0x639 PUSH1 0x1
0x63b PUSH1 0xa0
0x63d PUSH1 0x2
0x63f EXP
0x640 SUB
0x641 AND
0x642 PUSH4 0xb8d1beb1
0x647 PUSH8 0x16345785d8a0000
0x650 PUSH1 0x40
0x652 MLOAD
0x653 DUP3
0x654 PUSH4 0xffffffff
0x659 AND
0x65a PUSH1 0xe0
0x65c PUSH1 0x2
0x65e EXP
0x65f MUL
0x660 DUP2
0x661 MSTORE
0x662 PUSH1 0x4
0x664 ADD
0x665 PUSH1 0x0
0x667 PUSH1 0x40
0x669 MLOAD
0x66a DUP1
0x66b DUP4
0x66c SUB
0x66d DUP2
0x66e DUP6
0x66f DUP9
0x670 DUP1
0x671 EXTCODESIZE
0x672 ISZERO
0x673 DUP1
0x674 ISZERO
0x675 PUSH2 0x4cc
0x678 JUMPI
---
0x633: JUMPDEST 
0x639: V592 = 0x1
0x63b: V593 = 0xa0
0x63d: V594 = 0x2
0x63f: V595 = EXP 0x2 0xa0
0x640: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x641: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x642: V598 = 0xb8d1beb1
0x647: V599 = 0x16345785d8a0000
0x650: V600 = 0x40
0x652: V601 = M[0x40]
0x654: V602 = 0xffffffff
0x659: V603 = AND 0xffffffff 0xb8d1beb1
0x65a: V604 = 0xe0
0x65c: V605 = 0x2
0x65e: V606 = EXP 0x2 0xe0
0x65f: V607 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb8d1beb1
0x661: M[V601] = 0xb8d1beb100000000000000000000000000000000000000000000000000000000
0x662: V608 = 0x4
0x664: V609 = ADD 0x4 V601
0x665: V610 = 0x0
0x667: V611 = 0x40
0x669: V612 = M[0x40]
0x66c: V613 = SUB V609 V612
0x671: V614 = EXTCODESIZE V597
0x672: V615 = ISZERO V614
0x674: V616 = ISZERO V615
0x675: V617 = 0x4cc
0x678: JUMPI 0x4cc V616
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xcfc09032, S1, V585]
Stack pops: 7
Stack additions: [S6, S5, S4, V597, 0xb8d1beb1, 0x16345785d8a0000, V609, 0x0, V612, V613, V612, 0x16345785d8a0000, V597, V615]
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V597, 0xb8d1beb1, 0x16345785d8a0000, V609, 0x0, V612, V613, V612, 0x16345785d8a0000, V597, V615]

================================

Block 0x679
[0x679:0x67c]
---
Predecessors: [0x633]
Successors: []
---
0x679 PUSH1 0x0
0x67b DUP1
0x67c REVERT
---
0x679: V618 = 0x0
0x67c: REVERT 0x0 0x0
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V597, 0xb8d1beb1, 0x16345785d8a0000, V609, 0x0, V612, V613, V612, 0x16345785d8a0000, V597, V615]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V597, 0xb8d1beb1, 0x16345785d8a0000, V609, 0x0, V612, V613, V612, 0x16345785d8a0000, V597, V615]

================================

Block 0x67d
[0x67d:0x687]
---
Predecessors: [0x5dc]
Successors: [0x4fa]
---
0x67d JUMPDEST
0x67e PUSH1 0x1
0x680 SWAP1
0x681 SWAP4
0x682 ADD
0x683 SWAP3
0x684 PUSH2 0x4fa
0x687 JUMP
---
0x67d: JUMPDEST 
0x67e: V619 = 0x1
0x682: V620 = ADD S3 0x1
0x684: V621 = 0x4fa
0x687: JUMP 0x4fa
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V620, S2, S1, S0]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V620, S2, S1, S0]

================================

Block 0x688
[0x688:0x68c]
---
Predecessors: [0x4fa]
Successors: [0x68d]
---
0x688 JUMPDEST
0x689 PUSH1 0x0
0x68b SWAP4
0x68c POP
---
0x688: JUMPDEST 
0x689: V622 = 0x0
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]

================================

Block 0x68d
[0x68d:0x697]
---
Predecessors: [0x688, 0x808]
Successors: [0x698, 0x813]
---
0x68d JUMPDEST
0x68e PUSH1 0x1
0x690 SLOAD
0x691 DUP5
0x692 LT
0x693 ISZERO
0x694 PUSH2 0x813
0x697 JUMPI
---
0x68d: JUMPDEST 
0x68e: V623 = 0x1
0x690: V624 = S[0x1]
0x692: V625 = LT S3 V624
0x693: V626 = ISZERO V625
0x694: V627 = 0x813
0x697: JUMPI 0x813 V626
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x698
[0x698:0x6a3]
---
Predecessors: [0x68d]
Successors: [0x6a4, 0x6a5]
---
0x698 PUSH1 0x1
0x69a DUP1
0x69b SLOAD
0x69c DUP6
0x69d SWAP1
0x69e DUP2
0x69f LT
0x6a0 PUSH2 0x6a5
0x6a3 JUMPI
---
0x698: V628 = 0x1
0x69b: V629 = S[0x1]
0x69f: V630 = LT S3 V629
0x6a0: V631 = 0x6a5
0x6a3: JUMPI 0x6a5 V630
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x1, S3]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1, S3]

================================

Block 0x6a4
[0x6a4:0x6a4]
---
Predecessors: [0x698]
Successors: []
---
0x6a4 INVALID
---
0x6a4: INVALID 
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]

================================

Block 0x6a5
[0x6a5:0x6cb]
---
Predecessors: [0x698]
Successors: [0x6cc, 0x6cd]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x0
0x6a8 SWAP2
0x6a9 DUP3
0x6aa MSTORE
0x6ab PUSH1 0x20
0x6ad SWAP1
0x6ae SWAP2
0x6af SHA3
0x6b0 ADD
0x6b1 SLOAD
0x6b2 PUSH1 0x1
0x6b4 DUP1
0x6b5 SLOAD
0x6b6 PUSH1 0x1
0x6b8 PUSH1 0xa0
0x6ba PUSH1 0x2
0x6bc EXP
0x6bd SUB
0x6be SWAP1
0x6bf SWAP3
0x6c0 AND
0x6c1 SWAP5
0x6c2 POP
0x6c3 SWAP1
0x6c4 DUP6
0x6c5 SWAP1
0x6c6 DUP2
0x6c7 LT
0x6c8 PUSH2 0x6cd
0x6cb JUMPI
---
0x6a5: JUMPDEST 
0x6a6: V632 = 0x0
0x6aa: M[0x0] = 0x1
0x6ab: V633 = 0x20
0x6af: V634 = SHA3 0x0 0x20
0x6b0: V635 = ADD V634 S0
0x6b1: V636 = S[V635]
0x6b2: V637 = 0x1
0x6b5: V638 = S[0x1]
0x6b6: V639 = 0x1
0x6b8: V640 = 0xa0
0x6ba: V641 = 0x2
0x6bc: V642 = EXP 0x2 0xa0
0x6bd: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c0: V644 = AND V636 0xffffffffffffffffffffffffffffffffffffffff
0x6c7: V645 = LT S5 V638
0x6c8: V646 = 0x6cd
0x6cb: JUMPI 0x6cd V645
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S5, V644, S3, S2, 0x1, S5]
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V644, S3, S2, 0x1, S5]

================================

Block 0x6cc
[0x6cc:0x6cc]
---
Predecessors: [0x6a5]
Successors: []
---
0x6cc INVALID
---
0x6cc: INVALID 
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V644, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V644, S3, S2, 0x1, S0]

================================

Block 0x6cd
[0x6cd:0x723]
---
Predecessors: [0x6a5]
Successors: [0x724, 0x728]
---
0x6cd JUMPDEST
0x6ce SWAP1
0x6cf PUSH1 0x0
0x6d1 MSTORE
0x6d2 PUSH1 0x20
0x6d4 PUSH1 0x0
0x6d6 SHA3
0x6d7 ADD
0x6d8 PUSH1 0x0
0x6da SWAP1
0x6db SLOAD
0x6dc SWAP1
0x6dd PUSH2 0x100
0x6e0 EXP
0x6e1 SWAP1
0x6e2 DIV
0x6e3 PUSH1 0x1
0x6e5 PUSH1 0xa0
0x6e7 PUSH1 0x2
0x6e9 EXP
0x6ea SUB
0x6eb AND
0x6ec PUSH1 0x1
0x6ee PUSH1 0xa0
0x6f0 PUSH1 0x2
0x6f2 EXP
0x6f3 SUB
0x6f4 AND
0x6f5 PUSH4 0xaffed0e0
0x6fa PUSH1 0x40
0x6fc MLOAD
0x6fd DUP2
0x6fe PUSH4 0xffffffff
0x703 AND
0x704 PUSH1 0xe0
0x706 PUSH1 0x2
0x708 EXP
0x709 MUL
0x70a DUP2
0x70b MSTORE
0x70c PUSH1 0x4
0x70e ADD
0x70f PUSH1 0x20
0x711 PUSH1 0x40
0x713 MLOAD
0x714 DUP1
0x715 DUP4
0x716 SUB
0x717 DUP2
0x718 PUSH1 0x0
0x71a DUP8
0x71b DUP1
0x71c EXTCODESIZE
0x71d ISZERO
0x71e DUP1
0x71f ISZERO
0x720 PUSH2 0x728
0x723 JUMPI
---
0x6cd: JUMPDEST 
0x6cf: V647 = 0x0
0x6d1: M[0x0] = 0x1
0x6d2: V648 = 0x20
0x6d4: V649 = 0x0
0x6d6: V650 = SHA3 0x0 0x20
0x6d7: V651 = ADD V650 S0
0x6d8: V652 = 0x0
0x6db: V653 = S[V651]
0x6dd: V654 = 0x100
0x6e0: V655 = EXP 0x100 0x0
0x6e2: V656 = DIV V653 0x1
0x6e3: V657 = 0x1
0x6e5: V658 = 0xa0
0x6e7: V659 = 0x2
0x6e9: V660 = EXP 0x2 0xa0
0x6ea: V661 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6eb: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0x6ec: V663 = 0x1
0x6ee: V664 = 0xa0
0x6f0: V665 = 0x2
0x6f2: V666 = EXP 0x2 0xa0
0x6f3: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f4: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x6f5: V669 = 0xaffed0e0
0x6fa: V670 = 0x40
0x6fc: V671 = M[0x40]
0x6fe: V672 = 0xffffffff
0x703: V673 = AND 0xffffffff 0xaffed0e0
0x704: V674 = 0xe0
0x706: V675 = 0x2
0x708: V676 = EXP 0x2 0xe0
0x709: V677 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xaffed0e0
0x70b: M[V671] = 0xaffed0e000000000000000000000000000000000000000000000000000000000
0x70c: V678 = 0x4
0x70e: V679 = ADD 0x4 V671
0x70f: V680 = 0x20
0x711: V681 = 0x40
0x713: V682 = M[0x40]
0x716: V683 = SUB V679 V682
0x718: V684 = 0x0
0x71c: V685 = EXTCODESIZE V668
0x71d: V686 = ISZERO V685
0x71f: V687 = ISZERO V686
0x720: V688 = 0x728
0x723: JUMPI 0x728 V687
---
Entry stack: [0x69, S18, {0x0, 0x69}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V644, S3, S2, 0x1, S0]
Stack pops: 2
Stack additions: [V668, 0xaffed0e0, V679, 0x20, V682, V683, V682, 0x0, V668, V686]
Exit stack: [S14, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, S4, S3, S2, V668, 0xaffed0e0, V679, 0x20, V682, V683, V682, 0x0, V668, V686]

================================

Block 0x724
[0x724:0x727]
---
Predecessors: [0x6cd]
Successors: []
---
0x724 PUSH1 0x0
0x726 DUP1
0x727 REVERT
---
0x724: V689 = 0x0
0x727: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V644, S11, S10, V668, 0xaffed0e0, V679, 0x20, V682, V683, V682, 0x0, V668, V686]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V644, S11, S10, V668, 0xaffed0e0, V679, 0x20, V682, V683, V682, 0x0, V668, V686]

================================

Block 0x728
[0x728:0x732]
---
Predecessors: [0x6cd]
Successors: [0x733, 0x73c]
---
0x728 JUMPDEST
0x729 POP
0x72a GAS
0x72b CALL
0x72c ISZERO
0x72d DUP1
0x72e ISZERO
0x72f PUSH2 0x73c
0x732 JUMPI
---
0x728: JUMPDEST 
0x72a: V690 = GAS
0x72b: V691 = CALL V690 V668 0x0 V682 V683 V682 0x20
0x72c: V692 = ISZERO V691
0x72e: V693 = ISZERO V692
0x72f: V694 = 0x73c
0x732: JUMPI 0x73c V693
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V644, S11, S10, V668, 0xaffed0e0, V679, 0x20, V682, V683, V682, 0x0, V668, V686]
Stack pops: 7
Stack additions: [V692]
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, V644, S11, S10, V668, 0xaffed0e0, V679, V692]

================================

Block 0x733
[0x733:0x73b]
---
Predecessors: [0x728]
Successors: []
---
0x733 RETURNDATASIZE
0x734 PUSH1 0x0
0x736 DUP1
0x737 RETURNDATACOPY
0x738 RETURNDATASIZE
0x739 PUSH1 0x0
0x73b REVERT
---
0x733: V695 = RETURNDATASIZE
0x734: V696 = 0x0
0x737: RETURNDATACOPY 0x0 0x0 V695
0x738: V697 = RETURNDATASIZE
0x739: V698 = 0x0
0x73b: REVERT 0x0 V697
---
Entry stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V644, S5, S4, V668, 0xaffed0e0, V679, V692]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V644, S5, S4, V668, 0xaffed0e0, V679, V692]

================================

Block 0x73c
[0x73c:0x74d]
---
Predecessors: [0x728]
Successors: [0x74e, 0x752]
---
0x73c JUMPDEST
0x73d POP
0x73e POP
0x73f POP
0x740 POP
0x741 PUSH1 0x40
0x743 MLOAD
0x744 RETURNDATASIZE
0x745 PUSH1 0x20
0x747 DUP2
0x748 LT
0x749 ISZERO
0x74a PUSH2 0x752
0x74d JUMPI
---
0x73c: JUMPDEST 
0x741: V699 = 0x40
0x743: V700 = M[0x40]
0x744: V701 = RETURNDATASIZE
0x745: V702 = 0x20
0x748: V703 = LT V701 0x20
0x749: V704 = ISZERO V703
0x74a: V705 = 0x752
0x74d: JUMPI 0x752 V704
---
Entry stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V644, S5, S4, V668, 0xaffed0e0, V679, V692]
Stack pops: 4
Stack additions: [V700, V701]
Exit stack: [V13, 0x69, S14, {0x0, 0x69}, S12, S11, S10, S9, S8, S7, V644, S5, S4, V700, V701]

================================

Block 0x74e
[0x74e:0x751]
---
Predecessors: [0x73c]
Successors: []
---
0x74e PUSH1 0x0
0x750 DUP1
0x751 REVERT
---
0x74e: V706 = 0x0
0x751: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V644, S3, S2, V700, V701]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V644, S3, S2, V700, V701]

================================

Block 0x752
[0x752:0x762]
---
Predecessors: [0x73c]
Successors: [0x9b9]
---
0x752 JUMPDEST
0x753 POP
0x754 MLOAD
0x755 PUSH1 0x2
0x757 ADD
0x758 SWAP2
0x759 POP
0x75a PUSH2 0x763
0x75d DUP4
0x75e DUP4
0x75f PUSH2 0x9b9
0x762 JUMP
---
0x752: JUMPDEST 
0x754: V707 = M[V700]
0x755: V708 = 0x2
0x757: V709 = ADD 0x2 V707
0x75a: V710 = 0x763
0x75f: V711 = 0x9b9
0x762: JUMP 0x9b9
---
Entry stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V644, S3, S2, V700, V701]
Stack pops: 5
Stack additions: [S4, V709, S2, 0x763, S4, V709]
Exit stack: [V13, 0x69, S12, {0x0, 0x69}, S10, S9, S8, S7, S6, S5, V644, V709, S2, 0x763, V644, V709]

================================

Block 0x763
[0x763:0x76e]
---
Predecessors: [0x9b9]
Successors: [0xa60]
---
0x763 JUMPDEST
0x764 SWAP1
0x765 POP
0x766 PUSH2 0x76f
0x769 DUP2
0x76a DUP7
0x76b PUSH2 0xa60
0x76e JUMP
---
0x763: JUMPDEST 
0x766: V712 = 0x76f
0x76b: V713 = 0xa60
0x76e: JUMP 0xa60
---
Entry stack: [V13, 0x69, S11, {0x0, 0x69}, S9, S8, S7, S6, S5, S4, S3, S2, S1, V960]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S0, 0x76f, S0, S5]
Exit stack: [V13, 0x69, S11, {0x0, 0x69}, S9, S8, S7, S6, S5, S4, S3, S2, V960, 0x76f, V960, S5]

================================

Block 0x76f
[0x76f:0x774]
---
Predecessors: [0x818, 0xc7c]
Successors: [0x775, 0x808]
---
0x76f JUMPDEST
0x770 ISZERO
0x771 PUSH2 0x808
0x774 JUMPI
---
0x76f: JUMPDEST 
0x770: V714 = ISZERO {0x0, 0x1}
0x771: V715 = 0x808
0x774: JUMPI 0x808 V714
---
Entry stack: [V13, 0x69, S17, {0x0, 0x69}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x69, S17, {0x0, 0x69}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x775
[0x775:0x7ad]
---
Predecessors: [0x76f]
Successors: [0x7ae, 0x7b2]
---
0x775 DUP3
0x776 PUSH1 0x1
0x778 PUSH1 0xa0
0x77a PUSH1 0x2
0x77c EXP
0x77d SUB
0x77e AND
0x77f PUSH4 0xcfc09032
0x784 PUSH1 0x40
0x786 MLOAD
0x787 DUP2
0x788 PUSH4 0xffffffff
0x78d AND
0x78e PUSH1 0xe0
0x790 PUSH1 0x2
0x792 EXP
0x793 MUL
0x794 DUP2
0x795 MSTORE
0x796 PUSH1 0x4
0x798 ADD
0x799 PUSH1 0x0
0x79b PUSH1 0x40
0x79d MLOAD
0x79e DUP1
0x79f DUP4
0x7a0 SUB
0x7a1 DUP2
0x7a2 PUSH1 0x0
0x7a4 DUP8
0x7a5 DUP1
0x7a6 EXTCODESIZE
0x7a7 ISZERO
0x7a8 DUP1
0x7a9 ISZERO
0x7aa PUSH2 0x7b2
0x7ad JUMPI
---
0x776: V716 = 0x1
0x778: V717 = 0xa0
0x77a: V718 = 0x2
0x77c: V719 = EXP 0x2 0xa0
0x77d: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77e: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x77f: V722 = 0xcfc09032
0x784: V723 = 0x40
0x786: V724 = M[0x40]
0x788: V725 = 0xffffffff
0x78d: V726 = AND 0xffffffff 0xcfc09032
0x78e: V727 = 0xe0
0x790: V728 = 0x2
0x792: V729 = EXP 0x2 0xe0
0x793: V730 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xcfc09032
0x795: M[V724] = 0xcfc0903200000000000000000000000000000000000000000000000000000000
0x796: V731 = 0x4
0x798: V732 = ADD 0x4 V724
0x799: V733 = 0x0
0x79b: V734 = 0x40
0x79d: V735 = M[0x40]
0x7a0: V736 = SUB V732 V735
0x7a2: V737 = 0x0
0x7a6: V738 = EXTCODESIZE V721
0x7a7: V739 = ISZERO V738
0x7a9: V740 = ISZERO V739
0x7aa: V741 = 0x7b2
0x7ad: JUMPI 0x7b2 V740
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V721, 0xcfc09032, V732, 0x0, V735, V736, V735, 0x0, V721, V739]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V721, 0xcfc09032, V732, 0x0, V735, V736, V735, 0x0, V721, V739]

================================

Block 0x7ae
[0x7ae:0x7b1]
---
Predecessors: [0x775]
Successors: []
---
0x7ae PUSH1 0x0
0x7b0 DUP1
0x7b1 REVERT
---
0x7ae: V742 = 0x0
0x7b1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V721, 0xcfc09032, V732, 0x0, V735, V736, V735, 0x0, V721, V739]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V721, 0xcfc09032, V732, 0x0, V735, V736, V735, 0x0, V721, V739]

================================

Block 0x7b2
[0x7b2:0x7bc]
---
Predecessors: [0x775]
Successors: [0x7bd, 0x7c6]
---
0x7b2 JUMPDEST
0x7b3 POP
0x7b4 GAS
0x7b5 CALL
0x7b6 ISZERO
0x7b7 DUP1
0x7b8 ISZERO
0x7b9 PUSH2 0x7c6
0x7bc JUMPI
---
0x7b2: JUMPDEST 
0x7b4: V743 = GAS
0x7b5: V744 = CALL V743 V721 0x0 V735 V736 V735 0x0
0x7b6: V745 = ISZERO V744
0x7b8: V746 = ISZERO V745
0x7b9: V747 = 0x7c6
0x7bc: JUMPI 0x7c6 V746
---
Entry stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V721, 0xcfc09032, V732, 0x0, V735, V736, V735, 0x0, V721, V739]
Stack pops: 7
Stack additions: [V745]
Exit stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V721, 0xcfc09032, V732, V745]

================================

Block 0x7bd
[0x7bd:0x7c5]
---
Predecessors: [0x7b2]
Successors: []
---
0x7bd RETURNDATASIZE
0x7be PUSH1 0x0
0x7c0 DUP1
0x7c1 RETURNDATACOPY
0x7c2 RETURNDATASIZE
0x7c3 PUSH1 0x0
0x7c5 REVERT
---
0x7bd: V748 = RETURNDATASIZE
0x7be: V749 = 0x0
0x7c1: RETURNDATACOPY 0x0 0x0 V748
0x7c2: V750 = RETURNDATASIZE
0x7c3: V751 = 0x0
0x7c5: REVERT 0x0 V750
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V721, 0xcfc09032, V732, V745]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V721, 0xcfc09032, V732, V745]

================================

Block 0x7c6
[0x7c6:0x803]
---
Predecessors: [0x7b2]
Successors: [0x61f, 0x804]
---
0x7c6 JUMPDEST
0x7c7 POP
0x7c8 POP
0x7c9 POP
0x7ca POP
0x7cb DUP3
0x7cc PUSH1 0x1
0x7ce PUSH1 0xa0
0x7d0 PUSH1 0x2
0x7d2 EXP
0x7d3 SUB
0x7d4 AND
0x7d5 PUSH4 0xcfc09032
0x7da PUSH1 0x40
0x7dc MLOAD
0x7dd DUP2
0x7de PUSH4 0xffffffff
0x7e3 AND
0x7e4 PUSH1 0xe0
0x7e6 PUSH1 0x2
0x7e8 EXP
0x7e9 MUL
0x7ea DUP2
0x7eb MSTORE
0x7ec PUSH1 0x4
0x7ee ADD
0x7ef PUSH1 0x0
0x7f1 PUSH1 0x40
0x7f3 MLOAD
0x7f4 DUP1
0x7f5 DUP4
0x7f6 SUB
0x7f7 DUP2
0x7f8 PUSH1 0x0
0x7fa DUP8
0x7fb DUP1
0x7fc EXTCODESIZE
0x7fd ISZERO
0x7fe DUP1
0x7ff ISZERO
0x800 PUSH2 0x61f
0x803 JUMPI
---
0x7c6: JUMPDEST 
0x7cc: V752 = 0x1
0x7ce: V753 = 0xa0
0x7d0: V754 = 0x2
0x7d2: V755 = EXP 0x2 0xa0
0x7d3: V756 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d4: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x7d5: V758 = 0xcfc09032
0x7da: V759 = 0x40
0x7dc: V760 = M[0x40]
0x7de: V761 = 0xffffffff
0x7e3: V762 = AND 0xffffffff 0xcfc09032
0x7e4: V763 = 0xe0
0x7e6: V764 = 0x2
0x7e8: V765 = EXP 0x2 0xe0
0x7e9: V766 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xcfc09032
0x7eb: M[V760] = 0xcfc0903200000000000000000000000000000000000000000000000000000000
0x7ec: V767 = 0x4
0x7ee: V768 = ADD 0x4 V760
0x7ef: V769 = 0x0
0x7f1: V770 = 0x40
0x7f3: V771 = M[0x40]
0x7f6: V772 = SUB V768 V771
0x7f8: V773 = 0x0
0x7fc: V774 = EXTCODESIZE V757
0x7fd: V775 = ISZERO V774
0x7ff: V776 = ISZERO V775
0x800: V777 = 0x61f
0x803: JUMPI 0x61f V776
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V721, 0xcfc09032, V732, V745]
Stack pops: 7
Stack additions: [S6, S5, S4, V757, 0xcfc09032, V768, 0x0, V771, V772, V771, 0x0, V757, V775]
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V757, 0xcfc09032, V768, 0x0, V771, V772, V771, 0x0, V757, V775]

================================

Block 0x804
[0x804:0x807]
---
Predecessors: [0x7c6]
Successors: []
---
0x804 PUSH1 0x0
0x806 DUP1
0x807 REVERT
---
0x804: V778 = 0x0
0x807: REVERT 0x0 0x0
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V757, 0xcfc09032, V768, 0x0, V771, V772, V771, 0x0, V757, V775]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V757, 0xcfc09032, V768, 0x0, V771, V772, V771, 0x0, V757, V775]

================================

Block 0x808
[0x808:0x812]
---
Predecessors: [0x76f]
Successors: [0x68d]
---
0x808 JUMPDEST
0x809 PUSH1 0x1
0x80b SWAP1
0x80c SWAP4
0x80d ADD
0x80e SWAP3
0x80f PUSH2 0x68d
0x812 JUMP
---
0x808: JUMPDEST 
0x809: V779 = 0x1
0x80d: V780 = ADD S3 0x1
0x80f: V781 = 0x68d
0x812: JUMP 0x68d
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V780, S2, S1, S0]
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V780, S2, S1, S0]

================================

Block 0x813
[0x813:0x817]
---
Predecessors: [0x68d]
Successors: []
---
0x813 JUMPDEST
0x814 PUSH1 0x0
0x816 DUP1
0x817 REVERT
---
0x813: JUMPDEST 
0x814: V782 = 0x0
0x817: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x818
[0x818:0x81e]
---
Predecessors: [0x4e0]
Successors: [0x69, 0x481, 0x5dc, 0x76f]
---
0x818 JUMPDEST
0x819 POP
0x81a POP
0x81b POP
0x81c POP
0x81d POP
0x81e JUMP
---
0x818: JUMPDEST 
0x81e: JUMP S5
---
Entry stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x69, S16, {0x0, 0x69}, S14, S13, S12, S11, S10, S9, S8, S7, S6]

================================

Block 0x81f
[0x81f:0x831]
---
Predecessors: [0xda]
Successors: [0x832, 0x836]
---
0x81f JUMPDEST
0x820 PUSH1 0x2
0x822 SLOAD
0x823 PUSH1 0x1
0x825 PUSH1 0xa0
0x827 PUSH1 0x2
0x829 EXP
0x82a SUB
0x82b AND
0x82c CALLER
0x82d EQ
0x82e PUSH2 0x836
0x831 JUMPI
---
0x81f: JUMPDEST 
0x820: V783 = 0x2
0x822: V784 = S[0x2]
0x823: V785 = 0x1
0x825: V786 = 0xa0
0x827: V787 = 0x2
0x829: V788 = EXP 0x2 0xa0
0x82a: V789 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82b: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0x82c: V791 = CALLER
0x82d: V792 = EQ V791 V790
0x82e: V793 = 0x836
0x831: JUMPI 0x836 V792
---
Entry stack: [V13, 0x69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69]

================================

Block 0x832
[0x832:0x835]
---
Predecessors: [0x81f]
Successors: []
---
0x832 PUSH1 0x0
0x834 DUP1
0x835 REVERT
---
0x832: V794 = 0x0
0x835: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69]

================================

Block 0x836
[0x836:0x866]
---
Predecessors: [0x81f]
Successors: [0x1e5, 0x867]
---
0x836 JUMPDEST
0x837 PUSH1 0x2
0x839 SLOAD
0x83a PUSH1 0x40
0x83c MLOAD
0x83d PUSH1 0x1
0x83f PUSH1 0xa0
0x841 PUSH1 0x2
0x843 EXP
0x844 SUB
0x845 SWAP1
0x846 SWAP2
0x847 AND
0x848 SWAP1
0x849 ADDRESS
0x84a BALANCE
0x84b DUP1
0x84c ISZERO
0x84d PUSH2 0x8fc
0x850 MUL
0x851 SWAP2
0x852 PUSH1 0x0
0x854 DUP2
0x855 DUP2
0x856 DUP2
0x857 DUP6
0x858 DUP9
0x859 DUP9
0x85a CALL
0x85b SWAP4
0x85c POP
0x85d POP
0x85e POP
0x85f POP
0x860 ISZERO
0x861 DUP1
0x862 ISZERO
0x863 PUSH2 0x1e5
0x866 JUMPI
---
0x836: JUMPDEST 
0x837: V795 = 0x2
0x839: V796 = S[0x2]
0x83a: V797 = 0x40
0x83c: V798 = M[0x40]
0x83d: V799 = 0x1
0x83f: V800 = 0xa0
0x841: V801 = 0x2
0x843: V802 = EXP 0x2 0xa0
0x844: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x847: V804 = AND V796 0xffffffffffffffffffffffffffffffffffffffff
0x849: V805 = ADDRESS
0x84a: V806 = BALANCE V805
0x84c: V807 = ISZERO V806
0x84d: V808 = 0x8fc
0x850: V809 = MUL 0x8fc V807
0x852: V810 = 0x0
0x85a: V811 = CALL V809 V804 V806 V798 0x0 V798 0x0
0x860: V812 = ISZERO V811
0x862: V813 = ISZERO V812
0x863: V814 = 0x1e5
0x866: JUMPI 0x1e5 V813
---
Entry stack: [V13, 0x69]
Stack pops: 0
Stack additions: [V812]
Exit stack: [V13, 0x69, V812]

================================

Block 0x867
[0x867:0x86f]
---
Predecessors: [0x836]
Successors: []
---
0x867 RETURNDATASIZE
0x868 PUSH1 0x0
0x86a DUP1
0x86b RETURNDATACOPY
0x86c RETURNDATASIZE
0x86d PUSH1 0x0
0x86f REVERT
---
0x867: V815 = RETURNDATASIZE
0x868: V816 = 0x0
0x86b: RETURNDATACOPY 0x0 0x0 V815
0x86c: V817 = RETURNDATASIZE
0x86d: V818 = 0x0
0x86f: REVERT 0x0 V817
---
Entry stack: [V13, 0x69, V812]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V812]

================================

Block 0x870
[0x870:0x887]
---
Predecessors: [0xef]
Successors: [0x888, 0x88c]
---
0x870 JUMPDEST
0x871 PUSH1 0x2
0x873 SLOAD
0x874 PUSH1 0x0
0x876 SWAP1
0x877 DUP2
0x878 SWAP1
0x879 PUSH1 0x1
0x87b PUSH1 0xa0
0x87d PUSH1 0x2
0x87f EXP
0x880 SUB
0x881 AND
0x882 CALLER
0x883 EQ
0x884 PUSH2 0x88c
0x887 JUMPI
---
0x870: JUMPDEST 
0x871: V819 = 0x2
0x873: V820 = S[0x2]
0x874: V821 = 0x0
0x879: V822 = 0x1
0x87b: V823 = 0xa0
0x87d: V824 = 0x2
0x87f: V825 = EXP 0x2 0xa0
0x880: V826 = SUB 0x10000000000000000000000000000000000000000 0x1
0x881: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff V820
0x882: V828 = CALLER
0x883: V829 = EQ V828 V827
0x884: V830 = 0x88c
0x887: JUMPI 0x88c V829
---
Entry stack: [V13, 0x69, V87]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x69, V87, 0x0, 0x0]

================================

Block 0x888
[0x888:0x88b]
---
Predecessors: [0x870]
Successors: []
---
0x888 PUSH1 0x0
0x88a DUP1
0x88b REVERT
---
0x888: V831 = 0x0
0x88b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, V87, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V87, 0x0, 0x0]

================================

Block 0x88c
[0x88c:0x890]
---
Predecessors: [0x870]
Successors: [0x891]
---
0x88c JUMPDEST
0x88d PUSH1 0x0
0x88f SWAP2
0x890 POP
---
0x88c: JUMPDEST 
0x88d: V832 = 0x0
---
Entry stack: [V13, 0x69, V87, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V13, 0x69, V87, 0x0, 0x0]

================================

Block 0x891
[0x891:0x89b]
---
Predecessors: [0x88c, 0x99e]
Successors: [0x89c, 0x9ae]
---
0x891 JUMPDEST
0x892 PUSH1 0x1
0x894 SLOAD
0x895 DUP3
0x896 LT
0x897 ISZERO
0x898 PUSH2 0x9ae
0x89b JUMPI
---
0x891: JUMPDEST 
0x892: V833 = 0x1
0x894: V834 = S[0x1]
0x896: V835 = LT S1 V834
0x897: V836 = ISZERO V835
0x898: V837 = 0x9ae
0x89b: JUMPI 0x9ae V836
---
Entry stack: [V13, 0x69, V87, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x69, V87, S1, S0]

================================

Block 0x89c
[0x89c:0x8a7]
---
Predecessors: [0x891]
Successors: [0x8a8, 0x8a9]
---
0x89c PUSH1 0x1
0x89e DUP1
0x89f SLOAD
0x8a0 DUP4
0x8a1 SWAP1
0x8a2 DUP2
0x8a3 LT
0x8a4 PUSH2 0x8a9
0x8a7 JUMPI
---
0x89c: V838 = 0x1
0x89f: V839 = S[0x1]
0x8a3: V840 = LT S1 V839
0x8a4: V841 = 0x8a9
0x8a7: JUMPI 0x8a9 V840
---
Entry stack: [V13, 0x69, V87, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1, S1]
Exit stack: [V13, 0x69, V87, S1, S0, 0x1, S1]

================================

Block 0x8a8
[0x8a8:0x8a8]
---
Predecessors: [0x89c]
Successors: []
---
0x8a8 INVALID
---
0x8a8: INVALID 
---
Entry stack: [V13, 0x69, V87, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V87, S3, S2, 0x1, S0]

================================

Block 0x8a9
[0x8a9:0x912]
---
Predecessors: [0x89c]
Successors: [0x913, 0x917]
---
0x8a9 JUMPDEST
0x8aa PUSH1 0x0
0x8ac SWAP2
0x8ad DUP3
0x8ae MSTORE
0x8af PUSH1 0x20
0x8b1 DUP3
0x8b2 SHA3
0x8b3 ADD
0x8b4 SLOAD
0x8b5 PUSH1 0x40
0x8b7 DUP1
0x8b8 MLOAD
0x8b9 PUSH32 0x9b08e8fc00000000000000000000000000000000000000000000000000000000
0x8da DUP2
0x8db MSTORE
0x8dc PUSH1 0x1
0x8de PUSH1 0xa0
0x8e0 PUSH1 0x2
0x8e2 EXP
0x8e3 SUB
0x8e4 DUP8
0x8e5 DUP2
0x8e6 AND
0x8e7 PUSH1 0x4
0x8e9 DUP4
0x8ea ADD
0x8eb MSTORE
0x8ec SWAP2
0x8ed MLOAD
0x8ee SWAP2
0x8ef SWAP1
0x8f0 SWAP3
0x8f1 AND
0x8f2 SWAP4
0x8f3 POP
0x8f4 DUP4
0x8f5 SWAP3
0x8f6 PUSH4 0x9b08e8fc
0x8fb SWAP3
0x8fc PUSH1 0x24
0x8fe DUP1
0x8ff DUP3
0x900 ADD
0x901 SWAP4
0x902 SWAP2
0x903 DUP3
0x904 SWAP1
0x905 SUB
0x906 ADD
0x907 DUP2
0x908 DUP4
0x909 DUP8
0x90a DUP1
0x90b EXTCODESIZE
0x90c ISZERO
0x90d DUP1
0x90e ISZERO
0x90f PUSH2 0x917
0x912 JUMPI
---
0x8a9: JUMPDEST 
0x8aa: V842 = 0x0
0x8ae: M[0x0] = 0x1
0x8af: V843 = 0x20
0x8b2: V844 = SHA3 0x0 0x20
0x8b3: V845 = ADD V844 S0
0x8b4: V846 = S[V845]
0x8b5: V847 = 0x40
0x8b8: V848 = M[0x40]
0x8b9: V849 = 0x9b08e8fc00000000000000000000000000000000000000000000000000000000
0x8db: M[V848] = 0x9b08e8fc00000000000000000000000000000000000000000000000000000000
0x8dc: V850 = 0x1
0x8de: V851 = 0xa0
0x8e0: V852 = 0x2
0x8e2: V853 = EXP 0x2 0xa0
0x8e3: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e6: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x8e7: V856 = 0x4
0x8ea: V857 = ADD V848 0x4
0x8eb: M[V857] = V855
0x8ed: V858 = M[0x40]
0x8f1: V859 = AND V846 0xffffffffffffffffffffffffffffffffffffffff
0x8f6: V860 = 0x9b08e8fc
0x8fc: V861 = 0x24
0x900: V862 = ADD V848 0x24
0x905: V863 = SUB V848 V858
0x906: V864 = ADD V863 0x24
0x90b: V865 = EXTCODESIZE V859
0x90c: V866 = ISZERO V865
0x90e: V867 = ISZERO V866
0x90f: V868 = 0x917
0x912: JUMPI 0x917 V867
---
Entry stack: [V13, 0x69, V87, S3, S2, 0x1, S0]
Stack pops: 5
Stack additions: [S4, S3, V859, V859, 0x9b08e8fc, V862, 0x0, V858, V864, V858, 0x0, V859, V866]
Exit stack: [V13, 0x69, V87, S3, V859, V859, 0x9b08e8fc, V862, 0x0, V858, V864, V858, 0x0, V859, V866]

================================

Block 0x913
[0x913:0x916]
---
Predecessors: [0x8a9]
Successors: []
---
0x913 PUSH1 0x0
0x915 DUP1
0x916 REVERT
---
0x913: V869 = 0x0
0x916: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, V87, S11, V859, V859, 0x9b08e8fc, V862, 0x0, V858, V864, V858, 0x0, V859, V866]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V87, S11, V859, V859, 0x9b08e8fc, V862, 0x0, V858, V864, V858, 0x0, V859, V866]

================================

Block 0x917
[0x917:0x921]
---
Predecessors: [0x8a9]
Successors: [0x922, 0x92b]
---
0x917 JUMPDEST
0x918 POP
0x919 GAS
0x91a CALL
0x91b ISZERO
0x91c DUP1
0x91d ISZERO
0x91e PUSH2 0x92b
0x921 JUMPI
---
0x917: JUMPDEST 
0x919: V870 = GAS
0x91a: V871 = CALL V870 V859 0x0 V858 V864 V858 0x0
0x91b: V872 = ISZERO V871
0x91d: V873 = ISZERO V872
0x91e: V874 = 0x92b
0x921: JUMPI 0x92b V873
---
Entry stack: [V13, 0x69, V87, S11, V859, V859, 0x9b08e8fc, V862, 0x0, V858, V864, V858, 0x0, V859, V866]
Stack pops: 7
Stack additions: [V872]
Exit stack: [V13, 0x69, V87, S11, V859, V859, 0x9b08e8fc, V862, V872]

================================

Block 0x922
[0x922:0x92a]
---
Predecessors: [0x917]
Successors: []
---
0x922 RETURNDATASIZE
0x923 PUSH1 0x0
0x925 DUP1
0x926 RETURNDATACOPY
0x927 RETURNDATASIZE
0x928 PUSH1 0x0
0x92a REVERT
---
0x922: V875 = RETURNDATASIZE
0x923: V876 = 0x0
0x926: RETURNDATACOPY 0x0 0x0 V875
0x927: V877 = RETURNDATASIZE
0x928: V878 = 0x0
0x92a: REVERT 0x0 V877
---
Entry stack: [V13, 0x69, V87, S5, V859, V859, 0x9b08e8fc, V862, V872]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V87, S5, V859, V859, 0x9b08e8fc, V862, V872]

================================

Block 0x92b
[0x92b:0x985]
---
Predecessors: [0x917]
Successors: [0x986, 0x98a]
---
0x92b JUMPDEST
0x92c POP
0x92d POP
0x92e POP
0x92f POP
0x930 DUP3
0x931 PUSH1 0x1
0x933 PUSH1 0xa0
0x935 PUSH1 0x2
0x937 EXP
0x938 SUB
0x939 AND
0x93a PUSH4 0x144d8961
0x93f DUP3
0x940 PUSH1 0x40
0x942 MLOAD
0x943 DUP3
0x944 PUSH4 0xffffffff
0x949 AND
0x94a PUSH1 0xe0
0x94c PUSH1 0x2
0x94e EXP
0x94f MUL
0x950 DUP2
0x951 MSTORE
0x952 PUSH1 0x4
0x954 ADD
0x955 DUP1
0x956 DUP3
0x957 PUSH1 0x1
0x959 PUSH1 0xa0
0x95b PUSH1 0x2
0x95d EXP
0x95e SUB
0x95f AND
0x960 PUSH1 0x1
0x962 PUSH1 0xa0
0x964 PUSH1 0x2
0x966 EXP
0x967 SUB
0x968 AND
0x969 DUP2
0x96a MSTORE
0x96b PUSH1 0x20
0x96d ADD
0x96e SWAP2
0x96f POP
0x970 POP
0x971 PUSH1 0x0
0x973 PUSH1 0x40
0x975 MLOAD
0x976 DUP1
0x977 DUP4
0x978 SUB
0x979 DUP2
0x97a PUSH1 0x0
0x97c DUP8
0x97d DUP1
0x97e EXTCODESIZE
0x97f ISZERO
0x980 DUP1
0x981 ISZERO
0x982 PUSH2 0x98a
0x985 JUMPI
---
0x92b: JUMPDEST 
0x931: V879 = 0x1
0x933: V880 = 0xa0
0x935: V881 = 0x2
0x937: V882 = EXP 0x2 0xa0
0x938: V883 = SUB 0x10000000000000000000000000000000000000000 0x1
0x939: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x93a: V885 = 0x144d8961
0x940: V886 = 0x40
0x942: V887 = M[0x40]
0x944: V888 = 0xffffffff
0x949: V889 = AND 0xffffffff 0x144d8961
0x94a: V890 = 0xe0
0x94c: V891 = 0x2
0x94e: V892 = EXP 0x2 0xe0
0x94f: V893 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x144d8961
0x951: M[V887] = 0x144d896100000000000000000000000000000000000000000000000000000000
0x952: V894 = 0x4
0x954: V895 = ADD 0x4 V887
0x957: V896 = 0x1
0x959: V897 = 0xa0
0x95b: V898 = 0x2
0x95d: V899 = EXP 0x2 0xa0
0x95e: V900 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95f: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0x960: V902 = 0x1
0x962: V903 = 0xa0
0x964: V904 = 0x2
0x966: V905 = EXP 0x2 0xa0
0x967: V906 = SUB 0x10000000000000000000000000000000000000000 0x1
0x968: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0x96a: M[V895] = V907
0x96b: V908 = 0x20
0x96d: V909 = ADD 0x20 V895
0x971: V910 = 0x0
0x973: V911 = 0x40
0x975: V912 = M[0x40]
0x978: V913 = SUB V909 V912
0x97a: V914 = 0x0
0x97e: V915 = EXTCODESIZE V884
0x97f: V916 = ISZERO V915
0x981: V917 = ISZERO V916
0x982: V918 = 0x98a
0x985: JUMPI 0x98a V917
---
Entry stack: [V13, 0x69, V87, S5, V859, V859, 0x9b08e8fc, V862, V872]
Stack pops: 7
Stack additions: [S6, S5, S4, V884, 0x144d8961, V909, 0x0, V912, V913, V912, 0x0, V884, V916]
Exit stack: [V13, 0x69, V87, S5, V859, V884, 0x144d8961, V909, 0x0, V912, V913, V912, 0x0, V884, V916]

================================

Block 0x986
[0x986:0x989]
---
Predecessors: [0x92b]
Successors: []
---
0x986 PUSH1 0x0
0x988 DUP1
0x989 REVERT
---
0x986: V919 = 0x0
0x989: REVERT 0x0 0x0
---
Entry stack: [V13, 0x69, V87, S11, V859, V884, 0x144d8961, V909, 0x0, V912, V913, V912, 0x0, V884, V916]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V87, S11, V859, V884, 0x144d8961, V909, 0x0, V912, V913, V912, 0x0, V884, V916]

================================

Block 0x98a
[0x98a:0x994]
---
Predecessors: [0x92b]
Successors: [0x995, 0x99e]
---
0x98a JUMPDEST
0x98b POP
0x98c GAS
0x98d CALL
0x98e ISZERO
0x98f DUP1
0x990 ISZERO
0x991 PUSH2 0x99e
0x994 JUMPI
---
0x98a: JUMPDEST 
0x98c: V920 = GAS
0x98d: V921 = CALL V920 V884 0x0 V912 V913 V912 0x0
0x98e: V922 = ISZERO V921
0x990: V923 = ISZERO V922
0x991: V924 = 0x99e
0x994: JUMPI 0x99e V923
---
Entry stack: [V13, 0x69, V87, S11, V859, V884, 0x144d8961, V909, 0x0, V912, V913, V912, 0x0, V884, V916]
Stack pops: 7
Stack additions: [V922]
Exit stack: [V13, 0x69, V87, S11, V859, V884, 0x144d8961, V909, V922]

================================

Block 0x995
[0x995:0x99d]
---
Predecessors: [0x98a]
Successors: []
---
0x995 RETURNDATASIZE
0x996 PUSH1 0x0
0x998 DUP1
0x999 RETURNDATACOPY
0x99a RETURNDATASIZE
0x99b PUSH1 0x0
0x99d REVERT
---
0x995: V925 = RETURNDATASIZE
0x996: V926 = 0x0
0x999: RETURNDATACOPY 0x0 0x0 V925
0x99a: V927 = RETURNDATASIZE
0x99b: V928 = 0x0
0x99d: REVERT 0x0 V927
---
Entry stack: [V13, 0x69, V87, S5, V859, V884, 0x144d8961, V909, V922]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, V87, S5, V859, V884, 0x144d8961, V909, V922]

================================

Block 0x99e
[0x99e:0x9ad]
---
Predecessors: [0x98a]
Successors: [0x891]
---
0x99e JUMPDEST
0x99f POP
0x9a0 POP
0x9a1 PUSH1 0x1
0x9a3 SWAP1
0x9a4 SWAP4
0x9a5 ADD
0x9a6 SWAP3
0x9a7 POP
0x9a8 PUSH2 0x891
0x9ab SWAP1
0x9ac POP
0x9ad JUMP
---
0x99e: JUMPDEST 
0x9a1: V929 = 0x1
0x9a5: V930 = ADD S5 0x1
0x9a8: V931 = 0x891
0x9ad: JUMP 0x891
---
Entry stack: [V13, 0x69, V87, S5, V859, V884, 0x144d8961, V909, V922]
Stack pops: 6
Stack additions: [V930, S4]
Exit stack: [V13, 0x69, V87, V930, V859]

================================

Block 0x9ae
[0x9ae:0x9b2]
---
Predecessors: [0x891]
Successors: [0x69]
---
0x9ae JUMPDEST
0x9af POP
0x9b0 POP
0x9b1 POP
0x9b2 JUMP
---
0x9ae: JUMPDEST 
0x9b2: JUMP 0x69
---
Entry stack: [V13, 0x69, V87, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x9b3
[0x9b3:0x9b8]
---
Predecessors: [0x110]
Successors: [0x119]
---
0x9b3 JUMPDEST
0x9b4 PUSH1 0x1
0x9b6 SLOAD
0x9b7 SWAP1
0x9b8 JUMP
---
0x9b3: JUMPDEST 
0x9b4: V932 = 0x1
0x9b6: V933 = S[0x1]
0x9b8: JUMP 0x119
---
Entry stack: [V13, 0x119]
Stack pops: 1
Stack additions: [V933]
Exit stack: [V13, V933]

================================

Block 0x9b9
[0x9b9:0xa5f]
---
Predecessors: [0x467, 0x5bf, 0x752]
Successors: [0x475, 0x5d0, 0x763]
---
0x9b9 JUMPDEST
0x9ba PUSH1 0x40
0x9bc DUP1
0x9bd MLOAD
0x9be PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x9df DUP2
0x9e0 MSTORE
0x9e1 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0xa02 PUSH1 0x1
0xa04 DUP3
0xa05 ADD
0xa06 MSTORE
0xa07 PUSH13 0x1000000000000000000000000
0xa15 PUSH1 0x1
0xa17 PUSH1 0xa0
0xa19 PUSH1 0x2
0xa1b EXP
0xa1c SUB
0xa1d DUP6
0xa1e AND
0xa1f MUL
0xa20 PUSH1 0x2
0xa22 DUP3
0xa23 ADD
0xa24 MSTORE
0xa25 PUSH1 0xff
0xa27 DUP4
0xa28 AND
0xa29 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xa4a MUL
0xa4b PUSH1 0x16
0xa4d DUP3
0xa4e ADD
0xa4f MSTORE
0xa50 SWAP1
0xa51 MLOAD
0xa52 SWAP1
0xa53 DUP2
0xa54 SWAP1
0xa55 SUB
0xa56 PUSH1 0x17
0xa58 ADD
0xa59 SWAP1
0xa5a SHA3
0xa5b SWAP3
0xa5c SWAP2
0xa5d POP
0xa5e POP
0xa5f JUMP
---
0x9b9: JUMPDEST 
0x9ba: V934 = 0x40
0x9bd: V935 = M[0x40]
0x9be: V936 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x9e0: M[V935] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x9e1: V937 = 0x9400000000000000000000000000000000000000000000000000000000000000
0xa02: V938 = 0x1
0xa05: V939 = ADD V935 0x1
0xa06: M[V939] = 0x9400000000000000000000000000000000000000000000000000000000000000
0xa07: V940 = 0x1000000000000000000000000
0xa15: V941 = 0x1
0xa17: V942 = 0xa0
0xa19: V943 = 0x2
0xa1b: V944 = EXP 0x2 0xa0
0xa1c: V945 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1e: V946 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V947 = MUL V946 0x1000000000000000000000000
0xa20: V948 = 0x2
0xa23: V949 = ADD V935 0x2
0xa24: M[V949] = V947
0xa25: V950 = 0xff
0xa28: V951 = AND S0 0xff
0xa29: V952 = 0x100000000000000000000000000000000000000000000000000000000000000
0xa4a: V953 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V951
0xa4b: V954 = 0x16
0xa4e: V955 = ADD V935 0x16
0xa4f: M[V955] = V953
0xa51: V956 = M[0x40]
0xa55: V957 = SUB V935 V956
0xa56: V958 = 0x17
0xa58: V959 = ADD 0x17 V957
0xa5a: V960 = SHA3 V956 V959
0xa5f: JUMP {0x475, 0x5d0, 0x763}
---
Entry stack: [V13, 0x69, S13, {0x0, 0x69}, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x475, 0x5d0, 0x763}, S1, S0]
Stack pops: 3
Stack additions: [V960]
Exit stack: [V13, 0x69, S13, {0x0, 0x69}, S11, S10, S9, S8, S7, S6, S5, S4, S3, V960]

================================

Block 0xa60
[0xa60:0xabb]
---
Predecessors: [0x475, 0x5d0, 0x763]
Successors: [0xabc]
---
0xa60 JUMPDEST
0xa61 PUSH1 0x0
0xa63 DUP1
0xa64 PUSH2 0xbdd
0xa67 NUMBER
0xa68 PUSH2 0xbd1
0xa6b TIMESTAMP
0xa6c DUP8
0xa6d PUSH1 0x40
0xa6f MLOAD
0xa70 PUSH1 0x20
0xa72 ADD
0xa73 DUP1
0xa74 DUP3
0xa75 PUSH1 0x1
0xa77 PUSH1 0xa0
0xa79 PUSH1 0x2
0xa7b EXP
0xa7c SUB
0xa7d AND
0xa7e PUSH1 0x1
0xa80 PUSH1 0xa0
0xa82 PUSH1 0x2
0xa84 EXP
0xa85 SUB
0xa86 AND
0xa87 PUSH13 0x1000000000000000000000000
0xa95 MUL
0xa96 DUP2
0xa97 MSTORE
0xa98 PUSH1 0x14
0xa9a ADD
0xa9b SWAP2
0xa9c POP
0xa9d POP
0xa9e PUSH1 0x40
0xaa0 MLOAD
0xaa1 PUSH1 0x20
0xaa3 DUP2
0xaa4 DUP4
0xaa5 SUB
0xaa6 SUB
0xaa7 DUP2
0xaa8 MSTORE
0xaa9 SWAP1
0xaaa PUSH1 0x40
0xaac MSTORE
0xaad PUSH1 0x40
0xaaf MLOAD
0xab0 DUP1
0xab1 DUP3
0xab2 DUP1
0xab3 MLOAD
0xab4 SWAP1
0xab5 PUSH1 0x20
0xab7 ADD
0xab8 SWAP1
0xab9 DUP1
0xaba DUP4
0xabb DUP4
---
0xa60: JUMPDEST 
0xa61: V961 = 0x0
0xa64: V962 = 0xbdd
0xa67: V963 = NUMBER
0xa68: V964 = 0xbd1
0xa6b: V965 = TIMESTAMP
0xa6d: V966 = 0x40
0xa6f: V967 = M[0x40]
0xa70: V968 = 0x20
0xa72: V969 = ADD 0x20 V967
0xa75: V970 = 0x1
0xa77: V971 = 0xa0
0xa79: V972 = 0x2
0xa7b: V973 = EXP 0x2 0xa0
0xa7c: V974 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7d: V975 = AND 0xffffffffffffffffffffffffffffffffffffffff V960
0xa7e: V976 = 0x1
0xa80: V977 = 0xa0
0xa82: V978 = 0x2
0xa84: V979 = EXP 0x2 0xa0
0xa85: V980 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa86: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V975
0xa87: V982 = 0x1000000000000000000000000
0xa95: V983 = MUL 0x1000000000000000000000000 V981
0xa97: M[V969] = V983
0xa98: V984 = 0x14
0xa9a: V985 = ADD 0x14 V969
0xa9e: V986 = 0x40
0xaa0: V987 = M[0x40]
0xaa1: V988 = 0x20
0xaa5: V989 = SUB V985 V987
0xaa6: V990 = SUB V989 0x20
0xaa8: M[V987] = V990
0xaaa: V991 = 0x40
0xaac: M[0x40] = V985
0xaad: V992 = 0x40
0xaaf: V993 = M[0x40]
0xab3: V994 = M[V987]
0xab5: V995 = 0x20
0xab7: V996 = ADD 0x20 V987
---
Entry stack: [V13, 0x69, S13, {0x0, 0x69}, S11, S10, S9, S8, S7, S6, S5, S4, V960, {0x481, 0x5dc, 0x76f}, V960, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V987, V993, V993, V996, V994, V994, V993, V996]
Exit stack: [V13, 0x69, S13, {0x0, 0x69}, S11, S10, S9, S8, S7, S6, S5, S4, V960, {0x481, 0x5dc, 0x76f}, V960, S0, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V987, V993, V993, V996, V994, V994, V993, V996]

================================

Block 0xabc
[0xabc:0xac4]
---
Predecessors: [0xa60, 0xac5]
Successors: [0xac5, 0xadb]
---
0xabc JUMPDEST
0xabd PUSH1 0x20
0xabf DUP4
0xac0 LT
0xac1 PUSH2 0xadb
0xac4 JUMPI
---
0xabc: JUMPDEST 
0xabd: V997 = 0x20
0xac0: V998 = LT S2 0x20
0xac1: V999 = 0xadb
0xac4: JUMPI 0xadb V998
---
Entry stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x481, 0x5dc, 0x76f}, S15, S14, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V987, V993, V993, V996, V994, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x481, 0x5dc, 0x76f}, S15, S14, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V987, V993, V993, V996, V994, S2, S1, S0]

================================

Block 0xac5
[0xac5:0xada]
---
Predecessors: [0xabc]
Successors: [0xabc]
---
0xac5 DUP1
0xac6 MLOAD
0xac7 DUP3
0xac8 MSTORE
0xac9 PUSH1 0x1f
0xacb NOT
0xacc SWAP1
0xacd SWAP3
0xace ADD
0xacf SWAP2
0xad0 PUSH1 0x20
0xad2 SWAP2
0xad3 DUP3
0xad4 ADD
0xad5 SWAP2
0xad6 ADD
0xad7 PUSH2 0xabc
0xada JUMP
---
0xac6: V1000 = M[S0]
0xac8: M[S1] = V1000
0xac9: V1001 = 0x1f
0xacb: V1002 = NOT 0x1f
0xace: V1003 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xad0: V1004 = 0x20
0xad4: V1005 = ADD 0x20 S1
0xad6: V1006 = ADD 0x20 S0
0xad7: V1007 = 0xabc
0xada: JUMP 0xabc
---
Entry stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x481, 0x5dc, 0x76f}, S15, S14, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V987, V993, V993, V996, V994, S2, S1, S0]
Stack pops: 3
Stack additions: [V1003, V1005, V1006]
Exit stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x481, 0x5dc, 0x76f}, S15, S14, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V987, V993, V993, V996, V994, V1003, V1005, V1006]

================================

Block 0xadb
[0xadb:0xb0f]
---
Predecessors: [0xabc]
Successors: [0xb10, 0xb11]
---
0xadb JUMPDEST
0xadc MLOAD
0xadd DUP2
0xade MLOAD
0xadf PUSH1 0x20
0xae1 SWAP4
0xae2 SWAP1
0xae3 SWAP4
0xae4 SUB
0xae5 PUSH2 0x100
0xae8 EXP
0xae9 PUSH1 0x0
0xaeb NOT
0xaec ADD
0xaed DUP1
0xaee NOT
0xaef SWAP1
0xaf0 SWAP2
0xaf1 AND
0xaf2 SWAP3
0xaf3 AND
0xaf4 SWAP2
0xaf5 SWAP1
0xaf6 SWAP2
0xaf7 OR
0xaf8 SWAP1
0xaf9 MSTORE
0xafa PUSH1 0x40
0xafc MLOAD
0xafd SWAP3
0xafe ADD
0xaff DUP3
0xb00 SWAP1
0xb01 SUB
0xb02 SWAP1
0xb03 SWAP2
0xb04 SHA3
0xb05 SWAP3
0xb06 POP
0xb07 POP
0xb08 POP
0xb09 DUP2
0xb0a ISZERO
0xb0b ISZERO
0xb0c PUSH2 0xb11
0xb0f JUMPI
---
0xadb: JUMPDEST 
0xadc: V1008 = M[S0]
0xade: V1009 = M[S1]
0xadf: V1010 = 0x20
0xae4: V1011 = SUB 0x20 S2
0xae5: V1012 = 0x100
0xae8: V1013 = EXP 0x100 V1011
0xae9: V1014 = 0x0
0xaeb: V1015 = NOT 0x0
0xaec: V1016 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1013
0xaee: V1017 = NOT V1016
0xaf1: V1018 = AND V1008 V1017
0xaf3: V1019 = AND V1009 V1016
0xaf7: V1020 = OR V1019 V1018
0xaf9: M[S1] = V1020
0xafa: V1021 = 0x40
0xafc: V1022 = M[0x40]
0xafe: V1023 = ADD V993 V994
0xb01: V1024 = SUB V1023 V1022
0xb04: V1025 = SHA3 V1022 V1024
0xb0a: V1026 = ISZERO V965
0xb0b: V1027 = ISZERO V1026
0xb0c: V1028 = 0xb11
0xb0f: JUMPI 0xb11 V1027
---
Entry stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x481, 0x5dc, 0x76f}, S15, S14, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V987, V993, V993, V996, V994, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V1025]
Exit stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x481, 0x5dc, 0x76f}, S15, S14, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V1025]

================================

Block 0xb10
[0xb10:0xb10]
---
Predecessors: [0xadb]
Successors: []
---
0xb10 INVALID
---
0xb10: INVALID 
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x481, 0x5dc, 0x76f}, S8, S7, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V1025]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x481, 0x5dc, 0x76f}, S8, S7, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V1025]

================================

Block 0xb11
[0xb11:0xb6a]
---
Predecessors: [0xadb]
Successors: [0xb6b]
---
0xb11 JUMPDEST
0xb12 DIV
0xb13 PUSH2 0xbd1
0xb16 GASLIMIT
0xb17 PUSH2 0xbd1
0xb1a TIMESTAMP
0xb1b COINBASE
0xb1c PUSH1 0x40
0xb1e MLOAD
0xb1f PUSH1 0x20
0xb21 ADD
0xb22 DUP1
0xb23 DUP3
0xb24 PUSH1 0x1
0xb26 PUSH1 0xa0
0xb28 PUSH1 0x2
0xb2a EXP
0xb2b SUB
0xb2c AND
0xb2d PUSH1 0x1
0xb2f PUSH1 0xa0
0xb31 PUSH1 0x2
0xb33 EXP
0xb34 SUB
0xb35 AND
0xb36 PUSH13 0x1000000000000000000000000
0xb44 MUL
0xb45 DUP2
0xb46 MSTORE
0xb47 PUSH1 0x14
0xb49 ADD
0xb4a SWAP2
0xb4b POP
0xb4c POP
0xb4d PUSH1 0x40
0xb4f MLOAD
0xb50 PUSH1 0x20
0xb52 DUP2
0xb53 DUP4
0xb54 SUB
0xb55 SUB
0xb56 DUP2
0xb57 MSTORE
0xb58 SWAP1
0xb59 PUSH1 0x40
0xb5b MSTORE
0xb5c PUSH1 0x40
0xb5e MLOAD
0xb5f DUP1
0xb60 DUP3
0xb61 DUP1
0xb62 MLOAD
0xb63 SWAP1
0xb64 PUSH1 0x20
0xb66 ADD
0xb67 SWAP1
0xb68 DUP1
0xb69 DUP4
0xb6a DUP4
---
0xb11: JUMPDEST 
0xb12: V1029 = DIV V1025 V965
0xb13: V1030 = 0xbd1
0xb16: V1031 = GASLIMIT
0xb17: V1032 = 0xbd1
0xb1a: V1033 = TIMESTAMP
0xb1b: V1034 = COINBASE
0xb1c: V1035 = 0x40
0xb1e: V1036 = M[0x40]
0xb1f: V1037 = 0x20
0xb21: V1038 = ADD 0x20 V1036
0xb24: V1039 = 0x1
0xb26: V1040 = 0xa0
0xb28: V1041 = 0x2
0xb2a: V1042 = EXP 0x2 0xa0
0xb2b: V1043 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2c: V1044 = AND 0xffffffffffffffffffffffffffffffffffffffff V1034
0xb2d: V1045 = 0x1
0xb2f: V1046 = 0xa0
0xb31: V1047 = 0x2
0xb33: V1048 = EXP 0x2 0xa0
0xb34: V1049 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb35: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff V1044
0xb36: V1051 = 0x1000000000000000000000000
0xb44: V1052 = MUL 0x1000000000000000000000000 V1050
0xb46: M[V1038] = V1052
0xb47: V1053 = 0x14
0xb49: V1054 = ADD 0x14 V1038
0xb4d: V1055 = 0x40
0xb4f: V1056 = M[0x40]
0xb50: V1057 = 0x20
0xb54: V1058 = SUB V1054 V1056
0xb55: V1059 = SUB V1058 0x20
0xb57: M[V1056] = V1059
0xb59: V1060 = 0x40
0xb5b: M[0x40] = V1054
0xb5c: V1061 = 0x40
0xb5e: V1062 = M[0x40]
0xb62: V1063 = M[V1056]
0xb64: V1064 = 0x20
0xb66: V1065 = ADD 0x20 V1056
---
Entry stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x481, 0x5dc, 0x76f}, S8, S7, 0x0, 0x0, 0xbdd, V963, 0xbd1, V965, V1025]
Stack pops: 2
Stack additions: [V1029, 0xbd1, V1031, 0xbd1, V1033, V1056, V1062, V1062, V1065, V1063, V1063, V1062, V1065]
Exit stack: [V13, 0x69, S20, {0x0, 0x69}, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x481, 0x5dc, 0x76f}, S8, S7, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1056, V1062, V1062, V1065, V1063, V1063, V1062, V1065]

================================

Block 0xb6b
[0xb6b:0xb73]
---
Predecessors: [0xb11, 0xb74]
Successors: [0xb74, 0xb8a]
---
0xb6b JUMPDEST
0xb6c PUSH1 0x20
0xb6e DUP4
0xb6f LT
0xb70 PUSH2 0xb8a
0xb73 JUMPI
---
0xb6b: JUMPDEST 
0xb6c: V1066 = 0x20
0xb6f: V1067 = LT S2 0x20
0xb70: V1068 = 0xb8a
0xb73: JUMPI 0xb8a V1067
---
Entry stack: [V13, 0x69, S31, {0x0, 0x69}, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x481, 0x5dc, 0x76f}, S19, S18, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1056, V1062, V1062, V1065, V1063, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x69, S31, {0x0, 0x69}, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x481, 0x5dc, 0x76f}, S19, S18, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1056, V1062, V1062, V1065, V1063, S2, S1, S0]

================================

Block 0xb74
[0xb74:0xb89]
---
Predecessors: [0xb6b]
Successors: [0xb6b]
---
0xb74 DUP1
0xb75 MLOAD
0xb76 DUP3
0xb77 MSTORE
0xb78 PUSH1 0x1f
0xb7a NOT
0xb7b SWAP1
0xb7c SWAP3
0xb7d ADD
0xb7e SWAP2
0xb7f PUSH1 0x20
0xb81 SWAP2
0xb82 DUP3
0xb83 ADD
0xb84 SWAP2
0xb85 ADD
0xb86 PUSH2 0xb6b
0xb89 JUMP
---
0xb75: V1069 = M[S0]
0xb77: M[S1] = V1069
0xb78: V1070 = 0x1f
0xb7a: V1071 = NOT 0x1f
0xb7d: V1072 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xb7f: V1073 = 0x20
0xb83: V1074 = ADD 0x20 S1
0xb85: V1075 = ADD 0x20 S0
0xb86: V1076 = 0xb6b
0xb89: JUMP 0xb6b
---
Entry stack: [V13, 0x69, S31, {0x0, 0x69}, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x481, 0x5dc, 0x76f}, S19, S18, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1056, V1062, V1062, V1065, V1063, S2, S1, S0]
Stack pops: 3
Stack additions: [V1072, V1074, V1075]
Exit stack: [V13, 0x69, S31, {0x0, 0x69}, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x481, 0x5dc, 0x76f}, S19, S18, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1056, V1062, V1062, V1065, V1063, V1072, V1074, V1075]

================================

Block 0xb8a
[0xb8a:0xbbe]
---
Predecessors: [0xb6b]
Successors: [0xbbf, 0xbc0]
---
0xb8a JUMPDEST
0xb8b MLOAD
0xb8c DUP2
0xb8d MLOAD
0xb8e PUSH1 0x20
0xb90 SWAP4
0xb91 SWAP1
0xb92 SWAP4
0xb93 SUB
0xb94 PUSH2 0x100
0xb97 EXP
0xb98 PUSH1 0x0
0xb9a NOT
0xb9b ADD
0xb9c DUP1
0xb9d NOT
0xb9e SWAP1
0xb9f SWAP2
0xba0 AND
0xba1 SWAP3
0xba2 AND
0xba3 SWAP2
0xba4 SWAP1
0xba5 SWAP2
0xba6 OR
0xba7 SWAP1
0xba8 MSTORE
0xba9 PUSH1 0x40
0xbab MLOAD
0xbac SWAP3
0xbad ADD
0xbae DUP3
0xbaf SWAP1
0xbb0 SUB
0xbb1 SWAP1
0xbb2 SWAP2
0xbb3 SHA3
0xbb4 SWAP3
0xbb5 POP
0xbb6 POP
0xbb7 POP
0xbb8 DUP2
0xbb9 ISZERO
0xbba ISZERO
0xbbb PUSH2 0xbc0
0xbbe JUMPI
---
0xb8a: JUMPDEST 
0xb8b: V1077 = M[S0]
0xb8d: V1078 = M[S1]
0xb8e: V1079 = 0x20
0xb93: V1080 = SUB 0x20 S2
0xb94: V1081 = 0x100
0xb97: V1082 = EXP 0x100 V1080
0xb98: V1083 = 0x0
0xb9a: V1084 = NOT 0x0
0xb9b: V1085 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1082
0xb9d: V1086 = NOT V1085
0xba0: V1087 = AND V1077 V1086
0xba2: V1088 = AND V1078 V1085
0xba6: V1089 = OR V1088 V1087
0xba8: M[S1] = V1089
0xba9: V1090 = 0x40
0xbab: V1091 = M[0x40]
0xbad: V1092 = ADD V1062 V1063
0xbb0: V1093 = SUB V1092 V1091
0xbb3: V1094 = SHA3 V1091 V1093
0xbb9: V1095 = ISZERO V1033
0xbba: V1096 = ISZERO V1095
0xbbb: V1097 = 0xbc0
0xbbe: JUMPI 0xbc0 V1096
---
Entry stack: [V13, 0x69, S31, {0x0, 0x69}, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x481, 0x5dc, 0x76f}, S19, S18, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1056, V1062, V1062, V1065, V1063, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V1094]
Exit stack: [V13, 0x69, S31, {0x0, 0x69}, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x481, 0x5dc, 0x76f}, S19, S18, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1094]

================================

Block 0xbbf
[0xbbf:0xbbf]
---
Predecessors: [0xb8a]
Successors: []
---
0xbbf INVALID
---
0xbbf: INVALID 
---
Entry stack: [V13, 0x69, S24, {0x0, 0x69}, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x481, 0x5dc, 0x76f}, S12, S11, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1094]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S24, {0x0, 0x69}, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x481, 0x5dc, 0x76f}, S12, S11, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1094]

================================

Block 0xbc0
[0xbc0:0xbd0]
---
Predecessors: [0xb8a]
Successors: [0xc83]
---
0xbc0 JUMPDEST
0xbc1 DIV
0xbc2 PUSH2 0xbd1
0xbc5 TIMESTAMP
0xbc6 DIFFICULTY
0xbc7 PUSH4 0xffffffff
0xbcc PUSH2 0xc83
0xbcf AND
0xbd0 JUMP
---
0xbc0: JUMPDEST 
0xbc1: V1098 = DIV V1094 V1033
0xbc2: V1099 = 0xbd1
0xbc5: V1100 = TIMESTAMP
0xbc6: V1101 = DIFFICULTY
0xbc7: V1102 = 0xffffffff
0xbcc: V1103 = 0xc83
0xbcf: V1104 = AND 0xc83 0xffffffff
0xbd0: JUMP 0xc83
---
Entry stack: [V13, 0x69, S24, {0x0, 0x69}, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x481, 0x5dc, 0x76f}, S12, S11, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1033, V1094]
Stack pops: 2
Stack additions: [V1098, 0xbd1, V1100, V1101]
Exit stack: [V13, 0x69, S24, {0x0, 0x69}, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x481, 0x5dc, 0x76f}, S12, S11, 0x0, 0x0, 0xbdd, V963, 0xbd1, V1029, 0xbd1, V1031, 0xbd1, V1098, 0xbd1, V1100, V1101]

================================

Block 0xbd1
[0xbd1:0xbdc]
---
Predecessors: [0xcf5]
Successors: [0xc83]
---
0xbd1 JUMPDEST
0xbd2 SWAP1
0xbd3 PUSH4 0xffffffff
0xbd8 PUSH2 0xc83
0xbdb AND
0xbdc JUMP
---
0xbd1: JUMPDEST 
0xbd3: V1105 = 0xffffffff
0xbd8: V1106 = 0xc83
0xbdb: V1107 = AND 0xc83 0xffffffff
0xbdc: JUMP 0xc83
---
Entry stack: [V13, 0x69, S24, {0x0, 0x69}, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V13, 0x69, S24, {0x0, 0x69}, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0xbdd
[0xbdd:0xc0b]
---
Predecessors: [0xcf5]
Successors: [0xc0c]
---
0xbdd JUMPDEST
0xbde PUSH1 0x40
0xbe0 MLOAD
0xbe1 PUSH1 0x20
0xbe3 ADD
0xbe4 DUP1
0xbe5 DUP3
0xbe6 DUP2
0xbe7 MSTORE
0xbe8 PUSH1 0x20
0xbea ADD
0xbeb SWAP2
0xbec POP
0xbed POP
0xbee PUSH1 0x40
0xbf0 MLOAD
0xbf1 PUSH1 0x20
0xbf3 DUP2
0xbf4 DUP4
0xbf5 SUB
0xbf6 SUB
0xbf7 DUP2
0xbf8 MSTORE
0xbf9 SWAP1
0xbfa PUSH1 0x40
0xbfc MSTORE
0xbfd PUSH1 0x40
0xbff MLOAD
0xc00 DUP1
0xc01 DUP3
0xc02 DUP1
0xc03 MLOAD
0xc04 SWAP1
0xc05 PUSH1 0x20
0xc07 ADD
0xc08 SWAP1
0xc09 DUP1
0xc0a DUP4
0xc0b DUP4
---
0xbdd: JUMPDEST 
0xbde: V1108 = 0x40
0xbe0: V1109 = M[0x40]
0xbe1: V1110 = 0x20
0xbe3: V1111 = ADD 0x20 V1109
0xbe7: M[V1111] = S0
0xbe8: V1112 = 0x20
0xbea: V1113 = ADD 0x20 V1111
0xbee: V1114 = 0x40
0xbf0: V1115 = M[0x40]
0xbf1: V1116 = 0x20
0xbf5: V1117 = SUB V1113 V1115
0xbf6: V1118 = SUB V1117 0x20
0xbf8: M[V1115] = V1118
0xbfa: V1119 = 0x40
0xbfc: M[0x40] = V1113
0xbfd: V1120 = 0x40
0xbff: V1121 = M[0x40]
0xc03: V1122 = M[V1115]
0xc05: V1123 = 0x20
0xc07: V1124 = ADD 0x20 V1115
---
Entry stack: [V13, 0x69, S24, {0x0, 0x69}, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V1115, V1121, V1121, V1124, V1122, V1122, V1121, V1124]
Exit stack: [S24, 0x69, S22, {0x0, 0x69}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1115, V1121, V1121, V1124, V1122, V1122, V1121, V1124]

================================

Block 0xc0c
[0xc0c:0xc14]
---
Predecessors: [0xbdd, 0xc15]
Successors: [0xc15, 0xc2b]
---
0xc0c JUMPDEST
0xc0d PUSH1 0x20
0xc0f DUP4
0xc10 LT
0xc11 PUSH2 0xc2b
0xc14 JUMPI
---
0xc0c: JUMPDEST 
0xc0d: V1125 = 0x20
0xc10: V1126 = LT S2 0x20
0xc11: V1127 = 0xc2b
0xc14: JUMPI 0xc2b V1126
---
Entry stack: [V13, 0x69, S29, {0x0, 0x69}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V1115, V1121, V1121, V1124, V1122, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x69, S29, {0x0, 0x69}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V1115, V1121, V1121, V1124, V1122, S2, S1, S0]

================================

Block 0xc15
[0xc15:0xc2a]
---
Predecessors: [0xc0c]
Successors: [0xc0c]
---
0xc15 DUP1
0xc16 MLOAD
0xc17 DUP3
0xc18 MSTORE
0xc19 PUSH1 0x1f
0xc1b NOT
0xc1c SWAP1
0xc1d SWAP3
0xc1e ADD
0xc1f SWAP2
0xc20 PUSH1 0x20
0xc22 SWAP2
0xc23 DUP3
0xc24 ADD
0xc25 SWAP2
0xc26 ADD
0xc27 PUSH2 0xc0c
0xc2a JUMP
---
0xc16: V1128 = M[S0]
0xc18: M[S1] = V1128
0xc19: V1129 = 0x1f
0xc1b: V1130 = NOT 0x1f
0xc1e: V1131 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xc20: V1132 = 0x20
0xc24: V1133 = ADD 0x20 S1
0xc26: V1134 = ADD 0x20 S0
0xc27: V1135 = 0xc0c
0xc2a: JUMP 0xc0c
---
Entry stack: [V13, 0x69, S29, {0x0, 0x69}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V1115, V1121, V1121, V1124, V1122, S2, S1, S0]
Stack pops: 3
Stack additions: [V1131, V1133, V1134]
Exit stack: [V13, 0x69, S29, {0x0, 0x69}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V1115, V1121, V1121, V1124, V1122, V1131, V1133, V1134]

================================

Block 0xc2b
[0xc2b:0xc6e]
---
Predecessors: [0xc0c]
Successors: [0xc6f, 0xc77]
---
0xc2b JUMPDEST
0xc2c MLOAD
0xc2d DUP2
0xc2e MLOAD
0xc2f PUSH1 0x20
0xc31 SWAP4
0xc32 SWAP1
0xc33 SWAP4
0xc34 SUB
0xc35 PUSH2 0x100
0xc38 EXP
0xc39 PUSH1 0x0
0xc3b NOT
0xc3c ADD
0xc3d DUP1
0xc3e NOT
0xc3f SWAP1
0xc40 SWAP2
0xc41 AND
0xc42 SWAP3
0xc43 AND
0xc44 SWAP2
0xc45 SWAP1
0xc46 SWAP2
0xc47 OR
0xc48 SWAP1
0xc49 MSTORE
0xc4a PUSH1 0x40
0xc4c MLOAD
0xc4d SWAP3
0xc4e ADD
0xc4f DUP3
0xc50 SWAP1
0xc51 SUB
0xc52 SWAP1
0xc53 SWAP2
0xc54 SHA3
0xc55 SWAP4
0xc56 POP
0xc57 DUP6
0xc58 SWAP3
0xc59 POP
0xc5a PUSH2 0x3e8
0xc5d SWAP2
0xc5e POP
0xc5f DUP4
0xc60 SWAP1
0xc61 POP
0xc62 DIV
0xc63 PUSH2 0x3e8
0xc66 MUL
0xc67 DUP3
0xc68 SUB
0xc69 LT
0xc6a ISZERO
0xc6b PUSH2 0xc77
0xc6e JUMPI
---
0xc2b: JUMPDEST 
0xc2c: V1136 = M[S0]
0xc2e: V1137 = M[S1]
0xc2f: V1138 = 0x20
0xc34: V1139 = SUB 0x20 S2
0xc35: V1140 = 0x100
0xc38: V1141 = EXP 0x100 V1139
0xc39: V1142 = 0x0
0xc3b: V1143 = NOT 0x0
0xc3c: V1144 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1141
0xc3e: V1145 = NOT V1144
0xc41: V1146 = AND V1136 V1145
0xc43: V1147 = AND V1137 V1144
0xc47: V1148 = OR V1147 V1146
0xc49: M[S1] = V1148
0xc4a: V1149 = 0x40
0xc4c: V1150 = M[0x40]
0xc4e: V1151 = ADD V1121 V1122
0xc51: V1152 = SUB V1151 V1150
0xc54: V1153 = SHA3 V1150 V1152
0xc5a: V1154 = 0x3e8
0xc62: V1155 = DIV V1153 0x3e8
0xc63: V1156 = 0x3e8
0xc66: V1157 = MUL 0x3e8 V1155
0xc68: V1158 = SUB V1153 V1157
0xc69: V1159 = LT V1158 S10
0xc6a: V1160 = ISZERO V1159
0xc6b: V1161 = 0xc77
0xc6e: JUMPI 0xc77 V1160
---
Entry stack: [V13, 0x69, S29, {0x0, 0x69}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V1115, V1121, V1121, V1124, V1122, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V1153]
Exit stack: [V13, 0x69, S29, {0x0, 0x69}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1153]

================================

Block 0xc6f
[0xc6f:0xc76]
---
Predecessors: [0xc2b]
Successors: [0xc7c]
---
0xc6f PUSH1 0x1
0xc71 SWAP2
0xc72 POP
0xc73 PUSH2 0xc7c
0xc76 JUMP
---
0xc6f: V1162 = 0x1
0xc73: V1163 = 0xc7c
0xc76: JUMP 0xc7c
---
Entry stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1153]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, V1153]

================================

Block 0xc77
[0xc77:0xc7b]
---
Predecessors: [0xc2b]
Successors: [0xc7c]
---
0xc77 JUMPDEST
0xc78 PUSH1 0x0
0xc7a SWAP2
0xc7b POP
---
0xc77: JUMPDEST 
0xc78: V1164 = 0x0
---
Entry stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1153]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1153]

================================

Block 0xc7c
[0xc7c:0xc82]
---
Predecessors: [0xc6f, 0xc77]
Successors: [0x69, 0x481, 0x5dc, 0x76f]
---
0xc7c JUMPDEST
0xc7d POP
0xc7e SWAP3
0xc7f SWAP2
0xc80 POP
0xc81 POP
0xc82 JUMP
---
0xc7c: JUMPDEST 
0xc82: JUMP S4
---
Entry stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V13, 0x69, S21, {0x0, 0x69}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}]

================================

Block 0xc83
[0xc83:0xc8e]
---
Predecessors: [0xbc0, 0xbd1]
Successors: [0xc8f, 0xcf5]
---
0xc83 JUMPDEST
0xc84 DUP2
0xc85 DUP2
0xc86 ADD
0xc87 DUP3
0xc88 DUP2
0xc89 LT
0xc8a ISZERO
0xc8b PUSH2 0xcf5
0xc8e JUMPI
---
0xc83: JUMPDEST 
0xc86: V1165 = ADD S0 S1
0xc89: V1166 = LT V1165 S1
0xc8a: V1167 = ISZERO V1166
0xc8b: V1168 = 0xcf5
0xc8e: JUMPI 0xcf5 V1167
---
Entry stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1165]
Exit stack: [V13, 0x69, S26, {0x0, 0x69}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1165]

================================

Block 0xc8f
[0xc8f:0xcf4]
---
Predecessors: [0xc83]
Successors: []
---
0xc8f PUSH1 0x40
0xc91 DUP1
0xc92 MLOAD
0xc93 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcb4 DUP2
0xcb5 MSTORE
0xcb6 PUSH1 0x20
0xcb8 PUSH1 0x4
0xcba DUP3
0xcbb ADD
0xcbc MSTORE
0xcbd PUSH1 0x13
0xcbf PUSH1 0x24
0xcc1 DUP3
0xcc2 ADD
0xcc3 MSTORE
0xcc4 PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0xce5 PUSH1 0x44
0xce7 DUP3
0xce8 ADD
0xce9 MSTORE
0xcea SWAP1
0xceb MLOAD
0xcec SWAP1
0xced DUP2
0xcee SWAP1
0xcef SUB
0xcf0 PUSH1 0x64
0xcf2 ADD
0xcf3 SWAP1
0xcf4 REVERT
---
0xc8f: V1169 = 0x40
0xc92: V1170 = M[0x40]
0xc93: V1171 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcb5: M[V1170] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcb6: V1172 = 0x20
0xcb8: V1173 = 0x4
0xcbb: V1174 = ADD V1170 0x4
0xcbc: M[V1174] = 0x20
0xcbd: V1175 = 0x13
0xcbf: V1176 = 0x24
0xcc2: V1177 = ADD V1170 0x24
0xcc3: M[V1177] = 0x13
0xcc4: V1178 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0xce5: V1179 = 0x44
0xce8: V1180 = ADD V1170 0x44
0xce9: M[V1180] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0xceb: V1181 = M[0x40]
0xcef: V1182 = SUB V1170 V1181
0xcf0: V1183 = 0x64
0xcf2: V1184 = ADD 0x64 V1182
0xcf4: REVERT V1181 V1184
---
Entry stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1165]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1165]

================================

Block 0xcf5
[0xcf5:0xcfa]
---
Predecessors: [0xc83]
Successors: [0xbd1, 0xbdd]
---
0xcf5 JUMPDEST
0xcf6 SWAP3
0xcf7 SWAP2
0xcf8 POP
0xcf9 POP
0xcfa JUMP
---
0xcf5: JUMPDEST 
0xcfa: JUMP S3
---
Entry stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1165]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V13, 0x69, S27, {0x0, 0x69}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1165]

================================

Block 0xcfb
[0xcfb:0xd0a]
---
Predecessors: [0x1f4]
Successors: [0x1fe]
---
0xcfb JUMPDEST
0xcfc PUSH1 0x40
0xcfe MLOAD
0xcff PUSH2 0x464
0xd02 DUP1
0xd03 PUSH2 0xd0c
0xd06 DUP4
0xd07 CODECOPY
0xd08 ADD
0xd09 SWAP1
0xd0a JUMP
---
0xcfb: JUMPDEST 
0xcfc: V1185 = 0x40
0xcfe: V1186 = M[0x40]
0xcff: V1187 = 0x464
0xd03: V1188 = 0xd0c
0xd07: CODECOPY V1186 0xd0c 0x464
0xd08: V1189 = ADD 0x464 V1186
0xd0a: JUMP 0x1fe
---
Entry stack: [V13, 0x69, S4, S3, 0x1, V162, 0x1fe]
Stack pops: 1
Stack additions: [V1189]
Exit stack: [V13, 0x69, S4, S3, 0x1, V162, V1189]

================================

Block 0xd0b
[0xd0b:0xd1c]
---
Predecessors: []
Successors: [0xd1d]
---
0xd0b STOP
0xd0c PUSH1 0x80
0xd0e PUSH1 0x40
0xd10 MSTORE
0xd11 PUSH1 0x1
0xd13 PUSH1 0x0
0xd15 SSTORE
0xd16 CALLVALUE
0xd17 DUP1
0xd18 ISZERO
0xd19 PUSH2 0x15
0xd1c JUMPI
---
0xd0b: STOP 
0xd0c: V1190 = 0x80
0xd0e: V1191 = 0x40
0xd10: M[0x40] = 0x80
0xd11: V1192 = 0x1
0xd13: V1193 = 0x0
0xd15: S[0x0] = 0x1
0xd16: V1194 = CALLVALUE
0xd18: V1195 = ISZERO V1194
0xd19: V1196 = 0x15
0xd1c: THROWI V1195
---
Entry stack: []
Stack pops: 0
Stack additions: [V1194]
Exit stack: []

================================

Block 0xd1d
[0xd1d:0xd6d]
---
Predecessors: [0xd0b]
Successors: [0xd6e]
---
0xd1d PUSH1 0x0
0xd1f DUP1
0xd20 REVERT
0xd21 JUMPDEST
0xd22 POP
0xd23 PUSH1 0x40
0xd25 MLOAD
0xd26 PUSH1 0x20
0xd28 DUP1
0xd29 PUSH2 0x464
0xd2c DUP4
0xd2d CODECOPY
0xd2e DUP2
0xd2f ADD
0xd30 PUSH1 0x40
0xd32 MSTORE
0xd33 MLOAD
0xd34 PUSH1 0x1
0xd36 DUP1
0xd37 SLOAD
0xd38 PUSH1 0x1
0xd3a PUSH1 0xa0
0xd3c PUSH1 0x2
0xd3e EXP
0xd3f SUB
0xd40 NOT
0xd41 AND
0xd42 PUSH1 0x1
0xd44 PUSH1 0xa0
0xd46 PUSH1 0x2
0xd48 EXP
0xd49 SUB
0xd4a SWAP1
0xd4b SWAP3
0xd4c AND
0xd4d SWAP2
0xd4e SWAP1
0xd4f SWAP2
0xd50 OR
0xd51 SWAP1
0xd52 SSTORE
0xd53 PUSH2 0x40f
0xd56 DUP1
0xd57 PUSH2 0x55
0xd5a PUSH1 0x0
0xd5c CODECOPY
0xd5d PUSH1 0x0
0xd5f RETURN
0xd60 STOP
0xd61 PUSH1 0x80
0xd63 PUSH1 0x40
0xd65 MSTORE
0xd66 PUSH1 0x4
0xd68 CALLDATASIZE
0xd69 LT
0xd6a PUSH2 0x6c
0xd6d JUMPI
---
0xd1d: V1197 = 0x0
0xd20: REVERT 0x0 0x0
0xd21: JUMPDEST 
0xd23: V1198 = 0x40
0xd25: V1199 = M[0x40]
0xd26: V1200 = 0x20
0xd29: V1201 = 0x464
0xd2d: CODECOPY V1199 0x464 0x20
0xd2f: V1202 = ADD V1199 0x20
0xd30: V1203 = 0x40
0xd32: M[0x40] = V1202
0xd33: V1204 = M[V1199]
0xd34: V1205 = 0x1
0xd37: V1206 = S[0x1]
0xd38: V1207 = 0x1
0xd3a: V1208 = 0xa0
0xd3c: V1209 = 0x2
0xd3e: V1210 = EXP 0x2 0xa0
0xd3f: V1211 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd40: V1212 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd41: V1213 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1206
0xd42: V1214 = 0x1
0xd44: V1215 = 0xa0
0xd46: V1216 = 0x2
0xd48: V1217 = EXP 0x2 0xa0
0xd49: V1218 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4c: V1219 = AND V1204 0xffffffffffffffffffffffffffffffffffffffff
0xd50: V1220 = OR V1219 V1213
0xd52: S[0x1] = V1220
0xd53: V1221 = 0x40f
0xd57: V1222 = 0x55
0xd5a: V1223 = 0x0
0xd5c: CODECOPY 0x0 0x55 0x40f
0xd5d: V1224 = 0x0
0xd5f: RETURN 0x0 0x40f
0xd60: STOP 
0xd61: V1225 = 0x80
0xd63: V1226 = 0x40
0xd65: M[0x40] = 0x80
0xd66: V1227 = 0x4
0xd68: V1228 = CALLDATASIZE
0xd69: V1229 = LT V1228 0x4
0xd6a: V1230 = 0x6c
0xd6d: THROWI V1229
---
Entry stack: [V1194]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd6e
[0xd6e:0xda0]
---
Predecessors: [0xd1d]
Successors: [0xda1]
---
0xd6e PUSH4 0xffffffff
0xd73 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd91 PUSH1 0x0
0xd93 CALLDATALOAD
0xd94 DIV
0xd95 AND
0xd96 PUSH4 0x9b08e8fc
0xd9b DUP2
0xd9c EQ
0xd9d PUSH2 0x71
0xda0 JUMPI
---
0xd6e: V1231 = 0xffffffff
0xd73: V1232 = 0x100000000000000000000000000000000000000000000000000000000
0xd91: V1233 = 0x0
0xd93: V1234 = CALLDATALOAD 0x0
0xd94: V1235 = DIV V1234 0x100000000000000000000000000000000000000000000000000000000
0xd95: V1236 = AND V1235 0xffffffff
0xd96: V1237 = 0x9b08e8fc
0xd9c: V1238 = EQ V1236 0x9b08e8fc
0xd9d: V1239 = 0x71
0xda0: THROWI V1238
---
Entry stack: []
Stack pops: 0
Stack additions: [V1236]
Exit stack: [V1236]

================================

Block 0xda1
[0xda1:0xdab]
---
Predecessors: [0xd6e]
Successors: [0xdac]
---
0xda1 DUP1
0xda2 PUSH4 0xaffed0e0
0xda7 EQ
0xda8 PUSH2 0x94
0xdab JUMPI
---
0xda2: V1240 = 0xaffed0e0
0xda7: V1241 = EQ 0xaffed0e0 V1236
0xda8: V1242 = 0x94
0xdab: THROWI V1241
---
Entry stack: [V1236]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1236]

================================

Block 0xdac
[0xdac:0xdb6]
---
Predecessors: [0xda1]
Successors: [0xdb7]
---
0xdac DUP1
0xdad PUSH4 0xb8d1beb1
0xdb2 EQ
0xdb3 PUSH2 0xbb
0xdb6 JUMPI
---
0xdad: V1243 = 0xb8d1beb1
0xdb2: V1244 = EQ 0xb8d1beb1 V1236
0xdb3: V1245 = 0xbb
0xdb6: THROWI V1244
---
Entry stack: [V1236]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1236]

================================

Block 0xdb7
[0xdb7:0xdc1]
---
Predecessors: [0xdac]
Successors: [0xdc2]
---
0xdb7 DUP1
0xdb8 PUSH4 0xcfc09032
0xdbd EQ
0xdbe PUSH2 0xc3
0xdc1 JUMPI
---
0xdb8: V1246 = 0xcfc09032
0xdbd: V1247 = EQ 0xcfc09032 V1236
0xdbe: V1248 = 0xc3
0xdc1: THROWI V1247
---
Entry stack: [V1236]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1236]

================================

Block 0xdc2
[0xdc2:0xdcc]
---
Predecessors: [0xdb7]
Successors: [0xdcd]
---
0xdc2 DUP1
0xdc3 PUSH4 0xe8147a06
0xdc8 EQ
0xdc9 PUSH2 0xd8
0xdcc JUMPI
---
0xdc3: V1249 = 0xe8147a06
0xdc8: V1250 = EQ 0xe8147a06 V1236
0xdc9: V1251 = 0xd8
0xdcc: THROWI V1250
---
Entry stack: [V1236]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1236]

================================

Block 0xdcd
[0xdcd:0xdd9]
---
Predecessors: [0xdc2]
Successors: [0xdda]
---
0xdcd JUMPDEST
0xdce PUSH1 0x0
0xdd0 DUP1
0xdd1 REVERT
0xdd2 JUMPDEST
0xdd3 CALLVALUE
0xdd4 DUP1
0xdd5 ISZERO
0xdd6 PUSH2 0x7d
0xdd9 JUMPI
---
0xdcd: JUMPDEST 
0xdce: V1252 = 0x0
0xdd1: REVERT 0x0 0x0
0xdd2: JUMPDEST 
0xdd3: V1253 = CALLVALUE
0xdd5: V1254 = ISZERO V1253
0xdd6: V1255 = 0x7d
0xdd9: THROWI V1254
---
Entry stack: [V1236]
Stack pops: 0
Stack additions: [V1253]
Exit stack: []

================================

Block 0xdda
[0xdda:0xdfc]
---
Predecessors: [0xdcd]
Successors: [0xdfd]
---
0xdda PUSH1 0x0
0xddc DUP1
0xddd REVERT
0xdde JUMPDEST
0xddf POP
0xde0 PUSH2 0x92
0xde3 PUSH1 0x1
0xde5 PUSH1 0xa0
0xde7 PUSH1 0x2
0xde9 EXP
0xdea SUB
0xdeb PUSH1 0x4
0xded CALLDATALOAD
0xdee AND
0xdef PUSH2 0x109
0xdf2 JUMP
0xdf3 JUMPDEST
0xdf4 STOP
0xdf5 JUMPDEST
0xdf6 CALLVALUE
0xdf7 DUP1
0xdf8 ISZERO
0xdf9 PUSH2 0xa0
0xdfc JUMPI
---
0xdda: V1256 = 0x0
0xddd: REVERT 0x0 0x0
0xdde: JUMPDEST 
0xde0: V1257 = 0x92
0xde3: V1258 = 0x1
0xde5: V1259 = 0xa0
0xde7: V1260 = 0x2
0xde9: V1261 = EXP 0x2 0xa0
0xdea: V1262 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdeb: V1263 = 0x4
0xded: V1264 = CALLDATALOAD 0x4
0xdee: V1265 = AND V1264 0xffffffffffffffffffffffffffffffffffffffff
0xdef: V1266 = 0x109
0xdf2: THROW 
0xdf3: JUMPDEST 
0xdf4: STOP 
0xdf5: JUMPDEST 
0xdf6: V1267 = CALLVALUE
0xdf8: V1268 = ISZERO V1267
0xdf9: V1269 = 0xa0
0xdfc: THROWI V1268
---
Entry stack: [V1253]
Stack pops: 0
Stack additions: [V1265, 0x92, V1267]
Exit stack: []

================================

Block 0xdfd
[0xdfd:0xe2b]
---
Predecessors: [0xdda]
Successors: [0xe2c]
---
0xdfd PUSH1 0x0
0xdff DUP1
0xe00 REVERT
0xe01 JUMPDEST
0xe02 POP
0xe03 PUSH2 0xa9
0xe06 PUSH2 0x14f
0xe09 JUMP
0xe0a JUMPDEST
0xe0b PUSH1 0x40
0xe0d DUP1
0xe0e MLOAD
0xe0f SWAP2
0xe10 DUP3
0xe11 MSTORE
0xe12 MLOAD
0xe13 SWAP1
0xe14 DUP2
0xe15 SWAP1
0xe16 SUB
0xe17 PUSH1 0x20
0xe19 ADD
0xe1a SWAP1
0xe1b RETURN
0xe1c JUMPDEST
0xe1d PUSH2 0x92
0xe20 PUSH2 0x155
0xe23 JUMP
0xe24 JUMPDEST
0xe25 CALLVALUE
0xe26 DUP1
0xe27 ISZERO
0xe28 PUSH2 0xcf
0xe2b JUMPI
---
0xdfd: V1270 = 0x0
0xe00: REVERT 0x0 0x0
0xe01: JUMPDEST 
0xe03: V1271 = 0xa9
0xe06: V1272 = 0x14f
0xe09: THROW 
0xe0a: JUMPDEST 
0xe0b: V1273 = 0x40
0xe0e: V1274 = M[0x40]
0xe11: M[V1274] = S0
0xe12: V1275 = M[0x40]
0xe16: V1276 = SUB V1274 V1275
0xe17: V1277 = 0x20
0xe19: V1278 = ADD 0x20 V1276
0xe1b: RETURN V1275 V1278
0xe1c: JUMPDEST 
0xe1d: V1279 = 0x92
0xe20: V1280 = 0x155
0xe23: THROW 
0xe24: JUMPDEST 
0xe25: V1281 = CALLVALUE
0xe27: V1282 = ISZERO V1281
0xe28: V1283 = 0xcf
0xe2b: THROWI V1282
---
Entry stack: [V1267]
Stack pops: 0
Stack additions: [0xa9, 0x92, V1281]
Exit stack: []

================================

Block 0xe2c
[0xe2c:0xe38]
---
Predecessors: [0xdfd]
Successors: [0x1e8]
---
0xe2c PUSH1 0x0
0xe2e DUP1
0xe2f REVERT
0xe30 JUMPDEST
0xe31 POP
0xe32 PUSH2 0x92
0xe35 PUSH2 0x1e8
0xe38 JUMP
---
0xe2c: V1284 = 0x0
0xe2f: REVERT 0x0 0x0
0xe30: JUMPDEST 
0xe32: V1285 = 0x92
0xe35: V1286 = 0x1e8
0xe38: JUMP 0x1e8
---
Entry stack: [V1281]
Stack pops: 0
Stack additions: [0x92]
Exit stack: []

================================

Block 0xe39
[0xe39:0xe40]
---
Predecessors: []
Successors: [0xe41]
---
0xe39 JUMPDEST
0xe3a CALLVALUE
0xe3b DUP1
0xe3c ISZERO
0xe3d PUSH2 0xe4
0xe40 JUMPI
---
0xe39: JUMPDEST 
0xe3a: V1287 = CALLVALUE
0xe3c: V1288 = ISZERO V1287
0xe3d: V1289 = 0xe4
0xe40: THROWI V1288
---
Entry stack: []
Stack pops: 0
Stack additions: [V1287]
Exit stack: [V1287]

================================

Block 0xe41
[0xe41:0xe7c]
---
Predecessors: [0xe39]
Successors: [0xe7d]
---
0xe41 PUSH1 0x0
0xe43 DUP1
0xe44 REVERT
0xe45 JUMPDEST
0xe46 POP
0xe47 PUSH2 0xed
0xe4a PUSH2 0x230
0xe4d JUMP
0xe4e JUMPDEST
0xe4f PUSH1 0x40
0xe51 DUP1
0xe52 MLOAD
0xe53 PUSH1 0x1
0xe55 PUSH1 0xa0
0xe57 PUSH1 0x2
0xe59 EXP
0xe5a SUB
0xe5b SWAP1
0xe5c SWAP3
0xe5d AND
0xe5e DUP3
0xe5f MSTORE
0xe60 MLOAD
0xe61 SWAP1
0xe62 DUP2
0xe63 SWAP1
0xe64 SUB
0xe65 PUSH1 0x20
0xe67 ADD
0xe68 SWAP1
0xe69 RETURN
0xe6a JUMPDEST
0xe6b PUSH1 0x1
0xe6d SLOAD
0xe6e PUSH1 0x1
0xe70 PUSH1 0xa0
0xe72 PUSH1 0x2
0xe74 EXP
0xe75 SUB
0xe76 AND
0xe77 CALLER
0xe78 EQ
0xe79 PUSH2 0x120
0xe7c JUMPI
---
0xe41: V1290 = 0x0
0xe44: REVERT 0x0 0x0
0xe45: JUMPDEST 
0xe47: V1291 = 0xed
0xe4a: V1292 = 0x230
0xe4d: THROW 
0xe4e: JUMPDEST 
0xe4f: V1293 = 0x40
0xe52: V1294 = M[0x40]
0xe53: V1295 = 0x1
0xe55: V1296 = 0xa0
0xe57: V1297 = 0x2
0xe59: V1298 = EXP 0x2 0xa0
0xe5a: V1299 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5d: V1300 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe5f: M[V1294] = V1300
0xe60: V1301 = M[0x40]
0xe64: V1302 = SUB V1294 V1301
0xe65: V1303 = 0x20
0xe67: V1304 = ADD 0x20 V1302
0xe69: RETURN V1301 V1304
0xe6a: JUMPDEST 
0xe6b: V1305 = 0x1
0xe6d: V1306 = S[0x1]
0xe6e: V1307 = 0x1
0xe70: V1308 = 0xa0
0xe72: V1309 = 0x2
0xe74: V1310 = EXP 0x2 0xa0
0xe75: V1311 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe76: V1312 = AND 0xffffffffffffffffffffffffffffffffffffffff V1306
0xe77: V1313 = CALLER
0xe78: V1314 = EQ V1313 V1312
0xe79: V1315 = 0x120
0xe7c: THROWI V1314
---
Entry stack: [V1287]
Stack pops: 0
Stack additions: [0xed]
Exit stack: []

================================

Block 0xe7d
[0xe7d:0xec8]
---
Predecessors: [0xe41]
Successors: [0xec9]
---
0xe7d PUSH1 0x0
0xe7f DUP1
0xe80 REVERT
0xe81 JUMPDEST
0xe82 PUSH1 0x1
0xe84 DUP1
0xe85 SLOAD
0xe86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9b NOT
0xe9c AND
0xe9d PUSH1 0x1
0xe9f PUSH1 0xa0
0xea1 PUSH1 0x2
0xea3 EXP
0xea4 SUB
0xea5 SWAP3
0xea6 SWAP1
0xea7 SWAP3
0xea8 AND
0xea9 SWAP2
0xeaa SWAP1
0xeab SWAP2
0xeac OR
0xead SWAP1
0xeae SSTORE
0xeaf JUMP
0xeb0 JUMPDEST
0xeb1 PUSH1 0x0
0xeb3 SLOAD
0xeb4 DUP2
0xeb5 JUMP
0xeb6 JUMPDEST
0xeb7 PUSH1 0x1
0xeb9 SLOAD
0xeba PUSH1 0x1
0xebc PUSH1 0xa0
0xebe PUSH1 0x2
0xec0 EXP
0xec1 SUB
0xec2 AND
0xec3 CALLER
0xec4 EQ
0xec5 PUSH2 0x16c
0xec8 JUMPI
---
0xe7d: V1316 = 0x0
0xe80: REVERT 0x0 0x0
0xe81: JUMPDEST 
0xe82: V1317 = 0x1
0xe85: V1318 = S[0x1]
0xe86: V1319 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9b: V1320 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe9c: V1321 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1318
0xe9d: V1322 = 0x1
0xe9f: V1323 = 0xa0
0xea1: V1324 = 0x2
0xea3: V1325 = EXP 0x2 0xa0
0xea4: V1326 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea8: V1327 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xeac: V1328 = OR V1327 V1321
0xeae: S[0x1] = V1328
0xeaf: JUMP S1
0xeb0: JUMPDEST 
0xeb1: V1329 = 0x0
0xeb3: V1330 = S[0x0]
0xeb5: JUMP S0
0xeb6: JUMPDEST 
0xeb7: V1331 = 0x1
0xeb9: V1332 = S[0x1]
0xeba: V1333 = 0x1
0xebc: V1334 = 0xa0
0xebe: V1335 = 0x2
0xec0: V1336 = EXP 0x2 0xa0
0xec1: V1337 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec2: V1338 = AND 0xffffffffffffffffffffffffffffffffffffffff V1332
0xec3: V1339 = CALLER
0xec4: V1340 = EQ V1339 V1338
0xec5: V1341 = 0x16c
0xec8: THROWI V1340
---
Entry stack: []
Stack pops: 0
Stack additions: [V1330, S0]
Exit stack: []

================================

Block 0xec9
[0xec9:0xf05]
---
Predecessors: [0xe7d]
Successors: [0xf06]
---
0xec9 PUSH1 0x0
0xecb DUP1
0xecc REVERT
0xecd JUMPDEST
0xece PUSH1 0x1
0xed0 SLOAD
0xed1 CALLVALUE
0xed2 SWAP1
0xed3 PUSH1 0x1
0xed5 PUSH1 0xa0
0xed7 PUSH1 0x2
0xed9 EXP
0xeda SUB
0xedb AND
0xedc PUSH2 0x182
0xedf PUSH2 0x23f
0xee2 JUMP
0xee3 JUMPDEST
0xee4 PUSH1 0x1
0xee6 PUSH1 0xa0
0xee8 PUSH1 0x2
0xeea EXP
0xeeb SUB
0xeec SWAP1
0xeed SWAP2
0xeee AND
0xeef DUP2
0xef0 MSTORE
0xef1 PUSH1 0x40
0xef3 MLOAD
0xef4 SWAP1
0xef5 DUP2
0xef6 SWAP1
0xef7 SUB
0xef8 PUSH1 0x20
0xefa ADD
0xefb SWAP1
0xefc DUP3
0xefd CREATE
0xefe DUP1
0xeff ISZERO
0xf00 DUP1
0xf01 ISZERO
0xf02 PUSH2 0x1ae
0xf05 JUMPI
---
0xec9: V1342 = 0x0
0xecc: REVERT 0x0 0x0
0xecd: JUMPDEST 
0xece: V1343 = 0x1
0xed0: V1344 = S[0x1]
0xed1: V1345 = CALLVALUE
0xed3: V1346 = 0x1
0xed5: V1347 = 0xa0
0xed7: V1348 = 0x2
0xed9: V1349 = EXP 0x2 0xa0
0xeda: V1350 = SUB 0x10000000000000000000000000000000000000000 0x1
0xedb: V1351 = AND 0xffffffffffffffffffffffffffffffffffffffff V1344
0xedc: V1352 = 0x182
0xedf: V1353 = 0x23f
0xee2: THROW 
0xee3: JUMPDEST 
0xee4: V1354 = 0x1
0xee6: V1355 = 0xa0
0xee8: V1356 = 0x2
0xeea: V1357 = EXP 0x2 0xa0
0xeeb: V1358 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeee: V1359 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xef0: M[S0] = V1359
0xef1: V1360 = 0x40
0xef3: V1361 = M[0x40]
0xef7: V1362 = SUB S0 V1361
0xef8: V1363 = 0x20
0xefa: V1364 = ADD 0x20 V1362
0xefd: V1365 = CREATE S2 V1361 V1364
0xeff: V1366 = ISZERO V1365
0xf01: V1367 = ISZERO V1366
0xf02: V1368 = 0x1ae
0xf05: THROWI V1367
---
Entry stack: []
Stack pops: 0
Stack additions: [0x182, V1351, V1345, V1366, V1365, S2]
Exit stack: []

================================

Block 0xf06
[0xf06:0xf5b]
---
Predecessors: [0xec9]
Successors: [0xf5c]
---
0xf06 RETURNDATASIZE
0xf07 PUSH1 0x0
0xf09 DUP1
0xf0a RETURNDATACOPY
0xf0b RETURNDATASIZE
0xf0c PUSH1 0x0
0xf0e REVERT
0xf0f JUMPDEST
0xf10 POP
0xf11 PUSH1 0x2
0xf13 DUP1
0xf14 SLOAD
0xf15 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2a NOT
0xf2b AND
0xf2c PUSH1 0x1
0xf2e PUSH1 0xa0
0xf30 PUSH1 0x2
0xf32 EXP
0xf33 SUB
0xf34 SWAP3
0xf35 SWAP1
0xf36 SWAP3
0xf37 AND
0xf38 SWAP2
0xf39 SWAP1
0xf3a SWAP2
0xf3b OR
0xf3c SWAP1
0xf3d SSTORE
0xf3e POP
0xf3f PUSH1 0x0
0xf41 DUP1
0xf42 SLOAD
0xf43 PUSH1 0x1
0xf45 ADD
0xf46 SWAP1
0xf47 SSTORE
0xf48 JUMP
0xf49 JUMPDEST
0xf4a PUSH1 0x1
0xf4c SLOAD
0xf4d PUSH1 0x1
0xf4f PUSH1 0xa0
0xf51 PUSH1 0x2
0xf53 EXP
0xf54 SUB
0xf55 AND
0xf56 CALLER
0xf57 EQ
0xf58 PUSH2 0x1ff
0xf5b JUMPI
---
0xf06: V1369 = RETURNDATASIZE
0xf07: V1370 = 0x0
0xf0a: RETURNDATACOPY 0x0 0x0 V1369
0xf0b: V1371 = RETURNDATASIZE
0xf0c: V1372 = 0x0
0xf0e: REVERT 0x0 V1371
0xf0f: JUMPDEST 
0xf11: V1373 = 0x2
0xf14: V1374 = S[0x2]
0xf15: V1375 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2a: V1376 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf2b: V1377 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1374
0xf2c: V1378 = 0x1
0xf2e: V1379 = 0xa0
0xf30: V1380 = 0x2
0xf32: V1381 = EXP 0x2 0xa0
0xf33: V1382 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf37: V1383 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf3b: V1384 = OR V1383 V1377
0xf3d: S[0x2] = V1384
0xf3f: V1385 = 0x0
0xf42: V1386 = S[0x0]
0xf43: V1387 = 0x1
0xf45: V1388 = ADD 0x1 V1386
0xf47: S[0x0] = V1388
0xf48: JUMP S3
0xf49: JUMPDEST 
0xf4a: V1389 = 0x1
0xf4c: V1390 = S[0x1]
0xf4d: V1391 = 0x1
0xf4f: V1392 = 0xa0
0xf51: V1393 = 0x2
0xf53: V1394 = EXP 0x2 0xa0
0xf54: V1395 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf55: V1396 = AND 0xffffffffffffffffffffffffffffffffffffffff V1390
0xf56: V1397 = CALLER
0xf57: V1398 = EQ V1397 V1396
0xf58: V1399 = 0x1ff
0xf5b: THROWI V1398
---
Entry stack: [S2, V1365, V1366]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf5c
[0xf5c:0xf7a]
---
Predecessors: [0xf06]
Successors: [0xf7b]
---
0xf5c PUSH1 0x0
0xf5e DUP1
0xf5f REVERT
0xf60 JUMPDEST
0xf61 PUSH2 0x207
0xf64 PUSH2 0x24f
0xf67 JUMP
0xf68 JUMPDEST
0xf69 PUSH1 0x40
0xf6b MLOAD
0xf6c DUP1
0xf6d SWAP2
0xf6e SUB
0xf6f SWAP1
0xf70 PUSH1 0x0
0xf72 CREATE
0xf73 DUP1
0xf74 ISZERO
0xf75 DUP1
0xf76 ISZERO
0xf77 PUSH2 0x223
0xf7a JUMPI
---
0xf5c: V1400 = 0x0
0xf5f: REVERT 0x0 0x0
0xf60: JUMPDEST 
0xf61: V1401 = 0x207
0xf64: V1402 = 0x24f
0xf67: THROW 
0xf68: JUMPDEST 
0xf69: V1403 = 0x40
0xf6b: V1404 = M[0x40]
0xf6e: V1405 = SUB S0 V1404
0xf70: V1406 = 0x0
0xf72: V1407 = CREATE 0x0 V1404 V1405
0xf74: V1408 = ISZERO V1407
0xf76: V1409 = ISZERO V1408
0xf77: V1410 = 0x223
0xf7a: THROWI V1409
---
Entry stack: []
Stack pops: 0
Stack additions: [0x207, V1408, V1407]
Exit stack: []

================================

Block 0xf7b
[0xf7b:0x1045]
---
Predecessors: [0xf5c]
Successors: [0x1046]
---
0xf7b RETURNDATASIZE
0xf7c PUSH1 0x0
0xf7e DUP1
0xf7f RETURNDATACOPY
0xf80 RETURNDATASIZE
0xf81 PUSH1 0x0
0xf83 REVERT
0xf84 JUMPDEST
0xf85 POP
0xf86 POP
0xf87 PUSH1 0x0
0xf89 DUP1
0xf8a SLOAD
0xf8b PUSH1 0x1
0xf8d ADD
0xf8e SWAP1
0xf8f SSTORE
0xf90 JUMP
0xf91 JUMPDEST
0xf92 PUSH1 0x2
0xf94 SLOAD
0xf95 PUSH1 0x1
0xf97 PUSH1 0xa0
0xf99 PUSH1 0x2
0xf9b EXP
0xf9c SUB
0xf9d AND
0xf9e DUP2
0xf9f JUMP
0xfa0 JUMPDEST
0xfa1 PUSH1 0x40
0xfa3 MLOAD
0xfa4 PUSH2 0x133
0xfa7 DUP1
0xfa8 PUSH2 0x25f
0xfab DUP4
0xfac CODECOPY
0xfad ADD
0xfae SWAP1
0xfaf JUMP
0xfb0 JUMPDEST
0xfb1 PUSH1 0x40
0xfb3 MLOAD
0xfb4 PUSH1 0x52
0xfb6 DUP1
0xfb7 PUSH2 0x392
0xfba DUP4
0xfbb CODECOPY
0xfbc ADD
0xfbd SWAP1
0xfbe JUMP
0xfbf STOP
0xfc0 PUSH1 0x80
0xfc2 PUSH1 0x40
0xfc4 MSTORE
0xfc5 PUSH1 0x40
0xfc7 MLOAD
0xfc8 PUSH1 0x20
0xfca DUP1
0xfcb PUSH2 0x133
0xfce DUP4
0xfcf CODECOPY
0xfd0 DUP2
0xfd1 ADD
0xfd2 PUSH1 0x40
0xfd4 DUP2
0xfd5 DUP2
0xfd6 MSTORE
0xfd7 SWAP2
0xfd8 MLOAD
0xfd9 PUSH32 0x98a0871d00000000000000000000000000000000000000000000000000000000
0xffa DUP3
0xffb MSTORE
0xffc ORIGIN
0xffd PUSH1 0x4
0xfff DUP4
0x1000 ADD
0x1001 MSTORE
0x1002 PUSH1 0x0
0x1004 PUSH1 0x24
0x1006 DUP4
0x1007 ADD
0x1008 DUP2
0x1009 SWAP1
0x100a MSTORE
0x100b SWAP3
0x100c MLOAD
0x100d SWAP1
0x100e SWAP3
0x100f PUSH20 0x820dfa17d30f938dc2c172b716630a06ec759d99
0x1024 SWAP3
0x1025 PUSH4 0x98a0871d
0x102a SWAP3
0x102b CALLVALUE
0x102c SWAP3
0x102d PUSH1 0x44
0x102f DUP1
0x1030 DUP5
0x1031 ADD
0x1032 SWAP4
0x1033 SWAP2
0x1034 SWAP3
0x1035 SWAP2
0x1036 DUP3
0x1037 SWAP1
0x1038 SUB
0x1039 ADD
0x103a DUP2
0x103b DUP6
0x103c DUP9
0x103d DUP1
0x103e EXTCODESIZE
0x103f ISZERO
0x1040 DUP1
0x1041 ISZERO
0x1042 PUSH2 0x8a
0x1045 JUMPI
---
0xf7b: V1411 = RETURNDATASIZE
0xf7c: V1412 = 0x0
0xf7f: RETURNDATACOPY 0x0 0x0 V1411
0xf80: V1413 = RETURNDATASIZE
0xf81: V1414 = 0x0
0xf83: REVERT 0x0 V1413
0xf84: JUMPDEST 
0xf87: V1415 = 0x0
0xf8a: V1416 = S[0x0]
0xf8b: V1417 = 0x1
0xf8d: V1418 = ADD 0x1 V1416
0xf8f: S[0x0] = V1418
0xf90: JUMP S2
0xf91: JUMPDEST 
0xf92: V1419 = 0x2
0xf94: V1420 = S[0x2]
0xf95: V1421 = 0x1
0xf97: V1422 = 0xa0
0xf99: V1423 = 0x2
0xf9b: V1424 = EXP 0x2 0xa0
0xf9c: V1425 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9d: V1426 = AND 0xffffffffffffffffffffffffffffffffffffffff V1420
0xf9f: JUMP S0
0xfa0: JUMPDEST 
0xfa1: V1427 = 0x40
0xfa3: V1428 = M[0x40]
0xfa4: V1429 = 0x133
0xfa8: V1430 = 0x25f
0xfac: CODECOPY V1428 0x25f 0x133
0xfad: V1431 = ADD 0x133 V1428
0xfaf: JUMP S0
0xfb0: JUMPDEST 
0xfb1: V1432 = 0x40
0xfb3: V1433 = M[0x40]
0xfb4: V1434 = 0x52
0xfb7: V1435 = 0x392
0xfbb: CODECOPY V1433 0x392 0x52
0xfbc: V1436 = ADD 0x52 V1433
0xfbe: JUMP S0
0xfbf: STOP 
0xfc0: V1437 = 0x80
0xfc2: V1438 = 0x40
0xfc4: M[0x40] = 0x80
0xfc5: V1439 = 0x40
0xfc7: V1440 = M[0x40]
0xfc8: V1441 = 0x20
0xfcb: V1442 = 0x133
0xfcf: CODECOPY V1440 0x133 0x20
0xfd1: V1443 = ADD V1440 0x20
0xfd2: V1444 = 0x40
0xfd6: M[0x40] = V1443
0xfd8: V1445 = M[V1440]
0xfd9: V1446 = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0xffb: M[V1443] = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0xffc: V1447 = ORIGIN
0xffd: V1448 = 0x4
0x1000: V1449 = ADD V1443 0x4
0x1001: M[V1449] = V1447
0x1002: V1450 = 0x0
0x1004: V1451 = 0x24
0x1007: V1452 = ADD V1443 0x24
0x100a: M[V1452] = 0x0
0x100c: V1453 = M[0x40]
0x100f: V1454 = 0x820dfa17d30f938dc2c172b716630a06ec759d99
0x1025: V1455 = 0x98a0871d
0x102b: V1456 = CALLVALUE
0x102d: V1457 = 0x44
0x1031: V1458 = ADD V1443 0x44
0x1038: V1459 = SUB V1443 V1453
0x1039: V1460 = ADD V1459 0x44
0x103e: V1461 = EXTCODESIZE 0x820dfa17d30f938dc2c172b716630a06ec759d99
0x103f: V1462 = ISZERO V1461
0x1041: V1463 = ISZERO V1462
0x1042: V1464 = 0x8a
0x1045: THROWI V1463
---
Entry stack: [V1407, V1408]
Stack pops: 0
Stack additions: [V1426, S0, V1431, V1436, V1462, 0x820dfa17d30f938dc2c172b716630a06ec759d99, V1456, V1453, V1460, V1453, 0x0, V1458, V1456, 0x98a0871d, 0x820dfa17d30f938dc2c172b716630a06ec759d99, V1445]
Exit stack: []

================================

Block 0x1046
[0x1046:0x1054]
---
Predecessors: [0xf7b]
Successors: [0x1055]
---
0x1046 PUSH1 0x0
0x1048 DUP1
0x1049 REVERT
0x104a JUMPDEST
0x104b POP
0x104c GAS
0x104d CALL
0x104e ISZERO
0x104f DUP1
0x1050 ISZERO
0x1051 PUSH2 0x9e
0x1054 JUMPI
---
0x1046: V1465 = 0x0
0x1049: REVERT 0x0 0x0
0x104a: JUMPDEST 
0x104c: V1466 = GAS
0x104d: V1467 = CALL V1466 S1 S2 S3 S4 S5 S6
0x104e: V1468 = ISZERO V1467
0x1050: V1469 = ISZERO V1468
0x1051: V1470 = 0x9e
0x1054: THROWI V1469
---
Entry stack: [V1445, 0x820dfa17d30f938dc2c172b716630a06ec759d99, 0x98a0871d, V1456, V1458, 0x0, V1453, V1460, V1453, V1456, 0x820dfa17d30f938dc2c172b716630a06ec759d99, V1462]
Stack pops: 0
Stack additions: [V1468]
Exit stack: []

================================

Block 0x1055
[0x1055:0x10c9]
---
Predecessors: [0x1046]
Successors: [0x10ca]
---
0x1055 RETURNDATASIZE
0x1056 PUSH1 0x0
0x1058 DUP1
0x1059 RETURNDATACOPY
0x105a RETURNDATASIZE
0x105b PUSH1 0x0
0x105d REVERT
0x105e JUMPDEST
0x105f POP
0x1060 POP
0x1061 POP
0x1062 POP
0x1063 POP
0x1064 PUSH20 0x820dfa17d30f938dc2c172b716630a06ec759d99
0x1079 PUSH1 0x1
0x107b PUSH1 0xa0
0x107d PUSH1 0x2
0x107f EXP
0x1080 SUB
0x1081 AND
0x1082 PUSH4 0x3ccfd60b
0x1087 PUSH1 0x40
0x1089 MLOAD
0x108a DUP2
0x108b PUSH4 0xffffffff
0x1090 AND
0x1091 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10af MUL
0x10b0 DUP2
0x10b1 MSTORE
0x10b2 PUSH1 0x4
0x10b4 ADD
0x10b5 PUSH1 0x0
0x10b7 PUSH1 0x40
0x10b9 MLOAD
0x10ba DUP1
0x10bb DUP4
0x10bc SUB
0x10bd DUP2
0x10be PUSH1 0x0
0x10c0 DUP8
0x10c1 DUP1
0x10c2 EXTCODESIZE
0x10c3 ISZERO
0x10c4 DUP1
0x10c5 ISZERO
0x10c6 PUSH2 0x10e
0x10c9 JUMPI
---
0x1055: V1471 = RETURNDATASIZE
0x1056: V1472 = 0x0
0x1059: RETURNDATACOPY 0x0 0x0 V1471
0x105a: V1473 = RETURNDATASIZE
0x105b: V1474 = 0x0
0x105d: REVERT 0x0 V1473
0x105e: JUMPDEST 
0x1064: V1475 = 0x820dfa17d30f938dc2c172b716630a06ec759d99
0x1079: V1476 = 0x1
0x107b: V1477 = 0xa0
0x107d: V1478 = 0x2
0x107f: V1479 = EXP 0x2 0xa0
0x1080: V1480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1081: V1481 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x820dfa17d30f938dc2c172b716630a06ec759d99
0x1082: V1482 = 0x3ccfd60b
0x1087: V1483 = 0x40
0x1089: V1484 = M[0x40]
0x108b: V1485 = 0xffffffff
0x1090: V1486 = AND 0xffffffff 0x3ccfd60b
0x1091: V1487 = 0x100000000000000000000000000000000000000000000000000000000
0x10af: V1488 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x10b1: M[V1484] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x10b2: V1489 = 0x4
0x10b4: V1490 = ADD 0x4 V1484
0x10b5: V1491 = 0x0
0x10b7: V1492 = 0x40
0x10b9: V1493 = M[0x40]
0x10bc: V1494 = SUB V1490 V1493
0x10be: V1495 = 0x0
0x10c2: V1496 = EXTCODESIZE 0x820dfa17d30f938dc2c172b716630a06ec759d99
0x10c3: V1497 = ISZERO V1496
0x10c5: V1498 = ISZERO V1497
0x10c6: V1499 = 0x10e
0x10c9: THROWI V1498
---
Entry stack: [V1468]
Stack pops: 0
Stack additions: [V1497, 0x820dfa17d30f938dc2c172b716630a06ec759d99, 0x0, V1493, V1494, V1493, 0x0, V1490, 0x3ccfd60b, 0x820dfa17d30f938dc2c172b716630a06ec759d99]
Exit stack: []

================================

Block 0x10ca
[0x10ca:0x10d8]
---
Predecessors: [0x1055]
Successors: [0x10d9]
---
0x10ca PUSH1 0x0
0x10cc DUP1
0x10cd REVERT
0x10ce JUMPDEST
0x10cf POP
0x10d0 GAS
0x10d1 CALL
0x10d2 ISZERO
0x10d3 DUP1
0x10d4 ISZERO
0x10d5 PUSH2 0x122
0x10d8 JUMPI
---
0x10ca: V1500 = 0x0
0x10cd: REVERT 0x0 0x0
0x10ce: JUMPDEST 
0x10d0: V1501 = GAS
0x10d1: V1502 = CALL V1501 S1 S2 S3 S4 S5 S6
0x10d2: V1503 = ISZERO V1502
0x10d4: V1504 = ISZERO V1503
0x10d5: V1505 = 0x122
0x10d8: THROWI V1504
---
Entry stack: [0x820dfa17d30f938dc2c172b716630a06ec759d99, 0x3ccfd60b, V1490, 0x0, V1493, V1494, V1493, 0x0, 0x820dfa17d30f938dc2c172b716630a06ec759d99, V1497]
Stack pops: 0
Stack additions: [V1503]
Exit stack: []

================================

Block 0x10d9
[0x10d9:0x10fd]
---
Predecessors: [0x10ca]
Successors: [0x10fe]
---
0x10d9 RETURNDATASIZE
0x10da PUSH1 0x0
0x10dc DUP1
0x10dd RETURNDATACOPY
0x10de RETURNDATASIZE
0x10df PUSH1 0x0
0x10e1 REVERT
0x10e2 JUMPDEST
0x10e3 POP
0x10e4 POP
0x10e5 POP
0x10e6 POP
0x10e7 DUP1
0x10e8 PUSH1 0x1
0x10ea PUSH1 0xa0
0x10ec PUSH1 0x2
0x10ee EXP
0x10ef SUB
0x10f0 AND
0x10f1 SELFDESTRUCT
0x10f2 STOP
0x10f3 PUSH1 0x80
0x10f5 PUSH1 0x40
0x10f7 MSTORE
0x10f8 CALLVALUE
0x10f9 DUP1
0x10fa ISZERO
0x10fb PUSH1 0xf
0x10fd JUMPI
---
0x10d9: V1506 = RETURNDATASIZE
0x10da: V1507 = 0x0
0x10dd: RETURNDATACOPY 0x0 0x0 V1506
0x10de: V1508 = RETURNDATASIZE
0x10df: V1509 = 0x0
0x10e1: REVERT 0x0 V1508
0x10e2: JUMPDEST 
0x10e8: V1510 = 0x1
0x10ea: V1511 = 0xa0
0x10ec: V1512 = 0x2
0x10ee: V1513 = EXP 0x2 0xa0
0x10ef: V1514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f0: V1515 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x10f1: SELFDESTRUCT V1515
0x10f2: STOP 
0x10f3: V1516 = 0x80
0x10f5: V1517 = 0x40
0x10f7: M[0x40] = 0x80
0x10f8: V1518 = CALLVALUE
0x10fa: V1519 = ISZERO V1518
0x10fb: V1520 = 0xf
0x10fd: THROWI V1519
---
Entry stack: [V1503]
Stack pops: 0
Stack additions: [S4, V1518]
Exit stack: []

================================

Block 0x10fe
[0x10fe:0x1185]
---
Predecessors: [0x10d9]
Successors: [0x1186]
Has unresolved jump.
---
0x10fe PUSH1 0x0
0x1100 DUP1
0x1101 REVERT
0x1102 JUMPDEST
0x1103 POP
0x1104 PUSH1 0x35
0x1106 DUP1
0x1107 PUSH1 0x1d
0x1109 PUSH1 0x0
0x110b CODECOPY
0x110c PUSH1 0x0
0x110e RETURN
0x110f STOP
0x1110 PUSH1 0x80
0x1112 PUSH1 0x40
0x1114 MSTORE
0x1115 PUSH1 0x0
0x1117 DUP1
0x1118 REVERT
0x1119 STOP
0x111a LOG1
0x111b PUSH6 0x627a7a723058
0x1122 SHA3
0x1123 DUP5
0x1124 PUSH11 0x750e1662a9883e293a990a
0x1130 MISSING 0x27
0x1131 DUP12
0x1132 PUSH9 0x2dc085f6f6baa84e2a
0x113c MISSING 0xd3
0x113d MISSING 0xb5
0x113e CALLVALUE
0x113f PUSH29 0x94dd270029a165627a7a72305820bd0072b62e58dbc0c21cceca659a76
0x115d BLOCKHASH
0x115e PUSH13 0xd720431258afc1b12182fd85a7
0x116c CALLDATACOPY
0x116d DIV
0x116e STOP
0x116f MISSING 0x29
0x1170 LOG1
0x1171 PUSH6 0x627a7a723058
0x1178 SHA3
0x1179 NOT
0x117a MULMOD
0x117b MISSING 0x49
0x117c SWAP11
0x117d MISSING 0xc2
0x117e EXP
0x117f MISSING 0xaf
0x1180 MISSING 0xa6
0x1181 MISSING 0x26
0x1182 MISSING 0xbe
0x1183 ORIGIN
0x1184 MISSING 0x4b
0x1185 JUMPI
---
0x10fe: V1521 = 0x0
0x1101: REVERT 0x0 0x0
0x1102: JUMPDEST 
0x1104: V1522 = 0x35
0x1107: V1523 = 0x1d
0x1109: V1524 = 0x0
0x110b: CODECOPY 0x0 0x1d 0x35
0x110c: V1525 = 0x0
0x110e: RETURN 0x0 0x35
0x110f: STOP 
0x1110: V1526 = 0x80
0x1112: V1527 = 0x40
0x1114: M[0x40] = 0x80
0x1115: V1528 = 0x0
0x1118: REVERT 0x0 0x0
0x1119: STOP 
0x111a: LOG S0 S1 S2
0x111b: V1529 = 0x627a7a723058
0x1122: V1530 = SHA3 0x627a7a723058 S3
0x1124: V1531 = 0x750e1662a9883e293a990a
0x1130: MISSING 0x27
0x1132: V1532 = 0x2dc085f6f6baa84e2a
0x113c: MISSING 0xd3
0x113d: MISSING 0xb5
0x113e: V1533 = CALLVALUE
0x113f: V1534 = 0x94dd270029a165627a7a72305820bd0072b62e58dbc0c21cceca659a76
0x115d: V1535 = BLOCKHASH 0x94dd270029a165627a7a72305820bd0072b62e58dbc0c21cceca659a76
0x115e: V1536 = 0xd720431258afc1b12182fd85a7
0x116c: CALLDATACOPY 0xd720431258afc1b12182fd85a7 V1535 V1533
0x116d: V1537 = DIV S0 S1
0x116e: STOP 
0x116f: MISSING 0x29
0x1170: LOG S0 S1 S2
0x1171: V1538 = 0x627a7a723058
0x1178: V1539 = SHA3 0x627a7a723058 S3
0x1179: V1540 = NOT V1539
0x117a: V1541 = MULMOD V1540 S4 S5
0x117b: MISSING 0x49
0x117d: MISSING 0xc2
0x117e: V1542 = EXP S0 S1
0x117f: MISSING 0xaf
0x1180: MISSING 0xa6
0x1181: MISSING 0x26
0x1182: MISSING 0xbe
0x1183: V1543 = ORIGIN
0x1184: MISSING 0x4b
0x1185: JUMPI S0 S1
---
Entry stack: [V1518]
Stack pops: 0
Stack additions: [0x750e1662a9883e293a990a, S7, V1530, S4, S5, S6, S7, 0x2dc085f6f6baa84e2a, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V1537, V1541, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V1542, V1543]
Exit stack: []

================================

Block 0x1186
[0x1186:0x11ab]
---
Predecessors: [0x10fe]
Successors: []
---
0x1186 MISSING 0xf9
0x1187 MISSING 0xb2
0x1188 SSTORE
0x1189 SGT
0x118a DUP6
0x118b EXP
0x118c EXTCODECOPY
0x118d SELFDESTRUCT
0x118e PUSH29 0x1070599409baa98fa3de0029
---
0x1186: MISSING 0xf9
0x1187: MISSING 0xb2
0x1188: S[S0] = S1
0x1189: V1544 = SGT S2 S3
0x118b: V1545 = EXP S8 V1544
0x118c: EXTCODECOPY V1545 S4 S5 S6
0x118d: SELFDESTRUCT S7
0x118e: V1546 = 0x1070599409baa98fa3de0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S8, 0x1070599409baa98fa3de0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x144d8961
Entry block: 0x6b
Exit block: 0x69
Body: 0x69, 0x6b, 0x73, 0x77, 0x12b

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x8c
Exit block: 0x69
Body: 0x69, 0x8c, 0x94, 0x98, 0x189, 0x19c, 0x1a0, 0x1dc, 0x1e5

Function 2:
Public function signature: 0x42df3d61
Entry block: 0xa1
Exit block: 0x222
Body: 0x69, 0xa1, 0xa9, 0xad, 0x1e8, 0x1eb, 0x1f4, 0x1fe, 0x222, 0x22b, 0x271, 0xcfb

Function 3:
Public function signature: 0x7f99fac8
Entry block: 0xb9
Exit block: 0x69
Body: 0x69, 0xb9, 0xc1, 0xc5, 0x275, 0x2d5, 0x2d9, 0x2e4, 0x2ed, 0x2ff, 0x303, 0x30b, 0x30f, 0x35e, 0x362, 0x36d, 0x376, 0x388, 0x38c, 0x399, 0x39d, 0x3a2, 0x3ad, 0x3b9, 0x3ba, 0x3e1, 0x3e2, 0x439, 0x43d, 0x448, 0x451, 0x463, 0x467, 0x475, 0x4f5, 0x4fa, 0x505, 0x511, 0x512, 0x539, 0x53a, 0x591, 0x595, 0x5a0, 0x5a9, 0x5bb, 0x5bf, 0x5d0, 0x688, 0x68d, 0x698, 0x6a4, 0x6a5, 0x6cc, 0x6cd, 0x724, 0x728, 0x733, 0x73c, 0x74e, 0x752, 0x763, 0x813

Function 4:
Public function signature: 0x853828b6
Entry block: 0xce
Exit block: 0x69
Body: 0x69, 0xce, 0xd6, 0xda, 0x1e5, 0x81f, 0x832, 0x836, 0x867

Function 5:
Public function signature: 0xce5494bb
Entry block: 0xe3
Exit block: 0x995
Body: 0x69, 0xe3, 0xeb, 0xef, 0x870, 0x888, 0x88c, 0x891, 0x89c, 0x8a8, 0x8a9, 0x913, 0x917, 0x922, 0x92b, 0x986, 0x98a, 0x995, 0x99e, 0x9ae

Function 6:
Public function signature: 0xea0e2e8f
Entry block: 0x104
Exit block: 0x119
Body: 0x104, 0x10c, 0x110, 0x119, 0x9b3

Function 7:
Public fallback function
Entry block: 0x69
Exit block: 0x69
Body: 0x69

Function 8:
Private function
Entry block: 0xa60
Exit block: 0xc7c
Body: 0xa60, 0xabc, 0xac5, 0xadb, 0xb11, 0xb6b, 0xb74, 0xb8a, 0xbc0, 0xbd1, 0xbdd, 0xc0c, 0xc15, 0xc2b, 0xc6f, 0xc77, 0xc7c, 0xc83, 0xcf5

