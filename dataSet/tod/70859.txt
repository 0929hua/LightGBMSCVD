Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x77]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x13af4035
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x77
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x13af4035
0x1a: V12 = EQ V10 0x13af4035
0x1b: V13 = 0x77
0x1e: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xac]
---
0x1f DUP1
0x20 PUSH4 0x35c1d349
0x25 EQ
0x26 PUSH2 0xac
0x29 JUMPI
---
0x20: V14 = 0x35c1d349
0x25: V15 = EQ 0x35c1d349 V10
0x26: V16 = 0xac
0x29: JUMPI 0xac V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xf8]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xf8
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xf8
0x34: JUMPI 0xf8 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x10a]
---
0x35 DUP1
0x36 PUSH4 0x9003adfe
0x3b EQ
0x3c PUSH2 0x10a
0x3f JUMPI
---
0x36: V20 = 0x9003adfe
0x3b: V21 = EQ 0x9003adfe V10
0x3c: V22 = 0x10a
0x3f: JUMPI 0x10a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x113]
---
0x40 DUP1
0x41 PUSH4 0xa60f3588
0x46 EQ
0x47 PUSH2 0x113
0x4a JUMPI
---
0x41: V23 = 0xa60f3588
0x46: V24 = EQ 0xa60f3588 V10
0x47: V25 = 0x113
0x4a: JUMPI 0x113 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x11c]
---
0x4b DUP1
0x4c PUSH4 0xb69ef8a8
0x51 EQ
0x52 PUSH2 0x11c
0x55 JUMPI
---
0x4c: V26 = 0xb69ef8a8
0x51: V27 = EQ 0xb69ef8a8 V10
0x52: V28 = 0x11c
0x55: JUMPI 0x11c V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x125]
---
0x56 DUP1
0x57 PUSH4 0xc8796572
0x5c EQ
0x5d PUSH2 0x125
0x60 JUMPI
---
0x57: V29 = 0xc8796572
0x5c: V30 = EQ 0xc8796572 V10
0x5d: V31 = 0x125
0x60: JUMPI 0x125 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x14f]
---
0x61 DUP1
0x62 PUSH4 0xe97dcb62
0x67 EQ
0x68 PUSH2 0x14f
0x6b JUMPI
---
0x62: V32 = 0xe97dcb62
0x67: V33 = EQ 0xe97dcb62 V10
0x68: V34 = 0x14f
0x6b: JUMPI 0x14f V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x0, 0x61]
Successors: [0x153]
---
0x6c JUMPDEST
0x6d PUSH2 0x18e
0x70 PUSH2 0x14d
0x73 PUSH2 0x153
0x76 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x18e
0x70: V36 = 0x14d
0x73: V37 = 0x153
0x76: JUMP 0x153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18e, 0x14d]
Exit stack: [V10, 0x18e, 0x14d]

================================

Block 0x77
[0x77:0x96]
---
Predecessors: [0xb]
Successors: [0x97, 0xa9]
---
0x77 JUMPDEST
0x78 PUSH2 0x18e
0x7b PUSH1 0x4
0x7d CALLDATALOAD
0x7e PUSH1 0x4
0x80 SLOAD
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 SWAP1
0x8a DUP2
0x8b AND
0x8c CALLER
0x8d SWAP2
0x8e SWAP1
0x8f SWAP2
0x90 AND
0x91 EQ
0x92 ISZERO
0x93 PUSH2 0xa9
0x96 JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x18e
0x7b: V39 = 0x4
0x7d: V40 = CALLDATALOAD 0x4
0x7e: V41 = 0x4
0x80: V42 = S[0x4]
0x81: V43 = 0x1
0x83: V44 = 0xa0
0x85: V45 = 0x2
0x87: V46 = EXP 0x2 0xa0
0x88: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x8c: V49 = CALLER
0x90: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x91: V51 = EQ V50 V48
0x92: V52 = ISZERO V51
0x93: V53 = 0xa9
0x96: JUMPI 0xa9 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18e, V40]
Exit stack: [V10, 0x18e, V40]

================================

Block 0x97
[0x97:0xa8]
---
Predecessors: [0x77]
Successors: [0xa9]
---
0x97 PUSH1 0x4
0x99 DUP1
0x9a SLOAD
0x9b PUSH1 0x1
0x9d PUSH1 0xa0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 SUB
0xa3 NOT
0xa4 AND
0xa5 DUP3
0xa6 OR
0xa7 SWAP1
0xa8 SSTORE
---
0x97: V54 = 0x4
0x9a: V55 = S[0x4]
0x9b: V56 = 0x1
0x9d: V57 = 0xa0
0x9f: V58 = 0x2
0xa1: V59 = EXP 0x2 0xa0
0xa2: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3: V61 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V62 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V55
0xa6: V63 = OR V40 V62
0xa8: S[0x4] = V63
---
Entry stack: [V10, 0x18e, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x18e, V40]

================================

Block 0xa9
[0xa9:0xab]
---
Predecessors: [0x77, 0x97]
Successors: [0x18e]
---
0xa9 JUMPDEST
0xaa POP
0xab JUMP
---
0xa9: JUMPDEST 
0xab: JUMP 0x18e
---
Entry stack: [V10, 0x18e, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xbf]
---
Predecessors: [0x1f]
Successors: [0xc0]
---
0xac JUMPDEST
0xad PUSH2 0x190
0xb0 PUSH1 0x4
0xb2 CALLDATALOAD
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 SLOAD
0xb7 DUP3
0xb8 SWAP1
0xb9 DUP2
0xba LT
0xbb ISZERO
0xbc PUSH2 0x2
0xbf JUMPI
---
0xac: JUMPDEST 
0xad: V64 = 0x190
0xb0: V65 = 0x4
0xb2: V66 = CALLDATALOAD 0x4
0xb3: V67 = 0x0
0xb6: V68 = S[0x0]
0xba: V69 = LT V66 V68
0xbb: V70 = ISZERO V69
0xbc: V71 = 0x2
0xbf: THROWI V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190, V66, 0x0, V66]
Exit stack: [V10, 0x190, V66, 0x0, V66]

================================

Block 0xc0
[0xc0:0xf7]
---
Predecessors: [0xac]
Successors: [0x190]
---
0xc0 POP
0xc1 DUP1
0xc2 MSTORE
0xc3 PUSH1 0x2
0xc5 MUL
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 MLOAD
0xca PUSH1 0x20
0xcc PUSH2 0x454
0xcf DUP4
0xd0 CODECOPY
0xd1 DUP2
0xd2 MLOAD
0xd3 SWAP2
0xd4 MSTORE
0xd5 DUP2
0xd6 ADD
0xd7 SLOAD
0xd8 PUSH1 0x0
0xda DUP1
0xdb MLOAD
0xdc PUSH1 0x20
0xde PUSH2 0x434
0xe1 DUP4
0xe2 CODECOPY
0xe3 DUP2
0xe4 MLOAD
0xe5 SWAP2
0xe6 MSTORE
0xe7 SWAP2
0xe8 SWAP1
0xe9 SWAP2
0xea ADD
0xeb SLOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 AND
0xf5 SWAP1
0xf6 DUP3
0xf7 JUMP
---
0xc2: M[0x0] = 0x0
0xc3: V72 = 0x2
0xc5: V73 = MUL 0x2 V66
0xc6: V74 = 0x0
0xc9: V75 = M[0x0]
0xca: V76 = 0x20
0xcc: V77 = 0x454
0xd0: CODECOPY 0x0 0x454 0x20
0xd2: V78 = M[0x0]
0xd4: M[0x0] = V75
0xd6: V79 = ADD V73 V78
0xd7: V80 = S[V79]
0xd8: V81 = 0x0
0xdb: V82 = M[0x0]
0xdc: V83 = 0x20
0xde: V84 = 0x434
0xe2: CODECOPY 0x0 0x434 0x20
0xe4: V85 = M[0x0]
0xe6: M[0x0] = V82
0xea: V86 = ADD V85 V73
0xeb: V87 = S[V86]
0xec: V88 = 0x1
0xee: V89 = 0xa0
0xf0: V90 = 0x2
0xf2: V91 = EXP 0x2 0xa0
0xf3: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0xf7: JUMP 0x190
---
Entry stack: [V10, 0x190, V66, 0x0, V66]
Stack pops: 4
Stack additions: [S3, V93, V80]
Exit stack: [V10, 0x190, V93, V80]

================================

Block 0xf8
[0xf8:0x109]
---
Predecessors: [0x2a]
Successors: [0x1b6]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x1b6
0xfc PUSH1 0x4
0xfe SLOAD
0xff PUSH1 0x1
0x101 PUSH1 0xa0
0x103 PUSH1 0x2
0x105 EXP
0x106 SUB
0x107 AND
0x108 DUP2
0x109 JUMP
---
0xf8: JUMPDEST 
0xf9: V94 = 0x1b6
0xfc: V95 = 0x4
0xfe: V96 = S[0x4]
0xff: V97 = 0x1
0x101: V98 = 0xa0
0x103: V99 = 0x2
0x105: V100 = EXP 0x2 0xa0
0x106: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x109: JUMP 0x1b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b6, V102]
Exit stack: [V10, 0x1b6, V102]

================================

Block 0x10a
[0x10a:0x112]
---
Predecessors: [0x35]
Successors: [0x1d3]
---
0x10a JUMPDEST
0x10b PUSH2 0x1d3
0x10e PUSH1 0x2
0x110 SLOAD
0x111 DUP2
0x112 JUMP
---
0x10a: JUMPDEST 
0x10b: V103 = 0x1d3
0x10e: V104 = 0x2
0x110: V105 = S[0x2]
0x112: JUMP 0x1d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V105]
Exit stack: [V10, 0x1d3, V105]

================================

Block 0x113
[0x113:0x11b]
---
Predecessors: [0x40]
Successors: [0x1d3]
---
0x113 JUMPDEST
0x114 PUSH2 0x1d3
0x117 PUSH1 0x1
0x119 SLOAD
0x11a DUP2
0x11b JUMP
---
0x113: JUMPDEST 
0x114: V106 = 0x1d3
0x117: V107 = 0x1
0x119: V108 = S[0x1]
0x11b: JUMP 0x1d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V108]
Exit stack: [V10, 0x1d3, V108]

================================

Block 0x11c
[0x11c:0x124]
---
Predecessors: [0x4b]
Successors: [0x1d3]
---
0x11c JUMPDEST
0x11d PUSH2 0x1d3
0x120 PUSH1 0x3
0x122 SLOAD
0x123 DUP2
0x124 JUMP
---
0x11c: JUMPDEST 
0x11d: V109 = 0x1d3
0x120: V110 = 0x3
0x122: V111 = S[0x3]
0x124: JUMP 0x1d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V111]
Exit stack: [V10, 0x1d3, V111]

================================

Block 0x125
[0x125:0x141]
---
Predecessors: [0x56]
Successors: [0x142, 0x14d]
---
0x125 JUMPDEST
0x126 PUSH2 0x18e
0x129 PUSH1 0x4
0x12b SLOAD
0x12c PUSH1 0x1
0x12e PUSH1 0xa0
0x130 PUSH1 0x2
0x132 EXP
0x133 SUB
0x134 SWAP1
0x135 DUP2
0x136 AND
0x137 CALLER
0x138 SWAP2
0x139 SWAP1
0x13a SWAP2
0x13b AND
0x13c EQ
0x13d ISZERO
0x13e PUSH2 0x14d
0x141 JUMPI
---
0x125: JUMPDEST 
0x126: V112 = 0x18e
0x129: V113 = 0x4
0x12b: V114 = S[0x4]
0x12c: V115 = 0x1
0x12e: V116 = 0xa0
0x130: V117 = 0x2
0x132: V118 = EXP 0x2 0xa0
0x133: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x137: V121 = CALLER
0x13b: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V123 = EQ V122 V120
0x13d: V124 = ISZERO V123
0x13e: V125 = 0x14d
0x141: JUMPI 0x14d V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18e]
Exit stack: [V10, 0x18e]

================================

Block 0x142
[0x142:0x14c]
---
Predecessors: [0x125]
Successors: [0x14d, 0x1e5]
---
0x142 PUSH1 0x2
0x144 SLOAD
0x145 PUSH1 0x0
0x147 EQ
0x148 ISZERO
0x149 PUSH2 0x1e5
0x14c JUMPI
---
0x142: V126 = 0x2
0x144: V127 = S[0x2]
0x145: V128 = 0x0
0x147: V129 = EQ 0x0 V127
0x148: V130 = ISZERO V129
0x149: V131 = 0x1e5
0x14c: JUMPI 0x1e5 V130
---
Entry stack: [V10, 0x18e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18e]

================================

Block 0x14d
[0x14d:0x14e]
---
Predecessors: [0x125, 0x142, 0x189]
Successors: [0x18e]
---
0x14d JUMPDEST
0x14e JUMP
---
0x14d: JUMPDEST 
0x14e: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x61]
Successors: [0x153]
---
0x14f JUMPDEST
0x150 PUSH2 0x18e
---
0x14f: JUMPDEST 
0x150: V132 = 0x18e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18e]
Exit stack: [V10, 0x18e]

================================

Block 0x153
[0x153:0x169]
---
Predecessors: [0x6c, 0x14f]
Successors: [0x16a, 0x20c]
---
0x153 JUMPDEST
0x154 PUSH1 0x0
0x156 PUSH1 0x0
0x158 PUSH1 0x0
0x15a PUSH8 0xde0b6b3a7640000
0x163 CALLVALUE
0x164 LT
0x165 ISZERO
0x166 PUSH2 0x20c
0x169 JUMPI
---
0x153: JUMPDEST 
0x154: V133 = 0x0
0x156: V134 = 0x0
0x158: V135 = 0x0
0x15a: V136 = 0xde0b6b3a7640000
0x163: V137 = CALLVALUE
0x164: V138 = LT V137 0xde0b6b3a7640000
0x165: V139 = ISZERO V138
0x166: V140 = 0x20c
0x169: JUMPI 0x20c V139
---
Entry stack: [V10, S1, {0x14d, 0x18e}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0x14d, 0x18e}, 0x0, 0x0, 0x0]

================================

Block 0x16a
[0x16a:0x188]
---
Predecessors: [0x153]
Successors: [0x189]
---
0x16a PUSH1 0x40
0x16c MLOAD
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 CALLER
0x176 AND
0x177 SWAP1
0x178 DUP3
0x179 SWAP1
0x17a CALLVALUE
0x17b SWAP1
0x17c DUP3
0x17d DUP2
0x17e DUP2
0x17f DUP2
0x180 DUP6
0x181 DUP9
0x182 DUP4
0x183 CALL
0x184 POP
0x185 POP
0x186 POP
0x187 POP
0x188 POP
---
0x16a: V141 = 0x40
0x16c: V142 = M[0x40]
0x16d: V143 = 0x1
0x16f: V144 = 0xa0
0x171: V145 = 0x2
0x173: V146 = EXP 0x2 0xa0
0x174: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x175: V148 = CALLER
0x176: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V150 = CALLVALUE
0x183: V151 = CALL 0x0 V149 V150 V142 0x0 V142 0x0
---
Entry stack: [V10, S4, {0x14d, 0x18e}, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0x14d, 0x18e}, 0x0, 0x0, 0x0]

================================

Block 0x189
[0x189:0x18d]
---
Predecessors: [0x16a, 0x35c]
Successors: [0x14d, 0x18e]
---
0x189 JUMPDEST
0x18a POP
0x18b POP
0x18c POP
0x18d JUMP
---
0x189: JUMPDEST 
0x18d: JUMP {0x14d, 0x18e}
---
Entry stack: [V10, S4, {0x14d, 0x18e}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x18e
[0x18e:0x18f]
---
Predecessors: [0xa9, 0x14d, 0x189, 0x1e5]
Successors: []
---
0x18e JUMPDEST
0x18f STOP
---
0x18e: JUMPDEST 
0x18f: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x190
[0x190:0x1b5]
---
Predecessors: [0xc0]
Successors: []
---
0x190 JUMPDEST
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP4
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e AND
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 DUP3
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP3
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 SWAP2
0x1b3 SUB
0x1b4 SWAP1
0x1b5 RETURN
---
0x190: JUMPDEST 
0x191: V152 = 0x40
0x193: V153 = M[0x40]
0x196: V154 = 0x1
0x198: V155 = 0xa0
0x19a: V156 = 0x2
0x19c: V157 = EXP 0x2 0xa0
0x19d: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19e: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1a0: M[V153] = V159
0x1a1: V160 = 0x20
0x1a3: V161 = ADD 0x20 V153
0x1a6: M[V161] = V80
0x1a7: V162 = 0x20
0x1a9: V163 = ADD 0x20 V161
0x1ae: V164 = 0x40
0x1b0: V165 = M[0x40]
0x1b3: V166 = SUB V163 V165
0x1b5: RETURN V165 V166
---
Entry stack: [V10, 0x190, V93, V80]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x190]

================================

Block 0x1b6
[0x1b6:0x1d2]
---
Predecessors: [0xf8]
Successors: []
---
0x1b6 JUMPDEST
0x1b7 PUSH1 0x40
0x1b9 DUP1
0x1ba MLOAD
0x1bb PUSH1 0x1
0x1bd PUSH1 0xa0
0x1bf PUSH1 0x2
0x1c1 EXP
0x1c2 SUB
0x1c3 SWAP3
0x1c4 SWAP1
0x1c5 SWAP3
0x1c6 AND
0x1c7 DUP3
0x1c8 MSTORE
0x1c9 MLOAD
0x1ca SWAP1
0x1cb DUP2
0x1cc SWAP1
0x1cd SUB
0x1ce PUSH1 0x20
0x1d0 ADD
0x1d1 SWAP1
0x1d2 RETURN
---
0x1b6: JUMPDEST 
0x1b7: V167 = 0x40
0x1ba: V168 = M[0x40]
0x1bb: V169 = 0x1
0x1bd: V170 = 0xa0
0x1bf: V171 = 0x2
0x1c1: V172 = EXP 0x2 0xa0
0x1c2: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c8: M[V168] = V174
0x1c9: V175 = M[0x40]
0x1cd: V176 = SUB V168 V175
0x1ce: V177 = 0x20
0x1d0: V178 = ADD 0x20 V176
0x1d2: RETURN V175 V178
---
Entry stack: [V10, 0x1b6, V102]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b6]

================================

Block 0x1d3
[0x1d3:0x1e4]
---
Predecessors: [0x10a, 0x113, 0x11c]
Successors: []
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x40
0x1d6 DUP1
0x1d7 MLOAD
0x1d8 SWAP2
0x1d9 DUP3
0x1da MSTORE
0x1db MLOAD
0x1dc SWAP1
0x1dd DUP2
0x1de SWAP1
0x1df SUB
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 SWAP1
0x1e4 RETURN
---
0x1d3: JUMPDEST 
0x1d4: V179 = 0x40
0x1d7: V180 = M[0x40]
0x1da: M[V180] = S0
0x1db: V181 = M[0x40]
0x1df: V182 = SUB V180 V181
0x1e0: V183 = 0x20
0x1e2: V184 = ADD 0x20 V182
0x1e4: RETURN V181 V184
---
Entry stack: [V10, 0x1d3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d3]

================================

Block 0x1e5
[0x1e5:0x20b]
---
Predecessors: [0x142]
Successors: [0x18e]
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x2
0x1e8 SLOAD
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec PUSH1 0x4
0x1ee SLOAD
0x1ef PUSH1 0x1
0x1f1 PUSH1 0xa0
0x1f3 PUSH1 0x2
0x1f5 EXP
0x1f6 SUB
0x1f7 AND
0x1f8 SWAP2
0x1f9 PUSH1 0x0
0x1fb SWAP2
0x1fc DUP3
0x1fd DUP2
0x1fe DUP2
0x1ff DUP2
0x200 DUP6
0x201 DUP9
0x202 DUP4
0x203 CALL
0x204 POP
0x205 POP
0x206 POP
0x207 PUSH1 0x2
0x209 SSTORE
0x20a POP
0x20b JUMP
---
0x1e5: JUMPDEST 
0x1e6: V185 = 0x2
0x1e8: V186 = S[0x2]
0x1e9: V187 = 0x40
0x1eb: V188 = M[0x40]
0x1ec: V189 = 0x4
0x1ee: V190 = S[0x4]
0x1ef: V191 = 0x1
0x1f1: V192 = 0xa0
0x1f3: V193 = 0x2
0x1f5: V194 = EXP 0x2 0xa0
0x1f6: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f7: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x1f9: V197 = 0x0
0x203: V198 = CALL 0x0 V196 V186 V188 0x0 V188 0x0
0x207: V199 = 0x2
0x209: S[0x2] = 0x0
0x20b: JUMP 0x18e
---
Entry stack: [V10, 0x18e]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x20c
[0x20c:0x21c]
---
Predecessors: [0x153]
Successors: [0x21d, 0x258]
---
0x20c JUMPDEST
0x20d PUSH8 0x29a2241af62c0000
0x216 CALLVALUE
0x217 GT
0x218 ISZERO
0x219 PUSH2 0x258
0x21c JUMPI
---
0x20c: JUMPDEST 
0x20d: V200 = 0x29a2241af62c0000
0x216: V201 = CALLVALUE
0x217: V202 = GT V201 0x29a2241af62c0000
0x218: V203 = ISZERO V202
0x219: V204 = 0x258
0x21c: JUMPI 0x258 V203
---
Entry stack: [V10, S4, {0x14d, 0x18e}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x14d, 0x18e}, 0x0, 0x0, 0x0]

================================

Block 0x21d
[0x21d:0x257]
---
Predecessors: [0x20c]
Successors: [0x25c]
---
0x21d PUSH1 0x40
0x21f MLOAD
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 CALLER
0x229 AND
0x22a SWAP1
0x22b PUSH1 0x0
0x22d SWAP1
0x22e PUSH8 0x29a2241af62bffff
0x237 NOT
0x238 CALLVALUE
0x239 ADD
0x23a SWAP1
0x23b DUP3
0x23c DUP2
0x23d DUP2
0x23e DUP2
0x23f DUP6
0x240 DUP9
0x241 DUP4
0x242 CALL
0x243 POP
0x244 PUSH8 0x29a2241af62c0000
0x24d SWAP7
0x24e POP
0x24f PUSH2 0x25c
0x252 SWAP4
0x253 POP
0x254 POP
0x255 POP
0x256 POP
0x257 JUMP
---
0x21d: V205 = 0x40
0x21f: V206 = M[0x40]
0x220: V207 = 0x1
0x222: V208 = 0xa0
0x224: V209 = 0x2
0x226: V210 = EXP 0x2 0xa0
0x227: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V212 = CALLER
0x229: V213 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V214 = 0x0
0x22e: V215 = 0x29a2241af62bffff
0x237: V216 = NOT 0x29a2241af62bffff
0x238: V217 = CALLVALUE
0x239: V218 = ADD V217 0xffffffffffffffffffffffffffffffffffffffffffffffffd65ddbe509d40000
0x242: V219 = CALL 0x0 V213 V218 V206 0x0 V206 0x0
0x244: V220 = 0x29a2241af62c0000
0x24f: V221 = 0x25c
0x257: JUMP 0x25c
---
Entry stack: [V10, S4, {0x14d, 0x18e}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x29a2241af62c0000, S1, S0]
Exit stack: [V10, S4, {0x14d, 0x18e}, 0x29a2241af62c0000, 0x0, 0x0]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x20c]
Successors: [0x25c]
---
0x258 JUMPDEST
0x259 CALLVALUE
0x25a SWAP3
0x25b POP
---
0x258: JUMPDEST 
0x259: V222 = CALLVALUE
---
Entry stack: [V10, S4, {0x14d, 0x18e}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V222, S1, S0]
Exit stack: [V10, S4, {0x14d, 0x18e}, V222, 0x0, 0x0]

================================

Block 0x25c
[0x25c:0x276]
---
Predecessors: [0x21d, 0x258]
Successors: [0x277, 0x2bf]
---
0x25c JUMPDEST
0x25d PUSH1 0x0
0x25f DUP1
0x260 SLOAD
0x261 PUSH1 0x1
0x263 DUP2
0x264 ADD
0x265 DUP1
0x266 DUP4
0x267 SSTORE
0x268 SWAP1
0x269 SWAP4
0x26a POP
0x26b SWAP1
0x26c DUP2
0x26d DUP5
0x26e DUP1
0x26f ISZERO
0x270 DUP3
0x271 SWAP1
0x272 GT
0x273 PUSH2 0x2bf
0x276 JUMPI
---
0x25c: JUMPDEST 
0x25d: V223 = 0x0
0x260: V224 = S[0x0]
0x261: V225 = 0x1
0x264: V226 = ADD V224 0x1
0x267: S[0x0] = V226
0x26f: V227 = ISZERO V224
0x272: V228 = GT V227 V226
0x273: V229 = 0x2bf
0x276: JUMPI 0x2bf V228
---
Entry stack: [V10, S4, {0x14d, 0x18e}, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V224, S0, V226, 0x0, V226, V224]
Exit stack: [V10, S4, {0x14d, 0x18e}, S2, V224, 0x0, V226, 0x0, V226, V224]

================================

Block 0x277
[0x277:0x298]
---
Predecessors: [0x25c]
Successors: [0x299]
---
0x277 DUP3
0x278 DUP1
0x279 MSTORE
0x27a PUSH2 0x2bf
0x27d SWAP1
0x27e PUSH1 0x2
0x280 SWAP1
0x281 DUP2
0x282 MUL
0x283 PUSH1 0x0
0x285 DUP1
0x286 MLOAD
0x287 PUSH1 0x20
0x289 PUSH2 0x434
0x28c DUP4
0x28d CODECOPY
0x28e DUP2
0x28f MLOAD
0x290 SWAP2
0x291 MSTORE
0x292 SWAP1
0x293 DUP2
0x294 ADD
0x295 SWAP2
0x296 DUP5
0x297 MUL
0x298 ADD
---
0x279: M[0x0] = 0x0
0x27a: V230 = 0x2bf
0x27e: V231 = 0x2
0x282: V232 = MUL 0x2 V224
0x283: V233 = 0x0
0x286: V234 = M[0x0]
0x287: V235 = 0x20
0x289: V236 = 0x434
0x28d: CODECOPY 0x0 0x434 0x20
0x28f: V237 = M[0x0]
0x291: M[0x0] = V234
0x294: V238 = ADD V237 V232
0x297: V239 = MUL V226 0x2
0x298: V240 = ADD V239 V237
---
Entry stack: [V10, S8, {0x14d, 0x18e}, S6, V224, 0x0, V226, 0x0, V226, V224]
Stack pops: 3
Stack additions: [S2, S1, 0x2bf, V238, V240]
Exit stack: [V10, S8, {0x14d, 0x18e}, S6, V224, 0x0, V226, 0x0, V226, 0x2bf, V238, V240]

================================

Block 0x299
[0x299:0x2a1]
---
Predecessors: [0x277, 0x2a2]
Successors: [0x2a2, 0x33e]
---
0x299 JUMPDEST
0x29a DUP1
0x29b DUP3
0x29c GT
0x29d ISZERO
0x29e PUSH2 0x33e
0x2a1 JUMPI
---
0x299: JUMPDEST 
0x29c: V241 = GT V238 S0
0x29d: V242 = ISZERO V241
0x29e: V243 = 0x33e
0x2a1: JUMPI 0x33e V242
---
Entry stack: [V10, S10, {0x14d, 0x18e}, S8, V224, 0x0, V226, 0x0, V226, 0x2bf, V238, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S10, {0x14d, 0x18e}, S8, V224, 0x0, V226, 0x0, V226, 0x2bf, V238, S0]

================================

Block 0x2a2
[0x2a2:0x2be]
---
Predecessors: [0x299]
Successors: [0x299]
---
0x2a2 DUP1
0x2a3 SLOAD
0x2a4 PUSH1 0x1
0x2a6 PUSH1 0xa0
0x2a8 PUSH1 0x2
0x2aa EXP
0x2ab SUB
0x2ac NOT
0x2ad AND
0x2ae DUP2
0x2af SSTORE
0x2b0 PUSH1 0x0
0x2b2 PUSH1 0x1
0x2b4 SWAP2
0x2b5 SWAP1
0x2b6 SWAP2
0x2b7 ADD
0x2b8 SWAP1
0x2b9 DUP2
0x2ba SSTORE
0x2bb PUSH2 0x299
0x2be JUMP
---
0x2a3: V244 = S[S0]
0x2a4: V245 = 0x1
0x2a6: V246 = 0xa0
0x2a8: V247 = 0x2
0x2aa: V248 = EXP 0x2 0xa0
0x2ab: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ac: V250 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V251 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V244
0x2af: S[S0] = V251
0x2b0: V252 = 0x0
0x2b2: V253 = 0x1
0x2b7: V254 = ADD 0x1 S0
0x2ba: S[V254] = 0x0
0x2bb: V255 = 0x299
0x2be: JUMP 0x299
---
Entry stack: [V10, S10, {0x14d, 0x18e}, S8, V224, 0x0, V226, 0x0, V226, 0x2bf, V238, S0]
Stack pops: 1
Stack additions: [V254]
Exit stack: [V10, S10, {0x14d, 0x18e}, S8, V224, 0x0, V226, 0x0, V226, 0x2bf, V238, V254]

================================

Block 0x2bf
[0x2bf:0x2d3]
---
Predecessors: [0x25c, 0x33e]
Successors: [0x2d4]
---
0x2bf JUMPDEST
0x2c0 POP
0x2c1 POP
0x2c2 POP
0x2c3 POP
0x2c4 CALLER
0x2c5 PUSH1 0x0
0x2c7 PUSH1 0x0
0x2c9 POP
0x2ca DUP4
0x2cb DUP2
0x2cc SLOAD
0x2cd DUP2
0x2ce LT
0x2cf ISZERO
0x2d0 PUSH2 0x2
0x2d3 JUMPI
---
0x2bf: JUMPDEST 
0x2c4: V256 = CALLER
0x2c5: V257 = 0x0
0x2c7: V258 = 0x0
0x2cc: V259 = S[0x0]
0x2ce: V260 = LT V224 V259
0x2cf: V261 = ISZERO V260
0x2d0: V262 = 0x2
0x2d3: THROWI V261
---
Entry stack: [V10, S8, {0x14d, 0x18e}, S6, V224, 0x0, V226, 0x0, V226, S0]
Stack pops: 6
Stack additions: [S5, S4, V256, 0x0, S5]
Exit stack: [V10, S8, {0x14d, 0x18e}, S6, V224, 0x0, V256, 0x0, V224]

================================

Block 0x2d4
[0x2d4:0x309]
---
Predecessors: [0x2bf]
Successors: [0x30a]
---
0x2d4 DUP2
0x2d5 DUP1
0x2d6 MSTORE
0x2d7 PUSH1 0x2
0x2d9 MUL
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd MLOAD
0x2de PUSH1 0x20
0x2e0 PUSH2 0x434
0x2e3 DUP4
0x2e4 CODECOPY
0x2e5 DUP2
0x2e6 MLOAD
0x2e7 SWAP2
0x2e8 MSTORE
0x2e9 ADD
0x2ea DUP1
0x2eb SLOAD
0x2ec PUSH1 0x1
0x2ee PUSH1 0xa0
0x2f0 PUSH1 0x2
0x2f2 EXP
0x2f3 SUB
0x2f4 NOT
0x2f5 AND
0x2f6 SWAP1
0x2f7 SWAP3
0x2f8 OR
0x2f9 SWAP1
0x2fa SWAP2
0x2fb SSTORE
0x2fc DUP1
0x2fd SLOAD
0x2fe DUP5
0x2ff SWAP2
0x300 SWAP1
0x301 DUP5
0x302 SWAP1
0x303 DUP2
0x304 LT
0x305 ISZERO
0x306 PUSH2 0x2
0x309 JUMPI
---
0x2d6: M[0x0] = 0x0
0x2d7: V263 = 0x2
0x2d9: V264 = MUL 0x2 V224
0x2da: V265 = 0x0
0x2dd: V266 = M[0x0]
0x2de: V267 = 0x20
0x2e0: V268 = 0x434
0x2e4: CODECOPY 0x0 0x434 0x20
0x2e6: V269 = M[0x0]
0x2e8: M[0x0] = V266
0x2e9: V270 = ADD V269 V264
0x2eb: V271 = S[V270]
0x2ec: V272 = 0x1
0x2ee: V273 = 0xa0
0x2f0: V274 = 0x2
0x2f2: V275 = EXP 0x2 0xa0
0x2f3: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f4: V277 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V278 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V271
0x2f8: V279 = OR V256 V278
0x2fb: S[V270] = V279
0x2fd: V280 = S[0x0]
0x304: V281 = LT V224 V280
0x305: V282 = ISZERO V281
0x306: V283 = 0x2
0x309: THROWI V282
---
Entry stack: [V10, S7, {0x14d, 0x18e}, S5, V224, 0x0, V256, 0x0, V224]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, S1, S4]
Exit stack: [V10, S7, {0x14d, 0x18e}, S5, V224, 0x0, S5, 0x0, V224]

================================

Block 0x30a
[0x30a:0x326]
---
Predecessors: [0x2d4]
Successors: [0x327, 0x342]
---
0x30a PUSH1 0x2
0x30c MUL
0x30d PUSH1 0x0
0x30f DUP1
0x310 MLOAD
0x311 PUSH1 0x20
0x313 PUSH2 0x454
0x316 DUP4
0x317 CODECOPY
0x318 DUP2
0x319 MLOAD
0x31a SWAP2
0x31b MSTORE
0x31c ADD
0x31d SWAP2
0x31e SWAP1
0x31f SWAP2
0x320 SSTORE
0x321 DUP3
0x322 EQ
0x323 PUSH2 0x342
0x326 JUMPI
---
0x30a: V284 = 0x2
0x30c: V285 = MUL 0x2 V224
0x30d: V286 = 0x0
0x310: V287 = M[0x0]
0x311: V288 = 0x20
0x313: V289 = 0x454
0x317: CODECOPY 0x0 0x454 0x20
0x319: V290 = M[0x0]
0x31b: M[0x0] = V287
0x31c: V291 = ADD V290 V285
0x320: S[V291] = S2
0x322: V292 = EQ V224 0x0
0x323: V293 = 0x342
0x326: JUMPI 0x342 V292
---
Entry stack: [V10, S7, {0x14d, 0x18e}, S5, V224, 0x0, S2, 0x0, V224]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, S7, {0x14d, 0x18e}, S5, V224, 0x0]

================================

Block 0x327
[0x327:0x33d]
---
Predecessors: [0x30a]
Successors: [0x34b]
---
0x327 PUSH1 0x2
0x329 DUP1
0x32a SLOAD
0x32b PUSH1 0x19
0x32d DUP6
0x32e DIV
0x32f ADD
0x330 SWAP1
0x331 SSTORE
0x332 PUSH1 0x3
0x334 DUP1
0x335 SLOAD
0x336 DUP5
0x337 ADD
0x338 SWAP1
0x339 SSTORE
0x33a PUSH2 0x34b
0x33d JUMP
---
0x327: V294 = 0x2
0x32a: V295 = S[0x2]
0x32b: V296 = 0x19
0x32e: V297 = DIV S2 0x19
0x32f: V298 = ADD V297 V295
0x331: S[0x2] = V298
0x332: V299 = 0x3
0x335: V300 = S[0x3]
0x337: V301 = ADD S2 V300
0x339: S[0x3] = V301
0x33a: V302 = 0x34b
0x33d: JUMP 0x34b
---
Entry stack: [V10, S4, {0x14d, 0x18e}, S2, V224, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x14d, 0x18e}, S2, V224, 0x0]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x299]
Successors: [0x2bf]
---
0x33e JUMPDEST
0x33f POP
0x340 SWAP1
0x341 JUMP
---
0x33e: JUMPDEST 
0x341: JUMP 0x2bf
---
Entry stack: [V10, S10, {0x14d, 0x18e}, S8, V224, 0x0, V226, 0x0, V226, 0x2bf, V238, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S10, {0x14d, 0x18e}, S8, V224, 0x0, V226, 0x0, V226, V238]

================================

Block 0x342
[0x342:0x34a]
---
Predecessors: [0x30a]
Successors: [0x34b]
---
0x342 JUMPDEST
0x343 PUSH1 0x2
0x345 DUP1
0x346 SLOAD
0x347 DUP5
0x348 ADD
0x349 SWAP1
0x34a SSTORE
---
0x342: JUMPDEST 
0x343: V303 = 0x2
0x346: V304 = S[0x2]
0x348: V305 = ADD S2 V304
0x34a: S[0x2] = V305
---
Entry stack: [V10, S4, {0x14d, 0x18e}, S2, V224, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x14d, 0x18e}, S2, V224, 0x0]

================================

Block 0x34b
[0x34b:0x34b]
---
Predecessors: [0x327, 0x342]
Successors: [0x34c]
---
0x34b JUMPDEST
---
0x34b: JUMPDEST 
---
Entry stack: [V10, S4, {0x14d, 0x18e}, S2, V224, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x14d, 0x18e}, S2, V224, 0x0]

================================

Block 0x34c
[0x34c:0x35b]
---
Predecessors: [0x34b, 0x403]
Successors: [0x35c]
---
0x34c JUMPDEST
0x34d PUSH1 0x0
0x34f DUP1
0x350 SLOAD
0x351 PUSH1 0x1
0x353 SLOAD
0x354 SWAP1
0x355 DUP2
0x356 LT
0x357 ISZERO
0x358 PUSH2 0x2
0x35b JUMPI
---
0x34c: JUMPDEST 
0x34d: V306 = 0x0
0x350: V307 = S[0x0]
0x351: V308 = 0x1
0x353: V309 = S[0x1]
0x356: V310 = LT V309 V307
0x357: V311 = ISZERO V310
0x358: V312 = 0x2
0x35b: THROWI V311
---
Entry stack: [V10, S4, {0x14d, 0x18e}, S2, V224, S0]
Stack pops: 0
Stack additions: [0x0, V309]
Exit stack: [V10, S4, {0x14d, 0x18e}, S2, V224, S0, 0x0, V309]

================================

Block 0x35c
[0x35c:0x380]
---
Predecessors: [0x34c]
Successors: [0x189, 0x381]
---
0x35c SWAP1
0x35d DUP1
0x35e MSTORE
0x35f PUSH1 0x2
0x361 SWAP1
0x362 DUP2
0x363 MUL
0x364 PUSH1 0x0
0x366 DUP1
0x367 MLOAD
0x368 PUSH1 0x20
0x36a PUSH2 0x454
0x36d DUP4
0x36e CODECOPY
0x36f DUP2
0x370 MLOAD
0x371 SWAP2
0x372 MSTORE
0x373 ADD
0x374 SLOAD
0x375 PUSH1 0x3
0x377 SLOAD
0x378 SWAP2
0x379 MUL
0x37a SWAP1
0x37b GT
0x37c ISZERO
0x37d PUSH2 0x189
0x380 JUMPI
---
0x35e: M[0x0] = 0x0
0x35f: V313 = 0x2
0x363: V314 = MUL 0x2 V309
0x364: V315 = 0x0
0x367: V316 = M[0x0]
0x368: V317 = 0x20
0x36a: V318 = 0x454
0x36e: CODECOPY 0x0 0x454 0x20
0x370: V319 = M[0x0]
0x372: M[0x0] = V316
0x373: V320 = ADD V319 V314
0x374: V321 = S[V320]
0x375: V322 = 0x3
0x377: V323 = S[0x3]
0x379: V324 = MUL 0x2 V321
0x37b: V325 = GT V323 V324
0x37c: V326 = ISZERO V325
0x37d: V327 = 0x189
0x380: JUMPI 0x189 V326
---
Entry stack: [V10, S6, {0x14d, 0x18e}, S4, V224, S2, 0x0, V309]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S6, {0x14d, 0x18e}, S4, V224, S2]

================================

Block 0x381
[0x381:0x392]
---
Predecessors: [0x35c]
Successors: [0x393]
---
0x381 PUSH1 0x1
0x383 SLOAD
0x384 PUSH1 0x0
0x386 DUP1
0x387 SLOAD
0x388 PUSH1 0x32
0x38a SWAP3
0x38b SWAP1
0x38c DUP2
0x38d LT
0x38e ISZERO
0x38f PUSH2 0x2
0x392 JUMPI
---
0x381: V328 = 0x1
0x383: V329 = S[0x1]
0x384: V330 = 0x0
0x387: V331 = S[0x0]
0x388: V332 = 0x32
0x38d: V333 = LT V329 V331
0x38e: V334 = ISZERO V333
0x38f: V335 = 0x2
0x392: THROWI V334
---
Entry stack: [V10, S4, {0x14d, 0x18e}, S2, V224, S0]
Stack pops: 0
Stack additions: [0x32, 0x0, V329]
Exit stack: [V10, S4, {0x14d, 0x18e}, S2, V224, S0, 0x32, 0x0, V329]

================================

Block 0x393
[0x393:0x3c0]
---
Predecessors: [0x381]
Successors: [0x3c1]
---
0x393 DUP2
0x394 SLOAD
0x395 PUSH1 0x1
0x397 SLOAD
0x398 PUSH1 0x2
0x39a SWAP3
0x39b SWAP1
0x39c SWAP3
0x39d MUL
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 MLOAD
0x3a2 PUSH1 0x20
0x3a4 PUSH2 0x454
0x3a7 DUP4
0x3a8 CODECOPY
0x3a9 DUP2
0x3aa MLOAD
0x3ab SWAP2
0x3ac MSTORE
0x3ad ADD
0x3ae SLOAD
0x3af SWAP4
0x3b0 SWAP1
0x3b1 SWAP4
0x3b2 DIV
0x3b3 PUSH1 0x63
0x3b5 MUL
0x3b6 SWAP4
0x3b7 POP
0x3b8 SWAP1
0x3b9 SWAP2
0x3ba DUP2
0x3bb LT
0x3bc ISZERO
0x3bd PUSH2 0x2
0x3c0 JUMPI
---
0x394: V336 = S[0x0]
0x395: V337 = 0x1
0x397: V338 = S[0x1]
0x398: V339 = 0x2
0x39d: V340 = MUL 0x2 V329
0x39e: V341 = 0x0
0x3a1: V342 = M[0x0]
0x3a2: V343 = 0x20
0x3a4: V344 = 0x454
0x3a8: CODECOPY 0x0 0x454 0x20
0x3aa: V345 = M[0x0]
0x3ac: M[0x0] = V342
0x3ad: V346 = ADD V345 V340
0x3ae: V347 = S[V346]
0x3b2: V348 = DIV V347 0x32
0x3b3: V349 = 0x63
0x3b5: V350 = MUL 0x63 V348
0x3bb: V351 = LT V338 V336
0x3bc: V352 = ISZERO V351
0x3bd: V353 = 0x2
0x3c0: THROWI V352
---
Entry stack: [V10, S7, {0x14d, 0x18e}, S5, V224, S3, 0x32, 0x0, V329]
Stack pops: 4
Stack additions: [V350, S1, V338]
Exit stack: [V10, S7, {0x14d, 0x18e}, S5, V224, V350, 0x0, V338]

================================

Block 0x3c1
[0x3c1:0x402]
---
Predecessors: [0x393]
Successors: [0x403]
---
0x3c1 PUSH1 0x2
0x3c3 MUL
0x3c4 PUSH1 0x0
0x3c6 DUP1
0x3c7 MLOAD
0x3c8 PUSH1 0x20
0x3ca PUSH2 0x434
0x3cd DUP4
0x3ce CODECOPY
0x3cf DUP2
0x3d0 MLOAD
0x3d1 SWAP2
0x3d2 MSTORE
0x3d3 ADD
0x3d4 SLOAD
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 PUSH1 0x1
0x3da PUSH1 0xa0
0x3dc PUSH1 0x2
0x3de EXP
0x3df SUB
0x3e0 SWAP2
0x3e1 SWAP1
0x3e2 SWAP2
0x3e3 AND
0x3e4 SWAP2
0x3e5 SWAP1
0x3e6 DUP4
0x3e7 SWAP1
0x3e8 DUP3
0x3e9 DUP2
0x3ea DUP2
0x3eb DUP2
0x3ec DUP6
0x3ed DUP9
0x3ee DUP4
0x3ef CALL
0x3f0 POP
0x3f1 POP
0x3f2 DUP2
0x3f3 SLOAD
0x3f4 PUSH1 0x1
0x3f6 SLOAD
0x3f7 SWAP3
0x3f8 SWAP4
0x3f9 POP
0x3fa DUP3
0x3fb LT
0x3fc ISZERO
0x3fd SWAP1
0x3fe POP
0x3ff PUSH2 0x2
0x402 JUMPI
---
0x3c1: V354 = 0x2
0x3c3: V355 = MUL 0x2 V338
0x3c4: V356 = 0x0
0x3c7: V357 = M[0x0]
0x3c8: V358 = 0x20
0x3ca: V359 = 0x434
0x3ce: CODECOPY 0x0 0x434 0x20
0x3d0: V360 = M[0x0]
0x3d2: M[0x0] = V357
0x3d3: V361 = ADD V360 V355
0x3d4: V362 = S[V361]
0x3d5: V363 = 0x40
0x3d7: V364 = M[0x40]
0x3d8: V365 = 0x1
0x3da: V366 = 0xa0
0x3dc: V367 = 0x2
0x3de: V368 = EXP 0x2 0xa0
0x3df: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e3: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x3ef: V371 = CALL 0x0 V370 V350 V364 0x0 V364 0x0
0x3f3: V372 = S[0x0]
0x3f4: V373 = 0x1
0x3f6: V374 = S[0x1]
0x3fb: V375 = LT V374 V372
0x3fc: V376 = ISZERO V375
0x3ff: V377 = 0x2
0x402: THROWI V376
---
Entry stack: [V10, S6, {0x14d, 0x18e}, S4, V224, V350, 0x0, V338]
Stack pops: 3
Stack additions: [S2, S1, V374]
Exit stack: [V10, S6, {0x14d, 0x18e}, S4, V224, V350, 0x0, V374]

================================

Block 0x403
[0x403:0x433]
---
Predecessors: [0x3c1]
Successors: [0x34c]
---
0x403 SWAP1
0x404 DUP1
0x405 MSTORE
0x406 PUSH1 0x2
0x408 SWAP1
0x409 DUP2
0x40a MUL
0x40b PUSH1 0x0
0x40d DUP1
0x40e MLOAD
0x40f PUSH1 0x20
0x411 PUSH2 0x454
0x414 DUP4
0x415 CODECOPY
0x416 DUP2
0x417 MLOAD
0x418 SWAP2
0x419 MSTORE
0x41a ADD
0x41b SLOAD
0x41c PUSH1 0x3
0x41e DUP1
0x41f SLOAD
0x420 SWAP2
0x421 SWAP1
0x422 SWAP3
0x423 MUL
0x424 SWAP1
0x425 SUB
0x426 SWAP1
0x427 SSTORE
0x428 PUSH1 0x1
0x42a DUP1
0x42b SLOAD
0x42c DUP2
0x42d ADD
0x42e SWAP1
0x42f SSTORE
0x430 PUSH2 0x34c
0x433 JUMP
---
0x405: M[0x0] = 0x0
0x406: V378 = 0x2
0x40a: V379 = MUL 0x2 V374
0x40b: V380 = 0x0
0x40e: V381 = M[0x0]
0x40f: V382 = 0x20
0x411: V383 = 0x454
0x415: CODECOPY 0x0 0x454 0x20
0x417: V384 = M[0x0]
0x419: M[0x0] = V381
0x41a: V385 = ADD V384 V379
0x41b: V386 = S[V385]
0x41c: V387 = 0x3
0x41f: V388 = S[0x3]
0x423: V389 = MUL 0x2 V386
0x425: V390 = SUB V388 V389
0x427: S[0x3] = V390
0x428: V391 = 0x1
0x42b: V392 = S[0x1]
0x42d: V393 = ADD 0x1 V392
0x42f: S[0x1] = V393
0x430: V394 = 0x34c
0x433: JUMP 0x34c
---
Entry stack: [V10, S6, {0x14d, 0x18e}, S4, V224, V350, 0x0, V374]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S6, {0x14d, 0x18e}, S4, V224, V350]

================================

Block 0x434
[0x434:0x478]
---
Predecessors: []
Successors: []
---
0x434 MISSING 0x29
0x435 MISSING 0xd
0x436 MISSING 0xec
0x437 MISSING 0xd9
0x438 SLOAD
0x439 DUP12
0x43a PUSH3 0xa8d603
0x43e GASLIMIT
0x43f MISSING 0xa9
0x440 DUP9
0x441 CODESIZE
0x442 PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x453 PUSH4 0x290decd9
0x458 SLOAD
0x459 DUP12
0x45a PUSH3 0xa8d603
0x45e GASLIMIT
0x45f MISSING 0xa9
0x460 DUP9
0x461 CODESIZE
0x462 PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x473 PUSH5 0x0
---
0x434: MISSING 0x29
0x435: MISSING 0xd
0x436: MISSING 0xec
0x437: MISSING 0xd9
0x438: V395 = S[S0]
0x43a: V396 = 0xa8d603
0x43e: V397 = GASLIMIT
0x43f: MISSING 0xa9
0x441: V398 = CODESIZE
0x442: V399 = 0xc84ba6bc95484008f6362f93160ef3e5
0x453: V400 = 0x290decd9
0x458: V401 = S[0x290decd9]
0x45a: V402 = 0xa8d603
0x45e: V403 = GASLIMIT
0x45f: MISSING 0xa9
0x461: V404 = CODESIZE
0x462: V405 = 0xc84ba6bc95484008f6362f93160ef3e5
0x473: V406 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V397, 0xa8d603, S11, V395, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V403, 0xa8d603, S7, V401, 0xc84ba6bc95484008f6362f93160ef3e5, V398, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0x0, 0xc84ba6bc95484008f6362f93160ef3e5, V404, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x77
Exit block: 0x18e
Body: 0x77, 0x97, 0xa9, 0x18e

Function 1:
Public function signature: 0x35c1d349
Entry block: 0xac
Exit block: 0x190
Body: 0xac, 0xc0, 0x190

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xf8
Exit block: 0x1b6
Body: 0xf8, 0x1b6

Function 3:
Public function signature: 0x9003adfe
Entry block: 0x10a
Exit block: 0x1d3
Body: 0x10a, 0x1d3

Function 4:
Public function signature: 0xa60f3588
Entry block: 0x113
Exit block: 0x1d3
Body: 0x113, 0x1d3

Function 5:
Public function signature: 0xb69ef8a8
Entry block: 0x11c
Exit block: 0x1d3
Body: 0x11c, 0x1d3

Function 6:
Public function signature: 0xc8796572
Entry block: 0x125
Exit block: 0x18e
Body: 0x125, 0x142, 0x14d, 0x18e, 0x1e5

Function 7:
Public function signature: 0xe97dcb62
Entry block: 0x14f
Exit block: 0x18e
Body: 0x14d, 0x14f, 0x153, 0x16a, 0x189, 0x18e, 0x20c, 0x21d, 0x258, 0x25c, 0x277, 0x299, 0x2a2, 0x2bf, 0x2d4, 0x30a, 0x327, 0x33e, 0x342, 0x34b, 0x34c, 0x35c, 0x381, 0x393, 0x3c1, 0x403

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x18e
Body: 0x6c, 0x14d, 0x153, 0x16a, 0x189, 0x18e, 0x20c, 0x21d, 0x258, 0x25c, 0x277, 0x299, 0x2a2, 0x2bf, 0x2d4, 0x30a, 0x327, 0x33e, 0x342, 0x34b, 0x34c, 0x35c, 0x381, 0x393, 0x3c1, 0x403

