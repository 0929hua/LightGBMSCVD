Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xda]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xda
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xda
0xc: JUMPI 0xda V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x529]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x119f8747
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x529
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x119f8747
0x3b: V13 = EQ V11 0x119f8747
0x3c: V14 = 0x529
0x3f: JUMPI 0x529 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x55a]
---
0x40 DUP1
0x41 PUSH4 0x2df5e84b
0x46 EQ
0x47 PUSH2 0x55a
0x4a JUMPI
---
0x41: V15 = 0x2df5e84b
0x46: V16 = EQ 0x2df5e84b V11
0x47: V17 = 0x55a
0x4a: JUMPI 0x55a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x581]
---
0x4b DUP1
0x4c PUSH4 0x2ecd4e7d
0x51 EQ
0x52 PUSH2 0x581
0x55 JUMPI
---
0x4c: V18 = 0x2ecd4e7d
0x51: V19 = EQ 0x2ecd4e7d V11
0x52: V20 = 0x581
0x55: JUMPI 0x581 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x5a2]
---
0x56 DUP1
0x57 PUSH4 0x579ff7a2
0x5c EQ
0x5d PUSH2 0x5a2
0x60 JUMPI
---
0x57: V21 = 0x579ff7a2
0x5c: V22 = EQ 0x579ff7a2 V11
0x5d: V23 = 0x5a2
0x60: JUMPI 0x5a2 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x5b7]
---
0x61 DUP1
0x62 PUSH4 0x6ea277a2
0x67 EQ
0x68 PUSH2 0x5b7
0x6b JUMPI
---
0x62: V24 = 0x6ea277a2
0x67: V25 = EQ 0x6ea277a2 V11
0x68: V26 = 0x5b7
0x6b: JUMPI 0x5b7 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x5cf]
---
0x6c DUP1
0x6d PUSH4 0x70519861
0x72 EQ
0x73 PUSH2 0x5cf
0x76 JUMPI
---
0x6d: V27 = 0x70519861
0x72: V28 = EQ 0x70519861 V11
0x73: V29 = 0x5cf
0x76: JUMPI 0x5cf V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x5f0]
---
0x77 DUP1
0x78 PUSH4 0xb2977aeb
0x7d EQ
0x7e PUSH2 0x5f0
0x81 JUMPI
---
0x78: V30 = 0xb2977aeb
0x7d: V31 = EQ 0xb2977aeb V11
0x7e: V32 = 0x5f0
0x81: JUMPI 0x5f0 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x605]
---
0x82 DUP1
0x83 PUSH4 0xb7bbd567
0x88 EQ
0x89 PUSH2 0x605
0x8c JUMPI
---
0x83: V33 = 0xb7bbd567
0x88: V34 = EQ 0xb7bbd567 V11
0x89: V35 = 0x605
0x8c: JUMPI 0x605 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x61a]
---
0x8d DUP1
0x8e PUSH4 0xbb8c631f
0x93 EQ
0x94 PUSH2 0x61a
0x97 JUMPI
---
0x8e: V36 = 0xbb8c631f
0x93: V37 = EQ 0xbb8c631f V11
0x94: V38 = 0x61a
0x97: JUMPI 0x61a V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x62f]
---
0x98 DUP1
0x99 PUSH4 0xbe55cc1d
0x9e EQ
0x9f PUSH2 0x62f
0xa2 JUMPI
---
0x99: V39 = 0xbe55cc1d
0x9e: V40 = EQ 0xbe55cc1d V11
0x9f: V41 = 0x62f
0xa2: JUMPI 0x62f V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x644]
---
0xa3 DUP1
0xa4 PUSH4 0xc87f4a06
0xa9 EQ
0xaa PUSH2 0x644
0xad JUMPI
---
0xa4: V42 = 0xc87f4a06
0xa9: V43 = EQ 0xc87f4a06 V11
0xaa: V44 = 0x644
0xad: JUMPI 0x644 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x659]
---
0xae DUP1
0xaf PUSH4 0xca302ffa
0xb4 EQ
0xb5 PUSH2 0x659
0xb8 JUMPI
---
0xaf: V45 = 0xca302ffa
0xb4: V46 = EQ 0xca302ffa V11
0xb5: V47 = 0x659
0xb8: JUMPI 0x659 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x66e]
---
0xb9 DUP1
0xba PUSH4 0xe3ac5d26
0xbf EQ
0xc0 PUSH2 0x66e
0xc3 JUMPI
---
0xba: V48 = 0xe3ac5d26
0xbf: V49 = EQ 0xe3ac5d26 V11
0xc0: V50 = 0x66e
0xc3: JUMPI 0x66e V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x683]
---
0xc4 DUP1
0xc5 PUSH4 0xf301af42
0xca EQ
0xcb PUSH2 0x683
0xce JUMPI
---
0xc5: V51 = 0xf301af42
0xca: V52 = EQ 0xf301af42 V11
0xcb: V53 = 0x683
0xce: JUMPI 0x683 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x69b]
---
0xcf DUP1
0xd0 PUSH4 0xf40e9b8f
0xd5 EQ
0xd6 PUSH2 0x69b
0xd9 JUMPI
---
0xd0: V54 = 0xf40e9b8f
0xd5: V55 = EQ 0xf40e9b8f V11
0xd6: V56 = 0x69b
0xd9: JUMPI 0x69b V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xee]
---
Predecessors: [0x0, 0xcf]
Successors: [0xef, 0xf3]
---
0xda JUMPDEST
0xdb PUSH1 0x0
0xdd DUP1
0xde DUP1
0xdf DUP1
0xe0 DUP1
0xe1 DUP1
0xe2 DUP1
0xe3 DUP1
0xe4 PUSH3 0x655af0
0xe8 NUMBER
0xe9 LT
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xda: JUMPDEST 
0xdb: V57 = 0x0
0xe4: V58 = 0x655af0
0xe8: V59 = NUMBER
0xe9: V60 = LT V59 0x655af0
0xea: V61 = ISZERO V60
0xeb: V62 = 0xf3
0xee: JUMPI 0xf3 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xda]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V63 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0xda]
Successors: [0x6b3]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xfb
0xf7 PUSH2 0x6b3
0xfa JUMP
---
0xf3: JUMPDEST 
0xf4: V64 = 0xfb
0xf7: V65 = 0x6b3
0xfa: JUMP 0x6b3
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfb]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0x6b3]
Successors: [0x106, 0x3dd]
---
0xfb JUMPDEST
0xfc PUSH1 0x0
0xfe SLOAD
0xff CALLVALUE
0x100 EQ
0x101 ISZERO
0x102 PUSH2 0x3dd
0x105 JUMPI
---
0xfb: JUMPDEST 
0xfc: V66 = 0x0
0xfe: V67 = S[0x0]
0xff: V68 = CALLVALUE
0x100: V69 = EQ V68 V67
0x101: V70 = ISZERO V69
0x102: V71 = 0x3dd
0x105: JUMPI 0x3dd V70
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x106
[0x106:0x10d]
---
Predecessors: [0xfb]
Successors: [0x6bf]
---
0x106 PUSH2 0x10e
0x109 CALLER
0x10a PUSH2 0x6bf
0x10d JUMP
---
0x106: V72 = 0x10e
0x109: V73 = CALLER
0x10a: V74 = 0x6bf
0x10d: JUMP 0x6bf
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x10e, V73]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10e, V73]

================================

Block 0x10e
[0x10e:0x11a]
---
Predecessors: [0x792]
Successors: [0x11b, 0x246]
---
0x10e JUMPDEST
0x10f PUSH1 0x1
0x111 SLOAD
0x112 PUSH1 0x9
0x114 SLOAD
0x115 EQ
0x116 ISZERO
0x117 PUSH2 0x246
0x11a JUMPI
---
0x10e: JUMPDEST 
0x10f: V75 = 0x1
0x111: V76 = S[0x1]
0x112: V77 = 0x9
0x114: V78 = S[0x9]
0x115: V79 = EQ V78 V76
0x116: V80 = ISZERO V79
0x117: V81 = 0x246
0x11a: JUMPI 0x246 V80
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x11b
[0x11b:0x124]
---
Predecessors: [0x10e]
Successors: [0x795]
---
0x11b PUSH2 0x125
0x11e PUSH1 0x1
0x120 SLOAD
0x121 PUSH2 0x795
0x124 JUMP
---
0x11b: V82 = 0x125
0x11e: V83 = 0x1
0x120: V84 = S[0x1]
0x121: V85 = 0x795
0x124: JUMP 0x795
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x125, V84]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0, 0x125, V84]

================================

Block 0x125
[0x125:0x12b]
---
Predecessors: [0x83f]
Successors: [0x12c]
---
0x125 JUMPDEST
0x126 SWAP8
0x127 POP
0x128 PUSH1 0x0
0x12a SWAP6
0x12b POP
---
0x125: JUMPDEST 
0x128: V86 = 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V721]
Stack pops: 9
Stack additions: [S0, S7, 0x0, S5, S4, S3, S2, S1]
Exit stack: [V11, V721, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x12c
[0x12c:0x136]
---
Predecessors: [0x125, 0x1a4]
Successors: [0x137, 0x1b2]
---
0x12c JUMPDEST
0x12d PUSH1 0x8
0x12f SLOAD
0x130 DUP7
0x131 LT
0x132 ISZERO
0x133 PUSH2 0x1b2
0x136 JUMPI
---
0x12c: JUMPDEST 
0x12d: V87 = 0x8
0x12f: V88 = S[0x8]
0x131: V89 = LT S5 V88
0x132: V90 = ISZERO V89
0x133: V91 = 0x1b2
0x136: JUMPI 0x1b2 V90
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x137
[0x137:0x145]
---
Predecessors: [0x12c]
Successors: [0x146, 0x147]
---
0x137 PUSH1 0x64
0x139 PUSH1 0x8
0x13b DUP8
0x13c DUP2
0x13d SLOAD
0x13e DUP2
0x13f LT
0x140 ISZERO
0x141 ISZERO
0x142 PUSH2 0x147
0x145 JUMPI
---
0x137: V92 = 0x64
0x139: V93 = 0x8
0x13d: V94 = S[0x8]
0x13f: V95 = LT S5 V94
0x140: V96 = ISZERO V95
0x141: V97 = ISZERO V96
0x142: V98 = 0x147
0x145: JUMPI 0x147 V97
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x64, 0x8, S5]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0, 0x64, 0x8, S5]

================================

Block 0x146
[0x146:0x146]
---
Predecessors: [0x137]
Successors: []
---
0x146 INVALID
---
0x146: INVALID 
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x64, 0x8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x64, 0x8, S0]

================================

Block 0x147
[0x147:0x15d]
---
Predecessors: [0x137]
Successors: [0x15e, 0x15f]
---
0x147 JUMPDEST
0x148 SWAP1
0x149 PUSH1 0x0
0x14b MSTORE
0x14c PUSH1 0x20
0x14e PUSH1 0x0
0x150 SHA3
0x151 ADD
0x152 SLOAD
0x153 PUSH1 0x0
0x155 SLOAD
0x156 MUL
0x157 DUP2
0x158 ISZERO
0x159 ISZERO
0x15a PUSH2 0x15f
0x15d JUMPI
---
0x147: JUMPDEST 
0x149: V99 = 0x0
0x14b: M[0x0] = 0x8
0x14c: V100 = 0x20
0x14e: V101 = 0x0
0x150: V102 = SHA3 0x0 0x20
0x151: V103 = ADD V102 S0
0x152: V104 = S[V103]
0x153: V105 = 0x0
0x155: V106 = S[0x0]
0x156: V107 = MUL V106 V104
0x158: V108 = ISZERO 0x64
0x159: V109 = ISZERO 0x0
0x15a: V110 = 0x15f
0x15d: JUMPI 0x15f 0x1
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x64, 0x8, S0]
Stack pops: 3
Stack additions: [S2, V107]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x64, V107]

================================

Block 0x15e
[0x15e:0x15e]
---
Predecessors: [0x147]
Successors: []
---
0x15e INVALID
---
0x15e: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x64, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x64, V107]

================================

Block 0x15f
[0x15f:0x172]
---
Predecessors: [0x147]
Successors: [0x173, 0x174]
---
0x15f JUMPDEST
0x160 DIV
0x161 SWAP5
0x162 POP
0x163 PUSH2 0x18f
0x166 PUSH1 0x9
0x168 DUP10
0x169 DUP2
0x16a SLOAD
0x16b DUP2
0x16c LT
0x16d ISZERO
0x16e ISZERO
0x16f PUSH2 0x174
0x172 JUMPI
---
0x15f: JUMPDEST 
0x160: V111 = DIV V107 0x64
0x163: V112 = 0x18f
0x166: V113 = 0x9
0x16a: V114 = S[0x9]
0x16c: V115 = LT S9 V114
0x16d: V116 = ISZERO V115
0x16e: V117 = ISZERO V116
0x16f: V118 = 0x174
0x172: JUMPI 0x174 V117
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x64, V107]
Stack pops: 10
Stack additions: [S9, S8, S7, V111, S5, S4, S3, S2, 0x18f, 0x9, S9]
Exit stack: [V11, S9, S8, S7, V111, S5, S4, 0x0, 0x0, 0x18f, 0x9, S9]

================================

Block 0x173
[0x173:0x173]
---
Predecessors: [0x15f]
Successors: []
---
0x173 INVALID
---
0x173: INVALID 
---
Entry stack: [V11, S10, S9, S8, V111, S6, S5, 0x0, 0x0, 0x18f, 0x9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, V111, S6, S5, 0x0, 0x0, 0x18f, 0x9, S0]

================================

Block 0x174
[0x174:0x18e]
---
Predecessors: [0x15f]
Successors: [0x846]
---
0x174 JUMPDEST
0x175 PUSH1 0x0
0x177 SWAP2
0x178 DUP3
0x179 MSTORE
0x17a PUSH1 0x20
0x17c SWAP1
0x17d SWAP2
0x17e SHA3
0x17f ADD
0x180 SLOAD
0x181 PUSH1 0x1
0x183 PUSH1 0xa0
0x185 PUSH1 0x2
0x187 EXP
0x188 SUB
0x189 AND
0x18a DUP7
0x18b PUSH2 0x846
0x18e JUMP
---
0x174: JUMPDEST 
0x175: V119 = 0x0
0x179: M[0x0] = 0x9
0x17a: V120 = 0x20
0x17e: V121 = SHA3 0x0 0x20
0x17f: V122 = ADD V121 S0
0x180: V123 = S[V122]
0x181: V124 = 0x1
0x183: V125 = 0xa0
0x185: V126 = 0x2
0x187: V127 = EXP 0x2 0xa0
0x188: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x18b: V130 = 0x846
0x18e: JUMP 0x846
---
Entry stack: [V11, S10, S9, S8, V111, S6, S5, 0x0, 0x0, 0x18f, 0x9, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V129, S7]
Exit stack: [V11, S10, S9, S8, V111, S6, S5, 0x0, 0x0, 0x18f, V129, V111]

================================

Block 0x18f
[0x18f:0x1a2]
---
Predecessors: [0x846]
Successors: [0x1a3, 0x1a4]
---
0x18f JUMPDEST
0x190 DUP5
0x191 DUP8
0x192 ADD
0x193 SWAP7
0x194 POP
0x195 PUSH1 0x1
0x197 SLOAD
0x198 DUP9
0x199 PUSH1 0x1
0x19b ADD
0x19c DUP2
0x19d ISZERO
0x19e ISZERO
0x19f PUSH2 0x1a4
0x1a2 JUMPI
---
0x18f: JUMPDEST 
0x192: V131 = ADD S6 S4
0x195: V132 = 0x1
0x197: V133 = S[0x1]
0x199: V134 = 0x1
0x19b: V135 = ADD 0x1 S7
0x19d: V136 = ISZERO V133
0x19e: V137 = ISZERO V136
0x19f: V138 = 0x1a4
0x1a2: JUMPI 0x1a4 V137
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, V131, S5, S4, S3, S2, S1, S0, V133, V135]
Exit stack: [V11, S7, V131, S5, S4, S3, S2, 0x0, 0x0, V133, V135]

================================

Block 0x1a3
[0x1a3:0x1a3]
---
Predecessors: [0x18f]
Successors: []
---
0x1a3 INVALID
---
0x1a3: INVALID 
---
Entry stack: [V11, S9, V131, S7, S6, S5, S4, 0x0, 0x0, V133, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, V131, S7, S6, S5, S4, 0x0, 0x0, V133, V135]

================================

Block 0x1a4
[0x1a4:0x1b1]
---
Predecessors: [0x18f]
Successors: [0x12c]
---
0x1a4 JUMPDEST
0x1a5 MOD
0x1a6 SWAP8
0x1a7 POP
0x1a8 PUSH1 0x1
0x1aa SWAP1
0x1ab SWAP6
0x1ac ADD
0x1ad SWAP5
0x1ae PUSH2 0x12c
0x1b1 JUMP
---
0x1a4: JUMPDEST 
0x1a5: V139 = MOD V135 V133
0x1a8: V140 = 0x1
0x1ac: V141 = ADD S7 0x1
0x1ae: V142 = 0x12c
0x1b1: JUMP 0x12c
---
Entry stack: [V11, S9, V131, S7, S6, S5, S4, 0x0, 0x0, V133, V135]
Stack pops: 10
Stack additions: [V139, S8, V141, S6, S5, S4, S3, S2]
Exit stack: [V11, V139, V131, V141, S6, S5, S4, 0x0, 0x0]

================================

Block 0x1b2
[0x1b2:0x1dd]
---
Predecessors: [0x12c]
Successors: [0x1de, 0x1df]
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x8
0x1b5 SLOAD
0x1b6 PUSH1 0x1
0x1b8 SLOAD
0x1b9 PUSH1 0x5
0x1bb SLOAD
0x1bc PUSH1 0x4
0x1be SLOAD
0x1bf PUSH1 0x0
0x1c1 SLOAD
0x1c2 SWAP4
0x1c3 DUP4
0x1c4 SUB
0x1c5 SWAP8
0x1c6 POP
0x1c7 DUP8
0x1c8 SWAP4
0x1c9 DUP12
0x1ca SWAP4
0x1cb PUSH1 0x64
0x1cd SWAP4
0x1ce SWAP2
0x1cf MUL
0x1d0 SWAP2
0x1d1 DUP4
0x1d2 SUB
0x1d3 SUB
0x1d4 MUL
0x1d5 DIV
0x1d6 SUB
0x1d7 DUP2
0x1d8 ISZERO
0x1d9 ISZERO
0x1da PUSH2 0x1df
0x1dd JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V143 = 0x8
0x1b5: V144 = S[0x8]
0x1b6: V145 = 0x1
0x1b8: V146 = S[0x1]
0x1b9: V147 = 0x5
0x1bb: V148 = S[0x5]
0x1bc: V149 = 0x4
0x1be: V150 = S[0x4]
0x1bf: V151 = 0x0
0x1c1: V152 = S[0x0]
0x1c4: V153 = SUB V146 V144
0x1cb: V154 = 0x64
0x1cf: V155 = MUL V152 V146
0x1d2: V156 = SUB 0x64 V150
0x1d3: V157 = SUB V156 V148
0x1d4: V158 = MUL V157 V155
0x1d5: V159 = DIV V158 0x64
0x1d6: V160 = SUB V159 S6
0x1d8: V161 = ISZERO V153
0x1d9: V162 = ISZERO V161
0x1da: V163 = 0x1df
0x1dd: JUMPI 0x1df V162
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, V153, S2, S1, S0, V153, V160]
Exit stack: [V11, S7, S6, S5, S4, V153, S2, 0x0, 0x0, V153, V160]

================================

Block 0x1de
[0x1de:0x1de]
---
Predecessors: [0x1b2]
Successors: []
---
0x1de INVALID
---
0x1de: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, V153, S4, 0x0, 0x0, V153, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, V153, S4, 0x0, 0x0, V153, V160]

================================

Block 0x1df
[0x1df:0x1e6]
---
Predecessors: [0x1b2]
Successors: [0x1e7]
---
0x1df JUMPDEST
0x1e0 DIV
0x1e1 SWAP3
0x1e2 POP
0x1e3 PUSH1 0x0
0x1e5 SWAP6
0x1e6 POP
---
0x1df: JUMPDEST 
0x1e0: V164 = DIV V160 V153
0x1e3: V165 = 0x0
---
Entry stack: [V11, S9, S8, S7, S6, V153, S4, 0x0, 0x0, V153, V160]
Stack pops: 8
Stack additions: [0x0, S6, S5, V164, S3, S2]
Exit stack: [V11, S9, S8, 0x0, S6, V153, V164, 0x0, 0x0]

================================

Block 0x1e7
[0x1e7:0x1ef]
---
Predecessors: [0x1df, 0x22c]
Successors: [0x1f0, 0x23a]
---
0x1e7 JUMPDEST
0x1e8 DUP4
0x1e9 DUP7
0x1ea LT
0x1eb ISZERO
0x1ec PUSH2 0x23a
0x1ef JUMPI
---
0x1e7: JUMPDEST 
0x1ea: V166 = LT S5 S3
0x1eb: V167 = ISZERO V166
0x1ec: V168 = 0x23a
0x1ef: JUMPI 0x23a V167
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x1f0
[0x1f0:0x1ff]
---
Predecessors: [0x1e7]
Successors: [0x200, 0x201]
---
0x1f0 PUSH2 0x21c
0x1f3 PUSH1 0x9
0x1f5 DUP10
0x1f6 DUP2
0x1f7 SLOAD
0x1f8 DUP2
0x1f9 LT
0x1fa ISZERO
0x1fb ISZERO
0x1fc PUSH2 0x201
0x1ff JUMPI
---
0x1f0: V169 = 0x21c
0x1f3: V170 = 0x9
0x1f7: V171 = S[0x9]
0x1f9: V172 = LT S7 V171
0x1fa: V173 = ISZERO V172
0x1fb: V174 = ISZERO V173
0x1fc: V175 = 0x201
0x1ff: JUMPI 0x201 V174
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x21c, 0x9, S7]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0, 0x21c, 0x9, S7]

================================

Block 0x200
[0x200:0x200]
---
Predecessors: [0x1f0]
Successors: []
---
0x200 INVALID
---
0x200: INVALID 
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x21c, 0x9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x21c, 0x9, S0]

================================

Block 0x201
[0x201:0x21b]
---
Predecessors: [0x1f0]
Successors: [0x846]
---
0x201 JUMPDEST
0x202 PUSH1 0x0
0x204 SWAP2
0x205 DUP3
0x206 MSTORE
0x207 PUSH1 0x20
0x209 SWAP1
0x20a SWAP2
0x20b SHA3
0x20c ADD
0x20d SLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 AND
0x217 DUP5
0x218 PUSH2 0x846
0x21b JUMP
---
0x201: JUMPDEST 
0x202: V176 = 0x0
0x206: M[0x0] = 0x9
0x207: V177 = 0x20
0x20b: V178 = SHA3 0x0 0x20
0x20c: V179 = ADD V178 S0
0x20d: V180 = S[V179]
0x20e: V181 = 0x1
0x210: V182 = 0xa0
0x212: V183 = 0x2
0x214: V184 = EXP 0x2 0xa0
0x215: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x218: V187 = 0x846
0x21b: JUMP 0x846
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x21c, 0x9, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V186, S5]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x21c, V186, S5]

================================

Block 0x21c
[0x21c:0x22a]
---
Predecessors: [0x846]
Successors: [0x22b, 0x22c]
---
0x21c JUMPDEST
0x21d PUSH1 0x1
0x21f SLOAD
0x220 DUP9
0x221 PUSH1 0x1
0x223 ADD
0x224 DUP2
0x225 ISZERO
0x226 ISZERO
0x227 PUSH2 0x22c
0x22a JUMPI
---
0x21c: JUMPDEST 
0x21d: V188 = 0x1
0x21f: V189 = S[0x1]
0x221: V190 = 0x1
0x223: V191 = ADD 0x1 S7
0x225: V192 = ISZERO V189
0x226: V193 = ISZERO V192
0x227: V194 = 0x22c
0x22a: JUMPI 0x22c V193
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V189, V191]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0, V189, V191]

================================

Block 0x22b
[0x22b:0x22b]
---
Predecessors: [0x21c]
Successors: []
---
0x22b INVALID
---
0x22b: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, V189, V191]

================================

Block 0x22c
[0x22c:0x239]
---
Predecessors: [0x21c]
Successors: [0x1e7]
---
0x22c JUMPDEST
0x22d MOD
0x22e SWAP8
0x22f POP
0x230 PUSH1 0x1
0x232 SWAP1
0x233 SWAP6
0x234 ADD
0x235 SWAP5
0x236 PUSH2 0x1e7
0x239 JUMP
---
0x22c: JUMPDEST 
0x22d: V195 = MOD V191 V189
0x230: V196 = 0x1
0x234: V197 = ADD S7 0x1
0x236: V198 = 0x1e7
0x239: JUMP 0x1e7
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, V189, V191]
Stack pops: 10
Stack additions: [V195, S8, V197, S6, S5, S4, S3, S2]
Exit stack: [V11, V195, S8, V197, S6, S5, S4, 0x0, 0x0]

================================

Block 0x23a
[0x23a:0x245]
---
Predecessors: [0x1e7]
Successors: [0x95a]
---
0x23a JUMPDEST
0x23b PUSH2 0x246
0x23e PUSH1 0x9
0x240 PUSH1 0x0
0x242 PUSH2 0x95a
0x245 JUMP
---
0x23a: JUMPDEST 
0x23b: V199 = 0x246
0x23e: V200 = 0x9
0x240: V201 = 0x0
0x242: V202 = 0x95a
0x245: JUMP 0x95a
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x246, 0x9, 0x0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0, 0x246, 0x9, 0x0]

================================

Block 0x246
[0x246:0x252]
---
Predecessors: [0x10e, 0x792]
Successors: [0x253, 0x357]
---
0x246 JUMPDEST
0x247 PUSH1 0xc
0x249 SLOAD
0x24a PUSH1 0xd
0x24c SLOAD
0x24d LT
0x24e ISZERO
0x24f PUSH2 0x357
0x252 JUMPI
---
0x246: JUMPDEST 
0x247: V203 = 0xc
0x249: V204 = S[0xc]
0x24a: V205 = 0xd
0x24c: V206 = S[0xd]
0x24d: V207 = LT V206 V204
0x24e: V208 = ISZERO V207
0x24f: V209 = 0x357
0x252: JUMPI 0x357 V208
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x253
[0x253:0x261]
---
Predecessors: [0x246]
Successors: [0x262, 0x263]
---
0x253 PUSH1 0xc
0x255 PUSH1 0xd
0x257 SLOAD
0x258 DUP2
0x259 SLOAD
0x25a DUP2
0x25b LT
0x25c ISZERO
0x25d ISZERO
0x25e PUSH2 0x263
0x261 JUMPI
---
0x253: V210 = 0xc
0x255: V211 = 0xd
0x257: V212 = S[0xd]
0x259: V213 = S[0xc]
0x25b: V214 = LT V212 V213
0x25c: V215 = ISZERO V214
0x25d: V216 = ISZERO V215
0x25e: V217 = 0x263
0x261: JUMPI 0x263 V216
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xc, V212]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0, 0xc, V212]

================================

Block 0x262
[0x262:0x262]
---
Predecessors: [0x253]
Successors: []
---
0x262 INVALID
---
0x262: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0xc, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0xc, V212]

================================

Block 0x263
[0x263:0x280]
---
Predecessors: [0x253]
Successors: [0x281, 0x34d]
---
0x263 JUMPDEST
0x264 PUSH1 0x0
0x266 SWAP2
0x267 DUP3
0x268 MSTORE
0x269 PUSH1 0x20
0x26b SWAP1
0x26c SWAP2
0x26d SHA3
0x26e ADD
0x26f SLOAD
0x270 PUSH1 0x1
0x272 PUSH1 0xa0
0x274 PUSH1 0x2
0x276 EXP
0x277 SUB
0x278 AND
0x279 SWAP2
0x27a POP
0x27b DUP2
0x27c ISZERO
0x27d PUSH2 0x34d
0x280 JUMPI
---
0x263: JUMPDEST 
0x264: V218 = 0x0
0x268: M[0x0] = 0xc
0x269: V219 = 0x20
0x26d: V220 = SHA3 0x0 0x20
0x26e: V221 = ADD V220 V212
0x26f: V222 = S[V221]
0x270: V223 = 0x1
0x272: V224 = 0xa0
0x274: V225 = 0x2
0x276: V226 = EXP 0x2 0xa0
0x277: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x278: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x27c: V229 = ISZERO V228
0x27d: V230 = 0x34d
0x280: JUMPI 0x34d V229
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0xc, V212]
Stack pops: 4
Stack additions: [V228, S2]
Exit stack: [V11, S9, S8, S7, S6, S5, S4, V228, 0x0]

================================

Block 0x281
[0x281:0x29f]
---
Predecessors: [0x263]
Successors: [0x2a0, 0x348]
---
0x281 PUSH1 0x1
0x283 PUSH1 0xa0
0x285 PUSH1 0x2
0x287 EXP
0x288 SUB
0x289 DUP3
0x28a AND
0x28b PUSH1 0x0
0x28d SWAP1
0x28e DUP2
0x28f MSTORE
0x290 PUSH1 0xa
0x292 PUSH1 0x20
0x294 MSTORE
0x295 PUSH1 0x40
0x297 DUP2
0x298 SHA3
0x299 SLOAD
0x29a GT
0x29b ISZERO
0x29c PUSH2 0x348
0x29f JUMPI
---
0x281: V231 = 0x1
0x283: V232 = 0xa0
0x285: V233 = 0x2
0x287: V234 = EXP 0x2 0xa0
0x288: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28a: V236 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V237 = 0x0
0x28f: M[0x0] = V236
0x290: V238 = 0xa
0x292: V239 = 0x20
0x294: M[0x20] = 0xa
0x295: V240 = 0x40
0x298: V241 = SHA3 0x0 0x40
0x299: V242 = S[V241]
0x29a: V243 = GT V242 0x0
0x29b: V244 = ISZERO V243
0x29c: V245 = 0x348
0x29f: JUMPI 0x348 V244
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, V228, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, V228, 0x0]

================================

Block 0x2a0
[0x2a0:0x2d5]
---
Predecessors: [0x281]
Successors: [0x2d6, 0x2df]
---
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 DUP3
0x2a9 AND
0x2aa PUSH1 0x0
0x2ac DUP2
0x2ad DUP2
0x2ae MSTORE
0x2af PUSH1 0xa
0x2b1 PUSH1 0x20
0x2b3 MSTORE
0x2b4 PUSH1 0x40
0x2b6 DUP1
0x2b7 DUP3
0x2b8 SHA3
0x2b9 SLOAD
0x2ba SWAP1
0x2bb MLOAD
0x2bc DUP2
0x2bd ISZERO
0x2be PUSH2 0x8fc
0x2c1 MUL
0x2c2 SWAP3
0x2c3 DUP2
0x2c4 DUP2
0x2c5 DUP2
0x2c6 DUP6
0x2c7 DUP9
0x2c8 DUP9
0x2c9 CALL
0x2ca SWAP4
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce POP
0x2cf ISZERO
0x2d0 DUP1
0x2d1 ISZERO
0x2d2 PUSH2 0x2df
0x2d5 JUMPI
---
0x2a0: V246 = 0x1
0x2a2: V247 = 0xa0
0x2a4: V248 = 0x2
0x2a6: V249 = EXP 0x2 0xa0
0x2a7: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a9: V251 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V252 = 0x0
0x2ae: M[0x0] = V251
0x2af: V253 = 0xa
0x2b1: V254 = 0x20
0x2b3: M[0x20] = 0xa
0x2b4: V255 = 0x40
0x2b8: V256 = SHA3 0x0 0x40
0x2b9: V257 = S[V256]
0x2bb: V258 = M[0x40]
0x2bd: V259 = ISZERO V257
0x2be: V260 = 0x8fc
0x2c1: V261 = MUL 0x8fc V259
0x2c9: V262 = CALL V261 V251 V257 V258 0x0 V258 0x0
0x2cf: V263 = ISZERO V262
0x2d1: V264 = ISZERO V263
0x2d2: V265 = 0x2df
0x2d5: JUMPI 0x2df V264
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, V228, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V263]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, V228, 0x0, V263]

================================

Block 0x2d6
[0x2d6:0x2de]
---
Predecessors: [0x2a0]
Successors: []
---
0x2d6 RETURNDATASIZE
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da RETURNDATACOPY
0x2db RETURNDATASIZE
0x2dc PUSH1 0x0
0x2de REVERT
---
0x2d6: V266 = RETURNDATASIZE
0x2d7: V267 = 0x0
0x2da: RETURNDATACOPY 0x0 0x0 V266
0x2db: V268 = RETURNDATASIZE
0x2dc: V269 = 0x0
0x2de: REVERT 0x0 V268
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, V228, 0x0, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, S3, V228, 0x0, V263]

================================

Block 0x2df
[0x2df:0x316]
---
Predecessors: [0x2a0]
Successors: [0x317, 0x318]
---
0x2df JUMPDEST
0x2e0 POP
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 DUP3
0x2ea AND
0x2eb PUSH1 0x0
0x2ed SWAP1
0x2ee DUP2
0x2ef MSTORE
0x2f0 PUSH1 0xa
0x2f2 PUSH1 0x20
0x2f4 SWAP1
0x2f5 DUP2
0x2f6 MSTORE
0x2f7 PUSH1 0x40
0x2f9 DUP1
0x2fa DUP4
0x2fb SHA3
0x2fc DUP4
0x2fd SWAP1
0x2fe SSTORE
0x2ff PUSH1 0xb
0x301 SWAP1
0x302 SWAP2
0x303 MSTORE
0x304 DUP2
0x305 SHA3
0x306 SSTORE
0x307 PUSH1 0xd
0x309 SLOAD
0x30a PUSH1 0xc
0x30c DUP1
0x30d SLOAD
0x30e SWAP1
0x30f SWAP2
0x310 SWAP1
0x311 DUP2
0x312 LT
0x313 PUSH2 0x318
0x316 JUMPI
---
0x2df: JUMPDEST 
0x2e1: V270 = 0x1
0x2e3: V271 = 0xa0
0x2e5: V272 = 0x2
0x2e7: V273 = EXP 0x2 0xa0
0x2e8: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V275 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V276 = 0x0
0x2ef: M[0x0] = V275
0x2f0: V277 = 0xa
0x2f2: V278 = 0x20
0x2f6: M[0x20] = 0xa
0x2f7: V279 = 0x40
0x2fb: V280 = SHA3 0x0 0x40
0x2fe: S[V280] = 0x0
0x2ff: V281 = 0xb
0x303: M[0x20] = 0xb
0x305: V282 = SHA3 0x0 0x40
0x306: S[V282] = 0x0
0x307: V283 = 0xd
0x309: V284 = S[0xd]
0x30a: V285 = 0xc
0x30d: V286 = S[0xc]
0x312: V287 = LT V284 V286
0x313: V288 = 0x318
0x316: JUMPI 0x318 V287
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, V228, 0x0, V263]
Stack pops: 3
Stack additions: [S2, S1, 0xc, V284]
Exit stack: [V11, S8, S7, S6, S5, S4, S3, V228, 0x0, 0xc, V284]

================================

Block 0x317
[0x317:0x317]
---
Predecessors: [0x2df]
Successors: []
---
0x317 INVALID
---
0x317: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, V228, 0x0, 0xc, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, V228, 0x0, 0xc, V284]

================================

Block 0x318
[0x318:0x347]
---
Predecessors: [0x2df]
Successors: [0x348]
---
0x318 JUMPDEST
0x319 PUSH1 0x0
0x31b SWAP2
0x31c DUP3
0x31d MSTORE
0x31e PUSH1 0x20
0x320 SWAP1
0x321 SWAP2
0x322 SHA3
0x323 ADD
0x324 DUP1
0x325 SLOAD
0x326 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33b NOT
0x33c AND
0x33d SWAP1
0x33e SSTORE
0x33f PUSH1 0xd
0x341 DUP1
0x342 SLOAD
0x343 PUSH1 0x1
0x345 ADD
0x346 SWAP1
0x347 SSTORE
---
0x318: JUMPDEST 
0x319: V289 = 0x0
0x31d: M[0x0] = 0xc
0x31e: V290 = 0x20
0x322: V291 = SHA3 0x0 0x20
0x323: V292 = ADD V291 V284
0x325: V293 = S[V292]
0x326: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x33b: V295 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V296 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V293
0x33e: S[V292] = V296
0x33f: V297 = 0xd
0x342: V298 = S[0xd]
0x343: V299 = 0x1
0x345: V300 = ADD 0x1 V298
0x347: S[0xd] = V300
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, V228, 0x0, 0xc, V284]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, V228, 0x0]

================================

Block 0x348
[0x348:0x34c]
---
Predecessors: [0x281, 0x318]
Successors: [0x357]
---
0x348 JUMPDEST
0x349 PUSH2 0x357
0x34c JUMP
---
0x348: JUMPDEST 
0x349: V301 = 0x357
0x34c: JUMP 0x357
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, V228, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, S2, V228, 0x0]

================================

Block 0x34d
[0x34d:0x356]
---
Predecessors: [0x263]
Successors: [0x357]
---
0x34d JUMPDEST
0x34e PUSH1 0xd
0x350 DUP1
0x351 SLOAD
0x352 PUSH1 0x1
0x354 ADD
0x355 SWAP1
0x356 SSTORE
---
0x34d: JUMPDEST 
0x34e: V302 = 0xd
0x351: V303 = S[0xd]
0x352: V304 = 0x1
0x354: V305 = ADD 0x1 V303
0x356: S[0xd] = V305
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, V228, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, S2, V228, 0x0]

================================

Block 0x357
[0x357:0x3b8]
---
Predecessors: [0x246, 0x348, 0x34d]
Successors: [0x3b9, 0x3c2]
---
0x357 JUMPDEST
0x358 PUSH1 0x6
0x35a DUP1
0x35b SLOAD
0x35c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x371 NOT
0x372 AND
0x373 CALLER
0x374 OR
0x375 SWAP1
0x376 SSTORE
0x377 NUMBER
0x378 PUSH1 0x7
0x37a SSTORE
0x37b PUSH1 0xe
0x37d SLOAD
0x37e PUSH1 0x4
0x380 SLOAD
0x381 PUSH1 0x1
0x383 PUSH1 0xa0
0x385 PUSH1 0x2
0x387 EXP
0x388 SUB
0x389 SWAP2
0x38a SWAP1
0x38b SWAP2
0x38c AND
0x38d SWAP1
0x38e PUSH2 0x8fc
0x391 SWAP1
0x392 PUSH1 0x64
0x394 SWAP1
0x395 CALLVALUE
0x396 MUL
0x397 DIV
0x398 SWAP1
0x399 DUP2
0x39a ISZERO
0x39b MUL
0x39c SWAP1
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 PUSH1 0x0
0x3a2 PUSH1 0x40
0x3a4 MLOAD
0x3a5 DUP1
0x3a6 DUP4
0x3a7 SUB
0x3a8 DUP2
0x3a9 DUP6
0x3aa DUP9
0x3ab DUP9
0x3ac CALL
0x3ad SWAP4
0x3ae POP
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 ISZERO
0x3b3 DUP1
0x3b4 ISZERO
0x3b5 PUSH2 0x3c2
0x3b8 JUMPI
---
0x357: JUMPDEST 
0x358: V306 = 0x6
0x35b: V307 = S[0x6]
0x35c: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x371: V309 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x372: V310 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V307
0x373: V311 = CALLER
0x374: V312 = OR V311 V310
0x376: S[0x6] = V312
0x377: V313 = NUMBER
0x378: V314 = 0x7
0x37a: S[0x7] = V313
0x37b: V315 = 0xe
0x37d: V316 = S[0xe]
0x37e: V317 = 0x4
0x380: V318 = S[0x4]
0x381: V319 = 0x1
0x383: V320 = 0xa0
0x385: V321 = 0x2
0x387: V322 = EXP 0x2 0xa0
0x388: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38c: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x38e: V325 = 0x8fc
0x392: V326 = 0x64
0x395: V327 = CALLVALUE
0x396: V328 = MUL V327 V318
0x397: V329 = DIV V328 0x64
0x39a: V330 = ISZERO V329
0x39b: V331 = MUL V330 0x8fc
0x39d: V332 = 0x40
0x39f: V333 = M[0x40]
0x3a0: V334 = 0x0
0x3a2: V335 = 0x40
0x3a4: V336 = M[0x40]
0x3a7: V337 = SUB V333 V336
0x3ac: V338 = CALL V331 V324 V329 V336 V337 V336 0x0
0x3b2: V339 = ISZERO V338
0x3b4: V340 = ISZERO V339
0x3b5: V341 = 0x3c2
0x3b8: JUMPI 0x3c2 V340
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [V339]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, S1, 0x0, V339]

================================

Block 0x3b9
[0x3b9:0x3c1]
---
Predecessors: [0x357]
Successors: []
---
0x3b9 RETURNDATASIZE
0x3ba PUSH1 0x0
0x3bc DUP1
0x3bd RETURNDATACOPY
0x3be RETURNDATASIZE
0x3bf PUSH1 0x0
0x3c1 REVERT
---
0x3b9: V342 = RETURNDATASIZE
0x3ba: V343 = 0x0
0x3bd: RETURNDATACOPY 0x0 0x0 V342
0x3be: V344 = RETURNDATASIZE
0x3bf: V345 = 0x0
0x3c1: REVERT 0x0 V344
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, 0x0, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, 0x0, V339]

================================

Block 0x3c2
[0x3c2:0x3dc]
---
Predecessors: [0x357]
Successors: [0x51f]
---
0x3c2 JUMPDEST
0x3c3 POP
0x3c4 PUSH1 0x5
0x3c6 SLOAD
0x3c7 PUSH1 0x64
0x3c9 SWAP1
0x3ca CALLVALUE
0x3cb MUL
0x3cc PUSH1 0x3
0x3ce DUP1
0x3cf SLOAD
0x3d0 SWAP3
0x3d1 SWAP1
0x3d2 SWAP2
0x3d3 DIV
0x3d4 SWAP1
0x3d5 SWAP2
0x3d6 ADD
0x3d7 SWAP1
0x3d8 SSTORE
0x3d9 PUSH2 0x51f
0x3dc JUMP
---
0x3c2: JUMPDEST 
0x3c4: V346 = 0x5
0x3c6: V347 = S[0x5]
0x3c7: V348 = 0x64
0x3ca: V349 = CALLVALUE
0x3cb: V350 = MUL V349 V347
0x3cc: V351 = 0x3
0x3cf: V352 = S[0x3]
0x3d3: V353 = DIV V350 0x64
0x3d6: V354 = ADD V352 V353
0x3d8: S[0x3] = V354
0x3d9: V355 = 0x51f
0x3dc: JUMP 0x51f
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, 0x0, V339]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, 0x0]

================================

Block 0x3dd
[0x3dd:0x3e4]
---
Predecessors: [0xfb]
Successors: [0x3e5, 0x51a]
---
0x3dd JUMPDEST
0x3de CALLVALUE
0x3df ISZERO
0x3e0 ISZERO
0x3e1 PUSH2 0x51a
0x3e4 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V356 = CALLVALUE
0x3df: V357 = ISZERO V356
0x3e0: V358 = ISZERO V357
0x3e1: V359 = 0x51a
0x3e4: JUMPI 0x51a V358
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3e5
[0x3e5:0x3fd]
---
Predecessors: [0x3dd]
Successors: [0x3fe, 0x490]
---
0x3e5 POP
0x3e6 CALLER
0x3e7 PUSH1 0x0
0x3e9 SWAP1
0x3ea DUP2
0x3eb MSTORE
0x3ec PUSH1 0xa
0x3ee PUSH1 0x20
0x3f0 MSTORE
0x3f1 PUSH1 0x40
0x3f3 DUP2
0x3f4 SHA3
0x3f5 SLOAD
0x3f6 SWAP1
0x3f7 DUP2
0x3f8 GT
0x3f9 ISZERO
0x3fa PUSH2 0x490
0x3fd JUMPI
---
0x3e6: V360 = CALLER
0x3e7: V361 = 0x0
0x3eb: M[0x0] = V360
0x3ec: V362 = 0xa
0x3ee: V363 = 0x20
0x3f0: M[0x20] = 0xa
0x3f1: V364 = 0x40
0x3f4: V365 = SHA3 0x0 0x40
0x3f5: V366 = S[V365]
0x3f8: V367 = GT V366 0x0
0x3f9: V368 = ISZERO V367
0x3fa: V369 = 0x490
0x3fd: JUMPI 0x490 V368
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [V366]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]

================================

Block 0x3fe
[0x3fe:0x420]
---
Predecessors: [0x3e5]
Successors: [0x421, 0x42a]
---
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 CALLER
0x402 SWAP1
0x403 DUP3
0x404 ISZERO
0x405 PUSH2 0x8fc
0x408 MUL
0x409 SWAP1
0x40a DUP4
0x40b SWAP1
0x40c PUSH1 0x0
0x40e DUP2
0x40f DUP2
0x410 DUP2
0x411 DUP6
0x412 DUP9
0x413 DUP9
0x414 CALL
0x415 SWAP4
0x416 POP
0x417 POP
0x418 POP
0x419 POP
0x41a ISZERO
0x41b DUP1
0x41c ISZERO
0x41d PUSH2 0x42a
0x420 JUMPI
---
0x3fe: V370 = 0x40
0x400: V371 = M[0x40]
0x401: V372 = CALLER
0x404: V373 = ISZERO V366
0x405: V374 = 0x8fc
0x408: V375 = MUL 0x8fc V373
0x40c: V376 = 0x0
0x414: V377 = CALL V375 V372 V366 V371 0x0 V371 0x0
0x41a: V378 = ISZERO V377
0x41c: V379 = ISZERO V378
0x41d: V380 = 0x42a
0x420: JUMPI 0x42a V379
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]
Stack pops: 1
Stack additions: [S0, V378]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V378]

================================

Block 0x421
[0x421:0x429]
---
Predecessors: [0x3fe]
Successors: []
---
0x421 RETURNDATASIZE
0x422 PUSH1 0x0
0x424 DUP1
0x425 RETURNDATACOPY
0x426 RETURNDATASIZE
0x427 PUSH1 0x0
0x429 REVERT
---
0x421: V381 = RETURNDATASIZE
0x422: V382 = 0x0
0x425: RETURNDATACOPY 0x0 0x0 V381
0x426: V383 = RETURNDATASIZE
0x427: V384 = 0x0
0x429: REVERT 0x0 V383
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V378]

================================

Block 0x42a
[0x42a:0x459]
---
Predecessors: [0x3fe]
Successors: [0x45a, 0x45b]
---
0x42a JUMPDEST
0x42b POP
0x42c CALLER
0x42d PUSH1 0x0
0x42f SWAP1
0x430 DUP2
0x431 MSTORE
0x432 PUSH1 0xa
0x434 PUSH1 0x20
0x436 SWAP1
0x437 DUP2
0x438 MSTORE
0x439 PUSH1 0x40
0x43b DUP1
0x43c DUP4
0x43d SHA3
0x43e DUP4
0x43f SWAP1
0x440 SSTORE
0x441 PUSH1 0xb
0x443 SWAP1
0x444 SWAP2
0x445 MSTORE
0x446 SWAP1
0x447 SHA3
0x448 SLOAD
0x449 PUSH1 0xc
0x44b DUP1
0x44c SLOAD
0x44d SWAP1
0x44e SWAP2
0x44f PUSH1 0x0
0x451 NOT
0x452 ADD
0x453 SWAP1
0x454 DUP2
0x455 LT
0x456 PUSH2 0x45b
0x459 JUMPI
---
0x42a: JUMPDEST 
0x42c: V385 = CALLER
0x42d: V386 = 0x0
0x431: M[0x0] = V385
0x432: V387 = 0xa
0x434: V388 = 0x20
0x438: M[0x20] = 0xa
0x439: V389 = 0x40
0x43d: V390 = SHA3 0x0 0x40
0x440: S[V390] = 0x0
0x441: V391 = 0xb
0x445: M[0x20] = 0xb
0x447: V392 = SHA3 0x0 0x40
0x448: V393 = S[V392]
0x449: V394 = 0xc
0x44c: V395 = S[0xc]
0x44f: V396 = 0x0
0x451: V397 = NOT 0x0
0x452: V398 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V393
0x455: V399 = LT V398 V395
0x456: V400 = 0x45b
0x459: JUMPI 0x45b V399
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V378]
Stack pops: 1
Stack additions: [0xc, V398]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, 0xc, V398]

================================

Block 0x45a
[0x45a:0x45a]
---
Predecessors: [0x42a]
Successors: []
---
0x45a INVALID
---
0x45a: INVALID 
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, 0xc, V398]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, 0xc, V398]

================================

Block 0x45b
[0x45b:0x48f]
---
Predecessors: [0x42a]
Successors: [0x490]
---
0x45b JUMPDEST
0x45c PUSH1 0x0
0x45e SWAP2
0x45f DUP3
0x460 MSTORE
0x461 PUSH1 0x20
0x463 DUP1
0x464 DUP4
0x465 SHA3
0x466 SWAP1
0x467 SWAP2
0x468 ADD
0x469 DUP1
0x46a SLOAD
0x46b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x480 NOT
0x481 AND
0x482 SWAP1
0x483 SSTORE
0x484 CALLER
0x485 DUP3
0x486 MSTORE
0x487 PUSH1 0xb
0x489 SWAP1
0x48a MSTORE
0x48b PUSH1 0x40
0x48d DUP2
0x48e SHA3
0x48f SSTORE
---
0x45b: JUMPDEST 
0x45c: V401 = 0x0
0x460: M[0x0] = 0xc
0x461: V402 = 0x20
0x465: V403 = SHA3 0x0 0x20
0x468: V404 = ADD V398 V403
0x46a: V405 = S[V404]
0x46b: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x480: V407 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x481: V408 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V405
0x483: S[V404] = V408
0x484: V409 = CALLER
0x486: M[0x0] = V409
0x487: V410 = 0xb
0x48a: M[0x20] = 0xb
0x48b: V411 = 0x40
0x48e: V412 = SHA3 0x0 0x40
0x48f: S[V412] = 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, 0xc, V398]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]

================================

Block 0x490
[0x490:0x4a4]
---
Predecessors: [0x3e5, 0x45b]
Successors: [0x4a5, 0x4b0]
---
0x490 JUMPDEST
0x491 PUSH1 0x6
0x493 SLOAD
0x494 PUSH1 0x1
0x496 PUSH1 0xa0
0x498 PUSH1 0x2
0x49a EXP
0x49b SUB
0x49c AND
0x49d CALLER
0x49e EQ
0x49f DUP1
0x4a0 ISZERO
0x4a1 PUSH2 0x4b0
0x4a4 JUMPI
---
0x490: JUMPDEST 
0x491: V413 = 0x6
0x493: V414 = S[0x6]
0x494: V415 = 0x1
0x496: V416 = 0xa0
0x498: V417 = 0x2
0x49a: V418 = EXP 0x2 0xa0
0x49b: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x49d: V421 = CALLER
0x49e: V422 = EQ V421 V420
0x4a0: V423 = ISZERO V422
0x4a1: V424 = 0x4b0
0x4a4: JUMPI 0x4b0 V423
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]
Stack pops: 0
Stack additions: [V422]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V422]

================================

Block 0x4a5
[0x4a5:0x4af]
---
Predecessors: [0x490]
Successors: [0x4b0]
---
0x4a5 POP
0x4a6 PUSH1 0x2
0x4a8 SLOAD
0x4a9 PUSH1 0x7
0x4ab SLOAD
0x4ac ADD
0x4ad NUMBER
0x4ae LT
0x4af ISZERO
---
0x4a6: V425 = 0x2
0x4a8: V426 = S[0x2]
0x4a9: V427 = 0x7
0x4ab: V428 = S[0x7]
0x4ac: V429 = ADD V428 V426
0x4ad: V430 = NUMBER
0x4ae: V431 = LT V430 V429
0x4af: V432 = ISZERO V431
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V422]
Stack pops: 1
Stack additions: [V432]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V432]

================================

Block 0x4b0
[0x4b0:0x4b5]
---
Predecessors: [0x490, 0x4a5]
Successors: [0x4b6, 0x515]
---
0x4b0 JUMPDEST
0x4b1 ISZERO
0x4b2 PUSH2 0x515
0x4b5 JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V433 = ISZERO S0
0x4b2: V434 = 0x515
0x4b5: JUMPI 0x515 V433
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]

================================

Block 0x4b6
[0x4b6:0x4e7]
---
Predecessors: [0x4b0]
Successors: [0x4e8, 0x4f1]
---
0x4b6 PUSH1 0x6
0x4b8 SLOAD
0x4b9 PUSH1 0x3
0x4bb SLOAD
0x4bc PUSH1 0x40
0x4be MLOAD
0x4bf PUSH1 0x1
0x4c1 PUSH1 0xa0
0x4c3 PUSH1 0x2
0x4c5 EXP
0x4c6 SUB
0x4c7 SWAP1
0x4c8 SWAP3
0x4c9 AND
0x4ca SWAP2
0x4cb DUP2
0x4cc ISZERO
0x4cd PUSH2 0x8fc
0x4d0 MUL
0x4d1 SWAP2
0x4d2 SWAP1
0x4d3 PUSH1 0x0
0x4d5 DUP2
0x4d6 DUP2
0x4d7 DUP2
0x4d8 DUP6
0x4d9 DUP9
0x4da DUP9
0x4db CALL
0x4dc SWAP4
0x4dd POP
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 ISZERO
0x4e2 DUP1
0x4e3 ISZERO
0x4e4 PUSH2 0x4f1
0x4e7 JUMPI
---
0x4b6: V435 = 0x6
0x4b8: V436 = S[0x6]
0x4b9: V437 = 0x3
0x4bb: V438 = S[0x3]
0x4bc: V439 = 0x40
0x4be: V440 = M[0x40]
0x4bf: V441 = 0x1
0x4c1: V442 = 0xa0
0x4c3: V443 = 0x2
0x4c5: V444 = EXP 0x2 0xa0
0x4c6: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c9: V446 = AND V436 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V447 = ISZERO V438
0x4cd: V448 = 0x8fc
0x4d0: V449 = MUL 0x8fc V447
0x4d3: V450 = 0x0
0x4db: V451 = CALL V449 V446 V438 V440 0x0 V440 0x0
0x4e1: V452 = ISZERO V451
0x4e3: V453 = ISZERO V452
0x4e4: V454 = 0x4f1
0x4e7: JUMPI 0x4f1 V453
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]
Stack pops: 0
Stack additions: [V452]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V452]

================================

Block 0x4e8
[0x4e8:0x4f0]
---
Predecessors: [0x4b6]
Successors: []
---
0x4e8 RETURNDATASIZE
0x4e9 PUSH1 0x0
0x4eb DUP1
0x4ec RETURNDATACOPY
0x4ed RETURNDATASIZE
0x4ee PUSH1 0x0
0x4f0 REVERT
---
0x4e8: V455 = RETURNDATASIZE
0x4e9: V456 = 0x0
0x4ec: RETURNDATACOPY 0x0 0x0 V455
0x4ed: V457 = RETURNDATASIZE
0x4ee: V458 = 0x0
0x4f0: REVERT 0x0 V457
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V452]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V452]

================================

Block 0x4f1
[0x4f1:0x514]
---
Predecessors: [0x4b6]
Successors: [0x515]
---
0x4f1 JUMPDEST
0x4f2 POP
0x4f3 PUSH1 0x0
0x4f5 PUSH1 0x3
0x4f7 SSTORE
0x4f8 PUSH1 0x6
0x4fa DUP1
0x4fb SLOAD
0x4fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x511 NOT
0x512 AND
0x513 SWAP1
0x514 SSTORE
---
0x4f1: JUMPDEST 
0x4f3: V459 = 0x0
0x4f5: V460 = 0x3
0x4f7: S[0x3] = 0x0
0x4f8: V461 = 0x6
0x4fb: V462 = S[0x6]
0x4fc: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x511: V464 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x512: V465 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V462
0x514: S[0x6] = V465
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366, V452]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]

================================

Block 0x515
[0x515:0x519]
---
Predecessors: [0x4b0, 0x4f1]
Successors: [0x51f]
---
0x515 JUMPDEST
0x516 PUSH2 0x51f
0x519 JUMP
---
0x515: JUMPDEST 
0x516: V466 = 0x51f
0x519: JUMP 0x51f
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V366]

================================

Block 0x51a
[0x51a:0x51e]
---
Predecessors: [0x3dd]
Successors: []
---
0x51a JUMPDEST
0x51b PUSH1 0x0
0x51d DUP1
0x51e REVERT
---
0x51a: JUMPDEST 
0x51b: V467 = 0x0
0x51e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x51f
[0x51f:0x528]
---
Predecessors: [0x3c2, 0x515]
Successors: []
---
0x51f JUMPDEST
0x520 POP
0x521 POP
0x522 POP
0x523 POP
0x524 POP
0x525 POP
0x526 POP
0x527 POP
0x528 STOP
---
0x51f: JUMPDEST 
0x528: STOP 
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x529
[0x529:0x530]
---
Predecessors: [0xd]
Successors: [0x531, 0x535]
---
0x529 JUMPDEST
0x52a CALLVALUE
0x52b DUP1
0x52c ISZERO
0x52d PUSH2 0x535
0x530 JUMPI
---
0x529: JUMPDEST 
0x52a: V468 = CALLVALUE
0x52c: V469 = ISZERO V468
0x52d: V470 = 0x535
0x530: JUMPI 0x535 V469
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V468]
Exit stack: [V11, V468]

================================

Block 0x531
[0x531:0x534]
---
Predecessors: [0x529]
Successors: []
---
0x531 PUSH1 0x0
0x533 DUP1
0x534 REVERT
---
0x531: V471 = 0x0
0x534: REVERT 0x0 0x0
---
Entry stack: [V11, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V468]

================================

Block 0x535
[0x535:0x53d]
---
Predecessors: [0x529]
Successors: [0x868]
---
0x535 JUMPDEST
0x536 POP
0x537 PUSH2 0x53e
0x53a PUSH2 0x868
0x53d JUMP
---
0x535: JUMPDEST 
0x537: V472 = 0x53e
0x53a: V473 = 0x868
0x53d: JUMP 0x868
---
Entry stack: [V11, V468]
Stack pops: 1
Stack additions: [0x53e]
Exit stack: [V11, 0x53e]

================================

Block 0x53e
[0x53e:0x559]
---
Predecessors: [0x868, 0x8a3, 0x8cf]
Successors: []
---
0x53e JUMPDEST
0x53f PUSH1 0x40
0x541 DUP1
0x542 MLOAD
0x543 PUSH1 0x1
0x545 PUSH1 0xa0
0x547 PUSH1 0x2
0x549 EXP
0x54a SUB
0x54b SWAP1
0x54c SWAP3
0x54d AND
0x54e DUP3
0x54f MSTORE
0x550 MLOAD
0x551 SWAP1
0x552 DUP2
0x553 SWAP1
0x554 SUB
0x555 PUSH1 0x20
0x557 ADD
0x558 SWAP1
0x559 RETURN
---
0x53e: JUMPDEST 
0x53f: V474 = 0x40
0x542: V475 = M[0x40]
0x543: V476 = 0x1
0x545: V477 = 0xa0
0x547: V478 = 0x2
0x549: V479 = EXP 0x2 0xa0
0x54a: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54d: V481 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x54f: M[V475] = V481
0x550: V482 = M[0x40]
0x554: V483 = SUB V475 V482
0x555: V484 = 0x20
0x557: V485 = ADD 0x20 V483
0x559: RETURN V482 V485
---
Entry stack: [V11, 0x53e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x53e]

================================

Block 0x55a
[0x55a:0x561]
---
Predecessors: [0x40]
Successors: [0x562, 0x566]
---
0x55a JUMPDEST
0x55b CALLVALUE
0x55c DUP1
0x55d ISZERO
0x55e PUSH2 0x566
0x561 JUMPI
---
0x55a: JUMPDEST 
0x55b: V486 = CALLVALUE
0x55d: V487 = ISZERO V486
0x55e: V488 = 0x566
0x561: JUMPI 0x566 V487
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V486]
Exit stack: [V11, V486]

================================

Block 0x562
[0x562:0x565]
---
Predecessors: [0x55a]
Successors: []
---
0x562 PUSH1 0x0
0x564 DUP1
0x565 REVERT
---
0x562: V489 = 0x0
0x565: REVERT 0x0 0x0
---
Entry stack: [V11, V486]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V486]

================================

Block 0x566
[0x566:0x56e]
---
Predecessors: [0x55a]
Successors: [0x877]
---
0x566 JUMPDEST
0x567 POP
0x568 PUSH2 0x56f
0x56b PUSH2 0x877
0x56e JUMP
---
0x566: JUMPDEST 
0x568: V490 = 0x56f
0x56b: V491 = 0x877
0x56e: JUMP 0x877
---
Entry stack: [V11, V486]
Stack pops: 1
Stack additions: [0x56f]
Exit stack: [V11, 0x56f]

================================

Block 0x56f
[0x56f:0x580]
---
Predecessors: [0x877, 0x87d, 0x88f, 0x8bd, 0x8de, 0x8e4, 0x8ea, 0x8f0, 0x8f6, 0x8fc, 0x910]
Successors: []
---
0x56f JUMPDEST
0x570 PUSH1 0x40
0x572 DUP1
0x573 MLOAD
0x574 SWAP2
0x575 DUP3
0x576 MSTORE
0x577 MLOAD
0x578 SWAP1
0x579 DUP2
0x57a SWAP1
0x57b SUB
0x57c PUSH1 0x20
0x57e ADD
0x57f SWAP1
0x580 RETURN
---
0x56f: JUMPDEST 
0x570: V492 = 0x40
0x573: V493 = M[0x40]
0x576: M[V493] = S0
0x577: V494 = M[0x40]
0x57b: V495 = SUB V493 V494
0x57c: V496 = 0x20
0x57e: V497 = ADD 0x20 V495
0x580: RETURN V494 V497
---
Entry stack: [V11, 0x56f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56f]

================================

Block 0x581
[0x581:0x588]
---
Predecessors: [0x4b]
Successors: [0x589, 0x58d]
---
0x581 JUMPDEST
0x582 CALLVALUE
0x583 DUP1
0x584 ISZERO
0x585 PUSH2 0x58d
0x588 JUMPI
---
0x581: JUMPDEST 
0x582: V498 = CALLVALUE
0x584: V499 = ISZERO V498
0x585: V500 = 0x58d
0x588: JUMPI 0x58d V499
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V498]
Exit stack: [V11, V498]

================================

Block 0x589
[0x589:0x58c]
---
Predecessors: [0x581]
Successors: []
---
0x589 PUSH1 0x0
0x58b DUP1
0x58c REVERT
---
0x589: V501 = 0x0
0x58c: REVERT 0x0 0x0
---
Entry stack: [V11, V498]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V498]

================================

Block 0x58d
[0x58d:0x5a1]
---
Predecessors: [0x581]
Successors: [0x87d]
---
0x58d JUMPDEST
0x58e POP
0x58f PUSH2 0x56f
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a PUSH1 0x4
0x59c CALLDATALOAD
0x59d AND
0x59e PUSH2 0x87d
0x5a1 JUMP
---
0x58d: JUMPDEST 
0x58f: V502 = 0x56f
0x592: V503 = 0x1
0x594: V504 = 0xa0
0x596: V505 = 0x2
0x598: V506 = EXP 0x2 0xa0
0x599: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59a: V508 = 0x4
0x59c: V509 = CALLDATALOAD 0x4
0x59d: V510 = AND V509 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V511 = 0x87d
0x5a1: JUMP 0x87d
---
Entry stack: [V11, V498]
Stack pops: 1
Stack additions: [0x56f, V510]
Exit stack: [V11, 0x56f, V510]

================================

Block 0x5a2
[0x5a2:0x5a9]
---
Predecessors: [0x56]
Successors: [0x5aa, 0x5ae]
---
0x5a2 JUMPDEST
0x5a3 CALLVALUE
0x5a4 DUP1
0x5a5 ISZERO
0x5a6 PUSH2 0x5ae
0x5a9 JUMPI
---
0x5a2: JUMPDEST 
0x5a3: V512 = CALLVALUE
0x5a5: V513 = ISZERO V512
0x5a6: V514 = 0x5ae
0x5a9: JUMPI 0x5ae V513
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V512]
Exit stack: [V11, V512]

================================

Block 0x5aa
[0x5aa:0x5ad]
---
Predecessors: [0x5a2]
Successors: []
---
0x5aa PUSH1 0x0
0x5ac DUP1
0x5ad REVERT
---
0x5aa: V515 = 0x0
0x5ad: REVERT 0x0 0x0
---
Entry stack: [V11, V512]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V512]

================================

Block 0x5ae
[0x5ae:0x5b6]
---
Predecessors: [0x5a2]
Successors: [0x88f]
---
0x5ae JUMPDEST
0x5af POP
0x5b0 PUSH2 0x56f
0x5b3 PUSH2 0x88f
0x5b6 JUMP
---
0x5ae: JUMPDEST 
0x5b0: V516 = 0x56f
0x5b3: V517 = 0x88f
0x5b6: JUMP 0x88f
---
Entry stack: [V11, V512]
Stack pops: 1
Stack additions: [0x56f]
Exit stack: [V11, 0x56f]

================================

Block 0x5b7
[0x5b7:0x5be]
---
Predecessors: [0x61]
Successors: [0x5bf, 0x5c3]
---
0x5b7 JUMPDEST
0x5b8 CALLVALUE
0x5b9 DUP1
0x5ba ISZERO
0x5bb PUSH2 0x5c3
0x5be JUMPI
---
0x5b7: JUMPDEST 
0x5b8: V518 = CALLVALUE
0x5ba: V519 = ISZERO V518
0x5bb: V520 = 0x5c3
0x5be: JUMPI 0x5c3 V519
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V518]
Exit stack: [V11, V518]

================================

Block 0x5bf
[0x5bf:0x5c2]
---
Predecessors: [0x5b7]
Successors: []
---
0x5bf PUSH1 0x0
0x5c1 DUP1
0x5c2 REVERT
---
0x5bf: V521 = 0x0
0x5c2: REVERT 0x0 0x0
---
Entry stack: [V11, V518]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V518]

================================

Block 0x5c3
[0x5c3:0x5ce]
---
Predecessors: [0x5b7]
Successors: [0x895]
---
0x5c3 JUMPDEST
0x5c4 POP
0x5c5 PUSH2 0x53e
0x5c8 PUSH1 0x4
0x5ca CALLDATALOAD
0x5cb PUSH2 0x895
0x5ce JUMP
---
0x5c3: JUMPDEST 
0x5c5: V522 = 0x53e
0x5c8: V523 = 0x4
0x5ca: V524 = CALLDATALOAD 0x4
0x5cb: V525 = 0x895
0x5ce: JUMP 0x895
---
Entry stack: [V11, V518]
Stack pops: 1
Stack additions: [0x53e, V524]
Exit stack: [V11, 0x53e, V524]

================================

Block 0x5cf
[0x5cf:0x5d6]
---
Predecessors: [0x6c]
Successors: [0x5d7, 0x5db]
---
0x5cf JUMPDEST
0x5d0 CALLVALUE
0x5d1 DUP1
0x5d2 ISZERO
0x5d3 PUSH2 0x5db
0x5d6 JUMPI
---
0x5cf: JUMPDEST 
0x5d0: V526 = CALLVALUE
0x5d2: V527 = ISZERO V526
0x5d3: V528 = 0x5db
0x5d6: JUMPI 0x5db V527
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V526]
Exit stack: [V11, V526]

================================

Block 0x5d7
[0x5d7:0x5da]
---
Predecessors: [0x5cf]
Successors: []
---
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da REVERT
---
0x5d7: V529 = 0x0
0x5da: REVERT 0x0 0x0
---
Entry stack: [V11, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V526]

================================

Block 0x5db
[0x5db:0x5ef]
---
Predecessors: [0x5cf]
Successors: [0x8bd]
---
0x5db JUMPDEST
0x5dc POP
0x5dd PUSH2 0x56f
0x5e0 PUSH1 0x1
0x5e2 PUSH1 0xa0
0x5e4 PUSH1 0x2
0x5e6 EXP
0x5e7 SUB
0x5e8 PUSH1 0x4
0x5ea CALLDATALOAD
0x5eb AND
0x5ec PUSH2 0x8bd
0x5ef JUMP
---
0x5db: JUMPDEST 
0x5dd: V530 = 0x56f
0x5e0: V531 = 0x1
0x5e2: V532 = 0xa0
0x5e4: V533 = 0x2
0x5e6: V534 = EXP 0x2 0xa0
0x5e7: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e8: V536 = 0x4
0x5ea: V537 = CALLDATALOAD 0x4
0x5eb: V538 = AND V537 0xffffffffffffffffffffffffffffffffffffffff
0x5ec: V539 = 0x8bd
0x5ef: JUMP 0x8bd
---
Entry stack: [V11, V526]
Stack pops: 1
Stack additions: [0x56f, V538]
Exit stack: [V11, 0x56f, V538]

================================

Block 0x5f0
[0x5f0:0x5f7]
---
Predecessors: [0x77]
Successors: [0x5f8, 0x5fc]
---
0x5f0 JUMPDEST
0x5f1 CALLVALUE
0x5f2 DUP1
0x5f3 ISZERO
0x5f4 PUSH2 0x5fc
0x5f7 JUMPI
---
0x5f0: JUMPDEST 
0x5f1: V540 = CALLVALUE
0x5f3: V541 = ISZERO V540
0x5f4: V542 = 0x5fc
0x5f7: JUMPI 0x5fc V541
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V540]
Exit stack: [V11, V540]

================================

Block 0x5f8
[0x5f8:0x5fb]
---
Predecessors: [0x5f0]
Successors: []
---
0x5f8 PUSH1 0x0
0x5fa DUP1
0x5fb REVERT
---
0x5f8: V543 = 0x0
0x5fb: REVERT 0x0 0x0
---
Entry stack: [V11, V540]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V540]

================================

Block 0x5fc
[0x5fc:0x604]
---
Predecessors: [0x5f0]
Successors: [0x8cf]
---
0x5fc JUMPDEST
0x5fd POP
0x5fe PUSH2 0x53e
0x601 PUSH2 0x8cf
0x604 JUMP
---
0x5fc: JUMPDEST 
0x5fe: V544 = 0x53e
0x601: V545 = 0x8cf
0x604: JUMP 0x8cf
---
Entry stack: [V11, V540]
Stack pops: 1
Stack additions: [0x53e]
Exit stack: [V11, 0x53e]

================================

Block 0x605
[0x605:0x60c]
---
Predecessors: [0x82]
Successors: [0x60d, 0x611]
---
0x605 JUMPDEST
0x606 CALLVALUE
0x607 DUP1
0x608 ISZERO
0x609 PUSH2 0x611
0x60c JUMPI
---
0x605: JUMPDEST 
0x606: V546 = CALLVALUE
0x608: V547 = ISZERO V546
0x609: V548 = 0x611
0x60c: JUMPI 0x611 V547
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V546]
Exit stack: [V11, V546]

================================

Block 0x60d
[0x60d:0x610]
---
Predecessors: [0x605]
Successors: []
---
0x60d PUSH1 0x0
0x60f DUP1
0x610 REVERT
---
0x60d: V549 = 0x0
0x610: REVERT 0x0 0x0
---
Entry stack: [V11, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V546]

================================

Block 0x611
[0x611:0x619]
---
Predecessors: [0x605]
Successors: [0x8de]
---
0x611 JUMPDEST
0x612 POP
0x613 PUSH2 0x56f
0x616 PUSH2 0x8de
0x619 JUMP
---
0x611: JUMPDEST 
0x613: V550 = 0x56f
0x616: V551 = 0x8de
0x619: JUMP 0x8de
---
Entry stack: [V11, V546]
Stack pops: 1
Stack additions: [0x56f]
Exit stack: [V11, 0x56f]

================================

Block 0x61a
[0x61a:0x621]
---
Predecessors: [0x8d]
Successors: [0x622, 0x626]
---
0x61a JUMPDEST
0x61b CALLVALUE
0x61c DUP1
0x61d ISZERO
0x61e PUSH2 0x626
0x621 JUMPI
---
0x61a: JUMPDEST 
0x61b: V552 = CALLVALUE
0x61d: V553 = ISZERO V552
0x61e: V554 = 0x626
0x621: JUMPI 0x626 V553
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V552]
Exit stack: [V11, V552]

================================

Block 0x622
[0x622:0x625]
---
Predecessors: [0x61a]
Successors: []
---
0x622 PUSH1 0x0
0x624 DUP1
0x625 REVERT
---
0x622: V555 = 0x0
0x625: REVERT 0x0 0x0
---
Entry stack: [V11, V552]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V552]

================================

Block 0x626
[0x626:0x62e]
---
Predecessors: [0x61a]
Successors: [0x8e4]
---
0x626 JUMPDEST
0x627 POP
0x628 PUSH2 0x56f
0x62b PUSH2 0x8e4
0x62e JUMP
---
0x626: JUMPDEST 
0x628: V556 = 0x56f
0x62b: V557 = 0x8e4
0x62e: JUMP 0x8e4
---
Entry stack: [V11, V552]
Stack pops: 1
Stack additions: [0x56f]
Exit stack: [V11, 0x56f]

================================

Block 0x62f
[0x62f:0x636]
---
Predecessors: [0x98]
Successors: [0x637, 0x63b]
---
0x62f JUMPDEST
0x630 CALLVALUE
0x631 DUP1
0x632 ISZERO
0x633 PUSH2 0x63b
0x636 JUMPI
---
0x62f: JUMPDEST 
0x630: V558 = CALLVALUE
0x632: V559 = ISZERO V558
0x633: V560 = 0x63b
0x636: JUMPI 0x63b V559
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V558]
Exit stack: [V11, V558]

================================

Block 0x637
[0x637:0x63a]
---
Predecessors: [0x62f]
Successors: []
---
0x637 PUSH1 0x0
0x639 DUP1
0x63a REVERT
---
0x637: V561 = 0x0
0x63a: REVERT 0x0 0x0
---
Entry stack: [V11, V558]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V558]

================================

Block 0x63b
[0x63b:0x643]
---
Predecessors: [0x62f]
Successors: [0x8ea]
---
0x63b JUMPDEST
0x63c POP
0x63d PUSH2 0x56f
0x640 PUSH2 0x8ea
0x643 JUMP
---
0x63b: JUMPDEST 
0x63d: V562 = 0x56f
0x640: V563 = 0x8ea
0x643: JUMP 0x8ea
---
Entry stack: [V11, V558]
Stack pops: 1
Stack additions: [0x56f]
Exit stack: [V11, 0x56f]

================================

Block 0x644
[0x644:0x64b]
---
Predecessors: [0xa3]
Successors: [0x64c, 0x650]
---
0x644 JUMPDEST
0x645 CALLVALUE
0x646 DUP1
0x647 ISZERO
0x648 PUSH2 0x650
0x64b JUMPI
---
0x644: JUMPDEST 
0x645: V564 = CALLVALUE
0x647: V565 = ISZERO V564
0x648: V566 = 0x650
0x64b: JUMPI 0x650 V565
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V564]
Exit stack: [V11, V564]

================================

Block 0x64c
[0x64c:0x64f]
---
Predecessors: [0x644]
Successors: []
---
0x64c PUSH1 0x0
0x64e DUP1
0x64f REVERT
---
0x64c: V567 = 0x0
0x64f: REVERT 0x0 0x0
---
Entry stack: [V11, V564]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V564]

================================

Block 0x650
[0x650:0x658]
---
Predecessors: [0x644]
Successors: [0x8f0]
---
0x650 JUMPDEST
0x651 POP
0x652 PUSH2 0x56f
0x655 PUSH2 0x8f0
0x658 JUMP
---
0x650: JUMPDEST 
0x652: V568 = 0x56f
0x655: V569 = 0x8f0
0x658: JUMP 0x8f0
---
Entry stack: [V11, V564]
Stack pops: 1
Stack additions: [0x56f]
Exit stack: [V11, 0x56f]

================================

Block 0x659
[0x659:0x660]
---
Predecessors: [0xae]
Successors: [0x661, 0x665]
---
0x659 JUMPDEST
0x65a CALLVALUE
0x65b DUP1
0x65c ISZERO
0x65d PUSH2 0x665
0x660 JUMPI
---
0x659: JUMPDEST 
0x65a: V570 = CALLVALUE
0x65c: V571 = ISZERO V570
0x65d: V572 = 0x665
0x660: JUMPI 0x665 V571
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V570]
Exit stack: [V11, V570]

================================

Block 0x661
[0x661:0x664]
---
Predecessors: [0x659]
Successors: []
---
0x661 PUSH1 0x0
0x663 DUP1
0x664 REVERT
---
0x661: V573 = 0x0
0x664: REVERT 0x0 0x0
---
Entry stack: [V11, V570]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V570]

================================

Block 0x665
[0x665:0x66d]
---
Predecessors: [0x659]
Successors: [0x8f6]
---
0x665 JUMPDEST
0x666 POP
0x667 PUSH2 0x56f
0x66a PUSH2 0x8f6
0x66d JUMP
---
0x665: JUMPDEST 
0x667: V574 = 0x56f
0x66a: V575 = 0x8f6
0x66d: JUMP 0x8f6
---
Entry stack: [V11, V570]
Stack pops: 1
Stack additions: [0x56f]
Exit stack: [V11, 0x56f]

================================

Block 0x66e
[0x66e:0x675]
---
Predecessors: [0xb9]
Successors: [0x676, 0x67a]
---
0x66e JUMPDEST
0x66f CALLVALUE
0x670 DUP1
0x671 ISZERO
0x672 PUSH2 0x67a
0x675 JUMPI
---
0x66e: JUMPDEST 
0x66f: V576 = CALLVALUE
0x671: V577 = ISZERO V576
0x672: V578 = 0x67a
0x675: JUMPI 0x67a V577
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V576]
Exit stack: [V11, V576]

================================

Block 0x676
[0x676:0x679]
---
Predecessors: [0x66e]
Successors: []
---
0x676 PUSH1 0x0
0x678 DUP1
0x679 REVERT
---
0x676: V579 = 0x0
0x679: REVERT 0x0 0x0
---
Entry stack: [V11, V576]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V576]

================================

Block 0x67a
[0x67a:0x682]
---
Predecessors: [0x66e]
Successors: [0x8fc]
---
0x67a JUMPDEST
0x67b POP
0x67c PUSH2 0x56f
0x67f PUSH2 0x8fc
0x682 JUMP
---
0x67a: JUMPDEST 
0x67c: V580 = 0x56f
0x67f: V581 = 0x8fc
0x682: JUMP 0x8fc
---
Entry stack: [V11, V576]
Stack pops: 1
Stack additions: [0x56f]
Exit stack: [V11, 0x56f]

================================

Block 0x683
[0x683:0x68a]
---
Predecessors: [0xc4]
Successors: [0x68b, 0x68f]
---
0x683 JUMPDEST
0x684 CALLVALUE
0x685 DUP1
0x686 ISZERO
0x687 PUSH2 0x68f
0x68a JUMPI
---
0x683: JUMPDEST 
0x684: V582 = CALLVALUE
0x686: V583 = ISZERO V582
0x687: V584 = 0x68f
0x68a: JUMPI 0x68f V583
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V582]
Exit stack: [V11, V582]

================================

Block 0x68b
[0x68b:0x68e]
---
Predecessors: [0x683]
Successors: []
---
0x68b PUSH1 0x0
0x68d DUP1
0x68e REVERT
---
0x68b: V585 = 0x0
0x68e: REVERT 0x0 0x0
---
Entry stack: [V11, V582]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V582]

================================

Block 0x68f
[0x68f:0x69a]
---
Predecessors: [0x683]
Successors: [0x902]
---
0x68f JUMPDEST
0x690 POP
0x691 PUSH2 0x56f
0x694 PUSH1 0x4
0x696 CALLDATALOAD
0x697 PUSH2 0x902
0x69a JUMP
---
0x68f: JUMPDEST 
0x691: V586 = 0x56f
0x694: V587 = 0x4
0x696: V588 = CALLDATALOAD 0x4
0x697: V589 = 0x902
0x69a: JUMP 0x902
---
Entry stack: [V11, V582]
Stack pops: 1
Stack additions: [0x56f, V588]
Exit stack: [V11, 0x56f, V588]

================================

Block 0x69b
[0x69b:0x6a2]
---
Predecessors: [0xcf]
Successors: [0x6a3, 0x6a7]
---
0x69b JUMPDEST
0x69c CALLVALUE
0x69d DUP1
0x69e ISZERO
0x69f PUSH2 0x6a7
0x6a2 JUMPI
---
0x69b: JUMPDEST 
0x69c: V590 = CALLVALUE
0x69e: V591 = ISZERO V590
0x69f: V592 = 0x6a7
0x6a2: JUMPI 0x6a7 V591
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V590]
Exit stack: [V11, V590]

================================

Block 0x6a3
[0x6a3:0x6a6]
---
Predecessors: [0x69b]
Successors: []
---
0x6a3 PUSH1 0x0
0x6a5 DUP1
0x6a6 REVERT
---
0x6a3: V593 = 0x0
0x6a6: REVERT 0x0 0x0
---
Entry stack: [V11, V590]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V590]

================================

Block 0x6a7
[0x6a7:0x6b2]
---
Predecessors: [0x69b]
Successors: [0x921]
---
0x6a7 JUMPDEST
0x6a8 POP
0x6a9 PUSH2 0x53e
0x6ac PUSH1 0x4
0x6ae CALLDATALOAD
0x6af PUSH2 0x921
0x6b2 JUMP
---
0x6a7: JUMPDEST 
0x6a9: V594 = 0x53e
0x6ac: V595 = 0x4
0x6ae: V596 = CALLDATALOAD 0x4
0x6af: V597 = 0x921
0x6b2: JUMP 0x921
---
Entry stack: [V11, V590]
Stack pops: 1
Stack additions: [0x53e, V596]
Exit stack: [V11, 0x53e, V596]

================================

Block 0x6b3
[0x6b3:0x6be]
---
Predecessors: [0xf3]
Successors: [0xfb]
---
0x6b3 JUMPDEST
0x6b4 PUSH1 0xf
0x6b6 DUP1
0x6b7 SLOAD
0x6b8 TIMESTAMP
0x6b9 CALLER
0x6ba ADD
0x6bb ADD
0x6bc SWAP1
0x6bd SSTORE
0x6be JUMP
---
0x6b3: JUMPDEST 
0x6b4: V598 = 0xf
0x6b7: V599 = S[0xf]
0x6b8: V600 = TIMESTAMP
0x6b9: V601 = CALLER
0x6ba: V602 = ADD V601 V600
0x6bb: V603 = ADD V602 V599
0x6bd: S[0xf] = V603
0x6be: JUMP 0xfb
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfb]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x6bf
[0x6bf:0x72a]
---
Predecessors: [0x106]
Successors: [0x72b, 0x792]
---
0x6bf JUMPDEST
0x6c0 PUSH1 0x9
0x6c2 DUP1
0x6c3 SLOAD
0x6c4 PUSH1 0x1
0x6c6 DUP2
0x6c7 ADD
0x6c8 SWAP1
0x6c9 SWAP2
0x6ca SSTORE
0x6cb PUSH32 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af
0x6ec ADD
0x6ed DUP1
0x6ee SLOAD
0x6ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x704 NOT
0x705 AND
0x706 PUSH1 0x1
0x708 PUSH1 0xa0
0x70a PUSH1 0x2
0x70c EXP
0x70d SUB
0x70e DUP4
0x70f AND
0x710 SWAP1
0x711 DUP2
0x712 OR
0x713 SWAP1
0x714 SWAP2
0x715 SSTORE
0x716 PUSH1 0x0
0x718 SWAP1
0x719 DUP2
0x71a MSTORE
0x71b PUSH1 0xb
0x71d PUSH1 0x20
0x71f MSTORE
0x720 PUSH1 0x40
0x722 SWAP1
0x723 SHA3
0x724 SLOAD
0x725 ISZERO
0x726 ISZERO
0x727 PUSH2 0x792
0x72a JUMPI
---
0x6bf: JUMPDEST 
0x6c0: V604 = 0x9
0x6c3: V605 = S[0x9]
0x6c4: V606 = 0x1
0x6c7: V607 = ADD V605 0x1
0x6ca: S[0x9] = V607
0x6cb: V608 = 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af
0x6ec: V609 = ADD 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af V605
0x6ee: V610 = S[V609]
0x6ef: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x704: V612 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x705: V613 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V610
0x706: V614 = 0x1
0x708: V615 = 0xa0
0x70a: V616 = 0x2
0x70c: V617 = EXP 0x2 0xa0
0x70d: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70f: V619 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0x712: V620 = OR V619 V613
0x715: S[V609] = V620
0x716: V621 = 0x0
0x71a: M[0x0] = V619
0x71b: V622 = 0xb
0x71d: V623 = 0x20
0x71f: M[0x20] = 0xb
0x720: V624 = 0x40
0x723: V625 = SHA3 0x0 0x40
0x724: V626 = S[V625]
0x725: V627 = ISZERO V626
0x726: V628 = ISZERO V627
0x727: V629 = 0x792
0x72a: JUMPI 0x792 V628
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10e, V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10e, V73]

================================

Block 0x72b
[0x72b:0x791]
---
Predecessors: [0x6bf]
Successors: [0x792]
---
0x72b PUSH1 0xc
0x72d DUP1
0x72e SLOAD
0x72f PUSH1 0x1
0x731 DUP2
0x732 ADD
0x733 DUP3
0x734 SSTORE
0x735 PUSH32 0xdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7
0x756 ADD
0x757 DUP1
0x758 SLOAD
0x759 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76e NOT
0x76f AND
0x770 PUSH1 0x1
0x772 PUSH1 0xa0
0x774 PUSH1 0x2
0x776 EXP
0x777 SUB
0x778 DUP5
0x779 AND
0x77a SWAP1
0x77b DUP2
0x77c OR
0x77d SWAP1
0x77e SWAP2
0x77f SSTORE
0x780 SWAP1
0x781 SLOAD
0x782 PUSH1 0x0
0x784 SWAP2
0x785 DUP3
0x786 MSTORE
0x787 PUSH1 0xb
0x789 PUSH1 0x20
0x78b MSTORE
0x78c PUSH1 0x40
0x78e SWAP1
0x78f SWAP2
0x790 SHA3
0x791 SSTORE
---
0x72b: V630 = 0xc
0x72e: V631 = S[0xc]
0x72f: V632 = 0x1
0x732: V633 = ADD V631 0x1
0x734: S[0xc] = V633
0x735: V634 = 0xdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7
0x756: V635 = ADD 0xdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7 V631
0x758: V636 = S[V635]
0x759: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0x76e: V638 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x76f: V639 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V636
0x770: V640 = 0x1
0x772: V641 = 0xa0
0x774: V642 = 0x2
0x776: V643 = EXP 0x2 0xa0
0x777: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x779: V645 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0x77c: V646 = OR V645 V639
0x77f: S[V635] = V646
0x781: V647 = S[0xc]
0x782: V648 = 0x0
0x786: M[0x0] = V645
0x787: V649 = 0xb
0x789: V650 = 0x20
0x78b: M[0x20] = 0xb
0x78c: V651 = 0x40
0x790: V652 = SHA3 0x0 0x40
0x791: S[V652] = V647
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10e, V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10e, V73]

================================

Block 0x792
[0x792:0x794]
---
Predecessors: [0x6bf, 0x72b, 0x991]
Successors: [0x10e, 0x246]
---
0x792 JUMPDEST
0x793 POP
0x794 JUMP
---
0x792: JUMPDEST 
0x794: JUMP {0x10e, 0x246}
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, {0x10e, 0x246}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0]

================================

Block 0x795
[0x795:0x7ae]
---
Predecessors: [0x11b]
Successors: [0x92f]
---
0x795 JUMPDEST
0x796 PUSH1 0x0
0x798 DUP2
0x799 PUSH1 0x2
0x79b PUSH2 0x7af
0x79e PUSH1 0xf
0x7a0 SLOAD
0x7a1 PUSH1 0x1
0x7a3 NUMBER
0x7a4 SUB
0x7a5 BLOCKHASH
0x7a6 PUSH1 0x1
0x7a8 SWAP1
0x7a9 DIV
0x7aa ADD
0x7ab PUSH2 0x92f
0x7ae JUMP
---
0x795: JUMPDEST 
0x796: V653 = 0x0
0x799: V654 = 0x2
0x79b: V655 = 0x7af
0x79e: V656 = 0xf
0x7a0: V657 = S[0xf]
0x7a1: V658 = 0x1
0x7a3: V659 = NUMBER
0x7a4: V660 = SUB V659 0x1
0x7a5: V661 = BLOCKHASH V660
0x7a6: V662 = 0x1
0x7a9: V663 = DIV V661 0x1
0x7aa: V664 = ADD V663 V657
0x7ab: V665 = 0x92f
0x7ae: JUMP 0x92f
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x125, V84]
Stack pops: 1
Stack additions: [S0, 0x0, S0, 0x2, 0x7af, V664]
Exit stack: [V11, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, 0x7af, V664]

================================

Block 0x7af
[0x7af:0x7be]
---
Predecessors: [0x92f]
Successors: [0x7bf]
---
0x7af JUMPDEST
0x7b0 PUSH1 0x40
0x7b2 MLOAD
0x7b3 DUP1
0x7b4 DUP3
0x7b5 DUP1
0x7b6 MLOAD
0x7b7 SWAP1
0x7b8 PUSH1 0x20
0x7ba ADD
0x7bb SWAP1
0x7bc DUP1
0x7bd DUP4
0x7be DUP4
---
0x7af: JUMPDEST 
0x7b0: V666 = 0x40
0x7b2: V667 = M[0x40]
0x7b6: V668 = M[V808]
0x7b8: V669 = 0x20
0x7ba: V670 = ADD 0x20 V808
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V808]
Stack pops: 1
Stack additions: [S0, V667, V667, V670, V668, V668, V667, V670]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V808, V667, V667, V670, V668, V668, V667, V670]

================================

Block 0x7bf
[0x7bf:0x7c7]
---
Predecessors: [0x7af, 0x7c8]
Successors: [0x7c8, 0x7de]
---
0x7bf JUMPDEST
0x7c0 PUSH1 0x20
0x7c2 DUP4
0x7c3 LT
0x7c4 PUSH2 0x7de
0x7c7 JUMPI
---
0x7bf: JUMPDEST 
0x7c0: V671 = 0x20
0x7c3: V672 = LT S2 0x20
0x7c4: V673 = 0x7de
0x7c7: JUMPI 0x7de V672
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V808, V667, V667, V670, V668, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V808, V667, V667, V670, V668, S2, S1, S0]

================================

Block 0x7c8
[0x7c8:0x7dd]
---
Predecessors: [0x7bf]
Successors: [0x7bf]
---
0x7c8 DUP1
0x7c9 MLOAD
0x7ca DUP3
0x7cb MSTORE
0x7cc PUSH1 0x1f
0x7ce NOT
0x7cf SWAP1
0x7d0 SWAP3
0x7d1 ADD
0x7d2 SWAP2
0x7d3 PUSH1 0x20
0x7d5 SWAP2
0x7d6 DUP3
0x7d7 ADD
0x7d8 SWAP2
0x7d9 ADD
0x7da PUSH2 0x7bf
0x7dd JUMP
---
0x7c9: V674 = M[S0]
0x7cb: M[S1] = V674
0x7cc: V675 = 0x1f
0x7ce: V676 = NOT 0x1f
0x7d1: V677 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7d3: V678 = 0x20
0x7d7: V679 = ADD 0x20 S1
0x7d9: V680 = ADD 0x20 S0
0x7da: V681 = 0x7bf
0x7dd: JUMP 0x7bf
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V808, V667, V667, V670, V668, S2, S1, S0]
Stack pops: 3
Stack additions: [V677, V679, V680]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V808, V667, V667, V670, V668, V677, V679, V680]

================================

Block 0x7de
[0x7de:0x815]
---
Predecessors: [0x7bf]
Successors: [0x816, 0x81f]
---
0x7de JUMPDEST
0x7df MLOAD
0x7e0 DUP2
0x7e1 MLOAD
0x7e2 PUSH1 0x20
0x7e4 SWAP4
0x7e5 DUP5
0x7e6 SUB
0x7e7 PUSH2 0x100
0x7ea EXP
0x7eb PUSH1 0x0
0x7ed NOT
0x7ee ADD
0x7ef DUP1
0x7f0 NOT
0x7f1 SWAP1
0x7f2 SWAP3
0x7f3 AND
0x7f4 SWAP2
0x7f5 AND
0x7f6 OR
0x7f7 SWAP1
0x7f8 MSTORE
0x7f9 PUSH1 0x40
0x7fb MLOAD
0x7fc SWAP2
0x7fd SWAP1
0x7fe SWAP4
0x7ff ADD
0x800 SWAP5
0x801 POP
0x802 SWAP2
0x803 SWAP3
0x804 POP
0x805 POP
0x806 DUP1
0x807 DUP4
0x808 SUB
0x809 DUP2
0x80a PUSH1 0x0
0x80c DUP7
0x80d GAS
0x80e CALL
0x80f ISZERO
0x810 DUP1
0x811 ISZERO
0x812 PUSH2 0x81f
0x815 JUMPI
---
0x7de: JUMPDEST 
0x7df: V682 = M[S0]
0x7e1: V683 = M[S1]
0x7e2: V684 = 0x20
0x7e6: V685 = SUB 0x20 S2
0x7e7: V686 = 0x100
0x7ea: V687 = EXP 0x100 V685
0x7eb: V688 = 0x0
0x7ed: V689 = NOT 0x0
0x7ee: V690 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V687
0x7f0: V691 = NOT V690
0x7f3: V692 = AND V682 V691
0x7f5: V693 = AND V690 V683
0x7f6: V694 = OR V693 V692
0x7f8: M[S1] = V694
0x7f9: V695 = 0x40
0x7fb: V696 = M[0x40]
0x7ff: V697 = ADD V667 V668
0x808: V698 = SUB V697 V696
0x80a: V699 = 0x0
0x80d: V700 = GAS
0x80e: V701 = CALL V700 0x2 0x0 V696 V698 V696 0x20
0x80f: V702 = ISZERO V701
0x811: V703 = ISZERO V702
0x812: V704 = 0x81f
0x815: JUMPI 0x81f V703
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V808, V667, V667, V670, V668, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V697, V702]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V697, V702]

================================

Block 0x816
[0x816:0x81e]
---
Predecessors: [0x7de]
Successors: []
---
0x816 RETURNDATASIZE
0x817 PUSH1 0x0
0x819 DUP1
0x81a RETURNDATACOPY
0x81b RETURNDATASIZE
0x81c PUSH1 0x0
0x81e REVERT
---
0x816: V705 = RETURNDATASIZE
0x817: V706 = 0x0
0x81a: RETURNDATACOPY 0x0 0x0 V705
0x81b: V707 = RETURNDATASIZE
0x81c: V708 = 0x0
0x81e: REVERT 0x0 V707
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V697, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V697, V702]

================================

Block 0x81f
[0x81f:0x82f]
---
Predecessors: [0x7de]
Successors: [0x830, 0x834]
---
0x81f JUMPDEST
0x820 POP
0x821 POP
0x822 POP
0x823 PUSH1 0x40
0x825 MLOAD
0x826 RETURNDATASIZE
0x827 PUSH1 0x20
0x829 DUP2
0x82a LT
0x82b ISZERO
0x82c PUSH2 0x834
0x82f JUMPI
---
0x81f: JUMPDEST 
0x823: V709 = 0x40
0x825: V710 = M[0x40]
0x826: V711 = RETURNDATASIZE
0x827: V712 = 0x20
0x82a: V713 = LT V711 0x20
0x82b: V714 = ISZERO V713
0x82c: V715 = 0x834
0x82f: JUMPI 0x834 V714
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V697, V702]
Stack pops: 3
Stack additions: [V710, V711]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, 0x0, 0x0, 0x125, V84, 0x0, V84, V710, V711]

================================

Block 0x830
[0x830:0x833]
---
Predecessors: [0x81f]
Successors: []
---
0x830 PUSH1 0x0
0x832 DUP1
0x833 REVERT
---
0x830: V716 = 0x0
0x833: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, 0x0, 0x0, 0x125, V84, 0x0, V84, V710, V711]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, 0x0, 0x0, 0x125, V84, 0x0, V84, V710, V711]

================================

Block 0x834
[0x834:0x83d]
---
Predecessors: [0x81f]
Successors: [0x83e, 0x83f]
---
0x834 JUMPDEST
0x835 POP
0x836 MLOAD
0x837 DUP2
0x838 ISZERO
0x839 ISZERO
0x83a PUSH2 0x83f
0x83d JUMPI
---
0x834: JUMPDEST 
0x836: V717 = M[V710]
0x838: V718 = ISZERO V84
0x839: V719 = ISZERO V718
0x83a: V720 = 0x83f
0x83d: JUMPI 0x83f V719
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, 0x0, 0x0, 0x125, V84, 0x0, V84, V710, V711]
Stack pops: 3
Stack additions: [S2, V717]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, 0x0, 0x0, 0x125, V84, 0x0, V84, V717]

================================

Block 0x83e
[0x83e:0x83e]
---
Predecessors: [0x834]
Successors: []
---
0x83e INVALID
---
0x83e: INVALID 
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x125, V84, 0x0, V84, V717]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x125, V84, 0x0, V84, V717]

================================

Block 0x83f
[0x83f:0x845]
---
Predecessors: [0x834]
Successors: [0x125]
---
0x83f JUMPDEST
0x840 MOD
0x841 SWAP3
0x842 SWAP2
0x843 POP
0x844 POP
0x845 JUMP
---
0x83f: JUMPDEST 
0x840: V721 = MOD V717 V84
0x845: JUMP 0x125
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x125, V84, 0x0, V84, V717]
Stack pops: 5
Stack additions: [V721]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, V721]

================================

Block 0x846
[0x846:0x867]
---
Predecessors: [0x174, 0x201]
Successors: [0x18f, 0x21c]
---
0x846 JUMPDEST
0x847 PUSH1 0x1
0x849 PUSH1 0xa0
0x84b PUSH1 0x2
0x84d EXP
0x84e SUB
0x84f SWAP1
0x850 SWAP2
0x851 AND
0x852 PUSH1 0x0
0x854 SWAP1
0x855 DUP2
0x856 MSTORE
0x857 PUSH1 0xa
0x859 PUSH1 0x20
0x85b MSTORE
0x85c PUSH1 0x40
0x85e SWAP1
0x85f SHA3
0x860 DUP1
0x861 SLOAD
0x862 SWAP1
0x863 SWAP2
0x864 ADD
0x865 SWAP1
0x866 SSTORE
0x867 JUMP
---
0x846: JUMPDEST 
0x847: V722 = 0x1
0x849: V723 = 0xa0
0x84b: V724 = 0x2
0x84d: V725 = EXP 0x2 0xa0
0x84e: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x851: V727 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x852: V728 = 0x0
0x856: M[0x0] = V727
0x857: V729 = 0xa
0x859: V730 = 0x20
0x85b: M[0x20] = 0xa
0x85c: V731 = 0x40
0x85f: V732 = SHA3 0x0 0x40
0x861: V733 = S[V732]
0x864: V734 = ADD S0 V733
0x866: S[V732] = V734
0x867: JUMP {0x18f, 0x21c}
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, {0x18f, 0x21c}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0]

================================

Block 0x868
[0x868:0x876]
---
Predecessors: [0x535]
Successors: [0x53e]
---
0x868 JUMPDEST
0x869 PUSH1 0xe
0x86b SLOAD
0x86c PUSH1 0x1
0x86e PUSH1 0xa0
0x870 PUSH1 0x2
0x872 EXP
0x873 SUB
0x874 AND
0x875 DUP2
0x876 JUMP
---
0x868: JUMPDEST 
0x869: V735 = 0xe
0x86b: V736 = S[0xe]
0x86c: V737 = 0x1
0x86e: V738 = 0xa0
0x870: V739 = 0x2
0x872: V740 = EXP 0x2 0xa0
0x873: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x874: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x876: JUMP 0x53e
---
Entry stack: [V11, 0x53e]
Stack pops: 1
Stack additions: [S0, V742]
Exit stack: [V11, 0x53e, V742]

================================

Block 0x877
[0x877:0x87c]
---
Predecessors: [0x566]
Successors: [0x56f]
---
0x877 JUMPDEST
0x878 PUSH1 0x7
0x87a SLOAD
0x87b DUP2
0x87c JUMP
---
0x877: JUMPDEST 
0x878: V743 = 0x7
0x87a: V744 = S[0x7]
0x87c: JUMP 0x56f
---
Entry stack: [V11, 0x56f]
Stack pops: 1
Stack additions: [S0, V744]
Exit stack: [V11, 0x56f, V744]

================================

Block 0x87d
[0x87d:0x88e]
---
Predecessors: [0x58d]
Successors: [0x56f]
---
0x87d JUMPDEST
0x87e PUSH1 0xa
0x880 PUSH1 0x20
0x882 MSTORE
0x883 PUSH1 0x0
0x885 SWAP1
0x886 DUP2
0x887 MSTORE
0x888 PUSH1 0x40
0x88a SWAP1
0x88b SHA3
0x88c SLOAD
0x88d DUP2
0x88e JUMP
---
0x87d: JUMPDEST 
0x87e: V745 = 0xa
0x880: V746 = 0x20
0x882: M[0x20] = 0xa
0x883: V747 = 0x0
0x887: M[0x0] = V510
0x888: V748 = 0x40
0x88b: V749 = SHA3 0x0 0x40
0x88c: V750 = S[V749]
0x88e: JUMP 0x56f
---
Entry stack: [V11, 0x56f, V510]
Stack pops: 2
Stack additions: [S1, V750]
Exit stack: [V11, 0x56f, V750]

================================

Block 0x88f
[0x88f:0x894]
---
Predecessors: [0x5ae]
Successors: [0x56f]
---
0x88f JUMPDEST
0x890 PUSH1 0x1
0x892 SLOAD
0x893 DUP2
0x894 JUMP
---
0x88f: JUMPDEST 
0x890: V751 = 0x1
0x892: V752 = S[0x1]
0x894: JUMP 0x56f
---
Entry stack: [V11, 0x56f]
Stack pops: 1
Stack additions: [S0, V752]
Exit stack: [V11, 0x56f, V752]

================================

Block 0x895
[0x895:0x8a1]
---
Predecessors: [0x5c3]
Successors: [0x8a2, 0x8a3]
---
0x895 JUMPDEST
0x896 PUSH1 0x9
0x898 DUP1
0x899 SLOAD
0x89a DUP3
0x89b SWAP1
0x89c DUP2
0x89d LT
0x89e PUSH2 0x8a3
0x8a1 JUMPI
---
0x895: JUMPDEST 
0x896: V753 = 0x9
0x899: V754 = S[0x9]
0x89d: V755 = LT V524 V754
0x89e: V756 = 0x8a3
0x8a1: JUMPI 0x8a3 V755
---
Entry stack: [V11, 0x53e, V524]
Stack pops: 1
Stack additions: [S0, 0x9, S0]
Exit stack: [V11, 0x53e, V524, 0x9, V524]

================================

Block 0x8a2
[0x8a2:0x8a2]
---
Predecessors: [0x895]
Successors: []
---
0x8a2 INVALID
---
0x8a2: INVALID 
---
Entry stack: [V11, 0x53e, V524, 0x9, V524]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x53e, V524, 0x9, V524]

================================

Block 0x8a3
[0x8a3:0x8bc]
---
Predecessors: [0x895, 0x921]
Successors: [0x53e]
---
0x8a3 JUMPDEST
0x8a4 PUSH1 0x0
0x8a6 SWAP2
0x8a7 DUP3
0x8a8 MSTORE
0x8a9 PUSH1 0x20
0x8ab SWAP1
0x8ac SWAP2
0x8ad SHA3
0x8ae ADD
0x8af SLOAD
0x8b0 PUSH1 0x1
0x8b2 PUSH1 0xa0
0x8b4 PUSH1 0x2
0x8b6 EXP
0x8b7 SUB
0x8b8 AND
0x8b9 SWAP1
0x8ba POP
0x8bb DUP2
0x8bc JUMP
---
0x8a3: JUMPDEST 
0x8a4: V757 = 0x0
0x8a8: M[0x0] = {0x9, 0xc}
0x8a9: V758 = 0x20
0x8ad: V759 = SHA3 0x0 0x20
0x8ae: V760 = ADD V759 S0
0x8af: V761 = S[V760]
0x8b0: V762 = 0x1
0x8b2: V763 = 0xa0
0x8b4: V764 = 0x2
0x8b6: V765 = EXP 0x2 0xa0
0x8b7: V766 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b8: V767 = AND 0xffffffffffffffffffffffffffffffffffffffff V761
0x8bc: JUMP 0x53e
---
Entry stack: [V11, 0x53e, S2, {0x9, 0xc}, S0]
Stack pops: 4
Stack additions: [S3, V767]
Exit stack: [V11, 0x53e, V767]

================================

Block 0x8bd
[0x8bd:0x8ce]
---
Predecessors: [0x5db]
Successors: [0x56f]
---
0x8bd JUMPDEST
0x8be PUSH1 0xb
0x8c0 PUSH1 0x20
0x8c2 MSTORE
0x8c3 PUSH1 0x0
0x8c5 SWAP1
0x8c6 DUP2
0x8c7 MSTORE
0x8c8 PUSH1 0x40
0x8ca SWAP1
0x8cb SHA3
0x8cc SLOAD
0x8cd DUP2
0x8ce JUMP
---
0x8bd: JUMPDEST 
0x8be: V768 = 0xb
0x8c0: V769 = 0x20
0x8c2: M[0x20] = 0xb
0x8c3: V770 = 0x0
0x8c7: M[0x0] = V538
0x8c8: V771 = 0x40
0x8cb: V772 = SHA3 0x0 0x40
0x8cc: V773 = S[V772]
0x8ce: JUMP 0x56f
---
Entry stack: [V11, 0x56f, V538]
Stack pops: 2
Stack additions: [S1, V773]
Exit stack: [V11, 0x56f, V773]

================================

Block 0x8cf
[0x8cf:0x8dd]
---
Predecessors: [0x5fc]
Successors: [0x53e]
---
0x8cf JUMPDEST
0x8d0 PUSH1 0x6
0x8d2 SLOAD
0x8d3 PUSH1 0x1
0x8d5 PUSH1 0xa0
0x8d7 PUSH1 0x2
0x8d9 EXP
0x8da SUB
0x8db AND
0x8dc DUP2
0x8dd JUMP
---
0x8cf: JUMPDEST 
0x8d0: V774 = 0x6
0x8d2: V775 = S[0x6]
0x8d3: V776 = 0x1
0x8d5: V777 = 0xa0
0x8d7: V778 = 0x2
0x8d9: V779 = EXP 0x2 0xa0
0x8da: V780 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8db: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x8dd: JUMP 0x53e
---
Entry stack: [V11, 0x53e]
Stack pops: 1
Stack additions: [S0, V781]
Exit stack: [V11, 0x53e, V781]

================================

Block 0x8de
[0x8de:0x8e3]
---
Predecessors: [0x611]
Successors: [0x56f]
---
0x8de JUMPDEST
0x8df PUSH1 0x0
0x8e1 SLOAD
0x8e2 DUP2
0x8e3 JUMP
---
0x8de: JUMPDEST 
0x8df: V782 = 0x0
0x8e1: V783 = S[0x0]
0x8e3: JUMP 0x56f
---
Entry stack: [V11, 0x56f]
Stack pops: 1
Stack additions: [S0, V783]
Exit stack: [V11, 0x56f, V783]

================================

Block 0x8e4
[0x8e4:0x8e9]
---
Predecessors: [0x626]
Successors: [0x56f]
---
0x8e4 JUMPDEST
0x8e5 PUSH1 0xd
0x8e7 SLOAD
0x8e8 DUP2
0x8e9 JUMP
---
0x8e4: JUMPDEST 
0x8e5: V784 = 0xd
0x8e7: V785 = S[0xd]
0x8e9: JUMP 0x56f
---
Entry stack: [V11, 0x56f]
Stack pops: 1
Stack additions: [S0, V785]
Exit stack: [V11, 0x56f, V785]

================================

Block 0x8ea
[0x8ea:0x8ef]
---
Predecessors: [0x63b]
Successors: [0x56f]
---
0x8ea JUMPDEST
0x8eb PUSH1 0x2
0x8ed SLOAD
0x8ee DUP2
0x8ef JUMP
---
0x8ea: JUMPDEST 
0x8eb: V786 = 0x2
0x8ed: V787 = S[0x2]
0x8ef: JUMP 0x56f
---
Entry stack: [V11, 0x56f]
Stack pops: 1
Stack additions: [S0, V787]
Exit stack: [V11, 0x56f, V787]

================================

Block 0x8f0
[0x8f0:0x8f5]
---
Predecessors: [0x650]
Successors: [0x56f]
---
0x8f0 JUMPDEST
0x8f1 PUSH1 0x5
0x8f3 SLOAD
0x8f4 DUP2
0x8f5 JUMP
---
0x8f0: JUMPDEST 
0x8f1: V788 = 0x5
0x8f3: V789 = S[0x5]
0x8f5: JUMP 0x56f
---
Entry stack: [V11, 0x56f]
Stack pops: 1
Stack additions: [S0, V789]
Exit stack: [V11, 0x56f, V789]

================================

Block 0x8f6
[0x8f6:0x8fb]
---
Predecessors: [0x665]
Successors: [0x56f]
---
0x8f6 JUMPDEST
0x8f7 PUSH1 0x4
0x8f9 SLOAD
0x8fa DUP2
0x8fb JUMP
---
0x8f6: JUMPDEST 
0x8f7: V790 = 0x4
0x8f9: V791 = S[0x4]
0x8fb: JUMP 0x56f
---
Entry stack: [V11, 0x56f]
Stack pops: 1
Stack additions: [S0, V791]
Exit stack: [V11, 0x56f, V791]

================================

Block 0x8fc
[0x8fc:0x901]
---
Predecessors: [0x67a]
Successors: [0x56f]
---
0x8fc JUMPDEST
0x8fd PUSH1 0x3
0x8ff SLOAD
0x900 DUP2
0x901 JUMP
---
0x8fc: JUMPDEST 
0x8fd: V792 = 0x3
0x8ff: V793 = S[0x3]
0x901: JUMP 0x56f
---
Entry stack: [V11, 0x56f]
Stack pops: 1
Stack additions: [S0, V793]
Exit stack: [V11, 0x56f, V793]

================================

Block 0x902
[0x902:0x90e]
---
Predecessors: [0x68f]
Successors: [0x90f, 0x910]
---
0x902 JUMPDEST
0x903 PUSH1 0x8
0x905 DUP1
0x906 SLOAD
0x907 DUP3
0x908 SWAP1
0x909 DUP2
0x90a LT
0x90b PUSH2 0x910
0x90e JUMPI
---
0x902: JUMPDEST 
0x903: V794 = 0x8
0x906: V795 = S[0x8]
0x90a: V796 = LT V588 V795
0x90b: V797 = 0x910
0x90e: JUMPI 0x910 V796
---
Entry stack: [V11, 0x56f, V588]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V11, 0x56f, V588, 0x8, V588]

================================

Block 0x90f
[0x90f:0x90f]
---
Predecessors: [0x902]
Successors: []
---
0x90f INVALID
---
0x90f: INVALID 
---
Entry stack: [V11, 0x56f, V588, 0x8, V588]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56f, V588, 0x8, V588]

================================

Block 0x910
[0x910:0x920]
---
Predecessors: [0x902]
Successors: [0x56f]
---
0x910 JUMPDEST
0x911 PUSH1 0x0
0x913 SWAP2
0x914 DUP3
0x915 MSTORE
0x916 PUSH1 0x20
0x918 SWAP1
0x919 SWAP2
0x91a SHA3
0x91b ADD
0x91c SLOAD
0x91d SWAP1
0x91e POP
0x91f DUP2
0x920 JUMP
---
0x910: JUMPDEST 
0x911: V798 = 0x0
0x915: M[0x0] = 0x8
0x916: V799 = 0x20
0x91a: V800 = SHA3 0x0 0x20
0x91b: V801 = ADD V800 V588
0x91c: V802 = S[V801]
0x920: JUMP 0x56f
---
Entry stack: [V11, 0x56f, V588, 0x8, V588]
Stack pops: 4
Stack additions: [S3, V802]
Exit stack: [V11, 0x56f, V802]

================================

Block 0x921
[0x921:0x92d]
---
Predecessors: [0x6a7]
Successors: [0x8a3, 0x92e]
---
0x921 JUMPDEST
0x922 PUSH1 0xc
0x924 DUP1
0x925 SLOAD
0x926 DUP3
0x927 SWAP1
0x928 DUP2
0x929 LT
0x92a PUSH2 0x8a3
0x92d JUMPI
---
0x921: JUMPDEST 
0x922: V803 = 0xc
0x925: V804 = S[0xc]
0x929: V805 = LT V596 V804
0x92a: V806 = 0x8a3
0x92d: JUMPI 0x8a3 V805
---
Entry stack: [V11, 0x53e, V596]
Stack pops: 1
Stack additions: [S0, 0xc, S0]
Exit stack: [V11, 0x53e, V596, 0xc, V596]

================================

Block 0x92e
[0x92e:0x92e]
---
Predecessors: [0x921]
Successors: []
---
0x92e INVALID
---
0x92e: INVALID 
---
Entry stack: [V11, 0x53e, V596, 0xc, V596]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x53e, V596, 0xc, V596]

================================

Block 0x92f
[0x92f:0x959]
---
Predecessors: [0x795]
Successors: [0x7af]
---
0x92f JUMPDEST
0x930 PUSH1 0x40
0x932 DUP1
0x933 MLOAD
0x934 PUSH1 0x20
0x936 DUP1
0x937 DUP3
0x938 MSTORE
0x939 DUP2
0x93a DUP4
0x93b ADD
0x93c SWAP1
0x93d SWAP3
0x93e MSTORE
0x93f PUSH1 0x60
0x941 SWAP2
0x942 DUP1
0x943 DUP3
0x944 ADD
0x945 PUSH2 0x400
0x948 DUP1
0x949 CODESIZE
0x94a DUP4
0x94b CODECOPY
0x94c POP
0x94d POP
0x94e POP
0x94f PUSH1 0x20
0x951 DUP2
0x952 ADD
0x953 SWAP3
0x954 SWAP1
0x955 SWAP3
0x956 MSTORE
0x957 POP
0x958 SWAP1
0x959 JUMP
---
0x92f: JUMPDEST 
0x930: V807 = 0x40
0x933: V808 = M[0x40]
0x934: V809 = 0x20
0x938: M[V808] = 0x20
0x93b: V810 = ADD 0x40 V808
0x93e: M[0x40] = V810
0x93f: V811 = 0x60
0x944: V812 = ADD V808 0x20
0x945: V813 = 0x400
0x949: V814 = CODESIZE
0x94b: CODECOPY V812 V814 0x400
0x94f: V815 = 0x20
0x952: V816 = ADD V808 0x20
0x956: M[V816] = V664
0x959: JUMP 0x7af
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, 0x7af, V664]
Stack pops: 2
Stack additions: [V808]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, 0x0, 0x0, 0x125, V84, 0x0, V84, 0x2, V808]

================================

Block 0x95a
[0x95a:0x978]
---
Predecessors: [0x23a]
Successors: [0x979]
---
0x95a JUMPDEST
0x95b POP
0x95c DUP1
0x95d SLOAD
0x95e PUSH1 0x0
0x960 DUP3
0x961 SSTORE
0x962 SWAP1
0x963 PUSH1 0x0
0x965 MSTORE
0x966 PUSH1 0x20
0x968 PUSH1 0x0
0x96a SHA3
0x96b SWAP1
0x96c DUP2
0x96d ADD
0x96e SWAP1
0x96f PUSH2 0x792
0x972 SWAP2
0x973 SWAP1
0x974 PUSH2 0x991
0x977 SWAP2
0x978 SWAP1
---
0x95a: JUMPDEST 
0x95d: V817 = S[0x9]
0x95e: V818 = 0x0
0x961: S[0x9] = 0x0
0x963: V819 = 0x0
0x965: M[0x0] = 0x9
0x966: V820 = 0x20
0x968: V821 = 0x0
0x96a: V822 = SHA3 0x0 0x20
0x96d: V823 = ADD V822 V817
0x96f: V824 = 0x792
0x974: V825 = 0x991
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x246, 0x9, 0x0]
Stack pops: 2
Stack additions: [0x792, 0x991, V823, V822]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x246, 0x792, 0x991, V823, V822]

================================

Block 0x979
[0x979:0x981]
---
Predecessors: [0x95a, 0x982]
Successors: [0x982, 0x98d]
---
0x979 JUMPDEST
0x97a DUP1
0x97b DUP3
0x97c GT
0x97d ISZERO
0x97e PUSH2 0x98d
0x981 JUMPI
---
0x979: JUMPDEST 
0x97c: V826 = GT V823 S0
0x97d: V827 = ISZERO V826
0x97e: V828 = 0x98d
0x981: JUMPI 0x98d V827
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x246, 0x792, 0x991, V823, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x246, 0x792, 0x991, V823, S0]

================================

Block 0x982
[0x982:0x98c]
---
Predecessors: [0x979]
Successors: [0x979]
---
0x982 PUSH1 0x0
0x984 DUP2
0x985 SSTORE
0x986 PUSH1 0x1
0x988 ADD
0x989 PUSH2 0x979
0x98c JUMP
---
0x982: V829 = 0x0
0x985: S[S0] = 0x0
0x986: V830 = 0x1
0x988: V831 = ADD 0x1 S0
0x989: V832 = 0x979
0x98c: JUMP 0x979
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x246, 0x792, 0x991, V823, S0]
Stack pops: 1
Stack additions: [V831]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x246, 0x792, 0x991, V823, V831]

================================

Block 0x98d
[0x98d:0x990]
---
Predecessors: [0x979]
Successors: [0x991]
---
0x98d JUMPDEST
0x98e POP
0x98f SWAP1
0x990 JUMP
---
0x98d: JUMPDEST 
0x990: JUMP 0x991
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x246, 0x792, 0x991, V823, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, 0x0, 0x0, 0x246, 0x792, V823]

================================

Block 0x991
[0x991:0x993]
---
Predecessors: [0x98d]
Successors: [0x792]
---
0x991 JUMPDEST
0x992 SWAP1
0x993 JUMP
---
0x991: JUMPDEST 
0x993: JUMP 0x792
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x246, 0x792, V823]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, 0x246, V823]

================================

Block 0x994
[0x994:0x9ca]
---
Predecessors: []
Successors: []
---
0x994 STOP
0x995 LOG1
0x996 PUSH6 0x627a7a723058
0x99d SHA3
0x99e SWAP16
0x99f COINBASE
0x9a0 LOG2
0x9a1 SWAP12
0x9a2 MISSING 0xc6
0x9a3 PUSH15 0x302b948eba3263c8e2a1adb130d906
0x9b3 PUSH23 0xcd0c8b9ef011ae4ea0b10029
---
0x994: STOP 
0x995: LOG S0 S1 S2
0x996: V833 = 0x627a7a723058
0x99d: V834 = SHA3 0x627a7a723058 S3
0x99f: V835 = COINBASE
0x9a0: LOG V835 S19 S4 S5
0x9a2: MISSING 0xc6
0x9a3: V836 = 0x302b948eba3263c8e2a1adb130d906
0x9b3: V837 = 0xcd0c8b9ef011ae4ea0b10029
---
Entry stack: []
Stack pops: 0
Stack additions: [S18, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S6, V834, 0xcd0c8b9ef011ae4ea0b10029, 0x302b948eba3263c8e2a1adb130d906]
Exit stack: []

================================

Function 0:
Public function signature: 0x119f8747
Entry block: 0x529
Exit block: 0x53e
Body: 0x529, 0x531, 0x535, 0x53e, 0x868

Function 1:
Public function signature: 0x2df5e84b
Entry block: 0x55a
Exit block: 0x56f
Body: 0x55a, 0x562, 0x566, 0x56f, 0x877

Function 2:
Public function signature: 0x2ecd4e7d
Entry block: 0x581
Exit block: 0x56f
Body: 0x56f, 0x581, 0x589, 0x58d, 0x87d

Function 3:
Public function signature: 0x579ff7a2
Entry block: 0x5a2
Exit block: 0x56f
Body: 0x56f, 0x5a2, 0x5aa, 0x5ae, 0x88f

Function 4:
Public function signature: 0x6ea277a2
Entry block: 0x5b7
Exit block: 0x53e
Body: 0x53e, 0x5b7, 0x5bf, 0x5c3, 0x895, 0x8a2, 0x8a3

Function 5:
Public function signature: 0x70519861
Entry block: 0x5cf
Exit block: 0x56f
Body: 0x56f, 0x5cf, 0x5d7, 0x5db, 0x8bd

Function 6:
Public function signature: 0xb2977aeb
Entry block: 0x5f0
Exit block: 0x53e
Body: 0x53e, 0x5f0, 0x5f8, 0x5fc, 0x8cf

Function 7:
Public function signature: 0xb7bbd567
Entry block: 0x605
Exit block: 0x56f
Body: 0x56f, 0x605, 0x60d, 0x611, 0x8de

Function 8:
Public function signature: 0xbb8c631f
Entry block: 0x61a
Exit block: 0x56f
Body: 0x56f, 0x61a, 0x622, 0x626, 0x8e4

Function 9:
Public function signature: 0xbe55cc1d
Entry block: 0x62f
Exit block: 0x56f
Body: 0x56f, 0x62f, 0x637, 0x63b, 0x8ea

Function 10:
Public function signature: 0xc87f4a06
Entry block: 0x644
Exit block: 0x56f
Body: 0x56f, 0x644, 0x64c, 0x650, 0x8f0

Function 11:
Public function signature: 0xca302ffa
Entry block: 0x659
Exit block: 0x56f
Body: 0x56f, 0x659, 0x661, 0x665, 0x8f6

Function 12:
Public function signature: 0xe3ac5d26
Entry block: 0x66e
Exit block: 0x56f
Body: 0x56f, 0x66e, 0x676, 0x67a, 0x8fc

Function 13:
Public function signature: 0xf301af42
Entry block: 0x683
Exit block: 0x56f
Body: 0x56f, 0x683, 0x68b, 0x68f, 0x902, 0x90f, 0x910

Function 14:
Public function signature: 0xf40e9b8f
Entry block: 0x69b
Exit block: 0x53e
Body: 0x53e, 0x69b, 0x6a3, 0x6a7, 0x8a3, 0x921, 0x92e

Function 15:
Public fallback function
Entry block: 0xda
Exit block: 0x22b
Body: 0xda, 0xef, 0xf3, 0xfb, 0x106, 0x10e, 0x11b, 0x125, 0x12c, 0x137, 0x146, 0x147, 0x15e, 0x15f, 0x173, 0x174, 0x18f, 0x1a3, 0x1a4, 0x1b2, 0x1de, 0x1df, 0x1e7, 0x1f0, 0x200, 0x201, 0x21c, 0x22b, 0x22c, 0x23a, 0x246, 0x253, 0x262, 0x263, 0x281, 0x2a0, 0x2d6, 0x2df, 0x317, 0x318, 0x348, 0x34d, 0x357, 0x3b9, 0x3c2, 0x3dd, 0x3e5, 0x3fe, 0x421, 0x42a, 0x45a, 0x45b, 0x490, 0x4a5, 0x4b0, 0x4b6, 0x4e8, 0x4f1, 0x515, 0x51a, 0x51f, 0x6b3, 0x6bf, 0x72b, 0x792, 0x795, 0x7af, 0x7bf, 0x7c8, 0x7de, 0x816, 0x81f, 0x830, 0x834, 0x83e, 0x83f, 0x846, 0x92f, 0x95a, 0x979, 0x982, 0x98d, 0x991

