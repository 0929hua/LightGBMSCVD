Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x85]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x2e1a7d4d
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x85
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x2e1a7d4d
0x1a: V12 = EQ V10 0x2e1a7d4d
0x1b: V13 = 0x85
0x1e: JUMPI 0x85 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x97]
---
0x1f DUP1
0x20 PUSH4 0x8da5cb5b
0x25 EQ
0x26 PUSH2 0x97
0x29 JUMPI
---
0x20: V14 = 0x8da5cb5b
0x25: V15 = EQ 0x8da5cb5b V10
0x26: V16 = 0x97
0x29: JUMPI 0x97 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xc0]
---
0x2a DUP1
0x2b PUSH4 0xc1246d39
0x30 EQ
0x31 PUSH2 0xc0
0x34 JUMPI
---
0x2b: V17 = 0xc1246d39
0x30: V18 = EQ 0xc1246d39 V10
0x31: V19 = 0xc0
0x34: JUMPI 0xc0 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xca]
---
0x35 DUP1
0x36 PUSH4 0xd7557f18
0x3b EQ
0x3c PUSH2 0xca
0x3f JUMPI
---
0x36: V20 = 0xd7557f18
0x3b: V21 = EQ 0xd7557f18 V10
0x3c: V22 = 0xca
0x3f: JUMPI 0xca V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xd9]
---
0x40 DUP1
0x41 PUSH4 0xe4849b32
0x46 EQ
0x47 PUSH2 0xd9
0x4a JUMPI
---
0x41: V23 = 0xe4849b32
0x46: V24 = EQ 0xe4849b32 V10
0x47: V25 = 0xd9
0x4a: JUMPI 0xd9 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xeb]
---
0x4b DUP1
0x4c PUSH4 0xec277ce7
0x51 EQ
0x52 PUSH2 0xeb
0x55 JUMPI
---
0x4c: V26 = 0xec277ce7
0x51: V27 = EQ 0xec277ce7 V10
0x52: V28 = 0xeb
0x55: JUMPI 0xeb V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x114]
---
0x56 DUP1
0x57 PUSH4 0xf2fde38b
0x5c EQ
0x5d PUSH2 0x114
0x60 JUMPI
---
0x57: V29 = 0xf2fde38b
0x5c: V30 = EQ 0xf2fde38b V10
0x5d: V31 = 0x114
0x60: JUMPI 0x114 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x64]
---
Predecessors: [0x0, 0x56]
Successors: [0x65]
---
0x61 JUMPDEST
0x62 PUSH2 0x83
---
0x61: JUMPDEST 
0x62: V32 = 0x83
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x83]
Exit stack: [V10, 0x83]

================================

Block 0x65
[0x65:0x7b]
---
Predecessors: [0x61]
Successors: [0x7c, 0x80]
---
0x65 JUMPDEST
0x66 PUSH1 0x1
0x68 SLOAD
0x69 CALLER
0x6a PUSH1 0x1
0x6c PUSH1 0xa0
0x6e PUSH1 0x2
0x70 EXP
0x71 SUB
0x72 SWAP1
0x73 DUP2
0x74 AND
0x75 SWAP2
0x76 AND
0x77 EQ
0x78 PUSH2 0x80
0x7b JUMPI
---
0x65: JUMPDEST 
0x66: V33 = 0x1
0x68: V34 = S[0x1]
0x69: V35 = CALLER
0x6a: V36 = 0x1
0x6c: V37 = 0xa0
0x6e: V38 = 0x2
0x70: V39 = EXP 0x2 0xa0
0x71: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x76: V42 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x77: V43 = EQ V42 V41
0x78: V44 = 0x80
0x7b: JUMPI 0x80 V43
---
Entry stack: [V10, 0x83]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83]

================================

Block 0x7c
[0x7c:0x7f]
---
Predecessors: [0x65]
Successors: []
---
0x7c PUSH2 0x0
0x7f JUMP
---
0x7c: V45 = 0x0
0x7f: THROW 
---
Entry stack: [V10, 0x83]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83]

================================

Block 0x80
[0x80:0x80]
---
Predecessors: [0x65]
Successors: [0x81]
---
0x80 JUMPDEST
---
0x80: JUMPDEST 
---
Entry stack: [V10, 0x83]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83]

================================

Block 0x81
[0x81:0x82]
---
Predecessors: [0x80]
Successors: [0x83]
---
0x81 JUMPDEST
0x82 JUMP
---
0x81: JUMPDEST 
0x82: JUMP 0x83
---
Entry stack: [V10, 0x83]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x81, 0x173, 0x291, 0x433]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x85
[0x85:0x8a]
---
Predecessors: [0xb]
Successors: [0x8b]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 PUSH2 0x0
0x8a JUMPI
---
0x85: JUMPDEST 
0x86: V46 = CALLVALUE
0x87: V47 = 0x0
0x8a: THROWI V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x94]
---
Predecessors: [0x85]
Successors: [0x126]
---
0x8b PUSH2 0x83
0x8e PUSH1 0x4
0x90 CALLDATALOAD
0x91 PUSH2 0x126
0x94 JUMP
---
0x8b: V48 = 0x83
0x8e: V49 = 0x4
0x90: V50 = CALLDATALOAD 0x4
0x91: V51 = 0x126
0x94: JUMP 0x126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x83, V50]
Exit stack: [V10, 0x83, V50]

================================

Block 0x95
[0x95:0x96]
---
Predecessors: []
Successors: []
---
0x95 JUMPDEST
0x96 STOP
---
0x95: JUMPDEST 
0x96: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x97
[0x97:0x9c]
---
Predecessors: [0x1f]
Successors: [0x9d]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 PUSH2 0x0
0x9c JUMPI
---
0x97: JUMPDEST 
0x98: V52 = CALLVALUE
0x99: V53 = 0x0
0x9c: THROWI V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9d
[0x9d:0xa3]
---
Predecessors: [0x97]
Successors: [0x176]
---
0x9d PUSH2 0xa4
0xa0 PUSH2 0x176
0xa3 JUMP
---
0x9d: V54 = 0xa4
0xa0: V55 = 0x176
0xa3: JUMP 0x176
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V10, 0xa4]

================================

Block 0xa4
[0xa4:0xbf]
---
Predecessors: [0x176, 0x3d7]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 DUP1
0xa8 MLOAD
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 SWAP1
0xb2 SWAP3
0xb3 AND
0xb4 DUP3
0xb5 MSTORE
0xb6 MLOAD
0xb7 SWAP1
0xb8 DUP2
0xb9 SWAP1
0xba SUB
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf RETURN
---
0xa4: JUMPDEST 
0xa5: V56 = 0x40
0xa8: V57 = M[0x40]
0xa9: V58 = 0x1
0xab: V59 = 0xa0
0xad: V60 = 0x2
0xaf: V61 = EXP 0x2 0xa0
0xb0: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V63 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xb5: M[V57] = V63
0xb6: V64 = M[0x40]
0xba: V65 = SUB V57 V64
0xbb: V66 = 0x20
0xbd: V67 = ADD 0x20 V65
0xbf: RETURN V64 V67
---
Entry stack: [V10, 0xa4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0xc0
[0xc0:0xc7]
---
Predecessors: [0x2a]
Successors: [0x185]
---
0xc0 JUMPDEST
0xc1 PUSH2 0x83
0xc4 PUSH2 0x185
0xc7 JUMP
---
0xc0: JUMPDEST 
0xc1: V68 = 0x83
0xc4: V69 = 0x185
0xc7: JUMP 0x185
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x83]
Exit stack: [V10, 0x83]

================================

Block 0xc8
[0xc8:0xc9]
---
Predecessors: []
Successors: []
---
0xc8 JUMPDEST
0xc9 STOP
---
0xc8: JUMPDEST 
0xc9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xca
[0xca:0xcf]
---
Predecessors: [0x35]
Successors: [0xd0]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc PUSH2 0x0
0xcf JUMPI
---
0xca: JUMPDEST 
0xcb: V70 = CALLVALUE
0xcc: V71 = 0x0
0xcf: THROWI V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0xca]
Successors: [0x295]
---
0xd0 PUSH2 0x83
0xd3 PUSH2 0x295
0xd6 JUMP
---
0xd0: V72 = 0x83
0xd3: V73 = 0x295
0xd6: JUMP 0x295
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x83]
Exit stack: [V10, 0x83]

================================

Block 0xd7
[0xd7:0xd8]
---
Predecessors: []
Successors: []
---
0xd7 JUMPDEST
0xd8 STOP
---
0xd7: JUMPDEST 
0xd8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd9
[0xd9:0xde]
---
Predecessors: [0x40]
Successors: [0xdf]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb PUSH2 0x0
0xde JUMPI
---
0xd9: JUMPDEST 
0xda: V74 = CALLVALUE
0xdb: V75 = 0x0
0xde: THROWI V74
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdf
[0xdf:0xe8]
---
Predecessors: [0xd9]
Successors: [0x332]
---
0xdf PUSH2 0x83
0xe2 PUSH1 0x4
0xe4 CALLDATALOAD
0xe5 PUSH2 0x332
0xe8 JUMP
---
0xdf: V76 = 0x83
0xe2: V77 = 0x4
0xe4: V78 = CALLDATALOAD 0x4
0xe5: V79 = 0x332
0xe8: JUMP 0x332
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x83, V78]
Exit stack: [V10, 0x83, V78]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: []
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xeb
[0xeb:0xf0]
---
Predecessors: [0x4b]
Successors: [0xf1]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed PUSH2 0x0
0xf0 JUMPI
---
0xeb: JUMPDEST 
0xec: V80 = CALLVALUE
0xed: V81 = 0x0
0xf0: THROWI V80
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0xeb]
Successors: [0x3d7]
---
0xf1 PUSH2 0xa4
0xf4 PUSH2 0x3d7
0xf7 JUMP
---
0xf1: V82 = 0xa4
0xf4: V83 = 0x3d7
0xf7: JUMP 0x3d7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V10, 0xa4]

================================

Block 0xf8
[0xf8:0x113]
---
Predecessors: []
Successors: []
---
0xf8 JUMPDEST
0xf9 PUSH1 0x40
0xfb DUP1
0xfc MLOAD
0xfd PUSH1 0x1
0xff PUSH1 0xa0
0x101 PUSH1 0x2
0x103 EXP
0x104 SUB
0x105 SWAP1
0x106 SWAP3
0x107 AND
0x108 DUP3
0x109 MSTORE
0x10a MLOAD
0x10b SWAP1
0x10c DUP2
0x10d SWAP1
0x10e SUB
0x10f PUSH1 0x20
0x111 ADD
0x112 SWAP1
0x113 RETURN
---
0xf8: JUMPDEST 
0xf9: V84 = 0x40
0xfc: V85 = M[0x40]
0xfd: V86 = 0x1
0xff: V87 = 0xa0
0x101: V88 = 0x2
0x103: V89 = EXP 0x2 0xa0
0x104: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107: V91 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x109: M[V85] = V91
0x10a: V92 = M[0x40]
0x10e: V93 = SUB V85 V92
0x10f: V94 = 0x20
0x111: V95 = ADD 0x20 V93
0x113: RETURN V92 V95
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x114
[0x114:0x119]
---
Predecessors: [0x56]
Successors: [0x11a]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 PUSH2 0x0
0x119 JUMPI
---
0x114: JUMPDEST 
0x115: V96 = CALLVALUE
0x116: V97 = 0x0
0x119: THROWI V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11a
[0x11a:0x123]
---
Predecessors: [0x114]
Successors: [0x3e6]
---
0x11a PUSH2 0x83
0x11d PUSH1 0x4
0x11f CALLDATALOAD
0x120 PUSH2 0x3e6
0x123 JUMP
---
0x11a: V98 = 0x83
0x11d: V99 = 0x4
0x11f: V100 = CALLDATALOAD 0x4
0x120: V101 = 0x3e6
0x123: JUMP 0x3e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x83, V100]
Exit stack: [V10, 0x83, V100]

================================

Block 0x124
[0x124:0x125]
---
Predecessors: []
Successors: []
---
0x124 JUMPDEST
0x125 STOP
---
0x124: JUMPDEST 
0x125: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x126
[0x126:0x13c]
---
Predecessors: [0x8b]
Successors: [0x13d, 0x141]
---
0x126 JUMPDEST
0x127 PUSH1 0x0
0x129 SLOAD
0x12a CALLER
0x12b PUSH1 0x1
0x12d PUSH1 0xa0
0x12f PUSH1 0x2
0x131 EXP
0x132 SUB
0x133 SWAP1
0x134 DUP2
0x135 AND
0x136 SWAP2
0x137 AND
0x138 EQ
0x139 PUSH2 0x141
0x13c JUMPI
---
0x126: JUMPDEST 
0x127: V102 = 0x0
0x129: V103 = S[0x0]
0x12a: V104 = CALLER
0x12b: V105 = 0x1
0x12d: V106 = 0xa0
0x12f: V107 = 0x2
0x131: V108 = EXP 0x2 0xa0
0x132: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x137: V111 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x138: V112 = EQ V111 V110
0x139: V113 = 0x141
0x13c: JUMPI 0x141 V112
---
Entry stack: [V10, 0x83, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V50]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x126]
Successors: []
---
0x13d PUSH2 0x0
0x140 JUMP
---
0x13d: V114 = 0x0
0x140: THROW 
---
Entry stack: [V10, 0x83, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V50]

================================

Block 0x141
[0x141:0x16c]
---
Predecessors: [0x126]
Successors: [0x16d, 0x171]
---
0x141 JUMPDEST
0x142 PUSH1 0x40
0x144 MLOAD
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d CALLER
0x14e AND
0x14f SWAP1
0x150 DUP3
0x151 ISZERO
0x152 PUSH2 0x8fc
0x155 MUL
0x156 SWAP1
0x157 DUP4
0x158 SWAP1
0x159 PUSH1 0x0
0x15b DUP2
0x15c DUP2
0x15d DUP2
0x15e DUP6
0x15f DUP9
0x160 DUP9
0x161 CALL
0x162 SWAP4
0x163 POP
0x164 POP
0x165 POP
0x166 POP
0x167 ISZERO
0x168 ISZERO
0x169 PUSH2 0x171
0x16c JUMPI
---
0x141: JUMPDEST 
0x142: V115 = 0x40
0x144: V116 = M[0x40]
0x145: V117 = 0x1
0x147: V118 = 0xa0
0x149: V119 = 0x2
0x14b: V120 = EXP 0x2 0xa0
0x14c: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14d: V122 = CALLER
0x14e: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x151: V124 = ISZERO V50
0x152: V125 = 0x8fc
0x155: V126 = MUL 0x8fc V124
0x159: V127 = 0x0
0x161: V128 = CALL V126 V123 V50 V116 0x0 V116 0x0
0x167: V129 = ISZERO V128
0x168: V130 = ISZERO V129
0x169: V131 = 0x171
0x16c: JUMPI 0x171 V130
---
Entry stack: [V10, 0x83, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x83, V50]

================================

Block 0x16d
[0x16d:0x170]
---
Predecessors: [0x141]
Successors: []
---
0x16d PUSH2 0x0
0x170 JUMP
---
0x16d: V132 = 0x0
0x170: THROW 
---
Entry stack: [V10, 0x83, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V50]

================================

Block 0x171
[0x171:0x171]
---
Predecessors: [0x141, 0x2b1]
Successors: [0x172]
---
0x171 JUMPDEST
---
0x171: JUMPDEST 
---
Entry stack: [V10, 0x83, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, S0]

================================

Block 0x172
[0x172:0x172]
---
Predecessors: [0x171]
Successors: [0x173]
---
0x172 JUMPDEST
---
0x172: JUMPDEST 
---
Entry stack: [V10, 0x83, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, S0]

================================

Block 0x173
[0x173:0x175]
---
Predecessors: [0x172]
Successors: [0x83]
---
0x173 JUMPDEST
0x174 POP
0x175 JUMP
---
0x173: JUMPDEST 
0x175: JUMP 0x83
---
Entry stack: [V10, 0x83, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x176
[0x176:0x184]
---
Predecessors: [0x9d]
Successors: [0xa4]
---
0x176 JUMPDEST
0x177 PUSH1 0x0
0x179 SLOAD
0x17a PUSH1 0x1
0x17c PUSH1 0xa0
0x17e PUSH1 0x2
0x180 EXP
0x181 SUB
0x182 AND
0x183 DUP2
0x184 JUMP
---
0x176: JUMPDEST 
0x177: V133 = 0x0
0x179: V134 = S[0x0]
0x17a: V135 = 0x1
0x17c: V136 = 0xa0
0x17e: V137 = 0x2
0x180: V138 = EXP 0x2 0xa0
0x181: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x182: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x184: JUMP 0xa4
---
Entry stack: [V10, 0xa4]
Stack pops: 1
Stack additions: [S0, V140]
Exit stack: [V10, 0xa4, V140]

================================

Block 0x185
[0x185:0x200]
---
Predecessors: [0xc0]
Successors: [0x201, 0x205]
---
0x185 JUMPDEST
0x186 PUSH1 0x40
0x188 DUP1
0x189 MLOAD
0x18a PUSH32 0x6275792829000000000000000000000000000000000000000000000000000000
0x1ab DUP2
0x1ac MSTORE
0x1ad DUP2
0x1ae MLOAD
0x1af SWAP1
0x1b0 DUP2
0x1b1 SWAP1
0x1b2 SUB
0x1b3 PUSH1 0x5
0x1b5 ADD
0x1b6 DUP2
0x1b7 SHA3
0x1b8 PUSH1 0x1
0x1ba SLOAD
0x1bb PUSH1 0xe0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 DUP1
0x1c1 DUP4
0x1c2 DIV
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 MUL
0x1c6 DUP5
0x1c7 MSTORE
0x1c8 SWAP4
0x1c9 MLOAD
0x1ca SWAP2
0x1cb SWAP4
0x1cc PUSH1 0x0
0x1ce SWAP4
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 SWAP1
0x1d8 SWAP3
0x1d9 AND
0x1da SWAP3
0x1db SWAP1
0x1dc SWAP2
0x1dd CALLVALUE
0x1de SWAP2
0x1df PUSH1 0x4
0x1e1 DUP1
0x1e2 DUP4
0x1e3 ADD
0x1e4 SWAP3
0x1e5 DUP8
0x1e6 SWAP3
0x1e7 SWAP2
0x1e8 SWAP1
0x1e9 DUP3
0x1ea SWAP1
0x1eb SUB
0x1ec ADD
0x1ed DUP2
0x1ee DUP6
0x1ef DUP9
0x1f0 PUSH2 0x8502
0x1f3 GAS
0x1f4 SUB
0x1f5 CALL
0x1f6 SWAP4
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb ISZERO
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x185: JUMPDEST 
0x186: V141 = 0x40
0x189: V142 = M[0x40]
0x18a: V143 = 0x6275792829000000000000000000000000000000000000000000000000000000
0x1ac: M[V142] = 0x6275792829000000000000000000000000000000000000000000000000000000
0x1ae: V144 = M[0x40]
0x1b2: V145 = SUB V142 V144
0x1b3: V146 = 0x5
0x1b5: V147 = ADD 0x5 V145
0x1b7: V148 = SHA3 V144 V147
0x1b8: V149 = 0x1
0x1ba: V150 = S[0x1]
0x1bb: V151 = 0xe0
0x1bd: V152 = 0x2
0x1bf: V153 = EXP 0x2 0xe0
0x1c2: V154 = DIV V148 0x100000000000000000000000000000000000000000000000000000000
0x1c5: V155 = MUL V154 0x100000000000000000000000000000000000000000000000000000000
0x1c7: M[V144] = V155
0x1c9: V156 = M[0x40]
0x1cc: V157 = 0x0
0x1cf: V158 = 0x1
0x1d1: V159 = 0xa0
0x1d3: V160 = 0x2
0x1d5: V161 = EXP 0x2 0xa0
0x1d6: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V163 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1dd: V164 = CALLVALUE
0x1df: V165 = 0x4
0x1e3: V166 = ADD V144 0x4
0x1eb: V167 = SUB V144 V156
0x1ec: V168 = ADD V167 0x4
0x1f0: V169 = 0x8502
0x1f3: V170 = GAS
0x1f4: V171 = SUB V170 0x8502
0x1f5: V172 = CALL V171 V163 V164 V156 V168 V156 0x0
0x1fb: V173 = ISZERO V172
0x1fc: V174 = ISZERO V173
0x1fd: V175 = 0x205
0x200: JUMPI 0x205 V174
---
Entry stack: [V10, 0x83]
Stack pops: 0
Stack additions: [V148, 0x0]
Exit stack: [V10, 0x83, V148, 0x0]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x185]
Successors: []
---
0x201 PUSH2 0x0
0x204 JUMP
---
0x201: V176 = 0x0
0x204: THROW 
---
Entry stack: [V10, 0x83, V148, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V148, 0x0]

================================

Block 0x205
[0x205:0x28b]
---
Predecessors: [0x185]
Successors: [0x28c, 0x290]
---
0x205 JUMPDEST
0x206 POP
0x207 PUSH1 0x40
0x209 DUP1
0x20a MLOAD
0x20b PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x22c DUP2
0x22d MSTORE
0x22e DUP2
0x22f MLOAD
0x230 SWAP1
0x231 DUP2
0x232 SWAP1
0x233 SUB
0x234 PUSH1 0x19
0x236 ADD
0x237 DUP2
0x238 SHA3
0x239 PUSH1 0x1
0x23b SLOAD
0x23c PUSH1 0xe0
0x23e PUSH1 0x2
0x240 EXP
0x241 DUP1
0x242 DUP4
0x243 DIV
0x244 SWAP1
0x245 DUP2
0x246 MUL
0x247 DUP5
0x248 MSTORE
0x249 CALLER
0x24a PUSH1 0x1
0x24c PUSH1 0xa0
0x24e PUSH1 0x2
0x250 EXP
0x251 SUB
0x252 SWAP1
0x253 DUP2
0x254 AND
0x255 PUSH1 0x4
0x257 DUP7
0x258 ADD
0x259 MSTORE
0x25a CALLVALUE
0x25b PUSH1 0x24
0x25d DUP7
0x25e ADD
0x25f MSTORE
0x260 SWAP5
0x261 MLOAD
0x262 SWAP3
0x263 SWAP5
0x264 SWAP1
0x265 SWAP2
0x266 AND
0x267 SWAP3
0x268 SWAP1
0x269 SWAP2
0x26a PUSH1 0x44
0x26c DUP1
0x26d DUP4
0x26e ADD
0x26f SWAP3
0x270 PUSH1 0x0
0x272 SWAP3
0x273 SWAP2
0x274 SWAP1
0x275 DUP3
0x276 SWAP1
0x277 SUB
0x278 ADD
0x279 DUP2
0x27a DUP4
0x27b DUP8
0x27c PUSH2 0x61da
0x27f GAS
0x280 SUB
0x281 CALL
0x282 SWAP3
0x283 POP
0x284 POP
0x285 POP
0x286 ISZERO
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x205: JUMPDEST 
0x207: V177 = 0x40
0x20a: V178 = M[0x40]
0x20b: V179 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x22d: M[V178] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x22f: V180 = M[0x40]
0x233: V181 = SUB V178 V180
0x234: V182 = 0x19
0x236: V183 = ADD 0x19 V181
0x238: V184 = SHA3 V180 V183
0x239: V185 = 0x1
0x23b: V186 = S[0x1]
0x23c: V187 = 0xe0
0x23e: V188 = 0x2
0x240: V189 = EXP 0x2 0xe0
0x243: V190 = DIV V184 0x100000000000000000000000000000000000000000000000000000000
0x246: V191 = MUL V190 0x100000000000000000000000000000000000000000000000000000000
0x248: M[V180] = V191
0x249: V192 = CALLER
0x24a: V193 = 0x1
0x24c: V194 = 0xa0
0x24e: V195 = 0x2
0x250: V196 = EXP 0x2 0xa0
0x251: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x255: V199 = 0x4
0x258: V200 = ADD V180 0x4
0x259: M[V200] = V198
0x25a: V201 = CALLVALUE
0x25b: V202 = 0x24
0x25e: V203 = ADD V180 0x24
0x25f: M[V203] = V201
0x261: V204 = M[0x40]
0x266: V205 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V206 = 0x44
0x26e: V207 = ADD V180 0x44
0x270: V208 = 0x0
0x277: V209 = SUB V180 V204
0x278: V210 = ADD V209 0x44
0x27c: V211 = 0x61da
0x27f: V212 = GAS
0x280: V213 = SUB V212 0x61da
0x281: V214 = CALL V213 V205 0x0 V204 V210 V204 0x0
0x286: V215 = ISZERO V214
0x287: V216 = ISZERO V215
0x288: V217 = 0x290
0x28b: JUMPI 0x290 V216
---
Entry stack: [V10, 0x83, V148, 0x0]
Stack pops: 1
Stack additions: [V184]
Exit stack: [V10, 0x83, V148, V184]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x205]
Successors: []
---
0x28c PUSH2 0x0
0x28f JUMP
---
0x28c: V218 = 0x0
0x28f: THROW 
---
Entry stack: [V10, 0x83, V148, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V148, V184]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: [0x205, 0x34e]
Successors: [0x291]
---
0x290 JUMPDEST
---
0x290: JUMPDEST 
---
Entry stack: [V10, 0x83, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, S1, S0]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x290]
Successors: [0x83]
---
0x291 JUMPDEST
0x292 POP
0x293 POP
0x294 JUMP
---
0x291: JUMPDEST 
0x294: JUMP 0x83
---
Entry stack: [V10, 0x83, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x2ac]
---
Predecessors: [0xd0]
Successors: [0x2ad, 0x2b1]
---
0x295 JUMPDEST
0x296 PUSH1 0x0
0x298 DUP1
0x299 SLOAD
0x29a CALLER
0x29b PUSH1 0x1
0x29d PUSH1 0xa0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 SUB
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 AND
0x2a6 SWAP2
0x2a7 AND
0x2a8 EQ
0x2a9 PUSH2 0x2b1
0x2ac JUMPI
---
0x295: JUMPDEST 
0x296: V219 = 0x0
0x299: V220 = S[0x0]
0x29a: V221 = CALLER
0x29b: V222 = 0x1
0x29d: V223 = 0xa0
0x29f: V224 = 0x2
0x2a1: V225 = EXP 0x2 0xa0
0x2a2: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a5: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x2a7: V228 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V229 = EQ V228 V227
0x2a9: V230 = 0x2b1
0x2ac: JUMPI 0x2b1 V229
---
Entry stack: [V10, 0x83]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x83, 0x0]

================================

Block 0x2ad
[0x2ad:0x2b0]
---
Predecessors: [0x295]
Successors: []
---
0x2ad PUSH2 0x0
0x2b0 JUMP
---
0x2ad: V231 = 0x0
0x2b0: THROW 
---
Entry stack: [V10, 0x83, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, 0x0]

================================

Block 0x2b1
[0x2b1:0x328]
---
Predecessors: [0x295]
Successors: [0x171, 0x329]
---
0x2b1 JUMPDEST
0x2b2 POP
0x2b3 PUSH1 0x40
0x2b5 DUP1
0x2b6 MLOAD
0x2b7 PUSH32 0x636c6f736543616d706169676e28290000000000000000000000000000000000
0x2d8 DUP2
0x2d9 MSTORE
0x2da DUP2
0x2db MLOAD
0x2dc SWAP1
0x2dd DUP2
0x2de SWAP1
0x2df SUB
0x2e0 PUSH1 0xf
0x2e2 ADD
0x2e3 DUP2
0x2e4 SHA3
0x2e5 PUSH1 0x1
0x2e7 SLOAD
0x2e8 PUSH1 0xe0
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed DUP1
0x2ee DUP4
0x2ef DIV
0x2f0 SWAP1
0x2f1 DUP2
0x2f2 MUL
0x2f3 DUP5
0x2f4 MSTORE
0x2f5 SWAP4
0x2f6 MLOAD
0x2f7 SWAP2
0x2f8 SWAP4
0x2f9 PUSH1 0x1
0x2fb PUSH1 0xa0
0x2fd PUSH1 0x2
0x2ff EXP
0x300 SUB
0x301 SWAP1
0x302 SWAP2
0x303 AND
0x304 SWAP3
0x305 SWAP1
0x306 SWAP2
0x307 PUSH1 0x4
0x309 DUP1
0x30a DUP4
0x30b ADD
0x30c SWAP3
0x30d PUSH1 0x0
0x30f SWAP3
0x310 SWAP2
0x311 SWAP1
0x312 DUP3
0x313 SWAP1
0x314 SUB
0x315 ADD
0x316 DUP2
0x317 DUP4
0x318 DUP8
0x319 PUSH2 0x61da
0x31c GAS
0x31d SUB
0x31e CALL
0x31f SWAP3
0x320 POP
0x321 POP
0x322 POP
0x323 ISZERO
0x324 ISZERO
0x325 PUSH2 0x171
0x328 JUMPI
---
0x2b1: JUMPDEST 
0x2b3: V232 = 0x40
0x2b6: V233 = M[0x40]
0x2b7: V234 = 0x636c6f736543616d706169676e28290000000000000000000000000000000000
0x2d9: M[V233] = 0x636c6f736543616d706169676e28290000000000000000000000000000000000
0x2db: V235 = M[0x40]
0x2df: V236 = SUB V233 V235
0x2e0: V237 = 0xf
0x2e2: V238 = ADD 0xf V236
0x2e4: V239 = SHA3 V235 V238
0x2e5: V240 = 0x1
0x2e7: V241 = S[0x1]
0x2e8: V242 = 0xe0
0x2ea: V243 = 0x2
0x2ec: V244 = EXP 0x2 0xe0
0x2ef: V245 = DIV V239 0x100000000000000000000000000000000000000000000000000000000
0x2f2: V246 = MUL V245 0x100000000000000000000000000000000000000000000000000000000
0x2f4: M[V235] = V246
0x2f6: V247 = M[0x40]
0x2f9: V248 = 0x1
0x2fb: V249 = 0xa0
0x2fd: V250 = 0x2
0x2ff: V251 = EXP 0x2 0xa0
0x300: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x303: V253 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x307: V254 = 0x4
0x30b: V255 = ADD V235 0x4
0x30d: V256 = 0x0
0x314: V257 = SUB V235 V247
0x315: V258 = ADD V257 0x4
0x319: V259 = 0x61da
0x31c: V260 = GAS
0x31d: V261 = SUB V260 0x61da
0x31e: V262 = CALL V261 V253 0x0 V247 V258 V247 0x0
0x323: V263 = ISZERO V262
0x324: V264 = ISZERO V263
0x325: V265 = 0x171
0x328: JUMPI 0x171 V264
---
Entry stack: [V10, 0x83, 0x0]
Stack pops: 1
Stack additions: [V239]
Exit stack: [V10, 0x83, V239]

================================

Block 0x329
[0x329:0x32c]
---
Predecessors: [0x2b1]
Successors: []
---
0x329 PUSH2 0x0
0x32c JUMP
---
0x329: V266 = 0x0
0x32c: THROW 
---
Entry stack: [V10, 0x83, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V239]

================================

Block 0x32d
[0x32d:0x32d]
---
Predecessors: []
Successors: [0x32e]
---
0x32d JUMPDEST
---
0x32d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32e
[0x32e:0x32e]
---
Predecessors: [0x32d]
Successors: [0x32f]
---
0x32e JUMPDEST
---
0x32e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32f
[0x32f:0x331]
---
Predecessors: [0x32e]
Successors: []
Has unresolved jump.
---
0x32f JUMPDEST
0x330 POP
0x331 JUMP
---
0x32f: JUMPDEST 
0x331: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x332
[0x332:0x349]
---
Predecessors: [0xdf]
Successors: [0x34a, 0x34e]
---
0x332 JUMPDEST
0x333 PUSH1 0x0
0x335 DUP1
0x336 SLOAD
0x337 CALLER
0x338 PUSH1 0x1
0x33a PUSH1 0xa0
0x33c PUSH1 0x2
0x33e EXP
0x33f SUB
0x340 SWAP1
0x341 DUP2
0x342 AND
0x343 SWAP2
0x344 AND
0x345 EQ
0x346 PUSH2 0x34e
0x349 JUMPI
---
0x332: JUMPDEST 
0x333: V267 = 0x0
0x336: V268 = S[0x0]
0x337: V269 = CALLER
0x338: V270 = 0x1
0x33a: V271 = 0xa0
0x33c: V272 = 0x2
0x33e: V273 = EXP 0x2 0xa0
0x33f: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x342: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x344: V276 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x345: V277 = EQ V276 V275
0x346: V278 = 0x34e
0x349: JUMPI 0x34e V277
---
Entry stack: [V10, 0x83, V78]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x83, V78, 0x0]

================================

Block 0x34a
[0x34a:0x34d]
---
Predecessors: [0x332]
Successors: []
---
0x34a PUSH2 0x0
0x34d JUMP
---
0x34a: V279 = 0x0
0x34d: THROW 
---
Entry stack: [V10, 0x83, V78, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V78, 0x0]

================================

Block 0x34e
[0x34e:0x3cc]
---
Predecessors: [0x332]
Successors: [0x290, 0x3cd]
---
0x34e JUMPDEST
0x34f POP
0x350 PUSH1 0x40
0x352 DUP1
0x353 MLOAD
0x354 PUSH32 0x73656c6c2875696e743235362900000000000000000000000000000000000000
0x375 DUP2
0x376 MSTORE
0x377 DUP2
0x378 MLOAD
0x379 SWAP1
0x37a DUP2
0x37b SWAP1
0x37c SUB
0x37d PUSH1 0xd
0x37f ADD
0x380 DUP2
0x381 SHA3
0x382 PUSH1 0x1
0x384 SLOAD
0x385 PUSH1 0xe0
0x387 PUSH1 0x2
0x389 EXP
0x38a DUP1
0x38b DUP4
0x38c DIV
0x38d SWAP1
0x38e DUP2
0x38f MUL
0x390 DUP5
0x391 MSTORE
0x392 PUSH1 0x4
0x394 DUP5
0x395 ADD
0x396 DUP7
0x397 SWAP1
0x398 MSTORE
0x399 SWAP4
0x39a MLOAD
0x39b SWAP2
0x39c SWAP4
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 SWAP1
0x3a6 SWAP2
0x3a7 AND
0x3a8 SWAP3
0x3a9 SWAP1
0x3aa SWAP2
0x3ab PUSH1 0x24
0x3ad DUP1
0x3ae DUP4
0x3af ADD
0x3b0 SWAP3
0x3b1 PUSH1 0x0
0x3b3 SWAP3
0x3b4 SWAP2
0x3b5 SWAP1
0x3b6 DUP3
0x3b7 SWAP1
0x3b8 SUB
0x3b9 ADD
0x3ba DUP2
0x3bb DUP4
0x3bc DUP8
0x3bd PUSH2 0x61da
0x3c0 GAS
0x3c1 SUB
0x3c2 CALL
0x3c3 SWAP3
0x3c4 POP
0x3c5 POP
0x3c6 POP
0x3c7 ISZERO
0x3c8 ISZERO
0x3c9 PUSH2 0x290
0x3cc JUMPI
---
0x34e: JUMPDEST 
0x350: V280 = 0x40
0x353: V281 = M[0x40]
0x354: V282 = 0x73656c6c2875696e743235362900000000000000000000000000000000000000
0x376: M[V281] = 0x73656c6c2875696e743235362900000000000000000000000000000000000000
0x378: V283 = M[0x40]
0x37c: V284 = SUB V281 V283
0x37d: V285 = 0xd
0x37f: V286 = ADD 0xd V284
0x381: V287 = SHA3 V283 V286
0x382: V288 = 0x1
0x384: V289 = S[0x1]
0x385: V290 = 0xe0
0x387: V291 = 0x2
0x389: V292 = EXP 0x2 0xe0
0x38c: V293 = DIV V287 0x100000000000000000000000000000000000000000000000000000000
0x38f: V294 = MUL V293 0x100000000000000000000000000000000000000000000000000000000
0x391: M[V283] = V294
0x392: V295 = 0x4
0x395: V296 = ADD V283 0x4
0x398: M[V296] = V78
0x39a: V297 = M[0x40]
0x39d: V298 = 0x1
0x39f: V299 = 0xa0
0x3a1: V300 = 0x2
0x3a3: V301 = EXP 0x2 0xa0
0x3a4: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V303 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V304 = 0x24
0x3af: V305 = ADD V283 0x24
0x3b1: V306 = 0x0
0x3b8: V307 = SUB V283 V297
0x3b9: V308 = ADD V307 0x24
0x3bd: V309 = 0x61da
0x3c0: V310 = GAS
0x3c1: V311 = SUB V310 0x61da
0x3c2: V312 = CALL V311 V303 0x0 V297 V308 V297 0x0
0x3c7: V313 = ISZERO V312
0x3c8: V314 = ISZERO V313
0x3c9: V315 = 0x290
0x3cc: JUMPI 0x290 V314
---
Entry stack: [V10, 0x83, V78, 0x0]
Stack pops: 2
Stack additions: [S1, V287]
Exit stack: [V10, 0x83, V78, V287]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x34e]
Successors: []
---
0x3cd PUSH2 0x0
0x3d0 JUMP
---
0x3cd: V316 = 0x0
0x3d0: THROW 
---
Entry stack: [V10, 0x83, V78, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V78, V287]

================================

Block 0x3d1
[0x3d1:0x3d1]
---
Predecessors: []
Successors: [0x3d2]
---
0x3d1 JUMPDEST
---
0x3d1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d2
[0x3d2:0x3d2]
---
Predecessors: [0x3d1]
Successors: [0x3d3]
---
0x3d2 JUMPDEST
---
0x3d2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d3
[0x3d3:0x3d6]
---
Predecessors: [0x3d2]
Successors: []
Has unresolved jump.
---
0x3d3 JUMPDEST
0x3d4 POP
0x3d5 POP
0x3d6 JUMP
---
0x3d3: JUMPDEST 
0x3d6: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x3d7
[0x3d7:0x3e5]
---
Predecessors: [0xf1]
Successors: [0xa4]
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x1
0x3da SLOAD
0x3db PUSH1 0x1
0x3dd PUSH1 0xa0
0x3df PUSH1 0x2
0x3e1 EXP
0x3e2 SUB
0x3e3 AND
0x3e4 DUP2
0x3e5 JUMP
---
0x3d7: JUMPDEST 
0x3d8: V317 = 0x1
0x3da: V318 = S[0x1]
0x3db: V319 = 0x1
0x3dd: V320 = 0xa0
0x3df: V321 = 0x2
0x3e1: V322 = EXP 0x2 0xa0
0x3e2: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e3: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x3e5: JUMP 0xa4
---
Entry stack: [V10, 0xa4]
Stack pops: 1
Stack additions: [S0, V324]
Exit stack: [V10, 0xa4, V324]

================================

Block 0x3e6
[0x3e6:0x3fc]
---
Predecessors: [0x11a]
Successors: [0x3fd, 0x401]
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x0
0x3e9 SLOAD
0x3ea CALLER
0x3eb PUSH1 0x1
0x3ed PUSH1 0xa0
0x3ef PUSH1 0x2
0x3f1 EXP
0x3f2 SUB
0x3f3 SWAP1
0x3f4 DUP2
0x3f5 AND
0x3f6 SWAP2
0x3f7 AND
0x3f8 EQ
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x3e6: JUMPDEST 
0x3e7: V325 = 0x0
0x3e9: V326 = S[0x0]
0x3ea: V327 = CALLER
0x3eb: V328 = 0x1
0x3ed: V329 = 0xa0
0x3ef: V330 = 0x2
0x3f1: V331 = EXP 0x2 0xa0
0x3f2: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x3f7: V334 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V335 = EQ V334 V333
0x3f9: V336 = 0x401
0x3fc: JUMPI 0x401 V335
---
Entry stack: [V10, 0x83, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V100]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x3e6]
Successors: []
---
0x3fd PUSH2 0x0
0x400 JUMP
---
0x3fd: V337 = 0x0
0x400: THROW 
---
Entry stack: [V10, 0x83, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V100]

================================

Block 0x401
[0x401:0x431]
---
Predecessors: [0x3e6]
Successors: [0x432]
---
0x401 JUMPDEST
0x402 PUSH1 0x0
0x404 DUP1
0x405 SLOAD
0x406 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41b NOT
0x41c AND
0x41d PUSH13 0x1000000000000000000000000
0x42b DUP4
0x42c DUP2
0x42d MUL
0x42e DIV
0x42f OR
0x430 SWAP1
0x431 SSTORE
---
0x401: JUMPDEST 
0x402: V338 = 0x0
0x405: V339 = S[0x0]
0x406: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x41b: V341 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x41c: V342 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V339
0x41d: V343 = 0x1000000000000000000000000
0x42d: V344 = MUL 0x1000000000000000000000000 V100
0x42e: V345 = DIV V344 0x1000000000000000000000000
0x42f: V346 = OR V345 V342
0x431: S[0x0] = V346
---
Entry stack: [V10, 0x83, V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x83, V100]

================================

Block 0x432
[0x432:0x432]
---
Predecessors: [0x401]
Successors: [0x433]
---
0x432 JUMPDEST
---
0x432: JUMPDEST 
---
Entry stack: [V10, 0x83, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x83, V100]

================================

Block 0x433
[0x433:0x435]
---
Predecessors: [0x432]
Successors: [0x83]
---
0x433 JUMPDEST
0x434 POP
0x435 JUMP
---
0x433: JUMPDEST 
0x435: JUMP 0x83
---
Entry stack: [V10, 0x83, V100]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x85
Exit block: 0x83
Body: 0x83, 0x85, 0x8b, 0x126, 0x13d, 0x141, 0x16d, 0x171, 0x172, 0x173

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x97
Exit block: 0xa4
Body: 0x97, 0x9d, 0xa4, 0x176

Function 2:
Public function signature: 0xc1246d39
Entry block: 0xc0
Exit block: 0x83
Body: 0x83, 0xc0, 0x185, 0x201, 0x205, 0x28c, 0x290, 0x291

Function 3:
Public function signature: 0xd7557f18
Entry block: 0xca
Exit block: 0x83
Body: 0x83, 0xca, 0xd0, 0x171, 0x172, 0x173, 0x295, 0x2ad, 0x2b1, 0x329

Function 4:
Public function signature: 0xe4849b32
Entry block: 0xd9
Exit block: 0x83
Body: 0x83, 0xd9, 0xdf, 0x290, 0x291, 0x332, 0x34a, 0x34e, 0x3cd

Function 5:
Public function signature: 0xec277ce7
Entry block: 0xeb
Exit block: 0xa4
Body: 0xa4, 0xeb, 0xf1, 0x3d7

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x114
Exit block: 0x83
Body: 0x83, 0x114, 0x11a, 0x3e6, 0x3fd, 0x401, 0x432, 0x433

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x83
Body: 0x61, 0x65, 0x7c, 0x80, 0x81, 0x83

