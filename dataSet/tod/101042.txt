Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x56
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x56
0xa: JUMPI 0x56 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x58]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x779afe6
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x58
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x779afe6
0x1a: V12 = EQ V10 0x779afe6
0x1b: V13 = 0x58
0x1e: JUMPI 0x58 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x107]
---
0x1f DUP1
0x20 PUSH4 0x144fa6d7
0x25 EQ
0x26 PUSH2 0x107
0x29 JUMPI
---
0x20: V14 = 0x144fa6d7
0x25: V15 = EQ 0x144fa6d7 V10
0x26: V16 = 0x107
0x29: JUMPI 0x107 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x128]
---
0x2a DUP1
0x2b PUSH4 0x41c0e1b5
0x30 EQ
0x31 PUSH2 0x128
0x34 JUMPI
---
0x2b: V17 = 0x41c0e1b5
0x30: V18 = EQ 0x41c0e1b5 V10
0x31: V19 = 0x128
0x34: JUMPI 0x128 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x146]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x146
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x146
0x3f: JUMPI 0x146 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x158]
---
0x40 DUP1
0x41 PUSH4 0x9d76ea58
0x46 EQ
0x47 PUSH2 0x158
0x4a JUMPI
---
0x41: V23 = 0x9d76ea58
0x46: V24 = EQ 0x9d76ea58 V10
0x47: V25 = 0x158
0x4a: JUMPI 0x158 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x16a]
---
0x4b DUP1
0x4c PUSH4 0xf2fde38b
0x51 EQ
0x52 PUSH2 0x16a
0x55 JUMPI
---
0x4c: V26 = 0xf2fde38b
0x51: V27 = EQ 0xf2fde38b V10
0x52: V28 = 0x16a
0x55: JUMPI 0x16a V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0x19e, 0x32c, 0x335]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x58
[0x58:0x85]
---
Predecessors: [0xb]
Successors: [0x86, 0x201]
---
0x58 JUMPDEST
0x59 PUSH2 0x56
0x5c PUSH1 0x4
0x5e CALLDATALOAD
0x5f PUSH1 0x24
0x61 CALLDATALOAD
0x62 PUSH1 0x44
0x64 CALLDATALOAD
0x65 PUSH1 0x2
0x67 SLOAD
0x68 PUSH1 0x0
0x6a SWAP1
0x6b DUP2
0x6c SWAP1
0x6d DUP2
0x6e SWAP1
0x6f DUP2
0x70 SWAP1
0x71 PUSH1 0x1
0x73 PUSH1 0xa0
0x75 PUSH1 0x2
0x77 EXP
0x78 SUB
0x79 SWAP1
0x7a DUP2
0x7b AND
0x7c CALLER
0x7d SWAP1
0x7e SWAP2
0x7f AND
0x80 EQ
0x81 ISZERO
0x82 PUSH2 0x201
0x85 JUMPI
---
0x58: JUMPDEST 
0x59: V29 = 0x56
0x5c: V30 = 0x4
0x5e: V31 = CALLDATALOAD 0x4
0x5f: V32 = 0x24
0x61: V33 = CALLDATALOAD 0x24
0x62: V34 = 0x44
0x64: V35 = CALLDATALOAD 0x44
0x65: V36 = 0x2
0x67: V37 = S[0x2]
0x68: V38 = 0x0
0x71: V39 = 0x1
0x73: V40 = 0xa0
0x75: V41 = 0x2
0x77: V42 = EXP 0x2 0xa0
0x78: V43 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x7c: V45 = CALLER
0x7f: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x80: V47 = EQ V46 V44
0x81: V48 = ISZERO V47
0x82: V49 = 0x201
0x85: JUMPI 0x201 V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x56, V31, V33, V35, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x56, V31, V33, V35, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x86
[0x86:0xe6]
---
Predecessors: [0x58]
Successors: [0xe7]
---
0x86 PUSH1 0x2
0x88 SLOAD
0x89 PUSH32 0x45d46c200000000000000000000000000000000000000000000000000000000
0xaa PUSH1 0x60
0xac SWAP1
0xad DUP2
0xae MSTORE
0xaf PUSH1 0x1
0xb1 PUSH1 0xa0
0xb3 PUSH1 0x2
0xb5 EXP
0xb6 SUB
0xb7 DUP1
0xb8 DUP11
0xb9 AND
0xba PUSH1 0x64
0xbc MSTORE
0xbd DUP9
0xbe DUP2
0xbf AND
0xc0 PUSH1 0x84
0xc2 MSTORE
0xc3 SWAP2
0xc4 SWAP1
0xc5 SWAP2
0xc6 AND
0xc7 SWAP5
0xc8 POP
0xc9 DUP5
0xca SWAP1
0xcb PUSH4 0x45d46c2
0xd0 SWAP1
0xd1 PUSH1 0xa4
0xd3 SWAP1
0xd4 PUSH1 0x40
0xd6 SWAP1
0xd7 PUSH1 0x44
0xd9 DUP2
0xda DUP8
0xdb DUP8
0xdc PUSH2 0x61da
0xdf GAS
0xe0 SUB
0xe1 CALL
0xe2 ISZERO
0xe3 PUSH2 0x2
0xe6 JUMPI
---
0x86: V50 = 0x2
0x88: V51 = S[0x2]
0x89: V52 = 0x45d46c200000000000000000000000000000000000000000000000000000000
0xaa: V53 = 0x60
0xae: M[0x60] = 0x45d46c200000000000000000000000000000000000000000000000000000000
0xaf: V54 = 0x1
0xb1: V55 = 0xa0
0xb3: V56 = 0x2
0xb5: V57 = EXP 0x2 0xa0
0xb6: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V59 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0xba: V60 = 0x64
0xbc: M[0x64] = V59
0xbf: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xc0: V62 = 0x84
0xc2: M[0x84] = V61
0xc6: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xcb: V64 = 0x45d46c2
0xd1: V65 = 0xa4
0xd4: V66 = 0x40
0xd7: V67 = 0x44
0xdc: V68 = 0x61da
0xdf: V69 = GAS
0xe0: V70 = SUB V69 0x61da
0xe1: V71 = CALL V70 V63 0x0 0x60 0x44 0x60 0x40
0xe2: V72 = ISZERO V71
0xe3: V73 = 0x2
0xe6: THROWI V72
---
Entry stack: [V10, 0x56, V31, V33, V35, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, V63, S2, S1, S0, V63, 0x45d46c2, 0xa4]
Exit stack: [V10, 0x56, V31, V33, V35, V63, 0x0, 0x0, 0x0, V63, 0x45d46c2, 0xa4]

================================

Block 0xe7
[0xe7:0x102]
---
Predecessors: [0x86]
Successors: [0x103, 0x206]
---
0xe7 POP
0xe8 POP
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed MLOAD
0xee PUSH1 0x20
0xf0 SWAP2
0xf1 SWAP1
0xf2 SWAP2
0xf3 ADD
0xf4 MLOAD
0xf5 SWAP1
0xf6 SWAP5
0xf7 POP
0xf8 SWAP3
0xf9 POP
0xfa POP
0xfb DUP5
0xfc DUP4
0xfd LT
0xfe ISZERO
0xff PUSH2 0x206
0x102 JUMPI
---
0xe9: V74 = 0x40
0xeb: V75 = M[0x40]
0xed: V76 = M[V75]
0xee: V77 = 0x20
0xf3: V78 = ADD 0x20 V75
0xf4: V79 = M[V78]
0xfd: V80 = LT V76 V35
0xfe: V81 = ISZERO V80
0xff: V82 = 0x206
0x102: JUMPI 0x206 V81
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, 0x0, 0x0, 0x0, V63, 0x45d46c2, 0xa4]
Stack pops: 8
Stack additions: [S7, S6, V76, V79, S3]
Exit stack: [V10, 0x56, V31, V33, V35, V63, V76, V79, 0x0]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xe7]
Successors: []
---
0x103 PUSH2 0x2
0x106 JUMP
---
0x103: V83 = 0x2
0x106: THROW 
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V76, V79, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56, V31, V33, V35, V63, V76, V79, 0x0]

================================

Block 0x107
[0x107:0x123]
---
Predecessors: [0x1f]
Successors: [0x124, 0x335]
---
0x107 JUMPDEST
0x108 PUSH2 0x56
0x10b PUSH1 0x4
0x10d CALLDATALOAD
0x10e PUSH1 0x0
0x110 SLOAD
0x111 CALLER
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a SWAP1
0x11b DUP2
0x11c AND
0x11d SWAP2
0x11e AND
0x11f EQ
0x120 PUSH2 0x335
0x123 JUMPI
---
0x107: JUMPDEST 
0x108: V84 = 0x56
0x10b: V85 = 0x4
0x10d: V86 = CALLDATALOAD 0x4
0x10e: V87 = 0x0
0x110: V88 = S[0x0]
0x111: V89 = CALLER
0x112: V90 = 0x1
0x114: V91 = 0xa0
0x116: V92 = 0x2
0x118: V93 = EXP 0x2 0xa0
0x119: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x11e: V96 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V97 = EQ V96 V95
0x120: V98 = 0x335
0x123: JUMPI 0x335 V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x56, V86]
Exit stack: [V10, 0x56, V86]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x107]
Successors: []
---
0x124 PUSH2 0x2
0x127 JUMP
---
0x124: V99 = 0x2
0x127: THROW 
---
Entry stack: [V10, 0x56, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56, V86]

================================

Block 0x128
[0x128:0x141]
---
Predecessors: [0x2a]
Successors: [0x142, 0x1c0]
---
0x128 JUMPDEST
0x129 PUSH2 0x56
0x12c PUSH1 0x0
0x12e SLOAD
0x12f CALLER
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 SWAP1
0x139 DUP2
0x13a AND
0x13b SWAP2
0x13c AND
0x13d EQ
0x13e PUSH2 0x1c0
0x141 JUMPI
---
0x128: JUMPDEST 
0x129: V100 = 0x56
0x12c: V101 = 0x0
0x12e: V102 = S[0x0]
0x12f: V103 = CALLER
0x130: V104 = 0x1
0x132: V105 = 0xa0
0x134: V106 = 0x2
0x136: V107 = EXP 0x2 0xa0
0x137: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x13c: V110 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x13d: V111 = EQ V110 V109
0x13e: V112 = 0x1c0
0x141: JUMPI 0x1c0 V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V10, 0x56]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x128]
Successors: []
---
0x142 PUSH2 0x2
0x145 JUMP
---
0x142: V113 = 0x2
0x145: THROW 
---
Entry stack: [V10, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56]

================================

Block 0x146
[0x146:0x157]
---
Predecessors: [0x35]
Successors: [0x18b]
---
0x146 JUMPDEST
0x147 PUSH2 0x18b
0x14a PUSH1 0x0
0x14c SLOAD
0x14d PUSH1 0x1
0x14f PUSH1 0xa0
0x151 PUSH1 0x2
0x153 EXP
0x154 SUB
0x155 AND
0x156 DUP2
0x157 JUMP
---
0x146: JUMPDEST 
0x147: V114 = 0x18b
0x14a: V115 = 0x0
0x14c: V116 = S[0x0]
0x14d: V117 = 0x1
0x14f: V118 = 0xa0
0x151: V119 = 0x2
0x153: V120 = EXP 0x2 0xa0
0x154: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x157: JUMP 0x18b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18b, V122]
Exit stack: [V10, 0x18b, V122]

================================

Block 0x158
[0x158:0x169]
---
Predecessors: [0x40]
Successors: [0x18b]
---
0x158 JUMPDEST
0x159 PUSH2 0x18b
0x15c PUSH1 0x2
0x15e SLOAD
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 AND
0x168 DUP2
0x169 JUMP
---
0x158: JUMPDEST 
0x159: V123 = 0x18b
0x15c: V124 = 0x2
0x15e: V125 = S[0x2]
0x15f: V126 = 0x1
0x161: V127 = 0xa0
0x163: V128 = 0x2
0x165: V129 = EXP 0x2 0xa0
0x166: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x169: JUMP 0x18b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18b, V131]
Exit stack: [V10, 0x18b, V131]

================================

Block 0x16a
[0x16a:0x186]
---
Predecessors: [0x4b]
Successors: [0x187, 0x19e]
---
0x16a JUMPDEST
0x16b PUSH2 0x56
0x16e PUSH1 0x4
0x170 CALLDATALOAD
0x171 PUSH1 0x0
0x173 SLOAD
0x174 CALLER
0x175 PUSH1 0x1
0x177 PUSH1 0xa0
0x179 PUSH1 0x2
0x17b EXP
0x17c SUB
0x17d SWAP1
0x17e DUP2
0x17f AND
0x180 SWAP2
0x181 AND
0x182 EQ
0x183 PUSH2 0x19e
0x186 JUMPI
---
0x16a: JUMPDEST 
0x16b: V132 = 0x56
0x16e: V133 = 0x4
0x170: V134 = CALLDATALOAD 0x4
0x171: V135 = 0x0
0x173: V136 = S[0x0]
0x174: V137 = CALLER
0x175: V138 = 0x1
0x177: V139 = 0xa0
0x179: V140 = 0x2
0x17b: V141 = EXP 0x2 0xa0
0x17c: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17f: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x181: V144 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x182: V145 = EQ V144 V143
0x183: V146 = 0x19e
0x186: JUMPI 0x19e V145
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x56, V134]
Exit stack: [V10, 0x56, V134]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x16a]
Successors: []
---
0x187 PUSH2 0x2
0x18a JUMP
---
0x187: V147 = 0x2
0x18a: THROW 
---
Entry stack: [V10, 0x56, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56, V134]

================================

Block 0x18b
[0x18b:0x19d]
---
Predecessors: [0x146, 0x158]
Successors: []
---
0x18b JUMPDEST
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 AND
0x195 PUSH1 0x60
0x197 SWAP1
0x198 DUP2
0x199 MSTORE
0x19a PUSH1 0x20
0x19c SWAP1
0x19d RETURN
---
0x18b: JUMPDEST 
0x18c: V148 = 0x1
0x18e: V149 = 0xa0
0x190: V150 = 0x2
0x192: V151 = EXP 0x2 0xa0
0x193: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x195: V154 = 0x60
0x199: M[0x60] = V153
0x19a: V155 = 0x20
0x19d: RETURN 0x60 0x20
---
Entry stack: [V10, 0x18b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x18b]

================================

Block 0x19e
[0x19e:0x1bf]
---
Predecessors: [0x16a]
Successors: [0x56]
---
0x19e JUMPDEST
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 SLOAD
0x1a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b8 NOT
0x1b9 AND
0x1ba DUP3
0x1bb OR
0x1bc SWAP1
0x1bd SSTORE
0x1be POP
0x1bf JUMP
---
0x19e: JUMPDEST 
0x19f: V156 = 0x0
0x1a2: V157 = S[0x0]
0x1a3: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V159 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V160 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V157
0x1bb: V161 = OR V134 V160
0x1bd: S[0x0] = V161
0x1bf: JUMP 0x56
---
Entry stack: [V10, 0x56, V134]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c0
[0x1c0:0x1d3]
---
Predecessors: [0x128]
Successors: [0x1d4, 0x1f5]
---
0x1c0 JUMPDEST
0x1c1 PUSH1 0x0
0x1c3 ADDRESS
0x1c4 PUSH1 0x1
0x1c6 PUSH1 0xa0
0x1c8 PUSH1 0x2
0x1ca EXP
0x1cb SUB
0x1cc AND
0x1cd BALANCE
0x1ce GT
0x1cf ISZERO
0x1d0 PUSH2 0x1f5
0x1d3 JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V162 = 0x0
0x1c3: V163 = ADDRESS
0x1c4: V164 = 0x1
0x1c6: V165 = 0xa0
0x1c8: V166 = 0x2
0x1ca: V167 = EXP 0x2 0xa0
0x1cb: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cc: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x1cd: V170 = BALANCE V169
0x1ce: V171 = GT V170 0x0
0x1cf: V172 = ISZERO V171
0x1d0: V173 = 0x1f5
0x1d3: JUMPI 0x1f5 V172
---
Entry stack: [V10, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56]

================================

Block 0x1d4
[0x1d4:0x1f4]
---
Predecessors: [0x1c0]
Successors: [0x1f5]
---
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0xa0
0x1d8 PUSH1 0x2
0x1da EXP
0x1db SUB
0x1dc CALLER
0x1dd DUP2
0x1de AND
0x1df SWAP1
0x1e0 PUSH1 0x0
0x1e2 SWAP1
0x1e3 ADDRESS
0x1e4 AND
0x1e5 BALANCE
0x1e6 PUSH1 0x60
0x1e8 DUP3
0x1e9 DUP2
0x1ea DUP2
0x1eb DUP2
0x1ec DUP6
0x1ed DUP9
0x1ee DUP4
0x1ef CALL
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
---
0x1d4: V174 = 0x1
0x1d6: V175 = 0xa0
0x1d8: V176 = 0x2
0x1da: V177 = EXP 0x2 0xa0
0x1db: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dc: V179 = CALLER
0x1de: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x1e0: V181 = 0x0
0x1e3: V182 = ADDRESS
0x1e4: V183 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V184 = BALANCE V183
0x1e6: V185 = 0x60
0x1ef: V186 = CALL 0x0 V180 V184 0x60 0x0 0x60 0x0
---
Entry stack: [V10, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56]

================================

Block 0x1f5
[0x1f5:0x200]
---
Predecessors: [0x1c0, 0x1d4]
Successors: []
---
0x1f5 JUMPDEST
0x1f6 CALLER
0x1f7 PUSH1 0x1
0x1f9 PUSH1 0xa0
0x1fb PUSH1 0x2
0x1fd EXP
0x1fe SUB
0x1ff AND
0x200 SELFDESTRUCT
---
0x1f5: JUMPDEST 
0x1f6: V187 = CALLER
0x1f7: V188 = 0x1
0x1f9: V189 = 0xa0
0x1fb: V190 = 0x2
0x1fd: V191 = EXP 0x2 0xa0
0x1fe: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ff: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x200: SELFDESTRUCT V193
---
Entry stack: [V10, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56]

================================

Block 0x201
[0x201:0x205]
---
Predecessors: [0x58]
Successors: []
---
0x201 JUMPDEST
0x202 PUSH2 0x2
0x205 JUMP
---
0x201: JUMPDEST 
0x202: V194 = 0x2
0x205: THROW 
---
Entry stack: [V10, 0x56, V31, V33, V35, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56, V31, V33, V35, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x206
[0x206:0x210]
---
Predecessors: [0xe7]
Successors: [0x211, 0x215]
---
0x206 JUMPDEST
0x207 DUP2
0x208 DUP6
0x209 DUP4
0x20a ADD
0x20b LT
0x20c ISZERO
0x20d PUSH2 0x215
0x210 JUMPI
---
0x206: JUMPDEST 
0x20a: V195 = ADD V79 V35
0x20b: V196 = LT V195 V79
0x20c: V197 = ISZERO V196
0x20d: V198 = 0x215
0x210: JUMPI 0x215 V197
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V76, V79, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x56, V31, V33, V35, V63, V76, V79, 0x0]

================================

Block 0x211
[0x211:0x214]
---
Predecessors: [0x206]
Successors: []
---
0x211 PUSH2 0x2
0x214 JUMP
---
0x211: V199 = 0x2
0x214: THROW 
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V76, V79, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56, V31, V33, V35, V63, V76, V79, 0x0]

================================

Block 0x215
[0x215:0x26c]
---
Predecessors: [0x206]
Successors: [0x26d]
---
0x215 JUMPDEST
0x216 PUSH1 0x40
0x218 DUP1
0x219 MLOAD
0x21a PUSH1 0xe4
0x21c PUSH1 0x2
0x21e EXP
0x21f PUSH3 0x9901f7
0x223 MUL
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e DUP10
0x22f AND
0x230 PUSH1 0x4
0x232 DUP3
0x233 ADD
0x234 MSTORE
0x235 SWAP4
0x236 DUP7
0x237 SWAP1
0x238 SUB
0x239 PUSH1 0x24
0x23b DUP6
0x23c ADD
0x23d DUP2
0x23e SWAP1
0x23f MSTORE
0x240 SWAP1
0x241 MLOAD
0x242 SWAP1
0x243 SWAP4
0x244 SWAP3
0x245 DUP7
0x246 ADD
0x247 SWAP3
0x248 DUP6
0x249 SWAP2
0x24a PUSH4 0x9901f70
0x24f SWAP2
0x250 PUSH1 0x44
0x252 DUP2
0x253 DUP2
0x254 ADD
0x255 SWAP3
0x256 DUP7
0x257 SWAP3
0x258 SWAP1
0x259 SWAP2
0x25a SWAP1
0x25b DUP3
0x25c SWAP1
0x25d SUB
0x25e ADD
0x25f DUP2
0x260 DUP4
0x261 DUP8
0x262 PUSH2 0x61da
0x265 GAS
0x266 SUB
0x267 CALL
0x268 ISZERO
0x269 PUSH2 0x2
0x26c JUMPI
---
0x215: JUMPDEST 
0x216: V200 = 0x40
0x219: V201 = M[0x40]
0x21a: V202 = 0xe4
0x21c: V203 = 0x2
0x21e: V204 = EXP 0x2 0xe4
0x21f: V205 = 0x9901f7
0x223: V206 = MUL 0x9901f7 0x1000000000000000000000000000000000000000000000000000000000
0x225: M[V201] = 0x9901f7000000000000000000000000000000000000000000000000000000000
0x226: V207 = 0x1
0x228: V208 = 0xa0
0x22a: V209 = 0x2
0x22c: V210 = EXP 0x2 0xa0
0x22d: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V212 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x230: V213 = 0x4
0x233: V214 = ADD V201 0x4
0x234: M[V214] = V212
0x238: V215 = SUB V76 V35
0x239: V216 = 0x24
0x23c: V217 = ADD V201 0x24
0x23f: M[V217] = V215
0x241: V218 = M[0x40]
0x246: V219 = ADD V35 V79
0x24a: V220 = 0x9901f70
0x250: V221 = 0x44
0x254: V222 = ADD 0x44 V201
0x25d: V223 = SUB V201 V218
0x25e: V224 = ADD V223 0x44
0x262: V225 = 0x61da
0x265: V226 = GAS
0x266: V227 = SUB V226 0x61da
0x267: V228 = CALL V227 V63 0x0 V218 V224 V218 0x0
0x268: V229 = ISZERO V228
0x269: V230 = 0x2
0x26c: THROWI V229
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V76, V79, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V215, V219, S0, S3, 0x9901f70, V222]
Exit stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x0, V63, 0x9901f70, V222]

================================

Block 0x26d
[0x26d:0x2b1]
---
Predecessors: [0x215]
Successors: [0x2b2]
---
0x26d POP
0x26e PUSH1 0x40
0x270 DUP1
0x271 MLOAD
0x272 PUSH1 0xe4
0x274 PUSH1 0x2
0x276 EXP
0x277 PUSH3 0x9901f7
0x27b MUL
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x1
0x280 PUSH1 0xa0
0x282 PUSH1 0x2
0x284 EXP
0x285 SUB
0x286 DUP11
0x287 AND
0x288 PUSH1 0x4
0x28a DUP3
0x28b ADD
0x28c MSTORE
0x28d PUSH1 0x24
0x28f DUP2
0x290 ADD
0x291 DUP7
0x292 SWAP1
0x293 MSTORE
0x294 SWAP1
0x295 MLOAD
0x296 PUSH1 0x44
0x298 DUP3
0x299 DUP2
0x29a ADD
0x29b SWAP3
0x29c DUP7
0x29d SWAP3
0x29e SWAP2
0x29f SWAP1
0x2a0 DUP3
0x2a1 SWAP1
0x2a2 SUB
0x2a3 ADD
0x2a4 DUP2
0x2a5 DUP4
0x2a6 DUP8
0x2a7 PUSH2 0x61da
0x2aa GAS
0x2ab SUB
0x2ac CALL
0x2ad ISZERO
0x2ae PUSH2 0x2
0x2b1 JUMPI
---
0x26e: V231 = 0x40
0x271: V232 = M[0x40]
0x272: V233 = 0xe4
0x274: V234 = 0x2
0x276: V235 = EXP 0x2 0xe4
0x277: V236 = 0x9901f7
0x27b: V237 = MUL 0x9901f7 0x1000000000000000000000000000000000000000000000000000000000
0x27d: M[V232] = 0x9901f7000000000000000000000000000000000000000000000000000000000
0x27e: V238 = 0x1
0x280: V239 = 0xa0
0x282: V240 = 0x2
0x284: V241 = EXP 0x2 0xa0
0x285: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x287: V243 = AND V33 0xffffffffffffffffffffffffffffffffffffffff
0x288: V244 = 0x4
0x28b: V245 = ADD V232 0x4
0x28c: M[V245] = V243
0x28d: V246 = 0x24
0x290: V247 = ADD V232 0x24
0x293: M[V247] = V219
0x295: V248 = M[0x40]
0x296: V249 = 0x44
0x29a: V250 = ADD 0x44 V232
0x2a2: V251 = SUB V232 V248
0x2a3: V252 = ADD V251 0x44
0x2a7: V253 = 0x61da
0x2aa: V254 = GAS
0x2ab: V255 = SUB V254 0x61da
0x2ac: V256 = CALL V255 V63 0x0 V248 V252 V248 0x0
0x2ad: V257 = ISZERO V256
0x2ae: V258 = 0x2
0x2b1: THROWI V257
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x0, V63, 0x9901f70, V222]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, V250]
Exit stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x0, V63, 0x9901f70, V250]

================================

Block 0x2b2
[0x2b2:0x2d1]
---
Predecessors: [0x26d]
Successors: [0x2d2, 0x2f5]
---
0x2b2 POP
0x2b3 PUSH7 0x11c37937e08000
0x2bb SWAP3
0x2bc POP
0x2bd POP
0x2be POP
0x2bf PUSH1 0x1
0x2c1 PUSH1 0xa0
0x2c3 PUSH1 0x2
0x2c5 EXP
0x2c6 SUB
0x2c7 DUP8
0x2c8 AND
0x2c9 BALANCE
0x2ca DUP2
0x2cb SWAP1
0x2cc LT
0x2cd ISZERO
0x2ce PUSH2 0x2f5
0x2d1 JUMPI
---
0x2b3: V259 = 0x11c37937e08000
0x2bf: V260 = 0x1
0x2c1: V261 = 0xa0
0x2c3: V262 = 0x2
0x2c5: V263 = EXP 0x2 0xa0
0x2c6: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V265 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V266 = BALANCE V265
0x2cc: V267 = LT V266 0x11c37937e08000
0x2cd: V268 = ISZERO V267
0x2ce: V269 = 0x2f5
0x2d1: JUMPI 0x2f5 V268
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x0, V63, 0x9901f70, V250]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, 0x11c37937e08000]
Exit stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x11c37937e08000]

================================

Block 0x2d2
[0x2d2:0x2f4]
---
Predecessors: [0x2b2]
Successors: [0x2f5]
---
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 PUSH1 0x1
0x2d7 PUSH1 0xa0
0x2d9 PUSH1 0x2
0x2db EXP
0x2dc SUB
0x2dd DUP9
0x2de AND
0x2df SWAP1
0x2e0 PUSH1 0x0
0x2e2 SWAP1
0x2e3 DUP3
0x2e4 BALANCE
0x2e5 DUP5
0x2e6 SUB
0x2e7 SWAP1
0x2e8 DUP3
0x2e9 DUP2
0x2ea DUP2
0x2eb DUP2
0x2ec DUP6
0x2ed DUP9
0x2ee DUP4
0x2ef CALL
0x2f0 POP
0x2f1 POP
0x2f2 POP
0x2f3 POP
0x2f4 POP
---
0x2d2: V270 = 0x40
0x2d4: V271 = M[0x40]
0x2d5: V272 = 0x1
0x2d7: V273 = 0xa0
0x2d9: V274 = 0x2
0x2db: V275 = EXP 0x2 0xa0
0x2dc: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2de: V277 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V278 = 0x0
0x2e4: V279 = BALANCE V277
0x2e6: V280 = SUB 0x11c37937e08000 V279
0x2ef: V281 = CALL 0x0 V277 V280 V271 0x0 V271 0x0
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x11c37937e08000]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x11c37937e08000]

================================

Block 0x2f5
[0x2f5:0x308]
---
Predecessors: [0x2b2, 0x2d2]
Successors: [0x309, 0x32c]
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe DUP7
0x2ff AND
0x300 BALANCE
0x301 DUP2
0x302 SWAP1
0x303 LT
0x304 ISZERO
0x305 PUSH2 0x32c
0x308 JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V282 = 0x1
0x2f8: V283 = 0xa0
0x2fa: V284 = 0x2
0x2fc: V285 = EXP 0x2 0xa0
0x2fd: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V287 = AND V33 0xffffffffffffffffffffffffffffffffffffffff
0x300: V288 = BALANCE V287
0x303: V289 = LT V288 0x11c37937e08000
0x304: V290 = ISZERO V289
0x305: V291 = 0x32c
0x308: JUMPI 0x32c V290
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x11c37937e08000]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x11c37937e08000]

================================

Block 0x309
[0x309:0x32b]
---
Predecessors: [0x2f5]
Successors: [0x32c]
---
0x309 PUSH1 0x40
0x30b MLOAD
0x30c PUSH1 0x1
0x30e PUSH1 0xa0
0x310 PUSH1 0x2
0x312 EXP
0x313 SUB
0x314 DUP8
0x315 AND
0x316 SWAP1
0x317 PUSH1 0x0
0x319 SWAP1
0x31a DUP3
0x31b BALANCE
0x31c DUP5
0x31d SUB
0x31e SWAP1
0x31f DUP3
0x320 DUP2
0x321 DUP2
0x322 DUP2
0x323 DUP6
0x324 DUP9
0x325 DUP4
0x326 CALL
0x327 POP
0x328 POP
0x329 POP
0x32a POP
0x32b POP
---
0x309: V292 = 0x40
0x30b: V293 = M[0x40]
0x30c: V294 = 0x1
0x30e: V295 = 0xa0
0x310: V296 = 0x2
0x312: V297 = EXP 0x2 0xa0
0x313: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V299 = AND V33 0xffffffffffffffffffffffffffffffffffffffff
0x317: V300 = 0x0
0x31b: V301 = BALANCE V299
0x31d: V302 = SUB 0x11c37937e08000 V301
0x326: V303 = CALL 0x0 V299 V302 V293 0x0 V293 0x0
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x11c37937e08000]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x11c37937e08000]

================================

Block 0x32c
[0x32c:0x334]
---
Predecessors: [0x2f5, 0x309]
Successors: [0x56]
---
0x32c JUMPDEST
0x32d POP
0x32e POP
0x32f POP
0x330 POP
0x331 POP
0x332 POP
0x333 POP
0x334 JUMP
---
0x32c: JUMPDEST 
0x334: JUMP 0x56
---
Entry stack: [V10, 0x56, V31, V33, V35, V63, V215, V219, 0x11c37937e08000]
Stack pops: 8
Stack additions: []
Exit stack: [V10]

================================

Block 0x335
[0x335:0x356]
---
Predecessors: [0x107]
Successors: [0x56]
---
0x335 JUMPDEST
0x336 PUSH1 0x2
0x338 DUP1
0x339 SLOAD
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f NOT
0x350 AND
0x351 DUP3
0x352 OR
0x353 SWAP1
0x354 SSTORE
0x355 POP
0x356 JUMP
---
0x335: JUMPDEST 
0x336: V304 = 0x2
0x339: V305 = S[0x2]
0x33a: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V307 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x350: V308 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V305
0x352: V309 = OR V86 V308
0x354: S[0x2] = V309
0x356: JUMP 0x56
---
Entry stack: [V10, 0x56, V86]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x779afe6
Entry block: 0x58
Exit block: 0x56
Body: 0x56, 0x58, 0x86, 0xe7, 0x103, 0x201, 0x206, 0x211, 0x215, 0x26d, 0x2b2, 0x2d2, 0x2f5, 0x309, 0x32c

Function 1:
Public function signature: 0x144fa6d7
Entry block: 0x107
Exit block: 0x56
Body: 0x56, 0x107, 0x124, 0x335

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0x128
Exit block: 0x1f5
Body: 0x128, 0x142, 0x1c0, 0x1d4, 0x1f5

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x146
Exit block: 0x18b
Body: 0x146, 0x18b

Function 4:
Public function signature: 0x9d76ea58
Entry block: 0x158
Exit block: 0x18b
Body: 0x158, 0x18b

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x16a
Exit block: 0x56
Body: 0x56, 0x16a, 0x187, 0x19e

Function 6:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

