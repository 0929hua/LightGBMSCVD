Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb7
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb7
0xa: JUMPI 0xb7 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xc8]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2f58015
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xc8
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2f58015
0x39: V12 = EQ V10 0x2f58015
0x3a: V13 = 0xc8
0x3d: JUMPI 0xc8 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xda]
---
0x3e DUP1
0x3f PUSH4 0x27e235e3
0x44 EQ
0x45 PUSH2 0xda
0x48 JUMPI
---
0x3f: V14 = 0x27e235e3
0x44: V15 = EQ 0x27e235e3 V10
0x45: V16 = 0xda
0x48: JUMPI 0xda V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x108]
---
0x49 DUP1
0x4a PUSH4 0x3ccfd60b
0x4f EQ
0x50 PUSH2 0x108
0x53 JUMPI
---
0x4a: V17 = 0x3ccfd60b
0x4f: V18 = EQ 0x3ccfd60b V10
0x50: V19 = 0x108
0x53: JUMPI 0x108 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x11a]
---
0x54 DUP1
0x55 PUSH4 0x434f5f27
0x5a EQ
0x5b PUSH2 0x11a
0x5e JUMPI
---
0x55: V20 = 0x434f5f27
0x5a: V21 = EQ 0x434f5f27 V10
0x5b: V22 = 0x11a
0x5e: JUMPI 0x11a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x14a]
---
0x5f DUP1
0x60 PUSH4 0x5259347d
0x65 EQ
0x66 PUSH2 0x14a
0x69 JUMPI
---
0x60: V23 = 0x5259347d
0x65: V24 = EQ 0x5259347d V10
0x66: V25 = 0x14a
0x69: JUMPI 0x14a V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x154]
---
0x6a DUP1
0x6b PUSH4 0x62f5ed61
0x70 EQ
0x71 PUSH2 0x154
0x74 JUMPI
---
0x6b: V26 = 0x62f5ed61
0x70: V27 = EQ 0x62f5ed61 V10
0x71: V28 = 0x154
0x74: JUMPI 0x154 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x15e]
---
0x75 DUP1
0x76 PUSH4 0x6360fc3f
0x7b EQ
0x7c PUSH2 0x15e
0x7f JUMPI
---
0x76: V29 = 0x6360fc3f
0x7b: V30 = EQ 0x6360fc3f V10
0x7c: V31 = 0x15e
0x7f: JUMPI 0x15e V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x182]
---
0x80 DUP1
0x81 PUSH4 0x70144f8f
0x86 EQ
0x87 PUSH2 0x182
0x8a JUMPI
---
0x81: V32 = 0x70144f8f
0x86: V33 = EQ 0x70144f8f V10
0x87: V34 = 0x182
0x8a: JUMPI 0x182 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x194]
---
0x8b DUP1
0x8c PUSH4 0x943dfef1
0x91 EQ
0x92 PUSH2 0x194
0x95 JUMPI
---
0x8c: V35 = 0x943dfef1
0x91: V36 = EQ 0x943dfef1 V10
0x92: V37 = 0x194
0x95: JUMPI 0x194 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x1b6]
---
0x96 DUP1
0x97 PUSH4 0xa089feea
0x9c EQ
0x9d PUSH2 0x1b6
0xa0 JUMPI
---
0x97: V38 = 0xa089feea
0x9c: V39 = EQ 0xa089feea V10
0x9d: V40 = 0x1b6
0xa0: JUMPI 0x1b6 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x1da]
---
0xa1 DUP1
0xa2 PUSH4 0xc3dac9a1
0xa7 EQ
0xa8 PUSH2 0x1da
0xab JUMPI
---
0xa2: V41 = 0xc3dac9a1
0xa7: V42 = EQ 0xc3dac9a1 V10
0xa8: V43 = 0x1da
0xab: JUMPI 0x1da V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x1fc]
---
0xac DUP1
0xad PUSH4 0xfc0c546a
0xb2 EQ
0xb3 PUSH2 0x1fc
0xb6 JUMPI
---
0xad: V44 = 0xfc0c546a
0xb2: V45 = EQ 0xfc0c546a V10
0xb3: V46 = 0x1fc
0xb6: JUMPI 0x1fc V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0x0, 0xac]
Successors: [0xbb]
---
0xb7 JUMPDEST
0xb8 PUSH2 0xc6
---
0xb7: JUMPDEST 
0xb8: V47 = 0xc6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0xb7]
Successors: [0x228]
---
0xbb JUMPDEST
0xbc PUSH2 0xc3
0xbf PUSH2 0x228
0xc2 JUMP
---
0xbb: JUMPDEST 
0xbc: V48 = 0xc3
0xbf: V49 = 0x228
0xc2: JUMP 0x228
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V10, 0xc6, 0xc3]

================================

Block 0xc3
[0xc3:0xc3]
---
Predecessors: [0xc4, 0x375, 0x3bc, 0x3ca, 0x470]
Successors: [0xc4]
---
0xc3 JUMPDEST
---
0xc3: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0xc3]
Successors: [0xc3, 0xc6]
---
0xc4 JUMPDEST
0xc5 JUMP
---
0xc4: JUMPDEST 
0xc5: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xc6
[0xc6:0xc7]
---
Predecessors: [0xc4, 0x3bc, 0x687, 0x6e8, 0x71d]
Successors: []
---
0xc6 JUMPDEST
0xc7 STOP
---
0xc6: JUMPDEST 
0xc7: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0xc8
[0xc8:0xce]
---
Predecessors: [0xb]
Successors: [0xcf, 0xd0]
---
0xc8 JUMPDEST
0xc9 CALLVALUE
0xca ISZERO
0xcb PUSH2 0xd0
0xce JUMPI
---
0xc8: JUMPDEST 
0xc9: V50 = CALLVALUE
0xca: V51 = ISZERO V50
0xcb: V52 = 0xd0
0xce: JUMPI 0xd0 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xcf]
---
Predecessors: [0xc8]
Successors: []
---
0xcf INVALID
---
0xcf: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd0
[0xd0:0xd7]
---
Predecessors: [0xc8]
Successors: [0x3be]
---
0xd0 JUMPDEST
0xd1 PUSH2 0xc6
0xd4 PUSH2 0x3be
0xd7 JUMP
---
0xd0: JUMPDEST 
0xd1: V53 = 0xc6
0xd4: V54 = 0x3be
0xd7: JUMP 0x3be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0xd8
[0xd8:0xd9]
---
Predecessors: []
Successors: []
---
0xd8 JUMPDEST
0xd9 STOP
---
0xd8: JUMPDEST 
0xd9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xda
[0xda:0xe0]
---
Predecessors: [0x3e]
Successors: [0xe1, 0xe2]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc ISZERO
0xdd PUSH2 0xe2
0xe0 JUMPI
---
0xda: JUMPDEST 
0xdb: V55 = CALLVALUE
0xdc: V56 = ISZERO V55
0xdd: V57 = 0xe2
0xe0: JUMPI 0xe2 V56
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe1
[0xe1:0xe1]
---
Predecessors: [0xda]
Successors: []
---
0xe1 INVALID
---
0xe1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe2
[0xe2:0xf5]
---
Predecessors: [0xda]
Successors: [0x4a5]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xf6
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee PUSH1 0x4
0xf0 CALLDATALOAD
0xf1 AND
0xf2 PUSH2 0x4a5
0xf5 JUMP
---
0xe2: JUMPDEST 
0xe3: V58 = 0xf6
0xe6: V59 = 0x1
0xe8: V60 = 0xa0
0xea: V61 = 0x2
0xec: V62 = EXP 0x2 0xa0
0xed: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V64 = 0x4
0xf0: V65 = CALLDATALOAD 0x4
0xf1: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V67 = 0x4a5
0xf5: JUMP 0x4a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf6, V66]
Exit stack: [V10, 0xf6, V66]

================================

Block 0xf6
[0xf6:0x107]
---
Predecessors: [0x4a5, 0x71f, 0x72e]
Successors: []
---
0xf6 JUMPDEST
0xf7 PUSH1 0x40
0xf9 DUP1
0xfa MLOAD
0xfb SWAP2
0xfc DUP3
0xfd MSTORE
0xfe MLOAD
0xff SWAP1
0x100 DUP2
0x101 SWAP1
0x102 SUB
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP1
0x107 RETURN
---
0xf6: JUMPDEST 
0xf7: V68 = 0x40
0xfa: V69 = M[0x40]
0xfd: M[V69] = S0
0xfe: V70 = M[0x40]
0x102: V71 = SUB V69 V70
0x103: V72 = 0x20
0x105: V73 = ADD 0x20 V71
0x107: RETURN V70 V73
---
Entry stack: [V10, 0xf6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf6]

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x49]
Successors: [0x10f, 0x110]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x110
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V74 = CALLVALUE
0x10a: V75 = ISZERO V74
0x10b: V76 = 0x110
0x10e: JUMPI 0x110 V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x10f]
---
Predecessors: [0x108]
Successors: []
---
0x10f INVALID
---
0x10f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x108]
Successors: [0x4b7]
---
0x110 JUMPDEST
0x111 PUSH2 0xc6
0x114 PUSH2 0x4b7
0x117 JUMP
---
0x110: JUMPDEST 
0x111: V77 = 0xc6
0x114: V78 = 0x4b7
0x117: JUMP 0x4b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x118
[0x118:0x119]
---
Predecessors: []
Successors: []
---
0x118 JUMPDEST
0x119 STOP
---
0x118: JUMPDEST 
0x119: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11a
[0x11a:0x120]
---
Predecessors: [0x54]
Successors: [0x121, 0x122]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c ISZERO
0x11d PUSH2 0x122
0x120 JUMPI
---
0x11a: JUMPDEST 
0x11b: V79 = CALLVALUE
0x11c: V80 = ISZERO V79
0x11d: V81 = 0x122
0x120: JUMPI 0x122 V80
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x121
[0x121:0x121]
---
Predecessors: [0x11a]
Successors: []
---
0x121 INVALID
---
0x121: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x122
[0x122:0x135]
---
Predecessors: [0x11a]
Successors: [0x68c]
---
0x122 JUMPDEST
0x123 PUSH2 0x136
0x126 PUSH1 0x1
0x128 PUSH1 0xa0
0x12a PUSH1 0x2
0x12c EXP
0x12d SUB
0x12e PUSH1 0x4
0x130 CALLDATALOAD
0x131 AND
0x132 PUSH2 0x68c
0x135 JUMP
---
0x122: JUMPDEST 
0x123: V82 = 0x136
0x126: V83 = 0x1
0x128: V84 = 0xa0
0x12a: V85 = 0x2
0x12c: V86 = EXP 0x2 0xa0
0x12d: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e: V88 = 0x4
0x130: V89 = CALLDATALOAD 0x4
0x131: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x132: V91 = 0x68c
0x135: JUMP 0x68c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x136, V90]
Exit stack: [V10, 0x136, V90]

================================

Block 0x136
[0x136:0x149]
---
Predecessors: [0x68c, 0x6ea, 0x725]
Successors: []
---
0x136 JUMPDEST
0x137 PUSH1 0x40
0x139 DUP1
0x13a MLOAD
0x13b SWAP2
0x13c ISZERO
0x13d ISZERO
0x13e DUP3
0x13f MSTORE
0x140 MLOAD
0x141 SWAP1
0x142 DUP2
0x143 SWAP1
0x144 SUB
0x145 PUSH1 0x20
0x147 ADD
0x148 SWAP1
0x149 RETURN
---
0x136: JUMPDEST 
0x137: V92 = 0x40
0x13a: V93 = M[0x40]
0x13c: V94 = ISZERO S0
0x13d: V95 = ISZERO V94
0x13f: M[V93] = V95
0x140: V96 = M[0x40]
0x144: V97 = SUB V93 V96
0x145: V98 = 0x20
0x147: V99 = ADD 0x20 V97
0x149: RETURN V96 V99
---
Entry stack: [V10, 0x136, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x136]

================================

Block 0x14a
[0x14a:0x151]
---
Predecessors: [0x5f]
Successors: [0x228]
---
0x14a JUMPDEST
0x14b PUSH2 0xc6
0x14e PUSH2 0x228
0x151 JUMP
---
0x14a: JUMPDEST 
0x14b: V100 = 0xc6
0x14e: V101 = 0x228
0x151: JUMP 0x228
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x152
[0x152:0x153]
---
Predecessors: []
Successors: []
---
0x152 JUMPDEST
0x153 STOP
---
0x152: JUMPDEST 
0x153: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x154
[0x154:0x15b]
---
Predecessors: [0x6a]
Successors: [0x6a1]
---
0x154 JUMPDEST
0x155 PUSH2 0xc6
0x158 PUSH2 0x6a1
0x15b JUMP
---
0x154: JUMPDEST 
0x155: V102 = 0xc6
0x158: V103 = 0x6a1
0x15b: JUMP 0x6a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x15c
[0x15c:0x15d]
---
Predecessors: []
Successors: []
---
0x15c JUMPDEST
0x15d STOP
---
0x15c: JUMPDEST 
0x15d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15e
[0x15e:0x164]
---
Predecessors: [0x75]
Successors: [0x165, 0x166]
---
0x15e JUMPDEST
0x15f CALLVALUE
0x160 ISZERO
0x161 PUSH2 0x166
0x164 JUMPI
---
0x15e: JUMPDEST 
0x15f: V104 = CALLVALUE
0x160: V105 = ISZERO V104
0x161: V106 = 0x166
0x164: JUMPI 0x166 V105
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x165
[0x165:0x165]
---
Predecessors: [0x15e]
Successors: []
---
0x165 INVALID
---
0x165: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x166
[0x166:0x16d]
---
Predecessors: [0x15e]
Successors: [0x6ea]
---
0x166 JUMPDEST
0x167 PUSH2 0x136
0x16a PUSH2 0x6ea
0x16d JUMP
---
0x166: JUMPDEST 
0x167: V107 = 0x136
0x16a: V108 = 0x6ea
0x16d: JUMP 0x6ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x136]
Exit stack: [V10, 0x136]

================================

Block 0x16e
[0x16e:0x181]
---
Predecessors: []
Successors: []
---
0x16e JUMPDEST
0x16f PUSH1 0x40
0x171 DUP1
0x172 MLOAD
0x173 SWAP2
0x174 ISZERO
0x175 ISZERO
0x176 DUP3
0x177 MSTORE
0x178 MLOAD
0x179 SWAP1
0x17a DUP2
0x17b SWAP1
0x17c SUB
0x17d PUSH1 0x20
0x17f ADD
0x180 SWAP1
0x181 RETURN
---
0x16e: JUMPDEST 
0x16f: V109 = 0x40
0x172: V110 = M[0x40]
0x174: V111 = ISZERO S0
0x175: V112 = ISZERO V111
0x177: M[V110] = V112
0x178: V113 = M[0x40]
0x17c: V114 = SUB V110 V113
0x17d: V115 = 0x20
0x17f: V116 = ADD 0x20 V114
0x181: RETURN V113 V116
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x182
[0x182:0x188]
---
Predecessors: [0x80]
Successors: [0x189, 0x18a]
---
0x182 JUMPDEST
0x183 CALLVALUE
0x184 ISZERO
0x185 PUSH2 0x18a
0x188 JUMPI
---
0x182: JUMPDEST 
0x183: V117 = CALLVALUE
0x184: V118 = ISZERO V117
0x185: V119 = 0x18a
0x188: JUMPI 0x18a V118
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x189
[0x189:0x189]
---
Predecessors: [0x182]
Successors: []
---
0x189 INVALID
---
0x189: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18a
[0x18a:0x191]
---
Predecessors: [0x182]
Successors: [0x6f3]
---
0x18a JUMPDEST
0x18b PUSH2 0xc6
0x18e PUSH2 0x6f3
0x191 JUMP
---
0x18a: JUMPDEST 
0x18b: V120 = 0xc6
0x18e: V121 = 0x6f3
0x191: JUMP 0x6f3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x192
[0x192:0x193]
---
Predecessors: []
Successors: []
---
0x192 JUMPDEST
0x193 STOP
---
0x192: JUMPDEST 
0x193: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x194
[0x194:0x19a]
---
Predecessors: [0x8b]
Successors: [0x19b, 0x19c]
---
0x194 JUMPDEST
0x195 CALLVALUE
0x196 ISZERO
0x197 PUSH2 0x19c
0x19a JUMPI
---
0x194: JUMPDEST 
0x195: V122 = CALLVALUE
0x196: V123 = ISZERO V122
0x197: V124 = 0x19c
0x19a: JUMPI 0x19c V123
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19b
[0x19b:0x19b]
---
Predecessors: [0x194]
Successors: []
---
0x19b INVALID
---
0x19b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19c
[0x19c:0x1a3]
---
Predecessors: [0x194]
Successors: [0x71f]
---
0x19c JUMPDEST
0x19d PUSH2 0xf6
0x1a0 PUSH2 0x71f
0x1a3 JUMP
---
0x19c: JUMPDEST 
0x19d: V125 = 0xf6
0x1a0: V126 = 0x71f
0x1a3: JUMP 0x71f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf6]
Exit stack: [V10, 0xf6]

================================

Block 0x1a4
[0x1a4:0x1b5]
---
Predecessors: []
Successors: []
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x40
0x1a7 DUP1
0x1a8 MLOAD
0x1a9 SWAP2
0x1aa DUP3
0x1ab MSTORE
0x1ac MLOAD
0x1ad SWAP1
0x1ae DUP2
0x1af SWAP1
0x1b0 SUB
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 SWAP1
0x1b5 RETURN
---
0x1a4: JUMPDEST 
0x1a5: V127 = 0x40
0x1a8: V128 = M[0x40]
0x1ab: M[V128] = S0
0x1ac: V129 = M[0x40]
0x1b0: V130 = SUB V128 V129
0x1b1: V131 = 0x20
0x1b3: V132 = ADD 0x20 V130
0x1b5: RETURN V129 V132
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b6
[0x1b6:0x1bc]
---
Predecessors: [0x96]
Successors: [0x1bd, 0x1be]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 ISZERO
0x1b9 PUSH2 0x1be
0x1bc JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V133 = CALLVALUE
0x1b8: V134 = ISZERO V133
0x1b9: V135 = 0x1be
0x1bc: JUMPI 0x1be V134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bd
[0x1bd:0x1bd]
---
Predecessors: [0x1b6]
Successors: []
---
0x1bd INVALID
---
0x1bd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1be
[0x1be:0x1c5]
---
Predecessors: [0x1b6]
Successors: [0x725]
---
0x1be JUMPDEST
0x1bf PUSH2 0x136
0x1c2 PUSH2 0x725
0x1c5 JUMP
---
0x1be: JUMPDEST 
0x1bf: V136 = 0x136
0x1c2: V137 = 0x725
0x1c5: JUMP 0x725
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x136]
Exit stack: [V10, 0x136]

================================

Block 0x1c6
[0x1c6:0x1d9]
---
Predecessors: []
Successors: []
---
0x1c6 JUMPDEST
0x1c7 PUSH1 0x40
0x1c9 DUP1
0x1ca MLOAD
0x1cb SWAP2
0x1cc ISZERO
0x1cd ISZERO
0x1ce DUP3
0x1cf MSTORE
0x1d0 MLOAD
0x1d1 SWAP1
0x1d2 DUP2
0x1d3 SWAP1
0x1d4 SUB
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP1
0x1d9 RETURN
---
0x1c6: JUMPDEST 
0x1c7: V138 = 0x40
0x1ca: V139 = M[0x40]
0x1cc: V140 = ISZERO S0
0x1cd: V141 = ISZERO V140
0x1cf: M[V139] = V141
0x1d0: V142 = M[0x40]
0x1d4: V143 = SUB V139 V142
0x1d5: V144 = 0x20
0x1d7: V145 = ADD 0x20 V143
0x1d9: RETURN V142 V145
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1da
[0x1da:0x1e0]
---
Predecessors: [0xa1]
Successors: [0x1e1, 0x1e2]
---
0x1da JUMPDEST
0x1db CALLVALUE
0x1dc ISZERO
0x1dd PUSH2 0x1e2
0x1e0 JUMPI
---
0x1da: JUMPDEST 
0x1db: V146 = CALLVALUE
0x1dc: V147 = ISZERO V146
0x1dd: V148 = 0x1e2
0x1e0: JUMPI 0x1e2 V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e1
[0x1e1:0x1e1]
---
Predecessors: [0x1da]
Successors: []
---
0x1e1 INVALID
---
0x1e1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e2
[0x1e2:0x1e9]
---
Predecessors: [0x1da]
Successors: [0x72e]
---
0x1e2 JUMPDEST
0x1e3 PUSH2 0xf6
0x1e6 PUSH2 0x72e
0x1e9 JUMP
---
0x1e2: JUMPDEST 
0x1e3: V149 = 0xf6
0x1e6: V150 = 0x72e
0x1e9: JUMP 0x72e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf6]
Exit stack: [V10, 0xf6]

================================

Block 0x1ea
[0x1ea:0x1fb]
---
Predecessors: []
Successors: []
---
0x1ea JUMPDEST
0x1eb PUSH1 0x40
0x1ed DUP1
0x1ee MLOAD
0x1ef SWAP2
0x1f0 DUP3
0x1f1 MSTORE
0x1f2 MLOAD
0x1f3 SWAP1
0x1f4 DUP2
0x1f5 SWAP1
0x1f6 SUB
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP1
0x1fb RETURN
---
0x1ea: JUMPDEST 
0x1eb: V151 = 0x40
0x1ee: V152 = M[0x40]
0x1f1: M[V152] = S0
0x1f2: V153 = M[0x40]
0x1f6: V154 = SUB V152 V153
0x1f7: V155 = 0x20
0x1f9: V156 = ADD 0x20 V154
0x1fb: RETURN V153 V156
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fc
[0x1fc:0x202]
---
Predecessors: [0xac]
Successors: [0x203, 0x204]
---
0x1fc JUMPDEST
0x1fd CALLVALUE
0x1fe ISZERO
0x1ff PUSH2 0x204
0x202 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V157 = CALLVALUE
0x1fe: V158 = ISZERO V157
0x1ff: V159 = 0x204
0x202: JUMPI 0x204 V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x203
[0x203:0x203]
---
Predecessors: [0x1fc]
Successors: []
---
0x203 INVALID
---
0x203: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x204
[0x204:0x20b]
---
Predecessors: [0x1fc]
Successors: [0x734]
---
0x204 JUMPDEST
0x205 PUSH2 0x20c
0x208 PUSH2 0x734
0x20b JUMP
---
0x204: JUMPDEST 
0x205: V160 = 0x20c
0x208: V161 = 0x734
0x20b: JUMP 0x734
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20c]
Exit stack: [V10, 0x20c]

================================

Block 0x20c
[0x20c:0x227]
---
Predecessors: [0x734]
Successors: []
---
0x20c JUMPDEST
0x20d PUSH1 0x40
0x20f DUP1
0x210 MLOAD
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 SWAP1
0x21a SWAP3
0x21b AND
0x21c DUP3
0x21d MSTORE
0x21e MLOAD
0x21f SWAP1
0x220 DUP2
0x221 SWAP1
0x222 SUB
0x223 PUSH1 0x20
0x225 ADD
0x226 SWAP1
0x227 RETURN
---
0x20c: JUMPDEST 
0x20d: V162 = 0x40
0x210: V163 = M[0x40]
0x211: V164 = 0x1
0x213: V165 = 0xa0
0x215: V166 = 0x2
0x217: V167 = EXP 0x2 0xa0
0x218: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21b: V169 = AND V620 0xffffffffffffffffffffffffffffffffffffffff
0x21d: M[V163] = V169
0x21e: V170 = M[0x40]
0x222: V171 = SUB V163 V170
0x223: V172 = 0x20
0x225: V173 = ADD 0x20 V171
0x227: RETURN V170 V173
---
Entry stack: [V10, 0x20c, V620]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x20c]

================================

Block 0x228
[0x228:0x236]
---
Predecessors: [0xbb, 0x14a]
Successors: [0x237, 0x37a]
---
0x228 JUMPDEST
0x229 PUSH7 0x38d7ea4c68000
0x231 CALLVALUE
0x232 GT
0x233 PUSH2 0x37a
0x236 JUMPI
---
0x228: JUMPDEST 
0x229: V174 = 0x38d7ea4c68000
0x231: V175 = CALLVALUE
0x232: V176 = GT V175 0x38d7ea4c68000
0x233: V177 = 0x37a
0x236: JUMPI 0x37a V176
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x237
[0x237:0x242]
---
Predecessors: [0x228]
Successors: [0x243, 0x33c]
---
0x237 PUSH1 0x3
0x239 SLOAD
0x23a PUSH1 0xff
0x23c AND
0x23d DUP1
0x23e ISZERO
0x23f PUSH2 0x33c
0x242 JUMPI
---
0x237: V178 = 0x3
0x239: V179 = S[0x3]
0x23a: V180 = 0xff
0x23c: V181 = AND 0xff V179
0x23e: V182 = ISZERO V181
0x23f: V183 = 0x33c
0x242: JUMPI 0x33c V182
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: [V181]
Exit stack: [V10, S1, {0xc3, 0xc6}, V181]

================================

Block 0x243
[0x243:0x2a5]
---
Predecessors: [0x237]
Successors: [0x2a6, 0x2a7]
---
0x243 POP
0x244 PUSH1 0x7
0x246 SLOAD
0x247 PUSH1 0x40
0x249 DUP1
0x24a MLOAD
0x24b PUSH1 0x0
0x24d PUSH1 0x20
0x24f SWAP2
0x250 DUP3
0x251 ADD
0x252 DUP2
0x253 SWAP1
0x254 MSTORE
0x255 DUP3
0x256 MLOAD
0x257 PUSH32 0xec81b48300000000000000000000000000000000000000000000000000000000
0x278 DUP2
0x279 MSTORE
0x27a SWAP3
0x27b MLOAD
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 SWAP1
0x285 SWAP5
0x286 AND
0x287 SWAP4
0x288 PUSH4 0xec81b483
0x28d SWAP4
0x28e PUSH1 0x4
0x290 DUP1
0x291 DUP3
0x292 ADD
0x293 SWAP5
0x294 SWAP4
0x295 SWAP2
0x296 DUP4
0x297 SWAP1
0x298 SUB
0x299 ADD
0x29a SWAP1
0x29b DUP3
0x29c SWAP1
0x29d DUP8
0x29e DUP1
0x29f EXTCODESIZE
0x2a0 ISZERO
0x2a1 ISZERO
0x2a2 PUSH2 0x2a7
0x2a5 JUMPI
---
0x244: V184 = 0x7
0x246: V185 = S[0x7]
0x247: V186 = 0x40
0x24a: V187 = M[0x40]
0x24b: V188 = 0x0
0x24d: V189 = 0x20
0x251: V190 = ADD 0x20 V187
0x254: M[V190] = 0x0
0x256: V191 = M[0x40]
0x257: V192 = 0xec81b48300000000000000000000000000000000000000000000000000000000
0x279: M[V191] = 0xec81b48300000000000000000000000000000000000000000000000000000000
0x27b: V193 = M[0x40]
0x27c: V194 = 0x1
0x27e: V195 = 0xa0
0x280: V196 = 0x2
0x282: V197 = EXP 0x2 0xa0
0x283: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V199 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x288: V200 = 0xec81b483
0x28e: V201 = 0x4
0x292: V202 = ADD V191 0x4
0x298: V203 = SUB V191 V193
0x299: V204 = ADD V203 0x4
0x29f: V205 = EXTCODESIZE V199
0x2a0: V206 = ISZERO V205
0x2a1: V207 = ISZERO V206
0x2a2: V208 = 0x2a7
0x2a5: JUMPI 0x2a7 V207
---
Entry stack: [V10, S2, {0xc3, 0xc6}, V181]
Stack pops: 1
Stack additions: [V199, 0xec81b483, V202, 0x20, V193, V204, V193, 0x0, V199]
Exit stack: [V10, S2, {0xc3, 0xc6}, V199, 0xec81b483, V202, 0x20, V193, V204, V193, 0x0, V199]

================================

Block 0x2a6
[0x2a6:0x2a6]
---
Predecessors: [0x243]
Successors: []
---
0x2a6 INVALID
---
0x2a6: INVALID 
---
Entry stack: [V10, S10, {0xc3, 0xc6}, V199, 0xec81b483, V202, 0x20, V193, V204, V193, 0x0, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc3, 0xc6}, V199, 0xec81b483, V202, 0x20, V193, V204, V193, 0x0, V199]

================================

Block 0x2a7
[0x2a7:0x2b3]
---
Predecessors: [0x243]
Successors: [0x2b4, 0x2b5]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0x2c6
0x2ab GAS
0x2ac SUB
0x2ad CALL
0x2ae ISZERO
0x2af ISZERO
0x2b0 PUSH2 0x2b5
0x2b3 JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V209 = 0x2c6
0x2ab: V210 = GAS
0x2ac: V211 = SUB V210 0x2c6
0x2ad: V212 = CALL V211 V199 0x0 V193 V204 V193 0x20
0x2ae: V213 = ISZERO V212
0x2af: V214 = ISZERO V213
0x2b0: V215 = 0x2b5
0x2b3: JUMPI 0x2b5 V214
---
Entry stack: [V10, S10, {0xc3, 0xc6}, V199, 0xec81b483, V202, 0x20, V193, V204, V193, 0x0, V199]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S10, {0xc3, 0xc6}, V199, 0xec81b483, V202]

================================

Block 0x2b4
[0x2b4:0x2b4]
---
Predecessors: [0x2a7]
Successors: []
---
0x2b4 INVALID
---
0x2b4: INVALID 
---
Entry stack: [V10, S4, {0xc3, 0xc6}, V199, 0xec81b483, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xc3, 0xc6}, V199, 0xec81b483, V202]

================================

Block 0x2b5
[0x2b5:0x320]
---
Predecessors: [0x2a7]
Successors: [0x321, 0x322]
---
0x2b5 JUMPDEST
0x2b6 POP
0x2b7 POP
0x2b8 PUSH1 0x40
0x2ba DUP1
0x2bb MLOAD
0x2bc DUP1
0x2bd MLOAD
0x2be PUSH1 0x7
0x2c0 SLOAD
0x2c1 PUSH1 0x0
0x2c3 PUSH1 0x20
0x2c5 SWAP4
0x2c6 DUP5
0x2c7 ADD
0x2c8 DUP2
0x2c9 SWAP1
0x2ca MSTORE
0x2cb DUP5
0x2cc MLOAD
0x2cd PUSH32 0xa4625af00000000000000000000000000000000000000000000000000000000
0x2ee DUP2
0x2ef MSTORE
0x2f0 SWAP5
0x2f1 MLOAD
0x2f2 SWAP3
0x2f3 SWAP6
0x2f4 POP
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd SWAP1
0x2fe SWAP2
0x2ff AND
0x300 SWAP4
0x301 PUSH4 0xa4625af
0x306 SWAP4
0x307 PUSH1 0x4
0x309 DUP1
0x30a DUP4
0x30b ADD
0x30c SWAP5
0x30d SWAP2
0x30e SWAP4
0x30f SWAP2
0x310 SWAP3
0x311 DUP4
0x312 SWAP1
0x313 SUB
0x314 ADD
0x315 SWAP1
0x316 DUP3
0x317 SWAP1
0x318 DUP8
0x319 DUP1
0x31a EXTCODESIZE
0x31b ISZERO
0x31c ISZERO
0x31d PUSH2 0x322
0x320 JUMPI
---
0x2b5: JUMPDEST 
0x2b8: V216 = 0x40
0x2bb: V217 = M[0x40]
0x2bd: V218 = M[V217]
0x2be: V219 = 0x7
0x2c0: V220 = S[0x7]
0x2c1: V221 = 0x0
0x2c3: V222 = 0x20
0x2c7: V223 = ADD 0x20 V217
0x2ca: M[V223] = 0x0
0x2cc: V224 = M[0x40]
0x2cd: V225 = 0xa4625af00000000000000000000000000000000000000000000000000000000
0x2ef: M[V224] = 0xa4625af00000000000000000000000000000000000000000000000000000000
0x2f1: V226 = M[0x40]
0x2f5: V227 = 0x1
0x2f7: V228 = 0xa0
0x2f9: V229 = 0x2
0x2fb: V230 = EXP 0x2 0xa0
0x2fc: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V232 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x301: V233 = 0xa4625af
0x307: V234 = 0x4
0x30b: V235 = ADD V224 0x4
0x313: V236 = SUB V224 V226
0x314: V237 = ADD V236 0x4
0x31a: V238 = EXTCODESIZE V232
0x31b: V239 = ISZERO V238
0x31c: V240 = ISZERO V239
0x31d: V241 = 0x322
0x320: JUMPI 0x322 V240
---
Entry stack: [V10, S4, {0xc3, 0xc6}, V199, 0xec81b483, V202]
Stack pops: 3
Stack additions: [V218, V232, 0xa4625af, V235, 0x20, V226, V237, V226, 0x0, V232]
Exit stack: [V10, S4, {0xc3, 0xc6}, V218, V232, 0xa4625af, V235, 0x20, V226, V237, V226, 0x0, V232]

================================

Block 0x321
[0x321:0x321]
---
Predecessors: [0x2b5]
Successors: []
---
0x321 INVALID
---
0x321: INVALID 
---
Entry stack: [V10, S11, {0xc3, 0xc6}, V218, V232, 0xa4625af, V235, 0x20, V226, V237, V226, 0x0, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc3, 0xc6}, V218, V232, 0xa4625af, V235, 0x20, V226, V237, V226, 0x0, V232]

================================

Block 0x322
[0x322:0x32e]
---
Predecessors: [0x2b5]
Successors: [0x32f, 0x330]
---
0x322 JUMPDEST
0x323 PUSH2 0x2c6
0x326 GAS
0x327 SUB
0x328 CALL
0x329 ISZERO
0x32a ISZERO
0x32b PUSH2 0x330
0x32e JUMPI
---
0x322: JUMPDEST 
0x323: V242 = 0x2c6
0x326: V243 = GAS
0x327: V244 = SUB V243 0x2c6
0x328: V245 = CALL V244 V232 0x0 V226 V237 V226 0x20
0x329: V246 = ISZERO V245
0x32a: V247 = ISZERO V246
0x32b: V248 = 0x330
0x32e: JUMPI 0x330 V247
---
Entry stack: [V10, S11, {0xc3, 0xc6}, V218, V232, 0xa4625af, V235, 0x20, V226, V237, V226, 0x0, V232]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S11, {0xc3, 0xc6}, V218, V232, 0xa4625af, V235]

================================

Block 0x32f
[0x32f:0x32f]
---
Predecessors: [0x322]
Successors: []
---
0x32f INVALID
---
0x32f: INVALID 
---
Entry stack: [V10, S5, {0xc3, 0xc6}, V218, V232, 0xa4625af, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0xc3, 0xc6}, V218, V232, 0xa4625af, V235]

================================

Block 0x330
[0x330:0x33b]
---
Predecessors: [0x322]
Successors: [0x33c]
---
0x330 JUMPDEST
0x331 POP
0x332 POP
0x333 POP
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 MLOAD
0x339 SWAP1
0x33a POP
0x33b LT
---
0x330: JUMPDEST 
0x334: V249 = 0x40
0x336: V250 = M[0x40]
0x338: V251 = M[V250]
0x33b: V252 = LT V251 V218
---
Entry stack: [V10, S5, {0xc3, 0xc6}, V218, V232, 0xa4625af, V235]
Stack pops: 4
Stack additions: [V252]
Exit stack: [V10, S5, {0xc3, 0xc6}, V252]

================================

Block 0x33c
[0x33c:0x341]
---
Predecessors: [0x237, 0x330]
Successors: [0x342, 0x36c]
---
0x33c JUMPDEST
0x33d ISZERO
0x33e PUSH2 0x36c
0x341 JUMPI
---
0x33c: JUMPDEST 
0x33d: V253 = ISZERO S0
0x33e: V254 = 0x36c
0x341: JUMPI 0x36c V253
---
Entry stack: [V10, S2, {0xc3, 0xc6}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, {0xc3, 0xc6}]

================================

Block 0x342
[0x342:0x36b]
---
Predecessors: [0x33c]
Successors: [0x374]
---
0x342 PUSH1 0x1
0x344 PUSH1 0xa0
0x346 PUSH1 0x2
0x348 EXP
0x349 SUB
0x34a CALLER
0x34b AND
0x34c PUSH1 0x0
0x34e SWAP1
0x34f DUP2
0x350 MSTORE
0x351 PUSH1 0x1
0x353 PUSH1 0x20
0x355 DUP2
0x356 SWAP1
0x357 MSTORE
0x358 PUSH1 0x40
0x35a SWAP1
0x35b SWAP2
0x35c SHA3
0x35d DUP1
0x35e SLOAD
0x35f PUSH1 0xff
0x361 NOT
0x362 AND
0x363 SWAP1
0x364 SWAP2
0x365 OR
0x366 SWAP1
0x367 SSTORE
0x368 PUSH2 0x374
0x36b JUMP
---
0x342: V255 = 0x1
0x344: V256 = 0xa0
0x346: V257 = 0x2
0x348: V258 = EXP 0x2 0xa0
0x349: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34a: V260 = CALLER
0x34b: V261 = AND V260 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V262 = 0x0
0x350: M[0x0] = V261
0x351: V263 = 0x1
0x353: V264 = 0x20
0x357: M[0x20] = 0x1
0x358: V265 = 0x40
0x35c: V266 = SHA3 0x0 0x40
0x35e: V267 = S[V266]
0x35f: V268 = 0xff
0x361: V269 = NOT 0xff
0x362: V270 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V267
0x365: V271 = OR 0x1 V270
0x367: S[V266] = V271
0x368: V272 = 0x374
0x36b: JUMP 0x374
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x36c
[0x36c:0x373]
---
Predecessors: [0x33c]
Successors: [0x4b7]
---
0x36c JUMPDEST
0x36d PUSH2 0x374
0x370 PUSH2 0x4b7
0x373 JUMP
---
0x36c: JUMPDEST 
0x36d: V273 = 0x374
0x370: V274 = 0x4b7
0x373: JUMP 0x4b7
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: [0x374]
Exit stack: [V10, S1, {0xc3, 0xc6}, 0x374]

================================

Block 0x374
[0x374:0x374]
---
Predecessors: [0x342, 0x687]
Successors: [0x375]
---
0x374 JUMPDEST
---
0x374: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x375
[0x375:0x379]
---
Predecessors: [0x374]
Successors: [0xc3]
---
0x375 JUMPDEST
0x376 PUSH2 0xc3
0x379 JUMP
---
0x375: JUMPDEST 
0x376: V275 = 0xc3
0x379: JUMP 0xc3
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x37a
[0x37a:0x385]
---
Predecessors: [0x228]
Successors: [0x386, 0x38b]
---
0x37a JUMPDEST
0x37b PUSH1 0x5
0x37d SLOAD
0x37e PUSH1 0xff
0x380 AND
0x381 ISZERO
0x382 PUSH2 0x38b
0x385 JUMPI
---
0x37a: JUMPDEST 
0x37b: V276 = 0x5
0x37d: V277 = S[0x5]
0x37e: V278 = 0xff
0x380: V279 = AND 0xff V277
0x381: V280 = ISZERO V279
0x382: V281 = 0x38b
0x385: JUMPI 0x38b V280
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x386
[0x386:0x38a]
---
Predecessors: [0x37a]
Successors: []
---
0x386 PUSH1 0x0
0x388 PUSH1 0x0
0x38a REVERT
---
0x386: V282 = 0x0
0x388: V283 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x38b
[0x38b:0x396]
---
Predecessors: [0x37a]
Successors: [0x397, 0x39c]
---
0x38b JUMPDEST
0x38c PUSH1 0x3
0x38e SLOAD
0x38f PUSH1 0xff
0x391 AND
0x392 ISZERO
0x393 PUSH2 0x39c
0x396 JUMPI
---
0x38b: JUMPDEST 
0x38c: V284 = 0x3
0x38e: V285 = S[0x3]
0x38f: V286 = 0xff
0x391: V287 = AND 0xff V285
0x392: V288 = ISZERO V287
0x393: V289 = 0x39c
0x396: JUMPI 0x39c V288
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x397
[0x397:0x39b]
---
Predecessors: [0x38b]
Successors: []
---
0x397 PUSH1 0x0
0x399 PUSH1 0x0
0x39b REVERT
---
0x397: V290 = 0x0
0x399: V291 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x39c
[0x39c:0x3ba]
---
Predecessors: [0x38b]
Successors: [0x3bb]
---
0x39c JUMPDEST
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 CALLER
0x3a6 AND
0x3a7 PUSH1 0x0
0x3a9 SWAP1
0x3aa DUP2
0x3ab MSTORE
0x3ac PUSH1 0x20
0x3ae DUP2
0x3af SWAP1
0x3b0 MSTORE
0x3b1 PUSH1 0x40
0x3b3 SWAP1
0x3b4 SHA3
0x3b5 DUP1
0x3b6 SLOAD
0x3b7 CALLVALUE
0x3b8 ADD
0x3b9 SWAP1
0x3ba SSTORE
---
0x39c: JUMPDEST 
0x39d: V292 = 0x1
0x39f: V293 = 0xa0
0x3a1: V294 = 0x2
0x3a3: V295 = EXP 0x2 0xa0
0x3a4: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a5: V297 = CALLER
0x3a6: V298 = AND V297 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V299 = 0x0
0x3ab: M[0x0] = V298
0x3ac: V300 = 0x20
0x3b0: M[0x20] = 0x0
0x3b1: V301 = 0x40
0x3b4: V302 = SHA3 0x0 0x40
0x3b6: V303 = S[V302]
0x3b7: V304 = CALLVALUE
0x3b8: V305 = ADD V304 V303
0x3ba: S[V302] = V305
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x3bb
[0x3bb:0x3bb]
---
Predecessors: [0x39c]
Successors: [0x3bc]
---
0x3bb JUMPDEST
---
0x3bb: JUMPDEST 
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x3bc
[0x3bc:0x3bd]
---
Predecessors: [0x3bb]
Successors: [0xc3, 0xc6]
---
0x3bc JUMPDEST
0x3bd JUMP
---
0x3bc: JUMPDEST 
0x3bd: JUMP {0xc3, 0xc6}
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x3be
[0x3be:0x3c9]
---
Predecessors: [0xd0]
Successors: [0x3ca, 0x3ce]
---
0x3be JUMPDEST
0x3bf PUSH1 0x3
0x3c1 SLOAD
0x3c2 PUSH1 0xff
0x3c4 AND
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3be: JUMPDEST 
0x3bf: V306 = 0x3
0x3c1: V307 = S[0x3]
0x3c2: V308 = 0xff
0x3c4: V309 = AND 0xff V307
0x3c5: V310 = ISZERO V309
0x3c6: V311 = 0x3ce
0x3c9: JUMPI 0x3ce V310
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3be]
Successors: [0xc3]
---
0x3ca PUSH2 0xc3
0x3cd JUMP
---
0x3ca: V312 = 0xc3
0x3cd: JUMP 0xc3
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x3ce
[0x3ce:0x3d9]
---
Predecessors: [0x3be]
Successors: [0x3da, 0x3df]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x5
0x3d1 SLOAD
0x3d2 PUSH1 0xff
0x3d4 AND
0x3d5 ISZERO
0x3d6 PUSH2 0x3df
0x3d9 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V313 = 0x5
0x3d1: V314 = S[0x5]
0x3d2: V315 = 0xff
0x3d4: V316 = AND 0xff V314
0x3d5: V317 = ISZERO V316
0x3d6: V318 = 0x3df
0x3d9: JUMPI 0x3df V317
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x3da
[0x3da:0x3de]
---
Predecessors: [0x3ce]
Successors: []
---
0x3da PUSH1 0x0
0x3dc PUSH1 0x0
0x3de REVERT
---
0x3da: V319 = 0x0
0x3dc: V320 = 0x0
0x3de: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x3df
[0x3df:0x460]
---
Predecessors: [0x3ce]
Successors: [0x461, 0x462]
---
0x3df JUMPDEST
0x3e0 PUSH1 0x3
0x3e2 DUP1
0x3e3 SLOAD
0x3e4 PUSH1 0xff
0x3e6 NOT
0x3e7 AND
0x3e8 PUSH1 0x1
0x3ea OR
0x3eb SWAP1
0x3ec SSTORE
0x3ed TIMESTAMP
0x3ee PUSH1 0x4
0x3f0 SWAP1
0x3f1 DUP2
0x3f2 SSTORE
0x3f3 PUSH1 0x7
0x3f5 SLOAD
0x3f6 PUSH1 0x2
0x3f8 SLOAD
0x3f9 PUSH1 0x40
0x3fb DUP1
0x3fc MLOAD
0x3fd PUSH32 0xf48c305400000000000000000000000000000000000000000000000000000000
0x41e DUP2
0x41f MSTORE
0x420 ADDRESS
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 SWAP1
0x42a DUP2
0x42b AND
0x42c SWAP6
0x42d DUP3
0x42e ADD
0x42f DUP7
0x430 SWAP1
0x431 MSTORE
0x432 SWAP2
0x433 MLOAD
0x434 SWAP2
0x435 SWAP1
0x436 SWAP4
0x437 AND
0x438 SWAP4
0x439 PUSH4 0xf48c3054
0x43e SWAP4
0x43f SWAP1
0x440 BALANCE
0x441 SWAP3
0x442 SWAP1
0x443 SWAP3
0x444 SUB
0x445 SWAP2
0x446 PUSH1 0x24
0x448 DUP1
0x449 DUP3
0x44a ADD
0x44b SWAP3
0x44c PUSH1 0x0
0x44e SWAP3
0x44f SWAP1
0x450 SWAP2
0x451 SWAP1
0x452 DUP3
0x453 SWAP1
0x454 SUB
0x455 ADD
0x456 DUP2
0x457 DUP6
0x458 DUP9
0x459 DUP1
0x45a EXTCODESIZE
0x45b ISZERO
0x45c ISZERO
0x45d PUSH2 0x462
0x460 JUMPI
---
0x3df: JUMPDEST 
0x3e0: V321 = 0x3
0x3e3: V322 = S[0x3]
0x3e4: V323 = 0xff
0x3e6: V324 = NOT 0xff
0x3e7: V325 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V322
0x3e8: V326 = 0x1
0x3ea: V327 = OR 0x1 V325
0x3ec: S[0x3] = V327
0x3ed: V328 = TIMESTAMP
0x3ee: V329 = 0x4
0x3f2: S[0x4] = V328
0x3f3: V330 = 0x7
0x3f5: V331 = S[0x7]
0x3f6: V332 = 0x2
0x3f8: V333 = S[0x2]
0x3f9: V334 = 0x40
0x3fc: V335 = M[0x40]
0x3fd: V336 = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x41f: M[V335] = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x420: V337 = ADDRESS
0x421: V338 = 0x1
0x423: V339 = 0xa0
0x425: V340 = 0x2
0x427: V341 = EXP 0x2 0xa0
0x428: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42b: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x42e: V344 = ADD V335 0x4
0x431: M[V344] = V343
0x433: V345 = M[0x40]
0x437: V346 = AND V331 0xffffffffffffffffffffffffffffffffffffffff
0x439: V347 = 0xf48c3054
0x440: V348 = BALANCE V343
0x444: V349 = SUB V348 V333
0x446: V350 = 0x24
0x44a: V351 = ADD V335 0x24
0x44c: V352 = 0x0
0x454: V353 = SUB V335 V345
0x455: V354 = ADD V353 0x24
0x45a: V355 = EXTCODESIZE V346
0x45b: V356 = ISZERO V355
0x45c: V357 = ISZERO V356
0x45d: V358 = 0x462
0x460: JUMPI 0x462 V357
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: [V346, 0xf48c3054, V349, V351, 0x0, V345, V354, V345, V349, V346]
Exit stack: [V10, 0xc6, V346, 0xf48c3054, V349, V351, 0x0, V345, V354, V345, V349, V346]

================================

Block 0x461
[0x461:0x461]
---
Predecessors: [0x3df]
Successors: []
---
0x461 INVALID
---
0x461: INVALID 
---
Entry stack: [V10, 0xc6, V346, 0xf48c3054, V349, V351, 0x0, V345, V354, V345, V349, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6, V346, 0xf48c3054, V349, V351, 0x0, V345, V354, V345, V349, V346]

================================

Block 0x462
[0x462:0x46e]
---
Predecessors: [0x3df]
Successors: [0x46f, 0x470]
---
0x462 JUMPDEST
0x463 PUSH2 0x25ee
0x466 GAS
0x467 SUB
0x468 CALL
0x469 ISZERO
0x46a ISZERO
0x46b PUSH2 0x470
0x46e JUMPI
---
0x462: JUMPDEST 
0x463: V359 = 0x25ee
0x466: V360 = GAS
0x467: V361 = SUB V360 0x25ee
0x468: V362 = CALL V361 V346 V349 V345 V354 V345 0x0
0x469: V363 = ISZERO V362
0x46a: V364 = ISZERO V363
0x46b: V365 = 0x470
0x46e: JUMPI 0x470 V364
---
Entry stack: [V10, 0xc6, V346, 0xf48c3054, V349, V351, 0x0, V345, V354, V345, V349, V346]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xc6, V346, 0xf48c3054, V349, V351]

================================

Block 0x46f
[0x46f:0x46f]
---
Predecessors: [0x462]
Successors: []
---
0x46f INVALID
---
0x46f: INVALID 
---
Entry stack: [V10, 0xc6, V346, 0xf48c3054, V349, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6, V346, 0xf48c3054, V349, V351]

================================

Block 0x470
[0x470:0x4a0]
---
Predecessors: [0x462]
Successors: [0xc3, 0x4a1]
---
0x470 JUMPDEST
0x471 POP
0x472 POP
0x473 PUSH1 0x2
0x475 SLOAD
0x476 PUSH1 0x40
0x478 MLOAD
0x479 PUSH1 0x1
0x47b PUSH1 0xa0
0x47d PUSH1 0x2
0x47f EXP
0x480 SUB
0x481 CALLER
0x482 AND
0x483 SWAP4
0x484 POP
0x485 DUP2
0x486 ISZERO
0x487 PUSH2 0x8fc
0x48a MUL
0x48b SWAP3
0x48c POP
0x48d PUSH1 0x0
0x48f DUP2
0x490 DUP2
0x491 DUP2
0x492 DUP6
0x493 DUP9
0x494 DUP9
0x495 CALL
0x496 SWAP4
0x497 POP
0x498 POP
0x499 POP
0x49a POP
0x49b ISZERO
0x49c ISZERO
0x49d PUSH2 0xc3
0x4a0 JUMPI
---
0x470: JUMPDEST 
0x473: V366 = 0x2
0x475: V367 = S[0x2]
0x476: V368 = 0x40
0x478: V369 = M[0x40]
0x479: V370 = 0x1
0x47b: V371 = 0xa0
0x47d: V372 = 0x2
0x47f: V373 = EXP 0x2 0xa0
0x480: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x481: V375 = CALLER
0x482: V376 = AND V375 0xffffffffffffffffffffffffffffffffffffffff
0x486: V377 = ISZERO V367
0x487: V378 = 0x8fc
0x48a: V379 = MUL 0x8fc V377
0x48d: V380 = 0x0
0x495: V381 = CALL V379 V376 V367 V369 0x0 V369 0x0
0x49b: V382 = ISZERO V381
0x49c: V383 = ISZERO V382
0x49d: V384 = 0xc3
0x4a0: JUMPI 0xc3 V383
---
Entry stack: [V10, 0xc6, V346, 0xf48c3054, V349, V351]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x4a1
[0x4a1:0x4a1]
---
Predecessors: [0x470]
Successors: []
---
0x4a1 INVALID
---
0x4a1: INVALID 
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x4a2
[0x4a2:0x4a2]
---
Predecessors: []
Successors: [0x4a3]
---
0x4a2 JUMPDEST
---
0x4a2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4a3
[0x4a3:0x4a4]
---
Predecessors: [0x4a2]
Successors: []
Has unresolved jump.
---
0x4a3 JUMPDEST
0x4a4 JUMP
---
0x4a3: JUMPDEST 
0x4a4: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4a5
[0x4a5:0x4b6]
---
Predecessors: [0xe2]
Successors: [0xf6]
---
0x4a5 JUMPDEST
0x4a6 PUSH1 0x0
0x4a8 PUSH1 0x20
0x4aa DUP2
0x4ab SWAP1
0x4ac MSTORE
0x4ad SWAP1
0x4ae DUP2
0x4af MSTORE
0x4b0 PUSH1 0x40
0x4b2 SWAP1
0x4b3 SHA3
0x4b4 SLOAD
0x4b5 DUP2
0x4b6 JUMP
---
0x4a5: JUMPDEST 
0x4a6: V385 = 0x0
0x4a8: V386 = 0x20
0x4ac: M[0x20] = 0x0
0x4af: M[0x0] = V66
0x4b0: V387 = 0x40
0x4b3: V388 = SHA3 0x0 0x40
0x4b4: V389 = S[V388]
0x4b6: JUMP 0xf6
---
Entry stack: [V10, 0xf6, V66]
Stack pops: 2
Stack additions: [S1, V389]
Exit stack: [V10, 0xf6, V389]

================================

Block 0x4b7
[0x4b7:0x4ca]
---
Predecessors: [0x110, 0x36c]
Successors: [0x4cb, 0x511]
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x3
0x4ba SLOAD
0x4bb PUSH1 0x0
0x4bd SWAP1
0x4be DUP2
0x4bf SWAP1
0x4c0 DUP2
0x4c1 SWAP1
0x4c2 PUSH1 0xff
0x4c4 AND
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 PUSH2 0x511
0x4ca JUMPI
---
0x4b7: JUMPDEST 
0x4b8: V390 = 0x3
0x4ba: V391 = S[0x3]
0x4bb: V392 = 0x0
0x4c2: V393 = 0xff
0x4c4: V394 = AND 0xff V391
0x4c5: V395 = ISZERO V394
0x4c6: V396 = ISZERO V395
0x4c7: V397 = 0x511
0x4ca: JUMPI 0x511 V396
---
Entry stack: [V10, S2, S1, {0xc6, 0x374}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S2, S1, {0xc6, 0x374}, 0x0, 0x0, 0x0]

================================

Block 0x4cb
[0x4cb:0x50a]
---
Predecessors: [0x4b7]
Successors: [0x50b, 0x50c]
---
0x4cb PUSH1 0x1
0x4cd PUSH1 0xa0
0x4cf PUSH1 0x2
0x4d1 EXP
0x4d2 SUB
0x4d3 CALLER
0x4d4 AND
0x4d5 PUSH1 0x0
0x4d7 DUP2
0x4d8 DUP2
0x4d9 MSTORE
0x4da PUSH1 0x20
0x4dc DUP2
0x4dd SWAP1
0x4de MSTORE
0x4df PUSH1 0x40
0x4e1 DUP1
0x4e2 DUP3
0x4e3 SHA3
0x4e4 DUP1
0x4e5 SLOAD
0x4e6 SWAP1
0x4e7 DUP4
0x4e8 SWAP1
0x4e9 SSTORE
0x4ea SWAP1
0x4eb MLOAD
0x4ec SWAP1
0x4ed SWAP6
0x4ee POP
0x4ef DUP6
0x4f0 ISZERO
0x4f1 PUSH2 0x8fc
0x4f4 MUL
0x4f5 SWAP2
0x4f6 DUP7
0x4f7 SWAP2
0x4f8 SWAP1
0x4f9 DUP2
0x4fa DUP2
0x4fb DUP2
0x4fc DUP6
0x4fd DUP9
0x4fe DUP9
0x4ff CALL
0x500 SWAP4
0x501 POP
0x502 POP
0x503 POP
0x504 POP
0x505 ISZERO
0x506 ISZERO
0x507 PUSH2 0x50c
0x50a JUMPI
---
0x4cb: V398 = 0x1
0x4cd: V399 = 0xa0
0x4cf: V400 = 0x2
0x4d1: V401 = EXP 0x2 0xa0
0x4d2: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d3: V403 = CALLER
0x4d4: V404 = AND V403 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V405 = 0x0
0x4d9: M[0x0] = V404
0x4da: V406 = 0x20
0x4de: M[0x20] = 0x0
0x4df: V407 = 0x40
0x4e3: V408 = SHA3 0x0 0x40
0x4e5: V409 = S[V408]
0x4e9: S[V408] = 0x0
0x4eb: V410 = M[0x40]
0x4f0: V411 = ISZERO V409
0x4f1: V412 = 0x8fc
0x4f4: V413 = MUL 0x8fc V411
0x4ff: V414 = CALL V413 V404 V409 V410 0x0 V410 0x0
0x505: V415 = ISZERO V414
0x506: V416 = ISZERO V415
0x507: V417 = 0x50c
0x50a: JUMPI 0x50c V416
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V409, S1, S0]
Exit stack: [V10, S5, S4, {0xc6, 0x374}, V409, 0x0, 0x0]

================================

Block 0x50b
[0x50b:0x50b]
---
Predecessors: [0x4cb]
Successors: []
---
0x50b INVALID
---
0x50b: INVALID 
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, V409, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x374}, V409, 0x0, 0x0]

================================

Block 0x50c
[0x50c:0x510]
---
Predecessors: [0x4cb]
Successors: [0x685]
---
0x50c JUMPDEST
0x50d PUSH2 0x685
0x510 JUMP
---
0x50c: JUMPDEST 
0x50d: V418 = 0x685
0x510: JUMP 0x685
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, V409, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x374}, V409, 0x0, 0x0]

================================

Block 0x511
[0x511:0x549]
---
Predecessors: [0x4b7]
Successors: [0x54a, 0x5ec]
---
0x511 JUMPDEST
0x512 POP
0x513 POP
0x514 PUSH1 0x6
0x516 SLOAD
0x517 PUSH1 0x1
0x519 PUSH1 0xa0
0x51b PUSH1 0x2
0x51d EXP
0x51e SUB
0x51f CALLER
0x520 AND
0x521 PUSH1 0x0
0x523 SWAP1
0x524 DUP2
0x525 MSTORE
0x526 PUSH1 0x20
0x528 DUP2
0x529 DUP2
0x52a MSTORE
0x52b PUSH1 0x40
0x52d DUP1
0x52e DUP4
0x52f SHA3
0x530 DUP1
0x531 SLOAD
0x532 SWAP1
0x533 DUP5
0x534 SWAP1
0x535 SSTORE
0x536 PUSH1 0x1
0x538 SWAP1
0x539 SWAP3
0x53a MSTORE
0x53b DUP3
0x53c SHA3
0x53d SLOAD
0x53e SWAP3
0x53f MUL
0x540 SWAP2
0x541 PUSH1 0xff
0x543 AND
0x544 ISZERO
0x545 ISZERO
0x546 PUSH2 0x5ec
0x549 JUMPI
---
0x511: JUMPDEST 
0x514: V419 = 0x6
0x516: V420 = S[0x6]
0x517: V421 = 0x1
0x519: V422 = 0xa0
0x51b: V423 = 0x2
0x51d: V424 = EXP 0x2 0xa0
0x51e: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51f: V426 = CALLER
0x520: V427 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x521: V428 = 0x0
0x525: M[0x0] = V427
0x526: V429 = 0x20
0x52a: M[0x20] = 0x0
0x52b: V430 = 0x40
0x52f: V431 = SHA3 0x0 0x40
0x531: V432 = S[V431]
0x535: S[V431] = 0x0
0x536: V433 = 0x1
0x53a: M[0x20] = 0x1
0x53c: V434 = SHA3 0x0 0x40
0x53d: V435 = S[V434]
0x53f: V436 = MUL V420 V432
0x541: V437 = 0xff
0x543: V438 = AND 0xff V435
0x544: V439 = ISZERO V438
0x545: V440 = ISZERO V439
0x546: V441 = 0x5ec
0x549: JUMPI 0x5ec V440
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V436, 0x0]
Exit stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, V436, 0x0]

================================

Block 0x54a
[0x54a:0x54c]
---
Predecessors: [0x511]
Successors: [0x54d]
---
0x54a PUSH1 0x64
0x54c DUP3
---
0x54a: V442 = 0x64
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, V436, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1]
Exit stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, V436, 0x0, 0x64, V436]

================================

Block 0x54d
[0x54d:0x5c8]
---
Predecessors: [0x54a]
Successors: [0x5c9, 0x5ca]
---
0x54d JUMPDEST
0x54e PUSH1 0x7
0x550 SLOAD
0x551 PUSH1 0x8
0x553 SLOAD
0x554 PUSH1 0x40
0x556 DUP1
0x557 MLOAD
0x558 PUSH1 0x0
0x55a PUSH1 0x20
0x55c SWAP2
0x55d DUP3
0x55e ADD
0x55f DUP2
0x560 SWAP1
0x561 MSTORE
0x562 DUP3
0x563 MLOAD
0x564 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x585 DUP2
0x586 MSTORE
0x587 PUSH1 0x1
0x589 PUSH1 0xa0
0x58b PUSH1 0x2
0x58d EXP
0x58e SUB
0x58f SWAP5
0x590 DUP6
0x591 AND
0x592 PUSH1 0x4
0x594 DUP3
0x595 ADD
0x596 MSTORE
0x597 SWAP7
0x598 SWAP1
0x599 SWAP6
0x59a DIV
0x59b PUSH1 0x24
0x59d DUP8
0x59e ADD
0x59f DUP2
0x5a0 SWAP1
0x5a1 MSTORE
0x5a2 SWAP2
0x5a3 MLOAD
0x5a4 SWAP2
0x5a5 SWAP7
0x5a6 POP
0x5a7 SWAP2
0x5a8 SWAP1
0x5a9 SWAP3
0x5aa AND
0x5ab SWAP4
0x5ac PUSH4 0xa9059cbb
0x5b1 SWAP4
0x5b2 PUSH1 0x44
0x5b4 DUP1
0x5b5 DUP4
0x5b6 ADD
0x5b7 SWAP5
0x5b8 SWAP3
0x5b9 DUP4
0x5ba SWAP1
0x5bb SUB
0x5bc ADD
0x5bd SWAP1
0x5be DUP3
0x5bf SWAP1
0x5c0 DUP8
0x5c1 DUP1
0x5c2 EXTCODESIZE
0x5c3 ISZERO
0x5c4 ISZERO
0x5c5 PUSH2 0x5ca
0x5c8 JUMPI
---
0x54d: JUMPDEST 
0x54e: V443 = 0x7
0x550: V444 = S[0x7]
0x551: V445 = 0x8
0x553: V446 = S[0x8]
0x554: V447 = 0x40
0x557: V448 = M[0x40]
0x558: V449 = 0x0
0x55a: V450 = 0x20
0x55e: V451 = ADD 0x20 V448
0x561: M[V451] = 0x0
0x563: V452 = M[0x40]
0x564: V453 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x586: M[V452] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x587: V454 = 0x1
0x589: V455 = 0xa0
0x58b: V456 = 0x2
0x58d: V457 = EXP 0x2 0xa0
0x58e: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x591: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x592: V460 = 0x4
0x595: V461 = ADD V452 0x4
0x596: M[V461] = V459
0x59a: V462 = DIV V436 0x64
0x59b: V463 = 0x24
0x59e: V464 = ADD V452 0x24
0x5a1: M[V464] = V462
0x5a3: V465 = M[0x40]
0x5aa: V466 = AND V444 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V467 = 0xa9059cbb
0x5b2: V468 = 0x44
0x5b6: V469 = ADD V452 0x44
0x5bb: V470 = SUB V452 V465
0x5bc: V471 = ADD V470 0x44
0x5c2: V472 = EXTCODESIZE V466
0x5c3: V473 = ISZERO V472
0x5c4: V474 = ISZERO V473
0x5c5: V475 = 0x5ca
0x5c8: JUMPI 0x5ca V474
---
Entry stack: [V10, S7, S6, {0xc6, 0x374}, 0x0, V436, 0x0, 0x64, V436]
Stack pops: 3
Stack additions: [V462, V466, 0xa9059cbb, V469, 0x20, V465, V471, V465, 0x0, V466]
Exit stack: [V10, S7, S6, {0xc6, 0x374}, 0x0, V436, V462, V466, 0xa9059cbb, V469, 0x20, V465, V471, V465, 0x0, V466]

================================

Block 0x5c9
[0x5c9:0x5c9]
---
Predecessors: [0x54d]
Successors: []
---
0x5c9 INVALID
---
0x5c9: INVALID 
---
Entry stack: [V10, S14, S13, {0xc6, 0x374}, 0x0, V436, V462, V466, 0xa9059cbb, V469, 0x20, V465, V471, V465, 0x0, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, {0xc6, 0x374}, 0x0, V436, V462, V466, 0xa9059cbb, V469, 0x20, V465, V471, V465, 0x0, V466]

================================

Block 0x5ca
[0x5ca:0x5d6]
---
Predecessors: [0x54d]
Successors: [0x5d7, 0x5d8]
---
0x5ca JUMPDEST
0x5cb PUSH2 0x2c6
0x5ce GAS
0x5cf SUB
0x5d0 CALL
0x5d1 ISZERO
0x5d2 ISZERO
0x5d3 PUSH2 0x5d8
0x5d6 JUMPI
---
0x5ca: JUMPDEST 
0x5cb: V476 = 0x2c6
0x5ce: V477 = GAS
0x5cf: V478 = SUB V477 0x2c6
0x5d0: V479 = CALL V478 V466 0x0 V465 V471 V465 0x20
0x5d1: V480 = ISZERO V479
0x5d2: V481 = ISZERO V480
0x5d3: V482 = 0x5d8
0x5d6: JUMPI 0x5d8 V481
---
Entry stack: [V10, S14, S13, {0xc6, 0x374}, 0x0, V436, V462, V466, 0xa9059cbb, V469, 0x20, V465, V471, V465, 0x0, V466]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, S13, {0xc6, 0x374}, 0x0, V436, V462, V466, 0xa9059cbb, V469]

================================

Block 0x5d7
[0x5d7:0x5d7]
---
Predecessors: [0x5ca]
Successors: []
---
0x5d7 INVALID
---
0x5d7: INVALID 
---
Entry stack: [V10, S8, S7, {0xc6, 0x374}, 0x0, V436, V462, V466, 0xa9059cbb, V469]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, {0xc6, 0x374}, 0x0, V436, V462, V466, 0xa9059cbb, V469]

================================

Block 0x5d8
[0x5d8:0x5e6]
---
Predecessors: [0x5ca]
Successors: [0x5e7, 0x5ec]
---
0x5d8 JUMPDEST
0x5d9 POP
0x5da POP
0x5db PUSH1 0x40
0x5dd MLOAD
0x5de MLOAD
0x5df ISZERO
0x5e0 ISZERO
0x5e1 SWAP1
0x5e2 POP
0x5e3 PUSH2 0x5ec
0x5e6 JUMPI
---
0x5d8: JUMPDEST 
0x5db: V483 = 0x40
0x5dd: V484 = M[0x40]
0x5de: V485 = M[V484]
0x5df: V486 = ISZERO V485
0x5e0: V487 = ISZERO V486
0x5e3: V488 = 0x5ec
0x5e6: JUMPI 0x5ec V487
---
Entry stack: [V10, S8, S7, {0xc6, 0x374}, 0x0, V436, V462, V466, 0xa9059cbb, V469]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S8, S7, {0xc6, 0x374}, 0x0, V436, V462]

================================

Block 0x5e7
[0x5e7:0x5eb]
---
Predecessors: [0x5d8]
Successors: []
---
0x5e7 PUSH1 0x0
0x5e9 PUSH1 0x0
0x5eb REVERT
---
0x5e7: V489 = 0x0
0x5e9: V490 = 0x0
0x5eb: REVERT 0x0 0x0
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, V436, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, V436, V462]

================================

Block 0x5ec
[0x5ec:0x5ec]
---
Predecessors: [0x511, 0x5d8]
Successors: [0x5ed]
---
0x5ec JUMPDEST
---
0x5ec: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, V436, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, V436, S0]

================================

Block 0x5ed
[0x5ed:0x661]
---
Predecessors: [0x5ec]
Successors: [0x662, 0x663]
---
0x5ed JUMPDEST
0x5ee PUSH1 0x7
0x5f0 SLOAD
0x5f1 PUSH1 0x40
0x5f3 DUP1
0x5f4 MLOAD
0x5f5 PUSH1 0x0
0x5f7 PUSH1 0x20
0x5f9 SWAP2
0x5fa DUP3
0x5fb ADD
0x5fc DUP2
0x5fd SWAP1
0x5fe MSTORE
0x5ff DUP3
0x600 MLOAD
0x601 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x622 DUP2
0x623 MSTORE
0x624 PUSH1 0x1
0x626 PUSH1 0xa0
0x628 PUSH1 0x2
0x62a EXP
0x62b SUB
0x62c CALLER
0x62d DUP2
0x62e AND
0x62f PUSH1 0x4
0x631 DUP4
0x632 ADD
0x633 MSTORE
0x634 DUP7
0x635 DUP9
0x636 SUB
0x637 PUSH1 0x24
0x639 DUP4
0x63a ADD
0x63b MSTORE
0x63c SWAP4
0x63d MLOAD
0x63e SWAP4
0x63f SWAP1
0x640 SWAP5
0x641 AND
0x642 SWAP4
0x643 PUSH4 0xa9059cbb
0x648 SWAP4
0x649 PUSH1 0x44
0x64b DUP1
0x64c DUP4
0x64d ADD
0x64e SWAP5
0x64f SWAP4
0x650 SWAP2
0x651 SWAP3
0x652 DUP4
0x653 SWAP1
0x654 SUB
0x655 ADD
0x656 SWAP1
0x657 DUP3
0x658 SWAP1
0x659 DUP8
0x65a DUP1
0x65b EXTCODESIZE
0x65c ISZERO
0x65d ISZERO
0x65e PUSH2 0x663
0x661 JUMPI
---
0x5ed: JUMPDEST 
0x5ee: V491 = 0x7
0x5f0: V492 = S[0x7]
0x5f1: V493 = 0x40
0x5f4: V494 = M[0x40]
0x5f5: V495 = 0x0
0x5f7: V496 = 0x20
0x5fb: V497 = ADD 0x20 V494
0x5fe: M[V497] = 0x0
0x600: V498 = M[0x40]
0x601: V499 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x623: M[V498] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x624: V500 = 0x1
0x626: V501 = 0xa0
0x628: V502 = 0x2
0x62a: V503 = EXP 0x2 0xa0
0x62b: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62c: V505 = CALLER
0x62e: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x62f: V507 = 0x4
0x632: V508 = ADD V498 0x4
0x633: M[V508] = V506
0x636: V509 = SUB S1 S0
0x637: V510 = 0x24
0x63a: V511 = ADD V498 0x24
0x63b: M[V511] = V509
0x63d: V512 = M[0x40]
0x641: V513 = AND V492 0xffffffffffffffffffffffffffffffffffffffff
0x643: V514 = 0xa9059cbb
0x649: V515 = 0x44
0x64d: V516 = ADD V498 0x44
0x654: V517 = SUB V498 V512
0x655: V518 = ADD V517 0x44
0x65b: V519 = EXTCODESIZE V513
0x65c: V520 = ISZERO V519
0x65d: V521 = ISZERO V520
0x65e: V522 = 0x663
0x661: JUMPI 0x663 V521
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V513, 0xa9059cbb, V516, 0x20, V512, V518, V512, 0x0, V513]
Exit stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, S1, S0, V513, 0xa9059cbb, V516, 0x20, V512, V518, V512, 0x0, V513]

================================

Block 0x662
[0x662:0x662]
---
Predecessors: [0x5ed]
Successors: []
---
0x662 INVALID
---
0x662: INVALID 
---
Entry stack: [V10, S14, S13, {0xc6, 0x374}, 0x0, S10, S9, V513, 0xa9059cbb, V516, 0x20, V512, V518, V512, 0x0, V513]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, {0xc6, 0x374}, 0x0, S10, S9, V513, 0xa9059cbb, V516, 0x20, V512, V518, V512, 0x0, V513]

================================

Block 0x663
[0x663:0x66f]
---
Predecessors: [0x5ed]
Successors: [0x670, 0x671]
---
0x663 JUMPDEST
0x664 PUSH2 0x2c6
0x667 GAS
0x668 SUB
0x669 CALL
0x66a ISZERO
0x66b ISZERO
0x66c PUSH2 0x671
0x66f JUMPI
---
0x663: JUMPDEST 
0x664: V523 = 0x2c6
0x667: V524 = GAS
0x668: V525 = SUB V524 0x2c6
0x669: V526 = CALL V525 V513 0x0 V512 V518 V512 0x20
0x66a: V527 = ISZERO V526
0x66b: V528 = ISZERO V527
0x66c: V529 = 0x671
0x66f: JUMPI 0x671 V528
---
Entry stack: [V10, S14, S13, {0xc6, 0x374}, 0x0, S10, S9, V513, 0xa9059cbb, V516, 0x20, V512, V518, V512, 0x0, V513]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, S13, {0xc6, 0x374}, 0x0, S10, S9, V513, 0xa9059cbb, V516]

================================

Block 0x670
[0x670:0x670]
---
Predecessors: [0x663]
Successors: []
---
0x670 INVALID
---
0x670: INVALID 
---
Entry stack: [V10, S8, S7, {0xc6, 0x374}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, {0xc6, 0x374}, 0x0, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x671
[0x671:0x67f]
---
Predecessors: [0x663]
Successors: [0x680, 0x685]
---
0x671 JUMPDEST
0x672 POP
0x673 POP
0x674 PUSH1 0x40
0x676 MLOAD
0x677 MLOAD
0x678 ISZERO
0x679 ISZERO
0x67a SWAP1
0x67b POP
0x67c PUSH2 0x685
0x67f JUMPI
---
0x671: JUMPDEST 
0x674: V530 = 0x40
0x676: V531 = M[0x40]
0x677: V532 = M[V531]
0x678: V533 = ISZERO V532
0x679: V534 = ISZERO V533
0x67c: V535 = 0x685
0x67f: JUMPI 0x685 V534
---
Entry stack: [V10, S8, S7, {0xc6, 0x374}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S8, S7, {0xc6, 0x374}, 0x0, S4, S3]

================================

Block 0x680
[0x680:0x684]
---
Predecessors: [0x671]
Successors: []
---
0x680 PUSH1 0x0
0x682 PUSH1 0x0
0x684 REVERT
---
0x680: V536 = 0x0
0x682: V537 = 0x0
0x684: REVERT 0x0 0x0
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x374}, 0x0, S1, S0]

================================

Block 0x685
[0x685:0x685]
---
Predecessors: [0x50c, 0x671]
Successors: [0x686]
---
0x685 JUMPDEST
---
0x685: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x374}, S2, S1, S0]

================================

Block 0x686
[0x686:0x686]
---
Predecessors: [0x685]
Successors: [0x687]
---
0x686 JUMPDEST
---
0x686: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x374}, S2, S1, S0]

================================

Block 0x687
[0x687:0x68b]
---
Predecessors: [0x686]
Successors: [0xc6, 0x374]
---
0x687 JUMPDEST
0x688 POP
0x689 POP
0x68a POP
0x68b JUMP
---
0x687: JUMPDEST 
0x68b: JUMP {0xc6, 0x374}
---
Entry stack: [V10, S5, S4, {0xc6, 0x374}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S5, S4]

================================

Block 0x68c
[0x68c:0x6a0]
---
Predecessors: [0x122]
Successors: [0x136]
---
0x68c JUMPDEST
0x68d PUSH1 0x1
0x68f PUSH1 0x20
0x691 MSTORE
0x692 PUSH1 0x0
0x694 SWAP1
0x695 DUP2
0x696 MSTORE
0x697 PUSH1 0x40
0x699 SWAP1
0x69a SHA3
0x69b SLOAD
0x69c PUSH1 0xff
0x69e AND
0x69f DUP2
0x6a0 JUMP
---
0x68c: JUMPDEST 
0x68d: V538 = 0x1
0x68f: V539 = 0x20
0x691: M[0x20] = 0x1
0x692: V540 = 0x0
0x696: M[0x0] = V90
0x697: V541 = 0x40
0x69a: V542 = SHA3 0x0 0x40
0x69b: V543 = S[V542]
0x69c: V544 = 0xff
0x69e: V545 = AND 0xff V543
0x6a0: JUMP 0x136
---
Entry stack: [V10, 0x136, V90]
Stack pops: 2
Stack additions: [S1, V545]
Exit stack: [V10, 0x136, V545]

================================

Block 0x6a1
[0x6a1:0x6b7]
---
Predecessors: [0x154]
Successors: [0x6b8, 0x6bd]
---
0x6a1 JUMPDEST
0x6a2 PUSH1 0x8
0x6a4 SLOAD
0x6a5 CALLER
0x6a6 PUSH1 0x1
0x6a8 PUSH1 0xa0
0x6aa PUSH1 0x2
0x6ac EXP
0x6ad SUB
0x6ae SWAP1
0x6af DUP2
0x6b0 AND
0x6b1 SWAP2
0x6b2 AND
0x6b3 EQ
0x6b4 PUSH2 0x6bd
0x6b7 JUMPI
---
0x6a1: JUMPDEST 
0x6a2: V546 = 0x8
0x6a4: V547 = S[0x8]
0x6a5: V548 = CALLER
0x6a6: V549 = 0x1
0x6a8: V550 = 0xa0
0x6aa: V551 = 0x2
0x6ac: V552 = EXP 0x2 0xa0
0x6ad: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b0: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x6b2: V555 = AND V547 0xffffffffffffffffffffffffffffffffffffffff
0x6b3: V556 = EQ V555 V554
0x6b4: V557 = 0x6bd
0x6b7: JUMPI 0x6bd V556
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x6b8
[0x6b8:0x6bc]
---
Predecessors: [0x6a1]
Successors: []
---
0x6b8 PUSH1 0x0
0x6ba PUSH1 0x0
0x6bc REVERT
---
0x6b8: V558 = 0x0
0x6ba: V559 = 0x0
0x6bc: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x6bd
[0x6bd:0x6c8]
---
Predecessors: [0x6a1]
Successors: [0x6c9, 0x6ce]
---
0x6bd JUMPDEST
0x6be PUSH1 0x5
0x6c0 SLOAD
0x6c1 PUSH1 0xff
0x6c3 AND
0x6c4 ISZERO
0x6c5 PUSH2 0x6ce
0x6c8 JUMPI
---
0x6bd: JUMPDEST 
0x6be: V560 = 0x5
0x6c0: V561 = S[0x5]
0x6c1: V562 = 0xff
0x6c3: V563 = AND 0xff V561
0x6c4: V564 = ISZERO V563
0x6c5: V565 = 0x6ce
0x6c8: JUMPI 0x6ce V564
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x6c9
[0x6c9:0x6cd]
---
Predecessors: [0x6bd]
Successors: []
---
0x6c9 PUSH1 0x0
0x6cb PUSH1 0x0
0x6cd REVERT
---
0x6c9: V566 = 0x0
0x6cb: V567 = 0x0
0x6cd: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x6ce
[0x6ce:0x6d9]
---
Predecessors: [0x6bd]
Successors: [0x6da, 0x6df]
---
0x6ce JUMPDEST
0x6cf PUSH1 0x3
0x6d1 SLOAD
0x6d2 PUSH1 0xff
0x6d4 AND
0x6d5 ISZERO
0x6d6 PUSH2 0x6df
0x6d9 JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V568 = 0x3
0x6d1: V569 = S[0x3]
0x6d2: V570 = 0xff
0x6d4: V571 = AND 0xff V569
0x6d5: V572 = ISZERO V571
0x6d6: V573 = 0x6df
0x6d9: JUMPI 0x6df V572
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x6da
[0x6da:0x6de]
---
Predecessors: [0x6ce]
Successors: []
---
0x6da PUSH1 0x0
0x6dc PUSH1 0x0
0x6de REVERT
---
0x6da: V574 = 0x0
0x6dc: V575 = 0x0
0x6de: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x6df
[0x6df:0x6e7]
---
Predecessors: [0x6ce]
Successors: [0x6e8]
---
0x6df JUMPDEST
0x6e0 PUSH1 0x2
0x6e2 DUP1
0x6e3 SLOAD
0x6e4 CALLVALUE
0x6e5 ADD
0x6e6 SWAP1
0x6e7 SSTORE
---
0x6df: JUMPDEST 
0x6e0: V576 = 0x2
0x6e3: V577 = S[0x2]
0x6e4: V578 = CALLVALUE
0x6e5: V579 = ADD V578 V577
0x6e7: S[0x2] = V579
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x6e8
[0x6e8:0x6e9]
---
Predecessors: [0x6df]
Successors: [0xc6]
---
0x6e8 JUMPDEST
0x6e9 JUMP
---
0x6e8: JUMPDEST 
0x6e9: JUMP 0xc6
---
Entry stack: [V10, 0xc6]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x6ea
[0x6ea:0x6f2]
---
Predecessors: [0x166]
Successors: [0x136]
---
0x6ea JUMPDEST
0x6eb PUSH1 0x3
0x6ed SLOAD
0x6ee PUSH1 0xff
0x6f0 AND
0x6f1 DUP2
0x6f2 JUMP
---
0x6ea: JUMPDEST 
0x6eb: V580 = 0x3
0x6ed: V581 = S[0x3]
0x6ee: V582 = 0xff
0x6f0: V583 = AND 0xff V581
0x6f2: JUMP 0x136
---
Entry stack: [V10, 0x136]
Stack pops: 1
Stack additions: [S0, V583]
Exit stack: [V10, 0x136, V583]

================================

Block 0x6f3
[0x6f3:0x709]
---
Predecessors: [0x18a]
Successors: [0x70a, 0x70f]
---
0x6f3 JUMPDEST
0x6f4 PUSH1 0x8
0x6f6 SLOAD
0x6f7 CALLER
0x6f8 PUSH1 0x1
0x6fa PUSH1 0xa0
0x6fc PUSH1 0x2
0x6fe EXP
0x6ff SUB
0x700 SWAP1
0x701 DUP2
0x702 AND
0x703 SWAP2
0x704 AND
0x705 EQ
0x706 PUSH2 0x70f
0x709 JUMPI
---
0x6f3: JUMPDEST 
0x6f4: V584 = 0x8
0x6f6: V585 = S[0x8]
0x6f7: V586 = CALLER
0x6f8: V587 = 0x1
0x6fa: V588 = 0xa0
0x6fc: V589 = 0x2
0x6fe: V590 = EXP 0x2 0xa0
0x6ff: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x702: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x704: V593 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x705: V594 = EQ V593 V592
0x706: V595 = 0x70f
0x709: JUMPI 0x70f V594
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x70a
[0x70a:0x70e]
---
Predecessors: [0x6f3]
Successors: []
---
0x70a PUSH1 0x0
0x70c PUSH1 0x0
0x70e REVERT
---
0x70a: V596 = 0x0
0x70c: V597 = 0x0
0x70e: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x70f
[0x70f:0x71c]
---
Predecessors: [0x6f3]
Successors: [0x71d]
---
0x70f JUMPDEST
0x710 PUSH1 0x5
0x712 DUP1
0x713 SLOAD
0x714 PUSH1 0xff
0x716 NOT
0x717 AND
0x718 PUSH1 0x1
0x71a OR
0x71b SWAP1
0x71c SSTORE
---
0x70f: JUMPDEST 
0x710: V598 = 0x5
0x713: V599 = S[0x5]
0x714: V600 = 0xff
0x716: V601 = NOT 0xff
0x717: V602 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V599
0x718: V603 = 0x1
0x71a: V604 = OR 0x1 V602
0x71c: S[0x5] = V604
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x71d
[0x71d:0x71e]
---
Predecessors: [0x70f]
Successors: [0xc6]
---
0x71d JUMPDEST
0x71e JUMP
---
0x71d: JUMPDEST 
0x71e: JUMP 0xc6
---
Entry stack: [V10, 0xc6]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x71f
[0x71f:0x724]
---
Predecessors: [0x19c]
Successors: [0xf6]
---
0x71f JUMPDEST
0x720 PUSH1 0x2
0x722 SLOAD
0x723 DUP2
0x724 JUMP
---
0x71f: JUMPDEST 
0x720: V605 = 0x2
0x722: V606 = S[0x2]
0x724: JUMP 0xf6
---
Entry stack: [V10, 0xf6]
Stack pops: 1
Stack additions: [S0, V606]
Exit stack: [V10, 0xf6, V606]

================================

Block 0x725
[0x725:0x72d]
---
Predecessors: [0x1be]
Successors: [0x136]
---
0x725 JUMPDEST
0x726 PUSH1 0x5
0x728 SLOAD
0x729 PUSH1 0xff
0x72b AND
0x72c DUP2
0x72d JUMP
---
0x725: JUMPDEST 
0x726: V607 = 0x5
0x728: V608 = S[0x5]
0x729: V609 = 0xff
0x72b: V610 = AND 0xff V608
0x72d: JUMP 0x136
---
Entry stack: [V10, 0x136]
Stack pops: 1
Stack additions: [S0, V610]
Exit stack: [V10, 0x136, V610]

================================

Block 0x72e
[0x72e:0x733]
---
Predecessors: [0x1e2]
Successors: [0xf6]
---
0x72e JUMPDEST
0x72f PUSH1 0x4
0x731 SLOAD
0x732 DUP2
0x733 JUMP
---
0x72e: JUMPDEST 
0x72f: V611 = 0x4
0x731: V612 = S[0x4]
0x733: JUMP 0xf6
---
Entry stack: [V10, 0xf6]
Stack pops: 1
Stack additions: [S0, V612]
Exit stack: [V10, 0xf6, V612]

================================

Block 0x734
[0x734:0x742]
---
Predecessors: [0x204]
Successors: [0x20c]
---
0x734 JUMPDEST
0x735 PUSH1 0x7
0x737 SLOAD
0x738 PUSH1 0x1
0x73a PUSH1 0xa0
0x73c PUSH1 0x2
0x73e EXP
0x73f SUB
0x740 AND
0x741 DUP2
0x742 JUMP
---
0x734: JUMPDEST 
0x735: V613 = 0x7
0x737: V614 = S[0x7]
0x738: V615 = 0x1
0x73a: V616 = 0xa0
0x73c: V617 = 0x2
0x73e: V618 = EXP 0x2 0xa0
0x73f: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x740: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x742: JUMP 0x20c
---
Entry stack: [V10, 0x20c]
Stack pops: 1
Stack additions: [S0, V620]
Exit stack: [V10, 0x20c, V620]

================================

Block 0x743
[0x743:0x775]
---
Predecessors: []
Successors: []
---
0x743 STOP
0x744 LOG1
0x745 PUSH6 0x627a7a723058
0x74c SHA3
0x74d MISSING 0xf9
0x74e DUP7
0x74f OR
0x750 LOG3
0x751 MISSING 0xc8
0x752 PUSH12 0x6a3b90fd00c55048daa731d8
0x75f LOG4
0x760 MISSING 0x21
0x761 SWAP4
0x762 MISSING 0xf9
0x763 MISSING 0x29
0x764 MISSING 0x2c
0x765 MISSING 0x2d
0x766 MISSING 0xd
0x767 DIFFICULTY
0x768 PUSH13 0x8465815f0029
---
0x743: STOP 
0x744: LOG S0 S1 S2
0x745: V621 = 0x627a7a723058
0x74c: V622 = SHA3 0x627a7a723058 S3
0x74d: MISSING 0xf9
0x74f: V623 = OR S6 S0
0x750: LOG V623 S1 S2 S3 S4
0x751: MISSING 0xc8
0x752: V624 = 0x6a3b90fd00c55048daa731d8
0x75f: LOG 0x6a3b90fd00c55048daa731d8 S0 S1 S2 S3 S4
0x760: MISSING 0x21
0x762: MISSING 0xf9
0x763: MISSING 0x29
0x764: MISSING 0x2c
0x765: MISSING 0x2d
0x766: MISSING 0xd
0x767: V625 = DIFFICULTY
0x768: V626 = 0x8465815f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V622, S5, S6, S4, S1, S2, S3, S0, 0x8465815f0029, V625]
Exit stack: []

================================

Function 0:
Public function signature: 0x2f58015
Entry block: 0xc8
Exit block: 0x4a1
Body: 0xc3, 0xc4, 0xc6, 0xc8, 0xcf, 0xd0, 0x3be, 0x3ca, 0x3ce, 0x3da, 0x3df, 0x461, 0x462, 0x46f, 0x470, 0x4a1

Function 1:
Public function signature: 0x27e235e3
Entry block: 0xda
Exit block: 0xf6
Body: 0xda, 0xe1, 0xe2, 0xf6, 0x4a5

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x108
Exit block: 0xc6
Body: 0xc6, 0x108, 0x10f, 0x110

Function 3:
Public function signature: 0x434f5f27
Entry block: 0x11a
Exit block: 0x136
Body: 0x11a, 0x121, 0x122, 0x136, 0x68c

Function 4:
Public function signature: 0x5259347d
Entry block: 0x14a
Exit block: 0xc6
Body: 0xc6, 0x14a

Function 5:
Public function signature: 0x62f5ed61
Entry block: 0x154
Exit block: 0xc6
Body: 0xc6, 0x154, 0x6a1, 0x6b8, 0x6bd, 0x6c9, 0x6ce, 0x6da, 0x6df, 0x6e8

Function 6:
Public function signature: 0x6360fc3f
Entry block: 0x15e
Exit block: 0x136
Body: 0x136, 0x15e, 0x165, 0x166, 0x6ea

Function 7:
Public function signature: 0x70144f8f
Entry block: 0x182
Exit block: 0xc6
Body: 0xc6, 0x182, 0x189, 0x18a, 0x6f3, 0x70a, 0x70f, 0x71d

Function 8:
Public function signature: 0x943dfef1
Entry block: 0x194
Exit block: 0xf6
Body: 0xf6, 0x194, 0x19b, 0x19c, 0x71f

Function 9:
Public function signature: 0xa089feea
Entry block: 0x1b6
Exit block: 0x136
Body: 0x136, 0x1b6, 0x1bd, 0x1be, 0x725

Function 10:
Public function signature: 0xc3dac9a1
Entry block: 0x1da
Exit block: 0xf6
Body: 0xf6, 0x1da, 0x1e1, 0x1e2, 0x72e

Function 11:
Public function signature: 0xfc0c546a
Entry block: 0x1fc
Exit block: 0x20c
Body: 0x1fc, 0x203, 0x204, 0x20c, 0x734

Function 12:
Public fallback function
Entry block: 0xb7
Exit block: 0xc6
Body: 0xb7, 0xbb, 0xc3, 0xc4, 0xc6

Function 13:
Private function
Entry block: 0x4b7
Exit block: 0x687
Body: 0x4b7, 0x4cb, 0x50c, 0x511, 0x54a, 0x54d, 0x5ca, 0x5d8, 0x5ec, 0x5ed, 0x663, 0x671, 0x685, 0x686, 0x687

Function 14:
Private function
Entry block: 0x228
Exit block: 0x3bc
Body: 0x228, 0x237, 0x243, 0x2a7, 0x2b5, 0x322, 0x330, 0x33c, 0x342, 0x36c, 0x374, 0x375, 0x37a, 0x38b, 0x39c, 0x3bb, 0x3bc

