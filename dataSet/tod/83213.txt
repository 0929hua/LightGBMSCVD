Block 0x0
[0x0:0x17]
---
Predecessors: []
Successors: [0x18, 0x38]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x1288c42a
0x13 DUP2
0x14 EQ
0x15 PUSH1 0x38
0x17 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x1288c42a
0x14: V9 = EQ V7 0x1288c42a
0x15: V10 = 0x38
0x17: JUMPI 0x38 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x18
[0x18:0x21]
---
Predecessors: [0x0]
Successors: [0x22, 0x6b]
---
0x18 DUP1
0x19 PUSH4 0x1301ee02
0x1e EQ
0x1f PUSH1 0x6b
0x21 JUMPI
---
0x19: V11 = 0x1301ee02
0x1e: V12 = EQ 0x1301ee02 V7
0x1f: V13 = 0x6b
0x21: JUMPI 0x6b V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x22
[0x22:0x2b]
---
Predecessors: [0x18]
Successors: [0x2c, 0x7e]
---
0x22 DUP1
0x23 PUSH4 0x16c72721
0x28 EQ
0x29 PUSH1 0x7e
0x2b JUMPI
---
0x23: V14 = 0x16c72721
0x28: V15 = EQ 0x16c72721 V7
0x29: V16 = 0x7e
0x2b: JUMPI 0x7e V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2c
[0x2c:0x35]
---
Predecessors: [0x22]
Successors: [0x36, 0x89]
---
0x2c DUP1
0x2d PUSH4 0xd4245e5b
0x32 EQ
0x33 PUSH1 0x89
0x35 JUMPI
---
0x2d: V17 = 0xd4245e5b
0x32: V18 = EQ 0xd4245e5b V7
0x33: V19 = 0x89
0x35: JUMPI 0x89 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x36
[0x36:0x37]
---
Predecessors: [0x2c, 0x38, 0xa9]
Successors: []
---
0x36 JUMPDEST
0x37 STOP
---
0x36: JUMPDEST 
0x37: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x38
[0x38:0x6a]
---
Predecessors: [0x0]
Successors: [0x36]
---
0x38 JUMPDEST
0x39 PUSH1 0x36
0x3b PUSH1 0x0
0x3d DUP1
0x3e SLOAD
0x3f PUSH10 0x21e19e0c9bab2400000
0x4a PUSH20 0xbf4ed7b27f1d666546e30d74d50d173d20bca754
0x5f BALANCE
0x60 GT
0x61 PUSH1 0xff
0x63 NOT
0x64 SWAP1
0x65 SWAP2
0x66 AND
0x67 OR
0x68 SWAP1
0x69 SSTORE
0x6a JUMP
---
0x38: JUMPDEST 
0x39: V20 = 0x36
0x3b: V21 = 0x0
0x3e: V22 = S[0x0]
0x3f: V23 = 0x21e19e0c9bab2400000
0x4a: V24 = 0xbf4ed7b27f1d666546e30d74d50d173d20bca754
0x5f: V25 = BALANCE 0xbf4ed7b27f1d666546e30d74d50d173d20bca754
0x60: V26 = GT V25 0x21e19e0c9bab2400000
0x61: V27 = 0xff
0x63: V28 = NOT 0xff
0x66: V29 = AND V22 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x67: V30 = OR V29 V26
0x69: S[0x0] = V30
0x6a: JUMP 0x36
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6b
[0x6b:0x7a]
---
Predecessors: [0x18]
Successors: [0x7b, 0xac]
---
0x6b JUMPDEST
0x6c PUSH1 0x36
0x6e PUSH1 0x4
0x70 CALLDATALOAD
0x71 PUSH1 0x0
0x73 SLOAD
0x74 PUSH1 0xff
0x76 AND
0x77 ISZERO
0x78 PUSH1 0xac
0x7a JUMPI
---
0x6b: JUMPDEST 
0x6c: V31 = 0x36
0x6e: V32 = 0x4
0x70: V33 = CALLDATALOAD 0x4
0x71: V34 = 0x0
0x73: V35 = S[0x0]
0x74: V36 = 0xff
0x76: V37 = AND 0xff V35
0x77: V38 = ISZERO V37
0x78: V39 = 0xac
0x7a: JUMPI 0xac V38
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x36, V33]
Exit stack: [V7, 0x36, V33]

================================

Block 0x7b
[0x7b:0x7d]
---
Predecessors: [0x6b]
Successors: []
---
0x7b PUSH1 0x2
0x7d JUMP
---
0x7b: V40 = 0x2
0x7d: THROW 
---
Entry stack: [V7, 0x36, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x36, V33]

================================

Block 0x7e
[0x7e:0x88]
---
Predecessors: [0x22]
Successors: [0x9d]
---
0x7e JUMPDEST
0x7f PUSH1 0x9d
0x81 PUSH1 0x0
0x83 SLOAD
0x84 PUSH1 0xff
0x86 AND
0x87 DUP2
0x88 JUMP
---
0x7e: JUMPDEST 
0x7f: V41 = 0x9d
0x81: V42 = 0x0
0x83: V43 = S[0x0]
0x84: V44 = 0xff
0x86: V45 = AND 0xff V43
0x88: JUMP 0x9d
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x9d, V45]
Exit stack: [V7, 0x9d, V45]

================================

Block 0x89
[0x89:0x99]
---
Predecessors: [0x2c]
Successors: [0x9a, 0xac]
---
0x89 JUMPDEST
0x8a PUSH1 0x36
0x8c PUSH1 0x4
0x8e CALLDATALOAD
0x8f PUSH1 0x0
0x91 SLOAD
0x92 PUSH1 0xff
0x94 AND
0x95 ISZERO
0x96 ISZERO
0x97 PUSH1 0xac
0x99 JUMPI
---
0x89: JUMPDEST 
0x8a: V46 = 0x36
0x8c: V47 = 0x4
0x8e: V48 = CALLDATALOAD 0x4
0x8f: V49 = 0x0
0x91: V50 = S[0x0]
0x92: V51 = 0xff
0x94: V52 = AND 0xff V50
0x95: V53 = ISZERO V52
0x96: V54 = ISZERO V53
0x97: V55 = 0xac
0x99: JUMPI 0xac V54
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x36, V48]
Exit stack: [V7, 0x36, V48]

================================

Block 0x9a
[0x9a:0x9c]
---
Predecessors: [0x89]
Successors: []
---
0x9a PUSH1 0x2
0x9c JUMP
---
0x9a: V56 = 0x2
0x9c: THROW 
---
Entry stack: [V7, 0x36, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x36, V48]

================================

Block 0x9d
[0x9d:0xa8]
---
Predecessors: [0x7e]
Successors: []
---
0x9d JUMPDEST
0x9e ISZERO
0x9f ISZERO
0xa0 PUSH1 0x60
0xa2 SWAP1
0xa3 DUP2
0xa4 MSTORE
0xa5 PUSH1 0x20
0xa7 SWAP1
0xa8 RETURN
---
0x9d: JUMPDEST 
0x9e: V57 = ISZERO V45
0x9f: V58 = ISZERO V57
0xa0: V59 = 0x60
0xa4: M[0x60] = V58
0xa5: V60 = 0x20
0xa8: RETURN 0x60 0x20
---
Entry stack: [V7, 0x9d, V45]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x9d]

================================

Block 0xa9
[0xa9:0xab]
---
Predecessors: [0xac]
Successors: [0x36]
---
0xa9 JUMPDEST
0xaa POP
0xab JUMP
---
0xa9: JUMPDEST 
0xab: JUMP 0x36
---
Entry stack: [V7, 0x36, V33]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0xac
[0xac:0xda]
---
Predecessors: [0x6b, 0x89]
Successors: [0xa9, 0xdb]
---
0xac JUMPDEST
0xad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2 DUP2
0xc3 AND
0xc4 PUSH1 0x0
0xc6 CALLVALUE
0xc7 PUSH1 0x60
0xc9 DUP3
0xca DUP2
0xcb DUP2
0xcc DUP2
0xcd DUP6
0xce DUP9
0xcf DUP4
0xd0 CALL
0xd1 SWAP4
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 POP
0xd6 ISZERO
0xd7 ISZERO
0xd8 PUSH1 0xa9
0xda JUMPI
---
0xac: JUMPDEST 
0xad: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V62 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V63 = 0x0
0xc6: V64 = CALLVALUE
0xc7: V65 = 0x60
0xd0: V66 = CALL 0x0 V62 V64 0x60 0x0 0x60 0x0
0xd6: V67 = ISZERO V66
0xd7: V68 = ISZERO V67
0xd8: V69 = 0xa9
0xda: JUMPI 0xa9 V68
---
Entry stack: [V7, 0x36, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x36, S0]

================================

Block 0xdb
[0xdb:0xdd]
---
Predecessors: [0xac]
Successors: []
---
0xdb PUSH1 0x2
0xdd JUMP
---
0xdb: V70 = 0x2
0xdd: THROW 
---
Entry stack: [V7, 0x36, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x36, S0]

================================

Function 0:
Public function signature: 0x1288c42a
Entry block: 0x38
Exit block: 0x36
Body: 0x36, 0x38

Function 1:
Public function signature: 0x1301ee02
Entry block: 0x6b
Exit block: 0x36
Body: 0x36, 0x6b

Function 2:
Public function signature: 0x16c72721
Entry block: 0x7e
Exit block: 0x9d
Body: 0x7e, 0x9d

Function 3:
Public function signature: 0xd4245e5b
Entry block: 0x89
Exit block: 0x36
Body: 0x36, 0x89

Function 4:
Public fallback function
Entry block: 0x36
Exit block: 0x36
Body: 0x36

Function 5:
Private function
Entry block: 0xac
Exit block: 0xa9
Body: 0xa9, 0xac

