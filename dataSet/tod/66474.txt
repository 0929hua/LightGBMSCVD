Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x8f]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x7420a41
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x8f
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x7420a41
0x3b: V13 = EQ V11 0x7420a41
0x3c: V14 = 0x8f
0x3f: JUMPI 0x8f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xb3]
---
0x40 DUP1
0x41 PUSH4 0x6b7cc44f
0x46 EQ
0x47 PUSH2 0xb3
0x4a JUMPI
---
0x41: V15 = 0x6b7cc44f
0x46: V16 = EQ 0x6b7cc44f V11
0x47: V17 = 0xb3
0x4a: JUMPI 0xb3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x13d]
---
0x4b DUP1
0x4c PUSH4 0x7362377b
0x51 EQ
0x52 PUSH2 0x13d
0x55 JUMPI
---
0x4c: V18 = 0x7362377b
0x51: V19 = EQ 0x7362377b V11
0x52: V20 = 0x13d
0x55: JUMPI 0x13d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x152]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0x152
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0x152
0x60: JUMPI 0x152 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x183]
---
0x61 DUP1
0x62 PUSH4 0x9094fd50
0x67 EQ
0x68 PUSH2 0x183
0x6b JUMPI
---
0x62: V24 = 0x9094fd50
0x67: V25 = EQ 0x9094fd50 V11
0x68: V26 = 0x183
0x6b: JUMPI 0x183 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x228]
---
0x6c DUP1
0x6d PUSH4 0xbeb0a416
0x72 EQ
0x73 PUSH2 0x228
0x76 JUMPI
---
0x6d: V27 = 0xbeb0a416
0x72: V28 = EQ 0xbeb0a416 V11
0x73: V29 = 0x228
0x76: JUMPI 0x228 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x23d]
---
0x77 DUP1
0x78 PUSH4 0xf2fde38b
0x7d EQ
0x7e PUSH2 0x23d
0x81 JUMPI
---
0x78: V30 = 0xf2fde38b
0x7d: V31 = EQ 0xf2fde38b V11
0x7e: V32 = 0x23d
0x81: JUMPI 0x23d V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x25e]
---
0x82 DUP1
0x83 PUSH4 0xfc0c546a
0x88 EQ
0x89 PUSH2 0x25e
0x8c JUMPI
---
0x83: V33 = 0xfc0c546a
0x88: V34 = EQ 0xfc0c546a V11
0x89: V35 = 0x25e
0x8c: JUMPI 0x25e V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x0, 0x82, 0x2c0, 0x3e6, 0x45e, 0x4d6, 0x5ac]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V11, 0x8d, V145, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V145, S0]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0xd]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V36 = CALLVALUE
0x92: V37 = ISZERO V36
0x93: V38 = 0x9b
0x96: JUMPI 0x9b V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V39 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9b
[0x9b:0xb2]
---
Predecessors: [0x8f]
Successors: [0x273]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0x8d
0xa0 PUSH1 0x1
0xa2 PUSH1 0xa0
0xa4 PUSH1 0x2
0xa6 EXP
0xa7 SUB
0xa8 PUSH1 0x4
0xaa CALLDATALOAD
0xab AND
0xac PUSH1 0x24
0xae CALLDATALOAD
0xaf PUSH2 0x273
0xb2 JUMP
---
0x9b: JUMPDEST 
0x9d: V40 = 0x8d
0xa0: V41 = 0x1
0xa2: V42 = 0xa0
0xa4: V43 = 0x2
0xa6: V44 = EXP 0x2 0xa0
0xa7: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8: V46 = 0x4
0xaa: V47 = CALLDATALOAD 0x4
0xab: V48 = AND V47 0xffffffffffffffffffffffffffffffffffffffff
0xac: V49 = 0x24
0xae: V50 = CALLDATALOAD 0x24
0xaf: V51 = 0x273
0xb2: JUMP 0x273
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x8d, V48, V50]
Exit stack: [V11, 0x8d, V48, V50]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0x40]
Successors: [0xbb, 0xbf]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 DUP1
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xb3: JUMPDEST 
0xb4: V52 = CALLVALUE
0xb6: V53 = ISZERO V52
0xb7: V54 = 0xbf
0xba: JUMPI 0xbf V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V52]
Exit stack: [V11, V52]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xb3]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V55 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52]

================================

Block 0xbf
[0xbf:0xc7]
---
Predecessors: [0xb3]
Successors: [0x309]
---
0xbf JUMPDEST
0xc0 POP
0xc1 PUSH2 0xc8
0xc4 PUSH2 0x309
0xc7 JUMP
---
0xbf: JUMPDEST 
0xc1: V56 = 0xc8
0xc4: V57 = 0x309
0xc7: JUMP 0x309
---
Entry stack: [V11, V52]
Stack pops: 1
Stack additions: [0xc8]
Exit stack: [V11, 0xc8]

================================

Block 0xc8
[0xc8:0xe9]
---
Predecessors: [0x38c]
Successors: [0xea]
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb DUP1
0xcc MLOAD
0xcd PUSH1 0x20
0xcf DUP1
0xd0 DUP3
0xd1 MSTORE
0xd2 DUP4
0xd3 MLOAD
0xd4 DUP2
0xd5 DUP4
0xd6 ADD
0xd7 MSTORE
0xd8 DUP4
0xd9 MLOAD
0xda SWAP2
0xdb SWAP3
0xdc DUP4
0xdd SWAP3
0xde SWAP1
0xdf DUP4
0xe0 ADD
0xe1 SWAP2
0xe2 DUP6
0xe3 ADD
0xe4 SWAP1
0xe5 DUP1
0xe6 DUP4
0xe7 DUP4
0xe8 PUSH1 0x0
---
0xc8: JUMPDEST 
0xc9: V58 = 0x40
0xcc: V59 = M[0x40]
0xcd: V60 = 0x20
0xd1: M[V59] = 0x20
0xd3: V61 = M[S0]
0xd6: V62 = ADD V59 0x20
0xd7: M[V62] = V61
0xd9: V63 = M[S0]
0xe0: V64 = ADD V59 0x40
0xe3: V65 = ADD S0 0x20
0xe8: V66 = 0x0
---
Entry stack: [V11, 0xc8, S0]
Stack pops: 1
Stack additions: [S0, V59, V59, V64, V65, V63, V63, V64, V65, 0x0]
Exit stack: [V11, 0xc8, S0, V59, V59, V64, V65, V63, V63, V64, V65, 0x0]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xc8, 0xf3]
Successors: [0xf3, 0x102]
---
0xea JUMPDEST
0xeb DUP4
0xec DUP2
0xed LT
0xee ISZERO
0xef PUSH2 0x102
0xf2 JUMPI
---
0xea: JUMPDEST 
0xed: V67 = LT S0 V63
0xee: V68 = ISZERO V67
0xef: V69 = 0x102
0xf2: JUMPI 0x102 V68
---
Entry stack: [V11, 0xc8, S9, V59, V59, V64, V65, V63, V63, V64, V65, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xc8, S9, V59, V59, V64, V65, V63, V63, V64, V65, S0]

================================

Block 0xf3
[0xf3:0x101]
---
Predecessors: [0xea]
Successors: [0xea]
---
0xf3 DUP2
0xf4 DUP2
0xf5 ADD
0xf6 MLOAD
0xf7 DUP4
0xf8 DUP3
0xf9 ADD
0xfa MSTORE
0xfb PUSH1 0x20
0xfd ADD
0xfe PUSH2 0xea
0x101 JUMP
---
0xf5: V70 = ADD S0 V65
0xf6: V71 = M[V70]
0xf9: V72 = ADD S0 V64
0xfa: M[V72] = V71
0xfb: V73 = 0x20
0xfd: V74 = ADD 0x20 S0
0xfe: V75 = 0xea
0x101: JUMP 0xea
---
Entry stack: [V11, 0xc8, S9, V59, V59, V64, V65, V63, V63, V64, V65, S0]
Stack pops: 3
Stack additions: [S2, S1, V74]
Exit stack: [V11, 0xc8, S9, V59, V59, V64, V65, V63, V63, V64, V65, V74]

================================

Block 0x102
[0x102:0x115]
---
Predecessors: [0xea]
Successors: [0x116, 0x12f]
---
0x102 JUMPDEST
0x103 POP
0x104 POP
0x105 POP
0x106 POP
0x107 SWAP1
0x108 POP
0x109 SWAP1
0x10a DUP2
0x10b ADD
0x10c SWAP1
0x10d PUSH1 0x1f
0x10f AND
0x110 DUP1
0x111 ISZERO
0x112 PUSH2 0x12f
0x115 JUMPI
---
0x102: JUMPDEST 
0x10b: V76 = ADD V63 V64
0x10d: V77 = 0x1f
0x10f: V78 = AND 0x1f V63
0x111: V79 = ISZERO V78
0x112: V80 = 0x12f
0x115: JUMPI 0x12f V79
---
Entry stack: [V11, 0xc8, S9, V59, V59, V64, V65, V63, V63, V64, V65, S0]
Stack pops: 7
Stack additions: [V76, V78]
Exit stack: [V11, 0xc8, S9, V59, V59, V76, V78]

================================

Block 0x116
[0x116:0x12e]
---
Predecessors: [0x102]
Successors: [0x12f]
---
0x116 DUP1
0x117 DUP3
0x118 SUB
0x119 DUP1
0x11a MLOAD
0x11b PUSH1 0x1
0x11d DUP4
0x11e PUSH1 0x20
0x120 SUB
0x121 PUSH2 0x100
0x124 EXP
0x125 SUB
0x126 NOT
0x127 AND
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP2
0x12e POP
---
0x118: V81 = SUB V76 V78
0x11a: V82 = M[V81]
0x11b: V83 = 0x1
0x11e: V84 = 0x20
0x120: V85 = SUB 0x20 V78
0x121: V86 = 0x100
0x124: V87 = EXP 0x100 V85
0x125: V88 = SUB V87 0x1
0x126: V89 = NOT V88
0x127: V90 = AND V89 V82
0x129: M[V81] = V90
0x12a: V91 = 0x20
0x12c: V92 = ADD 0x20 V81
---
Entry stack: [V11, 0xc8, S4, V59, V59, V76, V78]
Stack pops: 2
Stack additions: [V92, S0]
Exit stack: [V11, 0xc8, S4, V59, V59, V92, V78]

================================

Block 0x12f
[0x12f:0x13c]
---
Predecessors: [0x102, 0x116]
Successors: []
---
0x12f JUMPDEST
0x130 POP
0x131 SWAP3
0x132 POP
0x133 POP
0x134 POP
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0x12f: JUMPDEST 
0x135: V93 = 0x40
0x137: V94 = M[0x40]
0x13a: V95 = SUB S1 V94
0x13c: RETURN V94 V95
---
Entry stack: [V11, 0xc8, S4, V59, V59, S1, V78]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xc8]

================================

Block 0x13d
[0x13d:0x144]
---
Predecessors: [0x4b]
Successors: [0x145, 0x149]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13d: JUMPDEST 
0x13e: V96 = CALLVALUE
0x140: V97 = ISZERO V96
0x141: V98 = 0x149
0x144: JUMPI 0x149 V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13d]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V99 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x149
[0x149:0x151]
---
Predecessors: [0x13d]
Successors: [0x394]
---
0x149 JUMPDEST
0x14a POP
0x14b PUSH2 0x8d
0x14e PUSH2 0x394
0x151 JUMP
---
0x149: JUMPDEST 
0x14b: V100 = 0x8d
0x14e: V101 = 0x394
0x151: JUMP 0x394
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0x56]
Successors: [0x15a, 0x15e]
---
0x152 JUMPDEST
0x153 CALLVALUE
0x154 DUP1
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0x152: JUMPDEST 
0x153: V102 = CALLVALUE
0x155: V103 = ISZERO V102
0x156: V104 = 0x15e
0x159: JUMPI 0x15e V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x152]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V105 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x15e
[0x15e:0x166]
---
Predecessors: [0x152]
Successors: [0x3e9]
---
0x15e JUMPDEST
0x15f POP
0x160 PUSH2 0x167
0x163 PUSH2 0x3e9
0x166 JUMP
---
0x15e: JUMPDEST 
0x160: V106 = 0x167
0x163: V107 = 0x3e9
0x166: JUMP 0x3e9
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x167]
Exit stack: [V11, 0x167]

================================

Block 0x167
[0x167:0x182]
---
Predecessors: [0x3e9, 0x505]
Successors: []
---
0x167 JUMPDEST
0x168 PUSH1 0x40
0x16a DUP1
0x16b MLOAD
0x16c PUSH1 0x1
0x16e PUSH1 0xa0
0x170 PUSH1 0x2
0x172 EXP
0x173 SUB
0x174 SWAP1
0x175 SWAP3
0x176 AND
0x177 DUP3
0x178 MSTORE
0x179 MLOAD
0x17a SWAP1
0x17b DUP2
0x17c SWAP1
0x17d SUB
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP1
0x182 RETURN
---
0x167: JUMPDEST 
0x168: V108 = 0x40
0x16b: V109 = M[0x40]
0x16c: V110 = 0x1
0x16e: V111 = 0xa0
0x170: V112 = 0x2
0x172: V113 = EXP 0x2 0xa0
0x173: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V115 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x178: M[V109] = V115
0x179: V116 = M[0x40]
0x17d: V117 = SUB V109 V116
0x17e: V118 = 0x20
0x180: V119 = ADD 0x20 V117
0x182: RETURN V116 V119
---
Entry stack: [V11, 0x167, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x167]

================================

Block 0x183
[0x183:0x18a]
---
Predecessors: [0x61]
Successors: [0x18b, 0x18f]
---
0x183 JUMPDEST
0x184 CALLVALUE
0x185 DUP1
0x186 ISZERO
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x183: JUMPDEST 
0x184: V120 = CALLVALUE
0x186: V121 = ISZERO V120
0x187: V122 = 0x18f
0x18a: JUMPI 0x18f V121
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V120]
Exit stack: [V11, V120]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x183]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V123 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V11, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V120]

================================

Block 0x18f
[0x18f:0x227]
---
Predecessors: [0x183]
Successors: [0x3f8]
---
0x18f JUMPDEST
0x190 POP
0x191 PUSH1 0x40
0x193 DUP1
0x194 MLOAD
0x195 PUSH1 0x20
0x197 PUSH1 0x4
0x199 PUSH1 0x24
0x19b DUP1
0x19c CALLDATALOAD
0x19d DUP3
0x19e DUP2
0x19f ADD
0x1a0 CALLDATALOAD
0x1a1 PUSH1 0x1f
0x1a3 DUP2
0x1a4 ADD
0x1a5 DUP6
0x1a6 SWAP1
0x1a7 DIV
0x1a8 DUP6
0x1a9 MUL
0x1aa DUP7
0x1ab ADD
0x1ac DUP6
0x1ad ADD
0x1ae SWAP1
0x1af SWAP7
0x1b0 MSTORE
0x1b1 DUP6
0x1b2 DUP6
0x1b3 MSTORE
0x1b4 PUSH2 0x8d
0x1b7 SWAP6
0x1b8 DUP4
0x1b9 CALLDATALOAD
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 AND
0x1c3 SWAP6
0x1c4 CALLDATASIZE
0x1c5 SWAP6
0x1c6 PUSH1 0x44
0x1c8 SWAP5
0x1c9 SWAP2
0x1ca SWAP4
0x1cb SWAP1
0x1cc SWAP2
0x1cd ADD
0x1ce SWAP2
0x1cf SWAP1
0x1d0 DUP2
0x1d1 SWAP1
0x1d2 DUP5
0x1d3 ADD
0x1d4 DUP4
0x1d5 DUP3
0x1d6 DUP1
0x1d7 DUP3
0x1d8 DUP5
0x1d9 CALLDATACOPY
0x1da POP
0x1db POP
0x1dc PUSH1 0x40
0x1de DUP1
0x1df MLOAD
0x1e0 PUSH1 0x20
0x1e2 PUSH1 0x1f
0x1e4 DUP10
0x1e5 CALLDATALOAD
0x1e6 DUP12
0x1e7 ADD
0x1e8 DUP1
0x1e9 CALLDATALOAD
0x1ea SWAP2
0x1eb DUP3
0x1ec ADD
0x1ed DUP4
0x1ee SWAP1
0x1ef DIV
0x1f0 DUP4
0x1f1 MUL
0x1f2 DUP5
0x1f3 ADD
0x1f4 DUP4
0x1f5 ADD
0x1f6 SWAP1
0x1f7 SWAP5
0x1f8 MSTORE
0x1f9 DUP1
0x1fa DUP4
0x1fb MSTORE
0x1fc SWAP8
0x1fd SWAP11
0x1fe SWAP10
0x1ff SWAP9
0x200 DUP2
0x201 ADD
0x202 SWAP8
0x203 SWAP2
0x204 SWAP7
0x205 POP
0x206 SWAP2
0x207 DUP3
0x208 ADD
0x209 SWAP5
0x20a POP
0x20b SWAP3
0x20c POP
0x20d DUP3
0x20e SWAP2
0x20f POP
0x210 DUP5
0x211 ADD
0x212 DUP4
0x213 DUP3
0x214 DUP1
0x215 DUP3
0x216 DUP5
0x217 CALLDATACOPY
0x218 POP
0x219 SWAP5
0x21a SWAP8
0x21b POP
0x21c PUSH2 0x3f8
0x21f SWAP7
0x220 POP
0x221 POP
0x222 POP
0x223 POP
0x224 POP
0x225 POP
0x226 POP
0x227 JUMP
---
0x18f: JUMPDEST 
0x191: V124 = 0x40
0x194: V125 = M[0x40]
0x195: V126 = 0x20
0x197: V127 = 0x4
0x199: V128 = 0x24
0x19c: V129 = CALLDATALOAD 0x24
0x19f: V130 = ADD V129 0x4
0x1a0: V131 = CALLDATALOAD V130
0x1a1: V132 = 0x1f
0x1a4: V133 = ADD V131 0x1f
0x1a7: V134 = DIV V133 0x20
0x1a9: V135 = MUL 0x20 V134
0x1ab: V136 = ADD V125 V135
0x1ad: V137 = ADD 0x20 V136
0x1b0: M[0x40] = V137
0x1b3: M[V125] = V131
0x1b4: V138 = 0x8d
0x1b9: V139 = CALLDATALOAD 0x4
0x1ba: V140 = 0x1
0x1bc: V141 = 0xa0
0x1be: V142 = 0x2
0x1c0: V143 = EXP 0x2 0xa0
0x1c1: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1c4: V146 = CALLDATASIZE
0x1c6: V147 = 0x44
0x1cd: V148 = ADD 0x24 V129
0x1d3: V149 = ADD V125 0x20
0x1d9: CALLDATACOPY V149 V148 V131
0x1dc: V150 = 0x40
0x1df: V151 = M[0x40]
0x1e0: V152 = 0x20
0x1e2: V153 = 0x1f
0x1e5: V154 = CALLDATALOAD 0x44
0x1e7: V155 = ADD 0x4 V154
0x1e9: V156 = CALLDATALOAD V155
0x1ec: V157 = ADD V156 0x1f
0x1ef: V158 = DIV V157 0x20
0x1f1: V159 = MUL 0x20 V158
0x1f3: V160 = ADD V151 V159
0x1f5: V161 = ADD 0x20 V160
0x1f8: M[0x40] = V161
0x1fb: M[V151] = V156
0x201: V162 = ADD 0x20 0x44
0x208: V163 = ADD 0x20 V155
0x211: V164 = ADD V151 0x20
0x217: CALLDATACOPY V164 V163 V156
0x21c: V165 = 0x3f8
0x227: JUMP 0x3f8
---
Entry stack: [V11, V120]
Stack pops: 1
Stack additions: [0x8d, V145, V125, V151]
Exit stack: [V11, 0x8d, V145, V125, V151]

================================

Block 0x228
[0x228:0x22f]
---
Predecessors: [0x6c]
Successors: [0x230, 0x234]
---
0x228 JUMPDEST
0x229 CALLVALUE
0x22a DUP1
0x22b ISZERO
0x22c PUSH2 0x234
0x22f JUMPI
---
0x228: JUMPDEST 
0x229: V166 = CALLVALUE
0x22b: V167 = ISZERO V166
0x22c: V168 = 0x234
0x22f: JUMPI 0x234 V167
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V11, V166]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x228]
Successors: []
---
0x230 PUSH1 0x0
0x232 DUP1
0x233 REVERT
---
0x230: V169 = 0x0
0x233: REVERT 0x0 0x0
---
Entry stack: [V11, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V166]

================================

Block 0x234
[0x234:0x23c]
---
Predecessors: [0x228]
Successors: [0x464]
---
0x234 JUMPDEST
0x235 POP
0x236 PUSH2 0xc8
0x239 PUSH2 0x464
0x23c JUMP
---
0x234: JUMPDEST 
0x236: V170 = 0xc8
0x239: V171 = 0x464
0x23c: JUMP 0x464
---
Entry stack: [V11, V166]
Stack pops: 1
Stack additions: [0xc8]
Exit stack: [V11, 0xc8]

================================

Block 0x23d
[0x23d:0x244]
---
Predecessors: [0x77]
Successors: [0x245, 0x249]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f DUP1
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x23d: JUMPDEST 
0x23e: V172 = CALLVALUE
0x240: V173 = ISZERO V172
0x241: V174 = 0x249
0x244: JUMPI 0x249 V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V11, V172]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x23d]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V175 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V11, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V172]

================================

Block 0x249
[0x249:0x25d]
---
Predecessors: [0x23d]
Successors: [0x4bf]
---
0x249 JUMPDEST
0x24a POP
0x24b PUSH2 0x8d
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 PUSH1 0x4
0x258 CALLDATALOAD
0x259 AND
0x25a PUSH2 0x4bf
0x25d JUMP
---
0x249: JUMPDEST 
0x24b: V176 = 0x8d
0x24e: V177 = 0x1
0x250: V178 = 0xa0
0x252: V179 = 0x2
0x254: V180 = EXP 0x2 0xa0
0x255: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V182 = 0x4
0x258: V183 = CALLDATALOAD 0x4
0x259: V184 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V185 = 0x4bf
0x25d: JUMP 0x4bf
---
Entry stack: [V11, V172]
Stack pops: 1
Stack additions: [0x8d, V184]
Exit stack: [V11, 0x8d, V184]

================================

Block 0x25e
[0x25e:0x265]
---
Predecessors: [0x82]
Successors: [0x266, 0x26a]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 DUP1
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x25e: JUMPDEST 
0x25f: V186 = CALLVALUE
0x261: V187 = ISZERO V186
0x262: V188 = 0x26a
0x265: JUMPI 0x26a V187
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V186]
Exit stack: [V11, V186]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x25e]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V189 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V11, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V186]

================================

Block 0x26a
[0x26a:0x272]
---
Predecessors: [0x25e]
Successors: [0x505]
---
0x26a JUMPDEST
0x26b POP
0x26c PUSH2 0x167
0x26f PUSH2 0x505
0x272 JUMP
---
0x26a: JUMPDEST 
0x26c: V190 = 0x167
0x26f: V191 = 0x505
0x272: JUMP 0x505
---
Entry stack: [V11, V186]
Stack pops: 1
Stack additions: [0x167]
Exit stack: [V11, 0x167]

================================

Block 0x273
[0x273:0x285]
---
Predecessors: [0x9b]
Successors: [0x286, 0x28a]
---
0x273 JUMPDEST
0x274 PUSH1 0x0
0x276 SLOAD
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f AND
0x280 CALLER
0x281 EQ
0x282 PUSH2 0x28a
0x285 JUMPI
---
0x273: JUMPDEST 
0x274: V192 = 0x0
0x276: V193 = S[0x0]
0x277: V194 = 0x1
0x279: V195 = 0xa0
0x27b: V196 = 0x2
0x27d: V197 = EXP 0x2 0xa0
0x27e: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x280: V200 = CALLER
0x281: V201 = EQ V200 V199
0x282: V202 = 0x28a
0x285: JUMPI 0x28a V201
---
Entry stack: [V11, 0x8d, V48, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V48, V50]

================================

Block 0x286
[0x286:0x289]
---
Predecessors: [0x273]
Successors: []
---
0x286 PUSH1 0x0
0x288 DUP1
0x289 REVERT
---
0x286: V203 = 0x0
0x289: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V48, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V48, V50]

================================

Block 0x28a
[0x28a:0x2b6]
---
Predecessors: [0x273]
Successors: [0x2b7, 0x2c0]
---
0x28a JUMPDEST
0x28b PUSH1 0x40
0x28d MLOAD
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 DUP4
0x297 AND
0x298 SWAP1
0x299 DUP3
0x29a ISZERO
0x29b PUSH2 0x8fc
0x29e MUL
0x29f SWAP1
0x2a0 DUP4
0x2a1 SWAP1
0x2a2 PUSH1 0x0
0x2a4 DUP2
0x2a5 DUP2
0x2a6 DUP2
0x2a7 DUP6
0x2a8 DUP9
0x2a9 DUP9
0x2aa CALL
0x2ab SWAP4
0x2ac POP
0x2ad POP
0x2ae POP
0x2af POP
0x2b0 ISZERO
0x2b1 DUP1
0x2b2 ISZERO
0x2b3 PUSH2 0x2c0
0x2b6 JUMPI
---
0x28a: JUMPDEST 
0x28b: V204 = 0x40
0x28d: V205 = M[0x40]
0x28e: V206 = 0x1
0x290: V207 = 0xa0
0x292: V208 = 0x2
0x294: V209 = EXP 0x2 0xa0
0x295: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V211 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V212 = ISZERO V50
0x29b: V213 = 0x8fc
0x29e: V214 = MUL 0x8fc V212
0x2a2: V215 = 0x0
0x2aa: V216 = CALL V214 V211 V50 V205 0x0 V205 0x0
0x2b0: V217 = ISZERO V216
0x2b2: V218 = ISZERO V217
0x2b3: V219 = 0x2c0
0x2b6: JUMPI 0x2c0 V218
---
Entry stack: [V11, 0x8d, V48, V50]
Stack pops: 2
Stack additions: [S1, S0, V217]
Exit stack: [V11, 0x8d, V48, V50, V217]

================================

Block 0x2b7
[0x2b7:0x2bf]
---
Predecessors: [0x28a]
Successors: []
---
0x2b7 RETURNDATASIZE
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb RETURNDATACOPY
0x2bc RETURNDATASIZE
0x2bd PUSH1 0x0
0x2bf REVERT
---
0x2b7: V220 = RETURNDATASIZE
0x2b8: V221 = 0x0
0x2bb: RETURNDATACOPY 0x0 0x0 V220
0x2bc: V222 = RETURNDATASIZE
0x2bd: V223 = 0x0
0x2bf: REVERT 0x0 V222
---
Entry stack: [V11, 0x8d, V48, V50, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V48, V50, V217]

================================

Block 0x2c0
[0x2c0:0x308]
---
Predecessors: [0x28a]
Successors: [0x8d]
---
0x2c0 JUMPDEST
0x2c1 POP
0x2c2 PUSH1 0x40
0x2c4 DUP1
0x2c5 MLOAD
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce DUP5
0x2cf AND
0x2d0 DUP2
0x2d1 MSTORE
0x2d2 PUSH1 0x20
0x2d4 DUP2
0x2d5 ADD
0x2d6 DUP4
0x2d7 SWAP1
0x2d8 MSTORE
0x2d9 DUP2
0x2da MLOAD
0x2db PUSH32 0x619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9
0x2fc SWAP3
0x2fd SWAP2
0x2fe DUP2
0x2ff SWAP1
0x300 SUB
0x301 SWAP1
0x302 SWAP2
0x303 ADD
0x304 SWAP1
0x305 LOG1
0x306 POP
0x307 POP
0x308 JUMP
---
0x2c0: JUMPDEST 
0x2c2: V224 = 0x40
0x2c5: V225 = M[0x40]
0x2c6: V226 = 0x1
0x2c8: V227 = 0xa0
0x2ca: V228 = 0x2
0x2cc: V229 = EXP 0x2 0xa0
0x2cd: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cf: V231 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: M[V225] = V231
0x2d2: V232 = 0x20
0x2d5: V233 = ADD V225 0x20
0x2d8: M[V233] = V50
0x2da: V234 = M[0x40]
0x2db: V235 = 0x619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9
0x300: V236 = SUB V225 V234
0x303: V237 = ADD 0x40 V236
0x305: LOG V234 V237 0x619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9
0x308: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V48, V50, V217]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x309
[0x309:0x345]
---
Predecessors: [0xbf]
Successors: [0x346, 0x38c]
---
0x309 JUMPDEST
0x30a PUSH1 0x2
0x30c DUP1
0x30d SLOAD
0x30e PUSH1 0x40
0x310 DUP1
0x311 MLOAD
0x312 PUSH1 0x20
0x314 PUSH1 0x1
0x316 DUP5
0x317 AND
0x318 ISZERO
0x319 PUSH2 0x100
0x31c MUL
0x31d PUSH1 0x0
0x31f NOT
0x320 ADD
0x321 SWAP1
0x322 SWAP4
0x323 AND
0x324 DUP5
0x325 SWAP1
0x326 DIV
0x327 PUSH1 0x1f
0x329 DUP2
0x32a ADD
0x32b DUP5
0x32c SWAP1
0x32d DIV
0x32e DUP5
0x32f MUL
0x330 DUP3
0x331 ADD
0x332 DUP5
0x333 ADD
0x334 SWAP1
0x335 SWAP3
0x336 MSTORE
0x337 DUP2
0x338 DUP2
0x339 MSTORE
0x33a SWAP3
0x33b SWAP2
0x33c DUP4
0x33d ADD
0x33e DUP3
0x33f DUP3
0x340 DUP1
0x341 ISZERO
0x342 PUSH2 0x38c
0x345 JUMPI
---
0x309: JUMPDEST 
0x30a: V238 = 0x2
0x30d: V239 = S[0x2]
0x30e: V240 = 0x40
0x311: V241 = M[0x40]
0x312: V242 = 0x20
0x314: V243 = 0x1
0x317: V244 = AND V239 0x1
0x318: V245 = ISZERO V244
0x319: V246 = 0x100
0x31c: V247 = MUL 0x100 V245
0x31d: V248 = 0x0
0x31f: V249 = NOT 0x0
0x320: V250 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V247
0x323: V251 = AND V239 V250
0x326: V252 = DIV V251 0x2
0x327: V253 = 0x1f
0x32a: V254 = ADD V252 0x1f
0x32d: V255 = DIV V254 0x20
0x32f: V256 = MUL 0x20 V255
0x331: V257 = ADD V241 V256
0x333: V258 = ADD 0x20 V257
0x336: M[0x40] = V258
0x339: M[V241] = V252
0x33d: V259 = ADD V241 0x20
0x341: V260 = ISZERO V252
0x342: V261 = 0x38c
0x345: JUMPI 0x38c V260
---
Entry stack: [V11, 0xc8]
Stack pops: 0
Stack additions: [V241, 0x2, V252, V259, 0x2, V252]
Exit stack: [V11, 0xc8, V241, 0x2, V252, V259, 0x2, V252]

================================

Block 0x346
[0x346:0x34d]
---
Predecessors: [0x309]
Successors: [0x34e, 0x361]
---
0x346 DUP1
0x347 PUSH1 0x1f
0x349 LT
0x34a PUSH2 0x361
0x34d JUMPI
---
0x347: V262 = 0x1f
0x349: V263 = LT 0x1f V252
0x34a: V264 = 0x361
0x34d: JUMPI 0x361 V263
---
Entry stack: [V11, 0xc8, V241, 0x2, V252, V259, 0x2, V252]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xc8, V241, 0x2, V252, V259, 0x2, V252]

================================

Block 0x34e
[0x34e:0x360]
---
Predecessors: [0x346]
Successors: [0x38c]
---
0x34e PUSH2 0x100
0x351 DUP1
0x352 DUP4
0x353 SLOAD
0x354 DIV
0x355 MUL
0x356 DUP4
0x357 MSTORE
0x358 SWAP2
0x359 PUSH1 0x20
0x35b ADD
0x35c SWAP2
0x35d PUSH2 0x38c
0x360 JUMP
---
0x34e: V265 = 0x100
0x353: V266 = S[0x2]
0x354: V267 = DIV V266 0x100
0x355: V268 = MUL V267 0x100
0x357: M[V259] = V268
0x359: V269 = 0x20
0x35b: V270 = ADD 0x20 V259
0x35d: V271 = 0x38c
0x360: JUMP 0x38c
---
Entry stack: [V11, 0xc8, V241, 0x2, V252, V259, 0x2, V252]
Stack pops: 3
Stack additions: [V270, S1, S0]
Exit stack: [V11, 0xc8, V241, 0x2, V252, V270, 0x2, V252]

================================

Block 0x361
[0x361:0x36e]
---
Predecessors: [0x346, 0x4a4]
Successors: [0x36f]
---
0x361 JUMPDEST
0x362 DUP3
0x363 ADD
0x364 SWAP2
0x365 SWAP1
0x366 PUSH1 0x0
0x368 MSTORE
0x369 PUSH1 0x20
0x36b PUSH1 0x0
0x36d SHA3
0x36e SWAP1
---
0x361: JUMPDEST 
0x363: V272 = ADD S2 S0
0x366: V273 = 0x0
0x368: M[0x0] = {0x2, 0x3}
0x369: V274 = 0x20
0x36b: V275 = 0x0
0x36d: V276 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xc8, S5, {0x2, 0x3}, S3, S2, {0x2, 0x3}, S0]
Stack pops: 3
Stack additions: [V272, V276, S2]
Exit stack: [V11, 0xc8, S5, {0x2, 0x3}, S3, V272, V276, S2]

================================

Block 0x36f
[0x36f:0x382]
---
Predecessors: [0x361, 0x36f]
Successors: [0x36f, 0x383]
---
0x36f JUMPDEST
0x370 DUP2
0x371 SLOAD
0x372 DUP2
0x373 MSTORE
0x374 SWAP1
0x375 PUSH1 0x1
0x377 ADD
0x378 SWAP1
0x379 PUSH1 0x20
0x37b ADD
0x37c DUP1
0x37d DUP4
0x37e GT
0x37f PUSH2 0x36f
0x382 JUMPI
---
0x36f: JUMPDEST 
0x371: V277 = S[S1]
0x373: M[S0] = V277
0x375: V278 = 0x1
0x377: V279 = ADD 0x1 S1
0x379: V280 = 0x20
0x37b: V281 = ADD 0x20 S0
0x37e: V282 = GT V272 V281
0x37f: V283 = 0x36f
0x382: JUMPI 0x36f V282
---
Entry stack: [V11, 0xc8, S5, {0x2, 0x3}, S3, V272, S1, S0]
Stack pops: 3
Stack additions: [S2, V279, V281]
Exit stack: [V11, 0xc8, S5, {0x2, 0x3}, S3, V272, V279, V281]

================================

Block 0x383
[0x383:0x38b]
---
Predecessors: [0x36f]
Successors: [0x38c]
---
0x383 DUP3
0x384 SWAP1
0x385 SUB
0x386 PUSH1 0x1f
0x388 AND
0x389 DUP3
0x38a ADD
0x38b SWAP2
---
0x385: V284 = SUB V281 V272
0x386: V285 = 0x1f
0x388: V286 = AND 0x1f V284
0x38a: V287 = ADD V272 V286
---
Entry stack: [V11, 0xc8, S5, {0x2, 0x3}, S3, V272, V279, V281]
Stack pops: 3
Stack additions: [V287, S1, S2]
Exit stack: [V11, 0xc8, S5, {0x2, 0x3}, S3, V287, V279, V272]

================================

Block 0x38c
[0x38c:0x393]
---
Predecessors: [0x309, 0x34e, 0x383, 0x464, 0x4ac]
Successors: [0xc8]
---
0x38c JUMPDEST
0x38d POP
0x38e POP
0x38f POP
0x390 POP
0x391 POP
0x392 DUP2
0x393 JUMP
---
0x38c: JUMPDEST 
0x393: JUMP 0xc8
---
Entry stack: [V11, 0xc8, S5, {0x2, 0x3}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xc8, S5]

================================

Block 0x394
[0x394:0x3a6]
---
Predecessors: [0x149]
Successors: [0x3a7, 0x3ab]
---
0x394 JUMPDEST
0x395 PUSH1 0x0
0x397 SLOAD
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 AND
0x3a1 CALLER
0x3a2 EQ
0x3a3 PUSH2 0x3ab
0x3a6 JUMPI
---
0x394: JUMPDEST 
0x395: V288 = 0x0
0x397: V289 = S[0x0]
0x398: V290 = 0x1
0x39a: V291 = 0xa0
0x39c: V292 = 0x2
0x39e: V293 = EXP 0x2 0xa0
0x39f: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a0: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x3a1: V296 = CALLER
0x3a2: V297 = EQ V296 V295
0x3a3: V298 = 0x3ab
0x3a6: JUMPI 0x3ab V297
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x3a7
[0x3a7:0x3aa]
---
Predecessors: [0x394]
Successors: []
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
---
0x3a7: V299 = 0x0
0x3aa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x3ab
[0x3ab:0x3dc]
---
Predecessors: [0x394]
Successors: [0x3dd, 0x3e6]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af SLOAD
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb SWAP1
0x3bc SWAP2
0x3bd AND
0x3be SWAP2
0x3bf ADDRESS
0x3c0 BALANCE
0x3c1 DUP1
0x3c2 ISZERO
0x3c3 PUSH2 0x8fc
0x3c6 MUL
0x3c7 SWAP3
0x3c8 SWAP1
0x3c9 SWAP2
0x3ca DUP2
0x3cb DUP2
0x3cc DUP2
0x3cd DUP6
0x3ce DUP9
0x3cf DUP9
0x3d0 CALL
0x3d1 SWAP4
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 POP
0x3d6 ISZERO
0x3d7 DUP1
0x3d8 ISZERO
0x3d9 PUSH2 0x3e6
0x3dc JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V300 = 0x0
0x3af: V301 = S[0x0]
0x3b0: V302 = 0x40
0x3b2: V303 = M[0x40]
0x3b3: V304 = 0x1
0x3b5: V305 = 0xa0
0x3b7: V306 = 0x2
0x3b9: V307 = EXP 0x2 0xa0
0x3ba: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V309 = AND V301 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V310 = ADDRESS
0x3c0: V311 = BALANCE V310
0x3c2: V312 = ISZERO V311
0x3c3: V313 = 0x8fc
0x3c6: V314 = MUL 0x8fc V312
0x3d0: V315 = CALL V314 V309 V311 V303 0x0 V303 0x0
0x3d6: V316 = ISZERO V315
0x3d8: V317 = ISZERO V316
0x3d9: V318 = 0x3e6
0x3dc: JUMPI 0x3e6 V317
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [V316]
Exit stack: [V11, 0x8d, V316]

================================

Block 0x3dd
[0x3dd:0x3e5]
---
Predecessors: [0x3ab]
Successors: []
---
0x3dd RETURNDATASIZE
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 RETURNDATACOPY
0x3e2 RETURNDATASIZE
0x3e3 PUSH1 0x0
0x3e5 REVERT
---
0x3dd: V319 = RETURNDATASIZE
0x3de: V320 = 0x0
0x3e1: RETURNDATACOPY 0x0 0x0 V319
0x3e2: V321 = RETURNDATASIZE
0x3e3: V322 = 0x0
0x3e5: REVERT 0x0 V321
---
Entry stack: [V11, 0x8d, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V316]

================================

Block 0x3e6
[0x3e6:0x3e8]
---
Predecessors: [0x3ab]
Successors: [0x8d]
---
0x3e6 JUMPDEST
0x3e7 POP
0x3e8 JUMP
---
0x3e6: JUMPDEST 
0x3e8: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V316]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e9
[0x3e9:0x3f7]
---
Predecessors: [0x15e]
Successors: [0x167]
---
0x3e9 JUMPDEST
0x3ea PUSH1 0x0
0x3ec SLOAD
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 AND
0x3f6 DUP2
0x3f7 JUMP
---
0x3e9: JUMPDEST 
0x3ea: V323 = 0x0
0x3ec: V324 = S[0x0]
0x3ed: V325 = 0x1
0x3ef: V326 = 0xa0
0x3f1: V327 = 0x2
0x3f3: V328 = EXP 0x2 0xa0
0x3f4: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x3f7: JUMP 0x167
---
Entry stack: [V11, 0x167]
Stack pops: 1
Stack additions: [S0, V330]
Exit stack: [V11, 0x167, V330]

================================

Block 0x3f8
[0x3f8:0x40a]
---
Predecessors: [0x18f]
Successors: [0x40b, 0x40f]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x0
0x3fb SLOAD
0x3fc PUSH1 0x1
0x3fe PUSH1 0xa0
0x400 PUSH1 0x2
0x402 EXP
0x403 SUB
0x404 AND
0x405 CALLER
0x406 EQ
0x407 PUSH2 0x40f
0x40a JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V331 = 0x0
0x3fb: V332 = S[0x0]
0x3fc: V333 = 0x1
0x3fe: V334 = 0xa0
0x400: V335 = 0x2
0x402: V336 = EXP 0x2 0xa0
0x403: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x404: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x405: V339 = CALLER
0x406: V340 = EQ V339 V338
0x407: V341 = 0x40f
0x40a: JUMPI 0x40f V340
---
Entry stack: [V11, 0x8d, V145, V125, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V145, V125, V151]

================================

Block 0x40b
[0x40b:0x40e]
---
Predecessors: [0x3f8]
Successors: []
---
0x40b PUSH1 0x0
0x40d DUP1
0x40e REVERT
---
0x40b: V342 = 0x0
0x40e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V145, V125, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V145, V125, V151]

================================

Block 0x40f
[0x40f:0x449]
---
Predecessors: [0x3f8]
Successors: [0x514]
---
0x40f JUMPDEST
0x410 PUSH1 0x1
0x412 DUP1
0x413 SLOAD
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 NOT
0x42a AND
0x42b PUSH1 0x1
0x42d PUSH1 0xa0
0x42f PUSH1 0x2
0x431 EXP
0x432 SUB
0x433 DUP6
0x434 AND
0x435 OR
0x436 SWAP1
0x437 SSTORE
0x438 DUP2
0x439 MLOAD
0x43a PUSH2 0x44a
0x43d SWAP1
0x43e PUSH1 0x3
0x440 SWAP1
0x441 PUSH1 0x20
0x443 DUP6
0x444 ADD
0x445 SWAP1
0x446 PUSH2 0x514
0x449 JUMP
---
0x40f: JUMPDEST 
0x410: V343 = 0x1
0x413: V344 = S[0x1]
0x414: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V346 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x42a: V347 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V344
0x42b: V348 = 0x1
0x42d: V349 = 0xa0
0x42f: V350 = 0x2
0x431: V351 = EXP 0x2 0xa0
0x432: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x434: V353 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x435: V354 = OR V353 V347
0x437: S[0x1] = V354
0x439: V355 = M[V125]
0x43a: V356 = 0x44a
0x43e: V357 = 0x3
0x441: V358 = 0x20
0x444: V359 = ADD V125 0x20
0x446: V360 = 0x514
0x449: JUMP 0x514
---
Entry stack: [V11, 0x8d, V145, V125, V151]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x44a, 0x3, V359, V355]
Exit stack: [V11, 0x8d, V145, V125, V151, 0x44a, 0x3, V359, V355]

================================

Block 0x44a
[0x44a:0x45d]
---
Predecessors: [0x58e]
Successors: [0x514]
---
0x44a JUMPDEST
0x44b POP
0x44c DUP1
0x44d MLOAD
0x44e PUSH2 0x45e
0x451 SWAP1
0x452 PUSH1 0x2
0x454 SWAP1
0x455 PUSH1 0x20
0x457 DUP5
0x458 ADD
0x459 SWAP1
0x45a PUSH2 0x514
0x45d JUMP
---
0x44a: JUMPDEST 
0x44d: V361 = M[S1]
0x44e: V362 = 0x45e
0x452: V363 = 0x2
0x455: V364 = 0x20
0x458: V365 = ADD S1 0x20
0x45a: V366 = 0x514
0x45d: JUMP 0x514
---
Entry stack: [V11, 0x8d, V145, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x45e, 0x2, V365, V361]
Exit stack: [V11, 0x8d, V145, S5, S4, S3, S2, S1, 0x45e, 0x2, V365, V361]

================================

Block 0x45e
[0x45e:0x463]
---
Predecessors: [0x58e]
Successors: [0x8d]
---
0x45e JUMPDEST
0x45f POP
0x460 POP
0x461 POP
0x462 POP
0x463 JUMP
---
0x45e: JUMPDEST 
0x463: JUMP S4
---
Entry stack: [V11, 0x8d, V145, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x8d, V145, S5]

================================

Block 0x464
[0x464:0x4a3]
---
Predecessors: [0x234]
Successors: [0x38c, 0x4a4]
---
0x464 JUMPDEST
0x465 PUSH1 0x3
0x467 DUP1
0x468 SLOAD
0x469 PUSH1 0x40
0x46b DUP1
0x46c MLOAD
0x46d PUSH1 0x20
0x46f PUSH1 0x2
0x471 PUSH1 0x1
0x473 DUP6
0x474 AND
0x475 ISZERO
0x476 PUSH2 0x100
0x479 MUL
0x47a PUSH1 0x0
0x47c NOT
0x47d ADD
0x47e SWAP1
0x47f SWAP5
0x480 AND
0x481 SWAP4
0x482 SWAP1
0x483 SWAP4
0x484 DIV
0x485 PUSH1 0x1f
0x487 DUP2
0x488 ADD
0x489 DUP5
0x48a SWAP1
0x48b DIV
0x48c DUP5
0x48d MUL
0x48e DUP3
0x48f ADD
0x490 DUP5
0x491 ADD
0x492 SWAP1
0x493 SWAP3
0x494 MSTORE
0x495 DUP2
0x496 DUP2
0x497 MSTORE
0x498 SWAP3
0x499 SWAP2
0x49a DUP4
0x49b ADD
0x49c DUP3
0x49d DUP3
0x49e DUP1
0x49f ISZERO
0x4a0 PUSH2 0x38c
0x4a3 JUMPI
---
0x464: JUMPDEST 
0x465: V367 = 0x3
0x468: V368 = S[0x3]
0x469: V369 = 0x40
0x46c: V370 = M[0x40]
0x46d: V371 = 0x20
0x46f: V372 = 0x2
0x471: V373 = 0x1
0x474: V374 = AND V368 0x1
0x475: V375 = ISZERO V374
0x476: V376 = 0x100
0x479: V377 = MUL 0x100 V375
0x47a: V378 = 0x0
0x47c: V379 = NOT 0x0
0x47d: V380 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V377
0x480: V381 = AND V368 V380
0x484: V382 = DIV V381 0x2
0x485: V383 = 0x1f
0x488: V384 = ADD V382 0x1f
0x48b: V385 = DIV V384 0x20
0x48d: V386 = MUL 0x20 V385
0x48f: V387 = ADD V370 V386
0x491: V388 = ADD 0x20 V387
0x494: M[0x40] = V388
0x497: M[V370] = V382
0x49b: V389 = ADD V370 0x20
0x49f: V390 = ISZERO V382
0x4a0: V391 = 0x38c
0x4a3: JUMPI 0x38c V390
---
Entry stack: [V11, 0xc8]
Stack pops: 0
Stack additions: [V370, 0x3, V382, V389, 0x3, V382]
Exit stack: [V11, 0xc8, V370, 0x3, V382, V389, 0x3, V382]

================================

Block 0x4a4
[0x4a4:0x4ab]
---
Predecessors: [0x464]
Successors: [0x361, 0x4ac]
---
0x4a4 DUP1
0x4a5 PUSH1 0x1f
0x4a7 LT
0x4a8 PUSH2 0x361
0x4ab JUMPI
---
0x4a5: V392 = 0x1f
0x4a7: V393 = LT 0x1f V382
0x4a8: V394 = 0x361
0x4ab: JUMPI 0x361 V393
---
Entry stack: [V11, 0xc8, V370, 0x3, V382, V389, 0x3, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xc8, V370, 0x3, V382, V389, 0x3, V382]

================================

Block 0x4ac
[0x4ac:0x4be]
---
Predecessors: [0x4a4]
Successors: [0x38c]
---
0x4ac PUSH2 0x100
0x4af DUP1
0x4b0 DUP4
0x4b1 SLOAD
0x4b2 DIV
0x4b3 MUL
0x4b4 DUP4
0x4b5 MSTORE
0x4b6 SWAP2
0x4b7 PUSH1 0x20
0x4b9 ADD
0x4ba SWAP2
0x4bb PUSH2 0x38c
0x4be JUMP
---
0x4ac: V395 = 0x100
0x4b1: V396 = S[0x3]
0x4b2: V397 = DIV V396 0x100
0x4b3: V398 = MUL V397 0x100
0x4b5: M[V389] = V398
0x4b7: V399 = 0x20
0x4b9: V400 = ADD 0x20 V389
0x4bb: V401 = 0x38c
0x4be: JUMP 0x38c
---
Entry stack: [V11, 0xc8, V370, 0x3, V382, V389, 0x3, V382]
Stack pops: 3
Stack additions: [V400, S1, S0]
Exit stack: [V11, 0xc8, V370, 0x3, V382, V400, 0x3, V382]

================================

Block 0x4bf
[0x4bf:0x4d1]
---
Predecessors: [0x249]
Successors: [0x4d2, 0x4d6]
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x0
0x4c2 SLOAD
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0xa0
0x4c7 PUSH1 0x2
0x4c9 EXP
0x4ca SUB
0x4cb AND
0x4cc CALLER
0x4cd EQ
0x4ce PUSH2 0x4d6
0x4d1 JUMPI
---
0x4bf: JUMPDEST 
0x4c0: V402 = 0x0
0x4c2: V403 = S[0x0]
0x4c3: V404 = 0x1
0x4c5: V405 = 0xa0
0x4c7: V406 = 0x2
0x4c9: V407 = EXP 0x2 0xa0
0x4ca: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cb: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x4cc: V410 = CALLER
0x4cd: V411 = EQ V410 V409
0x4ce: V412 = 0x4d6
0x4d1: JUMPI 0x4d6 V411
---
Entry stack: [V11, 0x8d, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V184]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x4bf]
Successors: []
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
---
0x4d2: V413 = 0x0
0x4d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V184]

================================

Block 0x4d6
[0x4d6:0x504]
---
Predecessors: [0x4bf]
Successors: [0x8d]
---
0x4d6 JUMPDEST
0x4d7 PUSH1 0x0
0x4d9 DUP1
0x4da SLOAD
0x4db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f0 NOT
0x4f1 AND
0x4f2 PUSH1 0x1
0x4f4 PUSH1 0xa0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 SUB
0x4fa SWAP3
0x4fb SWAP1
0x4fc SWAP3
0x4fd AND
0x4fe SWAP2
0x4ff SWAP1
0x500 SWAP2
0x501 OR
0x502 SWAP1
0x503 SSTORE
0x504 JUMP
---
0x4d6: JUMPDEST 
0x4d7: V414 = 0x0
0x4da: V415 = S[0x0]
0x4db: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V417 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V418 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V415
0x4f2: V419 = 0x1
0x4f4: V420 = 0xa0
0x4f6: V421 = 0x2
0x4f8: V422 = EXP 0x2 0xa0
0x4f9: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x501: V425 = OR V424 V418
0x503: S[0x0] = V425
0x504: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V184]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x505
[0x505:0x513]
---
Predecessors: [0x26a]
Successors: [0x167]
---
0x505 JUMPDEST
0x506 PUSH1 0x1
0x508 SLOAD
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 AND
0x512 DUP2
0x513 JUMP
---
0x505: JUMPDEST 
0x506: V426 = 0x1
0x508: V427 = S[0x1]
0x509: V428 = 0x1
0x50b: V429 = 0xa0
0x50d: V430 = 0x2
0x50f: V431 = EXP 0x2 0xa0
0x510: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x511: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x513: JUMP 0x167
---
Entry stack: [V11, 0x167]
Stack pops: 1
Stack additions: [S0, V433]
Exit stack: [V11, 0x167, V433]

================================

Block 0x514
[0x514:0x544]
---
Predecessors: [0x40f, 0x44a]
Successors: [0x545, 0x555]
---
0x514 JUMPDEST
0x515 DUP3
0x516 DUP1
0x517 SLOAD
0x518 PUSH1 0x1
0x51a DUP2
0x51b PUSH1 0x1
0x51d AND
0x51e ISZERO
0x51f PUSH2 0x100
0x522 MUL
0x523 SUB
0x524 AND
0x525 PUSH1 0x2
0x527 SWAP1
0x528 DIV
0x529 SWAP1
0x52a PUSH1 0x0
0x52c MSTORE
0x52d PUSH1 0x20
0x52f PUSH1 0x0
0x531 SHA3
0x532 SWAP1
0x533 PUSH1 0x1f
0x535 ADD
0x536 PUSH1 0x20
0x538 SWAP1
0x539 DIV
0x53a DUP2
0x53b ADD
0x53c SWAP3
0x53d DUP3
0x53e PUSH1 0x1f
0x540 LT
0x541 PUSH2 0x555
0x544 JUMPI
---
0x514: JUMPDEST 
0x517: V434 = S[{0x2, 0x3}]
0x518: V435 = 0x1
0x51b: V436 = 0x1
0x51d: V437 = AND 0x1 V434
0x51e: V438 = ISZERO V437
0x51f: V439 = 0x100
0x522: V440 = MUL 0x100 V438
0x523: V441 = SUB V440 0x1
0x524: V442 = AND V441 V434
0x525: V443 = 0x2
0x528: V444 = DIV V442 0x2
0x52a: V445 = 0x0
0x52c: M[0x0] = {0x2, 0x3}
0x52d: V446 = 0x20
0x52f: V447 = 0x0
0x531: V448 = SHA3 0x0 0x20
0x533: V449 = 0x1f
0x535: V450 = ADD 0x1f V444
0x536: V451 = 0x20
0x539: V452 = DIV V450 0x20
0x53b: V453 = ADD V448 V452
0x53e: V454 = 0x1f
0x540: V455 = LT 0x1f S0
0x541: V456 = 0x555
0x544: JUMPI 0x555 V455
---
Entry stack: [V11, 0x8d, V145, S8, S7, S6, S5, S4, {0x44a, 0x45e}, {0x2, 0x3}, S1, S0]
Stack pops: 3
Stack additions: [S2, V453, S0, V448, S1]
Exit stack: [V11, 0x8d, V145, S8, S7, S6, S5, S4, {0x44a, 0x45e}, {0x2, 0x3}, V453, S0, V448, S1]

================================

Block 0x545
[0x545:0x554]
---
Predecessors: [0x514]
Successors: [0x582]
---
0x545 DUP1
0x546 MLOAD
0x547 PUSH1 0xff
0x549 NOT
0x54a AND
0x54b DUP4
0x54c DUP1
0x54d ADD
0x54e OR
0x54f DUP6
0x550 SSTORE
0x551 PUSH2 0x582
0x554 JUMP
---
0x546: V457 = M[S0]
0x547: V458 = 0xff
0x549: V459 = NOT 0xff
0x54a: V460 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V457
0x54d: V461 = ADD S2 S2
0x54e: V462 = OR V461 V460
0x550: S[{0x2, 0x3}] = V462
0x551: V463 = 0x582
0x554: JUMP 0x582
---
Entry stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, V448, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, V448, S0]

================================

Block 0x555
[0x555:0x563]
---
Predecessors: [0x514]
Successors: [0x564, 0x582]
---
0x555 JUMPDEST
0x556 DUP3
0x557 DUP1
0x558 ADD
0x559 PUSH1 0x1
0x55b ADD
0x55c DUP6
0x55d SSTORE
0x55e DUP3
0x55f ISZERO
0x560 PUSH2 0x582
0x563 JUMPI
---
0x555: JUMPDEST 
0x558: V464 = ADD S2 S2
0x559: V465 = 0x1
0x55b: V466 = ADD 0x1 V464
0x55d: S[{0x2, 0x3}] = V466
0x55f: V467 = ISZERO S2
0x560: V468 = 0x582
0x563: JUMPI 0x582 V467
---
Entry stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, V448, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, V448, S0]

================================

Block 0x564
[0x564:0x566]
---
Predecessors: [0x555]
Successors: [0x567]
---
0x564 SWAP2
0x565 DUP3
0x566 ADD
---
0x566: V469 = ADD S0 S2
---
Entry stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, V448, S0]
Stack pops: 3
Stack additions: [S0, S1, V469]
Exit stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S0, V448, V469]

================================

Block 0x567
[0x567:0x56f]
---
Predecessors: [0x564, 0x570]
Successors: [0x570, 0x582]
---
0x567 JUMPDEST
0x568 DUP3
0x569 DUP2
0x56a GT
0x56b ISZERO
0x56c PUSH2 0x582
0x56f JUMPI
---
0x567: JUMPDEST 
0x56a: V470 = GT V469 S2
0x56b: V471 = ISZERO V470
0x56c: V472 = 0x582
0x56f: JUMPI 0x582 V471
---
Entry stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, S1, V469]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, S1, V469]

================================

Block 0x570
[0x570:0x581]
---
Predecessors: [0x567]
Successors: [0x567]
---
0x570 DUP3
0x571 MLOAD
0x572 DUP3
0x573 SSTORE
0x574 SWAP2
0x575 PUSH1 0x20
0x577 ADD
0x578 SWAP2
0x579 SWAP1
0x57a PUSH1 0x1
0x57c ADD
0x57d SWAP1
0x57e PUSH2 0x567
0x581 JUMP
---
0x571: V473 = M[S2]
0x573: S[S1] = V473
0x575: V474 = 0x20
0x577: V475 = ADD 0x20 S2
0x57a: V476 = 0x1
0x57c: V477 = ADD 0x1 S1
0x57e: V478 = 0x567
0x581: JUMP 0x567
---
Entry stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, S1, V469]
Stack pops: 3
Stack additions: [V475, V477, S0]
Exit stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, V475, V477, V469]

================================

Block 0x582
[0x582:0x58d]
---
Predecessors: [0x545, 0x555, 0x567]
Successors: [0x592]
---
0x582 JUMPDEST
0x583 POP
0x584 PUSH2 0x58e
0x587 SWAP3
0x588 SWAP2
0x589 POP
0x58a PUSH2 0x592
0x58d JUMP
---
0x582: JUMPDEST 
0x584: V479 = 0x58e
0x58a: V480 = 0x592
0x58d: JUMP 0x592
---
Entry stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, V453, S2, S1, S0]
Stack pops: 4
Stack additions: [0x58e, S3, S1]
Exit stack: [V11, 0x8d, V145, S10, S9, S8, S7, S6, {0x44a, 0x45e}, {0x2, 0x3}, 0x58e, V453, S1]

================================

Block 0x58e
[0x58e:0x591]
---
Predecessors: [0x598, 0x5ac]
Successors: [0x44a, 0x45e, 0x5ac]
---
0x58e JUMPDEST
0x58f POP
0x590 SWAP1
0x591 JUMP
---
0x58e: JUMPDEST 
0x591: JUMP S2
---
Entry stack: [V11, 0x8d, V145, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x8d, V145, S7, S6, S5, S4, S3, S1]

================================

Block 0x592
[0x592:0x597]
---
Predecessors: [0x582]
Successors: [0x598]
---
0x592 JUMPDEST
0x593 PUSH2 0x5ac
0x596 SWAP2
0x597 SWAP1
---
0x592: JUMPDEST 
0x593: V481 = 0x5ac
---
Entry stack: [V11, 0x8d, V145, S9, S8, S7, S6, S5, {0x44a, 0x45e}, {0x2, 0x3}, 0x58e, V453, S0]
Stack pops: 2
Stack additions: [0x5ac, S1, S0]
Exit stack: [V11, 0x8d, V145, S9, S8, S7, S6, S5, {0x44a, 0x45e}, {0x2, 0x3}, 0x58e, 0x5ac, V453, S0]

================================

Block 0x598
[0x598:0x5a0]
---
Predecessors: [0x592, 0x5a1]
Successors: [0x58e, 0x5a1]
---
0x598 JUMPDEST
0x599 DUP1
0x59a DUP3
0x59b GT
0x59c ISZERO
0x59d PUSH2 0x58e
0x5a0 JUMPI
---
0x598: JUMPDEST 
0x59b: V482 = GT V453 S0
0x59c: V483 = ISZERO V482
0x59d: V484 = 0x58e
0x5a0: JUMPI 0x58e V483
---
Entry stack: [V11, 0x8d, V145, V125, V151, {0x44a, 0x45e}, {0x2, 0x3}, 0x58e, 0x5ac, V453, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x8d, V145, V125, V151, {0x44a, 0x45e}, {0x2, 0x3}, 0x58e, 0x5ac, V453, S0]

================================

Block 0x5a1
[0x5a1:0x5ab]
---
Predecessors: [0x598]
Successors: [0x598]
---
0x5a1 PUSH1 0x0
0x5a3 DUP2
0x5a4 SSTORE
0x5a5 PUSH1 0x1
0x5a7 ADD
0x5a8 PUSH2 0x598
0x5ab JUMP
---
0x5a1: V485 = 0x0
0x5a4: S[S0] = 0x0
0x5a5: V486 = 0x1
0x5a7: V487 = ADD 0x1 S0
0x5a8: V488 = 0x598
0x5ab: JUMP 0x598
---
Entry stack: [V11, 0x8d, V145, V125, V151, {0x44a, 0x45e}, {0x2, 0x3}, 0x58e, 0x5ac, V453, S0]
Stack pops: 1
Stack additions: [V487]
Exit stack: [V11, 0x8d, V145, V125, V151, {0x44a, 0x45e}, {0x2, 0x3}, 0x58e, 0x5ac, V453, V487]

================================

Block 0x5ac
[0x5ac:0x5ae]
---
Predecessors: [0x58e]
Successors: [0x8d, 0x58e]
---
0x5ac JUMPDEST
0x5ad SWAP1
0x5ae JUMP
---
0x5ac: JUMPDEST 
0x5ae: JUMP S1
---
Entry stack: [V11, 0x8d, V145, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x8d, V145, S5, S4, S3, S2, S0]

================================

Block 0x5af
[0x5af:0x5da]
---
Predecessors: []
Successors: []
---
0x5af STOP
0x5b0 LOG1
0x5b1 PUSH6 0x627a7a723058
0x5b8 SHA3
0x5b9 MISSING 0xc1
0x5ba MISSING 0xee
0x5bb OR
0x5bc DUP5
0x5bd GASPRICE
0x5be MISSING 0xd9
0x5bf MISSING 0x46
0x5c0 ADDMOD
0x5c1 SWAP15
0x5c2 MISSING 0xd5
0x5c3 MISSING 0xb0
0x5c4 SWAP15
0x5c5 XOR
0x5c6 MISSING 0xd4
0x5c7 JUMPDEST
0x5c8 LT
0x5c9 MISSING 0x28
0x5ca CALLVALUE
0x5cb CODESIZE
0x5cc DUP13
0x5cd MISSING 0xd1
0x5ce MISSING 0xda
0x5cf MISSING 0xe2
0x5d0 LOG2
0x5d1 MISSING 0xdb
0x5d2 PUSH7 0xf1c7d52665b000
0x5da MISSING 0x29
---
0x5af: STOP 
0x5b0: LOG S0 S1 S2
0x5b1: V489 = 0x627a7a723058
0x5b8: V490 = SHA3 0x627a7a723058 S3
0x5b9: MISSING 0xc1
0x5ba: MISSING 0xee
0x5bb: V491 = OR S0 S1
0x5bd: V492 = GASPRICE
0x5be: MISSING 0xd9
0x5bf: MISSING 0x46
0x5c0: V493 = ADDMOD S0 S1 S2
0x5c2: MISSING 0xd5
0x5c3: MISSING 0xb0
0x5c5: V494 = XOR S15 S1
0x5c6: MISSING 0xd4
0x5c7: JUMPDEST 
0x5c8: V495 = LT S0 S1
0x5c9: MISSING 0x28
0x5ca: V496 = CALLVALUE
0x5cb: V497 = CODESIZE
0x5cd: MISSING 0xd1
0x5ce: MISSING 0xda
0x5cf: MISSING 0xe2
0x5d0: LOG S0 S1 S2 S3
0x5d1: MISSING 0xdb
0x5d2: V498 = 0xf1c7d52665b000
0x5da: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V490, V492, S5, V491, S2, S3, S4, S5, S17, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V493, V494, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V495, S10, V497, V496, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0xf1c7d52665b000]
Exit stack: []

================================

Function 0:
Public function signature: 0x7420a41
Entry block: 0x8f
Exit block: 0x8d
Body: 0x8d, 0x8f, 0x97, 0x9b, 0x273, 0x286, 0x28a, 0x2b7, 0x2c0

Function 1:
Public function signature: 0x6b7cc44f
Entry block: 0xb3
Exit block: 0x12f
Body: 0xb3, 0xbb, 0xbf, 0xc8, 0xea, 0xf3, 0x102, 0x116, 0x12f, 0x309, 0x346, 0x34e, 0x361, 0x36f, 0x383, 0x38c

Function 2:
Public function signature: 0x7362377b
Entry block: 0x13d
Exit block: 0x8d
Body: 0x8d, 0x13d, 0x145, 0x149, 0x394, 0x3a7, 0x3ab, 0x3dd, 0x3e6

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x152
Exit block: 0x167
Body: 0x152, 0x15a, 0x15e, 0x167, 0x3e9

Function 4:
Public function signature: 0x9094fd50
Entry block: 0x183
Exit block: 0x8d
Body: 0x8d, 0x183, 0x18b, 0x18f, 0x3f8, 0x40b, 0x40f, 0x44a

Function 5:
Public function signature: 0xbeb0a416
Entry block: 0x228
Exit block: 0x12f
Body: 0xc8, 0xea, 0xf3, 0x102, 0x116, 0x12f, 0x228, 0x230, 0x234, 0x361, 0x36f, 0x383, 0x38c, 0x464, 0x4a4, 0x4ac

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x23d
Exit block: 0x8d
Body: 0x8d, 0x23d, 0x245, 0x249, 0x4bf, 0x4d2, 0x4d6

Function 7:
Public function signature: 0xfc0c546a
Entry block: 0x25e
Exit block: 0x167
Body: 0x167, 0x25e, 0x266, 0x26a, 0x505

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

Function 9:
Private function
Entry block: 0x514
Exit block: 0x58e
Body: 0x514, 0x545, 0x555, 0x564, 0x567, 0x570, 0x582, 0x58e, 0x592, 0x598, 0x5a1, 0x5ac

