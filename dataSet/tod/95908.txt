Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x30]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x30
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x30
0xa: JUMPI 0x30 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x84]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1698755f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x84
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1698755f
0x20: V14 = EQ V12 0x1698755f
0x21: V15 = 0x84
0x24: JUMPI 0x84 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb5]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0xb5
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0xb5
0x2f: JUMPI 0xb5 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x33]
---
Predecessors: [0x0, 0x25]
Successors: [0x34]
---
0x30 JUMPDEST
0x31 PUSH2 0x82
---
0x30: JUMPDEST 
0x31: V19 = 0x82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V12, 0x82]

================================

Block 0x34
[0x34:0x48]
---
Predecessors: [0x30]
Successors: [0x49, 0x7d]
---
0x34 JUMPDEST
0x35 PUSH7 0x38d7ea4c67fff
0x3d NOT
0x3e CALLVALUE
0x3f ADD
0x40 PUSH1 0x0
0x42 DUP2
0x43 GT
0x44 ISZERO
0x45 PUSH2 0x7d
0x48 JUMPI
---
0x34: JUMPDEST 
0x35: V20 = 0x38d7ea4c67fff
0x3d: V21 = NOT 0x38d7ea4c67fff
0x3e: V22 = CALLVALUE
0x3f: V23 = ADD V22 0xfffffffffffffffffffffffffffffffffffffffffffffffffffc72815b398000
0x40: V24 = 0x0
0x43: V25 = GT V23 0x0
0x44: V26 = ISZERO V25
0x45: V27 = 0x7d
0x48: JUMPI 0x7d V26
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: [V23]
Exit stack: [V12, 0x82, V23]

================================

Block 0x49
[0x49:0x77]
---
Predecessors: [0x34]
Successors: [0x78, 0x7d]
---
0x49 PUSH1 0x0
0x4b DUP1
0x4c SLOAD
0x4d PUSH1 0x40
0x4f MLOAD
0x50 PUSH1 0x1
0x52 PUSH1 0xa0
0x54 PUSH1 0x2
0x56 EXP
0x57 SUB
0x58 SWAP1
0x59 SWAP2
0x5a AND
0x5b SWAP2
0x5c CALLVALUE
0x5d DUP1
0x5e ISZERO
0x5f PUSH2 0x8fc
0x62 MUL
0x63 SWAP3
0x64 SWAP1
0x65 SWAP2
0x66 DUP2
0x67 DUP2
0x68 DUP2
0x69 DUP6
0x6a DUP9
0x6b DUP9
0x6c CALL
0x6d SWAP4
0x6e POP
0x6f POP
0x70 POP
0x71 POP
0x72 ISZERO
0x73 ISZERO
0x74 PUSH2 0x7d
0x77 JUMPI
---
0x49: V28 = 0x0
0x4c: V29 = S[0x0]
0x4d: V30 = 0x40
0x4f: V31 = M[0x40]
0x50: V32 = 0x1
0x52: V33 = 0xa0
0x54: V34 = 0x2
0x56: V35 = EXP 0x2 0xa0
0x57: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a: V37 = AND V29 0xffffffffffffffffffffffffffffffffffffffff
0x5c: V38 = CALLVALUE
0x5e: V39 = ISZERO V38
0x5f: V40 = 0x8fc
0x62: V41 = MUL 0x8fc V39
0x6c: V42 = CALL V41 V37 V38 V31 0x0 V31 0x0
0x72: V43 = ISZERO V42
0x73: V44 = ISZERO V43
0x74: V45 = 0x7d
0x77: JUMPI 0x7d V44
---
Entry stack: [V12, 0x82, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82, V23]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x49]
Successors: []
---
0x78 PUSH1 0x0
0x7a PUSH1 0x0
0x7c REVERT
---
0x78: V46 = 0x0
0x7a: V47 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x82, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82, V23]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x34, 0x49]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12, 0x82, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82, V23]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x7d]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V12, 0x82, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82, V23]

================================

Block 0x7f
[0x7f:0x81]
---
Predecessors: [0x7e]
Successors: [0x82]
---
0x7f JUMPDEST
0x80 POP
0x81 JUMP
---
0x7f: JUMPDEST 
0x81: JUMP 0x82
---
Entry stack: [V12, 0x82, V23]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x7f]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84
[0x84:0x8a]
---
Predecessors: [0xb]
Successors: [0x8b, 0x8c]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 ISZERO
0x87 PUSH2 0x8c
0x8a JUMPI
---
0x84: JUMPDEST 
0x85: V48 = CALLVALUE
0x86: V49 = ISZERO V48
0x87: V50 = 0x8c
0x8a: JUMPI 0x8c V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x84]
Successors: []
---
0x8b INVALID
---
0x8b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0xa2]
---
Predecessors: [0x84]
Successors: [0xc7]
---
0x8c JUMPDEST
0x8d PUSH2 0xa3
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 PUSH1 0x4
0x9a CALLDATALOAD
0x9b AND
0x9c PUSH1 0x24
0x9e CALLDATALOAD
0x9f PUSH2 0xc7
0xa2 JUMP
---
0x8c: JUMPDEST 
0x8d: V51 = 0xa3
0x90: V52 = 0x1
0x92: V53 = 0xa0
0x94: V54 = 0x2
0x96: V55 = EXP 0x2 0xa0
0x97: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98: V57 = 0x4
0x9a: V58 = CALLDATALOAD 0x4
0x9b: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V60 = 0x24
0x9e: V61 = CALLDATALOAD 0x24
0x9f: V62 = 0xc7
0xa2: JUMP 0xc7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa3, V59, V61]
Exit stack: [V12, 0xa3, V59, V61]

================================

Block 0xa3
[0xa3:0xb4]
---
Predecessors: [0x1a3]
Successors: []
---
0xa3 JUMPDEST
0xa4 PUSH1 0x40
0xa6 DUP1
0xa7 MLOAD
0xa8 SWAP2
0xa9 DUP3
0xaa MSTORE
0xab MLOAD
0xac SWAP1
0xad DUP2
0xae SWAP1
0xaf SUB
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP1
0xb4 RETURN
---
0xa3: JUMPDEST 
0xa4: V63 = 0x40
0xa7: V64 = M[0x40]
0xaa: M[V64] = {0x1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}
0xab: V65 = M[0x40]
0xaf: V66 = SUB V64 V65
0xb0: V67 = 0x20
0xb2: V68 = ADD 0x20 V66
0xb4: RETURN V65 V68
---
Entry stack: [V12, {0x1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xbb]
---
Predecessors: [0x25]
Successors: [0xbc, 0xbd]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 ISZERO
0xb8 PUSH2 0xbd
0xbb JUMPI
---
0xb5: JUMPDEST 
0xb6: V69 = CALLVALUE
0xb7: V70 = ISZERO V69
0xb8: V71 = 0xbd
0xbb: JUMPI 0xbd V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xbc]
---
Predecessors: [0xb5]
Successors: []
---
0xbc INVALID
---
0xbc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0xb5]
Successors: [0x1a9]
---
0xbd JUMPDEST
0xbe PUSH2 0x82
0xc1 PUSH2 0x1a9
0xc4 JUMP
---
0xbd: JUMPDEST 
0xbe: V72 = 0x82
0xc1: V73 = 0x1a9
0xc4: JUMP 0x1a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V12, 0x82]

================================

Block 0xc5
[0xc5:0xc6]
---
Predecessors: []
Successors: []
---
0xc5 JUMPDEST
0xc6 STOP
---
0xc5: JUMPDEST 
0xc6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc7
[0xc7:0xe4]
---
Predecessors: [0x8c]
Successors: [0xe5, 0xea]
---
0xc7 JUMPDEST
0xc8 PUSH1 0x0
0xca PUSH7 0x38d7ea4c68000
0xd2 DUP4
0xd3 PUSH1 0x1
0xd5 PUSH1 0xa0
0xd7 PUSH1 0x2
0xd9 EXP
0xda SUB
0xdb AND
0xdc BALANCE
0xdd LT
0xde ISZERO
0xdf DUP1
0xe0 ISZERO
0xe1 PUSH2 0xea
0xe4 JUMPI
---
0xc7: JUMPDEST 
0xc8: V74 = 0x0
0xca: V75 = 0x38d7ea4c68000
0xd3: V76 = 0x1
0xd5: V77 = 0xa0
0xd7: V78 = 0x2
0xd9: V79 = EXP 0x2 0xa0
0xda: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xdc: V82 = BALANCE V81
0xdd: V83 = LT V82 0x38d7ea4c68000
0xde: V84 = ISZERO V83
0xe0: V85 = ISZERO V84
0xe1: V86 = 0xea
0xe4: JUMPI 0xea V85
---
Entry stack: [V12, 0xa3, V59, V61]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V84]
Exit stack: [V12, 0xa3, V59, V61, 0x0, V84]

================================

Block 0xe5
[0xe5:0xe9]
---
Predecessors: [0xc7]
Successors: [0xea]
---
0xe5 POP
0xe6 PUSH1 0x0
0xe8 DUP3
0xe9 GT
---
0xe6: V87 = 0x0
0xe9: V88 = GT V61 0x0
---
Entry stack: [V12, 0xa3, V59, V61, 0x0, V84]
Stack pops: 3
Stack additions: [S2, S1, V88]
Exit stack: [V12, 0xa3, V59, V61, 0x0, V88]

================================

Block 0xea
[0xea:0xef]
---
Predecessors: [0xc7, 0xe5]
Successors: [0xf0, 0x19d]
---
0xea JUMPDEST
0xeb ISZERO
0xec PUSH2 0x19d
0xef JUMPI
---
0xea: JUMPDEST 
0xeb: V89 = ISZERO S0
0xec: V90 = 0x19d
0xef: JUMPI 0x19d V89
---
Entry stack: [V12, 0xa3, V59, V61, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa3, V59, V61, 0x0]

================================

Block 0xf0
[0xf0:0x17f]
---
Predecessors: [0xea]
Successors: [0x180, 0x181]
---
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x115 DUP2
0x116 MSTORE
0x117 DUP2
0x118 MLOAD
0x119 SWAP1
0x11a DUP2
0x11b SWAP1
0x11c SUB
0x11d PUSH1 0x19
0x11f ADD
0x120 DUP2
0x121 SHA3
0x122 PUSH1 0x0
0x124 DUP1
0x125 SLOAD
0x126 PUSH1 0x20
0x128 SWAP4
0x129 DUP5
0x12a ADD
0x12b SWAP2
0x12c SWAP1
0x12d SWAP2
0x12e MSTORE
0x12f DUP4
0x130 MLOAD
0x131 PUSH4 0xffffffff
0x136 PUSH1 0xe0
0x138 PUSH1 0x2
0x13a EXP
0x13b SWAP4
0x13c DUP5
0x13d SWAP1
0x13e DIV
0x13f SWAP1
0x140 DUP2
0x141 AND
0x142 SWAP1
0x143 SWAP4
0x144 MUL
0x145 DUP2
0x146 MSTORE
0x147 PUSH1 0x1
0x149 PUSH1 0xa0
0x14b PUSH1 0x2
0x14d EXP
0x14e SUB
0x14f SWAP2
0x150 DUP3
0x151 AND
0x152 PUSH1 0x4
0x154 DUP3
0x155 ADD
0x156 MSTORE
0x157 PUSH1 0x24
0x159 DUP2
0x15a ADD
0x15b DUP8
0x15c SWAP1
0x15d MSTORE
0x15e SWAP4
0x15f MLOAD
0x160 SWAP1
0x161 DUP8
0x162 AND
0x163 SWAP4
0x164 SWAP2
0x165 SWAP3
0x166 PUSH1 0x44
0x168 DUP1
0x169 DUP5
0x16a ADD
0x16b SWAP4
0x16c SWAP2
0x16d SWAP3
0x16e SWAP2
0x16f DUP3
0x170 SWAP1
0x171 SUB
0x172 ADD
0x173 DUP2
0x174 DUP7
0x175 PUSH1 0x32
0x177 GAS
0x178 SUB
0x179 DELEGATECALL
0x17a ISZERO
0x17b ISZERO
0x17c PUSH2 0x181
0x17f JUMPI
---
0xf0: V91 = 0x40
0xf3: V92 = M[0x40]
0xf4: V93 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x116: M[V92] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x118: V94 = M[0x40]
0x11c: V95 = SUB V92 V94
0x11d: V96 = 0x19
0x11f: V97 = ADD 0x19 V95
0x121: V98 = SHA3 V94 V97
0x122: V99 = 0x0
0x125: V100 = S[0x0]
0x126: V101 = 0x20
0x12a: V102 = ADD 0x20 V94
0x12e: M[V102] = 0x0
0x130: V103 = M[0x40]
0x131: V104 = 0xffffffff
0x136: V105 = 0xe0
0x138: V106 = 0x2
0x13a: V107 = EXP 0x2 0xe0
0x13e: V108 = DIV V98 0x100000000000000000000000000000000000000000000000000000000
0x141: V109 = AND V108 0xffffffff
0x144: V110 = MUL 0x100000000000000000000000000000000000000000000000000000000 V109
0x146: M[V103] = V110
0x147: V111 = 0x1
0x149: V112 = 0xa0
0x14b: V113 = 0x2
0x14d: V114 = EXP 0x2 0xa0
0x14e: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x152: V117 = 0x4
0x155: V118 = ADD V103 0x4
0x156: M[V118] = V116
0x157: V119 = 0x24
0x15a: V120 = ADD V103 0x24
0x15d: M[V120] = V61
0x15f: V121 = M[0x40]
0x162: V122 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0x166: V123 = 0x44
0x16a: V124 = ADD V103 0x44
0x171: V125 = SUB V103 V121
0x172: V126 = ADD V125 0x44
0x175: V127 = 0x32
0x177: V128 = GAS
0x178: V129 = SUB V128 0x32
0x179: V130 = DELEGATECALL V129 V122 V121 V126 V121 0x20
0x17a: V131 = ISZERO V130
0x17b: V132 = ISZERO V131
0x17c: V133 = 0x181
0x17f: JUMPI 0x181 V132
---
Entry stack: [V12, 0xa3, V59, V61, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V122, V108, V124]
Exit stack: [V12, 0xa3, V59, V61, 0x0, V122, V108, V124]

================================

Block 0x180
[0x180:0x180]
---
Predecessors: [0xf0]
Successors: []
---
0x180 INVALID
---
0x180: INVALID 
---
Entry stack: [V12, 0xa3, V59, V61, 0x0, V122, V108, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa3, V59, V61, 0x0, V122, V108, V124]

================================

Block 0x181
[0x181:0x18f]
---
Predecessors: [0xf0]
Successors: [0x190, 0x195]
---
0x181 JUMPDEST
0x182 POP
0x183 POP
0x184 PUSH1 0x40
0x186 MLOAD
0x187 MLOAD
0x188 ISZERO
0x189 ISZERO
0x18a SWAP1
0x18b POP
0x18c PUSH2 0x195
0x18f JUMPI
---
0x181: JUMPDEST 
0x184: V134 = 0x40
0x186: V135 = M[0x40]
0x187: V136 = M[V135]
0x188: V137 = ISZERO V136
0x189: V138 = ISZERO V137
0x18c: V139 = 0x195
0x18f: JUMPI 0x195 V138
---
Entry stack: [V12, 0xa3, V59, V61, 0x0, V122, V108, V124]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa3, V59, V61, 0x0]

================================

Block 0x190
[0x190:0x194]
---
Predecessors: [0x181]
Successors: []
---
0x190 PUSH1 0x0
0x192 PUSH1 0x0
0x194 REVERT
---
0x190: V140 = 0x0
0x192: V141 = 0x0
0x194: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa3, V59, V61, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa3, V59, V61, 0x0]

================================

Block 0x195
[0x195:0x19c]
---
Predecessors: [0x181]
Successors: [0x1a2]
---
0x195 JUMPDEST
0x196 POP
0x197 PUSH1 0x1
0x199 PUSH2 0x1a2
0x19c JUMP
---
0x195: JUMPDEST 
0x197: V142 = 0x1
0x199: V143 = 0x1a2
0x19c: JUMP 0x1a2
---
Entry stack: [V12, 0xa3, V59, V61, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xa3, V59, V61, 0x1]

================================

Block 0x19d
[0x19d:0x1a1]
---
Predecessors: [0xea]
Successors: [0x1a2]
---
0x19d JUMPDEST
0x19e POP
0x19f PUSH1 0x0
0x1a1 NOT
---
0x19d: JUMPDEST 
0x19f: V144 = 0x0
0x1a1: V145 = NOT 0x0
---
Entry stack: [V12, 0xa3, V59, V61, 0x0]
Stack pops: 1
Stack additions: [0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Exit stack: [V12, 0xa3, V59, V61, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]

================================

Block 0x1a2
[0x1a2:0x1a2]
---
Predecessors: [0x195, 0x19d]
Successors: [0x1a3]
---
0x1a2 JUMPDEST
---
0x1a2: JUMPDEST 
---
Entry stack: [V12, 0xa3, V59, V61, {0x1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa3, V59, V61, {0x1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]

================================

Block 0x1a3
[0x1a3:0x1a8]
---
Predecessors: [0x1a2]
Successors: [0xa3]
---
0x1a3 JUMPDEST
0x1a4 SWAP3
0x1a5 SWAP2
0x1a6 POP
0x1a7 POP
0x1a8 JUMP
---
0x1a3: JUMPDEST 
0x1a8: JUMP 0xa3
---
Entry stack: [V12, 0xa3, V59, V61, {0x1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]

================================

Block 0x1a9
[0x1a9:0x1bf]
---
Predecessors: [0xbd]
Successors: [0x1c0, 0x1c5]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x0
0x1ac SLOAD
0x1ad CALLER
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 SWAP1
0x1b7 DUP2
0x1b8 AND
0x1b9 SWAP2
0x1ba AND
0x1bb EQ
0x1bc PUSH2 0x1c5
0x1bf JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V146 = 0x0
0x1ac: V147 = S[0x0]
0x1ad: V148 = CALLER
0x1ae: V149 = 0x1
0x1b0: V150 = 0xa0
0x1b2: V151 = 0x2
0x1b4: V152 = EXP 0x2 0xa0
0x1b5: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1ba: V155 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V156 = EQ V155 V154
0x1bc: V157 = 0x1c5
0x1bf: JUMPI 0x1c5 V156
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0x1c0
[0x1c0:0x1c4]
---
Predecessors: [0x1a9]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 PUSH1 0x0
0x1c4 REVERT
---
0x1c0: V158 = 0x0
0x1c2: V159 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0x1c5
[0x1c5:0x1d2]
---
Predecessors: [0x1a9]
Successors: []
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x0
0x1c8 SLOAD
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 AND
0x1d2 SELFDESTRUCT
---
0x1c5: JUMPDEST 
0x1c6: V160 = 0x0
0x1c8: V161 = S[0x0]
0x1c9: V162 = 0x1
0x1cb: V163 = 0xa0
0x1cd: V164 = 0x2
0x1cf: V165 = EXP 0x2 0xa0
0x1d0: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1d2: SELFDESTRUCT V167
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0x1d3
[0x1d3:0x1d3]
---
Predecessors: []
Successors: [0x1d4]
---
0x1d3 JUMPDEST
---
0x1d3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d4
[0x1d4:0x201]
---
Predecessors: [0x1d3]
Successors: []
---
0x1d4 JUMPDEST
0x1d5 JUMP
0x1d6 STOP
0x1d7 LOG1
0x1d8 PUSH6 0x627a7a723058
0x1df SHA3
0x1e0 MISSING 0x1f
0x1e1 ORIGIN
0x1e2 PUSH11 0x49fe3739b3d4771e5145c4
0x1ee SWAP13
0x1ef PUSH6 0x649d105935e0
0x1f6 MISSING 0x23
0x1f7 EXTCODEHASH
0x1f8 MISSING 0xd5
0x1f9 MISSING 0x49
0x1fa MLOAD
0x1fb XOR
0x1fc SWAP13
0x1fd MISSING 0xd2
0x1fe MISSING 0x2f
0x1ff CALLCODE
0x200 STOP
0x201 MISSING 0x29
---
0x1d4: JUMPDEST 
0x1d5: JUMP S0
0x1d6: STOP 
0x1d7: LOG S0 S1 S2
0x1d8: V168 = 0x627a7a723058
0x1df: V169 = SHA3 0x627a7a723058 S3
0x1e0: MISSING 0x1f
0x1e1: V170 = ORIGIN
0x1e2: V171 = 0x49fe3739b3d4771e5145c4
0x1ef: V172 = 0x649d105935e0
0x1f6: MISSING 0x23
0x1f7: V173 = EXTCODEHASH S0
0x1f8: MISSING 0xd5
0x1f9: MISSING 0x49
0x1fa: V174 = M[S0]
0x1fb: V175 = XOR V174 S1
0x1fd: MISSING 0xd2
0x1fe: MISSING 0x2f
0x1ff: V176 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x200: STOP 
0x201: MISSING 0x29
---
Entry stack: []
Stack pops: 43
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x1698755f
Entry block: 0x84
Exit block: 0xa3
Body: 0x84, 0x8b, 0x8c, 0xa3, 0xc7, 0xe5, 0xea, 0xf0, 0x180, 0x181, 0x190, 0x195, 0x19d, 0x1a2, 0x1a3

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xb5
Exit block: 0x1c5
Body: 0xb5, 0xbc, 0xbd, 0x1a9, 0x1c0, 0x1c5

Function 2:
Public fallback function
Entry block: 0x30
Exit block: 0x82
Body: 0x30, 0x34, 0x49, 0x78, 0x7d, 0x7e, 0x7f, 0x82

