Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x94]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x94
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x94
0xc: JUMPI 0x94 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x25]
---
Predecessors: [0x0]
Successors: [0x26, 0x96]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH3 0x5b4487
0x20 DUP2
0x21 EQ
0x22 PUSH2 0x96
0x25 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x5b4487
0x21: V15 = EQ V13 0x5b4487
0x22: V16 = 0x96
0x25: JUMPI 0x96 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x26
[0x26:0x30]
---
Predecessors: [0xd]
Successors: [0x31, 0xbb]
---
0x26 DUP1
0x27 PUSH4 0x53b239c7
0x2c EQ
0x2d PUSH2 0xbb
0x30 JUMPI
---
0x27: V17 = 0x53b239c7
0x2c: V18 = EQ 0x53b239c7 V13
0x2d: V19 = 0xbb
0x30: JUMPI 0xbb V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x31
[0x31:0x3b]
---
Predecessors: [0x26]
Successors: [0x3c, 0xda]
---
0x31 DUP1
0x32 PUSH4 0x6103d70b
0x37 EQ
0x38 PUSH2 0xda
0x3b JUMPI
---
0x32: V20 = 0x6103d70b
0x37: V21 = EQ 0x6103d70b V13
0x38: V22 = 0xda
0x3b: JUMPI 0xda V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3c
[0x3c:0x46]
---
Predecessors: [0x31]
Successors: [0x47, 0xed]
---
0x3c DUP1
0x3d PUSH4 0x6a474002
0x42 EQ
0x43 PUSH2 0xed
0x46 JUMPI
---
0x3d: V23 = 0x6a474002
0x42: V24 = EQ 0x6a474002 V13
0x43: V25 = 0xed
0x46: JUMPI 0xed V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x47
[0x47:0x51]
---
Predecessors: [0x3c]
Successors: [0x52, 0x100]
---
0x47 DUP1
0x48 PUSH4 0x8b4c40b0
0x4d EQ
0x4e PUSH2 0x100
0x51 JUMPI
---
0x48: V26 = 0x8b4c40b0
0x4d: V27 = EQ 0x8b4c40b0 V13
0x4e: V28 = 0x100
0x51: JUMPI 0x100 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x52
[0x52:0x5c]
---
Predecessors: [0x47]
Successors: [0x5d, 0x108]
---
0x52 DUP1
0x53 PUSH4 0x8da5cb5b
0x58 EQ
0x59 PUSH2 0x108
0x5c JUMPI
---
0x53: V29 = 0x8da5cb5b
0x58: V30 = EQ 0x8da5cb5b V13
0x59: V31 = 0x108
0x5c: JUMPI 0x108 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5d
[0x5d:0x67]
---
Predecessors: [0x52]
Successors: [0x68, 0x137]
---
0x5d DUP1
0x5e PUSH4 0xa4e01230
0x63 EQ
0x64 PUSH2 0x137
0x67 JUMPI
---
0x5e: V32 = 0xa4e01230
0x63: V33 = EQ 0xa4e01230 V13
0x64: V34 = 0x137
0x67: JUMPI 0x137 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x68
[0x68:0x72]
---
Predecessors: [0x5d]
Successors: [0x73, 0x14a]
---
0x68 DUP1
0x69 PUSH4 0xd1632f67
0x6e EQ
0x6f PUSH2 0x14a
0x72 JUMPI
---
0x69: V35 = 0xd1632f67
0x6e: V36 = EQ 0xd1632f67 V13
0x6f: V37 = 0x14a
0x72: JUMPI 0x14a V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x73
[0x73:0x7d]
---
Predecessors: [0x68]
Successors: [0x7e, 0x16c]
---
0x73 DUP1
0x74 PUSH4 0xe2982c21
0x79 EQ
0x7a PUSH2 0x16c
0x7d JUMPI
---
0x74: V38 = 0xe2982c21
0x79: V39 = EQ 0xe2982c21 V13
0x7a: V40 = 0x16c
0x7d: JUMPI 0x16c V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7e
[0x7e:0x88]
---
Predecessors: [0x73]
Successors: [0x89, 0x18b]
---
0x7e DUP1
0x7f PUSH4 0xf03a5687
0x84 EQ
0x85 PUSH2 0x18b
0x88 JUMPI
---
0x7f: V41 = 0xf03a5687
0x84: V42 = EQ 0xf03a5687 V13
0x85: V43 = 0x18b
0x88: JUMPI 0x18b V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x89
[0x89:0x93]
---
Predecessors: [0x7e]
Successors: [0x94, 0x19e]
---
0x89 DUP1
0x8a PUSH4 0xf2fde38b
0x8f EQ
0x90 PUSH2 0x19e
0x93 JUMPI
---
0x8a: V44 = 0xf2fde38b
0x8f: V45 = EQ 0xf2fde38b V13
0x90: V46 = 0x19e
0x93: JUMPI 0x19e V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x94
[0x94:0x95]
---
Predecessors: [0x0, 0x89, 0x1de, 0x2a2, 0x311, 0x380, 0x4cb]
Successors: []
---
0x94 JUMPDEST
0x95 STOP
---
0x94: JUMPDEST 
0x95: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x96
[0x96:0x9c]
---
Predecessors: [0xd]
Successors: [0x9d, 0xa1]
---
0x96 JUMPDEST
0x97 CALLVALUE
0x98 ISZERO
0x99 PUSH2 0xa1
0x9c JUMPI
---
0x96: JUMPDEST 
0x97: V47 = CALLVALUE
0x98: V48 = ISZERO V47
0x99: V49 = 0xa1
0x9c: JUMPI 0xa1 V48
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x9d
[0x9d:0xa0]
---
Predecessors: [0x96]
Successors: []
---
0x9d PUSH1 0x0
0x9f DUP1
0xa0 REVERT
---
0x9d: V50 = 0x0
0xa0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa1
[0xa1:0xa8]
---
Predecessors: [0x96]
Successors: [0x1bd]
---
0xa1 JUMPDEST
0xa2 PUSH2 0xa9
0xa5 PUSH2 0x1bd
0xa8 JUMP
---
0xa1: JUMPDEST 
0xa2: V51 = 0xa9
0xa5: V52 = 0x1bd
0xa8: JUMP 0x1bd
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V13, 0xa9]

================================

Block 0xa9
[0xa9:0xba]
---
Predecessors: [0x1bd, 0x42f]
Successors: []
---
0xa9 JUMPDEST
0xaa PUSH1 0x40
0xac MLOAD
0xad SWAP1
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 PUSH1 0x40
0xb5 MLOAD
0xb6 DUP1
0xb7 SWAP2
0xb8 SUB
0xb9 SWAP1
0xba RETURN
---
0xa9: JUMPDEST 
0xaa: V53 = 0x40
0xac: V54 = M[0x40]
0xaf: M[V54] = S0
0xb0: V55 = 0x20
0xb2: V56 = ADD 0x20 V54
0xb3: V57 = 0x40
0xb5: V58 = M[0x40]
0xb8: V59 = SUB V56 V58
0xba: RETURN V58 V59
---
Entry stack: [V13, 0xa9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xa9]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0x26]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V60 = CALLVALUE
0xbd: V61 = ISZERO V60
0xbe: V62 = 0xc6
0xc1: JUMPI 0xc6 V61
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V63 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc6
[0xc6:0xd9]
---
Predecessors: [0xbb]
Successors: [0x1c3]
---
0xc6 JUMPDEST
0xc7 PUSH2 0x94
0xca PUSH1 0x1
0xcc PUSH1 0xa0
0xce PUSH1 0x2
0xd0 EXP
0xd1 SUB
0xd2 PUSH1 0x4
0xd4 CALLDATALOAD
0xd5 AND
0xd6 PUSH2 0x1c3
0xd9 JUMP
---
0xc6: JUMPDEST 
0xc7: V64 = 0x94
0xca: V65 = 0x1
0xcc: V66 = 0xa0
0xce: V67 = 0x2
0xd0: V68 = EXP 0x2 0xa0
0xd1: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2: V70 = 0x4
0xd4: V71 = CALLDATALOAD 0x4
0xd5: V72 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0xd6: V73 = 0x1c3
0xd9: JUMP 0x1c3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x94, V72]
Exit stack: [V13, 0x94, V72]

================================

Block 0xda
[0xda:0xe0]
---
Predecessors: [0x31]
Successors: [0xe1, 0xe5]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xda: JUMPDEST 
0xdb: V74 = CALLVALUE
0xdc: V75 = ISZERO V74
0xdd: V76 = 0xe5
0xe0: JUMPI 0xe5 V75
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xda]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V77 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0xda]
Successors: [0x20d]
---
0xe5 JUMPDEST
0xe6 PUSH2 0x94
0xe9 PUSH2 0x20d
0xec JUMP
---
0xe5: JUMPDEST 
0xe6: V78 = 0x94
0xe9: V79 = 0x20d
0xec: JUMP 0x20d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x94]
Exit stack: [V13, 0x94]

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0x3c]
Successors: [0xf4, 0xf8]
---
0xed JUMPDEST
0xee CALLVALUE
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xed: JUMPDEST 
0xee: V80 = CALLVALUE
0xef: V81 = ISZERO V80
0xf0: V82 = 0xf8
0xf3: JUMPI 0xf8 V81
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xed]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V83 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xed]
Successors: [0x2a6]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x94
0xfc PUSH2 0x2a6
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V84 = 0x94
0xfc: V85 = 0x2a6
0xff: JUMP 0x2a6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x94]
Exit stack: [V13, 0x94]

================================

Block 0x100
[0x100:0x107]
---
Predecessors: [0x47]
Successors: [0x316]
---
0x100 JUMPDEST
0x101 PUSH2 0x94
0x104 PUSH2 0x316
0x107 JUMP
---
0x100: JUMPDEST 
0x101: V86 = 0x94
0x104: V87 = 0x316
0x107: JUMP 0x316
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x94]
Exit stack: [V13, 0x94]

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x52]
Successors: [0x10f, 0x113]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V88 = CALLVALUE
0x10a: V89 = ISZERO V88
0x10b: V90 = 0x113
0x10e: JUMPI 0x113 V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x108]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V91 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x108]
Successors: [0x3d1]
---
0x113 JUMPDEST
0x114 PUSH2 0x11b
0x117 PUSH2 0x3d1
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V92 = 0x11b
0x117: V93 = 0x3d1
0x11a: JUMP 0x3d1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V13, 0x11b]

================================

Block 0x11b
[0x11b:0x136]
---
Predecessors: [0x3d1, 0x3e0]
Successors: []
---
0x11b JUMPDEST
0x11c PUSH1 0x40
0x11e MLOAD
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 SWAP1
0x128 SWAP2
0x129 AND
0x12a DUP2
0x12b MSTORE
0x12c PUSH1 0x20
0x12e ADD
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 SWAP2
0x134 SUB
0x135 SWAP1
0x136 RETURN
---
0x11b: JUMPDEST 
0x11c: V94 = 0x40
0x11e: V95 = M[0x40]
0x11f: V96 = 0x1
0x121: V97 = 0xa0
0x123: V98 = 0x2
0x125: V99 = EXP 0x2 0xa0
0x126: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V101 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x12b: M[V95] = V101
0x12c: V102 = 0x20
0x12e: V103 = ADD 0x20 V95
0x12f: V104 = 0x40
0x131: V105 = M[0x40]
0x134: V106 = SUB V103 V105
0x136: RETURN V105 V106
---
Entry stack: [V13, 0x11b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x11b]

================================

Block 0x137
[0x137:0x13d]
---
Predecessors: [0x5d]
Successors: [0x13e, 0x142]
---
0x137 JUMPDEST
0x138 CALLVALUE
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x137: JUMPDEST 
0x138: V107 = CALLVALUE
0x139: V108 = ISZERO V107
0x13a: V109 = 0x142
0x13d: JUMPI 0x142 V108
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x137]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V110 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x137]
Successors: [0x3e0]
---
0x142 JUMPDEST
0x143 PUSH2 0x11b
0x146 PUSH2 0x3e0
0x149 JUMP
---
0x142: JUMPDEST 
0x143: V111 = 0x11b
0x146: V112 = 0x3e0
0x149: JUMP 0x3e0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V13, 0x11b]

================================

Block 0x14a
[0x14a:0x150]
---
Predecessors: [0x68]
Successors: [0x151, 0x155]
---
0x14a JUMPDEST
0x14b CALLVALUE
0x14c ISZERO
0x14d PUSH2 0x155
0x150 JUMPI
---
0x14a: JUMPDEST 
0x14b: V113 = CALLVALUE
0x14c: V114 = ISZERO V113
0x14d: V115 = 0x155
0x150: JUMPI 0x155 V114
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0x14a]
Successors: []
---
0x151 PUSH1 0x0
0x153 DUP1
0x154 REVERT
---
0x151: V116 = 0x0
0x154: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x155
[0x155:0x16b]
---
Predecessors: [0x14a]
Successors: [0x3ef]
---
0x155 JUMPDEST
0x156 PUSH2 0x94
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 PUSH1 0x4
0x163 CALLDATALOAD
0x164 AND
0x165 PUSH1 0x24
0x167 CALLDATALOAD
0x168 PUSH2 0x3ef
0x16b JUMP
---
0x155: JUMPDEST 
0x156: V117 = 0x94
0x159: V118 = 0x1
0x15b: V119 = 0xa0
0x15d: V120 = 0x2
0x15f: V121 = EXP 0x2 0xa0
0x160: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x161: V123 = 0x4
0x163: V124 = CALLDATALOAD 0x4
0x164: V125 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x165: V126 = 0x24
0x167: V127 = CALLDATALOAD 0x24
0x168: V128 = 0x3ef
0x16b: JUMP 0x3ef
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x94, V125, V127]
Exit stack: [V13, 0x94, V125, V127]

================================

Block 0x16c
[0x16c:0x172]
---
Predecessors: [0x73]
Successors: [0x173, 0x177]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x16c: JUMPDEST 
0x16d: V129 = CALLVALUE
0x16e: V130 = ISZERO V129
0x16f: V131 = 0x177
0x172: JUMPI 0x177 V130
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x16c]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V132 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x177
[0x177:0x18a]
---
Predecessors: [0x16c]
Successors: [0x42f]
---
0x177 JUMPDEST
0x178 PUSH2 0xa9
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 PUSH1 0x4
0x185 CALLDATALOAD
0x186 AND
0x187 PUSH2 0x42f
0x18a JUMP
---
0x177: JUMPDEST 
0x178: V133 = 0xa9
0x17b: V134 = 0x1
0x17d: V135 = 0xa0
0x17f: V136 = 0x2
0x181: V137 = EXP 0x2 0xa0
0x182: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V139 = 0x4
0x185: V140 = CALLDATALOAD 0x4
0x186: V141 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x187: V142 = 0x42f
0x18a: JUMP 0x42f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa9, V141]
Exit stack: [V13, 0xa9, V141]

================================

Block 0x18b
[0x18b:0x191]
---
Predecessors: [0x7e]
Successors: [0x192, 0x196]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x18b: JUMPDEST 
0x18c: V143 = CALLVALUE
0x18d: V144 = ISZERO V143
0x18e: V145 = 0x196
0x191: JUMPI 0x196 V144
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x18b]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V146 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x18b]
Successors: [0x441]
---
0x196 JUMPDEST
0x197 PUSH2 0x94
0x19a PUSH2 0x441
0x19d JUMP
---
0x196: JUMPDEST 
0x197: V147 = 0x94
0x19a: V148 = 0x441
0x19d: JUMP 0x441
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x94]
Exit stack: [V13, 0x94]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x89]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V149 = CALLVALUE
0x1a0: V150 = ISZERO V149
0x1a1: V151 = 0x1a9
0x1a4: JUMPI 0x1a9 V150
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V152 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a9
[0x1a9:0x1bc]
---
Predecessors: [0x19e]
Successors: [0x49b]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x94
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 PUSH1 0x4
0x1b7 CALLDATALOAD
0x1b8 AND
0x1b9 PUSH2 0x49b
0x1bc JUMP
---
0x1a9: JUMPDEST 
0x1aa: V153 = 0x94
0x1ad: V154 = 0x1
0x1af: V155 = 0xa0
0x1b1: V156 = 0x2
0x1b3: V157 = EXP 0x2 0xa0
0x1b4: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V159 = 0x4
0x1b7: V160 = CALLDATALOAD 0x4
0x1b8: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V162 = 0x49b
0x1bc: JUMP 0x49b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x94, V161]
Exit stack: [V13, 0x94, V161]

================================

Block 0x1bd
[0x1bd:0x1c2]
---
Predecessors: [0xa1]
Successors: [0xa9]
---
0x1bd JUMPDEST
0x1be PUSH1 0x2
0x1c0 SLOAD
0x1c1 DUP2
0x1c2 JUMP
---
0x1bd: JUMPDEST 
0x1be: V163 = 0x2
0x1c0: V164 = S[0x2]
0x1c2: JUMP 0xa9
---
Entry stack: [V13, 0xa9]
Stack pops: 1
Stack additions: [S0, V164]
Exit stack: [V13, 0xa9, V164]

================================

Block 0x1c3
[0x1c3:0x1d9]
---
Predecessors: [0xc6]
Successors: [0x1da, 0x1de]
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x0
0x1c6 SLOAD
0x1c7 CALLER
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 SWAP1
0x1d1 DUP2
0x1d2 AND
0x1d3 SWAP2
0x1d4 AND
0x1d5 EQ
0x1d6 PUSH2 0x1de
0x1d9 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V165 = 0x0
0x1c6: V166 = S[0x0]
0x1c7: V167 = CALLER
0x1c8: V168 = 0x1
0x1ca: V169 = 0xa0
0x1cc: V170 = 0x2
0x1ce: V171 = EXP 0x2 0xa0
0x1cf: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d2: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1d4: V174 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V175 = EQ V174 V173
0x1d6: V176 = 0x1de
0x1d9: JUMPI 0x1de V175
---
Entry stack: [V13, 0x94, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V72]

================================

Block 0x1da
[0x1da:0x1dd]
---
Predecessors: [0x1c3]
Successors: []
---
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd REVERT
---
0x1da: V177 = 0x0
0x1dd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V72]

================================

Block 0x1de
[0x1de:0x20c]
---
Predecessors: [0x1c3]
Successors: [0x94]
---
0x1de JUMPDEST
0x1df PUSH1 0x3
0x1e1 DUP1
0x1e2 SLOAD
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 NOT
0x1f9 AND
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 SWAP3
0x203 SWAP1
0x204 SWAP3
0x205 AND
0x206 SWAP2
0x207 SWAP1
0x208 SWAP2
0x209 OR
0x20a SWAP1
0x20b SSTORE
0x20c JUMP
---
0x1de: JUMPDEST 
0x1df: V178 = 0x3
0x1e2: V179 = S[0x3]
0x1e3: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V181 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V182 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V179
0x1fa: V183 = 0x1
0x1fc: V184 = 0xa0
0x1fe: V185 = 0x2
0x200: V186 = EXP 0x2 0xa0
0x201: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x205: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x209: V189 = OR V188 V182
0x20b: S[0x3] = V189
0x20c: JUMP 0x94
---
Entry stack: [V13, 0x94, V72]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x20d
[0x20d:0x22e]
---
Predecessors: [0xe5]
Successors: [0x22f, 0x233]
---
0x20d JUMPDEST
0x20e CALLER
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 DUP2
0x218 AND
0x219 PUSH1 0x0
0x21b SWAP1
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x1
0x220 PUSH1 0x20
0x222 MSTORE
0x223 PUSH1 0x40
0x225 SWAP1
0x226 SHA3
0x227 SLOAD
0x228 DUP1
0x229 ISZERO
0x22a ISZERO
0x22b PUSH2 0x233
0x22e JUMPI
---
0x20d: JUMPDEST 
0x20e: V190 = CALLER
0x20f: V191 = 0x1
0x211: V192 = 0xa0
0x213: V193 = 0x2
0x215: V194 = EXP 0x2 0xa0
0x216: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V196 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x219: V197 = 0x0
0x21d: M[0x0] = V196
0x21e: V198 = 0x1
0x220: V199 = 0x20
0x222: M[0x20] = 0x1
0x223: V200 = 0x40
0x226: V201 = SHA3 0x0 0x40
0x227: V202 = S[V201]
0x229: V203 = ISZERO V202
0x22a: V204 = ISZERO V203
0x22b: V205 = 0x233
0x22e: JUMPI 0x233 V204
---
Entry stack: [V13, 0x94]
Stack pops: 0
Stack additions: [V190, V202]
Exit stack: [V13, 0x94, V190, V202]

================================

Block 0x22f
[0x22f:0x232]
---
Predecessors: [0x20d]
Successors: []
---
0x22f PUSH1 0x0
0x231 DUP1
0x232 REVERT
---
0x22f: V206 = 0x0
0x232: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V190, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V190, V202]

================================

Block 0x233
[0x233:0x246]
---
Predecessors: [0x20d]
Successors: [0x247, 0x24b]
---
0x233 JUMPDEST
0x234 PUSH1 0x1
0x236 PUSH1 0xa0
0x238 PUSH1 0x2
0x23a EXP
0x23b SUB
0x23c ADDRESS
0x23d AND
0x23e BALANCE
0x23f DUP2
0x240 SWAP1
0x241 LT
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x233: JUMPDEST 
0x234: V207 = 0x1
0x236: V208 = 0xa0
0x238: V209 = 0x2
0x23a: V210 = EXP 0x2 0xa0
0x23b: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23c: V212 = ADDRESS
0x23d: V213 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V214 = BALANCE V213
0x241: V215 = LT V214 V202
0x242: V216 = ISZERO V215
0x243: V217 = 0x24b
0x246: JUMPI 0x24b V216
---
Entry stack: [V13, 0x94, V190, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x94, V190, V202]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x233]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V218 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V190, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V190, V202]

================================

Block 0x24b
[0x24b:0x25d]
---
Predecessors: [0x233]
Successors: [0x536]
---
0x24b JUMPDEST
0x24c PUSH1 0x2
0x24e SLOAD
0x24f PUSH2 0x25e
0x252 SWAP1
0x253 DUP3
0x254 PUSH4 0xffffffff
0x259 PUSH2 0x536
0x25c AND
0x25d JUMP
---
0x24b: JUMPDEST 
0x24c: V219 = 0x2
0x24e: V220 = S[0x2]
0x24f: V221 = 0x25e
0x254: V222 = 0xffffffff
0x259: V223 = 0x536
0x25c: V224 = AND 0x536 0xffffffff
0x25d: JUMP 0x536
---
Entry stack: [V13, 0x94, V190, V202]
Stack pops: 1
Stack additions: [S0, 0x25e, V220, S0]
Exit stack: [V13, 0x94, V190, V202, 0x25e, V220, V202]

================================

Block 0x25e
[0x25e:0x2a0]
---
Predecessors: [0x542]
Successors: [0x2a1, 0x2a2]
---
0x25e JUMPDEST
0x25f PUSH1 0x2
0x261 SSTORE
0x262 PUSH1 0x1
0x264 PUSH1 0xa0
0x266 PUSH1 0x2
0x268 EXP
0x269 SUB
0x26a DUP3
0x26b AND
0x26c PUSH1 0x0
0x26e DUP2
0x26f DUP2
0x270 MSTORE
0x271 PUSH1 0x1
0x273 PUSH1 0x20
0x275 MSTORE
0x276 PUSH1 0x40
0x278 DUP1
0x279 DUP3
0x27a SHA3
0x27b SWAP2
0x27c SWAP1
0x27d SWAP2
0x27e SSTORE
0x27f DUP3
0x280 ISZERO
0x281 PUSH2 0x8fc
0x284 MUL
0x285 SWAP1
0x286 DUP4
0x287 SWAP1
0x288 MLOAD
0x289 PUSH1 0x0
0x28b PUSH1 0x40
0x28d MLOAD
0x28e DUP1
0x28f DUP4
0x290 SUB
0x291 DUP2
0x292 DUP6
0x293 DUP9
0x294 DUP9
0x295 CALL
0x296 SWAP4
0x297 POP
0x298 POP
0x299 POP
0x29a POP
0x29b ISZERO
0x29c ISZERO
0x29d PUSH2 0x2a2
0x2a0 JUMPI
---
0x25e: JUMPDEST 
0x25f: V225 = 0x2
0x261: S[0x2] = V519
0x262: V226 = 0x1
0x264: V227 = 0xa0
0x266: V228 = 0x2
0x268: V229 = EXP 0x2 0xa0
0x269: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26b: V231 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V232 = 0x0
0x270: M[0x0] = V231
0x271: V233 = 0x1
0x273: V234 = 0x20
0x275: M[0x20] = 0x1
0x276: V235 = 0x40
0x27a: V236 = SHA3 0x0 0x40
0x27e: S[V236] = 0x0
0x280: V237 = ISZERO V202
0x281: V238 = 0x8fc
0x284: V239 = MUL 0x8fc V237
0x288: V240 = M[0x40]
0x289: V241 = 0x0
0x28b: V242 = 0x40
0x28d: V243 = M[0x40]
0x290: V244 = SUB V240 V243
0x295: V245 = CALL V239 V231 V202 V243 V244 V243 0x0
0x29b: V246 = ISZERO V245
0x29c: V247 = ISZERO V246
0x29d: V248 = 0x2a2
0x2a0: JUMPI 0x2a2 V247
---
Entry stack: [V13, 0x94, V190, V202, V519]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V13, 0x94, V190, V202]

================================

Block 0x2a1
[0x2a1:0x2a1]
---
Predecessors: [0x25e]
Successors: []
---
0x2a1 INVALID
---
0x2a1: INVALID 
---
Entry stack: [V13, 0x94, V190, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V190, V202]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x25e, 0x59d]
Successors: [0x94]
---
0x2a2 JUMPDEST
0x2a3 POP
0x2a4 POP
0x2a5 JUMP
---
0x2a2: JUMPDEST 
0x2a5: JUMP 0x94
---
Entry stack: [V13, 0x94, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a6
[0x2a6:0x2bc]
---
Predecessors: [0xf8]
Successors: [0x2bd, 0x2c1]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x0
0x2a9 SLOAD
0x2aa CALLER
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 AND
0x2b6 SWAP2
0x2b7 AND
0x2b8 EQ
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V249 = 0x0
0x2a9: V250 = S[0x0]
0x2aa: V251 = CALLER
0x2ab: V252 = 0x1
0x2ad: V253 = 0xa0
0x2af: V254 = 0x2
0x2b1: V255 = EXP 0x2 0xa0
0x2b2: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x2b7: V258 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V259 = EQ V258 V257
0x2b9: V260 = 0x2c1
0x2bc: JUMPI 0x2c1 V259
---
Entry stack: [V13, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2a6]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V261 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94]

================================

Block 0x2c1
[0x2c1:0x2fb]
---
Predecessors: [0x2a6]
Successors: [0x2fc, 0x300]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x3
0x2c4 SLOAD
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd AND
0x2ce PUSH4 0x3ccfd60b
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP2
0x2d7 PUSH4 0xffffffff
0x2dc AND
0x2dd PUSH1 0xe0
0x2df PUSH1 0x2
0x2e1 EXP
0x2e2 MUL
0x2e3 DUP2
0x2e4 MSTORE
0x2e5 PUSH1 0x4
0x2e7 ADD
0x2e8 PUSH1 0x0
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed DUP1
0x2ee DUP4
0x2ef SUB
0x2f0 DUP2
0x2f1 PUSH1 0x0
0x2f3 DUP8
0x2f4 DUP1
0x2f5 EXTCODESIZE
0x2f6 ISZERO
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V262 = 0x3
0x2c4: V263 = S[0x3]
0x2c5: V264 = 0x1
0x2c7: V265 = 0xa0
0x2c9: V266 = 0x2
0x2cb: V267 = EXP 0x2 0xa0
0x2cc: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cd: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2ce: V270 = 0x3ccfd60b
0x2d3: V271 = 0x40
0x2d5: V272 = M[0x40]
0x2d7: V273 = 0xffffffff
0x2dc: V274 = AND 0xffffffff 0x3ccfd60b
0x2dd: V275 = 0xe0
0x2df: V276 = 0x2
0x2e1: V277 = EXP 0x2 0xe0
0x2e2: V278 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x2e4: M[V272] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2e5: V279 = 0x4
0x2e7: V280 = ADD 0x4 V272
0x2e8: V281 = 0x0
0x2ea: V282 = 0x40
0x2ec: V283 = M[0x40]
0x2ef: V284 = SUB V280 V283
0x2f1: V285 = 0x0
0x2f5: V286 = EXTCODESIZE V269
0x2f6: V287 = ISZERO V286
0x2f7: V288 = ISZERO V287
0x2f8: V289 = 0x300
0x2fb: JUMPI 0x300 V288
---
Entry stack: [V13, 0x94]
Stack pops: 0
Stack additions: [V269, 0x3ccfd60b, V280, 0x0, V283, V284, V283, 0x0, V269]
Exit stack: [V13, 0x94, V269, 0x3ccfd60b, V280, 0x0, V283, V284, V283, 0x0, V269]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2c1]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V290 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V269, 0x3ccfd60b, V280, 0x0, V283, V284, V283, 0x0, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V269, 0x3ccfd60b, V280, 0x0, V283, V284, V283, 0x0, V269]

================================

Block 0x300
[0x300:0x30c]
---
Predecessors: [0x2c1, 0x45c]
Successors: [0x30d, 0x311]
---
0x300 JUMPDEST
0x301 PUSH2 0x2c6
0x304 GAS
0x305 SUB
0x306 CALL
0x307 ISZERO
0x308 ISZERO
0x309 PUSH2 0x311
0x30c JUMPI
---
0x300: JUMPDEST 
0x301: V291 = 0x2c6
0x304: V292 = GAS
0x305: V293 = SUB V292 0x2c6
0x306: V294 = CALL V293 S0 0x0 S2 S3 S4 0x0
0x307: V295 = ISZERO V294
0x308: V296 = ISZERO V295
0x309: V297 = 0x311
0x30c: JUMPI 0x311 V296
---
Entry stack: [V13, 0x94, S8, {0x3ccfd60b, 0xfdb5a03e}, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x94, S8, {0x3ccfd60b, 0xfdb5a03e}, S6]

================================

Block 0x30d
[0x30d:0x310]
---
Predecessors: [0x300]
Successors: []
---
0x30d PUSH1 0x0
0x30f DUP1
0x310 REVERT
---
0x30d: V298 = 0x0
0x310: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, S2, {0x3ccfd60b, 0xfdb5a03e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, S2, {0x3ccfd60b, 0xfdb5a03e}, S0]

================================

Block 0x311
[0x311:0x315]
---
Predecessors: [0x300]
Successors: [0x94]
---
0x311 JUMPDEST
0x312 POP
0x313 POP
0x314 POP
0x315 JUMP
---
0x311: JUMPDEST 
0x315: JUMP 0x94
---
Entry stack: [V13, 0x94, S2, {0x3ccfd60b, 0xfdb5a03e}, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x316
[0x316:0x36a]
---
Predecessors: [0x100]
Successors: [0x36b, 0x36f]
---
0x316 JUMPDEST
0x317 PUSH1 0x3
0x319 SLOAD
0x31a PUSH1 0x1
0x31c PUSH1 0xa0
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 AND
0x323 PUSH4 0xf088d547
0x328 CALLVALUE
0x329 CALLER
0x32a PUSH1 0x0
0x32c PUSH1 0x40
0x32e MLOAD
0x32f PUSH1 0x20
0x331 ADD
0x332 MSTORE
0x333 PUSH1 0x40
0x335 MLOAD
0x336 PUSH1 0xe0
0x338 PUSH1 0x2
0x33a EXP
0x33b PUSH4 0xffffffff
0x340 DUP6
0x341 AND
0x342 MUL
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x1
0x347 PUSH1 0xa0
0x349 PUSH1 0x2
0x34b EXP
0x34c SUB
0x34d SWAP1
0x34e SWAP2
0x34f AND
0x350 PUSH1 0x4
0x352 DUP3
0x353 ADD
0x354 MSTORE
0x355 PUSH1 0x24
0x357 ADD
0x358 PUSH1 0x20
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e DUP4
0x35f SUB
0x360 DUP2
0x361 DUP6
0x362 DUP9
0x363 DUP1
0x364 EXTCODESIZE
0x365 ISZERO
0x366 ISZERO
0x367 PUSH2 0x36f
0x36a JUMPI
---
0x316: JUMPDEST 
0x317: V299 = 0x3
0x319: V300 = S[0x3]
0x31a: V301 = 0x1
0x31c: V302 = 0xa0
0x31e: V303 = 0x2
0x320: V304 = EXP 0x2 0xa0
0x321: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x323: V307 = 0xf088d547
0x328: V308 = CALLVALUE
0x329: V309 = CALLER
0x32a: V310 = 0x0
0x32c: V311 = 0x40
0x32e: V312 = M[0x40]
0x32f: V313 = 0x20
0x331: V314 = ADD 0x20 V312
0x332: M[V314] = 0x0
0x333: V315 = 0x40
0x335: V316 = M[0x40]
0x336: V317 = 0xe0
0x338: V318 = 0x2
0x33a: V319 = EXP 0x2 0xe0
0x33b: V320 = 0xffffffff
0x341: V321 = AND 0xf088d547 0xffffffff
0x342: V322 = MUL 0xf088d547 0x100000000000000000000000000000000000000000000000000000000
0x344: M[V316] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x345: V323 = 0x1
0x347: V324 = 0xa0
0x349: V325 = 0x2
0x34b: V326 = EXP 0x2 0xa0
0x34c: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34f: V328 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0x350: V329 = 0x4
0x353: V330 = ADD V316 0x4
0x354: M[V330] = V328
0x355: V331 = 0x24
0x357: V332 = ADD 0x24 V316
0x358: V333 = 0x20
0x35a: V334 = 0x40
0x35c: V335 = M[0x40]
0x35f: V336 = SUB V332 V335
0x364: V337 = EXTCODESIZE V306
0x365: V338 = ISZERO V337
0x366: V339 = ISZERO V338
0x367: V340 = 0x36f
0x36a: JUMPI 0x36f V339
---
Entry stack: [V13, 0x94]
Stack pops: 0
Stack additions: [V306, 0xf088d547, V308, V332, 0x20, V335, V336, V335, V308, V306]
Exit stack: [V13, 0x94, V306, 0xf088d547, V308, V332, 0x20, V335, V336, V335, V308, V306]

================================

Block 0x36b
[0x36b:0x36e]
---
Predecessors: [0x316]
Successors: []
---
0x36b PUSH1 0x0
0x36d DUP1
0x36e REVERT
---
0x36b: V341 = 0x0
0x36e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V306, 0xf088d547, V308, V332, 0x20, V335, V336, V335, V308, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V306, 0xf088d547, V308, V332, 0x20, V335, V336, V335, V308, V306]

================================

Block 0x36f
[0x36f:0x37b]
---
Predecessors: [0x316]
Successors: [0x37c, 0x380]
---
0x36f JUMPDEST
0x370 PUSH2 0x25ee
0x373 GAS
0x374 SUB
0x375 CALL
0x376 ISZERO
0x377 ISZERO
0x378 PUSH2 0x380
0x37b JUMPI
---
0x36f: JUMPDEST 
0x370: V342 = 0x25ee
0x373: V343 = GAS
0x374: V344 = SUB V343 0x25ee
0x375: V345 = CALL V344 V306 V308 V335 V336 V335 0x20
0x376: V346 = ISZERO V345
0x377: V347 = ISZERO V346
0x378: V348 = 0x380
0x37b: JUMPI 0x380 V347
---
Entry stack: [V13, 0x94, V306, 0xf088d547, V308, V332, 0x20, V335, V336, V335, V308, V306]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x94, V306, 0xf088d547, V308, V332]

================================

Block 0x37c
[0x37c:0x37f]
---
Predecessors: [0x36f]
Successors: []
---
0x37c PUSH1 0x0
0x37e DUP1
0x37f REVERT
---
0x37c: V349 = 0x0
0x37f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V306, 0xf088d547, V308, V332]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V306, 0xf088d547, V308, V332]

================================

Block 0x380
[0x380:0x3d0]
---
Predecessors: [0x36f]
Successors: [0x94]
---
0x380 JUMPDEST
0x381 POP
0x382 POP
0x383 POP
0x384 POP
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 MLOAD
0x38a POP
0x38b POP
0x38c PUSH1 0x1
0x38e PUSH1 0xa0
0x390 PUSH1 0x2
0x392 EXP
0x393 SUB
0x394 CALLER
0x395 AND
0x396 PUSH32 0xbdf1e51339f01f93307d90fb0c439218118fa1c4855e5a60e924527030212ab2
0x3b7 CALLVALUE
0x3b8 TIMESTAMP
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc SWAP2
0x3bd DUP3
0x3be MSTORE
0x3bf PUSH1 0x20
0x3c1 DUP3
0x3c2 ADD
0x3c3 MSTORE
0x3c4 PUSH1 0x40
0x3c6 SWAP1
0x3c7 DUP2
0x3c8 ADD
0x3c9 SWAP1
0x3ca MLOAD
0x3cb DUP1
0x3cc SWAP2
0x3cd SUB
0x3ce SWAP1
0x3cf LOG2
0x3d0 JUMP
---
0x380: JUMPDEST 
0x385: V350 = 0x40
0x387: V351 = M[0x40]
0x389: V352 = M[V351]
0x38c: V353 = 0x1
0x38e: V354 = 0xa0
0x390: V355 = 0x2
0x392: V356 = EXP 0x2 0xa0
0x393: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x394: V358 = CALLER
0x395: V359 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x396: V360 = 0xbdf1e51339f01f93307d90fb0c439218118fa1c4855e5a60e924527030212ab2
0x3b7: V361 = CALLVALUE
0x3b8: V362 = TIMESTAMP
0x3b9: V363 = 0x40
0x3bb: V364 = M[0x40]
0x3be: M[V364] = V361
0x3bf: V365 = 0x20
0x3c2: V366 = ADD V364 0x20
0x3c3: M[V366] = V362
0x3c4: V367 = 0x40
0x3c8: V368 = ADD 0x40 V364
0x3ca: V369 = M[0x40]
0x3cd: V370 = SUB V368 V369
0x3cf: LOG V369 V370 0xbdf1e51339f01f93307d90fb0c439218118fa1c4855e5a60e924527030212ab2 V359
0x3d0: JUMP 0x94
---
Entry stack: [V13, 0x94, V306, 0xf088d547, V308, V332]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x3d1
[0x3d1:0x3df]
---
Predecessors: [0x113]
Successors: [0x11b]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x0
0x3d4 SLOAD
0x3d5 PUSH1 0x1
0x3d7 PUSH1 0xa0
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc SUB
0x3dd AND
0x3de DUP2
0x3df JUMP
---
0x3d1: JUMPDEST 
0x3d2: V371 = 0x0
0x3d4: V372 = S[0x0]
0x3d5: V373 = 0x1
0x3d7: V374 = 0xa0
0x3d9: V375 = 0x2
0x3db: V376 = EXP 0x2 0xa0
0x3dc: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dd: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x3df: JUMP 0x11b
---
Entry stack: [V13, 0x11b]
Stack pops: 1
Stack additions: [S0, V378]
Exit stack: [V13, 0x11b, V378]

================================

Block 0x3e0
[0x3e0:0x3ee]
---
Predecessors: [0x142]
Successors: [0x11b]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x3
0x3e3 SLOAD
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec AND
0x3ed DUP2
0x3ee JUMP
---
0x3e0: JUMPDEST 
0x3e1: V379 = 0x3
0x3e3: V380 = S[0x3]
0x3e4: V381 = 0x1
0x3e6: V382 = 0xa0
0x3e8: V383 = 0x2
0x3ea: V384 = EXP 0x2 0xa0
0x3eb: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x3ee: JUMP 0x11b
---
Entry stack: [V13, 0x11b]
Stack pops: 1
Stack additions: [S0, V386]
Exit stack: [V13, 0x11b, V386]

================================

Block 0x3ef
[0x3ef:0x405]
---
Predecessors: [0x155]
Successors: [0x406, 0x40a]
---
0x3ef JUMPDEST
0x3f0 PUSH1 0x0
0x3f2 SLOAD
0x3f3 CALLER
0x3f4 PUSH1 0x1
0x3f6 PUSH1 0xa0
0x3f8 PUSH1 0x2
0x3fa EXP
0x3fb SUB
0x3fc SWAP1
0x3fd DUP2
0x3fe AND
0x3ff SWAP2
0x400 AND
0x401 EQ
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3ef: JUMPDEST 
0x3f0: V387 = 0x0
0x3f2: V388 = S[0x0]
0x3f3: V389 = CALLER
0x3f4: V390 = 0x1
0x3f6: V391 = 0xa0
0x3f8: V392 = 0x2
0x3fa: V393 = EXP 0x2 0xa0
0x3fb: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fe: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x400: V396 = AND V388 0xffffffffffffffffffffffffffffffffffffffff
0x401: V397 = EQ V396 V395
0x402: V398 = 0x40a
0x405: JUMPI 0x40a V397
---
Entry stack: [V13, 0x94, V125, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V125, V127]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3ef]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V399 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V125, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V125, V127]

================================

Block 0x40a
[0x40a:0x420]
---
Predecessors: [0x3ef]
Successors: [0x421, 0x425]
---
0x40a JUMPDEST
0x40b PUSH1 0x2
0x40d SLOAD
0x40e PUSH1 0x1
0x410 PUSH1 0xa0
0x412 PUSH1 0x2
0x414 EXP
0x415 SUB
0x416 ADDRESS
0x417 AND
0x418 BALANCE
0x419 SUB
0x41a DUP2
0x41b GT
0x41c ISZERO
0x41d PUSH2 0x425
0x420 JUMPI
---
0x40a: JUMPDEST 
0x40b: V400 = 0x2
0x40d: V401 = S[0x2]
0x40e: V402 = 0x1
0x410: V403 = 0xa0
0x412: V404 = 0x2
0x414: V405 = EXP 0x2 0xa0
0x415: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x416: V407 = ADDRESS
0x417: V408 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x418: V409 = BALANCE V408
0x419: V410 = SUB V409 V401
0x41b: V411 = GT V127 V410
0x41c: V412 = ISZERO V411
0x41d: V413 = 0x425
0x420: JUMPI 0x425 V412
---
Entry stack: [V13, 0x94, V125, V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x94, V125, V127]

================================

Block 0x421
[0x421:0x424]
---
Predecessors: [0x40a]
Successors: []
---
0x421 PUSH1 0x0
0x423 DUP1
0x424 REVERT
---
0x421: V414 = 0x0
0x424: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V125, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V125, V127]

================================

Block 0x425
[0x425:0x42e]
---
Predecessors: [0x40a]
Successors: [0x548]
---
0x425 JUMPDEST
0x426 PUSH2 0x2a2
0x429 DUP3
0x42a DUP3
0x42b PUSH2 0x548
0x42e JUMP
---
0x425: JUMPDEST 
0x426: V415 = 0x2a2
0x42b: V416 = 0x548
0x42e: JUMP 0x548
---
Entry stack: [V13, 0x94, V125, V127]
Stack pops: 2
Stack additions: [S1, S0, 0x2a2, S1, S0]
Exit stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127]

================================

Block 0x42f
[0x42f:0x440]
---
Predecessors: [0x177]
Successors: [0xa9]
---
0x42f JUMPDEST
0x430 PUSH1 0x1
0x432 PUSH1 0x20
0x434 MSTORE
0x435 PUSH1 0x0
0x437 SWAP1
0x438 DUP2
0x439 MSTORE
0x43a PUSH1 0x40
0x43c SWAP1
0x43d SHA3
0x43e SLOAD
0x43f DUP2
0x440 JUMP
---
0x42f: JUMPDEST 
0x430: V417 = 0x1
0x432: V418 = 0x20
0x434: M[0x20] = 0x1
0x435: V419 = 0x0
0x439: M[0x0] = V141
0x43a: V420 = 0x40
0x43d: V421 = SHA3 0x0 0x40
0x43e: V422 = S[V421]
0x440: JUMP 0xa9
---
Entry stack: [V13, 0xa9, V141]
Stack pops: 2
Stack additions: [S1, V422]
Exit stack: [V13, 0xa9, V422]

================================

Block 0x441
[0x441:0x457]
---
Predecessors: [0x196]
Successors: [0x458, 0x45c]
---
0x441 JUMPDEST
0x442 PUSH1 0x0
0x444 SLOAD
0x445 CALLER
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e SWAP1
0x44f DUP2
0x450 AND
0x451 SWAP2
0x452 AND
0x453 EQ
0x454 PUSH2 0x45c
0x457 JUMPI
---
0x441: JUMPDEST 
0x442: V423 = 0x0
0x444: V424 = S[0x0]
0x445: V425 = CALLER
0x446: V426 = 0x1
0x448: V427 = 0xa0
0x44a: V428 = 0x2
0x44c: V429 = EXP 0x2 0xa0
0x44d: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x450: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x452: V432 = AND V424 0xffffffffffffffffffffffffffffffffffffffff
0x453: V433 = EQ V432 V431
0x454: V434 = 0x45c
0x457: JUMPI 0x45c V433
---
Entry stack: [V13, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94]

================================

Block 0x458
[0x458:0x45b]
---
Predecessors: [0x441]
Successors: []
---
0x458 PUSH1 0x0
0x45a DUP1
0x45b REVERT
---
0x458: V435 = 0x0
0x45b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94]

================================

Block 0x45c
[0x45c:0x496]
---
Predecessors: [0x441]
Successors: [0x300, 0x497]
---
0x45c JUMPDEST
0x45d PUSH1 0x3
0x45f SLOAD
0x460 PUSH1 0x1
0x462 PUSH1 0xa0
0x464 PUSH1 0x2
0x466 EXP
0x467 SUB
0x468 AND
0x469 PUSH4 0xfdb5a03e
0x46e PUSH1 0x40
0x470 MLOAD
0x471 DUP2
0x472 PUSH4 0xffffffff
0x477 AND
0x478 PUSH1 0xe0
0x47a PUSH1 0x2
0x47c EXP
0x47d MUL
0x47e DUP2
0x47f MSTORE
0x480 PUSH1 0x4
0x482 ADD
0x483 PUSH1 0x0
0x485 PUSH1 0x40
0x487 MLOAD
0x488 DUP1
0x489 DUP4
0x48a SUB
0x48b DUP2
0x48c PUSH1 0x0
0x48e DUP8
0x48f DUP1
0x490 EXTCODESIZE
0x491 ISZERO
0x492 ISZERO
0x493 PUSH2 0x300
0x496 JUMPI
---
0x45c: JUMPDEST 
0x45d: V436 = 0x3
0x45f: V437 = S[0x3]
0x460: V438 = 0x1
0x462: V439 = 0xa0
0x464: V440 = 0x2
0x466: V441 = EXP 0x2 0xa0
0x467: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x468: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x469: V444 = 0xfdb5a03e
0x46e: V445 = 0x40
0x470: V446 = M[0x40]
0x472: V447 = 0xffffffff
0x477: V448 = AND 0xffffffff 0xfdb5a03e
0x478: V449 = 0xe0
0x47a: V450 = 0x2
0x47c: V451 = EXP 0x2 0xe0
0x47d: V452 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfdb5a03e
0x47f: M[V446] = 0xfdb5a03e00000000000000000000000000000000000000000000000000000000
0x480: V453 = 0x4
0x482: V454 = ADD 0x4 V446
0x483: V455 = 0x0
0x485: V456 = 0x40
0x487: V457 = M[0x40]
0x48a: V458 = SUB V454 V457
0x48c: V459 = 0x0
0x490: V460 = EXTCODESIZE V443
0x491: V461 = ISZERO V460
0x492: V462 = ISZERO V461
0x493: V463 = 0x300
0x496: JUMPI 0x300 V462
---
Entry stack: [V13, 0x94]
Stack pops: 0
Stack additions: [V443, 0xfdb5a03e, V454, 0x0, V457, V458, V457, 0x0, V443]
Exit stack: [V13, 0x94, V443, 0xfdb5a03e, V454, 0x0, V457, V458, V457, 0x0, V443]

================================

Block 0x497
[0x497:0x49a]
---
Predecessors: [0x45c]
Successors: []
---
0x497 PUSH1 0x0
0x499 DUP1
0x49a REVERT
---
0x497: V464 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V443, 0xfdb5a03e, V454, 0x0, V457, V458, V457, 0x0, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V443, 0xfdb5a03e, V454, 0x0, V457, V458, V457, 0x0, V443]

================================

Block 0x49b
[0x49b:0x4b1]
---
Predecessors: [0x1a9]
Successors: [0x4b2, 0x4b6]
---
0x49b JUMPDEST
0x49c PUSH1 0x0
0x49e SLOAD
0x49f CALLER
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 SWAP1
0x4a9 DUP2
0x4aa AND
0x4ab SWAP2
0x4ac AND
0x4ad EQ
0x4ae PUSH2 0x4b6
0x4b1 JUMPI
---
0x49b: JUMPDEST 
0x49c: V465 = 0x0
0x49e: V466 = S[0x0]
0x49f: V467 = CALLER
0x4a0: V468 = 0x1
0x4a2: V469 = 0xa0
0x4a4: V470 = 0x2
0x4a6: V471 = EXP 0x2 0xa0
0x4a7: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x4ac: V474 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V475 = EQ V474 V473
0x4ae: V476 = 0x4b6
0x4b1: JUMPI 0x4b6 V475
---
Entry stack: [V13, 0x94, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V161]

================================

Block 0x4b2
[0x4b2:0x4b5]
---
Predecessors: [0x49b]
Successors: []
---
0x4b2 PUSH1 0x0
0x4b4 DUP1
0x4b5 REVERT
---
0x4b2: V477 = 0x0
0x4b5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V161]

================================

Block 0x4b6
[0x4b6:0x4c6]
---
Predecessors: [0x49b]
Successors: [0x4c7, 0x4cb]
---
0x4b6 JUMPDEST
0x4b7 PUSH1 0x1
0x4b9 PUSH1 0xa0
0x4bb PUSH1 0x2
0x4bd EXP
0x4be SUB
0x4bf DUP2
0x4c0 AND
0x4c1 ISZERO
0x4c2 ISZERO
0x4c3 PUSH2 0x4cb
0x4c6 JUMPI
---
0x4b6: JUMPDEST 
0x4b7: V478 = 0x1
0x4b9: V479 = 0xa0
0x4bb: V480 = 0x2
0x4bd: V481 = EXP 0x2 0xa0
0x4be: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c0: V483 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V484 = ISZERO V483
0x4c2: V485 = ISZERO V484
0x4c3: V486 = 0x4cb
0x4c6: JUMPI 0x4cb V485
---
Entry stack: [V13, 0x94, V161]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x94, V161]

================================

Block 0x4c7
[0x4c7:0x4ca]
---
Predecessors: [0x4b6]
Successors: []
---
0x4c7 PUSH1 0x0
0x4c9 DUP1
0x4ca REVERT
---
0x4c7: V487 = 0x0
0x4ca: REVERT 0x0 0x0
---
Entry stack: [V13, 0x94, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V161]

================================

Block 0x4cb
[0x4cb:0x535]
---
Predecessors: [0x4b6]
Successors: [0x94]
---
0x4cb JUMPDEST
0x4cc PUSH1 0x0
0x4ce SLOAD
0x4cf PUSH1 0x1
0x4d1 PUSH1 0xa0
0x4d3 PUSH1 0x2
0x4d5 EXP
0x4d6 SUB
0x4d7 DUP1
0x4d8 DUP4
0x4d9 AND
0x4da SWAP2
0x4db AND
0x4dc PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x4fd PUSH1 0x40
0x4ff MLOAD
0x500 PUSH1 0x40
0x502 MLOAD
0x503 DUP1
0x504 SWAP2
0x505 SUB
0x506 SWAP1
0x507 LOG3
0x508 PUSH1 0x0
0x50a DUP1
0x50b SLOAD
0x50c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x521 NOT
0x522 AND
0x523 PUSH1 0x1
0x525 PUSH1 0xa0
0x527 PUSH1 0x2
0x529 EXP
0x52a SUB
0x52b SWAP3
0x52c SWAP1
0x52d SWAP3
0x52e AND
0x52f SWAP2
0x530 SWAP1
0x531 SWAP2
0x532 OR
0x533 SWAP1
0x534 SSTORE
0x535 JUMP
---
0x4cb: JUMPDEST 
0x4cc: V488 = 0x0
0x4ce: V489 = S[0x0]
0x4cf: V490 = 0x1
0x4d1: V491 = 0xa0
0x4d3: V492 = 0x2
0x4d5: V493 = EXP 0x2 0xa0
0x4d6: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d9: V495 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x4db: V496 = AND V489 0xffffffffffffffffffffffffffffffffffffffff
0x4dc: V497 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x4fd: V498 = 0x40
0x4ff: V499 = M[0x40]
0x500: V500 = 0x40
0x502: V501 = M[0x40]
0x505: V502 = SUB V499 V501
0x507: LOG V501 V502 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V496 V495
0x508: V503 = 0x0
0x50b: V504 = S[0x0]
0x50c: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x521: V506 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x522: V507 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V504
0x523: V508 = 0x1
0x525: V509 = 0xa0
0x527: V510 = 0x2
0x529: V511 = EXP 0x2 0xa0
0x52a: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52e: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x532: V514 = OR V513 V507
0x534: S[0x0] = V514
0x535: JUMP 0x94
---
Entry stack: [V13, 0x94, V161]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x536
[0x536:0x540]
---
Predecessors: [0x24b]
Successors: [0x541, 0x542]
---
0x536 JUMPDEST
0x537 PUSH1 0x0
0x539 DUP3
0x53a DUP3
0x53b GT
0x53c ISZERO
0x53d PUSH2 0x542
0x540 JUMPI
---
0x536: JUMPDEST 
0x537: V515 = 0x0
0x53b: V516 = GT V202 V220
0x53c: V517 = ISZERO V516
0x53d: V518 = 0x542
0x540: JUMPI 0x542 V517
---
Entry stack: [V13, 0x94, V190, V202, 0x25e, V220, V202]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x94, V190, V202, 0x25e, V220, V202, 0x0]

================================

Block 0x541
[0x541:0x541]
---
Predecessors: [0x536]
Successors: []
---
0x541 INVALID
---
0x541: INVALID 
---
Entry stack: [V13, 0x94, V190, V202, 0x25e, V220, V202, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V190, V202, 0x25e, V220, V202, 0x0]

================================

Block 0x542
[0x542:0x547]
---
Predecessors: [0x536]
Successors: [0x25e]
---
0x542 JUMPDEST
0x543 POP
0x544 SWAP1
0x545 SUB
0x546 SWAP1
0x547 JUMP
---
0x542: JUMPDEST 
0x545: V519 = SUB V220 V202
0x547: JUMP 0x25e
---
Entry stack: [V13, 0x94, V190, V202, 0x25e, V220, V202, 0x0]
Stack pops: 4
Stack additions: [V519]
Exit stack: [V13, 0x94, V190, V202, V519]

================================

Block 0x548
[0x548:0x570]
---
Predecessors: [0x425]
Successors: [0x5a4]
---
0x548 JUMPDEST
0x549 PUSH1 0x1
0x54b PUSH1 0xa0
0x54d PUSH1 0x2
0x54f EXP
0x550 SUB
0x551 DUP3
0x552 AND
0x553 PUSH1 0x0
0x555 SWAP1
0x556 DUP2
0x557 MSTORE
0x558 PUSH1 0x1
0x55a PUSH1 0x20
0x55c MSTORE
0x55d PUSH1 0x40
0x55f SWAP1
0x560 SHA3
0x561 SLOAD
0x562 PUSH2 0x571
0x565 SWAP1
0x566 DUP3
0x567 PUSH4 0xffffffff
0x56c PUSH2 0x5a4
0x56f AND
0x570 JUMP
---
0x548: JUMPDEST 
0x549: V520 = 0x1
0x54b: V521 = 0xa0
0x54d: V522 = 0x2
0x54f: V523 = EXP 0x2 0xa0
0x550: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x552: V525 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x553: V526 = 0x0
0x557: M[0x0] = V525
0x558: V527 = 0x1
0x55a: V528 = 0x20
0x55c: M[0x20] = 0x1
0x55d: V529 = 0x40
0x560: V530 = SHA3 0x0 0x40
0x561: V531 = S[V530]
0x562: V532 = 0x571
0x567: V533 = 0xffffffff
0x56c: V534 = 0x5a4
0x56f: V535 = AND 0x5a4 0xffffffff
0x570: JUMP 0x5a4
---
Entry stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127]
Stack pops: 2
Stack additions: [S1, S0, 0x571, V531, S0]
Exit stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, 0x571, V531, V127]

================================

Block 0x571
[0x571:0x59c]
---
Predecessors: [0x5b3]
Successors: [0x5a4]
---
0x571 JUMPDEST
0x572 PUSH1 0x1
0x574 PUSH1 0xa0
0x576 PUSH1 0x2
0x578 EXP
0x579 SUB
0x57a DUP4
0x57b AND
0x57c PUSH1 0x0
0x57e SWAP1
0x57f DUP2
0x580 MSTORE
0x581 PUSH1 0x1
0x583 PUSH1 0x20
0x585 MSTORE
0x586 PUSH1 0x40
0x588 SWAP1
0x589 SHA3
0x58a SSTORE
0x58b PUSH1 0x2
0x58d SLOAD
0x58e PUSH2 0x59d
0x591 SWAP1
0x592 DUP3
0x593 PUSH4 0xffffffff
0x598 PUSH2 0x5a4
0x59b AND
0x59c JUMP
---
0x571: JUMPDEST 
0x572: V536 = 0x1
0x574: V537 = 0xa0
0x576: V538 = 0x2
0x578: V539 = EXP 0x2 0xa0
0x579: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57b: V541 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V542 = 0x0
0x580: M[0x0] = V541
0x581: V543 = 0x1
0x583: V544 = 0x20
0x585: M[0x20] = 0x1
0x586: V545 = 0x40
0x589: V546 = SHA3 0x0 0x40
0x58a: S[V546] = S0
0x58b: V547 = 0x2
0x58d: V548 = S[0x2]
0x58e: V549 = 0x59d
0x593: V550 = 0xffffffff
0x598: V551 = 0x5a4
0x59b: V552 = AND 0x5a4 0xffffffff
0x59c: JUMP 0x5a4
---
Entry stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x59d, V548, S1]
Exit stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, 0x59d, V548, V127]

================================

Block 0x59d
[0x59d:0x5a3]
---
Predecessors: [0x5b3]
Successors: [0x2a2]
---
0x59d JUMPDEST
0x59e PUSH1 0x2
0x5a0 SSTORE
0x5a1 POP
0x5a2 POP
0x5a3 JUMP
---
0x59d: JUMPDEST 
0x59e: V553 = 0x2
0x5a0: S[0x2] = S0
0x5a3: JUMP 0x2a2
---
Entry stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x94, V125, V127]

================================

Block 0x5a4
[0x5a4:0x5b1]
---
Predecessors: [0x548, 0x571]
Successors: [0x5b2, 0x5b3]
---
0x5a4 JUMPDEST
0x5a5 PUSH1 0x0
0x5a7 DUP3
0x5a8 DUP3
0x5a9 ADD
0x5aa DUP4
0x5ab DUP2
0x5ac LT
0x5ad ISZERO
0x5ae PUSH2 0x5b3
0x5b1 JUMPI
---
0x5a4: JUMPDEST 
0x5a5: V554 = 0x0
0x5a9: V555 = ADD V127 S1
0x5ac: V556 = LT V555 S1
0x5ad: V557 = ISZERO V556
0x5ae: V558 = 0x5b3
0x5b1: JUMPI 0x5b3 V557
---
Entry stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, {0x571, 0x59d}, S1, V127]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V555]
Exit stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, {0x571, 0x59d}, S1, V127, 0x0, V555]

================================

Block 0x5b2
[0x5b2:0x5b2]
---
Predecessors: [0x5a4]
Successors: []
---
0x5b2 INVALID
---
0x5b2: INVALID 
---
Entry stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, {0x571, 0x59d}, S3, V127, 0x0, V555]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, {0x571, 0x59d}, S3, V127, 0x0, V555]

================================

Block 0x5b3
[0x5b3:0x5b9]
---
Predecessors: [0x5a4]
Successors: [0x571, 0x59d]
---
0x5b3 JUMPDEST
0x5b4 SWAP4
0x5b5 SWAP3
0x5b6 POP
0x5b7 POP
0x5b8 POP
0x5b9 JUMP
---
0x5b3: JUMPDEST 
0x5b9: JUMP {0x571, 0x59d}
---
Entry stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, {0x571, 0x59d}, S3, V127, 0x0, V555]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x94, V125, V127, 0x2a2, V125, V127, V555]

================================

Block 0x5ba
[0x5ba:0x5f6]
---
Predecessors: []
Successors: []
---
0x5ba STOP
0x5bb LOG1
0x5bc PUSH6 0x627a7a723058
0x5c3 SHA3
0x5c4 MISSING 0xc5
0x5c5 SWAP10
0x5c6 MISSING 0xb5
0x5c7 CALLDATASIZE
0x5c8 SLT
0x5c9 MISSING 0xa7
0x5ca MISSING 0x49
0x5cb GASPRICE
0x5cc DUP8
0x5cd DUP2
0x5ce SWAP3
0x5cf MISSING 0xcb
0x5d0 MISSING 0xea
0x5d1 MISSING 0xf
0x5d2 SWAP14
0x5d3 POP
0x5d4 STOP
0x5d5 MISSING 0x2e
0x5d6 MISSING 0xa8
0x5d7 MISSING 0xbe
0x5d8 MISSING 0xca
0x5d9 DUP14
0x5da SWAP4
0x5db MISSING 0xea
0x5dc LOG4
0x5dd PUSH25 0x3cd16e44995f0029
---
0x5ba: STOP 
0x5bb: LOG S0 S1 S2
0x5bc: V559 = 0x627a7a723058
0x5c3: V560 = SHA3 0x627a7a723058 S3
0x5c4: MISSING 0xc5
0x5c6: MISSING 0xb5
0x5c7: V561 = CALLDATASIZE
0x5c8: V562 = SLT V561 S0
0x5c9: MISSING 0xa7
0x5ca: MISSING 0x49
0x5cb: V563 = GASPRICE
0x5cf: MISSING 0xcb
0x5d0: MISSING 0xea
0x5d1: MISSING 0xf
0x5d4: STOP 
0x5d5: MISSING 0x2e
0x5d6: MISSING 0xa8
0x5d7: MISSING 0xbe
0x5d8: MISSING 0xca
0x5db: MISSING 0xea
0x5dc: LOG S0 S1 S2 S3 S4 S5
0x5dd: V564 = 0x3cd16e44995f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V560, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, V562, S0, S6, V563, V563, S1, S2, S3, S4, S5, S6, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S3, S0, S1, S2, S13, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, 0x3cd16e44995f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x5b4487
Entry block: 0x96
Exit block: 0xa9
Body: 0x96, 0x9d, 0xa1, 0xa9, 0x1bd

Function 1:
Public function signature: 0x53b239c7
Entry block: 0xbb
Exit block: 0x94
Body: 0x94, 0xbb, 0xc2, 0xc6, 0x1c3, 0x1da, 0x1de

Function 2:
Public function signature: 0x6103d70b
Entry block: 0xda
Exit block: 0x94
Body: 0x94, 0xda, 0xe1, 0xe5, 0x20d, 0x22f, 0x233, 0x247, 0x24b, 0x25e, 0x2a1, 0x2a2, 0x536, 0x541, 0x542

Function 3:
Public function signature: 0x6a474002
Entry block: 0xed
Exit block: 0x94
Body: 0x94, 0xed, 0xf4, 0xf8, 0x2a6, 0x2bd, 0x2c1, 0x2fc, 0x300, 0x30d, 0x311

Function 4:
Public function signature: 0x8b4c40b0
Entry block: 0x100
Exit block: 0x94
Body: 0x94, 0x100, 0x316, 0x36b, 0x36f, 0x37c, 0x380

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x108
Exit block: 0x11b
Body: 0x108, 0x10f, 0x113, 0x11b, 0x3d1

Function 6:
Public function signature: 0xa4e01230
Entry block: 0x137
Exit block: 0x11b
Body: 0x11b, 0x137, 0x13e, 0x142, 0x3e0

Function 7:
Public function signature: 0xd1632f67
Entry block: 0x14a
Exit block: 0x94
Body: 0x94, 0x14a, 0x151, 0x155, 0x2a2, 0x3ef, 0x406, 0x40a, 0x421, 0x425, 0x548, 0x571

Function 8:
Public function signature: 0xe2982c21
Entry block: 0x16c
Exit block: 0xa9
Body: 0xa9, 0x16c, 0x173, 0x177, 0x42f

Function 9:
Public function signature: 0xf03a5687
Entry block: 0x18b
Exit block: 0x94
Body: 0x94, 0x18b, 0x192, 0x196, 0x300, 0x30d, 0x311, 0x441, 0x458, 0x45c, 0x497

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x19e
Exit block: 0x94
Body: 0x94, 0x19e, 0x1a5, 0x1a9, 0x49b, 0x4b2, 0x4b6, 0x4c7, 0x4cb

Function 11:
Public fallback function
Entry block: 0x94
Exit block: 0x94
Body: 0x94

Function 12:
Private function
Entry block: 0x5a4
Exit block: 0x5b3
Body: 0x5a4, 0x5b3

