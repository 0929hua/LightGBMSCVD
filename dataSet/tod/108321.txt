Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x30af58d2
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x30af58d2
0x3c: V13 = EQ 0x30af58d2 V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x87]
---
0x41 DUP1
0x42 PUSH4 0x7c01b8f4
0x47 EQ
0x48 PUSH2 0x87
0x4b JUMPI
---
0x42: V15 = 0x7c01b8f4
0x47: V16 = EQ 0x7c01b8f4 V11
0x48: V17 = 0x87
0x4b: JUMPI 0x87 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xa9]
---
0x4c DUP1
0x4d PUSH4 0x7e20c268
0x52 EQ
0x53 PUSH2 0xa9
0x56 JUMPI
---
0x4d: V18 = 0x7e20c268
0x52: V19 = EQ 0x7e20c268 V11
0x53: V20 = 0xa9
0x56: JUMPI 0xa9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xb3]
---
0x57 DUP1
0x58 PUSH4 0xa06d88a0
0x5d EQ
0x5e PUSH2 0xb3
0x61 JUMPI
---
0x58: V21 = 0xa06d88a0
0x5d: V22 = EQ 0xa06d88a0 V11
0x5e: V23 = 0xb3
0x61: JUMPI 0xb3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0xde]
---
0x62 DUP1
0x63 PUSH4 0xa3e11807
0x68 EQ
0x69 PUSH2 0xde
0x6c JUMPI
---
0x63: V24 = 0xa3e11807
0x68: V25 = EQ 0xa3e11807 V11
0x69: V26 = 0xde
0x6c: JUMPI 0xde V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x135]
---
0x6d DUP1
0x6e PUSH4 0xf48ba7d1
0x73 EQ
0x74 PUSH2 0x135
0x77 JUMPI
---
0x6e: V27 = 0xf48ba7d1
0x73: V28 = EQ 0xf48ba7d1 V11
0x74: V29 = 0x135
0x77: JUMPI 0x135 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x84]
---
Predecessors: [0xd]
Successors: [0x18c]
---
0x7d JUMPDEST
0x7e PUSH2 0x85
0x81 PUSH2 0x18c
0x84 JUMP
---
0x7d: JUMPDEST 
0x7e: V31 = 0x85
0x81: V32 = 0x18c
0x84: JUMP 0x18c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x85]
Exit stack: [V11, 0x85]

================================

Block 0x85
[0x85:0x86]
---
Predecessors: [0x3e3, 0x821]
Successors: []
---
0x85 JUMPDEST
0x86 STOP
---
0x85: JUMPDEST 
0x86: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x41]
Successors: [0x3f7]
---
0x87 JUMPDEST
0x88 PUSH2 0x8f
0x8b PUSH2 0x3f7
0x8e JUMP
---
0x87: JUMPDEST 
0x88: V33 = 0x8f
0x8b: V34 = 0x3f7
0x8e: JUMP 0x3f7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0xa8]
---
Predecessors: [0x5b0]
Successors: []
---
0x8f JUMPDEST
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 DUP3
0x95 ISZERO
0x96 ISZERO
0x97 ISZERO
0x98 ISZERO
0x99 DUP2
0x9a MSTORE
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP2
0x9f POP
0xa0 POP
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 DUP1
0xa5 SWAP2
0xa6 SUB
0xa7 SWAP1
0xa8 RETURN
---
0x8f: JUMPDEST 
0x90: V35 = 0x40
0x92: V36 = M[0x40]
0x95: V37 = ISZERO 0x1
0x96: V38 = ISZERO 0x0
0x97: V39 = ISZERO 0x1
0x98: V40 = ISZERO 0x0
0x9a: M[V36] = 0x1
0x9b: V41 = 0x20
0x9d: V42 = ADD 0x20 V36
0xa1: V43 = 0x40
0xa3: V44 = M[0x40]
0xa6: V45 = SUB V42 V44
0xa8: RETURN V44 V45
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9
[0xa9:0xb0]
---
Predecessors: [0x4c]
Successors: [0x5c9]
---
0xa9 JUMPDEST
0xaa PUSH2 0xb1
0xad PUSH2 0x5c9
0xb0 JUMP
---
0xa9: JUMPDEST 
0xaa: V46 = 0xb1
0xad: V47 = 0x5c9
0xb0: JUMP 0x5c9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb1]
Exit stack: [V11, 0xb1]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: [0x3e3, 0x821]
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0x57]
Successors: [0xbb, 0xbf]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 DUP1
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xb3: JUMPDEST 
0xb4: V48 = CALLVALUE
0xb6: V49 = ISZERO V48
0xb7: V50 = 0xbf
0xba: JUMPI 0xbf V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xb3]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V51 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xbf
[0xbf:0xc7]
---
Predecessors: [0xb3]
Successors: [0x835]
---
0xbf JUMPDEST
0xc0 POP
0xc1 PUSH2 0xc8
0xc4 PUSH2 0x835
0xc7 JUMP
---
0xbf: JUMPDEST 
0xc1: V52 = 0xc8
0xc4: V53 = 0x835
0xc7: JUMP 0x835
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xc8]
Exit stack: [V11, 0xc8]

================================

Block 0xc8
[0xc8:0xdd]
---
Predecessors: [0x835]
Successors: []
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd DUP3
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP2
0xd4 POP
0xd5 POP
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP1
0xda SWAP2
0xdb SUB
0xdc SWAP1
0xdd RETURN
---
0xc8: JUMPDEST 
0xc9: V54 = 0x40
0xcb: V55 = M[0x40]
0xcf: M[V55] = 0x2386f26fc10000
0xd0: V56 = 0x20
0xd2: V57 = ADD 0x20 V55
0xd6: V58 = 0x40
0xd8: V59 = M[0x40]
0xdb: V60 = SUB V57 V59
0xdd: RETURN V59 V60
---
Entry stack: [V11, 0xc8, 0x2386f26fc10000]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc8]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0x62]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V61 = CALLVALUE
0xe1: V62 = ISZERO V61
0xe2: V63 = 0xea
0xe5: JUMPI 0xea V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V64 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xde]
Successors: [0x840]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0xf3
0xef PUSH2 0x840
0xf2 JUMP
---
0xea: JUMPDEST 
0xec: V65 = 0xf3
0xef: V66 = 0x840
0xf2: JUMP 0x840
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0xf3]
Exit stack: [V11, 0xf3]

================================

Block 0xf3
[0xf3:0x134]
---
Predecessors: [0x840]
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP3
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124 AND
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP2
0x12b POP
0x12c POP
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 SWAP2
0x132 SUB
0x133 SWAP1
0x134 RETURN
---
0xf3: JUMPDEST 
0xf4: V67 = 0x40
0xf6: V68 = M[0x40]
0xf9: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x10f: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x124: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x126: M[V68] = V72
0x127: V73 = 0x20
0x129: V74 = ADD 0x20 V68
0x12d: V75 = 0x40
0x12f: V76 = M[0x40]
0x132: V77 = SUB V74 V76
0x134: RETURN V76 V77
---
Entry stack: [V11, 0xf3, V498]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf3]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x6d]
Successors: [0x13d, 0x141]
---
0x135 JUMPDEST
0x136 CALLVALUE
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x135: JUMPDEST 
0x136: V78 = CALLVALUE
0x138: V79 = ISZERO V78
0x139: V80 = 0x141
0x13c: JUMPI 0x141 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x135]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V81 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x141
[0x141:0x149]
---
Predecessors: [0x135]
Successors: [0x866]
---
0x141 JUMPDEST
0x142 POP
0x143 PUSH2 0x14a
0x146 PUSH2 0x866
0x149 JUMP
---
0x141: JUMPDEST 
0x143: V82 = 0x14a
0x146: V83 = 0x866
0x149: JUMP 0x866
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x14a]
Exit stack: [V11, 0x14a]

================================

Block 0x14a
[0x14a:0x18b]
---
Predecessors: [0x866]
Successors: []
---
0x14a JUMPDEST
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f DUP3
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 AND
0x166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17b AND
0x17c DUP2
0x17d MSTORE
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP2
0x182 POP
0x183 POP
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 SWAP2
0x189 SUB
0x18a SWAP1
0x18b RETURN
---
0x14a: JUMPDEST 
0x14b: V84 = 0x40
0x14d: V85 = M[0x40]
0x150: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x166: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x17d: M[V85] = V89
0x17e: V90 = 0x20
0x180: V91 = ADD 0x20 V85
0x184: V92 = 0x40
0x186: V93 = M[0x40]
0x189: V94 = SUB V91 V93
0x18b: RETURN V93 V94
---
Entry stack: [V11, 0x14a, V506]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14a]

================================

Block 0x18c
[0x18c:0x1e3]
---
Predecessors: [0x7d]
Successors: [0x1e4, 0x1e8]
---
0x18c JUMPDEST
0x18d PUSH1 0x4
0x18f PUSH1 0x0
0x191 SWAP1
0x192 SLOAD
0x193 SWAP1
0x194 PUSH2 0x100
0x197 EXP
0x198 SWAP1
0x199 DIV
0x19a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1af AND
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 CALLER
0x1c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1dc AND
0x1dd EQ
0x1de ISZERO
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x18c: JUMPDEST 
0x18d: V95 = 0x4
0x18f: V96 = 0x0
0x192: V97 = S[0x4]
0x194: V98 = 0x100
0x197: V99 = EXP 0x100 0x0
0x199: V100 = DIV V97 0x1
0x19a: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1b0: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c6: V105 = CALLER
0x1c7: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1dd: V108 = EQ V107 V104
0x1de: V109 = ISZERO V108
0x1df: V110 = ISZERO V109
0x1e0: V111 = 0x1e8
0x1e3: JUMPI 0x1e8 V110
---
Entry stack: [V11, 0x85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x18c]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V112 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85]

================================

Block 0x1e8
[0x1e8:0x23e]
---
Predecessors: [0x18c]
Successors: [0x88c]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec SWAP1
0x1ed SLOAD
0x1ee SWAP1
0x1ef PUSH2 0x100
0x1f2 EXP
0x1f3 SWAP1
0x1f4 DIV
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 PUSH2 0x8fc
0x224 PUSH2 0x23f
0x227 PUSH7 0x2386f26fc10000
0x22f PUSH1 0x2
0x231 SLOAD
0x232 PUSH2 0x88c
0x235 SWAP1
0x236 SWAP2
0x237 SWAP1
0x238 PUSH4 0xffffffff
0x23d AND
0x23e JUMP
---
0x1e8: JUMPDEST 
0x1e9: V113 = 0x0
0x1ed: V114 = S[0x0]
0x1ef: V115 = 0x100
0x1f2: V116 = EXP 0x100 0x0
0x1f4: V117 = DIV V114 0x1
0x1f5: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x20b: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x221: V122 = 0x8fc
0x224: V123 = 0x23f
0x227: V124 = 0x2386f26fc10000
0x22f: V125 = 0x2
0x231: V126 = S[0x2]
0x232: V127 = 0x88c
0x238: V128 = 0xffffffff
0x23d: V129 = AND 0xffffffff 0x88c
0x23e: JUMP 0x88c
---
Entry stack: [V11, 0x85]
Stack pops: 0
Stack additions: [V121, 0x8fc, 0x23f, V126, 0x2386f26fc10000]
Exit stack: [V11, 0x85, V121, 0x8fc, 0x23f, V126, 0x2386f26fc10000]

================================

Block 0x23f
[0x23f:0x260]
---
Predecessors: [0x89a]
Successors: [0x261, 0x26a]
---
0x23f JUMPDEST
0x240 SWAP1
0x241 DUP2
0x242 ISZERO
0x243 MUL
0x244 SWAP1
0x245 PUSH1 0x40
0x247 MLOAD
0x248 PUSH1 0x0
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e DUP4
0x24f SUB
0x250 DUP2
0x251 DUP6
0x252 DUP9
0x253 DUP9
0x254 CALL
0x255 SWAP4
0x256 POP
0x257 POP
0x258 POP
0x259 POP
0x25a ISZERO
0x25b DUP1
0x25c ISZERO
0x25d PUSH2 0x26a
0x260 JUMPI
---
0x23f: JUMPDEST 
0x242: V130 = ISZERO V513
0x243: V131 = MUL V130 0x8fc
0x245: V132 = 0x40
0x247: V133 = M[0x40]
0x248: V134 = 0x0
0x24a: V135 = 0x40
0x24c: V136 = M[0x40]
0x24f: V137 = SUB V133 V136
0x254: V138 = CALL V131 S2 V513 V136 V137 V136 0x0
0x25a: V139 = ISZERO V138
0x25c: V140 = ISZERO V139
0x25d: V141 = 0x26a
0x260: JUMPI 0x26a V140
---
Entry stack: [V11, {0x85, 0xb1}, S2, 0x8fc, V513]
Stack pops: 3
Stack additions: [V139]
Exit stack: [V11, {0x85, 0xb1}, V139]

================================

Block 0x261
[0x261:0x269]
---
Predecessors: [0x23f]
Successors: []
---
0x261 RETURNDATASIZE
0x262 PUSH1 0x0
0x264 DUP1
0x265 RETURNDATACOPY
0x266 RETURNDATASIZE
0x267 PUSH1 0x0
0x269 REVERT
---
0x261: V142 = RETURNDATASIZE
0x262: V143 = 0x0
0x265: RETURNDATACOPY 0x0 0x0 V142
0x266: V144 = RETURNDATASIZE
0x267: V145 = 0x0
0x269: REVERT 0x0 V144
---
Entry stack: [V11, {0x85, 0xb1}, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V139]

================================

Block 0x26a
[0x26a:0x2d0]
---
Predecessors: [0x23f]
Successors: [0x2d1, 0x2da]
---
0x26a JUMPDEST
0x26b POP
0x26c PUSH1 0x4
0x26e PUSH1 0x0
0x270 SWAP1
0x271 SLOAD
0x272 SWAP1
0x273 PUSH2 0x100
0x276 EXP
0x277 SWAP1
0x278 DIV
0x279 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28e AND
0x28f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a4 AND
0x2a5 PUSH2 0x8fc
0x2a8 PUSH7 0x2386f26fc10000
0x2b0 SWAP1
0x2b1 DUP2
0x2b2 ISZERO
0x2b3 MUL
0x2b4 SWAP1
0x2b5 PUSH1 0x40
0x2b7 MLOAD
0x2b8 PUSH1 0x0
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be DUP4
0x2bf SUB
0x2c0 DUP2
0x2c1 DUP6
0x2c2 DUP9
0x2c3 DUP9
0x2c4 CALL
0x2c5 SWAP4
0x2c6 POP
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca ISZERO
0x2cb DUP1
0x2cc ISZERO
0x2cd PUSH2 0x2da
0x2d0 JUMPI
---
0x26a: JUMPDEST 
0x26c: V146 = 0x4
0x26e: V147 = 0x0
0x271: V148 = S[0x4]
0x273: V149 = 0x100
0x276: V150 = EXP 0x100 0x0
0x278: V151 = DIV V148 0x1
0x279: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x28f: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a4: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2a5: V156 = 0x8fc
0x2a8: V157 = 0x2386f26fc10000
0x2b2: V158 = ISZERO 0x2386f26fc10000
0x2b3: V159 = MUL 0x0 0x8fc
0x2b5: V160 = 0x40
0x2b7: V161 = M[0x40]
0x2b8: V162 = 0x0
0x2ba: V163 = 0x40
0x2bc: V164 = M[0x40]
0x2bf: V165 = SUB V161 V164
0x2c4: V166 = CALL 0x0 V155 0x2386f26fc10000 V164 V165 V164 0x0
0x2ca: V167 = ISZERO V166
0x2cc: V168 = ISZERO V167
0x2cd: V169 = 0x2da
0x2d0: JUMPI 0x2da V168
---
Entry stack: [V11, {0x85, 0xb1}, V139]
Stack pops: 1
Stack additions: [V167]
Exit stack: [V11, {0x85, 0xb1}, V167]

================================

Block 0x2d1
[0x2d1:0x2d9]
---
Predecessors: [0x26a]
Successors: []
---
0x2d1 RETURNDATASIZE
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 RETURNDATACOPY
0x2d6 RETURNDATASIZE
0x2d7 PUSH1 0x0
0x2d9 REVERT
---
0x2d1: V170 = RETURNDATASIZE
0x2d2: V171 = 0x0
0x2d5: RETURNDATACOPY 0x0 0x0 V170
0x2d6: V172 = RETURNDATASIZE
0x2d7: V173 = 0x0
0x2d9: REVERT 0x0 V172
---
Entry stack: [V11, {0x85, 0xb1}, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V167]

================================

Block 0x2da
[0x2da:0x3b4]
---
Predecessors: [0x26a]
Successors: [0x3b5, 0x3b9]
---
0x2da JUMPDEST
0x2db POP
0x2dc PUSH1 0x3
0x2de PUSH1 0x1
0x2e0 SWAP1
0x2e1 SLOAD
0x2e2 SWAP1
0x2e3 PUSH2 0x100
0x2e6 EXP
0x2e7 SWAP1
0x2e8 DIV
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x314 AND
0x315 PUSH4 0x347a39a1
0x31a PUSH1 0x0
0x31c DUP1
0x31d SWAP1
0x31e SLOAD
0x31f SWAP1
0x320 PUSH2 0x100
0x323 EXP
0x324 SWAP1
0x325 DIV
0x326 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33b AND
0x33c PUSH1 0x40
0x33e MLOAD
0x33f DUP3
0x340 PUSH4 0xffffffff
0x345 AND
0x346 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x364 MUL
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x4
0x369 ADD
0x36a DUP1
0x36b DUP3
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 AND
0x398 DUP2
0x399 MSTORE
0x39a PUSH1 0x20
0x39c ADD
0x39d SWAP2
0x39e POP
0x39f POP
0x3a0 PUSH1 0x20
0x3a2 PUSH1 0x40
0x3a4 MLOAD
0x3a5 DUP1
0x3a6 DUP4
0x3a7 SUB
0x3a8 DUP2
0x3a9 PUSH1 0x0
0x3ab DUP8
0x3ac DUP1
0x3ad EXTCODESIZE
0x3ae ISZERO
0x3af DUP1
0x3b0 ISZERO
0x3b1 PUSH2 0x3b9
0x3b4 JUMPI
---
0x2da: JUMPDEST 
0x2dc: V174 = 0x3
0x2de: V175 = 0x1
0x2e1: V176 = S[0x3]
0x2e3: V177 = 0x100
0x2e6: V178 = EXP 0x100 0x1
0x2e8: V179 = DIV V176 0x100
0x2e9: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2ff: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x314: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x315: V184 = 0x347a39a1
0x31a: V185 = 0x0
0x31e: V186 = S[0x0]
0x320: V187 = 0x100
0x323: V188 = EXP 0x100 0x0
0x325: V189 = DIV V186 0x1
0x326: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x33b: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x33c: V192 = 0x40
0x33e: V193 = M[0x40]
0x340: V194 = 0xffffffff
0x345: V195 = AND 0xffffffff 0x347a39a1
0x346: V196 = 0x100000000000000000000000000000000000000000000000000000000
0x364: V197 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x347a39a1
0x366: M[V193] = 0x347a39a100000000000000000000000000000000000000000000000000000000
0x367: V198 = 0x4
0x369: V199 = ADD 0x4 V193
0x36c: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x382: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x399: M[V199] = V203
0x39a: V204 = 0x20
0x39c: V205 = ADD 0x20 V199
0x3a0: V206 = 0x20
0x3a2: V207 = 0x40
0x3a4: V208 = M[0x40]
0x3a7: V209 = SUB V205 V208
0x3a9: V210 = 0x0
0x3ad: V211 = EXTCODESIZE V183
0x3ae: V212 = ISZERO V211
0x3b0: V213 = ISZERO V212
0x3b1: V214 = 0x3b9
0x3b4: JUMPI 0x3b9 V213
---
Entry stack: [V11, {0x85, 0xb1}, V167]
Stack pops: 1
Stack additions: [V183, 0x347a39a1, V205, 0x20, V208, V209, V208, 0x0, V183, V212]
Exit stack: [V11, {0x85, 0xb1}, V183, 0x347a39a1, V205, 0x20, V208, V209, V208, 0x0, V183, V212]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x2da]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 REVERT
---
0x3b5: V215 = 0x0
0x3b8: REVERT 0x0 0x0
---
Entry stack: [V11, {0x85, 0xb1}, V183, 0x347a39a1, V205, 0x20, V208, V209, V208, 0x0, V183, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V183, 0x347a39a1, V205, 0x20, V208, V209, V208, 0x0, V183, V212]

================================

Block 0x3b9
[0x3b9:0x3c3]
---
Predecessors: [0x2da]
Successors: [0x3c4, 0x3cd]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb GAS
0x3bc CALL
0x3bd ISZERO
0x3be DUP1
0x3bf ISZERO
0x3c0 PUSH2 0x3cd
0x3c3 JUMPI
---
0x3b9: JUMPDEST 
0x3bb: V216 = GAS
0x3bc: V217 = CALL V216 V183 0x0 V208 V209 V208 0x20
0x3bd: V218 = ISZERO V217
0x3bf: V219 = ISZERO V218
0x3c0: V220 = 0x3cd
0x3c3: JUMPI 0x3cd V219
---
Entry stack: [V11, {0x85, 0xb1}, V183, 0x347a39a1, V205, 0x20, V208, V209, V208, 0x0, V183, V212]
Stack pops: 7
Stack additions: [V218]
Exit stack: [V11, {0x85, 0xb1}, V183, 0x347a39a1, V205, V218]

================================

Block 0x3c4
[0x3c4:0x3cc]
---
Predecessors: [0x3b9]
Successors: []
---
0x3c4 RETURNDATASIZE
0x3c5 PUSH1 0x0
0x3c7 DUP1
0x3c8 RETURNDATACOPY
0x3c9 RETURNDATASIZE
0x3ca PUSH1 0x0
0x3cc REVERT
---
0x3c4: V221 = RETURNDATASIZE
0x3c5: V222 = 0x0
0x3c8: RETURNDATACOPY 0x0 0x0 V221
0x3c9: V223 = RETURNDATASIZE
0x3ca: V224 = 0x0
0x3cc: REVERT 0x0 V223
---
Entry stack: [V11, {0x85, 0xb1}, S3, 0x347a39a1, S1, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, S3, 0x347a39a1, S1, V218]

================================

Block 0x3cd
[0x3cd:0x3de]
---
Predecessors: [0x3b9]
Successors: [0x3df, 0x3e3]
---
0x3cd JUMPDEST
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 RETURNDATASIZE
0x3d6 PUSH1 0x20
0x3d8 DUP2
0x3d9 LT
0x3da ISZERO
0x3db PUSH2 0x3e3
0x3de JUMPI
---
0x3cd: JUMPDEST 
0x3d2: V225 = 0x40
0x3d4: V226 = M[0x40]
0x3d5: V227 = RETURNDATASIZE
0x3d6: V228 = 0x20
0x3d9: V229 = LT V227 0x20
0x3da: V230 = ISZERO V229
0x3db: V231 = 0x3e3
0x3de: JUMPI 0x3e3 V230
---
Entry stack: [V11, {0x85, 0xb1}, S3, 0x347a39a1, S1, V218]
Stack pops: 4
Stack additions: [V226, V227]
Exit stack: [V11, {0x85, 0xb1}, V226, V227]

================================

Block 0x3df
[0x3df:0x3e2]
---
Predecessors: [0x3cd]
Successors: []
---
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 REVERT
---
0x3df: V232 = 0x0
0x3e2: REVERT 0x0 0x0
---
Entry stack: [V11, {0x85, 0xb1}, V226, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V226, V227]

================================

Block 0x3e3
[0x3e3:0x3f6]
---
Predecessors: [0x3cd]
Successors: [0x85, 0xb1]
---
0x3e3 JUMPDEST
0x3e4 DUP2
0x3e5 ADD
0x3e6 SWAP1
0x3e7 DUP1
0x3e8 DUP1
0x3e9 MLOAD
0x3ea SWAP1
0x3eb PUSH1 0x20
0x3ed ADD
0x3ee SWAP1
0x3ef SWAP3
0x3f0 SWAP2
0x3f1 SWAP1
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 JUMP
---
0x3e3: JUMPDEST 
0x3e5: V233 = ADD V226 V227
0x3e9: V234 = M[V226]
0x3eb: V235 = 0x20
0x3ed: V236 = ADD 0x20 V226
0x3f6: JUMP {0x85, 0xb1}
---
Entry stack: [V11, {0x85, 0xb1}, V226, V227]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f7
[0x3f7:0x40a]
---
Predecessors: [0x87]
Successors: [0x40b, 0x40f]
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x0
0x3fa PUSH7 0x2386f26fc10000
0x402 CALLVALUE
0x403 LT
0x404 ISZERO
0x405 ISZERO
0x406 ISZERO
0x407 PUSH2 0x40f
0x40a JUMPI
---
0x3f7: JUMPDEST 
0x3f8: V237 = 0x0
0x3fa: V238 = 0x2386f26fc10000
0x402: V239 = CALLVALUE
0x403: V240 = LT V239 0x2386f26fc10000
0x404: V241 = ISZERO V240
0x405: V242 = ISZERO V241
0x406: V243 = ISZERO V242
0x407: V244 = 0x40f
0x40a: JUMPI 0x40f V243
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x8f, 0x0]

================================

Block 0x40b
[0x40b:0x40e]
---
Predecessors: [0x3f7]
Successors: []
---
0x40b PUSH1 0x0
0x40d DUP1
0x40e REVERT
---
0x40b: V245 = 0x0
0x40e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, 0x0]

================================

Block 0x40f
[0x40f:0x581]
---
Predecessors: [0x3f7]
Successors: [0x582, 0x586]
---
0x40f JUMPDEST
0x410 CALLVALUE
0x411 PUSH1 0x2
0x413 DUP2
0x414 SWAP1
0x415 SSTORE
0x416 POP
0x417 CALLER
0x418 PUSH1 0x0
0x41a DUP1
0x41b PUSH2 0x100
0x41e EXP
0x41f DUP2
0x420 SLOAD
0x421 DUP2
0x422 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x437 MUL
0x438 NOT
0x439 AND
0x43a SWAP1
0x43b DUP4
0x43c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x451 AND
0x452 MUL
0x453 OR
0x454 SWAP1
0x455 SSTORE
0x456 POP
0x457 PUSH1 0x3
0x459 PUSH1 0x1
0x45b SWAP1
0x45c SLOAD
0x45d SWAP1
0x45e PUSH2 0x100
0x461 EXP
0x462 SWAP1
0x463 DIV
0x464 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x479 AND
0x47a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48f AND
0x490 PUSH4 0x83f1b165
0x495 ADDRESS
0x496 PUSH1 0x1
0x498 PUSH1 0x0
0x49a SWAP1
0x49b SLOAD
0x49c SWAP1
0x49d PUSH2 0x100
0x4a0 EXP
0x4a1 SWAP1
0x4a2 DIV
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 AND
0x4b9 PUSH1 0x3
0x4bb PUSH1 0x0
0x4bd SWAP1
0x4be SLOAD
0x4bf SWAP1
0x4c0 PUSH2 0x100
0x4c3 EXP
0x4c4 SWAP1
0x4c5 DIV
0x4c6 PUSH1 0xff
0x4c8 AND
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc DUP5
0x4cd PUSH4 0xffffffff
0x4d2 AND
0x4d3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4f1 MUL
0x4f2 DUP2
0x4f3 MSTORE
0x4f4 PUSH1 0x4
0x4f6 ADD
0x4f7 DUP1
0x4f8 DUP5
0x4f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50e AND
0x50f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x524 AND
0x525 DUP2
0x526 MSTORE
0x527 PUSH1 0x20
0x529 ADD
0x52a DUP4
0x52b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x540 AND
0x541 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x556 AND
0x557 DUP2
0x558 MSTORE
0x559 PUSH1 0x20
0x55b ADD
0x55c DUP3
0x55d PUSH1 0xff
0x55f AND
0x560 PUSH1 0xff
0x562 AND
0x563 DUP2
0x564 MSTORE
0x565 PUSH1 0x20
0x567 ADD
0x568 SWAP4
0x569 POP
0x56a POP
0x56b POP
0x56c POP
0x56d PUSH1 0x20
0x56f PUSH1 0x40
0x571 MLOAD
0x572 DUP1
0x573 DUP4
0x574 SUB
0x575 DUP2
0x576 PUSH1 0x0
0x578 DUP8
0x579 DUP1
0x57a EXTCODESIZE
0x57b ISZERO
0x57c DUP1
0x57d ISZERO
0x57e PUSH2 0x586
0x581 JUMPI
---
0x40f: JUMPDEST 
0x410: V246 = CALLVALUE
0x411: V247 = 0x2
0x415: S[0x2] = V246
0x417: V248 = CALLER
0x418: V249 = 0x0
0x41b: V250 = 0x100
0x41e: V251 = EXP 0x100 0x0
0x420: V252 = S[0x0]
0x422: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x437: V254 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x438: V255 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x439: V256 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V252
0x43c: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x451: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x452: V259 = MUL V258 0x1
0x453: V260 = OR V259 V256
0x455: S[0x0] = V260
0x457: V261 = 0x3
0x459: V262 = 0x1
0x45c: V263 = S[0x3]
0x45e: V264 = 0x100
0x461: V265 = EXP 0x100 0x1
0x463: V266 = DIV V263 0x100
0x464: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x479: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x47a: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x490: V271 = 0x83f1b165
0x495: V272 = ADDRESS
0x496: V273 = 0x1
0x498: V274 = 0x0
0x49b: V275 = S[0x1]
0x49d: V276 = 0x100
0x4a0: V277 = EXP 0x100 0x0
0x4a2: V278 = DIV V275 0x1
0x4a3: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x4b9: V281 = 0x3
0x4bb: V282 = 0x0
0x4be: V283 = S[0x3]
0x4c0: V284 = 0x100
0x4c3: V285 = EXP 0x100 0x0
0x4c5: V286 = DIV V283 0x1
0x4c6: V287 = 0xff
0x4c8: V288 = AND 0xff V286
0x4c9: V289 = 0x40
0x4cb: V290 = M[0x40]
0x4cd: V291 = 0xffffffff
0x4d2: V292 = AND 0xffffffff 0x83f1b165
0x4d3: V293 = 0x100000000000000000000000000000000000000000000000000000000
0x4f1: V294 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x83f1b165
0x4f3: M[V290] = 0x83f1b16500000000000000000000000000000000000000000000000000000000
0x4f4: V295 = 0x4
0x4f6: V296 = ADD 0x4 V290
0x4f9: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x50f: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x524: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x526: M[V296] = V300
0x527: V301 = 0x20
0x529: V302 = ADD 0x20 V296
0x52b: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x540: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x541: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x556: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x558: M[V302] = V306
0x559: V307 = 0x20
0x55b: V308 = ADD 0x20 V302
0x55d: V309 = 0xff
0x55f: V310 = AND 0xff V288
0x560: V311 = 0xff
0x562: V312 = AND 0xff V310
0x564: M[V308] = V312
0x565: V313 = 0x20
0x567: V314 = ADD 0x20 V308
0x56d: V315 = 0x20
0x56f: V316 = 0x40
0x571: V317 = M[0x40]
0x574: V318 = SUB V314 V317
0x576: V319 = 0x0
0x57a: V320 = EXTCODESIZE V270
0x57b: V321 = ISZERO V320
0x57d: V322 = ISZERO V321
0x57e: V323 = 0x586
0x581: JUMPI 0x586 V322
---
Entry stack: [V11, 0x8f, 0x0]
Stack pops: 0
Stack additions: [V270, 0x83f1b165, V314, 0x20, V317, V318, V317, 0x0, V270, V321]
Exit stack: [V11, 0x8f, 0x0, V270, 0x83f1b165, V314, 0x20, V317, V318, V317, 0x0, V270, V321]

================================

Block 0x582
[0x582:0x585]
---
Predecessors: [0x40f]
Successors: []
---
0x582 PUSH1 0x0
0x584 DUP1
0x585 REVERT
---
0x582: V324 = 0x0
0x585: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f, 0x0, V270, 0x83f1b165, V314, 0x20, V317, V318, V317, 0x0, V270, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, 0x0, V270, 0x83f1b165, V314, 0x20, V317, V318, V317, 0x0, V270, V321]

================================

Block 0x586
[0x586:0x590]
---
Predecessors: [0x40f]
Successors: [0x591, 0x59a]
---
0x586 JUMPDEST
0x587 POP
0x588 GAS
0x589 CALL
0x58a ISZERO
0x58b DUP1
0x58c ISZERO
0x58d PUSH2 0x59a
0x590 JUMPI
---
0x586: JUMPDEST 
0x588: V325 = GAS
0x589: V326 = CALL V325 V270 0x0 V317 V318 V317 0x20
0x58a: V327 = ISZERO V326
0x58c: V328 = ISZERO V327
0x58d: V329 = 0x59a
0x590: JUMPI 0x59a V328
---
Entry stack: [V11, 0x8f, 0x0, V270, 0x83f1b165, V314, 0x20, V317, V318, V317, 0x0, V270, V321]
Stack pops: 7
Stack additions: [V327]
Exit stack: [V11, 0x8f, 0x0, V270, 0x83f1b165, V314, V327]

================================

Block 0x591
[0x591:0x599]
---
Predecessors: [0x586]
Successors: []
---
0x591 RETURNDATASIZE
0x592 PUSH1 0x0
0x594 DUP1
0x595 RETURNDATACOPY
0x596 RETURNDATASIZE
0x597 PUSH1 0x0
0x599 REVERT
---
0x591: V330 = RETURNDATASIZE
0x592: V331 = 0x0
0x595: RETURNDATACOPY 0x0 0x0 V330
0x596: V332 = RETURNDATASIZE
0x597: V333 = 0x0
0x599: REVERT 0x0 V332
---
Entry stack: [V11, 0x8f, 0x0, V270, 0x83f1b165, V314, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, 0x0, V270, 0x83f1b165, V314, V327]

================================

Block 0x59a
[0x59a:0x5ab]
---
Predecessors: [0x586]
Successors: [0x5ac, 0x5b0]
---
0x59a JUMPDEST
0x59b POP
0x59c POP
0x59d POP
0x59e POP
0x59f PUSH1 0x40
0x5a1 MLOAD
0x5a2 RETURNDATASIZE
0x5a3 PUSH1 0x20
0x5a5 DUP2
0x5a6 LT
0x5a7 ISZERO
0x5a8 PUSH2 0x5b0
0x5ab JUMPI
---
0x59a: JUMPDEST 
0x59f: V334 = 0x40
0x5a1: V335 = M[0x40]
0x5a2: V336 = RETURNDATASIZE
0x5a3: V337 = 0x20
0x5a6: V338 = LT V336 0x20
0x5a7: V339 = ISZERO V338
0x5a8: V340 = 0x5b0
0x5ab: JUMPI 0x5b0 V339
---
Entry stack: [V11, 0x8f, 0x0, V270, 0x83f1b165, V314, V327]
Stack pops: 4
Stack additions: [V335, V336]
Exit stack: [V11, 0x8f, 0x0, V335, V336]

================================

Block 0x5ac
[0x5ac:0x5af]
---
Predecessors: [0x59a]
Successors: []
---
0x5ac PUSH1 0x0
0x5ae DUP1
0x5af REVERT
---
0x5ac: V341 = 0x0
0x5af: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f, 0x0, V335, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, 0x0, V335, V336]

================================

Block 0x5b0
[0x5b0:0x5c8]
---
Predecessors: [0x59a]
Successors: [0x8f]
---
0x5b0 JUMPDEST
0x5b1 DUP2
0x5b2 ADD
0x5b3 SWAP1
0x5b4 DUP1
0x5b5 DUP1
0x5b6 MLOAD
0x5b7 SWAP1
0x5b8 PUSH1 0x20
0x5ba ADD
0x5bb SWAP1
0x5bc SWAP3
0x5bd SWAP2
0x5be SWAP1
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 POP
0x5c3 PUSH1 0x1
0x5c5 SWAP1
0x5c6 POP
0x5c7 SWAP1
0x5c8 JUMP
---
0x5b0: JUMPDEST 
0x5b2: V342 = ADD V335 V336
0x5b6: V343 = M[V335]
0x5b8: V344 = 0x20
0x5ba: V345 = ADD 0x20 V335
0x5c3: V346 = 0x1
0x5c8: JUMP 0x8f
---
Entry stack: [V11, 0x8f, 0x0, V335, V336]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5c9
[0x5c9:0x620]
---
Predecessors: [0xa9]
Successors: [0x621, 0x625]
---
0x5c9 JUMPDEST
0x5ca PUSH1 0x4
0x5cc PUSH1 0x0
0x5ce SWAP1
0x5cf SLOAD
0x5d0 SWAP1
0x5d1 PUSH2 0x100
0x5d4 EXP
0x5d5 SWAP1
0x5d6 DIV
0x5d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ec AND
0x5ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x602 AND
0x603 CALLER
0x604 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x619 AND
0x61a EQ
0x61b ISZERO
0x61c ISZERO
0x61d PUSH2 0x625
0x620 JUMPI
---
0x5c9: JUMPDEST 
0x5ca: V347 = 0x4
0x5cc: V348 = 0x0
0x5cf: V349 = S[0x4]
0x5d1: V350 = 0x100
0x5d4: V351 = EXP 0x100 0x0
0x5d6: V352 = DIV V349 0x1
0x5d7: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ec: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x5ed: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x602: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x603: V357 = CALLER
0x604: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x619: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x61a: V360 = EQ V359 V356
0x61b: V361 = ISZERO V360
0x61c: V362 = ISZERO V361
0x61d: V363 = 0x625
0x620: JUMPI 0x625 V362
---
Entry stack: [V11, 0xb1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb1]

================================

Block 0x621
[0x621:0x624]
---
Predecessors: [0x5c9]
Successors: []
---
0x621 PUSH1 0x0
0x623 DUP1
0x624 REVERT
---
0x621: V364 = 0x0
0x624: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb1]

================================

Block 0x625
[0x625:0x67c]
---
Predecessors: [0x5c9]
Successors: [0x88c]
---
0x625 JUMPDEST
0x626 PUSH1 0x1
0x628 PUSH1 0x0
0x62a SWAP1
0x62b SLOAD
0x62c SWAP1
0x62d PUSH2 0x100
0x630 EXP
0x631 SWAP1
0x632 DIV
0x633 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x648 AND
0x649 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65e AND
0x65f PUSH2 0x8fc
0x662 PUSH2 0x67d
0x665 PUSH7 0x2386f26fc10000
0x66d PUSH1 0x2
0x66f SLOAD
0x670 PUSH2 0x88c
0x673 SWAP1
0x674 SWAP2
0x675 SWAP1
0x676 PUSH4 0xffffffff
0x67b AND
0x67c JUMP
---
0x625: JUMPDEST 
0x626: V365 = 0x1
0x628: V366 = 0x0
0x62b: V367 = S[0x1]
0x62d: V368 = 0x100
0x630: V369 = EXP 0x100 0x0
0x632: V370 = DIV V367 0x1
0x633: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x648: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x649: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x65e: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x65f: V375 = 0x8fc
0x662: V376 = 0x67d
0x665: V377 = 0x2386f26fc10000
0x66d: V378 = 0x2
0x66f: V379 = S[0x2]
0x670: V380 = 0x88c
0x676: V381 = 0xffffffff
0x67b: V382 = AND 0xffffffff 0x88c
0x67c: JUMP 0x88c
---
Entry stack: [V11, 0xb1]
Stack pops: 0
Stack additions: [V374, 0x8fc, 0x67d, V379, 0x2386f26fc10000]
Exit stack: [V11, 0xb1, V374, 0x8fc, 0x67d, V379, 0x2386f26fc10000]

================================

Block 0x67d
[0x67d:0x69e]
---
Predecessors: [0x89a]
Successors: [0x69f, 0x6a8]
---
0x67d JUMPDEST
0x67e SWAP1
0x67f DUP2
0x680 ISZERO
0x681 MUL
0x682 SWAP1
0x683 PUSH1 0x40
0x685 MLOAD
0x686 PUSH1 0x0
0x688 PUSH1 0x40
0x68a MLOAD
0x68b DUP1
0x68c DUP4
0x68d SUB
0x68e DUP2
0x68f DUP6
0x690 DUP9
0x691 DUP9
0x692 CALL
0x693 SWAP4
0x694 POP
0x695 POP
0x696 POP
0x697 POP
0x698 ISZERO
0x699 DUP1
0x69a ISZERO
0x69b PUSH2 0x6a8
0x69e JUMPI
---
0x67d: JUMPDEST 
0x680: V383 = ISZERO V513
0x681: V384 = MUL V383 0x8fc
0x683: V385 = 0x40
0x685: V386 = M[0x40]
0x686: V387 = 0x0
0x688: V388 = 0x40
0x68a: V389 = M[0x40]
0x68d: V390 = SUB V386 V389
0x692: V391 = CALL V384 S2 V513 V389 V390 V389 0x0
0x698: V392 = ISZERO V391
0x69a: V393 = ISZERO V392
0x69b: V394 = 0x6a8
0x69e: JUMPI 0x6a8 V393
---
Entry stack: [V11, {0x85, 0xb1}, S2, 0x8fc, V513]
Stack pops: 3
Stack additions: [V392]
Exit stack: [V11, {0x85, 0xb1}, V392]

================================

Block 0x69f
[0x69f:0x6a7]
---
Predecessors: [0x67d]
Successors: []
---
0x69f RETURNDATASIZE
0x6a0 PUSH1 0x0
0x6a2 DUP1
0x6a3 RETURNDATACOPY
0x6a4 RETURNDATASIZE
0x6a5 PUSH1 0x0
0x6a7 REVERT
---
0x69f: V395 = RETURNDATASIZE
0x6a0: V396 = 0x0
0x6a3: RETURNDATACOPY 0x0 0x0 V395
0x6a4: V397 = RETURNDATASIZE
0x6a5: V398 = 0x0
0x6a7: REVERT 0x0 V397
---
Entry stack: [V11, {0x85, 0xb1}, V392]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V392]

================================

Block 0x6a8
[0x6a8:0x70e]
---
Predecessors: [0x67d]
Successors: [0x70f, 0x718]
---
0x6a8 JUMPDEST
0x6a9 POP
0x6aa PUSH1 0x4
0x6ac PUSH1 0x0
0x6ae SWAP1
0x6af SLOAD
0x6b0 SWAP1
0x6b1 PUSH2 0x100
0x6b4 EXP
0x6b5 SWAP1
0x6b6 DIV
0x6b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cc AND
0x6cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e2 AND
0x6e3 PUSH2 0x8fc
0x6e6 PUSH7 0x2386f26fc10000
0x6ee SWAP1
0x6ef DUP2
0x6f0 ISZERO
0x6f1 MUL
0x6f2 SWAP1
0x6f3 PUSH1 0x40
0x6f5 MLOAD
0x6f6 PUSH1 0x0
0x6f8 PUSH1 0x40
0x6fa MLOAD
0x6fb DUP1
0x6fc DUP4
0x6fd SUB
0x6fe DUP2
0x6ff DUP6
0x700 DUP9
0x701 DUP9
0x702 CALL
0x703 SWAP4
0x704 POP
0x705 POP
0x706 POP
0x707 POP
0x708 ISZERO
0x709 DUP1
0x70a ISZERO
0x70b PUSH2 0x718
0x70e JUMPI
---
0x6a8: JUMPDEST 
0x6aa: V399 = 0x4
0x6ac: V400 = 0x0
0x6af: V401 = S[0x4]
0x6b1: V402 = 0x100
0x6b4: V403 = EXP 0x100 0x0
0x6b6: V404 = DIV V401 0x1
0x6b7: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cc: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x6cd: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e2: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x6e3: V409 = 0x8fc
0x6e6: V410 = 0x2386f26fc10000
0x6f0: V411 = ISZERO 0x2386f26fc10000
0x6f1: V412 = MUL 0x0 0x8fc
0x6f3: V413 = 0x40
0x6f5: V414 = M[0x40]
0x6f6: V415 = 0x0
0x6f8: V416 = 0x40
0x6fa: V417 = M[0x40]
0x6fd: V418 = SUB V414 V417
0x702: V419 = CALL 0x0 V408 0x2386f26fc10000 V417 V418 V417 0x0
0x708: V420 = ISZERO V419
0x70a: V421 = ISZERO V420
0x70b: V422 = 0x718
0x70e: JUMPI 0x718 V421
---
Entry stack: [V11, {0x85, 0xb1}, V392]
Stack pops: 1
Stack additions: [V420]
Exit stack: [V11, {0x85, 0xb1}, V420]

================================

Block 0x70f
[0x70f:0x717]
---
Predecessors: [0x6a8]
Successors: []
---
0x70f RETURNDATASIZE
0x710 PUSH1 0x0
0x712 DUP1
0x713 RETURNDATACOPY
0x714 RETURNDATASIZE
0x715 PUSH1 0x0
0x717 REVERT
---
0x70f: V423 = RETURNDATASIZE
0x710: V424 = 0x0
0x713: RETURNDATACOPY 0x0 0x0 V423
0x714: V425 = RETURNDATASIZE
0x715: V426 = 0x0
0x717: REVERT 0x0 V425
---
Entry stack: [V11, {0x85, 0xb1}, V420]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V420]

================================

Block 0x718
[0x718:0x7f2]
---
Predecessors: [0x6a8]
Successors: [0x7f3, 0x7f7]
---
0x718 JUMPDEST
0x719 POP
0x71a PUSH1 0x3
0x71c PUSH1 0x1
0x71e SWAP1
0x71f SLOAD
0x720 SWAP1
0x721 PUSH2 0x100
0x724 EXP
0x725 SWAP1
0x726 DIV
0x727 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73c AND
0x73d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x752 AND
0x753 PUSH4 0xa03729f5
0x758 PUSH1 0x0
0x75a DUP1
0x75b SWAP1
0x75c SLOAD
0x75d SWAP1
0x75e PUSH2 0x100
0x761 EXP
0x762 SWAP1
0x763 DIV
0x764 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x779 AND
0x77a PUSH1 0x40
0x77c MLOAD
0x77d DUP3
0x77e PUSH4 0xffffffff
0x783 AND
0x784 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a2 MUL
0x7a3 DUP2
0x7a4 MSTORE
0x7a5 PUSH1 0x4
0x7a7 ADD
0x7a8 DUP1
0x7a9 DUP3
0x7aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bf AND
0x7c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d5 AND
0x7d6 DUP2
0x7d7 MSTORE
0x7d8 PUSH1 0x20
0x7da ADD
0x7db SWAP2
0x7dc POP
0x7dd POP
0x7de PUSH1 0x20
0x7e0 PUSH1 0x40
0x7e2 MLOAD
0x7e3 DUP1
0x7e4 DUP4
0x7e5 SUB
0x7e6 DUP2
0x7e7 PUSH1 0x0
0x7e9 DUP8
0x7ea DUP1
0x7eb EXTCODESIZE
0x7ec ISZERO
0x7ed DUP1
0x7ee ISZERO
0x7ef PUSH2 0x7f7
0x7f2 JUMPI
---
0x718: JUMPDEST 
0x71a: V427 = 0x3
0x71c: V428 = 0x1
0x71f: V429 = S[0x3]
0x721: V430 = 0x100
0x724: V431 = EXP 0x100 0x1
0x726: V432 = DIV V429 0x100
0x727: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x73c: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x73d: V435 = 0xffffffffffffffffffffffffffffffffffffffff
0x752: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x753: V437 = 0xa03729f5
0x758: V438 = 0x0
0x75c: V439 = S[0x0]
0x75e: V440 = 0x100
0x761: V441 = EXP 0x100 0x0
0x763: V442 = DIV V439 0x1
0x764: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x779: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x77a: V445 = 0x40
0x77c: V446 = M[0x40]
0x77e: V447 = 0xffffffff
0x783: V448 = AND 0xffffffff 0xa03729f5
0x784: V449 = 0x100000000000000000000000000000000000000000000000000000000
0x7a2: V450 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa03729f5
0x7a4: M[V446] = 0xa03729f500000000000000000000000000000000000000000000000000000000
0x7a5: V451 = 0x4
0x7a7: V452 = ADD 0x4 V446
0x7aa: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bf: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x7c0: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d5: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x7d7: M[V452] = V456
0x7d8: V457 = 0x20
0x7da: V458 = ADD 0x20 V452
0x7de: V459 = 0x20
0x7e0: V460 = 0x40
0x7e2: V461 = M[0x40]
0x7e5: V462 = SUB V458 V461
0x7e7: V463 = 0x0
0x7eb: V464 = EXTCODESIZE V436
0x7ec: V465 = ISZERO V464
0x7ee: V466 = ISZERO V465
0x7ef: V467 = 0x7f7
0x7f2: JUMPI 0x7f7 V466
---
Entry stack: [V11, {0x85, 0xb1}, V420]
Stack pops: 1
Stack additions: [V436, 0xa03729f5, V458, 0x20, V461, V462, V461, 0x0, V436, V465]
Exit stack: [V11, {0x85, 0xb1}, V436, 0xa03729f5, V458, 0x20, V461, V462, V461, 0x0, V436, V465]

================================

Block 0x7f3
[0x7f3:0x7f6]
---
Predecessors: [0x718]
Successors: []
---
0x7f3 PUSH1 0x0
0x7f5 DUP1
0x7f6 REVERT
---
0x7f3: V468 = 0x0
0x7f6: REVERT 0x0 0x0
---
Entry stack: [V11, {0x85, 0xb1}, V436, 0xa03729f5, V458, 0x20, V461, V462, V461, 0x0, V436, V465]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V436, 0xa03729f5, V458, 0x20, V461, V462, V461, 0x0, V436, V465]

================================

Block 0x7f7
[0x7f7:0x801]
---
Predecessors: [0x718]
Successors: [0x802, 0x80b]
---
0x7f7 JUMPDEST
0x7f8 POP
0x7f9 GAS
0x7fa CALL
0x7fb ISZERO
0x7fc DUP1
0x7fd ISZERO
0x7fe PUSH2 0x80b
0x801 JUMPI
---
0x7f7: JUMPDEST 
0x7f9: V469 = GAS
0x7fa: V470 = CALL V469 V436 0x0 V461 V462 V461 0x20
0x7fb: V471 = ISZERO V470
0x7fd: V472 = ISZERO V471
0x7fe: V473 = 0x80b
0x801: JUMPI 0x80b V472
---
Entry stack: [V11, {0x85, 0xb1}, V436, 0xa03729f5, V458, 0x20, V461, V462, V461, 0x0, V436, V465]
Stack pops: 7
Stack additions: [V471]
Exit stack: [V11, {0x85, 0xb1}, V436, 0xa03729f5, V458, V471]

================================

Block 0x802
[0x802:0x80a]
---
Predecessors: [0x7f7]
Successors: []
---
0x802 RETURNDATASIZE
0x803 PUSH1 0x0
0x805 DUP1
0x806 RETURNDATACOPY
0x807 RETURNDATASIZE
0x808 PUSH1 0x0
0x80a REVERT
---
0x802: V474 = RETURNDATASIZE
0x803: V475 = 0x0
0x806: RETURNDATACOPY 0x0 0x0 V474
0x807: V476 = RETURNDATASIZE
0x808: V477 = 0x0
0x80a: REVERT 0x0 V476
---
Entry stack: [V11, {0x85, 0xb1}, V436, 0xa03729f5, V458, V471]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V436, 0xa03729f5, V458, V471]

================================

Block 0x80b
[0x80b:0x81c]
---
Predecessors: [0x7f7]
Successors: [0x81d, 0x821]
---
0x80b JUMPDEST
0x80c POP
0x80d POP
0x80e POP
0x80f POP
0x810 PUSH1 0x40
0x812 MLOAD
0x813 RETURNDATASIZE
0x814 PUSH1 0x20
0x816 DUP2
0x817 LT
0x818 ISZERO
0x819 PUSH2 0x821
0x81c JUMPI
---
0x80b: JUMPDEST 
0x810: V478 = 0x40
0x812: V479 = M[0x40]
0x813: V480 = RETURNDATASIZE
0x814: V481 = 0x20
0x817: V482 = LT V480 0x20
0x818: V483 = ISZERO V482
0x819: V484 = 0x821
0x81c: JUMPI 0x821 V483
---
Entry stack: [V11, {0x85, 0xb1}, V436, 0xa03729f5, V458, V471]
Stack pops: 4
Stack additions: [V479, V480]
Exit stack: [V11, {0x85, 0xb1}, V479, V480]

================================

Block 0x81d
[0x81d:0x820]
---
Predecessors: [0x80b]
Successors: []
---
0x81d PUSH1 0x0
0x81f DUP1
0x820 REVERT
---
0x81d: V485 = 0x0
0x820: REVERT 0x0 0x0
---
Entry stack: [V11, {0x85, 0xb1}, V479, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, V479, V480]

================================

Block 0x821
[0x821:0x834]
---
Predecessors: [0x80b]
Successors: [0x85, 0xb1]
---
0x821 JUMPDEST
0x822 DUP2
0x823 ADD
0x824 SWAP1
0x825 DUP1
0x826 DUP1
0x827 MLOAD
0x828 SWAP1
0x829 PUSH1 0x20
0x82b ADD
0x82c SWAP1
0x82d SWAP3
0x82e SWAP2
0x82f SWAP1
0x830 POP
0x831 POP
0x832 POP
0x833 POP
0x834 JUMP
---
0x821: JUMPDEST 
0x823: V486 = ADD V479 V480
0x827: V487 = M[V479]
0x829: V488 = 0x20
0x82b: V489 = ADD 0x20 V479
0x834: JUMP {0x85, 0xb1}
---
Entry stack: [V11, {0x85, 0xb1}, V479, V480]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x835
[0x835:0x83f]
---
Predecessors: [0xbf]
Successors: [0xc8]
---
0x835 JUMPDEST
0x836 PUSH7 0x2386f26fc10000
0x83e DUP2
0x83f JUMP
---
0x835: JUMPDEST 
0x836: V490 = 0x2386f26fc10000
0x83f: JUMP 0xc8
---
Entry stack: [V11, 0xc8]
Stack pops: 1
Stack additions: [S0, 0x2386f26fc10000]
Exit stack: [V11, 0xc8, 0x2386f26fc10000]

================================

Block 0x840
[0x840:0x865]
---
Predecessors: [0xea]
Successors: [0xf3]
---
0x840 JUMPDEST
0x841 PUSH1 0x3
0x843 PUSH1 0x1
0x845 SWAP1
0x846 SLOAD
0x847 SWAP1
0x848 PUSH2 0x100
0x84b EXP
0x84c SWAP1
0x84d DIV
0x84e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x863 AND
0x864 DUP2
0x865 JUMP
---
0x840: JUMPDEST 
0x841: V491 = 0x3
0x843: V492 = 0x1
0x846: V493 = S[0x3]
0x848: V494 = 0x100
0x84b: V495 = EXP 0x100 0x1
0x84d: V496 = DIV V493 0x100
0x84e: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x863: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x865: JUMP 0xf3
---
Entry stack: [V11, 0xf3]
Stack pops: 1
Stack additions: [S0, V498]
Exit stack: [V11, 0xf3, V498]

================================

Block 0x866
[0x866:0x88b]
---
Predecessors: [0x141]
Successors: [0x14a]
---
0x866 JUMPDEST
0x867 PUSH1 0x4
0x869 PUSH1 0x0
0x86b SWAP1
0x86c SLOAD
0x86d SWAP1
0x86e PUSH2 0x100
0x871 EXP
0x872 SWAP1
0x873 DIV
0x874 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x889 AND
0x88a DUP2
0x88b JUMP
---
0x866: JUMPDEST 
0x867: V499 = 0x4
0x869: V500 = 0x0
0x86c: V501 = S[0x4]
0x86e: V502 = 0x100
0x871: V503 = EXP 0x100 0x0
0x873: V504 = DIV V501 0x1
0x874: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x889: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x88b: JUMP 0x14a
---
Entry stack: [V11, 0x14a]
Stack pops: 1
Stack additions: [S0, V506]
Exit stack: [V11, 0x14a, V506]

================================

Block 0x88c
[0x88c:0x898]
---
Predecessors: [0x1e8, 0x625]
Successors: [0x899, 0x89a]
---
0x88c JUMPDEST
0x88d PUSH1 0x0
0x88f DUP3
0x890 DUP3
0x891 GT
0x892 ISZERO
0x893 ISZERO
0x894 ISZERO
0x895 PUSH2 0x89a
0x898 JUMPI
---
0x88c: JUMPDEST 
0x88d: V507 = 0x0
0x891: V508 = GT 0x2386f26fc10000 S1
0x892: V509 = ISZERO V508
0x893: V510 = ISZERO V509
0x894: V511 = ISZERO V510
0x895: V512 = 0x89a
0x898: JUMPI 0x89a V511
---
Entry stack: [V11, {0x85, 0xb1}, S4, 0x8fc, {0x23f, 0x67d}, S1, 0x2386f26fc10000]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, {0x85, 0xb1}, S4, 0x8fc, {0x23f, 0x67d}, S1, 0x2386f26fc10000, 0x0]

================================

Block 0x899
[0x899:0x899]
---
Predecessors: [0x88c]
Successors: []
---
0x899 INVALID
---
0x899: INVALID 
---
Entry stack: [V11, {0x85, 0xb1}, S5, 0x8fc, {0x23f, 0x67d}, S2, 0x2386f26fc10000, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x85, 0xb1}, S5, 0x8fc, {0x23f, 0x67d}, S2, 0x2386f26fc10000, 0x0]

================================

Block 0x89a
[0x89a:0x8a4]
---
Predecessors: [0x88c]
Successors: [0x23f, 0x67d]
---
0x89a JUMPDEST
0x89b DUP2
0x89c DUP4
0x89d SUB
0x89e SWAP1
0x89f POP
0x8a0 SWAP3
0x8a1 SWAP2
0x8a2 POP
0x8a3 POP
0x8a4 JUMP
---
0x89a: JUMPDEST 
0x89d: V513 = SUB S2 0x2386f26fc10000
0x8a4: JUMP {0x23f, 0x67d}
---
Entry stack: [V11, {0x85, 0xb1}, S5, 0x8fc, {0x23f, 0x67d}, S2, 0x2386f26fc10000, 0x0]
Stack pops: 4
Stack additions: [V513]
Exit stack: [V11, {0x85, 0xb1}, S5, 0x8fc, V513]

================================

Block 0x8a5
[0x8a5:0x8b4]
---
Predecessors: []
Successors: [0x8b5]
Has unresolved jump.
---
0x8a5 STOP
0x8a6 LOG1
0x8a7 PUSH6 0x627a7a723058
0x8ae SHA3
0x8af SWAP12
0x8b0 COINBASE
0x8b1 SWAP16
0x8b2 BLOCKHASH
0x8b3 MISSING 0x49
0x8b4 JUMPI
---
0x8a5: STOP 
0x8a6: LOG S0 S1 S2
0x8a7: V514 = 0x627a7a723058
0x8ae: V515 = SHA3 0x627a7a723058 S3
0x8b0: V516 = COINBASE
0x8b2: V517 = BLOCKHASH S18
0x8b3: MISSING 0x49
0x8b4: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V517, S15, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V515, S16, S17, V516]
Exit stack: []

================================

Block 0x8b5
[0x8b5:0x8d1]
---
Predecessors: [0x8a5]
Successors: []
---
0x8b5 MISSING 0xd
0x8b6 STATICCALL
0x8b7 MISSING 0xd3
0x8b8 MISSING 0xfc
0x8b9 PUSH24 0xa86b465fd6b51cdee62662ef6777bdaf2390422370029
---
0x8b5: MISSING 0xd
0x8b6: V518 = STATICCALL S0 S1 S2 S3 S4 S5
0x8b7: MISSING 0xd3
0x8b8: MISSING 0xfc
0x8b9: V519 = 0xa86b465fd6b51cdee62662ef6777bdaf2390422370029
---
Entry stack: []
Stack pops: 0
Stack additions: [V518, 0xa86b465fd6b51cdee62662ef6777bdaf2390422370029]
Exit stack: []

================================

Function 0:
Public function signature: 0x30af58d2
Entry block: 0x7d
Exit block: 0xb1
Body: 0x7d, 0x85, 0xb1, 0x18c, 0x1e4, 0x1e8, 0x23f, 0x261, 0x26a, 0x2d1, 0x2da, 0x3b5, 0x3b9, 0x3c4, 0x3cd, 0x3df, 0x3e3

Function 1:
Public function signature: 0x7c01b8f4
Entry block: 0x87
Exit block: 0x8f
Body: 0x87, 0x8f, 0x3f7, 0x40b, 0x40f, 0x582, 0x586, 0x591, 0x59a, 0x5ac, 0x5b0

Function 2:
Public function signature: 0x7e20c268
Entry block: 0xa9
Exit block: 0xb1
Body: 0x85, 0xa9, 0xb1, 0x5c9, 0x621, 0x625, 0x67d, 0x69f, 0x6a8, 0x70f, 0x718, 0x7f3, 0x7f7, 0x802, 0x80b, 0x81d, 0x821

Function 3:
Public function signature: 0xa06d88a0
Entry block: 0xb3
Exit block: 0xc8
Body: 0xb3, 0xbb, 0xbf, 0xc8, 0x835

Function 4:
Public function signature: 0xa3e11807
Entry block: 0xde
Exit block: 0xf3
Body: 0xde, 0xe6, 0xea, 0xf3, 0x840

Function 5:
Public function signature: 0xf48ba7d1
Entry block: 0x135
Exit block: 0x14a
Body: 0x135, 0x13d, 0x141, 0x14a, 0x866

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

Function 7:
Private function
Entry block: 0x88c
Exit block: 0x89a
Body: 0x88c, 0x89a

