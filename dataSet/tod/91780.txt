Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x46]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x46
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x46
0xa: JUMPI 0x46 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x4f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x26d2d1b3
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x4f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x26d2d1b3
0x20: V14 = EQ V12 0x26d2d1b3
0x21: V15 = 0x4f
0x24: JUMPI 0x4f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x9d]
---
0x25 DUP1
0x26 PUSH4 0x4c125e79
0x2b EQ
0x2c PUSH2 0x9d
0x2f JUMPI
---
0x26: V16 = 0x4c125e79
0x2b: V17 = EQ 0x4c125e79 V12
0x2c: V18 = 0x9d
0x2f: JUMPI 0x9d V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xbc]
---
0x30 DUP1
0x31 PUSH4 0xedad1978
0x36 EQ
0x37 PUSH2 0xbc
0x3a JUMPI
---
0x31: V19 = 0xedad1978
0x36: V20 = EQ 0xedad1978 V12
0x37: V21 = 0xbc
0x3a: JUMPI 0xbc V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe8]
---
0x3b DUP1
0x3c PUSH4 0xfee36947
0x41 EQ
0x42 PUSH2 0xe8
0x45 JUMPI
---
0x3c: V22 = 0xfee36947
0x41: V23 = EQ 0xfee36947 V12
0x42: V24 = 0xe8
0x45: JUMPI 0xe8 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x49]
---
Predecessors: [0x0, 0x3b]
Successors: [0x4a]
---
0x46 JUMPDEST
0x47 PUSH2 0x4d
---
0x46: JUMPDEST 
0x47: V25 = 0x4d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d]
Exit stack: [V12, 0x4d]

================================

Block 0x4a
[0x4a:0x4a]
---
Predecessors: [0x46]
Successors: [0x4b]
---
0x4a JUMPDEST
---
0x4a: JUMPDEST 
---
Entry stack: [V12, 0x4d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d]

================================

Block 0x4b
[0x4b:0x4c]
---
Predecessors: [0x4a]
Successors: [0x4d]
---
0x4b JUMPDEST
0x4c JUMP
---
0x4b: JUMPDEST 
0x4c: JUMP 0x4d
---
Entry stack: [V12, 0x4d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x4b, 0x568, 0x802, 0xa1c]
Successors: []
---
0x4d JUMPDEST
0x4e STOP
---
0x4d: JUMPDEST 
0x4e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f
[0x4f:0x9a]
---
Predecessors: [0xb]
Successors: [0x110]
---
0x4f JUMPDEST
0x50 PUSH1 0x40
0x52 DUP1
0x53 MLOAD
0x54 PUSH1 0x24
0x56 DUP1
0x57 CALLDATALOAD
0x58 PUSH1 0x4
0x5a DUP2
0x5b DUP2
0x5c ADD
0x5d CALLDATALOAD
0x5e PUSH1 0x20
0x60 DUP2
0x61 DUP2
0x62 MUL
0x63 DUP7
0x64 DUP2
0x65 ADD
0x66 DUP3
0x67 ADD
0x68 SWAP1
0x69 SWAP8
0x6a MSTORE
0x6b DUP2
0x6c DUP7
0x6d MSTORE
0x6e PUSH2 0x4d
0x71 SWAP7
0x72 PUSH1 0xff
0x74 DUP5
0x75 CALLDATALOAD
0x76 AND
0x77 SWAP7
0x78 SWAP4
0x79 SWAP6
0x7a PUSH1 0x44
0x7c SWAP6
0x7d ADD
0x7e SWAP3
0x7f SWAP2
0x80 DUP3
0x81 SWAP2
0x82 SWAP1
0x83 DUP6
0x84 ADD
0x85 SWAP1
0x86 DUP5
0x87 SWAP1
0x88 DUP1
0x89 DUP3
0x8a DUP5
0x8b CALLDATACOPY
0x8c POP
0x8d SWAP5
0x8e SWAP7
0x8f POP
0x90 PUSH2 0x110
0x93 SWAP6
0x94 POP
0x95 POP
0x96 POP
0x97 POP
0x98 POP
0x99 POP
0x9a JUMP
---
0x4f: JUMPDEST 
0x50: V26 = 0x40
0x53: V27 = M[0x40]
0x54: V28 = 0x24
0x57: V29 = CALLDATALOAD 0x24
0x58: V30 = 0x4
0x5c: V31 = ADD 0x4 V29
0x5d: V32 = CALLDATALOAD V31
0x5e: V33 = 0x20
0x62: V34 = MUL 0x20 V32
0x65: V35 = ADD V34 V27
0x67: V36 = ADD 0x20 V35
0x6a: M[0x40] = V36
0x6d: M[V27] = V32
0x6e: V37 = 0x4d
0x72: V38 = 0xff
0x75: V39 = CALLDATALOAD 0x4
0x76: V40 = AND V39 0xff
0x7a: V41 = 0x44
0x7d: V42 = ADD V29 0x24
0x84: V43 = ADD V27 0x20
0x8b: CALLDATACOPY V43 V42 V34
0x90: V44 = 0x110
0x9a: JUMP 0x110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d, V40, V27]
Exit stack: [V12, 0x4d, V40, V27]

================================

Block 0x9b
[0x9b:0x9c]
---
Predecessors: []
Successors: []
---
0x9b JUMPDEST
0x9c STOP
---
0x9b: JUMPDEST 
0x9c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9d
[0x9d:0xa3]
---
Predecessors: [0x25]
Successors: [0xa4, 0xa5]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f ISZERO
0xa0 PUSH2 0xa5
0xa3 JUMPI
---
0x9d: JUMPDEST 
0x9e: V45 = CALLVALUE
0x9f: V46 = ISZERO V45
0xa0: V47 = 0xa5
0xa3: JUMPI 0xa5 V46
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa4
[0xa4:0xa4]
---
Predecessors: [0x9d]
Successors: []
---
0xa4 INVALID
---
0xa4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa5
[0xa5:0xb9]
---
Predecessors: [0x9d]
Successors: [0x56d]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x4d
0xa9 PUSH8 0xffffffffffffffff
0xb2 PUSH1 0x4
0xb4 CALLDATALOAD
0xb5 AND
0xb6 PUSH2 0x56d
0xb9 JUMP
---
0xa5: JUMPDEST 
0xa6: V48 = 0x4d
0xa9: V49 = 0xffffffffffffffff
0xb2: V50 = 0x4
0xb4: V51 = CALLDATALOAD 0x4
0xb5: V52 = AND V51 0xffffffffffffffff
0xb6: V53 = 0x56d
0xb9: JUMP 0x56d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d, V52]
Exit stack: [V12, 0x4d, V52]

================================

Block 0xba
[0xba:0xbb]
---
Predecessors: []
Successors: []
---
0xba JUMPDEST
0xbb STOP
---
0xba: JUMPDEST 
0xbb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x30]
Successors: [0xc3, 0xc4]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc4
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V54 = CALLVALUE
0xbe: V55 = ISZERO V54
0xbf: V56 = 0xc4
0xc2: JUMPI 0xc4 V55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xc3]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 INVALID
---
0xc3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4
[0xc4:0xcb]
---
Predecessors: [0xbc]
Successors: [0x806]
---
0xc4 JUMPDEST
0xc5 PUSH2 0xcc
0xc8 PUSH2 0x806
0xcb JUMP
---
0xc4: JUMPDEST 
0xc5: V57 = 0xcc
0xc8: V58 = 0x806
0xcb: JUMP 0x806
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xcc]
Exit stack: [V12, 0xcc]

================================

Block 0xcc
[0xcc:0xe7]
---
Predecessors: [0x806]
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x40
0xcf DUP1
0xd0 MLOAD
0xd1 PUSH1 0x1
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 SUB
0xd9 SWAP1
0xda SWAP3
0xdb AND
0xdc DUP3
0xdd MSTORE
0xde MLOAD
0xdf SWAP1
0xe0 DUP2
0xe1 SWAP1
0xe2 SUB
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 RETURN
---
0xcc: JUMPDEST 
0xcd: V59 = 0x40
0xd0: V60 = M[0x40]
0xd1: V61 = 0x1
0xd3: V62 = 0xa0
0xd5: V63 = 0x2
0xd7: V64 = EXP 0x2 0xa0
0xd8: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V66 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0xdd: M[V60] = V66
0xde: V67 = M[0x40]
0xe2: V68 = SUB V60 V67
0xe3: V69 = 0x20
0xe5: V70 = ADD 0x20 V68
0xe7: RETURN V67 V70
---
Entry stack: [V12, 0xcc, V668]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xcc]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x3b]
Successors: [0xef, 0xf0]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf0
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V71 = CALLVALUE
0xea: V72 = ISZERO V71
0xeb: V73 = 0xf0
0xee: JUMPI 0xf0 V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xef]
---
Predecessors: [0xe8]
Successors: []
---
0xef INVALID
---
0xef: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf0
[0xf0:0x10d]
---
Predecessors: [0xe8]
Successors: [0x815]
---
0xf0 JUMPDEST
0xf1 PUSH2 0x4d
0xf4 PUSH8 0xffffffffffffffff
0xfd PUSH1 0x4
0xff CALLDATALOAD
0x100 DUP2
0x101 AND
0x102 SWAP1
0x103 PUSH1 0x24
0x105 CALLDATALOAD
0x106 AND
0x107 PUSH1 0x44
0x109 CALLDATALOAD
0x10a PUSH2 0x815
0x10d JUMP
---
0xf0: JUMPDEST 
0xf1: V74 = 0x4d
0xf4: V75 = 0xffffffffffffffff
0xfd: V76 = 0x4
0xff: V77 = CALLDATALOAD 0x4
0x101: V78 = AND 0xffffffffffffffff V77
0x103: V79 = 0x24
0x105: V80 = CALLDATALOAD 0x24
0x106: V81 = AND V80 0xffffffffffffffff
0x107: V82 = 0x44
0x109: V83 = CALLDATALOAD 0x44
0x10a: V84 = 0x815
0x10d: JUMP 0x815
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d, V78, V81, V83]
Exit stack: [V12, 0x4d, V78, V81, V83]

================================

Block 0x10e
[0x10e:0x10f]
---
Predecessors: []
Successors: []
---
0x10e JUMPDEST
0x10f STOP
---
0x10e: JUMPDEST 
0x10f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x110
[0x110:0x121]
---
Predecessors: [0x4f]
Successors: [0x122, 0x207]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 PUSH7 0x8e1bc9bf04000
0x11b CALLVALUE
0x11c LT
0x11d ISZERO
0x11e PUSH2 0x207
0x121 JUMPI
---
0x110: JUMPDEST 
0x111: V85 = 0x0
0x113: V86 = 0x8e1bc9bf04000
0x11b: V87 = CALLVALUE
0x11c: V88 = LT V87 0x8e1bc9bf04000
0x11d: V89 = ISZERO V88
0x11e: V90 = 0x207
0x121: JUMPI 0x207 V89
---
Entry stack: [V12, 0x4d, V40, V27]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x4d, V40, V27, 0x0]

================================

Block 0x122
[0x122:0x14b]
---
Predecessors: [0x110]
Successors: [0x14c, 0x150]
---
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d CALLER
0x12e AND
0x12f SWAP1
0x130 CALLVALUE
0x131 DUP1
0x132 ISZERO
0x133 PUSH2 0x8fc
0x136 MUL
0x137 SWAP2
0x138 PUSH1 0x0
0x13a DUP2
0x13b DUP2
0x13c DUP2
0x13d DUP6
0x13e DUP9
0x13f DUP9
0x140 CALL
0x141 SWAP4
0x142 POP
0x143 POP
0x144 POP
0x145 POP
0x146 ISZERO
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x122: V91 = 0x40
0x124: V92 = M[0x40]
0x125: V93 = 0x1
0x127: V94 = 0xa0
0x129: V95 = 0x2
0x12b: V96 = EXP 0x2 0xa0
0x12c: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V98 = CALLER
0x12e: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x130: V100 = CALLVALUE
0x132: V101 = ISZERO V100
0x133: V102 = 0x8fc
0x136: V103 = MUL 0x8fc V101
0x138: V104 = 0x0
0x140: V105 = CALL V103 V99 V100 V92 0x0 V92 0x0
0x146: V106 = ISZERO V105
0x147: V107 = ISZERO V106
0x148: V108 = 0x150
0x14b: JUMPI 0x150 V107
---
Entry stack: [V12, 0x4d, V40, V27, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x122]
Successors: []
---
0x14c PUSH2 0x0
0x14f JUMP
---
0x14c: V109 = 0x0
0x14f: THROW 
---
Entry stack: [V12, 0x4d, V40, V27, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0]

================================

Block 0x150
[0x150:0x1cc]
---
Predecessors: [0x122]
Successors: [0x1cd, 0x1ed]
---
0x150 JUMPDEST
0x151 PUSH32 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x172 PUSH1 0x0
0x174 NOT
0x175 CALLER
0x176 DUP5
0x177 MLOAD
0x178 DUP6
0x179 PUSH1 0x40
0x17b MLOAD
0x17c DUP1
0x17d DUP6
0x17e PUSH1 0x7
0x180 SIGNEXTEND
0x181 DUP2
0x182 MSTORE
0x183 PUSH1 0x20
0x185 ADD
0x186 DUP5
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f AND
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 AND
0x199 DUP2
0x19a MSTORE
0x19b PUSH1 0x20
0x19d ADD
0x19e DUP4
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 DUP1
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 DUP3
0x1a9 DUP2
0x1aa SUB
0x1ab DUP3
0x1ac MSTORE
0x1ad DUP4
0x1ae DUP2
0x1af DUP2
0x1b0 MLOAD
0x1b1 DUP2
0x1b2 MSTORE
0x1b3 PUSH1 0x20
0x1b5 ADD
0x1b6 SWAP2
0x1b7 POP
0x1b8 DUP1
0x1b9 MLOAD
0x1ba SWAP1
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP1
0x1bf PUSH1 0x20
0x1c1 MUL
0x1c2 DUP1
0x1c3 DUP4
0x1c4 DUP4
0x1c5 PUSH1 0x0
0x1c7 DUP4
0x1c8 EQ
0x1c9 PUSH2 0x1ed
0x1cc JUMPI
---
0x150: JUMPDEST 
0x151: V110 = 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x172: V111 = 0x0
0x174: V112 = NOT 0x0
0x175: V113 = CALLER
0x177: V114 = M[V27]
0x179: V115 = 0x40
0x17b: V116 = M[0x40]
0x17e: V117 = 0x7
0x180: V118 = SIGNEXTEND 0x7 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x182: M[V116] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x183: V119 = 0x20
0x185: V120 = ADD 0x20 V116
0x187: V121 = 0x1
0x189: V122 = 0xa0
0x18b: V123 = 0x2
0x18d: V124 = EXP 0x2 0xa0
0x18e: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x190: V127 = 0x1
0x192: V128 = 0xa0
0x194: V129 = 0x2
0x196: V130 = EXP 0x2 0xa0
0x197: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x19a: M[V120] = V132
0x19b: V133 = 0x20
0x19d: V134 = ADD 0x20 V120
0x1a0: M[V134] = V114
0x1a1: V135 = 0x20
0x1a3: V136 = ADD 0x20 V134
0x1a5: V137 = 0x20
0x1a7: V138 = ADD 0x20 V136
0x1aa: V139 = SUB V138 V116
0x1ac: M[V136] = V139
0x1b0: V140 = M[V27]
0x1b2: M[V138] = V140
0x1b3: V141 = 0x20
0x1b5: V142 = ADD 0x20 V138
0x1b9: V143 = M[V27]
0x1bb: V144 = 0x20
0x1bd: V145 = ADD 0x20 V27
0x1bf: V146 = 0x20
0x1c1: V147 = MUL 0x20 V143
0x1c5: V148 = 0x0
0x1c8: V149 = EQ V147 0x0
0x1c9: V150 = 0x1ed
0x1cc: JUMPI 0x1ed V149
---
Entry stack: [V12, 0x4d, V40, V27, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V113, V114, S1, V116, V136, V142, V145, V147, V147, V142, V145]
Exit stack: [V12, 0x4d, V40, V27, 0x0, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V113, V114, V27, V116, V136, V142, V145, V147, V147, V142, V145]

================================

Block 0x1cd
[0x1cd:0x1da]
---
Predecessors: [0x150, 0x1db, 0x419]
Successors: [0x1db, 0x1ed]
---
0x1cd JUMPDEST
0x1ce DUP1
0x1cf MLOAD
0x1d0 DUP3
0x1d1 MSTORE
0x1d2 PUSH1 0x20
0x1d4 DUP4
0x1d5 GT
0x1d6 ISZERO
0x1d7 PUSH2 0x1ed
0x1da JUMPI
---
0x1cd: JUMPDEST 
0x1cf: V151 = M[S0]
0x1d1: M[S1] = V151
0x1d2: V152 = 0x20
0x1d5: V153 = GT S2 0x20
0x1d6: V154 = ISZERO V153
0x1d7: V155 = 0x1ed
0x1da: JUMPI 0x1ed V154
---
Entry stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1db
[0x1db:0x1ec]
---
Predecessors: [0x1cd]
Successors: [0x1cd]
---
0x1db PUSH1 0x1f
0x1dd NOT
0x1de SWAP1
0x1df SWAP3
0x1e0 ADD
0x1e1 SWAP2
0x1e2 PUSH1 0x20
0x1e4 SWAP2
0x1e5 DUP3
0x1e6 ADD
0x1e7 SWAP2
0x1e8 ADD
0x1e9 PUSH2 0x1cd
0x1ec JUMP
---
0x1db: V156 = 0x1f
0x1dd: V157 = NOT 0x1f
0x1e0: V158 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1e2: V159 = 0x20
0x1e6: V160 = ADD 0x20 S1
0x1e8: V161 = ADD 0x20 S0
0x1e9: V162 = 0x1cd
0x1ec: JUMP 0x1cd
---
Entry stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V158, V160, V161]
Exit stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, V158, V160, V161]

================================

Block 0x1ed
[0x1ed:0x206]
---
Predecessors: [0x150, 0x1cd, 0x38e, 0x40b]
Successors: [0x568]
---
0x1ed JUMPDEST
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 SWAP1
0x1f2 POP
0x1f3 ADD
0x1f4 SWAP6
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe DUP1
0x1ff SWAP2
0x200 SUB
0x201 SWAP1
0x202 LOG1
0x203 PUSH2 0x568
0x206 JUMP
---
0x1ed: JUMPDEST 
0x1f3: V163 = ADD S3 S5
0x1fb: V164 = 0x40
0x1fd: V165 = M[0x40]
0x200: V166 = SUB V163 V165
0x202: LOG V165 V166 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x203: V167 = 0x568
0x206: JUMP 0x568
---
Entry stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, S13]

================================

Block 0x207
[0x207:0x2f2]
---
Predecessors: [0x110]
Successors: [0x2f3, 0x313]
---
0x207 JUMPDEST
0x208 PUSH1 0x0
0x20a DUP1
0x20b SLOAD
0x20c PUSH1 0x40
0x20e DUP1
0x20f MLOAD
0x210 PUSH32 0x726573706f6e73652875696e7436342c75696e7436342c627974657333322900
0x231 DUP2
0x232 MSTORE
0x233 DUP2
0x234 MLOAD
0x235 SWAP1
0x236 DUP2
0x237 SWAP1
0x238 SUB
0x239 PUSH1 0x1f
0x23b ADD
0x23c DUP2
0x23d SHA3
0x23e PUSH1 0x20
0x240 SWAP2
0x241 DUP3
0x242 ADD
0x243 DUP6
0x244 SWAP1
0x245 MSTORE
0x246 SWAP2
0x247 MLOAD
0x248 PUSH32 0x58487bee00000000000000000000000000000000000000000000000000000000
0x269 DUP2
0x26a MSTORE
0x26b PUSH1 0xff
0x26d DUP9
0x26e AND
0x26f PUSH1 0x4
0x271 DUP3
0x272 ADD
0x273 SWAP1
0x274 DUP2
0x275 MSTORE
0x276 ADDRESS
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f DUP2
0x280 DUP2
0x281 AND
0x282 PUSH1 0x24
0x284 DUP6
0x285 ADD
0x286 MSTORE
0x287 PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2a8 DUP7
0x2a9 AND
0x2aa PUSH1 0x44
0x2ac DUP6
0x2ad ADD
0x2ae MSTORE
0x2af PUSH1 0x64
0x2b1 DUP5
0x2b2 ADD
0x2b3 DUP9
0x2b4 SWAP1
0x2b5 MSTORE
0x2b6 PUSH1 0xa0
0x2b8 PUSH1 0x84
0x2ba DUP6
0x2bb ADD
0x2bc SWAP1
0x2bd DUP2
0x2be MSTORE
0x2bf DUP11
0x2c0 MLOAD
0x2c1 PUSH1 0xa4
0x2c3 DUP7
0x2c4 ADD
0x2c5 MSTORE
0x2c6 DUP11
0x2c7 MLOAD
0x2c8 SWAP2
0x2c9 SWAP1
0x2ca SWAP8
0x2cb AND
0x2cc SWAP8
0x2cd PUSH4 0x58487bee
0x2d2 SWAP8
0x2d3 CALLVALUE
0x2d4 SWAP8
0x2d5 DUP14
0x2d6 SWAP8
0x2d7 SWAP5
0x2d8 SWAP7
0x2d9 SWAP1
0x2da SWAP6
0x2db SWAP3
0x2dc SWAP5
0x2dd DUP14
0x2de SWAP5
0x2df PUSH1 0xc4
0x2e1 SWAP1
0x2e2 SWAP3
0x2e3 ADD
0x2e4 SWAP2
0x2e5 DUP2
0x2e6 DUP7
0x2e7 ADD
0x2e8 SWAP2
0x2e9 MUL
0x2ea DUP1
0x2eb DUP4
0x2ec DUP4
0x2ed DUP3
0x2ee ISZERO
0x2ef PUSH2 0x313
0x2f2 JUMPI
---
0x207: JUMPDEST 
0x208: V168 = 0x0
0x20b: V169 = S[0x0]
0x20c: V170 = 0x40
0x20f: V171 = M[0x40]
0x210: V172 = 0x726573706f6e73652875696e7436342c75696e7436342c627974657333322900
0x232: M[V171] = 0x726573706f6e73652875696e7436342c75696e7436342c627974657333322900
0x234: V173 = M[0x40]
0x238: V174 = SUB V171 V173
0x239: V175 = 0x1f
0x23b: V176 = ADD 0x1f V174
0x23d: V177 = SHA3 V173 V176
0x23e: V178 = 0x20
0x242: V179 = ADD 0x20 V173
0x245: M[V179] = 0x0
0x247: V180 = M[0x40]
0x248: V181 = 0x58487bee00000000000000000000000000000000000000000000000000000000
0x26a: M[V180] = 0x58487bee00000000000000000000000000000000000000000000000000000000
0x26b: V182 = 0xff
0x26e: V183 = AND V40 0xff
0x26f: V184 = 0x4
0x272: V185 = ADD V180 0x4
0x275: M[V185] = V183
0x276: V186 = ADDRESS
0x277: V187 = 0x1
0x279: V188 = 0xa0
0x27b: V189 = 0x2
0x27d: V190 = EXP 0x2 0xa0
0x27e: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x282: V193 = 0x24
0x285: V194 = ADD V180 0x24
0x286: M[V194] = V192
0x287: V195 = 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2a9: V196 = AND V177 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2aa: V197 = 0x44
0x2ad: V198 = ADD V180 0x44
0x2ae: M[V198] = V196
0x2af: V199 = 0x64
0x2b2: V200 = ADD V180 0x64
0x2b5: M[V200] = 0x0
0x2b6: V201 = 0xa0
0x2b8: V202 = 0x84
0x2bb: V203 = ADD V180 0x84
0x2be: M[V203] = 0xa0
0x2c0: V204 = M[V27]
0x2c1: V205 = 0xa4
0x2c4: V206 = ADD V180 0xa4
0x2c5: M[V206] = V204
0x2c7: V207 = M[V27]
0x2cb: V208 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x2cd: V209 = 0x58487bee
0x2d3: V210 = CALLVALUE
0x2df: V211 = 0xc4
0x2e3: V212 = ADD V180 0xc4
0x2e7: V213 = ADD V27 0x20
0x2e9: V214 = MUL 0x20 V207
0x2ee: V215 = ISZERO V214
0x2ef: V216 = 0x313
0x2f2: JUMPI 0x313 V215
---
Entry stack: [V12, 0x4d, V40, V27, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V208, 0x58487bee, V210, S2, V186, V177, 0x0, S1, V185, V203, V212, V213, V214, V214, V212, V213]
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, V214, V212, V213]

================================

Block 0x2f3
[0x2f3:0x300]
---
Predecessors: [0x207, 0x301]
Successors: [0x301, 0x313]
---
0x2f3 JUMPDEST
0x2f4 DUP1
0x2f5 MLOAD
0x2f6 DUP3
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa DUP4
0x2fb GT
0x2fc ISZERO
0x2fd PUSH2 0x313
0x300 JUMPI
---
0x2f3: JUMPDEST 
0x2f5: V217 = M[S0]
0x2f7: M[S1] = V217
0x2f8: V218 = 0x20
0x2fb: V219 = GT S2 0x20
0x2fc: V220 = ISZERO V219
0x2fd: V221 = 0x313
0x300: JUMPI 0x313 V220
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, S2, S1, S0]

================================

Block 0x301
[0x301:0x312]
---
Predecessors: [0x2f3]
Successors: [0x2f3]
---
0x301 PUSH1 0x1f
0x303 NOT
0x304 SWAP1
0x305 SWAP3
0x306 ADD
0x307 SWAP2
0x308 PUSH1 0x20
0x30a SWAP2
0x30b DUP3
0x30c ADD
0x30d SWAP2
0x30e ADD
0x30f PUSH2 0x2f3
0x312 JUMP
---
0x301: V222 = 0x1f
0x303: V223 = NOT 0x1f
0x306: V224 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x308: V225 = 0x20
0x30c: V226 = ADD 0x20 S1
0x30e: V227 = ADD 0x20 S0
0x30f: V228 = 0x2f3
0x312: JUMP 0x2f3
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, S2, S1, S0]
Stack pops: 3
Stack additions: [V224, V226, V227]
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, V224, V226, V227]

================================

Block 0x313
[0x313:0x334]
---
Predecessors: [0x207, 0x2f3]
Successors: [0x335, 0x336]
---
0x313 JUMPDEST
0x314 POP
0x315 POP
0x316 POP
0x317 SWAP1
0x318 POP
0x319 ADD
0x31a SWAP7
0x31b POP
0x31c POP
0x31d POP
0x31e POP
0x31f POP
0x320 POP
0x321 POP
0x322 PUSH1 0x20
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 DUP4
0x329 SUB
0x32a DUP2
0x32b DUP6
0x32c DUP9
0x32d DUP1
0x32e EXTCODESIZE
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x336
0x334 JUMPI
---
0x313: JUMPDEST 
0x319: V229 = ADD V214 V212
0x322: V230 = 0x20
0x324: V231 = 0x40
0x326: V232 = M[0x40]
0x329: V233 = SUB V229 V232
0x32e: V234 = EXTCODESIZE V208
0x32f: V235 = ISZERO V234
0x330: V236 = ISZERO V235
0x331: V237 = 0x336
0x334: JUMPI 0x336 V236
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, S2, S1, S0]
Stack pops: 16
Stack additions: [S15, S14, S13, V229, 0x20, V232, V233, V232, S13, S15]
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229, 0x20, V232, V233, V232, V210, V208]

================================

Block 0x335
[0x335:0x335]
---
Predecessors: [0x313]
Successors: []
---
0x335 INVALID
---
0x335: INVALID 
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229, 0x20, V232, V233, V232, V210, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229, 0x20, V232, V233, V232, V210, V208]

================================

Block 0x336
[0x336:0x342]
---
Predecessors: [0x313]
Successors: [0x343, 0x344]
---
0x336 JUMPDEST
0x337 PUSH2 0x235a
0x33a GAS
0x33b SUB
0x33c CALL
0x33d ISZERO
0x33e ISZERO
0x33f PUSH2 0x344
0x342 JUMPI
---
0x336: JUMPDEST 
0x337: V238 = 0x235a
0x33a: V239 = GAS
0x33b: V240 = SUB V239 0x235a
0x33c: V241 = CALL V240 V208 V210 V232 V233 V232 0x20
0x33d: V242 = ISZERO V241
0x33e: V243 = ISZERO V242
0x33f: V244 = 0x344
0x342: JUMPI 0x344 V243
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229, 0x20, V232, V233, V232, V210, V208]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229]

================================

Block 0x343
[0x343:0x343]
---
Predecessors: [0x336]
Successors: []
---
0x343 INVALID
---
0x343: INVALID 
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229]

================================

Block 0x344
[0x344:0x35f]
---
Predecessors: [0x336]
Successors: [0x360, 0x445]
---
0x344 JUMPDEST
0x345 POP
0x346 POP
0x347 PUSH1 0x40
0x349 MLOAD
0x34a MLOAD
0x34b SWAP3
0x34c POP
0x34d POP
0x34e POP
0x34f PUSH8 0xffffffffffffffff
0x358 DUP2
0x359 AND
0x35a ISZERO
0x35b ISZERO
0x35c PUSH2 0x445
0x35f JUMPI
---
0x344: JUMPDEST 
0x347: V245 = 0x40
0x349: V246 = M[0x40]
0x34a: V247 = M[V246]
0x34f: V248 = 0xffffffffffffffff
0x359: V249 = AND V247 0xffffffffffffffff
0x35a: V250 = ISZERO V249
0x35b: V251 = ISZERO V250
0x35c: V252 = 0x445
0x35f: JUMPI 0x445 V251
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229]
Stack pops: 5
Stack additions: [V247]
Exit stack: [V12, 0x4d, V40, V27, V247]

================================

Block 0x360
[0x360:0x389]
---
Predecessors: [0x344]
Successors: [0x38a, 0x38e]
---
0x360 PUSH1 0x40
0x362 MLOAD
0x363 PUSH1 0x1
0x365 PUSH1 0xa0
0x367 PUSH1 0x2
0x369 EXP
0x36a SUB
0x36b CALLER
0x36c AND
0x36d SWAP1
0x36e CALLVALUE
0x36f DUP1
0x370 ISZERO
0x371 PUSH2 0x8fc
0x374 MUL
0x375 SWAP2
0x376 PUSH1 0x0
0x378 DUP2
0x379 DUP2
0x37a DUP2
0x37b DUP6
0x37c DUP9
0x37d DUP9
0x37e CALL
0x37f SWAP4
0x380 POP
0x381 POP
0x382 POP
0x383 POP
0x384 ISZERO
0x385 ISZERO
0x386 PUSH2 0x38e
0x389 JUMPI
---
0x360: V253 = 0x40
0x362: V254 = M[0x40]
0x363: V255 = 0x1
0x365: V256 = 0xa0
0x367: V257 = 0x2
0x369: V258 = EXP 0x2 0xa0
0x36a: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36b: V260 = CALLER
0x36c: V261 = AND V260 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V262 = CALLVALUE
0x370: V263 = ISZERO V262
0x371: V264 = 0x8fc
0x374: V265 = MUL 0x8fc V263
0x376: V266 = 0x0
0x37e: V267 = CALL V265 V261 V262 V254 0x0 V254 0x0
0x384: V268 = ISZERO V267
0x385: V269 = ISZERO V268
0x386: V270 = 0x38e
0x389: JUMPI 0x38e V269
---
Entry stack: [V12, 0x4d, V40, V27, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247]

================================

Block 0x38a
[0x38a:0x38d]
---
Predecessors: [0x360]
Successors: []
---
0x38a PUSH2 0x0
0x38d JUMP
---
0x38a: V271 = 0x0
0x38d: THROW 
---
Entry stack: [V12, 0x4d, V40, V27, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247]

================================

Block 0x38e
[0x38e:0x40a]
---
Predecessors: [0x360]
Successors: [0x1ed, 0x40b]
---
0x38e JUMPDEST
0x38f PUSH32 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x3b0 PUSH1 0x1
0x3b2 NOT
0x3b3 CALLER
0x3b4 DUP5
0x3b5 MLOAD
0x3b6 DUP6
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba DUP1
0x3bb DUP6
0x3bc PUSH1 0x7
0x3be SIGNEXTEND
0x3bf DUP2
0x3c0 MSTORE
0x3c1 PUSH1 0x20
0x3c3 ADD
0x3c4 DUP5
0x3c5 PUSH1 0x1
0x3c7 PUSH1 0xa0
0x3c9 PUSH1 0x2
0x3cb EXP
0x3cc SUB
0x3cd AND
0x3ce PUSH1 0x1
0x3d0 PUSH1 0xa0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 SUB
0x3d6 AND
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 PUSH1 0x20
0x3db ADD
0x3dc DUP4
0x3dd DUP2
0x3de MSTORE
0x3df PUSH1 0x20
0x3e1 ADD
0x3e2 DUP1
0x3e3 PUSH1 0x20
0x3e5 ADD
0x3e6 DUP3
0x3e7 DUP2
0x3e8 SUB
0x3e9 DUP3
0x3ea MSTORE
0x3eb DUP4
0x3ec DUP2
0x3ed DUP2
0x3ee MLOAD
0x3ef DUP2
0x3f0 MSTORE
0x3f1 PUSH1 0x20
0x3f3 ADD
0x3f4 SWAP2
0x3f5 POP
0x3f6 DUP1
0x3f7 MLOAD
0x3f8 SWAP1
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP1
0x3fd PUSH1 0x20
0x3ff MUL
0x400 DUP1
0x401 DUP4
0x402 DUP4
0x403 PUSH1 0x0
0x405 DUP4
0x406 EQ
0x407 PUSH2 0x1ed
0x40a JUMPI
---
0x38e: JUMPDEST 
0x38f: V272 = 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x3b0: V273 = 0x1
0x3b2: V274 = NOT 0x1
0x3b3: V275 = CALLER
0x3b5: V276 = M[V27]
0x3b7: V277 = 0x40
0x3b9: V278 = M[0x40]
0x3bc: V279 = 0x7
0x3be: V280 = SIGNEXTEND 0x7 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
0x3c0: M[V278] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3c1: V281 = 0x20
0x3c3: V282 = ADD 0x20 V278
0x3c5: V283 = 0x1
0x3c7: V284 = 0xa0
0x3c9: V285 = 0x2
0x3cb: V286 = EXP 0x2 0xa0
0x3cc: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cd: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x3ce: V289 = 0x1
0x3d0: V290 = 0xa0
0x3d2: V291 = 0x2
0x3d4: V292 = EXP 0x2 0xa0
0x3d5: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d6: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x3d8: M[V282] = V294
0x3d9: V295 = 0x20
0x3db: V296 = ADD 0x20 V282
0x3de: M[V296] = V276
0x3df: V297 = 0x20
0x3e1: V298 = ADD 0x20 V296
0x3e3: V299 = 0x20
0x3e5: V300 = ADD 0x20 V298
0x3e8: V301 = SUB V300 V278
0x3ea: M[V298] = V301
0x3ee: V302 = M[V27]
0x3f0: M[V300] = V302
0x3f1: V303 = 0x20
0x3f3: V304 = ADD 0x20 V300
0x3f7: V305 = M[V27]
0x3f9: V306 = 0x20
0x3fb: V307 = ADD 0x20 V27
0x3fd: V308 = 0x20
0x3ff: V309 = MUL 0x20 V305
0x403: V310 = 0x0
0x406: V311 = EQ V309 0x0
0x407: V312 = 0x1ed
0x40a: JUMPI 0x1ed V311
---
Entry stack: [V12, 0x4d, V40, V27, V247]
Stack pops: 2
Stack additions: [S1, S0, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V275, V276, S1, V278, V298, V304, V307, V309, V309, V304, V307]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V275, V276, V27, V278, V298, V304, V307, V309, V309, V304, V307]

================================

Block 0x40b
[0x40b:0x418]
---
Predecessors: [0x38e]
Successors: [0x1ed, 0x419]
---
0x40b JUMPDEST
0x40c DUP1
0x40d MLOAD
0x40e DUP3
0x40f MSTORE
0x410 PUSH1 0x20
0x412 DUP4
0x413 GT
0x414 ISZERO
0x415 PUSH2 0x1ed
0x418 JUMPI
---
0x40b: JUMPDEST 
0x40d: V313 = M[V307]
0x40f: M[V304] = V313
0x410: V314 = 0x20
0x413: V315 = GT V309 0x20
0x414: V316 = ISZERO V315
0x415: V317 = 0x1ed
0x418: JUMPI 0x1ed V316
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V275, V276, V27, V278, V298, V304, V307, V309, V309, V304, V307]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V275, V276, V27, V278, V298, V304, V307, V309, V309, V304, V307]

================================

Block 0x419
[0x419:0x42a]
---
Predecessors: [0x40b]
Successors: [0x1cd]
---
0x419 PUSH1 0x1f
0x41b NOT
0x41c SWAP1
0x41d SWAP3
0x41e ADD
0x41f SWAP2
0x420 PUSH1 0x20
0x422 SWAP2
0x423 DUP3
0x424 ADD
0x425 SWAP2
0x426 ADD
0x427 PUSH2 0x1cd
0x42a JUMP
---
0x419: V318 = 0x1f
0x41b: V319 = NOT 0x1f
0x41e: V320 = ADD V309 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x420: V321 = 0x20
0x424: V322 = ADD 0x20 V304
0x426: V323 = ADD 0x20 V307
0x427: V324 = 0x1cd
0x42a: JUMP 0x1cd
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V275, V276, V27, V278, V298, V304, V307, V309, V309, V304, V307]
Stack pops: 3
Stack additions: [V320, V322, V323]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V275, V276, V27, V278, V298, V304, V307, V309, V320, V322, V323]

================================

Block 0x42b
[0x42b:0x444]
---
Predecessors: []
Successors: [0x568]
---
0x42b JUMPDEST
0x42c POP
0x42d POP
0x42e POP
0x42f SWAP1
0x430 POP
0x431 ADD
0x432 SWAP6
0x433 POP
0x434 POP
0x435 POP
0x436 POP
0x437 POP
0x438 POP
0x439 PUSH1 0x40
0x43b MLOAD
0x43c DUP1
0x43d SWAP2
0x43e SUB
0x43f SWAP1
0x440 LOG1
0x441 PUSH2 0x568
0x444 JUMP
---
0x42b: JUMPDEST 
0x431: V325 = ADD S3 S5
0x439: V326 = 0x40
0x43b: V327 = M[0x40]
0x43e: V328 = SUB V325 V327
0x440: LOG V327 V328 S12
0x441: V329 = 0x568
0x444: JUMP 0x568
---
Entry stack: []
Stack pops: 13
Stack additions: []
Exit stack: []

================================

Block 0x445
[0x445:0x45e]
---
Predecessors: [0x344]
Successors: [0x45f, 0x460]
---
0x445 JUMPDEST
0x446 CALLER
0x447 PUSH1 0x2
0x449 PUSH8 0xffffffffffffffff
0x452 DUP4
0x453 AND
0x454 PUSH1 0x40
0x456 PUSH1 0x2
0x458 EXP
0x459 DUP2
0x45a LT
0x45b PUSH2 0x460
0x45e JUMPI
---
0x445: JUMPDEST 
0x446: V330 = CALLER
0x447: V331 = 0x2
0x449: V332 = 0xffffffffffffffff
0x453: V333 = AND V247 0xffffffffffffffff
0x454: V334 = 0x40
0x456: V335 = 0x2
0x458: V336 = EXP 0x2 0x40
0x45a: V337 = LT V333 0x10000000000000000
0x45b: V338 = 0x460
0x45e: JUMPI 0x460 V337
---
Entry stack: [V12, 0x4d, V40, V27, V247]
Stack pops: 1
Stack additions: [S0, V330, 0x2, V333]
Exit stack: [V12, 0x4d, V40, V27, V247, V330, 0x2, V333]

================================

Block 0x45f
[0x45f:0x45f]
---
Predecessors: [0x445]
Successors: []
---
0x45f INVALID
---
0x45f: INVALID 
---
Entry stack: [V12, 0x4d, V40, V27, V247, V330, 0x2, V333]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247, V330, 0x2, V333]

================================

Block 0x460
[0x460:0x463]
---
Predecessors: [0x445]
Successors: [0x464]
---
0x460 JUMPDEST
0x461 ADD
0x462 PUSH1 0x0
---
0x460: JUMPDEST 
0x461: V339 = ADD V333 0x2
0x462: V340 = 0x0
---
Entry stack: [V12, 0x4d, V40, V27, V247, V330, 0x2, V333]
Stack pops: 2
Stack additions: [V339, 0x0]
Exit stack: [V12, 0x4d, V40, V27, V247, V330, V339, 0x0]

================================

Block 0x464
[0x464:0x4a9]
---
Predecessors: [0x460]
Successors: [0x4aa, 0x4ab]
---
0x464 JUMPDEST
0x465 PUSH2 0x100
0x468 EXP
0x469 DUP2
0x46a SLOAD
0x46b DUP2
0x46c PUSH1 0x1
0x46e PUSH1 0xa0
0x470 PUSH1 0x2
0x472 EXP
0x473 SUB
0x474 MUL
0x475 NOT
0x476 AND
0x477 SWAP1
0x478 DUP4
0x479 PUSH1 0x1
0x47b PUSH1 0xa0
0x47d PUSH1 0x2
0x47f EXP
0x480 SUB
0x481 AND
0x482 MUL
0x483 OR
0x484 SWAP1
0x485 SSTORE
0x486 POP
0x487 CALLVALUE
0x488 PUSH9 0x10000000000000002
0x492 DUP3
0x493 PUSH8 0xffffffffffffffff
0x49c AND
0x49d PUSH1 0x40
0x49f PUSH1 0x2
0x4a1 EXP
0x4a2 DUP2
0x4a3 LT
0x4a4 ISZERO
0x4a5 ISZERO
0x4a6 PUSH2 0x4ab
0x4a9 JUMPI
---
0x464: JUMPDEST 
0x465: V341 = 0x100
0x468: V342 = EXP 0x100 0x0
0x46a: V343 = S[V339]
0x46c: V344 = 0x1
0x46e: V345 = 0xa0
0x470: V346 = 0x2
0x472: V347 = EXP 0x2 0xa0
0x473: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x474: V349 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x475: V350 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x476: V351 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V343
0x479: V352 = 0x1
0x47b: V353 = 0xa0
0x47d: V354 = 0x2
0x47f: V355 = EXP 0x2 0xa0
0x480: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x481: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x482: V358 = MUL V357 0x1
0x483: V359 = OR V358 V351
0x485: S[V339] = V359
0x487: V360 = CALLVALUE
0x488: V361 = 0x10000000000000002
0x493: V362 = 0xffffffffffffffff
0x49c: V363 = AND 0xffffffffffffffff V247
0x49d: V364 = 0x40
0x49f: V365 = 0x2
0x4a1: V366 = EXP 0x2 0x40
0x4a3: V367 = LT V363 0x10000000000000000
0x4a4: V368 = ISZERO V367
0x4a5: V369 = ISZERO V368
0x4a6: V370 = 0x4ab
0x4a9: JUMPI 0x4ab V369
---
Entry stack: [V12, 0x4d, V40, V27, V247, V330, V339, 0x0]
Stack pops: 4
Stack additions: [S3, V360, 0x10000000000000002, V363]
Exit stack: [V12, 0x4d, V40, V27, V247, V360, 0x10000000000000002, V363]

================================

Block 0x4aa
[0x4aa:0x4aa]
---
Predecessors: [0x464]
Successors: []
---
0x4aa INVALID
---
0x4aa: INVALID 
---
Entry stack: [V12, 0x4d, V40, V27, V247, V360, 0x10000000000000002, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247, V360, 0x10000000000000002, V363]

================================

Block 0x4ab
[0x4ab:0x4ae]
---
Predecessors: [0x464]
Successors: [0x4af]
---
0x4ab JUMPDEST
0x4ac ADD
0x4ad PUSH1 0x0
---
0x4ab: JUMPDEST 
0x4ac: V371 = ADD V363 0x10000000000000002
0x4ad: V372 = 0x0
---
Entry stack: [V12, 0x4d, V40, V27, V247, V360, 0x10000000000000002, V363]
Stack pops: 2
Stack additions: [V371, 0x0]
Exit stack: [V12, 0x4d, V40, V27, V247, V360, V371, 0x0]

================================

Block 0x4af
[0x4af:0x531]
---
Predecessors: [0x4ab]
Successors: [0x532, 0x552]
---
0x4af JUMPDEST
0x4b0 POP
0x4b1 DUP2
0x4b2 SWAP1
0x4b3 SSTORE
0x4b4 POP
0x4b5 PUSH32 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x4d6 DUP2
0x4d7 CALLER
0x4d8 DUP5
0x4d9 MLOAD
0x4da DUP6
0x4db PUSH1 0x40
0x4dd MLOAD
0x4de DUP1
0x4df DUP6
0x4e0 PUSH1 0x7
0x4e2 SIGNEXTEND
0x4e3 PUSH1 0x7
0x4e5 SIGNEXTEND
0x4e6 DUP2
0x4e7 MSTORE
0x4e8 PUSH1 0x20
0x4ea ADD
0x4eb DUP5
0x4ec PUSH1 0x1
0x4ee PUSH1 0xa0
0x4f0 PUSH1 0x2
0x4f2 EXP
0x4f3 SUB
0x4f4 AND
0x4f5 PUSH1 0x1
0x4f7 PUSH1 0xa0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc SUB
0x4fd AND
0x4fe DUP2
0x4ff MSTORE
0x500 PUSH1 0x20
0x502 ADD
0x503 DUP4
0x504 DUP2
0x505 MSTORE
0x506 PUSH1 0x20
0x508 ADD
0x509 DUP1
0x50a PUSH1 0x20
0x50c ADD
0x50d DUP3
0x50e DUP2
0x50f SUB
0x510 DUP3
0x511 MSTORE
0x512 DUP4
0x513 DUP2
0x514 DUP2
0x515 MLOAD
0x516 DUP2
0x517 MSTORE
0x518 PUSH1 0x20
0x51a ADD
0x51b SWAP2
0x51c POP
0x51d DUP1
0x51e MLOAD
0x51f SWAP1
0x520 PUSH1 0x20
0x522 ADD
0x523 SWAP1
0x524 PUSH1 0x20
0x526 MUL
0x527 DUP1
0x528 DUP4
0x529 DUP4
0x52a PUSH1 0x0
0x52c DUP4
0x52d EQ
0x52e PUSH2 0x552
0x531 JUMPI
---
0x4af: JUMPDEST 
0x4b3: S[V371] = V360
0x4b5: V373 = 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x4d7: V374 = CALLER
0x4d9: V375 = M[V27]
0x4db: V376 = 0x40
0x4dd: V377 = M[0x40]
0x4e0: V378 = 0x7
0x4e2: V379 = SIGNEXTEND 0x7 V247
0x4e3: V380 = 0x7
0x4e5: V381 = SIGNEXTEND 0x7 V379
0x4e7: M[V377] = V381
0x4e8: V382 = 0x20
0x4ea: V383 = ADD 0x20 V377
0x4ec: V384 = 0x1
0x4ee: V385 = 0xa0
0x4f0: V386 = 0x2
0x4f2: V387 = EXP 0x2 0xa0
0x4f3: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f4: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x4f5: V390 = 0x1
0x4f7: V391 = 0xa0
0x4f9: V392 = 0x2
0x4fb: V393 = EXP 0x2 0xa0
0x4fc: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x4ff: M[V383] = V395
0x500: V396 = 0x20
0x502: V397 = ADD 0x20 V383
0x505: M[V397] = V375
0x506: V398 = 0x20
0x508: V399 = ADD 0x20 V397
0x50a: V400 = 0x20
0x50c: V401 = ADD 0x20 V399
0x50f: V402 = SUB V401 V377
0x511: M[V399] = V402
0x515: V403 = M[V27]
0x517: M[V401] = V403
0x518: V404 = 0x20
0x51a: V405 = ADD 0x20 V401
0x51e: V406 = M[V27]
0x520: V407 = 0x20
0x522: V408 = ADD 0x20 V27
0x524: V409 = 0x20
0x526: V410 = MUL 0x20 V406
0x52a: V411 = 0x0
0x52d: V412 = EQ V410 0x0
0x52e: V413 = 0x552
0x531: JUMPI 0x552 V412
---
Entry stack: [V12, 0x4d, V40, V27, V247, V360, V371, 0x0]
Stack pops: 5
Stack additions: [S4, S3, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, S3, V374, V375, S4, V377, V399, V405, V408, V410, V410, V405, V408]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V374, V375, V27, V377, V399, V405, V408, V410, V410, V405, V408]

================================

Block 0x532
[0x532:0x53f]
---
Predecessors: [0x4af, 0x540]
Successors: [0x540, 0x552]
---
0x532 JUMPDEST
0x533 DUP1
0x534 MLOAD
0x535 DUP3
0x536 MSTORE
0x537 PUSH1 0x20
0x539 DUP4
0x53a GT
0x53b ISZERO
0x53c PUSH2 0x552
0x53f JUMPI
---
0x532: JUMPDEST 
0x534: V414 = M[S0]
0x536: M[S1] = V414
0x537: V415 = 0x20
0x53a: V416 = GT S2 0x20
0x53b: V417 = ISZERO V416
0x53c: V418 = 0x552
0x53f: JUMPI 0x552 V417
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V374, V375, V27, V377, V399, V405, V408, V410, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V374, V375, V27, V377, V399, V405, V408, V410, S2, S1, S0]

================================

Block 0x540
[0x540:0x551]
---
Predecessors: [0x532]
Successors: [0x532]
---
0x540 PUSH1 0x1f
0x542 NOT
0x543 SWAP1
0x544 SWAP3
0x545 ADD
0x546 SWAP2
0x547 PUSH1 0x20
0x549 SWAP2
0x54a DUP3
0x54b ADD
0x54c SWAP2
0x54d ADD
0x54e PUSH2 0x532
0x551 JUMP
---
0x540: V419 = 0x1f
0x542: V420 = NOT 0x1f
0x545: V421 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x547: V422 = 0x20
0x54b: V423 = ADD 0x20 S1
0x54d: V424 = ADD 0x20 S0
0x54e: V425 = 0x532
0x551: JUMP 0x532
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V374, V375, V27, V377, V399, V405, V408, V410, S2, S1, S0]
Stack pops: 3
Stack additions: [V421, V423, V424]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V374, V375, V27, V377, V399, V405, V408, V410, V421, V423, V424]

================================

Block 0x552
[0x552:0x567]
---
Predecessors: [0x4af, 0x532]
Successors: [0x568]
---
0x552 JUMPDEST
0x553 POP
0x554 POP
0x555 POP
0x556 SWAP1
0x557 POP
0x558 ADD
0x559 SWAP6
0x55a POP
0x55b POP
0x55c POP
0x55d POP
0x55e POP
0x55f POP
0x560 PUSH1 0x40
0x562 MLOAD
0x563 DUP1
0x564 SWAP2
0x565 SUB
0x566 SWAP1
0x567 LOG1
---
0x552: JUMPDEST 
0x558: V426 = ADD V410 V405
0x560: V427 = 0x40
0x562: V428 = M[0x40]
0x565: V429 = SUB V426 V428
0x567: LOG V428 V429 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V374, V375, V27, V377, V399, V405, V408, V410, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247]

================================

Block 0x568
[0x568:0x56c]
---
Predecessors: [0x1ed, 0x42b, 0x552]
Successors: [0x4d]
---
0x568 JUMPDEST
0x569 POP
0x56a POP
0x56b POP
0x56c JUMP
---
0x568: JUMPDEST 
0x56c: JUMP 0x4d
---
Entry stack: [V12, 0x4d, V40, V27, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x56d
[0x56d:0x580]
---
Predecessors: [0xa5]
Successors: [0x581, 0x5c7]
---
0x56d JUMPDEST
0x56e PUSH1 0x0
0x570 PUSH8 0xffffffffffffffff
0x579 DUP3
0x57a AND
0x57b ISZERO
0x57c DUP1
0x57d PUSH2 0x5c7
0x580 JUMPI
---
0x56d: JUMPDEST 
0x56e: V430 = 0x0
0x570: V431 = 0xffffffffffffffff
0x57a: V432 = AND V52 0xffffffffffffffff
0x57b: V433 = ISZERO V432
0x57d: V434 = 0x5c7
0x580: JUMPI 0x5c7 V433
---
Entry stack: [V12, 0x4d, V52]
Stack pops: 1
Stack additions: [S0, 0x0, V433]
Exit stack: [V12, 0x4d, V52, 0x0, V433]

================================

Block 0x581
[0x581:0x5a3]
---
Predecessors: [0x56d]
Successors: [0x5a4, 0x5a5]
---
0x581 POP
0x582 PUSH1 0x1
0x584 PUSH1 0xa0
0x586 PUSH1 0x2
0x588 EXP
0x589 SUB
0x58a CALLER
0x58b AND
0x58c PUSH1 0x2
0x58e PUSH8 0xffffffffffffffff
0x597 DUP5
0x598 AND
0x599 PUSH1 0x40
0x59b PUSH1 0x2
0x59d EXP
0x59e DUP2
0x59f LT
0x5a0 PUSH2 0x5a5
0x5a3 JUMPI
---
0x582: V435 = 0x1
0x584: V436 = 0xa0
0x586: V437 = 0x2
0x588: V438 = EXP 0x2 0xa0
0x589: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58a: V440 = CALLER
0x58b: V441 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x58c: V442 = 0x2
0x58e: V443 = 0xffffffffffffffff
0x598: V444 = AND V52 0xffffffffffffffff
0x599: V445 = 0x40
0x59b: V446 = 0x2
0x59d: V447 = EXP 0x2 0x40
0x59f: V448 = LT V444 0x10000000000000000
0x5a0: V449 = 0x5a5
0x5a3: JUMPI 0x5a5 V448
---
Entry stack: [V12, 0x4d, V52, 0x0, V433]
Stack pops: 3
Stack additions: [S2, S1, V441, 0x2, V444]
Exit stack: [V12, 0x4d, V52, 0x0, V441, 0x2, V444]

================================

Block 0x5a4
[0x5a4:0x5a4]
---
Predecessors: [0x581]
Successors: []
---
0x5a4 INVALID
---
0x5a4: INVALID 
---
Entry stack: [V12, 0x4d, V52, 0x0, V441, 0x2, V444]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0, V441, 0x2, V444]

================================

Block 0x5a5
[0x5a5:0x5a8]
---
Predecessors: [0x581]
Successors: [0x5a9]
---
0x5a5 JUMPDEST
0x5a6 ADD
0x5a7 PUSH1 0x0
---
0x5a5: JUMPDEST 
0x5a6: V450 = ADD V444 0x2
0x5a7: V451 = 0x0
---
Entry stack: [V12, 0x4d, V52, 0x0, V441, 0x2, V444]
Stack pops: 2
Stack additions: [V450, 0x0]
Exit stack: [V12, 0x4d, V52, 0x0, V441, V450, 0x0]

================================

Block 0x5a9
[0x5a9:0x5c6]
---
Predecessors: [0x5a5]
Successors: [0x5c7]
---
0x5a9 JUMPDEST
0x5aa SWAP1
0x5ab SLOAD
0x5ac SWAP1
0x5ad PUSH2 0x100
0x5b0 EXP
0x5b1 SWAP1
0x5b2 DIV
0x5b3 PUSH1 0x1
0x5b5 PUSH1 0xa0
0x5b7 PUSH1 0x2
0x5b9 EXP
0x5ba SUB
0x5bb AND
0x5bc PUSH1 0x1
0x5be PUSH1 0xa0
0x5c0 PUSH1 0x2
0x5c2 EXP
0x5c3 SUB
0x5c4 AND
0x5c5 EQ
0x5c6 ISZERO
---
0x5a9: JUMPDEST 
0x5ab: V452 = S[V450]
0x5ad: V453 = 0x100
0x5b0: V454 = EXP 0x100 0x0
0x5b2: V455 = DIV V452 0x1
0x5b3: V456 = 0x1
0x5b5: V457 = 0xa0
0x5b7: V458 = 0x2
0x5b9: V459 = EXP 0x2 0xa0
0x5ba: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bb: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x5bc: V462 = 0x1
0x5be: V463 = 0xa0
0x5c0: V464 = 0x2
0x5c2: V465 = EXP 0x2 0xa0
0x5c3: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c4: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x5c5: V468 = EQ V467 V441
0x5c6: V469 = ISZERO V468
---
Entry stack: [V12, 0x4d, V52, 0x0, V441, V450, 0x0]
Stack pops: 3
Stack additions: [V469]
Exit stack: [V12, 0x4d, V52, 0x0, V469]

================================

Block 0x5c7
[0x5c7:0x5cc]
---
Predecessors: [0x56d, 0x5a9]
Successors: [0x5cd, 0x611]
---
0x5c7 JUMPDEST
0x5c8 ISZERO
0x5c9 PUSH2 0x611
0x5cc JUMPI
---
0x5c7: JUMPDEST 
0x5c8: V470 = ISZERO S0
0x5c9: V471 = 0x611
0x5cc: JUMPI 0x611 V470
---
Entry stack: [V12, 0x4d, V52, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0]

================================

Block 0x5cd
[0x5cd:0x610]
---
Predecessors: [0x5c7]
Successors: [0x801]
---
0x5cd PUSH1 0x40
0x5cf DUP1
0x5d0 MLOAD
0x5d1 PUSH8 0xffffffffffffffff
0x5da DUP5
0x5db AND
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x1
0x5e0 PUSH1 0xa0
0x5e2 PUSH1 0x2
0x5e4 EXP
0x5e5 SUB
0x5e6 CALLER
0x5e7 AND
0x5e8 PUSH1 0x20
0x5ea DUP3
0x5eb ADD
0x5ec MSTORE
0x5ed PUSH1 0x0
0x5ef DUP2
0x5f0 DUP4
0x5f1 ADD
0x5f2 MSTORE
0x5f3 SWAP1
0x5f4 MLOAD
0x5f5 PUSH1 0x0
0x5f7 DUP1
0x5f8 MLOAD
0x5f9 PUSH1 0x20
0x5fb PUSH2 0xa23
0x5fe DUP4
0x5ff CODECOPY
0x600 DUP2
0x601 MLOAD
0x602 SWAP2
0x603 MSTORE
0x604 SWAP2
0x605 DUP2
0x606 SWAP1
0x607 SUB
0x608 PUSH1 0x60
0x60a ADD
0x60b SWAP1
0x60c LOG1
0x60d PUSH2 0x801
0x610 JUMP
---
0x5cd: V472 = 0x40
0x5d0: V473 = M[0x40]
0x5d1: V474 = 0xffffffffffffffff
0x5db: V475 = AND V52 0xffffffffffffffff
0x5dd: M[V473] = V475
0x5de: V476 = 0x1
0x5e0: V477 = 0xa0
0x5e2: V478 = 0x2
0x5e4: V479 = EXP 0x2 0xa0
0x5e5: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e6: V481 = CALLER
0x5e7: V482 = AND V481 0xffffffffffffffffffffffffffffffffffffffff
0x5e8: V483 = 0x20
0x5eb: V484 = ADD V473 0x20
0x5ec: M[V484] = V482
0x5ed: V485 = 0x0
0x5f1: V486 = ADD 0x40 V473
0x5f2: M[V486] = 0x0
0x5f4: V487 = M[0x40]
0x5f5: V488 = 0x0
0x5f8: V489 = M[0x0]
0x5f9: V490 = 0x20
0x5fb: V491 = 0xa23
0x5ff: CODECOPY 0x0 0xa23 0x20
0x601: V492 = M[0x0]
0x603: M[0x0] = V489
0x607: V493 = SUB V473 V487
0x608: V494 = 0x60
0x60a: V495 = ADD 0x60 V493
0x60c: LOG V487 V495 V492
0x60d: V496 = 0x801
0x610: JUMP 0x801
---
Entry stack: [V12, 0x4d, V52, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x4d, V52, 0x0]

================================

Block 0x611
[0x611:0x683]
---
Predecessors: [0x5c7]
Successors: [0x684, 0x685]
---
0x611 JUMPDEST
0x612 PUSH1 0x0
0x614 DUP1
0x615 SLOAD
0x616 PUSH1 0x40
0x618 DUP1
0x619 MLOAD
0x61a PUSH1 0x20
0x61c SWAP1
0x61d DUP2
0x61e ADD
0x61f DUP5
0x620 SWAP1
0x621 MSTORE
0x622 DUP2
0x623 MLOAD
0x624 PUSH32 0x4c125e7900000000000000000000000000000000000000000000000000000000
0x645 DUP2
0x646 MSTORE
0x647 PUSH8 0xffffffffffffffff
0x650 DUP8
0x651 AND
0x652 PUSH1 0x4
0x654 DUP3
0x655 ADD
0x656 MSTORE
0x657 SWAP2
0x658 MLOAD
0x659 PUSH1 0x1
0x65b PUSH1 0xa0
0x65d PUSH1 0x2
0x65f EXP
0x660 SUB
0x661 SWAP1
0x662 SWAP4
0x663 AND
0x664 SWAP4
0x665 PUSH4 0x4c125e79
0x66a SWAP4
0x66b PUSH1 0x24
0x66d DUP1
0x66e DUP6
0x66f ADD
0x670 SWAP5
0x671 SWAP2
0x672 SWAP3
0x673 SWAP2
0x674 DUP4
0x675 SWAP1
0x676 SUB
0x677 ADD
0x678 SWAP1
0x679 DUP3
0x67a SWAP1
0x67b DUP8
0x67c DUP1
0x67d EXTCODESIZE
0x67e ISZERO
0x67f ISZERO
0x680 PUSH2 0x685
0x683 JUMPI
---
0x611: JUMPDEST 
0x612: V497 = 0x0
0x615: V498 = S[0x0]
0x616: V499 = 0x40
0x619: V500 = M[0x40]
0x61a: V501 = 0x20
0x61e: V502 = ADD 0x20 V500
0x621: M[V502] = 0x0
0x623: V503 = M[0x40]
0x624: V504 = 0x4c125e7900000000000000000000000000000000000000000000000000000000
0x646: M[V503] = 0x4c125e7900000000000000000000000000000000000000000000000000000000
0x647: V505 = 0xffffffffffffffff
0x651: V506 = AND V52 0xffffffffffffffff
0x652: V507 = 0x4
0x655: V508 = ADD V503 0x4
0x656: M[V508] = V506
0x658: V509 = M[0x40]
0x659: V510 = 0x1
0x65b: V511 = 0xa0
0x65d: V512 = 0x2
0x65f: V513 = EXP 0x2 0xa0
0x660: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x663: V515 = AND V498 0xffffffffffffffffffffffffffffffffffffffff
0x665: V516 = 0x4c125e79
0x66b: V517 = 0x24
0x66f: V518 = ADD V503 0x24
0x676: V519 = SUB V503 V509
0x677: V520 = ADD V519 0x24
0x67d: V521 = EXTCODESIZE V515
0x67e: V522 = ISZERO V521
0x67f: V523 = ISZERO V522
0x680: V524 = 0x685
0x683: JUMPI 0x685 V523
---
Entry stack: [V12, 0x4d, V52, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V515, 0x4c125e79, V518, 0x20, V509, V520, V509, 0x0, V515]
Exit stack: [V12, 0x4d, V52, 0x0, V515, 0x4c125e79, V518, 0x20, V509, V520, V509, 0x0, V515]

================================

Block 0x684
[0x684:0x684]
---
Predecessors: [0x611]
Successors: []
---
0x684 INVALID
---
0x684: INVALID 
---
Entry stack: [V12, 0x4d, V52, 0x0, V515, 0x4c125e79, V518, 0x20, V509, V520, V509, 0x0, V515]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0, V515, 0x4c125e79, V518, 0x20, V509, V520, V509, 0x0, V515]

================================

Block 0x685
[0x685:0x690]
---
Predecessors: [0x611]
Successors: [0x691, 0x692]
---
0x685 JUMPDEST
0x686 PUSH1 0x32
0x688 GAS
0x689 SUB
0x68a CALL
0x68b ISZERO
0x68c ISZERO
0x68d PUSH2 0x692
0x690 JUMPI
---
0x685: JUMPDEST 
0x686: V525 = 0x32
0x688: V526 = GAS
0x689: V527 = SUB V526 0x32
0x68a: V528 = CALL V527 V515 0x0 V509 V520 V509 0x20
0x68b: V529 = ISZERO V528
0x68c: V530 = ISZERO V529
0x68d: V531 = 0x692
0x690: JUMPI 0x692 V530
---
Entry stack: [V12, 0x4d, V52, 0x0, V515, 0x4c125e79, V518, 0x20, V509, V520, V509, 0x0, V515]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0, V515, 0x4c125e79, V518]

================================

Block 0x691
[0x691:0x691]
---
Predecessors: [0x685]
Successors: []
---
0x691 INVALID
---
0x691: INVALID 
---
Entry stack: [V12, 0x4d, V52, 0x0, V515, 0x4c125e79, V518]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0, V515, 0x4c125e79, V518]

================================

Block 0x692
[0x692:0x6a1]
---
Predecessors: [0x685]
Successors: [0x6a2, 0x7c0]
---
0x692 JUMPDEST
0x693 POP
0x694 POP
0x695 PUSH1 0x40
0x697 MLOAD
0x698 MLOAD
0x699 SWAP2
0x69a POP
0x69b POP
0x69c DUP1
0x69d ISZERO
0x69e PUSH2 0x7c0
0x6a1 JUMPI
---
0x692: JUMPDEST 
0x695: V532 = 0x40
0x697: V533 = M[0x40]
0x698: V534 = M[V533]
0x69d: V535 = ISZERO V534
0x69e: V536 = 0x7c0
0x6a1: JUMPI 0x7c0 V535
---
Entry stack: [V12, 0x4d, V52, 0x0, V515, 0x4c125e79, V518]
Stack pops: 4
Stack additions: [V534]
Exit stack: [V12, 0x4d, V52, V534]

================================

Block 0x6a2
[0x6a2:0x6bb]
---
Predecessors: [0x692]
Successors: [0x6bc, 0x6bd]
---
0x6a2 PUSH1 0x0
0x6a4 PUSH1 0x2
0x6a6 PUSH8 0xffffffffffffffff
0x6af DUP5
0x6b0 AND
0x6b1 PUSH1 0x40
0x6b3 PUSH1 0x2
0x6b5 EXP
0x6b6 DUP2
0x6b7 LT
0x6b8 PUSH2 0x6bd
0x6bb JUMPI
---
0x6a2: V537 = 0x0
0x6a4: V538 = 0x2
0x6a6: V539 = 0xffffffffffffffff
0x6b0: V540 = AND V52 0xffffffffffffffff
0x6b1: V541 = 0x40
0x6b3: V542 = 0x2
0x6b5: V543 = EXP 0x2 0x40
0x6b7: V544 = LT V540 0x10000000000000000
0x6b8: V545 = 0x6bd
0x6bb: JUMPI 0x6bd V544
---
Entry stack: [V12, 0x4d, V52, V534]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x2, V540]
Exit stack: [V12, 0x4d, V52, V534, 0x0, 0x2, V540]

================================

Block 0x6bc
[0x6bc:0x6bc]
---
Predecessors: [0x6a2]
Successors: []
---
0x6bc INVALID
---
0x6bc: INVALID 
---
Entry stack: [V12, 0x4d, V52, V534, 0x0, 0x2, V540]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, V534, 0x0, 0x2, V540]

================================

Block 0x6bd
[0x6bd:0x6c0]
---
Predecessors: [0x6a2]
Successors: [0x6c1]
---
0x6bd JUMPDEST
0x6be ADD
0x6bf PUSH1 0x0
---
0x6bd: JUMPDEST 
0x6be: V546 = ADD V540 0x2
0x6bf: V547 = 0x0
---
Entry stack: [V12, 0x4d, V52, V534, 0x0, 0x2, V540]
Stack pops: 2
Stack additions: [V546, 0x0]
Exit stack: [V12, 0x4d, V52, V534, 0x0, V546, 0x0]

================================

Block 0x6c1
[0x6c1:0x70d]
---
Predecessors: [0x6bd]
Successors: [0x70e, 0x70f]
---
0x6c1 JUMPDEST
0x6c2 DUP2
0x6c3 SLOAD
0x6c4 PUSH1 0x1
0x6c6 PUSH1 0xa0
0x6c8 PUSH1 0x2
0x6ca EXP
0x6cb SUB
0x6cc SWAP4
0x6cd DUP5
0x6ce AND
0x6cf PUSH2 0x100
0x6d2 SWAP3
0x6d3 SWAP1
0x6d4 SWAP3
0x6d5 EXP
0x6d6 SWAP2
0x6d7 DUP3
0x6d8 MUL
0x6d9 SWAP2
0x6da DUP5
0x6db MUL
0x6dc NOT
0x6dd AND
0x6de OR
0x6df SWAP1
0x6e0 SSTORE
0x6e1 CALLER
0x6e2 AND
0x6e3 PUSH2 0x8fc
0x6e6 PUSH7 0x470de4df82000
0x6ee PUSH9 0x10000000000000002
0x6f8 PUSH8 0xffffffffffffffff
0x701 DUP7
0x702 AND
0x703 PUSH1 0x40
0x705 PUSH1 0x2
0x707 EXP
0x708 DUP2
0x709 LT
0x70a PUSH2 0x70f
0x70d JUMPI
---
0x6c1: JUMPDEST 
0x6c3: V548 = S[V546]
0x6c4: V549 = 0x1
0x6c6: V550 = 0xa0
0x6c8: V551 = 0x2
0x6ca: V552 = EXP 0x2 0xa0
0x6cb: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ce: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6cf: V555 = 0x100
0x6d5: V556 = EXP 0x100 0x0
0x6d8: V557 = MUL 0x1 0x0
0x6db: V558 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6dc: V559 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6dd: V560 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V548
0x6de: V561 = OR V560 0x0
0x6e0: S[V546] = V561
0x6e1: V562 = CALLER
0x6e2: V563 = AND V562 0xffffffffffffffffffffffffffffffffffffffff
0x6e3: V564 = 0x8fc
0x6e6: V565 = 0x470de4df82000
0x6ee: V566 = 0x10000000000000002
0x6f8: V567 = 0xffffffffffffffff
0x702: V568 = AND V52 0xffffffffffffffff
0x703: V569 = 0x40
0x705: V570 = 0x2
0x707: V571 = EXP 0x2 0x40
0x709: V572 = LT V568 0x10000000000000000
0x70a: V573 = 0x70f
0x70d: JUMPI 0x70f V572
---
Entry stack: [V12, 0x4d, V52, V534, 0x0, V546, 0x0]
Stack pops: 5
Stack additions: [S4, S3, V563, 0x8fc, 0x470de4df82000, 0x10000000000000002, V568]
Exit stack: [V12, 0x4d, V52, V534, V563, 0x8fc, 0x470de4df82000, 0x10000000000000002, V568]

================================

Block 0x70e
[0x70e:0x70e]
---
Predecessors: [0x6c1]
Successors: []
---
0x70e INVALID
---
0x70e: INVALID 
---
Entry stack: [V12, 0x4d, V52, V534, V563, 0x8fc, 0x470de4df82000, 0x10000000000000002, V568]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, V534, V563, 0x8fc, 0x470de4df82000, 0x10000000000000002, V568]

================================

Block 0x70f
[0x70f:0x712]
---
Predecessors: [0x6c1]
Successors: [0x713]
---
0x70f JUMPDEST
0x710 ADD
0x711 PUSH1 0x0
---
0x70f: JUMPDEST 
0x710: V574 = ADD V568 0x10000000000000002
0x711: V575 = 0x0
---
Entry stack: [V12, 0x4d, V52, V534, V563, 0x8fc, 0x470de4df82000, 0x10000000000000002, V568]
Stack pops: 2
Stack additions: [V574, 0x0]
Exit stack: [V12, 0x4d, V52, V534, V563, 0x8fc, 0x470de4df82000, V574, 0x0]

================================

Block 0x713
[0x713:0x736]
---
Predecessors: [0x70f]
Successors: [0x737, 0x77b]
---
0x713 JUMPDEST
0x714 POP
0x715 SLOAD
0x716 PUSH1 0x40
0x718 MLOAD
0x719 SWAP2
0x71a SWAP1
0x71b SUB
0x71c DUP1
0x71d ISZERO
0x71e SWAP1
0x71f SWAP3
0x720 MUL
0x721 SWAP2
0x722 SWAP1
0x723 PUSH1 0x0
0x725 DUP2
0x726 DUP2
0x727 DUP2
0x728 DUP6
0x729 DUP9
0x72a DUP9
0x72b CALL
0x72c SWAP4
0x72d POP
0x72e POP
0x72f POP
0x730 POP
0x731 ISZERO
0x732 ISZERO
0x733 PUSH2 0x77b
0x736 JUMPI
---
0x713: JUMPDEST 
0x715: V576 = S[V574]
0x716: V577 = 0x40
0x718: V578 = M[0x40]
0x71b: V579 = SUB V576 0x470de4df82000
0x71d: V580 = ISZERO V579
0x720: V581 = MUL 0x8fc V580
0x723: V582 = 0x0
0x72b: V583 = CALL V581 V563 V579 V578 0x0 V578 0x0
0x731: V584 = ISZERO V583
0x732: V585 = ISZERO V584
0x733: V586 = 0x77b
0x736: JUMPI 0x77b V585
---
Entry stack: [V12, 0x4d, V52, V534, V563, 0x8fc, 0x470de4df82000, V574, 0x0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x4d, V52, V534]

================================

Block 0x737
[0x737:0x77a]
---
Predecessors: [0x713]
Successors: []
---
0x737 PUSH1 0x40
0x739 DUP1
0x73a MLOAD
0x73b PUSH8 0xffffffffffffffff
0x744 DUP5
0x745 AND
0x746 DUP2
0x747 MSTORE
0x748 PUSH1 0x1
0x74a PUSH1 0xa0
0x74c PUSH1 0x2
0x74e EXP
0x74f SUB
0x750 CALLER
0x751 AND
0x752 PUSH1 0x20
0x754 DUP3
0x755 ADD
0x756 MSTORE
0x757 PUSH1 0x0
0x759 DUP2
0x75a DUP4
0x75b ADD
0x75c MSTORE
0x75d SWAP1
0x75e MLOAD
0x75f PUSH1 0x0
0x761 DUP1
0x762 MLOAD
0x763 PUSH1 0x20
0x765 PUSH2 0xa23
0x768 DUP4
0x769 CODECOPY
0x76a DUP2
0x76b MLOAD
0x76c SWAP2
0x76d MSTORE
0x76e SWAP2
0x76f DUP2
0x770 SWAP1
0x771 SUB
0x772 PUSH1 0x60
0x774 ADD
0x775 SWAP1
0x776 LOG1
0x777 PUSH2 0x0
0x77a JUMP
---
0x737: V587 = 0x40
0x73a: V588 = M[0x40]
0x73b: V589 = 0xffffffffffffffff
0x745: V590 = AND V52 0xffffffffffffffff
0x747: M[V588] = V590
0x748: V591 = 0x1
0x74a: V592 = 0xa0
0x74c: V593 = 0x2
0x74e: V594 = EXP 0x2 0xa0
0x74f: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x750: V596 = CALLER
0x751: V597 = AND V596 0xffffffffffffffffffffffffffffffffffffffff
0x752: V598 = 0x20
0x755: V599 = ADD V588 0x20
0x756: M[V599] = V597
0x757: V600 = 0x0
0x75b: V601 = ADD 0x40 V588
0x75c: M[V601] = 0x0
0x75e: V602 = M[0x40]
0x75f: V603 = 0x0
0x762: V604 = M[0x0]
0x763: V605 = 0x20
0x765: V606 = 0xa23
0x769: CODECOPY 0x0 0xa23 0x20
0x76b: V607 = M[0x0]
0x76d: M[0x0] = V604
0x771: V608 = SUB V588 V602
0x772: V609 = 0x60
0x774: V610 = ADD 0x60 V608
0x776: LOG V602 V610 V607
0x777: V611 = 0x0
0x77a: THROW 
---
Entry stack: [V12, 0x4d, V52, V534]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x4d, V52, V534]

================================

Block 0x77b
[0x77b:0x7bf]
---
Predecessors: [0x713]
Successors: [0x801]
---
0x77b JUMPDEST
0x77c PUSH1 0x40
0x77e DUP1
0x77f MLOAD
0x780 PUSH8 0xffffffffffffffff
0x789 DUP5
0x78a AND
0x78b DUP2
0x78c MSTORE
0x78d PUSH1 0x1
0x78f PUSH1 0xa0
0x791 PUSH1 0x2
0x793 EXP
0x794 SUB
0x795 CALLER
0x796 AND
0x797 PUSH1 0x20
0x799 DUP3
0x79a ADD
0x79b MSTORE
0x79c PUSH1 0x1
0x79e DUP2
0x79f DUP4
0x7a0 ADD
0x7a1 MSTORE
0x7a2 SWAP1
0x7a3 MLOAD
0x7a4 PUSH1 0x0
0x7a6 DUP1
0x7a7 MLOAD
0x7a8 PUSH1 0x20
0x7aa PUSH2 0xa23
0x7ad DUP4
0x7ae CODECOPY
0x7af DUP2
0x7b0 MLOAD
0x7b1 SWAP2
0x7b2 MSTORE
0x7b3 SWAP2
0x7b4 DUP2
0x7b5 SWAP1
0x7b6 SUB
0x7b7 PUSH1 0x60
0x7b9 ADD
0x7ba SWAP1
0x7bb LOG1
0x7bc PUSH2 0x801
0x7bf JUMP
---
0x77b: JUMPDEST 
0x77c: V612 = 0x40
0x77f: V613 = M[0x40]
0x780: V614 = 0xffffffffffffffff
0x78a: V615 = AND V52 0xffffffffffffffff
0x78c: M[V613] = V615
0x78d: V616 = 0x1
0x78f: V617 = 0xa0
0x791: V618 = 0x2
0x793: V619 = EXP 0x2 0xa0
0x794: V620 = SUB 0x10000000000000000000000000000000000000000 0x1
0x795: V621 = CALLER
0x796: V622 = AND V621 0xffffffffffffffffffffffffffffffffffffffff
0x797: V623 = 0x20
0x79a: V624 = ADD V613 0x20
0x79b: M[V624] = V622
0x79c: V625 = 0x1
0x7a0: V626 = ADD 0x40 V613
0x7a1: M[V626] = 0x1
0x7a3: V627 = M[0x40]
0x7a4: V628 = 0x0
0x7a7: V629 = M[0x0]
0x7a8: V630 = 0x20
0x7aa: V631 = 0xa23
0x7ae: CODECOPY 0x0 0xa23 0x20
0x7b0: V632 = M[0x0]
0x7b2: M[0x0] = V629
0x7b6: V633 = SUB V613 V627
0x7b7: V634 = 0x60
0x7b9: V635 = ADD 0x60 V633
0x7bb: LOG V627 V635 V632
0x7bc: V636 = 0x801
0x7bf: JUMP 0x801
---
Entry stack: [V12, 0x4d, V52, V534]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x4d, V52, V534]

================================

Block 0x7c0
[0x7c0:0x800]
---
Predecessors: [0x692]
Successors: [0x801]
---
0x7c0 JUMPDEST
0x7c1 PUSH1 0x40
0x7c3 DUP1
0x7c4 MLOAD
0x7c5 PUSH8 0xffffffffffffffff
0x7ce DUP5
0x7cf AND
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 PUSH1 0x1
0x7d4 PUSH1 0xa0
0x7d6 PUSH1 0x2
0x7d8 EXP
0x7d9 SUB
0x7da CALLER
0x7db AND
0x7dc PUSH1 0x20
0x7de DUP3
0x7df ADD
0x7e0 MSTORE
0x7e1 PUSH1 0x0
0x7e3 DUP2
0x7e4 DUP4
0x7e5 ADD
0x7e6 MSTORE
0x7e7 SWAP1
0x7e8 MLOAD
0x7e9 PUSH1 0x0
0x7eb DUP1
0x7ec MLOAD
0x7ed PUSH1 0x20
0x7ef PUSH2 0xa23
0x7f2 DUP4
0x7f3 CODECOPY
0x7f4 DUP2
0x7f5 MLOAD
0x7f6 SWAP2
0x7f7 MSTORE
0x7f8 SWAP2
0x7f9 DUP2
0x7fa SWAP1
0x7fb SUB
0x7fc PUSH1 0x60
0x7fe ADD
0x7ff SWAP1
0x800 LOG1
---
0x7c0: JUMPDEST 
0x7c1: V637 = 0x40
0x7c4: V638 = M[0x40]
0x7c5: V639 = 0xffffffffffffffff
0x7cf: V640 = AND V52 0xffffffffffffffff
0x7d1: M[V638] = V640
0x7d2: V641 = 0x1
0x7d4: V642 = 0xa0
0x7d6: V643 = 0x2
0x7d8: V644 = EXP 0x2 0xa0
0x7d9: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7da: V646 = CALLER
0x7db: V647 = AND V646 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V648 = 0x20
0x7df: V649 = ADD V638 0x20
0x7e0: M[V649] = V647
0x7e1: V650 = 0x0
0x7e5: V651 = ADD 0x40 V638
0x7e6: M[V651] = 0x0
0x7e8: V652 = M[0x40]
0x7e9: V653 = 0x0
0x7ec: V654 = M[0x0]
0x7ed: V655 = 0x20
0x7ef: V656 = 0xa23
0x7f3: CODECOPY 0x0 0xa23 0x20
0x7f5: V657 = M[0x0]
0x7f7: M[0x0] = V654
0x7fb: V658 = SUB V638 V652
0x7fc: V659 = 0x60
0x7fe: V660 = ADD 0x60 V658
0x800: LOG V652 V660 V657
---
Entry stack: [V12, 0x4d, V52, V534]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x4d, V52, V534]

================================

Block 0x801
[0x801:0x801]
---
Predecessors: [0x5cd, 0x77b, 0x7c0]
Successors: [0x802]
---
0x801 JUMPDEST
---
0x801: JUMPDEST 
---
Entry stack: [V12, 0x4d, V52, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, S0]

================================

Block 0x802
[0x802:0x805]
---
Predecessors: [0x801]
Successors: [0x4d]
---
0x802 JUMPDEST
0x803 POP
0x804 POP
0x805 JUMP
---
0x802: JUMPDEST 
0x805: JUMP 0x4d
---
Entry stack: [V12, 0x4d, V52, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x806
[0x806:0x814]
---
Predecessors: [0xc4]
Successors: [0xcc]
---
0x806 JUMPDEST
0x807 PUSH1 0x0
0x809 SLOAD
0x80a PUSH1 0x1
0x80c PUSH1 0xa0
0x80e PUSH1 0x2
0x810 EXP
0x811 SUB
0x812 AND
0x813 DUP2
0x814 JUMP
---
0x806: JUMPDEST 
0x807: V661 = 0x0
0x809: V662 = S[0x0]
0x80a: V663 = 0x1
0x80c: V664 = 0xa0
0x80e: V665 = 0x2
0x810: V666 = EXP 0x2 0xa0
0x811: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x812: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x814: JUMP 0xcc
---
Entry stack: [V12, 0xcc]
Stack pops: 1
Stack additions: [S0, V668]
Exit stack: [V12, 0xcc, V668]

================================

Block 0x815
[0x815:0x82c]
---
Predecessors: [0xf0]
Successors: [0x82d, 0x882]
---
0x815 JUMPDEST
0x816 PUSH1 0x0
0x818 DUP1
0x819 SLOAD
0x81a CALLER
0x81b PUSH1 0x1
0x81d PUSH1 0xa0
0x81f PUSH1 0x2
0x821 EXP
0x822 SUB
0x823 SWAP1
0x824 DUP2
0x825 AND
0x826 SWAP2
0x827 AND
0x828 EQ
0x829 PUSH2 0x882
0x82c JUMPI
---
0x815: JUMPDEST 
0x816: V669 = 0x0
0x819: V670 = S[0x0]
0x81a: V671 = CALLER
0x81b: V672 = 0x1
0x81d: V673 = 0xa0
0x81f: V674 = 0x2
0x821: V675 = EXP 0x2 0xa0
0x822: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x825: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0x827: V678 = AND V670 0xffffffffffffffffffffffffffffffffffffffff
0x828: V679 = EQ V678 V677
0x829: V680 = 0x882
0x82c: JUMPI 0x882 V679
---
Entry stack: [V12, 0x4d, V78, V81, V83]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0]

================================

Block 0x82d
[0x82d:0x881]
---
Predecessors: [0x815]
Successors: [0xa1b]
---
0x82d PUSH1 0x40
0x82f DUP1
0x830 MLOAD
0x831 PUSH1 0x0
0x833 NOT
0x834 DUP2
0x835 MSTORE
0x836 PUSH1 0x1
0x838 PUSH1 0xa0
0x83a PUSH1 0x2
0x83c EXP
0x83d SUB
0x83e CALLER
0x83f AND
0x840 PUSH1 0x20
0x842 DUP3
0x843 ADD
0x844 MSTORE
0x845 PUSH1 0x0
0x847 DUP2
0x848 DUP4
0x849 ADD
0x84a DUP2
0x84b SWAP1
0x84c MSTORE
0x84d PUSH1 0x60
0x84f DUP3
0x850 ADD
0x851 MSTORE
0x852 SWAP1
0x853 MLOAD
0x854 PUSH32 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x875 SWAP2
0x876 DUP2
0x877 SWAP1
0x878 SUB
0x879 PUSH1 0x80
0x87b ADD
0x87c SWAP1
0x87d LOG1
0x87e PUSH2 0xa1b
0x881 JUMP
---
0x82d: V681 = 0x40
0x830: V682 = M[0x40]
0x831: V683 = 0x0
0x833: V684 = NOT 0x0
0x835: M[V682] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x836: V685 = 0x1
0x838: V686 = 0xa0
0x83a: V687 = 0x2
0x83c: V688 = EXP 0x2 0xa0
0x83d: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83e: V690 = CALLER
0x83f: V691 = AND V690 0xffffffffffffffffffffffffffffffffffffffff
0x840: V692 = 0x20
0x843: V693 = ADD V682 0x20
0x844: M[V693] = V691
0x845: V694 = 0x0
0x849: V695 = ADD 0x40 V682
0x84c: M[V695] = 0x0
0x84d: V696 = 0x60
0x850: V697 = ADD V682 0x60
0x851: M[V697] = 0x0
0x853: V698 = M[0x40]
0x854: V699 = 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x878: V700 = SUB V682 V698
0x879: V701 = 0x80
0x87b: V702 = ADD 0x80 V700
0x87d: LOG V698 V702 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x87e: V703 = 0xa1b
0x881: JUMP 0xa1b
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0]

================================

Block 0x882
[0x882:0x89a]
---
Predecessors: [0x815]
Successors: [0x89b, 0x89c]
---
0x882 JUMPDEST
0x883 PUSH1 0x2
0x885 PUSH8 0xffffffffffffffff
0x88e DUP6
0x88f AND
0x890 PUSH1 0x40
0x892 PUSH1 0x2
0x894 EXP
0x895 DUP2
0x896 LT
0x897 PUSH2 0x89c
0x89a JUMPI
---
0x882: JUMPDEST 
0x883: V704 = 0x2
0x885: V705 = 0xffffffffffffffff
0x88f: V706 = AND V78 0xffffffffffffffff
0x890: V707 = 0x40
0x892: V708 = 0x2
0x894: V709 = EXP 0x2 0x40
0x896: V710 = LT V706 0x10000000000000000
0x897: V711 = 0x89c
0x89a: JUMPI 0x89c V710
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x2, V706]
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0, 0x2, V706]

================================

Block 0x89b
[0x89b:0x89b]
---
Predecessors: [0x882]
Successors: []
---
0x89b INVALID
---
0x89b: INVALID 
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0, 0x2, V706]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0, 0x2, V706]

================================

Block 0x89c
[0x89c:0x89f]
---
Predecessors: [0x882]
Successors: [0x8a0]
---
0x89c JUMPDEST
0x89d ADD
0x89e PUSH1 0x0
---
0x89c: JUMPDEST 
0x89d: V712 = ADD V706 0x2
0x89e: V713 = 0x0
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0, 0x2, V706]
Stack pops: 2
Stack additions: [V712, 0x0]
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0, V712, 0x0]

================================

Block 0x8a0
[0x8a0:0x8d0]
---
Predecessors: [0x89c]
Successors: [0x8d1, 0x8d2]
---
0x8a0 JUMPDEST
0x8a1 SWAP1
0x8a2 SLOAD
0x8a3 SWAP1
0x8a4 PUSH2 0x100
0x8a7 EXP
0x8a8 SWAP1
0x8a9 DIV
0x8aa PUSH1 0x1
0x8ac PUSH1 0xa0
0x8ae PUSH1 0x2
0x8b0 EXP
0x8b1 SUB
0x8b2 AND
0x8b3 SWAP1
0x8b4 POP
0x8b5 PUSH1 0x0
0x8b7 PUSH1 0x2
0x8b9 DUP6
0x8ba PUSH8 0xffffffffffffffff
0x8c3 AND
0x8c4 PUSH1 0x40
0x8c6 PUSH1 0x2
0x8c8 EXP
0x8c9 DUP2
0x8ca LT
0x8cb ISZERO
0x8cc ISZERO
0x8cd PUSH2 0x8d2
0x8d0 JUMPI
---
0x8a0: JUMPDEST 
0x8a2: V714 = S[V712]
0x8a4: V715 = 0x100
0x8a7: V716 = EXP 0x100 0x0
0x8a9: V717 = DIV V714 0x1
0x8aa: V718 = 0x1
0x8ac: V719 = 0xa0
0x8ae: V720 = 0x2
0x8b0: V721 = EXP 0x2 0xa0
0x8b1: V722 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b2: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0x8b5: V724 = 0x0
0x8b7: V725 = 0x2
0x8ba: V726 = 0xffffffffffffffff
0x8c3: V727 = AND 0xffffffffffffffff V78
0x8c4: V728 = 0x40
0x8c6: V729 = 0x2
0x8c8: V730 = EXP 0x2 0x40
0x8ca: V731 = LT V727 0x10000000000000000
0x8cb: V732 = ISZERO V731
0x8cc: V733 = ISZERO V732
0x8cd: V734 = 0x8d2
0x8d0: JUMPI 0x8d2 V733
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0, V712, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V723, 0x0, 0x2, V727]
Exit stack: [V12, 0x4d, V78, V81, V83, V723, 0x0, 0x2, V727]

================================

Block 0x8d1
[0x8d1:0x8d1]
---
Predecessors: [0x8a0]
Successors: []
---
0x8d1 INVALID
---
0x8d1: INVALID 
---
Entry stack: [V12, 0x4d, V78, V81, V83, V723, 0x0, 0x2, V727]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, V723, 0x0, 0x2, V727]

================================

Block 0x8d2
[0x8d2:0x8d5]
---
Predecessors: [0x8a0]
Successors: [0x8d6]
---
0x8d2 JUMPDEST
0x8d3 ADD
0x8d4 PUSH1 0x0
---
0x8d2: JUMPDEST 
0x8d3: V735 = ADD V727 0x2
0x8d4: V736 = 0x0
---
Entry stack: [V12, 0x4d, V78, V81, V83, V723, 0x0, 0x2, V727]
Stack pops: 2
Stack additions: [V735, 0x0]
Exit stack: [V12, 0x4d, V78, V81, V83, V723, 0x0, V735, 0x0]

================================

Block 0x8d6
[0x8d6:0x90b]
---
Predecessors: [0x8d2]
Successors: [0x90c, 0x96e]
---
0x8d6 JUMPDEST
0x8d7 PUSH2 0x100
0x8da EXP
0x8db DUP2
0x8dc SLOAD
0x8dd DUP2
0x8de PUSH1 0x1
0x8e0 PUSH1 0xa0
0x8e2 PUSH1 0x2
0x8e4 EXP
0x8e5 SUB
0x8e6 MUL
0x8e7 NOT
0x8e8 AND
0x8e9 SWAP1
0x8ea DUP4
0x8eb PUSH1 0x1
0x8ed PUSH1 0xa0
0x8ef PUSH1 0x2
0x8f1 EXP
0x8f2 SUB
0x8f3 AND
0x8f4 MUL
0x8f5 OR
0x8f6 SWAP1
0x8f7 SSTORE
0x8f8 POP
0x8f9 PUSH1 0x2
0x8fb DUP4
0x8fc PUSH8 0xffffffffffffffff
0x905 AND
0x906 LT
0x907 ISZERO
0x908 PUSH2 0x96e
0x90b JUMPI
---
0x8d6: JUMPDEST 
0x8d7: V737 = 0x100
0x8da: V738 = EXP 0x100 0x0
0x8dc: V739 = S[V735]
0x8de: V740 = 0x1
0x8e0: V741 = 0xa0
0x8e2: V742 = 0x2
0x8e4: V743 = EXP 0x2 0xa0
0x8e5: V744 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e6: V745 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8e7: V746 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8e8: V747 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V739
0x8eb: V748 = 0x1
0x8ed: V749 = 0xa0
0x8ef: V750 = 0x2
0x8f1: V751 = EXP 0x2 0xa0
0x8f2: V752 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f3: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x8f4: V754 = MUL 0x0 0x1
0x8f5: V755 = OR 0x0 V747
0x8f7: S[V735] = V755
0x8f9: V756 = 0x2
0x8fc: V757 = 0xffffffffffffffff
0x905: V758 = AND 0xffffffffffffffff V81
0x906: V759 = LT V758 0x2
0x907: V760 = ISZERO V759
0x908: V761 = 0x96e
0x90b: JUMPI 0x96e V760
---
Entry stack: [V12, 0x4d, V78, V81, V83, V723, 0x0, V735, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0x4d, V78, V81, V83, V723]

================================

Block 0x90c
[0x90c:0x96d]
---
Predecessors: [0x8d6]
Successors: [0xa1b]
---
0x90c PUSH1 0x40
0x90e DUP1
0x90f MLOAD
0x910 PUSH1 0x7
0x912 DUP7
0x913 DUP2
0x914 SIGNEXTEND
0x915 SWAP1
0x916 SIGNEXTEND
0x917 DUP2
0x918 MSTORE
0x919 PUSH1 0x1
0x91b PUSH1 0xa0
0x91d PUSH1 0x2
0x91f EXP
0x920 SUB
0x921 DUP4
0x922 AND
0x923 PUSH1 0x20
0x925 DUP3
0x926 ADD
0x927 MSTORE
0x928 PUSH8 0xffffffffffffffff
0x931 DUP6
0x932 AND
0x933 DUP2
0x934 DUP4
0x935 ADD
0x936 MSTORE
0x937 PUSH1 0x60
0x939 DUP2
0x93a ADD
0x93b DUP5
0x93c SWAP1
0x93d MSTORE
0x93e SWAP1
0x93f MLOAD
0x940 PUSH32 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x961 SWAP2
0x962 DUP2
0x963 SWAP1
0x964 SUB
0x965 PUSH1 0x80
0x967 ADD
0x968 SWAP1
0x969 LOG1
0x96a PUSH2 0xa1b
0x96d JUMP
---
0x90c: V762 = 0x40
0x90f: V763 = M[0x40]
0x910: V764 = 0x7
0x914: V765 = SIGNEXTEND 0x7 V78
0x916: V766 = SIGNEXTEND 0x7 V765
0x918: M[V763] = V766
0x919: V767 = 0x1
0x91b: V768 = 0xa0
0x91d: V769 = 0x2
0x91f: V770 = EXP 0x2 0xa0
0x920: V771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x922: V772 = AND V723 0xffffffffffffffffffffffffffffffffffffffff
0x923: V773 = 0x20
0x926: V774 = ADD V763 0x20
0x927: M[V774] = V772
0x928: V775 = 0xffffffffffffffff
0x932: V776 = AND V81 0xffffffffffffffff
0x935: V777 = ADD 0x40 V763
0x936: M[V777] = V776
0x937: V778 = 0x60
0x93a: V779 = ADD V763 0x60
0x93d: M[V779] = V83
0x93f: V780 = M[0x40]
0x940: V781 = 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x964: V782 = SUB V763 V780
0x965: V783 = 0x80
0x967: V784 = ADD 0x80 V782
0x969: LOG V780 V784 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x96a: V785 = 0xa1b
0x96d: JUMP 0xa1b
---
Entry stack: [V12, 0x4d, V78, V81, V83, V723]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x4d, V78, V81, V83, V723]

================================

Block 0x96e
[0x96e:0x99b]
---
Predecessors: [0x8d6]
Successors: [0x99c, 0x99d]
---
0x96e JUMPDEST
0x96f PUSH1 0x1
0x971 PUSH1 0xa0
0x973 PUSH1 0x2
0x975 EXP
0x976 SUB
0x977 DUP2
0x978 AND
0x979 PUSH2 0x8fc
0x97c PUSH9 0x10000000000000002
0x986 PUSH8 0xffffffffffffffff
0x98f DUP8
0x990 AND
0x991 PUSH1 0x40
0x993 PUSH1 0x2
0x995 EXP
0x996 DUP2
0x997 LT
0x998 PUSH2 0x99d
0x99b JUMPI
---
0x96e: JUMPDEST 
0x96f: V786 = 0x1
0x971: V787 = 0xa0
0x973: V788 = 0x2
0x975: V789 = EXP 0x2 0xa0
0x976: V790 = SUB 0x10000000000000000000000000000000000000000 0x1
0x978: V791 = AND V723 0xffffffffffffffffffffffffffffffffffffffff
0x979: V792 = 0x8fc
0x97c: V793 = 0x10000000000000002
0x986: V794 = 0xffffffffffffffff
0x990: V795 = AND V78 0xffffffffffffffff
0x991: V796 = 0x40
0x993: V797 = 0x2
0x995: V798 = EXP 0x2 0x40
0x997: V799 = LT V795 0x10000000000000000
0x998: V800 = 0x99d
0x99b: JUMPI 0x99d V799
---
Entry stack: [V12, 0x4d, V78, V81, V83, V723]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V791, 0x8fc, 0x10000000000000002, V795]
Exit stack: [V12, 0x4d, V78, V81, V83, V723, V791, 0x8fc, 0x10000000000000002, V795]

================================

Block 0x99c
[0x99c:0x99c]
---
Predecessors: [0x96e]
Successors: []
---
0x99c INVALID
---
0x99c: INVALID 
---
Entry stack: [V12, 0x4d, V78, V81, V83, V723, V791, 0x8fc, 0x10000000000000002, V795]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, V723, V791, 0x8fc, 0x10000000000000002, V795]

================================

Block 0x99d
[0x99d:0x9a0]
---
Predecessors: [0x96e]
Successors: [0x9a1]
---
0x99d JUMPDEST
0x99e ADD
0x99f PUSH1 0x0
---
0x99d: JUMPDEST 
0x99e: V801 = ADD V795 0x10000000000000002
0x99f: V802 = 0x0
---
Entry stack: [V12, 0x4d, V78, V81, V83, V723, V791, 0x8fc, 0x10000000000000002, V795]
Stack pops: 2
Stack additions: [V801, 0x0]
Exit stack: [V12, 0x4d, V78, V81, V83, V723, V791, 0x8fc, V801, 0x0]

================================

Block 0x9a1
[0x9a1:0xa1a]
---
Predecessors: [0x99d]
Successors: [0xa1b]
---
0x9a1 JUMPDEST
0x9a2 POP
0x9a3 SLOAD
0x9a4 PUSH1 0x40
0x9a6 MLOAD
0x9a7 DUP2
0x9a8 ISZERO
0x9a9 SWAP1
0x9aa SWAP3
0x9ab MUL
0x9ac SWAP2
0x9ad PUSH1 0x0
0x9af DUP2
0x9b0 DUP2
0x9b1 DUP2
0x9b2 DUP6
0x9b3 DUP9
0x9b4 DUP9
0x9b5 CALL
0x9b6 POP
0x9b7 POP
0x9b8 PUSH1 0x40
0x9ba DUP1
0x9bb MLOAD
0x9bc PUSH1 0x7
0x9be DUP10
0x9bf DUP2
0x9c0 SIGNEXTEND
0x9c1 SWAP1
0x9c2 SIGNEXTEND
0x9c3 DUP2
0x9c4 MSTORE
0x9c5 PUSH1 0x1
0x9c7 PUSH1 0xa0
0x9c9 PUSH1 0x2
0x9cb EXP
0x9cc SUB
0x9cd CALLER
0x9ce AND
0x9cf PUSH1 0x20
0x9d1 DUP3
0x9d2 ADD
0x9d3 MSTORE
0x9d4 PUSH8 0xffffffffffffffff
0x9dd DUP9
0x9de AND
0x9df DUP2
0x9e0 DUP4
0x9e1 ADD
0x9e2 MSTORE
0x9e3 PUSH1 0x0
0x9e5 PUSH1 0x60
0x9e7 DUP3
0x9e8 ADD
0x9e9 MSTORE
0x9ea SWAP1
0x9eb MLOAD
0x9ec PUSH32 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0xa0d SWAP5
0xa0e POP
0xa0f SWAP1
0xa10 DUP2
0xa11 SWAP1
0xa12 SUB
0xa13 PUSH1 0x80
0xa15 ADD
0xa16 SWAP3
0xa17 POP
0xa18 SWAP1
0xa19 POP
0xa1a LOG1
---
0x9a1: JUMPDEST 
0x9a3: V803 = S[V801]
0x9a4: V804 = 0x40
0x9a6: V805 = M[0x40]
0x9a8: V806 = ISZERO V803
0x9ab: V807 = MUL 0x8fc V806
0x9ad: V808 = 0x0
0x9b5: V809 = CALL V807 V791 V803 V805 0x0 V805 0x0
0x9b8: V810 = 0x40
0x9bb: V811 = M[0x40]
0x9bc: V812 = 0x7
0x9c0: V813 = SIGNEXTEND 0x7 V78
0x9c2: V814 = SIGNEXTEND 0x7 V813
0x9c4: M[V811] = V814
0x9c5: V815 = 0x1
0x9c7: V816 = 0xa0
0x9c9: V817 = 0x2
0x9cb: V818 = EXP 0x2 0xa0
0x9cc: V819 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cd: V820 = CALLER
0x9ce: V821 = AND V820 0xffffffffffffffffffffffffffffffffffffffff
0x9cf: V822 = 0x20
0x9d2: V823 = ADD V811 0x20
0x9d3: M[V823] = V821
0x9d4: V824 = 0xffffffffffffffff
0x9de: V825 = AND V81 0xffffffffffffffff
0x9e1: V826 = ADD 0x40 V811
0x9e2: M[V826] = V825
0x9e3: V827 = 0x0
0x9e5: V828 = 0x60
0x9e8: V829 = ADD V811 0x60
0x9e9: M[V829] = 0x0
0x9eb: V830 = M[0x40]
0x9ec: V831 = 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0xa12: V832 = SUB V811 V830
0xa13: V833 = 0x80
0xa15: V834 = ADD 0x80 V832
0xa1a: LOG V830 V834 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
---
Entry stack: [V12, 0x4d, V78, V81, V83, V723, V791, 0x8fc, V801, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4]
Exit stack: [V12, 0x4d, V78, V81, V83, V723]

================================

Block 0xa1b
[0xa1b:0xa1b]
---
Predecessors: [0x82d, 0x90c, 0x9a1]
Successors: [0xa1c]
---
0xa1b JUMPDEST
---
0xa1b: JUMPDEST 
---
Entry stack: [V12, 0x4d, V78, V81, V83, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, S0]

================================

Block 0xa1c
[0xa1c:0xa21]
---
Predecessors: [0xa1b]
Successors: [0x4d]
---
0xa1c JUMPDEST
0xa1d POP
0xa1e POP
0xa1f POP
0xa20 POP
0xa21 JUMP
---
0xa1c: JUMPDEST 
0xa21: JUMP 0x4d
---
Entry stack: [V12, 0x4d, V78, V81, V83, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0xa22
[0xa22:0xa6d]
---
Predecessors: []
Successors: []
---
0xa22 STOP
0xa23 LOG2
0xa24 MISSING 0xf9
0xa25 MISSING 0xde
0xa26 DUP12
0xa27 MSTORE
0xa28 PUSH11 0x211b92eeaf678ae4a0eaf2
0xa34 SHA3
0xa35 MISSING 0xdb
0xa36 BYTE
0xa37 DIV
0xa38 MISSING 0xe9
0xa39 MISSING 0x29
0xa3a MISSING 0xad
0xa3b SWAP5
0xa3c MISSING 0xb3
0xa3d SHR
0xa3e RETURN
0xa3f MISSING 0xdb
0xa40 SWAP12
0xa41 MISSING 0x5d
0xa42 MISSING 0xd6
0xa43 LOG1
0xa44 PUSH6 0x627a7a723058
0xa4b SHA3
0xa4c SGT
0xa4d MISSING 0xd4
0xa4e DELEGATECALL
0xa4f PUSH13 0x48e5bf6ea874611c3959ba6b7d
0xa5d PUSH1 0x58
0xa5f MISSING 0xdd
0xa60 PUSH3 0x76aef9
0xa64 MISSING 0xd0
0xa65 MOD
0xa66 MISSING 0xb3
0xa67 MISSING 0x4b
0xa68 MISSING 0x46
0xa69 MISSING 0xc0
0xa6a MISSING 0xb4
0xa6b MISSING 0xe2
0xa6c STOP
0xa6d MISSING 0x29
---
0xa22: STOP 
0xa23: LOG S0 S1 S2 S3
0xa24: MISSING 0xf9
0xa25: MISSING 0xde
0xa27: M[S11] = S0
0xa28: V835 = 0x211b92eeaf678ae4a0eaf2
0xa34: V836 = SHA3 0x211b92eeaf678ae4a0eaf2 S1
0xa35: MISSING 0xdb
0xa36: V837 = BYTE S0 S1
0xa37: V838 = DIV V837 S2
0xa38: MISSING 0xe9
0xa39: MISSING 0x29
0xa3a: MISSING 0xad
0xa3c: MISSING 0xb3
0xa3d: V839 = SHR S0 S1
0xa3e: RETURN V839 S2
0xa3f: MISSING 0xdb
0xa41: MISSING 0x5d
0xa42: MISSING 0xd6
0xa43: LOG S0 S1 S2
0xa44: V840 = 0x627a7a723058
0xa4b: V841 = SHA3 0x627a7a723058 S3
0xa4c: V842 = SGT V841 S4
0xa4d: MISSING 0xd4
0xa4e: V843 = DELEGATECALL S0 S1 S2 S3 S4 S5
0xa4f: V844 = 0x48e5bf6ea874611c3959ba6b7d
0xa5d: V845 = 0x58
0xa5f: MISSING 0xdd
0xa60: V846 = 0x76aef9
0xa64: MISSING 0xd0
0xa65: V847 = MOD S0 S1
0xa66: MISSING 0xb3
0xa67: MISSING 0x4b
0xa68: MISSING 0x46
0xa69: MISSING 0xc0
0xa6a: MISSING 0xb4
0xa6b: MISSING 0xe2
0xa6c: STOP 
0xa6d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V836, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V838, S5, S1, S2, S3, S4, S0, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V842, 0x58, 0x48e5bf6ea874611c3959ba6b7d, V843, 0x76aef9, V847]
Exit stack: []

================================

Function 0:
Public function signature: 0x26d2d1b3
Entry block: 0x4f
Exit block: 0x4aa
Body: 0x4d, 0x4f, 0x110, 0x122, 0x14c, 0x150, 0x1cd, 0x1db, 0x1ed, 0x207, 0x2f3, 0x301, 0x313, 0x335, 0x336, 0x343, 0x344, 0x360, 0x38a, 0x38e, 0x40b, 0x419, 0x445, 0x45f, 0x460, 0x464, 0x4aa, 0x4ab, 0x4af, 0x532, 0x540, 0x552, 0x568

Function 1:
Public function signature: 0x4c125e79
Entry block: 0x9d
Exit block: 0x737
Body: 0x4d, 0x9d, 0xa4, 0xa5, 0x56d, 0x581, 0x5a4, 0x5a5, 0x5a9, 0x5c7, 0x5cd, 0x611, 0x684, 0x685, 0x691, 0x692, 0x6a2, 0x6bc, 0x6bd, 0x6c1, 0x70e, 0x70f, 0x713, 0x737, 0x77b, 0x7c0, 0x801, 0x802

Function 2:
Public function signature: 0xedad1978
Entry block: 0xbc
Exit block: 0xcc
Body: 0xbc, 0xc3, 0xc4, 0xcc, 0x806

Function 3:
Public function signature: 0xfee36947
Entry block: 0xe8
Exit block: 0x99c
Body: 0x4d, 0xe8, 0xef, 0xf0, 0x815, 0x82d, 0x882, 0x89b, 0x89c, 0x8a0, 0x8d1, 0x8d2, 0x8d6, 0x90c, 0x96e, 0x99c, 0x99d, 0x9a1, 0xa1b, 0xa1c

Function 4:
Public fallback function
Entry block: 0x46
Exit block: 0x4d
Body: 0x46, 0x4a, 0x4b, 0x4d

