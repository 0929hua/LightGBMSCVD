Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2e1a7d4d
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x58
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2e1a7d4d
0x3b: V13 = EQ V11 0x2e1a7d4d
0x3c: V14 = 0x58
0x3f: JUMPI 0x58 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6e]
---
0x40 DUP1
0x41 PUSH4 0x853828b6
0x46 EQ
0x47 PUSH2 0x6e
0x4a JUMPI
---
0x41: V15 = 0x853828b6
0x46: V16 = EQ 0x853828b6 V11
0x47: V17 = 0x6e
0x4a: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x81]
---
0x4b DUP1
0x4c PUSH4 0xa04a0908
0x51 EQ
0x52 PUSH2 0x81
0x55 JUMPI
---
0x4c: V18 = 0xa04a0908
0x51: V19 = EQ 0xa04a0908 V11
0x52: V20 = 0x81
0x55: JUMPI 0x81 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0x13d, 0x194, 0x25d]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5e]
---
Predecessors: [0xd]
Successors: [0x5f, 0x63]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a ISZERO
0x5b PUSH2 0x63
0x5e JUMPI
---
0x58: JUMPDEST 
0x59: V21 = CALLVALUE
0x5a: V22 = ISZERO V21
0x5b: V23 = 0x63
0x5e: JUMPI 0x63 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x58]
Successors: []
---
0x5f PUSH1 0x0
0x61 DUP1
0x62 REVERT
---
0x5f: V24 = 0x0
0x62: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6d]
---
Predecessors: [0x58]
Successors: [0xd7]
---
0x63 JUMPDEST
0x64 PUSH2 0x56
0x67 PUSH1 0x4
0x69 CALLDATALOAD
0x6a PUSH2 0xd7
0x6d JUMP
---
0x63: JUMPDEST 
0x64: V25 = 0x56
0x67: V26 = 0x4
0x69: V27 = CALLDATALOAD 0x4
0x6a: V28 = 0xd7
0x6d: JUMP 0xd7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56, V27]
Exit stack: [V11, 0x56, V27]

================================

Block 0x6e
[0x6e:0x74]
---
Predecessors: [0x40]
Successors: [0x75, 0x79]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 ISZERO
0x71 PUSH2 0x79
0x74 JUMPI
---
0x6e: JUMPDEST 
0x6f: V29 = CALLVALUE
0x70: V30 = ISZERO V29
0x71: V31 = 0x79
0x74: JUMPI 0x79 V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x6e]
Successors: []
---
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x75: V32 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0x6e]
Successors: [0x140]
---
0x79 JUMPDEST
0x7a PUSH2 0x56
0x7d PUSH2 0x140
0x80 JUMP
---
0x79: JUMPDEST 
0x7a: V33 = 0x56
0x7d: V34 = 0x140
0x80: JUMP 0x140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x81
[0x81:0xd6]
---
Predecessors: [0x4b]
Successors: [0x196]
---
0x81 JUMPDEST
0x82 PUSH2 0x56
0x85 PUSH1 0x4
0x87 DUP1
0x88 CALLDATALOAD
0x89 PUSH1 0x1
0x8b PUSH1 0xa0
0x8d PUSH1 0x2
0x8f EXP
0x90 SUB
0x91 AND
0x92 SWAP1
0x93 PUSH1 0x44
0x95 PUSH1 0x24
0x97 DUP1
0x98 CALLDATALOAD
0x99 SWAP1
0x9a DUP2
0x9b ADD
0x9c SWAP1
0x9d DUP4
0x9e ADD
0x9f CALLDATALOAD
0xa0 DUP1
0xa1 PUSH1 0x20
0xa3 PUSH1 0x1f
0xa5 DUP3
0xa6 ADD
0xa7 DUP2
0xa8 SWAP1
0xa9 DIV
0xaa DUP2
0xab MUL
0xac ADD
0xad PUSH1 0x40
0xaf MLOAD
0xb0 SWAP1
0xb1 DUP2
0xb2 ADD
0xb3 PUSH1 0x40
0xb5 MSTORE
0xb6 DUP2
0xb7 DUP2
0xb8 MSTORE
0xb9 SWAP3
0xba SWAP2
0xbb SWAP1
0xbc PUSH1 0x20
0xbe DUP5
0xbf ADD
0xc0 DUP4
0xc1 DUP4
0xc2 DUP1
0xc3 DUP3
0xc4 DUP5
0xc5 CALLDATACOPY
0xc6 POP
0xc7 SWAP5
0xc8 SWAP7
0xc9 POP
0xca POP
0xcb SWAP4
0xcc CALLDATALOAD
0xcd SWAP4
0xce POP
0xcf PUSH2 0x196
0xd2 SWAP3
0xd3 POP
0xd4 POP
0xd5 POP
0xd6 JUMP
---
0x81: JUMPDEST 
0x82: V35 = 0x56
0x85: V36 = 0x4
0x88: V37 = CALLDATALOAD 0x4
0x89: V38 = 0x1
0x8b: V39 = 0xa0
0x8d: V40 = 0x2
0x8f: V41 = EXP 0x2 0xa0
0x90: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x93: V44 = 0x44
0x95: V45 = 0x24
0x98: V46 = CALLDATALOAD 0x24
0x9b: V47 = ADD V46 0x24
0x9e: V48 = ADD 0x4 V46
0x9f: V49 = CALLDATALOAD V48
0xa1: V50 = 0x20
0xa3: V51 = 0x1f
0xa6: V52 = ADD V49 0x1f
0xa9: V53 = DIV V52 0x20
0xab: V54 = MUL 0x20 V53
0xac: V55 = ADD V54 0x20
0xad: V56 = 0x40
0xaf: V57 = M[0x40]
0xb2: V58 = ADD V57 V55
0xb3: V59 = 0x40
0xb5: M[0x40] = V58
0xb8: M[V57] = V49
0xbc: V60 = 0x20
0xbf: V61 = ADD V57 0x20
0xc5: CALLDATACOPY V61 V47 V49
0xcc: V62 = CALLDATALOAD 0x44
0xcf: V63 = 0x196
0xd6: JUMP 0x196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56, V43, V57, V62]
Exit stack: [V11, 0x56, V43, V57, V62]

================================

Block 0xd7
[0xd7:0xef]
---
Predecessors: [0x63]
Successors: [0xf0, 0xff]
---
0xd7 JUMPDEST
0xd8 PUSH1 0x0
0xda SLOAD
0xdb CALLER
0xdc PUSH1 0x1
0xde PUSH1 0xa0
0xe0 PUSH1 0x2
0xe2 EXP
0xe3 SUB
0xe4 SWAP1
0xe5 DUP2
0xe6 AND
0xe7 SWAP2
0xe8 AND
0xe9 EQ
0xea DUP1
0xeb ISZERO
0xec PUSH2 0xff
0xef JUMPI
---
0xd7: JUMPDEST 
0xd8: V64 = 0x0
0xda: V65 = S[0x0]
0xdb: V66 = CALLER
0xdc: V67 = 0x1
0xde: V68 = 0xa0
0xe0: V69 = 0x2
0xe2: V70 = EXP 0x2 0xa0
0xe3: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe6: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xe8: V73 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V74 = EQ V73 V72
0xeb: V75 = ISZERO V74
0xec: V76 = 0xff
0xef: JUMPI 0xff V75
---
Entry stack: [V11, 0x56, V27]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V11, 0x56, V27, V74]

================================

Block 0xf0
[0xf0:0xfe]
---
Predecessors: [0xd7]
Successors: [0xff]
---
0xf0 POP
0xf1 ADDRESS
0xf2 PUSH1 0x1
0xf4 PUSH1 0xa0
0xf6 PUSH1 0x2
0xf8 EXP
0xf9 SUB
0xfa AND
0xfb BALANCE
0xfc DUP2
0xfd GT
0xfe ISZERO
---
0xf1: V77 = ADDRESS
0xf2: V78 = 0x1
0xf4: V79 = 0xa0
0xf6: V80 = 0x2
0xf8: V81 = EXP 0x2 0xa0
0xf9: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xfb: V84 = BALANCE V83
0xfd: V85 = GT V27 V84
0xfe: V86 = ISZERO V85
---
Entry stack: [V11, 0x56, V27, V74]
Stack pops: 2
Stack additions: [S1, V86]
Exit stack: [V11, 0x56, V27, V86]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0xd7, 0xf0]
Successors: [0x106, 0x10a]
---
0xff JUMPDEST
0x100 ISZERO
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V87 = ISZERO S0
0x101: V88 = ISZERO V87
0x102: V89 = 0x10a
0x105: JUMPI 0x10a V88
---
Entry stack: [V11, 0x56, V27, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56, V27]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xff]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V90 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V27]

================================

Block 0x10a
[0x10a:0x138]
---
Predecessors: [0xff]
Successors: [0x139, 0x13d]
---
0x10a JUMPDEST
0x10b PUSH1 0x0
0x10d SLOAD
0x10e PUSH1 0x1
0x110 PUSH1 0xa0
0x112 PUSH1 0x2
0x114 EXP
0x115 SUB
0x116 AND
0x117 DUP2
0x118 ISZERO
0x119 PUSH2 0x8fc
0x11c MUL
0x11d DUP3
0x11e PUSH1 0x40
0x120 MLOAD
0x121 PUSH1 0x0
0x123 PUSH1 0x40
0x125 MLOAD
0x126 DUP1
0x127 DUP4
0x128 SUB
0x129 DUP2
0x12a DUP6
0x12b DUP9
0x12c DUP9
0x12d CALL
0x12e SWAP4
0x12f POP
0x130 POP
0x131 POP
0x132 POP
0x133 ISZERO
0x134 ISZERO
0x135 PUSH2 0x13d
0x138 JUMPI
---
0x10a: JUMPDEST 
0x10b: V91 = 0x0
0x10d: V92 = S[0x0]
0x10e: V93 = 0x1
0x110: V94 = 0xa0
0x112: V95 = 0x2
0x114: V96 = EXP 0x2 0xa0
0x115: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x116: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x118: V99 = ISZERO V27
0x119: V100 = 0x8fc
0x11c: V101 = MUL 0x8fc V99
0x11e: V102 = 0x40
0x120: V103 = M[0x40]
0x121: V104 = 0x0
0x123: V105 = 0x40
0x125: V106 = M[0x40]
0x128: V107 = SUB V103 V106
0x12d: V108 = CALL V101 V98 V27 V106 V107 V106 0x0
0x133: V109 = ISZERO V108
0x134: V110 = ISZERO V109
0x135: V111 = 0x13d
0x138: JUMPI 0x13d V110
---
Entry stack: [V11, 0x56, V27]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x56, V27]

================================

Block 0x139
[0x139:0x13c]
---
Predecessors: [0x10a]
Successors: []
---
0x139 PUSH1 0x0
0x13b DUP1
0x13c REVERT
---
0x139: V112 = 0x0
0x13c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V27]

================================

Block 0x13d
[0x13d:0x13f]
---
Predecessors: [0x10a]
Successors: [0x56]
---
0x13d JUMPDEST
0x13e POP
0x13f JUMP
---
0x13d: JUMPDEST 
0x13f: JUMP 0x56
---
Entry stack: [V11, 0x56, V27]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x140
[0x140:0x156]
---
Predecessors: [0x79]
Successors: [0x157, 0x15b]
---
0x140 JUMPDEST
0x141 PUSH1 0x0
0x143 SLOAD
0x144 CALLER
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d SWAP1
0x14e DUP2
0x14f AND
0x150 SWAP2
0x151 AND
0x152 EQ
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x140: JUMPDEST 
0x141: V113 = 0x0
0x143: V114 = S[0x0]
0x144: V115 = CALLER
0x145: V116 = 0x1
0x147: V117 = 0xa0
0x149: V118 = 0x2
0x14b: V119 = EXP 0x2 0xa0
0x14c: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14f: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x151: V122 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x152: V123 = EQ V122 V121
0x153: V124 = 0x15b
0x156: JUMPI 0x15b V123
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x140]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V125 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x15b
[0x15b:0x18f]
---
Predecessors: [0x140]
Successors: [0x190, 0x194]
---
0x15b JUMPDEST
0x15c PUSH1 0x0
0x15e SLOAD
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 SWAP1
0x168 DUP2
0x169 AND
0x16a SWAP1
0x16b ADDRESS
0x16c AND
0x16d BALANCE
0x16e DUP1
0x16f ISZERO
0x170 PUSH2 0x8fc
0x173 MUL
0x174 SWAP1
0x175 PUSH1 0x40
0x177 MLOAD
0x178 PUSH1 0x0
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e DUP4
0x17f SUB
0x180 DUP2
0x181 DUP6
0x182 DUP9
0x183 DUP9
0x184 CALL
0x185 SWAP4
0x186 POP
0x187 POP
0x188 POP
0x189 POP
0x18a ISZERO
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x15b: JUMPDEST 
0x15c: V126 = 0x0
0x15e: V127 = S[0x0]
0x15f: V128 = 0x1
0x161: V129 = 0xa0
0x163: V130 = 0x2
0x165: V131 = EXP 0x2 0xa0
0x166: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x16b: V134 = ADDRESS
0x16c: V135 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V136 = BALANCE V135
0x16f: V137 = ISZERO V136
0x170: V138 = 0x8fc
0x173: V139 = MUL 0x8fc V137
0x175: V140 = 0x40
0x177: V141 = M[0x40]
0x178: V142 = 0x0
0x17a: V143 = 0x40
0x17c: V144 = M[0x40]
0x17f: V145 = SUB V141 V144
0x184: V146 = CALL V139 V133 V136 V144 V145 V144 0x0
0x18a: V147 = ISZERO V146
0x18b: V148 = ISZERO V147
0x18c: V149 = 0x194
0x18f: JUMPI 0x194 V148
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x15b]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V150 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x194
[0x194:0x195]
---
Predecessors: [0x15b]
Successors: [0x56]
---
0x194 JUMPDEST
0x195 JUMP
---
0x194: JUMPDEST 
0x195: JUMP 0x56
---
Entry stack: [V11, 0x56]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x196
[0x196:0x1ad]
---
Predecessors: [0x81]
Successors: [0x1ae, 0x1b2]
---
0x196 JUMPDEST
0x197 PUSH1 0x0
0x199 DUP1
0x19a SLOAD
0x19b CALLER
0x19c PUSH1 0x1
0x19e PUSH1 0xa0
0x1a0 PUSH1 0x2
0x1a2 EXP
0x1a3 SUB
0x1a4 SWAP1
0x1a5 DUP2
0x1a6 AND
0x1a7 SWAP2
0x1a8 AND
0x1a9 EQ
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x196: JUMPDEST 
0x197: V151 = 0x0
0x19a: V152 = S[0x0]
0x19b: V153 = CALLER
0x19c: V154 = 0x1
0x19e: V155 = 0xa0
0x1a0: V156 = 0x2
0x1a2: V157 = EXP 0x2 0xa0
0x1a3: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a6: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1a8: V160 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V161 = EQ V160 V159
0x1aa: V162 = 0x1b2
0x1ad: JUMPI 0x1b2 V161
---
Entry stack: [V11, 0x56, V43, V57, V62]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x56, V43, V57, V62, 0x0]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x196]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V163 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V43, V57, V62, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V43, V57, V62, 0x0]

================================

Block 0x1b2
[0x1b2:0x1dc]
---
Predecessors: [0x196]
Successors: [0x1dd]
---
0x1b2 JUMPDEST
0x1b3 ADDRESS
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc AND
0x1bd BALANCE
0x1be SWAP1
0x1bf POP
0x1c0 DUP4
0x1c1 PUSH1 0x1
0x1c3 PUSH1 0xa0
0x1c5 PUSH1 0x2
0x1c7 EXP
0x1c8 SUB
0x1c9 AND
0x1ca DUP3
0x1cb DUP5
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf DUP1
0x1d0 DUP3
0x1d1 DUP1
0x1d2 MLOAD
0x1d3 SWAP1
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP1
0x1d8 DUP1
0x1d9 DUP4
0x1da DUP4
0x1db PUSH1 0x0
---
0x1b2: JUMPDEST 
0x1b3: V164 = ADDRESS
0x1b4: V165 = 0x1
0x1b6: V166 = 0xa0
0x1b8: V167 = 0x2
0x1ba: V168 = EXP 0x2 0xa0
0x1bb: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bc: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1bd: V171 = BALANCE V170
0x1c1: V172 = 0x1
0x1c3: V173 = 0xa0
0x1c5: V174 = 0x2
0x1c7: V175 = EXP 0x2 0xa0
0x1c8: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c9: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x1cc: V178 = 0x40
0x1ce: V179 = M[0x40]
0x1d2: V180 = M[V57]
0x1d4: V181 = 0x20
0x1d6: V182 = ADD 0x20 V57
0x1db: V183 = 0x0
---
Entry stack: [V11, 0x56, V43, V57, V62, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V171, V177, S1, S2, V179, V179, V182, V180, V180, V179, V182, 0x0]
Exit stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V179, V182, V180, V180, V179, V182, 0x0]

================================

Block 0x1dd
[0x1dd:0x1e5]
---
Predecessors: [0x1b2, 0x1e6]
Successors: [0x1e6, 0x1f5]
---
0x1dd JUMPDEST
0x1de DUP4
0x1df DUP2
0x1e0 LT
0x1e1 ISZERO
0x1e2 PUSH2 0x1f5
0x1e5 JUMPI
---
0x1dd: JUMPDEST 
0x1e0: V184 = LT S0 V180
0x1e1: V185 = ISZERO V184
0x1e2: V186 = 0x1f5
0x1e5: JUMPI 0x1f5 V185
---
Entry stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V179, V182, V180, V180, V179, V182, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V179, V182, V180, V180, V179, V182, S0]

================================

Block 0x1e6
[0x1e6:0x1f4]
---
Predecessors: [0x1dd]
Successors: [0x1dd]
---
0x1e6 DUP1
0x1e7 DUP3
0x1e8 ADD
0x1e9 MLOAD
0x1ea DUP4
0x1eb DUP3
0x1ec ADD
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 PUSH2 0x1dd
0x1f4 JUMP
---
0x1e8: V187 = ADD V182 S0
0x1e9: V188 = M[V187]
0x1ec: V189 = ADD S0 V179
0x1ed: M[V189] = V188
0x1ee: V190 = 0x20
0x1f0: V191 = ADD 0x20 S0
0x1f1: V192 = 0x1dd
0x1f4: JUMP 0x1dd
---
Entry stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V179, V182, V180, V180, V179, V182, S0]
Stack pops: 3
Stack additions: [S2, S1, V191]
Exit stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V179, V182, V180, V180, V179, V182, V191]

================================

Block 0x1f5
[0x1f5:0x208]
---
Predecessors: [0x1dd]
Successors: [0x209, 0x222]
---
0x1f5 JUMPDEST
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa SWAP1
0x1fb POP
0x1fc SWAP1
0x1fd DUP2
0x1fe ADD
0x1ff SWAP1
0x200 PUSH1 0x1f
0x202 AND
0x203 DUP1
0x204 ISZERO
0x205 PUSH2 0x222
0x208 JUMPI
---
0x1f5: JUMPDEST 
0x1fe: V193 = ADD V180 V179
0x200: V194 = 0x1f
0x202: V195 = AND 0x1f V180
0x204: V196 = ISZERO V195
0x205: V197 = 0x222
0x208: JUMPI 0x222 V196
---
Entry stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V179, V182, V180, V180, V179, V182, S0]
Stack pops: 7
Stack additions: [V193, V195]
Exit stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V193, V195]

================================

Block 0x209
[0x209:0x221]
---
Predecessors: [0x1f5]
Successors: [0x222]
---
0x209 DUP1
0x20a DUP3
0x20b SUB
0x20c DUP1
0x20d MLOAD
0x20e PUSH1 0x1
0x210 DUP4
0x211 PUSH1 0x20
0x213 SUB
0x214 PUSH2 0x100
0x217 EXP
0x218 SUB
0x219 NOT
0x21a AND
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x20
0x21f ADD
0x220 SWAP2
0x221 POP
---
0x20b: V198 = SUB V193 V195
0x20d: V199 = M[V198]
0x20e: V200 = 0x1
0x211: V201 = 0x20
0x213: V202 = SUB 0x20 V195
0x214: V203 = 0x100
0x217: V204 = EXP 0x100 V202
0x218: V205 = SUB V204 0x1
0x219: V206 = NOT V205
0x21a: V207 = AND V206 V199
0x21c: M[V198] = V207
0x21d: V208 = 0x20
0x21f: V209 = ADD 0x20 V198
---
Entry stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V193, V195]
Stack pops: 2
Stack additions: [V209, S0]
Exit stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, V209, V195]

================================

Block 0x222
[0x222:0x241]
---
Predecessors: [0x1f5, 0x209]
Successors: [0x242, 0x246]
---
0x222 JUMPDEST
0x223 POP
0x224 SWAP2
0x225 POP
0x226 POP
0x227 PUSH1 0x0
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d DUP4
0x22e SUB
0x22f DUP2
0x230 DUP6
0x231 DUP8
0x232 PUSH2 0x8796
0x235 GAS
0x236 SUB
0x237 CALL
0x238 SWAP3
0x239 POP
0x23a POP
0x23b POP
0x23c ISZERO
0x23d ISZERO
0x23e PUSH2 0x246
0x241 JUMPI
---
0x222: JUMPDEST 
0x227: V210 = 0x0
0x229: V211 = 0x40
0x22b: V212 = M[0x40]
0x22e: V213 = SUB S1 V212
0x232: V214 = 0x8796
0x235: V215 = GAS
0x236: V216 = SUB V215 0x8796
0x237: V217 = CALL V216 V177 V62 V212 V213 V212 0x0
0x23c: V218 = ISZERO V217
0x23d: V219 = ISZERO V218
0x23e: V220 = 0x246
0x241: JUMPI 0x246 V219
---
Entry stack: [V11, 0x56, V43, V57, V62, V171, V177, V62, V57, V179, S1, V195]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x56, V43, V57, V62, V171]

================================

Block 0x242
[0x242:0x245]
---
Predecessors: [0x222]
Successors: []
---
0x242 PUSH1 0x0
0x244 DUP1
0x245 REVERT
---
0x242: V221 = 0x0
0x245: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V43, V57, V62, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V43, V57, V62, V171]

================================

Block 0x246
[0x246:0x258]
---
Predecessors: [0x222]
Successors: [0x259, 0x25d]
---
0x246 JUMPDEST
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f ADDRESS
0x250 AND
0x251 BALANCE
0x252 DUP2
0x253 SWAP1
0x254 GT
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x246: JUMPDEST 
0x247: V222 = 0x1
0x249: V223 = 0xa0
0x24b: V224 = 0x2
0x24d: V225 = EXP 0x2 0xa0
0x24e: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V227 = ADDRESS
0x250: V228 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x251: V229 = BALANCE V228
0x254: V230 = GT V229 V171
0x255: V231 = 0x25d
0x258: JUMPI 0x25d V230
---
Entry stack: [V11, 0x56, V43, V57, V62, V171]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x56, V43, V57, V62, V171]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x246]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V232 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V43, V57, V62, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V43, V57, V62, V171]

================================

Block 0x25d
[0x25d:0x262]
---
Predecessors: [0x246]
Successors: [0x56]
---
0x25d JUMPDEST
0x25e POP
0x25f POP
0x260 POP
0x261 POP
0x262 JUMP
---
0x25d: JUMPDEST 
0x262: JUMP 0x56
---
Entry stack: [V11, 0x56, V43, V57, V62, V171]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x263
[0x263:0x293]
---
Predecessors: []
Successors: []
---
0x263 STOP
0x264 LOG1
0x265 PUSH6 0x627a7a723058
0x26c SHA3
0x26d MISSING 0xc1
0x26e MISSING 0x4c
0x26f RETURNDATASIZE
0x270 MISSING 0x4c
0x271 MISSING 0xf8
0x272 SHL
0x273 PUSH13 0xf6073867bc2e7ecdedbaeaa04f
0x281 PUSH4 0x51729a67
0x286 MISSING 0xdc
0x287 MISSING 0xf8
0x288 PUSH11 0x50c57120029
---
0x263: STOP 
0x264: LOG S0 S1 S2
0x265: V233 = 0x627a7a723058
0x26c: V234 = SHA3 0x627a7a723058 S3
0x26d: MISSING 0xc1
0x26e: MISSING 0x4c
0x26f: V235 = RETURNDATASIZE
0x270: MISSING 0x4c
0x271: MISSING 0xf8
0x272: V236 = SHL S0 S1
0x273: V237 = 0xf6073867bc2e7ecdedbaeaa04f
0x281: V238 = 0x51729a67
0x286: MISSING 0xdc
0x287: MISSING 0xf8
0x288: V239 = 0x50c57120029
---
Entry stack: []
Stack pops: 0
Stack additions: [V234, V235, 0x51729a67, 0xf6073867bc2e7ecdedbaeaa04f, V236, 0x50c57120029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x58
Exit block: 0x56
Body: 0x56, 0x58, 0x5f, 0x63, 0xd7, 0xf0, 0xff, 0x106, 0x10a, 0x139, 0x13d

Function 1:
Public function signature: 0x853828b6
Entry block: 0x6e
Exit block: 0x56
Body: 0x56, 0x6e, 0x75, 0x79, 0x140, 0x157, 0x15b, 0x190, 0x194

Function 2:
Public function signature: 0xa04a0908
Entry block: 0x81
Exit block: 0x56
Body: 0x56, 0x81, 0x196, 0x1ae, 0x1b2, 0x1dd, 0x1e6, 0x1f5, 0x209, 0x222, 0x242, 0x246, 0x259, 0x25d

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

