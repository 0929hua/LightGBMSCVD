Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x66]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x293dff3e
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x66
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x293dff3e
0x3b: V13 = EQ V11 0x293dff3e
0x3c: V14 = 0x66
0x3f: JUMPI 0x66 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x86]
---
0x40 DUP1
0x41 PUSH4 0x43d726d6
0x46 EQ
0x47 PUSH2 0x86
0x4a JUMPI
---
0x41: V15 = 0x43d726d6
0x46: V16 = EQ 0x43d726d6 V11
0x47: V17 = 0x86
0x4a: JUMPI 0x86 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x9b]
---
0x4b DUP1
0x4c PUSH4 0xa2b40d19
0x51 EQ
0x52 PUSH2 0x9b
0x55 JUMPI
---
0x4c: V18 = 0xa2b40d19
0x51: V19 = EQ 0xa2b40d19 V11
0x52: V20 = 0x9b
0x55: JUMPI 0x9b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xb1]
---
0x56 DUP1
0x57 PUSH4 0xac5b8b34
0x5c EQ
0x5d PUSH2 0xb1
0x60 JUMPI
---
0x57: V21 = 0xac5b8b34
0x5c: V22 = EQ 0xac5b8b34 V11
0x5d: V23 = 0xb1
0x60: JUMPI 0xb1 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x65]
---
Predecessors: [0x0, 0x56]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x73]
---
Predecessors: [0xd]
Successors: [0xc7]
---
0x66 JUMPDEST
0x67 PUSH2 0x74
0x6a PUSH1 0x4
0x6c CALLDATALOAD
0x6d PUSH1 0x24
0x6f CALLDATALOAD
0x70 PUSH2 0xc7
0x73 JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x74
0x6a: V26 = 0x4
0x6c: V27 = CALLDATALOAD 0x4
0x6d: V28 = 0x24
0x6f: V29 = CALLDATALOAD 0x24
0x70: V30 = 0xc7
0x73: JUMP 0xc7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x74, V27, V29]
Exit stack: [V11, 0x74, V27, V29]

================================

Block 0x74
[0x74:0x85]
---
Predecessors: [0x294]
Successors: []
---
0x74 JUMPDEST
0x75 PUSH1 0x40
0x77 MLOAD
0x78 SWAP1
0x79 DUP2
0x7a MSTORE
0x7b PUSH1 0x20
0x7d ADD
0x7e PUSH1 0x40
0x80 MLOAD
0x81 DUP1
0x82 SWAP2
0x83 SUB
0x84 SWAP1
0x85 RETURN
---
0x74: JUMPDEST 
0x75: V31 = 0x40
0x77: V32 = M[0x40]
0x7a: M[V32] = S0
0x7b: V33 = 0x20
0x7d: V34 = ADD 0x20 V32
0x7e: V35 = 0x40
0x80: V36 = M[0x40]
0x83: V37 = SUB V34 V36
0x85: RETURN V36 V37
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0x40]
Successors: [0x8d, 0x91]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x86: JUMPDEST 
0x87: V38 = CALLVALUE
0x88: V39 = ISZERO V38
0x89: V40 = 0x91
0x8c: JUMPI 0x91 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x86]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V41 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0x98]
---
Predecessors: [0x86]
Successors: [0x29c]
---
0x91 JUMPDEST
0x92 PUSH2 0x99
0x95 PUSH2 0x29c
0x98 JUMP
---
0x91: JUMPDEST 
0x92: V42 = 0x99
0x95: V43 = 0x29c
0x98: JUMP 0x29c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x99]
Exit stack: [V11, 0x99]

================================

Block 0x99
[0x99:0x9a]
---
Predecessors: [0x319, 0x339]
Successors: []
---
0x99 JUMPDEST
0x9a STOP
---
0x99: JUMPDEST 
0x9a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9b
[0x9b:0xa1]
---
Predecessors: [0x4b]
Successors: [0xa2, 0xa6]
---
0x9b JUMPDEST
0x9c CALLVALUE
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x9b: JUMPDEST 
0x9c: V44 = CALLVALUE
0x9d: V45 = ISZERO V44
0x9e: V46 = 0xa6
0xa1: JUMPI 0xa6 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x9b]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V47 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6
[0xa6:0xb0]
---
Predecessors: [0x9b]
Successors: [0x2fe]
---
0xa6 JUMPDEST
0xa7 PUSH2 0x99
0xaa PUSH1 0x4
0xac CALLDATALOAD
0xad PUSH2 0x2fe
0xb0 JUMP
---
0xa6: JUMPDEST 
0xa7: V48 = 0x99
0xaa: V49 = 0x4
0xac: V50 = CALLDATALOAD 0x4
0xad: V51 = 0x2fe
0xb0: JUMP 0x2fe
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x99, V50]
Exit stack: [V11, 0x99, V50]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x56]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V52 = CALLVALUE
0xb3: V53 = ISZERO V52
0xb4: V54 = 0xbc
0xb7: JUMPI 0xbc V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V55 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xc6]
---
Predecessors: [0xb1]
Successors: [0x31e]
---
0xbc JUMPDEST
0xbd PUSH2 0x99
0xc0 PUSH1 0x4
0xc2 CALLDATALOAD
0xc3 PUSH2 0x31e
0xc6 JUMP
---
0xbc: JUMPDEST 
0xbd: V56 = 0x99
0xc0: V57 = 0x4
0xc2: V58 = CALLDATALOAD 0x4
0xc3: V59 = 0x31e
0xc6: JUMP 0x31e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x99, V58]
Exit stack: [V11, 0x99, V58]

================================

Block 0xc7
[0xc7:0xd7]
---
Predecessors: [0x66]
Successors: [0xd8, 0x25c]
---
0xc7 JUMPDEST
0xc8 PUSH1 0x0
0xca DUP1
0xcb PUSH1 0x0
0xcd PUSH1 0x1
0xcf SLOAD
0xd0 CALLVALUE
0xd1 LT
0xd2 ISZERO
0xd3 ISZERO
0xd4 PUSH2 0x25c
0xd7 JUMPI
---
0xc7: JUMPDEST 
0xc8: V60 = 0x0
0xcb: V61 = 0x0
0xcd: V62 = 0x1
0xcf: V63 = S[0x1]
0xd0: V64 = CALLVALUE
0xd1: V65 = LT V64 V63
0xd2: V66 = ISZERO V65
0xd3: V67 = ISZERO V66
0xd4: V68 = 0x25c
0xd7: JUMPI 0x25c V67
---
Entry stack: [V11, 0x74, V27, V29]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, 0x0]

================================

Block 0xd8
[0xd8:0x111]
---
Predecessors: [0xc7]
Successors: [0x112, 0x116]
---
0xd8 POP
0xd9 PUSH1 0x2
0xdb SLOAD
0xdc PUSH1 0x0
0xde SLOAD
0xdf PUSH1 0x64
0xe1 CALLVALUE
0xe2 DIV
0xe3 SWAP1
0xe4 SWAP2
0xe5 MUL
0xe6 SWAP1
0xe7 PUSH1 0x1
0xe9 PUSH1 0xa0
0xeb PUSH1 0x2
0xed EXP
0xee SUB
0xef AND
0xf0 PUSH2 0x8fc
0xf3 DUP3
0xf4 ISZERO
0xf5 MUL
0xf6 DUP3
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa PUSH1 0x0
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 DUP4
0x101 SUB
0x102 DUP2
0x103 DUP6
0x104 DUP9
0x105 DUP9
0x106 CALL
0x107 SWAP4
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c ISZERO
0x10d ISZERO
0x10e PUSH2 0x116
0x111 JUMPI
---
0xd9: V69 = 0x2
0xdb: V70 = S[0x2]
0xdc: V71 = 0x0
0xde: V72 = S[0x0]
0xdf: V73 = 0x64
0xe1: V74 = CALLVALUE
0xe2: V75 = DIV V74 0x64
0xe5: V76 = MUL V70 V75
0xe7: V77 = 0x1
0xe9: V78 = 0xa0
0xeb: V79 = 0x2
0xed: V80 = EXP 0x2 0xa0
0xee: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0xf0: V83 = 0x8fc
0xf4: V84 = ISZERO V76
0xf5: V85 = MUL V84 0x8fc
0xf7: V86 = 0x40
0xf9: V87 = M[0x40]
0xfa: V88 = 0x0
0xfc: V89 = 0x40
0xfe: V90 = M[0x40]
0x101: V91 = SUB V87 V90
0x106: V92 = CALL V85 V82 V76 V90 V91 V90 0x0
0x10c: V93 = ISZERO V92
0x10d: V94 = ISZERO V93
0x10e: V95 = 0x116
0x111: JUMPI 0x116 V94
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [V76]
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76]

================================

Block 0x112
[0x112:0x115]
---
Predecessors: [0xd8]
Successors: []
---
0x112 PUSH1 0x0
0x114 DUP1
0x115 REVERT
---
0x112: V96 = 0x0
0x115: REVERT 0x0 0x0
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76]

================================

Block 0x116
[0x116:0x17b]
---
Predecessors: [0xd8]
Successors: [0x17c, 0x183]
---
0x116 JUMPDEST
0x117 PUSH32 0x15f22dd86bdf57d6738698b04f43567aec764abce7139579e163b856d56030e
0x138 CALLER
0x139 DUP7
0x13a DUP7
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP5
0x140 PUSH1 0x1
0x142 PUSH1 0xa0
0x144 PUSH1 0x2
0x146 EXP
0x147 SUB
0x148 AND
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 AND
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 DUP4
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x20
0x15c ADD
0x15d DUP3
0x15e DUP2
0x15f MSTORE
0x160 PUSH1 0x20
0x162 ADD
0x163 SWAP4
0x164 POP
0x165 POP
0x166 POP
0x167 POP
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c SWAP2
0x16d SUB
0x16e SWAP1
0x16f LOG1
0x170 PUSH1 0x3
0x172 SLOAD
0x173 DUP6
0x174 GT
0x175 ISZERO
0x176 DUP1
0x177 ISZERO
0x178 PUSH2 0x183
0x17b JUMPI
---
0x116: JUMPDEST 
0x117: V97 = 0x15f22dd86bdf57d6738698b04f43567aec764abce7139579e163b856d56030e
0x138: V98 = CALLER
0x13b: V99 = 0x40
0x13d: V100 = M[0x40]
0x140: V101 = 0x1
0x142: V102 = 0xa0
0x144: V103 = 0x2
0x146: V104 = EXP 0x2 0xa0
0x147: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x148: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x149: V107 = 0x1
0x14b: V108 = 0xa0
0x14d: V109 = 0x2
0x14f: V110 = EXP 0x2 0xa0
0x150: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x153: M[V100] = V112
0x154: V113 = 0x20
0x156: V114 = ADD 0x20 V100
0x159: M[V114] = V27
0x15a: V115 = 0x20
0x15c: V116 = ADD 0x20 V114
0x15f: M[V116] = V29
0x160: V117 = 0x20
0x162: V118 = ADD 0x20 V116
0x168: V119 = 0x40
0x16a: V120 = M[0x40]
0x16d: V121 = SUB V118 V120
0x16f: LOG V120 V121 0x15f22dd86bdf57d6738698b04f43567aec764abce7139579e163b856d56030e
0x170: V122 = 0x3
0x172: V123 = S[0x3]
0x174: V124 = GT V27 V123
0x175: V125 = ISZERO V124
0x177: V126 = ISZERO V125
0x178: V127 = 0x183
0x17b: JUMPI 0x183 V126
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V125]
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, V125]

================================

Block 0x17c
[0x17c:0x182]
---
Predecessors: [0x116]
Successors: [0x183]
---
0x17c POP
0x17d PUSH1 0x4
0x17f SLOAD
0x180 DUP5
0x181 GT
0x182 ISZERO
---
0x17d: V128 = 0x4
0x17f: V129 = S[0x4]
0x181: V130 = GT V29 V129
0x182: V131 = ISZERO V130
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, V125]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V131]
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, V131]

================================

Block 0x183
[0x183:0x188]
---
Predecessors: [0x116, 0x17c]
Successors: [0x189, 0x249]
---
0x183 JUMPDEST
0x184 ISZERO
0x185 PUSH2 0x249
0x188 JUMPI
---
0x183: JUMPDEST 
0x184: V132 = ISZERO S0
0x185: V133 = 0x249
0x188: JUMPI 0x249 V132
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76]

================================

Block 0x189
[0x189:0x192]
---
Predecessors: [0x183]
Successors: [0x193, 0x194]
---
0x189 PUSH1 0x5
0x18b DUP6
0x18c DUP2
0x18d DUP2
0x18e LT
0x18f PUSH2 0x194
0x192 JUMPI
---
0x189: V134 = 0x5
0x18e: V135 = LT V27 0x5
0x18f: V136 = 0x194
0x192: JUMPI 0x194 V135
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x5, S4]
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, 0x5, V27]

================================

Block 0x193
[0x193:0x193]
---
Predecessors: [0x189]
Successors: []
---
0x193 INVALID
---
0x193: INVALID 
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, 0x5, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, 0x5, V27]

================================

Block 0x194
[0x194:0x1a3]
---
Predecessors: [0x189]
Successors: [0x1a4, 0x1a5]
---
0x194 JUMPDEST
0x195 PUSH1 0x5
0x197 MUL
0x198 ADD
0x199 DUP5
0x19a PUSH1 0x5
0x19c DUP2
0x19d LT
0x19e ISZERO
0x19f ISZERO
0x1a0 PUSH2 0x1a5
0x1a3 JUMPI
---
0x194: JUMPDEST 
0x195: V137 = 0x5
0x197: V138 = MUL 0x5 V27
0x198: V139 = ADD V138 0x5
0x19a: V140 = 0x5
0x19d: V141 = LT V29 0x5
0x19e: V142 = ISZERO V141
0x19f: V143 = ISZERO V142
0x1a0: V144 = 0x1a5
0x1a3: JUMPI 0x1a5 V143
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, 0x5, V27]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V139, S5]
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, V139, V29]

================================

Block 0x1a4
[0x1a4:0x1a4]
---
Predecessors: [0x194]
Successors: []
---
0x1a4 INVALID
---
0x1a4: INVALID 
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, V139, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, V139, V29]

================================

Block 0x1a5
[0x1a5:0x1b5]
---
Predecessors: [0x194]
Successors: [0x1b6, 0x1b7]
---
0x1a5 JUMPDEST
0x1a6 ADD
0x1a7 SLOAD
0x1a8 SWAP2
0x1a9 POP
0x1aa PUSH1 0x0
0x1ac PUSH1 0x5
0x1ae DUP7
0x1af DUP2
0x1b0 DUP2
0x1b1 LT
0x1b2 PUSH2 0x1b7
0x1b5 JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V145 = ADD V29 V139
0x1a7: V146 = S[V145]
0x1aa: V147 = 0x0
0x1ac: V148 = 0x5
0x1b1: V149 = LT V27 0x5
0x1b2: V150 = 0x1b7
0x1b5: JUMPI 0x1b7 V149
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, V76, V139, V29]
Stack pops: 7
Stack additions: [S6, S5, S4, V146, S2, 0x0, 0x5, S6]
Exit stack: [V11, 0x74, V27, V29, 0x0, V146, V76, 0x0, 0x5, V27]

================================

Block 0x1b6
[0x1b6:0x1b6]
---
Predecessors: [0x1a5]
Successors: []
---
0x1b6 INVALID
---
0x1b6: INVALID 
---
Entry stack: [V11, 0x74, V27, V29, 0x0, V146, V76, 0x0, 0x5, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, V146, V76, 0x0, 0x5, V27]

================================

Block 0x1b7
[0x1b7:0x1c6]
---
Predecessors: [0x1a5]
Successors: [0x1c7, 0x1c8]
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x5
0x1ba MUL
0x1bb ADD
0x1bc DUP6
0x1bd PUSH1 0x5
0x1bf DUP2
0x1c0 LT
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 PUSH2 0x1c8
0x1c6 JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V151 = 0x5
0x1ba: V152 = MUL 0x5 V27
0x1bb: V153 = ADD V152 0x5
0x1bd: V154 = 0x5
0x1c0: V155 = LT V29 0x5
0x1c1: V156 = ISZERO V155
0x1c2: V157 = ISZERO V156
0x1c3: V158 = 0x1c8
0x1c6: JUMPI 0x1c8 V157
---
Entry stack: [V11, 0x74, V27, V29, 0x0, V146, V76, 0x0, 0x5, V27]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V153, S6]
Exit stack: [V11, 0x74, V27, V29, 0x0, V146, V76, 0x0, V153, V29]

================================

Block 0x1c7
[0x1c7:0x1c7]
---
Predecessors: [0x1b7]
Successors: []
---
0x1c7 INVALID
---
0x1c7: INVALID 
---
Entry stack: [V11, 0x74, V27, V29, 0x0, V146, V76, 0x0, V153, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, V146, V76, 0x0, V153, V29]

================================

Block 0x1c8
[0x1c8:0x1d3]
---
Predecessors: [0x1b7]
Successors: [0x1d4, 0x249]
---
0x1c8 JUMPDEST
0x1c9 ADD
0x1ca SSTORE
0x1cb PUSH1 0x0
0x1cd DUP3
0x1ce GT
0x1cf ISZERO
0x1d0 PUSH2 0x249
0x1d3 JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V159 = ADD V29 V153
0x1ca: S[V159] = 0x0
0x1cb: V160 = 0x0
0x1ce: V161 = GT V146 0x0
0x1cf: V162 = ISZERO V161
0x1d0: V163 = 0x249
0x1d3: JUMPI 0x249 V162
---
Entry stack: [V11, 0x74, V27, V29, 0x0, V146, V76, 0x0, V153, V29]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V11, 0x74, V27, V29, 0x0, V146, V76]

================================

Block 0x1d4
[0x1d4:0x1ff]
---
Predecessors: [0x1c8]
Successors: [0x200, 0x204]
---
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0xa0
0x1d8 PUSH1 0x2
0x1da EXP
0x1db SUB
0x1dc CALLER
0x1dd AND
0x1de DUP3
0x1df ISZERO
0x1e0 PUSH2 0x8fc
0x1e3 MUL
0x1e4 DUP4
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 PUSH1 0x0
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee DUP4
0x1ef SUB
0x1f0 DUP2
0x1f1 DUP6
0x1f2 DUP9
0x1f3 DUP9
0x1f4 CALL
0x1f5 SWAP4
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa ISZERO
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1d4: V164 = 0x1
0x1d6: V165 = 0xa0
0x1d8: V166 = 0x2
0x1da: V167 = EXP 0x2 0xa0
0x1db: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dc: V169 = CALLER
0x1dd: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V171 = ISZERO V146
0x1e0: V172 = 0x8fc
0x1e3: V173 = MUL 0x8fc V171
0x1e5: V174 = 0x40
0x1e7: V175 = M[0x40]
0x1e8: V176 = 0x0
0x1ea: V177 = 0x40
0x1ec: V178 = M[0x40]
0x1ef: V179 = SUB V175 V178
0x1f4: V180 = CALL V173 V170 V146 V178 V179 V178 0x0
0x1fa: V181 = ISZERO V180
0x1fb: V182 = ISZERO V181
0x1fc: V183 = 0x204
0x1ff: JUMPI 0x204 V182
---
Entry stack: [V11, 0x74, V27, V29, 0x0, V146, V76]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x74, V27, V29, 0x0, V146, V76]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1d4]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V184 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V11, 0x74, V27, V29, 0x0, V146, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, V146, V76]

================================

Block 0x204
[0x204:0x248]
---
Predecessors: [0x1d4]
Successors: [0x249]
---
0x204 JUMPDEST
0x205 PUSH32 0x80daddee89f5b70b6f51aa83c8215ae92de722f6b09f780e2f334c1ead8b2ad2
0x226 CALLER
0x227 DUP4
0x228 PUSH1 0x40
0x22a MLOAD
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 SWAP1
0x234 SWAP3
0x235 AND
0x236 DUP3
0x237 MSTORE
0x238 PUSH1 0x20
0x23a DUP3
0x23b ADD
0x23c MSTORE
0x23d PUSH1 0x40
0x23f SWAP1
0x240 DUP2
0x241 ADD
0x242 SWAP1
0x243 MLOAD
0x244 DUP1
0x245 SWAP2
0x246 SUB
0x247 SWAP1
0x248 LOG1
---
0x204: JUMPDEST 
0x205: V185 = 0x80daddee89f5b70b6f51aa83c8215ae92de722f6b09f780e2f334c1ead8b2ad2
0x226: V186 = CALLER
0x228: V187 = 0x40
0x22a: V188 = M[0x40]
0x22b: V189 = 0x1
0x22d: V190 = 0xa0
0x22f: V191 = 0x2
0x231: V192 = EXP 0x2 0xa0
0x232: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V194 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x237: M[V188] = V194
0x238: V195 = 0x20
0x23b: V196 = ADD V188 0x20
0x23c: M[V196] = V146
0x23d: V197 = 0x40
0x241: V198 = ADD 0x40 V188
0x243: V199 = M[0x40]
0x246: V200 = SUB V198 V199
0x248: LOG V199 V200 0x80daddee89f5b70b6f51aa83c8215ae92de722f6b09f780e2f334c1ead8b2ad2
---
Entry stack: [V11, 0x74, V27, V29, 0x0, V146, V76]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x74, V27, V29, 0x0, V146, V76]

================================

Block 0x249
[0x249:0x253]
---
Predecessors: [0x183, 0x1c8, 0x204]
Successors: [0x33e]
---
0x249 JUMPDEST
0x24a PUSH2 0x254
0x24d DUP2
0x24e CALLVALUE
0x24f SUB
0x250 PUSH2 0x33e
0x253 JUMP
---
0x249: JUMPDEST 
0x24a: V201 = 0x254
0x24e: V202 = CALLVALUE
0x24f: V203 = SUB V202 V76
0x250: V204 = 0x33e
0x253: JUMP 0x33e
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S1, V76]
Stack pops: 1
Stack additions: [S0, 0x254, V203]
Exit stack: [V11, 0x74, V27, V29, 0x0, S1, V76, 0x254, V203]

================================

Block 0x254
[0x254:0x25b]
---
Predecessors: [0x37e]
Successors: [0x294]
---
0x254 JUMPDEST
0x255 DUP2
0x256 SWAP3
0x257 POP
0x258 PUSH2 0x294
0x25b JUMP
---
0x254: JUMPDEST 
0x258: V205 = 0x294
0x25b: JUMP 0x294
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S1, V76]
Stack pops: 3
Stack additions: [S1, S1, S0]
Exit stack: [V11, 0x74, V27, V29, S1, S1, V76]

================================

Block 0x25c
[0x25c:0x289]
---
Predecessors: [0xc7]
Successors: [0x28a, 0x28e]
---
0x25c JUMPDEST
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 CALLER
0x266 AND
0x267 CALLVALUE
0x268 DUP1
0x269 ISZERO
0x26a PUSH2 0x8fc
0x26d MUL
0x26e SWAP1
0x26f PUSH1 0x40
0x271 MLOAD
0x272 PUSH1 0x0
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 DUP4
0x279 SUB
0x27a DUP2
0x27b DUP6
0x27c DUP9
0x27d DUP9
0x27e CALL
0x27f SWAP4
0x280 POP
0x281 POP
0x282 POP
0x283 POP
0x284 ISZERO
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x25c: JUMPDEST 
0x25d: V206 = 0x1
0x25f: V207 = 0xa0
0x261: V208 = 0x2
0x263: V209 = EXP 0x2 0xa0
0x264: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V211 = CALLER
0x266: V212 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x267: V213 = CALLVALUE
0x269: V214 = ISZERO V213
0x26a: V215 = 0x8fc
0x26d: V216 = MUL 0x8fc V214
0x26f: V217 = 0x40
0x271: V218 = M[0x40]
0x272: V219 = 0x0
0x274: V220 = 0x40
0x276: V221 = M[0x40]
0x279: V222 = SUB V218 V221
0x27e: V223 = CALL V216 V212 V213 V221 V222 V221 0x0
0x284: V224 = ISZERO V223
0x285: V225 = ISZERO V224
0x286: V226 = 0x28e
0x289: JUMPI 0x28e V225
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, 0x0]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x25c]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V227 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, 0x0, 0x0]

================================

Block 0x28e
[0x28e:0x293]
---
Predecessors: [0x25c]
Successors: [0x294]
---
0x28e JUMPDEST
0x28f PUSH1 0x0
0x291 NOT
0x292 SWAP3
0x293 POP
---
0x28e: JUMPDEST 
0x28f: V228 = 0x0
0x291: V229 = NOT 0x0
---
Entry stack: [V11, 0x74, V27, V29, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S1, S0]
Exit stack: [V11, 0x74, V27, V29, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x0, 0x0]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0x254, 0x28e]
Successors: [0x74]
---
0x294 JUMPDEST
0x295 POP
0x296 POP
0x297 SWAP3
0x298 SWAP2
0x299 POP
0x29a POP
0x29b JUMP
---
0x294: JUMPDEST 
0x29b: JUMP 0x74
---
Entry stack: [V11, 0x74, V27, V29, S2, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V11, S2]

================================

Block 0x29c
[0x29c:0x2b2]
---
Predecessors: [0x91]
Successors: [0x2b3, 0x2b7]
---
0x29c JUMPDEST
0x29d PUSH1 0x0
0x29f SLOAD
0x2a0 CALLER
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 SWAP1
0x2aa DUP2
0x2ab AND
0x2ac SWAP2
0x2ad AND
0x2ae EQ
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x29c: JUMPDEST 
0x29d: V230 = 0x0
0x29f: V231 = S[0x0]
0x2a0: V232 = CALLER
0x2a1: V233 = 0x1
0x2a3: V234 = 0xa0
0x2a5: V235 = 0x2
0x2a7: V236 = EXP 0x2 0xa0
0x2a8: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ab: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x2ad: V239 = AND V231 0xffffffffffffffffffffffffffffffffffffffff
0x2ae: V240 = EQ V239 V238
0x2af: V241 = 0x2b7
0x2b2: JUMPI 0x2b7 V240
---
Entry stack: [V11, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x29c]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V242 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99]

================================

Block 0x2b7
[0x2b7:0x2eb]
---
Predecessors: [0x29c]
Successors: [0x2ec, 0x2f0]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x0
0x2ba SLOAD
0x2bb PUSH1 0x1
0x2bd PUSH1 0xa0
0x2bf PUSH1 0x2
0x2c1 EXP
0x2c2 SUB
0x2c3 SWAP1
0x2c4 DUP2
0x2c5 AND
0x2c6 SWAP1
0x2c7 ADDRESS
0x2c8 AND
0x2c9 BALANCE
0x2ca DUP1
0x2cb ISZERO
0x2cc PUSH2 0x8fc
0x2cf MUL
0x2d0 SWAP1
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 PUSH1 0x0
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 DUP1
0x2da DUP4
0x2db SUB
0x2dc DUP2
0x2dd DUP6
0x2de DUP9
0x2df DUP9
0x2e0 CALL
0x2e1 SWAP4
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 ISZERO
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V243 = 0x0
0x2ba: V244 = S[0x0]
0x2bb: V245 = 0x1
0x2bd: V246 = 0xa0
0x2bf: V247 = 0x2
0x2c1: V248 = EXP 0x2 0xa0
0x2c2: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c5: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x2c7: V251 = ADDRESS
0x2c8: V252 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V253 = BALANCE V252
0x2cb: V254 = ISZERO V253
0x2cc: V255 = 0x8fc
0x2cf: V256 = MUL 0x8fc V254
0x2d1: V257 = 0x40
0x2d3: V258 = M[0x40]
0x2d4: V259 = 0x0
0x2d6: V260 = 0x40
0x2d8: V261 = M[0x40]
0x2db: V262 = SUB V258 V261
0x2e0: V263 = CALL V256 V250 V253 V261 V262 V261 0x0
0x2e6: V264 = ISZERO V263
0x2e7: V265 = ISZERO V264
0x2e8: V266 = 0x2f0
0x2eb: JUMPI 0x2f0 V265
---
Entry stack: [V11, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2b7]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V267 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99]

================================

Block 0x2f0
[0x2f0:0x2fd]
---
Predecessors: [0x2b7]
Successors: []
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x0
0x2f3 SLOAD
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc AND
0x2fd SELFDESTRUCT
---
0x2f0: JUMPDEST 
0x2f1: V268 = 0x0
0x2f3: V269 = S[0x0]
0x2f4: V270 = 0x1
0x2f6: V271 = 0xa0
0x2f8: V272 = 0x2
0x2fa: V273 = EXP 0x2 0xa0
0x2fb: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fc: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x2fd: SELFDESTRUCT V275
---
Entry stack: [V11, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99]

================================

Block 0x2fe
[0x2fe:0x314]
---
Predecessors: [0xa6]
Successors: [0x315, 0x319]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x0
0x301 SLOAD
0x302 CALLER
0x303 PUSH1 0x1
0x305 PUSH1 0xa0
0x307 PUSH1 0x2
0x309 EXP
0x30a SUB
0x30b SWAP1
0x30c DUP2
0x30d AND
0x30e SWAP2
0x30f AND
0x310 EQ
0x311 PUSH2 0x319
0x314 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V276 = 0x0
0x301: V277 = S[0x0]
0x302: V278 = CALLER
0x303: V279 = 0x1
0x305: V280 = 0xa0
0x307: V281 = 0x2
0x309: V282 = EXP 0x2 0xa0
0x30a: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x30f: V285 = AND V277 0xffffffffffffffffffffffffffffffffffffffff
0x310: V286 = EQ V285 V284
0x311: V287 = 0x319
0x314: JUMPI 0x319 V286
---
Entry stack: [V11, 0x99, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V50]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x2fe]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V288 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V11, 0x99, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V50]

================================

Block 0x319
[0x319:0x31d]
---
Predecessors: [0x2fe]
Successors: [0x99]
---
0x319 JUMPDEST
0x31a PUSH1 0x1
0x31c SSTORE
0x31d JUMP
---
0x319: JUMPDEST 
0x31a: V289 = 0x1
0x31c: S[0x1] = V50
0x31d: JUMP 0x99
---
Entry stack: [V11, 0x99, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x31e
[0x31e:0x334]
---
Predecessors: [0xbc]
Successors: [0x335, 0x339]
---
0x31e JUMPDEST
0x31f PUSH1 0x0
0x321 SLOAD
0x322 CALLER
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b SWAP1
0x32c DUP2
0x32d AND
0x32e SWAP2
0x32f AND
0x330 EQ
0x331 PUSH2 0x339
0x334 JUMPI
---
0x31e: JUMPDEST 
0x31f: V290 = 0x0
0x321: V291 = S[0x0]
0x322: V292 = CALLER
0x323: V293 = 0x1
0x325: V294 = 0xa0
0x327: V295 = 0x2
0x329: V296 = EXP 0x2 0xa0
0x32a: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x32f: V299 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0x330: V300 = EQ V299 V298
0x331: V301 = 0x339
0x334: JUMPI 0x339 V300
---
Entry stack: [V11, 0x99, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V58]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x31e]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V302 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V11, 0x99, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V58]

================================

Block 0x339
[0x339:0x33d]
---
Predecessors: [0x31e]
Successors: [0x99]
---
0x339 JUMPDEST
0x33a PUSH1 0x2
0x33c SSTORE
0x33d JUMP
---
0x339: JUMPDEST 
0x33a: V303 = 0x2
0x33c: S[0x2] = V58
0x33d: JUMP 0x99
---
Entry stack: [V11, 0x99, V58]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x33e
[0x33e:0x34d]
---
Predecessors: [0x249]
Successors: [0x38b]
---
0x33e JUMPDEST
0x33f PUSH1 0x0
0x341 DUP1
0x342 PUSH2 0x34e
0x345 PUSH1 0x7b
0x347 PUSH1 0x3
0x349 SLOAD
0x34a PUSH2 0x38b
0x34d JUMP
---
0x33e: JUMPDEST 
0x33f: V304 = 0x0
0x342: V305 = 0x34e
0x345: V306 = 0x7b
0x347: V307 = 0x3
0x349: V308 = S[0x3]
0x34a: V309 = 0x38b
0x34d: JUMP 0x38b
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S3, V76, 0x254, V203]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x34e, 0x7b, V308]
Exit stack: [V11, 0x74, V27, V29, 0x0, S3, V76, 0x254, V203, 0x0, 0x0, 0x34e, 0x7b, V308]

================================

Block 0x34e
[0x34e:0x35d]
---
Predecessors: [0x3b5]
Successors: [0x38b]
---
0x34e JUMPDEST
0x34f SWAP2
0x350 POP
0x351 PUSH2 0x35e
0x354 PUSH2 0x1b0
0x357 PUSH1 0x4
0x359 SLOAD
0x35a PUSH2 0x38b
0x35d JUMP
---
0x34e: JUMPDEST 
0x351: V310 = 0x35e
0x354: V311 = 0x1b0
0x357: V312 = 0x4
0x359: V313 = S[0x4]
0x35a: V314 = 0x38b
0x35d: JUMP 0x38b
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S6, V76, 0x254, V203, S2, 0x0, V346]
Stack pops: 3
Stack additions: [S0, S1, 0x35e, 0x1b0, V313]
Exit stack: [V11, 0x74, V27, V29, 0x0, S6, V76, 0x254, V203, V346, 0x0, 0x35e, 0x1b0, V313]

================================

Block 0x35e
[0x35e:0x36b]
---
Predecessors: [0x3b5]
Successors: [0x36c, 0x36d]
---
0x35e JUMPDEST
0x35f SWAP1
0x360 POP
0x361 DUP3
0x362 PUSH1 0x5
0x364 DUP4
0x365 DUP2
0x366 DUP2
0x367 LT
0x368 PUSH2 0x36d
0x36b JUMPI
---
0x35e: JUMPDEST 
0x362: V315 = 0x5
0x367: V316 = LT S2 0x5
0x368: V317 = 0x36d
0x36b: JUMPI 0x36d V316
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S6, V76, 0x254, V203, S2, 0x0, V346]
Stack pops: 4
Stack additions: [S3, S2, S0, S3, 0x5, S2]
Exit stack: [V11, 0x74, V27, V29, 0x0, S6, V76, 0x254, V203, S2, V346, V203, 0x5, S2]

================================

Block 0x36c
[0x36c:0x36c]
---
Predecessors: [0x35e]
Successors: []
---
0x36c INVALID
---
0x36c: INVALID 
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, V346, V203, 0x5, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, V346, V203, 0x5, S0]

================================

Block 0x36d
[0x36d:0x37c]
---
Predecessors: [0x35e]
Successors: [0x37d, 0x37e]
---
0x36d JUMPDEST
0x36e PUSH1 0x5
0x370 MUL
0x371 ADD
0x372 DUP3
0x373 PUSH1 0x5
0x375 DUP2
0x376 LT
0x377 ISZERO
0x378 ISZERO
0x379 PUSH2 0x37e
0x37c JUMPI
---
0x36d: JUMPDEST 
0x36e: V318 = 0x5
0x370: V319 = MUL 0x5 S0
0x371: V320 = ADD V319 0x5
0x373: V321 = 0x5
0x376: V322 = LT V346 0x5
0x377: V323 = ISZERO V322
0x378: V324 = ISZERO V323
0x379: V325 = 0x37e
0x37c: JUMPI 0x37e V324
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, V346, V203, 0x5, S0]
Stack pops: 4
Stack additions: [S3, S2, V320, S3]
Exit stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, V346, V203, V320, V346]

================================

Block 0x37d
[0x37d:0x37d]
---
Predecessors: [0x36d]
Successors: []
---
0x37d INVALID
---
0x37d: INVALID 
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, V346, V203, V320, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, V346, V203, V320, V346]

================================

Block 0x37e
[0x37e:0x38a]
---
Predecessors: [0x36d]
Successors: [0x254]
---
0x37e JUMPDEST
0x37f ADD
0x380 DUP1
0x381 SLOAD
0x382 SWAP1
0x383 SWAP2
0x384 ADD
0x385 SWAP1
0x386 SSTORE
0x387 POP
0x388 POP
0x389 POP
0x38a JUMP
---
0x37e: JUMPDEST 
0x37f: V326 = ADD V346 V320
0x381: V327 = S[V326]
0x384: V328 = ADD V203 V327
0x386: S[V326] = V328
0x38a: JUMP 0x254
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, V346, V203, V320, V346]
Stack pops: 7
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, S8, V76]

================================

Block 0x38b
[0x38b:0x3b3]
---
Predecessors: [0x33e, 0x34e]
Successors: [0x3b4, 0x3b5]
---
0x38b JUMPDEST
0x38c PUSH1 0x0
0x38e DUP2
0x38f PUSH1 0x1
0x391 NUMBER
0x392 SUB
0x393 BLOCKHASH
0x394 DUP5
0x395 PUSH1 0x40
0x397 MLOAD
0x398 SWAP2
0x399 DUP3
0x39a MSTORE
0x39b PUSH1 0x20
0x39d DUP3
0x39e ADD
0x39f MSTORE
0x3a0 PUSH1 0x40
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 ADD
0x3a5 SWAP1
0x3a6 MLOAD
0x3a7 SWAP1
0x3a8 DUP2
0x3a9 SWAP1
0x3aa SUB
0x3ab SWAP1
0x3ac SHA3
0x3ad DUP2
0x3ae ISZERO
0x3af ISZERO
0x3b0 PUSH2 0x3b5
0x3b3 JUMPI
---
0x38b: JUMPDEST 
0x38c: V329 = 0x0
0x38f: V330 = 0x1
0x391: V331 = NUMBER
0x392: V332 = SUB V331 0x1
0x393: V333 = BLOCKHASH V332
0x395: V334 = 0x40
0x397: V335 = M[0x40]
0x39a: M[V335] = V333
0x39b: V336 = 0x20
0x39e: V337 = ADD V335 0x20
0x39f: M[V337] = {0x7b, 0x1b0}
0x3a0: V338 = 0x40
0x3a4: V339 = ADD 0x40 V335
0x3a6: V340 = M[0x40]
0x3aa: V341 = SUB V339 V340
0x3ac: V342 = SHA3 V340 V341
0x3ae: V343 = ISZERO S0
0x3af: V344 = ISZERO V343
0x3b0: V345 = 0x3b5
0x3b3: JUMPI 0x3b5 V344
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, 0x0, {0x34e, 0x35e}, {0x7b, 0x1b0}, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S0, V342]
Exit stack: [V11, 0x74, V27, V29, 0x0, S8, V76, 0x254, V203, S4, 0x0, {0x34e, 0x35e}, {0x7b, 0x1b0}, S0, 0x0, S0, V342]

================================

Block 0x3b4
[0x3b4:0x3b4]
---
Predecessors: [0x38b]
Successors: []
---
0x3b4 INVALID
---
0x3b4: INVALID 
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S11, V76, 0x254, V203, S7, 0x0, {0x34e, 0x35e}, {0x7b, 0x1b0}, S3, 0x0, S1, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x74, V27, V29, 0x0, S11, V76, 0x254, V203, S7, 0x0, {0x34e, 0x35e}, {0x7b, 0x1b0}, S3, 0x0, S1, V342]

================================

Block 0x3b5
[0x3b5:0x3bc]
---
Predecessors: [0x38b]
Successors: [0x34e, 0x35e]
---
0x3b5 JUMPDEST
0x3b6 MOD
0x3b7 SWAP4
0x3b8 SWAP3
0x3b9 POP
0x3ba POP
0x3bb POP
0x3bc JUMP
---
0x3b5: JUMPDEST 
0x3b6: V346 = MOD V342 S1
0x3bc: JUMP {0x34e, 0x35e}
---
Entry stack: [V11, 0x74, V27, V29, 0x0, S11, V76, 0x254, V203, S7, 0x0, {0x34e, 0x35e}, {0x7b, 0x1b0}, S3, 0x0, S1, V342]
Stack pops: 6
Stack additions: [V346]
Exit stack: [V11, 0x74, V27, V29, 0x0, S11, V76, 0x254, V203, S7, 0x0, V346]

================================

Block 0x3bd
[0x3bd:0x3e9]
---
Predecessors: []
Successors: []
---
0x3bd STOP
0x3be LOG1
0x3bf PUSH6 0x627a7a723058
0x3c6 SHA3
0x3c7 MISSING 0xcf
0x3c8 STOP
0x3c9 BALANCE
0x3ca SHA3
0x3cb SWAP10
0x3cc MISSING 0xec
0x3cd SWAP8
0x3ce SLT
0x3cf MISSING 0xc5
0x3d0 MISSING 0xae
0x3d1 PUSH24 0xec9bdaec2d87da9ac12037173429185e921cae4280029
---
0x3bd: STOP 
0x3be: LOG S0 S1 S2
0x3bf: V347 = 0x627a7a723058
0x3c6: V348 = SHA3 0x627a7a723058 S3
0x3c7: MISSING 0xcf
0x3c8: STOP 
0x3c9: V349 = BALANCE S0
0x3ca: V350 = SHA3 V349 S1
0x3cc: MISSING 0xec
0x3ce: V351 = SLT S8 S1
0x3cf: MISSING 0xc5
0x3d0: MISSING 0xae
0x3d1: V352 = 0xec9bdaec2d87da9ac12037173429185e921cae4280029
---
Entry stack: []
Stack pops: 0
Stack additions: [V348, S11, S2, S3, S4, S5, S6, S7, S8, S9, S10, V350, V351, S2, S3, S4, S5, S6, S7, S0, 0xec9bdaec2d87da9ac12037173429185e921cae4280029]
Exit stack: []

================================

Function 0:
Public function signature: 0x293dff3e
Entry block: 0x66
Exit block: 0x200
Body: 0x66, 0x74, 0xc7, 0xd8, 0x112, 0x116, 0x17c, 0x183, 0x189, 0x193, 0x194, 0x1a4, 0x1a5, 0x1b6, 0x1b7, 0x1c7, 0x1c8, 0x1d4, 0x200, 0x204, 0x249, 0x254, 0x25c, 0x28a, 0x28e, 0x294, 0x33e, 0x34e

Function 1:
Public function signature: 0x43d726d6
Entry block: 0x86
Exit block: 0x2ec
Body: 0x86, 0x8d, 0x91, 0x29c, 0x2b3, 0x2b7, 0x2ec, 0x2f0

Function 2:
Public function signature: 0xa2b40d19
Entry block: 0x9b
Exit block: 0x99
Body: 0x99, 0x9b, 0xa2, 0xa6, 0x2fe, 0x315, 0x319

Function 3:
Public function signature: 0xac5b8b34
Entry block: 0xb1
Exit block: 0x99
Body: 0x99, 0xb1, 0xb8, 0xbc, 0x31e, 0x335, 0x339

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

Function 5:
Private function
Entry block: 0x38b
Exit block: 0x3b5
Body: 0x38b, 0x3b5

