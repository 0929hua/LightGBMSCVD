Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x79]
---
0x41 DUP1
0x42 PUSH4 0x43ce8e44
0x47 EQ
0x48 PUSH2 0x79
0x4b JUMPI
---
0x42: V15 = 0x43ce8e44
0x47: V16 = EQ 0x43ce8e44 V11
0x48: V17 = 0x79
0x4b: JUMPI 0x79 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb2]
---
0x4c DUP1
0x4d PUSH4 0xbea293af
0x52 EQ
0x53 PUSH2 0xb2
0x56 JUMPI
---
0x4d: V18 = 0xbea293af
0x52: V19 = EQ 0xbea293af V11
0x53: V20 = 0xb2
0x56: JUMPI 0xb2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x107]
---
0x57 DUP1
0x58 PUSH4 0xca4b208b
0x5d EQ
0x5e PUSH2 0x107
0x61 JUMPI
---
0x58: V21 = 0xca4b208b
0x5d: V22 = EQ 0xca4b208b V11
0x5e: V23 = 0x107
0x61: JUMPI 0x107 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x64]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x64]
Successors: [0x15c]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0x15c
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V28 = 0x77
0x73: V29 = 0x15c
0x76: JUMP 0x15c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x1d4]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0x41]
Successors: [0x80, 0x84]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7b: V31 = ISZERO V30
0x7c: V32 = 0x84
0x7f: JUMPI 0x84 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x79]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V33 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0xaf]
---
Predecessors: [0x79]
Successors: [0x1d6]
---
0x84 JUMPDEST
0x85 PUSH2 0xb0
0x88 PUSH1 0x4
0x8a DUP1
0x8b DUP1
0x8c CALLDATALOAD
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 SWAP1
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP1
0xa8 SWAP2
0xa9 SWAP1
0xaa POP
0xab POP
0xac PUSH2 0x1d6
0xaf JUMP
---
0x84: JUMPDEST 
0x85: V34 = 0xb0
0x88: V35 = 0x4
0x8c: V36 = CALLDATALOAD 0x4
0x8d: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xa4: V39 = 0x20
0xa6: V40 = ADD 0x20 0x4
0xac: V41 = 0x1d6
0xaf: JUMP 0x1d6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0, V38]
Exit stack: [V11, 0xb0, V38]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0x286]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb2
[0xb2:0xb8]
---
Predecessors: [0x4c]
Successors: [0xb9, 0xbd]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V42 = CALLVALUE
0xb4: V43 = ISZERO V42
0xb5: V44 = 0xbd
0xb8: JUMPI 0xbd V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb2]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V45 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0xb2]
Successors: [0x289]
---
0xbd JUMPDEST
0xbe PUSH2 0xc5
0xc1 PUSH2 0x289
0xc4 JUMP
---
0xbd: JUMPDEST 
0xbe: V46 = 0xc5
0xc1: V47 = 0x289
0xc4: JUMP 0x289
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V11, 0xc5]

================================

Block 0xc5
[0xc5:0x106]
---
Predecessors: [0x289]
Successors: []
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca DUP3
0xcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0 AND
0xe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf6 AND
0xf7 DUP2
0xf8 MSTORE
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP2
0xfd POP
0xfe POP
0xff PUSH1 0x40
0x101 MLOAD
0x102 DUP1
0x103 SWAP2
0x104 SUB
0x105 SWAP1
0x106 RETURN
---
0xc5: JUMPDEST 
0xc6: V48 = 0x40
0xc8: V49 = M[0x40]
0xcb: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0xe1: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf6: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xf8: M[V49] = V53
0xf9: V54 = 0x20
0xfb: V55 = ADD 0x20 V49
0xff: V56 = 0x40
0x101: V57 = M[0x40]
0x104: V58 = SUB V55 V57
0x106: RETURN V57 V58
---
Entry stack: [V11, 0xc5, V152]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc5]

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0x57]
Successors: [0x10e, 0x112]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a PUSH2 0x112
0x10d JUMPI
---
0x107: JUMPDEST 
0x108: V59 = CALLVALUE
0x109: V60 = ISZERO V59
0x10a: V61 = 0x112
0x10d: JUMPI 0x112 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0x107]
Successors: []
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 REVERT
---
0x10e: V62 = 0x0
0x111: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x112
[0x112:0x119]
---
Predecessors: [0x107]
Successors: [0x2af]
---
0x112 JUMPDEST
0x113 PUSH2 0x11a
0x116 PUSH2 0x2af
0x119 JUMP
---
0x112: JUMPDEST 
0x113: V63 = 0x11a
0x116: V64 = 0x2af
0x119: JUMP 0x2af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x11a
[0x11a:0x15b]
---
Predecessors: [0x2af]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f DUP3
0x120 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x135 AND
0x136 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14b AND
0x14c DUP2
0x14d MSTORE
0x14e PUSH1 0x20
0x150 ADD
0x151 SWAP2
0x152 POP
0x153 POP
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 SWAP2
0x159 SUB
0x15a SWAP1
0x15b RETURN
---
0x11a: JUMPDEST 
0x11b: V65 = 0x40
0x11d: V66 = M[0x40]
0x120: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x135: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x136: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x14d: M[V66] = V70
0x14e: V71 = 0x20
0x150: V72 = ADD 0x20 V66
0x154: V73 = 0x40
0x156: V74 = M[0x40]
0x159: V75 = SUB V72 V74
0x15b: RETURN V74 V75
---
Entry stack: [V11, 0x11a, V159]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x11a]

================================

Block 0x15c
[0x15c:0x1cf]
---
Predecessors: [0x6f]
Successors: [0x1d0, 0x1d4]
---
0x15c JUMPDEST
0x15d PUSH1 0x0
0x15f DUP1
0x160 SWAP1
0x161 SLOAD
0x162 SWAP1
0x163 PUSH2 0x100
0x166 EXP
0x167 SWAP1
0x168 DIV
0x169 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17e AND
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 AND
0x195 PUSH2 0x8fc
0x198 ADDRESS
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af BALANCE
0x1b0 SWAP1
0x1b1 DUP2
0x1b2 ISZERO
0x1b3 MUL
0x1b4 SWAP1
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 PUSH1 0x0
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be DUP4
0x1bf SUB
0x1c0 DUP2
0x1c1 DUP6
0x1c2 DUP9
0x1c3 DUP9
0x1c4 CALL
0x1c5 SWAP4
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca ISZERO
0x1cb ISZERO
0x1cc PUSH2 0x1d4
0x1cf JUMPI
---
0x15c: JUMPDEST 
0x15d: V76 = 0x0
0x161: V77 = S[0x0]
0x163: V78 = 0x100
0x166: V79 = EXP 0x100 0x0
0x168: V80 = DIV V77 0x1
0x169: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x17f: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x195: V85 = 0x8fc
0x198: V86 = ADDRESS
0x199: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x1af: V89 = BALANCE V88
0x1b2: V90 = ISZERO V89
0x1b3: V91 = MUL V90 0x8fc
0x1b5: V92 = 0x40
0x1b7: V93 = M[0x40]
0x1b8: V94 = 0x0
0x1ba: V95 = 0x40
0x1bc: V96 = M[0x40]
0x1bf: V97 = SUB V93 V96
0x1c4: V98 = CALL V91 V84 V89 V96 V97 V96 0x0
0x1ca: V99 = ISZERO V98
0x1cb: V100 = ISZERO V99
0x1cc: V101 = 0x1d4
0x1cf: JUMPI 0x1d4 V100
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1d0
[0x1d0:0x1d3]
---
Predecessors: [0x15c]
Successors: []
---
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 REVERT
---
0x1d0: V102 = 0x0
0x1d3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1d4
[0x1d4:0x1d5]
---
Predecessors: [0x15c]
Successors: [0x77]
---
0x1d4 JUMPDEST
0x1d5 JUMP
---
0x1d4: JUMPDEST 
0x1d5: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d6
[0x1d6:0x218]
---
Predecessors: [0x84]
Successors: [0x219, 0x21d]
---
0x1d6 JUMPDEST
0x1d7 DUP1
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee PUSH2 0x8fc
0x1f1 PUSH7 0x38d7ea4c68000
0x1f9 SWAP1
0x1fa DUP2
0x1fb ISZERO
0x1fc MUL
0x1fd SWAP1
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 PUSH1 0x0
0x203 PUSH1 0x40
0x205 MLOAD
0x206 DUP1
0x207 DUP4
0x208 SUB
0x209 DUP2
0x20a DUP6
0x20b DUP9
0x20c DUP9
0x20d CALL
0x20e SWAP4
0x20f POP
0x210 POP
0x211 POP
0x212 POP
0x213 ISZERO
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x1d6: JUMPDEST 
0x1d8: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x1ee: V105 = 0x8fc
0x1f1: V106 = 0x38d7ea4c68000
0x1fb: V107 = ISZERO 0x38d7ea4c68000
0x1fc: V108 = MUL 0x0 0x8fc
0x1fe: V109 = 0x40
0x200: V110 = M[0x40]
0x201: V111 = 0x0
0x203: V112 = 0x40
0x205: V113 = M[0x40]
0x208: V114 = SUB V110 V113
0x20d: V115 = CALL 0x0 V104 0x38d7ea4c68000 V113 V114 V113 0x0
0x213: V116 = ISZERO V115
0x214: V117 = ISZERO V116
0x215: V118 = 0x21d
0x218: JUMPI 0x21d V117
---
Entry stack: [V11, 0xb0, V38]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb0, V38]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x1d6]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V119 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38]

================================

Block 0x21d
[0x21d:0x281]
---
Predecessors: [0x1d6]
Successors: [0x282, 0x286]
---
0x21d JUMPDEST
0x21e PUSH1 0x1
0x220 PUSH1 0x0
0x222 SWAP1
0x223 SLOAD
0x224 SWAP1
0x225 PUSH2 0x100
0x228 EXP
0x229 SWAP1
0x22a DIV
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 AND
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH2 0x8fc
0x25a PUSH7 0x38d7ea4c68000
0x262 SWAP1
0x263 DUP2
0x264 ISZERO
0x265 MUL
0x266 SWAP1
0x267 PUSH1 0x40
0x269 MLOAD
0x26a PUSH1 0x0
0x26c PUSH1 0x40
0x26e MLOAD
0x26f DUP1
0x270 DUP4
0x271 SUB
0x272 DUP2
0x273 DUP6
0x274 DUP9
0x275 DUP9
0x276 CALL
0x277 SWAP4
0x278 POP
0x279 POP
0x27a POP
0x27b POP
0x27c ISZERO
0x27d ISZERO
0x27e PUSH2 0x286
0x281 JUMPI
---
0x21d: JUMPDEST 
0x21e: V120 = 0x1
0x220: V121 = 0x0
0x223: V122 = S[0x1]
0x225: V123 = 0x100
0x228: V124 = EXP 0x100 0x0
0x22a: V125 = DIV V122 0x1
0x22b: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x241: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x257: V130 = 0x8fc
0x25a: V131 = 0x38d7ea4c68000
0x264: V132 = ISZERO 0x38d7ea4c68000
0x265: V133 = MUL 0x0 0x8fc
0x267: V134 = 0x40
0x269: V135 = M[0x40]
0x26a: V136 = 0x0
0x26c: V137 = 0x40
0x26e: V138 = M[0x40]
0x271: V139 = SUB V135 V138
0x276: V140 = CALL 0x0 V129 0x38d7ea4c68000 V138 V139 V138 0x0
0x27c: V141 = ISZERO V140
0x27d: V142 = ISZERO V141
0x27e: V143 = 0x286
0x281: JUMPI 0x286 V142
---
Entry stack: [V11, 0xb0, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38]

================================

Block 0x282
[0x282:0x285]
---
Predecessors: [0x21d]
Successors: []
---
0x282 PUSH1 0x0
0x284 DUP1
0x285 REVERT
---
0x282: V144 = 0x0
0x285: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38]

================================

Block 0x286
[0x286:0x288]
---
Predecessors: [0x21d]
Successors: [0xb0]
---
0x286 JUMPDEST
0x287 POP
0x288 JUMP
---
0x286: JUMPDEST 
0x288: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V38]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x289
[0x289:0x2ae]
---
Predecessors: [0xbd]
Successors: [0xc5]
---
0x289 JUMPDEST
0x28a PUSH1 0x1
0x28c PUSH1 0x0
0x28e SWAP1
0x28f SLOAD
0x290 SWAP1
0x291 PUSH2 0x100
0x294 EXP
0x295 SWAP1
0x296 DIV
0x297 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ac AND
0x2ad DUP2
0x2ae JUMP
---
0x289: JUMPDEST 
0x28a: V145 = 0x1
0x28c: V146 = 0x0
0x28f: V147 = S[0x1]
0x291: V148 = 0x100
0x294: V149 = EXP 0x100 0x0
0x296: V150 = DIV V147 0x1
0x297: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ac: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2ae: JUMP 0xc5
---
Entry stack: [V11, 0xc5]
Stack pops: 1
Stack additions: [S0, V152]
Exit stack: [V11, 0xc5, V152]

================================

Block 0x2af
[0x2af:0x2d3]
---
Predecessors: [0x112]
Successors: [0x11a]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 SWAP1
0x2b4 SLOAD
0x2b5 SWAP1
0x2b6 PUSH2 0x100
0x2b9 EXP
0x2ba SWAP1
0x2bb DIV
0x2bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d1 AND
0x2d2 DUP2
0x2d3 JUMP
---
0x2af: JUMPDEST 
0x2b0: V153 = 0x0
0x2b4: V154 = S[0x0]
0x2b6: V155 = 0x100
0x2b9: V156 = EXP 0x100 0x0
0x2bb: V157 = DIV V154 0x1
0x2bc: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2d3: JUMP 0x11a
---
Entry stack: [V11, 0x11a]
Stack pops: 1
Stack additions: [S0, V159]
Exit stack: [V11, 0x11a, V159]

================================

Block 0x2d4
[0x2d4:0x30b]
---
Predecessors: []
Successors: []
---
0x2d4 STOP
0x2d5 LOG1
0x2d6 PUSH6 0x627a7a723058
0x2dd SHA3
0x2de PC
0x2df MISSING 0x48
0x2e0 GT
0x2e1 MISSING 0xe0
0x2e2 PUSH4 0x214162b3
0x2e7 MISSING 0xca
0x2e8 SAR
0x2e9 SWAP8
0x2ea MISSING 0x2a
0x2eb MISSING 0xf8
0x2ec MISSING 0xc0
0x2ed SLOAD
0x2ee MISSING 0xb3
0x2ef LT
0x2f0 MSIZE
0x2f1 PUSH6 0x71ef54ae0427
0x2f8 MISSING 0x5e
0x2f9 MISSING 0x4a
0x2fa MISSING 0xde
0x2fb PUSH16 0xd4680029
---
0x2d4: STOP 
0x2d5: LOG S0 S1 S2
0x2d6: V160 = 0x627a7a723058
0x2dd: V161 = SHA3 0x627a7a723058 S3
0x2de: V162 = PC
0x2df: MISSING 0x48
0x2e0: V163 = GT S0 S1
0x2e1: MISSING 0xe0
0x2e2: V164 = 0x214162b3
0x2e7: MISSING 0xca
0x2e8: V165 = SAR S0 S1
0x2ea: MISSING 0x2a
0x2eb: MISSING 0xf8
0x2ec: MISSING 0xc0
0x2ed: V166 = S[S0]
0x2ee: MISSING 0xb3
0x2ef: V167 = LT S0 S1
0x2f0: V168 = MSIZE
0x2f1: V169 = 0x71ef54ae0427
0x2f8: MISSING 0x5e
0x2f9: MISSING 0x4a
0x2fa: MISSING 0xde
0x2fb: V170 = 0xd4680029
---
Entry stack: []
Stack pops: 0
Stack additions: [V162, V161, V163, 0x214162b3, S9, S2, S3, S4, S5, S6, S7, S8, V165, V166, 0x71ef54ae0427, V168, V167, 0xd4680029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x64
Exit block: 0x77
Body: 0x64, 0x6b, 0x6f, 0x77, 0x15c, 0x1d0, 0x1d4

Function 1:
Public function signature: 0x43ce8e44
Entry block: 0x79
Exit block: 0xb0
Body: 0x79, 0x80, 0x84, 0xb0, 0x1d6, 0x219, 0x21d, 0x282, 0x286

Function 2:
Public function signature: 0xbea293af
Entry block: 0xb2
Exit block: 0xc5
Body: 0xb2, 0xb9, 0xbd, 0xc5, 0x289

Function 3:
Public function signature: 0xca4b208b
Entry block: 0x107
Exit block: 0x11a
Body: 0x107, 0x10e, 0x112, 0x11a, 0x2af

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

