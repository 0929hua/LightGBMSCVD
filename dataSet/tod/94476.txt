Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3b
0xa: JUMPI 0x3b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x183]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x4bb278f3
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x183
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x4bb278f3
0x20: V14 = EQ V12 0x4bb278f3
0x21: V15 = 0x183
0x24: JUMPI 0x183 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1a8]
---
0x25 DUP1
0x26 PUSH4 0xae3cc04f
0x2b EQ
0x2c PUSH2 0x1a8
0x2f JUMPI
---
0x26: V16 = 0xae3cc04f
0x2b: V17 = EQ 0xae3cc04f V12
0x2c: V18 = 0x1a8
0x2f: JUMPI 0x1a8 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1d7]
---
0x30 DUP1
0x31 PUSH4 0xe151834b
0x36 EQ
0x37 PUSH2 0x1d7
0x3a JUMPI
---
0x31: V19 = 0xe151834b
0x36: V20 = EQ 0xe151834b V12
0x37: V21 = 0x1d7
0x3a: JUMPI 0x1d7 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x3b]
---
Predecessors: [0x0, 0x30]
Successors: [0x3c]
---
0x3b JUMPDEST
---
0x3b: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c
[0x3c:0x46]
---
Predecessors: [0x3b]
Successors: [0x47, 0x4b]
---
0x3c JUMPDEST
0x3d PUSH1 0x3
0x3f SLOAD
0x40 CALLVALUE
0x41 LT
0x42 ISZERO
0x43 PUSH2 0x4b
0x46 JUMPI
---
0x3c: JUMPDEST 
0x3d: V22 = 0x3
0x3f: V23 = S[0x3]
0x40: V24 = CALLVALUE
0x41: V25 = LT V24 V23
0x42: V26 = ISZERO V25
0x43: V27 = 0x4b
0x46: JUMPI 0x4b V26
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47
[0x47:0x4a]
---
Predecessors: [0x3c]
Successors: []
---
0x47 PUSH1 0x0
0x49 DUP1
0x4a REVERT
---
0x47: V28 = 0x0
0x4a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b
[0x4b:0x56]
---
Predecessors: [0x3c]
Successors: [0x57, 0x58]
---
0x4b JUMPDEST
0x4c PUSH1 0x3
0x4e SLOAD
0x4f CALLVALUE
0x50 DUP2
0x51 ISZERO
0x52 ISZERO
0x53 PUSH2 0x58
0x56 JUMPI
---
0x4b: JUMPDEST 
0x4c: V29 = 0x3
0x4e: V30 = S[0x3]
0x4f: V31 = CALLVALUE
0x51: V32 = ISZERO V30
0x52: V33 = ISZERO V32
0x53: V34 = 0x58
0x56: JUMPI 0x58 V33
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V30, V31]
Exit stack: [V12, V30, V31]

================================

Block 0x57
[0x57:0x57]
---
Predecessors: [0x4b]
Successors: []
---
0x57 INVALID
---
0x57: INVALID 
---
Entry stack: [V12, V30, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V30, V31]

================================

Block 0x58
[0x58:0x5e]
---
Predecessors: [0x4b]
Successors: [0x5f, 0x63]
---
0x58 JUMPDEST
0x59 MOD
0x5a ISZERO
0x5b PUSH2 0x63
0x5e JUMPI
---
0x58: JUMPDEST 
0x59: V35 = MOD V31 V30
0x5a: V36 = ISZERO V35
0x5b: V37 = 0x63
0x5e: JUMPI 0x63 V36
---
Entry stack: [V12, V30, V31]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x58]
Successors: []
---
0x5f PUSH1 0x0
0x61 DUP1
0x62 REVERT
---
0x5f: V38 = 0x0
0x62: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x63
[0x63:0x6e]
---
Predecessors: [0x58]
Successors: [0x6f, 0x70]
---
0x63 JUMPDEST
0x64 PUSH1 0x3
0x66 SLOAD
0x67 CALLVALUE
0x68 DUP2
0x69 ISZERO
0x6a ISZERO
0x6b PUSH2 0x70
0x6e JUMPI
---
0x63: JUMPDEST 
0x64: V39 = 0x3
0x66: V40 = S[0x3]
0x67: V41 = CALLVALUE
0x69: V42 = ISZERO V40
0x6a: V43 = ISZERO V42
0x6b: V44 = 0x70
0x6e: JUMPI 0x70 V43
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V40, V41]
Exit stack: [V12, V40, V41]

================================

Block 0x6f
[0x6f:0x6f]
---
Predecessors: [0x63]
Successors: []
---
0x6f INVALID
---
0x6f: INVALID 
---
Entry stack: [V12, V40, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V40, V41]

================================

Block 0x70
[0x70:0xc8]
---
Predecessors: [0x63]
Successors: [0xc9, 0xcd]
---
0x70 JUMPDEST
0x71 PUSH1 0x1
0x73 SLOAD
0x74 SWAP2
0x75 SWAP1
0x76 DIV
0x77 SWAP1
0x78 PUSH1 0x1
0x7a PUSH1 0xa0
0x7c PUSH1 0x2
0x7e EXP
0x7f SUB
0x80 AND
0x81 PUSH4 0x70a08231
0x86 ADDRESS
0x87 PUSH1 0x0
0x89 PUSH1 0x40
0x8b MLOAD
0x8c PUSH1 0x20
0x8e ADD
0x8f MSTORE
0x90 PUSH1 0x40
0x92 MLOAD
0x93 PUSH1 0xe0
0x95 PUSH1 0x2
0x97 EXP
0x98 PUSH4 0xffffffff
0x9d DUP5
0x9e AND
0x9f MUL
0xa0 DUP2
0xa1 MSTORE
0xa2 PUSH1 0x1
0xa4 PUSH1 0xa0
0xa6 PUSH1 0x2
0xa8 EXP
0xa9 SUB
0xaa SWAP1
0xab SWAP2
0xac AND
0xad PUSH1 0x4
0xaf DUP3
0xb0 ADD
0xb1 MSTORE
0xb2 PUSH1 0x24
0xb4 ADD
0xb5 PUSH1 0x20
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb DUP4
0xbc SUB
0xbd DUP2
0xbe PUSH1 0x0
0xc0 DUP8
0xc1 DUP1
0xc2 EXTCODESIZE
0xc3 ISZERO
0xc4 ISZERO
0xc5 PUSH2 0xcd
0xc8 JUMPI
---
0x70: JUMPDEST 
0x71: V45 = 0x1
0x73: V46 = S[0x1]
0x76: V47 = DIV V41 V40
0x78: V48 = 0x1
0x7a: V49 = 0xa0
0x7c: V50 = 0x2
0x7e: V51 = EXP 0x2 0xa0
0x7f: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x81: V54 = 0x70a08231
0x86: V55 = ADDRESS
0x87: V56 = 0x0
0x89: V57 = 0x40
0x8b: V58 = M[0x40]
0x8c: V59 = 0x20
0x8e: V60 = ADD 0x20 V58
0x8f: M[V60] = 0x0
0x90: V61 = 0x40
0x92: V62 = M[0x40]
0x93: V63 = 0xe0
0x95: V64 = 0x2
0x97: V65 = EXP 0x2 0xe0
0x98: V66 = 0xffffffff
0x9e: V67 = AND 0x70a08231 0xffffffff
0x9f: V68 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xa1: M[V62] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa2: V69 = 0x1
0xa4: V70 = 0xa0
0xa6: V71 = 0x2
0xa8: V72 = EXP 0x2 0xa0
0xa9: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac: V74 = AND V55 0xffffffffffffffffffffffffffffffffffffffff
0xad: V75 = 0x4
0xb0: V76 = ADD V62 0x4
0xb1: M[V76] = V74
0xb2: V77 = 0x24
0xb4: V78 = ADD 0x24 V62
0xb5: V79 = 0x20
0xb7: V80 = 0x40
0xb9: V81 = M[0x40]
0xbc: V82 = SUB V78 V81
0xbe: V83 = 0x0
0xc2: V84 = EXTCODESIZE V53
0xc3: V85 = ISZERO V84
0xc4: V86 = ISZERO V85
0xc5: V87 = 0xcd
0xc8: JUMPI 0xcd V86
---
Entry stack: [V12, V40, V41]
Stack pops: 2
Stack additions: [V47, V53, 0x70a08231, V78, 0x20, V81, V82, V81, 0x0, V53]
Exit stack: [V12, V47, V53, 0x70a08231, V78, 0x20, V81, V82, V81, 0x0, V53]

================================

Block 0xc9
[0xc9:0xcc]
---
Predecessors: [0x70]
Successors: []
---
0xc9 PUSH1 0x0
0xcb DUP1
0xcc REVERT
---
0xc9: V88 = 0x0
0xcc: REVERT 0x0 0x0
---
Entry stack: [V12, V47, V53, 0x70a08231, V78, 0x20, V81, V82, V81, 0x0, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47, V53, 0x70a08231, V78, 0x20, V81, V82, V81, 0x0, V53]

================================

Block 0xcd
[0xcd:0xd9]
---
Predecessors: [0x70]
Successors: [0xda, 0xde]
---
0xcd JUMPDEST
0xce PUSH2 0x2c6
0xd1 GAS
0xd2 SUB
0xd3 CALL
0xd4 ISZERO
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xcd: JUMPDEST 
0xce: V89 = 0x2c6
0xd1: V90 = GAS
0xd2: V91 = SUB V90 0x2c6
0xd3: V92 = CALL V91 V53 0x0 V81 V82 V81 0x20
0xd4: V93 = ISZERO V92
0xd5: V94 = ISZERO V93
0xd6: V95 = 0xde
0xd9: JUMPI 0xde V94
---
Entry stack: [V12, V47, V53, 0x70a08231, V78, 0x20, V81, V82, V81, 0x0, V53]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V47, V53, 0x70a08231, V78]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xcd]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V96 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V12, V47, V53, 0x70a08231, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47, V53, 0x70a08231, V78]

================================

Block 0xde
[0xde:0xef]
---
Predecessors: [0xcd]
Successors: [0xf0, 0xf4]
---
0xde JUMPDEST
0xdf POP
0xe0 POP
0xe1 POP
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 MLOAD
0xe7 SWAP1
0xe8 POP
0xe9 GT
0xea ISZERO
0xeb ISZERO
0xec PUSH2 0xf4
0xef JUMPI
---
0xde: JUMPDEST 
0xe2: V97 = 0x40
0xe4: V98 = M[0x40]
0xe6: V99 = M[V98]
0xe9: V100 = GT V99 V47
0xea: V101 = ISZERO V100
0xeb: V102 = ISZERO V101
0xec: V103 = 0xf4
0xef: JUMPI 0xf4 V102
---
Entry stack: [V12, V47, V53, 0x70a08231, V78]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xf0
[0xf0:0xf3]
---
Predecessors: [0xde]
Successors: []
---
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 REVERT
---
0xf0: V104 = 0x0
0xf3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf4
[0xf4:0x116]
---
Predecessors: [0xde]
Successors: [0x117, 0x118]
---
0xf4 JUMPDEST
0xf5 PUSH1 0x1
0xf7 SLOAD
0xf8 PUSH1 0x3
0xfa SLOAD
0xfb PUSH1 0x1
0xfd PUSH1 0xa0
0xff PUSH1 0x2
0x101 EXP
0x102 SUB
0x103 SWAP1
0x104 SWAP2
0x105 AND
0x106 SWAP1
0x107 PUSH4 0xa9059cbb
0x10c SWAP1
0x10d CALLER
0x10e SWAP1
0x10f CALLVALUE
0x110 DUP2
0x111 ISZERO
0x112 ISZERO
0x113 PUSH2 0x118
0x116 JUMPI
---
0xf4: JUMPDEST 
0xf5: V105 = 0x1
0xf7: V106 = S[0x1]
0xf8: V107 = 0x3
0xfa: V108 = S[0x3]
0xfb: V109 = 0x1
0xfd: V110 = 0xa0
0xff: V111 = 0x2
0x101: V112 = EXP 0x2 0xa0
0x102: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x105: V114 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x107: V115 = 0xa9059cbb
0x10d: V116 = CALLER
0x10f: V117 = CALLVALUE
0x111: V118 = ISZERO V108
0x112: V119 = ISZERO V118
0x113: V120 = 0x118
0x116: JUMPI 0x118 V119
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V114, 0xa9059cbb, V116, V108, V117]
Exit stack: [V12, V114, 0xa9059cbb, V116, V108, V117]

================================

Block 0x117
[0x117:0x117]
---
Predecessors: [0xf4]
Successors: []
---
0x117 INVALID
---
0x117: INVALID 
---
Entry stack: [V12, V114, 0xa9059cbb, V116, V108, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V114, 0xa9059cbb, V116, V108, V117]

================================

Block 0x118
[0x118:0x160]
---
Predecessors: [0xf4]
Successors: [0x161, 0x165]
---
0x118 JUMPDEST
0x119 DIV
0x11a PUSH1 0x0
0x11c PUSH1 0x40
0x11e MLOAD
0x11f PUSH1 0x20
0x121 ADD
0x122 MSTORE
0x123 PUSH1 0x40
0x125 MLOAD
0x126 PUSH1 0xe0
0x128 PUSH1 0x2
0x12a EXP
0x12b PUSH4 0xffffffff
0x130 DUP6
0x131 AND
0x132 MUL
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d SWAP1
0x13e SWAP3
0x13f AND
0x140 PUSH1 0x4
0x142 DUP4
0x143 ADD
0x144 MSTORE
0x145 PUSH1 0x24
0x147 DUP3
0x148 ADD
0x149 MSTORE
0x14a PUSH1 0x44
0x14c ADD
0x14d PUSH1 0x20
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 DUP4
0x154 SUB
0x155 DUP2
0x156 PUSH1 0x0
0x158 DUP8
0x159 DUP1
0x15a EXTCODESIZE
0x15b ISZERO
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x118: JUMPDEST 
0x119: V121 = DIV V117 V108
0x11a: V122 = 0x0
0x11c: V123 = 0x40
0x11e: V124 = M[0x40]
0x11f: V125 = 0x20
0x121: V126 = ADD 0x20 V124
0x122: M[V126] = 0x0
0x123: V127 = 0x40
0x125: V128 = M[0x40]
0x126: V129 = 0xe0
0x128: V130 = 0x2
0x12a: V131 = EXP 0x2 0xe0
0x12b: V132 = 0xffffffff
0x131: V133 = AND 0xa9059cbb 0xffffffff
0x132: V134 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x134: M[V128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x135: V135 = 0x1
0x137: V136 = 0xa0
0x139: V137 = 0x2
0x13b: V138 = EXP 0x2 0xa0
0x13c: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V140 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x140: V141 = 0x4
0x143: V142 = ADD V128 0x4
0x144: M[V142] = V140
0x145: V143 = 0x24
0x148: V144 = ADD V128 0x24
0x149: M[V144] = V121
0x14a: V145 = 0x44
0x14c: V146 = ADD 0x44 V128
0x14d: V147 = 0x20
0x14f: V148 = 0x40
0x151: V149 = M[0x40]
0x154: V150 = SUB V146 V149
0x156: V151 = 0x0
0x15a: V152 = EXTCODESIZE V114
0x15b: V153 = ISZERO V152
0x15c: V154 = ISZERO V153
0x15d: V155 = 0x165
0x160: JUMPI 0x165 V154
---
Entry stack: [V12, V114, 0xa9059cbb, V116, V108, V117]
Stack pops: 5
Stack additions: [S4, S3, V146, 0x20, V149, V150, V149, 0x0, S4]
Exit stack: [V12, V114, 0xa9059cbb, V146, 0x20, V149, V150, V149, 0x0, V114]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x118]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V156 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V12, V114, 0xa9059cbb, V146, 0x20, V149, V150, V149, 0x0, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V114, 0xa9059cbb, V146, 0x20, V149, V150, V149, 0x0, V114]

================================

Block 0x165
[0x165:0x171]
---
Predecessors: [0x118]
Successors: [0x172, 0x176]
---
0x165 JUMPDEST
0x166 PUSH2 0x2c6
0x169 GAS
0x16a SUB
0x16b CALL
0x16c ISZERO
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x165: JUMPDEST 
0x166: V157 = 0x2c6
0x169: V158 = GAS
0x16a: V159 = SUB V158 0x2c6
0x16b: V160 = CALL V159 V114 0x0 V149 V150 V149 0x20
0x16c: V161 = ISZERO V160
0x16d: V162 = ISZERO V161
0x16e: V163 = 0x176
0x171: JUMPI 0x176 V162
---
Entry stack: [V12, V114, 0xa9059cbb, V146, 0x20, V149, V150, V149, 0x0, V114]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V114, 0xa9059cbb, V146]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x165]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V164 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V12, V114, 0xa9059cbb, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V114, 0xa9059cbb, V146]

================================

Block 0x176
[0x176:0x180]
---
Predecessors: [0x165]
Successors: [0x181]
---
0x176 JUMPDEST
0x177 POP
0x178 POP
0x179 POP
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e MLOAD
0x17f POP
0x180 POP
---
0x176: JUMPDEST 
0x17a: V165 = 0x40
0x17c: V166 = M[0x40]
0x17e: V167 = M[V166]
---
Entry stack: [V12, V114, 0xa9059cbb, V146]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x181
[0x181:0x182]
---
Predecessors: [0x176, 0x3b3]
Successors: []
---
0x181 JUMPDEST
0x182 STOP
---
0x181: JUMPDEST 
0x182: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x189]
---
Predecessors: [0xb]
Successors: [0x18a, 0x18e]
---
0x183 JUMPDEST
0x184 CALLVALUE
0x185 ISZERO
0x186 PUSH2 0x18e
0x189 JUMPI
---
0x183: JUMPDEST 
0x184: V168 = CALLVALUE
0x185: V169 = ISZERO V168
0x186: V170 = 0x18e
0x189: JUMPI 0x18e V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18a
[0x18a:0x18d]
---
Predecessors: [0x183]
Successors: []
---
0x18a PUSH1 0x0
0x18c DUP1
0x18d REVERT
---
0x18a: V171 = 0x0
0x18d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18e
[0x18e:0x195]
---
Predecessors: [0x183]
Successors: [0x1fb]
---
0x18e JUMPDEST
0x18f PUSH2 0x196
0x192 PUSH2 0x1fb
0x195 JUMP
---
0x18e: JUMPDEST 
0x18f: V172 = 0x196
0x192: V173 = 0x1fb
0x195: JUMP 0x1fb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x196]
Exit stack: [V12, 0x196]

================================

Block 0x196
[0x196:0x1a7]
---
Predecessors: []
Successors: []
---
0x196 JUMPDEST
0x197 PUSH1 0x40
0x199 MLOAD
0x19a SWAP1
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 DUP1
0x1a4 SWAP2
0x1a5 SUB
0x1a6 SWAP1
0x1a7 RETURN
---
0x196: JUMPDEST 
0x197: V174 = 0x40
0x199: V175 = M[0x40]
0x19c: M[V175] = S0
0x19d: V176 = 0x20
0x19f: V177 = ADD 0x20 V175
0x1a0: V178 = 0x40
0x1a2: V179 = M[0x40]
0x1a5: V180 = SUB V177 V179
0x1a7: RETURN V179 V180
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0x25]
Successors: [0x1af, 0x1b3]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V181 = CALLVALUE
0x1aa: V182 = ISZERO V181
0x1ab: V183 = 0x1b3
0x1ae: JUMPI 0x1b3 V182
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x1a8]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V184 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b3
[0x1b3:0x1ba]
---
Predecessors: [0x1a8]
Successors: [0x34a]
---
0x1b3 JUMPDEST
0x1b4 PUSH2 0x1bb
0x1b7 PUSH2 0x34a
0x1ba JUMP
---
0x1b3: JUMPDEST 
0x1b4: V185 = 0x1bb
0x1b7: V186 = 0x34a
0x1ba: JUMP 0x34a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1bb]
Exit stack: [V12, 0x1bb]

================================

Block 0x1bb
[0x1bb:0x1d6]
---
Predecessors: [0x357]
Successors: []
---
0x1bb JUMPDEST
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf PUSH1 0x1
0x1c1 PUSH1 0xa0
0x1c3 PUSH1 0x2
0x1c5 EXP
0x1c6 SUB
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 AND
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 SWAP2
0x1d4 SUB
0x1d5 SWAP1
0x1d6 RETURN
---
0x1bb: JUMPDEST 
0x1bc: V187 = 0x40
0x1be: V188 = M[0x40]
0x1bf: V189 = 0x1
0x1c1: V190 = 0xa0
0x1c3: V191 = 0x2
0x1c5: V192 = EXP 0x2 0xa0
0x1c6: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c9: V194 = AND V373 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: M[V188] = V194
0x1cc: V195 = 0x20
0x1ce: V196 = ADD 0x20 V188
0x1cf: V197 = 0x40
0x1d1: V198 = M[0x40]
0x1d4: V199 = SUB V196 V198
0x1d6: RETURN V198 V199
---
Entry stack: [V12, V373]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d7
[0x1d7:0x1dd]
---
Predecessors: [0x30]
Successors: [0x1de, 0x1e2]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V200 = CALLVALUE
0x1d9: V201 = ISZERO V200
0x1da: V202 = 0x1e2
0x1dd: JUMPI 0x1e2 V201
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x1d7]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V203 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e2
[0x1e2:0x1f8]
---
Predecessors: [0x1d7]
Successors: [0x35a]
---
0x1e2 JUMPDEST
0x1e3 PUSH2 0x181
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SUB
0x1ee PUSH1 0x4
0x1f0 CALLDATALOAD
0x1f1 AND
0x1f2 PUSH1 0x24
0x1f4 CALLDATALOAD
0x1f5 PUSH2 0x35a
0x1f8 JUMP
---
0x1e2: JUMPDEST 
0x1e3: V204 = 0x181
0x1e6: V205 = 0x1
0x1e8: V206 = 0xa0
0x1ea: V207 = 0x2
0x1ec: V208 = EXP 0x2 0xa0
0x1ed: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ee: V210 = 0x4
0x1f0: V211 = CALLDATALOAD 0x4
0x1f1: V212 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V213 = 0x24
0x1f4: V214 = CALLDATALOAD 0x24
0x1f5: V215 = 0x35a
0x1f8: JUMP 0x35a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181, V212, V214]
Exit stack: [V12, 0x181, V212, V214]

================================

Block 0x1f9
[0x1f9:0x1fa]
---
Predecessors: []
Successors: []
---
0x1f9 JUMPDEST
0x1fa STOP
---
0x1f9: JUMPDEST 
0x1fa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1fb
[0x1fb:0x214]
---
Predecessors: [0x18e]
Successors: [0x215, 0x219]
---
0x1fb JUMPDEST
0x1fc PUSH1 0x2
0x1fe SLOAD
0x1ff PUSH1 0x0
0x201 SWAP1
0x202 CALLER
0x203 PUSH1 0x1
0x205 PUSH1 0xa0
0x207 PUSH1 0x2
0x209 EXP
0x20a SUB
0x20b SWAP1
0x20c DUP2
0x20d AND
0x20e SWAP2
0x20f AND
0x210 EQ
0x211 PUSH2 0x219
0x214 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V216 = 0x2
0x1fe: V217 = S[0x2]
0x1ff: V218 = 0x0
0x202: V219 = CALLER
0x203: V220 = 0x1
0x205: V221 = 0xa0
0x207: V222 = 0x2
0x209: V223 = EXP 0x2 0xa0
0x20a: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20d: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x20f: V226 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x210: V227 = EQ V226 V225
0x211: V228 = 0x219
0x214: JUMPI 0x219 V227
---
Entry stack: [V12, 0x196]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x196, 0x0]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x1fb]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V229 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V12, 0x196, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, 0x0]

================================

Block 0x219
[0x219:0x27b]
---
Predecessors: [0x1fb]
Successors: [0x27c, 0x280]
---
0x219 JUMPDEST
0x21a PUSH1 0x1
0x21c SLOAD
0x21d PUSH1 0x2
0x21f SLOAD
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 SWAP2
0x229 DUP3
0x22a AND
0x22b SWAP2
0x22c PUSH4 0xa9059cbb
0x231 SWAP2
0x232 AND
0x233 DUP3
0x234 PUSH4 0x70a08231
0x239 ADDRESS
0x23a PUSH1 0x0
0x23c PUSH1 0x40
0x23e MLOAD
0x23f PUSH1 0x20
0x241 ADD
0x242 MSTORE
0x243 PUSH1 0x40
0x245 MLOAD
0x246 PUSH1 0xe0
0x248 PUSH1 0x2
0x24a EXP
0x24b PUSH4 0xffffffff
0x250 DUP5
0x251 AND
0x252 MUL
0x253 DUP2
0x254 MSTORE
0x255 PUSH1 0x1
0x257 PUSH1 0xa0
0x259 PUSH1 0x2
0x25b EXP
0x25c SUB
0x25d SWAP1
0x25e SWAP2
0x25f AND
0x260 PUSH1 0x4
0x262 DUP3
0x263 ADD
0x264 MSTORE
0x265 PUSH1 0x24
0x267 ADD
0x268 PUSH1 0x20
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP1
0x26e DUP4
0x26f SUB
0x270 DUP2
0x271 PUSH1 0x0
0x273 DUP8
0x274 DUP1
0x275 EXTCODESIZE
0x276 ISZERO
0x277 ISZERO
0x278 PUSH2 0x280
0x27b JUMPI
---
0x219: JUMPDEST 
0x21a: V230 = 0x1
0x21c: V231 = S[0x1]
0x21d: V232 = 0x2
0x21f: V233 = S[0x2]
0x220: V234 = 0x1
0x222: V235 = 0xa0
0x224: V236 = 0x2
0x226: V237 = EXP 0x2 0xa0
0x227: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x22c: V240 = 0xa9059cbb
0x232: V241 = AND V233 0xffffffffffffffffffffffffffffffffffffffff
0x234: V242 = 0x70a08231
0x239: V243 = ADDRESS
0x23a: V244 = 0x0
0x23c: V245 = 0x40
0x23e: V246 = M[0x40]
0x23f: V247 = 0x20
0x241: V248 = ADD 0x20 V246
0x242: M[V248] = 0x0
0x243: V249 = 0x40
0x245: V250 = M[0x40]
0x246: V251 = 0xe0
0x248: V252 = 0x2
0x24a: V253 = EXP 0x2 0xe0
0x24b: V254 = 0xffffffff
0x251: V255 = AND 0x70a08231 0xffffffff
0x252: V256 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x254: M[V250] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x255: V257 = 0x1
0x257: V258 = 0xa0
0x259: V259 = 0x2
0x25b: V260 = EXP 0x2 0xa0
0x25c: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V262 = AND V243 0xffffffffffffffffffffffffffffffffffffffff
0x260: V263 = 0x4
0x263: V264 = ADD V250 0x4
0x264: M[V264] = V262
0x265: V265 = 0x24
0x267: V266 = ADD 0x24 V250
0x268: V267 = 0x20
0x26a: V268 = 0x40
0x26c: V269 = M[0x40]
0x26f: V270 = SUB V266 V269
0x271: V271 = 0x0
0x275: V272 = EXTCODESIZE V239
0x276: V273 = ISZERO V272
0x277: V274 = ISZERO V273
0x278: V275 = 0x280
0x27b: JUMPI 0x280 V274
---
Entry stack: [V12, 0x196, 0x0]
Stack pops: 0
Stack additions: [V239, 0xa9059cbb, V241, V239, 0x70a08231, V266, 0x20, V269, V270, V269, 0x0, V239]
Exit stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V241, V239, 0x70a08231, V266, 0x20, V269, V270, V269, 0x0, V239]

================================

Block 0x27c
[0x27c:0x27f]
---
Predecessors: [0x219]
Successors: []
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
---
0x27c: V276 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V241, V239, 0x70a08231, V266, 0x20, V269, V270, V269, 0x0, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V241, V239, 0x70a08231, V266, 0x20, V269, V270, V269, 0x0, V239]

================================

Block 0x280
[0x280:0x28c]
---
Predecessors: [0x219]
Successors: [0x28d, 0x291]
---
0x280 JUMPDEST
0x281 PUSH2 0x2c6
0x284 GAS
0x285 SUB
0x286 CALL
0x287 ISZERO
0x288 ISZERO
0x289 PUSH2 0x291
0x28c JUMPI
---
0x280: JUMPDEST 
0x281: V277 = 0x2c6
0x284: V278 = GAS
0x285: V279 = SUB V278 0x2c6
0x286: V280 = CALL V279 V239 0x0 V269 V270 V269 0x20
0x287: V281 = ISZERO V280
0x288: V282 = ISZERO V281
0x289: V283 = 0x291
0x28c: JUMPI 0x291 V282
---
Entry stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V241, V239, 0x70a08231, V266, 0x20, V269, V270, V269, 0x0, V239]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V241, V239, 0x70a08231, V266]

================================

Block 0x28d
[0x28d:0x290]
---
Predecessors: [0x280]
Successors: []
---
0x28d PUSH1 0x0
0x28f DUP1
0x290 REVERT
---
0x28d: V284 = 0x0
0x290: REVERT 0x0 0x0
---
Entry stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V241, V239, 0x70a08231, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V241, V239, 0x70a08231, V266]

================================

Block 0x291
[0x291:0x2e2]
---
Predecessors: [0x280]
Successors: [0x2e3, 0x2e7]
---
0x291 JUMPDEST
0x292 POP
0x293 POP
0x294 POP
0x295 PUSH1 0x40
0x297 MLOAD
0x298 DUP1
0x299 MLOAD
0x29a SWAP1
0x29b POP
0x29c PUSH1 0x0
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 PUSH1 0x20
0x2a3 ADD
0x2a4 MSTORE
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 PUSH1 0xe0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad PUSH4 0xffffffff
0x2b2 DUP6
0x2b3 AND
0x2b4 MUL
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x1
0x2b9 PUSH1 0xa0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be SUB
0x2bf SWAP1
0x2c0 SWAP3
0x2c1 AND
0x2c2 PUSH1 0x4
0x2c4 DUP4
0x2c5 ADD
0x2c6 MSTORE
0x2c7 PUSH1 0x24
0x2c9 DUP3
0x2ca ADD
0x2cb MSTORE
0x2cc PUSH1 0x44
0x2ce ADD
0x2cf PUSH1 0x20
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP1
0x2d5 DUP4
0x2d6 SUB
0x2d7 DUP2
0x2d8 PUSH1 0x0
0x2da DUP8
0x2db DUP1
0x2dc EXTCODESIZE
0x2dd ISZERO
0x2de ISZERO
0x2df PUSH2 0x2e7
0x2e2 JUMPI
---
0x291: JUMPDEST 
0x295: V285 = 0x40
0x297: V286 = M[0x40]
0x299: V287 = M[V286]
0x29c: V288 = 0x0
0x29e: V289 = 0x40
0x2a0: V290 = M[0x40]
0x2a1: V291 = 0x20
0x2a3: V292 = ADD 0x20 V290
0x2a4: M[V292] = 0x0
0x2a5: V293 = 0x40
0x2a7: V294 = M[0x40]
0x2a8: V295 = 0xe0
0x2aa: V296 = 0x2
0x2ac: V297 = EXP 0x2 0xe0
0x2ad: V298 = 0xffffffff
0x2b3: V299 = AND 0xa9059cbb 0xffffffff
0x2b4: V300 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2b6: M[V294] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2b7: V301 = 0x1
0x2b9: V302 = 0xa0
0x2bb: V303 = 0x2
0x2bd: V304 = EXP 0x2 0xa0
0x2be: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c1: V306 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V307 = 0x4
0x2c5: V308 = ADD V294 0x4
0x2c6: M[V308] = V306
0x2c7: V309 = 0x24
0x2ca: V310 = ADD V294 0x24
0x2cb: M[V310] = V287
0x2cc: V311 = 0x44
0x2ce: V312 = ADD 0x44 V294
0x2cf: V313 = 0x20
0x2d1: V314 = 0x40
0x2d3: V315 = M[0x40]
0x2d6: V316 = SUB V312 V315
0x2d8: V317 = 0x0
0x2dc: V318 = EXTCODESIZE V239
0x2dd: V319 = ISZERO V318
0x2de: V320 = ISZERO V319
0x2df: V321 = 0x2e7
0x2e2: JUMPI 0x2e7 V320
---
Entry stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V241, V239, 0x70a08231, V266]
Stack pops: 6
Stack additions: [S5, S4, V312, 0x20, V315, V316, V315, 0x0, S5]
Exit stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V312, 0x20, V315, V316, V315, 0x0, V239]

================================

Block 0x2e3
[0x2e3:0x2e6]
---
Predecessors: [0x291]
Successors: []
---
0x2e3 PUSH1 0x0
0x2e5 DUP1
0x2e6 REVERT
---
0x2e3: V322 = 0x0
0x2e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V312, 0x20, V315, V316, V315, 0x0, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V312, 0x20, V315, V316, V315, 0x0, V239]

================================

Block 0x2e7
[0x2e7:0x2f3]
---
Predecessors: [0x291]
Successors: [0x2f4, 0x2f8]
---
0x2e7 JUMPDEST
0x2e8 PUSH2 0x2c6
0x2eb GAS
0x2ec SUB
0x2ed CALL
0x2ee ISZERO
0x2ef ISZERO
0x2f0 PUSH2 0x2f8
0x2f3 JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V323 = 0x2c6
0x2eb: V324 = GAS
0x2ec: V325 = SUB V324 0x2c6
0x2ed: V326 = CALL V325 V239 0x0 V315 V316 V315 0x20
0x2ee: V327 = ISZERO V326
0x2ef: V328 = ISZERO V327
0x2f0: V329 = 0x2f8
0x2f3: JUMPI 0x2f8 V328
---
Entry stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V312, 0x20, V315, V316, V315, 0x0, V239]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V312]

================================

Block 0x2f4
[0x2f4:0x2f7]
---
Predecessors: [0x2e7]
Successors: []
---
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 REVERT
---
0x2f4: V330 = 0x0
0x2f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V312]

================================

Block 0x2f8
[0x2f8:0x336]
---
Predecessors: [0x2e7]
Successors: [0x337, 0x33b]
---
0x2f8 JUMPDEST
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff DUP1
0x300 MLOAD
0x301 POP
0x302 POP
0x303 PUSH1 0x2
0x305 SLOAD
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e SWAP1
0x30f DUP2
0x310 AND
0x311 SWAP1
0x312 ADDRESS
0x313 AND
0x314 BALANCE
0x315 DUP1
0x316 ISZERO
0x317 PUSH2 0x8fc
0x31a MUL
0x31b SWAP1
0x31c PUSH1 0x40
0x31e MLOAD
0x31f PUSH1 0x0
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 DUP4
0x326 SUB
0x327 DUP2
0x328 DUP6
0x329 DUP9
0x32a DUP9
0x32b CALL
0x32c SWAP4
0x32d POP
0x32e POP
0x32f POP
0x330 POP
0x331 ISZERO
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x2f8: JUMPDEST 
0x2fc: V331 = 0x40
0x2fe: V332 = M[0x40]
0x300: V333 = M[V332]
0x303: V334 = 0x2
0x305: V335 = S[0x2]
0x306: V336 = 0x1
0x308: V337 = 0xa0
0x30a: V338 = 0x2
0x30c: V339 = EXP 0x2 0xa0
0x30d: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x310: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x312: V342 = ADDRESS
0x313: V343 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x314: V344 = BALANCE V343
0x316: V345 = ISZERO V344
0x317: V346 = 0x8fc
0x31a: V347 = MUL 0x8fc V345
0x31c: V348 = 0x40
0x31e: V349 = M[0x40]
0x31f: V350 = 0x0
0x321: V351 = 0x40
0x323: V352 = M[0x40]
0x326: V353 = SUB V349 V352
0x32b: V354 = CALL V347 V341 V344 V352 V353 V352 0x0
0x331: V355 = ISZERO V354
0x332: V356 = ISZERO V355
0x333: V357 = 0x33b
0x336: JUMPI 0x33b V356
---
Entry stack: [V12, 0x196, 0x0, V239, 0xa9059cbb, V312]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x196, 0x0]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x2f8]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V358 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x196, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, 0x0]

================================

Block 0x33b
[0x33b:0x346]
---
Predecessors: [0x2f8]
Successors: []
---
0x33b JUMPDEST
0x33c ADDRESS
0x33d PUSH1 0x1
0x33f PUSH1 0xa0
0x341 PUSH1 0x2
0x343 EXP
0x344 SUB
0x345 AND
0x346 SELFDESTRUCT
---
0x33b: JUMPDEST 
0x33c: V359 = ADDRESS
0x33d: V360 = 0x1
0x33f: V361 = 0xa0
0x341: V362 = 0x2
0x343: V363 = EXP 0x2 0xa0
0x344: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x345: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x346: SELFDESTRUCT V365
---
Entry stack: [V12, 0x196, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, 0x0]

================================

Block 0x347
[0x347:0x349]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x347 JUMPDEST
0x348 SWAP1
0x349 JUMP
---
0x347: JUMPDEST 
0x349: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x34a
[0x34a:0x356]
---
Predecessors: [0x1b3]
Successors: [0x357]
---
0x34a JUMPDEST
0x34b PUSH1 0x0
0x34d SLOAD
0x34e PUSH1 0x1
0x350 PUSH1 0xa0
0x352 PUSH1 0x2
0x354 EXP
0x355 SUB
0x356 AND
---
0x34a: JUMPDEST 
0x34b: V366 = 0x0
0x34d: V367 = S[0x0]
0x34e: V368 = 0x1
0x350: V369 = 0xa0
0x352: V370 = 0x2
0x354: V371 = EXP 0x2 0xa0
0x355: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x356: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
---
Entry stack: [V12, 0x1bb]
Stack pops: 0
Stack additions: [V373]
Exit stack: [V12, 0x1bb, V373]

================================

Block 0x357
[0x357:0x359]
---
Predecessors: [0x34a]
Successors: [0x1bb]
---
0x357 JUMPDEST
0x358 SWAP1
0x359 JUMP
---
0x357: JUMPDEST 
0x359: JUMP 0x1bb
---
Entry stack: [V12, 0x1bb, V373]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V373]

================================

Block 0x35a
[0x35a:0x370]
---
Predecessors: [0x1e2]
Successors: [0x371, 0x375]
---
0x35a JUMPDEST
0x35b PUSH1 0x2
0x35d SLOAD
0x35e CALLER
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 SWAP1
0x368 DUP2
0x369 AND
0x36a SWAP2
0x36b AND
0x36c EQ
0x36d PUSH2 0x375
0x370 JUMPI
---
0x35a: JUMPDEST 
0x35b: V374 = 0x2
0x35d: V375 = S[0x2]
0x35e: V376 = CALLER
0x35f: V377 = 0x1
0x361: V378 = 0xa0
0x363: V379 = 0x2
0x365: V380 = EXP 0x2 0xa0
0x366: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x369: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x36b: V383 = AND V375 0xffffffffffffffffffffffffffffffffffffffff
0x36c: V384 = EQ V383 V382
0x36d: V385 = 0x375
0x370: JUMPI 0x375 V384
---
Entry stack: [V12, 0x181, V212, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x181, V212, V214]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x35a]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V386 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V12, 0x181, V212, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x181, V212, V214]

================================

Block 0x375
[0x375:0x3b2]
---
Predecessors: [0x35a]
Successors: [0x3b3]
---
0x375 JUMPDEST
0x376 PUSH1 0x1
0x378 DUP1
0x379 SLOAD
0x37a PUSH1 0x1
0x37c PUSH1 0xa0
0x37e PUSH1 0x2
0x380 EXP
0x381 SUB
0x382 DUP5
0x383 AND
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 NOT
0x39a SWAP2
0x39b DUP3
0x39c AND
0x39d DUP2
0x39e OR
0x39f SWAP1
0x3a0 SWAP3
0x3a1 SSTORE
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 SLOAD
0x3a6 SWAP1
0x3a7 SWAP2
0x3a8 AND
0x3a9 SWAP1
0x3aa SWAP2
0x3ab OR
0x3ac SWAP1
0x3ad SSTORE
0x3ae PUSH1 0x3
0x3b0 DUP2
0x3b1 SWAP1
0x3b2 SSTORE
---
0x375: JUMPDEST 
0x376: V387 = 0x1
0x379: V388 = S[0x1]
0x37a: V389 = 0x1
0x37c: V390 = 0xa0
0x37e: V391 = 0x2
0x380: V392 = EXP 0x2 0xa0
0x381: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x383: V394 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x384: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V396 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V397 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V388
0x39e: V398 = OR V394 V397
0x3a1: S[0x1] = V398
0x3a2: V399 = 0x0
0x3a5: V400 = S[0x0]
0x3a8: V401 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V400
0x3ab: V402 = OR V394 V401
0x3ad: S[0x0] = V402
0x3ae: V403 = 0x3
0x3b2: S[0x3] = V214
---
Entry stack: [V12, 0x181, V212, V214]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x181, V212, V214]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x375]
Successors: [0x181]
---
0x3b3 JUMPDEST
0x3b4 POP
0x3b5 POP
0x3b6 JUMP
---
0x3b3: JUMPDEST 
0x3b6: JUMP 0x181
---
Entry stack: [V12, 0x181, V212, V214]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b7
[0x3b7:0x3e2]
---
Predecessors: []
Successors: []
---
0x3b7 STOP
0x3b8 LOG1
0x3b9 PUSH6 0x627a7a723058
0x3c0 SHA3
0x3c1 MISSING 0xd2
0x3c2 PUSH21 0xe782adb604fa97d5535b2f3eab334720f88c72db81
0x3d8 DUP14
0x3d9 DUP6
0x3da CALLCODE
0x3db AND
0x3dc JUMP
0x3dd MISSING 0xc8
0x3de ORIGIN
0x3df MISSING 0xb9
0x3e0 MISSING 0x4d
0x3e1 STOP
0x3e2 MISSING 0x29
---
0x3b7: STOP 
0x3b8: LOG S0 S1 S2
0x3b9: V404 = 0x627a7a723058
0x3c0: V405 = SHA3 0x627a7a723058 S3
0x3c1: MISSING 0xd2
0x3c2: V406 = 0xe782adb604fa97d5535b2f3eab334720f88c72db81
0x3da: V407 = CALLCODE S3 S12 0xe782adb604fa97d5535b2f3eab334720f88c72db81 S0 S1 S2 S3
0x3db: V408 = AND V407 S4
0x3dc: JUMP V408
0x3dd: MISSING 0xc8
0x3de: V409 = ORIGIN
0x3df: MISSING 0xb9
0x3e0: MISSING 0x4d
0x3e1: STOP 
0x3e2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V405, S5, S6, S7, S8, S9, S10, S11, S12, V409]
Exit stack: []

================================

Function 0:
Public function signature: 0x4bb278f3
Entry block: 0x183
Exit block: 0x337
Body: 0x183, 0x18a, 0x18e, 0x1fb, 0x215, 0x219, 0x27c, 0x280, 0x28d, 0x291, 0x2e3, 0x2e7, 0x2f4, 0x2f8, 0x337, 0x33b

Function 1:
Public function signature: 0xae3cc04f
Entry block: 0x1a8
Exit block: 0x1bb
Body: 0x1a8, 0x1af, 0x1b3, 0x1bb, 0x34a, 0x357

Function 2:
Public function signature: 0xe151834b
Entry block: 0x1d7
Exit block: 0x181
Body: 0x181, 0x1d7, 0x1de, 0x1e2, 0x35a, 0x371, 0x375, 0x3b3

Function 3:
Public fallback function
Entry block: 0x3b
Exit block: 0x181
Body: 0x3b, 0x3c, 0x47, 0x4b, 0x57, 0x58, 0x5f, 0x63, 0x6f, 0x70, 0xc9, 0xcd, 0xda, 0xde, 0xf0, 0xf4, 0x117, 0x118, 0x161, 0x165, 0x172, 0x176, 0x181

