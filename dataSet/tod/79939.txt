Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x27]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x27
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x27
0x9: JUMPI 0x27 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x1c]
---
Predecessors: [0x0]
Successors: [0x1d, 0x5b]
---
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 PUSH4 0x18bee97e
0x18 DUP2
0x19 EQ
0x1a PUSH1 0x5b
0x1c JUMPI
---
0xa: V5 = 0xe0
0xc: V6 = 0x2
0xe: V7 = EXP 0x2 0xe0
0xf: V8 = 0x0
0x11: V9 = CALLDATALOAD 0x0
0x12: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x13: V11 = 0x18bee97e
0x19: V12 = EQ V10 0x18bee97e
0x1a: V13 = 0x5b
0x1c: JUMPI 0x5b V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1d
[0x1d:0x26]
---
Predecessors: [0xa]
Successors: [0x27, 0x70]
---
0x1d DUP1
0x1e PUSH4 0x6b9f96ea
0x23 EQ
0x24 PUSH1 0x70
0x26 JUMPI
---
0x1e: V14 = 0x6b9f96ea
0x23: V15 = EQ 0x6b9f96ea V10
0x24: V16 = 0x70
0x26: JUMPI 0x70 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x27
[0x27:0x57]
---
Predecessors: [0x0, 0x1d]
Successors: [0x58, 0xad]
---
0x27 JUMPDEST
0x28 PUSH1 0xab
0x2a PUSH1 0x0
0x2c DUP1
0x2d SLOAD
0x2e PUSH1 0x40
0x30 MLOAD
0x31 PUSH1 0x1
0x33 PUSH1 0xa0
0x35 PUSH1 0x2
0x37 EXP
0x38 SUB
0x39 SWAP1
0x3a SWAP2
0x3b AND
0x3c SWAP2
0x3d CALLVALUE
0x3e DUP1
0x3f ISZERO
0x40 PUSH2 0x8fc
0x43 MUL
0x44 SWAP3
0x45 SWAP1
0x46 SWAP2
0x47 DUP2
0x48 DUP2
0x49 DUP2
0x4a DUP6
0x4b DUP9
0x4c DUP9
0x4d CALL
0x4e SWAP4
0x4f POP
0x50 POP
0x51 POP
0x52 POP
0x53 ISZERO
0x54 ISZERO
0x55 PUSH1 0xad
0x57 JUMPI
---
0x27: JUMPDEST 
0x28: V17 = 0xab
0x2a: V18 = 0x0
0x2d: V19 = S[0x0]
0x2e: V20 = 0x40
0x30: V21 = M[0x40]
0x31: V22 = 0x1
0x33: V23 = 0xa0
0x35: V24 = 0x2
0x37: V25 = EXP 0x2 0xa0
0x38: V26 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b: V27 = AND V19 0xffffffffffffffffffffffffffffffffffffffff
0x3d: V28 = CALLVALUE
0x3f: V29 = ISZERO V28
0x40: V30 = 0x8fc
0x43: V31 = MUL 0x8fc V29
0x4d: V32 = CALL V31 V27 V28 V21 0x0 V21 0x0
0x53: V33 = ISZERO V32
0x54: V34 = ISZERO V33
0x55: V35 = 0xad
0x57: JUMPI 0xad V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab]
Exit stack: [V10, 0xab]

================================

Block 0x58
[0x58:0x5a]
---
Predecessors: [0x27]
Successors: []
---
0x58 PUSH1 0x2
0x5a JUMP
---
0x58: V36 = 0x2
0x5a: THROW 
---
Entry stack: [V10, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab]

================================

Block 0x5b
[0x5b:0x5f]
---
Predecessors: [0xa]
Successors: [0x60]
---
0x5b JUMPDEST
0x5c CALLVALUE
0x5d PUSH1 0x2
0x5f JUMPI
---
0x5b: JUMPDEST 
0x5c: V37 = CALLVALUE
0x5d: V38 = 0x2
0x5f: THROWI V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6f]
---
Predecessors: [0x5b]
Successors: [0xaf]
---
0x60 PUSH1 0xaf
0x62 PUSH1 0x0
0x64 SLOAD
0x65 PUSH1 0x1
0x67 PUSH1 0xa0
0x69 PUSH1 0x2
0x6b EXP
0x6c SUB
0x6d AND
0x6e DUP2
0x6f JUMP
---
0x60: V39 = 0xaf
0x62: V40 = 0x0
0x64: V41 = S[0x0]
0x65: V42 = 0x1
0x67: V43 = 0xa0
0x69: V44 = 0x2
0x6b: V45 = EXP 0x2 0xa0
0x6c: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x6f: JUMP 0xaf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xaf, V47]
Exit stack: [V10, 0xaf, V47]

================================

Block 0x70
[0x70:0x74]
---
Predecessors: [0x1d]
Successors: [0x75]
---
0x70 JUMPDEST
0x71 CALLVALUE
0x72 PUSH1 0x2
0x74 JUMPI
---
0x70: JUMPDEST 
0x71: V48 = CALLVALUE
0x72: V49 = 0x2
0x74: THROWI V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x75
[0x75:0xa7]
---
Predecessors: [0x70]
Successors: [0xa8, 0xad]
---
0x75 PUSH1 0x0
0x77 DUP1
0x78 SLOAD
0x79 PUSH1 0x40
0x7b MLOAD
0x7c PUSH1 0xab
0x7e SWAP3
0x7f PUSH1 0x1
0x81 PUSH1 0xa0
0x83 PUSH1 0x2
0x85 EXP
0x86 SUB
0x87 SWAP3
0x88 DUP4
0x89 AND
0x8a SWAP3
0x8b ADDRESS
0x8c AND
0x8d BALANCE
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x8fc
0x93 MUL
0x94 SWAP3
0x95 SWAP1
0x96 SWAP2
0x97 DUP2
0x98 DUP2
0x99 DUP2
0x9a DUP6
0x9b DUP9
0x9c DUP9
0x9d CALL
0x9e SWAP4
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 ISZERO
0xa4 ISZERO
0xa5 PUSH1 0xad
0xa7 JUMPI
---
0x75: V50 = 0x0
0x78: V51 = S[0x0]
0x79: V52 = 0x40
0x7b: V53 = M[0x40]
0x7c: V54 = 0xab
0x7f: V55 = 0x1
0x81: V56 = 0xa0
0x83: V57 = 0x2
0x85: V58 = EXP 0x2 0xa0
0x86: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x8b: V61 = ADDRESS
0x8c: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V63 = BALANCE V62
0x8f: V64 = ISZERO V63
0x90: V65 = 0x8fc
0x93: V66 = MUL 0x8fc V64
0x9d: V67 = CALL V66 V60 V63 V53 0x0 V53 0x0
0xa3: V68 = ISZERO V67
0xa4: V69 = ISZERO V68
0xa5: V70 = 0xad
0xa7: JUMPI 0xad V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab]
Exit stack: [V10, 0xab]

================================

Block 0xa8
[0xa8:0xaa]
---
Predecessors: [0x75]
Successors: []
---
0xa8 PUSH1 0x2
0xaa JUMP
---
0xa8: V71 = 0x2
0xaa: THROW 
---
Entry stack: [V10, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0xad]
Successors: []
---
0xab JUMPDEST
0xac STOP
---
0xab: JUMPDEST 
0xac: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0x27, 0x75]
Successors: [0xab]
---
0xad JUMPDEST
0xae JUMP
---
0xad: JUMPDEST 
0xae: JUMP 0xab
---
Entry stack: [V10, 0xab]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xaf
[0xaf:0xcb]
---
Predecessors: [0x60]
Successors: []
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 DUP1
0xb3 MLOAD
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc SWAP3
0xbd SWAP1
0xbe SWAP3
0xbf AND
0xc0 DUP3
0xc1 MSTORE
0xc2 MLOAD
0xc3 SWAP1
0xc4 DUP2
0xc5 SWAP1
0xc6 SUB
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP1
0xcb RETURN
---
0xaf: JUMPDEST 
0xb0: V72 = 0x40
0xb3: V73 = M[0x40]
0xb4: V74 = 0x1
0xb6: V75 = 0xa0
0xb8: V76 = 0x2
0xba: V77 = EXP 0x2 0xa0
0xbb: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xc1: M[V73] = V79
0xc2: V80 = M[0x40]
0xc6: V81 = SUB V73 V80
0xc7: V82 = 0x20
0xc9: V83 = ADD 0x20 V81
0xcb: RETURN V80 V83
---
Entry stack: [V10, 0xaf, V47]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xaf]

================================

Function 0:
Public function signature: 0x18bee97e
Entry block: 0x5b
Exit block: 0xaf
Body: 0x5b, 0x60, 0xaf

Function 1:
Public function signature: 0x6b9f96ea
Entry block: 0x70
Exit block: 0xab
Body: 0x70, 0x75, 0xab

Function 2:
Public fallback function
Entry block: 0x27
Exit block: 0xab
Body: 0x27, 0xab

