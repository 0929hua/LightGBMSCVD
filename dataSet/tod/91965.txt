Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x7e]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x88a8d602
0x3a EQ
0x3b PUSH2 0x7e
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x88a8d602
0x3a: V12 = EQ 0x88a8d602 V10
0x3b: V13 = 0x7e
0x3e: JUMPI 0x7e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x93]
---
0x3f DUP1
0x40 PUSH4 0x94a2301e
0x45 EQ
0x46 PUSH2 0x93
0x49 JUMPI
---
0x40: V14 = 0x94a2301e
0x45: V15 = EQ 0x94a2301e V10
0x46: V16 = 0x93
0x49: JUMPI 0x93 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xbc]
---
0x4a DUP1
0x4b PUSH4 0x974c86b5
0x50 EQ
0x51 PUSH2 0xbc
0x54 JUMPI
---
0x4b: V17 = 0x974c86b5
0x50: V18 = EQ 0x974c86b5 V10
0x51: V19 = 0xbc
0x54: JUMPI 0xbc V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0xc6]
---
0x55 DUP1
0x56 PUSH4 0x9d63848a
0x5b EQ
0x5c PUSH2 0xc6
0x5f JUMPI
---
0x56: V20 = 0x9d63848a
0x5b: V21 = EQ 0x9d63848a V10
0x5c: V22 = 0xc6
0x5f: JUMPI 0xc6 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x11b]
---
0x60 DUP1
0x61 PUSH4 0xdab8263a
0x66 EQ
0x67 PUSH2 0x11b
0x6a JUMPI
---
0x61: V23 = 0xdab8263a
0x66: V24 = EQ 0xdab8263a V10
0x67: V25 = 0x11b
0x6a: JUMPI 0x11b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x144]
---
0x6b DUP1
0x6c PUSH4 0xe4849b32
0x71 EQ
0x72 PUSH2 0x144
0x75 JUMPI
---
0x6c: V26 = 0xe4849b32
0x71: V27 = EQ 0xe4849b32 V10
0x72: V28 = 0x144
0x75: JUMPI 0x144 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x76]
---
Predecessors: [0x0, 0x6b]
Successors: [0x77]
---
0x76 JUMPDEST
---
0x76: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x77
[0x77:0x7b]
---
Predecessors: [0x76]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x0
0x7a DUP1
0x7b REVERT
---
0x77: JUMPDEST 
0x78: V29 = 0x0
0x7b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: []
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7e
[0x7e:0x84]
---
Predecessors: [0xb]
Successors: [0x85, 0x89]
---
0x7e JUMPDEST
0x7f CALLVALUE
0x80 ISZERO
0x81 PUSH2 0x89
0x84 JUMPI
---
0x7e: JUMPDEST 
0x7f: V30 = CALLVALUE
0x80: V31 = ISZERO V30
0x81: V32 = 0x89
0x84: JUMPI 0x89 V31
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x85
[0x85:0x88]
---
Predecessors: [0x7e]
Successors: []
---
0x85 PUSH1 0x0
0x87 DUP1
0x88 REVERT
---
0x85: V33 = 0x0
0x88: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x89
[0x89:0x90]
---
Predecessors: [0x7e]
Successors: [0x167]
---
0x89 JUMPDEST
0x8a PUSH2 0x91
0x8d PUSH2 0x167
0x90 JUMP
---
0x89: JUMPDEST 
0x8a: V34 = 0x91
0x8d: V35 = 0x167
0x90: JUMP 0x167
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x91]
Exit stack: [V10, 0x91]

================================

Block 0x91
[0x91:0x92]
---
Predecessors: []
Successors: []
---
0x91 JUMPDEST
0x92 STOP
---
0x91: JUMPDEST 
0x92: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x93
[0x93:0x99]
---
Predecessors: [0x3f]
Successors: [0x9a, 0x9e]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x93: JUMPDEST 
0x94: V36 = CALLVALUE
0x95: V37 = ISZERO V36
0x96: V38 = 0x9e
0x99: JUMPI 0x9e V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x93]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V39 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9e
[0x9e:0xa5]
---
Predecessors: [0x93]
Successors: [0x241]
---
0x9e JUMPDEST
0x9f PUSH2 0xa6
0xa2 PUSH2 0x241
0xa5 JUMP
---
0x9e: JUMPDEST 
0x9f: V40 = 0xa6
0xa2: V41 = 0x241
0xa5: JUMP 0x241
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa6]
Exit stack: [V10, 0xa6]

================================

Block 0xa6
[0xa6:0xbb]
---
Predecessors: [0x241]
Successors: []
---
0xa6 JUMPDEST
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab DUP3
0xac DUP2
0xad MSTORE
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP2
0xb2 POP
0xb3 POP
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 SWAP2
0xb9 SUB
0xba SWAP1
0xbb RETURN
---
0xa6: JUMPDEST 
0xa7: V42 = 0x40
0xa9: V43 = M[0x40]
0xad: M[V43] = V136
0xae: V44 = 0x20
0xb0: V45 = ADD 0x20 V43
0xb4: V46 = 0x40
0xb6: V47 = M[0x40]
0xb9: V48 = SUB V45 V47
0xbb: RETURN V47 V48
---
Entry stack: [V10, 0xa6, V136]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xa6]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0x4a]
Successors: [0x247]
---
0xbc JUMPDEST
0xbd PUSH2 0xc4
0xc0 PUSH2 0x247
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V49 = 0xc4
0xc0: V50 = 0x247
0xc3: JUMP 0x247
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V10, 0xc4]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0x406]
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0x55]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V51 = CALLVALUE
0xc8: V52 = ISZERO V51
0xc9: V53 = 0xd1
0xcc: JUMPI 0xd1 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V54 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd1
[0xd1:0xd8]
---
Predecessors: [0xc6]
Successors: [0x409]
---
0xd1 JUMPDEST
0xd2 PUSH2 0xd9
0xd5 PUSH2 0x409
0xd8 JUMP
---
0xd1: JUMPDEST 
0xd2: V55 = 0xd9
0xd5: V56 = 0x409
0xd8: JUMP 0x409
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd9]
Exit stack: [V10, 0xd9]

================================

Block 0xd9
[0xd9:0x11a]
---
Predecessors: [0x409]
Successors: []
---
0xd9 JUMPDEST
0xda PUSH1 0x40
0xdc MLOAD
0xdd DUP1
0xde DUP3
0xdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4 AND
0xf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a AND
0x10b DUP2
0x10c MSTORE
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP2
0x111 POP
0x112 POP
0x113 PUSH1 0x40
0x115 MLOAD
0x116 DUP1
0x117 SWAP2
0x118 SUB
0x119 SWAP1
0x11a RETURN
---
0xd9: JUMPDEST 
0xda: V57 = 0x40
0xdc: V58 = M[0x40]
0xdf: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0xf5: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x10c: M[V58] = V62
0x10d: V63 = 0x20
0x10f: V64 = ADD 0x20 V58
0x113: V65 = 0x40
0x115: V66 = M[0x40]
0x118: V67 = SUB V64 V66
0x11a: RETURN V66 V67
---
Entry stack: [V10, 0xd9, V249]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xd9]

================================

Block 0x11b
[0x11b:0x121]
---
Predecessors: [0x60]
Successors: [0x122, 0x126]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d ISZERO
0x11e PUSH2 0x126
0x121 JUMPI
---
0x11b: JUMPDEST 
0x11c: V68 = CALLVALUE
0x11d: V69 = ISZERO V68
0x11e: V70 = 0x126
0x121: JUMPI 0x126 V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x11b]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V71 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x126
[0x126:0x12d]
---
Predecessors: [0x11b]
Successors: [0x42f]
---
0x126 JUMPDEST
0x127 PUSH2 0x12e
0x12a PUSH2 0x42f
0x12d JUMP
---
0x126: JUMPDEST 
0x127: V72 = 0x12e
0x12a: V73 = 0x42f
0x12d: JUMP 0x42f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12e]
Exit stack: [V10, 0x12e]

================================

Block 0x12e
[0x12e:0x143]
---
Predecessors: [0x42f]
Successors: []
---
0x12e JUMPDEST
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 DUP3
0x134 DUP2
0x135 MSTORE
0x136 PUSH1 0x20
0x138 ADD
0x139 SWAP2
0x13a POP
0x13b POP
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP1
0x140 SWAP2
0x141 SUB
0x142 SWAP1
0x143 RETURN
---
0x12e: JUMPDEST 
0x12f: V74 = 0x40
0x131: V75 = M[0x40]
0x135: M[V75] = V251
0x136: V76 = 0x20
0x138: V77 = ADD 0x20 V75
0x13c: V78 = 0x40
0x13e: V79 = M[0x40]
0x141: V80 = SUB V77 V79
0x143: RETURN V79 V80
---
Entry stack: [V10, 0x12e, V251]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12e]

================================

Block 0x144
[0x144:0x14a]
---
Predecessors: [0x6b]
Successors: [0x14b, 0x14f]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x144: JUMPDEST 
0x145: V81 = CALLVALUE
0x146: V82 = ISZERO V81
0x147: V83 = 0x14f
0x14a: JUMPI 0x14f V82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x144]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V84 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14f
[0x14f:0x164]
---
Predecessors: [0x144]
Successors: [0x435]
---
0x14f JUMPDEST
0x150 PUSH2 0x165
0x153 PUSH1 0x4
0x155 DUP1
0x156 DUP1
0x157 CALLDATALOAD
0x158 SWAP1
0x159 PUSH1 0x20
0x15b ADD
0x15c SWAP1
0x15d SWAP2
0x15e SWAP1
0x15f POP
0x160 POP
0x161 PUSH2 0x435
0x164 JUMP
---
0x14f: JUMPDEST 
0x150: V85 = 0x165
0x153: V86 = 0x4
0x157: V87 = CALLDATALOAD 0x4
0x159: V88 = 0x20
0x15b: V89 = ADD 0x20 0x4
0x161: V90 = 0x435
0x164: JUMP 0x435
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x165, V87]
Exit stack: [V10, 0x165, V87]

================================

Block 0x165
[0x165:0x166]
---
Predecessors: [0x6e1]
Successors: []
---
0x165 JUMPDEST
0x166 STOP
---
0x165: JUMPDEST 
0x166: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x167
[0x167:0x1bd]
---
Predecessors: [0x89]
Successors: [0x1be, 0x1c2]
---
0x167 JUMPDEST
0x168 PUSH1 0x0
0x16a DUP1
0x16b SWAP1
0x16c SLOAD
0x16d SWAP1
0x16e PUSH2 0x100
0x171 EXP
0x172 SWAP1
0x173 DIV
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 CALLER
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 EQ
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x167: JUMPDEST 
0x168: V91 = 0x0
0x16c: V92 = S[0x0]
0x16e: V93 = 0x100
0x171: V94 = EXP 0x100 0x0
0x173: V95 = DIV V92 0x1
0x174: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x18a: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1a0: V100 = CALLER
0x1a1: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1b7: V103 = EQ V102 V99
0x1b8: V104 = ISZERO V103
0x1b9: V105 = ISZERO V104
0x1ba: V106 = 0x1c2
0x1bd: JUMPI 0x1c2 V105
---
Entry stack: [V10, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x91]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x167]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V107 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x91]

================================

Block 0x1c2
[0x1c2:0x1fe]
---
Predecessors: [0x167]
Successors: [0x1ff, 0x238]
---
0x1c2 JUMPDEST
0x1c3 CALLER
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da PUSH2 0x8fc
0x1dd PUSH1 0x2
0x1df SLOAD
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 ISZERO
0x1e3 MUL
0x1e4 SWAP1
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 PUSH1 0x0
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee DUP4
0x1ef SUB
0x1f0 DUP2
0x1f1 DUP6
0x1f2 DUP9
0x1f3 DUP9
0x1f4 CALL
0x1f5 SWAP4
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa ISZERO
0x1fb PUSH2 0x238
0x1fe JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V108 = CALLER
0x1c4: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1da: V111 = 0x8fc
0x1dd: V112 = 0x2
0x1df: V113 = S[0x2]
0x1e2: V114 = ISZERO V113
0x1e3: V115 = MUL V114 0x8fc
0x1e5: V116 = 0x40
0x1e7: V117 = M[0x40]
0x1e8: V118 = 0x0
0x1ea: V119 = 0x40
0x1ec: V120 = M[0x40]
0x1ef: V121 = SUB V117 V120
0x1f4: V122 = CALL V115 V110 V113 V120 V121 V120 0x0
0x1fa: V123 = ISZERO V122
0x1fb: V124 = 0x238
0x1fe: JUMPI 0x238 V123
---
Entry stack: [V10, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x91]

================================

Block 0x1ff
[0x1ff:0x237]
---
Predecessors: [0x1c2]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 SWAP1
0x203 SLOAD
0x204 SWAP1
0x205 PUSH2 0x100
0x208 EXP
0x209 SWAP1
0x20a DIV
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 SELFDESTRUCT
---
0x1ff: V125 = 0x0
0x203: V126 = S[0x0]
0x205: V127 = 0x100
0x208: V128 = EXP 0x100 0x0
0x20a: V129 = DIV V126 0x1
0x20b: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x221: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x237: SELFDESTRUCT V133
---
Entry stack: [V10, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x91]

================================

Block 0x238
[0x238:0x23c]
---
Predecessors: [0x1c2]
Successors: []
---
0x238 JUMPDEST
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x238: JUMPDEST 
0x239: V134 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x91]

================================

Block 0x23d
[0x23d:0x23d]
---
Predecessors: []
Successors: [0x23e]
---
0x23d JUMPDEST
---
0x23d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23e
[0x23e:0x23e]
---
Predecessors: [0x23d]
Successors: [0x23f]
---
0x23e JUMPDEST
---
0x23e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23f
[0x23f:0x240]
---
Predecessors: [0x23e]
Successors: []
Has unresolved jump.
---
0x23f JUMPDEST
0x240 JUMP
---
0x23f: JUMPDEST 
0x240: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x241
[0x241:0x246]
---
Predecessors: [0x9e]
Successors: [0xa6]
---
0x241 JUMPDEST
0x242 PUSH1 0x4
0x244 SLOAD
0x245 DUP2
0x246 JUMP
---
0x241: JUMPDEST 
0x242: V135 = 0x4
0x244: V136 = S[0x4]
0x246: JUMP 0xa6
---
Entry stack: [V10, 0xa6]
Stack pops: 1
Stack additions: [S0, V136]
Exit stack: [V10, 0xa6, V136]

================================

Block 0x247
[0x247:0x25b]
---
Predecessors: [0xbc]
Successors: [0x25c, 0x269]
---
0x247 JUMPDEST
0x248 PUSH1 0x0
0x24a CALLVALUE
0x24b PUSH1 0x5
0x24d DUP2
0x24e SWAP1
0x24f SSTORE
0x250 POP
0x251 PUSH1 0x0
0x253 PUSH1 0x2
0x255 SLOAD
0x256 EQ
0x257 ISZERO
0x258 PUSH2 0x269
0x25b JUMPI
---
0x247: JUMPDEST 
0x248: V137 = 0x0
0x24a: V138 = CALLVALUE
0x24b: V139 = 0x5
0x24f: S[0x5] = V138
0x251: V140 = 0x0
0x253: V141 = 0x2
0x255: V142 = S[0x2]
0x256: V143 = EQ V142 0x0
0x257: V144 = ISZERO V143
0x258: V145 = 0x269
0x25b: JUMPI 0x269 V144
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xc4, 0x0]

================================

Block 0x25c
[0x25c:0x268]
---
Predecessors: [0x247]
Successors: [0x405]
---
0x25c PUSH1 0x5
0x25e SLOAD
0x25f PUSH1 0x2
0x261 DUP2
0x262 SWAP1
0x263 SSTORE
0x264 POP
0x265 PUSH2 0x405
0x268 JUMP
---
0x25c: V146 = 0x5
0x25e: V147 = S[0x5]
0x25f: V148 = 0x2
0x263: S[0x2] = V147
0x265: V149 = 0x405
0x268: JUMP 0x405
---
Entry stack: [V10, 0xc4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4, 0x0]

================================

Block 0x269
[0x269:0x282]
---
Predecessors: [0x247]
Successors: [0x6e5]
---
0x269 JUMPDEST
0x26a PUSH1 0x5
0x26c SLOAD
0x26d PUSH1 0x2
0x26f PUSH1 0x0
0x271 DUP3
0x272 DUP3
0x273 SLOAD
0x274 ADD
0x275 SWAP3
0x276 POP
0x277 POP
0x278 DUP2
0x279 SWAP1
0x27a SSTORE
0x27b POP
0x27c PUSH2 0x283
0x27f PUSH2 0x6e5
0x282 JUMP
---
0x269: JUMPDEST 
0x26a: V150 = 0x5
0x26c: V151 = S[0x5]
0x26d: V152 = 0x2
0x26f: V153 = 0x0
0x273: V154 = S[0x2]
0x274: V155 = ADD V154 V151
0x27a: S[0x2] = V155
0x27c: V156 = 0x283
0x27f: V157 = 0x6e5
0x282: JUMP 0x6e5
---
Entry stack: [V10, 0xc4, 0x0]
Stack pops: 0
Stack additions: [0x283]
Exit stack: [V10, 0xc4, 0x0, 0x283]

================================

Block 0x283
[0x283:0x28d]
---
Predecessors: [0x768]
Successors: [0x76a]
---
0x283 JUMPDEST
0x284 PUSH2 0x28e
0x287 PUSH1 0x5
0x289 SLOAD
0x28a PUSH2 0x76a
0x28d JUMP
---
0x283: JUMPDEST 
0x284: V158 = 0x28e
0x287: V159 = 0x5
0x289: V160 = S[0x5]
0x28a: V161 = 0x76a
0x28d: JUMP 0x76a
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: [0x28e, V160]
Exit stack: [V10, S2, S1, S0, 0x28e, V160]

================================

Block 0x28e
[0x28e:0x34f]
---
Predecessors: [0x787]
Successors: [0x350, 0x354]
---
0x28e JUMPDEST
0x28f SWAP1
0x290 POP
0x291 PUSH1 0x6
0x293 PUSH1 0x0
0x295 SWAP1
0x296 SLOAD
0x297 SWAP1
0x298 PUSH2 0x100
0x29b EXP
0x29c SWAP1
0x29d DIV
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca PUSH4 0xa9059cbb
0x2cf CALLER
0x2d0 DUP4
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP4
0x2d5 PUSH4 0xffffffff
0x2da AND
0x2db PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2f9 MUL
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x4
0x2fe ADD
0x2ff DUP1
0x300 DUP4
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d DUP2
0x32e MSTORE
0x32f PUSH1 0x20
0x331 ADD
0x332 DUP3
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x20
0x337 ADD
0x338 SWAP3
0x339 POP
0x33a POP
0x33b POP
0x33c PUSH1 0x0
0x33e PUSH1 0x40
0x340 MLOAD
0x341 DUP1
0x342 DUP4
0x343 SUB
0x344 DUP2
0x345 PUSH1 0x0
0x347 DUP8
0x348 DUP1
0x349 EXTCODESIZE
0x34a ISZERO
0x34b ISZERO
0x34c PUSH2 0x354
0x34f JUMPI
---
0x28e: JUMPDEST 
0x291: V162 = 0x6
0x293: V163 = 0x0
0x296: V164 = S[0x6]
0x298: V165 = 0x100
0x29b: V166 = EXP 0x100 0x0
0x29d: V167 = DIV V164 0x1
0x29e: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2b4: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2ca: V172 = 0xa9059cbb
0x2cf: V173 = CALLER
0x2d1: V174 = 0x40
0x2d3: V175 = M[0x40]
0x2d5: V176 = 0xffffffff
0x2da: V177 = AND 0xffffffff 0xa9059cbb
0x2db: V178 = 0x100000000000000000000000000000000000000000000000000000000
0x2f9: V179 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2fb: M[V175] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2fc: V180 = 0x4
0x2fe: V181 = ADD 0x4 V175
0x301: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x317: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x32e: M[V181] = V185
0x32f: V186 = 0x20
0x331: V187 = ADD 0x20 V181
0x334: M[V187] = V437
0x335: V188 = 0x20
0x337: V189 = ADD 0x20 V187
0x33c: V190 = 0x0
0x33e: V191 = 0x40
0x340: V192 = M[0x40]
0x343: V193 = SUB V189 V192
0x345: V194 = 0x0
0x349: V195 = EXTCODESIZE V171
0x34a: V196 = ISZERO V195
0x34b: V197 = ISZERO V196
0x34c: V198 = 0x354
0x34f: JUMPI 0x354 V197
---
Entry stack: [V10, S3, S2, S1, V437]
Stack pops: 2
Stack additions: [S0, V171, 0xa9059cbb, V189, 0x0, V192, V193, V192, 0x0, V171]
Exit stack: [V10, S3, S2, V437, V171, 0xa9059cbb, V189, 0x0, V192, V193, V192, 0x0, V171]

================================

Block 0x350
[0x350:0x353]
---
Predecessors: [0x28e]
Successors: []
---
0x350 PUSH1 0x0
0x352 DUP1
0x353 REVERT
---
0x350: V199 = 0x0
0x353: REVERT 0x0 0x0
---
Entry stack: [V10, S11, S10, V437, V171, 0xa9059cbb, V189, 0x0, V192, V193, V192, 0x0, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, S10, V437, V171, 0xa9059cbb, V189, 0x0, V192, V193, V192, 0x0, V171]

================================

Block 0x354
[0x354:0x360]
---
Predecessors: [0x28e]
Successors: [0x361, 0x365]
---
0x354 JUMPDEST
0x355 PUSH2 0x2c6
0x358 GAS
0x359 SUB
0x35a CALL
0x35b ISZERO
0x35c ISZERO
0x35d PUSH2 0x365
0x360 JUMPI
---
0x354: JUMPDEST 
0x355: V200 = 0x2c6
0x358: V201 = GAS
0x359: V202 = SUB V201 0x2c6
0x35a: V203 = CALL V202 V171 0x0 V192 V193 V192 0x0
0x35b: V204 = ISZERO V203
0x35c: V205 = ISZERO V204
0x35d: V206 = 0x365
0x360: JUMPI 0x365 V205
---
Entry stack: [V10, S11, S10, V437, V171, 0xa9059cbb, V189, 0x0, V192, V193, V192, 0x0, V171]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S11, S10, V437, V171, 0xa9059cbb, V189]

================================

Block 0x361
[0x361:0x364]
---
Predecessors: [0x354]
Successors: []
---
0x361 PUSH1 0x0
0x363 DUP1
0x364 REVERT
---
0x361: V207 = 0x0
0x364: REVERT 0x0 0x0
---
Entry stack: [V10, S5, S4, V437, V171, 0xa9059cbb, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, V437, V171, 0xa9059cbb, V189]

================================

Block 0x365
[0x365:0x404]
---
Predecessors: [0x354]
Successors: [0x405]
---
0x365 JUMPDEST
0x366 POP
0x367 POP
0x368 POP
0x369 PUSH1 0x5
0x36b SLOAD
0x36c PUSH1 0x8
0x36e PUSH1 0x0
0x370 CALLER
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d DUP2
0x39e MSTORE
0x39f PUSH1 0x20
0x3a1 ADD
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 MSTORE
0x3a5 PUSH1 0x20
0x3a7 ADD
0x3a8 PUSH1 0x0
0x3aa SHA3
0x3ab PUSH1 0x0
0x3ad DUP3
0x3ae DUP3
0x3af SLOAD
0x3b0 ADD
0x3b1 SWAP3
0x3b2 POP
0x3b3 POP
0x3b4 DUP2
0x3b5 SWAP1
0x3b6 SSTORE
0x3b7 POP
0x3b8 DUP1
0x3b9 PUSH1 0x7
0x3bb PUSH1 0x0
0x3bd CALLER
0x3be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d3 AND
0x3d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e9 AND
0x3ea DUP2
0x3eb MSTORE
0x3ec PUSH1 0x20
0x3ee ADD
0x3ef SWAP1
0x3f0 DUP2
0x3f1 MSTORE
0x3f2 PUSH1 0x20
0x3f4 ADD
0x3f5 PUSH1 0x0
0x3f7 SHA3
0x3f8 PUSH1 0x0
0x3fa DUP3
0x3fb DUP3
0x3fc SLOAD
0x3fd ADD
0x3fe SWAP3
0x3ff POP
0x400 POP
0x401 DUP2
0x402 SWAP1
0x403 SSTORE
0x404 POP
---
0x365: JUMPDEST 
0x369: V208 = 0x5
0x36b: V209 = S[0x5]
0x36c: V210 = 0x8
0x36e: V211 = 0x0
0x370: V212 = CALLER
0x371: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x387: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x39e: M[0x0] = V216
0x39f: V217 = 0x20
0x3a1: V218 = ADD 0x20 0x0
0x3a4: M[0x20] = 0x8
0x3a5: V219 = 0x20
0x3a7: V220 = ADD 0x20 0x20
0x3a8: V221 = 0x0
0x3aa: V222 = SHA3 0x0 0x40
0x3ab: V223 = 0x0
0x3af: V224 = S[V222]
0x3b0: V225 = ADD V224 V209
0x3b6: S[V222] = V225
0x3b9: V226 = 0x7
0x3bb: V227 = 0x0
0x3bd: V228 = CALLER
0x3be: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x3d4: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x3eb: M[0x0] = V232
0x3ec: V233 = 0x20
0x3ee: V234 = ADD 0x20 0x0
0x3f1: M[0x20] = 0x7
0x3f2: V235 = 0x20
0x3f4: V236 = ADD 0x20 0x20
0x3f5: V237 = 0x0
0x3f7: V238 = SHA3 0x0 0x40
0x3f8: V239 = 0x0
0x3fc: V240 = S[V238]
0x3fd: V241 = ADD V240 V437
0x403: S[V238] = V241
---
Entry stack: [V10, S5, S4, V437, V171, 0xa9059cbb, V189]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, S5, S4, V437]

================================

Block 0x405
[0x405:0x405]
---
Predecessors: [0x25c, 0x365]
Successors: [0x406]
---
0x405 JUMPDEST
---
0x405: JUMPDEST 
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x406
[0x406:0x408]
---
Predecessors: [0x405]
Successors: [0xc4]
---
0x406 JUMPDEST
0x407 POP
0x408 JUMP
---
0x406: JUMPDEST 
0x408: JUMP 0xc4
---
Entry stack: [V10, 0xc4, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x409
[0x409:0x42e]
---
Predecessors: [0xd1]
Successors: [0xd9]
---
0x409 JUMPDEST
0x40a PUSH1 0x6
0x40c PUSH1 0x0
0x40e SWAP1
0x40f SLOAD
0x410 SWAP1
0x411 PUSH2 0x100
0x414 EXP
0x415 SWAP1
0x416 DIV
0x417 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42c AND
0x42d DUP2
0x42e JUMP
---
0x409: JUMPDEST 
0x40a: V242 = 0x6
0x40c: V243 = 0x0
0x40f: V244 = S[0x6]
0x411: V245 = 0x100
0x414: V246 = EXP 0x100 0x0
0x416: V247 = DIV V244 0x1
0x417: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x42c: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x42e: JUMP 0xd9
---
Entry stack: [V10, 0xd9]
Stack pops: 1
Stack additions: [S0, V249]
Exit stack: [V10, 0xd9, V249]

================================

Block 0x42f
[0x42f:0x434]
---
Predecessors: [0x126]
Successors: [0x12e]
---
0x42f JUMPDEST
0x430 PUSH1 0x3
0x432 SLOAD
0x433 DUP2
0x434 JUMP
---
0x42f: JUMPDEST 
0x430: V250 = 0x3
0x432: V251 = S[0x3]
0x434: JUMP 0x12e
---
Entry stack: [V10, 0x12e]
Stack pops: 1
Stack additions: [S0, V251]
Exit stack: [V10, 0x12e, V251]

================================

Block 0x435
[0x435:0x47e]
---
Predecessors: [0x14f]
Successors: [0x47f, 0x483]
---
0x435 JUMPDEST
0x436 PUSH1 0x0
0x438 DUP2
0x439 PUSH1 0x7
0x43b PUSH1 0x0
0x43d CALLER
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x469 AND
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x20
0x46e ADD
0x46f SWAP1
0x470 DUP2
0x471 MSTORE
0x472 PUSH1 0x20
0x474 ADD
0x475 PUSH1 0x0
0x477 SHA3
0x478 SLOAD
0x479 LT
0x47a ISZERO
0x47b PUSH2 0x483
0x47e JUMPI
---
0x435: JUMPDEST 
0x436: V252 = 0x0
0x439: V253 = 0x7
0x43b: V254 = 0x0
0x43d: V255 = CALLER
0x43e: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x454: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x469: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x46b: M[0x0] = V259
0x46c: V260 = 0x20
0x46e: V261 = ADD 0x20 0x0
0x471: M[0x20] = 0x7
0x472: V262 = 0x20
0x474: V263 = ADD 0x20 0x20
0x475: V264 = 0x0
0x477: V265 = SHA3 0x0 0x40
0x478: V266 = S[V265]
0x479: V267 = LT V266 V87
0x47a: V268 = ISZERO V267
0x47b: V269 = 0x483
0x47e: JUMPI 0x483 V268
---
Entry stack: [V10, 0x165, V87]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V10, 0x165, V87, 0x0]

================================

Block 0x47f
[0x47f:0x482]
---
Predecessors: [0x435]
Successors: []
---
0x47f PUSH1 0x0
0x481 DUP1
0x482 REVERT
---
0x47f: V270 = 0x0
0x482: REVERT 0x0 0x0
---
Entry stack: [V10, 0x165, V87, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x165, V87, 0x0]

================================

Block 0x483
[0x483:0x48b]
---
Predecessors: [0x435]
Successors: [0x78c]
---
0x483 JUMPDEST
0x484 PUSH2 0x48c
0x487 DUP3
0x488 PUSH2 0x78c
0x48b JUMP
---
0x483: JUMPDEST 
0x484: V271 = 0x48c
0x488: V272 = 0x78c
0x48b: JUMP 0x78c
---
Entry stack: [V10, 0x165, V87, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x48c, S1]
Exit stack: [V10, 0x165, V87, 0x0, 0x48c, V87]

================================

Block 0x48c
[0x48c:0x4c8]
---
Predecessors: [0x796]
Successors: [0x4c9, 0x6db]
---
0x48c JUMPDEST
0x48d SWAP1
0x48e POP
0x48f CALLER
0x490 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a5 AND
0x4a6 PUSH2 0x8fc
0x4a9 DUP3
0x4aa SWAP1
0x4ab DUP2
0x4ac ISZERO
0x4ad MUL
0x4ae SWAP1
0x4af PUSH1 0x40
0x4b1 MLOAD
0x4b2 PUSH1 0x0
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 DUP1
0x4b8 DUP4
0x4b9 SUB
0x4ba DUP2
0x4bb DUP6
0x4bc DUP9
0x4bd DUP9
0x4be CALL
0x4bf SWAP4
0x4c0 POP
0x4c1 POP
0x4c2 POP
0x4c3 POP
0x4c4 ISZERO
0x4c5 PUSH2 0x6db
0x4c8 JUMPI
---
0x48c: JUMPDEST 
0x48f: V273 = CALLER
0x490: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a5: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x4a6: V276 = 0x8fc
0x4ac: V277 = ISZERO V441
0x4ad: V278 = MUL V277 0x8fc
0x4af: V279 = 0x40
0x4b1: V280 = M[0x40]
0x4b2: V281 = 0x0
0x4b4: V282 = 0x40
0x4b6: V283 = M[0x40]
0x4b9: V284 = SUB V280 V283
0x4be: V285 = CALL V278 V275 V441 V283 V284 V283 0x0
0x4c4: V286 = ISZERO V285
0x4c5: V287 = 0x6db
0x4c8: JUMPI 0x6db V286
---
Entry stack: [V10, 0x165, V87, 0x0, V441]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x165, V87, V441]

================================

Block 0x4c9
[0x4c9:0x587]
---
Predecessors: [0x48c]
Successors: [0x588, 0x58c]
---
0x4c9 PUSH1 0x6
0x4cb PUSH1 0x0
0x4cd SWAP1
0x4ce SLOAD
0x4cf SWAP1
0x4d0 PUSH2 0x100
0x4d3 EXP
0x4d4 SWAP1
0x4d5 DIV
0x4d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4eb AND
0x4ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x501 AND
0x502 PUSH4 0xa9059cbb
0x507 ADDRESS
0x508 DUP5
0x509 PUSH1 0x40
0x50b MLOAD
0x50c DUP4
0x50d PUSH4 0xffffffff
0x512 AND
0x513 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x531 MUL
0x532 DUP2
0x533 MSTORE
0x534 PUSH1 0x4
0x536 ADD
0x537 DUP1
0x538 DUP4
0x539 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54e AND
0x54f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x564 AND
0x565 DUP2
0x566 MSTORE
0x567 PUSH1 0x20
0x569 ADD
0x56a DUP3
0x56b DUP2
0x56c MSTORE
0x56d PUSH1 0x20
0x56f ADD
0x570 SWAP3
0x571 POP
0x572 POP
0x573 POP
0x574 PUSH1 0x0
0x576 PUSH1 0x40
0x578 MLOAD
0x579 DUP1
0x57a DUP4
0x57b SUB
0x57c DUP2
0x57d PUSH1 0x0
0x57f DUP8
0x580 DUP1
0x581 EXTCODESIZE
0x582 ISZERO
0x583 ISZERO
0x584 PUSH2 0x58c
0x587 JUMPI
---
0x4c9: V288 = 0x6
0x4cb: V289 = 0x0
0x4ce: V290 = S[0x6]
0x4d0: V291 = 0x100
0x4d3: V292 = EXP 0x100 0x0
0x4d5: V293 = DIV V290 0x1
0x4d6: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x4eb: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x4ec: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x501: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x502: V298 = 0xa9059cbb
0x507: V299 = ADDRESS
0x509: V300 = 0x40
0x50b: V301 = M[0x40]
0x50d: V302 = 0xffffffff
0x512: V303 = AND 0xffffffff 0xa9059cbb
0x513: V304 = 0x100000000000000000000000000000000000000000000000000000000
0x531: V305 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x533: M[V301] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x534: V306 = 0x4
0x536: V307 = ADD 0x4 V301
0x539: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x54e: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x54f: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x564: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x566: M[V307] = V311
0x567: V312 = 0x20
0x569: V313 = ADD 0x20 V307
0x56c: M[V313] = V87
0x56d: V314 = 0x20
0x56f: V315 = ADD 0x20 V313
0x574: V316 = 0x0
0x576: V317 = 0x40
0x578: V318 = M[0x40]
0x57b: V319 = SUB V315 V318
0x57d: V320 = 0x0
0x581: V321 = EXTCODESIZE V297
0x582: V322 = ISZERO V321
0x583: V323 = ISZERO V322
0x584: V324 = 0x58c
0x587: JUMPI 0x58c V323
---
Entry stack: [V10, 0x165, V87, V441]
Stack pops: 2
Stack additions: [S1, S0, V297, 0xa9059cbb, V315, 0x0, V318, V319, V318, 0x0, V297]
Exit stack: [V10, 0x165, V87, V441, V297, 0xa9059cbb, V315, 0x0, V318, V319, V318, 0x0, V297]

================================

Block 0x588
[0x588:0x58b]
---
Predecessors: [0x4c9]
Successors: []
---
0x588 PUSH1 0x0
0x58a DUP1
0x58b REVERT
---
0x588: V325 = 0x0
0x58b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x165, V87, V441, V297, 0xa9059cbb, V315, 0x0, V318, V319, V318, 0x0, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x165, V87, V441, V297, 0xa9059cbb, V315, 0x0, V318, V319, V318, 0x0, V297]

================================

Block 0x58c
[0x58c:0x598]
---
Predecessors: [0x4c9]
Successors: [0x599, 0x59d]
---
0x58c JUMPDEST
0x58d PUSH2 0x2c6
0x590 GAS
0x591 SUB
0x592 CALL
0x593 ISZERO
0x594 ISZERO
0x595 PUSH2 0x59d
0x598 JUMPI
---
0x58c: JUMPDEST 
0x58d: V326 = 0x2c6
0x590: V327 = GAS
0x591: V328 = SUB V327 0x2c6
0x592: V329 = CALL V328 V297 0x0 V318 V319 V318 0x0
0x593: V330 = ISZERO V329
0x594: V331 = ISZERO V330
0x595: V332 = 0x59d
0x598: JUMPI 0x59d V331
---
Entry stack: [V10, 0x165, V87, V441, V297, 0xa9059cbb, V315, 0x0, V318, V319, V318, 0x0, V297]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x165, V87, V441, V297, 0xa9059cbb, V315]

================================

Block 0x599
[0x599:0x59c]
---
Predecessors: [0x58c]
Successors: []
---
0x599 PUSH1 0x0
0x59b DUP1
0x59c REVERT
---
0x599: V333 = 0x0
0x59c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x165, V87, V441, V297, 0xa9059cbb, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x165, V87, V441, V297, 0xa9059cbb, V315]

================================

Block 0x59d
[0x59d:0x653]
---
Predecessors: [0x58c]
Successors: [0x6e5]
---
0x59d JUMPDEST
0x59e POP
0x59f POP
0x5a0 POP
0x5a1 DUP2
0x5a2 PUSH1 0x7
0x5a4 PUSH1 0x0
0x5a6 CALLER
0x5a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bc AND
0x5bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d2 AND
0x5d3 DUP2
0x5d4 MSTORE
0x5d5 PUSH1 0x20
0x5d7 ADD
0x5d8 SWAP1
0x5d9 DUP2
0x5da MSTORE
0x5db PUSH1 0x20
0x5dd ADD
0x5de PUSH1 0x0
0x5e0 SHA3
0x5e1 PUSH1 0x0
0x5e3 DUP3
0x5e4 DUP3
0x5e5 SLOAD
0x5e6 SUB
0x5e7 SWAP3
0x5e8 POP
0x5e9 POP
0x5ea DUP2
0x5eb SWAP1
0x5ec SSTORE
0x5ed POP
0x5ee PUSH1 0x5
0x5f0 SLOAD
0x5f1 PUSH1 0x8
0x5f3 PUSH1 0x0
0x5f5 CALLER
0x5f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60b AND
0x60c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x621 AND
0x622 DUP2
0x623 MSTORE
0x624 PUSH1 0x20
0x626 ADD
0x627 SWAP1
0x628 DUP2
0x629 MSTORE
0x62a PUSH1 0x20
0x62c ADD
0x62d PUSH1 0x0
0x62f SHA3
0x630 PUSH1 0x0
0x632 DUP3
0x633 DUP3
0x634 SLOAD
0x635 SUB
0x636 SWAP3
0x637 POP
0x638 POP
0x639 DUP2
0x63a SWAP1
0x63b SSTORE
0x63c POP
0x63d DUP1
0x63e PUSH1 0x2
0x640 PUSH1 0x0
0x642 DUP3
0x643 DUP3
0x644 SLOAD
0x645 SUB
0x646 SWAP3
0x647 POP
0x648 POP
0x649 DUP2
0x64a SWAP1
0x64b SSTORE
0x64c POP
0x64d PUSH2 0x654
0x650 PUSH2 0x6e5
0x653 JUMP
---
0x59d: JUMPDEST 
0x5a2: V334 = 0x7
0x5a4: V335 = 0x0
0x5a6: V336 = CALLER
0x5a7: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x5bd: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d2: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x5d4: M[0x0] = V340
0x5d5: V341 = 0x20
0x5d7: V342 = ADD 0x20 0x0
0x5da: M[0x20] = 0x7
0x5db: V343 = 0x20
0x5dd: V344 = ADD 0x20 0x20
0x5de: V345 = 0x0
0x5e0: V346 = SHA3 0x0 0x40
0x5e1: V347 = 0x0
0x5e5: V348 = S[V346]
0x5e6: V349 = SUB V348 V87
0x5ec: S[V346] = V349
0x5ee: V350 = 0x5
0x5f0: V351 = S[0x5]
0x5f1: V352 = 0x8
0x5f3: V353 = 0x0
0x5f5: V354 = CALLER
0x5f6: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x60b: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x60c: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x621: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x623: M[0x0] = V358
0x624: V359 = 0x20
0x626: V360 = ADD 0x20 0x0
0x629: M[0x20] = 0x8
0x62a: V361 = 0x20
0x62c: V362 = ADD 0x20 0x20
0x62d: V363 = 0x0
0x62f: V364 = SHA3 0x0 0x40
0x630: V365 = 0x0
0x634: V366 = S[V364]
0x635: V367 = SUB V366 V351
0x63b: S[V364] = V367
0x63e: V368 = 0x2
0x640: V369 = 0x0
0x644: V370 = S[0x2]
0x645: V371 = SUB V370 V441
0x64b: S[0x2] = V371
0x64d: V372 = 0x654
0x650: V373 = 0x6e5
0x653: JUMP 0x6e5
---
Entry stack: [V10, 0x165, V87, V441, V297, 0xa9059cbb, V315]
Stack pops: 5
Stack additions: [S4, S3, 0x654]
Exit stack: [V10, 0x165, V87, V441, 0x654]

================================

Block 0x654
[0x654:0x6da]
---
Predecessors: [0x768]
Successors: [0x6e0]
---
0x654 JUMPDEST
0x655 PUSH32 0xd73c43a89aa90eadf4c7023eed0abebefdf39a1e5d706014595fa78edfef7703
0x676 CALLER
0x677 DUP3
0x678 PUSH1 0x0
0x67a PUSH1 0x3
0x67c SLOAD
0x67d PUSH1 0x40
0x67f MLOAD
0x680 DUP1
0x681 DUP6
0x682 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x697 AND
0x698 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ad AND
0x6ae DUP2
0x6af MSTORE
0x6b0 PUSH1 0x20
0x6b2 ADD
0x6b3 DUP5
0x6b4 DUP2
0x6b5 MSTORE
0x6b6 PUSH1 0x20
0x6b8 ADD
0x6b9 DUP4
0x6ba ISZERO
0x6bb ISZERO
0x6bc ISZERO
0x6bd ISZERO
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x20
0x6c2 ADD
0x6c3 DUP3
0x6c4 DUP2
0x6c5 MSTORE
0x6c6 PUSH1 0x20
0x6c8 ADD
0x6c9 SWAP5
0x6ca POP
0x6cb POP
0x6cc POP
0x6cd POP
0x6ce POP
0x6cf PUSH1 0x40
0x6d1 MLOAD
0x6d2 DUP1
0x6d3 SWAP2
0x6d4 SUB
0x6d5 SWAP1
0x6d6 LOG1
0x6d7 PUSH2 0x6e0
0x6da JUMP
---
0x654: JUMPDEST 
0x655: V374 = 0xd73c43a89aa90eadf4c7023eed0abebefdf39a1e5d706014595fa78edfef7703
0x676: V375 = CALLER
0x678: V376 = 0x0
0x67a: V377 = 0x3
0x67c: V378 = S[0x3]
0x67d: V379 = 0x40
0x67f: V380 = M[0x40]
0x682: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x697: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x698: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ad: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x6af: M[V380] = V384
0x6b0: V385 = 0x20
0x6b2: V386 = ADD 0x20 V380
0x6b5: M[V386] = S0
0x6b6: V387 = 0x20
0x6b8: V388 = ADD 0x20 V386
0x6ba: V389 = ISZERO 0x0
0x6bb: V390 = ISZERO 0x1
0x6bc: V391 = ISZERO 0x0
0x6bd: V392 = ISZERO 0x1
0x6bf: M[V388] = 0x0
0x6c0: V393 = 0x20
0x6c2: V394 = ADD 0x20 V388
0x6c5: M[V394] = V378
0x6c6: V395 = 0x20
0x6c8: V396 = ADD 0x20 V394
0x6cf: V397 = 0x40
0x6d1: V398 = M[0x40]
0x6d4: V399 = SUB V396 V398
0x6d6: LOG V398 V399 0xd73c43a89aa90eadf4c7023eed0abebefdf39a1e5d706014595fa78edfef7703
0x6d7: V400 = 0x6e0
0x6da: JUMP 0x6e0
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S2, S1, S0]

================================

Block 0x6db
[0x6db:0x6df]
---
Predecessors: [0x48c]
Successors: []
---
0x6db JUMPDEST
0x6dc PUSH1 0x0
0x6de DUP1
0x6df REVERT
---
0x6db: JUMPDEST 
0x6dc: V401 = 0x0
0x6df: REVERT 0x0 0x0
---
Entry stack: [V10, 0x165, V87, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x165, V87, V441]

================================

Block 0x6e0
[0x6e0:0x6e0]
---
Predecessors: [0x654]
Successors: [0x6e1]
---
0x6e0 JUMPDEST
---
0x6e0: JUMPDEST 
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x6e1
[0x6e1:0x6e4]
---
Predecessors: [0x6e0]
Successors: [0x165]
---
0x6e1 JUMPDEST
0x6e2 POP
0x6e3 POP
0x6e4 JUMP
---
0x6e1: JUMPDEST 
0x6e4: JUMP S2
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x6e5
[0x6e5:0x73b]
---
Predecessors: [0x269, 0x59d]
Successors: [0x73c, 0x740]
---
0x6e5 JUMPDEST
0x6e6 PUSH1 0x0
0x6e8 DUP1
0x6e9 SWAP1
0x6ea SLOAD
0x6eb SWAP1
0x6ec PUSH2 0x100
0x6ef EXP
0x6f0 SWAP1
0x6f1 DIV
0x6f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x707 AND
0x708 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71d AND
0x71e CALLER
0x71f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x734 AND
0x735 EQ
0x736 ISZERO
0x737 ISZERO
0x738 PUSH2 0x740
0x73b JUMPI
---
0x6e5: JUMPDEST 
0x6e6: V402 = 0x0
0x6ea: V403 = S[0x0]
0x6ec: V404 = 0x100
0x6ef: V405 = EXP 0x100 0x0
0x6f1: V406 = DIV V403 0x1
0x6f2: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x707: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x708: V409 = 0xffffffffffffffffffffffffffffffffffffffff
0x71d: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x71e: V411 = CALLER
0x71f: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x734: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x735: V414 = EQ V413 V410
0x736: V415 = ISZERO V414
0x737: V416 = ISZERO V415
0x738: V417 = 0x740
0x73b: JUMPI 0x740 V416
---
Entry stack: [V10, S3, S2, S1, {0x283, 0x654}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, {0x283, 0x654}]

================================

Block 0x73c
[0x73c:0x73f]
---
Predecessors: [0x6e5]
Successors: []
---
0x73c PUSH1 0x0
0x73e DUP1
0x73f REVERT
---
0x73c: V418 = 0x0
0x73f: REVERT 0x0 0x0
---
Entry stack: [V10, S3, S2, S1, {0x283, 0x654}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, {0x283, 0x654}]

================================

Block 0x740
[0x740:0x755]
---
Predecessors: [0x6e5]
Successors: [0x756, 0x757]
---
0x740 JUMPDEST
0x741 PUSH1 0x2
0x743 SLOAD
0x744 PUSH10 0x21e19e0c9bab2400000
0x74f DUP2
0x750 ISZERO
0x751 ISZERO
0x752 PUSH2 0x757
0x755 JUMPI
---
0x740: JUMPDEST 
0x741: V419 = 0x2
0x743: V420 = S[0x2]
0x744: V421 = 0x21e19e0c9bab2400000
0x750: V422 = ISZERO V420
0x751: V423 = ISZERO V422
0x752: V424 = 0x757
0x755: JUMPI 0x757 V423
---
Entry stack: [V10, S3, S2, S1, {0x283, 0x654}]
Stack pops: 0
Stack additions: [V420, 0x21e19e0c9bab2400000]
Exit stack: [V10, S3, S2, S1, {0x283, 0x654}, V420, 0x21e19e0c9bab2400000]

================================

Block 0x756
[0x756:0x756]
---
Predecessors: [0x740]
Successors: []
---
0x756 INVALID
---
0x756: INVALID 
---
Entry stack: [V10, S5, S4, S3, {0x283, 0x654}, V420, 0x21e19e0c9bab2400000]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, S3, {0x283, 0x654}, V420, 0x21e19e0c9bab2400000]

================================

Block 0x757
[0x757:0x765]
---
Predecessors: [0x740]
Successors: [0x79b]
---
0x757 JUMPDEST
0x758 DIV
0x759 PUSH1 0x4
0x75b DUP2
0x75c SWAP1
0x75d SSTORE
0x75e POP
0x75f PUSH2 0x766
0x762 PUSH2 0x79b
0x765 JUMP
---
0x757: JUMPDEST 
0x758: V425 = DIV 0x21e19e0c9bab2400000 V420
0x759: V426 = 0x4
0x75d: S[0x4] = V425
0x75f: V427 = 0x766
0x762: V428 = 0x79b
0x765: JUMP 0x79b
---
Entry stack: [V10, S5, S4, S3, {0x283, 0x654}, V420, 0x21e19e0c9bab2400000]
Stack pops: 2
Stack additions: [0x766]
Exit stack: [V10, S5, S4, S3, {0x283, 0x654}, 0x766]

================================

Block 0x766
[0x766:0x766]
---
Predecessors: [0x84d]
Successors: [0x767]
---
0x766 JUMPDEST
---
0x766: JUMPDEST 
---
Entry stack: [V10, S3, S2, S1, {0x283, 0x654}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, {0x283, 0x654}]

================================

Block 0x767
[0x767:0x767]
---
Predecessors: [0x766]
Successors: [0x768]
---
0x767 JUMPDEST
---
0x767: JUMPDEST 
---
Entry stack: [V10, S3, S2, S1, {0x283, 0x654}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, {0x283, 0x654}]

================================

Block 0x768
[0x768:0x769]
---
Predecessors: [0x767]
Successors: [0x283, 0x654]
---
0x768 JUMPDEST
0x769 JUMP
---
0x768: JUMPDEST 
0x769: JUMP {0x283, 0x654}
---
Entry stack: [V10, S3, S2, S1, {0x283, 0x654}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S3, S2, S1]

================================

Block 0x76a
[0x76a:0x781]
---
Predecessors: [0x283]
Successors: [0x782, 0x783]
---
0x76a JUMPDEST
0x76b PUSH1 0x0
0x76d PUSH8 0xde0b6b3a7640000
0x776 PUSH1 0x4
0x778 SLOAD
0x779 DUP4
0x77a MUL
0x77b DUP2
0x77c ISZERO
0x77d ISZERO
0x77e PUSH2 0x783
0x781 JUMPI
---
0x76a: JUMPDEST 
0x76b: V429 = 0x0
0x76d: V430 = 0xde0b6b3a7640000
0x776: V431 = 0x4
0x778: V432 = S[0x4]
0x77a: V433 = MUL V160 V432
0x77c: V434 = ISZERO 0xde0b6b3a7640000
0x77d: V435 = ISZERO 0x0
0x77e: V436 = 0x783
0x781: JUMPI 0x783 0x1
---
Entry stack: [V10, S4, S3, S2, 0x28e, V160]
Stack pops: 1
Stack additions: [S0, 0x0, 0xde0b6b3a7640000, V433]
Exit stack: [V10, S4, S3, S2, 0x28e, V160, 0x0, 0xde0b6b3a7640000, V433]

================================

Block 0x782
[0x782:0x782]
---
Predecessors: [0x76a]
Successors: []
---
0x782 INVALID
---
0x782: INVALID 
---
Entry stack: [V10, S7, S6, S5, 0x28e, V160, 0x0, 0xde0b6b3a7640000, V433]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, 0x28e, V160, 0x0, 0xde0b6b3a7640000, V433]

================================

Block 0x783
[0x783:0x786]
---
Predecessors: [0x76a]
Successors: [0x787]
---
0x783 JUMPDEST
0x784 DIV
0x785 SWAP1
0x786 POP
---
0x783: JUMPDEST 
0x784: V437 = DIV V433 0xde0b6b3a7640000
---
Entry stack: [V10, S7, S6, S5, 0x28e, V160, 0x0, 0xde0b6b3a7640000, V433]
Stack pops: 3
Stack additions: [V437]
Exit stack: [V10, S7, S6, S5, 0x28e, V160, V437]

================================

Block 0x787
[0x787:0x78b]
---
Predecessors: [0x783]
Successors: [0x28e]
---
0x787 JUMPDEST
0x788 SWAP2
0x789 SWAP1
0x78a POP
0x78b JUMP
---
0x787: JUMPDEST 
0x78b: JUMP 0x28e
---
Entry stack: [V10, S5, S4, S3, 0x28e, V160, V437]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S5, S4, S3, V437]

================================

Block 0x78c
[0x78c:0x795]
---
Predecessors: [0x483]
Successors: [0x796]
---
0x78c JUMPDEST
0x78d PUSH1 0x0
0x78f PUSH1 0x3
0x791 SLOAD
0x792 DUP3
0x793 MUL
0x794 SWAP1
0x795 POP
---
0x78c: JUMPDEST 
0x78d: V438 = 0x0
0x78f: V439 = 0x3
0x791: V440 = S[0x3]
0x793: V441 = MUL V87 V440
---
Entry stack: [V10, 0x165, V87, 0x0, 0x48c, V87]
Stack pops: 1
Stack additions: [S0, V441]
Exit stack: [V10, 0x165, V87, 0x0, 0x48c, V87, V441]

================================

Block 0x796
[0x796:0x79a]
---
Predecessors: [0x78c]
Successors: [0x48c]
---
0x796 JUMPDEST
0x797 SWAP2
0x798 SWAP1
0x799 POP
0x79a JUMP
---
0x796: JUMPDEST 
0x79a: JUMP 0x48c
---
Entry stack: [V10, 0x165, V87, 0x0, 0x48c, V87, V441]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x165, V87, 0x0, V441]

================================

Block 0x79b
[0x79b:0x7f1]
---
Predecessors: [0x757]
Successors: [0x7f2, 0x7f6]
---
0x79b JUMPDEST
0x79c PUSH1 0x0
0x79e DUP1
0x79f SWAP1
0x7a0 SLOAD
0x7a1 SWAP1
0x7a2 PUSH2 0x100
0x7a5 EXP
0x7a6 SWAP1
0x7a7 DIV
0x7a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bd AND
0x7be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d3 AND
0x7d4 CALLER
0x7d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ea AND
0x7eb EQ
0x7ec ISZERO
0x7ed ISZERO
0x7ee PUSH2 0x7f6
0x7f1 JUMPI
---
0x79b: JUMPDEST 
0x79c: V442 = 0x0
0x7a0: V443 = S[0x0]
0x7a2: V444 = 0x100
0x7a5: V445 = EXP 0x100 0x0
0x7a7: V446 = DIV V443 0x1
0x7a8: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bd: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x7be: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d3: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x7d4: V451 = CALLER
0x7d5: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ea: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x7eb: V454 = EQ V453 V450
0x7ec: V455 = ISZERO V454
0x7ed: V456 = ISZERO V455
0x7ee: V457 = 0x7f6
0x7f1: JUMPI 0x7f6 V456
---
Entry stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766]

================================

Block 0x7f2
[0x7f2:0x7f5]
---
Predecessors: [0x79b]
Successors: []
---
0x7f2 PUSH1 0x0
0x7f4 DUP1
0x7f5 REVERT
---
0x7f2: V458 = 0x0
0x7f5: REVERT 0x0 0x0
---
Entry stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766]

================================

Block 0x7f6
[0x7f6:0x809]
---
Predecessors: [0x79b]
Successors: [0x80a, 0x80b]
---
0x7f6 JUMPDEST
0x7f7 PUSH1 0x4
0x7f9 SLOAD
0x7fa PUSH8 0xde0b6b3a7640000
0x803 DUP2
0x804 ISZERO
0x805 ISZERO
0x806 PUSH2 0x80b
0x809 JUMPI
---
0x7f6: JUMPDEST 
0x7f7: V459 = 0x4
0x7f9: V460 = S[0x4]
0x7fa: V461 = 0xde0b6b3a7640000
0x804: V462 = ISZERO V460
0x805: V463 = ISZERO V462
0x806: V464 = 0x80b
0x809: JUMPI 0x80b V463
---
Entry stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766]
Stack pops: 0
Stack additions: [V460, 0xde0b6b3a7640000]
Exit stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766, V460, 0xde0b6b3a7640000]

================================

Block 0x80a
[0x80a:0x80a]
---
Predecessors: [0x7f6]
Successors: []
---
0x80a INVALID
---
0x80a: INVALID 
---
Entry stack: [V10, S6, S5, S4, {0x283, 0x654}, 0x766, V460, 0xde0b6b3a7640000]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, S5, S4, {0x283, 0x654}, 0x766, V460, 0xde0b6b3a7640000]

================================

Block 0x80b
[0x80b:0x84b]
---
Predecessors: [0x7f6]
Successors: [0x84c]
---
0x80b JUMPDEST
0x80c DIV
0x80d PUSH1 0x3
0x80f DUP2
0x810 SWAP1
0x811 SSTORE
0x812 POP
0x813 PUSH32 0x63f32f63810afda7c9be9643f9fa73ee3f39a9fd8bb35775a2b0d73e48ed9bed
0x834 PUSH1 0x3
0x836 SLOAD
0x837 PUSH1 0x40
0x839 MLOAD
0x83a DUP1
0x83b DUP3
0x83c DUP2
0x83d MSTORE
0x83e PUSH1 0x20
0x840 ADD
0x841 SWAP2
0x842 POP
0x843 POP
0x844 PUSH1 0x40
0x846 MLOAD
0x847 DUP1
0x848 SWAP2
0x849 SUB
0x84a SWAP1
0x84b LOG1
---
0x80b: JUMPDEST 
0x80c: V465 = DIV 0xde0b6b3a7640000 V460
0x80d: V466 = 0x3
0x811: S[0x3] = V465
0x813: V467 = 0x63f32f63810afda7c9be9643f9fa73ee3f39a9fd8bb35775a2b0d73e48ed9bed
0x834: V468 = 0x3
0x836: V469 = S[0x3]
0x837: V470 = 0x40
0x839: V471 = M[0x40]
0x83d: M[V471] = V469
0x83e: V472 = 0x20
0x840: V473 = ADD 0x20 V471
0x844: V474 = 0x40
0x846: V475 = M[0x40]
0x849: V476 = SUB V473 V475
0x84b: LOG V475 V476 0x63f32f63810afda7c9be9643f9fa73ee3f39a9fd8bb35775a2b0d73e48ed9bed
---
Entry stack: [V10, S6, S5, S4, {0x283, 0x654}, 0x766, V460, 0xde0b6b3a7640000]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S6, S5, S4, {0x283, 0x654}, 0x766]

================================

Block 0x84c
[0x84c:0x84c]
---
Predecessors: [0x80b]
Successors: [0x84d]
---
0x84c JUMPDEST
---
0x84c: JUMPDEST 
---
Entry stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766]

================================

Block 0x84d
[0x84d:0x84e]
---
Predecessors: [0x84c]
Successors: [0x766]
---
0x84d JUMPDEST
0x84e JUMP
---
0x84d: JUMPDEST 
0x84e: JUMP 0x766
---
Entry stack: [V10, S4, S3, S2, {0x283, 0x654}, 0x766]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S4, S3, S2, {0x283, 0x654}]

================================

Block 0x84f
[0x84f:0x87a]
---
Predecessors: []
Successors: []
---
0x84f STOP
0x850 LOG1
0x851 PUSH6 0x627a7a723058
0x858 SHA3
0x859 PUSH22 0x4fea80b1d3c7a42cafdda85cc148dcb18f0967095d6
0x870 MISSING 0xb4
0x871 MISSING 0x4e
0x872 DIFFICULTY
0x873 SWAP1
0x874 SWAP6
0x875 PUSH3 0xfccf92
0x879 STOP
0x87a MISSING 0x29
---
0x84f: STOP 
0x850: LOG S0 S1 S2
0x851: V477 = 0x627a7a723058
0x858: V478 = SHA3 0x627a7a723058 S3
0x859: V479 = 0x4fea80b1d3c7a42cafdda85cc148dcb18f0967095d6
0x870: MISSING 0xb4
0x871: MISSING 0x4e
0x872: V480 = DIFFICULTY
0x875: V481 = 0xfccf92
0x879: STOP 
0x87a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4fea80b1d3c7a42cafdda85cc148dcb18f0967095d6, V478, 0xfccf92, S5, V480, S1, S2, S3, S4, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x88a8d602
Entry block: 0x7e
Exit block: 0x238
Body: 0x7e, 0x85, 0x89, 0x167, 0x1be, 0x1c2, 0x1ff, 0x238

Function 1:
Public function signature: 0x94a2301e
Entry block: 0x93
Exit block: 0xa6
Body: 0x93, 0x9a, 0x9e, 0xa6, 0x241

Function 2:
Public function signature: 0x974c86b5
Entry block: 0xbc
Exit block: 0x361
Body: 0xbc, 0xc4, 0x247, 0x25c, 0x269, 0x283, 0x28e, 0x350, 0x354, 0x361, 0x365, 0x405, 0x406, 0x76a, 0x782, 0x783, 0x787

Function 3:
Public function signature: 0x9d63848a
Entry block: 0xc6
Exit block: 0xd9
Body: 0xc6, 0xcd, 0xd1, 0xd9, 0x409

Function 4:
Public function signature: 0xdab8263a
Entry block: 0x11b
Exit block: 0x12e
Body: 0x11b, 0x122, 0x126, 0x12e, 0x42f

Function 5:
Public function signature: 0xe4849b32
Entry block: 0x144
Exit block: 0x165
Body: 0x144, 0x14b, 0x14f, 0x165, 0x435, 0x47f, 0x483, 0x48c, 0x4c9, 0x588, 0x58c, 0x599, 0x59d, 0x654, 0x6db, 0x6e0, 0x6e1, 0x78c, 0x796

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0x77
Body: 0x76, 0x77

Function 7:
Private function
Entry block: 0x6e5
Exit block: 0x768
Body: 0x6e5, 0x740, 0x757, 0x766, 0x767, 0x768, 0x79b, 0x7f6, 0x80b, 0x84c, 0x84d

