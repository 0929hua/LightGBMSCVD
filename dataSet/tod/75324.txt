Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x5c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x5c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x5c
0xc: JUMPI 0x5c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0x5e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x28cb5157
0x36 EQ
0x37 PUSH2 0x5e
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x28cb5157
0x36: V11 = EQ 0x28cb5157 V9
0x37: V12 = 0x5e
0x3a: JUMPI 0x5e V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0xd]
Successors: [0x46, 0x68]
---
0x3b DUP1
0x3c PUSH4 0x3a3800f1
0x41 EQ
0x42 PUSH2 0x68
0x45 JUMPI
---
0x3c: V13 = 0x3a3800f1
0x41: V14 = EQ 0x3a3800f1 V9
0x42: V15 = 0x68
0x45: JUMPI 0x68 V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x98]
---
0x46 DUP1
0x47 PUSH4 0x3ccfd60b
0x4c EQ
0x4d PUSH2 0x98
0x50 JUMPI
---
0x47: V16 = 0x3ccfd60b
0x4c: V17 = EQ 0x3ccfd60b V9
0x4d: V18 = 0x98
0x50: JUMPI 0x98 V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xaf]
---
0x51 DUP1
0x52 PUSH4 0x41c0e1b5
0x57 EQ
0x58 PUSH2 0xaf
0x5b JUMPI
---
0x52: V19 = 0x41c0e1b5
0x57: V20 = EQ 0x41c0e1b5 V9
0x58: V21 = 0xaf
0x5b: JUMPI 0xaf V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5c
[0x5c:0x5d]
---
Predecessors: [0x0, 0x51]
Successors: []
---
0x5c JUMPDEST
0x5d STOP
---
0x5c: JUMPDEST 
0x5d: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x5e
[0x5e:0x65]
---
Predecessors: [0xd]
Successors: [0xc6]
---
0x5e JUMPDEST
0x5f PUSH2 0x66
0x62 PUSH2 0xc6
0x65 JUMP
---
0x5e: JUMPDEST 
0x5f: V22 = 0x66
0x62: V23 = 0xc6
0x65: JUMP 0xc6
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x66]
Exit stack: [V9, 0x66]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0x224]
Successors: []
---
0x66 JUMPDEST
0x67 STOP
---
0x66: JUMPDEST 
0x67: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x68
[0x68:0x79]
---
Predecessors: [0x3b]
Successors: [0x7a, 0x7e]
---
0x68 JUMPDEST
0x69 PUSH2 0x96
0x6c PUSH1 0x4
0x6e DUP1
0x6f CALLDATASIZE
0x70 SUB
0x71 PUSH1 0x20
0x73 DUP2
0x74 LT
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x68: JUMPDEST 
0x69: V24 = 0x96
0x6c: V25 = 0x4
0x6f: V26 = CALLDATASIZE
0x70: V27 = SUB V26 0x4
0x71: V28 = 0x20
0x74: V29 = LT V27 0x20
0x75: V30 = ISZERO V29
0x76: V31 = 0x7e
0x79: JUMPI 0x7e V30
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x96, 0x4, V27]
Exit stack: [V9, 0x96, 0x4, V27]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x68]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V32 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, 0x4, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, 0x4, V27]

================================

Block 0x7e
[0x7e:0x95]
---
Predecessors: [0x68]
Successors: [0x228]
---
0x7e JUMPDEST
0x7f DUP2
0x80 ADD
0x81 SWAP1
0x82 DUP1
0x83 DUP1
0x84 CALLDATALOAD
0x85 ISZERO
0x86 ISZERO
0x87 SWAP1
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP1
0x8c SWAP3
0x8d SWAP2
0x8e SWAP1
0x8f POP
0x90 POP
0x91 POP
0x92 PUSH2 0x228
0x95 JUMP
---
0x7e: JUMPDEST 
0x80: V33 = ADD 0x4 V27
0x84: V34 = CALLDATALOAD 0x4
0x85: V35 = ISZERO V34
0x86: V36 = ISZERO V35
0x88: V37 = 0x20
0x8a: V38 = ADD 0x20 0x4
0x92: V39 = 0x228
0x95: JUMP 0x228
---
Entry stack: [V9, 0x96, 0x4, V27]
Stack pops: 2
Stack additions: [V36]
Exit stack: [V9, 0x96, V36]

================================

Block 0x96
[0x96:0x97]
---
Predecessors: [0x678]
Successors: []
---
0x96 JUMPDEST
0x97 STOP
---
0x96: JUMPDEST 
0x97: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x46]
Successors: [0xa0, 0xa4]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a DUP1
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x98: JUMPDEST 
0x99: V40 = CALLVALUE
0x9b: V41 = ISZERO V40
0x9c: V42 = 0xa4
0x9f: JUMPI 0xa4 V41
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V40]
Exit stack: [V9, V40]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x98]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V43 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V9, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V40]

================================

Block 0xa4
[0xa4:0xac]
---
Predecessors: [0x98]
Successors: [0x67f]
---
0xa4 JUMPDEST
0xa5 POP
0xa6 PUSH2 0xad
0xa9 PUSH2 0x67f
0xac JUMP
---
0xa4: JUMPDEST 
0xa6: V44 = 0xad
0xa9: V45 = 0x67f
0xac: JUMP 0x67f
---
Entry stack: [V9, V40]
Stack pops: 1
Stack additions: [0xad]
Exit stack: [V9, 0xad]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0x75a]
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xaf
[0xaf:0xb6]
---
Predecessors: [0x51]
Successors: [0xb7, 0xbb]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 DUP1
0xb2 ISZERO
0xb3 PUSH2 0xbb
0xb6 JUMPI
---
0xaf: JUMPDEST 
0xb0: V46 = CALLVALUE
0xb2: V47 = ISZERO V46
0xb3: V48 = 0xbb
0xb6: JUMPI 0xbb V47
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V46]
Exit stack: [V9, V46]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0xaf]
Successors: []
---
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb7: V49 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V9, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V46]

================================

Block 0xbb
[0xbb:0xc3]
---
Predecessors: [0xaf]
Successors: [0x75d]
---
0xbb JUMPDEST
0xbc POP
0xbd PUSH2 0xc4
0xc0 PUSH2 0x75d
0xc3 JUMP
---
0xbb: JUMPDEST 
0xbd: V50 = 0xc4
0xc0: V51 = 0x75d
0xc3: JUMP 0x75d
---
Entry stack: [V9, V46]
Stack pops: 1
Stack additions: [0xc4]
Exit stack: [V9, 0xc4]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: []
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc6
[0xc6:0x11d]
---
Predecessors: [0x5e]
Successors: [0x11e, 0x122]
---
0xc6 JUMPDEST
0xc7 PUSH1 0x1
0xc9 PUSH1 0x0
0xcb SWAP1
0xcc SLOAD
0xcd SWAP1
0xce PUSH2 0x100
0xd1 EXP
0xd2 SWAP1
0xd3 DIV
0xd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9 AND
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 CALLER
0x101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116 AND
0x117 EQ
0x118 ISZERO
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0xc6: JUMPDEST 
0xc7: V52 = 0x1
0xc9: V53 = 0x0
0xcc: V54 = S[0x1]
0xce: V55 = 0x100
0xd1: V56 = EXP 0x100 0x0
0xd3: V57 = DIV V54 0x1
0xd4: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xea: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x100: V62 = CALLER
0x101: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x117: V65 = EQ V64 V61
0x118: V66 = ISZERO V65
0x119: V67 = ISZERO V66
0x11a: V68 = 0x122
0x11d: JUMPI 0x122 V67
---
Entry stack: [V9, 0x66]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x66]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0xc6]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V69 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V9, 0x66]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x66]

================================

Block 0x122
[0x122:0x183]
---
Predecessors: [0xc6]
Successors: [0x184, 0x1a5]
---
0x122 JUMPDEST
0x123 PUSH1 0x0
0x125 PUSH1 0x60
0x127 PUSH1 0x0
0x129 DUP1
0x12a SWAP1
0x12b SLOAD
0x12c SWAP1
0x12d PUSH2 0x100
0x130 EXP
0x131 SWAP1
0x132 DIV
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f CALLVALUE
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 PUSH1 0x0
0x166 ADD
0x167 SWAP1
0x168 POP
0x169 PUSH1 0x0
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f DUP4
0x170 SUB
0x171 DUP2
0x172 DUP6
0x173 DUP8
0x174 GAS
0x175 CALL
0x176 SWAP3
0x177 POP
0x178 POP
0x179 POP
0x17a RETURNDATASIZE
0x17b DUP1
0x17c PUSH1 0x0
0x17e DUP2
0x17f EQ
0x180 PUSH2 0x1a5
0x183 JUMPI
---
0x122: JUMPDEST 
0x123: V70 = 0x0
0x125: V71 = 0x60
0x127: V72 = 0x0
0x12b: V73 = S[0x0]
0x12d: V74 = 0x100
0x130: V75 = EXP 0x100 0x0
0x132: V76 = DIV V73 0x1
0x133: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x149: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x15f: V81 = CALLVALUE
0x160: V82 = 0x40
0x162: V83 = M[0x40]
0x164: V84 = 0x0
0x166: V85 = ADD 0x0 V83
0x169: V86 = 0x0
0x16b: V87 = 0x40
0x16d: V88 = M[0x40]
0x170: V89 = SUB V85 V88
0x174: V90 = GAS
0x175: V91 = CALL V90 V80 V81 V88 V89 V88 0x0
0x17a: V92 = RETURNDATASIZE
0x17c: V93 = 0x0
0x17f: V94 = EQ V92 0x0
0x180: V95 = 0x1a5
0x183: JUMPI 0x1a5 V94
---
Entry stack: [V9, 0x66]
Stack pops: 0
Stack additions: [0x0, 0x60, V91, V92, V92]
Exit stack: [V9, 0x66, 0x0, 0x60, V91, V92, V92]

================================

Block 0x184
[0x184:0x1a4]
---
Predecessors: [0x122]
Successors: [0x1aa]
---
0x184 PUSH1 0x40
0x186 MLOAD
0x187 SWAP2
0x188 POP
0x189 PUSH1 0x1f
0x18b NOT
0x18c PUSH1 0x3f
0x18e RETURNDATASIZE
0x18f ADD
0x190 AND
0x191 DUP3
0x192 ADD
0x193 PUSH1 0x40
0x195 MSTORE
0x196 RETURNDATASIZE
0x197 DUP3
0x198 MSTORE
0x199 RETURNDATASIZE
0x19a PUSH1 0x0
0x19c PUSH1 0x20
0x19e DUP5
0x19f ADD
0x1a0 RETURNDATACOPY
0x1a1 PUSH2 0x1aa
0x1a4 JUMP
---
0x184: V96 = 0x40
0x186: V97 = M[0x40]
0x189: V98 = 0x1f
0x18b: V99 = NOT 0x1f
0x18c: V100 = 0x3f
0x18e: V101 = RETURNDATASIZE
0x18f: V102 = ADD V101 0x3f
0x190: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x192: V104 = ADD V97 V103
0x193: V105 = 0x40
0x195: M[0x40] = V104
0x196: V106 = RETURNDATASIZE
0x198: M[V97] = V106
0x199: V107 = RETURNDATASIZE
0x19a: V108 = 0x0
0x19c: V109 = 0x20
0x19f: V110 = ADD V97 0x20
0x1a0: RETURNDATACOPY V110 0x0 V107
0x1a1: V111 = 0x1aa
0x1a4: JUMP 0x1aa
---
Entry stack: [V9, 0x66, 0x0, 0x60, V91, V92, V92]
Stack pops: 2
Stack additions: [V97, S0]
Exit stack: [V9, 0x66, 0x0, 0x60, V91, V97, V92]

================================

Block 0x1a5
[0x1a5:0x1a9]
---
Predecessors: [0x122]
Successors: [0x1aa]
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x60
0x1a8 SWAP2
0x1a9 POP
---
0x1a5: JUMPDEST 
0x1a6: V112 = 0x60
---
Entry stack: [V9, 0x66, 0x0, 0x60, V91, V92, V92]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, 0x66, 0x0, 0x60, V91, 0x60, V92]

================================

Block 0x1aa
[0x1aa:0x1b6]
---
Predecessors: [0x184, 0x1a5]
Successors: [0x1b7, 0x224]
---
0x1aa JUMPDEST
0x1ab POP
0x1ac SWAP2
0x1ad POP
0x1ae SWAP2
0x1af POP
0x1b0 DUP2
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 PUSH2 0x224
0x1b6 JUMPI
---
0x1aa: JUMPDEST 
0x1b1: V113 = ISZERO V91
0x1b2: V114 = ISZERO V113
0x1b3: V115 = 0x224
0x1b6: JUMPI 0x224 V114
---
Entry stack: [V9, 0x66, 0x0, 0x60, V91, S1, V92]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V9, 0x66, V91, S1]

================================

Block 0x1b7
[0x1b7:0x223]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1db DUP2
0x1dc MSTORE
0x1dd PUSH1 0x4
0x1df ADD
0x1e0 DUP1
0x1e1 DUP1
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 DUP3
0x1e6 DUP2
0x1e7 SUB
0x1e8 DUP3
0x1e9 MSTORE
0x1ea PUSH1 0x2
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 DUP1
0x1f2 PUSH32 0x2331000000000000000000000000000000000000000000000000000000000000
0x213 DUP2
0x214 MSTORE
0x215 POP
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP2
0x21a POP
0x21b POP
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 SWAP2
0x221 SUB
0x222 SWAP1
0x223 REVERT
---
0x1b7: V116 = 0x40
0x1b9: V117 = M[0x40]
0x1ba: V118 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1dc: M[V117] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1dd: V119 = 0x4
0x1df: V120 = ADD 0x4 V117
0x1e2: V121 = 0x20
0x1e4: V122 = ADD 0x20 V120
0x1e7: V123 = SUB V122 V120
0x1e9: M[V120] = V123
0x1ea: V124 = 0x2
0x1ed: M[V122] = 0x2
0x1ee: V125 = 0x20
0x1f0: V126 = ADD 0x20 V122
0x1f2: V127 = 0x2331000000000000000000000000000000000000000000000000000000000000
0x214: M[V126] = 0x2331000000000000000000000000000000000000000000000000000000000000
0x216: V128 = 0x20
0x218: V129 = ADD 0x20 V126
0x21c: V130 = 0x40
0x21e: V131 = M[0x40]
0x221: V132 = SUB V129 V131
0x223: REVERT V131 V132
---
Entry stack: [V9, 0x66, V91, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x66, V91, S0]

================================

Block 0x224
[0x224:0x227]
---
Predecessors: [0x1aa]
Successors: [0x66]
---
0x224 JUMPDEST
0x225 POP
0x226 POP
0x227 JUMP
---
0x224: JUMPDEST 
0x227: JUMP 0x66
---
Entry stack: [V9, 0x66, V91, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V9]

================================

Block 0x228
[0x228:0x27f]
---
Predecessors: [0x7e]
Successors: [0x280, 0x284]
---
0x228 JUMPDEST
0x229 PUSH1 0x1
0x22b PUSH1 0x0
0x22d SWAP1
0x22e SLOAD
0x22f SWAP1
0x230 PUSH2 0x100
0x233 EXP
0x234 SWAP1
0x235 DIV
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 CALLER
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 EQ
0x27a ISZERO
0x27b ISZERO
0x27c PUSH2 0x284
0x27f JUMPI
---
0x228: JUMPDEST 
0x229: V133 = 0x1
0x22b: V134 = 0x0
0x22e: V135 = S[0x1]
0x230: V136 = 0x100
0x233: V137 = EXP 0x100 0x0
0x235: V138 = DIV V135 0x1
0x236: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x24c: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x262: V143 = CALLER
0x263: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x279: V146 = EQ V145 V142
0x27a: V147 = ISZERO V146
0x27b: V148 = ISZERO V147
0x27c: V149 = 0x284
0x27f: JUMPI 0x284 V148
---
Entry stack: [V9, 0x96, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36]

================================

Block 0x280
[0x280:0x283]
---
Predecessors: [0x228]
Successors: []
---
0x280 PUSH1 0x0
0x282 DUP1
0x283 REVERT
---
0x280: V150 = 0x0
0x283: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36]

================================

Block 0x284
[0x284:0x37f]
---
Predecessors: [0x228]
Successors: [0x380, 0x384]
---
0x284 JUMPDEST
0x285 PUSH1 0x0
0x287 DUP1
0x288 PUSH1 0x0
0x28a SWAP1
0x28b SLOAD
0x28c SWAP1
0x28d PUSH2 0x100
0x290 EXP
0x291 SWAP1
0x292 DIV
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 AND
0x2a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2be AND
0x2bf BALANCE
0x2c0 SWAP1
0x2c1 POP
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 PUSH1 0x0
0x2c7 SWAP1
0x2c8 SLOAD
0x2c9 SWAP1
0x2ca PUSH2 0x100
0x2cd EXP
0x2ce SWAP1
0x2cf DIV
0x2d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e5 AND
0x2e6 SWAP1
0x2e7 POP
0x2e8 PUSH1 0x0
0x2ea DUP2
0x2eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x300 AND
0x301 PUSH4 0xf8b2cb4f
0x306 ADDRESS
0x307 PUSH1 0x40
0x309 MLOAD
0x30a DUP3
0x30b PUSH4 0xffffffff
0x310 AND
0x311 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x32f MUL
0x330 DUP2
0x331 MSTORE
0x332 PUSH1 0x4
0x334 ADD
0x335 DUP1
0x336 DUP3
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x362 AND
0x363 DUP2
0x364 MSTORE
0x365 PUSH1 0x20
0x367 ADD
0x368 SWAP2
0x369 POP
0x36a POP
0x36b PUSH1 0x20
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 DUP4
0x372 SUB
0x373 DUP2
0x374 PUSH1 0x0
0x376 DUP8
0x377 DUP1
0x378 EXTCODESIZE
0x379 ISZERO
0x37a DUP1
0x37b ISZERO
0x37c PUSH2 0x384
0x37f JUMPI
---
0x284: JUMPDEST 
0x285: V151 = 0x0
0x288: V152 = 0x0
0x28b: V153 = S[0x0]
0x28d: V154 = 0x100
0x290: V155 = EXP 0x100 0x0
0x292: V156 = DIV V153 0x1
0x293: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x2a9: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2bf: V161 = BALANCE V160
0x2c2: V162 = 0x0
0x2c5: V163 = 0x0
0x2c8: V164 = S[0x0]
0x2ca: V165 = 0x100
0x2cd: V166 = EXP 0x100 0x0
0x2cf: V167 = DIV V164 0x1
0x2d0: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2e8: V170 = 0x0
0x2eb: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x300: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x301: V173 = 0xf8b2cb4f
0x306: V174 = ADDRESS
0x307: V175 = 0x40
0x309: V176 = M[0x40]
0x30b: V177 = 0xffffffff
0x310: V178 = AND 0xffffffff 0xf8b2cb4f
0x311: V179 = 0x100000000000000000000000000000000000000000000000000000000
0x32f: V180 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf8b2cb4f
0x331: M[V176] = 0xf8b2cb4f00000000000000000000000000000000000000000000000000000000
0x332: V181 = 0x4
0x334: V182 = ADD 0x4 V176
0x337: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x34d: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x362: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x364: M[V182] = V186
0x365: V187 = 0x20
0x367: V188 = ADD 0x20 V182
0x36b: V189 = 0x20
0x36d: V190 = 0x40
0x36f: V191 = M[0x40]
0x372: V192 = SUB V188 V191
0x374: V193 = 0x0
0x378: V194 = EXTCODESIZE V172
0x379: V195 = ISZERO V194
0x37b: V196 = ISZERO V195
0x37c: V197 = 0x384
0x37f: JUMPI 0x384 V196
---
Entry stack: [V9, 0x96, V36]
Stack pops: 0
Stack additions: [V161, V169, 0x0, V172, 0xf8b2cb4f, V188, 0x20, V191, V192, V191, 0x0, V172, V195]
Exit stack: [V9, 0x96, V36, V161, V169, 0x0, V172, 0xf8b2cb4f, V188, 0x20, V191, V192, V191, 0x0, V172, V195]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x284]
Successors: []
---
0x380 PUSH1 0x0
0x382 DUP1
0x383 REVERT
---
0x380: V198 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, V36, V161, V169, 0x0, V172, 0xf8b2cb4f, V188, 0x20, V191, V192, V191, 0x0, V172, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, 0x0, V172, 0xf8b2cb4f, V188, 0x20, V191, V192, V191, 0x0, V172, V195]

================================

Block 0x384
[0x384:0x38e]
---
Predecessors: [0x284]
Successors: [0x38f, 0x398]
---
0x384 JUMPDEST
0x385 POP
0x386 GAS
0x387 CALL
0x388 ISZERO
0x389 DUP1
0x38a ISZERO
0x38b PUSH2 0x398
0x38e JUMPI
---
0x384: JUMPDEST 
0x386: V199 = GAS
0x387: V200 = CALL V199 V172 0x0 V191 V192 V191 0x20
0x388: V201 = ISZERO V200
0x38a: V202 = ISZERO V201
0x38b: V203 = 0x398
0x38e: JUMPI 0x398 V202
---
Entry stack: [V9, 0x96, V36, V161, V169, 0x0, V172, 0xf8b2cb4f, V188, 0x20, V191, V192, V191, 0x0, V172, V195]
Stack pops: 7
Stack additions: [V201]
Exit stack: [V9, 0x96, V36, V161, V169, 0x0, V172, 0xf8b2cb4f, V188, V201]

================================

Block 0x38f
[0x38f:0x397]
---
Predecessors: [0x384]
Successors: []
---
0x38f RETURNDATASIZE
0x390 PUSH1 0x0
0x392 DUP1
0x393 RETURNDATACOPY
0x394 RETURNDATASIZE
0x395 PUSH1 0x0
0x397 REVERT
---
0x38f: V204 = RETURNDATASIZE
0x390: V205 = 0x0
0x393: RETURNDATACOPY 0x0 0x0 V204
0x394: V206 = RETURNDATASIZE
0x395: V207 = 0x0
0x397: REVERT 0x0 V206
---
Entry stack: [V9, 0x96, V36, V161, V169, 0x0, V172, 0xf8b2cb4f, V188, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, 0x0, V172, 0xf8b2cb4f, V188, V201]

================================

Block 0x398
[0x398:0x3a9]
---
Predecessors: [0x384]
Successors: [0x3aa, 0x3ae]
---
0x398 JUMPDEST
0x399 POP
0x39a POP
0x39b POP
0x39c POP
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 RETURNDATASIZE
0x3a1 PUSH1 0x20
0x3a3 DUP2
0x3a4 LT
0x3a5 ISZERO
0x3a6 PUSH2 0x3ae
0x3a9 JUMPI
---
0x398: JUMPDEST 
0x39d: V208 = 0x40
0x39f: V209 = M[0x40]
0x3a0: V210 = RETURNDATASIZE
0x3a1: V211 = 0x20
0x3a4: V212 = LT V210 0x20
0x3a5: V213 = ISZERO V212
0x3a6: V214 = 0x3ae
0x3a9: JUMPI 0x3ae V213
---
Entry stack: [V9, 0x96, V36, V161, V169, 0x0, V172, 0xf8b2cb4f, V188, V201]
Stack pops: 4
Stack additions: [V209, V210]
Exit stack: [V9, 0x96, V36, V161, V169, 0x0, V209, V210]

================================

Block 0x3aa
[0x3aa:0x3ad]
---
Predecessors: [0x398]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad REVERT
---
0x3aa: V215 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, V36, V161, V169, 0x0, V209, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, 0x0, V209, V210]

================================

Block 0x3ae
[0x3ae:0x3ca]
---
Predecessors: [0x398]
Successors: [0x3cb, 0x438]
---
0x3ae JUMPDEST
0x3af DUP2
0x3b0 ADD
0x3b1 SWAP1
0x3b2 DUP1
0x3b3 DUP1
0x3b4 MLOAD
0x3b5 SWAP1
0x3b6 PUSH1 0x20
0x3b8 ADD
0x3b9 SWAP1
0x3ba SWAP3
0x3bb SWAP2
0x3bc SWAP1
0x3bd POP
0x3be POP
0x3bf POP
0x3c0 SWAP1
0x3c1 POP
0x3c2 DUP3
0x3c3 DUP2
0x3c4 GT
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 PUSH2 0x438
0x3ca JUMPI
---
0x3ae: JUMPDEST 
0x3b0: V216 = ADD V209 V210
0x3b4: V217 = M[V209]
0x3b6: V218 = 0x20
0x3b8: V219 = ADD 0x20 V209
0x3c4: V220 = GT V217 V161
0x3c5: V221 = ISZERO V220
0x3c6: V222 = ISZERO V221
0x3c7: V223 = 0x438
0x3ca: JUMPI 0x438 V222
---
Entry stack: [V9, 0x96, V36, V161, V169, 0x0, V209, V210]
Stack pops: 5
Stack additions: [S4, S3, V217]
Exit stack: [V9, 0x96, V36, V161, V169, V217]

================================

Block 0x3cb
[0x3cb:0x437]
---
Predecessors: [0x3ae]
Successors: []
---
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3ef DUP2
0x3f0 MSTORE
0x3f1 PUSH1 0x4
0x3f3 ADD
0x3f4 DUP1
0x3f5 DUP1
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 DUP3
0x3fa DUP2
0x3fb SUB
0x3fc DUP3
0x3fd MSTORE
0x3fe PUSH1 0x2
0x400 DUP2
0x401 MSTORE
0x402 PUSH1 0x20
0x404 ADD
0x405 DUP1
0x406 PUSH32 0x2332000000000000000000000000000000000000000000000000000000000000
0x427 DUP2
0x428 MSTORE
0x429 POP
0x42a PUSH1 0x20
0x42c ADD
0x42d SWAP2
0x42e POP
0x42f POP
0x430 PUSH1 0x40
0x432 MLOAD
0x433 DUP1
0x434 SWAP2
0x435 SUB
0x436 SWAP1
0x437 REVERT
---
0x3cb: V224 = 0x40
0x3cd: V225 = M[0x40]
0x3ce: V226 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3f0: M[V225] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3f1: V227 = 0x4
0x3f3: V228 = ADD 0x4 V225
0x3f6: V229 = 0x20
0x3f8: V230 = ADD 0x20 V228
0x3fb: V231 = SUB V230 V228
0x3fd: M[V228] = V231
0x3fe: V232 = 0x2
0x401: M[V230] = 0x2
0x402: V233 = 0x20
0x404: V234 = ADD 0x20 V230
0x406: V235 = 0x2332000000000000000000000000000000000000000000000000000000000000
0x428: M[V234] = 0x2332000000000000000000000000000000000000000000000000000000000000
0x42a: V236 = 0x20
0x42c: V237 = ADD 0x20 V234
0x430: V238 = 0x40
0x432: V239 = M[0x40]
0x435: V240 = SUB V237 V239
0x437: REVERT V239 V240
---
Entry stack: [V9, 0x96, V36, V161, V169, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, V217]

================================

Block 0x438
[0x438:0x463]
---
Predecessors: [0x3ae]
Successors: [0x464, 0x4d1]
---
0x438 JUMPDEST
0x439 PUSH1 0x0
0x43b PUSH1 0x1
0x43d DUP5
0x43e DUP4
0x43f SUB
0x440 ADD
0x441 SWAP1
0x442 POP
0x443 ADDRESS
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a BALANCE
0x45b DUP2
0x45c LT
0x45d ISZERO
0x45e ISZERO
0x45f ISZERO
0x460 PUSH2 0x4d1
0x463 JUMPI
---
0x438: JUMPDEST 
0x439: V241 = 0x0
0x43b: V242 = 0x1
0x43f: V243 = SUB V217 V161
0x440: V244 = ADD V243 0x1
0x443: V245 = ADDRESS
0x444: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x45a: V248 = BALANCE V247
0x45c: V249 = LT V244 V248
0x45d: V250 = ISZERO V249
0x45e: V251 = ISZERO V250
0x45f: V252 = ISZERO V251
0x460: V253 = 0x4d1
0x463: JUMPI 0x4d1 V252
---
Entry stack: [V9, 0x96, V36, V161, V169, V217]
Stack pops: 3
Stack additions: [S2, S1, S0, V244]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244]

================================

Block 0x464
[0x464:0x4d0]
---
Predecessors: [0x438]
Successors: []
---
0x464 PUSH1 0x40
0x466 MLOAD
0x467 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x488 DUP2
0x489 MSTORE
0x48a PUSH1 0x4
0x48c ADD
0x48d DUP1
0x48e DUP1
0x48f PUSH1 0x20
0x491 ADD
0x492 DUP3
0x493 DUP2
0x494 SUB
0x495 DUP3
0x496 MSTORE
0x497 PUSH1 0x2
0x499 DUP2
0x49a MSTORE
0x49b PUSH1 0x20
0x49d ADD
0x49e DUP1
0x49f PUSH32 0x2333000000000000000000000000000000000000000000000000000000000000
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 POP
0x4c3 PUSH1 0x20
0x4c5 ADD
0x4c6 SWAP2
0x4c7 POP
0x4c8 POP
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc DUP1
0x4cd SWAP2
0x4ce SUB
0x4cf SWAP1
0x4d0 REVERT
---
0x464: V254 = 0x40
0x466: V255 = M[0x40]
0x467: V256 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x489: M[V255] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x48a: V257 = 0x4
0x48c: V258 = ADD 0x4 V255
0x48f: V259 = 0x20
0x491: V260 = ADD 0x20 V258
0x494: V261 = SUB V260 V258
0x496: M[V258] = V261
0x497: V262 = 0x2
0x49a: M[V260] = 0x2
0x49b: V263 = 0x20
0x49d: V264 = ADD 0x20 V260
0x49f: V265 = 0x2333000000000000000000000000000000000000000000000000000000000000
0x4c1: M[V264] = 0x2333000000000000000000000000000000000000000000000000000000000000
0x4c3: V266 = 0x20
0x4c5: V267 = ADD 0x20 V264
0x4c9: V268 = 0x40
0x4cb: V269 = M[0x40]
0x4ce: V270 = SUB V267 V269
0x4d0: REVERT V269 V270
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244]

================================

Block 0x4d1
[0x4d1:0x4fb]
---
Predecessors: [0x438]
Successors: [0x7f4]
---
0x4d1 JUMPDEST
0x4d2 DUP1
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 SWAP1
0x4d7 SLOAD
0x4d8 SWAP1
0x4d9 PUSH2 0x100
0x4dc EXP
0x4dd SWAP1
0x4de DIV
0x4df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f4 AND
0x4f5 PUSH2 0x4fc
0x4f8 PUSH2 0x7f4
0x4fb JUMP
---
0x4d1: JUMPDEST 
0x4d3: V271 = 0x0
0x4d7: V272 = S[0x0]
0x4d9: V273 = 0x100
0x4dc: V274 = EXP 0x100 0x0
0x4de: V275 = DIV V272 0x1
0x4df: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x4f5: V278 = 0x4fc
0x4f8: V279 = 0x7f4
0x4fb: JUMP 0x7f4
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244]
Stack pops: 1
Stack additions: [S0, S0, V277, 0x4fc]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V244, V277, 0x4fc]

================================

Block 0x4fc
[0x4fc:0x543]
---
Predecessors: [0x7f4]
Successors: [0x544, 0x54d]
---
0x4fc JUMPDEST
0x4fd DUP1
0x4fe DUP3
0x4ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x514 AND
0x515 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52a AND
0x52b DUP2
0x52c MSTORE
0x52d PUSH1 0x20
0x52f ADD
0x530 SWAP2
0x531 POP
0x532 POP
0x533 PUSH1 0x40
0x535 MLOAD
0x536 DUP1
0x537 SWAP2
0x538 SUB
0x539 SWAP1
0x53a DUP3
0x53b CREATE
0x53c DUP1
0x53d ISZERO
0x53e DUP1
0x53f ISZERO
0x540 PUSH2 0x54d
0x543 JUMPI
---
0x4fc: JUMPDEST 
0x4ff: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x514: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x515: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x52a: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x52c: M[V453] = V283
0x52d: V284 = 0x20
0x52f: V285 = ADD 0x20 V453
0x533: V286 = 0x40
0x535: V287 = M[0x40]
0x538: V288 = SUB V285 V287
0x53b: V289 = CREATE V244 V287 V288
0x53d: V290 = ISZERO V289
0x53f: V291 = ISZERO V290
0x540: V292 = 0x54d
0x543: JUMPI 0x54d V291
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V244, V277, V453]
Stack pops: 3
Stack additions: [S2, V289, V290]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V244, V289, V290]

================================

Block 0x544
[0x544:0x54c]
---
Predecessors: [0x4fc]
Successors: []
---
0x544 RETURNDATASIZE
0x545 PUSH1 0x0
0x547 DUP1
0x548 RETURNDATACOPY
0x549 RETURNDATASIZE
0x54a PUSH1 0x0
0x54c REVERT
---
0x544: V293 = RETURNDATASIZE
0x545: V294 = 0x0
0x548: RETURNDATACOPY 0x0 0x0 V293
0x549: V295 = RETURNDATASIZE
0x54a: V296 = 0x0
0x54c: REVERT 0x0 V295
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V244, V289, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V244, V289, V290]

================================

Block 0x54d
[0x54d:0x5b0]
---
Predecessors: [0x4fc]
Successors: [0x5b1, 0x5b5]
---
0x54d JUMPDEST
0x54e POP
0x54f SWAP1
0x550 POP
0x551 POP
0x552 DUP3
0x553 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x568 AND
0x569 PUSH4 0x3ccfd60b
0x56e PUSH1 0x40
0x570 MLOAD
0x571 DUP2
0x572 PUSH4 0xffffffff
0x577 AND
0x578 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x596 MUL
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x4
0x59b ADD
0x59c PUSH1 0x20
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 DUP1
0x5a2 DUP4
0x5a3 SUB
0x5a4 DUP2
0x5a5 PUSH1 0x0
0x5a7 DUP8
0x5a8 DUP1
0x5a9 EXTCODESIZE
0x5aa ISZERO
0x5ab DUP1
0x5ac ISZERO
0x5ad PUSH2 0x5b5
0x5b0 JUMPI
---
0x54d: JUMPDEST 
0x553: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x568: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x569: V299 = 0x3ccfd60b
0x56e: V300 = 0x40
0x570: V301 = M[0x40]
0x572: V302 = 0xffffffff
0x577: V303 = AND 0xffffffff 0x3ccfd60b
0x578: V304 = 0x100000000000000000000000000000000000000000000000000000000
0x596: V305 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x598: M[V301] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x599: V306 = 0x4
0x59b: V307 = ADD 0x4 V301
0x59c: V308 = 0x20
0x59e: V309 = 0x40
0x5a0: V310 = M[0x40]
0x5a3: V311 = SUB V307 V310
0x5a5: V312 = 0x0
0x5a9: V313 = EXTCODESIZE V298
0x5aa: V314 = ISZERO V313
0x5ac: V315 = ISZERO V314
0x5ad: V316 = 0x5b5
0x5b0: JUMPI 0x5b5 V315
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V244, V289, V290]
Stack pops: 6
Stack additions: [S5, S4, S3, V298, 0x3ccfd60b, V307, 0x20, V310, V311, V310, 0x0, V298, V314]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V298, 0x3ccfd60b, V307, 0x20, V310, V311, V310, 0x0, V298, V314]

================================

Block 0x5b1
[0x5b1:0x5b4]
---
Predecessors: [0x54d]
Successors: []
---
0x5b1 PUSH1 0x0
0x5b3 DUP1
0x5b4 REVERT
---
0x5b1: V317 = 0x0
0x5b4: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V298, 0x3ccfd60b, V307, 0x20, V310, V311, V310, 0x0, V298, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V298, 0x3ccfd60b, V307, 0x20, V310, V311, V310, 0x0, V298, V314]

================================

Block 0x5b5
[0x5b5:0x5bf]
---
Predecessors: [0x54d]
Successors: [0x5c0, 0x5c9]
---
0x5b5 JUMPDEST
0x5b6 POP
0x5b7 GAS
0x5b8 CALL
0x5b9 ISZERO
0x5ba DUP1
0x5bb ISZERO
0x5bc PUSH2 0x5c9
0x5bf JUMPI
---
0x5b5: JUMPDEST 
0x5b7: V318 = GAS
0x5b8: V319 = CALL V318 V298 0x0 V310 V311 V310 0x20
0x5b9: V320 = ISZERO V319
0x5bb: V321 = ISZERO V320
0x5bc: V322 = 0x5c9
0x5bf: JUMPI 0x5c9 V321
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V298, 0x3ccfd60b, V307, 0x20, V310, V311, V310, 0x0, V298, V314]
Stack pops: 7
Stack additions: [V320]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V298, 0x3ccfd60b, V307, V320]

================================

Block 0x5c0
[0x5c0:0x5c8]
---
Predecessors: [0x5b5]
Successors: []
---
0x5c0 RETURNDATASIZE
0x5c1 PUSH1 0x0
0x5c3 DUP1
0x5c4 RETURNDATACOPY
0x5c5 RETURNDATASIZE
0x5c6 PUSH1 0x0
0x5c8 REVERT
---
0x5c0: V323 = RETURNDATASIZE
0x5c1: V324 = 0x0
0x5c4: RETURNDATACOPY 0x0 0x0 V323
0x5c5: V325 = RETURNDATASIZE
0x5c6: V326 = 0x0
0x5c8: REVERT 0x0 V325
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V298, 0x3ccfd60b, V307, V320]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V298, 0x3ccfd60b, V307, V320]

================================

Block 0x5c9
[0x5c9:0x5da]
---
Predecessors: [0x5b5]
Successors: [0x5db, 0x5df]
---
0x5c9 JUMPDEST
0x5ca POP
0x5cb POP
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 RETURNDATASIZE
0x5d2 PUSH1 0x20
0x5d4 DUP2
0x5d5 LT
0x5d6 ISZERO
0x5d7 PUSH2 0x5df
0x5da JUMPI
---
0x5c9: JUMPDEST 
0x5ce: V327 = 0x40
0x5d0: V328 = M[0x40]
0x5d1: V329 = RETURNDATASIZE
0x5d2: V330 = 0x20
0x5d5: V331 = LT V329 0x20
0x5d6: V332 = ISZERO V331
0x5d7: V333 = 0x5df
0x5da: JUMPI 0x5df V332
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V298, 0x3ccfd60b, V307, V320]
Stack pops: 4
Stack additions: [V328, V329]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V328, V329]

================================

Block 0x5db
[0x5db:0x5de]
---
Predecessors: [0x5c9]
Successors: []
---
0x5db PUSH1 0x0
0x5dd DUP1
0x5de REVERT
---
0x5db: V334 = 0x0
0x5de: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V328, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V328, V329]

================================

Block 0x5df
[0x5df:0x5f7]
---
Predecessors: [0x5c9]
Successors: [0x5f8, 0x678]
---
0x5df JUMPDEST
0x5e0 DUP2
0x5e1 ADD
0x5e2 SWAP1
0x5e3 DUP1
0x5e4 DUP1
0x5e5 MLOAD
0x5e6 SWAP1
0x5e7 PUSH1 0x20
0x5e9 ADD
0x5ea SWAP1
0x5eb SWAP3
0x5ec SWAP2
0x5ed SWAP1
0x5ee POP
0x5ef POP
0x5f0 POP
0x5f1 POP
0x5f2 DUP5
0x5f3 ISZERO
0x5f4 PUSH2 0x678
0x5f7 JUMPI
---
0x5df: JUMPDEST 
0x5e1: V335 = ADD V328 V329
0x5e5: V336 = M[V328]
0x5e7: V337 = 0x20
0x5e9: V338 = ADD 0x20 V328
0x5f3: V339 = ISZERO V36
0x5f4: V340 = 0x678
0x5f7: JUMPI 0x678 V339
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V328, V329]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244]

================================

Block 0x5f8
[0x5f8:0x66c]
---
Predecessors: [0x5df]
Successors: [0x66d, 0x676]
---
0x5f8 PUSH1 0x1
0x5fa PUSH1 0x0
0x5fc SWAP1
0x5fd SLOAD
0x5fe SWAP1
0x5ff PUSH2 0x100
0x602 EXP
0x603 SWAP1
0x604 DIV
0x605 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61a AND
0x61b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x630 AND
0x631 PUSH2 0x8fc
0x634 ADDRESS
0x635 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64a AND
0x64b BALANCE
0x64c SWAP1
0x64d DUP2
0x64e ISZERO
0x64f MUL
0x650 SWAP1
0x651 PUSH1 0x40
0x653 MLOAD
0x654 PUSH1 0x0
0x656 PUSH1 0x40
0x658 MLOAD
0x659 DUP1
0x65a DUP4
0x65b SUB
0x65c DUP2
0x65d DUP6
0x65e DUP9
0x65f DUP9
0x660 CALL
0x661 SWAP4
0x662 POP
0x663 POP
0x664 POP
0x665 POP
0x666 ISZERO
0x667 DUP1
0x668 ISZERO
0x669 PUSH2 0x676
0x66c JUMPI
---
0x5f8: V341 = 0x1
0x5fa: V342 = 0x0
0x5fd: V343 = S[0x1]
0x5ff: V344 = 0x100
0x602: V345 = EXP 0x100 0x0
0x604: V346 = DIV V343 0x1
0x605: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x61a: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x61b: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x630: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x631: V351 = 0x8fc
0x634: V352 = ADDRESS
0x635: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x64b: V355 = BALANCE V354
0x64e: V356 = ISZERO V355
0x64f: V357 = MUL V356 0x8fc
0x651: V358 = 0x40
0x653: V359 = M[0x40]
0x654: V360 = 0x0
0x656: V361 = 0x40
0x658: V362 = M[0x40]
0x65b: V363 = SUB V359 V362
0x660: V364 = CALL V357 V350 V355 V362 V363 V362 0x0
0x666: V365 = ISZERO V364
0x668: V366 = ISZERO V365
0x669: V367 = 0x676
0x66c: JUMPI 0x676 V366
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244]
Stack pops: 0
Stack additions: [V365]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V365]

================================

Block 0x66d
[0x66d:0x675]
---
Predecessors: [0x5f8]
Successors: []
---
0x66d RETURNDATASIZE
0x66e PUSH1 0x0
0x670 DUP1
0x671 RETURNDATACOPY
0x672 RETURNDATASIZE
0x673 PUSH1 0x0
0x675 REVERT
---
0x66d: V368 = RETURNDATASIZE
0x66e: V369 = 0x0
0x671: RETURNDATACOPY 0x0 0x0 V368
0x672: V370 = RETURNDATASIZE
0x673: V371 = 0x0
0x675: REVERT 0x0 V370
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V365]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V365]

================================

Block 0x676
[0x676:0x677]
---
Predecessors: [0x5f8]
Successors: [0x678]
---
0x676 JUMPDEST
0x677 POP
---
0x676: JUMPDEST 
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V365]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244]

================================

Block 0x678
[0x678:0x67e]
---
Predecessors: [0x5df, 0x676]
Successors: [0x96]
---
0x678 JUMPDEST
0x679 POP
0x67a POP
0x67b POP
0x67c POP
0x67d POP
0x67e JUMP
---
0x678: JUMPDEST 
0x67e: JUMP 0x96
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244]
Stack pops: 6
Stack additions: []
Exit stack: [V9]

================================

Block 0x67f
[0x67f:0x6d6]
---
Predecessors: [0xa4]
Successors: [0x6d7, 0x6db]
---
0x67f JUMPDEST
0x680 PUSH1 0x1
0x682 PUSH1 0x0
0x684 SWAP1
0x685 SLOAD
0x686 SWAP1
0x687 PUSH2 0x100
0x68a EXP
0x68b SWAP1
0x68c DIV
0x68d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a2 AND
0x6a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b8 AND
0x6b9 CALLER
0x6ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cf AND
0x6d0 EQ
0x6d1 ISZERO
0x6d2 ISZERO
0x6d3 PUSH2 0x6db
0x6d6 JUMPI
---
0x67f: JUMPDEST 
0x680: V372 = 0x1
0x682: V373 = 0x0
0x685: V374 = S[0x1]
0x687: V375 = 0x100
0x68a: V376 = EXP 0x100 0x0
0x68c: V377 = DIV V374 0x1
0x68d: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x6a3: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b8: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x6b9: V382 = CALLER
0x6ba: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cf: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x6d0: V385 = EQ V384 V381
0x6d1: V386 = ISZERO V385
0x6d2: V387 = ISZERO V386
0x6d3: V388 = 0x6db
0x6d6: JUMPI 0x6db V387
---
Entry stack: [V9, 0xad]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xad]

================================

Block 0x6d7
[0x6d7:0x6da]
---
Predecessors: [0x67f]
Successors: []
---
0x6d7 PUSH1 0x0
0x6d9 DUP1
0x6da REVERT
---
0x6d7: V389 = 0x0
0x6da: REVERT 0x0 0x0
---
Entry stack: [V9, 0xad]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xad]

================================

Block 0x6db
[0x6db:0x750]
---
Predecessors: [0x67f]
Successors: [0x751, 0x75a]
---
0x6db JUMPDEST
0x6dc PUSH1 0x1
0x6de PUSH1 0x0
0x6e0 SWAP1
0x6e1 SLOAD
0x6e2 SWAP1
0x6e3 PUSH2 0x100
0x6e6 EXP
0x6e7 SWAP1
0x6e8 DIV
0x6e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fe AND
0x6ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x714 AND
0x715 PUSH2 0x8fc
0x718 ADDRESS
0x719 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72e AND
0x72f BALANCE
0x730 SWAP1
0x731 DUP2
0x732 ISZERO
0x733 MUL
0x734 SWAP1
0x735 PUSH1 0x40
0x737 MLOAD
0x738 PUSH1 0x0
0x73a PUSH1 0x40
0x73c MLOAD
0x73d DUP1
0x73e DUP4
0x73f SUB
0x740 DUP2
0x741 DUP6
0x742 DUP9
0x743 DUP9
0x744 CALL
0x745 SWAP4
0x746 POP
0x747 POP
0x748 POP
0x749 POP
0x74a ISZERO
0x74b DUP1
0x74c ISZERO
0x74d PUSH2 0x75a
0x750 JUMPI
---
0x6db: JUMPDEST 
0x6dc: V390 = 0x1
0x6de: V391 = 0x0
0x6e1: V392 = S[0x1]
0x6e3: V393 = 0x100
0x6e6: V394 = EXP 0x100 0x0
0x6e8: V395 = DIV V392 0x1
0x6e9: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fe: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x6ff: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x714: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x715: V400 = 0x8fc
0x718: V401 = ADDRESS
0x719: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x72e: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x72f: V404 = BALANCE V403
0x732: V405 = ISZERO V404
0x733: V406 = MUL V405 0x8fc
0x735: V407 = 0x40
0x737: V408 = M[0x40]
0x738: V409 = 0x0
0x73a: V410 = 0x40
0x73c: V411 = M[0x40]
0x73f: V412 = SUB V408 V411
0x744: V413 = CALL V406 V399 V404 V411 V412 V411 0x0
0x74a: V414 = ISZERO V413
0x74c: V415 = ISZERO V414
0x74d: V416 = 0x75a
0x750: JUMPI 0x75a V415
---
Entry stack: [V9, 0xad]
Stack pops: 0
Stack additions: [V414]
Exit stack: [V9, 0xad, V414]

================================

Block 0x751
[0x751:0x759]
---
Predecessors: [0x6db]
Successors: []
---
0x751 RETURNDATASIZE
0x752 PUSH1 0x0
0x754 DUP1
0x755 RETURNDATACOPY
0x756 RETURNDATASIZE
0x757 PUSH1 0x0
0x759 REVERT
---
0x751: V417 = RETURNDATASIZE
0x752: V418 = 0x0
0x755: RETURNDATACOPY 0x0 0x0 V417
0x756: V419 = RETURNDATASIZE
0x757: V420 = 0x0
0x759: REVERT 0x0 V419
---
Entry stack: [V9, 0xad, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xad, V414]

================================

Block 0x75a
[0x75a:0x75c]
---
Predecessors: [0x6db]
Successors: [0xad]
---
0x75a JUMPDEST
0x75b POP
0x75c JUMP
---
0x75a: JUMPDEST 
0x75c: JUMP 0xad
---
Entry stack: [V9, 0xad, V414]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x75d
[0x75d:0x7b4]
---
Predecessors: [0xbb]
Successors: [0x7b5, 0x7b9]
---
0x75d JUMPDEST
0x75e PUSH1 0x1
0x760 PUSH1 0x0
0x762 SWAP1
0x763 SLOAD
0x764 SWAP1
0x765 PUSH2 0x100
0x768 EXP
0x769 SWAP1
0x76a DIV
0x76b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x780 AND
0x781 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x796 AND
0x797 CALLER
0x798 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ad AND
0x7ae EQ
0x7af ISZERO
0x7b0 ISZERO
0x7b1 PUSH2 0x7b9
0x7b4 JUMPI
---
0x75d: JUMPDEST 
0x75e: V421 = 0x1
0x760: V422 = 0x0
0x763: V423 = S[0x1]
0x765: V424 = 0x100
0x768: V425 = EXP 0x100 0x0
0x76a: V426 = DIV V423 0x1
0x76b: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x780: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x781: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x796: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x797: V431 = CALLER
0x798: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ad: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x7ae: V434 = EQ V433 V430
0x7af: V435 = ISZERO V434
0x7b0: V436 = ISZERO V435
0x7b1: V437 = 0x7b9
0x7b4: JUMPI 0x7b9 V436
---
Entry stack: [V9, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xc4]

================================

Block 0x7b5
[0x7b5:0x7b8]
---
Predecessors: [0x75d]
Successors: []
---
0x7b5 PUSH1 0x0
0x7b7 DUP1
0x7b8 REVERT
---
0x7b5: V438 = 0x0
0x7b8: REVERT 0x0 0x0
---
Entry stack: [V9, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xc4]

================================

Block 0x7b9
[0x7b9:0x7f3]
---
Predecessors: [0x75d]
Successors: []
---
0x7b9 JUMPDEST
0x7ba PUSH1 0x1
0x7bc PUSH1 0x0
0x7be SWAP1
0x7bf SLOAD
0x7c0 SWAP1
0x7c1 PUSH2 0x100
0x7c4 EXP
0x7c5 SWAP1
0x7c6 DIV
0x7c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dc AND
0x7dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f2 AND
0x7f3 SELFDESTRUCT
---
0x7b9: JUMPDEST 
0x7ba: V439 = 0x1
0x7bc: V440 = 0x0
0x7bf: V441 = S[0x1]
0x7c1: V442 = 0x100
0x7c4: V443 = EXP 0x100 0x0
0x7c6: V444 = DIV V441 0x1
0x7c7: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x7dd: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x7f3: SELFDESTRUCT V448
---
Entry stack: [V9, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xc4]

================================

Block 0x7f4
[0x7f4:0x802]
---
Predecessors: [0x4d1]
Successors: [0x4fc]
---
0x7f4 JUMPDEST
0x7f5 PUSH1 0x40
0x7f7 MLOAD
0x7f8 PUSH1 0x4c
0x7fa DUP1
0x7fb PUSH2 0x804
0x7fe DUP4
0x7ff CODECOPY
0x800 ADD
0x801 SWAP1
0x802 JUMP
---
0x7f4: JUMPDEST 
0x7f5: V449 = 0x40
0x7f7: V450 = M[0x40]
0x7f8: V451 = 0x4c
0x7fb: V452 = 0x804
0x7ff: CODECOPY V450 0x804 0x4c
0x800: V453 = ADD 0x4c V450
0x802: JUMP 0x4fc
---
Entry stack: [V9, 0x96, V36, V161, V169, V217, V244, V244, V277, 0x4fc]
Stack pops: 1
Stack additions: [V453]
Exit stack: [V9, 0x96, V36, V161, V169, V217, V244, V244, V277, V453]

================================

Block 0x803
[0x803:0x820]
---
Predecessors: []
Successors: [0x821]
---
0x803 INVALID
0x804 PUSH1 0x80
0x806 PUSH1 0x40
0x808 MSTORE
0x809 PUSH1 0x40
0x80b MLOAD
0x80c PUSH1 0x20
0x80e DUP1
0x80f PUSH1 0x4c
0x811 DUP4
0x812 CODECOPY
0x813 DUP2
0x814 ADD
0x815 DUP1
0x816 PUSH1 0x40
0x818 MSTORE
0x819 PUSH1 0x20
0x81b DUP2
0x81c LT
0x81d ISZERO
0x81e PUSH1 0x21
0x820 JUMPI
---
0x803: INVALID 
0x804: V454 = 0x80
0x806: V455 = 0x40
0x808: M[0x40] = 0x80
0x809: V456 = 0x40
0x80b: V457 = M[0x40]
0x80c: V458 = 0x20
0x80f: V459 = 0x4c
0x812: CODECOPY V457 0x4c 0x20
0x814: V460 = ADD V457 0x20
0x816: V461 = 0x40
0x818: M[0x40] = V460
0x819: V462 = 0x20
0x81c: V463 = LT V460 0x20
0x81d: V464 = ISZERO V463
0x81e: V465 = 0x21
0x820: THROWI V464
---
Entry stack: []
Stack pops: 0
Stack additions: [V460, V457]
Exit stack: []

================================

Block 0x821
[0x821:0x890]
---
Predecessors: [0x803]
Successors: []
---
0x821 PUSH1 0x0
0x823 DUP1
0x824 REVERT
0x825 JUMPDEST
0x826 DUP2
0x827 ADD
0x828 SWAP1
0x829 DUP1
0x82a DUP1
0x82b MLOAD
0x82c SWAP1
0x82d PUSH1 0x20
0x82f ADD
0x830 SWAP1
0x831 SWAP3
0x832 SWAP2
0x833 SWAP1
0x834 POP
0x835 POP
0x836 POP
0x837 DUP1
0x838 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84d AND
0x84e SELFDESTRUCT
0x84f INVALID
0x850 LOG1
0x851 PUSH6 0x627a7a723058
0x858 SHA3
0x859 MISSING 0xfc
0x85a ADDRESS
0x85b ADDRESS
0x85c SWAP5
0x85d NUMBER
0x85e MISSING 0xe4
0x85f PUSH18 0xe415c122974903555c2e6d2d4bb799a6edc
0x872 INVALID
0x873 DUP2
0x874 MISSING 0x47
0x875 PUSH27 0x11bdbe0029
---
0x821: V466 = 0x0
0x824: REVERT 0x0 0x0
0x825: JUMPDEST 
0x827: V467 = ADD S1 S0
0x82b: V468 = M[S1]
0x82d: V469 = 0x20
0x82f: V470 = ADD 0x20 S1
0x838: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x84d: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x84e: SELFDESTRUCT V472
0x84f: INVALID 
0x850: LOG S0 S1 S2
0x851: V473 = 0x627a7a723058
0x858: V474 = SHA3 0x627a7a723058 S3
0x859: MISSING 0xfc
0x85a: V475 = ADDRESS
0x85b: V476 = ADDRESS
0x85d: V477 = NUMBER
0x85e: MISSING 0xe4
0x85f: V478 = 0xe415c122974903555c2e6d2d4bb799a6edc
0x872: INVALID 
0x874: MISSING 0x47
0x875: V479 = 0x11bdbe0029
---
Entry stack: [V457, V460]
Stack pops: 0
Stack additions: [V468, V474, V477, S3, V475, S0, S1, S2, V476, 0xe415c122974903555c2e6d2d4bb799a6edc, S1, S0, S1, 0x11bdbe0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x28cb5157
Entry block: 0x5e
Exit block: 0x66
Body: 0x5e, 0x66, 0xc6, 0x11e, 0x122, 0x184, 0x1a5, 0x1aa, 0x1b7, 0x224

Function 1:
Public function signature: 0x3a3800f1
Entry block: 0x68
Exit block: 0x96
Body: 0x68, 0x7a, 0x7e, 0x96, 0x228, 0x280, 0x284, 0x380, 0x384, 0x38f, 0x398, 0x3aa, 0x3ae, 0x3cb, 0x438, 0x464, 0x4d1, 0x4fc, 0x544, 0x54d, 0x5b1, 0x5b5, 0x5c0, 0x5c9, 0x5db, 0x5df, 0x5f8, 0x66d, 0x676, 0x678, 0x7f4

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x98
Exit block: 0xad
Body: 0x98, 0xa0, 0xa4, 0xad, 0x67f, 0x6d7, 0x6db, 0x751, 0x75a

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0xaf
Exit block: 0x7b9
Body: 0xaf, 0xb7, 0xbb, 0x75d, 0x7b5, 0x7b9

Function 4:
Public fallback function
Entry block: 0x5c
Exit block: 0x5c
Body: 0x5c

