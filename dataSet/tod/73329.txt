Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x48
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x48
0xc: JUMPI 0x48 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x4a]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x8ed4b21a
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x4a
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x8ed4b21a
0x22: V15 = EQ V13 0x8ed4b21a
0x23: V16 = 0x4a
0x26: JUMPI 0x4a V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x5d]
---
0x27 DUP1
0x28 PUSH4 0xa7fafab7
0x2d EQ
0x2e PUSH2 0x5d
0x31 JUMPI
---
0x28: V17 = 0xa7fafab7
0x2d: V18 = EQ 0xa7fafab7 V13
0x2e: V19 = 0x5d
0x31: JUMPI 0x5d V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xca]
---
0x32 DUP1
0x33 PUSH4 0xcaa130d2
0x38 EQ
0x39 PUSH2 0xca
0x3c JUMPI
---
0x33: V20 = 0xcaa130d2
0x38: V21 = EQ 0xcaa130d2 V13
0x39: V22 = 0xca
0x3c: JUMPI 0xca V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xea]
---
0x3d DUP1
0x3e PUSH4 0xd1058e59
0x43 EQ
0x44 PUSH2 0xea
0x47 JUMPI
---
0x3e: V23 = 0xd1058e59
0x43: V24 = EQ 0xd1058e59 V13
0x44: V25 = 0xea
0x47: JUMPI 0xea V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x49]
---
Predecessors: [0x0, 0x3d, 0x49e, 0x74d, 0x7b8, 0x819]
Successors: []
---
0x48 JUMPDEST
0x49 STOP
---
0x48: JUMPDEST 
0x49: STOP 
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4a
[0x4a:0x50]
---
Predecessors: [0xd]
Successors: [0x51, 0x55]
---
0x4a JUMPDEST
0x4b CALLVALUE
0x4c ISZERO
0x4d PUSH2 0x55
0x50 JUMPI
---
0x4a: JUMPDEST 
0x4b: V26 = CALLVALUE
0x4c: V27 = ISZERO V26
0x4d: V28 = 0x55
0x50: JUMPI 0x55 V27
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x51
[0x51:0x54]
---
Predecessors: [0x4a]
Successors: []
---
0x51 PUSH1 0x0
0x53 DUP1
0x54 REVERT
---
0x51: V29 = 0x0
0x54: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x55
[0x55:0x5c]
---
Predecessors: [0x4a]
Successors: [0xfd]
---
0x55 JUMPDEST
0x56 PUSH2 0x48
0x59 PUSH2 0xfd
0x5c JUMP
---
0x55: JUMPDEST 
0x56: V30 = 0x48
0x59: V31 = 0xfd
0x5c: JUMP 0xfd
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48]
Exit stack: [V13, 0x48]

================================

Block 0x5d
[0x5d:0x63]
---
Predecessors: [0x27]
Successors: [0x64, 0x68]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5d: JUMPDEST 
0x5e: V32 = CALLVALUE
0x5f: V33 = ISZERO V32
0x60: V34 = 0x68
0x63: JUMPI 0x68 V33
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5d]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V35 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x68
[0x68:0xc9]
---
Predecessors: [0x5d]
Successors: [0x4a4]
---
0x68 JUMPDEST
0x69 PUSH2 0x48
0x6c PUSH1 0x4
0x6e DUP1
0x6f CALLDATALOAD
0x70 PUSH1 0xff
0x72 AND
0x73 SWAP1
0x74 PUSH2 0x2a4
0x77 PUSH1 0x24
0x79 PUSH1 0x14
0x7b PUSH2 0x280
0x7e PUSH1 0x40
0x80 MLOAD
0x81 SWAP1
0x82 DUP2
0x83 ADD
0x84 PUSH1 0x40
0x86 MSTORE
0x87 SWAP2
0x88 SWAP1
0x89 DUP3
0x8a DUP3
0x8b PUSH2 0x280
0x8e DUP1
0x8f DUP3
0x90 DUP5
0x91 CALLDATACOPY
0x92 DUP3
0x93 ADD
0x94 SWAP2
0x95 POP
0x96 POP
0x97 POP
0x98 POP
0x99 POP
0x9a SWAP2
0x9b SWAP1
0x9c DUP1
0x9d PUSH2 0x280
0xa0 ADD
0xa1 SWAP1
0xa2 PUSH1 0x14
0xa4 DUP1
0xa5 PUSH1 0x20
0xa7 MUL
0xa8 PUSH1 0x40
0xaa MLOAD
0xab SWAP1
0xac DUP2
0xad ADD
0xae PUSH1 0x40
0xb0 MSTORE
0xb1 SWAP2
0xb2 SWAP1
0xb3 DUP3
0xb4 DUP3
0xb5 PUSH2 0x280
0xb8 DUP1
0xb9 DUP3
0xba DUP5
0xbb CALLDATACOPY
0xbc POP
0xbd SWAP4
0xbe SWAP6
0xbf POP
0xc0 PUSH2 0x4a4
0xc3 SWAP5
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 JUMP
---
0x68: JUMPDEST 
0x69: V36 = 0x48
0x6c: V37 = 0x4
0x6f: V38 = CALLDATALOAD 0x4
0x70: V39 = 0xff
0x72: V40 = AND 0xff V38
0x74: V41 = 0x2a4
0x77: V42 = 0x24
0x79: V43 = 0x14
0x7b: V44 = 0x280
0x7e: V45 = 0x40
0x80: V46 = M[0x40]
0x83: V47 = ADD V46 0x280
0x84: V48 = 0x40
0x86: M[0x40] = V47
0x8b: V49 = 0x280
0x91: CALLDATACOPY V46 0x24 0x280
0x93: V50 = ADD V46 0x280
0x9d: V51 = 0x280
0xa0: V52 = ADD 0x280 0x2a4
0xa2: V53 = 0x14
0xa5: V54 = 0x20
0xa7: V55 = MUL 0x20 0x14
0xa8: V56 = 0x40
0xaa: V57 = M[0x40]
0xad: V58 = ADD V57 0x280
0xae: V59 = 0x40
0xb0: M[0x40] = V58
0xb5: V60 = 0x280
0xbb: CALLDATACOPY V57 0x2a4 0x280
0xc0: V61 = 0x4a4
0xc9: JUMP 0x4a4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48, V40, V46, V57]
Exit stack: [V13, 0x48, V40, V46, V57]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x32]
Successors: [0xd1, 0xd5]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V62 = CALLVALUE
0xcc: V63 = ISZERO V62
0xcd: V64 = 0xd5
0xd0: JUMPI 0xd5 V63
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xca]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V65 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd5
[0xd5:0xe9]
---
Predecessors: [0xca]
Successors: [0x754]
---
0xd5 JUMPDEST
0xd6 PUSH2 0x48
0xd9 PUSH8 0xffffffffffffffff
0xe2 PUSH1 0x4
0xe4 CALLDATALOAD
0xe5 AND
0xe6 PUSH2 0x754
0xe9 JUMP
---
0xd5: JUMPDEST 
0xd6: V66 = 0x48
0xd9: V67 = 0xffffffffffffffff
0xe2: V68 = 0x4
0xe4: V69 = CALLDATALOAD 0x4
0xe5: V70 = AND V69 0xffffffffffffffff
0xe6: V71 = 0x754
0xe9: JUMP 0x754
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48, V70]
Exit stack: [V13, 0x48, V70]

================================

Block 0xea
[0xea:0xf0]
---
Predecessors: [0x3d]
Successors: [0xf1, 0xf5]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xea: JUMPDEST 
0xeb: V72 = CALLVALUE
0xec: V73 = ISZERO V72
0xed: V74 = 0xf5
0xf0: JUMPI 0xf5 V73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xea]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V75 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0xea]
Successors: [0x7bb]
---
0xf5 JUMPDEST
0xf6 PUSH2 0x48
0xf9 PUSH2 0x7bb
0xfc JUMP
---
0xf5: JUMPDEST 
0xf6: V76 = 0x48
0xf9: V77 = 0x7bb
0xfc: JUMP 0x7bb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48]
Exit stack: [V13, 0x48]

================================

Block 0xfd
[0xfd:0x12d]
---
Predecessors: [0x55, 0x745]
Successors: [0x12e, 0x135]
---
0xfd JUMPDEST
0xfe PUSH1 0x1
0x100 SLOAD
0x101 PUSH21 0x10000000000000000000000000000000000000000
0x117 SWAP1
0x118 DIV
0x119 PUSH8 0xffffffffffffffff
0x122 AND
0x123 PUSH1 0x0
0x125 DUP1
0x126 DUP1
0x127 DUP4
0x128 ISZERO
0x129 ISZERO
0x12a PUSH2 0x135
0x12d JUMPI
---
0xfd: JUMPDEST 
0xfe: V78 = 0x1
0x100: V79 = S[0x1]
0x101: V80 = 0x10000000000000000000000000000000000000000
0x118: V81 = DIV V79 0x10000000000000000000000000000000000000000
0x119: V82 = 0xffffffffffffffff
0x122: V83 = AND 0xffffffffffffffff V81
0x123: V84 = 0x0
0x128: V85 = ISZERO V83
0x129: V86 = ISZERO V85
0x12a: V87 = 0x135
0x12d: JUMPI 0x135 V86
---
Entry stack: [V13, 0x48, S5, V46, V57, S2, S1, {0x48, 0x74d}]
Stack pops: 0
Stack additions: [V83, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x48, S5, V46, V57, S2, S1, {0x48, 0x74d}, V83, 0x0, 0x0, 0x0]

================================

Block 0x12e
[0x12e:0x134]
---
Predecessors: [0xfd]
Successors: [0x414]
---
0x12e NUMBER
0x12f SWAP4
0x130 POP
0x131 PUSH2 0x414
0x134 JUMP
---
0x12e: V88 = NUMBER
0x131: V89 = 0x414
0x134: JUMP 0x414
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, {0x48, 0x74d}, V83, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V88, S2, S1, S0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, {0x48, 0x74d}, V88, 0x0, 0x0, 0x0]

================================

Block 0x135
[0x135:0x147]
---
Predecessors: [0xfd, 0x40f]
Successors: [0x148, 0x414]
---
0x135 JUMPDEST
0x136 NUMBER
0x137 DUP5
0x138 PUSH8 0xffffffffffffffff
0x141 AND
0x142 LT
0x143 ISZERO
0x144 PUSH2 0x414
0x147 JUMPI
---
0x135: JUMPDEST 
0x136: V90 = NUMBER
0x138: V91 = 0xffffffffffffffff
0x141: V92 = AND 0xffffffffffffffff S3
0x142: V93 = LT V92 V90
0x143: V94 = ISZERO V93
0x144: V95 = 0x414
0x147: JUMPI 0x414 V94
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x148
[0x148:0x152]
---
Predecessors: [0x135]
Successors: [0x153, 0x157]
---
0x148 PUSH3 0x186a0
0x14c GAS
0x14d LT
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x148: V96 = 0x186a0
0x14c: V97 = GAS
0x14d: V98 = LT V97 0x186a0
0x14e: V99 = ISZERO V98
0x14f: V100 = 0x157
0x152: JUMPI 0x157 V99
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x148]
Successors: [0x414]
---
0x153 PUSH2 0x414
0x156 JUMP
---
0x153: V101 = 0x414
0x156: JUMP 0x414
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x157
[0x157:0x160]
---
Predecessors: [0x148]
Successors: [0x161]
---
0x157 JUMPDEST
0x158 POP
0x159 PUSH1 0x1
0x15b SWAP1
0x15c SWAP3
0x15d ADD
0x15e SWAP2
0x15f PUSH1 0x0
---
0x157: JUMPDEST 
0x159: V102 = 0x1
0x15d: V103 = ADD S3 0x1
0x15f: V104 = 0x0
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V103, S2, S1, 0x0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, S2, S1, 0x0]

================================

Block 0x161
[0x161:0x182]
---
Predecessors: [0x157, 0x3e5]
Successors: [0x183, 0x3ed]
---
0x161 JUMPDEST
0x162 PUSH8 0xffffffffffffffff
0x16b DUP5
0x16c AND
0x16d PUSH1 0x0
0x16f SWAP1
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x2
0x174 PUSH1 0x20
0x176 MSTORE
0x177 PUSH1 0x40
0x179 SWAP1
0x17a SHA3
0x17b SLOAD
0x17c DUP2
0x17d LT
0x17e ISZERO
0x17f PUSH2 0x3ed
0x182 JUMPI
---
0x161: JUMPDEST 
0x162: V105 = 0xffffffffffffffff
0x16c: V106 = AND V103 0xffffffffffffffff
0x16d: V107 = 0x0
0x171: M[0x0] = V106
0x172: V108 = 0x2
0x174: V109 = 0x20
0x176: M[0x20] = 0x2
0x177: V110 = 0x40
0x17a: V111 = SHA3 0x0 0x40
0x17b: V112 = S[V111]
0x17d: V113 = LT S0 V112
0x17e: V114 = ISZERO V113
0x17f: V115 = 0x3ed
0x182: JUMPI 0x3ed V114
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, S2, S1, S0]

================================

Block 0x183
[0x183:0x18c]
---
Predecessors: [0x161]
Successors: [0x18d, 0x3d9]
---
0x183 PUSH3 0x975e0
0x187 GAS
0x188 LT
0x189 PUSH2 0x3d9
0x18c JUMPI
---
0x183: V116 = 0x975e0
0x187: V117 = GAS
0x188: V118 = LT V117 0x975e0
0x189: V119 = 0x3d9
0x18c: JUMPI 0x3d9 V118
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, S2, S1, S0]

================================

Block 0x18d
[0x18d:0x1c4]
---
Predecessors: [0x183]
Successors: [0x1c5, 0x1c6]
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 SLOAD
0x191 PUSH8 0xffffffffffffffff
0x19a DUP7
0x19b AND
0x19c DUP3
0x19d MSTORE
0x19e PUSH1 0x2
0x1a0 PUSH1 0x20
0x1a2 MSTORE
0x1a3 PUSH1 0x40
0x1a5 SWAP1
0x1a6 SWAP2
0x1a7 SHA3
0x1a8 DUP1
0x1a9 SLOAD
0x1aa PUSH1 0x1
0x1ac PUSH1 0xa0
0x1ae PUSH1 0x2
0x1b0 EXP
0x1b1 SUB
0x1b2 SWAP1
0x1b3 SWAP3
0x1b4 AND
0x1b5 SWAP2
0x1b6 PUSH4 0xe98b7f4d
0x1bb SWAP2
0x1bc SWAP1
0x1bd DUP5
0x1be SWAP1
0x1bf DUP2
0x1c0 LT
0x1c1 PUSH2 0x1c6
0x1c4 JUMPI
---
0x18d: V120 = 0x0
0x190: V121 = S[0x0]
0x191: V122 = 0xffffffffffffffff
0x19b: V123 = AND V103 0xffffffffffffffff
0x19d: M[0x0] = V123
0x19e: V124 = 0x2
0x1a0: V125 = 0x20
0x1a2: M[0x20] = 0x2
0x1a3: V126 = 0x40
0x1a7: V127 = SHA3 0x0 0x40
0x1a9: V128 = S[V127]
0x1aa: V129 = 0x1
0x1ac: V130 = 0xa0
0x1ae: V131 = 0x2
0x1b0: V132 = EXP 0x2 0xa0
0x1b1: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b4: V134 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V135 = 0xe98b7f4d
0x1c0: V136 = LT S0 V128
0x1c1: V137 = 0x1c6
0x1c4: JUMPI 0x1c6 V136
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V134, 0xe98b7f4d, V127, S0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, S2, S1, S0, V134, 0xe98b7f4d, V127, S0]

================================

Block 0x1c5
[0x1c5:0x1c5]
---
Predecessors: [0x18d]
Successors: []
---
0x1c5 INVALID
---
0x1c5: INVALID 
---
Entry stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, V103, S6, S5, S4, V134, 0xe98b7f4d, V127, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, V103, S6, S5, S4, V134, 0xe98b7f4d, V127, S0]

================================

Block 0x1c6
[0x1c6:0x235]
---
Predecessors: [0x18d]
Successors: [0x236, 0x23a]
---
0x1c6 JUMPDEST
0x1c7 SWAP1
0x1c8 PUSH1 0x0
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd PUSH1 0x0
0x1cf SHA3
0x1d0 SWAP1
0x1d1 PUSH1 0x4
0x1d3 SWAP2
0x1d4 DUP3
0x1d5 DUP3
0x1d6 DIV
0x1d7 ADD
0x1d8 SWAP2
0x1d9 SWAP1
0x1da MOD
0x1db PUSH1 0x8
0x1dd MUL
0x1de SWAP1
0x1df SLOAD
0x1e0 SWAP1
0x1e1 PUSH2 0x100
0x1e4 EXP
0x1e5 SWAP1
0x1e6 DIV
0x1e7 PUSH8 0xffffffffffffffff
0x1f0 AND
0x1f1 PUSH1 0x0
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 PUSH2 0x140
0x1f9 ADD
0x1fa MSTORE
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe PUSH1 0xe0
0x200 PUSH1 0x2
0x202 EXP
0x203 PUSH4 0xffffffff
0x208 DUP5
0x209 AND
0x20a MUL
0x20b DUP2
0x20c MSTORE
0x20d PUSH8 0xffffffffffffffff
0x216 SWAP1
0x217 SWAP2
0x218 AND
0x219 PUSH1 0x4
0x21b DUP3
0x21c ADD
0x21d MSTORE
0x21e PUSH1 0x24
0x220 ADD
0x221 PUSH2 0x140
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 DUP4
0x229 SUB
0x22a DUP2
0x22b PUSH1 0x0
0x22d DUP8
0x22e DUP1
0x22f EXTCODESIZE
0x230 ISZERO
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x1c6: JUMPDEST 
0x1c8: V138 = 0x0
0x1ca: M[0x0] = V127
0x1cb: V139 = 0x20
0x1cd: V140 = 0x0
0x1cf: V141 = SHA3 0x0 0x20
0x1d1: V142 = 0x4
0x1d6: V143 = DIV S0 0x4
0x1d7: V144 = ADD V143 V141
0x1da: V145 = MOD S0 0x4
0x1db: V146 = 0x8
0x1dd: V147 = MUL 0x8 V145
0x1df: V148 = S[V144]
0x1e1: V149 = 0x100
0x1e4: V150 = EXP 0x100 V147
0x1e6: V151 = DIV V148 V150
0x1e7: V152 = 0xffffffffffffffff
0x1f0: V153 = AND 0xffffffffffffffff V151
0x1f1: V154 = 0x0
0x1f3: V155 = 0x40
0x1f5: V156 = M[0x40]
0x1f6: V157 = 0x140
0x1f9: V158 = ADD 0x140 V156
0x1fa: M[V158] = 0x0
0x1fb: V159 = 0x40
0x1fd: V160 = M[0x40]
0x1fe: V161 = 0xe0
0x200: V162 = 0x2
0x202: V163 = EXP 0x2 0xe0
0x203: V164 = 0xffffffff
0x209: V165 = AND 0xe98b7f4d 0xffffffff
0x20a: V166 = MUL 0xe98b7f4d 0x100000000000000000000000000000000000000000000000000000000
0x20c: M[V160] = 0xe98b7f4d00000000000000000000000000000000000000000000000000000000
0x20d: V167 = 0xffffffffffffffff
0x218: V168 = AND V153 0xffffffffffffffff
0x219: V169 = 0x4
0x21c: V170 = ADD V160 0x4
0x21d: M[V170] = V168
0x21e: V171 = 0x24
0x220: V172 = ADD 0x24 V160
0x221: V173 = 0x140
0x224: V174 = 0x40
0x226: V175 = M[0x40]
0x229: V176 = SUB V172 V175
0x22b: V177 = 0x0
0x22f: V178 = EXTCODESIZE V134
0x230: V179 = ISZERO V178
0x231: V180 = ISZERO V179
0x232: V181 = 0x23a
0x235: JUMPI 0x23a V180
---
Entry stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, V103, S6, S5, S4, V134, 0xe98b7f4d, V127, S0]
Stack pops: 4
Stack additions: [S3, S2, V172, 0x140, V175, V176, V175, 0x0, S3]
Exit stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, V103, S6, S5, S4, V134, 0xe98b7f4d, V172, 0x140, V175, V176, V175, 0x0, V134]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x1c6]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V182 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, S18, V46, V57, S15, S14, S13, V103, S11, S10, S9, V134, 0xe98b7f4d, V172, 0x140, V175, V176, V175, 0x0, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S18, V46, V57, S15, S14, S13, V103, S11, S10, S9, V134, 0xe98b7f4d, V172, 0x140, V175, V176, V175, 0x0, V134]

================================

Block 0x23a
[0x23a:0x246]
---
Predecessors: [0x1c6]
Successors: [0x247, 0x24b]
---
0x23a JUMPDEST
0x23b PUSH2 0x2c6
0x23e GAS
0x23f SUB
0x240 CALL
0x241 ISZERO
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x23a: JUMPDEST 
0x23b: V183 = 0x2c6
0x23e: V184 = GAS
0x23f: V185 = SUB V184 0x2c6
0x240: V186 = CALL V185 V134 0x0 V175 V176 V175 0x140
0x241: V187 = ISZERO V186
0x242: V188 = ISZERO V187
0x243: V189 = 0x24b
0x246: JUMPI 0x24b V188
---
Entry stack: [V13, 0x48, S18, V46, V57, S15, S14, S13, V103, S11, S10, S9, V134, 0xe98b7f4d, V172, 0x140, V175, V176, V175, 0x0, V134]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x48, S18, V46, V57, S15, S14, S13, V103, S11, S10, S9, V134, 0xe98b7f4d, V172]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x23a]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V190 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, V103, S5, S4, S3, V134, 0xe98b7f4d, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, V103, S5, S4, S3, V134, 0xe98b7f4d, V172]

================================

Block 0x24b
[0x24b:0x2be]
---
Predecessors: [0x23a]
Successors: [0x2bf, 0x2c0]
---
0x24b JUMPDEST
0x24c POP
0x24d POP
0x24e POP
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP1
0x253 MLOAD
0x254 SWAP1
0x255 PUSH1 0x20
0x257 ADD
0x258 DUP1
0x259 MLOAD
0x25a SWAP1
0x25b PUSH1 0x20
0x25d ADD
0x25e DUP1
0x25f MLOAD
0x260 SWAP1
0x261 PUSH1 0x20
0x263 ADD
0x264 DUP1
0x265 MLOAD
0x266 SWAP1
0x267 PUSH1 0x20
0x269 ADD
0x26a DUP1
0x26b MLOAD
0x26c SWAP1
0x26d PUSH1 0x20
0x26f ADD
0x270 DUP1
0x271 MLOAD
0x272 SWAP1
0x273 PUSH1 0x20
0x275 ADD
0x276 DUP1
0x277 MLOAD
0x278 SWAP1
0x279 PUSH1 0x20
0x27b ADD
0x27c DUP1
0x27d MLOAD
0x27e SWAP1
0x27f PUSH1 0x20
0x281 ADD
0x282 DUP1
0x283 MLOAD
0x284 SWAP1
0x285 PUSH1 0x20
0x287 ADD
0x288 DUP1
0x289 MLOAD
0x28a POP
0x28b POP
0x28c POP
0x28d PUSH8 0xffffffffffffffff
0x296 DUP13
0x297 AND
0x298 PUSH1 0x0
0x29a SWAP1
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x2
0x29f PUSH1 0x20
0x2a1 MSTORE
0x2a2 PUSH1 0x40
0x2a4 DUP2
0x2a5 SHA3
0x2a6 DUP1
0x2a7 SLOAD
0x2a8 SWAP10
0x2a9 SWAP13
0x2aa POP
0x2ab SWAP8
0x2ac SWAP11
0x2ad POP
0x2ae SWAP8
0x2af DUP10
0x2b0 SWAP7
0x2b1 POP
0x2b2 DUP7
0x2b3 LT
0x2b4 SWAP5
0x2b5 POP
0x2b6 PUSH2 0x2c0
0x2b9 SWAP4
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd POP
0x2be JUMPI
---
0x24b: JUMPDEST 
0x24f: V191 = 0x40
0x251: V192 = M[0x40]
0x253: V193 = M[V192]
0x255: V194 = 0x20
0x257: V195 = ADD 0x20 V192
0x259: V196 = M[V195]
0x25b: V197 = 0x20
0x25d: V198 = ADD 0x20 V195
0x25f: V199 = M[V198]
0x261: V200 = 0x20
0x263: V201 = ADD 0x20 V198
0x265: V202 = M[V201]
0x267: V203 = 0x20
0x269: V204 = ADD 0x20 V201
0x26b: V205 = M[V204]
0x26d: V206 = 0x20
0x26f: V207 = ADD 0x20 V204
0x271: V208 = M[V207]
0x273: V209 = 0x20
0x275: V210 = ADD 0x20 V207
0x277: V211 = M[V210]
0x279: V212 = 0x20
0x27b: V213 = ADD 0x20 V210
0x27d: V214 = M[V213]
0x27f: V215 = 0x20
0x281: V216 = ADD 0x20 V213
0x283: V217 = M[V216]
0x285: V218 = 0x20
0x287: V219 = ADD 0x20 V216
0x289: V220 = M[V219]
0x28d: V221 = 0xffffffffffffffff
0x297: V222 = AND V103 0xffffffffffffffff
0x298: V223 = 0x0
0x29c: M[0x0] = V222
0x29d: V224 = 0x2
0x29f: V225 = 0x20
0x2a1: M[0x20] = 0x2
0x2a2: V226 = 0x40
0x2a5: V227 = SHA3 0x0 0x40
0x2a7: V228 = S[V227]
0x2b3: V229 = LT S3 V228
0x2b6: V230 = 0x2c0
0x2be: JUMPI 0x2c0 V229
---
Entry stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, V103, S5, S4, S3, V134, 0xe98b7f4d, V172]
Stack pops: 7
Stack additions: [S6, V193, V196, S3, 0x0, V227, S3]
Exit stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, V103, V193, V196, S3, 0x0, V227, S3]

================================

Block 0x2bf
[0x2bf:0x2bf]
---
Predecessors: [0x24b]
Successors: []
---
0x2bf INVALID
---
0x2bf: INVALID 
---
Entry stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, V103, V193, V196, S3, 0x0, V227, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, V103, V193, V196, S3, 0x0, V227, S0]

================================

Block 0x2c0
[0x2c0:0x2fb]
---
Predecessors: [0x24b]
Successors: [0x2fc, 0x2fe]
---
0x2c0 JUMPDEST
0x2c1 SWAP1
0x2c2 PUSH1 0x0
0x2c4 MSTORE
0x2c5 PUSH1 0x20
0x2c7 PUSH1 0x0
0x2c9 SHA3
0x2ca SWAP1
0x2cb PUSH1 0x4
0x2cd SWAP2
0x2ce DUP3
0x2cf DUP3
0x2d0 DIV
0x2d1 ADD
0x2d2 SWAP2
0x2d3 SWAP1
0x2d4 MOD
0x2d5 PUSH1 0x8
0x2d7 MUL
0x2d8 SWAP1
0x2d9 SLOAD
0x2da SWAP1
0x2db PUSH2 0x100
0x2de EXP
0x2df SWAP1
0x2e0 DIV
0x2e1 PUSH8 0xffffffffffffffff
0x2ea AND
0x2eb PUSH8 0xffffffffffffffff
0x2f4 AND
0x2f5 GT
0x2f6 DUP1
0x2f7 ISZERO
0x2f8 PUSH2 0x2fe
0x2fb JUMPI
---
0x2c0: JUMPDEST 
0x2c2: V231 = 0x0
0x2c4: M[0x0] = V227
0x2c5: V232 = 0x20
0x2c7: V233 = 0x0
0x2c9: V234 = SHA3 0x0 0x20
0x2cb: V235 = 0x4
0x2d0: V236 = DIV S0 0x4
0x2d1: V237 = ADD V236 V234
0x2d4: V238 = MOD S0 0x4
0x2d5: V239 = 0x8
0x2d7: V240 = MUL 0x8 V238
0x2d9: V241 = S[V237]
0x2db: V242 = 0x100
0x2de: V243 = EXP 0x100 V240
0x2e0: V244 = DIV V241 V243
0x2e1: V245 = 0xffffffffffffffff
0x2ea: V246 = AND 0xffffffffffffffff V244
0x2eb: V247 = 0xffffffffffffffff
0x2f4: V248 = AND 0xffffffffffffffff V246
0x2f5: V249 = GT V248 0x0
0x2f7: V250 = ISZERO V249
0x2f8: V251 = 0x2fe
0x2fb: JUMPI 0x2fe V250
---
Entry stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, V103, V193, V196, S3, 0x0, V227, S0]
Stack pops: 3
Stack additions: [V249]
Exit stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, V103, V193, V196, S3, V249]

================================

Block 0x2fc
[0x2fc:0x2fd]
---
Predecessors: [0x2c0]
Successors: [0x2fe]
---
0x2fc POP
0x2fd DUP3
---
0x2fc: NOP 
---
Entry stack: [V13, 0x48, S10, V46, V57, S7, S6, S5, V103, V193, V196, S1, V249]
Stack pops: 4
Stack additions: [S3, S2, S1, S3]
Exit stack: [V13, 0x48, S10, V46, V57, S7, S6, S5, V103, V193, V196, S1, V193]

================================

Block 0x2fe
[0x2fe:0x304]
---
Predecessors: [0x2c0, 0x2fc]
Successors: [0x305, 0x307]
---
0x2fe JUMPDEST
0x2ff DUP1
0x300 ISZERO
0x301 PUSH2 0x307
0x304 JUMPI
---
0x2fe: JUMPDEST 
0x300: V252 = ISZERO S0
0x301: V253 = 0x307
0x304: JUMPI 0x307 V252
---
Entry stack: [V13, 0x48, S10, V46, V57, S7, S6, S5, V103, V193, V196, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x48, S10, V46, V57, S7, S6, S5, V103, V193, V196, S1, S0]

================================

Block 0x305
[0x305:0x306]
---
Predecessors: [0x2fe]
Successors: [0x307]
---
0x305 POP
0x306 DUP2
---
0x305: NOP 
---
Entry stack: [V13, 0x48, S10, V46, V57, S7, S6, S5, V103, V193, V196, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V13, 0x48, S10, V46, V57, S7, S6, S5, V103, V193, V196, S1, V196]

================================

Block 0x307
[0x307:0x30c]
---
Predecessors: [0x2fe, 0x305]
Successors: [0x30d, 0x3d4]
---
0x307 JUMPDEST
0x308 ISZERO
0x309 PUSH2 0x3d4
0x30c JUMPI
---
0x307: JUMPDEST 
0x308: V254 = ISZERO S0
0x309: V255 = 0x3d4
0x30c: JUMPI 0x3d4 V254
---
Entry stack: [V13, 0x48, S10, V46, V57, S7, S6, S5, V103, V193, V196, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x48, S10, V46, V57, S7, S6, S5, V103, V193, V196, S1]

================================

Block 0x30d
[0x30d:0x344]
---
Predecessors: [0x307]
Successors: [0x345, 0x346]
---
0x30d PUSH1 0x0
0x30f DUP1
0x310 SLOAD
0x311 PUSH8 0xffffffffffffffff
0x31a DUP7
0x31b AND
0x31c DUP3
0x31d MSTORE
0x31e PUSH1 0x2
0x320 PUSH1 0x20
0x322 MSTORE
0x323 PUSH1 0x40
0x325 SWAP1
0x326 SWAP2
0x327 SHA3
0x328 DUP1
0x329 SLOAD
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 SWAP1
0x333 SWAP3
0x334 AND
0x335 SWAP2
0x336 PUSH4 0x88c2a0bf
0x33b SWAP2
0x33c SWAP1
0x33d DUP5
0x33e SWAP1
0x33f DUP2
0x340 LT
0x341 PUSH2 0x346
0x344 JUMPI
---
0x30d: V256 = 0x0
0x310: V257 = S[0x0]
0x311: V258 = 0xffffffffffffffff
0x31b: V259 = AND V103 0xffffffffffffffff
0x31d: M[0x0] = V259
0x31e: V260 = 0x2
0x320: V261 = 0x20
0x322: M[0x20] = 0x2
0x323: V262 = 0x40
0x327: V263 = SHA3 0x0 0x40
0x329: V264 = S[V263]
0x32a: V265 = 0x1
0x32c: V266 = 0xa0
0x32e: V267 = 0x2
0x330: V268 = EXP 0x2 0xa0
0x331: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x334: V270 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0x336: V271 = 0x88c2a0bf
0x340: V272 = LT S0 V264
0x341: V273 = 0x346
0x344: JUMPI 0x346 V272
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, V193, V196, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V270, 0x88c2a0bf, V263, S0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, V193, V196, S0, V270, 0x88c2a0bf, V263, S0]

================================

Block 0x345
[0x345:0x345]
---
Predecessors: [0x30d]
Successors: []
---
0x345 INVALID
---
0x345: INVALID 
---
Entry stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, V103, V193, V196, S4, V270, 0x88c2a0bf, V263, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, V103, V193, V196, S4, V270, 0x88c2a0bf, V263, S0]

================================

Block 0x346
[0x346:0x3b3]
---
Predecessors: [0x30d]
Successors: [0x3b4, 0x3b8]
---
0x346 JUMPDEST
0x347 SWAP1
0x348 PUSH1 0x0
0x34a MSTORE
0x34b PUSH1 0x20
0x34d PUSH1 0x0
0x34f SHA3
0x350 SWAP1
0x351 PUSH1 0x4
0x353 SWAP2
0x354 DUP3
0x355 DUP3
0x356 DIV
0x357 ADD
0x358 SWAP2
0x359 SWAP1
0x35a MOD
0x35b PUSH1 0x8
0x35d MUL
0x35e SWAP1
0x35f SLOAD
0x360 SWAP1
0x361 PUSH2 0x100
0x364 EXP
0x365 SWAP1
0x366 DIV
0x367 PUSH8 0xffffffffffffffff
0x370 AND
0x371 PUSH1 0x0
0x373 PUSH1 0x40
0x375 MLOAD
0x376 PUSH1 0x20
0x378 ADD
0x379 MSTORE
0x37a PUSH1 0x40
0x37c MLOAD
0x37d PUSH1 0xe0
0x37f PUSH1 0x2
0x381 EXP
0x382 PUSH4 0xffffffff
0x387 DUP5
0x388 AND
0x389 MUL
0x38a DUP2
0x38b MSTORE
0x38c PUSH8 0xffffffffffffffff
0x395 SWAP1
0x396 SWAP2
0x397 AND
0x398 PUSH1 0x4
0x39a DUP3
0x39b ADD
0x39c MSTORE
0x39d PUSH1 0x24
0x39f ADD
0x3a0 PUSH1 0x20
0x3a2 PUSH1 0x40
0x3a4 MLOAD
0x3a5 DUP1
0x3a6 DUP4
0x3a7 SUB
0x3a8 DUP2
0x3a9 PUSH1 0x0
0x3ab DUP8
0x3ac DUP1
0x3ad EXTCODESIZE
0x3ae ISZERO
0x3af ISZERO
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x346: JUMPDEST 
0x348: V274 = 0x0
0x34a: M[0x0] = V263
0x34b: V275 = 0x20
0x34d: V276 = 0x0
0x34f: V277 = SHA3 0x0 0x20
0x351: V278 = 0x4
0x356: V279 = DIV S0 0x4
0x357: V280 = ADD V279 V277
0x35a: V281 = MOD S0 0x4
0x35b: V282 = 0x8
0x35d: V283 = MUL 0x8 V281
0x35f: V284 = S[V280]
0x361: V285 = 0x100
0x364: V286 = EXP 0x100 V283
0x366: V287 = DIV V284 V286
0x367: V288 = 0xffffffffffffffff
0x370: V289 = AND 0xffffffffffffffff V287
0x371: V290 = 0x0
0x373: V291 = 0x40
0x375: V292 = M[0x40]
0x376: V293 = 0x20
0x378: V294 = ADD 0x20 V292
0x379: M[V294] = 0x0
0x37a: V295 = 0x40
0x37c: V296 = M[0x40]
0x37d: V297 = 0xe0
0x37f: V298 = 0x2
0x381: V299 = EXP 0x2 0xe0
0x382: V300 = 0xffffffff
0x388: V301 = AND 0x88c2a0bf 0xffffffff
0x389: V302 = MUL 0x88c2a0bf 0x100000000000000000000000000000000000000000000000000000000
0x38b: M[V296] = 0x88c2a0bf00000000000000000000000000000000000000000000000000000000
0x38c: V303 = 0xffffffffffffffff
0x397: V304 = AND V289 0xffffffffffffffff
0x398: V305 = 0x4
0x39b: V306 = ADD V296 0x4
0x39c: M[V306] = V304
0x39d: V307 = 0x24
0x39f: V308 = ADD 0x24 V296
0x3a0: V309 = 0x20
0x3a2: V310 = 0x40
0x3a4: V311 = M[0x40]
0x3a7: V312 = SUB V308 V311
0x3a9: V313 = 0x0
0x3ad: V314 = EXTCODESIZE V270
0x3ae: V315 = ISZERO V314
0x3af: V316 = ISZERO V315
0x3b0: V317 = 0x3b8
0x3b3: JUMPI 0x3b8 V316
---
Entry stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, V103, V193, V196, S4, V270, 0x88c2a0bf, V263, S0]
Stack pops: 4
Stack additions: [S3, S2, V308, 0x20, V311, V312, V311, 0x0, S3]
Exit stack: [S9, 0x48, S7, S6, S5, 0x0, S3, 0x88c2a0bf, V308, 0x20, V311, V312, V311, 0x0, S3]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x346]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V318 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V103, V193, V196, 0x0, V270, 0x88c2a0bf, V308, 0x20, V311, V312, V311, 0x0, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V103, V193, V196, 0x0, V270, 0x88c2a0bf, V308, 0x20, V311, V312, V311, 0x0, V270]

================================

Block 0x3b8
[0x3b8:0x3c4]
---
Predecessors: [0x346]
Successors: [0x3c5, 0x3c9]
---
0x3b8 JUMPDEST
0x3b9 PUSH2 0x2c6
0x3bc GAS
0x3bd SUB
0x3be CALL
0x3bf ISZERO
0x3c0 ISZERO
0x3c1 PUSH2 0x3c9
0x3c4 JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V319 = 0x2c6
0x3bc: V320 = GAS
0x3bd: V321 = SUB V320 0x2c6
0x3be: V322 = CALL V321 V270 0x0 V311 V312 V311 0x20
0x3bf: V323 = ISZERO V322
0x3c0: V324 = ISZERO V323
0x3c1: V325 = 0x3c9
0x3c4: JUMPI 0x3c9 V324
---
Entry stack: [V13, 0x48, V103, V193, V196, 0x0, V270, 0x88c2a0bf, V308, 0x20, V311, V312, V311, 0x0, V270]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x48, V103, V193, V196, 0x0, V270, 0x88c2a0bf, V308]

================================

Block 0x3c5
[0x3c5:0x3c8]
---
Predecessors: [0x3b8]
Successors: []
---
0x3c5 PUSH1 0x0
0x3c7 DUP1
0x3c8 REVERT
---
0x3c5: V326 = 0x0
0x3c8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V103, V193, V196, 0x0, V270, 0x88c2a0bf, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V103, V193, V196, 0x0, V270, 0x88c2a0bf, V308]

================================

Block 0x3c9
[0x3c9:0x3d3]
---
Predecessors: [0x3b8]
Successors: [0x3d4]
---
0x3c9 JUMPDEST
0x3ca POP
0x3cb POP
0x3cc POP
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 DUP1
0x3d1 MLOAD
0x3d2 POP
0x3d3 POP
---
0x3c9: JUMPDEST 
0x3cd: V327 = 0x40
0x3cf: V328 = M[0x40]
0x3d1: V329 = M[V328]
---
Entry stack: [V13, 0x48, V103, V193, V196, 0x0, V270, 0x88c2a0bf, V308]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x48, V103, V193, V196, 0x0]

================================

Block 0x3d4
[0x3d4:0x3d8]
---
Predecessors: [0x307, 0x3c9]
Successors: [0x3e5]
---
0x3d4 JUMPDEST
0x3d5 PUSH2 0x3e5
0x3d8 JUMP
---
0x3d4: JUMPDEST 
0x3d5: V330 = 0x3e5
0x3d8: JUMP 0x3e5
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, V193, V196, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, V193, V196, S0]

================================

Block 0x3d9
[0x3d9:0x3e4]
---
Predecessors: [0x183]
Successors: [0x3ed]
---
0x3d9 JUMPDEST
0x3da PUSH1 0x0
0x3dc NOT
0x3dd SWAP1
0x3de SWAP4
0x3df ADD
0x3e0 SWAP3
0x3e1 PUSH2 0x3ed
0x3e4 JUMP
---
0x3d9: JUMPDEST 
0x3da: V331 = 0x0
0x3dc: V332 = NOT 0x0
0x3df: V333 = ADD V103 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3e1: V334 = 0x3ed
0x3e4: JUMP 0x3ed
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, S2, S1, S0]
Stack pops: 4
Stack additions: [V333, S2, S1, S0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V333, S2, S1, S0]

================================

Block 0x3e5
[0x3e5:0x3ec]
---
Predecessors: [0x3d4]
Successors: [0x161]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x1
0x3e8 ADD
0x3e9 PUSH2 0x161
0x3ec JUMP
---
0x3e5: JUMPDEST 
0x3e6: V335 = 0x1
0x3e8: V336 = ADD 0x1 S0
0x3e9: V337 = 0x161
0x3ec: JUMP 0x161
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, V193, V196, S0]
Stack pops: 1
Stack additions: [V336]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V103, V193, V196, V336]

================================

Block 0x3ed
[0x3ed:0x40e]
---
Predecessors: [0x161, 0x3d9]
Successors: [0x81b]
---
0x3ed JUMPDEST
0x3ee PUSH8 0xffffffffffffffff
0x3f7 DUP5
0x3f8 AND
0x3f9 PUSH1 0x0
0x3fb SWAP1
0x3fc DUP2
0x3fd MSTORE
0x3fe PUSH1 0x2
0x400 PUSH1 0x20
0x402 MSTORE
0x403 PUSH1 0x40
0x405 DUP2
0x406 SHA3
0x407 PUSH2 0x40f
0x40a SWAP2
0x40b PUSH2 0x81b
0x40e JUMP
---
0x3ed: JUMPDEST 
0x3ee: V338 = 0xffffffffffffffff
0x3f8: V339 = AND S3 0xffffffffffffffff
0x3f9: V340 = 0x0
0x3fd: M[0x0] = V339
0x3fe: V341 = 0x2
0x400: V342 = 0x20
0x402: M[0x20] = 0x2
0x403: V343 = 0x40
0x406: V344 = SHA3 0x0 0x40
0x407: V345 = 0x40f
0x40b: V346 = 0x81b
0x40e: JUMP 0x81b
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x40f, V344, 0x0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0, 0x40f, V344, 0x0]

================================

Block 0x40f
[0x40f:0x413]
---
Predecessors: [0x7b8]
Successors: [0x135]
---
0x40f JUMPDEST
0x410 PUSH2 0x135
0x413 JUMP
---
0x40f: JUMPDEST 
0x410: V347 = 0x135
0x413: JUMP 0x135
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x414
[0x414:0x46f]
---
Predecessors: [0x12e, 0x135, 0x153]
Successors: [0x470, 0x49e]
---
0x414 JUMPDEST
0x415 PUSH1 0x1
0x417 DUP1
0x418 SLOAD
0x419 PUSH28 0xffffffffffffffff0000000000000000000000000000000000000000
0x436 NOT
0x437 AND
0x438 PUSH21 0x10000000000000000000000000000000000000000
0x44e PUSH8 0xffffffffffffffff
0x457 DUP8
0x458 AND
0x459 MUL
0x45a OR
0x45b SWAP1
0x45c SSTORE
0x45d PUSH1 0x0
0x45f ADDRESS
0x460 PUSH1 0x1
0x462 PUSH1 0xa0
0x464 PUSH1 0x2
0x466 EXP
0x467 SUB
0x468 AND
0x469 BALANCE
0x46a GT
0x46b ISZERO
0x46c PUSH2 0x49e
0x46f JUMPI
---
0x414: JUMPDEST 
0x415: V348 = 0x1
0x418: V349 = S[0x1]
0x419: V350 = 0xffffffffffffffff0000000000000000000000000000000000000000
0x436: V351 = NOT 0xffffffffffffffff0000000000000000000000000000000000000000
0x437: V352 = AND 0xffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff V349
0x438: V353 = 0x10000000000000000000000000000000000000000
0x44e: V354 = 0xffffffffffffffff
0x458: V355 = AND S3 0xffffffffffffffff
0x459: V356 = MUL V355 0x10000000000000000000000000000000000000000
0x45a: V357 = OR V356 V352
0x45c: S[0x1] = V357
0x45d: V358 = 0x0
0x45f: V359 = ADDRESS
0x460: V360 = 0x1
0x462: V361 = 0xa0
0x464: V362 = 0x2
0x466: V363 = EXP 0x2 0xa0
0x467: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x468: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x469: V366 = BALANCE V365
0x46a: V367 = GT V366 0x0
0x46b: V368 = ISZERO V367
0x46c: V369 = 0x49e
0x46f: JUMPI 0x49e V368
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x470
[0x470:0x49d]
---
Predecessors: [0x414]
Successors: [0x49e]
---
0x470 PUSH1 0x1
0x472 SLOAD
0x473 PUSH1 0x1
0x475 PUSH1 0xa0
0x477 PUSH1 0x2
0x479 EXP
0x47a SUB
0x47b SWAP1
0x47c DUP2
0x47d AND
0x47e SWAP1
0x47f ADDRESS
0x480 AND
0x481 BALANCE
0x482 DUP1
0x483 ISZERO
0x484 PUSH2 0x8fc
0x487 MUL
0x488 SWAP1
0x489 PUSH1 0x40
0x48b MLOAD
0x48c PUSH1 0x0
0x48e PUSH1 0x40
0x490 MLOAD
0x491 DUP1
0x492 DUP4
0x493 SUB
0x494 DUP2
0x495 DUP6
0x496 DUP9
0x497 DUP9
0x498 CALL
0x499 POP
0x49a POP
0x49b POP
0x49c POP
0x49d POP
---
0x470: V370 = 0x1
0x472: V371 = S[0x1]
0x473: V372 = 0x1
0x475: V373 = 0xa0
0x477: V374 = 0x2
0x479: V375 = EXP 0x2 0xa0
0x47a: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47d: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x47f: V378 = ADDRESS
0x480: V379 = AND V378 0xffffffffffffffffffffffffffffffffffffffff
0x481: V380 = BALANCE V379
0x483: V381 = ISZERO V380
0x484: V382 = 0x8fc
0x487: V383 = MUL 0x8fc V381
0x489: V384 = 0x40
0x48b: V385 = M[0x40]
0x48c: V386 = 0x0
0x48e: V387 = 0x40
0x490: V388 = M[0x40]
0x493: V389 = SUB V385 V388
0x498: V390 = CALL V383 V377 V380 V388 V389 V388 0x0
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x49e
[0x49e:0x4a3]
---
Predecessors: [0x414, 0x470]
Successors: [0x48, 0x74d]
---
0x49e JUMPDEST
0x49f POP
0x4a0 POP
0x4a1 POP
0x4a2 POP
0x4a3 JUMP
---
0x49e: JUMPDEST 
0x4a3: JUMP S4
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5]

================================

Block 0x4a4
[0x4a4:0x4b3]
---
Predecessors: [0x68]
Successors: [0x4b4, 0x745]
---
0x4a4 JUMPDEST
0x4a5 PUSH1 0x0
0x4a7 DUP1
0x4a8 PUSH1 0x0
0x4aa DUP6
0x4ab PUSH1 0xff
0x4ad AND
0x4ae GT
0x4af ISZERO
0x4b0 PUSH2 0x745
0x4b3 JUMPI
---
0x4a4: JUMPDEST 
0x4a5: V391 = 0x0
0x4a8: V392 = 0x0
0x4ab: V393 = 0xff
0x4ad: V394 = AND 0xff V40
0x4ae: V395 = GT V394 0x0
0x4af: V396 = ISZERO V395
0x4b0: V397 = 0x745
0x4b3: JUMPI 0x745 V396
---
Entry stack: [V13, 0x48, V40, V46, V57]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0]
Exit stack: [V13, 0x48, V40, V46, V57, 0x0, 0x0]

================================

Block 0x4b4
[0x4b4:0x4c8]
---
Predecessors: [0x4a4, 0x740]
Successors: [0x4c9, 0x4eb]
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x0
0x4b7 NOT
0x4b8 SWAP1
0x4b9 SWAP5
0x4ba ADD
0x4bb SWAP4
0x4bc PUSH3 0x975e0
0x4c0 GAS
0x4c1 LT
0x4c2 ISZERO
0x4c3 DUP1
0x4c4 ISZERO
0x4c5 PUSH2 0x4eb
0x4c8 JUMPI
---
0x4b4: JUMPDEST 
0x4b5: V398 = 0x0
0x4b7: V399 = NOT 0x0
0x4ba: V400 = ADD S4 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4bc: V401 = 0x975e0
0x4c0: V402 = GAS
0x4c1: V403 = LT V402 0x975e0
0x4c2: V404 = ISZERO V403
0x4c4: V405 = ISZERO V404
0x4c5: V406 = 0x4eb
0x4c8: JUMPI 0x4eb V405
---
Entry stack: [V13, 0x48, S4, V46, V57, S1, S0]
Stack pops: 5
Stack additions: [V400, S3, S2, S1, S0, V404]
Exit stack: [V13, 0x48, V400, V46, V57, S1, S0, V404]

================================

Block 0x4c9
[0x4c9:0x4d7]
---
Predecessors: [0x4b4]
Successors: [0x4d8, 0x4d9]
---
0x4c9 POP
0x4ca NUMBER
0x4cb DUP4
0x4cc PUSH1 0xff
0x4ce DUP8
0x4cf AND
0x4d0 PUSH1 0x14
0x4d2 DUP2
0x4d3 LT
0x4d4 PUSH2 0x4d9
0x4d7 JUMPI
---
0x4ca: V407 = NUMBER
0x4cc: V408 = 0xff
0x4cf: V409 = AND V400 0xff
0x4d0: V410 = 0x14
0x4d3: V411 = LT V409 0x14
0x4d4: V412 = 0x4d9
0x4d7: JUMPI 0x4d9 V411
---
Entry stack: [V13, 0x48, V400, V46, V57, S2, S1, V404]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V407, S3, V409]
Exit stack: [V13, 0x48, V400, V46, V57, S2, S1, V407, V57, V409]

================================

Block 0x4d8
[0x4d8:0x4d8]
---
Predecessors: [0x4c9]
Successors: []
---
0x4d8 INVALID
---
0x4d8: INVALID 
---
Entry stack: [V13, 0x48, V400, V46, V57, S4, S3, V407, V57, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S4, S3, V407, V57, V409]

================================

Block 0x4d9
[0x4d9:0x4ea]
---
Predecessors: [0x4c9]
Successors: [0x4eb]
---
0x4d9 JUMPDEST
0x4da PUSH1 0x20
0x4dc MUL
0x4dd ADD
0x4de MLOAD
0x4df PUSH8 0xffffffffffffffff
0x4e8 AND
0x4e9 GT
0x4ea ISZERO
---
0x4d9: JUMPDEST 
0x4da: V413 = 0x20
0x4dc: V414 = MUL 0x20 V409
0x4dd: V415 = ADD V414 V57
0x4de: V416 = M[V415]
0x4df: V417 = 0xffffffffffffffff
0x4e8: V418 = AND 0xffffffffffffffff V416
0x4e9: V419 = GT V418 V407
0x4ea: V420 = ISZERO V419
---
Entry stack: [V13, 0x48, V400, V46, V57, S4, S3, V407, V57, V409]
Stack pops: 3
Stack additions: [V420]
Exit stack: [V13, 0x48, V400, V46, V57, S4, S3, V420]

================================

Block 0x4eb
[0x4eb:0x4f0]
---
Predecessors: [0x4b4, 0x4d9]
Successors: [0x4f1, 0x688]
---
0x4eb JUMPDEST
0x4ec ISZERO
0x4ed PUSH2 0x688
0x4f0 JUMPI
---
0x4eb: JUMPDEST 
0x4ec: V421 = ISZERO S0
0x4ed: V422 = 0x688
0x4f0: JUMPI 0x688 V421
---
Entry stack: [V13, 0x48, V400, V46, V57, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S2, S1]

================================

Block 0x4f1
[0x4f1:0x50e]
---
Predecessors: [0x4eb]
Successors: [0x50f, 0x510]
---
0x4f1 PUSH1 0x0
0x4f3 SLOAD
0x4f4 PUSH1 0x1
0x4f6 PUSH1 0xa0
0x4f8 PUSH1 0x2
0x4fa EXP
0x4fb SUB
0x4fc AND
0x4fd PUSH4 0xe98b7f4d
0x502 DUP6
0x503 PUSH1 0xff
0x505 DUP9
0x506 AND
0x507 PUSH1 0x14
0x509 DUP2
0x50a LT
0x50b PUSH2 0x510
0x50e JUMPI
---
0x4f1: V423 = 0x0
0x4f3: V424 = S[0x0]
0x4f4: V425 = 0x1
0x4f6: V426 = 0xa0
0x4f8: V427 = 0x2
0x4fa: V428 = EXP 0x2 0xa0
0x4fb: V429 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fc: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x4fd: V431 = 0xe98b7f4d
0x503: V432 = 0xff
0x506: V433 = AND V400 0xff
0x507: V434 = 0x14
0x50a: V435 = LT V433 0x14
0x50b: V436 = 0x510
0x50e: JUMPI 0x510 V435
---
Entry stack: [V13, 0x48, V400, V46, V57, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V430, 0xe98b7f4d, S3, V433]
Exit stack: [V13, 0x48, V400, V46, V57, S1, S0, V430, 0xe98b7f4d, V46, V433]

================================

Block 0x50f
[0x50f:0x50f]
---
Predecessors: [0x4f1]
Successors: []
---
0x50f INVALID
---
0x50f: INVALID 
---
Entry stack: [V13, 0x48, V400, V46, V57, S5, S4, V430, 0xe98b7f4d, V46, V433]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S5, S4, V430, 0xe98b7f4d, V46, V433]

================================

Block 0x510
[0x510:0x55a]
---
Predecessors: [0x4f1]
Successors: [0x55b, 0x55f]
---
0x510 JUMPDEST
0x511 PUSH1 0x20
0x513 MUL
0x514 ADD
0x515 MLOAD
0x516 PUSH1 0x0
0x518 PUSH1 0x40
0x51a MLOAD
0x51b PUSH2 0x140
0x51e ADD
0x51f MSTORE
0x520 PUSH1 0x40
0x522 MLOAD
0x523 PUSH1 0xe0
0x525 PUSH1 0x2
0x527 EXP
0x528 PUSH4 0xffffffff
0x52d DUP5
0x52e AND
0x52f MUL
0x530 DUP2
0x531 MSTORE
0x532 PUSH8 0xffffffffffffffff
0x53b SWAP1
0x53c SWAP2
0x53d AND
0x53e PUSH1 0x4
0x540 DUP3
0x541 ADD
0x542 MSTORE
0x543 PUSH1 0x24
0x545 ADD
0x546 PUSH2 0x140
0x549 PUSH1 0x40
0x54b MLOAD
0x54c DUP1
0x54d DUP4
0x54e SUB
0x54f DUP2
0x550 PUSH1 0x0
0x552 DUP8
0x553 DUP1
0x554 EXTCODESIZE
0x555 ISZERO
0x556 ISZERO
0x557 PUSH2 0x55f
0x55a JUMPI
---
0x510: JUMPDEST 
0x511: V437 = 0x20
0x513: V438 = MUL 0x20 V433
0x514: V439 = ADD V438 V46
0x515: V440 = M[V439]
0x516: V441 = 0x0
0x518: V442 = 0x40
0x51a: V443 = M[0x40]
0x51b: V444 = 0x140
0x51e: V445 = ADD 0x140 V443
0x51f: M[V445] = 0x0
0x520: V446 = 0x40
0x522: V447 = M[0x40]
0x523: V448 = 0xe0
0x525: V449 = 0x2
0x527: V450 = EXP 0x2 0xe0
0x528: V451 = 0xffffffff
0x52e: V452 = AND 0xe98b7f4d 0xffffffff
0x52f: V453 = MUL 0xe98b7f4d 0x100000000000000000000000000000000000000000000000000000000
0x531: M[V447] = 0xe98b7f4d00000000000000000000000000000000000000000000000000000000
0x532: V454 = 0xffffffffffffffff
0x53d: V455 = AND V440 0xffffffffffffffff
0x53e: V456 = 0x4
0x541: V457 = ADD V447 0x4
0x542: M[V457] = V455
0x543: V458 = 0x24
0x545: V459 = ADD 0x24 V447
0x546: V460 = 0x140
0x549: V461 = 0x40
0x54b: V462 = M[0x40]
0x54e: V463 = SUB V459 V462
0x550: V464 = 0x0
0x554: V465 = EXTCODESIZE V430
0x555: V466 = ISZERO V465
0x556: V467 = ISZERO V466
0x557: V468 = 0x55f
0x55a: JUMPI 0x55f V467
---
Entry stack: [V13, 0x48, V400, V46, V57, S5, S4, V430, 0xe98b7f4d, V46, V433]
Stack pops: 4
Stack additions: [S3, S2, V459, 0x140, V462, V463, V462, 0x0, S3]
Exit stack: [V13, 0x48, V400, V46, V57, S5, S4, V430, 0xe98b7f4d, V459, 0x140, V462, V463, V462, 0x0, V430]

================================

Block 0x55b
[0x55b:0x55e]
---
Predecessors: [0x510]
Successors: []
---
0x55b PUSH1 0x0
0x55d DUP1
0x55e REVERT
---
0x55b: V469 = 0x0
0x55e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V400, V46, V57, S10, S9, V430, 0xe98b7f4d, V459, 0x140, V462, V463, V462, 0x0, V430]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S10, S9, V430, 0xe98b7f4d, V459, 0x140, V462, V463, V462, 0x0, V430]

================================

Block 0x55f
[0x55f:0x56b]
---
Predecessors: [0x510]
Successors: [0x56c, 0x570]
---
0x55f JUMPDEST
0x560 PUSH2 0x2c6
0x563 GAS
0x564 SUB
0x565 CALL
0x566 ISZERO
0x567 ISZERO
0x568 PUSH2 0x570
0x56b JUMPI
---
0x55f: JUMPDEST 
0x560: V470 = 0x2c6
0x563: V471 = GAS
0x564: V472 = SUB V471 0x2c6
0x565: V473 = CALL V472 V430 0x0 V462 V463 V462 0x140
0x566: V474 = ISZERO V473
0x567: V475 = ISZERO V474
0x568: V476 = 0x570
0x56b: JUMPI 0x570 V475
---
Entry stack: [V13, 0x48, V400, V46, V57, S10, S9, V430, 0xe98b7f4d, V459, 0x140, V462, V463, V462, 0x0, V430]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S10, S9, V430, 0xe98b7f4d, V459]

================================

Block 0x56c
[0x56c:0x56f]
---
Predecessors: [0x55f]
Successors: []
---
0x56c PUSH1 0x0
0x56e DUP1
0x56f REVERT
---
0x56c: V477 = 0x0
0x56f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V400, V46, V57, S4, S3, V430, 0xe98b7f4d, V459]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S4, S3, V430, 0xe98b7f4d, V459]

================================

Block 0x570
[0x570:0x5d1]
---
Predecessors: [0x55f]
Successors: [0x5d2, 0x5d3]
---
0x570 JUMPDEST
0x571 POP
0x572 POP
0x573 POP
0x574 PUSH1 0x40
0x576 MLOAD
0x577 DUP1
0x578 MLOAD
0x579 SWAP1
0x57a PUSH1 0x20
0x57c ADD
0x57d DUP1
0x57e MLOAD
0x57f SWAP1
0x580 PUSH1 0x20
0x582 ADD
0x583 DUP1
0x584 MLOAD
0x585 SWAP1
0x586 PUSH1 0x20
0x588 ADD
0x589 DUP1
0x58a MLOAD
0x58b SWAP1
0x58c PUSH1 0x20
0x58e ADD
0x58f DUP1
0x590 MLOAD
0x591 SWAP1
0x592 PUSH1 0x20
0x594 ADD
0x595 DUP1
0x596 MLOAD
0x597 SWAP1
0x598 PUSH1 0x20
0x59a ADD
0x59b DUP1
0x59c MLOAD
0x59d SWAP1
0x59e PUSH1 0x20
0x5a0 ADD
0x5a1 DUP1
0x5a2 MLOAD
0x5a3 SWAP1
0x5a4 PUSH1 0x20
0x5a6 ADD
0x5a7 DUP1
0x5a8 MLOAD
0x5a9 SWAP1
0x5aa PUSH1 0x20
0x5ac ADD
0x5ad DUP1
0x5ae MLOAD
0x5af POP
0x5b0 SWAP9
0x5b1 SWAP11
0x5b2 POP
0x5b3 SWAP7
0x5b4 SWAP9
0x5b5 POP
0x5b6 PUSH1 0x0
0x5b8 SWAP8
0x5b9 POP
0x5ba DUP12
0x5bb SWAP7
0x5bc POP
0x5bd POP
0x5be PUSH1 0xff
0x5c0 DUP13
0x5c1 AND
0x5c2 SWAP5
0x5c3 POP
0x5c4 POP
0x5c5 PUSH1 0x14
0x5c7 DUP5
0x5c8 LT
0x5c9 SWAP3
0x5ca POP
0x5cb PUSH2 0x5d3
0x5ce SWAP2
0x5cf POP
0x5d0 POP
0x5d1 JUMPI
---
0x570: JUMPDEST 
0x574: V478 = 0x40
0x576: V479 = M[0x40]
0x578: V480 = M[V479]
0x57a: V481 = 0x20
0x57c: V482 = ADD 0x20 V479
0x57e: V483 = M[V482]
0x580: V484 = 0x20
0x582: V485 = ADD 0x20 V482
0x584: V486 = M[V485]
0x586: V487 = 0x20
0x588: V488 = ADD 0x20 V485
0x58a: V489 = M[V488]
0x58c: V490 = 0x20
0x58e: V491 = ADD 0x20 V488
0x590: V492 = M[V491]
0x592: V493 = 0x20
0x594: V494 = ADD 0x20 V491
0x596: V495 = M[V494]
0x598: V496 = 0x20
0x59a: V497 = ADD 0x20 V494
0x59c: V498 = M[V497]
0x59e: V499 = 0x20
0x5a0: V500 = ADD 0x20 V497
0x5a2: V501 = M[V500]
0x5a4: V502 = 0x20
0x5a6: V503 = ADD 0x20 V500
0x5a8: V504 = M[V503]
0x5aa: V505 = 0x20
0x5ac: V506 = ADD 0x20 V503
0x5ae: V507 = M[V506]
0x5b6: V508 = 0x0
0x5be: V509 = 0xff
0x5c1: V510 = AND V400 0xff
0x5c5: V511 = 0x14
0x5c8: V512 = LT V510 0x14
0x5cb: V513 = 0x5d3
0x5d1: JUMPI 0x5d3 V512
---
Entry stack: [V13, 0x48, V400, V46, V57, S4, S3, V430, 0xe98b7f4d, V459]
Stack pops: 8
Stack additions: [S7, S6, S5, V480, V483, 0x0, S6, V510]
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, 0x0, V46, V510]

================================

Block 0x5d2
[0x5d2:0x5d2]
---
Predecessors: [0x570]
Successors: []
---
0x5d2 INVALID
---
0x5d2: INVALID 
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, 0x0, V46, V510]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, 0x0, V46, V510]

================================

Block 0x5d3
[0x5d3:0x5e9]
---
Predecessors: [0x570]
Successors: [0x5ea, 0x5ec]
---
0x5d3 JUMPDEST
0x5d4 PUSH1 0x20
0x5d6 MUL
0x5d7 ADD
0x5d8 MLOAD
0x5d9 PUSH8 0xffffffffffffffff
0x5e2 AND
0x5e3 GT
0x5e4 DUP1
0x5e5 ISZERO
0x5e6 PUSH2 0x5ec
0x5e9 JUMPI
---
0x5d3: JUMPDEST 
0x5d4: V514 = 0x20
0x5d6: V515 = MUL 0x20 V510
0x5d7: V516 = ADD V515 V46
0x5d8: V517 = M[V516]
0x5d9: V518 = 0xffffffffffffffff
0x5e2: V519 = AND 0xffffffffffffffff V517
0x5e3: V520 = GT V519 0x0
0x5e5: V521 = ISZERO V520
0x5e6: V522 = 0x5ec
0x5e9: JUMPI 0x5ec V521
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, 0x0, V46, V510]
Stack pops: 3
Stack additions: [V520]
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V520]

================================

Block 0x5ea
[0x5ea:0x5eb]
---
Predecessors: [0x5d3]
Successors: [0x5ec]
---
0x5ea POP
0x5eb DUP2
---
0x5ea: NOP 
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, V520]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V480]

================================

Block 0x5ec
[0x5ec:0x5f2]
---
Predecessors: [0x5d3, 0x5ea]
Successors: [0x5f3, 0x5f5]
---
0x5ec JUMPDEST
0x5ed DUP1
0x5ee ISZERO
0x5ef PUSH2 0x5f5
0x5f2 JUMPI
---
0x5ec: JUMPDEST 
0x5ee: V523 = ISZERO S0
0x5ef: V524 = 0x5f5
0x5f2: JUMPI 0x5f5 V523
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, S0]

================================

Block 0x5f3
[0x5f3:0x5f4]
---
Predecessors: [0x5ec]
Successors: [0x5f5]
---
0x5f3 POP
0x5f4 DUP1
---
0x5f3: NOP 
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, S0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V483]

================================

Block 0x5f5
[0x5f5:0x5fa]
---
Predecessors: [0x5ec, 0x5f3]
Successors: [0x5fb, 0x683]
---
0x5f5 JUMPDEST
0x5f6 ISZERO
0x5f7 PUSH2 0x683
0x5fa JUMPI
---
0x5f5: JUMPDEST 
0x5f6: V525 = ISZERO S0
0x5f7: V526 = 0x683
0x5fa: JUMPI 0x683 V525
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483]

================================

Block 0x5fb
[0x5fb:0x618]
---
Predecessors: [0x5f5]
Successors: [0x619, 0x61a]
---
0x5fb PUSH1 0x0
0x5fd SLOAD
0x5fe PUSH1 0x1
0x600 PUSH1 0xa0
0x602 PUSH1 0x2
0x604 EXP
0x605 SUB
0x606 AND
0x607 PUSH4 0x88c2a0bf
0x60c DUP6
0x60d PUSH1 0xff
0x60f DUP9
0x610 AND
0x611 PUSH1 0x14
0x613 DUP2
0x614 LT
0x615 PUSH2 0x61a
0x618 JUMPI
---
0x5fb: V527 = 0x0
0x5fd: V528 = S[0x0]
0x5fe: V529 = 0x1
0x600: V530 = 0xa0
0x602: V531 = 0x2
0x604: V532 = EXP 0x2 0xa0
0x605: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x606: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x607: V535 = 0x88c2a0bf
0x60d: V536 = 0xff
0x610: V537 = AND V400 0xff
0x611: V538 = 0x14
0x614: V539 = LT V537 0x14
0x615: V540 = 0x61a
0x618: JUMPI 0x61a V539
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V534, 0x88c2a0bf, S3, V537]
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V46, V537]

================================

Block 0x619
[0x619:0x619]
---
Predecessors: [0x5fb]
Successors: []
---
0x619 INVALID
---
0x619: INVALID 
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V46, V537]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V46, V537]

================================

Block 0x61a
[0x61a:0x662]
---
Predecessors: [0x5fb]
Successors: [0x663, 0x667]
---
0x61a JUMPDEST
0x61b PUSH1 0x20
0x61d MUL
0x61e ADD
0x61f MLOAD
0x620 PUSH1 0x0
0x622 PUSH1 0x40
0x624 MLOAD
0x625 PUSH1 0x20
0x627 ADD
0x628 MSTORE
0x629 PUSH1 0x40
0x62b MLOAD
0x62c PUSH1 0xe0
0x62e PUSH1 0x2
0x630 EXP
0x631 PUSH4 0xffffffff
0x636 DUP5
0x637 AND
0x638 MUL
0x639 DUP2
0x63a MSTORE
0x63b PUSH8 0xffffffffffffffff
0x644 SWAP1
0x645 SWAP2
0x646 AND
0x647 PUSH1 0x4
0x649 DUP3
0x64a ADD
0x64b MSTORE
0x64c PUSH1 0x24
0x64e ADD
0x64f PUSH1 0x20
0x651 PUSH1 0x40
0x653 MLOAD
0x654 DUP1
0x655 DUP4
0x656 SUB
0x657 DUP2
0x658 PUSH1 0x0
0x65a DUP8
0x65b DUP1
0x65c EXTCODESIZE
0x65d ISZERO
0x65e ISZERO
0x65f PUSH2 0x667
0x662 JUMPI
---
0x61a: JUMPDEST 
0x61b: V541 = 0x20
0x61d: V542 = MUL 0x20 V537
0x61e: V543 = ADD V542 V46
0x61f: V544 = M[V543]
0x620: V545 = 0x0
0x622: V546 = 0x40
0x624: V547 = M[0x40]
0x625: V548 = 0x20
0x627: V549 = ADD 0x20 V547
0x628: M[V549] = 0x0
0x629: V550 = 0x40
0x62b: V551 = M[0x40]
0x62c: V552 = 0xe0
0x62e: V553 = 0x2
0x630: V554 = EXP 0x2 0xe0
0x631: V555 = 0xffffffff
0x637: V556 = AND 0x88c2a0bf 0xffffffff
0x638: V557 = MUL 0x88c2a0bf 0x100000000000000000000000000000000000000000000000000000000
0x63a: M[V551] = 0x88c2a0bf00000000000000000000000000000000000000000000000000000000
0x63b: V558 = 0xffffffffffffffff
0x646: V559 = AND V544 0xffffffffffffffff
0x647: V560 = 0x4
0x64a: V561 = ADD V551 0x4
0x64b: M[V561] = V559
0x64c: V562 = 0x24
0x64e: V563 = ADD 0x24 V551
0x64f: V564 = 0x20
0x651: V565 = 0x40
0x653: V566 = M[0x40]
0x656: V567 = SUB V563 V566
0x658: V568 = 0x0
0x65c: V569 = EXTCODESIZE V534
0x65d: V570 = ISZERO V569
0x65e: V571 = ISZERO V570
0x65f: V572 = 0x667
0x662: JUMPI 0x667 V571
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V46, V537]
Stack pops: 4
Stack additions: [S3, S2, V563, 0x20, V566, V567, V566, 0x0, S3]
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V563, 0x20, V566, V567, V566, 0x0, V534]

================================

Block 0x663
[0x663:0x666]
---
Predecessors: [0x61a]
Successors: []
---
0x663 PUSH1 0x0
0x665 DUP1
0x666 REVERT
---
0x663: V573 = 0x0
0x666: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V563, 0x20, V566, V567, V566, 0x0, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V563, 0x20, V566, V567, V566, 0x0, V534]

================================

Block 0x667
[0x667:0x673]
---
Predecessors: [0x61a]
Successors: [0x674, 0x678]
---
0x667 JUMPDEST
0x668 PUSH2 0x2c6
0x66b GAS
0x66c SUB
0x66d CALL
0x66e ISZERO
0x66f ISZERO
0x670 PUSH2 0x678
0x673 JUMPI
---
0x667: JUMPDEST 
0x668: V574 = 0x2c6
0x66b: V575 = GAS
0x66c: V576 = SUB V575 0x2c6
0x66d: V577 = CALL V576 V534 0x0 V566 V567 V566 0x20
0x66e: V578 = ISZERO V577
0x66f: V579 = ISZERO V578
0x670: V580 = 0x678
0x673: JUMPI 0x678 V579
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V563, 0x20, V566, V567, V566, 0x0, V534]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V563]

================================

Block 0x674
[0x674:0x677]
---
Predecessors: [0x667]
Successors: []
---
0x674 PUSH1 0x0
0x676 DUP1
0x677 REVERT
---
0x674: V581 = 0x0
0x677: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V563]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V563]

================================

Block 0x678
[0x678:0x682]
---
Predecessors: [0x667]
Successors: [0x683]
---
0x678 JUMPDEST
0x679 POP
0x67a POP
0x67b POP
0x67c PUSH1 0x40
0x67e MLOAD
0x67f DUP1
0x680 MLOAD
0x681 POP
0x682 POP
---
0x678: JUMPDEST 
0x67c: V582 = 0x40
0x67e: V583 = M[0x40]
0x680: V584 = M[V583]
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483, V534, 0x88c2a0bf, V563]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483]

================================

Block 0x683
[0x683:0x687]
---
Predecessors: [0x5f5, 0x678]
Successors: [0x731]
---
0x683 JUMPDEST
0x684 PUSH2 0x731
0x687 JUMP
---
0x683: JUMPDEST 
0x684: V585 = 0x731
0x687: JUMP 0x731
---
Entry stack: [V13, 0x48, V400, V46, V57, V480, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, V480, V483]

================================

Block 0x688
[0x688:0x693]
---
Predecessors: [0x4eb]
Successors: [0x694, 0x698]
---
0x688 JUMPDEST
0x689 PUSH3 0x493e0
0x68d GAS
0x68e LT
0x68f ISZERO
0x690 PUSH2 0x698
0x693 JUMPI
---
0x688: JUMPDEST 
0x689: V586 = 0x493e0
0x68d: V587 = GAS
0x68e: V588 = LT V587 0x493e0
0x68f: V589 = ISZERO V588
0x690: V590 = 0x698
0x693: JUMPI 0x698 V589
---
Entry stack: [V13, 0x48, V400, V46, V57, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S1, S0]

================================

Block 0x694
[0x694:0x697]
---
Predecessors: [0x688]
Successors: [0x74d]
---
0x694 PUSH2 0x74d
0x697 JUMP
---
0x694: V591 = 0x74d
0x697: JUMP 0x74d
---
Entry stack: [V13, 0x48, V400, V46, V57, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S1, S0]

================================

Block 0x698
[0x698:0x6a9]
---
Predecessors: [0x688]
Successors: [0x6aa, 0x6ab]
---
0x698 JUMPDEST
0x699 PUSH1 0x2
0x69b PUSH1 0x0
0x69d DUP5
0x69e PUSH1 0xff
0x6a0 DUP9
0x6a1 AND
0x6a2 PUSH1 0x14
0x6a4 DUP2
0x6a5 LT
0x6a6 PUSH2 0x6ab
0x6a9 JUMPI
---
0x698: JUMPDEST 
0x699: V592 = 0x2
0x69b: V593 = 0x0
0x69e: V594 = 0xff
0x6a1: V595 = AND V400 0xff
0x6a2: V596 = 0x14
0x6a5: V597 = LT V595 0x14
0x6a6: V598 = 0x6ab
0x6a9: JUMPI 0x6ab V597
---
Entry stack: [V13, 0x48, V400, V46, V57, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x2, 0x0, S2, V595]
Exit stack: [V13, 0x48, V400, V46, V57, S1, S0, 0x2, 0x0, V57, V595]

================================

Block 0x6aa
[0x6aa:0x6aa]
---
Predecessors: [0x698]
Successors: []
---
0x6aa INVALID
---
0x6aa: INVALID 
---
Entry stack: [V13, 0x48, V400, V46, V57, S5, S4, 0x2, 0x0, V57, V595]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V400, V46, V57, S5, S4, 0x2, 0x0, V57, V595]

================================

Block 0x6ab
[0x6ab:0x6d9]
---
Predecessors: [0x698]
Successors: [0x840]
---
0x6ab JUMPDEST
0x6ac PUSH1 0x20
0x6ae MUL
0x6af ADD
0x6b0 MLOAD
0x6b1 PUSH8 0xffffffffffffffff
0x6ba AND
0x6bb DUP2
0x6bc MSTORE
0x6bd PUSH1 0x20
0x6bf DUP2
0x6c0 ADD
0x6c1 SWAP2
0x6c2 SWAP1
0x6c3 SWAP2
0x6c4 MSTORE
0x6c5 PUSH1 0x40
0x6c7 ADD
0x6c8 PUSH1 0x0
0x6ca SHA3
0x6cb DUP1
0x6cc SLOAD
0x6cd PUSH1 0x1
0x6cf DUP2
0x6d0 ADD
0x6d1 PUSH2 0x6da
0x6d4 DUP4
0x6d5 DUP3
0x6d6 PUSH2 0x840
0x6d9 JUMP
---
0x6ab: JUMPDEST 
0x6ac: V599 = 0x20
0x6ae: V600 = MUL 0x20 V595
0x6af: V601 = ADD V600 V57
0x6b0: V602 = M[V601]
0x6b1: V603 = 0xffffffffffffffff
0x6ba: V604 = AND 0xffffffffffffffff V602
0x6bc: M[0x0] = V604
0x6bd: V605 = 0x20
0x6c0: V606 = ADD 0x0 0x20
0x6c4: M[0x20] = 0x2
0x6c5: V607 = 0x40
0x6c7: V608 = ADD 0x40 0x0
0x6c8: V609 = 0x0
0x6ca: V610 = SHA3 0x0 0x40
0x6cc: V611 = S[V610]
0x6cd: V612 = 0x1
0x6d0: V613 = ADD V611 0x1
0x6d1: V614 = 0x6da
0x6d6: V615 = 0x840
0x6d9: JUMP 0x840
---
Entry stack: [V13, 0x48, V400, V46, V57, S5, S4, 0x2, 0x0, V57, V595]
Stack pops: 4
Stack additions: [V610, V611, V613, 0x6da, V610, V613]
Exit stack: [V13, 0x48, V400, V46, V57, S5, S4, V610, V611, V613, 0x6da, V610, V613]

================================

Block 0x6da
[0x6da:0x700]
---
Predecessors: [0x874]
Successors: [0x701, 0x702]
---
0x6da JUMPDEST
0x6db SWAP2
0x6dc PUSH1 0x0
0x6de MSTORE
0x6df PUSH1 0x20
0x6e1 PUSH1 0x0
0x6e3 SHA3
0x6e4 SWAP1
0x6e5 PUSH1 0x4
0x6e7 SWAP2
0x6e8 DUP3
0x6e9 DUP3
0x6ea DIV
0x6eb ADD
0x6ec SWAP2
0x6ed SWAP1
0x6ee MOD
0x6ef PUSH1 0x8
0x6f1 MUL
0x6f2 DUP7
0x6f3 DUP9
0x6f4 PUSH1 0xff
0x6f6 AND
0x6f7 PUSH1 0x14
0x6f9 DUP2
0x6fa LT
0x6fb ISZERO
0x6fc ISZERO
0x6fd PUSH2 0x702
0x700 JUMPI
---
0x6da: JUMPDEST 
0x6dc: V616 = 0x0
0x6de: M[0x0] = S2
0x6df: V617 = 0x20
0x6e1: V618 = 0x0
0x6e3: V619 = SHA3 0x0 0x20
0x6e5: V620 = 0x4
0x6ea: V621 = DIV S1 0x4
0x6eb: V622 = ADD V621 V619
0x6ee: V623 = MOD S1 0x4
0x6ef: V624 = 0x8
0x6f1: V625 = MUL 0x8 V623
0x6f4: V626 = 0xff
0x6f6: V627 = AND 0xff S7
0x6f7: V628 = 0x14
0x6fa: V629 = LT V627 0x14
0x6fb: V630 = ISZERO V629
0x6fc: V631 = ISZERO V630
0x6fd: V632 = 0x702
0x700: JUMPI 0x702 V631
---
Entry stack: [V13, 0x48, S7, V46, V57, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S0, V622, V625, S6, V627]
Exit stack: [V13, 0x48, S7, V46, V57, S4, S3, S0, V622, V625, V46, V627]

================================

Block 0x701
[0x701:0x701]
---
Predecessors: [0x6da]
Successors: []
---
0x701 INVALID
---
0x701: INVALID 
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V622, V625, V46, V627]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V622, V625, V46, V627]

================================

Block 0x702
[0x702:0x730]
---
Predecessors: [0x6da]
Successors: [0x731]
---
0x702 JUMPDEST
0x703 PUSH1 0x20
0x705 MUL
0x706 ADD
0x707 MLOAD
0x708 SWAP1
0x709 SWAP2
0x70a SWAP1
0x70b SWAP2
0x70c PUSH2 0x100
0x70f EXP
0x710 DUP2
0x711 SLOAD
0x712 DUP2
0x713 PUSH8 0xffffffffffffffff
0x71c MUL
0x71d NOT
0x71e AND
0x71f SWAP1
0x720 DUP4
0x721 PUSH8 0xffffffffffffffff
0x72a AND
0x72b MUL
0x72c OR
0x72d SWAP1
0x72e SSTORE
0x72f POP
0x730 POP
---
0x702: JUMPDEST 
0x703: V633 = 0x20
0x705: V634 = MUL 0x20 V627
0x706: V635 = ADD V634 V46
0x707: V636 = M[V635]
0x70c: V637 = 0x100
0x70f: V638 = EXP 0x100 V625
0x711: V639 = S[V622]
0x713: V640 = 0xffffffffffffffff
0x71c: V641 = MUL 0xffffffffffffffff V638
0x71d: V642 = NOT V641
0x71e: V643 = AND V642 V639
0x721: V644 = 0xffffffffffffffff
0x72a: V645 = AND 0xffffffffffffffff V636
0x72b: V646 = MUL V645 V638
0x72c: V647 = OR V646 V643
0x72e: S[V622] = V647
---
Entry stack: [V13, 0x48, S9, V46, V57, S6, S5, S4, V622, V625, V46, V627]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x48, S9, V46, V57, S6, S5]

================================

Block 0x731
[0x731:0x73b]
---
Predecessors: [0x683, 0x702]
Successors: [0x73c, 0x740]
---
0x731 JUMPDEST
0x732 PUSH1 0xff
0x734 DUP6
0x735 AND
0x736 ISZERO
0x737 ISZERO
0x738 PUSH2 0x740
0x73b JUMPI
---
0x731: JUMPDEST 
0x732: V648 = 0xff
0x735: V649 = AND S4 0xff
0x736: V650 = ISZERO V649
0x737: V651 = ISZERO V650
0x738: V652 = 0x740
0x73b: JUMPI 0x740 V651
---
Entry stack: [V13, 0x48, S4, V46, V57, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x48, S4, V46, V57, S1, S0]

================================

Block 0x73c
[0x73c:0x73f]
---
Predecessors: [0x731]
Successors: [0x745]
---
0x73c PUSH2 0x745
0x73f JUMP
---
0x73c: V653 = 0x745
0x73f: JUMP 0x745
---
Entry stack: [V13, 0x48, S4, V46, V57, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S4, V46, V57, S1, S0]

================================

Block 0x740
[0x740:0x744]
---
Predecessors: [0x731]
Successors: [0x4b4]
---
0x740 JUMPDEST
0x741 PUSH2 0x4b4
0x744 JUMP
---
0x740: JUMPDEST 
0x741: V654 = 0x4b4
0x744: JUMP 0x4b4
---
Entry stack: [V13, 0x48, S4, V46, V57, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, S4, V46, V57, S1, S0]

================================

Block 0x745
[0x745:0x74c]
---
Predecessors: [0x4a4, 0x73c]
Successors: [0xfd]
---
0x745 JUMPDEST
0x746 PUSH2 0x74d
0x749 PUSH2 0xfd
0x74c JUMP
---
0x745: JUMPDEST 
0x746: V655 = 0x74d
0x749: V656 = 0xfd
0x74c: JUMP 0xfd
---
Entry stack: [V13, 0x48, S4, V46, V57, S1, S0]
Stack pops: 0
Stack additions: [0x74d]
Exit stack: [V13, 0x48, S4, V46, V57, S1, S0, 0x74d]

================================

Block 0x74d
[0x74d:0x753]
---
Predecessors: [0x49e, 0x694]
Successors: [0x48]
---
0x74d JUMPDEST
0x74e POP
0x74f POP
0x750 POP
0x751 POP
0x752 POP
0x753 JUMP
---
0x74d: JUMPDEST 
0x753: JUMP 0x48
---
Entry stack: [V13, 0x48, S4, V46, V57, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x754
[0x754:0x76a]
---
Predecessors: [0xd5]
Successors: [0x76b, 0x76f]
---
0x754 JUMPDEST
0x755 PUSH1 0x1
0x757 SLOAD
0x758 CALLER
0x759 PUSH1 0x1
0x75b PUSH1 0xa0
0x75d PUSH1 0x2
0x75f EXP
0x760 SUB
0x761 SWAP1
0x762 DUP2
0x763 AND
0x764 SWAP2
0x765 AND
0x766 EQ
0x767 PUSH2 0x76f
0x76a JUMPI
---
0x754: JUMPDEST 
0x755: V657 = 0x1
0x757: V658 = S[0x1]
0x758: V659 = CALLER
0x759: V660 = 0x1
0x75b: V661 = 0xa0
0x75d: V662 = 0x2
0x75f: V663 = EXP 0x2 0xa0
0x760: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x763: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0x765: V666 = AND V658 0xffffffffffffffffffffffffffffffffffffffff
0x766: V667 = EQ V666 V665
0x767: V668 = 0x76f
0x76a: JUMPI 0x76f V667
---
Entry stack: [V13, 0x48, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V70]

================================

Block 0x76b
[0x76b:0x76e]
---
Predecessors: [0x754]
Successors: []
---
0x76b PUSH1 0x0
0x76d DUP1
0x76e REVERT
---
0x76b: V669 = 0x0
0x76e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V70]

================================

Block 0x76f
[0x76f:0x7b7]
---
Predecessors: [0x754]
Successors: [0x7b8]
---
0x76f JUMPDEST
0x770 PUSH1 0x1
0x772 DUP1
0x773 SLOAD
0x774 PUSH28 0xffffffffffffffff0000000000000000000000000000000000000000
0x791 NOT
0x792 AND
0x793 PUSH21 0x10000000000000000000000000000000000000000
0x7a9 PUSH8 0xffffffffffffffff
0x7b2 DUP5
0x7b3 AND
0x7b4 MUL
0x7b5 OR
0x7b6 SWAP1
0x7b7 SSTORE
---
0x76f: JUMPDEST 
0x770: V670 = 0x1
0x773: V671 = S[0x1]
0x774: V672 = 0xffffffffffffffff0000000000000000000000000000000000000000
0x791: V673 = NOT 0xffffffffffffffff0000000000000000000000000000000000000000
0x792: V674 = AND 0xffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff V671
0x793: V675 = 0x10000000000000000000000000000000000000000
0x7a9: V676 = 0xffffffffffffffff
0x7b3: V677 = AND V70 0xffffffffffffffff
0x7b4: V678 = MUL V677 0x10000000000000000000000000000000000000000
0x7b5: V679 = OR V678 V674
0x7b7: S[0x1] = V679
---
Entry stack: [V13, 0x48, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x48, V70]

================================

Block 0x7b8
[0x7b8:0x7ba]
---
Predecessors: [0x76f, 0x897]
Successors: [0x48, 0x40f]
---
0x7b8 JUMPDEST
0x7b9 POP
0x7ba JUMP
---
0x7b8: JUMPDEST 
0x7ba: JUMP S1
---
Entry stack: [V13, 0x48, S11, V46, V57, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x48, S11, V46, V57, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x7bb
[0x7bb:0x7d2]
---
Predecessors: [0xf5]
Successors: [0x7d3, 0x814]
---
0x7bb JUMPDEST
0x7bc PUSH1 0x1
0x7be SLOAD
0x7bf CALLER
0x7c0 PUSH1 0x1
0x7c2 PUSH1 0xa0
0x7c4 PUSH1 0x2
0x7c6 EXP
0x7c7 SUB
0x7c8 SWAP1
0x7c9 DUP2
0x7ca AND
0x7cb SWAP2
0x7cc AND
0x7cd EQ
0x7ce ISZERO
0x7cf PUSH2 0x814
0x7d2 JUMPI
---
0x7bb: JUMPDEST 
0x7bc: V680 = 0x1
0x7be: V681 = S[0x1]
0x7bf: V682 = CALLER
0x7c0: V683 = 0x1
0x7c2: V684 = 0xa0
0x7c4: V685 = 0x2
0x7c6: V686 = EXP 0x2 0xa0
0x7c7: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ca: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V682
0x7cc: V689 = AND V681 0xffffffffffffffffffffffffffffffffffffffff
0x7cd: V690 = EQ V689 V688
0x7ce: V691 = ISZERO V690
0x7cf: V692 = 0x814
0x7d2: JUMPI 0x814 V691
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x7d3
[0x7d3:0x80a]
---
Predecessors: [0x7bb]
Successors: [0x80b, 0x80f]
---
0x7d3 CALLER
0x7d4 PUSH1 0x1
0x7d6 PUSH1 0xa0
0x7d8 PUSH1 0x2
0x7da EXP
0x7db SUB
0x7dc AND
0x7dd PUSH2 0x8fc
0x7e0 ADDRESS
0x7e1 PUSH1 0x1
0x7e3 PUSH1 0xa0
0x7e5 PUSH1 0x2
0x7e7 EXP
0x7e8 SUB
0x7e9 AND
0x7ea BALANCE
0x7eb SWAP1
0x7ec DUP2
0x7ed ISZERO
0x7ee MUL
0x7ef SWAP1
0x7f0 PUSH1 0x40
0x7f2 MLOAD
0x7f3 PUSH1 0x0
0x7f5 PUSH1 0x40
0x7f7 MLOAD
0x7f8 DUP1
0x7f9 DUP4
0x7fa SUB
0x7fb DUP2
0x7fc DUP6
0x7fd DUP9
0x7fe DUP9
0x7ff CALL
0x800 SWAP4
0x801 POP
0x802 POP
0x803 POP
0x804 POP
0x805 ISZERO
0x806 ISZERO
0x807 PUSH2 0x80f
0x80a JUMPI
---
0x7d3: V693 = CALLER
0x7d4: V694 = 0x1
0x7d6: V695 = 0xa0
0x7d8: V696 = 0x2
0x7da: V697 = EXP 0x2 0xa0
0x7db: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dc: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0x7dd: V700 = 0x8fc
0x7e0: V701 = ADDRESS
0x7e1: V702 = 0x1
0x7e3: V703 = 0xa0
0x7e5: V704 = 0x2
0x7e7: V705 = EXP 0x2 0xa0
0x7e8: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e9: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0x7ea: V708 = BALANCE V707
0x7ed: V709 = ISZERO V708
0x7ee: V710 = MUL V709 0x8fc
0x7f0: V711 = 0x40
0x7f2: V712 = M[0x40]
0x7f3: V713 = 0x0
0x7f5: V714 = 0x40
0x7f7: V715 = M[0x40]
0x7fa: V716 = SUB V712 V715
0x7ff: V717 = CALL V710 V699 V708 V715 V716 V715 0x0
0x805: V718 = ISZERO V717
0x806: V719 = ISZERO V718
0x807: V720 = 0x80f
0x80a: JUMPI 0x80f V719
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x80b
[0x80b:0x80e]
---
Predecessors: [0x7d3]
Successors: []
---
0x80b PUSH1 0x0
0x80d DUP1
0x80e REVERT
---
0x80b: V721 = 0x0
0x80e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x80f
[0x80f:0x813]
---
Predecessors: [0x7d3]
Successors: [0x819]
---
0x80f JUMPDEST
0x810 PUSH2 0x819
0x813 JUMP
---
0x80f: JUMPDEST 
0x810: V722 = 0x819
0x813: JUMP 0x819
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x814
[0x814:0x818]
---
Predecessors: [0x7bb]
Successors: []
---
0x814 JUMPDEST
0x815 PUSH1 0x0
0x817 DUP1
0x818 REVERT
---
0x814: JUMPDEST 
0x815: V723 = 0x0
0x818: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x819
[0x819:0x81a]
---
Predecessors: [0x80f]
Successors: [0x48]
---
0x819 JUMPDEST
0x81a JUMP
---
0x819: JUMPDEST 
0x81a: JUMP 0x48
---
Entry stack: [V13, 0x48]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x81b
[0x81b:0x83f]
---
Predecessors: [0x3ed]
Successors: [0x879]
---
0x81b JUMPDEST
0x81c POP
0x81d DUP1
0x81e SLOAD
0x81f PUSH1 0x0
0x821 DUP3
0x822 SSTORE
0x823 PUSH1 0x3
0x825 ADD
0x826 PUSH1 0x4
0x828 SWAP1
0x829 DIV
0x82a SWAP1
0x82b PUSH1 0x0
0x82d MSTORE
0x82e PUSH1 0x20
0x830 PUSH1 0x0
0x832 SHA3
0x833 SWAP1
0x834 DUP2
0x835 ADD
0x836 SWAP1
0x837 PUSH2 0x7b8
0x83a SWAP2
0x83b SWAP1
0x83c PUSH2 0x879
0x83f JUMP
---
0x81b: JUMPDEST 
0x81e: V724 = S[V344]
0x81f: V725 = 0x0
0x822: S[V344] = 0x0
0x823: V726 = 0x3
0x825: V727 = ADD 0x3 V724
0x826: V728 = 0x4
0x829: V729 = DIV V727 0x4
0x82b: V730 = 0x0
0x82d: M[0x0] = V344
0x82e: V731 = 0x20
0x830: V732 = 0x0
0x832: V733 = SHA3 0x0 0x20
0x835: V734 = ADD V733 V729
0x837: V735 = 0x7b8
0x83c: V736 = 0x879
0x83f: JUMP 0x879
---
Entry stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, S6, S5, S4, S3, 0x40f, V344, 0x0]
Stack pops: 2
Stack additions: [0x7b8, V734, V733]
Exit stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, S6, S5, S4, S3, 0x40f, 0x7b8, V734, V733]

================================

Block 0x840
[0x840:0x84d]
---
Predecessors: [0x6ab]
Successors: [0x84e, 0x874]
---
0x840 JUMPDEST
0x841 DUP2
0x842 SLOAD
0x843 DUP2
0x844 DUP4
0x845 SSTORE
0x846 DUP2
0x847 DUP2
0x848 ISZERO
0x849 GT
0x84a PUSH2 0x874
0x84d JUMPI
---
0x840: JUMPDEST 
0x842: V737 = S[V610]
0x845: S[V610] = V613
0x848: V738 = ISZERO V737
0x849: V739 = GT V738 V613
0x84a: V740 = 0x874
0x84d: JUMPI 0x874 V739
---
Entry stack: [V13, 0x48, V400, V46, V57, S7, S6, V610, V611, V613, 0x6da, V610, V613]
Stack pops: 2
Stack additions: [S1, S0, V737]
Exit stack: [V13, 0x48, V400, V46, V57, S7, S6, V610, V611, V613, 0x6da, V610, V613, V737]

================================

Block 0x84e
[0x84e:0x873]
---
Predecessors: [0x840]
Successors: [0x879]
---
0x84e PUSH1 0x3
0x850 ADD
0x851 PUSH1 0x4
0x853 SWAP1
0x854 DIV
0x855 DUP2
0x856 PUSH1 0x3
0x858 ADD
0x859 PUSH1 0x4
0x85b SWAP1
0x85c DIV
0x85d DUP4
0x85e PUSH1 0x0
0x860 MSTORE
0x861 PUSH1 0x20
0x863 PUSH1 0x0
0x865 SHA3
0x866 SWAP2
0x867 DUP3
0x868 ADD
0x869 SWAP2
0x86a ADD
0x86b PUSH2 0x874
0x86e SWAP2
0x86f SWAP1
0x870 PUSH2 0x879
0x873 JUMP
---
0x84e: V741 = 0x3
0x850: V742 = ADD 0x3 V737
0x851: V743 = 0x4
0x854: V744 = DIV V742 0x4
0x856: V745 = 0x3
0x858: V746 = ADD 0x3 V613
0x859: V747 = 0x4
0x85c: V748 = DIV V746 0x4
0x85e: V749 = 0x0
0x860: M[0x0] = V610
0x861: V750 = 0x20
0x863: V751 = 0x0
0x865: V752 = SHA3 0x0 0x20
0x868: V753 = ADD V752 V744
0x86a: V754 = ADD V752 V748
0x86b: V755 = 0x874
0x870: V756 = 0x879
0x873: JUMP 0x879
---
Entry stack: [V13, 0x48, V400, V46, V57, S8, S7, V610, V611, V613, 0x6da, V610, V613, V737]
Stack pops: 3
Stack additions: [S2, S1, 0x874, V753, V754]
Exit stack: [V13, 0x48, V400, V46, V57, S8, S7, V610, V611, V613, 0x6da, V610, V613, 0x874, V753, V754]

================================

Block 0x874
[0x874:0x878]
---
Predecessors: [0x840, 0x897]
Successors: [0x6da]
---
0x874 JUMPDEST
0x875 POP
0x876 POP
0x877 POP
0x878 JUMP
---
0x874: JUMPDEST 
0x878: JUMP S3
---
Entry stack: [V13, 0x48, S11, V46, V57, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x48, S11, V46, V57, S8, S7, S6, S5, S4]

================================

Block 0x879
[0x879:0x87e]
---
Predecessors: [0x81b, 0x84e]
Successors: [0x87f]
---
0x879 JUMPDEST
0x87a PUSH2 0x897
0x87d SWAP2
0x87e SWAP1
---
0x879: JUMPDEST 
0x87a: V757 = 0x897
---
Entry stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, S7, S6, S5, S4, S3, {0x7b8, 0x874}, S1, S0]
Stack pops: 2
Stack additions: [0x897, S1, S0]
Exit stack: [V13, 0x48, S13, V46, V57, S10, S9, S8, S7, S6, S5, S4, S3, {0x7b8, 0x874}, 0x897, S1, S0]

================================

Block 0x87f
[0x87f:0x887]
---
Predecessors: [0x879, 0x888]
Successors: [0x888, 0x893]
---
0x87f JUMPDEST
0x880 DUP1
0x881 DUP3
0x882 GT
0x883 ISZERO
0x884 PUSH2 0x893
0x887 JUMPI
---
0x87f: JUMPDEST 
0x882: V758 = GT S1 S0
0x883: V759 = ISZERO V758
0x884: V760 = 0x893
0x887: JUMPI 0x893 V759
---
Entry stack: [V13, 0x48, S14, V46, V57, S11, S10, S9, S8, S7, S6, S5, S4, {0x7b8, 0x874}, 0x897, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x48, S14, V46, V57, S11, S10, S9, S8, S7, S6, S5, S4, {0x7b8, 0x874}, 0x897, S1, S0]

================================

Block 0x888
[0x888:0x892]
---
Predecessors: [0x87f]
Successors: [0x87f]
---
0x888 PUSH1 0x0
0x88a DUP2
0x88b SSTORE
0x88c PUSH1 0x1
0x88e ADD
0x88f PUSH2 0x87f
0x892 JUMP
---
0x888: V761 = 0x0
0x88b: S[S0] = 0x0
0x88c: V762 = 0x1
0x88e: V763 = ADD 0x1 S0
0x88f: V764 = 0x87f
0x892: JUMP 0x87f
---
Entry stack: [V13, 0x48, S14, V46, V57, S11, S10, S9, S8, S7, S6, S5, S4, {0x7b8, 0x874}, 0x897, S1, S0]
Stack pops: 1
Stack additions: [V763]
Exit stack: [V13, 0x48, S14, V46, V57, S11, S10, S9, S8, S7, S6, S5, S4, {0x7b8, 0x874}, 0x897, S1, V763]

================================

Block 0x893
[0x893:0x896]
---
Predecessors: [0x87f]
Successors: [0x897]
---
0x893 JUMPDEST
0x894 POP
0x895 SWAP1
0x896 JUMP
---
0x893: JUMPDEST 
0x896: JUMP 0x897
---
Entry stack: [V13, 0x48, S14, V46, V57, S11, S10, S9, S8, S7, S6, S5, S4, {0x7b8, 0x874}, 0x897, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V13, 0x48, S14, V46, V57, S11, S10, S9, S8, S7, S6, S5, S4, {0x7b8, 0x874}, S1]

================================

Block 0x897
[0x897:0x899]
---
Predecessors: [0x893]
Successors: [0x7b8, 0x874]
---
0x897 JUMPDEST
0x898 SWAP1
0x899 JUMP
---
0x897: JUMPDEST 
0x899: JUMP {0x7b8, 0x874}
---
Entry stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, S6, S5, S4, S3, S2, {0x7b8, 0x874}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, 0x48, S12, V46, V57, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x89a
[0x89a:0x8cf]
---
Predecessors: []
Successors: []
---
0x89a STOP
0x89b LOG1
0x89c PUSH6 0x627a7a723058
0x8a3 SHA3
0x8a4 MISSING 0xef
0x8a5 EXP
0x8a6 EXTCODESIZE
0x8a7 CODECOPY
0x8a8 BYTE
0x8a9 MISSING 0xbf
0x8aa SHL
0x8ab MISSING 0x46
0x8ac MISSING 0xfb
0x8ad MISSING 0xc6
0x8ae LOG3
0x8af MISSING 0xcc
0x8b0 SELFDESTRUCT
0x8b1 ADD
0x8b2 CALLER
0x8b3 MISSING 0x27
0x8b4 DUP15
0x8b5 NUMBER
0x8b6 MISSING 0xad
0x8b7 CALLDATASIZE
0x8b8 SGT
0x8b9 PUSH22 0x934a811a3f2443f70f620029
---
0x89a: STOP 
0x89b: LOG S0 S1 S2
0x89c: V765 = 0x627a7a723058
0x8a3: V766 = SHA3 0x627a7a723058 S3
0x8a4: MISSING 0xef
0x8a5: V767 = EXP S0 S1
0x8a6: V768 = EXTCODESIZE V767
0x8a7: CODECOPY V768 S2 S3
0x8a8: V769 = BYTE S4 S5
0x8a9: MISSING 0xbf
0x8aa: V770 = SHL S0 S1
0x8ab: MISSING 0x46
0x8ac: MISSING 0xfb
0x8ad: MISSING 0xc6
0x8ae: LOG S0 S1 S2 S3 S4
0x8af: MISSING 0xcc
0x8b0: SELFDESTRUCT S0
0x8b1: V771 = ADD S0 S1
0x8b2: V772 = CALLER
0x8b3: MISSING 0x27
0x8b5: V773 = NUMBER
0x8b6: MISSING 0xad
0x8b7: V774 = CALLDATASIZE
0x8b8: V775 = SGT V774 S0
0x8b9: V776 = 0x934a811a3f2443f70f620029
---
Entry stack: []
Stack pops: 0
Stack additions: [V766, V769, V770, V772, V771, V773, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0x934a811a3f2443f70f620029, V775]
Exit stack: []

================================

Function 0:
Public function signature: 0x8ed4b21a
Entry block: 0x4a
Exit block: 0x48
Body: 0x48, 0x4a, 0x51, 0x55

Function 1:
Public function signature: 0xa7fafab7
Entry block: 0x5d
Exit block: 0x674
Body: 0x48, 0x5d, 0x64, 0x68, 0x4a4, 0x4b4, 0x4c9, 0x4d8, 0x4d9, 0x4eb, 0x4f1, 0x50f, 0x510, 0x55b, 0x55f, 0x56c, 0x570, 0x5d2, 0x5d3, 0x5ea, 0x5ec, 0x5f3, 0x5f5, 0x5fb, 0x619, 0x61a, 0x663, 0x667, 0x674, 0x678, 0x683, 0x688, 0x694, 0x698, 0x6aa, 0x6ab, 0x6da, 0x701, 0x702, 0x731, 0x73c, 0x740, 0x745, 0x74d, 0x840, 0x84e, 0x874

Function 2:
Public function signature: 0xcaa130d2
Entry block: 0xca
Exit block: 0x48
Body: 0x48, 0xca, 0xd1, 0xd5, 0x754, 0x76b, 0x76f

Function 3:
Public function signature: 0xd1058e59
Entry block: 0xea
Exit block: 0x48
Body: 0x48, 0xea, 0xf1, 0xf5, 0x7bb, 0x7d3, 0x80b, 0x80f, 0x814, 0x819

Function 4:
Public fallback function
Entry block: 0x48
Exit block: 0x48
Body: 0x48

Function 5:
Private function
Entry block: 0xfd
Exit block: 0x49e
Body: 0xfd, 0x12e, 0x135, 0x148, 0x153, 0x157, 0x161, 0x183, 0x18d, 0x1c6, 0x23a, 0x24b, 0x2c0, 0x2fc, 0x2fe, 0x305, 0x307, 0x30d, 0x346, 0x3b8, 0x3c9, 0x3d4, 0x3d9, 0x3e5, 0x3ed, 0x40f, 0x414, 0x470, 0x49e, 0x7b8, 0x81b

Function 6:
Private function
Entry block: 0x879
Exit block: 0x897
Body: 0x879, 0x87f, 0x888, 0x893, 0x897

