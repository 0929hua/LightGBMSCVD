Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x66]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x41b0a3ed
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x66
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x41b0a3ed
0x3b: V13 = EQ V11 0x41b0a3ed
0x3c: V14 = 0x66
0x3f: JUMPI 0x66 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xdb]
---
0x40 DUP1
0x41 PUSH4 0x7cadfa34
0x46 EQ
0x47 PUSH2 0xdb
0x4a JUMPI
---
0x41: V15 = 0x7cadfa34
0x46: V16 = EQ 0x7cadfa34 V11
0x47: V17 = 0xdb
0x4a: JUMPI 0xdb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xe5]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0xe5
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0xe5
0x55: JUMPI 0xe5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xfa]
---
0x56 DUP1
0x57 PUSH4 0xbe9a6555
0x5c EQ
0x5d PUSH2 0xfa
0x60 JUMPI
---
0x57: V21 = 0xbe9a6555
0x5c: V22 = EQ 0xbe9a6555 V11
0x5d: V23 = 0xfa
0x60: JUMPI 0xfa V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x65]
---
Predecessors: [0x0, 0x56]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0xbe]
---
Predecessors: [0xd]
Successors: [0x102]
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 DUP1
0x6a MLOAD
0x6b PUSH1 0x20
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATALOAD
0x71 DUP1
0x72 DUP3
0x73 ADD
0x74 CALLDATALOAD
0x75 DUP4
0x76 DUP2
0x77 MUL
0x78 DUP1
0x79 DUP7
0x7a ADD
0x7b DUP6
0x7c ADD
0x7d SWAP1
0x7e SWAP7
0x7f MSTORE
0x80 DUP1
0x81 DUP6
0x82 MSTORE
0x83 PUSH2 0xbf
0x86 SWAP6
0x87 CALLDATASIZE
0x88 SWAP6
0x89 SWAP4
0x8a SWAP5
0x8b PUSH1 0x24
0x8d SWAP5
0x8e SWAP4
0x8f DUP6
0x90 ADD
0x91 SWAP3
0x92 SWAP2
0x93 DUP3
0x94 SWAP2
0x95 DUP6
0x96 ADD
0x97 SWAP1
0x98 DUP5
0x99 SWAP1
0x9a DUP1
0x9b DUP3
0x9c DUP5
0x9d CALLDATACOPY
0x9e POP
0x9f SWAP5
0xa0 SWAP8
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 DUP4
0xa5 CALLDATALOAD
0xa6 PUSH1 0xff
0xa8 AND
0xa9 SWAP5
0xaa POP
0xab POP
0xac POP
0xad POP
0xae PUSH1 0x20
0xb0 ADD
0xb1 CALLDATALOAD
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 PUSH1 0x2
0xb8 EXP
0xb9 SUB
0xba AND
0xbb PUSH2 0x102
0xbe JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x6a: V26 = M[0x40]
0x6b: V27 = 0x20
0x6d: V28 = 0x4
0x70: V29 = CALLDATALOAD 0x4
0x73: V30 = ADD 0x4 V29
0x74: V31 = CALLDATALOAD V30
0x77: V32 = MUL V31 0x20
0x7a: V33 = ADD V26 V32
0x7c: V34 = ADD 0x20 V33
0x7f: M[0x40] = V34
0x82: M[V26] = V31
0x83: V35 = 0xbf
0x87: V36 = CALLDATASIZE
0x8b: V37 = 0x24
0x90: V38 = ADD 0x24 V29
0x96: V39 = ADD V26 0x20
0x9d: CALLDATACOPY V39 V38 V32
0xa5: V40 = CALLDATALOAD 0x24
0xa6: V41 = 0xff
0xa8: V42 = AND 0xff V40
0xae: V43 = 0x20
0xb0: V44 = ADD 0x20 0x24
0xb1: V45 = CALLDATALOAD 0x44
0xb2: V46 = 0x1
0xb4: V47 = 0xa0
0xb6: V48 = 0x2
0xb8: V49 = EXP 0x2 0xa0
0xb9: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xbb: V52 = 0x102
0xbe: JUMP 0x102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbf, V26, V42, V51]
Exit stack: [V11, 0xbf, V26, V42, V51]

================================

Block 0xbf
[0xbf:0xda]
---
Predecessors: [0x18b, 0x2ea]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x40
0xc2 DUP1
0xc3 MLOAD
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc SWAP1
0xcd SWAP3
0xce AND
0xcf DUP3
0xd0 MSTORE
0xd1 MLOAD
0xd2 SWAP1
0xd3 DUP2
0xd4 SWAP1
0xd5 SUB
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda RETURN
---
0xbf: JUMPDEST 
0xc0: V53 = 0x40
0xc3: V54 = M[0x40]
0xc4: V55 = 0x1
0xc6: V56 = 0xa0
0xc8: V57 = 0x2
0xca: V58 = EXP 0x2 0xa0
0xcb: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V60 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd0: M[V54] = V60
0xd1: V61 = M[0x40]
0xd5: V62 = SUB V54 V61
0xd6: V63 = 0x20
0xd8: V64 = ADD 0x20 V62
0xda: RETURN V61 V64
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0x40]
Successors: [0x195]
---
0xdb JUMPDEST
0xdc PUSH2 0xe3
0xdf PUSH2 0x195
0xe2 JUMP
---
0xdb: JUMPDEST 
0xdc: V65 = 0xe3
0xdf: V66 = 0x195
0xe2: JUMP 0x195
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V11, 0xe3]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: [0x2e7, 0x320, 0x915]
Successors: []
---
0xe3 JUMPDEST
0xe4 STOP
---
0xe3: JUMPDEST 
0xe4: STOP 
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0x4b]
Successors: [0xed, 0xf1]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 DUP1
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe5: JUMPDEST 
0xe6: V67 = CALLVALUE
0xe8: V68 = ISZERO V67
0xe9: V69 = 0xf1
0xec: JUMPI 0xf1 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe5]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V70 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0xf1
[0xf1:0xf9]
---
Predecessors: [0xe5]
Successors: [0x2ea]
---
0xf1 JUMPDEST
0xf2 POP
0xf3 PUSH2 0xbf
0xf6 PUSH2 0x2ea
0xf9 JUMP
---
0xf1: JUMPDEST 
0xf3: V71 = 0xbf
0xf6: V72 = 0x2ea
0xf9: JUMP 0x2ea
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V11, 0xbf]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x56]
Successors: [0x2f9]
---
0xfa JUMPDEST
0xfb PUSH2 0xe3
0xfe PUSH2 0x2f9
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V73 = 0xe3
0xfe: V74 = 0x2f9
0x101: JUMP 0x2f9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V11, 0xe3]

================================

Block 0x102
[0x102:0x10f]
---
Predecessors: [0x66]
Successors: [0x91b]
---
0x102 JUMPDEST
0x103 PUSH1 0x0
0x105 CALLVALUE
0x106 DUP5
0x107 DUP5
0x108 DUP5
0x109 PUSH2 0x110
0x10c PUSH2 0x91b
0x10f JUMP
---
0x102: JUMPDEST 
0x103: V75 = 0x0
0x105: V76 = CALLVALUE
0x109: V77 = 0x110
0x10c: V78 = 0x91b
0x10f: JUMP 0x91b
---
Entry stack: [V11, 0xbf, V26, V42, V51]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V76, S2, S1, S0, 0x110]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, 0x110]

================================

Block 0x110
[0x110:0x14a]
---
Predecessors: [0x91b]
Successors: [0x14b]
---
0x110 JUMPDEST
0x111 PUSH1 0xff
0x113 DUP4
0x114 AND
0x115 PUSH1 0x20
0x117 DUP1
0x118 DUP4
0x119 ADD
0x11a SWAP2
0x11b SWAP1
0x11c SWAP2
0x11d MSTORE
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 DUP4
0x127 AND
0x128 PUSH1 0x40
0x12a DUP4
0x12b ADD
0x12c MSTORE
0x12d PUSH1 0x60
0x12f DUP1
0x130 DUP4
0x131 MSTORE
0x132 DUP6
0x133 MLOAD
0x134 SWAP1
0x135 DUP4
0x136 ADD
0x137 MSTORE
0x138 DUP5
0x139 MLOAD
0x13a DUP3
0x13b SWAP2
0x13c PUSH1 0x80
0x13e DUP4
0x13f ADD
0x140 SWAP2
0x141 DUP8
0x142 DUP3
0x143 ADD
0x144 SWAP2
0x145 MUL
0x146 DUP1
0x147 DUP4
0x148 DUP4
0x149 PUSH1 0x0
---
0x110: JUMPDEST 
0x111: V79 = 0xff
0x114: V80 = AND S2 0xff
0x115: V81 = 0x20
0x119: V82 = ADD V736 0x20
0x11d: M[V82] = V80
0x11e: V83 = 0x1
0x120: V84 = 0xa0
0x122: V85 = 0x2
0x124: V86 = EXP 0x2 0xa0
0x125: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V88 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x128: V89 = 0x40
0x12b: V90 = ADD V736 0x40
0x12c: M[V90] = V88
0x12d: V91 = 0x60
0x131: M[V736] = 0x60
0x133: V92 = M[S3]
0x136: V93 = ADD V736 0x60
0x137: M[V93] = V92
0x139: V94 = M[S3]
0x13c: V95 = 0x80
0x13f: V96 = ADD V736 0x80
0x143: V97 = ADD 0x20 S3
0x145: V98 = MUL 0x20 V94
0x149: V99 = 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, V736]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S0, V96, V97, V98, V98, V96, V97, 0x0]
Exit stack: [S10, 0xbf, S8, S7, S6, 0x0, S4, S3, S2, S1, S0, S0, V96, V97, V98, V98, V96, V97, 0x0]

================================

Block 0x14b
[0x14b:0x153]
---
Predecessors: [0x110, 0x154]
Successors: [0x154, 0x163]
---
0x14b JUMPDEST
0x14c DUP4
0x14d DUP2
0x14e LT
0x14f ISZERO
0x150 PUSH2 0x163
0x153 JUMPI
---
0x14b: JUMPDEST 
0x14e: V100 = LT S0 V98
0x14f: V101 = ISZERO V100
0x150: V102 = 0x163
0x153: JUMPI 0x163 V101
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V736, V736, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V736, V736, V96, V97, V98, V98, V96, V97, S0]

================================

Block 0x154
[0x154:0x162]
---
Predecessors: [0x14b]
Successors: [0x14b]
---
0x154 DUP2
0x155 DUP2
0x156 ADD
0x157 MLOAD
0x158 DUP4
0x159 DUP3
0x15a ADD
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f PUSH2 0x14b
0x162 JUMP
---
0x156: V103 = ADD S0 V97
0x157: V104 = M[V103]
0x15a: V105 = ADD S0 V96
0x15b: M[V105] = V104
0x15c: V106 = 0x20
0x15e: V107 = ADD 0x20 S0
0x15f: V108 = 0x14b
0x162: JUMP 0x14b
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V736, V736, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 3
Stack additions: [S2, S1, V107]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V736, V736, V96, V97, V98, V98, V96, V97, V107]

================================

Block 0x163
[0x163:0x181]
---
Predecessors: [0x14b]
Successors: [0x182, 0x18b]
---
0x163 JUMPDEST
0x164 POP
0x165 POP
0x166 POP
0x167 POP
0x168 SWAP1
0x169 POP
0x16a ADD
0x16b SWAP5
0x16c POP
0x16d POP
0x16e POP
0x16f POP
0x170 POP
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP1
0x175 SWAP2
0x176 SUB
0x177 SWAP1
0x178 DUP3
0x179 CREATE
0x17a DUP1
0x17b ISZERO
0x17c DUP1
0x17d ISZERO
0x17e PUSH2 0x18b
0x181 JUMPI
---
0x163: JUMPDEST 
0x16a: V109 = ADD V98 V96
0x171: V110 = 0x40
0x173: V111 = M[0x40]
0x176: V112 = SUB V109 V111
0x179: V113 = CREATE V76 V111 V112
0x17b: V114 = ISZERO V113
0x17d: V115 = ISZERO V114
0x17e: V116 = 0x18b
0x181: JUMPI 0x18b V115
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V736, V736, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 13
Stack additions: [S12, V113, V114]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]

================================

Block 0x182
[0x182:0x18a]
---
Predecessors: [0x163]
Successors: []
---
0x182 RETURNDATASIZE
0x183 PUSH1 0x0
0x185 DUP1
0x186 RETURNDATACOPY
0x187 RETURNDATASIZE
0x188 PUSH1 0x0
0x18a REVERT
---
0x182: V117 = RETURNDATASIZE
0x183: V118 = 0x0
0x186: RETURNDATACOPY 0x0 0x0 V117
0x187: V119 = RETURNDATASIZE
0x188: V120 = 0x0
0x18a: REVERT 0x0 V119
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]

================================

Block 0x18b
[0x18b:0x194]
---
Predecessors: [0x163]
Successors: [0xbf]
---
0x18b JUMPDEST
0x18c POP
0x18d SWAP6
0x18e SWAP5
0x18f POP
0x190 POP
0x191 POP
0x192 POP
0x193 POP
0x194 JUMP
---
0x18b: JUMPDEST 
0x194: JUMP 0xbf
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]
Stack pops: 8
Stack additions: [S1]
Exit stack: [V11, V113]

================================

Block 0x195
[0x195:0x1fd]
---
Predecessors: [0xdb]
Successors: [0x1fe, 0x202]
---
0x195 JUMPDEST
0x196 PUSH1 0x1
0x198 SLOAD
0x199 PUSH1 0x40
0x19b DUP1
0x19c MLOAD
0x19d PUSH32 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1be DUP2
0x1bf MSTORE
0x1c0 ORIGIN
0x1c1 PUSH1 0x4
0x1c3 DUP3
0x1c4 ADD
0x1c5 MSTORE
0x1c6 PUSH1 0x2
0x1c8 PUSH1 0x24
0x1ca DUP3
0x1cb ADD
0x1cc MSTORE
0x1cd SWAP1
0x1ce MLOAD
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 SWAP1
0x1d8 SWAP3
0x1d9 AND
0x1da SWAP2
0x1db PUSH4 0x98a0871d
0x1e0 SWAP2
0x1e1 CALLVALUE
0x1e2 SWAP2
0x1e3 PUSH1 0x44
0x1e5 DUP1
0x1e6 DUP4
0x1e7 ADD
0x1e8 SWAP3
0x1e9 PUSH1 0x0
0x1eb SWAP3
0x1ec SWAP2
0x1ed SWAP1
0x1ee DUP3
0x1ef SWAP1
0x1f0 SUB
0x1f1 ADD
0x1f2 DUP2
0x1f3 DUP6
0x1f4 DUP9
0x1f5 DUP1
0x1f6 EXTCODESIZE
0x1f7 ISZERO
0x1f8 DUP1
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x195: JUMPDEST 
0x196: V121 = 0x1
0x198: V122 = S[0x1]
0x199: V123 = 0x40
0x19c: V124 = M[0x40]
0x19d: V125 = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1bf: M[V124] = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1c0: V126 = ORIGIN
0x1c1: V127 = 0x4
0x1c4: V128 = ADD V124 0x4
0x1c5: M[V128] = V126
0x1c6: V129 = 0x2
0x1c8: V130 = 0x24
0x1cb: V131 = ADD V124 0x24
0x1cc: M[V131] = 0x2
0x1ce: V132 = M[0x40]
0x1cf: V133 = 0x1
0x1d1: V134 = 0xa0
0x1d3: V135 = 0x2
0x1d5: V136 = EXP 0x2 0xa0
0x1d6: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V138 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V139 = 0x98a0871d
0x1e1: V140 = CALLVALUE
0x1e3: V141 = 0x44
0x1e7: V142 = ADD V124 0x44
0x1e9: V143 = 0x0
0x1f0: V144 = SUB V124 V132
0x1f1: V145 = ADD V144 0x44
0x1f6: V146 = EXTCODESIZE V138
0x1f7: V147 = ISZERO V146
0x1f9: V148 = ISZERO V147
0x1fa: V149 = 0x202
0x1fd: JUMPI 0x202 V148
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x195]
Successors: []
---
0x1fe PUSH1 0x0
0x200 DUP1
0x201 REVERT
---
0x1fe: V150 = 0x0
0x201: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]

================================

Block 0x202
[0x202:0x20c]
---
Predecessors: [0x195]
Successors: [0x20d, 0x216]
---
0x202 JUMPDEST
0x203 POP
0x204 GAS
0x205 CALL
0x206 ISZERO
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x216
0x20c JUMPI
---
0x202: JUMPDEST 
0x204: V151 = GAS
0x205: V152 = CALL V151 V138 V140 V132 V145 V132 0x0
0x206: V153 = ISZERO V152
0x208: V154 = ISZERO V153
0x209: V155 = 0x216
0x20c: JUMPI 0x216 V154
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Stack pops: 7
Stack additions: [V153]
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]

================================

Block 0x20d
[0x20d:0x215]
---
Predecessors: [0x202]
Successors: []
---
0x20d RETURNDATASIZE
0x20e PUSH1 0x0
0x210 DUP1
0x211 RETURNDATACOPY
0x212 RETURNDATASIZE
0x213 PUSH1 0x0
0x215 REVERT
---
0x20d: V156 = RETURNDATASIZE
0x20e: V157 = 0x0
0x211: RETURNDATACOPY 0x0 0x0 V156
0x212: V158 = RETURNDATASIZE
0x213: V159 = 0x0
0x215: REVERT 0x0 V158
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]

================================

Block 0x216
[0x216:0x273]
---
Predecessors: [0x202]
Successors: [0x274, 0x278]
---
0x216 JUMPDEST
0x217 POP
0x218 POP
0x219 PUSH1 0x1
0x21b SLOAD
0x21c PUSH1 0x40
0x21e DUP1
0x21f MLOAD
0x220 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x241 DUP2
0x242 MSTORE
0x243 SWAP1
0x244 MLOAD
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d SWAP1
0x24e SWAP3
0x24f AND
0x250 SWAP5
0x251 POP
0x252 PUSH4 0x3ccfd60b
0x257 SWAP4
0x258 POP
0x259 PUSH1 0x4
0x25b DUP1
0x25c DUP3
0x25d ADD
0x25e SWAP4
0x25f POP
0x260 PUSH1 0x0
0x262 SWAP3
0x263 SWAP2
0x264 DUP3
0x265 SWAP1
0x266 SUB
0x267 ADD
0x268 DUP2
0x269 DUP4
0x26a DUP8
0x26b DUP1
0x26c EXTCODESIZE
0x26d ISZERO
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x216: JUMPDEST 
0x219: V160 = 0x1
0x21b: V161 = S[0x1]
0x21c: V162 = 0x40
0x21f: V163 = M[0x40]
0x220: V164 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x242: M[V163] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x244: V165 = M[0x40]
0x245: V166 = 0x1
0x247: V167 = 0xa0
0x249: V168 = 0x2
0x24b: V169 = EXP 0x2 0xa0
0x24c: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V171 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x252: V172 = 0x3ccfd60b
0x259: V173 = 0x4
0x25d: V174 = ADD V163 0x4
0x260: V175 = 0x0
0x266: V176 = SUB V163 V165
0x267: V177 = ADD V176 0x4
0x26c: V178 = EXTCODESIZE V171
0x26d: V179 = ISZERO V178
0x26f: V180 = ISZERO V179
0x270: V181 = 0x278
0x273: JUMPI 0x278 V180
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]
Stack pops: 5
Stack additions: [V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x216]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V182 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]

================================

Block 0x278
[0x278:0x282]
---
Predecessors: [0x216]
Successors: [0x283, 0x28c]
---
0x278 JUMPDEST
0x279 POP
0x27a GAS
0x27b CALL
0x27c ISZERO
0x27d DUP1
0x27e ISZERO
0x27f PUSH2 0x28c
0x282 JUMPI
---
0x278: JUMPDEST 
0x27a: V183 = GAS
0x27b: V184 = CALL V183 V171 0x0 V165 V177 V165 0x0
0x27c: V185 = ISZERO V184
0x27e: V186 = ISZERO V185
0x27f: V187 = 0x28c
0x282: JUMPI 0x28c V186
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Stack pops: 7
Stack additions: [V185]
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]

================================

Block 0x283
[0x283:0x28b]
---
Predecessors: [0x278]
Successors: []
---
0x283 RETURNDATASIZE
0x284 PUSH1 0x0
0x286 DUP1
0x287 RETURNDATACOPY
0x288 RETURNDATASIZE
0x289 PUSH1 0x0
0x28b REVERT
---
0x283: V188 = RETURNDATASIZE
0x284: V189 = 0x0
0x287: RETURNDATACOPY 0x0 0x0 V188
0x288: V190 = RETURNDATASIZE
0x289: V191 = 0x0
0x28b: REVERT 0x0 V190
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]

================================

Block 0x28c
[0x28c:0x2a1]
---
Predecessors: [0x278]
Successors: [0x2a2, 0x2a6]
---
0x28c JUMPDEST
0x28d POP
0x28e POP
0x28f PUSH7 0x58d15e17628000
0x297 ADDRESS
0x298 BALANCE
0x299 GT
0x29a SWAP2
0x29b POP
0x29c PUSH2 0x2a6
0x29f SWAP1
0x2a0 POP
0x2a1 JUMPI
---
0x28c: JUMPDEST 
0x28f: V192 = 0x58d15e17628000
0x297: V193 = ADDRESS
0x298: V194 = BALANCE V193
0x299: V195 = GT V194 0x58d15e17628000
0x29c: V196 = 0x2a6
0x2a1: JUMPI 0x2a6 V195
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x28c]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 REVERT
---
0x2a2: V197 = 0x0
0x2a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x2a6
[0x2a6:0x2dd]
---
Predecessors: [0x28c]
Successors: [0x2de, 0x2e7]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa PUSH20 0x11e52c75998fe2e7928b191bfc5b25937ca16741
0x2bf SWAP1
0x2c0 ADDRESS
0x2c1 BALANCE
0x2c2 DUP1
0x2c3 ISZERO
0x2c4 PUSH2 0x8fc
0x2c7 MUL
0x2c8 SWAP2
0x2c9 PUSH1 0x0
0x2cb DUP2
0x2cc DUP2
0x2cd DUP2
0x2ce DUP6
0x2cf DUP9
0x2d0 DUP9
0x2d1 CALL
0x2d2 SWAP4
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 ISZERO
0x2d8 DUP1
0x2d9 ISZERO
0x2da PUSH2 0x2e7
0x2dd JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V198 = 0x40
0x2a9: V199 = M[0x40]
0x2aa: V200 = 0x11e52c75998fe2e7928b191bfc5b25937ca16741
0x2c0: V201 = ADDRESS
0x2c1: V202 = BALANCE V201
0x2c3: V203 = ISZERO V202
0x2c4: V204 = 0x8fc
0x2c7: V205 = MUL 0x8fc V203
0x2c9: V206 = 0x0
0x2d1: V207 = CALL V205 0x11e52c75998fe2e7928b191bfc5b25937ca16741 V202 V199 0x0 V199 0x0
0x2d7: V208 = ISZERO V207
0x2d9: V209 = ISZERO V208
0x2da: V210 = 0x2e7
0x2dd: JUMPI 0x2e7 V209
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V11, 0xe3, V208]

================================

Block 0x2de
[0x2de:0x2e6]
---
Predecessors: [0x2a6]
Successors: []
---
0x2de RETURNDATASIZE
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 RETURNDATACOPY
0x2e3 RETURNDATASIZE
0x2e4 PUSH1 0x0
0x2e6 REVERT
---
0x2de: V211 = RETURNDATASIZE
0x2df: V212 = 0x0
0x2e2: RETURNDATACOPY 0x0 0x0 V211
0x2e3: V213 = RETURNDATASIZE
0x2e4: V214 = 0x0
0x2e6: REVERT 0x0 V213
---
Entry stack: [V11, 0xe3, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V208]

================================

Block 0x2e7
[0x2e7:0x2e9]
---
Predecessors: [0x2a6, 0x3d5, 0x3ff, 0x474, 0x55e]
Successors: [0xe3, 0x320, 0x3e5, 0x4f7, 0x55e, 0x74e]
---
0x2e7 JUMPDEST
0x2e8 POP
0x2e9 JUMP
---
0x2e7: JUMPDEST 
0x2e9: JUMP S1
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x2ea
[0x2ea:0x2f8]
---
Predecessors: [0xf1]
Successors: [0xbf]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x0
0x2ed SLOAD
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 AND
0x2f7 DUP2
0x2f8 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V215 = 0x0
0x2ed: V216 = S[0x0]
0x2ee: V217 = 0x1
0x2f0: V218 = 0xa0
0x2f2: V219 = 0x2
0x2f4: V220 = EXP 0x2 0xa0
0x2f5: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2f8: JUMP 0xbf
---
Entry stack: [V11, 0xbf]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V11, 0xbf, V222]

================================

Block 0x2f9
[0x2f9:0x308]
---
Predecessors: [0xfa]
Successors: [0x309, 0x30d]
---
0x2f9 JUMPDEST
0x2fa PUSH8 0x16345785d8a0000
0x303 CALLVALUE
0x304 EQ
0x305 PUSH2 0x30d
0x308 JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V223 = 0x16345785d8a0000
0x303: V224 = CALLVALUE
0x304: V225 = EQ V224 0x16345785d8a0000
0x305: V226 = 0x30d
0x308: JUMPI 0x30d V225
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x309
[0x309:0x30c]
---
Predecessors: [0x2f9]
Successors: []
---
0x309 PUSH1 0x0
0x30b DUP1
0x30c REVERT
---
0x309: V227 = 0x0
0x30c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x30d
[0x30d:0x31a]
---
Predecessors: [0x2f9]
Successors: [0x322]
---
0x30d JUMPDEST
0x30e PUSH2 0x320
0x311 PUSH2 0x31b
0x314 PUSH1 0x1
0x316 ADDRESS
0x317 PUSH2 0x322
0x31a JUMP
---
0x30d: JUMPDEST 
0x30e: V228 = 0x320
0x311: V229 = 0x31b
0x314: V230 = 0x1
0x316: V231 = ADDRESS
0x317: V232 = 0x322
0x31a: JUMP 0x322
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [0x320, 0x31b, 0x1, V231]
Exit stack: [V11, 0xe3, 0x320, 0x31b, 0x1, V231]

================================

Block 0x31b
[0x31b:0x31f]
---
Predecessors: [0x322]
Successors: [0x3c9]
---
0x31b JUMPDEST
0x31c PUSH2 0x3c9
0x31f JUMP
---
0x31b: JUMPDEST 
0x31c: V233 = 0x3c9
0x31f: JUMP 0x3c9
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4f7, 0x55e}, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4f7, 0x55e}, V260]

================================

Block 0x320
[0x320:0x321]
---
Predecessors: [0x2e7, 0x320, 0x7ed]
Successors: [0xe3, 0x320, 0x3e5, 0x74e]
---
0x320 JUMPDEST
0x321 JUMP
---
0x320: JUMPDEST 
0x321: JUMP S0
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x322
[0x322:0x3c8]
---
Predecessors: [0x30d, 0x49f, 0x504]
Successors: [0x31b]
---
0x322 JUMPDEST
0x323 PUSH1 0x40
0x325 DUP1
0x326 MLOAD
0x327 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x348 DUP2
0x349 MSTORE
0x34a PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x36b PUSH1 0x1
0x36d DUP3
0x36e ADD
0x36f MSTORE
0x370 PUSH13 0x1000000000000000000000000
0x37e PUSH1 0x1
0x380 PUSH1 0xa0
0x382 PUSH1 0x2
0x384 EXP
0x385 SUB
0x386 DUP5
0x387 AND
0x388 MUL
0x389 PUSH1 0x2
0x38b DUP3
0x38c ADD
0x38d MSTORE
0x38e PUSH1 0xff
0x390 DUP5
0x391 AND
0x392 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x3b3 MUL
0x3b4 PUSH1 0x16
0x3b6 DUP3
0x3b7 ADD
0x3b8 MSTORE
0x3b9 SWAP1
0x3ba MLOAD
0x3bb SWAP1
0x3bc DUP2
0x3bd SWAP1
0x3be SUB
0x3bf PUSH1 0x17
0x3c1 ADD
0x3c2 SWAP1
0x3c3 SHA3
0x3c4 SWAP3
0x3c5 SWAP2
0x3c6 POP
0x3c7 POP
0x3c8 JUMP
---
0x322: JUMPDEST 
0x323: V234 = 0x40
0x326: V235 = M[0x40]
0x327: V236 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x349: M[V235] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x34a: V237 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x36b: V238 = 0x1
0x36e: V239 = ADD V235 0x1
0x36f: M[V239] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x370: V240 = 0x1000000000000000000000000
0x37e: V241 = 0x1
0x380: V242 = 0xa0
0x382: V243 = 0x2
0x384: V244 = EXP 0x2 0xa0
0x385: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x387: V246 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x388: V247 = MUL V246 0x1000000000000000000000000
0x389: V248 = 0x2
0x38c: V249 = ADD V235 0x2
0x38d: M[V249] = V247
0x38e: V250 = 0xff
0x391: V251 = AND {0x1, 0x2} 0xff
0x392: V252 = 0x100000000000000000000000000000000000000000000000000000000000000
0x3b3: V253 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V251
0x3b4: V254 = 0x16
0x3b7: V255 = ADD V235 0x16
0x3b8: M[V255] = V253
0x3ba: V256 = M[0x40]
0x3be: V257 = SUB V235 V256
0x3bf: V258 = 0x17
0x3c1: V259 = ADD 0x17 V257
0x3c3: V260 = SHA3 V256 V259
0x3c8: JUMP 0x31b
---
Entry stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x320, 0x4f7, 0x55e}, 0x31b, {0x1, 0x2}, S0]
Stack pops: 3
Stack additions: [V260]
Exit stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x320, 0x4f7, 0x55e}, V260]

================================

Block 0x3c9
[0x3c9:0x3d4]
---
Predecessors: [0x31b]
Successors: [0x3d5, 0x3d9]
---
0x3c9 JUMPDEST
0x3ca PUSH1 0x5
0x3cc SLOAD
0x3cd PUSH1 0xff
0x3cf AND
0x3d0 ISZERO
0x3d1 PUSH2 0x3d9
0x3d4 JUMPI
---
0x3c9: JUMPDEST 
0x3ca: V261 = 0x5
0x3cc: V262 = S[0x5]
0x3cd: V263 = 0xff
0x3cf: V264 = AND 0xff V262
0x3d0: V265 = ISZERO V264
0x3d1: V266 = 0x3d9
0x3d4: JUMPI 0x3d9 V265
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4f7, 0x55e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4f7, 0x55e}, S0]

================================

Block 0x3d5
[0x3d5:0x3d8]
---
Predecessors: [0x3c9]
Successors: [0x2e7]
---
0x3d5 PUSH2 0x2e7
0x3d8 JUMP
---
0x3d5: V267 = 0x2e7
0x3d8: JUMP 0x2e7
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4f7, 0x55e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4f7, 0x55e}, S0]

================================

Block 0x3d9
[0x3d9:0x3e4]
---
Predecessors: [0x3c9]
Successors: [0x5d1]
---
0x3d9 JUMPDEST
0x3da PUSH2 0x3e5
0x3dd DUP2
0x3de PUSH1 0x2
0x3e0 SLOAD
0x3e1 PUSH2 0x5d1
0x3e4 JUMP
---
0x3d9: JUMPDEST 
0x3da: V268 = 0x3e5
0x3de: V269 = 0x2
0x3e0: V270 = S[0x2]
0x3e1: V271 = 0x5d1
0x3e4: JUMP 0x5d1
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4f7, 0x55e}, S0]
Stack pops: 1
Stack additions: [S0, 0x3e5, S0, V270]
Exit stack: [S11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4f7, 0x55e}, S0, 0x3e5, S0, V270]

================================

Block 0x3e5
[0x3e5:0x3ea]
---
Predecessors: [0x2e7, 0x320, 0x5cd, 0x7ed]
Successors: [0x3eb, 0x404]
---
0x3e5 JUMPDEST
0x3e6 ISZERO
0x3e7 PUSH2 0x404
0x3ea JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V272 = ISZERO {0x0, 0x1}
0x3e7: V273 = 0x404
0x3ea: JUMPI 0x404 V272
---
Entry stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x3eb
[0x3eb:0x3fe]
---
Predecessors: [0x3e5]
Successors: [0x7f4]
---
0x3eb PUSH1 0x5
0x3ed DUP1
0x3ee SLOAD
0x3ef PUSH1 0xff
0x3f1 NOT
0x3f2 AND
0x3f3 PUSH1 0x1
0x3f5 OR
0x3f6 SWAP1
0x3f7 SSTORE
0x3f8 PUSH2 0x3ff
0x3fb PUSH2 0x7f4
0x3fe JUMP
---
0x3eb: V274 = 0x5
0x3ee: V275 = S[0x5]
0x3ef: V276 = 0xff
0x3f1: V277 = NOT 0xff
0x3f2: V278 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V275
0x3f3: V279 = 0x1
0x3f5: V280 = OR 0x1 V278
0x3f7: S[0x5] = V280
0x3f8: V281 = 0x3ff
0x3fb: V282 = 0x7f4
0x3fe: JUMP 0x7f4
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3ff]
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3ff]

================================

Block 0x3ff
[0x3ff:0x403]
---
Predecessors: [0x89e]
Successors: [0x2e7]
---
0x3ff JUMPDEST
0x400 PUSH2 0x2e7
0x403 JUMP
---
0x3ff: JUMPDEST 
0x400: V283 = 0x2e7
0x403: JUMP 0x2e7
---
Entry stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x404
[0x404:0x42b]
---
Predecessors: [0x3e5]
Successors: [0x42c, 0x492]
---
0x404 JUMPDEST
0x405 PUSH1 0x3
0x407 DUP1
0x408 SLOAD
0x409 PUSH1 0xff
0x40b NOT
0x40c DUP2
0x40d AND
0x40e PUSH1 0x1
0x410 PUSH1 0xff
0x412 SWAP3
0x413 DUP4
0x414 AND
0x415 ADD
0x416 DUP3
0x417 AND
0x418 OR
0x419 SWAP2
0x41a DUP3
0x41b SWAP1
0x41c SSTORE
0x41d PUSH2 0x100
0x420 DUP3
0x421 DIV
0x422 DUP2
0x423 AND
0x424 SWAP2
0x425 AND
0x426 EQ
0x427 ISZERO
0x428 PUSH2 0x492
0x42b JUMPI
---
0x404: JUMPDEST 
0x405: V284 = 0x3
0x408: V285 = S[0x3]
0x409: V286 = 0xff
0x40b: V287 = NOT 0xff
0x40d: V288 = AND V285 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x40e: V289 = 0x1
0x410: V290 = 0xff
0x414: V291 = AND 0xff V285
0x415: V292 = ADD V291 0x1
0x417: V293 = AND 0xff V292
0x418: V294 = OR V293 V288
0x41c: S[0x3] = V294
0x41d: V295 = 0x100
0x421: V296 = DIV V294 0x100
0x423: V297 = AND 0xff V296
0x425: V298 = AND V294 0xff
0x426: V299 = EQ V298 V297
0x427: V300 = ISZERO V299
0x428: V301 = 0x492
0x42b: JUMPI 0x492 V300
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x42c
[0x42c:0x43b]
---
Predecessors: [0x404]
Successors: [0x43c, 0x43d]
---
0x42c PUSH1 0x4
0x42e DUP1
0x42f SLOAD
0x430 PUSH1 0x0
0x432 NOT
0x433 DUP2
0x434 ADD
0x435 SWAP1
0x436 DUP2
0x437 LT
0x438 PUSH2 0x43d
0x43b JUMPI
---
0x42c: V302 = 0x4
0x42f: V303 = S[0x4]
0x430: V304 = 0x0
0x432: V305 = NOT 0x0
0x434: V306 = ADD V303 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x437: V307 = LT V306 V303
0x438: V308 = 0x43d
0x43b: JUMPI 0x43d V307
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4, V306]
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4, V306]

================================

Block 0x43c
[0x43c:0x43c]
---
Predecessors: [0x42c]
Successors: []
---
0x43c INVALID
---
0x43c: INVALID 
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V306]

================================

Block 0x43d
[0x43d:0x473]
---
Predecessors: [0x42c]
Successors: [0x92b]
---
0x43d JUMPDEST
0x43e SWAP1
0x43f PUSH1 0x0
0x441 MSTORE
0x442 PUSH1 0x20
0x444 PUSH1 0x0
0x446 SHA3
0x447 SWAP1
0x448 PUSH1 0x20
0x44a SWAP2
0x44b DUP3
0x44c DUP3
0x44d DIV
0x44e ADD
0x44f SWAP2
0x450 SWAP1
0x451 MOD
0x452 PUSH2 0x100
0x455 EXP
0x456 DUP2
0x457 SLOAD
0x458 SWAP1
0x459 PUSH1 0xff
0x45b MUL
0x45c NOT
0x45d AND
0x45e SWAP1
0x45f SSTORE
0x460 PUSH1 0x4
0x462 DUP1
0x463 SLOAD
0x464 DUP1
0x465 SWAP2
0x466 SWAP1
0x467 PUSH1 0x1
0x469 SWAP1
0x46a SUB
0x46b PUSH2 0x474
0x46e SWAP2
0x46f SWAP1
0x470 PUSH2 0x92b
0x473 JUMP
---
0x43d: JUMPDEST 
0x43f: V309 = 0x0
0x441: M[0x0] = 0x4
0x442: V310 = 0x20
0x444: V311 = 0x0
0x446: V312 = SHA3 0x0 0x20
0x448: V313 = 0x20
0x44d: V314 = DIV V306 0x20
0x44e: V315 = ADD V314 V312
0x451: V316 = MOD V306 0x20
0x452: V317 = 0x100
0x455: V318 = EXP 0x100 V316
0x457: V319 = S[V315]
0x459: V320 = 0xff
0x45b: V321 = MUL 0xff V318
0x45c: V322 = NOT V321
0x45d: V323 = AND V322 V319
0x45f: S[V315] = V323
0x460: V324 = 0x4
0x463: V325 = S[0x4]
0x467: V326 = 0x1
0x46a: V327 = SUB V325 0x1
0x46b: V328 = 0x474
0x470: V329 = 0x92b
0x473: JUMP 0x92b
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V306]
Stack pops: 2
Stack additions: [V325, 0x474, 0x4, V327]
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V325, 0x474, 0x4, V327]

================================

Block 0x474
[0x474:0x491]
---
Predecessors: [0x89e]
Successors: [0x2e7]
---
0x474 JUMPDEST
0x475 POP
0x476 PUSH1 0x3
0x478 DUP1
0x479 SLOAD
0x47a PUSH1 0xff
0x47c NOT
0x47d DUP2
0x47e AND
0x47f PUSH1 0xff
0x481 SWAP2
0x482 DUP3
0x483 AND
0x484 PUSH1 0x0
0x486 NOT
0x487 ADD
0x488 SWAP1
0x489 SWAP2
0x48a AND
0x48b OR
0x48c SWAP1
0x48d SSTORE
0x48e PUSH2 0x2e7
0x491 JUMP
---
0x474: JUMPDEST 
0x476: V330 = 0x3
0x479: V331 = S[0x3]
0x47a: V332 = 0xff
0x47c: V333 = NOT 0xff
0x47e: V334 = AND V331 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x47f: V335 = 0xff
0x483: V336 = AND 0xff V331
0x484: V337 = 0x0
0x486: V338 = NOT 0x0
0x487: V339 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V336
0x48a: V340 = AND 0xff V339
0x48b: V341 = OR V340 V334
0x48d: S[0x3] = V341
0x48e: V342 = 0x2e7
0x491: JUMP 0x2e7
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x492
[0x492:0x49e]
---
Predecessors: [0x404]
Successors: [0x49f, 0x4f7]
---
0x492 JUMPDEST
0x493 PUSH1 0x5
0x495 SLOAD
0x496 PUSH1 0xff
0x498 AND
0x499 ISZERO
0x49a ISZERO
0x49b PUSH2 0x4f7
0x49e JUMPI
---
0x492: JUMPDEST 
0x493: V343 = 0x5
0x495: V344 = S[0x5]
0x496: V345 = 0xff
0x498: V346 = AND 0xff V344
0x499: V347 = ISZERO V346
0x49a: V348 = ISZERO V347
0x49b: V349 = 0x4f7
0x49e: JUMPI 0x4f7 V348
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x49f
[0x49f:0x4f6]
---
Predecessors: [0x492]
Successors: [0x322]
---
0x49f PUSH1 0x4
0x4a1 DUP1
0x4a2 SLOAD
0x4a3 PUSH1 0x1
0x4a5 DUP1
0x4a6 DUP3
0x4a7 ADD
0x4a8 DUP4
0x4a9 SSTORE
0x4aa PUSH1 0x0
0x4ac SWAP3
0x4ad SWAP1
0x4ae SWAP3
0x4af MSTORE
0x4b0 PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x4d1 PUSH1 0x20
0x4d3 DUP3
0x4d4 DIV
0x4d5 ADD
0x4d6 DUP1
0x4d7 SLOAD
0x4d8 PUSH1 0x1f
0x4da SWAP1
0x4db SWAP3
0x4dc AND
0x4dd PUSH2 0x100
0x4e0 EXP
0x4e1 PUSH1 0xff
0x4e3 MUL
0x4e4 NOT
0x4e5 SWAP1
0x4e6 SWAP2
0x4e7 AND
0x4e8 SWAP1
0x4e9 SSTORE
0x4ea PUSH2 0x4f7
0x4ed SWAP1
0x4ee PUSH2 0x31b
0x4f1 SWAP1
0x4f2 DUP4
0x4f3 PUSH2 0x322
0x4f6 JUMP
---
0x49f: V350 = 0x4
0x4a2: V351 = S[0x4]
0x4a3: V352 = 0x1
0x4a7: V353 = ADD V351 0x1
0x4a9: S[0x4] = V353
0x4aa: V354 = 0x0
0x4af: M[0x0] = 0x4
0x4b0: V355 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x4d1: V356 = 0x20
0x4d4: V357 = DIV V351 0x20
0x4d5: V358 = ADD V357 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x4d7: V359 = S[V358]
0x4d8: V360 = 0x1f
0x4dc: V361 = AND V351 0x1f
0x4dd: V362 = 0x100
0x4e0: V363 = EXP 0x100 V361
0x4e1: V364 = 0xff
0x4e3: V365 = MUL 0xff V363
0x4e4: V366 = NOT V365
0x4e7: V367 = AND V359 V366
0x4e9: S[V358] = V367
0x4ea: V368 = 0x4f7
0x4ee: V369 = 0x31b
0x4f3: V370 = 0x322
0x4f6: JUMP 0x322
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x4f7, 0x31b, 0x1, S0]
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4f7, 0x31b, 0x1, S0]

================================

Block 0x4f7
[0x4f7:0x503]
---
Predecessors: [0x2e7, 0x492]
Successors: [0x504, 0x55e]
---
0x4f7 JUMPDEST
0x4f8 PUSH1 0x5
0x4fa SLOAD
0x4fb PUSH1 0xff
0x4fd AND
0x4fe ISZERO
0x4ff ISZERO
0x500 PUSH2 0x55e
0x503 JUMPI
---
0x4f7: JUMPDEST 
0x4f8: V371 = 0x5
0x4fa: V372 = S[0x5]
0x4fb: V373 = 0xff
0x4fd: V374 = AND 0xff V372
0x4fe: V375 = ISZERO V374
0x4ff: V376 = ISZERO V375
0x500: V377 = 0x55e
0x503: JUMPI 0x55e V376
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x504
[0x504:0x55d]
---
Predecessors: [0x4f7]
Successors: [0x322]
---
0x504 PUSH1 0x4
0x506 DUP1
0x507 SLOAD
0x508 PUSH1 0x1
0x50a DUP2
0x50b ADD
0x50c DUP3
0x50d SSTORE
0x50e PUSH1 0x0
0x510 SWAP2
0x511 SWAP1
0x512 SWAP2
0x513 MSTORE
0x514 PUSH1 0x20
0x516 DUP2
0x517 DIV
0x518 PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x539 ADD
0x53a DUP1
0x53b SLOAD
0x53c PUSH1 0xff
0x53e PUSH1 0x1f
0x540 SWAP1
0x541 SWAP4
0x542 AND
0x543 PUSH2 0x100
0x546 EXP
0x547 SWAP3
0x548 DUP4
0x549 MUL
0x54a NOT
0x54b AND
0x54c SWAP1
0x54d SWAP2
0x54e OR
0x54f SWAP1
0x550 SSTORE
0x551 PUSH2 0x55e
0x554 PUSH2 0x31b
0x557 PUSH1 0x2
0x559 DUP4
0x55a PUSH2 0x322
0x55d JUMP
---
0x504: V378 = 0x4
0x507: V379 = S[0x4]
0x508: V380 = 0x1
0x50b: V381 = ADD V379 0x1
0x50d: S[0x4] = V381
0x50e: V382 = 0x0
0x513: M[0x0] = 0x4
0x514: V383 = 0x20
0x517: V384 = DIV V379 0x20
0x518: V385 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x539: V386 = ADD 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b V384
0x53b: V387 = S[V386]
0x53c: V388 = 0xff
0x53e: V389 = 0x1f
0x542: V390 = AND V379 0x1f
0x543: V391 = 0x100
0x546: V392 = EXP 0x100 V390
0x549: V393 = MUL V392 0xff
0x54a: V394 = NOT V393
0x54b: V395 = AND V394 V387
0x54e: V396 = OR V392 V395
0x550: S[V386] = V396
0x551: V397 = 0x55e
0x554: V398 = 0x31b
0x557: V399 = 0x2
0x55a: V400 = 0x322
0x55d: JUMP 0x322
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x55e, 0x31b, 0x2, S0]
Exit stack: [S9, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0, 0x55e, 0x31b, 0x2, S0]

================================

Block 0x55e
[0x55e:0x56a]
---
Predecessors: [0x2e7, 0x4f7]
Successors: [0x2e7, 0x56b]
---
0x55e JUMPDEST
0x55f PUSH1 0x5
0x561 SLOAD
0x562 PUSH1 0xff
0x564 AND
0x565 ISZERO
0x566 ISZERO
0x567 PUSH2 0x2e7
0x56a JUMPI
---
0x55e: JUMPDEST 
0x55f: V401 = 0x5
0x561: V402 = S[0x5]
0x562: V403 = 0xff
0x564: V404 = AND 0xff V402
0x565: V405 = ISZERO V404
0x566: V406 = ISZERO V405
0x567: V407 = 0x2e7
0x56a: JUMPI 0x2e7 V406
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x56b
[0x56b:0x594]
---
Predecessors: [0x55e]
Successors: [0x595, 0x596]
---
0x56b PUSH1 0x3
0x56d DUP1
0x56e SLOAD
0x56f PUSH1 0xff
0x571 NOT
0x572 DUP2
0x573 AND
0x574 PUSH1 0xff
0x576 SWAP2
0x577 DUP3
0x578 AND
0x579 PUSH1 0x0
0x57b NOT
0x57c SWAP1
0x57d DUP2
0x57e ADD
0x57f SWAP1
0x580 SWAP3
0x581 AND
0x582 OR
0x583 SWAP1
0x584 SWAP2
0x585 SSTORE
0x586 PUSH1 0x4
0x588 DUP1
0x589 SLOAD
0x58a SWAP1
0x58b SWAP2
0x58c DUP2
0x58d ADD
0x58e SWAP1
0x58f DUP2
0x590 LT
0x591 PUSH2 0x596
0x594 JUMPI
---
0x56b: V408 = 0x3
0x56e: V409 = S[0x3]
0x56f: V410 = 0xff
0x571: V411 = NOT 0xff
0x573: V412 = AND V409 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x574: V413 = 0xff
0x578: V414 = AND 0xff V409
0x579: V415 = 0x0
0x57b: V416 = NOT 0x0
0x57e: V417 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V414
0x581: V418 = AND 0xff V417
0x582: V419 = OR V418 V412
0x585: S[0x3] = V419
0x586: V420 = 0x4
0x589: V421 = S[0x4]
0x58d: V422 = ADD V421 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x590: V423 = LT V422 V421
0x591: V424 = 0x596
0x594: JUMPI 0x596 V423
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4, V422]
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4, V422]

================================

Block 0x595
[0x595:0x595]
---
Predecessors: [0x56b]
Successors: []
---
0x595 INVALID
---
0x595: INVALID 
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V422]

================================

Block 0x596
[0x596:0x5cc]
---
Predecessors: [0x56b]
Successors: [0x92b]
---
0x596 JUMPDEST
0x597 SWAP1
0x598 PUSH1 0x0
0x59a MSTORE
0x59b PUSH1 0x20
0x59d PUSH1 0x0
0x59f SHA3
0x5a0 SWAP1
0x5a1 PUSH1 0x20
0x5a3 SWAP2
0x5a4 DUP3
0x5a5 DUP3
0x5a6 DIV
0x5a7 ADD
0x5a8 SWAP2
0x5a9 SWAP1
0x5aa MOD
0x5ab PUSH2 0x100
0x5ae EXP
0x5af DUP2
0x5b0 SLOAD
0x5b1 SWAP1
0x5b2 PUSH1 0xff
0x5b4 MUL
0x5b5 NOT
0x5b6 AND
0x5b7 SWAP1
0x5b8 SSTORE
0x5b9 PUSH1 0x4
0x5bb DUP1
0x5bc SLOAD
0x5bd DUP1
0x5be SWAP2
0x5bf SWAP1
0x5c0 PUSH1 0x1
0x5c2 SWAP1
0x5c3 SUB
0x5c4 PUSH2 0x5cd
0x5c7 SWAP2
0x5c8 SWAP1
0x5c9 PUSH2 0x92b
0x5cc JUMP
---
0x596: JUMPDEST 
0x598: V425 = 0x0
0x59a: M[0x0] = 0x4
0x59b: V426 = 0x20
0x59d: V427 = 0x0
0x59f: V428 = SHA3 0x0 0x20
0x5a1: V429 = 0x20
0x5a6: V430 = DIV V422 0x20
0x5a7: V431 = ADD V430 V428
0x5aa: V432 = MOD V422 0x20
0x5ab: V433 = 0x100
0x5ae: V434 = EXP 0x100 V432
0x5b0: V435 = S[V431]
0x5b2: V436 = 0xff
0x5b4: V437 = MUL 0xff V434
0x5b5: V438 = NOT V437
0x5b6: V439 = AND V438 V435
0x5b8: S[V431] = V439
0x5b9: V440 = 0x4
0x5bc: V441 = S[0x4]
0x5c0: V442 = 0x1
0x5c3: V443 = SUB V441 0x1
0x5c4: V444 = 0x5cd
0x5c9: V445 = 0x92b
0x5cc: JUMP 0x92b
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V422]
Stack pops: 2
Stack additions: [V441, 0x5cd, 0x4, V443]
Exit stack: [S11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, V441, 0x5cd, 0x4, V443]

================================

Block 0x5cd
[0x5cd:0x5d0]
---
Predecessors: [0x89e]
Successors: [0x3e5]
---
0x5cd JUMPDEST
0x5ce POP
0x5cf POP
0x5d0 JUMP
---
0x5cd: JUMPDEST 
0x5d0: JUMP S2
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x5d1
[0x5d1:0x62c]
---
Predecessors: [0x3d9]
Successors: [0x62d]
---
0x5d1 JUMPDEST
0x5d2 PUSH1 0x0
0x5d4 DUP1
0x5d5 PUSH2 0x74e
0x5d8 NUMBER
0x5d9 PUSH2 0x742
0x5dc TIMESTAMP
0x5dd DUP8
0x5de PUSH1 0x40
0x5e0 MLOAD
0x5e1 PUSH1 0x20
0x5e3 ADD
0x5e4 DUP1
0x5e5 DUP3
0x5e6 PUSH1 0x1
0x5e8 PUSH1 0xa0
0x5ea PUSH1 0x2
0x5ec EXP
0x5ed SUB
0x5ee AND
0x5ef PUSH1 0x1
0x5f1 PUSH1 0xa0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 SUB
0x5f7 AND
0x5f8 PUSH13 0x1000000000000000000000000
0x606 MUL
0x607 DUP2
0x608 MSTORE
0x609 PUSH1 0x14
0x60b ADD
0x60c SWAP2
0x60d POP
0x60e POP
0x60f PUSH1 0x40
0x611 MLOAD
0x612 PUSH1 0x20
0x614 DUP2
0x615 DUP4
0x616 SUB
0x617 SUB
0x618 DUP2
0x619 MSTORE
0x61a SWAP1
0x61b PUSH1 0x40
0x61d MSTORE
0x61e PUSH1 0x40
0x620 MLOAD
0x621 DUP1
0x622 DUP3
0x623 DUP1
0x624 MLOAD
0x625 SWAP1
0x626 PUSH1 0x20
0x628 ADD
0x629 SWAP1
0x62a DUP1
0x62b DUP4
0x62c DUP4
---
0x5d1: JUMPDEST 
0x5d2: V446 = 0x0
0x5d5: V447 = 0x74e
0x5d8: V448 = NUMBER
0x5d9: V449 = 0x742
0x5dc: V450 = TIMESTAMP
0x5de: V451 = 0x40
0x5e0: V452 = M[0x40]
0x5e1: V453 = 0x20
0x5e3: V454 = ADD 0x20 V452
0x5e6: V455 = 0x1
0x5e8: V456 = 0xa0
0x5ea: V457 = 0x2
0x5ec: V458 = EXP 0x2 0xa0
0x5ed: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ee: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x5ef: V461 = 0x1
0x5f1: V462 = 0xa0
0x5f3: V463 = 0x2
0x5f5: V464 = EXP 0x2 0xa0
0x5f6: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f7: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x5f8: V467 = 0x1000000000000000000000000
0x606: V468 = MUL 0x1000000000000000000000000 V466
0x608: M[V454] = V468
0x609: V469 = 0x14
0x60b: V470 = ADD 0x14 V454
0x60f: V471 = 0x40
0x611: V472 = M[0x40]
0x612: V473 = 0x20
0x616: V474 = SUB V470 V472
0x617: V475 = SUB V474 0x20
0x619: M[V472] = V475
0x61b: V476 = 0x40
0x61d: M[0x40] = V470
0x61e: V477 = 0x40
0x620: V478 = M[0x40]
0x624: V479 = M[V472]
0x626: V480 = 0x20
0x628: V481 = ADD 0x20 V472
---
Entry stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, {0x320, 0x4f7, 0x55e}, S3, 0x3e5, S1, V270]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x74e, V448, 0x742, V450, V472, V478, V478, V481, V479, V479, V478, V481]
Exit stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, {0x320, 0x4f7, 0x55e}, S3, 0x3e5, S1, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V472, V478, V478, V481, V479, V479, V478, V481]

================================

Block 0x62d
[0x62d:0x635]
---
Predecessors: [0x5d1, 0x636]
Successors: [0x636, 0x64c]
---
0x62d JUMPDEST
0x62e PUSH1 0x20
0x630 DUP4
0x631 LT
0x632 PUSH2 0x64c
0x635 JUMPI
---
0x62d: JUMPDEST 
0x62e: V482 = 0x20
0x631: V483 = LT S2 0x20
0x632: V484 = 0x64c
0x635: JUMPI 0x64c V483
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4f7, 0x55e}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V472, V478, V478, V481, V479, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4f7, 0x55e}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V472, V478, V478, V481, V479, S2, S1, S0]

================================

Block 0x636
[0x636:0x64b]
---
Predecessors: [0x62d]
Successors: [0x62d]
---
0x636 DUP1
0x637 MLOAD
0x638 DUP3
0x639 MSTORE
0x63a PUSH1 0x1f
0x63c NOT
0x63d SWAP1
0x63e SWAP3
0x63f ADD
0x640 SWAP2
0x641 PUSH1 0x20
0x643 SWAP2
0x644 DUP3
0x645 ADD
0x646 SWAP2
0x647 ADD
0x648 PUSH2 0x62d
0x64b JUMP
---
0x637: V485 = M[S0]
0x639: M[S1] = V485
0x63a: V486 = 0x1f
0x63c: V487 = NOT 0x1f
0x63f: V488 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x641: V489 = 0x20
0x645: V490 = ADD 0x20 S1
0x647: V491 = ADD 0x20 S0
0x648: V492 = 0x62d
0x64b: JUMP 0x62d
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4f7, 0x55e}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V472, V478, V478, V481, V479, S2, S1, S0]
Stack pops: 3
Stack additions: [V488, V490, V491]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4f7, 0x55e}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V472, V478, V478, V481, V479, V488, V490, V491]

================================

Block 0x64c
[0x64c:0x680]
---
Predecessors: [0x62d]
Successors: [0x681, 0x682]
---
0x64c JUMPDEST
0x64d MLOAD
0x64e DUP2
0x64f MLOAD
0x650 PUSH1 0x20
0x652 SWAP4
0x653 SWAP1
0x654 SWAP4
0x655 SUB
0x656 PUSH2 0x100
0x659 EXP
0x65a PUSH1 0x0
0x65c NOT
0x65d ADD
0x65e DUP1
0x65f NOT
0x660 SWAP1
0x661 SWAP2
0x662 AND
0x663 SWAP3
0x664 AND
0x665 SWAP2
0x666 SWAP1
0x667 SWAP2
0x668 OR
0x669 SWAP1
0x66a MSTORE
0x66b PUSH1 0x40
0x66d MLOAD
0x66e SWAP3
0x66f ADD
0x670 DUP3
0x671 SWAP1
0x672 SUB
0x673 SWAP1
0x674 SWAP2
0x675 SHA3
0x676 SWAP3
0x677 POP
0x678 POP
0x679 POP
0x67a DUP2
0x67b ISZERO
0x67c ISZERO
0x67d PUSH2 0x682
0x680 JUMPI
---
0x64c: JUMPDEST 
0x64d: V493 = M[S0]
0x64f: V494 = M[S1]
0x650: V495 = 0x20
0x655: V496 = SUB 0x20 S2
0x656: V497 = 0x100
0x659: V498 = EXP 0x100 V496
0x65a: V499 = 0x0
0x65c: V500 = NOT 0x0
0x65d: V501 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V498
0x65f: V502 = NOT V501
0x662: V503 = AND V493 V502
0x664: V504 = AND V494 V501
0x668: V505 = OR V504 V503
0x66a: M[S1] = V505
0x66b: V506 = 0x40
0x66d: V507 = M[0x40]
0x66f: V508 = ADD V478 V479
0x672: V509 = SUB V508 V507
0x675: V510 = SHA3 V507 V509
0x67b: V511 = ISZERO V450
0x67c: V512 = ISZERO V511
0x67d: V513 = 0x682
0x680: JUMPI 0x682 V512
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4f7, 0x55e}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V472, V478, V478, V481, V479, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V510]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4f7, 0x55e}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V510]

================================

Block 0x681
[0x681:0x681]
---
Predecessors: [0x64c]
Successors: []
---
0x681 INVALID
---
0x681: INVALID 
---
Entry stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x320, 0x4f7, 0x55e}, S10, 0x3e5, S8, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V510]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x320, 0x4f7, 0x55e}, S10, 0x3e5, S8, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V510]

================================

Block 0x682
[0x682:0x6db]
---
Predecessors: [0x64c]
Successors: [0x6dc]
---
0x682 JUMPDEST
0x683 DIV
0x684 PUSH2 0x742
0x687 GASLIMIT
0x688 PUSH2 0x742
0x68b TIMESTAMP
0x68c COINBASE
0x68d PUSH1 0x40
0x68f MLOAD
0x690 PUSH1 0x20
0x692 ADD
0x693 DUP1
0x694 DUP3
0x695 PUSH1 0x1
0x697 PUSH1 0xa0
0x699 PUSH1 0x2
0x69b EXP
0x69c SUB
0x69d AND
0x69e PUSH1 0x1
0x6a0 PUSH1 0xa0
0x6a2 PUSH1 0x2
0x6a4 EXP
0x6a5 SUB
0x6a6 AND
0x6a7 PUSH13 0x1000000000000000000000000
0x6b5 MUL
0x6b6 DUP2
0x6b7 MSTORE
0x6b8 PUSH1 0x14
0x6ba ADD
0x6bb SWAP2
0x6bc POP
0x6bd POP
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 PUSH1 0x20
0x6c3 DUP2
0x6c4 DUP4
0x6c5 SUB
0x6c6 SUB
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 SWAP1
0x6ca PUSH1 0x40
0x6cc MSTORE
0x6cd PUSH1 0x40
0x6cf MLOAD
0x6d0 DUP1
0x6d1 DUP3
0x6d2 DUP1
0x6d3 MLOAD
0x6d4 SWAP1
0x6d5 PUSH1 0x20
0x6d7 ADD
0x6d8 SWAP1
0x6d9 DUP1
0x6da DUP4
0x6db DUP4
---
0x682: JUMPDEST 
0x683: V514 = DIV V510 V450
0x684: V515 = 0x742
0x687: V516 = GASLIMIT
0x688: V517 = 0x742
0x68b: V518 = TIMESTAMP
0x68c: V519 = COINBASE
0x68d: V520 = 0x40
0x68f: V521 = M[0x40]
0x690: V522 = 0x20
0x692: V523 = ADD 0x20 V521
0x695: V524 = 0x1
0x697: V525 = 0xa0
0x699: V526 = 0x2
0x69b: V527 = EXP 0x2 0xa0
0x69c: V528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69d: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x69e: V530 = 0x1
0x6a0: V531 = 0xa0
0x6a2: V532 = 0x2
0x6a4: V533 = EXP 0x2 0xa0
0x6a5: V534 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a6: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x6a7: V536 = 0x1000000000000000000000000
0x6b5: V537 = MUL 0x1000000000000000000000000 V535
0x6b7: M[V523] = V537
0x6b8: V538 = 0x14
0x6ba: V539 = ADD 0x14 V523
0x6be: V540 = 0x40
0x6c0: V541 = M[0x40]
0x6c1: V542 = 0x20
0x6c5: V543 = SUB V539 V541
0x6c6: V544 = SUB V543 0x20
0x6c8: M[V541] = V544
0x6ca: V545 = 0x40
0x6cc: M[0x40] = V539
0x6cd: V546 = 0x40
0x6cf: V547 = M[0x40]
0x6d3: V548 = M[V541]
0x6d5: V549 = 0x20
0x6d7: V550 = ADD 0x20 V541
---
Entry stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x320, 0x4f7, 0x55e}, S10, 0x3e5, S8, V270, 0x0, 0x0, 0x74e, V448, 0x742, V450, V510]
Stack pops: 2
Stack additions: [V514, 0x742, V516, 0x742, V518, V541, V547, V547, V550, V548, V548, V547, V550]
Exit stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x320, 0x4f7, 0x55e}, S10, 0x3e5, S8, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V541, V547, V547, V550, V548, V548, V547, V550]

================================

Block 0x6dc
[0x6dc:0x6e4]
---
Predecessors: [0x682, 0x6e5]
Successors: [0x6e5, 0x6fb]
---
0x6dc JUMPDEST
0x6dd PUSH1 0x20
0x6df DUP4
0x6e0 LT
0x6e1 PUSH2 0x6fb
0x6e4 JUMPI
---
0x6dc: JUMPDEST 
0x6dd: V551 = 0x20
0x6e0: V552 = LT S2 0x20
0x6e1: V553 = 0x6fb
0x6e4: JUMPI 0x6fb V552
---
Entry stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4f7, 0x55e}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V541, V547, V547, V550, V548, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4f7, 0x55e}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V541, V547, V547, V550, V548, S2, S1, S0]

================================

Block 0x6e5
[0x6e5:0x6fa]
---
Predecessors: [0x6dc]
Successors: [0x6dc]
---
0x6e5 DUP1
0x6e6 MLOAD
0x6e7 DUP3
0x6e8 MSTORE
0x6e9 PUSH1 0x1f
0x6eb NOT
0x6ec SWAP1
0x6ed SWAP3
0x6ee ADD
0x6ef SWAP2
0x6f0 PUSH1 0x20
0x6f2 SWAP2
0x6f3 DUP3
0x6f4 ADD
0x6f5 SWAP2
0x6f6 ADD
0x6f7 PUSH2 0x6dc
0x6fa JUMP
---
0x6e6: V554 = M[S0]
0x6e8: M[S1] = V554
0x6e9: V555 = 0x1f
0x6eb: V556 = NOT 0x1f
0x6ee: V557 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x6f0: V558 = 0x20
0x6f4: V559 = ADD 0x20 S1
0x6f6: V560 = ADD 0x20 S0
0x6f7: V561 = 0x6dc
0x6fa: JUMP 0x6dc
---
Entry stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4f7, 0x55e}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V541, V547, V547, V550, V548, S2, S1, S0]
Stack pops: 3
Stack additions: [V557, V559, V560]
Exit stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4f7, 0x55e}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V541, V547, V547, V550, V548, V557, V559, V560]

================================

Block 0x6fb
[0x6fb:0x72f]
---
Predecessors: [0x6dc]
Successors: [0x730, 0x731]
---
0x6fb JUMPDEST
0x6fc MLOAD
0x6fd DUP2
0x6fe MLOAD
0x6ff PUSH1 0x20
0x701 SWAP4
0x702 SWAP1
0x703 SWAP4
0x704 SUB
0x705 PUSH2 0x100
0x708 EXP
0x709 PUSH1 0x0
0x70b NOT
0x70c ADD
0x70d DUP1
0x70e NOT
0x70f SWAP1
0x710 SWAP2
0x711 AND
0x712 SWAP3
0x713 AND
0x714 SWAP2
0x715 SWAP1
0x716 SWAP2
0x717 OR
0x718 SWAP1
0x719 MSTORE
0x71a PUSH1 0x40
0x71c MLOAD
0x71d SWAP3
0x71e ADD
0x71f DUP3
0x720 SWAP1
0x721 SUB
0x722 SWAP1
0x723 SWAP2
0x724 SHA3
0x725 SWAP3
0x726 POP
0x727 POP
0x728 POP
0x729 DUP2
0x72a ISZERO
0x72b ISZERO
0x72c PUSH2 0x731
0x72f JUMPI
---
0x6fb: JUMPDEST 
0x6fc: V562 = M[S0]
0x6fe: V563 = M[S1]
0x6ff: V564 = 0x20
0x704: V565 = SUB 0x20 S2
0x705: V566 = 0x100
0x708: V567 = EXP 0x100 V565
0x709: V568 = 0x0
0x70b: V569 = NOT 0x0
0x70c: V570 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V567
0x70e: V571 = NOT V570
0x711: V572 = AND V562 V571
0x713: V573 = AND V563 V570
0x717: V574 = OR V573 V572
0x719: M[S1] = V574
0x71a: V575 = 0x40
0x71c: V576 = M[0x40]
0x71e: V577 = ADD V547 V548
0x721: V578 = SUB V577 V576
0x724: V579 = SHA3 V576 V578
0x72a: V580 = ISZERO V518
0x72b: V581 = ISZERO V580
0x72c: V582 = 0x731
0x72f: JUMPI 0x731 V581
---
Entry stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4f7, 0x55e}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V541, V547, V547, V550, V548, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V579]
Exit stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4f7, 0x55e}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V579]

================================

Block 0x730
[0x730:0x730]
---
Predecessors: [0x6fb]
Successors: []
---
0x730 INVALID
---
0x730: INVALID 
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x320, 0x4f7, 0x55e}, S14, 0x3e5, S12, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V579]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x320, 0x4f7, 0x55e}, S14, 0x3e5, S12, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V579]

================================

Block 0x731
[0x731:0x741]
---
Predecessors: [0x6fb]
Successors: [0x8a3]
---
0x731 JUMPDEST
0x732 DIV
0x733 PUSH2 0x742
0x736 TIMESTAMP
0x737 DIFFICULTY
0x738 PUSH4 0xffffffff
0x73d PUSH2 0x8a3
0x740 AND
0x741 JUMP
---
0x731: JUMPDEST 
0x732: V583 = DIV V579 V518
0x733: V584 = 0x742
0x736: V585 = TIMESTAMP
0x737: V586 = DIFFICULTY
0x738: V587 = 0xffffffff
0x73d: V588 = 0x8a3
0x740: V589 = AND 0x8a3 0xffffffff
0x741: JUMP 0x8a3
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x320, 0x4f7, 0x55e}, S14, 0x3e5, S12, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V518, V579]
Stack pops: 2
Stack additions: [V583, 0x742, V585, V586]
Exit stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x320, 0x4f7, 0x55e}, S14, 0x3e5, S12, V270, 0x0, 0x0, 0x74e, V448, 0x742, V514, 0x742, V516, 0x742, V583, 0x742, V585, V586]

================================

Block 0x742
[0x742:0x74d]
---
Predecessors: [0x915]
Successors: [0x8a3]
---
0x742 JUMPDEST
0x743 SWAP1
0x744 PUSH4 0xffffffff
0x749 PUSH2 0x8a3
0x74c AND
0x74d JUMP
---
0x742: JUMPDEST 
0x744: V590 = 0xffffffff
0x749: V591 = 0x8a3
0x74c: V592 = AND 0x8a3 0xffffffff
0x74d: JUMP 0x8a3
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x74e
[0x74e:0x77c]
---
Predecessors: [0x2e7, 0x320, 0x915]
Successors: [0x77d]
---
0x74e JUMPDEST
0x74f PUSH1 0x40
0x751 MLOAD
0x752 PUSH1 0x20
0x754 ADD
0x755 DUP1
0x756 DUP3
0x757 DUP2
0x758 MSTORE
0x759 PUSH1 0x20
0x75b ADD
0x75c SWAP2
0x75d POP
0x75e POP
0x75f PUSH1 0x40
0x761 MLOAD
0x762 PUSH1 0x20
0x764 DUP2
0x765 DUP4
0x766 SUB
0x767 SUB
0x768 DUP2
0x769 MSTORE
0x76a SWAP1
0x76b PUSH1 0x40
0x76d MSTORE
0x76e PUSH1 0x40
0x770 MLOAD
0x771 DUP1
0x772 DUP3
0x773 DUP1
0x774 MLOAD
0x775 SWAP1
0x776 PUSH1 0x20
0x778 ADD
0x779 SWAP1
0x77a DUP1
0x77b DUP4
0x77c DUP4
---
0x74e: JUMPDEST 
0x74f: V593 = 0x40
0x751: V594 = M[0x40]
0x752: V595 = 0x20
0x754: V596 = ADD 0x20 V594
0x758: M[V596] = S0
0x759: V597 = 0x20
0x75b: V598 = ADD 0x20 V596
0x75f: V599 = 0x40
0x761: V600 = M[0x40]
0x762: V601 = 0x20
0x766: V602 = SUB V598 V600
0x767: V603 = SUB V602 0x20
0x769: M[V600] = V603
0x76b: V604 = 0x40
0x76d: M[0x40] = V598
0x76e: V605 = 0x40
0x770: V606 = M[0x40]
0x774: V607 = M[V600]
0x776: V608 = 0x20
0x778: V609 = ADD 0x20 V600
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V600, V606, V606, V609, V607, V607, V606, V609]
Exit stack: [S23, 0xe3, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V600, V606, V606, V609, V607, V607, V606, V609]

================================

Block 0x77d
[0x77d:0x785]
---
Predecessors: [0x74e, 0x786]
Successors: [0x786, 0x79c]
---
0x77d JUMPDEST
0x77e PUSH1 0x20
0x780 DUP4
0x781 LT
0x782 PUSH2 0x79c
0x785 JUMPI
---
0x77d: JUMPDEST 
0x77e: V610 = 0x20
0x781: V611 = LT S2 0x20
0x782: V612 = 0x79c
0x785: JUMPI 0x79c V611
---
Entry stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V600, V606, V606, V609, V607, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V600, V606, V606, V609, V607, S2, S1, S0]

================================

Block 0x786
[0x786:0x79b]
---
Predecessors: [0x77d]
Successors: [0x77d]
---
0x786 DUP1
0x787 MLOAD
0x788 DUP3
0x789 MSTORE
0x78a PUSH1 0x1f
0x78c NOT
0x78d SWAP1
0x78e SWAP3
0x78f ADD
0x790 SWAP2
0x791 PUSH1 0x20
0x793 SWAP2
0x794 DUP3
0x795 ADD
0x796 SWAP2
0x797 ADD
0x798 PUSH2 0x77d
0x79b JUMP
---
0x787: V613 = M[S0]
0x789: M[S1] = V613
0x78a: V614 = 0x1f
0x78c: V615 = NOT 0x1f
0x78f: V616 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x791: V617 = 0x20
0x795: V618 = ADD 0x20 S1
0x797: V619 = ADD 0x20 S0
0x798: V620 = 0x77d
0x79b: JUMP 0x77d
---
Entry stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V600, V606, V606, V609, V607, S2, S1, S0]
Stack pops: 3
Stack additions: [V616, V618, V619]
Exit stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V600, V606, V606, V609, V607, V616, V618, V619]

================================

Block 0x79c
[0x79c:0x7df]
---
Predecessors: [0x77d]
Successors: [0x7e0, 0x7e8]
---
0x79c JUMPDEST
0x79d MLOAD
0x79e DUP2
0x79f MLOAD
0x7a0 PUSH1 0x20
0x7a2 SWAP4
0x7a3 SWAP1
0x7a4 SWAP4
0x7a5 SUB
0x7a6 PUSH2 0x100
0x7a9 EXP
0x7aa PUSH1 0x0
0x7ac NOT
0x7ad ADD
0x7ae DUP1
0x7af NOT
0x7b0 SWAP1
0x7b1 SWAP2
0x7b2 AND
0x7b3 SWAP3
0x7b4 AND
0x7b5 SWAP2
0x7b6 SWAP1
0x7b7 SWAP2
0x7b8 OR
0x7b9 SWAP1
0x7ba MSTORE
0x7bb PUSH1 0x40
0x7bd MLOAD
0x7be SWAP3
0x7bf ADD
0x7c0 DUP3
0x7c1 SWAP1
0x7c2 SUB
0x7c3 SWAP1
0x7c4 SWAP2
0x7c5 SHA3
0x7c6 SWAP4
0x7c7 POP
0x7c8 DUP6
0x7c9 SWAP3
0x7ca POP
0x7cb PUSH2 0x3e8
0x7ce SWAP2
0x7cf POP
0x7d0 DUP4
0x7d1 SWAP1
0x7d2 POP
0x7d3 DIV
0x7d4 PUSH2 0x3e8
0x7d7 MUL
0x7d8 DUP3
0x7d9 SUB
0x7da LT
0x7db ISZERO
0x7dc PUSH2 0x7e8
0x7df JUMPI
---
0x79c: JUMPDEST 
0x79d: V621 = M[S0]
0x79f: V622 = M[S1]
0x7a0: V623 = 0x20
0x7a5: V624 = SUB 0x20 S2
0x7a6: V625 = 0x100
0x7a9: V626 = EXP 0x100 V624
0x7aa: V627 = 0x0
0x7ac: V628 = NOT 0x0
0x7ad: V629 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V626
0x7af: V630 = NOT V629
0x7b2: V631 = AND V621 V630
0x7b4: V632 = AND V622 V629
0x7b8: V633 = OR V632 V631
0x7ba: M[S1] = V633
0x7bb: V634 = 0x40
0x7bd: V635 = M[0x40]
0x7bf: V636 = ADD V606 V607
0x7c2: V637 = SUB V636 V635
0x7c5: V638 = SHA3 V635 V637
0x7cb: V639 = 0x3e8
0x7d3: V640 = DIV V638 0x3e8
0x7d4: V641 = 0x3e8
0x7d7: V642 = MUL 0x3e8 V640
0x7d9: V643 = SUB V638 V642
0x7da: V644 = LT V643 S10
0x7db: V645 = ISZERO V644
0x7dc: V646 = 0x7e8
0x7df: JUMPI 0x7e8 V645
---
Entry stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V600, V606, V606, V609, V607, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V638]
Exit stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V638]

================================

Block 0x7e0
[0x7e0:0x7e7]
---
Predecessors: [0x79c]
Successors: [0x7ed]
---
0x7e0 PUSH1 0x1
0x7e2 SWAP2
0x7e3 POP
0x7e4 PUSH2 0x7ed
0x7e7 JUMP
---
0x7e0: V647 = 0x1
0x7e4: V648 = 0x7ed
0x7e7: JUMP 0x7ed
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V638]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, V638]

================================

Block 0x7e8
[0x7e8:0x7ec]
---
Predecessors: [0x79c]
Successors: [0x7ed]
---
0x7e8 JUMPDEST
0x7e9 PUSH1 0x0
0x7eb SWAP2
0x7ec POP
---
0x7e8: JUMPDEST 
0x7e9: V649 = 0x0
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V638]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V638]

================================

Block 0x7ed
[0x7ed:0x7f3]
---
Predecessors: [0x7e0, 0x7e8]
Successors: [0x320, 0x3e5]
---
0x7ed JUMPDEST
0x7ee POP
0x7ef SWAP3
0x7f0 SWAP2
0x7f1 POP
0x7f2 POP
0x7f3 JUMP
---
0x7ed: JUMPDEST 
0x7f3: JUMP S4
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}]

================================

Block 0x7f4
[0x7f4:0x801]
---
Predecessors: [0x3eb]
Successors: [0x91b]
---
0x7f4 JUMPDEST
0x7f5 CALLVALUE
0x7f6 PUSH1 0x4
0x7f8 PUSH1 0x0
0x7fa ADDRESS
0x7fb PUSH2 0x802
0x7fe PUSH2 0x91b
0x801 JUMP
---
0x7f4: JUMPDEST 
0x7f5: V650 = CALLVALUE
0x7f6: V651 = 0x4
0x7f8: V652 = 0x0
0x7fa: V653 = ADDRESS
0x7fb: V654 = 0x802
0x7fe: V655 = 0x91b
0x801: JUMP 0x91b
---
Entry stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3ff]
Stack pops: 0
Stack additions: [V650, 0x4, 0x0, V653, 0x802]
Exit stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3ff, V650, 0x4, 0x0, V653, 0x802]

================================

Block 0x802
[0x802:0x836]
---
Predecessors: [0x91b]
Successors: [0x837, 0x87b]
---
0x802 JUMPDEST
0x803 PUSH1 0xff
0x805 DUP4
0x806 AND
0x807 PUSH1 0x20
0x809 DUP3
0x80a ADD
0x80b MSTORE
0x80c PUSH1 0x1
0x80e PUSH1 0xa0
0x810 PUSH1 0x2
0x812 EXP
0x813 SUB
0x814 DUP3
0x815 AND
0x816 PUSH1 0x40
0x818 DUP3
0x819 ADD
0x81a MSTORE
0x81b PUSH1 0x60
0x81d DUP1
0x81e DUP3
0x81f MSTORE
0x820 DUP5
0x821 SLOAD
0x822 SWAP1
0x823 DUP3
0x824 ADD
0x825 DUP2
0x826 SWAP1
0x827 MSTORE
0x828 DUP2
0x829 SWAP1
0x82a PUSH1 0x80
0x82c DUP3
0x82d ADD
0x82e SWAP1
0x82f DUP7
0x830 SWAP1
0x831 DUP1
0x832 ISZERO
0x833 PUSH2 0x87b
0x836 JUMPI
---
0x802: JUMPDEST 
0x803: V656 = 0xff
0x806: V657 = AND S2 0xff
0x807: V658 = 0x20
0x80a: V659 = ADD V736 0x20
0x80b: M[V659] = V657
0x80c: V660 = 0x1
0x80e: V661 = 0xa0
0x810: V662 = 0x2
0x812: V663 = EXP 0x2 0xa0
0x813: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x815: V665 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x816: V666 = 0x40
0x819: V667 = ADD V736 0x40
0x81a: M[V667] = V665
0x81b: V668 = 0x60
0x81f: M[V736] = 0x60
0x821: V669 = S[S3]
0x824: V670 = ADD V736 0x60
0x827: M[V670] = V669
0x82a: V671 = 0x80
0x82d: V672 = ADD V736 0x80
0x832: V673 = ISZERO V669
0x833: V674 = 0x87b
0x836: JUMPI 0x87b V673
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, V736]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S0, V672, S3, V669]
Exit stack: [S15, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, 0x3ff, S4, 0x4, 0x0, S1, S0, S0, V672, 0x4, V669]

================================

Block 0x837
[0x837:0x849]
---
Predecessors: [0x802]
Successors: [0x84a]
---
0x837 PUSH1 0x20
0x839 MUL
0x83a DUP3
0x83b ADD
0x83c SWAP2
0x83d SWAP1
0x83e PUSH1 0x0
0x840 MSTORE
0x841 PUSH1 0x20
0x843 PUSH1 0x0
0x845 SHA3
0x846 SWAP1
0x847 PUSH1 0x0
0x849 SWAP1
---
0x837: V675 = 0x20
0x839: V676 = MUL 0x20 V669
0x83b: V677 = ADD V672 V676
0x83e: V678 = 0x0
0x840: M[0x0] = 0x4
0x841: V679 = 0x20
0x843: V680 = 0x0
0x845: V681 = SHA3 0x0 0x20
0x847: V682 = 0x0
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, 0x3ff, V650, 0x4, 0x0, V653, V736, V736, V672, 0x4, V669]
Stack pops: 3
Stack additions: [V677, V681, 0x0, S2]
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, 0x3ff, V650, 0x4, 0x0, V653, V736, V736, V677, V681, 0x0, V672]

================================

Block 0x84a
[0x84a:0x878]
---
Predecessors: [0x837, 0x84a]
Successors: [0x84a, 0x879]
---
0x84a JUMPDEST
0x84b DUP3
0x84c SLOAD
0x84d PUSH2 0x100
0x850 DUP4
0x851 SWAP1
0x852 EXP
0x853 SWAP1
0x854 DIV
0x855 PUSH1 0xff
0x857 AND
0x858 ISZERO
0x859 ISZERO
0x85a DUP2
0x85b MSTORE
0x85c PUSH1 0x20
0x85e PUSH1 0x1
0x860 SWAP3
0x861 DUP4
0x862 ADD
0x863 DUP2
0x864 DUP2
0x865 DIV
0x866 SWAP5
0x867 DUP6
0x868 ADD
0x869 SWAP5
0x86a SWAP1
0x86b SWAP4
0x86c SUB
0x86d SWAP1
0x86e SWAP3
0x86f MUL
0x870 SWAP2
0x871 ADD
0x872 DUP1
0x873 DUP5
0x874 GT
0x875 PUSH2 0x84a
0x878 JUMPI
---
0x84a: JUMPDEST 
0x84c: V683 = S[S2]
0x84d: V684 = 0x100
0x852: V685 = EXP 0x100 S1
0x854: V686 = DIV V683 V685
0x855: V687 = 0xff
0x857: V688 = AND 0xff V686
0x858: V689 = ISZERO V688
0x859: V690 = ISZERO V689
0x85b: M[S0] = V690
0x85c: V691 = 0x20
0x85e: V692 = 0x1
0x862: V693 = ADD 0x1 S1
0x865: V694 = DIV V693 0x20
0x868: V695 = ADD V694 S2
0x86c: V696 = SUB 0x1 V694
0x86f: V697 = MUL V693 V696
0x871: V698 = ADD 0x20 S0
0x874: V699 = GT V677 V698
0x875: V700 = 0x84a
0x878: JUMPI 0x84a V699
---
Entry stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, 0x3ff, V650, 0x4, 0x0, V653, V736, V736, V677, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, V695, V697, V698]
Exit stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, 0x3ff, V650, 0x4, 0x0, V653, V736, V736, V677, V695, V697, V698]

================================

Block 0x879
[0x879:0x87a]
---
Predecessors: [0x84a]
Successors: [0x87b]
---
0x879 SWAP1
0x87a POP
---
0x879: NOP 
---
Entry stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, 0x3ff, V650, 0x4, 0x0, V653, V736, V736, V677, V695, V697, V698]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, 0x3ff, V650, 0x4, 0x0, V653, V736, V736, V677, V695, V698]

================================

Block 0x87b
[0x87b:0x894]
---
Predecessors: [0x802, 0x879]
Successors: [0x895, 0x89e]
---
0x87b JUMPDEST
0x87c POP
0x87d POP
0x87e SWAP5
0x87f POP
0x880 POP
0x881 POP
0x882 POP
0x883 POP
0x884 PUSH1 0x40
0x886 MLOAD
0x887 DUP1
0x888 SWAP2
0x889 SUB
0x88a SWAP1
0x88b DUP3
0x88c CREATE
0x88d DUP1
0x88e ISZERO
0x88f DUP1
0x890 ISZERO
0x891 PUSH2 0x89e
0x894 JUMPI
---
0x87b: JUMPDEST 
0x884: V701 = 0x40
0x886: V702 = M[0x40]
0x889: V703 = SUB S2 V702
0x88c: V704 = CREATE V650 V702 V703
0x88e: V705 = ISZERO V704
0x890: V706 = ISZERO V705
0x891: V707 = 0x89e
0x894: JUMPI 0x89e V706
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, 0x3ff, V650, 0x4, 0x0, V653, V736, V736, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V704, V705]
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, 0x3ff, V650, V704, V705]

================================

Block 0x895
[0x895:0x89d]
---
Predecessors: [0x87b]
Successors: []
---
0x895 RETURNDATASIZE
0x896 PUSH1 0x0
0x898 DUP1
0x899 RETURNDATACOPY
0x89a RETURNDATASIZE
0x89b PUSH1 0x0
0x89d REVERT
---
0x895: V708 = RETURNDATASIZE
0x896: V709 = 0x0
0x899: RETURNDATACOPY 0x0 0x0 V708
0x89a: V710 = RETURNDATASIZE
0x89b: V711 = 0x0
0x89d: REVERT 0x0 V710
---
Entry stack: [V11, 0xe3, S11, S10, S9, S8, S7, S6, S5, S4, 0x3ff, V650, V704, V705]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S11, S10, S9, S8, S7, S6, S5, S4, 0x3ff, V650, V704, V705]

================================

Block 0x89e
[0x89e:0x8a2]
---
Predecessors: [0x87b, 0x92b, 0x978]
Successors: [0x3ff, 0x474, 0x5cd]
---
0x89e JUMPDEST
0x89f POP
0x8a0 POP
0x8a1 POP
0x8a2 JUMP
---
0x89e: JUMPDEST 
0x8a2: JUMP {0x3ff, 0x474, 0x5cd}
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x3ff, 0x474, 0x5cd}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x8a3
[0x8a3:0x8ae]
---
Predecessors: [0x731, 0x742]
Successors: [0x8af, 0x915]
---
0x8a3 JUMPDEST
0x8a4 DUP2
0x8a5 DUP2
0x8a6 ADD
0x8a7 DUP3
0x8a8 DUP2
0x8a9 LT
0x8aa ISZERO
0x8ab PUSH2 0x915
0x8ae JUMPI
---
0x8a3: JUMPDEST 
0x8a6: V712 = ADD S0 S1
0x8a9: V713 = LT V712 S1
0x8aa: V714 = ISZERO V713
0x8ab: V715 = 0x915
0x8ae: JUMPI 0x915 V714
---
Entry stack: [V11, 0xe3, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V712]
Exit stack: [V11, 0xe3, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V712]

================================

Block 0x8af
[0x8af:0x914]
---
Predecessors: [0x8a3]
Successors: []
---
0x8af PUSH1 0x40
0x8b1 DUP1
0x8b2 MLOAD
0x8b3 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8d4 DUP2
0x8d5 MSTORE
0x8d6 PUSH1 0x20
0x8d8 PUSH1 0x4
0x8da DUP3
0x8db ADD
0x8dc MSTORE
0x8dd PUSH1 0x13
0x8df PUSH1 0x24
0x8e1 DUP3
0x8e2 ADD
0x8e3 MSTORE
0x8e4 PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0x905 PUSH1 0x44
0x907 DUP3
0x908 ADD
0x909 MSTORE
0x90a SWAP1
0x90b MLOAD
0x90c SWAP1
0x90d DUP2
0x90e SWAP1
0x90f SUB
0x910 PUSH1 0x64
0x912 ADD
0x913 SWAP1
0x914 REVERT
---
0x8af: V716 = 0x40
0x8b2: V717 = M[0x40]
0x8b3: V718 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8d5: M[V717] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8d6: V719 = 0x20
0x8d8: V720 = 0x4
0x8db: V721 = ADD V717 0x4
0x8dc: M[V721] = 0x20
0x8dd: V722 = 0x13
0x8df: V723 = 0x24
0x8e2: V724 = ADD V717 0x24
0x8e3: M[V724] = 0x13
0x8e4: V725 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x905: V726 = 0x44
0x908: V727 = ADD V717 0x44
0x909: M[V727] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x90b: V728 = M[0x40]
0x90f: V729 = SUB V717 V728
0x910: V730 = 0x64
0x912: V731 = ADD 0x64 V729
0x914: REVERT V728 V731
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V712]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V712]

================================

Block 0x915
[0x915:0x91a]
---
Predecessors: [0x8a3]
Successors: [0xe3, 0x742, 0x74e]
---
0x915 JUMPDEST
0x916 SWAP3
0x917 SWAP2
0x918 POP
0x919 POP
0x91a JUMP
---
0x915: JUMPDEST 
0x91a: JUMP S3
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V712]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V712]

================================

Block 0x91b
[0x91b:0x92a]
---
Predecessors: [0x102, 0x7f4]
Successors: [0x110, 0x802]
---
0x91b JUMPDEST
0x91c PUSH1 0x40
0x91e MLOAD
0x91f PUSH2 0x30b
0x922 DUP1
0x923 PUSH2 0x97c
0x926 DUP4
0x927 CODECOPY
0x928 ADD
0x929 SWAP1
0x92a JUMP
---
0x91b: JUMPDEST 
0x91c: V732 = 0x40
0x91e: V733 = M[0x40]
0x91f: V734 = 0x30b
0x923: V735 = 0x97c
0x927: CODECOPY V733 0x97c 0x30b
0x928: V736 = ADD 0x30b V733
0x92a: JUMP {0x110, 0x802}
---
Entry stack: [V11, 0xe3, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, {0x110, 0x802}]
Stack pops: 1
Stack additions: [V736]
Exit stack: [V11, 0xe3, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, V736]

================================

Block 0x92b
[0x92b:0x938]
---
Predecessors: [0x43d, 0x596]
Successors: [0x89e, 0x939]
---
0x92b JUMPDEST
0x92c DUP2
0x92d SLOAD
0x92e DUP2
0x92f DUP4
0x930 SSTORE
0x931 DUP2
0x932 DUP2
0x933 GT
0x934 ISZERO
0x935 PUSH2 0x89e
0x938 JUMPI
---
0x92b: JUMPDEST 
0x92d: V737 = S[0x4]
0x930: S[0x4] = S0
0x933: V738 = GT V737 S0
0x934: V739 = ISZERO V738
0x935: V740 = 0x89e
0x938: JUMPI 0x89e V739
---
Entry stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x474, 0x5cd}, 0x4, S0]
Stack pops: 2
Stack additions: [S1, S0, V737]
Exit stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x474, 0x5cd}, 0x4, S0, V737]

================================

Block 0x939
[0x939:0x95f]
---
Predecessors: [0x92b]
Successors: [0x960]
---
0x939 PUSH1 0x1f
0x93b ADD
0x93c PUSH1 0x20
0x93e SWAP1
0x93f DIV
0x940 DUP2
0x941 PUSH1 0x1f
0x943 ADD
0x944 PUSH1 0x20
0x946 SWAP1
0x947 DIV
0x948 DUP4
0x949 PUSH1 0x0
0x94b MSTORE
0x94c PUSH1 0x20
0x94e PUSH1 0x0
0x950 SHA3
0x951 SWAP2
0x952 DUP3
0x953 ADD
0x954 SWAP2
0x955 ADD
0x956 PUSH2 0x89e
0x959 SWAP2
0x95a SWAP1
0x95b PUSH2 0x978
0x95e SWAP2
0x95f SWAP1
---
0x939: V741 = 0x1f
0x93b: V742 = ADD 0x1f V737
0x93c: V743 = 0x20
0x93f: V744 = DIV V742 0x20
0x941: V745 = 0x1f
0x943: V746 = ADD 0x1f S1
0x944: V747 = 0x20
0x947: V748 = DIV V746 0x20
0x949: V749 = 0x0
0x94b: M[0x0] = 0x4
0x94c: V750 = 0x20
0x94e: V751 = 0x0
0x950: V752 = SHA3 0x0 0x20
0x953: V753 = ADD V752 V744
0x955: V754 = ADD V752 V748
0x956: V755 = 0x89e
0x95b: V756 = 0x978
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x474, 0x5cd}, 0x4, S1, V737]
Stack pops: 3
Stack additions: [S2, S1, 0x89e, 0x978, V753, V754]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x474, 0x5cd}, 0x4, S1, 0x89e, 0x978, V753, V754]

================================

Block 0x960
[0x960:0x968]
---
Predecessors: [0x939, 0x969]
Successors: [0x969, 0x974]
---
0x960 JUMPDEST
0x961 DUP1
0x962 DUP3
0x963 GT
0x964 ISZERO
0x965 PUSH2 0x974
0x968 JUMPI
---
0x960: JUMPDEST 
0x963: V757 = GT S1 S0
0x964: V758 = ISZERO V757
0x965: V759 = 0x974
0x968: JUMPI 0x974 V758
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5cd}, 0x4, S4, 0x89e, 0x978, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5cd}, 0x4, S4, 0x89e, 0x978, S1, S0]

================================

Block 0x969
[0x969:0x973]
---
Predecessors: [0x960]
Successors: [0x960]
---
0x969 PUSH1 0x0
0x96b DUP2
0x96c SSTORE
0x96d PUSH1 0x1
0x96f ADD
0x970 PUSH2 0x960
0x973 JUMP
---
0x969: V760 = 0x0
0x96c: S[S0] = 0x0
0x96d: V761 = 0x1
0x96f: V762 = ADD 0x1 S0
0x970: V763 = 0x960
0x973: JUMP 0x960
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5cd}, 0x4, S4, 0x89e, 0x978, S1, S0]
Stack pops: 1
Stack additions: [V762]
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5cd}, 0x4, S4, 0x89e, 0x978, S1, V762]

================================

Block 0x974
[0x974:0x977]
---
Predecessors: [0x960]
Successors: [0x978]
---
0x974 JUMPDEST
0x975 POP
0x976 SWAP1
0x977 JUMP
---
0x974: JUMPDEST 
0x977: JUMP 0x978
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5cd}, 0x4, S4, 0x89e, 0x978, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5cd}, 0x4, S4, 0x89e, S1]

================================

Block 0x978
[0x978:0x97a]
---
Predecessors: [0x974]
Successors: [0x89e]
---
0x978 JUMPDEST
0x979 SWAP1
0x97a JUMP
---
0x978: JUMPDEST 
0x97a: JUMP 0x89e
---
Entry stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x474, 0x5cd}, 0x4, S2, 0x89e, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x474, 0x5cd}, 0x4, S2, S0]

================================

Block 0x97b
[0x97b:0x9b0]
---
Predecessors: []
Successors: [0x9b1]
---
0x97b STOP
0x97c PUSH1 0x80
0x97e PUSH1 0x40
0x980 MSTORE
0x981 PUSH1 0x40
0x983 MLOAD
0x984 PUSH2 0x30b
0x987 CODESIZE
0x988 SUB
0x989 DUP1
0x98a PUSH2 0x30b
0x98d DUP4
0x98e CODECOPY
0x98f DUP2
0x990 ADD
0x991 PUSH1 0x40
0x993 SWAP1
0x994 DUP2
0x995 MSTORE
0x996 DUP2
0x997 MLOAD
0x998 PUSH1 0x20
0x99a DUP4
0x99b ADD
0x99c MLOAD
0x99d SWAP2
0x99e DUP4
0x99f ADD
0x9a0 MLOAD
0x9a1 SWAP3
0x9a2 ADD
0x9a3 DUP1
0x9a4 MLOAD
0x9a5 SWAP1
0x9a6 SWAP3
0x9a7 SWAP1
0x9a8 PUSH1 0xff
0x9aa DUP4
0x9ab AND
0x9ac EQ
0x9ad PUSH2 0x1b6
0x9b0 JUMPI
---
0x97b: STOP 
0x97c: V764 = 0x80
0x97e: V765 = 0x40
0x980: M[0x40] = 0x80
0x981: V766 = 0x40
0x983: V767 = M[0x40]
0x984: V768 = 0x30b
0x987: V769 = CODESIZE
0x988: V770 = SUB V769 0x30b
0x98a: V771 = 0x30b
0x98e: CODECOPY V767 0x30b V770
0x990: V772 = ADD V767 V770
0x991: V773 = 0x40
0x995: M[0x40] = V772
0x997: V774 = M[V767]
0x998: V775 = 0x20
0x99b: V776 = ADD V767 0x20
0x99c: V777 = M[V776]
0x99f: V778 = ADD V767 0x40
0x9a0: V779 = M[V778]
0x9a2: V780 = ADD V767 V774
0x9a4: V781 = M[V780]
0x9a8: V782 = 0xff
0x9ab: V783 = AND V777 0xff
0x9ac: V784 = EQ V783 V781
0x9ad: V785 = 0x1b6
0x9b0: THROWI V784
---
Entry stack: []
Stack pops: 0
Stack additions: [V779, V777, V780]
Exit stack: []

================================

Block 0x9b1
[0x9b1:0x9bf]
---
Predecessors: [0x97b]
Successors: [0x9c0]
---
0x9b1 DUP3
0x9b2 DUP3
0x9b3 PUSH1 0xff
0x9b5 AND
0x9b6 DUP2
0x9b7 MLOAD
0x9b8 DUP2
0x9b9 LT
0x9ba ISZERO
0x9bb ISZERO
0x9bc PUSH2 0x45
0x9bf JUMPI
---
0x9b3: V786 = 0xff
0x9b5: V787 = AND 0xff V777
0x9b7: V788 = M[V780]
0x9b9: V789 = LT V787 V788
0x9ba: V790 = ISZERO V789
0x9bb: V791 = ISZERO V790
0x9bc: V792 = 0x45
0x9bf: THROWI V791
---
Entry stack: [V780, V777, V779]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, V787]
Exit stack: [V780, V777, V779, V780, V787]

================================

Block 0x9c0
[0x9c0:0x9d7]
---
Predecessors: [0x9b1]
Successors: [0x9d8]
---
0x9c0 INVALID
0x9c1 JUMPDEST
0x9c2 SWAP1
0x9c3 PUSH1 0x20
0x9c5 ADD
0x9c6 SWAP1
0x9c7 PUSH1 0x20
0x9c9 MUL
0x9ca ADD
0x9cb MLOAD
0x9cc ISZERO
0x9cd ISZERO
0x9ce PUSH1 0x1
0x9d0 ISZERO
0x9d1 ISZERO
0x9d2 EQ
0x9d3 ISZERO
0x9d4 PUSH2 0x82
0x9d7 JUMPI
---
0x9c0: INVALID 
0x9c1: JUMPDEST 
0x9c3: V793 = 0x20
0x9c5: V794 = ADD 0x20 S1
0x9c7: V795 = 0x20
0x9c9: V796 = MUL 0x20 S0
0x9ca: V797 = ADD V796 V794
0x9cb: V798 = M[V797]
0x9cc: V799 = ISZERO V798
0x9cd: V800 = ISZERO V799
0x9ce: V801 = 0x1
0x9d0: V802 = ISZERO 0x1
0x9d1: V803 = ISZERO 0x0
0x9d2: V804 = EQ 0x1 V800
0x9d3: V805 = ISZERO V804
0x9d4: V806 = 0x82
0x9d7: THROWI V805
---
Entry stack: [V780, V777, V779, V780, V787]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9d8
[0x9d8:0x9f1]
---
Predecessors: [0x9c0]
Successors: [0x9f2]
---
0x9d8 PUSH2 0x63
0x9db PUSH2 0x267
0x9de JUMP
0x9df JUMPDEST
0x9e0 PUSH1 0x40
0x9e2 MLOAD
0x9e3 DUP1
0x9e4 SWAP2
0x9e5 SUB
0x9e6 SWAP1
0x9e7 PUSH1 0x0
0x9e9 CREATE
0x9ea DUP1
0x9eb ISZERO
0x9ec DUP1
0x9ed ISZERO
0x9ee PUSH2 0x7f
0x9f1 JUMPI
---
0x9d8: V807 = 0x63
0x9db: V808 = 0x267
0x9de: THROW 
0x9df: JUMPDEST 
0x9e0: V809 = 0x40
0x9e2: V810 = M[0x40]
0x9e5: V811 = SUB S0 V810
0x9e7: V812 = 0x0
0x9e9: V813 = CREATE 0x0 V810 V811
0x9eb: V814 = ISZERO V813
0x9ed: V815 = ISZERO V814
0x9ee: V816 = 0x7f
0x9f1: THROWI V815
---
Entry stack: []
Stack pops: 0
Stack additions: [0x63, V814, V813]
Exit stack: []

================================

Block 0x9f2
[0x9f2:0x9fd]
---
Predecessors: [0x9d8]
Successors: [0x9fe]
---
0x9f2 RETURNDATASIZE
0x9f3 PUSH1 0x0
0x9f5 DUP1
0x9f6 RETURNDATACOPY
0x9f7 RETURNDATASIZE
0x9f8 PUSH1 0x0
0x9fa REVERT
0x9fb JUMPDEST
0x9fc POP
0x9fd POP
---
0x9f2: V817 = RETURNDATASIZE
0x9f3: V818 = 0x0
0x9f6: RETURNDATACOPY 0x0 0x0 V817
0x9f7: V819 = RETURNDATASIZE
0x9f8: V820 = 0x0
0x9fa: REVERT 0x0 V819
0x9fb: JUMPDEST 
---
Entry stack: [V813, V814]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9fe
[0x9fe:0xac9]
---
Predecessors: [0x9f2]
Successors: [0xaca]
---
0x9fe JUMPDEST
0x9ff DUP1
0xa00 PUSH1 0x1
0xa02 PUSH1 0xa0
0xa04 PUSH1 0x2
0xa06 EXP
0xa07 SUB
0xa08 AND
0xa09 PUSH1 0x40
0xa0b MLOAD
0xa0c DUP1
0xa0d DUP1
0xa0e PUSH32 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0xa2f DUP2
0xa30 MSTORE
0xa31 PUSH1 0x20
0xa33 ADD
0xa34 PUSH32 0x6472657373290000000000000000000000000000000000000000000000000000
0xa55 DUP2
0xa56 MSTORE
0xa57 POP
0xa58 PUSH1 0x26
0xa5a ADD
0xa5b SWAP1
0xa5c POP
0xa5d PUSH1 0x40
0xa5f MLOAD
0xa60 DUP1
0xa61 SWAP2
0xa62 SUB
0xa63 SWAP1
0xa64 SHA3
0xa65 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa83 SWAP1
0xa84 DIV
0xa85 DUP5
0xa86 DUP5
0xa87 PUSH1 0x1
0xa89 ADD
0xa8a DUP5
0xa8b PUSH1 0x40
0xa8d MLOAD
0xa8e DUP5
0xa8f PUSH4 0xffffffff
0xa94 AND
0xa95 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xab3 MUL
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0x4
0xab8 ADD
0xab9 DUP1
0xaba DUP5
0xabb DUP1
0xabc MLOAD
0xabd SWAP1
0xabe PUSH1 0x20
0xac0 ADD
0xac1 SWAP1
0xac2 PUSH1 0x20
0xac4 MUL
0xac5 DUP1
0xac6 DUP4
0xac7 DUP4
0xac8 PUSH1 0x0
---
0x9fe: JUMPDEST 
0xa00: V821 = 0x1
0xa02: V822 = 0xa0
0xa04: V823 = 0x2
0xa06: V824 = EXP 0x2 0xa0
0xa07: V825 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa08: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa09: V827 = 0x40
0xa0b: V828 = M[0x40]
0xa0e: V829 = 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0xa30: M[V828] = 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0xa31: V830 = 0x20
0xa33: V831 = ADD 0x20 V828
0xa34: V832 = 0x6472657373290000000000000000000000000000000000000000000000000000
0xa56: M[V831] = 0x6472657373290000000000000000000000000000000000000000000000000000
0xa58: V833 = 0x26
0xa5a: V834 = ADD 0x26 V828
0xa5d: V835 = 0x40
0xa5f: V836 = M[0x40]
0xa62: V837 = SUB V834 V836
0xa64: V838 = SHA3 V836 V837
0xa65: V839 = 0x100000000000000000000000000000000000000000000000000000000
0xa84: V840 = DIV V838 0x100000000000000000000000000000000000000000000000000000000
0xa87: V841 = 0x1
0xa89: V842 = ADD 0x1 S1
0xa8b: V843 = 0x40
0xa8d: V844 = M[0x40]
0xa8f: V845 = 0xffffffff
0xa94: V846 = AND 0xffffffff V840
0xa95: V847 = 0x100000000000000000000000000000000000000000000000000000000
0xab3: V848 = MUL 0x100000000000000000000000000000000000000000000000000000000 V846
0xab5: M[V844] = V848
0xab6: V849 = 0x4
0xab8: V850 = ADD 0x4 V844
0xabc: V851 = M[S2]
0xabe: V852 = 0x20
0xac0: V853 = ADD 0x20 S2
0xac2: V854 = 0x20
0xac4: V855 = MUL 0x20 V851
0xac8: V856 = 0x0
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0, V826, V840, S2, V842, S0, V850, V850, V853, V855, V855, V850, V853, 0x0]
Exit stack: [S2, S1, S0, V826, V840, S2, V842, S0, V850, V850, V853, V855, V855, V850, V853, 0x0]

================================

Block 0xaca
[0xaca:0xad2]
---
Predecessors: [0x9fe]
Successors: [0xad3]
---
0xaca JUMPDEST
0xacb DUP4
0xacc DUP2
0xacd LT
0xace ISZERO
0xacf PUSH2 0x166
0xad2 JUMPI
---
0xaca: JUMPDEST 
0xacd: V857 = LT 0x0 V855
0xace: V858 = ISZERO V857
0xacf: V859 = 0x166
0xad2: THROWI V858
---
Entry stack: [S15, S14, S13, V826, V840, S10, V842, S8, V850, V850, V853, V855, V855, V850, V853, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S15, S14, S13, V826, V840, S10, V842, S8, V850, V850, V853, V855, V855, V850, V853, 0x0]

================================

Block 0xad3
[0xad3:0xb28]
---
Predecessors: [0xaca]
Successors: [0xb29]
---
0xad3 DUP2
0xad4 DUP2
0xad5 ADD
0xad6 MLOAD
0xad7 DUP4
0xad8 DUP3
0xad9 ADD
0xada MSTORE
0xadb PUSH1 0x20
0xadd ADD
0xade PUSH2 0x14e
0xae1 JUMP
0xae2 JUMPDEST
0xae3 POP
0xae4 POP
0xae5 POP
0xae6 POP
0xae7 SWAP1
0xae8 POP
0xae9 ADD
0xaea DUP4
0xaeb PUSH1 0xff
0xaed AND
0xaee PUSH1 0xff
0xaf0 AND
0xaf1 DUP2
0xaf2 MSTORE
0xaf3 PUSH1 0x20
0xaf5 ADD
0xaf6 DUP3
0xaf7 PUSH1 0x1
0xaf9 PUSH1 0xa0
0xafb PUSH1 0x2
0xafd EXP
0xafe SUB
0xaff AND
0xb00 PUSH1 0x1
0xb02 PUSH1 0xa0
0xb04 PUSH1 0x2
0xb06 EXP
0xb07 SUB
0xb08 AND
0xb09 DUP2
0xb0a MSTORE
0xb0b PUSH1 0x20
0xb0d ADD
0xb0e SWAP4
0xb0f POP
0xb10 POP
0xb11 POP
0xb12 POP
0xb13 PUSH1 0x0
0xb15 PUSH1 0x40
0xb17 MLOAD
0xb18 DUP1
0xb19 DUP4
0xb1a SUB
0xb1b DUP2
0xb1c DUP7
0xb1d GAS
0xb1e DELEGATECALL
0xb1f SWAP3
0xb20 POP
0xb21 POP
0xb22 POP
0xb23 ISZERO
0xb24 ISZERO
0xb25 PUSH2 0x1b1
0xb28 JUMPI
---
0xad5: V860 = ADD 0x0 V853
0xad6: V861 = M[V860]
0xad9: V862 = ADD 0x0 V850
0xada: M[V862] = V861
0xadb: V863 = 0x20
0xadd: V864 = ADD 0x20 0x0
0xade: V865 = 0x14e
0xae1: THROW 
0xae2: JUMPDEST 
0xae9: V866 = ADD S4 S6
0xaeb: V867 = 0xff
0xaed: V868 = AND 0xff S9
0xaee: V869 = 0xff
0xaf0: V870 = AND 0xff V868
0xaf2: M[V866] = V870
0xaf3: V871 = 0x20
0xaf5: V872 = ADD 0x20 V866
0xaf7: V873 = 0x1
0xaf9: V874 = 0xa0
0xafb: V875 = 0x2
0xafd: V876 = EXP 0x2 0xa0
0xafe: V877 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaff: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xb00: V879 = 0x1
0xb02: V880 = 0xa0
0xb04: V881 = 0x2
0xb06: V882 = EXP 0x2 0xa0
0xb07: V883 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb08: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V878
0xb0a: M[V872] = V884
0xb0b: V885 = 0x20
0xb0d: V886 = ADD 0x20 V872
0xb13: V887 = 0x0
0xb15: V888 = 0x40
0xb17: V889 = M[0x40]
0xb1a: V890 = SUB V886 V889
0xb1d: V891 = GAS
0xb1e: V892 = DELEGATECALL V891 S12 V889 V890 V889 0x0
0xb23: V893 = ISZERO V892
0xb24: V894 = ISZERO V893
0xb25: V895 = 0x1b1
0xb28: THROWI V894
---
Entry stack: [S15, S14, S13, V826, V840, S10, V842, S8, V850, V850, V853, V855, V855, V850, V853, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xb29
[0xb29:0xbd6]
---
Predecessors: [0xad3]
Successors: [0xbd7]
---
0xb29 PUSH1 0x0
0xb2b DUP1
0xb2c REVERT
0xb2d JUMPDEST
0xb2e PUSH2 0x25f
0xb31 JUMP
0xb32 JUMPDEST
0xb33 DUP1
0xb34 PUSH1 0x1
0xb36 PUSH1 0xa0
0xb38 PUSH1 0x2
0xb3a EXP
0xb3b SUB
0xb3c AND
0xb3d PUSH1 0x40
0xb3f MLOAD
0xb40 DUP1
0xb41 DUP1
0xb42 PUSH32 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb63 DUP2
0xb64 MSTORE
0xb65 POP
0xb66 PUSH1 0xc
0xb68 ADD
0xb69 SWAP1
0xb6a POP
0xb6b PUSH1 0x40
0xb6d MLOAD
0xb6e DUP1
0xb6f SWAP2
0xb70 SUB
0xb71 SWAP1
0xb72 SHA3
0xb73 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb91 SWAP1
0xb92 DIV
0xb93 PUSH1 0x40
0xb95 MLOAD
0xb96 DUP2
0xb97 PUSH4 0xffffffff
0xb9c AND
0xb9d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbbb MUL
0xbbc DUP2
0xbbd MSTORE
0xbbe PUSH1 0x4
0xbc0 ADD
0xbc1 PUSH1 0x0
0xbc3 PUSH1 0x40
0xbc5 MLOAD
0xbc6 DUP1
0xbc7 DUP4
0xbc8 SUB
0xbc9 DUP2
0xbca DUP7
0xbcb GAS
0xbcc DELEGATECALL
0xbcd SWAP3
0xbce POP
0xbcf POP
0xbd0 POP
0xbd1 ISZERO
0xbd2 ISZERO
0xbd3 PUSH2 0x25f
0xbd6 JUMPI
---
0xb29: V896 = 0x0
0xb2c: REVERT 0x0 0x0
0xb2d: JUMPDEST 
0xb2e: V897 = 0x25f
0xb31: THROW 
0xb32: JUMPDEST 
0xb34: V898 = 0x1
0xb36: V899 = 0xa0
0xb38: V900 = 0x2
0xb3a: V901 = EXP 0x2 0xa0
0xb3b: V902 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3c: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xb3d: V904 = 0x40
0xb3f: V905 = M[0x40]
0xb42: V906 = 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb64: M[V905] = 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb66: V907 = 0xc
0xb68: V908 = ADD 0xc V905
0xb6b: V909 = 0x40
0xb6d: V910 = M[0x40]
0xb70: V911 = SUB V908 V910
0xb72: V912 = SHA3 V910 V911
0xb73: V913 = 0x100000000000000000000000000000000000000000000000000000000
0xb92: V914 = DIV V912 0x100000000000000000000000000000000000000000000000000000000
0xb93: V915 = 0x40
0xb95: V916 = M[0x40]
0xb97: V917 = 0xffffffff
0xb9c: V918 = AND 0xffffffff V914
0xb9d: V919 = 0x100000000000000000000000000000000000000000000000000000000
0xbbb: V920 = MUL 0x100000000000000000000000000000000000000000000000000000000 V918
0xbbd: M[V916] = V920
0xbbe: V921 = 0x4
0xbc0: V922 = ADD 0x4 V916
0xbc1: V923 = 0x0
0xbc3: V924 = 0x40
0xbc5: V925 = M[0x40]
0xbc8: V926 = SUB V922 V925
0xbcb: V927 = GAS
0xbcc: V928 = DELEGATECALL V927 V903 V925 V926 V925 0x0
0xbd1: V929 = ISZERO V928
0xbd2: V930 = ISZERO V929
0xbd3: V931 = 0x25f
0xbd6: THROWI V930
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xbd7
[0xbd7:0xc3f]
---
Predecessors: [0xb29]
Successors: [0xc40]
---
0xbd7 PUSH1 0x0
0xbd9 DUP1
0xbda REVERT
0xbdb JUMPDEST
0xbdc POP
0xbdd POP
0xbde POP
0xbdf PUSH2 0x276
0xbe2 JUMP
0xbe3 JUMPDEST
0xbe4 PUSH1 0x40
0xbe6 MLOAD
0xbe7 PUSH1 0x52
0xbe9 DUP1
0xbea PUSH2 0x2b9
0xbed DUP4
0xbee CODECOPY
0xbef ADD
0xbf0 SWAP1
0xbf1 JUMP
0xbf2 JUMPDEST
0xbf3 PUSH1 0x35
0xbf5 DUP1
0xbf6 PUSH2 0x284
0xbf9 PUSH1 0x0
0xbfb CODECOPY
0xbfc PUSH1 0x0
0xbfe RETURN
0xbff STOP
0xc00 PUSH1 0x80
0xc02 PUSH1 0x40
0xc04 MSTORE
0xc05 PUSH1 0x0
0xc07 DUP1
0xc08 REVERT
0xc09 STOP
0xc0a LOG1
0xc0b PUSH6 0x627a7a723058
0xc12 SHA3
0xc13 MISSING 0xc1
0xc14 SHL
0xc15 MISSING 0xab
0xc16 JUMP
0xc17 MISSING 0xad
0xc18 RETURNDATASIZE
0xc19 MISSING 0xd5
0xc1a MISSING 0xf9
0xc1b DUP8
0xc1c EXP
0xc1d MISSING 0xba
0xc1e EQ
0xc1f BYTE
0xc20 MISSING 0xc
0xc21 CODESIZE
0xc22 STOP
0xc23 DUP3
0xc24 GAS
0xc25 MISSING 0xa6
0xc26 MISSING 0xa6
0xc27 PUSH16 0x2f2c6a3a3c282f4dc681db0029608060
0xc38 BLOCKHASH
0xc39 MSTORE
0xc3a CALLVALUE
0xc3b DUP1
0xc3c ISZERO
0xc3d PUSH1 0xf
0xc3f JUMPI
---
0xbd7: V932 = 0x0
0xbda: REVERT 0x0 0x0
0xbdb: JUMPDEST 
0xbdf: V933 = 0x276
0xbe2: THROW 
0xbe3: JUMPDEST 
0xbe4: V934 = 0x40
0xbe6: V935 = M[0x40]
0xbe7: V936 = 0x52
0xbea: V937 = 0x2b9
0xbee: CODECOPY V935 0x2b9 0x52
0xbef: V938 = ADD 0x52 V935
0xbf1: JUMP S0
0xbf2: JUMPDEST 
0xbf3: V939 = 0x35
0xbf6: V940 = 0x284
0xbf9: V941 = 0x0
0xbfb: CODECOPY 0x0 0x284 0x35
0xbfc: V942 = 0x0
0xbfe: RETURN 0x0 0x35
0xbff: STOP 
0xc00: V943 = 0x80
0xc02: V944 = 0x40
0xc04: M[0x40] = 0x80
0xc05: V945 = 0x0
0xc08: REVERT 0x0 0x0
0xc09: STOP 
0xc0a: LOG S0 S1 S2
0xc0b: V946 = 0x627a7a723058
0xc12: V947 = SHA3 0x627a7a723058 S3
0xc13: MISSING 0xc1
0xc14: V948 = SHL S0 S1
0xc15: MISSING 0xab
0xc16: JUMP S0
0xc17: MISSING 0xad
0xc18: V949 = RETURNDATASIZE
0xc19: MISSING 0xd5
0xc1a: MISSING 0xf9
0xc1c: V950 = EXP S7 S0
0xc1d: MISSING 0xba
0xc1e: V951 = EQ S0 S1
0xc1f: V952 = BYTE V951 S2
0xc20: MISSING 0xc
0xc21: V953 = CODESIZE
0xc22: STOP 
0xc24: V954 = GAS
0xc25: MISSING 0xa6
0xc26: MISSING 0xa6
0xc27: V955 = 0x2f2c6a3a3c282f4dc681db0029608060
0xc38: V956 = BLOCKHASH 0x2f2c6a3a3c282f4dc681db0029608060
0xc39: M[V956] = S0
0xc3a: V957 = CALLVALUE
0xc3c: V958 = ISZERO V957
0xc3d: V959 = 0xf
0xc3f: THROWI V958
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V938, V947, V948, V949, V950, S1, S2, S3, S4, S5, S6, S7, V952, V953, V954, S2, S0, S1, S2, V957]
Exit stack: []

================================

Block 0xc40
[0xc40:0xcb6]
---
Predecessors: [0xbd7]
Successors: []
---
0xc40 PUSH1 0x0
0xc42 DUP1
0xc43 REVERT
0xc44 JUMPDEST
0xc45 POP
0xc46 PUSH1 0x35
0xc48 DUP1
0xc49 PUSH1 0x1d
0xc4b PUSH1 0x0
0xc4d CODECOPY
0xc4e PUSH1 0x0
0xc50 RETURN
0xc51 STOP
0xc52 PUSH1 0x80
0xc54 PUSH1 0x40
0xc56 MSTORE
0xc57 PUSH1 0x0
0xc59 DUP1
0xc5a REVERT
0xc5b STOP
0xc5c LOG1
0xc5d PUSH6 0x627a7a723058
0xc64 SHA3
0xc65 SWAP1
0xc66 PUSH15 0xc8a35dbf08366cf986f5bafa3e5526
0xc76 MISSING 0xd7
0xc77 MISSING 0xfb
0xc78 POP
0xc79 MISSING 0xe2
0xc7a MISSING 0xa8
0xc7b SWAP9
0xc7c CALLDATALOAD
0xc7d SLOAD
0xc7e MISSING 0xfc
0xc7f PUSH4 0xb7f615c9
0xc84 DUP16
0xc85 STOP
0xc86 MISSING 0x29
0xc87 LOG1
0xc88 PUSH6 0x627a7a723058
0xc8f SHA3
0xc90 SELFDESTRUCT
0xc91 MISSING 0xc0
0xc92 MISSING 0xab
0xc93 MISSING 0xcf
0xc94 LOG3
0xc95 MLOAD
0xc96 DUP3
0xc97 SWAP11
0xc98 GAS
0xc99 DUP5
0xc9a PUSH28 0xd174fca488f123c9db2eb37d05ba47bfb66d1119fb0029
---
0xc40: V960 = 0x0
0xc43: REVERT 0x0 0x0
0xc44: JUMPDEST 
0xc46: V961 = 0x35
0xc49: V962 = 0x1d
0xc4b: V963 = 0x0
0xc4d: CODECOPY 0x0 0x1d 0x35
0xc4e: V964 = 0x0
0xc50: RETURN 0x0 0x35
0xc51: STOP 
0xc52: V965 = 0x80
0xc54: V966 = 0x40
0xc56: M[0x40] = 0x80
0xc57: V967 = 0x0
0xc5a: REVERT 0x0 0x0
0xc5b: STOP 
0xc5c: LOG S0 S1 S2
0xc5d: V968 = 0x627a7a723058
0xc64: V969 = SHA3 0x627a7a723058 S3
0xc66: V970 = 0xc8a35dbf08366cf986f5bafa3e5526
0xc76: MISSING 0xd7
0xc77: MISSING 0xfb
0xc79: MISSING 0xe2
0xc7a: MISSING 0xa8
0xc7c: V971 = CALLDATALOAD S9
0xc7d: V972 = S[V971]
0xc7e: MISSING 0xfc
0xc7f: V973 = 0xb7f615c9
0xc85: STOP 
0xc86: MISSING 0x29
0xc87: LOG S0 S1 S2
0xc88: V974 = 0x627a7a723058
0xc8f: V975 = SHA3 0x627a7a723058 S3
0xc90: SELFDESTRUCT V975
0xc91: MISSING 0xc0
0xc92: MISSING 0xab
0xc93: MISSING 0xcf
0xc94: LOG S0 S1 S2 S3 S4
0xc95: V976 = M[S5]
0xc98: V977 = GAS
0xc9a: V978 = 0xd174fca488f123c9db2eb37d05ba47bfb66d1119fb0029
---
Entry stack: [V957]
Stack pops: 0
Stack additions: [0xc8a35dbf08366cf986f5bafa3e5526, S4, V969, V972, S1, S2, S3, S4, S5, S6, S7, S8, S0, S14, 0xb7f615c9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0xd174fca488f123c9db2eb37d05ba47bfb66d1119fb0029, S7, V977, S15, V976, S6, S7, S8, S9, S10, S11, S12, S13, S14, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x41b0a3ed
Entry block: 0x66
Exit block: 0xbf
Body: 0x66, 0xbf, 0x102, 0x110, 0x14b, 0x154, 0x163, 0x182, 0x18b

Function 1:
Public function signature: 0x7cadfa34
Entry block: 0xdb
Exit block: 0xe3
Body: 0xdb, 0xe3, 0x195, 0x1fe, 0x202, 0x20d, 0x216, 0x274, 0x278, 0x283, 0x28c, 0x2a2, 0x2a6, 0x2de

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xe5
Exit block: 0xbf
Body: 0xbf, 0xe5, 0xed, 0xf1, 0x2ea

Function 3:
Public function signature: 0xbe9a6555
Entry block: 0xfa
Exit block: 0xe3
Body: 0xe3, 0xfa, 0x2f9, 0x309, 0x30d, 0x31b

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

Function 5:
Private function
Entry block: 0x92b
Exit block: 0x89e
Body: 0x2e7, 0x31b, 0x320, 0x3c9, 0x3d5, 0x3d9, 0x3e5, 0x3eb, 0x3ff, 0x404, 0x42c, 0x43d, 0x474, 0x492, 0x49f, 0x4f7, 0x504, 0x55e, 0x56b, 0x596, 0x5cd, 0x5d1, 0x62d, 0x636, 0x64c, 0x682, 0x6dc, 0x6e5, 0x6fb, 0x731, 0x742, 0x74e, 0x77d, 0x786, 0x79c, 0x7e0, 0x7e8, 0x7ed, 0x7f4, 0x802, 0x837, 0x84a, 0x879, 0x87b, 0x89e, 0x8a3, 0x915, 0x92b, 0x939, 0x960, 0x969, 0x974, 0x978

