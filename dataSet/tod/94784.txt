Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x161]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2c4e722e
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x161
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2c4e722e
0x3b: V13 = EQ V11 0x2c4e722e
0x3c: V14 = 0x161
0x3f: JUMPI 0x161 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x186]
---
0x40 DUP1
0x41 PUSH4 0x521eb273
0x46 EQ
0x47 PUSH2 0x186
0x4a JUMPI
---
0x41: V15 = 0x521eb273
0x46: V16 = EQ 0x521eb273 V11
0x47: V17 = 0x186
0x4a: JUMPI 0x186 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1b5]
---
0x4b DUP1
0x4c PUSH4 0x74e7493b
0x51 EQ
0x52 PUSH2 0x1b5
0x55 JUMPI
---
0x4c: V18 = 0x74e7493b
0x51: V19 = EQ 0x74e7493b V11
0x52: V20 = 0x1b5
0x55: JUMPI 0x1b5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1cd]
---
0x56 DUP1
0x57 PUSH4 0x83197ef0
0x5c EQ
0x5d PUSH2 0x1cd
0x60 JUMPI
---
0x57: V21 = 0x83197ef0
0x5c: V22 = EQ 0x83197ef0 V11
0x5d: V23 = 0x1cd
0x60: JUMPI 0x1cd V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1e0]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x1e0
0x6b JUMPI
---
0x62: V24 = 0x8da5cb5b
0x67: V25 = EQ 0x8da5cb5b V11
0x68: V26 = 0x1e0
0x6b: JUMPI 0x1e0 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1f3]
---
0x6c DUP1
0x6d PUSH4 0xf2fde38b
0x72 EQ
0x73 PUSH2 0x1f3
0x76 JUMPI
---
0x6d: V27 = 0xf2fde38b
0x72: V28 = EQ 0xf2fde38b V11
0x73: V29 = 0x1f3
0x76: JUMPI 0x1f3 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x212]
---
0x77 DUP1
0x78 PUSH4 0xf5074f41
0x7d EQ
0x7e PUSH2 0x212
0x81 JUMPI
---
0x78: V30 = 0xf5074f41
0x7d: V31 = EQ 0xf5074f41 V11
0x7e: V32 = 0x212
0x81: JUMPI 0x212 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x231]
---
0x82 DUP1
0x83 PUSH4 0xfc0c546a
0x88 EQ
0x89 PUSH2 0x231
0x8c JUMPI
---
0x83: V33 = 0xfc0c546a
0x88: V34 = EQ 0xfc0c546a V11
0x89: V35 = 0x231
0x8c: JUMPI 0x231 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0xc6]
---
Predecessors: [0x0, 0x82]
Successors: [0xc7, 0xcb]
---
0x8d JUMPDEST
0x8e PUSH1 0x3
0x90 SLOAD
0x91 PUSH1 0x2
0x93 SLOAD
0x94 CALLVALUE
0x95 SWAP2
0x96 DUP3
0x97 MUL
0x98 SWAP2
0x99 PUSH1 0x1
0x9b PUSH1 0xa0
0x9d PUSH1 0x2
0x9f EXP
0xa0 SUB
0xa1 SWAP1
0xa2 SWAP2
0xa3 AND
0xa4 SWAP1
0xa5 DUP1
0xa6 ISZERO
0xa7 PUSH2 0x8fc
0xaa MUL
0xab SWAP1
0xac PUSH1 0x40
0xae MLOAD
0xaf PUSH1 0x0
0xb1 PUSH1 0x40
0xb3 MLOAD
0xb4 DUP1
0xb5 DUP4
0xb6 SUB
0xb7 DUP2
0xb8 DUP6
0xb9 DUP9
0xba DUP9
0xbb CALL
0xbc SWAP4
0xbd POP
0xbe POP
0xbf POP
0xc0 POP
0xc1 ISZERO
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0x8d: JUMPDEST 
0x8e: V36 = 0x3
0x90: V37 = S[0x3]
0x91: V38 = 0x2
0x93: V39 = S[0x2]
0x94: V40 = CALLVALUE
0x97: V41 = MUL V40 V37
0x99: V42 = 0x1
0x9b: V43 = 0xa0
0x9d: V44 = 0x2
0x9f: V45 = EXP 0x2 0xa0
0xa0: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3: V47 = AND V39 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V48 = ISZERO V40
0xa7: V49 = 0x8fc
0xaa: V50 = MUL 0x8fc V48
0xac: V51 = 0x40
0xae: V52 = M[0x40]
0xaf: V53 = 0x0
0xb1: V54 = 0x40
0xb3: V55 = M[0x40]
0xb6: V56 = SUB V52 V55
0xbb: V57 = CALL V50 V47 V40 V55 V56 V55 0x0
0xc1: V58 = ISZERO V57
0xc2: V59 = ISZERO V58
0xc3: V60 = 0xcb
0xc6: JUMPI 0xcb V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0x8d]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V61 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0xcb
[0xcb:0x13e]
---
Predecessors: [0x8d]
Successors: [0x13f, 0x143]
---
0xcb JUMPDEST
0xcc PUSH1 0x1
0xce SLOAD
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 AND
0xd8 PUSH4 0xa9059cbb
0xdd CALLER
0xde DUP4
0xdf PUSH1 0x0
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 MSTORE
0xe8 PUSH1 0x40
0xea MLOAD
0xeb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x109 PUSH4 0xffffffff
0x10e DUP6
0x10f AND
0x110 MUL
0x111 DUP2
0x112 MSTORE
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b SWAP1
0x11c SWAP3
0x11d AND
0x11e PUSH1 0x4
0x120 DUP4
0x121 ADD
0x122 MSTORE
0x123 PUSH1 0x24
0x125 DUP3
0x126 ADD
0x127 MSTORE
0x128 PUSH1 0x44
0x12a ADD
0x12b PUSH1 0x20
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 DUP4
0x132 SUB
0x133 DUP2
0x134 PUSH1 0x0
0x136 DUP8
0x137 DUP1
0x138 EXTCODESIZE
0x139 ISZERO
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0xcb: JUMPDEST 
0xcc: V62 = 0x1
0xce: V63 = S[0x1]
0xcf: V64 = 0x1
0xd1: V65 = 0xa0
0xd3: V66 = 0x2
0xd5: V67 = EXP 0x2 0xa0
0xd6: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xd8: V70 = 0xa9059cbb
0xdd: V71 = CALLER
0xdf: V72 = 0x0
0xe1: V73 = 0x40
0xe3: V74 = M[0x40]
0xe4: V75 = 0x20
0xe6: V76 = ADD 0x20 V74
0xe7: M[V76] = 0x0
0xe8: V77 = 0x40
0xea: V78 = M[0x40]
0xeb: V79 = 0x100000000000000000000000000000000000000000000000000000000
0x109: V80 = 0xffffffff
0x10f: V81 = AND 0xa9059cbb 0xffffffff
0x110: V82 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x112: M[V78] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x113: V83 = 0x1
0x115: V84 = 0xa0
0x117: V85 = 0x2
0x119: V86 = EXP 0x2 0xa0
0x11a: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V88 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V89 = 0x4
0x121: V90 = ADD V78 0x4
0x122: M[V90] = V88
0x123: V91 = 0x24
0x126: V92 = ADD V78 0x24
0x127: M[V92] = V41
0x128: V93 = 0x44
0x12a: V94 = ADD 0x44 V78
0x12b: V95 = 0x20
0x12d: V96 = 0x40
0x12f: V97 = M[0x40]
0x132: V98 = SUB V94 V97
0x134: V99 = 0x0
0x138: V100 = EXTCODESIZE V69
0x139: V101 = ISZERO V100
0x13a: V102 = ISZERO V101
0x13b: V103 = 0x143
0x13e: JUMPI 0x143 V102
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [S0, V69, 0xa9059cbb, V94, 0x20, V97, V98, V97, 0x0, V69]
Exit stack: [V11, V41, V69, 0xa9059cbb, V94, 0x20, V97, V98, V97, 0x0, V69]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0xcb]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V104 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V11, V41, V69, 0xa9059cbb, V94, 0x20, V97, V98, V97, 0x0, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41, V69, 0xa9059cbb, V94, 0x20, V97, V98, V97, 0x0, V69]

================================

Block 0x143
[0x143:0x14f]
---
Predecessors: [0xcb]
Successors: [0x150, 0x154]
---
0x143 JUMPDEST
0x144 PUSH2 0x2c6
0x147 GAS
0x148 SUB
0x149 CALL
0x14a ISZERO
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x143: JUMPDEST 
0x144: V105 = 0x2c6
0x147: V106 = GAS
0x148: V107 = SUB V106 0x2c6
0x149: V108 = CALL V107 V69 0x0 V97 V98 V97 0x20
0x14a: V109 = ISZERO V108
0x14b: V110 = ISZERO V109
0x14c: V111 = 0x154
0x14f: JUMPI 0x154 V110
---
Entry stack: [V11, V41, V69, 0xa9059cbb, V94, 0x20, V97, V98, V97, 0x0, V69]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V41, V69, 0xa9059cbb, V94]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x143]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V112 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V11, V41, V69, 0xa9059cbb, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41, V69, 0xa9059cbb, V94]

================================

Block 0x154
[0x154:0x160]
---
Predecessors: [0x143]
Successors: []
---
0x154 JUMPDEST
0x155 POP
0x156 POP
0x157 POP
0x158 PUSH1 0x40
0x15a MLOAD
0x15b DUP1
0x15c MLOAD
0x15d POP
0x15e POP
0x15f POP
0x160 STOP
---
0x154: JUMPDEST 
0x158: V113 = 0x40
0x15a: V114 = M[0x40]
0x15c: V115 = M[V114]
0x160: STOP 
---
Entry stack: [V11, V41, V69, 0xa9059cbb, V94]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x161
[0x161:0x167]
---
Predecessors: [0xd]
Successors: [0x168, 0x16c]
---
0x161 JUMPDEST
0x162 CALLVALUE
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x161: JUMPDEST 
0x162: V116 = CALLVALUE
0x163: V117 = ISZERO V116
0x164: V118 = 0x16c
0x167: JUMPI 0x16c V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x161]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V119 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x161]
Successors: [0x244]
---
0x16c JUMPDEST
0x16d PUSH2 0x174
0x170 PUSH2 0x244
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V120 = 0x174
0x170: V121 = 0x244
0x173: JUMP 0x244
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x174]
Exit stack: [V11, 0x174]

================================

Block 0x174
[0x174:0x185]
---
Predecessors: [0x244]
Successors: []
---
0x174 JUMPDEST
0x175 PUSH1 0x40
0x177 MLOAD
0x178 SWAP1
0x179 DUP2
0x17a MSTORE
0x17b PUSH1 0x20
0x17d ADD
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 SWAP2
0x183 SUB
0x184 SWAP1
0x185 RETURN
---
0x174: JUMPDEST 
0x175: V122 = 0x40
0x177: V123 = M[0x40]
0x17a: M[V123] = V203
0x17b: V124 = 0x20
0x17d: V125 = ADD 0x20 V123
0x17e: V126 = 0x40
0x180: V127 = M[0x40]
0x183: V128 = SUB V125 V127
0x185: RETURN V127 V128
---
Entry stack: [V11, 0x174, V203]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x174]

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x40]
Successors: [0x18d, 0x191]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V129 = CALLVALUE
0x188: V130 = ISZERO V129
0x189: V131 = 0x191
0x18c: JUMPI 0x191 V130
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x186]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V132 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x191
[0x191:0x198]
---
Predecessors: [0x186]
Successors: [0x24a]
---
0x191 JUMPDEST
0x192 PUSH2 0x199
0x195 PUSH2 0x24a
0x198 JUMP
---
0x191: JUMPDEST 
0x192: V133 = 0x199
0x195: V134 = 0x24a
0x198: JUMP 0x24a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x199]
Exit stack: [V11, 0x199]

================================

Block 0x199
[0x199:0x1b4]
---
Predecessors: [0x24a, 0x2a2, 0x373]
Successors: []
---
0x199 JUMPDEST
0x19a PUSH1 0x40
0x19c MLOAD
0x19d PUSH1 0x1
0x19f PUSH1 0xa0
0x1a1 PUSH1 0x2
0x1a3 EXP
0x1a4 SUB
0x1a5 SWAP1
0x1a6 SWAP2
0x1a7 AND
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 SWAP2
0x1b2 SUB
0x1b3 SWAP1
0x1b4 RETURN
---
0x199: JUMPDEST 
0x19a: V135 = 0x40
0x19c: V136 = M[0x40]
0x19d: V137 = 0x1
0x19f: V138 = 0xa0
0x1a1: V139 = 0x2
0x1a3: V140 = EXP 0x2 0xa0
0x1a4: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a7: V142 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: M[V136] = V142
0x1aa: V143 = 0x20
0x1ac: V144 = ADD 0x20 V136
0x1ad: V145 = 0x40
0x1af: V146 = M[0x40]
0x1b2: V147 = SUB V144 V146
0x1b4: RETURN V146 V147
---
Entry stack: [V11, 0x199, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x199]

================================

Block 0x1b5
[0x1b5:0x1bb]
---
Predecessors: [0x4b]
Successors: [0x1bc, 0x1c0]
---
0x1b5 JUMPDEST
0x1b6 CALLVALUE
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V148 = CALLVALUE
0x1b7: V149 = ISZERO V148
0x1b8: V150 = 0x1c0
0x1bb: JUMPI 0x1c0 V149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1b5]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V151 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c0
[0x1c0:0x1ca]
---
Predecessors: [0x1b5]
Successors: [0x259]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0x1cb
0x1c4 PUSH1 0x4
0x1c6 CALLDATALOAD
0x1c7 PUSH2 0x259
0x1ca JUMP
---
0x1c0: JUMPDEST 
0x1c1: V152 = 0x1cb
0x1c4: V153 = 0x4
0x1c6: V154 = CALLDATALOAD 0x4
0x1c7: V155 = 0x259
0x1ca: JUMP 0x259
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1cb, V154]
Exit stack: [V11, 0x1cb, V154]

================================

Block 0x1cb
[0x1cb:0x1cc]
---
Predecessors: [0x274, 0x2e1]
Successors: []
---
0x1cb JUMPDEST
0x1cc STOP
---
0x1cb: JUMPDEST 
0x1cc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x56]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V156 = CALLVALUE
0x1cf: V157 = ISZERO V156
0x1d0: V158 = 0x1d8
0x1d3: JUMPI 0x1d8 V157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V159 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d8
[0x1d8:0x1df]
---
Predecessors: [0x1cd]
Successors: [0x279]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x1cb
0x1dc PUSH2 0x279
0x1df JUMP
---
0x1d8: JUMPDEST 
0x1d9: V160 = 0x1cb
0x1dc: V161 = 0x279
0x1df: JUMP 0x279
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1cb]
Exit stack: [V11, 0x1cb]

================================

Block 0x1e0
[0x1e0:0x1e6]
---
Predecessors: [0x61]
Successors: [0x1e7, 0x1eb]
---
0x1e0 JUMPDEST
0x1e1 CALLVALUE
0x1e2 ISZERO
0x1e3 PUSH2 0x1eb
0x1e6 JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V162 = CALLVALUE
0x1e2: V163 = ISZERO V162
0x1e3: V164 = 0x1eb
0x1e6: JUMPI 0x1eb V163
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e7
[0x1e7:0x1ea]
---
Predecessors: [0x1e0]
Successors: []
---
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea REVERT
---
0x1e7: V165 = 0x0
0x1ea: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1eb
[0x1eb:0x1f2]
---
Predecessors: [0x1e0]
Successors: [0x2a2]
---
0x1eb JUMPDEST
0x1ec PUSH2 0x199
0x1ef PUSH2 0x2a2
0x1f2 JUMP
---
0x1eb: JUMPDEST 
0x1ec: V166 = 0x199
0x1ef: V167 = 0x2a2
0x1f2: JUMP 0x2a2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x199]
Exit stack: [V11, 0x199]

================================

Block 0x1f3
[0x1f3:0x1f9]
---
Predecessors: [0x6c]
Successors: [0x1fa, 0x1fe]
---
0x1f3 JUMPDEST
0x1f4 CALLVALUE
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V168 = CALLVALUE
0x1f5: V169 = ISZERO V168
0x1f6: V170 = 0x1fe
0x1f9: JUMPI 0x1fe V169
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V171 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fe
[0x1fe:0x211]
---
Predecessors: [0x1f3]
Successors: [0x2b1]
---
0x1fe JUMPDEST
0x1ff PUSH2 0x1cb
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a PUSH1 0x4
0x20c CALLDATALOAD
0x20d AND
0x20e PUSH2 0x2b1
0x211 JUMP
---
0x1fe: JUMPDEST 
0x1ff: V172 = 0x1cb
0x202: V173 = 0x1
0x204: V174 = 0xa0
0x206: V175 = 0x2
0x208: V176 = EXP 0x2 0xa0
0x209: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V178 = 0x4
0x20c: V179 = CALLDATALOAD 0x4
0x20d: V180 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V181 = 0x2b1
0x211: JUMP 0x2b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1cb, V180]
Exit stack: [V11, 0x1cb, V180]

================================

Block 0x212
[0x212:0x218]
---
Predecessors: [0x77]
Successors: [0x219, 0x21d]
---
0x212 JUMPDEST
0x213 CALLVALUE
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x212: JUMPDEST 
0x213: V182 = CALLVALUE
0x214: V183 = ISZERO V182
0x215: V184 = 0x21d
0x218: JUMPI 0x21d V183
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x212]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V185 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21d
[0x21d:0x230]
---
Predecessors: [0x212]
Successors: [0x34c]
---
0x21d JUMPDEST
0x21e PUSH2 0x1cb
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 PUSH1 0x4
0x22b CALLDATALOAD
0x22c AND
0x22d PUSH2 0x34c
0x230 JUMP
---
0x21d: JUMPDEST 
0x21e: V186 = 0x1cb
0x221: V187 = 0x1
0x223: V188 = 0xa0
0x225: V189 = 0x2
0x227: V190 = EXP 0x2 0xa0
0x228: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V192 = 0x4
0x22b: V193 = CALLDATALOAD 0x4
0x22c: V194 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V195 = 0x34c
0x230: JUMP 0x34c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1cb, V194]
Exit stack: [V11, 0x1cb, V194]

================================

Block 0x231
[0x231:0x237]
---
Predecessors: [0x82]
Successors: [0x238, 0x23c]
---
0x231 JUMPDEST
0x232 CALLVALUE
0x233 ISZERO
0x234 PUSH2 0x23c
0x237 JUMPI
---
0x231: JUMPDEST 
0x232: V196 = CALLVALUE
0x233: V197 = ISZERO V196
0x234: V198 = 0x23c
0x237: JUMPI 0x23c V197
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x238
[0x238:0x23b]
---
Predecessors: [0x231]
Successors: []
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b REVERT
---
0x238: V199 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x23c
[0x23c:0x243]
---
Predecessors: [0x231]
Successors: [0x373]
---
0x23c JUMPDEST
0x23d PUSH2 0x199
0x240 PUSH2 0x373
0x243 JUMP
---
0x23c: JUMPDEST 
0x23d: V200 = 0x199
0x240: V201 = 0x373
0x243: JUMP 0x373
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x199]
Exit stack: [V11, 0x199]

================================

Block 0x244
[0x244:0x249]
---
Predecessors: [0x16c]
Successors: [0x174]
---
0x244 JUMPDEST
0x245 PUSH1 0x3
0x247 SLOAD
0x248 DUP2
0x249 JUMP
---
0x244: JUMPDEST 
0x245: V202 = 0x3
0x247: V203 = S[0x3]
0x249: JUMP 0x174
---
Entry stack: [V11, 0x174]
Stack pops: 1
Stack additions: [S0, V203]
Exit stack: [V11, 0x174, V203]

================================

Block 0x24a
[0x24a:0x258]
---
Predecessors: [0x191]
Successors: [0x199]
---
0x24a JUMPDEST
0x24b PUSH1 0x2
0x24d SLOAD
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 AND
0x257 DUP2
0x258 JUMP
---
0x24a: JUMPDEST 
0x24b: V204 = 0x2
0x24d: V205 = S[0x2]
0x24e: V206 = 0x1
0x250: V207 = 0xa0
0x252: V208 = 0x2
0x254: V209 = EXP 0x2 0xa0
0x255: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x258: JUMP 0x199
---
Entry stack: [V11, 0x199]
Stack pops: 1
Stack additions: [S0, V211]
Exit stack: [V11, 0x199, V211]

================================

Block 0x259
[0x259:0x26f]
---
Predecessors: [0x1c0]
Successors: [0x270, 0x274]
---
0x259 JUMPDEST
0x25a PUSH1 0x0
0x25c SLOAD
0x25d CALLER
0x25e PUSH1 0x1
0x260 PUSH1 0xa0
0x262 PUSH1 0x2
0x264 EXP
0x265 SUB
0x266 SWAP1
0x267 DUP2
0x268 AND
0x269 SWAP2
0x26a AND
0x26b EQ
0x26c PUSH2 0x274
0x26f JUMPI
---
0x259: JUMPDEST 
0x25a: V212 = 0x0
0x25c: V213 = S[0x0]
0x25d: V214 = CALLER
0x25e: V215 = 0x1
0x260: V216 = 0xa0
0x262: V217 = 0x2
0x264: V218 = EXP 0x2 0xa0
0x265: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x268: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x26a: V221 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V222 = EQ V221 V220
0x26c: V223 = 0x274
0x26f: JUMPI 0x274 V222
---
Entry stack: [V11, 0x1cb, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V154]

================================

Block 0x270
[0x270:0x273]
---
Predecessors: [0x259]
Successors: []
---
0x270 PUSH1 0x0
0x272 DUP1
0x273 REVERT
---
0x270: V224 = 0x0
0x273: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1cb, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V154]

================================

Block 0x274
[0x274:0x278]
---
Predecessors: [0x259]
Successors: [0x1cb]
---
0x274 JUMPDEST
0x275 PUSH1 0x3
0x277 SSTORE
0x278 JUMP
---
0x274: JUMPDEST 
0x275: V225 = 0x3
0x277: S[0x3] = V154
0x278: JUMP 0x1cb
---
Entry stack: [V11, 0x1cb, V154]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x279
[0x279:0x28f]
---
Predecessors: [0x1d8]
Successors: [0x290, 0x294]
---
0x279 JUMPDEST
0x27a PUSH1 0x0
0x27c SLOAD
0x27d CALLER
0x27e PUSH1 0x1
0x280 PUSH1 0xa0
0x282 PUSH1 0x2
0x284 EXP
0x285 SUB
0x286 SWAP1
0x287 DUP2
0x288 AND
0x289 SWAP2
0x28a AND
0x28b EQ
0x28c PUSH2 0x294
0x28f JUMPI
---
0x279: JUMPDEST 
0x27a: V226 = 0x0
0x27c: V227 = S[0x0]
0x27d: V228 = CALLER
0x27e: V229 = 0x1
0x280: V230 = 0xa0
0x282: V231 = 0x2
0x284: V232 = EXP 0x2 0xa0
0x285: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x288: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x28a: V235 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V236 = EQ V235 V234
0x28c: V237 = 0x294
0x28f: JUMPI 0x294 V236
---
Entry stack: [V11, 0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x279]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V238 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb]

================================

Block 0x294
[0x294:0x2a1]
---
Predecessors: [0x279]
Successors: []
---
0x294 JUMPDEST
0x295 PUSH1 0x0
0x297 SLOAD
0x298 PUSH1 0x1
0x29a PUSH1 0xa0
0x29c PUSH1 0x2
0x29e EXP
0x29f SUB
0x2a0 AND
0x2a1 SELFDESTRUCT
---
0x294: JUMPDEST 
0x295: V239 = 0x0
0x297: V240 = S[0x0]
0x298: V241 = 0x1
0x29a: V242 = 0xa0
0x29c: V243 = 0x2
0x29e: V244 = EXP 0x2 0xa0
0x29f: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a0: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2a1: SELFDESTRUCT V246
---
Entry stack: [V11, 0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb]

================================

Block 0x2a2
[0x2a2:0x2b0]
---
Predecessors: [0x1eb]
Successors: [0x199]
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x0
0x2a5 SLOAD
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae AND
0x2af DUP2
0x2b0 JUMP
---
0x2a2: JUMPDEST 
0x2a3: V247 = 0x0
0x2a5: V248 = S[0x0]
0x2a6: V249 = 0x1
0x2a8: V250 = 0xa0
0x2aa: V251 = 0x2
0x2ac: V252 = EXP 0x2 0xa0
0x2ad: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ae: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x2b0: JUMP 0x199
---
Entry stack: [V11, 0x199]
Stack pops: 1
Stack additions: [S0, V254]
Exit stack: [V11, 0x199, V254]

================================

Block 0x2b1
[0x2b1:0x2c7]
---
Predecessors: [0x1fe]
Successors: [0x2c8, 0x2cc]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x0
0x2b4 SLOAD
0x2b5 CALLER
0x2b6 PUSH1 0x1
0x2b8 PUSH1 0xa0
0x2ba PUSH1 0x2
0x2bc EXP
0x2bd SUB
0x2be SWAP1
0x2bf DUP2
0x2c0 AND
0x2c1 SWAP2
0x2c2 AND
0x2c3 EQ
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V255 = 0x0
0x2b4: V256 = S[0x0]
0x2b5: V257 = CALLER
0x2b6: V258 = 0x1
0x2b8: V259 = 0xa0
0x2ba: V260 = 0x2
0x2bc: V261 = EXP 0x2 0xa0
0x2bd: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c0: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x2c2: V264 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V265 = EQ V264 V263
0x2c4: V266 = 0x2cc
0x2c7: JUMPI 0x2cc V265
---
Entry stack: [V11, 0x1cb, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V180]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2b1]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V267 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1cb, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V180]

================================

Block 0x2cc
[0x2cc:0x2dc]
---
Predecessors: [0x2b1]
Successors: [0x2dd, 0x2e1]
---
0x2cc JUMPDEST
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 DUP2
0x2d6 AND
0x2d7 ISZERO
0x2d8 ISZERO
0x2d9 PUSH2 0x2e1
0x2dc JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V268 = 0x1
0x2cf: V269 = 0xa0
0x2d1: V270 = 0x2
0x2d3: V271 = EXP 0x2 0xa0
0x2d4: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d6: V273 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V274 = ISZERO V273
0x2d8: V275 = ISZERO V274
0x2d9: V276 = 0x2e1
0x2dc: JUMPI 0x2e1 V275
---
Entry stack: [V11, 0x1cb, V180]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1cb, V180]

================================

Block 0x2dd
[0x2dd:0x2e0]
---
Predecessors: [0x2cc]
Successors: []
---
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 REVERT
---
0x2dd: V277 = 0x0
0x2e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1cb, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V180]

================================

Block 0x2e1
[0x2e1:0x34b]
---
Predecessors: [0x2cc]
Successors: [0x1cb]
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x0
0x2e4 SLOAD
0x2e5 PUSH1 0x1
0x2e7 PUSH1 0xa0
0x2e9 PUSH1 0x2
0x2eb EXP
0x2ec SUB
0x2ed DUP1
0x2ee DUP4
0x2ef AND
0x2f0 SWAP2
0x2f1 AND
0x2f2 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x313 PUSH1 0x40
0x315 MLOAD
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a SWAP2
0x31b SUB
0x31c SWAP1
0x31d LOG3
0x31e PUSH1 0x0
0x320 DUP1
0x321 SLOAD
0x322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x337 NOT
0x338 AND
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 SWAP3
0x342 SWAP1
0x343 SWAP3
0x344 AND
0x345 SWAP2
0x346 SWAP1
0x347 SWAP2
0x348 OR
0x349 SWAP1
0x34a SSTORE
0x34b JUMP
---
0x2e1: JUMPDEST 
0x2e2: V278 = 0x0
0x2e4: V279 = S[0x0]
0x2e5: V280 = 0x1
0x2e7: V281 = 0xa0
0x2e9: V282 = 0x2
0x2eb: V283 = EXP 0x2 0xa0
0x2ec: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V285 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x2f1: V286 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2f2: V287 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x313: V288 = 0x40
0x315: V289 = M[0x40]
0x316: V290 = 0x40
0x318: V291 = M[0x40]
0x31b: V292 = SUB V289 V291
0x31d: LOG V291 V292 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V286 V285
0x31e: V293 = 0x0
0x321: V294 = S[0x0]
0x322: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x337: V296 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x338: V297 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V294
0x339: V298 = 0x1
0x33b: V299 = 0xa0
0x33d: V300 = 0x2
0x33f: V301 = EXP 0x2 0xa0
0x340: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x348: V304 = OR V303 V297
0x34a: S[0x0] = V304
0x34b: JUMP 0x1cb
---
Entry stack: [V11, 0x1cb, V180]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x34c
[0x34c:0x362]
---
Predecessors: [0x21d]
Successors: [0x363, 0x367]
---
0x34c JUMPDEST
0x34d PUSH1 0x0
0x34f SLOAD
0x350 CALLER
0x351 PUSH1 0x1
0x353 PUSH1 0xa0
0x355 PUSH1 0x2
0x357 EXP
0x358 SUB
0x359 SWAP1
0x35a DUP2
0x35b AND
0x35c SWAP2
0x35d AND
0x35e EQ
0x35f PUSH2 0x367
0x362 JUMPI
---
0x34c: JUMPDEST 
0x34d: V305 = 0x0
0x34f: V306 = S[0x0]
0x350: V307 = CALLER
0x351: V308 = 0x1
0x353: V309 = 0xa0
0x355: V310 = 0x2
0x357: V311 = EXP 0x2 0xa0
0x358: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35b: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x35d: V314 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V315 = EQ V314 V313
0x35f: V316 = 0x367
0x362: JUMPI 0x367 V315
---
Entry stack: [V11, 0x1cb, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V194]

================================

Block 0x363
[0x363:0x366]
---
Predecessors: [0x34c]
Successors: []
---
0x363 PUSH1 0x0
0x365 DUP1
0x366 REVERT
---
0x363: V317 = 0x0
0x366: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1cb, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V194]

================================

Block 0x367
[0x367:0x372]
---
Predecessors: [0x34c]
Successors: []
---
0x367 JUMPDEST
0x368 DUP1
0x369 PUSH1 0x1
0x36b PUSH1 0xa0
0x36d PUSH1 0x2
0x36f EXP
0x370 SUB
0x371 AND
0x372 SELFDESTRUCT
---
0x367: JUMPDEST 
0x369: V318 = 0x1
0x36b: V319 = 0xa0
0x36d: V320 = 0x2
0x36f: V321 = EXP 0x2 0xa0
0x370: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x371: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x372: SELFDESTRUCT V323
---
Entry stack: [V11, 0x1cb, V194]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1cb, V194]

================================

Block 0x373
[0x373:0x381]
---
Predecessors: [0x23c]
Successors: [0x199]
---
0x373 JUMPDEST
0x374 PUSH1 0x1
0x376 SLOAD
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f AND
0x380 DUP2
0x381 JUMP
---
0x373: JUMPDEST 
0x374: V324 = 0x1
0x376: V325 = S[0x1]
0x377: V326 = 0x1
0x379: V327 = 0xa0
0x37b: V328 = 0x2
0x37d: V329 = EXP 0x2 0xa0
0x37e: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37f: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x381: JUMP 0x199
---
Entry stack: [V11, 0x199]
Stack pops: 1
Stack additions: [S0, V331]
Exit stack: [V11, 0x199, V331]

================================

Block 0x382
[0x382:0x3c3]
---
Predecessors: []
Successors: []
---
0x382 STOP
0x383 LOG1
0x384 PUSH6 0x627a7a723058
0x38b SHA3
0x38c SWAP3
0x38d PUSH15 0xa3189fea9ca7391385416c73d3061e
0x39d MISSING 0x4d
0x39e SHL
0x39f TIMESTAMP
0x3a0 CREATE
0x3a1 MISSING 0xcd
0x3a2 EXTCODESIZE
0x3a3 PUSH32 0x47744f08e40deb450029
---
0x382: STOP 
0x383: LOG S0 S1 S2
0x384: V332 = 0x627a7a723058
0x38b: V333 = SHA3 0x627a7a723058 S3
0x38d: V334 = 0xa3189fea9ca7391385416c73d3061e
0x39d: MISSING 0x4d
0x39e: V335 = SHL S0 S1
0x39f: V336 = TIMESTAMP
0x3a0: V337 = CREATE V336 V335 S2
0x3a1: MISSING 0xcd
0x3a2: V338 = EXTCODESIZE S0
0x3a3: V339 = 0x47744f08e40deb450029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa3189fea9ca7391385416c73d3061e, S6, S4, S5, V333, V337, 0x47744f08e40deb450029, V338]
Exit stack: []

================================

Function 0:
Public function signature: 0x2c4e722e
Entry block: 0x161
Exit block: 0x174
Body: 0x161, 0x168, 0x16c, 0x174, 0x244

Function 1:
Public function signature: 0x521eb273
Entry block: 0x186
Exit block: 0x199
Body: 0x186, 0x18d, 0x191, 0x199, 0x24a

Function 2:
Public function signature: 0x74e7493b
Entry block: 0x1b5
Exit block: 0x1cb
Body: 0x1b5, 0x1bc, 0x1c0, 0x1cb, 0x259, 0x270, 0x274

Function 3:
Public function signature: 0x83197ef0
Entry block: 0x1cd
Exit block: 0x294
Body: 0x1cd, 0x1d4, 0x1d8, 0x279, 0x290, 0x294

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x1e0
Exit block: 0x199
Body: 0x199, 0x1e0, 0x1e7, 0x1eb, 0x2a2

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x1f3
Exit block: 0x1cb
Body: 0x1cb, 0x1f3, 0x1fa, 0x1fe, 0x2b1, 0x2c8, 0x2cc, 0x2dd, 0x2e1

Function 6:
Public function signature: 0xf5074f41
Entry block: 0x212
Exit block: 0x367
Body: 0x212, 0x219, 0x21d, 0x34c, 0x363, 0x367

Function 7:
Public function signature: 0xfc0c546a
Entry block: 0x231
Exit block: 0x199
Body: 0x199, 0x231, 0x238, 0x23c, 0x373

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x154
Body: 0x8d, 0xc7, 0xcb, 0x13f, 0x143, 0x150, 0x154

