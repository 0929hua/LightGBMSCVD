Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x14a75aad
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x14a75aad
0x3c: V13 = EQ 0x14a75aad V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd2]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xd2
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xd2
0x4b: JUMPI 0xd2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe7]
---
0x4c DUP1
0x4d PUSH4 0x41c0e1b5
0x52 EQ
0x53 PUSH2 0xe7
0x56 JUMPI
---
0x4d: V18 = 0x41c0e1b5
0x52: V19 = EQ 0x41c0e1b5 V11
0x53: V20 = 0xe7
0x56: JUMPI 0xe7 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xfc]
---
0x57 DUP1
0x58 PUSH4 0x49df728c
0x5d EQ
0x5e PUSH2 0xfc
0x61 JUMPI
---
0x58: V21 = 0x49df728c
0x5d: V22 = EQ 0x49df728c V11
0x5e: V23 = 0xfc
0x61: JUMPI 0xfc V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x14d]
---
0x62 DUP1
0x63 PUSH4 0x8da5cb5b
0x68 EQ
0x69 PUSH2 0x14d
0x6c JUMPI
---
0x63: V24 = 0x8da5cb5b
0x68: V25 = EQ 0x8da5cb5b V11
0x69: V26 = 0x14d
0x6c: JUMPI 0x14d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1a2]
---
0x6d DUP1
0x6e PUSH4 0xf2fde38b
0x73 EQ
0x74 PUSH2 0x1a2
0x77 JUMPI
---
0x6e: V27 = 0xf2fde38b
0x73: V28 = EQ 0xf2fde38b V11
0x74: V29 = 0x1a2
0x77: JUMPI 0x1a2 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0xcf]
---
Predecessors: [0x7a]
Successors: [0x1db]
---
0x85 JUMPDEST
0x86 PUSH2 0xd0
0x89 PUSH1 0x4
0x8b DUP1
0x8c DUP1
0x8d CALLDATALOAD
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 SWAP1
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 SWAP1
0xa9 SWAP2
0xaa SWAP1
0xab DUP1
0xac CALLDATALOAD
0xad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2 AND
0xc3 SWAP1
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 SWAP2
0xc9 SWAP1
0xca POP
0xcb POP
0xcc PUSH2 0x1db
0xcf JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0xd0
0x89: V35 = 0x4
0x8d: V36 = CALLDATALOAD 0x4
0x8e: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xa5: V39 = 0x20
0xa7: V40 = ADD 0x20 0x4
0xac: V41 = CALLDATALOAD 0x24
0xad: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xc4: V44 = 0x20
0xc6: V45 = ADD 0x20 0x24
0xcc: V46 = 0x1db
0xcf: JUMP 0x1db
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd0, V38, V43]
Exit stack: [V11, 0xd0, V38, V43]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: [0x3a8]
Successors: []
---
0xd0 JUMPDEST
0xd1 STOP
---
0xd0: JUMPDEST 
0xd1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0x41]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V47 = CALLVALUE
0xd4: V48 = ISZERO V47
0xd5: V49 = 0xdd
0xd8: JUMPI 0xdd V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V50 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x3af]
---
0xdd JUMPDEST
0xde PUSH2 0xe5
0xe1 PUSH2 0x3af
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V51 = 0xe5
0xe1: V52 = 0x3af
0xe4: JUMP 0x3af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V11, 0xe5]

================================

Block 0xe5
[0xe5:0xe6]
---
Predecessors: [0x461]
Successors: []
---
0xe5 JUMPDEST
0xe6 STOP
---
0xe5: JUMPDEST 
0xe6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0x4c]
Successors: [0xee, 0xf2]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V53 = CALLVALUE
0xe9: V54 = ISZERO V53
0xea: V55 = 0xf2
0xed: JUMPI 0xf2 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe7]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V56 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xe7]
Successors: [0x463]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x463
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V57 = 0xfa
0xf6: V58 = 0x463
0xf9: JUMP 0x463
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V11, 0xfa]

================================

Block 0xfa
[0xfa:0xfb]
---
Predecessors: []
Successors: []
---
0xfa JUMPDEST
0xfb STOP
---
0xfa: JUMPDEST 
0xfb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfc
[0xfc:0x102]
---
Predecessors: [0x57]
Successors: [0x103, 0x107]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xfc: JUMPDEST 
0xfd: V59 = CALLVALUE
0xfe: V60 = ISZERO V59
0xff: V61 = 0x107
0x102: JUMPI 0x107 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xfc]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V62 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x132]
---
Predecessors: [0xfc]
Successors: [0x4d7]
---
0x107 JUMPDEST
0x108 PUSH2 0x133
0x10b PUSH1 0x4
0x10d DUP1
0x10e DUP1
0x10f CALLDATALOAD
0x110 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125 AND
0x126 SWAP1
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP1
0x12b SWAP2
0x12c SWAP1
0x12d POP
0x12e POP
0x12f PUSH2 0x4d7
0x132 JUMP
---
0x107: JUMPDEST 
0x108: V63 = 0x133
0x10b: V64 = 0x4
0x10f: V65 = CALLDATALOAD 0x4
0x110: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x125: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x127: V68 = 0x20
0x129: V69 = ADD 0x20 0x4
0x12f: V70 = 0x4d7
0x132: JUMP 0x4d7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x133, V67]
Exit stack: [V11, 0x133, V67]

================================

Block 0x133
[0x133:0x14c]
---
Predecessors: [0x6d0]
Successors: []
---
0x133 JUMPDEST
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 DUP3
0x139 ISZERO
0x13a ISZERO
0x13b ISZERO
0x13c ISZERO
0x13d DUP2
0x13e MSTORE
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP2
0x143 POP
0x144 POP
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 SWAP2
0x14a SUB
0x14b SWAP1
0x14c RETURN
---
0x133: JUMPDEST 
0x134: V71 = 0x40
0x136: V72 = M[0x40]
0x139: V73 = ISZERO S0
0x13a: V74 = ISZERO V73
0x13b: V75 = ISZERO V74
0x13c: V76 = ISZERO V75
0x13e: M[V72] = V76
0x13f: V77 = 0x20
0x141: V78 = ADD 0x20 V72
0x145: V79 = 0x40
0x147: V80 = M[0x40]
0x14a: V81 = SUB V78 V80
0x14c: RETURN V80 V81
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0x62]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V82 = CALLVALUE
0x14f: V83 = ISZERO V82
0x150: V84 = 0x158
0x153: JUMPI 0x158 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V85 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x14d]
Successors: [0x6d6]
---
0x158 JUMPDEST
0x159 PUSH2 0x160
0x15c PUSH2 0x6d6
0x15f JUMP
---
0x158: JUMPDEST 
0x159: V86 = 0x160
0x15c: V87 = 0x6d6
0x15f: JUMP 0x6d6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V11, 0x160]

================================

Block 0x160
[0x160:0x1a1]
---
Predecessors: [0x6d6]
Successors: []
---
0x160 JUMPDEST
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 DUP3
0x166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17b AND
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 DUP2
0x193 MSTORE
0x194 PUSH1 0x20
0x196 ADD
0x197 SWAP2
0x198 POP
0x199 POP
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e SWAP2
0x19f SUB
0x1a0 SWAP1
0x1a1 RETURN
---
0x160: JUMPDEST 
0x161: V88 = 0x40
0x163: V89 = M[0x40]
0x166: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x17c: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x193: M[V89] = V93
0x194: V94 = 0x20
0x196: V95 = ADD 0x20 V89
0x19a: V96 = 0x40
0x19c: V97 = M[0x40]
0x19f: V98 = SUB V95 V97
0x1a1: RETURN V97 V98
---
Entry stack: [V11, 0x160, V377]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x160]

================================

Block 0x1a2
[0x1a2:0x1a8]
---
Predecessors: [0x6d]
Successors: [0x1a9, 0x1ad]
---
0x1a2 JUMPDEST
0x1a3 CALLVALUE
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V99 = CALLVALUE
0x1a4: V100 = ISZERO V99
0x1a5: V101 = 0x1ad
0x1a8: JUMPI 0x1ad V100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a2]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V102 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ad
[0x1ad:0x1d8]
---
Predecessors: [0x1a2]
Successors: [0x6fb]
---
0x1ad JUMPDEST
0x1ae PUSH2 0x1d9
0x1b1 PUSH1 0x4
0x1b3 DUP1
0x1b4 DUP1
0x1b5 CALLDATALOAD
0x1b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cb AND
0x1cc SWAP1
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 SWAP1
0x1d1 SWAP2
0x1d2 SWAP1
0x1d3 POP
0x1d4 POP
0x1d5 PUSH2 0x6fb
0x1d8 JUMP
---
0x1ad: JUMPDEST 
0x1ae: V103 = 0x1d9
0x1b1: V104 = 0x4
0x1b5: V105 = CALLDATALOAD 0x4
0x1b6: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1cd: V108 = 0x20
0x1cf: V109 = ADD 0x20 0x4
0x1d5: V110 = 0x6fb
0x1d8: JUMP 0x6fb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d9, V107]
Exit stack: [V11, 0x1d9, V107]

================================

Block 0x1d9
[0x1d9:0x1da]
---
Predecessors: [0x756]
Successors: []
---
0x1d9 JUMPDEST
0x1da STOP
---
0x1d9: JUMPDEST 
0x1da: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1db
[0x1db:0x1eb]
---
Predecessors: [0x85]
Successors: [0x1ec, 0x1ed]
---
0x1db JUMPDEST
0x1dc PUSH1 0x0
0x1de DUP1
0x1df PUSH1 0x0
0x1e1 PUSH2 0xe9fc
0x1e4 GAS
0x1e5 DUP2
0x1e6 ISZERO
0x1e7 ISZERO
0x1e8 PUSH2 0x1ed
0x1eb JUMPI
---
0x1db: JUMPDEST 
0x1dc: V111 = 0x0
0x1df: V112 = 0x0
0x1e1: V113 = 0xe9fc
0x1e4: V114 = GAS
0x1e6: V115 = ISZERO 0xe9fc
0x1e7: V116 = ISZERO 0x0
0x1e8: V117 = 0x1ed
0x1eb: JUMPI 0x1ed 0x1
---
Entry stack: [V11, 0xd0, V38, V43]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0xe9fc, V114]
Exit stack: [V11, 0xd0, V38, V43, 0x0, 0x0, 0x0, 0xe9fc, V114]

================================

Block 0x1ec
[0x1ec:0x1ec]
---
Predecessors: [0x1db]
Successors: []
---
0x1ec INVALID
---
0x1ec: INVALID 
---
Entry stack: [V11, 0xd0, V38, V43, 0x0, 0x0, 0x0, 0xe9fc, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V38, V43, 0x0, 0x0, 0x0, 0xe9fc, V114]

================================

Block 0x1ed
[0x1ed:0x28e]
---
Predecessors: [0x1db]
Successors: [0x28f, 0x293]
---
0x1ed JUMPDEST
0x1ee DIV
0x1ef SWAP3
0x1f0 POP
0x1f1 DUP5
0x1f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x207 AND
0x208 PUSH4 0x70a08231
0x20d CALLER
0x20e PUSH1 0x0
0x210 PUSH1 0x40
0x212 MLOAD
0x213 PUSH1 0x20
0x215 ADD
0x216 MSTORE
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP3
0x21b PUSH4 0xffffffff
0x220 AND
0x221 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x23f MUL
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x4
0x244 ADD
0x245 DUP1
0x246 DUP3
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x272 AND
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x20
0x277 ADD
0x278 SWAP2
0x279 POP
0x27a POP
0x27b PUSH1 0x20
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 DUP4
0x282 SUB
0x283 DUP2
0x284 PUSH1 0x0
0x286 DUP8
0x287 DUP1
0x288 EXTCODESIZE
0x289 ISZERO
0x28a ISZERO
0x28b PUSH2 0x293
0x28e JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V118 = DIV V114 0xe9fc
0x1f2: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x208: V121 = 0x70a08231
0x20d: V122 = CALLER
0x20e: V123 = 0x0
0x210: V124 = 0x40
0x212: V125 = M[0x40]
0x213: V126 = 0x20
0x215: V127 = ADD 0x20 V125
0x216: M[V127] = 0x0
0x217: V128 = 0x40
0x219: V129 = M[0x40]
0x21b: V130 = 0xffffffff
0x220: V131 = AND 0xffffffff 0x70a08231
0x221: V132 = 0x100000000000000000000000000000000000000000000000000000000
0x23f: V133 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x241: M[V129] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x242: V134 = 0x4
0x244: V135 = ADD 0x4 V129
0x247: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x25d: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x272: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x274: M[V135] = V139
0x275: V140 = 0x20
0x277: V141 = ADD 0x20 V135
0x27b: V142 = 0x20
0x27d: V143 = 0x40
0x27f: V144 = M[0x40]
0x282: V145 = SUB V141 V144
0x284: V146 = 0x0
0x288: V147 = EXTCODESIZE V120
0x289: V148 = ISZERO V147
0x28a: V149 = ISZERO V148
0x28b: V150 = 0x293
0x28e: JUMPI 0x293 V149
---
Entry stack: [V11, 0xd0, V38, V43, 0x0, 0x0, 0x0, 0xe9fc, V114]
Stack pops: 7
Stack additions: [S6, S5, V118, S3, S2, V120, 0x70a08231, V141, 0x20, V144, V145, V144, 0x0, V120]
Exit stack: [V11, 0xd0, V38, V43, V118, 0x0, 0x0, V120, 0x70a08231, V141, 0x20, V144, V145, V144, 0x0, V120]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x1ed]
Successors: []
---
0x28f PUSH1 0x0
0x291 DUP1
0x292 REVERT
---
0x28f: V151 = 0x0
0x292: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd0, V38, V43, V118, 0x0, 0x0, V120, 0x70a08231, V141, 0x20, V144, V145, V144, 0x0, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V38, V43, V118, 0x0, 0x0, V120, 0x70a08231, V141, 0x20, V144, V145, V144, 0x0, V120]

================================

Block 0x293
[0x293:0x29f]
---
Predecessors: [0x1ed]
Successors: [0x2a0, 0x2a4]
---
0x293 JUMPDEST
0x294 PUSH2 0x2c6
0x297 GAS
0x298 SUB
0x299 CALL
0x29a ISZERO
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x293: JUMPDEST 
0x294: V152 = 0x2c6
0x297: V153 = GAS
0x298: V154 = SUB V153 0x2c6
0x299: V155 = CALL V154 V120 0x0 V144 V145 V144 0x20
0x29a: V156 = ISZERO V155
0x29b: V157 = ISZERO V156
0x29c: V158 = 0x2a4
0x29f: JUMPI 0x2a4 V157
---
Entry stack: [V11, 0xd0, V38, V43, V118, 0x0, 0x0, V120, 0x70a08231, V141, 0x20, V144, V145, V144, 0x0, V120]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xd0, V38, V43, V118, 0x0, 0x0, V120, 0x70a08231, V141]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x293]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V159 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd0, V38, V43, V118, 0x0, 0x0, V120, 0x70a08231, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V38, V43, V118, 0x0, 0x0, V120, 0x70a08231, V141]

================================

Block 0x2a4
[0x2a4:0x2b4]
---
Predecessors: [0x293]
Successors: [0x2b5]
---
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac MLOAD
0x2ad SWAP1
0x2ae POP
0x2af SWAP2
0x2b0 POP
0x2b1 PUSH1 0x0
0x2b3 SWAP1
0x2b4 POP
---
0x2a4: JUMPDEST 
0x2a8: V160 = 0x40
0x2aa: V161 = M[0x40]
0x2ac: V162 = M[V161]
0x2b1: V163 = 0x0
---
Entry stack: [V11, 0xd0, V38, V43, V118, 0x0, 0x0, V120, 0x70a08231, V141]
Stack pops: 5
Stack additions: [V162, 0x0]
Exit stack: [V11, 0xd0, V38, V43, V118, V162, 0x0]

================================

Block 0x2b5
[0x2b5:0x2bd]
---
Predecessors: [0x2a4, 0x2be]
Successors: [0x2be, 0x3a8]
---
0x2b5 JUMPDEST
0x2b6 DUP3
0x2b7 DUP2
0x2b8 LT
0x2b9 ISZERO
0x2ba PUSH2 0x3a8
0x2bd JUMPI
---
0x2b5: JUMPDEST 
0x2b8: V164 = LT S0 V118
0x2b9: V165 = ISZERO V164
0x2ba: V166 = 0x3a8
0x2bd: JUMPI 0x3a8 V165
---
Entry stack: [V11, 0xd0, V38, V43, V118, V162, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xd0, V38, V43, V118, V162, S0]

================================

Block 0x2be
[0x2be:0x3a7]
---
Predecessors: [0x2b5]
Successors: [0x2b5]
---
0x2be DUP5
0x2bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d4 AND
0x2d5 PUSH2 0xe998
0x2d8 PUSH4 0xa9059cbb
0x2dd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2fb MUL
0x2fc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x31a SWAP1
0x31b DIV
0x31c SWAP1
0x31d DUP7
0x31e DUP6
0x31f PUSH1 0x40
0x321 MLOAD
0x322 DUP5
0x323 PUSH4 0xffffffff
0x328 AND
0x329 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x347 MUL
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x4
0x34c ADD
0x34d DUP1
0x34e DUP4
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a AND
0x37b DUP2
0x37c MSTORE
0x37d PUSH1 0x20
0x37f ADD
0x380 DUP3
0x381 DUP2
0x382 MSTORE
0x383 PUSH1 0x20
0x385 ADD
0x386 SWAP3
0x387 POP
0x388 POP
0x389 POP
0x38a PUSH1 0x0
0x38c PUSH1 0x40
0x38e MLOAD
0x38f DUP1
0x390 DUP4
0x391 SUB
0x392 DUP2
0x393 DUP8
0x394 DUP7
0x395 DELEGATECALL
0x396 SWAP4
0x397 POP
0x398 POP
0x399 POP
0x39a POP
0x39b POP
0x39c DUP1
0x39d DUP1
0x39e PUSH1 0x1
0x3a0 ADD
0x3a1 SWAP2
0x3a2 POP
0x3a3 POP
0x3a4 PUSH2 0x2b5
0x3a7 JUMP
---
0x2bf: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x2d5: V169 = 0xe998
0x2d8: V170 = 0xa9059cbb
0x2dd: V171 = 0x100000000000000000000000000000000000000000000000000000000
0x2fb: V172 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2fc: V173 = 0x100000000000000000000000000000000000000000000000000000000
0x31b: V174 = DIV 0xa9059cbb00000000000000000000000000000000000000000000000000000000 0x100000000000000000000000000000000000000000000000000000000
0x31f: V175 = 0x40
0x321: V176 = M[0x40]
0x323: V177 = 0xffffffff
0x328: V178 = AND 0xffffffff 0xa9059cbb
0x329: V179 = 0x100000000000000000000000000000000000000000000000000000000
0x347: V180 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x349: M[V176] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x34a: V181 = 0x4
0x34c: V182 = ADD 0x4 V176
0x34f: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x365: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x37c: M[V182] = V186
0x37d: V187 = 0x20
0x37f: V188 = ADD 0x20 V182
0x382: M[V188] = V162
0x383: V189 = 0x20
0x385: V190 = ADD 0x20 V188
0x38a: V191 = 0x0
0x38c: V192 = 0x40
0x38e: V193 = M[0x40]
0x391: V194 = SUB V190 V193
0x395: V195 = DELEGATECALL 0xe998 V168 V193 V194 V193 0x0
0x39e: V196 = 0x1
0x3a0: V197 = ADD 0x1 S0
0x3a4: V198 = 0x2b5
0x3a7: JUMP 0x2b5
---
Entry stack: [V11, 0xd0, V38, V43, V118, V162, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V197]
Exit stack: [V11, 0xd0, V38, V43, V118, V162, V197]

================================

Block 0x3a8
[0x3a8:0x3ae]
---
Predecessors: [0x2b5]
Successors: [0xd0]
---
0x3a8 JUMPDEST
0x3a9 POP
0x3aa POP
0x3ab POP
0x3ac POP
0x3ad POP
0x3ae JUMP
---
0x3a8: JUMPDEST 
0x3ae: JUMP 0xd0
---
Entry stack: [V11, 0xd0, V38, V43, V118, V162, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x3af
[0x3af:0x405]
---
Predecessors: [0xdd]
Successors: [0x406, 0x40a]
---
0x3af JUMPDEST
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 SWAP1
0x3b4 SLOAD
0x3b5 SWAP1
0x3b6 PUSH2 0x100
0x3b9 EXP
0x3ba SWAP1
0x3bb DIV
0x3bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d1 AND
0x3d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e7 AND
0x3e8 CALLER
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff EQ
0x400 ISZERO
0x401 ISZERO
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3af: JUMPDEST 
0x3b0: V199 = 0x0
0x3b4: V200 = S[0x0]
0x3b6: V201 = 0x100
0x3b9: V202 = EXP 0x100 0x0
0x3bb: V203 = DIV V200 0x1
0x3bc: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x3d2: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x3e8: V208 = CALLER
0x3e9: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x3ff: V211 = EQ V210 V207
0x400: V212 = ISZERO V211
0x401: V213 = ISZERO V212
0x402: V214 = 0x40a
0x405: JUMPI 0x40a V213
---
Entry stack: [V11, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3af]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V215 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0x40a
[0x40a:0x45c]
---
Predecessors: [0x3af]
Successors: [0x45d, 0x461]
---
0x40a JUMPDEST
0x40b CALLER
0x40c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x421 AND
0x422 PUSH2 0x8fc
0x425 ADDRESS
0x426 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43b AND
0x43c BALANCE
0x43d SWAP1
0x43e DUP2
0x43f ISZERO
0x440 MUL
0x441 SWAP1
0x442 PUSH1 0x40
0x444 MLOAD
0x445 PUSH1 0x0
0x447 PUSH1 0x40
0x449 MLOAD
0x44a DUP1
0x44b DUP4
0x44c SUB
0x44d DUP2
0x44e DUP6
0x44f DUP9
0x450 DUP9
0x451 CALL
0x452 SWAP4
0x453 POP
0x454 POP
0x455 POP
0x456 POP
0x457 ISZERO
0x458 ISZERO
0x459 PUSH2 0x461
0x45c JUMPI
---
0x40a: JUMPDEST 
0x40b: V216 = CALLER
0x40c: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x421: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x422: V219 = 0x8fc
0x425: V220 = ADDRESS
0x426: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x43b: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x43c: V223 = BALANCE V222
0x43f: V224 = ISZERO V223
0x440: V225 = MUL V224 0x8fc
0x442: V226 = 0x40
0x444: V227 = M[0x40]
0x445: V228 = 0x0
0x447: V229 = 0x40
0x449: V230 = M[0x40]
0x44c: V231 = SUB V227 V230
0x451: V232 = CALL V225 V218 V223 V230 V231 V230 0x0
0x457: V233 = ISZERO V232
0x458: V234 = ISZERO V233
0x459: V235 = 0x461
0x45c: JUMPI 0x461 V234
---
Entry stack: [V11, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0x45d
[0x45d:0x460]
---
Predecessors: [0x40a]
Successors: []
---
0x45d PUSH1 0x0
0x45f DUP1
0x460 REVERT
---
0x45d: V236 = 0x0
0x460: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0x461
[0x461:0x462]
---
Predecessors: [0x40a]
Successors: [0xe5]
---
0x461 JUMPDEST
0x462 JUMP
---
0x461: JUMPDEST 
0x462: JUMP 0xe5
---
Entry stack: [V11, 0xe5]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x463
[0x463:0x4b9]
---
Predecessors: [0xf2]
Successors: [0x4ba, 0x4be]
---
0x463 JUMPDEST
0x464 PUSH1 0x0
0x466 DUP1
0x467 SWAP1
0x468 SLOAD
0x469 SWAP1
0x46a PUSH2 0x100
0x46d EXP
0x46e SWAP1
0x46f DIV
0x470 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x485 AND
0x486 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49b AND
0x49c CALLER
0x49d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b2 AND
0x4b3 EQ
0x4b4 ISZERO
0x4b5 ISZERO
0x4b6 PUSH2 0x4be
0x4b9 JUMPI
---
0x463: JUMPDEST 
0x464: V237 = 0x0
0x468: V238 = S[0x0]
0x46a: V239 = 0x100
0x46d: V240 = EXP 0x100 0x0
0x46f: V241 = DIV V238 0x1
0x470: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x485: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x486: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x49b: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x49c: V246 = CALLER
0x49d: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b2: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x4b3: V249 = EQ V248 V245
0x4b4: V250 = ISZERO V249
0x4b5: V251 = ISZERO V250
0x4b6: V252 = 0x4be
0x4b9: JUMPI 0x4be V251
---
Entry stack: [V11, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfa]

================================

Block 0x4ba
[0x4ba:0x4bd]
---
Predecessors: [0x463]
Successors: []
---
0x4ba PUSH1 0x0
0x4bc DUP1
0x4bd REVERT
---
0x4ba: V253 = 0x0
0x4bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfa]

================================

Block 0x4be
[0x4be:0x4d6]
---
Predecessors: [0x463]
Successors: []
---
0x4be JUMPDEST
0x4bf CALLER
0x4c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d5 AND
0x4d6 SELFDESTRUCT
---
0x4be: JUMPDEST 
0x4bf: V254 = CALLER
0x4c0: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x4d6: SELFDESTRUCT V256
---
Entry stack: [V11, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfa]

================================

Block 0x4d7
[0x4d7:0x530]
---
Predecessors: [0x107]
Successors: [0x531, 0x535]
---
0x4d7 JUMPDEST
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db PUSH1 0x0
0x4dd DUP1
0x4de SWAP1
0x4df SLOAD
0x4e0 SWAP1
0x4e1 PUSH2 0x100
0x4e4 EXP
0x4e5 SWAP1
0x4e6 DIV
0x4e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fc AND
0x4fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x512 AND
0x513 CALLER
0x514 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x529 AND
0x52a EQ
0x52b ISZERO
0x52c ISZERO
0x52d PUSH2 0x535
0x530 JUMPI
---
0x4d7: JUMPDEST 
0x4d8: V257 = 0x0
0x4db: V258 = 0x0
0x4df: V259 = S[0x0]
0x4e1: V260 = 0x100
0x4e4: V261 = EXP 0x100 0x0
0x4e6: V262 = DIV V259 0x1
0x4e7: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fc: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x4fd: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x512: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x513: V267 = CALLER
0x514: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x529: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x52a: V270 = EQ V269 V266
0x52b: V271 = ISZERO V270
0x52c: V272 = ISZERO V271
0x52d: V273 = 0x535
0x530: JUMPI 0x535 V272
---
Entry stack: [V11, 0x133, V67]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x133, V67, 0x0, 0x0]

================================

Block 0x531
[0x531:0x534]
---
Predecessors: [0x4d7]
Successors: []
---
0x531 PUSH1 0x0
0x533 DUP1
0x534 REVERT
---
0x531: V274 = 0x0
0x534: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V67, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V67, 0x0, 0x0]

================================

Block 0x535
[0x535:0x5d3]
---
Predecessors: [0x4d7]
Successors: [0x5d4, 0x5d8]
---
0x535 JUMPDEST
0x536 DUP3
0x537 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54c AND
0x54d PUSH4 0x70a08231
0x552 ADDRESS
0x553 PUSH1 0x0
0x555 PUSH1 0x40
0x557 MLOAD
0x558 PUSH1 0x20
0x55a ADD
0x55b MSTORE
0x55c PUSH1 0x40
0x55e MLOAD
0x55f DUP3
0x560 PUSH4 0xffffffff
0x565 AND
0x566 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x584 MUL
0x585 DUP2
0x586 MSTORE
0x587 PUSH1 0x4
0x589 ADD
0x58a DUP1
0x58b DUP3
0x58c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a1 AND
0x5a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b7 AND
0x5b8 DUP2
0x5b9 MSTORE
0x5ba PUSH1 0x20
0x5bc ADD
0x5bd SWAP2
0x5be POP
0x5bf POP
0x5c0 PUSH1 0x20
0x5c2 PUSH1 0x40
0x5c4 MLOAD
0x5c5 DUP1
0x5c6 DUP4
0x5c7 SUB
0x5c8 DUP2
0x5c9 PUSH1 0x0
0x5cb DUP8
0x5cc DUP1
0x5cd EXTCODESIZE
0x5ce ISZERO
0x5cf ISZERO
0x5d0 PUSH2 0x5d8
0x5d3 JUMPI
---
0x535: JUMPDEST 
0x537: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x54d: V277 = 0x70a08231
0x552: V278 = ADDRESS
0x553: V279 = 0x0
0x555: V280 = 0x40
0x557: V281 = M[0x40]
0x558: V282 = 0x20
0x55a: V283 = ADD 0x20 V281
0x55b: M[V283] = 0x0
0x55c: V284 = 0x40
0x55e: V285 = M[0x40]
0x560: V286 = 0xffffffff
0x565: V287 = AND 0xffffffff 0x70a08231
0x566: V288 = 0x100000000000000000000000000000000000000000000000000000000
0x584: V289 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x586: M[V285] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x587: V290 = 0x4
0x589: V291 = ADD 0x4 V285
0x58c: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x5a2: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x5b9: M[V291] = V295
0x5ba: V296 = 0x20
0x5bc: V297 = ADD 0x20 V291
0x5c0: V298 = 0x20
0x5c2: V299 = 0x40
0x5c4: V300 = M[0x40]
0x5c7: V301 = SUB V297 V300
0x5c9: V302 = 0x0
0x5cd: V303 = EXTCODESIZE V276
0x5ce: V304 = ISZERO V303
0x5cf: V305 = ISZERO V304
0x5d0: V306 = 0x5d8
0x5d3: JUMPI 0x5d8 V305
---
Entry stack: [V11, 0x133, V67, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V276, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V276]
Exit stack: [V11, 0x133, V67, 0x0, 0x0, V276, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V276]

================================

Block 0x5d4
[0x5d4:0x5d7]
---
Predecessors: [0x535]
Successors: []
---
0x5d4 PUSH1 0x0
0x5d6 DUP1
0x5d7 REVERT
---
0x5d4: V307 = 0x0
0x5d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V67, 0x0, 0x0, V276, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V67, 0x0, 0x0, V276, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V276]

================================

Block 0x5d8
[0x5d8:0x5e4]
---
Predecessors: [0x535]
Successors: [0x5e5, 0x5e9]
---
0x5d8 JUMPDEST
0x5d9 PUSH2 0x2c6
0x5dc GAS
0x5dd SUB
0x5de CALL
0x5df ISZERO
0x5e0 ISZERO
0x5e1 PUSH2 0x5e9
0x5e4 JUMPI
---
0x5d8: JUMPDEST 
0x5d9: V308 = 0x2c6
0x5dc: V309 = GAS
0x5dd: V310 = SUB V309 0x2c6
0x5de: V311 = CALL V310 V276 0x0 V300 V301 V300 0x20
0x5df: V312 = ISZERO V311
0x5e0: V313 = ISZERO V312
0x5e1: V314 = 0x5e9
0x5e4: JUMPI 0x5e9 V313
---
Entry stack: [V11, 0x133, V67, 0x0, 0x0, V276, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V276]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x133, V67, 0x0, 0x0, V276, 0x70a08231, V297]

================================

Block 0x5e5
[0x5e5:0x5e8]
---
Predecessors: [0x5d8]
Successors: []
---
0x5e5 PUSH1 0x0
0x5e7 DUP1
0x5e8 REVERT
---
0x5e5: V315 = 0x0
0x5e8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V67, 0x0, 0x0, V276, 0x70a08231, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V67, 0x0, 0x0, V276, 0x70a08231, V297]

================================

Block 0x5e9
[0x5e9:0x5fe]
---
Predecessors: [0x5d8]
Successors: [0x5ff, 0x6cb]
---
0x5e9 JUMPDEST
0x5ea POP
0x5eb POP
0x5ec POP
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 DUP1
0x5f1 MLOAD
0x5f2 SWAP1
0x5f3 POP
0x5f4 SWAP1
0x5f5 POP
0x5f6 PUSH1 0x0
0x5f8 DUP2
0x5f9 GT
0x5fa ISZERO
0x5fb PUSH2 0x6cb
0x5fe JUMPI
---
0x5e9: JUMPDEST 
0x5ed: V316 = 0x40
0x5ef: V317 = M[0x40]
0x5f1: V318 = M[V317]
0x5f6: V319 = 0x0
0x5f9: V320 = GT V318 0x0
0x5fa: V321 = ISZERO V320
0x5fb: V322 = 0x6cb
0x5fe: JUMPI 0x6cb V321
---
Entry stack: [V11, 0x133, V67, 0x0, 0x0, V276, 0x70a08231, V297]
Stack pops: 4
Stack additions: [V318]
Exit stack: [V11, 0x133, V67, 0x0, V318]

================================

Block 0x5ff
[0x5ff:0x6a4]
---
Predecessors: [0x5e9]
Successors: [0x6a5, 0x6a9]
---
0x5ff DUP3
0x600 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x615 AND
0x616 PUSH4 0xa9059cbb
0x61b CALLER
0x61c DUP4
0x61d PUSH1 0x0
0x61f PUSH1 0x40
0x621 MLOAD
0x622 PUSH1 0x20
0x624 ADD
0x625 MSTORE
0x626 PUSH1 0x40
0x628 MLOAD
0x629 DUP4
0x62a PUSH4 0xffffffff
0x62f AND
0x630 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x64e MUL
0x64f DUP2
0x650 MSTORE
0x651 PUSH1 0x4
0x653 ADD
0x654 DUP1
0x655 DUP4
0x656 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66b AND
0x66c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x681 AND
0x682 DUP2
0x683 MSTORE
0x684 PUSH1 0x20
0x686 ADD
0x687 DUP3
0x688 DUP2
0x689 MSTORE
0x68a PUSH1 0x20
0x68c ADD
0x68d SWAP3
0x68e POP
0x68f POP
0x690 POP
0x691 PUSH1 0x20
0x693 PUSH1 0x40
0x695 MLOAD
0x696 DUP1
0x697 DUP4
0x698 SUB
0x699 DUP2
0x69a PUSH1 0x0
0x69c DUP8
0x69d DUP1
0x69e EXTCODESIZE
0x69f ISZERO
0x6a0 ISZERO
0x6a1 PUSH2 0x6a9
0x6a4 JUMPI
---
0x600: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x615: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x616: V325 = 0xa9059cbb
0x61b: V326 = CALLER
0x61d: V327 = 0x0
0x61f: V328 = 0x40
0x621: V329 = M[0x40]
0x622: V330 = 0x20
0x624: V331 = ADD 0x20 V329
0x625: M[V331] = 0x0
0x626: V332 = 0x40
0x628: V333 = M[0x40]
0x62a: V334 = 0xffffffff
0x62f: V335 = AND 0xffffffff 0xa9059cbb
0x630: V336 = 0x100000000000000000000000000000000000000000000000000000000
0x64e: V337 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x650: M[V333] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x651: V338 = 0x4
0x653: V339 = ADD 0x4 V333
0x656: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x66b: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x66c: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x681: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x683: M[V339] = V343
0x684: V344 = 0x20
0x686: V345 = ADD 0x20 V339
0x689: M[V345] = V318
0x68a: V346 = 0x20
0x68c: V347 = ADD 0x20 V345
0x691: V348 = 0x20
0x693: V349 = 0x40
0x695: V350 = M[0x40]
0x698: V351 = SUB V347 V350
0x69a: V352 = 0x0
0x69e: V353 = EXTCODESIZE V324
0x69f: V354 = ISZERO V353
0x6a0: V355 = ISZERO V354
0x6a1: V356 = 0x6a9
0x6a4: JUMPI 0x6a9 V355
---
Entry stack: [V11, 0x133, V67, 0x0, V318]
Stack pops: 3
Stack additions: [S2, S1, S0, V324, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V324]
Exit stack: [V11, 0x133, V67, 0x0, V318, V324, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V324]

================================

Block 0x6a5
[0x6a5:0x6a8]
---
Predecessors: [0x5ff]
Successors: []
---
0x6a5 PUSH1 0x0
0x6a7 DUP1
0x6a8 REVERT
---
0x6a5: V357 = 0x0
0x6a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V67, 0x0, V318, V324, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V67, 0x0, V318, V324, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V324]

================================

Block 0x6a9
[0x6a9:0x6b5]
---
Predecessors: [0x5ff]
Successors: [0x6b6, 0x6ba]
---
0x6a9 JUMPDEST
0x6aa PUSH2 0x2c6
0x6ad GAS
0x6ae SUB
0x6af CALL
0x6b0 ISZERO
0x6b1 ISZERO
0x6b2 PUSH2 0x6ba
0x6b5 JUMPI
---
0x6a9: JUMPDEST 
0x6aa: V358 = 0x2c6
0x6ad: V359 = GAS
0x6ae: V360 = SUB V359 0x2c6
0x6af: V361 = CALL V360 V324 0x0 V350 V351 V350 0x20
0x6b0: V362 = ISZERO V361
0x6b1: V363 = ISZERO V362
0x6b2: V364 = 0x6ba
0x6b5: JUMPI 0x6ba V363
---
Entry stack: [V11, 0x133, V67, 0x0, V318, V324, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V324]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x133, V67, 0x0, V318, V324, 0xa9059cbb, V347]

================================

Block 0x6b6
[0x6b6:0x6b9]
---
Predecessors: [0x6a9]
Successors: []
---
0x6b6 PUSH1 0x0
0x6b8 DUP1
0x6b9 REVERT
---
0x6b6: V365 = 0x0
0x6b9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V67, 0x0, V318, V324, 0xa9059cbb, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V67, 0x0, V318, V324, 0xa9059cbb, V347]

================================

Block 0x6ba
[0x6ba:0x6ca]
---
Predecessors: [0x6a9]
Successors: [0x6d0]
---
0x6ba JUMPDEST
0x6bb POP
0x6bc POP
0x6bd POP
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 DUP1
0x6c2 MLOAD
0x6c3 SWAP1
0x6c4 POP
0x6c5 SWAP2
0x6c6 POP
0x6c7 PUSH2 0x6d0
0x6ca JUMP
---
0x6ba: JUMPDEST 
0x6be: V366 = 0x40
0x6c0: V367 = M[0x40]
0x6c2: V368 = M[V367]
0x6c7: V369 = 0x6d0
0x6ca: JUMP 0x6d0
---
Entry stack: [V11, 0x133, V67, 0x0, V318, V324, 0xa9059cbb, V347]
Stack pops: 5
Stack additions: [V368, S3]
Exit stack: [V11, 0x133, V67, V368, V318]

================================

Block 0x6cb
[0x6cb:0x6cf]
---
Predecessors: [0x5e9]
Successors: [0x6d0]
---
0x6cb JUMPDEST
0x6cc PUSH1 0x0
0x6ce SWAP2
0x6cf POP
---
0x6cb: JUMPDEST 
0x6cc: V370 = 0x0
---
Entry stack: [V11, 0x133, V67, 0x0, V318]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x133, V67, 0x0, V318]

================================

Block 0x6d0
[0x6d0:0x6d5]
---
Predecessors: [0x6ba, 0x6cb]
Successors: [0x133]
---
0x6d0 JUMPDEST
0x6d1 POP
0x6d2 SWAP2
0x6d3 SWAP1
0x6d4 POP
0x6d5 JUMP
---
0x6d0: JUMPDEST 
0x6d5: JUMP 0x133
---
Entry stack: [V11, 0x133, V67, S1, V318]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V11, S1]

================================

Block 0x6d6
[0x6d6:0x6fa]
---
Predecessors: [0x158]
Successors: [0x160]
---
0x6d6 JUMPDEST
0x6d7 PUSH1 0x0
0x6d9 DUP1
0x6da SWAP1
0x6db SLOAD
0x6dc SWAP1
0x6dd PUSH2 0x100
0x6e0 EXP
0x6e1 SWAP1
0x6e2 DIV
0x6e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f8 AND
0x6f9 DUP2
0x6fa JUMP
---
0x6d6: JUMPDEST 
0x6d7: V371 = 0x0
0x6db: V372 = S[0x0]
0x6dd: V373 = 0x100
0x6e0: V374 = EXP 0x100 0x0
0x6e2: V375 = DIV V372 0x1
0x6e3: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f8: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x6fa: JUMP 0x160
---
Entry stack: [V11, 0x160]
Stack pops: 1
Stack additions: [S0, V377]
Exit stack: [V11, 0x160, V377]

================================

Block 0x6fb
[0x6fb:0x751]
---
Predecessors: [0x1ad]
Successors: [0x752, 0x756]
---
0x6fb JUMPDEST
0x6fc PUSH1 0x0
0x6fe DUP1
0x6ff SWAP1
0x700 SLOAD
0x701 SWAP1
0x702 PUSH2 0x100
0x705 EXP
0x706 SWAP1
0x707 DIV
0x708 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71d AND
0x71e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x733 AND
0x734 CALLER
0x735 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74a AND
0x74b EQ
0x74c ISZERO
0x74d ISZERO
0x74e PUSH2 0x756
0x751 JUMPI
---
0x6fb: JUMPDEST 
0x6fc: V378 = 0x0
0x700: V379 = S[0x0]
0x702: V380 = 0x100
0x705: V381 = EXP 0x100 0x0
0x707: V382 = DIV V379 0x1
0x708: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x71d: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x71e: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x733: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x734: V387 = CALLER
0x735: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x74a: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x74b: V390 = EQ V389 V386
0x74c: V391 = ISZERO V390
0x74d: V392 = ISZERO V391
0x74e: V393 = 0x756
0x751: JUMPI 0x756 V392
---
Entry stack: [V11, 0x1d9, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d9, V107]

================================

Block 0x752
[0x752:0x755]
---
Predecessors: [0x6fb]
Successors: []
---
0x752 PUSH1 0x0
0x754 DUP1
0x755 REVERT
---
0x752: V394 = 0x0
0x755: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d9, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d9, V107]

================================

Block 0x756
[0x756:0x798]
---
Predecessors: [0x6fb]
Successors: [0x1d9]
---
0x756 JUMPDEST
0x757 DUP1
0x758 PUSH1 0x0
0x75a DUP1
0x75b PUSH2 0x100
0x75e EXP
0x75f DUP2
0x760 SLOAD
0x761 DUP2
0x762 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x777 MUL
0x778 NOT
0x779 AND
0x77a SWAP1
0x77b DUP4
0x77c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x791 AND
0x792 MUL
0x793 OR
0x794 SWAP1
0x795 SSTORE
0x796 POP
0x797 POP
0x798 JUMP
---
0x756: JUMPDEST 
0x758: V395 = 0x0
0x75b: V396 = 0x100
0x75e: V397 = EXP 0x100 0x0
0x760: V398 = S[0x0]
0x762: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x777: V400 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x778: V401 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x779: V402 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V398
0x77c: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x791: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x792: V405 = MUL V404 0x1
0x793: V406 = OR V405 V402
0x795: S[0x0] = V406
0x798: JUMP 0x1d9
---
Entry stack: [V11, 0x1d9, V107]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x799
[0x799:0x7cb]
---
Predecessors: []
Successors: []
---
0x799 STOP
0x79a LOG1
0x79b PUSH6 0x627a7a723058
0x7a2 SHA3
0x7a3 PUSH10 0x3221e0a82941608b79c7
0x7ae MISSING 0xb2
0x7af PUSH28 0x87c0b0d850a55c8289e968862a5b6db645b8790029
---
0x799: STOP 
0x79a: LOG S0 S1 S2
0x79b: V407 = 0x627a7a723058
0x7a2: V408 = SHA3 0x627a7a723058 S3
0x7a3: V409 = 0x3221e0a82941608b79c7
0x7ae: MISSING 0xb2
0x7af: V410 = 0x87c0b0d850a55c8289e968862a5b6db645b8790029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3221e0a82941608b79c7, V408, 0x87c0b0d850a55c8289e968862a5b6db645b8790029]
Exit stack: []

================================

Function 0:
Public function signature: 0x14a75aad
Entry block: 0x7a
Exit block: 0xd0
Body: 0x7a, 0x81, 0x85, 0xd0, 0x1db, 0x1ec, 0x1ed, 0x28f, 0x293, 0x2a0, 0x2a4, 0x2b5, 0x2be, 0x3a8

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xd2
Exit block: 0xe5
Body: 0xd2, 0xd9, 0xdd, 0xe5, 0x3af, 0x406, 0x40a, 0x45d, 0x461

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xe7
Exit block: 0x4be
Body: 0xe7, 0xee, 0xf2, 0x463, 0x4ba, 0x4be

Function 3:
Public function signature: 0x49df728c
Entry block: 0xfc
Exit block: 0x133
Body: 0xfc, 0x103, 0x107, 0x133, 0x4d7, 0x531, 0x535, 0x5d4, 0x5d8, 0x5e5, 0x5e9, 0x5ff, 0x6a5, 0x6a9, 0x6b6, 0x6ba, 0x6cb, 0x6d0

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x14d
Exit block: 0x160
Body: 0x14d, 0x154, 0x158, 0x160, 0x6d6

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x1a2
Exit block: 0x1d9
Body: 0x1a2, 0x1a9, 0x1ad, 0x1d9, 0x6fb, 0x752, 0x756

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

