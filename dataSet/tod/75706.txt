Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5c
0xa: JUMPI 0x5c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2e1a7d4d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2e1a7d4d
0x20: V14 = EQ V12 0x2e1a7d4d
0x21: V15 = 0x6d
0x24: JUMPI 0x6d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x82]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0x82
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0x82
0x2f: JUMPI 0x82 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x94]
---
0x30 DUP1
0x31 PUSH4 0xb4a99a4e
0x36 EQ
0x37 PUSH2 0x94
0x3a JUMPI
---
0x31: V19 = 0xb4a99a4e
0x36: V20 = EQ 0xb4a99a4e V12
0x37: V21 = 0x94
0x3a: JUMPI 0x94 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xcc]
---
0x3b DUP1
0x3c PUSH4 0xd0e30db0
0x41 EQ
0x42 PUSH2 0xcc
0x45 JUMPI
---
0x3c: V22 = 0xd0e30db0
0x41: V23 = EQ 0xd0e30db0 V12
0x42: V24 = 0xcc
0x45: JUMPI 0xcc V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xd6]
---
0x46 DUP1
0x47 PUSH4 0xe1c7392a
0x4c EQ
0x4d PUSH2 0xd6
0x50 JUMPI
---
0x47: V25 = 0xe1c7392a
0x4c: V26 = EQ 0xe1c7392a V12
0x4d: V27 = 0xd6
0x50: JUMPI 0xd6 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xe8]
---
0x51 DUP1
0x52 PUSH4 0xfc7e286d
0x57 EQ
0x58 PUSH2 0xe8
0x5b JUMPI
---
0x52: V28 = 0xfc7e286d
0x57: V29 = EQ 0xfc7e286d V12
0x58: V30 = 0xe8
0x5b: JUMPI 0xe8 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x5f]
---
Predecessors: [0x0, 0x51]
Successors: [0x60]
---
0x5c JUMPDEST
0x5d PUSH2 0x6b
---
0x5c: JUMPDEST 
0x5d: V31 = 0x6b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0x60
[0x60:0x67]
---
Predecessors: [0x5c]
Successors: [0x117]
---
0x60 JUMPDEST
0x61 PUSH2 0x68
0x64 PUSH2 0x117
0x67 JUMP
---
0x60: JUMPDEST 
0x61: V32 = 0x68
0x64: V33 = 0x117
0x67: JUMP 0x117
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: [0x68]
Exit stack: [V12, 0x6b, 0x68]

================================

Block 0x68
[0x68:0x68]
---
Predecessors: [0x69, 0x129, 0x151]
Successors: [0x69]
---
0x68 JUMPDEST
---
0x68: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x69
[0x69:0x6a]
---
Predecessors: [0x68]
Successors: [0x68, 0x6b]
---
0x69 JUMPDEST
0x6a JUMP
---
0x69: JUMPDEST 
0x6a: JUMP S0
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x69, 0x1f8, 0x29a]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x6d
[0x6d:0x73]
---
Predecessors: [0xb]
Successors: [0x74, 0x75]
---
0x6d JUMPDEST
0x6e CALLVALUE
0x6f ISZERO
0x70 PUSH2 0x75
0x73 JUMPI
---
0x6d: JUMPDEST 
0x6e: V34 = CALLVALUE
0x6f: V35 = ISZERO V34
0x70: V36 = 0x75
0x73: JUMPI 0x75 V35
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x74
[0x74:0x74]
---
Predecessors: [0x6d]
Successors: []
---
0x74 INVALID
---
0x74: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6d]
Successors: [0x159]
---
0x75 JUMPDEST
0x76 PUSH2 0x6b
0x79 PUSH1 0x4
0x7b CALLDATALOAD
0x7c PUSH2 0x159
0x7f JUMP
---
0x75: JUMPDEST 
0x76: V37 = 0x6b
0x79: V38 = 0x4
0x7b: V39 = CALLDATALOAD 0x4
0x7c: V40 = 0x159
0x7f: JUMP 0x159
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b, V39]
Exit stack: [V12, 0x6b, V39]

================================

Block 0x80
[0x80:0x81]
---
Predecessors: []
Successors: []
---
0x80 JUMPDEST
0x81 STOP
---
0x80: JUMPDEST 
0x81: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x25]
Successors: [0x89, 0x8a]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0x8a
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V41 = CALLVALUE
0x84: V42 = ISZERO V41
0x85: V43 = 0x8a
0x88: JUMPI 0x8a V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x89]
---
Predecessors: [0x82]
Successors: []
---
0x89 INVALID
---
0x89: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x82]
Successors: [0x1fc]
---
0x8a JUMPDEST
0x8b PUSH2 0x6b
0x8e PUSH2 0x1fc
0x91 JUMP
---
0x8a: JUMPDEST 
0x8b: V44 = 0x6b
0x8e: V45 = 0x1fc
0x91: JUMP 0x1fc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: []
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x94
[0x94:0x9a]
---
Predecessors: [0x30]
Successors: [0x9b, 0x9c]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 ISZERO
0x97 PUSH2 0x9c
0x9a JUMPI
---
0x94: JUMPDEST 
0x95: V46 = CALLVALUE
0x96: V47 = ISZERO V46
0x97: V48 = 0x9c
0x9a: JUMPI 0x9c V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b
[0x9b:0x9b]
---
Predecessors: [0x94]
Successors: []
---
0x9b INVALID
---
0x9b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x94]
Successors: [0x25b]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x25b
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V49 = 0xa4
0xa0: V50 = 0x25b
0xa3: JUMP 0x25b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V12, 0xa4]

================================

Block 0xa4
[0xa4:0xcb]
---
Predecessors: [0x25b]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 DUP3
0xaa PUSH1 0x1
0xac PUSH1 0xa0
0xae PUSH1 0x2
0xb0 EXP
0xb1 SUB
0xb2 AND
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb AND
0xbc DUP2
0xbd MSTORE
0xbe PUSH1 0x20
0xc0 ADD
0xc1 SWAP2
0xc2 POP
0xc3 POP
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 DUP1
0xc8 SWAP2
0xc9 SUB
0xca SWAP1
0xcb RETURN
---
0xa4: JUMPDEST 
0xa5: V51 = 0x40
0xa7: V52 = M[0x40]
0xaa: V53 = 0x1
0xac: V54 = 0xa0
0xae: V55 = 0x2
0xb0: V56 = EXP 0x2 0xa0
0xb1: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0xb3: V59 = 0x1
0xb5: V60 = 0xa0
0xb7: V61 = 0x2
0xb9: V62 = EXP 0x2 0xa0
0xba: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xbd: M[V52] = V64
0xbe: V65 = 0x20
0xc0: V66 = ADD 0x20 V52
0xc4: V67 = 0x40
0xc6: V68 = M[0x40]
0xc9: V69 = SUB V66 V68
0xcb: RETURN V68 V69
---
Entry stack: [V12, 0xa4, V262]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa4]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0x3b]
Successors: [0x117]
---
0xcc JUMPDEST
0xcd PUSH2 0x6b
0xd0 PUSH2 0x117
0xd3 JUMP
---
0xcc: JUMPDEST 
0xcd: V70 = 0x6b
0xd0: V71 = 0x117
0xd3: JUMP 0x117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0xd4
[0xd4:0xd5]
---
Predecessors: []
Successors: []
---
0xd4 JUMPDEST
0xd5 STOP
---
0xd4: JUMPDEST 
0xd5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x46]
Successors: [0xdd, 0xde]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xde
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V72 = CALLVALUE
0xd8: V73 = ISZERO V72
0xd9: V74 = 0xde
0xdc: JUMPI 0xde V73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xdd]
---
Predecessors: [0xd6]
Successors: []
---
0xdd INVALID
---
0xdd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd6]
Successors: [0x272]
---
0xde JUMPDEST
0xdf PUSH2 0x6b
0xe2 PUSH2 0x272
0xe5 JUMP
---
0xde: JUMPDEST 
0xdf: V75 = 0x6b
0xe2: V76 = 0x272
0xe5: JUMP 0x272
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: []
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x51]
Successors: [0xef, 0xf0]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf0
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V77 = CALLVALUE
0xea: V78 = ISZERO V77
0xeb: V79 = 0xf0
0xee: JUMPI 0xf0 V78
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xef]
---
Predecessors: [0xe8]
Successors: []
---
0xef INVALID
---
0xef: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf0
[0xf0:0x103]
---
Predecessors: [0xe8]
Successors: [0x29c]
---
0xf0 JUMPDEST
0xf1 PUSH2 0x104
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc PUSH1 0x4
0xfe CALLDATALOAD
0xff AND
0x100 PUSH2 0x29c
0x103 JUMP
---
0xf0: JUMPDEST 
0xf1: V80 = 0x104
0xf4: V81 = 0x1
0xf6: V82 = 0xa0
0xf8: V83 = 0x2
0xfa: V84 = EXP 0x2 0xa0
0xfb: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V86 = 0x4
0xfe: V87 = CALLDATALOAD 0x4
0xff: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x100: V89 = 0x29c
0x103: JUMP 0x29c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V88]
Exit stack: [V12, 0x104, V88]

================================

Block 0x104
[0x104:0x116]
---
Predecessors: [0x29c]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 DUP1
0x108 MLOAD
0x109 SWAP2
0x10a DUP3
0x10b MSTORE
0x10c MLOAD
0x10d PUSH1 0x20
0x10f SWAP1
0x110 SWAP2
0x111 ADD
0x112 DUP2
0x113 SWAP1
0x114 SUB
0x115 SWAP1
0x116 RETURN
---
0x104: JUMPDEST 
0x105: V90 = 0x40
0x108: V91 = M[0x40]
0x10b: M[V91] = V290
0x10c: V92 = M[0x40]
0x10d: V93 = 0x20
0x111: V94 = ADD V91 0x20
0x114: V95 = SUB V94 V92
0x116: RETURN V92 V95
---
Entry stack: [V12, 0x104, V290]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x104]

================================

Block 0x117
[0x117:0x128]
---
Predecessors: [0x60, 0xcc]
Successors: [0x129, 0x151]
---
0x117 JUMPDEST
0x118 PUSH8 0xde0b6b3a7640000
0x121 CALLVALUE
0x122 LT
0x123 ISZERO
0x124 ISZERO
0x125 PUSH2 0x151
0x128 JUMPI
---
0x117: JUMPDEST 
0x118: V96 = 0xde0b6b3a7640000
0x121: V97 = CALLVALUE
0x122: V98 = LT V97 0xde0b6b3a7640000
0x123: V99 = ISZERO V98
0x124: V100 = ISZERO V99
0x125: V101 = 0x151
0x128: JUMPI 0x151 V100
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x129
[0x129:0x150]
---
Predecessors: [0x117]
Successors: [0x68]
---
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 CALLER
0x132 DUP2
0x133 AND
0x134 AND
0x135 PUSH1 0x0
0x137 SWAP1
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x2
0x13c PUSH1 0x20
0x13e DUP1
0x13f DUP4
0x140 ADD
0x141 SWAP2
0x142 DUP3
0x143 MSTORE
0x144 ADD
0x145 SWAP1
0x146 SHA3
0x147 DUP1
0x148 SLOAD
0x149 CALLVALUE
0x14a ADD
0x14b SWAP1
0x14c SSTORE
0x14d PUSH2 0x68
0x150 JUMP
---
0x129: V102 = 0x1
0x12b: V103 = 0xa0
0x12d: V104 = 0x2
0x12f: V105 = EXP 0x2 0xa0
0x130: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V107 = CALLER
0x133: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x134: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x135: V110 = 0x0
0x139: M[0x0] = V109
0x13a: V111 = 0x2
0x13c: V112 = 0x20
0x140: V113 = ADD 0x0 0x20
0x143: M[0x20] = 0x2
0x144: V114 = ADD 0x20 0x20
0x146: V115 = SHA3 0x0 0x40
0x148: V116 = S[V115]
0x149: V117 = CALLVALUE
0x14a: V118 = ADD V117 V116
0x14c: S[V115] = V118
0x14d: V119 = 0x68
0x150: JUMP 0x68
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x151
[0x151:0x155]
---
Predecessors: [0x117]
Successors: [0x68]
---
0x151 JUMPDEST
0x152 PUSH2 0x68
0x155 JUMP
---
0x151: JUMPDEST 
0x152: V120 = 0x68
0x155: JUMP 0x68
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x156
[0x156:0x156]
---
Predecessors: []
Successors: [0x157]
---
0x156 JUMPDEST
---
0x156: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x157
[0x157:0x158]
---
Predecessors: [0x156]
Successors: []
Has unresolved jump.
---
0x157 JUMPDEST
0x158 JUMP
---
0x157: JUMPDEST 
0x158: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x159
[0x159:0x18b]
---
Predecessors: [0x75]
Successors: [0x18c, 0x191]
---
0x159 JUMPDEST
0x15a PUSH1 0x0
0x15c PUSH1 0x0
0x15e PUSH1 0x0
0x160 SWAP1
0x161 SLOAD
0x162 SWAP1
0x163 PUSH2 0x100
0x166 EXP
0x167 SWAP1
0x168 DIV
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 AND
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a AND
0x17b CALLER
0x17c PUSH1 0x1
0x17e PUSH1 0xa0
0x180 PUSH1 0x2
0x182 EXP
0x183 SUB
0x184 AND
0x185 EQ
0x186 ISZERO
0x187 ISZERO
0x188 PUSH2 0x191
0x18b JUMPI
---
0x159: JUMPDEST 
0x15a: V121 = 0x0
0x15c: V122 = 0x0
0x15e: V123 = 0x0
0x161: V124 = S[0x0]
0x163: V125 = 0x100
0x166: V126 = EXP 0x100 0x0
0x168: V127 = DIV V124 0x1
0x169: V128 = 0x1
0x16b: V129 = 0xa0
0x16d: V130 = 0x2
0x16f: V131 = EXP 0x2 0xa0
0x170: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x172: V134 = 0x1
0x174: V135 = 0xa0
0x176: V136 = 0x2
0x178: V137 = EXP 0x2 0xa0
0x179: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x17b: V140 = CALLER
0x17c: V141 = 0x1
0x17e: V142 = 0xa0
0x180: V143 = 0x2
0x182: V144 = EXP 0x2 0xa0
0x183: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x184: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x185: V147 = EQ V146 V139
0x186: V148 = ISZERO V147
0x187: V149 = ISZERO V148
0x188: V150 = 0x191
0x18b: JUMPI 0x191 V149
---
Entry stack: [V12, 0x6b, V39]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x6b, V39, 0x0]

================================

Block 0x18c
[0x18c:0x190]
---
Predecessors: [0x159]
Successors: []
---
0x18c PUSH1 0x0
0x18e PUSH1 0x0
0x190 REVERT
---
0x18c: V151 = 0x0
0x18e: V152 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6b, V39, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, 0x0]

================================

Block 0x191
[0x191:0x1c3]
---
Predecessors: [0x159]
Successors: [0x1c4, 0x1c9]
---
0x191 JUMPDEST
0x192 PUSH1 0x2
0x194 PUSH1 0x0
0x196 CALLER
0x197 PUSH1 0x1
0x199 PUSH1 0xa0
0x19b PUSH1 0x2
0x19d EXP
0x19e SUB
0x19f AND
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 AND
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae SWAP1
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 PUSH1 0x0
0x1b6 SHA3
0x1b7 SLOAD
0x1b8 SWAP1
0x1b9 POP
0x1ba DUP1
0x1bb DUP3
0x1bc GT
0x1bd ISZERO
0x1be DUP1
0x1bf ISZERO
0x1c0 PUSH2 0x1c9
0x1c3 JUMPI
---
0x191: JUMPDEST 
0x192: V153 = 0x2
0x194: V154 = 0x0
0x196: V155 = CALLER
0x197: V156 = 0x1
0x199: V157 = 0xa0
0x19b: V158 = 0x2
0x19d: V159 = EXP 0x2 0xa0
0x19e: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1a0: V162 = 0x1
0x1a2: V163 = 0xa0
0x1a4: V164 = 0x2
0x1a6: V165 = EXP 0x2 0xa0
0x1a7: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1aa: M[0x0] = V167
0x1ab: V168 = 0x20
0x1ad: V169 = ADD 0x20 0x0
0x1b0: M[0x20] = 0x2
0x1b1: V170 = 0x20
0x1b3: V171 = ADD 0x20 0x20
0x1b4: V172 = 0x0
0x1b6: V173 = SHA3 0x0 0x40
0x1b7: V174 = S[V173]
0x1bc: V175 = GT V39 V174
0x1bd: V176 = ISZERO V175
0x1bf: V177 = ISZERO V176
0x1c0: V178 = 0x1c9
0x1c3: JUMPI 0x1c9 V177
---
Entry stack: [V12, 0x6b, V39, 0x0]
Stack pops: 2
Stack additions: [S1, V174, V176]
Exit stack: [V12, 0x6b, V39, V174, V176]

================================

Block 0x1c4
[0x1c4:0x1c8]
---
Predecessors: [0x191]
Successors: [0x1c9]
---
0x1c4 POP
0x1c5 PUSH1 0x0
0x1c7 DUP2
0x1c8 GT
---
0x1c5: V179 = 0x0
0x1c8: V180 = GT V174 0x0
---
Entry stack: [V12, 0x6b, V39, V174, V176]
Stack pops: 2
Stack additions: [S1, V180]
Exit stack: [V12, 0x6b, V39, V174, V180]

================================

Block 0x1c9
[0x1c9:0x1ce]
---
Predecessors: [0x191, 0x1c4]
Successors: [0x1cf, 0x1f6]
---
0x1c9 JUMPDEST
0x1ca ISZERO
0x1cb PUSH2 0x1f6
0x1ce JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V181 = ISZERO S0
0x1cb: V182 = 0x1f6
0x1ce: JUMPI 0x1f6 V181
---
Entry stack: [V12, 0x6b, V39, V174, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6b, V39, V174]

================================

Block 0x1cf
[0x1cf:0x1f5]
---
Predecessors: [0x1c9]
Successors: [0x1f6]
---
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 PUSH1 0x1
0x1d4 PUSH1 0xa0
0x1d6 PUSH1 0x2
0x1d8 EXP
0x1d9 SUB
0x1da CALLER
0x1db AND
0x1dc SWAP1
0x1dd DUP4
0x1de ISZERO
0x1df PUSH2 0x8fc
0x1e2 MUL
0x1e3 SWAP1
0x1e4 DUP5
0x1e5 SWAP1
0x1e6 PUSH1 0x0
0x1e8 DUP2
0x1e9 DUP1
0x1ea DUP1
0x1eb SUB
0x1ec DUP2
0x1ed DUP6
0x1ee DUP9
0x1ef DUP9
0x1f0 CALL
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
---
0x1cf: V183 = 0x40
0x1d1: V184 = M[0x40]
0x1d2: V185 = 0x1
0x1d4: V186 = 0xa0
0x1d6: V187 = 0x2
0x1d8: V188 = EXP 0x2 0xa0
0x1d9: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1da: V190 = CALLER
0x1db: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V192 = ISZERO V39
0x1df: V193 = 0x8fc
0x1e2: V194 = MUL 0x8fc V192
0x1e6: V195 = 0x0
0x1eb: V196 = SUB V184 V184
0x1f0: V197 = CALL V194 V191 V39 V184 V196 V184 0x0
---
Entry stack: [V12, 0x6b, V39, V174]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x6b, V39, V174]

================================

Block 0x1f6
[0x1f6:0x1f6]
---
Predecessors: [0x1c9, 0x1cf]
Successors: [0x1f7]
---
0x1f6 JUMPDEST
---
0x1f6: JUMPDEST 
---
Entry stack: [V12, 0x6b, V39, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, V174]

================================

Block 0x1f7
[0x1f7:0x1f7]
---
Predecessors: [0x1f6]
Successors: [0x1f8]
---
0x1f7 JUMPDEST
---
0x1f7: JUMPDEST 
---
Entry stack: [V12, 0x6b, V39, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, V174]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f7]
Successors: [0x6b]
---
0x1f8 JUMPDEST
0x1f9 POP
0x1fa POP
0x1fb JUMP
---
0x1f8: JUMPDEST 
0x1fb: JUMP 0x6b
---
Entry stack: [V12, 0x6b, V39, V174]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x22c]
---
Predecessors: [0x8a]
Successors: [0x22d, 0x232]
---
0x1fc JUMPDEST
0x1fd PUSH1 0x0
0x1ff PUSH1 0x0
0x201 SWAP1
0x202 SLOAD
0x203 SWAP1
0x204 PUSH2 0x100
0x207 EXP
0x208 SWAP1
0x209 DIV
0x20a PUSH1 0x1
0x20c PUSH1 0xa0
0x20e PUSH1 0x2
0x210 EXP
0x211 SUB
0x212 AND
0x213 PUSH1 0x1
0x215 PUSH1 0xa0
0x217 PUSH1 0x2
0x219 EXP
0x21a SUB
0x21b AND
0x21c CALLER
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 AND
0x226 EQ
0x227 ISZERO
0x228 ISZERO
0x229 PUSH2 0x232
0x22c JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V198 = 0x0
0x1ff: V199 = 0x0
0x202: V200 = S[0x0]
0x204: V201 = 0x100
0x207: V202 = EXP 0x100 0x0
0x209: V203 = DIV V200 0x1
0x20a: V204 = 0x1
0x20c: V205 = 0xa0
0x20e: V206 = 0x2
0x210: V207 = EXP 0x2 0xa0
0x211: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x212: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x213: V210 = 0x1
0x215: V211 = 0xa0
0x217: V212 = 0x2
0x219: V213 = EXP 0x2 0xa0
0x21a: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21b: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x21c: V216 = CALLER
0x21d: V217 = 0x1
0x21f: V218 = 0xa0
0x221: V219 = 0x2
0x223: V220 = EXP 0x2 0xa0
0x224: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x225: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x226: V223 = EQ V222 V215
0x227: V224 = ISZERO V223
0x228: V225 = ISZERO V224
0x229: V226 = 0x232
0x22c: JUMPI 0x232 V225
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x22d
[0x22d:0x231]
---
Predecessors: [0x1fc]
Successors: []
---
0x22d PUSH1 0x0
0x22f PUSH1 0x0
0x231 REVERT
---
0x22d: V227 = 0x0
0x22f: V228 = 0x0
0x231: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x232
[0x232:0x246]
---
Predecessors: [0x1fc]
Successors: [0x247, 0x24c]
---
0x232 JUMPDEST
0x233 ADDRESS
0x234 PUSH1 0x1
0x236 PUSH1 0xa0
0x238 PUSH1 0x2
0x23a EXP
0x23b SUB
0x23c AND
0x23d BALANCE
0x23e PUSH1 0x0
0x240 EQ
0x241 ISZERO
0x242 ISZERO
0x243 PUSH2 0x24c
0x246 JUMPI
---
0x232: JUMPDEST 
0x233: V229 = ADDRESS
0x234: V230 = 0x1
0x236: V231 = 0xa0
0x238: V232 = 0x2
0x23a: V233 = EXP 0x2 0xa0
0x23b: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23c: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x23d: V236 = BALANCE V235
0x23e: V237 = 0x0
0x240: V238 = EQ 0x0 V236
0x241: V239 = ISZERO V238
0x242: V240 = ISZERO V239
0x243: V241 = 0x24c
0x246: JUMPI 0x24c V240
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x247
[0x247:0x24b]
---
Predecessors: [0x232]
Successors: []
---
0x247 PUSH1 0x0
0x249 PUSH1 0x0
0x24b REVERT
---
0x247: V242 = 0x0
0x249: V243 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x24c
[0x24c:0x257]
---
Predecessors: [0x232]
Successors: []
---
0x24c JUMPDEST
0x24d CALLER
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 AND
0x257 SELFDESTRUCT
---
0x24c: JUMPDEST 
0x24d: V244 = CALLER
0x24e: V245 = 0x1
0x250: V246 = 0xa0
0x252: V247 = 0x2
0x254: V248 = EXP 0x2 0xa0
0x255: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x257: SELFDESTRUCT V250
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x258
[0x258:0x258]
---
Predecessors: []
Successors: [0x259]
---
0x258 JUMPDEST
---
0x258: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x259
[0x259:0x25a]
---
Predecessors: [0x258]
Successors: []
Has unresolved jump.
---
0x259 JUMPDEST
0x25a JUMP
---
0x259: JUMPDEST 
0x25a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25b
[0x25b:0x271]
---
Predecessors: [0x9c]
Successors: [0xa4]
---
0x25b JUMPDEST
0x25c PUSH1 0x1
0x25e SLOAD
0x25f PUSH1 0x0
0x261 PUSH2 0x100
0x264 EXP
0x265 SWAP1
0x266 DIV
0x267 PUSH1 0x1
0x269 PUSH1 0xa0
0x26b PUSH1 0x2
0x26d EXP
0x26e SUB
0x26f AND
0x270 DUP2
0x271 JUMP
---
0x25b: JUMPDEST 
0x25c: V251 = 0x1
0x25e: V252 = S[0x1]
0x25f: V253 = 0x0
0x261: V254 = 0x100
0x264: V255 = EXP 0x100 0x0
0x266: V256 = DIV V252 0x1
0x267: V257 = 0x1
0x269: V258 = 0xa0
0x26b: V259 = 0x2
0x26d: V260 = EXP 0x2 0xa0
0x26e: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x271: JUMP 0xa4
---
Entry stack: [V12, 0xa4]
Stack pops: 1
Stack additions: [S0, V262]
Exit stack: [V12, 0xa4, V262]

================================

Block 0x272
[0x272:0x299]
---
Predecessors: [0xde]
Successors: [0x29a]
---
0x272 JUMPDEST
0x273 CALLER
0x274 PUSH1 0x1
0x276 PUSH1 0x0
0x278 PUSH2 0x100
0x27b EXP
0x27c DUP2
0x27d SLOAD
0x27e DUP2
0x27f PUSH1 0x1
0x281 PUSH1 0xa0
0x283 PUSH1 0x2
0x285 EXP
0x286 SUB
0x287 MUL
0x288 NOT
0x289 AND
0x28a SWAP1
0x28b DUP4
0x28c PUSH1 0x1
0x28e PUSH1 0xa0
0x290 PUSH1 0x2
0x292 EXP
0x293 SUB
0x294 AND
0x295 MUL
0x296 OR
0x297 SWAP1
0x298 SSTORE
0x299 POP
---
0x272: JUMPDEST 
0x273: V263 = CALLER
0x274: V264 = 0x1
0x276: V265 = 0x0
0x278: V266 = 0x100
0x27b: V267 = EXP 0x100 0x0
0x27d: V268 = S[0x1]
0x27f: V269 = 0x1
0x281: V270 = 0xa0
0x283: V271 = 0x2
0x285: V272 = EXP 0x2 0xa0
0x286: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x287: V274 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x288: V275 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x289: V276 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V268
0x28c: V277 = 0x1
0x28e: V278 = 0xa0
0x290: V279 = 0x2
0x292: V280 = EXP 0x2 0xa0
0x293: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x295: V283 = MUL V282 0x1
0x296: V284 = OR V283 V276
0x298: S[0x1] = V284
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x29a
[0x29a:0x29b]
---
Predecessors: [0x272]
Successors: [0x6b]
---
0x29a JUMPDEST
0x29b JUMP
---
0x29a: JUMPDEST 
0x29b: JUMP 0x6b
---
Entry stack: [V12, 0x6b]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x29c
[0x29c:0x2ad]
---
Predecessors: [0xf0]
Successors: [0x104]
---
0x29c JUMPDEST
0x29d PUSH1 0x2
0x29f PUSH1 0x20
0x2a1 MSTORE
0x2a2 PUSH1 0x0
0x2a4 SWAP1
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x40
0x2a9 SWAP1
0x2aa SHA3
0x2ab SLOAD
0x2ac DUP2
0x2ad JUMP
---
0x29c: JUMPDEST 
0x29d: V285 = 0x2
0x29f: V286 = 0x20
0x2a1: M[0x20] = 0x2
0x2a2: V287 = 0x0
0x2a6: M[0x0] = V88
0x2a7: V288 = 0x40
0x2aa: V289 = SHA3 0x0 0x40
0x2ab: V290 = S[V289]
0x2ad: JUMP 0x104
---
Entry stack: [V12, 0x104, V88]
Stack pops: 2
Stack additions: [S1, V290]
Exit stack: [V12, 0x104, V290]

================================

Block 0x2ae
[0x2ae:0x2e3]
---
Predecessors: []
Successors: []
---
0x2ae STOP
0x2af LOG1
0x2b0 PUSH6 0x627a7a723058
0x2b7 SHA3
0x2b8 MISSING 0xd9
0x2b9 MISSING 0xfb
0x2ba MISSING 0x2e
0x2bb MISSING 0x22
0x2bc PUSH6 0x5384539af7e
0x2c3 MISSING 0xb7
0x2c4 MISSING 0xd1
0x2c5 MISSING 0xeb
0x2c6 MUL
0x2c7 LOG3
0x2c8 MISSING 0xe7
0x2c9 MISSING 0xdc
0x2ca SWAP12
0x2cb RETURNDATASIZE
0x2cc SWAP9
0x2cd CALLDATASIZE
0x2ce POP
0x2cf SWAP5
0x2d0 PUSH19 0x94a84f69e89c430029
---
0x2ae: STOP 
0x2af: LOG S0 S1 S2
0x2b0: V291 = 0x627a7a723058
0x2b7: V292 = SHA3 0x627a7a723058 S3
0x2b8: MISSING 0xd9
0x2b9: MISSING 0xfb
0x2ba: MISSING 0x2e
0x2bb: MISSING 0x22
0x2bc: V293 = 0x5384539af7e
0x2c3: MISSING 0xb7
0x2c4: MISSING 0xd1
0x2c5: MISSING 0xeb
0x2c6: V294 = MUL S0 S1
0x2c7: LOG V294 S2 S3 S4 S5
0x2c8: MISSING 0xe7
0x2c9: MISSING 0xdc
0x2cb: V295 = RETURNDATASIZE
0x2cd: V296 = CALLDATASIZE
0x2d0: V297 = 0x94a84f69e89c430029
---
Entry stack: []
Stack pops: 0
Stack additions: [V292, 0x5384539af7e, 0x94a84f69e89c430029, S4, S12, S1, S2, S3, S8, S5, S6, S7, V295, S9, S10, S11, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x6d
Exit block: 0x6b
Body: 0x6b, 0x6d, 0x74, 0x75, 0x159, 0x18c, 0x191, 0x1c4, 0x1c9, 0x1cf, 0x1f6, 0x1f7, 0x1f8

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x82
Exit block: 0x24c
Body: 0x82, 0x89, 0x8a, 0x1fc, 0x22d, 0x232, 0x247, 0x24c

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x94
Exit block: 0xa4
Body: 0x94, 0x9b, 0x9c, 0xa4, 0x25b

Function 3:
Public function signature: 0xd0e30db0
Entry block: 0xcc
Exit block: 0x6b
Body: 0x6b, 0xcc

Function 4:
Public function signature: 0xe1c7392a
Entry block: 0xd6
Exit block: 0x6b
Body: 0x6b, 0xd6, 0xdd, 0xde, 0x272, 0x29a

Function 5:
Public function signature: 0xfc7e286d
Entry block: 0xe8
Exit block: 0x104
Body: 0xe8, 0xef, 0xf0, 0x104, 0x29c

Function 6:
Public fallback function
Entry block: 0x5c
Exit block: 0x6b
Body: 0x5c, 0x60, 0x68, 0x69, 0x6b

