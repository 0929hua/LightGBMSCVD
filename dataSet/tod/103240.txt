Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xc1]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xc1
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xc1
0xc: JUMPI 0xc1 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xc6]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x14bfd6d0
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xc6
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x14bfd6d0
0x22: V15 = EQ V13 0x14bfd6d0
0x23: V16 = 0xc6
0x26: JUMPI 0xc6 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xf8]
---
0x27 DUP1
0x28 PUSH4 0x34eac76f
0x2d EQ
0x2e PUSH2 0xf8
0x31 JUMPI
---
0x28: V17 = 0x34eac76f
0x2d: V18 = EQ 0x34eac76f V13
0x2e: V19 = 0xf8
0x31: JUMPI 0xf8 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x11f]
---
0x32 DUP1
0x33 PUSH4 0x35a063b4
0x38 EQ
0x39 PUSH2 0x11f
0x3c JUMPI
---
0x33: V20 = 0x35a063b4
0x38: V21 = EQ 0x35a063b4 V13
0x39: V22 = 0x11f
0x3c: JUMPI 0x11f V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x134]
---
0x3d DUP1
0x3e PUSH4 0x4783c35b
0x43 EQ
0x44 PUSH2 0x134
0x47 JUMPI
---
0x3e: V23 = 0x4783c35b
0x43: V24 = EQ 0x4783c35b V13
0x44: V25 = 0x134
0x47: JUMPI 0x134 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x147]
---
0x48 DUP1
0x49 PUSH4 0x53f754e0
0x4e EQ
0x4f PUSH2 0x147
0x52 JUMPI
---
0x49: V26 = 0x53f754e0
0x4e: V27 = EQ 0x53f754e0 V13
0x4f: V28 = 0x147
0x52: JUMPI 0x147 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x16f]
---
0x53 DUP1
0x54 PUSH4 0x63037b0c
0x59 EQ
0x5a PUSH2 0x16f
0x5d JUMPI
---
0x54: V29 = 0x63037b0c
0x59: V30 = EQ 0x63037b0c V13
0x5a: V31 = 0x16f
0x5d: JUMPI 0x16f V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1b5]
---
0x5e DUP1
0x5f PUSH4 0x66829b16
0x64 EQ
0x65 PUSH2 0x1b5
0x68 JUMPI
---
0x5f: V32 = 0x66829b16
0x64: V33 = EQ 0x66829b16 V13
0x65: V34 = 0x1b5
0x68: JUMPI 0x1b5 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1d4]
---
0x69 DUP1
0x6a PUSH4 0x6901f668
0x6f EQ
0x70 PUSH2 0x1d4
0x73 JUMPI
---
0x6a: V35 = 0x6901f668
0x6f: V36 = EQ 0x6901f668 V13
0x70: V37 = 0x1d4
0x73: JUMPI 0x1d4 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1e7]
---
0x74 DUP1
0x75 PUSH4 0x853828b6
0x7a EQ
0x7b PUSH2 0x1e7
0x7e JUMPI
---
0x75: V38 = 0x853828b6
0x7a: V39 = EQ 0x853828b6 V13
0x7b: V40 = 0x1e7
0x7e: JUMPI 0x1e7 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1fa]
---
0x7f DUP1
0x80 PUSH4 0xba3f5a12
0x85 EQ
0x86 PUSH2 0x1fa
0x89 JUMPI
---
0x80: V41 = 0xba3f5a12
0x85: V42 = EQ 0xba3f5a12 V13
0x86: V43 = 0x1fa
0x89: JUMPI 0x1fa V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x20d]
---
0x8a DUP1
0x8b PUSH4 0xd2c51c72
0x90 EQ
0x91 PUSH2 0x20d
0x94 JUMPI
---
0x8b: V44 = 0xd2c51c72
0x90: V45 = EQ 0xd2c51c72 V13
0x91: V46 = 0x20d
0x94: JUMPI 0x20d V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x220]
---
0x95 DUP1
0x96 PUSH4 0xdb171211
0x9b EQ
0x9c PUSH2 0x220
0x9f JUMPI
---
0x96: V47 = 0xdb171211
0x9b: V48 = EQ 0xdb171211 V13
0x9c: V49 = 0x220
0x9f: JUMPI 0x220 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x233]
---
0xa0 DUP1
0xa1 PUSH4 0xe09adc70
0xa6 EQ
0xa7 PUSH2 0x233
0xaa JUMPI
---
0xa1: V50 = 0xe09adc70
0xa6: V51 = EQ 0xe09adc70 V13
0xa7: V52 = 0x233
0xaa: JUMPI 0x233 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x246]
---
0xab DUP1
0xac PUSH4 0xeffd88b7
0xb1 EQ
0xb2 PUSH2 0x246
0xb5 JUMPI
---
0xac: V53 = 0xeffd88b7
0xb1: V54 = EQ 0xeffd88b7 V13
0xb2: V55 = 0x246
0xb5: JUMPI 0x246 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x259]
---
0xb6 DUP1
0xb7 PUSH4 0xfc0c546a
0xbc EQ
0xbd PUSH2 0x259
0xc0 JUMPI
---
0xb7: V56 = 0xfc0c546a
0xbc: V57 = EQ 0xfc0c546a V13
0xbd: V58 = 0x259
0xc0: JUMPI 0x259 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xc5]
---
Predecessors: [0x0, 0xb6]
Successors: []
---
0xc1 JUMPDEST
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc1: JUMPDEST 
0xc2: V59 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0xd]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V60 = CALLVALUE
0xc8: V61 = ISZERO V60
0xc9: V62 = 0xd1
0xcc: JUMPI 0xd1 V61
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V63 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd1
[0xd1:0xdb]
---
Predecessors: [0xc6]
Successors: [0x26c]
---
0xd1 JUMPDEST
0xd2 PUSH2 0xdc
0xd5 PUSH1 0x4
0xd7 CALLDATALOAD
0xd8 PUSH2 0x26c
0xdb JUMP
---
0xd1: JUMPDEST 
0xd2: V64 = 0xdc
0xd5: V65 = 0x4
0xd7: V66 = CALLDATALOAD 0x4
0xd8: V67 = 0x26c
0xdb: JUMP 0x26c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xdc, V66]
Exit stack: [V13, 0xdc, V66]

================================

Block 0xdc
[0xdc:0xf7]
---
Predecessors: [0x27a, 0x325, 0x93f]
Successors: []
---
0xdc JUMPDEST
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 PUSH1 0x1
0xe2 PUSH1 0xa0
0xe4 PUSH1 0x2
0xe6 EXP
0xe7 SUB
0xe8 SWAP1
0xe9 SWAP2
0xea AND
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 DUP1
0xf4 SWAP2
0xf5 SUB
0xf6 SWAP1
0xf7 RETURN
---
0xdc: JUMPDEST 
0xdd: V68 = 0x40
0xdf: V69 = M[0x40]
0xe0: V70 = 0x1
0xe2: V71 = 0xa0
0xe4: V72 = 0x2
0xe6: V73 = EXP 0x2 0xa0
0xe7: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea: V75 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xec: M[V69] = V75
0xed: V76 = 0x20
0xef: V77 = ADD 0x20 V69
0xf0: V78 = 0x40
0xf2: V79 = M[0x40]
0xf5: V80 = SUB V77 V79
0xf7: RETURN V79 V80
---
Entry stack: [V13, 0xdc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xdc]

================================

Block 0xf8
[0xf8:0xfe]
---
Predecessors: [0x27]
Successors: [0xff, 0x103]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa ISZERO
0xfb PUSH2 0x103
0xfe JUMPI
---
0xf8: JUMPDEST 
0xf9: V81 = CALLVALUE
0xfa: V82 = ISZERO V81
0xfb: V83 = 0x103
0xfe: JUMPI 0x103 V82
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xff
[0xff:0x102]
---
Predecessors: [0xf8]
Successors: []
---
0xff PUSH1 0x0
0x101 DUP1
0x102 REVERT
---
0xff: V84 = 0x0
0x102: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0xf8]
Successors: [0x294]
---
0x103 JUMPDEST
0x104 PUSH2 0x10b
0x107 PUSH2 0x294
0x10a JUMP
---
0x103: JUMPDEST 
0x104: V85 = 0x10b
0x107: V86 = 0x294
0x10a: JUMP 0x294
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V13, 0x10b]

================================

Block 0x10b
[0x10b:0x11e]
---
Predecessors: [0x294, 0x58c, 0x92a]
Successors: []
---
0x10b JUMPDEST
0x10c PUSH1 0x40
0x10e MLOAD
0x10f SWAP1
0x110 ISZERO
0x111 ISZERO
0x112 DUP2
0x113 MSTORE
0x114 PUSH1 0x20
0x116 ADD
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b SWAP2
0x11c SUB
0x11d SWAP1
0x11e RETURN
---
0x10b: JUMPDEST 
0x10c: V87 = 0x40
0x10e: V88 = M[0x40]
0x110: V89 = ISZERO S0
0x111: V90 = ISZERO V89
0x113: M[V88] = V90
0x114: V91 = 0x20
0x116: V92 = ADD 0x20 V88
0x117: V93 = 0x40
0x119: V94 = M[0x40]
0x11c: V95 = SUB V92 V94
0x11e: RETURN V94 V95
---
Entry stack: [V13, 0x132, S4, {0x0, 0x132}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x132, S4, {0x0, 0x132}, S2, S1]

================================

Block 0x11f
[0x11f:0x125]
---
Predecessors: [0x32]
Successors: [0x126, 0x12a]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0x11f: JUMPDEST 
0x120: V96 = CALLVALUE
0x121: V97 = ISZERO V96
0x122: V98 = 0x12a
0x125: JUMPI 0x12a V97
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x11f]
Successors: []
---
0x126 PUSH1 0x0
0x128 DUP1
0x129 REVERT
---
0x126: V99 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12a
[0x12a:0x131]
---
Predecessors: [0x11f]
Successors: [0x29d]
---
0x12a JUMPDEST
0x12b PUSH2 0x132
0x12e PUSH2 0x29d
0x131 JUMP
---
0x12a: JUMPDEST 
0x12b: V100 = 0x132
0x12e: V101 = 0x29d
0x131: JUMP 0x29d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x132]
Exit stack: [V13, 0x132]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x3f3, 0x79d]
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x134
[0x134:0x13a]
---
Predecessors: [0x3d]
Successors: [0x13b, 0x13f]
---
0x134 JUMPDEST
0x135 CALLVALUE
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x134: JUMPDEST 
0x135: V102 = CALLVALUE
0x136: V103 = ISZERO V102
0x137: V104 = 0x13f
0x13a: JUMPI 0x13f V103
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x134]
Successors: []
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
---
0x13b: V105 = 0x0
0x13e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13f
[0x13f:0x146]
---
Predecessors: [0x134]
Successors: [0x325]
---
0x13f JUMPDEST
0x140 PUSH2 0xdc
0x143 PUSH2 0x325
0x146 JUMP
---
0x13f: JUMPDEST 
0x140: V106 = 0xdc
0x143: V107 = 0x325
0x146: JUMP 0x325
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V13, 0xdc]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0x48]
Successors: [0x14e, 0x152]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x147: JUMPDEST 
0x148: V108 = CALLVALUE
0x149: V109 = ISZERO V108
0x14a: V110 = 0x152
0x14d: JUMPI 0x152 V109
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x147]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V111 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x152
[0x152:0x15c]
---
Predecessors: [0x147]
Successors: [0x334]
---
0x152 JUMPDEST
0x153 PUSH2 0x15d
0x156 PUSH1 0x4
0x158 CALLDATALOAD
0x159 PUSH2 0x334
0x15c JUMP
---
0x152: JUMPDEST 
0x153: V112 = 0x15d
0x156: V113 = 0x4
0x158: V114 = CALLDATALOAD 0x4
0x159: V115 = 0x334
0x15c: JUMP 0x334
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x15d, V114]
Exit stack: [V13, 0x15d, V114]

================================

Block 0x15d
[0x15d:0x16e]
---
Predecessors: [0x347, 0x7a3, 0x7a9, 0x933, 0x939]
Successors: []
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 MLOAD
0x161 SWAP1
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b SWAP2
0x16c SUB
0x16d SWAP1
0x16e RETURN
---
0x15d: JUMPDEST 
0x15e: V116 = 0x40
0x160: V117 = M[0x40]
0x163: M[V117] = S0
0x164: V118 = 0x20
0x166: V119 = ADD 0x20 V117
0x167: V120 = 0x40
0x169: V121 = M[0x40]
0x16c: V122 = SUB V119 V121
0x16e: RETURN V121 V122
---
Entry stack: [V13, 0x132, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x16f
[0x16f:0x175]
---
Predecessors: [0x53]
Successors: [0x176, 0x17a]
---
0x16f JUMPDEST
0x170 CALLVALUE
0x171 ISZERO
0x172 PUSH2 0x17a
0x175 JUMPI
---
0x16f: JUMPDEST 
0x170: V123 = CALLVALUE
0x171: V124 = ISZERO V123
0x172: V125 = 0x17a
0x175: JUMPI 0x17a V124
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x176
[0x176:0x179]
---
Predecessors: [0x16f]
Successors: []
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
---
0x176: V126 = 0x0
0x179: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17a
[0x17a:0x184]
---
Predecessors: [0x16f]
Successors: [0x34e]
---
0x17a JUMPDEST
0x17b PUSH2 0x185
0x17e PUSH1 0x4
0x180 CALLDATALOAD
0x181 PUSH2 0x34e
0x184 JUMP
---
0x17a: JUMPDEST 
0x17b: V127 = 0x185
0x17e: V128 = 0x4
0x180: V129 = CALLDATALOAD 0x4
0x181: V130 = 0x34e
0x184: JUMP 0x34e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x185, V129]
Exit stack: [V13, 0x185, V129]

================================

Block 0x185
[0x185:0x1b4]
---
Predecessors: [0x35c]
Successors: []
---
0x185 JUMPDEST
0x186 PUSH1 0x40
0x188 MLOAD
0x189 PUSH1 0x1
0x18b PUSH1 0xa0
0x18d PUSH1 0x2
0x18f EXP
0x190 SUB
0x191 SWAP1
0x192 SWAP4
0x193 AND
0x194 DUP4
0x195 MSTORE
0x196 PUSH1 0x20
0x198 DUP4
0x199 ADD
0x19a SWAP2
0x19b SWAP1
0x19c SWAP2
0x19d MSTORE
0x19e ISZERO
0x19f ISZERO
0x1a0 PUSH1 0x40
0x1a2 DUP1
0x1a3 DUP4
0x1a4 ADD
0x1a5 SWAP2
0x1a6 SWAP1
0x1a7 SWAP2
0x1a8 MSTORE
0x1a9 PUSH1 0x60
0x1ab SWAP1
0x1ac SWAP2
0x1ad ADD
0x1ae SWAP1
0x1af MLOAD
0x1b0 DUP1
0x1b1 SWAP2
0x1b2 SUB
0x1b3 SWAP1
0x1b4 RETURN
---
0x185: JUMPDEST 
0x186: V131 = 0x40
0x188: V132 = M[0x40]
0x189: V133 = 0x1
0x18b: V134 = 0xa0
0x18d: V135 = 0x2
0x18f: V136 = EXP 0x2 0xa0
0x190: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x193: V138 = AND V332 0xffffffffffffffffffffffffffffffffffffffff
0x195: M[V132] = V138
0x196: V139 = 0x20
0x199: V140 = ADD V132 0x20
0x19d: M[V140] = V323
0x19e: V141 = ISZERO V334
0x19f: V142 = ISZERO V141
0x1a0: V143 = 0x40
0x1a4: V144 = ADD V132 0x40
0x1a8: M[V144] = V142
0x1a9: V145 = 0x60
0x1ad: V146 = ADD V132 0x60
0x1af: V147 = M[0x40]
0x1b2: V148 = SUB V146 V147
0x1b4: RETURN V147 V148
---
Entry stack: [V13, 0x185, V332, V323, V334]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x185]

================================

Block 0x1b5
[0x1b5:0x1bb]
---
Predecessors: [0x5e]
Successors: [0x1bc, 0x1c0]
---
0x1b5 JUMPDEST
0x1b6 CALLVALUE
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V149 = CALLVALUE
0x1b7: V150 = ISZERO V149
0x1b8: V151 = 0x1c0
0x1bb: JUMPI 0x1c0 V150
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1b5]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V152 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c0
[0x1c0:0x1d3]
---
Predecessors: [0x1b5]
Successors: [0x38c]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0x132
0x1c4 PUSH1 0x1
0x1c6 PUSH1 0xa0
0x1c8 PUSH1 0x2
0x1ca EXP
0x1cb SUB
0x1cc PUSH1 0x4
0x1ce CALLDATALOAD
0x1cf AND
0x1d0 PUSH2 0x38c
0x1d3 JUMP
---
0x1c0: JUMPDEST 
0x1c1: V153 = 0x132
0x1c4: V154 = 0x1
0x1c6: V155 = 0xa0
0x1c8: V156 = 0x2
0x1ca: V157 = EXP 0x2 0xa0
0x1cb: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cc: V159 = 0x4
0x1ce: V160 = CALLDATALOAD 0x4
0x1cf: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V162 = 0x38c
0x1d3: JUMP 0x38c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x132, V161]
Exit stack: [V13, 0x132, V161]

================================

Block 0x1d4
[0x1d4:0x1da]
---
Predecessors: [0x69]
Successors: [0x1db, 0x1df]
---
0x1d4 JUMPDEST
0x1d5 CALLVALUE
0x1d6 ISZERO
0x1d7 PUSH2 0x1df
0x1da JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V163 = CALLVALUE
0x1d6: V164 = ISZERO V163
0x1d7: V165 = 0x1df
0x1da: JUMPI 0x1df V164
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1db
[0x1db:0x1de]
---
Predecessors: [0x1d4]
Successors: []
---
0x1db PUSH1 0x0
0x1dd DUP1
0x1de REVERT
---
0x1db: V166 = 0x0
0x1de: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1df
[0x1df:0x1e6]
---
Predecessors: [0x1d4]
Successors: [0x424]
---
0x1df JUMPDEST
0x1e0 PUSH2 0x10b
0x1e3 PUSH2 0x424
0x1e6 JUMP
---
0x1df: JUMPDEST 
0x1e0: V167 = 0x10b
0x1e3: V168 = 0x424
0x1e6: JUMP 0x424
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V13, 0x10b]

================================

Block 0x1e7
[0x1e7:0x1ed]
---
Predecessors: [0x74]
Successors: [0x1ee, 0x1f2]
---
0x1e7 JUMPDEST
0x1e8 CALLVALUE
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V169 = CALLVALUE
0x1e9: V170 = ISZERO V169
0x1ea: V171 = 0x1f2
0x1ed: JUMPI 0x1f2 V170
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e7]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V172 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f2
[0x1f2:0x1f9]
---
Predecessors: [0x1e7]
Successors: [0x593]
---
0x1f2 JUMPDEST
0x1f3 PUSH2 0x132
0x1f6 PUSH2 0x593
0x1f9 JUMP
---
0x1f2: JUMPDEST 
0x1f3: V173 = 0x132
0x1f6: V174 = 0x593
0x1f9: JUMP 0x593
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x132]
Exit stack: [V13, 0x132]

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0x7f]
Successors: [0x201, 0x205]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V175 = CALLVALUE
0x1fc: V176 = ISZERO V175
0x1fd: V177 = 0x205
0x200: JUMPI 0x205 V176
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
---
0x201: V178 = 0x0
0x204: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x1fa]
Successors: [0x7a3]
---
0x205 JUMPDEST
0x206 PUSH2 0x15d
0x209 PUSH2 0x7a3
0x20c JUMP
---
0x205: JUMPDEST 
0x206: V179 = 0x15d
0x209: V180 = 0x7a3
0x20c: JUMP 0x7a3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x15d]
Exit stack: [V13, 0x15d]

================================

Block 0x20d
[0x20d:0x213]
---
Predecessors: [0x8a]
Successors: [0x214, 0x218]
---
0x20d JUMPDEST
0x20e CALLVALUE
0x20f ISZERO
0x210 PUSH2 0x218
0x213 JUMPI
---
0x20d: JUMPDEST 
0x20e: V181 = CALLVALUE
0x20f: V182 = ISZERO V181
0x210: V183 = 0x218
0x213: JUMPI 0x218 V182
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x20d]
Successors: []
---
0x214 PUSH1 0x0
0x216 DUP1
0x217 REVERT
---
0x214: V184 = 0x0
0x217: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x218
[0x218:0x21f]
---
Predecessors: [0x20d]
Successors: [0x7a9]
---
0x218 JUMPDEST
0x219 PUSH2 0x15d
0x21c PUSH2 0x7a9
0x21f JUMP
---
0x218: JUMPDEST 
0x219: V185 = 0x15d
0x21c: V186 = 0x7a9
0x21f: JUMP 0x7a9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x15d]
Exit stack: [V13, 0x15d]

================================

Block 0x220
[0x220:0x226]
---
Predecessors: [0x95]
Successors: [0x227, 0x22b]
---
0x220 JUMPDEST
0x221 CALLVALUE
0x222 ISZERO
0x223 PUSH2 0x22b
0x226 JUMPI
---
0x220: JUMPDEST 
0x221: V187 = CALLVALUE
0x222: V188 = ISZERO V187
0x223: V189 = 0x22b
0x226: JUMPI 0x22b V188
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x220]
Successors: []
---
0x227 PUSH1 0x0
0x229 DUP1
0x22a REVERT
---
0x227: V190 = 0x0
0x22a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x22b
[0x22b:0x232]
---
Predecessors: [0x220]
Successors: [0x7af]
---
0x22b JUMPDEST
0x22c PUSH2 0x10b
0x22f PUSH2 0x7af
0x232 JUMP
---
0x22b: JUMPDEST 
0x22c: V191 = 0x10b
0x22f: V192 = 0x7af
0x232: JUMP 0x7af
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V13, 0x10b]

================================

Block 0x233
[0x233:0x239]
---
Predecessors: [0xa0]
Successors: [0x23a, 0x23e]
---
0x233 JUMPDEST
0x234 CALLVALUE
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x233: JUMPDEST 
0x234: V193 = CALLVALUE
0x235: V194 = ISZERO V193
0x236: V195 = 0x23e
0x239: JUMPI 0x23e V194
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x233]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V196 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x23e
[0x23e:0x245]
---
Predecessors: [0x233]
Successors: [0x933]
---
0x23e JUMPDEST
0x23f PUSH2 0x15d
0x242 PUSH2 0x933
0x245 JUMP
---
0x23e: JUMPDEST 
0x23f: V197 = 0x15d
0x242: V198 = 0x933
0x245: JUMP 0x933
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x15d]
Exit stack: [V13, 0x15d]

================================

Block 0x246
[0x246:0x24c]
---
Predecessors: [0xab]
Successors: [0x24d, 0x251]
---
0x246 JUMPDEST
0x247 CALLVALUE
0x248 ISZERO
0x249 PUSH2 0x251
0x24c JUMPI
---
0x246: JUMPDEST 
0x247: V199 = CALLVALUE
0x248: V200 = ISZERO V199
0x249: V201 = 0x251
0x24c: JUMPI 0x251 V200
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24d
[0x24d:0x250]
---
Predecessors: [0x246]
Successors: []
---
0x24d PUSH1 0x0
0x24f DUP1
0x250 REVERT
---
0x24d: V202 = 0x0
0x250: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x251
[0x251:0x258]
---
Predecessors: [0x246]
Successors: [0x939]
---
0x251 JUMPDEST
0x252 PUSH2 0x15d
0x255 PUSH2 0x939
0x258 JUMP
---
0x251: JUMPDEST 
0x252: V203 = 0x15d
0x255: V204 = 0x939
0x258: JUMP 0x939
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x15d]
Exit stack: [V13, 0x15d]

================================

Block 0x259
[0x259:0x25f]
---
Predecessors: [0xb6]
Successors: [0x260, 0x264]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x259: JUMPDEST 
0x25a: V205 = CALLVALUE
0x25b: V206 = ISZERO V205
0x25c: V207 = 0x264
0x25f: JUMPI 0x264 V206
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x259]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V208 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x264
[0x264:0x26b]
---
Predecessors: [0x259]
Successors: [0x93f]
---
0x264 JUMPDEST
0x265 PUSH2 0xdc
0x268 PUSH2 0x93f
0x26b JUMP
---
0x264: JUMPDEST 
0x265: V209 = 0xdc
0x268: V210 = 0x93f
0x26b: JUMP 0x93f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V13, 0xdc]

================================

Block 0x26c
[0x26c:0x278]
---
Predecessors: [0xd1]
Successors: [0x279, 0x27a]
---
0x26c JUMPDEST
0x26d PUSH1 0x5
0x26f DUP1
0x270 SLOAD
0x271 DUP3
0x272 SWAP1
0x273 DUP2
0x274 LT
0x275 PUSH2 0x27a
0x278 JUMPI
---
0x26c: JUMPDEST 
0x26d: V211 = 0x5
0x270: V212 = S[0x5]
0x274: V213 = LT V66 V212
0x275: V214 = 0x27a
0x278: JUMPI 0x27a V213
---
Entry stack: [V13, 0xdc, V66]
Stack pops: 1
Stack additions: [S0, 0x5, S0]
Exit stack: [V13, 0xdc, V66, 0x5, V66]

================================

Block 0x279
[0x279:0x279]
---
Predecessors: [0x26c]
Successors: []
---
0x279 INVALID
---
0x279: INVALID 
---
Entry stack: [V13, 0xdc, V66, 0x5, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdc, V66, 0x5, V66]

================================

Block 0x27a
[0x27a:0x293]
---
Predecessors: [0x26c]
Successors: [0xdc]
---
0x27a JUMPDEST
0x27b PUSH1 0x0
0x27d SWAP2
0x27e DUP3
0x27f MSTORE
0x280 PUSH1 0x20
0x282 SWAP1
0x283 SWAP2
0x284 SHA3
0x285 ADD
0x286 SLOAD
0x287 PUSH1 0x1
0x289 PUSH1 0xa0
0x28b PUSH1 0x2
0x28d EXP
0x28e SUB
0x28f AND
0x290 SWAP1
0x291 POP
0x292 DUP2
0x293 JUMP
---
0x27a: JUMPDEST 
0x27b: V215 = 0x0
0x27f: M[0x0] = 0x5
0x280: V216 = 0x20
0x284: V217 = SHA3 0x0 0x20
0x285: V218 = ADD V217 V66
0x286: V219 = S[V218]
0x287: V220 = 0x1
0x289: V221 = 0xa0
0x28b: V222 = 0x2
0x28d: V223 = EXP 0x2 0xa0
0x28e: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28f: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x293: JUMP 0xdc
---
Entry stack: [V13, 0xdc, V66, 0x5, V66]
Stack pops: 4
Stack additions: [S3, V225]
Exit stack: [V13, 0xdc, V225]

================================

Block 0x294
[0x294:0x29c]
---
Predecessors: [0x103]
Successors: [0x10b]
---
0x294 JUMPDEST
0x295 PUSH1 0x8
0x297 SLOAD
0x298 PUSH1 0xff
0x29a AND
0x29b DUP2
0x29c JUMP
---
0x294: JUMPDEST 
0x295: V226 = 0x8
0x297: V227 = S[0x8]
0x298: V228 = 0xff
0x29a: V229 = AND 0xff V227
0x29c: JUMP 0x10b
---
Entry stack: [V13, 0x10b]
Stack pops: 1
Stack additions: [S0, V229]
Exit stack: [V13, 0x10b, V229]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x12a]
Successors: [0x2a1]
---
0x29d JUMPDEST
0x29e PUSH1 0x0
0x2a0 DUP1
---
0x29d: JUMPDEST 
0x29e: V230 = 0x0
---
Entry stack: [V13, 0x132]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x132, 0x0, 0x0]

================================

Block 0x2a1
[0x2a1:0x2ae]
---
Predecessors: [0x29d, 0x2ec]
Successors: [0x2af, 0x2f4]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x5
0x2a4 SLOAD
0x2a5 PUSH1 0xff
0x2a7 DUP3
0x2a8 AND
0x2a9 LT
0x2aa ISZERO
0x2ab PUSH2 0x2f4
0x2ae JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V231 = 0x5
0x2a4: V232 = S[0x5]
0x2a5: V233 = 0xff
0x2a8: V234 = AND S0 0xff
0x2a9: V235 = LT V234 V232
0x2aa: V236 = ISZERO V235
0x2ab: V237 = 0x2f4
0x2ae: JUMPI 0x2f4 V236
---
Entry stack: [V13, 0x132, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x132, S1, S0]

================================

Block 0x2af
[0x2af:0x2c8]
---
Predecessors: [0x2a1]
Successors: [0x2c9, 0x2ca]
---
0x2af CALLER
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 AND
0x2b9 PUSH1 0x5
0x2bb DUP3
0x2bc PUSH1 0xff
0x2be AND
0x2bf DUP2
0x2c0 SLOAD
0x2c1 DUP2
0x2c2 LT
0x2c3 ISZERO
0x2c4 ISZERO
0x2c5 PUSH2 0x2ca
0x2c8 JUMPI
---
0x2af: V238 = CALLER
0x2b0: V239 = 0x1
0x2b2: V240 = 0xa0
0x2b4: V241 = 0x2
0x2b6: V242 = EXP 0x2 0xa0
0x2b7: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b8: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x2b9: V245 = 0x5
0x2bc: V246 = 0xff
0x2be: V247 = AND 0xff S0
0x2c0: V248 = S[0x5]
0x2c2: V249 = LT V247 V248
0x2c3: V250 = ISZERO V249
0x2c4: V251 = ISZERO V250
0x2c5: V252 = 0x2ca
0x2c8: JUMPI 0x2ca V251
---
Entry stack: [V13, 0x132, S1, S0]
Stack pops: 1
Stack additions: [S0, V244, 0x5, V247]
Exit stack: [V13, 0x132, S1, S0, V244, 0x5, V247]

================================

Block 0x2c9
[0x2c9:0x2c9]
---
Predecessors: [0x2af]
Successors: []
---
0x2c9 INVALID
---
0x2c9: INVALID 
---
Entry stack: [V13, 0x132, S4, S3, V244, 0x5, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, S4, S3, V244, 0x5, V247]

================================

Block 0x2ca
[0x2ca:0x2e5]
---
Predecessors: [0x2af]
Successors: [0x2e6, 0x2ec]
---
0x2ca JUMPDEST
0x2cb PUSH1 0x0
0x2cd SWAP2
0x2ce DUP3
0x2cf MSTORE
0x2d0 PUSH1 0x20
0x2d2 SWAP1
0x2d3 SWAP2
0x2d4 SHA3
0x2d5 ADD
0x2d6 SLOAD
0x2d7 PUSH1 0x1
0x2d9 PUSH1 0xa0
0x2db PUSH1 0x2
0x2dd EXP
0x2de SUB
0x2df AND
0x2e0 EQ
0x2e1 ISZERO
0x2e2 PUSH2 0x2ec
0x2e5 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V253 = 0x0
0x2cf: M[0x0] = 0x5
0x2d0: V254 = 0x20
0x2d4: V255 = SHA3 0x0 0x20
0x2d5: V256 = ADD V255 V247
0x2d6: V257 = S[V256]
0x2d7: V258 = 0x1
0x2d9: V259 = 0xa0
0x2db: V260 = 0x2
0x2dd: V261 = EXP 0x2 0xa0
0x2de: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2df: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x2e0: V264 = EQ V263 V244
0x2e1: V265 = ISZERO V264
0x2e2: V266 = 0x2ec
0x2e5: JUMPI 0x2ec V265
---
Entry stack: [V13, 0x132, S4, S3, V244, 0x5, V247]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x132, S4, S3]

================================

Block 0x2e6
[0x2e6:0x2eb]
---
Predecessors: [0x2ca]
Successors: [0x2ec]
---
0x2e6 DUP2
0x2e7 PUSH1 0x1
0x2e9 OR
0x2ea SWAP2
0x2eb POP
---
0x2e7: V267 = 0x1
0x2e9: V268 = OR 0x1 S1
---
Entry stack: [V13, 0x132, S1, S0]
Stack pops: 2
Stack additions: [V268, S0]
Exit stack: [V13, 0x132, V268, S0]

================================

Block 0x2ec
[0x2ec:0x2f3]
---
Predecessors: [0x2ca, 0x2e6]
Successors: [0x2a1]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x1
0x2ef ADD
0x2f0 PUSH2 0x2a1
0x2f3 JUMP
---
0x2ec: JUMPDEST 
0x2ed: V269 = 0x1
0x2ef: V270 = ADD 0x1 S0
0x2f0: V271 = 0x2a1
0x2f3: JUMP 0x2a1
---
Entry stack: [V13, 0x132, S1, S0]
Stack pops: 1
Stack additions: [V270]
Exit stack: [V13, 0x132, S1, V270]

================================

Block 0x2f4
[0x2f4:0x2ff]
---
Predecessors: [0x2a1]
Successors: [0x300, 0x304]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xff
0x2f9 DUP4
0x2fa AND
0x2fb EQ
0x2fc PUSH2 0x304
0x2ff JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V272 = 0x1
0x2f7: V273 = 0xff
0x2fa: V274 = AND S1 0xff
0x2fb: V275 = EQ V274 0x1
0x2fc: V276 = 0x304
0x2ff: JUMPI 0x304 V275
---
Entry stack: [V13, 0x132, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x132, S1, S0]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2f4]
Successors: []
---
0x300 PUSH1 0x0
0x302 DUP1
0x303 REVERT
---
0x300: V277 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, S1, S0]

================================

Block 0x304
[0x304:0x30b]
---
Predecessors: [0x2f4]
Successors: [0x7af]
---
0x304 JUMPDEST
0x305 PUSH2 0x30c
0x308 PUSH2 0x7af
0x30b JUMP
---
0x304: JUMPDEST 
0x305: V278 = 0x30c
0x308: V279 = 0x7af
0x30b: JUMP 0x7af
---
Entry stack: [V13, 0x132, S1, S0]
Stack pops: 0
Stack additions: [0x30c]
Exit stack: [V13, 0x132, S1, S0, 0x30c]

================================

Block 0x30c
[0x30c:0x312]
---
Predecessors: [0x92a]
Successors: [0x313, 0x317]
---
0x30c JUMPDEST
0x30d ISZERO
0x30e ISZERO
0x30f PUSH2 0x317
0x312 JUMPI
---
0x30c: JUMPDEST 
0x30d: V280 = ISZERO 0x1
0x30e: V281 = ISZERO 0x0
0x30f: V282 = 0x317
0x312: JUMPI 0x317 0x1
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S1]

================================

Block 0x313
[0x313:0x316]
---
Predecessors: [0x30c]
Successors: []
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
---
0x313: V283 = 0x0
0x316: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S0]

================================

Block 0x317
[0x317:0x324]
---
Predecessors: [0x30c]
Successors: []
---
0x317 JUMPDEST
0x318 PUSH1 0x2
0x31a SLOAD
0x31b PUSH1 0x1
0x31d PUSH1 0xa0
0x31f PUSH1 0x2
0x321 EXP
0x322 SUB
0x323 AND
0x324 SELFDESTRUCT
---
0x317: JUMPDEST 
0x318: V284 = 0x2
0x31a: V285 = S[0x2]
0x31b: V286 = 0x1
0x31d: V287 = 0xa0
0x31f: V288 = 0x2
0x321: V289 = EXP 0x2 0xa0
0x322: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x323: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x324: SELFDESTRUCT V291
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S0]

================================

Block 0x325
[0x325:0x333]
---
Predecessors: [0x13f]
Successors: [0xdc]
---
0x325 JUMPDEST
0x326 PUSH1 0x2
0x328 SLOAD
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 AND
0x332 DUP2
0x333 JUMP
---
0x325: JUMPDEST 
0x326: V292 = 0x2
0x328: V293 = S[0x2]
0x329: V294 = 0x1
0x32b: V295 = 0xa0
0x32d: V296 = 0x2
0x32f: V297 = EXP 0x2 0xa0
0x330: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x331: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x333: JUMP 0xdc
---
Entry stack: [V13, 0xdc]
Stack pops: 1
Stack additions: [S0, V299]
Exit stack: [V13, 0xdc, V299]

================================

Block 0x334
[0x334:0x345]
---
Predecessors: [0x152, 0x473]
Successors: [0x346, 0x347]
---
0x334 JUMPDEST
0x335 PUSH1 0x0
0x337 PUSH1 0x7
0x339 SLOAD
0x33a PUSH1 0x1
0x33c SLOAD
0x33d DUP4
0x33e MUL
0x33f DUP2
0x340 ISZERO
0x341 ISZERO
0x342 PUSH2 0x347
0x345 JUMPI
---
0x334: JUMPDEST 
0x335: V300 = 0x0
0x337: V301 = 0x7
0x339: V302 = S[0x7]
0x33a: V303 = 0x1
0x33c: V304 = S[0x1]
0x33e: V305 = MUL S0 V304
0x340: V306 = ISZERO V302
0x341: V307 = ISZERO V306
0x342: V308 = 0x347
0x345: JUMPI 0x347 V307
---
Entry stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, S5, S4, S3, S2, {0x15d, 0x48a, 0x67d, 0x69a}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V302, V305]
Exit stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, S5, S4, S3, S2, {0x15d, 0x48a, 0x67d, 0x69a}, S0, 0x0, V302, V305]

================================

Block 0x346
[0x346:0x346]
---
Predecessors: [0x334]
Successors: []
---
0x346 INVALID
---
0x346: INVALID 
---
Entry stack: [V13, 0x132, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x48a, 0x67d, 0x69a}, S3, 0x0, V302, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x48a, 0x67d, 0x69a}, S3, 0x0, V302, V305]

================================

Block 0x347
[0x347:0x34d]
---
Predecessors: [0x334]
Successors: [0x15d, 0x48a, 0x67d, 0x69a]
---
0x347 JUMPDEST
0x348 DIV
0x349 SWAP3
0x34a SWAP2
0x34b POP
0x34c POP
0x34d JUMP
---
0x347: JUMPDEST 
0x348: V309 = DIV V305 V302
0x34d: JUMP {0x15d, 0x48a, 0x67d, 0x69a}
---
Entry stack: [V13, 0x132, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x48a, 0x67d, 0x69a}, S3, 0x0, V302, V305]
Stack pops: 5
Stack additions: [V309]
Exit stack: [V13, 0x132, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V309]

================================

Block 0x34e
[0x34e:0x35a]
---
Predecessors: [0x17a]
Successors: [0x35b, 0x35c]
---
0x34e JUMPDEST
0x34f PUSH1 0x4
0x351 DUP1
0x352 SLOAD
0x353 DUP3
0x354 SWAP1
0x355 DUP2
0x356 LT
0x357 PUSH2 0x35c
0x35a JUMPI
---
0x34e: JUMPDEST 
0x34f: V310 = 0x4
0x352: V311 = S[0x4]
0x356: V312 = LT V129 V311
0x357: V313 = 0x35c
0x35a: JUMPI 0x35c V312
---
Entry stack: [V13, 0x185, V129]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V13, 0x185, V129, 0x4, V129]

================================

Block 0x35b
[0x35b:0x35b]
---
Predecessors: [0x34e]
Successors: []
---
0x35b INVALID
---
0x35b: INVALID 
---
Entry stack: [V13, 0x185, V129, 0x4, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x185, V129, 0x4, V129]

================================

Block 0x35c
[0x35c:0x38b]
---
Predecessors: [0x34e]
Successors: [0x185]
---
0x35c JUMPDEST
0x35d PUSH1 0x0
0x35f SWAP2
0x360 DUP3
0x361 MSTORE
0x362 PUSH1 0x20
0x364 SWAP1
0x365 SWAP2
0x366 SHA3
0x367 PUSH1 0x3
0x369 SWAP1
0x36a SWAP2
0x36b MUL
0x36c ADD
0x36d DUP1
0x36e SLOAD
0x36f PUSH1 0x1
0x371 DUP3
0x372 ADD
0x373 SLOAD
0x374 PUSH1 0x2
0x376 SWAP1
0x377 SWAP3
0x378 ADD
0x379 SLOAD
0x37a PUSH1 0x1
0x37c PUSH1 0xa0
0x37e PUSH1 0x2
0x380 EXP
0x381 SUB
0x382 SWAP1
0x383 SWAP2
0x384 AND
0x385 SWAP3
0x386 POP
0x387 PUSH1 0xff
0x389 AND
0x38a DUP4
0x38b JUMP
---
0x35c: JUMPDEST 
0x35d: V314 = 0x0
0x361: M[0x0] = 0x4
0x362: V315 = 0x20
0x366: V316 = SHA3 0x0 0x20
0x367: V317 = 0x3
0x36b: V318 = MUL V129 0x3
0x36c: V319 = ADD V318 V316
0x36e: V320 = S[V319]
0x36f: V321 = 0x1
0x372: V322 = ADD V319 0x1
0x373: V323 = S[V322]
0x374: V324 = 0x2
0x378: V325 = ADD V319 0x2
0x379: V326 = S[V325]
0x37a: V327 = 0x1
0x37c: V328 = 0xa0
0x37e: V329 = 0x2
0x380: V330 = EXP 0x2 0xa0
0x381: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x384: V332 = AND V320 0xffffffffffffffffffffffffffffffffffffffff
0x387: V333 = 0xff
0x389: V334 = AND 0xff V326
0x38b: JUMP 0x185
---
Entry stack: [V13, 0x185, V129, 0x4, V129]
Stack pops: 4
Stack additions: [S3, V332, V323, V334]
Exit stack: [V13, 0x185, V332, V323, V334]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x1c0]
Successors: [0x390]
---
0x38c JUMPDEST
0x38d PUSH1 0x0
0x38f DUP1
---
0x38c: JUMPDEST 
0x38d: V335 = 0x0
---
Entry stack: [V13, 0x132, V161]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x132, V161, 0x0, 0x0]

================================

Block 0x390
[0x390:0x39d]
---
Predecessors: [0x38c, 0x3db]
Successors: [0x39e, 0x3e3]
---
0x390 JUMPDEST
0x391 PUSH1 0x5
0x393 SLOAD
0x394 PUSH1 0xff
0x396 DUP3
0x397 AND
0x398 LT
0x399 ISZERO
0x39a PUSH2 0x3e3
0x39d JUMPI
---
0x390: JUMPDEST 
0x391: V336 = 0x5
0x393: V337 = S[0x5]
0x394: V338 = 0xff
0x397: V339 = AND S0 0xff
0x398: V340 = LT V339 V337
0x399: V341 = ISZERO V340
0x39a: V342 = 0x3e3
0x39d: JUMPI 0x3e3 V341
---
Entry stack: [V13, 0x132, V161, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x132, V161, S1, S0]

================================

Block 0x39e
[0x39e:0x3b7]
---
Predecessors: [0x390]
Successors: [0x3b8, 0x3b9]
---
0x39e CALLER
0x39f PUSH1 0x1
0x3a1 PUSH1 0xa0
0x3a3 PUSH1 0x2
0x3a5 EXP
0x3a6 SUB
0x3a7 AND
0x3a8 PUSH1 0x5
0x3aa DUP3
0x3ab PUSH1 0xff
0x3ad AND
0x3ae DUP2
0x3af SLOAD
0x3b0 DUP2
0x3b1 LT
0x3b2 ISZERO
0x3b3 ISZERO
0x3b4 PUSH2 0x3b9
0x3b7 JUMPI
---
0x39e: V343 = CALLER
0x39f: V344 = 0x1
0x3a1: V345 = 0xa0
0x3a3: V346 = 0x2
0x3a5: V347 = EXP 0x2 0xa0
0x3a6: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x3a8: V350 = 0x5
0x3ab: V351 = 0xff
0x3ad: V352 = AND 0xff S0
0x3af: V353 = S[0x5]
0x3b1: V354 = LT V352 V353
0x3b2: V355 = ISZERO V354
0x3b3: V356 = ISZERO V355
0x3b4: V357 = 0x3b9
0x3b7: JUMPI 0x3b9 V356
---
Entry stack: [V13, 0x132, V161, S1, S0]
Stack pops: 1
Stack additions: [S0, V349, 0x5, V352]
Exit stack: [V13, 0x132, V161, S1, S0, V349, 0x5, V352]

================================

Block 0x3b8
[0x3b8:0x3b8]
---
Predecessors: [0x39e]
Successors: []
---
0x3b8 INVALID
---
0x3b8: INVALID 
---
Entry stack: [V13, 0x132, V161, S4, S3, V349, 0x5, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, V161, S4, S3, V349, 0x5, V352]

================================

Block 0x3b9
[0x3b9:0x3d4]
---
Predecessors: [0x39e]
Successors: [0x3d5, 0x3db]
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x0
0x3bc SWAP2
0x3bd DUP3
0x3be MSTORE
0x3bf PUSH1 0x20
0x3c1 SWAP1
0x3c2 SWAP2
0x3c3 SHA3
0x3c4 ADD
0x3c5 SLOAD
0x3c6 PUSH1 0x1
0x3c8 PUSH1 0xa0
0x3ca PUSH1 0x2
0x3cc EXP
0x3cd SUB
0x3ce AND
0x3cf EQ
0x3d0 ISZERO
0x3d1 PUSH2 0x3db
0x3d4 JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V358 = 0x0
0x3be: M[0x0] = 0x5
0x3bf: V359 = 0x20
0x3c3: V360 = SHA3 0x0 0x20
0x3c4: V361 = ADD V360 V352
0x3c5: V362 = S[V361]
0x3c6: V363 = 0x1
0x3c8: V364 = 0xa0
0x3ca: V365 = 0x2
0x3cc: V366 = EXP 0x2 0xa0
0x3cd: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ce: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x3cf: V369 = EQ V368 V349
0x3d0: V370 = ISZERO V369
0x3d1: V371 = 0x3db
0x3d4: JUMPI 0x3db V370
---
Entry stack: [V13, 0x132, V161, S4, S3, V349, 0x5, V352]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x132, V161, S4, S3]

================================

Block 0x3d5
[0x3d5:0x3da]
---
Predecessors: [0x3b9]
Successors: [0x3db]
---
0x3d5 DUP2
0x3d6 PUSH1 0x1
0x3d8 OR
0x3d9 SWAP2
0x3da POP
---
0x3d6: V372 = 0x1
0x3d8: V373 = OR 0x1 S1
---
Entry stack: [V13, 0x132, V161, S1, S0]
Stack pops: 2
Stack additions: [V373, S0]
Exit stack: [V13, 0x132, V161, V373, S0]

================================

Block 0x3db
[0x3db:0x3e2]
---
Predecessors: [0x3b9, 0x3d5]
Successors: [0x390]
---
0x3db JUMPDEST
0x3dc PUSH1 0x1
0x3de ADD
0x3df PUSH2 0x390
0x3e2 JUMP
---
0x3db: JUMPDEST 
0x3dc: V374 = 0x1
0x3de: V375 = ADD 0x1 S0
0x3df: V376 = 0x390
0x3e2: JUMP 0x390
---
Entry stack: [V13, 0x132, V161, S1, S0]
Stack pops: 1
Stack additions: [V375]
Exit stack: [V13, 0x132, V161, S1, V375]

================================

Block 0x3e3
[0x3e3:0x3ee]
---
Predecessors: [0x390]
Successors: [0x3ef, 0x3f3]
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xff
0x3e8 DUP4
0x3e9 AND
0x3ea EQ
0x3eb PUSH2 0x3f3
0x3ee JUMPI
---
0x3e3: JUMPDEST 
0x3e4: V377 = 0x1
0x3e6: V378 = 0xff
0x3e9: V379 = AND S1 0xff
0x3ea: V380 = EQ V379 0x1
0x3eb: V381 = 0x3f3
0x3ee: JUMPI 0x3f3 V380
---
Entry stack: [V13, 0x132, V161, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x132, V161, S1, S0]

================================

Block 0x3ef
[0x3ef:0x3f2]
---
Predecessors: [0x3e3]
Successors: []
---
0x3ef PUSH1 0x0
0x3f1 DUP1
0x3f2 REVERT
---
0x3ef: V382 = 0x0
0x3f2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, V161, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, V161, S1, S0]

================================

Block 0x3f3
[0x3f3:0x423]
---
Predecessors: [0x3e3]
Successors: [0x132]
---
0x3f3 JUMPDEST
0x3f4 POP
0x3f5 POP
0x3f6 PUSH1 0x0
0x3f8 DUP1
0x3f9 SLOAD
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f NOT
0x410 AND
0x411 PUSH1 0x1
0x413 PUSH1 0xa0
0x415 PUSH1 0x2
0x417 EXP
0x418 SUB
0x419 SWAP3
0x41a SWAP1
0x41b SWAP3
0x41c AND
0x41d SWAP2
0x41e SWAP1
0x41f SWAP2
0x420 OR
0x421 SWAP1
0x422 SSTORE
0x423 JUMP
---
0x3f3: JUMPDEST 
0x3f6: V383 = 0x0
0x3f9: V384 = S[0x0]
0x3fa: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V386 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x410: V387 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V384
0x411: V388 = 0x1
0x413: V389 = 0xa0
0x415: V390 = 0x2
0x417: V391 = EXP 0x2 0xa0
0x418: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41c: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x420: V394 = OR V393 V387
0x422: S[0x0] = V394
0x423: JUMP 0x132
---
Entry stack: [V13, 0x132, V161, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x424
[0x424:0x428]
---
Predecessors: [0x1df, 0x60c]
Successors: [0x429]
---
0x424 JUMPDEST
0x425 PUSH1 0x0
0x427 DUP1
0x428 DUP1
---
0x424: JUMPDEST 
0x425: V395 = 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, S2, S1, {0x10b, 0x614}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x132, 0x0, 0x0, S2, S1, {0x10b, 0x614}, 0x0, 0x0, 0x0]

================================

Block 0x429
[0x429:0x433]
---
Predecessors: [0x424, 0x490]
Successors: [0x434, 0x498]
---
0x429 JUMPDEST
0x42a PUSH1 0x4
0x42c SLOAD
0x42d DUP2
0x42e LT
0x42f ISZERO
0x430 PUSH2 0x498
0x433 JUMPI
---
0x429: JUMPDEST 
0x42a: V396 = 0x4
0x42c: V397 = S[0x4]
0x42e: V398 = LT S0 V397
0x42f: V399 = ISZERO V398
0x430: V400 = 0x498
0x433: JUMPI 0x498 V399
---
Entry stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x434
[0x434:0x43f]
---
Predecessors: [0x429]
Successors: [0x440, 0x441]
---
0x434 PUSH1 0x4
0x436 DUP1
0x437 SLOAD
0x438 DUP3
0x439 SWAP1
0x43a DUP2
0x43b LT
0x43c PUSH2 0x441
0x43f JUMPI
---
0x434: V401 = 0x4
0x437: V402 = S[0x4]
0x43b: V403 = LT S0 V402
0x43c: V404 = 0x441
0x43f: JUMPI 0x441 V403
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S4, {0x10b, 0x614}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S4, {0x10b, 0x614}, 0x0, S1, S0, 0x4, S0]

================================

Block 0x440
[0x440:0x440]
---
Predecessors: [0x434]
Successors: []
---
0x440 INVALID
---
0x440: INVALID 
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S6, {0x10b, 0x614}, 0x0, S3, S2, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S6, {0x10b, 0x614}, 0x0, S3, S2, 0x4, S0]

================================

Block 0x441
[0x441:0x45e]
---
Predecessors: [0x434]
Successors: [0x45f, 0x490]
---
0x441 JUMPDEST
0x442 PUSH1 0x0
0x444 SWAP2
0x445 DUP3
0x446 MSTORE
0x447 PUSH1 0x20
0x449 SWAP1
0x44a SWAP2
0x44b SHA3
0x44c PUSH1 0x2
0x44e PUSH1 0x3
0x450 SWAP1
0x451 SWAP3
0x452 MUL
0x453 ADD
0x454 ADD
0x455 SLOAD
0x456 PUSH1 0xff
0x458 AND
0x459 ISZERO
0x45a ISZERO
0x45b PUSH2 0x490
0x45e JUMPI
---
0x441: JUMPDEST 
0x442: V405 = 0x0
0x446: M[0x0] = 0x4
0x447: V406 = 0x20
0x44b: V407 = SHA3 0x0 0x20
0x44c: V408 = 0x2
0x44e: V409 = 0x3
0x452: V410 = MUL S0 0x3
0x453: V411 = ADD V410 V407
0x454: V412 = ADD V411 0x2
0x455: V413 = S[V412]
0x456: V414 = 0xff
0x458: V415 = AND 0xff V413
0x459: V416 = ISZERO V415
0x45a: V417 = ISZERO V416
0x45b: V418 = 0x490
0x45e: JUMPI 0x490 V417
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S6, {0x10b, 0x614}, 0x0, S3, S2, 0x4, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S6, {0x10b, 0x614}, 0x0, S3, S2]

================================

Block 0x45f
[0x45f:0x471]
---
Predecessors: [0x441]
Successors: [0x472, 0x473]
---
0x45f PUSH1 0x6
0x461 SLOAD
0x462 PUSH2 0x48a
0x465 PUSH1 0x4
0x467 DUP4
0x468 DUP2
0x469 SLOAD
0x46a DUP2
0x46b LT
0x46c ISZERO
0x46d ISZERO
0x46e PUSH2 0x473
0x471 JUMPI
---
0x45f: V419 = 0x6
0x461: V420 = S[0x6]
0x462: V421 = 0x48a
0x465: V422 = 0x4
0x469: V423 = S[0x4]
0x46b: V424 = LT S0 V423
0x46c: V425 = ISZERO V424
0x46d: V426 = ISZERO V425
0x46e: V427 = 0x473
0x471: JUMPI 0x473 V426
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S4, {0x10b, 0x614}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V420, 0x48a, 0x4, S0]
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S4, {0x10b, 0x614}, 0x0, S1, S0, V420, 0x48a, 0x4, S0]

================================

Block 0x472
[0x472:0x472]
---
Predecessors: [0x45f]
Successors: []
---
0x472 INVALID
---
0x472: INVALID 
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, V420, 0x48a, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, V420, 0x48a, 0x4, S0]

================================

Block 0x473
[0x473:0x489]
---
Predecessors: [0x45f, 0x668, 0x686]
Successors: [0x334]
---
0x473 JUMPDEST
0x474 SWAP1
0x475 PUSH1 0x0
0x477 MSTORE
0x478 PUSH1 0x20
0x47a PUSH1 0x0
0x47c SHA3
0x47d SWAP1
0x47e PUSH1 0x3
0x480 MUL
0x481 ADD
0x482 PUSH1 0x1
0x484 ADD
0x485 SLOAD
0x486 PUSH2 0x334
0x489 JUMP
---
0x473: JUMPDEST 
0x475: V428 = 0x0
0x477: M[0x0] = 0x4
0x478: V429 = 0x20
0x47a: V430 = 0x0
0x47c: V431 = SHA3 0x0 0x20
0x47e: V432 = 0x3
0x480: V433 = MUL 0x3 S0
0x481: V434 = ADD V433 V431
0x482: V435 = 0x1
0x484: V436 = ADD 0x1 V434
0x485: V437 = S[V436]
0x486: V438 = 0x334
0x489: JUMP 0x334
---
Entry stack: [V13, 0x132, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, {0x48a, 0x67d, 0x69a}, 0x4, S0]
Stack pops: 2
Stack additions: [V437]
Exit stack: [V13, 0x132, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, {0x48a, 0x67d, 0x69a}, V437]

================================

Block 0x48a
[0x48a:0x48f]
---
Predecessors: [0x347]
Successors: [0x490]
---
0x48a JUMPDEST
0x48b MUL
0x48c DUP3
0x48d ADD
0x48e SWAP2
0x48f POP
---
0x48a: JUMPDEST 
0x48b: V439 = MUL V309 S1
0x48d: V440 = ADD S3 V439
---
Entry stack: [V13, 0x132, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, V309]
Stack pops: 4
Stack additions: [V440, S2]
Exit stack: [V13, 0x132, 0x0, 0x0, S7, S6, S5, S4, V440, S2]

================================

Block 0x490
[0x490:0x497]
---
Predecessors: [0x441, 0x48a]
Successors: [0x429]
---
0x490 JUMPDEST
0x491 PUSH1 0x1
0x493 ADD
0x494 PUSH2 0x429
0x497 JUMP
---
0x490: JUMPDEST 
0x491: V441 = 0x1
0x493: V442 = ADD 0x1 S0
0x494: V443 = 0x429
0x497: JUMP 0x429
---
Entry stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V442]
Exit stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, V442]

================================

Block 0x498
[0x498:0x4ec]
---
Predecessors: [0x429]
Successors: [0x4ed, 0x4f1]
---
0x498 JUMPDEST
0x499 PUSH1 0x0
0x49b SLOAD
0x49c PUSH1 0x2
0x49e SLOAD
0x49f DUP4
0x4a0 SWAP2
0x4a1 PUSH1 0x1
0x4a3 PUSH1 0xa0
0x4a5 PUSH1 0x2
0x4a7 EXP
0x4a8 SUB
0x4a9 SWAP1
0x4aa DUP2
0x4ab AND
0x4ac SWAP2
0x4ad PUSH4 0x70a08231
0x4b2 SWAP2
0x4b3 AND
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 PUSH1 0xe0
0x4b9 PUSH1 0x2
0x4bb EXP
0x4bc PUSH4 0xffffffff
0x4c1 DUP5
0x4c2 AND
0x4c3 MUL
0x4c4 DUP2
0x4c5 MSTORE
0x4c6 PUSH1 0x1
0x4c8 PUSH1 0xa0
0x4ca PUSH1 0x2
0x4cc EXP
0x4cd SUB
0x4ce SWAP1
0x4cf SWAP2
0x4d0 AND
0x4d1 PUSH1 0x4
0x4d3 DUP3
0x4d4 ADD
0x4d5 MSTORE
0x4d6 PUSH1 0x24
0x4d8 ADD
0x4d9 PUSH1 0x20
0x4db PUSH1 0x40
0x4dd MLOAD
0x4de DUP1
0x4df DUP4
0x4e0 SUB
0x4e1 DUP2
0x4e2 PUSH1 0x0
0x4e4 DUP8
0x4e5 DUP1
0x4e6 EXTCODESIZE
0x4e7 ISZERO
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x498: JUMPDEST 
0x499: V444 = 0x0
0x49b: V445 = S[0x0]
0x49c: V446 = 0x2
0x49e: V447 = S[0x2]
0x4a1: V448 = 0x1
0x4a3: V449 = 0xa0
0x4a5: V450 = 0x2
0x4a7: V451 = EXP 0x2 0xa0
0x4a8: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ab: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x4ad: V454 = 0x70a08231
0x4b3: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x4b4: V456 = 0x40
0x4b6: V457 = M[0x40]
0x4b7: V458 = 0xe0
0x4b9: V459 = 0x2
0x4bb: V460 = EXP 0x2 0xe0
0x4bc: V461 = 0xffffffff
0x4c2: V462 = AND 0x70a08231 0xffffffff
0x4c3: V463 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x4c5: M[V457] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4c6: V464 = 0x1
0x4c8: V465 = 0xa0
0x4ca: V466 = 0x2
0x4cc: V467 = EXP 0x2 0xa0
0x4cd: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d0: V469 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V470 = 0x4
0x4d4: V471 = ADD V457 0x4
0x4d5: M[V471] = V469
0x4d6: V472 = 0x24
0x4d8: V473 = ADD 0x24 V457
0x4d9: V474 = 0x20
0x4db: V475 = 0x40
0x4dd: V476 = M[0x40]
0x4e0: V477 = SUB V473 V476
0x4e2: V478 = 0x0
0x4e6: V479 = EXTCODESIZE V453
0x4e7: V480 = ISZERO V479
0x4e8: V481 = ISZERO V480
0x4e9: V482 = 0x4f1
0x4ec: JUMPI 0x4f1 V481
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S4, {0x10b, 0x614}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, V453, 0x70a08231, V473, 0x20, V476, V477, V476, 0x0, V453]
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S4, {0x10b, 0x614}, 0x0, S1, S0, S1, V453, 0x70a08231, V473, 0x20, V476, V477, V476, 0x0, V453]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x498]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V483 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S14, {0x10b, 0x614}, 0x0, S11, S10, S9, V453, 0x70a08231, V473, 0x20, V476, V477, V476, 0x0, V453]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S14, {0x10b, 0x614}, 0x0, S11, S10, S9, V453, 0x70a08231, V473, 0x20, V476, V477, V476, 0x0, V453]

================================

Block 0x4f1
[0x4f1:0x4f9]
---
Predecessors: [0x498]
Successors: [0x4fa, 0x4fe]
---
0x4f1 JUMPDEST
0x4f2 GAS
0x4f3 CALL
0x4f4 ISZERO
0x4f5 ISZERO
0x4f6 PUSH2 0x4fe
0x4f9 JUMPI
---
0x4f1: JUMPDEST 
0x4f2: V484 = GAS
0x4f3: V485 = CALL V484 V453 0x0 V476 V477 V476 0x20
0x4f4: V486 = ISZERO V485
0x4f5: V487 = ISZERO V486
0x4f6: V488 = 0x4fe
0x4f9: JUMPI 0x4fe V487
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S14, {0x10b, 0x614}, 0x0, S11, S10, S9, V453, 0x70a08231, V473, 0x20, V476, V477, V476, 0x0, V453]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S14, {0x10b, 0x614}, 0x0, S11, S10, S9, V453, 0x70a08231, V473]

================================

Block 0x4fa
[0x4fa:0x4fd]
---
Predecessors: [0x4f1]
Successors: []
---
0x4fa PUSH1 0x0
0x4fc DUP1
0x4fd REVERT
---
0x4fa: V489 = 0x0
0x4fd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, S3, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, S3, S2, 0x70a08231, S0]

================================

Block 0x4fe
[0x4fe:0x510]
---
Predecessors: [0x4f1]
Successors: [0x511, 0x58c]
---
0x4fe JUMPDEST
0x4ff POP
0x500 POP
0x501 POP
0x502 PUSH1 0x40
0x504 MLOAD
0x505 DUP1
0x506 MLOAD
0x507 SWAP1
0x508 POP
0x509 LT
0x50a ISZERO
0x50b DUP1
0x50c ISZERO
0x50d PUSH2 0x58c
0x510 JUMPI
---
0x4fe: JUMPDEST 
0x502: V490 = 0x40
0x504: V491 = M[0x40]
0x506: V492 = M[V491]
0x509: V493 = LT V492 S3
0x50a: V494 = ISZERO V493
0x50c: V495 = ISZERO V494
0x50d: V496 = 0x58c
0x510: JUMPI 0x58c V495
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, S3, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V494]
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, V494]

================================

Block 0x511
[0x511:0x56d]
---
Predecessors: [0x4fe]
Successors: [0x56e, 0x572]
---
0x511 POP
0x512 PUSH1 0x0
0x514 SLOAD
0x515 PUSH1 0x2
0x517 SLOAD
0x518 DUP4
0x519 SWAP2
0x51a PUSH1 0x1
0x51c PUSH1 0xa0
0x51e PUSH1 0x2
0x520 EXP
0x521 SUB
0x522 SWAP1
0x523 DUP2
0x524 AND
0x525 SWAP2
0x526 PUSH4 0xdd62ed3e
0x52b SWAP2
0x52c AND
0x52d ADDRESS
0x52e PUSH1 0x40
0x530 MLOAD
0x531 PUSH1 0xe0
0x533 PUSH1 0x2
0x535 EXP
0x536 PUSH4 0xffffffff
0x53b DUP6
0x53c AND
0x53d MUL
0x53e DUP2
0x53f MSTORE
0x540 PUSH1 0x1
0x542 PUSH1 0xa0
0x544 PUSH1 0x2
0x546 EXP
0x547 SUB
0x548 SWAP3
0x549 DUP4
0x54a AND
0x54b PUSH1 0x4
0x54d DUP3
0x54e ADD
0x54f MSTORE
0x550 SWAP2
0x551 AND
0x552 PUSH1 0x24
0x554 DUP3
0x555 ADD
0x556 MSTORE
0x557 PUSH1 0x44
0x559 ADD
0x55a PUSH1 0x20
0x55c PUSH1 0x40
0x55e MLOAD
0x55f DUP1
0x560 DUP4
0x561 SUB
0x562 DUP2
0x563 PUSH1 0x0
0x565 DUP8
0x566 DUP1
0x567 EXTCODESIZE
0x568 ISZERO
0x569 ISZERO
0x56a PUSH2 0x572
0x56d JUMPI
---
0x512: V497 = 0x0
0x514: V498 = S[0x0]
0x515: V499 = 0x2
0x517: V500 = S[0x2]
0x51a: V501 = 0x1
0x51c: V502 = 0xa0
0x51e: V503 = 0x2
0x520: V504 = EXP 0x2 0xa0
0x521: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x524: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x526: V507 = 0xdd62ed3e
0x52c: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x52d: V509 = ADDRESS
0x52e: V510 = 0x40
0x530: V511 = M[0x40]
0x531: V512 = 0xe0
0x533: V513 = 0x2
0x535: V514 = EXP 0x2 0xe0
0x536: V515 = 0xffffffff
0x53c: V516 = AND 0xdd62ed3e 0xffffffff
0x53d: V517 = MUL 0xdd62ed3e 0x100000000000000000000000000000000000000000000000000000000
0x53f: M[V511] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x540: V518 = 0x1
0x542: V519 = 0xa0
0x544: V520 = 0x2
0x546: V521 = EXP 0x2 0xa0
0x547: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54a: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x54b: V524 = 0x4
0x54e: V525 = ADD V511 0x4
0x54f: M[V525] = V523
0x551: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x552: V527 = 0x24
0x555: V528 = ADD V511 0x24
0x556: M[V528] = V526
0x557: V529 = 0x44
0x559: V530 = ADD 0x44 V511
0x55a: V531 = 0x20
0x55c: V532 = 0x40
0x55e: V533 = M[0x40]
0x561: V534 = SUB V530 V533
0x563: V535 = 0x0
0x567: V536 = EXTCODESIZE V506
0x568: V537 = ISZERO V536
0x569: V538 = ISZERO V537
0x56a: V539 = 0x572
0x56d: JUMPI 0x572 V538
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S5, {0x10b, 0x614}, 0x0, S2, S1, V494]
Stack pops: 3
Stack additions: [S2, S1, S2, V506, 0xdd62ed3e, V530, 0x20, V533, V534, V533, 0x0, V506]
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S5, {0x10b, 0x614}, 0x0, S2, S1, S2, V506, 0xdd62ed3e, V530, 0x20, V533, V534, V533, 0x0, V506]

================================

Block 0x56e
[0x56e:0x571]
---
Predecessors: [0x511]
Successors: []
---
0x56e PUSH1 0x0
0x570 DUP1
0x571 REVERT
---
0x56e: V540 = 0x0
0x571: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S14, {0x10b, 0x614}, 0x0, S11, S10, S9, V506, 0xdd62ed3e, V530, 0x20, V533, V534, V533, 0x0, V506]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S14, {0x10b, 0x614}, 0x0, S11, S10, S9, V506, 0xdd62ed3e, V530, 0x20, V533, V534, V533, 0x0, V506]

================================

Block 0x572
[0x572:0x57a]
---
Predecessors: [0x511]
Successors: [0x57b, 0x57f]
---
0x572 JUMPDEST
0x573 GAS
0x574 CALL
0x575 ISZERO
0x576 ISZERO
0x577 PUSH2 0x57f
0x57a JUMPI
---
0x572: JUMPDEST 
0x573: V541 = GAS
0x574: V542 = CALL V541 V506 0x0 V533 V534 V533 0x20
0x575: V543 = ISZERO V542
0x576: V544 = ISZERO V543
0x577: V545 = 0x57f
0x57a: JUMPI 0x57f V544
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S14, {0x10b, 0x614}, 0x0, S11, S10, S9, V506, 0xdd62ed3e, V530, 0x20, V533, V534, V533, 0x0, V506]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S14, {0x10b, 0x614}, 0x0, S11, S10, S9, V506, 0xdd62ed3e, V530]

================================

Block 0x57b
[0x57b:0x57e]
---
Predecessors: [0x572]
Successors: []
---
0x57b PUSH1 0x0
0x57d DUP1
0x57e REVERT
---
0x57b: V546 = 0x0
0x57e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, S3, S2, 0xdd62ed3e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, S3, S2, 0xdd62ed3e, S0]

================================

Block 0x57f
[0x57f:0x58b]
---
Predecessors: [0x572]
Successors: [0x58c]
---
0x57f JUMPDEST
0x580 POP
0x581 POP
0x582 POP
0x583 PUSH1 0x40
0x585 MLOAD
0x586 DUP1
0x587 MLOAD
0x588 SWAP1
0x589 POP
0x58a LT
0x58b ISZERO
---
0x57f: JUMPDEST 
0x583: V547 = 0x40
0x585: V548 = M[0x40]
0x587: V549 = M[V548]
0x58a: V550 = LT V549 S3
0x58b: V551 = ISZERO V550
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, S3, S2, 0xdd62ed3e, S0]
Stack pops: 4
Stack additions: [V551]
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S8, {0x10b, 0x614}, 0x0, S5, S4, V551]

================================

Block 0x58c
[0x58c:0x592]
---
Predecessors: [0x4fe, 0x57f]
Successors: [0x10b, 0x614]
---
0x58c JUMPDEST
0x58d SWAP3
0x58e POP
0x58f POP
0x590 POP
0x591 SWAP1
0x592 JUMP
---
0x58c: JUMPDEST 
0x592: JUMP {0x10b, 0x614}
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S5, {0x10b, 0x614}, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S5, S0]

================================

Block 0x593
[0x593:0x598]
---
Predecessors: [0x1f2]
Successors: [0x599]
---
0x593 JUMPDEST
0x594 PUSH1 0x0
0x596 DUP1
0x597 DUP1
0x598 DUP1
---
0x593: JUMPDEST 
0x594: V552 = 0x0
---
Entry stack: [V13, 0x132]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x132, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x599
[0x599:0x5a6]
---
Predecessors: [0x593, 0x5e4]
Successors: [0x5a7, 0x5ec]
---
0x599 JUMPDEST
0x59a PUSH1 0x5
0x59c SLOAD
0x59d PUSH1 0xff
0x59f DUP3
0x5a0 AND
0x5a1 LT
0x5a2 ISZERO
0x5a3 PUSH2 0x5ec
0x5a6 JUMPI
---
0x599: JUMPDEST 
0x59a: V553 = 0x5
0x59c: V554 = S[0x5]
0x59d: V555 = 0xff
0x5a0: V556 = AND S0 0xff
0x5a1: V557 = LT V556 V554
0x5a2: V558 = ISZERO V557
0x5a3: V559 = 0x5ec
0x5a6: JUMPI 0x5ec V558
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x132, 0x0, 0x0, S1, S0]

================================

Block 0x5a7
[0x5a7:0x5c0]
---
Predecessors: [0x599]
Successors: [0x5c1, 0x5c2]
---
0x5a7 CALLER
0x5a8 PUSH1 0x1
0x5aa PUSH1 0xa0
0x5ac PUSH1 0x2
0x5ae EXP
0x5af SUB
0x5b0 AND
0x5b1 PUSH1 0x5
0x5b3 DUP3
0x5b4 PUSH1 0xff
0x5b6 AND
0x5b7 DUP2
0x5b8 SLOAD
0x5b9 DUP2
0x5ba LT
0x5bb ISZERO
0x5bc ISZERO
0x5bd PUSH2 0x5c2
0x5c0 JUMPI
---
0x5a7: V560 = CALLER
0x5a8: V561 = 0x1
0x5aa: V562 = 0xa0
0x5ac: V563 = 0x2
0x5ae: V564 = EXP 0x2 0xa0
0x5af: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b0: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x5b1: V567 = 0x5
0x5b4: V568 = 0xff
0x5b6: V569 = AND 0xff S0
0x5b8: V570 = S[0x5]
0x5ba: V571 = LT V569 V570
0x5bb: V572 = ISZERO V571
0x5bc: V573 = ISZERO V572
0x5bd: V574 = 0x5c2
0x5c0: JUMPI 0x5c2 V573
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V566, 0x5, V569]
Exit stack: [V13, 0x132, 0x0, 0x0, S1, S0, V566, 0x5, V569]

================================

Block 0x5c1
[0x5c1:0x5c1]
---
Predecessors: [0x5a7]
Successors: []
---
0x5c1 INVALID
---
0x5c1: INVALID 
---
Entry stack: [V13, 0x132, 0x0, 0x0, S4, S3, V566, 0x5, V569]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S4, S3, V566, 0x5, V569]

================================

Block 0x5c2
[0x5c2:0x5dd]
---
Predecessors: [0x5a7]
Successors: [0x5de, 0x5e4]
---
0x5c2 JUMPDEST
0x5c3 PUSH1 0x0
0x5c5 SWAP2
0x5c6 DUP3
0x5c7 MSTORE
0x5c8 PUSH1 0x20
0x5ca SWAP1
0x5cb SWAP2
0x5cc SHA3
0x5cd ADD
0x5ce SLOAD
0x5cf PUSH1 0x1
0x5d1 PUSH1 0xa0
0x5d3 PUSH1 0x2
0x5d5 EXP
0x5d6 SUB
0x5d7 AND
0x5d8 EQ
0x5d9 ISZERO
0x5da PUSH2 0x5e4
0x5dd JUMPI
---
0x5c2: JUMPDEST 
0x5c3: V575 = 0x0
0x5c7: M[0x0] = 0x5
0x5c8: V576 = 0x20
0x5cc: V577 = SHA3 0x0 0x20
0x5cd: V578 = ADD V577 V569
0x5ce: V579 = S[V578]
0x5cf: V580 = 0x1
0x5d1: V581 = 0xa0
0x5d3: V582 = 0x2
0x5d5: V583 = EXP 0x2 0xa0
0x5d6: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d7: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x5d8: V586 = EQ V585 V566
0x5d9: V587 = ISZERO V586
0x5da: V588 = 0x5e4
0x5dd: JUMPI 0x5e4 V587
---
Entry stack: [V13, 0x132, 0x0, 0x0, S4, S3, V566, 0x5, V569]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S4, S3]

================================

Block 0x5de
[0x5de:0x5e3]
---
Predecessors: [0x5c2]
Successors: [0x5e4]
---
0x5de DUP2
0x5df PUSH1 0x1
0x5e1 OR
0x5e2 SWAP2
0x5e3 POP
---
0x5df: V589 = 0x1
0x5e1: V590 = OR 0x1 S1
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 2
Stack additions: [V590, S0]
Exit stack: [V13, 0x132, 0x0, 0x0, V590, S0]

================================

Block 0x5e4
[0x5e4:0x5eb]
---
Predecessors: [0x5c2, 0x5de]
Successors: [0x599]
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0x1
0x5e7 ADD
0x5e8 PUSH2 0x599
0x5eb JUMP
---
0x5e4: JUMPDEST 
0x5e5: V591 = 0x1
0x5e7: V592 = ADD 0x1 S0
0x5e8: V593 = 0x599
0x5eb: JUMP 0x599
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V592]
Exit stack: [V13, 0x132, 0x0, 0x0, S1, V592]

================================

Block 0x5ec
[0x5ec:0x5f7]
---
Predecessors: [0x599]
Successors: [0x5f8, 0x5fc]
---
0x5ec JUMPDEST
0x5ed PUSH1 0x1
0x5ef PUSH1 0xff
0x5f1 DUP4
0x5f2 AND
0x5f3 EQ
0x5f4 PUSH2 0x5fc
0x5f7 JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V594 = 0x1
0x5ef: V595 = 0xff
0x5f2: V596 = AND S1 0xff
0x5f3: V597 = EQ V596 0x1
0x5f4: V598 = 0x5fc
0x5f7: JUMPI 0x5fc V597
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x132, 0x0, 0x0, S1, S0]

================================

Block 0x5f8
[0x5f8:0x5fb]
---
Predecessors: [0x5ec]
Successors: []
---
0x5f8 PUSH1 0x0
0x5fa DUP1
0x5fb REVERT
---
0x5f8: V599 = 0x0
0x5fb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S1, S0]

================================

Block 0x5fc
[0x5fc:0x607]
---
Predecessors: [0x5ec]
Successors: [0x608, 0x60c]
---
0x5fc JUMPDEST
0x5fd PUSH1 0x8
0x5ff SLOAD
0x600 PUSH1 0xff
0x602 AND
0x603 ISZERO
0x604 PUSH2 0x60c
0x607 JUMPI
---
0x5fc: JUMPDEST 
0x5fd: V600 = 0x8
0x5ff: V601 = S[0x8]
0x600: V602 = 0xff
0x602: V603 = AND 0xff V601
0x603: V604 = ISZERO V603
0x604: V605 = 0x60c
0x607: JUMPI 0x60c V604
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S1, S0]

================================

Block 0x608
[0x608:0x60b]
---
Predecessors: [0x5fc]
Successors: []
---
0x608 PUSH1 0x0
0x60a DUP1
0x60b REVERT
---
0x608: V606 = 0x0
0x60b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S1, S0]

================================

Block 0x60c
[0x60c:0x613]
---
Predecessors: [0x5fc]
Successors: [0x424]
---
0x60c JUMPDEST
0x60d PUSH2 0x614
0x610 PUSH2 0x424
0x613 JUMP
---
0x60c: JUMPDEST 
0x60d: V607 = 0x614
0x610: V608 = 0x424
0x613: JUMP 0x424
---
Entry stack: [V13, 0x132, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [0x614]
Exit stack: [V13, 0x132, 0x0, 0x0, S1, S0, 0x614]

================================

Block 0x614
[0x614:0x61a]
---
Predecessors: [0x58c]
Successors: [0x61b, 0x61f]
---
0x614 JUMPDEST
0x615 ISZERO
0x616 ISZERO
0x617 PUSH2 0x61f
0x61a JUMPI
---
0x614: JUMPDEST 
0x615: V609 = ISZERO S0
0x616: V610 = ISZERO V609
0x617: V611 = 0x61f
0x61a: JUMPI 0x61f V610
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S1]

================================

Block 0x61b
[0x61b:0x61e]
---
Predecessors: [0x614]
Successors: []
---
0x61b PUSH1 0x0
0x61d DUP1
0x61e REVERT
---
0x61b: V612 = 0x0
0x61e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S0]

================================

Block 0x61f
[0x61f:0x630]
---
Predecessors: [0x614]
Successors: [0x631]
---
0x61f JUMPDEST
0x620 PUSH1 0x8
0x622 DUP1
0x623 SLOAD
0x624 PUSH1 0xff
0x626 NOT
0x627 AND
0x628 PUSH1 0x1
0x62a OR
0x62b SWAP1
0x62c SSTORE
0x62d PUSH1 0x0
0x62f SWAP4
0x630 POP
---
0x61f: JUMPDEST 
0x620: V613 = 0x8
0x623: V614 = S[0x8]
0x624: V615 = 0xff
0x626: V616 = NOT 0xff
0x627: V617 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V614
0x628: V618 = 0x1
0x62a: V619 = OR 0x1 V617
0x62c: S[0x8] = V619
0x62d: V620 = 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V13, 0x132, 0x0, 0x0, {0x0, 0x1}, S0]

================================

Block 0x631
[0x631:0x63b]
---
Predecessors: [0x61f, 0x792]
Successors: [0x63c, 0x79d]
---
0x631 JUMPDEST
0x632 PUSH1 0x4
0x634 SLOAD
0x635 DUP5
0x636 LT
0x637 ISZERO
0x638 PUSH2 0x79d
0x63b JUMPI
---
0x631: JUMPDEST 
0x632: V621 = 0x4
0x634: V622 = S[0x4]
0x636: V623 = LT S3 V622
0x637: V624 = ISZERO V623
0x638: V625 = 0x79d
0x63b: JUMPI 0x79d V624
---
Entry stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x63c
[0x63c:0x647]
---
Predecessors: [0x631]
Successors: [0x648, 0x649]
---
0x63c PUSH1 0x4
0x63e DUP1
0x63f SLOAD
0x640 DUP6
0x641 SWAP1
0x642 DUP2
0x643 LT
0x644 PUSH2 0x649
0x647 JUMPI
---
0x63c: V626 = 0x4
0x63f: V627 = S[0x4]
0x643: V628 = LT S3 V627
0x644: V629 = 0x649
0x647: JUMPI 0x649 V628
---
Entry stack: [V13, 0x132, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x4, S3]
Exit stack: [V13, 0x132, S3, S2, S1, S0, 0x4, S3]

================================

Block 0x648
[0x648:0x648]
---
Predecessors: [0x63c]
Successors: []
---
0x648 INVALID
---
0x648: INVALID 
---
Entry stack: [V13, 0x132, S5, S4, S3, S2, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, S5, S4, S3, S2, 0x4, S0]

================================

Block 0x649
[0x649:0x667]
---
Predecessors: [0x63c]
Successors: [0x668, 0x680]
---
0x649 JUMPDEST
0x64a PUSH1 0x0
0x64c SWAP2
0x64d DUP3
0x64e MSTORE
0x64f PUSH1 0x20
0x651 SWAP1
0x652 SWAP2
0x653 SHA3
0x654 PUSH1 0x2
0x656 PUSH1 0x3
0x658 SWAP1
0x659 SWAP3
0x65a MUL
0x65b ADD
0x65c ADD
0x65d SLOAD
0x65e PUSH1 0xff
0x660 AND
0x661 ISZERO
0x662 DUP1
0x663 ISZERO
0x664 PUSH2 0x680
0x667 JUMPI
---
0x649: JUMPDEST 
0x64a: V630 = 0x0
0x64e: M[0x0] = 0x4
0x64f: V631 = 0x20
0x653: V632 = SHA3 0x0 0x20
0x654: V633 = 0x2
0x656: V634 = 0x3
0x65a: V635 = MUL S0 0x3
0x65b: V636 = ADD V635 V632
0x65c: V637 = ADD V636 0x2
0x65d: V638 = S[V637]
0x65e: V639 = 0xff
0x660: V640 = AND 0xff V638
0x661: V641 = ISZERO V640
0x663: V642 = ISZERO V641
0x664: V643 = 0x680
0x667: JUMPI 0x680 V642
---
Entry stack: [V13, 0x132, S5, S4, S3, S2, 0x4, S0]
Stack pops: 2
Stack additions: [V641]
Exit stack: [V13, 0x132, S5, S4, S3, S2, V641]

================================

Block 0x668
[0x668:0x67b]
---
Predecessors: [0x649]
Successors: [0x473, 0x67c]
---
0x668 POP
0x669 PUSH1 0x3
0x66b SLOAD
0x66c PUSH2 0x67d
0x66f PUSH1 0x4
0x671 DUP7
0x672 DUP2
0x673 SLOAD
0x674 DUP2
0x675 LT
0x676 ISZERO
0x677 ISZERO
0x678 PUSH2 0x473
0x67b JUMPI
---
0x669: V644 = 0x3
0x66b: V645 = S[0x3]
0x66c: V646 = 0x67d
0x66f: V647 = 0x4
0x673: V648 = S[0x4]
0x675: V649 = LT S4 V648
0x676: V650 = ISZERO V649
0x677: V651 = ISZERO V650
0x678: V652 = 0x473
0x67b: JUMPI 0x473 V651
---
Entry stack: [V13, 0x132, S4, S3, S2, S1, V641]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V645, 0x67d, 0x4, S4]
Exit stack: [V13, 0x132, S4, S3, S2, S1, V645, 0x67d, 0x4, S4]

================================

Block 0x67c
[0x67c:0x67c]
---
Predecessors: [0x668]
Successors: []
---
0x67c INVALID
---
0x67c: INVALID 
---
Entry stack: [V13, 0x132, S7, S6, S5, S4, V645, 0x67d, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, S7, S6, S5, S4, V645, 0x67d, 0x4, S0]

================================

Block 0x67d
[0x67d:0x67f]
---
Predecessors: [0x347]
Successors: [0x680]
---
0x67d JUMPDEST
0x67e LT
0x67f ISZERO
---
0x67d: JUMPDEST 
0x67e: V653 = LT V309 S1
0x67f: V654 = ISZERO V653
---
Entry stack: [V13, 0x132, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, V309]
Stack pops: 2
Stack additions: [V654]
Exit stack: [V13, 0x132, 0x0, 0x0, S7, S6, S5, S4, S3, S2, V654]

================================

Block 0x680
[0x680:0x685]
---
Predecessors: [0x649, 0x67d]
Successors: [0x686, 0x792]
---
0x680 JUMPDEST
0x681 ISZERO
0x682 PUSH2 0x792
0x685 JUMPI
---
0x680: JUMPDEST 
0x681: V655 = ISZERO S0
0x682: V656 = 0x792
0x685: JUMPI 0x792 V655
---
Entry stack: [V13, 0x132, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S6, S5, S4, S3, S2, S1]

================================

Block 0x686
[0x686:0x698]
---
Predecessors: [0x680]
Successors: [0x473, 0x699]
---
0x686 PUSH1 0x3
0x688 SLOAD
0x689 PUSH2 0x69a
0x68c PUSH1 0x4
0x68e DUP7
0x68f DUP2
0x690 SLOAD
0x691 DUP2
0x692 LT
0x693 ISZERO
0x694 ISZERO
0x695 PUSH2 0x473
0x698 JUMPI
---
0x686: V657 = 0x3
0x688: V658 = S[0x3]
0x689: V659 = 0x69a
0x68c: V660 = 0x4
0x690: V661 = S[0x4]
0x692: V662 = LT S3 V661
0x693: V663 = ISZERO V662
0x694: V664 = ISZERO V663
0x695: V665 = 0x473
0x698: JUMPI 0x473 V664
---
Entry stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V658, 0x69a, 0x4, S3]
Exit stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, S0, V658, 0x69a, 0x4, S3]

================================

Block 0x699
[0x699:0x699]
---
Predecessors: [0x686]
Successors: []
---
0x699 INVALID
---
0x699: INVALID 
---
Entry stack: [V13, 0x132, 0x0, 0x0, S9, S8, S7, S6, S5, S4, V658, 0x69a, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S9, S8, S7, S6, S5, S4, V658, 0x69a, 0x4, S0]

================================

Block 0x69a
[0x69a:0x6c9]
---
Predecessors: [0x347]
Successors: [0x6ca, 0x6cb]
---
0x69a JUMPDEST
0x69b PUSH1 0x0
0x69d SLOAD
0x69e PUSH1 0x2
0x6a0 SLOAD
0x6a1 PUSH1 0x4
0x6a3 DUP1
0x6a4 SLOAD
0x6a5 SWAP5
0x6a6 SWAP1
0x6a7 SWAP4
0x6a8 SUB
0x6a9 SWAP7
0x6aa POP
0x6ab PUSH1 0x1
0x6ad PUSH1 0xa0
0x6af PUSH1 0x2
0x6b1 EXP
0x6b2 SUB
0x6b3 SWAP2
0x6b4 DUP3
0x6b5 AND
0x6b6 SWAP4
0x6b7 PUSH4 0x23b872dd
0x6bc SWAP4
0x6bd SWAP2
0x6be SWAP1
0x6bf SWAP3
0x6c0 AND
0x6c1 SWAP2
0x6c2 DUP9
0x6c3 SWAP1
0x6c4 DUP2
0x6c5 LT
0x6c6 PUSH2 0x6cb
0x6c9 JUMPI
---
0x69a: JUMPDEST 
0x69b: V666 = 0x0
0x69d: V667 = S[0x0]
0x69e: V668 = 0x2
0x6a0: V669 = S[0x2]
0x6a1: V670 = 0x4
0x6a4: V671 = S[0x4]
0x6a8: V672 = SUB V309 S1
0x6ab: V673 = 0x1
0x6ad: V674 = 0xa0
0x6af: V675 = 0x2
0x6b1: V676 = EXP 0x2 0xa0
0x6b2: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b5: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0x6b7: V679 = 0x23b872dd
0x6c0: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0x6c5: V681 = LT S5 V671
0x6c6: V682 = 0x6cb
0x6c9: JUMPI 0x6cb V681
---
Entry stack: [V13, 0x132, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, V309]
Stack pops: 6
Stack additions: [S5, V672, S3, S2, V678, 0x23b872dd, V680, 0x4, S5]
Exit stack: [V13, 0x132, 0x0, 0x0, S7, S6, S5, V672, S3, S2, V678, 0x23b872dd, V680, 0x4, S5]

================================

Block 0x6ca
[0x6ca:0x6ca]
---
Predecessors: [0x69a]
Successors: []
---
0x6ca INVALID
---
0x6ca: INVALID 
---
Entry stack: [V13, 0x132, 0x0, 0x0, S10, S9, S8, V672, S6, S5, V678, 0x23b872dd, V680, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S10, S9, S8, V672, S6, S5, V678, 0x23b872dd, V680, 0x4, S0]

================================

Block 0x6cb
[0x6cb:0x737]
---
Predecessors: [0x69a]
Successors: [0x738, 0x73c]
---
0x6cb JUMPDEST
0x6cc PUSH1 0x0
0x6ce SWAP2
0x6cf DUP3
0x6d0 MSTORE
0x6d1 PUSH1 0x20
0x6d3 SWAP1
0x6d4 SWAP2
0x6d5 SHA3
0x6d6 PUSH1 0x3
0x6d8 SWAP1
0x6d9 SWAP2
0x6da MUL
0x6db ADD
0x6dc SLOAD
0x6dd PUSH1 0x6
0x6df SLOAD
0x6e0 PUSH1 0x1
0x6e2 PUSH1 0xa0
0x6e4 PUSH1 0x2
0x6e6 EXP
0x6e7 SUB
0x6e8 SWAP1
0x6e9 SWAP2
0x6ea AND
0x6eb SWAP1
0x6ec DUP8
0x6ed MUL
0x6ee PUSH1 0x40
0x6f0 MLOAD
0x6f1 PUSH1 0xe0
0x6f3 PUSH1 0x2
0x6f5 EXP
0x6f6 PUSH4 0xffffffff
0x6fb DUP7
0x6fc AND
0x6fd MUL
0x6fe DUP2
0x6ff MSTORE
0x700 PUSH1 0x1
0x702 PUSH1 0xa0
0x704 PUSH1 0x2
0x706 EXP
0x707 SUB
0x708 SWAP4
0x709 DUP5
0x70a AND
0x70b PUSH1 0x4
0x70d DUP3
0x70e ADD
0x70f MSTORE
0x710 SWAP2
0x711 SWAP1
0x712 SWAP3
0x713 AND
0x714 PUSH1 0x24
0x716 DUP3
0x717 ADD
0x718 MSTORE
0x719 PUSH1 0x44
0x71b DUP2
0x71c ADD
0x71d SWAP2
0x71e SWAP1
0x71f SWAP2
0x720 MSTORE
0x721 PUSH1 0x64
0x723 ADD
0x724 PUSH1 0x20
0x726 PUSH1 0x40
0x728 MLOAD
0x729 DUP1
0x72a DUP4
0x72b SUB
0x72c DUP2
0x72d PUSH1 0x0
0x72f DUP8
0x730 DUP1
0x731 EXTCODESIZE
0x732 ISZERO
0x733 ISZERO
0x734 PUSH2 0x73c
0x737 JUMPI
---
0x6cb: JUMPDEST 
0x6cc: V683 = 0x0
0x6d0: M[0x0] = 0x4
0x6d1: V684 = 0x20
0x6d5: V685 = SHA3 0x0 0x20
0x6d6: V686 = 0x3
0x6da: V687 = MUL S0 0x3
0x6db: V688 = ADD V687 V685
0x6dc: V689 = S[V688]
0x6dd: V690 = 0x6
0x6df: V691 = S[0x6]
0x6e0: V692 = 0x1
0x6e2: V693 = 0xa0
0x6e4: V694 = 0x2
0x6e6: V695 = EXP 0x2 0xa0
0x6e7: V696 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ea: V697 = AND V689 0xffffffffffffffffffffffffffffffffffffffff
0x6ed: V698 = MUL V672 V691
0x6ee: V699 = 0x40
0x6f0: V700 = M[0x40]
0x6f1: V701 = 0xe0
0x6f3: V702 = 0x2
0x6f5: V703 = EXP 0x2 0xe0
0x6f6: V704 = 0xffffffff
0x6fc: V705 = AND 0x23b872dd 0xffffffff
0x6fd: V706 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x6ff: M[V700] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x700: V707 = 0x1
0x702: V708 = 0xa0
0x704: V709 = 0x2
0x706: V710 = EXP 0x2 0xa0
0x707: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70a: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V680
0x70b: V713 = 0x4
0x70e: V714 = ADD V700 0x4
0x70f: M[V714] = V712
0x713: V715 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0x714: V716 = 0x24
0x717: V717 = ADD V700 0x24
0x718: M[V717] = V715
0x719: V718 = 0x44
0x71c: V719 = ADD V700 0x44
0x720: M[V719] = V698
0x721: V720 = 0x64
0x723: V721 = ADD 0x64 V700
0x724: V722 = 0x20
0x726: V723 = 0x40
0x728: V724 = M[0x40]
0x72b: V725 = SUB V721 V724
0x72d: V726 = 0x0
0x731: V727 = EXTCODESIZE V678
0x732: V728 = ISZERO V727
0x733: V729 = ISZERO V728
0x734: V730 = 0x73c
0x737: JUMPI 0x73c V729
---
Entry stack: [V13, 0x132, 0x0, 0x0, S10, S9, S8, V672, S6, S5, V678, 0x23b872dd, V680, 0x4, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V721, 0x20, V724, V725, V724, 0x0, S4]
Exit stack: [V13, 0x132, 0x0, 0x0, S10, S9, S8, V672, S6, S5, V678, 0x23b872dd, V721, 0x20, V724, V725, V724, 0x0, V678]

================================

Block 0x738
[0x738:0x73b]
---
Predecessors: [0x6cb]
Successors: []
---
0x738 PUSH1 0x0
0x73a DUP1
0x73b REVERT
---
0x738: V731 = 0x0
0x73b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, S14, S13, S12, V672, S10, S9, V678, 0x23b872dd, V721, 0x20, V724, V725, V724, 0x0, V678]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S14, S13, S12, V672, S10, S9, V678, 0x23b872dd, V721, 0x20, V724, V725, V724, 0x0, V678]

================================

Block 0x73c
[0x73c:0x744]
---
Predecessors: [0x6cb]
Successors: [0x745, 0x749]
---
0x73c JUMPDEST
0x73d GAS
0x73e CALL
0x73f ISZERO
0x740 ISZERO
0x741 PUSH2 0x749
0x744 JUMPI
---
0x73c: JUMPDEST 
0x73d: V732 = GAS
0x73e: V733 = CALL V732 V678 0x0 V724 V725 V724 0x20
0x73f: V734 = ISZERO V733
0x740: V735 = ISZERO V734
0x741: V736 = 0x749
0x744: JUMPI 0x749 V735
---
Entry stack: [V13, 0x132, 0x0, 0x0, S14, S13, S12, V672, S10, S9, V678, 0x23b872dd, V721, 0x20, V724, V725, V724, 0x0, V678]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S14, S13, S12, V672, S10, S9, V678, 0x23b872dd, V721]

================================

Block 0x745
[0x745:0x748]
---
Predecessors: [0x73c]
Successors: []
---
0x745 PUSH1 0x0
0x747 DUP1
0x748 REVERT
---
0x745: V737 = 0x0
0x748: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, V672, S4, S3, V678, 0x23b872dd, V721]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, V672, S4, S3, V678, 0x23b872dd, V721]

================================

Block 0x749
[0x749:0x759]
---
Predecessors: [0x73c]
Successors: [0x75a, 0x75e]
---
0x749 JUMPDEST
0x74a POP
0x74b POP
0x74c POP
0x74d PUSH1 0x40
0x74f MLOAD
0x750 DUP1
0x751 MLOAD
0x752 SWAP1
0x753 POP
0x754 ISZERO
0x755 ISZERO
0x756 PUSH2 0x75e
0x759 JUMPI
---
0x749: JUMPDEST 
0x74d: V738 = 0x40
0x74f: V739 = M[0x40]
0x751: V740 = M[V739]
0x754: V741 = ISZERO V740
0x755: V742 = ISZERO V741
0x756: V743 = 0x75e
0x759: JUMPI 0x75e V742
---
Entry stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, V672, S4, S3, V678, 0x23b872dd, V721]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, V672, S4, S3]

================================

Block 0x75a
[0x75a:0x75d]
---
Predecessors: [0x749]
Successors: []
---
0x75a PUSH1 0x0
0x75c DUP1
0x75d REVERT
---
0x75a: V744 = 0x0
0x75d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, V672, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, V672, S1, S0]

================================

Block 0x75e
[0x75e:0x76d]
---
Predecessors: [0x749]
Successors: [0x76e, 0x76f]
---
0x75e JUMPDEST
0x75f PUSH1 0x1
0x761 PUSH1 0x4
0x763 DUP6
0x764 DUP2
0x765 SLOAD
0x766 DUP2
0x767 LT
0x768 ISZERO
0x769 ISZERO
0x76a PUSH2 0x76f
0x76d JUMPI
---
0x75e: JUMPDEST 
0x75f: V745 = 0x1
0x761: V746 = 0x4
0x765: V747 = S[0x4]
0x767: V748 = LT S3 V747
0x768: V749 = ISZERO V748
0x769: V750 = ISZERO V749
0x76a: V751 = 0x76f
0x76d: JUMPI 0x76f V750
---
Entry stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, V672, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x1, 0x4, S3]
Exit stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, V672, S1, S0, 0x1, 0x4, S3]

================================

Block 0x76e
[0x76e:0x76e]
---
Predecessors: [0x75e]
Successors: []
---
0x76e INVALID
---
0x76e: INVALID 
---
Entry stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, V672, S4, S3, 0x1, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, V672, S4, S3, 0x1, 0x4, S0]

================================

Block 0x76f
[0x76f:0x791]
---
Predecessors: [0x75e]
Successors: [0x792]
---
0x76f JUMPDEST
0x770 PUSH1 0x0
0x772 SWAP2
0x773 DUP3
0x774 MSTORE
0x775 PUSH1 0x20
0x777 SWAP1
0x778 SWAP2
0x779 SHA3
0x77a PUSH1 0x3
0x77c SWAP1
0x77d SWAP2
0x77e MUL
0x77f ADD
0x780 PUSH1 0x2
0x782 ADD
0x783 DUP1
0x784 SLOAD
0x785 PUSH1 0xff
0x787 NOT
0x788 AND
0x789 SWAP2
0x78a ISZERO
0x78b ISZERO
0x78c SWAP2
0x78d SWAP1
0x78e SWAP2
0x78f OR
0x790 SWAP1
0x791 SSTORE
---
0x76f: JUMPDEST 
0x770: V752 = 0x0
0x774: M[0x0] = 0x4
0x775: V753 = 0x20
0x779: V754 = SHA3 0x0 0x20
0x77a: V755 = 0x3
0x77e: V756 = MUL S0 0x3
0x77f: V757 = ADD V756 V754
0x780: V758 = 0x2
0x782: V759 = ADD 0x2 V757
0x784: V760 = S[V759]
0x785: V761 = 0xff
0x787: V762 = NOT 0xff
0x788: V763 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V760
0x78a: V764 = ISZERO 0x1
0x78b: V765 = ISZERO 0x0
0x78f: V766 = OR 0x1 V763
0x791: S[V759] = V766
---
Entry stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, V672, S4, S3, 0x1, 0x4, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x132, 0x0, 0x0, S8, S7, S6, V672, S4, S3]

================================

Block 0x792
[0x792:0x79c]
---
Predecessors: [0x680, 0x76f]
Successors: [0x631]
---
0x792 JUMPDEST
0x793 PUSH1 0x1
0x795 SWAP1
0x796 SWAP4
0x797 ADD
0x798 SWAP3
0x799 PUSH2 0x631
0x79c JUMP
---
0x792: JUMPDEST 
0x793: V767 = 0x1
0x797: V768 = ADD S3 0x1
0x799: V769 = 0x631
0x79c: JUMP 0x631
---
Entry stack: [V13, 0x132, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V768, S2, S1, S0]
Exit stack: [V13, 0x132, 0x0, 0x0, S5, S4, V768, S2, S1, S0]

================================

Block 0x79d
[0x79d:0x7a2]
---
Predecessors: [0x631]
Successors: [0x132]
---
0x79d JUMPDEST
0x79e POP
0x79f POP
0x7a0 POP
0x7a1 POP
0x7a2 JUMP
---
0x79d: JUMPDEST 
0x7a2: JUMP 0x132
---
Entry stack: [V13, 0x132, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x7a3
[0x7a3:0x7a8]
---
Predecessors: [0x205]
Successors: [0x15d]
---
0x7a3 JUMPDEST
0x7a4 PUSH1 0x6
0x7a6 SLOAD
0x7a7 DUP2
0x7a8 JUMP
---
0x7a3: JUMPDEST 
0x7a4: V770 = 0x6
0x7a6: V771 = S[0x6]
0x7a8: JUMP 0x15d
---
Entry stack: [V13, 0x15d]
Stack pops: 1
Stack additions: [S0, V771]
Exit stack: [V13, 0x15d, V771]

================================

Block 0x7a9
[0x7a9:0x7ae]
---
Predecessors: [0x218]
Successors: [0x15d]
---
0x7a9 JUMPDEST
0x7aa PUSH1 0x3
0x7ac SLOAD
0x7ad DUP2
0x7ae JUMP
---
0x7a9: JUMPDEST 
0x7aa: V772 = 0x3
0x7ac: V773 = S[0x3]
0x7ae: JUMP 0x15d
---
Entry stack: [V13, 0x15d]
Stack pops: 1
Stack additions: [S0, V773]
Exit stack: [V13, 0x15d, V773]

================================

Block 0x7af
[0x7af:0x7b3]
---
Predecessors: [0x22b, 0x304]
Successors: [0x7b4]
---
0x7af JUMPDEST
0x7b0 PUSH1 0x0
0x7b2 DUP1
0x7b3 DUP1
---
0x7af: JUMPDEST 
0x7b0: V774 = 0x0
---
Entry stack: [V13, 0x132, S2, S1, {0x10b, 0x30c}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x132, S2, S1, {0x10b, 0x30c}, 0x0, 0x0, 0x0]

================================

Block 0x7b4
[0x7b4:0x7c1]
---
Predecessors: [0x7af, 0x7ff]
Successors: [0x7c2, 0x807]
---
0x7b4 JUMPDEST
0x7b5 PUSH1 0x5
0x7b7 SLOAD
0x7b8 PUSH1 0xff
0x7ba DUP3
0x7bb AND
0x7bc LT
0x7bd ISZERO
0x7be PUSH2 0x807
0x7c1 JUMPI
---
0x7b4: JUMPDEST 
0x7b5: V775 = 0x5
0x7b7: V776 = S[0x5]
0x7b8: V777 = 0xff
0x7bb: V778 = AND S0 0xff
0x7bc: V779 = LT V778 V776
0x7bd: V780 = ISZERO V779
0x7be: V781 = 0x807
0x7c1: JUMPI 0x807 V780
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, S1, S0]

================================

Block 0x7c2
[0x7c2:0x7db]
---
Predecessors: [0x7b4]
Successors: [0x7dc, 0x7dd]
---
0x7c2 CALLER
0x7c3 PUSH1 0x1
0x7c5 PUSH1 0xa0
0x7c7 PUSH1 0x2
0x7c9 EXP
0x7ca SUB
0x7cb AND
0x7cc PUSH1 0x5
0x7ce DUP3
0x7cf PUSH1 0xff
0x7d1 AND
0x7d2 DUP2
0x7d3 SLOAD
0x7d4 DUP2
0x7d5 LT
0x7d6 ISZERO
0x7d7 ISZERO
0x7d8 PUSH2 0x7dd
0x7db JUMPI
---
0x7c2: V782 = CALLER
0x7c3: V783 = 0x1
0x7c5: V784 = 0xa0
0x7c7: V785 = 0x2
0x7c9: V786 = EXP 0x2 0xa0
0x7ca: V787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cb: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0x7cc: V789 = 0x5
0x7cf: V790 = 0xff
0x7d1: V791 = AND 0xff S0
0x7d3: V792 = S[0x5]
0x7d5: V793 = LT V791 V792
0x7d6: V794 = ISZERO V793
0x7d7: V795 = ISZERO V794
0x7d8: V796 = 0x7dd
0x7db: JUMPI 0x7dd V795
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0, V788, 0x5, V791]
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0, V788, 0x5, V791]

================================

Block 0x7dc
[0x7dc:0x7dc]
---
Predecessors: [0x7c2]
Successors: []
---
0x7dc INVALID
---
0x7dc: INVALID 
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S7, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S3, V788, 0x5, V791]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S7, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S3, V788, 0x5, V791]

================================

Block 0x7dd
[0x7dd:0x7f8]
---
Predecessors: [0x7c2]
Successors: [0x7f9, 0x7ff]
---
0x7dd JUMPDEST
0x7de PUSH1 0x0
0x7e0 SWAP2
0x7e1 DUP3
0x7e2 MSTORE
0x7e3 PUSH1 0x20
0x7e5 SWAP1
0x7e6 SWAP2
0x7e7 SHA3
0x7e8 ADD
0x7e9 SLOAD
0x7ea PUSH1 0x1
0x7ec PUSH1 0xa0
0x7ee PUSH1 0x2
0x7f0 EXP
0x7f1 SUB
0x7f2 AND
0x7f3 EQ
0x7f4 ISZERO
0x7f5 PUSH2 0x7ff
0x7f8 JUMPI
---
0x7dd: JUMPDEST 
0x7de: V797 = 0x0
0x7e2: M[0x0] = 0x5
0x7e3: V798 = 0x20
0x7e7: V799 = SHA3 0x0 0x20
0x7e8: V800 = ADD V799 V791
0x7e9: V801 = S[V800]
0x7ea: V802 = 0x1
0x7ec: V803 = 0xa0
0x7ee: V804 = 0x2
0x7f0: V805 = EXP 0x2 0xa0
0x7f1: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f2: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0x7f3: V808 = EQ V807 V788
0x7f4: V809 = ISZERO V808
0x7f5: V810 = 0x7ff
0x7f8: JUMPI 0x7ff V809
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S7, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S3, V788, 0x5, V791]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S7, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S3]

================================

Block 0x7f9
[0x7f9:0x7fe]
---
Predecessors: [0x7dd]
Successors: [0x7ff]
---
0x7f9 DUP2
0x7fa PUSH1 0x1
0x7fc OR
0x7fd SWAP2
0x7fe POP
---
0x7fa: V811 = 0x1
0x7fc: V812 = OR 0x1 {0x0, 0x1}
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [V812, S0]
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, V812, S0]

================================

Block 0x7ff
[0x7ff:0x806]
---
Predecessors: [0x7dd, 0x7f9]
Successors: [0x7b4]
---
0x7ff JUMPDEST
0x800 PUSH1 0x1
0x802 ADD
0x803 PUSH2 0x7b4
0x806 JUMP
---
0x7ff: JUMPDEST 
0x800: V813 = 0x1
0x802: V814 = ADD 0x1 S0
0x803: V815 = 0x7b4
0x806: JUMP 0x7b4
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V814]
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, S1, V814]

================================

Block 0x807
[0x807:0x812]
---
Predecessors: [0x7b4]
Successors: [0x813, 0x817]
---
0x807 JUMPDEST
0x808 PUSH1 0x1
0x80a PUSH1 0xff
0x80c DUP4
0x80d AND
0x80e EQ
0x80f PUSH2 0x817
0x812 JUMPI
---
0x807: JUMPDEST 
0x808: V816 = 0x1
0x80a: V817 = 0xff
0x80d: V818 = AND {0x0, 0x1} 0xff
0x80e: V819 = EQ V818 0x1
0x80f: V820 = 0x817
0x812: JUMPI 0x817 V819
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x813
[0x813:0x816]
---
Predecessors: [0x807]
Successors: []
---
0x813 PUSH1 0x0
0x815 DUP1
0x816 REVERT
---
0x813: V821 = 0x0
0x816: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x817
[0x817:0x870]
---
Predecessors: [0x807]
Successors: [0x871, 0x875]
---
0x817 JUMPDEST
0x818 PUSH1 0x0
0x81a SLOAD
0x81b PUSH1 0x2
0x81d SLOAD
0x81e PUSH1 0x1
0x820 PUSH1 0xa0
0x822 PUSH1 0x2
0x824 EXP
0x825 SUB
0x826 SWAP2
0x827 DUP3
0x828 AND
0x829 SWAP2
0x82a PUSH4 0xa9059cbb
0x82f SWAP2
0x830 AND
0x831 DUP3
0x832 PUSH4 0x70a08231
0x837 ADDRESS
0x838 PUSH1 0x40
0x83a MLOAD
0x83b PUSH1 0xe0
0x83d PUSH1 0x2
0x83f EXP
0x840 PUSH4 0xffffffff
0x845 DUP5
0x846 AND
0x847 MUL
0x848 DUP2
0x849 MSTORE
0x84a PUSH1 0x1
0x84c PUSH1 0xa0
0x84e PUSH1 0x2
0x850 EXP
0x851 SUB
0x852 SWAP1
0x853 SWAP2
0x854 AND
0x855 PUSH1 0x4
0x857 DUP3
0x858 ADD
0x859 MSTORE
0x85a PUSH1 0x24
0x85c ADD
0x85d PUSH1 0x20
0x85f PUSH1 0x40
0x861 MLOAD
0x862 DUP1
0x863 DUP4
0x864 SUB
0x865 DUP2
0x866 PUSH1 0x0
0x868 DUP8
0x869 DUP1
0x86a EXTCODESIZE
0x86b ISZERO
0x86c ISZERO
0x86d PUSH2 0x875
0x870 JUMPI
---
0x817: JUMPDEST 
0x818: V822 = 0x0
0x81a: V823 = S[0x0]
0x81b: V824 = 0x2
0x81d: V825 = S[0x2]
0x81e: V826 = 0x1
0x820: V827 = 0xa0
0x822: V828 = 0x2
0x824: V829 = EXP 0x2 0xa0
0x825: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x828: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V823
0x82a: V832 = 0xa9059cbb
0x830: V833 = AND V825 0xffffffffffffffffffffffffffffffffffffffff
0x832: V834 = 0x70a08231
0x837: V835 = ADDRESS
0x838: V836 = 0x40
0x83a: V837 = M[0x40]
0x83b: V838 = 0xe0
0x83d: V839 = 0x2
0x83f: V840 = EXP 0x2 0xe0
0x840: V841 = 0xffffffff
0x846: V842 = AND 0x70a08231 0xffffffff
0x847: V843 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x849: M[V837] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x84a: V844 = 0x1
0x84c: V845 = 0xa0
0x84e: V846 = 0x2
0x850: V847 = EXP 0x2 0xa0
0x851: V848 = SUB 0x10000000000000000000000000000000000000000 0x1
0x854: V849 = AND V835 0xffffffffffffffffffffffffffffffffffffffff
0x855: V850 = 0x4
0x858: V851 = ADD V837 0x4
0x859: M[V851] = V849
0x85a: V852 = 0x24
0x85c: V853 = ADD 0x24 V837
0x85d: V854 = 0x20
0x85f: V855 = 0x40
0x861: V856 = M[0x40]
0x864: V857 = SUB V853 V856
0x866: V858 = 0x0
0x86a: V859 = EXTCODESIZE V831
0x86b: V860 = ISZERO V859
0x86c: V861 = ISZERO V860
0x86d: V862 = 0x875
0x870: JUMPI 0x875 V861
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: [V831, 0xa9059cbb, V833, V831, 0x70a08231, V853, 0x20, V856, V857, V856, 0x0, V831]
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0, V831, 0xa9059cbb, V833, V831, 0x70a08231, V853, 0x20, V856, V857, V856, 0x0, V831]

================================

Block 0x871
[0x871:0x874]
---
Predecessors: [0x817]
Successors: []
---
0x871 PUSH1 0x0
0x873 DUP1
0x874 REVERT
---
0x871: V863 = 0x0
0x874: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S16, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S12, V831, 0xa9059cbb, V833, V831, 0x70a08231, V853, 0x20, V856, V857, V856, 0x0, V831]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S16, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S12, V831, 0xa9059cbb, V833, V831, 0x70a08231, V853, 0x20, V856, V857, V856, 0x0, V831]

================================

Block 0x875
[0x875:0x87d]
---
Predecessors: [0x817]
Successors: [0x87e, 0x882]
---
0x875 JUMPDEST
0x876 GAS
0x877 CALL
0x878 ISZERO
0x879 ISZERO
0x87a PUSH2 0x882
0x87d JUMPI
---
0x875: JUMPDEST 
0x876: V864 = GAS
0x877: V865 = CALL V864 V831 0x0 V856 V857 V856 0x20
0x878: V866 = ISZERO V865
0x879: V867 = ISZERO V866
0x87a: V868 = 0x882
0x87d: JUMPI 0x882 V867
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S16, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S12, V831, 0xa9059cbb, V833, V831, 0x70a08231, V853, 0x20, V856, V857, V856, 0x0, V831]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S16, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S12, V831, 0xa9059cbb, V833, V831, 0x70a08231, V853]

================================

Block 0x87e
[0x87e:0x881]
---
Predecessors: [0x875]
Successors: []
---
0x87e PUSH1 0x0
0x880 DUP1
0x881 REVERT
---
0x87e: V869 = 0x0
0x881: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S10, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S6, S5, 0xa9059cbb, S3, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S10, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S6, S5, 0xa9059cbb, S3, S2, 0x70a08231, S0]

================================

Block 0x882
[0x882:0x8ca]
---
Predecessors: [0x875]
Successors: [0x8cb, 0x8cf]
---
0x882 JUMPDEST
0x883 POP
0x884 POP
0x885 POP
0x886 PUSH1 0x40
0x888 MLOAD
0x889 DUP1
0x88a MLOAD
0x88b SWAP1
0x88c POP
0x88d PUSH1 0x40
0x88f MLOAD
0x890 PUSH1 0xe0
0x892 PUSH1 0x2
0x894 EXP
0x895 PUSH4 0xffffffff
0x89a DUP6
0x89b AND
0x89c MUL
0x89d DUP2
0x89e MSTORE
0x89f PUSH1 0x1
0x8a1 PUSH1 0xa0
0x8a3 PUSH1 0x2
0x8a5 EXP
0x8a6 SUB
0x8a7 SWAP1
0x8a8 SWAP3
0x8a9 AND
0x8aa PUSH1 0x4
0x8ac DUP4
0x8ad ADD
0x8ae MSTORE
0x8af PUSH1 0x24
0x8b1 DUP3
0x8b2 ADD
0x8b3 MSTORE
0x8b4 PUSH1 0x44
0x8b6 ADD
0x8b7 PUSH1 0x20
0x8b9 PUSH1 0x40
0x8bb MLOAD
0x8bc DUP1
0x8bd DUP4
0x8be SUB
0x8bf DUP2
0x8c0 PUSH1 0x0
0x8c2 DUP8
0x8c3 DUP1
0x8c4 EXTCODESIZE
0x8c5 ISZERO
0x8c6 ISZERO
0x8c7 PUSH2 0x8cf
0x8ca JUMPI
---
0x882: JUMPDEST 
0x886: V870 = 0x40
0x888: V871 = M[0x40]
0x88a: V872 = M[V871]
0x88d: V873 = 0x40
0x88f: V874 = M[0x40]
0x890: V875 = 0xe0
0x892: V876 = 0x2
0x894: V877 = EXP 0x2 0xe0
0x895: V878 = 0xffffffff
0x89b: V879 = AND 0xa9059cbb 0xffffffff
0x89c: V880 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x89e: M[V874] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x89f: V881 = 0x1
0x8a1: V882 = 0xa0
0x8a3: V883 = 0x2
0x8a5: V884 = EXP 0x2 0xa0
0x8a6: V885 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a9: V886 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x8aa: V887 = 0x4
0x8ad: V888 = ADD V874 0x4
0x8ae: M[V888] = V886
0x8af: V889 = 0x24
0x8b2: V890 = ADD V874 0x24
0x8b3: M[V890] = V872
0x8b4: V891 = 0x44
0x8b6: V892 = ADD 0x44 V874
0x8b7: V893 = 0x20
0x8b9: V894 = 0x40
0x8bb: V895 = M[0x40]
0x8be: V896 = SUB V892 V895
0x8c0: V897 = 0x0
0x8c4: V898 = EXTCODESIZE S5
0x8c5: V899 = ISZERO V898
0x8c6: V900 = ISZERO V899
0x8c7: V901 = 0x8cf
0x8ca: JUMPI 0x8cf V900
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S10, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S6, S5, 0xa9059cbb, S3, S2, 0x70a08231, S0]
Stack pops: 6
Stack additions: [S5, S4, V892, 0x20, V895, V896, V895, 0x0, S5]
Exit stack: [V13, 0x132, {0x0, 0x1}, S10, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S6, S5, 0xa9059cbb, V892, 0x20, V895, V896, V895, 0x0, S5]

================================

Block 0x8cb
[0x8cb:0x8ce]
---
Predecessors: [0x882]
Successors: []
---
0x8cb PUSH1 0x0
0x8cd DUP1
0x8ce REVERT
---
0x8cb: V902 = 0x0
0x8ce: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S13, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S9, S8, 0xa9059cbb, V892, 0x20, V895, V896, V895, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S13, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S9, S8, 0xa9059cbb, V892, 0x20, V895, V896, V895, 0x0, S0]

================================

Block 0x8cf
[0x8cf:0x8d7]
---
Predecessors: [0x882]
Successors: [0x8d8, 0x8dc]
---
0x8cf JUMPDEST
0x8d0 GAS
0x8d1 CALL
0x8d2 ISZERO
0x8d3 ISZERO
0x8d4 PUSH2 0x8dc
0x8d7 JUMPI
---
0x8cf: JUMPDEST 
0x8d0: V903 = GAS
0x8d1: V904 = CALL V903 S0 0x0 V895 V896 V895 0x20
0x8d2: V905 = ISZERO V904
0x8d3: V906 = ISZERO V905
0x8d4: V907 = 0x8dc
0x8d7: JUMPI 0x8dc V906
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S13, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S9, S8, 0xa9059cbb, V892, 0x20, V895, V896, V895, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S13, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S9, S8, 0xa9059cbb, V892]

================================

Block 0x8d8
[0x8d8:0x8db]
---
Predecessors: [0x8cf]
Successors: []
---
0x8d8 PUSH1 0x0
0x8da DUP1
0x8db REVERT
---
0x8d8: V908 = 0x0
0x8db: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S7, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S7, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S3, S2, 0xa9059cbb, S0]

================================

Block 0x8dc
[0x8dc:0x8ec]
---
Predecessors: [0x8cf]
Successors: [0x8ed, 0x8f1]
---
0x8dc JUMPDEST
0x8dd POP
0x8de POP
0x8df POP
0x8e0 PUSH1 0x40
0x8e2 MLOAD
0x8e3 DUP1
0x8e4 MLOAD
0x8e5 SWAP1
0x8e6 POP
0x8e7 ISZERO
0x8e8 ISZERO
0x8e9 PUSH2 0x8f1
0x8ec JUMPI
---
0x8dc: JUMPDEST 
0x8e0: V909 = 0x40
0x8e2: V910 = M[0x40]
0x8e4: V911 = M[V910]
0x8e7: V912 = ISZERO V911
0x8e8: V913 = ISZERO V912
0x8e9: V914 = 0x8f1
0x8ec: JUMPI 0x8f1 V913
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S7, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S7, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S3]

================================

Block 0x8ed
[0x8ed:0x8f0]
---
Predecessors: [0x8dc]
Successors: []
---
0x8ed PUSH1 0x0
0x8ef DUP1
0x8f0 REVERT
---
0x8ed: V915 = 0x0
0x8f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x8f1
[0x8f1:0x925]
---
Predecessors: [0x8dc]
Successors: [0x926, 0x92a]
---
0x8f1 JUMPDEST
0x8f2 PUSH1 0x2
0x8f4 SLOAD
0x8f5 PUSH1 0x1
0x8f7 PUSH1 0xa0
0x8f9 PUSH1 0x2
0x8fb EXP
0x8fc SUB
0x8fd SWAP1
0x8fe DUP2
0x8ff AND
0x900 SWAP1
0x901 ADDRESS
0x902 AND
0x903 BALANCE
0x904 DUP1
0x905 ISZERO
0x906 PUSH2 0x8fc
0x909 MUL
0x90a SWAP1
0x90b PUSH1 0x40
0x90d MLOAD
0x90e PUSH1 0x0
0x910 PUSH1 0x40
0x912 MLOAD
0x913 DUP1
0x914 DUP4
0x915 SUB
0x916 DUP2
0x917 DUP6
0x918 DUP9
0x919 DUP9
0x91a CALL
0x91b SWAP4
0x91c POP
0x91d POP
0x91e POP
0x91f POP
0x920 ISZERO
0x921 ISZERO
0x922 PUSH2 0x92a
0x925 JUMPI
---
0x8f1: JUMPDEST 
0x8f2: V916 = 0x2
0x8f4: V917 = S[0x2]
0x8f5: V918 = 0x1
0x8f7: V919 = 0xa0
0x8f9: V920 = 0x2
0x8fb: V921 = EXP 0x2 0xa0
0x8fc: V922 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ff: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V917
0x901: V924 = ADDRESS
0x902: V925 = AND V924 0xffffffffffffffffffffffffffffffffffffffff
0x903: V926 = BALANCE V925
0x905: V927 = ISZERO V926
0x906: V928 = 0x8fc
0x909: V929 = MUL 0x8fc V927
0x90b: V930 = 0x40
0x90d: V931 = M[0x40]
0x90e: V932 = 0x0
0x910: V933 = 0x40
0x912: V934 = M[0x40]
0x915: V935 = SUB V931 V934
0x91a: V936 = CALL V929 V923 V926 V934 V935 V934 0x0
0x920: V937 = ISZERO V936
0x921: V938 = ISZERO V937
0x922: V939 = 0x92a
0x925: JUMPI 0x92a V938
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x926
[0x926:0x929]
---
Predecessors: [0x8f1]
Successors: []
---
0x926 PUSH1 0x0
0x928 DUP1
0x929 REVERT
---
0x926: V940 = 0x0
0x929: REVERT 0x0 0x0
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x92a
[0x92a:0x932]
---
Predecessors: [0x8f1]
Successors: [0x10b, 0x30c]
---
0x92a JUMPDEST
0x92b PUSH1 0x1
0x92d SWAP3
0x92e POP
0x92f POP
0x930 POP
0x931 SWAP1
0x932 JUMP
---
0x92a: JUMPDEST 
0x92b: V941 = 0x1
0x932: JUMP {0x10b, 0x30c}
---
Entry stack: [V13, 0x132, {0x0, 0x1}, S4, {0x10b, 0x30c}, 0x0, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, 0x132, {0x0, 0x1}, S4, 0x1]

================================

Block 0x933
[0x933:0x938]
---
Predecessors: [0x23e]
Successors: [0x15d]
---
0x933 JUMPDEST
0x934 PUSH1 0x1
0x936 SLOAD
0x937 DUP2
0x938 JUMP
---
0x933: JUMPDEST 
0x934: V942 = 0x1
0x936: V943 = S[0x1]
0x938: JUMP 0x15d
---
Entry stack: [V13, 0x15d]
Stack pops: 1
Stack additions: [S0, V943]
Exit stack: [V13, 0x15d, V943]

================================

Block 0x939
[0x939:0x93e]
---
Predecessors: [0x251]
Successors: [0x15d]
---
0x939 JUMPDEST
0x93a PUSH1 0x7
0x93c SLOAD
0x93d DUP2
0x93e JUMP
---
0x939: JUMPDEST 
0x93a: V944 = 0x7
0x93c: V945 = S[0x7]
0x93e: JUMP 0x15d
---
Entry stack: [V13, 0x15d]
Stack pops: 1
Stack additions: [S0, V945]
Exit stack: [V13, 0x15d, V945]

================================

Block 0x93f
[0x93f:0x94d]
---
Predecessors: [0x264]
Successors: [0xdc]
---
0x93f JUMPDEST
0x940 PUSH1 0x0
0x942 SLOAD
0x943 PUSH1 0x1
0x945 PUSH1 0xa0
0x947 PUSH1 0x2
0x949 EXP
0x94a SUB
0x94b AND
0x94c DUP2
0x94d JUMP
---
0x93f: JUMPDEST 
0x940: V946 = 0x0
0x942: V947 = S[0x0]
0x943: V948 = 0x1
0x945: V949 = 0xa0
0x947: V950 = 0x2
0x949: V951 = EXP 0x2 0xa0
0x94a: V952 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94b: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0x94d: JUMP 0xdc
---
Entry stack: [V13, 0xdc]
Stack pops: 1
Stack additions: [S0, V953]
Exit stack: [V13, 0xdc, V953]

================================

Block 0x94e
[0x94e:0x97b]
---
Predecessors: []
Successors: []
---
0x94e STOP
0x94f LOG1
0x950 PUSH6 0x627a7a723058
0x957 SHA3
0x958 COINBASE
0x959 DUP1
0x95a AND
0x95b PUSH32 0xbf1ce64657b17ecdd0aba80cd44a787a94b3a0d0efd9ba4fe978ad870029
---
0x94e: STOP 
0x94f: LOG S0 S1 S2
0x950: V954 = 0x627a7a723058
0x957: V955 = SHA3 0x627a7a723058 S3
0x958: V956 = COINBASE
0x95a: V957 = AND V956 V956
0x95b: V958 = 0xbf1ce64657b17ecdd0aba80cd44a787a94b3a0d0efd9ba4fe978ad870029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbf1ce64657b17ecdd0aba80cd44a787a94b3a0d0efd9ba4fe978ad870029, V957, V955]
Exit stack: []

================================

Function 0:
Public function signature: 0x14bfd6d0
Entry block: 0xc6
Exit block: 0xdc
Body: 0xc6, 0xcd, 0xd1, 0xdc, 0x26c, 0x279, 0x27a

Function 1:
Public function signature: 0x34eac76f
Entry block: 0xf8
Exit block: 0x10b
Body: 0xf8, 0xff, 0x103, 0x10b, 0x294

Function 2:
Public function signature: 0x35a063b4
Entry block: 0x11f
Exit block: 0x317
Body: 0x11f, 0x126, 0x12a, 0x29d, 0x2a1, 0x2af, 0x2c9, 0x2ca, 0x2e6, 0x2ec, 0x2f4, 0x300, 0x304, 0x30c, 0x313, 0x317

Function 3:
Public function signature: 0x4783c35b
Entry block: 0x134
Exit block: 0xdc
Body: 0xdc, 0x134, 0x13b, 0x13f, 0x325

Function 4:
Public function signature: 0x53f754e0
Entry block: 0x147
Exit block: 0x745
Body: 0x147, 0x14e, 0x152, 0x745

Function 5:
Public function signature: 0x63037b0c
Entry block: 0x16f
Exit block: 0x185
Body: 0x16f, 0x176, 0x17a, 0x185, 0x34e, 0x35b, 0x35c

Function 6:
Public function signature: 0x66829b16
Entry block: 0x1b5
Exit block: 0x132
Body: 0x132, 0x1b5, 0x1bc, 0x1c0, 0x38c, 0x390, 0x39e, 0x3b8, 0x3b9, 0x3d5, 0x3db, 0x3e3, 0x3ef, 0x3f3

Function 7:
Public function signature: 0x6901f668
Entry block: 0x1d4
Exit block: 0x10b
Body: 0x10b, 0x1d4, 0x1db, 0x1df

Function 8:
Public function signature: 0x853828b6
Entry block: 0x1e7
Exit block: 0x76e
Body: 0x132, 0x1e7, 0x1ee, 0x1f2, 0x593, 0x599, 0x5a7, 0x5c1, 0x5c2, 0x5de, 0x5e4, 0x5ec, 0x5f8, 0x5fc, 0x608, 0x60c, 0x614, 0x61b, 0x61f, 0x631, 0x63c, 0x648, 0x649, 0x668, 0x67d, 0x680, 0x686, 0x69a, 0x6ca, 0x6cb, 0x738, 0x73c, 0x745, 0x749, 0x75a, 0x75e, 0x76e, 0x76f, 0x792, 0x79d

Function 9:
Public function signature: 0xba3f5a12
Entry block: 0x1fa
Exit block: 0x15d
Body: 0x15d, 0x1fa, 0x201, 0x205, 0x7a3

Function 10:
Public function signature: 0xd2c51c72
Entry block: 0x20d
Exit block: 0x15d
Body: 0x15d, 0x20d, 0x214, 0x218, 0x7a9

Function 11:
Public function signature: 0xdb171211
Entry block: 0x220
Exit block: 0x10b
Body: 0x10b, 0x220, 0x227, 0x22b

Function 12:
Public function signature: 0xe09adc70
Entry block: 0x233
Exit block: 0x15d
Body: 0x15d, 0x233, 0x23a, 0x23e, 0x933

Function 13:
Public function signature: 0xeffd88b7
Entry block: 0x246
Exit block: 0x15d
Body: 0x15d, 0x246, 0x24d, 0x251, 0x939

Function 14:
Public function signature: 0xfc0c546a
Entry block: 0x259
Exit block: 0xdc
Body: 0xdc, 0x259, 0x260, 0x264, 0x93f

Function 15:
Public fallback function
Entry block: 0xc1
Exit block: 0xc1
Body: 0xc1

Function 16:
Private function
Entry block: 0x424
Exit block: 0x58c
Body: 0x424, 0x429, 0x434, 0x441, 0x45f, 0x48a, 0x490, 0x498, 0x4f1, 0x4fe, 0x511, 0x572, 0x57f, 0x58c

Function 17:
Private function
Entry block: 0x7af
Exit block: 0x92a
Body: 0x7af, 0x7b4, 0x7c2, 0x7dd, 0x7f9, 0x7ff, 0x807, 0x817, 0x875, 0x882, 0x8cf, 0x8dc, 0x8f1, 0x92a

Function 18:
Private function
Entry block: 0x473
Exit block: 0x347
Body: 0x334, 0x347, 0x473

