Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd5
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd5
0xa: JUMPI 0xd5 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xe1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xe1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0xe1
0x24: JUMPI 0xe1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd5]
---
0x25 DUP1
0x26 PUSH4 0x1249c58b
0x2b EQ
0x2c PUSH2 0xd5
0x2f JUMPI
---
0x26: V16 = 0x1249c58b
0x2b: V17 = EQ 0x1249c58b V12
0x2c: V18 = 0xd5
0x2f: JUMPI 0xd5 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x176]
---
0x30 DUP1
0x31 PUSH4 0x2033d3a3
0x36 EQ
0x37 PUSH2 0x176
0x3a JUMPI
---
0x31: V19 = 0x2033d3a3
0x36: V20 = EQ 0x2033d3a3 V12
0x37: V21 = 0x176
0x3a: JUMPI 0x176 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x19b]
---
0x3b DUP1
0x3c PUSH4 0x410d4fde
0x41 EQ
0x42 PUSH2 0x19b
0x45 JUMPI
---
0x3c: V22 = 0x410d4fde
0x41: V23 = EQ 0x410d4fde V12
0x42: V24 = 0x19b
0x45: JUMPI 0x19b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1bf]
---
0x46 DUP1
0x47 PUSH4 0x41c0e1b5
0x4c EQ
0x4d PUSH2 0x1bf
0x50 JUMPI
---
0x47: V25 = 0x41c0e1b5
0x4c: V26 = EQ 0x41c0e1b5 V12
0x4d: V27 = 0x1bf
0x50: JUMPI 0x1bf V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1d4]
---
0x51 DUP1
0x52 PUSH4 0x61a6c8ec
0x57 EQ
0x58 PUSH2 0x1d4
0x5b JUMPI
---
0x52: V28 = 0x61a6c8ec
0x57: V29 = EQ 0x61a6c8ec V12
0x58: V30 = 0x1d4
0x5b: JUMPI 0x1d4 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1f9]
---
0x5c DUP1
0x5d PUSH4 0x688f7b82
0x62 EQ
0x63 PUSH2 0x1f9
0x66 JUMPI
---
0x5d: V31 = 0x688f7b82
0x62: V32 = EQ 0x688f7b82 V12
0x63: V33 = 0x1f9
0x66: JUMPI 0x1f9 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x22a]
---
0x67 DUP1
0x68 PUSH4 0x837e6db9
0x6d EQ
0x6e PUSH2 0x22a
0x71 JUMPI
---
0x68: V34 = 0x837e6db9
0x6d: V35 = EQ 0x837e6db9 V12
0x6e: V36 = 0x22a
0x71: JUMPI 0x22a V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x24f]
---
0x72 DUP1
0x73 PUSH4 0x8da5cb5b
0x78 EQ
0x79 PUSH2 0x24f
0x7c JUMPI
---
0x73: V37 = 0x8da5cb5b
0x78: V38 = EQ 0x8da5cb5b V12
0x79: V39 = 0x24f
0x7c: JUMPI 0x24f V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x27e]
---
0x7d DUP1
0x7e PUSH4 0x8e49642b
0x83 EQ
0x84 PUSH2 0x27e
0x87 JUMPI
---
0x7e: V40 = 0x8e49642b
0x83: V41 = EQ 0x8e49642b V12
0x84: V42 = 0x27e
0x87: JUMPI 0x27e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2a3]
---
0x88 DUP1
0x89 PUSH4 0x9791e2cf
0x8e EQ
0x8f PUSH2 0x2a3
0x92 JUMPI
---
0x89: V43 = 0x9791e2cf
0x8e: V44 = EQ 0x9791e2cf V12
0x8f: V45 = 0x2a3
0x92: JUMPI 0x2a3 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2bb]
---
0x93 DUP1
0x94 PUSH4 0xa26c3e51
0x99 EQ
0x9a PUSH2 0x2bb
0x9d JUMPI
---
0x94: V46 = 0xa26c3e51
0x99: V47 = EQ 0xa26c3e51 V12
0x9a: V48 = 0x2bb
0x9d: JUMPI 0x2bb V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2e0]
---
0x9e DUP1
0x9f PUSH4 0xd6e2808f
0xa4 EQ
0xa5 PUSH2 0x2e0
0xa8 JUMPI
---
0x9f: V49 = 0xd6e2808f
0xa4: V50 = EQ 0xd6e2808f V12
0xa5: V51 = 0x2e0
0xa8: JUMPI 0x2e0 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x311]
---
0xa9 DUP1
0xaa PUSH4 0xe4e103dc
0xaf EQ
0xb0 PUSH2 0x311
0xb3 JUMPI
---
0xaa: V52 = 0xe4e103dc
0xaf: V53 = EQ 0xe4e103dc V12
0xb0: V54 = 0x311
0xb3: JUMPI 0x311 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x335]
---
0xb4 DUP1
0xb5 PUSH4 0xebfcf311
0xba EQ
0xbb PUSH2 0x335
0xbe JUMPI
---
0xb5: V55 = 0xebfcf311
0xba: V56 = EQ 0xebfcf311 V12
0xbb: V57 = 0x335
0xbe: JUMPI 0x335 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x359]
---
0xbf DUP1
0xc0 PUSH4 0xf2fde38b
0xc5 EQ
0xc6 PUSH2 0x359
0xc9 JUMPI
---
0xc0: V58 = 0xf2fde38b
0xc5: V59 = EQ 0xf2fde38b V12
0xc6: V60 = 0x359
0xc9: JUMPI 0x359 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x37a]
---
0xca DUP1
0xcb PUSH4 0xf8bc1855
0xd0 EQ
0xd1 PUSH2 0x37a
0xd4 JUMPI
---
0xcb: V61 = 0xf8bc1855
0xd0: V62 = EQ 0xf8bc1855 V12
0xd1: V63 = 0x37a
0xd4: JUMPI 0x37a V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xd5]
---
Predecessors: [0x0, 0x25, 0xca]
Successors: [0xd6]
---
0xd5 JUMPDEST
---
0xd5: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0xd5]
Successors: [0x39f]
---
0xd6 JUMPDEST
0xd7 PUSH2 0xde
0xda PUSH2 0x39f
0xdd JUMP
---
0xd6: JUMPDEST 
0xd7: V64 = 0xde
0xda: V65 = 0x39f
0xdd: JUMP 0x39f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0xde
[0xde:0xde]
---
Predecessors: [0x3af, 0x53a, 0x6ab, 0x794, 0x84f, 0x89b]
Successors: [0xdf]
---
0xde JUMPDEST
---
0xde: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xdf
[0xdf:0xe0]
---
Predecessors: [0xde]
Successors: []
---
0xdf JUMPDEST
0xe0 STOP
---
0xdf: JUMPDEST 
0xe0: STOP 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xe1
[0xe1:0xe7]
---
Predecessors: [0xb]
Successors: [0xe8, 0xec]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xe1: JUMPDEST 
0xe2: V66 = CALLVALUE
0xe3: V67 = ISZERO V66
0xe4: V68 = 0xec
0xe7: JUMPI 0xec V67
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xe1]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V69 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0xe1]
Successors: [0x3b1]
---
0xec JUMPDEST
0xed PUSH2 0xf4
0xf0 PUSH2 0x3b1
0xf3 JUMP
---
0xec: JUMPDEST 
0xed: V70 = 0xf4
0xf0: V71 = 0x3b1
0xf3: JUMP 0x3b1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf4]
Exit stack: [V12, 0xf4]

================================

Block 0xf4
[0xf4:0x117]
---
Predecessors: [0x447]
Successors: [0x118]
---
0xf4 JUMPDEST
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 PUSH1 0x20
0xfa DUP1
0xfb DUP3
0xfc MSTORE
0xfd DUP2
0xfe SWAP1
0xff DUP2
0x100 ADD
0x101 DUP4
0x102 DUP2
0x103 DUP2
0x104 MLOAD
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP2
0x10b POP
0x10c DUP1
0x10d MLOAD
0x10e SWAP1
0x10f PUSH1 0x20
0x111 ADD
0x112 SWAP1
0x113 DUP1
0x114 DUP4
0x115 DUP4
0x116 PUSH1 0x0
---
0xf4: JUMPDEST 
0xf5: V72 = 0x40
0xf7: V73 = M[0x40]
0xf8: V74 = 0x20
0xfc: M[V73] = 0x20
0x100: V75 = ADD V73 0x20
0x104: V76 = M[V355]
0x106: M[V75] = V76
0x107: V77 = 0x20
0x109: V78 = ADD 0x20 V75
0x10d: V79 = M[V355]
0x10f: V80 = 0x20
0x111: V81 = ADD 0x20 V355
0x116: V82 = 0x0
---
Entry stack: [V12, 0xf4, V355]
Stack pops: 1
Stack additions: [S0, V73, V73, V78, V81, V79, V79, V78, V81, 0x0]
Exit stack: [V12, 0xf4, V355, V73, V73, V78, V81, V79, V79, V78, V81, 0x0]

================================

Block 0x118
[0x118:0x120]
---
Predecessors: [0xf4, 0x129]
Successors: [0x121, 0x131]
---
0x118 JUMPDEST
0x119 DUP4
0x11a DUP2
0x11b LT
0x11c ISZERO
0x11d PUSH2 0x131
0x120 JUMPI
---
0x118: JUMPDEST 
0x11b: V83 = LT S0 V79
0x11c: V84 = ISZERO V83
0x11d: V85 = 0x131
0x120: JUMPI 0x131 V84
---
Entry stack: [V12, 0xf4, V355, V73, V73, V78, V81, V79, V79, V78, V81, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0xf4, V355, V73, V73, V78, V81, V79, V79, V78, V81, S0]

================================

Block 0x121
[0x121:0x128]
---
Predecessors: [0x118]
Successors: [0x129]
---
0x121 DUP1
0x122 DUP3
0x123 ADD
0x124 MLOAD
0x125 DUP2
0x126 DUP5
0x127 ADD
0x128 MSTORE
---
0x123: V86 = ADD V81 S0
0x124: V87 = M[V86]
0x127: V88 = ADD V78 S0
0x128: M[V88] = V87
---
Entry stack: [V12, 0xf4, V355, V73, V73, V78, V81, V79, V79, V78, V81, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xf4, V355, V73, V73, V78, V81, V79, V79, V78, V81, S0]

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0x121]
Successors: [0x118]
---
0x129 JUMPDEST
0x12a PUSH1 0x20
0x12c ADD
0x12d PUSH2 0x118
0x130 JUMP
---
0x129: JUMPDEST 
0x12a: V89 = 0x20
0x12c: V90 = ADD 0x20 S0
0x12d: V91 = 0x118
0x130: JUMP 0x118
---
Entry stack: [V12, 0xf4, V355, V73, V73, V78, V81, V79, V79, V78, V81, S0]
Stack pops: 1
Stack additions: [V90]
Exit stack: [V12, 0xf4, V355, V73, V73, V78, V81, V79, V79, V78, V81, V90]

================================

Block 0x131
[0x131:0x144]
---
Predecessors: [0x118]
Successors: [0x145, 0x15e]
---
0x131 JUMPDEST
0x132 POP
0x133 POP
0x134 POP
0x135 POP
0x136 SWAP1
0x137 POP
0x138 SWAP1
0x139 DUP2
0x13a ADD
0x13b SWAP1
0x13c PUSH1 0x1f
0x13e AND
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x15e
0x144 JUMPI
---
0x131: JUMPDEST 
0x13a: V92 = ADD V79 V78
0x13c: V93 = 0x1f
0x13e: V94 = AND 0x1f V79
0x140: V95 = ISZERO V94
0x141: V96 = 0x15e
0x144: JUMPI 0x15e V95
---
Entry stack: [V12, 0xf4, V355, V73, V73, V78, V81, V79, V79, V78, V81, S0]
Stack pops: 7
Stack additions: [V92, V94]
Exit stack: [V12, 0xf4, V355, V73, V73, V92, V94]

================================

Block 0x145
[0x145:0x15d]
---
Predecessors: [0x131]
Successors: [0x15e]
---
0x145 DUP1
0x146 DUP3
0x147 SUB
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0x1
0x14c DUP4
0x14d PUSH1 0x20
0x14f SUB
0x150 PUSH2 0x100
0x153 EXP
0x154 SUB
0x155 NOT
0x156 AND
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c SWAP2
0x15d POP
---
0x147: V97 = SUB V92 V94
0x149: V98 = M[V97]
0x14a: V99 = 0x1
0x14d: V100 = 0x20
0x14f: V101 = SUB 0x20 V94
0x150: V102 = 0x100
0x153: V103 = EXP 0x100 V101
0x154: V104 = SUB V103 0x1
0x155: V105 = NOT V104
0x156: V106 = AND V105 V98
0x158: M[V97] = V106
0x159: V107 = 0x20
0x15b: V108 = ADD 0x20 V97
---
Entry stack: [V12, 0xf4, V355, V73, V73, V92, V94]
Stack pops: 2
Stack additions: [V108, S0]
Exit stack: [V12, 0xf4, V355, V73, V73, V108, V94]

================================

Block 0x15e
[0x15e:0x16b]
---
Predecessors: [0x131, 0x145]
Successors: []
---
0x15e JUMPDEST
0x15f POP
0x160 SWAP3
0x161 POP
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x15e: JUMPDEST 
0x164: V109 = 0x40
0x166: V110 = M[0x40]
0x169: V111 = SUB S1 V110
0x16b: RETURN V110 V111
---
Entry stack: [V12, 0xf4, V355, V73, V73, S1, V94]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0xf4]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: []
Successors: [0x39f]
---
0x16c JUMPDEST
0x16d PUSH2 0xde
0x170 PUSH2 0x39f
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V112 = 0xde
0x170: V113 = 0x39f
0x173: JUMP 0x39f
---
Entry stack: []
Stack pops: 0
Stack additions: [0xde]
Exit stack: [0xde]

================================

Block 0x174
[0x174:0x175]
---
Predecessors: []
Successors: []
---
0x174 JUMPDEST
0x175 STOP
---
0x174: JUMPDEST 
0x175: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x30]
Successors: [0x17d, 0x181]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x176: JUMPDEST 
0x177: V114 = CALLVALUE
0x178: V115 = ISZERO V114
0x179: V116 = 0x181
0x17c: JUMPI 0x181 V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x176]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V117 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x181
[0x181:0x188]
---
Predecessors: [0x176]
Successors: [0x44f]
---
0x181 JUMPDEST
0x182 PUSH2 0x189
0x185 PUSH2 0x44f
0x188 JUMP
---
0x181: JUMPDEST 
0x182: V118 = 0x189
0x185: V119 = 0x44f
0x188: JUMP 0x44f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x189
[0x189:0x19a]
---
Predecessors: [0x44f, 0x56d, 0x58d, 0x592, 0x5a6, 0x6ae, 0x6d2, 0x89e]
Successors: []
---
0x189 JUMPDEST
0x18a PUSH1 0x40
0x18c MLOAD
0x18d SWAP1
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 SWAP2
0x198 SUB
0x199 SWAP1
0x19a RETURN
---
0x189: JUMPDEST 
0x18a: V120 = 0x40
0x18c: V121 = M[0x40]
0x18f: M[V121] = S0
0x190: V122 = 0x20
0x192: V123 = ADD 0x20 V121
0x193: V124 = 0x40
0x195: V125 = M[0x40]
0x198: V126 = SUB V123 V125
0x19a: RETURN V125 V126
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x19b
[0x19b:0x1a1]
---
Predecessors: [0x3b]
Successors: [0x1a2, 0x1a6]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d ISZERO
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x19b: JUMPDEST 
0x19c: V127 = CALLVALUE
0x19d: V128 = ISZERO V127
0x19e: V129 = 0x1a6
0x1a1: JUMPI 0x1a6 V128
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x19b]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V130 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a6
[0x1a6:0x1bc]
---
Predecessors: [0x19b]
Successors: [0x454]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0xde
0x1aa PUSH1 0x1
0x1ac PUSH1 0xa0
0x1ae PUSH1 0x2
0x1b0 EXP
0x1b1 SUB
0x1b2 PUSH1 0x4
0x1b4 CALLDATALOAD
0x1b5 AND
0x1b6 PUSH1 0x24
0x1b8 CALLDATALOAD
0x1b9 PUSH2 0x454
0x1bc JUMP
---
0x1a6: JUMPDEST 
0x1a7: V131 = 0xde
0x1aa: V132 = 0x1
0x1ac: V133 = 0xa0
0x1ae: V134 = 0x2
0x1b0: V135 = EXP 0x2 0xa0
0x1b1: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b2: V137 = 0x4
0x1b4: V138 = CALLDATALOAD 0x4
0x1b5: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V140 = 0x24
0x1b8: V141 = CALLDATALOAD 0x24
0x1b9: V142 = 0x454
0x1bc: JUMP 0x454
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde, V139, V141]
Exit stack: [V12, 0xde, V139, V141]

================================

Block 0x1bd
[0x1bd:0x1be]
---
Predecessors: []
Successors: []
---
0x1bd JUMPDEST
0x1be STOP
---
0x1bd: JUMPDEST 
0x1be: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bf
[0x1bf:0x1c5]
---
Predecessors: [0x46]
Successors: [0x1c6, 0x1ca]
---
0x1bf JUMPDEST
0x1c0 CALLVALUE
0x1c1 ISZERO
0x1c2 PUSH2 0x1ca
0x1c5 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V143 = CALLVALUE
0x1c1: V144 = ISZERO V143
0x1c2: V145 = 0x1ca
0x1c5: JUMPI 0x1ca V144
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0x1bf]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
---
0x1c6: V146 = 0x0
0x1c9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ca
[0x1ca:0x1d1]
---
Predecessors: [0x1bf]
Successors: [0x541]
---
0x1ca JUMPDEST
0x1cb PUSH2 0xde
0x1ce PUSH2 0x541
0x1d1 JUMP
---
0x1ca: JUMPDEST 
0x1cb: V147 = 0xde
0x1ce: V148 = 0x541
0x1d1: JUMP 0x541
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0x1d2
[0x1d2:0x1d3]
---
Predecessors: []
Successors: []
---
0x1d2 JUMPDEST
0x1d3 STOP
---
0x1d2: JUMPDEST 
0x1d3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d4
[0x1d4:0x1da]
---
Predecessors: [0x51]
Successors: [0x1db, 0x1df]
---
0x1d4 JUMPDEST
0x1d5 CALLVALUE
0x1d6 ISZERO
0x1d7 PUSH2 0x1df
0x1da JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V149 = CALLVALUE
0x1d6: V150 = ISZERO V149
0x1d7: V151 = 0x1df
0x1da: JUMPI 0x1df V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1db
[0x1db:0x1de]
---
Predecessors: [0x1d4]
Successors: []
---
0x1db PUSH1 0x0
0x1dd DUP1
0x1de REVERT
---
0x1db: V152 = 0x0
0x1de: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1df
[0x1df:0x1e6]
---
Predecessors: [0x1d4]
Successors: [0x56d]
---
0x1df JUMPDEST
0x1e0 PUSH2 0x189
0x1e3 PUSH2 0x56d
0x1e6 JUMP
---
0x1df: JUMPDEST 
0x1e0: V153 = 0x189
0x1e3: V154 = 0x56d
0x1e6: JUMP 0x56d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x1e7
[0x1e7:0x1f8]
---
Predecessors: []
Successors: []
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb SWAP1
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 SWAP2
0x1f6 SUB
0x1f7 SWAP1
0x1f8 RETURN
---
0x1e7: JUMPDEST 
0x1e8: V155 = 0x40
0x1ea: V156 = M[0x40]
0x1ed: M[V156] = S0
0x1ee: V157 = 0x20
0x1f0: V158 = ADD 0x20 V156
0x1f1: V159 = 0x40
0x1f3: V160 = M[0x40]
0x1f6: V161 = SUB V158 V160
0x1f8: RETURN V160 V161
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f9
[0x1f9:0x1ff]
---
Predecessors: [0x5c]
Successors: [0x200, 0x204]
---
0x1f9 JUMPDEST
0x1fa CALLVALUE
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V162 = CALLVALUE
0x1fb: V163 = ISZERO V162
0x1fc: V164 = 0x204
0x1ff: JUMPI 0x204 V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1f9]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V165 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x204
[0x204:0x217]
---
Predecessors: [0x1f9]
Successors: [0x573]
---
0x204 JUMPDEST
0x205 PUSH2 0x189
0x208 PUSH1 0x1
0x20a PUSH1 0xa0
0x20c PUSH1 0x2
0x20e EXP
0x20f SUB
0x210 PUSH1 0x4
0x212 CALLDATALOAD
0x213 AND
0x214 PUSH2 0x573
0x217 JUMP
---
0x204: JUMPDEST 
0x205: V166 = 0x189
0x208: V167 = 0x1
0x20a: V168 = 0xa0
0x20c: V169 = 0x2
0x20e: V170 = EXP 0x2 0xa0
0x20f: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V172 = 0x4
0x212: V173 = CALLDATALOAD 0x4
0x213: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x214: V175 = 0x573
0x217: JUMP 0x573
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189, V174]
Exit stack: [V12, 0x189, V174]

================================

Block 0x218
[0x218:0x229]
---
Predecessors: []
Successors: []
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c SWAP1
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 SWAP2
0x227 SUB
0x228 SWAP1
0x229 RETURN
---
0x218: JUMPDEST 
0x219: V176 = 0x40
0x21b: V177 = M[0x40]
0x21e: M[V177] = S0
0x21f: V178 = 0x20
0x221: V179 = ADD 0x20 V177
0x222: V180 = 0x40
0x224: V181 = M[0x40]
0x227: V182 = SUB V179 V181
0x229: RETURN V181 V182
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x67]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V183 = CALLVALUE
0x22c: V184 = ISZERO V183
0x22d: V185 = 0x235
0x230: JUMPI 0x235 V184
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V186 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x235
[0x235:0x23c]
---
Predecessors: [0x22a]
Successors: [0x592]
---
0x235 JUMPDEST
0x236 PUSH2 0x189
0x239 PUSH2 0x592
0x23c JUMP
---
0x235: JUMPDEST 
0x236: V187 = 0x189
0x239: V188 = 0x592
0x23c: JUMP 0x592
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x23d
[0x23d:0x24e]
---
Predecessors: []
Successors: []
---
0x23d JUMPDEST
0x23e PUSH1 0x40
0x240 MLOAD
0x241 SWAP1
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x20
0x246 ADD
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b SWAP2
0x24c SUB
0x24d SWAP1
0x24e RETURN
---
0x23d: JUMPDEST 
0x23e: V189 = 0x40
0x240: V190 = M[0x40]
0x243: M[V190] = S0
0x244: V191 = 0x20
0x246: V192 = ADD 0x20 V190
0x247: V193 = 0x40
0x249: V194 = M[0x40]
0x24c: V195 = SUB V192 V194
0x24e: RETURN V194 V195
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x24f
[0x24f:0x255]
---
Predecessors: [0x72]
Successors: [0x256, 0x25a]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24f: JUMPDEST 
0x250: V196 = CALLVALUE
0x251: V197 = ISZERO V196
0x252: V198 = 0x25a
0x255: JUMPI 0x25a V197
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24f]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V199 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25a
[0x25a:0x261]
---
Predecessors: [0x24f]
Successors: [0x597]
---
0x25a JUMPDEST
0x25b PUSH2 0x262
0x25e PUSH2 0x597
0x261 JUMP
---
0x25a: JUMPDEST 
0x25b: V200 = 0x262
0x25e: V201 = 0x597
0x261: JUMP 0x597
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x262]
Exit stack: [V12, 0x262]

================================

Block 0x262
[0x262:0x27d]
---
Predecessors: [0x597]
Successors: []
---
0x262 JUMPDEST
0x263 PUSH1 0x40
0x265 MLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e SWAP1
0x26f SWAP2
0x270 AND
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x20
0x275 ADD
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a SWAP2
0x27b SUB
0x27c SWAP1
0x27d RETURN
---
0x262: JUMPDEST 
0x263: V202 = 0x40
0x265: V203 = M[0x40]
0x266: V204 = 0x1
0x268: V205 = 0xa0
0x26a: V206 = 0x2
0x26c: V207 = EXP 0x2 0xa0
0x26d: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V209 = AND V515 0xffffffffffffffffffffffffffffffffffffffff
0x272: M[V203] = V209
0x273: V210 = 0x20
0x275: V211 = ADD 0x20 V203
0x276: V212 = 0x40
0x278: V213 = M[0x40]
0x27b: V214 = SUB V211 V213
0x27d: RETURN V213 V214
---
Entry stack: [V12, 0x262, V515]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x262]

================================

Block 0x27e
[0x27e:0x284]
---
Predecessors: [0x7d]
Successors: [0x285, 0x289]
---
0x27e JUMPDEST
0x27f CALLVALUE
0x280 ISZERO
0x281 PUSH2 0x289
0x284 JUMPI
---
0x27e: JUMPDEST 
0x27f: V215 = CALLVALUE
0x280: V216 = ISZERO V215
0x281: V217 = 0x289
0x284: JUMPI 0x289 V216
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x27e]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V218 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0x27e]
Successors: [0x5a6]
---
0x289 JUMPDEST
0x28a PUSH2 0x189
0x28d PUSH2 0x5a6
0x290 JUMP
---
0x289: JUMPDEST 
0x28a: V219 = 0x189
0x28d: V220 = 0x5a6
0x290: JUMP 0x5a6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x291
[0x291:0x2a2]
---
Predecessors: []
Successors: []
---
0x291 JUMPDEST
0x292 PUSH1 0x40
0x294 MLOAD
0x295 SWAP1
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x291: JUMPDEST 
0x292: V221 = 0x40
0x294: V222 = M[0x40]
0x297: M[V222] = S0
0x298: V223 = 0x20
0x29a: V224 = ADD 0x20 V222
0x29b: V225 = 0x40
0x29d: V226 = M[0x40]
0x2a0: V227 = SUB V224 V226
0x2a2: RETURN V226 V227
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a3
[0x2a3:0x2a9]
---
Predecessors: [0x88]
Successors: [0x2aa, 0x2ae]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V228 = CALLVALUE
0x2a5: V229 = ISZERO V228
0x2a6: V230 = 0x2ae
0x2a9: JUMPI 0x2ae V229
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x2a3]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V231 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ae
[0x2ae:0x2b8]
---
Predecessors: [0x2a3]
Successors: [0x5b1]
---
0x2ae JUMPDEST
0x2af PUSH2 0xde
0x2b2 PUSH1 0x4
0x2b4 CALLDATALOAD
0x2b5 PUSH2 0x5b1
0x2b8 JUMP
---
0x2ae: JUMPDEST 
0x2af: V232 = 0xde
0x2b2: V233 = 0x4
0x2b4: V234 = CALLDATALOAD 0x4
0x2b5: V235 = 0x5b1
0x2b8: JUMP 0x5b1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde, V234]
Exit stack: [V12, 0xde, V234]

================================

Block 0x2b9
[0x2b9:0x2ba]
---
Predecessors: []
Successors: []
---
0x2b9 JUMPDEST
0x2ba STOP
---
0x2b9: JUMPDEST 
0x2ba: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2bb
[0x2bb:0x2c1]
---
Predecessors: [0x93]
Successors: [0x2c2, 0x2c6]
---
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd ISZERO
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V236 = CALLVALUE
0x2bd: V237 = ISZERO V236
0x2be: V238 = 0x2c6
0x2c1: JUMPI 0x2c6 V237
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V239 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c6
[0x2c6:0x2cd]
---
Predecessors: [0x2bb]
Successors: [0x6ae]
---
0x2c6 JUMPDEST
0x2c7 PUSH2 0x189
0x2ca PUSH2 0x6ae
0x2cd JUMP
---
0x2c6: JUMPDEST 
0x2c7: V240 = 0x189
0x2ca: V241 = 0x6ae
0x2cd: JUMP 0x6ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x2ce
[0x2ce:0x2df]
---
Predecessors: []
Successors: []
---
0x2ce JUMPDEST
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 SWAP1
0x2d3 DUP2
0x2d4 MSTORE
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc SWAP2
0x2dd SUB
0x2de SWAP1
0x2df RETURN
---
0x2ce: JUMPDEST 
0x2cf: V242 = 0x40
0x2d1: V243 = M[0x40]
0x2d4: M[V243] = S0
0x2d5: V244 = 0x20
0x2d7: V245 = ADD 0x20 V243
0x2d8: V246 = 0x40
0x2da: V247 = M[0x40]
0x2dd: V248 = SUB V245 V247
0x2df: RETURN V247 V248
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e0
[0x2e0:0x2e6]
---
Predecessors: [0x9e]
Successors: [0x2e7, 0x2eb]
---
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V249 = CALLVALUE
0x2e2: V250 = ISZERO V249
0x2e3: V251 = 0x2eb
0x2e6: JUMPI 0x2eb V250
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2e0]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V252 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2eb
[0x2eb:0x2fe]
---
Predecessors: [0x2e0]
Successors: [0x6b8]
---
0x2eb JUMPDEST
0x2ec PUSH2 0x189
0x2ef PUSH1 0x1
0x2f1 PUSH1 0xa0
0x2f3 PUSH1 0x2
0x2f5 EXP
0x2f6 SUB
0x2f7 PUSH1 0x4
0x2f9 CALLDATALOAD
0x2fa AND
0x2fb PUSH2 0x6b8
0x2fe JUMP
---
0x2eb: JUMPDEST 
0x2ec: V253 = 0x189
0x2ef: V254 = 0x1
0x2f1: V255 = 0xa0
0x2f3: V256 = 0x2
0x2f5: V257 = EXP 0x2 0xa0
0x2f6: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V259 = 0x4
0x2f9: V260 = CALLDATALOAD 0x4
0x2fa: V261 = AND V260 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V262 = 0x6b8
0x2fe: JUMP 0x6b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189, V261]
Exit stack: [V12, 0x189, V261]

================================

Block 0x2ff
[0x2ff:0x310]
---
Predecessors: []
Successors: []
---
0x2ff JUMPDEST
0x300 PUSH1 0x40
0x302 MLOAD
0x303 SWAP1
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x20
0x308 ADD
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d SWAP2
0x30e SUB
0x30f SWAP1
0x310 RETURN
---
0x2ff: JUMPDEST 
0x300: V263 = 0x40
0x302: V264 = M[0x40]
0x305: M[V264] = S0
0x306: V265 = 0x20
0x308: V266 = ADD 0x20 V264
0x309: V267 = 0x40
0x30b: V268 = M[0x40]
0x30e: V269 = SUB V266 V268
0x310: RETURN V268 V269
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x311
[0x311:0x317]
---
Predecessors: [0xa9]
Successors: [0x318, 0x31c]
---
0x311 JUMPDEST
0x312 CALLVALUE
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x311: JUMPDEST 
0x312: V270 = CALLVALUE
0x313: V271 = ISZERO V270
0x314: V272 = 0x31c
0x317: JUMPI 0x31c V271
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x311]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V273 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31c
[0x31c:0x332]
---
Predecessors: [0x311]
Successors: [0x6d7]
---
0x31c JUMPDEST
0x31d PUSH2 0xde
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 PUSH1 0x4
0x32a CALLDATALOAD
0x32b AND
0x32c PUSH1 0x24
0x32e CALLDATALOAD
0x32f PUSH2 0x6d7
0x332 JUMP
---
0x31c: JUMPDEST 
0x31d: V274 = 0xde
0x320: V275 = 0x1
0x322: V276 = 0xa0
0x324: V277 = 0x2
0x326: V278 = EXP 0x2 0xa0
0x327: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V280 = 0x4
0x32a: V281 = CALLDATALOAD 0x4
0x32b: V282 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V283 = 0x24
0x32e: V284 = CALLDATALOAD 0x24
0x32f: V285 = 0x6d7
0x332: JUMP 0x6d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde, V282, V284]
Exit stack: [V12, 0xde, V282, V284]

================================

Block 0x333
[0x333:0x334]
---
Predecessors: []
Successors: []
---
0x333 JUMPDEST
0x334 STOP
---
0x333: JUMPDEST 
0x334: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x335
[0x335:0x33b]
---
Predecessors: [0xb4]
Successors: [0x33c, 0x340]
---
0x335 JUMPDEST
0x336 CALLVALUE
0x337 ISZERO
0x338 PUSH2 0x340
0x33b JUMPI
---
0x335: JUMPDEST 
0x336: V286 = CALLVALUE
0x337: V287 = ISZERO V286
0x338: V288 = 0x340
0x33b: JUMPI 0x340 V287
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x335]
Successors: []
---
0x33c PUSH1 0x0
0x33e DUP1
0x33f REVERT
---
0x33c: V289 = 0x0
0x33f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x340
[0x340:0x356]
---
Predecessors: [0x335]
Successors: [0x799]
---
0x340 JUMPDEST
0x341 PUSH2 0xde
0x344 PUSH1 0x1
0x346 PUSH1 0xa0
0x348 PUSH1 0x2
0x34a EXP
0x34b SUB
0x34c PUSH1 0x4
0x34e CALLDATALOAD
0x34f AND
0x350 PUSH1 0x24
0x352 CALLDATALOAD
0x353 PUSH2 0x799
0x356 JUMP
---
0x340: JUMPDEST 
0x341: V290 = 0xde
0x344: V291 = 0x1
0x346: V292 = 0xa0
0x348: V293 = 0x2
0x34a: V294 = EXP 0x2 0xa0
0x34b: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V296 = 0x4
0x34e: V297 = CALLDATALOAD 0x4
0x34f: V298 = AND V297 0xffffffffffffffffffffffffffffffffffffffff
0x350: V299 = 0x24
0x352: V300 = CALLDATALOAD 0x24
0x353: V301 = 0x799
0x356: JUMP 0x799
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde, V298, V300]
Exit stack: [V12, 0xde, V298, V300]

================================

Block 0x357
[0x357:0x358]
---
Predecessors: []
Successors: []
---
0x357 JUMPDEST
0x358 STOP
---
0x357: JUMPDEST 
0x358: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x359
[0x359:0x35f]
---
Predecessors: [0xbf]
Successors: [0x360, 0x364]
---
0x359 JUMPDEST
0x35a CALLVALUE
0x35b ISZERO
0x35c PUSH2 0x364
0x35f JUMPI
---
0x359: JUMPDEST 
0x35a: V302 = CALLVALUE
0x35b: V303 = ISZERO V302
0x35c: V304 = 0x364
0x35f: JUMPI 0x364 V303
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x360
[0x360:0x363]
---
Predecessors: [0x359]
Successors: []
---
0x360 PUSH1 0x0
0x362 DUP1
0x363 REVERT
---
0x360: V305 = 0x0
0x363: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x364
[0x364:0x377]
---
Predecessors: [0x359]
Successors: [0x853]
---
0x364 JUMPDEST
0x365 PUSH2 0xde
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 PUSH1 0x4
0x372 CALLDATALOAD
0x373 AND
0x374 PUSH2 0x853
0x377 JUMP
---
0x364: JUMPDEST 
0x365: V306 = 0xde
0x368: V307 = 0x1
0x36a: V308 = 0xa0
0x36c: V309 = 0x2
0x36e: V310 = EXP 0x2 0xa0
0x36f: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x370: V312 = 0x4
0x372: V313 = CALLDATALOAD 0x4
0x373: V314 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x374: V315 = 0x853
0x377: JUMP 0x853
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde, V314]
Exit stack: [V12, 0xde, V314]

================================

Block 0x378
[0x378:0x379]
---
Predecessors: []
Successors: []
---
0x378 JUMPDEST
0x379 STOP
---
0x378: JUMPDEST 
0x379: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x37a
[0x37a:0x380]
---
Predecessors: [0xca]
Successors: [0x381, 0x385]
---
0x37a JUMPDEST
0x37b CALLVALUE
0x37c ISZERO
0x37d PUSH2 0x385
0x380 JUMPI
---
0x37a: JUMPDEST 
0x37b: V316 = CALLVALUE
0x37c: V317 = ISZERO V316
0x37d: V318 = 0x385
0x380: JUMPI 0x385 V317
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x381
[0x381:0x384]
---
Predecessors: [0x37a]
Successors: []
---
0x381 PUSH1 0x0
0x383 DUP1
0x384 REVERT
---
0x381: V319 = 0x0
0x384: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x385
[0x385:0x38c]
---
Predecessors: [0x37a]
Successors: [0x89e]
---
0x385 JUMPDEST
0x386 PUSH2 0x189
0x389 PUSH2 0x89e
0x38c JUMP
---
0x385: JUMPDEST 
0x386: V320 = 0x189
0x389: V321 = 0x89e
0x38c: JUMP 0x89e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x38d
[0x38d:0x39e]
---
Predecessors: []
Successors: []
---
0x38d JUMPDEST
0x38e PUSH1 0x40
0x390 MLOAD
0x391 SWAP1
0x392 DUP2
0x393 MSTORE
0x394 PUSH1 0x20
0x396 ADD
0x397 PUSH1 0x40
0x399 MLOAD
0x39a DUP1
0x39b SWAP2
0x39c SUB
0x39d SWAP1
0x39e RETURN
---
0x38d: JUMPDEST 
0x38e: V322 = 0x40
0x390: V323 = M[0x40]
0x393: M[V323] = S0
0x394: V324 = 0x20
0x396: V325 = ADD 0x20 V323
0x397: V326 = 0x40
0x399: V327 = M[0x40]
0x39c: V328 = SUB V325 V327
0x39e: RETURN V327 V328
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x39f
[0x39f:0x3aa]
---
Predecessors: [0xd6, 0x16c]
Successors: [0x8aa]
---
0x39f JUMPDEST
0x3a0 PUSH2 0x3ab
0x3a3 PUSH1 0x2
0x3a5 SLOAD
0x3a6 CALLVALUE
0x3a7 PUSH2 0x8aa
0x3aa JUMP
---
0x39f: JUMPDEST 
0x3a0: V329 = 0x3ab
0x3a3: V330 = 0x2
0x3a5: V331 = S[0x2]
0x3a6: V332 = CALLVALUE
0x3a7: V333 = 0x8aa
0x3aa: JUMP 0x8aa
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: [0x3ab, V331, V332]
Exit stack: [V12, 0xde, 0x3ab, V331, V332]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x8cb]
Successors: [0x3af]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x2
0x3ae SSTORE
---
0x3ab: JUMPDEST 
0x3ac: V334 = 0x2
0x3ae: S[0x2] = S0
---
Entry stack: [V12, 0xde, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde, S5, S4, S3, S2, S1]

================================

Block 0x3af
[0x3af:0x3b0]
---
Predecessors: [0x3ab]
Successors: [0xde]
---
0x3af JUMPDEST
0x3b0 JUMP
---
0x3af: JUMPDEST 
0x3b0: JUMP S0
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde, S4, S3, S2, S1]

================================

Block 0x3b1
[0x3b1:0x400]
---
Predecessors: [0xec]
Successors: [0x401, 0x447]
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x1
0x3b4 DUP1
0x3b5 SLOAD
0x3b6 PUSH1 0x1
0x3b8 DUP2
0x3b9 PUSH1 0x1
0x3bb AND
0x3bc ISZERO
0x3bd PUSH2 0x100
0x3c0 MUL
0x3c1 SUB
0x3c2 AND
0x3c3 PUSH1 0x2
0x3c5 SWAP1
0x3c6 DIV
0x3c7 DUP1
0x3c8 PUSH1 0x1f
0x3ca ADD
0x3cb PUSH1 0x20
0x3cd DUP1
0x3ce SWAP2
0x3cf DIV
0x3d0 MUL
0x3d1 PUSH1 0x20
0x3d3 ADD
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 SWAP1
0x3d8 DUP2
0x3d9 ADD
0x3da PUSH1 0x40
0x3dc MSTORE
0x3dd DUP1
0x3de SWAP3
0x3df SWAP2
0x3e0 SWAP1
0x3e1 DUP2
0x3e2 DUP2
0x3e3 MSTORE
0x3e4 PUSH1 0x20
0x3e6 ADD
0x3e7 DUP3
0x3e8 DUP1
0x3e9 SLOAD
0x3ea PUSH1 0x1
0x3ec DUP2
0x3ed PUSH1 0x1
0x3ef AND
0x3f0 ISZERO
0x3f1 PUSH2 0x100
0x3f4 MUL
0x3f5 SUB
0x3f6 AND
0x3f7 PUSH1 0x2
0x3f9 SWAP1
0x3fa DIV
0x3fb DUP1
0x3fc ISZERO
0x3fd PUSH2 0x447
0x400 JUMPI
---
0x3b1: JUMPDEST 
0x3b2: V335 = 0x1
0x3b5: V336 = S[0x1]
0x3b6: V337 = 0x1
0x3b9: V338 = 0x1
0x3bb: V339 = AND 0x1 V336
0x3bc: V340 = ISZERO V339
0x3bd: V341 = 0x100
0x3c0: V342 = MUL 0x100 V340
0x3c1: V343 = SUB V342 0x1
0x3c2: V344 = AND V343 V336
0x3c3: V345 = 0x2
0x3c6: V346 = DIV V344 0x2
0x3c8: V347 = 0x1f
0x3ca: V348 = ADD 0x1f V346
0x3cb: V349 = 0x20
0x3cf: V350 = DIV V348 0x20
0x3d0: V351 = MUL V350 0x20
0x3d1: V352 = 0x20
0x3d3: V353 = ADD 0x20 V351
0x3d4: V354 = 0x40
0x3d6: V355 = M[0x40]
0x3d9: V356 = ADD V355 V353
0x3da: V357 = 0x40
0x3dc: M[0x40] = V356
0x3e3: M[V355] = V346
0x3e4: V358 = 0x20
0x3e6: V359 = ADD 0x20 V355
0x3e9: V360 = S[0x1]
0x3ea: V361 = 0x1
0x3ed: V362 = 0x1
0x3ef: V363 = AND 0x1 V360
0x3f0: V364 = ISZERO V363
0x3f1: V365 = 0x100
0x3f4: V366 = MUL 0x100 V364
0x3f5: V367 = SUB V366 0x1
0x3f6: V368 = AND V367 V360
0x3f7: V369 = 0x2
0x3fa: V370 = DIV V368 0x2
0x3fc: V371 = ISZERO V370
0x3fd: V372 = 0x447
0x400: JUMPI 0x447 V371
---
Entry stack: [V12, 0xf4]
Stack pops: 0
Stack additions: [V355, 0x1, V346, V359, 0x1, V370]
Exit stack: [V12, 0xf4, V355, 0x1, V346, V359, 0x1, V370]

================================

Block 0x401
[0x401:0x408]
---
Predecessors: [0x3b1]
Successors: [0x409, 0x41c]
---
0x401 DUP1
0x402 PUSH1 0x1f
0x404 LT
0x405 PUSH2 0x41c
0x408 JUMPI
---
0x402: V373 = 0x1f
0x404: V374 = LT 0x1f V370
0x405: V375 = 0x41c
0x408: JUMPI 0x41c V374
---
Entry stack: [V12, 0xf4, V355, 0x1, V346, V359, 0x1, V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf4, V355, 0x1, V346, V359, 0x1, V370]

================================

Block 0x409
[0x409:0x41b]
---
Predecessors: [0x401]
Successors: [0x447]
---
0x409 PUSH2 0x100
0x40c DUP1
0x40d DUP4
0x40e SLOAD
0x40f DIV
0x410 MUL
0x411 DUP4
0x412 MSTORE
0x413 SWAP2
0x414 PUSH1 0x20
0x416 ADD
0x417 SWAP2
0x418 PUSH2 0x447
0x41b JUMP
---
0x409: V376 = 0x100
0x40e: V377 = S[0x1]
0x40f: V378 = DIV V377 0x100
0x410: V379 = MUL V378 0x100
0x412: M[V359] = V379
0x414: V380 = 0x20
0x416: V381 = ADD 0x20 V359
0x418: V382 = 0x447
0x41b: JUMP 0x447
---
Entry stack: [V12, 0xf4, V355, 0x1, V346, V359, 0x1, V370]
Stack pops: 3
Stack additions: [V381, S1, S0]
Exit stack: [V12, 0xf4, V355, 0x1, V346, V381, 0x1, V370]

================================

Block 0x41c
[0x41c:0x429]
---
Predecessors: [0x401]
Successors: [0x42a]
---
0x41c JUMPDEST
0x41d DUP3
0x41e ADD
0x41f SWAP2
0x420 SWAP1
0x421 PUSH1 0x0
0x423 MSTORE
0x424 PUSH1 0x20
0x426 PUSH1 0x0
0x428 SHA3
0x429 SWAP1
---
0x41c: JUMPDEST 
0x41e: V383 = ADD V359 V370
0x421: V384 = 0x0
0x423: M[0x0] = 0x1
0x424: V385 = 0x20
0x426: V386 = 0x0
0x428: V387 = SHA3 0x0 0x20
---
Entry stack: [V12, 0xf4, V355, 0x1, V346, V359, 0x1, V370]
Stack pops: 3
Stack additions: [V383, V387, S2]
Exit stack: [V12, 0xf4, V355, 0x1, V346, V383, V387, V359]

================================

Block 0x42a
[0x42a:0x43d]
---
Predecessors: [0x41c, 0x42a]
Successors: [0x42a, 0x43e]
---
0x42a JUMPDEST
0x42b DUP2
0x42c SLOAD
0x42d DUP2
0x42e MSTORE
0x42f SWAP1
0x430 PUSH1 0x1
0x432 ADD
0x433 SWAP1
0x434 PUSH1 0x20
0x436 ADD
0x437 DUP1
0x438 DUP4
0x439 GT
0x43a PUSH2 0x42a
0x43d JUMPI
---
0x42a: JUMPDEST 
0x42c: V388 = S[S1]
0x42e: M[S0] = V388
0x430: V389 = 0x1
0x432: V390 = ADD 0x1 S1
0x434: V391 = 0x20
0x436: V392 = ADD 0x20 S0
0x439: V393 = GT V383 V392
0x43a: V394 = 0x42a
0x43d: JUMPI 0x42a V393
---
Entry stack: [V12, 0xf4, V355, 0x1, V346, V383, S1, S0]
Stack pops: 3
Stack additions: [S2, V390, V392]
Exit stack: [V12, 0xf4, V355, 0x1, V346, V383, V390, V392]

================================

Block 0x43e
[0x43e:0x446]
---
Predecessors: [0x42a]
Successors: [0x447]
---
0x43e DUP3
0x43f SWAP1
0x440 SUB
0x441 PUSH1 0x1f
0x443 AND
0x444 DUP3
0x445 ADD
0x446 SWAP2
---
0x440: V395 = SUB V392 V383
0x441: V396 = 0x1f
0x443: V397 = AND 0x1f V395
0x445: V398 = ADD V383 V397
---
Entry stack: [V12, 0xf4, V355, 0x1, V346, V383, V390, V392]
Stack pops: 3
Stack additions: [V398, S1, S2]
Exit stack: [V12, 0xf4, V355, 0x1, V346, V398, V390, V383]

================================

Block 0x447
[0x447:0x44e]
---
Predecessors: [0x3b1, 0x409, 0x43e]
Successors: [0xf4]
---
0x447 JUMPDEST
0x448 POP
0x449 POP
0x44a POP
0x44b POP
0x44c POP
0x44d DUP2
0x44e JUMP
---
0x447: JUMPDEST 
0x44e: JUMP 0xf4
---
Entry stack: [V12, 0xf4, V355, 0x1, V346, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0xf4, V355]

================================

Block 0x44f
[0x44f:0x453]
---
Predecessors: [0x181]
Successors: [0x189]
---
0x44f JUMPDEST
0x450 PUSH1 0x5
0x452 DUP2
0x453 JUMP
---
0x44f: JUMPDEST 
0x450: V399 = 0x5
0x453: JUMP 0x189
---
Entry stack: [V12, 0x189]
Stack pops: 1
Stack additions: [S0, 0x5]
Exit stack: [V12, 0x189, 0x5]

================================

Block 0x454
[0x454:0x47a]
---
Predecessors: [0x1a6]
Successors: [0x47b, 0x47f]
---
0x454 JUMPDEST
0x455 CALLER
0x456 PUSH1 0x1
0x458 PUSH1 0xa0
0x45a PUSH1 0x2
0x45c EXP
0x45d SUB
0x45e DUP2
0x45f AND
0x460 PUSH1 0x0
0x462 SWAP1
0x463 DUP2
0x464 MSTORE
0x465 PUSH1 0x3
0x467 PUSH1 0x20
0x469 MSTORE
0x46a PUSH1 0x40
0x46c SWAP1
0x46d SHA3
0x46e SLOAD
0x46f DUP4
0x470 SWAP1
0x471 DUP4
0x472 SWAP1
0x473 DUP2
0x474 SWAP1
0x475 LT
0x476 ISZERO
0x477 PUSH2 0x47f
0x47a JUMPI
---
0x454: JUMPDEST 
0x455: V400 = CALLER
0x456: V401 = 0x1
0x458: V402 = 0xa0
0x45a: V403 = 0x2
0x45c: V404 = EXP 0x2 0xa0
0x45d: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45f: V406 = AND V400 0xffffffffffffffffffffffffffffffffffffffff
0x460: V407 = 0x0
0x464: M[0x0] = V406
0x465: V408 = 0x3
0x467: V409 = 0x20
0x469: M[0x20] = 0x3
0x46a: V410 = 0x40
0x46d: V411 = SHA3 0x0 0x40
0x46e: V412 = S[V411]
0x475: V413 = LT V412 V141
0x476: V414 = ISZERO V413
0x477: V415 = 0x47f
0x47a: JUMPI 0x47f V414
---
Entry stack: [V12, 0xde, V139, V141]
Stack pops: 2
Stack additions: [S1, S0, V400, S1, S0]
Exit stack: [V12, 0xde, V139, V141, V400, V139, V141]

================================

Block 0x47b
[0x47b:0x47e]
---
Predecessors: [0x454]
Successors: []
---
0x47b PUSH1 0x0
0x47d DUP1
0x47e REVERT
---
0x47b: V416 = 0x0
0x47e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V139, V141, V400, V139, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V139, V141, V400, V139, V141]

================================

Block 0x47f
[0x47f:0x4a1]
---
Predecessors: [0x454]
Successors: [0x8d2]
---
0x47f JUMPDEST
0x480 PUSH1 0x1
0x482 PUSH1 0xa0
0x484 PUSH1 0x2
0x486 EXP
0x487 SUB
0x488 CALLER
0x489 AND
0x48a PUSH1 0x0
0x48c SWAP1
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x3
0x491 PUSH1 0x20
0x493 MSTORE
0x494 PUSH1 0x40
0x496 SWAP1
0x497 SHA3
0x498 SLOAD
0x499 PUSH2 0x4a2
0x49c SWAP1
0x49d DUP6
0x49e PUSH2 0x8d2
0x4a1 JUMP
---
0x47f: JUMPDEST 
0x480: V417 = 0x1
0x482: V418 = 0xa0
0x484: V419 = 0x2
0x486: V420 = EXP 0x2 0xa0
0x487: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x488: V422 = CALLER
0x489: V423 = AND V422 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V424 = 0x0
0x48e: M[0x0] = V423
0x48f: V425 = 0x3
0x491: V426 = 0x20
0x493: M[0x20] = 0x3
0x494: V427 = 0x40
0x497: V428 = SHA3 0x0 0x40
0x498: V429 = S[V428]
0x499: V430 = 0x4a2
0x49e: V431 = 0x8d2
0x4a1: JUMP 0x8d2
---
Entry stack: [V12, 0xde, V139, V141, V400, V139, V141]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x4a2, V429, S3]
Exit stack: [V12, 0xde, V139, V141, V400, V139, V141, 0x4a2, V429, V141]

================================

Block 0x4a2
[0x4a2:0x4df]
---
Predecessors: [0x8e3]
Successors: [0x8aa]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x1
0x4a5 PUSH1 0xa0
0x4a7 PUSH1 0x2
0x4a9 EXP
0x4aa SUB
0x4ab CALLER
0x4ac DUP2
0x4ad AND
0x4ae PUSH1 0x0
0x4b0 SWAP1
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x3
0x4b5 PUSH1 0x20
0x4b7 SWAP1
0x4b8 DUP2
0x4b9 MSTORE
0x4ba PUSH1 0x40
0x4bc DUP1
0x4bd DUP4
0x4be SHA3
0x4bf SWAP5
0x4c0 SWAP1
0x4c1 SWAP5
0x4c2 SSTORE
0x4c3 SWAP2
0x4c4 DUP9
0x4c5 AND
0x4c6 DUP2
0x4c7 MSTORE
0x4c8 PUSH1 0x4
0x4ca SWAP1
0x4cb SWAP2
0x4cc MSTORE
0x4cd SHA3
0x4ce SLOAD
0x4cf PUSH2 0x4e0
0x4d2 SWAP1
0x4d3 PUSH6 0x2d79883d2000
0x4da DUP7
0x4db MUL
0x4dc PUSH2 0x8aa
0x4df JUMP
---
0x4a2: JUMPDEST 
0x4a3: V432 = 0x1
0x4a5: V433 = 0xa0
0x4a7: V434 = 0x2
0x4a9: V435 = EXP 0x2 0xa0
0x4aa: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ab: V437 = CALLER
0x4ad: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x4ae: V439 = 0x0
0x4b2: M[0x0] = V438
0x4b3: V440 = 0x3
0x4b5: V441 = 0x20
0x4b9: M[0x20] = 0x3
0x4ba: V442 = 0x40
0x4be: V443 = SHA3 0x0 0x40
0x4c2: S[V443] = S0
0x4c5: V444 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: M[0x0] = V444
0x4c8: V445 = 0x4
0x4cc: M[0x20] = 0x4
0x4cd: V446 = SHA3 0x0 0x40
0x4ce: V447 = S[V446]
0x4cf: V448 = 0x4e0
0x4d3: V449 = 0x2d79883d2000
0x4db: V450 = MUL S4 0x2d79883d2000
0x4dc: V451 = 0x8aa
0x4df: JUMP 0x8aa
---
Entry stack: [V12, 0xde, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x4e0, V447, V450]
Exit stack: [V12, 0xde, S5, S4, S3, S2, S1, 0x4e0, V447, V450]

================================

Block 0x4e0
[0x4e0:0x538]
---
Predecessors: [0x8cb]
Successors: [0x539]
---
0x4e0 JUMPDEST
0x4e1 PUSH1 0x1
0x4e3 PUSH1 0xa0
0x4e5 PUSH1 0x2
0x4e7 EXP
0x4e8 SUB
0x4e9 DUP1
0x4ea DUP8
0x4eb AND
0x4ec PUSH1 0x0
0x4ee DUP2
0x4ef DUP2
0x4f0 MSTORE
0x4f1 PUSH1 0x4
0x4f3 PUSH1 0x20
0x4f5 MSTORE
0x4f6 PUSH1 0x40
0x4f8 SWAP1
0x4f9 DUP2
0x4fa SWAP1
0x4fb SHA3
0x4fc SWAP4
0x4fd SWAP1
0x4fe SWAP4
0x4ff SSTORE
0x500 SWAP2
0x501 CALLER
0x502 SWAP1
0x503 SWAP2
0x504 AND
0x505 SWAP1
0x506 PUSH32 0x1330e76d2c28036ef65f41f61a5eea154a5692abe8ab7e264f08fb805c2ecf9b
0x527 SWAP1
0x528 DUP8
0x529 SWAP1
0x52a MLOAD
0x52b SWAP1
0x52c DUP2
0x52d MSTORE
0x52e PUSH1 0x20
0x530 ADD
0x531 PUSH1 0x40
0x533 MLOAD
0x534 DUP1
0x535 SWAP2
0x536 SUB
0x537 SWAP1
0x538 LOG3
---
0x4e0: JUMPDEST 
0x4e1: V452 = 0x1
0x4e3: V453 = 0xa0
0x4e5: V454 = 0x2
0x4e7: V455 = EXP 0x2 0xa0
0x4e8: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4eb: V457 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x4ec: V458 = 0x0
0x4f0: M[0x0] = V457
0x4f1: V459 = 0x4
0x4f3: V460 = 0x20
0x4f5: M[0x20] = 0x4
0x4f6: V461 = 0x40
0x4fb: V462 = SHA3 0x0 0x40
0x4ff: S[V462] = S0
0x501: V463 = CALLER
0x504: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x506: V465 = 0x1330e76d2c28036ef65f41f61a5eea154a5692abe8ab7e264f08fb805c2ecf9b
0x52a: V466 = M[0x40]
0x52d: M[V466] = S4
0x52e: V467 = 0x20
0x530: V468 = ADD 0x20 V466
0x531: V469 = 0x40
0x533: V470 = M[0x40]
0x536: V471 = SUB V468 V470
0x538: LOG V470 V471 0x1330e76d2c28036ef65f41f61a5eea154a5692abe8ab7e264f08fb805c2ecf9b V464 V457
---
Entry stack: [V12, 0xde, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1]
Exit stack: [V12, 0xde, S5, S4, S3, S2, S1]

================================

Block 0x539
[0x539:0x539]
---
Predecessors: [0x4e0]
Successors: [0x53a]
---
0x539 JUMPDEST
---
0x539: JUMPDEST 
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, S3, S2, S1, S0]

================================

Block 0x53a
[0x53a:0x540]
---
Predecessors: [0x539]
Successors: [0xde]
---
0x53a JUMPDEST
0x53b POP
0x53c POP
0x53d POP
0x53e POP
0x53f POP
0x540 JUMP
---
0x53a: JUMPDEST 
0x540: JUMP 0xde
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x541
[0x541:0x557]
---
Predecessors: [0x1ca]
Successors: [0x558, 0x55c]
---
0x541 JUMPDEST
0x542 PUSH1 0x0
0x544 SLOAD
0x545 CALLER
0x546 PUSH1 0x1
0x548 PUSH1 0xa0
0x54a PUSH1 0x2
0x54c EXP
0x54d SUB
0x54e SWAP1
0x54f DUP2
0x550 AND
0x551 SWAP2
0x552 AND
0x553 EQ
0x554 PUSH2 0x55c
0x557 JUMPI
---
0x541: JUMPDEST 
0x542: V472 = 0x0
0x544: V473 = S[0x0]
0x545: V474 = CALLER
0x546: V475 = 0x1
0x548: V476 = 0xa0
0x54a: V477 = 0x2
0x54c: V478 = EXP 0x2 0xa0
0x54d: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x550: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x552: V481 = AND V473 0xffffffffffffffffffffffffffffffffffffffff
0x553: V482 = EQ V481 V480
0x554: V483 = 0x55c
0x557: JUMPI 0x55c V482
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x558
[0x558:0x55b]
---
Predecessors: [0x541]
Successors: []
---
0x558 PUSH1 0x0
0x55a DUP1
0x55b REVERT
---
0x558: V484 = 0x0
0x55b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x55c
[0x55c:0x569]
---
Predecessors: [0x541]
Successors: []
---
0x55c JUMPDEST
0x55d PUSH1 0x0
0x55f SLOAD
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 AND
0x569 SELFDESTRUCT
---
0x55c: JUMPDEST 
0x55d: V485 = 0x0
0x55f: V486 = S[0x0]
0x560: V487 = 0x1
0x562: V488 = 0xa0
0x564: V489 = 0x2
0x566: V490 = EXP 0x2 0xa0
0x567: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x568: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x569: SELFDESTRUCT V492
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x56a
[0x56a:0x56a]
---
Predecessors: []
Successors: [0x56b]
---
0x56a JUMPDEST
---
0x56a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x56b
[0x56b:0x56c]
---
Predecessors: [0x56a]
Successors: []
Has unresolved jump.
---
0x56b JUMPDEST
0x56c JUMP
---
0x56b: JUMPDEST 
0x56c: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x56d
[0x56d:0x572]
---
Predecessors: [0x1df]
Successors: [0x189]
---
0x56d JUMPDEST
0x56e PUSH1 0x2
0x570 SLOAD
0x571 DUP2
0x572 JUMP
---
0x56d: JUMPDEST 
0x56e: V493 = 0x2
0x570: V494 = S[0x2]
0x572: JUMP 0x189
---
Entry stack: [V12, 0x189]
Stack pops: 1
Stack additions: [S0, V494]
Exit stack: [V12, 0x189, V494]

================================

Block 0x573
[0x573:0x58c]
---
Predecessors: [0x204]
Successors: [0x58d]
---
0x573 JUMPDEST
0x574 PUSH1 0x1
0x576 PUSH1 0xa0
0x578 PUSH1 0x2
0x57a EXP
0x57b SUB
0x57c DUP2
0x57d AND
0x57e PUSH1 0x0
0x580 SWAP1
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x4
0x585 PUSH1 0x20
0x587 MSTORE
0x588 PUSH1 0x40
0x58a SWAP1
0x58b SHA3
0x58c SLOAD
---
0x573: JUMPDEST 
0x574: V495 = 0x1
0x576: V496 = 0xa0
0x578: V497 = 0x2
0x57a: V498 = EXP 0x2 0xa0
0x57b: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57d: V500 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x57e: V501 = 0x0
0x582: M[0x0] = V500
0x583: V502 = 0x4
0x585: V503 = 0x20
0x587: M[0x20] = 0x4
0x588: V504 = 0x40
0x58b: V505 = SHA3 0x0 0x40
0x58c: V506 = S[V505]
---
Entry stack: [V12, 0x189, V174]
Stack pops: 1
Stack additions: [S0, V506]
Exit stack: [V12, 0x189, V174, V506]

================================

Block 0x58d
[0x58d:0x591]
---
Predecessors: [0x573]
Successors: [0x189]
---
0x58d JUMPDEST
0x58e SWAP2
0x58f SWAP1
0x590 POP
0x591 JUMP
---
0x58d: JUMPDEST 
0x591: JUMP 0x189
---
Entry stack: [V12, 0x189, V174, V506]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V506]

================================

Block 0x592
[0x592:0x596]
---
Predecessors: [0x235]
Successors: [0x189]
---
0x592 JUMPDEST
0x593 PUSH1 0x5f
0x595 DUP2
0x596 JUMP
---
0x592: JUMPDEST 
0x593: V507 = 0x5f
0x596: JUMP 0x189
---
Entry stack: [V12, 0x189]
Stack pops: 1
Stack additions: [S0, 0x5f]
Exit stack: [V12, 0x189, 0x5f]

================================

Block 0x597
[0x597:0x5a5]
---
Predecessors: [0x25a]
Successors: [0x262]
---
0x597 JUMPDEST
0x598 PUSH1 0x0
0x59a SLOAD
0x59b PUSH1 0x1
0x59d PUSH1 0xa0
0x59f PUSH1 0x2
0x5a1 EXP
0x5a2 SUB
0x5a3 AND
0x5a4 DUP2
0x5a5 JUMP
---
0x597: JUMPDEST 
0x598: V508 = 0x0
0x59a: V509 = S[0x0]
0x59b: V510 = 0x1
0x59d: V511 = 0xa0
0x59f: V512 = 0x2
0x5a1: V513 = EXP 0x2 0xa0
0x5a2: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x5a5: JUMP 0x262
---
Entry stack: [V12, 0x262]
Stack pops: 1
Stack additions: [S0, V515]
Exit stack: [V12, 0x262, V515]

================================

Block 0x5a6
[0x5a6:0x5b0]
---
Predecessors: [0x289]
Successors: [0x189]
---
0x5a6 JUMPDEST
0x5a7 PUSH7 0x38d7ea4c68000
0x5af DUP2
0x5b0 JUMP
---
0x5a6: JUMPDEST 
0x5a7: V516 = 0x38d7ea4c68000
0x5b0: JUMP 0x189
---
Entry stack: [V12, 0x189]
Stack pops: 1
Stack additions: [S0, 0x38d7ea4c68000]
Exit stack: [V12, 0x189, 0x38d7ea4c68000]

================================

Block 0x5b1
[0x5b1:0x5d2]
---
Predecessors: [0x2ae]
Successors: [0x5d3, 0x5d7]
---
0x5b1 JUMPDEST
0x5b2 PUSH1 0x1
0x5b4 PUSH1 0xa0
0x5b6 PUSH1 0x2
0x5b8 EXP
0x5b9 SUB
0x5ba CALLER
0x5bb AND
0x5bc PUSH1 0x0
0x5be SWAP1
0x5bf DUP2
0x5c0 MSTORE
0x5c1 PUSH1 0x4
0x5c3 PUSH1 0x20
0x5c5 MSTORE
0x5c6 PUSH1 0x40
0x5c8 SWAP1
0x5c9 SHA3
0x5ca SLOAD
0x5cb DUP2
0x5cc SWAP1
0x5cd LT
0x5ce ISZERO
0x5cf PUSH2 0x5d7
0x5d2 JUMPI
---
0x5b1: JUMPDEST 
0x5b2: V517 = 0x1
0x5b4: V518 = 0xa0
0x5b6: V519 = 0x2
0x5b8: V520 = EXP 0x2 0xa0
0x5b9: V521 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ba: V522 = CALLER
0x5bb: V523 = AND V522 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V524 = 0x0
0x5c0: M[0x0] = V523
0x5c1: V525 = 0x4
0x5c3: V526 = 0x20
0x5c5: M[0x20] = 0x4
0x5c6: V527 = 0x40
0x5c9: V528 = SHA3 0x0 0x40
0x5ca: V529 = S[V528]
0x5cd: V530 = LT V529 V234
0x5ce: V531 = ISZERO V530
0x5cf: V532 = 0x5d7
0x5d2: JUMPI 0x5d7 V531
---
Entry stack: [V12, 0xde, V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, V234]

================================

Block 0x5d3
[0x5d3:0x5d6]
---
Predecessors: [0x5b1]
Successors: []
---
0x5d3 PUSH1 0x0
0x5d5 DUP1
0x5d6 REVERT
---
0x5d3: V533 = 0x0
0x5d6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V234]

================================

Block 0x5d7
[0x5d7:0x5f8]
---
Predecessors: [0x5b1]
Successors: [0x5f9, 0x5fd]
---
0x5d7 JUMPDEST
0x5d8 PUSH1 0x1
0x5da PUSH1 0xa0
0x5dc PUSH1 0x2
0x5de EXP
0x5df SUB
0x5e0 CALLER
0x5e1 AND
0x5e2 PUSH1 0x0
0x5e4 SWAP1
0x5e5 DUP2
0x5e6 MSTORE
0x5e7 PUSH1 0x5
0x5e9 PUSH1 0x20
0x5eb MSTORE
0x5ec PUSH1 0x40
0x5ee SWAP1
0x5ef SHA3
0x5f0 SLOAD
0x5f1 DUP2
0x5f2 SWAP1
0x5f3 LT
0x5f4 ISZERO
0x5f5 PUSH2 0x5fd
0x5f8 JUMPI
---
0x5d7: JUMPDEST 
0x5d8: V534 = 0x1
0x5da: V535 = 0xa0
0x5dc: V536 = 0x2
0x5de: V537 = EXP 0x2 0xa0
0x5df: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e0: V539 = CALLER
0x5e1: V540 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V541 = 0x0
0x5e6: M[0x0] = V540
0x5e7: V542 = 0x5
0x5e9: V543 = 0x20
0x5eb: M[0x20] = 0x5
0x5ec: V544 = 0x40
0x5ef: V545 = SHA3 0x0 0x40
0x5f0: V546 = S[V545]
0x5f3: V547 = LT V546 V234
0x5f4: V548 = ISZERO V547
0x5f5: V549 = 0x5fd
0x5f8: JUMPI 0x5fd V548
---
Entry stack: [V12, 0xde, V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, V234]

================================

Block 0x5f9
[0x5f9:0x5fc]
---
Predecessors: [0x5d7]
Successors: []
---
0x5f9 PUSH1 0x0
0x5fb DUP1
0x5fc REVERT
---
0x5f9: V550 = 0x0
0x5fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V234]

================================

Block 0x5fd
[0x5fd:0x610]
---
Predecessors: [0x5d7]
Successors: [0x611, 0x612]
---
0x5fd JUMPDEST
0x5fe PUSH1 0x1
0x600 PUSH1 0xa0
0x602 PUSH1 0x2
0x604 EXP
0x605 SUB
0x606 ADDRESS
0x607 AND
0x608 BALANCE
0x609 DUP2
0x60a SWAP1
0x60b LT
0x60c ISZERO
0x60d PUSH2 0x612
0x610 JUMPI
---
0x5fd: JUMPDEST 
0x5fe: V551 = 0x1
0x600: V552 = 0xa0
0x602: V553 = 0x2
0x604: V554 = EXP 0x2 0xa0
0x605: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x606: V556 = ADDRESS
0x607: V557 = AND V556 0xffffffffffffffffffffffffffffffffffffffff
0x608: V558 = BALANCE V557
0x60b: V559 = LT V558 V234
0x60c: V560 = ISZERO V559
0x60d: V561 = 0x612
0x610: JUMPI 0x612 V560
---
Entry stack: [V12, 0xde, V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, V234]

================================

Block 0x611
[0x611:0x611]
---
Predecessors: [0x5fd]
Successors: []
---
0x611 INVALID
---
0x611: INVALID 
---
Entry stack: [V12, 0xde, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V234]

================================

Block 0x612
[0x612:0x634]
---
Predecessors: [0x5fd]
Successors: [0x8d2]
---
0x612 JUMPDEST
0x613 PUSH1 0x1
0x615 PUSH1 0xa0
0x617 PUSH1 0x2
0x619 EXP
0x61a SUB
0x61b CALLER
0x61c AND
0x61d PUSH1 0x0
0x61f SWAP1
0x620 DUP2
0x621 MSTORE
0x622 PUSH1 0x4
0x624 PUSH1 0x20
0x626 MSTORE
0x627 PUSH1 0x40
0x629 SWAP1
0x62a SHA3
0x62b SLOAD
0x62c PUSH2 0x635
0x62f SWAP1
0x630 DUP3
0x631 PUSH2 0x8d2
0x634 JUMP
---
0x612: JUMPDEST 
0x613: V562 = 0x1
0x615: V563 = 0xa0
0x617: V564 = 0x2
0x619: V565 = EXP 0x2 0xa0
0x61a: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61b: V567 = CALLER
0x61c: V568 = AND V567 0xffffffffffffffffffffffffffffffffffffffff
0x61d: V569 = 0x0
0x621: M[0x0] = V568
0x622: V570 = 0x4
0x624: V571 = 0x20
0x626: M[0x20] = 0x4
0x627: V572 = 0x40
0x62a: V573 = SHA3 0x0 0x40
0x62b: V574 = S[V573]
0x62c: V575 = 0x635
0x631: V576 = 0x8d2
0x634: JUMP 0x8d2
---
Entry stack: [V12, 0xde, V234]
Stack pops: 1
Stack additions: [S0, 0x635, V574, S0]
Exit stack: [V12, 0xde, V234, 0x635, V574, V234]

================================

Block 0x635
[0x635:0x663]
---
Predecessors: [0x8e3]
Successors: [0x8d2]
---
0x635 JUMPDEST
0x636 PUSH1 0x1
0x638 PUSH1 0xa0
0x63a PUSH1 0x2
0x63c EXP
0x63d SUB
0x63e CALLER
0x63f AND
0x640 PUSH1 0x0
0x642 SWAP1
0x643 DUP2
0x644 MSTORE
0x645 PUSH1 0x4
0x647 PUSH1 0x20
0x649 SWAP1
0x64a DUP2
0x64b MSTORE
0x64c PUSH1 0x40
0x64e DUP1
0x64f DUP4
0x650 SHA3
0x651 SWAP4
0x652 SWAP1
0x653 SWAP4
0x654 SSTORE
0x655 PUSH1 0x5
0x657 SWAP1
0x658 MSTORE
0x659 SHA3
0x65a SLOAD
0x65b PUSH2 0x664
0x65e SWAP1
0x65f DUP3
0x660 PUSH2 0x8d2
0x663 JUMP
---
0x635: JUMPDEST 
0x636: V577 = 0x1
0x638: V578 = 0xa0
0x63a: V579 = 0x2
0x63c: V580 = EXP 0x2 0xa0
0x63d: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63e: V582 = CALLER
0x63f: V583 = AND V582 0xffffffffffffffffffffffffffffffffffffffff
0x640: V584 = 0x0
0x644: M[0x0] = V583
0x645: V585 = 0x4
0x647: V586 = 0x20
0x64b: M[0x20] = 0x4
0x64c: V587 = 0x40
0x650: V588 = SHA3 0x0 0x40
0x654: S[V588] = S0
0x655: V589 = 0x5
0x658: M[0x20] = 0x5
0x659: V590 = SHA3 0x0 0x40
0x65a: V591 = S[V590]
0x65b: V592 = 0x664
0x660: V593 = 0x8d2
0x663: JUMP 0x8d2
---
Entry stack: [V12, 0xde, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x664, V591, S1]
Exit stack: [V12, 0xde, S5, S4, S3, S2, S1, 0x664, V591, S1]

================================

Block 0x664
[0x664:0x6a5]
---
Predecessors: [0x8e3]
Successors: [0x6a6, 0x6aa]
---
0x664 JUMPDEST
0x665 PUSH1 0x1
0x667 PUSH1 0xa0
0x669 PUSH1 0x2
0x66b EXP
0x66c SUB
0x66d CALLER
0x66e AND
0x66f PUSH1 0x0
0x671 DUP2
0x672 DUP2
0x673 MSTORE
0x674 PUSH1 0x5
0x676 PUSH1 0x20
0x678 MSTORE
0x679 PUSH1 0x40
0x67b SWAP1
0x67c DUP2
0x67d SWAP1
0x67e SHA3
0x67f SWAP3
0x680 SWAP1
0x681 SWAP3
0x682 SSTORE
0x683 SWAP1
0x684 DUP3
0x685 ISZERO
0x686 PUSH2 0x8fc
0x689 MUL
0x68a SWAP1
0x68b DUP4
0x68c SWAP1
0x68d MLOAD
0x68e PUSH1 0x0
0x690 PUSH1 0x40
0x692 MLOAD
0x693 DUP1
0x694 DUP4
0x695 SUB
0x696 DUP2
0x697 DUP6
0x698 DUP9
0x699 DUP9
0x69a CALL
0x69b SWAP4
0x69c POP
0x69d POP
0x69e POP
0x69f POP
0x6a0 ISZERO
0x6a1 ISZERO
0x6a2 PUSH2 0x6aa
0x6a5 JUMPI
---
0x664: JUMPDEST 
0x665: V594 = 0x1
0x667: V595 = 0xa0
0x669: V596 = 0x2
0x66b: V597 = EXP 0x2 0xa0
0x66c: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66d: V599 = CALLER
0x66e: V600 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x66f: V601 = 0x0
0x673: M[0x0] = V600
0x674: V602 = 0x5
0x676: V603 = 0x20
0x678: M[0x20] = 0x5
0x679: V604 = 0x40
0x67e: V605 = SHA3 0x0 0x40
0x682: S[V605] = S0
0x685: V606 = ISZERO S1
0x686: V607 = 0x8fc
0x689: V608 = MUL 0x8fc V606
0x68d: V609 = M[0x40]
0x68e: V610 = 0x0
0x690: V611 = 0x40
0x692: V612 = M[0x40]
0x695: V613 = SUB V609 V612
0x69a: V614 = CALL V608 V600 S1 V612 V613 V612 0x0
0x6a0: V615 = ISZERO V614
0x6a1: V616 = ISZERO V615
0x6a2: V617 = 0x6aa
0x6a5: JUMPI 0x6aa V616
---
Entry stack: [V12, 0xde, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1]
Exit stack: [V12, 0xde, S5, S4, S3, S2, S1]

================================

Block 0x6a6
[0x6a6:0x6a9]
---
Predecessors: [0x664]
Successors: []
---
0x6a6 PUSH1 0x0
0x6a8 DUP1
0x6a9 REVERT
---
0x6a6: V618 = 0x0
0x6a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, S3, S2, S1, S0]

================================

Block 0x6aa
[0x6aa:0x6aa]
---
Predecessors: [0x664, 0x86e]
Successors: [0x6ab]
---
0x6aa JUMPDEST
---
0x6aa: JUMPDEST 
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, S3, S2, S1, S0]

================================

Block 0x6ab
[0x6ab:0x6ad]
---
Predecessors: [0x6aa]
Successors: [0xde]
---
0x6ab JUMPDEST
0x6ac POP
0x6ad JUMP
---
0x6ab: JUMPDEST 
0x6ad: JUMP S1
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xde, S4, S3, S2]

================================

Block 0x6ae
[0x6ae:0x6b7]
---
Predecessors: [0x2c6]
Successors: [0x189]
---
0x6ae JUMPDEST
0x6af PUSH6 0x9184e72a000
0x6b6 DUP2
0x6b7 JUMP
---
0x6ae: JUMPDEST 
0x6af: V619 = 0x9184e72a000
0x6b7: JUMP 0x189
---
Entry stack: [V12, 0x189]
Stack pops: 1
Stack additions: [S0, 0x9184e72a000]
Exit stack: [V12, 0x189, 0x9184e72a000]

================================

Block 0x6b8
[0x6b8:0x6d1]
---
Predecessors: [0x2eb]
Successors: [0x6d2]
---
0x6b8 JUMPDEST
0x6b9 PUSH1 0x1
0x6bb PUSH1 0xa0
0x6bd PUSH1 0x2
0x6bf EXP
0x6c0 SUB
0x6c1 DUP2
0x6c2 AND
0x6c3 PUSH1 0x0
0x6c5 SWAP1
0x6c6 DUP2
0x6c7 MSTORE
0x6c8 PUSH1 0x3
0x6ca PUSH1 0x20
0x6cc MSTORE
0x6cd PUSH1 0x40
0x6cf SWAP1
0x6d0 SHA3
0x6d1 SLOAD
---
0x6b8: JUMPDEST 
0x6b9: V620 = 0x1
0x6bb: V621 = 0xa0
0x6bd: V622 = 0x2
0x6bf: V623 = EXP 0x2 0xa0
0x6c0: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c2: V625 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x6c3: V626 = 0x0
0x6c7: M[0x0] = V625
0x6c8: V627 = 0x3
0x6ca: V628 = 0x20
0x6cc: M[0x20] = 0x3
0x6cd: V629 = 0x40
0x6d0: V630 = SHA3 0x0 0x40
0x6d1: V631 = S[V630]
---
Entry stack: [V12, 0x189, V261]
Stack pops: 1
Stack additions: [S0, V631]
Exit stack: [V12, 0x189, V261, V631]

================================

Block 0x6d2
[0x6d2:0x6d6]
---
Predecessors: [0x6b8]
Successors: [0x189]
---
0x6d2 JUMPDEST
0x6d3 SWAP2
0x6d4 SWAP1
0x6d5 POP
0x6d6 JUMP
---
0x6d2: JUMPDEST 
0x6d6: JUMP 0x189
---
Entry stack: [V12, 0x189, V261, V631]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V631]

================================

Block 0x6d7
[0x6d7:0x6ee]
---
Predecessors: [0x31c]
Successors: [0x6ef, 0x6f3]
---
0x6d7 JUMPDEST
0x6d8 PUSH1 0x0
0x6da DUP1
0x6db SLOAD
0x6dc CALLER
0x6dd PUSH1 0x1
0x6df PUSH1 0xa0
0x6e1 PUSH1 0x2
0x6e3 EXP
0x6e4 SUB
0x6e5 SWAP1
0x6e6 DUP2
0x6e7 AND
0x6e8 SWAP2
0x6e9 AND
0x6ea EQ
0x6eb PUSH2 0x6f3
0x6ee JUMPI
---
0x6d7: JUMPDEST 
0x6d8: V632 = 0x0
0x6db: V633 = S[0x0]
0x6dc: V634 = CALLER
0x6dd: V635 = 0x1
0x6df: V636 = 0xa0
0x6e1: V637 = 0x2
0x6e3: V638 = EXP 0x2 0xa0
0x6e4: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e7: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0x6e9: V641 = AND V633 0xffffffffffffffffffffffffffffffffffffffff
0x6ea: V642 = EQ V641 V640
0x6eb: V643 = 0x6f3
0x6ee: JUMPI 0x6f3 V642
---
Entry stack: [V12, 0xde, V282, V284]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xde, V282, V284, 0x0]

================================

Block 0x6ef
[0x6ef:0x6f2]
---
Predecessors: [0x6d7]
Successors: []
---
0x6ef PUSH1 0x0
0x6f1 DUP1
0x6f2 REVERT
---
0x6ef: V644 = 0x0
0x6f2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V282, V284, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V282, V284, 0x0]

================================

Block 0x6f3
[0x6f3:0x709]
---
Predecessors: [0x6d7]
Successors: [0x70a, 0x70e]
---
0x6f3 JUMPDEST
0x6f4 POP
0x6f5 PUSH1 0x2
0x6f7 SLOAD
0x6f8 PUSH6 0x2d79883d2000
0x6ff DUP3
0x700 MUL
0x701 SWAP1
0x702 DUP2
0x703 SWAP1
0x704 LT
0x705 ISZERO
0x706 PUSH2 0x70e
0x709 JUMPI
---
0x6f3: JUMPDEST 
0x6f5: V645 = 0x2
0x6f7: V646 = S[0x2]
0x6f8: V647 = 0x2d79883d2000
0x700: V648 = MUL V284 0x2d79883d2000
0x704: V649 = LT V646 V648
0x705: V650 = ISZERO V649
0x706: V651 = 0x70e
0x709: JUMPI 0x70e V650
---
Entry stack: [V12, 0xde, V282, V284, 0x0]
Stack pops: 2
Stack additions: [S1, V648]
Exit stack: [V12, 0xde, V282, V284, V648]

================================

Block 0x70a
[0x70a:0x70d]
---
Predecessors: [0x6f3]
Successors: []
---
0x70a PUSH1 0x0
0x70c DUP1
0x70d REVERT
---
0x70a: V652 = 0x0
0x70d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V282, V284, V648]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V282, V284, V648]

================================

Block 0x70e
[0x70e:0x719]
---
Predecessors: [0x6f3]
Successors: [0x8d2]
---
0x70e JUMPDEST
0x70f PUSH2 0x71a
0x712 PUSH1 0x2
0x714 SLOAD
0x715 DUP3
0x716 PUSH2 0x8d2
0x719 JUMP
---
0x70e: JUMPDEST 
0x70f: V653 = 0x71a
0x712: V654 = 0x2
0x714: V655 = S[0x2]
0x716: V656 = 0x8d2
0x719: JUMP 0x8d2
---
Entry stack: [V12, 0xde, V282, V284, V648]
Stack pops: 1
Stack additions: [S0, 0x71a, V655, S0]
Exit stack: [V12, 0xde, V282, V284, V648, 0x71a, V655, V648]

================================

Block 0x71a
[0x71a:0x73f]
---
Predecessors: [0x8e3]
Successors: [0x8aa]
---
0x71a JUMPDEST
0x71b PUSH1 0x2
0x71d SSTORE
0x71e PUSH1 0x1
0x720 PUSH1 0xa0
0x722 PUSH1 0x2
0x724 EXP
0x725 SUB
0x726 DUP4
0x727 AND
0x728 PUSH1 0x0
0x72a SWAP1
0x72b DUP2
0x72c MSTORE
0x72d PUSH1 0x3
0x72f PUSH1 0x20
0x731 MSTORE
0x732 PUSH1 0x40
0x734 SWAP1
0x735 SHA3
0x736 SLOAD
0x737 PUSH2 0x740
0x73a SWAP1
0x73b DUP4
0x73c PUSH2 0x8aa
0x73f JUMP
---
0x71a: JUMPDEST 
0x71b: V657 = 0x2
0x71d: S[0x2] = S0
0x71e: V658 = 0x1
0x720: V659 = 0xa0
0x722: V660 = 0x2
0x724: V661 = EXP 0x2 0xa0
0x725: V662 = SUB 0x10000000000000000000000000000000000000000 0x1
0x727: V663 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x728: V664 = 0x0
0x72c: M[0x0] = V663
0x72d: V665 = 0x3
0x72f: V666 = 0x20
0x731: M[0x20] = 0x3
0x732: V667 = 0x40
0x735: V668 = SHA3 0x0 0x40
0x736: V669 = S[V668]
0x737: V670 = 0x740
0x73c: V671 = 0x8aa
0x73f: JUMP 0x8aa
---
Entry stack: [V12, 0xde, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x740, V669, S2]
Exit stack: [V12, 0xde, S5, S4, S3, S2, S1, 0x740, V669, S2]

================================

Block 0x740
[0x740:0x792]
---
Predecessors: [0x8cb]
Successors: [0x793]
---
0x740 JUMPDEST
0x741 PUSH1 0x1
0x743 PUSH1 0xa0
0x745 PUSH1 0x2
0x747 EXP
0x748 SUB
0x749 DUP5
0x74a AND
0x74b PUSH1 0x0
0x74d DUP2
0x74e DUP2
0x74f MSTORE
0x750 PUSH1 0x3
0x752 PUSH1 0x20
0x754 MSTORE
0x755 PUSH1 0x40
0x757 SWAP1
0x758 DUP2
0x759 SWAP1
0x75a SHA3
0x75b SWAP3
0x75c SWAP1
0x75d SWAP3
0x75e SSTORE
0x75f SWAP1
0x760 PUSH32 0xe366ef68d2c0620e9e4c5074fd7ad0ce6739b65287f9c2d09b7d002da556879b
0x781 SWAP1
0x782 DUP5
0x783 SWAP1
0x784 MLOAD
0x785 SWAP1
0x786 DUP2
0x787 MSTORE
0x788 PUSH1 0x20
0x78a ADD
0x78b PUSH1 0x40
0x78d MLOAD
0x78e DUP1
0x78f SWAP2
0x790 SUB
0x791 SWAP1
0x792 LOG2
---
0x740: JUMPDEST 
0x741: V672 = 0x1
0x743: V673 = 0xa0
0x745: V674 = 0x2
0x747: V675 = EXP 0x2 0xa0
0x748: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74a: V677 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x74b: V678 = 0x0
0x74f: M[0x0] = V677
0x750: V679 = 0x3
0x752: V680 = 0x20
0x754: M[0x20] = 0x3
0x755: V681 = 0x40
0x75a: V682 = SHA3 0x0 0x40
0x75e: S[V682] = S0
0x760: V683 = 0xe366ef68d2c0620e9e4c5074fd7ad0ce6739b65287f9c2d09b7d002da556879b
0x784: V684 = M[0x40]
0x787: M[V684] = S2
0x788: V685 = 0x20
0x78a: V686 = ADD 0x20 V684
0x78b: V687 = 0x40
0x78d: V688 = M[0x40]
0x790: V689 = SUB V686 V688
0x792: LOG V688 V689 0xe366ef68d2c0620e9e4c5074fd7ad0ce6739b65287f9c2d09b7d002da556879b V677
---
Entry stack: [V12, 0xde, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V12, 0xde, S5, S4, S3, S2, S1]

================================

Block 0x793
[0x793:0x793]
---
Predecessors: [0x740]
Successors: [0x794]
---
0x793 JUMPDEST
---
0x793: JUMPDEST 
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, S3, S2, S1, S0]

================================

Block 0x794
[0x794:0x798]
---
Predecessors: [0x793]
Successors: [0xde]
---
0x794 JUMPDEST
0x795 POP
0x796 POP
0x797 POP
0x798 JUMP
---
0x794: JUMPDEST 
0x798: JUMP S3
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xde, S4]

================================

Block 0x799
[0x799:0x7af]
---
Predecessors: [0x340]
Successors: [0x7b0, 0x7b4]
---
0x799 JUMPDEST
0x79a PUSH1 0x0
0x79c SLOAD
0x79d CALLER
0x79e PUSH1 0x1
0x7a0 PUSH1 0xa0
0x7a2 PUSH1 0x2
0x7a4 EXP
0x7a5 SUB
0x7a6 SWAP1
0x7a7 DUP2
0x7a8 AND
0x7a9 SWAP2
0x7aa AND
0x7ab EQ
0x7ac PUSH2 0x7b4
0x7af JUMPI
---
0x799: JUMPDEST 
0x79a: V690 = 0x0
0x79c: V691 = S[0x0]
0x79d: V692 = CALLER
0x79e: V693 = 0x1
0x7a0: V694 = 0xa0
0x7a2: V695 = 0x2
0x7a4: V696 = EXP 0x2 0xa0
0x7a5: V697 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a8: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0x7aa: V699 = AND V691 0xffffffffffffffffffffffffffffffffffffffff
0x7ab: V700 = EQ V699 V698
0x7ac: V701 = 0x7b4
0x7af: JUMPI 0x7b4 V700
---
Entry stack: [V12, 0xde, V298, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V298, V300]

================================

Block 0x7b0
[0x7b0:0x7b3]
---
Predecessors: [0x799]
Successors: []
---
0x7b0 PUSH1 0x0
0x7b2 DUP1
0x7b3 REVERT
---
0x7b0: V702 = 0x0
0x7b3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V298, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V298, V300]

================================

Block 0x7b4
[0x7b4:0x7d5]
---
Predecessors: [0x799]
Successors: [0x7d6, 0x7da]
---
0x7b4 JUMPDEST
0x7b5 PUSH1 0x1
0x7b7 PUSH1 0xa0
0x7b9 PUSH1 0x2
0x7bb EXP
0x7bc SUB
0x7bd DUP3
0x7be AND
0x7bf PUSH1 0x0
0x7c1 SWAP1
0x7c2 DUP2
0x7c3 MSTORE
0x7c4 PUSH1 0x4
0x7c6 PUSH1 0x20
0x7c8 MSTORE
0x7c9 PUSH1 0x40
0x7cb SWAP1
0x7cc SHA3
0x7cd SLOAD
0x7ce DUP2
0x7cf SWAP1
0x7d0 LT
0x7d1 ISZERO
0x7d2 PUSH2 0x7da
0x7d5 JUMPI
---
0x7b4: JUMPDEST 
0x7b5: V703 = 0x1
0x7b7: V704 = 0xa0
0x7b9: V705 = 0x2
0x7bb: V706 = EXP 0x2 0xa0
0x7bc: V707 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7be: V708 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x7bf: V709 = 0x0
0x7c3: M[0x0] = V708
0x7c4: V710 = 0x4
0x7c6: V711 = 0x20
0x7c8: M[0x20] = 0x4
0x7c9: V712 = 0x40
0x7cc: V713 = SHA3 0x0 0x40
0x7cd: V714 = S[V713]
0x7d0: V715 = LT V714 V300
0x7d1: V716 = ISZERO V715
0x7d2: V717 = 0x7da
0x7d5: JUMPI 0x7da V716
---
Entry stack: [V12, 0xde, V298, V300]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xde, V298, V300]

================================

Block 0x7d6
[0x7d6:0x7d9]
---
Predecessors: [0x7b4]
Successors: []
---
0x7d6 PUSH1 0x0
0x7d8 DUP1
0x7d9 REVERT
---
0x7d6: V718 = 0x0
0x7d9: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V298, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V298, V300]

================================

Block 0x7da
[0x7da:0x7fc]
---
Predecessors: [0x7b4]
Successors: [0x8aa]
---
0x7da JUMPDEST
0x7db PUSH1 0x1
0x7dd PUSH1 0xa0
0x7df PUSH1 0x2
0x7e1 EXP
0x7e2 SUB
0x7e3 DUP3
0x7e4 AND
0x7e5 PUSH1 0x0
0x7e7 SWAP1
0x7e8 DUP2
0x7e9 MSTORE
0x7ea PUSH1 0x5
0x7ec PUSH1 0x20
0x7ee MSTORE
0x7ef PUSH1 0x40
0x7f1 SWAP1
0x7f2 SHA3
0x7f3 SLOAD
0x7f4 PUSH2 0x7fd
0x7f7 SWAP1
0x7f8 DUP3
0x7f9 PUSH2 0x8aa
0x7fc JUMP
---
0x7da: JUMPDEST 
0x7db: V719 = 0x1
0x7dd: V720 = 0xa0
0x7df: V721 = 0x2
0x7e1: V722 = EXP 0x2 0xa0
0x7e2: V723 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e4: V724 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V725 = 0x0
0x7e9: M[0x0] = V724
0x7ea: V726 = 0x5
0x7ec: V727 = 0x20
0x7ee: M[0x20] = 0x5
0x7ef: V728 = 0x40
0x7f2: V729 = SHA3 0x0 0x40
0x7f3: V730 = S[V729]
0x7f4: V731 = 0x7fd
0x7f9: V732 = 0x8aa
0x7fc: JUMP 0x8aa
---
Entry stack: [V12, 0xde, V298, V300]
Stack pops: 2
Stack additions: [S1, S0, 0x7fd, V730, S0]
Exit stack: [V12, 0xde, V298, V300, 0x7fd, V730, V300]

================================

Block 0x7fd
[0x7fd:0x84d]
---
Predecessors: [0x8cb]
Successors: [0x84e]
---
0x7fd JUMPDEST
0x7fe PUSH1 0x1
0x800 PUSH1 0xa0
0x802 PUSH1 0x2
0x804 EXP
0x805 SUB
0x806 DUP4
0x807 AND
0x808 PUSH1 0x0
0x80a DUP2
0x80b DUP2
0x80c MSTORE
0x80d PUSH1 0x5
0x80f PUSH1 0x20
0x811 MSTORE
0x812 PUSH1 0x40
0x814 SWAP1
0x815 DUP2
0x816 SWAP1
0x817 SHA3
0x818 DUP4
0x819 SWAP1
0x81a SSTORE
0x81b SWAP1
0x81c SWAP2
0x81d PUSH32 0xb666b605080f4c474258d1b35d5e752b0a386cfb5e8f303a0b9dd7939c7a649d
0x83e SWAP2
0x83f MLOAD
0x840 SWAP1
0x841 DUP2
0x842 MSTORE
0x843 PUSH1 0x20
0x845 ADD
0x846 PUSH1 0x40
0x848 MLOAD
0x849 DUP1
0x84a SWAP2
0x84b SUB
0x84c SWAP1
0x84d LOG2
---
0x7fd: JUMPDEST 
0x7fe: V733 = 0x1
0x800: V734 = 0xa0
0x802: V735 = 0x2
0x804: V736 = EXP 0x2 0xa0
0x805: V737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x807: V738 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x808: V739 = 0x0
0x80c: M[0x0] = V738
0x80d: V740 = 0x5
0x80f: V741 = 0x20
0x811: M[0x20] = 0x5
0x812: V742 = 0x40
0x817: V743 = SHA3 0x0 0x40
0x81a: S[V743] = S0
0x81d: V744 = 0xb666b605080f4c474258d1b35d5e752b0a386cfb5e8f303a0b9dd7939c7a649d
0x83f: V745 = M[0x40]
0x842: M[V745] = S0
0x843: V746 = 0x20
0x845: V747 = ADD 0x20 V745
0x846: V748 = 0x40
0x848: V749 = M[0x40]
0x84b: V750 = SUB V747 V749
0x84d: LOG V749 V750 0xb666b605080f4c474258d1b35d5e752b0a386cfb5e8f303a0b9dd7939c7a649d V738
---
Entry stack: [V12, 0xde, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V12, 0xde, S5, S4, S3, S2, S1]

================================

Block 0x84e
[0x84e:0x84e]
---
Predecessors: [0x7fd]
Successors: [0x84f]
---
0x84e JUMPDEST
---
0x84e: JUMPDEST 
---
Entry stack: [V12, 0xde, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, S3, S2, S1, S0]

================================

Block 0x84f
[0x84f:0x852]
---
Predecessors: [0x84e]
Successors: [0xde]
Has unresolved jump.
---
0x84f JUMPDEST
0x850 POP
0x851 POP
0x852 JUMP
---
0x84f: JUMPDEST 
0x852: JUMP V400
---
Entry stack: [V12, 0xde, V139, V141, V400, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xde, V139, V141]

================================

Block 0x853
[0x853:0x869]
---
Predecessors: [0x364]
Successors: [0x86a, 0x86e]
---
0x853 JUMPDEST
0x854 PUSH1 0x0
0x856 SLOAD
0x857 CALLER
0x858 PUSH1 0x1
0x85a PUSH1 0xa0
0x85c PUSH1 0x2
0x85e EXP
0x85f SUB
0x860 SWAP1
0x861 DUP2
0x862 AND
0x863 SWAP2
0x864 AND
0x865 EQ
0x866 PUSH2 0x86e
0x869 JUMPI
---
0x853: JUMPDEST 
0x854: V751 = 0x0
0x856: V752 = S[0x0]
0x857: V753 = CALLER
0x858: V754 = 0x1
0x85a: V755 = 0xa0
0x85c: V756 = 0x2
0x85e: V757 = EXP 0x2 0xa0
0x85f: V758 = SUB 0x10000000000000000000000000000000000000000 0x1
0x862: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0x864: V760 = AND V752 0xffffffffffffffffffffffffffffffffffffffff
0x865: V761 = EQ V760 V759
0x866: V762 = 0x86e
0x869: JUMPI 0x86e V761
---
Entry stack: [V12, 0xde, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V314]

================================

Block 0x86a
[0x86a:0x86d]
---
Predecessors: [0x853]
Successors: []
---
0x86a PUSH1 0x0
0x86c DUP1
0x86d REVERT
---
0x86a: V763 = 0x0
0x86d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V314]

================================

Block 0x86e
[0x86e:0x87d]
---
Predecessors: [0x853]
Successors: [0x6aa, 0x87e]
---
0x86e JUMPDEST
0x86f PUSH1 0x1
0x871 PUSH1 0xa0
0x873 PUSH1 0x2
0x875 EXP
0x876 SUB
0x877 DUP2
0x878 AND
0x879 ISZERO
0x87a PUSH2 0x6aa
0x87d JUMPI
---
0x86e: JUMPDEST 
0x86f: V764 = 0x1
0x871: V765 = 0xa0
0x873: V766 = 0x2
0x875: V767 = EXP 0x2 0xa0
0x876: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x878: V769 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x879: V770 = ISZERO V769
0x87a: V771 = 0x6aa
0x87d: JUMPI 0x6aa V770
---
Entry stack: [V12, 0xde, V314]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, V314]

================================

Block 0x87e
[0x87e:0x898]
---
Predecessors: [0x86e]
Successors: [0x899]
---
0x87e PUSH1 0x0
0x880 DUP1
0x881 SLOAD
0x882 PUSH1 0x1
0x884 PUSH1 0xa0
0x886 PUSH1 0x2
0x888 EXP
0x889 SUB
0x88a NOT
0x88b AND
0x88c PUSH1 0x1
0x88e PUSH1 0xa0
0x890 PUSH1 0x2
0x892 EXP
0x893 SUB
0x894 DUP4
0x895 AND
0x896 OR
0x897 SWAP1
0x898 SSTORE
---
0x87e: V772 = 0x0
0x881: V773 = S[0x0]
0x882: V774 = 0x1
0x884: V775 = 0xa0
0x886: V776 = 0x2
0x888: V777 = EXP 0x2 0xa0
0x889: V778 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88a: V779 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x88b: V780 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V773
0x88c: V781 = 0x1
0x88e: V782 = 0xa0
0x890: V783 = 0x2
0x892: V784 = EXP 0x2 0xa0
0x893: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x895: V786 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x896: V787 = OR V786 V780
0x898: S[0x0] = V787
---
Entry stack: [V12, 0xde, V314]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, V314]

================================

Block 0x899
[0x899:0x899]
---
Predecessors: [0x87e]
Successors: [0x89a]
---
0x899 JUMPDEST
---
0x899: JUMPDEST 
---
Entry stack: [V12, 0xde, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V314]

================================

Block 0x89a
[0x89a:0x89a]
---
Predecessors: [0x899]
Successors: [0x89b]
---
0x89a JUMPDEST
---
0x89a: JUMPDEST 
---
Entry stack: [V12, 0xde, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V314]

================================

Block 0x89b
[0x89b:0x89d]
---
Predecessors: [0x89a]
Successors: [0xde]
---
0x89b JUMPDEST
0x89c POP
0x89d JUMP
---
0x89b: JUMPDEST 
0x89d: JUMP 0xde
---
Entry stack: [V12, 0xde, V314]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x89e
[0x89e:0x8a9]
---
Predecessors: [0x385]
Successors: [0x189]
---
0x89e JUMPDEST
0x89f PUSH8 0xde0b6b3a7640000
0x8a8 DUP2
0x8a9 JUMP
---
0x89e: JUMPDEST 
0x89f: V788 = 0xde0b6b3a7640000
0x8a9: JUMP 0x189
---
Entry stack: [V12, 0x189]
Stack pops: 1
Stack additions: [S0, 0xde0b6b3a7640000]
Exit stack: [V12, 0x189, 0xde0b6b3a7640000]

================================

Block 0x8aa
[0x8aa:0x8b9]
---
Predecessors: [0x39f, 0x4a2, 0x71a, 0x7da]
Successors: [0x8ba, 0x8bf]
---
0x8aa JUMPDEST
0x8ab PUSH1 0x0
0x8ad DUP3
0x8ae DUP3
0x8af ADD
0x8b0 DUP4
0x8b1 DUP2
0x8b2 LT
0x8b3 DUP1
0x8b4 ISZERO
0x8b5 SWAP1
0x8b6 PUSH2 0x8bf
0x8b9 JUMPI
---
0x8aa: JUMPDEST 
0x8ab: V789 = 0x0
0x8af: V790 = ADD S0 S1
0x8b2: V791 = LT V790 S1
0x8b4: V792 = ISZERO V791
0x8b6: V793 = 0x8bf
0x8b9: JUMPI 0x8bf V791
---
Entry stack: [V12, 0xde, S7, S6, S5, S4, S3, {0x3ab, 0x4e0, 0x740, 0x7fd}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V790, V792]
Exit stack: [V12, 0xde, S7, S6, S5, S4, S3, {0x3ab, 0x4e0, 0x740, 0x7fd}, S1, S0, 0x0, V790, V792]

================================

Block 0x8ba
[0x8ba:0x8be]
---
Predecessors: [0x8aa]
Successors: [0x8bf]
---
0x8ba POP
0x8bb DUP3
0x8bc DUP2
0x8bd LT
0x8be ISZERO
---
0x8bd: V794 = LT V790 S3
0x8be: V795 = ISZERO V794
---
Entry stack: [V12, 0xde, S10, S9, S8, S7, S6, {0x3ab, 0x4e0, 0x740, 0x7fd}, S4, S3, 0x0, V790, V792]
Stack pops: 4
Stack additions: [S3, S2, S1, V795]
Exit stack: [V12, 0xde, S10, S9, S8, S7, S6, {0x3ab, 0x4e0, 0x740, 0x7fd}, S4, S3, 0x0, V790, V795]

================================

Block 0x8bf
[0x8bf:0x8c5]
---
Predecessors: [0x8aa, 0x8ba]
Successors: [0x8c6, 0x8c7]
---
0x8bf JUMPDEST
0x8c0 ISZERO
0x8c1 ISZERO
0x8c2 PUSH2 0x8c7
0x8c5 JUMPI
---
0x8bf: JUMPDEST 
0x8c0: V796 = ISZERO S0
0x8c1: V797 = ISZERO V796
0x8c2: V798 = 0x8c7
0x8c5: JUMPI 0x8c7 V797
---
Entry stack: [V12, 0xde, S10, S9, S8, S7, S6, {0x3ab, 0x4e0, 0x740, 0x7fd}, S4, S3, 0x0, V790, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde, S10, S9, S8, S7, S6, {0x3ab, 0x4e0, 0x740, 0x7fd}, S4, S3, 0x0, V790]

================================

Block 0x8c6
[0x8c6:0x8c6]
---
Predecessors: [0x8bf]
Successors: []
---
0x8c6 INVALID
---
0x8c6: INVALID 
---
Entry stack: [V12, 0xde, S9, S8, S7, S6, S5, {0x3ab, 0x4e0, 0x740, 0x7fd}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S9, S8, S7, S6, S5, {0x3ab, 0x4e0, 0x740, 0x7fd}, S3, S2, 0x0, S0]

================================

Block 0x8c7
[0x8c7:0x8ca]
---
Predecessors: [0x8bf]
Successors: [0x8cb]
---
0x8c7 JUMPDEST
0x8c8 DUP1
0x8c9 SWAP2
0x8ca POP
---
0x8c7: JUMPDEST 
---
Entry stack: [V12, 0xde, S9, S8, S7, S6, S5, {0x3ab, 0x4e0, 0x740, 0x7fd}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0xde, S9, S8, S7, S6, S5, {0x3ab, 0x4e0, 0x740, 0x7fd}, S3, S2, S0, S0]

================================

Block 0x8cb
[0x8cb:0x8d1]
---
Predecessors: [0x8c7]
Successors: [0x3ab, 0x4e0, 0x740, 0x7fd]
---
0x8cb JUMPDEST
0x8cc POP
0x8cd SWAP3
0x8ce SWAP2
0x8cf POP
0x8d0 POP
0x8d1 JUMP
---
0x8cb: JUMPDEST 
0x8d1: JUMP {0x3ab, 0x4e0, 0x740, 0x7fd}
---
Entry stack: [V12, 0xde, S9, S8, S7, S6, S5, {0x3ab, 0x4e0, 0x740, 0x7fd}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xde, S9, S8, S7, S6, S5, S1]

================================

Block 0x8d2
[0x8d2:0x8dc]
---
Predecessors: [0x47f, 0x612, 0x635, 0x70e]
Successors: [0x8dd, 0x8de]
---
0x8d2 JUMPDEST
0x8d3 PUSH1 0x0
0x8d5 DUP3
0x8d6 DUP3
0x8d7 GT
0x8d8 ISZERO
0x8d9 PUSH2 0x8de
0x8dc JUMPI
---
0x8d2: JUMPDEST 
0x8d3: V799 = 0x0
0x8d7: V800 = GT S0 S1
0x8d8: V801 = ISZERO V800
0x8d9: V802 = 0x8de
0x8dc: JUMPI 0x8de V801
---
Entry stack: [V12, 0xde, S7, S6, S5, S4, S3, {0x4a2, 0x635, 0x664, 0x71a}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0xde, S7, S6, S5, S4, S3, {0x4a2, 0x635, 0x664, 0x71a}, S1, S0, 0x0]

================================

Block 0x8dd
[0x8dd:0x8dd]
---
Predecessors: [0x8d2]
Successors: []
---
0x8dd INVALID
---
0x8dd: INVALID 
---
Entry stack: [V12, 0xde, S8, S7, S6, S5, S4, {0x4a2, 0x635, 0x664, 0x71a}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S8, S7, S6, S5, S4, {0x4a2, 0x635, 0x664, 0x71a}, S2, S1, 0x0]

================================

Block 0x8de
[0x8de:0x8e2]
---
Predecessors: [0x8d2]
Successors: [0x8e3]
---
0x8de JUMPDEST
0x8df POP
0x8e0 DUP1
0x8e1 DUP3
0x8e2 SUB
---
0x8de: JUMPDEST 
0x8e2: V803 = SUB S2 S1
---
Entry stack: [V12, 0xde, S8, S7, S6, S5, S4, {0x4a2, 0x635, 0x664, 0x71a}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V803]
Exit stack: [V12, 0xde, S8, S7, S6, S5, S4, {0x4a2, 0x635, 0x664, 0x71a}, S2, S1, V803]

================================

Block 0x8e3
[0x8e3:0x8e8]
---
Predecessors: [0x8de]
Successors: [0x4a2, 0x635, 0x664, 0x71a]
---
0x8e3 JUMPDEST
0x8e4 SWAP3
0x8e5 SWAP2
0x8e6 POP
0x8e7 POP
0x8e8 JUMP
---
0x8e3: JUMPDEST 
0x8e8: JUMP {0x4a2, 0x635, 0x664, 0x71a}
---
Entry stack: [V12, 0xde, S8, S7, S6, S5, S4, {0x4a2, 0x635, 0x664, 0x71a}, S2, S1, V803]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0xde, S8, S7, S6, S5, S4, V803]

================================

Block 0x8e9
[0x8e9:0x921]
---
Predecessors: []
Successors: []
---
0x8e9 STOP
0x8ea LOG1
0x8eb PUSH6 0x627a7a723058
0x8f2 SHA3
0x8f3 MISSING 0xc0
0x8f4 NUMBER
0x8f5 CREATE
0x8f6 MISSING 0xc5
0x8f7 PUSH8 0x591447a0ee853264
0x900 CREATE2
0x901 SSTORE
0x902 MISSING 0xe1
0x903 DUP6
0x904 SHA3
0x905 MISSING 0xd6
0x906 PUSH4 0x7bf7df2
0x90b CALLCODE
0x90c SDIV
0x90d SWAP8
0x90e MISSING 0x2c
0x90f PUSH18 0xbe22ac0029
---
0x8e9: STOP 
0x8ea: LOG S0 S1 S2
0x8eb: V804 = 0x627a7a723058
0x8f2: V805 = SHA3 0x627a7a723058 S3
0x8f3: MISSING 0xc0
0x8f4: V806 = NUMBER
0x8f5: V807 = CREATE V806 S0 S1
0x8f6: MISSING 0xc5
0x8f7: V808 = 0x591447a0ee853264
0x900: V809 = CREATE2 0x591447a0ee853264 S0 S1 S2
0x901: S[V809] = S3
0x902: MISSING 0xe1
0x904: V810 = SHA3 S5 S0
0x905: MISSING 0xd6
0x906: V811 = 0x7bf7df2
0x90b: V812 = CALLCODE 0x7bf7df2 S0 S1 S2 S3 S4 S5
0x90c: V813 = SDIV V812 S6
0x90e: MISSING 0x2c
0x90f: V814 = 0xbe22ac0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V805, V807, V810, S1, S2, S3, S4, S5, S14, S7, S8, S9, S10, S11, S12, S13, V813, 0xbe22ac0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xe1
Exit block: 0x15e
Body: 0xe1, 0xe8, 0xec, 0xf4, 0x118, 0x121, 0x129, 0x131, 0x145, 0x15e, 0x3b1, 0x401, 0x409, 0x41c, 0x42a, 0x43e, 0x447

Function 1:
Public function signature: 0x1249c58b
Entry block: 0xd5
Exit block: 0xdf
Body: 0xd5, 0xd6, 0xde, 0xdf

Function 2:
Public function signature: 0x2033d3a3
Entry block: 0x176
Exit block: 0x189
Body: 0x176, 0x17d, 0x181, 0x189, 0x44f

Function 3:
Public function signature: 0x410d4fde
Entry block: 0x19b
Exit block: 0xdf
Body: 0xde, 0xdf, 0x19b, 0x1a2, 0x1a6, 0x454, 0x47b, 0x47f, 0x4a2

Function 4:
Public function signature: 0x41c0e1b5
Entry block: 0x1bf
Exit block: 0x558
Body: 0x1bf, 0x1c6, 0x1ca, 0x541, 0x558, 0x55c

Function 5:
Public function signature: 0x61a6c8ec
Entry block: 0x1d4
Exit block: 0x189
Body: 0x189, 0x1d4, 0x1db, 0x1df, 0x56d

Function 6:
Public function signature: 0x688f7b82
Entry block: 0x1f9
Exit block: 0x189
Body: 0x189, 0x1f9, 0x200, 0x204, 0x573, 0x58d

Function 7:
Public function signature: 0x837e6db9
Entry block: 0x22a
Exit block: 0x189
Body: 0x189, 0x22a, 0x231, 0x235, 0x592

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x24f
Exit block: 0x262
Body: 0x24f, 0x256, 0x25a, 0x262, 0x597

Function 9:
Public function signature: 0x8e49642b
Entry block: 0x27e
Exit block: 0x189
Body: 0x189, 0x27e, 0x285, 0x289, 0x5a6

Function 10:
Public function signature: 0x9791e2cf
Entry block: 0x2a3
Exit block: 0xdf
Body: 0xde, 0xdf, 0x2a3, 0x2aa, 0x2ae, 0x5b1, 0x5d3, 0x5d7, 0x5f9, 0x5fd, 0x611, 0x612, 0x635

Function 11:
Public function signature: 0xa26c3e51
Entry block: 0x2bb
Exit block: 0x189
Body: 0x189, 0x2bb, 0x2c2, 0x2c6, 0x6ae

Function 12:
Public function signature: 0xd6e2808f
Entry block: 0x2e0
Exit block: 0x189
Body: 0x189, 0x2e0, 0x2e7, 0x2eb, 0x6b8, 0x6d2

Function 13:
Public function signature: 0xe4e103dc
Entry block: 0x311
Exit block: 0xdf
Body: 0xde, 0xdf, 0x311, 0x318, 0x31c, 0x6d7, 0x6ef, 0x6f3, 0x70a, 0x70e, 0x71a

Function 14:
Public function signature: 0xebfcf311
Entry block: 0x335
Exit block: 0xdf
Body: 0xde, 0xdf, 0x335, 0x33c, 0x340, 0x799, 0x7b0, 0x7b4, 0x7d6, 0x7da, 0x7fd, 0x84e, 0x84f

Function 15:
Public function signature: 0xf2fde38b
Entry block: 0x359
Exit block: 0xdf
Body: 0xde, 0xdf, 0x359, 0x360, 0x364, 0x6aa, 0x6ab, 0x853, 0x86a, 0x86e, 0x87e, 0x899, 0x89a, 0x89b

Function 16:
Public function signature: 0xf8bc1855
Entry block: 0x37a
Exit block: 0x189
Body: 0x189, 0x37a, 0x381, 0x385, 0x89e

Function 17:
Public fallback function
Entry block: 0xd5
Exit block: 0xdf
Body: 0xd5, 0xd6, 0xde, 0xdf

Function 18:
Private function
Entry block: 0x8aa
Exit block: 0x8cb
Body: 0x8aa, 0x8ba, 0x8bf, 0x8c7, 0x8cb

Function 19:
Private function
Entry block: 0x8d2
Exit block: 0x8e3
Body: 0x8d2, 0x8de, 0x8e3

Function 20:
Private function
Entry block: 0x39f
Exit block: 0x89b
Body: 0x39f, 0x3ab, 0x3af

