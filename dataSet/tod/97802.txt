Block 0x0
[0x0:0x37]
---
Predecessors: []
Successors: [0x38, 0x50]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH4 0xffffffff
0xa PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28 PUSH1 0x0
0x2a CALLDATALOAD
0x2b DIV
0x2c AND
0x2d PUSH4 0x97c1e25
0x32 DUP2
0x33 EQ
0x34 PUSH2 0x50
0x37 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xffffffff
0xa: V3 = 0x100000000000000000000000000000000000000000000000000000000
0x28: V4 = 0x0
0x2a: V5 = CALLDATALOAD 0x0
0x2b: V6 = DIV V5 0x100000000000000000000000000000000000000000000000000000000
0x2c: V7 = AND V6 0xffffffff
0x2d: V8 = 0x97c1e25
0x33: V9 = EQ V7 0x97c1e25
0x34: V10 = 0x50
0x37: JUMPI 0x50 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x38
[0x38:0x42]
---
Predecessors: [0x0]
Successors: [0x43, 0x62]
---
0x38 DUP1
0x39 PUSH4 0xe29df22
0x3e EQ
0x3f PUSH2 0x62
0x42 JUMPI
---
0x39: V11 = 0xe29df22
0x3e: V12 = EQ 0xe29df22 V7
0x3f: V13 = 0x62
0x42: JUMPI 0x62 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x43
[0x43:0x4d]
---
Predecessors: [0x38]
Successors: [0x4e, 0x6c]
---
0x43 DUP1
0x44 PUSH4 0x412a5a6d
0x49 EQ
0x4a PUSH2 0x6c
0x4d JUMPI
---
0x44: V14 = 0x412a5a6d
0x49: V15 = EQ 0x412a5a6d V7
0x4a: V16 = 0x6c
0x4d: JUMPI 0x6c V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4e
[0x4e:0x4f]
---
Predecessors: [0x43]
Successors: []
---
0x4e JUMPDEST
0x4f INVALID
---
0x4e: JUMPDEST 
0x4f: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x50
[0x50:0x56]
---
Predecessors: [0x0]
Successors: [0x57, 0x58]
---
0x50 JUMPDEST
0x51 CALLVALUE
0x52 ISZERO
0x53 PUSH2 0x58
0x56 JUMPI
---
0x50: JUMPDEST 
0x51: V17 = CALLVALUE
0x52: V18 = ISZERO V17
0x53: V19 = 0x58
0x56: JUMPI 0x58 V18
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x57
[0x57:0x57]
---
Predecessors: [0x50]
Successors: []
---
0x57 INVALID
---
0x57: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0x50]
Successors: [0x7e]
---
0x58 JUMPDEST
0x59 PUSH2 0x60
0x5c PUSH2 0x7e
0x5f JUMP
---
0x58: JUMPDEST 
0x59: V20 = 0x60
0x5c: V21 = 0x7e
0x5f: JUMP 0x7e
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V7, 0x60]

================================

Block 0x60
[0x60:0x61]
---
Predecessors: [0x15d, 0x1e6]
Successors: []
---
0x60 JUMPDEST
0x61 STOP
---
0x60: JUMPDEST 
0x61: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x62
[0x62:0x69]
---
Predecessors: [0x38]
Successors: [0x99]
---
0x62 JUMPDEST
0x63 PUSH2 0x60
0x66 PUSH2 0x99
0x69 JUMP
---
0x62: JUMPDEST 
0x63: V22 = 0x60
0x66: V23 = 0x99
0x69: JUMP 0x99
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V7, 0x60]

================================

Block 0x6a
[0x6a:0x6b]
---
Predecessors: []
Successors: []
---
0x6a JUMPDEST
0x6b STOP
---
0x6a: JUMPDEST 
0x6b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6c
[0x6c:0x72]
---
Predecessors: [0x43]
Successors: [0x73, 0x74]
---
0x6c JUMPDEST
0x6d CALLVALUE
0x6e ISZERO
0x6f PUSH2 0x74
0x72 JUMPI
---
0x6c: JUMPDEST 
0x6d: V24 = CALLVALUE
0x6e: V25 = ISZERO V24
0x6f: V26 = 0x74
0x72: JUMPI 0x74 V25
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x73
[0x73:0x73]
---
Predecessors: [0x6c]
Successors: []
---
0x73 INVALID
---
0x73: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x74
[0x74:0x7b]
---
Predecessors: [0x6c]
Successors: [0x15f]
---
0x74 JUMPDEST
0x75 PUSH2 0x60
0x78 PUSH2 0x15f
0x7b JUMP
---
0x74: JUMPDEST 
0x75: V27 = 0x60
0x78: V28 = 0x15f
0x7b: JUMP 0x15f
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V7, 0x60]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: []
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7e
[0x7e:0x96]
---
Predecessors: [0x58]
Successors: []
---
0x7e JUMPDEST
0x7f CALLER
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 SELFDESTRUCT
---
0x7e: JUMPDEST 
0x7f: V29 = CALLER
0x80: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x96: SELFDESTRUCT V31
---
Entry stack: [V7, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x60]

================================

Block 0x97
[0x97:0x98]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x97 JUMPDEST
0x98 JUMP
---
0x97: JUMPDEST 
0x98: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x99
[0x99:0xc8]
---
Predecessors: [0x62]
Successors: [0xc9, 0xce]
---
0x99 JUMPDEST
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf CALLER
0xb0 AND
0xb1 PUSH1 0x0
0xb3 SWAP1
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x1
0xb8 PUSH1 0x20
0xba MSTORE
0xbb PUSH1 0x40
0xbd SWAP1
0xbe SHA3
0xbf SLOAD
0xc0 PUSH1 0xff
0xc2 AND
0xc3 ISZERO
0xc4 ISZERO
0xc5 PUSH2 0xce
0xc8 JUMPI
---
0x99: JUMPDEST 
0x9a: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V33 = CALLER
0xb0: V34 = AND V33 0xffffffffffffffffffffffffffffffffffffffff
0xb1: V35 = 0x0
0xb5: M[0x0] = V34
0xb6: V36 = 0x1
0xb8: V37 = 0x20
0xba: M[0x20] = 0x1
0xbb: V38 = 0x40
0xbe: V39 = SHA3 0x0 0x40
0xbf: V40 = S[V39]
0xc0: V41 = 0xff
0xc2: V42 = AND 0xff V40
0xc3: V43 = ISZERO V42
0xc4: V44 = ISZERO V43
0xc5: V45 = 0xce
0xc8: JUMPI 0xce V44
---
Entry stack: [V7, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x60]

================================

Block 0xc9
[0xc9:0xcd]
---
Predecessors: [0x99]
Successors: []
---
0xc9 PUSH1 0x0
0xcb PUSH1 0x0
0xcd REVERT
---
0xc9: V46 = 0x0
0xcb: V47 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V7, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x60]

================================

Block 0xce
[0xce:0x10a]
---
Predecessors: [0x99]
Successors: [0x10b, 0x10c]
---
0xce JUMPDEST
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 SLOAD
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb SWAP1
0xec SWAP2
0xed AND
0xee SWAP2
0xef CALLVALUE
0xf0 DUP1
0xf1 ISZERO
0xf2 PUSH2 0x8fc
0xf5 MUL
0xf6 SWAP3
0xf7 SWAP1
0xf8 SWAP2
0xf9 DUP2
0xfa DUP2
0xfb DUP2
0xfc DUP6
0xfd DUP9
0xfe DUP9
0xff CALL
0x100 SWAP4
0x101 POP
0x102 POP
0x103 POP
0x104 POP
0x105 ISZERO
0x106 ISZERO
0x107 PUSH2 0x10c
0x10a JUMPI
---
0xce: JUMPDEST 
0xcf: V48 = 0x0
0xd2: V49 = S[0x0]
0xd3: V50 = 0x40
0xd5: V51 = M[0x40]
0xd6: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V53 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0xef: V54 = CALLVALUE
0xf1: V55 = ISZERO V54
0xf2: V56 = 0x8fc
0xf5: V57 = MUL 0x8fc V55
0xff: V58 = CALL V57 V53 V54 V51 0x0 V51 0x0
0x105: V59 = ISZERO V58
0x106: V60 = ISZERO V59
0x107: V61 = 0x10c
0x10a: JUMPI 0x10c V60
---
Entry stack: [V7, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x60]

================================

Block 0x10b
[0x10b:0x10b]
---
Predecessors: [0xce]
Successors: []
---
0x10b INVALID
---
0x10b: INVALID 
---
Entry stack: [V7, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x60]

================================

Block 0x10c
[0x10c:0x15c]
---
Predecessors: [0xce]
Successors: [0x15d]
---
0x10c JUMPDEST
0x10d PUSH1 0x40
0x10f DUP1
0x110 MLOAD
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 CALLER
0x127 AND
0x128 DUP2
0x129 MSTORE
0x12a CALLVALUE
0x12b PUSH1 0x20
0x12d DUP3
0x12e ADD
0x12f MSTORE
0x130 DUP2
0x131 MLOAD
0x132 PUSH32 0x939e51ac2fd009b158d6344f7e68a83d8d18d9b0cc88cf514aac6aaa9cad2a18
0x153 SWAP3
0x154 SWAP2
0x155 DUP2
0x156 SWAP1
0x157 SUB
0x158 SWAP1
0x159 SWAP2
0x15a ADD
0x15b SWAP1
0x15c LOG1
---
0x10c: JUMPDEST 
0x10d: V62 = 0x40
0x110: V63 = M[0x40]
0x111: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V65 = CALLER
0x127: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0x129: M[V63] = V66
0x12a: V67 = CALLVALUE
0x12b: V68 = 0x20
0x12e: V69 = ADD V63 0x20
0x12f: M[V69] = V67
0x131: V70 = M[0x40]
0x132: V71 = 0x939e51ac2fd009b158d6344f7e68a83d8d18d9b0cc88cf514aac6aaa9cad2a18
0x157: V72 = SUB V63 V70
0x15a: V73 = ADD 0x40 V72
0x15c: LOG V70 V73 0x939e51ac2fd009b158d6344f7e68a83d8d18d9b0cc88cf514aac6aaa9cad2a18
---
Entry stack: [V7, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x60]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: [0x10c]
Successors: [0x60]
---
0x15d JUMPDEST
0x15e JUMP
---
0x15d: JUMPDEST 
0x15e: JUMP 0x60
---
Entry stack: [V7, 0x60]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x15f
[0x15f:0x168]
---
Predecessors: [0x74]
Successors: [0x1e9]
---
0x15f JUMPDEST
0x160 PUSH1 0x0
0x162 PUSH2 0x169
0x165 PUSH2 0x1e9
0x168 JUMP
---
0x15f: JUMPDEST 
0x160: V74 = 0x0
0x162: V75 = 0x169
0x165: V76 = 0x1e9
0x168: JUMP 0x1e9
---
Entry stack: [V7, 0x60]
Stack pops: 0
Stack additions: [0x0, 0x169]
Exit stack: [V7, 0x60, 0x0, 0x169]

================================

Block 0x169
[0x169:0x17b]
---
Predecessors: [0x1e9]
Successors: [0x17c, 0x17d]
---
0x169 JUMPDEST
0x16a PUSH1 0x40
0x16c MLOAD
0x16d SWAP1
0x16e DUP2
0x16f SWAP1
0x170 SUB
0x171 SWAP1
0x172 PUSH1 0x0
0x174 CREATE
0x175 DUP1
0x176 ISZERO
0x177 ISZERO
0x178 PUSH2 0x17d
0x17b JUMPI
---
0x169: JUMPDEST 
0x16a: V77 = 0x40
0x16c: V78 = M[0x40]
0x170: V79 = SUB V106 V78
0x172: V80 = 0x0
0x174: V81 = CREATE 0x0 V78 V79
0x176: V82 = ISZERO V81
0x177: V83 = ISZERO V82
0x178: V84 = 0x17d
0x17b: JUMPI 0x17d V83
---
Entry stack: [V7, 0x60, 0x0, V106]
Stack pops: 1
Stack additions: [V81]
Exit stack: [V7, 0x60, 0x0, V81]

================================

Block 0x17c
[0x17c:0x17c]
---
Predecessors: [0x169]
Successors: []
---
0x17c INVALID
---
0x17c: INVALID 
---
Entry stack: [V7, 0x60, 0x0, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x60, 0x0, V81]

================================

Block 0x17d
[0x17d:0x1e5]
---
Predecessors: [0x169]
Successors: [0x1e6]
---
0x17d JUMPDEST
0x17e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x193 DUP2
0x194 AND
0x195 PUSH1 0x0
0x197 DUP2
0x198 DUP2
0x199 MSTORE
0x19a PUSH1 0x1
0x19c PUSH1 0x20
0x19e DUP2
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x40
0x1a3 SWAP3
0x1a4 DUP4
0x1a5 SWAP1
0x1a6 SHA3
0x1a7 DUP1
0x1a8 SLOAD
0x1a9 PUSH1 0xff
0x1ab NOT
0x1ac AND
0x1ad SWAP1
0x1ae SWAP3
0x1af OR
0x1b0 SWAP1
0x1b1 SWAP2
0x1b2 SSTORE
0x1b3 DUP2
0x1b4 MLOAD
0x1b5 SWAP3
0x1b6 DUP4
0x1b7 MSTORE
0x1b8 SWAP1
0x1b9 MLOAD
0x1ba SWAP3
0x1bb SWAP4
0x1bc POP
0x1bd PUSH32 0xcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312
0x1de SWAP3
0x1df SWAP2
0x1e0 DUP3
0x1e1 SWAP1
0x1e2 SUB
0x1e3 ADD
0x1e4 SWAP1
0x1e5 LOG1
---
0x17d: JUMPDEST 
0x17e: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V86 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x195: V87 = 0x0
0x199: M[0x0] = V86
0x19a: V88 = 0x1
0x19c: V89 = 0x20
0x1a0: M[0x20] = 0x1
0x1a1: V90 = 0x40
0x1a6: V91 = SHA3 0x0 0x40
0x1a8: V92 = S[V91]
0x1a9: V93 = 0xff
0x1ab: V94 = NOT 0xff
0x1ac: V95 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V92
0x1af: V96 = OR 0x1 V95
0x1b2: S[V91] = V96
0x1b4: V97 = M[0x40]
0x1b7: M[V97] = V86
0x1b9: V98 = M[0x40]
0x1bd: V99 = 0xcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312
0x1e2: V100 = SUB V97 V98
0x1e3: V101 = ADD V100 0x20
0x1e5: LOG V98 V101 0xcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312
---
Entry stack: [V7, 0x60, 0x0, V81]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x60, V81]

================================

Block 0x1e6
[0x1e6:0x1e8]
---
Predecessors: [0x17d]
Successors: [0x60]
---
0x1e6 JUMPDEST
0x1e7 POP
0x1e8 JUMP
---
0x1e6: JUMPDEST 
0x1e8: JUMP 0x60
---
Entry stack: [V7, 0x60, V81]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x1e9
[0x1e9:0x1f8]
---
Predecessors: [0x15f]
Successors: [0x169]
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed PUSH2 0x155
0x1f0 DUP1
0x1f1 PUSH2 0x1fa
0x1f4 DUP4
0x1f5 CODECOPY
0x1f6 ADD
0x1f7 SWAP1
0x1f8 JUMP
---
0x1e9: JUMPDEST 
0x1ea: V102 = 0x40
0x1ec: V103 = M[0x40]
0x1ed: V104 = 0x155
0x1f1: V105 = 0x1fa
0x1f5: CODECOPY V103 0x1fa 0x155
0x1f6: V106 = ADD 0x155 V103
0x1f8: JUMP 0x169
---
Entry stack: [V7, 0x60, 0x0, 0x169]
Stack pops: 1
Stack additions: [V106]
Exit stack: [V7, 0x60, 0x0, V106]

================================

Block 0x1f9
[0x1f9:0x204]
---
Predecessors: []
Successors: [0x205]
---
0x1f9 STOP
0x1fa PUSH1 0x60
0x1fc PUSH1 0x40
0x1fe MSTORE
0x1ff CALLVALUE
0x200 ISZERO
0x201 PUSH2 0xc
0x204 JUMPI
---
0x1f9: STOP 
0x1fa: V107 = 0x60
0x1fc: V108 = 0x40
0x1fe: M[0x40] = 0x60
0x1ff: V109 = CALLVALUE
0x200: V110 = ISZERO V109
0x201: V111 = 0xc
0x204: THROWI V110
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x205
[0x205:0x206]
---
Predecessors: [0x1f9]
Successors: [0x207]
---
0x205 INVALID
0x206 JUMPDEST
---
0x205: INVALID 
0x206: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x207
[0x207:0x222]
---
Predecessors: [0x205]
Successors: [0x223]
---
0x207 JUMPDEST
0x208 PUSH1 0x0
0x20a DUP1
0x20b SLOAD
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 NOT
0x215 AND
0x216 CALLER
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f AND
0x220 OR
0x221 SWAP1
0x222 SSTORE
---
0x207: JUMPDEST 
0x208: V112 = 0x0
0x20b: V113 = S[0x0]
0x20c: V114 = 0x1
0x20e: V115 = 0xa0
0x210: V116 = 0x2
0x212: V117 = EXP 0x2 0xa0
0x213: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x214: V119 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x215: V120 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V113
0x216: V121 = CALLER
0x217: V122 = 0x1
0x219: V123 = 0xa0
0x21b: V124 = 0x2
0x21d: V125 = EXP 0x2 0xa0
0x21e: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x220: V128 = OR V127 V120
0x222: S[0x0] = V128
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x223
[0x223:0x223]
---
Predecessors: [0x207]
Successors: [0x224]
---
0x223 JUMPDEST
---
0x223: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x224
[0x224:0x23c]
---
Predecessors: [0x223]
Successors: [0x23d]
---
0x224 JUMPDEST
0x225 PUSH2 0x11c
0x228 DUP1
0x229 PUSH2 0x39
0x22c PUSH1 0x0
0x22e CODECOPY
0x22f PUSH1 0x0
0x231 RETURN
0x232 STOP
0x233 PUSH1 0x60
0x235 PUSH1 0x40
0x237 MSTORE
0x238 CALLDATASIZE
0x239 ISZERO
0x23a PUSH1 0x3c
0x23c JUMPI
---
0x224: JUMPDEST 
0x225: V129 = 0x11c
0x229: V130 = 0x39
0x22c: V131 = 0x0
0x22e: CODECOPY 0x0 0x39 0x11c
0x22f: V132 = 0x0
0x231: RETURN 0x0 0x11c
0x232: STOP 
0x233: V133 = 0x60
0x235: V134 = 0x40
0x237: M[0x40] = 0x60
0x238: V135 = CALLDATASIZE
0x239: V136 = ISZERO V135
0x23a: V137 = 0x3c
0x23c: THROWI V136
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23d
[0x23d:0x26e]
---
Predecessors: [0x224]
Successors: [0x26f]
---
0x23d PUSH4 0xffffffff
0x242 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x260 PUSH1 0x0
0x262 CALLDATALOAD
0x263 DIV
0x264 AND
0x265 PUSH4 0x97c1e25
0x26a DUP2
0x26b EQ
0x26c PUSH1 0xc6
0x26e JUMPI
---
0x23d: V138 = 0xffffffff
0x242: V139 = 0x100000000000000000000000000000000000000000000000000000000
0x260: V140 = 0x0
0x262: V141 = CALLDATALOAD 0x0
0x263: V142 = DIV V141 0x100000000000000000000000000000000000000000000000000000000
0x264: V143 = AND V142 0xffffffff
0x265: V144 = 0x97c1e25
0x26b: V145 = EQ V143 0x97c1e25
0x26c: V146 = 0xc6
0x26e: THROWI V145
---
Entry stack: []
Stack pops: 0
Stack additions: [V143]
Exit stack: [V143]

================================

Block 0x26f
[0x26f:0x271]
---
Predecessors: [0x23d]
Successors: [0x272]
---
0x26f JUMPDEST
0x270 PUSH1 0xc4
---
0x26f: JUMPDEST 
0x270: V147 = 0xc4
---
Entry stack: [V143]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V143, 0xc4]

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x26f]
Successors: [0x279]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 ISZERO
0x276 PUSH1 0x49
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V148 = CALLVALUE
0x274: V149 = ISZERO V148
0x275: V150 = ISZERO V149
0x276: V151 = 0x49
0x278: THROWI V150
---
Entry stack: [V143, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V143, 0xc4]

================================

Block 0x279
[0x279:0x2e0]
---
Predecessors: [0x272]
Successors: [0x2e1]
---
0x279 PUSH1 0xc1
0x27b JUMP
0x27c JUMPDEST
0x27d PUSH1 0x0
0x27f DUP1
0x280 SLOAD
0x281 PUSH1 0x40
0x283 DUP1
0x284 MLOAD
0x285 PUSH32 0xe29df2200000000000000000000000000000000000000000000000000000000
0x2a6 DUP2
0x2a7 MSTORE
0x2a8 SWAP1
0x2a9 MLOAD
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf SWAP1
0x2c0 SWAP3
0x2c1 AND
0x2c2 SWAP3
0x2c3 PUSH4 0xe29df22
0x2c8 SWAP3
0x2c9 CALLVALUE
0x2ca SWAP3
0x2cb PUSH1 0x4
0x2cd DUP1
0x2ce DUP3
0x2cf ADD
0x2d0 SWAP4
0x2d1 SWAP3
0x2d2 SWAP2
0x2d3 DUP3
0x2d4 SWAP1
0x2d5 SUB
0x2d6 ADD
0x2d7 DUP2
0x2d8 DUP6
0x2d9 DUP9
0x2da DUP1
0x2db EXTCODESIZE
0x2dc ISZERO
0x2dd ISZERO
0x2de PUSH1 0xaf
0x2e0 JUMPI
---
0x279: V152 = 0xc1
0x27b: THROW 
0x27c: JUMPDEST 
0x27d: V153 = 0x0
0x280: V154 = S[0x0]
0x281: V155 = 0x40
0x284: V156 = M[0x40]
0x285: V157 = 0xe29df2200000000000000000000000000000000000000000000000000000000
0x2a7: M[V156] = 0xe29df2200000000000000000000000000000000000000000000000000000000
0x2a9: V158 = M[0x40]
0x2aa: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: V160 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V161 = 0xe29df22
0x2c9: V162 = CALLVALUE
0x2cb: V163 = 0x4
0x2cf: V164 = ADD V156 0x4
0x2d5: V165 = SUB V156 V158
0x2d6: V166 = ADD V165 0x4
0x2db: V167 = EXTCODESIZE V160
0x2dc: V168 = ISZERO V167
0x2dd: V169 = ISZERO V168
0x2de: V170 = 0xaf
0x2e0: THROWI V169
---
Entry stack: [V143, 0xc4]
Stack pops: 0
Stack additions: [V160, V162, V158, V166, V158, 0x0, V164, V162, 0xe29df22, V160]
Exit stack: []

================================

Block 0x2e1
[0x2e1:0x2ed]
---
Predecessors: [0x279]
Successors: [0x2ee]
---
0x2e1 INVALID
0x2e2 JUMPDEST
0x2e3 PUSH2 0x25ee
0x2e6 GAS
0x2e7 SUB
0x2e8 CALL
0x2e9 ISZERO
0x2ea ISZERO
0x2eb PUSH1 0xbc
0x2ed JUMPI
---
0x2e1: INVALID 
0x2e2: JUMPDEST 
0x2e3: V171 = 0x25ee
0x2e6: V172 = GAS
0x2e7: V173 = SUB V172 0x25ee
0x2e8: V174 = CALL V173 S0 S1 S2 S3 S4 S5
0x2e9: V175 = ISZERO V174
0x2ea: V176 = ISZERO V175
0x2eb: V177 = 0xbc
0x2ed: THROWI V176
---
Entry stack: [V160, 0xe29df22, V162, V164, 0x0, V158, V166, V158, V162, V160]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ee
[0x2ee:0x2f3]
---
Predecessors: [0x2e1]
Successors: [0x2f4]
---
0x2ee INVALID
0x2ef JUMPDEST
0x2f0 POP
0x2f1 POP
0x2f2 POP
0x2f3 POP
---
0x2ee: INVALID 
0x2ef: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f4
[0x2f4:0x2f4]
---
Predecessors: [0x2ee]
Successors: [0x2f5]
---
0x2f4 JUMPDEST
---
0x2f4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f5
[0x2f5:0x2fe]
---
Predecessors: [0x2f4]
Successors: [0x2ff]
---
0x2f5 JUMPDEST
0x2f6 JUMP
0x2f7 JUMPDEST
0x2f8 STOP
0x2f9 JUMPDEST
0x2fa CALLVALUE
0x2fb ISZERO
0x2fc PUSH1 0xcd
0x2fe JUMPI
---
0x2f5: JUMPDEST 
0x2f6: JUMP S0
0x2f7: JUMPDEST 
0x2f8: STOP 
0x2f9: JUMPDEST 
0x2fa: V178 = CALLVALUE
0x2fb: V179 = ISZERO V178
0x2fc: V180 = 0xcd
0x2fe: THROWI V179
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x2ff
[0x2ff:0x379]
---
Predecessors: [0x2f5]
Successors: []
---
0x2ff INVALID
0x300 JUMPDEST
0x301 PUSH1 0xc4
0x303 PUSH1 0xd5
0x305 JUMP
0x306 JUMPDEST
0x307 STOP
0x308 JUMPDEST
0x309 CALLER
0x30a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31f AND
0x320 SELFDESTRUCT
0x321 JUMPDEST
0x322 JUMP
0x323 STOP
0x324 LOG1
0x325 PUSH6 0x627a7a723058
0x32c SHA3
0x32d MISSING 0xc3
0x32e PUSH8 0x9fef42179e802405
0x337 MISSING 0xe8
0x338 SELFDESTRUCT
0x339 PUSH16 0x9a7c22615525fb194957e82a94d5a438
0x34a MSTORE
0x34b BALANCE
0x34c MISSING 0xf6
0x34d STOP
0x34e MISSING 0x29
0x34f LOG1
0x350 PUSH6 0x627a7a723058
0x357 SHA3
0x358 DUP16
0x359 DELEGATECALL
0x35a MISSING 0x2a
0x35b MISSING 0xf6
0x35c MISSING 0xd8
0x35d SMOD
0x35e MISSING 0x2d
0x35f PUSH18 0xcb08b27181da24de2a2aaaae934871923991
0x372 MISSING 0xc8
0x373 MISSING 0xe2
0x374 DUP2
0x375 MISSING 0x2b
0x376 MISSING 0xa6
0x377 MISSING 0xd9
0x378 STOP
0x379 MISSING 0x29
---
0x2ff: INVALID 
0x300: JUMPDEST 
0x301: V181 = 0xc4
0x303: V182 = 0xd5
0x305: THROW 
0x306: JUMPDEST 
0x307: STOP 
0x308: JUMPDEST 
0x309: V183 = CALLER
0x30a: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x31f: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x320: SELFDESTRUCT V185
0x321: JUMPDEST 
0x322: JUMP S0
0x323: STOP 
0x324: LOG S0 S1 S2
0x325: V186 = 0x627a7a723058
0x32c: V187 = SHA3 0x627a7a723058 S3
0x32d: MISSING 0xc3
0x32e: V188 = 0x9fef42179e802405
0x337: MISSING 0xe8
0x338: SELFDESTRUCT S0
0x339: V189 = 0x9a7c22615525fb194957e82a94d5a438
0x34a: M[0x9a7c22615525fb194957e82a94d5a438] = S0
0x34b: V190 = BALANCE S1
0x34c: MISSING 0xf6
0x34d: STOP 
0x34e: MISSING 0x29
0x34f: LOG S0 S1 S2
0x350: V191 = 0x627a7a723058
0x357: V192 = SHA3 0x627a7a723058 S3
0x359: V193 = DELEGATECALL S18 V192 S4 S5 S6 S7
0x35a: MISSING 0x2a
0x35b: MISSING 0xf6
0x35c: MISSING 0xd8
0x35d: V194 = SMOD S0 S1
0x35e: MISSING 0x2d
0x35f: V195 = 0xcb08b27181da24de2a2aaaae934871923991
0x372: MISSING 0xc8
0x373: MISSING 0xe2
0x375: MISSING 0x2b
0x376: MISSING 0xa6
0x377: MISSING 0xd9
0x378: STOP 
0x379: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc4, V187, 0x9fef42179e802405, V190, V193, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, V194, 0xcb08b27181da24de2a2aaaae934871923991, S1, S0, S1]
Exit stack: []

================================

Function 0:
Public function signature: 0x97c1e25
Entry block: 0x50
Exit block: 0x7e
Body: 0x50, 0x57, 0x58, 0x7e

Function 1:
Public function signature: 0xe29df22
Entry block: 0x62
Exit block: 0x60
Body: 0x60, 0x62, 0x99, 0xc9, 0xce, 0x10b, 0x10c, 0x15d

Function 2:
Public function signature: 0x412a5a6d
Entry block: 0x6c
Exit block: 0x60
Body: 0x60, 0x6c, 0x73, 0x74, 0x15f, 0x169, 0x17c, 0x17d, 0x1e6, 0x1e9

Function 3:
Public fallback function
Entry block: 0x4e
Exit block: 0x4e
Body: 0x4e

