Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x48
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x48
0xc: JUMPI 0x48 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x4a]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3ccfd60b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x4a
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3ccfd60b
0x22: V15 = EQ V13 0x3ccfd60b
0x23: V16 = 0x4a
0x26: JUMPI 0x4a V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x5d]
---
0x27 DUP1
0x28 PUSH4 0x85295877
0x2d EQ
0x2e PUSH2 0x5d
0x31 JUMPI
---
0x28: V17 = 0x85295877
0x2d: V18 = EQ 0x85295877 V13
0x2e: V19 = 0x5d
0x31: JUMPI 0x5d V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x8c]
---
0x32 DUP1
0x33 PUSH4 0x9e5faafc
0x38 EQ
0x39 PUSH2 0x8c
0x3c JUMPI
---
0x33: V20 = 0x9e5faafc
0x38: V21 = EQ 0x9e5faafc V13
0x39: V22 = 0x8c
0x3c: JUMPI 0x8c V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x94]
---
0x3d DUP1
0x3e PUSH4 0xee97f7f3
0x43 EQ
0x44 PUSH2 0x94
0x47 JUMPI
---
0x3e: V23 = 0xee97f7f3
0x43: V24 = EQ 0xee97f7f3 V13
0x44: V25 = 0x94
0x47: JUMPI 0x94 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x49]
---
Predecessors: [0x0, 0x3d, 0xff, 0x30f]
Successors: []
---
0x48 JUMPDEST
0x49 STOP
---
0x48: JUMPDEST 
0x49: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x4a
[0x4a:0x50]
---
Predecessors: [0xd]
Successors: [0x51, 0x55]
---
0x4a JUMPDEST
0x4b CALLVALUE
0x4c ISZERO
0x4d PUSH2 0x55
0x50 JUMPI
---
0x4a: JUMPDEST 
0x4b: V26 = CALLVALUE
0x4c: V27 = ISZERO V26
0x4d: V28 = 0x55
0x50: JUMPI 0x55 V27
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x51
[0x51:0x54]
---
Predecessors: [0x4a]
Successors: []
---
0x51 PUSH1 0x0
0x53 DUP1
0x54 REVERT
---
0x51: V29 = 0x0
0x54: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x55
[0x55:0x5c]
---
Predecessors: [0x4a]
Successors: [0xa7]
---
0x55 JUMPDEST
0x56 PUSH2 0x48
0x59 PUSH2 0xa7
0x5c JUMP
---
0x55: JUMPDEST 
0x56: V30 = 0x48
0x59: V31 = 0xa7
0x5c: JUMP 0xa7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48]
Exit stack: [V13, 0x48]

================================

Block 0x5d
[0x5d:0x63]
---
Predecessors: [0x27]
Successors: [0x64, 0x68]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5d: JUMPDEST 
0x5e: V32 = CALLVALUE
0x5f: V33 = ISZERO V32
0x60: V34 = 0x68
0x63: JUMPI 0x68 V33
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5d]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V35 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x68
[0x68:0x6f]
---
Predecessors: [0x5d]
Successors: [0x101]
---
0x68 JUMPDEST
0x69 PUSH2 0x70
0x6c PUSH2 0x101
0x6f JUMP
---
0x68: JUMPDEST 
0x69: V36 = 0x70
0x6c: V37 = 0x101
0x6f: JUMP 0x101
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x70]
Exit stack: [V13, 0x70]

================================

Block 0x70
[0x70:0x8b]
---
Predecessors: [0x101, 0x313]
Successors: []
---
0x70 JUMPDEST
0x71 PUSH1 0x40
0x73 MLOAD
0x74 PUSH1 0x1
0x76 PUSH1 0xa0
0x78 PUSH1 0x2
0x7a EXP
0x7b SUB
0x7c SWAP1
0x7d SWAP2
0x7e AND
0x7f DUP2
0x80 MSTORE
0x81 PUSH1 0x20
0x83 ADD
0x84 PUSH1 0x40
0x86 MLOAD
0x87 DUP1
0x88 SWAP2
0x89 SUB
0x8a SWAP1
0x8b RETURN
---
0x70: JUMPDEST 
0x71: V38 = 0x40
0x73: V39 = M[0x40]
0x74: V40 = 0x1
0x76: V41 = 0xa0
0x78: V42 = 0x2
0x7a: V43 = EXP 0x2 0xa0
0x7b: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e: V45 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x80: M[V39] = V45
0x81: V46 = 0x20
0x83: V47 = ADD 0x20 V39
0x84: V48 = 0x40
0x86: V49 = M[0x40]
0x89: V50 = SUB V47 V49
0x8b: RETURN V49 V50
---
Entry stack: [V13, 0x70, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x70]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x32]
Successors: [0x110]
---
0x8c JUMPDEST
0x8d PUSH2 0x48
0x90 PUSH2 0x110
0x93 JUMP
---
0x8c: JUMPDEST 
0x8d: V51 = 0x48
0x90: V52 = 0x110
0x93: JUMP 0x110
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48]
Exit stack: [V13, 0x48]

================================

Block 0x94
[0x94:0x9a]
---
Predecessors: [0x3d]
Successors: [0x9b, 0x9f]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x94: JUMPDEST 
0x95: V53 = CALLVALUE
0x96: V54 = ISZERO V53
0x97: V55 = 0x9f
0x9a: JUMPI 0x9f V54
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x94]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V56 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x9f
[0x9f:0xa6]
---
Predecessors: [0x94]
Successors: [0x313]
---
0x9f JUMPDEST
0xa0 PUSH2 0x70
0xa3 PUSH2 0x313
0xa6 JUMP
---
0x9f: JUMPDEST 
0xa0: V57 = 0x70
0xa3: V58 = 0x313
0xa6: JUMP 0x313
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x70]
Exit stack: [V13, 0x70]

================================

Block 0xa7
[0xa7:0xbd]
---
Predecessors: [0x55]
Successors: [0xbe, 0xc2]
---
0xa7 JUMPDEST
0xa8 PUSH1 0x0
0xaa SLOAD
0xab CALLER
0xac PUSH1 0x1
0xae PUSH1 0xa0
0xb0 PUSH1 0x2
0xb2 EXP
0xb3 SUB
0xb4 SWAP1
0xb5 DUP2
0xb6 AND
0xb7 SWAP2
0xb8 AND
0xb9 EQ
0xba PUSH2 0xc2
0xbd JUMPI
---
0xa7: JUMPDEST 
0xa8: V59 = 0x0
0xaa: V60 = S[0x0]
0xab: V61 = CALLER
0xac: V62 = 0x1
0xae: V63 = 0xa0
0xb0: V64 = 0x2
0xb2: V65 = EXP 0x2 0xa0
0xb3: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xb8: V68 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V69 = EQ V68 V67
0xba: V70 = 0xc2
0xbd: JUMPI 0xc2 V69
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xa7]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V71 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0xc2
[0xc2:0xfa]
---
Predecessors: [0xa7]
Successors: [0xfb, 0xff]
---
0xc2 JUMPDEST
0xc3 CALLER
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc AND
0xcd PUSH2 0x8fc
0xd0 ADDRESS
0xd1 PUSH1 0x1
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 SUB
0xd9 AND
0xda BALANCE
0xdb SWAP1
0xdc DUP2
0xdd ISZERO
0xde MUL
0xdf SWAP1
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 PUSH1 0x0
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP4
0xea SUB
0xeb DUP2
0xec DUP6
0xed DUP9
0xee DUP9
0xef CALL
0xf0 SWAP4
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 ISZERO
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xc2: JUMPDEST 
0xc3: V72 = CALLER
0xc4: V73 = 0x1
0xc6: V74 = 0xa0
0xc8: V75 = 0x2
0xca: V76 = EXP 0x2 0xa0
0xcb: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0xcd: V79 = 0x8fc
0xd0: V80 = ADDRESS
0xd1: V81 = 0x1
0xd3: V82 = 0xa0
0xd5: V83 = 0x2
0xd7: V84 = EXP 0x2 0xa0
0xd8: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xda: V87 = BALANCE V86
0xdd: V88 = ISZERO V87
0xde: V89 = MUL V88 0x8fc
0xe0: V90 = 0x40
0xe2: V91 = M[0x40]
0xe3: V92 = 0x0
0xe5: V93 = 0x40
0xe7: V94 = M[0x40]
0xea: V95 = SUB V91 V94
0xef: V96 = CALL V89 V78 V87 V94 V95 V94 0x0
0xf5: V97 = ISZERO V96
0xf6: V98 = ISZERO V97
0xf7: V99 = 0xff
0xfa: JUMPI 0xff V98
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xc2]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V100 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: [0xc2]
Successors: [0x48]
---
0xff JUMPDEST
0x100 JUMP
---
0xff: JUMPDEST 
0x100: JUMP 0x48
---
Entry stack: [V13, 0x48]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x101
[0x101:0x10f]
---
Predecessors: [0x68]
Successors: [0x70]
---
0x101 JUMPDEST
0x102 PUSH1 0x1
0x104 SLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d AND
0x10e DUP2
0x10f JUMP
---
0x101: JUMPDEST 
0x102: V101 = 0x1
0x104: V102 = S[0x1]
0x105: V103 = 0x1
0x107: V104 = 0xa0
0x109: V105 = 0x2
0x10b: V106 = EXP 0x2 0xa0
0x10c: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10d: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x10f: JUMP 0x70
---
Entry stack: [V13, 0x70]
Stack pops: 1
Stack additions: [S0, V108]
Exit stack: [V13, 0x70, V108]

================================

Block 0x110
[0x110:0x119]
---
Predecessors: [0x8c]
Successors: [0x322]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 PUSH2 0x11a
0x116 PUSH2 0x322
0x119 JUMP
---
0x110: JUMPDEST 
0x111: V109 = 0x0
0x113: V110 = 0x11a
0x116: V111 = 0x322
0x119: JUMP 0x322
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: [0x0, 0x11a]
Exit stack: [V13, 0x48, 0x0, 0x11a]

================================

Block 0x11a
[0x11a:0x130]
---
Predecessors: [0x322]
Successors: [0x131, 0x135]
---
0x11a JUMPDEST
0x11b PUSH1 0x0
0x11d SLOAD
0x11e CALLER
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 SWAP1
0x128 DUP2
0x129 AND
0x12a SWAP2
0x12b AND
0x12c EQ
0x12d PUSH2 0x135
0x130 JUMPI
---
0x11a: JUMPDEST 
0x11b: V112 = 0x0
0x11d: V113 = S[0x0]
0x11e: V114 = CALLER
0x11f: V115 = 0x1
0x121: V116 = 0xa0
0x123: V117 = 0x2
0x125: V118 = EXP 0x2 0xa0
0x126: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x12b: V121 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V122 = EQ V121 V120
0x12d: V123 = 0x135
0x130: JUMPI 0x135 V122
---
Entry stack: [V13, 0x48, 0x0, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, 0x0, V305]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x11a]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V124 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, 0x0, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, 0x0, V305]

================================

Block 0x135
[0x135:0x1a0]
---
Predecessors: [0x11a]
Successors: [0x1a1]
---
0x135 JUMPDEST
0x136 ADDRESS
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f AND
0x140 BALANCE
0x141 SWAP2
0x142 POP
0x143 PUSH1 0x40
0x145 DUP1
0x146 MLOAD
0x147 SWAP1
0x148 DUP2
0x149 ADD
0x14a PUSH1 0x40
0x14c SWAP1
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x1
0x151 DUP1
0x152 DUP4
0x153 MSTORE
0x154 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000
0x175 PUSH1 0x20
0x177 DUP5
0x178 ADD
0x179 MSTORE
0x17a SLOAD
0x17b SWAP2
0x17c SWAP3
0x17d POP
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 SWAP1
0x187 SWAP2
0x188 AND
0x189 SWAP1
0x18a PUSH4 0xa6fbb05
0x18f SWAP1
0x190 CALLVALUE
0x191 SWAP1
0x192 DUP5
0x193 SWAP1
0x194 MLOAD
0x195 DUP1
0x196 DUP3
0x197 DUP1
0x198 MLOAD
0x199 SWAP1
0x19a PUSH1 0x20
0x19c ADD
0x19d SWAP1
0x19e DUP1
0x19f DUP4
0x1a0 DUP4
---
0x135: JUMPDEST 
0x136: V125 = ADDRESS
0x137: V126 = 0x1
0x139: V127 = 0xa0
0x13b: V128 = 0x2
0x13d: V129 = EXP 0x2 0xa0
0x13e: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x140: V132 = BALANCE V131
0x143: V133 = 0x40
0x146: V134 = M[0x40]
0x149: V135 = ADD V134 0x40
0x14a: V136 = 0x40
0x14e: M[0x40] = V135
0x14f: V137 = 0x1
0x153: M[V134] = 0x1
0x154: V138 = 0x3000000000000000000000000000000000000000000000000000000000000000
0x175: V139 = 0x20
0x178: V140 = ADD V134 0x20
0x179: M[V140] = 0x3000000000000000000000000000000000000000000000000000000000000000
0x17a: V141 = S[0x1]
0x17e: V142 = 0x1
0x180: V143 = 0xa0
0x182: V144 = 0x2
0x184: V145 = EXP 0x2 0xa0
0x185: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x188: V147 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V148 = 0xa6fbb05
0x190: V149 = CALLVALUE
0x194: V150 = M[0x40]
0x198: V151 = M[V134]
0x19a: V152 = 0x20
0x19c: V153 = ADD 0x20 V134
---
Entry stack: [V13, 0x48, 0x0, V305]
Stack pops: 2
Stack additions: [V132, V134, V147, 0xa6fbb05, V149, V134, V150, V150, V153, V151, V151, V150, V153]
Exit stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V134, V150, V150, V153, V151, V151, V150, V153]

================================

Block 0x1a1
[0x1a1:0x1a9]
---
Predecessors: [0x135, 0x1aa]
Successors: [0x1aa, 0x1c0]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x20
0x1a4 DUP4
0x1a5 LT
0x1a6 PUSH2 0x1c0
0x1a9 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V154 = 0x20
0x1a5: V155 = LT S2 0x20
0x1a6: V156 = 0x1c0
0x1a9: JUMPI 0x1c0 V155
---
Entry stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V134, V150, V150, V153, V151, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V134, V150, V150, V153, V151, S2, S1, S0]

================================

Block 0x1aa
[0x1aa:0x1bf]
---
Predecessors: [0x1a1]
Successors: [0x1a1]
---
0x1aa DUP1
0x1ab MLOAD
0x1ac DUP3
0x1ad MSTORE
0x1ae PUSH1 0x1f
0x1b0 NOT
0x1b1 SWAP1
0x1b2 SWAP3
0x1b3 ADD
0x1b4 SWAP2
0x1b5 PUSH1 0x20
0x1b7 SWAP2
0x1b8 DUP3
0x1b9 ADD
0x1ba SWAP2
0x1bb ADD
0x1bc PUSH2 0x1a1
0x1bf JUMP
---
0x1ab: V157 = M[S0]
0x1ad: M[S1] = V157
0x1ae: V158 = 0x1f
0x1b0: V159 = NOT 0x1f
0x1b3: V160 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1b5: V161 = 0x20
0x1b9: V162 = ADD 0x20 S1
0x1bb: V163 = ADD 0x20 S0
0x1bc: V164 = 0x1a1
0x1bf: JUMP 0x1a1
---
Entry stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V134, V150, V150, V153, V151, S2, S1, S0]
Stack pops: 3
Stack additions: [V160, V162, V163]
Exit stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V134, V150, V150, V153, V151, V160, V162, V163]

================================

Block 0x1c0
[0x1c0:0x21c]
---
Predecessors: [0x1a1]
Successors: [0x21d, 0x221]
---
0x1c0 JUMPDEST
0x1c1 PUSH1 0x1
0x1c3 DUP4
0x1c4 PUSH1 0x20
0x1c6 SUB
0x1c7 PUSH2 0x100
0x1ca EXP
0x1cb SUB
0x1cc DUP1
0x1cd NOT
0x1ce DUP3
0x1cf MLOAD
0x1d0 AND
0x1d1 DUP2
0x1d2 DUP5
0x1d3 MLOAD
0x1d4 AND
0x1d5 OR
0x1d6 SWAP1
0x1d7 SWAP3
0x1d8 MSTORE
0x1d9 POP
0x1da POP
0x1db POP
0x1dc SWAP2
0x1dd SWAP1
0x1de SWAP2
0x1df ADD
0x1e0 SWAP3
0x1e1 POP
0x1e2 PUSH1 0x40
0x1e4 SWAP2
0x1e5 POP
0x1e6 POP
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 SWAP2
0x1ea SUB
0x1eb SWAP1
0x1ec SHA3
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 PUSH1 0xe0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 PUSH4 0xffffffff
0x1fa DUP6
0x1fb AND
0x1fc MUL
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x4
0x201 DUP2
0x202 ADD
0x203 SWAP2
0x204 SWAP1
0x205 SWAP2
0x206 MSTORE
0x207 PUSH1 0x24
0x209 ADD
0x20a PUSH1 0x0
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 DUP4
0x211 SUB
0x212 DUP2
0x213 DUP6
0x214 DUP9
0x215 DUP1
0x216 EXTCODESIZE
0x217 ISZERO
0x218 ISZERO
0x219 PUSH2 0x221
0x21c JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V165 = 0x1
0x1c4: V166 = 0x20
0x1c6: V167 = SUB 0x20 S2
0x1c7: V168 = 0x100
0x1ca: V169 = EXP 0x100 V167
0x1cb: V170 = SUB V169 0x1
0x1cd: V171 = NOT V170
0x1cf: V172 = M[S0]
0x1d0: V173 = AND V172 V171
0x1d3: V174 = M[S1]
0x1d4: V175 = AND V174 V170
0x1d5: V176 = OR V175 V173
0x1d8: M[S1] = V176
0x1df: V177 = ADD V151 V150
0x1e2: V178 = 0x40
0x1e7: V179 = M[0x40]
0x1ea: V180 = SUB V177 V179
0x1ec: V181 = SHA3 V179 V180
0x1ed: V182 = 0x40
0x1ef: V183 = M[0x40]
0x1f0: V184 = 0xe0
0x1f2: V185 = 0x2
0x1f4: V186 = EXP 0x2 0xe0
0x1f5: V187 = 0xffffffff
0x1fb: V188 = AND 0xa6fbb05 0xffffffff
0x1fc: V189 = MUL 0xa6fbb05 0x100000000000000000000000000000000000000000000000000000000
0x1fe: M[V183] = 0xa6fbb0500000000000000000000000000000000000000000000000000000000
0x1ff: V190 = 0x4
0x202: V191 = ADD V183 0x4
0x206: M[V191] = V181
0x207: V192 = 0x24
0x209: V193 = ADD 0x24 V183
0x20a: V194 = 0x0
0x20c: V195 = 0x40
0x20e: V196 = M[0x40]
0x211: V197 = SUB V193 V196
0x216: V198 = EXTCODESIZE V147
0x217: V199 = ISZERO V198
0x218: V200 = ISZERO V199
0x219: V201 = 0x221
0x21c: JUMPI 0x221 V200
---
Entry stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V134, V150, V150, V153, V151, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, V193, 0x0, V196, V197, V196, S8, S10]
Exit stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V193, 0x0, V196, V197, V196, V149, V147]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x1c0]
Successors: []
---
0x21d PUSH1 0x0
0x21f DUP1
0x220 REVERT
---
0x21d: V202 = 0x0
0x220: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V193, 0x0, V196, V197, V196, V149, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V193, 0x0, V196, V197, V196, V149, V147]

================================

Block 0x221
[0x221:0x22d]
---
Predecessors: [0x1c0]
Successors: [0x22e, 0x232]
---
0x221 JUMPDEST
0x222 PUSH2 0x25ee
0x225 GAS
0x226 SUB
0x227 CALL
0x228 ISZERO
0x229 ISZERO
0x22a PUSH2 0x232
0x22d JUMPI
---
0x221: JUMPDEST 
0x222: V203 = 0x25ee
0x225: V204 = GAS
0x226: V205 = SUB V204 0x25ee
0x227: V206 = CALL V205 V147 V149 V196 V197 V196 0x0
0x228: V207 = ISZERO V206
0x229: V208 = ISZERO V207
0x22a: V209 = 0x232
0x22d: JUMPI 0x232 V208
---
Entry stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V193, 0x0, V196, V197, V196, V149, V147]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V193]

================================

Block 0x22e
[0x22e:0x231]
---
Predecessors: [0x221]
Successors: []
---
0x22e PUSH1 0x0
0x230 DUP1
0x231 REVERT
---
0x22e: V210 = 0x0
0x231: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V193]

================================

Block 0x232
[0x232:0x280]
---
Predecessors: [0x221]
Successors: [0x281]
---
0x232 JUMPDEST
0x233 POP
0x234 POP
0x235 PUSH1 0x1
0x237 SLOAD
0x238 PUSH1 0x1
0x23a PUSH1 0xa0
0x23c PUSH1 0x2
0x23e EXP
0x23f SUB
0x240 AND
0x241 SWAP2
0x242 POP
0x243 PUSH4 0x181ffc5f
0x248 SWAP1
0x249 POP
0x24a DUP3
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP3
0x24f PUSH4 0xffffffff
0x254 AND
0x255 PUSH1 0xe0
0x257 PUSH1 0x2
0x259 EXP
0x25a MUL
0x25b DUP2
0x25c MSTORE
0x25d PUSH1 0x4
0x25f ADD
0x260 DUP1
0x261 DUP1
0x262 PUSH1 0x20
0x264 ADD
0x265 DUP3
0x266 DUP2
0x267 SUB
0x268 DUP3
0x269 MSTORE
0x26a DUP4
0x26b DUP2
0x26c DUP2
0x26d MLOAD
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x20
0x272 ADD
0x273 SWAP2
0x274 POP
0x275 DUP1
0x276 MLOAD
0x277 SWAP1
0x278 PUSH1 0x20
0x27a ADD
0x27b SWAP1
0x27c DUP1
0x27d DUP4
0x27e DUP4
0x27f PUSH1 0x0
---
0x232: JUMPDEST 
0x235: V211 = 0x1
0x237: V212 = S[0x1]
0x238: V213 = 0x1
0x23a: V214 = 0xa0
0x23c: V215 = 0x2
0x23e: V216 = EXP 0x2 0xa0
0x23f: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x240: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x243: V219 = 0x181ffc5f
0x24b: V220 = 0x40
0x24d: V221 = M[0x40]
0x24f: V222 = 0xffffffff
0x254: V223 = AND 0xffffffff 0x181ffc5f
0x255: V224 = 0xe0
0x257: V225 = 0x2
0x259: V226 = EXP 0x2 0xe0
0x25a: V227 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x181ffc5f
0x25c: M[V221] = 0x181ffc5f00000000000000000000000000000000000000000000000000000000
0x25d: V228 = 0x4
0x25f: V229 = ADD 0x4 V221
0x262: V230 = 0x20
0x264: V231 = ADD 0x20 V229
0x267: V232 = SUB V231 V229
0x269: M[V229] = V232
0x26d: V233 = M[V134]
0x26f: M[V231] = V233
0x270: V234 = 0x20
0x272: V235 = ADD 0x20 V231
0x276: V236 = M[V134]
0x278: V237 = 0x20
0x27a: V238 = ADD 0x20 V134
0x27f: V239 = 0x0
---
Entry stack: [V13, 0x48, V132, V134, V147, 0xa6fbb05, V149, V193]
Stack pops: 5
Stack additions: [S4, V218, 0x181ffc5f, S4, V229, V229, V235, V238, V236, V236, V235, V238, 0x0]
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V235, V238, V236, V236, V235, V238, 0x0]

================================

Block 0x281
[0x281:0x289]
---
Predecessors: [0x232, 0x28a]
Successors: [0x28a, 0x299]
---
0x281 JUMPDEST
0x282 DUP4
0x283 DUP2
0x284 LT
0x285 ISZERO
0x286 PUSH2 0x299
0x289 JUMPI
---
0x281: JUMPDEST 
0x284: V240 = LT S0 V236
0x285: V241 = ISZERO V240
0x286: V242 = 0x299
0x289: JUMPI 0x299 V241
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V235, V238, V236, V236, V235, V238, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V235, V238, V236, V236, V235, V238, S0]

================================

Block 0x28a
[0x28a:0x298]
---
Predecessors: [0x281]
Successors: [0x281]
---
0x28a DUP1
0x28b DUP3
0x28c ADD
0x28d MLOAD
0x28e DUP4
0x28f DUP3
0x290 ADD
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 PUSH2 0x281
0x298 JUMP
---
0x28c: V243 = ADD V238 S0
0x28d: V244 = M[V243]
0x290: V245 = ADD S0 V235
0x291: M[V245] = V244
0x292: V246 = 0x20
0x294: V247 = ADD 0x20 S0
0x295: V248 = 0x281
0x298: JUMP 0x281
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V235, V238, V236, V236, V235, V238, S0]
Stack pops: 3
Stack additions: [S2, S1, V247]
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V235, V238, V236, V236, V235, V238, V247]

================================

Block 0x299
[0x299:0x2ac]
---
Predecessors: [0x281]
Successors: [0x2ad, 0x2c6]
---
0x299 JUMPDEST
0x29a POP
0x29b POP
0x29c POP
0x29d POP
0x29e SWAP1
0x29f POP
0x2a0 SWAP1
0x2a1 DUP2
0x2a2 ADD
0x2a3 SWAP1
0x2a4 PUSH1 0x1f
0x2a6 AND
0x2a7 DUP1
0x2a8 ISZERO
0x2a9 PUSH2 0x2c6
0x2ac JUMPI
---
0x299: JUMPDEST 
0x2a2: V249 = ADD V236 V235
0x2a4: V250 = 0x1f
0x2a6: V251 = AND 0x1f V236
0x2a8: V252 = ISZERO V251
0x2a9: V253 = 0x2c6
0x2ac: JUMPI 0x2c6 V252
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V235, V238, V236, V236, V235, V238, S0]
Stack pops: 7
Stack additions: [V249, V251]
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V249, V251]

================================

Block 0x2ad
[0x2ad:0x2c5]
---
Predecessors: [0x299]
Successors: [0x2c6]
---
0x2ad DUP1
0x2ae DUP3
0x2af SUB
0x2b0 DUP1
0x2b1 MLOAD
0x2b2 PUSH1 0x1
0x2b4 DUP4
0x2b5 PUSH1 0x20
0x2b7 SUB
0x2b8 PUSH2 0x100
0x2bb EXP
0x2bc SUB
0x2bd NOT
0x2be AND
0x2bf DUP2
0x2c0 MSTORE
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 SWAP2
0x2c5 POP
---
0x2af: V254 = SUB V249 V251
0x2b1: V255 = M[V254]
0x2b2: V256 = 0x1
0x2b5: V257 = 0x20
0x2b7: V258 = SUB 0x20 V251
0x2b8: V259 = 0x100
0x2bb: V260 = EXP 0x100 V258
0x2bc: V261 = SUB V260 0x1
0x2bd: V262 = NOT V261
0x2be: V263 = AND V262 V255
0x2c0: M[V254] = V263
0x2c1: V264 = 0x20
0x2c3: V265 = ADD 0x20 V254
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V249, V251]
Stack pops: 2
Stack additions: [V265, S0]
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, V265, V251]

================================

Block 0x2c6
[0x2c6:0x2df]
---
Predecessors: [0x299, 0x2ad]
Successors: [0x2e0, 0x2e4]
---
0x2c6 JUMPDEST
0x2c7 POP
0x2c8 SWAP3
0x2c9 POP
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x0
0x2ce PUSH1 0x40
0x2d0 MLOAD
0x2d1 DUP1
0x2d2 DUP4
0x2d3 SUB
0x2d4 DUP2
0x2d5 PUSH1 0x0
0x2d7 DUP8
0x2d8 DUP1
0x2d9 EXTCODESIZE
0x2da ISZERO
0x2db ISZERO
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x2c6: JUMPDEST 
0x2cc: V266 = 0x0
0x2ce: V267 = 0x40
0x2d0: V268 = M[0x40]
0x2d3: V269 = SUB S1 V268
0x2d5: V270 = 0x0
0x2d9: V271 = EXTCODESIZE V218
0x2da: V272 = ISZERO V271
0x2db: V273 = ISZERO V272
0x2dc: V274 = 0x2e4
0x2df: JUMPI 0x2e4 V273
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, V134, V229, V229, S1, V251]
Stack pops: 7
Stack additions: [S6, S5, S1, 0x0, V268, V269, V268, 0x0, S6]
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, S1, 0x0, V268, V269, V268, 0x0, V218]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x2c6]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V275 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, S6, 0x0, V268, V269, V268, 0x0, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, S6, 0x0, V268, V269, V268, 0x0, V218]

================================

Block 0x2e4
[0x2e4:0x2f0]
---
Predecessors: [0x2c6]
Successors: [0x2f1, 0x2f5]
---
0x2e4 JUMPDEST
0x2e5 PUSH2 0x2c6
0x2e8 GAS
0x2e9 SUB
0x2ea CALL
0x2eb ISZERO
0x2ec ISZERO
0x2ed PUSH2 0x2f5
0x2f0 JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V276 = 0x2c6
0x2e8: V277 = GAS
0x2e9: V278 = SUB V277 0x2c6
0x2ea: V279 = CALL V278 V218 0x0 V268 V269 V268 0x0
0x2eb: V280 = ISZERO V279
0x2ec: V281 = ISZERO V280
0x2ed: V282 = 0x2f5
0x2f0: JUMPI 0x2f5 V281
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, S6, 0x0, V268, V269, V268, 0x0, V218]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, S6]

================================

Block 0x2f1
[0x2f1:0x2f4]
---
Predecessors: [0x2e4]
Successors: []
---
0x2f1 PUSH1 0x0
0x2f3 DUP1
0x2f4 REVERT
---
0x2f1: V283 = 0x0
0x2f4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, S0]

================================

Block 0x2f5
[0x2f5:0x30a]
---
Predecessors: [0x2e4]
Successors: [0x30b, 0x30f]
---
0x2f5 JUMPDEST
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x1
0x2fb PUSH1 0xa0
0x2fd PUSH1 0x2
0x2ff EXP
0x300 SUB
0x301 ADDRESS
0x302 AND
0x303 BALANCE
0x304 DUP3
0x305 SWAP1
0x306 GT
0x307 PUSH2 0x30f
0x30a JUMPI
---
0x2f5: JUMPDEST 
0x2f9: V284 = 0x1
0x2fb: V285 = 0xa0
0x2fd: V286 = 0x2
0x2ff: V287 = EXP 0x2 0xa0
0x300: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x301: V289 = ADDRESS
0x302: V290 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x303: V291 = BALANCE V290
0x306: V292 = GT V291 V132
0x307: V293 = 0x30f
0x30a: JUMPI 0x30f V292
---
Entry stack: [V13, 0x48, V132, V134, V218, 0x181ffc5f, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V13, 0x48, V132, V134]

================================

Block 0x30b
[0x30b:0x30e]
---
Predecessors: [0x2f5]
Successors: []
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
---
0x30b: V294 = 0x0
0x30e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V132, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V132, V134]

================================

Block 0x30f
[0x30f:0x312]
---
Predecessors: [0x2f5]
Successors: [0x48]
---
0x30f JUMPDEST
0x310 POP
0x311 POP
0x312 JUMP
---
0x30f: JUMPDEST 
0x312: JUMP 0x48
---
Entry stack: [V13, 0x48, V132, V134]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x313
[0x313:0x321]
---
Predecessors: [0x9f]
Successors: [0x70]
---
0x313 JUMPDEST
0x314 PUSH1 0x0
0x316 SLOAD
0x317 PUSH1 0x1
0x319 PUSH1 0xa0
0x31b PUSH1 0x2
0x31d EXP
0x31e SUB
0x31f AND
0x320 DUP2
0x321 JUMP
---
0x313: JUMPDEST 
0x314: V295 = 0x0
0x316: V296 = S[0x0]
0x317: V297 = 0x1
0x319: V298 = 0xa0
0x31b: V299 = 0x2
0x31d: V300 = EXP 0x2 0xa0
0x31e: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31f: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x321: JUMP 0x70
---
Entry stack: [V13, 0x70]
Stack pops: 1
Stack additions: [S0, V302]
Exit stack: [V13, 0x70, V302]

================================

Block 0x322
[0x322:0x333]
---
Predecessors: [0x110]
Successors: [0x11a]
---
0x322 JUMPDEST
0x323 PUSH1 0x20
0x325 PUSH1 0x40
0x327 MLOAD
0x328 SWAP1
0x329 DUP2
0x32a ADD
0x32b PUSH1 0x40
0x32d MSTORE
0x32e PUSH1 0x0
0x330 DUP2
0x331 MSTORE
0x332 SWAP1
0x333 JUMP
---
0x322: JUMPDEST 
0x323: V303 = 0x20
0x325: V304 = 0x40
0x327: V305 = M[0x40]
0x32a: V306 = ADD V305 0x20
0x32b: V307 = 0x40
0x32d: M[0x40] = V306
0x32e: V308 = 0x0
0x331: M[V305] = 0x0
0x333: JUMP 0x11a
---
Entry stack: [V13, 0x48, 0x0, 0x11a]
Stack pops: 1
Stack additions: [V305]
Exit stack: [V13, 0x48, 0x0, V305]

================================

Block 0x334
[0x334:0x361]
---
Predecessors: []
Successors: []
---
0x334 STOP
0x335 LOG1
0x336 PUSH6 0x627a7a723058
0x33d SHA3
0x33e GT
0x33f MISSING 0xed
0x340 SWAP4
0x341 MISSING 0xfc
0x342 MISSING 0xde
0x343 PUSH2 0x125f
0x346 MISSING 0xeb
0x347 MISSING 0xd9
0x348 MISSING 0x5c
0x349 EQ
0x34a MISSING 0xec
0x34b DUP13
0x34c BYTE
0x34d MISSING 0xb4
0x34e MISSING 0xac
0x34f JUMPDEST
0x350 MISSING 0x4f
0x351 PUSH16 0x6b3c989dd7bd6de9bb7b6c4a0029
---
0x334: STOP 
0x335: LOG S0 S1 S2
0x336: V309 = 0x627a7a723058
0x33d: V310 = SHA3 0x627a7a723058 S3
0x33e: V311 = GT V310 S4
0x33f: MISSING 0xed
0x341: MISSING 0xfc
0x342: MISSING 0xde
0x343: V312 = 0x125f
0x346: MISSING 0xeb
0x347: MISSING 0xd9
0x348: MISSING 0x5c
0x349: V313 = EQ S0 S1
0x34a: MISSING 0xec
0x34c: V314 = BYTE S12 S0
0x34d: MISSING 0xb4
0x34e: MISSING 0xac
0x34f: JUMPDEST 
0x350: MISSING 0x4f
0x351: V315 = 0x6b3c989dd7bd6de9bb7b6c4a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V311, S4, S1, S2, S3, S0, 0x125f, V313, V314, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, 0x6b3c989dd7bd6de9bb7b6c4a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x4a
Exit block: 0x48
Body: 0x48, 0x4a, 0x51, 0x55, 0xa7, 0xbe, 0xc2, 0xfb, 0xff

Function 1:
Public function signature: 0x85295877
Entry block: 0x5d
Exit block: 0x70
Body: 0x5d, 0x64, 0x68, 0x70, 0x101

Function 2:
Public function signature: 0x9e5faafc
Entry block: 0x8c
Exit block: 0x48
Body: 0x48, 0x8c, 0x110, 0x11a, 0x131, 0x135, 0x1a1, 0x1aa, 0x1c0, 0x21d, 0x221, 0x22e, 0x232, 0x281, 0x28a, 0x299, 0x2ad, 0x2c6, 0x2e0, 0x2e4, 0x2f1, 0x2f5, 0x30b, 0x30f, 0x322

Function 3:
Public function signature: 0xee97f7f3
Entry block: 0x94
Exit block: 0x70
Body: 0x70, 0x94, 0x9b, 0x9f, 0x313

Function 4:
Public fallback function
Entry block: 0x48
Exit block: 0x48
Body: 0x48

