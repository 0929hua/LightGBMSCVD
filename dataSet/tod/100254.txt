Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x14b]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x13af4035
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x14b
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x13af4035
0x20: V14 = EQ V12 0x13af4035
0x21: V15 = 0x14b
0x24: JUMPI 0x14b V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x169]
---
0x25 DUP1
0x26 PUSH4 0x457f4d41
0x2b EQ
0x2c PUSH2 0x169
0x2f JUMPI
---
0x26: V16 = 0x457f4d41
0x2b: V17 = EQ 0x457f4d41 V12
0x2c: V18 = 0x169
0x2f: JUMPI 0x169 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x195]
---
0x30 DUP1
0x31 PUSH4 0x83197ef0
0x36 EQ
0x37 PUSH2 0x195
0x3a JUMPI
---
0x31: V19 = 0x83197ef0
0x36: V20 = EQ 0x83197ef0 V12
0x37: V21 = 0x195
0x3a: JUMPI 0x195 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1a7]
---
0x3b DUP1
0x3c PUSH4 0x8da5cb5b
0x41 EQ
0x42 PUSH2 0x1a7
0x45 JUMPI
---
0x3c: V22 = 0x8da5cb5b
0x41: V23 = EQ 0x8da5cb5b V12
0x42: V24 = 0x1a7
0x45: JUMPI 0x1a7 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1d3]
---
0x46 DUP1
0x47 PUSH4 0x8edeb15d
0x4c EQ
0x4d PUSH2 0x1d3
0x50 JUMPI
---
0x47: V25 = 0x8edeb15d
0x4c: V26 = EQ 0x8edeb15d V12
0x4d: V27 = 0x1d3
0x50: JUMPI 0x1d3 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1f5]
---
0x51 DUP1
0x52 PUSH4 0x943dfef1
0x57 EQ
0x58 PUSH2 0x1f5
0x5b JUMPI
---
0x52: V28 = 0x943dfef1
0x57: V29 = EQ 0x943dfef1 V12
0x58: V30 = 0x1f5
0x5b: JUMPI 0x1f5 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x217]
---
0x5c DUP1
0x5d PUSH4 0xd31fdffd
0x62 EQ
0x63 PUSH2 0x217
0x66 JUMPI
---
0x5d: V31 = 0xd31fdffd
0x62: V32 = EQ 0xd31fdffd V12
0x63: V33 = 0x217
0x66: JUMPI 0x217 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x235]
---
0x67 DUP1
0x68 PUSH4 0xea8a1af0
0x6d EQ
0x6e PUSH2 0x235
0x71 JUMPI
---
0x68: V34 = 0xea8a1af0
0x6d: V35 = EQ 0xea8a1af0 V12
0x6e: V36 = 0x235
0x71: JUMPI 0x235 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x247]
---
0x72 DUP1
0x73 PUSH4 0xfc0c546a
0x78 EQ
0x79 PUSH2 0x247
0x7c JUMPI
---
0x73: V37 = 0xfc0c546a
0x78: V38 = EQ 0xfc0c546a V12
0x79: V39 = 0x247
0x7c: JUMPI 0x247 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x149
---
0x7d: JUMPDEST 
0x7e: V40 = 0x149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x149]
Exit stack: [V12, 0x149]

================================

Block 0x81
[0x81:0x8a]
---
Predecessors: [0x7d]
Successors: [0x8b, 0x8f]
---
0x81 JUMPDEST
0x82 PUSH1 0x4
0x84 SLOAD
0x85 CALLVALUE
0x86 EQ
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x81: JUMPDEST 
0x82: V41 = 0x4
0x84: V42 = S[0x4]
0x85: V43 = CALLVALUE
0x86: V44 = EQ V43 V42
0x87: V45 = 0x8f
0x8a: JUMPI 0x8f V44
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x81]
Successors: []
---
0x8b PUSH2 0x0
0x8e JUMP
---
0x8b: V46 = 0x0
0x8e: THROW 
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x8f
[0x8f:0xf0]
---
Predecessors: [0x81]
Successors: [0xf1, 0xf2]
---
0x8f JUMPDEST
0x90 PUSH1 0x2
0x92 SLOAD
0x93 PUSH1 0x3
0x95 SLOAD
0x96 PUSH1 0x40
0x98 DUP1
0x99 MLOAD
0x9a PUSH1 0x0
0x9c PUSH1 0x20
0x9e SWAP2
0x9f DUP3
0xa0 ADD
0xa1 DUP2
0xa2 SWAP1
0xa3 MSTORE
0xa4 DUP3
0xa5 MLOAD
0xa6 PUSH1 0xe0
0xa8 PUSH1 0x2
0xaa EXP
0xab PUSH4 0xa9059cbb
0xb0 MUL
0xb1 DUP2
0xb2 MSTORE
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb CALLER
0xbc DUP2
0xbd AND
0xbe PUSH1 0x4
0xc0 DUP4
0xc1 ADD
0xc2 MSTORE
0xc3 PUSH1 0x24
0xc5 DUP3
0xc6 ADD
0xc7 SWAP6
0xc8 SWAP1
0xc9 SWAP6
0xca MSTORE
0xcb SWAP3
0xcc MLOAD
0xcd SWAP4
0xce SWAP1
0xcf SWAP5
0xd0 AND
0xd1 SWAP4
0xd2 PUSH4 0xa9059cbb
0xd7 SWAP4
0xd8 PUSH1 0x44
0xda DUP1
0xdb DUP6
0xdc ADD
0xdd SWAP5
0xde SWAP2
0xdf SWAP3
0xe0 SWAP2
0xe1 DUP4
0xe2 SWAP1
0xe3 SUB
0xe4 ADD
0xe5 SWAP1
0xe6 DUP3
0xe7 SWAP1
0xe8 DUP8
0xe9 DUP1
0xea EXTCODESIZE
0xeb ISZERO
0xec ISZERO
0xed PUSH2 0xf2
0xf0 JUMPI
---
0x8f: JUMPDEST 
0x90: V47 = 0x2
0x92: V48 = S[0x2]
0x93: V49 = 0x3
0x95: V50 = S[0x3]
0x96: V51 = 0x40
0x99: V52 = M[0x40]
0x9a: V53 = 0x0
0x9c: V54 = 0x20
0xa0: V55 = ADD 0x20 V52
0xa3: M[V55] = 0x0
0xa5: V56 = M[0x40]
0xa6: V57 = 0xe0
0xa8: V58 = 0x2
0xaa: V59 = EXP 0x2 0xe0
0xab: V60 = 0xa9059cbb
0xb0: V61 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb2: M[V56] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb3: V62 = 0x1
0xb5: V63 = 0xa0
0xb7: V64 = 0x2
0xb9: V65 = EXP 0x2 0xa0
0xba: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V67 = CALLER
0xbd: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xbe: V69 = 0x4
0xc1: V70 = ADD V56 0x4
0xc2: M[V70] = V68
0xc3: V71 = 0x24
0xc6: V72 = ADD V56 0x24
0xca: M[V72] = V50
0xcc: V73 = M[0x40]
0xd0: V74 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V75 = 0xa9059cbb
0xd8: V76 = 0x44
0xdc: V77 = ADD V56 0x44
0xe3: V78 = SUB V56 V73
0xe4: V79 = ADD V78 0x44
0xea: V80 = EXTCODESIZE V74
0xeb: V81 = ISZERO V80
0xec: V82 = ISZERO V81
0xed: V83 = 0xf2
0xf0: JUMPI 0xf2 V82
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: [V74, 0xa9059cbb, V77, 0x20, V73, V79, V73, 0x0, V74]
Exit stack: [V12, 0x149, V74, 0xa9059cbb, V77, 0x20, V73, V79, V73, 0x0, V74]

================================

Block 0xf1
[0xf1:0xf1]
---
Predecessors: [0x8f]
Successors: []
---
0xf1 INVALID
---
0xf1: INVALID 
---
Entry stack: [V12, 0x149, V74, 0xa9059cbb, V77, 0x20, V73, V79, V73, 0x0, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V74, 0xa9059cbb, V77, 0x20, V73, V79, V73, 0x0, V74]

================================

Block 0xf2
[0xf2:0xfd]
---
Predecessors: [0x8f]
Successors: [0xfe, 0xff]
---
0xf2 JUMPDEST
0xf3 PUSH1 0x32
0xf5 GAS
0xf6 SUB
0xf7 CALL
0xf8 ISZERO
0xf9 ISZERO
0xfa PUSH2 0xff
0xfd JUMPI
---
0xf2: JUMPDEST 
0xf3: V84 = 0x32
0xf5: V85 = GAS
0xf6: V86 = SUB V85 0x32
0xf7: V87 = CALL V86 V74 0x0 V73 V79 V73 0x20
0xf8: V88 = ISZERO V87
0xf9: V89 = ISZERO V88
0xfa: V90 = 0xff
0xfd: JUMPI 0xff V89
---
Entry stack: [V12, 0x149, V74, 0xa9059cbb, V77, 0x20, V73, V79, V73, 0x0, V74]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x149, V74, 0xa9059cbb, V77]

================================

Block 0xfe
[0xfe:0xfe]
---
Predecessors: [0xf2]
Successors: []
---
0xfe INVALID
---
0xfe: INVALID 
---
Entry stack: [V12, 0x149, V74, 0xa9059cbb, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V74, 0xa9059cbb, V77]

================================

Block 0xff
[0xff:0x10d]
---
Predecessors: [0xf2]
Successors: [0x10e, 0x112]
---
0xff JUMPDEST
0x100 POP
0x101 POP
0x102 PUSH1 0x40
0x104 MLOAD
0x105 MLOAD
0x106 ISZERO
0x107 ISZERO
0x108 SWAP1
0x109 POP
0x10a PUSH2 0x112
0x10d JUMPI
---
0xff: JUMPDEST 
0x102: V91 = 0x40
0x104: V92 = M[0x40]
0x105: V93 = M[V92]
0x106: V94 = ISZERO V93
0x107: V95 = ISZERO V94
0x10a: V96 = 0x112
0x10d: JUMPI 0x112 V95
---
Entry stack: [V12, 0x149, V74, 0xa9059cbb, V77]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0xff]
Successors: []
---
0x10e PUSH2 0x0
0x111 JUMP
---
0x10e: V97 = 0x0
0x111: THROW 
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x112
[0x112:0x141]
---
Predecessors: [0xff]
Successors: [0x142, 0x146]
---
0x112 JUMPDEST
0x113 PUSH1 0x0
0x115 DUP1
0x116 SLOAD
0x117 PUSH1 0x40
0x119 MLOAD
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 SWAP1
0x123 SWAP2
0x124 AND
0x125 SWAP2
0x126 CALLVALUE
0x127 DUP1
0x128 ISZERO
0x129 PUSH2 0x8fc
0x12c MUL
0x12d SWAP3
0x12e SWAP1
0x12f SWAP2
0x130 DUP2
0x131 DUP2
0x132 DUP2
0x133 DUP6
0x134 DUP9
0x135 DUP9
0x136 CALL
0x137 SWAP4
0x138 POP
0x139 POP
0x13a POP
0x13b POP
0x13c ISZERO
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x112: JUMPDEST 
0x113: V98 = 0x0
0x116: V99 = S[0x0]
0x117: V100 = 0x40
0x119: V101 = M[0x40]
0x11a: V102 = 0x1
0x11c: V103 = 0xa0
0x11e: V104 = 0x2
0x120: V105 = EXP 0x2 0xa0
0x121: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V107 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x126: V108 = CALLVALUE
0x128: V109 = ISZERO V108
0x129: V110 = 0x8fc
0x12c: V111 = MUL 0x8fc V109
0x136: V112 = CALL V111 V107 V108 V101 0x0 V101 0x0
0x13c: V113 = ISZERO V112
0x13d: V114 = ISZERO V113
0x13e: V115 = 0x146
0x141: JUMPI 0x146 V114
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x112]
Successors: []
---
0x142 PUSH2 0x0
0x145 JUMP
---
0x142: V116 = 0x0
0x145: THROW 
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x146
[0x146:0x146]
---
Predecessors: [0x112, 0x3e3]
Successors: [0x147]
---
0x146 JUMPDEST
---
0x146: JUMPDEST 
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x147
[0x147:0x148]
---
Predecessors: [0x146]
Successors: [0x149]
---
0x147 JUMPDEST
0x148 JUMP
---
0x147: JUMPDEST 
0x148: JUMP 0x149
---
Entry stack: [V12, 0x149]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x149
[0x149:0x14a]
---
Predecessors: [0x147, 0x2b8, 0x354]
Successors: []
---
0x149 JUMPDEST
0x14a STOP
---
0x149: JUMPDEST 
0x14a: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14b
[0x14b:0x151]
---
Predecessors: [0xb]
Successors: [0x152, 0x153]
---
0x14b JUMPDEST
0x14c CALLVALUE
0x14d ISZERO
0x14e PUSH2 0x153
0x151 JUMPI
---
0x14b: JUMPDEST 
0x14c: V117 = CALLVALUE
0x14d: V118 = ISZERO V117
0x14e: V119 = 0x153
0x151: JUMPI 0x153 V118
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x152
[0x152:0x152]
---
Predecessors: [0x14b]
Successors: []
---
0x152 INVALID
---
0x152: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x153
[0x153:0x166]
---
Predecessors: [0x14b]
Successors: [0x273]
---
0x153 JUMPDEST
0x154 PUSH2 0x149
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f PUSH1 0x4
0x161 CALLDATALOAD
0x162 AND
0x163 PUSH2 0x273
0x166 JUMP
---
0x153: JUMPDEST 
0x154: V120 = 0x149
0x157: V121 = 0x1
0x159: V122 = 0xa0
0x15b: V123 = 0x2
0x15d: V124 = EXP 0x2 0xa0
0x15e: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V126 = 0x4
0x161: V127 = CALLDATALOAD 0x4
0x162: V128 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x163: V129 = 0x273
0x166: JUMP 0x273
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x149, V128]
Exit stack: [V12, 0x149, V128]

================================

Block 0x167
[0x167:0x168]
---
Predecessors: []
Successors: []
---
0x167 JUMPDEST
0x168 STOP
---
0x167: JUMPDEST 
0x168: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x169
[0x169:0x16f]
---
Predecessors: [0x25]
Successors: [0x170, 0x171]
---
0x169 JUMPDEST
0x16a CALLVALUE
0x16b ISZERO
0x16c PUSH2 0x171
0x16f JUMPI
---
0x169: JUMPDEST 
0x16a: V130 = CALLVALUE
0x16b: V131 = ISZERO V130
0x16c: V132 = 0x171
0x16f: JUMPI 0x171 V131
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x170
[0x170:0x170]
---
Predecessors: [0x169]
Successors: []
---
0x170 INVALID
---
0x170: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x171
[0x171:0x178]
---
Predecessors: [0x169]
Successors: [0x2bb]
---
0x171 JUMPDEST
0x172 PUSH2 0x179
0x175 PUSH2 0x2bb
0x178 JUMP
---
0x171: JUMPDEST 
0x172: V133 = 0x179
0x175: V134 = 0x2bb
0x178: JUMP 0x2bb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V12, 0x179]

================================

Block 0x179
[0x179:0x194]
---
Predecessors: [0x2bb, 0x2f4, 0x3fa]
Successors: []
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c DUP1
0x17d MLOAD
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 SWAP1
0x187 SWAP3
0x188 AND
0x189 DUP3
0x18a MSTORE
0x18b MLOAD
0x18c SWAP1
0x18d DUP2
0x18e SWAP1
0x18f SUB
0x190 PUSH1 0x20
0x192 ADD
0x193 SWAP1
0x194 RETURN
---
0x179: JUMPDEST 
0x17a: V135 = 0x40
0x17d: V136 = M[0x40]
0x17e: V137 = 0x1
0x180: V138 = 0xa0
0x182: V139 = 0x2
0x184: V140 = EXP 0x2 0xa0
0x185: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x188: V142 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x18a: M[V136] = V142
0x18b: V143 = M[0x40]
0x18f: V144 = SUB V136 V143
0x190: V145 = 0x20
0x192: V146 = ADD 0x20 V144
0x194: RETURN V143 V146
---
Entry stack: [V12, 0x179, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x179]

================================

Block 0x195
[0x195:0x19b]
---
Predecessors: [0x30]
Successors: [0x19c, 0x19d]
---
0x195 JUMPDEST
0x196 CALLVALUE
0x197 ISZERO
0x198 PUSH2 0x19d
0x19b JUMPI
---
0x195: JUMPDEST 
0x196: V147 = CALLVALUE
0x197: V148 = ISZERO V147
0x198: V149 = 0x19d
0x19b: JUMPI 0x19d V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19c
[0x19c:0x19c]
---
Predecessors: [0x195]
Successors: []
---
0x19c INVALID
---
0x19c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19d
[0x19d:0x1a4]
---
Predecessors: [0x195]
Successors: [0x2ca]
---
0x19d JUMPDEST
0x19e PUSH2 0x149
0x1a1 PUSH2 0x2ca
0x1a4 JUMP
---
0x19d: JUMPDEST 
0x19e: V150 = 0x149
0x1a1: V151 = 0x2ca
0x1a4: JUMP 0x2ca
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x149]
Exit stack: [V12, 0x149]

================================

Block 0x1a5
[0x1a5:0x1a6]
---
Predecessors: []
Successors: []
---
0x1a5 JUMPDEST
0x1a6 STOP
---
0x1a5: JUMPDEST 
0x1a6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0x3b]
Successors: [0x1ae, 0x1af]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1af
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V152 = CALLVALUE
0x1a9: V153 = ISZERO V152
0x1aa: V154 = 0x1af
0x1ad: JUMPI 0x1af V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ae
[0x1ae:0x1ae]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae INVALID
---
0x1ae: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a7]
Successors: [0x2f4]
---
0x1af JUMPDEST
0x1b0 PUSH2 0x179
0x1b3 PUSH2 0x2f4
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V155 = 0x179
0x1b3: V156 = 0x2f4
0x1b6: JUMP 0x2f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V12, 0x179]

================================

Block 0x1b7
[0x1b7:0x1d2]
---
Predecessors: []
Successors: []
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba DUP1
0x1bb MLOAD
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 SWAP1
0x1c5 SWAP3
0x1c6 AND
0x1c7 DUP3
0x1c8 MSTORE
0x1c9 MLOAD
0x1ca SWAP1
0x1cb DUP2
0x1cc SWAP1
0x1cd SUB
0x1ce PUSH1 0x20
0x1d0 ADD
0x1d1 SWAP1
0x1d2 RETURN
---
0x1b7: JUMPDEST 
0x1b8: V157 = 0x40
0x1bb: V158 = M[0x40]
0x1bc: V159 = 0x1
0x1be: V160 = 0xa0
0x1c0: V161 = 0x2
0x1c2: V162 = EXP 0x2 0xa0
0x1c3: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V164 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: M[V158] = V164
0x1c9: V165 = M[0x40]
0x1cd: V166 = SUB V158 V165
0x1ce: V167 = 0x20
0x1d0: V168 = ADD 0x20 V166
0x1d2: RETURN V165 V168
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d3
[0x1d3:0x1d9]
---
Predecessors: [0x46]
Successors: [0x1da, 0x1db]
---
0x1d3 JUMPDEST
0x1d4 CALLVALUE
0x1d5 ISZERO
0x1d6 PUSH2 0x1db
0x1d9 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V169 = CALLVALUE
0x1d5: V170 = ISZERO V169
0x1d6: V171 = 0x1db
0x1d9: JUMPI 0x1db V170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1da
[0x1da:0x1da]
---
Predecessors: [0x1d3]
Successors: []
---
0x1da INVALID
---
0x1da: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x1d3]
Successors: [0x303]
---
0x1db JUMPDEST
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x303
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V172 = 0x1e3
0x1df: V173 = 0x303
0x1e2: JUMP 0x303
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V12, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x1f4]
---
Predecessors: [0x303, 0x309]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 SWAP2
0x1e9 DUP3
0x1ea MSTORE
0x1eb MLOAD
0x1ec SWAP1
0x1ed DUP2
0x1ee SWAP1
0x1ef SUB
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP1
0x1f4 RETURN
---
0x1e3: JUMPDEST 
0x1e4: V174 = 0x40
0x1e7: V175 = M[0x40]
0x1ea: M[V175] = S0
0x1eb: V176 = M[0x40]
0x1ef: V177 = SUB V175 V176
0x1f0: V178 = 0x20
0x1f2: V179 = ADD 0x20 V177
0x1f4: RETURN V176 V179
---
Entry stack: [V12, 0x1e3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e3]

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x51]
Successors: [0x1fc, 0x1fd]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 ISZERO
0x1f8 PUSH2 0x1fd
0x1fb JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V180 = CALLVALUE
0x1f7: V181 = ISZERO V180
0x1f8: V182 = 0x1fd
0x1fb: JUMPI 0x1fd V181
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x1fc]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fc INVALID
---
0x1fc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x1f5]
Successors: [0x309]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x1e3
0x201 PUSH2 0x309
0x204 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V183 = 0x1e3
0x201: V184 = 0x309
0x204: JUMP 0x309
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V12, 0x1e3]

================================

Block 0x205
[0x205:0x216]
---
Predecessors: []
Successors: []
---
0x205 JUMPDEST
0x206 PUSH1 0x40
0x208 DUP1
0x209 MLOAD
0x20a SWAP2
0x20b DUP3
0x20c MSTORE
0x20d MLOAD
0x20e SWAP1
0x20f DUP2
0x210 SWAP1
0x211 SUB
0x212 PUSH1 0x20
0x214 ADD
0x215 SWAP1
0x216 RETURN
---
0x205: JUMPDEST 
0x206: V185 = 0x40
0x209: V186 = M[0x40]
0x20c: M[V186] = S0
0x20d: V187 = M[0x40]
0x211: V188 = SUB V186 V187
0x212: V189 = 0x20
0x214: V190 = ADD 0x20 V188
0x216: RETURN V187 V190
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x217
[0x217:0x21d]
---
Predecessors: [0x5c]
Successors: [0x21e, 0x21f]
---
0x217 JUMPDEST
0x218 CALLVALUE
0x219 ISZERO
0x21a PUSH2 0x21f
0x21d JUMPI
---
0x217: JUMPDEST 
0x218: V191 = CALLVALUE
0x219: V192 = ISZERO V191
0x21a: V193 = 0x21f
0x21d: JUMPI 0x21f V192
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21e
[0x21e:0x21e]
---
Predecessors: [0x217]
Successors: []
---
0x21e INVALID
---
0x21e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21f
[0x21f:0x232]
---
Predecessors: [0x217]
Successors: [0x30f]
---
0x21f JUMPDEST
0x220 PUSH2 0x149
0x223 PUSH1 0x1
0x225 PUSH1 0xa0
0x227 PUSH1 0x2
0x229 EXP
0x22a SUB
0x22b PUSH1 0x4
0x22d CALLDATALOAD
0x22e AND
0x22f PUSH2 0x30f
0x232 JUMP
---
0x21f: JUMPDEST 
0x220: V194 = 0x149
0x223: V195 = 0x1
0x225: V196 = 0xa0
0x227: V197 = 0x2
0x229: V198 = EXP 0x2 0xa0
0x22a: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22b: V200 = 0x4
0x22d: V201 = CALLDATALOAD 0x4
0x22e: V202 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V203 = 0x30f
0x232: JUMP 0x30f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x149, V202]
Exit stack: [V12, 0x149, V202]

================================

Block 0x233
[0x233:0x234]
---
Predecessors: []
Successors: []
---
0x233 JUMPDEST
0x234 STOP
---
0x233: JUMPDEST 
0x234: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x235
[0x235:0x23b]
---
Predecessors: [0x67]
Successors: [0x23c, 0x23d]
---
0x235 JUMPDEST
0x236 CALLVALUE
0x237 ISZERO
0x238 PUSH2 0x23d
0x23b JUMPI
---
0x235: JUMPDEST 
0x236: V204 = CALLVALUE
0x237: V205 = ISZERO V204
0x238: V206 = 0x23d
0x23b: JUMPI 0x23d V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23c
[0x23c:0x23c]
---
Predecessors: [0x235]
Successors: []
---
0x23c INVALID
---
0x23c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23d
[0x23d:0x244]
---
Predecessors: [0x235]
Successors: [0x357]
---
0x23d JUMPDEST
0x23e PUSH2 0x149
0x241 PUSH2 0x357
0x244 JUMP
---
0x23d: JUMPDEST 
0x23e: V207 = 0x149
0x241: V208 = 0x357
0x244: JUMP 0x357
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x149]
Exit stack: [V12, 0x149]

================================

Block 0x245
[0x245:0x246]
---
Predecessors: []
Successors: []
---
0x245 JUMPDEST
0x246 STOP
---
0x245: JUMPDEST 
0x246: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x247
[0x247:0x24d]
---
Predecessors: [0x72]
Successors: [0x24e, 0x24f]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 ISZERO
0x24a PUSH2 0x24f
0x24d JUMPI
---
0x247: JUMPDEST 
0x248: V209 = CALLVALUE
0x249: V210 = ISZERO V209
0x24a: V211 = 0x24f
0x24d: JUMPI 0x24f V210
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24e
[0x24e:0x24e]
---
Predecessors: [0x247]
Successors: []
---
0x24e INVALID
---
0x24e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24f
[0x24f:0x256]
---
Predecessors: [0x247]
Successors: [0x3fa]
---
0x24f JUMPDEST
0x250 PUSH2 0x179
0x253 PUSH2 0x3fa
0x256 JUMP
---
0x24f: JUMPDEST 
0x250: V212 = 0x179
0x253: V213 = 0x3fa
0x256: JUMP 0x3fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V12, 0x179]

================================

Block 0x257
[0x257:0x272]
---
Predecessors: []
Successors: []
---
0x257 JUMPDEST
0x258 PUSH1 0x40
0x25a DUP1
0x25b MLOAD
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 SWAP1
0x265 SWAP3
0x266 AND
0x267 DUP3
0x268 MSTORE
0x269 MLOAD
0x26a SWAP1
0x26b DUP2
0x26c SWAP1
0x26d SUB
0x26e PUSH1 0x20
0x270 ADD
0x271 SWAP1
0x272 RETURN
---
0x257: JUMPDEST 
0x258: V214 = 0x40
0x25b: V215 = M[0x40]
0x25c: V216 = 0x1
0x25e: V217 = 0xa0
0x260: V218 = 0x2
0x262: V219 = EXP 0x2 0xa0
0x263: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V221 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x268: M[V215] = V221
0x269: V222 = M[0x40]
0x26d: V223 = SUB V215 V222
0x26e: V224 = 0x20
0x270: V225 = ADD 0x20 V223
0x272: RETURN V222 V225
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x273
[0x273:0x289]
---
Predecessors: [0x153]
Successors: [0x28a, 0x28e]
---
0x273 JUMPDEST
0x274 PUSH1 0x0
0x276 SLOAD
0x277 CALLER
0x278 PUSH1 0x1
0x27a PUSH1 0xa0
0x27c PUSH1 0x2
0x27e EXP
0x27f SUB
0x280 SWAP1
0x281 DUP2
0x282 AND
0x283 SWAP2
0x284 AND
0x285 EQ
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x273: JUMPDEST 
0x274: V226 = 0x0
0x276: V227 = S[0x0]
0x277: V228 = CALLER
0x278: V229 = 0x1
0x27a: V230 = 0xa0
0x27c: V231 = 0x2
0x27e: V232 = EXP 0x2 0xa0
0x27f: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x282: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x284: V235 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x285: V236 = EQ V235 V234
0x286: V237 = 0x28e
0x289: JUMPI 0x28e V236
---
Entry stack: [V12, 0x149, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V128]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x273]
Successors: []
---
0x28a PUSH2 0x0
0x28d JUMP
---
0x28a: V238 = 0x0
0x28d: THROW 
---
Entry stack: [V12, 0x149, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V128]

================================

Block 0x28e
[0x28e:0x2b6]
---
Predecessors: [0x273]
Successors: [0x2b7]
---
0x28e JUMPDEST
0x28f PUSH1 0x0
0x291 DUP1
0x292 SLOAD
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 NOT
0x2a9 AND
0x2aa PUSH1 0x1
0x2ac PUSH1 0xa0
0x2ae PUSH1 0x2
0x2b0 EXP
0x2b1 SUB
0x2b2 DUP4
0x2b3 AND
0x2b4 OR
0x2b5 SWAP1
0x2b6 SSTORE
---
0x28e: JUMPDEST 
0x28f: V239 = 0x0
0x292: V240 = S[0x0]
0x293: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V242 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V243 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V240
0x2aa: V244 = 0x1
0x2ac: V245 = 0xa0
0x2ae: V246 = 0x2
0x2b0: V247 = EXP 0x2 0xa0
0x2b1: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V249 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x2b4: V250 = OR V249 V243
0x2b6: S[0x0] = V250
---
Entry stack: [V12, 0x149, V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x149, V128]

================================

Block 0x2b7
[0x2b7:0x2b7]
---
Predecessors: [0x28e]
Successors: [0x2b8]
---
0x2b7 JUMPDEST
---
0x2b7: JUMPDEST 
---
Entry stack: [V12, 0x149, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V128]

================================

Block 0x2b8
[0x2b8:0x2ba]
---
Predecessors: [0x2b7]
Successors: [0x149]
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba JUMP
---
0x2b8: JUMPDEST 
0x2ba: JUMP 0x149
---
Entry stack: [V12, 0x149, V128]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bb
[0x2bb:0x2c9]
---
Predecessors: [0x171]
Successors: [0x179]
---
0x2bb JUMPDEST
0x2bc PUSH1 0x1
0x2be SLOAD
0x2bf PUSH1 0x1
0x2c1 PUSH1 0xa0
0x2c3 PUSH1 0x2
0x2c5 EXP
0x2c6 SUB
0x2c7 AND
0x2c8 DUP2
0x2c9 JUMP
---
0x2bb: JUMPDEST 
0x2bc: V251 = 0x1
0x2be: V252 = S[0x1]
0x2bf: V253 = 0x1
0x2c1: V254 = 0xa0
0x2c3: V255 = 0x2
0x2c5: V256 = EXP 0x2 0xa0
0x2c6: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c7: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x2c9: JUMP 0x179
---
Entry stack: [V12, 0x179]
Stack pops: 1
Stack additions: [S0, V258]
Exit stack: [V12, 0x179, V258]

================================

Block 0x2ca
[0x2ca:0x2e0]
---
Predecessors: [0x19d]
Successors: [0x2e1, 0x2e5]
---
0x2ca JUMPDEST
0x2cb PUSH1 0x1
0x2cd SLOAD
0x2ce CALLER
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 SWAP1
0x2d8 DUP2
0x2d9 AND
0x2da SWAP2
0x2db AND
0x2dc EQ
0x2dd PUSH2 0x2e5
0x2e0 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V259 = 0x1
0x2cd: V260 = S[0x1]
0x2ce: V261 = CALLER
0x2cf: V262 = 0x1
0x2d1: V263 = 0xa0
0x2d3: V264 = 0x2
0x2d5: V265 = EXP 0x2 0xa0
0x2d6: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d9: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x2db: V268 = AND V260 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V269 = EQ V268 V267
0x2dd: V270 = 0x2e5
0x2e0: JUMPI 0x2e5 V269
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x2e1
[0x2e1:0x2e4]
---
Predecessors: [0x2ca]
Successors: []
---
0x2e1 PUSH2 0x0
0x2e4 JUMP
---
0x2e1: V271 = 0x0
0x2e4: THROW 
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x2e5
[0x2e5:0x2f0]
---
Predecessors: [0x2ca]
Successors: []
---
0x2e5 JUMPDEST
0x2e6 CALLER
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef AND
0x2f0 SELFDESTRUCT
---
0x2e5: JUMPDEST 
0x2e6: V272 = CALLER
0x2e7: V273 = 0x1
0x2e9: V274 = 0xa0
0x2eb: V275 = 0x2
0x2ed: V276 = EXP 0x2 0xa0
0x2ee: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x2f0: SELFDESTRUCT V278
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x2f1
[0x2f1:0x2f1]
---
Predecessors: []
Successors: [0x2f2]
---
0x2f1 JUMPDEST
---
0x2f1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f2
[0x2f2:0x2f3]
---
Predecessors: [0x2f1]
Successors: []
Has unresolved jump.
---
0x2f2 JUMPDEST
0x2f3 JUMP
---
0x2f2: JUMPDEST 
0x2f3: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f4
[0x2f4:0x302]
---
Predecessors: [0x1af]
Successors: [0x179]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x0
0x2f7 SLOAD
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xa0
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff SUB
0x300 AND
0x301 DUP2
0x302 JUMP
---
0x2f4: JUMPDEST 
0x2f5: V279 = 0x0
0x2f7: V280 = S[0x0]
0x2f8: V281 = 0x1
0x2fa: V282 = 0xa0
0x2fc: V283 = 0x2
0x2fe: V284 = EXP 0x2 0xa0
0x2ff: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x300: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x302: JUMP 0x179
---
Entry stack: [V12, 0x179]
Stack pops: 1
Stack additions: [S0, V286]
Exit stack: [V12, 0x179, V286]

================================

Block 0x303
[0x303:0x308]
---
Predecessors: [0x1db]
Successors: [0x1e3]
---
0x303 JUMPDEST
0x304 PUSH1 0x4
0x306 SLOAD
0x307 DUP2
0x308 JUMP
---
0x303: JUMPDEST 
0x304: V287 = 0x4
0x306: V288 = S[0x4]
0x308: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3]
Stack pops: 1
Stack additions: [S0, V288]
Exit stack: [V12, 0x1e3, V288]

================================

Block 0x309
[0x309:0x30e]
---
Predecessors: [0x1fd]
Successors: [0x1e3]
---
0x309 JUMPDEST
0x30a PUSH1 0x3
0x30c SLOAD
0x30d DUP2
0x30e JUMP
---
0x309: JUMPDEST 
0x30a: V289 = 0x3
0x30c: V290 = S[0x3]
0x30e: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3]
Stack pops: 1
Stack additions: [S0, V290]
Exit stack: [V12, 0x1e3, V290]

================================

Block 0x30f
[0x30f:0x325]
---
Predecessors: [0x21f]
Successors: [0x326, 0x32a]
---
0x30f JUMPDEST
0x310 PUSH1 0x1
0x312 SLOAD
0x313 CALLER
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c SWAP1
0x31d DUP2
0x31e AND
0x31f SWAP2
0x320 AND
0x321 EQ
0x322 PUSH2 0x32a
0x325 JUMPI
---
0x30f: JUMPDEST 
0x310: V291 = 0x1
0x312: V292 = S[0x1]
0x313: V293 = CALLER
0x314: V294 = 0x1
0x316: V295 = 0xa0
0x318: V296 = 0x2
0x31a: V297 = EXP 0x2 0xa0
0x31b: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x320: V300 = AND V292 0xffffffffffffffffffffffffffffffffffffffff
0x321: V301 = EQ V300 V299
0x322: V302 = 0x32a
0x325: JUMPI 0x32a V301
---
Entry stack: [V12, 0x149, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V202]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x30f]
Successors: []
---
0x326 PUSH2 0x0
0x329 JUMP
---
0x326: V303 = 0x0
0x329: THROW 
---
Entry stack: [V12, 0x149, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V202]

================================

Block 0x32a
[0x32a:0x352]
---
Predecessors: [0x30f]
Successors: [0x353]
---
0x32a JUMPDEST
0x32b PUSH1 0x1
0x32d DUP1
0x32e SLOAD
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 NOT
0x345 AND
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e DUP4
0x34f AND
0x350 OR
0x351 SWAP1
0x352 SSTORE
---
0x32a: JUMPDEST 
0x32b: V304 = 0x1
0x32e: V305 = S[0x1]
0x32f: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V307 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x345: V308 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V305
0x346: V309 = 0x1
0x348: V310 = 0xa0
0x34a: V311 = 0x2
0x34c: V312 = EXP 0x2 0xa0
0x34d: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34f: V314 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x350: V315 = OR V314 V308
0x352: S[0x1] = V315
---
Entry stack: [V12, 0x149, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x149, V202]

================================

Block 0x353
[0x353:0x353]
---
Predecessors: [0x32a]
Successors: [0x354]
---
0x353 JUMPDEST
---
0x353: JUMPDEST 
---
Entry stack: [V12, 0x149, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V202]

================================

Block 0x354
[0x354:0x356]
---
Predecessors: [0x353]
Successors: [0x149]
---
0x354 JUMPDEST
0x355 POP
0x356 JUMP
---
0x354: JUMPDEST 
0x356: JUMP 0x149
---
Entry stack: [V12, 0x149, V202]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x357
[0x357:0x36d]
---
Predecessors: [0x23d]
Successors: [0x36e, 0x372]
---
0x357 JUMPDEST
0x358 PUSH1 0x0
0x35a SLOAD
0x35b CALLER
0x35c PUSH1 0x1
0x35e PUSH1 0xa0
0x360 PUSH1 0x2
0x362 EXP
0x363 SUB
0x364 SWAP1
0x365 DUP2
0x366 AND
0x367 SWAP2
0x368 AND
0x369 EQ
0x36a PUSH2 0x372
0x36d JUMPI
---
0x357: JUMPDEST 
0x358: V316 = 0x0
0x35a: V317 = S[0x0]
0x35b: V318 = CALLER
0x35c: V319 = 0x1
0x35e: V320 = 0xa0
0x360: V321 = 0x2
0x362: V322 = EXP 0x2 0xa0
0x363: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x366: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x368: V325 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x369: V326 = EQ V325 V324
0x36a: V327 = 0x372
0x36d: JUMPI 0x372 V326
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x36e
[0x36e:0x371]
---
Predecessors: [0x357]
Successors: []
---
0x36e PUSH2 0x0
0x371 JUMP
---
0x36e: V328 = 0x0
0x371: THROW 
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x372
[0x372:0x3d4]
---
Predecessors: [0x357]
Successors: [0x3d5, 0x3d6]
---
0x372 JUMPDEST
0x373 PUSH1 0x2
0x375 SLOAD
0x376 PUSH1 0x0
0x378 DUP1
0x379 SLOAD
0x37a PUSH1 0x3
0x37c SLOAD
0x37d PUSH1 0x40
0x37f DUP1
0x380 MLOAD
0x381 PUSH1 0x20
0x383 SWAP1
0x384 DUP2
0x385 ADD
0x386 DUP6
0x387 SWAP1
0x388 MSTORE
0x389 DUP2
0x38a MLOAD
0x38b PUSH1 0xe0
0x38d PUSH1 0x2
0x38f EXP
0x390 PUSH4 0xa9059cbb
0x395 MUL
0x396 DUP2
0x397 MSTORE
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 SWAP5
0x3a1 DUP6
0x3a2 AND
0x3a3 PUSH1 0x4
0x3a5 DUP3
0x3a6 ADD
0x3a7 MSTORE
0x3a8 PUSH1 0x24
0x3aa DUP2
0x3ab ADD
0x3ac SWAP4
0x3ad SWAP1
0x3ae SWAP4
0x3af MSTORE
0x3b0 SWAP1
0x3b1 MLOAD
0x3b2 SWAP3
0x3b3 SWAP1
0x3b4 SWAP5
0x3b5 AND
0x3b6 SWAP4
0x3b7 PUSH4 0xa9059cbb
0x3bc SWAP4
0x3bd PUSH1 0x44
0x3bf DUP1
0x3c0 DUP5
0x3c1 ADD
0x3c2 SWAP5
0x3c3 SWAP3
0x3c4 SWAP4
0x3c5 DUP4
0x3c6 SWAP1
0x3c7 SUB
0x3c8 ADD
0x3c9 SWAP1
0x3ca DUP3
0x3cb SWAP1
0x3cc DUP8
0x3cd DUP1
0x3ce EXTCODESIZE
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 PUSH2 0x3d6
0x3d4 JUMPI
---
0x372: JUMPDEST 
0x373: V329 = 0x2
0x375: V330 = S[0x2]
0x376: V331 = 0x0
0x379: V332 = S[0x0]
0x37a: V333 = 0x3
0x37c: V334 = S[0x3]
0x37d: V335 = 0x40
0x380: V336 = M[0x40]
0x381: V337 = 0x20
0x385: V338 = ADD 0x20 V336
0x388: M[V338] = 0x0
0x38a: V339 = M[0x40]
0x38b: V340 = 0xe0
0x38d: V341 = 0x2
0x38f: V342 = EXP 0x2 0xe0
0x390: V343 = 0xa9059cbb
0x395: V344 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x397: M[V339] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x398: V345 = 0x1
0x39a: V346 = 0xa0
0x39c: V347 = 0x2
0x39e: V348 = EXP 0x2 0xa0
0x39f: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x3a3: V351 = 0x4
0x3a6: V352 = ADD V339 0x4
0x3a7: M[V352] = V350
0x3a8: V353 = 0x24
0x3ab: V354 = ADD V339 0x24
0x3af: M[V354] = V334
0x3b1: V355 = M[0x40]
0x3b5: V356 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V357 = 0xa9059cbb
0x3bd: V358 = 0x44
0x3c1: V359 = ADD V339 0x44
0x3c7: V360 = SUB V339 V355
0x3c8: V361 = ADD V360 0x44
0x3ce: V362 = EXTCODESIZE V356
0x3cf: V363 = ISZERO V362
0x3d0: V364 = ISZERO V363
0x3d1: V365 = 0x3d6
0x3d4: JUMPI 0x3d6 V364
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: [V356, 0xa9059cbb, V359, 0x20, V355, V361, V355, 0x0, V356]
Exit stack: [V12, 0x149, V356, 0xa9059cbb, V359, 0x20, V355, V361, V355, 0x0, V356]

================================

Block 0x3d5
[0x3d5:0x3d5]
---
Predecessors: [0x372]
Successors: []
---
0x3d5 INVALID
---
0x3d5: INVALID 
---
Entry stack: [V12, 0x149, V356, 0xa9059cbb, V359, 0x20, V355, V361, V355, 0x0, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V356, 0xa9059cbb, V359, 0x20, V355, V361, V355, 0x0, V356]

================================

Block 0x3d6
[0x3d6:0x3e1]
---
Predecessors: [0x372]
Successors: [0x3e2, 0x3e3]
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x32
0x3d9 GAS
0x3da SUB
0x3db CALL
0x3dc ISZERO
0x3dd ISZERO
0x3de PUSH2 0x3e3
0x3e1 JUMPI
---
0x3d6: JUMPDEST 
0x3d7: V366 = 0x32
0x3d9: V367 = GAS
0x3da: V368 = SUB V367 0x32
0x3db: V369 = CALL V368 V356 0x0 V355 V361 V355 0x20
0x3dc: V370 = ISZERO V369
0x3dd: V371 = ISZERO V370
0x3de: V372 = 0x3e3
0x3e1: JUMPI 0x3e3 V371
---
Entry stack: [V12, 0x149, V356, 0xa9059cbb, V359, 0x20, V355, V361, V355, 0x0, V356]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x149, V356, 0xa9059cbb, V359]

================================

Block 0x3e2
[0x3e2:0x3e2]
---
Predecessors: [0x3d6]
Successors: []
---
0x3e2 INVALID
---
0x3e2: INVALID 
---
Entry stack: [V12, 0x149, V356, 0xa9059cbb, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149, V356, 0xa9059cbb, V359]

================================

Block 0x3e3
[0x3e3:0x3f1]
---
Predecessors: [0x3d6]
Successors: [0x146, 0x3f2]
---
0x3e3 JUMPDEST
0x3e4 POP
0x3e5 POP
0x3e6 PUSH1 0x40
0x3e8 MLOAD
0x3e9 MLOAD
0x3ea ISZERO
0x3eb ISZERO
0x3ec SWAP1
0x3ed POP
0x3ee PUSH2 0x146
0x3f1 JUMPI
---
0x3e3: JUMPDEST 
0x3e6: V373 = 0x40
0x3e8: V374 = M[0x40]
0x3e9: V375 = M[V374]
0x3ea: V376 = ISZERO V375
0x3eb: V377 = ISZERO V376
0x3ee: V378 = 0x146
0x3f1: JUMPI 0x146 V377
---
Entry stack: [V12, 0x149, V356, 0xa9059cbb, V359]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x3f2
[0x3f2:0x3f5]
---
Predecessors: [0x3e3]
Successors: []
---
0x3f2 PUSH2 0x0
0x3f5 JUMP
---
0x3f2: V379 = 0x0
0x3f5: THROW 
---
Entry stack: [V12, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x149]

================================

Block 0x3f6
[0x3f6:0x3f6]
---
Predecessors: []
Successors: [0x3f7]
---
0x3f6 JUMPDEST
---
0x3f6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f7
[0x3f7:0x3f7]
---
Predecessors: [0x3f6]
Successors: [0x3f8]
---
0x3f7 JUMPDEST
---
0x3f7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f8
[0x3f8:0x3f9]
---
Predecessors: [0x3f7]
Successors: []
Has unresolved jump.
---
0x3f8 JUMPDEST
0x3f9 JUMP
---
0x3f8: JUMPDEST 
0x3f9: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3fa
[0x3fa:0x408]
---
Predecessors: [0x24f]
Successors: [0x179]
---
0x3fa JUMPDEST
0x3fb PUSH1 0x2
0x3fd SLOAD
0x3fe PUSH1 0x1
0x400 PUSH1 0xa0
0x402 PUSH1 0x2
0x404 EXP
0x405 SUB
0x406 AND
0x407 DUP2
0x408 JUMP
---
0x3fa: JUMPDEST 
0x3fb: V380 = 0x2
0x3fd: V381 = S[0x2]
0x3fe: V382 = 0x1
0x400: V383 = 0xa0
0x402: V384 = 0x2
0x404: V385 = EXP 0x2 0xa0
0x405: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x408: JUMP 0x179
---
Entry stack: [V12, 0x179]
Stack pops: 1
Stack additions: [S0, V387]
Exit stack: [V12, 0x179, V387]

================================

Block 0x409
[0x409:0x434]
---
Predecessors: []
Successors: []
---
0x409 STOP
0x40a LOG1
0x40b PUSH6 0x627a7a723058
0x412 SHA3
0x413 DUP12
0x414 MISSING 0x27
0x415 MISSING 0xb7
0x416 MISSING 0xaa
0x417 MISSING 0xd4
0x418 MISSING 0x27
0x419 MISSING 0xe1
0x41a SLT
0x41b MISSING 0x4d
0x41c LOG1
0x41d PUSH5 0x1e0197ddc2
0x423 SUB
0x424 PUSH14 0x61c7c8356b2f6a9c8c0d35fdaed4
0x433 STOP
0x434 MISSING 0x29
---
0x409: STOP 
0x40a: LOG S0 S1 S2
0x40b: V388 = 0x627a7a723058
0x412: V389 = SHA3 0x627a7a723058 S3
0x414: MISSING 0x27
0x415: MISSING 0xb7
0x416: MISSING 0xaa
0x417: MISSING 0xd4
0x418: MISSING 0x27
0x419: MISSING 0xe1
0x41a: V390 = SLT S0 S1
0x41b: MISSING 0x4d
0x41c: LOG S0 S1 S2
0x41d: V391 = 0x1e0197ddc2
0x423: V392 = SUB 0x1e0197ddc2 S3
0x424: V393 = 0x61c7c8356b2f6a9c8c0d35fdaed4
0x433: STOP 
0x434: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, V389, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V390, 0x61c7c8356b2f6a9c8c0d35fdaed4, V392]
Exit stack: []

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x14b
Exit block: 0x149
Body: 0x149, 0x14b, 0x152, 0x153, 0x273, 0x28a, 0x28e, 0x2b7, 0x2b8

Function 1:
Public function signature: 0x457f4d41
Entry block: 0x169
Exit block: 0x179
Body: 0x169, 0x170, 0x171, 0x179, 0x2bb

Function 2:
Public function signature: 0x83197ef0
Entry block: 0x195
Exit block: 0x2e5
Body: 0x195, 0x19c, 0x19d, 0x2ca, 0x2e1, 0x2e5

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x1a7
Exit block: 0x179
Body: 0x179, 0x1a7, 0x1ae, 0x1af, 0x2f4

Function 4:
Public function signature: 0x8edeb15d
Entry block: 0x1d3
Exit block: 0x1e3
Body: 0x1d3, 0x1da, 0x1db, 0x1e3, 0x303

Function 5:
Public function signature: 0x943dfef1
Entry block: 0x1f5
Exit block: 0x1e3
Body: 0x1e3, 0x1f5, 0x1fc, 0x1fd, 0x309

Function 6:
Public function signature: 0xd31fdffd
Entry block: 0x217
Exit block: 0x149
Body: 0x149, 0x217, 0x21e, 0x21f, 0x30f, 0x326, 0x32a, 0x353, 0x354

Function 7:
Public function signature: 0xea8a1af0
Entry block: 0x235
Exit block: 0x149
Body: 0x146, 0x147, 0x149, 0x235, 0x23c, 0x23d, 0x357, 0x36e, 0x372, 0x3d5, 0x3d6, 0x3e2, 0x3e3, 0x3f2

Function 8:
Public function signature: 0xfc0c546a
Entry block: 0x247
Exit block: 0x179
Body: 0x179, 0x247, 0x24e, 0x24f, 0x3fa

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x149
Body: 0x7d, 0x81, 0x8b, 0x8f, 0xf1, 0xf2, 0xfe, 0xff, 0x10e, 0x112, 0x142, 0x146, 0x147, 0x149

