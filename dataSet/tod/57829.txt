Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x77]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1792b0bc
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x77
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1792b0bc
0x3b: V13 = EQ V11 0x1792b0bc
0x3c: V14 = 0x77
0x3f: JUMPI 0x77 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x8d8f2adb
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x8d8f2adb
0x46: V16 = EQ 0x8d8f2adb V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa1]
---
0x4b DUP1
0x4c PUSH4 0x9904e174
0x51 EQ
0x52 PUSH2 0xa1
0x55 JUMPI
---
0x4c: V18 = 0x9904e174
0x51: V19 = EQ 0x9904e174 V11
0x52: V20 = 0xa1
0x55: JUMPI 0xa1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xb6]
---
0x56 DUP1
0x57 PUSH4 0xf8b2cb4f
0x5c EQ
0x5d PUSH2 0xb6
0x60 JUMPI
---
0x57: V21 = 0xf8b2cb4f
0x5c: V22 = EQ 0xf8b2cb4f V11
0x5d: V23 = 0xb6
0x60: JUMPI 0xb6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xe9]
---
0x61 DUP1
0x62 PUSH4 0xfc7fcae1
0x67 EQ
0x68 PUSH2 0xe9
0x6b JUMPI
---
0x62: V24 = 0xfc7fcae1
0x67: V25 = EQ 0xfc7fcae1 V11
0x68: V26 = 0xe9
0x6b: JUMPI 0xe9 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x74]
---
Predecessors: [0x0, 0x61]
Successors: [0x101]
---
0x6c JUMPDEST
0x6d PUSH2 0x75
0x70 CALLVALUE
0x71 PUSH2 0x101
0x74 JUMP
---
0x6c: JUMPDEST 
0x6d: V27 = 0x75
0x70: V28 = CALLVALUE
0x71: V29 = 0x101
0x74: JUMP 0x101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x75, V28]
Exit stack: [V11, 0x75, V28]

================================

Block 0x75
[0x75:0x76]
---
Predecessors: [0x199, 0x366, 0x443, 0x5c8]
Successors: []
---
0x75 JUMPDEST
0x76 STOP
---
0x75: JUMPDEST 
0x76: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x77
[0x77:0x7e]
---
Predecessors: [0xd]
Successors: [0x7f, 0x83]
---
0x77 JUMPDEST
0x78 CALLVALUE
0x79 DUP1
0x7a ISZERO
0x7b PUSH2 0x83
0x7e JUMPI
---
0x77: JUMPDEST 
0x78: V30 = CALLVALUE
0x7a: V31 = ISZERO V30
0x7b: V32 = 0x83
0x7e: JUMPI 0x83 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x7f
[0x7f:0x82]
---
Predecessors: [0x77]
Successors: []
---
0x7f PUSH1 0x0
0x81 DUP1
0x82 REVERT
---
0x7f: V33 = 0x0
0x82: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x83
[0x83:0x8b]
---
Predecessors: [0x77]
Successors: [0x19e]
---
0x83 JUMPDEST
0x84 POP
0x85 PUSH2 0x75
0x88 PUSH2 0x19e
0x8b JUMP
---
0x83: JUMPDEST 
0x85: V34 = 0x75
0x88: V35 = 0x19e
0x8b: JUMP 0x19e
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x75]
Exit stack: [V11, 0x75]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x40]
Successors: [0x94, 0x98]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8c: JUMPDEST 
0x8d: V36 = CALLVALUE
0x8f: V37 = ISZERO V36
0x90: V38 = 0x98
0x93: JUMPI 0x98 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8c]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V39 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x98
[0x98:0xa0]
---
Predecessors: [0x8c]
Successors: [0x296]
---
0x98 JUMPDEST
0x99 POP
0x9a PUSH2 0x75
0x9d PUSH2 0x296
0xa0 JUMP
---
0x98: JUMPDEST 
0x9a: V40 = 0x75
0x9d: V41 = 0x296
0xa0: JUMP 0x296
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x75]
Exit stack: [V11, 0x75]

================================

Block 0xa1
[0xa1:0xa8]
---
Predecessors: [0x4b]
Successors: [0xa9, 0xad]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 DUP1
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0xa1: JUMPDEST 
0xa2: V42 = CALLVALUE
0xa4: V43 = ISZERO V42
0xa5: V44 = 0xad
0xa8: JUMPI 0xad V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0xa1]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V45 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xad
[0xad:0xb5]
---
Predecessors: [0xa1]
Successors: [0x36c]
---
0xad JUMPDEST
0xae POP
0xaf PUSH2 0x75
0xb2 PUSH2 0x36c
0xb5 JUMP
---
0xad: JUMPDEST 
0xaf: V46 = 0x75
0xb2: V47 = 0x36c
0xb5: JUMP 0x36c
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0x75]
Exit stack: [V11, 0x75]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0x56]
Successors: [0xbe, 0xc2]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 DUP1
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb6: JUMPDEST 
0xb7: V48 = CALLVALUE
0xb9: V49 = ISZERO V48
0xba: V50 = 0xc2
0xbd: JUMPI 0xc2 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb6]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V51 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xc2
[0xc2:0xd6]
---
Predecessors: [0xb6]
Successors: [0x44a]
---
0xc2 JUMPDEST
0xc3 POP
0xc4 PUSH2 0xd7
0xc7 PUSH1 0x1
0xc9 PUSH1 0xa0
0xcb PUSH1 0x2
0xcd EXP
0xce SUB
0xcf PUSH1 0x4
0xd1 CALLDATALOAD
0xd2 AND
0xd3 PUSH2 0x44a
0xd6 JUMP
---
0xc2: JUMPDEST 
0xc4: V52 = 0xd7
0xc7: V53 = 0x1
0xc9: V54 = 0xa0
0xcb: V55 = 0x2
0xcd: V56 = EXP 0x2 0xa0
0xce: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf: V58 = 0x4
0xd1: V59 = CALLDATALOAD 0x4
0xd2: V60 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V61 = 0x44a
0xd6: JUMP 0x44a
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xd7, V60]
Exit stack: [V11, 0xd7, V60]

================================

Block 0xd7
[0xd7:0xe8]
---
Predecessors: [0x4df]
Successors: []
---
0xd7 JUMPDEST
0xd8 PUSH1 0x40
0xda DUP1
0xdb MLOAD
0xdc SWAP2
0xdd DUP3
0xde MSTORE
0xdf MLOAD
0xe0 SWAP1
0xe1 DUP2
0xe2 SWAP1
0xe3 SUB
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP1
0xe8 RETURN
---
0xd7: JUMPDEST 
0xd8: V62 = 0x40
0xdb: V63 = M[0x40]
0xde: M[V63] = V404
0xdf: V64 = M[0x40]
0xe3: V65 = SUB V63 V64
0xe4: V66 = 0x20
0xe6: V67 = ADD 0x20 V65
0xe8: RETURN V64 V67
---
Entry stack: [V11, 0x75, S1, V404]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x75, S1]

================================

Block 0xe9
[0xe9:0xf0]
---
Predecessors: [0x61]
Successors: [0xf1, 0xf5]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb DUP1
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xe9: JUMPDEST 
0xea: V68 = CALLVALUE
0xec: V69 = ISZERO V68
0xed: V70 = 0xf5
0xf0: JUMPI 0xf5 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V11, V68]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xe9]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V71 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V11, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68]

================================

Block 0xf5
[0xf5:0x100]
---
Predecessors: [0xe9]
Successors: [0x4e7]
---
0xf5 JUMPDEST
0xf6 POP
0xf7 PUSH2 0x75
0xfa PUSH1 0x4
0xfc CALLDATALOAD
0xfd PUSH2 0x4e7
0x100 JUMP
---
0xf5: JUMPDEST 
0xf7: V72 = 0x75
0xfa: V73 = 0x4
0xfc: V74 = CALLDATALOAD 0x4
0xfd: V75 = 0x4e7
0x100: JUMP 0x4e7
---
Entry stack: [V11, V68]
Stack pops: 1
Stack additions: [0x75, V74]
Exit stack: [V11, 0x75, V74]

================================

Block 0x101
[0x101:0x169]
---
Predecessors: [0x6c]
Successors: [0x16a, 0x16e]
---
0x101 JUMPDEST
0x102 PUSH1 0x2
0x104 SLOAD
0x105 PUSH1 0x1
0x107 SLOAD
0x108 PUSH1 0x40
0x10a DUP1
0x10b MLOAD
0x10c PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 SWAP3
0x138 DUP4
0x139 AND
0x13a PUSH1 0x4
0x13c DUP3
0x13d ADD
0x13e MSTORE
0x13f SWAP1
0x140 MLOAD
0x141 SWAP2
0x142 SWAP1
0x143 SWAP3
0x144 AND
0x145 SWAP2
0x146 PUSH4 0xf088d547
0x14b SWAP2
0x14c DUP5
0x14d SWAP2
0x14e PUSH1 0x24
0x150 DUP1
0x151 DUP3
0x152 ADD
0x153 SWAP3
0x154 PUSH1 0x20
0x156 SWAP3
0x157 SWAP1
0x158 SWAP2
0x159 SWAP1
0x15a DUP3
0x15b SWAP1
0x15c SUB
0x15d ADD
0x15e DUP2
0x15f DUP6
0x160 DUP9
0x161 DUP1
0x162 EXTCODESIZE
0x163 ISZERO
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x101: JUMPDEST 
0x102: V76 = 0x2
0x104: V77 = S[0x2]
0x105: V78 = 0x1
0x107: V79 = S[0x1]
0x108: V80 = 0x40
0x10b: V81 = M[0x40]
0x10c: V82 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x12e: M[V81] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x12f: V83 = 0x1
0x131: V84 = 0xa0
0x133: V85 = 0x2
0x135: V86 = EXP 0x2 0xa0
0x136: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x13a: V89 = 0x4
0x13d: V90 = ADD V81 0x4
0x13e: M[V90] = V88
0x140: V91 = M[0x40]
0x144: V92 = AND V77 0xffffffffffffffffffffffffffffffffffffffff
0x146: V93 = 0xf088d547
0x14e: V94 = 0x24
0x152: V95 = ADD V81 0x24
0x154: V96 = 0x20
0x15c: V97 = SUB V81 V91
0x15d: V98 = ADD V97 0x24
0x162: V99 = EXTCODESIZE V92
0x163: V100 = ISZERO V99
0x165: V101 = ISZERO V100
0x166: V102 = 0x16e
0x169: JUMPI 0x16e V101
---
Entry stack: [V11, 0x75, V28]
Stack pops: 1
Stack additions: [S0, V92, 0xf088d547, S0, V95, 0x20, V91, V98, V91, S0, V92, V100]
Exit stack: [V11, 0x75, V28, V92, 0xf088d547, V28, V95, 0x20, V91, V98, V91, V28, V92, V100]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x101]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V103 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, V28, V92, 0xf088d547, V28, V95, 0x20, V91, V98, V91, V28, V92, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V28, V92, 0xf088d547, V28, V95, 0x20, V91, V98, V91, V28, V92, V100]

================================

Block 0x16e
[0x16e:0x178]
---
Predecessors: [0x101]
Successors: [0x179, 0x182]
---
0x16e JUMPDEST
0x16f POP
0x170 GAS
0x171 CALL
0x172 ISZERO
0x173 DUP1
0x174 ISZERO
0x175 PUSH2 0x182
0x178 JUMPI
---
0x16e: JUMPDEST 
0x170: V104 = GAS
0x171: V105 = CALL V104 V92 V28 V91 V98 V91 0x20
0x172: V106 = ISZERO V105
0x174: V107 = ISZERO V106
0x175: V108 = 0x182
0x178: JUMPI 0x182 V107
---
Entry stack: [V11, 0x75, V28, V92, 0xf088d547, V28, V95, 0x20, V91, V98, V91, V28, V92, V100]
Stack pops: 7
Stack additions: [V106]
Exit stack: [V11, 0x75, V28, V92, 0xf088d547, V28, V95, V106]

================================

Block 0x179
[0x179:0x181]
---
Predecessors: [0x16e]
Successors: []
---
0x179 RETURNDATASIZE
0x17a PUSH1 0x0
0x17c DUP1
0x17d RETURNDATACOPY
0x17e RETURNDATASIZE
0x17f PUSH1 0x0
0x181 REVERT
---
0x179: V109 = RETURNDATASIZE
0x17a: V110 = 0x0
0x17d: RETURNDATACOPY 0x0 0x0 V109
0x17e: V111 = RETURNDATASIZE
0x17f: V112 = 0x0
0x181: REVERT 0x0 V111
---
Entry stack: [V11, 0x75, V28, V92, 0xf088d547, V28, V95, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V28, V92, 0xf088d547, V28, V95, V106]

================================

Block 0x182
[0x182:0x194]
---
Predecessors: [0x16e]
Successors: [0x195, 0x199]
---
0x182 JUMPDEST
0x183 POP
0x184 POP
0x185 POP
0x186 POP
0x187 POP
0x188 PUSH1 0x40
0x18a MLOAD
0x18b RETURNDATASIZE
0x18c PUSH1 0x20
0x18e DUP2
0x18f LT
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x182: JUMPDEST 
0x188: V113 = 0x40
0x18a: V114 = M[0x40]
0x18b: V115 = RETURNDATASIZE
0x18c: V116 = 0x20
0x18f: V117 = LT V115 0x20
0x190: V118 = ISZERO V117
0x191: V119 = 0x199
0x194: JUMPI 0x199 V118
---
Entry stack: [V11, 0x75, V28, V92, 0xf088d547, V28, V95, V106]
Stack pops: 5
Stack additions: [V114, V115]
Exit stack: [V11, 0x75, V28, V114, V115]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x182]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V120 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, V28, V114, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V28, V114, V115]

================================

Block 0x199
[0x199:0x19d]
---
Predecessors: [0x182, 0x280]
Successors: [0x75]
---
0x199 JUMPDEST
0x19a POP
0x19b POP
0x19c POP
0x19d JUMP
---
0x199: JUMPDEST 
0x19d: JUMP 0x75
---
Entry stack: [V11, 0x75, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x19e
[0x19e:0x1b1]
---
Predecessors: [0x83]
Successors: [0x1b2, 0x1ef]
---
0x19e JUMPDEST
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 SLOAD
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab AND
0x1ac CALLER
0x1ad EQ
0x1ae PUSH2 0x1ef
0x1b1 JUMPI
---
0x19e: JUMPDEST 
0x19f: V121 = 0x0
0x1a2: V122 = S[0x0]
0x1a3: V123 = 0x1
0x1a5: V124 = 0xa0
0x1a7: V125 = 0x2
0x1a9: V126 = EXP 0x2 0xa0
0x1aa: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ab: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1ac: V129 = CALLER
0x1ad: V130 = EQ V129 V128
0x1ae: V131 = 0x1ef
0x1b1: JUMPI 0x1ef V130
---
Entry stack: [V11, 0x75]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x75, 0x0]

================================

Block 0x1b2
[0x1b2:0x1ee]
---
Predecessors: [0x19e]
Successors: []
---
0x1b2 PUSH1 0x40
0x1b4 DUP1
0x1b5 MLOAD
0x1b6 PUSH1 0xe5
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb PUSH3 0x461bcd
0x1bf MUL
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 PUSH1 0x4
0x1c6 DUP3
0x1c7 ADD
0x1c8 MSTORE
0x1c9 PUSH1 0xe
0x1cb PUSH1 0x24
0x1cd DUP3
0x1ce ADD
0x1cf MSTORE
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 MLOAD
0x1d4 PUSH1 0x20
0x1d6 PUSH2 0x5cc
0x1d9 DUP4
0x1da CODECOPY
0x1db DUP2
0x1dc MLOAD
0x1dd SWAP2
0x1de MSTORE
0x1df PUSH1 0x44
0x1e1 DUP3
0x1e2 ADD
0x1e3 MSTORE
0x1e4 SWAP1
0x1e5 MLOAD
0x1e6 SWAP1
0x1e7 DUP2
0x1e8 SWAP1
0x1e9 SUB
0x1ea PUSH1 0x64
0x1ec ADD
0x1ed SWAP1
0x1ee REVERT
---
0x1b2: V132 = 0x40
0x1b5: V133 = M[0x40]
0x1b6: V134 = 0xe5
0x1b8: V135 = 0x2
0x1ba: V136 = EXP 0x2 0xe5
0x1bb: V137 = 0x461bcd
0x1bf: V138 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x1c1: M[V133] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1c2: V139 = 0x20
0x1c4: V140 = 0x4
0x1c7: V141 = ADD V133 0x4
0x1c8: M[V141] = 0x20
0x1c9: V142 = 0xe
0x1cb: V143 = 0x24
0x1ce: V144 = ADD V133 0x24
0x1cf: M[V144] = 0xe
0x1d0: V145 = 0x0
0x1d3: V146 = M[0x0]
0x1d4: V147 = 0x20
0x1d6: V148 = 0x5cc
0x1da: CODECOPY 0x0 0x5cc 0x20
0x1dc: V149 = M[0x0]
0x1de: M[0x0] = V146
0x1df: V150 = 0x44
0x1e2: V151 = ADD V133 0x44
0x1e3: M[V151] = V149
0x1e5: V152 = M[0x40]
0x1e9: V153 = SUB V133 V152
0x1ea: V154 = 0x64
0x1ec: V155 = ADD 0x64 V153
0x1ee: REVERT V152 V155
---
Entry stack: [V11, 0x75, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, 0x0]

================================

Block 0x1ef
[0x1ef:0x1f7]
---
Predecessors: [0x19e]
Successors: [0x44a]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x1f8
0x1f3 ADDRESS
0x1f4 PUSH2 0x44a
0x1f7 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V156 = 0x1f8
0x1f3: V157 = ADDRESS
0x1f4: V158 = 0x44a
0x1f7: JUMP 0x44a
---
Entry stack: [V11, 0x75, 0x0]
Stack pops: 0
Stack additions: [0x1f8, V157]
Exit stack: [V11, 0x75, 0x0, 0x1f8, V157]

================================

Block 0x1f8
[0x1f8:0x267]
---
Predecessors: [0x4df]
Successors: [0x268, 0x26c]
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x2
0x1fb SLOAD
0x1fc PUSH1 0x1
0x1fe SLOAD
0x1ff PUSH1 0x40
0x201 DUP1
0x202 MLOAD
0x203 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e SWAP3
0x22f DUP4
0x230 AND
0x231 PUSH1 0x4
0x233 DUP3
0x234 ADD
0x235 MSTORE
0x236 PUSH1 0x24
0x238 DUP2
0x239 ADD
0x23a DUP6
0x23b SWAP1
0x23c MSTORE
0x23d SWAP1
0x23e MLOAD
0x23f SWAP4
0x240 SWAP5
0x241 POP
0x242 SWAP2
0x243 AND
0x244 SWAP2
0x245 PUSH4 0xa9059cbb
0x24a SWAP2
0x24b PUSH1 0x44
0x24d DUP1
0x24e DUP3
0x24f ADD
0x250 SWAP3
0x251 PUSH1 0x20
0x253 SWAP3
0x254 SWAP1
0x255 SWAP2
0x256 SWAP1
0x257 DUP3
0x258 SWAP1
0x259 SUB
0x25a ADD
0x25b DUP2
0x25c PUSH1 0x0
0x25e DUP8
0x25f DUP1
0x260 EXTCODESIZE
0x261 ISZERO
0x262 DUP1
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V159 = 0x2
0x1fb: V160 = S[0x2]
0x1fc: V161 = 0x1
0x1fe: V162 = S[0x1]
0x1ff: V163 = 0x40
0x202: V164 = M[0x40]
0x203: V165 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x225: M[V164] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x226: V166 = 0x1
0x228: V167 = 0xa0
0x22a: V168 = 0x2
0x22c: V169 = EXP 0x2 0xa0
0x22d: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x230: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x231: V172 = 0x4
0x234: V173 = ADD V164 0x4
0x235: M[V173] = V171
0x236: V174 = 0x24
0x239: V175 = ADD V164 0x24
0x23c: M[V175] = V404
0x23e: V176 = M[0x40]
0x243: V177 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x245: V178 = 0xa9059cbb
0x24b: V179 = 0x44
0x24f: V180 = ADD V164 0x44
0x251: V181 = 0x20
0x259: V182 = SUB V164 V176
0x25a: V183 = ADD V182 0x44
0x25c: V184 = 0x0
0x260: V185 = EXTCODESIZE V177
0x261: V186 = ISZERO V185
0x263: V187 = ISZERO V186
0x264: V188 = 0x26c
0x267: JUMPI 0x26c V187
---
Entry stack: [V11, 0x75, S1, V404]
Stack pops: 2
Stack additions: [S0, V177, 0xa9059cbb, V180, 0x20, V176, V183, V176, 0x0, V177, V186]
Exit stack: [V11, 0x75, V404, V177, 0xa9059cbb, V180, 0x20, V176, V183, V176, 0x0, V177, V186]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x1f8]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V189 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, V404, V177, 0xa9059cbb, V180, 0x20, V176, V183, V176, 0x0, V177, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V404, V177, 0xa9059cbb, V180, 0x20, V176, V183, V176, 0x0, V177, V186]

================================

Block 0x26c
[0x26c:0x276]
---
Predecessors: [0x1f8]
Successors: [0x277, 0x280]
---
0x26c JUMPDEST
0x26d POP
0x26e GAS
0x26f CALL
0x270 ISZERO
0x271 DUP1
0x272 ISZERO
0x273 PUSH2 0x280
0x276 JUMPI
---
0x26c: JUMPDEST 
0x26e: V190 = GAS
0x26f: V191 = CALL V190 V177 0x0 V176 V183 V176 0x20
0x270: V192 = ISZERO V191
0x272: V193 = ISZERO V192
0x273: V194 = 0x280
0x276: JUMPI 0x280 V193
---
Entry stack: [V11, 0x75, V404, V177, 0xa9059cbb, V180, 0x20, V176, V183, V176, 0x0, V177, V186]
Stack pops: 7
Stack additions: [V192]
Exit stack: [V11, 0x75, V404, V177, 0xa9059cbb, V180, V192]

================================

Block 0x277
[0x277:0x27f]
---
Predecessors: [0x26c]
Successors: []
---
0x277 RETURNDATASIZE
0x278 PUSH1 0x0
0x27a DUP1
0x27b RETURNDATACOPY
0x27c RETURNDATASIZE
0x27d PUSH1 0x0
0x27f REVERT
---
0x277: V195 = RETURNDATASIZE
0x278: V196 = 0x0
0x27b: RETURNDATACOPY 0x0 0x0 V195
0x27c: V197 = RETURNDATASIZE
0x27d: V198 = 0x0
0x27f: REVERT 0x0 V197
---
Entry stack: [V11, 0x75, V404, V177, 0xa9059cbb, V180, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V404, V177, 0xa9059cbb, V180, V192]

================================

Block 0x280
[0x280:0x291]
---
Predecessors: [0x26c]
Successors: [0x199, 0x292]
---
0x280 JUMPDEST
0x281 POP
0x282 POP
0x283 POP
0x284 POP
0x285 PUSH1 0x40
0x287 MLOAD
0x288 RETURNDATASIZE
0x289 PUSH1 0x20
0x28b DUP2
0x28c LT
0x28d ISZERO
0x28e PUSH2 0x199
0x291 JUMPI
---
0x280: JUMPDEST 
0x285: V199 = 0x40
0x287: V200 = M[0x40]
0x288: V201 = RETURNDATASIZE
0x289: V202 = 0x20
0x28c: V203 = LT V201 0x20
0x28d: V204 = ISZERO V203
0x28e: V205 = 0x199
0x291: JUMPI 0x199 V204
---
Entry stack: [V11, 0x75, V404, V177, 0xa9059cbb, V180, V192]
Stack pops: 4
Stack additions: [V200, V201]
Exit stack: [V11, 0x75, V404, V200, V201]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x280]
Successors: []
---
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x292: V206 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, V404, V200, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V404, V200, V201]

================================

Block 0x296
[0x296:0x2a8]
---
Predecessors: [0x98]
Successors: [0x2a9, 0x2e6]
---
0x296 JUMPDEST
0x297 PUSH1 0x0
0x299 SLOAD
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 AND
0x2a3 CALLER
0x2a4 EQ
0x2a5 PUSH2 0x2e6
0x2a8 JUMPI
---
0x296: JUMPDEST 
0x297: V207 = 0x0
0x299: V208 = S[0x0]
0x29a: V209 = 0x1
0x29c: V210 = 0xa0
0x29e: V211 = 0x2
0x2a0: V212 = EXP 0x2 0xa0
0x2a1: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a2: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x2a3: V215 = CALLER
0x2a4: V216 = EQ V215 V214
0x2a5: V217 = 0x2e6
0x2a8: JUMPI 0x2e6 V216
---
Entry stack: [V11, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75]

================================

Block 0x2a9
[0x2a9:0x2e5]
---
Predecessors: [0x296]
Successors: []
---
0x2a9 PUSH1 0x40
0x2ab DUP1
0x2ac MLOAD
0x2ad PUSH1 0xe5
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 PUSH3 0x461bcd
0x2b6 MUL
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb PUSH1 0x4
0x2bd DUP3
0x2be ADD
0x2bf MSTORE
0x2c0 PUSH1 0xe
0x2c2 PUSH1 0x24
0x2c4 DUP3
0x2c5 ADD
0x2c6 MSTORE
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca MLOAD
0x2cb PUSH1 0x20
0x2cd PUSH2 0x5cc
0x2d0 DUP4
0x2d1 CODECOPY
0x2d2 DUP2
0x2d3 MLOAD
0x2d4 SWAP2
0x2d5 MSTORE
0x2d6 PUSH1 0x44
0x2d8 DUP3
0x2d9 ADD
0x2da MSTORE
0x2db SWAP1
0x2dc MLOAD
0x2dd SWAP1
0x2de DUP2
0x2df SWAP1
0x2e0 SUB
0x2e1 PUSH1 0x64
0x2e3 ADD
0x2e4 SWAP1
0x2e5 REVERT
---
0x2a9: V218 = 0x40
0x2ac: V219 = M[0x40]
0x2ad: V220 = 0xe5
0x2af: V221 = 0x2
0x2b1: V222 = EXP 0x2 0xe5
0x2b2: V223 = 0x461bcd
0x2b6: V224 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2b8: M[V219] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2b9: V225 = 0x20
0x2bb: V226 = 0x4
0x2be: V227 = ADD V219 0x4
0x2bf: M[V227] = 0x20
0x2c0: V228 = 0xe
0x2c2: V229 = 0x24
0x2c5: V230 = ADD V219 0x24
0x2c6: M[V230] = 0xe
0x2c7: V231 = 0x0
0x2ca: V232 = M[0x0]
0x2cb: V233 = 0x20
0x2cd: V234 = 0x5cc
0x2d1: CODECOPY 0x0 0x5cc 0x20
0x2d3: V235 = M[0x0]
0x2d5: M[0x0] = V232
0x2d6: V236 = 0x44
0x2d9: V237 = ADD V219 0x44
0x2da: M[V237] = V235
0x2dc: V238 = M[0x40]
0x2e0: V239 = SUB V219 V238
0x2e1: V240 = 0x64
0x2e3: V241 = ADD 0x64 V239
0x2e5: REVERT V238 V241
---
Entry stack: [V11, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75]

================================

Block 0x2e6
[0x2e6:0x34d]
---
Predecessors: [0x296]
Successors: [0x34e, 0x352]
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x2
0x2e9 PUSH1 0x0
0x2eb SWAP1
0x2ec SLOAD
0x2ed SWAP1
0x2ee PUSH2 0x100
0x2f1 EXP
0x2f2 SWAP1
0x2f3 DIV
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc AND
0x2fd PUSH1 0x1
0x2ff PUSH1 0xa0
0x301 PUSH1 0x2
0x303 EXP
0x304 SUB
0x305 AND
0x306 PUSH4 0x3ccfd60b
0x30b PUSH1 0x40
0x30d MLOAD
0x30e DUP2
0x30f PUSH4 0xffffffff
0x314 AND
0x315 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x333 MUL
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x4
0x338 ADD
0x339 PUSH1 0x0
0x33b PUSH1 0x40
0x33d MLOAD
0x33e DUP1
0x33f DUP4
0x340 SUB
0x341 DUP2
0x342 PUSH1 0x0
0x344 DUP8
0x345 DUP1
0x346 EXTCODESIZE
0x347 ISZERO
0x348 DUP1
0x349 ISZERO
0x34a PUSH2 0x352
0x34d JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V242 = 0x2
0x2e9: V243 = 0x0
0x2ec: V244 = S[0x2]
0x2ee: V245 = 0x100
0x2f1: V246 = EXP 0x100 0x0
0x2f3: V247 = DIV V244 0x1
0x2f4: V248 = 0x1
0x2f6: V249 = 0xa0
0x2f8: V250 = 0x2
0x2fa: V251 = EXP 0x2 0xa0
0x2fb: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fc: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2fd: V254 = 0x1
0x2ff: V255 = 0xa0
0x301: V256 = 0x2
0x303: V257 = EXP 0x2 0xa0
0x304: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x305: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x306: V260 = 0x3ccfd60b
0x30b: V261 = 0x40
0x30d: V262 = M[0x40]
0x30f: V263 = 0xffffffff
0x314: V264 = AND 0xffffffff 0x3ccfd60b
0x315: V265 = 0x100000000000000000000000000000000000000000000000000000000
0x333: V266 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x335: M[V262] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x336: V267 = 0x4
0x338: V268 = ADD 0x4 V262
0x339: V269 = 0x0
0x33b: V270 = 0x40
0x33d: V271 = M[0x40]
0x340: V272 = SUB V268 V271
0x342: V273 = 0x0
0x346: V274 = EXTCODESIZE V259
0x347: V275 = ISZERO V274
0x349: V276 = ISZERO V275
0x34a: V277 = 0x352
0x34d: JUMPI 0x352 V276
---
Entry stack: [V11, 0x75]
Stack pops: 0
Stack additions: [V259, 0x3ccfd60b, V268, 0x0, V271, V272, V271, 0x0, V259, V275]
Exit stack: [V11, 0x75, V259, 0x3ccfd60b, V268, 0x0, V271, V272, V271, 0x0, V259, V275]

================================

Block 0x34e
[0x34e:0x351]
---
Predecessors: [0x2e6]
Successors: []
---
0x34e PUSH1 0x0
0x350 DUP1
0x351 REVERT
---
0x34e: V278 = 0x0
0x351: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, V259, 0x3ccfd60b, V268, 0x0, V271, V272, V271, 0x0, V259, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V259, 0x3ccfd60b, V268, 0x0, V271, V272, V271, 0x0, V259, V275]

================================

Block 0x352
[0x352:0x35c]
---
Predecessors: [0x2e6]
Successors: [0x35d, 0x366]
---
0x352 JUMPDEST
0x353 POP
0x354 GAS
0x355 CALL
0x356 ISZERO
0x357 DUP1
0x358 ISZERO
0x359 PUSH2 0x366
0x35c JUMPI
---
0x352: JUMPDEST 
0x354: V279 = GAS
0x355: V280 = CALL V279 V259 0x0 V271 V272 V271 0x0
0x356: V281 = ISZERO V280
0x358: V282 = ISZERO V281
0x359: V283 = 0x366
0x35c: JUMPI 0x366 V282
---
Entry stack: [V11, 0x75, V259, 0x3ccfd60b, V268, 0x0, V271, V272, V271, 0x0, V259, V275]
Stack pops: 7
Stack additions: [V281]
Exit stack: [V11, 0x75, V259, 0x3ccfd60b, V268, V281]

================================

Block 0x35d
[0x35d:0x365]
---
Predecessors: [0x352]
Successors: []
---
0x35d RETURNDATASIZE
0x35e PUSH1 0x0
0x360 DUP1
0x361 RETURNDATACOPY
0x362 RETURNDATASIZE
0x363 PUSH1 0x0
0x365 REVERT
---
0x35d: V284 = RETURNDATASIZE
0x35e: V285 = 0x0
0x361: RETURNDATACOPY 0x0 0x0 V284
0x362: V286 = RETURNDATASIZE
0x363: V287 = 0x0
0x365: REVERT 0x0 V286
---
Entry stack: [V11, 0x75, V259, 0x3ccfd60b, V268, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V259, 0x3ccfd60b, V268, V281]

================================

Block 0x366
[0x366:0x36b]
---
Predecessors: [0x352]
Successors: [0x75]
---
0x366 JUMPDEST
0x367 POP
0x368 POP
0x369 POP
0x36a POP
0x36b JUMP
---
0x366: JUMPDEST 
0x36b: JUMP 0x75
---
Entry stack: [V11, 0x75, V259, 0x3ccfd60b, V268, V281]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x36c
[0x36c:0x37f]
---
Predecessors: [0xad]
Successors: [0x380, 0x3bd]
---
0x36c JUMPDEST
0x36d PUSH1 0x0
0x36f DUP1
0x370 SLOAD
0x371 PUSH1 0x1
0x373 PUSH1 0xa0
0x375 PUSH1 0x2
0x377 EXP
0x378 SUB
0x379 AND
0x37a CALLER
0x37b EQ
0x37c PUSH2 0x3bd
0x37f JUMPI
---
0x36c: JUMPDEST 
0x36d: V288 = 0x0
0x370: V289 = S[0x0]
0x371: V290 = 0x1
0x373: V291 = 0xa0
0x375: V292 = 0x2
0x377: V293 = EXP 0x2 0xa0
0x378: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x379: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x37a: V296 = CALLER
0x37b: V297 = EQ V296 V295
0x37c: V298 = 0x3bd
0x37f: JUMPI 0x3bd V297
---
Entry stack: [V11, 0x75]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x75, 0x0]

================================

Block 0x380
[0x380:0x3bc]
---
Predecessors: [0x36c]
Successors: []
---
0x380 PUSH1 0x40
0x382 DUP1
0x383 MLOAD
0x384 PUSH1 0xe5
0x386 PUSH1 0x2
0x388 EXP
0x389 PUSH3 0x461bcd
0x38d MUL
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x20
0x392 PUSH1 0x4
0x394 DUP3
0x395 ADD
0x396 MSTORE
0x397 PUSH1 0xe
0x399 PUSH1 0x24
0x39b DUP3
0x39c ADD
0x39d MSTORE
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 MLOAD
0x3a2 PUSH1 0x20
0x3a4 PUSH2 0x5cc
0x3a7 DUP4
0x3a8 CODECOPY
0x3a9 DUP2
0x3aa MLOAD
0x3ab SWAP2
0x3ac MSTORE
0x3ad PUSH1 0x44
0x3af DUP3
0x3b0 ADD
0x3b1 MSTORE
0x3b2 SWAP1
0x3b3 MLOAD
0x3b4 SWAP1
0x3b5 DUP2
0x3b6 SWAP1
0x3b7 SUB
0x3b8 PUSH1 0x64
0x3ba ADD
0x3bb SWAP1
0x3bc REVERT
---
0x380: V299 = 0x40
0x383: V300 = M[0x40]
0x384: V301 = 0xe5
0x386: V302 = 0x2
0x388: V303 = EXP 0x2 0xe5
0x389: V304 = 0x461bcd
0x38d: V305 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x38f: M[V300] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x390: V306 = 0x20
0x392: V307 = 0x4
0x395: V308 = ADD V300 0x4
0x396: M[V308] = 0x20
0x397: V309 = 0xe
0x399: V310 = 0x24
0x39c: V311 = ADD V300 0x24
0x39d: M[V311] = 0xe
0x39e: V312 = 0x0
0x3a1: V313 = M[0x0]
0x3a2: V314 = 0x20
0x3a4: V315 = 0x5cc
0x3a8: CODECOPY 0x0 0x5cc 0x20
0x3aa: V316 = M[0x0]
0x3ac: M[0x0] = V313
0x3ad: V317 = 0x44
0x3b0: V318 = ADD V300 0x44
0x3b1: M[V318] = V316
0x3b3: V319 = M[0x40]
0x3b7: V320 = SUB V300 V319
0x3b8: V321 = 0x64
0x3ba: V322 = ADD 0x64 V320
0x3bc: REVERT V319 V322
---
Entry stack: [V11, 0x75, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, 0x0]

================================

Block 0x3bd
[0x3bd:0x3c5]
---
Predecessors: [0x36c]
Successors: [0x44a]
---
0x3bd JUMPDEST
0x3be PUSH2 0x3c6
0x3c1 ADDRESS
0x3c2 PUSH2 0x44a
0x3c5 JUMP
---
0x3bd: JUMPDEST 
0x3be: V323 = 0x3c6
0x3c1: V324 = ADDRESS
0x3c2: V325 = 0x44a
0x3c5: JUMP 0x44a
---
Entry stack: [V11, 0x75, 0x0]
Stack pops: 0
Stack additions: [0x3c6, V324]
Exit stack: [V11, 0x75, 0x0, 0x3c6, V324]

================================

Block 0x3c6
[0x3c6:0x42a]
---
Predecessors: [0x4df]
Successors: [0x42b, 0x42f]
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x2
0x3c9 SLOAD
0x3ca PUSH1 0x40
0x3cc DUP1
0x3cd MLOAD
0x3ce PUSH32 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x3ef DUP2
0x3f0 MSTORE
0x3f1 PUSH1 0x4
0x3f3 DUP2
0x3f4 ADD
0x3f5 DUP5
0x3f6 SWAP1
0x3f7 MSTORE
0x3f8 SWAP1
0x3f9 MLOAD
0x3fa SWAP3
0x3fb SWAP4
0x3fc POP
0x3fd PUSH1 0x1
0x3ff PUSH1 0xa0
0x401 PUSH1 0x2
0x403 EXP
0x404 SUB
0x405 SWAP1
0x406 SWAP2
0x407 AND
0x408 SWAP2
0x409 PUSH4 0xe4849b32
0x40e SWAP2
0x40f PUSH1 0x24
0x411 DUP1
0x412 DUP3
0x413 ADD
0x414 SWAP3
0x415 PUSH1 0x0
0x417 SWAP3
0x418 SWAP1
0x419 SWAP2
0x41a SWAP1
0x41b DUP3
0x41c SWAP1
0x41d SUB
0x41e ADD
0x41f DUP2
0x420 DUP4
0x421 DUP8
0x422 DUP1
0x423 EXTCODESIZE
0x424 ISZERO
0x425 DUP1
0x426 ISZERO
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V326 = 0x2
0x3c9: V327 = S[0x2]
0x3ca: V328 = 0x40
0x3cd: V329 = M[0x40]
0x3ce: V330 = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x3f0: M[V329] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x3f1: V331 = 0x4
0x3f4: V332 = ADD V329 0x4
0x3f7: M[V332] = V404
0x3f9: V333 = M[0x40]
0x3fd: V334 = 0x1
0x3ff: V335 = 0xa0
0x401: V336 = 0x2
0x403: V337 = EXP 0x2 0xa0
0x404: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x407: V339 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x409: V340 = 0xe4849b32
0x40f: V341 = 0x24
0x413: V342 = ADD V329 0x24
0x415: V343 = 0x0
0x41d: V344 = SUB V329 V333
0x41e: V345 = ADD V344 0x24
0x423: V346 = EXTCODESIZE V339
0x424: V347 = ISZERO V346
0x426: V348 = ISZERO V347
0x427: V349 = 0x42f
0x42a: JUMPI 0x42f V348
---
Entry stack: [V11, 0x75, S1, V404]
Stack pops: 2
Stack additions: [S0, V339, 0xe4849b32, V342, 0x0, V333, V345, V333, 0x0, V339, V347]
Exit stack: [V11, 0x75, V404, V339, 0xe4849b32, V342, 0x0, V333, V345, V333, 0x0, V339, V347]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x3c6]
Successors: []
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
---
0x42b: V350 = 0x0
0x42e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, V404, V339, 0xe4849b32, V342, 0x0, V333, V345, V333, 0x0, V339, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V404, V339, 0xe4849b32, V342, 0x0, V333, V345, V333, 0x0, V339, V347]

================================

Block 0x42f
[0x42f:0x439]
---
Predecessors: [0x3c6]
Successors: [0x43a, 0x443]
---
0x42f JUMPDEST
0x430 POP
0x431 GAS
0x432 CALL
0x433 ISZERO
0x434 DUP1
0x435 ISZERO
0x436 PUSH2 0x443
0x439 JUMPI
---
0x42f: JUMPDEST 
0x431: V351 = GAS
0x432: V352 = CALL V351 V339 0x0 V333 V345 V333 0x0
0x433: V353 = ISZERO V352
0x435: V354 = ISZERO V353
0x436: V355 = 0x443
0x439: JUMPI 0x443 V354
---
Entry stack: [V11, 0x75, V404, V339, 0xe4849b32, V342, 0x0, V333, V345, V333, 0x0, V339, V347]
Stack pops: 7
Stack additions: [V353]
Exit stack: [V11, 0x75, V404, V339, 0xe4849b32, V342, V353]

================================

Block 0x43a
[0x43a:0x442]
---
Predecessors: [0x42f]
Successors: []
---
0x43a RETURNDATASIZE
0x43b PUSH1 0x0
0x43d DUP1
0x43e RETURNDATACOPY
0x43f RETURNDATASIZE
0x440 PUSH1 0x0
0x442 REVERT
---
0x43a: V356 = RETURNDATASIZE
0x43b: V357 = 0x0
0x43e: RETURNDATACOPY 0x0 0x0 V356
0x43f: V358 = RETURNDATASIZE
0x440: V359 = 0x0
0x442: REVERT 0x0 V358
---
Entry stack: [V11, 0x75, V404, V339, 0xe4849b32, V342, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V404, V339, 0xe4849b32, V342, V353]

================================

Block 0x443
[0x443:0x449]
---
Predecessors: [0x42f]
Successors: [0x75]
---
0x443 JUMPDEST
0x444 POP
0x445 POP
0x446 POP
0x447 POP
0x448 POP
0x449 JUMP
---
0x443: JUMPDEST 
0x449: JUMP 0x75
---
Entry stack: [V11, 0x75, V404, V339, 0xe4849b32, V342, V353]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x44a
[0x44a:0x4b0]
---
Predecessors: [0xc2, 0x1ef, 0x3bd]
Successors: [0x4b1, 0x4b5]
---
0x44a JUMPDEST
0x44b PUSH1 0x2
0x44d SLOAD
0x44e PUSH1 0x40
0x450 DUP1
0x451 MLOAD
0x452 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x473 DUP2
0x474 MSTORE
0x475 PUSH1 0x1
0x477 PUSH1 0xa0
0x479 PUSH1 0x2
0x47b EXP
0x47c SUB
0x47d DUP5
0x47e DUP2
0x47f AND
0x480 PUSH1 0x4
0x482 DUP4
0x483 ADD
0x484 MSTORE
0x485 SWAP2
0x486 MLOAD
0x487 PUSH1 0x0
0x489 SWAP4
0x48a SWAP3
0x48b SWAP1
0x48c SWAP3
0x48d AND
0x48e SWAP2
0x48f PUSH4 0x70a08231
0x494 SWAP2
0x495 PUSH1 0x24
0x497 DUP1
0x498 DUP3
0x499 ADD
0x49a SWAP3
0x49b PUSH1 0x20
0x49d SWAP3
0x49e SWAP1
0x49f SWAP2
0x4a0 SWAP1
0x4a1 DUP3
0x4a2 SWAP1
0x4a3 SUB
0x4a4 ADD
0x4a5 DUP2
0x4a6 DUP8
0x4a7 DUP8
0x4a8 DUP1
0x4a9 EXTCODESIZE
0x4aa ISZERO
0x4ab DUP1
0x4ac ISZERO
0x4ad PUSH2 0x4b5
0x4b0 JUMPI
---
0x44a: JUMPDEST 
0x44b: V360 = 0x2
0x44d: V361 = S[0x2]
0x44e: V362 = 0x40
0x451: V363 = M[0x40]
0x452: V364 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x474: M[V363] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x475: V365 = 0x1
0x477: V366 = 0xa0
0x479: V367 = 0x2
0x47b: V368 = EXP 0x2 0xa0
0x47c: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47f: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x480: V371 = 0x4
0x483: V372 = ADD V363 0x4
0x484: M[V372] = V370
0x486: V373 = M[0x40]
0x487: V374 = 0x0
0x48d: V375 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V376 = 0x70a08231
0x495: V377 = 0x24
0x499: V378 = ADD V363 0x24
0x49b: V379 = 0x20
0x4a3: V380 = SUB V363 V373
0x4a4: V381 = ADD V380 0x24
0x4a9: V382 = EXTCODESIZE V375
0x4aa: V383 = ISZERO V382
0x4ac: V384 = ISZERO V383
0x4ad: V385 = 0x4b5
0x4b0: JUMPI 0x4b5 V384
---
Entry stack: [V11, 0x75, S2, {0xd7, 0x1f8, 0x3c6}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V375, 0x70a08231, V378, 0x20, V373, V381, V373, 0x0, V375, V383]
Exit stack: [V11, 0x75, S2, {0xd7, 0x1f8, 0x3c6}, S0, 0x0, V375, 0x70a08231, V378, 0x20, V373, V381, V373, 0x0, V375, V383]

================================

Block 0x4b1
[0x4b1:0x4b4]
---
Predecessors: [0x44a]
Successors: []
---
0x4b1 PUSH1 0x0
0x4b3 DUP1
0x4b4 REVERT
---
0x4b1: V386 = 0x0
0x4b4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, S13, {0xd7, 0x1f8, 0x3c6}, S11, 0x0, V375, 0x70a08231, V378, 0x20, V373, V381, V373, 0x0, V375, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, S13, {0xd7, 0x1f8, 0x3c6}, S11, 0x0, V375, 0x70a08231, V378, 0x20, V373, V381, V373, 0x0, V375, V383]

================================

Block 0x4b5
[0x4b5:0x4bf]
---
Predecessors: [0x44a]
Successors: [0x4c0, 0x4c9]
---
0x4b5 JUMPDEST
0x4b6 POP
0x4b7 GAS
0x4b8 CALL
0x4b9 ISZERO
0x4ba DUP1
0x4bb ISZERO
0x4bc PUSH2 0x4c9
0x4bf JUMPI
---
0x4b5: JUMPDEST 
0x4b7: V387 = GAS
0x4b8: V388 = CALL V387 V375 0x0 V373 V381 V373 0x20
0x4b9: V389 = ISZERO V388
0x4bb: V390 = ISZERO V389
0x4bc: V391 = 0x4c9
0x4bf: JUMPI 0x4c9 V390
---
Entry stack: [V11, 0x75, S13, {0xd7, 0x1f8, 0x3c6}, S11, 0x0, V375, 0x70a08231, V378, 0x20, V373, V381, V373, 0x0, V375, V383]
Stack pops: 7
Stack additions: [V389]
Exit stack: [V11, 0x75, S13, {0xd7, 0x1f8, 0x3c6}, S11, 0x0, V375, 0x70a08231, V378, V389]

================================

Block 0x4c0
[0x4c0:0x4c8]
---
Predecessors: [0x4b5]
Successors: []
---
0x4c0 RETURNDATASIZE
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 RETURNDATACOPY
0x4c5 RETURNDATASIZE
0x4c6 PUSH1 0x0
0x4c8 REVERT
---
0x4c0: V392 = RETURNDATASIZE
0x4c1: V393 = 0x0
0x4c4: RETURNDATACOPY 0x0 0x0 V392
0x4c5: V394 = RETURNDATASIZE
0x4c6: V395 = 0x0
0x4c8: REVERT 0x0 V394
---
Entry stack: [V11, 0x75, S7, {0xd7, 0x1f8, 0x3c6}, S5, 0x0, S3, 0x70a08231, S1, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, S7, {0xd7, 0x1f8, 0x3c6}, S5, 0x0, S3, 0x70a08231, S1, V389]

================================

Block 0x4c9
[0x4c9:0x4da]
---
Predecessors: [0x4b5]
Successors: [0x4db, 0x4df]
---
0x4c9 JUMPDEST
0x4ca POP
0x4cb POP
0x4cc POP
0x4cd POP
0x4ce PUSH1 0x40
0x4d0 MLOAD
0x4d1 RETURNDATASIZE
0x4d2 PUSH1 0x20
0x4d4 DUP2
0x4d5 LT
0x4d6 ISZERO
0x4d7 PUSH2 0x4df
0x4da JUMPI
---
0x4c9: JUMPDEST 
0x4ce: V396 = 0x40
0x4d0: V397 = M[0x40]
0x4d1: V398 = RETURNDATASIZE
0x4d2: V399 = 0x20
0x4d5: V400 = LT V398 0x20
0x4d6: V401 = ISZERO V400
0x4d7: V402 = 0x4df
0x4da: JUMPI 0x4df V401
---
Entry stack: [V11, 0x75, S7, {0xd7, 0x1f8, 0x3c6}, S5, 0x0, S3, 0x70a08231, S1, V389]
Stack pops: 4
Stack additions: [V397, V398]
Exit stack: [V11, 0x75, S7, {0xd7, 0x1f8, 0x3c6}, S5, 0x0, V397, V398]

================================

Block 0x4db
[0x4db:0x4de]
---
Predecessors: [0x4c9]
Successors: []
---
0x4db PUSH1 0x0
0x4dd DUP1
0x4de REVERT
---
0x4db: V403 = 0x0
0x4de: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, S5, {0xd7, 0x1f8, 0x3c6}, S3, 0x0, V397, V398]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, S5, {0xd7, 0x1f8, 0x3c6}, S3, 0x0, V397, V398]

================================

Block 0x4df
[0x4df:0x4e6]
---
Predecessors: [0x4c9]
Successors: [0xd7, 0x1f8, 0x3c6]
---
0x4df JUMPDEST
0x4e0 POP
0x4e1 MLOAD
0x4e2 SWAP3
0x4e3 SWAP2
0x4e4 POP
0x4e5 POP
0x4e6 JUMP
---
0x4df: JUMPDEST 
0x4e1: V404 = M[V397]
0x4e6: JUMP {0xd7, 0x1f8, 0x3c6}
---
Entry stack: [V11, 0x75, S5, {0xd7, 0x1f8, 0x3c6}, S3, 0x0, V397, V398]
Stack pops: 5
Stack additions: [V404]
Exit stack: [V11, 0x75, S5, V404]

================================

Block 0x4e7
[0x4e7:0x4f9]
---
Predecessors: [0xf5]
Successors: [0x4fa, 0x537]
---
0x4e7 JUMPDEST
0x4e8 PUSH1 0x0
0x4ea SLOAD
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 AND
0x4f4 CALLER
0x4f5 EQ
0x4f6 PUSH2 0x537
0x4f9 JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V405 = 0x0
0x4ea: V406 = S[0x0]
0x4eb: V407 = 0x1
0x4ed: V408 = 0xa0
0x4ef: V409 = 0x2
0x4f1: V410 = EXP 0x2 0xa0
0x4f2: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x4f4: V413 = CALLER
0x4f5: V414 = EQ V413 V412
0x4f6: V415 = 0x537
0x4f9: JUMPI 0x537 V414
---
Entry stack: [V11, 0x75, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V74]

================================

Block 0x4fa
[0x4fa:0x536]
---
Predecessors: [0x4e7]
Successors: []
---
0x4fa PUSH1 0x40
0x4fc DUP1
0x4fd MLOAD
0x4fe PUSH1 0xe5
0x500 PUSH1 0x2
0x502 EXP
0x503 PUSH3 0x461bcd
0x507 MUL
0x508 DUP2
0x509 MSTORE
0x50a PUSH1 0x20
0x50c PUSH1 0x4
0x50e DUP3
0x50f ADD
0x510 MSTORE
0x511 PUSH1 0xe
0x513 PUSH1 0x24
0x515 DUP3
0x516 ADD
0x517 MSTORE
0x518 PUSH1 0x0
0x51a DUP1
0x51b MLOAD
0x51c PUSH1 0x20
0x51e PUSH2 0x5cc
0x521 DUP4
0x522 CODECOPY
0x523 DUP2
0x524 MLOAD
0x525 SWAP2
0x526 MSTORE
0x527 PUSH1 0x44
0x529 DUP3
0x52a ADD
0x52b MSTORE
0x52c SWAP1
0x52d MLOAD
0x52e SWAP1
0x52f DUP2
0x530 SWAP1
0x531 SUB
0x532 PUSH1 0x64
0x534 ADD
0x535 SWAP1
0x536 REVERT
---
0x4fa: V416 = 0x40
0x4fd: V417 = M[0x40]
0x4fe: V418 = 0xe5
0x500: V419 = 0x2
0x502: V420 = EXP 0x2 0xe5
0x503: V421 = 0x461bcd
0x507: V422 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x509: M[V417] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x50a: V423 = 0x20
0x50c: V424 = 0x4
0x50f: V425 = ADD V417 0x4
0x510: M[V425] = 0x20
0x511: V426 = 0xe
0x513: V427 = 0x24
0x516: V428 = ADD V417 0x24
0x517: M[V428] = 0xe
0x518: V429 = 0x0
0x51b: V430 = M[0x0]
0x51c: V431 = 0x20
0x51e: V432 = 0x5cc
0x522: CODECOPY 0x0 0x5cc 0x20
0x524: V433 = M[0x0]
0x526: M[0x0] = V430
0x527: V434 = 0x44
0x52a: V435 = ADD V417 0x44
0x52b: M[V435] = V433
0x52d: V436 = M[0x40]
0x531: V437 = SUB V417 V436
0x532: V438 = 0x64
0x534: V439 = ADD 0x64 V437
0x536: REVERT V436 V439
---
Entry stack: [V11, 0x75, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V74]

================================

Block 0x537
[0x537:0x53e]
---
Predecessors: [0x4e7]
Successors: [0x53f, 0x57f]
---
0x537 JUMPDEST
0x538 DUP1
0x539 ISZERO
0x53a ISZERO
0x53b PUSH2 0x57f
0x53e JUMPI
---
0x537: JUMPDEST 
0x539: V440 = ISZERO V74
0x53a: V441 = ISZERO V440
0x53b: V442 = 0x57f
0x53e: JUMPI 0x57f V441
---
Entry stack: [V11, 0x75, V74]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x75, V74]

================================

Block 0x53f
[0x53f:0x56f]
---
Predecessors: [0x537]
Successors: [0x570, 0x579]
---
0x53f PUSH1 0x0
0x541 DUP1
0x542 SLOAD
0x543 PUSH1 0x40
0x545 MLOAD
0x546 PUSH1 0x1
0x548 PUSH1 0xa0
0x54a PUSH1 0x2
0x54c EXP
0x54d SUB
0x54e SWAP1
0x54f SWAP2
0x550 AND
0x551 SWAP2
0x552 ADDRESS
0x553 BALANCE
0x554 DUP1
0x555 ISZERO
0x556 PUSH2 0x8fc
0x559 MUL
0x55a SWAP3
0x55b SWAP1
0x55c SWAP2
0x55d DUP2
0x55e DUP2
0x55f DUP2
0x560 DUP6
0x561 DUP9
0x562 DUP9
0x563 CALL
0x564 SWAP4
0x565 POP
0x566 POP
0x567 POP
0x568 POP
0x569 ISZERO
0x56a DUP1
0x56b ISZERO
0x56c PUSH2 0x579
0x56f JUMPI
---
0x53f: V443 = 0x0
0x542: V444 = S[0x0]
0x543: V445 = 0x40
0x545: V446 = M[0x40]
0x546: V447 = 0x1
0x548: V448 = 0xa0
0x54a: V449 = 0x2
0x54c: V450 = EXP 0x2 0xa0
0x54d: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x550: V452 = AND V444 0xffffffffffffffffffffffffffffffffffffffff
0x552: V453 = ADDRESS
0x553: V454 = BALANCE V453
0x555: V455 = ISZERO V454
0x556: V456 = 0x8fc
0x559: V457 = MUL 0x8fc V455
0x563: V458 = CALL V457 V452 V454 V446 0x0 V446 0x0
0x569: V459 = ISZERO V458
0x56b: V460 = ISZERO V459
0x56c: V461 = 0x579
0x56f: JUMPI 0x579 V460
---
Entry stack: [V11, 0x75, V74]
Stack pops: 0
Stack additions: [V459]
Exit stack: [V11, 0x75, V74, V459]

================================

Block 0x570
[0x570:0x578]
---
Predecessors: [0x53f]
Successors: []
---
0x570 RETURNDATASIZE
0x571 PUSH1 0x0
0x573 DUP1
0x574 RETURNDATACOPY
0x575 RETURNDATASIZE
0x576 PUSH1 0x0
0x578 REVERT
---
0x570: V462 = RETURNDATASIZE
0x571: V463 = 0x0
0x574: RETURNDATACOPY 0x0 0x0 V462
0x575: V464 = RETURNDATASIZE
0x576: V465 = 0x0
0x578: REVERT 0x0 V464
---
Entry stack: [V11, 0x75, V74, V459]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V74, V459]

================================

Block 0x579
[0x579:0x57e]
---
Predecessors: [0x53f]
Successors: [0x5c8]
---
0x579 JUMPDEST
0x57a POP
0x57b PUSH2 0x5c8
0x57e JUMP
---
0x579: JUMPDEST 
0x57b: V466 = 0x5c8
0x57e: JUMP 0x5c8
---
Entry stack: [V11, 0x75, V74, V459]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x75, V74]

================================

Block 0x57f
[0x57f:0x588]
---
Predecessors: [0x537]
Successors: [0x589, 0x58d]
---
0x57f JUMPDEST
0x580 ADDRESS
0x581 BALANCE
0x582 DUP2
0x583 GT
0x584 ISZERO
0x585 PUSH2 0x58d
0x588 JUMPI
---
0x57f: JUMPDEST 
0x580: V467 = ADDRESS
0x581: V468 = BALANCE V467
0x583: V469 = GT V74 V468
0x584: V470 = ISZERO V469
0x585: V471 = 0x58d
0x588: JUMPI 0x58d V470
---
Entry stack: [V11, 0x75, V74]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x75, V74]

================================

Block 0x589
[0x589:0x58c]
---
Predecessors: [0x57f]
Successors: []
---
0x589 PUSH1 0x0
0x58b DUP1
0x58c REVERT
---
0x589: V472 = 0x0
0x58c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x75, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V74]

================================

Block 0x58d
[0x58d:0x5bc]
---
Predecessors: [0x57f]
Successors: [0x5bd, 0x5c6]
---
0x58d JUMPDEST
0x58e PUSH1 0x0
0x590 DUP1
0x591 SLOAD
0x592 PUSH1 0x40
0x594 MLOAD
0x595 PUSH1 0x1
0x597 PUSH1 0xa0
0x599 PUSH1 0x2
0x59b EXP
0x59c SUB
0x59d SWAP1
0x59e SWAP2
0x59f AND
0x5a0 SWAP2
0x5a1 DUP4
0x5a2 ISZERO
0x5a3 PUSH2 0x8fc
0x5a6 MUL
0x5a7 SWAP2
0x5a8 DUP5
0x5a9 SWAP2
0x5aa DUP2
0x5ab DUP2
0x5ac DUP2
0x5ad DUP6
0x5ae DUP9
0x5af DUP9
0x5b0 CALL
0x5b1 SWAP4
0x5b2 POP
0x5b3 POP
0x5b4 POP
0x5b5 POP
0x5b6 ISZERO
0x5b7 DUP1
0x5b8 ISZERO
0x5b9 PUSH2 0x5c6
0x5bc JUMPI
---
0x58d: JUMPDEST 
0x58e: V473 = 0x0
0x591: V474 = S[0x0]
0x592: V475 = 0x40
0x594: V476 = M[0x40]
0x595: V477 = 0x1
0x597: V478 = 0xa0
0x599: V479 = 0x2
0x59b: V480 = EXP 0x2 0xa0
0x59c: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59f: V482 = AND V474 0xffffffffffffffffffffffffffffffffffffffff
0x5a2: V483 = ISZERO V74
0x5a3: V484 = 0x8fc
0x5a6: V485 = MUL 0x8fc V483
0x5b0: V486 = CALL V485 V482 V74 V476 0x0 V476 0x0
0x5b6: V487 = ISZERO V486
0x5b8: V488 = ISZERO V487
0x5b9: V489 = 0x5c6
0x5bc: JUMPI 0x5c6 V488
---
Entry stack: [V11, 0x75, V74]
Stack pops: 1
Stack additions: [S0, V487]
Exit stack: [V11, 0x75, V74, V487]

================================

Block 0x5bd
[0x5bd:0x5c5]
---
Predecessors: [0x58d]
Successors: []
---
0x5bd RETURNDATASIZE
0x5be PUSH1 0x0
0x5c0 DUP1
0x5c1 RETURNDATACOPY
0x5c2 RETURNDATASIZE
0x5c3 PUSH1 0x0
0x5c5 REVERT
---
0x5bd: V490 = RETURNDATASIZE
0x5be: V491 = 0x0
0x5c1: RETURNDATACOPY 0x0 0x0 V490
0x5c2: V492 = RETURNDATASIZE
0x5c3: V493 = 0x0
0x5c5: REVERT 0x0 V492
---
Entry stack: [V11, 0x75, V74, V487]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x75, V74, V487]

================================

Block 0x5c6
[0x5c6:0x5c7]
---
Predecessors: [0x58d]
Successors: [0x5c8]
---
0x5c6 JUMPDEST
0x5c7 POP
---
0x5c6: JUMPDEST 
---
Entry stack: [V11, 0x75, V74, V487]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x75, V74]

================================

Block 0x5c8
[0x5c8:0x5ca]
---
Predecessors: [0x579, 0x5c6]
Successors: [0x75]
---
0x5c8 JUMPDEST
0x5c9 POP
0x5ca JUMP
---
0x5c8: JUMPDEST 
0x5ca: JUMP 0x75
---
Entry stack: [V11, 0x75, V74]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5cb
[0x5cb:0x616]
---
Predecessors: []
Successors: []
---
0x5cb STOP
0x5cc COINBASE
0x5cd PUSH4 0x63657373
0x5d2 SHA3
0x5d3 DIFFICULTY
0x5d4 PUSH6 0x6e6965642100
0x5db STOP
0x5dc STOP
0x5dd STOP
0x5de STOP
0x5df STOP
0x5e0 STOP
0x5e1 STOP
0x5e2 STOP
0x5e3 STOP
0x5e4 STOP
0x5e5 STOP
0x5e6 STOP
0x5e7 STOP
0x5e8 STOP
0x5e9 STOP
0x5ea STOP
0x5eb STOP
0x5ec LOG1
0x5ed PUSH6 0x627a7a723058
0x5f4 SHA3
0x5f5 MISSING 0xbd
0x5f6 MISSING 0xa9
0x5f7 ADD
0x5f8 SWAP10
0x5f9 SWAP5
0x5fa DUP16
0x5fb PUSH20 0x4a0315e304fe617fabca4e54d2cce8e07442d3bd
0x610 OR
0x611 MISSING 0x23
0x612 MISSING 0xac
0x613 MISSING 0x1e
0x614 MISSING 0xad
0x615 STOP
0x616 MISSING 0x29
---
0x5cb: STOP 
0x5cc: V494 = COINBASE
0x5cd: V495 = 0x63657373
0x5d2: V496 = SHA3 0x63657373 V494
0x5d3: V497 = DIFFICULTY
0x5d4: V498 = 0x6e6965642100
0x5db: STOP 
0x5dc: STOP 
0x5dd: STOP 
0x5de: STOP 
0x5df: STOP 
0x5e0: STOP 
0x5e1: STOP 
0x5e2: STOP 
0x5e3: STOP 
0x5e4: STOP 
0x5e5: STOP 
0x5e6: STOP 
0x5e7: STOP 
0x5e8: STOP 
0x5e9: STOP 
0x5ea: STOP 
0x5eb: STOP 
0x5ec: LOG S0 S1 S2
0x5ed: V499 = 0x627a7a723058
0x5f4: V500 = SHA3 0x627a7a723058 S3
0x5f5: MISSING 0xbd
0x5f6: MISSING 0xa9
0x5f7: V501 = ADD S0 S1
0x5fb: V502 = 0x4a0315e304fe617fabca4e54d2cce8e07442d3bd
0x610: V503 = OR 0x4a0315e304fe617fabca4e54d2cce8e07442d3bd S16
0x611: MISSING 0x23
0x612: MISSING 0xac
0x613: MISSING 0x1e
0x614: MISSING 0xad
0x615: STOP 
0x616: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6e6965642100, V497, V496, V500, V503, S6, S2, S3, S4, S5, S11, S7, S8, S9, S10, V501, S12, S13, S14, S15, S16]
Exit stack: []

================================

Function 0:
Public function signature: 0x1792b0bc
Entry block: 0x77
Exit block: 0x75
Body: 0x75, 0x77, 0x7f, 0x83, 0x199, 0x19e, 0x1b2, 0x1ef, 0x1f8, 0x268, 0x26c, 0x277, 0x280, 0x292

Function 1:
Public function signature: 0x8d8f2adb
Entry block: 0x8c
Exit block: 0x75
Body: 0x75, 0x8c, 0x94, 0x98, 0x296, 0x2a9, 0x2e6, 0x34e, 0x352, 0x35d, 0x366

Function 2:
Public function signature: 0x9904e174
Entry block: 0xa1
Exit block: 0x75
Body: 0x75, 0xa1, 0xa9, 0xad, 0x36c, 0x380, 0x3bd, 0x3c6, 0x42b, 0x42f, 0x43a, 0x443

Function 3:
Public function signature: 0xf8b2cb4f
Entry block: 0xb6
Exit block: 0xbe
Body: 0xb6, 0xbe, 0xc2, 0xd7

Function 4:
Public function signature: 0xfc7fcae1
Entry block: 0xe9
Exit block: 0x75
Body: 0x75, 0xe9, 0xf1, 0xf5, 0x4e7, 0x4fa, 0x537, 0x53f, 0x570, 0x579, 0x57f, 0x589, 0x58d, 0x5bd, 0x5c6, 0x5c8

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x75
Body: 0x6c, 0x75, 0x101, 0x16a, 0x16e, 0x179, 0x182, 0x195, 0x199

Function 6:
Private function
Entry block: 0x44a
Exit block: 0x4df
Body: 0x44a, 0x4b5, 0x4c9, 0x4df

