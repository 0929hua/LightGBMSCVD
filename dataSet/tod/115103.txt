Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x48
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x48
0xa: JUMPI 0x48 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x9f]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x41c0e1b5
0x34 EQ
0x35 PUSH2 0x9f
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x41c0e1b5
0x34: V10 = EQ 0x41c0e1b5 V8
0x35: V11 = 0x9f
0x38: JUMPI 0x9f V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xac]
---
0x39 DUP1
0x3a PUSH4 0xe5225381
0x3f EQ
0x40 PUSH2 0xac
0x43 JUMPI
---
0x3a: V12 = 0xe5225381
0x3f: V13 = EQ 0xe5225381 V8
0x40: V14 = 0xac
0x43: JUMPI 0xac V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: [0x48]
---
0x44 PUSH2 0x48
0x47 JUMP
---
0x44: V15 = 0x48
0x47: JUMP 0x48
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x48
[0x48:0x4b]
---
Predecessors: [0x0, 0x44]
Successors: [0x4c]
---
0x48 JUMPDEST
0x49 PUSH2 0x9d
---
0x48: JUMPDEST 
0x49: V16 = 0x9d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x9d]
Exit stack: [V8, 0x9d]

================================

Block 0x4c
[0x4c:0x9a]
---
Predecessors: [0x48]
Successors: [0x9b]
---
0x4c JUMPDEST
0x4d CALLER
0x4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63 AND
0x64 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x85 CALLVALUE
0x86 PUSH1 0x40
0x88 MLOAD
0x89 DUP1
0x8a DUP3
0x8b DUP2
0x8c MSTORE
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP2
0x91 POP
0x92 POP
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP1
0x97 SWAP2
0x98 SUB
0x99 SWAP1
0x9a LOG2
---
0x4c: JUMPDEST 
0x4d: V17 = CALLER
0x4e: V18 = 0xffffffffffffffffffffffffffffffffffffffff
0x63: V19 = AND 0xffffffffffffffffffffffffffffffffffffffff V17
0x64: V20 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x85: V21 = CALLVALUE
0x86: V22 = 0x40
0x88: V23 = M[0x40]
0x8c: M[V23] = V21
0x8d: V24 = 0x20
0x8f: V25 = ADD 0x20 V23
0x93: V26 = 0x40
0x95: V27 = M[0x40]
0x98: V28 = SUB V25 V27
0x9a: LOG V27 V28 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V19
---
Entry stack: [V8, 0x9d]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x9d]

================================

Block 0x9b
[0x9b:0x9c]
---
Predecessors: [0x4c]
Successors: [0x9d]
---
0x9b JUMPDEST
0x9c JUMP
---
0x9b: JUMPDEST 
0x9c: JUMP 0x9d
---
Entry stack: [V8, 0x9d]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x9d
[0x9d:0x9e]
---
Predecessors: [0x9b]
Successors: []
---
0x9d JUMPDEST
0x9e STOP
---
0x9d: JUMPDEST 
0x9e: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x9f
[0x9f:0xa9]
---
Predecessors: [0xb]
Successors: [0xb9]
---
0x9f JUMPDEST
0xa0 PUSH2 0xaa
0xa3 PUSH1 0x4
0xa5 POP
0xa6 PUSH2 0xb9
0xa9 JUMP
---
0x9f: JUMPDEST 
0xa0: V29 = 0xaa
0xa3: V30 = 0x4
0xa6: V31 = 0xb9
0xa9: JUMP 0xb9
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xaa]
Exit stack: [V8, 0xaa]

================================

Block 0xaa
[0xaa:0xab]
---
Predecessors: [0x14b]
Successors: []
---
0xaa JUMPDEST
0xab STOP
---
0xaa: JUMPDEST 
0xab: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0x39]
Successors: [0x14d]
---
0xac JUMPDEST
0xad PUSH2 0xb7
0xb0 PUSH1 0x4
0xb2 POP
0xb3 PUSH2 0x14d
0xb6 JUMP
---
0xac: JUMPDEST 
0xad: V32 = 0xb7
0xb0: V33 = 0x4
0xb3: V34 = 0x14d
0xb6: JUMP 0x14d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xb7]
Exit stack: [V8, 0xb7]

================================

Block 0xb7
[0xb7:0xb8]
---
Predecessors: [0x211]
Successors: []
---
0xb7 JUMPDEST
0xb8 STOP
---
0xb7: JUMPDEST 
0xb8: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xb9
[0xb9:0x10f]
---
Predecessors: [0x9f]
Successors: [0x110, 0x14a]
---
0xb9 JUMPDEST
0xba PUSH1 0x0
0xbc PUSH1 0x0
0xbe SWAP1
0xbf SLOAD
0xc0 SWAP1
0xc1 PUSH2 0x100
0xc4 EXP
0xc5 SWAP1
0xc6 DIV
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc AND
0xdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2 AND
0xf3 CALLER
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a EQ
0x10b ISZERO
0x10c PUSH2 0x14a
0x10f JUMPI
---
0xb9: JUMPDEST 
0xba: V35 = 0x0
0xbc: V36 = 0x0
0xbf: V37 = S[0x0]
0xc1: V38 = 0x100
0xc4: V39 = EXP 0x100 0x0
0xc6: V40 = DIV V37 0x1
0xc7: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xdd: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xf3: V45 = CALLER
0xf4: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x10a: V48 = EQ V47 V44
0x10b: V49 = ISZERO V48
0x10c: V50 = 0x14a
0x10f: JUMPI 0x14a V49
---
Entry stack: [V8, 0xaa]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaa]

================================

Block 0x110
[0x110:0x149]
---
Predecessors: [0xb9]
Successors: []
---
0x110 PUSH1 0x0
0x112 PUSH1 0x0
0x114 SWAP1
0x115 SLOAD
0x116 SWAP1
0x117 PUSH2 0x100
0x11a EXP
0x11b SWAP1
0x11c DIV
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 SELFDESTRUCT
---
0x110: V51 = 0x0
0x112: V52 = 0x0
0x115: V53 = S[0x0]
0x117: V54 = 0x100
0x11a: V55 = EXP 0x100 0x0
0x11c: V56 = DIV V53 0x1
0x11d: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x133: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x149: SELFDESTRUCT V60
---
Entry stack: [V8, 0xaa]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaa]

================================

Block 0x14a
[0x14a:0x14a]
---
Predecessors: [0xb9]
Successors: [0x14b]
---
0x14a JUMPDEST
---
0x14a: JUMPDEST 
---
Entry stack: [V8, 0xaa]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaa]

================================

Block 0x14b
[0x14b:0x14c]
---
Predecessors: [0x14a]
Successors: [0xaa]
---
0x14b JUMPDEST
0x14c JUMP
---
0x14b: JUMPDEST 
0x14c: JUMP 0xaa
---
Entry stack: [V8, 0xaa]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x14d
[0x14d:0x1a3]
---
Predecessors: [0xac]
Successors: [0x1a4, 0x210]
---
0x14d JUMPDEST
0x14e PUSH1 0x0
0x150 PUSH1 0x0
0x152 SWAP1
0x153 SLOAD
0x154 SWAP1
0x155 PUSH2 0x100
0x158 EXP
0x159 SWAP1
0x15a DIV
0x15b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170 AND
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 AND
0x187 CALLER
0x188 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19d AND
0x19e EQ
0x19f ISZERO
0x1a0 PUSH2 0x210
0x1a3 JUMPI
---
0x14d: JUMPDEST 
0x14e: V61 = 0x0
0x150: V62 = 0x0
0x153: V63 = S[0x0]
0x155: V64 = 0x100
0x158: V65 = EXP 0x100 0x0
0x15a: V66 = DIV V63 0x1
0x15b: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x170: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x171: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x187: V71 = CALLER
0x188: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x19e: V74 = EQ V73 V70
0x19f: V75 = ISZERO V74
0x1a0: V76 = 0x210
0x1a3: JUMPI 0x210 V75
---
Entry stack: [V8, 0xb7]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb7]

================================

Block 0x1a4
[0x1a4:0x20f]
---
Predecessors: [0x14d]
Successors: [0x210]
---
0x1a4 PUSH1 0x0
0x1a6 PUSH1 0x0
0x1a8 SWAP1
0x1a9 SLOAD
0x1aa SWAP1
0x1ab PUSH2 0x100
0x1ae EXP
0x1af SWAP1
0x1b0 DIV
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1dc AND
0x1dd PUSH1 0x0
0x1df ADDRESS
0x1e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f5 AND
0x1f6 BALANCE
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb SWAP1
0x1fc POP
0x1fd PUSH1 0x0
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 DUP1
0x203 DUP4
0x204 SUB
0x205 DUP2
0x206 DUP6
0x207 DUP9
0x208 DUP9
0x209 CALL
0x20a SWAP4
0x20b POP
0x20c POP
0x20d POP
0x20e POP
0x20f POP
---
0x1a4: V77 = 0x0
0x1a6: V78 = 0x0
0x1a9: V79 = S[0x0]
0x1ab: V80 = 0x100
0x1ae: V81 = EXP 0x100 0x0
0x1b0: V82 = DIV V79 0x1
0x1b1: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x1c7: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1dd: V87 = 0x0
0x1df: V88 = ADDRESS
0x1e0: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x1f6: V91 = BALANCE V90
0x1f7: V92 = 0x40
0x1f9: V93 = M[0x40]
0x1fd: V94 = 0x0
0x1ff: V95 = 0x40
0x201: V96 = M[0x40]
0x204: V97 = SUB V93 V96
0x209: V98 = CALL 0x0 V86 V91 V96 V97 V96 0x0
---
Entry stack: [V8, 0xb7]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb7]

================================

Block 0x210
[0x210:0x210]
---
Predecessors: [0x14d, 0x1a4]
Successors: [0x211]
---
0x210 JUMPDEST
---
0x210: JUMPDEST 
---
Entry stack: [V8, 0xb7]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb7]

================================

Block 0x211
[0x211:0x212]
---
Predecessors: [0x210]
Successors: [0xb7]
---
0x211 JUMPDEST
0x212 JUMP
---
0x211: JUMPDEST 
0x212: JUMP 0xb7
---
Entry stack: [V8, 0xb7]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x9f
Exit block: 0xaa
Body: 0x9f, 0xaa, 0xb9, 0x110, 0x14a, 0x14b

Function 1:
Public function signature: 0xe5225381
Entry block: 0xac
Exit block: 0xb7
Body: 0xac, 0xb7, 0x14d, 0x1a4, 0x210, 0x211

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x9d
Body: 0x44, 0x48, 0x4c, 0x9b, 0x9d

