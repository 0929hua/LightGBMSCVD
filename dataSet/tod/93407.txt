Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa5]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xb7b3eb7
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa5
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xb7b3eb7
0x3b: V13 = EQ V11 0xb7b3eb7
0x3c: V14 = 0xa5
0x3f: JUMPI 0xa5 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xd7]
---
0x40 DUP1
0x41 PUSH4 0x22c5ec0f
0x46 EQ
0x47 PUSH2 0xd7
0x4a JUMPI
---
0x41: V15 = 0x22c5ec0f
0x46: V16 = EQ 0x22c5ec0f V11
0x47: V17 = 0xd7
0x4a: JUMPI 0xd7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xed]
---
0x4b DUP1
0x4c PUSH4 0x3bf2b4cd
0x51 EQ
0x52 PUSH2 0xed
0x55 JUMPI
---
0x4c: V18 = 0x3bf2b4cd
0x51: V19 = EQ 0x3bf2b4cd V11
0x52: V20 = 0xed
0x55: JUMPI 0xed V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x100]
---
0x56 DUP1
0x57 PUSH4 0x8d475461
0x5c EQ
0x5d PUSH2 0x100
0x60 JUMPI
---
0x57: V21 = 0x8d475461
0x5c: V22 = EQ 0x8d475461 V11
0x5d: V23 = 0x100
0x60: JUMPI 0x100 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x125]
---
0x61 DUP1
0x62 PUSH4 0x91f34dbd
0x67 EQ
0x68 PUSH2 0x125
0x6b JUMPI
---
0x62: V24 = 0x91f34dbd
0x67: V25 = EQ 0x91f34dbd V11
0x68: V26 = 0x125
0x6b: JUMPI 0x125 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x17b]
---
0x6c DUP1
0x6d PUSH4 0xa0175b96
0x72 EQ
0x73 PUSH2 0x17b
0x76 JUMPI
---
0x6d: V27 = 0xa0175b96
0x72: V28 = EQ 0xa0175b96 V11
0x73: V29 = 0x17b
0x76: JUMPI 0x17b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1c4]
---
0x77 DUP1
0x78 PUSH4 0xd41097e3
0x7d EQ
0x7e PUSH2 0x1c4
0x81 JUMPI
---
0x78: V30 = 0xd41097e3
0x7d: V31 = EQ 0xd41097e3 V11
0x7e: V32 = 0x1c4
0x81: JUMPI 0x1c4 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1e3]
---
0x82 DUP1
0x83 PUSH4 0xde41e1a1
0x88 EQ
0x89 PUSH2 0x1e3
0x8c JUMPI
---
0x83: V33 = 0xde41e1a1
0x88: V34 = EQ 0xde41e1a1 V11
0x89: V35 = 0x1e3
0x8c: JUMPI 0x1e3 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x211]
---
0x8d DUP1
0x8e PUSH4 0xdeff41c1
0x93 EQ
0x94 PUSH2 0x211
0x97 JUMPI
---
0x8e: V36 = 0xdeff41c1
0x93: V37 = EQ 0xdeff41c1 V11
0x94: V38 = 0x211
0x97: JUMPI 0x211 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x224]
---
0x98 DUP1
0x99 PUSH4 0xdf98ba00
0x9e EQ
0x9f PUSH2 0x224
0xa2 JUMPI
---
0x99: V39 = 0xdf98ba00
0x9e: V40 = EQ 0xdf98ba00 V11
0x9f: V41 = 0x224
0xa2: JUMPI 0x224 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x0, 0x98, 0x34a, 0x8f6, 0x95a]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3, S2, S1, S0]

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0xd]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V42 = CALLVALUE
0xa7: V43 = ISZERO V42
0xa8: V44 = 0xb0
0xab: JUMPI 0xb0 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V45 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xba]
---
Predecessors: [0xa5]
Successors: [0x237]
---
0xb0 JUMPDEST
0xb1 PUSH2 0xbb
0xb4 PUSH1 0x4
0xb6 CALLDATALOAD
0xb7 PUSH2 0x237
0xba JUMP
---
0xb0: JUMPDEST 
0xb1: V46 = 0xbb
0xb4: V47 = 0x4
0xb6: V48 = CALLDATALOAD 0x4
0xb7: V49 = 0x237
0xba: JUMP 0x237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbb, V48]
Exit stack: [V11, 0xbb, V48]

================================

Block 0xbb
[0xbb:0xd6]
---
Predecessors: [0x245, 0x960]
Successors: []
---
0xbb JUMPDEST
0xbc PUSH1 0x40
0xbe MLOAD
0xbf PUSH1 0x1
0xc1 PUSH1 0xa0
0xc3 PUSH1 0x2
0xc5 EXP
0xc6 SUB
0xc7 SWAP1
0xc8 SWAP2
0xc9 AND
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 SWAP2
0xd4 SUB
0xd5 SWAP1
0xd6 RETURN
---
0xbb: JUMPDEST 
0xbc: V50 = 0x40
0xbe: V51 = M[0x40]
0xbf: V52 = 0x1
0xc1: V53 = 0xa0
0xc3: V54 = 0x2
0xc5: V55 = EXP 0x2 0xa0
0xc6: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9: V57 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xcb: M[V51] = V57
0xcc: V58 = 0x20
0xce: V59 = ADD 0x20 V51
0xcf: V60 = 0x40
0xd1: V61 = M[0x40]
0xd4: V62 = SUB V59 V61
0xd6: RETURN V61 V62
---
Entry stack: [V11, 0xbb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbb]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x40]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V63 = CALLVALUE
0xd9: V64 = ISZERO V63
0xda: V65 = 0xe2
0xdd: JUMPI 0xe2 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V66 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0x25f]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xbb
0xe6 PUSH1 0x4
0xe8 CALLDATALOAD
0xe9 PUSH2 0x25f
0xec JUMP
---
0xe2: JUMPDEST 
0xe3: V67 = 0xbb
0xe6: V68 = 0x4
0xe8: V69 = CALLDATALOAD 0x4
0xe9: V70 = 0x25f
0xec: JUMP 0x25f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbb, V69]
Exit stack: [V11, 0xbb, V69]

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0x4b]
Successors: [0xf4, 0xf8]
---
0xed JUMPDEST
0xee CALLVALUE
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xed: JUMPDEST 
0xee: V71 = CALLVALUE
0xef: V72 = ISZERO V71
0xf0: V73 = 0xf8
0xf3: JUMPI 0xf8 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xed]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V74 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xed]
Successors: [0x26d]
---
0xf8 JUMPDEST
0xf9 PUSH2 0xa3
0xfc PUSH2 0x26d
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V75 = 0xa3
0xfc: V76 = 0x26d
0xff: JUMP 0x26d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V11, 0xa3]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x56]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V77 = CALLVALUE
0x102: V78 = ISZERO V77
0x103: V79 = 0x10b
0x106: JUMPI 0x10b V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V80 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x34d]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x34d
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V81 = 0x113
0x10f: V82 = 0x34d
0x112: JUMP 0x34d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x113
[0x113:0x124]
---
Predecessors: [0x34d, 0x96f]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 SWAP1
0x118 DUP2
0x119 MSTORE
0x11a PUSH1 0x20
0x11c ADD
0x11d PUSH1 0x40
0x11f MLOAD
0x120 DUP1
0x121 SWAP2
0x122 SUB
0x123 SWAP1
0x124 RETURN
---
0x113: JUMPDEST 
0x114: V83 = 0x40
0x116: V84 = M[0x40]
0x119: M[V84] = S0
0x11a: V85 = 0x20
0x11c: V86 = ADD 0x20 V84
0x11d: V87 = 0x40
0x11f: V88 = M[0x40]
0x122: V89 = SUB V86 V88
0x124: RETURN V88 V89
---
Entry stack: [V11, 0x113, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x113]

================================

Block 0x125
[0x125:0x12b]
---
Predecessors: [0x61]
Successors: [0x12c, 0x130]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0x125: JUMPDEST 
0x126: V90 = CALLVALUE
0x127: V91 = ISZERO V90
0x128: V92 = 0x130
0x12b: JUMPI 0x130 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x125]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V93 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x130
[0x130:0x17a]
---
Predecessors: [0x125]
Successors: [0x353]
---
0x130 JUMPDEST
0x131 PUSH2 0xa3
0x134 PUSH1 0x4
0x136 DUP1
0x137 CALLDATALOAD
0x138 SWAP1
0x139 PUSH1 0x24
0x13b DUP1
0x13c CALLDATALOAD
0x13d DUP1
0x13e DUP3
0x13f ADD
0x140 SWAP3
0x141 SWAP1
0x142 DUP2
0x143 ADD
0x144 CALLDATALOAD
0x145 SWAP2
0x146 PUSH1 0x44
0x148 CALLDATALOAD
0x149 DUP1
0x14a DUP3
0x14b ADD
0x14c SWAP3
0x14d SWAP1
0x14e DUP2
0x14f ADD
0x150 CALLDATALOAD
0x151 SWAP2
0x152 PUSH1 0x64
0x154 SWAP2
0x155 PUSH1 0xc4
0x157 CALLDATALOAD
0x158 DUP1
0x159 DUP4
0x15a ADD
0x15b SWAP3
0x15c SWAP1
0x15d DUP3
0x15e ADD
0x15f CALLDATALOAD
0x160 SWAP2
0x161 PUSH1 0xe4
0x163 CALLDATALOAD
0x164 DUP1
0x165 DUP4
0x166 ADD
0x167 SWAP3
0x168 SWAP1
0x169 DUP3
0x16a ADD
0x16b CALLDATALOAD
0x16c SWAP2
0x16d PUSH2 0x104
0x170 CALLDATALOAD
0x171 SWAP2
0x172 DUP3
0x173 ADD
0x174 SWAP2
0x175 ADD
0x176 CALLDATALOAD
0x177 PUSH2 0x353
0x17a JUMP
---
0x130: JUMPDEST 
0x131: V94 = 0xa3
0x134: V95 = 0x4
0x137: V96 = CALLDATALOAD 0x4
0x139: V97 = 0x24
0x13c: V98 = CALLDATALOAD 0x24
0x13f: V99 = ADD 0x24 V98
0x143: V100 = ADD 0x4 V98
0x144: V101 = CALLDATALOAD V100
0x146: V102 = 0x44
0x148: V103 = CALLDATALOAD 0x44
0x14b: V104 = ADD 0x24 V103
0x14f: V105 = ADD 0x4 V103
0x150: V106 = CALLDATALOAD V105
0x152: V107 = 0x64
0x155: V108 = 0xc4
0x157: V109 = CALLDATALOAD 0xc4
0x15a: V110 = ADD 0x24 V109
0x15e: V111 = ADD 0x4 V109
0x15f: V112 = CALLDATALOAD V111
0x161: V113 = 0xe4
0x163: V114 = CALLDATALOAD 0xe4
0x166: V115 = ADD 0x24 V114
0x16a: V116 = ADD 0x4 V114
0x16b: V117 = CALLDATALOAD V116
0x16d: V118 = 0x104
0x170: V119 = CALLDATALOAD 0x104
0x173: V120 = ADD V119 0x24
0x175: V121 = ADD V119 0x4
0x176: V122 = CALLDATALOAD V121
0x177: V123 = 0x353
0x17a: JUMP 0x353
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122]

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x6c]
Successors: [0x182, 0x186]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x186
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V124 = CALLVALUE
0x17d: V125 = ISZERO V124
0x17e: V126 = 0x186
0x181: JUMPI 0x186 V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x17b]
Successors: []
---
0x182 PUSH1 0x0
0x184 DUP1
0x185 REVERT
---
0x182: V127 = 0x0
0x185: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x186
[0x186:0x1c3]
---
Predecessors: [0x17b]
Successors: [0x663]
---
0x186 JUMPDEST
0x187 PUSH2 0xa3
0x18a PUSH1 0x4
0x18c DUP1
0x18d CALLDATALOAD
0x18e SWAP1
0x18f PUSH1 0x24
0x191 DUP1
0x192 CALLDATALOAD
0x193 DUP1
0x194 DUP3
0x195 ADD
0x196 SWAP3
0x197 SWAP1
0x198 DUP2
0x199 ADD
0x19a CALLDATALOAD
0x19b SWAP2
0x19c PUSH1 0x44
0x19e SWAP2
0x19f PUSH1 0xa4
0x1a1 CALLDATALOAD
0x1a2 DUP1
0x1a3 DUP4
0x1a4 ADD
0x1a5 SWAP3
0x1a6 SWAP1
0x1a7 DUP3
0x1a8 ADD
0x1a9 CALLDATALOAD
0x1aa SWAP2
0x1ab PUSH1 0xc4
0x1ad CALLDATALOAD
0x1ae DUP1
0x1af DUP4
0x1b0 ADD
0x1b1 SWAP3
0x1b2 SWAP1
0x1b3 DUP3
0x1b4 ADD
0x1b5 CALLDATALOAD
0x1b6 SWAP2
0x1b7 PUSH1 0xe4
0x1b9 CALLDATALOAD
0x1ba SWAP2
0x1bb DUP3
0x1bc ADD
0x1bd SWAP2
0x1be ADD
0x1bf CALLDATALOAD
0x1c0 PUSH2 0x663
0x1c3 JUMP
---
0x186: JUMPDEST 
0x187: V128 = 0xa3
0x18a: V129 = 0x4
0x18d: V130 = CALLDATALOAD 0x4
0x18f: V131 = 0x24
0x192: V132 = CALLDATALOAD 0x24
0x195: V133 = ADD 0x24 V132
0x199: V134 = ADD 0x4 V132
0x19a: V135 = CALLDATALOAD V134
0x19c: V136 = 0x44
0x19f: V137 = 0xa4
0x1a1: V138 = CALLDATALOAD 0xa4
0x1a4: V139 = ADD 0x24 V138
0x1a8: V140 = ADD 0x4 V138
0x1a9: V141 = CALLDATALOAD V140
0x1ab: V142 = 0xc4
0x1ad: V143 = CALLDATALOAD 0xc4
0x1b0: V144 = ADD 0x24 V143
0x1b4: V145 = ADD 0x4 V143
0x1b5: V146 = CALLDATALOAD V145
0x1b7: V147 = 0xe4
0x1b9: V148 = CALLDATALOAD 0xe4
0x1bc: V149 = ADD V148 0x24
0x1be: V150 = ADD V148 0x4
0x1bf: V151 = CALLDATALOAD V150
0x1c0: V152 = 0x663
0x1c3: JUMP 0x663
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151]
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151]

================================

Block 0x1c4
[0x1c4:0x1ca]
---
Predecessors: [0x77]
Successors: [0x1cb, 0x1cf]
---
0x1c4 JUMPDEST
0x1c5 CALLVALUE
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V153 = CALLVALUE
0x1c6: V154 = ISZERO V153
0x1c7: V155 = 0x1cf
0x1ca: JUMPI 0x1cf V154
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V156 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cf
[0x1cf:0x1e2]
---
Predecessors: [0x1c4]
Successors: [0x858]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0xa3
0x1d3 PUSH1 0x1
0x1d5 PUSH1 0xa0
0x1d7 PUSH1 0x2
0x1d9 EXP
0x1da SUB
0x1db PUSH1 0x4
0x1dd CALLDATALOAD
0x1de AND
0x1df PUSH2 0x858
0x1e2 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V157 = 0xa3
0x1d3: V158 = 0x1
0x1d5: V159 = 0xa0
0x1d7: V160 = 0x2
0x1d9: V161 = EXP 0x2 0xa0
0x1da: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1db: V163 = 0x4
0x1dd: V164 = CALLDATALOAD 0x4
0x1de: V165 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V166 = 0x858
0x1e2: JUMP 0x858
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa3, V165]
Exit stack: [V11, 0xa3, V165]

================================

Block 0x1e3
[0x1e3:0x1e9]
---
Predecessors: [0x82]
Successors: [0x1ea, 0x1ee]
---
0x1e3 JUMPDEST
0x1e4 CALLVALUE
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V167 = CALLVALUE
0x1e5: V168 = ISZERO V167
0x1e6: V169 = 0x1ee
0x1e9: JUMPI 0x1ee V168
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1e3]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V170 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ee
[0x1ee:0x210]
---
Predecessors: [0x1e3]
Successors: [0x8fb]
---
0x1ee JUMPDEST
0x1ef PUSH2 0xa3
0x1f2 PUSH1 0x24
0x1f4 PUSH1 0x4
0x1f6 DUP1
0x1f7 CALLDATALOAD
0x1f8 DUP3
0x1f9 DUP2
0x1fa ADD
0x1fb SWAP3
0x1fc SWAP2
0x1fd ADD
0x1fe CALLDATALOAD
0x1ff SWAP1
0x200 CALLDATALOAD
0x201 PUSH1 0x1
0x203 PUSH1 0xa0
0x205 PUSH1 0x2
0x207 EXP
0x208 SUB
0x209 PUSH1 0x44
0x20b CALLDATALOAD
0x20c AND
0x20d PUSH2 0x8fb
0x210 JUMP
---
0x1ee: JUMPDEST 
0x1ef: V171 = 0xa3
0x1f2: V172 = 0x24
0x1f4: V173 = 0x4
0x1f7: V174 = CALLDATALOAD 0x4
0x1fa: V175 = ADD V174 0x24
0x1fd: V176 = ADD 0x4 V174
0x1fe: V177 = CALLDATALOAD V176
0x200: V178 = CALLDATALOAD 0x24
0x201: V179 = 0x1
0x203: V180 = 0xa0
0x205: V181 = 0x2
0x207: V182 = EXP 0x2 0xa0
0x208: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V184 = 0x44
0x20b: V185 = CALLDATALOAD 0x44
0x20c: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V187 = 0x8fb
0x210: JUMP 0x8fb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa3, V175, V177, V178, V186]
Exit stack: [V11, 0xa3, V175, V177, V178, V186]

================================

Block 0x211
[0x211:0x217]
---
Predecessors: [0x8d]
Successors: [0x218, 0x21c]
---
0x211 JUMPDEST
0x212 CALLVALUE
0x213 ISZERO
0x214 PUSH2 0x21c
0x217 JUMPI
---
0x211: JUMPDEST 
0x212: V188 = CALLVALUE
0x213: V189 = ISZERO V188
0x214: V190 = 0x21c
0x217: JUMPI 0x21c V189
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x218
[0x218:0x21b]
---
Predecessors: [0x211]
Successors: []
---
0x218 PUSH1 0x0
0x21a DUP1
0x21b REVERT
---
0x218: V191 = 0x0
0x21b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x211]
Successors: [0x960]
---
0x21c JUMPDEST
0x21d PUSH2 0xbb
0x220 PUSH2 0x960
0x223 JUMP
---
0x21c: JUMPDEST 
0x21d: V192 = 0xbb
0x220: V193 = 0x960
0x223: JUMP 0x960
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbb]
Exit stack: [V11, 0xbb]

================================

Block 0x224
[0x224:0x22a]
---
Predecessors: [0x98]
Successors: [0x22b, 0x22f]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0x22f
0x22a JUMPI
---
0x224: JUMPDEST 
0x225: V194 = CALLVALUE
0x226: V195 = ISZERO V194
0x227: V196 = 0x22f
0x22a: JUMPI 0x22f V195
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22b
[0x22b:0x22e]
---
Predecessors: [0x224]
Successors: []
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
---
0x22b: V197 = 0x0
0x22e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22f
[0x22f:0x236]
---
Predecessors: [0x224]
Successors: [0x96f]
---
0x22f JUMPDEST
0x230 PUSH2 0x113
0x233 PUSH2 0x96f
0x236 JUMP
---
0x22f: JUMPDEST 
0x230: V198 = 0x113
0x233: V199 = 0x96f
0x236: JUMP 0x96f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x237
[0x237:0x243]
---
Predecessors: [0xb0]
Successors: [0x244, 0x245]
---
0x237 JUMPDEST
0x238 PUSH1 0x4
0x23a DUP1
0x23b SLOAD
0x23c DUP3
0x23d SWAP1
0x23e DUP2
0x23f LT
0x240 PUSH2 0x245
0x243 JUMPI
---
0x237: JUMPDEST 
0x238: V200 = 0x4
0x23b: V201 = S[0x4]
0x23f: V202 = LT V48 V201
0x240: V203 = 0x245
0x243: JUMPI 0x245 V202
---
Entry stack: [V11, 0xbb, V48]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V11, 0xbb, V48, 0x4, V48]

================================

Block 0x244
[0x244:0x244]
---
Predecessors: [0x237]
Successors: []
---
0x244 INVALID
---
0x244: INVALID 
---
Entry stack: [V11, 0xbb, V48, 0x4, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbb, V48, 0x4, V48]

================================

Block 0x245
[0x245:0x25e]
---
Predecessors: [0x237, 0x25f]
Successors: [0xbb]
---
0x245 JUMPDEST
0x246 PUSH1 0x0
0x248 SWAP2
0x249 DUP3
0x24a MSTORE
0x24b PUSH1 0x20
0x24d SWAP1
0x24e SWAP2
0x24f SHA3
0x250 ADD
0x251 SLOAD
0x252 PUSH1 0x1
0x254 PUSH1 0xa0
0x256 PUSH1 0x2
0x258 EXP
0x259 SUB
0x25a AND
0x25b SWAP1
0x25c POP
0x25d DUP2
0x25e JUMP
---
0x245: JUMPDEST 
0x246: V204 = 0x0
0x24a: M[0x0] = {0x3, 0x4}
0x24b: V205 = 0x20
0x24f: V206 = SHA3 0x0 0x20
0x250: V207 = ADD V206 S0
0x251: V208 = S[V207]
0x252: V209 = 0x1
0x254: V210 = 0xa0
0x256: V211 = 0x2
0x258: V212 = EXP 0x2 0xa0
0x259: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25a: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x25e: JUMP 0xbb
---
Entry stack: [V11, 0xbb, S2, {0x3, 0x4}, S0]
Stack pops: 4
Stack additions: [S3, V214]
Exit stack: [V11, 0xbb, V214]

================================

Block 0x25f
[0x25f:0x26b]
---
Predecessors: [0xe2]
Successors: [0x245, 0x26c]
---
0x25f JUMPDEST
0x260 PUSH1 0x3
0x262 DUP1
0x263 SLOAD
0x264 DUP3
0x265 SWAP1
0x266 DUP2
0x267 LT
0x268 PUSH2 0x245
0x26b JUMPI
---
0x25f: JUMPDEST 
0x260: V215 = 0x3
0x263: V216 = S[0x3]
0x267: V217 = LT V69 V216
0x268: V218 = 0x245
0x26b: JUMPI 0x245 V217
---
Entry stack: [V11, 0xbb, V69]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V11, 0xbb, V69, 0x3, V69]

================================

Block 0x26c
[0x26c:0x26c]
---
Predecessors: [0x25f]
Successors: []
---
0x26c INVALID
---
0x26c: INVALID 
---
Entry stack: [V11, 0xbb, V69, 0x3, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbb, V69, 0x3, V69]

================================

Block 0x26d
[0x26d:0x26f]
---
Predecessors: [0xf8]
Successors: [0x270]
---
0x26d JUMPDEST
0x26e PUSH1 0x0
---
0x26d: JUMPDEST 
0x26e: V219 = 0x0
---
Entry stack: [V11, 0xa3]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa3, 0x0]

================================

Block 0x270
[0x270:0x27a]
---
Predecessors: [0x26d, 0x2b3]
Successors: [0x27b, 0x2bb]
---
0x270 JUMPDEST
0x271 PUSH1 0x4
0x273 SLOAD
0x274 DUP2
0x275 LT
0x276 ISZERO
0x277 PUSH2 0x2bb
0x27a JUMPI
---
0x270: JUMPDEST 
0x271: V220 = 0x4
0x273: V221 = S[0x4]
0x275: V222 = LT S0 V221
0x276: V223 = ISZERO V222
0x277: V224 = 0x2bb
0x27a: JUMPI 0x2bb V223
---
Entry stack: [V11, 0xa3, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa3, S0]

================================

Block 0x27b
[0x27b:0x291]
---
Predecessors: [0x270]
Successors: [0x292, 0x293]
---
0x27b CALLER
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 AND
0x285 PUSH1 0x4
0x287 DUP3
0x288 DUP2
0x289 SLOAD
0x28a DUP2
0x28b LT
0x28c ISZERO
0x28d ISZERO
0x28e PUSH2 0x293
0x291 JUMPI
---
0x27b: V225 = CALLER
0x27c: V226 = 0x1
0x27e: V227 = 0xa0
0x280: V228 = 0x2
0x282: V229 = EXP 0x2 0xa0
0x283: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x285: V232 = 0x4
0x289: V233 = S[0x4]
0x28b: V234 = LT S0 V233
0x28c: V235 = ISZERO V234
0x28d: V236 = ISZERO V235
0x28e: V237 = 0x293
0x291: JUMPI 0x293 V236
---
Entry stack: [V11, 0xa3, S0]
Stack pops: 1
Stack additions: [S0, V231, 0x4, S0]
Exit stack: [V11, 0xa3, S0, V231, 0x4, S0]

================================

Block 0x292
[0x292:0x292]
---
Predecessors: [0x27b]
Successors: []
---
0x292 INVALID
---
0x292: INVALID 
---
Entry stack: [V11, 0xa3, S3, V231, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, S3, V231, 0x4, S0]

================================

Block 0x293
[0x293:0x2ae]
---
Predecessors: [0x27b]
Successors: [0x2af, 0x2b3]
---
0x293 JUMPDEST
0x294 PUSH1 0x0
0x296 SWAP2
0x297 DUP3
0x298 MSTORE
0x299 PUSH1 0x20
0x29b SWAP1
0x29c SWAP2
0x29d SHA3
0x29e ADD
0x29f SLOAD
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 AND
0x2a9 EQ
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x293: JUMPDEST 
0x294: V238 = 0x0
0x298: M[0x0] = 0x4
0x299: V239 = 0x20
0x29d: V240 = SHA3 0x0 0x20
0x29e: V241 = ADD V240 S0
0x29f: V242 = S[V241]
0x2a0: V243 = 0x1
0x2a2: V244 = 0xa0
0x2a4: V245 = 0x2
0x2a6: V246 = EXP 0x2 0xa0
0x2a7: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a8: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x2a9: V249 = EQ V248 V231
0x2aa: V250 = ISZERO V249
0x2ab: V251 = 0x2b3
0x2ae: JUMPI 0x2b3 V250
---
Entry stack: [V11, 0xa3, S3, V231, 0x4, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xa3, S3]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x293]
Successors: [0x34a]
---
0x2af PUSH2 0x34a
0x2b2 JUMP
---
0x2af: V252 = 0x34a
0x2b2: JUMP 0x34a
---
Entry stack: [V11, 0xa3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, S0]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x293]
Successors: [0x270]
---
0x2b3 JUMPDEST
0x2b4 PUSH1 0x1
0x2b6 ADD
0x2b7 PUSH2 0x270
0x2ba JUMP
---
0x2b3: JUMPDEST 
0x2b4: V253 = 0x1
0x2b6: V254 = ADD 0x1 S0
0x2b7: V255 = 0x270
0x2ba: JUMP 0x270
---
Entry stack: [V11, 0xa3, S0]
Stack pops: 1
Stack additions: [V254]
Exit stack: [V11, 0xa3, V254]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x270]
Successors: [0x2bf]
---
0x2bb JUMPDEST
0x2bc POP
0x2bd PUSH1 0x0
---
0x2bb: JUMPDEST 
0x2bd: V256 = 0x0
---
Entry stack: [V11, 0xa3, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xa3, 0x0]

================================

Block 0x2bf
[0x2bf:0x2c9]
---
Predecessors: [0x2bb, 0x342]
Successors: [0x2ca, 0x34a]
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x3
0x2c2 SLOAD
0x2c3 DUP2
0x2c4 LT
0x2c5 ISZERO
0x2c6 PUSH2 0x34a
0x2c9 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V257 = 0x3
0x2c2: V258 = S[0x3]
0x2c4: V259 = LT S0 V258
0x2c5: V260 = ISZERO V259
0x2c6: V261 = 0x34a
0x2c9: JUMPI 0x34a V260
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, S0]

================================

Block 0x2ca
[0x2ca:0x2e0]
---
Predecessors: [0x2bf]
Successors: [0x2e1, 0x2e2]
---
0x2ca CALLER
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 AND
0x2d4 PUSH1 0x3
0x2d6 DUP3
0x2d7 DUP2
0x2d8 SLOAD
0x2d9 DUP2
0x2da LT
0x2db ISZERO
0x2dc ISZERO
0x2dd PUSH2 0x2e2
0x2e0 JUMPI
---
0x2ca: V262 = CALLER
0x2cb: V263 = 0x1
0x2cd: V264 = 0xa0
0x2cf: V265 = 0x2
0x2d1: V266 = EXP 0x2 0xa0
0x2d2: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x2d4: V269 = 0x3
0x2d8: V270 = S[0x3]
0x2da: V271 = LT S0 V270
0x2db: V272 = ISZERO V271
0x2dc: V273 = ISZERO V272
0x2dd: V274 = 0x2e2
0x2e0: JUMPI 0x2e2 V273
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, S0]
Stack pops: 1
Stack additions: [S0, V268, 0x3, S0]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, S0, V268, 0x3, S0]

================================

Block 0x2e1
[0x2e1:0x2e1]
---
Predecessors: [0x2ca]
Successors: []
---
0x2e1 INVALID
---
0x2e1: INVALID 
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3, V268, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3, V268, 0x3, S0]

================================

Block 0x2e2
[0x2e2:0x2fd]
---
Predecessors: [0x2ca]
Successors: [0x2fe, 0x342]
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x0
0x2e5 SWAP2
0x2e6 DUP3
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea SWAP1
0x2eb SWAP2
0x2ec SHA3
0x2ed ADD
0x2ee SLOAD
0x2ef PUSH1 0x1
0x2f1 PUSH1 0xa0
0x2f3 PUSH1 0x2
0x2f5 EXP
0x2f6 SUB
0x2f7 AND
0x2f8 EQ
0x2f9 ISZERO
0x2fa PUSH2 0x342
0x2fd JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V275 = 0x0
0x2e7: M[0x0] = 0x3
0x2e8: V276 = 0x20
0x2ec: V277 = SHA3 0x0 0x20
0x2ed: V278 = ADD V277 S0
0x2ee: V279 = S[V278]
0x2ef: V280 = 0x1
0x2f1: V281 = 0xa0
0x2f3: V282 = 0x2
0x2f5: V283 = EXP 0x2 0xa0
0x2f6: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2f8: V286 = EQ V285 V268
0x2f9: V287 = ISZERO V286
0x2fa: V288 = 0x342
0x2fd: JUMPI 0x342 V287
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3, V268, 0x3, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3]

================================

Block 0x2fe
[0x2fe:0x30e]
---
Predecessors: [0x2e2]
Successors: [0xd54]
---
0x2fe PUSH1 0x4
0x300 DUP1
0x301 SLOAD
0x302 PUSH1 0x1
0x304 DUP2
0x305 ADD
0x306 PUSH2 0x30f
0x309 DUP4
0x30a DUP3
0x30b PUSH2 0xd54
0x30e JUMP
---
0x2fe: V289 = 0x4
0x301: V290 = S[0x4]
0x302: V291 = 0x1
0x305: V292 = ADD V290 0x1
0x306: V293 = 0x30f
0x30b: V294 = 0xd54
0x30e: JUMP 0xd54
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, S0]
Stack pops: 0
Stack additions: [0x4, V290, V292, 0x30f, 0x4, V292]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, S0, 0x4, V290, V292, 0x30f, 0x4, V292]

================================

Block 0x30f
[0x30f:0x341]
---
Predecessors: [0x8f6, 0xe14]
Successors: [0x342]
---
0x30f JUMPDEST
0x310 POP
0x311 PUSH1 0x0
0x313 SWAP2
0x314 DUP3
0x315 MSTORE
0x316 PUSH1 0x20
0x318 SWAP1
0x319 SWAP2
0x31a SHA3
0x31b ADD
0x31c DUP1
0x31d SLOAD
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 NOT
0x334 AND
0x335 CALLER
0x336 PUSH1 0x1
0x338 PUSH1 0xa0
0x33a PUSH1 0x2
0x33c EXP
0x33d SUB
0x33e AND
0x33f OR
0x340 SWAP1
0x341 SSTORE
---
0x30f: JUMPDEST 
0x311: V295 = 0x0
0x315: M[0x0] = S2
0x316: V296 = 0x20
0x31a: V297 = SHA3 0x0 0x20
0x31b: V298 = ADD V297 S1
0x31d: V299 = S[V298]
0x31e: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V301 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x334: V302 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V299
0x335: V303 = CALLER
0x336: V304 = 0x1
0x338: V305 = 0xa0
0x33a: V306 = 0x2
0x33c: V307 = EXP 0x2 0xa0
0x33d: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33e: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x33f: V310 = OR V309 V302
0x341: S[V298] = V310
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3]

================================

Block 0x342
[0x342:0x349]
---
Predecessors: [0x2e2, 0x30f]
Successors: [0x2bf]
---
0x342 JUMPDEST
0x343 PUSH1 0x1
0x345 ADD
0x346 PUSH2 0x2bf
0x349 JUMP
---
0x342: JUMPDEST 
0x343: V311 = 0x1
0x345: V312 = ADD 0x1 S0
0x346: V313 = 0x2bf
0x349: JUMP 0x2bf
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, S0]
Stack pops: 1
Stack additions: [V312]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, V312]

================================

Block 0x34a
[0x34a:0x34c]
---
Predecessors: [0x2af, 0x2bf]
Successors: [0xa3]
---
0x34a JUMPDEST
0x34b POP
0x34c JUMP
---
0x34a: JUMPDEST 
0x34c: JUMP S1
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V11]

================================

Block 0x34d
[0x34d:0x352]
---
Predecessors: [0x10b]
Successors: [0x113]
---
0x34d JUMPDEST
0x34e PUSH1 0x1
0x350 SLOAD
0x351 DUP2
0x352 JUMP
---
0x34d: JUMPDEST 
0x34e: V314 = 0x1
0x350: V315 = S[0x1]
0x352: JUMP 0x113
---
Entry stack: [V11, 0x113]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V11, 0x113, V315]

================================

Block 0x353
[0x353:0x36c]
---
Predecessors: [0x130]
Successors: [0x36d, 0x371]
---
0x353 JUMPDEST
0x354 PUSH1 0x2
0x356 SLOAD
0x357 PUSH1 0x0
0x359 SWAP1
0x35a CALLER
0x35b PUSH1 0x1
0x35d PUSH1 0xa0
0x35f PUSH1 0x2
0x361 EXP
0x362 SUB
0x363 SWAP1
0x364 DUP2
0x365 AND
0x366 SWAP2
0x367 AND
0x368 EQ
0x369 PUSH2 0x371
0x36c JUMPI
---
0x353: JUMPDEST 
0x354: V316 = 0x2
0x356: V317 = S[0x2]
0x357: V318 = 0x0
0x35a: V319 = CALLER
0x35b: V320 = 0x1
0x35d: V321 = 0xa0
0x35f: V322 = 0x2
0x361: V323 = EXP 0x2 0xa0
0x362: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x365: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x367: V326 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x368: V327 = EQ V326 V325
0x369: V328 = 0x371
0x36c: JUMPI 0x371 V327
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0]

================================

Block 0x36d
[0x36d:0x370]
---
Predecessors: [0x353]
Successors: []
---
0x36d PUSH1 0x0
0x36f DUP1
0x370 REVERT
---
0x36d: V329 = 0x0
0x370: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0]

================================

Block 0x371
[0x371:0x37d]
---
Predecessors: [0x353]
Successors: [0x37e, 0x382]
---
0x371 JUMPDEST
0x372 PUSH1 0x0
0x374 SLOAD
0x375 DUP14
0x376 SWAP1
0x377 DUP2
0x378 LT
0x379 ISZERO
0x37a PUSH2 0x382
0x37d JUMPI
---
0x371: JUMPDEST 
0x372: V330 = 0x0
0x374: V331 = S[0x0]
0x378: V332 = LT V96 V331
0x379: V333 = ISZERO V332
0x37a: V334 = 0x382
0x37d: JUMPI 0x382 V333
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S12]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96]

================================

Block 0x37e
[0x37e:0x381]
---
Predecessors: [0x371]
Successors: []
---
0x37e PUSH1 0x0
0x380 DUP1
0x381 REVERT
---
0x37e: V335 = 0x0
0x381: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96]

================================

Block 0x382
[0x382:0x3c2]
---
Predecessors: [0x371]
Successors: [0x975]
---
0x382 JUMPDEST
0x383 ADDRESS
0x384 PUSH1 0x1
0x386 PUSH1 0xa0
0x388 PUSH1 0x2
0x38a EXP
0x38b SUB
0x38c AND
0x38d BALANCE
0x38e PUSH2 0x3c3
0x391 DUP13
0x392 DUP13
0x393 DUP1
0x394 DUP1
0x395 PUSH1 0x20
0x397 MUL
0x398 PUSH1 0x20
0x39a ADD
0x39b PUSH1 0x40
0x39d MLOAD
0x39e SWAP1
0x39f DUP2
0x3a0 ADD
0x3a1 PUSH1 0x40
0x3a3 MSTORE
0x3a4 DUP1
0x3a5 SWAP4
0x3a6 SWAP3
0x3a7 SWAP2
0x3a8 SWAP1
0x3a9 DUP2
0x3aa DUP2
0x3ab MSTORE
0x3ac PUSH1 0x20
0x3ae ADD
0x3af DUP4
0x3b0 DUP4
0x3b1 PUSH1 0x20
0x3b3 MUL
0x3b4 DUP1
0x3b5 DUP3
0x3b6 DUP5
0x3b7 CALLDATACOPY
0x3b8 POP
0x3b9 PUSH2 0x975
0x3bc SWAP5
0x3bd POP
0x3be POP
0x3bf POP
0x3c0 POP
0x3c1 POP
0x3c2 JUMP
---
0x382: JUMPDEST 
0x383: V336 = ADDRESS
0x384: V337 = 0x1
0x386: V338 = 0xa0
0x388: V339 = 0x2
0x38a: V340 = EXP 0x2 0xa0
0x38b: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38c: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x38d: V343 = BALANCE V342
0x38e: V344 = 0x3c3
0x395: V345 = 0x20
0x397: V346 = MUL 0x20 V106
0x398: V347 = 0x20
0x39a: V348 = ADD 0x20 V346
0x39b: V349 = 0x40
0x39d: V350 = M[0x40]
0x3a0: V351 = ADD V350 V348
0x3a1: V352 = 0x40
0x3a3: M[0x40] = V351
0x3ab: M[V350] = V106
0x3ac: V353 = 0x20
0x3ae: V354 = ADD 0x20 V350
0x3b1: V355 = 0x20
0x3b3: V356 = MUL 0x20 V106
0x3b7: CALLDATACOPY V354 V104 V356
0x3b9: V357 = 0x975
0x3c2: JUMP 0x975
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V343, 0x3c3, V350]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350]

================================

Block 0x3c3
[0x3c3:0x3c9]
---
Predecessors: [0x9a4]
Successors: [0x3ca, 0x3ce]
---
0x3c3 JUMPDEST
0x3c4 GT
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V358 = GT S0 V343
0x3c5: V359 = ISZERO V358
0x3c6: V360 = 0x3ce
0x3c9: JUMPI 0x3ce V359
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3c3]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V361 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96]

================================

Block 0x3ce
[0x3ce:0x407]
---
Predecessors: [0x3c3]
Successors: [0x9aa]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x1
0x3d1 SLOAD
0x3d2 DUP15
0x3d3 PUSH2 0x408
0x3d6 DUP16
0x3d7 DUP16
0x3d8 DUP1
0x3d9 DUP1
0x3da PUSH1 0x20
0x3dc MUL
0x3dd PUSH1 0x20
0x3df ADD
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 SWAP1
0x3e4 DUP2
0x3e5 ADD
0x3e6 PUSH1 0x40
0x3e8 MSTORE
0x3e9 DUP1
0x3ea SWAP4
0x3eb SWAP3
0x3ec SWAP2
0x3ed SWAP1
0x3ee DUP2
0x3ef DUP2
0x3f0 MSTORE
0x3f1 PUSH1 0x20
0x3f3 ADD
0x3f4 DUP4
0x3f5 DUP4
0x3f6 PUSH1 0x20
0x3f8 MUL
0x3f9 DUP1
0x3fa DUP3
0x3fb DUP5
0x3fc CALLDATACOPY
0x3fd POP
0x3fe PUSH2 0x9aa
0x401 SWAP5
0x402 POP
0x403 POP
0x404 POP
0x405 POP
0x406 POP
0x407 JUMP
---
0x3ce: JUMPDEST 
0x3cf: V362 = 0x1
0x3d1: V363 = S[0x1]
0x3d3: V364 = 0x408
0x3da: V365 = 0x20
0x3dc: V366 = MUL 0x20 V101
0x3dd: V367 = 0x20
0x3df: V368 = ADD 0x20 V366
0x3e0: V369 = 0x40
0x3e2: V370 = M[0x40]
0x3e5: V371 = ADD V370 V368
0x3e6: V372 = 0x40
0x3e8: M[0x40] = V371
0x3f0: M[V370] = V101
0x3f1: V373 = 0x20
0x3f3: V374 = ADD 0x20 V370
0x3f6: V375 = 0x20
0x3f8: V376 = MUL 0x20 V101
0x3fc: CALLDATACOPY V374 V99 V376
0x3fe: V377 = 0x9aa
0x407: JUMP 0x9aa
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V363, S13, 0x408, V370]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V363, V96, 0x408, V370]

================================

Block 0x408
[0x408:0x43d]
---
Predecessors: [0xaa2]
Successors: [0xaa9]
---
0x408 JUMPDEST
0x409 PUSH2 0x43e
0x40c DUP15
0x40d DUP15
0x40e DUP1
0x40f DUP1
0x410 PUSH1 0x20
0x412 MUL
0x413 PUSH1 0x20
0x415 ADD
0x416 PUSH1 0x40
0x418 MLOAD
0x419 SWAP1
0x41a DUP2
0x41b ADD
0x41c PUSH1 0x40
0x41e MSTORE
0x41f DUP1
0x420 SWAP4
0x421 SWAP3
0x422 SWAP2
0x423 SWAP1
0x424 DUP2
0x425 DUP2
0x426 MSTORE
0x427 PUSH1 0x20
0x429 ADD
0x42a DUP4
0x42b DUP4
0x42c PUSH1 0x20
0x42e MUL
0x42f DUP1
0x430 DUP3
0x431 DUP5
0x432 CALLDATACOPY
0x433 POP
0x434 PUSH2 0xaa9
0x437 SWAP5
0x438 POP
0x439 POP
0x43a POP
0x43b POP
0x43c POP
0x43d JUMP
---
0x408: JUMPDEST 
0x409: V378 = 0x43e
0x410: V379 = 0x20
0x412: V380 = MUL 0x20 S12
0x413: V381 = 0x20
0x415: V382 = ADD 0x20 V380
0x416: V383 = 0x40
0x418: V384 = M[0x40]
0x41b: V385 = ADD V384 V382
0x41c: V386 = 0x40
0x41e: M[0x40] = V385
0x426: M[V384] = S12
0x427: V387 = 0x20
0x429: V388 = ADD 0x20 V384
0x42c: V389 = 0x20
0x42e: V390 = MUL 0x20 S12
0x432: CALLDATACOPY V388 S13 V390
0x434: V391 = 0xaa9
0x43d: JUMP 0xaa9
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x43e, V384]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x43e, V384]

================================

Block 0x43e
[0x43e:0x481]
---
Predecessors: [0xaa2]
Successors: [0x482]
---
0x43e JUMPDEST
0x43f PUSH1 0x40
0x441 MLOAD
0x442 DUP1
0x443 DUP1
0x444 PUSH32 0x5452000000000000000000000000000000000000000000000000000000000000
0x465 DUP2
0x466 MSTORE
0x467 POP
0x468 PUSH1 0x2
0x46a ADD
0x46b DUP6
0x46c DUP2
0x46d MSTORE
0x46e PUSH1 0x20
0x470 ADD
0x471 DUP5
0x472 DUP2
0x473 MSTORE
0x474 PUSH1 0x20
0x476 ADD
0x477 DUP4
0x478 DUP1
0x479 MLOAD
0x47a SWAP1
0x47b PUSH1 0x20
0x47d ADD
0x47e SWAP1
0x47f DUP1
0x480 DUP4
0x481 DUP4
---
0x43e: JUMPDEST 
0x43f: V392 = 0x40
0x441: V393 = M[0x40]
0x444: V394 = 0x5452000000000000000000000000000000000000000000000000000000000000
0x466: M[V393] = 0x5452000000000000000000000000000000000000000000000000000000000000
0x468: V395 = 0x2
0x46a: V396 = ADD 0x2 V393
0x46d: M[V396] = S3
0x46e: V397 = 0x20
0x470: V398 = ADD 0x20 V396
0x473: M[V398] = S2
0x474: V399 = 0x20
0x476: V400 = ADD 0x20 V398
0x479: V401 = M[S1]
0x47b: V402 = 0x20
0x47d: V403 = ADD 0x20 S1
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V393, V400, V403, V401, V401, V400, V403]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V393, V400, V403, V401, V401, V400, V403]

================================

Block 0x482
[0x482:0x48a]
---
Predecessors: [0x43e, 0x48b]
Successors: [0x48b, 0x4a1]
---
0x482 JUMPDEST
0x483 PUSH1 0x20
0x485 DUP4
0x486 LT
0x487 PUSH2 0x4a1
0x48a JUMPI
---
0x482: JUMPDEST 
0x483: V404 = 0x20
0x486: V405 = LT S2 0x20
0x487: V406 = 0x4a1
0x48a: JUMPI 0x4a1 V405
---
Entry stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V400, V403, V401, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V400, V403, V401, S2, S1, S0]

================================

Block 0x48b
[0x48b:0x4a0]
---
Predecessors: [0x482]
Successors: [0x482]
---
0x48b DUP1
0x48c MLOAD
0x48d DUP3
0x48e MSTORE
0x48f PUSH1 0x1f
0x491 NOT
0x492 SWAP1
0x493 SWAP3
0x494 ADD
0x495 SWAP2
0x496 PUSH1 0x20
0x498 SWAP2
0x499 DUP3
0x49a ADD
0x49b SWAP2
0x49c ADD
0x49d PUSH2 0x482
0x4a0 JUMP
---
0x48c: V407 = M[S0]
0x48e: M[S1] = V407
0x48f: V408 = 0x1f
0x491: V409 = NOT 0x1f
0x494: V410 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x496: V411 = 0x20
0x49a: V412 = ADD 0x20 S1
0x49c: V413 = ADD 0x20 S0
0x49d: V414 = 0x482
0x4a0: JUMP 0x482
---
Entry stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V400, V403, V401, S2, S1, S0]
Stack pops: 3
Stack additions: [V410, V412, V413]
Exit stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V400, V403, V401, V410, V412, V413]

================================

Block 0x4a1
[0x4a1:0x4cd]
---
Predecessors: [0x482]
Successors: [0x4ce]
---
0x4a1 JUMPDEST
0x4a2 PUSH1 0x1
0x4a4 DUP4
0x4a5 PUSH1 0x20
0x4a7 SUB
0x4a8 PUSH2 0x100
0x4ab EXP
0x4ac SUB
0x4ad DUP1
0x4ae NOT
0x4af DUP3
0x4b0 MLOAD
0x4b1 AND
0x4b2 DUP2
0x4b3 DUP5
0x4b4 MLOAD
0x4b5 AND
0x4b6 OR
0x4b7 SWAP1
0x4b8 SWAP3
0x4b9 MSTORE
0x4ba POP
0x4bb POP
0x4bc POP
0x4bd SWAP2
0x4be SWAP1
0x4bf SWAP2
0x4c0 ADD
0x4c1 SWAP1
0x4c2 POP
0x4c3 DUP3
0x4c4 DUP1
0x4c5 MLOAD
0x4c6 SWAP1
0x4c7 PUSH1 0x20
0x4c9 ADD
0x4ca SWAP1
0x4cb DUP1
0x4cc DUP4
0x4cd DUP4
---
0x4a1: JUMPDEST 
0x4a2: V415 = 0x1
0x4a5: V416 = 0x20
0x4a7: V417 = SUB 0x20 S2
0x4a8: V418 = 0x100
0x4ab: V419 = EXP 0x100 V417
0x4ac: V420 = SUB V419 0x1
0x4ae: V421 = NOT V420
0x4b0: V422 = M[S0]
0x4b1: V423 = AND V422 V421
0x4b4: V424 = M[S1]
0x4b5: V425 = AND V424 V420
0x4b6: V426 = OR V425 V423
0x4b9: M[S1] = V426
0x4c0: V427 = ADD V401 V400
0x4c5: V428 = M[S7]
0x4c7: V429 = 0x20
0x4c9: V430 = ADD 0x20 S7
---
Entry stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V400, V403, V401, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, V427, V430, V428, V428, V427, V430]
Exit stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V427, V430, V428, V428, V427, V430]

================================

Block 0x4ce
[0x4ce:0x4d6]
---
Predecessors: [0x4a1, 0x4d7]
Successors: [0x4d7, 0x4ed]
---
0x4ce JUMPDEST
0x4cf PUSH1 0x20
0x4d1 DUP4
0x4d2 LT
0x4d3 PUSH2 0x4ed
0x4d6 JUMPI
---
0x4ce: JUMPDEST 
0x4cf: V431 = 0x20
0x4d2: V432 = LT S2 0x20
0x4d3: V433 = 0x4ed
0x4d6: JUMPI 0x4ed V432
---
Entry stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V427, V430, V428, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V427, V430, V428, S2, S1, S0]

================================

Block 0x4d7
[0x4d7:0x4ec]
---
Predecessors: [0x4ce]
Successors: [0x4ce]
---
0x4d7 DUP1
0x4d8 MLOAD
0x4d9 DUP3
0x4da MSTORE
0x4db PUSH1 0x1f
0x4dd NOT
0x4de SWAP1
0x4df SWAP3
0x4e0 ADD
0x4e1 SWAP2
0x4e2 PUSH1 0x20
0x4e4 SWAP2
0x4e5 DUP3
0x4e6 ADD
0x4e7 SWAP2
0x4e8 ADD
0x4e9 PUSH2 0x4ce
0x4ec JUMP
---
0x4d8: V434 = M[S0]
0x4da: M[S1] = V434
0x4db: V435 = 0x1f
0x4dd: V436 = NOT 0x1f
0x4e0: V437 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4e2: V438 = 0x20
0x4e6: V439 = ADD 0x20 S1
0x4e8: V440 = ADD 0x20 S0
0x4e9: V441 = 0x4ce
0x4ec: JUMP 0x4ce
---
Entry stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V427, V430, V428, S2, S1, S0]
Stack pops: 3
Stack additions: [V437, V439, V440]
Exit stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V427, V430, V428, V437, V439, V440]

================================

Block 0x4ed
[0x4ed:0x5db]
---
Predecessors: [0x4ce]
Successors: [0xb98]
---
0x4ed JUMPDEST
0x4ee PUSH1 0x1
0x4f0 DUP4
0x4f1 PUSH1 0x20
0x4f3 SUB
0x4f4 PUSH2 0x100
0x4f7 EXP
0x4f8 SUB
0x4f9 DUP1
0x4fa NOT
0x4fb DUP3
0x4fc MLOAD
0x4fd AND
0x4fe DUP2
0x4ff DUP5
0x500 MLOAD
0x501 AND
0x502 OR
0x503 SWAP1
0x504 SWAP3
0x505 MSTORE
0x506 POP
0x507 POP
0x508 POP
0x509 SWAP2
0x50a SWAP1
0x50b SWAP2
0x50c ADD
0x50d SWAP6
0x50e POP
0x50f PUSH1 0x40
0x511 SWAP5
0x512 POP
0x513 POP
0x514 POP
0x515 POP
0x516 POP
0x517 MLOAD
0x518 SWAP1
0x519 DUP2
0x51a SWAP1
0x51b SUB
0x51c SWAP1
0x51d SHA3
0x51e SWAP2
0x51f POP
0x520 PUSH2 0x5dc
0x523 DUP3
0x524 DUP11
0x525 PUSH1 0x3
0x527 PUSH1 0x60
0x529 PUSH1 0x40
0x52b MLOAD
0x52c SWAP1
0x52d DUP2
0x52e ADD
0x52f PUSH1 0x40
0x531 MSTORE
0x532 SWAP2
0x533 SWAP1
0x534 DUP3
0x535 DUP3
0x536 PUSH1 0x60
0x538 DUP1
0x539 DUP3
0x53a DUP5
0x53b CALLDATACOPY
0x53c DUP3
0x53d ADD
0x53e SWAP2
0x53f POP
0x540 POP
0x541 POP
0x542 POP
0x543 POP
0x544 DUP11
0x545 DUP11
0x546 DUP1
0x547 DUP1
0x548 PUSH1 0x1f
0x54a ADD
0x54b PUSH1 0x20
0x54d DUP1
0x54e SWAP2
0x54f DIV
0x550 MUL
0x551 PUSH1 0x20
0x553 ADD
0x554 PUSH1 0x40
0x556 MLOAD
0x557 SWAP1
0x558 DUP2
0x559 ADD
0x55a PUSH1 0x40
0x55c MSTORE
0x55d DUP2
0x55e DUP2
0x55f MSTORE
0x560 SWAP3
0x561 SWAP2
0x562 SWAP1
0x563 PUSH1 0x20
0x565 DUP5
0x566 ADD
0x567 DUP4
0x568 DUP4
0x569 DUP1
0x56a DUP3
0x56b DUP5
0x56c CALLDATACOPY
0x56d DUP3
0x56e ADD
0x56f SWAP2
0x570 POP
0x571 POP
0x572 POP
0x573 POP
0x574 POP
0x575 POP
0x576 DUP10
0x577 DUP10
0x578 DUP1
0x579 DUP1
0x57a PUSH1 0x1f
0x57c ADD
0x57d PUSH1 0x20
0x57f DUP1
0x580 SWAP2
0x581 DIV
0x582 MUL
0x583 PUSH1 0x20
0x585 ADD
0x586 PUSH1 0x40
0x588 MLOAD
0x589 SWAP1
0x58a DUP2
0x58b ADD
0x58c PUSH1 0x40
0x58e MSTORE
0x58f DUP2
0x590 DUP2
0x591 MSTORE
0x592 SWAP3
0x593 SWAP2
0x594 SWAP1
0x595 PUSH1 0x20
0x597 DUP5
0x598 ADD
0x599 DUP4
0x59a DUP4
0x59b DUP1
0x59c DUP3
0x59d DUP5
0x59e CALLDATACOPY
0x59f DUP3
0x5a0 ADD
0x5a1 SWAP2
0x5a2 POP
0x5a3 POP
0x5a4 POP
0x5a5 POP
0x5a6 POP
0x5a7 POP
0x5a8 DUP9
0x5a9 DUP9
0x5aa DUP1
0x5ab DUP1
0x5ac PUSH1 0x1f
0x5ae ADD
0x5af PUSH1 0x20
0x5b1 DUP1
0x5b2 SWAP2
0x5b3 DIV
0x5b4 MUL
0x5b5 PUSH1 0x20
0x5b7 ADD
0x5b8 PUSH1 0x40
0x5ba MLOAD
0x5bb SWAP1
0x5bc DUP2
0x5bd ADD
0x5be PUSH1 0x40
0x5c0 MSTORE
0x5c1 DUP2
0x5c2 DUP2
0x5c3 MSTORE
0x5c4 SWAP3
0x5c5 SWAP2
0x5c6 SWAP1
0x5c7 PUSH1 0x20
0x5c9 DUP5
0x5ca ADD
0x5cb DUP4
0x5cc DUP4
0x5cd DUP1
0x5ce DUP3
0x5cf DUP5
0x5d0 CALLDATACOPY
0x5d1 POP
0x5d2 PUSH2 0xb98
0x5d5 SWAP5
0x5d6 POP
0x5d7 POP
0x5d8 POP
0x5d9 POP
0x5da POP
0x5db JUMP
---
0x4ed: JUMPDEST 
0x4ee: V442 = 0x1
0x4f1: V443 = 0x20
0x4f3: V444 = SUB 0x20 S2
0x4f4: V445 = 0x100
0x4f7: V446 = EXP 0x100 V444
0x4f8: V447 = SUB V446 0x1
0x4fa: V448 = NOT V447
0x4fc: V449 = M[S0]
0x4fd: V450 = AND V449 V448
0x500: V451 = M[S1]
0x501: V452 = AND V451 V447
0x502: V453 = OR V452 V450
0x505: M[S1] = V453
0x50c: V454 = ADD V428 V427
0x50f: V455 = 0x40
0x517: V456 = M[0x40]
0x51b: V457 = SUB V454 V456
0x51d: V458 = SHA3 V456 V457
0x520: V459 = 0x5dc
0x525: V460 = 0x3
0x527: V461 = 0x60
0x529: V462 = 0x40
0x52b: V463 = M[0x40]
0x52e: V464 = ADD V463 0x60
0x52f: V465 = 0x40
0x531: M[0x40] = V464
0x536: V466 = 0x60
0x53b: CALLDATACOPY V463 0x44 0x60
0x53d: V467 = ADD V463 0x60
0x548: V468 = 0x1f
0x54a: V469 = ADD 0x1f V141
0x54b: V470 = 0x20
0x54f: V471 = DIV V469 0x20
0x550: V472 = MUL V471 0x20
0x551: V473 = 0x20
0x553: V474 = ADD 0x20 V472
0x554: V475 = 0x40
0x556: V476 = M[0x40]
0x559: V477 = ADD V476 V474
0x55a: V478 = 0x40
0x55c: M[0x40] = V477
0x55f: M[V476] = V141
0x563: V479 = 0x20
0x566: V480 = ADD V476 0x20
0x56c: CALLDATACOPY V480 V139 V141
0x56e: V481 = ADD V480 V141
0x57a: V482 = 0x1f
0x57c: V483 = ADD 0x1f V146
0x57d: V484 = 0x20
0x581: V485 = DIV V483 0x20
0x582: V486 = MUL V485 0x20
0x583: V487 = 0x20
0x585: V488 = ADD 0x20 V486
0x586: V489 = 0x40
0x588: V490 = M[0x40]
0x58b: V491 = ADD V490 V488
0x58c: V492 = 0x40
0x58e: M[0x40] = V491
0x591: M[V490] = V146
0x595: V493 = 0x20
0x598: V494 = ADD V490 0x20
0x59e: CALLDATACOPY V494 V144 V146
0x5a0: V495 = ADD V494 V146
0x5ac: V496 = 0x1f
0x5ae: V497 = ADD 0x1f V151
0x5af: V498 = 0x20
0x5b3: V499 = DIV V497 0x20
0x5b4: V500 = MUL V499 0x20
0x5b5: V501 = 0x20
0x5b7: V502 = ADD 0x20 V500
0x5b8: V503 = 0x40
0x5ba: V504 = M[0x40]
0x5bd: V505 = ADD V504 V502
0x5be: V506 = 0x40
0x5c0: M[0x40] = V505
0x5c3: M[V504] = V151
0x5c7: V507 = 0x20
0x5ca: V508 = ADD V504 0x20
0x5d0: CALLDATACOPY V508 V149 V151
0x5d2: V509 = 0xb98
0x5db: JUMP 0xb98
---
Entry stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, S9, S8, S7, V393, V427, V430, V428, S2, S1, S0]
Stack pops: 20
Stack additions: [S19, S18, S17, S16, S15, S14, S13, V458, S11, 0x5dc, V458, V463, V476, V490, V504]
Exit stack: [V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, V458, V130, 0x5dc, V458, V463, V476, V490, V504]

================================

Block 0x5dc
[0x5dc:0x5e2]
---
Predecessors: [0xc1d]
Successors: [0x5e3, 0x5e7]
---
0x5dc JUMPDEST
0x5dd ISZERO
0x5de ISZERO
0x5df PUSH2 0x5e7
0x5e2 JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V510 = ISZERO S0
0x5de: V511 = ISZERO V510
0x5df: V512 = 0x5e7
0x5e2: JUMPI 0x5e7 V511
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x5e3
[0x5e3:0x5e6]
---
Predecessors: [0x5dc]
Successors: []
---
0x5e3 PUSH1 0x0
0x5e5 DUP1
0x5e6 REVERT
---
0x5e3: V513 = 0x0
0x5e6: REVERT 0x0 0x0
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5e7
[0x5e7:0x652]
---
Predecessors: [0x5dc]
Successors: [0xc28]
---
0x5e7 JUMPDEST
0x5e8 PUSH1 0x1
0x5ea DUP15
0x5eb ADD
0x5ec PUSH1 0x0
0x5ee SSTORE
0x5ef PUSH2 0x653
0x5f2 DUP14
0x5f3 DUP14
0x5f4 DUP1
0x5f5 PUSH1 0x20
0x5f7 DUP1
0x5f8 DUP3
0x5f9 MUL
0x5fa ADD
0x5fb PUSH1 0x40
0x5fd MLOAD
0x5fe SWAP1
0x5ff DUP2
0x600 ADD
0x601 PUSH1 0x40
0x603 MSTORE
0x604 DUP1
0x605 SWAP4
0x606 SWAP3
0x607 SWAP2
0x608 SWAP1
0x609 DUP2
0x60a DUP2
0x60b MSTORE
0x60c PUSH1 0x20
0x60e ADD
0x60f DUP4
0x610 DUP4
0x611 PUSH1 0x20
0x613 MUL
0x614 DUP1
0x615 DUP3
0x616 DUP5
0x617 CALLDATACOPY
0x618 DUP3
0x619 ADD
0x61a SWAP2
0x61b POP
0x61c POP
0x61d POP
0x61e POP
0x61f POP
0x620 POP
0x621 DUP13
0x622 DUP13
0x623 DUP1
0x624 DUP1
0x625 PUSH1 0x20
0x627 MUL
0x628 PUSH1 0x20
0x62a ADD
0x62b PUSH1 0x40
0x62d MLOAD
0x62e SWAP1
0x62f DUP2
0x630 ADD
0x631 PUSH1 0x40
0x633 MSTORE
0x634 DUP1
0x635 SWAP4
0x636 SWAP3
0x637 SWAP2
0x638 SWAP1
0x639 DUP2
0x63a DUP2
0x63b MSTORE
0x63c PUSH1 0x20
0x63e ADD
0x63f DUP4
0x640 DUP4
0x641 PUSH1 0x20
0x643 MUL
0x644 DUP1
0x645 DUP3
0x646 DUP5
0x647 CALLDATACOPY
0x648 POP
0x649 PUSH2 0xc28
0x64c SWAP5
0x64d POP
0x64e POP
0x64f POP
0x650 POP
0x651 POP
0x652 JUMP
---
0x5e7: JUMPDEST 
0x5e8: V514 = 0x1
0x5eb: V515 = ADD S13 0x1
0x5ec: V516 = 0x0
0x5ee: S[0x0] = V515
0x5ef: V517 = 0x653
0x5f5: V518 = 0x20
0x5f9: V519 = MUL S11 0x20
0x5fa: V520 = ADD V519 0x20
0x5fb: V521 = 0x40
0x5fd: V522 = M[0x40]
0x600: V523 = ADD V522 V520
0x601: V524 = 0x40
0x603: M[0x40] = V523
0x60b: M[V522] = S11
0x60c: V525 = 0x20
0x60e: V526 = ADD 0x20 V522
0x611: V527 = 0x20
0x613: V528 = MUL 0x20 S11
0x617: CALLDATACOPY V526 S12 V528
0x619: V529 = ADD V526 V528
0x625: V530 = 0x20
0x627: V531 = MUL 0x20 S9
0x628: V532 = 0x20
0x62a: V533 = ADD 0x20 V531
0x62b: V534 = 0x40
0x62d: V535 = M[0x40]
0x630: V536 = ADD V535 V533
0x631: V537 = 0x40
0x633: M[0x40] = V536
0x63b: M[V535] = S9
0x63c: V538 = 0x20
0x63e: V539 = ADD 0x20 V535
0x641: V540 = 0x20
0x643: V541 = MUL 0x20 S9
0x647: CALLDATACOPY V539 S10 V541
0x649: V542 = 0xc28
0x652: JUMP 0xc28
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x653, V522, V535]
Exit stack: [S1, S0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x653, V522, V535]

================================

Block 0x653
[0x653:0x662]
---
Predecessors: [0x8f6]
Successors: []
Has unresolved jump.
---
0x653 JUMPDEST
0x654 POP
0x655 POP
0x656 POP
0x657 POP
0x658 POP
0x659 POP
0x65a POP
0x65b POP
0x65c POP
0x65d POP
0x65e POP
0x65f POP
0x660 POP
0x661 POP
0x662 JUMP
---
0x653: JUMPDEST 
0x662: JUMP S14
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, V11, S4, S3, S2, S1, S0]
Stack pops: 15
Stack additions: []
Exit stack: []

================================

Block 0x663
[0x663:0x67c]
---
Predecessors: [0x186]
Successors: [0x67d, 0x681]
---
0x663 JUMPDEST
0x664 PUSH1 0x2
0x666 SLOAD
0x667 PUSH1 0x0
0x669 SWAP1
0x66a CALLER
0x66b PUSH1 0x1
0x66d PUSH1 0xa0
0x66f PUSH1 0x2
0x671 EXP
0x672 SUB
0x673 SWAP1
0x674 DUP2
0x675 AND
0x676 SWAP2
0x677 AND
0x678 EQ
0x679 PUSH2 0x681
0x67c JUMPI
---
0x663: JUMPDEST 
0x664: V543 = 0x2
0x666: V544 = S[0x2]
0x667: V545 = 0x0
0x66a: V546 = CALLER
0x66b: V547 = 0x1
0x66d: V548 = 0xa0
0x66f: V549 = 0x2
0x671: V550 = EXP 0x2 0xa0
0x672: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x675: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x677: V553 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x678: V554 = EQ V553 V552
0x679: V555 = 0x681
0x67c: JUMPI 0x681 V554
---
Entry stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: [0x663]
Successors: []
---
0x67d PUSH1 0x0
0x67f DUP1
0x680 REVERT
---
0x67d: V556 = 0x0
0x680: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0]

================================

Block 0x681
[0x681:0x68d]
---
Predecessors: [0x663]
Successors: [0x68e, 0x692]
---
0x681 JUMPDEST
0x682 PUSH1 0x0
0x684 SLOAD
0x685 DUP12
0x686 SWAP1
0x687 DUP2
0x688 LT
0x689 ISZERO
0x68a PUSH2 0x692
0x68d JUMPI
---
0x681: JUMPDEST 
0x682: V557 = 0x0
0x684: V558 = S[0x0]
0x688: V559 = LT V130 V558
0x689: V560 = ISZERO V559
0x68a: V561 = 0x692
0x68d: JUMPI 0x692 V560
---
Entry stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S10]
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130]

================================

Block 0x68e
[0x68e:0x691]
---
Predecessors: [0x681]
Successors: []
---
0x68e PUSH1 0x0
0x690 DUP1
0x691 REVERT
---
0x68e: V562 = 0x0
0x691: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130]

================================

Block 0x692
[0x692:0x6cb]
---
Predecessors: [0x681]
Successors: [0x9aa]
---
0x692 JUMPDEST
0x693 PUSH1 0x1
0x695 SLOAD
0x696 DUP13
0x697 PUSH2 0x6cc
0x69a DUP14
0x69b DUP14
0x69c DUP1
0x69d DUP1
0x69e PUSH1 0x20
0x6a0 MUL
0x6a1 PUSH1 0x20
0x6a3 ADD
0x6a4 PUSH1 0x40
0x6a6 MLOAD
0x6a7 SWAP1
0x6a8 DUP2
0x6a9 ADD
0x6aa PUSH1 0x40
0x6ac MSTORE
0x6ad DUP1
0x6ae SWAP4
0x6af SWAP3
0x6b0 SWAP2
0x6b1 SWAP1
0x6b2 DUP2
0x6b3 DUP2
0x6b4 MSTORE
0x6b5 PUSH1 0x20
0x6b7 ADD
0x6b8 DUP4
0x6b9 DUP4
0x6ba PUSH1 0x20
0x6bc MUL
0x6bd DUP1
0x6be DUP3
0x6bf DUP5
0x6c0 CALLDATACOPY
0x6c1 POP
0x6c2 PUSH2 0x9aa
0x6c5 SWAP5
0x6c6 POP
0x6c7 POP
0x6c8 POP
0x6c9 POP
0x6ca POP
0x6cb JUMP
---
0x692: JUMPDEST 
0x693: V563 = 0x1
0x695: V564 = S[0x1]
0x697: V565 = 0x6cc
0x69e: V566 = 0x20
0x6a0: V567 = MUL 0x20 V135
0x6a1: V568 = 0x20
0x6a3: V569 = ADD 0x20 V567
0x6a4: V570 = 0x40
0x6a6: V571 = M[0x40]
0x6a9: V572 = ADD V571 V569
0x6aa: V573 = 0x40
0x6ac: M[0x40] = V572
0x6b4: M[V571] = V135
0x6b5: V574 = 0x20
0x6b7: V575 = ADD 0x20 V571
0x6ba: V576 = 0x20
0x6bc: V577 = MUL 0x20 V135
0x6c0: CALLDATACOPY V575 V133 V577
0x6c2: V578 = 0x9aa
0x6cb: JUMP 0x9aa
---
Entry stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V564, S11, 0x6cc, V571]
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, 0x0, V130, V564, V130, 0x6cc, V571]

================================

Block 0x6cc
[0x6cc:0x70f]
---
Predecessors: [0xaa2]
Successors: [0x710]
---
0x6cc JUMPDEST
0x6cd PUSH1 0x40
0x6cf MLOAD
0x6d0 DUP1
0x6d1 DUP1
0x6d2 PUSH32 0x4e53000000000000000000000000000000000000000000000000000000000000
0x6f3 DUP2
0x6f4 MSTORE
0x6f5 POP
0x6f6 PUSH1 0x2
0x6f8 ADD
0x6f9 DUP5
0x6fa DUP2
0x6fb MSTORE
0x6fc PUSH1 0x20
0x6fe ADD
0x6ff DUP4
0x700 DUP2
0x701 MSTORE
0x702 PUSH1 0x20
0x704 ADD
0x705 DUP3
0x706 DUP1
0x707 MLOAD
0x708 SWAP1
0x709 PUSH1 0x20
0x70b ADD
0x70c SWAP1
0x70d DUP1
0x70e DUP4
0x70f DUP4
---
0x6cc: JUMPDEST 
0x6cd: V579 = 0x40
0x6cf: V580 = M[0x40]
0x6d2: V581 = 0x4e53000000000000000000000000000000000000000000000000000000000000
0x6f4: M[V580] = 0x4e53000000000000000000000000000000000000000000000000000000000000
0x6f6: V582 = 0x2
0x6f8: V583 = ADD 0x2 V580
0x6fb: M[V583] = S2
0x6fc: V584 = 0x20
0x6fe: V585 = ADD 0x20 V583
0x701: M[V585] = S1
0x702: V586 = 0x20
0x704: V587 = ADD 0x20 V585
0x707: V588 = M[S0]
0x709: V589 = 0x20
0x70b: V590 = ADD 0x20 S0
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V580, V587, V590, V588, V588, V587, V590]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V580, V587, V590, V588, V588, V587, V590]

================================

Block 0x710
[0x710:0x718]
---
Predecessors: [0x6cc, 0x719]
Successors: [0x719, 0x72f]
---
0x710 JUMPDEST
0x711 PUSH1 0x20
0x713 DUP4
0x714 LT
0x715 PUSH2 0x72f
0x718 JUMPI
---
0x710: JUMPDEST 
0x711: V591 = 0x20
0x714: V592 = LT S2 0x20
0x715: V593 = 0x72f
0x718: JUMPI 0x72f V592
---
Entry stack: [V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V580, V587, V590, V588, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V580, V587, V590, V588, S2, S1, S0]

================================

Block 0x719
[0x719:0x72e]
---
Predecessors: [0x710]
Successors: [0x710]
---
0x719 DUP1
0x71a MLOAD
0x71b DUP3
0x71c MSTORE
0x71d PUSH1 0x1f
0x71f NOT
0x720 SWAP1
0x721 SWAP3
0x722 ADD
0x723 SWAP2
0x724 PUSH1 0x20
0x726 SWAP2
0x727 DUP3
0x728 ADD
0x729 SWAP2
0x72a ADD
0x72b PUSH2 0x710
0x72e JUMP
---
0x71a: V594 = M[S0]
0x71c: M[S1] = V594
0x71d: V595 = 0x1f
0x71f: V596 = NOT 0x1f
0x722: V597 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x724: V598 = 0x20
0x728: V599 = ADD 0x20 S1
0x72a: V600 = ADD 0x20 S0
0x72b: V601 = 0x710
0x72e: JUMP 0x710
---
Entry stack: [V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V580, V587, V590, V588, S2, S1, S0]
Stack pops: 3
Stack additions: [V597, V599, V600]
Exit stack: [V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V580, V587, V590, V588, V597, V599, V600]

================================

Block 0x72f
[0x72f:0x81c]
---
Predecessors: [0x710]
Successors: [0xb98]
---
0x72f JUMPDEST
0x730 PUSH1 0x1
0x732 DUP4
0x733 PUSH1 0x20
0x735 SUB
0x736 PUSH2 0x100
0x739 EXP
0x73a SUB
0x73b DUP1
0x73c NOT
0x73d DUP3
0x73e MLOAD
0x73f AND
0x740 DUP2
0x741 DUP5
0x742 MLOAD
0x743 AND
0x744 OR
0x745 SWAP1
0x746 SWAP3
0x747 MSTORE
0x748 POP
0x749 POP
0x74a POP
0x74b SWAP2
0x74c SWAP1
0x74d SWAP2
0x74e ADD
0x74f SWAP5
0x750 POP
0x751 PUSH1 0x40
0x753 SWAP4
0x754 POP
0x755 POP
0x756 POP
0x757 POP
0x758 MLOAD
0x759 SWAP1
0x75a DUP2
0x75b SWAP1
0x75c SUB
0x75d SWAP1
0x75e SHA3
0x75f SWAP2
0x760 POP
0x761 PUSH2 0x81d
0x764 DUP3
0x765 DUP11
0x766 PUSH1 0x3
0x768 PUSH1 0x60
0x76a PUSH1 0x40
0x76c MLOAD
0x76d SWAP1
0x76e DUP2
0x76f ADD
0x770 PUSH1 0x40
0x772 MSTORE
0x773 SWAP2
0x774 SWAP1
0x775 DUP3
0x776 DUP3
0x777 PUSH1 0x60
0x779 DUP1
0x77a DUP3
0x77b DUP5
0x77c CALLDATACOPY
0x77d DUP3
0x77e ADD
0x77f SWAP2
0x780 POP
0x781 POP
0x782 POP
0x783 POP
0x784 POP
0x785 DUP11
0x786 DUP11
0x787 DUP1
0x788 DUP1
0x789 PUSH1 0x1f
0x78b ADD
0x78c PUSH1 0x20
0x78e DUP1
0x78f SWAP2
0x790 DIV
0x791 MUL
0x792 PUSH1 0x20
0x794 ADD
0x795 PUSH1 0x40
0x797 MLOAD
0x798 SWAP1
0x799 DUP2
0x79a ADD
0x79b PUSH1 0x40
0x79d MSTORE
0x79e DUP2
0x79f DUP2
0x7a0 MSTORE
0x7a1 SWAP3
0x7a2 SWAP2
0x7a3 SWAP1
0x7a4 PUSH1 0x20
0x7a6 DUP5
0x7a7 ADD
0x7a8 DUP4
0x7a9 DUP4
0x7aa DUP1
0x7ab DUP3
0x7ac DUP5
0x7ad CALLDATACOPY
0x7ae DUP3
0x7af ADD
0x7b0 SWAP2
0x7b1 POP
0x7b2 POP
0x7b3 POP
0x7b4 POP
0x7b5 POP
0x7b6 POP
0x7b7 DUP10
0x7b8 DUP10
0x7b9 DUP1
0x7ba DUP1
0x7bb PUSH1 0x1f
0x7bd ADD
0x7be PUSH1 0x20
0x7c0 DUP1
0x7c1 SWAP2
0x7c2 DIV
0x7c3 MUL
0x7c4 PUSH1 0x20
0x7c6 ADD
0x7c7 PUSH1 0x40
0x7c9 MLOAD
0x7ca SWAP1
0x7cb DUP2
0x7cc ADD
0x7cd PUSH1 0x40
0x7cf MSTORE
0x7d0 DUP2
0x7d1 DUP2
0x7d2 MSTORE
0x7d3 SWAP3
0x7d4 SWAP2
0x7d5 SWAP1
0x7d6 PUSH1 0x20
0x7d8 DUP5
0x7d9 ADD
0x7da DUP4
0x7db DUP4
0x7dc DUP1
0x7dd DUP3
0x7de DUP5
0x7df CALLDATACOPY
0x7e0 DUP3
0x7e1 ADD
0x7e2 SWAP2
0x7e3 POP
0x7e4 POP
0x7e5 POP
0x7e6 POP
0x7e7 POP
0x7e8 POP
0x7e9 DUP9
0x7ea DUP9
0x7eb DUP1
0x7ec DUP1
0x7ed PUSH1 0x1f
0x7ef ADD
0x7f0 PUSH1 0x20
0x7f2 DUP1
0x7f3 SWAP2
0x7f4 DIV
0x7f5 MUL
0x7f6 PUSH1 0x20
0x7f8 ADD
0x7f9 PUSH1 0x40
0x7fb MLOAD
0x7fc SWAP1
0x7fd DUP2
0x7fe ADD
0x7ff PUSH1 0x40
0x801 MSTORE
0x802 DUP2
0x803 DUP2
0x804 MSTORE
0x805 SWAP3
0x806 SWAP2
0x807 SWAP1
0x808 PUSH1 0x20
0x80a DUP5
0x80b ADD
0x80c DUP4
0x80d DUP4
0x80e DUP1
0x80f DUP3
0x810 DUP5
0x811 CALLDATACOPY
0x812 POP
0x813 PUSH2 0xb98
0x816 SWAP5
0x817 POP
0x818 POP
0x819 POP
0x81a POP
0x81b POP
0x81c JUMP
---
0x72f: JUMPDEST 
0x730: V602 = 0x1
0x733: V603 = 0x20
0x735: V604 = SUB 0x20 S2
0x736: V605 = 0x100
0x739: V606 = EXP 0x100 V604
0x73a: V607 = SUB V606 0x1
0x73c: V608 = NOT V607
0x73e: V609 = M[S0]
0x73f: V610 = AND V609 V608
0x742: V611 = M[S1]
0x743: V612 = AND V611 V607
0x744: V613 = OR V612 V610
0x747: M[S1] = V613
0x74e: V614 = ADD V588 V587
0x751: V615 = 0x40
0x758: V616 = M[0x40]
0x75c: V617 = SUB V614 V616
0x75e: V618 = SHA3 V616 V617
0x761: V619 = 0x81d
0x766: V620 = 0x3
0x768: V621 = 0x60
0x76a: V622 = 0x40
0x76c: V623 = M[0x40]
0x76f: V624 = ADD V623 0x60
0x770: V625 = 0x40
0x772: M[0x40] = V624
0x777: V626 = 0x60
0x77c: CALLDATACOPY V623 S18 0x60
0x77e: V627 = ADD V623 0x60
0x789: V628 = 0x1f
0x78b: V629 = ADD 0x1f S16
0x78c: V630 = 0x20
0x790: V631 = DIV V629 0x20
0x791: V632 = MUL V631 0x20
0x792: V633 = 0x20
0x794: V634 = ADD 0x20 V632
0x795: V635 = 0x40
0x797: V636 = M[0x40]
0x79a: V637 = ADD V636 V634
0x79b: V638 = 0x40
0x79d: M[0x40] = V637
0x7a0: M[V636] = S16
0x7a4: V639 = 0x20
0x7a7: V640 = ADD V636 0x20
0x7ad: CALLDATACOPY V640 S17 S16
0x7af: V641 = ADD V640 S16
0x7bb: V642 = 0x1f
0x7bd: V643 = ADD 0x1f S14
0x7be: V644 = 0x20
0x7c2: V645 = DIV V643 0x20
0x7c3: V646 = MUL V645 0x20
0x7c4: V647 = 0x20
0x7c6: V648 = ADD 0x20 V646
0x7c7: V649 = 0x40
0x7c9: V650 = M[0x40]
0x7cc: V651 = ADD V650 V648
0x7cd: V652 = 0x40
0x7cf: M[0x40] = V651
0x7d2: M[V650] = S14
0x7d6: V653 = 0x20
0x7d9: V654 = ADD V650 0x20
0x7df: CALLDATACOPY V654 S15 S14
0x7e1: V655 = ADD V654 S14
0x7ed: V656 = 0x1f
0x7ef: V657 = ADD 0x1f S12
0x7f0: V658 = 0x20
0x7f4: V659 = DIV V657 0x20
0x7f5: V660 = MUL V659 0x20
0x7f6: V661 = 0x20
0x7f8: V662 = ADD 0x20 V660
0x7f9: V663 = 0x40
0x7fb: V664 = M[0x40]
0x7fe: V665 = ADD V664 V662
0x7ff: V666 = 0x40
0x801: M[0x40] = V665
0x804: M[V664] = S12
0x808: V667 = 0x20
0x80b: V668 = ADD V664 0x20
0x811: CALLDATACOPY V668 S13 S12
0x813: V669 = 0xb98
0x81c: JUMP 0xb98
---
Entry stack: [V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V580, V587, V590, V588, S2, S1, S0]
Stack pops: 19
Stack additions: [S18, S17, S16, S15, S14, S13, S12, V618, S10, 0x81d, V618, V623, V636, V650, V664]
Exit stack: [V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V618, S10, 0x81d, V618, V623, V636, V650, V664]

================================

Block 0x81d
[0x81d:0x823]
---
Predecessors: [0xc1d]
Successors: [0x824, 0x828]
---
0x81d JUMPDEST
0x81e ISZERO
0x81f ISZERO
0x820 PUSH2 0x828
0x823 JUMPI
---
0x81d: JUMPDEST 
0x81e: V670 = ISZERO S0
0x81f: V671 = ISZERO V670
0x820: V672 = 0x828
0x823: JUMPI 0x828 V671
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x824
[0x824:0x827]
---
Predecessors: [0x81d]
Successors: []
---
0x824 PUSH1 0x0
0x826 DUP1
0x827 REVERT
---
0x824: V673 = 0x0
0x827: REVERT 0x0 0x0
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x828
[0x828:0x83b]
---
Predecessors: [0x81d]
Successors: [0xd54]
---
0x828 JUMPDEST
0x829 PUSH1 0x1
0x82b DUP13
0x82c ADD
0x82d PUSH1 0x0
0x82f SWAP1
0x830 DUP2
0x831 SSTORE
0x832 PUSH2 0x83c
0x835 PUSH1 0x4
0x837 DUP3
0x838 PUSH2 0xd54
0x83b JUMP
---
0x828: JUMPDEST 
0x829: V674 = 0x1
0x82c: V675 = ADD S11 0x1
0x82d: V676 = 0x0
0x831: S[0x0] = V675
0x832: V677 = 0x83c
0x835: V678 = 0x4
0x838: V679 = 0xd54
0x83b: JUMP 0xd54
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x83c, 0x4, 0x0]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x83c, 0x4, 0x0]

================================

Block 0x83c
[0x83c:0x848]
---
Predecessors: [0x8f6, 0xde4, 0xe14]
Successors: [0xd78]
---
0x83c JUMPDEST
0x83d POP
0x83e PUSH2 0x849
0x841 PUSH1 0x3
0x843 DUP13
0x844 DUP13
0x845 PUSH2 0xd78
0x848 JUMP
---
0x83c: JUMPDEST 
0x83e: V680 = 0x849
0x841: V681 = 0x3
0x845: V682 = 0xd78
0x848: JUMP 0xd78
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V11, 0xa3, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x849, 0x3, S11, S10]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x849, 0x3, S11, S10]

================================

Block 0x849
[0x849:0x857]
---
Predecessors: [0x95a, 0xde4]
Successors: []
Has unresolved jump.
---
0x849 JUMPDEST
0x84a POP
0x84b POP
0x84c POP
0x84d POP
0x84e POP
0x84f POP
0x850 POP
0x851 POP
0x852 POP
0x853 POP
0x854 POP
0x855 POP
0x856 POP
0x857 JUMP
---
0x849: JUMPDEST 
0x857: JUMP S13
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V11, 0xa3, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14]

================================

Block 0x858
[0x858:0x873]
---
Predecessors: [0x1cf]
Successors: [0x874, 0x878]
---
0x858 JUMPDEST
0x859 PUSH1 0x2
0x85b SLOAD
0x85c PUSH1 0x0
0x85e SWAP1
0x85f DUP2
0x860 SWAP1
0x861 CALLER
0x862 PUSH1 0x1
0x864 PUSH1 0xa0
0x866 PUSH1 0x2
0x868 EXP
0x869 SUB
0x86a SWAP1
0x86b DUP2
0x86c AND
0x86d SWAP2
0x86e AND
0x86f EQ
0x870 PUSH2 0x878
0x873 JUMPI
---
0x858: JUMPDEST 
0x859: V683 = 0x2
0x85b: V684 = S[0x2]
0x85c: V685 = 0x0
0x861: V686 = CALLER
0x862: V687 = 0x1
0x864: V688 = 0xa0
0x866: V689 = 0x2
0x868: V690 = EXP 0x2 0xa0
0x869: V691 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86c: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0x86e: V693 = AND V684 0xffffffffffffffffffffffffffffffffffffffff
0x86f: V694 = EQ V693 V692
0x870: V695 = 0x878
0x873: JUMPI 0x878 V694
---
Entry stack: [V11, 0xa3, V165]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xa3, V165, 0x0, 0x0]

================================

Block 0x874
[0x874:0x877]
---
Predecessors: [0x858]
Successors: []
---
0x874 PUSH1 0x0
0x876 DUP1
0x877 REVERT
---
0x874: V696 = 0x0
0x877: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V165, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V165, 0x0, 0x0]

================================

Block 0x878
[0x878:0x889]
---
Predecessors: [0x858]
Successors: [0x88a, 0x896]
---
0x878 JUMPDEST
0x879 POP
0x87a POP
0x87b PUSH1 0x3
0x87d SLOAD
0x87e PUSH1 0x4
0x880 SLOAD
0x881 PUSH1 0x6
0x883 DUP3
0x884 GT
0x885 ISZERO
0x886 PUSH2 0x896
0x889 JUMPI
---
0x878: JUMPDEST 
0x87b: V697 = 0x3
0x87d: V698 = S[0x3]
0x87e: V699 = 0x4
0x880: V700 = S[0x4]
0x881: V701 = 0x6
0x884: V702 = GT V698 0x6
0x885: V703 = ISZERO V702
0x886: V704 = 0x896
0x889: JUMPI 0x896 V703
---
Entry stack: [V11, 0xa3, V165, 0x0, 0x0]
Stack pops: 2
Stack additions: [V698, V700]
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x88a
[0x88a:0x891]
---
Predecessors: [0x878]
Successors: [0x892, 0x896]
---
0x88a PUSH1 0x2
0x88c DUP2
0x88d GT
0x88e PUSH2 0x896
0x891 JUMPI
---
0x88a: V705 = 0x2
0x88d: V706 = GT V700 0x2
0x88e: V707 = 0x896
0x891: JUMPI 0x896 V706
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x892
[0x892:0x895]
---
Predecessors: [0x88a]
Successors: []
---
0x892 PUSH1 0x0
0x894 DUP1
0x895 REVERT
---
0x892: V708 = 0x0
0x895: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x896
[0x896:0x89f]
---
Predecessors: [0x878, 0x88a]
Successors: [0x8a0, 0x8ac]
---
0x896 JUMPDEST
0x897 PUSH1 0x3
0x899 DUP3
0x89a GT
0x89b ISZERO
0x89c PUSH2 0x8ac
0x89f JUMPI
---
0x896: JUMPDEST 
0x897: V709 = 0x3
0x89a: V710 = GT V698 0x3
0x89b: V711 = ISZERO V710
0x89c: V712 = 0x8ac
0x89f: JUMPI 0x8ac V711
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x8a0
[0x8a0:0x8a7]
---
Predecessors: [0x896]
Successors: [0x8a8, 0x8ac]
---
0x8a0 PUSH1 0x1
0x8a2 DUP2
0x8a3 GT
0x8a4 PUSH2 0x8ac
0x8a7 JUMPI
---
0x8a0: V713 = 0x1
0x8a3: V714 = GT V700 0x1
0x8a4: V715 = 0x8ac
0x8a7: JUMPI 0x8ac V714
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x8a8
[0x8a8:0x8ab]
---
Predecessors: [0x8a0]
Successors: []
---
0x8a8 PUSH1 0x0
0x8aa DUP1
0x8ab REVERT
---
0x8a8: V716 = 0x0
0x8ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x8ac
[0x8ac:0x8b4]
---
Predecessors: [0x896, 0x8a0]
Successors: [0x8b5, 0x8b9]
---
0x8ac JUMPDEST
0x8ad PUSH1 0x0
0x8af DUP2
0x8b0 GT
0x8b1 PUSH2 0x8b9
0x8b4 JUMPI
---
0x8ac: JUMPDEST 
0x8ad: V717 = 0x0
0x8b0: V718 = GT V700 0x0
0x8b1: V719 = 0x8b9
0x8b4: JUMPI 0x8b9 V718
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x8b5
[0x8b5:0x8b8]
---
Predecessors: [0x8ac]
Successors: []
---
0x8b5 PUSH1 0x0
0x8b7 DUP1
0x8b8 REVERT
---
0x8b5: V720 = 0x0
0x8b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x8b9
[0x8b9:0x8f1]
---
Predecessors: [0x8ac]
Successors: [0x8f2, 0x8f6]
---
0x8b9 JUMPDEST
0x8ba DUP3
0x8bb PUSH1 0x1
0x8bd PUSH1 0xa0
0x8bf PUSH1 0x2
0x8c1 EXP
0x8c2 SUB
0x8c3 AND
0x8c4 PUSH2 0x8fc
0x8c7 ADDRESS
0x8c8 PUSH1 0x1
0x8ca PUSH1 0xa0
0x8cc PUSH1 0x2
0x8ce EXP
0x8cf SUB
0x8d0 AND
0x8d1 BALANCE
0x8d2 SWAP1
0x8d3 DUP2
0x8d4 ISZERO
0x8d5 MUL
0x8d6 SWAP1
0x8d7 PUSH1 0x40
0x8d9 MLOAD
0x8da PUSH1 0x0
0x8dc PUSH1 0x40
0x8de MLOAD
0x8df DUP1
0x8e0 DUP4
0x8e1 SUB
0x8e2 DUP2
0x8e3 DUP6
0x8e4 DUP9
0x8e5 DUP9
0x8e6 CALL
0x8e7 SWAP4
0x8e8 POP
0x8e9 POP
0x8ea POP
0x8eb POP
0x8ec ISZERO
0x8ed ISZERO
0x8ee PUSH2 0x8f6
0x8f1 JUMPI
---
0x8b9: JUMPDEST 
0x8bb: V721 = 0x1
0x8bd: V722 = 0xa0
0x8bf: V723 = 0x2
0x8c1: V724 = EXP 0x2 0xa0
0x8c2: V725 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c3: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x8c4: V727 = 0x8fc
0x8c7: V728 = ADDRESS
0x8c8: V729 = 0x1
0x8ca: V730 = 0xa0
0x8cc: V731 = 0x2
0x8ce: V732 = EXP 0x2 0xa0
0x8cf: V733 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d0: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V728
0x8d1: V735 = BALANCE V734
0x8d4: V736 = ISZERO V735
0x8d5: V737 = MUL V736 0x8fc
0x8d7: V738 = 0x40
0x8d9: V739 = M[0x40]
0x8da: V740 = 0x0
0x8dc: V741 = 0x40
0x8de: V742 = M[0x40]
0x8e1: V743 = SUB V739 V742
0x8e6: V744 = CALL V737 V726 V735 V742 V743 V742 0x0
0x8ec: V745 = ISZERO V744
0x8ed: V746 = ISZERO V745
0x8ee: V747 = 0x8f6
0x8f1: JUMPI 0x8f6 V746
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x8f2
[0x8f2:0x8f5]
---
Predecessors: [0x8b9]
Successors: []
---
0x8f2 PUSH1 0x0
0x8f4 DUP1
0x8f5 REVERT
---
0x8f2: V748 = 0x0
0x8f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V165, V698, V700]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V165, V698, V700]

================================

Block 0x8f6
[0x8f6:0x8fa]
---
Predecessors: [0x8b9, 0xc2b, 0xd54, 0xe14]
Successors: [0xa3, 0x30f, 0x653, 0x83c]
---
0x8f6 JUMPDEST
0x8f7 POP
0x8f8 POP
0x8f9 POP
0x8fa JUMP
---
0x8f6: JUMPDEST 
0x8fa: JUMP S3
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V11, S9, S8, S7, S6, S5, S4]

================================

Block 0x8fb
[0x8fb:0x911]
---
Predecessors: [0x1ee]
Successors: [0x912, 0x916]
---
0x8fb JUMPDEST
0x8fc PUSH1 0x2
0x8fe SLOAD
0x8ff CALLER
0x900 PUSH1 0x1
0x902 PUSH1 0xa0
0x904 PUSH1 0x2
0x906 EXP
0x907 SUB
0x908 SWAP1
0x909 DUP2
0x90a AND
0x90b SWAP2
0x90c AND
0x90d EQ
0x90e PUSH2 0x916
0x911 JUMPI
---
0x8fb: JUMPDEST 
0x8fc: V749 = 0x2
0x8fe: V750 = S[0x2]
0x8ff: V751 = CALLER
0x900: V752 = 0x1
0x902: V753 = 0xa0
0x904: V754 = 0x2
0x906: V755 = EXP 0x2 0xa0
0x907: V756 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90a: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0x90c: V758 = AND V750 0xffffffffffffffffffffffffffffffffffffffff
0x90d: V759 = EQ V758 V757
0x90e: V760 = 0x916
0x911: JUMPI 0x916 V759
---
Entry stack: [V11, 0xa3, V175, V177, V178, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V175, V177, V178, V186]

================================

Block 0x912
[0x912:0x915]
---
Predecessors: [0x8fb]
Successors: []
---
0x912 PUSH1 0x0
0x914 DUP1
0x915 REVERT
---
0x912: V761 = 0x0
0x915: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V175, V177, V178, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V175, V177, V178, V186]

================================

Block 0x916
[0x916:0x91f]
---
Predecessors: [0x8fb]
Successors: [0x920, 0x95a]
---
0x916 JUMPDEST
0x917 PUSH1 0x3
0x919 SLOAD
0x91a ISZERO
0x91b ISZERO
0x91c PUSH2 0x95a
0x91f JUMPI
---
0x916: JUMPDEST 
0x917: V762 = 0x3
0x919: V763 = S[0x3]
0x91a: V764 = ISZERO V763
0x91b: V765 = ISZERO V764
0x91c: V766 = 0x95a
0x91f: JUMPI 0x95a V765
---
Entry stack: [V11, 0xa3, V175, V177, V178, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V175, V177, V178, V186]

================================

Block 0x920
[0x920:0x92a]
---
Predecessors: [0x916]
Successors: [0xd78]
---
0x920 PUSH2 0x92b
0x923 PUSH1 0x3
0x925 DUP6
0x926 DUP6
0x927 PUSH2 0xd78
0x92a JUMP
---
0x920: V767 = 0x92b
0x923: V768 = 0x3
0x927: V769 = 0xd78
0x92a: JUMP 0xd78
---
Entry stack: [V11, 0xa3, V175, V177, V178, V186]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x92b, 0x3, S3, S2]
Exit stack: [V11, 0xa3, V175, V177, V178, V186, 0x92b, 0x3, V175, V177]

================================

Block 0x92b
[0x92b:0x959]
---
Predecessors: [0x95a, 0xde4]
Successors: [0x95a]
---
0x92b JUMPDEST
0x92c POP
0x92d PUSH1 0x1
0x92f DUP3
0x930 SWAP1
0x931 SSTORE
0x932 PUSH1 0x2
0x934 DUP1
0x935 SLOAD
0x936 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94b NOT
0x94c AND
0x94d PUSH1 0x1
0x94f PUSH1 0xa0
0x951 PUSH1 0x2
0x953 EXP
0x954 SUB
0x955 DUP4
0x956 AND
0x957 OR
0x958 SWAP1
0x959 SSTORE
---
0x92b: JUMPDEST 
0x92d: V770 = 0x1
0x931: S[0x1] = S2
0x932: V771 = 0x2
0x935: V772 = S[0x2]
0x936: V773 = 0xffffffffffffffffffffffffffffffffffffffff
0x94b: V774 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x94c: V775 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V772
0x94d: V776 = 0x1
0x94f: V777 = 0xa0
0x951: V778 = 0x2
0x953: V779 = EXP 0x2 0xa0
0x954: V780 = SUB 0x10000000000000000000000000000000000000000 0x1
0x956: V781 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x957: V782 = OR V781 V775
0x959: S[0x2] = V782
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, V11, 0xa3, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, V11, 0xa3, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x95a
[0x95a:0x95f]
---
Predecessors: [0x916, 0x92b]
Successors: [0xa3, 0x849, 0x92b]
---
0x95a JUMPDEST
0x95b POP
0x95c POP
0x95d POP
0x95e POP
0x95f JUMP
---
0x95a: JUMPDEST 
0x95f: JUMP S4
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, V11, 0xa3, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, V11, 0xa3, S8, S7, S6, S5]

================================

Block 0x960
[0x960:0x96e]
---
Predecessors: [0x21c]
Successors: [0xbb]
---
0x960 JUMPDEST
0x961 PUSH1 0x2
0x963 SLOAD
0x964 PUSH1 0x1
0x966 PUSH1 0xa0
0x968 PUSH1 0x2
0x96a EXP
0x96b SUB
0x96c AND
0x96d DUP2
0x96e JUMP
---
0x960: JUMPDEST 
0x961: V783 = 0x2
0x963: V784 = S[0x2]
0x964: V785 = 0x1
0x966: V786 = 0xa0
0x968: V787 = 0x2
0x96a: V788 = EXP 0x2 0xa0
0x96b: V789 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96c: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0x96e: JUMP 0xbb
---
Entry stack: [V11, 0xbb]
Stack pops: 1
Stack additions: [S0, V790]
Exit stack: [V11, 0xbb, V790]

================================

Block 0x96f
[0x96f:0x974]
---
Predecessors: [0x22f]
Successors: [0x113]
---
0x96f JUMPDEST
0x970 PUSH1 0x0
0x972 SLOAD
0x973 DUP2
0x974 JUMP
---
0x96f: JUMPDEST 
0x970: V791 = 0x0
0x972: V792 = S[0x0]
0x974: JUMP 0x113
---
Entry stack: [V11, 0x113]
Stack pops: 1
Stack additions: [S0, V792]
Exit stack: [V11, 0x113, V792]

================================

Block 0x975
[0x975:0x978]
---
Predecessors: [0x382]
Successors: [0x979]
---
0x975 JUMPDEST
0x976 PUSH1 0x0
0x978 DUP1
---
0x975: JUMPDEST 
0x976: V793 = 0x0
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, 0x0, 0x0]

================================

Block 0x979
[0x979:0x982]
---
Predecessors: [0x975, 0x98e]
Successors: [0x983, 0x9a4]
---
0x979 JUMPDEST
0x97a DUP3
0x97b MLOAD
0x97c DUP2
0x97d LT
0x97e ISZERO
0x97f PUSH2 0x9a4
0x982 JUMPI
---
0x979: JUMPDEST 
0x97b: V794 = M[V350]
0x97d: V795 = LT S0 V794
0x97e: V796 = ISZERO V795
0x97f: V797 = 0x9a4
0x982: JUMPI 0x9a4 V796
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, S1, S0]

================================

Block 0x983
[0x983:0x98c]
---
Predecessors: [0x979]
Successors: [0x98d, 0x98e]
---
0x983 DUP3
0x984 DUP2
0x985 DUP2
0x986 MLOAD
0x987 DUP2
0x988 LT
0x989 PUSH2 0x98e
0x98c JUMPI
---
0x986: V798 = M[V350]
0x988: V799 = LT S0 V798
0x989: V800 = 0x98e
0x98c: JUMPI 0x98e V799
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S0]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, S1, S0, V350, S0]

================================

Block 0x98d
[0x98d:0x98d]
---
Predecessors: [0x983]
Successors: []
---
0x98d INVALID
---
0x98d: INVALID 
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, S3, S2, V350, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, S3, S2, V350, S0]

================================

Block 0x98e
[0x98e:0x9a3]
---
Predecessors: [0x983]
Successors: [0x979]
---
0x98e JUMPDEST
0x98f SWAP1
0x990 PUSH1 0x20
0x992 ADD
0x993 SWAP1
0x994 PUSH1 0x20
0x996 MUL
0x997 ADD
0x998 MLOAD
0x999 SWAP1
0x99a SWAP2
0x99b ADD
0x99c SWAP1
0x99d PUSH1 0x1
0x99f ADD
0x9a0 PUSH2 0x979
0x9a3 JUMP
---
0x98e: JUMPDEST 
0x990: V801 = 0x20
0x992: V802 = ADD 0x20 V350
0x994: V803 = 0x20
0x996: V804 = MUL 0x20 S0
0x997: V805 = ADD V804 V802
0x998: V806 = M[V805]
0x99b: V807 = ADD S3 V806
0x99d: V808 = 0x1
0x99f: V809 = ADD 0x1 S2
0x9a0: V810 = 0x979
0x9a3: JUMP 0x979
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, S3, S2, V350, S0]
Stack pops: 4
Stack additions: [V807, V809]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, V807, V809]

================================

Block 0x9a4
[0x9a4:0x9a9]
---
Predecessors: [0x979]
Successors: [0x3c3]
---
0x9a4 JUMPDEST
0x9a5 POP
0x9a6 SWAP2
0x9a7 SWAP1
0x9a8 POP
0x9a9 JUMP
---
0x9a4: JUMPDEST 
0x9a9: JUMP 0x3c3
---
Entry stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, 0x3c3, V350, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V11, 0xa3, V96, V99, V101, V104, V106, 0x64, V110, V112, V115, V117, V120, V122, 0x0, V96, V343, S1]

================================

Block 0x9aa
[0x9aa:0x9b1]
---
Predecessors: [0x3ce, 0x692]
Successors: [0xde8]
---
0x9aa JUMPDEST
0x9ab PUSH2 0x9b2
0x9ae PUSH2 0xde8
0x9b1 JUMP
---
0x9aa: JUMPDEST 
0x9ab: V811 = 0x9b2
0x9ae: V812 = 0xde8
0x9b1: JUMP 0xde8
---
Entry stack: [V11, 0xa3, S17, S16, S15, S14, S13, {0x44, 0x64}, S11, S10, S9, S8, S7, S6, 0x0, S4, S3, S2, {0x408, 0x6cc}, S0]
Stack pops: 0
Stack additions: [0x9b2]
Exit stack: [V11, 0xa3, S17, S16, S15, S14, S13, {0x44, 0x64}, S11, S10, S9, S8, S7, S6, 0x0, S4, S3, S2, {0x408, 0x6cc}, S0, 0x9b2]

================================

Block 0x9b2
[0x9b2:0x9c4]
---
Predecessors: [0xde8]
Successors: [0x9c5, 0x9c7]
---
0x9b2 JUMPDEST
0x9b3 PUSH1 0x0
0x9b5 DUP1
0x9b6 DUP4
0x9b7 MLOAD
0x9b8 PUSH1 0x14
0x9ba MUL
0x9bb PUSH1 0x40
0x9bd MLOAD
0x9be DUP1
0x9bf MSIZE
0x9c0 LT
0x9c1 PUSH2 0x9c7
0x9c4 JUMPI
---
0x9b2: JUMPDEST 
0x9b3: V813 = 0x0
0x9b7: V814 = M[S1]
0x9b8: V815 = 0x14
0x9ba: V816 = MUL 0x14 V814
0x9bb: V817 = 0x40
0x9bd: V818 = M[0x40]
0x9bf: V819 = MSIZE
0x9c0: V820 = LT V819 V818
0x9c1: V821 = 0x9c7
0x9c4: JUMPI 0x9c7 V820
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x408, 0x43e, 0x6cc}, S1, V1152]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, V816, V818]
Exit stack: [S20, 0xa3, S18, S17, S16, S15, S14, {0x44, 0x64}, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, S3, {0x408, 0x6cc}, S1, S0, 0x0, 0x0, V816, V818]

================================

Block 0x9c5
[0x9c5:0x9c6]
---
Predecessors: [0x9b2]
Successors: [0x9c7]
---
0x9c5 POP
0x9c6 MSIZE
---
0x9c6: V822 = MSIZE
---
Entry stack: [V11, 0xa3, S22, S21, S20, S19, S18, {0x44, 0x64}, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, S7, {0x408, 0x6cc}, S5, V1152, 0x0, 0x0, V816, V818]
Stack pops: 1
Stack additions: [V822]
Exit stack: [V11, 0xa3, S22, S21, S20, S19, S18, {0x44, 0x64}, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, S7, {0x408, 0x6cc}, S5, V1152, 0x0, 0x0, V816, V822]

================================

Block 0x9c7
[0x9c7:0x9e2]
---
Predecessors: [0x9b2, 0x9c5]
Successors: [0x9e3]
---
0x9c7 JUMPDEST
0x9c8 DUP2
0x9c9 DUP2
0x9ca MSTORE
0x9cb PUSH1 0x1f
0x9cd NOT
0x9ce PUSH1 0x1f
0x9d0 DUP4
0x9d1 ADD
0x9d2 AND
0x9d3 DUP2
0x9d4 ADD
0x9d5 PUSH1 0x20
0x9d7 ADD
0x9d8 PUSH1 0x40
0x9da MSTORE
0x9db SWAP1
0x9dc POP
0x9dd SWAP3
0x9de POP
0x9df PUSH1 0x0
0x9e1 SWAP2
0x9e2 POP
---
0x9c7: JUMPDEST 
0x9ca: M[S0] = V816
0x9cb: V823 = 0x1f
0x9cd: V824 = NOT 0x1f
0x9ce: V825 = 0x1f
0x9d1: V826 = ADD V816 0x1f
0x9d2: V827 = AND V826 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x9d4: V828 = ADD S0 V827
0x9d5: V829 = 0x20
0x9d7: V830 = ADD 0x20 V828
0x9d8: V831 = 0x40
0x9da: M[0x40] = V830
0x9df: V832 = 0x0
---
Entry stack: [V11, 0xa3, S22, S21, S20, S19, S18, {0x44, 0x64}, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, S7, {0x408, 0x6cc}, S5, V1152, 0x0, 0x0, V816, S0]
Stack pops: 5
Stack additions: [S0, 0x0, S2]
Exit stack: [V11, 0xa3, S22, S21, S20, S19, S18, {0x44, 0x64}, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, S7, {0x408, 0x6cc}, S5, S0, 0x0, 0x0]

================================

Block 0x9e3
[0x9e3:0x9ec]
---
Predecessors: [0x9c7, 0xa97]
Successors: [0x9ed, 0xaa2]
---
0x9e3 JUMPDEST
0x9e4 DUP4
0x9e5 MLOAD
0x9e6 DUP3
0x9e7 LT
0x9e8 ISZERO
0x9e9 PUSH2 0xaa2
0x9ec JUMPI
---
0x9e3: JUMPDEST 
0x9e5: V833 = M[S3]
0x9e7: V834 = LT S1 V833
0x9e8: V835 = ISZERO V834
0x9e9: V836 = 0xaa2
0x9ec: JUMPI 0xaa2 V835
---
Entry stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, S0]

================================

Block 0x9ed
[0x9ed:0x9ef]
---
Predecessors: [0x9e3]
Successors: [0x9f0]
---
0x9ed POP
0x9ee PUSH1 0x0
---
0x9ee: V837 = 0x0
---
Entry stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, 0x0]

================================

Block 0x9f0
[0x9f0:0x9f9]
---
Predecessors: [0x9ed, 0xa5f]
Successors: [0x9fa, 0xa97]
---
0x9f0 JUMPDEST
0x9f1 PUSH1 0x14
0x9f3 DUP2
0x9f4 LT
0x9f5 ISZERO
0x9f6 PUSH2 0xa97
0x9f9 JUMPI
---
0x9f0: JUMPDEST 
0x9f1: V838 = 0x14
0x9f4: V839 = LT S0 0x14
0x9f5: V840 = ISZERO V839
0x9f6: V841 = 0xa97
0x9f9: JUMPI 0xa97 V840
---
Entry stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, S0]

================================

Block 0x9fa
[0x9fa:0xa0d]
---
Predecessors: [0x9f0]
Successors: [0xa0e, 0xa0f]
---
0x9fa DUP1
0x9fb PUSH1 0x13
0x9fd SUB
0x9fe PUSH1 0x8
0xa00 MUL
0xa01 PUSH1 0x2
0xa03 EXP
0xa04 DUP5
0xa05 DUP4
0xa06 DUP2
0xa07 MLOAD
0xa08 DUP2
0xa09 LT
0xa0a PUSH2 0xa0f
0xa0d JUMPI
---
0x9fb: V842 = 0x13
0x9fd: V843 = SUB 0x13 S0
0x9fe: V844 = 0x8
0xa00: V845 = MUL 0x8 V843
0xa01: V846 = 0x2
0xa03: V847 = EXP 0x2 V845
0xa07: V848 = M[S3]
0xa09: V849 = LT S1 V848
0xa0a: V850 = 0xa0f
0xa0d: JUMPI 0xa0f V849
---
Entry stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V847, S3, S1]
Exit stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, S0, V847, S3, S1]

================================

Block 0xa0e
[0xa0e:0xa0e]
---
Predecessors: [0x9fa]
Successors: []
---
0xa0e INVALID
---
0xa0e: INVALID 
---
Entry stack: [V11, 0xa3, S23, S22, S21, S20, S19, {0x44, 0x64}, S17, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, {0x408, 0x6cc}, S6, S5, S4, S3, V847, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, S23, S22, S21, S20, S19, {0x44, 0x64}, S17, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, {0x408, 0x6cc}, S6, S5, S4, S3, V847, S1, S0]

================================

Block 0xa0f
[0xa0f:0xa29]
---
Predecessors: [0x9fa]
Successors: [0xa2a, 0xa2b]
---
0xa0f JUMPDEST
0xa10 SWAP1
0xa11 PUSH1 0x20
0xa13 ADD
0xa14 SWAP1
0xa15 PUSH1 0x20
0xa17 MUL
0xa18 ADD
0xa19 MLOAD
0xa1a PUSH1 0x1
0xa1c PUSH1 0xa0
0xa1e PUSH1 0x2
0xa20 EXP
0xa21 SUB
0xa22 AND
0xa23 DUP2
0xa24 ISZERO
0xa25 ISZERO
0xa26 PUSH2 0xa2b
0xa29 JUMPI
---
0xa0f: JUMPDEST 
0xa11: V851 = 0x20
0xa13: V852 = ADD 0x20 S1
0xa15: V853 = 0x20
0xa17: V854 = MUL 0x20 S0
0xa18: V855 = ADD V854 V852
0xa19: V856 = M[V855]
0xa1a: V857 = 0x1
0xa1c: V858 = 0xa0
0xa1e: V859 = 0x2
0xa20: V860 = EXP 0x2 0xa0
0xa21: V861 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa22: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V856
0xa24: V863 = ISZERO V847
0xa25: V864 = ISZERO V863
0xa26: V865 = 0xa2b
0xa29: JUMPI 0xa2b V864
---
Entry stack: [V11, 0xa3, S23, S22, S21, S20, S19, {0x44, 0x64}, S17, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, {0x408, 0x6cc}, S6, S5, S4, S3, V847, S1, S0]
Stack pops: 3
Stack additions: [S2, V862]
Exit stack: [V11, 0xa3, S23, S22, S21, S20, S19, {0x44, 0x64}, S17, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, {0x408, 0x6cc}, S6, S5, S4, S3, V847, V862]

================================

Block 0xa2a
[0xa2a:0xa2a]
---
Predecessors: [0xa0f]
Successors: []
---
0xa2a INVALID
---
0xa2a: INVALID 
---
Entry stack: [V11, 0xa3, S22, S21, S20, S19, S18, {0x44, 0x64}, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, S7, {0x408, 0x6cc}, S5, S4, S3, S2, V847, V862]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, S22, S21, S20, S19, S18, {0x44, 0x64}, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, S7, {0x408, 0x6cc}, S5, S4, S3, S2, V847, V862]

================================

Block 0xa2b
[0xa2b:0xa5d]
---
Predecessors: [0xa0f]
Successors: [0xa5e, 0xa5f]
---
0xa2b JUMPDEST
0xa2c DIV
0xa2d PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xa4e MUL
0xa4f DUP4
0xa50 DUP3
0xa51 DUP5
0xa52 PUSH1 0x14
0xa54 MUL
0xa55 ADD
0xa56 DUP2
0xa57 MLOAD
0xa58 DUP2
0xa59 LT
0xa5a PUSH2 0xa5f
0xa5d JUMPI
---
0xa2b: JUMPDEST 
0xa2c: V866 = DIV V862 V847
0xa2d: V867 = 0x100000000000000000000000000000000000000000000000000000000000000
0xa4e: V868 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V866
0xa52: V869 = 0x14
0xa54: V870 = MUL 0x14 S3
0xa55: V871 = ADD V870 S2
0xa57: V872 = M[S4]
0xa59: V873 = LT V871 V872
0xa5a: V874 = 0xa5f
0xa5d: JUMPI 0xa5f V873
---
Entry stack: [V11, 0xa3, S22, S21, S20, S19, S18, {0x44, 0x64}, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, S7, {0x408, 0x6cc}, S5, S4, S3, S2, V847, V862]
Stack pops: 5
Stack additions: [S4, S3, S2, V868, S4, V871]
Exit stack: [V11, 0xa3, S22, S21, S20, S19, S18, {0x44, 0x64}, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, S7, {0x408, 0x6cc}, S5, S4, S3, S2, V868, S4, V871]

================================

Block 0xa5e
[0xa5e:0xa5e]
---
Predecessors: [0xa2b]
Successors: []
---
0xa5e INVALID
---
0xa5e: INVALID 
---
Entry stack: [S23, S22, S21, S20, S19, {0x44, 0x64}, S17, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, {0x408, 0x6cc}, S6, S5, S4, S3, V868, S1, V871]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, {0x44, 0x64}, S17, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, {0x408, 0x6cc}, S6, S5, S4, S3, V868, S1, V871]

================================

Block 0xa5f
[0xa5f:0xa96]
---
Predecessors: [0xa2b]
Successors: [0x9f0]
---
0xa5f JUMPDEST
0xa60 SWAP1
0xa61 PUSH1 0x20
0xa63 ADD
0xa64 ADD
0xa65 SWAP1
0xa66 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa86 NOT
0xa87 AND
0xa88 SWAP1
0xa89 DUP2
0xa8a PUSH1 0x0
0xa8c BYTE
0xa8d SWAP1
0xa8e MSTORE8
0xa8f POP
0xa90 PUSH1 0x1
0xa92 ADD
0xa93 PUSH2 0x9f0
0xa96 JUMP
---
0xa5f: JUMPDEST 
0xa61: V875 = 0x20
0xa63: V876 = ADD 0x20 S1
0xa64: V877 = ADD V876 V871
0xa66: V878 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa86: V879 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa87: V880 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V868
0xa8a: V881 = 0x0
0xa8c: V882 = BYTE 0x0 V880
0xa8e: M8[V877] = V882
0xa90: V883 = 0x1
0xa92: V884 = ADD 0x1 S3
0xa93: V885 = 0x9f0
0xa96: JUMP 0x9f0
---
Entry stack: [S23, S22, S21, S20, S19, {0x44, 0x64}, S17, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, {0x408, 0x6cc}, S6, S5, S4, S3, V868, S1, V871]
Stack pops: 4
Stack additions: [V884]
Exit stack: [S23, S22, S21, S20, S19, {0x44, 0x64}, S17, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, {0x408, 0x6cc}, S6, S5, S4, V884]

================================

Block 0xa97
[0xa97:0xaa1]
---
Predecessors: [0x9f0]
Successors: [0x9e3]
---
0xa97 JUMPDEST
0xa98 PUSH1 0x1
0xa9a SWAP1
0xa9b SWAP2
0xa9c ADD
0xa9d SWAP1
0xa9e PUSH2 0x9e3
0xaa1 JUMP
---
0xa97: JUMPDEST 
0xa98: V886 = 0x1
0xa9c: V887 = ADD S1 0x1
0xa9e: V888 = 0x9e3
0xaa1: JUMP 0x9e3
---
Entry stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V887, S0]
Exit stack: [V11, 0xa3, S20, S19, S18, S17, S16, {0x44, 0x64}, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, {0x408, 0x6cc}, S3, S2, V887, S0]

================================

Block 0xaa2
[0xaa2:0xaa8]
---
Predecessors: [0x9e3, 0xae2]
Successors: [0x408, 0x43e, 0x6cc]
---
0xaa2 JUMPDEST
0xaa3 POP
0xaa4 POP
0xaa5 SWAP2
0xaa6 SWAP1
0xaa7 POP
0xaa8 JUMP
---
0xaa2: JUMPDEST 
0xaa8: JUMP {0x408, 0x43e, 0x6cc}
---
Entry stack: [V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S2]

================================

Block 0xaa9
[0xaa9:0xab0]
---
Predecessors: [0x408]
Successors: [0xde8]
---
0xaa9 JUMPDEST
0xaaa PUSH2 0xab1
0xaad PUSH2 0xde8
0xab0 JUMP
---
0xaa9: JUMPDEST 
0xaaa: V889 = 0xab1
0xaad: V890 = 0xde8
0xab0: JUMP 0xde8
---
Entry stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x43e, V384]
Stack pops: 0
Stack additions: [0xab1]
Exit stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x43e, V384, 0xab1]

================================

Block 0xab1
[0xab1:0xac3]
---
Predecessors: [0xde8]
Successors: [0xac4, 0xac6]
---
0xab1 JUMPDEST
0xab2 PUSH1 0x0
0xab4 DUP1
0xab5 DUP4
0xab6 MLOAD
0xab7 PUSH1 0x20
0xab9 MUL
0xaba PUSH1 0x40
0xabc MLOAD
0xabd DUP1
0xabe MSIZE
0xabf LT
0xac0 PUSH2 0xac6
0xac3 JUMPI
---
0xab1: JUMPDEST 
0xab2: V891 = 0x0
0xab6: V892 = M[S1]
0xab7: V893 = 0x20
0xab9: V894 = MUL 0x20 V892
0xaba: V895 = 0x40
0xabc: V896 = M[0x40]
0xabe: V897 = MSIZE
0xabf: V898 = LT V897 V896
0xac0: V899 = 0xac6
0xac3: JUMPI 0xac6 V898
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x408, 0x43e, 0x6cc}, S1, V1152]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, V894, V896]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x408, 0x43e, 0x6cc}, S1, V1152, 0x0, 0x0, V894, V896]

================================

Block 0xac4
[0xac4:0xac5]
---
Predecessors: [0xab1]
Successors: [0xac6]
---
0xac4 POP
0xac5 MSIZE
---
0xac5: V900 = MSIZE
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x408, 0x43e, 0x6cc}, S5, V1152, 0x0, 0x0, V894, V896]
Stack pops: 1
Stack additions: [V900]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x408, 0x43e, 0x6cc}, S5, V1152, 0x0, 0x0, V894, V900]

================================

Block 0xac6
[0xac6:0xae1]
---
Predecessors: [0xab1, 0xac4]
Successors: [0xae2]
---
0xac6 JUMPDEST
0xac7 DUP2
0xac8 DUP2
0xac9 MSTORE
0xaca PUSH1 0x1f
0xacc NOT
0xacd PUSH1 0x1f
0xacf DUP4
0xad0 ADD
0xad1 AND
0xad2 DUP2
0xad3 ADD
0xad4 PUSH1 0x20
0xad6 ADD
0xad7 PUSH1 0x40
0xad9 MSTORE
0xada SWAP1
0xadb POP
0xadc SWAP3
0xadd POP
0xade PUSH1 0x0
0xae0 SWAP2
0xae1 POP
---
0xac6: JUMPDEST 
0xac9: M[S0] = V894
0xaca: V901 = 0x1f
0xacc: V902 = NOT 0x1f
0xacd: V903 = 0x1f
0xad0: V904 = ADD V894 0x1f
0xad1: V905 = AND V904 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xad3: V906 = ADD S0 V905
0xad4: V907 = 0x20
0xad6: V908 = ADD 0x20 V906
0xad7: V909 = 0x40
0xad9: M[0x40] = V908
0xade: V910 = 0x0
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x408, 0x43e, 0x6cc}, S5, V1152, 0x0, 0x0, V894, S0]
Stack pops: 5
Stack additions: [S0, 0x0, S2]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x408, 0x43e, 0x6cc}, S5, S0, 0x0, 0x0]

================================

Block 0xae2
[0xae2:0xaeb]
---
Predecessors: [0xac6, 0xb8d]
Successors: [0xaa2, 0xaec]
---
0xae2 JUMPDEST
0xae3 DUP4
0xae4 MLOAD
0xae5 DUP3
0xae6 LT
0xae7 ISZERO
0xae8 PUSH2 0xaa2
0xaeb JUMPI
---
0xae2: JUMPDEST 
0xae4: V911 = M[S3]
0xae6: V912 = LT S1 V911
0xae7: V913 = ISZERO V912
0xae8: V914 = 0xaa2
0xaeb: JUMPI 0xaa2 V913
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0]

================================

Block 0xaec
[0xaec:0xaee]
---
Predecessors: [0xae2]
Successors: [0xaef]
---
0xaec POP
0xaed PUSH1 0x0
---
0xaed: V915 = 0x0
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, 0x0]

================================

Block 0xaef
[0xaef:0xaf8]
---
Predecessors: [0xaec, 0xb55]
Successors: [0xaf9, 0xb8d]
---
0xaef JUMPDEST
0xaf0 PUSH1 0x20
0xaf2 DUP2
0xaf3 LT
0xaf4 ISZERO
0xaf5 PUSH2 0xb8d
0xaf8 JUMPI
---
0xaef: JUMPDEST 
0xaf0: V916 = 0x20
0xaf3: V917 = LT S0 0x20
0xaf4: V918 = ISZERO V917
0xaf5: V919 = 0xb8d
0xaf8: JUMPI 0xb8d V918
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0]

================================

Block 0xaf9
[0xaf9:0xb0c]
---
Predecessors: [0xaef]
Successors: [0xb0d, 0xb0e]
---
0xaf9 DUP1
0xafa PUSH1 0x1f
0xafc SUB
0xafd PUSH1 0x8
0xaff MUL
0xb00 PUSH1 0x2
0xb02 EXP
0xb03 DUP5
0xb04 DUP4
0xb05 DUP2
0xb06 MLOAD
0xb07 DUP2
0xb08 LT
0xb09 PUSH2 0xb0e
0xb0c JUMPI
---
0xafa: V920 = 0x1f
0xafc: V921 = SUB 0x1f S0
0xafd: V922 = 0x8
0xaff: V923 = MUL 0x8 V921
0xb00: V924 = 0x2
0xb02: V925 = EXP 0x2 V923
0xb06: V926 = M[S3]
0xb08: V927 = LT S1 V926
0xb09: V928 = 0xb0e
0xb0c: JUMPI 0xb0e V927
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V925, S3, S1]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0, V925, S3, S1]

================================

Block 0xb0d
[0xb0d:0xb0d]
---
Predecessors: [0xaf9]
Successors: []
---
0xb0d INVALID
---
0xb0d: INVALID 
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x408, 0x43e, 0x6cc}, S6, S5, S4, S3, V925, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x408, 0x43e, 0x6cc}, S6, S5, S4, S3, V925, S1, S0]

================================

Block 0xb0e
[0xb0e:0xb1f]
---
Predecessors: [0xaf9]
Successors: [0xb20, 0xb21]
---
0xb0e JUMPDEST
0xb0f SWAP1
0xb10 PUSH1 0x20
0xb12 ADD
0xb13 SWAP1
0xb14 PUSH1 0x20
0xb16 MUL
0xb17 ADD
0xb18 MLOAD
0xb19 DUP2
0xb1a ISZERO
0xb1b ISZERO
0xb1c PUSH2 0xb21
0xb1f JUMPI
---
0xb0e: JUMPDEST 
0xb10: V929 = 0x20
0xb12: V930 = ADD 0x20 S1
0xb14: V931 = 0x20
0xb16: V932 = MUL 0x20 S0
0xb17: V933 = ADD V932 V930
0xb18: V934 = M[V933]
0xb1a: V935 = ISZERO V925
0xb1b: V936 = ISZERO V935
0xb1c: V937 = 0xb21
0xb1f: JUMPI 0xb21 V936
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x408, 0x43e, 0x6cc}, S6, S5, S4, S3, V925, S1, S0]
Stack pops: 3
Stack additions: [S2, V934]
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x408, 0x43e, 0x6cc}, S6, S5, S4, S3, V925, V934]

================================

Block 0xb20
[0xb20:0xb20]
---
Predecessors: [0xb0e]
Successors: []
---
0xb20 INVALID
---
0xb20: INVALID 
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x408, 0x43e, 0x6cc}, S5, S4, S3, S2, V925, V934]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x408, 0x43e, 0x6cc}, S5, S4, S3, S2, V925, V934]

================================

Block 0xb21
[0xb21:0xb53]
---
Predecessors: [0xb0e]
Successors: [0xb54, 0xb55]
---
0xb21 JUMPDEST
0xb22 DIV
0xb23 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xb44 MUL
0xb45 DUP4
0xb46 DUP3
0xb47 DUP5
0xb48 PUSH1 0x20
0xb4a MUL
0xb4b ADD
0xb4c DUP2
0xb4d MLOAD
0xb4e DUP2
0xb4f LT
0xb50 PUSH2 0xb55
0xb53 JUMPI
---
0xb21: JUMPDEST 
0xb22: V938 = DIV V934 V925
0xb23: V939 = 0x100000000000000000000000000000000000000000000000000000000000000
0xb44: V940 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V938
0xb48: V941 = 0x20
0xb4a: V942 = MUL 0x20 S3
0xb4b: V943 = ADD V942 S2
0xb4d: V944 = M[S4]
0xb4f: V945 = LT V943 V944
0xb50: V946 = 0xb55
0xb53: JUMPI 0xb55 V945
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x408, 0x43e, 0x6cc}, S5, S4, S3, S2, V925, V934]
Stack pops: 5
Stack additions: [S4, S3, S2, V940, S4, V943]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x408, 0x43e, 0x6cc}, S5, S4, S3, S2, V940, S4, V943]

================================

Block 0xb54
[0xb54:0xb54]
---
Predecessors: [0xb21]
Successors: []
---
0xb54 INVALID
---
0xb54: INVALID 
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x408, 0x43e, 0x6cc}, S6, S5, S4, S3, V940, S1, V943]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x408, 0x43e, 0x6cc}, S6, S5, S4, S3, V940, S1, V943]

================================

Block 0xb55
[0xb55:0xb8c]
---
Predecessors: [0xb21]
Successors: [0xaef]
---
0xb55 JUMPDEST
0xb56 SWAP1
0xb57 PUSH1 0x20
0xb59 ADD
0xb5a ADD
0xb5b SWAP1
0xb5c PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb7c NOT
0xb7d AND
0xb7e SWAP1
0xb7f DUP2
0xb80 PUSH1 0x0
0xb82 BYTE
0xb83 SWAP1
0xb84 MSTORE8
0xb85 POP
0xb86 PUSH1 0x1
0xb88 ADD
0xb89 PUSH2 0xaef
0xb8c JUMP
---
0xb55: JUMPDEST 
0xb57: V947 = 0x20
0xb59: V948 = ADD 0x20 S1
0xb5a: V949 = ADD V948 V943
0xb5c: V950 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb7c: V951 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb7d: V952 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V940
0xb80: V953 = 0x0
0xb82: V954 = BYTE 0x0 V952
0xb84: M8[V949] = V954
0xb86: V955 = 0x1
0xb88: V956 = ADD 0x1 S3
0xb89: V957 = 0xaef
0xb8c: JUMP 0xaef
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x408, 0x43e, 0x6cc}, S6, S5, S4, S3, V940, S1, V943]
Stack pops: 4
Stack additions: [V956]
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x408, 0x43e, 0x6cc}, S6, S5, S4, V956]

================================

Block 0xb8d
[0xb8d:0xb97]
---
Predecessors: [0xaef]
Successors: [0xae2]
---
0xb8d JUMPDEST
0xb8e PUSH1 0x1
0xb90 SWAP1
0xb91 SWAP2
0xb92 ADD
0xb93 SWAP1
0xb94 PUSH2 0xae2
0xb97 JUMP
---
0xb8d: JUMPDEST 
0xb8e: V958 = 0x1
0xb92: V959 = ADD S1 0x1
0xb94: V960 = 0xae2
0xb97: JUMP 0xae2
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V959, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x408, 0x43e, 0x6cc}, S3, S2, V959, S0]

================================

Block 0xb98
[0xb98:0xbab]
---
Predecessors: [0x4ed, 0x72f]
Successors: [0xbac]
---
0xb98 JUMPDEST
0xb99 PUSH1 0x3
0xb9b DUP1
0xb9c SLOAD
0xb9d PUSH1 0x0
0xb9f SWAP2
0xba0 DUP3
0xba1 SWAP1
0xba2 PUSH2 0xbd5
0xba5 SWAP1
0xba6 DUP10
0xba7 SWAP1
0xba8 DUP9
0xba9 SWAP1
0xbaa DUP11
0xbab DUP6
---
0xb98: JUMPDEST 
0xb99: V961 = 0x3
0xb9c: V962 = S[0x3]
0xb9d: V963 = 0x0
0xba2: V964 = 0xbd5
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x5dc, 0x81d}, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, V962, 0x0, 0xbd5, S4, S2, 0x3, S3, 0x0]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x5dc, 0x81d}, S4, S3, S2, S1, S0, 0x0, V962, 0x0, 0xbd5, S4, S2, 0x3, S3, 0x0]

================================

Block 0xbac
[0xbac:0xbb9]
---
Predecessors: [0xb98, 0xbe8, 0xc0b]
Successors: [0xbba, 0xbbb]
---
0xbac JUMPDEST
0xbad PUSH1 0x20
0xbaf MUL
0xbb0 ADD
0xbb1 MLOAD
0xbb2 DUP2
0xbb3 SLOAD
0xbb4 DUP2
0xbb5 LT
0xbb6 PUSH2 0xbbb
0xbb9 JUMPI
---
0xbac: JUMPDEST 
0xbad: V965 = 0x20
0xbaf: V966 = MUL 0x20 {0x0, 0x1, 0x2}
0xbb0: V967 = ADD V966 S1
0xbb1: V968 = M[V967]
0xbb3: V969 = S[0x3]
0xbb5: V970 = LT V968 V969
0xbb6: V971 = 0xbbb
0xbb9: JUMPI 0xbbb V970
---
Entry stack: [V11, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x5dc, 0x81d}, S13, S12, S11, S10, S9, 0x0, V962, S6, {0xbd5, 0xbf7, 0xc1a}, S4, S3, 0x3, S1, {0x0, 0x1, 0x2}]
Stack pops: 3
Stack additions: [S2, V968]
Exit stack: [V11, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x5dc, 0x81d}, S13, S12, S11, S10, S9, 0x0, V962, S6, {0xbd5, 0xbf7, 0xc1a}, S4, S3, 0x3, V968]

================================

Block 0xbba
[0xbba:0xbba]
---
Predecessors: [0xbac]
Successors: []
---
0xbba INVALID
---
0xbba: INVALID 
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x5dc, 0x81d}, S12, S11, S10, S9, S8, 0x0, V962, S5, {0xbd5, 0xbf7, 0xc1a}, S3, S2, 0x3, V968]
Stack pops: 0
Stack additions: []
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x5dc, 0x81d}, S12, S11, S10, S9, S8, 0x0, V962, S5, {0xbd5, 0xbf7, 0xc1a}, S3, S2, 0x3, V968]

================================

Block 0xbbb
[0xbbb:0xbd4]
---
Predecessors: [0xbac]
Successors: [0xc99]
---
0xbbb JUMPDEST
0xbbc PUSH1 0x0
0xbbe SWAP2
0xbbf DUP3
0xbc0 MSTORE
0xbc1 PUSH1 0x20
0xbc3 SWAP1
0xbc4 SWAP2
0xbc5 SHA3
0xbc6 ADD
0xbc7 SLOAD
0xbc8 PUSH1 0x1
0xbca PUSH1 0xa0
0xbcc PUSH1 0x2
0xbce EXP
0xbcf SUB
0xbd0 AND
0xbd1 PUSH2 0xc99
0xbd4 JUMP
---
0xbbb: JUMPDEST 
0xbbc: V972 = 0x0
0xbc0: M[0x0] = 0x3
0xbc1: V973 = 0x20
0xbc5: V974 = SHA3 0x0 0x20
0xbc6: V975 = ADD V974 V968
0xbc7: V976 = S[V975]
0xbc8: V977 = 0x1
0xbca: V978 = 0xa0
0xbcc: V979 = 0x2
0xbce: V980 = EXP 0x2 0xa0
0xbcf: V981 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd0: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V976
0xbd1: V983 = 0xc99
0xbd4: JUMP 0xc99
---
Entry stack: [V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x5dc, 0x81d}, S12, S11, S10, S9, S8, 0x0, V962, S5, {0xbd5, 0xbf7, 0xc1a}, S3, S2, 0x3, V968]
Stack pops: 2
Stack additions: [V982]
Exit stack: [V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x5dc, 0x81d}, S12, S11, S10, S9, S8, 0x0, V962, S5, {0xbd5, 0xbf7, 0xc1a}, S3, S2, V982]

================================

Block 0xbd5
[0xbd5:0xbe0]
---
Predecessors: [0xcd0]
Successors: [0xbe1, 0xbfa]
---
0xbd5 JUMPDEST
0xbd6 SWAP1
0xbd7 POP
0xbd8 PUSH1 0x3
0xbda DUP3
0xbdb GT
0xbdc ISZERO
0xbdd PUSH2 0xbfa
0xbe0 JUMPI
---
0xbd5: JUMPDEST 
0xbd8: V984 = 0x3
0xbdb: V985 = GT V962 0x3
0xbdc: V986 = ISZERO V985
0xbdd: V987 = 0xbfa
0xbe0: JUMPI 0xbfa V986
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x5dc, 0x81d}, S8, S7, S6, S5, S4, 0x0, V962, S1, S0]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x5dc, 0x81d}, S8, S7, S6, S5, S4, 0x0, V962, S0]

================================

Block 0xbe1
[0xbe1:0xbe7]
---
Predecessors: [0xbd5]
Successors: [0xbe8, 0xbf7]
---
0xbe1 DUP1
0xbe2 DUP1
0xbe3 ISZERO
0xbe4 PUSH2 0xbf7
0xbe7 JUMPI
---
0xbe3: V988 = ISZERO S0
0xbe4: V989 = 0xbf7
0xbe7: JUMPI 0xbf7 V988
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x5dc, 0x81d}, S7, S6, S5, S4, S3, 0x0, V962, S0]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x81d, S7, S6, S5, S4, S3, S2, S1, S0, S0]

================================

Block 0xbe8
[0xbe8:0xbf6]
---
Predecessors: [0xbe1]
Successors: [0xbac]
---
0xbe8 POP
0xbe9 PUSH2 0xbf7
0xbec DUP9
0xbed DUP7
0xbee PUSH1 0x3
0xbf0 DUP11
0xbf1 PUSH1 0x1
0xbf3 PUSH2 0xbac
0xbf6 JUMP
---
0xbe9: V990 = 0xbf7
0xbee: V991 = 0x3
0xbf1: V992 = 0x1
0xbf3: V993 = 0xbac
0xbf6: JUMP 0xbac
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, V618, S10, 0x81d, V618, V623, V636, V650, V664, 0x0, V962, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, 0xbf7, S8, S5, 0x3, S7, 0x1]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, V618, S10, 0x81d, V618, V623, V636, V650, V664, 0x0, V962, S1, 0xbf7, V618, V650, 0x3, V623, 0x1]

================================

Block 0xbf7
[0xbf7:0xbf9]
---
Predecessors: [0xbe1, 0xcd0]
Successors: [0xbfa]
---
0xbf7 JUMPDEST
0xbf8 SWAP1
0xbf9 POP
---
0xbf7: JUMPDEST 
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x5dc, 0x81d}, S8, S7, S6, S5, S4, 0x0, V962, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x5dc, 0x81d}, S8, S7, S6, S5, S4, 0x0, V962, S0]

================================

Block 0xbfa
[0xbfa:0xc03]
---
Predecessors: [0xbd5, 0xbf7]
Successors: [0xc04, 0xc1d]
---
0xbfa JUMPDEST
0xbfb PUSH1 0x6
0xbfd DUP3
0xbfe GT
0xbff ISZERO
0xc00 PUSH2 0xc1d
0xc03 JUMPI
---
0xbfa: JUMPDEST 
0xbfb: V994 = 0x6
0xbfe: V995 = GT V962 0x6
0xbff: V996 = ISZERO V995
0xc00: V997 = 0xc1d
0xc03: JUMPI 0xc1d V996
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x5dc, 0x81d}, S7, S6, S5, S4, S3, 0x0, V962, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x5dc, 0x81d}, S7, S6, S5, S4, S3, 0x0, V962, S0]

================================

Block 0xc04
[0xc04:0xc0a]
---
Predecessors: [0xbfa]
Successors: [0xc0b, 0xc1a]
---
0xc04 DUP1
0xc05 DUP1
0xc06 ISZERO
0xc07 PUSH2 0xc1a
0xc0a JUMPI
---
0xc06: V998 = ISZERO S0
0xc07: V999 = 0xc1a
0xc0a: JUMPI 0xc1a V998
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x5dc, 0x81d}, S7, S6, S5, S4, S3, 0x0, V962, S0]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x81d, S7, S6, S5, S4, S3, S2, S1, S0, S0]

================================

Block 0xc0b
[0xc0b:0xc19]
---
Predecessors: [0xc04]
Successors: [0xbac]
---
0xc0b POP
0xc0c PUSH2 0xc1a
0xc0f DUP9
0xc10 DUP6
0xc11 PUSH1 0x3
0xc13 DUP11
0xc14 PUSH1 0x2
0xc16 PUSH2 0xbac
0xc19 JUMP
---
0xc0c: V1000 = 0xc1a
0xc11: V1001 = 0x3
0xc14: V1002 = 0x2
0xc16: V1003 = 0xbac
0xc19: JUMP 0xbac
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, V618, S10, 0x81d, V618, V623, V636, V650, V664, 0x0, V962, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, 0xc1a, S8, S4, 0x3, S7, 0x2]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, V618, S10, 0x81d, V618, V623, V636, V650, V664, 0x0, V962, S1, 0xc1a, V618, V664, 0x3, V623, 0x2]

================================

Block 0xc1a
[0xc1a:0xc1c]
---
Predecessors: [0xc04, 0xcd0]
Successors: [0xc1d]
---
0xc1a JUMPDEST
0xc1b SWAP1
0xc1c POP
---
0xc1a: JUMPDEST 
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x5dc, 0x81d}, S8, S7, S6, S5, S4, 0x0, V962, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x5dc, 0x81d}, S8, S7, S6, S5, S4, 0x0, V962, S0]

================================

Block 0xc1d
[0xc1d:0xc27]
---
Predecessors: [0xbfa, 0xc1a]
Successors: [0x5dc, 0x81d]
---
0xc1d JUMPDEST
0xc1e SWAP8
0xc1f SWAP7
0xc20 POP
0xc21 POP
0xc22 POP
0xc23 POP
0xc24 POP
0xc25 POP
0xc26 POP
0xc27 JUMP
---
0xc1d: JUMPDEST 
0xc27: JUMP {0x5dc, 0x81d}
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x5dc, 0x81d}, S7, S6, S5, S4, S3, 0x0, V962, S0]
Stack pops: 9
Stack additions: [S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S0]

================================

Block 0xc28
[0xc28:0xc2a]
---
Predecessors: [0x5e7]
Successors: [0xc2b]
---
0xc28 JUMPDEST
0xc29 PUSH1 0x0
---
0xc28: JUMPDEST 
0xc29: V1004 = 0x0
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x653, V522, V535]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x653, V522, V535, 0x0]

================================

Block 0xc2b
[0xc2b:0xc34]
---
Predecessors: [0xc28, 0xc91]
Successors: [0x8f6, 0xc35]
---
0xc2b JUMPDEST
0xc2c DUP2
0xc2d MLOAD
0xc2e DUP2
0xc2f LT
0xc30 ISZERO
0xc31 PUSH2 0x8f6
0xc34 JUMPI
---
0xc2b: JUMPDEST 
0xc2d: V1005 = M[V535]
0xc2f: V1006 = LT S0 V1005
0xc30: V1007 = ISZERO V1006
0xc31: V1008 = 0x8f6
0xc34: JUMPI 0x8f6 V1007
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x653, V522, V535, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x653, V522, V535, S0]

================================

Block 0xc35
[0xc35:0xc3e]
---
Predecessors: [0xc2b]
Successors: [0xc3f, 0xc40]
---
0xc35 DUP3
0xc36 DUP2
0xc37 DUP2
0xc38 MLOAD
0xc39 DUP2
0xc3a LT
0xc3b PUSH2 0xc40
0xc3e JUMPI
---
0xc38: V1009 = M[V522]
0xc3a: V1010 = LT S0 V1009
0xc3b: V1011 = 0xc40
0xc3e: JUMPI 0xc40 V1010
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x653, V522, V535, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x653, V522, V535, S0, V522, S0]

================================

Block 0xc3f
[0xc3f:0xc3f]
---
Predecessors: [0xc35]
Successors: []
---
0xc3f INVALID
---
0xc3f: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x653, V522, V535, S2, V522, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x653, V522, V535, S2, V522, S0]

================================

Block 0xc40
[0xc40:0xc60]
---
Predecessors: [0xc35]
Successors: [0xc61, 0xc62]
---
0xc40 JUMPDEST
0xc41 SWAP1
0xc42 PUSH1 0x20
0xc44 ADD
0xc45 SWAP1
0xc46 PUSH1 0x20
0xc48 MUL
0xc49 ADD
0xc4a MLOAD
0xc4b PUSH1 0x1
0xc4d PUSH1 0xa0
0xc4f PUSH1 0x2
0xc51 EXP
0xc52 SUB
0xc53 AND
0xc54 PUSH2 0x8fc
0xc57 DUP4
0xc58 DUP4
0xc59 DUP2
0xc5a MLOAD
0xc5b DUP2
0xc5c LT
0xc5d PUSH2 0xc62
0xc60 JUMPI
---
0xc40: JUMPDEST 
0xc42: V1012 = 0x20
0xc44: V1013 = ADD 0x20 V522
0xc46: V1014 = 0x20
0xc48: V1015 = MUL 0x20 S0
0xc49: V1016 = ADD V1015 V1013
0xc4a: V1017 = M[V1016]
0xc4b: V1018 = 0x1
0xc4d: V1019 = 0xa0
0xc4f: V1020 = 0x2
0xc51: V1021 = EXP 0x2 0xa0
0xc52: V1022 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc53: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffff V1017
0xc54: V1024 = 0x8fc
0xc5a: V1025 = M[V535]
0xc5c: V1026 = LT S2 V1025
0xc5d: V1027 = 0xc62
0xc60: JUMPI 0xc62 V1026
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x653, V522, V535, S2, V522, S0]
Stack pops: 4
Stack additions: [S3, S2, V1023, 0x8fc, S3, S2]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x653, V522, V535, S2, V1023, 0x8fc, V535, S2]

================================

Block 0xc61
[0xc61:0xc61]
---
Predecessors: [0xc40]
Successors: []
---
0xc61 INVALID
---
0xc61: INVALID 
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x653, V522, V535, S4, V1023, 0x8fc, V535, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x653, V522, V535, S4, V1023, 0x8fc, V535, S0]

================================

Block 0xc62
[0xc62:0xc8c]
---
Predecessors: [0xc40]
Successors: [0xc8d, 0xc91]
---
0xc62 JUMPDEST
0xc63 SWAP1
0xc64 PUSH1 0x20
0xc66 ADD
0xc67 SWAP1
0xc68 PUSH1 0x20
0xc6a MUL
0xc6b ADD
0xc6c MLOAD
0xc6d SWAP1
0xc6e DUP2
0xc6f ISZERO
0xc70 MUL
0xc71 SWAP1
0xc72 PUSH1 0x40
0xc74 MLOAD
0xc75 PUSH1 0x0
0xc77 PUSH1 0x40
0xc79 MLOAD
0xc7a DUP1
0xc7b DUP4
0xc7c SUB
0xc7d DUP2
0xc7e DUP6
0xc7f DUP9
0xc80 DUP9
0xc81 CALL
0xc82 SWAP4
0xc83 POP
0xc84 POP
0xc85 POP
0xc86 POP
0xc87 ISZERO
0xc88 ISZERO
0xc89 PUSH2 0xc91
0xc8c JUMPI
---
0xc62: JUMPDEST 
0xc64: V1028 = 0x20
0xc66: V1029 = ADD 0x20 V535
0xc68: V1030 = 0x20
0xc6a: V1031 = MUL 0x20 S0
0xc6b: V1032 = ADD V1031 V1029
0xc6c: V1033 = M[V1032]
0xc6f: V1034 = ISZERO V1033
0xc70: V1035 = MUL V1034 0x8fc
0xc72: V1036 = 0x40
0xc74: V1037 = M[0x40]
0xc75: V1038 = 0x0
0xc77: V1039 = 0x40
0xc79: V1040 = M[0x40]
0xc7c: V1041 = SUB V1037 V1040
0xc81: V1042 = CALL V1035 V1023 V1033 V1040 V1041 V1040 0x0
0xc87: V1043 = ISZERO V1042
0xc88: V1044 = ISZERO V1043
0xc89: V1045 = 0xc91
0xc8c: JUMPI 0xc91 V1044
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x653, V522, V535, S4, V1023, 0x8fc, V535, S0]
Stack pops: 4
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x653, V522, V535, S4]

================================

Block 0xc8d
[0xc8d:0xc90]
---
Predecessors: [0xc62]
Successors: []
---
0xc8d PUSH1 0x0
0xc8f DUP1
0xc90 REVERT
---
0xc8d: V1046 = 0x0
0xc90: REVERT 0x0 0x0
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x653, V522, V535, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x653, V522, V535, S0]

================================

Block 0xc91
[0xc91:0xc98]
---
Predecessors: [0xc62]
Successors: [0xc2b]
---
0xc91 JUMPDEST
0xc92 PUSH1 0x1
0xc94 ADD
0xc95 PUSH2 0xc2b
0xc98 JUMP
---
0xc91: JUMPDEST 
0xc92: V1047 = 0x1
0xc94: V1048 = ADD 0x1 S0
0xc95: V1049 = 0xc2b
0xc98: JUMP 0xc2b
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x653, V522, V535, S0]
Stack pops: 1
Stack additions: [V1048]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x653, V522, V535, V1048]

================================

Block 0xc99
[0xc99:0xca7]
---
Predecessors: [0xbbb]
Successors: [0xcda]
---
0xc99 JUMPDEST
0xc9a PUSH1 0x0
0xc9c DUP1
0xc9d PUSH1 0x0
0xc9f PUSH2 0xca8
0xca2 DUP7
0xca3 DUP7
0xca4 PUSH2 0xcda
0xca7 JUMP
---
0xc99: JUMPDEST 
0xc9a: V1050 = 0x0
0xc9d: V1051 = 0x0
0xc9f: V1052 = 0xca8
0xca4: V1053 = 0xcda
0xca7: JUMP 0xcda
---
Entry stack: [V11, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x5dc, 0x81d}, S11, S10, S9, S8, S7, 0x0, V962, S4, {0xbd5, 0xbf7, 0xc1a}, S2, S1, V982]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0, 0x0, 0xca8, S2, S1]
Exit stack: [V11, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x5dc, 0x81d}, S11, S10, S9, S8, S7, 0x0, V962, S4, {0xbd5, 0xbf7, 0xc1a}, S2, S1, V982, 0x0, 0x0, 0x0, 0xca8, S2, S1]

================================

Block 0xca8
[0xca8:0xcb9]
---
Predecessors: [0xd06]
Successors: [0xcba, 0xcd0]
---
0xca8 JUMPDEST
0xca9 SWAP1
0xcaa SWAP3
0xcab POP
0xcac SWAP1
0xcad POP
0xcae PUSH1 0x1
0xcb0 DUP3
0xcb1 ISZERO
0xcb2 ISZERO
0xcb3 EQ
0xcb4 DUP1
0xcb5 ISZERO
0xcb6 PUSH2 0xcd0
0xcb9 JUMPI
---
0xca8: JUMPDEST 
0xcae: V1054 = 0x1
0xcb1: V1055 = ISZERO S1
0xcb2: V1056 = ISZERO V1055
0xcb3: V1057 = EQ V1056 0x1
0xcb5: V1058 = ISZERO V1057
0xcb6: V1059 = 0xcd0
0xcb9: JUMPI 0xcd0 V1058
---
Entry stack: [S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x5dc, 0x81d}, S16, S15, S14, S13, S12, 0x0, V962, S9, {0xbd5, 0xbf7, 0xc1a}, S7, S6, S5, 0x0, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S1, S0, V1057]
Exit stack: [S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x5dc, 0x81d}, S16, S15, S14, S13, S12, 0x0, V962, S9, {0xbd5, 0xbf7, 0xc1a}, S7, S6, S5, 0x0, S1, S0, V1057]

================================

Block 0xcba
[0xcba:0xccf]
---
Predecessors: [0xca8]
Successors: [0xcd0]
---
0xcba POP
0xcbb DUP4
0xcbc PUSH1 0x1
0xcbe PUSH1 0xa0
0xcc0 PUSH1 0x2
0xcc2 EXP
0xcc3 SUB
0xcc4 AND
0xcc5 DUP2
0xcc6 PUSH1 0x1
0xcc8 PUSH1 0xa0
0xcca PUSH1 0x2
0xccc EXP
0xccd SUB
0xcce AND
0xccf EQ
---
0xcbc: V1060 = 0x1
0xcbe: V1061 = 0xa0
0xcc0: V1062 = 0x2
0xcc2: V1063 = EXP 0x2 0xa0
0xcc3: V1064 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc4: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xcc6: V1066 = 0x1
0xcc8: V1067 = 0xa0
0xcca: V1068 = 0x2
0xccc: V1069 = EXP 0x2 0xa0
0xccd: V1070 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcce: V1071 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xccf: V1072 = EQ V1071 V1065
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x5dc, 0x81d}, S15, S14, S13, S12, S11, 0x0, V962, S8, {0xbd5, 0xbf7, 0xc1a}, S6, S5, S4, 0x0, S2, S1, V1057]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V1072]
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x5dc, 0x81d}, S15, S14, S13, S12, S11, 0x0, V962, S8, {0xbd5, 0xbf7, 0xc1a}, S6, S5, S4, 0x0, S2, S1, V1072]

================================

Block 0xcd0
[0xcd0:0xcd9]
---
Predecessors: [0xca8, 0xcba]
Successors: [0xbd5, 0xbf7, 0xc1a]
---
0xcd0 JUMPDEST
0xcd1 SWAP7
0xcd2 SWAP6
0xcd3 POP
0xcd4 POP
0xcd5 POP
0xcd6 POP
0xcd7 POP
0xcd8 POP
0xcd9 JUMP
---
0xcd0: JUMPDEST 
0xcd9: JUMP {0xbd5, 0xbf7, 0xc1a}
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x5dc, 0x81d}, S15, S14, S13, S12, S11, 0x0, V962, S8, {0xbd5, 0xbf7, 0xc1a}, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 8
Stack additions: [S0]
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x5dc, 0x81d}, S15, S14, S13, S12, S11, 0x0, V962, S8, S0]

================================

Block 0xcda
[0xcda:0xd05]
---
Predecessors: [0xc99]
Successors: [0xd14]
---
0xcda JUMPDEST
0xcdb PUSH1 0x0
0xcdd DUP1
0xcde PUSH1 0x0
0xce0 DUP1
0xce1 PUSH1 0x0
0xce3 PUSH1 0x20
0xce5 DUP7
0xce6 ADD
0xce7 MLOAD
0xce8 SWAP3
0xce9 POP
0xcea PUSH1 0x40
0xcec DUP7
0xced ADD
0xcee MLOAD
0xcef SWAP2
0xcf0 POP
0xcf1 PUSH1 0x60
0xcf3 DUP7
0xcf4 ADD
0xcf5 MLOAD
0xcf6 PUSH1 0x0
0xcf8 BYTE
0xcf9 SWAP1
0xcfa POP
0xcfb PUSH2 0xd06
0xcfe DUP8
0xcff DUP3
0xd00 DUP6
0xd01 DUP6
0xd02 PUSH2 0xd14
0xd05 JUMP
---
0xcda: JUMPDEST 
0xcdb: V1073 = 0x0
0xcde: V1074 = 0x0
0xce1: V1075 = 0x0
0xce3: V1076 = 0x20
0xce6: V1077 = ADD S0 0x20
0xce7: V1078 = M[V1077]
0xcea: V1079 = 0x40
0xced: V1080 = ADD S0 0x40
0xcee: V1081 = M[V1080]
0xcf1: V1082 = 0x60
0xcf4: V1083 = ADD S0 0x60
0xcf5: V1084 = M[V1083]
0xcf6: V1085 = 0x0
0xcf8: V1086 = BYTE 0x0 V1084
0xcfb: V1087 = 0xd06
0xd02: V1088 = 0xd14
0xd05: JUMP 0xd14
---
Entry stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, S20, V130, {0x5dc, 0x81d}, S17, S16, S15, S14, S13, 0x0, V962, S10, {0xbd5, 0xbf7, 0xc1a}, S8, S7, S6, 0x0, 0x0, 0x0, 0xca8, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, V1078, V1081, V1086, 0xd06, S1, V1086, V1078, V1081]
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, S20, V130, {0x5dc, 0x81d}, S17, S16, S15, S14, S13, 0x0, V962, S10, {0xbd5, 0xbf7, 0xc1a}, S8, S7, S6, 0x0, 0x0, 0x0, 0xca8, S1, S0, 0x0, 0x0, V1078, V1081, V1086, 0xd06, S1, V1086, V1078, V1081]

================================

Block 0xd06
[0xd06:0xd13]
---
Predecessors: [0xd14]
Successors: [0xca8]
---
0xd06 JUMPDEST
0xd07 SWAP5
0xd08 POP
0xd09 SWAP5
0xd0a POP
0xd0b POP
0xd0c POP
0xd0d POP
0xd0e SWAP3
0xd0f POP
0xd10 SWAP3
0xd11 SWAP1
0xd12 POP
0xd13 JUMP
---
0xd06: JUMPDEST 
0xd13: JUMP 0xca8
---
Entry stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, S27, V130, {0x5dc, 0x81d}, S24, S23, S22, S21, S20, 0x0, V962, S17, {0xbd5, 0xbf7, 0xc1a}, S15, S14, S13, 0x0, 0x0, 0x0, 0xca8, S8, S7, 0x0, 0x0, S4, S3, S2, V1104, V1105]
Stack pops: 10
Stack additions: [S1, S0]
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, S27, V130, {0x5dc, 0x81d}, S24, S23, S22, S21, S20, 0x0, V962, S17, {0xbd5, 0xbf7, 0xc1a}, S15, S14, S13, 0x0, 0x0, 0x0, V1104, V1105]

================================

Block 0xd14
[0xd14:0xd53]
---
Predecessors: [0xcda]
Successors: [0xd06]
---
0xd14 JUMPDEST
0xd15 PUSH1 0x0
0xd17 DUP1
0xd18 PUSH1 0x0
0xd1a DUP1
0xd1b PUSH1 0x40
0xd1d MLOAD
0xd1e DUP9
0xd1f DUP2
0xd20 MSTORE
0xd21 DUP8
0xd22 PUSH1 0x20
0xd24 DUP3
0xd25 ADD
0xd26 MSTORE
0xd27 DUP7
0xd28 PUSH1 0x40
0xd2a DUP3
0xd2b ADD
0xd2c MSTORE
0xd2d DUP6
0xd2e PUSH1 0x60
0xd30 DUP3
0xd31 ADD
0xd32 MSTORE
0xd33 PUSH1 0x20
0xd35 DUP2
0xd36 PUSH1 0x80
0xd38 DUP4
0xd39 PUSH1 0x0
0xd3b PUSH1 0x1
0xd3d PUSH2 0xbb8
0xd40 CALL
0xd41 SWAP3
0xd42 POP
0xd43 DUP1
0xd44 MLOAD
0xd45 SWAP3
0xd46 SWAP10
0xd47 SWAP3
0xd48 SWAP9
0xd49 POP
0xd4a SWAP2
0xd4b SWAP7
0xd4c POP
0xd4d POP
0xd4e POP
0xd4f POP
0xd50 POP
0xd51 POP
0xd52 POP
0xd53 JUMP
---
0xd14: JUMPDEST 
0xd15: V1089 = 0x0
0xd18: V1090 = 0x0
0xd1b: V1091 = 0x40
0xd1d: V1092 = M[0x40]
0xd20: M[V1092] = S3
0xd22: V1093 = 0x20
0xd25: V1094 = ADD V1092 0x20
0xd26: M[V1094] = V1086
0xd28: V1095 = 0x40
0xd2b: V1096 = ADD V1092 0x40
0xd2c: M[V1096] = V1078
0xd2e: V1097 = 0x60
0xd31: V1098 = ADD V1092 0x60
0xd32: M[V1098] = V1081
0xd33: V1099 = 0x20
0xd36: V1100 = 0x80
0xd39: V1101 = 0x0
0xd3b: V1102 = 0x1
0xd3d: V1103 = 0xbb8
0xd40: V1104 = CALL 0xbb8 0x1 0x0 V1092 0x80 V1092 0x20
0xd44: V1105 = M[V1092]
0xd53: JUMP 0xd06
---
Entry stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, S30, V130, {0x5dc, 0x81d}, S27, S26, S25, S24, S23, 0x0, V962, S20, {0xbd5, 0xbf7, 0xc1a}, S18, S17, S16, 0x0, 0x0, 0x0, 0xca8, S11, S10, 0x0, 0x0, V1078, V1081, V1086, 0xd06, S3, V1086, V1078, V1081]
Stack pops: 5
Stack additions: [V1104, V1105]
Exit stack: [V11, 0xa3, V130, V133, V135, 0x44, V139, V141, V144, V146, V149, V151, S30, V130, {0x5dc, 0x81d}, S27, S26, S25, S24, S23, 0x0, V962, S20, {0xbd5, 0xbf7, 0xc1a}, S18, S17, S16, 0x0, 0x0, 0x0, 0xca8, S11, S10, 0x0, 0x0, V1078, V1081, V1086, V1104, V1105]

================================

Block 0xd54
[0xd54:0xd61]
---
Predecessors: [0x2fe, 0x828]
Successors: [0x8f6, 0xd62]
---
0xd54 JUMPDEST
0xd55 DUP2
0xd56 SLOAD
0xd57 DUP2
0xd58 DUP4
0xd59 SSTORE
0xd5a DUP2
0xd5b DUP2
0xd5c ISZERO
0xd5d GT
0xd5e PUSH2 0x8f6
0xd61 JUMPI
---
0xd54: JUMPDEST 
0xd56: V1106 = S[0x4]
0xd59: S[0x4] = S0
0xd5c: V1107 = ISZERO V1106
0xd5d: V1108 = GT V1107 S0
0xd5e: V1109 = 0x8f6
0xd61: JUMPI 0x8f6 V1108
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, V11, S7, S6, S5, V290, S3, {0x30f, 0x83c}, 0x4, S0]
Stack pops: 2
Stack additions: [S1, S0, V1106]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, V11, S7, S6, S5, V290, S3, {0x30f, 0x83c}, 0x4, S0, V1106]

================================

Block 0xd62
[0xd62:0xd77]
---
Predecessors: [0xd54]
Successors: [0xdfa]
---
0xd62 PUSH1 0x0
0xd64 DUP4
0xd65 DUP2
0xd66 MSTORE
0xd67 PUSH1 0x20
0xd69 SWAP1
0xd6a SHA3
0xd6b PUSH2 0x8f6
0xd6e SWAP2
0xd6f DUP2
0xd70 ADD
0xd71 SWAP1
0xd72 DUP4
0xd73 ADD
0xd74 PUSH2 0xdfa
0xd77 JUMP
---
0xd62: V1110 = 0x0
0xd66: M[0x0] = 0x4
0xd67: V1111 = 0x20
0xd6a: V1112 = SHA3 0x0 0x20
0xd6b: V1113 = 0x8f6
0xd70: V1114 = ADD V1112 V1106
0xd73: V1115 = ADD S1 V1112
0xd74: V1116 = 0xdfa
0xd77: JUMP 0xdfa
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, V11, S8, S7, S6, V290, S4, {0x30f, 0x83c}, 0x4, S1, V1106]
Stack pops: 3
Stack additions: [S2, S1, 0x8f6, V1114, V1115]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x30f, 0x83c}, 0x4, S1, 0x8f6, V1114, V1115]

================================

Block 0xd78
[0xd78:0xd91]
---
Predecessors: [0x83c, 0x920]
Successors: [0xd92, 0xdd8]
---
0xd78 JUMPDEST
0xd79 DUP3
0xd7a DUP1
0xd7b SLOAD
0xd7c DUP3
0xd7d DUP3
0xd7e SSTORE
0xd7f SWAP1
0xd80 PUSH1 0x0
0xd82 MSTORE
0xd83 PUSH1 0x20
0xd85 PUSH1 0x0
0xd87 SHA3
0xd88 SWAP1
0xd89 DUP2
0xd8a ADD
0xd8b SWAP3
0xd8c DUP3
0xd8d ISZERO
0xd8e PUSH2 0xdd8
0xd91 JUMPI
---
0xd78: JUMPDEST 
0xd7b: V1117 = S[0x3]
0xd7e: S[0x3] = V177
0xd80: V1118 = 0x0
0xd82: M[0x0] = 0x3
0xd83: V1119 = 0x20
0xd85: V1120 = 0x0
0xd87: V1121 = SHA3 0x0 0x20
0xd8a: V1122 = ADD V1121 V1117
0xd8d: V1123 = ISZERO V177
0xd8e: V1124 = 0xdd8
0xd91: JUMPI 0xdd8 V1123
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V11, 0xa3, S9, S8, S7, S6, S5, S4, {0x849, 0x92b}, 0x3, V175, V177]
Stack pops: 3
Stack additions: [S2, V1122, S0, V1121, S1]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V11, 0xa3, S9, S8, S7, S6, S5, S4, {0x849, 0x92b}, 0x3, V1122, V177, V1121, V175]

================================

Block 0xd92
[0xd92:0xd97]
---
Predecessors: [0xd78]
Successors: [0xd98]
---
0xd92 SWAP2
0xd93 PUSH1 0x20
0xd95 MUL
0xd96 DUP3
0xd97 ADD
---
0xd93: V1125 = 0x20
0xd95: V1126 = MUL 0x20 V177
0xd97: V1127 = ADD V175 V1126
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, V1122, V177, V1121, V175]
Stack pops: 3
Stack additions: [S0, S1, V1127]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, V1122, V175, V1121, V1127]

================================

Block 0xd98
[0xd98:0xda0]
---
Predecessors: [0xd92, 0xda1]
Successors: [0xda1, 0xdd8]
---
0xd98 JUMPDEST
0xd99 DUP3
0xd9a DUP2
0xd9b GT
0xd9c ISZERO
0xd9d PUSH2 0xdd8
0xda0 JUMPI
---
0xd98: JUMPDEST 
0xd9b: V1128 = GT V1127 S2
0xd9c: V1129 = ISZERO V1128
0xd9d: V1130 = 0xdd8
0xda0: JUMPI 0xdd8 V1129
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, V1122, S2, S1, V1127]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, V1122, S2, S1, V1127]

================================

Block 0xda1
[0xda1:0xdd7]
---
Predecessors: [0xd98]
Successors: [0xd98]
---
0xda1 DUP2
0xda2 SLOAD
0xda3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb8 NOT
0xdb9 AND
0xdba PUSH1 0x1
0xdbc PUSH1 0xa0
0xdbe PUSH1 0x2
0xdc0 EXP
0xdc1 SUB
0xdc2 DUP5
0xdc3 CALLDATALOAD
0xdc4 AND
0xdc5 OR
0xdc6 DUP3
0xdc7 SSTORE
0xdc8 PUSH1 0x20
0xdca SWAP1
0xdcb SWAP3
0xdcc ADD
0xdcd SWAP2
0xdce PUSH1 0x1
0xdd0 SWAP1
0xdd1 SWAP2
0xdd2 ADD
0xdd3 SWAP1
0xdd4 PUSH2 0xd98
0xdd7 JUMP
---
0xda2: V1131 = S[S1]
0xda3: V1132 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb8: V1133 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xdb9: V1134 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1131
0xdba: V1135 = 0x1
0xdbc: V1136 = 0xa0
0xdbe: V1137 = 0x2
0xdc0: V1138 = EXP 0x2 0xa0
0xdc1: V1139 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc3: V1140 = CALLDATALOAD S2
0xdc4: V1141 = AND V1140 0xffffffffffffffffffffffffffffffffffffffff
0xdc5: V1142 = OR V1141 V1134
0xdc7: S[S1] = V1142
0xdc8: V1143 = 0x20
0xdcc: V1144 = ADD S2 0x20
0xdce: V1145 = 0x1
0xdd2: V1146 = ADD S1 0x1
0xdd4: V1147 = 0xd98
0xdd7: JUMP 0xd98
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, V1122, S2, S1, V1127]
Stack pops: 3
Stack additions: [V1144, V1146, S0]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, V1122, V1144, V1146, V1127]

================================

Block 0xdd8
[0xdd8:0xde3]
---
Predecessors: [0xd78, 0xd98]
Successors: [0xe17]
---
0xdd8 JUMPDEST
0xdd9 POP
0xdda PUSH2 0xde4
0xddd SWAP3
0xdde SWAP2
0xddf POP
0xde0 PUSH2 0xe17
0xde3 JUMP
---
0xdd8: JUMPDEST 
0xdda: V1148 = 0xde4
0xde0: V1149 = 0xe17
0xde3: JUMP 0xe17
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, V1122, S2, S1, S0]
Stack pops: 4
Stack additions: [0xde4, S3, S1]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, 0xde4, V1122, S1]

================================

Block 0xde4
[0xde4:0xde7]
---
Predecessors: [0xe00, 0xe14, 0xe1d]
Successors: [0x83c, 0x849, 0x92b, 0xe14]
---
0xde4 JUMPDEST
0xde5 POP
0xde6 SWAP1
0xde7 JUMP
---
0xde4: JUMPDEST 
0xde7: JUMP S2
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0xde8
[0xde8:0xdf9]
---
Predecessors: [0x9aa, 0xaa9]
Successors: [0x9b2, 0xab1]
---
0xde8 JUMPDEST
0xde9 PUSH1 0x20
0xdeb PUSH1 0x40
0xded MLOAD
0xdee SWAP1
0xdef DUP2
0xdf0 ADD
0xdf1 PUSH1 0x40
0xdf3 MSTORE
0xdf4 PUSH1 0x0
0xdf6 DUP2
0xdf7 MSTORE
0xdf8 SWAP1
0xdf9 JUMP
---
0xde8: JUMPDEST 
0xde9: V1150 = 0x20
0xdeb: V1151 = 0x40
0xded: V1152 = M[0x40]
0xdf0: V1153 = ADD V1152 0x20
0xdf1: V1154 = 0x40
0xdf3: M[0x40] = V1153
0xdf4: V1155 = 0x0
0xdf7: M[V1152] = 0x0
0xdf9: JUMP {0x9b2, 0xab1}
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x408, 0x43e, 0x6cc}, S1, {0x9b2, 0xab1}]
Stack pops: 1
Stack additions: [V1152]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x408, 0x43e, 0x6cc}, S1, V1152]

================================

Block 0xdfa
[0xdfa:0xdff]
---
Predecessors: [0xd62]
Successors: [0xe00]
---
0xdfa JUMPDEST
0xdfb PUSH2 0xe14
0xdfe SWAP2
0xdff SWAP1
---
0xdfa: JUMPDEST 
0xdfb: V1156 = 0xe14
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, V312, 0x4, V290, S6, {0x30f, 0x83c}, 0x4, S3, 0x8f6, V1114, V1115]
Stack pops: 2
Stack additions: [0xe14, S1, S0]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, V312, 0x4, V290, S6, {0x30f, 0x83c}, 0x4, S3, 0x8f6, 0xe14, V1114, V1115]

================================

Block 0xe00
[0xe00:0xe08]
---
Predecessors: [0xdfa, 0xe09]
Successors: [0xde4, 0xe09]
---
0xe00 JUMPDEST
0xe01 DUP1
0xe02 DUP3
0xe03 GT
0xe04 ISZERO
0xe05 PUSH2 0xde4
0xe08 JUMPI
---
0xe00: JUMPDEST 
0xe03: V1157 = GT V1114 S0
0xe04: V1158 = ISZERO V1157
0xe05: V1159 = 0xde4
0xe08: JUMPI 0xde4 V1158
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, V312, 0x4, V290, S7, {0x30f, 0x83c}, S5, S4, 0x8f6, 0xe14, V1114, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, V312, 0x4, V290, S7, {0x30f, 0x83c}, S5, S4, 0x8f6, 0xe14, V1114, S0]

================================

Block 0xe09
[0xe09:0xe13]
---
Predecessors: [0xe00]
Successors: [0xe00]
---
0xe09 PUSH1 0x0
0xe0b DUP2
0xe0c SSTORE
0xe0d PUSH1 0x1
0xe0f ADD
0xe10 PUSH2 0xe00
0xe13 JUMP
---
0xe09: V1160 = 0x0
0xe0c: S[S0] = 0x0
0xe0d: V1161 = 0x1
0xe0f: V1162 = ADD 0x1 S0
0xe10: V1163 = 0xe00
0xe13: JUMP 0xe00
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, V312, 0x4, V290, S7, {0x30f, 0x83c}, S5, S4, 0x8f6, 0xe14, V1114, S0]
Stack pops: 1
Stack additions: [V1162]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, V312, 0x4, V290, S7, {0x30f, 0x83c}, S5, S4, 0x8f6, 0xe14, V1114, V1162]

================================

Block 0xe14
[0xe14:0xe16]
---
Predecessors: [0xde4]
Successors: [0x30f, 0x83c, 0x8f6, 0xde4]
---
0xe14 JUMPDEST
0xe15 SWAP1
0xe16 JUMP
---
0xe14: JUMPDEST 
0xe16: JUMP S1
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V11, 0xa3, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V11, 0xa3, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xe17
[0xe17:0xe1c]
---
Predecessors: [0xdd8]
Successors: [0xe1d]
---
0xe17 JUMPDEST
0xe18 PUSH2 0xe14
0xe1b SWAP2
0xe1c SWAP1
---
0xe17: JUMPDEST 
0xe18: V1164 = 0xe14
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V11, 0xa3, S10, S9, S8, S7, S6, S5, {0x849, 0x92b}, 0x3, 0xde4, V1122, S0]
Stack pops: 2
Stack additions: [0xe14, S1, S0]
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V11, 0xa3, S10, S9, S8, S7, S6, S5, {0x849, 0x92b}, 0x3, 0xde4, 0xe14, V1122, S0]

================================

Block 0xe1d
[0xe1d:0xe25]
---
Predecessors: [0xe17, 0xe26]
Successors: [0xde4, 0xe26]
---
0xe1d JUMPDEST
0xe1e DUP1
0xe1f DUP3
0xe20 GT
0xe21 ISZERO
0xe22 PUSH2 0xde4
0xe25 JUMPI
---
0xe1d: JUMPDEST 
0xe20: V1165 = GT V1122 S0
0xe21: V1166 = ISZERO V1165
0xe22: V1167 = 0xde4
0xe25: JUMPI 0xde4 V1166
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, 0xde4, 0xe14, V1122, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, 0xde4, 0xe14, V1122, S0]

================================

Block 0xe26
[0xe26:0xe47]
---
Predecessors: [0xe1d]
Successors: [0xe1d]
---
0xe26 DUP1
0xe27 SLOAD
0xe28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3d NOT
0xe3e AND
0xe3f DUP2
0xe40 SSTORE
0xe41 PUSH1 0x1
0xe43 ADD
0xe44 PUSH2 0xe1d
0xe47 JUMP
---
0xe27: V1168 = S[S0]
0xe28: V1169 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3d: V1170 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe3e: V1171 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1168
0xe40: S[S0] = V1171
0xe41: V1172 = 0x1
0xe43: V1173 = ADD 0x1 S0
0xe44: V1174 = 0xe1d
0xe47: JUMP 0xe1d
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, 0xde4, 0xe14, V1122, S0]
Stack pops: 1
Stack additions: [V1173]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V11, 0xa3, S11, S10, S9, S8, S7, S6, {0x849, 0x92b}, 0x3, 0xde4, 0xe14, V1122, V1173]

================================

Block 0xe48
[0xe48:0xe73]
---
Predecessors: []
Successors: []
---
0xe48 STOP
0xe49 LOG1
0xe4a PUSH6 0x627a7a723058
0xe51 SHA3
0xe52 MISSING 0xbd
0xe53 MISSING 0xb1
0xe54 MISSING 0x21
0xe55 MISSING 0x4b
0xe56 PUSH24 0xf168edcfe29dca8fd8b1e9e0a3456a7d4e209a73c9124dd4
0xe6f MISSING 0xc4
0xe70 PC
0xe71 MISSING 0xec
0xe72 STOP
0xe73 MISSING 0x29
---
0xe48: STOP 
0xe49: LOG S0 S1 S2
0xe4a: V1175 = 0x627a7a723058
0xe51: V1176 = SHA3 0x627a7a723058 S3
0xe52: MISSING 0xbd
0xe53: MISSING 0xb1
0xe54: MISSING 0x21
0xe55: MISSING 0x4b
0xe56: V1177 = 0xf168edcfe29dca8fd8b1e9e0a3456a7d4e209a73c9124dd4
0xe6f: MISSING 0xc4
0xe70: V1178 = PC
0xe71: MISSING 0xec
0xe72: STOP 
0xe73: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1176, 0xf168edcfe29dca8fd8b1e9e0a3456a7d4e209a73c9124dd4, V1178]
Exit stack: []

================================

Function 0:
Public function signature: 0xb7b3eb7
Entry block: 0xa5
Exit block: 0xbb
Body: 0xa5, 0xac, 0xb0, 0xbb, 0x237, 0x244, 0x245

Function 1:
Public function signature: 0x22c5ec0f
Entry block: 0xd7
Exit block: 0xbb
Body: 0xbb, 0xd7, 0xde, 0xe2, 0x245, 0x25f, 0x26c

Function 2:
Public function signature: 0x3bf2b4cd
Entry block: 0xed
Exit block: 0xa3
Body: 0xa3, 0xed, 0xf4, 0xf8, 0x26d, 0x270, 0x27b, 0x292, 0x293, 0x2af, 0x2b3, 0x2bb, 0x2e1, 0x34a

Function 3:
Public function signature: 0x8d475461
Entry block: 0x100
Exit block: 0x113
Body: 0x100, 0x107, 0x10b, 0x113, 0x34d

Function 4:
Public function signature: 0x91f34dbd
Entry block: 0x125
Exit block: 0xb54
Body: 0x125, 0x12c, 0x130, 0x353, 0x36d, 0x371, 0x37e, 0x382, 0x3c3, 0x3ca, 0x3ce, 0x408, 0x824, 0x975, 0x979, 0x983, 0x98d, 0x98e, 0x9a4, 0xaa9, 0xab1, 0xac4, 0xac6, 0xae2, 0xaec, 0xaef, 0xaf9, 0xb0d, 0xb0e, 0xb20, 0xb21, 0xb54, 0xb55, 0xb8d

Function 5:
Public function signature: 0xa0175b96
Entry block: 0x17b
Exit block: 0x2e1
Body: 0x17b, 0x182, 0x186, 0x2e1, 0x663, 0x67d, 0x681, 0x68e, 0x692, 0x6cc, 0x710, 0x719, 0x72f, 0x81d, 0x824, 0x828, 0x83c

Function 6:
Public function signature: 0xd41097e3
Entry block: 0x1c4
Exit block: 0x2e1
Body: 0x1c4, 0x1cb, 0x1cf, 0x2e1, 0x858, 0x874, 0x878, 0x88a, 0x892, 0x896, 0x8a0, 0x8a8, 0x8ac, 0x8b5, 0x8b9, 0x8f2

Function 7:
Public function signature: 0xde41e1a1
Entry block: 0x1e3
Exit block: 0x849
Body: 0xa3, 0x1e3, 0x1ea, 0x1ee, 0x849, 0x8fb, 0x912, 0x916, 0x920, 0x92b, 0x95a

Function 8:
Public function signature: 0xdeff41c1
Entry block: 0x211
Exit block: 0xbb
Body: 0xbb, 0x211, 0x218, 0x21c, 0x960

Function 9:
Public function signature: 0xdf98ba00
Entry block: 0x224
Exit block: 0x113
Body: 0x113, 0x224, 0x22b, 0x22f, 0x96f

Function 10:
Public fallback function
Entry block: 0xa3
Exit block: 0xa3
Body: 0xa3

Function 11:
Private function
Entry block: 0xbac
Exit block: 0xcd0
Body: 0xbac, 0xbbb, 0xc99, 0xca8, 0xcba, 0xcd0, 0xcda, 0xd06, 0xd14

Function 12:
Private function
Entry block: 0xd54
Exit block: 0xe14
Body: 0x8f6, 0xd54, 0xd62, 0xde4, 0xdfa, 0xe00, 0xe09, 0xe14

Function 13:
Private function
Entry block: 0xd78
Exit block: 0xde4
Body: 0x2bf, 0x2ca, 0x2e2, 0x2fe, 0x30f, 0x342, 0x83c, 0x83c, 0x83c, 0x849, 0x8f6, 0xd78, 0xd92, 0xd98, 0xda1, 0xdd8, 0xde4, 0xe14, 0xe17, 0xe1d, 0xe26

Function 14:
Private function
Entry block: 0xb98
Exit block: 0xc1d
Body: 0xb98, 0xbd5, 0xbe1, 0xbe8, 0xbf7, 0xbfa, 0xc04, 0xc0b, 0xc1a, 0xc1d

Function 15:
Private function
Entry block: 0x9aa
Exit block: 0xaa2
Body: 0x9aa, 0x9b2, 0x9c5, 0x9c7, 0x9e3, 0x9ed, 0x9f0, 0x9fa, 0xa0f, 0xa2b, 0xa5f, 0xa97, 0xaa2

