Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0xd]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0xd
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd
0x9: JUMPI 0xd V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0xc]
---
Predecessors: [0x0]
Successors: [0xd]
---
0xa PUSH1 0xd
0xc JUMP
---
0xa: V5 = 0xd
0xc: JUMP 0xd
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0xf]
---
Predecessors: [0x0, 0xa]
Successors: [0x10]
---
0xd JUMPDEST
0xe PUSH1 0xbe
---
0xd: JUMPDEST 
0xe: V6 = 0xbe
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbe]
Exit stack: [0xbe]

================================

Block 0x10
[0x10:0xbb]
---
Predecessors: [0xd]
Successors: [0xbc]
---
0x10 JUMPDEST
0x11 PUSH20 0x4aa9950530c116b0bf5fcaf9c1f0e295dcc98d0c
0x26 PUSH1 0x0
0x28 PUSH1 0x0
0x2a PUSH2 0x100
0x2d EXP
0x2e DUP2
0x2f SLOAD
0x30 DUP2
0x31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46 MUL
0x47 NOT
0x48 AND
0x49 SWAP1
0x4a DUP4
0x4b MUL
0x4c OR
0x4d SWAP1
0x4e SSTORE
0x4f POP
0x50 PUSH1 0x0
0x52 PUSH1 0x0
0x54 SWAP1
0x55 SLOAD
0x56 SWAP1
0x57 PUSH2 0x100
0x5a EXP
0x5b SWAP1
0x5c DIV
0x5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72 AND
0x73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88 AND
0x89 PUSH1 0x0
0x8b ADDRESS
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 AND
0xa2 BALANCE
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 DUP1
0xa7 SWAP1
0xa8 POP
0xa9 PUSH1 0x0
0xab PUSH1 0x40
0xad MLOAD
0xae DUP1
0xaf DUP4
0xb0 SUB
0xb1 DUP2
0xb2 DUP6
0xb3 DUP9
0xb4 DUP9
0xb5 CALL
0xb6 SWAP4
0xb7 POP
0xb8 POP
0xb9 POP
0xba POP
0xbb POP
---
0x10: JUMPDEST 
0x11: V7 = 0x4aa9950530c116b0bf5fcaf9c1f0e295dcc98d0c
0x26: V8 = 0x0
0x28: V9 = 0x0
0x2a: V10 = 0x100
0x2d: V11 = EXP 0x100 0x0
0x2f: V12 = S[0x0]
0x31: V13 = 0xffffffffffffffffffffffffffffffffffffffff
0x46: V14 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x47: V15 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x48: V16 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V12
0x4b: V17 = MUL 0x4aa9950530c116b0bf5fcaf9c1f0e295dcc98d0c 0x1
0x4c: V18 = OR 0x4aa9950530c116b0bf5fcaf9c1f0e295dcc98d0c V16
0x4e: S[0x0] = V18
0x50: V19 = 0x0
0x52: V20 = 0x0
0x55: V21 = S[0x0]
0x57: V22 = 0x100
0x5a: V23 = EXP 0x100 0x0
0x5c: V24 = DIV V21 0x1
0x5d: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x72: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x73: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x88: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x89: V29 = 0x0
0x8b: V30 = ADDRESS
0x8c: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0xa2: V33 = BALANCE V32
0xa3: V34 = 0x40
0xa5: V35 = M[0x40]
0xa9: V36 = 0x0
0xab: V37 = 0x40
0xad: V38 = M[0x40]
0xb0: V39 = SUB V35 V38
0xb5: V40 = CALL 0x0 V28 V33 V38 V39 V38 0x0
---
Entry stack: [0xbe]
Stack pops: 0
Stack additions: []
Exit stack: [0xbe]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x10]
Successors: [0xbe]
---
0xbc JUMPDEST
0xbd JUMP
---
0xbc: JUMPDEST 
0xbd: JUMP 0xbe
---
Entry stack: [0xbe]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xbe
[0xbe:0xbf]
---
Predecessors: [0xbc]
Successors: []
---
0xbe JUMPDEST
0xbf STOP
---
0xbe: JUMPDEST 
0xbf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================


