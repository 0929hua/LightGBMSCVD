Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x92]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x47ba641
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x92
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x47ba641
0x3b: V13 = EQ V11 0x47ba641
0x3c: V14 = 0x92
0x3f: JUMPI 0x92 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xaa]
---
0x40 DUP1
0x41 PUSH4 0x1594060a
0x46 EQ
0x47 PUSH2 0xaa
0x4a JUMPI
---
0x41: V15 = 0x1594060a
0x46: V16 = EQ 0x1594060a V11
0x47: V17 = 0xaa
0x4a: JUMPI 0xaa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x117]
---
0x4b DUP1
0x4c PUSH4 0x25cfa566
0x51 EQ
0x52 PUSH2 0x117
0x55 JUMPI
---
0x4c: V18 = 0x25cfa566
0x51: V19 = EQ 0x25cfa566 V11
0x52: V20 = 0x117
0x55: JUMPI 0x117 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x13c]
---
0x56 DUP1
0x57 PUSH4 0x384f58eb
0x5c EQ
0x5d PUSH2 0x13c
0x60 JUMPI
---
0x57: V21 = 0x384f58eb
0x5c: V22 = EQ 0x384f58eb V11
0x5d: V23 = 0x13c
0x60: JUMPI 0x13c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x16b]
---
0x61 DUP1
0x62 PUSH4 0x5b6b431d
0x67 EQ
0x68 PUSH2 0x16b
0x6b JUMPI
---
0x62: V24 = 0x5b6b431d
0x67: V25 = EQ 0x5b6b431d V11
0x68: V26 = 0x16b
0x6b: JUMPI 0x16b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x181]
---
0x6c DUP1
0x6d PUSH4 0x9cccb272
0x72 EQ
0x73 PUSH2 0x181
0x76 JUMPI
---
0x6d: V27 = 0x9cccb272
0x72: V28 = EQ 0x9cccb272 V11
0x73: V29 = 0x181
0x76: JUMPI 0x181 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x24d]
---
0x77 DUP1
0x78 PUSH4 0xcfaaa266
0x7d EQ
0x7e PUSH2 0x24d
0x81 JUMPI
---
0x78: V30 = 0xcfaaa266
0x7d: V31 = EQ 0xcfaaa266 V11
0x7e: V32 = 0x24d
0x81: JUMPI 0x24d V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x26c]
---
0x82 DUP1
0x83 PUSH4 0xf0bf1aea
0x88 EQ
0x89 PUSH2 0x26c
0x8c JUMPI
---
0x83: V33 = 0xf0bf1aea
0x88: V34 = EQ 0xf0bf1aea V11
0x89: V35 = 0x26c
0x8c: JUMPI 0x26c V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x91]
---
Predecessors: [0x0, 0x82]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x0
0x90 DUP1
0x91 REVERT
---
0x8d: JUMPDEST 
0x8e: V36 = 0x0
0x91: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x98]
---
Predecessors: [0xd]
Successors: [0x99, 0x9d]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x92: JUMPDEST 
0x93: V37 = CALLVALUE
0x94: V38 = ISZERO V37
0x95: V39 = 0x9d
0x98: JUMPI 0x9d V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x92]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V40 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa7]
---
Predecessors: [0x92]
Successors: [0x284]
---
0x9d JUMPDEST
0x9e PUSH2 0xa8
0xa1 PUSH1 0x4
0xa3 CALLDATALOAD
0xa4 PUSH2 0x284
0xa7 JUMP
---
0x9d: JUMPDEST 
0x9e: V41 = 0xa8
0xa1: V42 = 0x4
0xa3: V43 = CALLDATALOAD 0x4
0xa4: V44 = 0x284
0xa7: JUMP 0x284
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8, V43]
Exit stack: [V11, 0xa8, V43]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x2ad, 0x39d, 0x484, 0x4bd, 0x50b]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S0]

================================

Block 0xaa
[0xaa:0xb0]
---
Predecessors: [0x40]
Successors: [0xb1, 0xb5]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xaa: JUMPDEST 
0xab: V45 = CALLVALUE
0xac: V46 = ISZERO V45
0xad: V47 = 0xb5
0xb0: JUMPI 0xb5 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xaa]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V48 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0xaa]
Successors: [0x2b2]
---
0xb5 JUMPDEST
0xb6 PUSH2 0xbd
0xb9 PUSH2 0x2b2
0xbc JUMP
---
0xb5: JUMPDEST 
0xb6: V49 = 0xbd
0xb9: V50 = 0x2b2
0xbc: JUMP 0x2b2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbd]
Exit stack: [V11, 0xbd]

================================

Block 0xbd
[0xbd:0xe9]
---
Predecessors: [0x30c]
Successors: [0xea]
---
0xbd JUMPDEST
0xbe PUSH1 0x40
0xc0 MLOAD
0xc1 DUP3
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x40
0xc6 PUSH1 0x20
0xc8 DUP3
0xc9 ADD
0xca DUP2
0xcb DUP2
0xcc MSTORE
0xcd SWAP1
0xce DUP3
0xcf ADD
0xd0 DUP4
0xd1 DUP2
0xd2 DUP2
0xd3 MLOAD
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP2
0xda POP
0xdb DUP1
0xdc MLOAD
0xdd SWAP1
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP1
0xe2 PUSH1 0x20
0xe4 MUL
0xe5 DUP1
0xe6 DUP4
0xe7 DUP4
0xe8 PUSH1 0x0
---
0xbd: JUMPDEST 
0xbe: V51 = 0x40
0xc0: V52 = M[0x40]
0xc3: M[V52] = V232
0xc4: V53 = 0x40
0xc6: V54 = 0x20
0xc9: V55 = ADD V52 0x20
0xcc: M[V55] = 0x40
0xcf: V56 = ADD V52 0x40
0xd3: V57 = M[V240]
0xd5: M[V56] = V57
0xd6: V58 = 0x20
0xd8: V59 = ADD 0x20 V56
0xdc: V60 = M[V240]
0xde: V61 = 0x20
0xe0: V62 = ADD 0x20 V240
0xe2: V63 = 0x20
0xe4: V64 = MUL 0x20 V60
0xe8: V65 = 0x0
---
Entry stack: [V11, V232, V240]
Stack pops: 2
Stack additions: [S1, S0, V52, V55, V59, V62, V64, V64, V59, V62, 0x0]
Exit stack: [V11, V232, V240, V52, V55, V59, V62, V64, V64, V59, V62, 0x0]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xbd, 0xf3]
Successors: [0xf3, 0x102]
---
0xea JUMPDEST
0xeb DUP4
0xec DUP2
0xed LT
0xee ISZERO
0xef PUSH2 0x102
0xf2 JUMPI
---
0xea: JUMPDEST 
0xed: V66 = LT S0 V64
0xee: V67 = ISZERO V66
0xef: V68 = 0x102
0xf2: JUMPI 0x102 V67
---
Entry stack: [V11, V232, V240, V52, V55, V59, V62, V64, V64, V59, V62, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V232, V240, V52, V55, V59, V62, V64, V64, V59, V62, S0]

================================

Block 0xf3
[0xf3:0x101]
---
Predecessors: [0xea]
Successors: [0xea]
---
0xf3 DUP1
0xf4 DUP3
0xf5 ADD
0xf6 MLOAD
0xf7 DUP4
0xf8 DUP3
0xf9 ADD
0xfa MSTORE
0xfb PUSH1 0x20
0xfd ADD
0xfe PUSH2 0xea
0x101 JUMP
---
0xf5: V69 = ADD V62 S0
0xf6: V70 = M[V69]
0xf9: V71 = ADD S0 V59
0xfa: M[V71] = V70
0xfb: V72 = 0x20
0xfd: V73 = ADD 0x20 S0
0xfe: V74 = 0xea
0x101: JUMP 0xea
---
Entry stack: [V11, V232, V240, V52, V55, V59, V62, V64, V64, V59, V62, S0]
Stack pops: 3
Stack additions: [S2, S1, V73]
Exit stack: [V11, V232, V240, V52, V55, V59, V62, V64, V64, V59, V62, V73]

================================

Block 0x102
[0x102:0x116]
---
Predecessors: [0xea]
Successors: []
---
0x102 JUMPDEST
0x103 POP
0x104 POP
0x105 POP
0x106 POP
0x107 SWAP1
0x108 POP
0x109 ADD
0x10a SWAP4
0x10b POP
0x10c POP
0x10d POP
0x10e POP
0x10f PUSH1 0x40
0x111 MLOAD
0x112 DUP1
0x113 SWAP2
0x114 SUB
0x115 SWAP1
0x116 RETURN
---
0x102: JUMPDEST 
0x109: V75 = ADD V64 V59
0x10f: V76 = 0x40
0x111: V77 = M[0x40]
0x114: V78 = SUB V75 V77
0x116: RETURN V77 V78
---
Entry stack: [V11, V232, V240, V52, V55, V59, V62, V64, V64, V59, V62, S0]
Stack pops: 11
Stack additions: []
Exit stack: [V11]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x4b]
Successors: [0x11e, 0x122]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V79 = CALLVALUE
0x119: V80 = ISZERO V79
0x11a: V81 = 0x122
0x11d: JUMPI 0x122 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x117]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V82 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x117]
Successors: [0x31b]
---
0x122 JUMPDEST
0x123 PUSH2 0x12a
0x126 PUSH2 0x31b
0x129 JUMP
---
0x122: JUMPDEST 
0x123: V83 = 0x12a
0x126: V84 = 0x31b
0x129: JUMP 0x31b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V11, 0x12a]

================================

Block 0x12a
[0x12a:0x13b]
---
Predecessors: [0x31b]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e SWAP1
0x12f DUP2
0x130 MSTORE
0x131 PUSH1 0x20
0x133 ADD
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 SWAP2
0x139 SUB
0x13a SWAP1
0x13b RETURN
---
0x12a: JUMPDEST 
0x12b: V85 = 0x40
0x12d: V86 = M[0x40]
0x130: M[V86] = V263
0x131: V87 = 0x20
0x133: V88 = ADD 0x20 V86
0x134: V89 = 0x40
0x136: V90 = M[0x40]
0x139: V91 = SUB V88 V90
0x13b: RETURN V90 V91
---
Entry stack: [V11, V263]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x13c
[0x13c:0x142]
---
Predecessors: [0x56]
Successors: [0x143, 0x147]
---
0x13c JUMPDEST
0x13d CALLVALUE
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x13c: JUMPDEST 
0x13d: V92 = CALLVALUE
0x13e: V93 = ISZERO V92
0x13f: V94 = 0x147
0x142: JUMPI 0x147 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x13c]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V95 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x13c]
Successors: [0x321]
---
0x147 JUMPDEST
0x148 PUSH2 0x14f
0x14b PUSH2 0x321
0x14e JUMP
---
0x147: JUMPDEST 
0x148: V96 = 0x14f
0x14b: V97 = 0x321
0x14e: JUMP 0x321
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14f]
Exit stack: [V11, 0x14f]

================================

Block 0x14f
[0x14f:0x16a]
---
Predecessors: [0x321]
Successors: []
---
0x14f JUMPDEST
0x150 PUSH1 0x40
0x152 MLOAD
0x153 PUSH1 0x1
0x155 PUSH1 0xa0
0x157 PUSH1 0x2
0x159 EXP
0x15a SUB
0x15b SWAP1
0x15c SWAP2
0x15d AND
0x15e DUP2
0x15f MSTORE
0x160 PUSH1 0x20
0x162 ADD
0x163 PUSH1 0x40
0x165 MLOAD
0x166 DUP1
0x167 SWAP2
0x168 SUB
0x169 SWAP1
0x16a RETURN
---
0x14f: JUMPDEST 
0x150: V98 = 0x40
0x152: V99 = M[0x40]
0x153: V100 = 0x1
0x155: V101 = 0xa0
0x157: V102 = 0x2
0x159: V103 = EXP 0x2 0xa0
0x15a: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V105 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x15f: M[V99] = V105
0x160: V106 = 0x20
0x162: V107 = ADD 0x20 V99
0x163: V108 = 0x40
0x165: V109 = M[0x40]
0x168: V110 = SUB V107 V109
0x16a: RETURN V109 V110
---
Entry stack: [V11, 0x14f, V271]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14f]

================================

Block 0x16b
[0x16b:0x171]
---
Predecessors: [0x61]
Successors: [0x172, 0x176]
---
0x16b JUMPDEST
0x16c CALLVALUE
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x16b: JUMPDEST 
0x16c: V111 = CALLVALUE
0x16d: V112 = ISZERO V111
0x16e: V113 = 0x176
0x171: JUMPI 0x176 V112
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x16b]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V114 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x176
[0x176:0x180]
---
Predecessors: [0x16b]
Successors: [0x330]
---
0x176 JUMPDEST
0x177 PUSH2 0xa8
0x17a PUSH1 0x4
0x17c CALLDATALOAD
0x17d PUSH2 0x330
0x180 JUMP
---
0x176: JUMPDEST 
0x177: V115 = 0xa8
0x17a: V116 = 0x4
0x17c: V117 = CALLDATALOAD 0x4
0x17d: V118 = 0x330
0x180: JUMP 0x330
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8, V117]
Exit stack: [V11, 0xa8, V117]

================================

Block 0x181
[0x181:0x24c]
---
Predecessors: [0x6c]
Successors: [0x3a0]
---
0x181 JUMPDEST
0x182 PUSH2 0xa8
0x185 PUSH1 0x4
0x187 DUP1
0x188 CALLDATALOAD
0x189 PUSH1 0xff
0x18b AND
0x18c SWAP1
0x18d PUSH1 0x44
0x18f PUSH1 0x24
0x191 DUP1
0x192 CALLDATALOAD
0x193 SWAP1
0x194 DUP2
0x195 ADD
0x196 SWAP1
0x197 DUP4
0x198 ADD
0x199 CALLDATALOAD
0x19a DUP1
0x19b PUSH1 0x20
0x19d DUP1
0x19e DUP3
0x19f MUL
0x1a0 ADD
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 SWAP1
0x1a5 DUP2
0x1a6 ADD
0x1a7 PUSH1 0x40
0x1a9 MSTORE
0x1aa DUP1
0x1ab SWAP4
0x1ac SWAP3
0x1ad SWAP2
0x1ae SWAP1
0x1af DUP2
0x1b0 DUP2
0x1b1 MSTORE
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 DUP4
0x1b6 DUP4
0x1b7 PUSH1 0x20
0x1b9 MUL
0x1ba DUP1
0x1bb DUP3
0x1bc DUP5
0x1bd CALLDATACOPY
0x1be DUP3
0x1bf ADD
0x1c0 SWAP2
0x1c1 POP
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 SWAP2
0x1c8 SWAP1
0x1c9 DUP1
0x1ca CALLDATALOAD
0x1cb SWAP1
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf SWAP1
0x1d0 DUP3
0x1d1 ADD
0x1d2 DUP1
0x1d3 CALLDATALOAD
0x1d4 SWAP1
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP1
0x1d9 DUP1
0x1da DUP1
0x1db PUSH1 0x20
0x1dd MUL
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 SWAP1
0x1e5 DUP2
0x1e6 ADD
0x1e7 PUSH1 0x40
0x1e9 MSTORE
0x1ea DUP1
0x1eb SWAP4
0x1ec SWAP3
0x1ed SWAP2
0x1ee SWAP1
0x1ef DUP2
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 DUP4
0x1f6 DUP4
0x1f7 PUSH1 0x20
0x1f9 MUL
0x1fa DUP1
0x1fb DUP3
0x1fc DUP5
0x1fd CALLDATACOPY
0x1fe DUP3
0x1ff ADD
0x200 SWAP2
0x201 POP
0x202 POP
0x203 POP
0x204 POP
0x205 POP
0x206 POP
0x207 SWAP2
0x208 SWAP1
0x209 DUP1
0x20a CALLDATALOAD
0x20b SWAP1
0x20c PUSH1 0x20
0x20e ADD
0x20f SWAP1
0x210 DUP3
0x211 ADD
0x212 DUP1
0x213 CALLDATALOAD
0x214 SWAP1
0x215 PUSH1 0x20
0x217 ADD
0x218 SWAP1
0x219 DUP1
0x21a DUP1
0x21b PUSH1 0x20
0x21d MUL
0x21e PUSH1 0x20
0x220 ADD
0x221 PUSH1 0x40
0x223 MLOAD
0x224 SWAP1
0x225 DUP2
0x226 ADD
0x227 PUSH1 0x40
0x229 MSTORE
0x22a DUP1
0x22b SWAP4
0x22c SWAP3
0x22d SWAP2
0x22e SWAP1
0x22f DUP2
0x230 DUP2
0x231 MSTORE
0x232 PUSH1 0x20
0x234 ADD
0x235 DUP4
0x236 DUP4
0x237 PUSH1 0x20
0x239 MUL
0x23a DUP1
0x23b DUP3
0x23c DUP5
0x23d CALLDATACOPY
0x23e POP
0x23f SWAP5
0x240 SWAP7
0x241 POP
0x242 PUSH2 0x3a0
0x245 SWAP6
0x246 POP
0x247 POP
0x248 POP
0x249 POP
0x24a POP
0x24b POP
0x24c JUMP
---
0x181: JUMPDEST 
0x182: V119 = 0xa8
0x185: V120 = 0x4
0x188: V121 = CALLDATALOAD 0x4
0x189: V122 = 0xff
0x18b: V123 = AND 0xff V121
0x18d: V124 = 0x44
0x18f: V125 = 0x24
0x192: V126 = CALLDATALOAD 0x24
0x195: V127 = ADD V126 0x24
0x198: V128 = ADD 0x4 V126
0x199: V129 = CALLDATALOAD V128
0x19b: V130 = 0x20
0x19f: V131 = MUL V129 0x20
0x1a0: V132 = ADD V131 0x20
0x1a1: V133 = 0x40
0x1a3: V134 = M[0x40]
0x1a6: V135 = ADD V134 V132
0x1a7: V136 = 0x40
0x1a9: M[0x40] = V135
0x1b1: M[V134] = V129
0x1b2: V137 = 0x20
0x1b4: V138 = ADD 0x20 V134
0x1b7: V139 = 0x20
0x1b9: V140 = MUL 0x20 V129
0x1bd: CALLDATACOPY V138 V127 V140
0x1bf: V141 = ADD V138 V140
0x1ca: V142 = CALLDATALOAD 0x44
0x1cc: V143 = 0x20
0x1ce: V144 = ADD 0x20 0x44
0x1d1: V145 = ADD 0x4 V142
0x1d3: V146 = CALLDATALOAD V145
0x1d5: V147 = 0x20
0x1d7: V148 = ADD 0x20 V145
0x1db: V149 = 0x20
0x1dd: V150 = MUL 0x20 V146
0x1de: V151 = 0x20
0x1e0: V152 = ADD 0x20 V150
0x1e1: V153 = 0x40
0x1e3: V154 = M[0x40]
0x1e6: V155 = ADD V154 V152
0x1e7: V156 = 0x40
0x1e9: M[0x40] = V155
0x1f1: M[V154] = V146
0x1f2: V157 = 0x20
0x1f4: V158 = ADD 0x20 V154
0x1f7: V159 = 0x20
0x1f9: V160 = MUL 0x20 V146
0x1fd: CALLDATACOPY V158 V148 V160
0x1ff: V161 = ADD V158 V160
0x20a: V162 = CALLDATALOAD 0x64
0x20c: V163 = 0x20
0x20e: V164 = ADD 0x20 0x64
0x211: V165 = ADD 0x4 V162
0x213: V166 = CALLDATALOAD V165
0x215: V167 = 0x20
0x217: V168 = ADD 0x20 V165
0x21b: V169 = 0x20
0x21d: V170 = MUL 0x20 V166
0x21e: V171 = 0x20
0x220: V172 = ADD 0x20 V170
0x221: V173 = 0x40
0x223: V174 = M[0x40]
0x226: V175 = ADD V174 V172
0x227: V176 = 0x40
0x229: M[0x40] = V175
0x231: M[V174] = V166
0x232: V177 = 0x20
0x234: V178 = ADD 0x20 V174
0x237: V179 = 0x20
0x239: V180 = MUL 0x20 V166
0x23d: CALLDATACOPY V178 V168 V180
0x242: V181 = 0x3a0
0x24c: JUMP 0x3a0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8, V123, V134, V154, V174]
Exit stack: [V11, 0xa8, V123, V134, V154, V174]

================================

Block 0x24d
[0x24d:0x253]
---
Predecessors: [0x77]
Successors: [0x254, 0x258]
---
0x24d JUMPDEST
0x24e CALLVALUE
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x24d: JUMPDEST 
0x24e: V182 = CALLVALUE
0x24f: V183 = ISZERO V182
0x250: V184 = 0x258
0x253: JUMPI 0x258 V183
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x24d]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V185 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x258
[0x258:0x26b]
---
Predecessors: [0x24d]
Successors: [0x48d]
---
0x258 JUMPDEST
0x259 PUSH2 0xa8
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 PUSH1 0x4
0x266 CALLDATALOAD
0x267 AND
0x268 PUSH2 0x48d
0x26b JUMP
---
0x258: JUMPDEST 
0x259: V186 = 0xa8
0x25c: V187 = 0x1
0x25e: V188 = 0xa0
0x260: V189 = 0x2
0x262: V190 = EXP 0x2 0xa0
0x263: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V192 = 0x4
0x266: V193 = CALLDATALOAD 0x4
0x267: V194 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x268: V195 = 0x48d
0x26b: JUMP 0x48d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8, V194]
Exit stack: [V11, 0xa8, V194]

================================

Block 0x26c
[0x26c:0x283]
---
Predecessors: [0x82]
Successors: [0x4ec]
---
0x26c JUMPDEST
0x26d PUSH2 0xa8
0x270 PUSH1 0x4
0x272 CALLDATALOAD
0x273 PUSH1 0x1
0x275 PUSH1 0xe8
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b NOT
0x27c PUSH1 0x24
0x27e CALLDATALOAD
0x27f AND
0x280 PUSH2 0x4ec
0x283 JUMP
---
0x26c: JUMPDEST 
0x26d: V196 = 0xa8
0x270: V197 = 0x4
0x272: V198 = CALLDATALOAD 0x4
0x273: V199 = 0x1
0x275: V200 = 0xe8
0x277: V201 = 0x2
0x279: V202 = EXP 0x2 0xe8
0x27a: V203 = SUB 0x10000000000000000000000000000000000000000000000000000000000 0x1
0x27b: V204 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x27c: V205 = 0x24
0x27e: V206 = CALLDATALOAD 0x24
0x27f: V207 = AND V206 0xffffff0000000000000000000000000000000000000000000000000000000000
0x280: V208 = 0x4ec
0x283: JUMP 0x4ec
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8, V198, V207]
Exit stack: [V11, 0xa8, V198, V207]

================================

Block 0x284
[0x284:0x29a]
---
Predecessors: [0x9d]
Successors: [0x29b, 0x29f]
---
0x284 JUMPDEST
0x285 PUSH1 0x0
0x287 SLOAD
0x288 CALLER
0x289 PUSH1 0x1
0x28b PUSH1 0xa0
0x28d PUSH1 0x2
0x28f EXP
0x290 SUB
0x291 SWAP1
0x292 DUP2
0x293 AND
0x294 SWAP2
0x295 AND
0x296 EQ
0x297 PUSH2 0x29f
0x29a JUMPI
---
0x284: JUMPDEST 
0x285: V209 = 0x0
0x287: V210 = S[0x0]
0x288: V211 = CALLER
0x289: V212 = 0x1
0x28b: V213 = 0xa0
0x28d: V214 = 0x2
0x28f: V215 = EXP 0x2 0xa0
0x290: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x293: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x295: V218 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x296: V219 = EQ V218 V217
0x297: V220 = 0x29f
0x29a: JUMPI 0x29f V219
---
Entry stack: [V11, 0xa8, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V43]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x284]
Successors: []
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
---
0x29b: V221 = 0x0
0x29e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V43]

================================

Block 0x29f
[0x29f:0x2a8]
---
Predecessors: [0x284]
Successors: [0x2a9, 0x2ad]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x5
0x2a2 SLOAD
0x2a3 DUP2
0x2a4 LT
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V222 = 0x5
0x2a2: V223 = S[0x5]
0x2a4: V224 = LT V43 V223
0x2a5: V225 = 0x2ad
0x2a8: JUMPI 0x2ad V224
---
Entry stack: [V11, 0xa8, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa8, V43]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x29f]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V226 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V43]

================================

Block 0x2ad
[0x2ad:0x2b1]
---
Predecessors: [0x29f]
Successors: [0xa8]
---
0x2ad JUMPDEST
0x2ae PUSH1 0x5
0x2b0 SSTORE
0x2b1 JUMP
---
0x2ad: JUMPDEST 
0x2ae: V227 = 0x5
0x2b0: S[0x5] = V43
0x2b1: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b2
[0x2b2:0x2bb]
---
Predecessors: [0xb5]
Successors: [0x8c5]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x0
0x2b5 PUSH2 0x2bc
0x2b8 PUSH2 0x8c5
0x2bb JUMP
---
0x2b2: JUMPDEST 
0x2b3: V228 = 0x0
0x2b5: V229 = 0x2bc
0x2b8: V230 = 0x8c5
0x2bb: JUMP 0x8c5
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: [0x0, 0x2bc]
Exit stack: [V11, 0xbd, 0x0, 0x2bc]

================================

Block 0x2bc
[0x2bc:0x2e7]
---
Predecessors: [0x8c5]
Successors: [0x2e8, 0x30c]
---
0x2bc JUMPDEST
0x2bd PUSH1 0x1
0x2bf SLOAD
0x2c0 PUSH1 0x4
0x2c2 DUP1
0x2c3 DUP1
0x2c4 SLOAD
0x2c5 DUP1
0x2c6 PUSH1 0x20
0x2c8 MUL
0x2c9 PUSH1 0x20
0x2cb ADD
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf SWAP1
0x2d0 DUP2
0x2d1 ADD
0x2d2 PUSH1 0x40
0x2d4 MSTORE
0x2d5 DUP1
0x2d6 SWAP3
0x2d7 SWAP2
0x2d8 SWAP1
0x2d9 DUP2
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df DUP3
0x2e0 DUP1
0x2e1 SLOAD
0x2e2 DUP1
0x2e3 ISZERO
0x2e4 PUSH2 0x30c
0x2e7 JUMPI
---
0x2bc: JUMPDEST 
0x2bd: V231 = 0x1
0x2bf: V232 = S[0x1]
0x2c0: V233 = 0x4
0x2c4: V234 = S[0x4]
0x2c6: V235 = 0x20
0x2c8: V236 = MUL 0x20 V234
0x2c9: V237 = 0x20
0x2cb: V238 = ADD 0x20 V236
0x2cc: V239 = 0x40
0x2ce: V240 = M[0x40]
0x2d1: V241 = ADD V240 V238
0x2d2: V242 = 0x40
0x2d4: M[0x40] = V241
0x2db: M[V240] = V234
0x2dc: V243 = 0x20
0x2de: V244 = ADD 0x20 V240
0x2e1: V245 = S[0x4]
0x2e3: V246 = ISZERO V245
0x2e4: V247 = 0x30c
0x2e7: JUMPI 0x30c V246
---
Entry stack: [V11, 0xbd, 0x0, V771]
Stack pops: 0
Stack additions: [V232, 0x4, V240, 0x4, V234, V244, 0x4, V245]
Exit stack: [V11, 0xbd, 0x0, V771, V232, 0x4, V240, 0x4, V234, V244, 0x4, V245]

================================

Block 0x2e8
[0x2e8:0x2f7]
---
Predecessors: [0x2bc]
Successors: [0x2f8]
---
0x2e8 PUSH1 0x20
0x2ea MUL
0x2eb DUP3
0x2ec ADD
0x2ed SWAP2
0x2ee SWAP1
0x2ef PUSH1 0x0
0x2f1 MSTORE
0x2f2 PUSH1 0x20
0x2f4 PUSH1 0x0
0x2f6 SHA3
0x2f7 SWAP1
---
0x2e8: V248 = 0x20
0x2ea: V249 = MUL 0x20 V245
0x2ec: V250 = ADD V244 V249
0x2ef: V251 = 0x0
0x2f1: M[0x0] = 0x4
0x2f2: V252 = 0x20
0x2f4: V253 = 0x0
0x2f6: V254 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xbd, 0x0, V771, V232, 0x4, V240, 0x4, V234, V244, 0x4, V245]
Stack pops: 3
Stack additions: [V250, V254, S2]
Exit stack: [V11, 0xbd, 0x0, V771, V232, 0x4, V240, 0x4, V234, V250, V254, V244]

================================

Block 0x2f8
[0x2f8:0x30b]
---
Predecessors: [0x2e8, 0x2f8]
Successors: [0x2f8, 0x30c]
---
0x2f8 JUMPDEST
0x2f9 DUP2
0x2fa SLOAD
0x2fb DUP2
0x2fc MSTORE
0x2fd PUSH1 0x20
0x2ff ADD
0x300 SWAP1
0x301 PUSH1 0x1
0x303 ADD
0x304 SWAP1
0x305 DUP1
0x306 DUP4
0x307 GT
0x308 PUSH2 0x2f8
0x30b JUMPI
---
0x2f8: JUMPDEST 
0x2fa: V255 = S[S1]
0x2fc: M[S0] = V255
0x2fd: V256 = 0x20
0x2ff: V257 = ADD 0x20 S0
0x301: V258 = 0x1
0x303: V259 = ADD 0x1 S1
0x307: V260 = GT V250 V257
0x308: V261 = 0x2f8
0x30b: JUMPI 0x2f8 V260
---
Entry stack: [V11, 0xbd, 0x0, V771, V232, 0x4, V240, 0x4, V234, V250, S1, S0]
Stack pops: 3
Stack additions: [S2, V259, V257]
Exit stack: [V11, 0xbd, 0x0, V771, V232, 0x4, V240, 0x4, V234, V250, V259, V257]

================================

Block 0x30c
[0x30c:0x31a]
---
Predecessors: [0x2bc, 0x2f8]
Successors: [0xbd]
---
0x30c JUMPDEST
0x30d POP
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 SWAP1
0x313 POP
0x314 SWAP2
0x315 POP
0x316 SWAP2
0x317 POP
0x318 SWAP1
0x319 SWAP2
0x31a JUMP
---
0x30c: JUMPDEST 
0x31a: JUMP 0xbd
---
Entry stack: [V11, 0xbd, 0x0, V771, V232, 0x4, V240, 0x4, V234, S2, S1, S0]
Stack pops: 11
Stack additions: [S7, S5]
Exit stack: [V11, V232, V240]

================================

Block 0x31b
[0x31b:0x320]
---
Predecessors: [0x122]
Successors: [0x12a]
---
0x31b JUMPDEST
0x31c PUSH1 0x5
0x31e SLOAD
0x31f SWAP1
0x320 JUMP
---
0x31b: JUMPDEST 
0x31c: V262 = 0x5
0x31e: V263 = S[0x5]
0x320: JUMP 0x12a
---
Entry stack: [V11, 0x12a]
Stack pops: 1
Stack additions: [V263]
Exit stack: [V11, V263]

================================

Block 0x321
[0x321:0x32f]
---
Predecessors: [0x147]
Successors: [0x14f]
---
0x321 JUMPDEST
0x322 PUSH1 0x0
0x324 SLOAD
0x325 PUSH1 0x1
0x327 PUSH1 0xa0
0x329 PUSH1 0x2
0x32b EXP
0x32c SUB
0x32d AND
0x32e DUP2
0x32f JUMP
---
0x321: JUMPDEST 
0x322: V264 = 0x0
0x324: V265 = S[0x0]
0x325: V266 = 0x1
0x327: V267 = 0xa0
0x329: V268 = 0x2
0x32b: V269 = EXP 0x2 0xa0
0x32c: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x32f: JUMP 0x14f
---
Entry stack: [V11, 0x14f]
Stack pops: 1
Stack additions: [S0, V271]
Exit stack: [V11, 0x14f, V271]

================================

Block 0x330
[0x330:0x346]
---
Predecessors: [0x176]
Successors: [0x347, 0x34b]
---
0x330 JUMPDEST
0x331 PUSH1 0x0
0x333 SLOAD
0x334 CALLER
0x335 PUSH1 0x1
0x337 PUSH1 0xa0
0x339 PUSH1 0x2
0x33b EXP
0x33c SUB
0x33d SWAP1
0x33e DUP2
0x33f AND
0x340 SWAP2
0x341 AND
0x342 EQ
0x343 PUSH2 0x34b
0x346 JUMPI
---
0x330: JUMPDEST 
0x331: V272 = 0x0
0x333: V273 = S[0x0]
0x334: V274 = CALLER
0x335: V275 = 0x1
0x337: V276 = 0xa0
0x339: V277 = 0x2
0x33b: V278 = EXP 0x2 0xa0
0x33c: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33f: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x341: V281 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x342: V282 = EQ V281 V280
0x343: V283 = 0x34b
0x346: JUMPI 0x34b V282
---
Entry stack: [V11, 0xa8, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V117]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x330]
Successors: []
---
0x347 PUSH1 0x0
0x349 DUP1
0x34a REVERT
---
0x347: V284 = 0x0
0x34a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V117]

================================

Block 0x34b
[0x34b:0x35d]
---
Predecessors: [0x330]
Successors: [0x35e, 0x36a]
---
0x34b JUMPDEST
0x34c ADDRESS
0x34d PUSH1 0x1
0x34f PUSH1 0xa0
0x351 PUSH1 0x2
0x353 EXP
0x354 SUB
0x355 AND
0x356 BALANCE
0x357 DUP2
0x358 GT
0x359 ISZERO
0x35a PUSH2 0x36a
0x35d JUMPI
---
0x34b: JUMPDEST 
0x34c: V285 = ADDRESS
0x34d: V286 = 0x1
0x34f: V287 = 0xa0
0x351: V288 = 0x2
0x353: V289 = EXP 0x2 0xa0
0x354: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x356: V292 = BALANCE V291
0x358: V293 = GT V117 V292
0x359: V294 = ISZERO V293
0x35a: V295 = 0x36a
0x35d: JUMPI 0x36a V294
---
Entry stack: [V11, 0xa8, V117]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa8, V117]

================================

Block 0x35e
[0x35e:0x369]
---
Predecessors: [0x34b]
Successors: [0x36a]
---
0x35e POP
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 ADDRESS
0x368 AND
0x369 BALANCE
---
0x35f: V296 = 0x1
0x361: V297 = 0xa0
0x363: V298 = 0x2
0x365: V299 = EXP 0x2 0xa0
0x366: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V301 = ADDRESS
0x368: V302 = AND V301 0xffffffffffffffffffffffffffffffffffffffff
0x369: V303 = BALANCE V302
---
Entry stack: [V11, 0xa8, V117]
Stack pops: 1
Stack additions: [V303]
Exit stack: [V11, 0xa8, V303]

================================

Block 0x36a
[0x36a:0x398]
---
Predecessors: [0x34b, 0x35e]
Successors: [0x399, 0x39d]
---
0x36a JUMPDEST
0x36b PUSH1 0x0
0x36d SLOAD
0x36e PUSH1 0x1
0x370 PUSH1 0xa0
0x372 PUSH1 0x2
0x374 EXP
0x375 SUB
0x376 AND
0x377 DUP2
0x378 ISZERO
0x379 PUSH2 0x8fc
0x37c MUL
0x37d DUP3
0x37e PUSH1 0x40
0x380 MLOAD
0x381 PUSH1 0x0
0x383 PUSH1 0x40
0x385 MLOAD
0x386 DUP1
0x387 DUP4
0x388 SUB
0x389 DUP2
0x38a DUP6
0x38b DUP9
0x38c DUP9
0x38d CALL
0x38e SWAP4
0x38f POP
0x390 POP
0x391 POP
0x392 POP
0x393 ISZERO
0x394 ISZERO
0x395 PUSH2 0x39d
0x398 JUMPI
---
0x36a: JUMPDEST 
0x36b: V304 = 0x0
0x36d: V305 = S[0x0]
0x36e: V306 = 0x1
0x370: V307 = 0xa0
0x372: V308 = 0x2
0x374: V309 = EXP 0x2 0xa0
0x375: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x376: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x378: V312 = ISZERO S0
0x379: V313 = 0x8fc
0x37c: V314 = MUL 0x8fc V312
0x37e: V315 = 0x40
0x380: V316 = M[0x40]
0x381: V317 = 0x0
0x383: V318 = 0x40
0x385: V319 = M[0x40]
0x388: V320 = SUB V316 V319
0x38d: V321 = CALL V314 V311 S0 V319 V320 V319 0x0
0x393: V322 = ISZERO V321
0x394: V323 = ISZERO V322
0x395: V324 = 0x39d
0x398: JUMPI 0x39d V323
---
Entry stack: [V11, 0xa8, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa8, S0]

================================

Block 0x399
[0x399:0x39c]
---
Predecessors: [0x36a]
Successors: []
---
0x399 PUSH1 0x0
0x39b DUP1
0x39c REVERT
---
0x399: V325 = 0x0
0x39c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, S0]

================================

Block 0x39d
[0x39d:0x39f]
---
Predecessors: [0x36a]
Successors: [0xa8]
---
0x39d JUMPDEST
0x39e POP
0x39f JUMP
---
0x39d: JUMPDEST 
0x39f: JUMP 0xa8
---
Entry stack: [V11, 0xa8, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a0
[0x3a0:0x3ab]
---
Predecessors: [0x181]
Successors: [0x50f]
---
0x3a0 JUMPDEST
0x3a1 CALLVALUE
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 PUSH2 0x3ac
0x3a8 PUSH2 0x50f
0x3ab JUMP
---
0x3a0: JUMPDEST 
0x3a1: V326 = CALLVALUE
0x3a2: V327 = 0x0
0x3a5: V328 = 0x3ac
0x3a8: V329 = 0x50f
0x3ab: JUMP 0x50f
---
Entry stack: [V11, 0xa8, V123, V134, V154, V174]
Stack pops: 0
Stack additions: [V326, 0x0, 0x0, 0x3ac]
Exit stack: [V11, 0xa8, V123, V134, V154, V174, V326, 0x0, 0x0, 0x3ac]

================================

Block 0x3ac
[0x3ac:0x3b2]
---
Predecessors: [0x60e]
Successors: [0x3b3]
---
0x3ac JUMPDEST
0x3ad SWAP2
0x3ae POP
0x3af PUSH1 0x0
0x3b1 SWAP1
0x3b2 POP
---
0x3ac: JUMPDEST 
0x3af: V330 = 0x0
---
Entry stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, 0x0]
Exit stack: [V11, 0xa8, V123, V134, V154, S4, S3, S0, 0x0]

================================

Block 0x3b3
[0x3b3:0x3c1]
---
Predecessors: [0x3ac, 0x46e]
Successors: [0x3c2, 0x484]
---
0x3b3 JUMPDEST
0x3b4 DUP7
0x3b5 PUSH1 0xff
0x3b7 AND
0x3b8 DUP2
0x3b9 PUSH1 0xff
0x3bb AND
0x3bc LT
0x3bd ISZERO
0x3be PUSH2 0x484
0x3c1 JUMPI
---
0x3b3: JUMPDEST 
0x3b5: V331 = 0xff
0x3b7: V332 = AND 0xff V123
0x3b9: V333 = 0xff
0x3bb: V334 = AND 0xff S0
0x3bc: V335 = LT V334 V332
0x3bd: V336 = ISZERO V335
0x3be: V337 = 0x484
0x3c1: JUMPI 0x484 V336
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]

================================

Block 0x3c2
[0x3c2:0x3ce]
---
Predecessors: [0x3b3]
Successors: [0x3cf, 0x3d0]
---
0x3c2 DUP4
0x3c3 DUP2
0x3c4 PUSH1 0xff
0x3c6 AND
0x3c7 DUP2
0x3c8 MLOAD
0x3c9 DUP2
0x3ca LT
0x3cb PUSH2 0x3d0
0x3ce JUMPI
---
0x3c4: V338 = 0xff
0x3c6: V339 = AND 0xff S0
0x3c8: V340 = M[S3]
0x3ca: V341 = LT V339 V340
0x3cb: V342 = 0x3d0
0x3ce: JUMPI 0x3d0 V341
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, V339]
Exit stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0, S3, V339]

================================

Block 0x3cf
[0x3cf:0x3cf]
---
Predecessors: [0x3c2]
Successors: []
---
0x3cf INVALID
---
0x3cf: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S5, S4, S3, S2, S1, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S5, S4, S3, S2, S1, V339]

================================

Block 0x3d0
[0x3d0:0x3e3]
---
Predecessors: [0x3c2]
Successors: [0x3e4, 0x401]
---
0x3d0 JUMPDEST
0x3d1 SWAP1
0x3d2 PUSH1 0x20
0x3d4 ADD
0x3d5 SWAP1
0x3d6 PUSH1 0x20
0x3d8 MUL
0x3d9 ADD
0x3da MLOAD
0x3db DUP4
0x3dc LT
0x3dd ISZERO
0x3de DUP1
0x3df ISZERO
0x3e0 PUSH2 0x401
0x3e3 JUMPI
---
0x3d0: JUMPDEST 
0x3d2: V343 = 0x20
0x3d4: V344 = ADD 0x20 S1
0x3d6: V345 = 0x20
0x3d8: V346 = MUL 0x20 V339
0x3d9: V347 = ADD V346 V344
0x3da: V348 = M[V347]
0x3dc: V349 = LT S4 V348
0x3dd: V350 = ISZERO V349
0x3df: V351 = ISZERO V350
0x3e0: V352 = 0x401
0x3e3: JUMPI 0x401 V351
---
Entry stack: [V11, 0xa8, V123, V134, V154, S5, S4, S3, S2, S1, V339]
Stack pops: 5
Stack additions: [S4, S3, S2, V350]
Exit stack: [V11, 0xa8, V123, V134, V154, S5, S4, S3, S2, V350]

================================

Block 0x3e4
[0x3e4:0x3f2]
---
Predecessors: [0x3d0]
Successors: [0x3f3, 0x3f4]
---
0x3e4 POP
0x3e5 DUP2
0x3e6 DUP7
0x3e7 DUP3
0x3e8 PUSH1 0xff
0x3ea AND
0x3eb DUP2
0x3ec MLOAD
0x3ed DUP2
0x3ee LT
0x3ef PUSH2 0x3f4
0x3f2 JUMPI
---
0x3e8: V353 = 0xff
0x3ea: V354 = AND 0xff S1
0x3ec: V355 = M[V134]
0x3ee: V356 = LT V354 V355
0x3ef: V357 = 0x3f4
0x3f2: JUMPI 0x3f4 V356
---
Entry stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1, V350]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S2, S6, V354]
Exit stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1, S2, V134, V354]

================================

Block 0x3f3
[0x3f3:0x3f3]
---
Predecessors: [0x3e4]
Successors: []
---
0x3f3 INVALID
---
0x3f3: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, S2, V134, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, S2, V134, V354]

================================

Block 0x3f4
[0x3f4:0x400]
---
Predecessors: [0x3e4]
Successors: [0x401]
---
0x3f4 JUMPDEST
0x3f5 SWAP1
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 SWAP1
0x3fa PUSH1 0x20
0x3fc MUL
0x3fd ADD
0x3fe MLOAD
0x3ff GT
0x400 ISZERO
---
0x3f4: JUMPDEST 
0x3f6: V358 = 0x20
0x3f8: V359 = ADD 0x20 V134
0x3fa: V360 = 0x20
0x3fc: V361 = MUL 0x20 V354
0x3fd: V362 = ADD V361 V359
0x3fe: V363 = M[V362]
0x3ff: V364 = GT V363 S2
0x400: V365 = ISZERO V364
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, S2, V134, V354]
Stack pops: 3
Stack additions: [V365]
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, V365]

================================

Block 0x401
[0x401:0x407]
---
Predecessors: [0x3d0, 0x3f4]
Successors: [0x408, 0x40c]
---
0x401 JUMPDEST
0x402 ISZERO
0x403 ISZERO
0x404 PUSH2 0x40c
0x407 JUMPI
---
0x401: JUMPDEST 
0x402: V366 = ISZERO S0
0x403: V367 = ISZERO V366
0x404: V368 = 0x40c
0x407: JUMPI 0x40c V367
---
Entry stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1]

================================

Block 0x408
[0x408:0x40b]
---
Predecessors: [0x401]
Successors: []
---
0x408 PUSH1 0x0
0x40a DUP1
0x40b REVERT
---
0x408: V369 = 0x0
0x40b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]

================================

Block 0x40c
[0x40c:0x41c]
---
Predecessors: [0x401]
Successors: [0x41d, 0x41e]
---
0x40c JUMPDEST
0x40d PUSH2 0x45f
0x410 DUP7
0x411 DUP3
0x412 PUSH1 0xff
0x414 AND
0x415 DUP2
0x416 MLOAD
0x417 DUP2
0x418 LT
0x419 PUSH2 0x41e
0x41c JUMPI
---
0x40c: JUMPDEST 
0x40d: V370 = 0x45f
0x412: V371 = 0xff
0x414: V372 = AND 0xff S0
0x416: V373 = M[V134]
0x418: V374 = LT V372 V373
0x419: V375 = 0x41e
0x41c: JUMPI 0x41e V374
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x45f, S5, V372]
Exit stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0, 0x45f, V134, V372]

================================

Block 0x41d
[0x41d:0x41d]
---
Predecessors: [0x40c]
Successors: []
---
0x41d INVALID
---
0x41d: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, 0x45f, V134, V372]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, 0x45f, V134, V372]

================================

Block 0x41e
[0x41e:0x435]
---
Predecessors: [0x40c]
Successors: [0x436, 0x437]
---
0x41e JUMPDEST
0x41f SWAP1
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP1
0x424 PUSH1 0x20
0x426 MUL
0x427 ADD
0x428 MLOAD
0x429 DUP7
0x42a DUP4
0x42b PUSH1 0xff
0x42d AND
0x42e DUP2
0x42f MLOAD
0x430 DUP2
0x431 LT
0x432 PUSH2 0x437
0x435 JUMPI
---
0x41e: JUMPDEST 
0x420: V376 = 0x20
0x422: V377 = ADD 0x20 V134
0x424: V378 = 0x20
0x426: V379 = MUL 0x20 V372
0x427: V380 = ADD V379 V377
0x428: V381 = M[V380]
0x42b: V382 = 0xff
0x42d: V383 = AND 0xff S3
0x42f: V384 = M[V154]
0x431: V385 = LT V383 V384
0x432: V386 = 0x437
0x435: JUMPI 0x437 V385
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, 0x45f, V134, V372]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V381, S7, V383]
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, 0x45f, V381, V154, V383]

================================

Block 0x436
[0x436:0x436]
---
Predecessors: [0x41e]
Successors: []
---
0x436 INVALID
---
0x436: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, 0x45f, V381, V154, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, 0x45f, V381, V154, V383]

================================

Block 0x437
[0x437:0x44e]
---
Predecessors: [0x41e]
Successors: [0x44f, 0x450]
---
0x437 JUMPDEST
0x438 SWAP1
0x439 PUSH1 0x20
0x43b ADD
0x43c SWAP1
0x43d PUSH1 0x20
0x43f MUL
0x440 ADD
0x441 MLOAD
0x442 DUP7
0x443 DUP5
0x444 PUSH1 0xff
0x446 AND
0x447 DUP2
0x448 MLOAD
0x449 DUP2
0x44a LT
0x44b PUSH2 0x450
0x44e JUMPI
---
0x437: JUMPDEST 
0x439: V387 = 0x20
0x43b: V388 = ADD 0x20 V154
0x43d: V389 = 0x20
0x43f: V390 = MUL 0x20 V383
0x440: V391 = ADD V390 V388
0x441: V392 = M[V391]
0x444: V393 = 0xff
0x446: V394 = AND 0xff S4
0x448: V395 = M[S7]
0x44a: V396 = LT V394 V395
0x44b: V397 = 0x450
0x44e: JUMPI 0x450 V396
---
Entry stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, 0x45f, V381, V154, V383]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V392, S7, V394]
Exit stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, 0x45f, V381, V392, S7, V394]

================================

Block 0x44f
[0x44f:0x44f]
---
Predecessors: [0x437]
Successors: []
---
0x44f INVALID
---
0x44f: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, 0x45f, V381, V392, S1, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, 0x45f, V381, V392, S1, V394]

================================

Block 0x450
[0x450:0x45e]
---
Predecessors: [0x437]
Successors: [0x612]
---
0x450 JUMPDEST
0x451 SWAP1
0x452 PUSH1 0x20
0x454 ADD
0x455 SWAP1
0x456 PUSH1 0x20
0x458 MUL
0x459 ADD
0x45a MLOAD
0x45b PUSH2 0x612
0x45e JUMP
---
0x450: JUMPDEST 
0x452: V398 = 0x20
0x454: V399 = ADD 0x20 S1
0x456: V400 = 0x20
0x458: V401 = MUL 0x20 V394
0x459: V402 = ADD V401 V399
0x45a: V403 = M[V402]
0x45b: V404 = 0x612
0x45e: JUMP 0x612
---
Entry stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, 0x45f, V381, V392, S1, V394]
Stack pops: 2
Stack additions: [V403]
Exit stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, 0x45f, V381, V392, V403]

================================

Block 0x45f
[0x45f:0x46c]
---
Predecessors: [0x8bd]
Successors: [0x46d, 0x46e]
---
0x45f JUMPDEST
0x460 DUP4
0x461 DUP2
0x462 PUSH1 0xff
0x464 AND
0x465 DUP2
0x466 MLOAD
0x467 DUP2
0x468 LT
0x469 PUSH2 0x46e
0x46c JUMPI
---
0x45f: JUMPDEST 
0x462: V405 = 0xff
0x464: V406 = AND 0xff S0
0x466: V407 = M[S3]
0x468: V408 = LT V406 V407
0x469: V409 = 0x46e
0x46c: JUMPI 0x46e V408
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, V406]
Exit stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0, S3, V406]

================================

Block 0x46d
[0x46d:0x46d]
---
Predecessors: [0x45f]
Successors: []
---
0x46d INVALID
---
0x46d: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S5, S4, S3, S2, S1, V406]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S5, S4, S3, S2, S1, V406]

================================

Block 0x46e
[0x46e:0x483]
---
Predecessors: [0x45f]
Successors: [0x3b3]
---
0x46e JUMPDEST
0x46f SWAP1
0x470 PUSH1 0x20
0x472 ADD
0x473 SWAP1
0x474 PUSH1 0x20
0x476 MUL
0x477 ADD
0x478 MLOAD
0x479 SWAP1
0x47a SWAP3
0x47b SUB
0x47c SWAP2
0x47d PUSH1 0x1
0x47f ADD
0x480 PUSH2 0x3b3
0x483 JUMP
---
0x46e: JUMPDEST 
0x470: V410 = 0x20
0x472: V411 = ADD 0x20 S1
0x474: V412 = 0x20
0x476: V413 = MUL 0x20 V406
0x477: V414 = ADD V413 V411
0x478: V415 = M[V414]
0x47b: V416 = SUB S4 V415
0x47d: V417 = 0x1
0x47f: V418 = ADD 0x1 S2
0x480: V419 = 0x3b3
0x483: JUMP 0x3b3
---
Entry stack: [V11, 0xa8, V123, V134, V154, S5, S4, S3, S2, S1, V406]
Stack pops: 5
Stack additions: [V416, S3, V418]
Exit stack: [V11, 0xa8, V123, V134, V154, S5, V416, S3, V418]

================================

Block 0x484
[0x484:0x48c]
---
Predecessors: [0x3b3]
Successors: [0xa8]
---
0x484 JUMPDEST
0x485 POP
0x486 POP
0x487 POP
0x488 POP
0x489 POP
0x48a POP
0x48b POP
0x48c JUMP
---
0x484: JUMPDEST 
0x48c: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x48d
[0x48d:0x4a3]
---
Predecessors: [0x258]
Successors: [0x4a4, 0x4a8]
---
0x48d JUMPDEST
0x48e PUSH1 0x0
0x490 SLOAD
0x491 CALLER
0x492 PUSH1 0x1
0x494 PUSH1 0xa0
0x496 PUSH1 0x2
0x498 EXP
0x499 SUB
0x49a SWAP1
0x49b DUP2
0x49c AND
0x49d SWAP2
0x49e AND
0x49f EQ
0x4a0 PUSH2 0x4a8
0x4a3 JUMPI
---
0x48d: JUMPDEST 
0x48e: V420 = 0x0
0x490: V421 = S[0x0]
0x491: V422 = CALLER
0x492: V423 = 0x1
0x494: V424 = 0xa0
0x496: V425 = 0x2
0x498: V426 = EXP 0x2 0xa0
0x499: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x49e: V429 = AND V421 0xffffffffffffffffffffffffffffffffffffffff
0x49f: V430 = EQ V429 V428
0x4a0: V431 = 0x4a8
0x4a3: JUMPI 0x4a8 V430
---
Entry stack: [V11, 0xa8, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V194]

================================

Block 0x4a4
[0x4a4:0x4a7]
---
Predecessors: [0x48d]
Successors: []
---
0x4a4 PUSH1 0x0
0x4a6 DUP1
0x4a7 REVERT
---
0x4a4: V432 = 0x0
0x4a7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V194]

================================

Block 0x4a8
[0x4a8:0x4b8]
---
Predecessors: [0x48d]
Successors: [0x4b9, 0x4bd]
---
0x4a8 JUMPDEST
0x4a9 PUSH1 0x1
0x4ab PUSH1 0xa0
0x4ad PUSH1 0x2
0x4af EXP
0x4b0 SUB
0x4b1 DUP2
0x4b2 AND
0x4b3 ISZERO
0x4b4 ISZERO
0x4b5 PUSH2 0x4bd
0x4b8 JUMPI
---
0x4a8: JUMPDEST 
0x4a9: V433 = 0x1
0x4ab: V434 = 0xa0
0x4ad: V435 = 0x2
0x4af: V436 = EXP 0x2 0xa0
0x4b0: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b2: V438 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x4b3: V439 = ISZERO V438
0x4b4: V440 = ISZERO V439
0x4b5: V441 = 0x4bd
0x4b8: JUMPI 0x4bd V440
---
Entry stack: [V11, 0xa8, V194]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa8, V194]

================================

Block 0x4b9
[0x4b9:0x4bc]
---
Predecessors: [0x4a8]
Successors: []
---
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc REVERT
---
0x4b9: V442 = 0x0
0x4bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V194]

================================

Block 0x4bd
[0x4bd:0x4eb]
---
Predecessors: [0x4a8]
Successors: [0xa8]
---
0x4bd JUMPDEST
0x4be PUSH1 0x0
0x4c0 DUP1
0x4c1 SLOAD
0x4c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d7 NOT
0x4d8 AND
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 SWAP3
0x4e2 SWAP1
0x4e3 SWAP3
0x4e4 AND
0x4e5 SWAP2
0x4e6 SWAP1
0x4e7 SWAP2
0x4e8 OR
0x4e9 SWAP1
0x4ea SSTORE
0x4eb JUMP
---
0x4bd: JUMPDEST 
0x4be: V443 = 0x0
0x4c1: V444 = S[0x0]
0x4c2: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d7: V446 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: V447 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V444
0x4d9: V448 = 0x1
0x4db: V449 = 0xa0
0x4dd: V450 = 0x2
0x4df: V451 = EXP 0x2 0xa0
0x4e0: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e4: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x4e8: V454 = OR V453 V447
0x4ea: S[0x0] = V454
0x4eb: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V194]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ec
[0x4ec:0x4f3]
---
Predecessors: [0x26c]
Successors: [0x50f]
---
0x4ec JUMPDEST
0x4ed PUSH2 0x4f4
0x4f0 PUSH2 0x50f
0x4f3 JUMP
---
0x4ec: JUMPDEST 
0x4ed: V455 = 0x4f4
0x4f0: V456 = 0x50f
0x4f3: JUMP 0x50f
---
Entry stack: [V11, 0xa8, V198, V207]
Stack pops: 0
Stack additions: [0x4f4]
Exit stack: [V11, 0xa8, V198, V207, 0x4f4]

================================

Block 0x4f4
[0x4f4:0x4fb]
---
Predecessors: [0x60e]
Successors: [0x4fc, 0x500]
---
0x4f4 JUMPDEST
0x4f5 DUP3
0x4f6 GT
0x4f7 ISZERO
0x4f8 PUSH2 0x500
0x4fb JUMPI
---
0x4f4: JUMPDEST 
0x4f6: V457 = GT S2 S0
0x4f7: V458 = ISZERO V457
0x4f8: V459 = 0x500
0x4fb: JUMPI 0x500 V458
---
Entry stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1]

================================

Block 0x4fc
[0x4fc:0x4ff]
---
Predecessors: [0x4f4]
Successors: []
---
0x4fc PUSH1 0x0
0x4fe DUP1
0x4ff REVERT
---
0x4fc: V460 = 0x0
0x4ff: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]

================================

Block 0x500
[0x500:0x50a]
---
Predecessors: [0x4f4]
Successors: [0x612]
---
0x500 JUMPDEST
0x501 PUSH2 0x50b
0x504 DUP3
0x505 DUP3
0x506 CALLVALUE
0x507 PUSH2 0x612
0x50a JUMP
---
0x500: JUMPDEST 
0x501: V461 = 0x50b
0x506: V462 = CALLVALUE
0x507: V463 = 0x612
0x50a: JUMP 0x612
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x50b, S1, S0, V462]
Exit stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0, 0x50b, S1, S0, V462]

================================

Block 0x50b
[0x50b:0x50e]
---
Predecessors: [0x8bd]
Successors: [0xa8]
---
0x50b JUMPDEST
0x50c POP
0x50d POP
0x50e JUMP
---
0x50b: JUMPDEST 
0x50e: JUMP S2
---
Entry stack: [V11, 0xa8, V123, V134, V154, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S3]

================================

Block 0x50f
[0x50f:0x51c]
---
Predecessors: [0x3a0, 0x4ec]
Successors: [0x51d, 0x526]
---
0x50f JUMPDEST
0x510 PUSH1 0x0
0x512 DUP1
0x513 PUSH1 0x3
0x515 SLOAD
0x516 NUMBER
0x517 GT
0x518 ISZERO
0x519 PUSH2 0x526
0x51c JUMPI
---
0x50f: JUMPDEST 
0x510: V464 = 0x0
0x513: V465 = 0x3
0x515: V466 = S[0x3]
0x516: V467 = NUMBER
0x517: V468 = GT V467 V466
0x518: V469 = ISZERO V468
0x519: V470 = 0x526
0x51c: JUMPI 0x526 V469
---
Entry stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1, {0x3ac, 0x4f4}]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xa8, V123, V134, V154, S4, S3, S2, S1, {0x3ac, 0x4f4}, 0x0, 0x0]

================================

Block 0x51d
[0x51d:0x525]
---
Predecessors: [0x50f]
Successors: [0x60e]
---
0x51d PUSH1 0x2
0x51f SLOAD
0x520 SWAP2
0x521 POP
0x522 PUSH2 0x60e
0x525 JUMP
---
0x51d: V471 = 0x2
0x51f: V472 = S[0x2]
0x522: V473 = 0x60e
0x525: JUMP 0x60e
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, 0x0, 0x0]
Stack pops: 2
Stack additions: [V472, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, V472, 0x0]

================================

Block 0x526
[0x526:0x53b]
---
Predecessors: [0x50f]
Successors: [0x53c, 0x53d]
---
0x526 JUMPDEST
0x527 PUSH1 0x1
0x529 SLOAD
0x52a NUMBER
0x52b SUB
0x52c SWAP1
0x52d POP
0x52e PUSH1 0x4
0x530 PUSH1 0x2
0x532 DUP2
0x533 SLOAD
0x534 DUP2
0x535 LT
0x536 ISZERO
0x537 ISZERO
0x538 PUSH2 0x53d
0x53b JUMPI
---
0x526: JUMPDEST 
0x527: V474 = 0x1
0x529: V475 = S[0x1]
0x52a: V476 = NUMBER
0x52b: V477 = SUB V476 V475
0x52e: V478 = 0x4
0x530: V479 = 0x2
0x533: V480 = S[0x4]
0x535: V481 = LT 0x2 V480
0x536: V482 = ISZERO V481
0x537: V483 = ISZERO V482
0x538: V484 = 0x53d
0x53b: JUMPI 0x53d V483
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, 0x0, 0x0]
Stack pops: 1
Stack additions: [V477, 0x4, 0x2]
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, 0x0, V477, 0x4, 0x2]

================================

Block 0x53c
[0x53c:0x53c]
---
Predecessors: [0x526]
Successors: []
---
0x53c INVALID
---
0x53c: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, 0x4, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, 0x4, 0x2]

================================

Block 0x53d
[0x53d:0x550]
---
Predecessors: [0x526]
Successors: [0x551, 0x574]
---
0x53d JUMPDEST
0x53e SWAP1
0x53f PUSH1 0x0
0x541 MSTORE
0x542 PUSH1 0x20
0x544 PUSH1 0x0
0x546 SHA3
0x547 SWAP1
0x548 ADD
0x549 SLOAD
0x54a NUMBER
0x54b GT
0x54c ISZERO
0x54d PUSH2 0x574
0x550 JUMPI
---
0x53d: JUMPDEST 
0x53f: V485 = 0x0
0x541: M[0x0] = 0x4
0x542: V486 = 0x20
0x544: V487 = 0x0
0x546: V488 = SHA3 0x0 0x20
0x548: V489 = ADD 0x2 V488
0x549: V490 = S[V489]
0x54a: V491 = NUMBER
0x54b: V492 = GT V491 V490
0x54c: V493 = ISZERO V492
0x54d: V494 = 0x574
0x550: JUMPI 0x574 V493
---
Entry stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, 0x4, 0x2]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477]

================================

Block 0x551
[0x551:0x560]
---
Predecessors: [0x53d]
Successors: [0x561, 0x562]
---
0x551 PUSH1 0x1
0x553 SLOAD
0x554 PUSH1 0x4
0x556 DUP1
0x557 SLOAD
0x558 PUSH1 0x2
0x55a SWAP1
0x55b DUP2
0x55c LT
0x55d PUSH2 0x562
0x560 JUMPI
---
0x551: V495 = 0x1
0x553: V496 = S[0x1]
0x554: V497 = 0x4
0x557: V498 = S[0x4]
0x558: V499 = 0x2
0x55c: V500 = LT 0x2 V498
0x55d: V501 = 0x562
0x560: JUMPI 0x562 V500
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, 0x0, V477]
Stack pops: 0
Stack additions: [V496, 0x4, 0x2]
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, 0x0, V477, V496, 0x4, 0x2]

================================

Block 0x561
[0x561:0x561]
---
Predecessors: [0x551]
Successors: []
---
0x561 INVALID
---
0x561: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, V496, 0x4, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, V496, 0x4, 0x2]

================================

Block 0x562
[0x562:0x573]
---
Predecessors: [0x551]
Successors: [0x576]
---
0x562 JUMPDEST
0x563 SWAP1
0x564 PUSH1 0x0
0x566 MSTORE
0x567 PUSH1 0x20
0x569 PUSH1 0x0
0x56b SHA3
0x56c SWAP1
0x56d ADD
0x56e SLOAD
0x56f SUB
0x570 PUSH2 0x576
0x573 JUMP
---
0x562: JUMPDEST 
0x564: V502 = 0x0
0x566: M[0x0] = 0x4
0x567: V503 = 0x20
0x569: V504 = 0x0
0x56b: V505 = SHA3 0x0 0x20
0x56d: V506 = ADD 0x2 V505
0x56e: V507 = S[V506]
0x56f: V508 = SUB V507 V496
0x570: V509 = 0x576
0x573: JUMP 0x576
---
Entry stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, V496, 0x4, 0x2]
Stack pops: 3
Stack additions: [V508]
Exit stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, V508]

================================

Block 0x574
[0x574:0x575]
---
Predecessors: [0x53d]
Successors: [0x576]
---
0x574 JUMPDEST
0x575 DUP1
---
0x574: JUMPDEST 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, 0x0, V477]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, 0x0, V477, V477]

================================

Block 0x576
[0x576:0x583]
---
Predecessors: [0x562, 0x574]
Successors: [0x584, 0x585]
---
0x576 JUMPDEST
0x577 PUSH1 0x4
0x579 DUP1
0x57a SLOAD
0x57b PUSH1 0x1
0x57d SWAP1
0x57e DUP2
0x57f LT
0x580 PUSH2 0x585
0x583 JUMPI
---
0x576: JUMPDEST 
0x577: V510 = 0x4
0x57a: V511 = S[0x4]
0x57b: V512 = 0x1
0x57f: V513 = LT 0x1 V511
0x580: V514 = 0x585
0x583: JUMPI 0x585 V513
---
Entry stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, {0x3ac, 0x4f4}, 0x0, V477, S0]
Stack pops: 0
Stack additions: [0x4, 0x1]
Exit stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, {0x3ac, 0x4f4}, 0x0, V477, S0, 0x4, 0x1]

================================

Block 0x584
[0x584:0x584]
---
Predecessors: [0x576]
Successors: []
---
0x584 INVALID
---
0x584: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, S2, 0x4, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, S2, 0x4, 0x1]

================================

Block 0x585
[0x585:0x598]
---
Predecessors: [0x576]
Successors: [0x599, 0x5bd]
---
0x585 JUMPDEST
0x586 SWAP1
0x587 PUSH1 0x0
0x589 MSTORE
0x58a PUSH1 0x20
0x58c PUSH1 0x0
0x58e SHA3
0x58f SWAP1
0x590 ADD
0x591 SLOAD
0x592 NUMBER
0x593 GT
0x594 ISZERO
0x595 PUSH2 0x5bd
0x598 JUMPI
---
0x585: JUMPDEST 
0x587: V515 = 0x0
0x589: M[0x0] = 0x4
0x58a: V516 = 0x20
0x58c: V517 = 0x0
0x58e: V518 = SHA3 0x0 0x20
0x590: V519 = ADD 0x1 V518
0x591: V520 = S[V519]
0x592: V521 = NUMBER
0x593: V522 = GT V521 V520
0x594: V523 = ISZERO V522
0x595: V524 = 0x5bd
0x598: JUMPI 0x5bd V523
---
Entry stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, S2, 0x4, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, S2]

================================

Block 0x599
[0x599:0x5a9]
---
Predecessors: [0x585]
Successors: [0x5aa, 0x5ab]
---
0x599 PUSH1 0x1
0x59b SLOAD
0x59c PUSH1 0x4
0x59e PUSH1 0x1
0x5a0 DUP2
0x5a1 SLOAD
0x5a2 DUP2
0x5a3 LT
0x5a4 ISZERO
0x5a5 ISZERO
0x5a6 PUSH2 0x5ab
0x5a9 JUMPI
---
0x599: V525 = 0x1
0x59b: V526 = S[0x1]
0x59c: V527 = 0x4
0x59e: V528 = 0x1
0x5a1: V529 = S[0x4]
0x5a3: V530 = LT 0x1 V529
0x5a4: V531 = ISZERO V530
0x5a5: V532 = ISZERO V531
0x5a6: V533 = 0x5ab
0x5a9: JUMPI 0x5ab V532
---
Entry stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, {0x3ac, 0x4f4}, 0x0, V477, S0]
Stack pops: 0
Stack additions: [V526, 0x4, 0x1]
Exit stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, {0x3ac, 0x4f4}, 0x0, V477, S0, V526, 0x4, 0x1]

================================

Block 0x5aa
[0x5aa:0x5aa]
---
Predecessors: [0x599]
Successors: []
---
0x5aa INVALID
---
0x5aa: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x3ac, 0x4f4}, 0x0, V477, S3, V526, 0x4, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x3ac, 0x4f4}, 0x0, V477, S3, V526, 0x4, 0x1]

================================

Block 0x5ab
[0x5ab:0x5bc]
---
Predecessors: [0x599]
Successors: [0x5bf]
---
0x5ab JUMPDEST
0x5ac SWAP1
0x5ad PUSH1 0x0
0x5af MSTORE
0x5b0 PUSH1 0x20
0x5b2 PUSH1 0x0
0x5b4 SHA3
0x5b5 SWAP1
0x5b6 ADD
0x5b7 SLOAD
0x5b8 SUB
0x5b9 PUSH2 0x5bf
0x5bc JUMP
---
0x5ab: JUMPDEST 
0x5ad: V534 = 0x0
0x5af: M[0x0] = 0x4
0x5b0: V535 = 0x20
0x5b2: V536 = 0x0
0x5b4: V537 = SHA3 0x0 0x20
0x5b6: V538 = ADD 0x1 V537
0x5b7: V539 = S[V538]
0x5b8: V540 = SUB V539 V526
0x5b9: V541 = 0x5bf
0x5bc: JUMP 0x5bf
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x3ac, 0x4f4}, 0x0, V477, S3, V526, 0x4, 0x1]
Stack pops: 3
Stack additions: [V540]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x3ac, 0x4f4}, 0x0, V477, S3, V540]

================================

Block 0x5bd
[0x5bd:0x5be]
---
Predecessors: [0x585]
Successors: [0x5bf]
---
0x5bd JUMPDEST
0x5be DUP2
---
0x5bd: JUMPDEST 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, {0x3ac, 0x4f4}, 0x0, V477, S0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, {0x3ac, 0x4f4}, 0x0, V477, S0, V477]

================================

Block 0x5bf
[0x5bf:0x5cc]
---
Predecessors: [0x5ab, 0x5bd]
Successors: [0x5cd, 0x5ce]
---
0x5bf JUMPDEST
0x5c0 PUSH1 0x4
0x5c2 DUP1
0x5c3 SLOAD
0x5c4 PUSH1 0x0
0x5c6 SWAP1
0x5c7 DUP2
0x5c8 LT
0x5c9 PUSH2 0x5ce
0x5cc JUMPI
---
0x5bf: JUMPDEST 
0x5c0: V542 = 0x4
0x5c3: V543 = S[0x4]
0x5c4: V544 = 0x0
0x5c8: V545 = LT 0x0 V543
0x5c9: V546 = 0x5ce
0x5cc: JUMPI 0x5ce V545
---
Entry stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, S1, S0]
Stack pops: 0
Stack additions: [0x4, 0x0]
Exit stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, S1, S0, 0x4, 0x0]

================================

Block 0x5cd
[0x5cd:0x5cd]
---
Predecessors: [0x5bf]
Successors: []
---
0x5cd INVALID
---
0x5cd: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x3ac, 0x4f4}, 0x0, V477, S3, S2, 0x4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x3ac, 0x4f4}, 0x0, V477, S3, S2, 0x4, 0x0]

================================

Block 0x5ce
[0x5ce:0x5e1]
---
Predecessors: [0x5bf]
Successors: [0x5e2, 0x605]
---
0x5ce JUMPDEST
0x5cf SWAP1
0x5d0 PUSH1 0x0
0x5d2 MSTORE
0x5d3 PUSH1 0x20
0x5d5 PUSH1 0x0
0x5d7 SHA3
0x5d8 SWAP1
0x5d9 ADD
0x5da SLOAD
0x5db NUMBER
0x5dc GT
0x5dd ISZERO
0x5de PUSH2 0x605
0x5e1 JUMPI
---
0x5ce: JUMPDEST 
0x5d0: V547 = 0x0
0x5d2: M[0x0] = 0x4
0x5d3: V548 = 0x20
0x5d5: V549 = 0x0
0x5d7: V550 = SHA3 0x0 0x20
0x5d9: V551 = ADD 0x0 V550
0x5da: V552 = S[V551]
0x5db: V553 = NUMBER
0x5dc: V554 = GT V553 V552
0x5dd: V555 = ISZERO V554
0x5de: V556 = 0x605
0x5e1: JUMPI 0x605 V555
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x3ac, 0x4f4}, 0x0, V477, S3, S2, 0x4, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x3ac, 0x4f4}, 0x0, V477, S3, S2]

================================

Block 0x5e2
[0x5e2:0x5f1]
---
Predecessors: [0x5ce]
Successors: [0x5f2, 0x5f3]
---
0x5e2 PUSH1 0x1
0x5e4 SLOAD
0x5e5 PUSH1 0x4
0x5e7 DUP1
0x5e8 SLOAD
0x5e9 PUSH1 0x0
0x5eb SWAP1
0x5ec DUP2
0x5ed LT
0x5ee PUSH2 0x5f3
0x5f1 JUMPI
---
0x5e2: V557 = 0x1
0x5e4: V558 = S[0x1]
0x5e5: V559 = 0x4
0x5e8: V560 = S[0x4]
0x5e9: V561 = 0x0
0x5ed: V562 = LT 0x0 V560
0x5ee: V563 = 0x5f3
0x5f1: JUMPI 0x5f3 V562
---
Entry stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, S1, S0]
Stack pops: 0
Stack additions: [V558, 0x4, 0x0]
Exit stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, S1, S0, V558, 0x4, 0x0]

================================

Block 0x5f2
[0x5f2:0x5f2]
---
Predecessors: [0x5e2]
Successors: []
---
0x5f2 INVALID
---
0x5f2: INVALID 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S11, S10, S9, S8, {0x3ac, 0x4f4}, 0x0, V477, S4, S3, V558, 0x4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S11, S10, S9, S8, {0x3ac, 0x4f4}, 0x0, V477, S4, S3, V558, 0x4, 0x0]

================================

Block 0x5f3
[0x5f3:0x604]
---
Predecessors: [0x5e2]
Successors: [0x607]
---
0x5f3 JUMPDEST
0x5f4 SWAP1
0x5f5 PUSH1 0x0
0x5f7 MSTORE
0x5f8 PUSH1 0x20
0x5fa PUSH1 0x0
0x5fc SHA3
0x5fd SWAP1
0x5fe ADD
0x5ff SLOAD
0x600 SUB
0x601 PUSH2 0x607
0x604 JUMP
---
0x5f3: JUMPDEST 
0x5f5: V564 = 0x0
0x5f7: M[0x0] = 0x4
0x5f8: V565 = 0x20
0x5fa: V566 = 0x0
0x5fc: V567 = SHA3 0x0 0x20
0x5fe: V568 = ADD 0x0 V567
0x5ff: V569 = S[V568]
0x600: V570 = SUB V569 V558
0x601: V571 = 0x607
0x604: JUMP 0x607
---
Entry stack: [V11, 0xa8, V123, V134, V154, S11, S10, S9, S8, {0x3ac, 0x4f4}, 0x0, V477, S4, S3, V558, 0x4, 0x0]
Stack pops: 3
Stack additions: [V570]
Exit stack: [V11, 0xa8, V123, V134, V154, S11, S10, S9, S8, {0x3ac, 0x4f4}, 0x0, V477, S4, S3, V570]

================================

Block 0x605
[0x605:0x606]
---
Predecessors: [0x5ce]
Successors: [0x607]
---
0x605 JUMPDEST
0x606 DUP3
---
0x605: JUMPDEST 
---
Entry stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V11, 0xa8, V123, V134, V154, S8, S7, S6, S5, {0x3ac, 0x4f4}, 0x0, V477, S1, S0, V477]

================================

Block 0x607
[0x607:0x60d]
---
Predecessors: [0x5f3, 0x605]
Successors: [0x60e]
---
0x607 JUMPDEST
0x608 DUP4
0x609 ADD
0x60a ADD
0x60b ADD
0x60c SWAP2
0x60d POP
---
0x607: JUMPDEST 
0x609: V572 = ADD V477 S0
0x60a: V573 = ADD V572 S1
0x60b: V574 = ADD V573 S2
---
Entry stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, 0x0, V477, S2, S1, S0]
Stack pops: 5
Stack additions: [V574, S3]
Exit stack: [V11, 0xa8, V123, V134, V154, S9, S8, S7, S6, {0x3ac, 0x4f4}, V574, V477]

================================

Block 0x60e
[0x60e:0x611]
---
Predecessors: [0x51d, 0x607]
Successors: [0x3ac, 0x4f4]
---
0x60e JUMPDEST
0x60f POP
0x610 SWAP1
0x611 JUMP
---
0x60e: JUMPDEST 
0x611: JUMP {0x3ac, 0x4f4}
---
Entry stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, {0x3ac, 0x4f4}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xa8, V123, V134, V154, S6, S5, S4, S3, S1]

================================

Block 0x612
[0x612:0x64b]
---
Predecessors: [0x450, 0x500]
Successors: [0x64c, 0x6dc]
---
0x612 JUMPDEST
0x613 PUSH1 0x0
0x615 DUP4
0x616 DUP2
0x617 MSTORE
0x618 PUSH1 0x6
0x61a PUSH1 0x20
0x61c MSTORE
0x61d PUSH1 0x40
0x61f DUP2
0x620 SHA3
0x621 DUP1
0x622 SLOAD
0x623 SWAP1
0x624 SWAP2
0x625 SWAP1
0x626 DUP2
0x627 SWAP1
0x628 CALLER
0x629 PUSH1 0x1
0x62b PUSH1 0xa0
0x62d PUSH1 0x2
0x62f EXP
0x630 SUB
0x631 SWAP1
0x632 DUP2
0x633 AND
0x634 PUSH13 0x1000000000000000000000000
0x642 SWAP1
0x643 SWAP3
0x644 DIV
0x645 AND
0x646 EQ
0x647 ISZERO
0x648 PUSH2 0x6dc
0x64b JUMPI
---
0x612: JUMPDEST 
0x613: V575 = 0x0
0x617: M[0x0] = S2
0x618: V576 = 0x6
0x61a: V577 = 0x20
0x61c: M[0x20] = 0x6
0x61d: V578 = 0x40
0x620: V579 = SHA3 0x0 0x40
0x622: V580 = S[V579]
0x628: V581 = CALLER
0x629: V582 = 0x1
0x62b: V583 = 0xa0
0x62d: V584 = 0x2
0x62f: V585 = EXP 0x2 0xa0
0x630: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x633: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x634: V588 = 0x1000000000000000000000000
0x644: V589 = DIV V580 0x1000000000000000000000000
0x645: V590 = AND V589 0xffffffffffffffffffffffffffffffffffffffff
0x646: V591 = EQ V590 V587
0x647: V592 = ISZERO V591
0x648: V593 = 0x6dc
0x64b: JUMPI 0x6dc V592
---
Entry stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, {0x45f, 0x50b}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V579, 0x0, 0x0]
Exit stack: [V11, 0xa8, V123, V134, V154, S7, S6, S5, S4, {0x45f, 0x50b}, S2, S1, S0, V579, 0x0, 0x0]

================================

Block 0x64c
[0x64c:0x6db]
---
Predecessors: [0x612]
Successors: [0x8bd]
---
0x64c DUP3
0x64d SLOAD
0x64e PUSH32 0x8e9a28f0098c6c110a728df7c86a6e828976c9229df9b41ffaa12b3b8cb58cd1
0x66f SWAP1
0x670 DUP8
0x671 SWAP1
0x672 CALLER
0x673 SWAP1
0x674 DUP2
0x675 SWAP1
0x676 PUSH12 0xffffffffffffffffffffffff
0x683 AND
0x684 DUP10
0x685 PUSH1 0x40
0x687 MLOAD
0x688 SWAP5
0x689 DUP6
0x68a MSTORE
0x68b PUSH1 0x1
0x68d PUSH1 0xa0
0x68f PUSH1 0x2
0x691 EXP
0x692 SUB
0x693 SWAP4
0x694 DUP5
0x695 AND
0x696 PUSH1 0x20
0x698 DUP7
0x699 ADD
0x69a MSTORE
0x69b SWAP2
0x69c SWAP1
0x69d SWAP3
0x69e AND
0x69f PUSH1 0x40
0x6a1 DUP1
0x6a2 DUP6
0x6a3 ADD
0x6a4 SWAP2
0x6a5 SWAP1
0x6a6 SWAP2
0x6a7 MSTORE
0x6a8 PUSH12 0xffffffffffffffffffffffff
0x6b5 SWAP1
0x6b6 SWAP3
0x6b7 AND
0x6b8 PUSH1 0x60
0x6ba DUP5
0x6bb ADD
0x6bc MSTORE
0x6bd PUSH1 0x1
0x6bf PUSH1 0xe8
0x6c1 PUSH1 0x2
0x6c3 EXP
0x6c4 SUB
0x6c5 NOT
0x6c6 AND
0x6c7 PUSH1 0x80
0x6c9 DUP4
0x6ca ADD
0x6cb MSTORE
0x6cc PUSH1 0xa0
0x6ce SWAP1
0x6cf SWAP2
0x6d0 ADD
0x6d1 SWAP1
0x6d2 MLOAD
0x6d3 DUP1
0x6d4 SWAP2
0x6d5 SUB
0x6d6 SWAP1
0x6d7 LOG1
0x6d8 PUSH2 0x8bd
0x6db JUMP
---
0x64d: V594 = S[V579]
0x64e: V595 = 0x8e9a28f0098c6c110a728df7c86a6e828976c9229df9b41ffaa12b3b8cb58cd1
0x672: V596 = CALLER
0x676: V597 = 0xffffffffffffffffffffffff
0x683: V598 = AND 0xffffffffffffffffffffffff V594
0x685: V599 = 0x40
0x687: V600 = M[0x40]
0x68a: M[V600] = S5
0x68b: V601 = 0x1
0x68d: V602 = 0xa0
0x68f: V603 = 0x2
0x691: V604 = EXP 0x2 0xa0
0x692: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x695: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x696: V607 = 0x20
0x699: V608 = ADD V600 0x20
0x69a: M[V608] = V606
0x69e: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x69f: V610 = 0x40
0x6a3: V611 = ADD V600 0x40
0x6a7: M[V611] = V609
0x6a8: V612 = 0xffffffffffffffffffffffff
0x6b7: V613 = AND V598 0xffffffffffffffffffffffff
0x6b8: V614 = 0x60
0x6bb: V615 = ADD V600 0x60
0x6bc: M[V615] = V613
0x6bd: V616 = 0x1
0x6bf: V617 = 0xe8
0x6c1: V618 = 0x2
0x6c3: V619 = EXP 0x2 0xe8
0x6c4: V620 = SUB 0x10000000000000000000000000000000000000000000000000000000000 0x1
0x6c5: V621 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6c6: V622 = AND 0xffffff0000000000000000000000000000000000000000000000000000000000 S4
0x6c7: V623 = 0x80
0x6ca: V624 = ADD V600 0x80
0x6cb: M[V624] = V622
0x6cc: V625 = 0xa0
0x6d0: V626 = ADD V600 0xa0
0x6d2: V627 = M[0x40]
0x6d5: V628 = SUB V626 V627
0x6d7: LOG V627 V628 0x8e9a28f0098c6c110a728df7c86a6e828976c9229df9b41ffaa12b3b8cb58cd1
0x6d8: V629 = 0x8bd
0x6db: JUMP 0x8bd
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, V579, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, V579, 0x0, 0x0]

================================

Block 0x6dc
[0x6dc:0x6f1]
---
Predecessors: [0x612]
Successors: [0x6f2, 0x706]
---
0x6dc JUMPDEST
0x6dd DUP3
0x6de SLOAD
0x6df PUSH12 0xffffffffffffffffffffffff
0x6ec AND
0x6ed ISZERO
0x6ee PUSH2 0x706
0x6f1 JUMPI
---
0x6dc: JUMPDEST 
0x6de: V630 = S[V579]
0x6df: V631 = 0xffffffffffffffffffffffff
0x6ec: V632 = AND 0xffffffffffffffffffffffff V630
0x6ed: V633 = ISZERO V632
0x6ee: V634 = 0x706
0x6f1: JUMPI 0x706 V633
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, V579, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, V579, 0x0, 0x0]

================================

Block 0x6f2
[0x6f2:0x705]
---
Predecessors: [0x6dc]
Successors: [0x70a]
---
0x6f2 DUP3
0x6f3 SLOAD
0x6f4 PUSH12 0xffffffffffffffffffffffff
0x701 AND
0x702 PUSH2 0x70a
0x705 JUMP
---
0x6f3: V635 = S[V579]
0x6f4: V636 = 0xffffffffffffffffffffffff
0x701: V637 = AND 0xffffffffffffffffffffffff V635
0x702: V638 = 0x70a
0x705: JUMP 0x70a
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, V579, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V637]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, V579, 0x0, 0x0, V637]

================================

Block 0x706
[0x706:0x709]
---
Predecessors: [0x6dc]
Successors: [0x70a]
---
0x706 JUMPDEST
0x707 PUSH1 0x5
0x709 SLOAD
---
0x706: JUMPDEST 
0x707: V639 = 0x5
0x709: V640 = S[0x5]
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, V579, 0x0, 0x0]
Stack pops: 0
Stack additions: [V640]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, V579, 0x0, 0x0, V640]

================================

Block 0x70a
[0x70a:0x71a]
---
Predecessors: [0x6f2, 0x706]
Successors: [0x71b, 0x780]
---
0x70a JUMPDEST
0x70b SWAP2
0x70c POP
0x70d PUSH1 0xa
0x70f PUSH1 0xb
0x711 DUP4
0x712 MUL
0x713 DIV
0x714 DUP5
0x715 LT
0x716 ISZERO
0x717 PUSH2 0x780
0x71a JUMPI
---
0x70a: JUMPDEST 
0x70d: V641 = 0xa
0x70f: V642 = 0xb
0x712: V643 = MUL S0 0xb
0x713: V644 = DIV V643 0xa
0x715: V645 = LT S4 V644
0x716: V646 = ISZERO V645
0x717: V647 = 0x780
0x71a: JUMPI 0x780 V646
---
Entry stack: [V11, 0xa8, V123, V134, V154, S11, S10, S9, S8, {0x45f, 0x50b}, S6, S5, S4, S3, 0x0, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S0, S1]
Exit stack: [V11, 0xa8, V123, V134, V154, S11, S10, S9, S8, {0x45f, 0x50b}, S6, S5, S4, S3, S0, 0x0]

================================

Block 0x71b
[0x71b:0x77f]
---
Predecessors: [0x70a]
Successors: [0x8bd]
---
0x71b PUSH32 0x455700bdaca06953a01ba9e5570c4b353cf57478ee2efd9a0b30cb12ac5c5a79
0x73c DUP7
0x73d CALLER
0x73e DUP5
0x73f DUP9
0x740 PUSH1 0x40
0x742 MLOAD
0x743 SWAP4
0x744 DUP5
0x745 MSTORE
0x746 PUSH1 0x1
0x748 PUSH1 0xa0
0x74a PUSH1 0x2
0x74c EXP
0x74d SUB
0x74e SWAP1
0x74f SWAP3
0x750 AND
0x751 PUSH1 0x20
0x753 DUP5
0x754 ADD
0x755 MSTORE
0x756 PUSH1 0x40
0x758 DUP1
0x759 DUP5
0x75a ADD
0x75b SWAP2
0x75c SWAP1
0x75d SWAP2
0x75e MSTORE
0x75f PUSH1 0x1
0x761 PUSH1 0xe8
0x763 PUSH1 0x2
0x765 EXP
0x766 SUB
0x767 NOT
0x768 SWAP1
0x769 SWAP2
0x76a AND
0x76b PUSH1 0x60
0x76d DUP4
0x76e ADD
0x76f MSTORE
0x770 PUSH1 0x80
0x772 SWAP1
0x773 SWAP2
0x774 ADD
0x775 SWAP1
0x776 MLOAD
0x777 DUP1
0x778 SWAP2
0x779 SUB
0x77a SWAP1
0x77b LOG1
0x77c PUSH2 0x8bd
0x77f JUMP
---
0x71b: V648 = 0x455700bdaca06953a01ba9e5570c4b353cf57478ee2efd9a0b30cb12ac5c5a79
0x73d: V649 = CALLER
0x740: V650 = 0x40
0x742: V651 = M[0x40]
0x745: M[V651] = S5
0x746: V652 = 0x1
0x748: V653 = 0xa0
0x74a: V654 = 0x2
0x74c: V655 = EXP 0x2 0xa0
0x74d: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x750: V657 = AND V649 0xffffffffffffffffffffffffffffffffffffffff
0x751: V658 = 0x20
0x754: V659 = ADD V651 0x20
0x755: M[V659] = V657
0x756: V660 = 0x40
0x75a: V661 = ADD V651 0x40
0x75e: M[V661] = S1
0x75f: V662 = 0x1
0x761: V663 = 0xe8
0x763: V664 = 0x2
0x765: V665 = EXP 0x2 0xe8
0x766: V666 = SUB 0x10000000000000000000000000000000000000000000000000000000000 0x1
0x767: V667 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x76a: V668 = AND S4 0xffffff0000000000000000000000000000000000000000000000000000000000
0x76b: V669 = 0x60
0x76e: V670 = ADD V651 0x60
0x76f: M[V670] = V668
0x770: V671 = 0x80
0x774: V672 = ADD V651 0x80
0x776: V673 = M[0x40]
0x779: V674 = SUB V672 V673
0x77b: LOG V673 V674 0x455700bdaca06953a01ba9e5570c4b353cf57478ee2efd9a0b30cb12ac5c5a79
0x77c: V675 = 0x8bd
0x77f: JUMP 0x8bd
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x780
[0x780:0x78b]
---
Predecessors: [0x70a]
Successors: [0x78c, 0x792]
---
0x780 JUMPDEST
0x781 DUP2
0x782 PUSH1 0x2
0x784 MUL
0x785 DUP5
0x786 GT
0x787 ISZERO
0x788 PUSH2 0x792
0x78b JUMPI
---
0x780: JUMPDEST 
0x782: V676 = 0x2
0x784: V677 = MUL 0x2 S1
0x786: V678 = GT S3 V677
0x787: V679 = ISZERO V678
0x788: V680 = 0x792
0x78b: JUMPI 0x792 V679
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x78c
[0x78c:0x791]
---
Predecessors: [0x780]
Successors: [0x792]
---
0x78c DUP2
0x78d PUSH1 0x2
0x78f MUL
0x790 SWAP4
0x791 POP
---
0x78d: V681 = 0x2
0x78f: V682 = MUL 0x2 S1
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V682, S2, S1, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, V682, S2, S1, 0x0]

================================

Block 0x792
[0x792:0x7c1]
---
Predecessors: [0x780, 0x78c]
Successors: [0x7c2, 0x7c6]
---
0x792 JUMPDEST
0x793 DUP3
0x794 SLOAD
0x795 PUSH12 0xffffffffffffffffffffffff
0x7a2 NOT
0x7a3 AND
0x7a4 PUSH12 0xffffffffffffffffffffffff
0x7b1 DUP6
0x7b2 DUP2
0x7b3 AND
0x7b4 SWAP2
0x7b5 SWAP1
0x7b6 SWAP2
0x7b7 OR
0x7b8 DUP1
0x7b9 DUP6
0x7ba SSTORE
0x7bb AND
0x7bc DUP5
0x7bd EQ
0x7be PUSH2 0x7c6
0x7c1 JUMPI
---
0x792: JUMPDEST 
0x794: V683 = S[S2]
0x795: V684 = 0xffffffffffffffffffffffff
0x7a2: V685 = NOT 0xffffffffffffffffffffffff
0x7a3: V686 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V683
0x7a4: V687 = 0xffffffffffffffffffffffff
0x7b3: V688 = AND 0xffffffffffffffffffffffff S3
0x7b7: V689 = OR V688 V686
0x7ba: S[S2] = V689
0x7bb: V690 = AND V689 0xffffffffffffffffffffffff
0x7bd: V691 = EQ S3 V690
0x7be: V692 = 0x7c6
0x7c1: JUMPI 0x7c6 V691
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x7c2
[0x7c2:0x7c5]
---
Predecessors: [0x792]
Successors: []
---
0x7c2 PUSH1 0x0
0x7c4 DUP1
0x7c5 REVERT
---
0x7c2: V693 = 0x0
0x7c5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x7c6
[0x7c6:0x88f]
---
Predecessors: [0x792]
Successors: [0x890, 0x8bd]
---
0x7c6 JUMPDEST
0x7c7 POP
0x7c8 DUP2
0x7c9 SLOAD
0x7ca PUSH12 0xffffffffffffffffffffffff
0x7d7 DUP1
0x7d8 DUP3
0x7d9 AND
0x7da PUSH13 0x1000000000000000000000000
0x7e8 PUSH1 0x1
0x7ea PUSH1 0xa0
0x7ec PUSH1 0x2
0x7ee EXP
0x7ef SUB
0x7f0 CALLER
0x7f1 DUP2
0x7f2 DUP2
0x7f3 AND
0x7f4 DUP4
0x7f5 MUL
0x7f6 SWAP4
0x7f7 SWAP1
0x7f8 SWAP4
0x7f9 OR
0x7fa DUP1
0x7fb DUP9
0x7fc SSTORE
0x7fd SWAP2
0x7fe SWAP1
0x7ff SWAP5
0x800 DIV
0x801 SWAP1
0x802 SWAP4
0x803 AND
0x804 SWAP3
0x805 PUSH32 0x8e9a28f0098c6c110a728df7c86a6e828976c9229df9b41ffaa12b3b8cb58cd1
0x826 SWAP3
0x827 DUP10
0x828 SWAP3
0x829 SWAP2
0x82a DUP6
0x82b SWAP2
0x82c AND
0x82d DUP10
0x82e PUSH1 0x40
0x830 MLOAD
0x831 SWAP5
0x832 DUP6
0x833 MSTORE
0x834 PUSH1 0x1
0x836 PUSH1 0xa0
0x838 PUSH1 0x2
0x83a EXP
0x83b SUB
0x83c SWAP4
0x83d DUP5
0x83e AND
0x83f PUSH1 0x20
0x841 DUP7
0x842 ADD
0x843 MSTORE
0x844 SWAP2
0x845 SWAP1
0x846 SWAP3
0x847 AND
0x848 PUSH1 0x40
0x84a DUP1
0x84b DUP6
0x84c ADD
0x84d SWAP2
0x84e SWAP1
0x84f SWAP2
0x850 MSTORE
0x851 PUSH12 0xffffffffffffffffffffffff
0x85e SWAP1
0x85f SWAP3
0x860 AND
0x861 PUSH1 0x60
0x863 DUP5
0x864 ADD
0x865 MSTORE
0x866 PUSH1 0x1
0x868 PUSH1 0xe8
0x86a PUSH1 0x2
0x86c EXP
0x86d SUB
0x86e NOT
0x86f AND
0x870 PUSH1 0x80
0x872 DUP4
0x873 ADD
0x874 MSTORE
0x875 PUSH1 0xa0
0x877 SWAP1
0x878 SWAP2
0x879 ADD
0x87a SWAP1
0x87b MLOAD
0x87c DUP1
0x87d SWAP2
0x87e SUB
0x87f SWAP1
0x880 LOG1
0x881 PUSH1 0x1
0x883 PUSH1 0xa0
0x885 PUSH1 0x2
0x887 EXP
0x888 SUB
0x889 DUP2
0x88a AND
0x88b ISZERO
0x88c PUSH2 0x8bd
0x88f JUMPI
---
0x7c6: JUMPDEST 
0x7c9: V694 = S[S2]
0x7ca: V695 = 0xffffffffffffffffffffffff
0x7d9: V696 = AND V694 0xffffffffffffffffffffffff
0x7da: V697 = 0x1000000000000000000000000
0x7e8: V698 = 0x1
0x7ea: V699 = 0xa0
0x7ec: V700 = 0x2
0x7ee: V701 = EXP 0x2 0xa0
0x7ef: V702 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f0: V703 = CALLER
0x7f3: V704 = AND V703 0xffffffffffffffffffffffffffffffffffffffff
0x7f5: V705 = MUL 0x1000000000000000000000000 V704
0x7f9: V706 = OR V705 V696
0x7fc: S[S2] = V706
0x800: V707 = DIV V694 0x1000000000000000000000000
0x803: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V707
0x805: V709 = 0x8e9a28f0098c6c110a728df7c86a6e828976c9229df9b41ffaa12b3b8cb58cd1
0x82c: V710 = AND 0xffffffffffffffffffffffff V706
0x82e: V711 = 0x40
0x830: V712 = M[0x40]
0x833: M[V712] = S5
0x834: V713 = 0x1
0x836: V714 = 0xa0
0x838: V715 = 0x2
0x83a: V716 = EXP 0x2 0xa0
0x83b: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83e: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0x83f: V719 = 0x20
0x842: V720 = ADD V712 0x20
0x843: M[V720] = V718
0x847: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0x848: V722 = 0x40
0x84c: V723 = ADD V712 0x40
0x850: M[V723] = V721
0x851: V724 = 0xffffffffffffffffffffffff
0x860: V725 = AND V710 0xffffffffffffffffffffffff
0x861: V726 = 0x60
0x864: V727 = ADD V712 0x60
0x865: M[V727] = V725
0x866: V728 = 0x1
0x868: V729 = 0xe8
0x86a: V730 = 0x2
0x86c: V731 = EXP 0x2 0xe8
0x86d: V732 = SUB 0x10000000000000000000000000000000000000000000000000000000000 0x1
0x86e: V733 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x86f: V734 = AND 0xffffff0000000000000000000000000000000000000000000000000000000000 S4
0x870: V735 = 0x80
0x873: V736 = ADD V712 0x80
0x874: M[V736] = V734
0x875: V737 = 0xa0
0x879: V738 = ADD V712 0xa0
0x87b: V739 = M[0x40]
0x87e: V740 = SUB V738 V739
0x880: LOG V739 V740 0x8e9a28f0098c6c110a728df7c86a6e828976c9229df9b41ffaa12b3b8cb58cd1
0x881: V741 = 0x1
0x883: V742 = 0xa0
0x885: V743 = 0x2
0x887: V744 = EXP 0x2 0xa0
0x888: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88a: V746 = AND V708 0xffffffffffffffffffffffffffffffffffffffff
0x88b: V747 = ISZERO V746
0x88c: V748 = 0x8bd
0x88f: JUMPI 0x8bd V747
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V708]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, V708]

================================

Block 0x890
[0x890:0x8bc]
---
Predecessors: [0x7c6]
Successors: [0x8bd]
---
0x890 PUSH1 0x1
0x892 PUSH1 0xa0
0x894 PUSH1 0x2
0x896 EXP
0x897 SUB
0x898 DUP2
0x899 AND
0x89a PUSH1 0x64
0x89c PUSH1 0x62
0x89e DUP7
0x89f MUL
0x8a0 DIV
0x8a1 DUP1
0x8a2 ISZERO
0x8a3 PUSH2 0x8fc
0x8a6 MUL
0x8a7 SWAP1
0x8a8 PUSH1 0x40
0x8aa MLOAD
0x8ab PUSH1 0x0
0x8ad PUSH1 0x40
0x8af MLOAD
0x8b0 DUP1
0x8b1 DUP4
0x8b2 SUB
0x8b3 DUP2
0x8b4 DUP6
0x8b5 DUP9
0x8b6 DUP9
0x8b7 CALL
0x8b8 POP
0x8b9 POP
0x8ba POP
0x8bb POP
0x8bc POP
---
0x890: V749 = 0x1
0x892: V750 = 0xa0
0x894: V751 = 0x2
0x896: V752 = EXP 0x2 0xa0
0x897: V753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x899: V754 = AND V708 0xffffffffffffffffffffffffffffffffffffffff
0x89a: V755 = 0x64
0x89c: V756 = 0x62
0x89f: V757 = MUL S3 0x62
0x8a0: V758 = DIV V757 0x64
0x8a2: V759 = ISZERO V758
0x8a3: V760 = 0x8fc
0x8a6: V761 = MUL 0x8fc V759
0x8a8: V762 = 0x40
0x8aa: V763 = M[0x40]
0x8ab: V764 = 0x0
0x8ad: V765 = 0x40
0x8af: V766 = M[0x40]
0x8b2: V767 = SUB V763 V766
0x8b7: V768 = CALL V761 V754 V758 V766 V767 V766 0x0
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, V708]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, V708]

================================

Block 0x8bd
[0x8bd:0x8c4]
---
Predecessors: [0x64c, 0x71b, 0x7c6, 0x890]
Successors: [0x45f, 0x50b]
---
0x8bd JUMPDEST
0x8be POP
0x8bf POP
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 POP
0x8c4 JUMP
---
0x8bd: JUMPDEST 
0x8c4: JUMP {0x45f, 0x50b}
---
Entry stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7, {0x45f, 0x50b}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V11, 0xa8, V123, V134, V154, S10, S9, S8, S7]

================================

Block 0x8c5
[0x8c5:0x8d6]
---
Predecessors: [0x2b2]
Successors: [0x2bc]
---
0x8c5 JUMPDEST
0x8c6 PUSH1 0x20
0x8c8 PUSH1 0x40
0x8ca MLOAD
0x8cb SWAP1
0x8cc DUP2
0x8cd ADD
0x8ce PUSH1 0x40
0x8d0 MSTORE
0x8d1 PUSH1 0x0
0x8d3 DUP2
0x8d4 MSTORE
0x8d5 SWAP1
0x8d6 JUMP
---
0x8c5: JUMPDEST 
0x8c6: V769 = 0x20
0x8c8: V770 = 0x40
0x8ca: V771 = M[0x40]
0x8cd: V772 = ADD V771 0x20
0x8ce: V773 = 0x40
0x8d0: M[0x40] = V772
0x8d1: V774 = 0x0
0x8d4: M[V771] = 0x0
0x8d6: JUMP 0x2bc
---
Entry stack: [V11, 0xbd, 0x0, 0x2bc]
Stack pops: 1
Stack additions: [V771]
Exit stack: [V11, 0xbd, 0x0, V771]

================================

Block 0x8d7
[0x8d7:0x8e1]
---
Predecessors: []
Successors: [0x8e2]
Has unresolved jump.
---
0x8d7 STOP
0x8d8 LOG1
0x8d9 PUSH6 0x627a7a723058
0x8e0 SHA3
0x8e1 JUMPI
---
0x8d7: STOP 
0x8d8: LOG S0 S1 S2
0x8d9: V775 = 0x627a7a723058
0x8e0: V776 = SHA3 0x627a7a723058 S3
0x8e1: JUMPI V776 S4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8e2
[0x8e2:0x918]
---
Predecessors: [0x8d7]
Successors: []
---
0x8e2 MISSING 0xb5
0x8e3 DUP11
0x8e4 MISSING 0xd2
0x8e5 MISSING 0xdb
0x8e6 PUSH21 0x76897e8bb22868d1b9f60e5cf99d49fdcd3dc5efd5
0x8fc MISSING 0xa9
0x8fd BALANCE
0x8fe DUP1
0x8ff PUSH25 0x550029
---
0x8e2: MISSING 0xb5
0x8e4: MISSING 0xd2
0x8e5: MISSING 0xdb
0x8e6: V777 = 0x76897e8bb22868d1b9f60e5cf99d49fdcd3dc5efd5
0x8fc: MISSING 0xa9
0x8fd: V778 = BALANCE S0
0x8ff: V779 = 0x550029
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x76897e8bb22868d1b9f60e5cf99d49fdcd3dc5efd5, 0x550029, V778, V778]
Exit stack: []

================================

Function 0:
Public function signature: 0x47ba641
Entry block: 0x92
Exit block: 0xa8
Body: 0x92, 0x99, 0x9d, 0xa8, 0x284, 0x29b, 0x29f, 0x2a9, 0x2ad

Function 1:
Public function signature: 0x1594060a
Entry block: 0xaa
Exit block: 0x102
Body: 0xaa, 0xb1, 0xb5, 0xbd, 0xea, 0xf3, 0x102, 0x2b2, 0x2bc, 0x2e8, 0x2f8, 0x30c, 0x8c5

Function 2:
Public function signature: 0x25cfa566
Entry block: 0x117
Exit block: 0x12a
Body: 0x117, 0x11e, 0x122, 0x12a, 0x31b

Function 3:
Public function signature: 0x384f58eb
Entry block: 0x13c
Exit block: 0x14f
Body: 0x13c, 0x143, 0x147, 0x14f, 0x321

Function 4:
Public function signature: 0x5b6b431d
Entry block: 0x16b
Exit block: 0xa8
Body: 0xa8, 0x16b, 0x172, 0x176, 0x330, 0x347, 0x34b, 0x35e, 0x36a, 0x399, 0x39d

Function 5:
Public function signature: 0x9cccb272
Entry block: 0x181
Exit block: 0x7c2
Body: 0xa8, 0x181, 0x3a0, 0x3ac, 0x3b3, 0x3c2, 0x3cf, 0x3d0, 0x3e4, 0x3f3, 0x3f4, 0x401, 0x408, 0x40c, 0x41d, 0x41e, 0x436, 0x437, 0x44f, 0x450, 0x45f, 0x46d, 0x46e, 0x484, 0x50b, 0x612, 0x64c, 0x6dc, 0x6f2, 0x706, 0x70a, 0x71b, 0x780, 0x78c, 0x792, 0x7c2, 0x7c6, 0x890, 0x8bd

Function 6:
Public function signature: 0xcfaaa266
Entry block: 0x24d
Exit block: 0xa8
Body: 0xa8, 0x24d, 0x254, 0x258, 0x48d, 0x4a4, 0x4a8, 0x4b9, 0x4bd

Function 7:
Public function signature: 0xf0bf1aea
Entry block: 0x26c
Exit block: 0x44f
Body: 0xa8, 0x26c, 0x3b3, 0x3c2, 0x3cf, 0x3d0, 0x3e4, 0x3f3, 0x3f4, 0x401, 0x408, 0x40c, 0x41d, 0x41e, 0x436, 0x437, 0x44f, 0x450, 0x45f, 0x46d, 0x46e, 0x484, 0x4ec, 0x4f4, 0x4fc, 0x500, 0x50b, 0x612, 0x64c, 0x6dc, 0x6f2, 0x706, 0x70a, 0x71b, 0x780, 0x78c, 0x792, 0x7c2, 0x7c6, 0x890, 0x8bd

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

Function 9:
Private function
Entry block: 0x50f
Exit block: 0x60e
Body: 0x50f, 0x51d, 0x526, 0x53d, 0x551, 0x562, 0x574, 0x576, 0x585, 0x599, 0x5ab, 0x5bd, 0x5bf, 0x5ce, 0x5e2, 0x5f3, 0x605, 0x607, 0x60e

