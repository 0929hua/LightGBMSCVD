Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3b
0xa: JUMPI 0x3b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x40dc4197
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x40dc4197
0x20: V14 = EQ V12 0x40dc4197
0x21: V15 = 0x7d
0x24: JUMPI 0x7d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xa4]
---
0x25 DUP1
0x26 PUSH4 0x8da5cb5b
0x2b EQ
0x2c PUSH2 0xa4
0x2f JUMPI
---
0x26: V16 = 0x8da5cb5b
0x2b: V17 = EQ 0x8da5cb5b V12
0x2c: V18 = 0xa4
0x2f: JUMPI 0xa4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xd3]
---
0x30 DUP1
0x31 PUSH4 0xf2fde38b
0x36 EQ
0x37 PUSH2 0xd3
0x3a JUMPI
---
0x31: V19 = 0xf2fde38b
0x36: V20 = EQ 0xf2fde38b V12
0x37: V21 = 0xd3
0x3a: JUMPI 0xd3 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x3e]
---
Predecessors: [0x0, 0x30]
Successors: [0x3f]
---
0x3b JUMPDEST
0x3c PUSH2 0x7b
---
0x3b: JUMPDEST 
0x3c: V22 = 0x7b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7b]
Exit stack: [V12, 0x7b]

================================

Block 0x3f
[0x3f:0x73]
---
Predecessors: [0x3b]
Successors: [0x74, 0x78]
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 SLOAD
0x43 PUSH1 0x1
0x45 PUSH1 0xa0
0x47 PUSH1 0x2
0x49 EXP
0x4a SUB
0x4b SWAP1
0x4c DUP2
0x4d AND
0x4e SWAP1
0x4f ADDRESS
0x50 AND
0x51 BALANCE
0x52 DUP1
0x53 ISZERO
0x54 PUSH2 0x8fc
0x57 MUL
0x58 SWAP1
0x59 PUSH1 0x40
0x5b MLOAD
0x5c PUSH1 0x0
0x5e PUSH1 0x40
0x60 MLOAD
0x61 DUP1
0x62 DUP4
0x63 SUB
0x64 DUP2
0x65 DUP6
0x66 DUP9
0x67 DUP9
0x68 CALL
0x69 SWAP4
0x6a POP
0x6b POP
0x6c POP
0x6d POP
0x6e ISZERO
0x6f ISZERO
0x70 PUSH2 0x78
0x73 JUMPI
---
0x3f: JUMPDEST 
0x40: V23 = 0x0
0x42: V24 = S[0x0]
0x43: V25 = 0x1
0x45: V26 = 0xa0
0x47: V27 = 0x2
0x49: V28 = EXP 0x2 0xa0
0x4a: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x4f: V31 = ADDRESS
0x50: V32 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x51: V33 = BALANCE V32
0x53: V34 = ISZERO V33
0x54: V35 = 0x8fc
0x57: V36 = MUL 0x8fc V34
0x59: V37 = 0x40
0x5b: V38 = M[0x40]
0x5c: V39 = 0x0
0x5e: V40 = 0x40
0x60: V41 = M[0x40]
0x63: V42 = SUB V38 V41
0x68: V43 = CALL V36 V30 V33 V41 V42 V41 0x0
0x6e: V44 = ISZERO V43
0x6f: V45 = ISZERO V44
0x70: V46 = 0x78
0x73: JUMPI 0x78 V45
---
Entry stack: [V12, 0x7b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b]

================================

Block 0x74
[0x74:0x77]
---
Predecessors: [0x3f]
Successors: []
---
0x74 PUSH1 0x0
0x76 DUP1
0x77 REVERT
---
0x74: V47 = 0x0
0x77: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b]

================================

Block 0x78
[0x78:0x78]
---
Predecessors: [0x3f]
Successors: [0x79]
---
0x78 JUMPDEST
---
0x78: JUMPDEST 
---
Entry stack: [V12, 0x7b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b]

================================

Block 0x79
[0x79:0x7a]
---
Predecessors: [0x78]
Successors: [0x7b]
---
0x79 JUMPDEST
0x7a JUMP
---
0x79: JUMPDEST 
0x7a: JUMP 0x7b
---
Entry stack: [V12, 0x7b]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b
[0x7b:0x7c]
---
Predecessors: [0x79, 0x247, 0x2a5]
Successors: []
---
0x7b JUMPDEST
0x7c STOP
---
0x7b: JUMPDEST 
0x7c: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xb]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V48 = CALLVALUE
0x7f: V49 = ISZERO V48
0x80: V50 = 0x88
0x83: JUMPI 0x88 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V51 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0xa1]
---
Predecessors: [0x7d]
Successors: [0xf4]
---
0x88 JUMPDEST
0x89 PUSH2 0x7b
0x8c PUSH1 0x1
0x8e PUSH1 0xa0
0x90 PUSH1 0x2
0x92 EXP
0x93 SUB
0x94 PUSH1 0x4
0x96 CALLDATALOAD
0x97 DUP2
0x98 AND
0x99 SWAP1
0x9a PUSH1 0x24
0x9c CALLDATALOAD
0x9d AND
0x9e PUSH2 0xf4
0xa1 JUMP
---
0x88: JUMPDEST 
0x89: V52 = 0x7b
0x8c: V53 = 0x1
0x8e: V54 = 0xa0
0x90: V55 = 0x2
0x92: V56 = EXP 0x2 0xa0
0x93: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94: V58 = 0x4
0x96: V59 = CALLDATALOAD 0x4
0x98: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x9a: V61 = 0x24
0x9c: V62 = CALLDATALOAD 0x24
0x9d: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x9e: V64 = 0xf4
0xa1: JUMP 0xf4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7b, V60, V63]
Exit stack: [V12, 0x7b, V60, V63]

================================

Block 0xa2
[0xa2:0xa3]
---
Predecessors: []
Successors: []
---
0xa2 JUMPDEST
0xa3 STOP
---
0xa2: JUMPDEST 
0xa3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa4
[0xa4:0xaa]
---
Predecessors: [0x25]
Successors: [0xab, 0xaf]
---
0xa4 JUMPDEST
0xa5 CALLVALUE
0xa6 ISZERO
0xa7 PUSH2 0xaf
0xaa JUMPI
---
0xa4: JUMPDEST 
0xa5: V65 = CALLVALUE
0xa6: V66 = ISZERO V65
0xa7: V67 = 0xaf
0xaa: JUMPI 0xaf V66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xab
[0xab:0xae]
---
Predecessors: [0xa4]
Successors: []
---
0xab PUSH1 0x0
0xad DUP1
0xae REVERT
---
0xab: V68 = 0x0
0xae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaf
[0xaf:0xb6]
---
Predecessors: [0xa4]
Successors: [0x24e]
---
0xaf JUMPDEST
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x24e
0xb6 JUMP
---
0xaf: JUMPDEST 
0xb0: V69 = 0xb7
0xb3: V70 = 0x24e
0xb6: JUMP 0x24e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb7]
Exit stack: [V12, 0xb7]

================================

Block 0xb7
[0xb7:0xd2]
---
Predecessors: [0x24e]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba MLOAD
0xbb PUSH1 0x1
0xbd PUSH1 0xa0
0xbf PUSH1 0x2
0xc1 EXP
0xc2 SUB
0xc3 SWAP1
0xc4 SWAP2
0xc5 AND
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf SWAP2
0xd0 SUB
0xd1 SWAP1
0xd2 RETURN
---
0xb7: JUMPDEST 
0xb8: V71 = 0x40
0xba: V72 = M[0x40]
0xbb: V73 = 0x1
0xbd: V74 = 0xa0
0xbf: V75 = 0x2
0xc1: V76 = EXP 0x2 0xa0
0xc2: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V78 = AND V254 0xffffffffffffffffffffffffffffffffffffffff
0xc7: M[V72] = V78
0xc8: V79 = 0x20
0xca: V80 = ADD 0x20 V72
0xcb: V81 = 0x40
0xcd: V82 = M[0x40]
0xd0: V83 = SUB V80 V82
0xd2: RETURN V82 V83
---
Entry stack: [V12, 0xb7, V254]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xb7]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0x30]
Successors: [0xda, 0xde]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xd3: JUMPDEST 
0xd4: V84 = CALLVALUE
0xd5: V85 = ISZERO V84
0xd6: V86 = 0xde
0xd9: JUMPI 0xde V85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xd3]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V87 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xde
[0xde:0xf1]
---
Predecessors: [0xd3]
Successors: [0x25d]
---
0xde JUMPDEST
0xdf PUSH2 0x7b
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea PUSH1 0x4
0xec CALLDATALOAD
0xed AND
0xee PUSH2 0x25d
0xf1 JUMP
---
0xde: JUMPDEST 
0xdf: V88 = 0x7b
0xe2: V89 = 0x1
0xe4: V90 = 0xa0
0xe6: V91 = 0x2
0xe8: V92 = EXP 0x2 0xa0
0xe9: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea: V94 = 0x4
0xec: V95 = CALLDATALOAD 0x4
0xed: V96 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0xee: V97 = 0x25d
0xf1: JUMP 0x25d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7b, V96]
Exit stack: [V12, 0x7b, V96]

================================

Block 0xf2
[0xf2:0xf3]
---
Predecessors: []
Successors: []
---
0xf2 JUMPDEST
0xf3 STOP
---
0xf2: JUMPDEST 
0xf3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf4
[0xf4:0x10f]
---
Predecessors: [0x88]
Successors: [0x110, 0x114]
---
0xf4 JUMPDEST
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 SLOAD
0xf9 DUP2
0xfa SWAP1
0xfb DUP2
0xfc SWAP1
0xfd CALLER
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 DUP2
0x108 AND
0x109 SWAP2
0x10a AND
0x10b EQ
0x10c PUSH2 0x114
0x10f JUMPI
---
0xf4: JUMPDEST 
0xf5: V98 = 0x0
0xf8: V99 = S[0x0]
0xfd: V100 = CALLER
0xfe: V101 = 0x1
0x100: V102 = 0xa0
0x102: V103 = 0x2
0x104: V104 = EXP 0x2 0xa0
0x105: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x10a: V107 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V108 = EQ V107 V106
0x10c: V109 = 0x114
0x10f: JUMPI 0x114 V108
---
Entry stack: [V12, 0x7b, V60, V63]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x7b, V60, V63, 0x0, 0x0, 0x0]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0xf4]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V110 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, V60, V63, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, 0x0, 0x0, 0x0]

================================

Block 0x114
[0x114:0x124]
---
Predecessors: [0xf4]
Successors: [0x125, 0x129]
---
0x114 JUMPDEST
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d DUP6
0x11e AND
0x11f ISZERO
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0x114: JUMPDEST 
0x115: V111 = 0x1
0x117: V112 = 0xa0
0x119: V113 = 0x2
0x11b: V114 = EXP 0x2 0xa0
0x11c: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V116 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V117 = ISZERO V116
0x120: V118 = ISZERO V117
0x121: V119 = 0x129
0x124: JUMPI 0x129 V118
---
Entry stack: [V12, 0x7b, V60, V63, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x7b, V60, V63, 0x0, 0x0, 0x0]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x114]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V120 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, V60, V63, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, 0x0, 0x0, 0x0]

================================

Block 0x129
[0x129:0x17e]
---
Predecessors: [0x114]
Successors: [0x17f, 0x183]
---
0x129 JUMPDEST
0x12a DUP5
0x12b SWAP3
0x12c POP
0x12d DUP3
0x12e PUSH1 0x1
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SUB
0x136 AND
0x137 PUSH4 0x70a08231
0x13c ADDRESS
0x13d PUSH1 0x0
0x13f PUSH1 0x40
0x141 MLOAD
0x142 PUSH1 0x20
0x144 ADD
0x145 MSTORE
0x146 PUSH1 0x40
0x148 MLOAD
0x149 PUSH1 0xe0
0x14b PUSH1 0x2
0x14d EXP
0x14e PUSH4 0xffffffff
0x153 DUP5
0x154 AND
0x155 MUL
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 SWAP1
0x161 SWAP2
0x162 AND
0x163 PUSH1 0x4
0x165 DUP3
0x166 ADD
0x167 MSTORE
0x168 PUSH1 0x24
0x16a ADD
0x16b PUSH1 0x20
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 DUP4
0x172 SUB
0x173 DUP2
0x174 PUSH1 0x0
0x176 DUP8
0x177 DUP1
0x178 EXTCODESIZE
0x179 ISZERO
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x129: JUMPDEST 
0x12e: V121 = 0x1
0x130: V122 = 0xa0
0x132: V123 = 0x2
0x134: V124 = EXP 0x2 0xa0
0x135: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x137: V127 = 0x70a08231
0x13c: V128 = ADDRESS
0x13d: V129 = 0x0
0x13f: V130 = 0x40
0x141: V131 = M[0x40]
0x142: V132 = 0x20
0x144: V133 = ADD 0x20 V131
0x145: M[V133] = 0x0
0x146: V134 = 0x40
0x148: V135 = M[0x40]
0x149: V136 = 0xe0
0x14b: V137 = 0x2
0x14d: V138 = EXP 0x2 0xe0
0x14e: V139 = 0xffffffff
0x154: V140 = AND 0x70a08231 0xffffffff
0x155: V141 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x157: M[V135] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x158: V142 = 0x1
0x15a: V143 = 0xa0
0x15c: V144 = 0x2
0x15e: V145 = EXP 0x2 0xa0
0x15f: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x162: V147 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x163: V148 = 0x4
0x166: V149 = ADD V135 0x4
0x167: M[V149] = V147
0x168: V150 = 0x24
0x16a: V151 = ADD 0x24 V135
0x16b: V152 = 0x20
0x16d: V153 = 0x40
0x16f: V154 = M[0x40]
0x172: V155 = SUB V151 V154
0x174: V156 = 0x0
0x178: V157 = EXTCODESIZE V126
0x179: V158 = ISZERO V157
0x17a: V159 = ISZERO V158
0x17b: V160 = 0x183
0x17e: JUMPI 0x183 V159
---
Entry stack: [V12, 0x7b, V60, V63, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S4, S1, S0, V126, 0x70a08231, V151, 0x20, V154, V155, V154, 0x0, V126]
Exit stack: [V12, 0x7b, V60, V63, V60, 0x0, 0x0, V126, 0x70a08231, V151, 0x20, V154, V155, V154, 0x0, V126]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x129]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V161 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, V60, V63, V60, 0x0, 0x0, V126, 0x70a08231, V151, 0x20, V154, V155, V154, 0x0, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, 0x0, 0x0, V126, 0x70a08231, V151, 0x20, V154, V155, V154, 0x0, V126]

================================

Block 0x183
[0x183:0x18f]
---
Predecessors: [0x129]
Successors: [0x190, 0x194]
---
0x183 JUMPDEST
0x184 PUSH2 0x2c6
0x187 GAS
0x188 SUB
0x189 CALL
0x18a ISZERO
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x183: JUMPDEST 
0x184: V162 = 0x2c6
0x187: V163 = GAS
0x188: V164 = SUB V163 0x2c6
0x189: V165 = CALL V164 V126 0x0 V154 V155 V154 0x20
0x18a: V166 = ISZERO V165
0x18b: V167 = ISZERO V166
0x18c: V168 = 0x194
0x18f: JUMPI 0x194 V167
---
Entry stack: [V12, 0x7b, V60, V63, V60, 0x0, 0x0, V126, 0x70a08231, V151, 0x20, V154, V155, V154, 0x0, V126]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, 0x0, 0x0, V126, 0x70a08231, V151]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x183]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V169 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, V60, V63, V60, 0x0, 0x0, V126, 0x70a08231, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, 0x0, 0x0, V126, 0x70a08231, V151]

================================

Block 0x194
[0x194:0x1b2]
---
Predecessors: [0x183]
Successors: [0x1b3, 0x1c0]
---
0x194 JUMPDEST
0x195 POP
0x196 POP
0x197 POP
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c MLOAD
0x19d SWAP3
0x19e POP
0x19f DUP5
0x1a0 SWAP2
0x1a1 POP
0x1a2 POP
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab DUP2
0x1ac AND
0x1ad ISZERO
0x1ae ISZERO
0x1af PUSH2 0x1c0
0x1b2 JUMPI
---
0x194: JUMPDEST 
0x198: V170 = 0x40
0x19a: V171 = M[0x40]
0x19c: V172 = M[V171]
0x1a3: V173 = 0x1
0x1a5: V174 = 0xa0
0x1a7: V175 = 0x2
0x1a9: V176 = EXP 0x2 0xa0
0x1aa: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ac: V178 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V179 = ISZERO V178
0x1ae: V180 = ISZERO V179
0x1af: V181 = 0x1c0
0x1b2: JUMPI 0x1c0 V180
---
Entry stack: [V12, 0x7b, V60, V63, V60, 0x0, 0x0, V126, 0x70a08231, V151]
Stack pops: 7
Stack additions: [S6, S5, V172, S6]
Exit stack: [V12, 0x7b, V60, V63, V60, V172, V63]

================================

Block 0x1b3
[0x1b3:0x1bf]
---
Predecessors: [0x194]
Successors: [0x1c0]
---
0x1b3 POP
0x1b4 PUSH1 0x0
0x1b6 SLOAD
0x1b7 PUSH1 0x1
0x1b9 PUSH1 0xa0
0x1bb PUSH1 0x2
0x1bd EXP
0x1be SUB
0x1bf AND
---
0x1b4: V182 = 0x0
0x1b6: V183 = S[0x0]
0x1b7: V184 = 0x1
0x1b9: V185 = 0xa0
0x1bb: V186 = 0x2
0x1bd: V187 = EXP 0x2 0xa0
0x1be: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bf: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, V63]
Stack pops: 1
Stack additions: [V189]
Exit stack: [V12, 0x7b, V60, V63, V60, V172, V189]

================================

Block 0x1c0
[0x1c0:0x1c8]
---
Predecessors: [0x194, 0x1b3]
Successors: [0x1c9, 0x1cd]
---
0x1c0 JUMPDEST
0x1c1 PUSH1 0x0
0x1c3 DUP3
0x1c4 GT
0x1c5 PUSH2 0x1cd
0x1c8 JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V190 = 0x0
0x1c4: V191 = GT V172 0x0
0x1c5: V192 = 0x1cd
0x1c8: JUMPI 0x1cd V191
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7b, V60, V63, V60, V172, S0]

================================

Block 0x1c9
[0x1c9:0x1cc]
---
Predecessors: [0x1c0]
Successors: []
---
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc REVERT
---
0x1c9: V193 = 0x0
0x1cc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, V172, S0]

================================

Block 0x1cd
[0x1cd:0x225]
---
Predecessors: [0x1c0]
Successors: [0x226, 0x22a]
---
0x1cd JUMPDEST
0x1ce DUP3
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 AND
0x1d8 PUSH4 0xa9059cbb
0x1dd DUP3
0x1de DUP5
0x1df PUSH1 0x0
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 MSTORE
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb PUSH1 0xe0
0x1ed PUSH1 0x2
0x1ef EXP
0x1f0 PUSH4 0xffffffff
0x1f5 DUP6
0x1f6 AND
0x1f7 MUL
0x1f8 DUP2
0x1f9 MSTORE
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 SWAP1
0x203 SWAP3
0x204 AND
0x205 PUSH1 0x4
0x207 DUP4
0x208 ADD
0x209 MSTORE
0x20a PUSH1 0x24
0x20c DUP3
0x20d ADD
0x20e MSTORE
0x20f PUSH1 0x44
0x211 ADD
0x212 PUSH1 0x20
0x214 PUSH1 0x40
0x216 MLOAD
0x217 DUP1
0x218 DUP4
0x219 SUB
0x21a DUP2
0x21b PUSH1 0x0
0x21d DUP8
0x21e DUP1
0x21f EXTCODESIZE
0x220 ISZERO
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x1cd: JUMPDEST 
0x1cf: V194 = 0x1
0x1d1: V195 = 0xa0
0x1d3: V196 = 0x2
0x1d5: V197 = EXP 0x2 0xa0
0x1d6: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x1d8: V200 = 0xa9059cbb
0x1df: V201 = 0x0
0x1e1: V202 = 0x40
0x1e3: V203 = M[0x40]
0x1e4: V204 = 0x20
0x1e6: V205 = ADD 0x20 V203
0x1e7: M[V205] = 0x0
0x1e8: V206 = 0x40
0x1ea: V207 = M[0x40]
0x1eb: V208 = 0xe0
0x1ed: V209 = 0x2
0x1ef: V210 = EXP 0x2 0xe0
0x1f0: V211 = 0xffffffff
0x1f6: V212 = AND 0xa9059cbb 0xffffffff
0x1f7: V213 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1f9: M[V207] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1fa: V214 = 0x1
0x1fc: V215 = 0xa0
0x1fe: V216 = 0x2
0x200: V217 = EXP 0x2 0xa0
0x201: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V219 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x205: V220 = 0x4
0x208: V221 = ADD V207 0x4
0x209: M[V221] = V219
0x20a: V222 = 0x24
0x20d: V223 = ADD V207 0x24
0x20e: M[V223] = V172
0x20f: V224 = 0x44
0x211: V225 = ADD 0x44 V207
0x212: V226 = 0x20
0x214: V227 = 0x40
0x216: V228 = M[0x40]
0x219: V229 = SUB V225 V228
0x21b: V230 = 0x0
0x21f: V231 = EXTCODESIZE V199
0x220: V232 = ISZERO V231
0x221: V233 = ISZERO V232
0x222: V234 = 0x22a
0x225: JUMPI 0x22a V233
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]
Exit stack: [V12, 0x7b, V60, V63, V60, V172, S0, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x1cd]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V235 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S9, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, V172, S9, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]

================================

Block 0x22a
[0x22a:0x236]
---
Predecessors: [0x1cd]
Successors: [0x237, 0x23b]
---
0x22a JUMPDEST
0x22b PUSH2 0x2c6
0x22e GAS
0x22f SUB
0x230 CALL
0x231 ISZERO
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x22a: JUMPDEST 
0x22b: V236 = 0x2c6
0x22e: V237 = GAS
0x22f: V238 = SUB V237 0x2c6
0x230: V239 = CALL V238 V199 0x0 V228 V229 V228 0x20
0x231: V240 = ISZERO V239
0x232: V241 = ISZERO V240
0x233: V242 = 0x23b
0x236: JUMPI 0x23b V241
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S9, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, V172, S9, V199, 0xa9059cbb, V225]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x22a]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V243 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S3, V199, 0xa9059cbb, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, V172, S3, V199, 0xa9059cbb, V225]

================================

Block 0x23b
[0x23b:0x245]
---
Predecessors: [0x22a]
Successors: [0x246]
---
0x23b JUMPDEST
0x23c POP
0x23d POP
0x23e POP
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP1
0x243 MLOAD
0x244 POP
0x245 POP
---
0x23b: JUMPDEST 
0x23f: V244 = 0x40
0x241: V245 = M[0x40]
0x243: V246 = M[V245]
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S3, V199, 0xa9059cbb, V225]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, V172, S3]

================================

Block 0x246
[0x246:0x246]
---
Predecessors: [0x23b]
Successors: [0x247]
---
0x246 JUMPDEST
---
0x246: JUMPDEST 
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V60, V63, V60, V172, S0]

================================

Block 0x247
[0x247:0x24d]
---
Predecessors: [0x246]
Successors: [0x7b]
---
0x247 JUMPDEST
0x248 POP
0x249 POP
0x24a POP
0x24b POP
0x24c POP
0x24d JUMP
---
0x247: JUMPDEST 
0x24d: JUMP 0x7b
---
Entry stack: [V12, 0x7b, V60, V63, V60, V172, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x24e
[0x24e:0x25c]
---
Predecessors: [0xaf]
Successors: [0xb7]
---
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 SLOAD
0x252 PUSH1 0x1
0x254 PUSH1 0xa0
0x256 PUSH1 0x2
0x258 EXP
0x259 SUB
0x25a AND
0x25b DUP2
0x25c JUMP
---
0x24e: JUMPDEST 
0x24f: V247 = 0x0
0x251: V248 = S[0x0]
0x252: V249 = 0x1
0x254: V250 = 0xa0
0x256: V251 = 0x2
0x258: V252 = EXP 0x2 0xa0
0x259: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25a: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x25c: JUMP 0xb7
---
Entry stack: [V12, 0xb7]
Stack pops: 1
Stack additions: [S0, V254]
Exit stack: [V12, 0xb7, V254]

================================

Block 0x25d
[0x25d:0x273]
---
Predecessors: [0xde]
Successors: [0x274, 0x278]
---
0x25d JUMPDEST
0x25e PUSH1 0x0
0x260 SLOAD
0x261 CALLER
0x262 PUSH1 0x1
0x264 PUSH1 0xa0
0x266 PUSH1 0x2
0x268 EXP
0x269 SUB
0x26a SWAP1
0x26b DUP2
0x26c AND
0x26d SWAP2
0x26e AND
0x26f EQ
0x270 PUSH2 0x278
0x273 JUMPI
---
0x25d: JUMPDEST 
0x25e: V255 = 0x0
0x260: V256 = S[0x0]
0x261: V257 = CALLER
0x262: V258 = 0x1
0x264: V259 = 0xa0
0x266: V260 = 0x2
0x268: V261 = EXP 0x2 0xa0
0x269: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26c: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x26e: V264 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x26f: V265 = EQ V264 V263
0x270: V266 = 0x278
0x273: JUMPI 0x278 V265
---
Entry stack: [V12, 0x7b, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V96]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x25d]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V267 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7b, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V96]

================================

Block 0x278
[0x278:0x287]
---
Predecessors: [0x25d]
Successors: [0x288, 0x2a3]
---
0x278 JUMPDEST
0x279 PUSH1 0x1
0x27b PUSH1 0xa0
0x27d PUSH1 0x2
0x27f EXP
0x280 SUB
0x281 DUP2
0x282 AND
0x283 ISZERO
0x284 PUSH2 0x2a3
0x287 JUMPI
---
0x278: JUMPDEST 
0x279: V268 = 0x1
0x27b: V269 = 0xa0
0x27d: V270 = 0x2
0x27f: V271 = EXP 0x2 0xa0
0x280: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x282: V273 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x283: V274 = ISZERO V273
0x284: V275 = 0x2a3
0x287: JUMPI 0x2a3 V274
---
Entry stack: [V12, 0x7b, V96]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7b, V96]

================================

Block 0x288
[0x288:0x2a2]
---
Predecessors: [0x278]
Successors: [0x2a3]
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b SLOAD
0x28c PUSH1 0x1
0x28e PUSH1 0xa0
0x290 PUSH1 0x2
0x292 EXP
0x293 SUB
0x294 NOT
0x295 AND
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e DUP4
0x29f AND
0x2a0 OR
0x2a1 SWAP1
0x2a2 SSTORE
---
0x288: V276 = 0x0
0x28b: V277 = S[0x0]
0x28c: V278 = 0x1
0x28e: V279 = 0xa0
0x290: V280 = 0x2
0x292: V281 = EXP 0x2 0xa0
0x293: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V283 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x295: V284 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V277
0x296: V285 = 0x1
0x298: V286 = 0xa0
0x29a: V287 = 0x2
0x29c: V288 = EXP 0x2 0xa0
0x29d: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29f: V290 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V291 = OR V290 V284
0x2a2: S[0x0] = V291
---
Entry stack: [V12, 0x7b, V96]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7b, V96]

================================

Block 0x2a3
[0x2a3:0x2a3]
---
Predecessors: [0x278, 0x288]
Successors: [0x2a4]
---
0x2a3 JUMPDEST
---
0x2a3: JUMPDEST 
---
Entry stack: [V12, 0x7b, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V96]

================================

Block 0x2a4
[0x2a4:0x2a4]
---
Predecessors: [0x2a3]
Successors: [0x2a5]
---
0x2a4 JUMPDEST
---
0x2a4: JUMPDEST 
---
Entry stack: [V12, 0x7b, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7b, V96]

================================

Block 0x2a5
[0x2a5:0x2a7]
---
Predecessors: [0x2a4]
Successors: [0x7b]
---
0x2a5 JUMPDEST
0x2a6 POP
0x2a7 JUMP
---
0x2a5: JUMPDEST 
0x2a7: JUMP 0x7b
---
Entry stack: [V12, 0x7b, V96]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a8
[0x2a8:0x2d3]
---
Predecessors: []
Successors: []
---
0x2a8 STOP
0x2a9 LOG1
0x2aa PUSH6 0x627a7a723058
0x2b1 SHA3
0x2b2 MISSING 0xda
0x2b3 MISSING 0xd9
0x2b4 SWAP7
0x2b5 MISSING 0xac
0x2b6 PUSH19 0x8ffd640dfc7b4c8d3563eb4606ca922aad80bc
0x2ca SWAP3
0x2cb MISSING 0xb1
0x2cc MISSING 0xcd
0x2cd DUP1
0x2ce SWAP4
0x2cf ADDMOD
0x2d0 MISSING 0xd6
0x2d1 GASLIMIT
0x2d2 STOP
0x2d3 MISSING 0x29
---
0x2a8: STOP 
0x2a9: LOG S0 S1 S2
0x2aa: V292 = 0x627a7a723058
0x2b1: V293 = SHA3 0x627a7a723058 S3
0x2b2: MISSING 0xda
0x2b3: MISSING 0xd9
0x2b5: MISSING 0xac
0x2b6: V294 = 0x8ffd640dfc7b4c8d3563eb4606ca922aad80bc
0x2cb: MISSING 0xb1
0x2cc: MISSING 0xcd
0x2cf: V295 = ADDMOD S3 S0 S1
0x2d0: MISSING 0xd6
0x2d1: V296 = GASLIMIT
0x2d2: STOP 
0x2d3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V293, S7, S1, S2, S3, S4, S5, S6, S0, S2, S0, S1, 0x8ffd640dfc7b4c8d3563eb4606ca922aad80bc, V295, S2, S0, V296]
Exit stack: []

================================

Function 0:
Public function signature: 0x40dc4197
Entry block: 0x7d
Exit block: 0x7b
Body: 0x7b, 0x7d, 0x84, 0x88, 0xf4, 0x110, 0x114, 0x125, 0x129, 0x17f, 0x183, 0x190, 0x194, 0x1b3, 0x1c0, 0x1c9, 0x1cd, 0x226, 0x22a, 0x237, 0x23b, 0x246, 0x247

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xa4
Exit block: 0xb7
Body: 0xa4, 0xab, 0xaf, 0xb7, 0x24e

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0xd3
Exit block: 0x7b
Body: 0x7b, 0xd3, 0xda, 0xde, 0x25d, 0x274, 0x278, 0x288, 0x2a3, 0x2a4, 0x2a5

Function 3:
Public fallback function
Entry block: 0x3b
Exit block: 0x7b
Body: 0x3b, 0x3f, 0x74, 0x78, 0x79, 0x7b

