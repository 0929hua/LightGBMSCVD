Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x31]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x31
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x31
0x9: JUMPI 0x31 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x1c]
---
Predecessors: [0x0]
Successors: [0x1d, 0x33]
---
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 PUSH4 0x20a64e16
0x18 DUP2
0x19 EQ
0x1a PUSH1 0x33
0x1c JUMPI
---
0xa: V5 = 0xe0
0xc: V6 = 0x2
0xe: V7 = EXP 0x2 0xe0
0xf: V8 = 0x0
0x11: V9 = CALLDATALOAD 0x0
0x12: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x13: V11 = 0x20a64e16
0x19: V12 = EQ V10 0x20a64e16
0x1a: V13 = 0x33
0x1c: JUMPI 0x33 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1d
[0x1d:0x26]
---
Predecessors: [0xa]
Successors: [0x27, 0x44]
---
0x1d DUP1
0x1e PUSH4 0x449c847c
0x23 EQ
0x24 PUSH1 0x44
0x26 JUMPI
---
0x1e: V14 = 0x449c847c
0x23: V15 = EQ 0x449c847c V10
0x24: V16 = 0x44
0x26: JUMPI 0x44 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x27
[0x27:0x30]
---
Predecessors: [0x1d]
Successors: [0x31, 0x54]
---
0x27 DUP1
0x28 PUSH4 0xb7f3c885
0x2d EQ
0x2e PUSH1 0x54
0x30 JUMPI
---
0x28: V17 = 0xb7f3c885
0x2d: V18 = EQ 0xb7f3c885 V10
0x2e: V19 = 0x54
0x30: JUMPI 0x54 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x31
[0x31:0x32]
---
Predecessors: [0x0, 0x27, 0xd8]
Successors: []
---
0x31 JUMPDEST
0x32 STOP
---
0x31: JUMPDEST 
0x32: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33
[0x33:0x43]
---
Predecessors: [0xa]
Successors: [0x65]
---
0x33 JUMPDEST
0x34 PUSH1 0x65
0x36 PUSH1 0x1
0x38 SLOAD
0x39 PUSH1 0x1
0x3b PUSH1 0xa0
0x3d PUSH1 0x2
0x3f EXP
0x40 SUB
0x41 AND
0x42 DUP2
0x43 JUMP
---
0x33: JUMPDEST 
0x34: V20 = 0x65
0x36: V21 = 0x1
0x38: V22 = S[0x1]
0x39: V23 = 0x1
0x3b: V24 = 0xa0
0x3d: V25 = 0x2
0x3f: V26 = EXP 0x2 0xa0
0x40: V27 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x43: JUMP 0x65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x65, V28]
Exit stack: [V10, 0x65, V28]

================================

Block 0x44
[0x44:0x50]
---
Predecessors: [0x1d]
Successors: [0x51, 0x78]
---
0x44 JUMPDEST
0x45 PUSH1 0x31
0x47 PUSH1 0x0
0x49 PUSH1 0x0
0x4b CALLVALUE
0x4c GT
0x4d ISZERO
0x4e PUSH1 0x78
0x50 JUMPI
---
0x44: JUMPDEST 
0x45: V29 = 0x31
0x47: V30 = 0x0
0x49: V31 = 0x0
0x4b: V32 = CALLVALUE
0x4c: V33 = GT V32 0x0
0x4d: V34 = ISZERO V33
0x4e: V35 = 0x78
0x50: JUMPI 0x78 V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31, 0x0]
Exit stack: [V10, 0x31, 0x0]

================================

Block 0x51
[0x51:0x53]
---
Predecessors: [0x44]
Successors: []
---
0x51 PUSH1 0x2
0x53 JUMP
---
0x51: V36 = 0x2
0x53: THROW 
---
Entry stack: [V10, 0x31, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x31, 0x0]

================================

Block 0x54
[0x54:0x64]
---
Predecessors: [0x27]
Successors: [0x65]
---
0x54 JUMPDEST
0x55 PUSH1 0x65
0x57 PUSH1 0x0
0x59 SLOAD
0x5a PUSH1 0x1
0x5c PUSH1 0xa0
0x5e PUSH1 0x2
0x60 EXP
0x61 SUB
0x62 AND
0x63 DUP2
0x64 JUMP
---
0x54: JUMPDEST 
0x55: V37 = 0x65
0x57: V38 = 0x0
0x59: V39 = S[0x0]
0x5a: V40 = 0x1
0x5c: V41 = 0xa0
0x5e: V42 = 0x2
0x60: V43 = EXP 0x2 0xa0
0x61: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x64: JUMP 0x65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x65, V45]
Exit stack: [V10, 0x65, V45]

================================

Block 0x65
[0x65:0x77]
---
Predecessors: [0x33, 0x54]
Successors: []
---
0x65 JUMPDEST
0x66 PUSH1 0x1
0x68 PUSH1 0xa0
0x6a PUSH1 0x2
0x6c EXP
0x6d SUB
0x6e AND
0x6f PUSH1 0x60
0x71 SWAP1
0x72 DUP2
0x73 MSTORE
0x74 PUSH1 0x20
0x76 SWAP1
0x77 RETURN
---
0x65: JUMPDEST 
0x66: V46 = 0x1
0x68: V47 = 0xa0
0x6a: V48 = 0x2
0x6c: V49 = EXP 0x2 0xa0
0x6d: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6f: V52 = 0x60
0x73: M[0x60] = V51
0x74: V53 = 0x20
0x77: RETURN 0x60 0x20
---
Entry stack: [V10, 0x65, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x65]

================================

Block 0x78
[0x78:0xa6]
---
Predecessors: [0x44]
Successors: [0xa7, 0xaa]
---
0x78 JUMPDEST
0x79 DUP1
0x7a SLOAD
0x7b PUSH1 0x2
0x7d ADDRESS
0x7e PUSH1 0x1
0x80 PUSH1 0xa0
0x82 PUSH1 0x2
0x84 EXP
0x85 SUB
0x86 SWAP1
0x87 DUP2
0x88 AND
0x89 BALANCE
0x8a SWAP2
0x8b SWAP1
0x8c SWAP2
0x8d DIV
0x8e SWAP3
0x8f SWAP2
0x90 AND
0x91 SWAP1
0x92 DUP3
0x93 PUSH1 0x60
0x95 DUP3
0x96 DUP2
0x97 DUP2
0x98 DUP2
0x99 DUP6
0x9a DUP9
0x9b DUP4
0x9c CALL
0x9d SWAP4
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 ISZERO
0xa3 ISZERO
0xa4 PUSH1 0xaa
0xa6 JUMPI
---
0x78: JUMPDEST 
0x7a: V54 = S[0x0]
0x7b: V55 = 0x2
0x7d: V56 = ADDRESS
0x7e: V57 = 0x1
0x80: V58 = 0xa0
0x82: V59 = 0x2
0x84: V60 = EXP 0x2 0xa0
0x85: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x89: V63 = BALANCE V62
0x8d: V64 = DIV V63 0x2
0x90: V65 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0x93: V66 = 0x60
0x9c: V67 = CALL 0x0 V65 V64 0x60 0x0 0x60 0x0
0xa2: V68 = ISZERO V67
0xa3: V69 = ISZERO V68
0xa4: V70 = 0xaa
0xa6: JUMPI 0xaa V69
---
Entry stack: [V10, 0x31, 0x0]
Stack pops: 1
Stack additions: [V64]
Exit stack: [V10, 0x31, V64]

================================

Block 0xa7
[0xa7:0xa9]
---
Predecessors: [0x78]
Successors: []
---
0xa7 PUSH1 0x2
0xa9 JUMP
---
0xa7: V71 = 0x2
0xa9: THROW 
---
Entry stack: [V10, 0x31, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x31, V64]

================================

Block 0xaa
[0xaa:0xd4]
---
Predecessors: [0x78]
Successors: [0xd5, 0xd8]
---
0xaa JUMPDEST
0xab PUSH1 0x1
0xad SLOAD
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 SWAP2
0xba SWAP1
0xbb SWAP2
0xbc AND
0xbd SWAP1
0xbe PUSH1 0x0
0xc0 SWAP1
0xc1 DUP4
0xc2 SWAP1
0xc3 DUP3
0xc4 DUP2
0xc5 DUP2
0xc6 DUP2
0xc7 DUP6
0xc8 DUP9
0xc9 DUP4
0xca CALL
0xcb SWAP4
0xcc POP
0xcd POP
0xce POP
0xcf POP
0xd0 ISZERO
0xd1 ISZERO
0xd2 PUSH1 0xd8
0xd4 JUMPI
---
0xaa: JUMPDEST 
0xab: V72 = 0x1
0xad: V73 = S[0x1]
0xae: V74 = 0x40
0xb0: V75 = M[0x40]
0xb1: V76 = 0x1
0xb3: V77 = 0xa0
0xb5: V78 = 0x2
0xb7: V79 = EXP 0x2 0xa0
0xb8: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0xbe: V82 = 0x0
0xca: V83 = CALL 0x0 V81 V64 V75 0x0 V75 0x0
0xd0: V84 = ISZERO V83
0xd1: V85 = ISZERO V84
0xd2: V86 = 0xd8
0xd4: JUMPI 0xd8 V85
---
Entry stack: [V10, 0x31, V64]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x31, V64]

================================

Block 0xd5
[0xd5:0xd7]
---
Predecessors: [0xaa]
Successors: []
---
0xd5 PUSH1 0x2
0xd7 JUMP
---
0xd5: V87 = 0x2
0xd7: THROW 
---
Entry stack: [V10, 0x31, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x31, V64]

================================

Block 0xd8
[0xd8:0xda]
---
Predecessors: [0xaa]
Successors: [0x31]
---
0xd8 JUMPDEST
0xd9 POP
0xda JUMP
---
0xd8: JUMPDEST 
0xda: JUMP 0x31
---
Entry stack: [V10, 0x31, V64]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x20a64e16
Entry block: 0x33
Exit block: 0x65
Body: 0x33, 0x65

Function 1:
Public function signature: 0x449c847c
Entry block: 0x44
Exit block: 0x31
Body: 0x31, 0x44, 0x51, 0x78, 0xa7, 0xaa, 0xd5, 0xd8

Function 2:
Public function signature: 0xb7f3c885
Entry block: 0x54
Exit block: 0x65
Body: 0x54, 0x65

Function 3:
Public fallback function
Entry block: 0x31
Exit block: 0x31
Body: 0x31

