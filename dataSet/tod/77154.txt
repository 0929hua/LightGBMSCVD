Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x69]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x69
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x69
0xa: JUMPI 0x69 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xfb]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x232a3060
0x34 EQ
0x35 PUSH2 0xfb
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x232a3060
0x34: V10 = EQ 0x232a3060 V8
0x35: V11 = 0xfb
0x38: JUMPI 0xfb V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x113]
---
0x39 DUP1
0x3a PUSH4 0x95602a15
0x3f EQ
0x40 PUSH2 0x113
0x43 JUMPI
---
0x3a: V12 = 0x95602a15
0x3f: V13 = EQ 0x95602a15 V8
0x40: V14 = 0x113
0x43: JUMPI 0x113 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x122]
---
0x44 DUP1
0x45 PUSH4 0x9d735286
0x4a EQ
0x4b PUSH2 0x122
0x4e JUMPI
---
0x45: V15 = 0x9d735286
0x4a: V16 = EQ 0x9d735286 V8
0x4b: V17 = 0x122
0x4e: JUMPI 0x122 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x131]
---
0x4f DUP1
0x50 PUSH4 0xa6f9dae1
0x55 EQ
0x56 PUSH2 0x131
0x59 JUMPI
---
0x50: V18 = 0xa6f9dae1
0x55: V19 = EQ 0xa6f9dae1 V8
0x56: V20 = 0x131
0x59: JUMPI 0x131 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x149]
---
0x5a DUP1
0x5b PUSH4 0xfa89401a
0x60 EQ
0x61 PUSH2 0x149
0x64 JUMPI
---
0x5b: V21 = 0xfa89401a
0x60: V22 = EQ 0xfa89401a V8
0x61: V23 = 0x149
0x64: JUMPI 0x149 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x68]
---
Predecessors: [0x5a]
Successors: [0x69]
---
0x65 PUSH2 0x69
0x68 JUMP
---
0x65: V24 = 0x69
0x68: JUMP 0x69
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x69
[0x69:0x6c]
---
Predecessors: [0x0, 0x65]
Successors: [0x6d]
---
0x69 JUMPDEST
0x6a PUSH2 0xf9
---
0x69: JUMPDEST 
0x6a: V25 = 0xf9
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xf9]
Exit stack: [V8, 0xf9]

================================

Block 0x6d
[0x6d:0xed]
---
Predecessors: [0x69]
Successors: [0xee, 0xf6]
---
0x6d JUMPDEST
0x6e NUMBER
0x6f PUSH32 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x90 CALLER
0x91 CALLVALUE
0x92 TIMESTAMP
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP1
0x97 DUP5
0x98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad AND
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 DUP4
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 DUP3
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP4
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 DUP1
0xc8 SWAP2
0xc9 SUB
0xca SWAP1
0xcb LOG2
0xcc TIMESTAMP
0xcd PUSH1 0x1
0xcf PUSH1 0x0
0xd1 POP
0xd2 DUP2
0xd3 SWAP1
0xd4 SSTORE
0xd5 POP
0xd6 PUSH1 0x1
0xd8 PUSH1 0x2
0xda PUSH1 0x0
0xdc SWAP1
0xdd SLOAD
0xde SWAP1
0xdf PUSH2 0x100
0xe2 EXP
0xe3 SWAP1
0xe4 DIV
0xe5 PUSH1 0xff
0xe7 AND
0xe8 EQ
0xe9 ISZERO
0xea PUSH2 0xf6
0xed JUMPI
---
0x6d: JUMPDEST 
0x6e: V26 = NUMBER
0x6f: V27 = 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x90: V28 = CALLER
0x91: V29 = CALLVALUE
0x92: V30 = TIMESTAMP
0x93: V31 = 0x40
0x95: V32 = M[0x40]
0x98: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xad: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0xaf: M[V32] = V34
0xb0: V35 = 0x20
0xb2: V36 = ADD 0x20 V32
0xb5: M[V36] = V29
0xb6: V37 = 0x20
0xb8: V38 = ADD 0x20 V36
0xbb: M[V38] = V30
0xbc: V39 = 0x20
0xbe: V40 = ADD 0x20 V38
0xc4: V41 = 0x40
0xc6: V42 = M[0x40]
0xc9: V43 = SUB V40 V42
0xcb: LOG V42 V43 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db V26
0xcc: V44 = TIMESTAMP
0xcd: V45 = 0x1
0xcf: V46 = 0x0
0xd4: S[0x1] = V44
0xd6: V47 = 0x1
0xd8: V48 = 0x2
0xda: V49 = 0x0
0xdd: V50 = S[0x2]
0xdf: V51 = 0x100
0xe2: V52 = EXP 0x100 0x0
0xe4: V53 = DIV V50 0x1
0xe5: V54 = 0xff
0xe7: V55 = AND 0xff V53
0xe8: V56 = EQ V55 0x1
0xe9: V57 = ISZERO V56
0xea: V58 = 0xf6
0xed: JUMPI 0xf6 V57
---
Entry stack: [V8, 0xf9]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xf9]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0x6d]
Successors: [0x2ea]
---
0xee PUSH2 0xf5
0xf1 PUSH2 0x2ea
0xf4 JUMP
---
0xee: V59 = 0xf5
0xf1: V60 = 0x2ea
0xf4: JUMP 0x2ea
---
Entry stack: [V8, 0xf9]
Stack pops: 0
Stack additions: [0xf5]
Exit stack: [V8, 0xf9, 0xf5]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0x370]
Successors: [0xf6]
---
0xf5 JUMPDEST
---
0xf5: JUMPDEST 
---
Entry stack: [V8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S0]

================================

Block 0xf6
[0xf6:0xf6]
---
Predecessors: [0x6d, 0xf5]
Successors: [0xf7]
---
0xf6 JUMPDEST
---
0xf6: JUMPDEST 
---
Entry stack: [V8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S0]

================================

Block 0xf7
[0xf7:0xf8]
---
Predecessors: [0xf6]
Successors: [0xf9]
---
0xf7 JUMPDEST
0xf8 JUMP
---
0xf7: JUMPDEST 
0xf8: JUMP S0
---
Entry stack: [V8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xf9
[0xf9:0xfa]
---
Predecessors: [0xf7]
Successors: []
---
0xf9 JUMPDEST
0xfa STOP
---
0xf9: JUMPDEST 
0xfa: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xfb
[0xfb:0x110]
---
Predecessors: [0xb]
Successors: [0x1b3]
---
0xfb JUMPDEST
0xfc PUSH2 0x111
0xff PUSH1 0x4
0x101 DUP1
0x102 DUP1
0x103 CALLDATALOAD
0x104 SWAP1
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP1
0x109 SWAP2
0x10a SWAP1
0x10b POP
0x10c POP
0x10d PUSH2 0x1b3
0x110 JUMP
---
0xfb: JUMPDEST 
0xfc: V61 = 0x111
0xff: V62 = 0x4
0x103: V63 = CALLDATALOAD 0x4
0x105: V64 = 0x20
0x107: V65 = ADD 0x20 0x4
0x10d: V66 = 0x1b3
0x110: JUMP 0x1b3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x111, V63]
Exit stack: [V8, 0x111, V63]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: [0x258]
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x113
[0x113:0x11f]
---
Predecessors: [0x39]
Successors: [0x161]
---
0x113 JUMPDEST
0x114 PUSH2 0x120
0x117 PUSH1 0x4
0x119 DUP1
0x11a POP
0x11b POP
0x11c PUSH2 0x161
0x11f JUMP
---
0x113: JUMPDEST 
0x114: V67 = 0x120
0x117: V68 = 0x4
0x11c: V69 = 0x161
0x11f: JUMP 0x161
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x120]
Exit stack: [V8, 0x120]

================================

Block 0x120
[0x120:0x121]
---
Predecessors: [0x1b1]
Successors: []
---
0x120 JUMPDEST
0x121 STOP
---
0x120: JUMPDEST 
0x121: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x122
[0x122:0x12e]
---
Predecessors: [0x44]
Successors: [0x2ea]
---
0x122 JUMPDEST
0x123 PUSH2 0x12f
0x126 PUSH1 0x4
0x128 DUP1
0x129 POP
0x12a POP
0x12b PUSH2 0x2ea
0x12e JUMP
---
0x122: JUMPDEST 
0x123: V70 = 0x12f
0x126: V71 = 0x4
0x12b: V72 = 0x2ea
0x12e: JUMP 0x2ea
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x12f]
Exit stack: [V8, 0x12f]

================================

Block 0x12f
[0x12f:0x130]
---
Predecessors: [0x370]
Successors: []
---
0x12f JUMPDEST
0x130 STOP
---
0x12f: JUMPDEST 
0x130: STOP 
---
Entry stack: [V8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S0]

================================

Block 0x131
[0x131:0x146]
---
Predecessors: [0x4f]
Successors: [0x25b]
---
0x131 JUMPDEST
0x132 PUSH2 0x147
0x135 PUSH1 0x4
0x137 DUP1
0x138 DUP1
0x139 CALLDATALOAD
0x13a SWAP1
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP1
0x13f SWAP2
0x140 SWAP1
0x141 POP
0x142 POP
0x143 PUSH2 0x25b
0x146 JUMP
---
0x131: JUMPDEST 
0x132: V73 = 0x147
0x135: V74 = 0x4
0x139: V75 = CALLDATALOAD 0x4
0x13b: V76 = 0x20
0x13d: V77 = ADD 0x20 0x4
0x143: V78 = 0x25b
0x146: JUMP 0x25b
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x147, V75]
Exit stack: [V8, 0x147, V75]

================================

Block 0x147
[0x147:0x148]
---
Predecessors: [0x2e7]
Successors: []
---
0x147 JUMPDEST
0x148 STOP
---
0x147: JUMPDEST 
0x148: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x149
[0x149:0x15e]
---
Predecessors: [0x5a]
Successors: [0x372]
---
0x149 JUMPDEST
0x14a PUSH2 0x15f
0x14d PUSH1 0x4
0x14f DUP1
0x150 DUP1
0x151 CALLDATALOAD
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 SWAP2
0x158 SWAP1
0x159 POP
0x15a POP
0x15b PUSH2 0x372
0x15e JUMP
---
0x149: JUMPDEST 
0x14a: V79 = 0x15f
0x14d: V80 = 0x4
0x151: V81 = CALLDATALOAD 0x4
0x153: V82 = 0x20
0x155: V83 = ADD 0x20 0x4
0x15b: V84 = 0x372
0x15e: JUMP 0x372
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x15f, V81]
Exit stack: [V8, 0x15f, V81]

================================

Block 0x15f
[0x15f:0x160]
---
Predecessors: []
Successors: []
---
0x15f JUMPDEST
0x160 STOP
---
0x15f: JUMPDEST 
0x160: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x161
[0x161:0x1b0]
---
Predecessors: [0x113]
Successors: [0x1b1]
---
0x161 JUMPDEST
0x162 CALLER
0x163 PUSH1 0x0
0x165 PUSH1 0x0
0x167 PUSH2 0x100
0x16a EXP
0x16b DUP2
0x16c SLOAD
0x16d DUP2
0x16e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183 MUL
0x184 NOT
0x185 AND
0x186 SWAP1
0x187 DUP4
0x188 MUL
0x189 OR
0x18a SWAP1
0x18b SSTORE
0x18c POP
0x18d PUSH1 0x0
0x18f PUSH1 0x1
0x191 PUSH1 0x0
0x193 POP
0x194 DUP2
0x195 SWAP1
0x196 SSTORE
0x197 POP
0x198 PUSH1 0x0
0x19a PUSH1 0x2
0x19c PUSH1 0x0
0x19e PUSH2 0x100
0x1a1 EXP
0x1a2 DUP2
0x1a3 SLOAD
0x1a4 DUP2
0x1a5 PUSH1 0xff
0x1a7 MUL
0x1a8 NOT
0x1a9 AND
0x1aa SWAP1
0x1ab DUP4
0x1ac MUL
0x1ad OR
0x1ae SWAP1
0x1af SSTORE
0x1b0 POP
---
0x161: JUMPDEST 
0x162: V85 = CALLER
0x163: V86 = 0x0
0x165: V87 = 0x0
0x167: V88 = 0x100
0x16a: V89 = EXP 0x100 0x0
0x16c: V90 = S[0x0]
0x16e: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x183: V92 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x184: V93 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x185: V94 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V90
0x188: V95 = MUL V85 0x1
0x189: V96 = OR V95 V94
0x18b: S[0x0] = V96
0x18d: V97 = 0x0
0x18f: V98 = 0x1
0x191: V99 = 0x0
0x196: S[0x1] = 0x0
0x198: V100 = 0x0
0x19a: V101 = 0x2
0x19c: V102 = 0x0
0x19e: V103 = 0x100
0x1a1: V104 = EXP 0x100 0x0
0x1a3: V105 = S[0x2]
0x1a5: V106 = 0xff
0x1a7: V107 = MUL 0xff 0x1
0x1a8: V108 = NOT 0xff
0x1a9: V109 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V105
0x1ac: V110 = MUL 0x0 0x1
0x1ad: V111 = OR 0x0 V109
0x1af: S[0x2] = V111
---
Entry stack: [V8, 0x120]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x120]

================================

Block 0x1b1
[0x1b1:0x1b2]
---
Predecessors: [0x161]
Successors: [0x120]
---
0x1b1 JUMPDEST
0x1b2 JUMP
---
0x1b1: JUMPDEST 
0x1b2: JUMP 0x120
---
Entry stack: [V8, 0x120]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x1b3
[0x1b3:0x209]
---
Predecessors: [0xfb]
Successors: [0x20a, 0x252]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x0
0x1b6 PUSH1 0x0
0x1b8 SWAP1
0x1b9 SLOAD
0x1ba SWAP1
0x1bb PUSH2 0x100
0x1be EXP
0x1bf SWAP1
0x1c0 DIV
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed CALLER
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 EQ
0x205 ISZERO
0x206 PUSH2 0x252
0x209 JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V112 = 0x0
0x1b6: V113 = 0x0
0x1b9: V114 = S[0x0]
0x1bb: V115 = 0x100
0x1be: V116 = EXP 0x100 0x0
0x1c0: V117 = DIV V114 0x1
0x1c1: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1d7: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1ed: V122 = CALLER
0x1ee: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x204: V125 = EQ V124 V121
0x205: V126 = ISZERO V125
0x206: V127 = 0x252
0x209: JUMPI 0x252 V126
---
Entry stack: [V8, 0x111, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x111, V63]

================================

Block 0x20a
[0x20a:0x251]
---
Predecessors: [0x1b3]
Successors: [0x257]
---
0x20a PUSH1 0x1
0x20c PUSH1 0x2
0x20e PUSH1 0x0
0x210 PUSH2 0x100
0x213 EXP
0x214 DUP2
0x215 SLOAD
0x216 DUP2
0x217 PUSH1 0xff
0x219 MUL
0x21a NOT
0x21b AND
0x21c SWAP1
0x21d DUP4
0x21e MUL
0x21f OR
0x220 SWAP1
0x221 SSTORE
0x222 POP
0x223 DUP1
0x224 PUSH1 0x2
0x226 PUSH1 0x1
0x228 PUSH2 0x100
0x22b EXP
0x22c DUP2
0x22d SLOAD
0x22e DUP2
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 MUL
0x245 NOT
0x246 AND
0x247 SWAP1
0x248 DUP4
0x249 MUL
0x24a OR
0x24b SWAP1
0x24c SSTORE
0x24d POP
0x24e PUSH2 0x257
0x251 JUMP
---
0x20a: V128 = 0x1
0x20c: V129 = 0x2
0x20e: V130 = 0x0
0x210: V131 = 0x100
0x213: V132 = EXP 0x100 0x0
0x215: V133 = S[0x2]
0x217: V134 = 0xff
0x219: V135 = MUL 0xff 0x1
0x21a: V136 = NOT 0xff
0x21b: V137 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V133
0x21e: V138 = MUL 0x1 0x1
0x21f: V139 = OR 0x1 V137
0x221: S[0x2] = V139
0x224: V140 = 0x2
0x226: V141 = 0x1
0x228: V142 = 0x100
0x22b: V143 = EXP 0x100 0x1
0x22d: V144 = S[0x2]
0x22f: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V146 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x100
0x245: V147 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x246: V148 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V144
0x249: V149 = MUL V63 0x100
0x24a: V150 = OR V149 V148
0x24c: S[0x2] = V150
0x24e: V151 = 0x257
0x251: JUMP 0x257
---
Entry stack: [V8, 0x111, V63]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x111, V63]

================================

Block 0x252
[0x252:0x256]
---
Predecessors: [0x1b3]
Successors: []
---
0x252 JUMPDEST
0x253 PUSH2 0x2
0x256 JUMP
---
0x252: JUMPDEST 
0x253: V152 = 0x2
0x256: THROW 
---
Entry stack: [V8, 0x111, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x111, V63]

================================

Block 0x257
[0x257:0x257]
---
Predecessors: [0x20a]
Successors: [0x258]
---
0x257 JUMPDEST
---
0x257: JUMPDEST 
---
Entry stack: [V8, 0x111, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x111, V63]

================================

Block 0x258
[0x258:0x25a]
---
Predecessors: [0x257]
Successors: [0x111]
---
0x258 JUMPDEST
0x259 POP
0x25a JUMP
---
0x258: JUMPDEST 
0x25a: JUMP 0x111
---
Entry stack: [V8, 0x111, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x25b
[0x25b:0x2b1]
---
Predecessors: [0x131]
Successors: [0x2b2, 0x2e1]
---
0x25b JUMPDEST
0x25c PUSH1 0x0
0x25e PUSH1 0x0
0x260 SWAP1
0x261 SLOAD
0x262 SWAP1
0x263 PUSH2 0x100
0x266 EXP
0x267 SWAP1
0x268 DIV
0x269 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27e AND
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 CALLER
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac EQ
0x2ad ISZERO
0x2ae PUSH2 0x2e1
0x2b1 JUMPI
---
0x25b: JUMPDEST 
0x25c: V153 = 0x0
0x25e: V154 = 0x0
0x261: V155 = S[0x0]
0x263: V156 = 0x100
0x266: V157 = EXP 0x100 0x0
0x268: V158 = DIV V155 0x1
0x269: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x27f: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x295: V163 = CALLER
0x296: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2ac: V166 = EQ V165 V162
0x2ad: V167 = ISZERO V166
0x2ae: V168 = 0x2e1
0x2b1: JUMPI 0x2e1 V167
---
Entry stack: [V8, 0x147, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x147, V75]

================================

Block 0x2b2
[0x2b2:0x2e0]
---
Predecessors: [0x25b]
Successors: [0x2e6]
---
0x2b2 DUP1
0x2b3 PUSH1 0x0
0x2b5 PUSH1 0x0
0x2b7 PUSH2 0x100
0x2ba EXP
0x2bb DUP2
0x2bc SLOAD
0x2bd DUP2
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 MUL
0x2d4 NOT
0x2d5 AND
0x2d6 SWAP1
0x2d7 DUP4
0x2d8 MUL
0x2d9 OR
0x2da SWAP1
0x2db SSTORE
0x2dc POP
0x2dd PUSH2 0x2e6
0x2e0 JUMP
---
0x2b3: V169 = 0x0
0x2b5: V170 = 0x0
0x2b7: V171 = 0x100
0x2ba: V172 = EXP 0x100 0x0
0x2bc: V173 = S[0x0]
0x2be: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V175 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2d4: V176 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V177 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V173
0x2d8: V178 = MUL V75 0x1
0x2d9: V179 = OR V178 V177
0x2db: S[0x0] = V179
0x2dd: V180 = 0x2e6
0x2e0: JUMP 0x2e6
---
Entry stack: [V8, 0x147, V75]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x147, V75]

================================

Block 0x2e1
[0x2e1:0x2e5]
---
Predecessors: [0x25b]
Successors: []
---
0x2e1 JUMPDEST
0x2e2 PUSH2 0x2
0x2e5 JUMP
---
0x2e1: JUMPDEST 
0x2e2: V181 = 0x2
0x2e5: THROW 
---
Entry stack: [V8, 0x147, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x147, V75]

================================

Block 0x2e6
[0x2e6:0x2e6]
---
Predecessors: [0x2b2]
Successors: [0x2e7]
---
0x2e6 JUMPDEST
---
0x2e6: JUMPDEST 
---
Entry stack: [V8, 0x147, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x147, V75]

================================

Block 0x2e7
[0x2e7:0x2e9]
---
Predecessors: [0x2e6]
Successors: [0x147]
---
0x2e7 JUMPDEST
0x2e8 POP
0x2e9 JUMP
---
0x2e7: JUMPDEST 
0x2e9: JUMP 0x147
---
Entry stack: [V8, 0x147, V75]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x2ea
[0x2ea:0x302]
---
Predecessors: [0xee, 0x122]
Successors: [0x303, 0x36f]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x1
0x2ed PUSH1 0x2
0x2ef PUSH1 0x0
0x2f1 SWAP1
0x2f2 SLOAD
0x2f3 SWAP1
0x2f4 PUSH2 0x100
0x2f7 EXP
0x2f8 SWAP1
0x2f9 DIV
0x2fa PUSH1 0xff
0x2fc AND
0x2fd EQ
0x2fe ISZERO
0x2ff PUSH2 0x36f
0x302 JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V182 = 0x1
0x2ed: V183 = 0x2
0x2ef: V184 = 0x0
0x2f2: V185 = S[0x2]
0x2f4: V186 = 0x100
0x2f7: V187 = EXP 0x100 0x0
0x2f9: V188 = DIV V185 0x1
0x2fa: V189 = 0xff
0x2fc: V190 = AND 0xff V188
0x2fd: V191 = EQ V190 0x1
0x2fe: V192 = ISZERO V191
0x2ff: V193 = 0x36f
0x302: JUMPI 0x36f V192
---
Entry stack: [V8, S1, {0xf5, 0x12f}]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S1, {0xf5, 0x12f}]

================================

Block 0x303
[0x303:0x36e]
---
Predecessors: [0x2ea]
Successors: [0x36f]
---
0x303 PUSH1 0x2
0x305 PUSH1 0x1
0x307 SWAP1
0x308 SLOAD
0x309 SWAP1
0x30a PUSH2 0x100
0x30d EXP
0x30e SWAP1
0x30f DIV
0x310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x325 AND
0x326 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33b AND
0x33c PUSH1 0x0
0x33e ADDRESS
0x33f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x354 AND
0x355 BALANCE
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP1
0x35a SWAP1
0x35b POP
0x35c PUSH1 0x0
0x35e PUSH1 0x40
0x360 MLOAD
0x361 DUP1
0x362 DUP4
0x363 SUB
0x364 DUP2
0x365 DUP6
0x366 DUP9
0x367 DUP9
0x368 CALL
0x369 SWAP4
0x36a POP
0x36b POP
0x36c POP
0x36d POP
0x36e POP
---
0x303: V194 = 0x2
0x305: V195 = 0x1
0x308: V196 = S[0x2]
0x30a: V197 = 0x100
0x30d: V198 = EXP 0x100 0x1
0x30f: V199 = DIV V196 0x100
0x310: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x325: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x326: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x33b: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x33c: V204 = 0x0
0x33e: V205 = ADDRESS
0x33f: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x354: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x355: V208 = BALANCE V207
0x356: V209 = 0x40
0x358: V210 = M[0x40]
0x35c: V211 = 0x0
0x35e: V212 = 0x40
0x360: V213 = M[0x40]
0x363: V214 = SUB V210 V213
0x368: V215 = CALL 0x0 V203 V208 V213 V214 V213 0x0
---
Entry stack: [V8, S1, {0xf5, 0x12f}]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S1, {0xf5, 0x12f}]

================================

Block 0x36f
[0x36f:0x36f]
---
Predecessors: [0x2ea, 0x303]
Successors: [0x370]
---
0x36f JUMPDEST
---
0x36f: JUMPDEST 
---
Entry stack: [V8, S1, {0xf5, 0x12f}]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S1, {0xf5, 0x12f}]

================================

Block 0x370
[0x370:0x371]
---
Predecessors: [0x36f]
Successors: [0xf5, 0x12f]
---
0x370 JUMPDEST
0x371 JUMP
---
0x370: JUMPDEST 
0x371: JUMP {0xf5, 0x12f}
---
Entry stack: [V8, S1, {0xf5, 0x12f}]
Stack pops: 1
Stack additions: []
Exit stack: [V8, S1]

================================

Block 0x372
[0x372:0x3c8]
---
Predecessors: [0x149]
Successors: [0x3c9, 0x43a]
---
0x372 JUMPDEST
0x373 PUSH1 0x0
0x375 PUSH1 0x0
0x377 SWAP1
0x378 SLOAD
0x379 SWAP1
0x37a PUSH2 0x100
0x37d EXP
0x37e SWAP1
0x37f DIV
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac CALLER
0x3ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c2 AND
0x3c3 EQ
0x3c4 ISZERO
0x3c5 PUSH2 0x43a
0x3c8 JUMPI
---
0x372: JUMPDEST 
0x373: V216 = 0x0
0x375: V217 = 0x0
0x378: V218 = S[0x0]
0x37a: V219 = 0x100
0x37d: V220 = EXP 0x100 0x0
0x37f: V221 = DIV V218 0x1
0x380: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x396: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x3ac: V226 = CALLER
0x3ad: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c2: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x3c3: V229 = EQ V228 V225
0x3c4: V230 = ISZERO V229
0x3c5: V231 = 0x43a
0x3c8: JUMPI 0x43a V230
---
Entry stack: [V8, 0x15f, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x15f, V81]

================================

Block 0x3c9
[0x3c9:0x435]
---
Predecessors: [0x372]
Successors: []
---
0x3c9 PUSH32 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x3ea ADDRESS
0x3eb TIMESTAMP
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef DUP1
0x3f0 DUP4
0x3f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x406 AND
0x407 DUP2
0x408 MSTORE
0x409 PUSH1 0x20
0x40b ADD
0x40c DUP3
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x20
0x411 ADD
0x412 SWAP3
0x413 POP
0x414 POP
0x415 POP
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP1
0x41a SWAP2
0x41b SUB
0x41c SWAP1
0x41d LOG1
0x41e DUP1
0x41f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x434 AND
0x435 SELFDESTRUCT
---
0x3c9: V232 = 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x3ea: V233 = ADDRESS
0x3eb: V234 = TIMESTAMP
0x3ec: V235 = 0x40
0x3ee: V236 = M[0x40]
0x3f1: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x406: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x408: M[V236] = V238
0x409: V239 = 0x20
0x40b: V240 = ADD 0x20 V236
0x40e: M[V240] = V234
0x40f: V241 = 0x20
0x411: V242 = ADD 0x20 V240
0x416: V243 = 0x40
0x418: V244 = M[0x40]
0x41b: V245 = SUB V242 V244
0x41d: LOG V244 V245 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x41f: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x434: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x435: SELFDESTRUCT V247
---
Entry stack: [V8, 0x15f, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x15f, V81]

================================

Block 0x436
[0x436:0x439]
---
Predecessors: []
Successors: [0x43f]
---
0x436 PUSH2 0x43f
0x439 JUMP
---
0x436: V248 = 0x43f
0x439: JUMP 0x43f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x43a
[0x43a:0x43e]
---
Predecessors: [0x372]
Successors: []
---
0x43a JUMPDEST
0x43b PUSH2 0x2
0x43e JUMP
---
0x43a: JUMPDEST 
0x43b: V249 = 0x2
0x43e: THROW 
---
Entry stack: [V8, 0x15f, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x15f, V81]

================================

Block 0x43f
[0x43f:0x43f]
---
Predecessors: [0x436]
Successors: [0x440]
---
0x43f JUMPDEST
---
0x43f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x440
[0x440:0x442]
---
Predecessors: [0x43f]
Successors: []
Has unresolved jump.
---
0x440 JUMPDEST
0x441 POP
0x442 JUMP
---
0x440: JUMPDEST 
0x442: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x232a3060
Entry block: 0xfb
Exit block: 0x111
Body: 0xfb, 0x111, 0x1b3, 0x20a, 0x252, 0x257, 0x258

Function 1:
Public function signature: 0x95602a15
Entry block: 0x113
Exit block: 0x120
Body: 0x113, 0x120, 0x161, 0x1b1

Function 2:
Public function signature: 0x9d735286
Entry block: 0x122
Exit block: 0x12f
Body: 0x122, 0x12f

Function 3:
Public function signature: 0xa6f9dae1
Entry block: 0x131
Exit block: 0x147
Body: 0x131, 0x147, 0x25b, 0x2b2, 0x2e1, 0x2e6, 0x2e7

Function 4:
Public function signature: 0xfa89401a
Entry block: 0x149
Exit block: 0x3c9
Body: 0x149, 0x372, 0x3c9, 0x43a

Function 5:
Public fallback function
Entry block: 0x65
Exit block: 0xf9
Body: 0x65, 0x69, 0x6d, 0xee, 0xf5, 0xf6, 0xf7, 0xf9

Function 6:
Private function
Entry block: 0x2ea
Exit block: 0x370
Body: 0x2ea, 0x303, 0x36f, 0x370

