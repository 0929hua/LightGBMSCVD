Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xb2]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2a518024
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xb2
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2a518024
0x3b: V13 = EQ V11 0x2a518024
0x3c: V14 = 0xb2
0x3f: JUMPI 0xb2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xd6]
---
0x40 DUP1
0x41 PUSH4 0x49649fbf
0x46 EQ
0x47 PUSH2 0xd6
0x4a JUMPI
---
0x41: V15 = 0x49649fbf
0x46: V16 = EQ 0x49649fbf V11
0x47: V17 = 0xd6
0x4a: JUMPI 0xd6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xeb]
---
0x4b DUP1
0x4c PUSH4 0x4e45351f
0x51 EQ
0x52 PUSH2 0xeb
0x55 JUMPI
---
0x4c: V18 = 0x4e45351f
0x51: V19 = EQ 0x4e45351f V11
0x52: V20 = 0xeb
0x55: JUMPI 0xeb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x128]
---
0x56 DUP1
0x57 PUSH4 0x57246d23
0x5c EQ
0x5d PUSH2 0x128
0x60 JUMPI
---
0x57: V21 = 0x57246d23
0x5c: V22 = EQ 0x57246d23 V11
0x5d: V23 = 0x128
0x60: JUMPI 0x128 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x14f]
---
0x61 DUP1
0x62 PUSH4 0x6100d922
0x67 EQ
0x68 PUSH2 0x14f
0x6b JUMPI
---
0x62: V24 = 0x6100d922
0x67: V25 = EQ 0x6100d922 V11
0x68: V26 = 0x14f
0x6b: JUMPI 0x14f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x173]
---
0x6c DUP1
0x6d PUSH4 0x8da5cb5b
0x72 EQ
0x73 PUSH2 0x173
0x76 JUMPI
---
0x6d: V27 = 0x8da5cb5b
0x72: V28 = EQ 0x8da5cb5b V11
0x73: V29 = 0x173
0x76: JUMPI 0x173 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1a4]
---
0x77 DUP1
0x78 PUSH4 0xb7f9ec46
0x7d EQ
0x7e PUSH2 0x1a4
0x81 JUMPI
---
0x78: V30 = 0xb7f9ec46
0x7d: V31 = EQ 0xb7f9ec46 V11
0x7e: V32 = 0x1a4
0x81: JUMPI 0x1a4 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1c8]
---
0x82 DUP1
0x83 PUSH4 0xd06c54fb
0x88 EQ
0x89 PUSH2 0x1c8
0x8c JUMPI
---
0x83: V33 = 0xd06c54fb
0x88: V34 = EQ 0xd06c54fb V11
0x89: V35 = 0x1c8
0x8c: JUMPI 0x1c8 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1dd]
---
0x8d DUP1
0x8e PUSH4 0xd579fd44
0x93 EQ
0x94 PUSH2 0x1dd
0x97 JUMPI
---
0x8e: V36 = 0xd579fd44
0x93: V37 = EQ 0xd579fd44 V11
0x94: V38 = 0x1dd
0x97: JUMPI 0x1dd V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1fe]
---
0x98 DUP1
0x99 PUSH4 0xd6d30a51
0x9e EQ
0x9f PUSH2 0x1fe
0xa2 JUMPI
---
0x99: V39 = 0xd6d30a51
0x9e: V40 = EQ 0xd6d30a51 V11
0x9f: V41 = 0x1fe
0xa2: JUMPI 0x1fe V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xab]
---
Predecessors: [0x0, 0x98]
Successors: [0xac, 0xb0]
---
0xa3 JUMPDEST
0xa4 PUSH1 0x0
0xa6 CALLVALUE
0xa7 GT
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa3: JUMPDEST 
0xa4: V42 = 0x0
0xa6: V43 = CALLVALUE
0xa7: V44 = GT V43 0x0
0xa8: V45 = 0xb0
0xab: JUMPI 0xb0 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa3]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V46 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0xa3, 0x34b, 0x3f1, 0x486, 0x580, 0x5f9, 0x6f2, 0x884]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0xb2
[0xb2:0xb9]
---
Predecessors: [0xd]
Successors: [0xba, 0xbe]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 DUP1
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb2: JUMPDEST 
0xb3: V47 = CALLVALUE
0xb5: V48 = ISZERO V47
0xb6: V49 = 0xbe
0xb9: JUMPI 0xbe V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V11, V47]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb2]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V50 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V11, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V47]

================================

Block 0xbe
[0xbe:0xd5]
---
Predecessors: [0xb2]
Successors: [0x216]
---
0xbe JUMPDEST
0xbf POP
0xc0 PUSH2 0xb0
0xc3 PUSH1 0x1
0xc5 PUSH1 0xa0
0xc7 PUSH1 0x2
0xc9 EXP
0xca SUB
0xcb PUSH1 0x4
0xcd CALLDATALOAD
0xce AND
0xcf PUSH1 0x24
0xd1 CALLDATALOAD
0xd2 PUSH2 0x216
0xd5 JUMP
---
0xbe: JUMPDEST 
0xc0: V51 = 0xb0
0xc3: V52 = 0x1
0xc5: V53 = 0xa0
0xc7: V54 = 0x2
0xc9: V55 = EXP 0x2 0xa0
0xca: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb: V57 = 0x4
0xcd: V58 = CALLDATALOAD 0x4
0xce: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V60 = 0x24
0xd1: V61 = CALLDATALOAD 0x24
0xd2: V62 = 0x216
0xd5: JUMP 0x216
---
Entry stack: [V11, V47]
Stack pops: 1
Stack additions: [0xb0, V59, V61]
Exit stack: [V11, 0xb0, V59, V61]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0x40]
Successors: [0xde, 0xe2]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 DUP1
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd6: JUMPDEST 
0xd7: V63 = CALLVALUE
0xd9: V64 = ISZERO V63
0xda: V65 = 0xe2
0xdd: JUMPI 0xe2 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd6]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V66 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0xd6]
Successors: [0x34f]
---
0xe2 JUMPDEST
0xe3 POP
0xe4 PUSH2 0xb0
0xe7 PUSH2 0x34f
0xea JUMP
---
0xe2: JUMPDEST 
0xe4: V67 = 0xb0
0xe7: V68 = 0x34f
0xea: JUMP 0x34f
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0xb0]
Exit stack: [V11, 0xb0]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0x4b]
Successors: [0xf3, 0xf7]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed DUP1
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xeb: JUMPDEST 
0xec: V69 = CALLVALUE
0xee: V70 = ISZERO V69
0xef: V71 = 0xf7
0xf2: JUMPI 0xf7 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xeb]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V72 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0xf7
[0xf7:0xff]
---
Predecessors: [0xeb]
Successors: [0x3f4]
---
0xf7 JUMPDEST
0xf8 POP
0xf9 PUSH2 0x100
0xfc PUSH2 0x3f4
0xff JUMP
---
0xf7: JUMPDEST 
0xf9: V73 = 0x100
0xfc: V74 = 0x3f4
0xff: JUMP 0x3f4
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0x100]
Exit stack: [V11, 0x100]

================================

Block 0x100
[0x100:0x127]
---
Predecessors: [0x3f4]
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x40
0x103 DUP1
0x104 MLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP5
0x10f AND
0x110 DUP5
0x111 MSTORE
0x112 PUSH1 0x20
0x114 DUP5
0x115 ADD
0x116 SWAP3
0x117 SWAP1
0x118 SWAP3
0x119 MSTORE
0x11a DUP3
0x11b DUP3
0x11c ADD
0x11d MSTORE
0x11e MLOAD
0x11f SWAP1
0x120 DUP2
0x121 SWAP1
0x122 SUB
0x123 PUSH1 0x60
0x125 ADD
0x126 SWAP1
0x127 RETURN
---
0x100: JUMPDEST 
0x101: V75 = 0x40
0x104: V76 = M[0x40]
0x105: V77 = 0x1
0x107: V78 = 0xa0
0x109: V79 = 0x2
0x10b: V80 = EXP 0x2 0xa0
0x10c: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V82 = AND V352 0xffffffffffffffffffffffffffffffffffffffff
0x111: M[V76] = V82
0x112: V83 = 0x20
0x115: V84 = ADD V76 0x20
0x119: M[V84] = V346
0x11c: V85 = ADD 0x40 V76
0x11d: M[V85] = V354
0x11e: V86 = M[0x40]
0x122: V87 = SUB V76 V86
0x123: V88 = 0x60
0x125: V89 = ADD 0x60 V87
0x127: RETURN V86 V89
---
Entry stack: [V11, V352, V346, V354]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x56]
Successors: [0x130, 0x134]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a DUP1
0x12b ISZERO
0x12c PUSH2 0x134
0x12f JUMPI
---
0x128: JUMPDEST 
0x129: V90 = CALLVALUE
0x12b: V91 = ISZERO V90
0x12c: V92 = 0x134
0x12f: JUMPI 0x134 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V90]
Exit stack: [V11, V90]

================================

Block 0x130
[0x130:0x133]
---
Predecessors: [0x128]
Successors: []
---
0x130 PUSH1 0x0
0x132 DUP1
0x133 REVERT
---
0x130: V93 = 0x0
0x133: REVERT 0x0 0x0
---
Entry stack: [V11, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V90]

================================

Block 0x134
[0x134:0x13c]
---
Predecessors: [0x128]
Successors: [0x40b]
---
0x134 JUMPDEST
0x135 POP
0x136 PUSH2 0x13d
0x139 PUSH2 0x40b
0x13c JUMP
---
0x134: JUMPDEST 
0x136: V94 = 0x13d
0x139: V95 = 0x40b
0x13c: JUMP 0x40b
---
Entry stack: [V11, V90]
Stack pops: 1
Stack additions: [0x13d]
Exit stack: [V11, 0x13d]

================================

Block 0x13d
[0x13d:0x14e]
---
Predecessors: [0x40b]
Successors: []
---
0x13d JUMPDEST
0x13e PUSH1 0x40
0x140 DUP1
0x141 MLOAD
0x142 SWAP2
0x143 DUP3
0x144 MSTORE
0x145 MLOAD
0x146 SWAP1
0x147 DUP2
0x148 SWAP1
0x149 SUB
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP1
0x14e RETURN
---
0x13d: JUMPDEST 
0x13e: V96 = 0x40
0x141: V97 = M[0x40]
0x144: M[V97] = V356
0x145: V98 = M[0x40]
0x149: V99 = SUB V97 V98
0x14a: V100 = 0x20
0x14c: V101 = ADD 0x20 V99
0x14e: RETURN V98 V101
---
Entry stack: [V11, 0x13d, V356]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x13d]

================================

Block 0x14f
[0x14f:0x156]
---
Predecessors: [0x61]
Successors: [0x157, 0x15b]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 DUP1
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x14f: JUMPDEST 
0x150: V102 = CALLVALUE
0x152: V103 = ISZERO V102
0x153: V104 = 0x15b
0x156: JUMPI 0x15b V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x14f]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V105 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x15b
[0x15b:0x172]
---
Predecessors: [0x14f]
Successors: [0x411]
---
0x15b JUMPDEST
0x15c POP
0x15d PUSH2 0xb0
0x160 PUSH1 0x1
0x162 PUSH1 0xa0
0x164 PUSH1 0x2
0x166 EXP
0x167 SUB
0x168 PUSH1 0x4
0x16a CALLDATALOAD
0x16b AND
0x16c PUSH1 0x24
0x16e CALLDATALOAD
0x16f PUSH2 0x411
0x172 JUMP
---
0x15b: JUMPDEST 
0x15d: V106 = 0xb0
0x160: V107 = 0x1
0x162: V108 = 0xa0
0x164: V109 = 0x2
0x166: V110 = EXP 0x2 0xa0
0x167: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x168: V112 = 0x4
0x16a: V113 = CALLDATALOAD 0x4
0x16b: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V115 = 0x24
0x16e: V116 = CALLDATALOAD 0x24
0x16f: V117 = 0x411
0x172: JUMP 0x411
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0xb0, V114, V116]
Exit stack: [V11, 0xb0, V114, V116]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x6c]
Successors: [0x17b, 0x17f]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 DUP1
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x173: JUMPDEST 
0x174: V118 = CALLVALUE
0x176: V119 = ISZERO V118
0x177: V120 = 0x17f
0x17a: JUMPI 0x17f V119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, V118]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x173]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V121 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V11, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V118]

================================

Block 0x17f
[0x17f:0x187]
---
Predecessors: [0x173]
Successors: [0x4c3]
---
0x17f JUMPDEST
0x180 POP
0x181 PUSH2 0x188
0x184 PUSH2 0x4c3
0x187 JUMP
---
0x17f: JUMPDEST 
0x181: V122 = 0x188
0x184: V123 = 0x4c3
0x187: JUMP 0x4c3
---
Entry stack: [V11, V118]
Stack pops: 1
Stack additions: [0x188]
Exit stack: [V11, 0x188]

================================

Block 0x188
[0x188:0x1a3]
---
Predecessors: [0x4c3]
Successors: []
---
0x188 JUMPDEST
0x189 PUSH1 0x40
0x18b DUP1
0x18c MLOAD
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 SWAP1
0x196 SWAP3
0x197 AND
0x198 DUP3
0x199 MSTORE
0x19a MLOAD
0x19b SWAP1
0x19c DUP2
0x19d SWAP1
0x19e SUB
0x19f PUSH1 0x20
0x1a1 ADD
0x1a2 SWAP1
0x1a3 RETURN
---
0x188: JUMPDEST 
0x189: V124 = 0x40
0x18c: V125 = M[0x40]
0x18d: V126 = 0x1
0x18f: V127 = 0xa0
0x191: V128 = 0x2
0x193: V129 = EXP 0x2 0xa0
0x194: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x197: V131 = AND V423 0xffffffffffffffffffffffffffffffffffffffff
0x199: M[V125] = V131
0x19a: V132 = M[0x40]
0x19e: V133 = SUB V125 V132
0x19f: V134 = 0x20
0x1a1: V135 = ADD 0x20 V133
0x1a3: RETURN V132 V135
---
Entry stack: [V11, 0x188, V423]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x188]

================================

Block 0x1a4
[0x1a4:0x1ab]
---
Predecessors: [0x77]
Successors: [0x1ac, 0x1b0]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 DUP1
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V136 = CALLVALUE
0x1a7: V137 = ISZERO V136
0x1a8: V138 = 0x1b0
0x1ab: JUMPI 0x1b0 V137
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V136]
Exit stack: [V11, V136]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V139 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V11, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V136]

================================

Block 0x1b0
[0x1b0:0x1c7]
---
Predecessors: [0x1a4]
Successors: [0x4d2]
---
0x1b0 JUMPDEST
0x1b1 POP
0x1b2 PUSH2 0xb0
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd PUSH1 0x4
0x1bf CALLDATALOAD
0x1c0 AND
0x1c1 PUSH1 0x24
0x1c3 CALLDATALOAD
0x1c4 PUSH2 0x4d2
0x1c7 JUMP
---
0x1b0: JUMPDEST 
0x1b2: V140 = 0xb0
0x1b5: V141 = 0x1
0x1b7: V142 = 0xa0
0x1b9: V143 = 0x2
0x1bb: V144 = EXP 0x2 0xa0
0x1bc: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V146 = 0x4
0x1bf: V147 = CALLDATALOAD 0x4
0x1c0: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V149 = 0x24
0x1c3: V150 = CALLDATALOAD 0x24
0x1c4: V151 = 0x4d2
0x1c7: JUMP 0x4d2
---
Entry stack: [V11, V136]
Stack pops: 1
Stack additions: [0xb0, V148, V150]
Exit stack: [V11, 0xb0, V148, V150]

================================

Block 0x1c8
[0x1c8:0x1cf]
---
Predecessors: [0x82]
Successors: [0x1d0, 0x1d4]
---
0x1c8 JUMPDEST
0x1c9 CALLVALUE
0x1ca DUP1
0x1cb ISZERO
0x1cc PUSH2 0x1d4
0x1cf JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V152 = CALLVALUE
0x1cb: V153 = ISZERO V152
0x1cc: V154 = 0x1d4
0x1cf: JUMPI 0x1d4 V153
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V152]
Exit stack: [V11, V152]

================================

Block 0x1d0
[0x1d0:0x1d3]
---
Predecessors: [0x1c8]
Successors: []
---
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 REVERT
---
0x1d0: V155 = 0x0
0x1d3: REVERT 0x0 0x0
---
Entry stack: [V11, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V152]

================================

Block 0x1d4
[0x1d4:0x1dc]
---
Predecessors: [0x1c8]
Successors: [0x585]
---
0x1d4 JUMPDEST
0x1d5 POP
0x1d6 PUSH2 0xb0
0x1d9 PUSH2 0x585
0x1dc JUMP
---
0x1d4: JUMPDEST 
0x1d6: V156 = 0xb0
0x1d9: V157 = 0x585
0x1dc: JUMP 0x585
---
Entry stack: [V11, V152]
Stack pops: 1
Stack additions: [0xb0]
Exit stack: [V11, 0xb0]

================================

Block 0x1dd
[0x1dd:0x1e4]
---
Predecessors: [0x8d]
Successors: [0x1e5, 0x1e9]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df DUP1
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V158 = CALLVALUE
0x1e0: V159 = ISZERO V158
0x1e1: V160 = 0x1e9
0x1e4: JUMPI 0x1e9 V159
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V158]
Exit stack: [V11, V158]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V161 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V11, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V158]

================================

Block 0x1e9
[0x1e9:0x1fd]
---
Predecessors: [0x1dd]
Successors: [0x62a]
---
0x1e9 JUMPDEST
0x1ea POP
0x1eb PUSH2 0xb0
0x1ee PUSH1 0x1
0x1f0 PUSH1 0xa0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SUB
0x1f6 PUSH1 0x4
0x1f8 CALLDATALOAD
0x1f9 AND
0x1fa PUSH2 0x62a
0x1fd JUMP
---
0x1e9: JUMPDEST 
0x1eb: V162 = 0xb0
0x1ee: V163 = 0x1
0x1f0: V164 = 0xa0
0x1f2: V165 = 0x2
0x1f4: V166 = EXP 0x2 0xa0
0x1f5: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f6: V168 = 0x4
0x1f8: V169 = CALLDATALOAD 0x4
0x1f9: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V171 = 0x62a
0x1fd: JUMP 0x62a
---
Entry stack: [V11, V158]
Stack pops: 1
Stack additions: [0xb0, V170]
Exit stack: [V11, 0xb0, V170]

================================

Block 0x1fe
[0x1fe:0x205]
---
Predecessors: [0x98]
Successors: [0x206, 0x20a]
---
0x1fe JUMPDEST
0x1ff CALLVALUE
0x200 DUP1
0x201 ISZERO
0x202 PUSH2 0x20a
0x205 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V172 = CALLVALUE
0x201: V173 = ISZERO V172
0x202: V174 = 0x20a
0x205: JUMPI 0x20a V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V11, V172]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x1fe]
Successors: []
---
0x206 PUSH1 0x0
0x208 DUP1
0x209 REVERT
---
0x206: V175 = 0x0
0x209: REVERT 0x0 0x0
---
Entry stack: [V11, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V172]

================================

Block 0x20a
[0x20a:0x215]
---
Predecessors: [0x1fe]
Successors: [0x721]
---
0x20a JUMPDEST
0x20b POP
0x20c PUSH2 0xb0
0x20f PUSH1 0x4
0x211 CALLDATALOAD
0x212 PUSH2 0x721
0x215 JUMP
---
0x20a: JUMPDEST 
0x20c: V176 = 0xb0
0x20f: V177 = 0x4
0x211: V178 = CALLDATALOAD 0x4
0x212: V179 = 0x721
0x215: JUMP 0x721
---
Entry stack: [V11, V172]
Stack pops: 1
Stack additions: [0xb0, V178]
Exit stack: [V11, 0xb0, V178]

================================

Block 0x216
[0x216:0x228]
---
Predecessors: [0xbe]
Successors: [0x229, 0x278]
---
0x216 JUMPDEST
0x217 PUSH1 0x0
0x219 SLOAD
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 AND
0x223 CALLER
0x224 EQ
0x225 PUSH2 0x278
0x228 JUMPI
---
0x216: JUMPDEST 
0x217: V180 = 0x0
0x219: V181 = S[0x0]
0x21a: V182 = 0x1
0x21c: V183 = 0xa0
0x21e: V184 = 0x2
0x220: V185 = EXP 0x2 0xa0
0x221: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x223: V188 = CALLER
0x224: V189 = EQ V188 V187
0x225: V190 = 0x278
0x228: JUMPI 0x278 V189
---
Entry stack: [V11, 0xb0, V59, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V59, V61]

================================

Block 0x229
[0x229:0x277]
---
Predecessors: [0x216]
Successors: []
---
0x229 PUSH1 0x40
0x22b DUP1
0x22c MLOAD
0x22d PUSH1 0xe5
0x22f PUSH1 0x2
0x231 EXP
0x232 PUSH3 0x461bcd
0x236 MUL
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x20
0x23b PUSH1 0x4
0x23d DUP3
0x23e ADD
0x23f MSTORE
0x240 PUSH1 0x26
0x242 PUSH1 0x24
0x244 DUP3
0x245 ADD
0x246 MSTORE
0x247 PUSH1 0x0
0x249 DUP1
0x24a MLOAD
0x24b PUSH1 0x20
0x24d PUSH2 0x8b0
0x250 DUP4
0x251 CODECOPY
0x252 DUP2
0x253 MLOAD
0x254 SWAP2
0x255 MSTORE
0x256 PUSH1 0x44
0x258 DUP3
0x259 ADD
0x25a MSTORE
0x25b PUSH1 0xd1
0x25d PUSH1 0x2
0x25f EXP
0x260 PUSH6 0x37bbb732b917
0x267 MUL
0x268 PUSH1 0x64
0x26a DUP3
0x26b ADD
0x26c MSTORE
0x26d SWAP1
0x26e MLOAD
0x26f SWAP1
0x270 DUP2
0x271 SWAP1
0x272 SUB
0x273 PUSH1 0x84
0x275 ADD
0x276 SWAP1
0x277 REVERT
---
0x229: V191 = 0x40
0x22c: V192 = M[0x40]
0x22d: V193 = 0xe5
0x22f: V194 = 0x2
0x231: V195 = EXP 0x2 0xe5
0x232: V196 = 0x461bcd
0x236: V197 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x238: M[V192] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x239: V198 = 0x20
0x23b: V199 = 0x4
0x23e: V200 = ADD V192 0x4
0x23f: M[V200] = 0x20
0x240: V201 = 0x26
0x242: V202 = 0x24
0x245: V203 = ADD V192 0x24
0x246: M[V203] = 0x26
0x247: V204 = 0x0
0x24a: V205 = M[0x0]
0x24b: V206 = 0x20
0x24d: V207 = 0x8b0
0x251: CODECOPY 0x0 0x8b0 0x20
0x253: V208 = M[0x0]
0x255: M[0x0] = V205
0x256: V209 = 0x44
0x259: V210 = ADD V192 0x44
0x25a: M[V210] = V208
0x25b: V211 = 0xd1
0x25d: V212 = 0x2
0x25f: V213 = EXP 0x2 0xd1
0x260: V214 = 0x37bbb732b917
0x267: V215 = MUL 0x37bbb732b917 0x20000000000000000000000000000000000000000000000000000
0x268: V216 = 0x64
0x26b: V217 = ADD V192 0x64
0x26c: M[V217] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x26e: V218 = M[0x40]
0x272: V219 = SUB V192 V218
0x273: V220 = 0x84
0x275: V221 = ADD 0x84 V219
0x277: REVERT V218 V221
---
Entry stack: [V11, 0xb0, V59, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V59, V61]

================================

Block 0x278
[0x278:0x282]
---
Predecessors: [0x216]
Successors: [0x283, 0x287]
---
0x278 JUMPDEST
0x279 PUSH1 0x2
0x27b SLOAD
0x27c DUP2
0x27d GT
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x278: JUMPDEST 
0x279: V222 = 0x2
0x27b: V223 = S[0x2]
0x27d: V224 = GT V61 V223
0x27e: V225 = ISZERO V224
0x27f: V226 = 0x287
0x282: JUMPI 0x287 V225
---
Entry stack: [V11, 0xb0, V59, V61]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb0, V59, V61]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x278]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V227 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V59, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V59, V61]

================================

Block 0x287
[0x287:0x2b1]
---
Predecessors: [0x278]
Successors: [0x2b2, 0x30b]
---
0x287 JUMPDEST
0x288 PUSH1 0x40
0x28a MLOAD
0x28b PUSH1 0x1
0x28d PUSH1 0xa0
0x28f PUSH1 0x2
0x291 EXP
0x292 SUB
0x293 DUP4
0x294 AND
0x295 SWAP1
0x296 DUP3
0x297 ISZERO
0x298 PUSH2 0x8fc
0x29b MUL
0x29c SWAP1
0x29d DUP4
0x29e SWAP1
0x29f PUSH1 0x0
0x2a1 DUP2
0x2a2 DUP2
0x2a3 DUP2
0x2a4 DUP6
0x2a5 DUP9
0x2a6 DUP9
0x2a7 CALL
0x2a8 SWAP4
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad ISZERO
0x2ae PUSH2 0x30b
0x2b1 JUMPI
---
0x287: JUMPDEST 
0x288: V228 = 0x40
0x28a: V229 = M[0x40]
0x28b: V230 = 0x1
0x28d: V231 = 0xa0
0x28f: V232 = 0x2
0x291: V233 = EXP 0x2 0xa0
0x292: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V235 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0x297: V236 = ISZERO V61
0x298: V237 = 0x8fc
0x29b: V238 = MUL 0x8fc V236
0x29f: V239 = 0x0
0x2a7: V240 = CALL V238 V235 V61 V229 0x0 V229 0x0
0x2ad: V241 = ISZERO V240
0x2ae: V242 = 0x30b
0x2b1: JUMPI 0x30b V241
---
Entry stack: [V11, 0xb0, V59, V61]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb0, V59, V61]

================================

Block 0x2b2
[0x2b2:0x2c3]
---
Predecessors: [0x287]
Successors: [0x88a]
---
0x2b2 PUSH1 0x2
0x2b4 SLOAD
0x2b5 PUSH2 0x2c4
0x2b8 SWAP1
0x2b9 DUP3
0x2ba PUSH4 0xffffffff
0x2bf PUSH2 0x88a
0x2c2 AND
0x2c3 JUMP
---
0x2b2: V243 = 0x2
0x2b4: V244 = S[0x2]
0x2b5: V245 = 0x2c4
0x2ba: V246 = 0xffffffff
0x2bf: V247 = 0x88a
0x2c2: V248 = AND 0x88a 0xffffffff
0x2c3: JUMP 0x88a
---
Entry stack: [V11, 0xb0, V59, V61]
Stack pops: 1
Stack additions: [S0, 0x2c4, V244, S0]
Exit stack: [V11, 0xb0, V59, V61, 0x2c4, V244, V61]

================================

Block 0x2c4
[0x2c4:0x30a]
---
Predecessors: [0x896]
Successors: [0x34b]
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x2
0x2c7 SSTORE
0x2c8 PUSH1 0x40
0x2ca DUP1
0x2cb MLOAD
0x2cc DUP3
0x2cd DUP2
0x2ce MSTORE
0x2cf SWAP1
0x2d0 MLOAD
0x2d1 PUSH1 0x1
0x2d3 PUSH1 0xa0
0x2d5 PUSH1 0x2
0x2d7 EXP
0x2d8 SUB
0x2d9 DUP5
0x2da AND
0x2db SWAP2
0x2dc PUSH32 0xc388db0e8aa560a59633c094a0d0aa21322cd6234836fd5bac00fc5ae63b5783
0x2fd SWAP2
0x2fe SWAP1
0x2ff DUP2
0x300 SWAP1
0x301 SUB
0x302 PUSH1 0x20
0x304 ADD
0x305 SWAP1
0x306 LOG2
0x307 PUSH2 0x34b
0x30a JUMP
---
0x2c4: JUMPDEST 
0x2c5: V249 = 0x2
0x2c7: S[0x2] = V741
0x2c8: V250 = 0x40
0x2cb: V251 = M[0x40]
0x2ce: M[V251] = S1
0x2d0: V252 = M[0x40]
0x2d1: V253 = 0x1
0x2d3: V254 = 0xa0
0x2d5: V255 = 0x2
0x2d7: V256 = EXP 0x2 0xa0
0x2d8: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2da: V258 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V259 = 0xc388db0e8aa560a59633c094a0d0aa21322cd6234836fd5bac00fc5ae63b5783
0x301: V260 = SUB V251 V252
0x302: V261 = 0x20
0x304: V262 = ADD 0x20 V260
0x306: LOG V252 V262 0xc388db0e8aa560a59633c094a0d0aa21322cd6234836fd5bac00fc5ae63b5783 V258
0x307: V263 = 0x34b
0x30a: JUMP 0x34b
---
Entry stack: [V11, 0xb0, S2, S1, V741]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V11, 0xb0, S2, S1]

================================

Block 0x30b
[0x30b:0x34a]
---
Predecessors: [0x287]
Successors: [0x34b]
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e DUP1
0x30f MLOAD
0x310 DUP3
0x311 DUP2
0x312 MSTORE
0x313 SWAP1
0x314 MLOAD
0x315 PUSH1 0x1
0x317 PUSH1 0xa0
0x319 PUSH1 0x2
0x31b EXP
0x31c SUB
0x31d DUP5
0x31e AND
0x31f SWAP2
0x320 PUSH32 0xac464fe4d3a86b9121261ac0a01dd981bfe0777c7c9d9c8f4473d31a9c0f9d2d
0x341 SWAP2
0x342 SWAP1
0x343 DUP2
0x344 SWAP1
0x345 SUB
0x346 PUSH1 0x20
0x348 ADD
0x349 SWAP1
0x34a LOG2
---
0x30b: JUMPDEST 
0x30c: V264 = 0x40
0x30f: V265 = M[0x40]
0x312: M[V265] = V61
0x314: V266 = M[0x40]
0x315: V267 = 0x1
0x317: V268 = 0xa0
0x319: V269 = 0x2
0x31b: V270 = EXP 0x2 0xa0
0x31c: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V272 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0x320: V273 = 0xac464fe4d3a86b9121261ac0a01dd981bfe0777c7c9d9c8f4473d31a9c0f9d2d
0x345: V274 = SUB V265 V266
0x346: V275 = 0x20
0x348: V276 = ADD 0x20 V274
0x34a: LOG V266 V276 0xac464fe4d3a86b9121261ac0a01dd981bfe0777c7c9d9c8f4473d31a9c0f9d2d V272
---
Entry stack: [V11, 0xb0, V59, V61]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb0, V59, V61]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x2c4, 0x30b]
Successors: [0xb0]
---
0x34b JUMPDEST
0x34c POP
0x34d POP
0x34e JUMP
---
0x34b: JUMPDEST 
0x34e: JUMP 0xb0
---
Entry stack: [V11, 0xb0, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x34f
[0x34f:0x361]
---
Predecessors: [0xe2]
Successors: [0x362, 0x3b1]
---
0x34f JUMPDEST
0x350 PUSH1 0x0
0x352 SLOAD
0x353 PUSH1 0x1
0x355 PUSH1 0xa0
0x357 PUSH1 0x2
0x359 EXP
0x35a SUB
0x35b AND
0x35c CALLER
0x35d EQ
0x35e PUSH2 0x3b1
0x361 JUMPI
---
0x34f: JUMPDEST 
0x350: V277 = 0x0
0x352: V278 = S[0x0]
0x353: V279 = 0x1
0x355: V280 = 0xa0
0x357: V281 = 0x2
0x359: V282 = EXP 0x2 0xa0
0x35a: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35b: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x35c: V285 = CALLER
0x35d: V286 = EQ V285 V284
0x35e: V287 = 0x3b1
0x361: JUMPI 0x3b1 V286
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x362
[0x362:0x3b0]
---
Predecessors: [0x34f]
Successors: []
---
0x362 PUSH1 0x40
0x364 DUP1
0x365 MLOAD
0x366 PUSH1 0xe5
0x368 PUSH1 0x2
0x36a EXP
0x36b PUSH3 0x461bcd
0x36f MUL
0x370 DUP2
0x371 MSTORE
0x372 PUSH1 0x20
0x374 PUSH1 0x4
0x376 DUP3
0x377 ADD
0x378 MSTORE
0x379 PUSH1 0x26
0x37b PUSH1 0x24
0x37d DUP3
0x37e ADD
0x37f MSTORE
0x380 PUSH1 0x0
0x382 DUP1
0x383 MLOAD
0x384 PUSH1 0x20
0x386 PUSH2 0x8b0
0x389 DUP4
0x38a CODECOPY
0x38b DUP2
0x38c MLOAD
0x38d SWAP2
0x38e MSTORE
0x38f PUSH1 0x44
0x391 DUP3
0x392 ADD
0x393 MSTORE
0x394 PUSH1 0xd1
0x396 PUSH1 0x2
0x398 EXP
0x399 PUSH6 0x37bbb732b917
0x3a0 MUL
0x3a1 PUSH1 0x64
0x3a3 DUP3
0x3a4 ADD
0x3a5 MSTORE
0x3a6 SWAP1
0x3a7 MLOAD
0x3a8 SWAP1
0x3a9 DUP2
0x3aa SWAP1
0x3ab SUB
0x3ac PUSH1 0x84
0x3ae ADD
0x3af SWAP1
0x3b0 REVERT
---
0x362: V288 = 0x40
0x365: V289 = M[0x40]
0x366: V290 = 0xe5
0x368: V291 = 0x2
0x36a: V292 = EXP 0x2 0xe5
0x36b: V293 = 0x461bcd
0x36f: V294 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x371: M[V289] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x372: V295 = 0x20
0x374: V296 = 0x4
0x377: V297 = ADD V289 0x4
0x378: M[V297] = 0x20
0x379: V298 = 0x26
0x37b: V299 = 0x24
0x37e: V300 = ADD V289 0x24
0x37f: M[V300] = 0x26
0x380: V301 = 0x0
0x383: V302 = M[0x0]
0x384: V303 = 0x20
0x386: V304 = 0x8b0
0x38a: CODECOPY 0x0 0x8b0 0x20
0x38c: V305 = M[0x0]
0x38e: M[0x0] = V302
0x38f: V306 = 0x44
0x392: V307 = ADD V289 0x44
0x393: M[V307] = V305
0x394: V308 = 0xd1
0x396: V309 = 0x2
0x398: V310 = EXP 0x2 0xd1
0x399: V311 = 0x37bbb732b917
0x3a0: V312 = MUL 0x37bbb732b917 0x20000000000000000000000000000000000000000000000000000
0x3a1: V313 = 0x64
0x3a4: V314 = ADD V289 0x64
0x3a5: M[V314] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x3a7: V315 = M[0x40]
0x3ab: V316 = SUB V289 V315
0x3ac: V317 = 0x84
0x3ae: V318 = ADD 0x84 V316
0x3b0: REVERT V315 V318
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x3b1
[0x3b1:0x3e7]
---
Predecessors: [0x34f]
Successors: [0x3e8, 0x3f1]
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x0
0x3b4 PUSH1 0x2
0x3b6 DUP2
0x3b7 SWAP1
0x3b8 SSTORE
0x3b9 DUP1
0x3ba SLOAD
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be PUSH1 0x1
0x3c0 PUSH1 0xa0
0x3c2 PUSH1 0x2
0x3c4 EXP
0x3c5 SUB
0x3c6 SWAP1
0x3c7 SWAP2
0x3c8 AND
0x3c9 SWAP2
0x3ca ADDRESS
0x3cb BALANCE
0x3cc DUP1
0x3cd ISZERO
0x3ce PUSH2 0x8fc
0x3d1 MUL
0x3d2 SWAP3
0x3d3 SWAP1
0x3d4 SWAP2
0x3d5 DUP2
0x3d6 DUP2
0x3d7 DUP2
0x3d8 DUP6
0x3d9 DUP9
0x3da DUP9
0x3db CALL
0x3dc SWAP4
0x3dd POP
0x3de POP
0x3df POP
0x3e0 POP
0x3e1 ISZERO
0x3e2 DUP1
0x3e3 ISZERO
0x3e4 PUSH2 0x3f1
0x3e7 JUMPI
---
0x3b1: JUMPDEST 
0x3b2: V319 = 0x0
0x3b4: V320 = 0x2
0x3b8: S[0x2] = 0x0
0x3ba: V321 = S[0x0]
0x3bb: V322 = 0x40
0x3bd: V323 = M[0x40]
0x3be: V324 = 0x1
0x3c0: V325 = 0xa0
0x3c2: V326 = 0x2
0x3c4: V327 = EXP 0x2 0xa0
0x3c5: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c8: V329 = AND V321 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: V330 = ADDRESS
0x3cb: V331 = BALANCE V330
0x3cd: V332 = ISZERO V331
0x3ce: V333 = 0x8fc
0x3d1: V334 = MUL 0x8fc V332
0x3db: V335 = CALL V334 V329 V331 V323 0x0 V323 0x0
0x3e1: V336 = ISZERO V335
0x3e3: V337 = ISZERO V336
0x3e4: V338 = 0x3f1
0x3e7: JUMPI 0x3f1 V337
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: [V336]
Exit stack: [V11, 0xb0, V336]

================================

Block 0x3e8
[0x3e8:0x3f0]
---
Predecessors: [0x3b1]
Successors: []
---
0x3e8 RETURNDATASIZE
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec RETURNDATACOPY
0x3ed RETURNDATASIZE
0x3ee PUSH1 0x0
0x3f0 REVERT
---
0x3e8: V339 = RETURNDATASIZE
0x3e9: V340 = 0x0
0x3ec: RETURNDATACOPY 0x0 0x0 V339
0x3ed: V341 = RETURNDATASIZE
0x3ee: V342 = 0x0
0x3f0: REVERT 0x0 V341
---
Entry stack: [V11, 0xb0, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V336]

================================

Block 0x3f1
[0x3f1:0x3f3]
---
Predecessors: [0x3b1]
Successors: [0xb0]
---
0x3f1 JUMPDEST
0x3f2 POP
0x3f3 JUMP
---
0x3f1: JUMPDEST 
0x3f3: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V336]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f4
[0x3f4:0x40a]
---
Predecessors: [0xf7]
Successors: [0x100]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x0
0x3f7 SLOAD
0x3f8 PUSH1 0x2
0x3fa SLOAD
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 SWAP1
0x404 SWAP2
0x405 AND
0x406 SWAP2
0x407 ADDRESS
0x408 BALANCE
0x409 SWAP1
0x40a JUMP
---
0x3f4: JUMPDEST 
0x3f5: V343 = 0x0
0x3f7: V344 = S[0x0]
0x3f8: V345 = 0x2
0x3fa: V346 = S[0x2]
0x3fb: V347 = 0x1
0x3fd: V348 = 0xa0
0x3ff: V349 = 0x2
0x401: V350 = EXP 0x2 0xa0
0x402: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x405: V352 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0x407: V353 = ADDRESS
0x408: V354 = BALANCE V353
0x40a: JUMP 0x100
---
Entry stack: [V11, 0x100]
Stack pops: 1
Stack additions: [V352, V346, V354]
Exit stack: [V11, V352, V346, V354]

================================

Block 0x40b
[0x40b:0x410]
---
Predecessors: [0x134]
Successors: [0x13d]
---
0x40b JUMPDEST
0x40c PUSH1 0x2
0x40e SLOAD
0x40f DUP2
0x410 JUMP
---
0x40b: JUMPDEST 
0x40c: V355 = 0x2
0x40e: V356 = S[0x2]
0x410: JUMP 0x13d
---
Entry stack: [V11, 0x13d]
Stack pops: 1
Stack additions: [S0, V356]
Exit stack: [V11, 0x13d, V356]

================================

Block 0x411
[0x411:0x423]
---
Predecessors: [0x15b]
Successors: [0x424, 0x473]
---
0x411 JUMPDEST
0x412 PUSH1 0x0
0x414 SLOAD
0x415 PUSH1 0x1
0x417 PUSH1 0xa0
0x419 PUSH1 0x2
0x41b EXP
0x41c SUB
0x41d AND
0x41e CALLER
0x41f EQ
0x420 PUSH2 0x473
0x423 JUMPI
---
0x411: JUMPDEST 
0x412: V357 = 0x0
0x414: V358 = S[0x0]
0x415: V359 = 0x1
0x417: V360 = 0xa0
0x419: V361 = 0x2
0x41b: V362 = EXP 0x2 0xa0
0x41c: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x41e: V365 = CALLER
0x41f: V366 = EQ V365 V364
0x420: V367 = 0x473
0x423: JUMPI 0x473 V366
---
Entry stack: [V11, 0xb0, V114, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V114, V116]

================================

Block 0x424
[0x424:0x472]
---
Predecessors: [0x411]
Successors: []
---
0x424 PUSH1 0x40
0x426 DUP1
0x427 MLOAD
0x428 PUSH1 0xe5
0x42a PUSH1 0x2
0x42c EXP
0x42d PUSH3 0x461bcd
0x431 MUL
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x20
0x436 PUSH1 0x4
0x438 DUP3
0x439 ADD
0x43a MSTORE
0x43b PUSH1 0x26
0x43d PUSH1 0x24
0x43f DUP3
0x440 ADD
0x441 MSTORE
0x442 PUSH1 0x0
0x444 DUP1
0x445 MLOAD
0x446 PUSH1 0x20
0x448 PUSH2 0x8b0
0x44b DUP4
0x44c CODECOPY
0x44d DUP2
0x44e MLOAD
0x44f SWAP2
0x450 MSTORE
0x451 PUSH1 0x44
0x453 DUP3
0x454 ADD
0x455 MSTORE
0x456 PUSH1 0xd1
0x458 PUSH1 0x2
0x45a EXP
0x45b PUSH6 0x37bbb732b917
0x462 MUL
0x463 PUSH1 0x64
0x465 DUP3
0x466 ADD
0x467 MSTORE
0x468 SWAP1
0x469 MLOAD
0x46a SWAP1
0x46b DUP2
0x46c SWAP1
0x46d SUB
0x46e PUSH1 0x84
0x470 ADD
0x471 SWAP1
0x472 REVERT
---
0x424: V368 = 0x40
0x427: V369 = M[0x40]
0x428: V370 = 0xe5
0x42a: V371 = 0x2
0x42c: V372 = EXP 0x2 0xe5
0x42d: V373 = 0x461bcd
0x431: V374 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x433: M[V369] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x434: V375 = 0x20
0x436: V376 = 0x4
0x439: V377 = ADD V369 0x4
0x43a: M[V377] = 0x20
0x43b: V378 = 0x26
0x43d: V379 = 0x24
0x440: V380 = ADD V369 0x24
0x441: M[V380] = 0x26
0x442: V381 = 0x0
0x445: V382 = M[0x0]
0x446: V383 = 0x20
0x448: V384 = 0x8b0
0x44c: CODECOPY 0x0 0x8b0 0x20
0x44e: V385 = M[0x0]
0x450: M[0x0] = V382
0x451: V386 = 0x44
0x454: V387 = ADD V369 0x44
0x455: M[V387] = V385
0x456: V388 = 0xd1
0x458: V389 = 0x2
0x45a: V390 = EXP 0x2 0xd1
0x45b: V391 = 0x37bbb732b917
0x462: V392 = MUL 0x37bbb732b917 0x20000000000000000000000000000000000000000000000000000
0x463: V393 = 0x64
0x466: V394 = ADD V369 0x64
0x467: M[V394] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x469: V395 = M[0x40]
0x46d: V396 = SUB V369 V395
0x46e: V397 = 0x84
0x470: V398 = ADD 0x84 V396
0x472: REVERT V395 V398
---
Entry stack: [V11, 0xb0, V114, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V114, V116]

================================

Block 0x473
[0x473:0x485]
---
Predecessors: [0x411]
Successors: [0x89c]
---
0x473 JUMPDEST
0x474 PUSH1 0x2
0x476 SLOAD
0x477 PUSH2 0x486
0x47a SWAP1
0x47b DUP3
0x47c PUSH4 0xffffffff
0x481 PUSH2 0x89c
0x484 AND
0x485 JUMP
---
0x473: JUMPDEST 
0x474: V399 = 0x2
0x476: V400 = S[0x2]
0x477: V401 = 0x486
0x47c: V402 = 0xffffffff
0x481: V403 = 0x89c
0x484: V404 = AND 0x89c 0xffffffff
0x485: JUMP 0x89c
---
Entry stack: [V11, 0xb0, V114, V116]
Stack pops: 1
Stack additions: [S0, 0x486, V400, S0]
Exit stack: [V11, 0xb0, V114, V116, 0x486, V400, V116]

================================

Block 0x486
[0x486:0x4c2]
---
Predecessors: [0x8a9]
Successors: [0xb0]
---
0x486 JUMPDEST
0x487 PUSH1 0x2
0x489 SSTORE
0x48a PUSH1 0x40
0x48c MLOAD
0x48d DUP2
0x48e SWAP1
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 DUP5
0x498 AND
0x499 SWAP1
0x49a PUSH32 0x7297b46ab824f11fce7c68a5f283fc0fbc04fabbc9a91024d543d09596cefe4f
0x4bb SWAP1
0x4bc PUSH1 0x0
0x4be SWAP1
0x4bf LOG3
0x4c0 POP
0x4c1 POP
0x4c2 JUMP
---
0x486: JUMPDEST 
0x487: V405 = 0x2
0x489: S[0x2] = S0
0x48a: V406 = 0x40
0x48c: V407 = M[0x40]
0x48f: V408 = 0x1
0x491: V409 = 0xa0
0x493: V410 = 0x2
0x495: V411 = EXP 0x2 0xa0
0x496: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x498: V413 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V414 = 0x7297b46ab824f11fce7c68a5f283fc0fbc04fabbc9a91024d543d09596cefe4f
0x4bc: V415 = 0x0
0x4bf: LOG V407 0x0 0x7297b46ab824f11fce7c68a5f283fc0fbc04fabbc9a91024d543d09596cefe4f V413 S1
0x4c2: JUMP S3
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x4c3
[0x4c3:0x4d1]
---
Predecessors: [0x17f]
Successors: [0x188]
---
0x4c3 JUMPDEST
0x4c4 PUSH1 0x0
0x4c6 SLOAD
0x4c7 PUSH1 0x1
0x4c9 PUSH1 0xa0
0x4cb PUSH1 0x2
0x4cd EXP
0x4ce SUB
0x4cf AND
0x4d0 DUP2
0x4d1 JUMP
---
0x4c3: JUMPDEST 
0x4c4: V416 = 0x0
0x4c6: V417 = S[0x0]
0x4c7: V418 = 0x1
0x4c9: V419 = 0xa0
0x4cb: V420 = 0x2
0x4cd: V421 = EXP 0x2 0xa0
0x4ce: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x4d1: JUMP 0x188
---
Entry stack: [V11, 0x188]
Stack pops: 1
Stack additions: [S0, V423]
Exit stack: [V11, 0x188, V423]

================================

Block 0x4d2
[0x4d2:0x4e4]
---
Predecessors: [0x1b0]
Successors: [0x4e5, 0x534]
---
0x4d2 JUMPDEST
0x4d3 PUSH1 0x0
0x4d5 SLOAD
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0xa0
0x4da PUSH1 0x2
0x4dc EXP
0x4dd SUB
0x4de AND
0x4df CALLER
0x4e0 EQ
0x4e1 PUSH2 0x534
0x4e4 JUMPI
---
0x4d2: JUMPDEST 
0x4d3: V424 = 0x0
0x4d5: V425 = S[0x0]
0x4d6: V426 = 0x1
0x4d8: V427 = 0xa0
0x4da: V428 = 0x2
0x4dc: V429 = EXP 0x2 0xa0
0x4dd: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4de: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4df: V432 = CALLER
0x4e0: V433 = EQ V432 V431
0x4e1: V434 = 0x534
0x4e4: JUMPI 0x534 V433
---
Entry stack: [V11, 0xb0, V148, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V148, V150]

================================

Block 0x4e5
[0x4e5:0x533]
---
Predecessors: [0x4d2]
Successors: []
---
0x4e5 PUSH1 0x40
0x4e7 DUP1
0x4e8 MLOAD
0x4e9 PUSH1 0xe5
0x4eb PUSH1 0x2
0x4ed EXP
0x4ee PUSH3 0x461bcd
0x4f2 MUL
0x4f3 DUP2
0x4f4 MSTORE
0x4f5 PUSH1 0x20
0x4f7 PUSH1 0x4
0x4f9 DUP3
0x4fa ADD
0x4fb MSTORE
0x4fc PUSH1 0x26
0x4fe PUSH1 0x24
0x500 DUP3
0x501 ADD
0x502 MSTORE
0x503 PUSH1 0x0
0x505 DUP1
0x506 MLOAD
0x507 PUSH1 0x20
0x509 PUSH2 0x8b0
0x50c DUP4
0x50d CODECOPY
0x50e DUP2
0x50f MLOAD
0x510 SWAP2
0x511 MSTORE
0x512 PUSH1 0x44
0x514 DUP3
0x515 ADD
0x516 MSTORE
0x517 PUSH1 0xd1
0x519 PUSH1 0x2
0x51b EXP
0x51c PUSH6 0x37bbb732b917
0x523 MUL
0x524 PUSH1 0x64
0x526 DUP3
0x527 ADD
0x528 MSTORE
0x529 SWAP1
0x52a MLOAD
0x52b SWAP1
0x52c DUP2
0x52d SWAP1
0x52e SUB
0x52f PUSH1 0x84
0x531 ADD
0x532 SWAP1
0x533 REVERT
---
0x4e5: V435 = 0x40
0x4e8: V436 = M[0x40]
0x4e9: V437 = 0xe5
0x4eb: V438 = 0x2
0x4ed: V439 = EXP 0x2 0xe5
0x4ee: V440 = 0x461bcd
0x4f2: V441 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x4f4: M[V436] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4f5: V442 = 0x20
0x4f7: V443 = 0x4
0x4fa: V444 = ADD V436 0x4
0x4fb: M[V444] = 0x20
0x4fc: V445 = 0x26
0x4fe: V446 = 0x24
0x501: V447 = ADD V436 0x24
0x502: M[V447] = 0x26
0x503: V448 = 0x0
0x506: V449 = M[0x0]
0x507: V450 = 0x20
0x509: V451 = 0x8b0
0x50d: CODECOPY 0x0 0x8b0 0x20
0x50f: V452 = M[0x0]
0x511: M[0x0] = V449
0x512: V453 = 0x44
0x515: V454 = ADD V436 0x44
0x516: M[V454] = V452
0x517: V455 = 0xd1
0x519: V456 = 0x2
0x51b: V457 = EXP 0x2 0xd1
0x51c: V458 = 0x37bbb732b917
0x523: V459 = MUL 0x37bbb732b917 0x20000000000000000000000000000000000000000000000000000
0x524: V460 = 0x64
0x527: V461 = ADD V436 0x64
0x528: M[V461] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x52a: V462 = M[0x40]
0x52e: V463 = SUB V436 V462
0x52f: V464 = 0x84
0x531: V465 = ADD 0x84 V463
0x533: REVERT V462 V465
---
Entry stack: [V11, 0xb0, V148, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V148, V150]

================================

Block 0x534
[0x534:0x546]
---
Predecessors: [0x4d2]
Successors: [0x88a]
---
0x534 JUMPDEST
0x535 PUSH1 0x2
0x537 SLOAD
0x538 PUSH2 0x547
0x53b SWAP1
0x53c DUP3
0x53d PUSH4 0xffffffff
0x542 PUSH2 0x88a
0x545 AND
0x546 JUMP
---
0x534: JUMPDEST 
0x535: V466 = 0x2
0x537: V467 = S[0x2]
0x538: V468 = 0x547
0x53d: V469 = 0xffffffff
0x542: V470 = 0x88a
0x545: V471 = AND 0x88a 0xffffffff
0x546: JUMP 0x88a
---
Entry stack: [V11, 0xb0, V148, V150]
Stack pops: 1
Stack additions: [S0, 0x547, V467, S0]
Exit stack: [V11, 0xb0, V148, V150, 0x547, V467, V150]

================================

Block 0x547
[0x547:0x576]
---
Predecessors: [0x896]
Successors: [0x577, 0x580]
---
0x547 JUMPDEST
0x548 PUSH1 0x2
0x54a SSTORE
0x54b PUSH1 0x40
0x54d MLOAD
0x54e PUSH1 0x1
0x550 PUSH1 0xa0
0x552 PUSH1 0x2
0x554 EXP
0x555 SUB
0x556 DUP4
0x557 AND
0x558 SWAP1
0x559 DUP3
0x55a ISZERO
0x55b PUSH2 0x8fc
0x55e MUL
0x55f SWAP1
0x560 DUP4
0x561 SWAP1
0x562 PUSH1 0x0
0x564 DUP2
0x565 DUP2
0x566 DUP2
0x567 DUP6
0x568 DUP9
0x569 DUP9
0x56a CALL
0x56b SWAP4
0x56c POP
0x56d POP
0x56e POP
0x56f POP
0x570 ISZERO
0x571 DUP1
0x572 ISZERO
0x573 PUSH2 0x580
0x576 JUMPI
---
0x547: JUMPDEST 
0x548: V472 = 0x2
0x54a: S[0x2] = V741
0x54b: V473 = 0x40
0x54d: V474 = M[0x40]
0x54e: V475 = 0x1
0x550: V476 = 0xa0
0x552: V477 = 0x2
0x554: V478 = EXP 0x2 0xa0
0x555: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x557: V480 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x55a: V481 = ISZERO S1
0x55b: V482 = 0x8fc
0x55e: V483 = MUL 0x8fc V481
0x562: V484 = 0x0
0x56a: V485 = CALL V483 V480 S1 V474 0x0 V474 0x0
0x570: V486 = ISZERO V485
0x572: V487 = ISZERO V486
0x573: V488 = 0x580
0x576: JUMPI 0x580 V487
---
Entry stack: [V11, 0xb0, S2, S1, V741]
Stack pops: 3
Stack additions: [S2, S1, V486]
Exit stack: [V11, 0xb0, S2, S1, V486]

================================

Block 0x577
[0x577:0x57f]
---
Predecessors: [0x547]
Successors: []
---
0x577 RETURNDATASIZE
0x578 PUSH1 0x0
0x57a DUP1
0x57b RETURNDATACOPY
0x57c RETURNDATASIZE
0x57d PUSH1 0x0
0x57f REVERT
---
0x577: V489 = RETURNDATASIZE
0x578: V490 = 0x0
0x57b: RETURNDATACOPY 0x0 0x0 V489
0x57c: V491 = RETURNDATASIZE
0x57d: V492 = 0x0
0x57f: REVERT 0x0 V491
---
Entry stack: [V11, 0xb0, S2, S1, V486]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, S2, S1, V486]

================================

Block 0x580
[0x580:0x584]
---
Predecessors: [0x547]
Successors: [0xb0]
---
0x580 JUMPDEST
0x581 POP
0x582 POP
0x583 POP
0x584 JUMP
---
0x580: JUMPDEST 
0x584: JUMP 0xb0
---
Entry stack: [V11, 0xb0, S2, S1, V486]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x585
[0x585:0x597]
---
Predecessors: [0x1d4]
Successors: [0x598, 0x5f9]
---
0x585 JUMPDEST
0x586 PUSH1 0x1
0x588 SLOAD
0x589 PUSH1 0x1
0x58b PUSH1 0xa0
0x58d PUSH1 0x2
0x58f EXP
0x590 SUB
0x591 AND
0x592 CALLER
0x593 EQ
0x594 PUSH2 0x5f9
0x597 JUMPI
---
0x585: JUMPDEST 
0x586: V493 = 0x1
0x588: V494 = S[0x1]
0x589: V495 = 0x1
0x58b: V496 = 0xa0
0x58d: V497 = 0x2
0x58f: V498 = EXP 0x2 0xa0
0x590: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x591: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x592: V501 = CALLER
0x593: V502 = EQ V501 V500
0x594: V503 = 0x5f9
0x597: JUMPI 0x5f9 V502
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x598
[0x598:0x5f8]
---
Predecessors: [0x585]
Successors: []
---
0x598 PUSH1 0x40
0x59a DUP1
0x59b MLOAD
0x59c PUSH1 0xe5
0x59e PUSH1 0x2
0x5a0 EXP
0x5a1 PUSH3 0x461bcd
0x5a5 MUL
0x5a6 DUP2
0x5a7 MSTORE
0x5a8 PUSH1 0x20
0x5aa PUSH1 0x4
0x5ac DUP3
0x5ad ADD
0x5ae MSTORE
0x5af PUSH1 0x26
0x5b1 PUSH1 0x24
0x5b3 DUP3
0x5b4 ADD
0x5b5 MSTORE
0x5b6 PUSH32 0x43616e206f6e6c792061636365707420707265617070726f766564206e657720
0x5d7 PUSH1 0x44
0x5d9 DUP3
0x5da ADD
0x5db MSTORE
0x5dc PUSH1 0xd1
0x5de PUSH1 0x2
0x5e0 EXP
0x5e1 PUSH6 0x37bbb732b917
0x5e8 MUL
0x5e9 PUSH1 0x64
0x5eb DUP3
0x5ec ADD
0x5ed MSTORE
0x5ee SWAP1
0x5ef MLOAD
0x5f0 SWAP1
0x5f1 DUP2
0x5f2 SWAP1
0x5f3 SUB
0x5f4 PUSH1 0x84
0x5f6 ADD
0x5f7 SWAP1
0x5f8 REVERT
---
0x598: V504 = 0x40
0x59b: V505 = M[0x40]
0x59c: V506 = 0xe5
0x59e: V507 = 0x2
0x5a0: V508 = EXP 0x2 0xe5
0x5a1: V509 = 0x461bcd
0x5a5: V510 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5a7: M[V505] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5a8: V511 = 0x20
0x5aa: V512 = 0x4
0x5ad: V513 = ADD V505 0x4
0x5ae: M[V513] = 0x20
0x5af: V514 = 0x26
0x5b1: V515 = 0x24
0x5b4: V516 = ADD V505 0x24
0x5b5: M[V516] = 0x26
0x5b6: V517 = 0x43616e206f6e6c792061636365707420707265617070726f766564206e657720
0x5d7: V518 = 0x44
0x5da: V519 = ADD V505 0x44
0x5db: M[V519] = 0x43616e206f6e6c792061636365707420707265617070726f766564206e657720
0x5dc: V520 = 0xd1
0x5de: V521 = 0x2
0x5e0: V522 = EXP 0x2 0xd1
0x5e1: V523 = 0x37bbb732b917
0x5e8: V524 = MUL 0x37bbb732b917 0x20000000000000000000000000000000000000000000000000000
0x5e9: V525 = 0x64
0x5ec: V526 = ADD V505 0x64
0x5ed: M[V526] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x5ef: V527 = M[0x40]
0x5f3: V528 = SUB V505 V527
0x5f4: V529 = 0x84
0x5f6: V530 = ADD 0x84 V528
0x5f8: REVERT V527 V530
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x5f9
[0x5f9:0x629]
---
Predecessors: [0x585]
Successors: [0xb0]
---
0x5f9 JUMPDEST
0x5fa PUSH1 0x1
0x5fc SLOAD
0x5fd PUSH1 0x0
0x5ff DUP1
0x600 SLOAD
0x601 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x616 NOT
0x617 AND
0x618 PUSH1 0x1
0x61a PUSH1 0xa0
0x61c PUSH1 0x2
0x61e EXP
0x61f SUB
0x620 SWAP1
0x621 SWAP3
0x622 AND
0x623 SWAP2
0x624 SWAP1
0x625 SWAP2
0x626 OR
0x627 SWAP1
0x628 SSTORE
0x629 JUMP
---
0x5f9: JUMPDEST 
0x5fa: V531 = 0x1
0x5fc: V532 = S[0x1]
0x5fd: V533 = 0x0
0x600: V534 = S[0x0]
0x601: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x616: V536 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x617: V537 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V534
0x618: V538 = 0x1
0x61a: V539 = 0xa0
0x61c: V540 = 0x2
0x61e: V541 = EXP 0x2 0xa0
0x61f: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x622: V543 = AND V532 0xffffffffffffffffffffffffffffffffffffffff
0x626: V544 = OR V543 V537
0x628: S[0x0] = V544
0x629: JUMP 0xb0
---
Entry stack: [V11, 0xb0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x62a
[0x62a:0x63c]
---
Predecessors: [0x1e9]
Successors: [0x63d, 0x68c]
---
0x62a JUMPDEST
0x62b PUSH1 0x0
0x62d SLOAD
0x62e PUSH1 0x1
0x630 PUSH1 0xa0
0x632 PUSH1 0x2
0x634 EXP
0x635 SUB
0x636 AND
0x637 CALLER
0x638 EQ
0x639 PUSH2 0x68c
0x63c JUMPI
---
0x62a: JUMPDEST 
0x62b: V545 = 0x0
0x62d: V546 = S[0x0]
0x62e: V547 = 0x1
0x630: V548 = 0xa0
0x632: V549 = 0x2
0x634: V550 = EXP 0x2 0xa0
0x635: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x636: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x637: V553 = CALLER
0x638: V554 = EQ V553 V552
0x639: V555 = 0x68c
0x63c: JUMPI 0x68c V554
---
Entry stack: [V11, 0xb0, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V170]

================================

Block 0x63d
[0x63d:0x68b]
---
Predecessors: [0x62a]
Successors: []
---
0x63d PUSH1 0x40
0x63f DUP1
0x640 MLOAD
0x641 PUSH1 0xe5
0x643 PUSH1 0x2
0x645 EXP
0x646 PUSH3 0x461bcd
0x64a MUL
0x64b DUP2
0x64c MSTORE
0x64d PUSH1 0x20
0x64f PUSH1 0x4
0x651 DUP3
0x652 ADD
0x653 MSTORE
0x654 PUSH1 0x26
0x656 PUSH1 0x24
0x658 DUP3
0x659 ADD
0x65a MSTORE
0x65b PUSH1 0x0
0x65d DUP1
0x65e MLOAD
0x65f PUSH1 0x20
0x661 PUSH2 0x8b0
0x664 DUP4
0x665 CODECOPY
0x666 DUP2
0x667 MLOAD
0x668 SWAP2
0x669 MSTORE
0x66a PUSH1 0x44
0x66c DUP3
0x66d ADD
0x66e MSTORE
0x66f PUSH1 0xd1
0x671 PUSH1 0x2
0x673 EXP
0x674 PUSH6 0x37bbb732b917
0x67b MUL
0x67c PUSH1 0x64
0x67e DUP3
0x67f ADD
0x680 MSTORE
0x681 SWAP1
0x682 MLOAD
0x683 SWAP1
0x684 DUP2
0x685 SWAP1
0x686 SUB
0x687 PUSH1 0x84
0x689 ADD
0x68a SWAP1
0x68b REVERT
---
0x63d: V556 = 0x40
0x640: V557 = M[0x40]
0x641: V558 = 0xe5
0x643: V559 = 0x2
0x645: V560 = EXP 0x2 0xe5
0x646: V561 = 0x461bcd
0x64a: V562 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x64c: M[V557] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x64d: V563 = 0x20
0x64f: V564 = 0x4
0x652: V565 = ADD V557 0x4
0x653: M[V565] = 0x20
0x654: V566 = 0x26
0x656: V567 = 0x24
0x659: V568 = ADD V557 0x24
0x65a: M[V568] = 0x26
0x65b: V569 = 0x0
0x65e: V570 = M[0x0]
0x65f: V571 = 0x20
0x661: V572 = 0x8b0
0x665: CODECOPY 0x0 0x8b0 0x20
0x667: V573 = M[0x0]
0x669: M[0x0] = V570
0x66a: V574 = 0x44
0x66d: V575 = ADD V557 0x44
0x66e: M[V575] = V573
0x66f: V576 = 0xd1
0x671: V577 = 0x2
0x673: V578 = EXP 0x2 0xd1
0x674: V579 = 0x37bbb732b917
0x67b: V580 = MUL 0x37bbb732b917 0x20000000000000000000000000000000000000000000000000000
0x67c: V581 = 0x64
0x67f: V582 = ADD V557 0x64
0x680: M[V582] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x682: V583 = M[0x40]
0x686: V584 = SUB V557 V583
0x687: V585 = 0x84
0x689: V586 = ADD 0x84 V584
0x68b: REVERT V583 V586
---
Entry stack: [V11, 0xb0, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V170]

================================

Block 0x68c
[0x68c:0x6a2]
---
Predecessors: [0x62a]
Successors: [0x6a3, 0x6f2]
---
0x68c JUMPDEST
0x68d PUSH1 0x0
0x68f SLOAD
0x690 PUSH1 0x1
0x692 PUSH1 0xa0
0x694 PUSH1 0x2
0x696 EXP
0x697 SUB
0x698 DUP3
0x699 DUP2
0x69a AND
0x69b SWAP2
0x69c AND
0x69d EQ
0x69e ISZERO
0x69f PUSH2 0x6f2
0x6a2 JUMPI
---
0x68c: JUMPDEST 
0x68d: V587 = 0x0
0x68f: V588 = S[0x0]
0x690: V589 = 0x1
0x692: V590 = 0xa0
0x694: V591 = 0x2
0x696: V592 = EXP 0x2 0xa0
0x697: V593 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69a: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x69c: V595 = AND V588 0xffffffffffffffffffffffffffffffffffffffff
0x69d: V596 = EQ V595 V594
0x69e: V597 = ISZERO V596
0x69f: V598 = 0x6f2
0x6a2: JUMPI 0x6f2 V597
---
Entry stack: [V11, 0xb0, V170]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb0, V170]

================================

Block 0x6a3
[0x6a3:0x6f1]
---
Predecessors: [0x68c]
Successors: []
---
0x6a3 PUSH1 0x40
0x6a5 DUP1
0x6a6 MLOAD
0x6a7 PUSH1 0xe5
0x6a9 PUSH1 0x2
0x6ab EXP
0x6ac PUSH3 0x461bcd
0x6b0 MUL
0x6b1 DUP2
0x6b2 MSTORE
0x6b3 PUSH1 0x20
0x6b5 PUSH1 0x4
0x6b7 DUP3
0x6b8 ADD
0x6b9 MSTORE
0x6ba PUSH1 0x1d
0x6bc PUSH1 0x24
0x6be DUP3
0x6bf ADD
0x6c0 MSTORE
0x6c1 PUSH32 0x43616e6e6f7420617070726f76652063757272656e74206f776e65722e000000
0x6e2 PUSH1 0x44
0x6e4 DUP3
0x6e5 ADD
0x6e6 MSTORE
0x6e7 SWAP1
0x6e8 MLOAD
0x6e9 SWAP1
0x6ea DUP2
0x6eb SWAP1
0x6ec SUB
0x6ed PUSH1 0x64
0x6ef ADD
0x6f0 SWAP1
0x6f1 REVERT
---
0x6a3: V599 = 0x40
0x6a6: V600 = M[0x40]
0x6a7: V601 = 0xe5
0x6a9: V602 = 0x2
0x6ab: V603 = EXP 0x2 0xe5
0x6ac: V604 = 0x461bcd
0x6b0: V605 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x6b2: M[V600] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6b3: V606 = 0x20
0x6b5: V607 = 0x4
0x6b8: V608 = ADD V600 0x4
0x6b9: M[V608] = 0x20
0x6ba: V609 = 0x1d
0x6bc: V610 = 0x24
0x6bf: V611 = ADD V600 0x24
0x6c0: M[V611] = 0x1d
0x6c1: V612 = 0x43616e6e6f7420617070726f76652063757272656e74206f776e65722e000000
0x6e2: V613 = 0x44
0x6e5: V614 = ADD V600 0x44
0x6e6: M[V614] = 0x43616e6e6f7420617070726f76652063757272656e74206f776e65722e000000
0x6e8: V615 = M[0x40]
0x6ec: V616 = SUB V600 V615
0x6ed: V617 = 0x64
0x6ef: V618 = ADD 0x64 V616
0x6f1: REVERT V615 V618
---
Entry stack: [V11, 0xb0, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V170]

================================

Block 0x6f2
[0x6f2:0x720]
---
Predecessors: [0x68c]
Successors: [0xb0]
---
0x6f2 JUMPDEST
0x6f3 PUSH1 0x1
0x6f5 DUP1
0x6f6 SLOAD
0x6f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70c NOT
0x70d AND
0x70e PUSH1 0x1
0x710 PUSH1 0xa0
0x712 PUSH1 0x2
0x714 EXP
0x715 SUB
0x716 SWAP3
0x717 SWAP1
0x718 SWAP3
0x719 AND
0x71a SWAP2
0x71b SWAP1
0x71c SWAP2
0x71d OR
0x71e SWAP1
0x71f SSTORE
0x720 JUMP
---
0x6f2: JUMPDEST 
0x6f3: V619 = 0x1
0x6f6: V620 = S[0x1]
0x6f7: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x70c: V622 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x70d: V623 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V620
0x70e: V624 = 0x1
0x710: V625 = 0xa0
0x712: V626 = 0x2
0x714: V627 = EXP 0x2 0xa0
0x715: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x719: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x71d: V630 = OR V629 V623
0x71f: S[0x1] = V630
0x720: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V170]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x721
[0x721:0x733]
---
Predecessors: [0x20a]
Successors: [0x734, 0x783]
---
0x721 JUMPDEST
0x722 PUSH1 0x0
0x724 SLOAD
0x725 PUSH1 0x1
0x727 PUSH1 0xa0
0x729 PUSH1 0x2
0x72b EXP
0x72c SUB
0x72d AND
0x72e CALLER
0x72f EQ
0x730 PUSH2 0x783
0x733 JUMPI
---
0x721: JUMPDEST 
0x722: V631 = 0x0
0x724: V632 = S[0x0]
0x725: V633 = 0x1
0x727: V634 = 0xa0
0x729: V635 = 0x2
0x72b: V636 = EXP 0x2 0xa0
0x72c: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72d: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x72e: V639 = CALLER
0x72f: V640 = EQ V639 V638
0x730: V641 = 0x783
0x733: JUMPI 0x783 V640
---
Entry stack: [V11, 0xb0, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V178]

================================

Block 0x734
[0x734:0x782]
---
Predecessors: [0x721]
Successors: []
---
0x734 PUSH1 0x40
0x736 DUP1
0x737 MLOAD
0x738 PUSH1 0xe5
0x73a PUSH1 0x2
0x73c EXP
0x73d PUSH3 0x461bcd
0x741 MUL
0x742 DUP2
0x743 MSTORE
0x744 PUSH1 0x20
0x746 PUSH1 0x4
0x748 DUP3
0x749 ADD
0x74a MSTORE
0x74b PUSH1 0x26
0x74d PUSH1 0x24
0x74f DUP3
0x750 ADD
0x751 MSTORE
0x752 PUSH1 0x0
0x754 DUP1
0x755 MLOAD
0x756 PUSH1 0x20
0x758 PUSH2 0x8b0
0x75b DUP4
0x75c CODECOPY
0x75d DUP2
0x75e MLOAD
0x75f SWAP2
0x760 MSTORE
0x761 PUSH1 0x44
0x763 DUP3
0x764 ADD
0x765 MSTORE
0x766 PUSH1 0xd1
0x768 PUSH1 0x2
0x76a EXP
0x76b PUSH6 0x37bbb732b917
0x772 MUL
0x773 PUSH1 0x64
0x775 DUP3
0x776 ADD
0x777 MSTORE
0x778 SWAP1
0x779 MLOAD
0x77a SWAP1
0x77b DUP2
0x77c SWAP1
0x77d SUB
0x77e PUSH1 0x84
0x780 ADD
0x781 SWAP1
0x782 REVERT
---
0x734: V642 = 0x40
0x737: V643 = M[0x40]
0x738: V644 = 0xe5
0x73a: V645 = 0x2
0x73c: V646 = EXP 0x2 0xe5
0x73d: V647 = 0x461bcd
0x741: V648 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x743: M[V643] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x744: V649 = 0x20
0x746: V650 = 0x4
0x749: V651 = ADD V643 0x4
0x74a: M[V651] = 0x20
0x74b: V652 = 0x26
0x74d: V653 = 0x24
0x750: V654 = ADD V643 0x24
0x751: M[V654] = 0x26
0x752: V655 = 0x0
0x755: V656 = M[0x0]
0x756: V657 = 0x20
0x758: V658 = 0x8b0
0x75c: CODECOPY 0x0 0x8b0 0x20
0x75e: V659 = M[0x0]
0x760: M[0x0] = V656
0x761: V660 = 0x44
0x764: V661 = ADD V643 0x44
0x765: M[V661] = V659
0x766: V662 = 0xd1
0x768: V663 = 0x2
0x76a: V664 = EXP 0x2 0xd1
0x76b: V665 = 0x37bbb732b917
0x772: V666 = MUL 0x37bbb732b917 0x20000000000000000000000000000000000000000000000000000
0x773: V667 = 0x64
0x776: V668 = ADD V643 0x64
0x777: M[V668] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x779: V669 = M[0x40]
0x77d: V670 = SUB V643 V669
0x77e: V671 = 0x84
0x780: V672 = ADD 0x84 V670
0x782: REVERT V669 V672
---
Entry stack: [V11, 0xb0, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V178]

================================

Block 0x783
[0x783:0x78c]
---
Predecessors: [0x721]
Successors: [0x78d, 0x801]
---
0x783 JUMPDEST
0x784 ADDRESS
0x785 BALANCE
0x786 DUP2
0x787 GT
0x788 ISZERO
0x789 PUSH2 0x801
0x78c JUMPI
---
0x783: JUMPDEST 
0x784: V673 = ADDRESS
0x785: V674 = BALANCE V673
0x787: V675 = GT V178 V674
0x788: V676 = ISZERO V675
0x789: V677 = 0x801
0x78c: JUMPI 0x801 V676
---
Entry stack: [V11, 0xb0, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb0, V178]

================================

Block 0x78d
[0x78d:0x800]
---
Predecessors: [0x783]
Successors: []
---
0x78d PUSH1 0x40
0x78f DUP1
0x790 MLOAD
0x791 PUSH1 0xe5
0x793 PUSH1 0x2
0x795 EXP
0x796 PUSH3 0x461bcd
0x79a MUL
0x79b DUP2
0x79c MSTORE
0x79d PUSH1 0x20
0x79f PUSH1 0x4
0x7a1 DUP3
0x7a2 ADD
0x7a3 MSTORE
0x7a4 PUSH1 0x24
0x7a6 DUP1
0x7a7 DUP3
0x7a8 ADD
0x7a9 MSTORE
0x7aa PUSH32 0x496e63726561736520616d6f756e74206c6172676572207468616e2062616c61
0x7cb PUSH1 0x44
0x7cd DUP3
0x7ce ADD
0x7cf MSTORE
0x7d0 PUSH32 0x6e63652e00000000000000000000000000000000000000000000000000000000
0x7f1 PUSH1 0x64
0x7f3 DUP3
0x7f4 ADD
0x7f5 MSTORE
0x7f6 SWAP1
0x7f7 MLOAD
0x7f8 SWAP1
0x7f9 DUP2
0x7fa SWAP1
0x7fb SUB
0x7fc PUSH1 0x84
0x7fe ADD
0x7ff SWAP1
0x800 REVERT
---
0x78d: V678 = 0x40
0x790: V679 = M[0x40]
0x791: V680 = 0xe5
0x793: V681 = 0x2
0x795: V682 = EXP 0x2 0xe5
0x796: V683 = 0x461bcd
0x79a: V684 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x79c: M[V679] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x79d: V685 = 0x20
0x79f: V686 = 0x4
0x7a2: V687 = ADD V679 0x4
0x7a3: M[V687] = 0x20
0x7a4: V688 = 0x24
0x7a8: V689 = ADD V679 0x24
0x7a9: M[V689] = 0x24
0x7aa: V690 = 0x496e63726561736520616d6f756e74206c6172676572207468616e2062616c61
0x7cb: V691 = 0x44
0x7ce: V692 = ADD V679 0x44
0x7cf: M[V692] = 0x496e63726561736520616d6f756e74206c6172676572207468616e2062616c61
0x7d0: V693 = 0x6e63652e00000000000000000000000000000000000000000000000000000000
0x7f1: V694 = 0x64
0x7f4: V695 = ADD V679 0x64
0x7f5: M[V695] = 0x6e63652e00000000000000000000000000000000000000000000000000000000
0x7f7: V696 = M[0x40]
0x7fb: V697 = SUB V679 V696
0x7fc: V698 = 0x84
0x7fe: V699 = ADD 0x84 V697
0x800: REVERT V696 V699
---
Entry stack: [V11, 0xb0, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V178]

================================

Block 0x801
[0x801:0x80f]
---
Predecessors: [0x783]
Successors: [0x810, 0x85f]
---
0x801 JUMPDEST
0x802 PUSH1 0x2
0x804 SLOAD
0x805 ADDRESS
0x806 BALANCE
0x807 SWAP1
0x808 DUP3
0x809 ADD
0x80a GT
0x80b ISZERO
0x80c PUSH2 0x85f
0x80f JUMPI
---
0x801: JUMPDEST 
0x802: V700 = 0x2
0x804: V701 = S[0x2]
0x805: V702 = ADDRESS
0x806: V703 = BALANCE V702
0x809: V704 = ADD V178 V701
0x80a: V705 = GT V704 V703
0x80b: V706 = ISZERO V705
0x80c: V707 = 0x85f
0x80f: JUMPI 0x85f V706
---
Entry stack: [V11, 0xb0, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb0, V178]

================================

Block 0x810
[0x810:0x85e]
---
Predecessors: [0x801]
Successors: []
---
0x810 PUSH1 0x40
0x812 DUP1
0x813 MLOAD
0x814 PUSH1 0xe5
0x816 PUSH1 0x2
0x818 EXP
0x819 PUSH3 0x461bcd
0x81d MUL
0x81e DUP2
0x81f MSTORE
0x820 PUSH1 0x20
0x822 PUSH1 0x4
0x824 DUP3
0x825 ADD
0x826 MSTORE
0x827 PUSH1 0x11
0x829 PUSH1 0x24
0x82b DUP3
0x82c ADD
0x82d MSTORE
0x82e PUSH32 0x4e6f7420656e6f7567682066756e64732e000000000000000000000000000000
0x84f PUSH1 0x44
0x851 DUP3
0x852 ADD
0x853 MSTORE
0x854 SWAP1
0x855 MLOAD
0x856 SWAP1
0x857 DUP2
0x858 SWAP1
0x859 SUB
0x85a PUSH1 0x64
0x85c ADD
0x85d SWAP1
0x85e REVERT
---
0x810: V708 = 0x40
0x813: V709 = M[0x40]
0x814: V710 = 0xe5
0x816: V711 = 0x2
0x818: V712 = EXP 0x2 0xe5
0x819: V713 = 0x461bcd
0x81d: V714 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x81f: M[V709] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x820: V715 = 0x20
0x822: V716 = 0x4
0x825: V717 = ADD V709 0x4
0x826: M[V717] = 0x20
0x827: V718 = 0x11
0x829: V719 = 0x24
0x82c: V720 = ADD V709 0x24
0x82d: M[V720] = 0x11
0x82e: V721 = 0x4e6f7420656e6f7567682066756e64732e000000000000000000000000000000
0x84f: V722 = 0x44
0x852: V723 = ADD V709 0x44
0x853: M[V723] = 0x4e6f7420656e6f7567682066756e64732e000000000000000000000000000000
0x855: V724 = M[0x40]
0x859: V725 = SUB V709 V724
0x85a: V726 = 0x64
0x85c: V727 = ADD 0x64 V725
0x85e: REVERT V724 V727
---
Entry stack: [V11, 0xb0, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V178]

================================

Block 0x85f
[0x85f:0x883]
---
Predecessors: [0x801]
Successors: [0x89c]
---
0x85f JUMPDEST
0x860 PUSH1 0x2
0x862 SLOAD
0x863 PUSH2 0x884
0x866 SWAP1
0x867 PUSH16 0xffffffffffffffffffffffffffffffff
0x878 DUP4
0x879 AND
0x87a PUSH4 0xffffffff
0x87f PUSH2 0x89c
0x882 AND
0x883 JUMP
---
0x85f: JUMPDEST 
0x860: V728 = 0x2
0x862: V729 = S[0x2]
0x863: V730 = 0x884
0x867: V731 = 0xffffffffffffffffffffffffffffffff
0x879: V732 = AND V178 0xffffffffffffffffffffffffffffffff
0x87a: V733 = 0xffffffff
0x87f: V734 = 0x89c
0x882: V735 = AND 0x89c 0xffffffff
0x883: JUMP 0x89c
---
Entry stack: [V11, 0xb0, V178]
Stack pops: 1
Stack additions: [S0, 0x884, V729, V732]
Exit stack: [V11, 0xb0, V178, 0x884, V729, V732]

================================

Block 0x884
[0x884:0x889]
---
Predecessors: [0x8a9]
Successors: [0xb0]
---
0x884 JUMPDEST
0x885 PUSH1 0x2
0x887 SSTORE
0x888 POP
0x889 JUMP
---
0x884: JUMPDEST 
0x885: V736 = 0x2
0x887: S[0x2] = S0
0x889: JUMP S2
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S3]

================================

Block 0x88a
[0x88a:0x894]
---
Predecessors: [0x2b2, 0x534]
Successors: [0x895, 0x896]
---
0x88a JUMPDEST
0x88b PUSH1 0x0
0x88d DUP3
0x88e DUP3
0x88f GT
0x890 ISZERO
0x891 PUSH2 0x896
0x894 JUMPI
---
0x88a: JUMPDEST 
0x88b: V737 = 0x0
0x88f: V738 = GT S0 S1
0x890: V739 = ISZERO V738
0x891: V740 = 0x896
0x894: JUMPI 0x896 V739
---
Entry stack: [V11, 0xb0, S4, S3, {0x2c4, 0x547}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0xb0, S4, S3, {0x2c4, 0x547}, S1, S0, 0x0]

================================

Block 0x895
[0x895:0x895]
---
Predecessors: [0x88a]
Successors: []
---
0x895 INVALID
---
0x895: INVALID 
---
Entry stack: [V11, 0xb0, S5, S4, {0x2c4, 0x547}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, S5, S4, {0x2c4, 0x547}, S2, S1, 0x0]

================================

Block 0x896
[0x896:0x89b]
---
Predecessors: [0x88a]
Successors: [0x2c4, 0x547]
---
0x896 JUMPDEST
0x897 POP
0x898 SWAP1
0x899 SUB
0x89a SWAP1
0x89b JUMP
---
0x896: JUMPDEST 
0x899: V741 = SUB S2 S1
0x89b: JUMP {0x2c4, 0x547}
---
Entry stack: [V11, 0xb0, S5, S4, {0x2c4, 0x547}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V741]
Exit stack: [V11, 0xb0, S5, S4, V741]

================================

Block 0x89c
[0x89c:0x8a7]
---
Predecessors: [0x473, 0x85f]
Successors: [0x8a8, 0x8a9]
---
0x89c JUMPDEST
0x89d DUP2
0x89e DUP2
0x89f ADD
0x8a0 DUP3
0x8a1 DUP2
0x8a2 LT
0x8a3 ISZERO
0x8a4 PUSH2 0x8a9
0x8a7 JUMPI
---
0x89c: JUMPDEST 
0x89f: V742 = ADD S0 S1
0x8a2: V743 = LT V742 S1
0x8a3: V744 = ISZERO V743
0x8a4: V745 = 0x8a9
0x8a7: JUMPI 0x8a9 V744
---
Entry stack: [V11, S5, S4, S3, {0x486, 0x884}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V742]
Exit stack: [V11, S5, S4, S3, {0x486, 0x884}, S1, S0, V742]

================================

Block 0x8a8
[0x8a8:0x8a8]
---
Predecessors: [0x89c]
Successors: []
---
0x8a8 INVALID
---
0x8a8: INVALID 
---
Entry stack: [V11, S6, S5, S4, {0x486, 0x884}, S2, S1, V742]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, {0x486, 0x884}, S2, S1, V742]

================================

Block 0x8a9
[0x8a9:0x8ae]
---
Predecessors: [0x89c]
Successors: [0x486, 0x884]
---
0x8a9 JUMPDEST
0x8aa SWAP3
0x8ab SWAP2
0x8ac POP
0x8ad POP
0x8ae JUMP
---
0x8a9: JUMPDEST 
0x8ae: JUMP {0x486, 0x884}
---
Entry stack: [V11, S6, S5, S4, {0x486, 0x884}, S2, S1, V742]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S6, S5, S4, V742]

================================

Block 0x8af
[0x8af:0x90c]
---
Predecessors: []
Successors: []
---
0x8af STOP
0x8b0 MISSING 0x4f
0x8b1 PUSH15 0x6c794f776e6572206d6574686f6473
0x8c1 SHA3
0x8c2 PUSH4 0x616c6c65
0x8c7 PUSH5 0x206279206e
0x8cd PUSH16 0x6e2da165627a7a723058204325102523
0x8de PUSH11 0x59f1faade4dd6d5e7ab4c1
0x8ea MISSING 0xfb
0x8eb MSTORE
0x8ec SWAP10
0x8ed PUSH31 0x272acb5f29efb8ba6854530029
---
0x8af: STOP 
0x8b0: MISSING 0x4f
0x8b1: V746 = 0x6c794f776e6572206d6574686f6473
0x8c1: V747 = SHA3 0x6c794f776e6572206d6574686f6473 S0
0x8c2: V748 = 0x616c6c65
0x8c7: V749 = 0x206279206e
0x8cd: V750 = 0x6e2da165627a7a723058204325102523
0x8de: V751 = 0x59f1faade4dd6d5e7ab4c1
0x8ea: MISSING 0xfb
0x8eb: M[S0] = S1
0x8ed: V752 = 0x272acb5f29efb8ba6854530029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x59f1faade4dd6d5e7ab4c1, 0x6e2da165627a7a723058204325102523, 0x206279206e, 0x616c6c65, V747, 0x272acb5f29efb8ba6854530029, S12, S3, S4, S5, S6, S7, S8, S9, S10, S11, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x2a518024
Entry block: 0xb2
Exit block: 0xb0
Body: 0xb0, 0xb2, 0xba, 0xbe, 0x216, 0x229, 0x278, 0x283, 0x287, 0x2b2, 0x2c4, 0x30b, 0x34b

Function 1:
Public function signature: 0x49649fbf
Entry block: 0xd6
Exit block: 0xb0
Body: 0xb0, 0xd6, 0xde, 0xe2, 0x34f, 0x362, 0x3b1, 0x3e8, 0x3f1

Function 2:
Public function signature: 0x4e45351f
Entry block: 0xeb
Exit block: 0x100
Body: 0xeb, 0xf3, 0xf7, 0x100, 0x3f4

Function 3:
Public function signature: 0x57246d23
Entry block: 0x128
Exit block: 0x13d
Body: 0x128, 0x130, 0x134, 0x13d, 0x40b

Function 4:
Public function signature: 0x6100d922
Entry block: 0x14f
Exit block: 0xb0
Body: 0xb0, 0x14f, 0x157, 0x15b, 0x411, 0x424, 0x473, 0x486

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x173
Exit block: 0x188
Body: 0x173, 0x17b, 0x17f, 0x188, 0x4c3

Function 6:
Public function signature: 0xb7f9ec46
Entry block: 0x1a4
Exit block: 0xb0
Body: 0xb0, 0x1a4, 0x1ac, 0x1b0, 0x4d2, 0x4e5, 0x534, 0x547, 0x577, 0x580

Function 7:
Public function signature: 0xd06c54fb
Entry block: 0x1c8
Exit block: 0xb0
Body: 0xb0, 0x1c8, 0x1d0, 0x1d4, 0x585, 0x598, 0x5f9

Function 8:
Public function signature: 0xd579fd44
Entry block: 0x1dd
Exit block: 0xb0
Body: 0xb0, 0x1dd, 0x1e5, 0x1e9, 0x62a, 0x63d, 0x68c, 0x6a3, 0x6f2

Function 9:
Public function signature: 0xd6d30a51
Entry block: 0x1fe
Exit block: 0xb0
Body: 0xb0, 0x1fe, 0x206, 0x20a, 0x721, 0x734, 0x783, 0x78d, 0x801, 0x810, 0x85f, 0x884

Function 10:
Public fallback function
Entry block: 0xa3
Exit block: 0xac
Body: 0xa3, 0xac, 0xb0

Function 11:
Private function
Entry block: 0x88a
Exit block: 0x896
Body: 0x88a, 0x896

Function 12:
Private function
Entry block: 0x89c
Exit block: 0x8a9
Body: 0x89c, 0x8a9

