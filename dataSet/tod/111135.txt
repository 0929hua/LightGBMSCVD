Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x90]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x43d726d6
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x90
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x43d726d6
0x39: V12 = EQ V10 0x43d726d6
0x3a: V13 = 0x90
0x3d: JUMPI 0x90 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xa5]
---
0x3e DUP1
0x3f PUSH4 0x521eb273
0x44 EQ
0x45 PUSH2 0xa5
0x48 JUMPI
---
0x3f: V14 = 0x521eb273
0x44: V15 = EQ 0x521eb273 V10
0x45: V16 = 0xa5
0x48: JUMPI 0xa5 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xd4]
---
0x49 DUP1
0x4a PUSH4 0x8c52dc41
0x4f EQ
0x50 PUSH2 0xd4
0x53 JUMPI
---
0x4a: V17 = 0x8c52dc41
0x4f: V18 = EQ 0x8c52dc41 V10
0x50: V19 = 0xd4
0x53: JUMPI 0xd4 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xe7]
---
0x54 DUP1
0x55 PUSH4 0xc19d93fb
0x5a EQ
0x5b PUSH2 0xe7
0x5e JUMPI
---
0x55: V20 = 0xc19d93fb
0x5a: V21 = EQ 0xc19d93fb V10
0x5b: V22 = 0xe7
0x5e: JUMPI 0xe7 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x11e]
---
0x5f DUP1
0x60 PUSH4 0xcb13cddb
0x65 EQ
0x66 PUSH2 0x11e
0x69 JUMPI
---
0x60: V23 = 0xcb13cddb
0x65: V24 = EQ 0xcb13cddb V10
0x66: V25 = 0x11e
0x69: JUMPI 0x11e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x14f]
---
0x6a DUP1
0x6b PUSH4 0xf2fde38b
0x70 EQ
0x71 PUSH2 0x14f
0x74 JUMPI
---
0x6b: V26 = 0xf2fde38b
0x70: V27 = EQ 0xf2fde38b V10
0x71: V28 = 0x14f
0x74: JUMPI 0x14f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x16e]
---
0x75 DUP1
0x76 PUSH4 0xf340fa01
0x7b EQ
0x7c PUSH2 0x16e
0x7f JUMPI
---
0x76: V29 = 0xf340fa01
0x7b: V30 = EQ 0xf340fa01 V10
0x7c: V31 = 0x16e
0x7f: JUMPI 0x16e V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x182]
---
0x80 DUP1
0x81 PUSH4 0xfa89401a
0x86 EQ
0x87 PUSH2 0x182
0x8a JUMPI
---
0x81: V32 = 0xfa89401a
0x86: V33 = EQ 0xfa89401a V10
0x87: V34 = 0x182
0x8a: JUMPI 0x182 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8f]
---
Predecessors: [0x0, 0x80]
Successors: []
---
0x8b JUMPDEST
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8b: JUMPDEST 
0x8c: V35 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x90
[0x90:0x96]
---
Predecessors: [0xb]
Successors: [0x97, 0x9b]
---
0x90 JUMPDEST
0x91 CALLVALUE
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x90: JUMPDEST 
0x91: V36 = CALLVALUE
0x92: V37 = ISZERO V36
0x93: V38 = 0x9b
0x96: JUMPI 0x9b V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x90]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V39 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9b
[0x9b:0xa2]
---
Predecessors: [0x90]
Successors: [0x1a1]
---
0x9b JUMPDEST
0x9c PUSH2 0xa3
0x9f PUSH2 0x1a1
0xa2 JUMP
---
0x9b: JUMPDEST 
0x9c: V40 = 0xa3
0x9f: V41 = 0x1a1
0xa2: JUMP 0x1a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V10, 0xa3]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x27a, 0x2ca, 0x36e, 0x441, 0x4cc]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x3e]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V42 = CALLVALUE
0xa7: V43 = ISZERO V42
0xa8: V44 = 0xb0
0xab: JUMPI 0xb0 V43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V45 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb0
[0xb0:0xb7]
---
Predecessors: [0xa5]
Successors: [0x27c]
---
0xb0 JUMPDEST
0xb1 PUSH2 0xb8
0xb4 PUSH2 0x27c
0xb7 JUMP
---
0xb0: JUMPDEST 
0xb1: V46 = 0xb8
0xb4: V47 = 0x27c
0xb7: JUMP 0x27c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb8]
Exit stack: [V10, 0xb8]

================================

Block 0xb8
[0xb8:0xd3]
---
Predecessors: [0x27c]
Successors: []
---
0xb8 JUMPDEST
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc PUSH1 0x1
0xbe PUSH1 0xa0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 SUB
0xc4 SWAP1
0xc5 SWAP2
0xc6 AND
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc PUSH1 0x40
0xce MLOAD
0xcf DUP1
0xd0 SWAP2
0xd1 SUB
0xd2 SWAP1
0xd3 RETURN
---
0xb8: JUMPDEST 
0xb9: V48 = 0x40
0xbb: V49 = M[0x40]
0xbc: V50 = 0x1
0xbe: V51 = 0xa0
0xc0: V52 = 0x2
0xc2: V53 = EXP 0x2 0xa0
0xc3: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6: V55 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0xc8: M[V49] = V55
0xc9: V56 = 0x20
0xcb: V57 = ADD 0x20 V49
0xcc: V58 = 0x40
0xce: V59 = M[0x40]
0xd1: V60 = SUB V57 V59
0xd3: RETURN V59 V60
---
Entry stack: [V10, 0xb8, V218]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb8]

================================

Block 0xd4
[0xd4:0xda]
---
Predecessors: [0x49]
Successors: [0xdb, 0xdf]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 ISZERO
0xd7 PUSH2 0xdf
0xda JUMPI
---
0xd4: JUMPDEST 
0xd5: V61 = CALLVALUE
0xd6: V62 = ISZERO V61
0xd7: V63 = 0xdf
0xda: JUMPI 0xdf V62
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdb
[0xdb:0xde]
---
Predecessors: [0xd4]
Successors: []
---
0xdb PUSH1 0x0
0xdd DUP1
0xde REVERT
---
0xdb: V64 = 0x0
0xde: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd4]
Successors: [0x28b]
---
0xdf JUMPDEST
0xe0 PUSH2 0xa3
0xe3 PUSH2 0x28b
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V65 = 0xa3
0xe3: V66 = 0x28b
0xe6: JUMP 0x28b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V10, 0xa3]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0x54]
Successors: [0xee, 0xf2]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V67 = CALLVALUE
0xe9: V68 = ISZERO V67
0xea: V69 = 0xf2
0xed: JUMPI 0xf2 V68
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe7]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V70 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xe7]
Successors: [0x31c]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x31c
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V71 = 0xfa
0xf6: V72 = 0x31c
0xf9: JUMP 0x31c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0xfa
[0xfa:0x108]
---
Predecessors: [0x31c]
Successors: [0x109, 0x10a]
---
0xfa JUMPDEST
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff DUP3
0x100 PUSH1 0x2
0x102 DUP2
0x103 GT
0x104 ISZERO
0x105 PUSH2 0x10a
0x108 JUMPI
---
0xfa: JUMPDEST 
0xfb: V73 = 0x40
0xfd: V74 = M[0x40]
0x100: V75 = 0x2
0x103: V76 = GT V269 0x2
0x104: V77 = ISZERO V76
0x105: V78 = 0x10a
0x108: JUMPI 0x10a V77
---
Entry stack: [V10, 0xfa, V269]
Stack pops: 1
Stack additions: [S0, V74, V74, S0]
Exit stack: [V10, 0xfa, V269, V74, V74, V269]

================================

Block 0x109
[0x109:0x109]
---
Predecessors: [0xfa]
Successors: []
---
0x109 INVALID
---
0x109: INVALID 
---
Entry stack: [V10, 0xfa, V269, V74, V74, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa, V269, V74, V74, V269]

================================

Block 0x10a
[0x10a:0x11d]
---
Predecessors: [0xfa]
Successors: []
---
0x10a JUMPDEST
0x10b PUSH1 0xff
0x10d AND
0x10e DUP2
0x10f MSTORE
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP2
0x114 POP
0x115 POP
0x116 PUSH1 0x40
0x118 MLOAD
0x119 DUP1
0x11a SWAP2
0x11b SUB
0x11c SWAP1
0x11d RETURN
---
0x10a: JUMPDEST 
0x10b: V79 = 0xff
0x10d: V80 = AND 0xff V269
0x10f: M[V74] = V80
0x110: V81 = 0x20
0x112: V82 = ADD 0x20 V74
0x116: V83 = 0x40
0x118: V84 = M[0x40]
0x11b: V85 = SUB V82 V84
0x11d: RETURN V84 V85
---
Entry stack: [V10, 0xfa, V269, V74, V74, V269]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x11e
[0x11e:0x124]
---
Predecessors: [0x5f]
Successors: [0x125, 0x129]
---
0x11e JUMPDEST
0x11f CALLVALUE
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0x11e: JUMPDEST 
0x11f: V86 = CALLVALUE
0x120: V87 = ISZERO V86
0x121: V88 = 0x129
0x124: JUMPI 0x129 V87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x11e]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V89 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x129
[0x129:0x13c]
---
Predecessors: [0x11e]
Successors: [0x32c]
---
0x129 JUMPDEST
0x12a PUSH2 0x13d
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 PUSH1 0x4
0x137 CALLDATALOAD
0x138 AND
0x139 PUSH2 0x32c
0x13c JUMP
---
0x129: JUMPDEST 
0x12a: V90 = 0x13d
0x12d: V91 = 0x1
0x12f: V92 = 0xa0
0x131: V93 = 0x2
0x133: V94 = EXP 0x2 0xa0
0x134: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V96 = 0x4
0x137: V97 = CALLDATALOAD 0x4
0x138: V98 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x139: V99 = 0x32c
0x13c: JUMP 0x32c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13d, V98]
Exit stack: [V10, 0x13d, V98]

================================

Block 0x13d
[0x13d:0x14e]
---
Predecessors: [0x32c]
Successors: []
---
0x13d JUMPDEST
0x13e PUSH1 0x40
0x140 MLOAD
0x141 SWAP1
0x142 DUP2
0x143 MSTORE
0x144 PUSH1 0x20
0x146 ADD
0x147 PUSH1 0x40
0x149 MLOAD
0x14a DUP1
0x14b SWAP2
0x14c SUB
0x14d SWAP1
0x14e RETURN
---
0x13d: JUMPDEST 
0x13e: V100 = 0x40
0x140: V101 = M[0x40]
0x143: M[V101] = V275
0x144: V102 = 0x20
0x146: V103 = ADD 0x20 V101
0x147: V104 = 0x40
0x149: V105 = M[0x40]
0x14c: V106 = SUB V103 V105
0x14e: RETURN V105 V106
---
Entry stack: [V10, 0x13d, V275]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x13d]

================================

Block 0x14f
[0x14f:0x155]
---
Predecessors: [0x6a]
Successors: [0x156, 0x15a]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14f: JUMPDEST 
0x150: V107 = CALLVALUE
0x151: V108 = ISZERO V107
0x152: V109 = 0x15a
0x155: JUMPI 0x15a V108
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14f]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V110 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15a
[0x15a:0x16d]
---
Predecessors: [0x14f]
Successors: [0x33e]
---
0x15a JUMPDEST
0x15b PUSH2 0xa3
0x15e PUSH1 0x1
0x160 PUSH1 0xa0
0x162 PUSH1 0x2
0x164 EXP
0x165 SUB
0x166 PUSH1 0x4
0x168 CALLDATALOAD
0x169 AND
0x16a PUSH2 0x33e
0x16d JUMP
---
0x15a: JUMPDEST 
0x15b: V111 = 0xa3
0x15e: V112 = 0x1
0x160: V113 = 0xa0
0x162: V114 = 0x2
0x164: V115 = EXP 0x2 0xa0
0x165: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x166: V117 = 0x4
0x168: V118 = CALLDATALOAD 0x4
0x169: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V120 = 0x33e
0x16d: JUMP 0x33e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V119]
Exit stack: [V10, 0xa3, V119]

================================

Block 0x16e
[0x16e:0x181]
---
Predecessors: [0x75]
Successors: [0x3d9]
---
0x16e JUMPDEST
0x16f PUSH2 0xa3
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a PUSH1 0x4
0x17c CALLDATALOAD
0x17d AND
0x17e PUSH2 0x3d9
0x181 JUMP
---
0x16e: JUMPDEST 
0x16f: V121 = 0xa3
0x172: V122 = 0x1
0x174: V123 = 0xa0
0x176: V124 = 0x2
0x178: V125 = EXP 0x2 0xa0
0x179: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V127 = 0x4
0x17c: V128 = CALLDATALOAD 0x4
0x17d: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V130 = 0x3d9
0x181: JUMP 0x3d9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V129]
Exit stack: [V10, 0xa3, V129]

================================

Block 0x182
[0x182:0x188]
---
Predecessors: [0x80]
Successors: [0x189, 0x18d]
---
0x182 JUMPDEST
0x183 CALLVALUE
0x184 ISZERO
0x185 PUSH2 0x18d
0x188 JUMPI
---
0x182: JUMPDEST 
0x183: V131 = CALLVALUE
0x184: V132 = ISZERO V131
0x185: V133 = 0x18d
0x188: JUMPI 0x18d V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x189
[0x189:0x18c]
---
Predecessors: [0x182]
Successors: []
---
0x189 PUSH1 0x0
0x18b DUP1
0x18c REVERT
---
0x189: V134 = 0x0
0x18c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18d
[0x18d:0x1a0]
---
Predecessors: [0x182]
Successors: [0x45d]
---
0x18d JUMPDEST
0x18e PUSH2 0xa3
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 PUSH1 0x2
0x197 EXP
0x198 SUB
0x199 PUSH1 0x4
0x19b CALLDATALOAD
0x19c AND
0x19d PUSH2 0x45d
0x1a0 JUMP
---
0x18d: JUMPDEST 
0x18e: V135 = 0xa3
0x191: V136 = 0x1
0x193: V137 = 0xa0
0x195: V138 = 0x2
0x197: V139 = EXP 0x2 0xa0
0x198: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V141 = 0x4
0x19b: V142 = CALLDATALOAD 0x4
0x19c: V143 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V144 = 0x45d
0x1a0: JUMP 0x45d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V143]
Exit stack: [V10, 0xa3, V143]

================================

Block 0x1a1
[0x1a1:0x1b7]
---
Predecessors: [0x9b]
Successors: [0x1b8, 0x1bc]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x0
0x1a4 SLOAD
0x1a5 CALLER
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae SWAP1
0x1af DUP2
0x1b0 AND
0x1b1 SWAP2
0x1b2 AND
0x1b3 EQ
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V145 = 0x0
0x1a4: V146 = S[0x0]
0x1a5: V147 = CALLER
0x1a6: V148 = 0x1
0x1a8: V149 = 0xa0
0x1aa: V150 = 0x2
0x1ac: V151 = EXP 0x2 0xa0
0x1ad: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b0: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x1b2: V154 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V155 = EQ V154 V153
0x1b4: V156 = 0x1bc
0x1b7: JUMPI 0x1bc V155
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1a1]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V157 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x1bc
[0x1bc:0x1d4]
---
Predecessors: [0x1a1]
Successors: [0x1d5, 0x1d6]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x0
0x1bf PUSH1 0x2
0x1c1 DUP1
0x1c2 SLOAD
0x1c3 PUSH1 0xa0
0x1c5 PUSH1 0x2
0x1c7 EXP
0x1c8 SWAP1
0x1c9 DIV
0x1ca PUSH1 0xff
0x1cc AND
0x1cd SWAP1
0x1ce DUP2
0x1cf GT
0x1d0 ISZERO
0x1d1 PUSH2 0x1d6
0x1d4 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V158 = 0x0
0x1bf: V159 = 0x2
0x1c2: V160 = S[0x2]
0x1c3: V161 = 0xa0
0x1c5: V162 = 0x2
0x1c7: V163 = EXP 0x2 0xa0
0x1c9: V164 = DIV V160 0x10000000000000000000000000000000000000000
0x1ca: V165 = 0xff
0x1cc: V166 = AND 0xff V164
0x1cf: V167 = GT V166 0x2
0x1d0: V168 = ISZERO V167
0x1d1: V169 = 0x1d6
0x1d4: JUMPI 0x1d6 V168
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: [0x0, V166]
Exit stack: [V10, 0xa3, 0x0, V166]

================================

Block 0x1d5
[0x1d5:0x1d5]
---
Predecessors: [0x1bc]
Successors: []
---
0x1d5 INVALID
---
0x1d5: INVALID 
---
Entry stack: [V10, 0xa3, 0x0, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, 0x0, V166]

================================

Block 0x1d6
[0x1d6:0x1db]
---
Predecessors: [0x1bc]
Successors: [0x1dc, 0x1e0]
---
0x1d6 JUMPDEST
0x1d7 EQ
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V170 = EQ V166 0x0
0x1d8: V171 = 0x1e0
0x1db: JUMPI 0x1e0 V170
---
Entry stack: [V10, 0xa3, 0x0, V166]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V172 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x1e0
[0x1e0:0x275]
---
Predecessors: [0x1d6]
Successors: [0x276, 0x27a]
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x2
0x1e3 DUP1
0x1e4 SLOAD
0x1e5 PUSH21 0xff0000000000000000000000000000000000000000
0x1fb NOT
0x1fc AND
0x1fd PUSH21 0x20000000000000000000000000000000000000000
0x213 OR
0x214 SWAP1
0x215 SSTORE
0x216 PUSH32 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x237 PUSH1 0x40
0x239 MLOAD
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e SWAP2
0x23f SUB
0x240 SWAP1
0x241 LOG1
0x242 PUSH1 0x2
0x244 SLOAD
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d SWAP1
0x24e DUP2
0x24f AND
0x250 SWAP1
0x251 ADDRESS
0x252 AND
0x253 BALANCE
0x254 DUP1
0x255 ISZERO
0x256 PUSH2 0x8fc
0x259 MUL
0x25a SWAP1
0x25b PUSH1 0x40
0x25d MLOAD
0x25e PUSH1 0x0
0x260 PUSH1 0x40
0x262 MLOAD
0x263 DUP1
0x264 DUP4
0x265 SUB
0x266 DUP2
0x267 DUP6
0x268 DUP9
0x269 DUP9
0x26a CALL
0x26b SWAP4
0x26c POP
0x26d POP
0x26e POP
0x26f POP
0x270 ISZERO
0x271 ISZERO
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V173 = 0x2
0x1e4: V174 = S[0x2]
0x1e5: V175 = 0xff0000000000000000000000000000000000000000
0x1fb: V176 = NOT 0xff0000000000000000000000000000000000000000
0x1fc: V177 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V174
0x1fd: V178 = 0x20000000000000000000000000000000000000000
0x213: V179 = OR 0x20000000000000000000000000000000000000000 V177
0x215: S[0x2] = V179
0x216: V180 = 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x237: V181 = 0x40
0x239: V182 = M[0x40]
0x23a: V183 = 0x40
0x23c: V184 = M[0x40]
0x23f: V185 = SUB V182 V184
0x241: LOG V184 V185 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x242: V186 = 0x2
0x244: V187 = S[0x2]
0x245: V188 = 0x1
0x247: V189 = 0xa0
0x249: V190 = 0x2
0x24b: V191 = EXP 0x2 0xa0
0x24c: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x251: V194 = ADDRESS
0x252: V195 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x253: V196 = BALANCE V195
0x255: V197 = ISZERO V196
0x256: V198 = 0x8fc
0x259: V199 = MUL 0x8fc V197
0x25b: V200 = 0x40
0x25d: V201 = M[0x40]
0x25e: V202 = 0x0
0x260: V203 = 0x40
0x262: V204 = M[0x40]
0x265: V205 = SUB V201 V204
0x26a: V206 = CALL V199 V193 V196 V204 V205 V204 0x0
0x270: V207 = ISZERO V206
0x271: V208 = ISZERO V207
0x272: V209 = 0x27a
0x275: JUMPI 0x27a V208
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x1e0]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V210 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x27a
[0x27a:0x27b]
---
Predecessors: [0x1e0]
Successors: [0xa3]
---
0x27a JUMPDEST
0x27b JUMP
---
0x27a: JUMPDEST 
0x27b: JUMP 0xa3
---
Entry stack: [V10, 0xa3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x27c
[0x27c:0x28a]
---
Predecessors: [0xb0]
Successors: [0xb8]
---
0x27c JUMPDEST
0x27d PUSH1 0x2
0x27f SLOAD
0x280 PUSH1 0x1
0x282 PUSH1 0xa0
0x284 PUSH1 0x2
0x286 EXP
0x287 SUB
0x288 AND
0x289 DUP2
0x28a JUMP
---
0x27c: JUMPDEST 
0x27d: V211 = 0x2
0x27f: V212 = S[0x2]
0x280: V213 = 0x1
0x282: V214 = 0xa0
0x284: V215 = 0x2
0x286: V216 = EXP 0x2 0xa0
0x287: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x288: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x28a: JUMP 0xb8
---
Entry stack: [V10, 0xb8]
Stack pops: 1
Stack additions: [S0, V218]
Exit stack: [V10, 0xb8, V218]

================================

Block 0x28b
[0x28b:0x2a1]
---
Predecessors: [0xdf]
Successors: [0x2a2, 0x2a6]
---
0x28b JUMPDEST
0x28c PUSH1 0x0
0x28e SLOAD
0x28f CALLER
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 SWAP1
0x299 DUP2
0x29a AND
0x29b SWAP2
0x29c AND
0x29d EQ
0x29e PUSH2 0x2a6
0x2a1 JUMPI
---
0x28b: JUMPDEST 
0x28c: V219 = 0x0
0x28e: V220 = S[0x0]
0x28f: V221 = CALLER
0x290: V222 = 0x1
0x292: V223 = 0xa0
0x294: V224 = 0x2
0x296: V225 = EXP 0x2 0xa0
0x297: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x29c: V228 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V229 = EQ V228 V227
0x29e: V230 = 0x2a6
0x2a1: JUMPI 0x2a6 V229
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x28b]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 REVERT
---
0x2a2: V231 = 0x0
0x2a5: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2a6
[0x2a6:0x2be]
---
Predecessors: [0x28b]
Successors: [0x2bf, 0x2c0]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x0
0x2a9 PUSH1 0x2
0x2ab DUP1
0x2ac SLOAD
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SWAP1
0x2b3 DIV
0x2b4 PUSH1 0xff
0x2b6 AND
0x2b7 SWAP1
0x2b8 DUP2
0x2b9 GT
0x2ba ISZERO
0x2bb PUSH2 0x2c0
0x2be JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V232 = 0x0
0x2a9: V233 = 0x2
0x2ac: V234 = S[0x2]
0x2ad: V235 = 0xa0
0x2af: V236 = 0x2
0x2b1: V237 = EXP 0x2 0xa0
0x2b3: V238 = DIV V234 0x10000000000000000000000000000000000000000
0x2b4: V239 = 0xff
0x2b6: V240 = AND 0xff V238
0x2b9: V241 = GT V240 0x2
0x2ba: V242 = ISZERO V241
0x2bb: V243 = 0x2c0
0x2be: JUMPI 0x2c0 V242
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: [0x0, V240]
Exit stack: [V10, 0xa3, 0x0, V240]

================================

Block 0x2bf
[0x2bf:0x2bf]
---
Predecessors: [0x2a6]
Successors: []
---
0x2bf INVALID
---
0x2bf: INVALID 
---
Entry stack: [V10, 0xa3, 0x0, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, 0x0, V240]

================================

Block 0x2c0
[0x2c0:0x2c5]
---
Predecessors: [0x2a6]
Successors: [0x2c6, 0x2ca]
---
0x2c0 JUMPDEST
0x2c1 EQ
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V244 = EQ V240 0x0
0x2c2: V245 = 0x2ca
0x2c5: JUMPI 0x2ca V244
---
Entry stack: [V10, 0xa3, 0x0, V240]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x2c0]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V246 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2ca
[0x2ca:0x31b]
---
Predecessors: [0x2c0]
Successors: [0xa3]
---
0x2ca JUMPDEST
0x2cb PUSH1 0x2
0x2cd DUP1
0x2ce SLOAD
0x2cf PUSH21 0xff0000000000000000000000000000000000000000
0x2e5 NOT
0x2e6 AND
0x2e7 PUSH1 0xa0
0x2e9 PUSH1 0x2
0x2eb EXP
0x2ec OR
0x2ed SWAP1
0x2ee SSTORE
0x2ef PUSH32 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x310 PUSH1 0x40
0x312 MLOAD
0x313 PUSH1 0x40
0x315 MLOAD
0x316 DUP1
0x317 SWAP2
0x318 SUB
0x319 SWAP1
0x31a LOG1
0x31b JUMP
---
0x2ca: JUMPDEST 
0x2cb: V247 = 0x2
0x2ce: V248 = S[0x2]
0x2cf: V249 = 0xff0000000000000000000000000000000000000000
0x2e5: V250 = NOT 0xff0000000000000000000000000000000000000000
0x2e6: V251 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V248
0x2e7: V252 = 0xa0
0x2e9: V253 = 0x2
0x2eb: V254 = EXP 0x2 0xa0
0x2ec: V255 = OR 0x10000000000000000000000000000000000000000 V251
0x2ee: S[0x2] = V255
0x2ef: V256 = 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x310: V257 = 0x40
0x312: V258 = M[0x40]
0x313: V259 = 0x40
0x315: V260 = M[0x40]
0x318: V261 = SUB V258 V260
0x31a: LOG V260 V261 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x31b: JUMP 0xa3
---
Entry stack: [V10, 0xa3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x31c
[0x31c:0x32b]
---
Predecessors: [0xf2]
Successors: [0xfa]
---
0x31c JUMPDEST
0x31d PUSH1 0x2
0x31f SLOAD
0x320 PUSH1 0xa0
0x322 PUSH1 0x2
0x324 EXP
0x325 SWAP1
0x326 DIV
0x327 PUSH1 0xff
0x329 AND
0x32a DUP2
0x32b JUMP
---
0x31c: JUMPDEST 
0x31d: V262 = 0x2
0x31f: V263 = S[0x2]
0x320: V264 = 0xa0
0x322: V265 = 0x2
0x324: V266 = EXP 0x2 0xa0
0x326: V267 = DIV V263 0x10000000000000000000000000000000000000000
0x327: V268 = 0xff
0x329: V269 = AND 0xff V267
0x32b: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: [S0, V269]
Exit stack: [V10, 0xfa, V269]

================================

Block 0x32c
[0x32c:0x33d]
---
Predecessors: [0x129]
Successors: [0x13d]
---
0x32c JUMPDEST
0x32d PUSH1 0x1
0x32f PUSH1 0x20
0x331 MSTORE
0x332 PUSH1 0x0
0x334 SWAP1
0x335 DUP2
0x336 MSTORE
0x337 PUSH1 0x40
0x339 SWAP1
0x33a SHA3
0x33b SLOAD
0x33c DUP2
0x33d JUMP
---
0x32c: JUMPDEST 
0x32d: V270 = 0x1
0x32f: V271 = 0x20
0x331: M[0x20] = 0x1
0x332: V272 = 0x0
0x336: M[0x0] = V98
0x337: V273 = 0x40
0x33a: V274 = SHA3 0x0 0x40
0x33b: V275 = S[V274]
0x33d: JUMP 0x13d
---
Entry stack: [V10, 0x13d, V98]
Stack pops: 2
Stack additions: [S1, V275]
Exit stack: [V10, 0x13d, V275]

================================

Block 0x33e
[0x33e:0x354]
---
Predecessors: [0x15a]
Successors: [0x355, 0x359]
---
0x33e JUMPDEST
0x33f PUSH1 0x0
0x341 SLOAD
0x342 CALLER
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b SWAP1
0x34c DUP2
0x34d AND
0x34e SWAP2
0x34f AND
0x350 EQ
0x351 PUSH2 0x359
0x354 JUMPI
---
0x33e: JUMPDEST 
0x33f: V276 = 0x0
0x341: V277 = S[0x0]
0x342: V278 = CALLER
0x343: V279 = 0x1
0x345: V280 = 0xa0
0x347: V281 = 0x2
0x349: V282 = EXP 0x2 0xa0
0x34a: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34d: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x34f: V285 = AND V277 0xffffffffffffffffffffffffffffffffffffffff
0x350: V286 = EQ V285 V284
0x351: V287 = 0x359
0x354: JUMPI 0x359 V286
---
Entry stack: [V10, 0xa3, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V119]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x33e]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V288 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V119]

================================

Block 0x359
[0x359:0x369]
---
Predecessors: [0x33e]
Successors: [0x36a, 0x36e]
---
0x359 JUMPDEST
0x35a PUSH1 0x1
0x35c PUSH1 0xa0
0x35e PUSH1 0x2
0x360 EXP
0x361 SUB
0x362 DUP2
0x363 AND
0x364 ISZERO
0x365 ISZERO
0x366 PUSH2 0x36e
0x369 JUMPI
---
0x359: JUMPDEST 
0x35a: V289 = 0x1
0x35c: V290 = 0xa0
0x35e: V291 = 0x2
0x360: V292 = EXP 0x2 0xa0
0x361: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x363: V294 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x364: V295 = ISZERO V294
0x365: V296 = ISZERO V295
0x366: V297 = 0x36e
0x369: JUMPI 0x36e V296
---
Entry stack: [V10, 0xa3, V119]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa3, V119]

================================

Block 0x36a
[0x36a:0x36d]
---
Predecessors: [0x359]
Successors: []
---
0x36a PUSH1 0x0
0x36c DUP1
0x36d REVERT
---
0x36a: V298 = 0x0
0x36d: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V119]

================================

Block 0x36e
[0x36e:0x3d8]
---
Predecessors: [0x359]
Successors: [0xa3]
---
0x36e JUMPDEST
0x36f PUSH1 0x0
0x371 SLOAD
0x372 PUSH1 0x1
0x374 PUSH1 0xa0
0x376 PUSH1 0x2
0x378 EXP
0x379 SUB
0x37a DUP1
0x37b DUP4
0x37c AND
0x37d SWAP2
0x37e AND
0x37f PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3a0 PUSH1 0x40
0x3a2 MLOAD
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 SWAP2
0x3a8 SUB
0x3a9 SWAP1
0x3aa LOG3
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae SLOAD
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 NOT
0x3c5 AND
0x3c6 PUSH1 0x1
0x3c8 PUSH1 0xa0
0x3ca PUSH1 0x2
0x3cc EXP
0x3cd SUB
0x3ce SWAP3
0x3cf SWAP1
0x3d0 SWAP3
0x3d1 AND
0x3d2 SWAP2
0x3d3 SWAP1
0x3d4 SWAP2
0x3d5 OR
0x3d6 SWAP1
0x3d7 SSTORE
0x3d8 JUMP
---
0x36e: JUMPDEST 
0x36f: V299 = 0x0
0x371: V300 = S[0x0]
0x372: V301 = 0x1
0x374: V302 = 0xa0
0x376: V303 = 0x2
0x378: V304 = EXP 0x2 0xa0
0x379: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37c: V306 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V307 = AND V300 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V308 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3a0: V309 = 0x40
0x3a2: V310 = M[0x40]
0x3a3: V311 = 0x40
0x3a5: V312 = M[0x40]
0x3a8: V313 = SUB V310 V312
0x3aa: LOG V312 V313 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V307 V306
0x3ab: V314 = 0x0
0x3ae: V315 = S[0x0]
0x3af: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V317 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3c5: V318 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V315
0x3c6: V319 = 0x1
0x3c8: V320 = 0xa0
0x3ca: V321 = 0x2
0x3cc: V322 = EXP 0x2 0xa0
0x3cd: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d1: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x3d5: V325 = OR V324 V318
0x3d7: S[0x0] = V325
0x3d8: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V119]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d9
[0x3d9:0x3ef]
---
Predecessors: [0x16e]
Successors: [0x3f0, 0x3f4]
---
0x3d9 JUMPDEST
0x3da PUSH1 0x0
0x3dc SLOAD
0x3dd CALLER
0x3de PUSH1 0x1
0x3e0 PUSH1 0xa0
0x3e2 PUSH1 0x2
0x3e4 EXP
0x3e5 SUB
0x3e6 SWAP1
0x3e7 DUP2
0x3e8 AND
0x3e9 SWAP2
0x3ea AND
0x3eb EQ
0x3ec PUSH2 0x3f4
0x3ef JUMPI
---
0x3d9: JUMPDEST 
0x3da: V326 = 0x0
0x3dc: V327 = S[0x0]
0x3dd: V328 = CALLER
0x3de: V329 = 0x1
0x3e0: V330 = 0xa0
0x3e2: V331 = 0x2
0x3e4: V332 = EXP 0x2 0xa0
0x3e5: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e8: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x3ea: V335 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: V336 = EQ V335 V334
0x3ec: V337 = 0x3f4
0x3ef: JUMPI 0x3f4 V336
---
Entry stack: [V10, 0xa3, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V129]

================================

Block 0x3f0
[0x3f0:0x3f3]
---
Predecessors: [0x3d9]
Successors: []
---
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 REVERT
---
0x3f0: V338 = 0x0
0x3f3: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V129]

================================

Block 0x3f4
[0x3f4:0x40c]
---
Predecessors: [0x3d9]
Successors: [0x40d, 0x40e]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x0
0x3f7 PUSH1 0x2
0x3f9 DUP1
0x3fa SLOAD
0x3fb PUSH1 0xa0
0x3fd PUSH1 0x2
0x3ff EXP
0x400 SWAP1
0x401 DIV
0x402 PUSH1 0xff
0x404 AND
0x405 SWAP1
0x406 DUP2
0x407 GT
0x408 ISZERO
0x409 PUSH2 0x40e
0x40c JUMPI
---
0x3f4: JUMPDEST 
0x3f5: V339 = 0x0
0x3f7: V340 = 0x2
0x3fa: V341 = S[0x2]
0x3fb: V342 = 0xa0
0x3fd: V343 = 0x2
0x3ff: V344 = EXP 0x2 0xa0
0x401: V345 = DIV V341 0x10000000000000000000000000000000000000000
0x402: V346 = 0xff
0x404: V347 = AND 0xff V345
0x407: V348 = GT V347 0x2
0x408: V349 = ISZERO V348
0x409: V350 = 0x40e
0x40c: JUMPI 0x40e V349
---
Entry stack: [V10, 0xa3, V129]
Stack pops: 0
Stack additions: [0x0, V347]
Exit stack: [V10, 0xa3, V129, 0x0, V347]

================================

Block 0x40d
[0x40d:0x40d]
---
Predecessors: [0x3f4]
Successors: []
---
0x40d INVALID
---
0x40d: INVALID 
---
Entry stack: [V10, 0xa3, V129, 0x0, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V129, 0x0, V347]

================================

Block 0x40e
[0x40e:0x413]
---
Predecessors: [0x3f4]
Successors: [0x414, 0x418]
---
0x40e JUMPDEST
0x40f EQ
0x410 PUSH2 0x418
0x413 JUMPI
---
0x40e: JUMPDEST 
0x40f: V351 = EQ V347 0x0
0x410: V352 = 0x418
0x413: JUMPI 0x418 V351
---
Entry stack: [V10, 0xa3, V129, 0x0, V347]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xa3, V129]

================================

Block 0x414
[0x414:0x417]
---
Predecessors: [0x40e]
Successors: []
---
0x414 PUSH1 0x0
0x416 DUP1
0x417 REVERT
---
0x414: V353 = 0x0
0x417: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V129]

================================

Block 0x418
[0x418:0x440]
---
Predecessors: [0x40e]
Successors: [0x50d]
---
0x418 JUMPDEST
0x419 PUSH1 0x1
0x41b PUSH1 0xa0
0x41d PUSH1 0x2
0x41f EXP
0x420 SUB
0x421 DUP2
0x422 AND
0x423 PUSH1 0x0
0x425 SWAP1
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x1
0x42a PUSH1 0x20
0x42c MSTORE
0x42d PUSH1 0x40
0x42f SWAP1
0x430 SHA3
0x431 SLOAD
0x432 PUSH2 0x441
0x435 SWAP1
0x436 CALLVALUE
0x437 PUSH4 0xffffffff
0x43c PUSH2 0x50d
0x43f AND
0x440 JUMP
---
0x418: JUMPDEST 
0x419: V354 = 0x1
0x41b: V355 = 0xa0
0x41d: V356 = 0x2
0x41f: V357 = EXP 0x2 0xa0
0x420: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V359 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x423: V360 = 0x0
0x427: M[0x0] = V359
0x428: V361 = 0x1
0x42a: V362 = 0x20
0x42c: M[0x20] = 0x1
0x42d: V363 = 0x40
0x430: V364 = SHA3 0x0 0x40
0x431: V365 = S[V364]
0x432: V366 = 0x441
0x436: V367 = CALLVALUE
0x437: V368 = 0xffffffff
0x43c: V369 = 0x50d
0x43f: V370 = AND 0x50d 0xffffffff
0x440: JUMP 0x50d
---
Entry stack: [V10, 0xa3, V129]
Stack pops: 1
Stack additions: [S0, 0x441, V365, V367]
Exit stack: [V10, 0xa3, V129, 0x441, V365, V367]

================================

Block 0x441
[0x441:0x45c]
---
Predecessors: [0x51c]
Successors: [0xa3]
---
0x441 JUMPDEST
0x442 PUSH1 0x1
0x444 PUSH1 0xa0
0x446 PUSH1 0x2
0x448 EXP
0x449 SUB
0x44a SWAP1
0x44b SWAP2
0x44c AND
0x44d PUSH1 0x0
0x44f SWAP1
0x450 DUP2
0x451 MSTORE
0x452 PUSH1 0x1
0x454 PUSH1 0x20
0x456 MSTORE
0x457 PUSH1 0x40
0x459 SWAP1
0x45a SHA3
0x45b SSTORE
0x45c JUMP
---
0x441: JUMPDEST 
0x442: V371 = 0x1
0x444: V372 = 0xa0
0x446: V373 = 0x2
0x448: V374 = EXP 0x2 0xa0
0x449: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44c: V376 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V377 = 0x0
0x451: M[0x0] = V376
0x452: V378 = 0x1
0x454: V379 = 0x20
0x456: M[0x20] = 0x1
0x457: V380 = 0x40
0x45a: V381 = SHA3 0x0 0x40
0x45b: S[V381] = V438
0x45c: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V129, V438]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x45d
[0x45d:0x477]
---
Predecessors: [0x18d]
Successors: [0x478, 0x479]
---
0x45d JUMPDEST
0x45e PUSH1 0x0
0x460 PUSH1 0x1
0x462 PUSH1 0x2
0x464 DUP1
0x465 SLOAD
0x466 PUSH1 0xa0
0x468 PUSH1 0x2
0x46a EXP
0x46b SWAP1
0x46c DIV
0x46d PUSH1 0xff
0x46f AND
0x470 SWAP1
0x471 DUP2
0x472 GT
0x473 ISZERO
0x474 PUSH2 0x479
0x477 JUMPI
---
0x45d: JUMPDEST 
0x45e: V382 = 0x0
0x460: V383 = 0x1
0x462: V384 = 0x2
0x465: V385 = S[0x2]
0x466: V386 = 0xa0
0x468: V387 = 0x2
0x46a: V388 = EXP 0x2 0xa0
0x46c: V389 = DIV V385 0x10000000000000000000000000000000000000000
0x46d: V390 = 0xff
0x46f: V391 = AND 0xff V389
0x472: V392 = GT V391 0x2
0x473: V393 = ISZERO V392
0x474: V394 = 0x479
0x477: JUMPI 0x479 V393
---
Entry stack: [V10, 0xa3, V143]
Stack pops: 0
Stack additions: [0x0, 0x1, V391]
Exit stack: [V10, 0xa3, V143, 0x0, 0x1, V391]

================================

Block 0x478
[0x478:0x478]
---
Predecessors: [0x45d]
Successors: []
---
0x478 INVALID
---
0x478: INVALID 
---
Entry stack: [V10, 0xa3, V143, 0x0, 0x1, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V143, 0x0, 0x1, V391]

================================

Block 0x479
[0x479:0x47e]
---
Predecessors: [0x45d]
Successors: [0x47f, 0x483]
---
0x479 JUMPDEST
0x47a EQ
0x47b PUSH2 0x483
0x47e JUMPI
---
0x479: JUMPDEST 
0x47a: V395 = EQ V391 0x1
0x47b: V396 = 0x483
0x47e: JUMPI 0x483 V395
---
Entry stack: [V10, 0xa3, V143, 0x0, 0x1, V391]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xa3, V143, 0x0]

================================

Block 0x47f
[0x47f:0x482]
---
Predecessors: [0x479]
Successors: []
---
0x47f PUSH1 0x0
0x481 DUP1
0x482 REVERT
---
0x47f: V397 = 0x0
0x482: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, V143, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V143, 0x0]

================================

Block 0x483
[0x483:0x4c7]
---
Predecessors: [0x479]
Successors: [0x4c8, 0x4cc]
---
0x483 JUMPDEST
0x484 POP
0x485 PUSH1 0x1
0x487 PUSH1 0xa0
0x489 PUSH1 0x2
0x48b EXP
0x48c SUB
0x48d DUP2
0x48e AND
0x48f PUSH1 0x0
0x491 DUP2
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x1
0x496 PUSH1 0x20
0x498 MSTORE
0x499 PUSH1 0x40
0x49b DUP1
0x49c DUP3
0x49d SHA3
0x49e DUP1
0x49f SLOAD
0x4a0 SWAP3
0x4a1 SWAP1
0x4a2 SSTORE
0x4a3 SWAP1
0x4a4 SWAP2
0x4a5 SWAP1
0x4a6 DUP3
0x4a7 ISZERO
0x4a8 PUSH2 0x8fc
0x4ab MUL
0x4ac SWAP1
0x4ad DUP4
0x4ae SWAP1
0x4af MLOAD
0x4b0 PUSH1 0x0
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 DUP1
0x4b6 DUP4
0x4b7 SUB
0x4b8 DUP2
0x4b9 DUP6
0x4ba DUP9
0x4bb DUP9
0x4bc CALL
0x4bd SWAP4
0x4be POP
0x4bf POP
0x4c0 POP
0x4c1 POP
0x4c2 ISZERO
0x4c3 ISZERO
0x4c4 PUSH2 0x4cc
0x4c7 JUMPI
---
0x483: JUMPDEST 
0x485: V398 = 0x1
0x487: V399 = 0xa0
0x489: V400 = 0x2
0x48b: V401 = EXP 0x2 0xa0
0x48c: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48e: V403 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V404 = 0x0
0x493: M[0x0] = V403
0x494: V405 = 0x1
0x496: V406 = 0x20
0x498: M[0x20] = 0x1
0x499: V407 = 0x40
0x49d: V408 = SHA3 0x0 0x40
0x49f: V409 = S[V408]
0x4a2: S[V408] = 0x0
0x4a7: V410 = ISZERO V409
0x4a8: V411 = 0x8fc
0x4ab: V412 = MUL 0x8fc V410
0x4af: V413 = M[0x40]
0x4b0: V414 = 0x0
0x4b2: V415 = 0x40
0x4b4: V416 = M[0x40]
0x4b7: V417 = SUB V413 V416
0x4bc: V418 = CALL V412 V403 V409 V416 V417 V416 0x0
0x4c2: V419 = ISZERO V418
0x4c3: V420 = ISZERO V419
0x4c4: V421 = 0x4cc
0x4c7: JUMPI 0x4cc V420
---
Entry stack: [V10, 0xa3, V143, 0x0]
Stack pops: 2
Stack additions: [S1, V409]
Exit stack: [V10, 0xa3, V143, V409]

================================

Block 0x4c8
[0x4c8:0x4cb]
---
Predecessors: [0x483]
Successors: []
---
0x4c8 PUSH1 0x0
0x4ca DUP1
0x4cb REVERT
---
0x4c8: V422 = 0x0
0x4cb: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, V143, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V143, V409]

================================

Block 0x4cc
[0x4cc:0x50c]
---
Predecessors: [0x483]
Successors: [0xa3]
---
0x4cc JUMPDEST
0x4cd DUP2
0x4ce PUSH1 0x1
0x4d0 PUSH1 0xa0
0x4d2 PUSH1 0x2
0x4d4 EXP
0x4d5 SUB
0x4d6 AND
0x4d7 PUSH32 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x4f8 DUP3
0x4f9 PUSH1 0x40
0x4fb MLOAD
0x4fc SWAP1
0x4fd DUP2
0x4fe MSTORE
0x4ff PUSH1 0x20
0x501 ADD
0x502 PUSH1 0x40
0x504 MLOAD
0x505 DUP1
0x506 SWAP2
0x507 SUB
0x508 SWAP1
0x509 LOG2
0x50a POP
0x50b POP
0x50c JUMP
---
0x4cc: JUMPDEST 
0x4ce: V423 = 0x1
0x4d0: V424 = 0xa0
0x4d2: V425 = 0x2
0x4d4: V426 = EXP 0x2 0xa0
0x4d5: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d6: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x4d7: V429 = 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x4f9: V430 = 0x40
0x4fb: V431 = M[0x40]
0x4fe: M[V431] = V409
0x4ff: V432 = 0x20
0x501: V433 = ADD 0x20 V431
0x502: V434 = 0x40
0x504: V435 = M[0x40]
0x507: V436 = SUB V433 V435
0x509: LOG V435 V436 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651 V428
0x50c: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V143, V409]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x50d
[0x50d:0x51a]
---
Predecessors: [0x418]
Successors: [0x51b, 0x51c]
---
0x50d JUMPDEST
0x50e PUSH1 0x0
0x510 DUP3
0x511 DUP3
0x512 ADD
0x513 DUP4
0x514 DUP2
0x515 LT
0x516 ISZERO
0x517 PUSH2 0x51c
0x51a JUMPI
---
0x50d: JUMPDEST 
0x50e: V437 = 0x0
0x512: V438 = ADD V367 V365
0x515: V439 = LT V438 V365
0x516: V440 = ISZERO V439
0x517: V441 = 0x51c
0x51a: JUMPI 0x51c V440
---
Entry stack: [V10, 0xa3, V129, 0x441, V365, V367]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V438]
Exit stack: [V10, 0xa3, V129, 0x441, V365, V367, 0x0, V438]

================================

Block 0x51b
[0x51b:0x51b]
---
Predecessors: [0x50d]
Successors: []
---
0x51b INVALID
---
0x51b: INVALID 
---
Entry stack: [V10, 0xa3, V129, 0x441, V365, V367, 0x0, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V129, 0x441, V365, V367, 0x0, V438]

================================

Block 0x51c
[0x51c:0x522]
---
Predecessors: [0x50d]
Successors: [0x441]
---
0x51c JUMPDEST
0x51d SWAP4
0x51e SWAP3
0x51f POP
0x520 POP
0x521 POP
0x522 JUMP
---
0x51c: JUMPDEST 
0x522: JUMP 0x441
---
Entry stack: [V10, 0xa3, V129, 0x441, V365, V367, 0x0, V438]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0xa3, V129, V438]

================================

Block 0x523
[0x523:0x559]
---
Predecessors: []
Successors: []
---
0x523 STOP
0x524 LOG1
0x525 PUSH6 0x627a7a723058
0x52c SHA3
0x52d MISSING 0xc7
0x52e PUSH13 0x25d4fb3446cc47348f6f6a5f2f
0x53c MISSING 0x4e
0x53d CALLDATACOPY
0x53e DUP12
0x53f BLOCKHASH
0x540 PUSH25 0xc0b7ad3583a86e9a9ee875a70029
---
0x523: STOP 
0x524: LOG S0 S1 S2
0x525: V442 = 0x627a7a723058
0x52c: V443 = SHA3 0x627a7a723058 S3
0x52d: MISSING 0xc7
0x52e: V444 = 0x25d4fb3446cc47348f6f6a5f2f
0x53c: MISSING 0x4e
0x53d: CALLDATACOPY S0 S1 S2
0x53f: V445 = BLOCKHASH S14
0x540: V446 = 0xc0b7ad3583a86e9a9ee875a70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V443, 0x25d4fb3446cc47348f6f6a5f2f, 0xc0b7ad3583a86e9a9ee875a70029, V445, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x43d726d6
Entry block: 0x90
Exit block: 0xa3
Body: 0x90, 0x97, 0x9b, 0xa3, 0x1a1, 0x1b8, 0x1bc, 0x1d5, 0x1d6, 0x1dc, 0x1e0, 0x276, 0x27a

Function 1:
Public function signature: 0x521eb273
Entry block: 0xa5
Exit block: 0xb8
Body: 0xa5, 0xac, 0xb0, 0xb8, 0x27c

Function 2:
Public function signature: 0x8c52dc41
Entry block: 0xd4
Exit block: 0xa3
Body: 0xa3, 0xd4, 0xdb, 0xdf, 0x28b, 0x2a2, 0x2a6, 0x2bf, 0x2c0, 0x2c6, 0x2ca

Function 3:
Public function signature: 0xc19d93fb
Entry block: 0xe7
Exit block: 0x109
Body: 0xe7, 0xee, 0xf2, 0xfa, 0x109, 0x10a, 0x31c

Function 4:
Public function signature: 0xcb13cddb
Entry block: 0x11e
Exit block: 0x13d
Body: 0x11e, 0x125, 0x129, 0x13d, 0x32c

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x14f
Exit block: 0xa3
Body: 0xa3, 0x14f, 0x156, 0x15a, 0x33e, 0x355, 0x359, 0x36a, 0x36e

Function 6:
Public function signature: 0xf340fa01
Entry block: 0x16e
Exit block: 0xa3
Body: 0xa3, 0x16e, 0x3d9, 0x3f0, 0x3f4, 0x40d, 0x40e, 0x414, 0x418, 0x441, 0x50d, 0x51b, 0x51c

Function 7:
Public function signature: 0xfa89401a
Entry block: 0x182
Exit block: 0xa3
Body: 0xa3, 0x182, 0x189, 0x18d, 0x45d, 0x478, 0x479, 0x47f, 0x483, 0x4c8, 0x4cc

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0x8b
Body: 0x8b

