Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x24600fc3
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x24600fc3
0x3b: V13 = EQ V11 0x24600fc3
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x78]
---
0x40 DUP1
0x41 PUSH4 0x30ce4895
0x46 EQ
0x47 PUSH2 0x78
0x4a JUMPI
---
0x41: V15 = 0x30ce4895
0x46: V16 = EQ 0x30ce4895 V11
0x47: V17 = 0x78
0x4a: JUMPI 0x78 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa8]
---
0x4b DUP1
0x4c PUSH4 0x41c0e1b5
0x51 EQ
0x52 PUSH2 0xa8
0x55 JUMPI
---
0x4c: V18 = 0x41c0e1b5
0x51: V19 = EQ 0x41c0e1b5 V11
0x52: V20 = 0xa8
0x55: JUMPI 0xa8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xbd]
---
0x56 DUP1
0x57 PUSH4 0xdd365b8b
0x5c EQ
0x5d PUSH2 0xbd
0x60 JUMPI
---
0x57: V21 = 0xdd365b8b
0x5c: V22 = EQ 0xdd365b8b V11
0x5d: V23 = 0xbd
0x60: JUMPI 0xbd V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x164, 0x591, 0x795]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x6f
[0x6f:0x77]
---
Predecessors: [0x63]
Successors: [0xc5]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH2 0x61
0x74 PUSH2 0xc5
0x77 JUMP
---
0x6f: JUMPDEST 
0x71: V28 = 0x61
0x74: V29 = 0xc5
0x77: JUMP 0xc5
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x40]
Successors: [0x80, 0x84]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a DUP1
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x78: JUMPDEST 
0x79: V30 = CALLVALUE
0x7b: V31 = ISZERO V30
0x7c: V32 = 0x84
0x7f: JUMPI 0x84 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x78]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V33 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x84
[0x84:0xa7]
---
Predecessors: [0x78]
Successors: [0x166]
---
0x84 JUMPDEST
0x85 POP
0x86 PUSH2 0x61
0x89 PUSH1 0x4
0x8b CALLDATALOAD
0x8c PUSH1 0x24
0x8e CALLDATALOAD
0x8f PUSH1 0x44
0x91 CALLDATALOAD
0x92 PUSH1 0x64
0x94 CALLDATALOAD
0x95 PUSH1 0x84
0x97 CALLDATALOAD
0x98 PUSH1 0x1
0x9a PUSH1 0xa0
0x9c PUSH1 0x2
0x9e EXP
0x9f SUB
0xa0 PUSH1 0xa4
0xa2 CALLDATALOAD
0xa3 AND
0xa4 PUSH2 0x166
0xa7 JUMP
---
0x84: JUMPDEST 
0x86: V34 = 0x61
0x89: V35 = 0x4
0x8b: V36 = CALLDATALOAD 0x4
0x8c: V37 = 0x24
0x8e: V38 = CALLDATALOAD 0x24
0x8f: V39 = 0x44
0x91: V40 = CALLDATALOAD 0x44
0x92: V41 = 0x64
0x94: V42 = CALLDATALOAD 0x64
0x95: V43 = 0x84
0x97: V44 = CALLDATALOAD 0x84
0x98: V45 = 0x1
0x9a: V46 = 0xa0
0x9c: V47 = 0x2
0x9e: V48 = EXP 0x2 0xa0
0x9f: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V50 = 0xa4
0xa2: V51 = CALLDATALOAD 0xa4
0xa3: V52 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V53 = 0x166
0xa7: JUMP 0x166
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x61, V36, V38, V40, V42, V44, V52]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x4b]
Successors: [0xb0, 0xb4]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa DUP1
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa8: JUMPDEST 
0xa9: V54 = CALLVALUE
0xab: V55 = ISZERO V54
0xac: V56 = 0xb4
0xaf: JUMPI 0xb4 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa8]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V57 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xb4
[0xb4:0xbc]
---
Predecessors: [0xa8]
Successors: [0x59f]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH2 0x61
0xb9 PUSH2 0x59f
0xbc JUMP
---
0xb4: JUMPDEST 
0xb6: V58 = 0x61
0xb9: V59 = 0x59f
0xbc: JUMP 0x59f
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0x56]
Successors: [0x635]
---
0xbd JUMPDEST
0xbe PUSH2 0x61
0xc1 PUSH2 0x635
0xc4 JUMP
---
0xbd: JUMPDEST 
0xbe: V60 = 0x61
0xc1: V61 = 0x635
0xc4: JUMP 0x635
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xc5
[0xc5:0xd7]
---
Predecessors: [0x6f]
Successors: [0xd8, 0x14d]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x2
0xc8 SLOAD
0xc9 PUSH1 0x1
0xcb PUSH1 0xa0
0xcd PUSH1 0x2
0xcf EXP
0xd0 SUB
0xd1 AND
0xd2 CALLER
0xd3 EQ
0xd4 PUSH2 0x14d
0xd7 JUMPI
---
0xc5: JUMPDEST 
0xc6: V62 = 0x2
0xc8: V63 = S[0x2]
0xc9: V64 = 0x1
0xcb: V65 = 0xa0
0xcd: V66 = 0x2
0xcf: V67 = EXP 0x2 0xa0
0xd0: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xd2: V70 = CALLER
0xd3: V71 = EQ V70 V69
0xd4: V72 = 0x14d
0xd7: JUMPI 0x14d V71
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xd8
[0xd8:0x14c]
---
Predecessors: [0xc5]
Successors: []
---
0xd8 PUSH1 0x40
0xda DUP1
0xdb MLOAD
0xdc PUSH1 0xe5
0xde PUSH1 0x2
0xe0 EXP
0xe1 PUSH3 0x461bcd
0xe5 MUL
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x20
0xea PUSH1 0x4
0xec DUP3
0xed ADD
0xee MSTORE
0xef PUSH1 0x26
0xf1 PUSH1 0x24
0xf3 DUP3
0xf4 ADD
0xf5 MSTORE
0xf6 PUSH32 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x117 PUSH1 0x44
0x119 DUP3
0x11a ADD
0x11b MSTORE
0x11c PUSH32 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x13d PUSH1 0x64
0x13f DUP3
0x140 ADD
0x141 MSTORE
0x142 SWAP1
0x143 MLOAD
0x144 SWAP1
0x145 DUP2
0x146 SWAP1
0x147 SUB
0x148 PUSH1 0x84
0x14a ADD
0x14b SWAP1
0x14c REVERT
---
0xd8: V73 = 0x40
0xdb: V74 = M[0x40]
0xdc: V75 = 0xe5
0xde: V76 = 0x2
0xe0: V77 = EXP 0x2 0xe5
0xe1: V78 = 0x461bcd
0xe5: V79 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xe7: M[V74] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe8: V80 = 0x20
0xea: V81 = 0x4
0xed: V82 = ADD V74 0x4
0xee: M[V82] = 0x20
0xef: V83 = 0x26
0xf1: V84 = 0x24
0xf4: V85 = ADD V74 0x24
0xf5: M[V85] = 0x26
0xf6: V86 = 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x117: V87 = 0x44
0x11a: V88 = ADD V74 0x44
0x11b: M[V88] = 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x11c: V89 = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x13d: V90 = 0x64
0x140: V91 = ADD V74 0x64
0x141: M[V91] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x143: V92 = M[0x40]
0x147: V93 = SUB V74 V92
0x148: V94 = 0x84
0x14a: V95 = ADD 0x84 V93
0x14c: REVERT V92 V95
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x14d
[0x14d:0x163]
---
Predecessors: [0xc5]
Successors: [0x79e]
---
0x14d JUMPDEST
0x14e PUSH1 0x2
0x150 SLOAD
0x151 PUSH2 0x164
0x154 SWAP1
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d AND
0x15e ADDRESS
0x15f BALANCE
0x160 PUSH2 0x79e
0x163 JUMP
---
0x14d: JUMPDEST 
0x14e: V96 = 0x2
0x150: V97 = S[0x2]
0x151: V98 = 0x164
0x155: V99 = 0x1
0x157: V100 = 0xa0
0x159: V101 = 0x2
0x15b: V102 = EXP 0x2 0xa0
0x15c: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x15e: V105 = ADDRESS
0x15f: V106 = BALANCE V105
0x160: V107 = 0x79e
0x163: JUMP 0x79e
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [0x164, V104, V106]
Exit stack: [V11, 0x61, 0x164, V104, V106]

================================

Block 0x164
[0x164:0x165]
---
Predecessors: [0x79e]
Successors: [0x61]
---
0x164 JUMPDEST
0x165 JUMP
---
0x164: JUMPDEST 
0x165: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x166
[0x166:0x17e]
---
Predecessors: [0x84]
Successors: [0x17f, 0x1f4]
---
0x166 JUMPDEST
0x167 PUSH1 0x2
0x169 SLOAD
0x16a PUSH1 0x0
0x16c SWAP1
0x16d PUSH1 0x60
0x16f SWAP1
0x170 PUSH1 0x1
0x172 PUSH1 0xa0
0x174 PUSH1 0x2
0x176 EXP
0x177 SUB
0x178 AND
0x179 CALLER
0x17a EQ
0x17b PUSH2 0x1f4
0x17e JUMPI
---
0x166: JUMPDEST 
0x167: V108 = 0x2
0x169: V109 = S[0x2]
0x16a: V110 = 0x0
0x16d: V111 = 0x60
0x170: V112 = 0x1
0x172: V113 = 0xa0
0x174: V114 = 0x2
0x176: V115 = EXP 0x2 0xa0
0x177: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x178: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x179: V118 = CALLER
0x17a: V119 = EQ V118 V117
0x17b: V120 = 0x1f4
0x17e: JUMPI 0x1f4 V119
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]

================================

Block 0x17f
[0x17f:0x1f3]
---
Predecessors: [0x166]
Successors: []
---
0x17f PUSH1 0x40
0x181 DUP1
0x182 MLOAD
0x183 PUSH1 0xe5
0x185 PUSH1 0x2
0x187 EXP
0x188 PUSH3 0x461bcd
0x18c MUL
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x20
0x191 PUSH1 0x4
0x193 DUP3
0x194 ADD
0x195 MSTORE
0x196 PUSH1 0x26
0x198 PUSH1 0x24
0x19a DUP3
0x19b ADD
0x19c MSTORE
0x19d PUSH32 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x1be PUSH1 0x44
0x1c0 DUP3
0x1c1 ADD
0x1c2 MSTORE
0x1c3 PUSH32 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x1e4 PUSH1 0x64
0x1e6 DUP3
0x1e7 ADD
0x1e8 MSTORE
0x1e9 SWAP1
0x1ea MLOAD
0x1eb SWAP1
0x1ec DUP2
0x1ed SWAP1
0x1ee SUB
0x1ef PUSH1 0x84
0x1f1 ADD
0x1f2 SWAP1
0x1f3 REVERT
---
0x17f: V121 = 0x40
0x182: V122 = M[0x40]
0x183: V123 = 0xe5
0x185: V124 = 0x2
0x187: V125 = EXP 0x2 0xe5
0x188: V126 = 0x461bcd
0x18c: V127 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x18e: M[V122] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x18f: V128 = 0x20
0x191: V129 = 0x4
0x194: V130 = ADD V122 0x4
0x195: M[V130] = 0x20
0x196: V131 = 0x26
0x198: V132 = 0x24
0x19b: V133 = ADD V122 0x24
0x19c: M[V133] = 0x26
0x19d: V134 = 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x1be: V135 = 0x44
0x1c1: V136 = ADD V122 0x44
0x1c2: M[V136] = 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x1c3: V137 = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x1e4: V138 = 0x64
0x1e7: V139 = ADD V122 0x64
0x1e8: M[V139] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x1ea: V140 = M[0x40]
0x1ee: V141 = SUB V122 V140
0x1ef: V142 = 0x84
0x1f1: V143 = ADD 0x84 V141
0x1f3: REVERT V140 V143
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]

================================

Block 0x1f4
[0x1f4:0x268]
---
Predecessors: [0x166]
Successors: [0x269]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x5
0x1f7 DUP6
0x1f8 SWAP1
0x1f9 SSTORE
0x1fa PUSH1 0x6
0x1fc DUP5
0x1fd SWAP1
0x1fe SSTORE
0x1ff PUSH1 0x4
0x201 DUP7
0x202 SWAP1
0x203 SSTORE
0x204 PUSH8 0x1000000000000000
0x20d DUP8
0x20e ADD
0x20f PUSH1 0x3
0x211 SSTORE
0x212 PUSH1 0x1
0x214 DUP1
0x215 SLOAD
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b NOT
0x22c AND
0x22d PUSH1 0x1
0x22f PUSH1 0xa0
0x231 PUSH1 0x2
0x233 EXP
0x234 SUB
0x235 DUP6
0x236 AND
0x237 OR
0x238 SWAP1
0x239 SSTORE
0x23a PUSH1 0x7
0x23c DUP9
0x23d SWAP1
0x23e SSTORE
0x23f PUSH1 0x40
0x241 DUP1
0x242 MLOAD
0x243 PUSH1 0x20
0x245 DUP1
0x246 DUP3
0x247 ADD
0x248 DUP12
0x249 SWAP1
0x24a MSTORE
0x24b DUP3
0x24c MLOAD
0x24d DUP1
0x24e DUP4
0x24f SUB
0x250 DUP3
0x251 ADD
0x252 DUP2
0x253 MSTORE
0x254 SWAP2
0x255 DUP4
0x256 ADD
0x257 SWAP3
0x258 DUP4
0x259 SWAP1
0x25a MSTORE
0x25b DUP2
0x25c MLOAD
0x25d DUP10
0x25e SWAP4
0x25f SWAP2
0x260 DUP3
0x261 SWAP2
0x262 SWAP1
0x263 DUP5
0x264 ADD
0x265 SWAP1
0x266 DUP1
0x267 DUP4
0x268 DUP4
---
0x1f4: JUMPDEST 
0x1f5: V144 = 0x5
0x1f9: S[0x5] = V42
0x1fa: V145 = 0x6
0x1fe: S[0x6] = V44
0x1ff: V146 = 0x4
0x203: S[0x4] = V40
0x204: V147 = 0x1000000000000000
0x20e: V148 = ADD V38 0x1000000000000000
0x20f: V149 = 0x3
0x211: S[0x3] = V148
0x212: V150 = 0x1
0x215: V151 = S[0x1]
0x216: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V153 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V154 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V151
0x22d: V155 = 0x1
0x22f: V156 = 0xa0
0x231: V157 = 0x2
0x233: V158 = EXP 0x2 0xa0
0x234: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V160 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x237: V161 = OR V160 V154
0x239: S[0x1] = V161
0x23a: V162 = 0x7
0x23e: S[0x7] = V36
0x23f: V163 = 0x40
0x242: V164 = M[0x40]
0x243: V165 = 0x20
0x247: V166 = ADD V164 0x20
0x24a: M[V166] = V36
0x24c: V167 = M[0x40]
0x24f: V168 = SUB V164 V167
0x251: V169 = ADD 0x20 V168
0x253: M[V167] = V169
0x256: V170 = ADD 0x40 V164
0x25a: M[0x40] = V170
0x25c: V171 = M[V167]
0x264: V172 = ADD V167 0x20
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, S5, V167, V170, V170, V172, V171, V171, V170, V172]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V40, V167, V170, V170, V172, V171, V171, V170, V172]

================================

Block 0x269
[0x269:0x271]
---
Predecessors: [0x1f4, 0x272]
Successors: [0x272, 0x288]
---
0x269 JUMPDEST
0x26a PUSH1 0x20
0x26c DUP4
0x26d LT
0x26e PUSH2 0x288
0x271 JUMPI
---
0x269: JUMPDEST 
0x26a: V173 = 0x20
0x26d: V174 = LT S2 0x20
0x26e: V175 = 0x288
0x271: JUMPI 0x288 V174
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V40, V167, V170, V170, V172, V171, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V40, V167, V170, V170, V172, V171, S2, S1, S0]

================================

Block 0x272
[0x272:0x287]
---
Predecessors: [0x269]
Successors: [0x269]
---
0x272 DUP1
0x273 MLOAD
0x274 DUP3
0x275 MSTORE
0x276 PUSH1 0x1f
0x278 NOT
0x279 SWAP1
0x27a SWAP3
0x27b ADD
0x27c SWAP2
0x27d PUSH1 0x20
0x27f SWAP2
0x280 DUP3
0x281 ADD
0x282 SWAP2
0x283 ADD
0x284 PUSH2 0x269
0x287 JUMP
---
0x273: V176 = M[S0]
0x275: M[S1] = V176
0x276: V177 = 0x1f
0x278: V178 = NOT 0x1f
0x27b: V179 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x27d: V180 = 0x20
0x281: V181 = ADD 0x20 S1
0x283: V182 = ADD 0x20 S0
0x284: V183 = 0x269
0x287: JUMP 0x269
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V40, V167, V170, V170, V172, V171, S2, S1, S0]
Stack pops: 3
Stack additions: [V179, V181, V182]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V40, V167, V170, V170, V172, V171, V179, V181, V182]

================================

Block 0x288
[0x288:0x2c0]
---
Predecessors: [0x269]
Successors: [0x2c1, 0x2c5]
---
0x288 JUMPDEST
0x289 PUSH1 0x1
0x28b DUP4
0x28c PUSH1 0x20
0x28e SUB
0x28f PUSH2 0x100
0x292 EXP
0x293 SUB
0x294 DUP1
0x295 NOT
0x296 DUP3
0x297 MLOAD
0x298 AND
0x299 DUP2
0x29a DUP5
0x29b MLOAD
0x29c AND
0x29d DUP1
0x29e DUP3
0x29f OR
0x2a0 DUP6
0x2a1 MSTORE
0x2a2 POP
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 SWAP1
0x2a9 POP
0x2aa ADD
0x2ab SWAP2
0x2ac POP
0x2ad POP
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 DUP1
0x2b2 SWAP2
0x2b3 SUB
0x2b4 SWAP1
0x2b5 SHA3
0x2b6 PUSH1 0x1
0x2b8 SWAP1
0x2b9 DIV
0x2ba EQ
0x2bb ISZERO
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x288: JUMPDEST 
0x289: V184 = 0x1
0x28c: V185 = 0x20
0x28e: V186 = SUB 0x20 S2
0x28f: V187 = 0x100
0x292: V188 = EXP 0x100 V186
0x293: V189 = SUB V188 0x1
0x295: V190 = NOT V189
0x297: V191 = M[S0]
0x298: V192 = AND V191 V190
0x29b: V193 = M[S1]
0x29c: V194 = AND V193 V189
0x29f: V195 = OR V192 V194
0x2a1: M[S1] = V195
0x2aa: V196 = ADD V171 V170
0x2ae: V197 = 0x40
0x2b0: V198 = M[0x40]
0x2b3: V199 = SUB V196 V198
0x2b5: V200 = SHA3 V198 V199
0x2b6: V201 = 0x1
0x2b9: V202 = DIV V200 0x1
0x2ba: V203 = EQ V202 V40
0x2bb: V204 = ISZERO V203
0x2bc: V205 = ISZERO V204
0x2bd: V206 = 0x2c5
0x2c0: JUMPI 0x2c5 V205
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V40, V167, V170, V170, V172, V171, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x288]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V207 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]

================================

Block 0x2c5
[0x2c5:0x2cf]
---
Predecessors: [0x288]
Successors: [0x2d0, 0x31f]
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x3
0x2c8 SLOAD
0x2c9 NUMBER
0x2ca GT
0x2cb ISZERO
0x2cc PUSH2 0x31f
0x2cf JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V208 = 0x3
0x2c8: V209 = S[0x3]
0x2c9: V210 = NUMBER
0x2ca: V211 = GT V210 V209
0x2cb: V212 = ISZERO V211
0x2cc: V213 = 0x31f
0x2cf: JUMPI 0x31f V212
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]

================================

Block 0x2d0
[0x2d0:0x31e]
---
Predecessors: [0x2c5]
Successors: []
---
0x2d0 PUSH1 0x40
0x2d2 DUP1
0x2d3 MLOAD
0x2d4 PUSH1 0xe5
0x2d6 PUSH1 0x2
0x2d8 EXP
0x2d9 PUSH3 0x461bcd
0x2dd MUL
0x2de DUP2
0x2df MSTORE
0x2e0 PUSH1 0x20
0x2e2 PUSH1 0x4
0x2e4 DUP3
0x2e5 ADD
0x2e6 MSTORE
0x2e7 PUSH1 0x13
0x2e9 PUSH1 0x24
0x2eb DUP3
0x2ec ADD
0x2ed MSTORE
0x2ee PUSH32 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x30f PUSH1 0x44
0x311 DUP3
0x312 ADD
0x313 MSTORE
0x314 SWAP1
0x315 MLOAD
0x316 SWAP1
0x317 DUP2
0x318 SWAP1
0x319 SUB
0x31a PUSH1 0x64
0x31c ADD
0x31d SWAP1
0x31e REVERT
---
0x2d0: V214 = 0x40
0x2d3: V215 = M[0x40]
0x2d4: V216 = 0xe5
0x2d6: V217 = 0x2
0x2d8: V218 = EXP 0x2 0xe5
0x2d9: V219 = 0x461bcd
0x2dd: V220 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2df: M[V215] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2e0: V221 = 0x20
0x2e2: V222 = 0x4
0x2e5: V223 = ADD V215 0x4
0x2e6: M[V223] = 0x20
0x2e7: V224 = 0x13
0x2e9: V225 = 0x24
0x2ec: V226 = ADD V215 0x24
0x2ed: M[V226] = 0x13
0x2ee: V227 = 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x30f: V228 = 0x44
0x312: V229 = ADD V215 0x44
0x313: M[V229] = 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x315: V230 = M[0x40]
0x319: V231 = SUB V215 V230
0x31a: V232 = 0x64
0x31c: V233 = ADD 0x64 V231
0x31e: REVERT V230 V233
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]

================================

Block 0x31f
[0x31f:0x386]
---
Predecessors: [0x2c5]
Successors: [0x387]
---
0x31f JUMPDEST
0x320 PUSH1 0x3
0x322 SLOAD
0x323 PUSH1 0x4
0x325 SLOAD
0x326 PUSH1 0x40
0x328 MLOAD
0x329 PUSH1 0x20
0x32b ADD
0x32c DUP1
0x32d DUP4
0x32e PUSH5 0xffffffffff
0x334 AND
0x335 PUSH5 0xffffffffff
0x33b AND
0x33c PUSH28 0x1000000000000000000000000000000000000000000000000000000
0x359 MUL
0x35a DUP2
0x35b MSTORE
0x35c PUSH1 0x5
0x35e ADD
0x35f DUP3
0x360 DUP2
0x361 MSTORE
0x362 PUSH1 0x20
0x364 ADD
0x365 SWAP3
0x366 POP
0x367 POP
0x368 POP
0x369 PUSH1 0x40
0x36b MLOAD
0x36c PUSH1 0x20
0x36e DUP2
0x36f DUP4
0x370 SUB
0x371 SUB
0x372 DUP2
0x373 MSTORE
0x374 SWAP1
0x375 PUSH1 0x40
0x377 MSTORE
0x378 PUSH1 0x40
0x37a MLOAD
0x37b DUP1
0x37c DUP3
0x37d DUP1
0x37e MLOAD
0x37f SWAP1
0x380 PUSH1 0x20
0x382 ADD
0x383 SWAP1
0x384 DUP1
0x385 DUP4
0x386 DUP4
---
0x31f: JUMPDEST 
0x320: V234 = 0x3
0x322: V235 = S[0x3]
0x323: V236 = 0x4
0x325: V237 = S[0x4]
0x326: V238 = 0x40
0x328: V239 = M[0x40]
0x329: V240 = 0x20
0x32b: V241 = ADD 0x20 V239
0x32e: V242 = 0xffffffffff
0x334: V243 = AND 0xffffffffff V235
0x335: V244 = 0xffffffffff
0x33b: V245 = AND 0xffffffffff V243
0x33c: V246 = 0x1000000000000000000000000000000000000000000000000000000
0x359: V247 = MUL 0x1000000000000000000000000000000000000000000000000000000 V245
0x35b: M[V241] = V247
0x35c: V248 = 0x5
0x35e: V249 = ADD 0x5 V241
0x361: M[V249] = V237
0x362: V250 = 0x20
0x364: V251 = ADD 0x20 V249
0x369: V252 = 0x40
0x36b: V253 = M[0x40]
0x36c: V254 = 0x20
0x370: V255 = SUB V251 V253
0x371: V256 = SUB V255 0x20
0x373: M[V253] = V256
0x375: V257 = 0x40
0x377: M[0x40] = V251
0x378: V258 = 0x40
0x37a: V259 = M[0x40]
0x37e: V260 = M[V253]
0x380: V261 = 0x20
0x382: V262 = ADD 0x20 V253
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60]
Stack pops: 0
Stack additions: [V253, V259, V259, V262, V260, V260, V259, V262]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V253, V259, V259, V262, V260, V260, V259, V262]

================================

Block 0x387
[0x387:0x38f]
---
Predecessors: [0x31f, 0x390]
Successors: [0x390, 0x3a6]
---
0x387 JUMPDEST
0x388 PUSH1 0x20
0x38a DUP4
0x38b LT
0x38c PUSH2 0x3a6
0x38f JUMPI
---
0x387: JUMPDEST 
0x388: V263 = 0x20
0x38b: V264 = LT S2 0x20
0x38c: V265 = 0x3a6
0x38f: JUMPI 0x3a6 V264
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V253, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V253, V259, V259, V262, V260, S2, S1, S0]

================================

Block 0x390
[0x390:0x3a5]
---
Predecessors: [0x387]
Successors: [0x387]
---
0x390 DUP1
0x391 MLOAD
0x392 DUP3
0x393 MSTORE
0x394 PUSH1 0x1f
0x396 NOT
0x397 SWAP1
0x398 SWAP3
0x399 ADD
0x39a SWAP2
0x39b PUSH1 0x20
0x39d SWAP2
0x39e DUP3
0x39f ADD
0x3a0 SWAP2
0x3a1 ADD
0x3a2 PUSH2 0x387
0x3a5 JUMP
---
0x391: V266 = M[S0]
0x393: M[S1] = V266
0x394: V267 = 0x1f
0x396: V268 = NOT 0x1f
0x399: V269 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x39b: V270 = 0x20
0x39f: V271 = ADD 0x20 S1
0x3a1: V272 = ADD 0x20 S0
0x3a2: V273 = 0x387
0x3a5: JUMP 0x387
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V253, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 3
Stack additions: [V269, V271, V272]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V253, V259, V259, V262, V260, V269, V271, V272]

================================

Block 0x3a6
[0x3a6:0x41f]
---
Predecessors: [0x387]
Successors: [0x420, 0x429]
---
0x3a6 JUMPDEST
0x3a7 MLOAD
0x3a8 DUP2
0x3a9 MLOAD
0x3aa PUSH1 0x20
0x3ac SWAP4
0x3ad DUP5
0x3ae SUB
0x3af PUSH2 0x100
0x3b2 EXP
0x3b3 PUSH1 0x0
0x3b5 NOT
0x3b6 ADD
0x3b7 DUP1
0x3b8 NOT
0x3b9 SWAP1
0x3ba SWAP3
0x3bb AND
0x3bc SWAP2
0x3bd AND
0x3be OR
0x3bf SWAP1
0x3c0 MSTORE
0x3c1 PUSH1 0x40
0x3c3 DUP1
0x3c4 MLOAD
0x3c5 SWAP3
0x3c6 SWAP1
0x3c7 SWAP5
0x3c8 ADD
0x3c9 DUP3
0x3ca SWAP1
0x3cb SUB
0x3cc DUP3
0x3cd SHA3
0x3ce PUSH1 0x5
0x3d0 SLOAD
0x3d1 PUSH1 0x6
0x3d3 SLOAD
0x3d4 PUSH1 0x0
0x3d6 DUP1
0x3d7 DUP7
0x3d8 MSTORE
0x3d9 DUP6
0x3da DUP6
0x3db ADD
0x3dc DUP1
0x3dd DUP10
0x3de MSTORE
0x3df DUP5
0x3e0 SWAP1
0x3e1 MSTORE
0x3e2 PUSH1 0x1b
0x3e4 DUP7
0x3e5 DUP10
0x3e6 ADD
0x3e7 MSTORE
0x3e8 PUSH1 0x60
0x3ea DUP7
0x3eb ADD
0x3ec SWAP3
0x3ed SWAP1
0x3ee SWAP3
0x3ef MSTORE
0x3f0 PUSH1 0x80
0x3f2 DUP6
0x3f3 ADD
0x3f4 MSTORE
0x3f5 SWAP5
0x3f6 MLOAD
0x3f7 SWAP1
0x3f8 SWAP9
0x3f9 POP
0x3fa PUSH1 0x1
0x3fc SWAP7
0x3fd POP
0x3fe PUSH1 0xa0
0x400 DUP1
0x401 DUP5
0x402 ADD
0x403 SWAP7
0x404 POP
0x405 SWAP2
0x406 SWAP5
0x407 PUSH1 0x1f
0x409 NOT
0x40a DUP3
0x40b ADD
0x40c SWAP5
0x40d POP
0x40e SWAP3
0x40f DUP2
0x410 SWAP1
0x411 SUB
0x412 SWAP1
0x413 SWAP2
0x414 ADD
0x415 SWAP2
0x416 DUP7
0x417 GAS
0x418 CALL
0x419 ISZERO
0x41a DUP1
0x41b ISZERO
0x41c PUSH2 0x429
0x41f JUMPI
---
0x3a6: JUMPDEST 
0x3a7: V274 = M[S0]
0x3a9: V275 = M[S1]
0x3aa: V276 = 0x20
0x3ae: V277 = SUB 0x20 S2
0x3af: V278 = 0x100
0x3b2: V279 = EXP 0x100 V277
0x3b3: V280 = 0x0
0x3b5: V281 = NOT 0x0
0x3b6: V282 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V279
0x3b8: V283 = NOT V282
0x3bb: V284 = AND V274 V283
0x3bd: V285 = AND V282 V275
0x3be: V286 = OR V285 V284
0x3c0: M[S1] = V286
0x3c1: V287 = 0x40
0x3c4: V288 = M[0x40]
0x3c8: V289 = ADD V259 V260
0x3cb: V290 = SUB V289 V288
0x3cd: V291 = SHA3 V288 V290
0x3ce: V292 = 0x5
0x3d0: V293 = S[0x5]
0x3d1: V294 = 0x6
0x3d3: V295 = S[0x6]
0x3d4: V296 = 0x0
0x3d8: M[V288] = 0x0
0x3db: V297 = ADD 0x20 V288
0x3de: M[0x40] = V297
0x3e1: M[V297] = V291
0x3e2: V298 = 0x1b
0x3e6: V299 = ADD 0x40 V288
0x3e7: M[V299] = 0x1b
0x3e8: V300 = 0x60
0x3eb: V301 = ADD V288 0x60
0x3ef: M[V301] = V293
0x3f0: V302 = 0x80
0x3f3: V303 = ADD V288 0x80
0x3f4: M[V303] = V295
0x3f6: V304 = M[0x40]
0x3fa: V305 = 0x1
0x3fe: V306 = 0xa0
0x402: V307 = ADD V288 0xa0
0x407: V308 = 0x1f
0x409: V309 = NOT 0x1f
0x40b: V310 = ADD V304 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x411: V311 = SUB V288 V304
0x414: V312 = ADD 0xa0 V311
0x417: V313 = GAS
0x418: V314 = CALL V313 0x1 0x0 V304 V312 V310 0x20
0x419: V315 = ISZERO V314
0x41b: V316 = ISZERO V315
0x41c: V317 = 0x429
0x41f: JUMPI 0x429 V316
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, 0x0, 0x60, V253, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 10
Stack additions: [V291, S8, 0x1, V307, V315]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, 0x60, 0x1, V307, V315]

================================

Block 0x420
[0x420:0x428]
---
Predecessors: [0x3a6]
Successors: []
---
0x420 RETURNDATASIZE
0x421 PUSH1 0x0
0x423 DUP1
0x424 RETURNDATACOPY
0x425 RETURNDATASIZE
0x426 PUSH1 0x0
0x428 REVERT
---
0x420: V318 = RETURNDATASIZE
0x421: V319 = 0x0
0x424: RETURNDATACOPY 0x0 0x0 V318
0x425: V320 = RETURNDATASIZE
0x426: V321 = 0x0
0x428: REVERT 0x0 V320
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, 0x60, 0x1, V307, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, 0x60, 0x1, V307, V315]

================================

Block 0x429
[0x429:0x44a]
---
Predecessors: [0x3a6]
Successors: [0x44b, 0x49a]
---
0x429 JUMPDEST
0x42a POP
0x42b POP
0x42c PUSH1 0x40
0x42e MLOAD
0x42f PUSH1 0x1f
0x431 NOT
0x432 ADD
0x433 MLOAD
0x434 PUSH1 0x1
0x436 SLOAD
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f SWAP1
0x440 DUP2
0x441 AND
0x442 SWAP2
0x443 AND
0x444 EQ
0x445 SWAP1
0x446 POP
0x447 PUSH2 0x49a
0x44a JUMPI
---
0x429: JUMPDEST 
0x42c: V322 = 0x40
0x42e: V323 = M[0x40]
0x42f: V324 = 0x1f
0x431: V325 = NOT 0x1f
0x432: V326 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 V323
0x433: V327 = M[V326]
0x434: V328 = 0x1
0x436: V329 = S[0x1]
0x437: V330 = 0x1
0x439: V331 = 0xa0
0x43b: V332 = 0x2
0x43d: V333 = EXP 0x2 0xa0
0x43e: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x443: V336 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x444: V337 = EQ V336 V335
0x447: V338 = 0x49a
0x44a: JUMPI 0x49a V337
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, 0x60, 0x1, V307, V315]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, 0x60]

================================

Block 0x44b
[0x44b:0x499]
---
Predecessors: [0x429]
Successors: []
---
0x44b PUSH1 0x40
0x44d DUP1
0x44e MLOAD
0x44f PUSH1 0xe5
0x451 PUSH1 0x2
0x453 EXP
0x454 PUSH3 0x461bcd
0x458 MUL
0x459 DUP2
0x45a MSTORE
0x45b PUSH1 0x20
0x45d PUSH1 0x4
0x45f DUP3
0x460 ADD
0x461 MSTORE
0x462 PUSH1 0x1d
0x464 PUSH1 0x24
0x466 DUP3
0x467 ADD
0x468 MSTORE
0x469 PUSH32 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x48a PUSH1 0x44
0x48c DUP3
0x48d ADD
0x48e MSTORE
0x48f SWAP1
0x490 MLOAD
0x491 SWAP1
0x492 DUP2
0x493 SWAP1
0x494 SUB
0x495 PUSH1 0x64
0x497 ADD
0x498 SWAP1
0x499 REVERT
---
0x44b: V339 = 0x40
0x44e: V340 = M[0x40]
0x44f: V341 = 0xe5
0x451: V342 = 0x2
0x453: V343 = EXP 0x2 0xe5
0x454: V344 = 0x461bcd
0x458: V345 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x45a: M[V340] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x45b: V346 = 0x20
0x45d: V347 = 0x4
0x460: V348 = ADD V340 0x4
0x461: M[V348] = 0x20
0x462: V349 = 0x1d
0x464: V350 = 0x24
0x467: V351 = ADD V340 0x24
0x468: M[V351] = 0x1d
0x469: V352 = 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x48a: V353 = 0x44
0x48d: V354 = ADD V340 0x44
0x48e: M[V354] = 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x490: V355 = M[0x40]
0x494: V356 = SUB V340 V355
0x495: V357 = 0x64
0x497: V358 = ADD 0x64 V356
0x499: REVERT V355 V358
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, 0x60]

================================

Block 0x49a
[0x49a:0x4ca]
---
Predecessors: [0x429]
Successors: [0x4cb, 0x4cc]
---
0x49a JUMPDEST
0x49b PUSH1 0x40
0x49d DUP1
0x49e MLOAD
0x49f PUSH1 0x1
0x4a1 DUP1
0x4a2 DUP3
0x4a3 MSTORE
0x4a4 DUP2
0x4a5 DUP4
0x4a6 ADD
0x4a7 SWAP1
0x4a8 SWAP3
0x4a9 MSTORE
0x4aa SWAP1
0x4ab PUSH1 0x20
0x4ad DUP1
0x4ae DUP4
0x4af ADD
0x4b0 SWAP1
0x4b1 DUP1
0x4b2 CODESIZE
0x4b3 DUP4
0x4b4 CODECOPY
0x4b5 ADD
0x4b6 SWAP1
0x4b7 POP
0x4b8 POP
0x4b9 SWAP1
0x4ba POP
0x4bb PUSH1 0x4
0x4bd SLOAD
0x4be DUP2
0x4bf PUSH1 0x0
0x4c1 DUP2
0x4c2 MLOAD
0x4c3 DUP2
0x4c4 LT
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 PUSH2 0x4cc
0x4ca JUMPI
---
0x49a: JUMPDEST 
0x49b: V359 = 0x40
0x49e: V360 = M[0x40]
0x49f: V361 = 0x1
0x4a3: M[V360] = 0x1
0x4a6: V362 = ADD 0x40 V360
0x4a9: M[0x40] = V362
0x4ab: V363 = 0x20
0x4af: V364 = ADD V360 0x20
0x4b2: V365 = CODESIZE
0x4b4: CODECOPY V364 V365 0x20
0x4b5: V366 = ADD 0x20 V364
0x4bb: V367 = 0x4
0x4bd: V368 = S[0x4]
0x4bf: V369 = 0x0
0x4c2: V370 = M[V360]
0x4c4: V371 = LT 0x0 V370
0x4c5: V372 = ISZERO V371
0x4c6: V373 = ISZERO V372
0x4c7: V374 = 0x4cc
0x4ca: JUMPI 0x4cc V373
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, 0x60]
Stack pops: 1
Stack additions: [V360, V368, V360, 0x0]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V368, V360, 0x0]

================================

Block 0x4cb
[0x4cb:0x4cb]
---
Predecessors: [0x49a]
Successors: []
---
0x4cb INVALID
---
0x4cb: INVALID 
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V368, V360, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V368, V360, 0x0]

================================

Block 0x4cc
[0x4cc:0x53f]
---
Predecessors: [0x49a]
Successors: [0x540]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x20
0x4cf SWAP1
0x4d0 DUP2
0x4d1 MUL
0x4d2 SWAP1
0x4d3 SWAP2
0x4d4 ADD
0x4d5 DUP2
0x4d6 ADD
0x4d7 SWAP2
0x4d8 SWAP1
0x4d9 SWAP2
0x4da MSTORE
0x4db PUSH1 0x0
0x4dd DUP1
0x4de SLOAD
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 PUSH32 0xef11554200000000000000000000000000000000000000000000000000000000
0x503 DUP2
0x504 MSTORE
0x505 PUSH1 0x4
0x507 DUP2
0x508 ADD
0x509 DUP5
0x50a DUP2
0x50b MSTORE
0x50c DUP6
0x50d MLOAD
0x50e PUSH1 0x24
0x510 DUP4
0x511 ADD
0x512 MSTORE
0x513 DUP6
0x514 MLOAD
0x515 PUSH1 0x1
0x517 PUSH1 0xa0
0x519 PUSH1 0x2
0x51b EXP
0x51c SUB
0x51d SWAP1
0x51e SWAP4
0x51f AND
0x520 SWAP5
0x521 PUSH4 0xef115542
0x526 SWAP5
0x527 DUP8
0x528 SWAP5
0x529 SWAP3
0x52a SWAP4
0x52b DUP5
0x52c SWAP4
0x52d PUSH1 0x44
0x52f SWAP1
0x530 SWAP2
0x531 ADD
0x532 SWAP3
0x533 DUP7
0x534 DUP2
0x535 ADD
0x536 SWAP3
0x537 SWAP2
0x538 MUL
0x539 SWAP1
0x53a DUP2
0x53b SWAP1
0x53c DUP5
0x53d SWAP1
0x53e DUP5
0x53f SWAP1
---
0x4cc: JUMPDEST 
0x4cd: V375 = 0x20
0x4d1: V376 = MUL 0x20 0x0
0x4d4: V377 = ADD V360 0x0
0x4d6: V378 = ADD 0x20 V377
0x4da: M[V378] = V368
0x4db: V379 = 0x0
0x4de: V380 = S[0x0]
0x4df: V381 = 0x40
0x4e1: V382 = M[0x40]
0x4e2: V383 = 0xef11554200000000000000000000000000000000000000000000000000000000
0x504: M[V382] = 0xef11554200000000000000000000000000000000000000000000000000000000
0x505: V384 = 0x4
0x508: V385 = ADD V382 0x4
0x50b: M[V385] = 0x20
0x50d: V386 = M[V360]
0x50e: V387 = 0x24
0x511: V388 = ADD V382 0x24
0x512: M[V388] = V386
0x514: V389 = M[V360]
0x515: V390 = 0x1
0x517: V391 = 0xa0
0x519: V392 = 0x2
0x51b: V393 = EXP 0x2 0xa0
0x51c: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51f: V395 = AND V380 0xffffffffffffffffffffffffffffffffffffffff
0x521: V396 = 0xef115542
0x52d: V397 = 0x44
0x531: V398 = ADD V382 0x44
0x535: V399 = ADD 0x20 V360
0x538: V400 = MUL V389 0x20
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V368, V360, 0x0]
Stack pops: 4
Stack additions: [S3, V395, 0xef115542, S3, V385, V385, V398, V399, V400, V400, V398, V399, 0x0]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V360, V385, V385, V398, V399, V400, V400, V398, V399, 0x0]

================================

Block 0x540
[0x540:0x548]
---
Predecessors: [0x4cc, 0x549]
Successors: [0x549, 0x558]
---
0x540 JUMPDEST
0x541 DUP4
0x542 DUP2
0x543 LT
0x544 ISZERO
0x545 PUSH2 0x558
0x548 JUMPI
---
0x540: JUMPDEST 
0x543: V401 = LT S0 V400
0x544: V402 = ISZERO V401
0x545: V403 = 0x558
0x548: JUMPI 0x558 V402
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V360, V385, V385, V398, V399, V400, V400, V398, V399, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V360, V385, V385, V398, V399, V400, V400, V398, V399, S0]

================================

Block 0x549
[0x549:0x557]
---
Predecessors: [0x540]
Successors: [0x540]
---
0x549 DUP2
0x54a DUP2
0x54b ADD
0x54c MLOAD
0x54d DUP4
0x54e DUP3
0x54f ADD
0x550 MSTORE
0x551 PUSH1 0x20
0x553 ADD
0x554 PUSH2 0x540
0x557 JUMP
---
0x54b: V404 = ADD S0 V399
0x54c: V405 = M[V404]
0x54f: V406 = ADD S0 V398
0x550: M[V406] = V405
0x551: V407 = 0x20
0x553: V408 = ADD 0x20 S0
0x554: V409 = 0x540
0x557: JUMP 0x540
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V360, V385, V385, V398, V399, V400, V400, V398, V399, S0]
Stack pops: 3
Stack additions: [S2, S1, V408]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V360, V385, V385, V398, V399, V400, V400, V398, V399, V408]

================================

Block 0x558
[0x558:0x578]
---
Predecessors: [0x540]
Successors: [0x579, 0x57d]
---
0x558 JUMPDEST
0x559 POP
0x55a POP
0x55b POP
0x55c POP
0x55d SWAP1
0x55e POP
0x55f ADD
0x560 SWAP3
0x561 POP
0x562 POP
0x563 POP
0x564 PUSH1 0x0
0x566 PUSH1 0x40
0x568 MLOAD
0x569 DUP1
0x56a DUP4
0x56b SUB
0x56c DUP2
0x56d PUSH1 0x0
0x56f DUP8
0x570 DUP1
0x571 EXTCODESIZE
0x572 ISZERO
0x573 DUP1
0x574 ISZERO
0x575 PUSH2 0x57d
0x578 JUMPI
---
0x558: JUMPDEST 
0x55f: V410 = ADD V400 V398
0x564: V411 = 0x0
0x566: V412 = 0x40
0x568: V413 = M[0x40]
0x56b: V414 = SUB V410 V413
0x56d: V415 = 0x0
0x571: V416 = EXTCODESIZE V395
0x572: V417 = ISZERO V416
0x574: V418 = ISZERO V417
0x575: V419 = 0x57d
0x578: JUMPI 0x57d V418
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V360, V385, V385, V398, V399, V400, V400, V398, V399, S0]
Stack pops: 12
Stack additions: [S11, S10, V410, 0x0, V413, V414, V413, 0x0, S11, V417]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V410, 0x0, V413, V414, V413, 0x0, V395, V417]

================================

Block 0x579
[0x579:0x57c]
---
Predecessors: [0x558]
Successors: []
---
0x579 PUSH1 0x0
0x57b DUP1
0x57c REVERT
---
0x579: V420 = 0x0
0x57c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V410, 0x0, V413, V414, V413, 0x0, V395, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V410, 0x0, V413, V414, V413, 0x0, V395, V417]

================================

Block 0x57d
[0x57d:0x587]
---
Predecessors: [0x558]
Successors: [0x588, 0x591]
---
0x57d JUMPDEST
0x57e POP
0x57f GAS
0x580 CALL
0x581 ISZERO
0x582 DUP1
0x583 ISZERO
0x584 PUSH2 0x591
0x587 JUMPI
---
0x57d: JUMPDEST 
0x57f: V421 = GAS
0x580: V422 = CALL V421 V395 0x0 V413 V414 V413 0x0
0x581: V423 = ISZERO V422
0x583: V424 = ISZERO V423
0x584: V425 = 0x591
0x587: JUMPI 0x591 V424
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V410, 0x0, V413, V414, V413, 0x0, V395, V417]
Stack pops: 7
Stack additions: [V423]
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V410, V423]

================================

Block 0x588
[0x588:0x590]
---
Predecessors: [0x57d]
Successors: []
---
0x588 RETURNDATASIZE
0x589 PUSH1 0x0
0x58b DUP1
0x58c RETURNDATACOPY
0x58d RETURNDATASIZE
0x58e PUSH1 0x0
0x590 REVERT
---
0x588: V426 = RETURNDATASIZE
0x589: V427 = 0x0
0x58c: RETURNDATACOPY 0x0 0x0 V426
0x58d: V428 = RETURNDATASIZE
0x58e: V429 = 0x0
0x590: REVERT 0x0 V428
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V410, V423]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V410, V423]

================================

Block 0x591
[0x591:0x59e]
---
Predecessors: [0x57d]
Successors: [0x61]
---
0x591 JUMPDEST
0x592 POP
0x593 POP
0x594 POP
0x595 POP
0x596 POP
0x597 POP
0x598 POP
0x599 POP
0x59a POP
0x59b POP
0x59c POP
0x59d POP
0x59e JUMP
---
0x591: JUMPDEST 
0x59e: JUMP 0x61
---
Entry stack: [V11, 0x61, V36, V38, V40, V42, V44, V52, V291, V360, V395, 0xef115542, V410, V423]
Stack pops: 13
Stack additions: []
Exit stack: [V11]

================================

Block 0x59f
[0x59f:0x5b1]
---
Predecessors: [0xb4]
Successors: [0x5b2, 0x627]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x2
0x5a2 SLOAD
0x5a3 PUSH1 0x1
0x5a5 PUSH1 0xa0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa SUB
0x5ab AND
0x5ac CALLER
0x5ad EQ
0x5ae PUSH2 0x627
0x5b1 JUMPI
---
0x59f: JUMPDEST 
0x5a0: V430 = 0x2
0x5a2: V431 = S[0x2]
0x5a3: V432 = 0x1
0x5a5: V433 = 0xa0
0x5a7: V434 = 0x2
0x5a9: V435 = EXP 0x2 0xa0
0x5aa: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ab: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x5ac: V438 = CALLER
0x5ad: V439 = EQ V438 V437
0x5ae: V440 = 0x627
0x5b1: JUMPI 0x627 V439
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x5b2
[0x5b2:0x626]
---
Predecessors: [0x59f]
Successors: []
---
0x5b2 PUSH1 0x40
0x5b4 DUP1
0x5b5 MLOAD
0x5b6 PUSH1 0xe5
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb PUSH3 0x461bcd
0x5bf MUL
0x5c0 DUP2
0x5c1 MSTORE
0x5c2 PUSH1 0x20
0x5c4 PUSH1 0x4
0x5c6 DUP3
0x5c7 ADD
0x5c8 MSTORE
0x5c9 PUSH1 0x26
0x5cb PUSH1 0x24
0x5cd DUP3
0x5ce ADD
0x5cf MSTORE
0x5d0 PUSH32 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x5f1 PUSH1 0x44
0x5f3 DUP3
0x5f4 ADD
0x5f5 MSTORE
0x5f6 PUSH32 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x617 PUSH1 0x64
0x619 DUP3
0x61a ADD
0x61b MSTORE
0x61c SWAP1
0x61d MLOAD
0x61e SWAP1
0x61f DUP2
0x620 SWAP1
0x621 SUB
0x622 PUSH1 0x84
0x624 ADD
0x625 SWAP1
0x626 REVERT
---
0x5b2: V441 = 0x40
0x5b5: V442 = M[0x40]
0x5b6: V443 = 0xe5
0x5b8: V444 = 0x2
0x5ba: V445 = EXP 0x2 0xe5
0x5bb: V446 = 0x461bcd
0x5bf: V447 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5c1: M[V442] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5c2: V448 = 0x20
0x5c4: V449 = 0x4
0x5c7: V450 = ADD V442 0x4
0x5c8: M[V450] = 0x20
0x5c9: V451 = 0x26
0x5cb: V452 = 0x24
0x5ce: V453 = ADD V442 0x24
0x5cf: M[V453] = 0x26
0x5d0: V454 = 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x5f1: V455 = 0x44
0x5f4: V456 = ADD V442 0x44
0x5f5: M[V456] = 0x4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d
0x5f6: V457 = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x617: V458 = 0x64
0x61a: V459 = ADD V442 0x64
0x61b: M[V459] = 0x6f776e65722e0000000000000000000000000000000000000000000000000000
0x61d: V460 = M[0x40]
0x621: V461 = SUB V442 V460
0x622: V462 = 0x84
0x624: V463 = ADD 0x84 V461
0x626: REVERT V460 V463
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x627
[0x627:0x634]
---
Predecessors: [0x59f]
Successors: []
---
0x627 JUMPDEST
0x628 PUSH1 0x2
0x62a SLOAD
0x62b PUSH1 0x1
0x62d PUSH1 0xa0
0x62f PUSH1 0x2
0x631 EXP
0x632 SUB
0x633 AND
0x634 SELFDESTRUCT
---
0x627: JUMPDEST 
0x628: V464 = 0x2
0x62a: V465 = S[0x2]
0x62b: V466 = 0x1
0x62d: V467 = 0xa0
0x62f: V468 = 0x2
0x631: V469 = EXP 0x2 0xa0
0x632: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x633: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x634: SELFDESTRUCT V471
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x635
[0x635:0x674]
---
Predecessors: [0xbd]
Successors: [0x675]
---
0x635 JUMPDEST
0x636 PUSH1 0x7
0x638 SLOAD
0x639 PUSH1 0x40
0x63b DUP1
0x63c MLOAD
0x63d PUSH1 0x20
0x63f DUP1
0x640 DUP3
0x641 ADD
0x642 SWAP4
0x643 SWAP1
0x644 SWAP4
0x645 MSTORE
0x646 PUSH5 0xffffffffff
0x64c NUMBER
0x64d AND
0x64e BLOCKHASH
0x64f DUP2
0x650 DUP4
0x651 ADD
0x652 MSTORE
0x653 DUP2
0x654 MLOAD
0x655 DUP1
0x656 DUP3
0x657 SUB
0x658 DUP4
0x659 ADD
0x65a DUP2
0x65b MSTORE
0x65c PUSH1 0x60
0x65e SWAP1
0x65f SWAP2
0x660 ADD
0x661 SWAP2
0x662 DUP3
0x663 SWAP1
0x664 MSTORE
0x665 DUP1
0x666 MLOAD
0x667 PUSH1 0x0
0x669 SWAP4
0x66a DUP5
0x66b SWAP4
0x66c SWAP2
0x66d DUP3
0x66e SWAP2
0x66f DUP5
0x670 ADD
0x671 SWAP1
0x672 DUP1
0x673 DUP4
0x674 DUP4
---
0x635: JUMPDEST 
0x636: V472 = 0x7
0x638: V473 = S[0x7]
0x639: V474 = 0x40
0x63c: V475 = M[0x40]
0x63d: V476 = 0x20
0x641: V477 = ADD V475 0x20
0x645: M[V477] = V473
0x646: V478 = 0xffffffffff
0x64c: V479 = NUMBER
0x64d: V480 = AND V479 0xffffffffff
0x64e: V481 = BLOCKHASH V480
0x651: V482 = ADD 0x40 V475
0x652: M[V482] = V481
0x654: V483 = M[0x40]
0x657: V484 = SUB V475 V483
0x659: V485 = ADD 0x40 V484
0x65b: M[V483] = V485
0x65c: V486 = 0x60
0x660: V487 = ADD V475 0x60
0x664: M[0x40] = V487
0x666: V488 = M[V483]
0x667: V489 = 0x0
0x670: V490 = ADD V483 0x20
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [0x0, 0x0, V483, V487, V487, V490, V488, V488, V487, V490]
Exit stack: [V11, 0x61, 0x0, 0x0, V483, V487, V487, V490, V488, V488, V487, V490]

================================

Block 0x675
[0x675:0x67d]
---
Predecessors: [0x635, 0x67e]
Successors: [0x67e, 0x694]
---
0x675 JUMPDEST
0x676 PUSH1 0x20
0x678 DUP4
0x679 LT
0x67a PUSH2 0x694
0x67d JUMPI
---
0x675: JUMPDEST 
0x676: V491 = 0x20
0x679: V492 = LT S2 0x20
0x67a: V493 = 0x694
0x67d: JUMPI 0x694 V492
---
Entry stack: [V11, 0x61, 0x0, 0x0, V483, V487, V487, V490, V488, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, 0x0, 0x0, V483, V487, V487, V490, V488, S2, S1, S0]

================================

Block 0x67e
[0x67e:0x693]
---
Predecessors: [0x675]
Successors: [0x675]
---
0x67e DUP1
0x67f MLOAD
0x680 DUP3
0x681 MSTORE
0x682 PUSH1 0x1f
0x684 NOT
0x685 SWAP1
0x686 SWAP3
0x687 ADD
0x688 SWAP2
0x689 PUSH1 0x20
0x68b SWAP2
0x68c DUP3
0x68d ADD
0x68e SWAP2
0x68f ADD
0x690 PUSH2 0x675
0x693 JUMP
---
0x67f: V494 = M[S0]
0x681: M[S1] = V494
0x682: V495 = 0x1f
0x684: V496 = NOT 0x1f
0x687: V497 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x689: V498 = 0x20
0x68d: V499 = ADD 0x20 S1
0x68f: V500 = ADD 0x20 S0
0x690: V501 = 0x675
0x693: JUMP 0x675
---
Entry stack: [V11, 0x61, 0x0, 0x0, V483, V487, V487, V490, V488, S2, S1, S0]
Stack pops: 3
Stack additions: [V497, V499, V500]
Exit stack: [V11, 0x61, 0x0, 0x0, V483, V487, V487, V490, V488, V497, V499, V500]

================================

Block 0x694
[0x694:0x6cc]
---
Predecessors: [0x675]
Successors: [0x6cd]
---
0x694 JUMPDEST
0x695 MLOAD
0x696 DUP2
0x697 MLOAD
0x698 PUSH1 0x20
0x69a SWAP4
0x69b SWAP1
0x69c SWAP4
0x69d SUB
0x69e PUSH2 0x100
0x6a1 EXP
0x6a2 PUSH1 0x0
0x6a4 NOT
0x6a5 ADD
0x6a6 DUP1
0x6a7 NOT
0x6a8 SWAP1
0x6a9 SWAP2
0x6aa AND
0x6ab SWAP3
0x6ac AND
0x6ad SWAP2
0x6ae SWAP1
0x6af SWAP2
0x6b0 OR
0x6b1 SWAP1
0x6b2 MSTORE
0x6b3 PUSH1 0x40
0x6b5 MLOAD
0x6b6 SWAP3
0x6b7 ADD
0x6b8 DUP3
0x6b9 SWAP1
0x6ba SUB
0x6bb SWAP1
0x6bc SWAP2
0x6bd SHA3
0x6be SWAP5
0x6bf POP
0x6c0 PUSH1 0x64
0x6c2 SWAP3
0x6c3 POP
0x6c4 DUP5
0x6c5 SWAP2
0x6c6 POP
0x6c7 PUSH2 0x6cd
0x6ca SWAP1
0x6cb POP
0x6cc JUMP
---
0x694: JUMPDEST 
0x695: V502 = M[S0]
0x697: V503 = M[S1]
0x698: V504 = 0x20
0x69d: V505 = SUB 0x20 S2
0x69e: V506 = 0x100
0x6a1: V507 = EXP 0x100 V505
0x6a2: V508 = 0x0
0x6a4: V509 = NOT 0x0
0x6a5: V510 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V507
0x6a7: V511 = NOT V510
0x6aa: V512 = AND V502 V511
0x6ac: V513 = AND V503 V510
0x6b0: V514 = OR V513 V512
0x6b2: M[S1] = V514
0x6b3: V515 = 0x40
0x6b5: V516 = M[0x40]
0x6b7: V517 = ADD V487 V488
0x6ba: V518 = SUB V517 V516
0x6bd: V519 = SHA3 V516 V518
0x6c0: V520 = 0x64
0x6c7: V521 = 0x6cd
0x6cc: JUMP 0x6cd
---
Entry stack: [V11, 0x61, 0x0, 0x0, V483, V487, V487, V490, V488, S2, S1, S0]
Stack pops: 10
Stack additions: [V519, S8, 0x64, V519]
Exit stack: [V11, 0x61, V519, 0x0, 0x64, V519]

================================

Block 0x6cd
[0x6cd:0x6dc]
---
Predecessors: [0x694]
Successors: [0x6dd, 0x6e1]
---
0x6cd JUMPDEST
0x6ce MOD
0x6cf PUSH1 0x1
0x6d1 ADD
0x6d2 SWAP1
0x6d3 POP
0x6d4 PUSH1 0x5a
0x6d6 DUP2
0x6d7 GT
0x6d8 ISZERO
0x6d9 PUSH2 0x6e1
0x6dc JUMPI
---
0x6cd: JUMPDEST 
0x6ce: V522 = MOD V519 0x64
0x6cf: V523 = 0x1
0x6d1: V524 = ADD 0x1 V522
0x6d4: V525 = 0x5a
0x6d7: V526 = GT V524 0x5a
0x6d8: V527 = ISZERO V526
0x6d9: V528 = 0x6e1
0x6dc: JUMPI 0x6e1 V527
---
Entry stack: [V11, 0x61, V519, 0x0, 0x64, V519]
Stack pops: 3
Stack additions: [V524]
Exit stack: [V11, 0x61, V519, V524]

================================

Block 0x6dd
[0x6dd:0x6e0]
---
Predecessors: [0x6cd]
Successors: []
---
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 REVERT
---
0x6dd: V529 = 0x0
0x6e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V519, V524]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V519, V524]

================================

Block 0x6e1
[0x6e1:0x6ea]
---
Predecessors: [0x6cd]
Successors: [0x6eb, 0x6ee]
---
0x6e1 JUMPDEST
0x6e2 PUSH1 0x6
0x6e4 DUP2
0x6e5 LT
0x6e6 ISZERO
0x6e7 PUSH2 0x6ee
0x6ea JUMPI
---
0x6e1: JUMPDEST 
0x6e2: V530 = 0x6
0x6e5: V531 = LT V524 0x6
0x6e6: V532 = ISZERO V531
0x6e7: V533 = 0x6ee
0x6ea: JUMPI 0x6ee V532
---
Entry stack: [V11, 0x61, V519, V524]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V519, V524]

================================

Block 0x6eb
[0x6eb:0x6ed]
---
Predecessors: [0x6e1]
Successors: [0x6ee]
---
0x6eb POP
0x6ec PUSH1 0x6
---
0x6ec: V534 = 0x6
---
Entry stack: [V11, 0x61, V519, V524]
Stack pops: 1
Stack additions: [0x6]
Exit stack: [V11, 0x61, V519, 0x6]

================================

Block 0x6ee
[0x6ee:0x77c]
---
Predecessors: [0x6e1, 0x6eb]
Successors: [0x77d, 0x781]
---
0x6ee JUMPDEST
0x6ef PUSH1 0x0
0x6f1 DUP1
0x6f2 SLOAD
0x6f3 PUSH1 0x3
0x6f5 SLOAD
0x6f6 PUSH1 0x4
0x6f8 DUP1
0x6f9 SLOAD
0x6fa PUSH1 0x5
0x6fc SLOAD
0x6fd PUSH1 0x6
0x6ff SLOAD
0x700 PUSH1 0x40
0x702 DUP1
0x703 MLOAD
0x704 PUSH32 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x725 DUP2
0x726 MSTORE
0x727 SWAP5
0x728 DUP6
0x729 ADD
0x72a DUP10
0x72b SWAP1
0x72c MSTORE
0x72d PUSH1 0x64
0x72f PUSH1 0x24
0x731 DUP7
0x732 ADD
0x733 DUP2
0x734 SWAP1
0x735 MSTORE
0x736 PUSH1 0x44
0x738 DUP7
0x739 ADD
0x73a SWAP7
0x73b SWAP1
0x73c SWAP7
0x73d MSTORE
0x73e SWAP5
0x73f DUP5
0x740 ADD
0x741 SWAP3
0x742 SWAP1
0x743 SWAP3
0x744 MSTORE
0x745 PUSH1 0x84
0x747 DUP4
0x748 ADD
0x749 MSTORE
0x74a PUSH1 0xa4
0x74c DUP3
0x74d ADD
0x74e MSTORE
0x74f SWAP1
0x750 MLOAD
0x751 PUSH1 0x1
0x753 PUSH1 0xa0
0x755 PUSH1 0x2
0x757 EXP
0x758 SUB
0x759 SWAP1
0x75a SWAP3
0x75b AND
0x75c SWAP3
0x75d PUSH4 0x5e83b463
0x762 SWAP3
0x763 CALLVALUE
0x764 SWAP3
0x765 PUSH1 0xc4
0x767 DUP1
0x768 DUP3
0x769 ADD
0x76a SWAP4
0x76b SWAP3
0x76c SWAP2
0x76d DUP3
0x76e SWAP1
0x76f SUB
0x770 ADD
0x771 DUP2
0x772 DUP6
0x773 DUP9
0x774 DUP1
0x775 EXTCODESIZE
0x776 ISZERO
0x777 DUP1
0x778 ISZERO
0x779 PUSH2 0x781
0x77c JUMPI
---
0x6ee: JUMPDEST 
0x6ef: V535 = 0x0
0x6f2: V536 = S[0x0]
0x6f3: V537 = 0x3
0x6f5: V538 = S[0x3]
0x6f6: V539 = 0x4
0x6f9: V540 = S[0x4]
0x6fa: V541 = 0x5
0x6fc: V542 = S[0x5]
0x6fd: V543 = 0x6
0x6ff: V544 = S[0x6]
0x700: V545 = 0x40
0x703: V546 = M[0x40]
0x704: V547 = 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x726: M[V546] = 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x729: V548 = ADD V546 0x4
0x72c: M[V548] = S0
0x72d: V549 = 0x64
0x72f: V550 = 0x24
0x732: V551 = ADD V546 0x24
0x735: M[V551] = 0x64
0x736: V552 = 0x44
0x739: V553 = ADD V546 0x44
0x73d: M[V553] = V538
0x740: V554 = ADD V546 0x64
0x744: M[V554] = V540
0x745: V555 = 0x84
0x748: V556 = ADD V546 0x84
0x749: M[V556] = V542
0x74a: V557 = 0xa4
0x74d: V558 = ADD V546 0xa4
0x74e: M[V558] = V544
0x750: V559 = M[0x40]
0x751: V560 = 0x1
0x753: V561 = 0xa0
0x755: V562 = 0x2
0x757: V563 = EXP 0x2 0xa0
0x758: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75b: V565 = AND V536 0xffffffffffffffffffffffffffffffffffffffff
0x75d: V566 = 0x5e83b463
0x763: V567 = CALLVALUE
0x765: V568 = 0xc4
0x769: V569 = ADD V546 0xc4
0x76f: V570 = SUB V546 V559
0x770: V571 = ADD V570 0xc4
0x775: V572 = EXTCODESIZE V565
0x776: V573 = ISZERO V572
0x778: V574 = ISZERO V573
0x779: V575 = 0x781
0x77c: JUMPI 0x781 V574
---
Entry stack: [V11, 0x61, V519, S0]
Stack pops: 1
Stack additions: [S0, V565, 0x5e83b463, V567, V569, 0x0, V559, V571, V559, V567, V565, V573]
Exit stack: [V11, 0x61, V519, S0, V565, 0x5e83b463, V567, V569, 0x0, V559, V571, V559, V567, V565, V573]

================================

Block 0x77d
[0x77d:0x780]
---
Predecessors: [0x6ee]
Successors: []
---
0x77d PUSH1 0x0
0x77f DUP1
0x780 REVERT
---
0x77d: V576 = 0x0
0x780: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V519, S11, V565, 0x5e83b463, V567, V569, 0x0, V559, V571, V559, V567, V565, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V519, S11, V565, 0x5e83b463, V567, V569, 0x0, V559, V571, V559, V567, V565, V573]

================================

Block 0x781
[0x781:0x78b]
---
Predecessors: [0x6ee]
Successors: [0x78c, 0x795]
---
0x781 JUMPDEST
0x782 POP
0x783 GAS
0x784 CALL
0x785 ISZERO
0x786 DUP1
0x787 ISZERO
0x788 PUSH2 0x795
0x78b JUMPI
---
0x781: JUMPDEST 
0x783: V577 = GAS
0x784: V578 = CALL V577 V565 V567 V559 V571 V559 0x0
0x785: V579 = ISZERO V578
0x787: V580 = ISZERO V579
0x788: V581 = 0x795
0x78b: JUMPI 0x795 V580
---
Entry stack: [V11, 0x61, V519, S11, V565, 0x5e83b463, V567, V569, 0x0, V559, V571, V559, V567, V565, V573]
Stack pops: 7
Stack additions: [V579]
Exit stack: [V11, 0x61, V519, S11, V565, 0x5e83b463, V567, V569, V579]

================================

Block 0x78c
[0x78c:0x794]
---
Predecessors: [0x781]
Successors: []
---
0x78c RETURNDATASIZE
0x78d PUSH1 0x0
0x78f DUP1
0x790 RETURNDATACOPY
0x791 RETURNDATASIZE
0x792 PUSH1 0x0
0x794 REVERT
---
0x78c: V582 = RETURNDATASIZE
0x78d: V583 = 0x0
0x790: RETURNDATACOPY 0x0 0x0 V582
0x791: V584 = RETURNDATASIZE
0x792: V585 = 0x0
0x794: REVERT 0x0 V584
---
Entry stack: [V11, 0x61, V519, S5, V565, 0x5e83b463, V567, V569, V579]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V519, S5, V565, 0x5e83b463, V567, V569, V579]

================================

Block 0x795
[0x795:0x79d]
---
Predecessors: [0x781]
Successors: [0x61]
---
0x795 JUMPDEST
0x796 POP
0x797 POP
0x798 POP
0x799 POP
0x79a POP
0x79b POP
0x79c POP
0x79d JUMP
---
0x795: JUMPDEST 
0x79d: JUMP 0x61
---
Entry stack: [V11, 0x61, V519, S5, V565, 0x5e83b463, V567, V569, V579]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x79e
[0x79e:0x7c6]
---
Predecessors: [0x14d]
Successors: [0x164]
---
0x79e JUMPDEST
0x79f PUSH1 0x40
0x7a1 MLOAD
0x7a2 PUSH1 0x1
0x7a4 PUSH1 0xa0
0x7a6 PUSH1 0x2
0x7a8 EXP
0x7a9 SUB
0x7aa DUP4
0x7ab AND
0x7ac SWAP1
0x7ad DUP3
0x7ae ISZERO
0x7af PUSH2 0x8fc
0x7b2 MUL
0x7b3 SWAP1
0x7b4 DUP4
0x7b5 SWAP1
0x7b6 PUSH1 0x0
0x7b8 DUP2
0x7b9 DUP2
0x7ba DUP2
0x7bb DUP6
0x7bc DUP9
0x7bd DUP9
0x7be CALL
0x7bf POP
0x7c0 POP
0x7c1 POP
0x7c2 POP
0x7c3 POP
0x7c4 POP
0x7c5 POP
0x7c6 JUMP
---
0x79e: JUMPDEST 
0x79f: V586 = 0x40
0x7a1: V587 = M[0x40]
0x7a2: V588 = 0x1
0x7a4: V589 = 0xa0
0x7a6: V590 = 0x2
0x7a8: V591 = EXP 0x2 0xa0
0x7a9: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ab: V593 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x7ae: V594 = ISZERO V106
0x7af: V595 = 0x8fc
0x7b2: V596 = MUL 0x8fc V594
0x7b6: V597 = 0x0
0x7be: V598 = CALL V596 V593 V106 V587 0x0 V587 0x0
0x7c6: JUMP 0x164
---
Entry stack: [V11, 0x61, 0x164, V104, V106]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x7c7
[0x7c7:0x7f2]
---
Predecessors: []
Successors: []
---
0x7c7 STOP
0x7c8 LOG1
0x7c9 PUSH6 0x627a7a723058
0x7d0 SHA3
0x7d1 MISSING 0xb0
0x7d2 MISSING 0xf9
0x7d3 MISSING 0xdb
0x7d4 GAS
0x7d5 SWAP9
0x7d6 SSTORE
0x7d7 EQ
0x7d8 ISZERO
0x7d9 NUMBER
0x7da MISSING 0x5f
0x7db MISSING 0x5e
0x7dc STOP
0x7dd MISSING 0xd9
0x7de MISSING 0xc7
0x7df PC
0x7e0 MISSING 0x5e
0x7e1 MISSING 0xc5
0x7e2 MISSING 0x49
0x7e3 MISSING 0xb0
0x7e4 MISSING 0xd4
0x7e5 MISSING 0x2c
0x7e6 SLT
0x7e7 MISSING 0x25
0x7e8 MISSING 0xb5
0x7e9 DUP1
0x7ea MISSING 0x2d
0x7eb XOR
0x7ec MISSING 0x49
0x7ed MISSING 0xab
0x7ee GAS
0x7ef CALLDATALOAD
0x7f0 MISSING 0x2f
0x7f1 STOP
0x7f2 MISSING 0x29
---
0x7c7: STOP 
0x7c8: LOG S0 S1 S2
0x7c9: V599 = 0x627a7a723058
0x7d0: V600 = SHA3 0x627a7a723058 S3
0x7d1: MISSING 0xb0
0x7d2: MISSING 0xf9
0x7d3: MISSING 0xdb
0x7d4: V601 = GAS
0x7d6: S[S8] = S0
0x7d7: V602 = EQ S1 S2
0x7d8: V603 = ISZERO V602
0x7d9: V604 = NUMBER
0x7da: MISSING 0x5f
0x7db: MISSING 0x5e
0x7dc: STOP 
0x7dd: MISSING 0xd9
0x7de: MISSING 0xc7
0x7df: V605 = PC
0x7e0: MISSING 0x5e
0x7e1: MISSING 0xc5
0x7e2: MISSING 0x49
0x7e3: MISSING 0xb0
0x7e4: MISSING 0xd4
0x7e5: MISSING 0x2c
0x7e6: V606 = SLT S0 S1
0x7e7: MISSING 0x25
0x7e8: MISSING 0xb5
0x7ea: MISSING 0x2d
0x7eb: V607 = XOR S0 S1
0x7ec: MISSING 0x49
0x7ed: MISSING 0xab
0x7ee: V608 = GAS
0x7ef: V609 = CALLDATALOAD V608
0x7f0: MISSING 0x2f
0x7f1: STOP 
0x7f2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V600, V604, V603, S3, S4, S5, S6, S7, V601, V605, V606, S0, S0, V607, V609]
Exit stack: []

================================

Function 0:
Public function signature: 0x24600fc3
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x6b, 0x6f, 0xc5, 0xd8, 0x14d, 0x164, 0x79e

Function 1:
Public function signature: 0x30ce4895
Entry block: 0x78
Exit block: 0x61
Body: 0x61, 0x78, 0x80, 0x84, 0x166, 0x17f, 0x1f4, 0x269, 0x272, 0x288, 0x2c1, 0x2c5, 0x2d0, 0x31f, 0x387, 0x390, 0x3a6, 0x420, 0x429, 0x44b, 0x49a, 0x4cb, 0x4cc, 0x540, 0x549, 0x558, 0x579, 0x57d, 0x588, 0x591

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xa8
Exit block: 0x627
Body: 0xa8, 0xb0, 0xb4, 0x59f, 0x5b2, 0x627

Function 3:
Public function signature: 0xdd365b8b
Entry block: 0xbd
Exit block: 0x61
Body: 0x61, 0xbd, 0x635, 0x675, 0x67e, 0x694, 0x6cd, 0x6dd, 0x6e1, 0x6eb, 0x6ee, 0x77d, 0x781, 0x78c, 0x795

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

