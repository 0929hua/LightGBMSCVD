Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x104]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x104
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x104
0xa: JUMPI 0x104 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x298]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0xd392cd9
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x298
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xd392cd9
0x39: V12 = EQ V10 0xd392cd9
0x3a: V13 = 0x298
0x3d: JUMPI 0x298 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x2be]
---
0x3e DUP1
0x3f PUSH4 0x14807045
0x44 EQ
0x45 PUSH2 0x2be
0x48 JUMPI
---
0x3f: V14 = 0x14807045
0x44: V15 = EQ 0x14807045 V10
0x45: V16 = 0x2be
0x48: JUMPI 0x2be V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x2d8]
---
0x49 DUP1
0x4a PUSH4 0x27e235e3
0x4f EQ
0x50 PUSH2 0x2d8
0x53 JUMPI
---
0x4a: V17 = 0x27e235e3
0x4f: V18 = EQ 0x27e235e3 V10
0x50: V19 = 0x2d8
0x53: JUMPI 0x2d8 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x309]
---
0x54 DUP1
0x55 PUSH4 0x2f8c98c2
0x5a EQ
0x5b PUSH2 0x309
0x5e JUMPI
---
0x55: V20 = 0x2f8c98c2
0x5a: V21 = EQ 0x2f8c98c2 V10
0x5b: V22 = 0x309
0x5e: JUMPI 0x309 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x323]
---
0x5f DUP1
0x60 PUSH4 0x376ff7f0
0x65 EQ
0x66 PUSH2 0x323
0x69 JUMPI
---
0x60: V23 = 0x376ff7f0
0x65: V24 = EQ 0x376ff7f0 V10
0x66: V25 = 0x323
0x69: JUMPI 0x323 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x34a]
---
0x6a DUP1
0x6b PUSH4 0x42317bbc
0x70 EQ
0x71 PUSH2 0x34a
0x74 JUMPI
---
0x6b: V26 = 0x42317bbc
0x70: V27 = EQ 0x42317bbc V10
0x71: V28 = 0x34a
0x74: JUMPI 0x34a V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x364]
---
0x75 DUP1
0x76 PUSH4 0x4ccbf17b
0x7b EQ
0x7c PUSH2 0x364
0x7f JUMPI
---
0x76: V29 = 0x4ccbf17b
0x7b: V30 = EQ 0x4ccbf17b V10
0x7c: V31 = 0x364
0x7f: JUMPI 0x364 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x393]
---
0x80 DUP1
0x81 PUSH4 0x51327a6a
0x86 EQ
0x87 PUSH2 0x393
0x8a JUMPI
---
0x81: V32 = 0x51327a6a
0x86: V33 = EQ 0x51327a6a V10
0x87: V34 = 0x393
0x8a: JUMPI 0x393 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x3a8]
---
0x8b DUP1
0x8c PUSH4 0x590e1ae3
0x91 EQ
0x92 PUSH2 0x3a8
0x95 JUMPI
---
0x8c: V35 = 0x590e1ae3
0x91: V36 = EQ 0x590e1ae3 V10
0x92: V37 = 0x3a8
0x95: JUMPI 0x3a8 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x3bd]
---
0x96 DUP1
0x97 PUSH4 0x8d4e4083
0x9c EQ
0x9d PUSH2 0x3bd
0xa0 JUMPI
---
0x97: V38 = 0x8d4e4083
0x9c: V39 = EQ 0x8d4e4083 V10
0x9d: V40 = 0x3bd
0xa0: JUMPI 0x3bd V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x3e4]
---
0xa1 DUP1
0xa2 PUSH4 0x8da5cb5b
0xa7 EQ
0xa8 PUSH2 0x3e4
0xab JUMPI
---
0xa2: V41 = 0x8da5cb5b
0xa7: V42 = EQ 0x8da5cb5b V10
0xa8: V43 = 0x3e4
0xab: JUMPI 0x3e4 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x413]
---
0xac DUP1
0xad PUSH4 0x9b19251a
0xb2 EQ
0xb3 PUSH2 0x413
0xb6 JUMPI
---
0xad: V44 = 0x9b19251a
0xb2: V45 = EQ 0x9b19251a V10
0xb3: V46 = 0x413
0xb6: JUMPI 0x413 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x446]
---
0xb7 DUP1
0xb8 PUSH4 0xa6f9dae1
0xbd EQ
0xbe PUSH2 0x446
0xc1 JUMPI
---
0xb8: V47 = 0xa6f9dae1
0xbd: V48 = EQ 0xa6f9dae1 V10
0xbe: V49 = 0x446
0xc1: JUMPI 0x446 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x467]
---
0xc2 DUP1
0xc3 PUSH4 0xbb1a5aad
0xc8 EQ
0xc9 PUSH2 0x467
0xcc JUMPI
---
0xc3: V50 = 0xbb1a5aad
0xc8: V51 = EQ 0xbb1a5aad V10
0xc9: V52 = 0x467
0xcc: JUMPI 0x467 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x481]
---
0xcd DUP1
0xce PUSH4 0xbb8e8f46
0xd3 EQ
0xd4 PUSH2 0x481
0xd7 JUMPI
---
0xce: V53 = 0xbb8e8f46
0xd3: V54 = EQ 0xbb8e8f46 V10
0xd4: V55 = 0x481
0xd7: JUMPI 0x481 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x4a8]
---
0xd8 DUP1
0xd9 PUSH4 0xcb11526d
0xde EQ
0xdf PUSH2 0x4a8
0xe2 JUMPI
---
0xd9: V56 = 0xcb11526d
0xde: V57 = EQ 0xcb11526d V10
0xdf: V58 = 0x4a8
0xe2: JUMPI 0x4a8 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x4cf]
---
0xe3 DUP1
0xe4 PUSH4 0xd7e25c36
0xe9 EQ
0xea PUSH2 0x4cf
0xed JUMPI
---
0xe4: V59 = 0xd7e25c36
0xe9: V60 = EQ 0xd7e25c36 V10
0xea: V61 = 0x4cf
0xed: JUMPI 0x4cf V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x4f6]
---
0xee DUP1
0xef PUSH4 0xe8b5e51f
0xf4 EQ
0xf5 PUSH2 0x4f6
0xf8 JUMPI
---
0xef: V62 = 0xe8b5e51f
0xf4: V63 = EQ 0xe8b5e51f V10
0xf5: V64 = 0x4f6
0xf8: JUMPI 0x4f6 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x500]
---
0xf9 DUP1
0xfa PUSH4 0xf52343f4
0xff EQ
0x100 PUSH2 0x500
0x103 JUMPI
---
0xfa: V65 = 0xf52343f4
0xff: V66 = EQ 0xf52343f4 V10
0x100: V67 = 0x500
0x103: JUMPI 0x500 V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x104]
---
Predecessors: [0x0, 0xf9]
Successors: [0x105]
---
0x104 JUMPDEST
---
0x104: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x105
[0x105:0x11b]
---
Predecessors: [0x104]
Successors: [0x11c, 0x120]
---
0x105 JUMPDEST
0x106 PUSH1 0x3
0x108 SLOAD
0x109 PUSH1 0x0
0x10b SWAP1
0x10c DUP2
0x10d SWAP1
0x10e PUSH2 0x100
0x111 SWAP1
0x112 DIV
0x113 PUSH1 0xff
0x115 AND
0x116 ISZERO
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x105: JUMPDEST 
0x106: V68 = 0x3
0x108: V69 = S[0x3]
0x109: V70 = 0x0
0x10e: V71 = 0x100
0x112: V72 = DIV V69 0x100
0x113: V73 = 0xff
0x115: V74 = AND 0xff V72
0x116: V75 = ISZERO V74
0x117: V76 = ISZERO V75
0x118: V77 = 0x120
0x11b: JUMPI 0x120 V76
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x105]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V78 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x120
[0x120:0x132]
---
Predecessors: [0x105]
Successors: [0x133, 0x137]
---
0x120 JUMPDEST
0x121 PUSH1 0x3
0x123 SLOAD
0x124 PUSH4 0x1000000
0x129 SWAP1
0x12a DIV
0x12b PUSH1 0xff
0x12d AND
0x12e ISZERO
0x12f PUSH2 0x137
0x132 JUMPI
---
0x120: JUMPDEST 
0x121: V79 = 0x3
0x123: V80 = S[0x3]
0x124: V81 = 0x1000000
0x12a: V82 = DIV V80 0x1000000
0x12b: V83 = 0xff
0x12d: V84 = AND 0xff V82
0x12e: V85 = ISZERO V84
0x12f: V86 = 0x137
0x132: JUMPI 0x137 V85
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x133
[0x133:0x136]
---
Predecessors: [0x120]
Successors: []
---
0x133 PUSH1 0x0
0x135 DUP1
0x136 REVERT
---
0x133: V87 = 0x0
0x136: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x137
[0x137:0x155]
---
Predecessors: [0x120]
Successors: [0x156, 0x15a]
---
0x137 JUMPDEST
0x138 PUSH1 0x1
0x13a PUSH1 0xa0
0x13c PUSH1 0x2
0x13e EXP
0x13f SUB
0x140 ADDRESS
0x141 AND
0x142 BALANCE
0x143 SWAP2
0x144 POP
0x145 PUSH9 0xa2a15d09519be00000
0x14f DUP3
0x150 GT
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x137: JUMPDEST 
0x138: V88 = 0x1
0x13a: V89 = 0xa0
0x13c: V90 = 0x2
0x13e: V91 = EXP 0x2 0xa0
0x13f: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x140: V93 = ADDRESS
0x141: V94 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x142: V95 = BALANCE V94
0x145: V96 = 0xa2a15d09519be00000
0x150: V97 = GT V95 0xa2a15d09519be00000
0x151: V98 = ISZERO V97
0x152: V99 = 0x15a
0x155: JUMPI 0x15a V98
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 2
Stack additions: [V95, S0]
Exit stack: [V10, V95, 0x0]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x137]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V100 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V10, V95, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V95, 0x0]

================================

Block 0x15a
[0x15a:0x165]
---
Predecessors: [0x137]
Successors: [0x166, 0x16a]
---
0x15a JUMPDEST
0x15b PUSH1 0x3
0x15d SLOAD
0x15e PUSH1 0xff
0x160 AND
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x15a: JUMPDEST 
0x15b: V101 = 0x3
0x15d: V102 = S[0x3]
0x15e: V103 = 0xff
0x160: V104 = AND 0xff V102
0x161: V105 = ISZERO V104
0x162: V106 = 0x16a
0x165: JUMPI 0x16a V105
---
Entry stack: [V10, V95, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V95, 0x0]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x15a]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V107 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V10, V95, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V95, 0x0]

================================

Block 0x16a
[0x16a:0x18e]
---
Predecessors: [0x15a]
Successors: [0x18f, 0x193]
---
0x16a JUMPDEST
0x16b POP
0x16c CALLER
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 DUP2
0x176 AND
0x177 PUSH1 0x0
0x179 SWAP1
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x4
0x17e PUSH1 0x20
0x180 MSTORE
0x181 PUSH1 0x40
0x183 SWAP1
0x184 SHA3
0x185 SLOAD
0x186 PUSH1 0xff
0x188 AND
0x189 ISZERO
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x16a: JUMPDEST 
0x16c: V108 = CALLER
0x16d: V109 = 0x1
0x16f: V110 = 0xa0
0x171: V111 = 0x2
0x173: V112 = EXP 0x2 0xa0
0x174: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V114 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x177: V115 = 0x0
0x17b: M[0x0] = V114
0x17c: V116 = 0x4
0x17e: V117 = 0x20
0x180: M[0x20] = 0x4
0x181: V118 = 0x40
0x184: V119 = SHA3 0x0 0x40
0x185: V120 = S[V119]
0x186: V121 = 0xff
0x188: V122 = AND 0xff V120
0x189: V123 = ISZERO V122
0x18a: V124 = ISZERO V123
0x18b: V125 = 0x193
0x18e: JUMPI 0x193 V124
---
Entry stack: [V10, V95, 0x0]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V10, V95, V108]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x16a]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V126 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V10, V95, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V95, V108]

================================

Block 0x193
[0x193:0x1c6]
---
Predecessors: [0x16a]
Successors: [0x51a]
---
0x193 JUMPDEST
0x194 PUSH1 0x1
0x196 PUSH1 0xa0
0x198 PUSH1 0x2
0x19a EXP
0x19b SUB
0x19c DUP2
0x19d AND
0x19e PUSH1 0x0
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x2
0x1a5 PUSH1 0x20
0x1a7 MSTORE
0x1a8 PUSH1 0x40
0x1aa SWAP1
0x1ab SHA3
0x1ac SLOAD
0x1ad PUSH9 0x1b1ae4d6e2ef500000
0x1b7 SWAP1
0x1b8 PUSH2 0x1c7
0x1bb SWAP1
0x1bc CALLVALUE
0x1bd PUSH4 0xffffffff
0x1c2 PUSH2 0x51a
0x1c5 AND
0x1c6 JUMP
---
0x193: JUMPDEST 
0x194: V127 = 0x1
0x196: V128 = 0xa0
0x198: V129 = 0x2
0x19a: V130 = EXP 0x2 0xa0
0x19b: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19d: V132 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V133 = 0x0
0x1a2: M[0x0] = V132
0x1a3: V134 = 0x2
0x1a5: V135 = 0x20
0x1a7: M[0x20] = 0x2
0x1a8: V136 = 0x40
0x1ab: V137 = SHA3 0x0 0x40
0x1ac: V138 = S[V137]
0x1ad: V139 = 0x1b1ae4d6e2ef500000
0x1b8: V140 = 0x1c7
0x1bc: V141 = CALLVALUE
0x1bd: V142 = 0xffffffff
0x1c2: V143 = 0x51a
0x1c5: V144 = AND 0x51a 0xffffffff
0x1c6: JUMP 0x51a
---
Entry stack: [V10, V95, V108]
Stack pops: 1
Stack additions: [S0, 0x1b1ae4d6e2ef500000, 0x1c7, V138, V141]
Exit stack: [V10, V95, V108, 0x1b1ae4d6e2ef500000, 0x1c7, V138, V141]

================================

Block 0x1c7
[0x1c7:0x1cd]
---
Predecessors: [0x52d]
Successors: [0x1ce, 0x1d2]
---
0x1c7 JUMPDEST
0x1c8 GT
0x1c9 ISZERO
0x1ca PUSH2 0x1d2
0x1cd JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V145 = GT S0 S1
0x1c9: V146 = ISZERO V145
0x1ca: V147 = 0x1d2
0x1cd: JUMPI 0x1d2 V146
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S4, S3, S2]

================================

Block 0x1ce
[0x1ce:0x1d1]
---
Predecessors: [0x1c7]
Successors: []
---
0x1ce PUSH1 0x0
0x1d0 DUP1
0x1d1 REVERT
---
0x1ce: V148 = 0x0
0x1d1: REVERT 0x0 0x0
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x1d2
[0x1d2:0x1e3]
---
Predecessors: [0x1c7]
Successors: [0x1e4, 0x1e8]
---
0x1d2 JUMPDEST
0x1d3 PUSH9 0x1b1ae4d6e2ef500000
0x1dd CALLVALUE
0x1de GT
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V149 = 0x1b1ae4d6e2ef500000
0x1dd: V150 = CALLVALUE
0x1de: V151 = GT V150 0x1b1ae4d6e2ef500000
0x1df: V152 = ISZERO V151
0x1e0: V153 = 0x1e8
0x1e3: JUMPI 0x1e8 V152
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1d2]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V154 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x1e8
[0x1e8:0x210]
---
Predecessors: [0x1d2]
Successors: [0x51a]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x1
0x1eb PUSH1 0xa0
0x1ed PUSH1 0x2
0x1ef EXP
0x1f0 SUB
0x1f1 DUP2
0x1f2 AND
0x1f3 PUSH1 0x0
0x1f5 SWAP1
0x1f6 DUP2
0x1f7 MSTORE
0x1f8 PUSH1 0x2
0x1fa PUSH1 0x20
0x1fc MSTORE
0x1fd PUSH1 0x40
0x1ff SWAP1
0x200 SHA3
0x201 SLOAD
0x202 PUSH2 0x211
0x205 SWAP1
0x206 CALLVALUE
0x207 PUSH4 0xffffffff
0x20c PUSH2 0x51a
0x20f AND
0x210 JUMP
---
0x1e8: JUMPDEST 
0x1e9: V155 = 0x1
0x1eb: V156 = 0xa0
0x1ed: V157 = 0x2
0x1ef: V158 = EXP 0x2 0xa0
0x1f0: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V160 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V161 = 0x0
0x1f7: M[0x0] = V160
0x1f8: V162 = 0x2
0x1fa: V163 = 0x20
0x1fc: M[0x20] = 0x2
0x1fd: V164 = 0x40
0x200: V165 = SHA3 0x0 0x40
0x201: V166 = S[V165]
0x202: V167 = 0x211
0x206: V168 = CALLVALUE
0x207: V169 = 0xffffffff
0x20c: V170 = 0x51a
0x20f: V171 = AND 0x51a 0xffffffff
0x210: JUMP 0x51a
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x211, V166, V168]
Exit stack: [V10, S2, S1, S0, 0x211, V166, V168]

================================

Block 0x211
[0x211:0x23b]
---
Predecessors: [0x52d]
Successors: [0x23c, 0x24f]
---
0x211 JUMPDEST
0x212 PUSH1 0x1
0x214 PUSH1 0xa0
0x216 PUSH1 0x2
0x218 EXP
0x219 SUB
0x21a DUP3
0x21b AND
0x21c PUSH1 0x0
0x21e SWAP1
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x2
0x223 PUSH1 0x20
0x225 MSTORE
0x226 PUSH1 0x40
0x228 SWAP1
0x229 SHA3
0x22a SSTORE
0x22b PUSH9 0xa2a15d09519be00000
0x235 DUP3
0x236 EQ
0x237 ISZERO
0x238 PUSH2 0x24f
0x23b JUMPI
---
0x211: JUMPDEST 
0x212: V172 = 0x1
0x214: V173 = 0xa0
0x216: V174 = 0x2
0x218: V175 = EXP 0x2 0xa0
0x219: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21b: V177 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V178 = 0x0
0x220: M[0x0] = V177
0x221: V179 = 0x2
0x223: V180 = 0x20
0x225: M[0x20] = 0x2
0x226: V181 = 0x40
0x229: V182 = SHA3 0x0 0x40
0x22a: S[V182] = S0
0x22b: V183 = 0xa2a15d09519be00000
0x236: V184 = EQ S2 0xa2a15d09519be00000
0x237: V185 = ISZERO V184
0x238: V186 = 0x24f
0x23b: JUMPI 0x24f V185
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V10, S4, S3, S2, S1]

================================

Block 0x23c
[0x23c:0x24e]
---
Predecessors: [0x211]
Successors: [0x24f]
---
0x23c PUSH1 0x3
0x23e DUP1
0x23f SLOAD
0x240 PUSH4 0xff000000
0x245 NOT
0x246 AND
0x247 PUSH4 0x1000000
0x24c OR
0x24d SWAP1
0x24e SSTORE
---
0x23c: V187 = 0x3
0x23f: V188 = S[0x3]
0x240: V189 = 0xff000000
0x245: V190 = NOT 0xff000000
0x246: V191 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff V188
0x247: V192 = 0x1000000
0x24c: V193 = OR 0x1000000 V191
0x24e: S[0x3] = V193
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0x24f
[0x24f:0x293]
---
Predecessors: [0x211, 0x23c]
Successors: [0x294]
---
0x24f JUMPDEST
0x250 PUSH32 0xc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3
0x271 DUP2
0x272 CALLVALUE
0x273 PUSH1 0x40
0x275 MLOAD
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e SWAP1
0x27f SWAP3
0x280 AND
0x281 DUP3
0x282 MSTORE
0x283 PUSH1 0x20
0x285 DUP3
0x286 ADD
0x287 MSTORE
0x288 PUSH1 0x40
0x28a SWAP1
0x28b DUP2
0x28c ADD
0x28d SWAP1
0x28e MLOAD
0x28f DUP1
0x290 SWAP2
0x291 SUB
0x292 SWAP1
0x293 LOG1
---
0x24f: JUMPDEST 
0x250: V194 = 0xc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3
0x272: V195 = CALLVALUE
0x273: V196 = 0x40
0x275: V197 = M[0x40]
0x276: V198 = 0x1
0x278: V199 = 0xa0
0x27a: V200 = 0x2
0x27c: V201 = EXP 0x2 0xa0
0x27d: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x280: V203 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x282: M[V197] = V203
0x283: V204 = 0x20
0x286: V205 = ADD V197 0x20
0x287: M[V205] = V195
0x288: V206 = 0x40
0x28c: V207 = ADD 0x40 V197
0x28e: V208 = M[0x40]
0x291: V209 = SUB V207 V208
0x293: LOG V208 V209 0xc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x24f]
Successors: []
---
0x294 JUMPDEST
0x295 POP
0x296 POP
0x297 STOP
---
0x294: JUMPDEST 
0x297: STOP 
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S3, S2]

================================

Block 0x298
[0x298:0x29e]
---
Predecessors: [0xb]
Successors: [0x29f, 0x2a3]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a ISZERO
0x29b PUSH2 0x2a3
0x29e JUMPI
---
0x298: JUMPDEST 
0x299: V210 = CALLVALUE
0x29a: V211 = ISZERO V210
0x29b: V212 = 0x2a3
0x29e: JUMPI 0x2a3 V211
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x298]
Successors: []
---
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 REVERT
---
0x29f: V213 = 0x0
0x2a2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a3
[0x2a3:0x2bb]
---
Predecessors: [0x298]
Successors: [0x534]
---
0x2a3 JUMPDEST
0x2a4 PUSH2 0x2bc
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af PUSH1 0x4
0x2b1 CALLDATALOAD
0x2b2 AND
0x2b3 PUSH1 0x24
0x2b5 CALLDATALOAD
0x2b6 ISZERO
0x2b7 ISZERO
0x2b8 PUSH2 0x534
0x2bb JUMP
---
0x2a3: JUMPDEST 
0x2a4: V214 = 0x2bc
0x2a7: V215 = 0x1
0x2a9: V216 = 0xa0
0x2ab: V217 = 0x2
0x2ad: V218 = EXP 0x2 0xa0
0x2ae: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V220 = 0x4
0x2b1: V221 = CALLDATALOAD 0x4
0x2b2: V222 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V223 = 0x24
0x2b5: V224 = CALLDATALOAD 0x24
0x2b6: V225 = ISZERO V224
0x2b7: V226 = ISZERO V225
0x2b8: V227 = 0x534
0x2bb: JUMP 0x534
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc, V222, V226]
Exit stack: [V10, 0x2bc, V222, V226]

================================

Block 0x2bc
[0x2bc:0x2bd]
---
Predecessors: [0x5be, 0x5f6, 0x636, 0x67a, 0x762, 0x858, 0x909, 0x942, 0xafb, 0xb2f]
Successors: []
---
0x2bc JUMPDEST
0x2bd STOP
---
0x2bc: JUMPDEST 
0x2bd: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2be
[0x2be:0x2c4]
---
Predecessors: [0x3e]
Successors: [0x2c5, 0x2c9]
---
0x2be JUMPDEST
0x2bf CALLVALUE
0x2c0 ISZERO
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2be: JUMPDEST 
0x2bf: V228 = CALLVALUE
0x2c0: V229 = ISZERO V228
0x2c1: V230 = 0x2c9
0x2c4: JUMPI 0x2c9 V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2be]
Successors: []
---
0x2c5 PUSH1 0x0
0x2c7 DUP1
0x2c8 REVERT
---
0x2c5: V231 = 0x0
0x2c8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c9
[0x2c9:0x2d5]
---
Predecessors: [0x2be]
Successors: [0x5c2]
---
0x2c9 JUMPDEST
0x2ca PUSH2 0x2bc
0x2cd PUSH1 0x4
0x2cf CALLDATALOAD
0x2d0 ISZERO
0x2d1 ISZERO
0x2d2 PUSH2 0x5c2
0x2d5 JUMP
---
0x2c9: JUMPDEST 
0x2ca: V232 = 0x2bc
0x2cd: V233 = 0x4
0x2cf: V234 = CALLDATALOAD 0x4
0x2d0: V235 = ISZERO V234
0x2d1: V236 = ISZERO V235
0x2d2: V237 = 0x5c2
0x2d5: JUMP 0x5c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc, V236]
Exit stack: [V10, 0x2bc, V236]

================================

Block 0x2d6
[0x2d6:0x2d7]
---
Predecessors: []
Successors: []
---
0x2d6 JUMPDEST
0x2d7 STOP
---
0x2d6: JUMPDEST 
0x2d7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d8
[0x2d8:0x2de]
---
Predecessors: [0x49]
Successors: [0x2df, 0x2e3]
---
0x2d8 JUMPDEST
0x2d9 CALLVALUE
0x2da ISZERO
0x2db PUSH2 0x2e3
0x2de JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V238 = CALLVALUE
0x2da: V239 = ISZERO V238
0x2db: V240 = 0x2e3
0x2de: JUMPI 0x2e3 V239
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2df
[0x2df:0x2e2]
---
Predecessors: [0x2d8]
Successors: []
---
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 REVERT
---
0x2df: V241 = 0x0
0x2e2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e3
[0x2e3:0x2f6]
---
Predecessors: [0x2d8]
Successors: [0x5f9]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0x2f7
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef PUSH1 0x4
0x2f1 CALLDATALOAD
0x2f2 AND
0x2f3 PUSH2 0x5f9
0x2f6 JUMP
---
0x2e3: JUMPDEST 
0x2e4: V242 = 0x2f7
0x2e7: V243 = 0x1
0x2e9: V244 = 0xa0
0x2eb: V245 = 0x2
0x2ed: V246 = EXP 0x2 0xa0
0x2ee: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V248 = 0x4
0x2f1: V249 = CALLDATALOAD 0x4
0x2f2: V250 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V251 = 0x5f9
0x2f6: JUMP 0x5f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2f7, V250]
Exit stack: [V10, 0x2f7, V250]

================================

Block 0x2f7
[0x2f7:0x308]
---
Predecessors: [0x5f9]
Successors: []
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb SWAP1
0x2fc DUP2
0x2fd MSTORE
0x2fe PUSH1 0x20
0x300 ADD
0x301 PUSH1 0x40
0x303 MLOAD
0x304 DUP1
0x305 SWAP2
0x306 SUB
0x307 SWAP1
0x308 RETURN
---
0x2f7: JUMPDEST 
0x2f8: V252 = 0x40
0x2fa: V253 = M[0x40]
0x2fd: M[V253] = V543
0x2fe: V254 = 0x20
0x300: V255 = ADD 0x20 V253
0x301: V256 = 0x40
0x303: V257 = M[0x40]
0x306: V258 = SUB V255 V257
0x308: RETURN V257 V258
---
Entry stack: [V10, 0x2f7, V543]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2f7]

================================

Block 0x309
[0x309:0x30f]
---
Predecessors: [0x54]
Successors: [0x310, 0x314]
---
0x309 JUMPDEST
0x30a CALLVALUE
0x30b ISZERO
0x30c PUSH2 0x314
0x30f JUMPI
---
0x309: JUMPDEST 
0x30a: V259 = CALLVALUE
0x30b: V260 = ISZERO V259
0x30c: V261 = 0x314
0x30f: JUMPI 0x314 V260
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x309]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V262 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x314
[0x314:0x320]
---
Predecessors: [0x309]
Successors: [0x60b]
---
0x314 JUMPDEST
0x315 PUSH2 0x2bc
0x318 PUSH1 0x4
0x31a CALLDATALOAD
0x31b ISZERO
0x31c ISZERO
0x31d PUSH2 0x60b
0x320 JUMP
---
0x314: JUMPDEST 
0x315: V263 = 0x2bc
0x318: V264 = 0x4
0x31a: V265 = CALLDATALOAD 0x4
0x31b: V266 = ISZERO V265
0x31c: V267 = ISZERO V266
0x31d: V268 = 0x60b
0x320: JUMP 0x60b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc, V267]
Exit stack: [V10, 0x2bc, V267]

================================

Block 0x321
[0x321:0x322]
---
Predecessors: []
Successors: []
---
0x321 JUMPDEST
0x322 STOP
---
0x321: JUMPDEST 
0x322: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x323
[0x323:0x329]
---
Predecessors: [0x5f]
Successors: [0x32a, 0x32e]
---
0x323 JUMPDEST
0x324 CALLVALUE
0x325 ISZERO
0x326 PUSH2 0x32e
0x329 JUMPI
---
0x323: JUMPDEST 
0x324: V269 = CALLVALUE
0x325: V270 = ISZERO V269
0x326: V271 = 0x32e
0x329: JUMPI 0x32e V270
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32a
[0x32a:0x32d]
---
Predecessors: [0x323]
Successors: []
---
0x32a PUSH1 0x0
0x32c DUP1
0x32d REVERT
---
0x32a: V272 = 0x0
0x32d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32e
[0x32e:0x335]
---
Predecessors: [0x323]
Successors: [0x639]
---
0x32e JUMPDEST
0x32f PUSH2 0x336
0x332 PUSH2 0x639
0x335 JUMP
---
0x32e: JUMPDEST 
0x32f: V273 = 0x336
0x332: V274 = 0x639
0x335: JUMP 0x639
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x336]
Exit stack: [V10, 0x336]

================================

Block 0x336
[0x336:0x349]
---
Predecessors: [0x639, 0x85c, 0x87c, 0x945, 0x953, 0x95c]
Successors: []
---
0x336 JUMPDEST
0x337 PUSH1 0x40
0x339 MLOAD
0x33a SWAP1
0x33b ISZERO
0x33c ISZERO
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 SWAP2
0x347 SUB
0x348 SWAP1
0x349 RETURN
---
0x336: JUMPDEST 
0x337: V275 = 0x40
0x339: V276 = M[0x40]
0x33b: V277 = ISZERO S0
0x33c: V278 = ISZERO V277
0x33e: M[V276] = V278
0x33f: V279 = 0x20
0x341: V280 = ADD 0x20 V276
0x342: V281 = 0x40
0x344: V282 = M[0x40]
0x347: V283 = SUB V280 V282
0x349: RETURN V282 V283
---
Entry stack: [V10, 0x336, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x336]

================================

Block 0x34a
[0x34a:0x350]
---
Predecessors: [0x6a]
Successors: [0x351, 0x355]
---
0x34a JUMPDEST
0x34b CALLVALUE
0x34c ISZERO
0x34d PUSH2 0x355
0x350 JUMPI
---
0x34a: JUMPDEST 
0x34b: V284 = CALLVALUE
0x34c: V285 = ISZERO V284
0x34d: V286 = 0x355
0x350: JUMPI 0x355 V285
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x351
[0x351:0x354]
---
Predecessors: [0x34a]
Successors: []
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
---
0x351: V287 = 0x0
0x354: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x355
[0x355:0x361]
---
Predecessors: [0x34a]
Successors: [0x648]
---
0x355 JUMPDEST
0x356 PUSH2 0x2bc
0x359 PUSH1 0x4
0x35b CALLDATALOAD
0x35c ISZERO
0x35d ISZERO
0x35e PUSH2 0x648
0x361 JUMP
---
0x355: JUMPDEST 
0x356: V288 = 0x2bc
0x359: V289 = 0x4
0x35b: V290 = CALLDATALOAD 0x4
0x35c: V291 = ISZERO V290
0x35d: V292 = ISZERO V291
0x35e: V293 = 0x648
0x361: JUMP 0x648
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc, V292]
Exit stack: [V10, 0x2bc, V292]

================================

Block 0x362
[0x362:0x363]
---
Predecessors: []
Successors: []
---
0x362 JUMPDEST
0x363 STOP
---
0x362: JUMPDEST 
0x363: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x364
[0x364:0x36a]
---
Predecessors: [0x75]
Successors: [0x36b, 0x36f]
---
0x364 JUMPDEST
0x365 CALLVALUE
0x366 ISZERO
0x367 PUSH2 0x36f
0x36a JUMPI
---
0x364: JUMPDEST 
0x365: V294 = CALLVALUE
0x366: V295 = ISZERO V294
0x367: V296 = 0x36f
0x36a: JUMPI 0x36f V295
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36b
[0x36b:0x36e]
---
Predecessors: [0x364]
Successors: []
---
0x36b PUSH1 0x0
0x36d DUP1
0x36e REVERT
---
0x36b: V297 = 0x0
0x36e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36f
[0x36f:0x376]
---
Predecessors: [0x364]
Successors: [0x67d]
---
0x36f JUMPDEST
0x370 PUSH2 0x377
0x373 PUSH2 0x67d
0x376 JUMP
---
0x36f: JUMPDEST 
0x370: V298 = 0x377
0x373: V299 = 0x67d
0x376: JUMP 0x67d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x377]
Exit stack: [V10, 0x377]

================================

Block 0x377
[0x377:0x392]
---
Predecessors: [0x67d, 0x86d]
Successors: []
---
0x377 JUMPDEST
0x378 PUSH1 0x40
0x37a MLOAD
0x37b PUSH1 0x1
0x37d PUSH1 0xa0
0x37f PUSH1 0x2
0x381 EXP
0x382 SUB
0x383 SWAP1
0x384 SWAP2
0x385 AND
0x386 DUP2
0x387 MSTORE
0x388 PUSH1 0x20
0x38a ADD
0x38b PUSH1 0x40
0x38d MLOAD
0x38e DUP1
0x38f SWAP2
0x390 SUB
0x391 SWAP1
0x392 RETURN
---
0x377: JUMPDEST 
0x378: V300 = 0x40
0x37a: V301 = M[0x40]
0x37b: V302 = 0x1
0x37d: V303 = 0xa0
0x37f: V304 = 0x2
0x381: V305 = EXP 0x2 0xa0
0x382: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x385: V307 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x387: M[V301] = V307
0x388: V308 = 0x20
0x38a: V309 = ADD 0x20 V301
0x38b: V310 = 0x40
0x38d: V311 = M[0x40]
0x390: V312 = SUB V309 V311
0x392: RETURN V311 V312
---
Entry stack: [V10, 0x377, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x377]

================================

Block 0x393
[0x393:0x399]
---
Predecessors: [0x80]
Successors: [0x39a, 0x39e]
---
0x393 JUMPDEST
0x394 CALLVALUE
0x395 ISZERO
0x396 PUSH2 0x39e
0x399 JUMPI
---
0x393: JUMPDEST 
0x394: V313 = CALLVALUE
0x395: V314 = ISZERO V313
0x396: V315 = 0x39e
0x399: JUMPI 0x39e V314
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x39a
[0x39a:0x39d]
---
Predecessors: [0x393]
Successors: []
---
0x39a PUSH1 0x0
0x39c DUP1
0x39d REVERT
---
0x39a: V316 = 0x0
0x39d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x39e
[0x39e:0x3a5]
---
Predecessors: [0x393]
Successors: [0x68c]
---
0x39e JUMPDEST
0x39f PUSH2 0x2bc
0x3a2 PUSH2 0x68c
0x3a5 JUMP
---
0x39e: JUMPDEST 
0x39f: V317 = 0x2bc
0x3a2: V318 = 0x68c
0x3a5: JUMP 0x68c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc]
Exit stack: [V10, 0x2bc]

================================

Block 0x3a6
[0x3a6:0x3a7]
---
Predecessors: []
Successors: []
---
0x3a6 JUMPDEST
0x3a7 STOP
---
0x3a6: JUMPDEST 
0x3a7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3a8
[0x3a8:0x3ae]
---
Predecessors: [0x8b]
Successors: [0x3af, 0x3b3]
---
0x3a8 JUMPDEST
0x3a9 CALLVALUE
0x3aa ISZERO
0x3ab PUSH2 0x3b3
0x3ae JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V319 = CALLVALUE
0x3aa: V320 = ISZERO V319
0x3ab: V321 = 0x3b3
0x3ae: JUMPI 0x3b3 V320
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3af
[0x3af:0x3b2]
---
Predecessors: [0x3a8]
Successors: []
---
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 REVERT
---
0x3af: V322 = 0x0
0x3b2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b3
[0x3b3:0x3ba]
---
Predecessors: [0x3a8]
Successors: [0x764]
---
0x3b3 JUMPDEST
0x3b4 PUSH2 0x2bc
0x3b7 PUSH2 0x764
0x3ba JUMP
---
0x3b3: JUMPDEST 
0x3b4: V323 = 0x2bc
0x3b7: V324 = 0x764
0x3ba: JUMP 0x764
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc]
Exit stack: [V10, 0x2bc]

================================

Block 0x3bb
[0x3bb:0x3bc]
---
Predecessors: []
Successors: []
---
0x3bb JUMPDEST
0x3bc STOP
---
0x3bb: JUMPDEST 
0x3bc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3bd
[0x3bd:0x3c3]
---
Predecessors: [0x96]
Successors: [0x3c4, 0x3c8]
---
0x3bd JUMPDEST
0x3be CALLVALUE
0x3bf ISZERO
0x3c0 PUSH2 0x3c8
0x3c3 JUMPI
---
0x3bd: JUMPDEST 
0x3be: V325 = CALLVALUE
0x3bf: V326 = ISZERO V325
0x3c0: V327 = 0x3c8
0x3c3: JUMPI 0x3c8 V326
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c4
[0x3c4:0x3c7]
---
Predecessors: [0x3bd]
Successors: []
---
0x3c4 PUSH1 0x0
0x3c6 DUP1
0x3c7 REVERT
---
0x3c4: V328 = 0x0
0x3c7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c8
[0x3c8:0x3cf]
---
Predecessors: [0x3bd]
Successors: [0x85c]
---
0x3c8 JUMPDEST
0x3c9 PUSH2 0x336
0x3cc PUSH2 0x85c
0x3cf JUMP
---
0x3c8: JUMPDEST 
0x3c9: V329 = 0x336
0x3cc: V330 = 0x85c
0x3cf: JUMP 0x85c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x336]
Exit stack: [V10, 0x336]

================================

Block 0x3d0
[0x3d0:0x3e3]
---
Predecessors: []
Successors: []
---
0x3d0 JUMPDEST
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 SWAP1
0x3d5 ISZERO
0x3d6 ISZERO
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 PUSH1 0x20
0x3db ADD
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df DUP1
0x3e0 SWAP2
0x3e1 SUB
0x3e2 SWAP1
0x3e3 RETURN
---
0x3d0: JUMPDEST 
0x3d1: V331 = 0x40
0x3d3: V332 = M[0x40]
0x3d5: V333 = ISZERO S0
0x3d6: V334 = ISZERO V333
0x3d8: M[V332] = V334
0x3d9: V335 = 0x20
0x3db: V336 = ADD 0x20 V332
0x3dc: V337 = 0x40
0x3de: V338 = M[0x40]
0x3e1: V339 = SUB V336 V338
0x3e3: RETURN V338 V339
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e4
[0x3e4:0x3ea]
---
Predecessors: [0xa1]
Successors: [0x3eb, 0x3ef]
---
0x3e4 JUMPDEST
0x3e5 CALLVALUE
0x3e6 ISZERO
0x3e7 PUSH2 0x3ef
0x3ea JUMPI
---
0x3e4: JUMPDEST 
0x3e5: V340 = CALLVALUE
0x3e6: V341 = ISZERO V340
0x3e7: V342 = 0x3ef
0x3ea: JUMPI 0x3ef V341
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3eb
[0x3eb:0x3ee]
---
Predecessors: [0x3e4]
Successors: []
---
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee REVERT
---
0x3eb: V343 = 0x0
0x3ee: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ef
[0x3ef:0x3f6]
---
Predecessors: [0x3e4]
Successors: [0x86d]
---
0x3ef JUMPDEST
0x3f0 PUSH2 0x377
0x3f3 PUSH2 0x86d
0x3f6 JUMP
---
0x3ef: JUMPDEST 
0x3f0: V344 = 0x377
0x3f3: V345 = 0x86d
0x3f6: JUMP 0x86d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x377]
Exit stack: [V10, 0x377]

================================

Block 0x3f7
[0x3f7:0x412]
---
Predecessors: []
Successors: []
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 SWAP1
0x404 SWAP2
0x405 AND
0x406 DUP2
0x407 MSTORE
0x408 PUSH1 0x20
0x40a ADD
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f SWAP2
0x410 SUB
0x411 SWAP1
0x412 RETURN
---
0x3f7: JUMPDEST 
0x3f8: V346 = 0x40
0x3fa: V347 = M[0x40]
0x3fb: V348 = 0x1
0x3fd: V349 = 0xa0
0x3ff: V350 = 0x2
0x401: V351 = EXP 0x2 0xa0
0x402: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x405: V353 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x407: M[V347] = V353
0x408: V354 = 0x20
0x40a: V355 = ADD 0x20 V347
0x40b: V356 = 0x40
0x40d: V357 = M[0x40]
0x410: V358 = SUB V355 V357
0x412: RETURN V357 V358
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x413
[0x413:0x419]
---
Predecessors: [0xac]
Successors: [0x41a, 0x41e]
---
0x413 JUMPDEST
0x414 CALLVALUE
0x415 ISZERO
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x413: JUMPDEST 
0x414: V359 = CALLVALUE
0x415: V360 = ISZERO V359
0x416: V361 = 0x41e
0x419: JUMPI 0x41e V360
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x413]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V362 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41e
[0x41e:0x431]
---
Predecessors: [0x413]
Successors: [0x87c]
---
0x41e JUMPDEST
0x41f PUSH2 0x336
0x422 PUSH1 0x1
0x424 PUSH1 0xa0
0x426 PUSH1 0x2
0x428 EXP
0x429 SUB
0x42a PUSH1 0x4
0x42c CALLDATALOAD
0x42d AND
0x42e PUSH2 0x87c
0x431 JUMP
---
0x41e: JUMPDEST 
0x41f: V363 = 0x336
0x422: V364 = 0x1
0x424: V365 = 0xa0
0x426: V366 = 0x2
0x428: V367 = EXP 0x2 0xa0
0x429: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42a: V369 = 0x4
0x42c: V370 = CALLDATALOAD 0x4
0x42d: V371 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x42e: V372 = 0x87c
0x431: JUMP 0x87c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x336, V371]
Exit stack: [V10, 0x336, V371]

================================

Block 0x432
[0x432:0x445]
---
Predecessors: []
Successors: []
---
0x432 JUMPDEST
0x433 PUSH1 0x40
0x435 MLOAD
0x436 SWAP1
0x437 ISZERO
0x438 ISZERO
0x439 DUP2
0x43a MSTORE
0x43b PUSH1 0x20
0x43d ADD
0x43e PUSH1 0x40
0x440 MLOAD
0x441 DUP1
0x442 SWAP2
0x443 SUB
0x444 SWAP1
0x445 RETURN
---
0x432: JUMPDEST 
0x433: V373 = 0x40
0x435: V374 = M[0x40]
0x437: V375 = ISZERO S0
0x438: V376 = ISZERO V375
0x43a: M[V374] = V376
0x43b: V377 = 0x20
0x43d: V378 = ADD 0x20 V374
0x43e: V379 = 0x40
0x440: V380 = M[0x40]
0x443: V381 = SUB V378 V380
0x445: RETURN V380 V381
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x446
[0x446:0x44c]
---
Predecessors: [0xb7]
Successors: [0x44d, 0x451]
---
0x446 JUMPDEST
0x447 CALLVALUE
0x448 ISZERO
0x449 PUSH2 0x451
0x44c JUMPI
---
0x446: JUMPDEST 
0x447: V382 = CALLVALUE
0x448: V383 = ISZERO V382
0x449: V384 = 0x451
0x44c: JUMPI 0x451 V383
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44d
[0x44d:0x450]
---
Predecessors: [0x446]
Successors: []
---
0x44d PUSH1 0x0
0x44f DUP1
0x450 REVERT
---
0x44d: V385 = 0x0
0x450: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x451
[0x451:0x464]
---
Predecessors: [0x446]
Successors: [0x891]
---
0x451 JUMPDEST
0x452 PUSH2 0x2bc
0x455 PUSH1 0x1
0x457 PUSH1 0xa0
0x459 PUSH1 0x2
0x45b EXP
0x45c SUB
0x45d PUSH1 0x4
0x45f CALLDATALOAD
0x460 AND
0x461 PUSH2 0x891
0x464 JUMP
---
0x451: JUMPDEST 
0x452: V386 = 0x2bc
0x455: V387 = 0x1
0x457: V388 = 0xa0
0x459: V389 = 0x2
0x45b: V390 = EXP 0x2 0xa0
0x45c: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45d: V392 = 0x4
0x45f: V393 = CALLDATALOAD 0x4
0x460: V394 = AND V393 0xffffffffffffffffffffffffffffffffffffffff
0x461: V395 = 0x891
0x464: JUMP 0x891
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc, V394]
Exit stack: [V10, 0x2bc, V394]

================================

Block 0x465
[0x465:0x466]
---
Predecessors: []
Successors: []
---
0x465 JUMPDEST
0x466 STOP
---
0x465: JUMPDEST 
0x466: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x467
[0x467:0x46d]
---
Predecessors: [0xc2]
Successors: [0x46e, 0x472]
---
0x467 JUMPDEST
0x468 CALLVALUE
0x469 ISZERO
0x46a PUSH2 0x472
0x46d JUMPI
---
0x467: JUMPDEST 
0x468: V396 = CALLVALUE
0x469: V397 = ISZERO V396
0x46a: V398 = 0x472
0x46d: JUMPI 0x472 V397
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x467]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V399 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x472
[0x472:0x47e]
---
Predecessors: [0x467]
Successors: [0x90c]
---
0x472 JUMPDEST
0x473 PUSH2 0x2bc
0x476 PUSH1 0x4
0x478 CALLDATALOAD
0x479 ISZERO
0x47a ISZERO
0x47b PUSH2 0x90c
0x47e JUMP
---
0x472: JUMPDEST 
0x473: V400 = 0x2bc
0x476: V401 = 0x4
0x478: V402 = CALLDATALOAD 0x4
0x479: V403 = ISZERO V402
0x47a: V404 = ISZERO V403
0x47b: V405 = 0x90c
0x47e: JUMP 0x90c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc, V404]
Exit stack: [V10, 0x2bc, V404]

================================

Block 0x47f
[0x47f:0x480]
---
Predecessors: []
Successors: []
---
0x47f JUMPDEST
0x480 STOP
---
0x47f: JUMPDEST 
0x480: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x481
[0x481:0x487]
---
Predecessors: [0xcd]
Successors: [0x488, 0x48c]
---
0x481 JUMPDEST
0x482 CALLVALUE
0x483 ISZERO
0x484 PUSH2 0x48c
0x487 JUMPI
---
0x481: JUMPDEST 
0x482: V406 = CALLVALUE
0x483: V407 = ISZERO V406
0x484: V408 = 0x48c
0x487: JUMPI 0x48c V407
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x488
[0x488:0x48b]
---
Predecessors: [0x481]
Successors: []
---
0x488 PUSH1 0x0
0x48a DUP1
0x48b REVERT
---
0x488: V409 = 0x0
0x48b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48c
[0x48c:0x493]
---
Predecessors: [0x481]
Successors: [0x945]
---
0x48c JUMPDEST
0x48d PUSH2 0x336
0x490 PUSH2 0x945
0x493 JUMP
---
0x48c: JUMPDEST 
0x48d: V410 = 0x336
0x490: V411 = 0x945
0x493: JUMP 0x945
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x336]
Exit stack: [V10, 0x336]

================================

Block 0x494
[0x494:0x4a7]
---
Predecessors: []
Successors: []
---
0x494 JUMPDEST
0x495 PUSH1 0x40
0x497 MLOAD
0x498 SWAP1
0x499 ISZERO
0x49a ISZERO
0x49b DUP2
0x49c MSTORE
0x49d PUSH1 0x20
0x49f ADD
0x4a0 PUSH1 0x40
0x4a2 MLOAD
0x4a3 DUP1
0x4a4 SWAP2
0x4a5 SUB
0x4a6 SWAP1
0x4a7 RETURN
---
0x494: JUMPDEST 
0x495: V412 = 0x40
0x497: V413 = M[0x40]
0x499: V414 = ISZERO S0
0x49a: V415 = ISZERO V414
0x49c: M[V413] = V415
0x49d: V416 = 0x20
0x49f: V417 = ADD 0x20 V413
0x4a0: V418 = 0x40
0x4a2: V419 = M[0x40]
0x4a5: V420 = SUB V417 V419
0x4a7: RETURN V419 V420
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4a8
[0x4a8:0x4ae]
---
Predecessors: [0xd8]
Successors: [0x4af, 0x4b3]
---
0x4a8 JUMPDEST
0x4a9 CALLVALUE
0x4aa ISZERO
0x4ab PUSH2 0x4b3
0x4ae JUMPI
---
0x4a8: JUMPDEST 
0x4a9: V421 = CALLVALUE
0x4aa: V422 = ISZERO V421
0x4ab: V423 = 0x4b3
0x4ae: JUMPI 0x4b3 V422
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4af
[0x4af:0x4b2]
---
Predecessors: [0x4a8]
Successors: []
---
0x4af PUSH1 0x0
0x4b1 DUP1
0x4b2 REVERT
---
0x4af: V424 = 0x0
0x4b2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b3
[0x4b3:0x4ba]
---
Predecessors: [0x4a8]
Successors: [0x953]
---
0x4b3 JUMPDEST
0x4b4 PUSH2 0x336
0x4b7 PUSH2 0x953
0x4ba JUMP
---
0x4b3: JUMPDEST 
0x4b4: V425 = 0x336
0x4b7: V426 = 0x953
0x4ba: JUMP 0x953
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x336]
Exit stack: [V10, 0x336]

================================

Block 0x4bb
[0x4bb:0x4ce]
---
Predecessors: []
Successors: []
---
0x4bb JUMPDEST
0x4bc PUSH1 0x40
0x4be MLOAD
0x4bf SWAP1
0x4c0 ISZERO
0x4c1 ISZERO
0x4c2 DUP2
0x4c3 MSTORE
0x4c4 PUSH1 0x20
0x4c6 ADD
0x4c7 PUSH1 0x40
0x4c9 MLOAD
0x4ca DUP1
0x4cb SWAP2
0x4cc SUB
0x4cd SWAP1
0x4ce RETURN
---
0x4bb: JUMPDEST 
0x4bc: V427 = 0x40
0x4be: V428 = M[0x40]
0x4c0: V429 = ISZERO S0
0x4c1: V430 = ISZERO V429
0x4c3: M[V428] = V430
0x4c4: V431 = 0x20
0x4c6: V432 = ADD 0x20 V428
0x4c7: V433 = 0x40
0x4c9: V434 = M[0x40]
0x4cc: V435 = SUB V432 V434
0x4ce: RETURN V434 V435
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4cf
[0x4cf:0x4d5]
---
Predecessors: [0xe3]
Successors: [0x4d6, 0x4da]
---
0x4cf JUMPDEST
0x4d0 CALLVALUE
0x4d1 ISZERO
0x4d2 PUSH2 0x4da
0x4d5 JUMPI
---
0x4cf: JUMPDEST 
0x4d0: V436 = CALLVALUE
0x4d1: V437 = ISZERO V436
0x4d2: V438 = 0x4da
0x4d5: JUMPI 0x4da V437
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4d6
[0x4d6:0x4d9]
---
Predecessors: [0x4cf]
Successors: []
---
0x4d6 PUSH1 0x0
0x4d8 DUP1
0x4d9 REVERT
---
0x4d6: V439 = 0x0
0x4d9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4da
[0x4da:0x4e1]
---
Predecessors: [0x4cf]
Successors: [0x95c]
---
0x4da JUMPDEST
0x4db PUSH2 0x336
0x4de PUSH2 0x95c
0x4e1 JUMP
---
0x4da: JUMPDEST 
0x4db: V440 = 0x336
0x4de: V441 = 0x95c
0x4e1: JUMP 0x95c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x336]
Exit stack: [V10, 0x336]

================================

Block 0x4e2
[0x4e2:0x4f5]
---
Predecessors: []
Successors: []
---
0x4e2 JUMPDEST
0x4e3 PUSH1 0x40
0x4e5 MLOAD
0x4e6 SWAP1
0x4e7 ISZERO
0x4e8 ISZERO
0x4e9 DUP2
0x4ea MSTORE
0x4eb PUSH1 0x20
0x4ed ADD
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 DUP1
0x4f2 SWAP2
0x4f3 SUB
0x4f4 SWAP1
0x4f5 RETURN
---
0x4e2: JUMPDEST 
0x4e3: V442 = 0x40
0x4e5: V443 = M[0x40]
0x4e7: V444 = ISZERO S0
0x4e8: V445 = ISZERO V444
0x4ea: M[V443] = V445
0x4eb: V446 = 0x20
0x4ed: V447 = ADD 0x20 V443
0x4ee: V448 = 0x40
0x4f0: V449 = M[0x40]
0x4f3: V450 = SUB V447 V449
0x4f5: RETURN V449 V450
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4f6
[0x4f6:0x4fd]
---
Predecessors: [0xee]
Successors: [0x96c]
---
0x4f6 JUMPDEST
0x4f7 PUSH2 0x2bc
0x4fa PUSH2 0x96c
0x4fd JUMP
---
0x4f6: JUMPDEST 
0x4f7: V451 = 0x2bc
0x4fa: V452 = 0x96c
0x4fd: JUMP 0x96c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc]
Exit stack: [V10, 0x2bc]

================================

Block 0x4fe
[0x4fe:0x4ff]
---
Predecessors: []
Successors: []
---
0x4fe JUMPDEST
0x4ff STOP
---
0x4fe: JUMPDEST 
0x4ff: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x500
[0x500:0x506]
---
Predecessors: [0xf9]
Successors: [0x507, 0x50b]
---
0x500 JUMPDEST
0x501 CALLVALUE
0x502 ISZERO
0x503 PUSH2 0x50b
0x506 JUMPI
---
0x500: JUMPDEST 
0x501: V453 = CALLVALUE
0x502: V454 = ISZERO V453
0x503: V455 = 0x50b
0x506: JUMPI 0x50b V454
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x507
[0x507:0x50a]
---
Predecessors: [0x500]
Successors: []
---
0x507 PUSH1 0x0
0x509 DUP1
0x50a REVERT
---
0x507: V456 = 0x0
0x50a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x50b
[0x50b:0x517]
---
Predecessors: [0x500]
Successors: [0xaff]
---
0x50b JUMPDEST
0x50c PUSH2 0x2bc
0x50f PUSH1 0x4
0x511 CALLDATALOAD
0x512 ISZERO
0x513 ISZERO
0x514 PUSH2 0xaff
0x517 JUMP
---
0x50b: JUMPDEST 
0x50c: V457 = 0x2bc
0x50f: V458 = 0x4
0x511: V459 = CALLDATALOAD 0x4
0x512: V460 = ISZERO V459
0x513: V461 = ISZERO V460
0x514: V462 = 0xaff
0x517: JUMP 0xaff
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bc, V461]
Exit stack: [V10, 0x2bc, V461]

================================

Block 0x518
[0x518:0x519]
---
Predecessors: []
Successors: []
---
0x518 JUMPDEST
0x519 STOP
---
0x518: JUMPDEST 
0x519: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x51a
[0x51a:0x527]
---
Predecessors: [0x193, 0x1e8, 0x9fa, 0xa4f]
Successors: [0x528, 0x529]
---
0x51a JUMPDEST
0x51b PUSH1 0x0
0x51d DUP3
0x51e DUP3
0x51f ADD
0x520 DUP4
0x521 DUP2
0x522 LT
0x523 ISZERO
0x524 PUSH2 0x529
0x527 JUMPI
---
0x51a: JUMPDEST 
0x51b: V463 = 0x0
0x51f: V464 = ADD S0 S1
0x522: V465 = LT V464 S1
0x523: V466 = ISZERO V465
0x524: V467 = 0x529
0x527: JUMPI 0x529 V466
---
Entry stack: [V10, S6, S5, S4, S3, {0x1c7, 0x211, 0xa2e, 0xa78}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V464]
Exit stack: [V10, S6, S5, S4, S3, {0x1c7, 0x211, 0xa2e, 0xa78}, S1, S0, 0x0, V464]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x51a]
Successors: []
---
0x528 INVALID
---
0x528: INVALID 
---
Entry stack: [V10, S8, S7, S6, S5, {0x1c7, 0x211, 0xa2e, 0xa78}, S3, S2, 0x0, V464]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, {0x1c7, 0x211, 0xa2e, 0xa78}, S3, S2, 0x0, V464]

================================

Block 0x529
[0x529:0x52c]
---
Predecessors: [0x51a]
Successors: [0x52d]
---
0x529 JUMPDEST
0x52a DUP1
0x52b SWAP2
0x52c POP
---
0x529: JUMPDEST 
---
Entry stack: [V10, S8, S7, S6, S5, {0x1c7, 0x211, 0xa2e, 0xa78}, S3, S2, 0x0, V464]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, S8, S7, S6, S5, {0x1c7, 0x211, 0xa2e, 0xa78}, S3, S2, V464, V464]

================================

Block 0x52d
[0x52d:0x533]
---
Predecessors: [0x529]
Successors: [0x1c7, 0x211, 0xa2e, 0xa78]
---
0x52d JUMPDEST
0x52e POP
0x52f SWAP3
0x530 SWAP2
0x531 POP
0x532 POP
0x533 JUMP
---
0x52d: JUMPDEST 
0x533: JUMP {0x1c7, 0x211, 0xa2e, 0xa78}
---
Entry stack: [V10, S8, S7, S6, S5, {0x1c7, 0x211, 0xa2e, 0xa78}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, S8, S7, S6, S5, S1]

================================

Block 0x534
[0x534:0x54a]
---
Predecessors: [0x2a3]
Successors: [0x54b, 0x54f]
---
0x534 JUMPDEST
0x535 PUSH1 0x0
0x537 SLOAD
0x538 CALLER
0x539 PUSH1 0x1
0x53b PUSH1 0xa0
0x53d PUSH1 0x2
0x53f EXP
0x540 SUB
0x541 SWAP1
0x542 DUP2
0x543 AND
0x544 SWAP2
0x545 AND
0x546 EQ
0x547 PUSH2 0x54f
0x54a JUMPI
---
0x534: JUMPDEST 
0x535: V468 = 0x0
0x537: V469 = S[0x0]
0x538: V470 = CALLER
0x539: V471 = 0x1
0x53b: V472 = 0xa0
0x53d: V473 = 0x2
0x53f: V474 = EXP 0x2 0xa0
0x540: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x543: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x545: V477 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x546: V478 = EQ V477 V476
0x547: V479 = 0x54f
0x54a: JUMPI 0x54f V478
---
Entry stack: [V10, 0x2bc, V222, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V222, V226]

================================

Block 0x54b
[0x54b:0x54e]
---
Predecessors: [0x534]
Successors: []
---
0x54b PUSH1 0x0
0x54d DUP1
0x54e REVERT
---
0x54b: V480 = 0x0
0x54e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V222, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V222, V226]

================================

Block 0x54f
[0x54f:0x5bc]
---
Predecessors: [0x534]
Successors: [0x5bd]
---
0x54f JUMPDEST
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 DUP3
0x559 AND
0x55a PUSH1 0x0
0x55c SWAP1
0x55d DUP2
0x55e MSTORE
0x55f PUSH1 0x4
0x561 PUSH1 0x20
0x563 MSTORE
0x564 PUSH1 0x40
0x566 SWAP1
0x567 DUP2
0x568 SWAP1
0x569 SHA3
0x56a DUP1
0x56b SLOAD
0x56c PUSH1 0xff
0x56e NOT
0x56f AND
0x570 DUP4
0x571 ISZERO
0x572 ISZERO
0x573 OR
0x574 SWAP1
0x575 SSTORE
0x576 PUSH32 0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d
0x597 SWAP1
0x598 DUP4
0x599 SWAP1
0x59a DUP4
0x59b SWAP1
0x59c MLOAD
0x59d PUSH1 0x1
0x59f PUSH1 0xa0
0x5a1 PUSH1 0x2
0x5a3 EXP
0x5a4 SUB
0x5a5 SWAP1
0x5a6 SWAP3
0x5a7 AND
0x5a8 DUP3
0x5a9 MSTORE
0x5aa ISZERO
0x5ab ISZERO
0x5ac PUSH1 0x20
0x5ae DUP3
0x5af ADD
0x5b0 MSTORE
0x5b1 PUSH1 0x40
0x5b3 SWAP1
0x5b4 DUP2
0x5b5 ADD
0x5b6 SWAP1
0x5b7 MLOAD
0x5b8 DUP1
0x5b9 SWAP2
0x5ba SUB
0x5bb SWAP1
0x5bc LOG1
---
0x54f: JUMPDEST 
0x550: V481 = 0x1
0x552: V482 = 0xa0
0x554: V483 = 0x2
0x556: V484 = EXP 0x2 0xa0
0x557: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x559: V486 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x55a: V487 = 0x0
0x55e: M[0x0] = V486
0x55f: V488 = 0x4
0x561: V489 = 0x20
0x563: M[0x20] = 0x4
0x564: V490 = 0x40
0x569: V491 = SHA3 0x0 0x40
0x56b: V492 = S[V491]
0x56c: V493 = 0xff
0x56e: V494 = NOT 0xff
0x56f: V495 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V492
0x571: V496 = ISZERO V226
0x572: V497 = ISZERO V496
0x573: V498 = OR V497 V495
0x575: S[V491] = V498
0x576: V499 = 0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d
0x59c: V500 = M[0x40]
0x59d: V501 = 0x1
0x59f: V502 = 0xa0
0x5a1: V503 = 0x2
0x5a3: V504 = EXP 0x2 0xa0
0x5a4: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a7: V506 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x5a9: M[V500] = V506
0x5aa: V507 = ISZERO V226
0x5ab: V508 = ISZERO V507
0x5ac: V509 = 0x20
0x5af: V510 = ADD V500 0x20
0x5b0: M[V510] = V508
0x5b1: V511 = 0x40
0x5b5: V512 = ADD 0x40 V500
0x5b7: V513 = M[0x40]
0x5ba: V514 = SUB V512 V513
0x5bc: LOG V513 V514 0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d
---
Entry stack: [V10, 0x2bc, V222, V226]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x2bc, V222, V226]

================================

Block 0x5bd
[0x5bd:0x5bd]
---
Predecessors: [0x54f]
Successors: [0x5be]
---
0x5bd JUMPDEST
---
0x5bd: JUMPDEST 
---
Entry stack: [V10, 0x2bc, V222, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V222, V226]

================================

Block 0x5be
[0x5be:0x5c1]
---
Predecessors: [0x5bd]
Successors: [0x2bc]
---
0x5be JUMPDEST
0x5bf POP
0x5c0 POP
0x5c1 JUMP
---
0x5be: JUMPDEST 
0x5c1: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc, V222, V226]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x5c2
[0x5c2:0x5d8]
---
Predecessors: [0x2c9]
Successors: [0x5d9, 0x5dd]
---
0x5c2 JUMPDEST
0x5c3 PUSH1 0x0
0x5c5 SLOAD
0x5c6 CALLER
0x5c7 PUSH1 0x1
0x5c9 PUSH1 0xa0
0x5cb PUSH1 0x2
0x5cd EXP
0x5ce SUB
0x5cf SWAP1
0x5d0 DUP2
0x5d1 AND
0x5d2 SWAP2
0x5d3 AND
0x5d4 EQ
0x5d5 PUSH2 0x5dd
0x5d8 JUMPI
---
0x5c2: JUMPDEST 
0x5c3: V515 = 0x0
0x5c5: V516 = S[0x0]
0x5c6: V517 = CALLER
0x5c7: V518 = 0x1
0x5c9: V519 = 0xa0
0x5cb: V520 = 0x2
0x5cd: V521 = EXP 0x2 0xa0
0x5ce: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d1: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x5d3: V524 = AND V516 0xffffffffffffffffffffffffffffffffffffffff
0x5d4: V525 = EQ V524 V523
0x5d5: V526 = 0x5dd
0x5d8: JUMPI 0x5dd V525
---
Entry stack: [V10, 0x2bc, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V236]

================================

Block 0x5d9
[0x5d9:0x5dc]
---
Predecessors: [0x5c2]
Successors: []
---
0x5d9 PUSH1 0x0
0x5db DUP1
0x5dc REVERT
---
0x5d9: V527 = 0x0
0x5dc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V236]

================================

Block 0x5dd
[0x5dd:0x5f4]
---
Predecessors: [0x5c2]
Successors: [0x5f5]
---
0x5dd JUMPDEST
0x5de PUSH1 0x3
0x5e0 DUP1
0x5e1 SLOAD
0x5e2 PUSH4 0xff000000
0x5e7 NOT
0x5e8 AND
0x5e9 PUSH4 0x1000000
0x5ee DUP4
0x5ef ISZERO
0x5f0 ISZERO
0x5f1 MUL
0x5f2 OR
0x5f3 SWAP1
0x5f4 SSTORE
---
0x5dd: JUMPDEST 
0x5de: V528 = 0x3
0x5e1: V529 = S[0x3]
0x5e2: V530 = 0xff000000
0x5e7: V531 = NOT 0xff000000
0x5e8: V532 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff V529
0x5e9: V533 = 0x1000000
0x5ef: V534 = ISZERO V236
0x5f0: V535 = ISZERO V534
0x5f1: V536 = MUL V535 0x1000000
0x5f2: V537 = OR V536 V532
0x5f4: S[0x3] = V537
---
Entry stack: [V10, 0x2bc, V236]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2bc, V236]

================================

Block 0x5f5
[0x5f5:0x5f5]
---
Predecessors: [0x5dd]
Successors: [0x5f6]
---
0x5f5 JUMPDEST
---
0x5f5: JUMPDEST 
---
Entry stack: [V10, 0x2bc, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V236]

================================

Block 0x5f6
[0x5f6:0x5f8]
---
Predecessors: [0x5f5]
Successors: [0x2bc]
---
0x5f6 JUMPDEST
0x5f7 POP
0x5f8 JUMP
---
0x5f6: JUMPDEST 
0x5f8: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc, V236]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x5f9
[0x5f9:0x60a]
---
Predecessors: [0x2e3]
Successors: [0x2f7]
---
0x5f9 JUMPDEST
0x5fa PUSH1 0x2
0x5fc PUSH1 0x20
0x5fe MSTORE
0x5ff PUSH1 0x0
0x601 SWAP1
0x602 DUP2
0x603 MSTORE
0x604 PUSH1 0x40
0x606 SWAP1
0x607 SHA3
0x608 SLOAD
0x609 DUP2
0x60a JUMP
---
0x5f9: JUMPDEST 
0x5fa: V538 = 0x2
0x5fc: V539 = 0x20
0x5fe: M[0x20] = 0x2
0x5ff: V540 = 0x0
0x603: M[0x0] = V250
0x604: V541 = 0x40
0x607: V542 = SHA3 0x0 0x40
0x608: V543 = S[V542]
0x60a: JUMP 0x2f7
---
Entry stack: [V10, 0x2f7, V250]
Stack pops: 2
Stack additions: [S1, V543]
Exit stack: [V10, 0x2f7, V543]

================================

Block 0x60b
[0x60b:0x621]
---
Predecessors: [0x314]
Successors: [0x622, 0x626]
---
0x60b JUMPDEST
0x60c PUSH1 0x0
0x60e SLOAD
0x60f CALLER
0x610 PUSH1 0x1
0x612 PUSH1 0xa0
0x614 PUSH1 0x2
0x616 EXP
0x617 SUB
0x618 SWAP1
0x619 DUP2
0x61a AND
0x61b SWAP2
0x61c AND
0x61d EQ
0x61e PUSH2 0x626
0x621 JUMPI
---
0x60b: JUMPDEST 
0x60c: V544 = 0x0
0x60e: V545 = S[0x0]
0x60f: V546 = CALLER
0x610: V547 = 0x1
0x612: V548 = 0xa0
0x614: V549 = 0x2
0x616: V550 = EXP 0x2 0xa0
0x617: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61a: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x61c: V553 = AND V545 0xffffffffffffffffffffffffffffffffffffffff
0x61d: V554 = EQ V553 V552
0x61e: V555 = 0x626
0x621: JUMPI 0x626 V554
---
Entry stack: [V10, 0x2bc, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V267]

================================

Block 0x622
[0x622:0x625]
---
Predecessors: [0x60b]
Successors: []
---
0x622 PUSH1 0x0
0x624 DUP1
0x625 REVERT
---
0x622: V556 = 0x0
0x625: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V267]

================================

Block 0x626
[0x626:0x634]
---
Predecessors: [0x60b]
Successors: [0x635]
---
0x626 JUMPDEST
0x627 PUSH1 0x3
0x629 DUP1
0x62a SLOAD
0x62b PUSH1 0xff
0x62d NOT
0x62e AND
0x62f DUP3
0x630 ISZERO
0x631 ISZERO
0x632 OR
0x633 SWAP1
0x634 SSTORE
---
0x626: JUMPDEST 
0x627: V557 = 0x3
0x62a: V558 = S[0x3]
0x62b: V559 = 0xff
0x62d: V560 = NOT 0xff
0x62e: V561 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V558
0x630: V562 = ISZERO V267
0x631: V563 = ISZERO V562
0x632: V564 = OR V563 V561
0x634: S[0x3] = V564
---
Entry stack: [V10, 0x2bc, V267]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2bc, V267]

================================

Block 0x635
[0x635:0x635]
---
Predecessors: [0x626]
Successors: [0x636]
---
0x635 JUMPDEST
---
0x635: JUMPDEST 
---
Entry stack: [V10, 0x2bc, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V267]

================================

Block 0x636
[0x636:0x638]
---
Predecessors: [0x635]
Successors: [0x2bc]
---
0x636 JUMPDEST
0x637 POP
0x638 JUMP
---
0x636: JUMPDEST 
0x638: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc, V267]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x639
[0x639:0x647]
---
Predecessors: [0x32e]
Successors: [0x336]
---
0x639 JUMPDEST
0x63a PUSH1 0x3
0x63c SLOAD
0x63d PUSH3 0x10000
0x641 SWAP1
0x642 DIV
0x643 PUSH1 0xff
0x645 AND
0x646 DUP2
0x647 JUMP
---
0x639: JUMPDEST 
0x63a: V565 = 0x3
0x63c: V566 = S[0x3]
0x63d: V567 = 0x10000
0x642: V568 = DIV V566 0x10000
0x643: V569 = 0xff
0x645: V570 = AND 0xff V568
0x647: JUMP 0x336
---
Entry stack: [V10, 0x336]
Stack pops: 1
Stack additions: [S0, V570]
Exit stack: [V10, 0x336, V570]

================================

Block 0x648
[0x648:0x65e]
---
Predecessors: [0x355]
Successors: [0x65f, 0x663]
---
0x648 JUMPDEST
0x649 PUSH1 0x0
0x64b SLOAD
0x64c CALLER
0x64d PUSH1 0x1
0x64f PUSH1 0xa0
0x651 PUSH1 0x2
0x653 EXP
0x654 SUB
0x655 SWAP1
0x656 DUP2
0x657 AND
0x658 SWAP2
0x659 AND
0x65a EQ
0x65b PUSH2 0x663
0x65e JUMPI
---
0x648: JUMPDEST 
0x649: V571 = 0x0
0x64b: V572 = S[0x0]
0x64c: V573 = CALLER
0x64d: V574 = 0x1
0x64f: V575 = 0xa0
0x651: V576 = 0x2
0x653: V577 = EXP 0x2 0xa0
0x654: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x657: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x659: V580 = AND V572 0xffffffffffffffffffffffffffffffffffffffff
0x65a: V581 = EQ V580 V579
0x65b: V582 = 0x663
0x65e: JUMPI 0x663 V581
---
Entry stack: [V10, 0x2bc, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V292]

================================

Block 0x65f
[0x65f:0x662]
---
Predecessors: [0x648]
Successors: []
---
0x65f PUSH1 0x0
0x661 DUP1
0x662 REVERT
---
0x65f: V583 = 0x0
0x662: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V292]

================================

Block 0x663
[0x663:0x678]
---
Predecessors: [0x648]
Successors: [0x679]
---
0x663 JUMPDEST
0x664 PUSH1 0x3
0x666 DUP1
0x667 SLOAD
0x668 PUSH3 0xff0000
0x66c NOT
0x66d AND
0x66e PUSH3 0x10000
0x672 DUP4
0x673 ISZERO
0x674 ISZERO
0x675 MUL
0x676 OR
0x677 SWAP1
0x678 SSTORE
---
0x663: JUMPDEST 
0x664: V584 = 0x3
0x667: V585 = S[0x3]
0x668: V586 = 0xff0000
0x66c: V587 = NOT 0xff0000
0x66d: V588 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V585
0x66e: V589 = 0x10000
0x673: V590 = ISZERO V292
0x674: V591 = ISZERO V590
0x675: V592 = MUL V591 0x10000
0x676: V593 = OR V592 V588
0x678: S[0x3] = V593
---
Entry stack: [V10, 0x2bc, V292]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2bc, V292]

================================

Block 0x679
[0x679:0x679]
---
Predecessors: [0x663]
Successors: [0x67a]
---
0x679 JUMPDEST
---
0x679: JUMPDEST 
---
Entry stack: [V10, 0x2bc, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V292]

================================

Block 0x67a
[0x67a:0x67c]
---
Predecessors: [0x679]
Successors: [0x2bc]
---
0x67a JUMPDEST
0x67b POP
0x67c JUMP
---
0x67a: JUMPDEST 
0x67c: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc, V292]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x67d
[0x67d:0x68b]
---
Predecessors: [0x36f]
Successors: [0x377]
---
0x67d JUMPDEST
0x67e PUSH1 0x1
0x680 SLOAD
0x681 PUSH1 0x1
0x683 PUSH1 0xa0
0x685 PUSH1 0x2
0x687 EXP
0x688 SUB
0x689 AND
0x68a DUP2
0x68b JUMP
---
0x67d: JUMPDEST 
0x67e: V594 = 0x1
0x680: V595 = S[0x1]
0x681: V596 = 0x1
0x683: V597 = 0xa0
0x685: V598 = 0x2
0x687: V599 = EXP 0x2 0xa0
0x688: V600 = SUB 0x10000000000000000000000000000000000000000 0x1
0x689: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V595
0x68b: JUMP 0x377
---
Entry stack: [V10, 0x377]
Stack pops: 1
Stack additions: [S0, V601]
Exit stack: [V10, 0x377, V601]

================================

Block 0x68c
[0x68c:0x6a2]
---
Predecessors: [0x39e]
Successors: [0x6a3, 0x6a7]
---
0x68c JUMPDEST
0x68d PUSH1 0x0
0x68f SLOAD
0x690 CALLER
0x691 PUSH1 0x1
0x693 PUSH1 0xa0
0x695 PUSH1 0x2
0x697 EXP
0x698 SUB
0x699 SWAP1
0x69a DUP2
0x69b AND
0x69c SWAP2
0x69d AND
0x69e EQ
0x69f PUSH2 0x6a7
0x6a2 JUMPI
---
0x68c: JUMPDEST 
0x68d: V602 = 0x0
0x68f: V603 = S[0x0]
0x690: V604 = CALLER
0x691: V605 = 0x1
0x693: V606 = 0xa0
0x695: V607 = 0x2
0x697: V608 = EXP 0x2 0xa0
0x698: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69b: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x69d: V611 = AND V603 0xffffffffffffffffffffffffffffffffffffffff
0x69e: V612 = EQ V611 V610
0x69f: V613 = 0x6a7
0x6a2: JUMPI 0x6a7 V612
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc]

================================

Block 0x6a3
[0x6a3:0x6a6]
---
Predecessors: [0x68c]
Successors: []
---
0x6a3 PUSH1 0x0
0x6a5 DUP1
0x6a6 REVERT
---
0x6a3: V614 = 0x0
0x6a6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc]

================================

Block 0x6a7
[0x6a7:0x6ba]
---
Predecessors: [0x68c]
Successors: [0x6bb, 0x6bf]
---
0x6a7 JUMPDEST
0x6a8 PUSH1 0x3
0x6aa SLOAD
0x6ab PUSH5 0x100000000
0x6b1 SWAP1
0x6b2 DIV
0x6b3 PUSH1 0xff
0x6b5 AND
0x6b6 ISZERO
0x6b7 PUSH2 0x6bf
0x6ba JUMPI
---
0x6a7: JUMPDEST 
0x6a8: V615 = 0x3
0x6aa: V616 = S[0x3]
0x6ab: V617 = 0x100000000
0x6b2: V618 = DIV V616 0x100000000
0x6b3: V619 = 0xff
0x6b5: V620 = AND 0xff V618
0x6b6: V621 = ISZERO V620
0x6b7: V622 = 0x6bf
0x6ba: JUMPI 0x6bf V621
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc]

================================

Block 0x6bb
[0x6bb:0x6be]
---
Predecessors: [0x6a7]
Successors: []
---
0x6bb PUSH1 0x0
0x6bd DUP1
0x6be REVERT
---
0x6bb: V623 = 0x0
0x6be: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc]

================================

Block 0x6bf
[0x6bf:0x712]
---
Predecessors: [0x6a7]
Successors: [0x713, 0x717]
---
0x6bf JUMPDEST
0x6c0 PUSH1 0x3
0x6c2 DUP1
0x6c3 SLOAD
0x6c4 PUSH1 0xff
0x6c6 NOT
0x6c7 PUSH5 0xff00000000
0x6cd NOT
0x6ce SWAP1
0x6cf SWAP2
0x6d0 AND
0x6d1 PUSH5 0x100000000
0x6d7 OR
0x6d8 AND
0x6d9 PUSH1 0x1
0x6db SWAP1
0x6dc DUP2
0x6dd OR
0x6de SWAP1
0x6df SWAP2
0x6e0 SSTORE
0x6e1 SLOAD
0x6e2 PUSH1 0x1
0x6e4 PUSH1 0xa0
0x6e6 PUSH1 0x2
0x6e8 EXP
0x6e9 SUB
0x6ea SWAP1
0x6eb DUP2
0x6ec AND
0x6ed SWAP1
0x6ee ADDRESS
0x6ef AND
0x6f0 BALANCE
0x6f1 DUP1
0x6f2 ISZERO
0x6f3 PUSH2 0x8fc
0x6f6 MUL
0x6f7 SWAP1
0x6f8 PUSH1 0x40
0x6fa MLOAD
0x6fb PUSH1 0x0
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 DUP1
0x701 DUP4
0x702 SUB
0x703 DUP2
0x704 DUP6
0x705 DUP9
0x706 DUP9
0x707 CALL
0x708 SWAP4
0x709 POP
0x70a POP
0x70b POP
0x70c POP
0x70d ISZERO
0x70e ISZERO
0x70f PUSH2 0x717
0x712 JUMPI
---
0x6bf: JUMPDEST 
0x6c0: V624 = 0x3
0x6c3: V625 = S[0x3]
0x6c4: V626 = 0xff
0x6c6: V627 = NOT 0xff
0x6c7: V628 = 0xff00000000
0x6cd: V629 = NOT 0xff00000000
0x6d0: V630 = AND V625 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff
0x6d1: V631 = 0x100000000
0x6d7: V632 = OR 0x100000000 V630
0x6d8: V633 = AND V632 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x6d9: V634 = 0x1
0x6dd: V635 = OR 0x1 V633
0x6e0: S[0x3] = V635
0x6e1: V636 = S[0x1]
0x6e2: V637 = 0x1
0x6e4: V638 = 0xa0
0x6e6: V639 = 0x2
0x6e8: V640 = EXP 0x2 0xa0
0x6e9: V641 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ec: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0x6ee: V643 = ADDRESS
0x6ef: V644 = AND V643 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V645 = BALANCE V644
0x6f2: V646 = ISZERO V645
0x6f3: V647 = 0x8fc
0x6f6: V648 = MUL 0x8fc V646
0x6f8: V649 = 0x40
0x6fa: V650 = M[0x40]
0x6fb: V651 = 0x0
0x6fd: V652 = 0x40
0x6ff: V653 = M[0x40]
0x702: V654 = SUB V650 V653
0x707: V655 = CALL V648 V642 V645 V653 V654 V653 0x0
0x70d: V656 = ISZERO V655
0x70e: V657 = ISZERO V656
0x70f: V658 = 0x717
0x712: JUMPI 0x717 V657
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc]

================================

Block 0x713
[0x713:0x716]
---
Predecessors: [0x6bf]
Successors: []
---
0x713 PUSH1 0x0
0x715 DUP1
0x716 REVERT
---
0x713: V659 = 0x0
0x716: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc]

================================

Block 0x717
[0x717:0x760]
---
Predecessors: [0x6bf]
Successors: [0x761]
---
0x717 JUMPDEST
0x718 PUSH1 0x1
0x71a SLOAD
0x71b PUSH32 0x6d7a0f89d001e4424785126b0ebd6289e5bbc7e83ffc2fba21830a5503b0f593
0x73c SWAP1
0x73d PUSH1 0x1
0x73f PUSH1 0xa0
0x741 PUSH1 0x2
0x743 EXP
0x744 SUB
0x745 AND
0x746 PUSH1 0x40
0x748 MLOAD
0x749 PUSH1 0x1
0x74b PUSH1 0xa0
0x74d PUSH1 0x2
0x74f EXP
0x750 SUB
0x751 SWAP1
0x752 SWAP2
0x753 AND
0x754 DUP2
0x755 MSTORE
0x756 PUSH1 0x20
0x758 ADD
0x759 PUSH1 0x40
0x75b MLOAD
0x75c DUP1
0x75d SWAP2
0x75e SUB
0x75f SWAP1
0x760 LOG1
---
0x717: JUMPDEST 
0x718: V660 = 0x1
0x71a: V661 = S[0x1]
0x71b: V662 = 0x6d7a0f89d001e4424785126b0ebd6289e5bbc7e83ffc2fba21830a5503b0f593
0x73d: V663 = 0x1
0x73f: V664 = 0xa0
0x741: V665 = 0x2
0x743: V666 = EXP 0x2 0xa0
0x744: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x745: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0x746: V669 = 0x40
0x748: V670 = M[0x40]
0x749: V671 = 0x1
0x74b: V672 = 0xa0
0x74d: V673 = 0x2
0x74f: V674 = EXP 0x2 0xa0
0x750: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x753: V676 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x755: M[V670] = V676
0x756: V677 = 0x20
0x758: V678 = ADD 0x20 V670
0x759: V679 = 0x40
0x75b: V680 = M[0x40]
0x75e: V681 = SUB V678 V680
0x760: LOG V680 V681 0x6d7a0f89d001e4424785126b0ebd6289e5bbc7e83ffc2fba21830a5503b0f593
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc]

================================

Block 0x761
[0x761:0x761]
---
Predecessors: [0x717]
Successors: [0x762]
---
0x761 JUMPDEST
---
0x761: JUMPDEST 
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc]

================================

Block 0x762
[0x762:0x763]
---
Predecessors: [0x761]
Successors: [0x2bc]
---
0x762 JUMPDEST
0x763 JUMP
---
0x762: JUMPDEST 
0x763: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x764
[0x764:0x77b]
---
Predecessors: [0x3b3]
Successors: [0x77c, 0x780]
---
0x764 JUMPDEST
0x765 PUSH1 0x3
0x767 SLOAD
0x768 PUSH1 0x0
0x76a SWAP1
0x76b DUP2
0x76c SWAP1
0x76d PUSH3 0x10000
0x771 SWAP1
0x772 DIV
0x773 PUSH1 0xff
0x775 AND
0x776 ISZERO
0x777 ISZERO
0x778 PUSH2 0x780
0x77b JUMPI
---
0x764: JUMPDEST 
0x765: V682 = 0x3
0x767: V683 = S[0x3]
0x768: V684 = 0x0
0x76d: V685 = 0x10000
0x772: V686 = DIV V683 0x10000
0x773: V687 = 0xff
0x775: V688 = AND 0xff V686
0x776: V689 = ISZERO V688
0x777: V690 = ISZERO V689
0x778: V691 = 0x780
0x77b: JUMPI 0x780 V690
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x2bc, 0x0, 0x0]

================================

Block 0x77c
[0x77c:0x77f]
---
Predecessors: [0x764]
Successors: []
---
0x77c PUSH1 0x0
0x77e DUP1
0x77f REVERT
---
0x77c: V692 = 0x0
0x77f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, 0x0, 0x0]

================================

Block 0x780
[0x780:0x795]
---
Predecessors: [0x764]
Successors: [0x796, 0x79a]
---
0x780 JUMPDEST
0x781 CALLER
0x782 SWAP2
0x783 POP
0x784 PUSH1 0x0
0x786 PUSH1 0x1
0x788 PUSH1 0xa0
0x78a PUSH1 0x2
0x78c EXP
0x78d SUB
0x78e ADDRESS
0x78f AND
0x790 BALANCE
0x791 GT
0x792 PUSH2 0x79a
0x795 JUMPI
---
0x780: JUMPDEST 
0x781: V693 = CALLER
0x784: V694 = 0x0
0x786: V695 = 0x1
0x788: V696 = 0xa0
0x78a: V697 = 0x2
0x78c: V698 = EXP 0x2 0xa0
0x78d: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78e: V700 = ADDRESS
0x78f: V701 = AND V700 0xffffffffffffffffffffffffffffffffffffffff
0x790: V702 = BALANCE V701
0x791: V703 = GT V702 0x0
0x792: V704 = 0x79a
0x795: JUMPI 0x79a V703
---
Entry stack: [V10, 0x2bc, 0x0, 0x0]
Stack pops: 2
Stack additions: [V693, S0]
Exit stack: [V10, 0x2bc, V693, 0x0]

================================

Block 0x796
[0x796:0x799]
---
Predecessors: [0x780]
Successors: []
---
0x796 PUSH1 0x0
0x798 DUP1
0x799 REVERT
---
0x796: V705 = 0x0
0x799: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V693, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V693, 0x0]

================================

Block 0x79a
[0x79a:0x7b8]
---
Predecessors: [0x780]
Successors: [0x7b9, 0x7bd]
---
0x79a JUMPDEST
0x79b PUSH1 0x1
0x79d PUSH1 0xa0
0x79f PUSH1 0x2
0x7a1 EXP
0x7a2 SUB
0x7a3 DUP3
0x7a4 AND
0x7a5 PUSH1 0x0
0x7a7 SWAP1
0x7a8 DUP2
0x7a9 MSTORE
0x7aa PUSH1 0x2
0x7ac PUSH1 0x20
0x7ae MSTORE
0x7af PUSH1 0x40
0x7b1 DUP2
0x7b2 SHA3
0x7b3 SLOAD
0x7b4 GT
0x7b5 PUSH2 0x7bd
0x7b8 JUMPI
---
0x79a: JUMPDEST 
0x79b: V706 = 0x1
0x79d: V707 = 0xa0
0x79f: V708 = 0x2
0x7a1: V709 = EXP 0x2 0xa0
0x7a2: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a4: V711 = AND V693 0xffffffffffffffffffffffffffffffffffffffff
0x7a5: V712 = 0x0
0x7a9: M[0x0] = V711
0x7aa: V713 = 0x2
0x7ac: V714 = 0x20
0x7ae: M[0x20] = 0x2
0x7af: V715 = 0x40
0x7b2: V716 = SHA3 0x0 0x40
0x7b3: V717 = S[V716]
0x7b4: V718 = GT V717 0x0
0x7b5: V719 = 0x7bd
0x7b8: JUMPI 0x7bd V718
---
Entry stack: [V10, 0x2bc, V693, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x2bc, V693, 0x0]

================================

Block 0x7b9
[0x7b9:0x7bc]
---
Predecessors: [0x79a]
Successors: []
---
0x7b9 PUSH1 0x0
0x7bb DUP1
0x7bc REVERT
---
0x7b9: V720 = 0x0
0x7bc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V693, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V693, 0x0]

================================

Block 0x7bd
[0x7bd:0x80e]
---
Predecessors: [0x79a]
Successors: [0x80f, 0x813]
---
0x7bd JUMPDEST
0x7be POP
0x7bf PUSH1 0x3
0x7c1 DUP1
0x7c2 SLOAD
0x7c3 PUSH1 0xff
0x7c5 NOT
0x7c6 AND
0x7c7 PUSH1 0x1
0x7c9 OR
0x7ca SWAP1
0x7cb SSTORE
0x7cc PUSH1 0x1
0x7ce PUSH1 0xa0
0x7d0 PUSH1 0x2
0x7d2 EXP
0x7d3 SUB
0x7d4 DUP2
0x7d5 AND
0x7d6 PUSH1 0x0
0x7d8 DUP2
0x7d9 DUP2
0x7da MSTORE
0x7db PUSH1 0x2
0x7dd PUSH1 0x20
0x7df MSTORE
0x7e0 PUSH1 0x40
0x7e2 DUP1
0x7e3 DUP3
0x7e4 SHA3
0x7e5 DUP1
0x7e6 SLOAD
0x7e7 SWAP3
0x7e8 SWAP1
0x7e9 SSTORE
0x7ea SWAP1
0x7eb SWAP2
0x7ec SWAP1
0x7ed DUP3
0x7ee ISZERO
0x7ef PUSH2 0x8fc
0x7f2 MUL
0x7f3 SWAP1
0x7f4 DUP4
0x7f5 SWAP1
0x7f6 MLOAD
0x7f7 PUSH1 0x0
0x7f9 PUSH1 0x40
0x7fb MLOAD
0x7fc DUP1
0x7fd DUP4
0x7fe SUB
0x7ff DUP2
0x800 DUP6
0x801 DUP9
0x802 DUP9
0x803 CALL
0x804 SWAP4
0x805 POP
0x806 POP
0x807 POP
0x808 POP
0x809 ISZERO
0x80a ISZERO
0x80b PUSH2 0x813
0x80e JUMPI
---
0x7bd: JUMPDEST 
0x7bf: V721 = 0x3
0x7c2: V722 = S[0x3]
0x7c3: V723 = 0xff
0x7c5: V724 = NOT 0xff
0x7c6: V725 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V722
0x7c7: V726 = 0x1
0x7c9: V727 = OR 0x1 V725
0x7cb: S[0x3] = V727
0x7cc: V728 = 0x1
0x7ce: V729 = 0xa0
0x7d0: V730 = 0x2
0x7d2: V731 = EXP 0x2 0xa0
0x7d3: V732 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d5: V733 = AND V693 0xffffffffffffffffffffffffffffffffffffffff
0x7d6: V734 = 0x0
0x7da: M[0x0] = V733
0x7db: V735 = 0x2
0x7dd: V736 = 0x20
0x7df: M[0x20] = 0x2
0x7e0: V737 = 0x40
0x7e4: V738 = SHA3 0x0 0x40
0x7e6: V739 = S[V738]
0x7e9: S[V738] = 0x0
0x7ee: V740 = ISZERO V739
0x7ef: V741 = 0x8fc
0x7f2: V742 = MUL 0x8fc V740
0x7f6: V743 = M[0x40]
0x7f7: V744 = 0x0
0x7f9: V745 = 0x40
0x7fb: V746 = M[0x40]
0x7fe: V747 = SUB V743 V746
0x803: V748 = CALL V742 V733 V739 V746 V747 V746 0x0
0x809: V749 = ISZERO V748
0x80a: V750 = ISZERO V749
0x80b: V751 = 0x813
0x80e: JUMPI 0x813 V750
---
Entry stack: [V10, 0x2bc, V693, 0x0]
Stack pops: 2
Stack additions: [S1, V739]
Exit stack: [V10, 0x2bc, V693, V739]

================================

Block 0x80f
[0x80f:0x812]
---
Predecessors: [0x7bd]
Successors: []
---
0x80f PUSH1 0x0
0x811 DUP1
0x812 REVERT
---
0x80f: V752 = 0x0
0x812: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V693, V739]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V693, V739]

================================

Block 0x813
[0x813:0x857]
---
Predecessors: [0x7bd]
Successors: [0x858]
---
0x813 JUMPDEST
0x814 PUSH32 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x835 DUP3
0x836 DUP3
0x837 PUSH1 0x40
0x839 MLOAD
0x83a PUSH1 0x1
0x83c PUSH1 0xa0
0x83e PUSH1 0x2
0x840 EXP
0x841 SUB
0x842 SWAP1
0x843 SWAP3
0x844 AND
0x845 DUP3
0x846 MSTORE
0x847 PUSH1 0x20
0x849 DUP3
0x84a ADD
0x84b MSTORE
0x84c PUSH1 0x40
0x84e SWAP1
0x84f DUP2
0x850 ADD
0x851 SWAP1
0x852 MLOAD
0x853 DUP1
0x854 SWAP2
0x855 SUB
0x856 SWAP1
0x857 LOG1
---
0x813: JUMPDEST 
0x814: V753 = 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x837: V754 = 0x40
0x839: V755 = M[0x40]
0x83a: V756 = 0x1
0x83c: V757 = 0xa0
0x83e: V758 = 0x2
0x840: V759 = EXP 0x2 0xa0
0x841: V760 = SUB 0x10000000000000000000000000000000000000000 0x1
0x844: V761 = AND V693 0xffffffffffffffffffffffffffffffffffffffff
0x846: M[V755] = V761
0x847: V762 = 0x20
0x84a: V763 = ADD V755 0x20
0x84b: M[V763] = V739
0x84c: V764 = 0x40
0x850: V765 = ADD 0x40 V755
0x852: V766 = M[0x40]
0x855: V767 = SUB V765 V766
0x857: LOG V766 V767 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
---
Entry stack: [V10, 0x2bc, V693, V739]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x2bc, V693, V739]

================================

Block 0x858
[0x858:0x85b]
---
Predecessors: [0x813]
Successors: [0x2bc]
---
0x858 JUMPDEST
0x859 POP
0x85a POP
0x85b JUMP
---
0x858: JUMPDEST 
0x85b: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc, V693, V739]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x85c
[0x85c:0x86c]
---
Predecessors: [0x3c8]
Successors: [0x336]
---
0x85c JUMPDEST
0x85d PUSH1 0x3
0x85f SLOAD
0x860 PUSH5 0x100000000
0x866 SWAP1
0x867 DIV
0x868 PUSH1 0xff
0x86a AND
0x86b DUP2
0x86c JUMP
---
0x85c: JUMPDEST 
0x85d: V768 = 0x3
0x85f: V769 = S[0x3]
0x860: V770 = 0x100000000
0x867: V771 = DIV V769 0x100000000
0x868: V772 = 0xff
0x86a: V773 = AND 0xff V771
0x86c: JUMP 0x336
---
Entry stack: [V10, 0x336]
Stack pops: 1
Stack additions: [S0, V773]
Exit stack: [V10, 0x336, V773]

================================

Block 0x86d
[0x86d:0x87b]
---
Predecessors: [0x3ef]
Successors: [0x377]
---
0x86d JUMPDEST
0x86e PUSH1 0x0
0x870 SLOAD
0x871 PUSH1 0x1
0x873 PUSH1 0xa0
0x875 PUSH1 0x2
0x877 EXP
0x878 SUB
0x879 AND
0x87a DUP2
0x87b JUMP
---
0x86d: JUMPDEST 
0x86e: V774 = 0x0
0x870: V775 = S[0x0]
0x871: V776 = 0x1
0x873: V777 = 0xa0
0x875: V778 = 0x2
0x877: V779 = EXP 0x2 0xa0
0x878: V780 = SUB 0x10000000000000000000000000000000000000000 0x1
0x879: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x87b: JUMP 0x377
---
Entry stack: [V10, 0x377]
Stack pops: 1
Stack additions: [S0, V781]
Exit stack: [V10, 0x377, V781]

================================

Block 0x87c
[0x87c:0x890]
---
Predecessors: [0x41e]
Successors: [0x336]
---
0x87c JUMPDEST
0x87d PUSH1 0x4
0x87f PUSH1 0x20
0x881 MSTORE
0x882 PUSH1 0x0
0x884 SWAP1
0x885 DUP2
0x886 MSTORE
0x887 PUSH1 0x40
0x889 SWAP1
0x88a SHA3
0x88b SLOAD
0x88c PUSH1 0xff
0x88e AND
0x88f DUP2
0x890 JUMP
---
0x87c: JUMPDEST 
0x87d: V782 = 0x4
0x87f: V783 = 0x20
0x881: M[0x20] = 0x4
0x882: V784 = 0x0
0x886: M[0x0] = V371
0x887: V785 = 0x40
0x88a: V786 = SHA3 0x0 0x40
0x88b: V787 = S[V786]
0x88c: V788 = 0xff
0x88e: V789 = AND 0xff V787
0x890: JUMP 0x336
---
Entry stack: [V10, 0x336, V371]
Stack pops: 2
Stack additions: [S1, V789]
Exit stack: [V10, 0x336, V789]

================================

Block 0x891
[0x891:0x8a7]
---
Predecessors: [0x451]
Successors: [0x8a8, 0x8ac]
---
0x891 JUMPDEST
0x892 PUSH1 0x0
0x894 SLOAD
0x895 CALLER
0x896 PUSH1 0x1
0x898 PUSH1 0xa0
0x89a PUSH1 0x2
0x89c EXP
0x89d SUB
0x89e SWAP1
0x89f DUP2
0x8a0 AND
0x8a1 SWAP2
0x8a2 AND
0x8a3 EQ
0x8a4 PUSH2 0x8ac
0x8a7 JUMPI
---
0x891: JUMPDEST 
0x892: V790 = 0x0
0x894: V791 = S[0x0]
0x895: V792 = CALLER
0x896: V793 = 0x1
0x898: V794 = 0xa0
0x89a: V795 = 0x2
0x89c: V796 = EXP 0x2 0xa0
0x89d: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a0: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V792
0x8a2: V799 = AND V791 0xffffffffffffffffffffffffffffffffffffffff
0x8a3: V800 = EQ V799 V798
0x8a4: V801 = 0x8ac
0x8a7: JUMPI 0x8ac V800
---
Entry stack: [V10, 0x2bc, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V394]

================================

Block 0x8a8
[0x8a8:0x8ab]
---
Predecessors: [0x891]
Successors: []
---
0x8a8 PUSH1 0x0
0x8aa DUP1
0x8ab REVERT
---
0x8a8: V802 = 0x0
0x8ab: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V394]

================================

Block 0x8ac
[0x8ac:0x907]
---
Predecessors: [0x891]
Successors: [0x908]
---
0x8ac JUMPDEST
0x8ad PUSH1 0x0
0x8af DUP1
0x8b0 SLOAD
0x8b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c6 NOT
0x8c7 AND
0x8c8 PUSH1 0x1
0x8ca PUSH1 0xa0
0x8cc PUSH1 0x2
0x8ce EXP
0x8cf SUB
0x8d0 DUP4
0x8d1 DUP2
0x8d2 AND
0x8d3 SWAP2
0x8d4 DUP3
0x8d5 OR
0x8d6 SWAP1
0x8d7 SWAP3
0x8d8 SSTORE
0x8d9 SWAP1
0x8da CALLER
0x8db AND
0x8dc PUSH32 0x70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364
0x8fd PUSH1 0x40
0x8ff MLOAD
0x900 PUSH1 0x40
0x902 MLOAD
0x903 DUP1
0x904 SWAP2
0x905 SUB
0x906 SWAP1
0x907 LOG3
---
0x8ac: JUMPDEST 
0x8ad: V803 = 0x0
0x8b0: V804 = S[0x0]
0x8b1: V805 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c6: V806 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8c7: V807 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V804
0x8c8: V808 = 0x1
0x8ca: V809 = 0xa0
0x8cc: V810 = 0x2
0x8ce: V811 = EXP 0x2 0xa0
0x8cf: V812 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d2: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x8d5: V814 = OR V813 V807
0x8d8: S[0x0] = V814
0x8da: V815 = CALLER
0x8db: V816 = AND V815 0xffffffffffffffffffffffffffffffffffffffff
0x8dc: V817 = 0x70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364
0x8fd: V818 = 0x40
0x8ff: V819 = M[0x40]
0x900: V820 = 0x40
0x902: V821 = M[0x40]
0x905: V822 = SUB V819 V821
0x907: LOG V821 V822 0x70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364 V816 V813
---
Entry stack: [V10, 0x2bc, V394]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2bc, V394]

================================

Block 0x908
[0x908:0x908]
---
Predecessors: [0x8ac]
Successors: [0x909]
---
0x908 JUMPDEST
---
0x908: JUMPDEST 
---
Entry stack: [V10, 0x2bc, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V394]

================================

Block 0x909
[0x909:0x90b]
---
Predecessors: [0x908]
Successors: [0x2bc]
---
0x909 JUMPDEST
0x90a POP
0x90b JUMP
---
0x909: JUMPDEST 
0x90b: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc, V394]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x90c
[0x90c:0x922]
---
Predecessors: [0x472]
Successors: [0x923, 0x927]
---
0x90c JUMPDEST
0x90d PUSH1 0x0
0x90f SLOAD
0x910 CALLER
0x911 PUSH1 0x1
0x913 PUSH1 0xa0
0x915 PUSH1 0x2
0x917 EXP
0x918 SUB
0x919 SWAP1
0x91a DUP2
0x91b AND
0x91c SWAP2
0x91d AND
0x91e EQ
0x91f PUSH2 0x927
0x922 JUMPI
---
0x90c: JUMPDEST 
0x90d: V823 = 0x0
0x90f: V824 = S[0x0]
0x910: V825 = CALLER
0x911: V826 = 0x1
0x913: V827 = 0xa0
0x915: V828 = 0x2
0x917: V829 = EXP 0x2 0xa0
0x918: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91b: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V825
0x91d: V832 = AND V824 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V833 = EQ V832 V831
0x91f: V834 = 0x927
0x922: JUMPI 0x927 V833
---
Entry stack: [V10, 0x2bc, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V404]

================================

Block 0x923
[0x923:0x926]
---
Predecessors: [0x90c]
Successors: []
---
0x923 PUSH1 0x0
0x925 DUP1
0x926 REVERT
---
0x923: V835 = 0x0
0x926: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V404]

================================

Block 0x927
[0x927:0x940]
---
Predecessors: [0x90c]
Successors: [0x941]
---
0x927 JUMPDEST
0x928 PUSH1 0x3
0x92a DUP1
0x92b SLOAD
0x92c PUSH5 0xff00000000
0x932 NOT
0x933 AND
0x934 PUSH5 0x100000000
0x93a DUP4
0x93b ISZERO
0x93c ISZERO
0x93d MUL
0x93e OR
0x93f SWAP1
0x940 SSTORE
---
0x927: JUMPDEST 
0x928: V836 = 0x3
0x92b: V837 = S[0x3]
0x92c: V838 = 0xff00000000
0x932: V839 = NOT 0xff00000000
0x933: V840 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V837
0x934: V841 = 0x100000000
0x93b: V842 = ISZERO V404
0x93c: V843 = ISZERO V842
0x93d: V844 = MUL V843 0x100000000
0x93e: V845 = OR V844 V840
0x940: S[0x3] = V845
---
Entry stack: [V10, 0x2bc, V404]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2bc, V404]

================================

Block 0x941
[0x941:0x941]
---
Predecessors: [0x927]
Successors: [0x942]
---
0x941 JUMPDEST
---
0x941: JUMPDEST 
---
Entry stack: [V10, 0x2bc, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V404]

================================

Block 0x942
[0x942:0x944]
---
Predecessors: [0x941]
Successors: [0x2bc]
---
0x942 JUMPDEST
0x943 POP
0x944 JUMP
---
0x942: JUMPDEST 
0x944: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc, V404]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x945
[0x945:0x952]
---
Predecessors: [0x48c]
Successors: [0x336]
---
0x945 JUMPDEST
0x946 PUSH1 0x3
0x948 SLOAD
0x949 PUSH2 0x100
0x94c SWAP1
0x94d DIV
0x94e PUSH1 0xff
0x950 AND
0x951 DUP2
0x952 JUMP
---
0x945: JUMPDEST 
0x946: V846 = 0x3
0x948: V847 = S[0x3]
0x949: V848 = 0x100
0x94d: V849 = DIV V847 0x100
0x94e: V850 = 0xff
0x950: V851 = AND 0xff V849
0x952: JUMP 0x336
---
Entry stack: [V10, 0x336]
Stack pops: 1
Stack additions: [S0, V851]
Exit stack: [V10, 0x336, V851]

================================

Block 0x953
[0x953:0x95b]
---
Predecessors: [0x4b3]
Successors: [0x336]
---
0x953 JUMPDEST
0x954 PUSH1 0x3
0x956 SLOAD
0x957 PUSH1 0xff
0x959 AND
0x95a DUP2
0x95b JUMP
---
0x953: JUMPDEST 
0x954: V852 = 0x3
0x956: V853 = S[0x3]
0x957: V854 = 0xff
0x959: V855 = AND 0xff V853
0x95b: JUMP 0x336
---
Entry stack: [V10, 0x336]
Stack pops: 1
Stack additions: [S0, V855]
Exit stack: [V10, 0x336, V855]

================================

Block 0x95c
[0x95c:0x96b]
---
Predecessors: [0x4da]
Successors: [0x336]
---
0x95c JUMPDEST
0x95d PUSH1 0x3
0x95f SLOAD
0x960 PUSH4 0x1000000
0x965 SWAP1
0x966 DIV
0x967 PUSH1 0xff
0x969 AND
0x96a DUP2
0x96b JUMP
---
0x95c: JUMPDEST 
0x95d: V856 = 0x3
0x95f: V857 = S[0x3]
0x960: V858 = 0x1000000
0x966: V859 = DIV V857 0x1000000
0x967: V860 = 0xff
0x969: V861 = AND 0xff V859
0x96b: JUMP 0x336
---
Entry stack: [V10, 0x336]
Stack pops: 1
Stack additions: [S0, V861]
Exit stack: [V10, 0x336, V861]

================================

Block 0x96c
[0x96c:0x982]
---
Predecessors: [0x4f6]
Successors: [0x983, 0x987]
---
0x96c JUMPDEST
0x96d PUSH1 0x3
0x96f SLOAD
0x970 PUSH1 0x0
0x972 SWAP1
0x973 DUP2
0x974 SWAP1
0x975 PUSH2 0x100
0x978 SWAP1
0x979 DIV
0x97a PUSH1 0xff
0x97c AND
0x97d ISZERO
0x97e ISZERO
0x97f PUSH2 0x987
0x982 JUMPI
---
0x96c: JUMPDEST 
0x96d: V862 = 0x3
0x96f: V863 = S[0x3]
0x970: V864 = 0x0
0x975: V865 = 0x100
0x979: V866 = DIV V863 0x100
0x97a: V867 = 0xff
0x97c: V868 = AND 0xff V866
0x97d: V869 = ISZERO V868
0x97e: V870 = ISZERO V869
0x97f: V871 = 0x987
0x982: JUMPI 0x987 V870
---
Entry stack: [V10, 0x2bc]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x2bc, 0x0, 0x0]

================================

Block 0x983
[0x983:0x986]
---
Predecessors: [0x96c]
Successors: []
---
0x983 PUSH1 0x0
0x985 DUP1
0x986 REVERT
---
0x983: V872 = 0x0
0x986: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, 0x0, 0x0]

================================

Block 0x987
[0x987:0x999]
---
Predecessors: [0x96c]
Successors: [0x99a, 0x99e]
---
0x987 JUMPDEST
0x988 PUSH1 0x3
0x98a SLOAD
0x98b PUSH4 0x1000000
0x990 SWAP1
0x991 DIV
0x992 PUSH1 0xff
0x994 AND
0x995 ISZERO
0x996 PUSH2 0x99e
0x999 JUMPI
---
0x987: JUMPDEST 
0x988: V873 = 0x3
0x98a: V874 = S[0x3]
0x98b: V875 = 0x1000000
0x991: V876 = DIV V874 0x1000000
0x992: V877 = 0xff
0x994: V878 = AND 0xff V876
0x995: V879 = ISZERO V878
0x996: V880 = 0x99e
0x999: JUMPI 0x99e V879
---
Entry stack: [V10, 0x2bc, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, 0x0, 0x0]

================================

Block 0x99a
[0x99a:0x99d]
---
Predecessors: [0x987]
Successors: []
---
0x99a PUSH1 0x0
0x99c DUP1
0x99d REVERT
---
0x99a: V881 = 0x0
0x99d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, 0x0, 0x0]

================================

Block 0x99e
[0x99e:0x9bc]
---
Predecessors: [0x987]
Successors: [0x9bd, 0x9c1]
---
0x99e JUMPDEST
0x99f PUSH1 0x1
0x9a1 PUSH1 0xa0
0x9a3 PUSH1 0x2
0x9a5 EXP
0x9a6 SUB
0x9a7 ADDRESS
0x9a8 AND
0x9a9 BALANCE
0x9aa SWAP2
0x9ab POP
0x9ac PUSH9 0xa2a15d09519be00000
0x9b6 DUP3
0x9b7 GT
0x9b8 ISZERO
0x9b9 PUSH2 0x9c1
0x9bc JUMPI
---
0x99e: JUMPDEST 
0x99f: V882 = 0x1
0x9a1: V883 = 0xa0
0x9a3: V884 = 0x2
0x9a5: V885 = EXP 0x2 0xa0
0x9a6: V886 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a7: V887 = ADDRESS
0x9a8: V888 = AND V887 0xffffffffffffffffffffffffffffffffffffffff
0x9a9: V889 = BALANCE V888
0x9ac: V890 = 0xa2a15d09519be00000
0x9b7: V891 = GT V889 0xa2a15d09519be00000
0x9b8: V892 = ISZERO V891
0x9b9: V893 = 0x9c1
0x9bc: JUMPI 0x9c1 V892
---
Entry stack: [V10, 0x2bc, 0x0, 0x0]
Stack pops: 2
Stack additions: [V889, S0]
Exit stack: [V10, 0x2bc, V889, 0x0]

================================

Block 0x9bd
[0x9bd:0x9c0]
---
Predecessors: [0x99e]
Successors: []
---
0x9bd PUSH1 0x0
0x9bf DUP1
0x9c0 REVERT
---
0x9bd: V894 = 0x0
0x9c0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V889, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V889, 0x0]

================================

Block 0x9c1
[0x9c1:0x9cc]
---
Predecessors: [0x99e]
Successors: [0x9cd, 0x9d1]
---
0x9c1 JUMPDEST
0x9c2 PUSH1 0x3
0x9c4 SLOAD
0x9c5 PUSH1 0xff
0x9c7 AND
0x9c8 ISZERO
0x9c9 PUSH2 0x9d1
0x9cc JUMPI
---
0x9c1: JUMPDEST 
0x9c2: V895 = 0x3
0x9c4: V896 = S[0x3]
0x9c5: V897 = 0xff
0x9c7: V898 = AND 0xff V896
0x9c8: V899 = ISZERO V898
0x9c9: V900 = 0x9d1
0x9cc: JUMPI 0x9d1 V899
---
Entry stack: [V10, 0x2bc, V889, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V889, 0x0]

================================

Block 0x9cd
[0x9cd:0x9d0]
---
Predecessors: [0x9c1]
Successors: []
---
0x9cd PUSH1 0x0
0x9cf DUP1
0x9d0 REVERT
---
0x9cd: V901 = 0x0
0x9d0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V889, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V889, 0x0]

================================

Block 0x9d1
[0x9d1:0x9f5]
---
Predecessors: [0x9c1]
Successors: [0x9f6, 0x9fa]
---
0x9d1 JUMPDEST
0x9d2 POP
0x9d3 CALLER
0x9d4 PUSH1 0x1
0x9d6 PUSH1 0xa0
0x9d8 PUSH1 0x2
0x9da EXP
0x9db SUB
0x9dc DUP2
0x9dd AND
0x9de PUSH1 0x0
0x9e0 SWAP1
0x9e1 DUP2
0x9e2 MSTORE
0x9e3 PUSH1 0x4
0x9e5 PUSH1 0x20
0x9e7 MSTORE
0x9e8 PUSH1 0x40
0x9ea SWAP1
0x9eb SHA3
0x9ec SLOAD
0x9ed PUSH1 0xff
0x9ef AND
0x9f0 ISZERO
0x9f1 ISZERO
0x9f2 PUSH2 0x9fa
0x9f5 JUMPI
---
0x9d1: JUMPDEST 
0x9d3: V902 = CALLER
0x9d4: V903 = 0x1
0x9d6: V904 = 0xa0
0x9d8: V905 = 0x2
0x9da: V906 = EXP 0x2 0xa0
0x9db: V907 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9dd: V908 = AND V902 0xffffffffffffffffffffffffffffffffffffffff
0x9de: V909 = 0x0
0x9e2: M[0x0] = V908
0x9e3: V910 = 0x4
0x9e5: V911 = 0x20
0x9e7: M[0x20] = 0x4
0x9e8: V912 = 0x40
0x9eb: V913 = SHA3 0x0 0x40
0x9ec: V914 = S[V913]
0x9ed: V915 = 0xff
0x9ef: V916 = AND 0xff V914
0x9f0: V917 = ISZERO V916
0x9f1: V918 = ISZERO V917
0x9f2: V919 = 0x9fa
0x9f5: JUMPI 0x9fa V918
---
Entry stack: [V10, 0x2bc, V889, 0x0]
Stack pops: 1
Stack additions: [V902]
Exit stack: [V10, 0x2bc, V889, V902]

================================

Block 0x9f6
[0x9f6:0x9f9]
---
Predecessors: [0x9d1]
Successors: []
---
0x9f6 PUSH1 0x0
0x9f8 DUP1
0x9f9 REVERT
---
0x9f6: V920 = 0x0
0x9f9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V889, V902]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V889, V902]

================================

Block 0x9fa
[0x9fa:0xa2d]
---
Predecessors: [0x9d1]
Successors: [0x51a]
---
0x9fa JUMPDEST
0x9fb PUSH1 0x1
0x9fd PUSH1 0xa0
0x9ff PUSH1 0x2
0xa01 EXP
0xa02 SUB
0xa03 DUP2
0xa04 AND
0xa05 PUSH1 0x0
0xa07 SWAP1
0xa08 DUP2
0xa09 MSTORE
0xa0a PUSH1 0x2
0xa0c PUSH1 0x20
0xa0e MSTORE
0xa0f PUSH1 0x40
0xa11 SWAP1
0xa12 SHA3
0xa13 SLOAD
0xa14 PUSH9 0x1b1ae4d6e2ef500000
0xa1e SWAP1
0xa1f PUSH2 0xa2e
0xa22 SWAP1
0xa23 CALLVALUE
0xa24 PUSH4 0xffffffff
0xa29 PUSH2 0x51a
0xa2c AND
0xa2d JUMP
---
0x9fa: JUMPDEST 
0x9fb: V921 = 0x1
0x9fd: V922 = 0xa0
0x9ff: V923 = 0x2
0xa01: V924 = EXP 0x2 0xa0
0xa02: V925 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa04: V926 = AND V902 0xffffffffffffffffffffffffffffffffffffffff
0xa05: V927 = 0x0
0xa09: M[0x0] = V926
0xa0a: V928 = 0x2
0xa0c: V929 = 0x20
0xa0e: M[0x20] = 0x2
0xa0f: V930 = 0x40
0xa12: V931 = SHA3 0x0 0x40
0xa13: V932 = S[V931]
0xa14: V933 = 0x1b1ae4d6e2ef500000
0xa1f: V934 = 0xa2e
0xa23: V935 = CALLVALUE
0xa24: V936 = 0xffffffff
0xa29: V937 = 0x51a
0xa2c: V938 = AND 0x51a 0xffffffff
0xa2d: JUMP 0x51a
---
Entry stack: [V10, 0x2bc, V889, V902]
Stack pops: 1
Stack additions: [S0, 0x1b1ae4d6e2ef500000, 0xa2e, V932, V935]
Exit stack: [V10, 0x2bc, V889, V902, 0x1b1ae4d6e2ef500000, 0xa2e, V932, V935]

================================

Block 0xa2e
[0xa2e:0xa34]
---
Predecessors: [0x52d]
Successors: [0xa35, 0xa39]
---
0xa2e JUMPDEST
0xa2f GT
0xa30 ISZERO
0xa31 PUSH2 0xa39
0xa34 JUMPI
---
0xa2e: JUMPDEST 
0xa2f: V939 = GT S0 S1
0xa30: V940 = ISZERO V939
0xa31: V941 = 0xa39
0xa34: JUMPI 0xa39 V940
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S4, S3, S2]

================================

Block 0xa35
[0xa35:0xa38]
---
Predecessors: [0xa2e]
Successors: []
---
0xa35 PUSH1 0x0
0xa37 DUP1
0xa38 REVERT
---
0xa35: V942 = 0x0
0xa38: REVERT 0x0 0x0
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0xa39
[0xa39:0xa4a]
---
Predecessors: [0xa2e]
Successors: [0xa4b, 0xa4f]
---
0xa39 JUMPDEST
0xa3a PUSH9 0x1b1ae4d6e2ef500000
0xa44 CALLVALUE
0xa45 GT
0xa46 ISZERO
0xa47 PUSH2 0xa4f
0xa4a JUMPI
---
0xa39: JUMPDEST 
0xa3a: V943 = 0x1b1ae4d6e2ef500000
0xa44: V944 = CALLVALUE
0xa45: V945 = GT V944 0x1b1ae4d6e2ef500000
0xa46: V946 = ISZERO V945
0xa47: V947 = 0xa4f
0xa4a: JUMPI 0xa4f V946
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0xa4b
[0xa4b:0xa4e]
---
Predecessors: [0xa39]
Successors: []
---
0xa4b PUSH1 0x0
0xa4d DUP1
0xa4e REVERT
---
0xa4b: V948 = 0x0
0xa4e: REVERT 0x0 0x0
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0xa4f
[0xa4f:0xa77]
---
Predecessors: [0xa39]
Successors: [0x51a]
---
0xa4f JUMPDEST
0xa50 PUSH1 0x1
0xa52 PUSH1 0xa0
0xa54 PUSH1 0x2
0xa56 EXP
0xa57 SUB
0xa58 DUP2
0xa59 AND
0xa5a PUSH1 0x0
0xa5c SWAP1
0xa5d DUP2
0xa5e MSTORE
0xa5f PUSH1 0x2
0xa61 PUSH1 0x20
0xa63 MSTORE
0xa64 PUSH1 0x40
0xa66 SWAP1
0xa67 SHA3
0xa68 SLOAD
0xa69 PUSH2 0xa78
0xa6c SWAP1
0xa6d CALLVALUE
0xa6e PUSH4 0xffffffff
0xa73 PUSH2 0x51a
0xa76 AND
0xa77 JUMP
---
0xa4f: JUMPDEST 
0xa50: V949 = 0x1
0xa52: V950 = 0xa0
0xa54: V951 = 0x2
0xa56: V952 = EXP 0x2 0xa0
0xa57: V953 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa59: V954 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xa5a: V955 = 0x0
0xa5e: M[0x0] = V954
0xa5f: V956 = 0x2
0xa61: V957 = 0x20
0xa63: M[0x20] = 0x2
0xa64: V958 = 0x40
0xa67: V959 = SHA3 0x0 0x40
0xa68: V960 = S[V959]
0xa69: V961 = 0xa78
0xa6d: V962 = CALLVALUE
0xa6e: V963 = 0xffffffff
0xa73: V964 = 0x51a
0xa76: V965 = AND 0x51a 0xffffffff
0xa77: JUMP 0x51a
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0xa78, V960, V962]
Exit stack: [V10, S2, S1, S0, 0xa78, V960, V962]

================================

Block 0xa78
[0xa78:0xaa2]
---
Predecessors: [0x52d]
Successors: [0xaa3, 0xab6]
---
0xa78 JUMPDEST
0xa79 PUSH1 0x1
0xa7b PUSH1 0xa0
0xa7d PUSH1 0x2
0xa7f EXP
0xa80 SUB
0xa81 DUP3
0xa82 AND
0xa83 PUSH1 0x0
0xa85 SWAP1
0xa86 DUP2
0xa87 MSTORE
0xa88 PUSH1 0x2
0xa8a PUSH1 0x20
0xa8c MSTORE
0xa8d PUSH1 0x40
0xa8f SWAP1
0xa90 SHA3
0xa91 SSTORE
0xa92 PUSH9 0xa2a15d09519be00000
0xa9c DUP3
0xa9d EQ
0xa9e ISZERO
0xa9f PUSH2 0xab6
0xaa2 JUMPI
---
0xa78: JUMPDEST 
0xa79: V966 = 0x1
0xa7b: V967 = 0xa0
0xa7d: V968 = 0x2
0xa7f: V969 = EXP 0x2 0xa0
0xa80: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa82: V971 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xa83: V972 = 0x0
0xa87: M[0x0] = V971
0xa88: V973 = 0x2
0xa8a: V974 = 0x20
0xa8c: M[0x20] = 0x2
0xa8d: V975 = 0x40
0xa90: V976 = SHA3 0x0 0x40
0xa91: S[V976] = S0
0xa92: V977 = 0xa2a15d09519be00000
0xa9d: V978 = EQ S2 0xa2a15d09519be00000
0xa9e: V979 = ISZERO V978
0xa9f: V980 = 0xab6
0xaa2: JUMPI 0xab6 V979
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V10, S4, S3, S2, S1]

================================

Block 0xaa3
[0xaa3:0xab5]
---
Predecessors: [0xa78]
Successors: [0xab6]
---
0xaa3 PUSH1 0x3
0xaa5 DUP1
0xaa6 SLOAD
0xaa7 PUSH4 0xff000000
0xaac NOT
0xaad AND
0xaae PUSH4 0x1000000
0xab3 OR
0xab4 SWAP1
0xab5 SSTORE
---
0xaa3: V981 = 0x3
0xaa6: V982 = S[0x3]
0xaa7: V983 = 0xff000000
0xaac: V984 = NOT 0xff000000
0xaad: V985 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff V982
0xaae: V986 = 0x1000000
0xab3: V987 = OR 0x1000000 V985
0xab5: S[0x3] = V987
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0xab6
[0xab6:0xafa]
---
Predecessors: [0xa78, 0xaa3]
Successors: [0xafb]
---
0xab6 JUMPDEST
0xab7 PUSH32 0xc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3
0xad8 DUP2
0xad9 CALLVALUE
0xada PUSH1 0x40
0xadc MLOAD
0xadd PUSH1 0x1
0xadf PUSH1 0xa0
0xae1 PUSH1 0x2
0xae3 EXP
0xae4 SUB
0xae5 SWAP1
0xae6 SWAP3
0xae7 AND
0xae8 DUP3
0xae9 MSTORE
0xaea PUSH1 0x20
0xaec DUP3
0xaed ADD
0xaee MSTORE
0xaef PUSH1 0x40
0xaf1 SWAP1
0xaf2 DUP2
0xaf3 ADD
0xaf4 SWAP1
0xaf5 MLOAD
0xaf6 DUP1
0xaf7 SWAP2
0xaf8 SUB
0xaf9 SWAP1
0xafa LOG1
---
0xab6: JUMPDEST 
0xab7: V988 = 0xc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3
0xad9: V989 = CALLVALUE
0xada: V990 = 0x40
0xadc: V991 = M[0x40]
0xadd: V992 = 0x1
0xadf: V993 = 0xa0
0xae1: V994 = 0x2
0xae3: V995 = EXP 0x2 0xa0
0xae4: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae7: V997 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xae9: M[V991] = V997
0xaea: V998 = 0x20
0xaed: V999 = ADD V991 0x20
0xaee: M[V999] = V989
0xaef: V1000 = 0x40
0xaf3: V1001 = ADD 0x40 V991
0xaf5: V1002 = M[0x40]
0xaf8: V1003 = SUB V1001 V1002
0xafa: LOG V1002 V1003 0xc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0xafb
[0xafb:0xafe]
---
Predecessors: [0xab6]
Successors: [0x2bc]
---
0xafb JUMPDEST
0xafc POP
0xafd POP
0xafe JUMP
---
0xafb: JUMPDEST 
0xafe: JUMP S2
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Block 0xaff
[0xaff:0xb15]
---
Predecessors: [0x50b]
Successors: [0xb16, 0xb1a]
---
0xaff JUMPDEST
0xb00 PUSH1 0x0
0xb02 SLOAD
0xb03 CALLER
0xb04 PUSH1 0x1
0xb06 PUSH1 0xa0
0xb08 PUSH1 0x2
0xb0a EXP
0xb0b SUB
0xb0c SWAP1
0xb0d DUP2
0xb0e AND
0xb0f SWAP2
0xb10 AND
0xb11 EQ
0xb12 PUSH2 0xb1a
0xb15 JUMPI
---
0xaff: JUMPDEST 
0xb00: V1004 = 0x0
0xb02: V1005 = S[0x0]
0xb03: V1006 = CALLER
0xb04: V1007 = 0x1
0xb06: V1008 = 0xa0
0xb08: V1009 = 0x2
0xb0a: V1010 = EXP 0x2 0xa0
0xb0b: V1011 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0e: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff V1006
0xb10: V1013 = AND V1005 0xffffffffffffffffffffffffffffffffffffffff
0xb11: V1014 = EQ V1013 V1012
0xb12: V1015 = 0xb1a
0xb15: JUMPI 0xb1a V1014
---
Entry stack: [V10, 0x2bc, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V461]

================================

Block 0xb16
[0xb16:0xb19]
---
Predecessors: [0xaff]
Successors: []
---
0xb16 PUSH1 0x0
0xb18 DUP1
0xb19 REVERT
---
0xb16: V1016 = 0x0
0xb19: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2bc, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V461]

================================

Block 0xb1a
[0xb1a:0xb2d]
---
Predecessors: [0xaff]
Successors: [0xb2e]
---
0xb1a JUMPDEST
0xb1b PUSH1 0x3
0xb1d DUP1
0xb1e SLOAD
0xb1f PUSH2 0xff00
0xb22 NOT
0xb23 AND
0xb24 PUSH2 0x100
0xb27 DUP4
0xb28 ISZERO
0xb29 ISZERO
0xb2a MUL
0xb2b OR
0xb2c SWAP1
0xb2d SSTORE
---
0xb1a: JUMPDEST 
0xb1b: V1017 = 0x3
0xb1e: V1018 = S[0x3]
0xb1f: V1019 = 0xff00
0xb22: V1020 = NOT 0xff00
0xb23: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1018
0xb24: V1022 = 0x100
0xb28: V1023 = ISZERO V461
0xb29: V1024 = ISZERO V1023
0xb2a: V1025 = MUL V1024 0x100
0xb2b: V1026 = OR V1025 V1021
0xb2d: S[0x3] = V1026
---
Entry stack: [V10, 0x2bc, V461]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2bc, V461]

================================

Block 0xb2e
[0xb2e:0xb2e]
---
Predecessors: [0xb1a]
Successors: [0xb2f]
---
0xb2e JUMPDEST
---
0xb2e: JUMPDEST 
---
Entry stack: [V10, 0x2bc, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2bc, V461]

================================

Block 0xb2f
[0xb2f:0xb31]
---
Predecessors: [0xb2e]
Successors: [0x2bc]
---
0xb2f JUMPDEST
0xb30 POP
0xb31 JUMP
---
0xb2f: JUMPDEST 
0xb31: JUMP 0x2bc
---
Entry stack: [V10, 0x2bc, V461]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xb32
[0xb32:0xb5d]
---
Predecessors: []
Successors: []
---
0xb32 STOP
0xb33 LOG1
0xb34 PUSH6 0x627a7a723058
0xb3b SHA3
0xb3c MISSING 0x24
0xb3d PUSH29 0xc5feae54e0c3ad20e375247a75d6ef7b8f62ef30af93b358ae68bdc09c
0xb5b SMOD
0xb5c STOP
0xb5d MISSING 0x29
---
0xb32: STOP 
0xb33: LOG S0 S1 S2
0xb34: V1027 = 0x627a7a723058
0xb3b: V1028 = SHA3 0x627a7a723058 S3
0xb3c: MISSING 0x24
0xb3d: V1029 = 0xc5feae54e0c3ad20e375247a75d6ef7b8f62ef30af93b358ae68bdc09c
0xb5b: V1030 = SMOD 0xc5feae54e0c3ad20e375247a75d6ef7b8f62ef30af93b358ae68bdc09c S0
0xb5c: STOP 
0xb5d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1028, V1030]
Exit stack: []

================================

Function 0:
Public function signature: 0xd392cd9
Entry block: 0x298
Exit block: 0x2bc
Body: 0x298, 0x29f, 0x2a3, 0x2bc, 0x534, 0x54b, 0x54f, 0x5bd, 0x5be

Function 1:
Public function signature: 0x14807045
Entry block: 0x2be
Exit block: 0x2bc
Body: 0x2bc, 0x2be, 0x2c5, 0x2c9, 0x5c2, 0x5d9, 0x5dd, 0x5f5, 0x5f6

Function 2:
Public function signature: 0x27e235e3
Entry block: 0x2d8
Exit block: 0x2f7
Body: 0x2d8, 0x2df, 0x2e3, 0x2f7, 0x5f9

Function 3:
Public function signature: 0x2f8c98c2
Entry block: 0x309
Exit block: 0x2bc
Body: 0x2bc, 0x309, 0x310, 0x314, 0x60b, 0x622, 0x626, 0x635, 0x636

Function 4:
Public function signature: 0x376ff7f0
Entry block: 0x323
Exit block: 0x336
Body: 0x323, 0x32a, 0x32e, 0x336, 0x639

Function 5:
Public function signature: 0x42317bbc
Entry block: 0x34a
Exit block: 0x2bc
Body: 0x2bc, 0x34a, 0x351, 0x355, 0x648, 0x65f, 0x663, 0x679, 0x67a

Function 6:
Public function signature: 0x4ccbf17b
Entry block: 0x364
Exit block: 0x377
Body: 0x364, 0x36b, 0x36f, 0x377, 0x67d

Function 7:
Public function signature: 0x51327a6a
Entry block: 0x393
Exit block: 0x2bc
Body: 0x2bc, 0x393, 0x39a, 0x39e, 0x68c, 0x6a3, 0x6a7, 0x6bb, 0x6bf, 0x713, 0x717, 0x761, 0x762

Function 8:
Public function signature: 0x590e1ae3
Entry block: 0x3a8
Exit block: 0x2bc
Body: 0x2bc, 0x3a8, 0x3af, 0x3b3, 0x764, 0x77c, 0x780, 0x796, 0x79a, 0x7b9, 0x7bd, 0x80f, 0x813, 0x858

Function 9:
Public function signature: 0x8d4e4083
Entry block: 0x3bd
Exit block: 0x336
Body: 0x336, 0x3bd, 0x3c4, 0x3c8, 0x85c

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x3e4
Exit block: 0x377
Body: 0x377, 0x3e4, 0x3eb, 0x3ef, 0x86d

Function 11:
Public function signature: 0x9b19251a
Entry block: 0x413
Exit block: 0x336
Body: 0x336, 0x413, 0x41a, 0x41e, 0x87c

Function 12:
Public function signature: 0xa6f9dae1
Entry block: 0x446
Exit block: 0x2bc
Body: 0x2bc, 0x446, 0x44d, 0x451, 0x891, 0x8a8, 0x8ac, 0x908, 0x909

Function 13:
Public function signature: 0xbb1a5aad
Entry block: 0x467
Exit block: 0x2bc
Body: 0x2bc, 0x467, 0x46e, 0x472, 0x90c, 0x923, 0x927, 0x941, 0x942

Function 14:
Public function signature: 0xbb8e8f46
Entry block: 0x481
Exit block: 0x336
Body: 0x336, 0x481, 0x488, 0x48c, 0x945

Function 15:
Public function signature: 0xcb11526d
Entry block: 0x4a8
Exit block: 0x336
Body: 0x336, 0x4a8, 0x4af, 0x4b3, 0x953

Function 16:
Public function signature: 0xd7e25c36
Entry block: 0x4cf
Exit block: 0x336
Body: 0x336, 0x4cf, 0x4d6, 0x4da, 0x95c

Function 17:
Public function signature: 0xe8b5e51f
Entry block: 0x4f6
Exit block: 0x2bc
Body: 0x2bc, 0x4f6, 0x96c, 0x983, 0x987, 0x99a, 0x99e, 0x9bd, 0x9c1, 0x9cd, 0x9d1, 0x9f6, 0x9fa, 0xa2e, 0xa35, 0xa39, 0xa4b, 0xa4f, 0xa78, 0xaa3, 0xab6, 0xafb

Function 18:
Public function signature: 0xf52343f4
Entry block: 0x500
Exit block: 0x2bc
Body: 0x2bc, 0x500, 0x507, 0x50b, 0xaff, 0xb16, 0xb1a, 0xb2e, 0xb2f

Function 19:
Public fallback function
Entry block: 0x104
Exit block: 0x294
Body: 0x104, 0x105, 0x11c, 0x120, 0x133, 0x137, 0x156, 0x15a, 0x166, 0x16a, 0x18f, 0x193, 0x1c7, 0x1ce, 0x1d2, 0x1e4, 0x1e8, 0x211, 0x23c, 0x24f, 0x294

Function 20:
Private function
Entry block: 0x51a
Exit block: 0x52d
Body: 0x51a, 0x529, 0x52d

