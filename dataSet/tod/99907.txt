Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x83197ef0
0x34 EQ
0x35 PUSH2 0x5f
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x83197ef0
0x34: V9 = EQ 0x83197ef0 V7
0x35: V10 = 0x5f
0x38: JUMPI 0x5f V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x74]
---
0x39 DUP1
0x3a PUSH4 0x8da5cb5b
0x3f EQ
0x40 PUSH2 0x74
0x43 JUMPI
---
0x3a: V11 = 0x8da5cb5b
0x3f: V12 = EQ 0x8da5cb5b V7
0x40: V13 = 0x74
0x43: JUMPI 0x74 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xc9]
---
0x44 DUP1
0x45 PUSH4 0xf2fde38b
0x4a EQ
0x4b PUSH2 0xc9
0x4e JUMPI
---
0x45: V14 = 0xf2fde38b
0x4a: V15 = EQ 0xf2fde38b V7
0x4b: V16 = 0xc9
0x4e: JUMPI 0xc9 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x102]
---
0x4f DUP1
0x50 PUSH4 0xf5074f41
0x55 EQ
0x56 PUSH2 0x102
0x59 JUMPI
---
0x50: V17 = 0xf5074f41
0x55: V18 = EQ 0xf5074f41 V7
0x56: V19 = 0x102
0x59: JUMPI 0x102 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5e]
---
Predecessors: [0x4f]
Successors: []
---
0x5a JUMPDEST
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5a: JUMPDEST 
0x5b: V20 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0x65]
---
Predecessors: [0x0]
Successors: [0x66, 0x6a]
---
0x5f JUMPDEST
0x60 CALLVALUE
0x61 ISZERO
0x62 PUSH2 0x6a
0x65 JUMPI
---
0x5f: JUMPDEST 
0x60: V21 = CALLVALUE
0x61: V22 = ISZERO V21
0x62: V23 = 0x6a
0x65: JUMPI 0x6a V22
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x66
[0x66:0x69]
---
Predecessors: [0x5f]
Successors: []
---
0x66 PUSH1 0x0
0x68 DUP1
0x69 REVERT
---
0x66: V24 = 0x0
0x69: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6a
[0x6a:0x71]
---
Predecessors: [0x5f]
Successors: [0x13b]
---
0x6a JUMPDEST
0x6b PUSH2 0x72
0x6e PUSH2 0x13b
0x71 JUMP
---
0x6a: JUMPDEST 
0x6b: V25 = 0x72
0x6e: V26 = 0x13b
0x71: JUMP 0x13b
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x72]
Exit stack: [V7, 0x72]

================================

Block 0x72
[0x72:0x73]
---
Predecessors: []
Successors: []
---
0x72 JUMPDEST
0x73 STOP
---
0x72: JUMPDEST 
0x73: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x74
[0x74:0x7a]
---
Predecessors: [0x39]
Successors: [0x7b, 0x7f]
---
0x74 JUMPDEST
0x75 CALLVALUE
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x74: JUMPDEST 
0x75: V27 = CALLVALUE
0x76: V28 = ISZERO V27
0x77: V29 = 0x7f
0x7a: JUMPI 0x7f V28
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x74]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V30 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x7f
[0x7f:0x86]
---
Predecessors: [0x74]
Successors: [0x1b0]
---
0x7f JUMPDEST
0x80 PUSH2 0x87
0x83 PUSH2 0x1b0
0x86 JUMP
---
0x7f: JUMPDEST 
0x80: V31 = 0x87
0x83: V32 = 0x1b0
0x86: JUMP 0x1b0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x87]
Exit stack: [V7, 0x87]

================================

Block 0x87
[0x87:0xc8]
---
Predecessors: [0x1b0]
Successors: []
---
0x87 JUMPDEST
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP1
0x8c DUP3
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP2
0xbf POP
0xc0 POP
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 DUP1
0xc5 SWAP2
0xc6 SUB
0xc7 SWAP1
0xc8 RETURN
---
0x87: JUMPDEST 
0x88: V33 = 0x40
0x8a: V34 = M[0x40]
0x8d: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0xa3: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xba: M[V34] = V38
0xbb: V39 = 0x20
0xbd: V40 = ADD 0x20 V34
0xc1: V41 = 0x40
0xc3: V42 = M[0x40]
0xc6: V43 = SUB V40 V42
0xc8: RETURN V42 V43
---
Entry stack: [V7, 0x87, V92]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x87]

================================

Block 0xc9
[0xc9:0xcf]
---
Predecessors: [0x44]
Successors: [0xd0, 0xd4]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc9: JUMPDEST 
0xca: V44 = CALLVALUE
0xcb: V45 = ISZERO V44
0xcc: V46 = 0xd4
0xcf: JUMPI 0xd4 V45
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc9]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V47 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd4
[0xd4:0xff]
---
Predecessors: [0xc9]
Successors: [0x1d5]
---
0xd4 JUMPDEST
0xd5 PUSH2 0x100
0xd8 PUSH1 0x4
0xda DUP1
0xdb DUP1
0xdc CALLDATALOAD
0xdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2 AND
0xf3 SWAP1
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP1
0xf8 SWAP2
0xf9 SWAP1
0xfa POP
0xfb POP
0xfc PUSH2 0x1d5
0xff JUMP
---
0xd4: JUMPDEST 
0xd5: V48 = 0x100
0xd8: V49 = 0x4
0xdc: V50 = CALLDATALOAD 0x4
0xdd: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xf4: V53 = 0x20
0xf6: V54 = ADD 0x20 0x4
0xfc: V55 = 0x1d5
0xff: JUMP 0x1d5
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x100, V52]
Exit stack: [V7, 0x100, V52]

================================

Block 0x100
[0x100:0x101]
---
Predecessors: [0x329]
Successors: []
---
0x100 JUMPDEST
0x101 STOP
---
0x100: JUMPDEST 
0x101: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x102
[0x102:0x108]
---
Predecessors: [0x4f]
Successors: [0x109, 0x10d]
---
0x102 JUMPDEST
0x103 CALLVALUE
0x104 ISZERO
0x105 PUSH2 0x10d
0x108 JUMPI
---
0x102: JUMPDEST 
0x103: V56 = CALLVALUE
0x104: V57 = ISZERO V56
0x105: V58 = 0x10d
0x108: JUMPI 0x10d V57
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0x102]
Successors: []
---
0x109 PUSH1 0x0
0x10b DUP1
0x10c REVERT
---
0x109: V59 = 0x0
0x10c: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x10d
[0x10d:0x138]
---
Predecessors: [0x102]
Successors: [0x32c]
---
0x10d JUMPDEST
0x10e PUSH2 0x139
0x111 PUSH1 0x4
0x113 DUP1
0x114 DUP1
0x115 CALLDATALOAD
0x116 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b AND
0x12c SWAP1
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP1
0x131 SWAP2
0x132 SWAP1
0x133 POP
0x134 POP
0x135 PUSH2 0x32c
0x138 JUMP
---
0x10d: JUMPDEST 
0x10e: V60 = 0x139
0x111: V61 = 0x4
0x115: V62 = CALLDATALOAD 0x4
0x116: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x12d: V65 = 0x20
0x12f: V66 = ADD 0x20 0x4
0x135: V67 = 0x32c
0x138: JUMP 0x32c
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x139, V64]
Exit stack: [V7, 0x139, V64]

================================

Block 0x139
[0x139:0x13a]
---
Predecessors: []
Successors: []
---
0x139 JUMPDEST
0x13a STOP
---
0x139: JUMPDEST 
0x13a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13b
[0x13b:0x191]
---
Predecessors: [0x6a]
Successors: [0x192, 0x196]
---
0x13b JUMPDEST
0x13c PUSH1 0x0
0x13e DUP1
0x13f SWAP1
0x140 SLOAD
0x141 SWAP1
0x142 PUSH2 0x100
0x145 EXP
0x146 SWAP1
0x147 DIV
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 CALLER
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b EQ
0x18c ISZERO
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x13b: JUMPDEST 
0x13c: V68 = 0x0
0x140: V69 = S[0x0]
0x142: V70 = 0x100
0x145: V71 = EXP 0x100 0x0
0x147: V72 = DIV V69 0x1
0x148: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x15e: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x174: V77 = CALLER
0x175: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x18b: V80 = EQ V79 V76
0x18c: V81 = ISZERO V80
0x18d: V82 = ISZERO V81
0x18e: V83 = 0x196
0x191: JUMPI 0x196 V82
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x13b]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V84 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x196
[0x196:0x1ac]
---
Predecessors: [0x13b]
Successors: []
---
0x196 JUMPDEST
0x197 PUSH20 0x304dcd223da6dae6aec9869ccb4c21cda692a904
0x1ac SELFDESTRUCT
---
0x196: JUMPDEST 
0x197: V85 = 0x304dcd223da6dae6aec9869ccb4c21cda692a904
0x1ac: SELFDESTRUCT 0x304dcd223da6dae6aec9869ccb4c21cda692a904
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x1ad
[0x1ad:0x1ad]
---
Predecessors: []
Successors: [0x1ae]
---
0x1ad JUMPDEST
---
0x1ad: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ae
[0x1ae:0x1af]
---
Predecessors: [0x1ad]
Successors: []
Has unresolved jump.
---
0x1ae JUMPDEST
0x1af JUMP
---
0x1ae: JUMPDEST 
0x1af: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b0
[0x1b0:0x1d4]
---
Predecessors: [0x7f]
Successors: [0x87]
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x0
0x1b3 DUP1
0x1b4 SWAP1
0x1b5 SLOAD
0x1b6 SWAP1
0x1b7 PUSH2 0x100
0x1ba EXP
0x1bb SWAP1
0x1bc DIV
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 DUP2
0x1d4 JUMP
---
0x1b0: JUMPDEST 
0x1b1: V86 = 0x0
0x1b5: V87 = S[0x0]
0x1b7: V88 = 0x100
0x1ba: V89 = EXP 0x100 0x0
0x1bc: V90 = DIV V87 0x1
0x1bd: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1d4: JUMP 0x87
---
Entry stack: [V7, 0x87]
Stack pops: 1
Stack additions: [S0, V92]
Exit stack: [V7, 0x87, V92]

================================

Block 0x1d5
[0x1d5:0x22b]
---
Predecessors: [0xd4]
Successors: [0x22c, 0x230]
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 SWAP1
0x1da SLOAD
0x1db SWAP1
0x1dc PUSH2 0x100
0x1df EXP
0x1e0 SWAP1
0x1e1 DIV
0x1e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f7 AND
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e CALLER
0x20f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x224 AND
0x225 EQ
0x226 ISZERO
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V93 = 0x0
0x1da: V94 = S[0x0]
0x1dc: V95 = 0x100
0x1df: V96 = EXP 0x100 0x0
0x1e1: V97 = DIV V94 0x1
0x1e2: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1f8: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x20e: V102 = CALLER
0x20f: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x224: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x225: V105 = EQ V104 V101
0x226: V106 = ISZERO V105
0x227: V107 = ISZERO V106
0x228: V108 = 0x230
0x22b: JUMPI 0x230 V107
---
Entry stack: [V7, 0x100, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x100, V52]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x1d5]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V109 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V7, 0x100, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x100, V52]

================================

Block 0x230
[0x230:0x267]
---
Predecessors: [0x1d5]
Successors: [0x268, 0x26c]
---
0x230 JUMPDEST
0x231 PUSH1 0x0
0x233 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x248 AND
0x249 DUP2
0x24a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25f AND
0x260 EQ
0x261 ISZERO
0x262 ISZERO
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x230: JUMPDEST 
0x231: V110 = 0x0
0x233: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x248: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x24a: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x260: V115 = EQ V114 0x0
0x261: V116 = ISZERO V115
0x262: V117 = ISZERO V116
0x263: V118 = ISZERO V117
0x264: V119 = 0x26c
0x267: JUMPI 0x26c V118
---
Entry stack: [V7, 0x100, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x100, V52]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x230]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V120 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V7, 0x100, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x100, V52]

================================

Block 0x26c
[0x26c:0x327]
---
Predecessors: [0x230]
Successors: [0x328]
---
0x26c JUMPDEST
0x26d DUP1
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 PUSH1 0x0
0x286 DUP1
0x287 SWAP1
0x288 SLOAD
0x289 SWAP1
0x28a PUSH2 0x100
0x28d EXP
0x28e SWAP1
0x28f DIV
0x290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a5 AND
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb AND
0x2bc PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 DUP1
0x2e4 SWAP2
0x2e5 SUB
0x2e6 SWAP1
0x2e7 LOG3
0x2e8 DUP1
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec PUSH2 0x100
0x2ef EXP
0x2f0 DUP2
0x2f1 SLOAD
0x2f2 DUP2
0x2f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x308 MUL
0x309 NOT
0x30a AND
0x30b SWAP1
0x30c DUP4
0x30d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x322 AND
0x323 MUL
0x324 OR
0x325 SWAP1
0x326 SSTORE
0x327 POP
---
0x26c: JUMPDEST 
0x26e: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x284: V123 = 0x0
0x288: V124 = S[0x0]
0x28a: V125 = 0x100
0x28d: V126 = EXP 0x100 0x0
0x28f: V127 = DIV V124 0x1
0x290: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x2a6: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x2bc: V132 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2dd: V133 = 0x40
0x2df: V134 = M[0x40]
0x2e0: V135 = 0x40
0x2e2: V136 = M[0x40]
0x2e5: V137 = SUB V134 V136
0x2e7: LOG V136 V137 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V131 V122
0x2e9: V138 = 0x0
0x2ec: V139 = 0x100
0x2ef: V140 = EXP 0x100 0x0
0x2f1: V141 = S[0x0]
0x2f3: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x308: V143 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x309: V144 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V145 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V141
0x30d: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x322: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x323: V148 = MUL V147 0x1
0x324: V149 = OR V148 V145
0x326: S[0x0] = V149
---
Entry stack: [V7, 0x100, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x100, V52]

================================

Block 0x328
[0x328:0x328]
---
Predecessors: [0x26c]
Successors: [0x329]
---
0x328 JUMPDEST
---
0x328: JUMPDEST 
---
Entry stack: [V7, 0x100, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x100, V52]

================================

Block 0x329
[0x329:0x32b]
---
Predecessors: [0x328]
Successors: [0x100]
---
0x329 JUMPDEST
0x32a POP
0x32b JUMP
---
0x329: JUMPDEST 
0x32b: JUMP 0x100
---
Entry stack: [V7, 0x100, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x32c
[0x32c:0x382]
---
Predecessors: [0x10d]
Successors: [0x383, 0x387]
---
0x32c JUMPDEST
0x32d PUSH1 0x0
0x32f DUP1
0x330 SWAP1
0x331 SLOAD
0x332 SWAP1
0x333 PUSH2 0x100
0x336 EXP
0x337 SWAP1
0x338 DIV
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 CALLER
0x366 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37b AND
0x37c EQ
0x37d ISZERO
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x32c: JUMPDEST 
0x32d: V150 = 0x0
0x331: V151 = S[0x0]
0x333: V152 = 0x100
0x336: V153 = EXP 0x100 0x0
0x338: V154 = DIV V151 0x1
0x339: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x34f: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x365: V159 = CALLER
0x366: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x37c: V162 = EQ V161 V158
0x37d: V163 = ISZERO V162
0x37e: V164 = ISZERO V163
0x37f: V165 = 0x387
0x382: JUMPI 0x387 V164
---
Entry stack: [V7, 0x139, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x139, V64]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x32c]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V166 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V7, 0x139, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x139, V64]

================================

Block 0x387
[0x387:0x39d]
---
Predecessors: [0x32c]
Successors: []
---
0x387 JUMPDEST
0x388 PUSH20 0xb5f57467db959b959410f83e3810fcfaa592f5b
0x39d SELFDESTRUCT
---
0x387: JUMPDEST 
0x388: V167 = 0xb5f57467db959b959410f83e3810fcfaa592f5b
0x39d: SELFDESTRUCT 0xb5f57467db959b959410f83e3810fcfaa592f5b
---
Entry stack: [V7, 0x139, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x139, V64]

================================

Block 0x39e
[0x39e:0x39e]
---
Predecessors: []
Successors: [0x39f]
---
0x39e JUMPDEST
---
0x39e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x39f
[0x39f:0x3cd]
---
Predecessors: [0x39e]
Successors: []
---
0x39f JUMPDEST
0x3a0 POP
0x3a1 JUMP
0x3a2 STOP
0x3a3 LOG1
0x3a4 PUSH6 0x627a7a723058
0x3ab SHA3
0x3ac INVALID
0x3ad PUSH31 0x8d68ad2c67988a454a3280979ce43cfcaa8f5a5157c370b2b45453dea10f00
0x3cd MISSING 0x29
---
0x39f: JUMPDEST 
0x3a1: JUMP S1
0x3a2: STOP 
0x3a3: LOG S0 S1 S2
0x3a4: V168 = 0x627a7a723058
0x3ab: V169 = SHA3 0x627a7a723058 S3
0x3ac: INVALID 
0x3ad: V170 = 0x8d68ad2c67988a454a3280979ce43cfcaa8f5a5157c370b2b45453dea10f00
0x3cd: MISSING 0x29
---
Entry stack: []
Stack pops: 15
Stack additions: [0x8d68ad2c67988a454a3280979ce43cfcaa8f5a5157c370b2b45453dea10f00]
Exit stack: []

================================

Function 0:
Public function signature: 0x83197ef0
Entry block: 0x5f
Exit block: 0x196
Body: 0x5f, 0x66, 0x6a, 0x13b, 0x192, 0x196

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x74
Exit block: 0x87
Body: 0x74, 0x7b, 0x7f, 0x87, 0x1b0

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0xc9
Exit block: 0x100
Body: 0xc9, 0xd0, 0xd4, 0x100, 0x1d5, 0x22c, 0x230, 0x268, 0x26c, 0x328, 0x329

Function 3:
Public function signature: 0xf5074f41
Entry block: 0x102
Exit block: 0x387
Body: 0x102, 0x109, 0x10d, 0x32c, 0x383, 0x387

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x5a
Body: 0x5a

