Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6b
0xa: JUMPI 0x6b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x74]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x41c0e1b5
0x3a EQ
0x3b PUSH2 0x74
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x41c0e1b5
0x3a: V12 = EQ 0x41c0e1b5 V10
0x3b: V13 = 0x74
0x3e: JUMPI 0x74 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x86]
---
0x3f DUP1
0x40 PUSH4 0x4f057506
0x45 EQ
0x46 PUSH2 0x86
0x49 JUMPI
---
0x40: V14 = 0x4f057506
0x45: V15 = EQ 0x4f057506 V10
0x46: V16 = 0x86
0x49: JUMPI 0x86 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xac]
---
0x4a DUP1
0x4b PUSH4 0x5f66d2a9
0x50 EQ
0x51 PUSH2 0xac
0x54 JUMPI
---
0x4b: V17 = 0x5f66d2a9
0x50: V18 = EQ 0x5f66d2a9 V10
0x51: V19 = 0xac
0x54: JUMPI 0xac V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0xeb]
---
0x55 DUP1
0x56 PUSH4 0xa6f9dae1
0x5b EQ
0x5c PUSH2 0xeb
0x5f JUMPI
---
0x56: V20 = 0xa6f9dae1
0x5b: V21 = EQ 0xa6f9dae1 V10
0x5c: V22 = 0xeb
0x5f: JUMPI 0xeb V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x121]
---
0x60 DUP1
0x61 PUSH4 0xd4e93292
0x66 EQ
0x67 PUSH2 0x121
0x6a JUMPI
---
0x61: V23 = 0xd4e93292
0x66: V24 = EQ 0xd4e93292 V10
0x67: V25 = 0x121
0x6a: JUMPI 0x121 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x0, 0x60]
Successors: [0x6f]
---
0x6b JUMPDEST
0x6c PUSH2 0x72
---
0x6b: JUMPDEST 
0x6c: V26 = 0x72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x72]
Exit stack: [V10, 0x72]

================================

Block 0x6f
[0x6f:0x6f]
---
Predecessors: [0x6b]
Successors: [0x70]
---
0x6f JUMPDEST
---
0x6f: JUMPDEST 
---
Entry stack: [V10, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x72]

================================

Block 0x70
[0x70:0x71]
---
Predecessors: [0x6f]
Successors: [0x72]
---
0x70 JUMPDEST
0x71 JUMP
---
0x70: JUMPDEST 
0x71: JUMP 0x72
---
Entry stack: [V10, 0x72]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x72
[0x72:0x73]
---
Predecessors: [0x70]
Successors: []
---
0x72 JUMPDEST
0x73 STOP
---
0x72: JUMPDEST 
0x73: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x74
[0x74:0x7a]
---
Predecessors: [0xb]
Successors: [0x7b, 0x7c]
---
0x74 JUMPDEST
0x75 CALLVALUE
0x76 ISZERO
0x77 PUSH2 0x7c
0x7a JUMPI
---
0x74: JUMPDEST 
0x75: V27 = CALLVALUE
0x76: V28 = ISZERO V27
0x77: V29 = 0x7c
0x7a: JUMPI 0x7c V28
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7b
[0x7b:0x7b]
---
Predecessors: [0x74]
Successors: []
---
0x7b INVALID
---
0x7b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7c
[0x7c:0x83]
---
Predecessors: [0x74]
Successors: [0x12b]
---
0x7c JUMPDEST
0x7d PUSH2 0x84
0x80 PUSH2 0x12b
0x83 JUMP
---
0x7c: JUMPDEST 
0x7d: V30 = 0x84
0x80: V31 = 0x12b
0x83: JUMP 0x12b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V10, 0x84]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: []
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0x3f]
Successors: [0x8d, 0x8e]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 ISZERO
0x89 PUSH2 0x8e
0x8c JUMPI
---
0x86: JUMPDEST 
0x87: V32 = CALLVALUE
0x88: V33 = ISZERO V32
0x89: V34 = 0x8e
0x8c: JUMPI 0x8e V33
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x8d]
---
Predecessors: [0x86]
Successors: []
---
0x8d INVALID
---
0x8d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8e
[0x8e:0x95]
---
Predecessors: [0x86]
Successors: [0x1a3]
---
0x8e JUMPDEST
0x8f PUSH2 0x96
0x92 PUSH2 0x1a3
0x95 JUMP
---
0x8e: JUMPDEST 
0x8f: V35 = 0x96
0x92: V36 = 0x1a3
0x95: JUMP 0x1a3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x96]
Exit stack: [V10, 0x96]

================================

Block 0x96
[0x96:0xab]
---
Predecessors: [0x1a3]
Successors: []
---
0x96 JUMPDEST
0x97 PUSH1 0x40
0x99 MLOAD
0x9a DUP1
0x9b DUP3
0x9c DUP2
0x9d MSTORE
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP2
0xa2 POP
0xa3 POP
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 DUP1
0xa8 SWAP2
0xa9 SUB
0xaa SWAP1
0xab RETURN
---
0x96: JUMPDEST 
0x97: V37 = 0x40
0x99: V38 = M[0x40]
0x9d: M[V38] = V94
0x9e: V39 = 0x20
0xa0: V40 = ADD 0x20 V38
0xa4: V41 = 0x40
0xa6: V42 = M[0x40]
0xa9: V43 = SUB V40 V42
0xab: RETURN V42 V43
---
Entry stack: [V10, 0x96, V94]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x96]

================================

Block 0xac
[0xac:0xb2]
---
Predecessors: [0x4a]
Successors: [0xb3, 0xb4]
---
0xac JUMPDEST
0xad CALLVALUE
0xae ISZERO
0xaf PUSH2 0xb4
0xb2 JUMPI
---
0xac: JUMPDEST 
0xad: V44 = CALLVALUE
0xae: V45 = ISZERO V44
0xaf: V46 = 0xb4
0xb2: JUMPI 0xb4 V45
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb3
[0xb3:0xb3]
---
Predecessors: [0xac]
Successors: []
---
0xb3 INVALID
---
0xb3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb4
[0xb4:0xe8]
---
Predecessors: [0xac]
Successors: [0x1a9]
---
0xb4 JUMPDEST
0xb5 PUSH2 0xe9
0xb8 PUSH1 0x4
0xba DUP1
0xbb DUP1
0xbc CALLDATALOAD
0xbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2 AND
0xd3 SWAP1
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 SWAP1
0xd8 SWAP2
0xd9 SWAP1
0xda DUP1
0xdb CALLDATALOAD
0xdc SWAP1
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 SWAP2
0xe2 SWAP1
0xe3 POP
0xe4 POP
0xe5 PUSH2 0x1a9
0xe8 JUMP
---
0xb4: JUMPDEST 
0xb5: V47 = 0xe9
0xb8: V48 = 0x4
0xbc: V49 = CALLDATALOAD 0x4
0xbd: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xd4: V52 = 0x20
0xd6: V53 = ADD 0x20 0x4
0xdb: V54 = CALLDATALOAD 0x24
0xdd: V55 = 0x20
0xdf: V56 = ADD 0x20 0x24
0xe5: V57 = 0x1a9
0xe8: JUMP 0x1a9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe9, V51, V54]
Exit stack: [V10, 0xe9, V51, V54]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x24f]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x55]
Successors: [0xf2, 0xf3]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf3
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V58 = CALLVALUE
0xed: V59 = ISZERO V58
0xee: V60 = 0xf3
0xf1: JUMPI 0xf3 V59
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf2
[0xf2:0xf2]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 INVALID
---
0xf2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf3
[0xf3:0x11e]
---
Predecessors: [0xeb]
Successors: [0x253]
---
0xf3 JUMPDEST
0xf4 PUSH2 0x11f
0xf7 PUSH1 0x4
0xf9 DUP1
0xfa DUP1
0xfb CALLDATALOAD
0xfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111 AND
0x112 SWAP1
0x113 PUSH1 0x20
0x115 ADD
0x116 SWAP1
0x117 SWAP2
0x118 SWAP1
0x119 POP
0x11a POP
0x11b PUSH2 0x253
0x11e JUMP
---
0xf3: JUMPDEST 
0xf4: V61 = 0x11f
0xf7: V62 = 0x4
0xfb: V63 = CALLDATALOAD 0x4
0xfc: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x111: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x113: V66 = 0x20
0x115: V67 = ADD 0x20 0x4
0x11b: V68 = 0x253
0x11e: JUMP 0x253
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11f, V65]
Exit stack: [V10, 0x11f, V65]

================================

Block 0x11f
[0x11f:0x120]
---
Predecessors: [0x254]
Successors: []
---
0x11f JUMPDEST
0x120 STOP
---
0x11f: JUMPDEST 
0x120: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x121
[0x121:0x128]
---
Predecessors: [0x60]
Successors: [0x257]
---
0x121 JUMPDEST
0x122 PUSH2 0x129
0x125 PUSH2 0x257
0x128 JUMP
---
0x121: JUMPDEST 
0x122: V69 = 0x129
0x125: V70 = 0x257
0x128: JUMP 0x257
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V10, 0x129]

================================

Block 0x129
[0x129:0x12a]
---
Predecessors: [0x402]
Successors: []
---
0x129 JUMPDEST
0x12a STOP
---
0x129: JUMPDEST 
0x12a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x182]
---
Predecessors: [0x7c]
Successors: [0x183, 0x188]
---
0x12b JUMPDEST
0x12c PUSH1 0x0
0x12e PUSH1 0x0
0x130 SWAP1
0x131 SLOAD
0x132 SWAP1
0x133 PUSH2 0x100
0x136 EXP
0x137 SWAP1
0x138 DIV
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164 AND
0x165 CALLER
0x166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17b AND
0x17c EQ
0x17d ISZERO
0x17e ISZERO
0x17f PUSH2 0x188
0x182 JUMPI
---
0x12b: JUMPDEST 
0x12c: V71 = 0x0
0x12e: V72 = 0x0
0x131: V73 = S[0x0]
0x133: V74 = 0x100
0x136: V75 = EXP 0x100 0x0
0x138: V76 = DIV V73 0x1
0x139: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x14f: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x164: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x165: V81 = CALLER
0x166: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x17c: V84 = EQ V83 V80
0x17d: V85 = ISZERO V84
0x17e: V86 = ISZERO V85
0x17f: V87 = 0x188
0x182: JUMPI 0x188 V86
---
Entry stack: [V10, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x84]

================================

Block 0x183
[0x183:0x187]
---
Predecessors: [0x12b]
Successors: []
---
0x183 PUSH1 0x0
0x185 PUSH1 0x0
0x187 REVERT
---
0x183: V88 = 0x0
0x185: V89 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V10, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x84]

================================

Block 0x188
[0x188:0x1a0]
---
Predecessors: [0x12b]
Successors: []
---
0x188 JUMPDEST
0x189 CALLER
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 SELFDESTRUCT
---
0x188: JUMPDEST 
0x189: V90 = CALLER
0x18a: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1a0: SELFDESTRUCT V92
---
Entry stack: [V10, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x84]

================================

Block 0x1a1
[0x1a1:0x1a2]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x1a1 JUMPDEST
0x1a2 JUMP
---
0x1a1: JUMPDEST 
0x1a2: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a3
[0x1a3:0x1a8]
---
Predecessors: [0x8e]
Successors: [0x96]
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x2
0x1a6 SLOAD
0x1a7 DUP2
0x1a8 JUMP
---
0x1a3: JUMPDEST 
0x1a4: V93 = 0x2
0x1a6: V94 = S[0x2]
0x1a8: JUMP 0x96
---
Entry stack: [V10, 0x96]
Stack pops: 1
Stack additions: [S0, V94]
Exit stack: [V10, 0x96, V94]

================================

Block 0x1a9
[0x1a9:0x200]
---
Predecessors: [0xb4]
Successors: [0x201, 0x206]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x0
0x1ac PUSH1 0x0
0x1ae SWAP1
0x1af SLOAD
0x1b0 SWAP1
0x1b1 PUSH2 0x100
0x1b4 EXP
0x1b5 SWAP1
0x1b6 DIV
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 CALLER
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa EQ
0x1fb ISZERO
0x1fc ISZERO
0x1fd PUSH2 0x206
0x200 JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V95 = 0x0
0x1ac: V96 = 0x0
0x1af: V97 = S[0x0]
0x1b1: V98 = 0x100
0x1b4: V99 = EXP 0x100 0x0
0x1b6: V100 = DIV V97 0x1
0x1b7: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1cd: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1e3: V105 = CALLER
0x1e4: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1fa: V108 = EQ V107 V104
0x1fb: V109 = ISZERO V108
0x1fc: V110 = ISZERO V109
0x1fd: V111 = 0x206
0x200: JUMPI 0x206 V110
---
Entry stack: [V10, 0xe9, V51, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe9, V51, V54]

================================

Block 0x201
[0x201:0x205]
---
Predecessors: [0x1a9]
Successors: []
---
0x201 PUSH1 0x0
0x203 PUSH1 0x0
0x205 REVERT
---
0x201: V112 = 0x0
0x203: V113 = 0x0
0x205: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe9, V51, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe9, V51, V54]

================================

Block 0x206
[0x206:0x24e]
---
Predecessors: [0x1a9]
Successors: [0x24f]
---
0x206 JUMPDEST
0x207 DUP1
0x208 PUSH1 0x2
0x20a DUP2
0x20b SWAP1
0x20c SSTORE
0x20d POP
0x20e DUP2
0x20f PUSH1 0x3
0x211 PUSH1 0x0
0x213 PUSH2 0x100
0x216 EXP
0x217 DUP2
0x218 SLOAD
0x219 DUP2
0x21a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22f MUL
0x230 NOT
0x231 AND
0x232 SWAP1
0x233 DUP4
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a MUL
0x24b OR
0x24c SWAP1
0x24d SSTORE
0x24e POP
---
0x206: JUMPDEST 
0x208: V114 = 0x2
0x20c: S[0x2] = V54
0x20f: V115 = 0x3
0x211: V116 = 0x0
0x213: V117 = 0x100
0x216: V118 = EXP 0x100 0x0
0x218: V119 = S[0x3]
0x21a: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V121 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x230: V122 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x231: V123 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V119
0x234: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x24a: V126 = MUL V125 0x1
0x24b: V127 = OR V126 V123
0x24d: S[0x3] = V127
---
Entry stack: [V10, 0xe9, V51, V54]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xe9, V51, V54]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x206]
Successors: [0xe9]
---
0x24f JUMPDEST
0x250 POP
0x251 POP
0x252 JUMP
---
0x24f: JUMPDEST 
0x252: JUMP 0xe9
---
Entry stack: [V10, 0xe9, V51, V54]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x253
[0x253:0x253]
---
Predecessors: [0xf3]
Successors: [0x254]
---
0x253 JUMPDEST
---
0x253: JUMPDEST 
---
Entry stack: [V10, 0x11f, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11f, V65]

================================

Block 0x254
[0x254:0x256]
---
Predecessors: [0x253]
Successors: [0x11f]
---
0x254 JUMPDEST
0x255 POP
0x256 JUMP
---
0x254: JUMPDEST 
0x256: JUMP 0x11f
---
Entry stack: [V10, 0x11f, V65]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x257
[0x257:0x2a2]
---
Predecessors: [0x121]
Successors: [0x2a3, 0x401]
---
0x257 JUMPDEST
0x258 CALLER
0x259 PUSH1 0x1
0x25b PUSH1 0x0
0x25d PUSH2 0x100
0x260 EXP
0x261 DUP2
0x262 SLOAD
0x263 DUP2
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 MUL
0x27a NOT
0x27b AND
0x27c SWAP1
0x27d DUP4
0x27e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x293 AND
0x294 MUL
0x295 OR
0x296 SWAP1
0x297 SSTORE
0x298 POP
0x299 PUSH1 0x2
0x29b SLOAD
0x29c CALLVALUE
0x29d GT
0x29e ISZERO
0x29f PUSH2 0x401
0x2a2 JUMPI
---
0x257: JUMPDEST 
0x258: V128 = CALLER
0x259: V129 = 0x1
0x25b: V130 = 0x0
0x25d: V131 = 0x100
0x260: V132 = EXP 0x100 0x0
0x262: V133 = S[0x1]
0x264: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V135 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x27a: V136 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V137 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V133
0x27e: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x293: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x294: V140 = MUL V139 0x1
0x295: V141 = OR V140 V137
0x297: S[0x1] = V141
0x299: V142 = 0x2
0x29b: V143 = S[0x2]
0x29c: V144 = CALLVALUE
0x29d: V145 = GT V144 V143
0x29e: V146 = ISZERO V145
0x29f: V147 = 0x401
0x2a2: JUMPI 0x401 V146
---
Entry stack: [V10, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x129]

================================

Block 0x2a3
[0x2a3:0x381]
---
Predecessors: [0x257]
Successors: [0x382, 0x383]
---
0x2a3 PUSH1 0x3
0x2a5 PUSH1 0x0
0x2a7 SWAP1
0x2a8 SLOAD
0x2a9 SWAP1
0x2aa PUSH2 0x100
0x2ad EXP
0x2ae SWAP1
0x2af DIV
0x2b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c5 AND
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 DUP1
0x2e1 PUSH32 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x302 DUP2
0x303 MSTORE
0x304 POP
0x305 PUSH1 0xa
0x307 ADD
0x308 SWAP1
0x309 POP
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP1
0x30e SWAP2
0x30f SUB
0x310 SWAP1
0x311 SHA3
0x312 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x330 SWAP1
0x331 DIV
0x332 PUSH1 0x0
0x334 PUSH1 0x40
0x336 MLOAD
0x337 PUSH1 0x20
0x339 ADD
0x33a MSTORE
0x33b PUSH1 0x40
0x33d MLOAD
0x33e DUP2
0x33f PUSH4 0xffffffff
0x344 AND
0x345 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x363 MUL
0x364 DUP2
0x365 MSTORE
0x366 PUSH1 0x4
0x368 ADD
0x369 DUP1
0x36a SWAP1
0x36b POP
0x36c PUSH1 0x20
0x36e PUSH1 0x40
0x370 MLOAD
0x371 DUP1
0x372 DUP4
0x373 SUB
0x374 DUP2
0x375 DUP7
0x376 PUSH2 0x2c6
0x379 GAS
0x37a SUB
0x37b DELEGATECALL
0x37c ISZERO
0x37d ISZERO
0x37e PUSH2 0x383
0x381 JUMPI
---
0x2a3: V148 = 0x3
0x2a5: V149 = 0x0
0x2a8: V150 = S[0x3]
0x2aa: V151 = 0x100
0x2ad: V152 = EXP 0x100 0x0
0x2af: V153 = DIV V150 0x1
0x2b0: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2c6: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2dc: V158 = 0x40
0x2de: V159 = M[0x40]
0x2e1: V160 = 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x303: M[V159] = 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x305: V161 = 0xa
0x307: V162 = ADD 0xa V159
0x30a: V163 = 0x40
0x30c: V164 = M[0x40]
0x30f: V165 = SUB V162 V164
0x311: V166 = SHA3 V164 V165
0x312: V167 = 0x100000000000000000000000000000000000000000000000000000000
0x331: V168 = DIV V166 0x100000000000000000000000000000000000000000000000000000000
0x332: V169 = 0x0
0x334: V170 = 0x40
0x336: V171 = M[0x40]
0x337: V172 = 0x20
0x339: V173 = ADD 0x20 V171
0x33a: M[V173] = 0x0
0x33b: V174 = 0x40
0x33d: V175 = M[0x40]
0x33f: V176 = 0xffffffff
0x344: V177 = AND 0xffffffff V168
0x345: V178 = 0x100000000000000000000000000000000000000000000000000000000
0x363: V179 = MUL 0x100000000000000000000000000000000000000000000000000000000 V177
0x365: M[V175] = V179
0x366: V180 = 0x4
0x368: V181 = ADD 0x4 V175
0x36c: V182 = 0x20
0x36e: V183 = 0x40
0x370: V184 = M[0x40]
0x373: V185 = SUB V181 V184
0x376: V186 = 0x2c6
0x379: V187 = GAS
0x37a: V188 = SUB V187 0x2c6
0x37b: V189 = DELEGATECALL V188 V157 V184 V185 V184 0x20
0x37c: V190 = ISZERO V189
0x37d: V191 = ISZERO V190
0x37e: V192 = 0x383
0x381: JUMPI 0x383 V191
---
Entry stack: [V10, 0x129]
Stack pops: 0
Stack additions: [V157, V168, V181]
Exit stack: [V10, 0x129, V157, V168, V181]

================================

Block 0x382
[0x382:0x382]
---
Predecessors: [0x2a3]
Successors: []
---
0x382 INVALID
---
0x382: INVALID 
---
Entry stack: [V10, 0x129, V157, V168, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x129, V157, V168, V181]

================================

Block 0x383
[0x383:0x400]
---
Predecessors: [0x2a3]
Successors: [0x401]
---
0x383 JUMPDEST
0x384 POP
0x385 POP
0x386 POP
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b MLOAD
0x38c SWAP1
0x38d POP
0x38e POP
0x38f PUSH1 0x1
0x391 PUSH1 0x0
0x393 SWAP1
0x394 SLOAD
0x395 SWAP1
0x396 PUSH2 0x100
0x399 EXP
0x39a SWAP1
0x39b DIV
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c7 AND
0x3c8 PUSH2 0x8fc
0x3cb ADDRESS
0x3cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e1 AND
0x3e2 BALANCE
0x3e3 SWAP1
0x3e4 DUP2
0x3e5 ISZERO
0x3e6 MUL
0x3e7 SWAP1
0x3e8 PUSH1 0x40
0x3ea MLOAD
0x3eb DUP1
0x3ec SWAP1
0x3ed POP
0x3ee PUSH1 0x0
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 DUP4
0x3f5 SUB
0x3f6 DUP2
0x3f7 DUP6
0x3f8 DUP9
0x3f9 DUP9
0x3fa CALL
0x3fb SWAP4
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff POP
0x400 POP
---
0x383: JUMPDEST 
0x387: V193 = 0x40
0x389: V194 = M[0x40]
0x38b: V195 = M[V194]
0x38f: V196 = 0x1
0x391: V197 = 0x0
0x394: V198 = S[0x1]
0x396: V199 = 0x100
0x399: V200 = EXP 0x100 0x0
0x39b: V201 = DIV V198 0x1
0x39c: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x3b2: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x3c8: V206 = 0x8fc
0x3cb: V207 = ADDRESS
0x3cc: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e1: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3e2: V210 = BALANCE V209
0x3e5: V211 = ISZERO V210
0x3e6: V212 = MUL V211 0x8fc
0x3e8: V213 = 0x40
0x3ea: V214 = M[0x40]
0x3ee: V215 = 0x0
0x3f0: V216 = 0x40
0x3f2: V217 = M[0x40]
0x3f5: V218 = SUB V214 V217
0x3fa: V219 = CALL V212 V205 V210 V217 V218 V217 0x0
---
Entry stack: [V10, 0x129, V157, V168, V181]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x129]

================================

Block 0x401
[0x401:0x401]
---
Predecessors: [0x257, 0x383]
Successors: [0x402]
---
0x401 JUMPDEST
---
0x401: JUMPDEST 
---
Entry stack: [V10, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x129]

================================

Block 0x402
[0x402:0x403]
---
Predecessors: [0x401]
Successors: [0x129]
---
0x402 JUMPDEST
0x403 JUMP
---
0x402: JUMPDEST 
0x403: JUMP 0x129
---
Entry stack: [V10, 0x129]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x404
[0x404:0x437]
---
Predecessors: []
Successors: []
---
0x404 STOP
0x405 LOG1
0x406 PUSH6 0x627a7a723058
0x40d SHA3
0x40e POP
0x40f MISSING 0xc7
0x410 PUSH4 0xa354fb92
0x415 MISSING 0xb8
0x416 MISSING 0xfb
0x417 PUSH7 0xf20ee387ec048d
0x41f CALLCODE
0x420 POP
0x421 MISSING 0x2b
0x422 MISSING 0x2a
0x423 SDIV
0x424 MISSING 0x1e
0x425 MISSING 0xad
0x426 SWAP15
0x427 MISSING 0xb5
0x428 MISSING 0xda
0x429 MISSING 0xc7
0x42a PUSH13 0xfac04e0029
---
0x404: STOP 
0x405: LOG S0 S1 S2
0x406: V220 = 0x627a7a723058
0x40d: V221 = SHA3 0x627a7a723058 S3
0x40f: MISSING 0xc7
0x410: V222 = 0xa354fb92
0x415: MISSING 0xb8
0x416: MISSING 0xfb
0x417: V223 = 0xf20ee387ec048d
0x41f: V224 = CALLCODE 0xf20ee387ec048d S0 S1 S2 S3 S4 S5
0x421: MISSING 0x2b
0x422: MISSING 0x2a
0x423: V225 = SDIV S0 S1
0x424: MISSING 0x1e
0x425: MISSING 0xad
0x427: MISSING 0xb5
0x428: MISSING 0xda
0x429: MISSING 0xc7
0x42a: V226 = 0xfac04e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa354fb92, V225, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, 0xfac04e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x74
Exit block: 0x183
Body: 0x74, 0x7b, 0x7c, 0x12b, 0x183, 0x188

Function 1:
Public function signature: 0x4f057506
Entry block: 0x86
Exit block: 0x96
Body: 0x86, 0x8d, 0x8e, 0x96, 0x1a3

Function 2:
Public function signature: 0x5f66d2a9
Entry block: 0xac
Exit block: 0xe9
Body: 0xac, 0xb3, 0xb4, 0xe9, 0x1a9, 0x201, 0x206, 0x24f

Function 3:
Public function signature: 0xa6f9dae1
Entry block: 0xeb
Exit block: 0x11f
Body: 0xeb, 0xf2, 0xf3, 0x11f, 0x253, 0x254

Function 4:
Public function signature: 0xd4e93292
Entry block: 0x121
Exit block: 0x129
Body: 0x121, 0x129, 0x257, 0x2a3, 0x382, 0x383, 0x401, 0x402

Function 5:
Public fallback function
Entry block: 0x6b
Exit block: 0x72
Body: 0x6b, 0x6f, 0x70, 0x72

