Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1a695230
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1a695230
0x3c: V13 = EQ 0x1a695230 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa8]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0xa8
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0xa8
0x4b: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbd]
---
0x4c DUP1
0x4d PUSH4 0x4f057506
0x52 EQ
0x53 PUSH2 0xbd
0x56 JUMPI
---
0x4d: V18 = 0x4f057506
0x52: V19 = EQ 0x4f057506 V11
0x53: V20 = 0xbd
0x56: JUMPI 0xbd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe6]
---
0x57 DUP1
0x58 PUSH4 0x8caa5c91
0x5d EQ
0x5e PUSH2 0xe6
0x61 JUMPI
---
0x58: V21 = 0x8caa5c91
0x5d: V22 = EQ 0x8caa5c91 V11
0x5e: V23 = 0xe6
0x61: JUMPI 0xe6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x13b]
---
0x62 DUP1
0x63 PUSH4 0xb4a99a4e
0x68 EQ
0x69 PUSH2 0x13b
0x6c JUMPI
---
0x63: V24 = 0xb4a99a4e
0x68: V25 = EQ 0xb4a99a4e V11
0x69: V26 = 0x13b
0x6c: JUMPI 0x13b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x190]
---
0x6d DUP1
0x6e PUSH4 0xfd28ec3e
0x73 EQ
0x74 PUSH2 0x190
0x77 JUMPI
---
0x6e: V27 = 0xfd28ec3e
0x73: V28 = EQ 0xfd28ec3e V11
0x74: V29 = 0x190
0x77: JUMPI 0x190 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0xa5]
---
Predecessors: [0xd]
Successors: [0x1d2]
---
0x7a JUMPDEST
0x7b PUSH2 0xa6
0x7e PUSH1 0x4
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 SWAP1
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP1
0x9e SWAP2
0x9f SWAP1
0xa0 POP
0xa1 POP
0xa2 PUSH2 0x1d2
0xa5 JUMP
---
0x7a: JUMPDEST 
0x7b: V30 = 0xa6
0x7e: V31 = 0x4
0x82: V32 = CALLDATALOAD 0x4
0x83: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x9a: V35 = 0x20
0x9c: V36 = ADD 0x20 0x4
0xa2: V37 = 0x1d2
0xa5: JUMP 0x1d2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa6, V34]
Exit stack: [V11, 0xa6, V34]

================================

Block 0xa6
[0xa6:0xa7]
---
Predecessors: [0x33d]
Successors: []
---
0xa6 JUMPDEST
0xa7 STOP
---
0xa6: JUMPDEST 
0xa7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xae]
---
Predecessors: [0x41]
Successors: [0xaf, 0xb3]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa ISZERO
0xab PUSH2 0xb3
0xae JUMPI
---
0xa8: JUMPDEST 
0xa9: V38 = CALLVALUE
0xaa: V39 = ISZERO V38
0xab: V40 = 0xb3
0xae: JUMPI 0xb3 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb2]
---
Predecessors: [0xa8]
Successors: []
---
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 REVERT
---
0xaf: V41 = 0x0
0xb2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0xa8]
Successors: [0x340]
---
0xb3 JUMPDEST
0xb4 PUSH2 0xbb
0xb7 PUSH2 0x340
0xba JUMP
---
0xb3: JUMPDEST 
0xb4: V42 = 0xbb
0xb7: V43 = 0x340
0xba: JUMP 0x340
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbb]
Exit stack: [V11, 0xbb]

================================

Block 0xbb
[0xbb:0xbc]
---
Predecessors: []
Successors: []
---
0xbb JUMPDEST
0xbc STOP
---
0xbb: JUMPDEST 
0xbc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbd
[0xbd:0xc3]
---
Predecessors: [0x4c]
Successors: [0xc4, 0xc8]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbd: JUMPDEST 
0xbe: V44 = CALLVALUE
0xbf: V45 = ISZERO V44
0xc0: V46 = 0xc8
0xc3: JUMPI 0xc8 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbd]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V47 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc8
[0xc8:0xcf]
---
Predecessors: [0xbd]
Successors: [0x359]
---
0xc8 JUMPDEST
0xc9 PUSH2 0xd0
0xcc PUSH2 0x359
0xcf JUMP
---
0xc8: JUMPDEST 
0xc9: V48 = 0xd0
0xcc: V49 = 0x359
0xcf: JUMP 0x359
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V11, 0xd0]

================================

Block 0xd0
[0xd0:0xe5]
---
Predecessors: [0x359]
Successors: []
---
0xd0 JUMPDEST
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 DUP3
0xd6 DUP2
0xd7 MSTORE
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP2
0xdc POP
0xdd POP
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 SWAP2
0xe3 SUB
0xe4 SWAP1
0xe5 RETURN
---
0xd0: JUMPDEST 
0xd1: V50 = 0x40
0xd3: V51 = M[0x40]
0xd7: M[V51] = V180
0xd8: V52 = 0x20
0xda: V53 = ADD 0x20 V51
0xde: V54 = 0x40
0xe0: V55 = M[0x40]
0xe3: V56 = SUB V53 V55
0xe5: RETURN V55 V56
---
Entry stack: [V11, 0xd0, V180]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd0]

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x57]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V57 = CALLVALUE
0xe8: V58 = ISZERO V57
0xe9: V59 = 0xf1
0xec: JUMPI 0xf1 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V60 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0xe6]
Successors: [0x35f]
---
0xf1 JUMPDEST
0xf2 PUSH2 0xf9
0xf5 PUSH2 0x35f
0xf8 JUMP
---
0xf1: JUMPDEST 
0xf2: V61 = 0xf9
0xf5: V62 = 0x35f
0xf8: JUMP 0x35f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf9]
Exit stack: [V11, 0xf9]

================================

Block 0xf9
[0xf9:0x13a]
---
Predecessors: [0x35f]
Successors: []
---
0xf9 JUMPDEST
0xfa PUSH1 0x40
0xfc MLOAD
0xfd DUP1
0xfe DUP3
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a AND
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP2
0x131 POP
0x132 POP
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0xf9: JUMPDEST 
0xfa: V63 = 0x40
0xfc: V64 = M[0x40]
0xff: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x115: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x12c: M[V64] = V68
0x12d: V69 = 0x20
0x12f: V70 = ADD 0x20 V64
0x133: V71 = 0x40
0x135: V72 = M[0x40]
0x138: V73 = SUB V70 V72
0x13a: RETURN V72 V73
---
Entry stack: [V11, 0xf9, V188]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf9]

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x62]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V74 = CALLVALUE
0x13d: V75 = ISZERO V74
0x13e: V76 = 0x146
0x141: JUMPI 0x146 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V77 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x13b]
Successors: [0x385]
---
0x146 JUMPDEST
0x147 PUSH2 0x14e
0x14a PUSH2 0x385
0x14d JUMP
---
0x146: JUMPDEST 
0x147: V78 = 0x14e
0x14a: V79 = 0x385
0x14d: JUMP 0x385
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14e]
Exit stack: [V11, 0x14e]

================================

Block 0x14e
[0x14e:0x18f]
---
Predecessors: [0x385]
Successors: []
---
0x14e JUMPDEST
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 DUP3
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f AND
0x180 DUP2
0x181 MSTORE
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP2
0x186 POP
0x187 POP
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP1
0x18c SWAP2
0x18d SUB
0x18e SWAP1
0x18f RETURN
---
0x14e: JUMPDEST 
0x14f: V80 = 0x40
0x151: V81 = M[0x40]
0x154: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x16a: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x181: M[V81] = V85
0x182: V86 = 0x20
0x184: V87 = ADD 0x20 V81
0x188: V88 = 0x40
0x18a: V89 = M[0x40]
0x18d: V90 = SUB V87 V89
0x18f: RETURN V89 V90
---
Entry stack: [V11, 0x14e, V195]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14e]

================================

Block 0x190
[0x190:0x196]
---
Predecessors: [0x6d]
Successors: [0x197, 0x19b]
---
0x190 JUMPDEST
0x191 CALLVALUE
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x190: JUMPDEST 
0x191: V91 = CALLVALUE
0x192: V92 = ISZERO V91
0x193: V93 = 0x19b
0x196: JUMPI 0x19b V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x190]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V94 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19b
[0x19b:0x1cf]
---
Predecessors: [0x190]
Successors: [0x3aa]
---
0x19b JUMPDEST
0x19c PUSH2 0x1d0
0x19f PUSH1 0x4
0x1a1 DUP1
0x1a2 DUP1
0x1a3 CALLDATALOAD
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 AND
0x1ba SWAP1
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP1
0x1bf SWAP2
0x1c0 SWAP1
0x1c1 DUP1
0x1c2 CALLDATALOAD
0x1c3 SWAP1
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 SWAP1
0x1ca POP
0x1cb POP
0x1cc PUSH2 0x3aa
0x1cf JUMP
---
0x19b: JUMPDEST 
0x19c: V95 = 0x1d0
0x19f: V96 = 0x4
0x1a3: V97 = CALLDATALOAD 0x4
0x1a4: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1bb: V100 = 0x20
0x1bd: V101 = ADD 0x20 0x4
0x1c2: V102 = CALLDATALOAD 0x24
0x1c4: V103 = 0x20
0x1c6: V104 = ADD 0x20 0x24
0x1cc: V105 = 0x3aa
0x1cf: JUMP 0x3aa
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d0, V99, V102]
Exit stack: [V11, 0x1d0, V99, V102]

================================

Block 0x1d0
[0x1d0:0x1d1]
---
Predecessors: [0x3aa]
Successors: []
---
0x1d0 JUMPDEST
0x1d1 STOP
---
0x1d0: JUMPDEST 
0x1d1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d2
[0x1d2:0x1dc]
---
Predecessors: [0x7a]
Successors: [0x1dd, 0x33d]
---
0x1d2 JUMPDEST
0x1d3 PUSH1 0x2
0x1d5 SLOAD
0x1d6 CALLVALUE
0x1d7 GT
0x1d8 ISZERO
0x1d9 PUSH2 0x33d
0x1dc JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V106 = 0x2
0x1d5: V107 = S[0x2]
0x1d6: V108 = CALLVALUE
0x1d7: V109 = GT V108 V107
0x1d8: V110 = ISZERO V109
0x1d9: V111 = 0x33d
0x1dc: JUMPI 0x33d V110
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V34]

================================

Block 0x1dd
[0x1dd:0x337]
---
Predecessors: [0x1d2]
Successors: [0x338, 0x33c]
---
0x1dd PUSH1 0x1
0x1df PUSH1 0x0
0x1e1 SWAP1
0x1e2 SLOAD
0x1e3 SWAP1
0x1e4 PUSH2 0x100
0x1e7 EXP
0x1e8 SWAP1
0x1e9 DIV
0x1ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ff AND
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 PUSH1 0x40
0x218 MLOAD
0x219 DUP1
0x21a DUP1
0x21b PUSH32 0x416464546f444228616464726573732900000000000000000000000000000000
0x23c DUP2
0x23d MSTORE
0x23e POP
0x23f PUSH1 0x10
0x241 ADD
0x242 SWAP1
0x243 POP
0x244 PUSH1 0x40
0x246 MLOAD
0x247 DUP1
0x248 SWAP2
0x249 SUB
0x24a SWAP1
0x24b SHA3
0x24c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26a SWAP1
0x26b DIV
0x26c CALLER
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP3
0x271 PUSH4 0xffffffff
0x276 AND
0x277 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x295 MUL
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x4
0x29a ADD
0x29b DUP1
0x29c DUP3
0x29d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b2 AND
0x2b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c8 AND
0x2c9 DUP2
0x2ca MSTORE
0x2cb PUSH1 0x20
0x2cd ADD
0x2ce SWAP2
0x2cf POP
0x2d0 POP
0x2d1 PUSH1 0x0
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP1
0x2d7 DUP4
0x2d8 SUB
0x2d9 DUP2
0x2da DUP7
0x2db PUSH2 0x646e
0x2de GAS
0x2df SUB
0x2e0 DELEGATECALL
0x2e1 SWAP3
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 DUP1
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd PUSH2 0x8fc
0x300 ADDRESS
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 BALANCE
0x318 SWAP1
0x319 DUP2
0x31a ISZERO
0x31b MUL
0x31c SWAP1
0x31d PUSH1 0x40
0x31f MLOAD
0x320 PUSH1 0x0
0x322 PUSH1 0x40
0x324 MLOAD
0x325 DUP1
0x326 DUP4
0x327 SUB
0x328 DUP2
0x329 DUP6
0x32a DUP9
0x32b DUP9
0x32c CALL
0x32d SWAP4
0x32e POP
0x32f POP
0x330 POP
0x331 POP
0x332 ISZERO
0x333 ISZERO
0x334 PUSH2 0x33c
0x337 JUMPI
---
0x1dd: V112 = 0x1
0x1df: V113 = 0x0
0x1e2: V114 = S[0x1]
0x1e4: V115 = 0x100
0x1e7: V116 = EXP 0x100 0x0
0x1e9: V117 = DIV V114 0x1
0x1ea: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x200: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x216: V122 = 0x40
0x218: V123 = M[0x40]
0x21b: V124 = 0x416464546f444228616464726573732900000000000000000000000000000000
0x23d: M[V123] = 0x416464546f444228616464726573732900000000000000000000000000000000
0x23f: V125 = 0x10
0x241: V126 = ADD 0x10 V123
0x244: V127 = 0x40
0x246: V128 = M[0x40]
0x249: V129 = SUB V126 V128
0x24b: V130 = SHA3 V128 V129
0x24c: V131 = 0x100000000000000000000000000000000000000000000000000000000
0x26b: V132 = DIV V130 0x100000000000000000000000000000000000000000000000000000000
0x26c: V133 = CALLER
0x26d: V134 = 0x40
0x26f: V135 = M[0x40]
0x271: V136 = 0xffffffff
0x276: V137 = AND 0xffffffff V132
0x277: V138 = 0x100000000000000000000000000000000000000000000000000000000
0x295: V139 = MUL 0x100000000000000000000000000000000000000000000000000000000 V137
0x297: M[V135] = V139
0x298: V140 = 0x4
0x29a: V141 = ADD 0x4 V135
0x29d: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x2b3: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x2ca: M[V141] = V145
0x2cb: V146 = 0x20
0x2cd: V147 = ADD 0x20 V141
0x2d1: V148 = 0x0
0x2d3: V149 = 0x40
0x2d5: V150 = M[0x40]
0x2d8: V151 = SUB V147 V150
0x2db: V152 = 0x646e
0x2de: V153 = GAS
0x2df: V154 = SUB V153 0x646e
0x2e0: V155 = DELEGATECALL V154 V121 V150 V151 V150 0x0
0x2e7: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x2fd: V158 = 0x8fc
0x300: V159 = ADDRESS
0x301: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x317: V162 = BALANCE V161
0x31a: V163 = ISZERO V162
0x31b: V164 = MUL V163 0x8fc
0x31d: V165 = 0x40
0x31f: V166 = M[0x40]
0x320: V167 = 0x0
0x322: V168 = 0x40
0x324: V169 = M[0x40]
0x327: V170 = SUB V166 V169
0x32c: V171 = CALL V164 V157 V162 V169 V170 V169 0x0
0x332: V172 = ISZERO V171
0x333: V173 = ISZERO V172
0x334: V174 = 0x33c
0x337: JUMPI 0x33c V173
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa6, V34]

================================

Block 0x338
[0x338:0x33b]
---
Predecessors: [0x1dd]
Successors: []
---
0x338 PUSH1 0x0
0x33a DUP1
0x33b REVERT
---
0x338: V175 = 0x0
0x33b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V34]

================================

Block 0x33c
[0x33c:0x33c]
---
Predecessors: [0x1dd]
Successors: [0x33d]
---
0x33c JUMPDEST
---
0x33c: JUMPDEST 
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V34]

================================

Block 0x33d
[0x33d:0x33f]
---
Predecessors: [0x1d2, 0x33c]
Successors: [0xa6]
---
0x33d JUMPDEST
0x33e POP
0x33f JUMP
---
0x33d: JUMPDEST 
0x33f: JUMP 0xa6
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x340
[0x340:0x358]
---
Predecessors: [0xb3]
Successors: []
---
0x340 JUMPDEST
0x341 CALLER
0x342 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x357 AND
0x358 SELFDESTRUCT
---
0x340: JUMPDEST 
0x341: V176 = CALLER
0x342: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x357: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x358: SELFDESTRUCT V178
---
Entry stack: [V11, 0xbb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbb]

================================

Block 0x359
[0x359:0x35e]
---
Predecessors: [0xc8]
Successors: [0xd0]
---
0x359 JUMPDEST
0x35a PUSH1 0x2
0x35c SLOAD
0x35d DUP2
0x35e JUMP
---
0x359: JUMPDEST 
0x35a: V179 = 0x2
0x35c: V180 = S[0x2]
0x35e: JUMP 0xd0
---
Entry stack: [V11, 0xd0]
Stack pops: 1
Stack additions: [S0, V180]
Exit stack: [V11, 0xd0, V180]

================================

Block 0x35f
[0x35f:0x384]
---
Predecessors: [0xf1]
Successors: [0xf9]
---
0x35f JUMPDEST
0x360 PUSH1 0x1
0x362 PUSH1 0x0
0x364 SWAP1
0x365 SLOAD
0x366 SWAP1
0x367 PUSH2 0x100
0x36a EXP
0x36b SWAP1
0x36c DIV
0x36d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x382 AND
0x383 DUP2
0x384 JUMP
---
0x35f: JUMPDEST 
0x360: V181 = 0x1
0x362: V182 = 0x0
0x365: V183 = S[0x1]
0x367: V184 = 0x100
0x36a: V185 = EXP 0x100 0x0
0x36c: V186 = DIV V183 0x1
0x36d: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x382: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x384: JUMP 0xf9
---
Entry stack: [V11, 0xf9]
Stack pops: 1
Stack additions: [S0, V188]
Exit stack: [V11, 0xf9, V188]

================================

Block 0x385
[0x385:0x3a9]
---
Predecessors: [0x146]
Successors: [0x14e]
---
0x385 JUMPDEST
0x386 PUSH1 0x0
0x388 DUP1
0x389 SWAP1
0x38a SLOAD
0x38b SWAP1
0x38c PUSH2 0x100
0x38f EXP
0x390 SWAP1
0x391 DIV
0x392 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a7 AND
0x3a8 DUP2
0x3a9 JUMP
---
0x385: JUMPDEST 
0x386: V189 = 0x0
0x38a: V190 = S[0x0]
0x38c: V191 = 0x100
0x38f: V192 = EXP 0x100 0x0
0x391: V193 = DIV V190 0x1
0x392: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x3a9: JUMP 0x14e
---
Entry stack: [V11, 0x14e]
Stack pops: 1
Stack additions: [S0, V195]
Exit stack: [V11, 0x14e, V195]

================================

Block 0x3aa
[0x3aa:0x435]
---
Predecessors: [0x19b]
Successors: [0x1d0]
---
0x3aa JUMPDEST
0x3ab DUP1
0x3ac PUSH1 0x2
0x3ae DUP2
0x3af SWAP1
0x3b0 SSTORE
0x3b1 POP
0x3b2 DUP2
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0x0
0x3b7 PUSH2 0x100
0x3ba EXP
0x3bb DUP2
0x3bc SLOAD
0x3bd DUP2
0x3be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d3 MUL
0x3d4 NOT
0x3d5 AND
0x3d6 SWAP1
0x3d7 DUP4
0x3d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ed AND
0x3ee MUL
0x3ef OR
0x3f0 SWAP1
0x3f1 SSTORE
0x3f2 POP
0x3f3 CALLER
0x3f4 PUSH1 0x0
0x3f6 DUP1
0x3f7 PUSH2 0x100
0x3fa EXP
0x3fb DUP2
0x3fc SLOAD
0x3fd DUP2
0x3fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x413 MUL
0x414 NOT
0x415 AND
0x416 SWAP1
0x417 DUP4
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e MUL
0x42f OR
0x430 SWAP1
0x431 SSTORE
0x432 POP
0x433 POP
0x434 POP
0x435 JUMP
---
0x3aa: JUMPDEST 
0x3ac: V196 = 0x2
0x3b0: S[0x2] = V102
0x3b3: V197 = 0x1
0x3b5: V198 = 0x0
0x3b7: V199 = 0x100
0x3ba: V200 = EXP 0x100 0x0
0x3bc: V201 = S[0x1]
0x3be: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V203 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3d4: V204 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V205 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V201
0x3d8: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x3ee: V208 = MUL V207 0x1
0x3ef: V209 = OR V208 V205
0x3f1: S[0x1] = V209
0x3f3: V210 = CALLER
0x3f4: V211 = 0x0
0x3f7: V212 = 0x100
0x3fa: V213 = EXP 0x100 0x0
0x3fc: V214 = S[0x0]
0x3fe: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x413: V216 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x414: V217 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x415: V218 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V214
0x418: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x42e: V221 = MUL V220 0x1
0x42f: V222 = OR V221 V218
0x431: S[0x0] = V222
0x435: JUMP 0x1d0
---
Entry stack: [V11, 0x1d0, V99, V102]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x436
[0x436:0x461]
---
Predecessors: []
Successors: []
---
0x436 STOP
0x437 LOG1
0x438 PUSH6 0x627a7a723058
0x43f SHA3
0x440 EXTCODECOPY
0x441 CODECOPY
0x442 LOG0
0x443 PUSH23 0xd229a0406700f3f5255446f15c5edf621bd6750e4e9a2a
0x45b MISSING 0xf6
0x45c DUP9
0x45d MISSING 0x49
0x45e MISSING 0xcd
0x45f MISSING 0xdb
0x460 STOP
0x461 MISSING 0x29
---
0x436: STOP 
0x437: LOG S0 S1 S2
0x438: V223 = 0x627a7a723058
0x43f: V224 = SHA3 0x627a7a723058 S3
0x440: EXTCODECOPY V224 S4 S5 S6
0x441: CODECOPY S7 S8 S9
0x442: LOG S10 S11
0x443: V225 = 0xd229a0406700f3f5255446f15c5edf621bd6750e4e9a2a
0x45b: MISSING 0xf6
0x45d: MISSING 0x49
0x45e: MISSING 0xcd
0x45f: MISSING 0xdb
0x460: STOP 
0x461: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd229a0406700f3f5255446f15c5edf621bd6750e4e9a2a, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x1a695230
Entry block: 0x7a
Exit block: 0xa6
Body: 0x7a, 0xa6, 0x1d2, 0x1dd, 0x338, 0x33c, 0x33d

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xa8
Exit block: 0x340
Body: 0xa8, 0xaf, 0xb3, 0x340

Function 2:
Public function signature: 0x4f057506
Entry block: 0xbd
Exit block: 0xd0
Body: 0xbd, 0xc4, 0xc8, 0xd0, 0x359

Function 3:
Public function signature: 0x8caa5c91
Entry block: 0xe6
Exit block: 0xf9
Body: 0xe6, 0xed, 0xf1, 0xf9, 0x35f

Function 4:
Public function signature: 0xb4a99a4e
Entry block: 0x13b
Exit block: 0x14e
Body: 0x13b, 0x142, 0x146, 0x14e, 0x385

Function 5:
Public function signature: 0xfd28ec3e
Entry block: 0x190
Exit block: 0x1d0
Body: 0x190, 0x197, 0x19b, 0x1d0, 0x3aa

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

