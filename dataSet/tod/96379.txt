Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x12065fe0
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x12065fe0
0x3b: V13 = EQ V11 0x12065fe0
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa0]
---
0x40 DUP1
0x41 PUSH4 0x12c8052f
0x46 EQ
0x47 PUSH2 0xa0
0x4a JUMPI
---
0x41: V15 = 0x12c8052f
0x46: V16 = EQ 0x12c8052f V11
0x47: V17 = 0xa0
0x4a: JUMPI 0xa0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc9]
---
0x4b DUP1
0x4c PUSH4 0x481c6a75
0x51 EQ
0x52 PUSH2 0xc9
0x55 JUMPI
---
0x4c: V18 = 0x481c6a75
0x51: V19 = EQ 0x481c6a75 V11
0x52: V20 = 0xc9
0x55: JUMPI 0xc9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xfa]
---
0x56 DUP1
0x57 PUSH4 0x48db5f89
0x5c EQ
0x5d PUSH2 0xfa
0x60 JUMPI
---
0x57: V21 = 0x48db5f89
0x5c: V22 = EQ 0x48db5f89 V11
0x5d: V23 = 0xfa
0x60: JUMPI 0xfa V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x10f]
---
0x61 DUP1
0x62 PUSH4 0x793cd71e
0x67 EQ
0x68 PUSH2 0x10f
0x6b JUMPI
---
0x62: V24 = 0x793cd71e
0x67: V25 = EQ 0x793cd71e V11
0x68: V26 = 0x10f
0x6b: JUMPI 0x10f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x124]
---
0x6c DUP1
0x6d PUSH4 0x93e84cd9
0x72 EQ
0x73 PUSH2 0x124
0x76 JUMPI
---
0x6d: V27 = 0x93e84cd9
0x72: V28 = EQ 0x93e84cd9 V11
0x73: V29 = 0x124
0x76: JUMPI 0x124 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x1db, 0x2b5]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b DUP1
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x79]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x85
[0x85:0x8d]
---
Predecessors: [0x79]
Successors: [0x12c]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH2 0x8e
0x8a PUSH2 0x12c
0x8d JUMP
---
0x85: JUMPDEST 
0x87: V34 = 0x8e
0x8a: V35 = 0x12c
0x8d: JUMP 0x12c
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x8e]
Exit stack: [V11, 0x8e]

================================

Block 0x8e
[0x8e:0x9f]
---
Predecessors: [0x144]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x40
0x91 DUP1
0x92 MLOAD
0x93 SWAP2
0x94 DUP3
0x95 MSTORE
0x96 MLOAD
0x97 SWAP1
0x98 DUP2
0x99 SWAP1
0x9a SUB
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP1
0x9f RETURN
---
0x8e: JUMPDEST 
0x8f: V36 = 0x40
0x92: V37 = M[0x40]
0x95: M[V37] = V101
0x96: V38 = M[0x40]
0x9a: V39 = SUB V37 V38
0x9b: V40 = 0x20
0x9d: V41 = ADD 0x20 V39
0x9f: RETURN V38 V41
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa0
[0xa0:0xa7]
---
Predecessors: [0x40]
Successors: [0xa8, 0xac]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 DUP1
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa0: JUMPDEST 
0xa1: V42 = CALLVALUE
0xa3: V43 = ISZERO V42
0xa4: V44 = 0xac
0xa7: JUMPI 0xac V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa0]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V45 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xac
[0xac:0xb4]
---
Predecessors: [0xa0]
Successors: [0x14a]
---
0xac JUMPDEST
0xad POP
0xae PUSH2 0xb5
0xb1 PUSH2 0x14a
0xb4 JUMP
---
0xac: JUMPDEST 
0xae: V46 = 0xb5
0xb1: V47 = 0x14a
0xb4: JUMP 0x14a
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0xb5]
Exit stack: [V11, 0xb5]

================================

Block 0xb5
[0xb5:0xc8]
---
Predecessors: [0x14a]
Successors: []
---
0xb5 JUMPDEST
0xb6 PUSH1 0x40
0xb8 DUP1
0xb9 MLOAD
0xba SWAP2
0xbb ISZERO
0xbc ISZERO
0xbd DUP3
0xbe MSTORE
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 SWAP1
0xc3 SUB
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 RETURN
---
0xb5: JUMPDEST 
0xb6: V48 = 0x40
0xb9: V49 = M[0x40]
0xbb: V50 = ISZERO V107
0xbc: V51 = ISZERO V50
0xbe: M[V49] = V51
0xbf: V52 = M[0x40]
0xc3: V53 = SUB V49 V52
0xc4: V54 = 0x20
0xc6: V55 = ADD 0x20 V53
0xc8: RETURN V52 V55
---
Entry stack: [V11, 0xb5, V107]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb5]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x4b]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V56 = CALLVALUE
0xcc: V57 = ISZERO V56
0xcd: V58 = 0xd5
0xd0: JUMPI 0xd5 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, V56]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V59 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x16b]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xde
0xda PUSH2 0x16b
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V60 = 0xde
0xda: V61 = 0x16b
0xdd: JUMP 0x16b
---
Entry stack: [V11, V56]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0xde
[0xde:0xf9]
---
Predecessors: [0x16b, 0x17a]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 DUP1
0xe2 MLOAD
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb SWAP1
0xec SWAP3
0xed AND
0xee DUP3
0xef MSTORE
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 SWAP1
0xf4 SUB
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 RETURN
---
0xde: JUMPDEST 
0xdf: V62 = 0x40
0xe2: V63 = M[0x40]
0xe3: V64 = 0x1
0xe5: V65 = 0xa0
0xe7: V66 = 0x2
0xe9: V67 = EXP 0x2 0xa0
0xea: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed: V69 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xef: M[V63] = V69
0xf0: V70 = M[0x40]
0xf4: V71 = SUB V63 V70
0xf5: V72 = 0x20
0xf7: V73 = ADD 0x20 V71
0xf9: RETURN V70 V73
---
Entry stack: [V11, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x56]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V74 = CALLVALUE
0xfd: V75 = ISZERO V74
0xfe: V76 = 0x106
0x101: JUMPI 0x106 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V11, V74]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V77 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V74]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xfa]
Successors: [0x17a]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0xde
0x10b PUSH2 0x17a
0x10e JUMP
---
0x106: JUMPDEST 
0x108: V78 = 0xde
0x10b: V79 = 0x17a
0x10e: JUMP 0x17a
---
Entry stack: [V11, V74]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x61]
Successors: [0x117, 0x11b]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 DUP1
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x10f: JUMPDEST 
0x110: V80 = CALLVALUE
0x112: V81 = ISZERO V80
0x113: V82 = 0x11b
0x116: JUMPI 0x11b V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V11, V80]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x10f]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V83 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V11, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V80]

================================

Block 0x11b
[0x11b:0x123]
---
Predecessors: [0x10f]
Successors: [0x189]
---
0x11b JUMPDEST
0x11c POP
0x11d PUSH2 0x77
0x120 PUSH2 0x189
0x123 JUMP
---
0x11b: JUMPDEST 
0x11d: V84 = 0x77
0x120: V85 = 0x189
0x123: JUMP 0x189
---
Entry stack: [V11, V80]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x6c]
Successors: [0x1de]
---
0x124 JUMPDEST
0x125 PUSH2 0x77
0x128 PUSH2 0x1de
0x12b JUMP
---
0x124: JUMPDEST 
0x125: V86 = 0x77
0x128: V87 = 0x1de
0x12b: JUMP 0x1de
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x12c
[0x12c:0x13f]
---
Predecessors: [0x85]
Successors: [0x140, 0x144]
---
0x12c JUMPDEST
0x12d PUSH1 0x0
0x12f DUP1
0x130 SLOAD
0x131 PUSH1 0x1
0x133 PUSH1 0xa0
0x135 PUSH1 0x2
0x137 EXP
0x138 SUB
0x139 AND
0x13a CALLER
0x13b EQ
0x13c PUSH2 0x144
0x13f JUMPI
---
0x12c: JUMPDEST 
0x12d: V88 = 0x0
0x130: V89 = S[0x0]
0x131: V90 = 0x1
0x133: V91 = 0xa0
0x135: V92 = 0x2
0x137: V93 = EXP 0x2 0xa0
0x138: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x13a: V96 = CALLER
0x13b: V97 = EQ V96 V95
0x13c: V98 = 0x144
0x13f: JUMPI 0x144 V97
---
Entry stack: [V11, 0x8e]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x8e, 0x0]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x12c]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V99 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e, 0x0]

================================

Block 0x144
[0x144:0x149]
---
Predecessors: [0x12c]
Successors: [0x8e]
---
0x144 JUMPDEST
0x145 POP
0x146 ADDRESS
0x147 BALANCE
0x148 SWAP1
0x149 JUMP
---
0x144: JUMPDEST 
0x146: V100 = ADDRESS
0x147: V101 = BALANCE V100
0x149: JUMP 0x8e
---
Entry stack: [V11, 0x8e, 0x0]
Stack pops: 2
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x14a
[0x14a:0x16a]
---
Predecessors: [0xac]
Successors: [0xb5]
---
0x14a JUMPDEST
0x14b PUSH1 0x1
0x14d SLOAD
0x14e PUSH21 0x10000000000000000000000000000000000000000
0x164 SWAP1
0x165 DIV
0x166 PUSH1 0xff
0x168 AND
0x169 DUP2
0x16a JUMP
---
0x14a: JUMPDEST 
0x14b: V102 = 0x1
0x14d: V103 = S[0x1]
0x14e: V104 = 0x10000000000000000000000000000000000000000
0x165: V105 = DIV V103 0x10000000000000000000000000000000000000000
0x166: V106 = 0xff
0x168: V107 = AND 0xff V105
0x16a: JUMP 0xb5
---
Entry stack: [V11, 0xb5]
Stack pops: 1
Stack additions: [S0, V107]
Exit stack: [V11, 0xb5, V107]

================================

Block 0x16b
[0x16b:0x179]
---
Predecessors: [0xd5]
Successors: [0xde]
---
0x16b JUMPDEST
0x16c PUSH1 0x0
0x16e SLOAD
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 AND
0x178 DUP2
0x179 JUMP
---
0x16b: JUMPDEST 
0x16c: V108 = 0x0
0x16e: V109 = S[0x0]
0x16f: V110 = 0x1
0x171: V111 = 0xa0
0x173: V112 = 0x2
0x175: V113 = EXP 0x2 0xa0
0x176: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x177: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x179: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V115]
Exit stack: [V11, 0xde, V115]

================================

Block 0x17a
[0x17a:0x188]
---
Predecessors: [0x106]
Successors: [0xde]
---
0x17a JUMPDEST
0x17b PUSH1 0x1
0x17d SLOAD
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 AND
0x187 DUP2
0x188 JUMP
---
0x17a: JUMPDEST 
0x17b: V116 = 0x1
0x17d: V117 = S[0x1]
0x17e: V118 = 0x1
0x180: V119 = 0xa0
0x182: V120 = 0x2
0x184: V121 = EXP 0x2 0xa0
0x185: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x188: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V123]
Exit stack: [V11, 0xde, V123]

================================

Block 0x189
[0x189:0x19b]
---
Predecessors: [0x11b]
Successors: [0x19c, 0x1a0]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c SLOAD
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 AND
0x196 CALLER
0x197 EQ
0x198 PUSH2 0x1a0
0x19b JUMPI
---
0x189: JUMPDEST 
0x18a: V124 = 0x0
0x18c: V125 = S[0x0]
0x18d: V126 = 0x1
0x18f: V127 = 0xa0
0x191: V128 = 0x2
0x193: V129 = EXP 0x2 0xa0
0x194: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x196: V132 = CALLER
0x197: V133 = EQ V132 V131
0x198: V134 = 0x1a0
0x19b: JUMPI 0x1a0 V133
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x19c
[0x19c:0x19f]
---
Predecessors: [0x189]
Successors: []
---
0x19c PUSH1 0x0
0x19e DUP1
0x19f REVERT
---
0x19c: V135 = 0x0
0x19f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1a0
[0x1a0:0x1d1]
---
Predecessors: [0x189]
Successors: [0x1d2, 0x1db]
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 SLOAD
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 PUSH1 0x1
0x1aa PUSH1 0xa0
0x1ac PUSH1 0x2
0x1ae EXP
0x1af SUB
0x1b0 SWAP1
0x1b1 SWAP2
0x1b2 AND
0x1b3 SWAP2
0x1b4 ADDRESS
0x1b5 BALANCE
0x1b6 DUP1
0x1b7 ISZERO
0x1b8 PUSH2 0x8fc
0x1bb MUL
0x1bc SWAP3
0x1bd SWAP1
0x1be SWAP2
0x1bf DUP2
0x1c0 DUP2
0x1c1 DUP2
0x1c2 DUP6
0x1c3 DUP9
0x1c4 DUP9
0x1c5 CALL
0x1c6 SWAP4
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb ISZERO
0x1cc DUP1
0x1cd ISZERO
0x1ce PUSH2 0x1db
0x1d1 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V136 = 0x0
0x1a4: V137 = S[0x0]
0x1a5: V138 = 0x40
0x1a7: V139 = M[0x40]
0x1a8: V140 = 0x1
0x1aa: V141 = 0xa0
0x1ac: V142 = 0x2
0x1ae: V143 = EXP 0x2 0xa0
0x1af: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b2: V145 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V146 = ADDRESS
0x1b5: V147 = BALANCE V146
0x1b7: V148 = ISZERO V147
0x1b8: V149 = 0x8fc
0x1bb: V150 = MUL 0x8fc V148
0x1c5: V151 = CALL V150 V145 V147 V139 0x0 V139 0x0
0x1cb: V152 = ISZERO V151
0x1cd: V153 = ISZERO V152
0x1ce: V154 = 0x1db
0x1d1: JUMPI 0x1db V153
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V152]
Exit stack: [V11, 0x77, V152]

================================

Block 0x1d2
[0x1d2:0x1da]
---
Predecessors: [0x1a0]
Successors: []
---
0x1d2 RETURNDATASIZE
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 RETURNDATACOPY
0x1d7 RETURNDATASIZE
0x1d8 PUSH1 0x0
0x1da REVERT
---
0x1d2: V155 = RETURNDATASIZE
0x1d3: V156 = 0x0
0x1d6: RETURNDATACOPY 0x0 0x0 V155
0x1d7: V157 = RETURNDATASIZE
0x1d8: V158 = 0x0
0x1da: REVERT 0x0 V157
---
Entry stack: [V11, 0x77, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V152]

================================

Block 0x1db
[0x1db:0x1dd]
---
Predecessors: [0x1a0]
Successors: [0x77]
---
0x1db JUMPDEST
0x1dc POP
0x1dd JUMP
---
0x1db: JUMPDEST 
0x1dd: JUMP 0x77
---
Entry stack: [V11, 0x77, V152]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1de
[0x1de:0x1ee]
---
Predecessors: [0x124]
Successors: [0x1ef, 0x1f3]
---
0x1de JUMPDEST
0x1df PUSH8 0x16345785d8a0000
0x1e8 CALLVALUE
0x1e9 LT
0x1ea ISZERO
0x1eb PUSH2 0x1f3
0x1ee JUMPI
---
0x1de: JUMPDEST 
0x1df: V159 = 0x16345785d8a0000
0x1e8: V160 = CALLVALUE
0x1e9: V161 = LT V160 0x16345785d8a0000
0x1ea: V162 = ISZERO V161
0x1eb: V163 = 0x1f3
0x1ee: JUMPI 0x1f3 V162
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1ef
[0x1ef:0x1f2]
---
Predecessors: [0x1de]
Successors: []
---
0x1ef PUSH1 0x0
0x1f1 DUP1
0x1f2 REVERT
---
0x1ef: V164 = 0x0
0x1f2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1f3
[0x1f3:0x219]
---
Predecessors: [0x1de]
Successors: [0x2b7]
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x1
0x1f6 DUP1
0x1f7 SLOAD
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d NOT
0x20e AND
0x20f CALLER
0x210 OR
0x211 SWAP1
0x212 SSTORE
0x213 PUSH2 0x21a
0x216 PUSH2 0x2b7
0x219 JUMP
---
0x1f3: JUMPDEST 
0x1f4: V165 = 0x1
0x1f7: V166 = S[0x1]
0x1f8: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V168 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V169 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V166
0x20f: V170 = CALLER
0x210: V171 = OR V170 V169
0x212: S[0x1] = V171
0x213: V172 = 0x21a
0x216: V173 = 0x2b7
0x219: JUMP 0x2b7
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x21a]
Exit stack: [V11, 0x77, 0x21a]

================================

Block 0x21a
[0x21a:0x21f]
---
Predecessors: [0x366]
Successors: [0x220, 0x296]
---
0x21a JUMPDEST
0x21b ISZERO
0x21c PUSH2 0x296
0x21f JUMPI
---
0x21a: JUMPDEST 
0x21b: V174 = ISZERO V269
0x21c: V175 = 0x296
0x21f: JUMPI 0x296 V174
---
Entry stack: [V11, 0x77, V269]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x220
[0x220:0x286]
---
Predecessors: [0x21a]
Successors: [0x287, 0x290]
---
0x220 PUSH1 0x1
0x222 DUP1
0x223 SLOAD
0x224 PUSH21 0xff0000000000000000000000000000000000000000
0x23a NOT
0x23b AND
0x23c PUSH21 0x10000000000000000000000000000000000000000
0x252 OR
0x253 SWAP1
0x254 DUP2
0x255 SWAP1
0x256 SSTORE
0x257 PUSH1 0x40
0x259 MLOAD
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 SWAP1
0x263 SWAP2
0x264 AND
0x265 SWAP1
0x266 PUSH1 0x0
0x268 SWAP1
0x269 PUSH8 0x2a303fe4b530000
0x272 SWAP1
0x273 DUP3
0x274 DUP2
0x275 DUP2
0x276 DUP2
0x277 DUP6
0x278 DUP9
0x279 DUP4
0x27a CALL
0x27b SWAP4
0x27c POP
0x27d POP
0x27e POP
0x27f POP
0x280 ISZERO
0x281 DUP1
0x282 ISZERO
0x283 PUSH2 0x290
0x286 JUMPI
---
0x220: V176 = 0x1
0x223: V177 = S[0x1]
0x224: V178 = 0xff0000000000000000000000000000000000000000
0x23a: V179 = NOT 0xff0000000000000000000000000000000000000000
0x23b: V180 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V177
0x23c: V181 = 0x10000000000000000000000000000000000000000
0x252: V182 = OR 0x10000000000000000000000000000000000000000 V180
0x256: S[0x1] = V182
0x257: V183 = 0x40
0x259: V184 = M[0x40]
0x25a: V185 = 0x1
0x25c: V186 = 0xa0
0x25e: V187 = 0x2
0x260: V188 = EXP 0x2 0xa0
0x261: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V190 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x266: V191 = 0x0
0x269: V192 = 0x2a303fe4b530000
0x27a: V193 = CALL 0x0 V190 0x2a303fe4b530000 V184 0x0 V184 0x0
0x280: V194 = ISZERO V193
0x282: V195 = ISZERO V194
0x283: V196 = 0x290
0x286: JUMPI 0x290 V195
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V194]
Exit stack: [V11, 0x77, V194]

================================

Block 0x287
[0x287:0x28f]
---
Predecessors: [0x220]
Successors: []
---
0x287 RETURNDATASIZE
0x288 PUSH1 0x0
0x28a DUP1
0x28b RETURNDATACOPY
0x28c RETURNDATASIZE
0x28d PUSH1 0x0
0x28f REVERT
---
0x287: V197 = RETURNDATASIZE
0x288: V198 = 0x0
0x28b: RETURNDATACOPY 0x0 0x0 V197
0x28c: V199 = RETURNDATASIZE
0x28d: V200 = 0x0
0x28f: REVERT 0x0 V199
---
Entry stack: [V11, 0x77, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V194]

================================

Block 0x290
[0x290:0x295]
---
Predecessors: [0x220]
Successors: [0x2b5]
---
0x290 JUMPDEST
0x291 POP
0x292 PUSH2 0x2b5
0x295 JUMP
---
0x290: JUMPDEST 
0x292: V201 = 0x2b5
0x295: JUMP 0x2b5
---
Entry stack: [V11, 0x77, V194]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x296
[0x296:0x2b4]
---
Predecessors: [0x21a]
Successors: [0x2b5]
---
0x296 JUMPDEST
0x297 PUSH1 0x1
0x299 DUP1
0x29a SLOAD
0x29b PUSH21 0xff0000000000000000000000000000000000000000
0x2b1 NOT
0x2b2 AND
0x2b3 SWAP1
0x2b4 SSTORE
---
0x296: JUMPDEST 
0x297: V202 = 0x1
0x29a: V203 = S[0x1]
0x29b: V204 = 0xff0000000000000000000000000000000000000000
0x2b1: V205 = NOT 0xff0000000000000000000000000000000000000000
0x2b2: V206 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V203
0x2b4: S[0x1] = V206
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2b5
[0x2b5:0x2b6]
---
Predecessors: [0x290, 0x296]
Successors: [0x77]
---
0x2b5 JUMPDEST
0x2b6 JUMP
---
0x2b5: JUMPDEST 
0x2b6: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b7
[0x2b7:0x310]
---
Predecessors: [0x1f3]
Successors: [0x311]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x1
0x2ba SLOAD
0x2bb PUSH1 0x40
0x2bd DUP1
0x2be MLOAD
0x2bf DIFFICULTY
0x2c0 PUSH1 0x20
0x2c2 DUP1
0x2c3 DUP4
0x2c4 ADD
0x2c5 SWAP2
0x2c6 SWAP1
0x2c7 SWAP2
0x2c8 MSTORE
0x2c9 TIMESTAMP
0x2ca DUP3
0x2cb DUP5
0x2cc ADD
0x2cd MSTORE
0x2ce PUSH1 0x1
0x2d0 PUSH1 0xa0
0x2d2 PUSH1 0x2
0x2d4 EXP
0x2d5 SUB
0x2d6 SWAP1
0x2d7 SWAP4
0x2d8 AND
0x2d9 PUSH13 0x1000000000000000000000000
0x2e7 MUL
0x2e8 PUSH1 0x60
0x2ea DUP3
0x2eb ADD
0x2ec MSTORE
0x2ed DUP2
0x2ee MLOAD
0x2ef DUP1
0x2f0 DUP3
0x2f1 SUB
0x2f2 PUSH1 0x54
0x2f4 ADD
0x2f5 DUP2
0x2f6 MSTORE
0x2f7 PUSH1 0x74
0x2f9 SWAP1
0x2fa SWAP2
0x2fb ADD
0x2fc SWAP2
0x2fd DUP3
0x2fe SWAP1
0x2ff MSTORE
0x300 DUP1
0x301 MLOAD
0x302 PUSH1 0x0
0x304 SWAP4
0x305 PUSH1 0x2
0x307 SWAP4
0x308 SWAP2
0x309 DUP3
0x30a SWAP2
0x30b DUP5
0x30c ADD
0x30d SWAP1
0x30e DUP1
0x30f DUP4
0x310 DUP4
---
0x2b7: JUMPDEST 
0x2b8: V207 = 0x1
0x2ba: V208 = S[0x1]
0x2bb: V209 = 0x40
0x2be: V210 = M[0x40]
0x2bf: V211 = DIFFICULTY
0x2c0: V212 = 0x20
0x2c4: V213 = ADD V210 0x20
0x2c8: M[V213] = V211
0x2c9: V214 = TIMESTAMP
0x2cc: V215 = ADD 0x40 V210
0x2cd: M[V215] = V214
0x2ce: V216 = 0x1
0x2d0: V217 = 0xa0
0x2d2: V218 = 0x2
0x2d4: V219 = EXP 0x2 0xa0
0x2d5: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d8: V221 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V222 = 0x1000000000000000000000000
0x2e7: V223 = MUL 0x1000000000000000000000000 V221
0x2e8: V224 = 0x60
0x2eb: V225 = ADD V210 0x60
0x2ec: M[V225] = V223
0x2ee: V226 = M[0x40]
0x2f1: V227 = SUB V210 V226
0x2f2: V228 = 0x54
0x2f4: V229 = ADD 0x54 V227
0x2f6: M[V226] = V229
0x2f7: V230 = 0x74
0x2fb: V231 = ADD V210 0x74
0x2ff: M[0x40] = V231
0x301: V232 = M[V226]
0x302: V233 = 0x0
0x305: V234 = 0x2
0x30c: V235 = ADD V226 0x20
---
Entry stack: [V11, 0x77, 0x21a]
Stack pops: 0
Stack additions: [0x0, 0x2, V226, V231, V231, V235, V232, V232, V231, V235]
Exit stack: [V11, 0x77, 0x21a, 0x0, 0x2, V226, V231, V231, V235, V232, V232, V231, V235]

================================

Block 0x311
[0x311:0x319]
---
Predecessors: [0x2b7, 0x31a]
Successors: [0x31a, 0x330]
---
0x311 JUMPDEST
0x312 PUSH1 0x20
0x314 DUP4
0x315 LT
0x316 PUSH2 0x330
0x319 JUMPI
---
0x311: JUMPDEST 
0x312: V236 = 0x20
0x315: V237 = LT S2 0x20
0x316: V238 = 0x330
0x319: JUMPI 0x330 V237
---
Entry stack: [V11, 0x77, 0x21a, 0x0, 0x2, V226, V231, V231, V235, V232, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, 0x21a, 0x0, 0x2, V226, V231, V231, V235, V232, S2, S1, S0]

================================

Block 0x31a
[0x31a:0x32f]
---
Predecessors: [0x311]
Successors: [0x311]
---
0x31a DUP1
0x31b MLOAD
0x31c DUP3
0x31d MSTORE
0x31e PUSH1 0x1f
0x320 NOT
0x321 SWAP1
0x322 SWAP3
0x323 ADD
0x324 SWAP2
0x325 PUSH1 0x20
0x327 SWAP2
0x328 DUP3
0x329 ADD
0x32a SWAP2
0x32b ADD
0x32c PUSH2 0x311
0x32f JUMP
---
0x31b: V239 = M[S0]
0x31d: M[S1] = V239
0x31e: V240 = 0x1f
0x320: V241 = NOT 0x1f
0x323: V242 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x325: V243 = 0x20
0x329: V244 = ADD 0x20 S1
0x32b: V245 = ADD 0x20 S0
0x32c: V246 = 0x311
0x32f: JUMP 0x311
---
Entry stack: [V11, 0x77, 0x21a, 0x0, 0x2, V226, V231, V231, V235, V232, S2, S1, S0]
Stack pops: 3
Stack additions: [V242, V244, V245]
Exit stack: [V11, 0x77, 0x21a, 0x0, 0x2, V226, V231, V231, V235, V232, V242, V244, V245]

================================

Block 0x330
[0x330:0x364]
---
Predecessors: [0x311]
Successors: [0x365, 0x366]
---
0x330 JUMPDEST
0x331 MLOAD
0x332 DUP2
0x333 MLOAD
0x334 PUSH1 0x20
0x336 SWAP4
0x337 SWAP1
0x338 SWAP4
0x339 SUB
0x33a PUSH2 0x100
0x33d EXP
0x33e PUSH1 0x0
0x340 NOT
0x341 ADD
0x342 DUP1
0x343 NOT
0x344 SWAP1
0x345 SWAP2
0x346 AND
0x347 SWAP3
0x348 AND
0x349 SWAP2
0x34a SWAP1
0x34b SWAP2
0x34c OR
0x34d SWAP1
0x34e MSTORE
0x34f PUSH1 0x40
0x351 MLOAD
0x352 SWAP3
0x353 ADD
0x354 DUP3
0x355 SWAP1
0x356 SUB
0x357 SWAP1
0x358 SWAP2
0x359 SHA3
0x35a SWAP3
0x35b POP
0x35c POP
0x35d POP
0x35e DUP2
0x35f ISZERO
0x360 ISZERO
0x361 PUSH2 0x366
0x364 JUMPI
---
0x330: JUMPDEST 
0x331: V247 = M[S0]
0x333: V248 = M[S1]
0x334: V249 = 0x20
0x339: V250 = SUB 0x20 S2
0x33a: V251 = 0x100
0x33d: V252 = EXP 0x100 V250
0x33e: V253 = 0x0
0x340: V254 = NOT 0x0
0x341: V255 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V252
0x343: V256 = NOT V255
0x346: V257 = AND V247 V256
0x348: V258 = AND V248 V255
0x34c: V259 = OR V258 V257
0x34e: M[S1] = V259
0x34f: V260 = 0x40
0x351: V261 = M[0x40]
0x353: V262 = ADD V231 V232
0x356: V263 = SUB V262 V261
0x359: V264 = SHA3 V261 V263
0x35f: V265 = ISZERO 0x2
0x360: V266 = ISZERO 0x0
0x361: V267 = 0x366
0x364: JUMPI 0x366 0x1
---
Entry stack: [V11, 0x77, 0x21a, 0x0, 0x2, V226, V231, V231, V235, V232, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V264]
Exit stack: [V11, 0x77, 0x21a, 0x0, 0x2, V264]

================================

Block 0x365
[0x365:0x365]
---
Predecessors: [0x330]
Successors: []
---
0x365 INVALID
---
0x365: INVALID 
---
Entry stack: [V11, 0x77, 0x21a, 0x0, 0x2, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x21a, 0x0, 0x2, V264]

================================

Block 0x366
[0x366:0x36c]
---
Predecessors: [0x330]
Successors: [0x21a]
---
0x366 JUMPDEST
0x367 MOD
0x368 ISZERO
0x369 SWAP1
0x36a POP
0x36b SWAP1
0x36c JUMP
---
0x366: JUMPDEST 
0x367: V268 = MOD V264 0x2
0x368: V269 = ISZERO V268
0x36c: JUMP 0x21a
---
Entry stack: [V11, 0x77, 0x21a, 0x0, 0x2, V264]
Stack pops: 4
Stack additions: [V269]
Exit stack: [V11, 0x77, V269]

================================

Block 0x36d
[0x36d:0x3b4]
---
Predecessors: []
Successors: []
---
0x36d STOP
0x36e LOG1
0x36f PUSH6 0x627a7a723058
0x376 SHA3
0x377 MISSING 0x24
0x378 OR
0x379 MISSING 0xac
0x37a MISSING 0xc4
0x37b SHA3
0x37c SSTORE
0x37d DIV
0x37e MISSING 0x47
0x37f SSTORE
0x380 CALLDATALOAD
0x381 PUSH19 0x639ffad8e80fb14f2555a408642d1d6f0b9193
0x395 PUSH31 0x580029
---
0x36d: STOP 
0x36e: LOG S0 S1 S2
0x36f: V270 = 0x627a7a723058
0x376: V271 = SHA3 0x627a7a723058 S3
0x377: MISSING 0x24
0x378: V272 = OR S0 S1
0x379: MISSING 0xac
0x37a: MISSING 0xc4
0x37b: V273 = SHA3 S0 S1
0x37c: S[V273] = S2
0x37d: V274 = DIV S3 S4
0x37e: MISSING 0x47
0x37f: S[S0] = S1
0x380: V275 = CALLDATALOAD S2
0x381: V276 = 0x639ffad8e80fb14f2555a408642d1d6f0b9193
0x395: V277 = 0x580029
---
Entry stack: []
Stack pops: 0
Stack additions: [V271, V272, V274, 0x580029, 0x639ffad8e80fb14f2555a408642d1d6f0b9193, V275]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x79
Exit block: 0x8e
Body: 0x79, 0x81, 0x85, 0x8e, 0x12c, 0x140, 0x144

Function 1:
Public function signature: 0x12c8052f
Entry block: 0xa0
Exit block: 0xb5
Body: 0xa0, 0xa8, 0xac, 0xb5, 0x14a

Function 2:
Public function signature: 0x481c6a75
Entry block: 0xc9
Exit block: 0xde
Body: 0xc9, 0xd1, 0xd5, 0xde, 0x16b

Function 3:
Public function signature: 0x48db5f89
Entry block: 0xfa
Exit block: 0xde
Body: 0xde, 0xfa, 0x102, 0x106, 0x17a

Function 4:
Public function signature: 0x793cd71e
Entry block: 0x10f
Exit block: 0x77
Body: 0x77, 0x10f, 0x117, 0x11b, 0x189, 0x19c, 0x1a0, 0x1d2, 0x1db

Function 5:
Public function signature: 0x93e84cd9
Entry block: 0x124
Exit block: 0x77
Body: 0x77, 0x124, 0x1de, 0x1ef, 0x1f3, 0x21a, 0x220, 0x287, 0x290, 0x296, 0x2b5, 0x2b7, 0x311, 0x31a, 0x330, 0x365, 0x366

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

