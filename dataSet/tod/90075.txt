Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x28cb5157
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x28cb5157
0x3b: V13 = EQ V11 0x28cb5157
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6b]
---
0x40 DUP1
0x41 PUSH4 0x3a3800f1
0x46 EQ
0x47 PUSH2 0x6b
0x4a JUMPI
---
0x41: V15 = 0x3a3800f1
0x46: V16 = EQ 0x3a3800f1 V11
0x47: V17 = 0x6b
0x4a: JUMPI 0x6b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x8a]
---
0x4b DUP1
0x4c PUSH4 0x3ccfd60b
0x51 EQ
0x52 PUSH2 0x8a
0x55 JUMPI
---
0x4c: V18 = 0x3ccfd60b
0x51: V19 = EQ 0x3ccfd60b V11
0x52: V20 = 0x8a
0x55: JUMPI 0x8a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x9f]
---
0x56 DUP1
0x57 PUSH4 0x41c0e1b5
0x5c EQ
0x5d PUSH2 0x9f
0x60 JUMPI
---
0x57: V21 = 0x41c0e1b5
0x5c: V22 = EQ 0x41c0e1b5 V11
0x5d: V23 = 0x9f
0x60: JUMPI 0x9f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x191, 0x430, 0x488]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0xb4]
---
0x63 JUMPDEST
0x64 PUSH2 0x61
0x67 PUSH2 0xb4
0x6a JUMP
---
0x63: JUMPDEST 
0x64: V24 = 0x61
0x67: V25 = 0xb4
0x6a: JUMP 0xb4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x6b
[0x6b:0x7c]
---
Predecessors: [0x40]
Successors: [0x7d, 0x81]
---
0x6b JUMPDEST
0x6c PUSH2 0x61
0x6f PUSH1 0x4
0x71 DUP1
0x72 CALLDATASIZE
0x73 SUB
0x74 PUSH1 0x20
0x76 DUP2
0x77 LT
0x78 ISZERO
0x79 PUSH2 0x81
0x7c JUMPI
---
0x6b: JUMPDEST 
0x6c: V26 = 0x61
0x6f: V27 = 0x4
0x72: V28 = CALLDATASIZE
0x73: V29 = SUB V28 0x4
0x74: V30 = 0x20
0x77: V31 = LT V29 0x20
0x78: V32 = ISZERO V31
0x79: V33 = 0x81
0x7c: JUMPI 0x81 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, 0x4, V29]
Exit stack: [V11, 0x61, 0x4, V29]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x6b]
Successors: []
---
0x7d PUSH1 0x0
0x7f DUP1
0x80 REVERT
---
0x7d: V34 = 0x0
0x80: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, 0x4, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x4, V29]

================================

Block 0x81
[0x81:0x89]
---
Predecessors: [0x6b]
Successors: [0x195]
---
0x81 JUMPDEST
0x82 POP
0x83 CALLDATALOAD
0x84 ISZERO
0x85 ISZERO
0x86 PUSH2 0x195
0x89 JUMP
---
0x81: JUMPDEST 
0x83: V35 = CALLDATALOAD 0x4
0x84: V36 = ISZERO V35
0x85: V37 = ISZERO V36
0x86: V38 = 0x195
0x89: JUMP 0x195
---
Entry stack: [V11, 0x61, 0x4, V29]
Stack pops: 2
Stack additions: [V37]
Exit stack: [V11, 0x61, V37]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x4b]
Successors: [0x92, 0x96]
---
0x8a JUMPDEST
0x8b CALLVALUE
0x8c DUP1
0x8d ISZERO
0x8e PUSH2 0x96
0x91 JUMPI
---
0x8a: JUMPDEST 
0x8b: V39 = CALLVALUE
0x8d: V40 = ISZERO V39
0x8e: V41 = 0x96
0x91: JUMPI 0x96 V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V11, V39]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x8a]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V42 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V11, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V39]

================================

Block 0x96
[0x96:0x9e]
---
Predecessors: [0x8a]
Successors: [0x437]
---
0x96 JUMPDEST
0x97 POP
0x98 PUSH2 0x61
0x9b PUSH2 0x437
0x9e JUMP
---
0x96: JUMPDEST 
0x98: V43 = 0x61
0x9b: V44 = 0x437
0x9e: JUMP 0x437
---
Entry stack: [V11, V39]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x9f
[0x9f:0xa6]
---
Predecessors: [0x56]
Successors: [0xa7, 0xab]
---
0x9f JUMPDEST
0xa0 CALLVALUE
0xa1 DUP1
0xa2 ISZERO
0xa3 PUSH2 0xab
0xa6 JUMPI
---
0x9f: JUMPDEST 
0xa0: V45 = CALLVALUE
0xa2: V46 = ISZERO V45
0xa3: V47 = 0xab
0xa6: JUMPI 0xab V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xa7
[0xa7:0xaa]
---
Predecessors: [0x9f]
Successors: []
---
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa REVERT
---
0xa7: V48 = 0x0
0xaa: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xab
[0xab:0xb3]
---
Predecessors: [0x9f]
Successors: [0x48b]
---
0xab JUMPDEST
0xac POP
0xad PUSH2 0x61
0xb0 PUSH2 0x48b
0xb3 JUMP
---
0xab: JUMPDEST 
0xad: V49 = 0x61
0xb0: V50 = 0x48b
0xb3: JUMP 0x48b
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xb4
[0xb4:0xc6]
---
Predecessors: [0x63]
Successors: [0xc7, 0xcb]
---
0xb4 JUMPDEST
0xb5 PUSH1 0x1
0xb7 SLOAD
0xb8 PUSH1 0x1
0xba PUSH1 0xa0
0xbc PUSH1 0x2
0xbe EXP
0xbf SUB
0xc0 AND
0xc1 CALLER
0xc2 EQ
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xb4: JUMPDEST 
0xb5: V51 = 0x1
0xb7: V52 = S[0x1]
0xb8: V53 = 0x1
0xba: V54 = 0xa0
0xbc: V55 = 0x2
0xbe: V56 = EXP 0x2 0xa0
0xbf: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xc1: V59 = CALLER
0xc2: V60 = EQ V59 V58
0xc3: V61 = 0xcb
0xc6: JUMPI 0xcb V60
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xb4]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V62 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xcb
[0xcb:0xf7]
---
Predecessors: [0xb4]
Successors: [0xf8, 0x119]
---
0xcb JUMPDEST
0xcc PUSH1 0x0
0xce DUP1
0xcf SLOAD
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 PUSH1 0x60
0xd5 SWAP2
0xd6 PUSH1 0x1
0xd8 PUSH1 0xa0
0xda PUSH1 0x2
0xdc EXP
0xdd SUB
0xde AND
0xdf SWAP1
0xe0 CALLVALUE
0xe1 SWAP1
0xe2 DUP5
0xe3 DUP2
0xe4 DUP2
0xe5 DUP2
0xe6 DUP6
0xe7 DUP8
0xe8 GAS
0xe9 CALL
0xea SWAP3
0xeb POP
0xec POP
0xed POP
0xee RETURNDATASIZE
0xef DUP1
0xf0 PUSH1 0x0
0xf2 DUP2
0xf3 EQ
0xf4 PUSH2 0x119
0xf7 JUMPI
---
0xcb: JUMPDEST 
0xcc: V63 = 0x0
0xcf: V64 = S[0x0]
0xd0: V65 = 0x40
0xd2: V66 = M[0x40]
0xd3: V67 = 0x60
0xd6: V68 = 0x1
0xd8: V69 = 0xa0
0xda: V70 = 0x2
0xdc: V71 = EXP 0x2 0xa0
0xdd: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xe0: V74 = CALLVALUE
0xe8: V75 = GAS
0xe9: V76 = CALL V75 V73 V74 V66 0x0 V66 0x0
0xee: V77 = RETURNDATASIZE
0xf0: V78 = 0x0
0xf3: V79 = EQ V77 0x0
0xf4: V80 = 0x119
0xf7: JUMPI 0x119 V79
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [0x0, 0x60, V76, V77, V77]
Exit stack: [V11, 0x61, 0x0, 0x60, V76, V77, V77]

================================

Block 0xf8
[0xf8:0x118]
---
Predecessors: [0xcb]
Successors: [0x11e]
---
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb SWAP2
0xfc POP
0xfd PUSH1 0x1f
0xff NOT
0x100 PUSH1 0x3f
0x102 RETURNDATASIZE
0x103 ADD
0x104 AND
0x105 DUP3
0x106 ADD
0x107 PUSH1 0x40
0x109 MSTORE
0x10a RETURNDATASIZE
0x10b DUP3
0x10c MSTORE
0x10d RETURNDATASIZE
0x10e PUSH1 0x0
0x110 PUSH1 0x20
0x112 DUP5
0x113 ADD
0x114 RETURNDATACOPY
0x115 PUSH2 0x11e
0x118 JUMP
---
0xf8: V81 = 0x40
0xfa: V82 = M[0x40]
0xfd: V83 = 0x1f
0xff: V84 = NOT 0x1f
0x100: V85 = 0x3f
0x102: V86 = RETURNDATASIZE
0x103: V87 = ADD V86 0x3f
0x104: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x106: V89 = ADD V82 V88
0x107: V90 = 0x40
0x109: M[0x40] = V89
0x10a: V91 = RETURNDATASIZE
0x10c: M[V82] = V91
0x10d: V92 = RETURNDATASIZE
0x10e: V93 = 0x0
0x110: V94 = 0x20
0x113: V95 = ADD V82 0x20
0x114: RETURNDATACOPY V95 0x0 V92
0x115: V96 = 0x11e
0x118: JUMP 0x11e
---
Entry stack: [V11, 0x61, 0x0, 0x60, V76, V77, V77]
Stack pops: 2
Stack additions: [V82, S0]
Exit stack: [V11, 0x61, 0x0, 0x60, V76, V82, V77]

================================

Block 0x119
[0x119:0x11d]
---
Predecessors: [0xcb]
Successors: [0x11e]
---
0x119 JUMPDEST
0x11a PUSH1 0x60
0x11c SWAP2
0x11d POP
---
0x119: JUMPDEST 
0x11a: V97 = 0x60
---
Entry stack: [V11, 0x61, 0x0, 0x60, V76, V77, V77]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V11, 0x61, 0x0, 0x60, V76, 0x60, V77]

================================

Block 0x11e
[0x11e:0x12a]
---
Predecessors: [0xf8, 0x119]
Successors: [0x12b, 0x191]
---
0x11e JUMPDEST
0x11f POP
0x120 SWAP2
0x121 POP
0x122 SWAP2
0x123 POP
0x124 DUP2
0x125 ISZERO
0x126 ISZERO
0x127 PUSH2 0x191
0x12a JUMPI
---
0x11e: JUMPDEST 
0x125: V98 = ISZERO V76
0x126: V99 = ISZERO V98
0x127: V100 = 0x191
0x12a: JUMPI 0x191 V99
---
Entry stack: [V11, 0x61, 0x0, 0x60, V76, S1, V77]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V11, 0x61, V76, S1]

================================

Block 0x12b
[0x12b:0x190]
---
Predecessors: [0x11e]
Successors: []
---
0x12b PUSH1 0x40
0x12d DUP1
0x12e MLOAD
0x12f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 PUSH1 0x4
0x156 DUP3
0x157 ADD
0x158 MSTORE
0x159 PUSH1 0x2
0x15b PUSH1 0x24
0x15d DUP3
0x15e ADD
0x15f MSTORE
0x160 PUSH32 0x2331000000000000000000000000000000000000000000000000000000000000
0x181 PUSH1 0x44
0x183 DUP3
0x184 ADD
0x185 MSTORE
0x186 SWAP1
0x187 MLOAD
0x188 SWAP1
0x189 DUP2
0x18a SWAP1
0x18b SUB
0x18c PUSH1 0x64
0x18e ADD
0x18f SWAP1
0x190 REVERT
---
0x12b: V101 = 0x40
0x12e: V102 = M[0x40]
0x12f: V103 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x151: M[V102] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x152: V104 = 0x20
0x154: V105 = 0x4
0x157: V106 = ADD V102 0x4
0x158: M[V106] = 0x20
0x159: V107 = 0x2
0x15b: V108 = 0x24
0x15e: V109 = ADD V102 0x24
0x15f: M[V109] = 0x2
0x160: V110 = 0x2331000000000000000000000000000000000000000000000000000000000000
0x181: V111 = 0x44
0x184: V112 = ADD V102 0x44
0x185: M[V112] = 0x2331000000000000000000000000000000000000000000000000000000000000
0x187: V113 = M[0x40]
0x18b: V114 = SUB V102 V113
0x18c: V115 = 0x64
0x18e: V116 = ADD 0x64 V114
0x190: REVERT V113 V116
---
Entry stack: [V11, 0x61, V76, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V76, S0]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0x11e]
Successors: [0x61]
---
0x191 JUMPDEST
0x192 POP
0x193 POP
0x194 JUMP
---
0x191: JUMPDEST 
0x194: JUMP 0x61
---
Entry stack: [V11, 0x61, V76, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x195
[0x195:0x1a7]
---
Predecessors: [0x81]
Successors: [0x1a8, 0x1ac]
---
0x195 JUMPDEST
0x196 PUSH1 0x1
0x198 SLOAD
0x199 PUSH1 0x1
0x19b PUSH1 0xa0
0x19d PUSH1 0x2
0x19f EXP
0x1a0 SUB
0x1a1 AND
0x1a2 CALLER
0x1a3 EQ
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x195: JUMPDEST 
0x196: V117 = 0x1
0x198: V118 = S[0x1]
0x199: V119 = 0x1
0x19b: V120 = 0xa0
0x19d: V121 = 0x2
0x19f: V122 = EXP 0x2 0xa0
0x1a0: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a1: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1a2: V125 = CALLER
0x1a3: V126 = EQ V125 V124
0x1a4: V127 = 0x1ac
0x1a7: JUMPI 0x1ac V126
---
Entry stack: [V11, 0x61, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x195]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V128 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37]

================================

Block 0x1ac
[0x1ac:0x20e]
---
Predecessors: [0x195]
Successors: [0x20f, 0x213]
---
0x1ac JUMPDEST
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 SLOAD
0x1b1 PUSH1 0x40
0x1b3 DUP1
0x1b4 MLOAD
0x1b5 PUSH32 0xc71daccb00000000000000000000000000000000000000000000000000000000
0x1d6 DUP2
0x1d7 MSTORE
0x1d8 SWAP1
0x1d9 MLOAD
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 SWAP1
0x1e3 SWAP3
0x1e4 AND
0x1e5 DUP1
0x1e6 BALANCE
0x1e7 SWAP4
0x1e8 SWAP1
0x1e9 SWAP3
0x1ea SWAP1
0x1eb SWAP2
0x1ec DUP4
0x1ed SWAP2
0x1ee PUSH4 0xc71daccb
0x1f3 SWAP2
0x1f4 PUSH1 0x4
0x1f6 DUP1
0x1f7 DUP3
0x1f8 ADD
0x1f9 SWAP3
0x1fa PUSH1 0x20
0x1fc SWAP3
0x1fd SWAP1
0x1fe SWAP2
0x1ff SWAP1
0x200 DUP3
0x201 SWAP1
0x202 SUB
0x203 ADD
0x204 DUP2
0x205 DUP7
0x206 DUP1
0x207 EXTCODESIZE
0x208 ISZERO
0x209 DUP1
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x1ac: JUMPDEST 
0x1ad: V129 = 0x0
0x1b0: V130 = S[0x0]
0x1b1: V131 = 0x40
0x1b4: V132 = M[0x40]
0x1b5: V133 = 0xc71daccb00000000000000000000000000000000000000000000000000000000
0x1d7: M[V132] = 0xc71daccb00000000000000000000000000000000000000000000000000000000
0x1d9: V134 = M[0x40]
0x1da: V135 = 0x1
0x1dc: V136 = 0xa0
0x1de: V137 = 0x2
0x1e0: V138 = EXP 0x2 0xa0
0x1e1: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V140 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V141 = BALANCE V140
0x1ee: V142 = 0xc71daccb
0x1f4: V143 = 0x4
0x1f8: V144 = ADD V132 0x4
0x1fa: V145 = 0x20
0x202: V146 = SUB V132 V134
0x203: V147 = ADD V146 0x4
0x207: V148 = EXTCODESIZE V140
0x208: V149 = ISZERO V148
0x20a: V150 = ISZERO V149
0x20b: V151 = 0x213
0x20e: JUMPI 0x213 V150
---
Entry stack: [V11, 0x61, V37]
Stack pops: 0
Stack additions: [V141, V140, 0x0, V140, 0xc71daccb, V144, 0x20, V134, V147, V134, V140, V149]
Exit stack: [V11, 0x61, V37, V141, V140, 0x0, V140, 0xc71daccb, V144, 0x20, V134, V147, V134, V140, V149]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x1ac]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V152 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V37, V141, V140, 0x0, V140, 0xc71daccb, V144, 0x20, V134, V147, V134, V140, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, 0x0, V140, 0xc71daccb, V144, 0x20, V134, V147, V134, V140, V149]

================================

Block 0x213
[0x213:0x21d]
---
Predecessors: [0x1ac]
Successors: [0x21e, 0x227]
---
0x213 JUMPDEST
0x214 POP
0x215 GAS
0x216 STATICCALL
0x217 ISZERO
0x218 DUP1
0x219 ISZERO
0x21a PUSH2 0x227
0x21d JUMPI
---
0x213: JUMPDEST 
0x215: V153 = GAS
0x216: V154 = STATICCALL V153 V140 V134 V147 V134 0x20
0x217: V155 = ISZERO V154
0x219: V156 = ISZERO V155
0x21a: V157 = 0x227
0x21d: JUMPI 0x227 V156
---
Entry stack: [V11, 0x61, V37, V141, V140, 0x0, V140, 0xc71daccb, V144, 0x20, V134, V147, V134, V140, V149]
Stack pops: 6
Stack additions: [V155]
Exit stack: [V11, 0x61, V37, V141, V140, 0x0, V140, 0xc71daccb, V144, V155]

================================

Block 0x21e
[0x21e:0x226]
---
Predecessors: [0x213]
Successors: []
---
0x21e RETURNDATASIZE
0x21f PUSH1 0x0
0x221 DUP1
0x222 RETURNDATACOPY
0x223 RETURNDATASIZE
0x224 PUSH1 0x0
0x226 REVERT
---
0x21e: V158 = RETURNDATASIZE
0x21f: V159 = 0x0
0x222: RETURNDATACOPY 0x0 0x0 V158
0x223: V160 = RETURNDATASIZE
0x224: V161 = 0x0
0x226: REVERT 0x0 V160
---
Entry stack: [V11, 0x61, V37, V141, V140, 0x0, V140, 0xc71daccb, V144, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, 0x0, V140, 0xc71daccb, V144, V155]

================================

Block 0x227
[0x227:0x238]
---
Predecessors: [0x213]
Successors: [0x239, 0x23d]
---
0x227 JUMPDEST
0x228 POP
0x229 POP
0x22a POP
0x22b POP
0x22c PUSH1 0x40
0x22e MLOAD
0x22f RETURNDATASIZE
0x230 PUSH1 0x20
0x232 DUP2
0x233 LT
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x227: JUMPDEST 
0x22c: V162 = 0x40
0x22e: V163 = M[0x40]
0x22f: V164 = RETURNDATASIZE
0x230: V165 = 0x20
0x233: V166 = LT V164 0x20
0x234: V167 = ISZERO V166
0x235: V168 = 0x23d
0x238: JUMPI 0x23d V167
---
Entry stack: [V11, 0x61, V37, V141, V140, 0x0, V140, 0xc71daccb, V144, V155]
Stack pops: 4
Stack additions: [V163, V164]
Exit stack: [V11, 0x61, V37, V141, V140, 0x0, V163, V164]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x227]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V169 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V37, V141, V140, 0x0, V163, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, 0x0, V163, V164]

================================

Block 0x23d
[0x23d:0x248]
---
Predecessors: [0x227]
Successors: [0x249, 0x2af]
---
0x23d JUMPDEST
0x23e POP
0x23f MLOAD
0x240 SWAP1
0x241 POP
0x242 DUP3
0x243 DUP2
0x244 GT
0x245 PUSH2 0x2af
0x248 JUMPI
---
0x23d: JUMPDEST 
0x23f: V170 = M[V163]
0x244: V171 = GT V170 V141
0x245: V172 = 0x2af
0x248: JUMPI 0x2af V171
---
Entry stack: [V11, 0x61, V37, V141, V140, 0x0, V163, V164]
Stack pops: 5
Stack additions: [S4, S3, V170]
Exit stack: [V11, 0x61, V37, V141, V140, V170]

================================

Block 0x249
[0x249:0x2ae]
---
Predecessors: [0x23d]
Successors: []
---
0x249 PUSH1 0x40
0x24b DUP1
0x24c MLOAD
0x24d PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x20
0x272 PUSH1 0x4
0x274 DUP3
0x275 ADD
0x276 MSTORE
0x277 PUSH1 0x2
0x279 PUSH1 0x24
0x27b DUP3
0x27c ADD
0x27d MSTORE
0x27e PUSH32 0x2332000000000000000000000000000000000000000000000000000000000000
0x29f PUSH1 0x44
0x2a1 DUP3
0x2a2 ADD
0x2a3 MSTORE
0x2a4 SWAP1
0x2a5 MLOAD
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 SWAP1
0x2a9 SUB
0x2aa PUSH1 0x64
0x2ac ADD
0x2ad SWAP1
0x2ae REVERT
---
0x249: V173 = 0x40
0x24c: V174 = M[0x40]
0x24d: V175 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x26f: M[V174] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x270: V176 = 0x20
0x272: V177 = 0x4
0x275: V178 = ADD V174 0x4
0x276: M[V178] = 0x20
0x277: V179 = 0x2
0x279: V180 = 0x24
0x27c: V181 = ADD V174 0x24
0x27d: M[V181] = 0x2
0x27e: V182 = 0x2332000000000000000000000000000000000000000000000000000000000000
0x29f: V183 = 0x44
0x2a2: V184 = ADD V174 0x44
0x2a3: M[V184] = 0x2332000000000000000000000000000000000000000000000000000000000000
0x2a5: V185 = M[0x40]
0x2a9: V186 = SUB V174 V185
0x2aa: V187 = 0x64
0x2ac: V188 = ADD 0x64 V186
0x2ae: REVERT V185 V188
---
Entry stack: [V11, 0x61, V37, V141, V140, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, V170]

================================

Block 0x2af
[0x2af:0x2be]
---
Predecessors: [0x23d]
Successors: [0x2bf, 0x325]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x1
0x2b2 DUP4
0x2b3 DUP3
0x2b4 SUB
0x2b5 ADD
0x2b6 ADDRESS
0x2b7 BALANCE
0x2b8 DUP2
0x2b9 LT
0x2ba ISZERO
0x2bb PUSH2 0x325
0x2be JUMPI
---
0x2af: JUMPDEST 
0x2b0: V189 = 0x1
0x2b4: V190 = SUB V170 V141
0x2b5: V191 = ADD V190 0x1
0x2b6: V192 = ADDRESS
0x2b7: V193 = BALANCE V192
0x2b9: V194 = LT V191 V193
0x2ba: V195 = ISZERO V194
0x2bb: V196 = 0x325
0x2be: JUMPI 0x325 V195
---
Entry stack: [V11, 0x61, V37, V141, V140, V170]
Stack pops: 3
Stack additions: [S2, S1, S0, V191]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191]

================================

Block 0x2bf
[0x2bf:0x324]
---
Predecessors: [0x2af]
Successors: []
---
0x2bf PUSH1 0x40
0x2c1 DUP1
0x2c2 MLOAD
0x2c3 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 PUSH1 0x4
0x2ea DUP3
0x2eb ADD
0x2ec MSTORE
0x2ed PUSH1 0x2
0x2ef PUSH1 0x24
0x2f1 DUP3
0x2f2 ADD
0x2f3 MSTORE
0x2f4 PUSH32 0x2333000000000000000000000000000000000000000000000000000000000000
0x315 PUSH1 0x44
0x317 DUP3
0x318 ADD
0x319 MSTORE
0x31a SWAP1
0x31b MLOAD
0x31c SWAP1
0x31d DUP2
0x31e SWAP1
0x31f SUB
0x320 PUSH1 0x64
0x322 ADD
0x323 SWAP1
0x324 REVERT
---
0x2bf: V197 = 0x40
0x2c2: V198 = M[0x40]
0x2c3: V199 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2e5: M[V198] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2e6: V200 = 0x20
0x2e8: V201 = 0x4
0x2eb: V202 = ADD V198 0x4
0x2ec: M[V202] = 0x20
0x2ed: V203 = 0x2
0x2ef: V204 = 0x24
0x2f2: V205 = ADD V198 0x24
0x2f3: M[V205] = 0x2
0x2f4: V206 = 0x2333000000000000000000000000000000000000000000000000000000000000
0x315: V207 = 0x44
0x318: V208 = ADD V198 0x44
0x319: M[V208] = 0x2333000000000000000000000000000000000000000000000000000000000000
0x31b: V209 = M[0x40]
0x31f: V210 = SUB V198 V209
0x320: V211 = 0x64
0x322: V212 = ADD 0x64 V210
0x324: REVERT V209 V212
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191]

================================

Block 0x325
[0x325:0x33a]
---
Predecessors: [0x2af]
Successors: [0x4b0]
---
0x325 JUMPDEST
0x326 PUSH1 0x0
0x328 SLOAD
0x329 DUP2
0x32a SWAP1
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 AND
0x334 PUSH2 0x33b
0x337 PUSH2 0x4b0
0x33a JUMP
---
0x325: JUMPDEST 
0x326: V213 = 0x0
0x328: V214 = S[0x0]
0x32b: V215 = 0x1
0x32d: V216 = 0xa0
0x32f: V217 = 0x2
0x331: V218 = EXP 0x2 0xa0
0x332: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x334: V221 = 0x33b
0x337: V222 = 0x4b0
0x33a: JUMP 0x4b0
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191]
Stack pops: 1
Stack additions: [S0, S0, V220, 0x33b]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V191, V220, 0x33b]

================================

Block 0x33b
[0x33b:0x35d]
---
Predecessors: [0x4b0]
Successors: [0x35e, 0x367]
---
0x33b JUMPDEST
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 SWAP1
0x345 SWAP2
0x346 AND
0x347 DUP2
0x348 MSTORE
0x349 PUSH1 0x40
0x34b MLOAD
0x34c SWAP1
0x34d DUP2
0x34e SWAP1
0x34f SUB
0x350 PUSH1 0x20
0x352 ADD
0x353 SWAP1
0x354 DUP3
0x355 CREATE
0x356 DUP1
0x357 ISZERO
0x358 DUP1
0x359 ISZERO
0x35a PUSH2 0x367
0x35d JUMPI
---
0x33b: JUMPDEST 
0x33c: V223 = 0x1
0x33e: V224 = 0xa0
0x340: V225 = 0x2
0x342: V226 = EXP 0x2 0xa0
0x343: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V228 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x348: M[V370] = V228
0x349: V229 = 0x40
0x34b: V230 = M[0x40]
0x34f: V231 = SUB V370 V230
0x350: V232 = 0x20
0x352: V233 = ADD 0x20 V231
0x355: V234 = CREATE V191 V230 V233
0x357: V235 = ISZERO V234
0x359: V236 = ISZERO V235
0x35a: V237 = 0x367
0x35d: JUMPI 0x367 V236
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V191, V220, V370]
Stack pops: 3
Stack additions: [S2, V234, V235]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V191, V234, V235]

================================

Block 0x35e
[0x35e:0x366]
---
Predecessors: [0x33b]
Successors: []
---
0x35e RETURNDATASIZE
0x35f PUSH1 0x0
0x361 DUP1
0x362 RETURNDATACOPY
0x363 RETURNDATASIZE
0x364 PUSH1 0x0
0x366 REVERT
---
0x35e: V238 = RETURNDATASIZE
0x35f: V239 = 0x0
0x362: RETURNDATACOPY 0x0 0x0 V238
0x363: V240 = RETURNDATASIZE
0x364: V241 = 0x0
0x366: REVERT 0x0 V240
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V191, V234, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V191, V234, V235]

================================

Block 0x367
[0x367:0x3bd]
---
Predecessors: [0x33b]
Successors: [0x3be, 0x3c2]
---
0x367 JUMPDEST
0x368 POP
0x369 SWAP1
0x36a POP
0x36b POP
0x36c DUP3
0x36d PUSH1 0x1
0x36f PUSH1 0xa0
0x371 PUSH1 0x2
0x373 EXP
0x374 SUB
0x375 AND
0x376 PUSH4 0x3ccfd60b
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP2
0x37f PUSH4 0xffffffff
0x384 AND
0x385 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3a3 MUL
0x3a4 DUP2
0x3a5 MSTORE
0x3a6 PUSH1 0x4
0x3a8 ADD
0x3a9 PUSH1 0x20
0x3ab PUSH1 0x40
0x3ad MLOAD
0x3ae DUP1
0x3af DUP4
0x3b0 SUB
0x3b1 DUP2
0x3b2 PUSH1 0x0
0x3b4 DUP8
0x3b5 DUP1
0x3b6 EXTCODESIZE
0x3b7 ISZERO
0x3b8 DUP1
0x3b9 ISZERO
0x3ba PUSH2 0x3c2
0x3bd JUMPI
---
0x367: JUMPDEST 
0x36d: V242 = 0x1
0x36f: V243 = 0xa0
0x371: V244 = 0x2
0x373: V245 = EXP 0x2 0xa0
0x374: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x375: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x376: V248 = 0x3ccfd60b
0x37b: V249 = 0x40
0x37d: V250 = M[0x40]
0x37f: V251 = 0xffffffff
0x384: V252 = AND 0xffffffff 0x3ccfd60b
0x385: V253 = 0x100000000000000000000000000000000000000000000000000000000
0x3a3: V254 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x3a5: M[V250] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x3a6: V255 = 0x4
0x3a8: V256 = ADD 0x4 V250
0x3a9: V257 = 0x20
0x3ab: V258 = 0x40
0x3ad: V259 = M[0x40]
0x3b0: V260 = SUB V256 V259
0x3b2: V261 = 0x0
0x3b6: V262 = EXTCODESIZE V247
0x3b7: V263 = ISZERO V262
0x3b9: V264 = ISZERO V263
0x3ba: V265 = 0x3c2
0x3bd: JUMPI 0x3c2 V264
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V191, V234, V235]
Stack pops: 6
Stack additions: [S5, S4, S3, V247, 0x3ccfd60b, V256, 0x20, V259, V260, V259, 0x0, V247, V263]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V247, 0x3ccfd60b, V256, 0x20, V259, V260, V259, 0x0, V247, V263]

================================

Block 0x3be
[0x3be:0x3c1]
---
Predecessors: [0x367]
Successors: []
---
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 REVERT
---
0x3be: V266 = 0x0
0x3c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V247, 0x3ccfd60b, V256, 0x20, V259, V260, V259, 0x0, V247, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V247, 0x3ccfd60b, V256, 0x20, V259, V260, V259, 0x0, V247, V263]

================================

Block 0x3c2
[0x3c2:0x3cc]
---
Predecessors: [0x367]
Successors: [0x3cd, 0x3d6]
---
0x3c2 JUMPDEST
0x3c3 POP
0x3c4 GAS
0x3c5 CALL
0x3c6 ISZERO
0x3c7 DUP1
0x3c8 ISZERO
0x3c9 PUSH2 0x3d6
0x3cc JUMPI
---
0x3c2: JUMPDEST 
0x3c4: V267 = GAS
0x3c5: V268 = CALL V267 V247 0x0 V259 V260 V259 0x20
0x3c6: V269 = ISZERO V268
0x3c8: V270 = ISZERO V269
0x3c9: V271 = 0x3d6
0x3cc: JUMPI 0x3d6 V270
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V247, 0x3ccfd60b, V256, 0x20, V259, V260, V259, 0x0, V247, V263]
Stack pops: 7
Stack additions: [V269]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V247, 0x3ccfd60b, V256, V269]

================================

Block 0x3cd
[0x3cd:0x3d5]
---
Predecessors: [0x3c2]
Successors: []
---
0x3cd RETURNDATASIZE
0x3ce PUSH1 0x0
0x3d0 DUP1
0x3d1 RETURNDATACOPY
0x3d2 RETURNDATASIZE
0x3d3 PUSH1 0x0
0x3d5 REVERT
---
0x3cd: V272 = RETURNDATASIZE
0x3ce: V273 = 0x0
0x3d1: RETURNDATACOPY 0x0 0x0 V272
0x3d2: V274 = RETURNDATASIZE
0x3d3: V275 = 0x0
0x3d5: REVERT 0x0 V274
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V247, 0x3ccfd60b, V256, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V247, 0x3ccfd60b, V256, V269]

================================

Block 0x3d6
[0x3d6:0x3e7]
---
Predecessors: [0x3c2]
Successors: [0x3e8, 0x3ec]
---
0x3d6 JUMPDEST
0x3d7 POP
0x3d8 POP
0x3d9 POP
0x3da POP
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de RETURNDATASIZE
0x3df PUSH1 0x20
0x3e1 DUP2
0x3e2 LT
0x3e3 ISZERO
0x3e4 PUSH2 0x3ec
0x3e7 JUMPI
---
0x3d6: JUMPDEST 
0x3db: V276 = 0x40
0x3dd: V277 = M[0x40]
0x3de: V278 = RETURNDATASIZE
0x3df: V279 = 0x20
0x3e2: V280 = LT V278 0x20
0x3e3: V281 = ISZERO V280
0x3e4: V282 = 0x3ec
0x3e7: JUMPI 0x3ec V281
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V247, 0x3ccfd60b, V256, V269]
Stack pops: 4
Stack additions: [V277, V278]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V277, V278]

================================

Block 0x3e8
[0x3e8:0x3eb]
---
Predecessors: [0x3d6]
Successors: []
---
0x3e8 PUSH1 0x0
0x3ea DUP1
0x3eb REVERT
---
0x3e8: V283 = 0x0
0x3eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V277, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V277, V278]

================================

Block 0x3ec
[0x3ec:0x3f4]
---
Predecessors: [0x3d6]
Successors: [0x3f5, 0x430]
---
0x3ec JUMPDEST
0x3ed POP
0x3ee POP
0x3ef DUP5
0x3f0 ISZERO
0x3f1 PUSH2 0x430
0x3f4 JUMPI
---
0x3ec: JUMPDEST 
0x3f0: V284 = ISZERO V37
0x3f1: V285 = 0x430
0x3f4: JUMPI 0x430 V284
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V277, V278]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191]

================================

Block 0x3f5
[0x3f5:0x424]
---
Predecessors: [0x3ec]
Successors: [0x425, 0x42e]
---
0x3f5 PUSH1 0x1
0x3f7 SLOAD
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 SWAP1
0x404 SWAP2
0x405 AND
0x406 SWAP1
0x407 ADDRESS
0x408 BALANCE
0x409 DUP1
0x40a ISZERO
0x40b PUSH2 0x8fc
0x40e MUL
0x40f SWAP2
0x410 PUSH1 0x0
0x412 DUP2
0x413 DUP2
0x414 DUP2
0x415 DUP6
0x416 DUP9
0x417 DUP9
0x418 CALL
0x419 SWAP4
0x41a POP
0x41b POP
0x41c POP
0x41d POP
0x41e ISZERO
0x41f DUP1
0x420 ISZERO
0x421 PUSH2 0x42e
0x424 JUMPI
---
0x3f5: V286 = 0x1
0x3f7: V287 = S[0x1]
0x3f8: V288 = 0x40
0x3fa: V289 = M[0x40]
0x3fb: V290 = 0x1
0x3fd: V291 = 0xa0
0x3ff: V292 = 0x2
0x401: V293 = EXP 0x2 0xa0
0x402: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x405: V295 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x407: V296 = ADDRESS
0x408: V297 = BALANCE V296
0x40a: V298 = ISZERO V297
0x40b: V299 = 0x8fc
0x40e: V300 = MUL 0x8fc V298
0x410: V301 = 0x0
0x418: V302 = CALL V300 V295 V297 V289 0x0 V289 0x0
0x41e: V303 = ISZERO V302
0x420: V304 = ISZERO V303
0x421: V305 = 0x42e
0x424: JUMPI 0x42e V304
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191]
Stack pops: 0
Stack additions: [V303]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V303]

================================

Block 0x425
[0x425:0x42d]
---
Predecessors: [0x3f5]
Successors: []
---
0x425 RETURNDATASIZE
0x426 PUSH1 0x0
0x428 DUP1
0x429 RETURNDATACOPY
0x42a RETURNDATASIZE
0x42b PUSH1 0x0
0x42d REVERT
---
0x425: V306 = RETURNDATASIZE
0x426: V307 = 0x0
0x429: RETURNDATACOPY 0x0 0x0 V306
0x42a: V308 = RETURNDATASIZE
0x42b: V309 = 0x0
0x42d: REVERT 0x0 V308
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V303]

================================

Block 0x42e
[0x42e:0x42f]
---
Predecessors: [0x3f5]
Successors: [0x430]
---
0x42e JUMPDEST
0x42f POP
---
0x42e: JUMPDEST 
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V303]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191]

================================

Block 0x430
[0x430:0x436]
---
Predecessors: [0x3ec, 0x42e]
Successors: [0x61]
---
0x430 JUMPDEST
0x431 POP
0x432 POP
0x433 POP
0x434 POP
0x435 POP
0x436 JUMP
---
0x430: JUMPDEST 
0x436: JUMP 0x61
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x437
[0x437:0x449]
---
Predecessors: [0x96]
Successors: [0x44a, 0x44e]
---
0x437 JUMPDEST
0x438 PUSH1 0x1
0x43a SLOAD
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 AND
0x444 CALLER
0x445 EQ
0x446 PUSH2 0x44e
0x449 JUMPI
---
0x437: JUMPDEST 
0x438: V310 = 0x1
0x43a: V311 = S[0x1]
0x43b: V312 = 0x1
0x43d: V313 = 0xa0
0x43f: V314 = 0x2
0x441: V315 = EXP 0x2 0xa0
0x442: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x443: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x444: V318 = CALLER
0x445: V319 = EQ V318 V317
0x446: V320 = 0x44e
0x449: JUMPI 0x44e V319
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x44a
[0x44a:0x44d]
---
Predecessors: [0x437]
Successors: []
---
0x44a PUSH1 0x0
0x44c DUP1
0x44d REVERT
---
0x44a: V321 = 0x0
0x44d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x44e
[0x44e:0x47e]
---
Predecessors: [0x437]
Successors: [0x47f, 0x488]
---
0x44e JUMPDEST
0x44f PUSH1 0x1
0x451 SLOAD
0x452 PUSH1 0x40
0x454 MLOAD
0x455 PUSH1 0x1
0x457 PUSH1 0xa0
0x459 PUSH1 0x2
0x45b EXP
0x45c SUB
0x45d SWAP1
0x45e SWAP2
0x45f AND
0x460 SWAP1
0x461 ADDRESS
0x462 BALANCE
0x463 DUP1
0x464 ISZERO
0x465 PUSH2 0x8fc
0x468 MUL
0x469 SWAP2
0x46a PUSH1 0x0
0x46c DUP2
0x46d DUP2
0x46e DUP2
0x46f DUP6
0x470 DUP9
0x471 DUP9
0x472 CALL
0x473 SWAP4
0x474 POP
0x475 POP
0x476 POP
0x477 POP
0x478 ISZERO
0x479 DUP1
0x47a ISZERO
0x47b PUSH2 0x488
0x47e JUMPI
---
0x44e: JUMPDEST 
0x44f: V322 = 0x1
0x451: V323 = S[0x1]
0x452: V324 = 0x40
0x454: V325 = M[0x40]
0x455: V326 = 0x1
0x457: V327 = 0xa0
0x459: V328 = 0x2
0x45b: V329 = EXP 0x2 0xa0
0x45c: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45f: V331 = AND V323 0xffffffffffffffffffffffffffffffffffffffff
0x461: V332 = ADDRESS
0x462: V333 = BALANCE V332
0x464: V334 = ISZERO V333
0x465: V335 = 0x8fc
0x468: V336 = MUL 0x8fc V334
0x46a: V337 = 0x0
0x472: V338 = CALL V336 V331 V333 V325 0x0 V325 0x0
0x478: V339 = ISZERO V338
0x47a: V340 = ISZERO V339
0x47b: V341 = 0x488
0x47e: JUMPI 0x488 V340
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V339]
Exit stack: [V11, 0x61, V339]

================================

Block 0x47f
[0x47f:0x487]
---
Predecessors: [0x44e]
Successors: []
---
0x47f RETURNDATASIZE
0x480 PUSH1 0x0
0x482 DUP1
0x483 RETURNDATACOPY
0x484 RETURNDATASIZE
0x485 PUSH1 0x0
0x487 REVERT
---
0x47f: V342 = RETURNDATASIZE
0x480: V343 = 0x0
0x483: RETURNDATACOPY 0x0 0x0 V342
0x484: V344 = RETURNDATASIZE
0x485: V345 = 0x0
0x487: REVERT 0x0 V344
---
Entry stack: [V11, 0x61, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V339]

================================

Block 0x488
[0x488:0x48a]
---
Predecessors: [0x44e]
Successors: [0x61]
---
0x488 JUMPDEST
0x489 POP
0x48a JUMP
---
0x488: JUMPDEST 
0x48a: JUMP 0x61
---
Entry stack: [V11, 0x61, V339]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x48b
[0x48b:0x49d]
---
Predecessors: [0xab]
Successors: [0x49e, 0x4a2]
---
0x48b JUMPDEST
0x48c PUSH1 0x1
0x48e SLOAD
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 AND
0x498 CALLER
0x499 EQ
0x49a PUSH2 0x4a2
0x49d JUMPI
---
0x48b: JUMPDEST 
0x48c: V346 = 0x1
0x48e: V347 = S[0x1]
0x48f: V348 = 0x1
0x491: V349 = 0xa0
0x493: V350 = 0x2
0x495: V351 = EXP 0x2 0xa0
0x496: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x498: V354 = CALLER
0x499: V355 = EQ V354 V353
0x49a: V356 = 0x4a2
0x49d: JUMPI 0x4a2 V355
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x49e
[0x49e:0x4a1]
---
Predecessors: [0x48b]
Successors: []
---
0x49e PUSH1 0x0
0x4a0 DUP1
0x4a1 REVERT
---
0x49e: V357 = 0x0
0x4a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x4a2
[0x4a2:0x4af]
---
Predecessors: [0x48b]
Successors: []
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x1
0x4a5 SLOAD
0x4a6 PUSH1 0x1
0x4a8 PUSH1 0xa0
0x4aa PUSH1 0x2
0x4ac EXP
0x4ad SUB
0x4ae AND
0x4af SELFDESTRUCT
---
0x4a2: JUMPDEST 
0x4a3: V358 = 0x1
0x4a5: V359 = S[0x1]
0x4a6: V360 = 0x1
0x4a8: V361 = 0xa0
0x4aa: V362 = 0x2
0x4ac: V363 = EXP 0x2 0xa0
0x4ad: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ae: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x4af: SELFDESTRUCT V365
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x4b0
[0x4b0:0x4be]
---
Predecessors: [0x325]
Successors: [0x33b]
---
0x4b0 JUMPDEST
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 PUSH1 0x30
0x4b6 DUP1
0x4b7 PUSH2 0x4c0
0x4ba DUP4
0x4bb CODECOPY
0x4bc ADD
0x4bd SWAP1
0x4be JUMP
---
0x4b0: JUMPDEST 
0x4b1: V366 = 0x40
0x4b3: V367 = M[0x40]
0x4b4: V368 = 0x30
0x4b7: V369 = 0x4c0
0x4bb: CODECOPY V367 0x4c0 0x30
0x4bc: V370 = ADD 0x30 V367
0x4be: JUMP 0x33b
---
Entry stack: [V11, 0x61, V37, V141, V140, V170, V191, V191, V220, 0x33b]
Stack pops: 1
Stack additions: [V370]
Exit stack: [V11, 0x61, V37, V141, V140, V170, V191, V191, V220, V370]

================================

Block 0x4bf
[0x4bf:0x4dc]
---
Predecessors: []
Successors: [0x4dd]
---
0x4bf INVALID
0x4c0 PUSH1 0x80
0x4c2 PUSH1 0x40
0x4c4 MSTORE
0x4c5 PUSH1 0x40
0x4c7 MLOAD
0x4c8 PUSH1 0x20
0x4ca DUP1
0x4cb PUSH1 0x30
0x4cd DUP4
0x4ce CODECOPY
0x4cf DUP2
0x4d0 ADD
0x4d1 DUP1
0x4d2 PUSH1 0x40
0x4d4 MSTORE
0x4d5 PUSH1 0x20
0x4d7 DUP2
0x4d8 LT
0x4d9 ISZERO
0x4da PUSH1 0x21
0x4dc JUMPI
---
0x4bf: INVALID 
0x4c0: V371 = 0x80
0x4c2: V372 = 0x40
0x4c4: M[0x40] = 0x80
0x4c5: V373 = 0x40
0x4c7: V374 = M[0x40]
0x4c8: V375 = 0x20
0x4cb: V376 = 0x30
0x4ce: CODECOPY V374 0x30 0x20
0x4d0: V377 = ADD V374 0x20
0x4d2: V378 = 0x40
0x4d4: M[0x40] = V377
0x4d5: V379 = 0x20
0x4d8: V380 = LT V377 0x20
0x4d9: V381 = ISZERO V380
0x4da: V382 = 0x21
0x4dc: THROWI V381
---
Entry stack: []
Stack pops: 0
Stack additions: [V377, V374]
Exit stack: []

================================

Block 0x4dd
[0x4dd:0x51a]
---
Predecessors: [0x4bf]
Successors: []
---
0x4dd PUSH1 0x0
0x4df DUP1
0x4e0 REVERT
0x4e1 JUMPDEST
0x4e2 POP
0x4e3 MLOAD
0x4e4 PUSH1 0x1
0x4e6 PUSH1 0xa0
0x4e8 PUSH1 0x2
0x4ea EXP
0x4eb SUB
0x4ec DUP2
0x4ed AND
0x4ee SELFDESTRUCT
0x4ef INVALID
0x4f0 LOG1
0x4f1 PUSH6 0x627a7a723058
0x4f8 SHA3
0x4f9 MISSING 0xac
0x4fa DUP4
0x4fb MISSING 0xd3
0x4fc MISSING 0xbb
0x4fd SWAP12
0x4fe PUSH28 0xcdf517899e3b0521b03b02562f2e5b53a8f1510de29ffac1432b0029
---
0x4dd: V383 = 0x0
0x4e0: REVERT 0x0 0x0
0x4e1: JUMPDEST 
0x4e3: V384 = M[S1]
0x4e4: V385 = 0x1
0x4e6: V386 = 0xa0
0x4e8: V387 = 0x2
0x4ea: V388 = EXP 0x2 0xa0
0x4eb: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V390 = AND V384 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: SELFDESTRUCT V390
0x4ef: INVALID 
0x4f0: LOG S0 S1 S2
0x4f1: V391 = 0x627a7a723058
0x4f8: V392 = SHA3 0x627a7a723058 S3
0x4f9: MISSING 0xac
0x4fb: MISSING 0xd3
0x4fc: MISSING 0xbb
0x4fe: V393 = 0xcdf517899e3b0521b03b02562f2e5b53a8f1510de29ffac1432b0029
---
Entry stack: [V374, V377]
Stack pops: 0
Stack additions: [V384, V392, S3, S0, S1, S2, S3, 0xcdf517899e3b0521b03b02562f2e5b53a8f1510de29ffac1432b0029, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x28cb5157
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0xb4, 0xc7, 0xcb, 0xf8, 0x119, 0x11e, 0x12b, 0x191

Function 1:
Public function signature: 0x3a3800f1
Entry block: 0x6b
Exit block: 0x61
Body: 0x61, 0x6b, 0x7d, 0x81, 0x195, 0x1a8, 0x1ac, 0x20f, 0x213, 0x21e, 0x227, 0x239, 0x23d, 0x249, 0x2af, 0x2bf, 0x325, 0x33b, 0x35e, 0x367, 0x3be, 0x3c2, 0x3cd, 0x3d6, 0x3e8, 0x3ec, 0x3f5, 0x425, 0x42e, 0x430, 0x4b0

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x8a
Exit block: 0x61
Body: 0x61, 0x8a, 0x92, 0x96, 0x437, 0x44a, 0x44e, 0x47f, 0x488

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0x9f
Exit block: 0x4a2
Body: 0x9f, 0xa7, 0xab, 0x48b, 0x49e, 0x4a2

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

