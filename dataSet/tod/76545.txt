Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa5]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xadcbe58
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa5
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xadcbe58
0x3b: V13 = EQ V11 0xadcbe58
0x3c: V14 = 0xa5
0x3f: JUMPI 0xa5 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc9]
---
0x40 DUP1
0x41 PUSH4 0x361ccc5f
0x46 EQ
0x47 PUSH2 0xc9
0x4a JUMPI
---
0x41: V15 = 0x361ccc5f
0x46: V16 = EQ 0x361ccc5f V11
0x47: V17 = 0xc9
0x4a: JUMPI 0xc9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xff]
---
0x4b DUP1
0x4c PUSH4 0x3e29fc0c
0x51 EQ
0x52 PUSH2 0xff
0x55 JUMPI
---
0x4c: V18 = 0x3e29fc0c
0x51: V19 = EQ 0x3e29fc0c V11
0x52: V20 = 0xff
0x55: JUMPI 0xff V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x123]
---
0x56 DUP1
0x57 PUSH4 0x5b715b48
0x5c EQ
0x5d PUSH2 0x123
0x60 JUMPI
---
0x57: V21 = 0x5b715b48
0x5c: V22 = EQ 0x5b715b48 V11
0x5d: V23 = 0x123
0x60: JUMPI 0x123 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x13b]
---
0x61 DUP1
0x62 PUSH4 0x7355f245
0x67 EQ
0x68 PUSH2 0x13b
0x6b JUMPI
---
0x62: V24 = 0x7355f245
0x67: V25 = EQ 0x7355f245 V11
0x68: V26 = 0x13b
0x6b: JUMPI 0x13b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x15c]
---
0x6c DUP1
0x6d PUSH4 0x7379daab
0x72 EQ
0x73 PUSH2 0x15c
0x76 JUMPI
---
0x6d: V27 = 0x7379daab
0x72: V28 = EQ 0x7379daab V11
0x73: V29 = 0x15c
0x76: JUMPI 0x15c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x180]
---
0x77 DUP1
0x78 PUSH4 0x8a8a7645
0x7d EQ
0x7e PUSH2 0x180
0x81 JUMPI
---
0x78: V30 = 0x8a8a7645
0x7d: V31 = EQ 0x8a8a7645 V11
0x7e: V32 = 0x180
0x81: JUMPI 0x180 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x198]
---
0x82 DUP1
0x83 PUSH4 0x8d2e6c90
0x88 EQ
0x89 PUSH2 0x198
0x8c JUMPI
---
0x83: V33 = 0x8d2e6c90
0x88: V34 = EQ 0x8d2e6c90 V11
0x89: V35 = 0x198
0x8c: JUMPI 0x198 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1b9]
---
0x8d DUP1
0x8e PUSH4 0x9a6983c3
0x93 EQ
0x94 PUSH2 0x1b9
0x97 JUMPI
---
0x8e: V36 = 0x9a6983c3
0x93: V37 = EQ 0x9a6983c3 V11
0x94: V38 = 0x1b9
0x97: JUMPI 0x1b9 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1d1]
---
0x98 DUP1
0x99 PUSH4 0xa3640cb9
0x9e EQ
0x9f PUSH2 0x1d1
0xa2 JUMPI
---
0x99: V39 = 0xa3640cb9
0x9e: V40 = EQ 0xa3640cb9 V11
0x9f: V41 = 0x1d1
0xa2: JUMPI 0x1d1 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x0, 0x98, 0x358, 0x578, 0x592, 0x680, 0x717, 0x981]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V11, 0xa3, V92, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, S0]

================================

Block 0xa5
[0xa5:0xac]
---
Predecessors: [0xd]
Successors: [0xad, 0xb1]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 DUP1
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa5: JUMPDEST 
0xa6: V42 = CALLVALUE
0xa8: V43 = ISZERO V42
0xa9: V44 = 0xb1
0xac: JUMPI 0xb1 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa5]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V45 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xb1
[0xb1:0xc8]
---
Predecessors: [0xa5]
Successors: [0x1fb]
---
0xb1 JUMPDEST
0xb2 POP
0xb3 PUSH2 0xa3
0xb6 PUSH1 0x1
0xb8 PUSH1 0xa0
0xba PUSH1 0x2
0xbc EXP
0xbd SUB
0xbe PUSH1 0x4
0xc0 CALLDATALOAD
0xc1 AND
0xc2 PUSH1 0x24
0xc4 CALLDATALOAD
0xc5 PUSH2 0x1fb
0xc8 JUMP
---
0xb1: JUMPDEST 
0xb3: V46 = 0xa3
0xb6: V47 = 0x1
0xb8: V48 = 0xa0
0xba: V49 = 0x2
0xbc: V50 = EXP 0x2 0xa0
0xbd: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V52 = 0x4
0xc0: V53 = CALLDATALOAD 0x4
0xc1: V54 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V55 = 0x24
0xc4: V56 = CALLDATALOAD 0x24
0xc5: V57 = 0x1fb
0xc8: JUMP 0x1fb
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0xa3, V54, V56]
Exit stack: [V11, 0xa3, V54, V56]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x40]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V58 = CALLVALUE
0xcc: V59 = ISZERO V58
0xcd: V60 = 0xd5
0xd0: JUMPI 0xd5 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V61 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xd5
[0xd5:0xec]
---
Predecessors: [0xc9]
Successors: [0x35c]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xed
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 PUSH1 0x4
0xe4 CALLDATALOAD
0xe5 AND
0xe6 PUSH1 0x24
0xe8 CALLDATALOAD
0xe9 PUSH2 0x35c
0xec JUMP
---
0xd5: JUMPDEST 
0xd7: V62 = 0xed
0xda: V63 = 0x1
0xdc: V64 = 0xa0
0xde: V65 = 0x2
0xe0: V66 = EXP 0x2 0xa0
0xe1: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V68 = 0x4
0xe4: V69 = CALLDATALOAD 0x4
0xe5: V70 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V71 = 0x24
0xe8: V72 = CALLDATALOAD 0x24
0xe9: V73 = 0x35c
0xec: JUMP 0x35c
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xed, V70, V72]
Exit stack: [V11, 0xed, V70, V72]

================================

Block 0xed
[0xed:0xfe]
---
Predecessors: [0x3d7, 0x6fa]
Successors: []
---
0xed JUMPDEST
0xee PUSH1 0x40
0xf0 DUP1
0xf1 MLOAD
0xf2 SWAP2
0xf3 DUP3
0xf4 MSTORE
0xf5 MLOAD
0xf6 SWAP1
0xf7 DUP2
0xf8 SWAP1
0xf9 SUB
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe RETURN
---
0xed: JUMPDEST 
0xee: V74 = 0x40
0xf1: V75 = M[0x40]
0xf4: M[V75] = S0
0xf5: V76 = M[0x40]
0xf9: V77 = SUB V75 V76
0xfa: V78 = 0x20
0xfc: V79 = ADD 0x20 V77
0xfe: RETURN V76 V79
---
Entry stack: [V11, 0xa3, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, S1]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0x4b]
Successors: [0x107, 0x10b]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 DUP1
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0xff: JUMPDEST 
0x100: V80 = CALLVALUE
0x102: V81 = ISZERO V80
0x103: V82 = 0x10b
0x106: JUMPI 0x10b V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V11, V80]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0xff]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V83 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V80]

================================

Block 0x10b
[0x10b:0x122]
---
Predecessors: [0xff]
Successors: [0x3de]
---
0x10b JUMPDEST
0x10c POP
0x10d PUSH2 0xa3
0x110 PUSH1 0x1
0x112 PUSH1 0xa0
0x114 PUSH1 0x2
0x116 EXP
0x117 SUB
0x118 PUSH1 0x4
0x11a CALLDATALOAD
0x11b AND
0x11c PUSH1 0x24
0x11e CALLDATALOAD
0x11f PUSH2 0x3de
0x122 JUMP
---
0x10b: JUMPDEST 
0x10d: V84 = 0xa3
0x110: V85 = 0x1
0x112: V86 = 0xa0
0x114: V87 = 0x2
0x116: V88 = EXP 0x2 0xa0
0x117: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x118: V90 = 0x4
0x11a: V91 = CALLDATALOAD 0x4
0x11b: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x11c: V93 = 0x24
0x11e: V94 = CALLDATALOAD 0x24
0x11f: V95 = 0x3de
0x122: JUMP 0x3de
---
Entry stack: [V11, V80]
Stack pops: 1
Stack additions: [0xa3, V92, V94]
Exit stack: [V11, 0xa3, V92, V94]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x56]
Successors: [0x12b, 0x12f]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 DUP1
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x123: JUMPDEST 
0x124: V96 = CALLVALUE
0x126: V97 = ISZERO V96
0x127: V98 = 0x12f
0x12a: JUMPI 0x12f V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x123]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V99 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x12f
[0x12f:0x13a]
---
Predecessors: [0x123]
Successors: [0x4b4]
---
0x12f JUMPDEST
0x130 POP
0x131 PUSH2 0xa3
0x134 PUSH1 0x4
0x136 CALLDATALOAD
0x137 PUSH2 0x4b4
0x13a JUMP
---
0x12f: JUMPDEST 
0x131: V100 = 0xa3
0x134: V101 = 0x4
0x136: V102 = CALLDATALOAD 0x4
0x137: V103 = 0x4b4
0x13a: JUMP 0x4b4
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0xa3, V102]
Exit stack: [V11, 0xa3, V102]

================================

Block 0x13b
[0x13b:0x142]
---
Predecessors: [0x61]
Successors: [0x143, 0x147]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d DUP1
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x13b: JUMPDEST 
0x13c: V104 = CALLVALUE
0x13e: V105 = ISZERO V104
0x13f: V106 = 0x147
0x142: JUMPI 0x147 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x13b]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V107 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x147
[0x147:0x15b]
---
Predecessors: [0x13b]
Successors: [0x57b]
---
0x147 JUMPDEST
0x148 POP
0x149 PUSH2 0xa3
0x14c PUSH1 0x1
0x14e PUSH1 0xa0
0x150 PUSH1 0x2
0x152 EXP
0x153 SUB
0x154 PUSH1 0x4
0x156 CALLDATALOAD
0x157 AND
0x158 PUSH2 0x57b
0x15b JUMP
---
0x147: JUMPDEST 
0x149: V108 = 0xa3
0x14c: V109 = 0x1
0x14e: V110 = 0xa0
0x150: V111 = 0x2
0x152: V112 = EXP 0x2 0xa0
0x153: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x154: V114 = 0x4
0x156: V115 = CALLDATALOAD 0x4
0x157: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x158: V117 = 0x57b
0x15b: JUMP 0x57b
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0xa3, V116]
Exit stack: [V11, 0xa3, V116]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x6c]
Successors: [0x164, 0x168]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e DUP1
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x15c: JUMPDEST 
0x15d: V118 = CALLVALUE
0x15f: V119 = ISZERO V118
0x160: V120 = 0x168
0x163: JUMPI 0x168 V119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, V118]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x15c]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V121 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V118]

================================

Block 0x168
[0x168:0x17f]
---
Predecessors: [0x15c]
Successors: [0x5b9]
---
0x168 JUMPDEST
0x169 POP
0x16a PUSH2 0xa3
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 PUSH1 0x4
0x177 CALLDATALOAD
0x178 AND
0x179 PUSH1 0x24
0x17b CALLDATALOAD
0x17c PUSH2 0x5b9
0x17f JUMP
---
0x168: JUMPDEST 
0x16a: V122 = 0xa3
0x16d: V123 = 0x1
0x16f: V124 = 0xa0
0x171: V125 = 0x2
0x173: V126 = EXP 0x2 0xa0
0x174: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x175: V128 = 0x4
0x177: V129 = CALLDATALOAD 0x4
0x178: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x179: V131 = 0x24
0x17b: V132 = CALLDATALOAD 0x24
0x17c: V133 = 0x5b9
0x17f: JUMP 0x5b9
---
Entry stack: [V11, V118]
Stack pops: 1
Stack additions: [0xa3, V130, V132]
Exit stack: [V11, 0xa3, V130, V132]

================================

Block 0x180
[0x180:0x187]
---
Predecessors: [0x77]
Successors: [0x188, 0x18c]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 DUP1
0x183 ISZERO
0x184 PUSH2 0x18c
0x187 JUMPI
---
0x180: JUMPDEST 
0x181: V134 = CALLVALUE
0x183: V135 = ISZERO V134
0x184: V136 = 0x18c
0x187: JUMPI 0x18c V135
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V11, V134]

================================

Block 0x188
[0x188:0x18b]
---
Predecessors: [0x180]
Successors: []
---
0x188 PUSH1 0x0
0x18a DUP1
0x18b REVERT
---
0x188: V137 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V11, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V134]

================================

Block 0x18c
[0x18c:0x197]
---
Predecessors: [0x180]
Successors: [0x688]
---
0x18c JUMPDEST
0x18d POP
0x18e PUSH2 0xed
0x191 PUSH1 0x4
0x193 CALLDATALOAD
0x194 PUSH2 0x688
0x197 JUMP
---
0x18c: JUMPDEST 
0x18e: V138 = 0xed
0x191: V139 = 0x4
0x193: V140 = CALLDATALOAD 0x4
0x194: V141 = 0x688
0x197: JUMP 0x688
---
Entry stack: [V11, V134]
Stack pops: 1
Stack additions: [0xed, V140]
Exit stack: [V11, 0xed, V140]

================================

Block 0x198
[0x198:0x19f]
---
Predecessors: [0x82]
Successors: [0x1a0, 0x1a4]
---
0x198 JUMPDEST
0x199 CALLVALUE
0x19a DUP1
0x19b ISZERO
0x19c PUSH2 0x1a4
0x19f JUMPI
---
0x198: JUMPDEST 
0x199: V142 = CALLVALUE
0x19b: V143 = ISZERO V142
0x19c: V144 = 0x1a4
0x19f: JUMPI 0x1a4 V143
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V142]
Exit stack: [V11, V142]

================================

Block 0x1a0
[0x1a0:0x1a3]
---
Predecessors: [0x198]
Successors: []
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
---
0x1a0: V145 = 0x0
0x1a3: REVERT 0x0 0x0
---
Entry stack: [V11, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V142]

================================

Block 0x1a4
[0x1a4:0x1b8]
---
Predecessors: [0x198]
Successors: [0x700]
---
0x1a4 JUMPDEST
0x1a5 POP
0x1a6 PUSH2 0xa3
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 PUSH1 0x4
0x1b3 CALLDATALOAD
0x1b4 AND
0x1b5 PUSH2 0x700
0x1b8 JUMP
---
0x1a4: JUMPDEST 
0x1a6: V146 = 0xa3
0x1a9: V147 = 0x1
0x1ab: V148 = 0xa0
0x1ad: V149 = 0x2
0x1af: V150 = EXP 0x2 0xa0
0x1b0: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V152 = 0x4
0x1b3: V153 = CALLDATALOAD 0x4
0x1b4: V154 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V155 = 0x700
0x1b8: JUMP 0x700
---
Entry stack: [V11, V142]
Stack pops: 1
Stack additions: [0xa3, V154]
Exit stack: [V11, 0xa3, V154]

================================

Block 0x1b9
[0x1b9:0x1c0]
---
Predecessors: [0x8d]
Successors: [0x1c1, 0x1c5]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb DUP1
0x1bc ISZERO
0x1bd PUSH2 0x1c5
0x1c0 JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V156 = CALLVALUE
0x1bc: V157 = ISZERO V156
0x1bd: V158 = 0x1c5
0x1c0: JUMPI 0x1c5 V157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V156]
Exit stack: [V11, V156]

================================

Block 0x1c1
[0x1c1:0x1c4]
---
Predecessors: [0x1b9]
Successors: []
---
0x1c1 PUSH1 0x0
0x1c3 DUP1
0x1c4 REVERT
---
0x1c1: V159 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V11, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V156]

================================

Block 0x1c5
[0x1c5:0x1d0]
---
Predecessors: [0x1b9]
Successors: [0x746]
---
0x1c5 JUMPDEST
0x1c6 POP
0x1c7 PUSH2 0xa3
0x1ca PUSH1 0x4
0x1cc CALLDATALOAD
0x1cd PUSH2 0x746
0x1d0 JUMP
---
0x1c5: JUMPDEST 
0x1c7: V160 = 0xa3
0x1ca: V161 = 0x4
0x1cc: V162 = CALLDATALOAD 0x4
0x1cd: V163 = 0x746
0x1d0: JUMP 0x746
---
Entry stack: [V11, V156]
Stack pops: 1
Stack additions: [0xa3, V162]
Exit stack: [V11, 0xa3, V162]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x98]
Successors: [0x1d9, 0x1dd]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 DUP1
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V164 = CALLVALUE
0x1d4: V165 = ISZERO V164
0x1d5: V166 = 0x1dd
0x1d8: JUMPI 0x1dd V165
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V164]
Exit stack: [V11, V164]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V167 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V11, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V164]

================================

Block 0x1dd
[0x1dd:0x1fa]
---
Predecessors: [0x1d1]
Successors: [0x813]
---
0x1dd JUMPDEST
0x1de POP
0x1df PUSH2 0xa3
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea PUSH1 0x4
0x1ec CALLDATALOAD
0x1ed DUP2
0x1ee AND
0x1ef SWAP1
0x1f0 PUSH1 0x24
0x1f2 CALLDATALOAD
0x1f3 AND
0x1f4 PUSH1 0x44
0x1f6 CALLDATALOAD
0x1f7 PUSH2 0x813
0x1fa JUMP
---
0x1dd: JUMPDEST 
0x1df: V168 = 0xa3
0x1e2: V169 = 0x1
0x1e4: V170 = 0xa0
0x1e6: V171 = 0x2
0x1e8: V172 = EXP 0x2 0xa0
0x1e9: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V174 = 0x4
0x1ec: V175 = CALLDATALOAD 0x4
0x1ee: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x1f0: V177 = 0x24
0x1f2: V178 = CALLDATALOAD 0x24
0x1f3: V179 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V180 = 0x44
0x1f6: V181 = CALLDATALOAD 0x44
0x1f7: V182 = 0x813
0x1fa: JUMP 0x813
---
Entry stack: [V11, V164]
Stack pops: 1
Stack additions: [0xa3, V176, V179, V181]
Exit stack: [V11, 0xa3, V176, V179, V181]

================================

Block 0x1fb
[0x1fb:0x213]
---
Predecessors: [0xb1, 0x4aa]
Successors: [0x214, 0x223]
---
0x1fb JUMPDEST
0x1fc CALLER
0x1fd PUSH1 0x0
0x1ff SWAP1
0x200 DUP2
0x201 MSTORE
0x202 PUSH1 0x1
0x204 PUSH1 0x20
0x206 MSTORE
0x207 PUSH1 0x40
0x209 SWAP1
0x20a SHA3
0x20b SLOAD
0x20c PUSH1 0xff
0x20e AND
0x20f DUP1
0x210 PUSH2 0x223
0x213 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V183 = CALLER
0x1fd: V184 = 0x0
0x201: M[0x0] = V183
0x202: V185 = 0x1
0x204: V186 = 0x20
0x206: M[0x20] = 0x1
0x207: V187 = 0x40
0x20a: V188 = SHA3 0x0 0x40
0x20b: V189 = S[V188]
0x20c: V190 = 0xff
0x20e: V191 = AND 0xff V189
0x210: V192 = 0x223
0x213: JUMPI 0x223 V191
---
Entry stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0, V191]

================================

Block 0x214
[0x214:0x222]
---
Predecessors: [0x1fb]
Successors: [0x223]
---
0x214 POP
0x215 PUSH1 0x0
0x217 SLOAD
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 AND
0x221 CALLER
0x222 EQ
---
0x215: V193 = 0x0
0x217: V194 = S[0x0]
0x218: V195 = 0x1
0x21a: V196 = 0xa0
0x21c: V197 = 0x2
0x21e: V198 = EXP 0x2 0xa0
0x21f: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x221: V201 = CALLER
0x222: V202 = EQ V201 V200
---
Entry stack: [V11, 0xa3, V92, S4, {0xa3, 0x358}, S2, S1, V191]
Stack pops: 1
Stack additions: [V202]
Exit stack: [V11, 0xa3, V92, S4, {0xa3, 0x358}, S2, S1, V202]

================================

Block 0x223
[0x223:0x229]
---
Predecessors: [0x1fb, 0x214]
Successors: [0x22a, 0x22e]
---
0x223 JUMPDEST
0x224 ISZERO
0x225 ISZERO
0x226 PUSH2 0x22e
0x229 JUMPI
---
0x223: JUMPDEST 
0x224: V203 = ISZERO S0
0x225: V204 = ISZERO V203
0x226: V205 = 0x22e
0x229: JUMPI 0x22e V204
---
Entry stack: [V11, 0xa3, V92, S4, {0xa3, 0x358}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, V92, S4, {0xa3, 0x358}, S2, S1]

================================

Block 0x22a
[0x22a:0x22d]
---
Predecessors: [0x223]
Successors: []
---
0x22a PUSH1 0x0
0x22c DUP1
0x22d REVERT
---
0x22a: V206 = 0x0
0x22d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0]

================================

Block 0x22e
[0x22e:0x28d]
---
Predecessors: [0x223]
Successors: [0x28e, 0x292]
---
0x22e JUMPDEST
0x22f PUSH1 0x40
0x231 DUP1
0x232 MLOAD
0x233 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x254 DUP2
0x255 MSTORE
0x256 ADDRESS
0x257 PUSH1 0x4
0x259 DUP3
0x25a ADD
0x25b MSTORE
0x25c SWAP1
0x25d MLOAD
0x25e DUP3
0x25f SWAP2
0x260 PUSH1 0x1
0x262 PUSH1 0xa0
0x264 PUSH1 0x2
0x266 EXP
0x267 SUB
0x268 DUP6
0x269 AND
0x26a SWAP2
0x26b PUSH4 0x70a08231
0x270 SWAP2
0x271 PUSH1 0x24
0x273 DUP1
0x274 DUP3
0x275 ADD
0x276 SWAP3
0x277 PUSH1 0x20
0x279 SWAP3
0x27a SWAP1
0x27b SWAP2
0x27c SWAP1
0x27d DUP3
0x27e SWAP1
0x27f SUB
0x280 ADD
0x281 DUP2
0x282 PUSH1 0x0
0x284 DUP8
0x285 DUP1
0x286 EXTCODESIZE
0x287 ISZERO
0x288 DUP1
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x22e: JUMPDEST 
0x22f: V207 = 0x40
0x232: V208 = M[0x40]
0x233: V209 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x255: M[V208] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x256: V210 = ADDRESS
0x257: V211 = 0x4
0x25a: V212 = ADD V208 0x4
0x25b: M[V212] = V210
0x25d: V213 = M[0x40]
0x260: V214 = 0x1
0x262: V215 = 0xa0
0x264: V216 = 0x2
0x266: V217 = EXP 0x2 0xa0
0x267: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x269: V219 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V220 = 0x70a08231
0x271: V221 = 0x24
0x275: V222 = ADD V208 0x24
0x277: V223 = 0x20
0x27f: V224 = SUB V208 V213
0x280: V225 = ADD V224 0x24
0x282: V226 = 0x0
0x286: V227 = EXTCODESIZE V219
0x287: V228 = ISZERO V227
0x289: V229 = ISZERO V228
0x28a: V230 = 0x292
0x28d: JUMPI 0x292 V229
---
Entry stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S0, V219, 0x70a08231, V222, 0x20, V213, V225, V213, 0x0, V219, V228]
Exit stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0, S0, V219, 0x70a08231, V222, 0x20, V213, V225, V213, 0x0, V219, V228]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x22e]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V231 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V92, S14, {0xa3, 0x358}, S12, S11, S10, V219, 0x70a08231, V222, 0x20, V213, V225, V213, 0x0, V219, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, S14, {0xa3, 0x358}, S12, S11, S10, V219, 0x70a08231, V222, 0x20, V213, V225, V213, 0x0, V219, V228]

================================

Block 0x292
[0x292:0x29c]
---
Predecessors: [0x22e]
Successors: [0x29d, 0x2a6]
---
0x292 JUMPDEST
0x293 POP
0x294 GAS
0x295 CALL
0x296 ISZERO
0x297 DUP1
0x298 ISZERO
0x299 PUSH2 0x2a6
0x29c JUMPI
---
0x292: JUMPDEST 
0x294: V232 = GAS
0x295: V233 = CALL V232 V219 0x0 V213 V225 V213 0x20
0x296: V234 = ISZERO V233
0x298: V235 = ISZERO V234
0x299: V236 = 0x2a6
0x29c: JUMPI 0x2a6 V235
---
Entry stack: [V11, 0xa3, V92, S14, {0xa3, 0x358}, S12, S11, S10, V219, 0x70a08231, V222, 0x20, V213, V225, V213, 0x0, V219, V228]
Stack pops: 7
Stack additions: [V234]
Exit stack: [V11, 0xa3, V92, S14, {0xa3, 0x358}, S12, S11, S10, V219, 0x70a08231, V222, V234]

================================

Block 0x29d
[0x29d:0x2a5]
---
Predecessors: [0x292]
Successors: []
---
0x29d RETURNDATASIZE
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 RETURNDATACOPY
0x2a2 RETURNDATASIZE
0x2a3 PUSH1 0x0
0x2a5 REVERT
---
0x29d: V237 = RETURNDATASIZE
0x29e: V238 = 0x0
0x2a1: RETURNDATACOPY 0x0 0x0 V237
0x2a2: V239 = RETURNDATASIZE
0x2a3: V240 = 0x0
0x2a5: REVERT 0x0 V239
---
Entry stack: [V11, 0xa3, V92, S8, {0xa3, 0x358}, S6, S5, S4, V219, 0x70a08231, V222, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, S8, {0xa3, 0x358}, S6, S5, S4, V219, 0x70a08231, V222, V234]

================================

Block 0x2a6
[0x2a6:0x2b7]
---
Predecessors: [0x292]
Successors: [0x2b8, 0x2bc]
---
0x2a6 JUMPDEST
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae RETURNDATASIZE
0x2af PUSH1 0x20
0x2b1 DUP2
0x2b2 LT
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x2a6: JUMPDEST 
0x2ab: V241 = 0x40
0x2ad: V242 = M[0x40]
0x2ae: V243 = RETURNDATASIZE
0x2af: V244 = 0x20
0x2b2: V245 = LT V243 0x20
0x2b3: V246 = ISZERO V245
0x2b4: V247 = 0x2bc
0x2b7: JUMPI 0x2bc V246
---
Entry stack: [V11, 0xa3, V92, S8, {0xa3, 0x358}, S6, S5, S4, V219, 0x70a08231, V222, V234]
Stack pops: 4
Stack additions: [V242, V243]
Exit stack: [V11, 0xa3, V92, S8, {0xa3, 0x358}, S6, S5, S4, V242, V243]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2a6]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V248 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V92, S6, {0xa3, 0x358}, S4, S3, S2, V242, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, S6, {0xa3, 0x358}, S4, S3, S2, V242, V243]

================================

Block 0x2bc
[0x2bc:0x2c3]
---
Predecessors: [0x2a6]
Successors: [0x2c4, 0x358]
---
0x2bc JUMPDEST
0x2bd POP
0x2be MLOAD
0x2bf LT
0x2c0 PUSH2 0x358
0x2c3 JUMPI
---
0x2bc: JUMPDEST 
0x2be: V249 = M[V242]
0x2bf: V250 = LT V249 S2
0x2c0: V251 = 0x358
0x2c3: JUMPI 0x358 V250
---
Entry stack: [V11, 0xa3, V92, S6, {0xa3, 0x358}, S4, S3, S2, V242, V243]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xa3, V92, S6, {0xa3, 0x358}, S4, S3]

================================

Block 0x2c4
[0x2c4:0x326]
---
Predecessors: [0x2bc]
Successors: [0x327, 0x32b]
---
0x2c4 PUSH1 0x40
0x2c6 DUP1
0x2c7 MLOAD
0x2c8 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2e9 DUP2
0x2ea MSTORE
0x2eb CALLER
0x2ec PUSH1 0x4
0x2ee DUP3
0x2ef ADD
0x2f0 MSTORE
0x2f1 PUSH1 0x24
0x2f3 DUP2
0x2f4 ADD
0x2f5 DUP4
0x2f6 SWAP1
0x2f7 MSTORE
0x2f8 SWAP1
0x2f9 MLOAD
0x2fa PUSH1 0x1
0x2fc PUSH1 0xa0
0x2fe PUSH1 0x2
0x300 EXP
0x301 SUB
0x302 DUP5
0x303 AND
0x304 SWAP2
0x305 PUSH4 0xa9059cbb
0x30a SWAP2
0x30b PUSH1 0x44
0x30d DUP1
0x30e DUP4
0x30f ADD
0x310 SWAP3
0x311 PUSH1 0x20
0x313 SWAP3
0x314 SWAP2
0x315 SWAP1
0x316 DUP3
0x317 SWAP1
0x318 SUB
0x319 ADD
0x31a DUP2
0x31b PUSH1 0x0
0x31d DUP8
0x31e DUP1
0x31f EXTCODESIZE
0x320 ISZERO
0x321 DUP1
0x322 ISZERO
0x323 PUSH2 0x32b
0x326 JUMPI
---
0x2c4: V252 = 0x40
0x2c7: V253 = M[0x40]
0x2c8: V254 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2ea: M[V253] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2eb: V255 = CALLER
0x2ec: V256 = 0x4
0x2ef: V257 = ADD V253 0x4
0x2f0: M[V257] = V255
0x2f1: V258 = 0x24
0x2f4: V259 = ADD V253 0x24
0x2f7: M[V259] = S0
0x2f9: V260 = M[0x40]
0x2fa: V261 = 0x1
0x2fc: V262 = 0xa0
0x2fe: V263 = 0x2
0x300: V264 = EXP 0x2 0xa0
0x301: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x303: V266 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x305: V267 = 0xa9059cbb
0x30b: V268 = 0x44
0x30f: V269 = ADD V253 0x44
0x311: V270 = 0x20
0x318: V271 = SUB V253 V260
0x319: V272 = ADD V271 0x44
0x31b: V273 = 0x0
0x31f: V274 = EXTCODESIZE V266
0x320: V275 = ISZERO V274
0x322: V276 = ISZERO V275
0x323: V277 = 0x32b
0x326: JUMPI 0x32b V276
---
Entry stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V266, 0xa9059cbb, V269, 0x20, V260, V272, V260, 0x0, V266, V275]
Exit stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0, V266, 0xa9059cbb, V269, 0x20, V260, V272, V260, 0x0, V266, V275]

================================

Block 0x327
[0x327:0x32a]
---
Predecessors: [0x2c4]
Successors: []
---
0x327 PUSH1 0x0
0x329 DUP1
0x32a REVERT
---
0x327: V278 = 0x0
0x32a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V92, S13, {0xa3, 0x358}, S11, S10, V266, 0xa9059cbb, V269, 0x20, V260, V272, V260, 0x0, V266, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, S13, {0xa3, 0x358}, S11, S10, V266, 0xa9059cbb, V269, 0x20, V260, V272, V260, 0x0, V266, V275]

================================

Block 0x32b
[0x32b:0x335]
---
Predecessors: [0x2c4]
Successors: [0x336, 0x33f]
---
0x32b JUMPDEST
0x32c POP
0x32d GAS
0x32e CALL
0x32f ISZERO
0x330 DUP1
0x331 ISZERO
0x332 PUSH2 0x33f
0x335 JUMPI
---
0x32b: JUMPDEST 
0x32d: V279 = GAS
0x32e: V280 = CALL V279 V266 0x0 V260 V272 V260 0x20
0x32f: V281 = ISZERO V280
0x331: V282 = ISZERO V281
0x332: V283 = 0x33f
0x335: JUMPI 0x33f V282
---
Entry stack: [V11, 0xa3, V92, S13, {0xa3, 0x358}, S11, S10, V266, 0xa9059cbb, V269, 0x20, V260, V272, V260, 0x0, V266, V275]
Stack pops: 7
Stack additions: [V281]
Exit stack: [V11, 0xa3, V92, S13, {0xa3, 0x358}, S11, S10, V266, 0xa9059cbb, V269, V281]

================================

Block 0x336
[0x336:0x33e]
---
Predecessors: [0x32b]
Successors: []
---
0x336 RETURNDATASIZE
0x337 PUSH1 0x0
0x339 DUP1
0x33a RETURNDATACOPY
0x33b RETURNDATASIZE
0x33c PUSH1 0x0
0x33e REVERT
---
0x336: V284 = RETURNDATASIZE
0x337: V285 = 0x0
0x33a: RETURNDATACOPY 0x0 0x0 V284
0x33b: V286 = RETURNDATASIZE
0x33c: V287 = 0x0
0x33e: REVERT 0x0 V286
---
Entry stack: [V11, 0xa3, V92, S7, {0xa3, 0x358}, S5, S4, V266, 0xa9059cbb, V269, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, S7, {0xa3, 0x358}, S5, S4, V266, 0xa9059cbb, V269, V281]

================================

Block 0x33f
[0x33f:0x350]
---
Predecessors: [0x32b]
Successors: [0x351, 0x355]
---
0x33f JUMPDEST
0x340 POP
0x341 POP
0x342 POP
0x343 POP
0x344 PUSH1 0x40
0x346 MLOAD
0x347 RETURNDATASIZE
0x348 PUSH1 0x20
0x34a DUP2
0x34b LT
0x34c ISZERO
0x34d PUSH2 0x355
0x350 JUMPI
---
0x33f: JUMPDEST 
0x344: V288 = 0x40
0x346: V289 = M[0x40]
0x347: V290 = RETURNDATASIZE
0x348: V291 = 0x20
0x34b: V292 = LT V290 0x20
0x34c: V293 = ISZERO V292
0x34d: V294 = 0x355
0x350: JUMPI 0x355 V293
---
Entry stack: [V11, 0xa3, V92, S7, {0xa3, 0x358}, S5, S4, V266, 0xa9059cbb, V269, V281]
Stack pops: 4
Stack additions: [V289, V290]
Exit stack: [V11, 0xa3, V92, S7, {0xa3, 0x358}, S5, S4, V289, V290]

================================

Block 0x351
[0x351:0x354]
---
Predecessors: [0x33f]
Successors: []
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
---
0x351: V295 = 0x0
0x354: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V92, S5, {0xa3, 0x358}, S3, S2, V289, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, S5, {0xa3, 0x358}, S3, S2, V289, V290]

================================

Block 0x355
[0x355:0x357]
---
Predecessors: [0x33f]
Successors: [0x358]
---
0x355 JUMPDEST
0x356 POP
0x357 POP
---
0x355: JUMPDEST 
---
Entry stack: [V11, 0xa3, V92, S5, {0xa3, 0x358}, S3, S2, V289, V290]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xa3, V92, S5, {0xa3, 0x358}, S3, S2]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x2bc, 0x355, 0x358, 0x5ec, 0x6fa]
Successors: [0xa3, 0x358]
---
0x358 JUMPDEST
0x359 POP
0x35a POP
0x35b JUMP
---
0x358: JUMPDEST 
0x35b: JUMP {0xa3, 0x358}
---
Entry stack: [V11, 0xa3, V92, S3, {0xa3, 0x358}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xa3, V92, S3]

================================

Block 0x35c
[0x35c:0x376]
---
Predecessors: [0xd5]
Successors: [0x377, 0x386]
---
0x35c JUMPDEST
0x35d CALLER
0x35e PUSH1 0x0
0x360 SWAP1
0x361 DUP2
0x362 MSTORE
0x363 PUSH1 0x1
0x365 PUSH1 0x20
0x367 MSTORE
0x368 PUSH1 0x40
0x36a DUP2
0x36b SHA3
0x36c SLOAD
0x36d DUP2
0x36e SWAP1
0x36f PUSH1 0xff
0x371 AND
0x372 DUP1
0x373 PUSH2 0x386
0x376 JUMPI
---
0x35c: JUMPDEST 
0x35d: V296 = CALLER
0x35e: V297 = 0x0
0x362: M[0x0] = V296
0x363: V298 = 0x1
0x365: V299 = 0x20
0x367: M[0x20] = 0x1
0x368: V300 = 0x40
0x36b: V301 = SHA3 0x0 0x40
0x36c: V302 = S[V301]
0x36f: V303 = 0xff
0x371: V304 = AND 0xff V302
0x373: V305 = 0x386
0x376: JUMPI 0x386 V304
---
Entry stack: [V11, 0xed, V70, V72]
Stack pops: 0
Stack additions: [0x0, 0x0, V304]
Exit stack: [V11, 0xed, V70, V72, 0x0, 0x0, V304]

================================

Block 0x377
[0x377:0x385]
---
Predecessors: [0x35c]
Successors: [0x386]
---
0x377 POP
0x378 PUSH1 0x0
0x37a SLOAD
0x37b PUSH1 0x1
0x37d PUSH1 0xa0
0x37f PUSH1 0x2
0x381 EXP
0x382 SUB
0x383 AND
0x384 CALLER
0x385 EQ
---
0x378: V306 = 0x0
0x37a: V307 = S[0x0]
0x37b: V308 = 0x1
0x37d: V309 = 0xa0
0x37f: V310 = 0x2
0x381: V311 = EXP 0x2 0xa0
0x382: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x383: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x384: V314 = CALLER
0x385: V315 = EQ V314 V313
---
Entry stack: [V11, 0xed, V70, V72, 0x0, 0x0, V304]
Stack pops: 1
Stack additions: [V315]
Exit stack: [V11, 0xed, V70, V72, 0x0, 0x0, V315]

================================

Block 0x386
[0x386:0x38c]
---
Predecessors: [0x35c, 0x377]
Successors: [0x38d, 0x391]
---
0x386 JUMPDEST
0x387 ISZERO
0x388 ISZERO
0x389 PUSH2 0x391
0x38c JUMPI
---
0x386: JUMPDEST 
0x387: V316 = ISZERO S0
0x388: V317 = ISZERO V316
0x389: V318 = 0x391
0x38c: JUMPI 0x391 V317
---
Entry stack: [V11, 0xed, V70, V72, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xed, V70, V72, 0x0, 0x0]

================================

Block 0x38d
[0x38d:0x390]
---
Predecessors: [0x386]
Successors: []
---
0x38d PUSH1 0x0
0x38f DUP1
0x390 REVERT
---
0x38d: V319 = 0x0
0x390: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed, V70, V72, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V70, V72, 0x0, 0x0]

================================

Block 0x391
[0x391:0x39c]
---
Predecessors: [0x386]
Successors: [0x39d, 0x3d7]
---
0x391 JUMPDEST
0x392 POP
0x393 PUSH1 0x0
0x395 ADDRESS
0x396 BALANCE
0x397 DUP4
0x398 GT
0x399 PUSH2 0x3d7
0x39c JUMPI
---
0x391: JUMPDEST 
0x393: V320 = 0x0
0x395: V321 = ADDRESS
0x396: V322 = BALANCE V321
0x398: V323 = GT V72 V322
0x399: V324 = 0x3d7
0x39c: JUMPI 0x3d7 V323
---
Entry stack: [V11, 0xed, V70, V72, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x0]
Exit stack: [V11, 0xed, V70, V72, 0x0, 0x0]

================================

Block 0x39d
[0x39d:0x3c8]
---
Predecessors: [0x391]
Successors: [0x3c9, 0x3d2]
---
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 PUSH1 0x1
0x3a2 PUSH1 0xa0
0x3a4 PUSH1 0x2
0x3a6 EXP
0x3a7 SUB
0x3a8 DUP6
0x3a9 AND
0x3aa SWAP1
0x3ab DUP5
0x3ac ISZERO
0x3ad PUSH2 0x8fc
0x3b0 MUL
0x3b1 SWAP1
0x3b2 DUP6
0x3b3 SWAP1
0x3b4 PUSH1 0x0
0x3b6 DUP2
0x3b7 DUP2
0x3b8 DUP2
0x3b9 DUP6
0x3ba DUP9
0x3bb DUP9
0x3bc CALL
0x3bd SWAP4
0x3be POP
0x3bf POP
0x3c0 POP
0x3c1 POP
0x3c2 ISZERO
0x3c3 DUP1
0x3c4 ISZERO
0x3c5 PUSH2 0x3d2
0x3c8 JUMPI
---
0x39d: V325 = 0x40
0x39f: V326 = M[0x40]
0x3a0: V327 = 0x1
0x3a2: V328 = 0xa0
0x3a4: V329 = 0x2
0x3a6: V330 = EXP 0x2 0xa0
0x3a7: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a9: V332 = AND V70 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V333 = ISZERO V72
0x3ad: V334 = 0x8fc
0x3b0: V335 = MUL 0x8fc V333
0x3b4: V336 = 0x0
0x3bc: V337 = CALL V335 V332 V72 V326 0x0 V326 0x0
0x3c2: V338 = ISZERO V337
0x3c4: V339 = ISZERO V338
0x3c5: V340 = 0x3d2
0x3c8: JUMPI 0x3d2 V339
---
Entry stack: [V11, 0xed, V70, V72, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V338]
Exit stack: [V11, 0xed, V70, V72, 0x0, 0x0, V338]

================================

Block 0x3c9
[0x3c9:0x3d1]
---
Predecessors: [0x39d]
Successors: []
---
0x3c9 RETURNDATASIZE
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd RETURNDATACOPY
0x3ce RETURNDATASIZE
0x3cf PUSH1 0x0
0x3d1 REVERT
---
0x3c9: V341 = RETURNDATASIZE
0x3ca: V342 = 0x0
0x3cd: RETURNDATACOPY 0x0 0x0 V341
0x3ce: V343 = RETURNDATASIZE
0x3cf: V344 = 0x0
0x3d1: REVERT 0x0 V343
---
Entry stack: [V11, 0xed, V70, V72, 0x0, 0x0, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V70, V72, 0x0, 0x0, V338]

================================

Block 0x3d2
[0x3d2:0x3d6]
---
Predecessors: [0x39d]
Successors: [0x3d7]
---
0x3d2 JUMPDEST
0x3d3 POP
0x3d4 DUP3
0x3d5 SWAP1
0x3d6 POP
---
0x3d2: JUMPDEST 
---
Entry stack: [V11, 0xed, V70, V72, 0x0, 0x0, V338]
Stack pops: 4
Stack additions: [S3, S2, S3]
Exit stack: [V11, 0xed, V70, V72, 0x0, V72]

================================

Block 0x3d7
[0x3d7:0x3dd]
---
Predecessors: [0x391, 0x3d2]
Successors: [0xed]
---
0x3d7 JUMPDEST
0x3d8 SWAP4
0x3d9 SWAP3
0x3da POP
0x3db POP
0x3dc POP
0x3dd JUMP
---
0x3d7: JUMPDEST 
0x3dd: JUMP 0xed
---
Entry stack: [V11, 0xed, V70, V72, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x3de
[0x3de:0x3f6]
---
Predecessors: [0x10b]
Successors: [0x3f7, 0x406]
---
0x3de JUMPDEST
0x3df CALLER
0x3e0 PUSH1 0x0
0x3e2 SWAP1
0x3e3 DUP2
0x3e4 MSTORE
0x3e5 PUSH1 0x1
0x3e7 PUSH1 0x20
0x3e9 MSTORE
0x3ea PUSH1 0x40
0x3ec SWAP1
0x3ed SHA3
0x3ee SLOAD
0x3ef PUSH1 0xff
0x3f1 AND
0x3f2 DUP1
0x3f3 PUSH2 0x406
0x3f6 JUMPI
---
0x3de: JUMPDEST 
0x3df: V345 = CALLER
0x3e0: V346 = 0x0
0x3e4: M[0x0] = V345
0x3e5: V347 = 0x1
0x3e7: V348 = 0x20
0x3e9: M[0x20] = 0x1
0x3ea: V349 = 0x40
0x3ed: V350 = SHA3 0x0 0x40
0x3ee: V351 = S[V350]
0x3ef: V352 = 0xff
0x3f1: V353 = AND 0xff V351
0x3f3: V354 = 0x406
0x3f6: JUMPI 0x406 V353
---
Entry stack: [V11, 0xa3, V92, V94]
Stack pops: 0
Stack additions: [V353]
Exit stack: [V11, 0xa3, V92, V94, V353]

================================

Block 0x3f7
[0x3f7:0x405]
---
Predecessors: [0x3de]
Successors: [0x406]
---
0x3f7 POP
0x3f8 PUSH1 0x0
0x3fa SLOAD
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 AND
0x404 CALLER
0x405 EQ
---
0x3f8: V355 = 0x0
0x3fa: V356 = S[0x0]
0x3fb: V357 = 0x1
0x3fd: V358 = 0xa0
0x3ff: V359 = 0x2
0x401: V360 = EXP 0x2 0xa0
0x402: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x403: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x404: V363 = CALLER
0x405: V364 = EQ V363 V362
---
Entry stack: [V11, 0xa3, V92, V94, V353]
Stack pops: 1
Stack additions: [V364]
Exit stack: [V11, 0xa3, V92, V94, V364]

================================

Block 0x406
[0x406:0x40c]
---
Predecessors: [0x3de, 0x3f7]
Successors: [0x40d, 0x411]
---
0x406 JUMPDEST
0x407 ISZERO
0x408 ISZERO
0x409 PUSH2 0x411
0x40c JUMPI
---
0x406: JUMPDEST 
0x407: V365 = ISZERO S0
0x408: V366 = ISZERO V365
0x409: V367 = 0x411
0x40c: JUMPI 0x411 V366
---
Entry stack: [V11, 0xa3, V92, V94, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, V92, V94]

================================

Block 0x40d
[0x40d:0x410]
---
Predecessors: [0x406]
Successors: []
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
---
0x40d: V368 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V92, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, V94]

================================

Block 0x411
[0x411:0x423]
---
Predecessors: [0x406]
Successors: [0x424, 0x4aa]
---
0x411 JUMPDEST
0x412 PUSH1 0x2
0x414 SLOAD
0x415 PUSH1 0x1
0x417 PUSH1 0xa0
0x419 PUSH1 0x2
0x41b EXP
0x41c SUB
0x41d AND
0x41e ADDRESS
0x41f EQ
0x420 PUSH2 0x4aa
0x423 JUMPI
---
0x411: JUMPDEST 
0x412: V369 = 0x2
0x414: V370 = S[0x2]
0x415: V371 = 0x1
0x417: V372 = 0xa0
0x419: V373 = 0x2
0x41b: V374 = EXP 0x2 0xa0
0x41c: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x41e: V377 = ADDRESS
0x41f: V378 = EQ V377 V376
0x420: V379 = 0x4aa
0x423: JUMPI 0x4aa V378
---
Entry stack: [V11, 0xa3, V92, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, V94]

================================

Block 0x424
[0x424:0x48c]
---
Predecessors: [0x411]
Successors: [0x48d, 0x491]
---
0x424 PUSH1 0x2
0x426 SLOAD
0x427 PUSH1 0x40
0x429 DUP1
0x42a MLOAD
0x42b PUSH32 0xadcbe5800000000000000000000000000000000000000000000000000000000
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 DUP6
0x457 DUP2
0x458 AND
0x459 PUSH1 0x4
0x45b DUP4
0x45c ADD
0x45d MSTORE
0x45e PUSH1 0x24
0x460 DUP3
0x461 ADD
0x462 DUP6
0x463 SWAP1
0x464 MSTORE
0x465 SWAP2
0x466 MLOAD
0x467 SWAP2
0x468 SWAP1
0x469 SWAP3
0x46a AND
0x46b SWAP2
0x46c PUSH4 0xadcbe58
0x471 SWAP2
0x472 PUSH1 0x44
0x474 DUP1
0x475 DUP4
0x476 ADD
0x477 SWAP3
0x478 PUSH1 0x0
0x47a SWAP3
0x47b SWAP2
0x47c SWAP1
0x47d DUP3
0x47e SWAP1
0x47f SUB
0x480 ADD
0x481 DUP2
0x482 DUP4
0x483 DUP8
0x484 DUP1
0x485 EXTCODESIZE
0x486 ISZERO
0x487 DUP1
0x488 ISZERO
0x489 PUSH2 0x491
0x48c JUMPI
---
0x424: V380 = 0x2
0x426: V381 = S[0x2]
0x427: V382 = 0x40
0x42a: V383 = M[0x40]
0x42b: V384 = 0xadcbe5800000000000000000000000000000000000000000000000000000000
0x44d: M[V383] = 0xadcbe5800000000000000000000000000000000000000000000000000000000
0x44e: V385 = 0x1
0x450: V386 = 0xa0
0x452: V387 = 0x2
0x454: V388 = EXP 0x2 0xa0
0x455: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x459: V391 = 0x4
0x45c: V392 = ADD V383 0x4
0x45d: M[V392] = V390
0x45e: V393 = 0x24
0x461: V394 = ADD V383 0x24
0x464: M[V394] = V94
0x466: V395 = M[0x40]
0x46a: V396 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x46c: V397 = 0xadcbe58
0x472: V398 = 0x44
0x476: V399 = ADD V383 0x44
0x478: V400 = 0x0
0x47f: V401 = SUB V383 V395
0x480: V402 = ADD V401 0x44
0x485: V403 = EXTCODESIZE V396
0x486: V404 = ISZERO V403
0x488: V405 = ISZERO V404
0x489: V406 = 0x491
0x48c: JUMPI 0x491 V405
---
Entry stack: [V11, 0xa3, V92, V94]
Stack pops: 2
Stack additions: [S1, S0, V396, 0xadcbe58, V399, 0x0, V395, V402, V395, 0x0, V396, V404]
Exit stack: [V11, 0xa3, V92, V94, V396, 0xadcbe58, V399, 0x0, V395, V402, V395, 0x0, V396, V404]

================================

Block 0x48d
[0x48d:0x490]
---
Predecessors: [0x424]
Successors: []
---
0x48d PUSH1 0x0
0x48f DUP1
0x490 REVERT
---
0x48d: V407 = 0x0
0x490: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V92, V94, V396, 0xadcbe58, V399, 0x0, V395, V402, V395, 0x0, V396, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, V94, V396, 0xadcbe58, V399, 0x0, V395, V402, V395, 0x0, V396, V404]

================================

Block 0x491
[0x491:0x49b]
---
Predecessors: [0x424]
Successors: [0x49c, 0x4a5]
---
0x491 JUMPDEST
0x492 POP
0x493 GAS
0x494 CALL
0x495 ISZERO
0x496 DUP1
0x497 ISZERO
0x498 PUSH2 0x4a5
0x49b JUMPI
---
0x491: JUMPDEST 
0x493: V408 = GAS
0x494: V409 = CALL V408 V396 0x0 V395 V402 V395 0x0
0x495: V410 = ISZERO V409
0x497: V411 = ISZERO V410
0x498: V412 = 0x4a5
0x49b: JUMPI 0x4a5 V411
---
Entry stack: [V11, 0xa3, V92, V94, V396, 0xadcbe58, V399, 0x0, V395, V402, V395, 0x0, V396, V404]
Stack pops: 7
Stack additions: [V410]
Exit stack: [V11, 0xa3, V92, V94, V396, 0xadcbe58, V399, V410]

================================

Block 0x49c
[0x49c:0x4a4]
---
Predecessors: [0x491]
Successors: []
---
0x49c RETURNDATASIZE
0x49d PUSH1 0x0
0x49f DUP1
0x4a0 RETURNDATACOPY
0x4a1 RETURNDATASIZE
0x4a2 PUSH1 0x0
0x4a4 REVERT
---
0x49c: V413 = RETURNDATASIZE
0x49d: V414 = 0x0
0x4a0: RETURNDATACOPY 0x0 0x0 V413
0x4a1: V415 = RETURNDATASIZE
0x4a2: V416 = 0x0
0x4a4: REVERT 0x0 V415
---
Entry stack: [V11, 0xa3, V92, V94, V396, 0xadcbe58, V399, V410]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V92, V94, V396, 0xadcbe58, V399, V410]

================================

Block 0x4a5
[0x4a5:0x4a9]
---
Predecessors: [0x491]
Successors: [0x4aa]
---
0x4a5 JUMPDEST
0x4a6 POP
0x4a7 POP
0x4a8 POP
0x4a9 POP
---
0x4a5: JUMPDEST 
---
Entry stack: [V11, 0xa3, V92, V94, V396, 0xadcbe58, V399, V410]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xa3, V92, V94]

================================

Block 0x4aa
[0x4aa:0x4b3]
---
Predecessors: [0x411, 0x4a5]
Successors: [0x1fb]
---
0x4aa JUMPDEST
0x4ab PUSH2 0x358
0x4ae DUP3
0x4af DUP3
0x4b0 PUSH2 0x1fb
0x4b3 JUMP
---
0x4aa: JUMPDEST 
0x4ab: V417 = 0x358
0x4b0: V418 = 0x1fb
0x4b3: JUMP 0x1fb
---
Entry stack: [V11, 0xa3, V92, V94]
Stack pops: 2
Stack additions: [S1, S0, 0x358, S1, S0]
Exit stack: [V11, 0xa3, V92, V94, 0x358, V92, V94]

================================

Block 0x4b4
[0x4b4:0x4cc]
---
Predecessors: [0x12f]
Successors: [0x4cd, 0x4dc]
---
0x4b4 JUMPDEST
0x4b5 CALLER
0x4b6 PUSH1 0x0
0x4b8 SWAP1
0x4b9 DUP2
0x4ba MSTORE
0x4bb PUSH1 0x1
0x4bd PUSH1 0x20
0x4bf MSTORE
0x4c0 PUSH1 0x40
0x4c2 SWAP1
0x4c3 SHA3
0x4c4 SLOAD
0x4c5 PUSH1 0xff
0x4c7 AND
0x4c8 DUP1
0x4c9 PUSH2 0x4dc
0x4cc JUMPI
---
0x4b4: JUMPDEST 
0x4b5: V419 = CALLER
0x4b6: V420 = 0x0
0x4ba: M[0x0] = V419
0x4bb: V421 = 0x1
0x4bd: V422 = 0x20
0x4bf: M[0x20] = 0x1
0x4c0: V423 = 0x40
0x4c3: V424 = SHA3 0x0 0x40
0x4c4: V425 = S[V424]
0x4c5: V426 = 0xff
0x4c7: V427 = AND 0xff V425
0x4c9: V428 = 0x4dc
0x4cc: JUMPI 0x4dc V427
---
Entry stack: [V11, 0xa3, V102]
Stack pops: 0
Stack additions: [V427]
Exit stack: [V11, 0xa3, V102, V427]

================================

Block 0x4cd
[0x4cd:0x4db]
---
Predecessors: [0x4b4]
Successors: [0x4dc]
---
0x4cd POP
0x4ce PUSH1 0x0
0x4d0 SLOAD
0x4d1 PUSH1 0x1
0x4d3 PUSH1 0xa0
0x4d5 PUSH1 0x2
0x4d7 EXP
0x4d8 SUB
0x4d9 AND
0x4da CALLER
0x4db EQ
---
0x4ce: V429 = 0x0
0x4d0: V430 = S[0x0]
0x4d1: V431 = 0x1
0x4d3: V432 = 0xa0
0x4d5: V433 = 0x2
0x4d7: V434 = EXP 0x2 0xa0
0x4d8: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d9: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x4da: V437 = CALLER
0x4db: V438 = EQ V437 V436
---
Entry stack: [V11, 0xa3, V102, V427]
Stack pops: 1
Stack additions: [V438]
Exit stack: [V11, 0xa3, V102, V438]

================================

Block 0x4dc
[0x4dc:0x4e2]
---
Predecessors: [0x4b4, 0x4cd]
Successors: [0x4e3, 0x4e7]
---
0x4dc JUMPDEST
0x4dd ISZERO
0x4de ISZERO
0x4df PUSH2 0x4e7
0x4e2 JUMPI
---
0x4dc: JUMPDEST 
0x4dd: V439 = ISZERO S0
0x4de: V440 = ISZERO V439
0x4df: V441 = 0x4e7
0x4e2: JUMPI 0x4e7 V440
---
Entry stack: [V11, 0xa3, V102, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, V102]

================================

Block 0x4e3
[0x4e3:0x4e6]
---
Predecessors: [0x4dc]
Successors: []
---
0x4e3 PUSH1 0x0
0x4e5 DUP1
0x4e6 REVERT
---
0x4e3: V442 = 0x0
0x4e6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V102]

================================

Block 0x4e7
[0x4e7:0x4f9]
---
Predecessors: [0x4dc]
Successors: [0x4fa, 0x578]
---
0x4e7 JUMPDEST
0x4e8 PUSH1 0x2
0x4ea SLOAD
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 AND
0x4f4 ADDRESS
0x4f5 EQ
0x4f6 PUSH2 0x578
0x4f9 JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V443 = 0x2
0x4ea: V444 = S[0x2]
0x4eb: V445 = 0x1
0x4ed: V446 = 0xa0
0x4ef: V447 = 0x2
0x4f1: V448 = EXP 0x2 0xa0
0x4f2: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x4f4: V451 = ADDRESS
0x4f5: V452 = EQ V451 V450
0x4f6: V453 = 0x578
0x4f9: JUMPI 0x578 V452
---
Entry stack: [V11, 0xa3, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V102]

================================

Block 0x4fa
[0x4fa:0x55a]
---
Predecessors: [0x4e7]
Successors: [0x55b, 0x55f]
---
0x4fa PUSH1 0x2
0x4fc SLOAD
0x4fd PUSH1 0x40
0x4ff DUP1
0x500 MLOAD
0x501 PUSH32 0x8a8a764500000000000000000000000000000000000000000000000000000000
0x522 DUP2
0x523 MSTORE
0x524 PUSH1 0x4
0x526 DUP2
0x527 ADD
0x528 DUP5
0x529 SWAP1
0x52a MSTORE
0x52b SWAP1
0x52c MLOAD
0x52d PUSH1 0x1
0x52f PUSH1 0xa0
0x531 PUSH1 0x2
0x533 EXP
0x534 SUB
0x535 SWAP1
0x536 SWAP3
0x537 AND
0x538 SWAP2
0x539 PUSH4 0x8a8a7645
0x53e SWAP2
0x53f PUSH1 0x24
0x541 DUP1
0x542 DUP3
0x543 ADD
0x544 SWAP3
0x545 PUSH1 0x0
0x547 SWAP3
0x548 SWAP1
0x549 SWAP2
0x54a SWAP1
0x54b DUP3
0x54c SWAP1
0x54d SUB
0x54e ADD
0x54f DUP2
0x550 DUP4
0x551 DUP8
0x552 DUP1
0x553 EXTCODESIZE
0x554 ISZERO
0x555 DUP1
0x556 ISZERO
0x557 PUSH2 0x55f
0x55a JUMPI
---
0x4fa: V454 = 0x2
0x4fc: V455 = S[0x2]
0x4fd: V456 = 0x40
0x500: V457 = M[0x40]
0x501: V458 = 0x8a8a764500000000000000000000000000000000000000000000000000000000
0x523: M[V457] = 0x8a8a764500000000000000000000000000000000000000000000000000000000
0x524: V459 = 0x4
0x527: V460 = ADD V457 0x4
0x52a: M[V460] = V102
0x52c: V461 = M[0x40]
0x52d: V462 = 0x1
0x52f: V463 = 0xa0
0x531: V464 = 0x2
0x533: V465 = EXP 0x2 0xa0
0x534: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x537: V467 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x539: V468 = 0x8a8a7645
0x53f: V469 = 0x24
0x543: V470 = ADD V457 0x24
0x545: V471 = 0x0
0x54d: V472 = SUB V457 V461
0x54e: V473 = ADD V472 0x24
0x553: V474 = EXTCODESIZE V467
0x554: V475 = ISZERO V474
0x556: V476 = ISZERO V475
0x557: V477 = 0x55f
0x55a: JUMPI 0x55f V476
---
Entry stack: [V11, 0xa3, V102]
Stack pops: 1
Stack additions: [S0, V467, 0x8a8a7645, V470, 0x0, V461, V473, V461, 0x0, V467, V475]
Exit stack: [V11, 0xa3, V102, V467, 0x8a8a7645, V470, 0x0, V461, V473, V461, 0x0, V467, V475]

================================

Block 0x55b
[0x55b:0x55e]
---
Predecessors: [0x4fa]
Successors: []
---
0x55b PUSH1 0x0
0x55d DUP1
0x55e REVERT
---
0x55b: V478 = 0x0
0x55e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V102, V467, 0x8a8a7645, V470, 0x0, V461, V473, V461, 0x0, V467, V475]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V102, V467, 0x8a8a7645, V470, 0x0, V461, V473, V461, 0x0, V467, V475]

================================

Block 0x55f
[0x55f:0x569]
---
Predecessors: [0x4fa]
Successors: [0x56a, 0x573]
---
0x55f JUMPDEST
0x560 POP
0x561 GAS
0x562 CALL
0x563 ISZERO
0x564 DUP1
0x565 ISZERO
0x566 PUSH2 0x573
0x569 JUMPI
---
0x55f: JUMPDEST 
0x561: V479 = GAS
0x562: V480 = CALL V479 V467 0x0 V461 V473 V461 0x0
0x563: V481 = ISZERO V480
0x565: V482 = ISZERO V481
0x566: V483 = 0x573
0x569: JUMPI 0x573 V482
---
Entry stack: [V11, 0xa3, V102, V467, 0x8a8a7645, V470, 0x0, V461, V473, V461, 0x0, V467, V475]
Stack pops: 7
Stack additions: [V481]
Exit stack: [V11, 0xa3, V102, V467, 0x8a8a7645, V470, V481]

================================

Block 0x56a
[0x56a:0x572]
---
Predecessors: [0x55f]
Successors: []
---
0x56a RETURNDATASIZE
0x56b PUSH1 0x0
0x56d DUP1
0x56e RETURNDATACOPY
0x56f RETURNDATASIZE
0x570 PUSH1 0x0
0x572 REVERT
---
0x56a: V484 = RETURNDATASIZE
0x56b: V485 = 0x0
0x56e: RETURNDATACOPY 0x0 0x0 V484
0x56f: V486 = RETURNDATASIZE
0x570: V487 = 0x0
0x572: REVERT 0x0 V486
---
Entry stack: [V11, 0xa3, V102, V467, 0x8a8a7645, V470, V481]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V102, V467, 0x8a8a7645, V470, V481]

================================

Block 0x573
[0x573:0x577]
---
Predecessors: [0x55f, 0x96b]
Successors: [0x578]
---
0x573 JUMPDEST
0x574 POP
0x575 POP
0x576 POP
0x577 POP
---
0x573: JUMPDEST 
---
Entry stack: [V11, 0xa3, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xa3, S4]

================================

Block 0x578
[0x578:0x57a]
---
Predecessors: [0x4e7, 0x573]
Successors: [0xa3]
---
0x578 JUMPDEST
0x579 POP
0x57a JUMP
---
0x578: JUMPDEST 
0x57a: JUMP 0xa3
---
Entry stack: [V11, 0xa3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x57b
[0x57b:0x58d]
---
Predecessors: [0x147]
Successors: [0x58e, 0x592]
---
0x57b JUMPDEST
0x57c PUSH1 0x0
0x57e SLOAD
0x57f PUSH1 0x1
0x581 PUSH1 0xa0
0x583 PUSH1 0x2
0x585 EXP
0x586 SUB
0x587 AND
0x588 CALLER
0x589 EQ
0x58a PUSH2 0x592
0x58d JUMPI
---
0x57b: JUMPDEST 
0x57c: V488 = 0x0
0x57e: V489 = S[0x0]
0x57f: V490 = 0x1
0x581: V491 = 0xa0
0x583: V492 = 0x2
0x585: V493 = EXP 0x2 0xa0
0x586: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x588: V496 = CALLER
0x589: V497 = EQ V496 V495
0x58a: V498 = 0x592
0x58d: JUMPI 0x592 V497
---
Entry stack: [V11, 0xa3, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V116]

================================

Block 0x58e
[0x58e:0x591]
---
Predecessors: [0x57b]
Successors: []
---
0x58e PUSH1 0x0
0x590 DUP1
0x591 REVERT
---
0x58e: V499 = 0x0
0x591: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V116]

================================

Block 0x592
[0x592:0x5b8]
---
Predecessors: [0x57b]
Successors: [0xa3]
---
0x592 JUMPDEST
0x593 PUSH1 0x1
0x595 PUSH1 0xa0
0x597 PUSH1 0x2
0x599 EXP
0x59a SUB
0x59b AND
0x59c PUSH1 0x0
0x59e SWAP1
0x59f DUP2
0x5a0 MSTORE
0x5a1 PUSH1 0x1
0x5a3 PUSH1 0x20
0x5a5 DUP2
0x5a6 SWAP1
0x5a7 MSTORE
0x5a8 PUSH1 0x40
0x5aa SWAP1
0x5ab SWAP2
0x5ac SHA3
0x5ad DUP1
0x5ae SLOAD
0x5af PUSH1 0xff
0x5b1 NOT
0x5b2 AND
0x5b3 SWAP1
0x5b4 SWAP2
0x5b5 OR
0x5b6 SWAP1
0x5b7 SSTORE
0x5b8 JUMP
---
0x592: JUMPDEST 
0x593: V500 = 0x1
0x595: V501 = 0xa0
0x597: V502 = 0x2
0x599: V503 = EXP 0x2 0xa0
0x59a: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x59c: V506 = 0x0
0x5a0: M[0x0] = V505
0x5a1: V507 = 0x1
0x5a3: V508 = 0x20
0x5a7: M[0x20] = 0x1
0x5a8: V509 = 0x40
0x5ac: V510 = SHA3 0x0 0x40
0x5ae: V511 = S[V510]
0x5af: V512 = 0xff
0x5b1: V513 = NOT 0xff
0x5b2: V514 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V511
0x5b5: V515 = OR 0x1 V514
0x5b7: S[V510] = V515
0x5b8: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V116]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b9
[0x5b9:0x5d1]
---
Predecessors: [0x168]
Successors: [0x5d2, 0x5e1]
---
0x5b9 JUMPDEST
0x5ba CALLER
0x5bb PUSH1 0x0
0x5bd SWAP1
0x5be DUP2
0x5bf MSTORE
0x5c0 PUSH1 0x1
0x5c2 PUSH1 0x20
0x5c4 MSTORE
0x5c5 PUSH1 0x40
0x5c7 SWAP1
0x5c8 SHA3
0x5c9 SLOAD
0x5ca PUSH1 0xff
0x5cc AND
0x5cd DUP1
0x5ce PUSH2 0x5e1
0x5d1 JUMPI
---
0x5b9: JUMPDEST 
0x5ba: V516 = CALLER
0x5bb: V517 = 0x0
0x5bf: M[0x0] = V516
0x5c0: V518 = 0x1
0x5c2: V519 = 0x20
0x5c4: M[0x20] = 0x1
0x5c5: V520 = 0x40
0x5c8: V521 = SHA3 0x0 0x40
0x5c9: V522 = S[V521]
0x5ca: V523 = 0xff
0x5cc: V524 = AND 0xff V522
0x5ce: V525 = 0x5e1
0x5d1: JUMPI 0x5e1 V524
---
Entry stack: [V11, 0xa3, V130, V132]
Stack pops: 0
Stack additions: [V524]
Exit stack: [V11, 0xa3, V130, V132, V524]

================================

Block 0x5d2
[0x5d2:0x5e0]
---
Predecessors: [0x5b9]
Successors: [0x5e1]
---
0x5d2 POP
0x5d3 PUSH1 0x0
0x5d5 SLOAD
0x5d6 PUSH1 0x1
0x5d8 PUSH1 0xa0
0x5da PUSH1 0x2
0x5dc EXP
0x5dd SUB
0x5de AND
0x5df CALLER
0x5e0 EQ
---
0x5d3: V526 = 0x0
0x5d5: V527 = S[0x0]
0x5d6: V528 = 0x1
0x5d8: V529 = 0xa0
0x5da: V530 = 0x2
0x5dc: V531 = EXP 0x2 0xa0
0x5dd: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5de: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x5df: V534 = CALLER
0x5e0: V535 = EQ V534 V533
---
Entry stack: [V11, 0xa3, V130, V132, V524]
Stack pops: 1
Stack additions: [V535]
Exit stack: [V11, 0xa3, V130, V132, V535]

================================

Block 0x5e1
[0x5e1:0x5e7]
---
Predecessors: [0x5b9, 0x5d2]
Successors: [0x5e8, 0x5ec]
---
0x5e1 JUMPDEST
0x5e2 ISZERO
0x5e3 ISZERO
0x5e4 PUSH2 0x5ec
0x5e7 JUMPI
---
0x5e1: JUMPDEST 
0x5e2: V536 = ISZERO S0
0x5e3: V537 = ISZERO V536
0x5e4: V538 = 0x5ec
0x5e7: JUMPI 0x5ec V537
---
Entry stack: [V11, 0xa3, V130, V132, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, V130, V132]

================================

Block 0x5e8
[0x5e8:0x5eb]
---
Predecessors: [0x5e1]
Successors: []
---
0x5e8 PUSH1 0x0
0x5ea DUP1
0x5eb REVERT
---
0x5e8: V539 = 0x0
0x5eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V130, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V130, V132]

================================

Block 0x5ec
[0x5ec:0x5fe]
---
Predecessors: [0x5e1]
Successors: [0x358, 0x5ff]
---
0x5ec JUMPDEST
0x5ed PUSH1 0x2
0x5ef SLOAD
0x5f0 PUSH1 0x1
0x5f2 PUSH1 0xa0
0x5f4 PUSH1 0x2
0x5f6 EXP
0x5f7 SUB
0x5f8 AND
0x5f9 ADDRESS
0x5fa EQ
0x5fb PUSH2 0x358
0x5fe JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V540 = 0x2
0x5ef: V541 = S[0x2]
0x5f0: V542 = 0x1
0x5f2: V543 = 0xa0
0x5f4: V544 = 0x2
0x5f6: V545 = EXP 0x2 0xa0
0x5f7: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f8: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x5f9: V548 = ADDRESS
0x5fa: V549 = EQ V548 V547
0x5fb: V550 = 0x358
0x5fe: JUMPI 0x358 V549
---
Entry stack: [V11, 0xa3, V130, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V130, V132]

================================

Block 0x5ff
[0x5ff:0x667]
---
Predecessors: [0x5ec]
Successors: [0x668, 0x66c]
---
0x5ff PUSH1 0x2
0x601 SLOAD
0x602 PUSH1 0x40
0x604 DUP1
0x605 MLOAD
0x606 PUSH32 0xadcbe5800000000000000000000000000000000000000000000000000000000
0x627 DUP2
0x628 MSTORE
0x629 PUSH1 0x1
0x62b PUSH1 0xa0
0x62d PUSH1 0x2
0x62f EXP
0x630 SUB
0x631 DUP6
0x632 DUP2
0x633 AND
0x634 PUSH1 0x4
0x636 DUP4
0x637 ADD
0x638 MSTORE
0x639 PUSH1 0x24
0x63b DUP3
0x63c ADD
0x63d DUP6
0x63e SWAP1
0x63f MSTORE
0x640 SWAP2
0x641 MLOAD
0x642 SWAP2
0x643 SWAP1
0x644 SWAP3
0x645 AND
0x646 SWAP2
0x647 PUSH4 0xadcbe58
0x64c SWAP2
0x64d PUSH1 0x44
0x64f DUP1
0x650 DUP4
0x651 ADD
0x652 SWAP3
0x653 PUSH1 0x0
0x655 SWAP3
0x656 SWAP2
0x657 SWAP1
0x658 DUP3
0x659 SWAP1
0x65a SUB
0x65b ADD
0x65c DUP2
0x65d DUP4
0x65e DUP8
0x65f DUP1
0x660 EXTCODESIZE
0x661 ISZERO
0x662 DUP1
0x663 ISZERO
0x664 PUSH2 0x66c
0x667 JUMPI
---
0x5ff: V551 = 0x2
0x601: V552 = S[0x2]
0x602: V553 = 0x40
0x605: V554 = M[0x40]
0x606: V555 = 0xadcbe5800000000000000000000000000000000000000000000000000000000
0x628: M[V554] = 0xadcbe5800000000000000000000000000000000000000000000000000000000
0x629: V556 = 0x1
0x62b: V557 = 0xa0
0x62d: V558 = 0x2
0x62f: V559 = EXP 0x2 0xa0
0x630: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x633: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x634: V562 = 0x4
0x637: V563 = ADD V554 0x4
0x638: M[V563] = V561
0x639: V564 = 0x24
0x63c: V565 = ADD V554 0x24
0x63f: M[V565] = V132
0x641: V566 = M[0x40]
0x645: V567 = AND V552 0xffffffffffffffffffffffffffffffffffffffff
0x647: V568 = 0xadcbe58
0x64d: V569 = 0x44
0x651: V570 = ADD V554 0x44
0x653: V571 = 0x0
0x65a: V572 = SUB V554 V566
0x65b: V573 = ADD V572 0x44
0x660: V574 = EXTCODESIZE V567
0x661: V575 = ISZERO V574
0x663: V576 = ISZERO V575
0x664: V577 = 0x66c
0x667: JUMPI 0x66c V576
---
Entry stack: [V11, 0xa3, V130, V132]
Stack pops: 2
Stack additions: [S1, S0, V567, 0xadcbe58, V570, 0x0, V566, V573, V566, 0x0, V567, V575]
Exit stack: [V11, 0xa3, V130, V132, V567, 0xadcbe58, V570, 0x0, V566, V573, V566, 0x0, V567, V575]

================================

Block 0x668
[0x668:0x66b]
---
Predecessors: [0x5ff]
Successors: []
---
0x668 PUSH1 0x0
0x66a DUP1
0x66b REVERT
---
0x668: V578 = 0x0
0x66b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V130, V132, V567, 0xadcbe58, V570, 0x0, V566, V573, V566, 0x0, V567, V575]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V130, V132, V567, 0xadcbe58, V570, 0x0, V566, V573, V566, 0x0, V567, V575]

================================

Block 0x66c
[0x66c:0x676]
---
Predecessors: [0x5ff]
Successors: [0x677, 0x680]
---
0x66c JUMPDEST
0x66d POP
0x66e GAS
0x66f CALL
0x670 ISZERO
0x671 DUP1
0x672 ISZERO
0x673 PUSH2 0x680
0x676 JUMPI
---
0x66c: JUMPDEST 
0x66e: V579 = GAS
0x66f: V580 = CALL V579 V567 0x0 V566 V573 V566 0x0
0x670: V581 = ISZERO V580
0x672: V582 = ISZERO V581
0x673: V583 = 0x680
0x676: JUMPI 0x680 V582
---
Entry stack: [V11, 0xa3, V130, V132, V567, 0xadcbe58, V570, 0x0, V566, V573, V566, 0x0, V567, V575]
Stack pops: 7
Stack additions: [V581]
Exit stack: [V11, 0xa3, V130, V132, V567, 0xadcbe58, V570, V581]

================================

Block 0x677
[0x677:0x67f]
---
Predecessors: [0x66c]
Successors: []
---
0x677 RETURNDATASIZE
0x678 PUSH1 0x0
0x67a DUP1
0x67b RETURNDATACOPY
0x67c RETURNDATASIZE
0x67d PUSH1 0x0
0x67f REVERT
---
0x677: V584 = RETURNDATASIZE
0x678: V585 = 0x0
0x67b: RETURNDATACOPY 0x0 0x0 V584
0x67c: V586 = RETURNDATASIZE
0x67d: V587 = 0x0
0x67f: REVERT 0x0 V586
---
Entry stack: [V11, 0xa3, V130, V132, V567, 0xadcbe58, V570, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V130, V132, V567, 0xadcbe58, V570, V581]

================================

Block 0x680
[0x680:0x687]
---
Predecessors: [0x66c]
Successors: [0xa3]
---
0x680 JUMPDEST
0x681 POP
0x682 POP
0x683 POP
0x684 POP
0x685 POP
0x686 POP
0x687 JUMP
---
0x680: JUMPDEST 
0x687: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V130, V132, V567, 0xadcbe58, V570, V581]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x688
[0x688:0x6a2]
---
Predecessors: [0x18c, 0x80a]
Successors: [0x6a3, 0x6b2]
---
0x688 JUMPDEST
0x689 CALLER
0x68a PUSH1 0x0
0x68c SWAP1
0x68d DUP2
0x68e MSTORE
0x68f PUSH1 0x1
0x691 PUSH1 0x20
0x693 MSTORE
0x694 PUSH1 0x40
0x696 DUP2
0x697 SHA3
0x698 SLOAD
0x699 DUP2
0x69a SWAP1
0x69b PUSH1 0xff
0x69d AND
0x69e DUP1
0x69f PUSH2 0x6b2
0x6a2 JUMPI
---
0x688: JUMPDEST 
0x689: V588 = CALLER
0x68a: V589 = 0x0
0x68e: M[0x0] = V588
0x68f: V590 = 0x1
0x691: V591 = 0x20
0x693: M[0x20] = 0x1
0x694: V592 = 0x40
0x697: V593 = SHA3 0x0 0x40
0x698: V594 = S[V593]
0x69b: V595 = 0xff
0x69d: V596 = AND 0xff V594
0x69f: V597 = 0x6b2
0x6a2: JUMPI 0x6b2 V596
---
Entry stack: [V11, 0xa3, S2, {0xed, 0x358}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, V596]
Exit stack: [V11, 0xa3, S2, {0xed, 0x358}, S0, 0x0, 0x0, V596]

================================

Block 0x6a3
[0x6a3:0x6b1]
---
Predecessors: [0x688]
Successors: [0x6b2]
---
0x6a3 POP
0x6a4 PUSH1 0x0
0x6a6 SLOAD
0x6a7 PUSH1 0x1
0x6a9 PUSH1 0xa0
0x6ab PUSH1 0x2
0x6ad EXP
0x6ae SUB
0x6af AND
0x6b0 CALLER
0x6b1 EQ
---
0x6a4: V598 = 0x0
0x6a6: V599 = S[0x0]
0x6a7: V600 = 0x1
0x6a9: V601 = 0xa0
0x6ab: V602 = 0x2
0x6ad: V603 = EXP 0x2 0xa0
0x6ae: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6af: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V599
0x6b0: V606 = CALLER
0x6b1: V607 = EQ V606 V605
---
Entry stack: [V11, 0xa3, S5, {0xed, 0x358}, S3, 0x0, 0x0, V596]
Stack pops: 1
Stack additions: [V607]
Exit stack: [V11, 0xa3, S5, {0xed, 0x358}, S3, 0x0, 0x0, V607]

================================

Block 0x6b2
[0x6b2:0x6b8]
---
Predecessors: [0x688, 0x6a3]
Successors: [0x6b9, 0x6bd]
---
0x6b2 JUMPDEST
0x6b3 ISZERO
0x6b4 ISZERO
0x6b5 PUSH2 0x6bd
0x6b8 JUMPI
---
0x6b2: JUMPDEST 
0x6b3: V608 = ISZERO S0
0x6b4: V609 = ISZERO V608
0x6b5: V610 = 0x6bd
0x6b8: JUMPI 0x6bd V609
---
Entry stack: [V11, 0xa3, S5, {0xed, 0x358}, S3, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, S5, {0xed, 0x358}, S3, 0x0, 0x0]

================================

Block 0x6b9
[0x6b9:0x6bc]
---
Predecessors: [0x6b2]
Successors: []
---
0x6b9 PUSH1 0x0
0x6bb DUP1
0x6bc REVERT
---
0x6b9: V611 = 0x0
0x6bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, S4, {0xed, 0x358}, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, S4, {0xed, 0x358}, S2, 0x0, 0x0]

================================

Block 0x6bd
[0x6bd:0x6c8]
---
Predecessors: [0x6b2]
Successors: [0x6c9, 0x6fa]
---
0x6bd JUMPDEST
0x6be POP
0x6bf PUSH1 0x0
0x6c1 ADDRESS
0x6c2 BALANCE
0x6c3 DUP4
0x6c4 GT
0x6c5 PUSH2 0x6fa
0x6c8 JUMPI
---
0x6bd: JUMPDEST 
0x6bf: V612 = 0x0
0x6c1: V613 = ADDRESS
0x6c2: V614 = BALANCE V613
0x6c4: V615 = GT S2 V614
0x6c5: V616 = 0x6fa
0x6c8: JUMPI 0x6fa V615
---
Entry stack: [V11, 0xa3, S4, {0xed, 0x358}, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x0]
Exit stack: [V11, 0xa3, S4, {0xed, 0x358}, S2, 0x0, 0x0]

================================

Block 0x6c9
[0x6c9:0x6eb]
---
Predecessors: [0x6bd]
Successors: [0x6ec, 0x6f5]
---
0x6c9 PUSH1 0x40
0x6cb MLOAD
0x6cc CALLER
0x6cd SWAP1
0x6ce DUP5
0x6cf ISZERO
0x6d0 PUSH2 0x8fc
0x6d3 MUL
0x6d4 SWAP1
0x6d5 DUP6
0x6d6 SWAP1
0x6d7 PUSH1 0x0
0x6d9 DUP2
0x6da DUP2
0x6db DUP2
0x6dc DUP6
0x6dd DUP9
0x6de DUP9
0x6df CALL
0x6e0 SWAP4
0x6e1 POP
0x6e2 POP
0x6e3 POP
0x6e4 POP
0x6e5 ISZERO
0x6e6 DUP1
0x6e7 ISZERO
0x6e8 PUSH2 0x6f5
0x6eb JUMPI
---
0x6c9: V617 = 0x40
0x6cb: V618 = M[0x40]
0x6cc: V619 = CALLER
0x6cf: V620 = ISZERO S2
0x6d0: V621 = 0x8fc
0x6d3: V622 = MUL 0x8fc V620
0x6d7: V623 = 0x0
0x6df: V624 = CALL V622 V619 S2 V618 0x0 V618 0x0
0x6e5: V625 = ISZERO V624
0x6e7: V626 = ISZERO V625
0x6e8: V627 = 0x6f5
0x6eb: JUMPI 0x6f5 V626
---
Entry stack: [V11, 0xa3, S4, {0xed, 0x358}, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V625]
Exit stack: [V11, 0xa3, S4, {0xed, 0x358}, S2, 0x0, 0x0, V625]

================================

Block 0x6ec
[0x6ec:0x6f4]
---
Predecessors: [0x6c9]
Successors: []
---
0x6ec RETURNDATASIZE
0x6ed PUSH1 0x0
0x6ef DUP1
0x6f0 RETURNDATACOPY
0x6f1 RETURNDATASIZE
0x6f2 PUSH1 0x0
0x6f4 REVERT
---
0x6ec: V628 = RETURNDATASIZE
0x6ed: V629 = 0x0
0x6f0: RETURNDATACOPY 0x0 0x0 V628
0x6f1: V630 = RETURNDATASIZE
0x6f2: V631 = 0x0
0x6f4: REVERT 0x0 V630
---
Entry stack: [V11, 0xa3, S5, {0xed, 0x358}, S3, 0x0, 0x0, V625]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, S5, {0xed, 0x358}, S3, 0x0, 0x0, V625]

================================

Block 0x6f5
[0x6f5:0x6f9]
---
Predecessors: [0x6c9]
Successors: [0x6fa]
---
0x6f5 JUMPDEST
0x6f6 POP
0x6f7 DUP3
0x6f8 SWAP1
0x6f9 POP
---
0x6f5: JUMPDEST 
---
Entry stack: [V11, 0xa3, S5, {0xed, 0x358}, S3, 0x0, 0x0, V625]
Stack pops: 4
Stack additions: [S3, S2, S3]
Exit stack: [V11, 0xa3, S5, {0xed, 0x358}, S3, 0x0, S3]

================================

Block 0x6fa
[0x6fa:0x6ff]
---
Predecessors: [0x6bd, 0x6f5]
Successors: [0xed, 0x358]
---
0x6fa JUMPDEST
0x6fb SWAP3
0x6fc SWAP2
0x6fd POP
0x6fe POP
0x6ff JUMP
---
0x6fa: JUMPDEST 
0x6ff: JUMP {0xed, 0x358}
---
Entry stack: [V11, 0xa3, S4, {0xed, 0x358}, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0xa3, S4, S0]

================================

Block 0x700
[0x700:0x712]
---
Predecessors: [0x1a4]
Successors: [0x713, 0x717]
---
0x700 JUMPDEST
0x701 PUSH1 0x0
0x703 SLOAD
0x704 PUSH1 0x1
0x706 PUSH1 0xa0
0x708 PUSH1 0x2
0x70a EXP
0x70b SUB
0x70c AND
0x70d CALLER
0x70e EQ
0x70f PUSH2 0x717
0x712 JUMPI
---
0x700: JUMPDEST 
0x701: V632 = 0x0
0x703: V633 = S[0x0]
0x704: V634 = 0x1
0x706: V635 = 0xa0
0x708: V636 = 0x2
0x70a: V637 = EXP 0x2 0xa0
0x70b: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70c: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V633
0x70d: V640 = CALLER
0x70e: V641 = EQ V640 V639
0x70f: V642 = 0x717
0x712: JUMPI 0x717 V641
---
Entry stack: [V11, 0xa3, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V154]

================================

Block 0x713
[0x713:0x716]
---
Predecessors: [0x700]
Successors: []
---
0x713 PUSH1 0x0
0x715 DUP1
0x716 REVERT
---
0x713: V643 = 0x0
0x716: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V154]

================================

Block 0x717
[0x717:0x745]
---
Predecessors: [0x700]
Successors: [0xa3]
---
0x717 JUMPDEST
0x718 PUSH1 0x2
0x71a DUP1
0x71b SLOAD
0x71c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x731 NOT
0x732 AND
0x733 PUSH1 0x1
0x735 PUSH1 0xa0
0x737 PUSH1 0x2
0x739 EXP
0x73a SUB
0x73b SWAP3
0x73c SWAP1
0x73d SWAP3
0x73e AND
0x73f SWAP2
0x740 SWAP1
0x741 SWAP2
0x742 OR
0x743 SWAP1
0x744 SSTORE
0x745 JUMP
---
0x717: JUMPDEST 
0x718: V644 = 0x2
0x71b: V645 = S[0x2]
0x71c: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0x731: V647 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x732: V648 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V645
0x733: V649 = 0x1
0x735: V650 = 0xa0
0x737: V651 = 0x2
0x739: V652 = EXP 0x2 0xa0
0x73a: V653 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73e: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x742: V655 = OR V654 V648
0x744: S[0x2] = V655
0x745: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V154]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x746
[0x746:0x75e]
---
Predecessors: [0x1c5]
Successors: [0x75f, 0x76e]
---
0x746 JUMPDEST
0x747 CALLER
0x748 PUSH1 0x0
0x74a SWAP1
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x1
0x74f PUSH1 0x20
0x751 MSTORE
0x752 PUSH1 0x40
0x754 SWAP1
0x755 SHA3
0x756 SLOAD
0x757 PUSH1 0xff
0x759 AND
0x75a DUP1
0x75b PUSH2 0x76e
0x75e JUMPI
---
0x746: JUMPDEST 
0x747: V656 = CALLER
0x748: V657 = 0x0
0x74c: M[0x0] = V656
0x74d: V658 = 0x1
0x74f: V659 = 0x20
0x751: M[0x20] = 0x1
0x752: V660 = 0x40
0x755: V661 = SHA3 0x0 0x40
0x756: V662 = S[V661]
0x757: V663 = 0xff
0x759: V664 = AND 0xff V662
0x75b: V665 = 0x76e
0x75e: JUMPI 0x76e V664
---
Entry stack: [V11, 0xa3, V162]
Stack pops: 0
Stack additions: [V664]
Exit stack: [V11, 0xa3, V162, V664]

================================

Block 0x75f
[0x75f:0x76d]
---
Predecessors: [0x746]
Successors: [0x76e]
---
0x75f POP
0x760 PUSH1 0x0
0x762 SLOAD
0x763 PUSH1 0x1
0x765 PUSH1 0xa0
0x767 PUSH1 0x2
0x769 EXP
0x76a SUB
0x76b AND
0x76c CALLER
0x76d EQ
---
0x760: V666 = 0x0
0x762: V667 = S[0x0]
0x763: V668 = 0x1
0x765: V669 = 0xa0
0x767: V670 = 0x2
0x769: V671 = EXP 0x2 0xa0
0x76a: V672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x76b: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0x76c: V674 = CALLER
0x76d: V675 = EQ V674 V673
---
Entry stack: [V11, 0xa3, V162, V664]
Stack pops: 1
Stack additions: [V675]
Exit stack: [V11, 0xa3, V162, V675]

================================

Block 0x76e
[0x76e:0x774]
---
Predecessors: [0x746, 0x75f]
Successors: [0x775, 0x779]
---
0x76e JUMPDEST
0x76f ISZERO
0x770 ISZERO
0x771 PUSH2 0x779
0x774 JUMPI
---
0x76e: JUMPDEST 
0x76f: V676 = ISZERO S0
0x770: V677 = ISZERO V676
0x771: V678 = 0x779
0x774: JUMPI 0x779 V677
---
Entry stack: [V11, 0xa3, V162, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, V162]

================================

Block 0x775
[0x775:0x778]
---
Predecessors: [0x76e]
Successors: []
---
0x775 PUSH1 0x0
0x777 DUP1
0x778 REVERT
---
0x775: V679 = 0x0
0x778: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V162]

================================

Block 0x779
[0x779:0x78b]
---
Predecessors: [0x76e]
Successors: [0x78c, 0x80a]
---
0x779 JUMPDEST
0x77a PUSH1 0x2
0x77c SLOAD
0x77d PUSH1 0x1
0x77f PUSH1 0xa0
0x781 PUSH1 0x2
0x783 EXP
0x784 SUB
0x785 AND
0x786 ADDRESS
0x787 EQ
0x788 PUSH2 0x80a
0x78b JUMPI
---
0x779: JUMPDEST 
0x77a: V680 = 0x2
0x77c: V681 = S[0x2]
0x77d: V682 = 0x1
0x77f: V683 = 0xa0
0x781: V684 = 0x2
0x783: V685 = EXP 0x2 0xa0
0x784: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x785: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x786: V688 = ADDRESS
0x787: V689 = EQ V688 V687
0x788: V690 = 0x80a
0x78b: JUMPI 0x80a V689
---
Entry stack: [V11, 0xa3, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V162]

================================

Block 0x78c
[0x78c:0x7ec]
---
Predecessors: [0x779]
Successors: [0x7ed, 0x7f1]
---
0x78c PUSH1 0x2
0x78e SLOAD
0x78f PUSH1 0x40
0x791 DUP1
0x792 MLOAD
0x793 PUSH32 0x8a8a764500000000000000000000000000000000000000000000000000000000
0x7b4 DUP2
0x7b5 MSTORE
0x7b6 PUSH1 0x4
0x7b8 DUP2
0x7b9 ADD
0x7ba DUP5
0x7bb SWAP1
0x7bc MSTORE
0x7bd SWAP1
0x7be MLOAD
0x7bf PUSH1 0x1
0x7c1 PUSH1 0xa0
0x7c3 PUSH1 0x2
0x7c5 EXP
0x7c6 SUB
0x7c7 SWAP1
0x7c8 SWAP3
0x7c9 AND
0x7ca SWAP2
0x7cb PUSH4 0x8a8a7645
0x7d0 SWAP2
0x7d1 PUSH1 0x24
0x7d3 DUP1
0x7d4 DUP3
0x7d5 ADD
0x7d6 SWAP3
0x7d7 PUSH1 0x0
0x7d9 SWAP3
0x7da SWAP1
0x7db SWAP2
0x7dc SWAP1
0x7dd DUP3
0x7de SWAP1
0x7df SUB
0x7e0 ADD
0x7e1 DUP2
0x7e2 DUP4
0x7e3 DUP8
0x7e4 DUP1
0x7e5 EXTCODESIZE
0x7e6 ISZERO
0x7e7 DUP1
0x7e8 ISZERO
0x7e9 PUSH2 0x7f1
0x7ec JUMPI
---
0x78c: V691 = 0x2
0x78e: V692 = S[0x2]
0x78f: V693 = 0x40
0x792: V694 = M[0x40]
0x793: V695 = 0x8a8a764500000000000000000000000000000000000000000000000000000000
0x7b5: M[V694] = 0x8a8a764500000000000000000000000000000000000000000000000000000000
0x7b6: V696 = 0x4
0x7b9: V697 = ADD V694 0x4
0x7bc: M[V697] = V162
0x7be: V698 = M[0x40]
0x7bf: V699 = 0x1
0x7c1: V700 = 0xa0
0x7c3: V701 = 0x2
0x7c5: V702 = EXP 0x2 0xa0
0x7c6: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c9: V704 = AND V692 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V705 = 0x8a8a7645
0x7d1: V706 = 0x24
0x7d5: V707 = ADD V694 0x24
0x7d7: V708 = 0x0
0x7df: V709 = SUB V694 V698
0x7e0: V710 = ADD V709 0x24
0x7e5: V711 = EXTCODESIZE V704
0x7e6: V712 = ISZERO V711
0x7e8: V713 = ISZERO V712
0x7e9: V714 = 0x7f1
0x7ec: JUMPI 0x7f1 V713
---
Entry stack: [V11, 0xa3, V162]
Stack pops: 1
Stack additions: [S0, V704, 0x8a8a7645, V707, 0x0, V698, V710, V698, 0x0, V704, V712]
Exit stack: [V11, 0xa3, V162, V704, 0x8a8a7645, V707, 0x0, V698, V710, V698, 0x0, V704, V712]

================================

Block 0x7ed
[0x7ed:0x7f0]
---
Predecessors: [0x78c]
Successors: []
---
0x7ed PUSH1 0x0
0x7ef DUP1
0x7f0 REVERT
---
0x7ed: V715 = 0x0
0x7f0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V162, V704, 0x8a8a7645, V707, 0x0, V698, V710, V698, 0x0, V704, V712]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V162, V704, 0x8a8a7645, V707, 0x0, V698, V710, V698, 0x0, V704, V712]

================================

Block 0x7f1
[0x7f1:0x7fb]
---
Predecessors: [0x78c]
Successors: [0x7fc, 0x805]
---
0x7f1 JUMPDEST
0x7f2 POP
0x7f3 GAS
0x7f4 CALL
0x7f5 ISZERO
0x7f6 DUP1
0x7f7 ISZERO
0x7f8 PUSH2 0x805
0x7fb JUMPI
---
0x7f1: JUMPDEST 
0x7f3: V716 = GAS
0x7f4: V717 = CALL V716 V704 0x0 V698 V710 V698 0x0
0x7f5: V718 = ISZERO V717
0x7f7: V719 = ISZERO V718
0x7f8: V720 = 0x805
0x7fb: JUMPI 0x805 V719
---
Entry stack: [V11, 0xa3, V162, V704, 0x8a8a7645, V707, 0x0, V698, V710, V698, 0x0, V704, V712]
Stack pops: 7
Stack additions: [V718]
Exit stack: [V11, 0xa3, V162, V704, 0x8a8a7645, V707, V718]

================================

Block 0x7fc
[0x7fc:0x804]
---
Predecessors: [0x7f1]
Successors: []
---
0x7fc RETURNDATASIZE
0x7fd PUSH1 0x0
0x7ff DUP1
0x800 RETURNDATACOPY
0x801 RETURNDATASIZE
0x802 PUSH1 0x0
0x804 REVERT
---
0x7fc: V721 = RETURNDATASIZE
0x7fd: V722 = 0x0
0x800: RETURNDATACOPY 0x0 0x0 V721
0x801: V723 = RETURNDATASIZE
0x802: V724 = 0x0
0x804: REVERT 0x0 V723
---
Entry stack: [V11, 0xa3, V162, V704, 0x8a8a7645, V707, V718]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V162, V704, 0x8a8a7645, V707, V718]

================================

Block 0x805
[0x805:0x809]
---
Predecessors: [0x7f1]
Successors: [0x80a]
---
0x805 JUMPDEST
0x806 POP
0x807 POP
0x808 POP
0x809 POP
---
0x805: JUMPDEST 
---
Entry stack: [V11, 0xa3, V162, V704, 0x8a8a7645, V707, V718]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xa3, V162]

================================

Block 0x80a
[0x80a:0x812]
---
Predecessors: [0x779, 0x805]
Successors: [0x688]
---
0x80a JUMPDEST
0x80b PUSH2 0x358
0x80e DUP2
0x80f PUSH2 0x688
0x812 JUMP
---
0x80a: JUMPDEST 
0x80b: V725 = 0x358
0x80f: V726 = 0x688
0x812: JUMP 0x688
---
Entry stack: [V11, 0xa3, V162]
Stack pops: 1
Stack additions: [S0, 0x358, S0]
Exit stack: [V11, 0xa3, V162, 0x358, V162]

================================

Block 0x813
[0x813:0x82b]
---
Predecessors: [0x1dd]
Successors: [0x82c, 0x83b]
---
0x813 JUMPDEST
0x814 CALLER
0x815 PUSH1 0x0
0x817 SWAP1
0x818 DUP2
0x819 MSTORE
0x81a PUSH1 0x1
0x81c PUSH1 0x20
0x81e MSTORE
0x81f PUSH1 0x40
0x821 SWAP1
0x822 SHA3
0x823 SLOAD
0x824 PUSH1 0xff
0x826 AND
0x827 DUP1
0x828 PUSH2 0x83b
0x82b JUMPI
---
0x813: JUMPDEST 
0x814: V727 = CALLER
0x815: V728 = 0x0
0x819: M[0x0] = V727
0x81a: V729 = 0x1
0x81c: V730 = 0x20
0x81e: M[0x20] = 0x1
0x81f: V731 = 0x40
0x822: V732 = SHA3 0x0 0x40
0x823: V733 = S[V732]
0x824: V734 = 0xff
0x826: V735 = AND 0xff V733
0x828: V736 = 0x83b
0x82b: JUMPI 0x83b V735
---
Entry stack: [V11, 0xa3, V176, V179, V181]
Stack pops: 0
Stack additions: [V735]
Exit stack: [V11, 0xa3, V176, V179, V181, V735]

================================

Block 0x82c
[0x82c:0x83a]
---
Predecessors: [0x813]
Successors: [0x83b]
---
0x82c POP
0x82d PUSH1 0x0
0x82f SLOAD
0x830 PUSH1 0x1
0x832 PUSH1 0xa0
0x834 PUSH1 0x2
0x836 EXP
0x837 SUB
0x838 AND
0x839 CALLER
0x83a EQ
---
0x82d: V737 = 0x0
0x82f: V738 = S[0x0]
0x830: V739 = 0x1
0x832: V740 = 0xa0
0x834: V741 = 0x2
0x836: V742 = EXP 0x2 0xa0
0x837: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x838: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0x839: V745 = CALLER
0x83a: V746 = EQ V745 V744
---
Entry stack: [V11, 0xa3, V176, V179, V181, V735]
Stack pops: 1
Stack additions: [V746]
Exit stack: [V11, 0xa3, V176, V179, V181, V746]

================================

Block 0x83b
[0x83b:0x841]
---
Predecessors: [0x813, 0x82c]
Successors: [0x842, 0x846]
---
0x83b JUMPDEST
0x83c ISZERO
0x83d ISZERO
0x83e PUSH2 0x846
0x841 JUMPI
---
0x83b: JUMPDEST 
0x83c: V747 = ISZERO S0
0x83d: V748 = ISZERO V747
0x83e: V749 = 0x846
0x841: JUMPI 0x846 V748
---
Entry stack: [V11, 0xa3, V176, V179, V181, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181]

================================

Block 0x842
[0x842:0x845]
---
Predecessors: [0x83b]
Successors: []
---
0x842 PUSH1 0x0
0x844 DUP1
0x845 REVERT
---
0x842: V750 = 0x0
0x845: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V176, V179, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181]

================================

Block 0x846
[0x846:0x8a5]
---
Predecessors: [0x83b]
Successors: [0x8a6, 0x8aa]
---
0x846 JUMPDEST
0x847 PUSH1 0x40
0x849 DUP1
0x84a MLOAD
0x84b PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x86c DUP2
0x86d MSTORE
0x86e ADDRESS
0x86f PUSH1 0x4
0x871 DUP3
0x872 ADD
0x873 MSTORE
0x874 SWAP1
0x875 MLOAD
0x876 DUP3
0x877 SWAP2
0x878 PUSH1 0x1
0x87a PUSH1 0xa0
0x87c PUSH1 0x2
0x87e EXP
0x87f SUB
0x880 DUP7
0x881 AND
0x882 SWAP2
0x883 PUSH4 0x70a08231
0x888 SWAP2
0x889 PUSH1 0x24
0x88b DUP1
0x88c DUP3
0x88d ADD
0x88e SWAP3
0x88f PUSH1 0x20
0x891 SWAP3
0x892 SWAP1
0x893 SWAP2
0x894 SWAP1
0x895 DUP3
0x896 SWAP1
0x897 SUB
0x898 ADD
0x899 DUP2
0x89a PUSH1 0x0
0x89c DUP8
0x89d DUP1
0x89e EXTCODESIZE
0x89f ISZERO
0x8a0 DUP1
0x8a1 ISZERO
0x8a2 PUSH2 0x8aa
0x8a5 JUMPI
---
0x846: JUMPDEST 
0x847: V751 = 0x40
0x84a: V752 = M[0x40]
0x84b: V753 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x86d: M[V752] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x86e: V754 = ADDRESS
0x86f: V755 = 0x4
0x872: V756 = ADD V752 0x4
0x873: M[V756] = V754
0x875: V757 = M[0x40]
0x878: V758 = 0x1
0x87a: V759 = 0xa0
0x87c: V760 = 0x2
0x87e: V761 = EXP 0x2 0xa0
0x87f: V762 = SUB 0x10000000000000000000000000000000000000000 0x1
0x881: V763 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x883: V764 = 0x70a08231
0x889: V765 = 0x24
0x88d: V766 = ADD V752 0x24
0x88f: V767 = 0x20
0x897: V768 = SUB V752 V757
0x898: V769 = ADD V768 0x24
0x89a: V770 = 0x0
0x89e: V771 = EXTCODESIZE V763
0x89f: V772 = ISZERO V771
0x8a1: V773 = ISZERO V772
0x8a2: V774 = 0x8aa
0x8a5: JUMPI 0x8aa V773
---
Entry stack: [V11, 0xa3, V176, V179, V181]
Stack pops: 3
Stack additions: [S2, S1, S0, S0, V763, 0x70a08231, V766, 0x20, V757, V769, V757, 0x0, V763, V772]
Exit stack: [V11, 0xa3, V176, V179, V181, V181, V763, 0x70a08231, V766, 0x20, V757, V769, V757, 0x0, V763, V772]

================================

Block 0x8a6
[0x8a6:0x8a9]
---
Predecessors: [0x846]
Successors: []
---
0x8a6 PUSH1 0x0
0x8a8 DUP1
0x8a9 REVERT
---
0x8a6: V775 = 0x0
0x8a9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V176, V179, V181, V181, V763, 0x70a08231, V766, 0x20, V757, V769, V757, 0x0, V763, V772]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181, V181, V763, 0x70a08231, V766, 0x20, V757, V769, V757, 0x0, V763, V772]

================================

Block 0x8aa
[0x8aa:0x8b4]
---
Predecessors: [0x846]
Successors: [0x8b5, 0x8be]
---
0x8aa JUMPDEST
0x8ab POP
0x8ac GAS
0x8ad CALL
0x8ae ISZERO
0x8af DUP1
0x8b0 ISZERO
0x8b1 PUSH2 0x8be
0x8b4 JUMPI
---
0x8aa: JUMPDEST 
0x8ac: V776 = GAS
0x8ad: V777 = CALL V776 V763 0x0 V757 V769 V757 0x20
0x8ae: V778 = ISZERO V777
0x8b0: V779 = ISZERO V778
0x8b1: V780 = 0x8be
0x8b4: JUMPI 0x8be V779
---
Entry stack: [V11, 0xa3, V176, V179, V181, V181, V763, 0x70a08231, V766, 0x20, V757, V769, V757, 0x0, V763, V772]
Stack pops: 7
Stack additions: [V778]
Exit stack: [V11, 0xa3, V176, V179, V181, V181, V763, 0x70a08231, V766, V778]

================================

Block 0x8b5
[0x8b5:0x8bd]
---
Predecessors: [0x8aa]
Successors: []
---
0x8b5 RETURNDATASIZE
0x8b6 PUSH1 0x0
0x8b8 DUP1
0x8b9 RETURNDATACOPY
0x8ba RETURNDATASIZE
0x8bb PUSH1 0x0
0x8bd REVERT
---
0x8b5: V781 = RETURNDATASIZE
0x8b6: V782 = 0x0
0x8b9: RETURNDATACOPY 0x0 0x0 V781
0x8ba: V783 = RETURNDATASIZE
0x8bb: V784 = 0x0
0x8bd: REVERT 0x0 V783
---
Entry stack: [V11, 0xa3, V176, V179, V181, V181, V763, 0x70a08231, V766, V778]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181, V181, V763, 0x70a08231, V766, V778]

================================

Block 0x8be
[0x8be:0x8cf]
---
Predecessors: [0x8aa]
Successors: [0x8d0, 0x8d4]
---
0x8be JUMPDEST
0x8bf POP
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 PUSH1 0x40
0x8c5 MLOAD
0x8c6 RETURNDATASIZE
0x8c7 PUSH1 0x20
0x8c9 DUP2
0x8ca LT
0x8cb ISZERO
0x8cc PUSH2 0x8d4
0x8cf JUMPI
---
0x8be: JUMPDEST 
0x8c3: V785 = 0x40
0x8c5: V786 = M[0x40]
0x8c6: V787 = RETURNDATASIZE
0x8c7: V788 = 0x20
0x8ca: V789 = LT V787 0x20
0x8cb: V790 = ISZERO V789
0x8cc: V791 = 0x8d4
0x8cf: JUMPI 0x8d4 V790
---
Entry stack: [V11, 0xa3, V176, V179, V181, V181, V763, 0x70a08231, V766, V778]
Stack pops: 4
Stack additions: [V786, V787]
Exit stack: [V11, 0xa3, V176, V179, V181, V181, V786, V787]

================================

Block 0x8d0
[0x8d0:0x8d3]
---
Predecessors: [0x8be]
Successors: []
---
0x8d0 PUSH1 0x0
0x8d2 DUP1
0x8d3 REVERT
---
0x8d0: V792 = 0x0
0x8d3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V176, V179, V181, V181, V786, V787]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181, V181, V786, V787]

================================

Block 0x8d4
[0x8d4:0x8db]
---
Predecessors: [0x8be]
Successors: [0x8dc, 0x981]
---
0x8d4 JUMPDEST
0x8d5 POP
0x8d6 MLOAD
0x8d7 LT
0x8d8 PUSH2 0x981
0x8db JUMPI
---
0x8d4: JUMPDEST 
0x8d6: V793 = M[V786]
0x8d7: V794 = LT V793 V181
0x8d8: V795 = 0x981
0x8db: JUMPI 0x981 V794
---
Entry stack: [V11, 0xa3, V176, V179, V181, V181, V786, V787]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181]

================================

Block 0x8dc
[0x8dc:0x952]
---
Predecessors: [0x8d4]
Successors: [0x953, 0x957]
---
0x8dc DUP3
0x8dd PUSH1 0x1
0x8df PUSH1 0xa0
0x8e1 PUSH1 0x2
0x8e3 EXP
0x8e4 SUB
0x8e5 AND
0x8e6 PUSH4 0xa9059cbb
0x8eb DUP4
0x8ec DUP4
0x8ed PUSH1 0x40
0x8ef MLOAD
0x8f0 DUP4
0x8f1 PUSH4 0xffffffff
0x8f6 AND
0x8f7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x915 MUL
0x916 DUP2
0x917 MSTORE
0x918 PUSH1 0x4
0x91a ADD
0x91b DUP1
0x91c DUP4
0x91d PUSH1 0x1
0x91f PUSH1 0xa0
0x921 PUSH1 0x2
0x923 EXP
0x924 SUB
0x925 AND
0x926 PUSH1 0x1
0x928 PUSH1 0xa0
0x92a PUSH1 0x2
0x92c EXP
0x92d SUB
0x92e AND
0x92f DUP2
0x930 MSTORE
0x931 PUSH1 0x20
0x933 ADD
0x934 DUP3
0x935 DUP2
0x936 MSTORE
0x937 PUSH1 0x20
0x939 ADD
0x93a SWAP3
0x93b POP
0x93c POP
0x93d POP
0x93e PUSH1 0x20
0x940 PUSH1 0x40
0x942 MLOAD
0x943 DUP1
0x944 DUP4
0x945 SUB
0x946 DUP2
0x947 PUSH1 0x0
0x949 DUP8
0x94a DUP1
0x94b EXTCODESIZE
0x94c ISZERO
0x94d DUP1
0x94e ISZERO
0x94f PUSH2 0x957
0x952 JUMPI
---
0x8dd: V796 = 0x1
0x8df: V797 = 0xa0
0x8e1: V798 = 0x2
0x8e3: V799 = EXP 0x2 0xa0
0x8e4: V800 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e5: V801 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x8e6: V802 = 0xa9059cbb
0x8ed: V803 = 0x40
0x8ef: V804 = M[0x40]
0x8f1: V805 = 0xffffffff
0x8f6: V806 = AND 0xffffffff 0xa9059cbb
0x8f7: V807 = 0x100000000000000000000000000000000000000000000000000000000
0x915: V808 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x917: M[V804] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x918: V809 = 0x4
0x91a: V810 = ADD 0x4 V804
0x91d: V811 = 0x1
0x91f: V812 = 0xa0
0x921: V813 = 0x2
0x923: V814 = EXP 0x2 0xa0
0x924: V815 = SUB 0x10000000000000000000000000000000000000000 0x1
0x925: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x926: V817 = 0x1
0x928: V818 = 0xa0
0x92a: V819 = 0x2
0x92c: V820 = EXP 0x2 0xa0
0x92d: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92e: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0x930: M[V810] = V822
0x931: V823 = 0x20
0x933: V824 = ADD 0x20 V810
0x936: M[V824] = V181
0x937: V825 = 0x20
0x939: V826 = ADD 0x20 V824
0x93e: V827 = 0x20
0x940: V828 = 0x40
0x942: V829 = M[0x40]
0x945: V830 = SUB V826 V829
0x947: V831 = 0x0
0x94b: V832 = EXTCODESIZE V801
0x94c: V833 = ISZERO V832
0x94e: V834 = ISZERO V833
0x94f: V835 = 0x957
0x952: JUMPI 0x957 V834
---
Entry stack: [V11, 0xa3, V176, V179, V181]
Stack pops: 3
Stack additions: [S2, S1, S0, V801, 0xa9059cbb, V826, 0x20, V829, V830, V829, 0x0, V801, V833]
Exit stack: [V11, 0xa3, V176, V179, V181, V801, 0xa9059cbb, V826, 0x20, V829, V830, V829, 0x0, V801, V833]

================================

Block 0x953
[0x953:0x956]
---
Predecessors: [0x8dc]
Successors: []
---
0x953 PUSH1 0x0
0x955 DUP1
0x956 REVERT
---
0x953: V836 = 0x0
0x956: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V176, V179, V181, V801, 0xa9059cbb, V826, 0x20, V829, V830, V829, 0x0, V801, V833]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181, V801, 0xa9059cbb, V826, 0x20, V829, V830, V829, 0x0, V801, V833]

================================

Block 0x957
[0x957:0x961]
---
Predecessors: [0x8dc]
Successors: [0x962, 0x96b]
---
0x957 JUMPDEST
0x958 POP
0x959 GAS
0x95a CALL
0x95b ISZERO
0x95c DUP1
0x95d ISZERO
0x95e PUSH2 0x96b
0x961 JUMPI
---
0x957: JUMPDEST 
0x959: V837 = GAS
0x95a: V838 = CALL V837 V801 0x0 V829 V830 V829 0x20
0x95b: V839 = ISZERO V838
0x95d: V840 = ISZERO V839
0x95e: V841 = 0x96b
0x961: JUMPI 0x96b V840
---
Entry stack: [V11, 0xa3, V176, V179, V181, V801, 0xa9059cbb, V826, 0x20, V829, V830, V829, 0x0, V801, V833]
Stack pops: 7
Stack additions: [V839]
Exit stack: [V11, 0xa3, V176, V179, V181, V801, 0xa9059cbb, V826, V839]

================================

Block 0x962
[0x962:0x96a]
---
Predecessors: [0x957]
Successors: []
---
0x962 RETURNDATASIZE
0x963 PUSH1 0x0
0x965 DUP1
0x966 RETURNDATACOPY
0x967 RETURNDATASIZE
0x968 PUSH1 0x0
0x96a REVERT
---
0x962: V842 = RETURNDATASIZE
0x963: V843 = 0x0
0x966: RETURNDATACOPY 0x0 0x0 V842
0x967: V844 = RETURNDATASIZE
0x968: V845 = 0x0
0x96a: REVERT 0x0 V844
---
Entry stack: [V11, 0xa3, V176, V179, V181, V801, 0xa9059cbb, V826, V839]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181, V801, 0xa9059cbb, V826, V839]

================================

Block 0x96b
[0x96b:0x97c]
---
Predecessors: [0x957]
Successors: [0x573, 0x97d]
---
0x96b JUMPDEST
0x96c POP
0x96d POP
0x96e POP
0x96f POP
0x970 PUSH1 0x40
0x972 MLOAD
0x973 RETURNDATASIZE
0x974 PUSH1 0x20
0x976 DUP2
0x977 LT
0x978 ISZERO
0x979 PUSH2 0x573
0x97c JUMPI
---
0x96b: JUMPDEST 
0x970: V846 = 0x40
0x972: V847 = M[0x40]
0x973: V848 = RETURNDATASIZE
0x974: V849 = 0x20
0x977: V850 = LT V848 0x20
0x978: V851 = ISZERO V850
0x979: V852 = 0x573
0x97c: JUMPI 0x573 V851
---
Entry stack: [V11, 0xa3, V176, V179, V181, V801, 0xa9059cbb, V826, V839]
Stack pops: 4
Stack additions: [V847, V848]
Exit stack: [V11, 0xa3, V176, V179, V181, V847, V848]

================================

Block 0x97d
[0x97d:0x980]
---
Predecessors: [0x96b]
Successors: []
---
0x97d PUSH1 0x0
0x97f DUP1
0x980 REVERT
---
0x97d: V853 = 0x0
0x980: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V176, V179, V181, V847, V848]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V176, V179, V181, V847, V848]

================================

Block 0x981
[0x981:0x985]
---
Predecessors: [0x8d4]
Successors: [0xa3]
---
0x981 JUMPDEST
0x982 POP
0x983 POP
0x984 POP
0x985 JUMP
---
0x981: JUMPDEST 
0x985: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V176, V179, V181]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x986
[0x986:0x9b1]
---
Predecessors: []
Successors: []
---
0x986 STOP
0x987 LOG1
0x988 PUSH6 0x627a7a723058
0x98f SHA3
0x990 DUP14
0x991 CALLDATALOAD
0x992 MISSING 0xb1
0x993 MISSING 0x26
0x994 PUSH10 0x4a59021a543dc3e0e0df
0x99f PUSH3 0xaace03
0x9a3 MISSING 0xdc
0x9a4 MLOAD
0x9a5 MISSING 0xea
0x9a6 DUP5
0x9a7 MISSING 0x26
0x9a8 DUP11
0x9a9 MISSING 0xbc
0x9aa MISSING 0x49
0x9ab DIFFICULTY
0x9ac MISSING 0xa9
0x9ad SWAP12
0x9ae MISSING 0x5d
0x9af MISSING 0x1f
0x9b0 STOP
0x9b1 MISSING 0x29
---
0x986: STOP 
0x987: LOG S0 S1 S2
0x988: V854 = 0x627a7a723058
0x98f: V855 = SHA3 0x627a7a723058 S3
0x991: V856 = CALLDATALOAD S16
0x992: MISSING 0xb1
0x993: MISSING 0x26
0x994: V857 = 0x4a59021a543dc3e0e0df
0x99f: V858 = 0xaace03
0x9a3: MISSING 0xdc
0x9a4: V859 = M[S0]
0x9a5: MISSING 0xea
0x9a7: MISSING 0x26
0x9a9: MISSING 0xbc
0x9aa: MISSING 0x49
0x9ab: V860 = DIFFICULTY
0x9ac: MISSING 0xa9
0x9ae: MISSING 0x5d
0x9af: MISSING 0x1f
0x9b0: STOP 
0x9b1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V856, V855, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, 0xaace03, 0x4a59021a543dc3e0e0df, V859, S4, S0, S1, S2, S3, S4, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V860, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0xadcbe58
Entry block: 0xa5
Exit block: 0xad
Body: 0xa3, 0xa5, 0xad, 0xb1

Function 1:
Public function signature: 0x361ccc5f
Entry block: 0xc9
Exit block: 0xed
Body: 0xc9, 0xd1, 0xd5, 0xed, 0x35c, 0x377, 0x386, 0x38d, 0x391, 0x39d, 0x3c9, 0x3d2, 0x3d7

Function 2:
Public function signature: 0x3e29fc0c
Entry block: 0xff
Exit block: 0x49c
Body: 0xa3, 0xff, 0x107, 0x10b, 0x358, 0x3de, 0x3f7, 0x406, 0x40d, 0x411, 0x424, 0x48d, 0x491, 0x49c, 0x4a5, 0x4aa

Function 3:
Public function signature: 0x5b715b48
Entry block: 0x123
Exit block: 0x56a
Body: 0xa3, 0x123, 0x12b, 0x12f, 0x4b4, 0x4cd, 0x4dc, 0x4e3, 0x4e7, 0x4fa, 0x55b, 0x55f, 0x56a, 0x573, 0x578

Function 4:
Public function signature: 0x7355f245
Entry block: 0x13b
Exit block: 0xa3
Body: 0xa3, 0x13b, 0x143, 0x147, 0x57b, 0x58e, 0x592

Function 5:
Public function signature: 0x7379daab
Entry block: 0x15c
Exit block: 0xa3
Body: 0xa3, 0x15c, 0x164, 0x168, 0x358, 0x5b9, 0x5d2, 0x5e1, 0x5e8, 0x5ec, 0x5ff, 0x668, 0x66c, 0x677, 0x680

Function 6:
Public function signature: 0x8a8a7645
Entry block: 0x180
Exit block: 0x188
Body: 0xed, 0x180, 0x188, 0x18c

Function 7:
Public function signature: 0x8d2e6c90
Entry block: 0x198
Exit block: 0xa3
Body: 0xa3, 0x198, 0x1a0, 0x1a4, 0x700, 0x713, 0x717

Function 8:
Public function signature: 0x9a6983c3
Entry block: 0x1b9
Exit block: 0x7fc
Body: 0xa3, 0x1b9, 0x1c1, 0x1c5, 0x358, 0x746, 0x75f, 0x76e, 0x775, 0x779, 0x78c, 0x7ed, 0x7f1, 0x7fc, 0x805, 0x80a

Function 9:
Public function signature: 0xa3640cb9
Entry block: 0x1d1
Exit block: 0xa3
Body: 0xa3, 0x1d1, 0x1d9, 0x1dd, 0x573, 0x578, 0x813, 0x82c, 0x83b, 0x842, 0x846, 0x8a6, 0x8aa, 0x8b5, 0x8be, 0x8d0, 0x8d4, 0x8dc, 0x953, 0x957, 0x962, 0x96b, 0x97d, 0x981

Function 10:
Public fallback function
Entry block: 0xa3
Exit block: 0xa3
Body: 0xa3

Function 11:
Private function
Entry block: 0x688
Exit block: 0x6fa
Body: 0x688, 0x6a3, 0x6b2, 0x6bd, 0x6c9, 0x6f5, 0x6fa

