Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xee]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xee
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xee
0xa: JUMPI 0xee V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xfb]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2c4e722e
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xfb
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2c4e722e
0x39: V12 = EQ V10 0x2c4e722e
0x3a: V13 = 0xfb
0x3d: JUMPI 0xfb V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x120]
---
0x3e DUP1
0x3f PUSH4 0x3197cbb6
0x44 EQ
0x45 PUSH2 0x120
0x48 JUMPI
---
0x3f: V14 = 0x3197cbb6
0x44: V15 = EQ 0x3197cbb6 V10
0x45: V16 = 0x120
0x48: JUMPI 0x120 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x145]
---
0x49 DUP1
0x4a PUSH4 0x355274ea
0x4f EQ
0x50 PUSH2 0x145
0x53 JUMPI
---
0x4a: V17 = 0x355274ea
0x4f: V18 = EQ 0x355274ea V10
0x50: V19 = 0x145
0x53: JUMPI 0x145 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x16a]
---
0x54 DUP1
0x55 PUSH4 0x3f4ba83a
0x5a EQ
0x5b PUSH2 0x16a
0x5e JUMPI
---
0x55: V20 = 0x3f4ba83a
0x5a: V21 = EQ 0x3f4ba83a V10
0x5b: V22 = 0x16a
0x5e: JUMPI 0x16a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x17f]
---
0x5f DUP1
0x60 PUSH4 0x4042b66f
0x65 EQ
0x66 PUSH2 0x17f
0x69 JUMPI
---
0x60: V23 = 0x4042b66f
0x65: V24 = EQ 0x4042b66f V10
0x66: V25 = 0x17f
0x69: JUMPI 0x17f V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x1a4]
---
0x6a DUP1
0x6b PUSH4 0x521eb273
0x70 EQ
0x71 PUSH2 0x1a4
0x74 JUMPI
---
0x6b: V26 = 0x521eb273
0x70: V27 = EQ 0x521eb273 V10
0x71: V28 = 0x1a4
0x74: JUMPI 0x1a4 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1d3]
---
0x75 DUP1
0x76 PUSH4 0x5c975abb
0x7b EQ
0x7c PUSH2 0x1d3
0x7f JUMPI
---
0x76: V29 = 0x5c975abb
0x7b: V30 = EQ 0x5c975abb V10
0x7c: V31 = 0x1d3
0x7f: JUMPI 0x1d3 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1fa]
---
0x80 DUP1
0x81 PUSH4 0x5fbe4d1d
0x86 EQ
0x87 PUSH2 0x1fa
0x8a JUMPI
---
0x81: V32 = 0x5fbe4d1d
0x86: V33 = EQ 0x5fbe4d1d V10
0x87: V34 = 0x1fa
0x8a: JUMPI 0x1fa V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x229]
---
0x8b DUP1
0x8c PUSH4 0x78e97925
0x91 EQ
0x92 PUSH2 0x229
0x95 JUMPI
---
0x8c: V35 = 0x78e97925
0x91: V36 = EQ 0x78e97925 V10
0x92: V37 = 0x229
0x95: JUMPI 0x229 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x24e]
---
0x96 DUP1
0x97 PUSH4 0x83197ef0
0x9c EQ
0x9d PUSH2 0x24e
0xa0 JUMPI
---
0x97: V38 = 0x83197ef0
0x9c: V39 = EQ 0x83197ef0 V10
0x9d: V40 = 0x24e
0xa0: JUMPI 0x24e V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x263]
---
0xa1 DUP1
0xa2 PUSH4 0x8456cb59
0xa7 EQ
0xa8 PUSH2 0x263
0xab JUMPI
---
0xa2: V41 = 0x8456cb59
0xa7: V42 = EQ 0x8456cb59 V10
0xa8: V43 = 0x263
0xab: JUMPI 0x263 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x278]
---
0xac DUP1
0xad PUSH4 0x8da5cb5b
0xb2 EQ
0xb3 PUSH2 0x278
0xb6 JUMPI
---
0xad: V44 = 0x8da5cb5b
0xb2: V45 = EQ 0x8da5cb5b V10
0xb3: V46 = 0x278
0xb6: JUMPI 0x278 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x2a7]
---
0xb7 DUP1
0xb8 PUSH4 0xa96fb9b4
0xbd EQ
0xbe PUSH2 0x2a7
0xc1 JUMPI
---
0xb8: V47 = 0xa96fb9b4
0xbd: V48 = EQ 0xa96fb9b4 V10
0xbe: V49 = 0x2a7
0xc1: JUMPI 0x2a7 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x2d6]
---
0xc2 DUP1
0xc3 PUSH4 0xec8ac4d8
0xc8 EQ
0xc9 PUSH2 0x2d6
0xcc JUMPI
---
0xc3: V50 = 0xec8ac4d8
0xc8: V51 = EQ 0xec8ac4d8 V10
0xc9: V52 = 0x2d6
0xcc: JUMPI 0x2d6 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x2ec]
---
0xcd DUP1
0xce PUSH4 0xecb70fb7
0xd3 EQ
0xd4 PUSH2 0x2ec
0xd7 JUMPI
---
0xce: V53 = 0xecb70fb7
0xd3: V54 = EQ 0xecb70fb7 V10
0xd4: V55 = 0x2ec
0xd7: JUMPI 0x2ec V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x313]
---
0xd8 DUP1
0xd9 PUSH4 0xf2fde38b
0xde EQ
0xdf PUSH2 0x313
0xe2 JUMPI
---
0xd9: V56 = 0xf2fde38b
0xde: V57 = EQ 0xf2fde38b V10
0xdf: V58 = 0x313
0xe2: JUMPI 0x313 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x334]
---
0xe3 DUP1
0xe4 PUSH4 0xf5074f41
0xe9 EQ
0xea PUSH2 0x334
0xed JUMPI
---
0xe4: V59 = 0xf5074f41
0xe9: V60 = EQ 0xf5074f41 V10
0xea: V61 = 0x334
0xed: JUMPI 0x334 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xee]
---
Predecessors: [0x0, 0xe3]
Successors: [0xef]
---
0xee JUMPDEST
---
0xee: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xef
[0xef:0xf7]
---
Predecessors: [0xee]
Successors: [0x355]
---
0xef JUMPDEST
0xf0 PUSH2 0xf8
0xf3 CALLER
0xf4 PUSH2 0x355
0xf7 JUMP
---
0xef: JUMPDEST 
0xf0: V62 = 0xf8
0xf3: V63 = CALLER
0xf4: V64 = 0x355
0xf7: JUMP 0x355
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8, V63]
Exit stack: [V10, 0xf8, V63]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0x4c1, 0x558, 0x645, 0x684, 0x71e, 0x77f]
Successors: [0xf9]
---
0xf8 JUMPDEST
---
0xf8: JUMPDEST 
---
Entry stack: [V10, 0xf8, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xf9
[0xf9:0xfa]
---
Predecessors: [0xf8]
Successors: []
---
0xf9 JUMPDEST
0xfa STOP
---
0xf9: JUMPDEST 
0xfa: STOP 
---
Entry stack: [V10, 0xf8, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xfb
[0xfb:0x101]
---
Predecessors: [0xb]
Successors: [0x102, 0x106]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfb: JUMPDEST 
0xfc: V65 = CALLVALUE
0xfd: V66 = ISZERO V65
0xfe: V67 = 0x106
0x101: JUMPI 0x106 V66
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfb]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V68 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x106
[0x106:0x10d]
---
Predecessors: [0xfb]
Successors: [0x4c6]
---
0x106 JUMPDEST
0x107 PUSH2 0x10e
0x10a PUSH2 0x4c6
0x10d JUMP
---
0x106: JUMPDEST 
0x107: V69 = 0x10e
0x10a: V70 = 0x4c6
0x10d: JUMP 0x4c6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V10, 0x10e]

================================

Block 0x10e
[0x10e:0x11f]
---
Predecessors: [0x4c6, 0x4cc, 0x4d2, 0x55a, 0x58e]
Successors: []
---
0x10e JUMPDEST
0x10f PUSH1 0x40
0x111 MLOAD
0x112 SWAP1
0x113 DUP2
0x114 MSTORE
0x115 PUSH1 0x20
0x117 ADD
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0x10e: JUMPDEST 
0x10f: V71 = 0x40
0x111: V72 = M[0x40]
0x114: M[V72] = S0
0x115: V73 = 0x20
0x117: V74 = ADD 0x20 V72
0x118: V75 = 0x40
0x11a: V76 = M[0x40]
0x11d: V77 = SUB V74 V76
0x11f: RETURN V76 V77
---
Entry stack: [V10, 0x10e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10e]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x3e]
Successors: [0x127, 0x12b]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V78 = CALLVALUE
0x122: V79 = ISZERO V78
0x123: V80 = 0x12b
0x126: JUMPI 0x12b V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x120]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V81 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x132]
---
Predecessors: [0x120]
Successors: [0x4cc]
---
0x12b JUMPDEST
0x12c PUSH2 0x10e
0x12f PUSH2 0x4cc
0x132 JUMP
---
0x12b: JUMPDEST 
0x12c: V82 = 0x10e
0x12f: V83 = 0x4cc
0x132: JUMP 0x4cc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V10, 0x10e]

================================

Block 0x133
[0x133:0x144]
---
Predecessors: []
Successors: []
---
0x133 JUMPDEST
0x134 PUSH1 0x40
0x136 MLOAD
0x137 SWAP1
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x20
0x13c ADD
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 SWAP2
0x142 SUB
0x143 SWAP1
0x144 RETURN
---
0x133: JUMPDEST 
0x134: V84 = 0x40
0x136: V85 = M[0x40]
0x139: M[V85] = S0
0x13a: V86 = 0x20
0x13c: V87 = ADD 0x20 V85
0x13d: V88 = 0x40
0x13f: V89 = M[0x40]
0x142: V90 = SUB V87 V89
0x144: RETURN V89 V90
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x145
[0x145:0x14b]
---
Predecessors: [0x49]
Successors: [0x14c, 0x150]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x145: JUMPDEST 
0x146: V91 = CALLVALUE
0x147: V92 = ISZERO V91
0x148: V93 = 0x150
0x14b: JUMPI 0x150 V92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x145]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V94 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x150
[0x150:0x157]
---
Predecessors: [0x145]
Successors: [0x4d2]
---
0x150 JUMPDEST
0x151 PUSH2 0x10e
0x154 PUSH2 0x4d2
0x157 JUMP
---
0x150: JUMPDEST 
0x151: V95 = 0x10e
0x154: V96 = 0x4d2
0x157: JUMP 0x4d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V10, 0x10e]

================================

Block 0x158
[0x158:0x169]
---
Predecessors: []
Successors: []
---
0x158 JUMPDEST
0x159 PUSH1 0x40
0x15b MLOAD
0x15c SWAP1
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0x20
0x161 ADD
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 SWAP2
0x167 SUB
0x168 SWAP1
0x169 RETURN
---
0x158: JUMPDEST 
0x159: V97 = 0x40
0x15b: V98 = M[0x40]
0x15e: M[V98] = S0
0x15f: V99 = 0x20
0x161: V100 = ADD 0x20 V98
0x162: V101 = 0x40
0x164: V102 = M[0x40]
0x167: V103 = SUB V100 V102
0x169: RETURN V102 V103
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x16a
[0x16a:0x170]
---
Predecessors: [0x54]
Successors: [0x171, 0x175]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x16a: JUMPDEST 
0x16b: V104 = CALLVALUE
0x16c: V105 = ISZERO V104
0x16d: V106 = 0x175
0x170: JUMPI 0x175 V105
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x16a]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V107 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x175
[0x175:0x17c]
---
Predecessors: [0x16a]
Successors: [0x4d8]
---
0x175 JUMPDEST
0x176 PUSH2 0xf8
0x179 PUSH2 0x4d8
0x17c JUMP
---
0x175: JUMPDEST 
0x176: V108 = 0xf8
0x179: V109 = 0x4d8
0x17c: JUMP 0x4d8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8]
Exit stack: [V10, 0xf8]

================================

Block 0x17d
[0x17d:0x17e]
---
Predecessors: []
Successors: []
---
0x17d JUMPDEST
0x17e STOP
---
0x17d: JUMPDEST 
0x17e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17f
[0x17f:0x185]
---
Predecessors: [0x5f]
Successors: [0x186, 0x18a]
---
0x17f JUMPDEST
0x180 CALLVALUE
0x181 ISZERO
0x182 PUSH2 0x18a
0x185 JUMPI
---
0x17f: JUMPDEST 
0x180: V110 = CALLVALUE
0x181: V111 = ISZERO V110
0x182: V112 = 0x18a
0x185: JUMPI 0x18a V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x17f]
Successors: []
---
0x186 PUSH1 0x0
0x188 DUP1
0x189 REVERT
---
0x186: V113 = 0x0
0x189: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18a
[0x18a:0x191]
---
Predecessors: [0x17f]
Successors: [0x55a]
---
0x18a JUMPDEST
0x18b PUSH2 0x10e
0x18e PUSH2 0x55a
0x191 JUMP
---
0x18a: JUMPDEST 
0x18b: V114 = 0x10e
0x18e: V115 = 0x55a
0x191: JUMP 0x55a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V10, 0x10e]

================================

Block 0x192
[0x192:0x1a3]
---
Predecessors: []
Successors: []
---
0x192 JUMPDEST
0x193 PUSH1 0x40
0x195 MLOAD
0x196 SWAP1
0x197 DUP2
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 SWAP2
0x1a1 SUB
0x1a2 SWAP1
0x1a3 RETURN
---
0x192: JUMPDEST 
0x193: V116 = 0x40
0x195: V117 = M[0x40]
0x198: M[V117] = S0
0x199: V118 = 0x20
0x19b: V119 = ADD 0x20 V117
0x19c: V120 = 0x40
0x19e: V121 = M[0x40]
0x1a1: V122 = SUB V119 V121
0x1a3: RETURN V121 V122
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x6a]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V123 = CALLVALUE
0x1a6: V124 = ISZERO V123
0x1a7: V125 = 0x1af
0x1aa: JUMPI 0x1af V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V126 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a4]
Successors: [0x560]
---
0x1af JUMPDEST
0x1b0 PUSH2 0x1b7
0x1b3 PUSH2 0x560
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V127 = 0x1b7
0x1b3: V128 = 0x560
0x1b6: JUMP 0x560
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b7]
Exit stack: [V10, 0x1b7]

================================

Block 0x1b7
[0x1b7:0x1d2]
---
Predecessors: [0x560, 0x57f, 0x647, 0x656]
Successors: []
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb PUSH1 0x1
0x1bd PUSH1 0xa0
0x1bf PUSH1 0x2
0x1c1 EXP
0x1c2 SUB
0x1c3 SWAP1
0x1c4 SWAP2
0x1c5 AND
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf SWAP2
0x1d0 SUB
0x1d1 SWAP1
0x1d2 RETURN
---
0x1b7: JUMPDEST 
0x1b8: V129 = 0x40
0x1ba: V130 = M[0x40]
0x1bb: V131 = 0x1
0x1bd: V132 = 0xa0
0x1bf: V133 = 0x2
0x1c1: V134 = EXP 0x2 0xa0
0x1c2: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V136 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: M[V130] = V136
0x1c8: V137 = 0x20
0x1ca: V138 = ADD 0x20 V130
0x1cb: V139 = 0x40
0x1cd: V140 = M[0x40]
0x1d0: V141 = SUB V138 V140
0x1d2: RETURN V140 V141
---
Entry stack: [V10, 0x1b7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b7]

================================

Block 0x1d3
[0x1d3:0x1d9]
---
Predecessors: [0x75]
Successors: [0x1da, 0x1de]
---
0x1d3 JUMPDEST
0x1d4 CALLVALUE
0x1d5 ISZERO
0x1d6 PUSH2 0x1de
0x1d9 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V142 = CALLVALUE
0x1d5: V143 = ISZERO V142
0x1d6: V144 = 0x1de
0x1d9: JUMPI 0x1de V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x1dd]
---
Predecessors: [0x1d3]
Successors: []
---
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd REVERT
---
0x1da: V145 = 0x0
0x1dd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1de
[0x1de:0x1e5]
---
Predecessors: [0x1d3]
Successors: [0x56f]
---
0x1de JUMPDEST
0x1df PUSH2 0x1e6
0x1e2 PUSH2 0x56f
0x1e5 JUMP
---
0x1de: JUMPDEST 
0x1df: V146 = 0x1e6
0x1e2: V147 = 0x56f
0x1e5: JUMP 0x56f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e6]
Exit stack: [V10, 0x1e6]

================================

Block 0x1e6
[0x1e6:0x1f9]
---
Predecessors: [0x56f, 0x684]
Successors: []
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea SWAP1
0x1eb ISZERO
0x1ec ISZERO
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 SWAP2
0x1f7 SUB
0x1f8 SWAP1
0x1f9 RETURN
---
0x1e6: JUMPDEST 
0x1e7: V148 = 0x40
0x1e9: V149 = M[0x40]
0x1eb: V150 = ISZERO S0
0x1ec: V151 = ISZERO V150
0x1ee: M[V149] = V151
0x1ef: V152 = 0x20
0x1f1: V153 = ADD 0x20 V149
0x1f2: V154 = 0x40
0x1f4: V155 = M[0x40]
0x1f7: V156 = SUB V153 V155
0x1f9: RETURN V155 V156
---
Entry stack: [V10, 0xf8, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf8, S3, S2, S1]

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0x80]
Successors: [0x201, 0x205]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V157 = CALLVALUE
0x1fc: V158 = ISZERO V157
0x1fd: V159 = 0x205
0x200: JUMPI 0x205 V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
---
0x201: V160 = 0x0
0x204: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x1fa]
Successors: [0x57f]
---
0x205 JUMPDEST
0x206 PUSH2 0x1b7
0x209 PUSH2 0x57f
0x20c JUMP
---
0x205: JUMPDEST 
0x206: V161 = 0x1b7
0x209: V162 = 0x57f
0x20c: JUMP 0x57f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b7]
Exit stack: [V10, 0x1b7]

================================

Block 0x20d
[0x20d:0x228]
---
Predecessors: []
Successors: []
---
0x20d JUMPDEST
0x20e PUSH1 0x40
0x210 MLOAD
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 SWAP1
0x21a SWAP2
0x21b AND
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x20
0x220 ADD
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 SWAP2
0x226 SUB
0x227 SWAP1
0x228 RETURN
---
0x20d: JUMPDEST 
0x20e: V163 = 0x40
0x210: V164 = M[0x40]
0x211: V165 = 0x1
0x213: V166 = 0xa0
0x215: V167 = 0x2
0x217: V168 = EXP 0x2 0xa0
0x218: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21b: V170 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x21d: M[V164] = V170
0x21e: V171 = 0x20
0x220: V172 = ADD 0x20 V164
0x221: V173 = 0x40
0x223: V174 = M[0x40]
0x226: V175 = SUB V172 V174
0x228: RETURN V174 V175
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x229
[0x229:0x22f]
---
Predecessors: [0x8b]
Successors: [0x230, 0x234]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b ISZERO
0x22c PUSH2 0x234
0x22f JUMPI
---
0x229: JUMPDEST 
0x22a: V176 = CALLVALUE
0x22b: V177 = ISZERO V176
0x22c: V178 = 0x234
0x22f: JUMPI 0x234 V177
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x229]
Successors: []
---
0x230 PUSH1 0x0
0x232 DUP1
0x233 REVERT
---
0x230: V179 = 0x0
0x233: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x234
[0x234:0x23b]
---
Predecessors: [0x229]
Successors: [0x58e]
---
0x234 JUMPDEST
0x235 PUSH2 0x10e
0x238 PUSH2 0x58e
0x23b JUMP
---
0x234: JUMPDEST 
0x235: V180 = 0x10e
0x238: V181 = 0x58e
0x23b: JUMP 0x58e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V10, 0x10e]

================================

Block 0x23c
[0x23c:0x24d]
---
Predecessors: []
Successors: []
---
0x23c JUMPDEST
0x23d PUSH1 0x40
0x23f MLOAD
0x240 SWAP1
0x241 DUP2
0x242 MSTORE
0x243 PUSH1 0x20
0x245 ADD
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a SWAP2
0x24b SUB
0x24c SWAP1
0x24d RETURN
---
0x23c: JUMPDEST 
0x23d: V182 = 0x40
0x23f: V183 = M[0x40]
0x242: M[V183] = S0
0x243: V184 = 0x20
0x245: V185 = ADD 0x20 V183
0x246: V186 = 0x40
0x248: V187 = M[0x40]
0x24b: V188 = SUB V185 V187
0x24d: RETURN V187 V188
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x24e
[0x24e:0x254]
---
Predecessors: [0x96]
Successors: [0x255, 0x259]
---
0x24e JUMPDEST
0x24f CALLVALUE
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x24e: JUMPDEST 
0x24f: V189 = CALLVALUE
0x250: V190 = ISZERO V189
0x251: V191 = 0x259
0x254: JUMPI 0x259 V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x24e]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V192 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x259
[0x259:0x260]
---
Predecessors: [0x24e]
Successors: [0x594]
---
0x259 JUMPDEST
0x25a PUSH2 0xf8
0x25d PUSH2 0x594
0x260 JUMP
---
0x259: JUMPDEST 
0x25a: V193 = 0xf8
0x25d: V194 = 0x594
0x260: JUMP 0x594
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8]
Exit stack: [V10, 0xf8]

================================

Block 0x261
[0x261:0x262]
---
Predecessors: []
Successors: []
---
0x261 JUMPDEST
0x262 STOP
---
0x261: JUMPDEST 
0x262: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x263
[0x263:0x269]
---
Predecessors: [0xa1]
Successors: [0x26a, 0x26e]
---
0x263 JUMPDEST
0x264 CALLVALUE
0x265 ISZERO
0x266 PUSH2 0x26e
0x269 JUMPI
---
0x263: JUMPDEST 
0x264: V195 = CALLVALUE
0x265: V196 = ISZERO V195
0x266: V197 = 0x26e
0x269: JUMPI 0x26e V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x263]
Successors: []
---
0x26a PUSH1 0x0
0x26c DUP1
0x26d REVERT
---
0x26a: V198 = 0x0
0x26d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26e
[0x26e:0x275]
---
Predecessors: [0x263]
Successors: [0x5c0]
---
0x26e JUMPDEST
0x26f PUSH2 0xf8
0x272 PUSH2 0x5c0
0x275 JUMP
---
0x26e: JUMPDEST 
0x26f: V199 = 0xf8
0x272: V200 = 0x5c0
0x275: JUMP 0x5c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8]
Exit stack: [V10, 0xf8]

================================

Block 0x276
[0x276:0x277]
---
Predecessors: []
Successors: []
---
0x276 JUMPDEST
0x277 STOP
---
0x276: JUMPDEST 
0x277: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x278
[0x278:0x27e]
---
Predecessors: [0xac]
Successors: [0x27f, 0x283]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x278: JUMPDEST 
0x279: V201 = CALLVALUE
0x27a: V202 = ISZERO V201
0x27b: V203 = 0x283
0x27e: JUMPI 0x283 V202
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x278]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V204 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x283
[0x283:0x28a]
---
Predecessors: [0x278]
Successors: [0x647]
---
0x283 JUMPDEST
0x284 PUSH2 0x1b7
0x287 PUSH2 0x647
0x28a JUMP
---
0x283: JUMPDEST 
0x284: V205 = 0x1b7
0x287: V206 = 0x647
0x28a: JUMP 0x647
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b7]
Exit stack: [V10, 0x1b7]

================================

Block 0x28b
[0x28b:0x2a6]
---
Predecessors: []
Successors: []
---
0x28b JUMPDEST
0x28c PUSH1 0x40
0x28e MLOAD
0x28f PUSH1 0x1
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SUB
0x297 SWAP1
0x298 SWAP2
0x299 AND
0x29a DUP2
0x29b MSTORE
0x29c PUSH1 0x20
0x29e ADD
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 SWAP2
0x2a4 SUB
0x2a5 SWAP1
0x2a6 RETURN
---
0x28b: JUMPDEST 
0x28c: V207 = 0x40
0x28e: V208 = M[0x40]
0x28f: V209 = 0x1
0x291: V210 = 0xa0
0x293: V211 = 0x2
0x295: V212 = EXP 0x2 0xa0
0x296: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x299: V214 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x29b: M[V208] = V214
0x29c: V215 = 0x20
0x29e: V216 = ADD 0x20 V208
0x29f: V217 = 0x40
0x2a1: V218 = M[0x40]
0x2a4: V219 = SUB V216 V218
0x2a6: RETURN V218 V219
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a7
[0x2a7:0x2ad]
---
Predecessors: [0xb7]
Successors: [0x2ae, 0x2b2]
---
0x2a7 JUMPDEST
0x2a8 CALLVALUE
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V220 = CALLVALUE
0x2a9: V221 = ISZERO V220
0x2aa: V222 = 0x2b2
0x2ad: JUMPI 0x2b2 V221
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x2a7]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V223 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b2
[0x2b2:0x2b9]
---
Predecessors: [0x2a7]
Successors: [0x656]
---
0x2b2 JUMPDEST
0x2b3 PUSH2 0x1b7
0x2b6 PUSH2 0x656
0x2b9 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V224 = 0x1b7
0x2b6: V225 = 0x656
0x2b9: JUMP 0x656
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b7]
Exit stack: [V10, 0x1b7]

================================

Block 0x2ba
[0x2ba:0x2d5]
---
Predecessors: []
Successors: []
---
0x2ba JUMPDEST
0x2bb PUSH1 0x40
0x2bd MLOAD
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 SWAP1
0x2c7 SWAP2
0x2c8 AND
0x2c9 DUP2
0x2ca MSTORE
0x2cb PUSH1 0x20
0x2cd ADD
0x2ce PUSH1 0x40
0x2d0 MLOAD
0x2d1 DUP1
0x2d2 SWAP2
0x2d3 SUB
0x2d4 SWAP1
0x2d5 RETURN
---
0x2ba: JUMPDEST 
0x2bb: V226 = 0x40
0x2bd: V227 = M[0x40]
0x2be: V228 = 0x1
0x2c0: V229 = 0xa0
0x2c2: V230 = 0x2
0x2c4: V231 = EXP 0x2 0xa0
0x2c5: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V233 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: M[V227] = V233
0x2cb: V234 = 0x20
0x2cd: V235 = ADD 0x20 V227
0x2ce: V236 = 0x40
0x2d0: V237 = M[0x40]
0x2d3: V238 = SUB V235 V237
0x2d5: RETURN V237 V238
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d6
[0x2d6:0x2e9]
---
Predecessors: [0xc2]
Successors: [0x355]
---
0x2d6 JUMPDEST
0x2d7 PUSH2 0xf8
0x2da PUSH1 0x1
0x2dc PUSH1 0xa0
0x2de PUSH1 0x2
0x2e0 EXP
0x2e1 SUB
0x2e2 PUSH1 0x4
0x2e4 CALLDATALOAD
0x2e5 AND
0x2e6 PUSH2 0x355
0x2e9 JUMP
---
0x2d6: JUMPDEST 
0x2d7: V239 = 0xf8
0x2da: V240 = 0x1
0x2dc: V241 = 0xa0
0x2de: V242 = 0x2
0x2e0: V243 = EXP 0x2 0xa0
0x2e1: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e2: V245 = 0x4
0x2e4: V246 = CALLDATALOAD 0x4
0x2e5: V247 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V248 = 0x355
0x2e9: JUMP 0x355
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8, V247]
Exit stack: [V10, 0xf8, V247]

================================

Block 0x2ea
[0x2ea:0x2eb]
---
Predecessors: []
Successors: []
---
0x2ea JUMPDEST
0x2eb STOP
---
0x2ea: JUMPDEST 
0x2eb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ec
[0x2ec:0x2f2]
---
Predecessors: [0xcd]
Successors: [0x2f3, 0x2f7]
---
0x2ec JUMPDEST
0x2ed CALLVALUE
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V249 = CALLVALUE
0x2ee: V250 = ISZERO V249
0x2ef: V251 = 0x2f7
0x2f2: JUMPI 0x2f7 V250
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2ec]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V252 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f7
[0x2f7:0x2fe]
---
Predecessors: [0x2ec]
Successors: [0x665]
---
0x2f7 JUMPDEST
0x2f8 PUSH2 0x1e6
0x2fb PUSH2 0x665
0x2fe JUMP
---
0x2f7: JUMPDEST 
0x2f8: V253 = 0x1e6
0x2fb: V254 = 0x665
0x2fe: JUMP 0x665
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e6]
Exit stack: [V10, 0x1e6]

================================

Block 0x2ff
[0x2ff:0x312]
---
Predecessors: []
Successors: []
---
0x2ff JUMPDEST
0x300 PUSH1 0x40
0x302 MLOAD
0x303 SWAP1
0x304 ISZERO
0x305 ISZERO
0x306 DUP2
0x307 MSTORE
0x308 PUSH1 0x20
0x30a ADD
0x30b PUSH1 0x40
0x30d MLOAD
0x30e DUP1
0x30f SWAP2
0x310 SUB
0x311 SWAP1
0x312 RETURN
---
0x2ff: JUMPDEST 
0x300: V255 = 0x40
0x302: V256 = M[0x40]
0x304: V257 = ISZERO S0
0x305: V258 = ISZERO V257
0x307: M[V256] = V258
0x308: V259 = 0x20
0x30a: V260 = ADD 0x20 V256
0x30b: V261 = 0x40
0x30d: V262 = M[0x40]
0x310: V263 = SUB V260 V262
0x312: RETURN V262 V263
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x313
[0x313:0x319]
---
Predecessors: [0xd8]
Successors: [0x31a, 0x31e]
---
0x313 JUMPDEST
0x314 CALLVALUE
0x315 ISZERO
0x316 PUSH2 0x31e
0x319 JUMPI
---
0x313: JUMPDEST 
0x314: V264 = CALLVALUE
0x315: V265 = ISZERO V264
0x316: V266 = 0x31e
0x319: JUMPI 0x31e V265
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31a
[0x31a:0x31d]
---
Predecessors: [0x313]
Successors: []
---
0x31a PUSH1 0x0
0x31c DUP1
0x31d REVERT
---
0x31a: V267 = 0x0
0x31d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31e
[0x31e:0x331]
---
Predecessors: [0x313]
Successors: [0x688]
---
0x31e JUMPDEST
0x31f PUSH2 0xf8
0x322 PUSH1 0x1
0x324 PUSH1 0xa0
0x326 PUSH1 0x2
0x328 EXP
0x329 SUB
0x32a PUSH1 0x4
0x32c CALLDATALOAD
0x32d AND
0x32e PUSH2 0x688
0x331 JUMP
---
0x31e: JUMPDEST 
0x31f: V268 = 0xf8
0x322: V269 = 0x1
0x324: V270 = 0xa0
0x326: V271 = 0x2
0x328: V272 = EXP 0x2 0xa0
0x329: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32a: V274 = 0x4
0x32c: V275 = CALLDATALOAD 0x4
0x32d: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V277 = 0x688
0x331: JUMP 0x688
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8, V276]
Exit stack: [V10, 0xf8, V276]

================================

Block 0x332
[0x332:0x333]
---
Predecessors: []
Successors: []
---
0x332 JUMPDEST
0x333 STOP
---
0x332: JUMPDEST 
0x333: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x334
[0x334:0x33a]
---
Predecessors: [0xe3]
Successors: [0x33b, 0x33f]
---
0x334 JUMPDEST
0x335 CALLVALUE
0x336 ISZERO
0x337 PUSH2 0x33f
0x33a JUMPI
---
0x334: JUMPDEST 
0x335: V278 = CALLVALUE
0x336: V279 = ISZERO V278
0x337: V280 = 0x33f
0x33a: JUMPI 0x33f V279
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33b
[0x33b:0x33e]
---
Predecessors: [0x334]
Successors: []
---
0x33b PUSH1 0x0
0x33d DUP1
0x33e REVERT
---
0x33b: V281 = 0x0
0x33e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33f
[0x33f:0x352]
---
Predecessors: [0x334]
Successors: [0x721]
---
0x33f JUMPDEST
0x340 PUSH2 0xf8
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b PUSH1 0x4
0x34d CALLDATALOAD
0x34e AND
0x34f PUSH2 0x721
0x352 JUMP
---
0x33f: JUMPDEST 
0x340: V282 = 0xf8
0x343: V283 = 0x1
0x345: V284 = 0xa0
0x347: V285 = 0x2
0x349: V286 = EXP 0x2 0xa0
0x34a: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34b: V288 = 0x4
0x34d: V289 = CALLDATALOAD 0x4
0x34e: V290 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V291 = 0x721
0x352: JUMP 0x721
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8, V290]
Exit stack: [V10, 0xf8, V290]

================================

Block 0x353
[0x353:0x354]
---
Predecessors: []
Successors: []
---
0x353 JUMPDEST
0x354 STOP
---
0x353: JUMPDEST 
0x354: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x355
[0x355:0x368]
---
Predecessors: [0xef, 0x2d6]
Successors: [0x369, 0x36d]
---
0x355 JUMPDEST
0x356 PUSH1 0x0
0x358 DUP1
0x359 PUSH1 0x1
0x35b PUSH1 0xa0
0x35d PUSH1 0x2
0x35f EXP
0x360 SUB
0x361 DUP4
0x362 AND
0x363 ISZERO
0x364 ISZERO
0x365 PUSH2 0x36d
0x368 JUMPI
---
0x355: JUMPDEST 
0x356: V292 = 0x0
0x359: V293 = 0x1
0x35b: V294 = 0xa0
0x35d: V295 = 0x2
0x35f: V296 = EXP 0x2 0xa0
0x360: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x362: V298 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x363: V299 = ISZERO V298
0x364: V300 = ISZERO V299
0x365: V301 = 0x36d
0x368: JUMPI 0x36d V300
---
Entry stack: [V10, 0xf8, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V10, 0xf8, S0, 0x0, 0x0]

================================

Block 0x369
[0x369:0x36c]
---
Predecessors: [0x355]
Successors: []
---
0x369 PUSH1 0x0
0x36b DUP1
0x36c REVERT
---
0x369: V302 = 0x0
0x36c: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S2, 0x0, 0x0]

================================

Block 0x36d
[0x36d:0x374]
---
Predecessors: [0x355]
Successors: [0x74c]
---
0x36d JUMPDEST
0x36e PUSH2 0x375
0x371 PUSH2 0x74c
0x374 JUMP
---
0x36d: JUMPDEST 
0x36e: V303 = 0x375
0x371: V304 = 0x74c
0x374: JUMP 0x74c
---
Entry stack: [V10, 0xf8, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x375]
Exit stack: [V10, 0xf8, S2, 0x0, 0x0, 0x375]

================================

Block 0x375
[0x375:0x37b]
---
Predecessors: [0x4c1, 0x684, 0x77f]
Successors: [0x37c, 0x380]
---
0x375 JUMPDEST
0x376 ISZERO
0x377 ISZERO
0x378 PUSH2 0x380
0x37b JUMPI
---
0x375: JUMPDEST 
0x376: V305 = ISZERO S0
0x377: V306 = ISZERO V305
0x378: V307 = 0x380
0x37b: JUMPI 0x380 V306
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S4, S3, S2, S1]

================================

Block 0x37c
[0x37c:0x37f]
---
Predecessors: [0x375]
Successors: []
---
0x37c PUSH1 0x0
0x37e DUP1
0x37f REVERT
---
0x37c: V308 = 0x0
0x37f: REVERT 0x0 0x0
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0x380
[0x380:0x396]
---
Predecessors: [0x375]
Successors: [0x783]
---
0x380 JUMPDEST
0x381 PUSH1 0x5
0x383 SLOAD
0x384 CALLVALUE
0x385 SWAP3
0x386 POP
0x387 PUSH2 0x397
0x38a SWAP1
0x38b DUP4
0x38c SWAP1
0x38d PUSH4 0xffffffff
0x392 PUSH2 0x783
0x395 AND
0x396 JUMP
---
0x380: JUMPDEST 
0x381: V309 = 0x5
0x383: V310 = S[0x5]
0x384: V311 = CALLVALUE
0x387: V312 = 0x397
0x38d: V313 = 0xffffffff
0x392: V314 = 0x783
0x395: V315 = AND 0x783 0xffffffff
0x396: JUMP 0x783
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V311, S0, 0x397, V311, V310]
Exit stack: [V10, S3, S2, V311, S0, 0x397, V311, V310]

================================

Block 0x397
[0x397:0x3ac]
---
Predecessors: [0x7ab]
Successors: [0x7b2]
---
0x397 JUMPDEST
0x398 PUSH1 0x6
0x39a SLOAD
0x39b SWAP1
0x39c SWAP2
0x39d POP
0x39e PUSH2 0x3ad
0x3a1 SWAP1
0x3a2 DUP4
0x3a3 PUSH4 0xffffffff
0x3a8 PUSH2 0x7b2
0x3ab AND
0x3ac JUMP
---
0x397: JUMPDEST 
0x398: V316 = 0x6
0x39a: V317 = S[0x6]
0x39e: V318 = 0x3ad
0x3a3: V319 = 0xffffffff
0x3a8: V320 = 0x7b2
0x3ab: V321 = AND 0x7b2 0xffffffff
0x3ac: JUMP 0x7b2
---
Entry stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S0, 0x3ad, V317, S2]
Exit stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S0, 0x3ad, V317, S2]

================================

Block 0x3ad
[0x3ad:0x449]
---
Predecessors: [0x7ab]
Successors: [0x44a, 0x44e]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x6
0x3b0 SSTORE
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 SLOAD
0x3b5 PUSH1 0x1
0x3b7 DUP1
0x3b8 SLOAD
0x3b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ce NOT
0x3cf AND
0x3d0 PUSH1 0x1
0x3d2 PUSH1 0xa0
0x3d4 PUSH1 0x2
0x3d6 EXP
0x3d7 SUB
0x3d8 SWAP3
0x3d9 DUP4
0x3da AND
0x3db OR
0x3dc SWAP1
0x3dd DUP2
0x3de SWAP1
0x3df SSTORE
0x3e0 AND
0x3e1 SWAP1
0x3e2 PUSH4 0x40c10f19
0x3e7 SWAP1
0x3e8 DUP6
0x3e9 SWAP1
0x3ea DUP5
0x3eb SWAP1
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef PUSH1 0x20
0x3f1 ADD
0x3f2 MSTORE
0x3f3 PUSH1 0x40
0x3f5 MLOAD
0x3f6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x414 PUSH4 0xffffffff
0x419 DUP6
0x41a AND
0x41b MUL
0x41c DUP2
0x41d MSTORE
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 SWAP1
0x427 SWAP3
0x428 AND
0x429 PUSH1 0x4
0x42b DUP4
0x42c ADD
0x42d MSTORE
0x42e PUSH1 0x24
0x430 DUP3
0x431 ADD
0x432 MSTORE
0x433 PUSH1 0x44
0x435 ADD
0x436 PUSH1 0x20
0x438 PUSH1 0x40
0x43a MLOAD
0x43b DUP1
0x43c DUP4
0x43d SUB
0x43e DUP2
0x43f PUSH1 0x0
0x441 DUP8
0x442 DUP1
0x443 EXTCODESIZE
0x444 ISZERO
0x445 ISZERO
0x446 PUSH2 0x44e
0x449 JUMPI
---
0x3ad: JUMPDEST 
0x3ae: V322 = 0x6
0x3b0: S[0x6] = S0
0x3b1: V323 = 0x0
0x3b4: V324 = S[0x0]
0x3b5: V325 = 0x1
0x3b8: V326 = S[0x1]
0x3b9: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ce: V328 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3cf: V329 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V326
0x3d0: V330 = 0x1
0x3d2: V331 = 0xa0
0x3d4: V332 = 0x2
0x3d6: V333 = EXP 0x2 0xa0
0x3d7: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3da: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x3db: V336 = OR V335 V329
0x3df: S[0x1] = V336
0x3e0: V337 = AND V336 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V338 = 0x40c10f19
0x3ec: V339 = 0x40
0x3ee: V340 = M[0x40]
0x3ef: V341 = 0x20
0x3f1: V342 = ADD 0x20 V340
0x3f2: M[V342] = 0x0
0x3f3: V343 = 0x40
0x3f5: V344 = M[0x40]
0x3f6: V345 = 0x100000000000000000000000000000000000000000000000000000000
0x414: V346 = 0xffffffff
0x41a: V347 = AND 0x40c10f19 0xffffffff
0x41b: V348 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x41d: M[V344] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x41e: V349 = 0x1
0x420: V350 = 0xa0
0x422: V351 = 0x2
0x424: V352 = EXP 0x2 0xa0
0x425: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x428: V354 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x429: V355 = 0x4
0x42c: V356 = ADD V344 0x4
0x42d: M[V356] = V354
0x42e: V357 = 0x24
0x431: V358 = ADD V344 0x24
0x432: M[V358] = S1
0x433: V359 = 0x44
0x435: V360 = ADD 0x44 V344
0x436: V361 = 0x20
0x438: V362 = 0x40
0x43a: V363 = M[0x40]
0x43d: V364 = SUB V360 V363
0x43f: V365 = 0x0
0x443: V366 = EXTCODESIZE V337
0x444: V367 = ISZERO V366
0x445: V368 = ISZERO V367
0x446: V369 = 0x44e
0x449: JUMPI 0x44e V368
---
Entry stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V337, 0x40c10f19, V360, 0x20, V363, V364, V363, 0x0, V337]
Exit stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, V337, 0x40c10f19, V360, 0x20, V363, V364, V363, 0x0, V337]

================================

Block 0x44a
[0x44a:0x44d]
---
Predecessors: [0x3ad]
Successors: []
---
0x44a PUSH1 0x0
0x44c DUP1
0x44d REVERT
---
0x44a: V370 = 0x0
0x44d: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8, S15, 0x0, S13, S12, S11, S10, S9, V337, 0x40c10f19, V360, 0x20, V363, V364, V363, 0x0, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S15, 0x0, S13, S12, S11, S10, S9, V337, 0x40c10f19, V360, 0x20, V363, V364, V363, 0x0, V337]

================================

Block 0x44e
[0x44e:0x45a]
---
Predecessors: [0x3ad]
Successors: [0x45b, 0x45f]
---
0x44e JUMPDEST
0x44f PUSH2 0x2c6
0x452 GAS
0x453 SUB
0x454 CALL
0x455 ISZERO
0x456 ISZERO
0x457 PUSH2 0x45f
0x45a JUMPI
---
0x44e: JUMPDEST 
0x44f: V371 = 0x2c6
0x452: V372 = GAS
0x453: V373 = SUB V372 0x2c6
0x454: V374 = CALL V373 V337 0x0 V363 V364 V363 0x20
0x455: V375 = ISZERO V374
0x456: V376 = ISZERO V375
0x457: V377 = 0x45f
0x45a: JUMPI 0x45f V376
---
Entry stack: [V10, 0xf8, S15, 0x0, S13, S12, S11, S10, S9, V337, 0x40c10f19, V360, 0x20, V363, V364, V363, 0x0, V337]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf8, S15, 0x0, S13, S12, S11, S10, S9, V337, 0x40c10f19, V360]

================================

Block 0x45b
[0x45b:0x45e]
---
Predecessors: [0x44e]
Successors: []
---
0x45b PUSH1 0x0
0x45d DUP1
0x45e REVERT
---
0x45b: V378 = 0x0
0x45e: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8, S9, 0x0, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S9, 0x0, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]

================================

Block 0x45f
[0x45f:0x4bf]
---
Predecessors: [0x44e]
Successors: [0x7cc]
---
0x45f JUMPDEST
0x460 POP
0x461 POP
0x462 POP
0x463 PUSH1 0x40
0x465 MLOAD
0x466 DUP1
0x467 MLOAD
0x468 SWAP1
0x469 POP
0x46a POP
0x46b DUP3
0x46c PUSH1 0x1
0x46e PUSH1 0xa0
0x470 PUSH1 0x2
0x472 EXP
0x473 SUB
0x474 AND
0x475 CALLER
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e AND
0x47f PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x4a0 DUP5
0x4a1 DUP5
0x4a2 PUSH1 0x40
0x4a4 MLOAD
0x4a5 SWAP2
0x4a6 DUP3
0x4a7 MSTORE
0x4a8 PUSH1 0x20
0x4aa DUP3
0x4ab ADD
0x4ac MSTORE
0x4ad PUSH1 0x40
0x4af SWAP1
0x4b0 DUP2
0x4b1 ADD
0x4b2 SWAP1
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 SWAP2
0x4b6 SUB
0x4b7 SWAP1
0x4b8 LOG3
0x4b9 PUSH2 0x4c0
0x4bc PUSH2 0x7cc
0x4bf JUMP
---
0x45f: JUMPDEST 
0x463: V379 = 0x40
0x465: V380 = M[0x40]
0x467: V381 = M[V380]
0x46c: V382 = 0x1
0x46e: V383 = 0xa0
0x470: V384 = 0x2
0x472: V385 = EXP 0x2 0xa0
0x473: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x474: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x475: V388 = CALLER
0x476: V389 = 0x1
0x478: V390 = 0xa0
0x47a: V391 = 0x2
0x47c: V392 = EXP 0x2 0xa0
0x47d: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x47f: V395 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x4a2: V396 = 0x40
0x4a4: V397 = M[0x40]
0x4a7: M[V397] = S4
0x4a8: V398 = 0x20
0x4ab: V399 = ADD V397 0x20
0x4ac: M[V399] = S3
0x4ad: V400 = 0x40
0x4b1: V401 = ADD 0x40 V397
0x4b3: V402 = M[0x40]
0x4b6: V403 = SUB V401 V402
0x4b8: LOG V402 V403 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V394 V387
0x4b9: V404 = 0x4c0
0x4bc: V405 = 0x7cc
0x4bf: JUMP 0x7cc
---
Entry stack: [V10, 0xf8, S9, 0x0, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x4c0]
Exit stack: [V10, 0xf8, S9, 0x0, S7, S6, S5, S4, S3, 0x4c0]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x558]
Successors: [0x4c1]
---
0x4c0 JUMPDEST
---
0x4c0: JUMPDEST 
---
Entry stack: [V10, 0xf8, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x4c1
[0x4c1:0x4c5]
---
Predecessors: [0x4c0]
Successors: [0xf8, 0x375]
---
0x4c1 JUMPDEST
0x4c2 POP
0x4c3 POP
0x4c4 POP
0x4c5 JUMP
---
0x4c1: JUMPDEST 
0x4c5: JUMP S3
---
Entry stack: [V10, 0xf8, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xf8, S6, 0x0, S4]

================================

Block 0x4c6
[0x4c6:0x4cb]
---
Predecessors: [0x106]
Successors: [0x10e]
---
0x4c6 JUMPDEST
0x4c7 PUSH1 0x5
0x4c9 SLOAD
0x4ca DUP2
0x4cb JUMP
---
0x4c6: JUMPDEST 
0x4c7: V406 = 0x5
0x4c9: V407 = S[0x5]
0x4cb: JUMP 0x10e
---
Entry stack: [V10, 0x10e]
Stack pops: 1
Stack additions: [S0, V407]
Exit stack: [V10, 0x10e, V407]

================================

Block 0x4cc
[0x4cc:0x4d1]
---
Predecessors: [0x12b]
Successors: [0x10e]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x3
0x4cf SLOAD
0x4d0 DUP2
0x4d1 JUMP
---
0x4cc: JUMPDEST 
0x4cd: V408 = 0x3
0x4cf: V409 = S[0x3]
0x4d1: JUMP 0x10e
---
Entry stack: [V10, 0x10e]
Stack pops: 1
Stack additions: [S0, V409]
Exit stack: [V10, 0x10e, V409]

================================

Block 0x4d2
[0x4d2:0x4d7]
---
Predecessors: [0x150]
Successors: [0x10e]
---
0x4d2 JUMPDEST
0x4d3 PUSH1 0x7
0x4d5 SLOAD
0x4d6 DUP2
0x4d7 JUMP
---
0x4d2: JUMPDEST 
0x4d3: V410 = 0x7
0x4d5: V411 = S[0x7]
0x4d7: JUMP 0x10e
---
Entry stack: [V10, 0x10e]
Stack pops: 1
Stack additions: [S0, V411]
Exit stack: [V10, 0x10e, V411]

================================

Block 0x4d8
[0x4d8:0x4ee]
---
Predecessors: [0x175]
Successors: [0x4ef, 0x4f3]
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x8
0x4db SLOAD
0x4dc CALLER
0x4dd PUSH1 0x1
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x2
0x4e3 EXP
0x4e4 SUB
0x4e5 SWAP1
0x4e6 DUP2
0x4e7 AND
0x4e8 SWAP2
0x4e9 AND
0x4ea EQ
0x4eb PUSH2 0x4f3
0x4ee JUMPI
---
0x4d8: JUMPDEST 
0x4d9: V412 = 0x8
0x4db: V413 = S[0x8]
0x4dc: V414 = CALLER
0x4dd: V415 = 0x1
0x4df: V416 = 0xa0
0x4e1: V417 = 0x2
0x4e3: V418 = EXP 0x2 0xa0
0x4e4: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x4e9: V421 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V422 = EQ V421 V420
0x4eb: V423 = 0x4f3
0x4ee: JUMPI 0x4f3 V422
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x4ef
[0x4ef:0x4f2]
---
Predecessors: [0x4d8]
Successors: []
---
0x4ef PUSH1 0x0
0x4f1 DUP1
0x4f2 REVERT
---
0x4ef: V424 = 0x0
0x4f2: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x4f3
[0x4f3:0x506]
---
Predecessors: [0x4d8]
Successors: [0x507, 0x50b]
---
0x4f3 JUMPDEST
0x4f4 PUSH1 0x8
0x4f6 SLOAD
0x4f7 PUSH1 0xa0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc SWAP1
0x4fd DIV
0x4fe PUSH1 0xff
0x500 AND
0x501 ISZERO
0x502 ISZERO
0x503 PUSH2 0x50b
0x506 JUMPI
---
0x4f3: JUMPDEST 
0x4f4: V425 = 0x8
0x4f6: V426 = S[0x8]
0x4f7: V427 = 0xa0
0x4f9: V428 = 0x2
0x4fb: V429 = EXP 0x2 0xa0
0x4fd: V430 = DIV V426 0x10000000000000000000000000000000000000000
0x4fe: V431 = 0xff
0x500: V432 = AND 0xff V430
0x501: V433 = ISZERO V432
0x502: V434 = ISZERO V433
0x503: V435 = 0x50b
0x506: JUMPI 0x50b V434
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x507
[0x507:0x50a]
---
Predecessors: [0x4f3]
Successors: []
---
0x507 PUSH1 0x0
0x509 DUP1
0x50a REVERT
---
0x507: V436 = 0x0
0x50a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x50b
[0x50b:0x555]
---
Predecessors: [0x4f3]
Successors: [0x556]
---
0x50b JUMPDEST
0x50c PUSH1 0x8
0x50e DUP1
0x50f SLOAD
0x510 PUSH21 0xff0000000000000000000000000000000000000000
0x526 NOT
0x527 AND
0x528 SWAP1
0x529 SSTORE
0x52a PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x54b PUSH1 0x40
0x54d MLOAD
0x54e PUSH1 0x40
0x550 MLOAD
0x551 DUP1
0x552 SWAP2
0x553 SUB
0x554 SWAP1
0x555 LOG1
---
0x50b: JUMPDEST 
0x50c: V437 = 0x8
0x50f: V438 = S[0x8]
0x510: V439 = 0xff0000000000000000000000000000000000000000
0x526: V440 = NOT 0xff0000000000000000000000000000000000000000
0x527: V441 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V438
0x529: S[0x8] = V441
0x52a: V442 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x54b: V443 = 0x40
0x54d: V444 = M[0x40]
0x54e: V445 = 0x40
0x550: V446 = M[0x40]
0x553: V447 = SUB V444 V446
0x555: LOG V446 V447 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x556
[0x556:0x556]
---
Predecessors: [0x50b, 0x7cc]
Successors: [0x557]
---
0x556 JUMPDEST
---
0x556: JUMPDEST 
---
Entry stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, {0xf8, 0x4c0}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, {0xf8, 0x4c0}]

================================

Block 0x557
[0x557:0x557]
---
Predecessors: [0x556]
Successors: [0x558]
---
0x557 JUMPDEST
---
0x557: JUMPDEST 
---
Entry stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, {0xf8, 0x4c0}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, {0xf8, 0x4c0}]

================================

Block 0x558
[0x558:0x559]
---
Predecessors: [0x557]
Successors: [0xf8, 0x4c0]
---
0x558 JUMPDEST
0x559 JUMP
---
0x558: JUMPDEST 
0x559: JUMP {0xf8, 0x4c0}
---
Entry stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, {0xf8, 0x4c0}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1]

================================

Block 0x55a
[0x55a:0x55f]
---
Predecessors: [0x18a]
Successors: [0x10e]
---
0x55a JUMPDEST
0x55b PUSH1 0x6
0x55d SLOAD
0x55e DUP2
0x55f JUMP
---
0x55a: JUMPDEST 
0x55b: V448 = 0x6
0x55d: V449 = S[0x6]
0x55f: JUMP 0x10e
---
Entry stack: [V10, 0x10e]
Stack pops: 1
Stack additions: [S0, V449]
Exit stack: [V10, 0x10e, V449]

================================

Block 0x560
[0x560:0x56e]
---
Predecessors: [0x1af]
Successors: [0x1b7]
---
0x560 JUMPDEST
0x561 PUSH1 0x4
0x563 SLOAD
0x564 PUSH1 0x1
0x566 PUSH1 0xa0
0x568 PUSH1 0x2
0x56a EXP
0x56b SUB
0x56c AND
0x56d DUP2
0x56e JUMP
---
0x560: JUMPDEST 
0x561: V450 = 0x4
0x563: V451 = S[0x4]
0x564: V452 = 0x1
0x566: V453 = 0xa0
0x568: V454 = 0x2
0x56a: V455 = EXP 0x2 0xa0
0x56b: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56c: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x56e: JUMP 0x1b7
---
Entry stack: [V10, 0x1b7]
Stack pops: 1
Stack additions: [S0, V457]
Exit stack: [V10, 0x1b7, V457]

================================

Block 0x56f
[0x56f:0x57e]
---
Predecessors: [0x1de]
Successors: [0x1e6]
---
0x56f JUMPDEST
0x570 PUSH1 0x8
0x572 SLOAD
0x573 PUSH1 0xa0
0x575 PUSH1 0x2
0x577 EXP
0x578 SWAP1
0x579 DIV
0x57a PUSH1 0xff
0x57c AND
0x57d DUP2
0x57e JUMP
---
0x56f: JUMPDEST 
0x570: V458 = 0x8
0x572: V459 = S[0x8]
0x573: V460 = 0xa0
0x575: V461 = 0x2
0x577: V462 = EXP 0x2 0xa0
0x579: V463 = DIV V459 0x10000000000000000000000000000000000000000
0x57a: V464 = 0xff
0x57c: V465 = AND 0xff V463
0x57e: JUMP 0x1e6
---
Entry stack: [V10, 0x1e6]
Stack pops: 1
Stack additions: [S0, V465]
Exit stack: [V10, 0x1e6, V465]

================================

Block 0x57f
[0x57f:0x58d]
---
Predecessors: [0x205]
Successors: [0x1b7]
---
0x57f JUMPDEST
0x580 PUSH1 0x0
0x582 SLOAD
0x583 PUSH1 0x1
0x585 PUSH1 0xa0
0x587 PUSH1 0x2
0x589 EXP
0x58a SUB
0x58b AND
0x58c DUP2
0x58d JUMP
---
0x57f: JUMPDEST 
0x580: V466 = 0x0
0x582: V467 = S[0x0]
0x583: V468 = 0x1
0x585: V469 = 0xa0
0x587: V470 = 0x2
0x589: V471 = EXP 0x2 0xa0
0x58a: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58b: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x58d: JUMP 0x1b7
---
Entry stack: [V10, 0x1b7]
Stack pops: 1
Stack additions: [S0, V473]
Exit stack: [V10, 0x1b7, V473]

================================

Block 0x58e
[0x58e:0x593]
---
Predecessors: [0x234]
Successors: [0x10e]
---
0x58e JUMPDEST
0x58f PUSH1 0x2
0x591 SLOAD
0x592 DUP2
0x593 JUMP
---
0x58e: JUMPDEST 
0x58f: V474 = 0x2
0x591: V475 = S[0x2]
0x593: JUMP 0x10e
---
Entry stack: [V10, 0x10e]
Stack pops: 1
Stack additions: [S0, V475]
Exit stack: [V10, 0x10e, V475]

================================

Block 0x594
[0x594:0x5aa]
---
Predecessors: [0x259]
Successors: [0x5ab, 0x5af]
---
0x594 JUMPDEST
0x595 PUSH1 0x8
0x597 SLOAD
0x598 CALLER
0x599 PUSH1 0x1
0x59b PUSH1 0xa0
0x59d PUSH1 0x2
0x59f EXP
0x5a0 SUB
0x5a1 SWAP1
0x5a2 DUP2
0x5a3 AND
0x5a4 SWAP2
0x5a5 AND
0x5a6 EQ
0x5a7 PUSH2 0x5af
0x5aa JUMPI
---
0x594: JUMPDEST 
0x595: V476 = 0x8
0x597: V477 = S[0x8]
0x598: V478 = CALLER
0x599: V479 = 0x1
0x59b: V480 = 0xa0
0x59d: V481 = 0x2
0x59f: V482 = EXP 0x2 0xa0
0x5a0: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x5a5: V485 = AND V477 0xffffffffffffffffffffffffffffffffffffffff
0x5a6: V486 = EQ V485 V484
0x5a7: V487 = 0x5af
0x5aa: JUMPI 0x5af V486
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x5ab
[0x5ab:0x5ae]
---
Predecessors: [0x594]
Successors: []
---
0x5ab PUSH1 0x0
0x5ad DUP1
0x5ae REVERT
---
0x5ab: V488 = 0x0
0x5ae: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x5af
[0x5af:0x5bc]
---
Predecessors: [0x594]
Successors: []
---
0x5af JUMPDEST
0x5b0 PUSH1 0x8
0x5b2 SLOAD
0x5b3 PUSH1 0x1
0x5b5 PUSH1 0xa0
0x5b7 PUSH1 0x2
0x5b9 EXP
0x5ba SUB
0x5bb AND
0x5bc SELFDESTRUCT
---
0x5af: JUMPDEST 
0x5b0: V489 = 0x8
0x5b2: V490 = S[0x8]
0x5b3: V491 = 0x1
0x5b5: V492 = 0xa0
0x5b7: V493 = 0x2
0x5b9: V494 = EXP 0x2 0xa0
0x5ba: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bb: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x5bc: SELFDESTRUCT V496
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x5bd
[0x5bd:0x5bd]
---
Predecessors: []
Successors: [0x5be]
---
0x5bd JUMPDEST
---
0x5bd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5be
[0x5be:0x5bf]
---
Predecessors: [0x5bd]
Successors: []
Has unresolved jump.
---
0x5be JUMPDEST
0x5bf JUMP
---
0x5be: JUMPDEST 
0x5bf: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5c0
[0x5c0:0x5d6]
---
Predecessors: [0x26e]
Successors: [0x5d7, 0x5db]
---
0x5c0 JUMPDEST
0x5c1 PUSH1 0x8
0x5c3 SLOAD
0x5c4 CALLER
0x5c5 PUSH1 0x1
0x5c7 PUSH1 0xa0
0x5c9 PUSH1 0x2
0x5cb EXP
0x5cc SUB
0x5cd SWAP1
0x5ce DUP2
0x5cf AND
0x5d0 SWAP2
0x5d1 AND
0x5d2 EQ
0x5d3 PUSH2 0x5db
0x5d6 JUMPI
---
0x5c0: JUMPDEST 
0x5c1: V497 = 0x8
0x5c3: V498 = S[0x8]
0x5c4: V499 = CALLER
0x5c5: V500 = 0x1
0x5c7: V501 = 0xa0
0x5c9: V502 = 0x2
0x5cb: V503 = EXP 0x2 0xa0
0x5cc: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cf: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x5d1: V506 = AND V498 0xffffffffffffffffffffffffffffffffffffffff
0x5d2: V507 = EQ V506 V505
0x5d3: V508 = 0x5db
0x5d6: JUMPI 0x5db V507
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x5d7
[0x5d7:0x5da]
---
Predecessors: [0x5c0]
Successors: []
---
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da REVERT
---
0x5d7: V509 = 0x0
0x5da: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x5db
[0x5db:0x5ed]
---
Predecessors: [0x5c0]
Successors: [0x5ee, 0x5f2]
---
0x5db JUMPDEST
0x5dc PUSH1 0x8
0x5de SLOAD
0x5df PUSH1 0xa0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 SWAP1
0x5e5 DIV
0x5e6 PUSH1 0xff
0x5e8 AND
0x5e9 ISZERO
0x5ea PUSH2 0x5f2
0x5ed JUMPI
---
0x5db: JUMPDEST 
0x5dc: V510 = 0x8
0x5de: V511 = S[0x8]
0x5df: V512 = 0xa0
0x5e1: V513 = 0x2
0x5e3: V514 = EXP 0x2 0xa0
0x5e5: V515 = DIV V511 0x10000000000000000000000000000000000000000
0x5e6: V516 = 0xff
0x5e8: V517 = AND 0xff V515
0x5e9: V518 = ISZERO V517
0x5ea: V519 = 0x5f2
0x5ed: JUMPI 0x5f2 V518
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x5ee
[0x5ee:0x5f1]
---
Predecessors: [0x5db]
Successors: []
---
0x5ee PUSH1 0x0
0x5f0 DUP1
0x5f1 REVERT
---
0x5ee: V520 = 0x0
0x5f1: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x5f2
[0x5f2:0x642]
---
Predecessors: [0x5db]
Successors: [0x643]
---
0x5f2 JUMPDEST
0x5f3 PUSH1 0x8
0x5f5 DUP1
0x5f6 SLOAD
0x5f7 PUSH21 0xff0000000000000000000000000000000000000000
0x60d NOT
0x60e AND
0x60f PUSH1 0xa0
0x611 PUSH1 0x2
0x613 EXP
0x614 OR
0x615 SWAP1
0x616 SSTORE
0x617 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x638 PUSH1 0x40
0x63a MLOAD
0x63b PUSH1 0x40
0x63d MLOAD
0x63e DUP1
0x63f SWAP2
0x640 SUB
0x641 SWAP1
0x642 LOG1
---
0x5f2: JUMPDEST 
0x5f3: V521 = 0x8
0x5f6: V522 = S[0x8]
0x5f7: V523 = 0xff0000000000000000000000000000000000000000
0x60d: V524 = NOT 0xff0000000000000000000000000000000000000000
0x60e: V525 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V522
0x60f: V526 = 0xa0
0x611: V527 = 0x2
0x613: V528 = EXP 0x2 0xa0
0x614: V529 = OR 0x10000000000000000000000000000000000000000 V525
0x616: S[0x8] = V529
0x617: V530 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x638: V531 = 0x40
0x63a: V532 = M[0x40]
0x63b: V533 = 0x40
0x63d: V534 = M[0x40]
0x640: V535 = SUB V532 V534
0x642: LOG V534 V535 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x643
[0x643:0x643]
---
Predecessors: [0x5f2]
Successors: [0x644]
---
0x643 JUMPDEST
---
0x643: JUMPDEST 
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x644
[0x644:0x644]
---
Predecessors: [0x643]
Successors: [0x645]
---
0x644 JUMPDEST
---
0x644: JUMPDEST 
---
Entry stack: [V10, 0xf8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x645
[0x645:0x646]
---
Predecessors: [0x644]
Successors: [0xf8]
---
0x645 JUMPDEST
0x646 JUMP
---
0x645: JUMPDEST 
0x646: JUMP 0xf8
---
Entry stack: [V10, 0xf8]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x647
[0x647:0x655]
---
Predecessors: [0x283]
Successors: [0x1b7]
---
0x647 JUMPDEST
0x648 PUSH1 0x8
0x64a SLOAD
0x64b PUSH1 0x1
0x64d PUSH1 0xa0
0x64f PUSH1 0x2
0x651 EXP
0x652 SUB
0x653 AND
0x654 DUP2
0x655 JUMP
---
0x647: JUMPDEST 
0x648: V536 = 0x8
0x64a: V537 = S[0x8]
0x64b: V538 = 0x1
0x64d: V539 = 0xa0
0x64f: V540 = 0x2
0x651: V541 = EXP 0x2 0xa0
0x652: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x653: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x655: JUMP 0x1b7
---
Entry stack: [V10, 0x1b7]
Stack pops: 1
Stack additions: [S0, V543]
Exit stack: [V10, 0x1b7, V543]

================================

Block 0x656
[0x656:0x664]
---
Predecessors: [0x2b2]
Successors: [0x1b7]
---
0x656 JUMPDEST
0x657 PUSH1 0x1
0x659 SLOAD
0x65a PUSH1 0x1
0x65c PUSH1 0xa0
0x65e PUSH1 0x2
0x660 EXP
0x661 SUB
0x662 AND
0x663 DUP2
0x664 JUMP
---
0x656: JUMPDEST 
0x657: V544 = 0x1
0x659: V545 = S[0x1]
0x65a: V546 = 0x1
0x65c: V547 = 0xa0
0x65e: V548 = 0x2
0x660: V549 = EXP 0x2 0xa0
0x661: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x662: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x664: JUMP 0x1b7
---
Entry stack: [V10, 0x1b7]
Stack pops: 1
Stack additions: [S0, V551]
Exit stack: [V10, 0x1b7, V551]

================================

Block 0x665
[0x665:0x678]
---
Predecessors: [0x2f7]
Successors: [0x803]
---
0x665 JUMPDEST
0x666 PUSH1 0x7
0x668 SLOAD
0x669 PUSH1 0x6
0x66b SLOAD
0x66c PUSH1 0x0
0x66e SWAP2
0x66f SWAP1
0x670 LT
0x671 ISZERO
0x672 PUSH2 0x679
0x675 PUSH2 0x803
0x678 JUMP
---
0x665: JUMPDEST 
0x666: V552 = 0x7
0x668: V553 = S[0x7]
0x669: V554 = 0x6
0x66b: V555 = S[0x6]
0x66c: V556 = 0x0
0x670: V557 = LT V555 V553
0x671: V558 = ISZERO V557
0x672: V559 = 0x679
0x675: V560 = 0x803
0x678: JUMP 0x803
---
Entry stack: [V10, 0x1e6]
Stack pops: 0
Stack additions: [0x0, V558, 0x679]
Exit stack: [V10, 0x1e6, 0x0, V558, 0x679]

================================

Block 0x679
[0x679:0x67e]
---
Predecessors: [0x809]
Successors: [0x67f, 0x681]
---
0x679 JUMPDEST
0x67a DUP1
0x67b PUSH2 0x681
0x67e JUMPI
---
0x679: JUMPDEST 
0x67b: V561 = 0x681
0x67e: JUMPI 0x681 V690
---
Entry stack: [V10, 0x1e6, 0x0, V558, V690]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e6, 0x0, V558, V690]

================================

Block 0x67f
[0x67f:0x680]
---
Predecessors: [0x679]
Successors: [0x681]
---
0x67f POP
0x680 DUP1
---
0x67f: NOP 
---
Entry stack: [V10, 0x1e6, 0x0, V558, V690]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V10, 0x1e6, 0x0, V558, V558]

================================

Block 0x681
[0x681:0x683]
---
Predecessors: [0x679, 0x67f, 0x773]
Successors: [0x684]
---
0x681 JUMPDEST
0x682 SWAP2
0x683 POP
---
0x681: JUMPDEST 
---
Entry stack: [V10, 0xf8, S6, 0x0, S4, {0x1e6, 0x375}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V10, 0xf8, S6, 0x0, S4, {0x1e6, 0x375}, S0, S1]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x681]
Successors: [0xf8, 0x1e6, 0x375]
---
0x684 JUMPDEST
0x685 POP
0x686 SWAP1
0x687 JUMP
---
0x684: JUMPDEST 
0x687: JUMP {0x1e6, 0x375}
---
Entry stack: [V10, 0xf8, S5, 0x0, S3, {0x1e6, 0x375}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0xf8, S5, 0x0, S3, S1]

================================

Block 0x688
[0x688:0x69e]
---
Predecessors: [0x31e]
Successors: [0x69f, 0x6a3]
---
0x688 JUMPDEST
0x689 PUSH1 0x8
0x68b SLOAD
0x68c CALLER
0x68d PUSH1 0x1
0x68f PUSH1 0xa0
0x691 PUSH1 0x2
0x693 EXP
0x694 SUB
0x695 SWAP1
0x696 DUP2
0x697 AND
0x698 SWAP2
0x699 AND
0x69a EQ
0x69b PUSH2 0x6a3
0x69e JUMPI
---
0x688: JUMPDEST 
0x689: V562 = 0x8
0x68b: V563 = S[0x8]
0x68c: V564 = CALLER
0x68d: V565 = 0x1
0x68f: V566 = 0xa0
0x691: V567 = 0x2
0x693: V568 = EXP 0x2 0xa0
0x694: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x697: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x699: V571 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x69a: V572 = EQ V571 V570
0x69b: V573 = 0x6a3
0x69e: JUMPI 0x6a3 V572
---
Entry stack: [V10, 0xf8, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, V276]

================================

Block 0x69f
[0x69f:0x6a2]
---
Predecessors: [0x688]
Successors: []
---
0x69f PUSH1 0x0
0x6a1 DUP1
0x6a2 REVERT
---
0x69f: V574 = 0x0
0x6a2: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, V276]

================================

Block 0x6a3
[0x6a3:0x6b3]
---
Predecessors: [0x688]
Successors: [0x6b4, 0x6b8]
---
0x6a3 JUMPDEST
0x6a4 PUSH1 0x1
0x6a6 PUSH1 0xa0
0x6a8 PUSH1 0x2
0x6aa EXP
0x6ab SUB
0x6ac DUP2
0x6ad AND
0x6ae ISZERO
0x6af ISZERO
0x6b0 PUSH2 0x6b8
0x6b3 JUMPI
---
0x6a3: JUMPDEST 
0x6a4: V575 = 0x1
0x6a6: V576 = 0xa0
0x6a8: V577 = 0x2
0x6aa: V578 = EXP 0x2 0xa0
0x6ab: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ad: V580 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x6ae: V581 = ISZERO V580
0x6af: V582 = ISZERO V581
0x6b0: V583 = 0x6b8
0x6b3: JUMPI 0x6b8 V582
---
Entry stack: [V10, 0xf8, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xf8, V276]

================================

Block 0x6b4
[0x6b4:0x6b7]
---
Predecessors: [0x6a3]
Successors: []
---
0x6b4 PUSH1 0x0
0x6b6 DUP1
0x6b7 REVERT
---
0x6b4: V584 = 0x0
0x6b7: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, V276]

================================

Block 0x6b8
[0x6b8:0x71c]
---
Predecessors: [0x6a3]
Successors: [0x71d]
---
0x6b8 JUMPDEST
0x6b9 PUSH1 0x8
0x6bb SLOAD
0x6bc PUSH1 0x1
0x6be PUSH1 0xa0
0x6c0 PUSH1 0x2
0x6c2 EXP
0x6c3 SUB
0x6c4 DUP1
0x6c5 DUP4
0x6c6 AND
0x6c7 SWAP2
0x6c8 AND
0x6c9 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6ea PUSH1 0x40
0x6ec MLOAD
0x6ed PUSH1 0x40
0x6ef MLOAD
0x6f0 DUP1
0x6f1 SWAP2
0x6f2 SUB
0x6f3 SWAP1
0x6f4 LOG3
0x6f5 PUSH1 0x8
0x6f7 DUP1
0x6f8 SLOAD
0x6f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70e NOT
0x70f AND
0x710 PUSH1 0x1
0x712 PUSH1 0xa0
0x714 PUSH1 0x2
0x716 EXP
0x717 SUB
0x718 DUP4
0x719 AND
0x71a OR
0x71b SWAP1
0x71c SSTORE
---
0x6b8: JUMPDEST 
0x6b9: V585 = 0x8
0x6bb: V586 = S[0x8]
0x6bc: V587 = 0x1
0x6be: V588 = 0xa0
0x6c0: V589 = 0x2
0x6c2: V590 = EXP 0x2 0xa0
0x6c3: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c6: V592 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x6c8: V593 = AND V586 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V594 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6ea: V595 = 0x40
0x6ec: V596 = M[0x40]
0x6ed: V597 = 0x40
0x6ef: V598 = M[0x40]
0x6f2: V599 = SUB V596 V598
0x6f4: LOG V598 V599 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V593 V592
0x6f5: V600 = 0x8
0x6f8: V601 = S[0x8]
0x6f9: V602 = 0xffffffffffffffffffffffffffffffffffffffff
0x70e: V603 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x70f: V604 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V601
0x710: V605 = 0x1
0x712: V606 = 0xa0
0x714: V607 = 0x2
0x716: V608 = EXP 0x2 0xa0
0x717: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x719: V610 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x71a: V611 = OR V610 V604
0x71c: S[0x8] = V611
---
Entry stack: [V10, 0xf8, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xf8, V276]

================================

Block 0x71d
[0x71d:0x71d]
---
Predecessors: [0x6b8]
Successors: [0x71e]
---
0x71d JUMPDEST
---
0x71d: JUMPDEST 
---
Entry stack: [V10, 0xf8, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, V276]

================================

Block 0x71e
[0x71e:0x720]
---
Predecessors: [0x71d]
Successors: [0xf8]
---
0x71e JUMPDEST
0x71f POP
0x720 JUMP
---
0x71e: JUMPDEST 
0x720: JUMP 0xf8
---
Entry stack: [V10, 0xf8, V276]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x721
[0x721:0x737]
---
Predecessors: [0x33f]
Successors: [0x738, 0x73c]
---
0x721 JUMPDEST
0x722 PUSH1 0x8
0x724 SLOAD
0x725 CALLER
0x726 PUSH1 0x1
0x728 PUSH1 0xa0
0x72a PUSH1 0x2
0x72c EXP
0x72d SUB
0x72e SWAP1
0x72f DUP2
0x730 AND
0x731 SWAP2
0x732 AND
0x733 EQ
0x734 PUSH2 0x73c
0x737 JUMPI
---
0x721: JUMPDEST 
0x722: V612 = 0x8
0x724: V613 = S[0x8]
0x725: V614 = CALLER
0x726: V615 = 0x1
0x728: V616 = 0xa0
0x72a: V617 = 0x2
0x72c: V618 = EXP 0x2 0xa0
0x72d: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x730: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x732: V621 = AND V613 0xffffffffffffffffffffffffffffffffffffffff
0x733: V622 = EQ V621 V620
0x734: V623 = 0x73c
0x737: JUMPI 0x73c V622
---
Entry stack: [V10, 0xf8, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, V290]

================================

Block 0x738
[0x738:0x73b]
---
Predecessors: [0x721]
Successors: []
---
0x738 PUSH1 0x0
0x73a DUP1
0x73b REVERT
---
0x738: V624 = 0x0
0x73b: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, V290]

================================

Block 0x73c
[0x73c:0x747]
---
Predecessors: [0x721]
Successors: []
---
0x73c JUMPDEST
0x73d DUP1
0x73e PUSH1 0x1
0x740 PUSH1 0xa0
0x742 PUSH1 0x2
0x744 EXP
0x745 SUB
0x746 AND
0x747 SELFDESTRUCT
---
0x73c: JUMPDEST 
0x73e: V625 = 0x1
0x740: V626 = 0xa0
0x742: V627 = 0x2
0x744: V628 = EXP 0x2 0xa0
0x745: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x746: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x747: SELFDESTRUCT V630
---
Entry stack: [V10, 0xf8, V290]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xf8, V290]

================================

Block 0x748
[0x748:0x748]
---
Predecessors: []
Successors: [0x749]
---
0x748 JUMPDEST
---
0x748: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x749
[0x749:0x74b]
---
Predecessors: [0x748]
Successors: []
Has unresolved jump.
---
0x749 JUMPDEST
0x74a POP
0x74b JUMP
---
0x749: JUMPDEST 
0x74b: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x74c
[0x74c:0x766]
---
Predecessors: [0x36d]
Successors: [0x7b2]
---
0x74c JUMPDEST
0x74d PUSH1 0x0
0x74f DUP1
0x750 PUSH1 0x7
0x752 SLOAD
0x753 PUSH2 0x767
0x756 CALLVALUE
0x757 PUSH1 0x6
0x759 SLOAD
0x75a PUSH2 0x7b2
0x75d SWAP1
0x75e SWAP2
0x75f SWAP1
0x760 PUSH4 0xffffffff
0x765 AND
0x766 JUMP
---
0x74c: JUMPDEST 
0x74d: V631 = 0x0
0x750: V632 = 0x7
0x752: V633 = S[0x7]
0x753: V634 = 0x767
0x756: V635 = CALLVALUE
0x757: V636 = 0x6
0x759: V637 = S[0x6]
0x75a: V638 = 0x7b2
0x760: V639 = 0xffffffff
0x765: V640 = AND 0xffffffff 0x7b2
0x766: JUMP 0x7b2
---
Entry stack: [V10, 0xf8, S3, 0x0, 0x0, 0x375]
Stack pops: 0
Stack additions: [0x0, 0x0, V633, 0x767, V637, V635]
Exit stack: [V10, 0xf8, S3, 0x0, 0x0, 0x375, 0x0, 0x0, V633, 0x767, V637, V635]

================================

Block 0x767
[0x767:0x772]
---
Predecessors: [0x7ab]
Successors: [0x80c]
---
0x767 JUMPDEST
0x768 GT
0x769 ISZERO
0x76a SWAP1
0x76b POP
0x76c PUSH2 0x773
0x76f PUSH2 0x80c
0x772 JUMP
---
0x767: JUMPDEST 
0x768: V641 = GT S0 S1
0x769: V642 = ISZERO V641
0x76c: V643 = 0x773
0x76f: V644 = 0x80c
0x772: JUMP 0x80c
---
Entry stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V642, 0x773]
Exit stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, V642, 0x773]

================================

Block 0x773
[0x773:0x779]
---
Predecessors: [0x838]
Successors: [0x681, 0x77a]
---
0x773 JUMPDEST
0x774 DUP1
0x775 ISZERO
0x776 PUSH2 0x681
0x779 JUMPI
---
0x773: JUMPDEST 
0x775: V645 = ISZERO S0
0x776: V646 = 0x681
0x779: JUMPI 0x681 V645
---
Entry stack: [V10, 0xf8, S6, 0x0, 0x0, 0x375, 0x0, V642, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xf8, S6, 0x0, 0x0, 0x375, 0x0, V642, S0]

================================

Block 0x77a
[0x77a:0x77b]
---
Predecessors: [0x773]
Successors: [0x77c]
---
0x77a POP
0x77b DUP1
---
0x77a: NOP 
---
Entry stack: [V10, 0xf8, S6, 0x0, 0x0, 0x375, 0x0, V642, S0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V10, 0xf8, S6, 0x0, 0x0, 0x375, 0x0, V642, V642]

================================

Block 0x77c
[0x77c:0x77e]
---
Predecessors: [0x77a]
Successors: [0x77f]
---
0x77c JUMPDEST
0x77d SWAP2
0x77e POP
---
0x77c: JUMPDEST 
---
Entry stack: [V10, 0xf8, S6, 0x0, 0x0, 0x375, 0x0, V642, V642]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V10, 0xf8, S6, 0x0, 0x0, 0x375, V642, V642]

================================

Block 0x77f
[0x77f:0x782]
---
Predecessors: [0x77c]
Successors: [0xf8, 0x375]
---
0x77f JUMPDEST
0x780 POP
0x781 SWAP1
0x782 JUMP
---
0x77f: JUMPDEST 
0x782: JUMP 0x375
---
Entry stack: [V10, 0xf8, S5, 0x0, 0x0, 0x375, V642, V642]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0xf8, S5, 0x0, 0x0, V642]

================================

Block 0x783
[0x783:0x78f]
---
Predecessors: [0x380]
Successors: [0x790, 0x79f]
---
0x783 JUMPDEST
0x784 PUSH1 0x0
0x786 DUP3
0x787 DUP3
0x788 MUL
0x789 DUP4
0x78a ISZERO
0x78b DUP1
0x78c PUSH2 0x79f
0x78f JUMPI
---
0x783: JUMPDEST 
0x784: V647 = 0x0
0x788: V648 = MUL V310 V311
0x78a: V649 = ISZERO V311
0x78c: V650 = 0x79f
0x78f: JUMPI 0x79f V649
---
Entry stack: [V10, S6, S5, V311, S3, 0x397, V311, V310]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V648, V649]
Exit stack: [V10, S6, S5, V311, S3, 0x397, V311, V310, 0x0, V648, V649]

================================

Block 0x790
[0x790:0x79a]
---
Predecessors: [0x783]
Successors: [0x79b, 0x79c]
---
0x790 POP
0x791 DUP3
0x792 DUP5
0x793 DUP3
0x794 DUP2
0x795 ISZERO
0x796 ISZERO
0x797 PUSH2 0x79c
0x79a JUMPI
---
0x795: V651 = ISZERO V311
0x796: V652 = ISZERO V651
0x797: V653 = 0x79c
0x79a: JUMPI 0x79c V652
---
Entry stack: [V10, S9, S8, V311, S6, 0x397, V311, V310, 0x0, V648, V649]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V10, S9, S8, V311, S6, 0x397, V311, V310, 0x0, V648, V310, V311, V648]

================================

Block 0x79b
[0x79b:0x79b]
---
Predecessors: [0x790]
Successors: []
---
0x79b INVALID
---
0x79b: INVALID 
---
Entry stack: [V10, S11, S10, V311, S8, 0x397, V311, V310, 0x0, V648, V310, V311, V648]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, S10, V311, S8, 0x397, V311, V310, 0x0, V648, V310, V311, V648]

================================

Block 0x79c
[0x79c:0x79e]
---
Predecessors: [0x790]
Successors: [0x79f]
---
0x79c JUMPDEST
0x79d DIV
0x79e EQ
---
0x79c: JUMPDEST 
0x79d: V654 = DIV V648 V311
0x79e: V655 = EQ V654 V310
---
Entry stack: [V10, S11, S10, V311, S8, 0x397, V311, V310, 0x0, V648, V310, V311, V648]
Stack pops: 3
Stack additions: [V655]
Exit stack: [V10, S11, S10, V311, S8, 0x397, V311, V310, 0x0, V648, V655]

================================

Block 0x79f
[0x79f:0x7a5]
---
Predecessors: [0x783, 0x79c]
Successors: [0x7a6, 0x7a7]
---
0x79f JUMPDEST
0x7a0 ISZERO
0x7a1 ISZERO
0x7a2 PUSH2 0x7a7
0x7a5 JUMPI
---
0x79f: JUMPDEST 
0x7a0: V656 = ISZERO S0
0x7a1: V657 = ISZERO V656
0x7a2: V658 = 0x7a7
0x7a5: JUMPI 0x7a7 V657
---
Entry stack: [V10, S9, S8, V311, S6, 0x397, V311, V310, 0x0, V648, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S9, S8, V311, S6, 0x397, V311, V310, 0x0, V648]

================================

Block 0x7a6
[0x7a6:0x7a6]
---
Predecessors: [0x79f]
Successors: []
---
0x7a6 INVALID
---
0x7a6: INVALID 
---
Entry stack: [V10, S8, S7, V311, S5, 0x397, V311, V310, 0x0, V648]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, V311, S5, 0x397, V311, V310, 0x0, V648]

================================

Block 0x7a7
[0x7a7:0x7aa]
---
Predecessors: [0x79f, 0x7b2]
Successors: [0x7ab]
---
0x7a7 JUMPDEST
0x7a8 DUP1
0x7a9 SWAP2
0x7aa POP
---
0x7a7: JUMPDEST 
---
Entry stack: [V10, 0xf8, S11, 0x0, S9, S8, S7, S6, S5, {0x397, 0x3ad, 0x767}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0xf8, S11, 0x0, S9, S8, S7, S6, S5, {0x397, 0x3ad, 0x767}, S3, S2, S0, S0]

================================

Block 0x7ab
[0x7ab:0x7b1]
---
Predecessors: [0x7a7]
Successors: [0x397, 0x3ad, 0x767]
---
0x7ab JUMPDEST
0x7ac POP
0x7ad SWAP3
0x7ae SWAP2
0x7af POP
0x7b0 POP
0x7b1 JUMP
---
0x7ab: JUMPDEST 
0x7b1: JUMP {0x397, 0x3ad, 0x767}
---
Entry stack: [V10, 0xf8, S11, 0x0, S9, S8, S7, S6, S5, {0x397, 0x3ad, 0x767}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0xf8, S11, 0x0, S9, S8, S7, S6, S5, S1]

================================

Block 0x7b2
[0x7b2:0x7bf]
---
Predecessors: [0x397, 0x74c]
Successors: [0x7a7, 0x7c0]
---
0x7b2 JUMPDEST
0x7b3 PUSH1 0x0
0x7b5 DUP3
0x7b6 DUP3
0x7b7 ADD
0x7b8 DUP4
0x7b9 DUP2
0x7ba LT
0x7bb ISZERO
0x7bc PUSH2 0x7a7
0x7bf JUMPI
---
0x7b2: JUMPDEST 
0x7b3: V659 = 0x0
0x7b7: V660 = ADD S0 S1
0x7ba: V661 = LT V660 S1
0x7bb: V662 = ISZERO V661
0x7bc: V663 = 0x7a7
0x7bf: JUMPI 0x7a7 V662
---
Entry stack: [V10, 0xf8, S9, 0x0, S7, S6, S5, S4, S3, {0x3ad, 0x767}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V660]
Exit stack: [V10, 0xf8, S9, 0x0, S7, S6, S5, S4, S3, {0x3ad, 0x767}, S1, S0, 0x0, V660]

================================

Block 0x7c0
[0x7c0:0x7c0]
---
Predecessors: [0x7b2]
Successors: []
---
0x7c0 INVALID
---
0x7c0: INVALID 
---
Entry stack: [V10, 0xf8, S11, 0x0, S9, S8, S7, S6, S5, {0x3ad, 0x767}, S3, S2, 0x0, V660]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S11, 0x0, S9, S8, S7, S6, S5, {0x3ad, 0x767}, S3, S2, 0x0, V660]

================================

Block 0x7c1
[0x7c1:0x7c4]
---
Predecessors: []
Successors: [0x7c5]
---
0x7c1 JUMPDEST
0x7c2 DUP1
0x7c3 SWAP2
0x7c4 POP
---
0x7c1: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x7c5
[0x7c5:0x7cb]
---
Predecessors: [0x7c1]
Successors: []
Has unresolved jump.
---
0x7c5 JUMPDEST
0x7c6 POP
0x7c7 SWAP3
0x7c8 SWAP2
0x7c9 POP
0x7ca POP
0x7cb JUMP
---
0x7c5: JUMPDEST 
0x7cb: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x7cc
[0x7cc:0x7fb]
---
Predecessors: [0x45f]
Successors: [0x556, 0x7fc]
---
0x7cc JUMPDEST
0x7cd PUSH1 0x4
0x7cf SLOAD
0x7d0 PUSH1 0x1
0x7d2 PUSH1 0xa0
0x7d4 PUSH1 0x2
0x7d6 EXP
0x7d7 SUB
0x7d8 AND
0x7d9 CALLVALUE
0x7da DUP1
0x7db ISZERO
0x7dc PUSH2 0x8fc
0x7df MUL
0x7e0 SWAP1
0x7e1 PUSH1 0x40
0x7e3 MLOAD
0x7e4 PUSH1 0x0
0x7e6 PUSH1 0x40
0x7e8 MLOAD
0x7e9 DUP1
0x7ea DUP4
0x7eb SUB
0x7ec DUP2
0x7ed DUP6
0x7ee DUP9
0x7ef DUP9
0x7f0 CALL
0x7f1 SWAP4
0x7f2 POP
0x7f3 POP
0x7f4 POP
0x7f5 POP
0x7f6 ISZERO
0x7f7 ISZERO
0x7f8 PUSH2 0x556
0x7fb JUMPI
---
0x7cc: JUMPDEST 
0x7cd: V664 = 0x4
0x7cf: V665 = S[0x4]
0x7d0: V666 = 0x1
0x7d2: V667 = 0xa0
0x7d4: V668 = 0x2
0x7d6: V669 = EXP 0x2 0xa0
0x7d7: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d8: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x7d9: V672 = CALLVALUE
0x7db: V673 = ISZERO V672
0x7dc: V674 = 0x8fc
0x7df: V675 = MUL 0x8fc V673
0x7e1: V676 = 0x40
0x7e3: V677 = M[0x40]
0x7e4: V678 = 0x0
0x7e6: V679 = 0x40
0x7e8: V680 = M[0x40]
0x7eb: V681 = SUB V677 V680
0x7f0: V682 = CALL V675 V671 V672 V680 V681 V680 0x0
0x7f6: V683 = ISZERO V682
0x7f7: V684 = ISZERO V683
0x7f8: V685 = 0x556
0x7fb: JUMPI 0x556 V684
---
Entry stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, 0x4c0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, 0x4c0]

================================

Block 0x7fc
[0x7fc:0x7ff]
---
Predecessors: [0x7cc]
Successors: []
---
0x7fc PUSH1 0x0
0x7fe DUP1
0x7ff REVERT
---
0x7fc: V686 = 0x0
0x7ff: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, 0x4c0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf8, S7, 0x0, S5, S4, S3, S2, S1, 0x4c0]

================================

Block 0x800
[0x800:0x800]
---
Predecessors: []
Successors: [0x801]
---
0x800 JUMPDEST
---
0x800: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x801
[0x801:0x802]
---
Predecessors: [0x800]
Successors: []
Has unresolved jump.
---
0x801 JUMPDEST
0x802 JUMP
---
0x801: JUMPDEST 
0x802: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x803
[0x803:0x808]
---
Predecessors: [0x665]
Successors: [0x809]
---
0x803 JUMPDEST
0x804 PUSH1 0x3
0x806 SLOAD
0x807 TIMESTAMP
0x808 GT
---
0x803: JUMPDEST 
0x804: V687 = 0x3
0x806: V688 = S[0x3]
0x807: V689 = TIMESTAMP
0x808: V690 = GT V689 V688
---
Entry stack: [V10, 0x1e6, 0x0, V558, 0x679]
Stack pops: 0
Stack additions: [V690]
Exit stack: [V10, 0x1e6, 0x0, V558, 0x679, V690]

================================

Block 0x809
[0x809:0x80b]
---
Predecessors: [0x803]
Successors: [0x679]
---
0x809 JUMPDEST
0x80a SWAP1
0x80b JUMP
---
0x809: JUMPDEST 
0x80b: JUMP 0x679
---
Entry stack: [V10, 0x1e6, 0x0, V558, 0x679, V690]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x1e6, 0x0, V558, V690]

================================

Block 0x80c
[0x80c:0x81d]
---
Predecessors: [0x767]
Successors: [0x81e, 0x825]
---
0x80c JUMPDEST
0x80d PUSH1 0x0
0x80f DUP1
0x810 PUSH1 0x0
0x812 PUSH1 0x2
0x814 SLOAD
0x815 TIMESTAMP
0x816 LT
0x817 ISZERO
0x818 DUP1
0x819 ISZERO
0x81a PUSH2 0x825
0x81d JUMPI
---
0x80c: JUMPDEST 
0x80d: V691 = 0x0
0x810: V692 = 0x0
0x812: V693 = 0x2
0x814: V694 = S[0x2]
0x815: V695 = TIMESTAMP
0x816: V696 = LT V695 V694
0x817: V697 = ISZERO V696
0x819: V698 = ISZERO V697
0x81a: V699 = 0x825
0x81d: JUMPI 0x825 V698
---
Entry stack: [V10, 0xf8, S6, 0x0, S4, S3, S2, V642, 0x773]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V697]
Exit stack: [V10, 0xf8, S6, 0x0, S4, S3, S2, V642, 0x773, 0x0, 0x0, 0x0, V697]

================================

Block 0x81e
[0x81e:0x824]
---
Predecessors: [0x80c]
Successors: [0x825]
---
0x81e POP
0x81f PUSH1 0x3
0x821 SLOAD
0x822 TIMESTAMP
0x823 GT
0x824 ISZERO
---
0x81f: V700 = 0x3
0x821: V701 = S[0x3]
0x822: V702 = TIMESTAMP
0x823: V703 = GT V702 V701
0x824: V704 = ISZERO V703
---
Entry stack: [V10, 0xf8, S10, 0x0, S8, S7, S6, V642, 0x773, 0x0, 0x0, 0x0, V697]
Stack pops: 1
Stack additions: [V704]
Exit stack: [V10, 0xf8, S10, 0x0, S8, S7, S6, V642, 0x773, 0x0, 0x0, 0x0, V704]

================================

Block 0x825
[0x825:0x832]
---
Predecessors: [0x80c, 0x81e]
Successors: [0x833, 0x835]
---
0x825 JUMPDEST
0x826 SWAP2
0x827 POP
0x828 POP
0x829 CALLVALUE
0x82a ISZERO
0x82b ISZERO
0x82c DUP2
0x82d DUP1
0x82e ISZERO
0x82f PUSH2 0x835
0x832 JUMPI
---
0x825: JUMPDEST 
0x829: V705 = CALLVALUE
0x82a: V706 = ISZERO V705
0x82b: V707 = ISZERO V706
0x82e: V708 = ISZERO S0
0x82f: V709 = 0x835
0x832: JUMPI 0x835 V708
---
Entry stack: [V10, 0xf8, S10, 0x0, S8, S7, S6, V642, 0x773, 0x0, 0x0, 0x0, S0]
Stack pops: 3
Stack additions: [S0, V707, S0]
Exit stack: [V10, 0xf8, S10, 0x0, S8, S7, S6, V642, 0x773, 0x0, S0, V707, S0]

================================

Block 0x833
[0x833:0x834]
---
Predecessors: [0x825]
Successors: [0x835]
---
0x833 POP
0x834 DUP1
---
0x833: NOP 
---
Entry stack: [V10, 0xf8, S10, 0x0, S8, S7, S6, V642, 0x773, 0x0, S2, V707, S0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V10, 0xf8, S10, 0x0, S8, S7, S6, V642, 0x773, 0x0, S2, V707, V707]

================================

Block 0x835
[0x835:0x837]
---
Predecessors: [0x825, 0x833]
Successors: [0x838]
---
0x835 JUMPDEST
0x836 SWAP3
0x837 POP
---
0x835: JUMPDEST 
---
Entry stack: [V10, 0xf8, S10, 0x0, S8, S7, S6, V642, 0x773, 0x0, S2, V707, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V10, 0xf8, S10, 0x0, S8, S7, S6, V642, 0x773, S0, S2, V707]

================================

Block 0x838
[0x838:0x83c]
---
Predecessors: [0x835]
Successors: [0x773]
---
0x838 JUMPDEST
0x839 POP
0x83a POP
0x83b SWAP1
0x83c JUMP
---
0x838: JUMPDEST 
0x83c: JUMP 0x773
---
Entry stack: [V10, 0xf8, S9, 0x0, 0x0, 0x375, 0x0, V642, 0x773, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V10, 0xf8, S9, 0x0, 0x0, 0x375, 0x0, V642, S2]

================================

Block 0x83d
[0x83d:0x868]
---
Predecessors: []
Successors: []
---
0x83d STOP
0x83e LOG1
0x83f PUSH6 0x627a7a723058
0x846 SHA3
0x847 SWAP5
0x848 MLOAD
0x849 GAS
0x84a MISSING 0xd9
0x84b PUSH29 0xb7b20154a2f653fdef04a62ab1092f92647da49ca22ec8d89c86650029
---
0x83d: STOP 
0x83e: LOG S0 S1 S2
0x83f: V710 = 0x627a7a723058
0x846: V711 = SHA3 0x627a7a723058 S3
0x848: V712 = M[S8]
0x849: V713 = GAS
0x84a: MISSING 0xd9
0x84b: V714 = 0xb7b20154a2f653fdef04a62ab1092f92647da49ca22ec8d89c86650029
---
Entry stack: []
Stack pops: 0
Stack additions: [V713, V712, S4, S5, S6, S7, V711, 0xb7b20154a2f653fdef04a62ab1092f92647da49ca22ec8d89c86650029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2c4e722e
Entry block: 0xfb
Exit block: 0x10e
Body: 0xfb, 0x102, 0x106, 0x10e, 0x4c6

Function 1:
Public function signature: 0x3197cbb6
Entry block: 0x120
Exit block: 0x10e
Body: 0x10e, 0x120, 0x127, 0x12b, 0x4cc

Function 2:
Public function signature: 0x355274ea
Entry block: 0x145
Exit block: 0x10e
Body: 0x10e, 0x145, 0x14c, 0x150, 0x4d2

Function 3:
Public function signature: 0x3f4ba83a
Entry block: 0x16a
Exit block: 0x37c
Body: 0x16a, 0x171, 0x175, 0x37c, 0x4d8, 0x4ef, 0x4f3, 0x507, 0x50b

Function 4:
Public function signature: 0x4042b66f
Entry block: 0x17f
Exit block: 0x10e
Body: 0x10e, 0x17f, 0x186, 0x18a, 0x55a

Function 5:
Public function signature: 0x521eb273
Entry block: 0x1a4
Exit block: 0x1b7
Body: 0x1a4, 0x1ab, 0x1af, 0x1b7, 0x560

Function 6:
Public function signature: 0x5c975abb
Entry block: 0x1d3
Exit block: 0x1e6
Body: 0x1d3, 0x1da, 0x1de, 0x1e6, 0x56f

Function 7:
Public function signature: 0x5fbe4d1d
Entry block: 0x1fa
Exit block: 0x1b7
Body: 0x1b7, 0x1fa, 0x201, 0x205, 0x57f

Function 8:
Public function signature: 0x78e97925
Entry block: 0x229
Exit block: 0x10e
Body: 0x10e, 0x229, 0x230, 0x234, 0x58e

Function 9:
Public function signature: 0x83197ef0
Entry block: 0x24e
Exit block: 0x5ab
Body: 0x24e, 0x255, 0x259, 0x594, 0x5ab, 0x5af

Function 10:
Public function signature: 0x8456cb59
Entry block: 0x263
Exit block: 0xf9
Body: 0xf8, 0xf9, 0x263, 0x26a, 0x26e, 0x5c0, 0x5d7, 0x5db, 0x5ee, 0x5f2, 0x643, 0x644, 0x645

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x278
Exit block: 0x1b7
Body: 0x1b7, 0x278, 0x27f, 0x283, 0x647

Function 12:
Public function signature: 0xa96fb9b4
Entry block: 0x2a7
Exit block: 0x1b7
Body: 0x1b7, 0x2a7, 0x2ae, 0x2b2, 0x656

Function 13:
Public function signature: 0xec8ac4d8
Entry block: 0x2d6
Exit block: 0xf9
Body: 0xf8, 0xf9, 0x2d6

Function 14:
Public function signature: 0xecb70fb7
Entry block: 0x2ec
Exit block: 0x37c
Body: 0x2ec, 0x2f3, 0x2f7, 0x37c, 0x665, 0x679, 0x67f, 0x803, 0x809

Function 15:
Public function signature: 0xf2fde38b
Entry block: 0x313
Exit block: 0xf9
Body: 0xf8, 0xf9, 0x313, 0x31a, 0x31e, 0x688, 0x69f, 0x6a3, 0x6b4, 0x6b8, 0x71d, 0x71e

Function 16:
Public function signature: 0xf5074f41
Entry block: 0x334
Exit block: 0x738
Body: 0x334, 0x33b, 0x33f, 0x721, 0x738, 0x73c

Function 17:
Public fallback function
Entry block: 0xee
Exit block: 0xf9
Body: 0xee, 0xef, 0xf8, 0xf9

Function 18:
Private function
Entry block: 0x7b2
Exit block: 0x7ab
Body: 0x375, 0x380, 0x397, 0x3ad, 0x44e, 0x45f, 0x4c0, 0x4c1, 0x556, 0x557, 0x558, 0x783, 0x790, 0x79c, 0x79f, 0x7a7, 0x7ab, 0x7b2, 0x7cc

Function 19:
Private function
Entry block: 0x355
Exit block: 0x77f
Body: 0x355, 0x36d, 0x375, 0x380, 0x397, 0x3ad, 0x44e, 0x45f, 0x4c0, 0x4c1, 0x556, 0x557, 0x558, 0x681, 0x684, 0x74c, 0x767, 0x773, 0x77a, 0x77c, 0x77f, 0x783, 0x790, 0x79c, 0x79f, 0x7a7, 0x7ab, 0x7cc, 0x80c, 0x81e, 0x825, 0x833, 0x835, 0x838

