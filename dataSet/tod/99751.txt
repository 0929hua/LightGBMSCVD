Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x44]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x4bb278f3
0x2e EQ
0x2f PUSH2 0x44
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x4bb278f3
0x2e: V7 = EQ 0x4bb278f3 V5
0x2f: V8 = 0x44
0x32: JUMPI 0x44 V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x53]
---
0x33 DUP1
0x34 PUSH4 0x590e1ae3
0x39 EQ
0x3a PUSH2 0x53
0x3d JUMPI
---
0x34: V9 = 0x590e1ae3
0x39: V10 = EQ 0x590e1ae3 V5
0x3a: V11 = 0x53
0x3d: JUMPI 0x53 V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x41]
---
Predecessors: [0x33]
Successors: [0x42]
---
0x3e PUSH2 0x42
0x41 JUMP
---
0x3e: V12 = 0x42
0x41: JUMP 0x42
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x42
[0x42:0x43]
---
Predecessors: [0x3e]
Successors: []
---
0x42 JUMPDEST
0x43 STOP
---
0x42: JUMPDEST 
0x43: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x44
[0x44:0x50]
---
Predecessors: [0x0]
Successors: [0x62]
---
0x44 JUMPDEST
0x45 PUSH2 0x51
0x48 PUSH1 0x4
0x4a DUP1
0x4b POP
0x4c POP
0x4d PUSH2 0x62
0x50 JUMP
---
0x44: JUMPDEST 
0x45: V13 = 0x51
0x48: V14 = 0x4
0x4d: V15 = 0x62
0x50: JUMP 0x62
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x51]
Exit stack: [V5, 0x51]

================================

Block 0x51
[0x51:0x52]
---
Predecessors: [0x17e]
Successors: []
---
0x51 JUMPDEST
0x52 STOP
---
0x51: JUMPDEST 
0x52: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x53
[0x53:0x5f]
---
Predecessors: [0x33]
Successors: [0x180]
---
0x53 JUMPDEST
0x54 PUSH2 0x60
0x57 PUSH1 0x4
0x59 DUP1
0x5a POP
0x5b POP
0x5c PUSH2 0x180
0x5f JUMP
---
0x53: JUMPDEST 
0x54: V16 = 0x60
0x57: V17 = 0x4
0x5c: V18 = 0x180
0x5f: JUMP 0x180
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V5, 0x60]

================================

Block 0x60
[0x60:0x61]
---
Predecessors: [0x29c]
Successors: []
---
0x60 JUMPDEST
0x61 STOP
---
0x60: JUMPDEST 
0x61: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x62
[0x62:0xb8]
---
Predecessors: [0x44]
Successors: [0xb9, 0x10b]
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 PUSH1 0x0
0x67 SWAP1
0x68 SLOAD
0x69 SWAP1
0x6a PUSH2 0x100
0x6d EXP
0x6e SWAP1
0x6f DIV
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b AND
0x9c CALLER
0x9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2 AND
0xb3 EQ
0xb4 DUP1
0xb5 PUSH2 0x10b
0xb8 JUMPI
---
0x62: JUMPDEST 
0x63: V19 = 0x0
0x65: V20 = 0x0
0x68: V21 = S[0x0]
0x6a: V22 = 0x100
0x6d: V23 = EXP 0x100 0x0
0x6f: V24 = DIV V21 0x1
0x70: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x86: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x9c: V29 = CALLER
0x9d: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0xb3: V32 = EQ V31 V28
0xb5: V33 = 0x10b
0xb8: JUMPI 0x10b V32
---
Entry stack: [V5, 0x51]
Stack pops: 0
Stack additions: [V32]
Exit stack: [V5, 0x51, V32]

================================

Block 0xb9
[0xb9:0x10a]
---
Predecessors: [0x62]
Successors: [0x10b]
---
0xb9 POP
0xba PUSH1 0x2
0xbc PUSH1 0x0
0xbe SWAP1
0xbf SLOAD
0xc0 SWAP1
0xc1 PUSH2 0x100
0xc4 EXP
0xc5 SWAP1
0xc6 DIV
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc AND
0xdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2 AND
0xf3 CALLER
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a EQ
---
0xba: V34 = 0x2
0xbc: V35 = 0x0
0xbf: V36 = S[0x2]
0xc1: V37 = 0x100
0xc4: V38 = EXP 0x100 0x0
0xc6: V39 = DIV V36 0x1
0xc7: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xdd: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xf3: V44 = CALLER
0xf4: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x10a: V47 = EQ V46 V43
---
Entry stack: [V5, 0x51, V32]
Stack pops: 1
Stack additions: [V47]
Exit stack: [V5, 0x51, V47]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0x62, 0xb9]
Successors: [0x111, 0x17d]
---
0x10b JUMPDEST
0x10c ISZERO
0x10d PUSH2 0x17d
0x110 JUMPI
---
0x10b: JUMPDEST 
0x10c: V48 = ISZERO S0
0x10d: V49 = 0x17d
0x110: JUMPI 0x17d V48
---
Entry stack: [V5, 0x51, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x51]

================================

Block 0x111
[0x111:0x17c]
---
Predecessors: [0x10b]
Successors: [0x17d]
---
0x111 PUSH1 0x1
0x113 PUSH1 0x0
0x115 SWAP1
0x116 SLOAD
0x117 SWAP1
0x118 PUSH2 0x100
0x11b EXP
0x11c SWAP1
0x11d DIV
0x11e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133 AND
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a PUSH1 0x0
0x14c ADDRESS
0x14d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x162 AND
0x163 BALANCE
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP1
0x169 POP
0x16a PUSH1 0x0
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 DUP4
0x171 SUB
0x172 DUP2
0x173 DUP6
0x174 DUP9
0x175 DUP9
0x176 CALL
0x177 SWAP4
0x178 POP
0x179 POP
0x17a POP
0x17b POP
0x17c POP
---
0x111: V50 = 0x1
0x113: V51 = 0x0
0x116: V52 = S[0x1]
0x118: V53 = 0x100
0x11b: V54 = EXP 0x100 0x0
0x11d: V55 = DIV V52 0x1
0x11e: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x133: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x134: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x14a: V60 = 0x0
0x14c: V61 = ADDRESS
0x14d: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x162: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x163: V64 = BALANCE V63
0x164: V65 = 0x40
0x166: V66 = M[0x40]
0x16a: V67 = 0x0
0x16c: V68 = 0x40
0x16e: V69 = M[0x40]
0x171: V70 = SUB V66 V69
0x176: V71 = CALL 0x0 V59 V64 V69 V70 V69 0x0
---
Entry stack: [V5, 0x51]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x51]

================================

Block 0x17d
[0x17d:0x17d]
---
Predecessors: [0x10b, 0x111]
Successors: [0x17e]
---
0x17d JUMPDEST
---
0x17d: JUMPDEST 
---
Entry stack: [V5, 0x51]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x51]

================================

Block 0x17e
[0x17e:0x17f]
---
Predecessors: [0x17d]
Successors: [0x51]
---
0x17e JUMPDEST
0x17f JUMP
---
0x17e: JUMPDEST 
0x17f: JUMP 0x51
---
Entry stack: [V5, 0x51]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x180
[0x180:0x1d6]
---
Predecessors: [0x53]
Successors: [0x1d7, 0x229]
---
0x180 JUMPDEST
0x181 PUSH1 0x1
0x183 PUSH1 0x0
0x185 SWAP1
0x186 SLOAD
0x187 SWAP1
0x188 PUSH2 0x100
0x18b EXP
0x18c SWAP1
0x18d DIV
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 AND
0x1ba CALLER
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 AND
0x1d1 EQ
0x1d2 DUP1
0x1d3 PUSH2 0x229
0x1d6 JUMPI
---
0x180: JUMPDEST 
0x181: V72 = 0x1
0x183: V73 = 0x0
0x186: V74 = S[0x1]
0x188: V75 = 0x100
0x18b: V76 = EXP 0x100 0x0
0x18d: V77 = DIV V74 0x1
0x18e: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x1a4: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x1ba: V82 = CALLER
0x1bb: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x1d1: V85 = EQ V84 V81
0x1d3: V86 = 0x229
0x1d6: JUMPI 0x229 V85
---
Entry stack: [V5, 0x60]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V5, 0x60, V85]

================================

Block 0x1d7
[0x1d7:0x228]
---
Predecessors: [0x180]
Successors: [0x229]
---
0x1d7 POP
0x1d8 PUSH1 0x2
0x1da PUSH1 0x0
0x1dc SWAP1
0x1dd SLOAD
0x1de SWAP1
0x1df PUSH2 0x100
0x1e2 EXP
0x1e3 SWAP1
0x1e4 DIV
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x210 AND
0x211 CALLER
0x212 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x227 AND
0x228 EQ
---
0x1d8: V87 = 0x2
0x1da: V88 = 0x0
0x1dd: V89 = S[0x2]
0x1df: V90 = 0x100
0x1e2: V91 = EXP 0x100 0x0
0x1e4: V92 = DIV V89 0x1
0x1e5: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1fb: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x210: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x211: V97 = CALLER
0x212: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x227: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x228: V100 = EQ V99 V96
---
Entry stack: [V5, 0x60, V85]
Stack pops: 1
Stack additions: [V100]
Exit stack: [V5, 0x60, V100]

================================

Block 0x229
[0x229:0x22e]
---
Predecessors: [0x180, 0x1d7]
Successors: [0x22f, 0x29b]
---
0x229 JUMPDEST
0x22a ISZERO
0x22b PUSH2 0x29b
0x22e JUMPI
---
0x229: JUMPDEST 
0x22a: V101 = ISZERO S0
0x22b: V102 = 0x29b
0x22e: JUMPI 0x29b V101
---
Entry stack: [V5, 0x60, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x60]

================================

Block 0x22f
[0x22f:0x29a]
---
Predecessors: [0x229]
Successors: [0x29b]
---
0x22f PUSH1 0x0
0x231 PUSH1 0x0
0x233 SWAP1
0x234 SLOAD
0x235 SWAP1
0x236 PUSH2 0x100
0x239 EXP
0x23a SWAP1
0x23b DIV
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x267 AND
0x268 PUSH1 0x0
0x26a ADDRESS
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 AND
0x281 BALANCE
0x282 PUSH1 0x40
0x284 MLOAD
0x285 DUP1
0x286 SWAP1
0x287 POP
0x288 PUSH1 0x0
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e DUP4
0x28f SUB
0x290 DUP2
0x291 DUP6
0x292 DUP9
0x293 DUP9
0x294 CALL
0x295 SWAP4
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a POP
---
0x22f: V103 = 0x0
0x231: V104 = 0x0
0x234: V105 = S[0x0]
0x236: V106 = 0x100
0x239: V107 = EXP 0x100 0x0
0x23b: V108 = DIV V105 0x1
0x23c: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x252: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x267: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x268: V113 = 0x0
0x26a: V114 = ADDRESS
0x26b: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x281: V117 = BALANCE V116
0x282: V118 = 0x40
0x284: V119 = M[0x40]
0x288: V120 = 0x0
0x28a: V121 = 0x40
0x28c: V122 = M[0x40]
0x28f: V123 = SUB V119 V122
0x294: V124 = CALL 0x0 V112 V117 V122 V123 V122 0x0
---
Entry stack: [V5, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x60]

================================

Block 0x29b
[0x29b:0x29b]
---
Predecessors: [0x229, 0x22f]
Successors: [0x29c]
---
0x29b JUMPDEST
---
0x29b: JUMPDEST 
---
Entry stack: [V5, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x60]

================================

Block 0x29c
[0x29c:0x29d]
---
Predecessors: [0x29b]
Successors: [0x60]
---
0x29c JUMPDEST
0x29d JUMP
---
0x29c: JUMPDEST 
0x29d: JUMP 0x60
---
Entry stack: [V5, 0x60]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Function 0:
Public function signature: 0x4bb278f3
Entry block: 0x44
Exit block: 0x51
Body: 0x44, 0x51, 0x62, 0xb9, 0x10b, 0x111, 0x17d, 0x17e

Function 1:
Public function signature: 0x590e1ae3
Entry block: 0x53
Exit block: 0x60
Body: 0x53, 0x60, 0x180, 0x1d7, 0x229, 0x22f, 0x29b, 0x29c

Function 2:
Public fallback function
Entry block: 0x3e
Exit block: 0x42
Body: 0x3e, 0x42

