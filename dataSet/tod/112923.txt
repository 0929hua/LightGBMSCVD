Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x1ea]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6e66f6e9
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x1ea
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6e66f6e9
0x3b: V13 = EQ V11 0x6e66f6e9
0x3c: V14 = 0x1ea
0x3f: JUMPI 0x1ea V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x219]
---
0x40 DUP1
0x41 PUSH4 0x70a08231
0x46 EQ
0x47 PUSH2 0x219
0x4a JUMPI
---
0x41: V15 = 0x70a08231
0x46: V16 = EQ 0x70a08231 V11
0x47: V17 = 0x219
0x4a: JUMPI 0x219 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x24a]
---
0x4b DUP1
0x4c PUSH4 0x7b3e5e7b
0x51 EQ
0x52 PUSH2 0x24a
0x55 JUMPI
---
0x4c: V18 = 0x7b3e5e7b
0x51: V19 = EQ 0x7b3e5e7b V11
0x52: V20 = 0x24a
0x55: JUMPI 0x24a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x25d]
---
0x56 DUP1
0x57 PUSH4 0x83197ef0
0x5c EQ
0x5d PUSH2 0x25d
0x60 JUMPI
---
0x57: V21 = 0x83197ef0
0x5c: V22 = EQ 0x83197ef0 V11
0x5d: V23 = 0x25d
0x60: JUMPI 0x25d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x272]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x272
0x6b JUMPI
---
0x62: V24 = 0x8da5cb5b
0x67: V25 = EQ 0x8da5cb5b V11
0x68: V26 = 0x272
0x6b: JUMPI 0x272 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x285]
---
0x6c DUP1
0x6d PUSH4 0xa035b1fe
0x72 EQ
0x73 PUSH2 0x285
0x76 JUMPI
---
0x6d: V27 = 0xa035b1fe
0x72: V28 = EQ 0xa035b1fe V11
0x73: V29 = 0x285
0x76: JUMPI 0x285 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x298]
---
0x77 DUP1
0x78 PUSH4 0xf5074f41
0x7d EQ
0x7e PUSH2 0x298
0x81 JUMPI
---
0x78: V30 = 0xf5074f41
0x7d: V31 = EQ 0xf5074f41 V11
0x7e: V32 = 0x298
0x81: JUMPI 0x298 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x2b7]
---
0x82 DUP1
0x83 PUSH4 0xfd6b7ef8
0x88 EQ
0x89 PUSH2 0x2b7
0x8c JUMPI
---
0x83: V33 = 0xfd6b7ef8
0x88: V34 = EQ 0xfd6b7ef8 V11
0x89: V35 = 0x2b7
0x8c: JUMPI 0x2b7 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0xb7]
---
Predecessors: [0x0, 0x82]
Successors: [0x2ca]
---
0x8d JUMPDEST
0x8e PUSH1 0x1
0x90 PUSH1 0xa0
0x92 PUSH1 0x2
0x94 EXP
0x95 SUB
0x96 CALLER
0x97 AND
0x98 PUSH1 0x0
0x9a SWAP1
0x9b DUP2
0x9c MSTORE
0x9d PUSH1 0x4
0x9f PUSH1 0x20
0xa1 MSTORE
0xa2 PUSH1 0x40
0xa4 SWAP1
0xa5 SHA3
0xa6 SLOAD
0xa7 CALLVALUE
0xa8 SWAP1
0xa9 PUSH2 0xb8
0xac SWAP1
0xad DUP3
0xae PUSH4 0xffffffff
0xb3 PUSH2 0x2ca
0xb6 AND
0xb7 JUMP
---
0x8d: JUMPDEST 
0x8e: V36 = 0x1
0x90: V37 = 0xa0
0x92: V38 = 0x2
0x94: V39 = EXP 0x2 0xa0
0x95: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96: V41 = CALLER
0x97: V42 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x98: V43 = 0x0
0x9c: M[0x0] = V42
0x9d: V44 = 0x4
0x9f: V45 = 0x20
0xa1: M[0x20] = 0x4
0xa2: V46 = 0x40
0xa5: V47 = SHA3 0x0 0x40
0xa6: V48 = S[V47]
0xa7: V49 = CALLVALUE
0xa9: V50 = 0xb8
0xae: V51 = 0xffffffff
0xb3: V52 = 0x2ca
0xb6: V53 = AND 0x2ca 0xffffffff
0xb7: JUMP 0x2ca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49, 0xb8, V48, V49]
Exit stack: [V11, V49, 0xb8, V48, V49]

================================

Block 0xb8
[0xb8:0xe3]
---
Predecessors: [0x2d9]
Successors: [0x2ca]
---
0xb8 JUMPDEST
0xb9 PUSH1 0x1
0xbb PUSH1 0xa0
0xbd PUSH1 0x2
0xbf EXP
0xc0 SUB
0xc1 CALLER
0xc2 AND
0xc3 PUSH1 0x0
0xc5 SWAP1
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x4
0xca PUSH1 0x20
0xcc MSTORE
0xcd PUSH1 0x40
0xcf SWAP1
0xd0 SHA3
0xd1 SSTORE
0xd2 PUSH1 0x1
0xd4 SLOAD
0xd5 PUSH2 0xe4
0xd8 SWAP1
0xd9 DUP3
0xda PUSH4 0xffffffff
0xdf PUSH2 0x2ca
0xe2 AND
0xe3 JUMP
---
0xb8: JUMPDEST 
0xb9: V54 = 0x1
0xbb: V55 = 0xa0
0xbd: V56 = 0x2
0xbf: V57 = EXP 0x2 0xa0
0xc0: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V59 = CALLER
0xc2: V60 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V61 = 0x0
0xc7: M[0x0] = V60
0xc8: V62 = 0x4
0xca: V63 = 0x20
0xcc: M[0x20] = 0x4
0xcd: V64 = 0x40
0xd0: V65 = SHA3 0x0 0x40
0xd1: S[V65] = S0
0xd2: V66 = 0x1
0xd4: V67 = S[0x1]
0xd5: V68 = 0xe4
0xda: V69 = 0xffffffff
0xdf: V70 = 0x2ca
0xe2: V71 = AND 0x2ca 0xffffffff
0xe3: JUMP 0x2ca
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S7, S6, V82, 0xa9059cbb, V84, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0xe4, V67, S1]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S7, S6, V82, 0xa9059cbb, V84, S2, S1, 0xe4, V67, S1]

================================

Block 0xe4
[0xe4:0x116]
---
Predecessors: [0x2d9]
Successors: [0x2e0]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x1
0xe7 SSTORE
0xe8 PUSH1 0x3
0xea SLOAD
0xeb PUSH1 0x2
0xed SLOAD
0xee PUSH1 0x1
0xf0 PUSH1 0xa0
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 SUB
0xf6 SWAP1
0xf7 SWAP2
0xf8 AND
0xf9 SWAP1
0xfa PUSH4 0xa9059cbb
0xff SWAP1
0x100 CALLER
0x101 SWAP1
0x102 PUSH2 0x123
0x105 SWAP1
0x106 PUSH2 0x117
0x109 DUP7
0x10a PUSH2 0x2710
0x10d PUSH4 0xffffffff
0x112 PUSH2 0x2e0
0x115 AND
0x116 JUMP
---
0xe4: JUMPDEST 
0xe5: V72 = 0x1
0xe7: S[0x1] = S0
0xe8: V73 = 0x3
0xea: V74 = S[0x3]
0xeb: V75 = 0x2
0xed: V76 = S[0x2]
0xee: V77 = 0x1
0xf0: V78 = 0xa0
0xf2: V79 = 0x2
0xf4: V80 = EXP 0x2 0xa0
0xf5: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8: V82 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V83 = 0xa9059cbb
0x100: V84 = CALLER
0x102: V85 = 0x123
0x106: V86 = 0x117
0x10a: V87 = 0x2710
0x10d: V88 = 0xffffffff
0x112: V89 = 0x2e0
0x115: V90 = AND 0x2e0 0xffffffff
0x116: JUMP 0x2e0
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S7, S6, V82, 0xa9059cbb, V84, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S1, 0x2710]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S7, S6, V82, 0xa9059cbb, V84, S2, S1, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S1, 0x2710]

================================

Block 0x117
[0x117:0x122]
---
Predecessors: [0x2d9]
Successors: [0x304]
---
0x117 JUMPDEST
0x118 SWAP1
0x119 PUSH4 0xffffffff
0x11e PUSH2 0x304
0x121 AND
0x122 JUMP
---
0x117: JUMPDEST 
0x119: V91 = 0xffffffff
0x11e: V92 = 0x304
0x121: V93 = AND 0x304 0xffffffff
0x122: JUMP 0x304
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S7, S6, V82, 0xa9059cbb, V84, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S7, S6, V82, 0xa9059cbb, V84, S2, S0, S1]

================================

Block 0x123
[0x123:0x17a]
---
Predecessors: [0x312]
Successors: [0x17b, 0x17f]
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 MLOAD
0x127 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x145 PUSH4 0xffffffff
0x14a DUP6
0x14b AND
0x14c MUL
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 SWAP1
0x158 SWAP3
0x159 AND
0x15a PUSH1 0x4
0x15c DUP4
0x15d ADD
0x15e MSTORE
0x15f PUSH1 0x24
0x161 DUP3
0x162 ADD
0x163 MSTORE
0x164 PUSH1 0x44
0x166 ADD
0x167 PUSH1 0x0
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP4
0x16e SUB
0x16f DUP2
0x170 PUSH1 0x0
0x172 DUP8
0x173 DUP1
0x174 EXTCODESIZE
0x175 ISZERO
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x123: JUMPDEST 
0x124: V94 = 0x40
0x126: V95 = M[0x40]
0x127: V96 = 0x100000000000000000000000000000000000000000000000000000000
0x145: V97 = 0xffffffff
0x14b: V98 = AND 0xa9059cbb 0xffffffff
0x14c: V99 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x14e: M[V95] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x14f: V100 = 0x1
0x151: V101 = 0xa0
0x153: V102 = 0x2
0x155: V103 = EXP 0x2 0xa0
0x156: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V105 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V106 = 0x4
0x15d: V107 = ADD V95 0x4
0x15e: M[V107] = V105
0x15f: V108 = 0x24
0x162: V109 = ADD V95 0x24
0x163: M[V109] = V256
0x164: V110 = 0x44
0x166: V111 = ADD 0x44 V95
0x167: V112 = 0x0
0x169: V113 = 0x40
0x16b: V114 = M[0x40]
0x16e: V115 = SUB V111 V114
0x170: V116 = 0x0
0x174: V117 = EXTCODESIZE V82
0x175: V118 = ISZERO V117
0x176: V119 = ISZERO V118
0x177: V120 = 0x17f
0x17a: JUMPI 0x17f V119
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, V256]
Stack pops: 4
Stack additions: [S3, S2, V111, 0x0, V114, V115, V114, 0x0, S3]
Exit stack: [V11, V49, V82, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V82]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x123]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V121 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49, V82, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V82]

================================

Block 0x17f
[0x17f:0x18b]
---
Predecessors: [0x123]
Successors: [0x18c, 0x190]
---
0x17f JUMPDEST
0x180 PUSH2 0x2c6
0x183 GAS
0x184 SUB
0x185 CALL
0x186 ISZERO
0x187 ISZERO
0x188 PUSH2 0x190
0x18b JUMPI
---
0x17f: JUMPDEST 
0x180: V122 = 0x2c6
0x183: V123 = GAS
0x184: V124 = SUB V123 0x2c6
0x185: V125 = CALL V124 V82 0x0 V114 V115 V114 0x0
0x186: V126 = ISZERO V125
0x187: V127 = ISZERO V126
0x188: V128 = 0x190
0x18b: JUMPI 0x190 V127
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V82]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V49, V82, 0xa9059cbb, V111]

================================

Block 0x18c
[0x18c:0x18f]
---
Predecessors: [0x17f]
Successors: []
---
0x18c PUSH1 0x0
0x18e DUP1
0x18f REVERT
---
0x18c: V129 = 0x0
0x18f: REVERT 0x0 0x0
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49, V82, 0xa9059cbb, V111]

================================

Block 0x190
[0x190:0x1e9]
---
Predecessors: [0x17f]
Successors: []
---
0x190 JUMPDEST
0x191 POP
0x192 POP
0x193 POP
0x194 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1b5 CALLER
0x1b6 DUP3
0x1b7 PUSH1 0x1
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 SWAP1
0x1c5 SWAP4
0x1c6 AND
0x1c7 DUP4
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb DUP4
0x1cc ADD
0x1cd SWAP2
0x1ce SWAP1
0x1cf SWAP2
0x1d0 MSTORE
0x1d1 ISZERO
0x1d2 ISZERO
0x1d3 PUSH1 0x40
0x1d5 DUP1
0x1d6 DUP4
0x1d7 ADD
0x1d8 SWAP2
0x1d9 SWAP1
0x1da SWAP2
0x1db MSTORE
0x1dc PUSH1 0x60
0x1de SWAP1
0x1df SWAP2
0x1e0 ADD
0x1e1 SWAP1
0x1e2 MLOAD
0x1e3 DUP1
0x1e4 SWAP2
0x1e5 SUB
0x1e6 SWAP1
0x1e7 LOG1
0x1e8 POP
0x1e9 STOP
---
0x190: JUMPDEST 
0x194: V130 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1b5: V131 = CALLER
0x1b7: V132 = 0x1
0x1b9: V133 = 0x40
0x1bb: V134 = M[0x40]
0x1bc: V135 = 0x1
0x1be: V136 = 0xa0
0x1c0: V137 = 0x2
0x1c2: V138 = EXP 0x2 0xa0
0x1c3: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V140 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: M[V134] = V140
0x1c9: V141 = 0x20
0x1cc: V142 = ADD V134 0x20
0x1d0: M[V142] = V49
0x1d1: V143 = ISZERO 0x1
0x1d2: V144 = ISZERO 0x0
0x1d3: V145 = 0x40
0x1d7: V146 = ADD V134 0x40
0x1db: M[V146] = 0x1
0x1dc: V147 = 0x60
0x1e0: V148 = ADD V134 0x60
0x1e2: V149 = M[0x40]
0x1e5: V150 = SUB V148 V149
0x1e7: LOG V149 V150 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1e9: STOP 
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V111]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ea
[0x1ea:0x1f0]
---
Predecessors: [0xd]
Successors: [0x1f1, 0x1f5]
---
0x1ea JUMPDEST
0x1eb CALLVALUE
0x1ec ISZERO
0x1ed PUSH2 0x1f5
0x1f0 JUMPI
---
0x1ea: JUMPDEST 
0x1eb: V151 = CALLVALUE
0x1ec: V152 = ISZERO V151
0x1ed: V153 = 0x1f5
0x1f0: JUMPI 0x1f5 V152
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f1
[0x1f1:0x1f4]
---
Predecessors: [0x1ea]
Successors: []
---
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 REVERT
---
0x1f1: V154 = 0x0
0x1f4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f5
[0x1f5:0x1fc]
---
Predecessors: [0x1ea]
Successors: [0x31b]
---
0x1f5 JUMPDEST
0x1f6 PUSH2 0x1fd
0x1f9 PUSH2 0x31b
0x1fc JUMP
---
0x1f5: JUMPDEST 
0x1f6: V155 = 0x1fd
0x1f9: V156 = 0x31b
0x1fc: JUMP 0x31b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1fd]
Exit stack: [V11, 0x1fd]

================================

Block 0x1fd
[0x1fd:0x218]
---
Predecessors: [0x31b, 0x36b]
Successors: []
---
0x1fd JUMPDEST
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 PUSH1 0x1
0x203 PUSH1 0xa0
0x205 PUSH1 0x2
0x207 EXP
0x208 SUB
0x209 SWAP1
0x20a SWAP2
0x20b AND
0x20c DUP2
0x20d MSTORE
0x20e PUSH1 0x20
0x210 ADD
0x211 PUSH1 0x40
0x213 MLOAD
0x214 DUP1
0x215 SWAP2
0x216 SUB
0x217 SWAP1
0x218 RETURN
---
0x1fd: JUMPDEST 
0x1fe: V157 = 0x40
0x200: V158 = M[0x40]
0x201: V159 = 0x1
0x203: V160 = 0xa0
0x205: V161 = 0x2
0x207: V162 = EXP 0x2 0xa0
0x208: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V164 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x20d: M[V158] = V164
0x20e: V165 = 0x20
0x210: V166 = ADD 0x20 V158
0x211: V167 = 0x40
0x213: V168 = M[0x40]
0x216: V169 = SUB V166 V168
0x218: RETURN V168 V169
---
Entry stack: [V11, 0x1fd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1fd]

================================

Block 0x219
[0x219:0x21f]
---
Predecessors: [0x40]
Successors: [0x220, 0x224]
---
0x219 JUMPDEST
0x21a CALLVALUE
0x21b ISZERO
0x21c PUSH2 0x224
0x21f JUMPI
---
0x219: JUMPDEST 
0x21a: V170 = CALLVALUE
0x21b: V171 = ISZERO V170
0x21c: V172 = 0x224
0x21f: JUMPI 0x224 V171
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x220
[0x220:0x223]
---
Predecessors: [0x219]
Successors: []
---
0x220 PUSH1 0x0
0x222 DUP1
0x223 REVERT
---
0x220: V173 = 0x0
0x223: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x224
[0x224:0x237]
---
Predecessors: [0x219]
Successors: [0x32a]
---
0x224 JUMPDEST
0x225 PUSH2 0x238
0x228 PUSH1 0x1
0x22a PUSH1 0xa0
0x22c PUSH1 0x2
0x22e EXP
0x22f SUB
0x230 PUSH1 0x4
0x232 CALLDATALOAD
0x233 AND
0x234 PUSH2 0x32a
0x237 JUMP
---
0x224: JUMPDEST 
0x225: V174 = 0x238
0x228: V175 = 0x1
0x22a: V176 = 0xa0
0x22c: V177 = 0x2
0x22e: V178 = EXP 0x2 0xa0
0x22f: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x230: V180 = 0x4
0x232: V181 = CALLDATALOAD 0x4
0x233: V182 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x234: V183 = 0x32a
0x237: JUMP 0x32a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x238, V182]
Exit stack: [V11, 0x238, V182]

================================

Block 0x238
[0x238:0x249]
---
Predecessors: [0x32a, 0x33c, 0x37a]
Successors: []
---
0x238 JUMPDEST
0x239 PUSH1 0x40
0x23b MLOAD
0x23c SWAP1
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 SWAP2
0x247 SUB
0x248 SWAP1
0x249 RETURN
---
0x238: JUMPDEST 
0x239: V184 = 0x40
0x23b: V185 = M[0x40]
0x23e: M[V185] = S0
0x23f: V186 = 0x20
0x241: V187 = ADD 0x20 V185
0x242: V188 = 0x40
0x244: V189 = M[0x40]
0x247: V190 = SUB V187 V189
0x249: RETURN V189 V190
---
Entry stack: [V11, 0x238, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x238]

================================

Block 0x24a
[0x24a:0x250]
---
Predecessors: [0x4b]
Successors: [0x251, 0x255]
---
0x24a JUMPDEST
0x24b CALLVALUE
0x24c ISZERO
0x24d PUSH2 0x255
0x250 JUMPI
---
0x24a: JUMPDEST 
0x24b: V191 = CALLVALUE
0x24c: V192 = ISZERO V191
0x24d: V193 = 0x255
0x250: JUMPI 0x255 V192
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x251
[0x251:0x254]
---
Predecessors: [0x24a]
Successors: []
---
0x251 PUSH1 0x0
0x253 DUP1
0x254 REVERT
---
0x251: V194 = 0x0
0x254: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x255
[0x255:0x25c]
---
Predecessors: [0x24a]
Successors: [0x33c]
---
0x255 JUMPDEST
0x256 PUSH2 0x238
0x259 PUSH2 0x33c
0x25c JUMP
---
0x255: JUMPDEST 
0x256: V195 = 0x238
0x259: V196 = 0x33c
0x25c: JUMP 0x33c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V11, 0x238]

================================

Block 0x25d
[0x25d:0x263]
---
Predecessors: [0x56]
Successors: [0x264, 0x268]
---
0x25d JUMPDEST
0x25e CALLVALUE
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x25d: JUMPDEST 
0x25e: V197 = CALLVALUE
0x25f: V198 = ISZERO V197
0x260: V199 = 0x268
0x263: JUMPI 0x268 V198
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x25d]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V200 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x25d]
Successors: [0x342]
---
0x268 JUMPDEST
0x269 PUSH2 0x270
0x26c PUSH2 0x342
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V201 = 0x270
0x26c: V202 = 0x342
0x26f: JUMP 0x342
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V11, 0x270]

================================

Block 0x270
[0x270:0x271]
---
Predecessors: [0x45f]
Successors: []
---
0x270 JUMPDEST
0x271 STOP
---
0x270: JUMPDEST 
0x271: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x61]
Successors: [0x279, 0x27d]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V203 = CALLVALUE
0x274: V204 = ISZERO V203
0x275: V205 = 0x27d
0x278: JUMPI 0x27d V204
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x272]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V206 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x272]
Successors: [0x36b]
---
0x27d JUMPDEST
0x27e PUSH2 0x1fd
0x281 PUSH2 0x36b
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V207 = 0x1fd
0x281: V208 = 0x36b
0x284: JUMP 0x36b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1fd]
Exit stack: [V11, 0x1fd]

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0x6c]
Successors: [0x28c, 0x290]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V209 = CALLVALUE
0x287: V210 = ISZERO V209
0x288: V211 = 0x290
0x28b: JUMPI 0x290 V210
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x285]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V212 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x290
[0x290:0x297]
---
Predecessors: [0x285]
Successors: [0x37a]
---
0x290 JUMPDEST
0x291 PUSH2 0x238
0x294 PUSH2 0x37a
0x297 JUMP
---
0x290: JUMPDEST 
0x291: V213 = 0x238
0x294: V214 = 0x37a
0x297: JUMP 0x37a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V11, 0x238]

================================

Block 0x298
[0x298:0x29e]
---
Predecessors: [0x77]
Successors: [0x29f, 0x2a3]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a ISZERO
0x29b PUSH2 0x2a3
0x29e JUMPI
---
0x298: JUMPDEST 
0x299: V215 = CALLVALUE
0x29a: V216 = ISZERO V215
0x29b: V217 = 0x2a3
0x29e: JUMPI 0x2a3 V216
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x298]
Successors: []
---
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 REVERT
---
0x29f: V218 = 0x0
0x2a2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a3
[0x2a3:0x2b6]
---
Predecessors: [0x298]
Successors: [0x380]
---
0x2a3 JUMPDEST
0x2a4 PUSH2 0x270
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af PUSH1 0x4
0x2b1 CALLDATALOAD
0x2b2 AND
0x2b3 PUSH2 0x380
0x2b6 JUMP
---
0x2a3: JUMPDEST 
0x2a4: V219 = 0x270
0x2a7: V220 = 0x1
0x2a9: V221 = 0xa0
0x2ab: V222 = 0x2
0x2ad: V223 = EXP 0x2 0xa0
0x2ae: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V225 = 0x4
0x2b1: V226 = CALLDATALOAD 0x4
0x2b2: V227 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V228 = 0x380
0x2b6: JUMP 0x380
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x270, V227]
Exit stack: [V11, 0x270, V227]

================================

Block 0x2b7
[0x2b7:0x2bd]
---
Predecessors: [0x82]
Successors: [0x2be, 0x2c2]
---
0x2b7 JUMPDEST
0x2b8 CALLVALUE
0x2b9 ISZERO
0x2ba PUSH2 0x2c2
0x2bd JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V229 = CALLVALUE
0x2b9: V230 = ISZERO V229
0x2ba: V231 = 0x2c2
0x2bd: JUMPI 0x2c2 V230
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2be
[0x2be:0x2c1]
---
Predecessors: [0x2b7]
Successors: []
---
0x2be PUSH1 0x0
0x2c0 DUP1
0x2c1 REVERT
---
0x2be: V232 = 0x0
0x2c1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c2
[0x2c2:0x2c9]
---
Predecessors: [0x2b7]
Successors: [0x3a7]
---
0x2c2 JUMPDEST
0x2c3 PUSH2 0x270
0x2c6 PUSH2 0x3a7
0x2c9 JUMP
---
0x2c2: JUMPDEST 
0x2c3: V233 = 0x270
0x2c6: V234 = 0x3a7
0x2c9: JUMP 0x3a7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V11, 0x270]

================================

Block 0x2ca
[0x2ca:0x2d7]
---
Predecessors: [0x8d, 0xb8]
Successors: [0x2d8, 0x2d9]
---
0x2ca JUMPDEST
0x2cb PUSH1 0x0
0x2cd DUP3
0x2ce DUP3
0x2cf ADD
0x2d0 DUP4
0x2d1 DUP2
0x2d2 LT
0x2d3 ISZERO
0x2d4 PUSH2 0x2d9
0x2d7 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V235 = 0x0
0x2cf: V236 = ADD S0 S1
0x2d2: V237 = LT V236 S1
0x2d3: V238 = ISZERO V237
0x2d4: V239 = 0x2d9
0x2d7: JUMPI 0x2d9 V238
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S9, S8, V82, 0xa9059cbb, V84, S4, S3, {0xb8, 0xe4}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V236]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S9, S8, V82, 0xa9059cbb, V84, S4, S3, {0xb8, 0xe4}, S1, S0, 0x0, V236]

================================

Block 0x2d8
[0x2d8:0x2d8]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d8 INVALID
---
0x2d8: INVALID 
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S6, S5, {0xb8, 0xe4}, S3, S2, 0x0, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S6, S5, {0xb8, 0xe4}, S3, S2, 0x0, V236]

================================

Block 0x2d9
[0x2d9:0x2df]
---
Predecessors: [0x2ca, 0x2fc]
Successors: [0xb8, 0xe4, 0x117]
---
0x2d9 JUMPDEST
0x2da SWAP4
0x2db SWAP3
0x2dc POP
0x2dd POP
0x2de POP
0x2df JUMP
---
0x2d9: JUMPDEST 
0x2df: JUMP {0xb8, 0xe4, 0x117}
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S16, S15, V82, 0xa9059cbb, V84, S11, S10, V82, 0xa9059cbb, V84, S6, S5, {0xb8, 0xe4, 0x117}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S16, S15, V82, 0xa9059cbb, V84, S11, S10, V82, 0xa9059cbb, V84, S6, S5, S0]

================================

Block 0x2e0
[0x2e0:0x2ec]
---
Predecessors: [0xe4]
Successors: [0x2ed, 0x2fc]
---
0x2e0 JUMPDEST
0x2e1 PUSH1 0x0
0x2e3 DUP3
0x2e4 DUP3
0x2e5 MUL
0x2e6 DUP4
0x2e7 ISZERO
0x2e8 DUP1
0x2e9 PUSH2 0x2fc
0x2ec JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V240 = 0x0
0x2e5: V241 = MUL 0x2710 S1
0x2e7: V242 = ISZERO S1
0x2e9: V243 = 0x2fc
0x2ec: JUMPI 0x2fc V242
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S14, S13, V82, 0xa9059cbb, V84, S9, S8, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S1, 0x2710]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V241, V242]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S14, S13, V82, 0xa9059cbb, V84, S9, S8, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S1, 0x2710, 0x0, V241, V242]

================================

Block 0x2ed
[0x2ed:0x2f7]
---
Predecessors: [0x2e0]
Successors: [0x2f8, 0x2f9]
---
0x2ed POP
0x2ee DUP3
0x2ef DUP5
0x2f0 DUP3
0x2f1 DUP2
0x2f2 ISZERO
0x2f3 ISZERO
0x2f4 PUSH2 0x2f9
0x2f7 JUMPI
---
0x2f2: V244 = ISZERO S4
0x2f3: V245 = ISZERO V244
0x2f4: V246 = 0x2f9
0x2f7: JUMPI 0x2f9 V245
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S17, S16, V82, 0xa9059cbb, V84, S12, S11, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S4, 0x2710, 0x0, V241, V242]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S17, S16, V82, 0xa9059cbb, V84, S12, S11, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S4, 0x2710, 0x0, V241, 0x2710, S4, V241]

================================

Block 0x2f8
[0x2f8:0x2f8]
---
Predecessors: [0x2ed]
Successors: []
---
0x2f8 INVALID
---
0x2f8: INVALID 
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S19, S18, V82, 0xa9059cbb, V84, S14, S13, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S6, 0x2710, 0x0, V241, 0x2710, S1, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S19, S18, V82, 0xa9059cbb, V84, S14, S13, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S6, 0x2710, 0x0, V241, 0x2710, S1, V241]

================================

Block 0x2f9
[0x2f9:0x2fb]
---
Predecessors: [0x2ed]
Successors: [0x2fc]
---
0x2f9 JUMPDEST
0x2fa DIV
0x2fb EQ
---
0x2f9: JUMPDEST 
0x2fa: V247 = DIV V241 S1
0x2fb: V248 = EQ V247 0x2710
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S19, S18, V82, 0xa9059cbb, V84, S14, S13, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S6, 0x2710, 0x0, V241, 0x2710, S1, V241]
Stack pops: 3
Stack additions: [V248]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S19, S18, V82, 0xa9059cbb, V84, S14, S13, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S6, 0x2710, 0x0, V241, V248]

================================

Block 0x2fc
[0x2fc:0x302]
---
Predecessors: [0x2e0, 0x2f9]
Successors: [0x2d9, 0x303]
---
0x2fc JUMPDEST
0x2fd ISZERO
0x2fe ISZERO
0x2ff PUSH2 0x2d9
0x302 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V249 = ISZERO S0
0x2fe: V250 = ISZERO V249
0x2ff: V251 = 0x2d9
0x302: JUMPI 0x2d9 V250
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S17, S16, V82, 0xa9059cbb, V84, S12, S11, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S4, 0x2710, 0x0, V241, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S17, S16, V82, 0xa9059cbb, V84, S12, S11, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S4, 0x2710, 0x0, V241]

================================

Block 0x303
[0x303:0x303]
---
Predecessors: [0x2fc]
Successors: []
---
0x303 INVALID
---
0x303: INVALID 
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S16, S15, V82, 0xa9059cbb, V84, S11, S10, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S3, 0x2710, 0x0, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S16, S15, V82, 0xa9059cbb, V84, S11, S10, V82, 0xa9059cbb, V84, 0x123, V76, 0x117, S3, 0x2710, 0x0, V241]

================================

Block 0x304
[0x304:0x310]
---
Predecessors: [0x117]
Successors: [0x311, 0x312]
---
0x304 JUMPDEST
0x305 PUSH1 0x0
0x307 DUP1
0x308 DUP3
0x309 DUP5
0x30a DUP2
0x30b ISZERO
0x30c ISZERO
0x30d PUSH2 0x312
0x310 JUMPI
---
0x304: JUMPDEST 
0x305: V252 = 0x0
0x30b: V253 = ISZERO S0
0x30c: V254 = ISZERO V253
0x30d: V255 = 0x312
0x310: JUMPI 0x312 V254
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S7, S6, V82, 0xa9059cbb, V84, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S7, S6, V82, 0xa9059cbb, V84, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x311
[0x311:0x311]
---
Predecessors: [0x304]
Successors: []
---
0x311 INVALID
---
0x311: INVALID 
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S11, S10, V82, 0xa9059cbb, V84, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S11, S10, V82, 0xa9059cbb, V84, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x312
[0x312:0x31a]
---
Predecessors: [0x304]
Successors: [0x123]
---
0x312 JUMPDEST
0x313 DIV
0x314 SWAP5
0x315 SWAP4
0x316 POP
0x317 POP
0x318 POP
0x319 POP
0x31a JUMP
---
0x312: JUMPDEST 
0x313: V256 = DIV S0 S1
0x31a: JUMP S6
---
Entry stack: [V11, V49, V82, 0xa9059cbb, V84, S11, S10, V82, 0xa9059cbb, V84, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V256]
Exit stack: [V11, V49, V82, 0xa9059cbb, V84, S11, S10, V82, 0xa9059cbb, V84, V256]

================================

Block 0x31b
[0x31b:0x329]
---
Predecessors: [0x1f5]
Successors: [0x1fd]
---
0x31b JUMPDEST
0x31c PUSH1 0x3
0x31e SLOAD
0x31f PUSH1 0x1
0x321 PUSH1 0xa0
0x323 PUSH1 0x2
0x325 EXP
0x326 SUB
0x327 AND
0x328 DUP2
0x329 JUMP
---
0x31b: JUMPDEST 
0x31c: V257 = 0x3
0x31e: V258 = S[0x3]
0x31f: V259 = 0x1
0x321: V260 = 0xa0
0x323: V261 = 0x2
0x325: V262 = EXP 0x2 0xa0
0x326: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x327: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x329: JUMP 0x1fd
---
Entry stack: [V11, 0x1fd]
Stack pops: 1
Stack additions: [S0, V264]
Exit stack: [V11, 0x1fd, V264]

================================

Block 0x32a
[0x32a:0x33b]
---
Predecessors: [0x224]
Successors: [0x238]
---
0x32a JUMPDEST
0x32b PUSH1 0x4
0x32d PUSH1 0x20
0x32f MSTORE
0x330 PUSH1 0x0
0x332 SWAP1
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x40
0x337 SWAP1
0x338 SHA3
0x339 SLOAD
0x33a DUP2
0x33b JUMP
---
0x32a: JUMPDEST 
0x32b: V265 = 0x4
0x32d: V266 = 0x20
0x32f: M[0x20] = 0x4
0x330: V267 = 0x0
0x334: M[0x0] = V182
0x335: V268 = 0x40
0x338: V269 = SHA3 0x0 0x40
0x339: V270 = S[V269]
0x33b: JUMP 0x238
---
Entry stack: [V11, 0x238, V182]
Stack pops: 2
Stack additions: [S1, V270]
Exit stack: [V11, 0x238, V270]

================================

Block 0x33c
[0x33c:0x341]
---
Predecessors: [0x255]
Successors: [0x238]
---
0x33c JUMPDEST
0x33d PUSH1 0x1
0x33f SLOAD
0x340 DUP2
0x341 JUMP
---
0x33c: JUMPDEST 
0x33d: V271 = 0x1
0x33f: V272 = S[0x1]
0x341: JUMP 0x238
---
Entry stack: [V11, 0x238]
Stack pops: 1
Stack additions: [S0, V272]
Exit stack: [V11, 0x238, V272]

================================

Block 0x342
[0x342:0x358]
---
Predecessors: [0x268]
Successors: [0x359, 0x35d]
---
0x342 JUMPDEST
0x343 PUSH1 0x0
0x345 SLOAD
0x346 CALLER
0x347 PUSH1 0x1
0x349 PUSH1 0xa0
0x34b PUSH1 0x2
0x34d EXP
0x34e SUB
0x34f SWAP1
0x350 DUP2
0x351 AND
0x352 SWAP2
0x353 AND
0x354 EQ
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x342: JUMPDEST 
0x343: V273 = 0x0
0x345: V274 = S[0x0]
0x346: V275 = CALLER
0x347: V276 = 0x1
0x349: V277 = 0xa0
0x34b: V278 = 0x2
0x34d: V279 = EXP 0x2 0xa0
0x34e: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x353: V282 = AND V274 0xffffffffffffffffffffffffffffffffffffffff
0x354: V283 = EQ V282 V281
0x355: V284 = 0x35d
0x358: JUMPI 0x35d V283
---
Entry stack: [V11, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x342]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V285 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270]

================================

Block 0x35d
[0x35d:0x36a]
---
Predecessors: [0x342]
Successors: []
---
0x35d JUMPDEST
0x35e PUSH1 0x0
0x360 SLOAD
0x361 PUSH1 0x1
0x363 PUSH1 0xa0
0x365 PUSH1 0x2
0x367 EXP
0x368 SUB
0x369 AND
0x36a SELFDESTRUCT
---
0x35d: JUMPDEST 
0x35e: V286 = 0x0
0x360: V287 = S[0x0]
0x361: V288 = 0x1
0x363: V289 = 0xa0
0x365: V290 = 0x2
0x367: V291 = EXP 0x2 0xa0
0x368: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x369: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x36a: SELFDESTRUCT V293
---
Entry stack: [V11, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270]

================================

Block 0x36b
[0x36b:0x379]
---
Predecessors: [0x27d]
Successors: [0x1fd]
---
0x36b JUMPDEST
0x36c PUSH1 0x0
0x36e SLOAD
0x36f PUSH1 0x1
0x371 PUSH1 0xa0
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 AND
0x378 DUP2
0x379 JUMP
---
0x36b: JUMPDEST 
0x36c: V294 = 0x0
0x36e: V295 = S[0x0]
0x36f: V296 = 0x1
0x371: V297 = 0xa0
0x373: V298 = 0x2
0x375: V299 = EXP 0x2 0xa0
0x376: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x377: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x379: JUMP 0x1fd
---
Entry stack: [V11, 0x1fd]
Stack pops: 1
Stack additions: [S0, V301]
Exit stack: [V11, 0x1fd, V301]

================================

Block 0x37a
[0x37a:0x37f]
---
Predecessors: [0x290]
Successors: [0x238]
---
0x37a JUMPDEST
0x37b PUSH1 0x2
0x37d SLOAD
0x37e DUP2
0x37f JUMP
---
0x37a: JUMPDEST 
0x37b: V302 = 0x2
0x37d: V303 = S[0x2]
0x37f: JUMP 0x238
---
Entry stack: [V11, 0x238]
Stack pops: 1
Stack additions: [S0, V303]
Exit stack: [V11, 0x238, V303]

================================

Block 0x380
[0x380:0x396]
---
Predecessors: [0x2a3]
Successors: [0x397, 0x39b]
---
0x380 JUMPDEST
0x381 PUSH1 0x0
0x383 SLOAD
0x384 CALLER
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d SWAP1
0x38e DUP2
0x38f AND
0x390 SWAP2
0x391 AND
0x392 EQ
0x393 PUSH2 0x39b
0x396 JUMPI
---
0x380: JUMPDEST 
0x381: V304 = 0x0
0x383: V305 = S[0x0]
0x384: V306 = CALLER
0x385: V307 = 0x1
0x387: V308 = 0xa0
0x389: V309 = 0x2
0x38b: V310 = EXP 0x2 0xa0
0x38c: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x391: V313 = AND V305 0xffffffffffffffffffffffffffffffffffffffff
0x392: V314 = EQ V313 V312
0x393: V315 = 0x39b
0x396: JUMPI 0x39b V314
---
Entry stack: [V11, 0x270, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270, V227]

================================

Block 0x397
[0x397:0x39a]
---
Predecessors: [0x380]
Successors: []
---
0x397 PUSH1 0x0
0x399 DUP1
0x39a REVERT
---
0x397: V316 = 0x0
0x39a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x270, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270, V227]

================================

Block 0x39b
[0x39b:0x3a6]
---
Predecessors: [0x380]
Successors: []
---
0x39b JUMPDEST
0x39c DUP1
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 AND
0x3a6 SELFDESTRUCT
---
0x39b: JUMPDEST 
0x39d: V317 = 0x1
0x39f: V318 = 0xa0
0x3a1: V319 = 0x2
0x3a3: V320 = EXP 0x2 0xa0
0x3a4: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a5: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x3a6: SELFDESTRUCT V322
---
Entry stack: [V11, 0x270, V227]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x270, V227]

================================

Block 0x3a7
[0x3a7:0x3bd]
---
Predecessors: [0x2c2]
Successors: [0x3be, 0x3c2]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x0
0x3aa SLOAD
0x3ab CALLER
0x3ac PUSH1 0x1
0x3ae PUSH1 0xa0
0x3b0 PUSH1 0x2
0x3b2 EXP
0x3b3 SUB
0x3b4 SWAP1
0x3b5 DUP2
0x3b6 AND
0x3b7 SWAP2
0x3b8 AND
0x3b9 EQ
0x3ba PUSH2 0x3c2
0x3bd JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V323 = 0x0
0x3aa: V324 = S[0x0]
0x3ab: V325 = CALLER
0x3ac: V326 = 0x1
0x3ae: V327 = 0xa0
0x3b0: V328 = 0x2
0x3b2: V329 = EXP 0x2 0xa0
0x3b3: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b6: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x3b8: V332 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x3b9: V333 = EQ V332 V331
0x3ba: V334 = 0x3c2
0x3bd: JUMPI 0x3c2 V333
---
Entry stack: [V11, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270]

================================

Block 0x3be
[0x3be:0x3c1]
---
Predecessors: [0x3a7]
Successors: []
---
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 REVERT
---
0x3be: V335 = 0x0
0x3c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270]

================================

Block 0x3c2
[0x3c2:0x45a]
---
Predecessors: [0x3a7]
Successors: [0x45b, 0x45f]
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 SLOAD
0x3c7 PUSH1 0x1
0x3c9 SLOAD
0x3ca PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x3eb SWAP3
0x3ec PUSH1 0x1
0x3ee PUSH1 0xa0
0x3f0 PUSH1 0x2
0x3f2 EXP
0x3f3 SUB
0x3f4 SWAP1
0x3f5 SWAP3
0x3f6 AND
0x3f7 SWAP2
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 SWAP1
0x404 SWAP4
0x405 AND
0x406 DUP4
0x407 MSTORE
0x408 PUSH1 0x20
0x40a DUP4
0x40b ADD
0x40c SWAP2
0x40d SWAP1
0x40e SWAP2
0x40f MSTORE
0x410 ISZERO
0x411 ISZERO
0x412 PUSH1 0x40
0x414 DUP1
0x415 DUP4
0x416 ADD
0x417 SWAP2
0x418 SWAP1
0x419 SWAP2
0x41a MSTORE
0x41b PUSH1 0x60
0x41d SWAP1
0x41e SWAP2
0x41f ADD
0x420 SWAP1
0x421 MLOAD
0x422 DUP1
0x423 SWAP2
0x424 SUB
0x425 SWAP1
0x426 LOG1
0x427 PUSH1 0x0
0x429 SLOAD
0x42a PUSH1 0x1
0x42c SLOAD
0x42d PUSH1 0x1
0x42f PUSH1 0xa0
0x431 PUSH1 0x2
0x433 EXP
0x434 SUB
0x435 SWAP1
0x436 SWAP2
0x437 AND
0x438 SWAP1
0x439 DUP1
0x43a ISZERO
0x43b PUSH2 0x8fc
0x43e MUL
0x43f SWAP1
0x440 PUSH1 0x40
0x442 MLOAD
0x443 PUSH1 0x0
0x445 PUSH1 0x40
0x447 MLOAD
0x448 DUP1
0x449 DUP4
0x44a SUB
0x44b DUP2
0x44c DUP6
0x44d DUP9
0x44e DUP9
0x44f CALL
0x450 SWAP4
0x451 POP
0x452 POP
0x453 POP
0x454 POP
0x455 ISZERO
0x456 ISZERO
0x457 PUSH2 0x45f
0x45a JUMPI
---
0x3c2: JUMPDEST 
0x3c3: V336 = 0x0
0x3c6: V337 = S[0x0]
0x3c7: V338 = 0x1
0x3c9: V339 = S[0x1]
0x3ca: V340 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x3ec: V341 = 0x1
0x3ee: V342 = 0xa0
0x3f0: V343 = 0x2
0x3f2: V344 = EXP 0x2 0xa0
0x3f3: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f6: V346 = AND V337 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V347 = 0x40
0x3fa: V348 = M[0x40]
0x3fb: V349 = 0x1
0x3fd: V350 = 0xa0
0x3ff: V351 = 0x2
0x401: V352 = EXP 0x2 0xa0
0x402: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x405: V354 = AND V346 0xffffffffffffffffffffffffffffffffffffffff
0x407: M[V348] = V354
0x408: V355 = 0x20
0x40b: V356 = ADD V348 0x20
0x40f: M[V356] = V339
0x410: V357 = ISZERO 0x0
0x411: V358 = ISZERO 0x1
0x412: V359 = 0x40
0x416: V360 = ADD V348 0x40
0x41a: M[V360] = 0x0
0x41b: V361 = 0x60
0x41f: V362 = ADD V348 0x60
0x421: V363 = M[0x40]
0x424: V364 = SUB V362 V363
0x426: LOG V363 V364 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x427: V365 = 0x0
0x429: V366 = S[0x0]
0x42a: V367 = 0x1
0x42c: V368 = S[0x1]
0x42d: V369 = 0x1
0x42f: V370 = 0xa0
0x431: V371 = 0x2
0x433: V372 = EXP 0x2 0xa0
0x434: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x437: V374 = AND V366 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V375 = ISZERO V368
0x43b: V376 = 0x8fc
0x43e: V377 = MUL 0x8fc V375
0x440: V378 = 0x40
0x442: V379 = M[0x40]
0x443: V380 = 0x0
0x445: V381 = 0x40
0x447: V382 = M[0x40]
0x44a: V383 = SUB V379 V382
0x44f: V384 = CALL V377 V374 V368 V382 V383 V382 0x0
0x455: V385 = ISZERO V384
0x456: V386 = ISZERO V385
0x457: V387 = 0x45f
0x45a: JUMPI 0x45f V386
---
Entry stack: [V11, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270]

================================

Block 0x45b
[0x45b:0x45e]
---
Predecessors: [0x3c2]
Successors: []
---
0x45b PUSH1 0x0
0x45d DUP1
0x45e REVERT
---
0x45b: V388 = 0x0
0x45e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x270]

================================

Block 0x45f
[0x45f:0x460]
---
Predecessors: [0x3c2]
Successors: [0x270]
---
0x45f JUMPDEST
0x460 JUMP
---
0x45f: JUMPDEST 
0x460: JUMP 0x270
---
Entry stack: [V11, 0x270]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x461
[0x461:0x46c]
---
Predecessors: []
Successors: [0x46d]
---
0x461 STOP
0x462 LOG1
0x463 PUSH6 0x627a7a723058
0x46a SHA3
0x46b MISSING 0x4a
0x46c SWAP13
---
0x461: STOP 
0x462: LOG S0 S1 S2
0x463: V389 = 0x627a7a723058
0x46a: V390 = SHA3 0x627a7a723058 S3
0x46b: MISSING 0x4a
0x46c: NOP 
---
Entry stack: []
Stack pops: 0
Stack additions: [V390, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0]
Exit stack: []

================================

Block 0x46d
[0x46d:0x47f]
---
Predecessors: [0x461]
Successors: [0x480]
Has unresolved jump.
---
0x46d JUMPDEST
0x46e MISSING 0xc4
0x46f MISSING 0x25
0x470 SUB
0x471 MISSING 0xe5
0x472 SDIV
0x473 PUSH10 0x3ec73ad8b1aaf9d7d3be
0x47e MISSING 0xa6
0x47f JUMPI
---
0x46d: JUMPDEST 
0x46e: MISSING 0xc4
0x46f: MISSING 0x25
0x470: V391 = SUB S0 S1
0x471: MISSING 0xe5
0x472: V392 = SDIV S0 S1
0x473: V393 = 0x3ec73ad8b1aaf9d7d3be
0x47e: MISSING 0xa6
0x47f: JUMPI S0 S1
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V391, 0x3ec73ad8b1aaf9d7d3be, V392]
Exit stack: []

================================

Block 0x480
[0x480:0x49a]
---
Predecessors: [0x46d]
Successors: []
---
0x480 SDIV
0x481 MISSING 0x24
0x482 MISSING 0xf6
0x483 SLOAD
0x484 EXTCODESIZE
0x485 PUSH21 0x89359704620029
---
0x480: V394 = SDIV S0 S1
0x481: MISSING 0x24
0x482: MISSING 0xf6
0x483: V395 = S[S0]
0x484: V396 = EXTCODESIZE V395
0x485: V397 = 0x89359704620029
---
Entry stack: []
Stack pops: 6
Stack additions: [0x89359704620029, V396]
Exit stack: []

================================

Function 0:
Public function signature: 0x6e66f6e9
Entry block: 0x1ea
Exit block: 0x1fd
Body: 0x1ea, 0x1f1, 0x1f5, 0x1fd, 0x31b

Function 1:
Public function signature: 0x70a08231
Entry block: 0x219
Exit block: 0x238
Body: 0x219, 0x220, 0x224, 0x238, 0x32a

Function 2:
Public function signature: 0x7b3e5e7b
Entry block: 0x24a
Exit block: 0x238
Body: 0x238, 0x24a, 0x251, 0x255, 0x33c

Function 3:
Public function signature: 0x83197ef0
Entry block: 0x25d
Exit block: 0x35d
Body: 0x25d, 0x264, 0x268, 0x342, 0x359, 0x35d

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x272
Exit block: 0x1fd
Body: 0x1fd, 0x272, 0x279, 0x27d, 0x36b

Function 5:
Public function signature: 0xa035b1fe
Entry block: 0x285
Exit block: 0x238
Body: 0x238, 0x285, 0x28c, 0x290, 0x37a

Function 6:
Public function signature: 0xf5074f41
Entry block: 0x298
Exit block: 0x397
Body: 0x298, 0x29f, 0x2a3, 0x380, 0x397, 0x39b

Function 7:
Public function signature: 0xfd6b7ef8
Entry block: 0x2b7
Exit block: 0x270
Body: 0x270, 0x2b7, 0x2be, 0x2c2, 0x3a7, 0x3be, 0x3c2, 0x45b, 0x45f

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x311
Body: 0x8d, 0xb8, 0x311

Function 9:
Private function
Entry block: 0x2ca
Exit block: 0x2d9
Body: 0x2ca, 0x2d9

