Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x27]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x27
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x27
0x9: JUMPI 0x27 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x1c]
---
Predecessors: [0x0]
Successors: [0x1d, 0x5e]
---
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 PUSH4 0x6b9f96ea
0x18 DUP2
0x19 EQ
0x1a PUSH1 0x5e
0x1c JUMPI
---
0xa: V5 = 0xe0
0xc: V6 = 0x2
0xe: V7 = EXP 0x2 0xe0
0xf: V8 = 0x0
0x11: V9 = CALLDATALOAD 0x0
0x12: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x13: V11 = 0x6b9f96ea
0x19: V12 = EQ V10 0x6b9f96ea
0x1a: V13 = 0x5e
0x1c: JUMPI 0x5e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1d
[0x1d:0x26]
---
Predecessors: [0xa]
Successors: [0x27, 0x68]
---
0x1d DUP1
0x1e PUSH4 0xca325469
0x23 EQ
0x24 PUSH1 0x68
0x26 JUMPI
---
0x1e: V14 = 0xca325469
0x23: V15 = EQ 0xca325469 V10
0x24: V16 = 0x68
0x26: JUMPI 0x68 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x27
[0x27:0x2b]
---
Predecessors: [0x0, 0x1d]
Successors: [0x2c]
---
0x27 JUMPDEST
0x28 CALLVALUE
0x29 PUSH1 0x2
0x2b JUMPI
---
0x27: JUMPDEST 
0x28: V17 = CALLVALUE
0x29: V18 = 0x2
0x2b: THROWI V17
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c
[0x2c:0x2d]
---
Predecessors: [0x27]
Successors: [0x2e]
---
0x2c PUSH1 0x7d
---
0x2c: V19 = 0x7d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V10, 0x7d]

================================

Block 0x2e
[0x2e:0x5d]
---
Predecessors: [0x2c, 0x63]
Successors: [0x7d]
---
0x2e JUMPDEST
0x2f PUSH1 0x0
0x31 DUP1
0x32 SLOAD
0x33 PUSH1 0x40
0x35 MLOAD
0x36 PUSH1 0x1
0x38 PUSH1 0xa0
0x3a PUSH1 0x2
0x3c EXP
0x3d SUB
0x3e SWAP2
0x3f DUP3
0x40 AND
0x41 SWAP3
0x42 ADDRESS
0x43 SWAP1
0x44 SWAP3
0x45 AND
0x46 BALANCE
0x47 DUP1
0x48 ISZERO
0x49 PUSH2 0x8fc
0x4c MUL
0x4d SWAP3
0x4e SWAP1
0x4f SWAP2
0x50 SWAP1
0x51 DUP2
0x52 DUP2
0x53 DUP2
0x54 DUP6
0x55 DUP9
0x56 DUP9
0x57 CALL
0x58 POP
0x59 POP
0x5a POP
0x5b POP
0x5c POP
0x5d JUMP
---
0x2e: JUMPDEST 
0x2f: V20 = 0x0
0x32: V21 = S[0x0]
0x33: V22 = 0x40
0x35: V23 = M[0x40]
0x36: V24 = 0x1
0x38: V25 = 0xa0
0x3a: V26 = 0x2
0x3c: V27 = EXP 0x2 0xa0
0x3d: V28 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x42: V30 = ADDRESS
0x45: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x46: V32 = BALANCE V31
0x48: V33 = ISZERO V32
0x49: V34 = 0x8fc
0x4c: V35 = MUL 0x8fc V33
0x57: V36 = CALL V35 V29 V32 V23 0x0 V23 0x0
0x5d: JUMP 0x7d
---
Entry stack: [V10, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x5e
[0x5e:0x62]
---
Predecessors: [0xa]
Successors: [0x63]
---
0x5e JUMPDEST
0x5f CALLVALUE
0x60 PUSH1 0x2
0x62 JUMPI
---
0x5e: JUMPDEST 
0x5f: V37 = CALLVALUE
0x60: V38 = 0x2
0x62: THROWI V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x67]
---
Predecessors: [0x5e]
Successors: [0x2e]
---
0x63 PUSH1 0x7d
0x65 PUSH1 0x2e
0x67 JUMP
---
0x63: V39 = 0x7d
0x65: V40 = 0x2e
0x67: JUMP 0x2e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V10, 0x7d]

================================

Block 0x68
[0x68:0x6c]
---
Predecessors: [0x1d]
Successors: [0x6d]
---
0x68 JUMPDEST
0x69 CALLVALUE
0x6a PUSH1 0x2
0x6c JUMPI
---
0x68: JUMPDEST 
0x69: V41 = CALLVALUE
0x6a: V42 = 0x2
0x6c: THROWI V41
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d
[0x6d:0x7c]
---
Predecessors: [0x68]
Successors: [0x7f]
---
0x6d PUSH1 0x7f
0x6f PUSH1 0x0
0x71 SLOAD
0x72 PUSH1 0x1
0x74 PUSH1 0xa0
0x76 PUSH1 0x2
0x78 EXP
0x79 SUB
0x7a AND
0x7b DUP2
0x7c JUMP
---
0x6d: V43 = 0x7f
0x6f: V44 = 0x0
0x71: V45 = S[0x0]
0x72: V46 = 0x1
0x74: V47 = 0xa0
0x76: V48 = 0x2
0x78: V49 = EXP 0x2 0xa0
0x79: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x7c: JUMP 0x7f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7f, V51]
Exit stack: [V10, 0x7f, V51]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x2e]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x9b]
---
Predecessors: [0x6d]
Successors: []
---
0x7f JUMPDEST
0x80 PUSH1 0x40
0x82 DUP1
0x83 MLOAD
0x84 PUSH1 0x1
0x86 PUSH1 0xa0
0x88 PUSH1 0x2
0x8a EXP
0x8b SUB
0x8c SWAP3
0x8d SWAP1
0x8e SWAP3
0x8f AND
0x90 DUP3
0x91 MSTORE
0x92 MLOAD
0x93 SWAP1
0x94 DUP2
0x95 SWAP1
0x96 SUB
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b RETURN
---
0x7f: JUMPDEST 
0x80: V52 = 0x40
0x83: V53 = M[0x40]
0x84: V54 = 0x1
0x86: V55 = 0xa0
0x88: V56 = 0x2
0x8a: V57 = EXP 0x2 0xa0
0x8b: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x91: M[V53] = V59
0x92: V60 = M[0x40]
0x96: V61 = SUB V53 V60
0x97: V62 = 0x20
0x99: V63 = ADD 0x20 V61
0x9b: RETURN V60 V63
---
Entry stack: [V10, 0x7f, V51]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7f]

================================

Function 0:
Public function signature: 0x6b9f96ea
Entry block: 0x5e
Exit block: 0x7d
Body: 0x2e, 0x5e, 0x63, 0x7d

Function 1:
Public function signature: 0xca325469
Entry block: 0x68
Exit block: 0x7f
Body: 0x68, 0x6d, 0x7f

Function 2:
Public fallback function
Entry block: 0x27
Exit block: 0x7d
Body: 0x27, 0x2c, 0x2e, 0x7d

