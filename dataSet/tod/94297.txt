Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xa3]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3cebb823
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xa3
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3cebb823
0x20: V14 = EQ V12 0x3cebb823
0x21: V15 = 0xa3
0x24: JUMPI 0xa3 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xc4]
---
0x25 DUP1
0x26 PUSH4 0x4a393149
0x2b EQ
0x2c PUSH2 0xc4
0x2f JUMPI
---
0x26: V16 = 0x4a393149
0x2b: V17 = EQ 0x4a393149 V12
0x2c: V18 = 0xc4
0x2f: JUMPI 0xc4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x100]
---
0x30 DUP1
0x31 PUSH4 0x50520b1f
0x36 EQ
0x37 PUSH2 0x100
0x3a JUMPI
---
0x31: V19 = 0x50520b1f
0x36: V20 = EQ 0x50520b1f V12
0x37: V21 = 0x100
0x3a: JUMPI 0x100 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x12f]
---
0x3b DUP1
0x3c PUSH4 0x79ba5097
0x41 EQ
0x42 PUSH2 0x12f
0x45 JUMPI
---
0x3c: V22 = 0x79ba5097
0x41: V23 = EQ 0x79ba5097 V12
0x42: V24 = 0x12f
0x45: JUMPI 0x12f V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x144]
---
0x46 DUP1
0x47 PUSH4 0x8317f65c
0x4c EQ
0x4d PUSH2 0x144
0x50 JUMPI
---
0x47: V25 = 0x8317f65c
0x4c: V26 = EQ 0x8317f65c V12
0x4d: V27 = 0x144
0x50: JUMPI 0x144 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x173]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x173
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x173
0x5b: JUMPI 0x173 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a2]
---
0x5c DUP1
0x5d PUSH4 0xa6f9dae1
0x62 EQ
0x63 PUSH2 0x1a2
0x66 JUMPI
---
0x5d: V31 = 0xa6f9dae1
0x62: V32 = EQ 0xa6f9dae1 V12
0x63: V33 = 0x1a2
0x66: JUMPI 0x1a2 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c3]
---
0x67 DUP1
0x68 PUSH4 0xd4ee1d90
0x6d EQ
0x6e PUSH2 0x1c3
0x71 JUMPI
---
0x68: V34 = 0xd4ee1d90
0x6d: V35 = EQ 0xd4ee1d90 V12
0x6e: V36 = 0x1c3
0x71: JUMPI 0x1c3 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1f2]
---
0x72 DUP1
0x73 PUSH4 0xda4493f6
0x78 EQ
0x79 PUSH2 0x1f2
0x7c JUMPI
---
0x73: V37 = 0xda4493f6
0x78: V38 = EQ 0xda4493f6 V12
0x79: V39 = 0x1f2
0x7c: JUMPI 0x1f2 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0xc4]
---
0x7d DUP1
0x7e PUSH4 0xda682aeb
0x83 EQ
0x84 PUSH2 0xc4
0x87 JUMPI
---
0x7e: V40 = 0xda682aeb
0x83: V41 = EQ 0xda682aeb V12
0x84: V42 = 0xc4
0x87: JUMPI 0xc4 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x253]
---
0x88 DUP1
0x89 PUSH4 0xdf8de3e7
0x8e EQ
0x8f PUSH2 0x253
0x92 JUMPI
---
0x89: V43 = 0xdf8de3e7
0x8e: V44 = EQ 0xdf8de3e7 V12
0x8f: V45 = 0x253
0x92: JUMPI 0x253 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x274]
---
0x93 DUP1
0x94 PUSH4 0xf48c3054
0x99 EQ
0x9a PUSH2 0x274
0x9d JUMPI
---
0x94: V46 = 0xf48c3054
0x99: V47 = EQ 0xf48c3054 V12
0x9a: V48 = 0x274
0x9d: JUMPI 0x274 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa2]
---
Predecessors: [0x0, 0x93]
Successors: []
---
0x9e JUMPDEST
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9e: JUMPDEST 
0x9f: V49 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xa9]
---
Predecessors: [0xb]
Successors: [0xaa, 0xae]
---
0xa3 JUMPDEST
0xa4 CALLVALUE
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa3: JUMPDEST 
0xa4: V50 = CALLVALUE
0xa5: V51 = ISZERO V50
0xa6: V52 = 0xae
0xa9: JUMPI 0xae V51
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa3]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V53 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xae
[0xae:0xc1]
---
Predecessors: [0xa3]
Successors: [0x29c]
---
0xae JUMPDEST
0xaf PUSH2 0xc2
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 PUSH1 0x2
0xb8 EXP
0xb9 SUB
0xba PUSH1 0x4
0xbc CALLDATALOAD
0xbd AND
0xbe PUSH2 0x29c
0xc1 JUMP
---
0xae: JUMPDEST 
0xaf: V54 = 0xc2
0xb2: V55 = 0x1
0xb4: V56 = 0xa0
0xb6: V57 = 0x2
0xb8: V58 = EXP 0x2 0xa0
0xb9: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba: V60 = 0x4
0xbc: V61 = CALLDATALOAD 0x4
0xbd: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V63 = 0x29c
0xc1: JUMP 0x29c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V62]
Exit stack: [V12, 0xc2, V62]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0x353, 0x3c2, 0x427, 0x6d7]
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0x25, 0x7d]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V64 = CALLVALUE
0xc6: V65 = ISZERO V64
0xc7: V66 = 0xcf
0xca: JUMPI 0xcf V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V67 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcf
[0xcf:0xeb]
---
Predecessors: [0xc4, 0x217]
Successors: [0x356]
---
0xcf JUMPDEST
0xd0 PUSH2 0xec
0xd3 PUSH1 0x1
0xd5 PUSH1 0xa0
0xd7 PUSH1 0x2
0xd9 EXP
0xda SUB
0xdb PUSH1 0x4
0xdd CALLDATALOAD
0xde DUP2
0xdf AND
0xe0 SWAP1
0xe1 PUSH1 0x24
0xe3 CALLDATALOAD
0xe4 AND
0xe5 PUSH1 0x44
0xe7 CALLDATALOAD
0xe8 PUSH2 0x356
0xeb JUMP
---
0xcf: JUMPDEST 
0xd0: V68 = 0xec
0xd3: V69 = 0x1
0xd5: V70 = 0xa0
0xd7: V71 = 0x2
0xd9: V72 = EXP 0x2 0xa0
0xda: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V74 = 0x4
0xdd: V75 = CALLDATALOAD 0x4
0xdf: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xe1: V77 = 0x24
0xe3: V78 = CALLDATALOAD 0x24
0xe4: V79 = AND V78 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V80 = 0x44
0xe7: V81 = CALLDATALOAD 0x44
0xe8: V82 = 0x356
0xeb: JUMP 0x356
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xec, V76, V79, V81]
Exit stack: [V12, 0xec, V76, V79, V81]

================================

Block 0xec
[0xec:0xff]
---
Predecessors: [0x364, 0x6df]
Successors: []
---
0xec JUMPDEST
0xed PUSH1 0x40
0xef MLOAD
0xf0 SWAP1
0xf1 ISZERO
0xf2 ISZERO
0xf3 DUP2
0xf4 MSTORE
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc SWAP2
0xfd SUB
0xfe SWAP1
0xff RETURN
---
0xec: JUMPDEST 
0xed: V83 = 0x40
0xef: V84 = M[0x40]
0xf1: V85 = ISZERO S0
0xf2: V86 = ISZERO V85
0xf4: M[V84] = V86
0xf5: V87 = 0x20
0xf7: V88 = ADD 0x20 V84
0xf8: V89 = 0x40
0xfa: V90 = M[0x40]
0xfd: V91 = SUB V88 V90
0xff: RETURN V90 V91
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x30]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V92 = CALLVALUE
0x102: V93 = ISZERO V92
0x103: V94 = 0x10b
0x106: JUMPI 0x10b V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V95 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x36b]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x36b
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V96 = 0x113
0x10f: V97 = 0x36b
0x112: JUMP 0x36b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V12, 0x113]

================================

Block 0x113
[0x113:0x12e]
---
Predecessors: [0x36b, 0x3c4, 0x3d3, 0x42a]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 PUSH1 0x1
0x119 PUSH1 0xa0
0x11b PUSH1 0x2
0x11d EXP
0x11e SUB
0x11f SWAP1
0x120 SWAP2
0x121 AND
0x122 DUP2
0x123 MSTORE
0x124 PUSH1 0x20
0x126 ADD
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b SWAP2
0x12c SUB
0x12d SWAP1
0x12e RETURN
---
0x113: JUMPDEST 
0x114: V98 = 0x40
0x116: V99 = M[0x40]
0x117: V100 = 0x1
0x119: V101 = 0xa0
0x11b: V102 = 0x2
0x11d: V103 = EXP 0x2 0xa0
0x11e: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x121: V105 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x123: M[V99] = V105
0x124: V106 = 0x20
0x126: V107 = ADD 0x20 V99
0x127: V108 = 0x40
0x129: V109 = M[0x40]
0x12c: V110 = SUB V107 V109
0x12e: RETURN V109 V110
---
Entry stack: [V12, 0x113, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x113]

================================

Block 0x12f
[0x12f:0x135]
---
Predecessors: [0x3b]
Successors: [0x136, 0x13a]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 ISZERO
0x132 PUSH2 0x13a
0x135 JUMPI
---
0x12f: JUMPDEST 
0x130: V111 = CALLVALUE
0x131: V112 = ISZERO V111
0x132: V113 = 0x13a
0x135: JUMPI 0x13a V112
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x136
[0x136:0x139]
---
Predecessors: [0x12f]
Successors: []
---
0x136 PUSH1 0x0
0x138 DUP1
0x139 REVERT
---
0x136: V114 = 0x0
0x139: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13a
[0x13a:0x141]
---
Predecessors: [0x12f]
Successors: [0x37a]
---
0x13a JUMPDEST
0x13b PUSH2 0xc2
0x13e PUSH2 0x37a
0x141 JUMP
---
0x13a: JUMPDEST 
0x13b: V115 = 0xc2
0x13e: V116 = 0x37a
0x141: JUMP 0x37a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V12, 0xc2]

================================

Block 0x142
[0x142:0x143]
---
Predecessors: []
Successors: []
---
0x142 JUMPDEST
0x143 STOP
---
0x142: JUMPDEST 
0x143: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x144
[0x144:0x14a]
---
Predecessors: [0x46]
Successors: [0x14b, 0x14f]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x144: JUMPDEST 
0x145: V117 = CALLVALUE
0x146: V118 = ISZERO V117
0x147: V119 = 0x14f
0x14a: JUMPI 0x14f V118
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x144]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V120 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14f
[0x14f:0x156]
---
Predecessors: [0x144]
Successors: [0x3c4]
---
0x14f JUMPDEST
0x150 PUSH2 0x113
0x153 PUSH2 0x3c4
0x156 JUMP
---
0x14f: JUMPDEST 
0x150: V121 = 0x113
0x153: V122 = 0x3c4
0x156: JUMP 0x3c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V12, 0x113]

================================

Block 0x157
[0x157:0x172]
---
Predecessors: []
Successors: []
---
0x157 JUMPDEST
0x158 PUSH1 0x40
0x15a MLOAD
0x15b PUSH1 0x1
0x15d PUSH1 0xa0
0x15f PUSH1 0x2
0x161 EXP
0x162 SUB
0x163 SWAP1
0x164 SWAP2
0x165 AND
0x166 DUP2
0x167 MSTORE
0x168 PUSH1 0x20
0x16a ADD
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f SWAP2
0x170 SUB
0x171 SWAP1
0x172 RETURN
---
0x157: JUMPDEST 
0x158: V123 = 0x40
0x15a: V124 = M[0x40]
0x15b: V125 = 0x1
0x15d: V126 = 0xa0
0x15f: V127 = 0x2
0x161: V128 = EXP 0x2 0xa0
0x162: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x165: V130 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x167: M[V124] = V130
0x168: V131 = 0x20
0x16a: V132 = ADD 0x20 V124
0x16b: V133 = 0x40
0x16d: V134 = M[0x40]
0x170: V135 = SUB V132 V134
0x172: RETURN V134 V135
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x173
[0x173:0x179]
---
Predecessors: [0x51]
Successors: [0x17a, 0x17e]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x173: JUMPDEST 
0x174: V136 = CALLVALUE
0x175: V137 = ISZERO V136
0x176: V138 = 0x17e
0x179: JUMPI 0x17e V137
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x173]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V139 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x173]
Successors: [0x3d3]
---
0x17e JUMPDEST
0x17f PUSH2 0x113
0x182 PUSH2 0x3d3
0x185 JUMP
---
0x17e: JUMPDEST 
0x17f: V140 = 0x113
0x182: V141 = 0x3d3
0x185: JUMP 0x3d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V12, 0x113]

================================

Block 0x186
[0x186:0x1a1]
---
Predecessors: []
Successors: []
---
0x186 JUMPDEST
0x187 PUSH1 0x40
0x189 MLOAD
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 SWAP1
0x193 SWAP2
0x194 AND
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e SWAP2
0x19f SUB
0x1a0 SWAP1
0x1a1 RETURN
---
0x186: JUMPDEST 
0x187: V142 = 0x40
0x189: V143 = M[0x40]
0x18a: V144 = 0x1
0x18c: V145 = 0xa0
0x18e: V146 = 0x2
0x190: V147 = EXP 0x2 0xa0
0x191: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V149 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x196: M[V143] = V149
0x197: V150 = 0x20
0x199: V151 = ADD 0x20 V143
0x19a: V152 = 0x40
0x19c: V153 = M[0x40]
0x19f: V154 = SUB V151 V153
0x1a1: RETURN V153 V154
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a2
[0x1a2:0x1a8]
---
Predecessors: [0x5c]
Successors: [0x1a9, 0x1ad]
---
0x1a2 JUMPDEST
0x1a3 CALLVALUE
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V155 = CALLVALUE
0x1a4: V156 = ISZERO V155
0x1a5: V157 = 0x1ad
0x1a8: JUMPI 0x1ad V156
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a2]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V158 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ad
[0x1ad:0x1c0]
---
Predecessors: [0x1a2]
Successors: [0x3e2]
---
0x1ad JUMPDEST
0x1ae PUSH2 0xc2
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0xa0
0x1b5 PUSH1 0x2
0x1b7 EXP
0x1b8 SUB
0x1b9 PUSH1 0x4
0x1bb CALLDATALOAD
0x1bc AND
0x1bd PUSH2 0x3e2
0x1c0 JUMP
---
0x1ad: JUMPDEST 
0x1ae: V159 = 0xc2
0x1b1: V160 = 0x1
0x1b3: V161 = 0xa0
0x1b5: V162 = 0x2
0x1b7: V163 = EXP 0x2 0xa0
0x1b8: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b9: V165 = 0x4
0x1bb: V166 = CALLDATALOAD 0x4
0x1bc: V167 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V168 = 0x3e2
0x1c0: JUMP 0x3e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V167]
Exit stack: [V12, 0xc2, V167]

================================

Block 0x1c1
[0x1c1:0x1c2]
---
Predecessors: []
Successors: []
---
0x1c1 JUMPDEST
0x1c2 STOP
---
0x1c1: JUMPDEST 
0x1c2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c3
[0x1c3:0x1c9]
---
Predecessors: [0x67]
Successors: [0x1ca, 0x1ce]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V169 = CALLVALUE
0x1c5: V170 = ISZERO V169
0x1c6: V171 = 0x1ce
0x1c9: JUMPI 0x1ce V170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x1c3]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V172 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x1c3]
Successors: [0x42a]
---
0x1ce JUMPDEST
0x1cf PUSH2 0x113
0x1d2 PUSH2 0x42a
0x1d5 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V173 = 0x113
0x1d2: V174 = 0x42a
0x1d5: JUMP 0x42a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V12, 0x113]

================================

Block 0x1d6
[0x1d6:0x1f1]
---
Predecessors: []
Successors: []
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 SWAP1
0x1e3 SWAP2
0x1e4 AND
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee SWAP2
0x1ef SUB
0x1f0 SWAP1
0x1f1 RETURN
---
0x1d6: JUMPDEST 
0x1d7: V175 = 0x40
0x1d9: V176 = M[0x40]
0x1da: V177 = 0x1
0x1dc: V178 = 0xa0
0x1de: V179 = 0x2
0x1e0: V180 = EXP 0x2 0xa0
0x1e1: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V182 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: M[V176] = V182
0x1e7: V183 = 0x20
0x1e9: V184 = ADD 0x20 V176
0x1ea: V185 = 0x40
0x1ec: V186 = M[0x40]
0x1ef: V187 = SUB V184 V186
0x1f1: RETURN V186 V187
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x72]
Successors: [0x1f9, 0x1fd]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V188 = CALLVALUE
0x1f4: V189 = ISZERO V188
0x1f5: V190 = 0x1fd
0x1f8: JUMPI 0x1fd V189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V191 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x1f2]
Successors: [0x439]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x205
0x201 PUSH2 0x439
0x204 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V192 = 0x205
0x201: V193 = 0x439
0x204: JUMP 0x439
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x205]
Exit stack: [V12, 0x205]

================================

Block 0x205
[0x205:0x216]
---
Predecessors: [0x439]
Successors: []
---
0x205 JUMPDEST
0x206 PUSH1 0x40
0x208 MLOAD
0x209 SWAP1
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x20
0x20e ADD
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 SWAP2
0x214 SUB
0x215 SWAP1
0x216 RETURN
---
0x205: JUMPDEST 
0x206: V194 = 0x40
0x208: V195 = M[0x40]
0x20b: M[V195] = V420
0x20c: V196 = 0x20
0x20e: V197 = ADD 0x20 V195
0x20f: V198 = 0x40
0x211: V199 = M[0x40]
0x214: V200 = SUB V197 V199
0x216: RETURN V199 V200
---
Entry stack: [V12, 0x205, V420]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x205]

================================

Block 0x217
[0x217:0x21d]
---
Predecessors: []
Successors: [0xcf, 0x21e]
---
0x217 JUMPDEST
0x218 CALLVALUE
0x219 ISZERO
0x21a PUSH2 0xcf
0x21d JUMPI
---
0x217: JUMPDEST 
0x218: V201 = CALLVALUE
0x219: V202 = ISZERO V201
0x21a: V203 = 0xcf
0x21d: JUMPI 0xcf V202
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21e
[0x21e:0x23e]
---
Predecessors: [0x217]
Successors: [0x356]
---
0x21e PUSH1 0x0
0x220 DUP1
0x221 REVERT
0x222 JUMPDEST
0x223 PUSH2 0xec
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e PUSH1 0x4
0x230 CALLDATALOAD
0x231 DUP2
0x232 AND
0x233 SWAP1
0x234 PUSH1 0x24
0x236 CALLDATALOAD
0x237 AND
0x238 PUSH1 0x44
0x23a CALLDATALOAD
0x23b PUSH2 0x356
0x23e JUMP
---
0x21e: V204 = 0x0
0x221: REVERT 0x0 0x0
0x222: JUMPDEST 
0x223: V205 = 0xec
0x226: V206 = 0x1
0x228: V207 = 0xa0
0x22a: V208 = 0x2
0x22c: V209 = EXP 0x2 0xa0
0x22d: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V211 = 0x4
0x230: V212 = CALLDATALOAD 0x4
0x232: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x234: V214 = 0x24
0x236: V215 = CALLDATALOAD 0x24
0x237: V216 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x238: V217 = 0x44
0x23a: V218 = CALLDATALOAD 0x44
0x23b: V219 = 0x356
0x23e: JUMP 0x356
---
Entry stack: []
Stack pops: 0
Stack additions: [V218, V216, V213, 0xec]
Exit stack: []

================================

Block 0x23f
[0x23f:0x252]
---
Predecessors: []
Successors: []
---
0x23f JUMPDEST
0x240 PUSH1 0x40
0x242 MLOAD
0x243 SWAP1
0x244 ISZERO
0x245 ISZERO
0x246 DUP2
0x247 MSTORE
0x248 PUSH1 0x20
0x24a ADD
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP1
0x24f SWAP2
0x250 SUB
0x251 SWAP1
0x252 RETURN
---
0x23f: JUMPDEST 
0x240: V220 = 0x40
0x242: V221 = M[0x40]
0x244: V222 = ISZERO S0
0x245: V223 = ISZERO V222
0x247: M[V221] = V223
0x248: V224 = 0x20
0x24a: V225 = ADD 0x20 V221
0x24b: V226 = 0x40
0x24d: V227 = M[0x40]
0x250: V228 = SUB V225 V227
0x252: RETURN V227 V228
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x253
[0x253:0x259]
---
Predecessors: [0x88]
Successors: [0x25a, 0x25e]
---
0x253 JUMPDEST
0x254 CALLVALUE
0x255 ISZERO
0x256 PUSH2 0x25e
0x259 JUMPI
---
0x253: JUMPDEST 
0x254: V229 = CALLVALUE
0x255: V230 = ISZERO V229
0x256: V231 = 0x25e
0x259: JUMPI 0x25e V230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25a
[0x25a:0x25d]
---
Predecessors: [0x253]
Successors: []
---
0x25a PUSH1 0x0
0x25c DUP1
0x25d REVERT
---
0x25a: V232 = 0x0
0x25d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25e
[0x25e:0x271]
---
Predecessors: [0x253]
Successors: [0x454]
---
0x25e JUMPDEST
0x25f PUSH2 0xc2
0x262 PUSH1 0x1
0x264 PUSH1 0xa0
0x266 PUSH1 0x2
0x268 EXP
0x269 SUB
0x26a PUSH1 0x4
0x26c CALLDATALOAD
0x26d AND
0x26e PUSH2 0x454
0x271 JUMP
---
0x25e: JUMPDEST 
0x25f: V233 = 0xc2
0x262: V234 = 0x1
0x264: V235 = 0xa0
0x266: V236 = 0x2
0x268: V237 = EXP 0x2 0xa0
0x269: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V239 = 0x4
0x26c: V240 = CALLDATALOAD 0x4
0x26d: V241 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V242 = 0x454
0x271: JUMP 0x454
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V241]
Exit stack: [V12, 0xc2, V241]

================================

Block 0x272
[0x272:0x273]
---
Predecessors: []
Successors: []
---
0x272 JUMPDEST
0x273 STOP
---
0x272: JUMPDEST 
0x273: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x274
[0x274:0x287]
---
Predecessors: [0x93]
Successors: [0x6dc]
---
0x274 JUMPDEST
0x275 PUSH2 0xec
0x278 PUSH1 0x1
0x27a PUSH1 0xa0
0x27c PUSH1 0x2
0x27e EXP
0x27f SUB
0x280 PUSH1 0x4
0x282 CALLDATALOAD
0x283 AND
0x284 PUSH2 0x6dc
0x287 JUMP
---
0x274: JUMPDEST 
0x275: V243 = 0xec
0x278: V244 = 0x1
0x27a: V245 = 0xa0
0x27c: V246 = 0x2
0x27e: V247 = EXP 0x2 0xa0
0x27f: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x280: V249 = 0x4
0x282: V250 = CALLDATALOAD 0x4
0x283: V251 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0x284: V252 = 0x6dc
0x287: JUMP 0x6dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xec, V251]
Exit stack: [V12, 0xec, V251]

================================

Block 0x288
[0x288:0x29b]
---
Predecessors: []
Successors: []
---
0x288 JUMPDEST
0x289 PUSH1 0x40
0x28b MLOAD
0x28c SWAP1
0x28d ISZERO
0x28e ISZERO
0x28f DUP2
0x290 MSTORE
0x291 PUSH1 0x20
0x293 ADD
0x294 PUSH1 0x40
0x296 MLOAD
0x297 DUP1
0x298 SWAP2
0x299 SUB
0x29a SWAP1
0x29b RETURN
---
0x288: JUMPDEST 
0x289: V253 = 0x40
0x28b: V254 = M[0x40]
0x28d: V255 = ISZERO S0
0x28e: V256 = ISZERO V255
0x290: M[V254] = V256
0x291: V257 = 0x20
0x293: V258 = ADD 0x20 V254
0x294: V259 = 0x40
0x296: V260 = M[0x40]
0x299: V261 = SUB V258 V260
0x29b: RETURN V260 V261
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29c
[0x29c:0x2b2]
---
Predecessors: [0xae]
Successors: [0x2b3, 0x2b7]
---
0x29c JUMPDEST
0x29d PUSH1 0x0
0x29f SLOAD
0x2a0 CALLER
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 SWAP1
0x2aa DUP2
0x2ab AND
0x2ac SWAP2
0x2ad AND
0x2ae EQ
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x29c: JUMPDEST 
0x29d: V262 = 0x0
0x29f: V263 = S[0x0]
0x2a0: V264 = CALLER
0x2a1: V265 = 0x1
0x2a3: V266 = 0xa0
0x2a5: V267 = 0x2
0x2a7: V268 = EXP 0x2 0xa0
0x2a8: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ab: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x2ad: V271 = AND V263 0xffffffffffffffffffffffffffffffffffffffff
0x2ae: V272 = EQ V271 V270
0x2af: V273 = 0x2b7
0x2b2: JUMPI 0x2b7 V272
---
Entry stack: [V12, 0xc2, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V62]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x29c]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V274 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V62]

================================

Block 0x2b7
[0x2b7:0x302]
---
Predecessors: [0x29c]
Successors: [0x303, 0x307]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x2
0x2ba SLOAD
0x2bb PUSH1 0x1
0x2bd PUSH1 0xa0
0x2bf PUSH1 0x2
0x2c1 EXP
0x2c2 SUB
0x2c3 AND
0x2c4 PUSH4 0x3cebb823
0x2c9 DUP3
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd PUSH1 0xe0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 PUSH4 0xffffffff
0x2d7 DUP5
0x2d8 AND
0x2d9 MUL
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x1
0x2de PUSH1 0xa0
0x2e0 PUSH1 0x2
0x2e2 EXP
0x2e3 SUB
0x2e4 SWAP1
0x2e5 SWAP2
0x2e6 AND
0x2e7 PUSH1 0x4
0x2e9 DUP3
0x2ea ADD
0x2eb MSTORE
0x2ec PUSH1 0x24
0x2ee ADD
0x2ef PUSH1 0x0
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 DUP1
0x2f5 DUP4
0x2f6 SUB
0x2f7 DUP2
0x2f8 PUSH1 0x0
0x2fa DUP8
0x2fb DUP1
0x2fc EXTCODESIZE
0x2fd ISZERO
0x2fe ISZERO
0x2ff PUSH2 0x307
0x302 JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V275 = 0x2
0x2ba: V276 = S[0x2]
0x2bb: V277 = 0x1
0x2bd: V278 = 0xa0
0x2bf: V279 = 0x2
0x2c1: V280 = EXP 0x2 0xa0
0x2c2: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c3: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x2c4: V283 = 0x3cebb823
0x2ca: V284 = 0x40
0x2cc: V285 = M[0x40]
0x2cd: V286 = 0xe0
0x2cf: V287 = 0x2
0x2d1: V288 = EXP 0x2 0xe0
0x2d2: V289 = 0xffffffff
0x2d8: V290 = AND 0x3cebb823 0xffffffff
0x2d9: V291 = MUL 0x3cebb823 0x100000000000000000000000000000000000000000000000000000000
0x2db: M[V285] = 0x3cebb82300000000000000000000000000000000000000000000000000000000
0x2dc: V292 = 0x1
0x2de: V293 = 0xa0
0x2e0: V294 = 0x2
0x2e2: V295 = EXP 0x2 0xa0
0x2e3: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V297 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V298 = 0x4
0x2ea: V299 = ADD V285 0x4
0x2eb: M[V299] = V297
0x2ec: V300 = 0x24
0x2ee: V301 = ADD 0x24 V285
0x2ef: V302 = 0x0
0x2f1: V303 = 0x40
0x2f3: V304 = M[0x40]
0x2f6: V305 = SUB V301 V304
0x2f8: V306 = 0x0
0x2fc: V307 = EXTCODESIZE V282
0x2fd: V308 = ISZERO V307
0x2fe: V309 = ISZERO V308
0x2ff: V310 = 0x307
0x302: JUMPI 0x307 V309
---
Entry stack: [V12, 0xc2, V62]
Stack pops: 1
Stack additions: [S0, V282, 0x3cebb823, V301, 0x0, V304, V305, V304, 0x0, V282]
Exit stack: [V12, 0xc2, V62, V282, 0x3cebb823, V301, 0x0, V304, V305, V304, 0x0, V282]

================================

Block 0x303
[0x303:0x306]
---
Predecessors: [0x2b7]
Successors: []
---
0x303 PUSH1 0x0
0x305 DUP1
0x306 REVERT
---
0x303: V311 = 0x0
0x306: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V62, V282, 0x3cebb823, V301, 0x0, V304, V305, V304, 0x0, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V62, V282, 0x3cebb823, V301, 0x0, V304, V305, V304, 0x0, V282]

================================

Block 0x307
[0x307:0x313]
---
Predecessors: [0x2b7]
Successors: [0x314, 0x318]
---
0x307 JUMPDEST
0x308 PUSH2 0x2c6
0x30b GAS
0x30c SUB
0x30d CALL
0x30e ISZERO
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x307: JUMPDEST 
0x308: V312 = 0x2c6
0x30b: V313 = GAS
0x30c: V314 = SUB V313 0x2c6
0x30d: V315 = CALL V314 V282 0x0 V304 V305 V304 0x0
0x30e: V316 = ISZERO V315
0x30f: V317 = ISZERO V316
0x310: V318 = 0x318
0x313: JUMPI 0x318 V317
---
Entry stack: [V12, 0xc2, V62, V282, 0x3cebb823, V301, 0x0, V304, V305, V304, 0x0, V282]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V62, V282, 0x3cebb823, V301]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x307]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V319 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V62, V282, 0x3cebb823, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V62, V282, 0x3cebb823, V301]

================================

Block 0x318
[0x318:0x351]
---
Predecessors: [0x307]
Successors: [0x352]
---
0x318 JUMPDEST
0x319 POP
0x31a POP
0x31b POP
0x31c DUP1
0x31d PUSH1 0x1
0x31f PUSH1 0xa0
0x321 PUSH1 0x2
0x323 EXP
0x324 SUB
0x325 AND
0x326 PUSH32 0x27c3e080ed9215f564a9455a666f7e459b3edc0bb6e02a1bf842fde4d0ccfc1
0x347 PUSH1 0x40
0x349 MLOAD
0x34a PUSH1 0x40
0x34c MLOAD
0x34d DUP1
0x34e SWAP2
0x34f SUB
0x350 SWAP1
0x351 LOG2
---
0x318: JUMPDEST 
0x31d: V320 = 0x1
0x31f: V321 = 0xa0
0x321: V322 = 0x2
0x323: V323 = EXP 0x2 0xa0
0x324: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x325: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x326: V326 = 0x27c3e080ed9215f564a9455a666f7e459b3edc0bb6e02a1bf842fde4d0ccfc1
0x347: V327 = 0x40
0x349: V328 = M[0x40]
0x34a: V329 = 0x40
0x34c: V330 = M[0x40]
0x34f: V331 = SUB V328 V330
0x351: LOG V330 V331 0x27c3e080ed9215f564a9455a666f7e459b3edc0bb6e02a1bf842fde4d0ccfc1 V325
---
Entry stack: [V12, 0xc2, V62, V282, 0x3cebb823, V301]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0xc2, V62]

================================

Block 0x352
[0x352:0x352]
---
Predecessors: [0x318]
Successors: [0x353]
---
0x352 JUMPDEST
---
0x352: JUMPDEST 
---
Entry stack: [V12, 0xc2, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V62]

================================

Block 0x353
[0x353:0x355]
---
Predecessors: [0x352]
Successors: [0xc2]
---
0x353 JUMPDEST
0x354 POP
0x355 JUMP
---
0x353: JUMPDEST 
0x355: JUMP 0xc2
---
Entry stack: [V12, 0xc2, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x356
[0x356:0x360]
---
Predecessors: [0xcf, 0x21e]
Successors: [0x6e4]
---
0x356 JUMPDEST
0x357 PUSH1 0x0
0x359 PUSH2 0x361
0x35c DUP5
0x35d PUSH2 0x6e4
0x360 JUMP
---
0x356: JUMPDEST 
0x357: V332 = 0x0
0x359: V333 = 0x361
0x35d: V334 = 0x6e4
0x360: JUMP 0x6e4
---
Entry stack: [V12, 0xec, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x361, S2]
Exit stack: [V12, 0xec, S2, S1, S0, 0x0, 0x361, S2]

================================

Block 0x361
[0x361:0x363]
---
Predecessors: [0x793]
Successors: [0x364]
---
0x361 JUMPDEST
0x362 SWAP1
0x363 POP
---
0x361: JUMPDEST 
---
Entry stack: [V12, 0xec, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xec, S4, S3, S2, S0]

================================

Block 0x364
[0x364:0x36a]
---
Predecessors: [0x361]
Successors: [0xec]
---
0x364 JUMPDEST
0x365 SWAP4
0x366 SWAP3
0x367 POP
0x368 POP
0x369 POP
0x36a JUMP
---
0x364: JUMPDEST 
0x36a: JUMP 0xec
---
Entry stack: [V12, 0xec, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x36b
[0x36b:0x379]
---
Predecessors: [0x10b]
Successors: [0x113]
---
0x36b JUMPDEST
0x36c PUSH1 0x3
0x36e SLOAD
0x36f PUSH1 0x1
0x371 PUSH1 0xa0
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 AND
0x378 DUP2
0x379 JUMP
---
0x36b: JUMPDEST 
0x36c: V335 = 0x3
0x36e: V336 = S[0x3]
0x36f: V337 = 0x1
0x371: V338 = 0xa0
0x373: V339 = 0x2
0x375: V340 = EXP 0x2 0xa0
0x376: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x377: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x379: JUMP 0x113
---
Entry stack: [V12, 0x113]
Stack pops: 1
Stack additions: [S0, V342]
Exit stack: [V12, 0x113, V342]

================================

Block 0x37a
[0x37a:0x391]
---
Predecessors: [0x13a]
Successors: [0x392, 0x3c1]
---
0x37a JUMPDEST
0x37b PUSH1 0x1
0x37d SLOAD
0x37e CALLER
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 PUSH1 0x2
0x385 EXP
0x386 SUB
0x387 SWAP1
0x388 DUP2
0x389 AND
0x38a SWAP2
0x38b AND
0x38c EQ
0x38d ISZERO
0x38e PUSH2 0x3c1
0x391 JUMPI
---
0x37a: JUMPDEST 
0x37b: V343 = 0x1
0x37d: V344 = S[0x1]
0x37e: V345 = CALLER
0x37f: V346 = 0x1
0x381: V347 = 0xa0
0x383: V348 = 0x2
0x385: V349 = EXP 0x2 0xa0
0x386: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x38b: V352 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0x38c: V353 = EQ V352 V351
0x38d: V354 = ISZERO V353
0x38e: V355 = 0x3c1
0x391: JUMPI 0x3c1 V354
---
Entry stack: [V12, 0xc2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2]

================================

Block 0x392
[0x392:0x3c0]
---
Predecessors: [0x37a]
Successors: [0x3c1]
---
0x392 PUSH1 0x1
0x394 SLOAD
0x395 PUSH1 0x0
0x397 DUP1
0x398 SLOAD
0x399 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ae NOT
0x3af AND
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 SWAP1
0x3b9 SWAP3
0x3ba AND
0x3bb SWAP2
0x3bc SWAP1
0x3bd SWAP2
0x3be OR
0x3bf SWAP1
0x3c0 SSTORE
---
0x392: V356 = 0x1
0x394: V357 = S[0x1]
0x395: V358 = 0x0
0x398: V359 = S[0x0]
0x399: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ae: V361 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V362 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V359
0x3b0: V363 = 0x1
0x3b2: V364 = 0xa0
0x3b4: V365 = 0x2
0x3b6: V366 = EXP 0x2 0xa0
0x3b7: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ba: V368 = AND V357 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V369 = OR V368 V362
0x3c0: S[0x0] = V369
---
Entry stack: [V12, 0xc2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2]

================================

Block 0x3c1
[0x3c1:0x3c1]
---
Predecessors: [0x37a, 0x392]
Successors: [0x3c2]
---
0x3c1 JUMPDEST
---
0x3c1: JUMPDEST 
---
Entry stack: [V12, 0xc2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2]

================================

Block 0x3c2
[0x3c2:0x3c3]
---
Predecessors: [0x3c1]
Successors: [0xc2]
---
0x3c2 JUMPDEST
0x3c3 JUMP
---
0x3c2: JUMPDEST 
0x3c3: JUMP 0xc2
---
Entry stack: [V12, 0xc2]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c4
[0x3c4:0x3d2]
---
Predecessors: [0x14f]
Successors: [0x113]
---
0x3c4 JUMPDEST
0x3c5 PUSH1 0x2
0x3c7 SLOAD
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf SUB
0x3d0 AND
0x3d1 DUP2
0x3d2 JUMP
---
0x3c4: JUMPDEST 
0x3c5: V370 = 0x2
0x3c7: V371 = S[0x2]
0x3c8: V372 = 0x1
0x3ca: V373 = 0xa0
0x3cc: V374 = 0x2
0x3ce: V375 = EXP 0x2 0xa0
0x3cf: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x3d2: JUMP 0x113
---
Entry stack: [V12, 0x113]
Stack pops: 1
Stack additions: [S0, V377]
Exit stack: [V12, 0x113, V377]

================================

Block 0x3d3
[0x3d3:0x3e1]
---
Predecessors: [0x17e]
Successors: [0x113]
---
0x3d3 JUMPDEST
0x3d4 PUSH1 0x0
0x3d6 SLOAD
0x3d7 PUSH1 0x1
0x3d9 PUSH1 0xa0
0x3db PUSH1 0x2
0x3dd EXP
0x3de SUB
0x3df AND
0x3e0 DUP2
0x3e1 JUMP
---
0x3d3: JUMPDEST 
0x3d4: V378 = 0x0
0x3d6: V379 = S[0x0]
0x3d7: V380 = 0x1
0x3d9: V381 = 0xa0
0x3db: V382 = 0x2
0x3dd: V383 = EXP 0x2 0xa0
0x3de: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3df: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x3e1: JUMP 0x113
---
Entry stack: [V12, 0x113]
Stack pops: 1
Stack additions: [S0, V385]
Exit stack: [V12, 0x113, V385]

================================

Block 0x3e2
[0x3e2:0x3f8]
---
Predecessors: [0x1ad]
Successors: [0x3f9, 0x3fd]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x0
0x3e5 SLOAD
0x3e6 CALLER
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0xa0
0x3eb PUSH1 0x2
0x3ed EXP
0x3ee SUB
0x3ef SWAP1
0x3f0 DUP2
0x3f1 AND
0x3f2 SWAP2
0x3f3 AND
0x3f4 EQ
0x3f5 PUSH2 0x3fd
0x3f8 JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V386 = 0x0
0x3e5: V387 = S[0x0]
0x3e6: V388 = CALLER
0x3e7: V389 = 0x1
0x3e9: V390 = 0xa0
0x3eb: V391 = 0x2
0x3ed: V392 = EXP 0x2 0xa0
0x3ee: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f1: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x3f3: V395 = AND V387 0xffffffffffffffffffffffffffffffffffffffff
0x3f4: V396 = EQ V395 V394
0x3f5: V397 = 0x3fd
0x3f8: JUMPI 0x3fd V396
---
Entry stack: [V12, 0xc2, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V167]

================================

Block 0x3f9
[0x3f9:0x3fc]
---
Predecessors: [0x3e2]
Successors: []
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
---
0x3f9: V398 = 0x0
0x3fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V167]

================================

Block 0x3fd
[0x3fd:0x425]
---
Predecessors: [0x3e2]
Successors: [0x426]
---
0x3fd JUMPDEST
0x3fe PUSH1 0x1
0x400 DUP1
0x401 SLOAD
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 NOT
0x418 AND
0x419 PUSH1 0x1
0x41b PUSH1 0xa0
0x41d PUSH1 0x2
0x41f EXP
0x420 SUB
0x421 DUP4
0x422 AND
0x423 OR
0x424 SWAP1
0x425 SSTORE
---
0x3fd: JUMPDEST 
0x3fe: V399 = 0x1
0x401: V400 = S[0x1]
0x402: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x417: V402 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x418: V403 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V400
0x419: V404 = 0x1
0x41b: V405 = 0xa0
0x41d: V406 = 0x2
0x41f: V407 = EXP 0x2 0xa0
0x420: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V409 = AND V167 0xffffffffffffffffffffffffffffffffffffffff
0x423: V410 = OR V409 V403
0x425: S[0x1] = V410
---
Entry stack: [V12, 0xc2, V167]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc2, V167]

================================

Block 0x426
[0x426:0x426]
---
Predecessors: [0x3fd]
Successors: [0x427]
---
0x426 JUMPDEST
---
0x426: JUMPDEST 
---
Entry stack: [V12, 0xc2, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V167]

================================

Block 0x427
[0x427:0x429]
---
Predecessors: [0x426]
Successors: [0xc2]
---
0x427 JUMPDEST
0x428 POP
0x429 JUMP
---
0x427: JUMPDEST 
0x429: JUMP 0xc2
---
Entry stack: [V12, 0xc2, V167]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x42a
[0x42a:0x438]
---
Predecessors: [0x1ce]
Successors: [0x113]
---
0x42a JUMPDEST
0x42b PUSH1 0x1
0x42d SLOAD
0x42e PUSH1 0x1
0x430 PUSH1 0xa0
0x432 PUSH1 0x2
0x434 EXP
0x435 SUB
0x436 AND
0x437 DUP2
0x438 JUMP
---
0x42a: JUMPDEST 
0x42b: V411 = 0x1
0x42d: V412 = S[0x1]
0x42e: V413 = 0x1
0x430: V414 = 0xa0
0x432: V415 = 0x2
0x434: V416 = EXP 0x2 0xa0
0x435: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x436: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x438: JUMP 0x113
---
Entry stack: [V12, 0x113]
Stack pops: 1
Stack additions: [S0, V418]
Exit stack: [V12, 0x113, V418]

================================

Block 0x439
[0x439:0x43e]
---
Predecessors: [0x1fd]
Successors: [0x205]
---
0x439 JUMPDEST
0x43a PUSH1 0x4
0x43c SLOAD
0x43d DUP2
0x43e JUMP
---
0x439: JUMPDEST 
0x43a: V419 = 0x4
0x43c: V420 = S[0x4]
0x43e: JUMP 0x205
---
Entry stack: [V12, 0x205]
Stack pops: 1
Stack additions: [S0, V420]
Exit stack: [V12, 0x205, V420]

================================

Block 0x43f
[0x43f:0x449]
---
Predecessors: []
Successors: [0x6e4]
---
0x43f JUMPDEST
0x440 PUSH1 0x0
0x442 PUSH2 0x361
0x445 DUP5
0x446 PUSH2 0x6e4
0x449 JUMP
---
0x43f: JUMPDEST 
0x440: V421 = 0x0
0x442: V422 = 0x361
0x446: V423 = 0x6e4
0x449: JUMP 0x6e4
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x361, S2]
Exit stack: [S2, S1, S0, 0x0, 0x361, S2]

================================

Block 0x44a
[0x44a:0x44c]
---
Predecessors: []
Successors: [0x44d]
---
0x44a JUMPDEST
0x44b SWAP1
0x44c POP
---
0x44a: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x44d
[0x44d:0x453]
---
Predecessors: [0x44a]
Successors: []
Has unresolved jump.
---
0x44d JUMPDEST
0x44e SWAP4
0x44f SWAP3
0x450 POP
0x451 POP
0x452 POP
0x453 JUMP
---
0x44d: JUMPDEST 
0x453: JUMP S4
---
Entry stack: [S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x454
[0x454:0x46d]
---
Predecessors: [0x25e]
Successors: [0x46e, 0x472]
---
0x454 JUMPDEST
0x455 PUSH1 0x0
0x457 DUP1
0x458 SLOAD
0x459 DUP2
0x45a SWAP1
0x45b CALLER
0x45c PUSH1 0x1
0x45e PUSH1 0xa0
0x460 PUSH1 0x2
0x462 EXP
0x463 SUB
0x464 SWAP1
0x465 DUP2
0x466 AND
0x467 SWAP2
0x468 AND
0x469 EQ
0x46a PUSH2 0x472
0x46d JUMPI
---
0x454: JUMPDEST 
0x455: V424 = 0x0
0x458: V425 = S[0x0]
0x45b: V426 = CALLER
0x45c: V427 = 0x1
0x45e: V428 = 0xa0
0x460: V429 = 0x2
0x462: V430 = EXP 0x2 0xa0
0x463: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x466: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x468: V433 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0x469: V434 = EQ V433 V432
0x46a: V435 = 0x472
0x46d: JUMPI 0x472 V434
---
Entry stack: [V12, 0xc2, V241]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xc2, V241, 0x0, 0x0]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x454]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V436 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0]

================================

Block 0x472
[0x472:0x4b9]
---
Predecessors: [0x454]
Successors: [0x4ba, 0x4be]
---
0x472 JUMPDEST
0x473 PUSH1 0x2
0x475 SLOAD
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e ADDRESS
0x47f DUP2
0x480 AND
0x481 SWAP2
0x482 AND
0x483 PUSH4 0xf77c4791
0x488 PUSH1 0x0
0x48a PUSH1 0x40
0x48c MLOAD
0x48d PUSH1 0x20
0x48f ADD
0x490 MSTORE
0x491 PUSH1 0x40
0x493 MLOAD
0x494 DUP2
0x495 PUSH4 0xffffffff
0x49a AND
0x49b PUSH1 0xe0
0x49d PUSH1 0x2
0x49f EXP
0x4a0 MUL
0x4a1 DUP2
0x4a2 MSTORE
0x4a3 PUSH1 0x4
0x4a5 ADD
0x4a6 PUSH1 0x20
0x4a8 PUSH1 0x40
0x4aa MLOAD
0x4ab DUP1
0x4ac DUP4
0x4ad SUB
0x4ae DUP2
0x4af PUSH1 0x0
0x4b1 DUP8
0x4b2 DUP1
0x4b3 EXTCODESIZE
0x4b4 ISZERO
0x4b5 ISZERO
0x4b6 PUSH2 0x4be
0x4b9 JUMPI
---
0x472: JUMPDEST 
0x473: V437 = 0x2
0x475: V438 = S[0x2]
0x476: V439 = 0x1
0x478: V440 = 0xa0
0x47a: V441 = 0x2
0x47c: V442 = EXP 0x2 0xa0
0x47d: V443 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V444 = ADDRESS
0x480: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x482: V446 = AND V438 0xffffffffffffffffffffffffffffffffffffffff
0x483: V447 = 0xf77c4791
0x488: V448 = 0x0
0x48a: V449 = 0x40
0x48c: V450 = M[0x40]
0x48d: V451 = 0x20
0x48f: V452 = ADD 0x20 V450
0x490: M[V452] = 0x0
0x491: V453 = 0x40
0x493: V454 = M[0x40]
0x495: V455 = 0xffffffff
0x49a: V456 = AND 0xffffffff 0xf77c4791
0x49b: V457 = 0xe0
0x49d: V458 = 0x2
0x49f: V459 = EXP 0x2 0xe0
0x4a0: V460 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf77c4791
0x4a2: M[V454] = 0xf77c479100000000000000000000000000000000000000000000000000000000
0x4a3: V461 = 0x4
0x4a5: V462 = ADD 0x4 V454
0x4a6: V463 = 0x20
0x4a8: V464 = 0x40
0x4aa: V465 = M[0x40]
0x4ad: V466 = SUB V462 V465
0x4af: V467 = 0x0
0x4b3: V468 = EXTCODESIZE V446
0x4b4: V469 = ISZERO V468
0x4b5: V470 = ISZERO V469
0x4b6: V471 = 0x4be
0x4b9: JUMPI 0x4be V470
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0]
Stack pops: 0
Stack additions: [V445, V446, 0xf77c4791, V462, 0x20, V465, V466, V465, 0x0, V446]
Exit stack: [V12, 0xc2, V241, 0x0, 0x0, V445, V446, 0xf77c4791, V462, 0x20, V465, V466, V465, 0x0, V446]

================================

Block 0x4ba
[0x4ba:0x4bd]
---
Predecessors: [0x472]
Successors: []
---
0x4ba PUSH1 0x0
0x4bc DUP1
0x4bd REVERT
---
0x4ba: V472 = 0x0
0x4bd: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0, V445, V446, 0xf77c4791, V462, 0x20, V465, V466, V465, 0x0, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0, V445, V446, 0xf77c4791, V462, 0x20, V465, V466, V465, 0x0, V446]

================================

Block 0x4be
[0x4be:0x4ca]
---
Predecessors: [0x472]
Successors: [0x4cb, 0x4cf]
---
0x4be JUMPDEST
0x4bf PUSH2 0x2c6
0x4c2 GAS
0x4c3 SUB
0x4c4 CALL
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 PUSH2 0x4cf
0x4ca JUMPI
---
0x4be: JUMPDEST 
0x4bf: V473 = 0x2c6
0x4c2: V474 = GAS
0x4c3: V475 = SUB V474 0x2c6
0x4c4: V476 = CALL V475 V446 0x0 V465 V466 V465 0x20
0x4c5: V477 = ISZERO V476
0x4c6: V478 = ISZERO V477
0x4c7: V479 = 0x4cf
0x4ca: JUMPI 0x4cf V478
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0, V445, V446, 0xf77c4791, V462, 0x20, V465, V466, V465, 0x0, V446]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0, V445, V446, 0xf77c4791, V462]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x4be]
Successors: []
---
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce REVERT
---
0x4cb: V480 = 0x0
0x4ce: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0, V445, V446, 0xf77c4791, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0, V445, V446, 0xf77c4791, V462]

================================

Block 0x4cf
[0x4cf:0x4e8]
---
Predecessors: [0x4be]
Successors: [0x4e9, 0x54d]
---
0x4cf JUMPDEST
0x4d0 POP
0x4d1 POP
0x4d2 POP
0x4d3 PUSH1 0x40
0x4d5 MLOAD
0x4d6 DUP1
0x4d7 MLOAD
0x4d8 SWAP1
0x4d9 POP
0x4da PUSH1 0x1
0x4dc PUSH1 0xa0
0x4de PUSH1 0x2
0x4e0 EXP
0x4e1 SUB
0x4e2 AND
0x4e3 EQ
0x4e4 ISZERO
0x4e5 PUSH2 0x54d
0x4e8 JUMPI
---
0x4cf: JUMPDEST 
0x4d3: V481 = 0x40
0x4d5: V482 = M[0x40]
0x4d7: V483 = M[V482]
0x4da: V484 = 0x1
0x4dc: V485 = 0xa0
0x4de: V486 = 0x2
0x4e0: V487 = EXP 0x2 0xa0
0x4e1: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e2: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x4e3: V490 = EQ V489 V445
0x4e4: V491 = ISZERO V490
0x4e5: V492 = 0x54d
0x4e8: JUMPI 0x54d V491
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0, V445, V446, 0xf77c4791, V462]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0]

================================

Block 0x4e9
[0x4e9:0x533]
---
Predecessors: [0x4cf]
Successors: [0x534, 0x538]
---
0x4e9 PUSH1 0x2
0x4eb SLOAD
0x4ec PUSH1 0x1
0x4ee PUSH1 0xa0
0x4f0 PUSH1 0x2
0x4f2 EXP
0x4f3 SUB
0x4f4 AND
0x4f5 PUSH4 0xdf8de3e7
0x4fa DUP5
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe PUSH1 0xe0
0x500 PUSH1 0x2
0x502 EXP
0x503 PUSH4 0xffffffff
0x508 DUP5
0x509 AND
0x50a MUL
0x50b DUP2
0x50c MSTORE
0x50d PUSH1 0x1
0x50f PUSH1 0xa0
0x511 PUSH1 0x2
0x513 EXP
0x514 SUB
0x515 SWAP1
0x516 SWAP2
0x517 AND
0x518 PUSH1 0x4
0x51a DUP3
0x51b ADD
0x51c MSTORE
0x51d PUSH1 0x24
0x51f ADD
0x520 PUSH1 0x0
0x522 PUSH1 0x40
0x524 MLOAD
0x525 DUP1
0x526 DUP4
0x527 SUB
0x528 DUP2
0x529 PUSH1 0x0
0x52b DUP8
0x52c DUP1
0x52d EXTCODESIZE
0x52e ISZERO
0x52f ISZERO
0x530 PUSH2 0x538
0x533 JUMPI
---
0x4e9: V493 = 0x2
0x4eb: V494 = S[0x2]
0x4ec: V495 = 0x1
0x4ee: V496 = 0xa0
0x4f0: V497 = 0x2
0x4f2: V498 = EXP 0x2 0xa0
0x4f3: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f4: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x4f5: V501 = 0xdf8de3e7
0x4fb: V502 = 0x40
0x4fd: V503 = M[0x40]
0x4fe: V504 = 0xe0
0x500: V505 = 0x2
0x502: V506 = EXP 0x2 0xe0
0x503: V507 = 0xffffffff
0x509: V508 = AND 0xdf8de3e7 0xffffffff
0x50a: V509 = MUL 0xdf8de3e7 0x100000000000000000000000000000000000000000000000000000000
0x50c: M[V503] = 0xdf8de3e700000000000000000000000000000000000000000000000000000000
0x50d: V510 = 0x1
0x50f: V511 = 0xa0
0x511: V512 = 0x2
0x513: V513 = EXP 0x2 0xa0
0x514: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V515 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x518: V516 = 0x4
0x51b: V517 = ADD V503 0x4
0x51c: M[V517] = V515
0x51d: V518 = 0x24
0x51f: V519 = ADD 0x24 V503
0x520: V520 = 0x0
0x522: V521 = 0x40
0x524: V522 = M[0x40]
0x527: V523 = SUB V519 V522
0x529: V524 = 0x0
0x52d: V525 = EXTCODESIZE V500
0x52e: V526 = ISZERO V525
0x52f: V527 = ISZERO V526
0x530: V528 = 0x538
0x533: JUMPI 0x538 V527
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V500, 0xdf8de3e7, V519, 0x0, V522, V523, V522, 0x0, V500]
Exit stack: [V12, 0xc2, V241, 0x0, 0x0, V500, 0xdf8de3e7, V519, 0x0, V522, V523, V522, 0x0, V500]

================================

Block 0x534
[0x534:0x537]
---
Predecessors: [0x4e9]
Successors: []
---
0x534 PUSH1 0x0
0x536 DUP1
0x537 REVERT
---
0x534: V529 = 0x0
0x537: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0, V500, 0xdf8de3e7, V519, 0x0, V522, V523, V522, 0x0, V500]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0, V500, 0xdf8de3e7, V519, 0x0, V522, V523, V522, 0x0, V500]

================================

Block 0x538
[0x538:0x544]
---
Predecessors: [0x4e9]
Successors: [0x545, 0x549]
---
0x538 JUMPDEST
0x539 PUSH2 0x2c6
0x53c GAS
0x53d SUB
0x53e CALL
0x53f ISZERO
0x540 ISZERO
0x541 PUSH2 0x549
0x544 JUMPI
---
0x538: JUMPDEST 
0x539: V530 = 0x2c6
0x53c: V531 = GAS
0x53d: V532 = SUB V531 0x2c6
0x53e: V533 = CALL V532 V500 0x0 V522 V523 V522 0x0
0x53f: V534 = ISZERO V533
0x540: V535 = ISZERO V534
0x541: V536 = 0x549
0x544: JUMPI 0x549 V535
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0, V500, 0xdf8de3e7, V519, 0x0, V522, V523, V522, 0x0, V500]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0, V500, 0xdf8de3e7, V519]

================================

Block 0x545
[0x545:0x548]
---
Predecessors: [0x538]
Successors: []
---
0x545 PUSH1 0x0
0x547 DUP1
0x548 REVERT
---
0x545: V537 = 0x0
0x548: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0, V500, 0xdf8de3e7, V519]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0, V500, 0xdf8de3e7, V519]

================================

Block 0x549
[0x549:0x54c]
---
Predecessors: [0x538]
Successors: [0x54d]
---
0x549 JUMPDEST
0x54a POP
0x54b POP
0x54c POP
---
0x549: JUMPDEST 
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0, V500, 0xdf8de3e7, V519]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0]

================================

Block 0x54d
[0x54d:0x55d]
---
Predecessors: [0x4cf, 0x549]
Successors: [0x55e, 0x59b]
---
0x54d JUMPDEST
0x54e PUSH1 0x1
0x550 PUSH1 0xa0
0x552 PUSH1 0x2
0x554 EXP
0x555 SUB
0x556 DUP4
0x557 AND
0x558 ISZERO
0x559 ISZERO
0x55a PUSH2 0x59b
0x55d JUMPI
---
0x54d: JUMPDEST 
0x54e: V538 = 0x1
0x550: V539 = 0xa0
0x552: V540 = 0x2
0x554: V541 = EXP 0x2 0xa0
0x555: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x557: V543 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x558: V544 = ISZERO V543
0x559: V545 = ISZERO V544
0x55a: V546 = 0x59b
0x55d: JUMPI 0x59b V545
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xc2, V241, 0x0, 0x0]

================================

Block 0x55e
[0x55e:0x591]
---
Predecessors: [0x54d]
Successors: [0x592, 0x596]
---
0x55e PUSH1 0x0
0x560 SLOAD
0x561 PUSH1 0x1
0x563 PUSH1 0xa0
0x565 PUSH1 0x2
0x567 EXP
0x568 SUB
0x569 SWAP1
0x56a DUP2
0x56b AND
0x56c SWAP1
0x56d ADDRESS
0x56e AND
0x56f BALANCE
0x570 DUP1
0x571 ISZERO
0x572 PUSH2 0x8fc
0x575 MUL
0x576 SWAP1
0x577 PUSH1 0x40
0x579 MLOAD
0x57a PUSH1 0x0
0x57c PUSH1 0x40
0x57e MLOAD
0x57f DUP1
0x580 DUP4
0x581 SUB
0x582 DUP2
0x583 DUP6
0x584 DUP9
0x585 DUP9
0x586 CALL
0x587 SWAP4
0x588 POP
0x589 POP
0x58a POP
0x58b POP
0x58c ISZERO
0x58d ISZERO
0x58e PUSH2 0x596
0x591 JUMPI
---
0x55e: V547 = 0x0
0x560: V548 = S[0x0]
0x561: V549 = 0x1
0x563: V550 = 0xa0
0x565: V551 = 0x2
0x567: V552 = EXP 0x2 0xa0
0x568: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x56d: V555 = ADDRESS
0x56e: V556 = AND V555 0xffffffffffffffffffffffffffffffffffffffff
0x56f: V557 = BALANCE V556
0x571: V558 = ISZERO V557
0x572: V559 = 0x8fc
0x575: V560 = MUL 0x8fc V558
0x577: V561 = 0x40
0x579: V562 = M[0x40]
0x57a: V563 = 0x0
0x57c: V564 = 0x40
0x57e: V565 = M[0x40]
0x581: V566 = SUB V562 V565
0x586: V567 = CALL V560 V554 V557 V565 V566 V565 0x0
0x58c: V568 = ISZERO V567
0x58d: V569 = ISZERO V568
0x58e: V570 = 0x596
0x591: JUMPI 0x596 V569
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0]

================================

Block 0x592
[0x592:0x595]
---
Predecessors: [0x55e]
Successors: []
---
0x592 PUSH1 0x0
0x594 DUP1
0x595 REVERT
---
0x592: V571 = 0x0
0x595: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0]

================================

Block 0x596
[0x596:0x59a]
---
Predecessors: [0x55e]
Successors: [0x6d6]
---
0x596 JUMPDEST
0x597 PUSH2 0x6d6
0x59a JUMP
---
0x596: JUMPDEST 
0x597: V572 = 0x6d6
0x59a: JUMP 0x6d6
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, 0x0, 0x0]

================================

Block 0x59b
[0x59b:0x5f0]
---
Predecessors: [0x54d]
Successors: [0x5f1, 0x5f5]
---
0x59b JUMPDEST
0x59c DUP3
0x59d SWAP2
0x59e POP
0x59f DUP2
0x5a0 PUSH1 0x1
0x5a2 PUSH1 0xa0
0x5a4 PUSH1 0x2
0x5a6 EXP
0x5a7 SUB
0x5a8 AND
0x5a9 PUSH4 0x70a08231
0x5ae ADDRESS
0x5af PUSH1 0x0
0x5b1 PUSH1 0x40
0x5b3 MLOAD
0x5b4 PUSH1 0x20
0x5b6 ADD
0x5b7 MSTORE
0x5b8 PUSH1 0x40
0x5ba MLOAD
0x5bb PUSH1 0xe0
0x5bd PUSH1 0x2
0x5bf EXP
0x5c0 PUSH4 0xffffffff
0x5c5 DUP5
0x5c6 AND
0x5c7 MUL
0x5c8 DUP2
0x5c9 MSTORE
0x5ca PUSH1 0x1
0x5cc PUSH1 0xa0
0x5ce PUSH1 0x2
0x5d0 EXP
0x5d1 SUB
0x5d2 SWAP1
0x5d3 SWAP2
0x5d4 AND
0x5d5 PUSH1 0x4
0x5d7 DUP3
0x5d8 ADD
0x5d9 MSTORE
0x5da PUSH1 0x24
0x5dc ADD
0x5dd PUSH1 0x20
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 DUP1
0x5e3 DUP4
0x5e4 SUB
0x5e5 DUP2
0x5e6 PUSH1 0x0
0x5e8 DUP8
0x5e9 DUP1
0x5ea EXTCODESIZE
0x5eb ISZERO
0x5ec ISZERO
0x5ed PUSH2 0x5f5
0x5f0 JUMPI
---
0x59b: JUMPDEST 
0x5a0: V573 = 0x1
0x5a2: V574 = 0xa0
0x5a4: V575 = 0x2
0x5a6: V576 = EXP 0x2 0xa0
0x5a7: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a8: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x5a9: V579 = 0x70a08231
0x5ae: V580 = ADDRESS
0x5af: V581 = 0x0
0x5b1: V582 = 0x40
0x5b3: V583 = M[0x40]
0x5b4: V584 = 0x20
0x5b6: V585 = ADD 0x20 V583
0x5b7: M[V585] = 0x0
0x5b8: V586 = 0x40
0x5ba: V587 = M[0x40]
0x5bb: V588 = 0xe0
0x5bd: V589 = 0x2
0x5bf: V590 = EXP 0x2 0xe0
0x5c0: V591 = 0xffffffff
0x5c6: V592 = AND 0x70a08231 0xffffffff
0x5c7: V593 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x5c9: M[V587] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5ca: V594 = 0x1
0x5cc: V595 = 0xa0
0x5ce: V596 = 0x2
0x5d0: V597 = EXP 0x2 0xa0
0x5d1: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d4: V599 = AND V580 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V600 = 0x4
0x5d8: V601 = ADD V587 0x4
0x5d9: M[V601] = V599
0x5da: V602 = 0x24
0x5dc: V603 = ADD 0x24 V587
0x5dd: V604 = 0x20
0x5df: V605 = 0x40
0x5e1: V606 = M[0x40]
0x5e4: V607 = SUB V603 V606
0x5e6: V608 = 0x0
0x5ea: V609 = EXTCODESIZE V578
0x5eb: V610 = ISZERO V609
0x5ec: V611 = ISZERO V610
0x5ed: V612 = 0x5f5
0x5f0: JUMPI 0x5f5 V611
---
Entry stack: [V12, 0xc2, V241, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V578, 0x70a08231, V603, 0x20, V606, V607, V606, 0x0, V578]
Exit stack: [V12, 0xc2, V241, V241, 0x0, V578, 0x70a08231, V603, 0x20, V606, V607, V606, 0x0, V578]

================================

Block 0x5f1
[0x5f1:0x5f4]
---
Predecessors: [0x59b]
Successors: []
---
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 REVERT
---
0x5f1: V613 = 0x0
0x5f4: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, V241, 0x0, V578, 0x70a08231, V603, 0x20, V606, V607, V606, 0x0, V578]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, V241, 0x0, V578, 0x70a08231, V603, 0x20, V606, V607, V606, 0x0, V578]

================================

Block 0x5f5
[0x5f5:0x601]
---
Predecessors: [0x59b]
Successors: [0x602, 0x606]
---
0x5f5 JUMPDEST
0x5f6 PUSH2 0x2c6
0x5f9 GAS
0x5fa SUB
0x5fb CALL
0x5fc ISZERO
0x5fd ISZERO
0x5fe PUSH2 0x606
0x601 JUMPI
---
0x5f5: JUMPDEST 
0x5f6: V614 = 0x2c6
0x5f9: V615 = GAS
0x5fa: V616 = SUB V615 0x2c6
0x5fb: V617 = CALL V616 V578 0x0 V606 V607 V606 0x20
0x5fc: V618 = ISZERO V617
0x5fd: V619 = ISZERO V618
0x5fe: V620 = 0x606
0x601: JUMPI 0x606 V619
---
Entry stack: [V12, 0xc2, V241, V241, 0x0, V578, 0x70a08231, V603, 0x20, V606, V607, V606, 0x0, V578]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V241, V241, 0x0, V578, 0x70a08231, V603]

================================

Block 0x602
[0x602:0x605]
---
Predecessors: [0x5f5]
Successors: []
---
0x602 PUSH1 0x0
0x604 DUP1
0x605 REVERT
---
0x602: V621 = 0x0
0x605: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, V241, 0x0, V578, 0x70a08231, V603]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, V241, 0x0, V578, 0x70a08231, V603]

================================

Block 0x606
[0x606:0x671]
---
Predecessors: [0x5f5]
Successors: [0x672, 0x676]
---
0x606 JUMPDEST
0x607 POP
0x608 POP
0x609 POP
0x60a PUSH1 0x40
0x60c MLOAD
0x60d DUP1
0x60e MLOAD
0x60f PUSH1 0x0
0x611 DUP1
0x612 SLOAD
0x613 SWAP2
0x614 SWAP4
0x615 POP
0x616 PUSH1 0x1
0x618 PUSH1 0xa0
0x61a PUSH1 0x2
0x61c EXP
0x61d SUB
0x61e DUP1
0x61f DUP7
0x620 AND
0x621 SWAP4
0x622 POP
0x623 PUSH4 0xa9059cbb
0x628 SWAP3
0x629 AND
0x62a SWAP1
0x62b DUP5
0x62c SWAP1
0x62d PUSH1 0x40
0x62f MLOAD
0x630 PUSH1 0x20
0x632 ADD
0x633 MSTORE
0x634 PUSH1 0x40
0x636 MLOAD
0x637 PUSH1 0xe0
0x639 PUSH1 0x2
0x63b EXP
0x63c PUSH4 0xffffffff
0x641 DUP6
0x642 AND
0x643 MUL
0x644 DUP2
0x645 MSTORE
0x646 PUSH1 0x1
0x648 PUSH1 0xa0
0x64a PUSH1 0x2
0x64c EXP
0x64d SUB
0x64e SWAP1
0x64f SWAP3
0x650 AND
0x651 PUSH1 0x4
0x653 DUP4
0x654 ADD
0x655 MSTORE
0x656 PUSH1 0x24
0x658 DUP3
0x659 ADD
0x65a MSTORE
0x65b PUSH1 0x44
0x65d ADD
0x65e PUSH1 0x20
0x660 PUSH1 0x40
0x662 MLOAD
0x663 DUP1
0x664 DUP4
0x665 SUB
0x666 DUP2
0x667 PUSH1 0x0
0x669 DUP8
0x66a DUP1
0x66b EXTCODESIZE
0x66c ISZERO
0x66d ISZERO
0x66e PUSH2 0x676
0x671 JUMPI
---
0x606: JUMPDEST 
0x60a: V622 = 0x40
0x60c: V623 = M[0x40]
0x60e: V624 = M[V623]
0x60f: V625 = 0x0
0x612: V626 = S[0x0]
0x616: V627 = 0x1
0x618: V628 = 0xa0
0x61a: V629 = 0x2
0x61c: V630 = EXP 0x2 0xa0
0x61d: V631 = SUB 0x10000000000000000000000000000000000000000 0x1
0x620: V632 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x623: V633 = 0xa9059cbb
0x629: V634 = AND V626 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V635 = 0x40
0x62f: V636 = M[0x40]
0x630: V637 = 0x20
0x632: V638 = ADD 0x20 V636
0x633: M[V638] = 0x0
0x634: V639 = 0x40
0x636: V640 = M[0x40]
0x637: V641 = 0xe0
0x639: V642 = 0x2
0x63b: V643 = EXP 0x2 0xe0
0x63c: V644 = 0xffffffff
0x642: V645 = AND 0xa9059cbb 0xffffffff
0x643: V646 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x645: M[V640] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x646: V647 = 0x1
0x648: V648 = 0xa0
0x64a: V649 = 0x2
0x64c: V650 = EXP 0x2 0xa0
0x64d: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x650: V652 = AND V634 0xffffffffffffffffffffffffffffffffffffffff
0x651: V653 = 0x4
0x654: V654 = ADD V640 0x4
0x655: M[V654] = V652
0x656: V655 = 0x24
0x659: V656 = ADD V640 0x24
0x65a: M[V656] = V624
0x65b: V657 = 0x44
0x65d: V658 = ADD 0x44 V640
0x65e: V659 = 0x20
0x660: V660 = 0x40
0x662: V661 = M[0x40]
0x665: V662 = SUB V658 V661
0x667: V663 = 0x0
0x66b: V664 = EXTCODESIZE V632
0x66c: V665 = ISZERO V664
0x66d: V666 = ISZERO V665
0x66e: V667 = 0x676
0x671: JUMPI 0x676 V666
---
Entry stack: [V12, 0xc2, V241, V241, 0x0, V578, 0x70a08231, V603]
Stack pops: 5
Stack additions: [S4, V624, V632, 0xa9059cbb, V658, 0x20, V661, V662, V661, 0x0, V632]
Exit stack: [V12, 0xc2, V241, V241, V624, V632, 0xa9059cbb, V658, 0x20, V661, V662, V661, 0x0, V632]

================================

Block 0x672
[0x672:0x675]
---
Predecessors: [0x606]
Successors: []
---
0x672 PUSH1 0x0
0x674 DUP1
0x675 REVERT
---
0x672: V668 = 0x0
0x675: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, V241, V624, V632, 0xa9059cbb, V658, 0x20, V661, V662, V661, 0x0, V632]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, V241, V624, V632, 0xa9059cbb, V658, 0x20, V661, V662, V661, 0x0, V632]

================================

Block 0x676
[0x676:0x682]
---
Predecessors: [0x606]
Successors: [0x683, 0x687]
---
0x676 JUMPDEST
0x677 PUSH2 0x2c6
0x67a GAS
0x67b SUB
0x67c CALL
0x67d ISZERO
0x67e ISZERO
0x67f PUSH2 0x687
0x682 JUMPI
---
0x676: JUMPDEST 
0x677: V669 = 0x2c6
0x67a: V670 = GAS
0x67b: V671 = SUB V670 0x2c6
0x67c: V672 = CALL V671 V632 0x0 V661 V662 V661 0x20
0x67d: V673 = ISZERO V672
0x67e: V674 = ISZERO V673
0x67f: V675 = 0x687
0x682: JUMPI 0x687 V674
---
Entry stack: [V12, 0xc2, V241, V241, V624, V632, 0xa9059cbb, V658, 0x20, V661, V662, V661, 0x0, V632]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V241, V241, V624, V632, 0xa9059cbb, V658]

================================

Block 0x683
[0x683:0x686]
---
Predecessors: [0x676]
Successors: []
---
0x683 PUSH1 0x0
0x685 DUP1
0x686 REVERT
---
0x683: V676 = 0x0
0x686: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V241, V241, V624, V632, 0xa9059cbb, V658]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, V241, V624, V632, 0xa9059cbb, V658]

================================

Block 0x687
[0x687:0x6d5]
---
Predecessors: [0x676]
Successors: [0x6d6]
---
0x687 JUMPDEST
0x688 POP
0x689 POP
0x68a POP
0x68b PUSH1 0x40
0x68d MLOAD
0x68e DUP1
0x68f MLOAD
0x690 POP
0x691 POP
0x692 PUSH1 0x0
0x694 SLOAD
0x695 PUSH1 0x1
0x697 PUSH1 0xa0
0x699 PUSH1 0x2
0x69b EXP
0x69c SUB
0x69d SWAP1
0x69e DUP2
0x69f AND
0x6a0 SWAP1
0x6a1 DUP5
0x6a2 AND
0x6a3 PUSH32 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c
0x6c4 DUP4
0x6c5 PUSH1 0x40
0x6c7 MLOAD
0x6c8 SWAP1
0x6c9 DUP2
0x6ca MSTORE
0x6cb PUSH1 0x20
0x6cd ADD
0x6ce PUSH1 0x40
0x6d0 MLOAD
0x6d1 DUP1
0x6d2 SWAP2
0x6d3 SUB
0x6d4 SWAP1
0x6d5 LOG3
---
0x687: JUMPDEST 
0x68b: V677 = 0x40
0x68d: V678 = M[0x40]
0x68f: V679 = M[V678]
0x692: V680 = 0x0
0x694: V681 = S[0x0]
0x695: V682 = 0x1
0x697: V683 = 0xa0
0x699: V684 = 0x2
0x69b: V685 = EXP 0x2 0xa0
0x69c: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69f: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x6a2: V688 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x6a3: V689 = 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c
0x6c5: V690 = 0x40
0x6c7: V691 = M[0x40]
0x6ca: M[V691] = V624
0x6cb: V692 = 0x20
0x6cd: V693 = ADD 0x20 V691
0x6ce: V694 = 0x40
0x6d0: V695 = M[0x40]
0x6d3: V696 = SUB V693 V695
0x6d5: LOG V695 V696 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c V688 V687
---
Entry stack: [V12, 0xc2, V241, V241, V624, V632, 0xa9059cbb, V658]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0xc2, V241, V241, V624]

================================

Block 0x6d6
[0x6d6:0x6d6]
---
Predecessors: [0x596, 0x687]
Successors: [0x6d7]
---
0x6d6 JUMPDEST
---
0x6d6: JUMPDEST 
---
Entry stack: [V12, 0xc2, V241, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V241, S1, S0]

================================

Block 0x6d7
[0x6d7:0x6db]
---
Predecessors: [0x6d6]
Successors: [0xc2]
---
0x6d7 JUMPDEST
0x6d8 POP
0x6d9 POP
0x6da POP
0x6db JUMP
---
0x6d7: JUMPDEST 
0x6db: JUMP 0xc2
---
Entry stack: [V12, 0xc2, V241, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x6dc
[0x6dc:0x6de]
---
Predecessors: [0x274]
Successors: [0x6df]
---
0x6dc JUMPDEST
0x6dd PUSH1 0x0
---
0x6dc: JUMPDEST 
0x6dd: V697 = 0x0
---
Entry stack: [V12, 0xec, V251]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xec, V251, 0x0]

================================

Block 0x6df
[0x6df:0x6e3]
---
Predecessors: [0x6dc]
Successors: [0xec]
---
0x6df JUMPDEST
0x6e0 SWAP2
0x6e1 SWAP1
0x6e2 POP
0x6e3 JUMP
---
0x6df: JUMPDEST 
0x6e3: JUMP 0xec
---
Entry stack: [V12, 0xec, V251, 0x0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x0]

================================

Block 0x6e4
[0x6e4:0x6f2]
---
Predecessors: [0x356, 0x43f]
Successors: [0x6f3, 0x783]
---
0x6e4 JUMPDEST
0x6e5 PUSH1 0x0
0x6e7 DUP1
0x6e8 PUSH1 0x4
0x6ea SLOAD
0x6eb PUSH1 0x0
0x6ed EQ
0x6ee ISZERO
0x6ef PUSH2 0x783
0x6f2 JUMPI
---
0x6e4: JUMPDEST 
0x6e5: V698 = 0x0
0x6e8: V699 = 0x4
0x6ea: V700 = S[0x4]
0x6eb: V701 = 0x0
0x6ed: V702 = EQ 0x0 V700
0x6ee: V703 = ISZERO V702
0x6ef: V704 = 0x783
0x6f2: JUMPI 0x783 V703
---
Entry stack: [V12, 0xec, S5, S4, S3, 0x0, 0x361, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xec, S5, S4, S3, 0x0, 0x361, S0, 0x0, 0x0]

================================

Block 0x6f3
[0x6f3:0x735]
---
Predecessors: [0x6e4]
Successors: [0x736, 0x73a]
---
0x6f3 PUSH1 0x3
0x6f5 SLOAD
0x6f6 PUSH1 0x1
0x6f8 PUSH1 0xa0
0x6fa PUSH1 0x2
0x6fc EXP
0x6fd SUB
0x6fe AND
0x6ff PUSH4 0xfe67a189
0x704 PUSH1 0x0
0x706 PUSH1 0x40
0x708 MLOAD
0x709 PUSH1 0x20
0x70b ADD
0x70c MSTORE
0x70d PUSH1 0x40
0x70f MLOAD
0x710 DUP2
0x711 PUSH4 0xffffffff
0x716 AND
0x717 PUSH1 0xe0
0x719 PUSH1 0x2
0x71b EXP
0x71c MUL
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x4
0x721 ADD
0x722 PUSH1 0x20
0x724 PUSH1 0x40
0x726 MLOAD
0x727 DUP1
0x728 DUP4
0x729 SUB
0x72a DUP2
0x72b PUSH1 0x0
0x72d DUP8
0x72e DUP1
0x72f EXTCODESIZE
0x730 ISZERO
0x731 ISZERO
0x732 PUSH2 0x73a
0x735 JUMPI
---
0x6f3: V705 = 0x3
0x6f5: V706 = S[0x3]
0x6f6: V707 = 0x1
0x6f8: V708 = 0xa0
0x6fa: V709 = 0x2
0x6fc: V710 = EXP 0x2 0xa0
0x6fd: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fe: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0x6ff: V713 = 0xfe67a189
0x704: V714 = 0x0
0x706: V715 = 0x40
0x708: V716 = M[0x40]
0x709: V717 = 0x20
0x70b: V718 = ADD 0x20 V716
0x70c: M[V718] = 0x0
0x70d: V719 = 0x40
0x70f: V720 = M[0x40]
0x711: V721 = 0xffffffff
0x716: V722 = AND 0xffffffff 0xfe67a189
0x717: V723 = 0xe0
0x719: V724 = 0x2
0x71b: V725 = EXP 0x2 0xe0
0x71c: V726 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfe67a189
0x71e: M[V720] = 0xfe67a18900000000000000000000000000000000000000000000000000000000
0x71f: V727 = 0x4
0x721: V728 = ADD 0x4 V720
0x722: V729 = 0x20
0x724: V730 = 0x40
0x726: V731 = M[0x40]
0x729: V732 = SUB V728 V731
0x72b: V733 = 0x0
0x72f: V734 = EXTCODESIZE V712
0x730: V735 = ISZERO V734
0x731: V736 = ISZERO V735
0x732: V737 = 0x73a
0x735: JUMPI 0x73a V736
---
Entry stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [V712, 0xfe67a189, V728, 0x20, V731, V732, V731, 0x0, V712]
Exit stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, 0x0, V712, 0xfe67a189, V728, 0x20, V731, V732, V731, 0x0, V712]

================================

Block 0x736
[0x736:0x739]
---
Predecessors: [0x6f3]
Successors: []
---
0x736 PUSH1 0x0
0x738 DUP1
0x739 REVERT
---
0x736: V738 = 0x0
0x739: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec, S16, S15, S14, 0x0, 0x361, S11, 0x0, 0x0, V712, 0xfe67a189, V728, 0x20, V731, V732, V731, 0x0, V712]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, S16, S15, S14, 0x0, 0x361, S11, 0x0, 0x0, V712, 0xfe67a189, V728, 0x20, V731, V732, V731, 0x0, V712]

================================

Block 0x73a
[0x73a:0x746]
---
Predecessors: [0x6f3]
Successors: [0x747, 0x74b]
---
0x73a JUMPDEST
0x73b PUSH2 0x2c6
0x73e GAS
0x73f SUB
0x740 CALL
0x741 ISZERO
0x742 ISZERO
0x743 PUSH2 0x74b
0x746 JUMPI
---
0x73a: JUMPDEST 
0x73b: V739 = 0x2c6
0x73e: V740 = GAS
0x73f: V741 = SUB V740 0x2c6
0x740: V742 = CALL V741 V712 0x0 V731 V732 V731 0x20
0x741: V743 = ISZERO V742
0x742: V744 = ISZERO V743
0x743: V745 = 0x74b
0x746: JUMPI 0x74b V744
---
Entry stack: [V12, 0xec, S16, S15, S14, 0x0, 0x361, S11, 0x0, 0x0, V712, 0xfe67a189, V728, 0x20, V731, V732, V731, 0x0, V712]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xec, S16, S15, S14, 0x0, 0x361, S11, 0x0, 0x0, V712, 0xfe67a189, V728]

================================

Block 0x747
[0x747:0x74a]
---
Predecessors: [0x73a]
Successors: []
---
0x747 PUSH1 0x0
0x749 DUP1
0x74a REVERT
---
0x747: V746 = 0x0
0x74a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec, S10, S9, S8, 0x0, 0x361, S5, 0x0, 0x0, V712, 0xfe67a189, V728]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, S10, S9, S8, 0x0, 0x361, S5, 0x0, 0x0, V712, 0xfe67a189, V728]

================================

Block 0x74b
[0x74b:0x75f]
---
Predecessors: [0x73a]
Successors: [0x760, 0x77a]
---
0x74b JUMPDEST
0x74c POP
0x74d POP
0x74e POP
0x74f PUSH1 0x40
0x751 MLOAD
0x752 DUP1
0x753 MLOAD
0x754 SWAP2
0x755 POP
0x756 POP
0x757 PUSH1 0x0
0x759 DUP2
0x75a GT
0x75b ISZERO
0x75c PUSH2 0x77a
0x75f JUMPI
---
0x74b: JUMPDEST 
0x74f: V747 = 0x40
0x751: V748 = M[0x40]
0x753: V749 = M[V748]
0x757: V750 = 0x0
0x75a: V751 = GT V749 0x0
0x75b: V752 = ISZERO V751
0x75c: V753 = 0x77a
0x75f: JUMPI 0x77a V752
---
Entry stack: [V12, 0xec, S10, S9, S8, 0x0, 0x361, S5, 0x0, 0x0, V712, 0xfe67a189, V728]
Stack pops: 4
Stack additions: [V749]
Exit stack: [V12, 0xec, S10, S9, S8, 0x0, 0x361, S5, 0x0, V749]

================================

Block 0x760
[0x760:0x771]
---
Predecessors: [0x74b]
Successors: [0x799]
---
0x760 PUSH2 0x772
0x763 DUP2
0x764 PUSH3 0x3f480
0x768 PUSH4 0xffffffff
0x76d PUSH2 0x799
0x770 AND
0x771 JUMP
---
0x760: V754 = 0x772
0x764: V755 = 0x3f480
0x768: V756 = 0xffffffff
0x76d: V757 = 0x799
0x770: V758 = AND 0x799 0xffffffff
0x771: JUMP 0x799
---
Entry stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, V749]
Stack pops: 1
Stack additions: [S0, 0x772, S0, 0x3f480]
Exit stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, V749, 0x772, V749, 0x3f480]

================================

Block 0x772
[0x772:0x779]
---
Predecessors: [0x7ac]
Successors: [0x783]
---
0x772 JUMPDEST
0x773 PUSH1 0x4
0x775 SSTORE
0x776 PUSH2 0x783
0x779 JUMP
---
0x772: JUMPDEST 
0x773: V759 = 0x4
0x775: S[0x4] = V769
0x776: V760 = 0x783
0x779: JUMP 0x783
---
Entry stack: [V12, 0xec, S8, S7, S6, 0x0, 0x361, S3, 0x0, V749, V769]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xec, S8, S7, S6, 0x0, 0x361, S3, 0x0, V749]

================================

Block 0x77a
[0x77a:0x782]
---
Predecessors: [0x74b]
Successors: [0x793]
---
0x77a JUMPDEST
0x77b PUSH1 0x0
0x77d SWAP2
0x77e POP
0x77f PUSH2 0x793
0x782 JUMP
---
0x77a: JUMPDEST 
0x77b: V761 = 0x0
0x77f: V762 = 0x793
0x782: JUMP 0x793
---
Entry stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, V749]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, V749]

================================

Block 0x783
[0x783:0x783]
---
Predecessors: [0x6e4, 0x772]
Successors: [0x784]
---
0x783 JUMPDEST
---
0x783: JUMPDEST 
---
Entry stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, S0]

================================

Block 0x784
[0x784:0x78e]
---
Predecessors: [0x783]
Successors: [0x7b3]
---
0x784 JUMPDEST
0x785 PUSH1 0x4
0x787 SLOAD
0x788 PUSH2 0x78f
0x78b PUSH2 0x7b3
0x78e JUMP
---
0x784: JUMPDEST 
0x785: V763 = 0x4
0x787: V764 = S[0x4]
0x788: V765 = 0x78f
0x78b: V766 = 0x7b3
0x78e: JUMP 0x7b3
---
Entry stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, S0]
Stack pops: 0
Stack additions: [V764, 0x78f]
Exit stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, 0x0, S0, V764, 0x78f]

================================

Block 0x78f
[0x78f:0x792]
---
Predecessors: [0x7b5]
Successors: [0x793]
---
0x78f JUMPDEST
0x790 GT
0x791 SWAP2
0x792 POP
---
0x78f: JUMPDEST 
0x790: V767 = GT V773 V764
---
Entry stack: [V12, 0xec, S9, S8, S7, 0x0, 0x361, S4, 0x0, S2, V764, V773]
Stack pops: 4
Stack additions: [V767, S2]
Exit stack: [V12, 0xec, S9, S8, S7, 0x0, 0x361, S4, V767, S2]

================================

Block 0x793
[0x793:0x798]
---
Predecessors: [0x77a, 0x78f]
Successors: [0x361]
---
0x793 JUMPDEST
0x794 POP
0x795 SWAP2
0x796 SWAP1
0x797 POP
0x798 JUMP
---
0x793: JUMPDEST 
0x798: JUMP 0x361
---
Entry stack: [V12, 0xec, S7, S6, S5, 0x0, 0x361, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, 0xec, S7, S6, S5, 0x0, S1]

================================

Block 0x799
[0x799:0x7a6]
---
Predecessors: [0x760]
Successors: [0x7a7, 0x7a8]
---
0x799 JUMPDEST
0x79a PUSH1 0x0
0x79c DUP3
0x79d DUP3
0x79e ADD
0x79f DUP4
0x7a0 DUP2
0x7a1 LT
0x7a2 ISZERO
0x7a3 PUSH2 0x7a8
0x7a6 JUMPI
---
0x799: JUMPDEST 
0x79a: V768 = 0x0
0x79e: V769 = ADD 0x3f480 V749
0x7a1: V770 = LT V769 V749
0x7a2: V771 = ISZERO V770
0x7a3: V772 = 0x7a8
0x7a6: JUMPI 0x7a8 V771
---
Entry stack: [V12, 0xec, S10, S9, S8, 0x0, 0x361, S5, 0x0, V749, 0x772, V749, 0x3f480]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V769]
Exit stack: [V12, 0xec, S10, S9, S8, 0x0, 0x361, S5, 0x0, V749, 0x772, V749, 0x3f480, 0x0, V769]

================================

Block 0x7a7
[0x7a7:0x7a7]
---
Predecessors: [0x799]
Successors: []
---
0x7a7 INVALID
---
0x7a7: INVALID 
---
Entry stack: [V12, 0xec, S12, S11, S10, 0x0, 0x361, S7, 0x0, V749, 0x772, V749, 0x3f480, 0x0, V769]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, S12, S11, S10, 0x0, 0x361, S7, 0x0, V749, 0x772, V749, 0x3f480, 0x0, V769]

================================

Block 0x7a8
[0x7a8:0x7ab]
---
Predecessors: [0x799]
Successors: [0x7ac]
---
0x7a8 JUMPDEST
0x7a9 DUP1
0x7aa SWAP2
0x7ab POP
---
0x7a8: JUMPDEST 
---
Entry stack: [V12, 0xec, S12, S11, S10, 0x0, 0x361, S7, 0x0, V749, 0x772, V749, 0x3f480, 0x0, V769]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0xec, S12, S11, S10, 0x0, 0x361, S7, 0x0, V749, 0x772, V749, 0x3f480, V769, V769]

================================

Block 0x7ac
[0x7ac:0x7b2]
---
Predecessors: [0x7a8]
Successors: [0x772]
---
0x7ac JUMPDEST
0x7ad POP
0x7ae SWAP3
0x7af SWAP2
0x7b0 POP
0x7b1 POP
0x7b2 JUMP
---
0x7ac: JUMPDEST 
0x7b2: JUMP 0x772
---
Entry stack: [V12, 0xec, S12, S11, S10, 0x0, 0x361, S7, 0x0, V749, 0x772, V749, 0x3f480, V769, V769]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xec, S12, S11, S10, 0x0, 0x361, S7, 0x0, V749, V769]

================================

Block 0x7b3
[0x7b3:0x7b4]
---
Predecessors: [0x784]
Successors: [0x7b5]
---
0x7b3 JUMPDEST
0x7b4 TIMESTAMP
---
0x7b3: JUMPDEST 
0x7b4: V773 = TIMESTAMP
---
Entry stack: [V12, 0xec, S9, S8, S7, 0x0, 0x361, S4, 0x0, S2, V764, 0x78f]
Stack pops: 0
Stack additions: [V773]
Exit stack: [V12, 0xec, S9, S8, S7, 0x0, 0x361, S4, 0x0, S2, V764, 0x78f, V773]

================================

Block 0x7b5
[0x7b5:0x7b7]
---
Predecessors: [0x7b3]
Successors: [0x78f]
---
0x7b5 JUMPDEST
0x7b6 SWAP1
0x7b7 JUMP
---
0x7b5: JUMPDEST 
0x7b7: JUMP 0x78f
---
Entry stack: [V12, 0xec, S10, S9, S8, 0x0, 0x361, S5, 0x0, S3, V764, 0x78f, V773]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xec, S10, S9, S8, 0x0, 0x361, S5, 0x0, S3, V764, V773]

================================

Block 0x7b8
[0x7b8:0x7d9]
---
Predecessors: []
Successors: [0x7da]
Has unresolved jump.
---
0x7b8 STOP
0x7b9 LOG1
0x7ba PUSH6 0x627a7a723058
0x7c1 SHA3
0x7c2 MISSING 0xd9
0x7c3 MISSING 0xc1
0x7c4 SSTORE
0x7c5 MISSING 0xc0
0x7c6 BALANCE
0x7c7 SLT
0x7c8 PUSH11 0x7a09c28f5d5c38a6432dcb
0x7d4 SSTORE
0x7d5 STOP
0x7d6 LOG3
0x7d7 CALLDATACOPY
0x7d8 SWAP3
0x7d9 JUMPI
---
0x7b8: STOP 
0x7b9: LOG S0 S1 S2
0x7ba: V774 = 0x627a7a723058
0x7c1: V775 = SHA3 0x627a7a723058 S3
0x7c2: MISSING 0xd9
0x7c3: MISSING 0xc1
0x7c4: S[S0] = S1
0x7c5: MISSING 0xc0
0x7c6: V776 = BALANCE S0
0x7c7: V777 = SLT V776 S1
0x7c8: V778 = 0x7a09c28f5d5c38a6432dcb
0x7d4: S[0x7a09c28f5d5c38a6432dcb] = V777
0x7d5: STOP 
0x7d6: LOG S0 S1 S2 S3 S4
0x7d7: CALLDATACOPY S5 S6 S7
0x7d9: JUMPI S11 S9
---
Entry stack: []
Stack pops: 0
Stack additions: [V775, S10, S8]
Exit stack: []

================================

Block 0x7da
[0x7da:0x7e3]
---
Predecessors: [0x7b8]
Successors: []
---
0x7da MISSING 0xe1
0x7db CALLDATALOAD
0x7dc EXP
0x7dd MISSING 0xc4
0x7de MISSING 0xb6
0x7df STATICCALL
0x7e0 MISSING 0xe5
0x7e1 COINBASE
0x7e2 STOP
0x7e3 MISSING 0x29
---
0x7da: MISSING 0xe1
0x7db: V779 = CALLDATALOAD S0
0x7dc: V780 = EXP V779 S1
0x7dd: MISSING 0xc4
0x7de: MISSING 0xb6
0x7df: V781 = STATICCALL S0 S1 S2 S3 S4 S5
0x7e0: MISSING 0xe5
0x7e1: V782 = COINBASE
0x7e2: STOP 
0x7e3: MISSING 0x29
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [V780, V781, V782]
Exit stack: []

================================

Function 0:
Public function signature: 0x3cebb823
Entry block: 0xa3
Exit block: 0xc2
Body: 0xa3, 0xaa, 0xae, 0xc2, 0x29c, 0x2b3, 0x2b7, 0x303, 0x307, 0x314, 0x318, 0x352, 0x353

Function 1:
Public function signature: 0x4a393149
Entry block: 0xc4
Exit block: 0xcb
Body: 0xc4, 0xcb, 0xcf, 0xec

Function 2:
Public function signature: 0x50520b1f
Entry block: 0x100
Exit block: 0x113
Body: 0x100, 0x107, 0x10b, 0x113, 0x36b

Function 3:
Public function signature: 0x79ba5097
Entry block: 0x12f
Exit block: 0xc2
Body: 0xc2, 0x12f, 0x136, 0x13a, 0x37a, 0x392, 0x3c1, 0x3c2

Function 4:
Public function signature: 0x8317f65c
Entry block: 0x144
Exit block: 0x113
Body: 0x113, 0x144, 0x14b, 0x14f, 0x3c4

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x173
Exit block: 0x113
Body: 0x113, 0x173, 0x17a, 0x17e, 0x3d3

Function 6:
Public function signature: 0xa6f9dae1
Entry block: 0x1a2
Exit block: 0xc2
Body: 0xc2, 0x1a2, 0x1a9, 0x1ad, 0x3e2, 0x3f9, 0x3fd, 0x426, 0x427

Function 7:
Public function signature: 0xd4ee1d90
Entry block: 0x1c3
Exit block: 0x113
Body: 0x113, 0x1c3, 0x1ca, 0x1ce, 0x42a

Function 8:
Public function signature: 0xda4493f6
Entry block: 0x1f2
Exit block: 0x205
Body: 0x1f2, 0x1f9, 0x1fd, 0x205, 0x439

Function 9:
Public function signature: 0xda682aeb
Entry block: 0xc4
Exit block: 0xcb
Body: 0xc4, 0xcb, 0xcf, 0xec

Function 10:
Public function signature: 0xdf8de3e7
Entry block: 0x253
Exit block: 0xc2
Body: 0xc2, 0x253, 0x25a, 0x25e, 0x454, 0x46e, 0x472, 0x4ba, 0x4be, 0x4cb, 0x4cf, 0x4e9, 0x534, 0x538, 0x545, 0x549, 0x54d, 0x55e, 0x592, 0x596, 0x59b, 0x5f1, 0x5f5, 0x602, 0x606, 0x672, 0x676, 0x683, 0x687, 0x6d6, 0x6d7

Function 11:
Public function signature: 0xf48c3054
Entry block: 0x274
Exit block: 0xec
Body: 0xec, 0x274, 0x6dc, 0x6df

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0x9e
Body: 0x9e

Function 13:
Private function
Entry block: 0x6e4
Exit block: 0x793
Body: 0x6e4, 0x6f3, 0x73a, 0x74b, 0x760, 0x772, 0x77a, 0x783, 0x784, 0x78f, 0x793, 0x799, 0x7a8, 0x7ac, 0x7b3, 0x7b5

Function 14:
Private function
Entry block: 0x356
Exit block: 0x6df
Body: 0x356, 0x361, 0x364

