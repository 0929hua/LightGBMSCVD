Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x74]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x74
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x74
0xc: JUMPI 0x74 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0xef67887
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x79
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0xef67887
0x22: V15 = EQ V13 0xef67887
0x23: V16 = 0x79
0x26: JUMPI 0x79 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xa0]
---
0x27 DUP1
0x28 PUSH4 0x1d4233b9
0x2d EQ
0x2e PUSH2 0xa0
0x31 JUMPI
---
0x28: V17 = 0x1d4233b9
0x2d: V18 = EQ 0x1d4233b9 V13
0x2e: V19 = 0xa0
0x31: JUMPI 0xa0 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xb7]
---
0x32 DUP1
0x33 PUSH4 0x706f6937
0x38 EQ
0x39 PUSH2 0xb7
0x3c JUMPI
---
0x33: V20 = 0x706f6937
0x38: V21 = EQ 0x706f6937 V13
0x39: V22 = 0xb7
0x3c: JUMPI 0xb7 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x145]
---
0x3d DUP1
0x3e PUSH4 0x83197ef0
0x43 EQ
0x44 PUSH2 0x145
0x47 JUMPI
---
0x3e: V23 = 0x83197ef0
0x43: V24 = EQ 0x83197ef0 V13
0x44: V25 = 0x145
0x47: JUMPI 0x145 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x15a]
---
0x48 DUP1
0x49 PUSH4 0x8da5cb5b
0x4e EQ
0x4f PUSH2 0x15a
0x52 JUMPI
---
0x49: V26 = 0x8da5cb5b
0x4e: V27 = EQ 0x8da5cb5b V13
0x4f: V28 = 0x15a
0x52: JUMPI 0x15a V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x18b]
---
0x53 DUP1
0x54 PUSH4 0xd144454b
0x59 EQ
0x5a PUSH2 0x18b
0x5d JUMPI
---
0x54: V29 = 0xd144454b
0x59: V30 = EQ 0xd144454b V13
0x5a: V31 = 0x18b
0x5d: JUMPI 0x18b V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1a0]
---
0x5e DUP1
0x5f PUSH4 0xf2fde38b
0x64 EQ
0x65 PUSH2 0x1a0
0x68 JUMPI
---
0x5f: V32 = 0xf2fde38b
0x64: V33 = EQ 0xf2fde38b V13
0x65: V34 = 0x1a0
0x68: JUMPI 0x1a0 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1c1]
---
0x69 DUP1
0x6a PUSH4 0xfc0c546a
0x6f EQ
0x70 PUSH2 0x1c1
0x73 JUMPI
---
0x6a: V35 = 0xfc0c546a
0x6f: V36 = EQ 0xfc0c546a V13
0x70: V37 = 0x1c1
0x73: JUMPI 0x1c1 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x78]
---
Predecessors: [0x0, 0x69]
Successors: []
---
0x74 JUMPDEST
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x74: JUMPDEST 
0x75: V38 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b DUP1
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x79: JUMPDEST 
0x7a: V39 = CALLVALUE
0x7c: V40 = ISZERO V39
0x7d: V41 = 0x85
0x80: JUMPI 0x85 V40
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V13, V39]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x79]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V42 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V13, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V39]

================================

Block 0x85
[0x85:0x8d]
---
Predecessors: [0x79]
Successors: [0x1d6]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH2 0x8e
0x8a PUSH2 0x1d6
0x8d JUMP
---
0x85: JUMPDEST 
0x87: V43 = 0x8e
0x8a: V44 = 0x1d6
0x8d: JUMP 0x1d6
---
Entry stack: [V13, V39]
Stack pops: 1
Stack additions: [0x8e]
Exit stack: [V13, 0x8e]

================================

Block 0x8e
[0x8e:0x9f]
---
Predecessors: [0x265, 0x59e]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x40
0x91 DUP1
0x92 MLOAD
0x93 SWAP2
0x94 DUP3
0x95 MSTORE
0x96 MLOAD
0x97 SWAP1
0x98 DUP2
0x99 SWAP1
0x9a SUB
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP1
0x9f RETURN
---
0x8e: JUMPDEST 
0x8f: V45 = 0x40
0x92: V46 = M[0x40]
0x95: M[V46] = S0
0x96: V47 = M[0x40]
0x9a: V48 = SUB V46 V47
0x9b: V49 = 0x20
0x9d: V50 = ADD 0x20 V48
0x9f: RETURN V47 V50
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0xa0
[0xa0:0xa7]
---
Predecessors: [0x27]
Successors: [0xa8, 0xac]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 DUP1
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa0: JUMPDEST 
0xa1: V51 = CALLVALUE
0xa3: V52 = ISZERO V51
0xa4: V53 = 0xac
0xa7: JUMPI 0xac V52
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V13, V51]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa0]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V54 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V13, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V51]

================================

Block 0xac
[0xac:0xb4]
---
Predecessors: [0xa0]
Successors: [0x26c]
---
0xac JUMPDEST
0xad POP
0xae PUSH2 0xb5
0xb1 PUSH2 0x26c
0xb4 JUMP
---
0xac: JUMPDEST 
0xae: V55 = 0xb5
0xb1: V56 = 0x26c
0xb4: JUMP 0x26c
---
Entry stack: [V13, V51]
Stack pops: 1
Stack additions: [0xb5]
Exit stack: [V13, 0xb5]

================================

Block 0xb5
[0xb5:0xb6]
---
Predecessors: [0x2be, 0x40c, 0x5d0]
Successors: []
---
0xb5 JUMPDEST
0xb6 STOP
---
0xb5: JUMPDEST 
0xb6: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xb7
[0xb7:0xbe]
---
Predecessors: [0x32]
Successors: [0xbf, 0xc3]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 DUP1
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb7: JUMPDEST 
0xb8: V57 = CALLVALUE
0xba: V58 = ISZERO V57
0xbb: V59 = 0xc3
0xbe: JUMPI 0xc3 V58
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V13, V57]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb7]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V60 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V13, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V57]

================================

Block 0xc3
[0xc3:0x144]
---
Predecessors: [0xb7]
Successors: [0x2c1]
---
0xc3 JUMPDEST
0xc4 POP
0xc5 PUSH1 0x40
0xc7 DUP1
0xc8 MLOAD
0xc9 PUSH1 0x20
0xcb PUSH1 0x4
0xcd DUP1
0xce CALLDATALOAD
0xcf DUP1
0xd0 DUP3
0xd1 ADD
0xd2 CALLDATALOAD
0xd3 DUP4
0xd4 DUP2
0xd5 MUL
0xd6 DUP1
0xd7 DUP7
0xd8 ADD
0xd9 DUP6
0xda ADD
0xdb SWAP1
0xdc SWAP7
0xdd MSTORE
0xde DUP1
0xdf DUP6
0xe0 MSTORE
0xe1 PUSH2 0xb5
0xe4 SWAP6
0xe5 CALLDATASIZE
0xe6 SWAP6
0xe7 SWAP4
0xe8 SWAP5
0xe9 PUSH1 0x24
0xeb SWAP5
0xec SWAP4
0xed DUP6
0xee ADD
0xef SWAP3
0xf0 SWAP2
0xf1 DUP3
0xf2 SWAP2
0xf3 DUP6
0xf4 ADD
0xf5 SWAP1
0xf6 DUP5
0xf7 SWAP1
0xf8 DUP1
0xf9 DUP3
0xfa DUP5
0xfb CALLDATACOPY
0xfc POP
0xfd POP
0xfe PUSH1 0x40
0x100 DUP1
0x101 MLOAD
0x102 DUP8
0x103 CALLDATALOAD
0x104 DUP10
0x105 ADD
0x106 DUP1
0x107 CALLDATALOAD
0x108 PUSH1 0x20
0x10a DUP2
0x10b DUP2
0x10c MUL
0x10d DUP5
0x10e DUP2
0x10f ADD
0x110 DUP3
0x111 ADD
0x112 SWAP1
0x113 SWAP6
0x114 MSTORE
0x115 DUP2
0x116 DUP5
0x117 MSTORE
0x118 SWAP9
0x119 SWAP12
0x11a SWAP11
0x11b SWAP10
0x11c DUP10
0x11d ADD
0x11e SWAP9
0x11f SWAP3
0x120 SWAP8
0x121 POP
0x122 SWAP1
0x123 DUP3
0x124 ADD
0x125 SWAP6
0x126 POP
0x127 SWAP4
0x128 POP
0x129 DUP4
0x12a SWAP3
0x12b POP
0x12c DUP6
0x12d ADD
0x12e SWAP1
0x12f DUP5
0x130 SWAP1
0x131 DUP1
0x132 DUP3
0x133 DUP5
0x134 CALLDATACOPY
0x135 POP
0x136 SWAP5
0x137 SWAP8
0x138 POP
0x139 PUSH2 0x2c1
0x13c SWAP7
0x13d POP
0x13e POP
0x13f POP
0x140 POP
0x141 POP
0x142 POP
0x143 POP
0x144 JUMP
---
0xc3: JUMPDEST 
0xc5: V61 = 0x40
0xc8: V62 = M[0x40]
0xc9: V63 = 0x20
0xcb: V64 = 0x4
0xce: V65 = CALLDATALOAD 0x4
0xd1: V66 = ADD 0x4 V65
0xd2: V67 = CALLDATALOAD V66
0xd5: V68 = MUL V67 0x20
0xd8: V69 = ADD V62 V68
0xda: V70 = ADD 0x20 V69
0xdd: M[0x40] = V70
0xe0: M[V62] = V67
0xe1: V71 = 0xb5
0xe5: V72 = CALLDATASIZE
0xe9: V73 = 0x24
0xee: V74 = ADD 0x24 V65
0xf4: V75 = ADD V62 0x20
0xfb: CALLDATACOPY V75 V74 V68
0xfe: V76 = 0x40
0x101: V77 = M[0x40]
0x103: V78 = CALLDATALOAD 0x24
0x105: V79 = ADD 0x4 V78
0x107: V80 = CALLDATALOAD V79
0x108: V81 = 0x20
0x10c: V82 = MUL 0x20 V80
0x10f: V83 = ADD V82 V77
0x111: V84 = ADD 0x20 V83
0x114: M[0x40] = V84
0x117: M[V77] = V80
0x11d: V85 = ADD 0x20 0x24
0x124: V86 = ADD 0x20 V79
0x12d: V87 = ADD V77 0x20
0x134: CALLDATACOPY V87 V86 V82
0x139: V88 = 0x2c1
0x144: JUMP 0x2c1
---
Entry stack: [V13, V57]
Stack pops: 1
Stack additions: [0xb5, V62, V77]
Exit stack: [V13, 0xb5, V62, V77]

================================

Block 0x145
[0x145:0x14c]
---
Predecessors: [0x3d]
Successors: [0x14d, 0x151]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 DUP1
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x145: JUMPDEST 
0x146: V89 = CALLVALUE
0x148: V90 = ISZERO V89
0x149: V91 = 0x151
0x14c: JUMPI 0x151 V90
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V13, V89]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x145]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V92 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V13, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V89]

================================

Block 0x151
[0x151:0x159]
---
Predecessors: [0x145]
Successors: [0x451]
---
0x151 JUMPDEST
0x152 POP
0x153 PUSH2 0xb5
0x156 PUSH2 0x451
0x159 JUMP
---
0x151: JUMPDEST 
0x153: V93 = 0xb5
0x156: V94 = 0x451
0x159: JUMP 0x451
---
Entry stack: [V13, V89]
Stack pops: 1
Stack additions: [0xb5]
Exit stack: [V13, 0xb5]

================================

Block 0x15a
[0x15a:0x161]
---
Predecessors: [0x48]
Successors: [0x162, 0x166]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c DUP1
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x15a: JUMPDEST 
0x15b: V95 = CALLVALUE
0x15d: V96 = ISZERO V95
0x15e: V97 = 0x166
0x161: JUMPI 0x166 V96
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V13, V95]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x15a]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V98 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V13, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V95]

================================

Block 0x166
[0x166:0x16e]
---
Predecessors: [0x15a]
Successors: [0x58f]
---
0x166 JUMPDEST
0x167 POP
0x168 PUSH2 0x16f
0x16b PUSH2 0x58f
0x16e JUMP
---
0x166: JUMPDEST 
0x168: V99 = 0x16f
0x16b: V100 = 0x58f
0x16e: JUMP 0x58f
---
Entry stack: [V13, V95]
Stack pops: 1
Stack additions: [0x16f]
Exit stack: [V13, 0x16f]

================================

Block 0x16f
[0x16f:0x18a]
---
Predecessors: [0x58f, 0x638]
Successors: []
---
0x16f JUMPDEST
0x170 PUSH1 0x40
0x172 DUP1
0x173 MLOAD
0x174 PUSH1 0x1
0x176 PUSH1 0xa0
0x178 PUSH1 0x2
0x17a EXP
0x17b SUB
0x17c SWAP1
0x17d SWAP3
0x17e AND
0x17f DUP3
0x180 MSTORE
0x181 MLOAD
0x182 SWAP1
0x183 DUP2
0x184 SWAP1
0x185 SUB
0x186 PUSH1 0x20
0x188 ADD
0x189 SWAP1
0x18a RETURN
---
0x16f: JUMPDEST 
0x170: V101 = 0x40
0x173: V102 = M[0x40]
0x174: V103 = 0x1
0x176: V104 = 0xa0
0x178: V105 = 0x2
0x17a: V106 = EXP 0x2 0xa0
0x17b: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17e: V108 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x180: M[V102] = V108
0x181: V109 = M[0x40]
0x185: V110 = SUB V102 V109
0x186: V111 = 0x20
0x188: V112 = ADD 0x20 V110
0x18a: RETURN V109 V112
---
Entry stack: [V13, 0x16f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x16f]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x53]
Successors: [0x193, 0x197]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d DUP1
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18b: JUMPDEST 
0x18c: V113 = CALLVALUE
0x18e: V114 = ISZERO V113
0x18f: V115 = 0x197
0x192: JUMPI 0x197 V114
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V13, V113]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18b]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V116 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V13, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V113]

================================

Block 0x197
[0x197:0x19f]
---
Predecessors: [0x18b]
Successors: [0x59e]
---
0x197 JUMPDEST
0x198 POP
0x199 PUSH2 0x8e
0x19c PUSH2 0x59e
0x19f JUMP
---
0x197: JUMPDEST 
0x199: V117 = 0x8e
0x19c: V118 = 0x59e
0x19f: JUMP 0x59e
---
Entry stack: [V13, V113]
Stack pops: 1
Stack additions: [0x8e]
Exit stack: [V13, 0x8e]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x5e]
Successors: [0x1a8, 0x1ac]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 DUP1
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V119 = CALLVALUE
0x1a3: V120 = ISZERO V119
0x1a4: V121 = 0x1ac
0x1a7: JUMPI 0x1ac V120
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V13, V119]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V122 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V13, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V119]

================================

Block 0x1ac
[0x1ac:0x1c0]
---
Predecessors: [0x1a0]
Successors: [0x5a4]
---
0x1ac JUMPDEST
0x1ad POP
0x1ae PUSH2 0xb5
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0xa0
0x1b5 PUSH1 0x2
0x1b7 EXP
0x1b8 SUB
0x1b9 PUSH1 0x4
0x1bb CALLDATALOAD
0x1bc AND
0x1bd PUSH2 0x5a4
0x1c0 JUMP
---
0x1ac: JUMPDEST 
0x1ae: V123 = 0xb5
0x1b1: V124 = 0x1
0x1b3: V125 = 0xa0
0x1b5: V126 = 0x2
0x1b7: V127 = EXP 0x2 0xa0
0x1b8: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b9: V129 = 0x4
0x1bb: V130 = CALLDATALOAD 0x4
0x1bc: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V132 = 0x5a4
0x1c0: JUMP 0x5a4
---
Entry stack: [V13, V119]
Stack pops: 1
Stack additions: [0xb5, V131]
Exit stack: [V13, 0xb5, V131]

================================

Block 0x1c1
[0x1c1:0x1c8]
---
Predecessors: [0x69]
Successors: [0x1c9, 0x1cd]
---
0x1c1 JUMPDEST
0x1c2 CALLVALUE
0x1c3 DUP1
0x1c4 ISZERO
0x1c5 PUSH2 0x1cd
0x1c8 JUMPI
---
0x1c1: JUMPDEST 
0x1c2: V133 = CALLVALUE
0x1c4: V134 = ISZERO V133
0x1c5: V135 = 0x1cd
0x1c8: JUMPI 0x1cd V134
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V133]
Exit stack: [V13, V133]

================================

Block 0x1c9
[0x1c9:0x1cc]
---
Predecessors: [0x1c1]
Successors: []
---
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc REVERT
---
0x1c9: V136 = 0x0
0x1cc: REVERT 0x0 0x0
---
Entry stack: [V13, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V133]

================================

Block 0x1cd
[0x1cd:0x1d5]
---
Predecessors: [0x1c1]
Successors: [0x638]
---
0x1cd JUMPDEST
0x1ce POP
0x1cf PUSH2 0x16f
0x1d2 PUSH2 0x638
0x1d5 JUMP
---
0x1cd: JUMPDEST 
0x1cf: V137 = 0x16f
0x1d2: V138 = 0x638
0x1d5: JUMP 0x638
---
Entry stack: [V13, V133]
Stack pops: 1
Stack additions: [0x16f]
Exit stack: [V13, 0x16f]

================================

Block 0x1d6
[0x1d6:0x236]
---
Predecessors: [0x85]
Successors: [0x237, 0x23b]
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x1
0x1d9 SLOAD
0x1da PUSH1 0x40
0x1dc DUP1
0x1dd MLOAD
0x1de PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1ff DUP2
0x200 MSTORE
0x201 ADDRESS
0x202 PUSH1 0x4
0x204 DUP3
0x205 ADD
0x206 MSTORE
0x207 SWAP1
0x208 MLOAD
0x209 PUSH1 0x0
0x20b SWAP3
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 AND
0x215 SWAP2
0x216 PUSH4 0x70a08231
0x21b SWAP2
0x21c PUSH1 0x24
0x21e DUP1
0x21f DUP4
0x220 ADD
0x221 SWAP3
0x222 PUSH1 0x20
0x224 SWAP3
0x225 SWAP2
0x226 SWAP1
0x227 DUP3
0x228 SWAP1
0x229 SUB
0x22a ADD
0x22b DUP2
0x22c DUP8
0x22d DUP8
0x22e DUP1
0x22f EXTCODESIZE
0x230 ISZERO
0x231 DUP1
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V139 = 0x1
0x1d9: V140 = S[0x1]
0x1da: V141 = 0x40
0x1dd: V142 = M[0x40]
0x1de: V143 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x200: M[V142] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x201: V144 = ADDRESS
0x202: V145 = 0x4
0x205: V146 = ADD V142 0x4
0x206: M[V146] = V144
0x208: V147 = M[0x40]
0x209: V148 = 0x0
0x20c: V149 = 0x1
0x20e: V150 = 0xa0
0x210: V151 = 0x2
0x212: V152 = EXP 0x2 0xa0
0x213: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x214: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x216: V155 = 0x70a08231
0x21c: V156 = 0x24
0x220: V157 = ADD V142 0x24
0x222: V158 = 0x20
0x229: V159 = SUB V142 V147
0x22a: V160 = ADD V159 0x24
0x22f: V161 = EXTCODESIZE V154
0x230: V162 = ISZERO V161
0x232: V163 = ISZERO V162
0x233: V164 = 0x23b
0x236: JUMPI 0x23b V163
---
Entry stack: [V13, 0x8e]
Stack pops: 0
Stack additions: [0x0, V154, 0x70a08231, V157, 0x20, V147, V160, V147, 0x0, V154, V162]
Exit stack: [V13, 0x8e, 0x0, V154, 0x70a08231, V157, 0x20, V147, V160, V147, 0x0, V154, V162]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x1d6]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V165 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8e, 0x0, V154, 0x70a08231, V157, 0x20, V147, V160, V147, 0x0, V154, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8e, 0x0, V154, 0x70a08231, V157, 0x20, V147, V160, V147, 0x0, V154, V162]

================================

Block 0x23b
[0x23b:0x245]
---
Predecessors: [0x1d6]
Successors: [0x246, 0x24f]
---
0x23b JUMPDEST
0x23c POP
0x23d GAS
0x23e CALL
0x23f ISZERO
0x240 DUP1
0x241 ISZERO
0x242 PUSH2 0x24f
0x245 JUMPI
---
0x23b: JUMPDEST 
0x23d: V166 = GAS
0x23e: V167 = CALL V166 V154 0x0 V147 V160 V147 0x20
0x23f: V168 = ISZERO V167
0x241: V169 = ISZERO V168
0x242: V170 = 0x24f
0x245: JUMPI 0x24f V169
---
Entry stack: [V13, 0x8e, 0x0, V154, 0x70a08231, V157, 0x20, V147, V160, V147, 0x0, V154, V162]
Stack pops: 7
Stack additions: [V168]
Exit stack: [V13, 0x8e, 0x0, V154, 0x70a08231, V157, V168]

================================

Block 0x246
[0x246:0x24e]
---
Predecessors: [0x23b]
Successors: []
---
0x246 RETURNDATASIZE
0x247 PUSH1 0x0
0x249 DUP1
0x24a RETURNDATACOPY
0x24b RETURNDATASIZE
0x24c PUSH1 0x0
0x24e REVERT
---
0x246: V171 = RETURNDATASIZE
0x247: V172 = 0x0
0x24a: RETURNDATACOPY 0x0 0x0 V171
0x24b: V173 = RETURNDATASIZE
0x24c: V174 = 0x0
0x24e: REVERT 0x0 V173
---
Entry stack: [V13, 0x8e, 0x0, V154, 0x70a08231, V157, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8e, 0x0, V154, 0x70a08231, V157, V168]

================================

Block 0x24f
[0x24f:0x260]
---
Predecessors: [0x23b]
Successors: [0x261, 0x265]
---
0x24f JUMPDEST
0x250 POP
0x251 POP
0x252 POP
0x253 POP
0x254 PUSH1 0x40
0x256 MLOAD
0x257 RETURNDATASIZE
0x258 PUSH1 0x20
0x25a DUP2
0x25b LT
0x25c ISZERO
0x25d PUSH2 0x265
0x260 JUMPI
---
0x24f: JUMPDEST 
0x254: V175 = 0x40
0x256: V176 = M[0x40]
0x257: V177 = RETURNDATASIZE
0x258: V178 = 0x20
0x25b: V179 = LT V177 0x20
0x25c: V180 = ISZERO V179
0x25d: V181 = 0x265
0x260: JUMPI 0x265 V180
---
Entry stack: [V13, 0x8e, 0x0, V154, 0x70a08231, V157, V168]
Stack pops: 4
Stack additions: [V176, V177]
Exit stack: [V13, 0x8e, 0x0, V176, V177]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x24f]
Successors: []
---
0x261 PUSH1 0x0
0x263 DUP1
0x264 REVERT
---
0x261: V182 = 0x0
0x264: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8e, 0x0, V176, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8e, 0x0, V176, V177]

================================

Block 0x265
[0x265:0x26b]
---
Predecessors: [0x24f]
Successors: [0x8e]
---
0x265 JUMPDEST
0x266 POP
0x267 MLOAD
0x268 SWAP1
0x269 POP
0x26a SWAP1
0x26b JUMP
---
0x265: JUMPDEST 
0x267: V183 = M[V176]
0x26b: JUMP 0x8e
---
Entry stack: [V13, 0x8e, 0x0, V176, V177]
Stack pops: 4
Stack additions: [V183]
Exit stack: [V13, V183]

================================

Block 0x26c
[0x26c:0x27e]
---
Predecessors: [0xac]
Successors: [0x27f, 0x283]
---
0x26c JUMPDEST
0x26d PUSH1 0x0
0x26f SLOAD
0x270 PUSH1 0x1
0x272 PUSH1 0xa0
0x274 PUSH1 0x2
0x276 EXP
0x277 SUB
0x278 AND
0x279 CALLER
0x27a EQ
0x27b PUSH2 0x283
0x27e JUMPI
---
0x26c: JUMPDEST 
0x26d: V184 = 0x0
0x26f: V185 = S[0x0]
0x270: V186 = 0x1
0x272: V187 = 0xa0
0x274: V188 = 0x2
0x276: V189 = EXP 0x2 0xa0
0x277: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x278: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x279: V192 = CALLER
0x27a: V193 = EQ V192 V191
0x27b: V194 = 0x283
0x27e: JUMPI 0x283 V193
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x26c]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V195 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x283
[0x283:0x2b4]
---
Predecessors: [0x26c]
Successors: [0x2b5, 0x2be]
---
0x283 JUMPDEST
0x284 PUSH1 0x0
0x286 DUP1
0x287 SLOAD
0x288 PUSH1 0x40
0x28a MLOAD
0x28b PUSH1 0x1
0x28d PUSH1 0xa0
0x28f PUSH1 0x2
0x291 EXP
0x292 SUB
0x293 SWAP1
0x294 SWAP2
0x295 AND
0x296 SWAP2
0x297 ADDRESS
0x298 BALANCE
0x299 DUP1
0x29a ISZERO
0x29b PUSH2 0x8fc
0x29e MUL
0x29f SWAP3
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 DUP2
0x2a3 DUP2
0x2a4 DUP2
0x2a5 DUP6
0x2a6 DUP9
0x2a7 DUP9
0x2a8 CALL
0x2a9 SWAP4
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad POP
0x2ae ISZERO
0x2af DUP1
0x2b0 ISZERO
0x2b1 PUSH2 0x2be
0x2b4 JUMPI
---
0x283: JUMPDEST 
0x284: V196 = 0x0
0x287: V197 = S[0x0]
0x288: V198 = 0x40
0x28a: V199 = M[0x40]
0x28b: V200 = 0x1
0x28d: V201 = 0xa0
0x28f: V202 = 0x2
0x291: V203 = EXP 0x2 0xa0
0x292: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V205 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x297: V206 = ADDRESS
0x298: V207 = BALANCE V206
0x29a: V208 = ISZERO V207
0x29b: V209 = 0x8fc
0x29e: V210 = MUL 0x8fc V208
0x2a8: V211 = CALL V210 V205 V207 V199 0x0 V199 0x0
0x2ae: V212 = ISZERO V211
0x2b0: V213 = ISZERO V212
0x2b1: V214 = 0x2be
0x2b4: JUMPI 0x2be V213
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: [V212]
Exit stack: [V13, 0xb5, V212]

================================

Block 0x2b5
[0x2b5:0x2bd]
---
Predecessors: [0x283]
Successors: []
---
0x2b5 RETURNDATASIZE
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 RETURNDATACOPY
0x2ba RETURNDATASIZE
0x2bb PUSH1 0x0
0x2bd REVERT
---
0x2b5: V215 = RETURNDATASIZE
0x2b6: V216 = 0x0
0x2b9: RETURNDATACOPY 0x0 0x0 V215
0x2ba: V217 = RETURNDATASIZE
0x2bb: V218 = 0x0
0x2bd: REVERT 0x0 V217
---
Entry stack: [V13, 0xb5, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V212]

================================

Block 0x2be
[0x2be:0x2c0]
---
Predecessors: [0x283]
Successors: [0xb5]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 JUMP
---
0x2be: JUMPDEST 
0x2c0: JUMP 0xb5
---
Entry stack: [V13, 0xb5, V212]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c1
[0x2c1:0x2d6]
---
Predecessors: [0xc3]
Successors: [0x2d7, 0x2db]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 SLOAD
0x2c6 DUP2
0x2c7 SWAP1
0x2c8 PUSH1 0x1
0x2ca PUSH1 0xa0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf SUB
0x2d0 AND
0x2d1 CALLER
0x2d2 EQ
0x2d3 PUSH2 0x2db
0x2d6 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V219 = 0x0
0x2c5: V220 = S[0x0]
0x2c8: V221 = 0x1
0x2ca: V222 = 0xa0
0x2cc: V223 = 0x2
0x2ce: V224 = EXP 0x2 0xa0
0x2cf: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x2d1: V227 = CALLER
0x2d2: V228 = EQ V227 V226
0x2d3: V229 = 0x2db
0x2d6: JUMPI 0x2db V228
---
Entry stack: [V13, 0xb5, V62, V77]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0xb5, V62, V77, 0x0, 0x0]

================================

Block 0x2d7
[0x2d7:0x2da]
---
Predecessors: [0x2c1]
Successors: []
---
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da REVERT
---
0x2d7: V230 = 0x0
0x2da: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V62, V77, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, 0x0, 0x0]

================================

Block 0x2db
[0x2db:0x2e4]
---
Predecessors: [0x2c1]
Successors: [0x2e5, 0x2e9]
---
0x2db JUMPDEST
0x2dc DUP3
0x2dd MLOAD
0x2de DUP5
0x2df MLOAD
0x2e0 EQ
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2db: JUMPDEST 
0x2dd: V231 = M[V77]
0x2df: V232 = M[V62]
0x2e0: V233 = EQ V232 V231
0x2e1: V234 = 0x2e9
0x2e4: JUMPI 0x2e9 V233
---
Entry stack: [V13, 0xb5, V62, V77, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0xb5, V62, V77, 0x0, 0x0]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2db]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V235 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V62, V77, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, 0x0, 0x0]

================================

Block 0x2e9
[0x2e9:0x2ef]
---
Predecessors: [0x2db]
Successors: [0x2f0]
---
0x2e9 JUMPDEST
0x2ea POP
0x2eb PUSH1 0x0
0x2ed SWAP1
0x2ee POP
0x2ef DUP1
---
0x2e9: JUMPDEST 
0x2eb: V236 = 0x0
---
Entry stack: [V13, 0xb5, V62, V77, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0xb5, V62, V77, 0x0, 0x0]

================================

Block 0x2f0
[0x2f0:0x2f9]
---
Predecessors: [0x2e9, 0x3ef]
Successors: [0x2fa, 0x3f9]
---
0x2f0 JUMPDEST
0x2f1 DUP4
0x2f2 MLOAD
0x2f3 DUP2
0x2f4 LT
0x2f5 ISZERO
0x2f6 PUSH2 0x3f9
0x2f9 JUMPI
---
0x2f0: JUMPDEST 
0x2f2: V237 = M[V62]
0x2f4: V238 = LT S0 V237
0x2f5: V239 = ISZERO V238
0x2f6: V240 = 0x3f9
0x2f9: JUMPI 0x3f9 V239
---
Entry stack: [V13, 0xb5, V62, V77, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0xb5, V62, V77, S1, S0]

================================

Block 0x2fa
[0x2fa:0x31a]
---
Predecessors: [0x2f0]
Successors: [0x31b, 0x31c]
---
0x2fa PUSH1 0x1
0x2fc SLOAD
0x2fd DUP5
0x2fe MLOAD
0x2ff PUSH1 0x1
0x301 PUSH1 0xa0
0x303 PUSH1 0x2
0x305 EXP
0x306 SUB
0x307 SWAP1
0x308 SWAP2
0x309 AND
0x30a SWAP1
0x30b PUSH4 0xa9059cbb
0x310 SWAP1
0x311 DUP7
0x312 SWAP1
0x313 DUP5
0x314 SWAP1
0x315 DUP2
0x316 LT
0x317 PUSH2 0x31c
0x31a JUMPI
---
0x2fa: V241 = 0x1
0x2fc: V242 = S[0x1]
0x2fe: V243 = M[V62]
0x2ff: V244 = 0x1
0x301: V245 = 0xa0
0x303: V246 = 0x2
0x305: V247 = EXP 0x2 0xa0
0x306: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x309: V249 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V250 = 0xa9059cbb
0x316: V251 = LT S0 V243
0x317: V252 = 0x31c
0x31a: JUMPI 0x31c V251
---
Entry stack: [V13, 0xb5, V62, V77, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V249, 0xa9059cbb, S3, S0]
Exit stack: [V13, 0xb5, V62, V77, S1, S0, V249, 0xa9059cbb, V62, S0]

================================

Block 0x31b
[0x31b:0x31b]
---
Predecessors: [0x2fa]
Successors: []
---
0x31b INVALID
---
0x31b: INVALID 
---
Entry stack: [V13, 0xb5, V62, V77, S5, S4, V249, 0xa9059cbb, V62, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S5, S4, V249, 0xa9059cbb, V62, S0]

================================

Block 0x31c
[0x31c:0x332]
---
Predecessors: [0x2fa]
Successors: [0x333, 0x334]
---
0x31c JUMPDEST
0x31d SWAP1
0x31e PUSH1 0x20
0x320 ADD
0x321 SWAP1
0x322 PUSH1 0x20
0x324 MUL
0x325 ADD
0x326 MLOAD
0x327 DUP6
0x328 DUP5
0x329 DUP2
0x32a MLOAD
0x32b DUP2
0x32c LT
0x32d ISZERO
0x32e ISZERO
0x32f PUSH2 0x334
0x332 JUMPI
---
0x31c: JUMPDEST 
0x31e: V253 = 0x20
0x320: V254 = ADD 0x20 V62
0x322: V255 = 0x20
0x324: V256 = MUL 0x20 S0
0x325: V257 = ADD V256 V254
0x326: V258 = M[V257]
0x32a: V259 = M[V77]
0x32c: V260 = LT S4 V259
0x32d: V261 = ISZERO V260
0x32e: V262 = ISZERO V261
0x32f: V263 = 0x334
0x332: JUMPI 0x334 V262
---
Entry stack: [V13, 0xb5, V62, V77, S5, S4, V249, 0xa9059cbb, V62, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V258, S6, S4]
Exit stack: [V13, 0xb5, V62, V77, S5, S4, V249, 0xa9059cbb, V258, V77, S4]

================================

Block 0x333
[0x333:0x333]
---
Predecessors: [0x31c]
Successors: []
---
0x333 INVALID
---
0x333: INVALID 
---
Entry stack: [V13, 0xb5, V62, V77, S6, S5, V249, 0xa9059cbb, V258, V77, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S6, S5, V249, 0xa9059cbb, V258, V77, S0]

================================

Block 0x334
[0x334:0x38b]
---
Predecessors: [0x31c]
Successors: [0x38c, 0x390]
---
0x334 JUMPDEST
0x335 SWAP1
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP1
0x33a PUSH1 0x20
0x33c MUL
0x33d ADD
0x33e MLOAD
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP4
0x343 PUSH4 0xffffffff
0x348 AND
0x349 PUSH1 0xe0
0x34b PUSH1 0x2
0x34d EXP
0x34e MUL
0x34f DUP2
0x350 MSTORE
0x351 PUSH1 0x4
0x353 ADD
0x354 DUP1
0x355 DUP4
0x356 PUSH1 0x1
0x358 PUSH1 0xa0
0x35a PUSH1 0x2
0x35c EXP
0x35d SUB
0x35e AND
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 AND
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x20
0x36c ADD
0x36d DUP3
0x36e DUP2
0x36f MSTORE
0x370 PUSH1 0x20
0x372 ADD
0x373 SWAP3
0x374 POP
0x375 POP
0x376 POP
0x377 PUSH1 0x20
0x379 PUSH1 0x40
0x37b MLOAD
0x37c DUP1
0x37d DUP4
0x37e SUB
0x37f DUP2
0x380 PUSH1 0x0
0x382 DUP8
0x383 DUP1
0x384 EXTCODESIZE
0x385 ISZERO
0x386 DUP1
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x334: JUMPDEST 
0x336: V264 = 0x20
0x338: V265 = ADD 0x20 V77
0x33a: V266 = 0x20
0x33c: V267 = MUL 0x20 S0
0x33d: V268 = ADD V267 V265
0x33e: V269 = M[V268]
0x33f: V270 = 0x40
0x341: V271 = M[0x40]
0x343: V272 = 0xffffffff
0x348: V273 = AND 0xffffffff 0xa9059cbb
0x349: V274 = 0xe0
0x34b: V275 = 0x2
0x34d: V276 = EXP 0x2 0xe0
0x34e: V277 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x350: M[V271] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x351: V278 = 0x4
0x353: V279 = ADD 0x4 V271
0x356: V280 = 0x1
0x358: V281 = 0xa0
0x35a: V282 = 0x2
0x35c: V283 = EXP 0x2 0xa0
0x35d: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35e: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x35f: V286 = 0x1
0x361: V287 = 0xa0
0x363: V288 = 0x2
0x365: V289 = EXP 0x2 0xa0
0x366: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x369: M[V279] = V291
0x36a: V292 = 0x20
0x36c: V293 = ADD 0x20 V279
0x36f: M[V293] = V269
0x370: V294 = 0x20
0x372: V295 = ADD 0x20 V293
0x377: V296 = 0x20
0x379: V297 = 0x40
0x37b: V298 = M[0x40]
0x37e: V299 = SUB V295 V298
0x380: V300 = 0x0
0x384: V301 = EXTCODESIZE V249
0x385: V302 = ISZERO V301
0x387: V303 = ISZERO V302
0x388: V304 = 0x390
0x38b: JUMPI 0x390 V303
---
Entry stack: [V13, 0xb5, V62, V77, S6, S5, V249, 0xa9059cbb, V258, V77, S0]
Stack pops: 5
Stack additions: [S4, S3, V295, 0x20, V298, V299, V298, 0x0, S4, V302]
Exit stack: [V13, 0xb5, V62, V77, S6, S5, V249, 0xa9059cbb, V295, 0x20, V298, V299, V298, 0x0, V249, V302]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x334]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V305 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V62, V77, S11, S10, V249, 0xa9059cbb, V295, 0x20, V298, V299, V298, 0x0, V249, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S11, S10, V249, 0xa9059cbb, V295, 0x20, V298, V299, V298, 0x0, V249, V302]

================================

Block 0x390
[0x390:0x39a]
---
Predecessors: [0x334]
Successors: [0x39b, 0x3a4]
---
0x390 JUMPDEST
0x391 POP
0x392 GAS
0x393 CALL
0x394 ISZERO
0x395 DUP1
0x396 ISZERO
0x397 PUSH2 0x3a4
0x39a JUMPI
---
0x390: JUMPDEST 
0x392: V306 = GAS
0x393: V307 = CALL V306 V249 0x0 V298 V299 V298 0x20
0x394: V308 = ISZERO V307
0x396: V309 = ISZERO V308
0x397: V310 = 0x3a4
0x39a: JUMPI 0x3a4 V309
---
Entry stack: [V13, 0xb5, V62, V77, S11, S10, V249, 0xa9059cbb, V295, 0x20, V298, V299, V298, 0x0, V249, V302]
Stack pops: 7
Stack additions: [V308]
Exit stack: [V13, 0xb5, V62, V77, S11, S10, V249, 0xa9059cbb, V295, V308]

================================

Block 0x39b
[0x39b:0x3a3]
---
Predecessors: [0x390]
Successors: []
---
0x39b RETURNDATASIZE
0x39c PUSH1 0x0
0x39e DUP1
0x39f RETURNDATACOPY
0x3a0 RETURNDATASIZE
0x3a1 PUSH1 0x0
0x3a3 REVERT
---
0x39b: V311 = RETURNDATASIZE
0x39c: V312 = 0x0
0x39f: RETURNDATACOPY 0x0 0x0 V311
0x3a0: V313 = RETURNDATASIZE
0x3a1: V314 = 0x0
0x3a3: REVERT 0x0 V313
---
Entry stack: [V13, 0xb5, V62, V77, S5, S4, V249, 0xa9059cbb, V295, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S5, S4, V249, 0xa9059cbb, V295, V308]

================================

Block 0x3a4
[0x3a4:0x3b5]
---
Predecessors: [0x390]
Successors: [0x3b6, 0x3ba]
---
0x3a4 JUMPDEST
0x3a5 POP
0x3a6 POP
0x3a7 POP
0x3a8 POP
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac RETURNDATASIZE
0x3ad PUSH1 0x20
0x3af DUP2
0x3b0 LT
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3a4: JUMPDEST 
0x3a9: V315 = 0x40
0x3ab: V316 = M[0x40]
0x3ac: V317 = RETURNDATASIZE
0x3ad: V318 = 0x20
0x3b0: V319 = LT V317 0x20
0x3b1: V320 = ISZERO V319
0x3b2: V321 = 0x3ba
0x3b5: JUMPI 0x3ba V320
---
Entry stack: [V13, 0xb5, V62, V77, S5, S4, V249, 0xa9059cbb, V295, V308]
Stack pops: 4
Stack additions: [V316, V317]
Exit stack: [V13, 0xb5, V62, V77, S5, S4, V316, V317]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3a4]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V322 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V62, V77, S3, S2, V316, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S3, S2, V316, V317]

================================

Block 0x3ba
[0x3ba:0x3c2]
---
Predecessors: [0x3a4]
Successors: [0x3c3, 0x3c7]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc MLOAD
0x3bd ISZERO
0x3be ISZERO
0x3bf PUSH2 0x3c7
0x3c2 JUMPI
---
0x3ba: JUMPDEST 
0x3bc: V323 = M[V316]
0x3bd: V324 = ISZERO V323
0x3be: V325 = ISZERO V324
0x3bf: V326 = 0x3c7
0x3c2: JUMPI 0x3c7 V325
---
Entry stack: [V13, 0xb5, V62, V77, S3, S2, V316, V317]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S3, S2]

================================

Block 0x3c3
[0x3c3:0x3c6]
---
Predecessors: [0x3ba]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
---
0x3c3: V327 = 0x0
0x3c6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V62, V77, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S1, S0]

================================

Block 0x3c7
[0x3c7:0x3d6]
---
Predecessors: [0x3ba]
Successors: [0x3d7, 0x3d8]
---
0x3c7 JUMPDEST
0x3c8 PUSH2 0x3ef
0x3cb DUP4
0x3cc DUP3
0x3cd DUP2
0x3ce MLOAD
0x3cf DUP2
0x3d0 LT
0x3d1 ISZERO
0x3d2 ISZERO
0x3d3 PUSH2 0x3d8
0x3d6 JUMPI
---
0x3c7: JUMPDEST 
0x3c8: V328 = 0x3ef
0x3ce: V329 = M[V77]
0x3d0: V330 = LT S0 V329
0x3d1: V331 = ISZERO V330
0x3d2: V332 = ISZERO V331
0x3d3: V333 = 0x3d8
0x3d6: JUMPI 0x3d8 V332
---
Entry stack: [V13, 0xb5, V62, V77, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x3ef, S2, S0]
Exit stack: [V13, 0xb5, V62, V77, S1, S0, 0x3ef, V77, S0]

================================

Block 0x3d7
[0x3d7:0x3d7]
---
Predecessors: [0x3c7]
Successors: []
---
0x3d7 INVALID
---
0x3d7: INVALID 
---
Entry stack: [V13, 0xb5, V62, V77, S4, S3, 0x3ef, V77, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S4, S3, 0x3ef, V77, S0]

================================

Block 0x3d8
[0x3d8:0x3ee]
---
Predecessors: [0x3c7]
Successors: [0x647]
---
0x3d8 JUMPDEST
0x3d9 PUSH1 0x20
0x3db SWAP1
0x3dc DUP2
0x3dd MUL
0x3de SWAP1
0x3df SWAP2
0x3e0 ADD
0x3e1 ADD
0x3e2 MLOAD
0x3e3 DUP4
0x3e4 SWAP1
0x3e5 PUSH4 0xffffffff
0x3ea PUSH2 0x647
0x3ed AND
0x3ee JUMP
---
0x3d8: JUMPDEST 
0x3d9: V334 = 0x20
0x3dd: V335 = MUL 0x20 S0
0x3e0: V336 = ADD V77 V335
0x3e1: V337 = ADD V336 0x20
0x3e2: V338 = M[V337]
0x3e5: V339 = 0xffffffff
0x3ea: V340 = 0x647
0x3ed: V341 = AND 0x647 0xffffffff
0x3ee: JUMP 0x647
---
Entry stack: [V13, 0xb5, V62, V77, S4, S3, 0x3ef, V77, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S4, V338]
Exit stack: [V13, 0xb5, V62, V77, S4, S3, 0x3ef, S4, V338]

================================

Block 0x3ef
[0x3ef:0x3f8]
---
Predecessors: [0x656]
Successors: [0x2f0]
---
0x3ef JUMPDEST
0x3f0 SWAP2
0x3f1 POP
0x3f2 PUSH1 0x1
0x3f4 ADD
0x3f5 PUSH2 0x2f0
0x3f8 JUMP
---
0x3ef: JUMPDEST 
0x3f2: V342 = 0x1
0x3f4: V343 = ADD 0x1 S1
0x3f5: V344 = 0x2f0
0x3f8: JUMP 0x2f0
---
Entry stack: [V13, 0xb5, V62, V77, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, V343]
Exit stack: [V13, 0xb5, V62, V77, S0, V343]

================================

Block 0x3f9
[0x3f9:0x40b]
---
Predecessors: [0x2f0]
Successors: [0x647]
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x2
0x3fc SLOAD
0x3fd PUSH2 0x40c
0x400 SWAP1
0x401 DUP4
0x402 PUSH4 0xffffffff
0x407 PUSH2 0x647
0x40a AND
0x40b JUMP
---
0x3f9: JUMPDEST 
0x3fa: V345 = 0x2
0x3fc: V346 = S[0x2]
0x3fd: V347 = 0x40c
0x402: V348 = 0xffffffff
0x407: V349 = 0x647
0x40a: V350 = AND 0x647 0xffffffff
0x40b: JUMP 0x647
---
Entry stack: [V13, 0xb5, V62, V77, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x40c, V346, S1]
Exit stack: [V13, 0xb5, V62, V77, S1, S0, 0x40c, V346, S1]

================================

Block 0x40c
[0x40c:0x450]
---
Predecessors: [0x656]
Successors: [0xb5]
---
0x40c JUMPDEST
0x40d PUSH1 0x2
0x40f SSTORE
0x410 DUP4
0x411 MLOAD
0x412 PUSH1 0x40
0x414 DUP1
0x415 MLOAD
0x416 SWAP2
0x417 DUP3
0x418 MSTORE
0x419 PUSH1 0x20
0x41b DUP3
0x41c ADD
0x41d DUP5
0x41e SWAP1
0x41f MSTORE
0x420 DUP1
0x421 MLOAD
0x422 PUSH32 0xb945764e0a68ae2eba8433e81ff78c5b60150aac84b74b2bf3284494696e9d37
0x443 SWAP3
0x444 DUP2
0x445 SWAP1
0x446 SUB
0x447 SWAP1
0x448 SWAP2
0x449 ADD
0x44a SWAP1
0x44b LOG1
0x44c POP
0x44d POP
0x44e POP
0x44f POP
0x450 JUMP
---
0x40c: JUMPDEST 
0x40d: V351 = 0x2
0x40f: S[0x2] = S0
0x411: V352 = M[V62]
0x412: V353 = 0x40
0x415: V354 = M[0x40]
0x418: M[V354] = V352
0x419: V355 = 0x20
0x41c: V356 = ADD V354 0x20
0x41f: M[V356] = S2
0x421: V357 = M[0x40]
0x422: V358 = 0xb945764e0a68ae2eba8433e81ff78c5b60150aac84b74b2bf3284494696e9d37
0x446: V359 = SUB V354 V357
0x449: V360 = ADD 0x40 V359
0x44b: LOG V357 V360 0xb945764e0a68ae2eba8433e81ff78c5b60150aac84b74b2bf3284494696e9d37
0x450: JUMP 0xb5
---
Entry stack: [V13, 0xb5, V62, V77, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x451
[0x451:0x463]
---
Predecessors: [0x151]
Successors: [0x464, 0x468]
---
0x451 JUMPDEST
0x452 PUSH1 0x0
0x454 SLOAD
0x455 PUSH1 0x1
0x457 PUSH1 0xa0
0x459 PUSH1 0x2
0x45b EXP
0x45c SUB
0x45d AND
0x45e CALLER
0x45f EQ
0x460 PUSH2 0x468
0x463 JUMPI
---
0x451: JUMPDEST 
0x452: V361 = 0x0
0x454: V362 = S[0x0]
0x455: V363 = 0x1
0x457: V364 = 0xa0
0x459: V365 = 0x2
0x45b: V366 = EXP 0x2 0xa0
0x45c: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45d: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x45e: V369 = CALLER
0x45f: V370 = EQ V369 V368
0x460: V371 = 0x468
0x463: JUMPI 0x468 V370
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x451]
Successors: []
---
0x464 PUSH1 0x0
0x466 DUP1
0x467 REVERT
---
0x464: V372 = 0x0
0x467: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x468
[0x468:0x4d7]
---
Predecessors: [0x451]
Successors: [0x4d8, 0x4dc]
---
0x468 JUMPDEST
0x469 PUSH1 0x1
0x46b SLOAD
0x46c PUSH1 0x0
0x46e DUP1
0x46f SLOAD
0x470 PUSH1 0x40
0x472 DUP1
0x473 MLOAD
0x474 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x495 DUP2
0x496 MSTORE
0x497 ADDRESS
0x498 PUSH1 0x4
0x49a DUP3
0x49b ADD
0x49c MSTORE
0x49d SWAP1
0x49e MLOAD
0x49f PUSH1 0x1
0x4a1 PUSH1 0xa0
0x4a3 PUSH1 0x2
0x4a5 EXP
0x4a6 SUB
0x4a7 SWAP5
0x4a8 DUP6
0x4a9 AND
0x4aa SWAP5
0x4ab PUSH4 0xa9059cbb
0x4b0 SWAP5
0x4b1 SWAP4
0x4b2 AND
0x4b3 SWAP3
0x4b4 DUP6
0x4b5 SWAP3
0x4b6 PUSH4 0x70a08231
0x4bb SWAP3
0x4bc PUSH1 0x24
0x4be DUP1
0x4bf DUP4
0x4c0 ADD
0x4c1 SWAP4
0x4c2 PUSH1 0x20
0x4c4 SWAP4
0x4c5 DUP4
0x4c6 SWAP1
0x4c7 SUB
0x4c8 SWAP1
0x4c9 SWAP2
0x4ca ADD
0x4cb SWAP1
0x4cc DUP3
0x4cd SWAP1
0x4ce DUP8
0x4cf DUP1
0x4d0 EXTCODESIZE
0x4d1 ISZERO
0x4d2 DUP1
0x4d3 ISZERO
0x4d4 PUSH2 0x4dc
0x4d7 JUMPI
---
0x468: JUMPDEST 
0x469: V373 = 0x1
0x46b: V374 = S[0x1]
0x46c: V375 = 0x0
0x46f: V376 = S[0x0]
0x470: V377 = 0x40
0x473: V378 = M[0x40]
0x474: V379 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x496: M[V378] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x497: V380 = ADDRESS
0x498: V381 = 0x4
0x49b: V382 = ADD V378 0x4
0x49c: M[V382] = V380
0x49e: V383 = M[0x40]
0x49f: V384 = 0x1
0x4a1: V385 = 0xa0
0x4a3: V386 = 0x2
0x4a5: V387 = EXP 0x2 0xa0
0x4a6: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a9: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x4ab: V390 = 0xa9059cbb
0x4b2: V391 = AND V376 0xffffffffffffffffffffffffffffffffffffffff
0x4b6: V392 = 0x70a08231
0x4bc: V393 = 0x24
0x4c0: V394 = ADD V378 0x24
0x4c2: V395 = 0x20
0x4c7: V396 = SUB V378 V383
0x4ca: V397 = ADD 0x24 V396
0x4d0: V398 = EXTCODESIZE V389
0x4d1: V399 = ISZERO V398
0x4d3: V400 = ISZERO V399
0x4d4: V401 = 0x4dc
0x4d7: JUMPI 0x4dc V400
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: [V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, 0x20, V383, V397, V383, 0x0, V389, V399]
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, 0x20, V383, V397, V383, 0x0, V389, V399]

================================

Block 0x4d8
[0x4d8:0x4db]
---
Predecessors: [0x468]
Successors: []
---
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db REVERT
---
0x4d8: V402 = 0x0
0x4db: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, 0x20, V383, V397, V383, 0x0, V389, V399]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, 0x20, V383, V397, V383, 0x0, V389, V399]

================================

Block 0x4dc
[0x4dc:0x4e6]
---
Predecessors: [0x468]
Successors: [0x4e7, 0x4f0]
---
0x4dc JUMPDEST
0x4dd POP
0x4de GAS
0x4df CALL
0x4e0 ISZERO
0x4e1 DUP1
0x4e2 ISZERO
0x4e3 PUSH2 0x4f0
0x4e6 JUMPI
---
0x4dc: JUMPDEST 
0x4de: V403 = GAS
0x4df: V404 = CALL V403 V389 0x0 V383 V397 V383 0x20
0x4e0: V405 = ISZERO V404
0x4e2: V406 = ISZERO V405
0x4e3: V407 = 0x4f0
0x4e6: JUMPI 0x4f0 V406
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, 0x20, V383, V397, V383, 0x0, V389, V399]
Stack pops: 7
Stack additions: [V405]
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, V405]

================================

Block 0x4e7
[0x4e7:0x4ef]
---
Predecessors: [0x4dc]
Successors: []
---
0x4e7 RETURNDATASIZE
0x4e8 PUSH1 0x0
0x4ea DUP1
0x4eb RETURNDATACOPY
0x4ec RETURNDATASIZE
0x4ed PUSH1 0x0
0x4ef REVERT
---
0x4e7: V408 = RETURNDATASIZE
0x4e8: V409 = 0x0
0x4eb: RETURNDATACOPY 0x0 0x0 V408
0x4ec: V410 = RETURNDATASIZE
0x4ed: V411 = 0x0
0x4ef: REVERT 0x0 V410
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, V405]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, V405]

================================

Block 0x4f0
[0x4f0:0x501]
---
Predecessors: [0x4dc]
Successors: [0x502, 0x506]
---
0x4f0 JUMPDEST
0x4f1 POP
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 RETURNDATASIZE
0x4f9 PUSH1 0x20
0x4fb DUP2
0x4fc LT
0x4fd ISZERO
0x4fe PUSH2 0x506
0x501 JUMPI
---
0x4f0: JUMPDEST 
0x4f5: V412 = 0x40
0x4f7: V413 = M[0x40]
0x4f8: V414 = RETURNDATASIZE
0x4f9: V415 = 0x20
0x4fc: V416 = LT V414 0x20
0x4fd: V417 = ISZERO V416
0x4fe: V418 = 0x506
0x501: JUMPI 0x506 V417
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V389, 0x70a08231, V394, V405]
Stack pops: 4
Stack additions: [V413, V414]
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V413, V414]

================================

Block 0x502
[0x502:0x505]
---
Predecessors: [0x4f0]
Successors: []
---
0x502 PUSH1 0x0
0x504 DUP1
0x505 REVERT
---
0x502: V419 = 0x0
0x505: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V413, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V413, V414]

================================

Block 0x506
[0x506:0x550]
---
Predecessors: [0x4f0]
Successors: [0x551, 0x555]
---
0x506 JUMPDEST
0x507 POP
0x508 MLOAD
0x509 PUSH1 0x40
0x50b DUP1
0x50c MLOAD
0x50d PUSH1 0xe0
0x50f PUSH1 0x2
0x511 EXP
0x512 PUSH4 0xffffffff
0x517 DUP7
0x518 AND
0x519 MUL
0x51a DUP2
0x51b MSTORE
0x51c PUSH1 0x1
0x51e PUSH1 0xa0
0x520 PUSH1 0x2
0x522 EXP
0x523 SUB
0x524 SWAP1
0x525 SWAP4
0x526 AND
0x527 PUSH1 0x4
0x529 DUP5
0x52a ADD
0x52b MSTORE
0x52c PUSH1 0x24
0x52e DUP4
0x52f ADD
0x530 SWAP2
0x531 SWAP1
0x532 SWAP2
0x533 MSTORE
0x534 MLOAD
0x535 PUSH1 0x44
0x537 DUP1
0x538 DUP4
0x539 ADD
0x53a SWAP3
0x53b PUSH1 0x20
0x53d SWAP3
0x53e SWAP2
0x53f SWAP1
0x540 DUP3
0x541 SWAP1
0x542 SUB
0x543 ADD
0x544 DUP2
0x545 PUSH1 0x0
0x547 DUP8
0x548 DUP1
0x549 EXTCODESIZE
0x54a ISZERO
0x54b DUP1
0x54c ISZERO
0x54d PUSH2 0x555
0x550 JUMPI
---
0x506: JUMPDEST 
0x508: V420 = M[V413]
0x509: V421 = 0x40
0x50c: V422 = M[0x40]
0x50d: V423 = 0xe0
0x50f: V424 = 0x2
0x511: V425 = EXP 0x2 0xe0
0x512: V426 = 0xffffffff
0x518: V427 = AND 0xa9059cbb 0xffffffff
0x519: V428 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x51b: M[V422] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x51c: V429 = 0x1
0x51e: V430 = 0xa0
0x520: V431 = 0x2
0x522: V432 = EXP 0x2 0xa0
0x523: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x526: V434 = AND V391 0xffffffffffffffffffffffffffffffffffffffff
0x527: V435 = 0x4
0x52a: V436 = ADD V422 0x4
0x52b: M[V436] = V434
0x52c: V437 = 0x24
0x52f: V438 = ADD V422 0x24
0x533: M[V438] = V420
0x534: V439 = M[0x40]
0x535: V440 = 0x44
0x539: V441 = ADD V422 0x44
0x53b: V442 = 0x20
0x542: V443 = SUB V422 V439
0x543: V444 = ADD V443 0x44
0x545: V445 = 0x0
0x549: V446 = EXTCODESIZE V389
0x54a: V447 = ISZERO V446
0x54c: V448 = ISZERO V447
0x54d: V449 = 0x555
0x550: JUMPI 0x555 V448
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V391, V413, V414]
Stack pops: 5
Stack additions: [S4, S3, V441, 0x20, V439, V444, V439, 0x0, S4, V447]
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V441, 0x20, V439, V444, V439, 0x0, V389, V447]

================================

Block 0x551
[0x551:0x554]
---
Predecessors: [0x506]
Successors: []
---
0x551 PUSH1 0x0
0x553 DUP1
0x554 REVERT
---
0x551: V450 = 0x0
0x554: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V441, 0x20, V439, V444, V439, 0x0, V389, V447]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V441, 0x20, V439, V444, V439, 0x0, V389, V447]

================================

Block 0x555
[0x555:0x55f]
---
Predecessors: [0x506]
Successors: [0x560, 0x569]
---
0x555 JUMPDEST
0x556 POP
0x557 GAS
0x558 CALL
0x559 ISZERO
0x55a DUP1
0x55b ISZERO
0x55c PUSH2 0x569
0x55f JUMPI
---
0x555: JUMPDEST 
0x557: V451 = GAS
0x558: V452 = CALL V451 V389 0x0 V439 V444 V439 0x20
0x559: V453 = ISZERO V452
0x55b: V454 = ISZERO V453
0x55c: V455 = 0x569
0x55f: JUMPI 0x569 V454
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V441, 0x20, V439, V444, V439, 0x0, V389, V447]
Stack pops: 7
Stack additions: [V453]
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V441, V453]

================================

Block 0x560
[0x560:0x568]
---
Predecessors: [0x555]
Successors: []
---
0x560 RETURNDATASIZE
0x561 PUSH1 0x0
0x563 DUP1
0x564 RETURNDATACOPY
0x565 RETURNDATASIZE
0x566 PUSH1 0x0
0x568 REVERT
---
0x560: V456 = RETURNDATASIZE
0x561: V457 = 0x0
0x564: RETURNDATACOPY 0x0 0x0 V456
0x565: V458 = RETURNDATASIZE
0x566: V459 = 0x0
0x568: REVERT 0x0 V458
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V441, V453]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V389, 0xa9059cbb, V441, V453]

================================

Block 0x569
[0x569:0x57a]
---
Predecessors: [0x555]
Successors: [0x57b, 0x57f]
---
0x569 JUMPDEST
0x56a POP
0x56b POP
0x56c POP
0x56d POP
0x56e PUSH1 0x40
0x570 MLOAD
0x571 RETURNDATASIZE
0x572 PUSH1 0x20
0x574 DUP2
0x575 LT
0x576 ISZERO
0x577 PUSH2 0x57f
0x57a JUMPI
---
0x569: JUMPDEST 
0x56e: V460 = 0x40
0x570: V461 = M[0x40]
0x571: V462 = RETURNDATASIZE
0x572: V463 = 0x20
0x575: V464 = LT V462 0x20
0x576: V465 = ISZERO V464
0x577: V466 = 0x57f
0x57a: JUMPI 0x57f V465
---
Entry stack: [V13, 0xb5, V389, 0xa9059cbb, V441, V453]
Stack pops: 4
Stack additions: [V461, V462]
Exit stack: [V13, 0xb5, V461, V462]

================================

Block 0x57b
[0x57b:0x57e]
---
Predecessors: [0x569]
Successors: []
---
0x57b PUSH1 0x0
0x57d DUP1
0x57e REVERT
---
0x57b: V467 = 0x0
0x57e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V461, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V461, V462]

================================

Block 0x57f
[0x57f:0x58e]
---
Predecessors: [0x569]
Successors: []
---
0x57f JUMPDEST
0x580 POP
0x581 POP
0x582 PUSH1 0x0
0x584 SLOAD
0x585 PUSH1 0x1
0x587 PUSH1 0xa0
0x589 PUSH1 0x2
0x58b EXP
0x58c SUB
0x58d AND
0x58e SELFDESTRUCT
---
0x57f: JUMPDEST 
0x582: V468 = 0x0
0x584: V469 = S[0x0]
0x585: V470 = 0x1
0x587: V471 = 0xa0
0x589: V472 = 0x2
0x58b: V473 = EXP 0x2 0xa0
0x58c: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58d: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x58e: SELFDESTRUCT V475
---
Entry stack: [V13, 0xb5, V461, V462]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x58f
[0x58f:0x59d]
---
Predecessors: [0x166]
Successors: [0x16f]
---
0x58f JUMPDEST
0x590 PUSH1 0x0
0x592 SLOAD
0x593 PUSH1 0x1
0x595 PUSH1 0xa0
0x597 PUSH1 0x2
0x599 EXP
0x59a SUB
0x59b AND
0x59c DUP2
0x59d JUMP
---
0x58f: JUMPDEST 
0x590: V476 = 0x0
0x592: V477 = S[0x0]
0x593: V478 = 0x1
0x595: V479 = 0xa0
0x597: V480 = 0x2
0x599: V481 = EXP 0x2 0xa0
0x59a: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x59d: JUMP 0x16f
---
Entry stack: [V13, 0x16f]
Stack pops: 1
Stack additions: [S0, V483]
Exit stack: [V13, 0x16f, V483]

================================

Block 0x59e
[0x59e:0x5a3]
---
Predecessors: [0x197]
Successors: [0x8e]
---
0x59e JUMPDEST
0x59f PUSH1 0x2
0x5a1 SLOAD
0x5a2 DUP2
0x5a3 JUMP
---
0x59e: JUMPDEST 
0x59f: V484 = 0x2
0x5a1: V485 = S[0x2]
0x5a3: JUMP 0x8e
---
Entry stack: [V13, 0x8e]
Stack pops: 1
Stack additions: [S0, V485]
Exit stack: [V13, 0x8e, V485]

================================

Block 0x5a4
[0x5a4:0x5b6]
---
Predecessors: [0x1ac]
Successors: [0x5b7, 0x5bb]
---
0x5a4 JUMPDEST
0x5a5 PUSH1 0x0
0x5a7 SLOAD
0x5a8 PUSH1 0x1
0x5aa PUSH1 0xa0
0x5ac PUSH1 0x2
0x5ae EXP
0x5af SUB
0x5b0 AND
0x5b1 CALLER
0x5b2 EQ
0x5b3 PUSH2 0x5bb
0x5b6 JUMPI
---
0x5a4: JUMPDEST 
0x5a5: V486 = 0x0
0x5a7: V487 = S[0x0]
0x5a8: V488 = 0x1
0x5aa: V489 = 0xa0
0x5ac: V490 = 0x2
0x5ae: V491 = EXP 0x2 0xa0
0x5af: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b0: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x5b1: V494 = CALLER
0x5b2: V495 = EQ V494 V493
0x5b3: V496 = 0x5bb
0x5b6: JUMPI 0x5bb V495
---
Entry stack: [V13, 0xb5, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V131]

================================

Block 0x5b7
[0x5b7:0x5ba]
---
Predecessors: [0x5a4]
Successors: []
---
0x5b7 PUSH1 0x0
0x5b9 DUP1
0x5ba REVERT
---
0x5b7: V497 = 0x0
0x5ba: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V131]

================================

Block 0x5bb
[0x5bb:0x5cb]
---
Predecessors: [0x5a4]
Successors: [0x5cc, 0x5d0]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x1
0x5be PUSH1 0xa0
0x5c0 PUSH1 0x2
0x5c2 EXP
0x5c3 SUB
0x5c4 DUP2
0x5c5 AND
0x5c6 ISZERO
0x5c7 ISZERO
0x5c8 PUSH2 0x5d0
0x5cb JUMPI
---
0x5bb: JUMPDEST 
0x5bc: V498 = 0x1
0x5be: V499 = 0xa0
0x5c0: V500 = 0x2
0x5c2: V501 = EXP 0x2 0xa0
0x5c3: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c5: V503 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V504 = ISZERO V503
0x5c7: V505 = ISZERO V504
0x5c8: V506 = 0x5d0
0x5cb: JUMPI 0x5d0 V505
---
Entry stack: [V13, 0xb5, V131]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xb5, V131]

================================

Block 0x5cc
[0x5cc:0x5cf]
---
Predecessors: [0x5bb]
Successors: []
---
0x5cc PUSH1 0x0
0x5ce DUP1
0x5cf REVERT
---
0x5cc: V507 = 0x0
0x5cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V131]

================================

Block 0x5d0
[0x5d0:0x637]
---
Predecessors: [0x5bb]
Successors: [0xb5]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x0
0x5d3 DUP1
0x5d4 SLOAD
0x5d5 PUSH1 0x40
0x5d7 MLOAD
0x5d8 PUSH1 0x1
0x5da PUSH1 0xa0
0x5dc PUSH1 0x2
0x5de EXP
0x5df SUB
0x5e0 DUP1
0x5e1 DUP6
0x5e2 AND
0x5e3 SWAP4
0x5e4 SWAP3
0x5e5 AND
0x5e6 SWAP2
0x5e7 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x608 SWAP2
0x609 LOG3
0x60a PUSH1 0x0
0x60c DUP1
0x60d SLOAD
0x60e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x623 NOT
0x624 AND
0x625 PUSH1 0x1
0x627 PUSH1 0xa0
0x629 PUSH1 0x2
0x62b EXP
0x62c SUB
0x62d SWAP3
0x62e SWAP1
0x62f SWAP3
0x630 AND
0x631 SWAP2
0x632 SWAP1
0x633 SWAP2
0x634 OR
0x635 SWAP1
0x636 SSTORE
0x637 JUMP
---
0x5d0: JUMPDEST 
0x5d1: V508 = 0x0
0x5d4: V509 = S[0x0]
0x5d5: V510 = 0x40
0x5d7: V511 = M[0x40]
0x5d8: V512 = 0x1
0x5da: V513 = 0xa0
0x5dc: V514 = 0x2
0x5de: V515 = EXP 0x2 0xa0
0x5df: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e2: V517 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x5e5: V518 = AND V509 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V519 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x609: LOG V511 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V518 V517
0x60a: V520 = 0x0
0x60d: V521 = S[0x0]
0x60e: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x623: V523 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x624: V524 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V521
0x625: V525 = 0x1
0x627: V526 = 0xa0
0x629: V527 = 0x2
0x62b: V528 = EXP 0x2 0xa0
0x62c: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x630: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x634: V531 = OR V530 V524
0x636: S[0x0] = V531
0x637: JUMP 0xb5
---
Entry stack: [V13, 0xb5, V131]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x638
[0x638:0x646]
---
Predecessors: [0x1cd]
Successors: [0x16f]
---
0x638 JUMPDEST
0x639 PUSH1 0x1
0x63b SLOAD
0x63c PUSH1 0x1
0x63e PUSH1 0xa0
0x640 PUSH1 0x2
0x642 EXP
0x643 SUB
0x644 AND
0x645 DUP2
0x646 JUMP
---
0x638: JUMPDEST 
0x639: V532 = 0x1
0x63b: V533 = S[0x1]
0x63c: V534 = 0x1
0x63e: V535 = 0xa0
0x640: V536 = 0x2
0x642: V537 = EXP 0x2 0xa0
0x643: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x644: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x646: JUMP 0x16f
---
Entry stack: [V13, 0x16f]
Stack pops: 1
Stack additions: [S0, V539]
Exit stack: [V13, 0x16f, V539]

================================

Block 0x647
[0x647:0x654]
---
Predecessors: [0x3d8, 0x3f9]
Successors: [0x655, 0x656]
---
0x647 JUMPDEST
0x648 PUSH1 0x0
0x64a DUP3
0x64b DUP3
0x64c ADD
0x64d DUP4
0x64e DUP2
0x64f LT
0x650 ISZERO
0x651 PUSH2 0x656
0x654 JUMPI
---
0x647: JUMPDEST 
0x648: V540 = 0x0
0x64c: V541 = ADD S0 S1
0x64f: V542 = LT V541 S1
0x650: V543 = ISZERO V542
0x651: V544 = 0x656
0x654: JUMPI 0x656 V543
---
Entry stack: [V13, 0xb5, V62, V77, S4, S3, {0x3ef, 0x40c}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V541]
Exit stack: [V13, 0xb5, V62, V77, S4, S3, {0x3ef, 0x40c}, S1, S0, 0x0, V541]

================================

Block 0x655
[0x655:0x655]
---
Predecessors: [0x647]
Successors: []
---
0x655 INVALID
---
0x655: INVALID 
---
Entry stack: [V13, 0xb5, V62, V77, S6, S5, {0x3ef, 0x40c}, S3, S2, 0x0, V541]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V62, V77, S6, S5, {0x3ef, 0x40c}, S3, S2, 0x0, V541]

================================

Block 0x656
[0x656:0x65c]
---
Predecessors: [0x647]
Successors: [0x3ef, 0x40c]
---
0x656 JUMPDEST
0x657 SWAP4
0x658 SWAP3
0x659 POP
0x65a POP
0x65b POP
0x65c JUMP
---
0x656: JUMPDEST 
0x65c: JUMP {0x3ef, 0x40c}
---
Entry stack: [V13, 0xb5, V62, V77, S6, S5, {0x3ef, 0x40c}, S3, S2, 0x0, V541]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0xb5, V62, V77, S6, S5, V541]

================================

Block 0x65d
[0x65d:0x689]
---
Predecessors: []
Successors: []
---
0x65d STOP
0x65e LOG1
0x65f PUSH6 0x627a7a723058
0x666 SHA3
0x667 MSTORE
0x668 OR
0x669 MISSING 0xac
0x66a MISSING 0x46
0x66b MISSING 0xb4
0x66c MISSING 0xa5
0x66d MISSING 0x48
0x66e XOR
0x66f DUP7
0x670 CALLDATALOAD
0x671 SHR
0x672 GT
0x673 MISSING 0x2c
0x674 DUP4
0x675 SGT
0x676 CALLDATASIZE
0x677 MISSING 0xcd
0x678 SWAP9
0x679 MISSING 0xee
0x67a TIMESTAMP
0x67b RETURN
0x67c MISSING 0xbd
0x67d MISSING 0x22
0x67e DUP11
0x67f CREATE2
0x680 MISSING 0xd7
0x681 MISSING 0xe2
0x682 LOG3
0x683 EXTCODECOPY
0x684 EXTCODECOPY
0x685 PUSH4 0xd20029
---
0x65d: STOP 
0x65e: LOG S0 S1 S2
0x65f: V545 = 0x627a7a723058
0x666: V546 = SHA3 0x627a7a723058 S3
0x667: M[V546] = S4
0x668: V547 = OR S5 S6
0x669: MISSING 0xac
0x66a: MISSING 0x46
0x66b: MISSING 0xb4
0x66c: MISSING 0xa5
0x66d: MISSING 0x48
0x66e: V548 = XOR S0 S1
0x670: V549 = CALLDATALOAD S7
0x671: V550 = SHR V549 V548
0x672: V551 = GT V550 S2
0x673: MISSING 0x2c
0x675: V552 = SGT S3 S0
0x676: V553 = CALLDATASIZE
0x677: MISSING 0xcd
0x679: MISSING 0xee
0x67a: V554 = TIMESTAMP
0x67b: RETURN V554 S0
0x67c: MISSING 0xbd
0x67d: MISSING 0x22
0x67f: V555 = CREATE2 S10 S0 S1 S2
0x680: MISSING 0xd7
0x681: MISSING 0xe2
0x682: LOG S0 S1 S2 S3 S4
0x683: EXTCODECOPY S5 S6 S7 S8
0x684: EXTCODECOPY S9 S10 S11 S12
0x685: V556 = 0xd20029
---
Entry stack: []
Stack pops: 0
Stack additions: [V547, V551, S3, S4, S5, S6, S7, V553, V552, S1, S2, S3, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V555, S3, S4, S5, S6, S7, S8, S9, S10, 0xd20029]
Exit stack: []

================================

Function 0:
Public function signature: 0xef67887
Entry block: 0x79
Exit block: 0x8e
Body: 0x79, 0x81, 0x85, 0x8e, 0x1d6, 0x237, 0x23b, 0x246, 0x24f, 0x261, 0x265

Function 1:
Public function signature: 0x1d4233b9
Entry block: 0xa0
Exit block: 0xb5
Body: 0xa0, 0xa8, 0xac, 0xb5, 0x26c, 0x27f, 0x283, 0x2b5, 0x2be

Function 2:
Public function signature: 0x706f6937
Entry block: 0xb7
Exit block: 0x3d7
Body: 0xb5, 0xb7, 0xbf, 0xc3, 0x2c1, 0x2d7, 0x2db, 0x2e5, 0x2e9, 0x2f0, 0x2fa, 0x31b, 0x31c, 0x333, 0x334, 0x38c, 0x390, 0x39b, 0x3a4, 0x3b6, 0x3ba, 0x3c3, 0x3c7, 0x3d7, 0x3d8, 0x3ef, 0x3f9, 0x40c, 0x647, 0x655, 0x656

Function 3:
Public function signature: 0x83197ef0
Entry block: 0x145
Exit block: 0x57b
Body: 0x145, 0x14d, 0x151, 0x451, 0x464, 0x468, 0x4d8, 0x4dc, 0x4e7, 0x4f0, 0x502, 0x506, 0x551, 0x555, 0x560, 0x569, 0x57b, 0x57f

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x15a
Exit block: 0x16f
Body: 0x15a, 0x162, 0x166, 0x16f, 0x58f

Function 5:
Public function signature: 0xd144454b
Entry block: 0x18b
Exit block: 0x8e
Body: 0x8e, 0x18b, 0x193, 0x197, 0x59e

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x1a0
Exit block: 0xb5
Body: 0xb5, 0x1a0, 0x1a8, 0x1ac, 0x5a4, 0x5b7, 0x5bb, 0x5cc, 0x5d0

Function 7:
Public function signature: 0xfc0c546a
Entry block: 0x1c1
Exit block: 0x16f
Body: 0x16f, 0x1c1, 0x1c9, 0x1cd, 0x638

Function 8:
Public fallback function
Entry block: 0x74
Exit block: 0x74
Body: 0x74

