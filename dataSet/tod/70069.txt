Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3394fbd9
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3394fbd9
0x3c: V13 = EQ 0x3394fbd9 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7b]
---
0x41 DUP1
0x42 PUSH4 0x4d338d64
0x47 EQ
0x48 PUSH2 0x7b
0x4b JUMPI
---
0x42: V15 = 0x4d338d64
0x47: V16 = EQ 0x4d338d64 V11
0x48: V17 = 0x7b
0x4b: JUMPI 0x7b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbe]
---
0x4c DUP1
0x4d PUSH4 0x4e9c7ca2
0x52 EQ
0x53 PUSH2 0xbe
0x56 JUMPI
---
0x4d: V18 = 0x4e9c7ca2
0x52: V19 = EQ 0x4e9c7ca2 V11
0x53: V20 = 0xbe
0x56: JUMPI 0xbe V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x10f]
---
0x57 DUP1
0x58 PUSH4 0x52e3f92b
0x5d EQ
0x5e PUSH2 0x10f
0x61 JUMPI
---
0x58: V21 = 0x52e3f92b
0x5d: V22 = EQ 0x52e3f92b V11
0x5e: V23 = 0x10f
0x61: JUMPI 0x10f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x6c, 0x70]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 DUP1
0x67 ISZERO
0x68 PUSH2 0x70
0x6b JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x67: V25 = ISZERO V24
0x68: V26 = 0x70
0x6b: JUMPI 0x70 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6c
[0x6c:0x6f]
---
Predecessors: [0x64]
Successors: []
---
0x6c PUSH1 0x0
0x6e DUP1
0x6f REVERT
---
0x6c: V27 = 0x0
0x6f: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x70
[0x70:0x78]
---
Predecessors: [0x64]
Successors: [0x126]
---
0x70 JUMPDEST
0x71 POP
0x72 PUSH2 0x79
0x75 PUSH2 0x126
0x78 JUMP
---
0x70: JUMPDEST 
0x72: V28 = 0x79
0x75: V29 = 0x126
0x78: JUMP 0x126
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x79]
Exit stack: [V11, 0x79]

================================

Block 0x79
[0x79:0x7a]
---
Predecessors: [0x1b5]
Successors: []
---
0x79 JUMPDEST
0x7a STOP
---
0x79: JUMPDEST 
0x7a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7b
[0x7b:0x82]
---
Predecessors: [0x41]
Successors: [0x83, 0x87]
---
0x7b JUMPDEST
0x7c CALLVALUE
0x7d DUP1
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x7b: JUMPDEST 
0x7c: V30 = CALLVALUE
0x7e: V31 = ISZERO V30
0x7f: V32 = 0x87
0x82: JUMPI 0x87 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x7b]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V33 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x87
[0x87:0xbb]
---
Predecessors: [0x7b]
Successors: [0x1b7]
---
0x87 JUMPDEST
0x88 POP
0x89 PUSH2 0xbc
0x8c PUSH1 0x4
0x8e DUP1
0x8f CALLDATASIZE
0x90 SUB
0x91 DUP2
0x92 ADD
0x93 SWAP1
0x94 DUP1
0x95 DUP1
0x96 CALLDATALOAD
0x97 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac AND
0xad SWAP1
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP1
0xb2 SWAP3
0xb3 SWAP2
0xb4 SWAP1
0xb5 POP
0xb6 POP
0xb7 POP
0xb8 PUSH2 0x1b7
0xbb JUMP
---
0x87: JUMPDEST 
0x89: V34 = 0xbc
0x8c: V35 = 0x4
0x8f: V36 = CALLDATASIZE
0x90: V37 = SUB V36 0x4
0x92: V38 = ADD 0x4 V37
0x96: V39 = CALLDATALOAD 0x4
0x97: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xac: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xae: V42 = 0x20
0xb0: V43 = ADD 0x20 0x4
0xb8: V44 = 0x1b7
0xbb: JUMP 0x1b7
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0xbc, V41]
Exit stack: [V11, 0xbc, V41]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x341]
Successors: []
---
0xbc JUMPDEST
0xbd STOP
---
0xbc: JUMPDEST 
0xbd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0x4c]
Successors: [0xc6, 0xca]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 DUP1
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbe: JUMPDEST 
0xbf: V45 = CALLVALUE
0xc1: V46 = ISZERO V45
0xc2: V47 = 0xca
0xc5: JUMPI 0xca V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbe]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V48 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xca
[0xca:0x10c]
---
Predecessors: [0xbe]
Successors: [0x345]
---
0xca JUMPDEST
0xcb POP
0xcc PUSH2 0x10d
0xcf PUSH1 0x4
0xd1 DUP1
0xd2 CALLDATASIZE
0xd3 SUB
0xd4 DUP2
0xd5 ADD
0xd6 SWAP1
0xd7 DUP1
0xd8 DUP1
0xd9 CALLDATALOAD
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 SWAP1
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 SWAP3
0xf6 SWAP2
0xf7 SWAP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa PUSH1 0x0
0xfc NOT
0xfd AND
0xfe SWAP1
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP1
0x103 SWAP3
0x104 SWAP2
0x105 SWAP1
0x106 POP
0x107 POP
0x108 POP
0x109 PUSH2 0x345
0x10c JUMP
---
0xca: JUMPDEST 
0xcc: V49 = 0x10d
0xcf: V50 = 0x4
0xd2: V51 = CALLDATASIZE
0xd3: V52 = SUB V51 0x4
0xd5: V53 = ADD 0x4 V52
0xd9: V54 = CALLDATALOAD 0x4
0xda: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xf1: V57 = 0x20
0xf3: V58 = ADD 0x20 0x4
0xf9: V59 = CALLDATALOAD 0x24
0xfa: V60 = 0x0
0xfc: V61 = NOT 0x0
0xfd: V62 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V59
0xff: V63 = 0x20
0x101: V64 = ADD 0x20 0x24
0x109: V65 = 0x345
0x10c: JUMP 0x345
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0x10d, V56, V62]
Exit stack: [V11, 0x10d, V56, V62]

================================

Block 0x10d
[0x10d:0x10e]
---
Predecessors: [0x4be]
Successors: []
---
0x10d JUMPDEST
0x10e STOP
---
0x10d: JUMPDEST 
0x10e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x57]
Successors: [0x117, 0x11b]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 DUP1
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x10f: JUMPDEST 
0x110: V66 = CALLVALUE
0x112: V67 = ISZERO V66
0x113: V68 = 0x11b
0x116: JUMPI 0x11b V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V11, V66]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x10f]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V69 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V11, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66]

================================

Block 0x11b
[0x11b:0x123]
---
Predecessors: [0x10f]
Successors: [0x4c3]
---
0x11b JUMPDEST
0x11c POP
0x11d PUSH2 0x124
0x120 PUSH2 0x4c3
0x123 JUMP
---
0x11b: JUMPDEST 
0x11d: V70 = 0x124
0x120: V71 = 0x4c3
0x123: JUMP 0x4c3
---
Entry stack: [V11, V66]
Stack pops: 1
Stack additions: [0x124]
Exit stack: [V11, 0x124]

================================

Block 0x124
[0x124:0x125]
---
Predecessors: [0x598]
Successors: []
---
0x124 JUMPDEST
0x125 STOP
---
0x124: JUMPDEST 
0x125: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x126
[0x126:0x17b]
---
Predecessors: [0x70]
Successors: [0x17c, 0x1b5]
---
0x126 JUMPDEST
0x127 PUSH1 0x0
0x129 DUP1
0x12a SWAP1
0x12b SLOAD
0x12c SWAP1
0x12d PUSH2 0x100
0x130 EXP
0x131 SWAP1
0x132 DIV
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f CALLER
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 EQ
0x177 ISZERO
0x178 PUSH2 0x1b5
0x17b JUMPI
---
0x126: JUMPDEST 
0x127: V72 = 0x0
0x12b: V73 = S[0x0]
0x12d: V74 = 0x100
0x130: V75 = EXP 0x100 0x0
0x132: V76 = DIV V73 0x1
0x133: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x149: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x15f: V81 = CALLER
0x160: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x176: V84 = EQ V83 V80
0x177: V85 = ISZERO V84
0x178: V86 = 0x1b5
0x17b: JUMPI 0x1b5 V85
---
Entry stack: [V11, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x79]

================================

Block 0x17c
[0x17c:0x1b4]
---
Predecessors: [0x126]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f SWAP1
0x180 SLOAD
0x181 SWAP1
0x182 PUSH2 0x100
0x185 EXP
0x186 SWAP1
0x187 DIV
0x188 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19d AND
0x19e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b3 AND
0x1b4 SELFDESTRUCT
---
0x17c: V87 = 0x0
0x180: V88 = S[0x0]
0x182: V89 = 0x100
0x185: V90 = EXP 0x100 0x0
0x187: V91 = DIV V88 0x1
0x188: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x19e: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1b4: SELFDESTRUCT V95
---
Entry stack: [V11, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x79]

================================

Block 0x1b5
[0x1b5:0x1b6]
---
Predecessors: [0x126]
Successors: [0x79]
---
0x1b5 JUMPDEST
0x1b6 JUMP
---
0x1b5: JUMPDEST 
0x1b6: JUMP 0x79
---
Entry stack: [V11, 0x79]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b7
[0x1b7:0x20e]
---
Predecessors: [0x87]
Successors: [0x20f, 0x341]
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb PUSH1 0x0
0x1bd SWAP1
0x1be SLOAD
0x1bf SWAP1
0x1c0 PUSH2 0x100
0x1c3 EXP
0x1c4 SWAP1
0x1c5 DIV
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 CALLER
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 EQ
0x20a ISZERO
0x20b PUSH2 0x341
0x20e JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V96 = 0x0
0x1bb: V97 = 0x0
0x1be: V98 = S[0x0]
0x1c0: V99 = 0x100
0x1c3: V100 = EXP 0x100 0x0
0x1c5: V101 = DIV V98 0x1
0x1c6: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1dc: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1f2: V106 = CALLER
0x1f3: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x209: V109 = EQ V108 V105
0x20a: V110 = ISZERO V109
0x20b: V111 = 0x341
0x20e: JUMPI 0x341 V110
---
Entry stack: [V11, 0xbc, V41]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xbc, V41, 0x0]

================================

Block 0x20f
[0x20f:0x2a7]
---
Predecessors: [0x1b7]
Successors: [0x2a8, 0x2ac]
---
0x20f DUP2
0x210 SWAP1
0x211 POP
0x212 DUP1
0x213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x228 AND
0x229 PUSH4 0x3f3c51c3
0x22e ADDRESS
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP3
0x233 PUSH4 0xffffffff
0x238 AND
0x239 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x257 MUL
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x4
0x25c ADD
0x25d DUP1
0x25e DUP3
0x25f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x274 AND
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b DUP2
0x28c MSTORE
0x28d PUSH1 0x20
0x28f ADD
0x290 SWAP2
0x291 POP
0x292 POP
0x293 PUSH1 0x0
0x295 PUSH1 0x40
0x297 MLOAD
0x298 DUP1
0x299 DUP4
0x29a SUB
0x29b DUP2
0x29c PUSH1 0x0
0x29e DUP8
0x29f DUP1
0x2a0 EXTCODESIZE
0x2a1 ISZERO
0x2a2 DUP1
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x213: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x228: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x229: V114 = 0x3f3c51c3
0x22e: V115 = ADDRESS
0x22f: V116 = 0x40
0x231: V117 = M[0x40]
0x233: V118 = 0xffffffff
0x238: V119 = AND 0xffffffff 0x3f3c51c3
0x239: V120 = 0x100000000000000000000000000000000000000000000000000000000
0x257: V121 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3f3c51c3
0x259: M[V117] = 0x3f3c51c300000000000000000000000000000000000000000000000000000000
0x25a: V122 = 0x4
0x25c: V123 = ADD 0x4 V117
0x25f: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x274: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x275: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x28c: M[V123] = V127
0x28d: V128 = 0x20
0x28f: V129 = ADD 0x20 V123
0x293: V130 = 0x0
0x295: V131 = 0x40
0x297: V132 = M[0x40]
0x29a: V133 = SUB V129 V132
0x29c: V134 = 0x0
0x2a0: V135 = EXTCODESIZE V113
0x2a1: V136 = ISZERO V135
0x2a3: V137 = ISZERO V136
0x2a4: V138 = 0x2ac
0x2a7: JUMPI 0x2ac V137
---
Entry stack: [V11, 0xbc, V41, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V113, 0x3f3c51c3, V129, 0x0, V132, V133, V132, 0x0, V113, V136]
Exit stack: [V11, 0xbc, V41, V41, V113, 0x3f3c51c3, V129, 0x0, V132, V133, V132, 0x0, V113, V136]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x20f]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V139 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V41, V41, V113, 0x3f3c51c3, V129, 0x0, V132, V133, V132, 0x0, V113, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V41, V41, V113, 0x3f3c51c3, V129, 0x0, V132, V133, V132, 0x0, V113, V136]

================================

Block 0x2ac
[0x2ac:0x2b6]
---
Predecessors: [0x20f]
Successors: [0x2b7, 0x2c0]
---
0x2ac JUMPDEST
0x2ad POP
0x2ae GAS
0x2af CALL
0x2b0 ISZERO
0x2b1 DUP1
0x2b2 ISZERO
0x2b3 PUSH2 0x2c0
0x2b6 JUMPI
---
0x2ac: JUMPDEST 
0x2ae: V140 = GAS
0x2af: V141 = CALL V140 V113 0x0 V132 V133 V132 0x0
0x2b0: V142 = ISZERO V141
0x2b2: V143 = ISZERO V142
0x2b3: V144 = 0x2c0
0x2b6: JUMPI 0x2c0 V143
---
Entry stack: [V11, 0xbc, V41, V41, V113, 0x3f3c51c3, V129, 0x0, V132, V133, V132, 0x0, V113, V136]
Stack pops: 7
Stack additions: [V142]
Exit stack: [V11, 0xbc, V41, V41, V113, 0x3f3c51c3, V129, V142]

================================

Block 0x2b7
[0x2b7:0x2bf]
---
Predecessors: [0x2ac]
Successors: []
---
0x2b7 RETURNDATASIZE
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb RETURNDATACOPY
0x2bc RETURNDATASIZE
0x2bd PUSH1 0x0
0x2bf REVERT
---
0x2b7: V145 = RETURNDATASIZE
0x2b8: V146 = 0x0
0x2bb: RETURNDATACOPY 0x0 0x0 V145
0x2bc: V147 = RETURNDATASIZE
0x2bd: V148 = 0x0
0x2bf: REVERT 0x0 V147
---
Entry stack: [V11, 0xbc, V41, V41, V113, 0x3f3c51c3, V129, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V41, V41, V113, 0x3f3c51c3, V129, V142]

================================

Block 0x2c0
[0x2c0:0x323]
---
Predecessors: [0x2ac]
Successors: [0x324, 0x328]
---
0x2c0 JUMPDEST
0x2c1 POP
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 DUP1
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc PUSH4 0xa1e564b1
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP2
0x2e5 PUSH4 0xffffffff
0x2ea AND
0x2eb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x309 MUL
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x4
0x30e ADD
0x30f PUSH1 0x0
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP1
0x315 DUP4
0x316 SUB
0x317 DUP2
0x318 PUSH1 0x0
0x31a DUP8
0x31b DUP1
0x31c EXTCODESIZE
0x31d ISZERO
0x31e DUP1
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x2c0: JUMPDEST 
0x2c6: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x2dc: V151 = 0xa1e564b1
0x2e1: V152 = 0x40
0x2e3: V153 = M[0x40]
0x2e5: V154 = 0xffffffff
0x2ea: V155 = AND 0xffffffff 0xa1e564b1
0x2eb: V156 = 0x100000000000000000000000000000000000000000000000000000000
0x309: V157 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa1e564b1
0x30b: M[V153] = 0xa1e564b100000000000000000000000000000000000000000000000000000000
0x30c: V158 = 0x4
0x30e: V159 = ADD 0x4 V153
0x30f: V160 = 0x0
0x311: V161 = 0x40
0x313: V162 = M[0x40]
0x316: V163 = SUB V159 V162
0x318: V164 = 0x0
0x31c: V165 = EXTCODESIZE V150
0x31d: V166 = ISZERO V165
0x31f: V167 = ISZERO V166
0x320: V168 = 0x328
0x323: JUMPI 0x328 V167
---
Entry stack: [V11, 0xbc, V41, V41, V113, 0x3f3c51c3, V129, V142]
Stack pops: 5
Stack additions: [S4, V150, 0xa1e564b1, V159, 0x0, V162, V163, V162, 0x0, V150, V166]
Exit stack: [V11, 0xbc, V41, V41, V150, 0xa1e564b1, V159, 0x0, V162, V163, V162, 0x0, V150, V166]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x2c0]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V169 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V41, V41, V150, 0xa1e564b1, V159, 0x0, V162, V163, V162, 0x0, V150, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V41, V41, V150, 0xa1e564b1, V159, 0x0, V162, V163, V162, 0x0, V150, V166]

================================

Block 0x328
[0x328:0x332]
---
Predecessors: [0x2c0]
Successors: [0x333, 0x33c]
---
0x328 JUMPDEST
0x329 POP
0x32a GAS
0x32b CALL
0x32c ISZERO
0x32d DUP1
0x32e ISZERO
0x32f PUSH2 0x33c
0x332 JUMPI
---
0x328: JUMPDEST 
0x32a: V170 = GAS
0x32b: V171 = CALL V170 V150 0x0 V162 V163 V162 0x0
0x32c: V172 = ISZERO V171
0x32e: V173 = ISZERO V172
0x32f: V174 = 0x33c
0x332: JUMPI 0x33c V173
---
Entry stack: [V11, 0xbc, V41, V41, V150, 0xa1e564b1, V159, 0x0, V162, V163, V162, 0x0, V150, V166]
Stack pops: 7
Stack additions: [V172]
Exit stack: [V11, 0xbc, V41, V41, V150, 0xa1e564b1, V159, V172]

================================

Block 0x333
[0x333:0x33b]
---
Predecessors: [0x328]
Successors: []
---
0x333 RETURNDATASIZE
0x334 PUSH1 0x0
0x336 DUP1
0x337 RETURNDATACOPY
0x338 RETURNDATASIZE
0x339 PUSH1 0x0
0x33b REVERT
---
0x333: V175 = RETURNDATASIZE
0x334: V176 = 0x0
0x337: RETURNDATACOPY 0x0 0x0 V175
0x338: V177 = RETURNDATASIZE
0x339: V178 = 0x0
0x33b: REVERT 0x0 V177
---
Entry stack: [V11, 0xbc, V41, V41, V150, 0xa1e564b1, V159, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V41, V41, V150, 0xa1e564b1, V159, V172]

================================

Block 0x33c
[0x33c:0x340]
---
Predecessors: [0x328]
Successors: [0x341]
---
0x33c JUMPDEST
0x33d POP
0x33e POP
0x33f POP
0x340 POP
---
0x33c: JUMPDEST 
---
Entry stack: [V11, 0xbc, V41, V41, V150, 0xa1e564b1, V159, V172]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xbc, V41, V41]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x1b7, 0x33c]
Successors: [0xbc]
---
0x341 JUMPDEST
0x342 POP
0x343 POP
0x344 JUMP
---
0x341: JUMPDEST 
0x344: JUMP 0xbc
---
Entry stack: [V11, 0xbc, V41, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x345
[0x345:0x39c]
---
Predecessors: [0xca]
Successors: [0x39d, 0x4be]
---
0x345 JUMPDEST
0x346 PUSH1 0x0
0x348 DUP1
0x349 PUSH1 0x0
0x34b SWAP1
0x34c SLOAD
0x34d SWAP1
0x34e PUSH2 0x100
0x351 EXP
0x352 SWAP1
0x353 DIV
0x354 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x369 AND
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 CALLER
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 AND
0x397 EQ
0x398 ISZERO
0x399 PUSH2 0x4be
0x39c JUMPI
---
0x345: JUMPDEST 
0x346: V179 = 0x0
0x349: V180 = 0x0
0x34c: V181 = S[0x0]
0x34e: V182 = 0x100
0x351: V183 = EXP 0x100 0x0
0x353: V184 = DIV V181 0x1
0x354: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x369: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x36a: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x380: V189 = CALLER
0x381: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x397: V192 = EQ V191 V188
0x398: V193 = ISZERO V192
0x399: V194 = 0x4be
0x39c: JUMPI 0x4be V193
---
Entry stack: [V11, 0x10d, V56, V62]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x10d, V56, V62, 0x0]

================================

Block 0x39d
[0x39d:0x411]
---
Predecessors: [0x345]
Successors: [0x412, 0x416]
---
0x39d DUP3
0x39e SWAP1
0x39f POP
0x3a0 DUP1
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 PUSH4 0xdf9933e5
0x3bc DUP4
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP3
0x3c1 PUSH4 0xffffffff
0x3c6 AND
0x3c7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3e5 MUL
0x3e6 DUP2
0x3e7 MSTORE
0x3e8 PUSH1 0x4
0x3ea ADD
0x3eb DUP1
0x3ec DUP3
0x3ed PUSH1 0x0
0x3ef NOT
0x3f0 AND
0x3f1 PUSH1 0x0
0x3f3 NOT
0x3f4 AND
0x3f5 DUP2
0x3f6 MSTORE
0x3f7 PUSH1 0x20
0x3f9 ADD
0x3fa SWAP2
0x3fb POP
0x3fc POP
0x3fd PUSH1 0x0
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 DUP4
0x404 SUB
0x405 DUP2
0x406 PUSH1 0x0
0x408 DUP8
0x409 DUP1
0x40a EXTCODESIZE
0x40b ISZERO
0x40c DUP1
0x40d ISZERO
0x40e PUSH2 0x416
0x411 JUMPI
---
0x3a1: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x3b7: V197 = 0xdf9933e5
0x3bd: V198 = 0x40
0x3bf: V199 = M[0x40]
0x3c1: V200 = 0xffffffff
0x3c6: V201 = AND 0xffffffff 0xdf9933e5
0x3c7: V202 = 0x100000000000000000000000000000000000000000000000000000000
0x3e5: V203 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xdf9933e5
0x3e7: M[V199] = 0xdf9933e500000000000000000000000000000000000000000000000000000000
0x3e8: V204 = 0x4
0x3ea: V205 = ADD 0x4 V199
0x3ed: V206 = 0x0
0x3ef: V207 = NOT 0x0
0x3f0: V208 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V62
0x3f1: V209 = 0x0
0x3f3: V210 = NOT 0x0
0x3f4: V211 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V208
0x3f6: M[V205] = V211
0x3f7: V212 = 0x20
0x3f9: V213 = ADD 0x20 V205
0x3fd: V214 = 0x0
0x3ff: V215 = 0x40
0x401: V216 = M[0x40]
0x404: V217 = SUB V213 V216
0x406: V218 = 0x0
0x40a: V219 = EXTCODESIZE V196
0x40b: V220 = ISZERO V219
0x40d: V221 = ISZERO V220
0x40e: V222 = 0x416
0x411: JUMPI 0x416 V221
---
Entry stack: [V11, 0x10d, V56, V62, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2, V196, 0xdf9933e5, V213, 0x0, V216, V217, V216, 0x0, V196, V220]
Exit stack: [V11, 0x10d, V56, V62, V56, V196, 0xdf9933e5, V213, 0x0, V216, V217, V216, 0x0, V196, V220]

================================

Block 0x412
[0x412:0x415]
---
Predecessors: [0x39d]
Successors: []
---
0x412 PUSH1 0x0
0x414 DUP1
0x415 REVERT
---
0x412: V223 = 0x0
0x415: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10d, V56, V62, V56, V196, 0xdf9933e5, V213, 0x0, V216, V217, V216, 0x0, V196, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10d, V56, V62, V56, V196, 0xdf9933e5, V213, 0x0, V216, V217, V216, 0x0, V196, V220]

================================

Block 0x416
[0x416:0x420]
---
Predecessors: [0x39d]
Successors: [0x421, 0x42a]
---
0x416 JUMPDEST
0x417 POP
0x418 GAS
0x419 CALL
0x41a ISZERO
0x41b DUP1
0x41c ISZERO
0x41d PUSH2 0x42a
0x420 JUMPI
---
0x416: JUMPDEST 
0x418: V224 = GAS
0x419: V225 = CALL V224 V196 0x0 V216 V217 V216 0x0
0x41a: V226 = ISZERO V225
0x41c: V227 = ISZERO V226
0x41d: V228 = 0x42a
0x420: JUMPI 0x42a V227
---
Entry stack: [V11, 0x10d, V56, V62, V56, V196, 0xdf9933e5, V213, 0x0, V216, V217, V216, 0x0, V196, V220]
Stack pops: 7
Stack additions: [V226]
Exit stack: [V11, 0x10d, V56, V62, V56, V196, 0xdf9933e5, V213, V226]

================================

Block 0x421
[0x421:0x429]
---
Predecessors: [0x416]
Successors: []
---
0x421 RETURNDATASIZE
0x422 PUSH1 0x0
0x424 DUP1
0x425 RETURNDATACOPY
0x426 RETURNDATASIZE
0x427 PUSH1 0x0
0x429 REVERT
---
0x421: V229 = RETURNDATASIZE
0x422: V230 = 0x0
0x425: RETURNDATACOPY 0x0 0x0 V229
0x426: V231 = RETURNDATASIZE
0x427: V232 = 0x0
0x429: REVERT 0x0 V231
---
Entry stack: [V11, 0x10d, V56, V62, V56, V196, 0xdf9933e5, V213, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10d, V56, V62, V56, V196, 0xdf9933e5, V213, V226]

================================

Block 0x42a
[0x42a:0x4a0]
---
Predecessors: [0x416]
Successors: [0x4a1, 0x4a5]
---
0x42a JUMPDEST
0x42b POP
0x42c POP
0x42d POP
0x42e POP
0x42f DUP1
0x430 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x445 AND
0x446 PUSH4 0x65d61ad6
0x44b DUP4
0x44c PUSH1 0x40
0x44e MLOAD
0x44f DUP3
0x450 PUSH4 0xffffffff
0x455 AND
0x456 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x474 MUL
0x475 DUP2
0x476 MSTORE
0x477 PUSH1 0x4
0x479 ADD
0x47a DUP1
0x47b DUP3
0x47c PUSH1 0x0
0x47e NOT
0x47f AND
0x480 PUSH1 0x0
0x482 NOT
0x483 AND
0x484 DUP2
0x485 MSTORE
0x486 PUSH1 0x20
0x488 ADD
0x489 SWAP2
0x48a POP
0x48b POP
0x48c PUSH1 0x0
0x48e PUSH1 0x40
0x490 MLOAD
0x491 DUP1
0x492 DUP4
0x493 SUB
0x494 DUP2
0x495 PUSH1 0x0
0x497 DUP8
0x498 DUP1
0x499 EXTCODESIZE
0x49a ISZERO
0x49b DUP1
0x49c ISZERO
0x49d PUSH2 0x4a5
0x4a0 JUMPI
---
0x42a: JUMPDEST 
0x430: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x445: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x446: V235 = 0x65d61ad6
0x44c: V236 = 0x40
0x44e: V237 = M[0x40]
0x450: V238 = 0xffffffff
0x455: V239 = AND 0xffffffff 0x65d61ad6
0x456: V240 = 0x100000000000000000000000000000000000000000000000000000000
0x474: V241 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x65d61ad6
0x476: M[V237] = 0x65d61ad600000000000000000000000000000000000000000000000000000000
0x477: V242 = 0x4
0x479: V243 = ADD 0x4 V237
0x47c: V244 = 0x0
0x47e: V245 = NOT 0x0
0x47f: V246 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V62
0x480: V247 = 0x0
0x482: V248 = NOT 0x0
0x483: V249 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V246
0x485: M[V243] = V249
0x486: V250 = 0x20
0x488: V251 = ADD 0x20 V243
0x48c: V252 = 0x0
0x48e: V253 = 0x40
0x490: V254 = M[0x40]
0x493: V255 = SUB V251 V254
0x495: V256 = 0x0
0x499: V257 = EXTCODESIZE V234
0x49a: V258 = ISZERO V257
0x49c: V259 = ISZERO V258
0x49d: V260 = 0x4a5
0x4a0: JUMPI 0x4a5 V259
---
Entry stack: [V11, 0x10d, V56, V62, V56, V196, 0xdf9933e5, V213, V226]
Stack pops: 6
Stack additions: [S5, S4, V234, 0x65d61ad6, V251, 0x0, V254, V255, V254, 0x0, V234, V258]
Exit stack: [V11, 0x10d, V56, V62, V56, V234, 0x65d61ad6, V251, 0x0, V254, V255, V254, 0x0, V234, V258]

================================

Block 0x4a1
[0x4a1:0x4a4]
---
Predecessors: [0x42a]
Successors: []
---
0x4a1 PUSH1 0x0
0x4a3 DUP1
0x4a4 REVERT
---
0x4a1: V261 = 0x0
0x4a4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10d, V56, V62, V56, V234, 0x65d61ad6, V251, 0x0, V254, V255, V254, 0x0, V234, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10d, V56, V62, V56, V234, 0x65d61ad6, V251, 0x0, V254, V255, V254, 0x0, V234, V258]

================================

Block 0x4a5
[0x4a5:0x4af]
---
Predecessors: [0x42a]
Successors: [0x4b0, 0x4b9]
---
0x4a5 JUMPDEST
0x4a6 POP
0x4a7 GAS
0x4a8 CALL
0x4a9 ISZERO
0x4aa DUP1
0x4ab ISZERO
0x4ac PUSH2 0x4b9
0x4af JUMPI
---
0x4a5: JUMPDEST 
0x4a7: V262 = GAS
0x4a8: V263 = CALL V262 V234 0x0 V254 V255 V254 0x0
0x4a9: V264 = ISZERO V263
0x4ab: V265 = ISZERO V264
0x4ac: V266 = 0x4b9
0x4af: JUMPI 0x4b9 V265
---
Entry stack: [V11, 0x10d, V56, V62, V56, V234, 0x65d61ad6, V251, 0x0, V254, V255, V254, 0x0, V234, V258]
Stack pops: 7
Stack additions: [V264]
Exit stack: [V11, 0x10d, V56, V62, V56, V234, 0x65d61ad6, V251, V264]

================================

Block 0x4b0
[0x4b0:0x4b8]
---
Predecessors: [0x4a5]
Successors: []
---
0x4b0 RETURNDATASIZE
0x4b1 PUSH1 0x0
0x4b3 DUP1
0x4b4 RETURNDATACOPY
0x4b5 RETURNDATASIZE
0x4b6 PUSH1 0x0
0x4b8 REVERT
---
0x4b0: V267 = RETURNDATASIZE
0x4b1: V268 = 0x0
0x4b4: RETURNDATACOPY 0x0 0x0 V267
0x4b5: V269 = RETURNDATASIZE
0x4b6: V270 = 0x0
0x4b8: REVERT 0x0 V269
---
Entry stack: [V11, 0x10d, V56, V62, V56, V234, 0x65d61ad6, V251, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10d, V56, V62, V56, V234, 0x65d61ad6, V251, V264]

================================

Block 0x4b9
[0x4b9:0x4bd]
---
Predecessors: [0x4a5]
Successors: [0x4be]
---
0x4b9 JUMPDEST
0x4ba POP
0x4bb POP
0x4bc POP
0x4bd POP
---
0x4b9: JUMPDEST 
---
Entry stack: [V11, 0x10d, V56, V62, V56, V234, 0x65d61ad6, V251, V264]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x10d, V56, V62, V56]

================================

Block 0x4be
[0x4be:0x4c2]
---
Predecessors: [0x345, 0x4b9]
Successors: [0x10d]
---
0x4be JUMPDEST
0x4bf POP
0x4c0 POP
0x4c1 POP
0x4c2 JUMP
---
0x4be: JUMPDEST 
0x4c2: JUMP 0x10d
---
Entry stack: [V11, 0x10d, V56, V62, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x4c3
[0x4c3:0x518]
---
Predecessors: [0x11b]
Successors: [0x519, 0x598]
---
0x4c3 JUMPDEST
0x4c4 PUSH1 0x0
0x4c6 DUP1
0x4c7 SWAP1
0x4c8 SLOAD
0x4c9 SWAP1
0x4ca PUSH2 0x100
0x4cd EXP
0x4ce SWAP1
0x4cf DIV
0x4d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e5 AND
0x4e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fb AND
0x4fc CALLER
0x4fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x512 AND
0x513 EQ
0x514 ISZERO
0x515 PUSH2 0x598
0x518 JUMPI
---
0x4c3: JUMPDEST 
0x4c4: V271 = 0x0
0x4c8: V272 = S[0x0]
0x4ca: V273 = 0x100
0x4cd: V274 = EXP 0x100 0x0
0x4cf: V275 = DIV V272 0x1
0x4d0: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x4e6: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x4fc: V280 = CALLER
0x4fd: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x512: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x513: V283 = EQ V282 V279
0x514: V284 = ISZERO V283
0x515: V285 = 0x598
0x518: JUMPI 0x598 V284
---
Entry stack: [V11, 0x124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x124]

================================

Block 0x519
[0x519:0x58c]
---
Predecessors: [0x4c3]
Successors: [0x58d, 0x596]
---
0x519 PUSH1 0x0
0x51b DUP1
0x51c SWAP1
0x51d SLOAD
0x51e SWAP1
0x51f PUSH2 0x100
0x522 EXP
0x523 SWAP1
0x524 DIV
0x525 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53a AND
0x53b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x550 AND
0x551 PUSH2 0x8fc
0x554 ADDRESS
0x555 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56a AND
0x56b BALANCE
0x56c SWAP1
0x56d DUP2
0x56e ISZERO
0x56f MUL
0x570 SWAP1
0x571 PUSH1 0x40
0x573 MLOAD
0x574 PUSH1 0x0
0x576 PUSH1 0x40
0x578 MLOAD
0x579 DUP1
0x57a DUP4
0x57b SUB
0x57c DUP2
0x57d DUP6
0x57e DUP9
0x57f DUP9
0x580 CALL
0x581 SWAP4
0x582 POP
0x583 POP
0x584 POP
0x585 POP
0x586 ISZERO
0x587 DUP1
0x588 ISZERO
0x589 PUSH2 0x596
0x58c JUMPI
---
0x519: V286 = 0x0
0x51d: V287 = S[0x0]
0x51f: V288 = 0x100
0x522: V289 = EXP 0x100 0x0
0x524: V290 = DIV V287 0x1
0x525: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x53b: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x550: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x551: V295 = 0x8fc
0x554: V296 = ADDRESS
0x555: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x56a: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x56b: V299 = BALANCE V298
0x56e: V300 = ISZERO V299
0x56f: V301 = MUL V300 0x8fc
0x571: V302 = 0x40
0x573: V303 = M[0x40]
0x574: V304 = 0x0
0x576: V305 = 0x40
0x578: V306 = M[0x40]
0x57b: V307 = SUB V303 V306
0x580: V308 = CALL V301 V294 V299 V306 V307 V306 0x0
0x586: V309 = ISZERO V308
0x588: V310 = ISZERO V309
0x589: V311 = 0x596
0x58c: JUMPI 0x596 V310
---
Entry stack: [V11, 0x124]
Stack pops: 0
Stack additions: [V309]
Exit stack: [V11, 0x124, V309]

================================

Block 0x58d
[0x58d:0x595]
---
Predecessors: [0x519]
Successors: []
---
0x58d RETURNDATASIZE
0x58e PUSH1 0x0
0x590 DUP1
0x591 RETURNDATACOPY
0x592 RETURNDATASIZE
0x593 PUSH1 0x0
0x595 REVERT
---
0x58d: V312 = RETURNDATASIZE
0x58e: V313 = 0x0
0x591: RETURNDATACOPY 0x0 0x0 V312
0x592: V314 = RETURNDATASIZE
0x593: V315 = 0x0
0x595: REVERT 0x0 V314
---
Entry stack: [V11, 0x124, V309]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x124, V309]

================================

Block 0x596
[0x596:0x597]
---
Predecessors: [0x519]
Successors: [0x598]
---
0x596 JUMPDEST
0x597 POP
---
0x596: JUMPDEST 
---
Entry stack: [V11, 0x124, V309]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x124]

================================

Block 0x598
[0x598:0x599]
---
Predecessors: [0x4c3, 0x596]
Successors: [0x124]
---
0x598 JUMPDEST
0x599 JUMP
---
0x598: JUMPDEST 
0x599: JUMP 0x124
---
Entry stack: [V11, 0x124]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x59a
[0x59a:0x5c8]
---
Predecessors: []
Successors: []
---
0x59a STOP
0x59b LOG1
0x59c PUSH6 0x627a7a723058
0x5a3 SHA3
0x5a4 MISSING 0xe2
0x5a5 SWAP6
0x5a6 REVERT
0x5a7 MISSING 0x5f
0x5a8 MISSING 0xa8
0x5a9 MISSING 0xed
0x5aa SIGNEXTEND
0x5ab MISSING 0xad
0x5ac MISSING 0xc0
0x5ad SWAP3
0x5ae SWAP5
0x5af SDIV
0x5b0 GAS
0x5b1 CREATE2
0x5b2 MISSING 0xb6
0x5b3 MISSING 0x4a
0x5b4 PC
0x5b5 DUP5
0x5b6 MISSING 0xe8
0x5b7 MSTORE8
0x5b8 MISSING 0xe7
0x5b9 MISSING 0x26
0x5ba PUSH14 0x4e979c62cc9ea4a4b60029
---
0x59a: STOP 
0x59b: LOG S0 S1 S2
0x59c: V316 = 0x627a7a723058
0x5a3: V317 = SHA3 0x627a7a723058 S3
0x5a4: MISSING 0xe2
0x5a6: REVERT S6 S1
0x5a7: MISSING 0x5f
0x5a8: MISSING 0xa8
0x5a9: MISSING 0xed
0x5aa: V318 = SIGNEXTEND S0 S1
0x5ab: MISSING 0xad
0x5ac: MISSING 0xc0
0x5af: V319 = SDIV S5 S1
0x5b0: V320 = GAS
0x5b1: V321 = CREATE2 V320 V319 S2 S0
0x5b2: MISSING 0xb6
0x5b3: MISSING 0x4a
0x5b4: V322 = PC
0x5b6: MISSING 0xe8
0x5b7: M8[S0] = S1
0x5b8: MISSING 0xe7
0x5b9: MISSING 0x26
0x5ba: V323 = 0x4e979c62cc9ea4a4b60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V317, S2, S3, S4, S5, S0, V318, V321, S4, S3, S3, V322, S0, S1, S2, S3, 0x4e979c62cc9ea4a4b60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3394fbd9
Entry block: 0x64
Exit block: 0x79
Body: 0x64, 0x6c, 0x70, 0x79, 0x126, 0x17c, 0x1b5

Function 1:
Public function signature: 0x4d338d64
Entry block: 0x7b
Exit block: 0x333
Body: 0x7b, 0x83, 0x87, 0xbc, 0x1b7, 0x20f, 0x2a8, 0x2ac, 0x2b7, 0x2c0, 0x324, 0x328, 0x333, 0x33c, 0x341

Function 2:
Public function signature: 0x4e9c7ca2
Entry block: 0xbe
Exit block: 0x4b0
Body: 0xbe, 0xc6, 0xca, 0x10d, 0x345, 0x39d, 0x412, 0x416, 0x421, 0x42a, 0x4a1, 0x4a5, 0x4b0, 0x4b9, 0x4be

Function 3:
Public function signature: 0x52e3f92b
Entry block: 0x10f
Exit block: 0x58d
Body: 0x10f, 0x117, 0x11b, 0x124, 0x4c3, 0x519, 0x58d, 0x596, 0x598

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

