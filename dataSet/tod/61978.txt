Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xcc]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xcc
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xcc
0xc: JUMPI 0xcc V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xd1]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x27ebe40a
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xd1
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x27ebe40a
0x22: V15 = EQ V13 0x27ebe40a
0x23: V16 = 0xd1
0x26: JUMPI 0xd1 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xfe]
---
0x27 DUP1
0x28 PUSH4 0x2d3a926a
0x2d EQ
0x2e PUSH2 0xfe
0x31 JUMPI
---
0x28: V17 = 0x2d3a926a
0x2d: V18 = EQ 0x2d3a926a V13
0x2e: V19 = 0xfe
0x31: JUMPI 0xfe V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x126]
---
0x32 DUP1
0x33 PUSH4 0x3f4ba83a
0x38 EQ
0x39 PUSH2 0x126
0x3c JUMPI
---
0x33: V20 = 0x3f4ba83a
0x38: V21 = EQ 0x3f4ba83a V13
0x39: V22 = 0x126
0x3c: JUMPI 0x126 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x14d]
---
0x3d DUP1
0x3e PUSH4 0x5c975abb
0x43 EQ
0x44 PUSH2 0x14d
0x47 JUMPI
---
0x3e: V23 = 0x5c975abb
0x43: V24 = EQ 0x5c975abb V13
0x44: V25 = 0x14d
0x47: JUMPI 0x14d V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x160]
---
0x48 DUP1
0x49 PUSH4 0x5fd8c710
0x4e EQ
0x4f PUSH2 0x160
0x52 JUMPI
---
0x49: V26 = 0x5fd8c710
0x4e: V27 = EQ 0x5fd8c710 V13
0x4f: V28 = 0x160
0x52: JUMPI 0x160 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x173]
---
0x53 DUP1
0x54 PUSH4 0x76190f8f
0x59 EQ
0x5a PUSH2 0x173
0x5d JUMPI
---
0x54: V29 = 0x76190f8f
0x59: V30 = EQ 0x76190f8f V13
0x5a: V31 = 0x173
0x5d: JUMPI 0x173 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x186]
---
0x5e DUP1
0x5f PUSH4 0x78bd7935
0x64 EQ
0x65 PUSH2 0x186
0x68 JUMPI
---
0x5f: V32 = 0x78bd7935
0x64: V33 = EQ 0x78bd7935 V13
0x65: V34 = 0x186
0x68: JUMPI 0x186 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1d7]
---
0x69 DUP1
0x6a PUSH4 0x83b5ff8b
0x6f EQ
0x70 PUSH2 0x1d7
0x73 JUMPI
---
0x6a: V35 = 0x83b5ff8b
0x6f: V36 = EQ 0x83b5ff8b V13
0x70: V37 = 0x1d7
0x73: JUMPI 0x1d7 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1ea]
---
0x74 DUP1
0x75 PUSH4 0x8456cb59
0x7a EQ
0x7b PUSH2 0x1ea
0x7e JUMPI
---
0x75: V38 = 0x8456cb59
0x7a: V39 = EQ 0x8456cb59 V13
0x7b: V40 = 0x1ea
0x7e: JUMPI 0x1ea V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1fd]
---
0x7f DUP1
0x80 PUSH4 0x878eb368
0x85 EQ
0x86 PUSH2 0x1fd
0x89 JUMPI
---
0x80: V41 = 0x878eb368
0x85: V42 = EQ 0x878eb368 V13
0x86: V43 = 0x1fd
0x89: JUMPI 0x1fd V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x213]
---
0x8a DUP1
0x8b PUSH4 0x8da5cb5b
0x90 EQ
0x91 PUSH2 0x213
0x94 JUMPI
---
0x8b: V44 = 0x8da5cb5b
0x90: V45 = EQ 0x8da5cb5b V13
0x91: V46 = 0x213
0x94: JUMPI 0x213 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x242]
---
0x95 DUP1
0x96 PUSH4 0x96b5a755
0x9b EQ
0x9c PUSH2 0x242
0x9f JUMPI
---
0x96: V47 = 0x96b5a755
0x9b: V48 = EQ 0x96b5a755 V13
0x9c: V49 = 0x242
0x9f: JUMPI 0x242 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x258]
---
0xa0 DUP1
0xa1 PUSH4 0x9f04996d
0xa6 EQ
0xa7 PUSH2 0x258
0xaa JUMPI
---
0xa1: V50 = 0x9f04996d
0xa6: V51 = EQ 0x9f04996d V13
0xa7: V52 = 0x258
0xaa: JUMPI 0x258 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x26f]
---
0xab DUP1
0xac PUSH4 0xc55d0f56
0xb1 EQ
0xb2 PUSH2 0x26f
0xb5 JUMPI
---
0xac: V53 = 0xc55d0f56
0xb1: V54 = EQ 0xc55d0f56 V13
0xb2: V55 = 0x26f
0xb5: JUMPI 0x26f V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x285]
---
0xb6 DUP1
0xb7 PUSH4 0xdd1b7a0f
0xbc EQ
0xbd PUSH2 0x285
0xc0 JUMPI
---
0xb7: V56 = 0xdd1b7a0f
0xbc: V57 = EQ 0xdd1b7a0f V13
0xbd: V58 = 0x285
0xc0: JUMPI 0x285 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x298]
---
0xc1 DUP1
0xc2 PUSH4 0xf2fde38b
0xc7 EQ
0xc8 PUSH2 0x298
0xcb JUMPI
---
0xc2: V59 = 0xf2fde38b
0xc7: V60 = EQ 0xf2fde38b V13
0xc8: V61 = 0x298
0xcb: JUMPI 0x298 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd0]
---
Predecessors: [0x0, 0xc1]
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcc: JUMPDEST 
0xcd: V62 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd1
[0xd1:0xd7]
---
Predecessors: [0xd]
Successors: [0xd8, 0xdc]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xd1: JUMPDEST 
0xd2: V63 = CALLVALUE
0xd3: V64 = ISZERO V63
0xd4: V65 = 0xdc
0xd7: JUMPI 0xdc V64
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xd1]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V66 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdc
[0xdc:0xfb]
---
Predecessors: [0xd1]
Successors: [0x2b7]
---
0xdc JUMPDEST
0xdd PUSH2 0xfc
0xe0 PUSH1 0x4
0xe2 CALLDATALOAD
0xe3 PUSH1 0x24
0xe5 CALLDATALOAD
0xe6 PUSH1 0x44
0xe8 CALLDATALOAD
0xe9 PUSH1 0x64
0xeb CALLDATALOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 PUSH1 0x84
0xf6 CALLDATALOAD
0xf7 AND
0xf8 PUSH2 0x2b7
0xfb JUMP
---
0xdc: JUMPDEST 
0xdd: V67 = 0xfc
0xe0: V68 = 0x4
0xe2: V69 = CALLDATALOAD 0x4
0xe3: V70 = 0x24
0xe5: V71 = CALLDATALOAD 0x24
0xe6: V72 = 0x44
0xe8: V73 = CALLDATALOAD 0x44
0xe9: V74 = 0x64
0xeb: V75 = CALLDATALOAD 0x64
0xec: V76 = 0x1
0xee: V77 = 0xa0
0xf0: V78 = 0x2
0xf2: V79 = EXP 0x2 0xa0
0xf3: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V81 = 0x84
0xf6: V82 = CALLDATALOAD 0x84
0xf7: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V84 = 0x2b7
0xfb: JUMP 0x2b7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfc, V69, V71, V73, V75, V83]
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83]

================================

Block 0xfc
[0xfc:0xfd]
---
Predecessors: [0x387, 0x4ab, 0x640, 0x6ad, 0x76b, 0xadb]
Successors: []
---
0xfc JUMPDEST
0xfd STOP
---
0xfc: JUMPDEST 
0xfd: STOP 
---
Entry stack: [V13, 0xfc, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, S3, S2, S1, S0]

================================

Block 0xfe
[0xfe:0x104]
---
Predecessors: [0x27]
Successors: [0x105, 0x109]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfe: JUMPDEST 
0xff: V85 = CALLVALUE
0x100: V86 = ISZERO V85
0x101: V87 = 0x109
0x104: JUMPI 0x109 V86
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfe]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V88 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x109
[0x109:0x113]
---
Predecessors: [0xfe]
Successors: [0x38f]
---
0x109 JUMPDEST
0x10a PUSH2 0x114
0x10d PUSH1 0x4
0x10f CALLDATALOAD
0x110 PUSH2 0x38f
0x113 JUMP
---
0x109: JUMPDEST 
0x10a: V89 = 0x114
0x10d: V90 = 0x4
0x10f: V91 = CALLDATALOAD 0x4
0x110: V92 = 0x38f
0x113: JUMP 0x38f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x114, V91]
Exit stack: [V13, 0x114, V91]

================================

Block 0x114
[0x114:0x125]
---
Predecessors: [0x38f, 0x544, 0x72a]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 MLOAD
0x118 SWAP1
0x119 DUP2
0x11a MSTORE
0x11b PUSH1 0x20
0x11d ADD
0x11e PUSH1 0x40
0x120 MLOAD
0x121 DUP1
0x122 SWAP2
0x123 SUB
0x124 SWAP1
0x125 RETURN
---
0x114: JUMPDEST 
0x115: V93 = 0x40
0x117: V94 = M[0x40]
0x11a: M[V94] = S0
0x11b: V95 = 0x20
0x11d: V96 = ADD 0x20 V94
0x11e: V97 = 0x40
0x120: V98 = M[0x40]
0x123: V99 = SUB V96 V98
0x125: RETURN V98 V99
---
Entry stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, {0x0, 0xfc, 0x6f4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, {0x0, 0xfc, 0x6f4}, S6, S5, S4, S3, S2, S1]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x32]
Successors: [0x12d, 0x131]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x126: JUMPDEST 
0x127: V100 = CALLVALUE
0x128: V101 = ISZERO V100
0x129: V102 = 0x131
0x12c: JUMPI 0x131 V101
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x126]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V103 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x131
[0x131:0x138]
---
Predecessors: [0x126]
Successors: [0x39b]
---
0x131 JUMPDEST
0x132 PUSH2 0x139
0x135 PUSH2 0x39b
0x138 JUMP
---
0x131: JUMPDEST 
0x132: V104 = 0x139
0x135: V105 = 0x39b
0x138: JUMP 0x39b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V13, 0x139]

================================

Block 0x139
[0x139:0x14c]
---
Predecessors: [0x3cf, 0x41f, 0x4ae, 0x57d]
Successors: []
---
0x139 JUMPDEST
0x13a PUSH1 0x40
0x13c MLOAD
0x13d SWAP1
0x13e ISZERO
0x13f ISZERO
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 SWAP2
0x14a SUB
0x14b SWAP1
0x14c RETURN
---
0x139: JUMPDEST 
0x13a: V106 = 0x40
0x13c: V107 = M[0x40]
0x13e: V108 = ISZERO S0
0x13f: V109 = ISZERO V108
0x141: M[V107] = V109
0x142: V110 = 0x20
0x144: V111 = ADD 0x20 V107
0x145: V112 = 0x40
0x147: V113 = M[0x40]
0x14a: V114 = SUB V111 V113
0x14c: RETURN V113 V114
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0x3d]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V115 = CALLVALUE
0x14f: V116 = ISZERO V115
0x150: V117 = 0x158
0x153: JUMPI 0x158 V116
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V118 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x14d]
Successors: [0x41f]
---
0x158 JUMPDEST
0x159 PUSH2 0x139
0x15c PUSH2 0x41f
0x15f JUMP
---
0x158: JUMPDEST 
0x159: V119 = 0x139
0x15c: V120 = 0x41f
0x15f: JUMP 0x41f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V13, 0x139]

================================

Block 0x160
[0x160:0x166]
---
Predecessors: [0x48]
Successors: [0x167, 0x16b]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x160: JUMPDEST 
0x161: V121 = CALLVALUE
0x162: V122 = ISZERO V121
0x163: V123 = 0x16b
0x166: JUMPI 0x16b V122
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x160]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V124 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16b
[0x16b:0x172]
---
Predecessors: [0x160]
Successors: [0x42f]
---
0x16b JUMPDEST
0x16c PUSH2 0xfc
0x16f PUSH2 0x42f
0x172 JUMP
---
0x16b: JUMPDEST 
0x16c: V125 = 0xfc
0x16f: V126 = 0x42f
0x172: JUMP 0x42f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfc]
Exit stack: [V13, 0xfc]

================================

Block 0x173
[0x173:0x179]
---
Predecessors: [0x53]
Successors: [0x17a, 0x17e]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x173: JUMPDEST 
0x174: V127 = CALLVALUE
0x175: V128 = ISZERO V127
0x176: V129 = 0x17e
0x179: JUMPI 0x17e V128
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x173]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V130 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x173]
Successors: [0x4ae]
---
0x17e JUMPDEST
0x17f PUSH2 0x139
0x182 PUSH2 0x4ae
0x185 JUMP
---
0x17e: JUMPDEST 
0x17f: V131 = 0x139
0x182: V132 = 0x4ae
0x185: JUMP 0x4ae
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V13, 0x139]

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x5e]
Successors: [0x18d, 0x191]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V133 = CALLVALUE
0x188: V134 = ISZERO V133
0x189: V135 = 0x191
0x18c: JUMPI 0x191 V134
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x186]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V136 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x191
[0x191:0x19b]
---
Predecessors: [0x186]
Successors: [0x4b7]
---
0x191 JUMPDEST
0x192 PUSH2 0x19c
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 PUSH2 0x4b7
0x19b JUMP
---
0x191: JUMPDEST 
0x192: V137 = 0x19c
0x195: V138 = 0x4
0x197: V139 = CALLDATALOAD 0x4
0x198: V140 = 0x4b7
0x19b: JUMP 0x4b7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x19c, V139]
Exit stack: [V13, 0x19c, V139]

================================

Block 0x19c
[0x19c:0x1d6]
---
Predecessors: [0x4e1, 0xadb]
Successors: []
---
0x19c JUMPDEST
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 SWAP1
0x1a9 SWAP6
0x1aa AND
0x1ab DUP6
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af DUP6
0x1b0 ADD
0x1b1 SWAP4
0x1b2 SWAP1
0x1b3 SWAP4
0x1b4 MSTORE
0x1b5 PUSH1 0x40
0x1b7 DUP1
0x1b8 DUP6
0x1b9 ADD
0x1ba SWAP3
0x1bb SWAP1
0x1bc SWAP3
0x1bd MSTORE
0x1be PUSH1 0x60
0x1c0 DUP5
0x1c1 ADD
0x1c2 MSTORE
0x1c3 PUSH1 0x80
0x1c5 DUP4
0x1c6 ADD
0x1c7 SWAP2
0x1c8 SWAP1
0x1c9 SWAP2
0x1ca MSTORE
0x1cb PUSH1 0xa0
0x1cd SWAP1
0x1ce SWAP2
0x1cf ADD
0x1d0 SWAP1
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 SWAP2
0x1d4 SUB
0x1d5 SWAP1
0x1d6 RETURN
---
0x19c: JUMPDEST 
0x19d: V141 = 0x40
0x19f: V142 = M[0x40]
0x1a0: V143 = 0x1
0x1a2: V144 = 0xa0
0x1a4: V145 = 0x2
0x1a6: V146 = EXP 0x2 0xa0
0x1a7: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1aa: V148 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: M[V142] = V148
0x1ad: V149 = 0x20
0x1b0: V150 = ADD V142 0x20
0x1b4: M[V150] = S3
0x1b5: V151 = 0x40
0x1b9: V152 = ADD V142 0x40
0x1bd: M[V152] = S2
0x1be: V153 = 0x60
0x1c1: V154 = ADD V142 0x60
0x1c2: M[V154] = S1
0x1c3: V155 = 0x80
0x1c6: V156 = ADD V142 0x80
0x1ca: M[V156] = S0
0x1cb: V157 = 0xa0
0x1cf: V158 = ADD V142 0xa0
0x1d1: V159 = M[0x40]
0x1d4: V160 = SUB V158 V159
0x1d6: RETURN V159 V160
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S5]

================================

Block 0x1d7
[0x1d7:0x1dd]
---
Predecessors: [0x69]
Successors: [0x1de, 0x1e2]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V161 = CALLVALUE
0x1d9: V162 = ISZERO V161
0x1da: V163 = 0x1e2
0x1dd: JUMPI 0x1e2 V162
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x1d7]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V164 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e2
[0x1e2:0x1e9]
---
Predecessors: [0x1d7]
Successors: [0x544]
---
0x1e2 JUMPDEST
0x1e3 PUSH2 0x114
0x1e6 PUSH2 0x544
0x1e9 JUMP
---
0x1e2: JUMPDEST 
0x1e3: V165 = 0x114
0x1e6: V166 = 0x544
0x1e9: JUMP 0x544
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x114]
Exit stack: [V13, 0x114]

================================

Block 0x1ea
[0x1ea:0x1f0]
---
Predecessors: [0x74]
Successors: [0x1f1, 0x1f5]
---
0x1ea JUMPDEST
0x1eb CALLVALUE
0x1ec ISZERO
0x1ed PUSH2 0x1f5
0x1f0 JUMPI
---
0x1ea: JUMPDEST 
0x1eb: V167 = CALLVALUE
0x1ec: V168 = ISZERO V167
0x1ed: V169 = 0x1f5
0x1f0: JUMPI 0x1f5 V168
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f1
[0x1f1:0x1f4]
---
Predecessors: [0x1ea]
Successors: []
---
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 REVERT
---
0x1f1: V170 = 0x0
0x1f4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f5
[0x1f5:0x1fc]
---
Predecessors: [0x1ea]
Successors: [0x54a]
---
0x1f5 JUMPDEST
0x1f6 PUSH2 0x139
0x1f9 PUSH2 0x54a
0x1fc JUMP
---
0x1f5: JUMPDEST 
0x1f6: V171 = 0x139
0x1f9: V172 = 0x54a
0x1fc: JUMP 0x54a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V13, 0x139]

================================

Block 0x1fd
[0x1fd:0x203]
---
Predecessors: [0x7f]
Successors: [0x204, 0x208]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff ISZERO
0x200 PUSH2 0x208
0x203 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V173 = CALLVALUE
0x1ff: V174 = ISZERO V173
0x200: V175 = 0x208
0x203: JUMPI 0x208 V174
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x204
[0x204:0x207]
---
Predecessors: [0x1fd]
Successors: []
---
0x204 PUSH1 0x0
0x206 DUP1
0x207 REVERT
---
0x204: V176 = 0x0
0x207: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x208
[0x208:0x212]
---
Predecessors: [0x1fd]
Successors: [0x5d3]
---
0x208 JUMPDEST
0x209 PUSH2 0xfc
0x20c PUSH1 0x4
0x20e CALLDATALOAD
0x20f PUSH2 0x5d3
0x212 JUMP
---
0x208: JUMPDEST 
0x209: V177 = 0xfc
0x20c: V178 = 0x4
0x20e: V179 = CALLDATALOAD 0x4
0x20f: V180 = 0x5d3
0x212: JUMP 0x5d3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfc, V179]
Exit stack: [V13, 0xfc, V179]

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x8a]
Successors: [0x21a, 0x21e]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V181 = CALLVALUE
0x215: V182 = ISZERO V181
0x216: V183 = 0x21e
0x219: JUMPI 0x21e V182
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x213]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V184 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x213]
Successors: [0x644]
---
0x21e JUMPDEST
0x21f PUSH2 0x226
0x222 PUSH2 0x644
0x225 JUMP
---
0x21e: JUMPDEST 
0x21f: V185 = 0x226
0x222: V186 = 0x644
0x225: JUMP 0x644
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V13, 0x226]

================================

Block 0x226
[0x226:0x241]
---
Predecessors: [0x644, 0x731]
Successors: []
---
0x226 JUMPDEST
0x227 PUSH1 0x40
0x229 MLOAD
0x22a PUSH1 0x1
0x22c PUSH1 0xa0
0x22e PUSH1 0x2
0x230 EXP
0x231 SUB
0x232 SWAP1
0x233 SWAP2
0x234 AND
0x235 DUP2
0x236 MSTORE
0x237 PUSH1 0x20
0x239 ADD
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e SWAP2
0x23f SUB
0x240 SWAP1
0x241 RETURN
---
0x226: JUMPDEST 
0x227: V187 = 0x40
0x229: V188 = M[0x40]
0x22a: V189 = 0x1
0x22c: V190 = 0xa0
0x22e: V191 = 0x2
0x230: V192 = EXP 0x2 0xa0
0x231: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x234: V194 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x236: M[V188] = V194
0x237: V195 = 0x20
0x239: V196 = ADD 0x20 V188
0x23a: V197 = 0x40
0x23c: V198 = M[0x40]
0x23f: V199 = SUB V196 V198
0x241: RETURN V198 V199
---
Entry stack: [V13, 0x226, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x226]

================================

Block 0x242
[0x242:0x248]
---
Predecessors: [0x95]
Successors: [0x249, 0x24d]
---
0x242 JUMPDEST
0x243 CALLVALUE
0x244 ISZERO
0x245 PUSH2 0x24d
0x248 JUMPI
---
0x242: JUMPDEST 
0x243: V200 = CALLVALUE
0x244: V201 = ISZERO V200
0x245: V202 = 0x24d
0x248: JUMPI 0x24d V201
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x249
[0x249:0x24c]
---
Predecessors: [0x242]
Successors: []
---
0x249 PUSH1 0x0
0x24b DUP1
0x24c REVERT
---
0x249: V203 = 0x0
0x24c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24d
[0x24d:0x257]
---
Predecessors: [0x242]
Successors: [0x653]
---
0x24d JUMPDEST
0x24e PUSH2 0xfc
0x251 PUSH1 0x4
0x253 CALLDATALOAD
0x254 PUSH2 0x653
0x257 JUMP
---
0x24d: JUMPDEST 
0x24e: V204 = 0xfc
0x251: V205 = 0x4
0x253: V206 = CALLDATALOAD 0x4
0x254: V207 = 0x653
0x257: JUMP 0x653
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfc, V206]
Exit stack: [V13, 0xfc, V206]

================================

Block 0x258
[0x258:0x26e]
---
Predecessors: [0xa0]
Successors: [0x6b2]
---
0x258 JUMPDEST
0x259 PUSH2 0xfc
0x25c PUSH1 0x4
0x25e CALLDATALOAD
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 PUSH1 0x24
0x269 CALLDATALOAD
0x26a AND
0x26b PUSH2 0x6b2
0x26e JUMP
---
0x258: JUMPDEST 
0x259: V208 = 0xfc
0x25c: V209 = 0x4
0x25e: V210 = CALLDATALOAD 0x4
0x25f: V211 = 0x1
0x261: V212 = 0xa0
0x263: V213 = 0x2
0x265: V214 = EXP 0x2 0xa0
0x266: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V216 = 0x24
0x269: V217 = CALLDATALOAD 0x24
0x26a: V218 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V219 = 0x6b2
0x26e: JUMP 0x6b2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfc, V210, V218]
Exit stack: [V13, 0xfc, V210, V218]

================================

Block 0x26f
[0x26f:0x275]
---
Predecessors: [0xab]
Successors: [0x276, 0x27a]
---
0x26f JUMPDEST
0x270 CALLVALUE
0x271 ISZERO
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x26f: JUMPDEST 
0x270: V220 = CALLVALUE
0x271: V221 = ISZERO V220
0x272: V222 = 0x27a
0x275: JUMPI 0x27a V221
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x26f]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V223 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27a
[0x27a:0x284]
---
Predecessors: [0x26f]
Successors: [0x6ff]
---
0x27a JUMPDEST
0x27b PUSH2 0x114
0x27e PUSH1 0x4
0x280 CALLDATALOAD
0x281 PUSH2 0x6ff
0x284 JUMP
---
0x27a: JUMPDEST 
0x27b: V224 = 0x114
0x27e: V225 = 0x4
0x280: V226 = CALLDATALOAD 0x4
0x281: V227 = 0x6ff
0x284: JUMP 0x6ff
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x114, V226]
Exit stack: [V13, 0x114, V226]

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0xb6]
Successors: [0x28c, 0x290]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V228 = CALLVALUE
0x287: V229 = ISZERO V228
0x288: V230 = 0x290
0x28b: JUMPI 0x290 V229
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x285]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V231 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x290
[0x290:0x297]
---
Predecessors: [0x285]
Successors: [0x731]
---
0x290 JUMPDEST
0x291 PUSH2 0x226
0x294 PUSH2 0x731
0x297 JUMP
---
0x290: JUMPDEST 
0x291: V232 = 0x226
0x294: V233 = 0x731
0x297: JUMP 0x731
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V13, 0x226]

================================

Block 0x298
[0x298:0x29e]
---
Predecessors: [0xc1]
Successors: [0x29f, 0x2a3]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a ISZERO
0x29b PUSH2 0x2a3
0x29e JUMPI
---
0x298: JUMPDEST 
0x299: V234 = CALLVALUE
0x29a: V235 = ISZERO V234
0x29b: V236 = 0x2a3
0x29e: JUMPI 0x2a3 V235
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x298]
Successors: []
---
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 REVERT
---
0x29f: V237 = 0x0
0x2a2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a3
[0x2a3:0x2b6]
---
Predecessors: [0x298]
Successors: [0x740]
---
0x2a3 JUMPDEST
0x2a4 PUSH2 0xfc
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af PUSH1 0x4
0x2b1 CALLDATALOAD
0x2b2 AND
0x2b3 PUSH2 0x740
0x2b6 JUMP
---
0x2a3: JUMPDEST 
0x2a4: V238 = 0xfc
0x2a7: V239 = 0x1
0x2a9: V240 = 0xa0
0x2ab: V241 = 0x2
0x2ad: V242 = EXP 0x2 0xa0
0x2ae: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V244 = 0x4
0x2b1: V245 = CALLDATALOAD 0x4
0x2b2: V246 = AND V245 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V247 = 0x740
0x2b6: JUMP 0x740
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfc, V246]
Exit stack: [V13, 0xfc, V246]

================================

Block 0x2b7
[0x2b7:0x2be]
---
Predecessors: [0xdc]
Successors: [0xca0]
---
0x2b7 JUMPDEST
0x2b8 PUSH2 0x2bf
0x2bb PUSH2 0xca0
0x2be JUMP
---
0x2b7: JUMPDEST 
0x2b8: V248 = 0x2bf
0x2bb: V249 = 0xca0
0x2be: JUMP 0xca0
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83]
Stack pops: 0
Stack additions: [0x2bf]
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, 0x2bf]

================================

Block 0x2bf
[0x2bf:0x2cf]
---
Predecessors: [0xca0]
Successors: [0x2d0, 0x2d4]
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x1
0x2c2 PUSH1 0x80
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SUB
0x2c8 DUP6
0x2c9 AND
0x2ca DUP6
0x2cb EQ
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V250 = 0x1
0x2c2: V251 = 0x80
0x2c4: V252 = 0x2
0x2c6: V253 = EXP 0x2 0x80
0x2c7: V254 = SUB 0x100000000000000000000000000000000 0x1
0x2c9: V255 = AND V71 0xffffffffffffffffffffffffffffffff
0x2cb: V256 = EQ V71 V255
0x2cc: V257 = 0x2d4
0x2cf: JUMPI 0x2d4 V256
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x2bf]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V258 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0x2d4
[0x2d4:0x2e4]
---
Predecessors: [0x2bf]
Successors: [0x2e5, 0x2e9]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x1
0x2d7 PUSH1 0x80
0x2d9 PUSH1 0x2
0x2db EXP
0x2dc SUB
0x2dd DUP5
0x2de AND
0x2df DUP5
0x2e0 EQ
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V259 = 0x1
0x2d7: V260 = 0x80
0x2d9: V261 = 0x2
0x2db: V262 = EXP 0x2 0x80
0x2dc: V263 = SUB 0x100000000000000000000000000000000 0x1
0x2de: V264 = AND V73 0xffffffffffffffffffffffffffffffff
0x2e0: V265 = EQ V73 V264
0x2e1: V266 = 0x2e9
0x2e4: JUMPI 0x2e9 V265
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2d4]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V267 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0x2e9
[0x2e9:0x2fa]
---
Predecessors: [0x2d4]
Successors: [0x2fb, 0x2ff]
---
0x2e9 JUMPDEST
0x2ea PUSH8 0xffffffffffffffff
0x2f3 DUP4
0x2f4 AND
0x2f5 DUP4
0x2f6 EQ
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V268 = 0xffffffffffffffff
0x2f4: V269 = AND V75 0xffffffffffffffff
0x2f6: V270 = EQ V75 V269
0x2f7: V271 = 0x2ff
0x2fa: JUMPI 0x2ff V270
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2e9]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V272 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0x2ff
[0x2ff:0x315]
---
Predecessors: [0x2e9]
Successors: [0x316, 0x31a]
---
0x2ff JUMPDEST
0x300 PUSH1 0x1
0x302 SLOAD
0x303 CALLER
0x304 PUSH1 0x1
0x306 PUSH1 0xa0
0x308 PUSH1 0x2
0x30a EXP
0x30b SUB
0x30c SWAP1
0x30d DUP2
0x30e AND
0x30f SWAP2
0x310 AND
0x311 EQ
0x312 PUSH2 0x31a
0x315 JUMPI
---
0x2ff: JUMPDEST 
0x300: V273 = 0x1
0x302: V274 = S[0x1]
0x303: V275 = CALLER
0x304: V276 = 0x1
0x306: V277 = 0xa0
0x308: V278 = 0x2
0x30a: V279 = EXP 0x2 0xa0
0x30b: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30e: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x310: V282 = AND V274 0xffffffffffffffffffffffffffffffffffffffff
0x311: V283 = EQ V282 V281
0x312: V284 = 0x31a
0x315: JUMPI 0x31a V283
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0x316
[0x316:0x319]
---
Predecessors: [0x2ff]
Successors: []
---
0x316 PUSH1 0x0
0x318 DUP1
0x319 REVERT
---
0x316: V285 = 0x0
0x319: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0x31a
[0x31a:0x323]
---
Predecessors: [0x2ff]
Successors: [0x797]
---
0x31a JUMPDEST
0x31b PUSH2 0x324
0x31e DUP3
0x31f DUP8
0x320 PUSH2 0x797
0x323 JUMP
---
0x31a: JUMPDEST 
0x31b: V286 = 0x324
0x320: V287 = 0x797
0x323: JUMP 0x797
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x324, S1, S5]
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074, 0x324, V83, V69]

================================

Block 0x324
[0x324:0x386]
---
Predecessors: [0x80b]
Successors: [0x812]
---
0x324 JUMPDEST
0x325 PUSH1 0xa0
0x327 PUSH1 0x40
0x329 MLOAD
0x32a SWAP1
0x32b DUP2
0x32c ADD
0x32d PUSH1 0x40
0x32f MSTORE
0x330 DUP1
0x331 DUP4
0x332 PUSH1 0x1
0x334 PUSH1 0xa0
0x336 PUSH1 0x2
0x338 EXP
0x339 SUB
0x33a AND
0x33b DUP2
0x33c MSTORE
0x33d PUSH1 0x20
0x33f ADD
0x340 DUP7
0x341 PUSH1 0x1
0x343 PUSH1 0x80
0x345 PUSH1 0x2
0x347 EXP
0x348 SUB
0x349 AND
0x34a DUP2
0x34b MSTORE
0x34c PUSH1 0x20
0x34e ADD
0x34f DUP6
0x350 PUSH1 0x1
0x352 PUSH1 0x80
0x354 PUSH1 0x2
0x356 EXP
0x357 SUB
0x358 AND
0x359 DUP2
0x35a MSTORE
0x35b PUSH1 0x20
0x35d ADD
0x35e DUP5
0x35f PUSH8 0xffffffffffffffff
0x368 AND
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x20
0x36d ADD
0x36e TIMESTAMP
0x36f PUSH8 0xffffffffffffffff
0x378 AND
0x379 DUP2
0x37a MSTORE
0x37b POP
0x37c SWAP1
0x37d POP
0x37e PUSH2 0x387
0x381 DUP7
0x382 DUP3
0x383 PUSH2 0x812
0x386 JUMP
---
0x324: JUMPDEST 
0x325: V288 = 0xa0
0x327: V289 = 0x40
0x329: V290 = M[0x40]
0x32c: V291 = ADD V290 0xa0
0x32d: V292 = 0x40
0x32f: M[0x40] = V291
0x332: V293 = 0x1
0x334: V294 = 0xa0
0x336: V295 = 0x2
0x338: V296 = EXP 0x2 0xa0
0x339: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33a: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x33c: M[V290] = V298
0x33d: V299 = 0x20
0x33f: V300 = ADD 0x20 V290
0x341: V301 = 0x1
0x343: V302 = 0x80
0x345: V303 = 0x2
0x347: V304 = EXP 0x2 0x80
0x348: V305 = SUB 0x100000000000000000000000000000000 0x1
0x349: V306 = AND 0xffffffffffffffffffffffffffffffff S4
0x34b: M[V300] = V306
0x34c: V307 = 0x20
0x34e: V308 = ADD 0x20 V300
0x350: V309 = 0x1
0x352: V310 = 0x80
0x354: V311 = 0x2
0x356: V312 = EXP 0x2 0x80
0x357: V313 = SUB 0x100000000000000000000000000000000 0x1
0x358: V314 = AND 0xffffffffffffffffffffffffffffffff S3
0x35a: M[V308] = V314
0x35b: V315 = 0x20
0x35d: V316 = ADD 0x20 V308
0x35f: V317 = 0xffffffffffffffff
0x368: V318 = AND 0xffffffffffffffff S2
0x36a: M[V316] = V318
0x36b: V319 = 0x20
0x36d: V320 = ADD 0x20 V316
0x36e: V321 = TIMESTAMP
0x36f: V322 = 0xffffffffffffffff
0x378: V323 = AND 0xffffffffffffffff V321
0x37a: M[V320] = V323
0x37e: V324 = 0x387
0x383: V325 = 0x812
0x386: JUMP 0x812
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V290, 0x387, S5, V290]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, V290, 0x387, S5, V290]

================================

Block 0x387
[0x387:0x38e]
---
Predecessors: [0x82e]
Successors: [0xfc]
---
0x387 JUMPDEST
0x388 POP
0x389 POP
0x38a POP
0x38b POP
0x38c POP
0x38d POP
0x38e JUMP
---
0x387: JUMPDEST 
0x38e: JUMP 0xfc
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x38f
[0x38f:0x39a]
---
Predecessors: [0x109, 0xa48]
Successors: [0x114, 0xa53]
---
0x38f JUMPDEST
0x390 PUSH1 0x2
0x392 SLOAD
0x393 PUSH2 0x2710
0x396 SWAP2
0x397 MUL
0x398 DIV
0x399 SWAP1
0x39a JUMP
---
0x38f: JUMPDEST 
0x390: V326 = 0x2
0x392: V327 = S[0x2]
0x393: V328 = 0x2710
0x397: V329 = MUL S0 V327
0x398: V330 = DIV V329 0x2710
0x39a: JUMP {0x114, 0xa53}
---
Entry stack: [V13, 0xfc, V210, V218, S13, {0xfc, 0x6f4}, V210, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x114, 0xa53}, S0]
Stack pops: 2
Stack additions: [V330]
Exit stack: [V13, 0xfc, V210, V218, S13, {0xfc, 0x6f4}, V210, S10, S9, S8, S7, S6, S5, S4, S3, S2, V330]

================================

Block 0x39b
[0x39b:0x3b2]
---
Predecessors: [0x131]
Successors: [0x3b3, 0x3b7]
---
0x39b JUMPDEST
0x39c PUSH1 0x0
0x39e DUP1
0x39f SLOAD
0x3a0 CALLER
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xa0
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 SWAP1
0x3aa DUP2
0x3ab AND
0x3ac SWAP2
0x3ad AND
0x3ae EQ
0x3af PUSH2 0x3b7
0x3b2 JUMPI
---
0x39b: JUMPDEST 
0x39c: V331 = 0x0
0x39f: V332 = S[0x0]
0x3a0: V333 = CALLER
0x3a1: V334 = 0x1
0x3a3: V335 = 0xa0
0x3a5: V336 = 0x2
0x3a7: V337 = EXP 0x2 0xa0
0x3a8: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ab: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x3ad: V340 = AND V332 0xffffffffffffffffffffffffffffffffffffffff
0x3ae: V341 = EQ V340 V339
0x3af: V342 = 0x3b7
0x3b2: JUMPI 0x3b7 V341
---
Entry stack: [V13, 0x139]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x139, 0x0]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x39b]
Successors: []
---
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 REVERT
---
0x3b3: V343 = 0x0
0x3b6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, 0x0]

================================

Block 0x3b7
[0x3b7:0x3ca]
---
Predecessors: [0x39b]
Successors: [0x3cb, 0x3cf]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x0
0x3ba SLOAD
0x3bb PUSH1 0xa0
0x3bd PUSH1 0x2
0x3bf EXP
0x3c0 SWAP1
0x3c1 DIV
0x3c2 PUSH1 0xff
0x3c4 AND
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 PUSH2 0x3cf
0x3ca JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V344 = 0x0
0x3ba: V345 = S[0x0]
0x3bb: V346 = 0xa0
0x3bd: V347 = 0x2
0x3bf: V348 = EXP 0x2 0xa0
0x3c1: V349 = DIV V345 0x10000000000000000000000000000000000000000
0x3c2: V350 = 0xff
0x3c4: V351 = AND 0xff V349
0x3c5: V352 = ISZERO V351
0x3c6: V353 = ISZERO V352
0x3c7: V354 = 0x3cf
0x3ca: JUMPI 0x3cf V353
---
Entry stack: [V13, 0x139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, 0x0]

================================

Block 0x3cb
[0x3cb:0x3ce]
---
Predecessors: [0x3b7]
Successors: []
---
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce REVERT
---
0x3cb: V355 = 0x0
0x3ce: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, 0x0]

================================

Block 0x3cf
[0x3cf:0x41e]
---
Predecessors: [0x3b7]
Successors: [0x139]
---
0x3cf JUMPDEST
0x3d0 PUSH1 0x0
0x3d2 DUP1
0x3d3 SLOAD
0x3d4 PUSH21 0xff0000000000000000000000000000000000000000
0x3ea NOT
0x3eb AND
0x3ec SWAP1
0x3ed SSTORE
0x3ee PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x40f PUSH1 0x40
0x411 MLOAD
0x412 PUSH1 0x40
0x414 MLOAD
0x415 DUP1
0x416 SWAP2
0x417 SUB
0x418 SWAP1
0x419 LOG1
0x41a POP
0x41b PUSH1 0x1
0x41d SWAP1
0x41e JUMP
---
0x3cf: JUMPDEST 
0x3d0: V356 = 0x0
0x3d3: V357 = S[0x0]
0x3d4: V358 = 0xff0000000000000000000000000000000000000000
0x3ea: V359 = NOT 0xff0000000000000000000000000000000000000000
0x3eb: V360 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V357
0x3ed: S[0x0] = V360
0x3ee: V361 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x40f: V362 = 0x40
0x411: V363 = M[0x40]
0x412: V364 = 0x40
0x414: V365 = M[0x40]
0x417: V366 = SUB V363 V365
0x419: LOG V365 V366 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x41b: V367 = 0x1
0x41e: JUMP 0x139
---
Entry stack: [V13, 0x139, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x41f
[0x41f:0x42e]
---
Predecessors: [0x158]
Successors: [0x139]
---
0x41f JUMPDEST
0x420 PUSH1 0x0
0x422 SLOAD
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SWAP1
0x429 DIV
0x42a PUSH1 0xff
0x42c AND
0x42d DUP2
0x42e JUMP
---
0x41f: JUMPDEST 
0x420: V368 = 0x0
0x422: V369 = S[0x0]
0x423: V370 = 0xa0
0x425: V371 = 0x2
0x427: V372 = EXP 0x2 0xa0
0x429: V373 = DIV V369 0x10000000000000000000000000000000000000000
0x42a: V374 = 0xff
0x42c: V375 = AND 0xff V373
0x42e: JUMP 0x139
---
Entry stack: [V13, 0x139]
Stack pops: 1
Stack additions: [S0, V375]
Exit stack: [V13, 0x139, V375]

================================

Block 0x42f
[0x42f:0x44c]
---
Predecessors: [0x16b]
Successors: [0x44d, 0x463]
---
0x42f JUMPDEST
0x430 PUSH1 0x1
0x432 SLOAD
0x433 PUSH1 0x0
0x435 SLOAD
0x436 PUSH1 0x1
0x438 PUSH1 0xa0
0x43a PUSH1 0x2
0x43c EXP
0x43d SUB
0x43e SWAP2
0x43f DUP3
0x440 AND
0x441 SWAP2
0x442 CALLER
0x443 DUP2
0x444 AND
0x445 SWAP2
0x446 AND
0x447 EQ
0x448 DUP1
0x449 PUSH2 0x463
0x44c JUMPI
---
0x42f: JUMPDEST 
0x430: V376 = 0x1
0x432: V377 = S[0x1]
0x433: V378 = 0x0
0x435: V379 = S[0x0]
0x436: V380 = 0x1
0x438: V381 = 0xa0
0x43a: V382 = 0x2
0x43c: V383 = EXP 0x2 0xa0
0x43d: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x440: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x442: V386 = CALLER
0x444: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x446: V388 = AND V379 0xffffffffffffffffffffffffffffffffffffffff
0x447: V389 = EQ V388 V387
0x449: V390 = 0x463
0x44c: JUMPI 0x463 V389
---
Entry stack: [V13, 0xfc]
Stack pops: 0
Stack additions: [V385, V389]
Exit stack: [V13, 0xfc, V385, V389]

================================

Block 0x44d
[0x44d:0x462]
---
Predecessors: [0x42f]
Successors: [0x463]
---
0x44d POP
0x44e DUP1
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 AND
0x458 CALLER
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 AND
0x462 EQ
---
0x44f: V391 = 0x1
0x451: V392 = 0xa0
0x453: V393 = 0x2
0x455: V394 = EXP 0x2 0xa0
0x456: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x458: V397 = CALLER
0x459: V398 = 0x1
0x45b: V399 = 0xa0
0x45d: V400 = 0x2
0x45f: V401 = EXP 0x2 0xa0
0x460: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x462: V404 = EQ V403 V396
---
Entry stack: [V13, 0xfc, V385, V389]
Stack pops: 2
Stack additions: [S1, V404]
Exit stack: [V13, 0xfc, V385, V404]

================================

Block 0x463
[0x463:0x469]
---
Predecessors: [0x42f, 0x44d]
Successors: [0x46a, 0x46e]
---
0x463 JUMPDEST
0x464 ISZERO
0x465 ISZERO
0x466 PUSH2 0x46e
0x469 JUMPI
---
0x463: JUMPDEST 
0x464: V405 = ISZERO S0
0x465: V406 = ISZERO V405
0x466: V407 = 0x46e
0x469: JUMPI 0x46e V406
---
Entry stack: [V13, 0xfc, V385, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfc, V385]

================================

Block 0x46a
[0x46a:0x46d]
---
Predecessors: [0x463]
Successors: []
---
0x46a PUSH1 0x0
0x46c DUP1
0x46d REVERT
---
0x46a: V408 = 0x0
0x46d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V385]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V385]

================================

Block 0x46e
[0x46e:0x4a6]
---
Predecessors: [0x463]
Successors: [0x4a7, 0x4ab]
---
0x46e JUMPDEST
0x46f DUP1
0x470 PUSH1 0x1
0x472 PUSH1 0xa0
0x474 PUSH1 0x2
0x476 EXP
0x477 SUB
0x478 AND
0x479 PUSH2 0x8fc
0x47c ADDRESS
0x47d PUSH1 0x1
0x47f PUSH1 0xa0
0x481 PUSH1 0x2
0x483 EXP
0x484 SUB
0x485 AND
0x486 BALANCE
0x487 SWAP1
0x488 DUP2
0x489 ISZERO
0x48a MUL
0x48b SWAP1
0x48c PUSH1 0x40
0x48e MLOAD
0x48f PUSH1 0x0
0x491 PUSH1 0x40
0x493 MLOAD
0x494 DUP1
0x495 DUP4
0x496 SUB
0x497 DUP2
0x498 DUP6
0x499 DUP9
0x49a DUP9
0x49b CALL
0x49c SWAP4
0x49d POP
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 ISZERO
0x4a2 ISZERO
0x4a3 PUSH2 0x4ab
0x4a6 JUMPI
---
0x46e: JUMPDEST 
0x470: V409 = 0x1
0x472: V410 = 0xa0
0x474: V411 = 0x2
0x476: V412 = EXP 0x2 0xa0
0x477: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x478: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x479: V415 = 0x8fc
0x47c: V416 = ADDRESS
0x47d: V417 = 0x1
0x47f: V418 = 0xa0
0x481: V419 = 0x2
0x483: V420 = EXP 0x2 0xa0
0x484: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x486: V423 = BALANCE V422
0x489: V424 = ISZERO V423
0x48a: V425 = MUL V424 0x8fc
0x48c: V426 = 0x40
0x48e: V427 = M[0x40]
0x48f: V428 = 0x0
0x491: V429 = 0x40
0x493: V430 = M[0x40]
0x496: V431 = SUB V427 V430
0x49b: V432 = CALL V425 V414 V423 V430 V431 V430 0x0
0x4a1: V433 = ISZERO V432
0x4a2: V434 = ISZERO V433
0x4a3: V435 = 0x4ab
0x4a6: JUMPI 0x4ab V434
---
Entry stack: [V13, 0xfc, V385]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xfc, V385]

================================

Block 0x4a7
[0x4a7:0x4aa]
---
Predecessors: [0x46e]
Successors: []
---
0x4a7 PUSH1 0x0
0x4a9 DUP1
0x4aa REVERT
---
0x4a7: V436 = 0x0
0x4aa: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V385]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V385]

================================

Block 0x4ab
[0x4ab:0x4ad]
---
Predecessors: [0x46e, 0x75b]
Successors: [0xfc]
---
0x4ab JUMPDEST
0x4ac POP
0x4ad JUMP
---
0x4ab: JUMPDEST 
0x4ad: JUMP 0xfc
---
Entry stack: [V13, 0xfc, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x4ae
[0x4ae:0x4b6]
---
Predecessors: [0x17e]
Successors: [0x139]
---
0x4ae JUMPDEST
0x4af PUSH1 0x4
0x4b1 SLOAD
0x4b2 PUSH1 0xff
0x4b4 AND
0x4b5 DUP2
0x4b6 JUMP
---
0x4ae: JUMPDEST 
0x4af: V437 = 0x4
0x4b1: V438 = S[0x4]
0x4b2: V439 = 0xff
0x4b4: V440 = AND 0xff V438
0x4b6: JUMP 0x139
---
Entry stack: [V13, 0x139]
Stack pops: 1
Stack additions: [S0, V440]
Exit stack: [V13, 0x139, V440]

================================

Block 0x4b7
[0x4b7:0x4d5]
---
Predecessors: [0x191]
Successors: [0x9ad]
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x0
0x4ba DUP2
0x4bb DUP2
0x4bc MSTORE
0x4bd PUSH1 0x3
0x4bf PUSH1 0x20
0x4c1 MSTORE
0x4c2 PUSH1 0x40
0x4c4 DUP2
0x4c5 SHA3
0x4c6 DUP2
0x4c7 SWAP1
0x4c8 DUP2
0x4c9 SWAP1
0x4ca DUP2
0x4cb SWAP1
0x4cc DUP2
0x4cd SWAP1
0x4ce PUSH2 0x4d6
0x4d1 DUP2
0x4d2 PUSH2 0x9ad
0x4d5 JUMP
---
0x4b7: JUMPDEST 
0x4b8: V441 = 0x0
0x4bc: M[0x0] = V139
0x4bd: V442 = 0x3
0x4bf: V443 = 0x20
0x4c1: M[0x20] = 0x3
0x4c2: V444 = 0x40
0x4c5: V445 = SHA3 0x0 0x40
0x4ce: V446 = 0x4d6
0x4d2: V447 = 0x9ad
0x4d5: JUMP 0x9ad
---
Entry stack: [V13, 0x19c, V139]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, V445, 0x4d6, V445]
Exit stack: [V13, 0x19c, V139, 0x0, 0x0, 0x0, 0x0, 0x0, V445, 0x4d6, V445]

================================

Block 0x4d6
[0x4d6:0x4dc]
---
Predecessors: [0x9ad]
Successors: [0x4dd, 0x4e1]
---
0x4d6 JUMPDEST
0x4d7 ISZERO
0x4d8 ISZERO
0x4d9 PUSH2 0x4e1
0x4dc JUMPI
---
0x4d6: JUMPDEST 
0x4d7: V448 = ISZERO V870
0x4d8: V449 = ISZERO V448
0x4d9: V450 = 0x4e1
0x4dc: JUMPI 0x4e1 V449
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1, V870]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x4dd
[0x4dd:0x4e0]
---
Predecessors: [0x4d6]
Successors: []
---
0x4dd PUSH1 0x0
0x4df DUP1
0x4e0 REVERT
---
0x4dd: V451 = 0x0
0x4e0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4e1
[0x4e1:0x543]
---
Predecessors: [0x4d6]
Successors: [0x19c]
---
0x4e1 JUMPDEST
0x4e2 DUP1
0x4e3 SLOAD
0x4e4 PUSH1 0x1
0x4e6 DUP3
0x4e7 ADD
0x4e8 SLOAD
0x4e9 PUSH1 0x2
0x4eb SWAP1
0x4ec SWAP3
0x4ed ADD
0x4ee SLOAD
0x4ef PUSH1 0x1
0x4f1 PUSH1 0xa0
0x4f3 PUSH1 0x2
0x4f5 EXP
0x4f6 SUB
0x4f7 SWAP1
0x4f8 SWAP2
0x4f9 AND
0x4fa SWAP9
0x4fb PUSH1 0x1
0x4fd PUSH1 0x80
0x4ff PUSH1 0x2
0x501 EXP
0x502 SUB
0x503 DUP1
0x504 DUP5
0x505 AND
0x506 SWAP10
0x507 POP
0x508 PUSH17 0x100000000000000000000000000000000
0x51a SWAP1
0x51b SWAP4
0x51c DIV
0x51d SWAP1
0x51e SWAP3
0x51f AND
0x520 SWAP7
0x521 POP
0x522 PUSH8 0xffffffffffffffff
0x52b DUP1
0x52c DUP3
0x52d AND
0x52e SWAP7
0x52f POP
0x530 PUSH9 0x10000000000000000
0x53a SWAP1
0x53b SWAP2
0x53c DIV
0x53d AND
0x53e SWAP4
0x53f POP
0x540 SWAP2
0x541 POP
0x542 POP
0x543 JUMP
---
0x4e1: JUMPDEST 
0x4e3: V452 = S[S0]
0x4e4: V453 = 0x1
0x4e7: V454 = ADD S0 0x1
0x4e8: V455 = S[V454]
0x4e9: V456 = 0x2
0x4ed: V457 = ADD S0 0x2
0x4ee: V458 = S[V457]
0x4ef: V459 = 0x1
0x4f1: V460 = 0xa0
0x4f3: V461 = 0x2
0x4f5: V462 = EXP 0x2 0xa0
0x4f6: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f9: V464 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V465 = 0x1
0x4fd: V466 = 0x80
0x4ff: V467 = 0x2
0x501: V468 = EXP 0x2 0x80
0x502: V469 = SUB 0x100000000000000000000000000000000 0x1
0x505: V470 = AND V455 0xffffffffffffffffffffffffffffffff
0x508: V471 = 0x100000000000000000000000000000000
0x51c: V472 = DIV V455 0x100000000000000000000000000000000
0x51f: V473 = AND 0xffffffffffffffffffffffffffffffff V472
0x522: V474 = 0xffffffffffffffff
0x52d: V475 = AND V458 0xffffffffffffffff
0x530: V476 = 0x10000000000000000
0x53c: V477 = DIV V458 0x10000000000000000
0x53d: V478 = AND V477 0xffffffffffffffff
0x543: JUMP S7
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [V464, V470, V473, V475, V478]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, V464, V470, V473, V475, V478]

================================

Block 0x544
[0x544:0x549]
---
Predecessors: [0x1e2]
Successors: [0x114]
---
0x544 JUMPDEST
0x545 PUSH1 0x2
0x547 SLOAD
0x548 DUP2
0x549 JUMP
---
0x544: JUMPDEST 
0x545: V479 = 0x2
0x547: V480 = S[0x2]
0x549: JUMP 0x114
---
Entry stack: [V13, 0x114]
Stack pops: 1
Stack additions: [S0, V480]
Exit stack: [V13, 0x114, V480]

================================

Block 0x54a
[0x54a:0x561]
---
Predecessors: [0x1f5]
Successors: [0x562, 0x566]
---
0x54a JUMPDEST
0x54b PUSH1 0x0
0x54d DUP1
0x54e SLOAD
0x54f CALLER
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 SWAP1
0x559 DUP2
0x55a AND
0x55b SWAP2
0x55c AND
0x55d EQ
0x55e PUSH2 0x566
0x561 JUMPI
---
0x54a: JUMPDEST 
0x54b: V481 = 0x0
0x54e: V482 = S[0x0]
0x54f: V483 = CALLER
0x550: V484 = 0x1
0x552: V485 = 0xa0
0x554: V486 = 0x2
0x556: V487 = EXP 0x2 0xa0
0x557: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55a: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x55c: V490 = AND V482 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V491 = EQ V490 V489
0x55e: V492 = 0x566
0x561: JUMPI 0x566 V491
---
Entry stack: [V13, 0x139]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x139, 0x0]

================================

Block 0x562
[0x562:0x565]
---
Predecessors: [0x54a]
Successors: []
---
0x562 PUSH1 0x0
0x564 DUP1
0x565 REVERT
---
0x562: V493 = 0x0
0x565: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, 0x0]

================================

Block 0x566
[0x566:0x578]
---
Predecessors: [0x54a]
Successors: [0x579, 0x57d]
---
0x566 JUMPDEST
0x567 PUSH1 0x0
0x569 SLOAD
0x56a PUSH1 0xa0
0x56c PUSH1 0x2
0x56e EXP
0x56f SWAP1
0x570 DIV
0x571 PUSH1 0xff
0x573 AND
0x574 ISZERO
0x575 PUSH2 0x57d
0x578 JUMPI
---
0x566: JUMPDEST 
0x567: V494 = 0x0
0x569: V495 = S[0x0]
0x56a: V496 = 0xa0
0x56c: V497 = 0x2
0x56e: V498 = EXP 0x2 0xa0
0x570: V499 = DIV V495 0x10000000000000000000000000000000000000000
0x571: V500 = 0xff
0x573: V501 = AND 0xff V499
0x574: V502 = ISZERO V501
0x575: V503 = 0x57d
0x578: JUMPI 0x57d V502
---
Entry stack: [V13, 0x139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, 0x0]

================================

Block 0x579
[0x579:0x57c]
---
Predecessors: [0x566]
Successors: []
---
0x579 PUSH1 0x0
0x57b DUP1
0x57c REVERT
---
0x579: V504 = 0x0
0x57c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, 0x0]

================================

Block 0x57d
[0x57d:0x5d2]
---
Predecessors: [0x566]
Successors: [0x139]
---
0x57d JUMPDEST
0x57e PUSH1 0x0
0x580 DUP1
0x581 SLOAD
0x582 PUSH21 0xff0000000000000000000000000000000000000000
0x598 NOT
0x599 AND
0x59a PUSH1 0xa0
0x59c PUSH1 0x2
0x59e EXP
0x59f OR
0x5a0 SWAP1
0x5a1 SSTORE
0x5a2 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x5c3 PUSH1 0x40
0x5c5 MLOAD
0x5c6 PUSH1 0x40
0x5c8 MLOAD
0x5c9 DUP1
0x5ca SWAP2
0x5cb SUB
0x5cc SWAP1
0x5cd LOG1
0x5ce POP
0x5cf PUSH1 0x1
0x5d1 SWAP1
0x5d2 JUMP
---
0x57d: JUMPDEST 
0x57e: V505 = 0x0
0x581: V506 = S[0x0]
0x582: V507 = 0xff0000000000000000000000000000000000000000
0x598: V508 = NOT 0xff0000000000000000000000000000000000000000
0x599: V509 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V506
0x59a: V510 = 0xa0
0x59c: V511 = 0x2
0x59e: V512 = EXP 0x2 0xa0
0x59f: V513 = OR 0x10000000000000000000000000000000000000000 V509
0x5a1: S[0x0] = V513
0x5a2: V514 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x5c3: V515 = 0x40
0x5c5: V516 = M[0x40]
0x5c6: V517 = 0x40
0x5c8: V518 = M[0x40]
0x5cb: V519 = SUB V516 V518
0x5cd: LOG V518 V519 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x5cf: V520 = 0x1
0x5d2: JUMP 0x139
---
Entry stack: [V13, 0x139, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x5d3
[0x5d3:0x5e7]
---
Predecessors: [0x208]
Successors: [0x5e8, 0x5ec]
---
0x5d3 JUMPDEST
0x5d4 PUSH1 0x0
0x5d6 DUP1
0x5d7 SLOAD
0x5d8 PUSH1 0xa0
0x5da PUSH1 0x2
0x5dc EXP
0x5dd SWAP1
0x5de DIV
0x5df PUSH1 0xff
0x5e1 AND
0x5e2 ISZERO
0x5e3 ISZERO
0x5e4 PUSH2 0x5ec
0x5e7 JUMPI
---
0x5d3: JUMPDEST 
0x5d4: V521 = 0x0
0x5d7: V522 = S[0x0]
0x5d8: V523 = 0xa0
0x5da: V524 = 0x2
0x5dc: V525 = EXP 0x2 0xa0
0x5de: V526 = DIV V522 0x10000000000000000000000000000000000000000
0x5df: V527 = 0xff
0x5e1: V528 = AND 0xff V526
0x5e2: V529 = ISZERO V528
0x5e3: V530 = ISZERO V529
0x5e4: V531 = 0x5ec
0x5e7: JUMPI 0x5ec V530
---
Entry stack: [V13, 0xfc, V179]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xfc, V179, 0x0]

================================

Block 0x5e8
[0x5e8:0x5eb]
---
Predecessors: [0x5d3]
Successors: []
---
0x5e8 PUSH1 0x0
0x5ea DUP1
0x5eb REVERT
---
0x5e8: V532 = 0x0
0x5eb: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V179, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V179, 0x0]

================================

Block 0x5ec
[0x5ec:0x602]
---
Predecessors: [0x5d3]
Successors: [0x603, 0x607]
---
0x5ec JUMPDEST
0x5ed PUSH1 0x0
0x5ef SLOAD
0x5f0 CALLER
0x5f1 PUSH1 0x1
0x5f3 PUSH1 0xa0
0x5f5 PUSH1 0x2
0x5f7 EXP
0x5f8 SUB
0x5f9 SWAP1
0x5fa DUP2
0x5fb AND
0x5fc SWAP2
0x5fd AND
0x5fe EQ
0x5ff PUSH2 0x607
0x602 JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V533 = 0x0
0x5ef: V534 = S[0x0]
0x5f0: V535 = CALLER
0x5f1: V536 = 0x1
0x5f3: V537 = 0xa0
0x5f5: V538 = 0x2
0x5f7: V539 = EXP 0x2 0xa0
0x5f8: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fb: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V535
0x5fd: V542 = AND V534 0xffffffffffffffffffffffffffffffffffffffff
0x5fe: V543 = EQ V542 V541
0x5ff: V544 = 0x607
0x602: JUMPI 0x607 V543
---
Entry stack: [V13, 0xfc, V179, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V179, 0x0]

================================

Block 0x603
[0x603:0x606]
---
Predecessors: [0x5ec]
Successors: []
---
0x603 PUSH1 0x0
0x605 DUP1
0x606 REVERT
---
0x603: V545 = 0x0
0x606: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V179, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V179, 0x0]

================================

Block 0x607
[0x607:0x61e]
---
Predecessors: [0x5ec]
Successors: [0x9ad]
---
0x607 JUMPDEST
0x608 POP
0x609 PUSH1 0x0
0x60b DUP2
0x60c DUP2
0x60d MSTORE
0x60e PUSH1 0x3
0x610 PUSH1 0x20
0x612 MSTORE
0x613 PUSH1 0x40
0x615 SWAP1
0x616 SHA3
0x617 PUSH2 0x61f
0x61a DUP2
0x61b PUSH2 0x9ad
0x61e JUMP
---
0x607: JUMPDEST 
0x609: V546 = 0x0
0x60d: M[0x0] = V179
0x60e: V547 = 0x3
0x610: V548 = 0x20
0x612: M[0x20] = 0x3
0x613: V549 = 0x40
0x616: V550 = SHA3 0x0 0x40
0x617: V551 = 0x61f
0x61b: V552 = 0x9ad
0x61e: JUMP 0x9ad
---
Entry stack: [V13, 0xfc, V179, 0x0]
Stack pops: 2
Stack additions: [S1, V550, 0x61f, V550]
Exit stack: [V13, 0xfc, V179, V550, 0x61f, V550]

================================

Block 0x61f
[0x61f:0x625]
---
Predecessors: [0x9ad]
Successors: [0x626, 0x62a]
---
0x61f JUMPDEST
0x620 ISZERO
0x621 ISZERO
0x622 PUSH2 0x62a
0x625 JUMPI
---
0x61f: JUMPDEST 
0x620: V553 = ISZERO V870
0x621: V554 = ISZERO V553
0x622: V555 = 0x62a
0x625: JUMPI 0x62a V554
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1, V870]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x626
[0x626:0x629]
---
Predecessors: [0x61f]
Successors: []
---
0x626 PUSH1 0x0
0x628 DUP1
0x629 REVERT
---
0x626: V556 = 0x0
0x629: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x62a
[0x62a:0x63f]
---
Predecessors: [0x61f]
Successors: [0x9ce]
---
0x62a JUMPDEST
0x62b DUP1
0x62c SLOAD
0x62d PUSH2 0x640
0x630 SWAP1
0x631 DUP4
0x632 SWAP1
0x633 PUSH1 0x1
0x635 PUSH1 0xa0
0x637 PUSH1 0x2
0x639 EXP
0x63a SUB
0x63b AND
0x63c PUSH2 0x9ce
0x63f JUMP
---
0x62a: JUMPDEST 
0x62c: V557 = S[S0]
0x62d: V558 = 0x640
0x633: V559 = 0x1
0x635: V560 = 0xa0
0x637: V561 = 0x2
0x639: V562 = EXP 0x2 0xa0
0x63a: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63b: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x63c: V565 = 0x9ce
0x63f: JUMP 0x9ce
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x640, S1, V564]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x640, S1, V564]

================================

Block 0x640
[0x640:0x643]
---
Predecessors: [0x9e1]
Successors: [0xfc]
---
0x640 JUMPDEST
0x641 POP
0x642 POP
0x643 JUMP
---
0x640: JUMPDEST 
0x643: JUMP S2
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S3]

================================

Block 0x644
[0x644:0x652]
---
Predecessors: [0x21e]
Successors: [0x226]
---
0x644 JUMPDEST
0x645 PUSH1 0x0
0x647 SLOAD
0x648 PUSH1 0x1
0x64a PUSH1 0xa0
0x64c PUSH1 0x2
0x64e EXP
0x64f SUB
0x650 AND
0x651 DUP2
0x652 JUMP
---
0x644: JUMPDEST 
0x645: V566 = 0x0
0x647: V567 = S[0x0]
0x648: V568 = 0x1
0x64a: V569 = 0xa0
0x64c: V570 = 0x2
0x64e: V571 = EXP 0x2 0xa0
0x64f: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x650: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x652: JUMP 0x226
---
Entry stack: [V13, 0x226]
Stack pops: 1
Stack additions: [S0, V573]
Exit stack: [V13, 0x226, V573]

================================

Block 0x653
[0x653:0x65e]
---
Predecessors: [0x24d]
Successors: [0x65f, 0x663]
---
0x653 JUMPDEST
0x654 PUSH1 0x0
0x656 DUP1
0x657 PUSH1 0x1
0x659 DUP4
0x65a GT
0x65b PUSH2 0x663
0x65e JUMPI
---
0x653: JUMPDEST 
0x654: V574 = 0x0
0x657: V575 = 0x1
0x65a: V576 = GT V206 0x1
0x65b: V577 = 0x663
0x65e: JUMPI 0x663 V576
---
Entry stack: [V13, 0xfc, V206]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V13, 0xfc, V206, 0x0, 0x0]

================================

Block 0x65f
[0x65f:0x662]
---
Predecessors: [0x653]
Successors: []
---
0x65f PUSH1 0x0
0x661 DUP1
0x662 REVERT
---
0x65f: V578 = 0x0
0x662: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V206, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V206, 0x0, 0x0]

================================

Block 0x663
[0x663:0x67b]
---
Predecessors: [0x653]
Successors: [0x9ad]
---
0x663 JUMPDEST
0x664 PUSH1 0x0
0x666 DUP4
0x667 DUP2
0x668 MSTORE
0x669 PUSH1 0x3
0x66b PUSH1 0x20
0x66d MSTORE
0x66e PUSH1 0x40
0x670 SWAP1
0x671 SHA3
0x672 SWAP2
0x673 POP
0x674 PUSH2 0x67c
0x677 DUP3
0x678 PUSH2 0x9ad
0x67b JUMP
---
0x663: JUMPDEST 
0x664: V579 = 0x0
0x668: M[0x0] = V206
0x669: V580 = 0x3
0x66b: V581 = 0x20
0x66d: M[0x20] = 0x3
0x66e: V582 = 0x40
0x671: V583 = SHA3 0x0 0x40
0x674: V584 = 0x67c
0x678: V585 = 0x9ad
0x67b: JUMP 0x9ad
---
Entry stack: [V13, 0xfc, V206, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, V583, S0, 0x67c, V583]
Exit stack: [V13, 0xfc, V206, V583, 0x0, 0x67c, V583]

================================

Block 0x67c
[0x67c:0x682]
---
Predecessors: [0x9ad]
Successors: [0x683, 0x687]
---
0x67c JUMPDEST
0x67d ISZERO
0x67e ISZERO
0x67f PUSH2 0x687
0x682 JUMPI
---
0x67c: JUMPDEST 
0x67d: V586 = ISZERO V870
0x67e: V587 = ISZERO V586
0x67f: V588 = 0x687
0x682: JUMPI 0x687 V587
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1, V870]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x683
[0x683:0x686]
---
Predecessors: [0x67c]
Successors: []
---
0x683 PUSH1 0x0
0x685 DUP1
0x686 REVERT
---
0x683: V589 = 0x0
0x686: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x687
[0x687:0x69e]
---
Predecessors: [0x67c]
Successors: [0x69f, 0x6a3]
---
0x687 JUMPDEST
0x688 POP
0x689 DUP1
0x68a SLOAD
0x68b PUSH1 0x1
0x68d PUSH1 0xa0
0x68f PUSH1 0x2
0x691 EXP
0x692 SUB
0x693 SWAP1
0x694 DUP2
0x695 AND
0x696 SWAP1
0x697 CALLER
0x698 AND
0x699 DUP2
0x69a EQ
0x69b PUSH2 0x6a3
0x69e JUMPI
---
0x687: JUMPDEST 
0x68a: V590 = S[S1]
0x68b: V591 = 0x1
0x68d: V592 = 0xa0
0x68f: V593 = 0x2
0x691: V594 = EXP 0x2 0xa0
0x692: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x695: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x697: V597 = CALLER
0x698: V598 = AND V597 0xffffffffffffffffffffffffffffffffffffffff
0x69a: V599 = EQ V596 V598
0x69b: V600 = 0x6a3
0x69e: JUMPI 0x6a3 V599
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V596]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, V596]

================================

Block 0x69f
[0x69f:0x6a2]
---
Predecessors: [0x687]
Successors: []
---
0x69f PUSH1 0x0
0x6a1 DUP1
0x6a2 REVERT
---
0x69f: V601 = 0x0
0x6a2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, V596]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, V596]

================================

Block 0x6a3
[0x6a3:0x6ac]
---
Predecessors: [0x687]
Successors: [0x9ce]
---
0x6a3 JUMPDEST
0x6a4 PUSH2 0x6ad
0x6a7 DUP4
0x6a8 DUP3
0x6a9 PUSH2 0x9ce
0x6ac JUMP
---
0x6a3: JUMPDEST 
0x6a4: V602 = 0x6ad
0x6a9: V603 = 0x9ce
0x6ac: JUMP 0x9ce
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, V596]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x6ad, S2, S0]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, V596, 0x6ad, S2, V596]

================================

Block 0x6ad
[0x6ad:0x6b1]
---
Predecessors: [0x80b, 0x9e1]
Successors: [0xfc]
---
0x6ad JUMPDEST
0x6ae POP
0x6af POP
0x6b0 POP
0x6b1 JUMP
---
0x6ad: JUMPDEST 
0x6b1: JUMP S3
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S6, S5, S4]

================================

Block 0x6b2
[0x6b2:0x6cb]
---
Predecessors: [0x258]
Successors: [0x6cc, 0x6d0]
---
0x6b2 JUMPDEST
0x6b3 PUSH1 0x1
0x6b5 SLOAD
0x6b6 PUSH1 0x0
0x6b8 SWAP1
0x6b9 CALLER
0x6ba PUSH1 0x1
0x6bc PUSH1 0xa0
0x6be PUSH1 0x2
0x6c0 EXP
0x6c1 SUB
0x6c2 SWAP1
0x6c3 DUP2
0x6c4 AND
0x6c5 SWAP2
0x6c6 AND
0x6c7 EQ
0x6c8 PUSH2 0x6d0
0x6cb JUMPI
---
0x6b2: JUMPDEST 
0x6b3: V604 = 0x1
0x6b5: V605 = S[0x1]
0x6b6: V606 = 0x0
0x6b9: V607 = CALLER
0x6ba: V608 = 0x1
0x6bc: V609 = 0xa0
0x6be: V610 = 0x2
0x6c0: V611 = EXP 0x2 0xa0
0x6c1: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c4: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x6c6: V614 = AND V605 0xffffffffffffffffffffffffffffffffffffffff
0x6c7: V615 = EQ V614 V613
0x6c8: V616 = 0x6d0
0x6cb: JUMPI 0x6d0 V615
---
Entry stack: [V13, 0xfc, V210, V218]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xfc, V210, V218, 0x0]

================================

Block 0x6cc
[0x6cc:0x6cf]
---
Predecessors: [0x6b2]
Successors: []
---
0x6cc PUSH1 0x0
0x6ce DUP1
0x6cf REVERT
---
0x6cc: V617 = 0x0
0x6cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, 0x0]

================================

Block 0x6d0
[0x6d0:0x6f3]
---
Predecessors: [0x6b2]
Successors: [0xa18]
---
0x6d0 JUMPDEST
0x6d1 POP
0x6d2 PUSH1 0x0
0x6d4 DUP3
0x6d5 DUP2
0x6d6 MSTORE
0x6d7 PUSH1 0x3
0x6d9 PUSH1 0x20
0x6db MSTORE
0x6dc PUSH1 0x40
0x6de SWAP1
0x6df SHA3
0x6e0 SLOAD
0x6e1 PUSH1 0x1
0x6e3 PUSH1 0xa0
0x6e5 PUSH1 0x2
0x6e7 EXP
0x6e8 SUB
0x6e9 AND
0x6ea PUSH2 0x6f4
0x6ed DUP4
0x6ee CALLVALUE
0x6ef DUP5
0x6f0 PUSH2 0xa18
0x6f3 JUMP
---
0x6d0: JUMPDEST 
0x6d2: V618 = 0x0
0x6d6: M[0x0] = V210
0x6d7: V619 = 0x3
0x6d9: V620 = 0x20
0x6db: M[0x20] = 0x3
0x6dc: V621 = 0x40
0x6df: V622 = SHA3 0x0 0x40
0x6e0: V623 = S[V622]
0x6e1: V624 = 0x1
0x6e3: V625 = 0xa0
0x6e5: V626 = 0x2
0x6e7: V627 = EXP 0x2 0xa0
0x6e8: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e9: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x6ea: V630 = 0x6f4
0x6ee: V631 = CALLVALUE
0x6f0: V632 = 0xa18
0x6f3: JUMP 0xa18
---
Entry stack: [V13, 0xfc, V210, V218, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V629, 0x6f4, S2, V631, S1]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, V631, V218]

================================

Block 0x6f4
[0x6f4:0x6fe]
---
Predecessors: [0xadb]
Successors: [0xb39]
---
0x6f4 JUMPDEST
0x6f5 POP
0x6f6 PUSH2 0x6ad
0x6f9 DUP2
0x6fa DUP5
0x6fb PUSH2 0xb39
0x6fe JUMP
---
0x6f4: JUMPDEST 
0x6f6: V633 = 0x6ad
0x6fb: V634 = 0xb39
0x6fe: JUMP 0xb39
---
Entry stack: [V13, 0xfc, V210, V218, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x6ad, S1, S3]
Exit stack: [V13, 0xfc, V210, V218, S1, 0x6ad, S1, V210]

================================

Block 0x6ff
[0x6ff:0x715]
---
Predecessors: [0x27a]
Successors: [0x9ad]
---
0x6ff JUMPDEST
0x700 PUSH1 0x0
0x702 DUP2
0x703 DUP2
0x704 MSTORE
0x705 PUSH1 0x3
0x707 PUSH1 0x20
0x709 MSTORE
0x70a PUSH1 0x40
0x70c DUP2
0x70d SHA3
0x70e PUSH2 0x716
0x711 DUP2
0x712 PUSH2 0x9ad
0x715 JUMP
---
0x6ff: JUMPDEST 
0x700: V635 = 0x0
0x704: M[0x0] = V226
0x705: V636 = 0x3
0x707: V637 = 0x20
0x709: M[0x20] = 0x3
0x70a: V638 = 0x40
0x70d: V639 = SHA3 0x0 0x40
0x70e: V640 = 0x716
0x712: V641 = 0x9ad
0x715: JUMP 0x9ad
---
Entry stack: [V13, 0x114, V226]
Stack pops: 1
Stack additions: [S0, 0x0, V639, 0x716, V639]
Exit stack: [V13, 0x114, V226, 0x0, V639, 0x716, V639]

================================

Block 0x716
[0x716:0x71c]
---
Predecessors: [0x9ad]
Successors: [0x71d, 0x721]
---
0x716 JUMPDEST
0x717 ISZERO
0x718 ISZERO
0x719 PUSH2 0x721
0x71c JUMPI
---
0x716: JUMPDEST 
0x717: V642 = ISZERO V870
0x718: V643 = ISZERO V642
0x719: V644 = 0x721
0x71c: JUMPI 0x721 V643
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1, V870]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x71d
[0x71d:0x720]
---
Predecessors: [0x716]
Successors: []
---
0x71d PUSH1 0x0
0x71f DUP1
0x720 REVERT
---
0x71d: V645 = 0x0
0x720: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x721
[0x721:0x729]
---
Predecessors: [0x716]
Successors: [0xb8f]
---
0x721 JUMPDEST
0x722 PUSH2 0x72a
0x725 DUP2
0x726 PUSH2 0xb8f
0x729 JUMP
---
0x721: JUMPDEST 
0x722: V646 = 0x72a
0x726: V647 = 0xb8f
0x729: JUMP 0xb8f
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x72a, S0]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x72a, S0]

================================

Block 0x72a
[0x72a:0x730]
---
Predecessors: [0x72a, 0xc95]
Successors: [0x114, 0x72a, 0xa48]
---
0x72a JUMPDEST
0x72b SWAP4
0x72c SWAP3
0x72d POP
0x72e POP
0x72f POP
0x730 JUMP
---
0x72a: JUMPDEST 
0x730: JUMP S4
---
Entry stack: [V13, 0xfc, V210, V218, S16, {0xfc, 0x6f4}, V210, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0xfc, V210, V218, S16, {0xfc, 0x6f4}, V210, S13, S12, S11, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0x731
[0x731:0x73f]
---
Predecessors: [0x290]
Successors: [0x226]
---
0x731 JUMPDEST
0x732 PUSH1 0x1
0x734 SLOAD
0x735 PUSH1 0x1
0x737 PUSH1 0xa0
0x739 PUSH1 0x2
0x73b EXP
0x73c SUB
0x73d AND
0x73e DUP2
0x73f JUMP
---
0x731: JUMPDEST 
0x732: V648 = 0x1
0x734: V649 = S[0x1]
0x735: V650 = 0x1
0x737: V651 = 0xa0
0x739: V652 = 0x2
0x73b: V653 = EXP 0x2 0xa0
0x73c: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73d: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x73f: JUMP 0x226
---
Entry stack: [V13, 0x226]
Stack pops: 1
Stack additions: [S0, V655]
Exit stack: [V13, 0x226, V655]

================================

Block 0x740
[0x740:0x756]
---
Predecessors: [0x2a3]
Successors: [0x757, 0x75b]
---
0x740 JUMPDEST
0x741 PUSH1 0x0
0x743 SLOAD
0x744 CALLER
0x745 PUSH1 0x1
0x747 PUSH1 0xa0
0x749 PUSH1 0x2
0x74b EXP
0x74c SUB
0x74d SWAP1
0x74e DUP2
0x74f AND
0x750 SWAP2
0x751 AND
0x752 EQ
0x753 PUSH2 0x75b
0x756 JUMPI
---
0x740: JUMPDEST 
0x741: V656 = 0x0
0x743: V657 = S[0x0]
0x744: V658 = CALLER
0x745: V659 = 0x1
0x747: V660 = 0xa0
0x749: V661 = 0x2
0x74b: V662 = EXP 0x2 0xa0
0x74c: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74f: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x751: V665 = AND V657 0xffffffffffffffffffffffffffffffffffffffff
0x752: V666 = EQ V665 V664
0x753: V667 = 0x75b
0x756: JUMPI 0x75b V666
---
Entry stack: [V13, 0xfc, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V246]

================================

Block 0x757
[0x757:0x75a]
---
Predecessors: [0x740]
Successors: []
---
0x757 PUSH1 0x0
0x759 DUP1
0x75a REVERT
---
0x757: V668 = 0x0
0x75a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V246]

================================

Block 0x75b
[0x75b:0x76a]
---
Predecessors: [0x740]
Successors: [0x4ab, 0x76b]
---
0x75b JUMPDEST
0x75c PUSH1 0x1
0x75e PUSH1 0xa0
0x760 PUSH1 0x2
0x762 EXP
0x763 SUB
0x764 DUP2
0x765 AND
0x766 ISZERO
0x767 PUSH2 0x4ab
0x76a JUMPI
---
0x75b: JUMPDEST 
0x75c: V669 = 0x1
0x75e: V670 = 0xa0
0x760: V671 = 0x2
0x762: V672 = EXP 0x2 0xa0
0x763: V673 = SUB 0x10000000000000000000000000000000000000000 0x1
0x765: V674 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x766: V675 = ISZERO V674
0x767: V676 = 0x4ab
0x76a: JUMPI 0x4ab V675
---
Entry stack: [V13, 0xfc, V246]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xfc, V246]

================================

Block 0x76b
[0x76b:0x796]
---
Predecessors: [0x75b]
Successors: [0xfc]
---
0x76b PUSH1 0x0
0x76d DUP1
0x76e SLOAD
0x76f PUSH1 0x1
0x771 PUSH1 0xa0
0x773 PUSH1 0x2
0x775 EXP
0x776 SUB
0x777 DUP4
0x778 AND
0x779 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78e NOT
0x78f SWAP1
0x790 SWAP2
0x791 AND
0x792 OR
0x793 SWAP1
0x794 SSTORE
0x795 POP
0x796 JUMP
---
0x76b: V677 = 0x0
0x76e: V678 = S[0x0]
0x76f: V679 = 0x1
0x771: V680 = 0xa0
0x773: V681 = 0x2
0x775: V682 = EXP 0x2 0xa0
0x776: V683 = SUB 0x10000000000000000000000000000000000000000 0x1
0x778: V684 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x779: V685 = 0xffffffffffffffffffffffffffffffffffffffff
0x78e: V686 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x791: V687 = AND V678 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x792: V688 = OR V687 V684
0x794: S[0x0] = V688
0x796: JUMP 0xfc
---
Entry stack: [V13, 0xfc, V246]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x797
[0x797:0x7f5]
---
Predecessors: [0x31a]
Successors: [0x7f6, 0x7fa]
---
0x797 JUMPDEST
0x798 PUSH1 0x1
0x79a SLOAD
0x79b PUSH1 0x1
0x79d PUSH1 0xa0
0x79f PUSH1 0x2
0x7a1 EXP
0x7a2 SUB
0x7a3 AND
0x7a4 PUSH4 0x23b872dd
0x7a9 DUP4
0x7aa ADDRESS
0x7ab DUP5
0x7ac PUSH1 0x40
0x7ae MLOAD
0x7af PUSH1 0xe0
0x7b1 PUSH1 0x2
0x7b3 EXP
0x7b4 PUSH4 0xffffffff
0x7b9 DUP7
0x7ba AND
0x7bb MUL
0x7bc DUP2
0x7bd MSTORE
0x7be PUSH1 0x1
0x7c0 PUSH1 0xa0
0x7c2 PUSH1 0x2
0x7c4 EXP
0x7c5 SUB
0x7c6 SWAP4
0x7c7 DUP5
0x7c8 AND
0x7c9 PUSH1 0x4
0x7cb DUP3
0x7cc ADD
0x7cd MSTORE
0x7ce SWAP2
0x7cf SWAP1
0x7d0 SWAP3
0x7d1 AND
0x7d2 PUSH1 0x24
0x7d4 DUP3
0x7d5 ADD
0x7d6 MSTORE
0x7d7 PUSH1 0x44
0x7d9 DUP2
0x7da ADD
0x7db SWAP2
0x7dc SWAP1
0x7dd SWAP2
0x7de MSTORE
0x7df PUSH1 0x64
0x7e1 ADD
0x7e2 PUSH1 0x0
0x7e4 PUSH1 0x40
0x7e6 MLOAD
0x7e7 DUP1
0x7e8 DUP4
0x7e9 SUB
0x7ea DUP2
0x7eb PUSH1 0x0
0x7ed DUP8
0x7ee DUP1
0x7ef EXTCODESIZE
0x7f0 ISZERO
0x7f1 ISZERO
0x7f2 PUSH2 0x7fa
0x7f5 JUMPI
---
0x797: JUMPDEST 
0x798: V689 = 0x1
0x79a: V690 = S[0x1]
0x79b: V691 = 0x1
0x79d: V692 = 0xa0
0x79f: V693 = 0x2
0x7a1: V694 = EXP 0x2 0xa0
0x7a2: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a3: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0x7a4: V697 = 0x23b872dd
0x7aa: V698 = ADDRESS
0x7ac: V699 = 0x40
0x7ae: V700 = M[0x40]
0x7af: V701 = 0xe0
0x7b1: V702 = 0x2
0x7b3: V703 = EXP 0x2 0xe0
0x7b4: V704 = 0xffffffff
0x7ba: V705 = AND 0x23b872dd 0xffffffff
0x7bb: V706 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x7bd: M[V700] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x7be: V707 = 0x1
0x7c0: V708 = 0xa0
0x7c2: V709 = 0x2
0x7c4: V710 = EXP 0x2 0xa0
0x7c5: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c8: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x7c9: V713 = 0x4
0x7cc: V714 = ADD V700 0x4
0x7cd: M[V714] = V712
0x7d1: V715 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0x7d2: V716 = 0x24
0x7d5: V717 = ADD V700 0x24
0x7d6: M[V717] = V715
0x7d7: V718 = 0x44
0x7da: V719 = ADD V700 0x44
0x7de: M[V719] = V69
0x7df: V720 = 0x64
0x7e1: V721 = ADD 0x64 V700
0x7e2: V722 = 0x0
0x7e4: V723 = 0x40
0x7e6: V724 = M[0x40]
0x7e9: V725 = SUB V721 V724
0x7eb: V726 = 0x0
0x7ef: V727 = EXTCODESIZE V696
0x7f0: V728 = ISZERO V727
0x7f1: V729 = ISZERO V728
0x7f2: V730 = 0x7fa
0x7f5: JUMPI 0x7fa V729
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074, 0x324, V83, V69]
Stack pops: 2
Stack additions: [S1, S0, V696, 0x23b872dd, V721, 0x0, V724, V725, V724, 0x0, V696]
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074, 0x324, V83, V69, V696, 0x23b872dd, V721, 0x0, V724, V725, V724, 0x0, V696]

================================

Block 0x7f6
[0x7f6:0x7f9]
---
Predecessors: [0x797]
Successors: []
---
0x7f6 PUSH1 0x0
0x7f8 DUP1
0x7f9 REVERT
---
0x7f6: V731 = 0x0
0x7f9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074, 0x324, V83, V69, V696, 0x23b872dd, V721, 0x0, V724, V725, V724, 0x0, V696]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074, 0x324, V83, V69, V696, 0x23b872dd, V721, 0x0, V724, V725, V724, 0x0, V696]

================================

Block 0x7fa
[0x7fa:0x806]
---
Predecessors: [0x797, 0xb39]
Successors: [0x807, 0x80b]
---
0x7fa JUMPDEST
0x7fb PUSH2 0x2c6
0x7fe GAS
0x7ff SUB
0x800 CALL
0x801 ISZERO
0x802 ISZERO
0x803 PUSH2 0x80b
0x806 JUMPI
---
0x7fa: JUMPDEST 
0x7fb: V732 = 0x2c6
0x7fe: V733 = GAS
0x7ff: V734 = SUB V733 0x2c6
0x800: V735 = CALL V734 S0 0x0 S2 S3 S4 0x0
0x801: V736 = ISZERO V735
0x802: V737 = ISZERO V736
0x803: V738 = 0x80b
0x806: JUMPI 0x80b V737
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x324, 0x6ad, 0x9e1}, S10, S9, S8, {0x23b872dd, 0xa9059cbb}, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x324, 0x6ad, 0x9e1}, S10, S9, S8, {0x23b872dd, 0xa9059cbb}, S6]

================================

Block 0x807
[0x807:0x80a]
---
Predecessors: [0x7fa]
Successors: []
---
0x807 PUSH1 0x0
0x809 DUP1
0x80a REVERT
---
0x807: V739 = 0x0
0x80a: REVERT 0x0 0x0
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, {0x324, 0x6ad, 0x9e1}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, {0x324, 0x6ad, 0x9e1}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]

================================

Block 0x80b
[0x80b:0x811]
---
Predecessors: [0x7fa]
Successors: [0x324, 0x6ad, 0x9e1]
---
0x80b JUMPDEST
0x80c POP
0x80d POP
0x80e POP
0x80f POP
0x810 POP
0x811 JUMP
---
0x80b: JUMPDEST 
0x811: JUMP {0x324, 0x6ad, 0x9e1}
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, {0x324, 0x6ad, 0x9e1}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6]

================================

Block 0x812
[0x812:0x829]
---
Predecessors: [0x324]
Successors: [0x82a, 0x82e]
---
0x812 JUMPDEST
0x813 PUSH1 0x3c
0x815 DUP2
0x816 PUSH1 0x60
0x818 ADD
0x819 MLOAD
0x81a PUSH8 0xffffffffffffffff
0x823 AND
0x824 LT
0x825 ISZERO
0x826 PUSH2 0x82e
0x829 JUMPI
---
0x812: JUMPDEST 
0x813: V740 = 0x3c
0x816: V741 = 0x60
0x818: V742 = ADD 0x60 V290
0x819: V743 = M[V742]
0x81a: V744 = 0xffffffffffffffff
0x823: V745 = AND 0xffffffffffffffff V743
0x824: V746 = LT V745 0x3c
0x825: V747 = ISZERO V746
0x826: V748 = 0x82e
0x829: JUMPI 0x82e V747
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, V290, 0x387, S1, V290]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, V290, 0x387, S1, V290]

================================

Block 0x82a
[0x82a:0x82d]
---
Predecessors: [0x812]
Successors: []
---
0x82a PUSH1 0x0
0x82c DUP1
0x82d REVERT
---
0x82a: V749 = 0x0
0x82d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, S3, 0x387, V69, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, S3, 0x387, V69, S0]

================================

Block 0x82e
[0x82e:0x9ac]
---
Predecessors: [0x812]
Successors: [0x387]
---
0x82e JUMPDEST
0x82f PUSH1 0x0
0x831 DUP3
0x832 DUP2
0x833 MSTORE
0x834 PUSH1 0x3
0x836 PUSH1 0x20
0x838 MSTORE
0x839 PUSH1 0x40
0x83b SWAP1
0x83c SHA3
0x83d DUP2
0x83e SWAP1
0x83f DUP2
0x840 MLOAD
0x841 DUP2
0x842 SLOAD
0x843 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x858 NOT
0x859 AND
0x85a PUSH1 0x1
0x85c PUSH1 0xa0
0x85e PUSH1 0x2
0x860 EXP
0x861 SUB
0x862 SWAP2
0x863 SWAP1
0x864 SWAP2
0x865 AND
0x866 OR
0x867 DUP2
0x868 SSTORE
0x869 PUSH1 0x20
0x86b DUP3
0x86c ADD
0x86d MLOAD
0x86e PUSH1 0x1
0x870 DUP3
0x871 ADD
0x872 DUP1
0x873 SLOAD
0x874 PUSH16 0xffffffffffffffffffffffffffffffff
0x885 NOT
0x886 AND
0x887 PUSH1 0x1
0x889 PUSH1 0x80
0x88b PUSH1 0x2
0x88d EXP
0x88e SUB
0x88f SWAP3
0x890 SWAP1
0x891 SWAP3
0x892 AND
0x893 SWAP2
0x894 SWAP1
0x895 SWAP2
0x896 OR
0x897 SWAP1
0x898 SSTORE
0x899 PUSH1 0x40
0x89b DUP3
0x89c ADD
0x89d MLOAD
0x89e PUSH1 0x1
0x8a0 DUP3
0x8a1 ADD
0x8a2 DUP1
0x8a3 SLOAD
0x8a4 PUSH1 0x1
0x8a6 PUSH1 0x80
0x8a8 PUSH1 0x2
0x8aa EXP
0x8ab SUB
0x8ac SWAP3
0x8ad DUP4
0x8ae AND
0x8af PUSH17 0x100000000000000000000000000000000
0x8c1 MUL
0x8c2 SWAP3
0x8c3 AND
0x8c4 SWAP2
0x8c5 SWAP1
0x8c6 SWAP2
0x8c7 OR
0x8c8 SWAP1
0x8c9 SSTORE
0x8ca PUSH1 0x60
0x8cc DUP3
0x8cd ADD
0x8ce MLOAD
0x8cf PUSH1 0x2
0x8d1 DUP3
0x8d2 ADD
0x8d3 DUP1
0x8d4 SLOAD
0x8d5 PUSH8 0xffffffffffffffff
0x8de NOT
0x8df AND
0x8e0 PUSH8 0xffffffffffffffff
0x8e9 SWAP3
0x8ea SWAP1
0x8eb SWAP3
0x8ec AND
0x8ed SWAP2
0x8ee SWAP1
0x8ef SWAP2
0x8f0 OR
0x8f1 SWAP1
0x8f2 SSTORE
0x8f3 PUSH1 0x80
0x8f5 DUP3
0x8f6 ADD
0x8f7 MLOAD
0x8f8 PUSH1 0x2
0x8fa SWAP1
0x8fb SWAP2
0x8fc ADD
0x8fd DUP1
0x8fe SLOAD
0x8ff PUSH8 0xffffffffffffffff
0x908 SWAP3
0x909 SWAP1
0x90a SWAP3
0x90b AND
0x90c PUSH9 0x10000000000000000
0x916 MUL
0x917 PUSH16 0xffffffffffffffff0000000000000000
0x928 NOT
0x929 SWAP1
0x92a SWAP3
0x92b AND
0x92c SWAP2
0x92d SWAP1
0x92e SWAP2
0x92f OR
0x930 SWAP1
0x931 SSTORE
0x932 POP
0x933 PUSH32 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0x954 DUP3
0x955 PUSH1 0x20
0x957 DUP4
0x958 ADD
0x959 MLOAD
0x95a PUSH1 0x1
0x95c PUSH1 0x80
0x95e PUSH1 0x2
0x960 EXP
0x961 SUB
0x962 AND
0x963 DUP4
0x964 PUSH1 0x40
0x966 ADD
0x967 MLOAD
0x968 PUSH1 0x1
0x96a PUSH1 0x80
0x96c PUSH1 0x2
0x96e EXP
0x96f SUB
0x970 AND
0x971 DUP5
0x972 PUSH1 0x60
0x974 ADD
0x975 MLOAD
0x976 PUSH8 0xffffffffffffffff
0x97f AND
0x980 PUSH1 0x40
0x982 MLOAD
0x983 DUP1
0x984 DUP6
0x985 DUP2
0x986 MSTORE
0x987 PUSH1 0x20
0x989 ADD
0x98a DUP5
0x98b DUP2
0x98c MSTORE
0x98d PUSH1 0x20
0x98f ADD
0x990 DUP4
0x991 DUP2
0x992 MSTORE
0x993 PUSH1 0x20
0x995 ADD
0x996 DUP3
0x997 DUP2
0x998 MSTORE
0x999 PUSH1 0x20
0x99b ADD
0x99c SWAP5
0x99d POP
0x99e POP
0x99f POP
0x9a0 POP
0x9a1 POP
0x9a2 PUSH1 0x40
0x9a4 MLOAD
0x9a5 DUP1
0x9a6 SWAP2
0x9a7 SUB
0x9a8 SWAP1
0x9a9 LOG1
0x9aa POP
0x9ab POP
0x9ac JUMP
---
0x82e: JUMPDEST 
0x82f: V750 = 0x0
0x833: M[0x0] = V69
0x834: V751 = 0x3
0x836: V752 = 0x20
0x838: M[0x20] = 0x3
0x839: V753 = 0x40
0x83c: V754 = SHA3 0x0 0x40
0x840: V755 = M[S0]
0x842: V756 = S[V754]
0x843: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0x858: V758 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x859: V759 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V756
0x85a: V760 = 0x1
0x85c: V761 = 0xa0
0x85e: V762 = 0x2
0x860: V763 = EXP 0x2 0xa0
0x861: V764 = SUB 0x10000000000000000000000000000000000000000 0x1
0x865: V765 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0x866: V766 = OR V765 V759
0x868: S[V754] = V766
0x869: V767 = 0x20
0x86c: V768 = ADD S0 0x20
0x86d: V769 = M[V768]
0x86e: V770 = 0x1
0x871: V771 = ADD V754 0x1
0x873: V772 = S[V771]
0x874: V773 = 0xffffffffffffffffffffffffffffffff
0x885: V774 = NOT 0xffffffffffffffffffffffffffffffff
0x886: V775 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V772
0x887: V776 = 0x1
0x889: V777 = 0x80
0x88b: V778 = 0x2
0x88d: V779 = EXP 0x2 0x80
0x88e: V780 = SUB 0x100000000000000000000000000000000 0x1
0x892: V781 = AND 0xffffffffffffffffffffffffffffffff V769
0x896: V782 = OR V781 V775
0x898: S[V771] = V782
0x899: V783 = 0x40
0x89c: V784 = ADD S0 0x40
0x89d: V785 = M[V784]
0x89e: V786 = 0x1
0x8a1: V787 = ADD V754 0x1
0x8a3: V788 = S[V787]
0x8a4: V789 = 0x1
0x8a6: V790 = 0x80
0x8a8: V791 = 0x2
0x8aa: V792 = EXP 0x2 0x80
0x8ab: V793 = SUB 0x100000000000000000000000000000000 0x1
0x8ae: V794 = AND 0xffffffffffffffffffffffffffffffff V785
0x8af: V795 = 0x100000000000000000000000000000000
0x8c1: V796 = MUL 0x100000000000000000000000000000000 V794
0x8c3: V797 = AND 0xffffffffffffffffffffffffffffffff V788
0x8c7: V798 = OR V797 V796
0x8c9: S[V787] = V798
0x8ca: V799 = 0x60
0x8cd: V800 = ADD S0 0x60
0x8ce: V801 = M[V800]
0x8cf: V802 = 0x2
0x8d2: V803 = ADD V754 0x2
0x8d4: V804 = S[V803]
0x8d5: V805 = 0xffffffffffffffff
0x8de: V806 = NOT 0xffffffffffffffff
0x8df: V807 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 V804
0x8e0: V808 = 0xffffffffffffffff
0x8ec: V809 = AND 0xffffffffffffffff V801
0x8f0: V810 = OR V809 V807
0x8f2: S[V803] = V810
0x8f3: V811 = 0x80
0x8f6: V812 = ADD S0 0x80
0x8f7: V813 = M[V812]
0x8f8: V814 = 0x2
0x8fc: V815 = ADD V754 0x2
0x8fe: V816 = S[V815]
0x8ff: V817 = 0xffffffffffffffff
0x90b: V818 = AND 0xffffffffffffffff V813
0x90c: V819 = 0x10000000000000000
0x916: V820 = MUL 0x10000000000000000 V818
0x917: V821 = 0xffffffffffffffff0000000000000000
0x928: V822 = NOT 0xffffffffffffffff0000000000000000
0x92b: V823 = AND V816 0xffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff
0x92f: V824 = OR V823 V820
0x931: S[V815] = V824
0x933: V825 = 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0x955: V826 = 0x20
0x958: V827 = ADD S0 0x20
0x959: V828 = M[V827]
0x95a: V829 = 0x1
0x95c: V830 = 0x80
0x95e: V831 = 0x2
0x960: V832 = EXP 0x2 0x80
0x961: V833 = SUB 0x100000000000000000000000000000000 0x1
0x962: V834 = AND 0xffffffffffffffffffffffffffffffff V828
0x964: V835 = 0x40
0x966: V836 = ADD 0x40 S0
0x967: V837 = M[V836]
0x968: V838 = 0x1
0x96a: V839 = 0x80
0x96c: V840 = 0x2
0x96e: V841 = EXP 0x2 0x80
0x96f: V842 = SUB 0x100000000000000000000000000000000 0x1
0x970: V843 = AND 0xffffffffffffffffffffffffffffffff V837
0x972: V844 = 0x60
0x974: V845 = ADD 0x60 S0
0x975: V846 = M[V845]
0x976: V847 = 0xffffffffffffffff
0x97f: V848 = AND 0xffffffffffffffff V846
0x980: V849 = 0x40
0x982: V850 = M[0x40]
0x986: M[V850] = V69
0x987: V851 = 0x20
0x989: V852 = ADD 0x20 V850
0x98c: M[V852] = V834
0x98d: V853 = 0x20
0x98f: V854 = ADD 0x20 V852
0x992: M[V854] = V843
0x993: V855 = 0x20
0x995: V856 = ADD 0x20 V854
0x998: M[V856] = V848
0x999: V857 = 0x20
0x99b: V858 = ADD 0x20 V856
0x9a2: V859 = 0x40
0x9a4: V860 = M[0x40]
0x9a7: V861 = SUB V858 V860
0x9a9: LOG V860 V861 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0x9ac: JUMP 0x387
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, S3, 0x387, V69, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, S3]

================================

Block 0x9ad
[0x9ad:0x9cd]
---
Predecessors: [0x4b7, 0x607, 0x663, 0x6ff, 0xa18]
Successors: [0x4d6, 0x61f, 0x67c, 0x716, 0xa34]
---
0x9ad JUMPDEST
0x9ae PUSH1 0x2
0x9b0 ADD
0x9b1 SLOAD
0x9b2 PUSH1 0x0
0x9b4 PUSH9 0x10000000000000000
0x9be SWAP1
0x9bf SWAP2
0x9c0 DIV
0x9c1 PUSH8 0xffffffffffffffff
0x9ca AND
0x9cb GT
0x9cc SWAP1
0x9cd JUMP
---
0x9ad: JUMPDEST 
0x9ae: V862 = 0x2
0x9b0: V863 = ADD 0x2 S0
0x9b1: V864 = S[V863]
0x9b2: V865 = 0x0
0x9b4: V866 = 0x10000000000000000
0x9c0: V867 = DIV V864 0x10000000000000000
0x9c1: V868 = 0xffffffffffffffff
0x9ca: V869 = AND 0xffffffffffffffff V867
0x9cb: V870 = GT V869 0x0
0x9cd: JUMP {0x4d6, 0x61f, 0x67c, 0x716, 0xa34}
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x4d6, 0x61f, 0x67c, 0x716, 0xa34}, S0]
Stack pops: 2
Stack additions: [V870]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S10, S9, S8, S7, S6, S5, S4, S3, S2, V870]

================================

Block 0x9ce
[0x9ce:0x9d6]
---
Predecessors: [0x62a, 0x6a3]
Successors: [0xc16]
---
0x9ce JUMPDEST
0x9cf PUSH2 0x9d7
0x9d2 DUP3
0x9d3 PUSH2 0xc16
0x9d6 JUMP
---
0x9ce: JUMPDEST 
0x9cf: V871 = 0x9d7
0x9d3: V872 = 0xc16
0x9d6: JUMP 0xc16
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x640, 0x6ad}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x9d7, S1]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x640, 0x6ad}, S1, S0, 0x9d7, S1]

================================

Block 0x9d7
[0x9d7:0x9e0]
---
Predecessors: [0xc16]
Successors: [0xb39]
---
0x9d7 JUMPDEST
0x9d8 PUSH2 0x9e1
0x9db DUP2
0x9dc DUP4
0x9dd PUSH2 0xb39
0x9e0 JUMP
---
0x9d7: JUMPDEST 
0x9d8: V873 = 0x9e1
0x9dd: V874 = 0xb39
0x9e0: JUMP 0xb39
---
Entry stack: [V13, 0xfc, V210, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x9e1, S0, S1]
Exit stack: [V13, 0xfc, V210, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x9e1, S0, S1]

================================

Block 0x9e1
[0x9e1:0xa17]
---
Predecessors: [0x80b]
Successors: [0x640, 0x6ad]
---
0x9e1 JUMPDEST
0x9e2 PUSH32 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xa03 DUP3
0xa04 PUSH1 0x40
0xa06 MLOAD
0xa07 SWAP1
0xa08 DUP2
0xa09 MSTORE
0xa0a PUSH1 0x20
0xa0c ADD
0xa0d PUSH1 0x40
0xa0f MLOAD
0xa10 DUP1
0xa11 SWAP2
0xa12 SUB
0xa13 SWAP1
0xa14 LOG1
0xa15 POP
0xa16 POP
0xa17 JUMP
---
0x9e1: JUMPDEST 
0x9e2: V875 = 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xa04: V876 = 0x40
0xa06: V877 = M[0x40]
0xa09: M[V877] = S1
0xa0a: V878 = 0x20
0xa0c: V879 = ADD 0x20 V877
0xa0d: V880 = 0x40
0xa0f: V881 = M[0x40]
0xa12: V882 = SUB V879 V881
0xa14: LOG V881 V882 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xa17: JUMP S2
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3]

================================

Block 0xa18
[0xa18:0xa33]
---
Predecessors: [0x6d0]
Successors: [0x9ad]
---
0xa18 JUMPDEST
0xa19 PUSH1 0x0
0xa1b DUP4
0xa1c DUP2
0xa1d MSTORE
0xa1e PUSH1 0x3
0xa20 PUSH1 0x20
0xa22 MSTORE
0xa23 PUSH1 0x40
0xa25 DUP2
0xa26 SHA3
0xa27 DUP2
0xa28 DUP1
0xa29 DUP1
0xa2a DUP1
0xa2b DUP1
0xa2c PUSH2 0xa34
0xa2f DUP7
0xa30 PUSH2 0x9ad
0xa33 JUMP
---
0xa18: JUMPDEST 
0xa19: V883 = 0x0
0xa1d: M[0x0] = V210
0xa1e: V884 = 0x3
0xa20: V885 = 0x20
0xa22: M[0x20] = 0x3
0xa23: V886 = 0x40
0xa26: V887 = SHA3 0x0 0x40
0xa2c: V888 = 0xa34
0xa30: V889 = 0x9ad
0xa33: JUMP 0x9ad
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, V631, V218]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V887, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa34, V887]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, V631, V218, 0x0, V887, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa34, V887]

================================

Block 0xa34
[0xa34:0xa3a]
---
Predecessors: [0x9ad]
Successors: [0xa3b, 0xa3f]
---
0xa34 JUMPDEST
0xa35 ISZERO
0xa36 ISZERO
0xa37 PUSH2 0xa3f
0xa3a JUMPI
---
0xa34: JUMPDEST 
0xa35: V890 = ISZERO V870
0xa36: V891 = ISZERO V890
0xa37: V892 = 0xa3f
0xa3a: JUMPI 0xa3f V891
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1, V870]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa3b
[0xa3b:0xa3e]
---
Predecessors: [0xa34]
Successors: []
---
0xa3b PUSH1 0x0
0xa3d DUP1
0xa3e REVERT
---
0xa3b: V893 = 0x0
0xa3e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa3f
[0xa3f:0xa47]
---
Predecessors: [0xa34]
Successors: [0xb8f]
---
0xa3f JUMPDEST
0xa40 PUSH2 0xa48
0xa43 DUP7
0xa44 PUSH2 0xb8f
0xa47 JUMP
---
0xa3f: JUMPDEST 
0xa40: V894 = 0xa48
0xa44: V895 = 0xb8f
0xa47: JUMP 0xb8f
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xa48, S5]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xa48, S5]

================================

Block 0xa48
[0xa48:0xa52]
---
Predecessors: [0x72a]
Successors: [0x38f]
---
0xa48 JUMPDEST
0xa49 SWAP5
0xa4a POP
0xa4b PUSH2 0xa53
0xa4e DUP6
0xa4f PUSH2 0x38f
0xa52 JUMP
---
0xa48: JUMPDEST 
0xa4b: V896 = 0xa53
0xa4f: V897 = 0x38f
0xa52: JUMP 0x38f
---
Entry stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1, 0xa53, S0]
Exit stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, S7, S6, S0, S4, S3, S2, S1, 0xa53, S0]

================================

Block 0xa53
[0xa53:0xa60]
---
Predecessors: [0x38f]
Successors: [0xa61, 0xa66]
---
0xa53 JUMPDEST
0xa54 SWAP4
0xa55 POP
0xa56 PUSH1 0x0
0xa58 SWAP3
0xa59 POP
0xa5a DUP10
0xa5b ISZERO
0xa5c DUP1
0xa5d PUSH2 0xa66
0xa60 JUMPI
---
0xa53: JUMPDEST 
0xa56: V898 = 0x0
0xa5b: V899 = ISZERO V210
0xa5d: V900 = 0xa66
0xa60: JUMPI 0xa66 V899
---
Entry stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, {0x0, 0xfc, 0x6f4}, S6, S5, S4, S3, S2, S1, V330]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S0, 0x0, S2, S1, V899]
Exit stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, {0x0, 0xfc, 0x6f4}, S6, S5, V330, 0x0, S2, S1, V899]

================================

Block 0xa61
[0xa61:0xa65]
---
Predecessors: [0xa53]
Successors: [0xa66]
---
0xa61 POP
0xa62 DUP10
0xa63 PUSH1 0x1
0xa65 EQ
---
0xa63: V901 = 0x1
0xa65: V902 = EQ 0x1 V210
---
Entry stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, {0x0, 0xfc, 0x6f4}, S6, S5, V330, 0x0, S2, S1, V899]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V902]
Exit stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, {0x0, 0xfc, 0x6f4}, S6, S5, V330, 0x0, S2, S1, V902]

================================

Block 0xa66
[0xa66:0xa6b]
---
Predecessors: [0xa53, 0xa61]
Successors: [0xa6c, 0xa72]
---
0xa66 JUMPDEST
0xa67 ISZERO
0xa68 PUSH2 0xa72
0xa6b JUMPI
---
0xa66: JUMPDEST 
0xa67: V903 = ISZERO S0
0xa68: V904 = 0xa72
0xa6b: JUMPI 0xa72 V903
---
Entry stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, {0x0, 0xfc, 0x6f4}, S6, S5, V330, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, S12, {0xfc, 0x6f4}, V210, S9, S8, {0x0, 0xfc, 0x6f4}, S6, S5, V330, 0x0, S2, S1]

================================

Block 0xa6c
[0xa6c:0xa71]
---
Predecessors: [0xa66]
Successors: [0xa72]
---
0xa6c PUSH1 0x5
0xa6e DUP6
0xa6f DIV
0xa70 SWAP3
0xa71 POP
---
0xa6c: V905 = 0x5
0xa6f: V906 = DIV S4 0x5
---
Entry stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, {0x0, 0xfc, 0x6f4}, S5, S4, S3, 0x0, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V906, S1, S0]
Exit stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, {0x0, 0xfc, 0x6f4}, S5, S4, S3, V906, S1, S0]

================================

Block 0xa72
[0xa72:0xa7f]
---
Predecessors: [0xa66, 0xa6c]
Successors: [0xa80, 0xa84]
---
0xa72 JUMPDEST
0xa73 DUP9
0xa74 DUP5
0xa75 ADD
0xa76 DUP4
0xa77 ADD
0xa78 DUP6
0xa79 SWAP1
0xa7a LT
0xa7b ISZERO
0xa7c PUSH2 0xa84
0xa7f JUMPI
---
0xa72: JUMPDEST 
0xa75: V907 = ADD S3 S8
0xa77: V908 = ADD S2 V907
0xa7a: V909 = LT V908 S4
0xa7b: V910 = ISZERO V909
0xa7c: V911 = 0xa84
0xa7f: JUMPI 0xa84 V910
---
Entry stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, {0x0, 0xfc, 0x6f4}, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, {0x0, 0xfc, 0x6f4}, S5, S4, S3, S2, S1, S0]

================================

Block 0xa80
[0xa80:0xa83]
---
Predecessors: [0xa72]
Successors: []
---
0xa80 PUSH1 0x0
0xa82 DUP1
0xa83 REVERT
---
0xa80: V912 = 0x0
0xa83: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, {0x0, 0xfc, 0x6f4}, S5, S4, V330, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, {0x0, 0xfc, 0x6f4}, S5, S4, V330, S2, S1, S0]

================================

Block 0xa84
[0xa84:0xa99]
---
Predecessors: [0xa72]
Successors: [0xc16]
---
0xa84 JUMPDEST
0xa85 DUP6
0xa86 SLOAD
0xa87 PUSH1 0x1
0xa89 PUSH1 0xa0
0xa8b PUSH1 0x2
0xa8d EXP
0xa8e SUB
0xa8f AND
0xa90 SWAP2
0xa91 POP
0xa92 PUSH2 0xa9a
0xa95 DUP11
0xa96 PUSH2 0xc16
0xa99 JUMP
---
0xa84: JUMPDEST 
0xa86: V913 = S[S5]
0xa87: V914 = 0x1
0xa89: V915 = 0xa0
0xa8b: V916 = 0x2
0xa8d: V917 = EXP 0x2 0xa0
0xa8e: V918 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8f: V919 = AND 0xffffffffffffffffffffffffffffffffffffffff V913
0xa92: V920 = 0xa9a
0xa96: V921 = 0xc16
0xa99: JUMP 0xc16
---
Entry stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, {0x0, 0xfc, 0x6f4}, S5, S4, V330, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V919, S0, 0xa9a, S9]
Exit stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, {0x0, 0xfc, 0x6f4}, S5, S4, V330, S2, V919, S0, 0xa9a, V210]

================================

Block 0xa9a
[0xa9a:0xaa3]
---
Predecessors: [0xc16]
Successors: [0xaa4, 0xadb]
---
0xa9a JUMPDEST
0xa9b PUSH1 0x0
0xa9d DUP6
0xa9e GT
0xa9f ISZERO
0xaa0 PUSH2 0xadb
0xaa3 JUMPI
---
0xa9a: JUMPDEST 
0xa9b: V922 = 0x0
0xa9e: V923 = GT S4 0x0
0xa9f: V924 = ISZERO V923
0xaa0: V925 = 0xadb
0xaa3: JUMPI 0xadb V924
---
Entry stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xaa4
[0xaa4:0xad6]
---
Predecessors: [0xa9a]
Successors: [0xad7, 0xadb]
---
0xaa4 POP
0xaa5 DUP3
0xaa6 DUP5
0xaa7 SUB
0xaa8 DUP3
0xaa9 SWAP1
0xaaa SUB
0xaab PUSH1 0x1
0xaad PUSH1 0xa0
0xaaf PUSH1 0x2
0xab1 EXP
0xab2 SUB
0xab3 DUP3
0xab4 AND
0xab5 DUP2
0xab6 ISZERO
0xab7 PUSH2 0x8fc
0xaba MUL
0xabb DUP3
0xabc PUSH1 0x40
0xabe MLOAD
0xabf PUSH1 0x0
0xac1 PUSH1 0x40
0xac3 MLOAD
0xac4 DUP1
0xac5 DUP4
0xac6 SUB
0xac7 DUP2
0xac8 DUP6
0xac9 DUP9
0xaca DUP9
0xacb CALL
0xacc SWAP4
0xacd POP
0xace POP
0xacf POP
0xad0 POP
0xad1 ISZERO
0xad2 ISZERO
0xad3 PUSH2 0xadb
0xad6 JUMPI
---
0xaa7: V926 = SUB S4 S3
0xaaa: V927 = SUB V926 S2
0xaab: V928 = 0x1
0xaad: V929 = 0xa0
0xaaf: V930 = 0x2
0xab1: V931 = EXP 0x2 0xa0
0xab2: V932 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab4: V933 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xab6: V934 = ISZERO V927
0xab7: V935 = 0x8fc
0xaba: V936 = MUL 0x8fc V934
0xabc: V937 = 0x40
0xabe: V938 = M[0x40]
0xabf: V939 = 0x0
0xac1: V940 = 0x40
0xac3: V941 = M[0x40]
0xac6: V942 = SUB V938 V941
0xacb: V943 = CALL V936 V933 V927 V941 V942 V941 0x0
0xad1: V944 = ISZERO V943
0xad2: V945 = ISZERO V944
0xad3: V946 = 0xadb
0xad6: JUMPI 0xadb V945
---
Entry stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V927]
Exit stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, S6, S5, S4, S3, S2, S1, V927]

================================

Block 0xad7
[0xad7:0xada]
---
Predecessors: [0xaa4]
Successors: []
---
0xad7 PUSH1 0x0
0xad9 DUP1
0xada REVERT
---
0xad7: V947 = 0x0
0xada: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, S6, S5, S4, S3, S2, S1, V927]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, S6, S5, S4, S3, S2, S1, V927]

================================

Block 0xadb
[0xadb:0xb38]
---
Predecessors: [0xa9a, 0xaa4]
Successors: [0xfc, 0x19c, 0x6f4]
---
0xadb JUMPDEST
0xadc PUSH32 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xafd DUP11
0xafe DUP7
0xaff DUP11
0xb00 PUSH1 0x40
0xb02 MLOAD
0xb03 SWAP3
0xb04 DUP4
0xb05 MSTORE
0xb06 PUSH1 0x20
0xb08 DUP4
0xb09 ADD
0xb0a SWAP2
0xb0b SWAP1
0xb0c SWAP2
0xb0d MSTORE
0xb0e PUSH1 0x1
0xb10 PUSH1 0xa0
0xb12 PUSH1 0x2
0xb14 EXP
0xb15 SUB
0xb16 AND
0xb17 PUSH1 0x40
0xb19 DUP1
0xb1a DUP4
0xb1b ADD
0xb1c SWAP2
0xb1d SWAP1
0xb1e SWAP2
0xb1f MSTORE
0xb20 PUSH1 0x60
0xb22 SWAP1
0xb23 SWAP2
0xb24 ADD
0xb25 SWAP1
0xb26 MLOAD
0xb27 DUP1
0xb28 SWAP2
0xb29 SUB
0xb2a SWAP1
0xb2b LOG1
0xb2c POP
0xb2d SWAP3
0xb2e SWAP9
0xb2f SWAP8
0xb30 POP
0xb31 POP
0xb32 POP
0xb33 POP
0xb34 POP
0xb35 POP
0xb36 POP
0xb37 POP
0xb38 JUMP
---
0xadb: JUMPDEST 
0xadc: V948 = 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xb00: V949 = 0x40
0xb02: V950 = M[0x40]
0xb05: M[V950] = V210
0xb06: V951 = 0x20
0xb09: V952 = ADD V950 0x20
0xb0d: M[V952] = S4
0xb0e: V953 = 0x1
0xb10: V954 = 0xa0
0xb12: V955 = 0x2
0xb14: V956 = EXP 0x2 0xa0
0xb15: V957 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb16: V958 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xb17: V959 = 0x40
0xb1b: V960 = ADD V950 0x40
0xb1f: M[V960] = V958
0xb20: V961 = 0x60
0xb24: V962 = ADD V950 0x60
0xb26: V963 = M[0x40]
0xb29: V964 = SUB V962 V963
0xb2b: LOG V963 V964 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xb38: JUMP {0xfc, 0x6f4}
---
Entry stack: [V13, 0xfc, V210, V218, S11, {0xfc, 0x6f4}, V210, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S4]
Exit stack: [V13, 0xfc, V210, V218, S11, S4]

================================

Block 0xb39
[0xb39:0xb8a]
---
Predecessors: [0x6f4, 0x9d7]
Successors: [0x7fa, 0xb8b]
---
0xb39 JUMPDEST
0xb3a PUSH1 0x1
0xb3c SLOAD
0xb3d PUSH1 0x1
0xb3f PUSH1 0xa0
0xb41 PUSH1 0x2
0xb43 EXP
0xb44 SUB
0xb45 AND
0xb46 PUSH4 0xa9059cbb
0xb4b DUP4
0xb4c DUP4
0xb4d PUSH1 0x40
0xb4f MLOAD
0xb50 PUSH1 0xe0
0xb52 PUSH1 0x2
0xb54 EXP
0xb55 PUSH4 0xffffffff
0xb5a DUP6
0xb5b AND
0xb5c MUL
0xb5d DUP2
0xb5e MSTORE
0xb5f PUSH1 0x1
0xb61 PUSH1 0xa0
0xb63 PUSH1 0x2
0xb65 EXP
0xb66 SUB
0xb67 SWAP1
0xb68 SWAP3
0xb69 AND
0xb6a PUSH1 0x4
0xb6c DUP4
0xb6d ADD
0xb6e MSTORE
0xb6f PUSH1 0x24
0xb71 DUP3
0xb72 ADD
0xb73 MSTORE
0xb74 PUSH1 0x44
0xb76 ADD
0xb77 PUSH1 0x0
0xb79 PUSH1 0x40
0xb7b MLOAD
0xb7c DUP1
0xb7d DUP4
0xb7e SUB
0xb7f DUP2
0xb80 PUSH1 0x0
0xb82 DUP8
0xb83 DUP1
0xb84 EXTCODESIZE
0xb85 ISZERO
0xb86 ISZERO
0xb87 PUSH2 0x7fa
0xb8a JUMPI
---
0xb39: JUMPDEST 
0xb3a: V965 = 0x1
0xb3c: V966 = S[0x1]
0xb3d: V967 = 0x1
0xb3f: V968 = 0xa0
0xb41: V969 = 0x2
0xb43: V970 = EXP 0x2 0xa0
0xb44: V971 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb45: V972 = AND 0xffffffffffffffffffffffffffffffffffffffff V966
0xb46: V973 = 0xa9059cbb
0xb4d: V974 = 0x40
0xb4f: V975 = M[0x40]
0xb50: V976 = 0xe0
0xb52: V977 = 0x2
0xb54: V978 = EXP 0x2 0xe0
0xb55: V979 = 0xffffffff
0xb5b: V980 = AND 0xa9059cbb 0xffffffff
0xb5c: V981 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb5e: M[V975] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb5f: V982 = 0x1
0xb61: V983 = 0xa0
0xb63: V984 = 0x2
0xb65: V985 = EXP 0x2 0xa0
0xb66: V986 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb69: V987 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xb6a: V988 = 0x4
0xb6d: V989 = ADD V975 0x4
0xb6e: M[V989] = V987
0xb6f: V990 = 0x24
0xb72: V991 = ADD V975 0x24
0xb73: M[V991] = S0
0xb74: V992 = 0x44
0xb76: V993 = ADD 0x44 V975
0xb77: V994 = 0x0
0xb79: V995 = 0x40
0xb7b: V996 = M[0x40]
0xb7e: V997 = SUB V993 V996
0xb80: V998 = 0x0
0xb84: V999 = EXTCODESIZE V972
0xb85: V1000 = ISZERO V999
0xb86: V1001 = ISZERO V1000
0xb87: V1002 = 0x7fa
0xb8a: JUMPI 0x7fa V1001
---
Entry stack: [V13, 0xfc, V210, V218, S14, {0xfc, 0x6f4}, V210, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x6ad, 0x9e1}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V972, 0xa9059cbb, V993, 0x0, V996, V997, V996, 0x0, V972]
Exit stack: [V13, 0xfc, V210, V218, S14, {0xfc, 0x6f4}, V210, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x6ad, 0x9e1}, S1, S0, V972, 0xa9059cbb, V993, 0x0, V996, V997, V996, 0x0, V972]

================================

Block 0xb8b
[0xb8b:0xb8e]
---
Predecessors: [0xb39]
Successors: []
---
0xb8b PUSH1 0x0
0xb8d DUP1
0xb8e REVERT
---
0xb8b: V1003 = 0x0
0xb8e: REVERT 0x0 0x0
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x6ad, 0x9e1}, S10, S9, V972, 0xa9059cbb, V993, 0x0, V996, V997, V996, 0x0, V972]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x6ad, 0x9e1}, S10, S9, V972, 0xa9059cbb, V993, 0x0, V996, V997, V996, 0x0, V972]

================================

Block 0xb8f
[0xb8f:0xbb6]
---
Predecessors: [0x721, 0xa3f]
Successors: [0xbb7, 0xbd5]
---
0xb8f JUMPDEST
0xb90 PUSH1 0x2
0xb92 DUP2
0xb93 ADD
0xb94 SLOAD
0xb95 PUSH1 0x0
0xb97 SWAP1
0xb98 DUP2
0xb99 SWAP1
0xb9a PUSH9 0x10000000000000000
0xba4 SWAP1
0xba5 DIV
0xba6 PUSH8 0xffffffffffffffff
0xbaf AND
0xbb0 TIMESTAMP
0xbb1 GT
0xbb2 ISZERO
0xbb3 PUSH2 0xbd5
0xbb6 JUMPI
---
0xb8f: JUMPDEST 
0xb90: V1004 = 0x2
0xb93: V1005 = ADD S0 0x2
0xb94: V1006 = S[V1005]
0xb95: V1007 = 0x0
0xb9a: V1008 = 0x10000000000000000
0xba5: V1009 = DIV V1006 0x10000000000000000
0xba6: V1010 = 0xffffffffffffffff
0xbaf: V1011 = AND 0xffffffffffffffff V1009
0xbb0: V1012 = TIMESTAMP
0xbb1: V1013 = GT V1012 V1011
0xbb2: V1014 = ISZERO V1013
0xbb3: V1015 = 0xbd5
0xbb6: JUMPI 0xbd5 V1014
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x72a, 0xa48}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x72a, 0xa48}, S0, 0x0, 0x0]

================================

Block 0xbb7
[0xbb7:0xbd4]
---
Predecessors: [0xb8f]
Successors: [0xbd5]
---
0xbb7 POP
0xbb8 PUSH1 0x2
0xbba DUP3
0xbbb ADD
0xbbc SLOAD
0xbbd PUSH9 0x10000000000000000
0xbc7 SWAP1
0xbc8 DIV
0xbc9 PUSH8 0xffffffffffffffff
0xbd2 AND
0xbd3 TIMESTAMP
0xbd4 SUB
---
0xbb8: V1016 = 0x2
0xbbb: V1017 = ADD S2 0x2
0xbbc: V1018 = S[V1017]
0xbbd: V1019 = 0x10000000000000000
0xbc8: V1020 = DIV V1018 0x10000000000000000
0xbc9: V1021 = 0xffffffffffffffff
0xbd2: V1022 = AND 0xffffffffffffffff V1020
0xbd3: V1023 = TIMESTAMP
0xbd4: V1024 = SUB V1023 V1022
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x72a, 0xa48}, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1024]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x72a, 0xa48}, S2, 0x0, V1024]

================================

Block 0xbd5
[0xbd5:0xc15]
---
Predecessors: [0xb8f, 0xbb7]
Successors: [0xc63]
---
0xbd5 JUMPDEST
0xbd6 PUSH1 0x1
0xbd8 DUP4
0xbd9 ADD
0xbda SLOAD
0xbdb PUSH1 0x2
0xbdd DUP5
0xbde ADD
0xbdf SLOAD
0xbe0 PUSH2 0x72a
0xbe3 SWAP2
0xbe4 PUSH1 0x1
0xbe6 PUSH1 0x80
0xbe8 PUSH1 0x2
0xbea EXP
0xbeb SUB
0xbec DUP1
0xbed DUP3
0xbee AND
0xbef SWAP3
0xbf0 PUSH17 0x100000000000000000000000000000000
0xc02 SWAP1
0xc03 SWAP3
0xc04 DIV
0xc05 AND
0xc06 SWAP1
0xc07 PUSH8 0xffffffffffffffff
0xc10 AND
0xc11 DUP5
0xc12 PUSH2 0xc63
0xc15 JUMP
---
0xbd5: JUMPDEST 
0xbd6: V1025 = 0x1
0xbd9: V1026 = ADD S2 0x1
0xbda: V1027 = S[V1026]
0xbdb: V1028 = 0x2
0xbde: V1029 = ADD S2 0x2
0xbdf: V1030 = S[V1029]
0xbe0: V1031 = 0x72a
0xbe4: V1032 = 0x1
0xbe6: V1033 = 0x80
0xbe8: V1034 = 0x2
0xbea: V1035 = EXP 0x2 0x80
0xbeb: V1036 = SUB 0x100000000000000000000000000000000 0x1
0xbee: V1037 = AND V1027 0xffffffffffffffffffffffffffffffff
0xbf0: V1038 = 0x100000000000000000000000000000000
0xc04: V1039 = DIV V1027 0x100000000000000000000000000000000
0xc05: V1040 = AND V1039 0xffffffffffffffffffffffffffffffff
0xc07: V1041 = 0xffffffffffffffff
0xc10: V1042 = AND 0xffffffffffffffff V1030
0xc12: V1043 = 0xc63
0xc15: JUMP 0xc63
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x72a, 0xa48}, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x72a, V1037, V1040, V1042, S0]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x72a, 0xa48}, S2, 0x0, S0, 0x72a, V1037, V1040, V1042, S0]

================================

Block 0xc16
[0xc16:0xc62]
---
Predecessors: [0x9ce, 0xa84]
Successors: [0x9d7, 0xa9a]
---
0xc16 JUMPDEST
0xc17 PUSH1 0x0
0xc19 SWAP1
0xc1a DUP2
0xc1b MSTORE
0xc1c PUSH1 0x3
0xc1e PUSH1 0x20
0xc20 MSTORE
0xc21 PUSH1 0x40
0xc23 DUP2
0xc24 SHA3
0xc25 DUP1
0xc26 SLOAD
0xc27 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3c NOT
0xc3d AND
0xc3e DUP2
0xc3f SSTORE
0xc40 PUSH1 0x1
0xc42 DUP2
0xc43 ADD
0xc44 SWAP2
0xc45 SWAP1
0xc46 SWAP2
0xc47 SSTORE
0xc48 PUSH1 0x2
0xc4a ADD
0xc4b DUP1
0xc4c SLOAD
0xc4d PUSH16 0xffffffffffffffffffffffffffffffff
0xc5e NOT
0xc5f AND
0xc60 SWAP1
0xc61 SSTORE
0xc62 JUMP
---
0xc16: JUMPDEST 
0xc17: V1044 = 0x0
0xc1b: M[0x0] = S0
0xc1c: V1045 = 0x3
0xc1e: V1046 = 0x20
0xc20: M[0x20] = 0x3
0xc21: V1047 = 0x40
0xc24: V1048 = SHA3 0x0 0x40
0xc26: V1049 = S[V1048]
0xc27: V1050 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3c: V1051 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc3d: V1052 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1049
0xc3f: S[V1048] = V1052
0xc40: V1053 = 0x1
0xc43: V1054 = ADD V1048 0x1
0xc47: S[V1054] = 0x0
0xc48: V1055 = 0x2
0xc4a: V1056 = ADD 0x2 V1048
0xc4c: V1057 = S[V1056]
0xc4d: V1058 = 0xffffffffffffffffffffffffffffffff
0xc5e: V1059 = NOT 0xffffffffffffffffffffffffffffffff
0xc5f: V1060 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V1057
0xc61: S[V1056] = V1060
0xc62: JUMP {0x9d7, 0xa9a}
---
Entry stack: [V13, 0xfc, V210, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x9d7, 0xa9a}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xfc, V210, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xc63
[0xc63:0xc6f]
---
Predecessors: [0xbd5]
Successors: [0xc70, 0xc77]
---
0xc63 JUMPDEST
0xc64 PUSH1 0x0
0xc66 DUP1
0xc67 DUP1
0xc68 DUP1
0xc69 DUP6
0xc6a DUP6
0xc6b LT
0xc6c PUSH2 0xc77
0xc6f JUMPI
---
0xc63: JUMPDEST 
0xc64: V1061 = 0x0
0xc6b: V1062 = LT S0 V1042
0xc6c: V1063 = 0xc77
0xc6f: JUMPI 0xc77 V1062
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x72a, 0xa48}, S7, 0x0, S5, 0x72a, V1037, V1040, V1042, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x72a, 0xa48}, S7, 0x0, S5, 0x72a, V1037, V1040, V1042, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xc70
[0xc70:0xc76]
---
Predecessors: [0xc63]
Successors: [0xc95]
---
0xc70 DUP7
0xc71 SWAP4
0xc72 POP
0xc73 PUSH2 0xc95
0xc76 JUMP
---
0xc73: V1064 = 0xc95
0xc76: JUMP 0xc95
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x72a, 0xa48}, S11, 0x0, S9, 0x72a, V1037, V1040, V1042, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S6, S2, S1, S0]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x72a, 0xa48}, S11, 0x0, S9, 0x72a, V1037, V1040, V1042, S4, V1040, 0x0, 0x0, 0x0]

================================

Block 0xc77
[0xc77:0xc87]
---
Predecessors: [0xc63]
Successors: [0xc88, 0xc89]
---
0xc77 JUMPDEST
0xc78 DUP8
0xc79 DUP8
0xc7a SUB
0xc7b SWAP3
0xc7c POP
0xc7d DUP6
0xc7e DUP6
0xc7f DUP5
0xc80 MUL
0xc81 DUP2
0xc82 ISZERO
0xc83 ISZERO
0xc84 PUSH2 0xc89
0xc87 JUMPI
---
0xc77: JUMPDEST 
0xc7a: V1065 = SUB V1040 V1037
0xc80: V1066 = MUL V1065 S4
0xc82: V1067 = ISZERO V1042
0xc83: V1068 = ISZERO V1067
0xc84: V1069 = 0xc89
0xc87: JUMPI 0xc89 V1068
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x72a, 0xa48}, S11, 0x0, S9, 0x72a, V1037, V1040, V1042, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V1065, S1, S0, S5, V1066]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x72a, 0xa48}, S11, 0x0, S9, 0x72a, V1037, V1040, V1042, S4, 0x0, V1065, 0x0, 0x0, V1042, V1066]

================================

Block 0xc88
[0xc88:0xc88]
---
Predecessors: [0xc77]
Successors: []
---
0xc88 INVALID
---
0xc88: INVALID 
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x72a, 0xa48}, S13, 0x0, S11, 0x72a, V1037, V1040, V1042, S6, 0x0, V1065, 0x0, 0x0, V1042, V1066]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x72a, 0xa48}, S13, 0x0, S11, 0x72a, V1037, V1040, V1042, S6, 0x0, V1065, 0x0, 0x0, V1042, V1066]

================================

Block 0xc89
[0xc89:0xc94]
---
Predecessors: [0xc77]
Successors: [0xc95]
---
0xc89 JUMPDEST
0xc8a SDIV
0xc8b SWAP2
0xc8c POP
0xc8d DUP2
0xc8e DUP9
0xc8f ADD
0xc90 SWAP1
0xc91 POP
0xc92 DUP1
0xc93 SWAP4
0xc94 POP
---
0xc89: JUMPDEST 
0xc8a: V1070 = SDIV V1066 V1042
0xc8f: V1071 = ADD V1037 V1070
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x72a, 0xa48}, S13, 0x0, S11, 0x72a, V1037, V1040, V1042, S6, 0x0, V1065, 0x0, 0x0, V1042, V1066]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V1071, S4, V1070, V1071]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x72a, 0xa48}, S13, 0x0, S11, 0x72a, V1037, V1040, V1042, S6, V1071, V1065, V1070, V1071]

================================

Block 0xc95
[0xc95:0xc9f]
---
Predecessors: [0xc70, 0xc89]
Successors: [0x72a]
---
0xc95 JUMPDEST
0xc96 POP
0xc97 POP
0xc98 POP
0xc99 SWAP5
0xc9a SWAP4
0xc9b POP
0xc9c POP
0xc9d POP
0xc9e POP
0xc9f JUMP
---
0xc95: JUMPDEST 
0xc9f: JUMP 0x72a
---
Entry stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x72a, 0xa48}, S11, 0x0, S9, 0x72a, V1037, V1040, V1042, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S3]
Exit stack: [V13, 0xfc, V210, V218, V629, 0x6f4, V210, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x72a, 0xa48}, S11, 0x0, S9, S3]

================================

Block 0xca0
[0xca0:0xccd]
---
Predecessors: [0x2b7]
Successors: [0x2bf]
---
0xca0 JUMPDEST
0xca1 PUSH1 0xa0
0xca3 PUSH1 0x40
0xca5 MLOAD
0xca6 SWAP1
0xca7 DUP2
0xca8 ADD
0xca9 PUSH1 0x40
0xcab SWAP1
0xcac DUP2
0xcad MSTORE
0xcae PUSH1 0x0
0xcb0 DUP1
0xcb1 DUP4
0xcb2 MSTORE
0xcb3 PUSH1 0x20
0xcb5 DUP4
0xcb6 ADD
0xcb7 DUP2
0xcb8 SWAP1
0xcb9 MSTORE
0xcba SWAP1
0xcbb DUP3
0xcbc ADD
0xcbd DUP2
0xcbe SWAP1
0xcbf MSTORE
0xcc0 PUSH1 0x60
0xcc2 DUP3
0xcc3 ADD
0xcc4 DUP2
0xcc5 SWAP1
0xcc6 MSTORE
0xcc7 PUSH1 0x80
0xcc9 DUP3
0xcca ADD
0xccb MSTORE
0xccc SWAP1
0xccd JUMP
---
0xca0: JUMPDEST 
0xca1: V1072 = 0xa0
0xca3: V1073 = 0x40
0xca5: V1074 = M[0x40]
0xca8: V1075 = ADD V1074 0xa0
0xca9: V1076 = 0x40
0xcad: M[0x40] = V1075
0xcae: V1077 = 0x0
0xcb2: M[V1074] = 0x0
0xcb3: V1078 = 0x20
0xcb6: V1079 = ADD V1074 0x20
0xcb9: M[V1079] = 0x0
0xcbc: V1080 = ADD V1074 0x40
0xcbf: M[V1080] = 0x0
0xcc0: V1081 = 0x60
0xcc3: V1082 = ADD V1074 0x60
0xcc6: M[V1082] = 0x0
0xcc7: V1083 = 0x80
0xcca: V1084 = ADD V1074 0x80
0xccb: M[V1084] = 0x0
0xccd: JUMP 0x2bf
---
Entry stack: [V13, 0xfc, V69, V71, V73, V75, V83, 0x2bf]
Stack pops: 1
Stack additions: [V1074]
Exit stack: [V13, 0xfc, V69, V71, V73, V75, V83, V1074]

================================

Block 0xcce
[0xcce:0xd05]
---
Predecessors: []
Successors: []
---
0xcce STOP
0xccf LOG1
0xcd0 PUSH6 0x627a7a723058
0xcd7 SHA3
0xcd8 MISSING 0xc9
0xcd9 PUSH19 0xd155d0cf412d1cc14b5413a840ed1ed5a119b3
0xced MISSING 0xce
0xcee MISSING 0xe9
0xcef MISSING 0x1e
0xcf0 MISSING 0xe6
0xcf1 SWAP9
0xcf2 MISSING 0xd1
0xcf3 PUSH18 0x257a6c060029
---
0xcce: STOP 
0xccf: LOG S0 S1 S2
0xcd0: V1085 = 0x627a7a723058
0xcd7: V1086 = SHA3 0x627a7a723058 S3
0xcd8: MISSING 0xc9
0xcd9: V1087 = 0xd155d0cf412d1cc14b5413a840ed1ed5a119b3
0xced: MISSING 0xce
0xcee: MISSING 0xe9
0xcef: MISSING 0x1e
0xcf0: MISSING 0xe6
0xcf2: MISSING 0xd1
0xcf3: V1088 = 0x257a6c060029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1086, 0xd155d0cf412d1cc14b5413a840ed1ed5a119b3, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, 0x257a6c060029]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebe40a
Entry block: 0xd1
Exit block: 0xfc
Body: 0xd1, 0xd8, 0xdc, 0xfc, 0x2b7, 0x2bf, 0x2d0, 0x2d4, 0x2e5, 0x2e9, 0x2fb, 0x2ff, 0x316, 0x31a, 0x797, 0x7f6, 0xca0

Function 1:
Public function signature: 0x2d3a926a
Entry block: 0xfe
Exit block: 0x114
Body: 0xfe, 0x105, 0x109, 0x114

Function 2:
Public function signature: 0x3f4ba83a
Entry block: 0x126
Exit block: 0x139
Body: 0x126, 0x12d, 0x131, 0x139, 0x39b, 0x3b3, 0x3b7, 0x3cb, 0x3cf

Function 3:
Public function signature: 0x5c975abb
Entry block: 0x14d
Exit block: 0x139
Body: 0x139, 0x14d, 0x154, 0x158, 0x41f

Function 4:
Public function signature: 0x5fd8c710
Entry block: 0x160
Exit block: 0xfc
Body: 0xfc, 0x160, 0x167, 0x16b, 0x42f, 0x44d, 0x463, 0x46a, 0x46e, 0x4a7, 0x4ab

Function 5:
Public function signature: 0x76190f8f
Entry block: 0x173
Exit block: 0x139
Body: 0x139, 0x173, 0x17a, 0x17e, 0x4ae

Function 6:
Public function signature: 0x78bd7935
Entry block: 0x186
Exit block: 0x19c
Body: 0x186, 0x18d, 0x191, 0x19c, 0x4b7, 0x4d6, 0x4dd, 0x4e1

Function 7:
Public function signature: 0x83b5ff8b
Entry block: 0x1d7
Exit block: 0x114
Body: 0x114, 0x1d7, 0x1de, 0x1e2, 0x544

Function 8:
Public function signature: 0x8456cb59
Entry block: 0x1ea
Exit block: 0x139
Body: 0x139, 0x1ea, 0x1f1, 0x1f5, 0x54a, 0x562, 0x566, 0x579, 0x57d

Function 9:
Public function signature: 0x878eb368
Entry block: 0x1fd
Exit block: 0xfc
Body: 0xfc, 0x1fd, 0x204, 0x208, 0x5d3, 0x5e8, 0x5ec, 0x603, 0x607, 0x61f, 0x626, 0x62a, 0x640

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x213
Exit block: 0x226
Body: 0x213, 0x21a, 0x21e, 0x226, 0x644

Function 11:
Public function signature: 0x96b5a755
Entry block: 0x242
Exit block: 0xfc
Body: 0xfc, 0x242, 0x249, 0x24d, 0x653, 0x65f, 0x663, 0x67c, 0x683, 0x687, 0x69f, 0x6a3, 0x6ad

Function 12:
Public function signature: 0x9f04996d
Entry block: 0x258
Exit block: 0xfc
Body: 0xfc, 0x114, 0x19c, 0x258, 0x38f, 0x6ad, 0x6b2, 0x6cc, 0x6d0, 0x6f4, 0xa18, 0xa34, 0xa3b, 0xa3f, 0xa48, 0xa53, 0xa61, 0xa66, 0xa6c, 0xa72, 0xa80, 0xa84, 0xa9a, 0xaa4, 0xad7, 0xadb

Function 13:
Public function signature: 0xc55d0f56
Entry block: 0x26f
Exit block: 0xfc
Body: 0xfc, 0x114, 0x19c, 0x26f, 0x276, 0x27a, 0x6ad, 0x6f4, 0x6ff, 0x716, 0x71d, 0x721, 0x72a, 0xa48, 0xa53, 0xa61, 0xa66, 0xa6c, 0xa72, 0xa80, 0xa84, 0xa9a, 0xaa4, 0xad7, 0xadb

Function 14:
Public function signature: 0xdd1b7a0f
Entry block: 0x285
Exit block: 0x226
Body: 0x226, 0x285, 0x28c, 0x290, 0x731

Function 15:
Public function signature: 0xf2fde38b
Entry block: 0x298
Exit block: 0xfc
Body: 0xfc, 0x298, 0x29f, 0x2a3, 0x4ab, 0x740, 0x757, 0x75b, 0x76b

Function 16:
Public fallback function
Entry block: 0xcc
Exit block: 0xcc
Body: 0xcc

Function 17:
Private function
Entry block: 0x9ce
Exit block: 0x9e1
Body: 0x7fa, 0x80b, 0x9ce, 0x9d7, 0x9e1, 0xb39

Function 18:
Private function
Entry block: 0xb39
Exit block: 0x80b
Body: 0x7fa, 0x80b, 0xb39

