Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x144]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ef13367
0x3c EQ
0x3d PUSH2 0x144
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ef13367
0x3c: V13 = EQ 0x3ef13367 V11
0x3d: V14 = 0x144
0x40: JUMPI 0x144 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x187]
---
0x41 DUP1
0x42 PUSH4 0x6b9f96ea
0x47 EQ
0x48 PUSH2 0x187
0x4b JUMPI
---
0x42: V15 = 0x6b9f96ea
0x47: V16 = EQ 0x6b9f96ea V11
0x48: V17 = 0x187
0x4b: JUMPI 0x187 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0xa9]
---
Predecessors: [0x0, 0x41]
Successors: [0xaa, 0xb3]
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 SWAP1
0x51 SLOAD
0x52 SWAP1
0x53 PUSH2 0x100
0x56 EXP
0x57 SWAP1
0x58 DIV
0x59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e AND
0x6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84 AND
0x85 PUSH2 0x8fc
0x88 CALLVALUE
0x89 SWAP1
0x8a DUP2
0x8b ISZERO
0x8c MUL
0x8d SWAP1
0x8e PUSH1 0x40
0x90 MLOAD
0x91 PUSH1 0x0
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP1
0x97 DUP4
0x98 SUB
0x99 DUP2
0x9a DUP6
0x9b DUP9
0x9c DUP9
0x9d CALL
0x9e SWAP4
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 ISZERO
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xb3
0xa9 JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x51: V19 = S[0x0]
0x53: V20 = 0x100
0x56: V21 = EXP 0x100 0x0
0x58: V22 = DIV V19 0x1
0x59: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x6f: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x84: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x85: V27 = 0x8fc
0x88: V28 = CALLVALUE
0x8b: V29 = ISZERO V28
0x8c: V30 = MUL V29 0x8fc
0x8e: V31 = 0x40
0x90: V32 = M[0x40]
0x91: V33 = 0x0
0x93: V34 = 0x40
0x95: V35 = M[0x40]
0x98: V36 = SUB V32 V35
0x9d: V37 = CALL V30 V26 V28 V35 V36 V35 0x0
0xa3: V38 = ISZERO V37
0xa5: V39 = ISZERO V38
0xa6: V40 = 0xb3
0xa9: JUMPI 0xb3 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V11, V38]

================================

Block 0xaa
[0xaa:0xb2]
---
Predecessors: [0x4c]
Successors: []
---
0xaa RETURNDATASIZE
0xab PUSH1 0x0
0xad DUP1
0xae RETURNDATACOPY
0xaf RETURNDATASIZE
0xb0 PUSH1 0x0
0xb2 REVERT
---
0xaa: V41 = RETURNDATASIZE
0xab: V42 = 0x0
0xae: RETURNDATACOPY 0x0 0x0 V41
0xaf: V43 = RETURNDATASIZE
0xb0: V44 = 0x0
0xb2: REVERT 0x0 V43
---
Entry stack: [V11, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38]

================================

Block 0xb3
[0xb3:0x143]
---
Predecessors: [0x4c]
Successors: []
---
0xb3 JUMPDEST
0xb4 POP
0xb5 PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xd6 CALLER
0xd7 CALLVALUE
0xd8 PUSH1 0x0
0xda CALLDATASIZE
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf DUP6
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 AND
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c DUP2
0x10d MSTORE
0x10e PUSH1 0x20
0x110 ADD
0x111 DUP5
0x112 DUP2
0x113 MSTORE
0x114 PUSH1 0x20
0x116 ADD
0x117 DUP1
0x118 PUSH1 0x20
0x11a ADD
0x11b DUP3
0x11c DUP2
0x11d SUB
0x11e DUP3
0x11f MSTORE
0x120 DUP5
0x121 DUP5
0x122 DUP3
0x123 DUP2
0x124 DUP2
0x125 MSTORE
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP3
0x12a POP
0x12b DUP1
0x12c DUP3
0x12d DUP5
0x12e CALLDATACOPY
0x12f DUP3
0x130 ADD
0x131 SWAP2
0x132 POP
0x133 POP
0x134 SWAP6
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 POP
0x13a POP
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f SWAP2
0x140 SUB
0x141 SWAP1
0x142 LOG1
0x143 STOP
---
0xb3: JUMPDEST 
0xb5: V45 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xd6: V46 = CALLER
0xd7: V47 = CALLVALUE
0xd8: V48 = 0x0
0xda: V49 = CALLDATASIZE
0xdb: V50 = 0x40
0xdd: V51 = M[0x40]
0xe0: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xf6: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x10d: M[V51] = V55
0x10e: V56 = 0x20
0x110: V57 = ADD 0x20 V51
0x113: M[V57] = V47
0x114: V58 = 0x20
0x116: V59 = ADD 0x20 V57
0x118: V60 = 0x20
0x11a: V61 = ADD 0x20 V59
0x11d: V62 = SUB V61 V51
0x11f: M[V59] = V62
0x125: M[V61] = V49
0x126: V63 = 0x20
0x128: V64 = ADD 0x20 V61
0x12e: CALLDATACOPY V64 0x0 V49
0x130: V65 = ADD V64 V49
0x13b: V66 = 0x40
0x13d: V67 = M[0x40]
0x140: V68 = SUB V65 V67
0x142: LOG V67 V68 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0x143: STOP 
---
Entry stack: [V11, V38]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0xd]
Successors: [0x14c, 0x150]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 DUP1
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x144: JUMPDEST 
0x145: V69 = CALLVALUE
0x147: V70 = ISZERO V69
0x148: V71 = 0x150
0x14b: JUMPI 0x150 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x144]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V72 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0x150
[0x150:0x184]
---
Predecessors: [0x144]
Successors: [0x19e]
---
0x150 JUMPDEST
0x151 POP
0x152 PUSH2 0x185
0x155 PUSH1 0x4
0x157 DUP1
0x158 CALLDATASIZE
0x159 SUB
0x15a DUP2
0x15b ADD
0x15c SWAP1
0x15d DUP1
0x15e DUP1
0x15f CALLDATALOAD
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 SWAP1
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP1
0x17b SWAP3
0x17c SWAP2
0x17d SWAP1
0x17e POP
0x17f POP
0x180 POP
0x181 PUSH2 0x19e
0x184 JUMP
---
0x150: JUMPDEST 
0x152: V73 = 0x185
0x155: V74 = 0x4
0x158: V75 = CALLDATASIZE
0x159: V76 = SUB V75 0x4
0x15b: V77 = ADD 0x4 V76
0x15f: V78 = CALLDATALOAD 0x4
0x160: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x177: V81 = 0x20
0x179: V82 = ADD 0x20 0x4
0x181: V83 = 0x19e
0x184: JUMP 0x19e
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0x185, V80]
Exit stack: [V11, 0x185, V80]

================================

Block 0x185
[0x185:0x186]
---
Predecessors: [0x4ed]
Successors: []
---
0x185 JUMPDEST
0x186 STOP
---
0x185: JUMPDEST 
0x186: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x187
[0x187:0x18e]
---
Predecessors: [0x41]
Successors: [0x18f, 0x193]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 DUP1
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x187: JUMPDEST 
0x188: V84 = CALLVALUE
0x18a: V85 = ISZERO V84
0x18b: V86 = 0x193
0x18e: JUMPI 0x193 V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V11, V84]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x187]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V87 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84]

================================

Block 0x193
[0x193:0x19b]
---
Predecessors: [0x187]
Successors: [0x4f3]
---
0x193 JUMPDEST
0x194 POP
0x195 PUSH2 0x19c
0x198 PUSH2 0x4f3
0x19b JUMP
---
0x193: JUMPDEST 
0x195: V88 = 0x19c
0x198: V89 = 0x4f3
0x19b: JUMP 0x4f3
---
Entry stack: [V11, V84]
Stack pops: 1
Stack additions: [0x19c]
Exit stack: [V11, 0x19c]

================================

Block 0x19c
[0x19c:0x19d]
---
Predecessors: [0x6f0]
Successors: []
---
0x19c JUMPDEST
0x19d STOP
---
0x19c: JUMPDEST 
0x19d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19e
[0x19e:0x1b1]
---
Predecessors: [0x150]
Successors: [0x1b2, 0x1b3]
---
0x19e JUMPDEST
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 PUSH1 0x0
0x1a4 PUSH1 0x1
0x1a6 PUSH1 0x0
0x1a8 DUP2
0x1a9 SLOAD
0x1aa DUP2
0x1ab LT
0x1ac ISZERO
0x1ad ISZERO
0x1ae PUSH2 0x1b3
0x1b1 JUMPI
---
0x19e: JUMPDEST 
0x19f: V90 = 0x0
0x1a2: V91 = 0x0
0x1a4: V92 = 0x1
0x1a6: V93 = 0x0
0x1a9: V94 = S[0x1]
0x1ab: V95 = LT 0x0 V94
0x1ac: V96 = ISZERO V95
0x1ad: V97 = ISZERO V96
0x1ae: V98 = 0x1b3
0x1b1: JUMPI 0x1b3 V97
---
Entry stack: [V11, 0x185, V80]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x1, 0x0]
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x0]

================================

Block 0x1b2
[0x1b2:0x1b2]
---
Predecessors: [0x19e]
Successors: []
---
0x1b2 INVALID
---
0x1b2: INVALID 
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x0]

================================

Block 0x1b3
[0x1b3:0x211]
---
Predecessors: [0x19e]
Successors: [0x212, 0x27b]
---
0x1b3 JUMPDEST
0x1b4 SWAP1
0x1b5 PUSH1 0x0
0x1b7 MSTORE
0x1b8 PUSH1 0x20
0x1ba PUSH1 0x0
0x1bc SHA3
0x1bd ADD
0x1be PUSH1 0x0
0x1c0 SWAP1
0x1c1 SLOAD
0x1c2 SWAP1
0x1c3 PUSH2 0x100
0x1c6 EXP
0x1c7 SWAP1
0x1c8 DIV
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 CALLER
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c EQ
0x20d DUP1
0x20e PUSH2 0x27b
0x211 JUMPI
---
0x1b3: JUMPDEST 
0x1b5: V99 = 0x0
0x1b7: M[0x0] = 0x1
0x1b8: V100 = 0x20
0x1ba: V101 = 0x0
0x1bc: V102 = SHA3 0x0 0x20
0x1bd: V103 = ADD V102 0x0
0x1be: V104 = 0x0
0x1c1: V105 = S[V103]
0x1c3: V106 = 0x100
0x1c6: V107 = EXP 0x100 0x0
0x1c8: V108 = DIV V105 0x1
0x1c9: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1df: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1f5: V113 = CALLER
0x1f6: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x20c: V116 = EQ V115 V112
0x20e: V117 = 0x27b
0x211: JUMPI 0x27b V116
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x0]
Stack pops: 2
Stack additions: [V116]
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, V116]

================================

Block 0x212
[0x212:0x21f]
---
Predecessors: [0x1b3]
Successors: [0x220, 0x221]
---
0x212 POP
0x213 PUSH1 0x1
0x215 DUP1
0x216 DUP2
0x217 SLOAD
0x218 DUP2
0x219 LT
0x21a ISZERO
0x21b ISZERO
0x21c PUSH2 0x221
0x21f JUMPI
---
0x213: V118 = 0x1
0x217: V119 = S[0x1]
0x219: V120 = LT 0x1 V119
0x21a: V121 = ISZERO V120
0x21b: V122 = ISZERO V121
0x21c: V123 = 0x221
0x21f: JUMPI 0x221 V122
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, V116]
Stack pops: 1
Stack additions: [0x1, 0x1]
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x1]

================================

Block 0x220
[0x220:0x220]
---
Predecessors: [0x212]
Successors: []
---
0x220 INVALID
---
0x220: INVALID 
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x1]

================================

Block 0x221
[0x221:0x27a]
---
Predecessors: [0x212]
Successors: [0x27b]
---
0x221 JUMPDEST
0x222 SWAP1
0x223 PUSH1 0x0
0x225 MSTORE
0x226 PUSH1 0x20
0x228 PUSH1 0x0
0x22a SHA3
0x22b ADD
0x22c PUSH1 0x0
0x22e SWAP1
0x22f SLOAD
0x230 SWAP1
0x231 PUSH2 0x100
0x234 EXP
0x235 SWAP1
0x236 DIV
0x237 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24c AND
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 AND
0x263 CALLER
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 AND
0x27a EQ
---
0x221: JUMPDEST 
0x223: V124 = 0x0
0x225: M[0x0] = 0x1
0x226: V125 = 0x20
0x228: V126 = 0x0
0x22a: V127 = SHA3 0x0 0x20
0x22b: V128 = ADD V127 0x1
0x22c: V129 = 0x0
0x22f: V130 = S[V128]
0x231: V131 = 0x100
0x234: V132 = EXP 0x100 0x0
0x236: V133 = DIV V130 0x1
0x237: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x24d: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x263: V138 = CALLER
0x264: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x27a: V141 = EQ V140 V137
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x1]
Stack pops: 2
Stack additions: [V141]
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, V141]

================================

Block 0x27b
[0x27b:0x280]
---
Predecessors: [0x1b3, 0x221]
Successors: [0x281, 0x2eb]
---
0x27b JUMPDEST
0x27c DUP1
0x27d PUSH2 0x2eb
0x280 JUMPI
---
0x27b: JUMPDEST 
0x27d: V142 = 0x2eb
0x280: JUMPI 0x2eb S0
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, S0]

================================

Block 0x281
[0x281:0x28f]
---
Predecessors: [0x27b]
Successors: [0x290, 0x291]
---
0x281 POP
0x282 PUSH1 0x1
0x284 PUSH1 0x2
0x286 DUP2
0x287 SLOAD
0x288 DUP2
0x289 LT
0x28a ISZERO
0x28b ISZERO
0x28c PUSH2 0x291
0x28f JUMPI
---
0x282: V143 = 0x1
0x284: V144 = 0x2
0x287: V145 = S[0x1]
0x289: V146 = LT 0x2 V145
0x28a: V147 = ISZERO V146
0x28b: V148 = ISZERO V147
0x28c: V149 = 0x291
0x28f: JUMPI 0x291 V148
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [0x1, 0x2]
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x2]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: [0x281]
Successors: []
---
0x290 INVALID
---
0x290: INVALID 
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x2]

================================

Block 0x291
[0x291:0x2ea]
---
Predecessors: [0x281]
Successors: [0x2eb]
---
0x291 JUMPDEST
0x292 SWAP1
0x293 PUSH1 0x0
0x295 MSTORE
0x296 PUSH1 0x20
0x298 PUSH1 0x0
0x29a SHA3
0x29b ADD
0x29c PUSH1 0x0
0x29e SWAP1
0x29f SLOAD
0x2a0 SWAP1
0x2a1 PUSH2 0x100
0x2a4 EXP
0x2a5 SWAP1
0x2a6 DIV
0x2a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bc AND
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 CALLER
0x2d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e9 AND
0x2ea EQ
---
0x291: JUMPDEST 
0x293: V150 = 0x0
0x295: M[0x0] = 0x1
0x296: V151 = 0x20
0x298: V152 = 0x0
0x29a: V153 = SHA3 0x0 0x20
0x29b: V154 = ADD V153 0x2
0x29c: V155 = 0x0
0x29f: V156 = S[V154]
0x2a1: V157 = 0x100
0x2a4: V158 = EXP 0x100 0x0
0x2a6: V159 = DIV V156 0x1
0x2a7: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bc: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2bd: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2d3: V164 = CALLER
0x2d4: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2ea: V167 = EQ V166 V163
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, 0x1, 0x2]
Stack pops: 2
Stack additions: [V167]
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, V167]

================================

Block 0x2eb
[0x2eb:0x2f1]
---
Predecessors: [0x27b, 0x291]
Successors: [0x2f2, 0x2f6]
---
0x2eb JUMPDEST
0x2ec ISZERO
0x2ed ISZERO
0x2ee PUSH2 0x2f6
0x2f1 JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V168 = ISZERO S0
0x2ed: V169 = ISZERO V168
0x2ee: V170 = 0x2f6
0x2f1: JUMPI 0x2f6 V169
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0]

================================

Block 0x2f2
[0x2f2:0x2f5]
---
Predecessors: [0x2eb]
Successors: []
---
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 REVERT
---
0x2f2: V171 = 0x0
0x2f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, 0x0, 0x0, 0x0]

================================

Block 0x2f6
[0x2f6:0x392]
---
Predecessors: [0x2eb]
Successors: [0x393, 0x397]
---
0x2f6 JUMPDEST
0x2f7 DUP4
0x2f8 SWAP3
0x2f9 POP
0x2fa ADDRESS
0x2fb SWAP2
0x2fc POP
0x2fd DUP3
0x2fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x313 AND
0x314 PUSH4 0x70a08231
0x319 DUP4
0x31a PUSH1 0x40
0x31c MLOAD
0x31d DUP3
0x31e PUSH4 0xffffffff
0x323 AND
0x324 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x342 MUL
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x4
0x347 ADD
0x348 DUP1
0x349 DUP3
0x34a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35f AND
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 AND
0x376 DUP2
0x377 MSTORE
0x378 PUSH1 0x20
0x37a ADD
0x37b SWAP2
0x37c POP
0x37d POP
0x37e PUSH1 0x20
0x380 PUSH1 0x40
0x382 MLOAD
0x383 DUP1
0x384 DUP4
0x385 SUB
0x386 DUP2
0x387 PUSH1 0x0
0x389 DUP8
0x38a DUP1
0x38b EXTCODESIZE
0x38c ISZERO
0x38d DUP1
0x38e ISZERO
0x38f PUSH2 0x397
0x392 JUMPI
---
0x2f6: JUMPDEST 
0x2fa: V172 = ADDRESS
0x2fe: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x313: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x314: V175 = 0x70a08231
0x31a: V176 = 0x40
0x31c: V177 = M[0x40]
0x31e: V178 = 0xffffffff
0x323: V179 = AND 0xffffffff 0x70a08231
0x324: V180 = 0x100000000000000000000000000000000000000000000000000000000
0x342: V181 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x344: M[V177] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x345: V182 = 0x4
0x347: V183 = ADD 0x4 V177
0x34a: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x360: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x377: M[V183] = V187
0x378: V188 = 0x20
0x37a: V189 = ADD 0x20 V183
0x37e: V190 = 0x20
0x380: V191 = 0x40
0x382: V192 = M[0x40]
0x385: V193 = SUB V189 V192
0x387: V194 = 0x0
0x38b: V195 = EXTCODESIZE V174
0x38c: V196 = ISZERO V195
0x38e: V197 = ISZERO V196
0x38f: V198 = 0x397
0x392: JUMPI 0x397 V197
---
Entry stack: [V11, 0x185, V80, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V172, S0, V174, 0x70a08231, V189, 0x20, V192, V193, V192, 0x0, V174, V196]
Exit stack: [V11, 0x185, V80, V80, V172, 0x0, V174, 0x70a08231, V189, 0x20, V192, V193, V192, 0x0, V174, V196]

================================

Block 0x393
[0x393:0x396]
---
Predecessors: [0x2f6]
Successors: []
---
0x393 PUSH1 0x0
0x395 DUP1
0x396 REVERT
---
0x393: V199 = 0x0
0x396: REVERT 0x0 0x0
---
Entry stack: [V11, 0x185, V80, V80, V172, 0x0, V174, 0x70a08231, V189, 0x20, V192, V193, V192, 0x0, V174, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, 0x0, V174, 0x70a08231, V189, 0x20, V192, V193, V192, 0x0, V174, V196]

================================

Block 0x397
[0x397:0x3a1]
---
Predecessors: [0x2f6]
Successors: [0x3a2, 0x3ab]
---
0x397 JUMPDEST
0x398 POP
0x399 GAS
0x39a CALL
0x39b ISZERO
0x39c DUP1
0x39d ISZERO
0x39e PUSH2 0x3ab
0x3a1 JUMPI
---
0x397: JUMPDEST 
0x399: V200 = GAS
0x39a: V201 = CALL V200 V174 0x0 V192 V193 V192 0x20
0x39b: V202 = ISZERO V201
0x39d: V203 = ISZERO V202
0x39e: V204 = 0x3ab
0x3a1: JUMPI 0x3ab V203
---
Entry stack: [V11, 0x185, V80, V80, V172, 0x0, V174, 0x70a08231, V189, 0x20, V192, V193, V192, 0x0, V174, V196]
Stack pops: 7
Stack additions: [V202]
Exit stack: [V11, 0x185, V80, V80, V172, 0x0, V174, 0x70a08231, V189, V202]

================================

Block 0x3a2
[0x3a2:0x3aa]
---
Predecessors: [0x397]
Successors: []
---
0x3a2 RETURNDATASIZE
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 RETURNDATACOPY
0x3a7 RETURNDATASIZE
0x3a8 PUSH1 0x0
0x3aa REVERT
---
0x3a2: V205 = RETURNDATASIZE
0x3a3: V206 = 0x0
0x3a6: RETURNDATACOPY 0x0 0x0 V205
0x3a7: V207 = RETURNDATASIZE
0x3a8: V208 = 0x0
0x3aa: REVERT 0x0 V207
---
Entry stack: [V11, 0x185, V80, V80, V172, 0x0, V174, 0x70a08231, V189, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, 0x0, V174, 0x70a08231, V189, V202]

================================

Block 0x3ab
[0x3ab:0x3bc]
---
Predecessors: [0x397]
Successors: [0x3bd, 0x3c1]
---
0x3ab JUMPDEST
0x3ac POP
0x3ad POP
0x3ae POP
0x3af POP
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 RETURNDATASIZE
0x3b4 PUSH1 0x20
0x3b6 DUP2
0x3b7 LT
0x3b8 ISZERO
0x3b9 PUSH2 0x3c1
0x3bc JUMPI
---
0x3ab: JUMPDEST 
0x3b0: V209 = 0x40
0x3b2: V210 = M[0x40]
0x3b3: V211 = RETURNDATASIZE
0x3b4: V212 = 0x20
0x3b7: V213 = LT V211 0x20
0x3b8: V214 = ISZERO V213
0x3b9: V215 = 0x3c1
0x3bc: JUMPI 0x3c1 V214
---
Entry stack: [V11, 0x185, V80, V80, V172, 0x0, V174, 0x70a08231, V189, V202]
Stack pops: 4
Stack additions: [V210, V211]
Exit stack: [V11, 0x185, V80, V80, V172, 0x0, V210, V211]

================================

Block 0x3bd
[0x3bd:0x3c0]
---
Predecessors: [0x3ab]
Successors: []
---
0x3bd PUSH1 0x0
0x3bf DUP1
0x3c0 REVERT
---
0x3bd: V216 = 0x0
0x3c0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x185, V80, V80, V172, 0x0, V210, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, 0x0, V210, V211]

================================

Block 0x3c1
[0x3c1:0x3dd]
---
Predecessors: [0x3ab]
Successors: [0x3de, 0x3e2]
---
0x3c1 JUMPDEST
0x3c2 DUP2
0x3c3 ADD
0x3c4 SWAP1
0x3c5 DUP1
0x3c6 DUP1
0x3c7 MLOAD
0x3c8 SWAP1
0x3c9 PUSH1 0x20
0x3cb ADD
0x3cc SWAP1
0x3cd SWAP3
0x3ce SWAP2
0x3cf SWAP1
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 SWAP1
0x3d4 POP
0x3d5 PUSH1 0x0
0x3d7 DUP2
0x3d8 EQ
0x3d9 ISZERO
0x3da PUSH2 0x3e2
0x3dd JUMPI
---
0x3c1: JUMPDEST 
0x3c3: V217 = ADD V210 V211
0x3c7: V218 = M[V210]
0x3c9: V219 = 0x20
0x3cb: V220 = ADD 0x20 V210
0x3d5: V221 = 0x0
0x3d8: V222 = EQ V218 0x0
0x3d9: V223 = ISZERO V222
0x3da: V224 = 0x3e2
0x3dd: JUMPI 0x3e2 V223
---
Entry stack: [V11, 0x185, V80, V80, V172, 0x0, V210, V211]
Stack pops: 3
Stack additions: [V218]
Exit stack: [V11, 0x185, V80, V80, V172, V218]

================================

Block 0x3de
[0x3de:0x3e1]
---
Predecessors: [0x3c1]
Successors: [0x4ed]
---
0x3de PUSH2 0x4ed
0x3e1 JUMP
---
0x3de: V225 = 0x4ed
0x3e1: JUMP 0x4ed
---
Entry stack: [V11, 0x185, V80, V80, V172, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, V218]

================================

Block 0x3e2
[0x3e2:0x4a1]
---
Predecessors: [0x3c1]
Successors: [0x4a2, 0x4a6]
---
0x3e2 JUMPDEST
0x3e3 DUP3
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa PUSH4 0xa9059cbb
0x3ff PUSH1 0x0
0x401 DUP1
0x402 SWAP1
0x403 SLOAD
0x404 SWAP1
0x405 PUSH2 0x100
0x408 EXP
0x409 SWAP1
0x40a DIV
0x40b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x420 AND
0x421 DUP4
0x422 PUSH1 0x40
0x424 MLOAD
0x425 DUP4
0x426 PUSH4 0xffffffff
0x42b AND
0x42c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x44a MUL
0x44b DUP2
0x44c MSTORE
0x44d PUSH1 0x4
0x44f ADD
0x450 DUP1
0x451 DUP4
0x452 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x467 AND
0x468 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47d AND
0x47e DUP2
0x47f MSTORE
0x480 PUSH1 0x20
0x482 ADD
0x483 DUP3
0x484 DUP2
0x485 MSTORE
0x486 PUSH1 0x20
0x488 ADD
0x489 SWAP3
0x48a POP
0x48b POP
0x48c POP
0x48d PUSH1 0x20
0x48f PUSH1 0x40
0x491 MLOAD
0x492 DUP1
0x493 DUP4
0x494 SUB
0x495 DUP2
0x496 PUSH1 0x0
0x498 DUP8
0x499 DUP1
0x49a EXTCODESIZE
0x49b ISZERO
0x49c DUP1
0x49d ISZERO
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x3e2: JUMPDEST 
0x3e4: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x3fa: V228 = 0xa9059cbb
0x3ff: V229 = 0x0
0x403: V230 = S[0x0]
0x405: V231 = 0x100
0x408: V232 = EXP 0x100 0x0
0x40a: V233 = DIV V230 0x1
0x40b: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x420: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x422: V236 = 0x40
0x424: V237 = M[0x40]
0x426: V238 = 0xffffffff
0x42b: V239 = AND 0xffffffff 0xa9059cbb
0x42c: V240 = 0x100000000000000000000000000000000000000000000000000000000
0x44a: V241 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x44c: M[V237] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x44d: V242 = 0x4
0x44f: V243 = ADD 0x4 V237
0x452: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x467: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x468: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x47d: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x47f: M[V243] = V247
0x480: V248 = 0x20
0x482: V249 = ADD 0x20 V243
0x485: M[V249] = V218
0x486: V250 = 0x20
0x488: V251 = ADD 0x20 V249
0x48d: V252 = 0x20
0x48f: V253 = 0x40
0x491: V254 = M[0x40]
0x494: V255 = SUB V251 V254
0x496: V256 = 0x0
0x49a: V257 = EXTCODESIZE V227
0x49b: V258 = ISZERO V257
0x49d: V259 = ISZERO V258
0x49e: V260 = 0x4a6
0x4a1: JUMPI 0x4a6 V259
---
Entry stack: [V11, 0x185, V80, V80, V172, V218]
Stack pops: 3
Stack additions: [S2, S1, S0, V227, 0xa9059cbb, V251, 0x20, V254, V255, V254, 0x0, V227, V258]
Exit stack: [V11, 0x185, V80, V80, V172, V218, V227, 0xa9059cbb, V251, 0x20, V254, V255, V254, 0x0, V227, V258]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x3e2]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V261 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x185, V80, V80, V172, V218, V227, 0xa9059cbb, V251, 0x20, V254, V255, V254, 0x0, V227, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, V218, V227, 0xa9059cbb, V251, 0x20, V254, V255, V254, 0x0, V227, V258]

================================

Block 0x4a6
[0x4a6:0x4b0]
---
Predecessors: [0x3e2]
Successors: [0x4b1, 0x4ba]
---
0x4a6 JUMPDEST
0x4a7 POP
0x4a8 GAS
0x4a9 CALL
0x4aa ISZERO
0x4ab DUP1
0x4ac ISZERO
0x4ad PUSH2 0x4ba
0x4b0 JUMPI
---
0x4a6: JUMPDEST 
0x4a8: V262 = GAS
0x4a9: V263 = CALL V262 V227 0x0 V254 V255 V254 0x20
0x4aa: V264 = ISZERO V263
0x4ac: V265 = ISZERO V264
0x4ad: V266 = 0x4ba
0x4b0: JUMPI 0x4ba V265
---
Entry stack: [V11, 0x185, V80, V80, V172, V218, V227, 0xa9059cbb, V251, 0x20, V254, V255, V254, 0x0, V227, V258]
Stack pops: 7
Stack additions: [V264]
Exit stack: [V11, 0x185, V80, V80, V172, V218, V227, 0xa9059cbb, V251, V264]

================================

Block 0x4b1
[0x4b1:0x4b9]
---
Predecessors: [0x4a6]
Successors: []
---
0x4b1 RETURNDATASIZE
0x4b2 PUSH1 0x0
0x4b4 DUP1
0x4b5 RETURNDATACOPY
0x4b6 RETURNDATASIZE
0x4b7 PUSH1 0x0
0x4b9 REVERT
---
0x4b1: V267 = RETURNDATASIZE
0x4b2: V268 = 0x0
0x4b5: RETURNDATACOPY 0x0 0x0 V267
0x4b6: V269 = RETURNDATASIZE
0x4b7: V270 = 0x0
0x4b9: REVERT 0x0 V269
---
Entry stack: [V11, 0x185, V80, V80, V172, V218, V227, 0xa9059cbb, V251, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, V218, V227, 0xa9059cbb, V251, V264]

================================

Block 0x4ba
[0x4ba:0x4cb]
---
Predecessors: [0x4a6]
Successors: [0x4cc, 0x4d0]
---
0x4ba JUMPDEST
0x4bb POP
0x4bc POP
0x4bd POP
0x4be POP
0x4bf PUSH1 0x40
0x4c1 MLOAD
0x4c2 RETURNDATASIZE
0x4c3 PUSH1 0x20
0x4c5 DUP2
0x4c6 LT
0x4c7 ISZERO
0x4c8 PUSH2 0x4d0
0x4cb JUMPI
---
0x4ba: JUMPDEST 
0x4bf: V271 = 0x40
0x4c1: V272 = M[0x40]
0x4c2: V273 = RETURNDATASIZE
0x4c3: V274 = 0x20
0x4c6: V275 = LT V273 0x20
0x4c7: V276 = ISZERO V275
0x4c8: V277 = 0x4d0
0x4cb: JUMPI 0x4d0 V276
---
Entry stack: [V11, 0x185, V80, V80, V172, V218, V227, 0xa9059cbb, V251, V264]
Stack pops: 4
Stack additions: [V272, V273]
Exit stack: [V11, 0x185, V80, V80, V172, V218, V272, V273]

================================

Block 0x4cc
[0x4cc:0x4cf]
---
Predecessors: [0x4ba]
Successors: []
---
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf REVERT
---
0x4cc: V278 = 0x0
0x4cf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x185, V80, V80, V172, V218, V272, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, V218, V272, V273]

================================

Block 0x4d0
[0x4d0:0x4e7]
---
Predecessors: [0x4ba]
Successors: [0x4e8, 0x4ec]
---
0x4d0 JUMPDEST
0x4d1 DUP2
0x4d2 ADD
0x4d3 SWAP1
0x4d4 DUP1
0x4d5 DUP1
0x4d6 MLOAD
0x4d7 SWAP1
0x4d8 PUSH1 0x20
0x4da ADD
0x4db SWAP1
0x4dc SWAP3
0x4dd SWAP2
0x4de SWAP1
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 ISZERO
0x4e3 ISZERO
0x4e4 PUSH2 0x4ec
0x4e7 JUMPI
---
0x4d0: JUMPDEST 
0x4d2: V279 = ADD V272 V273
0x4d6: V280 = M[V272]
0x4d8: V281 = 0x20
0x4da: V282 = ADD 0x20 V272
0x4e2: V283 = ISZERO V280
0x4e3: V284 = ISZERO V283
0x4e4: V285 = 0x4ec
0x4e7: JUMPI 0x4ec V284
---
Entry stack: [V11, 0x185, V80, V80, V172, V218, V272, V273]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, V218]

================================

Block 0x4e8
[0x4e8:0x4eb]
---
Predecessors: [0x4d0]
Successors: []
---
0x4e8 PUSH1 0x0
0x4ea DUP1
0x4eb REVERT
---
0x4e8: V286 = 0x0
0x4eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x185, V80, V80, V172, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, V218]

================================

Block 0x4ec
[0x4ec:0x4ec]
---
Predecessors: [0x4d0]
Successors: [0x4ed]
---
0x4ec JUMPDEST
---
0x4ec: JUMPDEST 
---
Entry stack: [V11, 0x185, V80, V80, V172, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x185, V80, V80, V172, V218]

================================

Block 0x4ed
[0x4ed:0x4f2]
---
Predecessors: [0x3de, 0x4ec]
Successors: [0x185]
---
0x4ed JUMPDEST
0x4ee POP
0x4ef POP
0x4f0 POP
0x4f1 POP
0x4f2 JUMP
---
0x4ed: JUMPDEST 
0x4f2: JUMP 0x185
---
Entry stack: [V11, 0x185, V80, V80, V172, V218]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x4f3
[0x4f3:0x503]
---
Predecessors: [0x193]
Successors: [0x504, 0x505]
---
0x4f3 JUMPDEST
0x4f4 PUSH1 0x0
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0x0
0x4fa DUP2
0x4fb SLOAD
0x4fc DUP2
0x4fd LT
0x4fe ISZERO
0x4ff ISZERO
0x500 PUSH2 0x505
0x503 JUMPI
---
0x4f3: JUMPDEST 
0x4f4: V287 = 0x0
0x4f6: V288 = 0x1
0x4f8: V289 = 0x0
0x4fb: V290 = S[0x1]
0x4fd: V291 = LT 0x0 V290
0x4fe: V292 = ISZERO V291
0x4ff: V293 = ISZERO V292
0x500: V294 = 0x505
0x503: JUMPI 0x505 V293
---
Entry stack: [V11, 0x19c]
Stack pops: 0
Stack additions: [0x0, 0x1, 0x0]
Exit stack: [V11, 0x19c, 0x0, 0x1, 0x0]

================================

Block 0x504
[0x504:0x504]
---
Predecessors: [0x4f3]
Successors: []
---
0x504 INVALID
---
0x504: INVALID 
---
Entry stack: [V11, 0x19c, 0x0, 0x1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19c, 0x0, 0x1, 0x0]

================================

Block 0x505
[0x505:0x563]
---
Predecessors: [0x4f3]
Successors: [0x564, 0x5cd]
---
0x505 JUMPDEST
0x506 SWAP1
0x507 PUSH1 0x0
0x509 MSTORE
0x50a PUSH1 0x20
0x50c PUSH1 0x0
0x50e SHA3
0x50f ADD
0x510 PUSH1 0x0
0x512 SWAP1
0x513 SLOAD
0x514 SWAP1
0x515 PUSH2 0x100
0x518 EXP
0x519 SWAP1
0x51a DIV
0x51b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x530 AND
0x531 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x546 AND
0x547 CALLER
0x548 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55d AND
0x55e EQ
0x55f DUP1
0x560 PUSH2 0x5cd
0x563 JUMPI
---
0x505: JUMPDEST 
0x507: V295 = 0x0
0x509: M[0x0] = 0x1
0x50a: V296 = 0x20
0x50c: V297 = 0x0
0x50e: V298 = SHA3 0x0 0x20
0x50f: V299 = ADD V298 0x0
0x510: V300 = 0x0
0x513: V301 = S[V299]
0x515: V302 = 0x100
0x518: V303 = EXP 0x100 0x0
0x51a: V304 = DIV V301 0x1
0x51b: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x530: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x531: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x546: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x547: V309 = CALLER
0x548: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x55e: V312 = EQ V311 V308
0x560: V313 = 0x5cd
0x563: JUMPI 0x5cd V312
---
Entry stack: [V11, 0x19c, 0x0, 0x1, 0x0]
Stack pops: 2
Stack additions: [V312]
Exit stack: [V11, 0x19c, 0x0, V312]

================================

Block 0x564
[0x564:0x571]
---
Predecessors: [0x505]
Successors: [0x572, 0x573]
---
0x564 POP
0x565 PUSH1 0x1
0x567 DUP1
0x568 DUP2
0x569 SLOAD
0x56a DUP2
0x56b LT
0x56c ISZERO
0x56d ISZERO
0x56e PUSH2 0x573
0x571 JUMPI
---
0x565: V314 = 0x1
0x569: V315 = S[0x1]
0x56b: V316 = LT 0x1 V315
0x56c: V317 = ISZERO V316
0x56d: V318 = ISZERO V317
0x56e: V319 = 0x573
0x571: JUMPI 0x573 V318
---
Entry stack: [V11, 0x19c, 0x0, V312]
Stack pops: 1
Stack additions: [0x1, 0x1]
Exit stack: [V11, 0x19c, 0x0, 0x1, 0x1]

================================

Block 0x572
[0x572:0x572]
---
Predecessors: [0x564]
Successors: []
---
0x572 INVALID
---
0x572: INVALID 
---
Entry stack: [V11, 0x19c, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19c, 0x0, 0x1, 0x1]

================================

Block 0x573
[0x573:0x5cc]
---
Predecessors: [0x564]
Successors: [0x5cd]
---
0x573 JUMPDEST
0x574 SWAP1
0x575 PUSH1 0x0
0x577 MSTORE
0x578 PUSH1 0x20
0x57a PUSH1 0x0
0x57c SHA3
0x57d ADD
0x57e PUSH1 0x0
0x580 SWAP1
0x581 SLOAD
0x582 SWAP1
0x583 PUSH2 0x100
0x586 EXP
0x587 SWAP1
0x588 DIV
0x589 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59e AND
0x59f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b4 AND
0x5b5 CALLER
0x5b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cb AND
0x5cc EQ
---
0x573: JUMPDEST 
0x575: V320 = 0x0
0x577: M[0x0] = 0x1
0x578: V321 = 0x20
0x57a: V322 = 0x0
0x57c: V323 = SHA3 0x0 0x20
0x57d: V324 = ADD V323 0x1
0x57e: V325 = 0x0
0x581: V326 = S[V324]
0x583: V327 = 0x100
0x586: V328 = EXP 0x100 0x0
0x588: V329 = DIV V326 0x1
0x589: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x59f: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b4: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x5b5: V334 = CALLER
0x5b6: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x5cc: V337 = EQ V336 V333
---
Entry stack: [V11, 0x19c, 0x0, 0x1, 0x1]
Stack pops: 2
Stack additions: [V337]
Exit stack: [V11, 0x19c, 0x0, V337]

================================

Block 0x5cd
[0x5cd:0x5d2]
---
Predecessors: [0x505, 0x573]
Successors: [0x5d3, 0x63d]
---
0x5cd JUMPDEST
0x5ce DUP1
0x5cf PUSH2 0x63d
0x5d2 JUMPI
---
0x5cd: JUMPDEST 
0x5cf: V338 = 0x63d
0x5d2: JUMPI 0x63d S0
---
Entry stack: [V11, 0x19c, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x19c, 0x0, S0]

================================

Block 0x5d3
[0x5d3:0x5e1]
---
Predecessors: [0x5cd]
Successors: [0x5e2, 0x5e3]
---
0x5d3 POP
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0x2
0x5d8 DUP2
0x5d9 SLOAD
0x5da DUP2
0x5db LT
0x5dc ISZERO
0x5dd ISZERO
0x5de PUSH2 0x5e3
0x5e1 JUMPI
---
0x5d4: V339 = 0x1
0x5d6: V340 = 0x2
0x5d9: V341 = S[0x1]
0x5db: V342 = LT 0x2 V341
0x5dc: V343 = ISZERO V342
0x5dd: V344 = ISZERO V343
0x5de: V345 = 0x5e3
0x5e1: JUMPI 0x5e3 V344
---
Entry stack: [V11, 0x19c, 0x0, S0]
Stack pops: 1
Stack additions: [0x1, 0x2]
Exit stack: [V11, 0x19c, 0x0, 0x1, 0x2]

================================

Block 0x5e2
[0x5e2:0x5e2]
---
Predecessors: [0x5d3]
Successors: []
---
0x5e2 INVALID
---
0x5e2: INVALID 
---
Entry stack: [V11, 0x19c, 0x0, 0x1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19c, 0x0, 0x1, 0x2]

================================

Block 0x5e3
[0x5e3:0x63c]
---
Predecessors: [0x5d3]
Successors: [0x63d]
---
0x5e3 JUMPDEST
0x5e4 SWAP1
0x5e5 PUSH1 0x0
0x5e7 MSTORE
0x5e8 PUSH1 0x20
0x5ea PUSH1 0x0
0x5ec SHA3
0x5ed ADD
0x5ee PUSH1 0x0
0x5f0 SWAP1
0x5f1 SLOAD
0x5f2 SWAP1
0x5f3 PUSH2 0x100
0x5f6 EXP
0x5f7 SWAP1
0x5f8 DIV
0x5f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60e AND
0x60f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x624 AND
0x625 CALLER
0x626 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63b AND
0x63c EQ
---
0x5e3: JUMPDEST 
0x5e5: V346 = 0x0
0x5e7: M[0x0] = 0x1
0x5e8: V347 = 0x20
0x5ea: V348 = 0x0
0x5ec: V349 = SHA3 0x0 0x20
0x5ed: V350 = ADD V349 0x2
0x5ee: V351 = 0x0
0x5f1: V352 = S[V350]
0x5f3: V353 = 0x100
0x5f6: V354 = EXP 0x100 0x0
0x5f8: V355 = DIV V352 0x1
0x5f9: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x60e: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x60f: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x624: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x625: V360 = CALLER
0x626: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x63b: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x63c: V363 = EQ V362 V359
---
Entry stack: [V11, 0x19c, 0x0, 0x1, 0x2]
Stack pops: 2
Stack additions: [V363]
Exit stack: [V11, 0x19c, 0x0, V363]

================================

Block 0x63d
[0x63d:0x643]
---
Predecessors: [0x5cd, 0x5e3]
Successors: [0x644, 0x648]
---
0x63d JUMPDEST
0x63e ISZERO
0x63f ISZERO
0x640 PUSH2 0x648
0x643 JUMPI
---
0x63d: JUMPDEST 
0x63e: V364 = ISZERO S0
0x63f: V365 = ISZERO V364
0x640: V366 = 0x648
0x643: JUMPI 0x648 V365
---
Entry stack: [V11, 0x19c, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x19c, 0x0]

================================

Block 0x644
[0x644:0x647]
---
Predecessors: [0x63d]
Successors: []
---
0x644 PUSH1 0x0
0x646 DUP1
0x647 REVERT
---
0x644: V367 = 0x0
0x647: REVERT 0x0 0x0
---
Entry stack: [V11, 0x19c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19c, 0x0]

================================

Block 0x648
[0x648:0x66b]
---
Predecessors: [0x63d]
Successors: [0x66c, 0x670]
---
0x648 JUMPDEST
0x649 ADDRESS
0x64a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65f AND
0x660 BALANCE
0x661 SWAP1
0x662 POP
0x663 PUSH1 0x0
0x665 DUP2
0x666 EQ
0x667 ISZERO
0x668 PUSH2 0x670
0x66b JUMPI
---
0x648: JUMPDEST 
0x649: V368 = ADDRESS
0x64a: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x65f: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x660: V371 = BALANCE V370
0x663: V372 = 0x0
0x666: V373 = EQ V371 0x0
0x667: V374 = ISZERO V373
0x668: V375 = 0x670
0x66b: JUMPI 0x670 V374
---
Entry stack: [V11, 0x19c, 0x0]
Stack pops: 1
Stack additions: [V371]
Exit stack: [V11, 0x19c, V371]

================================

Block 0x66c
[0x66c:0x66f]
---
Predecessors: [0x648]
Successors: [0x6f0]
---
0x66c PUSH2 0x6f0
0x66f JUMP
---
0x66c: V376 = 0x6f0
0x66f: JUMP 0x6f0
---
Entry stack: [V11, 0x19c, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19c, V371]

================================

Block 0x670
[0x670:0x6e4]
---
Predecessors: [0x648]
Successors: [0x6e5, 0x6ee]
---
0x670 JUMPDEST
0x671 PUSH1 0x0
0x673 DUP1
0x674 SWAP1
0x675 SLOAD
0x676 SWAP1
0x677 PUSH2 0x100
0x67a EXP
0x67b SWAP1
0x67c DIV
0x67d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x692 AND
0x693 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a8 AND
0x6a9 PUSH2 0x8fc
0x6ac ADDRESS
0x6ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c2 AND
0x6c3 BALANCE
0x6c4 SWAP1
0x6c5 DUP2
0x6c6 ISZERO
0x6c7 MUL
0x6c8 SWAP1
0x6c9 PUSH1 0x40
0x6cb MLOAD
0x6cc PUSH1 0x0
0x6ce PUSH1 0x40
0x6d0 MLOAD
0x6d1 DUP1
0x6d2 DUP4
0x6d3 SUB
0x6d4 DUP2
0x6d5 DUP6
0x6d6 DUP9
0x6d7 DUP9
0x6d8 CALL
0x6d9 SWAP4
0x6da POP
0x6db POP
0x6dc POP
0x6dd POP
0x6de ISZERO
0x6df DUP1
0x6e0 ISZERO
0x6e1 PUSH2 0x6ee
0x6e4 JUMPI
---
0x670: JUMPDEST 
0x671: V377 = 0x0
0x675: V378 = S[0x0]
0x677: V379 = 0x100
0x67a: V380 = EXP 0x100 0x0
0x67c: V381 = DIV V378 0x1
0x67d: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x692: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x693: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x6a9: V386 = 0x8fc
0x6ac: V387 = ADDRESS
0x6ad: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c2: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x6c3: V390 = BALANCE V389
0x6c6: V391 = ISZERO V390
0x6c7: V392 = MUL V391 0x8fc
0x6c9: V393 = 0x40
0x6cb: V394 = M[0x40]
0x6cc: V395 = 0x0
0x6ce: V396 = 0x40
0x6d0: V397 = M[0x40]
0x6d3: V398 = SUB V394 V397
0x6d8: V399 = CALL V392 V385 V390 V397 V398 V397 0x0
0x6de: V400 = ISZERO V399
0x6e0: V401 = ISZERO V400
0x6e1: V402 = 0x6ee
0x6e4: JUMPI 0x6ee V401
---
Entry stack: [V11, 0x19c, V371]
Stack pops: 0
Stack additions: [V400]
Exit stack: [V11, 0x19c, V371, V400]

================================

Block 0x6e5
[0x6e5:0x6ed]
---
Predecessors: [0x670]
Successors: []
---
0x6e5 RETURNDATASIZE
0x6e6 PUSH1 0x0
0x6e8 DUP1
0x6e9 RETURNDATACOPY
0x6ea RETURNDATASIZE
0x6eb PUSH1 0x0
0x6ed REVERT
---
0x6e5: V403 = RETURNDATASIZE
0x6e6: V404 = 0x0
0x6e9: RETURNDATACOPY 0x0 0x0 V403
0x6ea: V405 = RETURNDATASIZE
0x6eb: V406 = 0x0
0x6ed: REVERT 0x0 V405
---
Entry stack: [V11, 0x19c, V371, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19c, V371, V400]

================================

Block 0x6ee
[0x6ee:0x6ef]
---
Predecessors: [0x670]
Successors: [0x6f0]
---
0x6ee JUMPDEST
0x6ef POP
---
0x6ee: JUMPDEST 
---
Entry stack: [V11, 0x19c, V371, V400]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x19c, V371]

================================

Block 0x6f0
[0x6f0:0x6f2]
---
Predecessors: [0x66c, 0x6ee]
Successors: [0x19c]
---
0x6f0 JUMPDEST
0x6f1 POP
0x6f2 JUMP
---
0x6f0: JUMPDEST 
0x6f2: JUMP 0x19c
---
Entry stack: [V11, 0x19c, V371]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f3
[0x6f3:0x72b]
---
Predecessors: []
Successors: []
---
0x6f3 STOP
0x6f4 LOG1
0x6f5 PUSH6 0x627a7a723058
0x6fc SHA3
0x6fd BYTE
0x6fe PUSH13 0xe79f1df42dc488facad527dd29
0x70c PUSH31 0x86056a7124ee321922887c80490541e0029
---
0x6f3: STOP 
0x6f4: LOG S0 S1 S2
0x6f5: V407 = 0x627a7a723058
0x6fc: V408 = SHA3 0x627a7a723058 S3
0x6fd: V409 = BYTE V408 S4
0x6fe: V410 = 0xe79f1df42dc488facad527dd29
0x70c: V411 = 0x86056a7124ee321922887c80490541e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x86056a7124ee321922887c80490541e0029, 0xe79f1df42dc488facad527dd29, V409]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ef13367
Entry block: 0x144
Exit block: 0x4e8
Body: 0x144, 0x14c, 0x150, 0x185, 0x19e, 0x1b2, 0x1b3, 0x212, 0x220, 0x221, 0x27b, 0x281, 0x290, 0x291, 0x2eb, 0x2f2, 0x2f6, 0x393, 0x397, 0x3a2, 0x3ab, 0x3bd, 0x3c1, 0x3de, 0x3e2, 0x4a2, 0x4a6, 0x4b1, 0x4ba, 0x4cc, 0x4d0, 0x4e8, 0x4ec, 0x4ed

Function 1:
Public function signature: 0x6b9f96ea
Entry block: 0x187
Exit block: 0x19c
Body: 0x187, 0x18f, 0x193, 0x19c, 0x4f3, 0x504, 0x505, 0x564, 0x572, 0x573, 0x5cd, 0x5d3, 0x5e2, 0x5e3, 0x63d, 0x644, 0x648, 0x66c, 0x670, 0x6e5, 0x6ee, 0x6f0

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0xaa
Body: 0x4c, 0xaa, 0xb3

