Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x66]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x41b0a3ed
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x66
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x41b0a3ed
0x3b: V13 = EQ V11 0x41b0a3ed
0x3c: V14 = 0x66
0x3f: JUMPI 0x66 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xdb]
---
0x40 DUP1
0x41 PUSH4 0x7cadfa34
0x46 EQ
0x47 PUSH2 0xdb
0x4a JUMPI
---
0x41: V15 = 0x7cadfa34
0x46: V16 = EQ 0x7cadfa34 V11
0x47: V17 = 0xdb
0x4a: JUMPI 0xdb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xe5]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0xe5
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0xe5
0x55: JUMPI 0xe5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xfa]
---
0x56 DUP1
0x57 PUSH4 0xbe9a6555
0x5c EQ
0x5d PUSH2 0xfa
0x60 JUMPI
---
0x57: V21 = 0xbe9a6555
0x5c: V22 = EQ 0xbe9a6555 V11
0x5d: V23 = 0xfa
0x60: JUMPI 0xfa V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x65]
---
Predecessors: [0x0, 0x56]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0xbe]
---
Predecessors: [0xd]
Successors: [0x102]
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 DUP1
0x6a MLOAD
0x6b PUSH1 0x20
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATALOAD
0x71 DUP1
0x72 DUP3
0x73 ADD
0x74 CALLDATALOAD
0x75 DUP4
0x76 DUP2
0x77 MUL
0x78 DUP1
0x79 DUP7
0x7a ADD
0x7b DUP6
0x7c ADD
0x7d SWAP1
0x7e SWAP7
0x7f MSTORE
0x80 DUP1
0x81 DUP6
0x82 MSTORE
0x83 PUSH2 0xbf
0x86 SWAP6
0x87 CALLDATASIZE
0x88 SWAP6
0x89 SWAP4
0x8a SWAP5
0x8b PUSH1 0x24
0x8d SWAP5
0x8e SWAP4
0x8f DUP6
0x90 ADD
0x91 SWAP3
0x92 SWAP2
0x93 DUP3
0x94 SWAP2
0x95 DUP6
0x96 ADD
0x97 SWAP1
0x98 DUP5
0x99 SWAP1
0x9a DUP1
0x9b DUP3
0x9c DUP5
0x9d CALLDATACOPY
0x9e POP
0x9f SWAP5
0xa0 SWAP8
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 DUP4
0xa5 CALLDATALOAD
0xa6 PUSH1 0xff
0xa8 AND
0xa9 SWAP5
0xaa POP
0xab POP
0xac POP
0xad POP
0xae PUSH1 0x20
0xb0 ADD
0xb1 CALLDATALOAD
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 PUSH1 0x2
0xb8 EXP
0xb9 SUB
0xba AND
0xbb PUSH2 0x102
0xbe JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x6a: V26 = M[0x40]
0x6b: V27 = 0x20
0x6d: V28 = 0x4
0x70: V29 = CALLDATALOAD 0x4
0x73: V30 = ADD 0x4 V29
0x74: V31 = CALLDATALOAD V30
0x77: V32 = MUL V31 0x20
0x7a: V33 = ADD V26 V32
0x7c: V34 = ADD 0x20 V33
0x7f: M[0x40] = V34
0x82: M[V26] = V31
0x83: V35 = 0xbf
0x87: V36 = CALLDATASIZE
0x8b: V37 = 0x24
0x90: V38 = ADD 0x24 V29
0x96: V39 = ADD V26 0x20
0x9d: CALLDATACOPY V39 V38 V32
0xa5: V40 = CALLDATALOAD 0x24
0xa6: V41 = 0xff
0xa8: V42 = AND 0xff V40
0xae: V43 = 0x20
0xb0: V44 = ADD 0x20 0x24
0xb1: V45 = CALLDATALOAD 0x44
0xb2: V46 = 0x1
0xb4: V47 = 0xa0
0xb6: V48 = 0x2
0xb8: V49 = EXP 0x2 0xa0
0xb9: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xbb: V52 = 0x102
0xbe: JUMP 0x102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbf, V26, V42, V51]
Exit stack: [V11, 0xbf, V26, V42, V51]

================================

Block 0xbf
[0xbf:0xda]
---
Predecessors: [0x18b, 0x2e7, 0x2ea, 0x5a9]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x40
0xc2 DUP1
0xc3 MLOAD
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc SWAP1
0xcd SWAP3
0xce AND
0xcf DUP3
0xd0 MSTORE
0xd1 MLOAD
0xd2 SWAP1
0xd3 DUP2
0xd4 SWAP1
0xd5 SUB
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda RETURN
---
0xbf: JUMPDEST 
0xc0: V53 = 0x40
0xc3: V54 = M[0x40]
0xc4: V55 = 0x1
0xc6: V56 = 0xa0
0xc8: V57 = 0x2
0xca: V58 = EXP 0x2 0xa0
0xcb: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V60 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd0: M[V54] = V60
0xd1: V61 = M[0x40]
0xd5: V62 = SUB V54 V61
0xd6: V63 = 0x20
0xd8: V64 = ADD 0x20 V62
0xda: RETURN V61 V64
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0x40]
Successors: [0x195]
---
0xdb JUMPDEST
0xdc PUSH2 0xe3
0xdf PUSH2 0x195
0xe2 JUMP
---
0xdb: JUMPDEST 
0xdc: V65 = 0xe3
0xdf: V66 = 0x195
0xe2: JUMP 0x195
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V11, 0xe3]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: [0x2e7, 0x320, 0x7c9, 0x8f1]
Successors: []
---
0xe3 JUMPDEST
0xe4 STOP
---
0xe3: JUMPDEST 
0xe4: STOP 
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0x4b]
Successors: [0xed, 0xf1]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 DUP1
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe5: JUMPDEST 
0xe6: V67 = CALLVALUE
0xe8: V68 = ISZERO V67
0xe9: V69 = 0xf1
0xec: JUMPI 0xf1 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe5]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V70 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0xf1
[0xf1:0xf9]
---
Predecessors: [0xe5]
Successors: [0x2ea]
---
0xf1 JUMPDEST
0xf2 POP
0xf3 PUSH2 0xbf
0xf6 PUSH2 0x2ea
0xf9 JUMP
---
0xf1: JUMPDEST 
0xf3: V71 = 0xbf
0xf6: V72 = 0x2ea
0xf9: JUMP 0x2ea
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V11, 0xbf]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x56]
Successors: [0x2f9]
---
0xfa JUMPDEST
0xfb PUSH2 0xe3
0xfe PUSH2 0x2f9
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V73 = 0xe3
0xfe: V74 = 0x2f9
0x101: JUMP 0x2f9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V11, 0xe3]

================================

Block 0x102
[0x102:0x10f]
---
Predecessors: [0x66]
Successors: [0x8f7]
---
0x102 JUMPDEST
0x103 PUSH1 0x0
0x105 CALLVALUE
0x106 DUP5
0x107 DUP5
0x108 DUP5
0x109 PUSH2 0x110
0x10c PUSH2 0x8f7
0x10f JUMP
---
0x102: JUMPDEST 
0x103: V75 = 0x0
0x105: V76 = CALLVALUE
0x109: V77 = 0x110
0x10c: V78 = 0x8f7
0x10f: JUMP 0x8f7
---
Entry stack: [V11, 0xbf, V26, V42, V51]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V76, S2, S1, S0, 0x110]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, 0x110]

================================

Block 0x110
[0x110:0x14a]
---
Predecessors: [0x8f7]
Successors: [0x14b]
---
0x110 JUMPDEST
0x111 PUSH1 0xff
0x113 DUP4
0x114 AND
0x115 PUSH1 0x20
0x117 DUP1
0x118 DUP4
0x119 ADD
0x11a SWAP2
0x11b SWAP1
0x11c SWAP2
0x11d MSTORE
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 DUP4
0x127 AND
0x128 PUSH1 0x40
0x12a DUP4
0x12b ADD
0x12c MSTORE
0x12d PUSH1 0x60
0x12f DUP1
0x130 DUP4
0x131 MSTORE
0x132 DUP6
0x133 MLOAD
0x134 SWAP1
0x135 DUP4
0x136 ADD
0x137 MSTORE
0x138 DUP5
0x139 MLOAD
0x13a DUP3
0x13b SWAP2
0x13c PUSH1 0x80
0x13e DUP4
0x13f ADD
0x140 SWAP2
0x141 DUP8
0x142 DUP3
0x143 ADD
0x144 SWAP2
0x145 MUL
0x146 DUP1
0x147 DUP4
0x148 DUP4
0x149 PUSH1 0x0
---
0x110: JUMPDEST 
0x111: V79 = 0xff
0x114: V80 = AND S2 0xff
0x115: V81 = 0x20
0x119: V82 = ADD V715 0x20
0x11d: M[V82] = V80
0x11e: V83 = 0x1
0x120: V84 = 0xa0
0x122: V85 = 0x2
0x124: V86 = EXP 0x2 0xa0
0x125: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V88 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x128: V89 = 0x40
0x12b: V90 = ADD V715 0x40
0x12c: M[V90] = V88
0x12d: V91 = 0x60
0x131: M[V715] = 0x60
0x133: V92 = M[S3]
0x136: V93 = ADD V715 0x60
0x137: M[V93] = V92
0x139: V94 = M[S3]
0x13c: V95 = 0x80
0x13f: V96 = ADD V715 0x80
0x143: V97 = ADD 0x20 S3
0x145: V98 = MUL 0x20 V94
0x149: V99 = 0x0
---
Entry stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, V715]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S0, V96, V97, V98, V98, V96, V97, 0x0]
Exit stack: [S10, 0xbf, S8, S7, S6, 0x0, S4, S3, S2, S1, S0, S0, V96, V97, V98, V98, V96, V97, 0x0]

================================

Block 0x14b
[0x14b:0x153]
---
Predecessors: [0x110, 0x154]
Successors: [0x154, 0x163]
---
0x14b JUMPDEST
0x14c DUP4
0x14d DUP2
0x14e LT
0x14f ISZERO
0x150 PUSH2 0x163
0x153 JUMPI
---
0x14b: JUMPDEST 
0x14e: V100 = LT S0 V98
0x14f: V101 = ISZERO V100
0x150: V102 = 0x163
0x153: JUMPI 0x163 V101
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V715, V715, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V715, V715, V96, V97, V98, V98, V96, V97, S0]

================================

Block 0x154
[0x154:0x162]
---
Predecessors: [0x14b]
Successors: [0x14b]
---
0x154 DUP2
0x155 DUP2
0x156 ADD
0x157 MLOAD
0x158 DUP4
0x159 DUP3
0x15a ADD
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f PUSH2 0x14b
0x162 JUMP
---
0x156: V103 = ADD S0 V97
0x157: V104 = M[V103]
0x15a: V105 = ADD S0 V96
0x15b: M[V105] = V104
0x15c: V106 = 0x20
0x15e: V107 = ADD 0x20 S0
0x15f: V108 = 0x14b
0x162: JUMP 0x14b
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V715, V715, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 3
Stack additions: [S2, S1, V107]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V715, V715, V96, V97, V98, V98, V96, V97, V107]

================================

Block 0x163
[0x163:0x181]
---
Predecessors: [0x14b]
Successors: [0x182, 0x18b]
---
0x163 JUMPDEST
0x164 POP
0x165 POP
0x166 POP
0x167 POP
0x168 SWAP1
0x169 POP
0x16a ADD
0x16b SWAP5
0x16c POP
0x16d POP
0x16e POP
0x16f POP
0x170 POP
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP1
0x175 SWAP2
0x176 SUB
0x177 SWAP1
0x178 DUP3
0x179 CREATE
0x17a DUP1
0x17b ISZERO
0x17c DUP1
0x17d ISZERO
0x17e PUSH2 0x18b
0x181 JUMPI
---
0x163: JUMPDEST 
0x16a: V109 = ADD V98 V96
0x171: V110 = 0x40
0x173: V111 = M[0x40]
0x176: V112 = SUB V109 V111
0x179: V113 = CREATE V76 V111 V112
0x17b: V114 = ISZERO V113
0x17d: V115 = ISZERO V114
0x17e: V116 = 0x18b
0x181: JUMPI 0x18b V115
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V715, V715, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 13
Stack additions: [S12, V113, V114]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]

================================

Block 0x182
[0x182:0x18a]
---
Predecessors: [0x163]
Successors: []
---
0x182 RETURNDATASIZE
0x183 PUSH1 0x0
0x185 DUP1
0x186 RETURNDATACOPY
0x187 RETURNDATASIZE
0x188 PUSH1 0x0
0x18a REVERT
---
0x182: V117 = RETURNDATASIZE
0x183: V118 = 0x0
0x186: RETURNDATACOPY 0x0 0x0 V117
0x187: V119 = RETURNDATASIZE
0x188: V120 = 0x0
0x18a: REVERT 0x0 V119
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]

================================

Block 0x18b
[0x18b:0x194]
---
Predecessors: [0x163]
Successors: [0xbf]
---
0x18b JUMPDEST
0x18c POP
0x18d SWAP6
0x18e SWAP5
0x18f POP
0x190 POP
0x191 POP
0x192 POP
0x193 POP
0x194 JUMP
---
0x18b: JUMPDEST 
0x194: JUMP 0xbf
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]
Stack pops: 8
Stack additions: [S1]
Exit stack: [V11, V113]

================================

Block 0x195
[0x195:0x1fd]
---
Predecessors: [0xdb]
Successors: [0x1fe, 0x202]
---
0x195 JUMPDEST
0x196 PUSH1 0x1
0x198 SLOAD
0x199 PUSH1 0x40
0x19b DUP1
0x19c MLOAD
0x19d PUSH32 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1be DUP2
0x1bf MSTORE
0x1c0 ORIGIN
0x1c1 PUSH1 0x4
0x1c3 DUP3
0x1c4 ADD
0x1c5 MSTORE
0x1c6 PUSH1 0x2
0x1c8 PUSH1 0x24
0x1ca DUP3
0x1cb ADD
0x1cc MSTORE
0x1cd SWAP1
0x1ce MLOAD
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 SWAP1
0x1d8 SWAP3
0x1d9 AND
0x1da SWAP2
0x1db PUSH4 0x98a0871d
0x1e0 SWAP2
0x1e1 CALLVALUE
0x1e2 SWAP2
0x1e3 PUSH1 0x44
0x1e5 DUP1
0x1e6 DUP4
0x1e7 ADD
0x1e8 SWAP3
0x1e9 PUSH1 0x0
0x1eb SWAP3
0x1ec SWAP2
0x1ed SWAP1
0x1ee DUP3
0x1ef SWAP1
0x1f0 SUB
0x1f1 ADD
0x1f2 DUP2
0x1f3 DUP6
0x1f4 DUP9
0x1f5 DUP1
0x1f6 EXTCODESIZE
0x1f7 ISZERO
0x1f8 DUP1
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x195: JUMPDEST 
0x196: V121 = 0x1
0x198: V122 = S[0x1]
0x199: V123 = 0x40
0x19c: V124 = M[0x40]
0x19d: V125 = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1bf: M[V124] = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1c0: V126 = ORIGIN
0x1c1: V127 = 0x4
0x1c4: V128 = ADD V124 0x4
0x1c5: M[V128] = V126
0x1c6: V129 = 0x2
0x1c8: V130 = 0x24
0x1cb: V131 = ADD V124 0x24
0x1cc: M[V131] = 0x2
0x1ce: V132 = M[0x40]
0x1cf: V133 = 0x1
0x1d1: V134 = 0xa0
0x1d3: V135 = 0x2
0x1d5: V136 = EXP 0x2 0xa0
0x1d6: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V138 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V139 = 0x98a0871d
0x1e1: V140 = CALLVALUE
0x1e3: V141 = 0x44
0x1e7: V142 = ADD V124 0x44
0x1e9: V143 = 0x0
0x1f0: V144 = SUB V124 V132
0x1f1: V145 = ADD V144 0x44
0x1f6: V146 = EXTCODESIZE V138
0x1f7: V147 = ISZERO V146
0x1f9: V148 = ISZERO V147
0x1fa: V149 = 0x202
0x1fd: JUMPI 0x202 V148
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x195]
Successors: []
---
0x1fe PUSH1 0x0
0x200 DUP1
0x201 REVERT
---
0x1fe: V150 = 0x0
0x201: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]

================================

Block 0x202
[0x202:0x20c]
---
Predecessors: [0x195]
Successors: [0x20d, 0x216]
---
0x202 JUMPDEST
0x203 POP
0x204 GAS
0x205 CALL
0x206 ISZERO
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x216
0x20c JUMPI
---
0x202: JUMPDEST 
0x204: V151 = GAS
0x205: V152 = CALL V151 V138 V140 V132 V145 V132 0x0
0x206: V153 = ISZERO V152
0x208: V154 = ISZERO V153
0x209: V155 = 0x216
0x20c: JUMPI 0x216 V154
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Stack pops: 7
Stack additions: [V153]
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]

================================

Block 0x20d
[0x20d:0x215]
---
Predecessors: [0x202]
Successors: []
---
0x20d RETURNDATASIZE
0x20e PUSH1 0x0
0x210 DUP1
0x211 RETURNDATACOPY
0x212 RETURNDATASIZE
0x213 PUSH1 0x0
0x215 REVERT
---
0x20d: V156 = RETURNDATASIZE
0x20e: V157 = 0x0
0x211: RETURNDATACOPY 0x0 0x0 V156
0x212: V158 = RETURNDATASIZE
0x213: V159 = 0x0
0x215: REVERT 0x0 V158
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]

================================

Block 0x216
[0x216:0x273]
---
Predecessors: [0x202]
Successors: [0x274, 0x278]
---
0x216 JUMPDEST
0x217 POP
0x218 POP
0x219 PUSH1 0x1
0x21b SLOAD
0x21c PUSH1 0x40
0x21e DUP1
0x21f MLOAD
0x220 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x241 DUP2
0x242 MSTORE
0x243 SWAP1
0x244 MLOAD
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d SWAP1
0x24e SWAP3
0x24f AND
0x250 SWAP5
0x251 POP
0x252 PUSH4 0x3ccfd60b
0x257 SWAP4
0x258 POP
0x259 PUSH1 0x4
0x25b DUP1
0x25c DUP3
0x25d ADD
0x25e SWAP4
0x25f POP
0x260 PUSH1 0x0
0x262 SWAP3
0x263 SWAP2
0x264 DUP3
0x265 SWAP1
0x266 SUB
0x267 ADD
0x268 DUP2
0x269 DUP4
0x26a DUP8
0x26b DUP1
0x26c EXTCODESIZE
0x26d ISZERO
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x216: JUMPDEST 
0x219: V160 = 0x1
0x21b: V161 = S[0x1]
0x21c: V162 = 0x40
0x21f: V163 = M[0x40]
0x220: V164 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x242: M[V163] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x244: V165 = M[0x40]
0x245: V166 = 0x1
0x247: V167 = 0xa0
0x249: V168 = 0x2
0x24b: V169 = EXP 0x2 0xa0
0x24c: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V171 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x252: V172 = 0x3ccfd60b
0x259: V173 = 0x4
0x25d: V174 = ADD V163 0x4
0x260: V175 = 0x0
0x266: V176 = SUB V163 V165
0x267: V177 = ADD V176 0x4
0x26c: V178 = EXTCODESIZE V171
0x26d: V179 = ISZERO V178
0x26f: V180 = ISZERO V179
0x270: V181 = 0x278
0x273: JUMPI 0x278 V180
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]
Stack pops: 5
Stack additions: [V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x216]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V182 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]

================================

Block 0x278
[0x278:0x282]
---
Predecessors: [0x216]
Successors: [0x283, 0x28c]
---
0x278 JUMPDEST
0x279 POP
0x27a GAS
0x27b CALL
0x27c ISZERO
0x27d DUP1
0x27e ISZERO
0x27f PUSH2 0x28c
0x282 JUMPI
---
0x278: JUMPDEST 
0x27a: V183 = GAS
0x27b: V184 = CALL V183 V171 0x0 V165 V177 V165 0x0
0x27c: V185 = ISZERO V184
0x27e: V186 = ISZERO V185
0x27f: V187 = 0x28c
0x282: JUMPI 0x28c V186
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Stack pops: 7
Stack additions: [V185]
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]

================================

Block 0x283
[0x283:0x28b]
---
Predecessors: [0x278]
Successors: []
---
0x283 RETURNDATASIZE
0x284 PUSH1 0x0
0x286 DUP1
0x287 RETURNDATACOPY
0x288 RETURNDATASIZE
0x289 PUSH1 0x0
0x28b REVERT
---
0x283: V188 = RETURNDATASIZE
0x284: V189 = 0x0
0x287: RETURNDATACOPY 0x0 0x0 V188
0x288: V190 = RETURNDATASIZE
0x289: V191 = 0x0
0x28b: REVERT 0x0 V190
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]

================================

Block 0x28c
[0x28c:0x2a1]
---
Predecessors: [0x278]
Successors: [0x2a2, 0x2a6]
---
0x28c JUMPDEST
0x28d POP
0x28e POP
0x28f PUSH7 0x58d15e17628000
0x297 ADDRESS
0x298 BALANCE
0x299 GT
0x29a SWAP2
0x29b POP
0x29c PUSH2 0x2a6
0x29f SWAP1
0x2a0 POP
0x2a1 JUMPI
---
0x28c: JUMPDEST 
0x28f: V192 = 0x58d15e17628000
0x297: V193 = ADDRESS
0x298: V194 = BALANCE V193
0x299: V195 = GT V194 0x58d15e17628000
0x29c: V196 = 0x2a6
0x2a1: JUMPI 0x2a6 V195
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x28c]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 REVERT
---
0x2a2: V197 = 0x0
0x2a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x2a6
[0x2a6:0x2dd]
---
Predecessors: [0x28c]
Successors: [0x2de, 0x2e7]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa PUSH20 0x11e52c75998fe2e7928b191bfc5b25937ca16741
0x2bf SWAP1
0x2c0 ADDRESS
0x2c1 BALANCE
0x2c2 DUP1
0x2c3 ISZERO
0x2c4 PUSH2 0x8fc
0x2c7 MUL
0x2c8 SWAP2
0x2c9 PUSH1 0x0
0x2cb DUP2
0x2cc DUP2
0x2cd DUP2
0x2ce DUP6
0x2cf DUP9
0x2d0 DUP9
0x2d1 CALL
0x2d2 SWAP4
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 ISZERO
0x2d8 DUP1
0x2d9 ISZERO
0x2da PUSH2 0x2e7
0x2dd JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V198 = 0x40
0x2a9: V199 = M[0x40]
0x2aa: V200 = 0x11e52c75998fe2e7928b191bfc5b25937ca16741
0x2c0: V201 = ADDRESS
0x2c1: V202 = BALANCE V201
0x2c3: V203 = ISZERO V202
0x2c4: V204 = 0x8fc
0x2c7: V205 = MUL 0x8fc V203
0x2c9: V206 = 0x0
0x2d1: V207 = CALL V205 0x11e52c75998fe2e7928b191bfc5b25937ca16741 V202 V199 0x0 V199 0x0
0x2d7: V208 = ISZERO V207
0x2d9: V209 = ISZERO V208
0x2da: V210 = 0x2e7
0x2dd: JUMPI 0x2e7 V209
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V11, 0xe3, V208]

================================

Block 0x2de
[0x2de:0x2e6]
---
Predecessors: [0x2a6]
Successors: []
---
0x2de RETURNDATASIZE
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 RETURNDATACOPY
0x2e3 RETURNDATASIZE
0x2e4 PUSH1 0x0
0x2e6 REVERT
---
0x2de: V211 = RETURNDATASIZE
0x2df: V212 = 0x0
0x2e2: RETURNDATACOPY 0x0 0x0 V211
0x2e3: V213 = RETURNDATASIZE
0x2e4: V214 = 0x0
0x2e6: REVERT 0x0 V213
---
Entry stack: [V11, 0xe3, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V208]

================================

Block 0x2e7
[0x2e7:0x2e9]
---
Predecessors: [0x2a6, 0x3d5, 0x3ff, 0x474]
Successors: [0xbf, 0xe3, 0x320, 0x3e5, 0x4eb, 0x546, 0x72a]
---
0x2e7 JUMPDEST
0x2e8 POP
0x2e9 JUMP
---
0x2e7: JUMPDEST 
0x2e9: JUMP S1
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x2ea
[0x2ea:0x2f8]
---
Predecessors: [0xf1]
Successors: [0xbf]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x0
0x2ed SLOAD
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 AND
0x2f7 DUP2
0x2f8 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V215 = 0x0
0x2ed: V216 = S[0x0]
0x2ee: V217 = 0x1
0x2f0: V218 = 0xa0
0x2f2: V219 = 0x2
0x2f4: V220 = EXP 0x2 0xa0
0x2f5: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2f8: JUMP 0xbf
---
Entry stack: [V11, 0xbf]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V11, 0xbf, V222]

================================

Block 0x2f9
[0x2f9:0x308]
---
Predecessors: [0xfa]
Successors: [0x309, 0x30d]
---
0x2f9 JUMPDEST
0x2fa PUSH8 0x16345785d8a0000
0x303 CALLVALUE
0x304 EQ
0x305 PUSH2 0x30d
0x308 JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V223 = 0x16345785d8a0000
0x303: V224 = CALLVALUE
0x304: V225 = EQ V224 0x16345785d8a0000
0x305: V226 = 0x30d
0x308: JUMPI 0x30d V225
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x309
[0x309:0x30c]
---
Predecessors: [0x2f9]
Successors: []
---
0x309 PUSH1 0x0
0x30b DUP1
0x30c REVERT
---
0x309: V227 = 0x0
0x30c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x30d
[0x30d:0x31a]
---
Predecessors: [0x2f9]
Successors: [0x322]
---
0x30d JUMPDEST
0x30e PUSH2 0x320
0x311 PUSH2 0x31b
0x314 PUSH1 0x1
0x316 ADDRESS
0x317 PUSH2 0x322
0x31a JUMP
---
0x30d: JUMPDEST 
0x30e: V228 = 0x320
0x311: V229 = 0x31b
0x314: V230 = 0x1
0x316: V231 = ADDRESS
0x317: V232 = 0x322
0x31a: JUMP 0x322
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [0x320, 0x31b, 0x1, V231]
Exit stack: [V11, 0xe3, 0x320, 0x31b, 0x1, V231]

================================

Block 0x31b
[0x31b:0x31f]
---
Predecessors: [0x322]
Successors: [0x3c9]
---
0x31b JUMPDEST
0x31c PUSH2 0x3c9
0x31f JUMP
---
0x31b: JUMPDEST 
0x31c: V233 = 0x3c9
0x31f: JUMP 0x3c9
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4eb, 0x546}, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4eb, 0x546}, V260]

================================

Block 0x320
[0x320:0x321]
---
Predecessors: [0x2e7, 0x320, 0x5a9, 0x7c9]
Successors: [0xe3, 0x320, 0x3e5, 0x72a]
---
0x320 JUMPDEST
0x321 JUMP
---
0x320: JUMPDEST 
0x321: JUMP S0
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x322
[0x322:0x3c8]
---
Predecessors: [0x30d, 0x492, 0x4eb]
Successors: [0x31b]
---
0x322 JUMPDEST
0x323 PUSH1 0x40
0x325 DUP1
0x326 MLOAD
0x327 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x348 DUP2
0x349 MSTORE
0x34a PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x36b PUSH1 0x1
0x36d DUP3
0x36e ADD
0x36f MSTORE
0x370 PUSH13 0x1000000000000000000000000
0x37e PUSH1 0x1
0x380 PUSH1 0xa0
0x382 PUSH1 0x2
0x384 EXP
0x385 SUB
0x386 DUP5
0x387 AND
0x388 MUL
0x389 PUSH1 0x2
0x38b DUP3
0x38c ADD
0x38d MSTORE
0x38e PUSH1 0xff
0x390 DUP5
0x391 AND
0x392 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x3b3 MUL
0x3b4 PUSH1 0x16
0x3b6 DUP3
0x3b7 ADD
0x3b8 MSTORE
0x3b9 SWAP1
0x3ba MLOAD
0x3bb SWAP1
0x3bc DUP2
0x3bd SWAP1
0x3be SUB
0x3bf PUSH1 0x17
0x3c1 ADD
0x3c2 SWAP1
0x3c3 SHA3
0x3c4 SWAP3
0x3c5 SWAP2
0x3c6 POP
0x3c7 POP
0x3c8 JUMP
---
0x322: JUMPDEST 
0x323: V234 = 0x40
0x326: V235 = M[0x40]
0x327: V236 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x349: M[V235] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x34a: V237 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x36b: V238 = 0x1
0x36e: V239 = ADD V235 0x1
0x36f: M[V239] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x370: V240 = 0x1000000000000000000000000
0x37e: V241 = 0x1
0x380: V242 = 0xa0
0x382: V243 = 0x2
0x384: V244 = EXP 0x2 0xa0
0x385: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x387: V246 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x388: V247 = MUL V246 0x1000000000000000000000000
0x389: V248 = 0x2
0x38c: V249 = ADD V235 0x2
0x38d: M[V249] = V247
0x38e: V250 = 0xff
0x391: V251 = AND {0x1, 0x2} 0xff
0x392: V252 = 0x100000000000000000000000000000000000000000000000000000000000000
0x3b3: V253 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V251
0x3b4: V254 = 0x16
0x3b7: V255 = ADD V235 0x16
0x3b8: M[V255] = V253
0x3ba: V256 = M[0x40]
0x3be: V257 = SUB V235 V256
0x3bf: V258 = 0x17
0x3c1: V259 = ADD 0x17 V257
0x3c3: V260 = SHA3 V256 V259
0x3c8: JUMP 0x31b
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x320, 0x4eb, 0x546}, 0x31b, {0x1, 0x2}, S0]
Stack pops: 3
Stack additions: [V260]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x320, 0x4eb, 0x546}, V260]

================================

Block 0x3c9
[0x3c9:0x3d4]
---
Predecessors: [0x31b]
Successors: [0x3d5, 0x3d9]
---
0x3c9 JUMPDEST
0x3ca PUSH1 0x5
0x3cc SLOAD
0x3cd PUSH1 0xff
0x3cf AND
0x3d0 ISZERO
0x3d1 PUSH2 0x3d9
0x3d4 JUMPI
---
0x3c9: JUMPDEST 
0x3ca: V261 = 0x5
0x3cc: V262 = S[0x5]
0x3cd: V263 = 0xff
0x3cf: V264 = AND 0xff V262
0x3d0: V265 = ISZERO V264
0x3d1: V266 = 0x3d9
0x3d4: JUMPI 0x3d9 V265
---
Entry stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4eb, 0x546}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4eb, 0x546}, S0]

================================

Block 0x3d5
[0x3d5:0x3d8]
---
Predecessors: [0x3c9]
Successors: [0x2e7]
---
0x3d5 PUSH2 0x2e7
0x3d8 JUMP
---
0x3d5: V267 = 0x2e7
0x3d8: JUMP 0x2e7
---
Entry stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4eb, 0x546}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4eb, 0x546}, S0]

================================

Block 0x3d9
[0x3d9:0x3e4]
---
Predecessors: [0x3c9]
Successors: [0x5ad]
---
0x3d9 JUMPDEST
0x3da PUSH2 0x3e5
0x3dd DUP2
0x3de PUSH1 0x2
0x3e0 SLOAD
0x3e1 PUSH2 0x5ad
0x3e4 JUMP
---
0x3d9: JUMPDEST 
0x3da: V268 = 0x3e5
0x3de: V269 = 0x2
0x3e0: V270 = S[0x2]
0x3e1: V271 = 0x5ad
0x3e4: JUMP 0x5ad
---
Entry stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4eb, 0x546}, S0]
Stack pops: 1
Stack additions: [S0, 0x3e5, S0, V270]
Exit stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x320, 0x4eb, 0x546}, S0, 0x3e5, S0, V270]

================================

Block 0x3e5
[0x3e5:0x3ea]
---
Predecessors: [0x2e7, 0x320, 0x5a9, 0x7c9]
Successors: [0x3eb, 0x404]
---
0x3e5 JUMPDEST
0x3e6 ISZERO
0x3e7 PUSH2 0x404
0x3ea JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V272 = ISZERO {0x0, 0x1}
0x3e7: V273 = 0x404
0x3ea: JUMPI 0x404 V272
---
Entry stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x3eb
[0x3eb:0x3fe]
---
Predecessors: [0x3e5]
Successors: [0x7d0]
---
0x3eb PUSH1 0x5
0x3ed DUP1
0x3ee SLOAD
0x3ef PUSH1 0xff
0x3f1 NOT
0x3f2 AND
0x3f3 PUSH1 0x1
0x3f5 OR
0x3f6 SWAP1
0x3f7 SSTORE
0x3f8 PUSH2 0x3ff
0x3fb PUSH2 0x7d0
0x3fe JUMP
---
0x3eb: V274 = 0x5
0x3ee: V275 = S[0x5]
0x3ef: V276 = 0xff
0x3f1: V277 = NOT 0xff
0x3f2: V278 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V275
0x3f3: V279 = 0x1
0x3f5: V280 = OR 0x1 V278
0x3f7: S[0x5] = V280
0x3f8: V281 = 0x3ff
0x3fb: V282 = 0x7d0
0x3fe: JUMP 0x7d0
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3ff]
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3ff]

================================

Block 0x3ff
[0x3ff:0x403]
---
Predecessors: [0x87a]
Successors: [0x2e7]
---
0x3ff JUMPDEST
0x400 PUSH2 0x2e7
0x403 JUMP
---
0x3ff: JUMPDEST 
0x400: V283 = 0x2e7
0x403: JUMP 0x2e7
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x404
[0x404:0x42b]
---
Predecessors: [0x3e5]
Successors: [0x42c, 0x492]
---
0x404 JUMPDEST
0x405 PUSH1 0x3
0x407 DUP1
0x408 SLOAD
0x409 PUSH1 0xff
0x40b NOT
0x40c DUP2
0x40d AND
0x40e PUSH1 0x1
0x410 PUSH1 0xff
0x412 SWAP3
0x413 DUP4
0x414 AND
0x415 ADD
0x416 DUP3
0x417 AND
0x418 OR
0x419 SWAP2
0x41a DUP3
0x41b SWAP1
0x41c SSTORE
0x41d PUSH2 0x100
0x420 DUP3
0x421 DIV
0x422 DUP2
0x423 AND
0x424 SWAP2
0x425 AND
0x426 EQ
0x427 ISZERO
0x428 PUSH2 0x492
0x42b JUMPI
---
0x404: JUMPDEST 
0x405: V284 = 0x3
0x408: V285 = S[0x3]
0x409: V286 = 0xff
0x40b: V287 = NOT 0xff
0x40d: V288 = AND V285 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x40e: V289 = 0x1
0x410: V290 = 0xff
0x414: V291 = AND 0xff V285
0x415: V292 = ADD V291 0x1
0x417: V293 = AND 0xff V292
0x418: V294 = OR V293 V288
0x41c: S[0x3] = V294
0x41d: V295 = 0x100
0x421: V296 = DIV V294 0x100
0x423: V297 = AND 0xff V296
0x425: V298 = AND V294 0xff
0x426: V299 = EQ V298 V297
0x427: V300 = ISZERO V299
0x428: V301 = 0x492
0x42b: JUMPI 0x492 V300
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x42c
[0x42c:0x43b]
---
Predecessors: [0x404]
Successors: [0x43c, 0x43d]
---
0x42c PUSH1 0x4
0x42e DUP1
0x42f SLOAD
0x430 PUSH1 0x0
0x432 NOT
0x433 DUP2
0x434 ADD
0x435 SWAP1
0x436 DUP2
0x437 LT
0x438 PUSH2 0x43d
0x43b JUMPI
---
0x42c: V302 = 0x4
0x42f: V303 = S[0x4]
0x430: V304 = 0x0
0x432: V305 = NOT 0x0
0x434: V306 = ADD V303 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x437: V307 = LT V306 V303
0x438: V308 = 0x43d
0x43b: JUMPI 0x43d V307
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4, V306]
Exit stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4, V306]

================================

Block 0x43c
[0x43c:0x43c]
---
Predecessors: [0x42c]
Successors: []
---
0x43c INVALID
---
0x43c: INVALID 
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V306]

================================

Block 0x43d
[0x43d:0x473]
---
Predecessors: [0x42c]
Successors: [0x907]
---
0x43d JUMPDEST
0x43e SWAP1
0x43f PUSH1 0x0
0x441 MSTORE
0x442 PUSH1 0x20
0x444 PUSH1 0x0
0x446 SHA3
0x447 SWAP1
0x448 PUSH1 0x20
0x44a SWAP2
0x44b DUP3
0x44c DUP3
0x44d DIV
0x44e ADD
0x44f SWAP2
0x450 SWAP1
0x451 MOD
0x452 PUSH2 0x100
0x455 EXP
0x456 DUP2
0x457 SLOAD
0x458 SWAP1
0x459 PUSH1 0xff
0x45b MUL
0x45c NOT
0x45d AND
0x45e SWAP1
0x45f SSTORE
0x460 PUSH1 0x4
0x462 DUP1
0x463 SLOAD
0x464 DUP1
0x465 SWAP2
0x466 SWAP1
0x467 PUSH1 0x1
0x469 SWAP1
0x46a SUB
0x46b PUSH2 0x474
0x46e SWAP2
0x46f SWAP1
0x470 PUSH2 0x907
0x473 JUMP
---
0x43d: JUMPDEST 
0x43f: V309 = 0x0
0x441: M[0x0] = 0x4
0x442: V310 = 0x20
0x444: V311 = 0x0
0x446: V312 = SHA3 0x0 0x20
0x448: V313 = 0x20
0x44d: V314 = DIV V306 0x20
0x44e: V315 = ADD V314 V312
0x451: V316 = MOD V306 0x20
0x452: V317 = 0x100
0x455: V318 = EXP 0x100 V316
0x457: V319 = S[V315]
0x459: V320 = 0xff
0x45b: V321 = MUL 0xff V318
0x45c: V322 = NOT V321
0x45d: V323 = AND V322 V319
0x45f: S[V315] = V323
0x460: V324 = 0x4
0x463: V325 = S[0x4]
0x467: V326 = 0x1
0x46a: V327 = SUB V325 0x1
0x46b: V328 = 0x474
0x470: V329 = 0x907
0x473: JUMP 0x907
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V306]
Stack pops: 2
Stack additions: [V325, 0x474, 0x4, V327]
Exit stack: [S11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, V325, 0x474, 0x4, V327]

================================

Block 0x474
[0x474:0x491]
---
Predecessors: [0x87a]
Successors: [0x2e7]
---
0x474 JUMPDEST
0x475 POP
0x476 PUSH1 0x3
0x478 DUP1
0x479 SLOAD
0x47a PUSH1 0xff
0x47c NOT
0x47d DUP2
0x47e AND
0x47f PUSH1 0xff
0x481 SWAP2
0x482 DUP3
0x483 AND
0x484 PUSH1 0x0
0x486 NOT
0x487 ADD
0x488 SWAP1
0x489 SWAP2
0x48a AND
0x48b OR
0x48c SWAP1
0x48d SSTORE
0x48e PUSH2 0x2e7
0x491 JUMP
---
0x474: JUMPDEST 
0x476: V330 = 0x3
0x479: V331 = S[0x3]
0x47a: V332 = 0xff
0x47c: V333 = NOT 0xff
0x47e: V334 = AND V331 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x47f: V335 = 0xff
0x483: V336 = AND 0xff V331
0x484: V337 = 0x0
0x486: V338 = NOT 0x0
0x487: V339 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V336
0x48a: V340 = AND 0xff V339
0x48b: V341 = OR V340 V334
0x48d: S[0x3] = V341
0x48e: V342 = 0x2e7
0x491: JUMP 0x2e7
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x492
[0x492:0x4ea]
---
Predecessors: [0x404]
Successors: [0x322]
---
0x492 JUMPDEST
0x493 PUSH1 0x4
0x495 DUP1
0x496 SLOAD
0x497 PUSH1 0x1
0x499 DUP1
0x49a DUP3
0x49b ADD
0x49c DUP4
0x49d SSTORE
0x49e PUSH1 0x0
0x4a0 SWAP3
0x4a1 SWAP1
0x4a2 SWAP3
0x4a3 MSTORE
0x4a4 PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x4c5 PUSH1 0x20
0x4c7 DUP3
0x4c8 DIV
0x4c9 ADD
0x4ca DUP1
0x4cb SLOAD
0x4cc PUSH1 0x1f
0x4ce SWAP1
0x4cf SWAP3
0x4d0 AND
0x4d1 PUSH2 0x100
0x4d4 EXP
0x4d5 PUSH1 0xff
0x4d7 MUL
0x4d8 NOT
0x4d9 SWAP1
0x4da SWAP2
0x4db AND
0x4dc SWAP1
0x4dd SSTORE
0x4de PUSH2 0x4eb
0x4e1 SWAP1
0x4e2 PUSH2 0x31b
0x4e5 SWAP1
0x4e6 DUP4
0x4e7 PUSH2 0x322
0x4ea JUMP
---
0x492: JUMPDEST 
0x493: V343 = 0x4
0x496: V344 = S[0x4]
0x497: V345 = 0x1
0x49b: V346 = ADD V344 0x1
0x49d: S[0x4] = V346
0x49e: V347 = 0x0
0x4a3: M[0x0] = 0x4
0x4a4: V348 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x4c5: V349 = 0x20
0x4c8: V350 = DIV V344 0x20
0x4c9: V351 = ADD V350 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x4cb: V352 = S[V351]
0x4cc: V353 = 0x1f
0x4d0: V354 = AND V344 0x1f
0x4d1: V355 = 0x100
0x4d4: V356 = EXP 0x100 V354
0x4d5: V357 = 0xff
0x4d7: V358 = MUL 0xff V356
0x4d8: V359 = NOT V358
0x4db: V360 = AND V352 V359
0x4dd: S[V351] = V360
0x4de: V361 = 0x4eb
0x4e2: V362 = 0x31b
0x4e7: V363 = 0x322
0x4ea: JUMP 0x322
---
Entry stack: [V11, 0xe3, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x4eb, 0x31b, 0x1, S0]
Exit stack: [S9, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0, 0x4eb, 0x31b, 0x1, S0]

================================

Block 0x4eb
[0x4eb:0x545]
---
Predecessors: [0x2e7]
Successors: [0x322]
---
0x4eb JUMPDEST
0x4ec PUSH1 0x4
0x4ee DUP1
0x4ef SLOAD
0x4f0 PUSH1 0x1
0x4f2 DUP2
0x4f3 ADD
0x4f4 DUP3
0x4f5 SSTORE
0x4f6 PUSH1 0x0
0x4f8 SWAP2
0x4f9 SWAP1
0x4fa SWAP2
0x4fb MSTORE
0x4fc PUSH1 0x20
0x4fe DUP2
0x4ff DIV
0x500 PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x521 ADD
0x522 DUP1
0x523 SLOAD
0x524 PUSH1 0xff
0x526 PUSH1 0x1f
0x528 SWAP1
0x529 SWAP4
0x52a AND
0x52b PUSH2 0x100
0x52e EXP
0x52f SWAP3
0x530 DUP4
0x531 MUL
0x532 NOT
0x533 AND
0x534 SWAP1
0x535 SWAP2
0x536 OR
0x537 SWAP1
0x538 SSTORE
0x539 PUSH2 0x546
0x53c PUSH2 0x31b
0x53f PUSH1 0x2
0x541 DUP4
0x542 PUSH2 0x322
0x545 JUMP
---
0x4eb: JUMPDEST 
0x4ec: V364 = 0x4
0x4ef: V365 = S[0x4]
0x4f0: V366 = 0x1
0x4f3: V367 = ADD V365 0x1
0x4f5: S[0x4] = V367
0x4f6: V368 = 0x0
0x4fb: M[0x0] = 0x4
0x4fc: V369 = 0x20
0x4ff: V370 = DIV V365 0x20
0x500: V371 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x521: V372 = ADD 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b V370
0x523: V373 = S[V372]
0x524: V374 = 0xff
0x526: V375 = 0x1f
0x52a: V376 = AND V365 0x1f
0x52b: V377 = 0x100
0x52e: V378 = EXP 0x100 V376
0x531: V379 = MUL V378 0xff
0x532: V380 = NOT V379
0x533: V381 = AND V380 V373
0x536: V382 = OR V378 V381
0x538: S[V372] = V382
0x539: V383 = 0x546
0x53c: V384 = 0x31b
0x53f: V385 = 0x2
0x542: V386 = 0x322
0x545: JUMP 0x322
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x546, 0x31b, 0x2, S0]
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x546, 0x31b, 0x2, S0]

================================

Block 0x546
[0x546:0x570]
---
Predecessors: [0x2e7, 0x7c9]
Successors: [0x571, 0x572]
---
0x546 JUMPDEST
0x547 PUSH1 0x3
0x549 DUP1
0x54a SLOAD
0x54b PUSH1 0xff
0x54d NOT
0x54e DUP2
0x54f AND
0x550 PUSH1 0xff
0x552 SWAP2
0x553 DUP3
0x554 AND
0x555 PUSH1 0x0
0x557 NOT
0x558 SWAP1
0x559 DUP2
0x55a ADD
0x55b SWAP1
0x55c SWAP3
0x55d AND
0x55e OR
0x55f SWAP1
0x560 SWAP2
0x561 SSTORE
0x562 PUSH1 0x4
0x564 DUP1
0x565 SLOAD
0x566 SWAP1
0x567 SWAP2
0x568 DUP2
0x569 ADD
0x56a SWAP1
0x56b DUP2
0x56c LT
0x56d PUSH2 0x572
0x570 JUMPI
---
0x546: JUMPDEST 
0x547: V387 = 0x3
0x54a: V388 = S[0x3]
0x54b: V389 = 0xff
0x54d: V390 = NOT 0xff
0x54f: V391 = AND V388 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x550: V392 = 0xff
0x554: V393 = AND 0xff V388
0x555: V394 = 0x0
0x557: V395 = NOT 0x0
0x55a: V396 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V393
0x55d: V397 = AND 0xff V396
0x55e: V398 = OR V397 V391
0x561: S[0x3] = V398
0x562: V399 = 0x4
0x565: V400 = S[0x4]
0x569: V401 = ADD V400 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x56c: V402 = LT V401 V400
0x56d: V403 = 0x572
0x570: JUMPI 0x572 V402
---
Entry stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4, V401]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4, V401]

================================

Block 0x571
[0x571:0x571]
---
Predecessors: [0x546]
Successors: []
---
0x571 INVALID
---
0x571: INVALID 
---
Entry stack: [V11, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V401]

================================

Block 0x572
[0x572:0x5a8]
---
Predecessors: [0x546]
Successors: [0x907]
---
0x572 JUMPDEST
0x573 SWAP1
0x574 PUSH1 0x0
0x576 MSTORE
0x577 PUSH1 0x20
0x579 PUSH1 0x0
0x57b SHA3
0x57c SWAP1
0x57d PUSH1 0x20
0x57f SWAP2
0x580 DUP3
0x581 DUP3
0x582 DIV
0x583 ADD
0x584 SWAP2
0x585 SWAP1
0x586 MOD
0x587 PUSH2 0x100
0x58a EXP
0x58b DUP2
0x58c SLOAD
0x58d SWAP1
0x58e PUSH1 0xff
0x590 MUL
0x591 NOT
0x592 AND
0x593 SWAP1
0x594 SSTORE
0x595 PUSH1 0x4
0x597 DUP1
0x598 SLOAD
0x599 DUP1
0x59a SWAP2
0x59b SWAP1
0x59c PUSH1 0x1
0x59e SWAP1
0x59f SUB
0x5a0 PUSH2 0x5a9
0x5a3 SWAP2
0x5a4 SWAP1
0x5a5 PUSH2 0x907
0x5a8 JUMP
---
0x572: JUMPDEST 
0x574: V404 = 0x0
0x576: M[0x0] = 0x4
0x577: V405 = 0x20
0x579: V406 = 0x0
0x57b: V407 = SHA3 0x0 0x20
0x57d: V408 = 0x20
0x582: V409 = DIV V401 0x20
0x583: V410 = ADD V409 V407
0x586: V411 = MOD V401 0x20
0x587: V412 = 0x100
0x58a: V413 = EXP 0x100 V411
0x58c: V414 = S[V410]
0x58e: V415 = 0xff
0x590: V416 = MUL 0xff V413
0x591: V417 = NOT V416
0x592: V418 = AND V417 V414
0x594: S[V410] = V418
0x595: V419 = 0x4
0x598: V420 = S[0x4]
0x59c: V421 = 0x1
0x59f: V422 = SUB V420 0x1
0x5a0: V423 = 0x5a9
0x5a5: V424 = 0x907
0x5a8: JUMP 0x907
---
Entry stack: [V11, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V401]
Stack pops: 2
Stack additions: [V420, 0x5a9, 0x4, V422]
Exit stack: [V11, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V420, 0x5a9, 0x4, V422]

================================

Block 0x5a9
[0x5a9:0x5ac]
---
Predecessors: [0x87a]
Successors: [0xbf, 0x320, 0x3e5, 0x72a]
---
0x5a9 JUMPDEST
0x5aa POP
0x5ab POP
0x5ac JUMP
---
0x5a9: JUMPDEST 
0x5ac: JUMP S2
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x5ad
[0x5ad:0x608]
---
Predecessors: [0x3d9]
Successors: [0x609]
---
0x5ad JUMPDEST
0x5ae PUSH1 0x0
0x5b0 DUP1
0x5b1 PUSH2 0x72a
0x5b4 NUMBER
0x5b5 PUSH2 0x71e
0x5b8 TIMESTAMP
0x5b9 DUP8
0x5ba PUSH1 0x40
0x5bc MLOAD
0x5bd PUSH1 0x20
0x5bf ADD
0x5c0 DUP1
0x5c1 DUP3
0x5c2 PUSH1 0x1
0x5c4 PUSH1 0xa0
0x5c6 PUSH1 0x2
0x5c8 EXP
0x5c9 SUB
0x5ca AND
0x5cb PUSH1 0x1
0x5cd PUSH1 0xa0
0x5cf PUSH1 0x2
0x5d1 EXP
0x5d2 SUB
0x5d3 AND
0x5d4 PUSH13 0x1000000000000000000000000
0x5e2 MUL
0x5e3 DUP2
0x5e4 MSTORE
0x5e5 PUSH1 0x14
0x5e7 ADD
0x5e8 SWAP2
0x5e9 POP
0x5ea POP
0x5eb PUSH1 0x40
0x5ed MLOAD
0x5ee PUSH1 0x20
0x5f0 DUP2
0x5f1 DUP4
0x5f2 SUB
0x5f3 SUB
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 SWAP1
0x5f7 PUSH1 0x40
0x5f9 MSTORE
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd DUP1
0x5fe DUP3
0x5ff DUP1
0x600 MLOAD
0x601 SWAP1
0x602 PUSH1 0x20
0x604 ADD
0x605 SWAP1
0x606 DUP1
0x607 DUP4
0x608 DUP4
---
0x5ad: JUMPDEST 
0x5ae: V425 = 0x0
0x5b1: V426 = 0x72a
0x5b4: V427 = NUMBER
0x5b5: V428 = 0x71e
0x5b8: V429 = TIMESTAMP
0x5ba: V430 = 0x40
0x5bc: V431 = M[0x40]
0x5bd: V432 = 0x20
0x5bf: V433 = ADD 0x20 V431
0x5c2: V434 = 0x1
0x5c4: V435 = 0xa0
0x5c6: V436 = 0x2
0x5c8: V437 = EXP 0x2 0xa0
0x5c9: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ca: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x5cb: V440 = 0x1
0x5cd: V441 = 0xa0
0x5cf: V442 = 0x2
0x5d1: V443 = EXP 0x2 0xa0
0x5d2: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d3: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x5d4: V446 = 0x1000000000000000000000000
0x5e2: V447 = MUL 0x1000000000000000000000000 V445
0x5e4: M[V433] = V447
0x5e5: V448 = 0x14
0x5e7: V449 = ADD 0x14 V433
0x5eb: V450 = 0x40
0x5ed: V451 = M[0x40]
0x5ee: V452 = 0x20
0x5f2: V453 = SUB V449 V451
0x5f3: V454 = SUB V453 0x20
0x5f5: M[V451] = V454
0x5f7: V455 = 0x40
0x5f9: M[0x40] = V449
0x5fa: V456 = 0x40
0x5fc: V457 = M[0x40]
0x600: V458 = M[V451]
0x602: V459 = 0x20
0x604: V460 = ADD 0x20 V451
---
Entry stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, {0x320, 0x4eb, 0x546}, S3, 0x3e5, S1, V270]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V451, V457, V457, V460, V458, V458, V457, V460]
Exit stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, {0x320, 0x4eb, 0x546}, S3, 0x3e5, S1, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V451, V457, V457, V460, V458, V458, V457, V460]

================================

Block 0x609
[0x609:0x611]
---
Predecessors: [0x5ad, 0x612]
Successors: [0x612, 0x628]
---
0x609 JUMPDEST
0x60a PUSH1 0x20
0x60c DUP4
0x60d LT
0x60e PUSH2 0x628
0x611 JUMPI
---
0x609: JUMPDEST 
0x60a: V461 = 0x20
0x60d: V462 = LT S2 0x20
0x60e: V463 = 0x628
0x611: JUMPI 0x628 V462
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4eb, 0x546}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V451, V457, V457, V460, V458, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4eb, 0x546}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V451, V457, V457, V460, V458, S2, S1, S0]

================================

Block 0x612
[0x612:0x627]
---
Predecessors: [0x609]
Successors: [0x609]
---
0x612 DUP1
0x613 MLOAD
0x614 DUP3
0x615 MSTORE
0x616 PUSH1 0x1f
0x618 NOT
0x619 SWAP1
0x61a SWAP3
0x61b ADD
0x61c SWAP2
0x61d PUSH1 0x20
0x61f SWAP2
0x620 DUP3
0x621 ADD
0x622 SWAP2
0x623 ADD
0x624 PUSH2 0x609
0x627 JUMP
---
0x613: V464 = M[S0]
0x615: M[S1] = V464
0x616: V465 = 0x1f
0x618: V466 = NOT 0x1f
0x61b: V467 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x61d: V468 = 0x20
0x621: V469 = ADD 0x20 S1
0x623: V470 = ADD 0x20 S0
0x624: V471 = 0x609
0x627: JUMP 0x609
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4eb, 0x546}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V451, V457, V457, V460, V458, S2, S1, S0]
Stack pops: 3
Stack additions: [V467, V469, V470]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4eb, 0x546}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V451, V457, V457, V460, V458, V467, V469, V470]

================================

Block 0x628
[0x628:0x65c]
---
Predecessors: [0x609]
Successors: [0x65d, 0x65e]
---
0x628 JUMPDEST
0x629 MLOAD
0x62a DUP2
0x62b MLOAD
0x62c PUSH1 0x20
0x62e SWAP4
0x62f SWAP1
0x630 SWAP4
0x631 SUB
0x632 PUSH2 0x100
0x635 EXP
0x636 PUSH1 0x0
0x638 NOT
0x639 ADD
0x63a DUP1
0x63b NOT
0x63c SWAP1
0x63d SWAP2
0x63e AND
0x63f SWAP3
0x640 AND
0x641 SWAP2
0x642 SWAP1
0x643 SWAP2
0x644 OR
0x645 SWAP1
0x646 MSTORE
0x647 PUSH1 0x40
0x649 MLOAD
0x64a SWAP3
0x64b ADD
0x64c DUP3
0x64d SWAP1
0x64e SUB
0x64f SWAP1
0x650 SWAP2
0x651 SHA3
0x652 SWAP3
0x653 POP
0x654 POP
0x655 POP
0x656 DUP2
0x657 ISZERO
0x658 ISZERO
0x659 PUSH2 0x65e
0x65c JUMPI
---
0x628: JUMPDEST 
0x629: V472 = M[S0]
0x62b: V473 = M[S1]
0x62c: V474 = 0x20
0x631: V475 = SUB 0x20 S2
0x632: V476 = 0x100
0x635: V477 = EXP 0x100 V475
0x636: V478 = 0x0
0x638: V479 = NOT 0x0
0x639: V480 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V477
0x63b: V481 = NOT V480
0x63e: V482 = AND V472 V481
0x640: V483 = AND V473 V480
0x644: V484 = OR V483 V482
0x646: M[S1] = V484
0x647: V485 = 0x40
0x649: V486 = M[0x40]
0x64b: V487 = ADD V457 V458
0x64e: V488 = SUB V487 V486
0x651: V489 = SHA3 V486 V488
0x657: V490 = ISZERO V429
0x658: V491 = ISZERO V490
0x659: V492 = 0x65e
0x65c: JUMPI 0x65e V491
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4eb, 0x546}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V451, V457, V457, V460, V458, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V489]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x320, 0x4eb, 0x546}, S17, 0x3e5, S15, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V489]

================================

Block 0x65d
[0x65d:0x65d]
---
Predecessors: [0x628]
Successors: []
---
0x65d INVALID
---
0x65d: INVALID 
---
Entry stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x320, 0x4eb, 0x546}, S10, 0x3e5, S8, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x320, 0x4eb, 0x546}, S10, 0x3e5, S8, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V489]

================================

Block 0x65e
[0x65e:0x6b7]
---
Predecessors: [0x628]
Successors: [0x6b8]
---
0x65e JUMPDEST
0x65f DIV
0x660 PUSH2 0x71e
0x663 GASLIMIT
0x664 PUSH2 0x71e
0x667 TIMESTAMP
0x668 COINBASE
0x669 PUSH1 0x40
0x66b MLOAD
0x66c PUSH1 0x20
0x66e ADD
0x66f DUP1
0x670 DUP3
0x671 PUSH1 0x1
0x673 PUSH1 0xa0
0x675 PUSH1 0x2
0x677 EXP
0x678 SUB
0x679 AND
0x67a PUSH1 0x1
0x67c PUSH1 0xa0
0x67e PUSH1 0x2
0x680 EXP
0x681 SUB
0x682 AND
0x683 PUSH13 0x1000000000000000000000000
0x691 MUL
0x692 DUP2
0x693 MSTORE
0x694 PUSH1 0x14
0x696 ADD
0x697 SWAP2
0x698 POP
0x699 POP
0x69a PUSH1 0x40
0x69c MLOAD
0x69d PUSH1 0x20
0x69f DUP2
0x6a0 DUP4
0x6a1 SUB
0x6a2 SUB
0x6a3 DUP2
0x6a4 MSTORE
0x6a5 SWAP1
0x6a6 PUSH1 0x40
0x6a8 MSTORE
0x6a9 PUSH1 0x40
0x6ab MLOAD
0x6ac DUP1
0x6ad DUP3
0x6ae DUP1
0x6af MLOAD
0x6b0 SWAP1
0x6b1 PUSH1 0x20
0x6b3 ADD
0x6b4 SWAP1
0x6b5 DUP1
0x6b6 DUP4
0x6b7 DUP4
---
0x65e: JUMPDEST 
0x65f: V493 = DIV V489 V429
0x660: V494 = 0x71e
0x663: V495 = GASLIMIT
0x664: V496 = 0x71e
0x667: V497 = TIMESTAMP
0x668: V498 = COINBASE
0x669: V499 = 0x40
0x66b: V500 = M[0x40]
0x66c: V501 = 0x20
0x66e: V502 = ADD 0x20 V500
0x671: V503 = 0x1
0x673: V504 = 0xa0
0x675: V505 = 0x2
0x677: V506 = EXP 0x2 0xa0
0x678: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x679: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x67a: V509 = 0x1
0x67c: V510 = 0xa0
0x67e: V511 = 0x2
0x680: V512 = EXP 0x2 0xa0
0x681: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x682: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x683: V515 = 0x1000000000000000000000000
0x691: V516 = MUL 0x1000000000000000000000000 V514
0x693: M[V502] = V516
0x694: V517 = 0x14
0x696: V518 = ADD 0x14 V502
0x69a: V519 = 0x40
0x69c: V520 = M[0x40]
0x69d: V521 = 0x20
0x6a1: V522 = SUB V518 V520
0x6a2: V523 = SUB V522 0x20
0x6a4: M[V520] = V523
0x6a6: V524 = 0x40
0x6a8: M[0x40] = V518
0x6a9: V525 = 0x40
0x6ab: V526 = M[0x40]
0x6af: V527 = M[V520]
0x6b1: V528 = 0x20
0x6b3: V529 = ADD 0x20 V520
---
Entry stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x320, 0x4eb, 0x546}, S10, 0x3e5, S8, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V429, V489]
Stack pops: 2
Stack additions: [V493, 0x71e, V495, 0x71e, V497, V520, V526, V526, V529, V527, V527, V526, V529]
Exit stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x320, 0x4eb, 0x546}, S10, 0x3e5, S8, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V520, V526, V526, V529, V527, V527, V526, V529]

================================

Block 0x6b8
[0x6b8:0x6c0]
---
Predecessors: [0x65e, 0x6c1]
Successors: [0x6c1, 0x6d7]
---
0x6b8 JUMPDEST
0x6b9 PUSH1 0x20
0x6bb DUP4
0x6bc LT
0x6bd PUSH2 0x6d7
0x6c0 JUMPI
---
0x6b8: JUMPDEST 
0x6b9: V530 = 0x20
0x6bc: V531 = LT S2 0x20
0x6bd: V532 = 0x6d7
0x6c0: JUMPI 0x6d7 V531
---
Entry stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4eb, 0x546}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V520, V526, V526, V529, V527, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4eb, 0x546}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V520, V526, V526, V529, V527, S2, S1, S0]

================================

Block 0x6c1
[0x6c1:0x6d6]
---
Predecessors: [0x6b8]
Successors: [0x6b8]
---
0x6c1 DUP1
0x6c2 MLOAD
0x6c3 DUP3
0x6c4 MSTORE
0x6c5 PUSH1 0x1f
0x6c7 NOT
0x6c8 SWAP1
0x6c9 SWAP3
0x6ca ADD
0x6cb SWAP2
0x6cc PUSH1 0x20
0x6ce SWAP2
0x6cf DUP3
0x6d0 ADD
0x6d1 SWAP2
0x6d2 ADD
0x6d3 PUSH2 0x6b8
0x6d6 JUMP
---
0x6c2: V533 = M[S0]
0x6c4: M[S1] = V533
0x6c5: V534 = 0x1f
0x6c7: V535 = NOT 0x1f
0x6ca: V536 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x6cc: V537 = 0x20
0x6d0: V538 = ADD 0x20 S1
0x6d2: V539 = ADD 0x20 S0
0x6d3: V540 = 0x6b8
0x6d6: JUMP 0x6b8
---
Entry stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4eb, 0x546}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V520, V526, V526, V529, V527, S2, S1, S0]
Stack pops: 3
Stack additions: [V536, V538, V539]
Exit stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4eb, 0x546}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V520, V526, V526, V529, V527, V536, V538, V539]

================================

Block 0x6d7
[0x6d7:0x70b]
---
Predecessors: [0x6b8]
Successors: [0x70c, 0x70d]
---
0x6d7 JUMPDEST
0x6d8 MLOAD
0x6d9 DUP2
0x6da MLOAD
0x6db PUSH1 0x20
0x6dd SWAP4
0x6de SWAP1
0x6df SWAP4
0x6e0 SUB
0x6e1 PUSH2 0x100
0x6e4 EXP
0x6e5 PUSH1 0x0
0x6e7 NOT
0x6e8 ADD
0x6e9 DUP1
0x6ea NOT
0x6eb SWAP1
0x6ec SWAP2
0x6ed AND
0x6ee SWAP3
0x6ef AND
0x6f0 SWAP2
0x6f1 SWAP1
0x6f2 SWAP2
0x6f3 OR
0x6f4 SWAP1
0x6f5 MSTORE
0x6f6 PUSH1 0x40
0x6f8 MLOAD
0x6f9 SWAP3
0x6fa ADD
0x6fb DUP3
0x6fc SWAP1
0x6fd SUB
0x6fe SWAP1
0x6ff SWAP2
0x700 SHA3
0x701 SWAP3
0x702 POP
0x703 POP
0x704 POP
0x705 DUP2
0x706 ISZERO
0x707 ISZERO
0x708 PUSH2 0x70d
0x70b JUMPI
---
0x6d7: JUMPDEST 
0x6d8: V541 = M[S0]
0x6da: V542 = M[S1]
0x6db: V543 = 0x20
0x6e0: V544 = SUB 0x20 S2
0x6e1: V545 = 0x100
0x6e4: V546 = EXP 0x100 V544
0x6e5: V547 = 0x0
0x6e7: V548 = NOT 0x0
0x6e8: V549 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V546
0x6ea: V550 = NOT V549
0x6ed: V551 = AND V541 V550
0x6ef: V552 = AND V542 V549
0x6f3: V553 = OR V552 V551
0x6f5: M[S1] = V553
0x6f6: V554 = 0x40
0x6f8: V555 = M[0x40]
0x6fa: V556 = ADD V526 V527
0x6fd: V557 = SUB V556 V555
0x700: V558 = SHA3 V555 V557
0x706: V559 = ISZERO V497
0x707: V560 = ISZERO V559
0x708: V561 = 0x70d
0x70b: JUMPI 0x70d V560
---
Entry stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4eb, 0x546}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V520, V526, V526, V529, V527, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V558]
Exit stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x320, 0x4eb, 0x546}, S21, 0x3e5, S19, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V558]

================================

Block 0x70c
[0x70c:0x70c]
---
Predecessors: [0x6d7]
Successors: []
---
0x70c INVALID
---
0x70c: INVALID 
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x320, 0x4eb, 0x546}, S14, 0x3e5, S12, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V558]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x320, 0x4eb, 0x546}, S14, 0x3e5, S12, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V558]

================================

Block 0x70d
[0x70d:0x71d]
---
Predecessors: [0x6d7]
Successors: [0x87f]
---
0x70d JUMPDEST
0x70e DIV
0x70f PUSH2 0x71e
0x712 TIMESTAMP
0x713 DIFFICULTY
0x714 PUSH4 0xffffffff
0x719 PUSH2 0x87f
0x71c AND
0x71d JUMP
---
0x70d: JUMPDEST 
0x70e: V562 = DIV V558 V497
0x70f: V563 = 0x71e
0x712: V564 = TIMESTAMP
0x713: V565 = DIFFICULTY
0x714: V566 = 0xffffffff
0x719: V567 = 0x87f
0x71c: V568 = AND 0x87f 0xffffffff
0x71d: JUMP 0x87f
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x320, 0x4eb, 0x546}, S14, 0x3e5, S12, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V497, V558]
Stack pops: 2
Stack additions: [V562, 0x71e, V564, V565]
Exit stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x320, 0x4eb, 0x546}, S14, 0x3e5, S12, V270, 0x0, 0x0, 0x72a, V427, 0x71e, V493, 0x71e, V495, 0x71e, V562, 0x71e, V564, V565]

================================

Block 0x71e
[0x71e:0x729]
---
Predecessors: [0x8f1]
Successors: [0x87f]
---
0x71e JUMPDEST
0x71f SWAP1
0x720 PUSH4 0xffffffff
0x725 PUSH2 0x87f
0x728 AND
0x729 JUMP
---
0x71e: JUMPDEST 
0x720: V569 = 0xffffffff
0x725: V570 = 0x87f
0x728: V571 = AND 0x87f 0xffffffff
0x729: JUMP 0x87f
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x72a
[0x72a:0x758]
---
Predecessors: [0x2e7, 0x320, 0x5a9, 0x8f1]
Successors: [0x759]
---
0x72a JUMPDEST
0x72b PUSH1 0x40
0x72d MLOAD
0x72e PUSH1 0x20
0x730 ADD
0x731 DUP1
0x732 DUP3
0x733 DUP2
0x734 MSTORE
0x735 PUSH1 0x20
0x737 ADD
0x738 SWAP2
0x739 POP
0x73a POP
0x73b PUSH1 0x40
0x73d MLOAD
0x73e PUSH1 0x20
0x740 DUP2
0x741 DUP4
0x742 SUB
0x743 SUB
0x744 DUP2
0x745 MSTORE
0x746 SWAP1
0x747 PUSH1 0x40
0x749 MSTORE
0x74a PUSH1 0x40
0x74c MLOAD
0x74d DUP1
0x74e DUP3
0x74f DUP1
0x750 MLOAD
0x751 SWAP1
0x752 PUSH1 0x20
0x754 ADD
0x755 SWAP1
0x756 DUP1
0x757 DUP4
0x758 DUP4
---
0x72a: JUMPDEST 
0x72b: V572 = 0x40
0x72d: V573 = M[0x40]
0x72e: V574 = 0x20
0x730: V575 = ADD 0x20 V573
0x734: M[V575] = S0
0x735: V576 = 0x20
0x737: V577 = ADD 0x20 V575
0x73b: V578 = 0x40
0x73d: V579 = M[0x40]
0x73e: V580 = 0x20
0x742: V581 = SUB V577 V579
0x743: V582 = SUB V581 0x20
0x745: M[V579] = V582
0x747: V583 = 0x40
0x749: M[0x40] = V577
0x74a: V584 = 0x40
0x74c: V585 = M[0x40]
0x750: V586 = M[V579]
0x752: V587 = 0x20
0x754: V588 = ADD 0x20 V579
---
Entry stack: [V11, 0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V579, V585, V585, V588, V586, V586, V585, V588]
Exit stack: [S23, 0xe3, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V579, V585, V585, V588, V586, V586, V585, V588]

================================

Block 0x759
[0x759:0x761]
---
Predecessors: [0x72a, 0x762]
Successors: [0x762, 0x778]
---
0x759 JUMPDEST
0x75a PUSH1 0x20
0x75c DUP4
0x75d LT
0x75e PUSH2 0x778
0x761 JUMPI
---
0x759: JUMPDEST 
0x75a: V589 = 0x20
0x75d: V590 = LT S2 0x20
0x75e: V591 = 0x778
0x761: JUMPI 0x778 V590
---
Entry stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V579, V585, V585, V588, V586, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V579, V585, V585, V588, V586, S2, S1, S0]

================================

Block 0x762
[0x762:0x777]
---
Predecessors: [0x759]
Successors: [0x759]
---
0x762 DUP1
0x763 MLOAD
0x764 DUP3
0x765 MSTORE
0x766 PUSH1 0x1f
0x768 NOT
0x769 SWAP1
0x76a SWAP3
0x76b ADD
0x76c SWAP2
0x76d PUSH1 0x20
0x76f SWAP2
0x770 DUP3
0x771 ADD
0x772 SWAP2
0x773 ADD
0x774 PUSH2 0x759
0x777 JUMP
---
0x763: V592 = M[S0]
0x765: M[S1] = V592
0x766: V593 = 0x1f
0x768: V594 = NOT 0x1f
0x76b: V595 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x76d: V596 = 0x20
0x771: V597 = ADD 0x20 S1
0x773: V598 = ADD 0x20 S0
0x774: V599 = 0x759
0x777: JUMP 0x759
---
Entry stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V579, V585, V585, V588, V586, S2, S1, S0]
Stack pops: 3
Stack additions: [V595, V597, V598]
Exit stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V579, V585, V585, V588, V586, V595, V597, V598]

================================

Block 0x778
[0x778:0x7bb]
---
Predecessors: [0x759]
Successors: [0x7bc, 0x7c4]
---
0x778 JUMPDEST
0x779 MLOAD
0x77a DUP2
0x77b MLOAD
0x77c PUSH1 0x20
0x77e SWAP4
0x77f SWAP1
0x780 SWAP4
0x781 SUB
0x782 PUSH2 0x100
0x785 EXP
0x786 PUSH1 0x0
0x788 NOT
0x789 ADD
0x78a DUP1
0x78b NOT
0x78c SWAP1
0x78d SWAP2
0x78e AND
0x78f SWAP3
0x790 AND
0x791 SWAP2
0x792 SWAP1
0x793 SWAP2
0x794 OR
0x795 SWAP1
0x796 MSTORE
0x797 PUSH1 0x40
0x799 MLOAD
0x79a SWAP3
0x79b ADD
0x79c DUP3
0x79d SWAP1
0x79e SUB
0x79f SWAP1
0x7a0 SWAP2
0x7a1 SHA3
0x7a2 SWAP4
0x7a3 POP
0x7a4 DUP6
0x7a5 SWAP3
0x7a6 POP
0x7a7 PUSH2 0x3e8
0x7aa SWAP2
0x7ab POP
0x7ac DUP4
0x7ad SWAP1
0x7ae POP
0x7af DIV
0x7b0 PUSH2 0x3e8
0x7b3 MUL
0x7b4 DUP3
0x7b5 SUB
0x7b6 LT
0x7b7 ISZERO
0x7b8 PUSH2 0x7c4
0x7bb JUMPI
---
0x778: JUMPDEST 
0x779: V600 = M[S0]
0x77b: V601 = M[S1]
0x77c: V602 = 0x20
0x781: V603 = SUB 0x20 S2
0x782: V604 = 0x100
0x785: V605 = EXP 0x100 V603
0x786: V606 = 0x0
0x788: V607 = NOT 0x0
0x789: V608 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V605
0x78b: V609 = NOT V608
0x78e: V610 = AND V600 V609
0x790: V611 = AND V601 V608
0x794: V612 = OR V611 V610
0x796: M[S1] = V612
0x797: V613 = 0x40
0x799: V614 = M[0x40]
0x79b: V615 = ADD V585 V586
0x79e: V616 = SUB V615 V614
0x7a1: V617 = SHA3 V614 V616
0x7a7: V618 = 0x3e8
0x7af: V619 = DIV V617 0x3e8
0x7b0: V620 = 0x3e8
0x7b3: V621 = MUL 0x3e8 V619
0x7b5: V622 = SUB V617 V621
0x7b6: V623 = LT V622 S10
0x7b7: V624 = ISZERO V623
0x7b8: V625 = 0x7c4
0x7bb: JUMPI 0x7c4 V624
---
Entry stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V579, V585, V585, V588, V586, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V617]
Exit stack: [V11, 0xe3, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V617]

================================

Block 0x7bc
[0x7bc:0x7c3]
---
Predecessors: [0x778]
Successors: [0x7c9]
---
0x7bc PUSH1 0x1
0x7be SWAP2
0x7bf POP
0x7c0 PUSH2 0x7c9
0x7c3 JUMP
---
0x7bc: V626 = 0x1
0x7c0: V627 = 0x7c9
0x7c3: JUMP 0x7c9
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V617]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, V617]

================================

Block 0x7c4
[0x7c4:0x7c8]
---
Predecessors: [0x778]
Successors: [0x7c9]
---
0x7c4 JUMPDEST
0x7c5 PUSH1 0x0
0x7c7 SWAP2
0x7c8 POP
---
0x7c4: JUMPDEST 
0x7c5: V628 = 0x0
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V617]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V617]

================================

Block 0x7c9
[0x7c9:0x7cf]
---
Predecessors: [0x7bc, 0x7c4]
Successors: [0xe3, 0x320, 0x3e5, 0x546]
---
0x7c9 JUMPDEST
0x7ca POP
0x7cb SWAP3
0x7cc SWAP2
0x7cd POP
0x7ce POP
0x7cf JUMP
---
0x7c9: JUMPDEST 
0x7cf: JUMP S4
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}]

================================

Block 0x7d0
[0x7d0:0x7dd]
---
Predecessors: [0x3eb]
Successors: [0x8f7]
---
0x7d0 JUMPDEST
0x7d1 CALLVALUE
0x7d2 PUSH1 0x4
0x7d4 PUSH1 0x0
0x7d6 ADDRESS
0x7d7 PUSH2 0x7de
0x7da PUSH2 0x8f7
0x7dd JUMP
---
0x7d0: JUMPDEST 
0x7d1: V629 = CALLVALUE
0x7d2: V630 = 0x4
0x7d4: V631 = 0x0
0x7d6: V632 = ADDRESS
0x7d7: V633 = 0x7de
0x7da: V634 = 0x8f7
0x7dd: JUMP 0x8f7
---
Entry stack: [V11, 0xe3, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3ff]
Stack pops: 0
Stack additions: [V629, 0x4, 0x0, V632, 0x7de]
Exit stack: [S10, 0xe3, S8, S7, S6, S5, S4, S3, S2, S1, 0x3ff, V629, 0x4, 0x0, V632, 0x7de]

================================

Block 0x7de
[0x7de:0x812]
---
Predecessors: [0x8f7]
Successors: [0x813, 0x857]
---
0x7de JUMPDEST
0x7df PUSH1 0xff
0x7e1 DUP4
0x7e2 AND
0x7e3 PUSH1 0x20
0x7e5 DUP3
0x7e6 ADD
0x7e7 MSTORE
0x7e8 PUSH1 0x1
0x7ea PUSH1 0xa0
0x7ec PUSH1 0x2
0x7ee EXP
0x7ef SUB
0x7f0 DUP3
0x7f1 AND
0x7f2 PUSH1 0x40
0x7f4 DUP3
0x7f5 ADD
0x7f6 MSTORE
0x7f7 PUSH1 0x60
0x7f9 DUP1
0x7fa DUP3
0x7fb MSTORE
0x7fc DUP5
0x7fd SLOAD
0x7fe SWAP1
0x7ff DUP3
0x800 ADD
0x801 DUP2
0x802 SWAP1
0x803 MSTORE
0x804 DUP2
0x805 SWAP1
0x806 PUSH1 0x80
0x808 DUP3
0x809 ADD
0x80a SWAP1
0x80b DUP7
0x80c SWAP1
0x80d DUP1
0x80e ISZERO
0x80f PUSH2 0x857
0x812 JUMPI
---
0x7de: JUMPDEST 
0x7df: V635 = 0xff
0x7e2: V636 = AND S2 0xff
0x7e3: V637 = 0x20
0x7e6: V638 = ADD V715 0x20
0x7e7: M[V638] = V636
0x7e8: V639 = 0x1
0x7ea: V640 = 0xa0
0x7ec: V641 = 0x2
0x7ee: V642 = EXP 0x2 0xa0
0x7ef: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f1: V644 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V645 = 0x40
0x7f5: V646 = ADD V715 0x40
0x7f6: M[V646] = V644
0x7f7: V647 = 0x60
0x7fb: M[V715] = 0x60
0x7fd: V648 = S[S3]
0x800: V649 = ADD V715 0x60
0x803: M[V649] = V648
0x806: V650 = 0x80
0x809: V651 = ADD V715 0x80
0x80e: V652 = ISZERO V648
0x80f: V653 = 0x857
0x812: JUMPI 0x857 V652
---
Entry stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, V715]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S0, V651, S3, V648]
Exit stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, V715, V715, V651, S3, V648]

================================

Block 0x813
[0x813:0x825]
---
Predecessors: [0x7de]
Successors: [0x826]
---
0x813 PUSH1 0x20
0x815 MUL
0x816 DUP3
0x817 ADD
0x818 SWAP2
0x819 SWAP1
0x81a PUSH1 0x0
0x81c MSTORE
0x81d PUSH1 0x20
0x81f PUSH1 0x0
0x821 SHA3
0x822 SWAP1
0x823 PUSH1 0x0
0x825 SWAP1
---
0x813: V654 = 0x20
0x815: V655 = MUL 0x20 V648
0x817: V656 = ADD V651 V655
0x81a: V657 = 0x0
0x81c: M[0x0] = S1
0x81d: V658 = 0x20
0x81f: V659 = 0x0
0x821: V660 = SHA3 0x0 0x20
0x823: V661 = 0x0
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x3ff}, S8, S7, S6, S5, V715, V715, V651, S1, V648]
Stack pops: 3
Stack additions: [V656, V660, 0x0, S2]
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x3ff}, S8, S7, S6, S5, V715, V715, V656, V660, 0x0, V651]

================================

Block 0x826
[0x826:0x854]
---
Predecessors: [0x813, 0x826]
Successors: [0x826, 0x855]
---
0x826 JUMPDEST
0x827 DUP3
0x828 SLOAD
0x829 PUSH2 0x100
0x82c DUP4
0x82d SWAP1
0x82e EXP
0x82f SWAP1
0x830 DIV
0x831 PUSH1 0xff
0x833 AND
0x834 ISZERO
0x835 ISZERO
0x836 DUP2
0x837 MSTORE
0x838 PUSH1 0x20
0x83a PUSH1 0x1
0x83c SWAP3
0x83d DUP4
0x83e ADD
0x83f DUP2
0x840 DUP2
0x841 DIV
0x842 SWAP5
0x843 DUP6
0x844 ADD
0x845 SWAP5
0x846 SWAP1
0x847 SWAP4
0x848 SUB
0x849 SWAP1
0x84a SWAP3
0x84b MUL
0x84c SWAP2
0x84d ADD
0x84e DUP1
0x84f DUP5
0x850 GT
0x851 PUSH2 0x826
0x854 JUMPI
---
0x826: JUMPDEST 
0x828: V662 = S[S2]
0x829: V663 = 0x100
0x82e: V664 = EXP 0x100 S1
0x830: V665 = DIV V662 V664
0x831: V666 = 0xff
0x833: V667 = AND 0xff V665
0x834: V668 = ISZERO V667
0x835: V669 = ISZERO V668
0x837: M[S0] = V669
0x838: V670 = 0x20
0x83a: V671 = 0x1
0x83e: V672 = ADD 0x1 S1
0x841: V673 = DIV V672 0x20
0x844: V674 = ADD V673 S2
0x848: V675 = SUB 0x1 V673
0x84b: V676 = MUL V672 V675
0x84d: V677 = ADD 0x20 S0
0x850: V678 = GT V656 V677
0x851: V679 = 0x826
0x854: JUMPI 0x826 V678
---
Entry stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x3ff}, S9, S8, S7, S6, S5, S4, V656, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, V674, V676, V677]
Exit stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x3ff}, S9, S8, S7, S6, S5, S4, V656, V674, V676, V677]

================================

Block 0x855
[0x855:0x856]
---
Predecessors: [0x826]
Successors: [0x857]
---
0x855 SWAP1
0x856 POP
---
0x855: NOP 
---
Entry stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x3ff}, S9, S8, S7, S6, S5, S4, V656, V674, V676, V677]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x3ff}, S9, S8, S7, S6, S5, S4, V656, V674, V677]

================================

Block 0x857
[0x857:0x870]
---
Predecessors: [0x7de, 0x855]
Successors: [0x871, 0x87a]
---
0x857 JUMPDEST
0x858 POP
0x859 POP
0x85a SWAP5
0x85b POP
0x85c POP
0x85d POP
0x85e POP
0x85f POP
0x860 PUSH1 0x40
0x862 MLOAD
0x863 DUP1
0x864 SWAP2
0x865 SUB
0x866 SWAP1
0x867 DUP3
0x868 CREATE
0x869 DUP1
0x86a ISZERO
0x86b DUP1
0x86c ISZERO
0x86d PUSH2 0x87a
0x870 JUMPI
---
0x857: JUMPDEST 
0x860: V680 = 0x40
0x862: V681 = M[0x40]
0x865: V682 = SUB S2 V681
0x868: V683 = CREATE S8 V681 V682
0x86a: V684 = ISZERO V683
0x86c: V685 = ISZERO V684
0x86d: V686 = 0x87a
0x870: JUMPI 0x87a V685
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x3ff}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V683, V684]
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x3ff}, S8, V683, V684]

================================

Block 0x871
[0x871:0x879]
---
Predecessors: [0x857]
Successors: []
---
0x871 RETURNDATASIZE
0x872 PUSH1 0x0
0x874 DUP1
0x875 RETURNDATACOPY
0x876 RETURNDATASIZE
0x877 PUSH1 0x0
0x879 REVERT
---
0x871: V687 = RETURNDATASIZE
0x872: V688 = 0x0
0x875: RETURNDATACOPY 0x0 0x0 V687
0x876: V689 = RETURNDATASIZE
0x877: V690 = 0x0
0x879: REVERT 0x0 V689
---
Entry stack: [V11, 0xe3, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x3ff}, S2, V683, V684]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x3ff}, S2, V683, V684]

================================

Block 0x87a
[0x87a:0x87e]
---
Predecessors: [0x857, 0x907, 0x954]
Successors: [0x3ff, 0x474, 0x5a9]
---
0x87a JUMPDEST
0x87b POP
0x87c POP
0x87d POP
0x87e JUMP
---
0x87a: JUMPDEST 
0x87e: JUMP {0x0, 0x3ff, 0x474, 0x5a9}
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x3ff, 0x474, 0x5a9}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x87f
[0x87f:0x88a]
---
Predecessors: [0x70d, 0x71e]
Successors: [0x88b, 0x8f1]
---
0x87f JUMPDEST
0x880 DUP2
0x881 DUP2
0x882 ADD
0x883 DUP3
0x884 DUP2
0x885 LT
0x886 ISZERO
0x887 PUSH2 0x8f1
0x88a JUMPI
---
0x87f: JUMPDEST 
0x882: V691 = ADD S0 S1
0x885: V692 = LT V691 S1
0x886: V693 = ISZERO V692
0x887: V694 = 0x8f1
0x88a: JUMPI 0x8f1 V693
---
Entry stack: [V11, 0xe3, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V691]
Exit stack: [V11, 0xe3, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V691]

================================

Block 0x88b
[0x88b:0x8f0]
---
Predecessors: [0x87f]
Successors: []
---
0x88b PUSH1 0x40
0x88d DUP1
0x88e MLOAD
0x88f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8b0 DUP2
0x8b1 MSTORE
0x8b2 PUSH1 0x20
0x8b4 PUSH1 0x4
0x8b6 DUP3
0x8b7 ADD
0x8b8 MSTORE
0x8b9 PUSH1 0x13
0x8bb PUSH1 0x24
0x8bd DUP3
0x8be ADD
0x8bf MSTORE
0x8c0 PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0x8e1 PUSH1 0x44
0x8e3 DUP3
0x8e4 ADD
0x8e5 MSTORE
0x8e6 SWAP1
0x8e7 MLOAD
0x8e8 SWAP1
0x8e9 DUP2
0x8ea SWAP1
0x8eb SUB
0x8ec PUSH1 0x64
0x8ee ADD
0x8ef SWAP1
0x8f0 REVERT
---
0x88b: V695 = 0x40
0x88e: V696 = M[0x40]
0x88f: V697 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8b1: M[V696] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8b2: V698 = 0x20
0x8b4: V699 = 0x4
0x8b7: V700 = ADD V696 0x4
0x8b8: M[V700] = 0x20
0x8b9: V701 = 0x13
0x8bb: V702 = 0x24
0x8be: V703 = ADD V696 0x24
0x8bf: M[V703] = 0x13
0x8c0: V704 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x8e1: V705 = 0x44
0x8e4: V706 = ADD V696 0x44
0x8e5: M[V706] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x8e7: V707 = M[0x40]
0x8eb: V708 = SUB V696 V707
0x8ec: V709 = 0x64
0x8ee: V710 = ADD 0x64 V708
0x8f0: REVERT V707 V710
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V691]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V691]

================================

Block 0x8f1
[0x8f1:0x8f6]
---
Predecessors: [0x87f]
Successors: [0xe3, 0x71e, 0x72a]
---
0x8f1 JUMPDEST
0x8f2 SWAP3
0x8f3 SWAP2
0x8f4 POP
0x8f5 POP
0x8f6 JUMP
---
0x8f1: JUMPDEST 
0x8f6: JUMP S3
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V691]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V691]

================================

Block 0x8f7
[0x8f7:0x906]
---
Predecessors: [0x102, 0x7d0]
Successors: [0x110, 0x7de]
---
0x8f7 JUMPDEST
0x8f8 PUSH1 0x40
0x8fa MLOAD
0x8fb PUSH2 0x30b
0x8fe DUP1
0x8ff PUSH2 0x958
0x902 DUP4
0x903 CODECOPY
0x904 ADD
0x905 SWAP1
0x906 JUMP
---
0x8f7: JUMPDEST 
0x8f8: V711 = 0x40
0x8fa: V712 = M[0x40]
0x8fb: V713 = 0x30b
0x8ff: V714 = 0x958
0x903: CODECOPY V712 0x958 0x30b
0x904: V715 = ADD 0x30b V712
0x906: JUMP {0x110, 0x7de}
---
Entry stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, {0x110, 0x7de}]
Stack pops: 1
Stack additions: [V715]
Exit stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ff}, S4, S3, S2, S1, V715]

================================

Block 0x907
[0x907:0x914]
---
Predecessors: [0x43d, 0x572]
Successors: [0x87a, 0x915]
---
0x907 JUMPDEST
0x908 DUP2
0x909 SLOAD
0x90a DUP2
0x90b DUP4
0x90c SSTORE
0x90d DUP2
0x90e DUP2
0x90f GT
0x910 ISZERO
0x911 PUSH2 0x87a
0x914 JUMPI
---
0x907: JUMPDEST 
0x909: V716 = S[0x4]
0x90c: S[0x4] = S0
0x90f: V717 = GT V716 S0
0x910: V718 = ISZERO V717
0x911: V719 = 0x87a
0x914: JUMPI 0x87a V718
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x474, 0x5a9}, 0x4, S0]
Stack pops: 2
Stack additions: [S1, S0, V716]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x474, 0x5a9}, 0x4, S0, V716]

================================

Block 0x915
[0x915:0x93b]
---
Predecessors: [0x907]
Successors: [0x93c]
---
0x915 PUSH1 0x1f
0x917 ADD
0x918 PUSH1 0x20
0x91a SWAP1
0x91b DIV
0x91c DUP2
0x91d PUSH1 0x1f
0x91f ADD
0x920 PUSH1 0x20
0x922 SWAP1
0x923 DIV
0x924 DUP4
0x925 PUSH1 0x0
0x927 MSTORE
0x928 PUSH1 0x20
0x92a PUSH1 0x0
0x92c SHA3
0x92d SWAP2
0x92e DUP3
0x92f ADD
0x930 SWAP2
0x931 ADD
0x932 PUSH2 0x87a
0x935 SWAP2
0x936 SWAP1
0x937 PUSH2 0x954
0x93a SWAP2
0x93b SWAP1
---
0x915: V720 = 0x1f
0x917: V721 = ADD 0x1f V716
0x918: V722 = 0x20
0x91b: V723 = DIV V721 0x20
0x91d: V724 = 0x1f
0x91f: V725 = ADD 0x1f S1
0x920: V726 = 0x20
0x923: V727 = DIV V725 0x20
0x925: V728 = 0x0
0x927: M[0x0] = 0x4
0x928: V729 = 0x20
0x92a: V730 = 0x0
0x92c: V731 = SHA3 0x0 0x20
0x92f: V732 = ADD V731 V723
0x931: V733 = ADD V731 V727
0x932: V734 = 0x87a
0x937: V735 = 0x954
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x474, 0x5a9}, 0x4, S1, V716]
Stack pops: 3
Stack additions: [S2, S1, 0x87a, 0x954, V732, V733]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x474, 0x5a9}, 0x4, S1, 0x87a, 0x954, V732, V733]

================================

Block 0x93c
[0x93c:0x944]
---
Predecessors: [0x915, 0x945]
Successors: [0x945, 0x950]
---
0x93c JUMPDEST
0x93d DUP1
0x93e DUP3
0x93f GT
0x940 ISZERO
0x941 PUSH2 0x950
0x944 JUMPI
---
0x93c: JUMPDEST 
0x93f: V736 = GT S1 S0
0x940: V737 = ISZERO V736
0x941: V738 = 0x950
0x944: JUMPI 0x950 V737
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5a9}, 0x4, S4, 0x87a, 0x954, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5a9}, 0x4, S4, 0x87a, 0x954, S1, S0]

================================

Block 0x945
[0x945:0x94f]
---
Predecessors: [0x93c]
Successors: [0x93c]
---
0x945 PUSH1 0x0
0x947 DUP2
0x948 SSTORE
0x949 PUSH1 0x1
0x94b ADD
0x94c PUSH2 0x93c
0x94f JUMP
---
0x945: V739 = 0x0
0x948: S[S0] = 0x0
0x949: V740 = 0x1
0x94b: V741 = ADD 0x1 S0
0x94c: V742 = 0x93c
0x94f: JUMP 0x93c
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5a9}, 0x4, S4, 0x87a, 0x954, S1, S0]
Stack pops: 1
Stack additions: [V741]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5a9}, 0x4, S4, 0x87a, 0x954, S1, V741]

================================

Block 0x950
[0x950:0x953]
---
Predecessors: [0x93c]
Successors: [0x954]
---
0x950 JUMPDEST
0x951 POP
0x952 SWAP1
0x953 JUMP
---
0x950: JUMPDEST 
0x953: JUMP 0x954
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5a9}, 0x4, S4, 0x87a, 0x954, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x474, 0x5a9}, 0x4, S4, 0x87a, S1]

================================

Block 0x954
[0x954:0x956]
---
Predecessors: [0x950]
Successors: [0x87a]
---
0x954 JUMPDEST
0x955 SWAP1
0x956 JUMP
---
0x954: JUMPDEST 
0x956: JUMP 0x87a
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x474, 0x5a9}, 0x4, S2, 0x87a, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x474, 0x5a9}, 0x4, S2, S0]

================================

Block 0x957
[0x957:0x98c]
---
Predecessors: []
Successors: [0x98d]
---
0x957 STOP
0x958 PUSH1 0x80
0x95a PUSH1 0x40
0x95c MSTORE
0x95d PUSH1 0x40
0x95f MLOAD
0x960 PUSH2 0x30b
0x963 CODESIZE
0x964 SUB
0x965 DUP1
0x966 PUSH2 0x30b
0x969 DUP4
0x96a CODECOPY
0x96b DUP2
0x96c ADD
0x96d PUSH1 0x40
0x96f SWAP1
0x970 DUP2
0x971 MSTORE
0x972 DUP2
0x973 MLOAD
0x974 PUSH1 0x20
0x976 DUP4
0x977 ADD
0x978 MLOAD
0x979 SWAP2
0x97a DUP4
0x97b ADD
0x97c MLOAD
0x97d SWAP3
0x97e ADD
0x97f DUP1
0x980 MLOAD
0x981 SWAP1
0x982 SWAP3
0x983 SWAP1
0x984 PUSH1 0xff
0x986 DUP4
0x987 AND
0x988 EQ
0x989 PUSH2 0x1b6
0x98c JUMPI
---
0x957: STOP 
0x958: V743 = 0x80
0x95a: V744 = 0x40
0x95c: M[0x40] = 0x80
0x95d: V745 = 0x40
0x95f: V746 = M[0x40]
0x960: V747 = 0x30b
0x963: V748 = CODESIZE
0x964: V749 = SUB V748 0x30b
0x966: V750 = 0x30b
0x96a: CODECOPY V746 0x30b V749
0x96c: V751 = ADD V746 V749
0x96d: V752 = 0x40
0x971: M[0x40] = V751
0x973: V753 = M[V746]
0x974: V754 = 0x20
0x977: V755 = ADD V746 0x20
0x978: V756 = M[V755]
0x97b: V757 = ADD V746 0x40
0x97c: V758 = M[V757]
0x97e: V759 = ADD V746 V753
0x980: V760 = M[V759]
0x984: V761 = 0xff
0x987: V762 = AND V756 0xff
0x988: V763 = EQ V762 V760
0x989: V764 = 0x1b6
0x98c: THROWI V763
---
Entry stack: []
Stack pops: 0
Stack additions: [V758, V756, V759]
Exit stack: []

================================

Block 0x98d
[0x98d:0x99b]
---
Predecessors: [0x957]
Successors: [0x99c]
---
0x98d DUP3
0x98e DUP3
0x98f PUSH1 0xff
0x991 AND
0x992 DUP2
0x993 MLOAD
0x994 DUP2
0x995 LT
0x996 ISZERO
0x997 ISZERO
0x998 PUSH2 0x45
0x99b JUMPI
---
0x98f: V765 = 0xff
0x991: V766 = AND 0xff V756
0x993: V767 = M[V759]
0x995: V768 = LT V766 V767
0x996: V769 = ISZERO V768
0x997: V770 = ISZERO V769
0x998: V771 = 0x45
0x99b: THROWI V770
---
Entry stack: [V759, V756, V758]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, V766]
Exit stack: [V759, V756, V758, V759, V766]

================================

Block 0x99c
[0x99c:0x9b3]
---
Predecessors: [0x98d]
Successors: [0x9b4]
---
0x99c INVALID
0x99d JUMPDEST
0x99e SWAP1
0x99f PUSH1 0x20
0x9a1 ADD
0x9a2 SWAP1
0x9a3 PUSH1 0x20
0x9a5 MUL
0x9a6 ADD
0x9a7 MLOAD
0x9a8 ISZERO
0x9a9 ISZERO
0x9aa PUSH1 0x1
0x9ac ISZERO
0x9ad ISZERO
0x9ae EQ
0x9af ISZERO
0x9b0 PUSH2 0x82
0x9b3 JUMPI
---
0x99c: INVALID 
0x99d: JUMPDEST 
0x99f: V772 = 0x20
0x9a1: V773 = ADD 0x20 S1
0x9a3: V774 = 0x20
0x9a5: V775 = MUL 0x20 S0
0x9a6: V776 = ADD V775 V773
0x9a7: V777 = M[V776]
0x9a8: V778 = ISZERO V777
0x9a9: V779 = ISZERO V778
0x9aa: V780 = 0x1
0x9ac: V781 = ISZERO 0x1
0x9ad: V782 = ISZERO 0x0
0x9ae: V783 = EQ 0x1 V779
0x9af: V784 = ISZERO V783
0x9b0: V785 = 0x82
0x9b3: THROWI V784
---
Entry stack: [V759, V756, V758, V759, V766]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9b4
[0x9b4:0x9cd]
---
Predecessors: [0x99c]
Successors: [0x9ce]
---
0x9b4 PUSH2 0x63
0x9b7 PUSH2 0x267
0x9ba JUMP
0x9bb JUMPDEST
0x9bc PUSH1 0x40
0x9be MLOAD
0x9bf DUP1
0x9c0 SWAP2
0x9c1 SUB
0x9c2 SWAP1
0x9c3 PUSH1 0x0
0x9c5 CREATE
0x9c6 DUP1
0x9c7 ISZERO
0x9c8 DUP1
0x9c9 ISZERO
0x9ca PUSH2 0x7f
0x9cd JUMPI
---
0x9b4: V786 = 0x63
0x9b7: V787 = 0x267
0x9ba: THROW 
0x9bb: JUMPDEST 
0x9bc: V788 = 0x40
0x9be: V789 = M[0x40]
0x9c1: V790 = SUB S0 V789
0x9c3: V791 = 0x0
0x9c5: V792 = CREATE 0x0 V789 V790
0x9c7: V793 = ISZERO V792
0x9c9: V794 = ISZERO V793
0x9ca: V795 = 0x7f
0x9cd: THROWI V794
---
Entry stack: []
Stack pops: 0
Stack additions: [0x63, V793, V792]
Exit stack: []

================================

Block 0x9ce
[0x9ce:0x9d9]
---
Predecessors: [0x9b4]
Successors: [0x9da]
---
0x9ce RETURNDATASIZE
0x9cf PUSH1 0x0
0x9d1 DUP1
0x9d2 RETURNDATACOPY
0x9d3 RETURNDATASIZE
0x9d4 PUSH1 0x0
0x9d6 REVERT
0x9d7 JUMPDEST
0x9d8 POP
0x9d9 POP
---
0x9ce: V796 = RETURNDATASIZE
0x9cf: V797 = 0x0
0x9d2: RETURNDATACOPY 0x0 0x0 V796
0x9d3: V798 = RETURNDATASIZE
0x9d4: V799 = 0x0
0x9d6: REVERT 0x0 V798
0x9d7: JUMPDEST 
---
Entry stack: [V792, V793]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9da
[0x9da:0xaa5]
---
Predecessors: [0x9ce]
Successors: [0xaa6]
---
0x9da JUMPDEST
0x9db DUP1
0x9dc PUSH1 0x1
0x9de PUSH1 0xa0
0x9e0 PUSH1 0x2
0x9e2 EXP
0x9e3 SUB
0x9e4 AND
0x9e5 PUSH1 0x40
0x9e7 MLOAD
0x9e8 DUP1
0x9e9 DUP1
0x9ea PUSH32 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0xa0b DUP2
0xa0c MSTORE
0xa0d PUSH1 0x20
0xa0f ADD
0xa10 PUSH32 0x6472657373290000000000000000000000000000000000000000000000000000
0xa31 DUP2
0xa32 MSTORE
0xa33 POP
0xa34 PUSH1 0x26
0xa36 ADD
0xa37 SWAP1
0xa38 POP
0xa39 PUSH1 0x40
0xa3b MLOAD
0xa3c DUP1
0xa3d SWAP2
0xa3e SUB
0xa3f SWAP1
0xa40 SHA3
0xa41 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa5f SWAP1
0xa60 DIV
0xa61 DUP5
0xa62 DUP5
0xa63 PUSH1 0x1
0xa65 ADD
0xa66 DUP5
0xa67 PUSH1 0x40
0xa69 MLOAD
0xa6a DUP5
0xa6b PUSH4 0xffffffff
0xa70 AND
0xa71 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa8f MUL
0xa90 DUP2
0xa91 MSTORE
0xa92 PUSH1 0x4
0xa94 ADD
0xa95 DUP1
0xa96 DUP5
0xa97 DUP1
0xa98 MLOAD
0xa99 SWAP1
0xa9a PUSH1 0x20
0xa9c ADD
0xa9d SWAP1
0xa9e PUSH1 0x20
0xaa0 MUL
0xaa1 DUP1
0xaa2 DUP4
0xaa3 DUP4
0xaa4 PUSH1 0x0
---
0x9da: JUMPDEST 
0x9dc: V800 = 0x1
0x9de: V801 = 0xa0
0x9e0: V802 = 0x2
0x9e2: V803 = EXP 0x2 0xa0
0x9e3: V804 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e4: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x9e5: V806 = 0x40
0x9e7: V807 = M[0x40]
0x9ea: V808 = 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0xa0c: M[V807] = 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0xa0d: V809 = 0x20
0xa0f: V810 = ADD 0x20 V807
0xa10: V811 = 0x6472657373290000000000000000000000000000000000000000000000000000
0xa32: M[V810] = 0x6472657373290000000000000000000000000000000000000000000000000000
0xa34: V812 = 0x26
0xa36: V813 = ADD 0x26 V807
0xa39: V814 = 0x40
0xa3b: V815 = M[0x40]
0xa3e: V816 = SUB V813 V815
0xa40: V817 = SHA3 V815 V816
0xa41: V818 = 0x100000000000000000000000000000000000000000000000000000000
0xa60: V819 = DIV V817 0x100000000000000000000000000000000000000000000000000000000
0xa63: V820 = 0x1
0xa65: V821 = ADD 0x1 S1
0xa67: V822 = 0x40
0xa69: V823 = M[0x40]
0xa6b: V824 = 0xffffffff
0xa70: V825 = AND 0xffffffff V819
0xa71: V826 = 0x100000000000000000000000000000000000000000000000000000000
0xa8f: V827 = MUL 0x100000000000000000000000000000000000000000000000000000000 V825
0xa91: M[V823] = V827
0xa92: V828 = 0x4
0xa94: V829 = ADD 0x4 V823
0xa98: V830 = M[S2]
0xa9a: V831 = 0x20
0xa9c: V832 = ADD 0x20 S2
0xa9e: V833 = 0x20
0xaa0: V834 = MUL 0x20 V830
0xaa4: V835 = 0x0
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0, V805, V819, S2, V821, S0, V829, V829, V832, V834, V834, V829, V832, 0x0]
Exit stack: [S2, S1, S0, V805, V819, S2, V821, S0, V829, V829, V832, V834, V834, V829, V832, 0x0]

================================

Block 0xaa6
[0xaa6:0xaae]
---
Predecessors: [0x9da]
Successors: [0xaaf]
---
0xaa6 JUMPDEST
0xaa7 DUP4
0xaa8 DUP2
0xaa9 LT
0xaaa ISZERO
0xaab PUSH2 0x166
0xaae JUMPI
---
0xaa6: JUMPDEST 
0xaa9: V836 = LT 0x0 V834
0xaaa: V837 = ISZERO V836
0xaab: V838 = 0x166
0xaae: THROWI V837
---
Entry stack: [S15, S14, S13, V805, V819, S10, V821, S8, V829, V829, V832, V834, V834, V829, V832, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S15, S14, S13, V805, V819, S10, V821, S8, V829, V829, V832, V834, V834, V829, V832, 0x0]

================================

Block 0xaaf
[0xaaf:0xb04]
---
Predecessors: [0xaa6]
Successors: [0xb05]
---
0xaaf DUP2
0xab0 DUP2
0xab1 ADD
0xab2 MLOAD
0xab3 DUP4
0xab4 DUP3
0xab5 ADD
0xab6 MSTORE
0xab7 PUSH1 0x20
0xab9 ADD
0xaba PUSH2 0x14e
0xabd JUMP
0xabe JUMPDEST
0xabf POP
0xac0 POP
0xac1 POP
0xac2 POP
0xac3 SWAP1
0xac4 POP
0xac5 ADD
0xac6 DUP4
0xac7 PUSH1 0xff
0xac9 AND
0xaca PUSH1 0xff
0xacc AND
0xacd DUP2
0xace MSTORE
0xacf PUSH1 0x20
0xad1 ADD
0xad2 DUP3
0xad3 PUSH1 0x1
0xad5 PUSH1 0xa0
0xad7 PUSH1 0x2
0xad9 EXP
0xada SUB
0xadb AND
0xadc PUSH1 0x1
0xade PUSH1 0xa0
0xae0 PUSH1 0x2
0xae2 EXP
0xae3 SUB
0xae4 AND
0xae5 DUP2
0xae6 MSTORE
0xae7 PUSH1 0x20
0xae9 ADD
0xaea SWAP4
0xaeb POP
0xaec POP
0xaed POP
0xaee POP
0xaef PUSH1 0x0
0xaf1 PUSH1 0x40
0xaf3 MLOAD
0xaf4 DUP1
0xaf5 DUP4
0xaf6 SUB
0xaf7 DUP2
0xaf8 DUP7
0xaf9 GAS
0xafa DELEGATECALL
0xafb SWAP3
0xafc POP
0xafd POP
0xafe POP
0xaff ISZERO
0xb00 ISZERO
0xb01 PUSH2 0x1b1
0xb04 JUMPI
---
0xab1: V839 = ADD 0x0 V832
0xab2: V840 = M[V839]
0xab5: V841 = ADD 0x0 V829
0xab6: M[V841] = V840
0xab7: V842 = 0x20
0xab9: V843 = ADD 0x20 0x0
0xaba: V844 = 0x14e
0xabd: THROW 
0xabe: JUMPDEST 
0xac5: V845 = ADD S4 S6
0xac7: V846 = 0xff
0xac9: V847 = AND 0xff S9
0xaca: V848 = 0xff
0xacc: V849 = AND 0xff V847
0xace: M[V845] = V849
0xacf: V850 = 0x20
0xad1: V851 = ADD 0x20 V845
0xad3: V852 = 0x1
0xad5: V853 = 0xa0
0xad7: V854 = 0x2
0xad9: V855 = EXP 0x2 0xa0
0xada: V856 = SUB 0x10000000000000000000000000000000000000000 0x1
0xadb: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xadc: V858 = 0x1
0xade: V859 = 0xa0
0xae0: V860 = 0x2
0xae2: V861 = EXP 0x2 0xa0
0xae3: V862 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae4: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0xae6: M[V851] = V863
0xae7: V864 = 0x20
0xae9: V865 = ADD 0x20 V851
0xaef: V866 = 0x0
0xaf1: V867 = 0x40
0xaf3: V868 = M[0x40]
0xaf6: V869 = SUB V865 V868
0xaf9: V870 = GAS
0xafa: V871 = DELEGATECALL V870 S12 V868 V869 V868 0x0
0xaff: V872 = ISZERO V871
0xb00: V873 = ISZERO V872
0xb01: V874 = 0x1b1
0xb04: THROWI V873
---
Entry stack: [S15, S14, S13, V805, V819, S10, V821, S8, V829, V829, V832, V834, V834, V829, V832, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xb05
[0xb05:0xbb2]
---
Predecessors: [0xaaf]
Successors: [0xbb3]
---
0xb05 PUSH1 0x0
0xb07 DUP1
0xb08 REVERT
0xb09 JUMPDEST
0xb0a PUSH2 0x25f
0xb0d JUMP
0xb0e JUMPDEST
0xb0f DUP1
0xb10 PUSH1 0x1
0xb12 PUSH1 0xa0
0xb14 PUSH1 0x2
0xb16 EXP
0xb17 SUB
0xb18 AND
0xb19 PUSH1 0x40
0xb1b MLOAD
0xb1c DUP1
0xb1d DUP1
0xb1e PUSH32 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb3f DUP2
0xb40 MSTORE
0xb41 POP
0xb42 PUSH1 0xc
0xb44 ADD
0xb45 SWAP1
0xb46 POP
0xb47 PUSH1 0x40
0xb49 MLOAD
0xb4a DUP1
0xb4b SWAP2
0xb4c SUB
0xb4d SWAP1
0xb4e SHA3
0xb4f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb6d SWAP1
0xb6e DIV
0xb6f PUSH1 0x40
0xb71 MLOAD
0xb72 DUP2
0xb73 PUSH4 0xffffffff
0xb78 AND
0xb79 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb97 MUL
0xb98 DUP2
0xb99 MSTORE
0xb9a PUSH1 0x4
0xb9c ADD
0xb9d PUSH1 0x0
0xb9f PUSH1 0x40
0xba1 MLOAD
0xba2 DUP1
0xba3 DUP4
0xba4 SUB
0xba5 DUP2
0xba6 DUP7
0xba7 GAS
0xba8 DELEGATECALL
0xba9 SWAP3
0xbaa POP
0xbab POP
0xbac POP
0xbad ISZERO
0xbae ISZERO
0xbaf PUSH2 0x25f
0xbb2 JUMPI
---
0xb05: V875 = 0x0
0xb08: REVERT 0x0 0x0
0xb09: JUMPDEST 
0xb0a: V876 = 0x25f
0xb0d: THROW 
0xb0e: JUMPDEST 
0xb10: V877 = 0x1
0xb12: V878 = 0xa0
0xb14: V879 = 0x2
0xb16: V880 = EXP 0x2 0xa0
0xb17: V881 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb18: V882 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xb19: V883 = 0x40
0xb1b: V884 = M[0x40]
0xb1e: V885 = 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb40: M[V884] = 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb42: V886 = 0xc
0xb44: V887 = ADD 0xc V884
0xb47: V888 = 0x40
0xb49: V889 = M[0x40]
0xb4c: V890 = SUB V887 V889
0xb4e: V891 = SHA3 V889 V890
0xb4f: V892 = 0x100000000000000000000000000000000000000000000000000000000
0xb6e: V893 = DIV V891 0x100000000000000000000000000000000000000000000000000000000
0xb6f: V894 = 0x40
0xb71: V895 = M[0x40]
0xb73: V896 = 0xffffffff
0xb78: V897 = AND 0xffffffff V893
0xb79: V898 = 0x100000000000000000000000000000000000000000000000000000000
0xb97: V899 = MUL 0x100000000000000000000000000000000000000000000000000000000 V897
0xb99: M[V895] = V899
0xb9a: V900 = 0x4
0xb9c: V901 = ADD 0x4 V895
0xb9d: V902 = 0x0
0xb9f: V903 = 0x40
0xba1: V904 = M[0x40]
0xba4: V905 = SUB V901 V904
0xba7: V906 = GAS
0xba8: V907 = DELEGATECALL V906 V882 V904 V905 V904 0x0
0xbad: V908 = ISZERO V907
0xbae: V909 = ISZERO V908
0xbaf: V910 = 0x25f
0xbb2: THROWI V909
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xbb3
[0xbb3:0xc1b]
---
Predecessors: [0xb05]
Successors: [0xc1c]
---
0xbb3 PUSH1 0x0
0xbb5 DUP1
0xbb6 REVERT
0xbb7 JUMPDEST
0xbb8 POP
0xbb9 POP
0xbba POP
0xbbb PUSH2 0x276
0xbbe JUMP
0xbbf JUMPDEST
0xbc0 PUSH1 0x40
0xbc2 MLOAD
0xbc3 PUSH1 0x52
0xbc5 DUP1
0xbc6 PUSH2 0x2b9
0xbc9 DUP4
0xbca CODECOPY
0xbcb ADD
0xbcc SWAP1
0xbcd JUMP
0xbce JUMPDEST
0xbcf PUSH1 0x35
0xbd1 DUP1
0xbd2 PUSH2 0x284
0xbd5 PUSH1 0x0
0xbd7 CODECOPY
0xbd8 PUSH1 0x0
0xbda RETURN
0xbdb STOP
0xbdc PUSH1 0x80
0xbde PUSH1 0x40
0xbe0 MSTORE
0xbe1 PUSH1 0x0
0xbe3 DUP1
0xbe4 REVERT
0xbe5 STOP
0xbe6 LOG1
0xbe7 PUSH6 0x627a7a723058
0xbee SHA3
0xbef PUSH22 0xd3c34141b63e59fff1d9a28ab16ad20a19cdad45899d
0xc06 MISSING 0xe5
0xc07 PUSH10 0x1cf91d5e9292b7002960
0xc12 DUP1
0xc13 PUSH1 0x40
0xc15 MSTORE
0xc16 CALLVALUE
0xc17 DUP1
0xc18 ISZERO
0xc19 PUSH1 0xf
0xc1b JUMPI
---
0xbb3: V911 = 0x0
0xbb6: REVERT 0x0 0x0
0xbb7: JUMPDEST 
0xbbb: V912 = 0x276
0xbbe: THROW 
0xbbf: JUMPDEST 
0xbc0: V913 = 0x40
0xbc2: V914 = M[0x40]
0xbc3: V915 = 0x52
0xbc6: V916 = 0x2b9
0xbca: CODECOPY V914 0x2b9 0x52
0xbcb: V917 = ADD 0x52 V914
0xbcd: JUMP S0
0xbce: JUMPDEST 
0xbcf: V918 = 0x35
0xbd2: V919 = 0x284
0xbd5: V920 = 0x0
0xbd7: CODECOPY 0x0 0x284 0x35
0xbd8: V921 = 0x0
0xbda: RETURN 0x0 0x35
0xbdb: STOP 
0xbdc: V922 = 0x80
0xbde: V923 = 0x40
0xbe0: M[0x40] = 0x80
0xbe1: V924 = 0x0
0xbe4: REVERT 0x0 0x0
0xbe5: STOP 
0xbe6: LOG S0 S1 S2
0xbe7: V925 = 0x627a7a723058
0xbee: V926 = SHA3 0x627a7a723058 S3
0xbef: V927 = 0xd3c34141b63e59fff1d9a28ab16ad20a19cdad45899d
0xc06: MISSING 0xe5
0xc07: V928 = 0x1cf91d5e9292b7002960
0xc13: V929 = 0x40
0xc15: M[0x40] = 0x1cf91d5e9292b7002960
0xc16: V930 = CALLVALUE
0xc18: V931 = ISZERO V930
0xc19: V932 = 0xf
0xc1b: THROWI V931
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V917, 0xd3c34141b63e59fff1d9a28ab16ad20a19cdad45899d, V926, V930, 0x1cf91d5e9292b7002960]
Exit stack: []

================================

Block 0xc1c
[0xc1c:0xc98]
---
Predecessors: [0xbb3]
Successors: []
---
0xc1c PUSH1 0x0
0xc1e DUP1
0xc1f REVERT
0xc20 JUMPDEST
0xc21 POP
0xc22 PUSH1 0x35
0xc24 DUP1
0xc25 PUSH1 0x1d
0xc27 PUSH1 0x0
0xc29 CODECOPY
0xc2a PUSH1 0x0
0xc2c RETURN
0xc2d STOP
0xc2e PUSH1 0x80
0xc30 PUSH1 0x40
0xc32 MSTORE
0xc33 PUSH1 0x0
0xc35 DUP1
0xc36 REVERT
0xc37 STOP
0xc38 LOG1
0xc39 PUSH6 0x627a7a723058
0xc40 SHA3
0xc41 MISSING 0x48
0xc42 MOD
0xc43 MISSING 0xfb
0xc44 SWAP9
0xc45 MISSING 0xb6
0xc46 OR
0xc47 MISSING 0xfb
0xc48 MISSING 0x49
0xc49 DUP3
0xc4a PUSH23 0x57c36366fa5f937e4634658e80b4e035fc19f0ca2d4700
0xc62 MISSING 0x29
0xc63 LOG1
0xc64 PUSH6 0x627a7a723058
0xc6b SHA3
0xc6c DUP16
0xc6d MISSING 0xbd
0xc6e GT
0xc6f GAS
0xc70 MISSING 0xc7
0xc71 DUP16
0xc72 MISSING 0xb3
0xc73 MISSING 0xcf
0xc74 MISSING 0xa7
0xc75 MISSING 0xb5
0xc76 MISSING 0xd8
0xc77 MSTORE
0xc78 PUSH5 0x1f12003bf5
0xc7e PUSH3 0x2cae73
0xc82 MISSING 0x22
0xc83 GAS
0xc84 CALLDATALOAD
0xc85 MISSING 0xcd
0xc86 MISSING 0xd1
0xc87 PUSH17 0x86a818a20029
---
0xc1c: V933 = 0x0
0xc1f: REVERT 0x0 0x0
0xc20: JUMPDEST 
0xc22: V934 = 0x35
0xc25: V935 = 0x1d
0xc27: V936 = 0x0
0xc29: CODECOPY 0x0 0x1d 0x35
0xc2a: V937 = 0x0
0xc2c: RETURN 0x0 0x35
0xc2d: STOP 
0xc2e: V938 = 0x80
0xc30: V939 = 0x40
0xc32: M[0x40] = 0x80
0xc33: V940 = 0x0
0xc36: REVERT 0x0 0x0
0xc37: STOP 
0xc38: LOG S0 S1 S2
0xc39: V941 = 0x627a7a723058
0xc40: V942 = SHA3 0x627a7a723058 S3
0xc41: MISSING 0x48
0xc42: V943 = MOD S0 S1
0xc43: MISSING 0xfb
0xc45: MISSING 0xb6
0xc46: V944 = OR S0 S1
0xc47: MISSING 0xfb
0xc48: MISSING 0x49
0xc4a: V945 = 0x57c36366fa5f937e4634658e80b4e035fc19f0ca2d4700
0xc62: MISSING 0x29
0xc63: LOG S0 S1 S2
0xc64: V946 = 0x627a7a723058
0xc6b: V947 = SHA3 0x627a7a723058 S3
0xc6d: MISSING 0xbd
0xc6e: V948 = GT S0 S1
0xc6f: V949 = GAS
0xc70: MISSING 0xc7
0xc72: MISSING 0xb3
0xc73: MISSING 0xcf
0xc74: MISSING 0xa7
0xc75: MISSING 0xb5
0xc76: MISSING 0xd8
0xc77: M[S0] = S1
0xc78: V950 = 0x1f12003bf5
0xc7e: V951 = 0x2cae73
0xc82: MISSING 0x22
0xc83: V952 = GAS
0xc84: V953 = CALLDATALOAD V952
0xc85: MISSING 0xcd
0xc86: MISSING 0xd1
0xc87: V954 = 0x86a818a20029
---
Entry stack: [0x1cf91d5e9292b7002960, V930]
Stack pops: 0
Stack additions: [V942, V943, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V944, 0x57c36366fa5f937e4634658e80b4e035fc19f0ca2d4700, S2, S0, S1, S2, S18, V947, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, V949, V948, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x2cae73, 0x1f12003bf5, V953, 0x86a818a20029]
Exit stack: []

================================

Function 0:
Public function signature: 0x41b0a3ed
Entry block: 0x66
Exit block: 0xbf
Body: 0x66, 0xbf, 0x102, 0x110, 0x14b, 0x154, 0x163, 0x182, 0x18b

Function 1:
Public function signature: 0x7cadfa34
Entry block: 0xdb
Exit block: 0xe3
Body: 0xdb, 0xe3, 0x195, 0x1fe, 0x202, 0x20d, 0x216, 0x274, 0x278, 0x283, 0x28c, 0x2a2, 0x2a6, 0x2de

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xe5
Exit block: 0xbf
Body: 0xbf, 0xe5, 0xed, 0xf1, 0x2ea

Function 3:
Public function signature: 0xbe9a6555
Entry block: 0xfa
Exit block: 0x70c
Body: 0xfa, 0x2f9, 0x309, 0x30d, 0x31b, 0x70c

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

Function 5:
Private function
Entry block: 0x907
Exit block: 0x87a
Body: 0x2e7, 0x31b, 0x320, 0x3c9, 0x3d5, 0x3d9, 0x3e5, 0x3eb, 0x3ff, 0x404, 0x42c, 0x43d, 0x474, 0x492, 0x4eb, 0x546, 0x572, 0x5a9, 0x5ad, 0x609, 0x612, 0x628, 0x65e, 0x6b8, 0x6c1, 0x6d7, 0x70d, 0x71e, 0x72a, 0x759, 0x762, 0x778, 0x7bc, 0x7c4, 0x7c9, 0x7d0, 0x7de, 0x813, 0x826, 0x855, 0x857, 0x87a, 0x87f, 0x8f1, 0x907, 0x915, 0x93c, 0x945, 0x950, 0x954

