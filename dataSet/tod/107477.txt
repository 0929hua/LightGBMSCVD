Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xf6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xf6
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xf6
0xa: JUMPI 0xf6 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x107]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2f58015
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x107
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2f58015
0x20: V14 = EQ V12 0x2f58015
0x21: V15 = 0x107
0x24: JUMPI 0x107 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x119]
---
0x25 DUP1
0x26 PUSH4 0x6fdde03
0x2b EQ
0x2c PUSH2 0x119
0x2f JUMPI
---
0x26: V16 = 0x6fdde03
0x2b: V17 = EQ 0x6fdde03 V12
0x2c: V18 = 0x119
0x2f: JUMPI 0x119 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1a9]
---
0x30 DUP1
0x31 PUSH4 0x27e235e3
0x36 EQ
0x37 PUSH2 0x1a9
0x3a JUMPI
---
0x31: V19 = 0x27e235e3
0x36: V20 = EQ 0x27e235e3 V12
0x37: V21 = 0x1a9
0x3a: JUMPI 0x1a9 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1d7]
---
0x3b DUP1
0x3c PUSH4 0x313ce567
0x41 EQ
0x42 PUSH2 0x1d7
0x45 JUMPI
---
0x3c: V22 = 0x313ce567
0x41: V23 = EQ 0x313ce567 V12
0x42: V24 = 0x1d7
0x45: JUMPI 0x1d7 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1fd]
---
0x46 DUP1
0x47 PUSH4 0x3ccfd60b
0x4c EQ
0x4d PUSH2 0x1fd
0x50 JUMPI
---
0x47: V25 = 0x3ccfd60b
0x4c: V26 = EQ 0x3ccfd60b V12
0x4d: V27 = 0x1fd
0x50: JUMPI 0x1fd V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x20f]
---
0x51 DUP1
0x52 PUSH4 0x41c0e1b5
0x57 EQ
0x58 PUSH2 0x20f
0x5b JUMPI
---
0x52: V28 = 0x41c0e1b5
0x57: V29 = EQ 0x41c0e1b5 V12
0x58: V30 = 0x20f
0x5b: JUMPI 0x20f V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x221]
---
0x5c DUP1
0x5d PUSH4 0x434f5f27
0x62 EQ
0x63 PUSH2 0x221
0x66 JUMPI
---
0x5d: V31 = 0x434f5f27
0x62: V32 = EQ 0x434f5f27 V12
0x63: V33 = 0x221
0x66: JUMPI 0x221 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x251]
---
0x67 DUP1
0x68 PUSH4 0x5259347d
0x6d EQ
0x6e PUSH2 0x251
0x71 JUMPI
---
0x68: V34 = 0x5259347d
0x6d: V35 = EQ 0x5259347d V12
0x6e: V36 = 0x251
0x71: JUMPI 0x251 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x25b]
---
0x72 DUP1
0x73 PUSH4 0x62f5ed61
0x78 EQ
0x79 PUSH2 0x25b
0x7c JUMPI
---
0x73: V37 = 0x62f5ed61
0x78: V38 = EQ 0x62f5ed61 V12
0x79: V39 = 0x25b
0x7c: JUMPI 0x25b V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x265]
---
0x7d DUP1
0x7e PUSH4 0x6360fc3f
0x83 EQ
0x84 PUSH2 0x265
0x87 JUMPI
---
0x7e: V40 = 0x6360fc3f
0x83: V41 = EQ 0x6360fc3f V12
0x84: V42 = 0x265
0x87: JUMPI 0x265 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x289]
---
0x88 DUP1
0x89 PUSH4 0x70144f8f
0x8e EQ
0x8f PUSH2 0x289
0x92 JUMPI
---
0x89: V43 = 0x70144f8f
0x8e: V44 = EQ 0x70144f8f V12
0x8f: V45 = 0x289
0x92: JUMPI 0x289 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x29b]
---
0x93 DUP1
0x94 PUSH4 0x70a08231
0x99 EQ
0x9a PUSH2 0x29b
0x9d JUMPI
---
0x94: V46 = 0x70a08231
0x99: V47 = EQ 0x70a08231 V12
0x9a: V48 = 0x29b
0x9d: JUMPI 0x29b V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2c9]
---
0x9e DUP1
0x9f PUSH4 0x87612102
0xa4 EQ
0xa5 PUSH2 0x2c9
0xa8 JUMPI
---
0x9f: V49 = 0x87612102
0xa4: V50 = EQ 0x87612102 V12
0xa5: V51 = 0x2c9
0xa8: JUMPI 0x2c9 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2d3]
---
0xa9 DUP1
0xaa PUSH4 0x943dfef1
0xaf EQ
0xb0 PUSH2 0x2d3
0xb3 JUMPI
---
0xaa: V52 = 0x943dfef1
0xaf: V53 = EQ 0x943dfef1 V12
0xb0: V54 = 0x2d3
0xb3: JUMPI 0x2d3 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2f5]
---
0xb4 DUP1
0xb5 PUSH4 0x95d89b41
0xba EQ
0xbb PUSH2 0x2f5
0xbe JUMPI
---
0xb5: V55 = 0x95d89b41
0xba: V56 = EQ 0x95d89b41 V12
0xbb: V57 = 0x2f5
0xbe: JUMPI 0x2f5 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x385]
---
0xbf DUP1
0xc0 PUSH4 0xa089feea
0xc5 EQ
0xc6 PUSH2 0x385
0xc9 JUMPI
---
0xc0: V58 = 0xa089feea
0xc5: V59 = EQ 0xa089feea V12
0xc6: V60 = 0x385
0xc9: JUMPI 0x385 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3a9]
---
0xca DUP1
0xcb PUSH4 0xa0ef91df
0xd0 EQ
0xd1 PUSH2 0x3a9
0xd4 JUMPI
---
0xcb: V61 = 0xa0ef91df
0xd0: V62 = EQ 0xa0ef91df V12
0xd1: V63 = 0x3a9
0xd4: JUMPI 0x3a9 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3bb]
---
0xd5 DUP1
0xd6 PUSH4 0xa9059cbb
0xdb EQ
0xdc PUSH2 0x3bb
0xdf JUMPI
---
0xd6: V64 = 0xa9059cbb
0xdb: V65 = EQ 0xa9059cbb V12
0xdc: V66 = 0x3bb
0xdf: JUMPI 0x3bb V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3dc]
---
0xe0 DUP1
0xe1 PUSH4 0xc3dac9a1
0xe6 EQ
0xe7 PUSH2 0x3dc
0xea JUMPI
---
0xe1: V67 = 0xc3dac9a1
0xe6: V68 = EQ 0xc3dac9a1 V12
0xe7: V69 = 0x3dc
0xea: JUMPI 0x3dc V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x3fe]
---
0xeb DUP1
0xec PUSH4 0xfc0c546a
0xf1 EQ
0xf2 PUSH2 0x3fe
0xf5 JUMPI
---
0xec: V70 = 0xfc0c546a
0xf1: V71 = EQ 0xfc0c546a V12
0xf2: V72 = 0x3fe
0xf5: JUMPI 0x3fe V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0x0, 0xeb]
Successors: [0xfa]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x105
---
0xf6: JUMPDEST 
0xf7: V73 = 0x105
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0xf6]
Successors: [0x42a]
---
0xfa JUMPDEST
0xfb PUSH2 0x102
0xfe PUSH2 0x42a
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V74 = 0x102
0xfe: V75 = 0x42a
0x101: JUMP 0x42a
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V12, 0x105, 0x102]

================================

Block 0x102
[0x102:0x102]
---
Predecessors: [0x103, 0x569, 0x5b0, 0x5be, 0x6b4, 0x6b9, 0x6d7, 0xb3b]
Successors: [0x103]
---
0x102 JUMPDEST
---
0x102: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: [0x102]
Successors: [0x102, 0x105]
---
0x103 JUMPDEST
0x104 JUMP
---
0x103: JUMPDEST 
0x104: JUMP S0
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x105
[0x105:0x106]
---
Predecessors: [0x103, 0x5b0, 0x98c, 0xa1a, 0xa4f, 0xa80, 0xc27]
Successors: []
---
0x105 JUMPDEST
0x106 STOP
---
0x105: JUMPDEST 
0x106: STOP 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0xb]
Successors: [0x10e, 0x10f]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a PUSH2 0x10f
0x10d JUMPI
---
0x107: JUMPDEST 
0x108: V76 = CALLVALUE
0x109: V77 = ISZERO V76
0x10a: V78 = 0x10f
0x10d: JUMPI 0x10f V77
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10e
[0x10e:0x10e]
---
Predecessors: [0x107]
Successors: []
---
0x10e INVALID
---
0x10e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x107]
Successors: [0x5b2]
---
0x10f JUMPDEST
0x110 PUSH2 0x105
0x113 PUSH2 0x5b2
0x116 JUMP
---
0x10f: JUMPDEST 
0x110: V79 = 0x105
0x113: V80 = 0x5b2
0x116: JUMP 0x5b2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: []
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0x25]
Successors: [0x120, 0x121]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b ISZERO
0x11c PUSH2 0x121
0x11f JUMPI
---
0x119: JUMPDEST 
0x11a: V81 = CALLVALUE
0x11b: V82 = ISZERO V81
0x11c: V83 = 0x121
0x11f: JUMPI 0x121 V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x120
[0x120:0x120]
---
Predecessors: [0x119]
Successors: []
---
0x120 INVALID
---
0x120: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x121
[0x121:0x128]
---
Predecessors: [0x119]
Successors: [0x709]
---
0x121 JUMPDEST
0x122 PUSH2 0x129
0x125 PUSH2 0x709
0x128 JUMP
---
0x121: JUMPDEST 
0x122: V84 = 0x129
0x125: V85 = 0x709
0x128: JUMP 0x709
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V12, 0x129]

================================

Block 0x129
[0x129:0x14e]
---
Predecessors: [0x78f]
Successors: [0x14f, 0x16f]
---
0x129 JUMPDEST
0x12a PUSH1 0x40
0x12c DUP1
0x12d MLOAD
0x12e PUSH1 0x20
0x130 DUP1
0x131 DUP3
0x132 MSTORE
0x133 DUP4
0x134 MLOAD
0x135 DUP2
0x136 DUP4
0x137 ADD
0x138 MSTORE
0x139 DUP4
0x13a MLOAD
0x13b SWAP2
0x13c SWAP3
0x13d DUP4
0x13e SWAP3
0x13f SWAP1
0x140 DUP4
0x141 ADD
0x142 SWAP2
0x143 DUP6
0x144 ADD
0x145 SWAP1
0x146 DUP1
0x147 DUP4
0x148 DUP4
0x149 DUP3
0x14a ISZERO
0x14b PUSH2 0x16f
0x14e JUMPI
---
0x129: JUMPDEST 
0x12a: V86 = 0x40
0x12d: V87 = M[0x40]
0x12e: V88 = 0x20
0x132: M[V87] = 0x20
0x134: V89 = M[S0]
0x137: V90 = ADD V87 0x20
0x138: M[V90] = V89
0x13a: V91 = M[S0]
0x141: V92 = ADD V87 0x40
0x144: V93 = ADD S0 0x20
0x14a: V94 = ISZERO V91
0x14b: V95 = 0x16f
0x14e: JUMPI 0x16f V94
---
Entry stack: [V12, 0x129, S0]
Stack pops: 1
Stack additions: [S0, V87, V87, V92, V93, V91, V91, V92, V93]
Exit stack: [V12, 0x129, S0, V87, V87, V92, V93, V91, V91, V92, V93]

================================

Block 0x14f
[0x14f:0x15c]
---
Predecessors: [0x129, 0x15d, 0x339]
Successors: [0x15d, 0x16f]
---
0x14f JUMPDEST
0x150 DUP1
0x151 MLOAD
0x152 DUP3
0x153 MSTORE
0x154 PUSH1 0x20
0x156 DUP4
0x157 GT
0x158 ISZERO
0x159 PUSH2 0x16f
0x15c JUMPI
---
0x14f: JUMPDEST 
0x151: V96 = M[S0]
0x153: M[S1] = V96
0x154: V97 = 0x20
0x157: V98 = GT S2 0x20
0x158: V99 = ISZERO V98
0x159: V100 = 0x16f
0x15c: JUMPI 0x16f V99
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x15d
[0x15d:0x16e]
---
Predecessors: [0x14f]
Successors: [0x14f]
---
0x15d PUSH1 0x1f
0x15f NOT
0x160 SWAP1
0x161 SWAP3
0x162 ADD
0x163 SWAP2
0x164 PUSH1 0x20
0x166 SWAP2
0x167 DUP3
0x168 ADD
0x169 SWAP2
0x16a ADD
0x16b PUSH2 0x14f
0x16e JUMP
---
0x15d: V101 = 0x1f
0x15f: V102 = NOT 0x1f
0x162: V103 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x164: V104 = 0x20
0x168: V105 = ADD 0x20 S1
0x16a: V106 = ADD 0x20 S0
0x16b: V107 = 0x14f
0x16e: JUMP 0x14f
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V103, V105, V106]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, V103, V105, V106]

================================

Block 0x16f
[0x16f:0x181]
---
Predecessors: [0x129, 0x14f, 0x305, 0x32b]
Successors: [0x182, 0x19b]
---
0x16f JUMPDEST
0x170 POP
0x171 POP
0x172 POP
0x173 SWAP1
0x174 POP
0x175 SWAP1
0x176 DUP2
0x177 ADD
0x178 SWAP1
0x179 PUSH1 0x1f
0x17b AND
0x17c DUP1
0x17d ISZERO
0x17e PUSH2 0x19b
0x181 JUMPI
---
0x16f: JUMPDEST 
0x177: V108 = ADD S3 S5
0x179: V109 = 0x1f
0x17b: V110 = AND 0x1f S3
0x17d: V111 = ISZERO V110
0x17e: V112 = 0x19b
0x181: JUMPI 0x19b V111
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V108, V110]
Exit stack: [V12, S9, S8, S7, S6, V108, V110]

================================

Block 0x182
[0x182:0x19a]
---
Predecessors: [0x16f]
Successors: [0x19b]
---
0x182 DUP1
0x183 DUP3
0x184 SUB
0x185 DUP1
0x186 MLOAD
0x187 PUSH1 0x1
0x189 DUP4
0x18a PUSH1 0x20
0x18c SUB
0x18d PUSH2 0x100
0x190 EXP
0x191 SUB
0x192 NOT
0x193 AND
0x194 DUP2
0x195 MSTORE
0x196 PUSH1 0x20
0x198 ADD
0x199 SWAP2
0x19a POP
---
0x184: V113 = SUB V108 V110
0x186: V114 = M[V113]
0x187: V115 = 0x1
0x18a: V116 = 0x20
0x18c: V117 = SUB 0x20 V110
0x18d: V118 = 0x100
0x190: V119 = EXP 0x100 V117
0x191: V120 = SUB V119 0x1
0x192: V121 = NOT V120
0x193: V122 = AND V121 V114
0x195: M[V113] = V122
0x196: V123 = 0x20
0x198: V124 = ADD 0x20 V113
---
Entry stack: [V12, S5, S4, S3, S2, V108, V110]
Stack pops: 2
Stack additions: [V124, S0]
Exit stack: [V12, S5, S4, S3, S2, V124, V110]

================================

Block 0x19b
[0x19b:0x1a8]
---
Predecessors: [0x16f, 0x182, 0x34b]
Successors: []
---
0x19b JUMPDEST
0x19c POP
0x19d SWAP3
0x19e POP
0x19f POP
0x1a0 POP
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 DUP1
0x1a5 SWAP2
0x1a6 SUB
0x1a7 SWAP1
0x1a8 RETURN
---
0x19b: JUMPDEST 
0x1a1: V125 = 0x40
0x1a3: V126 = M[0x40]
0x1a6: V127 = SUB S1 V126
0x1a8: RETURN V126 V127
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, S5]

================================

Block 0x1a9
[0x1a9:0x1af]
---
Predecessors: [0x30]
Successors: [0x1b0, 0x1b1]
---
0x1a9 JUMPDEST
0x1aa CALLVALUE
0x1ab ISZERO
0x1ac PUSH2 0x1b1
0x1af JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V128 = CALLVALUE
0x1ab: V129 = ISZERO V128
0x1ac: V130 = 0x1b1
0x1af: JUMPI 0x1b1 V129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1b0]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b0 INVALID
---
0x1b0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b1
[0x1b1:0x1c4]
---
Predecessors: [0x1a9]
Successors: [0x797]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x1c5
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd PUSH1 0x4
0x1bf CALLDATALOAD
0x1c0 AND
0x1c1 PUSH2 0x797
0x1c4 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V131 = 0x1c5
0x1b5: V132 = 0x1
0x1b7: V133 = 0xa0
0x1b9: V134 = 0x2
0x1bb: V135 = EXP 0x2 0xa0
0x1bc: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V137 = 0x4
0x1bf: V138 = CALLDATALOAD 0x4
0x1c0: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V140 = 0x797
0x1c4: JUMP 0x797
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c5, V139]
Exit stack: [V12, 0x1c5, V139]

================================

Block 0x1c5
[0x1c5:0x1d6]
---
Predecessors: [0x797, 0xa51, 0xa82, 0xc2b]
Successors: []
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x40
0x1c8 DUP1
0x1c9 MLOAD
0x1ca SWAP2
0x1cb DUP3
0x1cc MSTORE
0x1cd MLOAD
0x1ce SWAP1
0x1cf DUP2
0x1d0 SWAP1
0x1d1 SUB
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 SWAP1
0x1d6 RETURN
---
0x1c5: JUMPDEST 
0x1c6: V141 = 0x40
0x1c9: V142 = M[0x40]
0x1cc: M[V142] = S0
0x1cd: V143 = M[0x40]
0x1d1: V144 = SUB V142 V143
0x1d2: V145 = 0x20
0x1d4: V146 = ADD 0x20 V144
0x1d6: RETURN V143 V146
---
Entry stack: [V12, 0x1c5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c5]

================================

Block 0x1d7
[0x1d7:0x1dd]
---
Predecessors: [0x3b]
Successors: [0x1de, 0x1df]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 ISZERO
0x1da PUSH2 0x1df
0x1dd JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V147 = CALLVALUE
0x1d9: V148 = ISZERO V147
0x1da: V149 = 0x1df
0x1dd: JUMPI 0x1df V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1de
[0x1de:0x1de]
---
Predecessors: [0x1d7]
Successors: []
---
0x1de INVALID
---
0x1de: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1df
[0x1df:0x1e6]
---
Predecessors: [0x1d7]
Successors: [0x7a9]
---
0x1df JUMPDEST
0x1e0 PUSH2 0x1e7
0x1e3 PUSH2 0x7a9
0x1e6 JUMP
---
0x1df: JUMPDEST 
0x1e0: V150 = 0x1e7
0x1e3: V151 = 0x7a9
0x1e6: JUMP 0x7a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e7]
Exit stack: [V12, 0x1e7]

================================

Block 0x1e7
[0x1e7:0x1fc]
---
Predecessors: [0x7a9]
Successors: []
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x40
0x1ea DUP1
0x1eb MLOAD
0x1ec PUSH1 0xff
0x1ee SWAP1
0x1ef SWAP3
0x1f0 AND
0x1f1 DUP3
0x1f2 MSTORE
0x1f3 MLOAD
0x1f4 SWAP1
0x1f5 DUP2
0x1f6 SWAP1
0x1f7 SUB
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb SWAP1
0x1fc RETURN
---
0x1e7: JUMPDEST 
0x1e8: V152 = 0x40
0x1eb: V153 = M[0x40]
0x1ec: V154 = 0xff
0x1f0: V155 = AND V716 0xff
0x1f2: M[V153] = V155
0x1f3: V156 = M[0x40]
0x1f7: V157 = SUB V153 V156
0x1f8: V158 = 0x20
0x1fa: V159 = ADD 0x20 V157
0x1fc: RETURN V156 V159
---
Entry stack: [V12, 0x1e7, V716]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e7]

================================

Block 0x1fd
[0x1fd:0x203]
---
Predecessors: [0x46]
Successors: [0x204, 0x205]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff ISZERO
0x200 PUSH2 0x205
0x203 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V160 = CALLVALUE
0x1ff: V161 = ISZERO V160
0x200: V162 = 0x205
0x203: JUMPI 0x205 V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x204
[0x204:0x204]
---
Predecessors: [0x1fd]
Successors: []
---
0x204 INVALID
---
0x204: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x1fd]
Successors: [0x7b2]
---
0x205 JUMPDEST
0x206 PUSH2 0x105
0x209 PUSH2 0x7b2
0x20c JUMP
---
0x205: JUMPDEST 
0x206: V163 = 0x105
0x209: V164 = 0x7b2
0x20c: JUMP 0x7b2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x20d
[0x20d:0x20e]
---
Predecessors: []
Successors: []
---
0x20d JUMPDEST
0x20e STOP
---
0x20d: JUMPDEST 
0x20e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20f
[0x20f:0x215]
---
Predecessors: [0x51]
Successors: [0x216, 0x217]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 ISZERO
0x212 PUSH2 0x217
0x215 JUMPI
---
0x20f: JUMPDEST 
0x210: V165 = CALLVALUE
0x211: V166 = ISZERO V165
0x212: V167 = 0x217
0x215: JUMPI 0x217 V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x216
[0x216:0x216]
---
Predecessors: [0x20f]
Successors: []
---
0x216 INVALID
---
0x216: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x217
[0x217:0x21e]
---
Predecessors: [0x20f]
Successors: [0x991]
---
0x217 JUMPDEST
0x218 PUSH2 0x105
0x21b PUSH2 0x991
0x21e JUMP
---
0x217: JUMPDEST 
0x218: V168 = 0x105
0x21b: V169 = 0x991
0x21e: JUMP 0x991
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x21f
[0x21f:0x220]
---
Predecessors: []
Successors: []
---
0x21f JUMPDEST
0x220 STOP
---
0x21f: JUMPDEST 
0x220: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x221
[0x221:0x227]
---
Predecessors: [0x5c]
Successors: [0x228, 0x229]
---
0x221 JUMPDEST
0x222 CALLVALUE
0x223 ISZERO
0x224 PUSH2 0x229
0x227 JUMPI
---
0x221: JUMPDEST 
0x222: V170 = CALLVALUE
0x223: V171 = ISZERO V170
0x224: V172 = 0x229
0x227: JUMPI 0x229 V171
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x228
[0x228:0x228]
---
Predecessors: [0x221]
Successors: []
---
0x228 INVALID
---
0x228: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x23c]
---
Predecessors: [0x221]
Successors: [0x9be]
---
0x229 JUMPDEST
0x22a PUSH2 0x23d
0x22d PUSH1 0x1
0x22f PUSH1 0xa0
0x231 PUSH1 0x2
0x233 EXP
0x234 SUB
0x235 PUSH1 0x4
0x237 CALLDATALOAD
0x238 AND
0x239 PUSH2 0x9be
0x23c JUMP
---
0x229: JUMPDEST 
0x22a: V173 = 0x23d
0x22d: V174 = 0x1
0x22f: V175 = 0xa0
0x231: V176 = 0x2
0x233: V177 = EXP 0x2 0xa0
0x234: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V179 = 0x4
0x237: V180 = CALLDATALOAD 0x4
0x238: V181 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x239: V182 = 0x9be
0x23c: JUMP 0x9be
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23d, V181]
Exit stack: [V12, 0x23d, V181]

================================

Block 0x23d
[0x23d:0x250]
---
Predecessors: [0x9be, 0xa1c, 0xb16]
Successors: []
---
0x23d JUMPDEST
0x23e PUSH1 0x40
0x240 DUP1
0x241 MLOAD
0x242 SWAP2
0x243 ISZERO
0x244 ISZERO
0x245 DUP3
0x246 MSTORE
0x247 MLOAD
0x248 SWAP1
0x249 DUP2
0x24a SWAP1
0x24b SUB
0x24c PUSH1 0x20
0x24e ADD
0x24f SWAP1
0x250 RETURN
---
0x23d: JUMPDEST 
0x23e: V183 = 0x40
0x241: V184 = M[0x40]
0x243: V185 = ISZERO S0
0x244: V186 = ISZERO V185
0x246: M[V184] = V186
0x247: V187 = M[0x40]
0x24b: V188 = SUB V184 V187
0x24c: V189 = 0x20
0x24e: V190 = ADD 0x20 V188
0x250: RETURN V187 V190
---
Entry stack: [V12, 0x23d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x23d]

================================

Block 0x251
[0x251:0x258]
---
Predecessors: [0x67]
Successors: [0x42a]
---
0x251 JUMPDEST
0x252 PUSH2 0x105
0x255 PUSH2 0x42a
0x258 JUMP
---
0x251: JUMPDEST 
0x252: V191 = 0x105
0x255: V192 = 0x42a
0x258: JUMP 0x42a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x259
[0x259:0x25a]
---
Predecessors: []
Successors: []
---
0x259 JUMPDEST
0x25a STOP
---
0x259: JUMPDEST 
0x25a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x25b
[0x25b:0x262]
---
Predecessors: [0x72]
Successors: [0x9d3]
---
0x25b JUMPDEST
0x25c PUSH2 0x105
0x25f PUSH2 0x9d3
0x262 JUMP
---
0x25b: JUMPDEST 
0x25c: V193 = 0x105
0x25f: V194 = 0x9d3
0x262: JUMP 0x9d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x263
[0x263:0x264]
---
Predecessors: []
Successors: []
---
0x263 JUMPDEST
0x264 STOP
---
0x263: JUMPDEST 
0x264: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x265
[0x265:0x26b]
---
Predecessors: [0x7d]
Successors: [0x26c, 0x26d]
---
0x265 JUMPDEST
0x266 CALLVALUE
0x267 ISZERO
0x268 PUSH2 0x26d
0x26b JUMPI
---
0x265: JUMPDEST 
0x266: V195 = CALLVALUE
0x267: V196 = ISZERO V195
0x268: V197 = 0x26d
0x26b: JUMPI 0x26d V196
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26c
[0x26c:0x26c]
---
Predecessors: [0x265]
Successors: []
---
0x26c INVALID
---
0x26c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26d
[0x26d:0x274]
---
Predecessors: [0x265]
Successors: [0xa1c]
---
0x26d JUMPDEST
0x26e PUSH2 0x23d
0x271 PUSH2 0xa1c
0x274 JUMP
---
0x26d: JUMPDEST 
0x26e: V198 = 0x23d
0x271: V199 = 0xa1c
0x274: JUMP 0xa1c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V12, 0x23d]

================================

Block 0x275
[0x275:0x288]
---
Predecessors: []
Successors: []
---
0x275 JUMPDEST
0x276 PUSH1 0x40
0x278 DUP1
0x279 MLOAD
0x27a SWAP2
0x27b ISZERO
0x27c ISZERO
0x27d DUP3
0x27e MSTORE
0x27f MLOAD
0x280 SWAP1
0x281 DUP2
0x282 SWAP1
0x283 SUB
0x284 PUSH1 0x20
0x286 ADD
0x287 SWAP1
0x288 RETURN
---
0x275: JUMPDEST 
0x276: V200 = 0x40
0x279: V201 = M[0x40]
0x27b: V202 = ISZERO S0
0x27c: V203 = ISZERO V202
0x27e: M[V201] = V203
0x27f: V204 = M[0x40]
0x283: V205 = SUB V201 V204
0x284: V206 = 0x20
0x286: V207 = ADD 0x20 V205
0x288: RETURN V204 V207
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x289
[0x289:0x28f]
---
Predecessors: [0x88]
Successors: [0x290, 0x291]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b ISZERO
0x28c PUSH2 0x291
0x28f JUMPI
---
0x289: JUMPDEST 
0x28a: V208 = CALLVALUE
0x28b: V209 = ISZERO V208
0x28c: V210 = 0x291
0x28f: JUMPI 0x291 V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: [0x289]
Successors: []
---
0x290 INVALID
---
0x290: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x291
[0x291:0x298]
---
Predecessors: [0x289]
Successors: [0xa25]
---
0x291 JUMPDEST
0x292 PUSH2 0x105
0x295 PUSH2 0xa25
0x298 JUMP
---
0x291: JUMPDEST 
0x292: V211 = 0x105
0x295: V212 = 0xa25
0x298: JUMP 0xa25
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x299
[0x299:0x29a]
---
Predecessors: []
Successors: []
---
0x299 JUMPDEST
0x29a STOP
---
0x299: JUMPDEST 
0x29a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29b
[0x29b:0x2a1]
---
Predecessors: [0x93]
Successors: [0x2a2, 0x2a3]
---
0x29b JUMPDEST
0x29c CALLVALUE
0x29d ISZERO
0x29e PUSH2 0x2a3
0x2a1 JUMPI
---
0x29b: JUMPDEST 
0x29c: V213 = CALLVALUE
0x29d: V214 = ISZERO V213
0x29e: V215 = 0x2a3
0x2a1: JUMPI 0x2a3 V214
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a2
[0x2a2:0x2a2]
---
Predecessors: [0x29b]
Successors: []
---
0x2a2 INVALID
---
0x2a2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a3
[0x2a3:0x2b6]
---
Predecessors: [0x29b]
Successors: [0xa51]
---
0x2a3 JUMPDEST
0x2a4 PUSH2 0x1c5
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af PUSH1 0x4
0x2b1 CALLDATALOAD
0x2b2 AND
0x2b3 PUSH2 0xa51
0x2b6 JUMP
---
0x2a3: JUMPDEST 
0x2a4: V216 = 0x1c5
0x2a7: V217 = 0x1
0x2a9: V218 = 0xa0
0x2ab: V219 = 0x2
0x2ad: V220 = EXP 0x2 0xa0
0x2ae: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V222 = 0x4
0x2b1: V223 = CALLDATALOAD 0x4
0x2b2: V224 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V225 = 0xa51
0x2b6: JUMP 0xa51
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c5, V224]
Exit stack: [V12, 0x1c5, V224]

================================

Block 0x2b7
[0x2b7:0x2c8]
---
Predecessors: []
Successors: []
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x40
0x2ba DUP1
0x2bb MLOAD
0x2bc SWAP2
0x2bd DUP3
0x2be MSTORE
0x2bf MLOAD
0x2c0 SWAP1
0x2c1 DUP2
0x2c2 SWAP1
0x2c3 SUB
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 SWAP1
0x2c8 RETURN
---
0x2b7: JUMPDEST 
0x2b8: V226 = 0x40
0x2bb: V227 = M[0x40]
0x2be: M[V227] = S0
0x2bf: V228 = M[0x40]
0x2c3: V229 = SUB V227 V228
0x2c4: V230 = 0x20
0x2c6: V231 = ADD 0x20 V229
0x2c8: RETURN V228 V231
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c9
[0x2c9:0x2d0]
---
Predecessors: [0x9e]
Successors: [0xa63]
---
0x2c9 JUMPDEST
0x2ca PUSH2 0x105
0x2cd PUSH2 0xa63
0x2d0 JUMP
---
0x2c9: JUMPDEST 
0x2ca: V232 = 0x105
0x2cd: V233 = 0xa63
0x2d0: JUMP 0xa63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x2d1
[0x2d1:0x2d2]
---
Predecessors: []
Successors: []
---
0x2d1 JUMPDEST
0x2d2 STOP
---
0x2d1: JUMPDEST 
0x2d2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0xa9]
Successors: [0x2da, 0x2db]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x2db
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V234 = CALLVALUE
0x2d5: V235 = ISZERO V234
0x2d6: V236 = 0x2db
0x2d9: JUMPI 0x2db V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2da
[0x2da:0x2da]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da INVALID
---
0x2da: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2db
[0x2db:0x2e2]
---
Predecessors: [0x2d3]
Successors: [0xa82]
---
0x2db JUMPDEST
0x2dc PUSH2 0x1c5
0x2df PUSH2 0xa82
0x2e2 JUMP
---
0x2db: JUMPDEST 
0x2dc: V237 = 0x1c5
0x2df: V238 = 0xa82
0x2e2: JUMP 0xa82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c5]
Exit stack: [V12, 0x1c5]

================================

Block 0x2e3
[0x2e3:0x2f4]
---
Predecessors: []
Successors: []
---
0x2e3 JUMPDEST
0x2e4 PUSH1 0x40
0x2e6 DUP1
0x2e7 MLOAD
0x2e8 SWAP2
0x2e9 DUP3
0x2ea MSTORE
0x2eb MLOAD
0x2ec SWAP1
0x2ed DUP2
0x2ee SWAP1
0x2ef SUB
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 SWAP1
0x2f4 RETURN
---
0x2e3: JUMPDEST 
0x2e4: V239 = 0x40
0x2e7: V240 = M[0x40]
0x2ea: M[V240] = S0
0x2eb: V241 = M[0x40]
0x2ef: V242 = SUB V240 V241
0x2f0: V243 = 0x20
0x2f2: V244 = ADD 0x20 V242
0x2f4: RETURN V241 V244
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f5
[0x2f5:0x2fb]
---
Predecessors: [0xb4]
Successors: [0x2fc, 0x2fd]
---
0x2f5 JUMPDEST
0x2f6 CALLVALUE
0x2f7 ISZERO
0x2f8 PUSH2 0x2fd
0x2fb JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V245 = CALLVALUE
0x2f7: V246 = ISZERO V245
0x2f8: V247 = 0x2fd
0x2fb: JUMPI 0x2fd V246
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fc
[0x2fc:0x2fc]
---
Predecessors: [0x2f5]
Successors: []
---
0x2fc INVALID
---
0x2fc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fd
[0x2fd:0x304]
---
Predecessors: [0x2f5]
Successors: [0xa88]
---
0x2fd JUMPDEST
0x2fe PUSH2 0x129
0x301 PUSH2 0xa88
0x304 JUMP
---
0x2fd: JUMPDEST 
0x2fe: V248 = 0x129
0x301: V249 = 0xa88
0x304: JUMP 0xa88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V12, 0x129]

================================

Block 0x305
[0x305:0x32a]
---
Predecessors: []
Successors: [0x16f, 0x32b]
---
0x305 JUMPDEST
0x306 PUSH1 0x40
0x308 DUP1
0x309 MLOAD
0x30a PUSH1 0x20
0x30c DUP1
0x30d DUP3
0x30e MSTORE
0x30f DUP4
0x310 MLOAD
0x311 DUP2
0x312 DUP4
0x313 ADD
0x314 MSTORE
0x315 DUP4
0x316 MLOAD
0x317 SWAP2
0x318 SWAP3
0x319 DUP4
0x31a SWAP3
0x31b SWAP1
0x31c DUP4
0x31d ADD
0x31e SWAP2
0x31f DUP6
0x320 ADD
0x321 SWAP1
0x322 DUP1
0x323 DUP4
0x324 DUP4
0x325 DUP3
0x326 ISZERO
0x327 PUSH2 0x16f
0x32a JUMPI
---
0x305: JUMPDEST 
0x306: V250 = 0x40
0x309: V251 = M[0x40]
0x30a: V252 = 0x20
0x30e: M[V251] = 0x20
0x310: V253 = M[S0]
0x313: V254 = ADD V251 0x20
0x314: M[V254] = V253
0x316: V255 = M[S0]
0x31d: V256 = ADD V251 0x40
0x320: V257 = ADD S0 0x20
0x326: V258 = ISZERO V255
0x327: V259 = 0x16f
0x32a: JUMPI 0x16f V258
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V251, V251, V256, V257, V255, V255, V256, V257]
Exit stack: [S0, V251, V251, V256, V257, V255, V255, V256, V257]

================================

Block 0x32b
[0x32b:0x338]
---
Predecessors: [0x305]
Successors: [0x16f, 0x339]
---
0x32b JUMPDEST
0x32c DUP1
0x32d MLOAD
0x32e DUP3
0x32f MSTORE
0x330 PUSH1 0x20
0x332 DUP4
0x333 GT
0x334 ISZERO
0x335 PUSH2 0x16f
0x338 JUMPI
---
0x32b: JUMPDEST 
0x32d: V260 = M[V257]
0x32f: M[V256] = V260
0x330: V261 = 0x20
0x333: V262 = GT V255 0x20
0x334: V263 = ISZERO V262
0x335: V264 = 0x16f
0x338: JUMPI 0x16f V263
---
Entry stack: [S8, V251, V251, V256, V257, V255, V255, V256, V257]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V251, V251, V256, V257, V255, V255, V256, V257]

================================

Block 0x339
[0x339:0x34a]
---
Predecessors: [0x32b]
Successors: [0x14f]
---
0x339 PUSH1 0x1f
0x33b NOT
0x33c SWAP1
0x33d SWAP3
0x33e ADD
0x33f SWAP2
0x340 PUSH1 0x20
0x342 SWAP2
0x343 DUP3
0x344 ADD
0x345 SWAP2
0x346 ADD
0x347 PUSH2 0x14f
0x34a JUMP
---
0x339: V265 = 0x1f
0x33b: V266 = NOT 0x1f
0x33e: V267 = ADD V255 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x340: V268 = 0x20
0x344: V269 = ADD 0x20 V256
0x346: V270 = ADD 0x20 V257
0x347: V271 = 0x14f
0x34a: JUMP 0x14f
---
Entry stack: [S8, V251, V251, V256, V257, V255, V255, V256, V257]
Stack pops: 3
Stack additions: [V267, V269, V270]
Exit stack: [S8, V251, V251, V256, V257, V255, V267, V269, V270]

================================

Block 0x34b
[0x34b:0x35d]
---
Predecessors: []
Successors: [0x19b, 0x35e]
---
0x34b JUMPDEST
0x34c POP
0x34d POP
0x34e POP
0x34f SWAP1
0x350 POP
0x351 SWAP1
0x352 DUP2
0x353 ADD
0x354 SWAP1
0x355 PUSH1 0x1f
0x357 AND
0x358 DUP1
0x359 ISZERO
0x35a PUSH2 0x19b
0x35d JUMPI
---
0x34b: JUMPDEST 
0x353: V272 = ADD S3 S5
0x355: V273 = 0x1f
0x357: V274 = AND 0x1f S3
0x359: V275 = ISZERO V274
0x35a: V276 = 0x19b
0x35d: JUMPI 0x19b V275
---
Entry stack: []
Stack pops: 6
Stack additions: [V272, V274]
Exit stack: [V272, V274]

================================

Block 0x35e
[0x35e:0x376]
---
Predecessors: [0x34b]
Successors: [0x377]
---
0x35e DUP1
0x35f DUP3
0x360 SUB
0x361 DUP1
0x362 MLOAD
0x363 PUSH1 0x1
0x365 DUP4
0x366 PUSH1 0x20
0x368 SUB
0x369 PUSH2 0x100
0x36c EXP
0x36d SUB
0x36e NOT
0x36f AND
0x370 DUP2
0x371 MSTORE
0x372 PUSH1 0x20
0x374 ADD
0x375 SWAP2
0x376 POP
---
0x360: V277 = SUB V272 V274
0x362: V278 = M[V277]
0x363: V279 = 0x1
0x366: V280 = 0x20
0x368: V281 = SUB 0x20 V274
0x369: V282 = 0x100
0x36c: V283 = EXP 0x100 V281
0x36d: V284 = SUB V283 0x1
0x36e: V285 = NOT V284
0x36f: V286 = AND V285 V278
0x371: M[V277] = V286
0x372: V287 = 0x20
0x374: V288 = ADD 0x20 V277
---
Entry stack: [V272, V274]
Stack pops: 2
Stack additions: [V288, S0]
Exit stack: [V288, V274]

================================

Block 0x377
[0x377:0x384]
---
Predecessors: [0x35e]
Successors: []
---
0x377 JUMPDEST
0x378 POP
0x379 SWAP3
0x37a POP
0x37b POP
0x37c POP
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 SWAP2
0x382 SUB
0x383 SWAP1
0x384 RETURN
---
0x377: JUMPDEST 
0x37d: V289 = 0x40
0x37f: V290 = M[0x40]
0x382: V291 = SUB V288 V290
0x384: RETURN V290 V291
---
Entry stack: [V288, V274]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x385
[0x385:0x38b]
---
Predecessors: [0xbf]
Successors: [0x38c, 0x38d]
---
0x385 JUMPDEST
0x386 CALLVALUE
0x387 ISZERO
0x388 PUSH2 0x38d
0x38b JUMPI
---
0x385: JUMPDEST 
0x386: V292 = CALLVALUE
0x387: V293 = ISZERO V292
0x388: V294 = 0x38d
0x38b: JUMPI 0x38d V293
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38c
[0x38c:0x38c]
---
Predecessors: [0x385]
Successors: []
---
0x38c INVALID
---
0x38c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38d
[0x38d:0x394]
---
Predecessors: [0x385]
Successors: [0xb16]
---
0x38d JUMPDEST
0x38e PUSH2 0x23d
0x391 PUSH2 0xb16
0x394 JUMP
---
0x38d: JUMPDEST 
0x38e: V295 = 0x23d
0x391: V296 = 0xb16
0x394: JUMP 0xb16
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V12, 0x23d]

================================

Block 0x395
[0x395:0x3a8]
---
Predecessors: []
Successors: []
---
0x395 JUMPDEST
0x396 PUSH1 0x40
0x398 DUP1
0x399 MLOAD
0x39a SWAP2
0x39b ISZERO
0x39c ISZERO
0x39d DUP3
0x39e MSTORE
0x39f MLOAD
0x3a0 SWAP1
0x3a1 DUP2
0x3a2 SWAP1
0x3a3 SUB
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 SWAP1
0x3a8 RETURN
---
0x395: JUMPDEST 
0x396: V297 = 0x40
0x399: V298 = M[0x40]
0x39b: V299 = ISZERO S0
0x39c: V300 = ISZERO V299
0x39e: M[V298] = V300
0x39f: V301 = M[0x40]
0x3a3: V302 = SUB V298 V301
0x3a4: V303 = 0x20
0x3a6: V304 = ADD 0x20 V302
0x3a8: RETURN V301 V304
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3a9
[0x3a9:0x3af]
---
Predecessors: [0xca]
Successors: [0x3b0, 0x3b1]
---
0x3a9 JUMPDEST
0x3aa CALLVALUE
0x3ab ISZERO
0x3ac PUSH2 0x3b1
0x3af JUMPI
---
0x3a9: JUMPDEST 
0x3aa: V305 = CALLVALUE
0x3ab: V306 = ISZERO V305
0x3ac: V307 = 0x3b1
0x3af: JUMPI 0x3b1 V306
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b0
[0x3b0:0x3b0]
---
Predecessors: [0x3a9]
Successors: []
---
0x3b0 INVALID
---
0x3b0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b1
[0x3b1:0x3b8]
---
Predecessors: [0x3a9]
Successors: [0xb1f]
---
0x3b1 JUMPDEST
0x3b2 PUSH2 0x105
0x3b5 PUSH2 0xb1f
0x3b8 JUMP
---
0x3b1: JUMPDEST 
0x3b2: V308 = 0x105
0x3b5: V309 = 0xb1f
0x3b8: JUMP 0xb1f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x3b9
[0x3b9:0x3ba]
---
Predecessors: []
Successors: []
---
0x3b9 JUMPDEST
0x3ba STOP
---
0x3b9: JUMPDEST 
0x3ba: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3bb
[0x3bb:0x3c1]
---
Predecessors: [0xd5]
Successors: [0x3c2, 0x3c3]
---
0x3bb JUMPDEST
0x3bc CALLVALUE
0x3bd ISZERO
0x3be PUSH2 0x3c3
0x3c1 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V310 = CALLVALUE
0x3bd: V311 = ISZERO V310
0x3be: V312 = 0x3c3
0x3c1: JUMPI 0x3c3 V311
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c2
[0x3c2:0x3c2]
---
Predecessors: [0x3bb]
Successors: []
---
0x3c2 INVALID
---
0x3c2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c3
[0x3c3:0x3d9]
---
Predecessors: [0x3bb]
Successors: [0xb70]
---
0x3c3 JUMPDEST
0x3c4 PUSH2 0x105
0x3c7 PUSH1 0x1
0x3c9 PUSH1 0xa0
0x3cb PUSH1 0x2
0x3cd EXP
0x3ce SUB
0x3cf PUSH1 0x4
0x3d1 CALLDATALOAD
0x3d2 AND
0x3d3 PUSH1 0x24
0x3d5 CALLDATALOAD
0x3d6 PUSH2 0xb70
0x3d9 JUMP
---
0x3c3: JUMPDEST 
0x3c4: V313 = 0x105
0x3c7: V314 = 0x1
0x3c9: V315 = 0xa0
0x3cb: V316 = 0x2
0x3cd: V317 = EXP 0x2 0xa0
0x3ce: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cf: V319 = 0x4
0x3d1: V320 = CALLDATALOAD 0x4
0x3d2: V321 = AND V320 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V322 = 0x24
0x3d5: V323 = CALLDATALOAD 0x24
0x3d6: V324 = 0xb70
0x3d9: JUMP 0xb70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V321, V323]
Exit stack: [V12, 0x105, V321, V323]

================================

Block 0x3da
[0x3da:0x3db]
---
Predecessors: []
Successors: []
---
0x3da JUMPDEST
0x3db STOP
---
0x3da: JUMPDEST 
0x3db: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3dc
[0x3dc:0x3e2]
---
Predecessors: [0xe0]
Successors: [0x3e3, 0x3e4]
---
0x3dc JUMPDEST
0x3dd CALLVALUE
0x3de ISZERO
0x3df PUSH2 0x3e4
0x3e2 JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V325 = CALLVALUE
0x3de: V326 = ISZERO V325
0x3df: V327 = 0x3e4
0x3e2: JUMPI 0x3e4 V326
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e3
[0x3e3:0x3e3]
---
Predecessors: [0x3dc]
Successors: []
---
0x3e3 INVALID
---
0x3e3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e4
[0x3e4:0x3eb]
---
Predecessors: [0x3dc]
Successors: [0xc2b]
---
0x3e4 JUMPDEST
0x3e5 PUSH2 0x1c5
0x3e8 PUSH2 0xc2b
0x3eb JUMP
---
0x3e4: JUMPDEST 
0x3e5: V328 = 0x1c5
0x3e8: V329 = 0xc2b
0x3eb: JUMP 0xc2b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c5]
Exit stack: [V12, 0x1c5]

================================

Block 0x3ec
[0x3ec:0x3fd]
---
Predecessors: []
Successors: []
---
0x3ec JUMPDEST
0x3ed PUSH1 0x40
0x3ef DUP1
0x3f0 MLOAD
0x3f1 SWAP2
0x3f2 DUP3
0x3f3 MSTORE
0x3f4 MLOAD
0x3f5 SWAP1
0x3f6 DUP2
0x3f7 SWAP1
0x3f8 SUB
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP1
0x3fd RETURN
---
0x3ec: JUMPDEST 
0x3ed: V330 = 0x40
0x3f0: V331 = M[0x40]
0x3f3: M[V331] = S0
0x3f4: V332 = M[0x40]
0x3f8: V333 = SUB V331 V332
0x3f9: V334 = 0x20
0x3fb: V335 = ADD 0x20 V333
0x3fd: RETURN V332 V335
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3fe
[0x3fe:0x404]
---
Predecessors: [0xeb]
Successors: [0x405, 0x406]
---
0x3fe JUMPDEST
0x3ff CALLVALUE
0x400 ISZERO
0x401 PUSH2 0x406
0x404 JUMPI
---
0x3fe: JUMPDEST 
0x3ff: V336 = CALLVALUE
0x400: V337 = ISZERO V336
0x401: V338 = 0x406
0x404: JUMPI 0x406 V337
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x405
[0x405:0x405]
---
Predecessors: [0x3fe]
Successors: []
---
0x405 INVALID
---
0x405: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x406
[0x406:0x40d]
---
Predecessors: [0x3fe]
Successors: [0xc31]
---
0x406 JUMPDEST
0x407 PUSH2 0x40e
0x40a PUSH2 0xc31
0x40d JUMP
---
0x406: JUMPDEST 
0x407: V339 = 0x40e
0x40a: V340 = 0xc31
0x40d: JUMP 0xc31
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x40e]
Exit stack: [V12, 0x40e]

================================

Block 0x40e
[0x40e:0x429]
---
Predecessors: [0xc31]
Successors: []
---
0x40e JUMPDEST
0x40f PUSH1 0x40
0x411 DUP1
0x412 MLOAD
0x413 PUSH1 0x1
0x415 PUSH1 0xa0
0x417 PUSH1 0x2
0x419 EXP
0x41a SUB
0x41b SWAP1
0x41c SWAP3
0x41d AND
0x41e DUP3
0x41f MSTORE
0x420 MLOAD
0x421 SWAP1
0x422 DUP2
0x423 SWAP1
0x424 SUB
0x425 PUSH1 0x20
0x427 ADD
0x428 SWAP1
0x429 RETURN
---
0x40e: JUMPDEST 
0x40f: V341 = 0x40
0x412: V342 = M[0x40]
0x413: V343 = 0x1
0x415: V344 = 0xa0
0x417: V345 = 0x2
0x419: V346 = EXP 0x2 0xa0
0x41a: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V348 = AND V1137 0xffffffffffffffffffffffffffffffffffffffff
0x41f: M[V342] = V348
0x420: V349 = M[0x40]
0x424: V350 = SUB V342 V349
0x425: V351 = 0x20
0x427: V352 = ADD 0x20 V350
0x429: RETURN V349 V352
---
Entry stack: [V12, 0x40e, V1137]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x40e]

================================

Block 0x42a
[0x42a:0x438]
---
Predecessors: [0xfa, 0x251]
Successors: [0x439, 0x56e]
---
0x42a JUMPDEST
0x42b PUSH7 0x38d7ea4c68000
0x433 CALLVALUE
0x434 GT
0x435 PUSH2 0x56e
0x438 JUMPI
---
0x42a: JUMPDEST 
0x42b: V353 = 0x38d7ea4c68000
0x433: V354 = CALLVALUE
0x434: V355 = GT V354 0x38d7ea4c68000
0x435: V356 = 0x56e
0x438: JUMPI 0x56e V355
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x439
[0x439:0x443]
---
Predecessors: [0x42a]
Successors: [0x444, 0x560]
---
0x439 PUSH1 0x3
0x43b SLOAD
0x43c PUSH1 0xff
0x43e AND
0x43f ISZERO
0x440 PUSH2 0x560
0x443 JUMPI
---
0x439: V357 = 0x3
0x43b: V358 = S[0x3]
0x43c: V359 = 0xff
0x43e: V360 = AND 0xff V358
0x43f: V361 = ISZERO V360
0x440: V362 = 0x560
0x443: JUMPI 0x560 V361
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x444
[0x444:0x49c]
---
Predecessors: [0x439]
Successors: [0x49d, 0x49e]
---
0x444 PUSH1 0x14
0x446 PUSH1 0x1
0x448 SWAP1
0x449 SLOAD
0x44a SWAP1
0x44b PUSH2 0x100
0x44e EXP
0x44f SWAP1
0x450 DIV
0x451 PUSH1 0x1
0x453 PUSH1 0xa0
0x455 PUSH1 0x2
0x457 EXP
0x458 SUB
0x459 AND
0x45a PUSH1 0x1
0x45c PUSH1 0xa0
0x45e PUSH1 0x2
0x460 EXP
0x461 SUB
0x462 AND
0x463 PUSH4 0xec81b483
0x468 PUSH1 0x0
0x46a PUSH1 0x40
0x46c MLOAD
0x46d PUSH1 0x20
0x46f ADD
0x470 MSTORE
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP2
0x475 PUSH4 0xffffffff
0x47a AND
0x47b PUSH1 0xe0
0x47d PUSH1 0x2
0x47f EXP
0x480 MUL
0x481 DUP2
0x482 MSTORE
0x483 PUSH1 0x4
0x485 ADD
0x486 DUP1
0x487 SWAP1
0x488 POP
0x489 PUSH1 0x20
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f DUP4
0x490 SUB
0x491 DUP2
0x492 PUSH1 0x0
0x494 DUP8
0x495 DUP1
0x496 EXTCODESIZE
0x497 ISZERO
0x498 ISZERO
0x499 PUSH2 0x49e
0x49c JUMPI
---
0x444: V363 = 0x14
0x446: V364 = 0x1
0x449: V365 = S[0x14]
0x44b: V366 = 0x100
0x44e: V367 = EXP 0x100 0x1
0x450: V368 = DIV V365 0x100
0x451: V369 = 0x1
0x453: V370 = 0xa0
0x455: V371 = 0x2
0x457: V372 = EXP 0x2 0xa0
0x458: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x459: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x45a: V375 = 0x1
0x45c: V376 = 0xa0
0x45e: V377 = 0x2
0x460: V378 = EXP 0x2 0xa0
0x461: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x462: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x463: V381 = 0xec81b483
0x468: V382 = 0x0
0x46a: V383 = 0x40
0x46c: V384 = M[0x40]
0x46d: V385 = 0x20
0x46f: V386 = ADD 0x20 V384
0x470: M[V386] = 0x0
0x471: V387 = 0x40
0x473: V388 = M[0x40]
0x475: V389 = 0xffffffff
0x47a: V390 = AND 0xffffffff 0xec81b483
0x47b: V391 = 0xe0
0x47d: V392 = 0x2
0x47f: V393 = EXP 0x2 0xe0
0x480: V394 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xec81b483
0x482: M[V388] = 0xec81b48300000000000000000000000000000000000000000000000000000000
0x483: V395 = 0x4
0x485: V396 = ADD 0x4 V388
0x489: V397 = 0x20
0x48b: V398 = 0x40
0x48d: V399 = M[0x40]
0x490: V400 = SUB V396 V399
0x492: V401 = 0x0
0x496: V402 = EXTCODESIZE V380
0x497: V403 = ISZERO V402
0x498: V404 = ISZERO V403
0x499: V405 = 0x49e
0x49c: JUMPI 0x49e V404
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: [V380, 0xec81b483, V396, 0x20, V399, V400, V399, 0x0, V380]
Exit stack: [V12, S1, {0x102, 0x105}, V380, 0xec81b483, V396, 0x20, V399, V400, V399, 0x0, V380]

================================

Block 0x49d
[0x49d:0x49d]
---
Predecessors: [0x444]
Successors: []
---
0x49d INVALID
---
0x49d: INVALID 
---
Entry stack: [V12, S10, {0x102, 0x105}, V380, 0xec81b483, V396, 0x20, V399, V400, V399, 0x0, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, {0x102, 0x105}, V380, 0xec81b483, V396, 0x20, V399, V400, V399, 0x0, V380]

================================

Block 0x49e
[0x49e:0x4aa]
---
Predecessors: [0x444]
Successors: [0x4ab, 0x4ac]
---
0x49e JUMPDEST
0x49f PUSH2 0x2c6
0x4a2 GAS
0x4a3 SUB
0x4a4 CALL
0x4a5 ISZERO
0x4a6 ISZERO
0x4a7 PUSH2 0x4ac
0x4aa JUMPI
---
0x49e: JUMPDEST 
0x49f: V406 = 0x2c6
0x4a2: V407 = GAS
0x4a3: V408 = SUB V407 0x2c6
0x4a4: V409 = CALL V408 V380 0x0 V399 V400 V399 0x20
0x4a5: V410 = ISZERO V409
0x4a6: V411 = ISZERO V410
0x4a7: V412 = 0x4ac
0x4aa: JUMPI 0x4ac V411
---
Entry stack: [V12, S10, {0x102, 0x105}, V380, 0xec81b483, V396, 0x20, V399, V400, V399, 0x0, V380]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S10, {0x102, 0x105}, V380, 0xec81b483, V396]

================================

Block 0x4ab
[0x4ab:0x4ab]
---
Predecessors: [0x49e]
Successors: []
---
0x4ab INVALID
---
0x4ab: INVALID 
---
Entry stack: [V12, S4, {0x102, 0x105}, V380, 0xec81b483, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0x102, 0x105}, V380, 0xec81b483, V396]

================================

Block 0x4ac
[0x4ac:0x50f]
---
Predecessors: [0x49e]
Successors: [0x510, 0x511]
---
0x4ac JUMPDEST
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 DUP1
0x4b4 MLOAD
0x4b5 SWAP1
0x4b6 POP
0x4b7 PUSH1 0x14
0x4b9 PUSH1 0x1
0x4bb SWAP1
0x4bc SLOAD
0x4bd SWAP1
0x4be PUSH2 0x100
0x4c1 EXP
0x4c2 SWAP1
0x4c3 DIV
0x4c4 PUSH1 0x1
0x4c6 PUSH1 0xa0
0x4c8 PUSH1 0x2
0x4ca EXP
0x4cb SUB
0x4cc AND
0x4cd PUSH1 0x1
0x4cf PUSH1 0xa0
0x4d1 PUSH1 0x2
0x4d3 EXP
0x4d4 SUB
0x4d5 AND
0x4d6 PUSH4 0xa4625af
0x4db PUSH1 0x0
0x4dd PUSH1 0x40
0x4df MLOAD
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 MSTORE
0x4e4 PUSH1 0x40
0x4e6 MLOAD
0x4e7 DUP2
0x4e8 PUSH4 0xffffffff
0x4ed AND
0x4ee PUSH1 0xe0
0x4f0 PUSH1 0x2
0x4f2 EXP
0x4f3 MUL
0x4f4 DUP2
0x4f5 MSTORE
0x4f6 PUSH1 0x4
0x4f8 ADD
0x4f9 DUP1
0x4fa SWAP1
0x4fb POP
0x4fc PUSH1 0x20
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP1
0x502 DUP4
0x503 SUB
0x504 DUP2
0x505 PUSH1 0x0
0x507 DUP8
0x508 DUP1
0x509 EXTCODESIZE
0x50a ISZERO
0x50b ISZERO
0x50c PUSH2 0x511
0x50f JUMPI
---
0x4ac: JUMPDEST 
0x4b0: V413 = 0x40
0x4b2: V414 = M[0x40]
0x4b4: V415 = M[V414]
0x4b7: V416 = 0x14
0x4b9: V417 = 0x1
0x4bc: V418 = S[0x14]
0x4be: V419 = 0x100
0x4c1: V420 = EXP 0x100 0x1
0x4c3: V421 = DIV V418 0x100
0x4c4: V422 = 0x1
0x4c6: V423 = 0xa0
0x4c8: V424 = 0x2
0x4ca: V425 = EXP 0x2 0xa0
0x4cb: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x4cd: V428 = 0x1
0x4cf: V429 = 0xa0
0x4d1: V430 = 0x2
0x4d3: V431 = EXP 0x2 0xa0
0x4d4: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d5: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x4d6: V434 = 0xa4625af
0x4db: V435 = 0x0
0x4dd: V436 = 0x40
0x4df: V437 = M[0x40]
0x4e0: V438 = 0x20
0x4e2: V439 = ADD 0x20 V437
0x4e3: M[V439] = 0x0
0x4e4: V440 = 0x40
0x4e6: V441 = M[0x40]
0x4e8: V442 = 0xffffffff
0x4ed: V443 = AND 0xffffffff 0xa4625af
0x4ee: V444 = 0xe0
0x4f0: V445 = 0x2
0x4f2: V446 = EXP 0x2 0xe0
0x4f3: V447 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa4625af
0x4f5: M[V441] = 0xa4625af00000000000000000000000000000000000000000000000000000000
0x4f6: V448 = 0x4
0x4f8: V449 = ADD 0x4 V441
0x4fc: V450 = 0x20
0x4fe: V451 = 0x40
0x500: V452 = M[0x40]
0x503: V453 = SUB V449 V452
0x505: V454 = 0x0
0x509: V455 = EXTCODESIZE V433
0x50a: V456 = ISZERO V455
0x50b: V457 = ISZERO V456
0x50c: V458 = 0x511
0x50f: JUMPI 0x511 V457
---
Entry stack: [V12, S4, {0x102, 0x105}, V380, 0xec81b483, V396]
Stack pops: 3
Stack additions: [V415, V433, 0xa4625af, V449, 0x20, V452, V453, V452, 0x0, V433]
Exit stack: [V12, S4, {0x102, 0x105}, V415, V433, 0xa4625af, V449, 0x20, V452, V453, V452, 0x0, V433]

================================

Block 0x510
[0x510:0x510]
---
Predecessors: [0x4ac]
Successors: []
---
0x510 INVALID
---
0x510: INVALID 
---
Entry stack: [V12, S11, {0x102, 0x105}, V415, V433, 0xa4625af, V449, 0x20, V452, V453, V452, 0x0, V433]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, {0x102, 0x105}, V415, V433, 0xa4625af, V449, 0x20, V452, V453, V452, 0x0, V433]

================================

Block 0x511
[0x511:0x51d]
---
Predecessors: [0x4ac]
Successors: [0x51e, 0x51f]
---
0x511 JUMPDEST
0x512 PUSH2 0x2c6
0x515 GAS
0x516 SUB
0x517 CALL
0x518 ISZERO
0x519 ISZERO
0x51a PUSH2 0x51f
0x51d JUMPI
---
0x511: JUMPDEST 
0x512: V459 = 0x2c6
0x515: V460 = GAS
0x516: V461 = SUB V460 0x2c6
0x517: V462 = CALL V461 V433 0x0 V452 V453 V452 0x20
0x518: V463 = ISZERO V462
0x519: V464 = ISZERO V463
0x51a: V465 = 0x51f
0x51d: JUMPI 0x51f V464
---
Entry stack: [V12, S11, {0x102, 0x105}, V415, V433, 0xa4625af, V449, 0x20, V452, V453, V452, 0x0, V433]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S11, {0x102, 0x105}, V415, V433, 0xa4625af, V449]

================================

Block 0x51e
[0x51e:0x51e]
---
Predecessors: [0x511]
Successors: []
---
0x51e INVALID
---
0x51e: INVALID 
---
Entry stack: [V12, S5, {0x102, 0x105}, V415, V433, 0xa4625af, V449]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, {0x102, 0x105}, V415, V433, 0xa4625af, V449]

================================

Block 0x51f
[0x51f:0x52f]
---
Predecessors: [0x511]
Successors: [0x530, 0x535]
---
0x51f JUMPDEST
0x520 POP
0x521 POP
0x522 PUSH1 0x40
0x524 MLOAD
0x525 MLOAD
0x526 SWAP2
0x527 SWAP1
0x528 SWAP2
0x529 LT
0x52a SWAP1
0x52b POP
0x52c PUSH2 0x535
0x52f JUMPI
---
0x51f: JUMPDEST 
0x522: V466 = 0x40
0x524: V467 = M[0x40]
0x525: V468 = M[V467]
0x529: V469 = LT V468 V415
0x52c: V470 = 0x535
0x52f: JUMPI 0x535 V469
---
Entry stack: [V12, S5, {0x102, 0x105}, V415, V433, 0xa4625af, V449]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S5, {0x102, 0x105}]

================================

Block 0x530
[0x530:0x534]
---
Predecessors: [0x51f]
Successors: []
---
0x530 PUSH1 0x0
0x532 PUSH1 0x0
0x534 REVERT
---
0x530: V471 = 0x0
0x532: V472 = 0x0
0x534: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x535
[0x535:0x55f]
---
Predecessors: [0x51f]
Successors: [0x568]
---
0x535 JUMPDEST
0x536 PUSH1 0x1
0x538 PUSH1 0xa0
0x53a PUSH1 0x2
0x53c EXP
0x53d SUB
0x53e CALLER
0x53f AND
0x540 PUSH1 0x0
0x542 SWAP1
0x543 DUP2
0x544 MSTORE
0x545 PUSH1 0x1
0x547 PUSH1 0x20
0x549 DUP2
0x54a SWAP1
0x54b MSTORE
0x54c PUSH1 0x40
0x54e SWAP1
0x54f SWAP2
0x550 SHA3
0x551 DUP1
0x552 SLOAD
0x553 PUSH1 0xff
0x555 NOT
0x556 AND
0x557 SWAP1
0x558 SWAP2
0x559 OR
0x55a SWAP1
0x55b SSTORE
0x55c PUSH2 0x568
0x55f JUMP
---
0x535: JUMPDEST 
0x536: V473 = 0x1
0x538: V474 = 0xa0
0x53a: V475 = 0x2
0x53c: V476 = EXP 0x2 0xa0
0x53d: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53e: V478 = CALLER
0x53f: V479 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x540: V480 = 0x0
0x544: M[0x0] = V479
0x545: V481 = 0x1
0x547: V482 = 0x20
0x54b: M[0x20] = 0x1
0x54c: V483 = 0x40
0x550: V484 = SHA3 0x0 0x40
0x552: V485 = S[V484]
0x553: V486 = 0xff
0x555: V487 = NOT 0xff
0x556: V488 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V485
0x559: V489 = OR 0x1 V488
0x55b: S[V484] = V489
0x55c: V490 = 0x568
0x55f: JUMP 0x568
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x560
[0x560:0x567]
---
Predecessors: [0x439]
Successors: [0x7b2]
---
0x560 JUMPDEST
0x561 PUSH2 0x568
0x564 PUSH2 0x7b2
0x567 JUMP
---
0x560: JUMPDEST 
0x561: V491 = 0x568
0x564: V492 = 0x7b2
0x567: JUMP 0x7b2
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: [0x568]
Exit stack: [V12, S1, {0x102, 0x105}, 0x568]

================================

Block 0x568
[0x568:0x568]
---
Predecessors: [0x535, 0x687, 0x98c]
Successors: [0x569]
---
0x568 JUMPDEST
---
0x568: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x569
[0x569:0x56d]
---
Predecessors: [0x568]
Successors: [0x102]
---
0x569 JUMPDEST
0x56a PUSH2 0x102
0x56d JUMP
---
0x569: JUMPDEST 
0x56a: V493 = 0x102
0x56d: JUMP 0x102
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x56e
[0x56e:0x579]
---
Predecessors: [0x42a]
Successors: [0x57a, 0x57f]
---
0x56e JUMPDEST
0x56f PUSH1 0x5
0x571 SLOAD
0x572 PUSH1 0xff
0x574 AND
0x575 ISZERO
0x576 PUSH2 0x57f
0x579 JUMPI
---
0x56e: JUMPDEST 
0x56f: V494 = 0x5
0x571: V495 = S[0x5]
0x572: V496 = 0xff
0x574: V497 = AND 0xff V495
0x575: V498 = ISZERO V497
0x576: V499 = 0x57f
0x579: JUMPI 0x57f V498
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x57a
[0x57a:0x57e]
---
Predecessors: [0x56e]
Successors: []
---
0x57a PUSH1 0x0
0x57c PUSH1 0x0
0x57e REVERT
---
0x57a: V500 = 0x0
0x57c: V501 = 0x0
0x57e: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x57f
[0x57f:0x58a]
---
Predecessors: [0x56e]
Successors: [0x58b, 0x590]
---
0x57f JUMPDEST
0x580 PUSH1 0x3
0x582 SLOAD
0x583 PUSH1 0xff
0x585 AND
0x586 ISZERO
0x587 PUSH2 0x590
0x58a JUMPI
---
0x57f: JUMPDEST 
0x580: V502 = 0x3
0x582: V503 = S[0x3]
0x583: V504 = 0xff
0x585: V505 = AND 0xff V503
0x586: V506 = ISZERO V505
0x587: V507 = 0x590
0x58a: JUMPI 0x590 V506
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x58b
[0x58b:0x58f]
---
Predecessors: [0x57f]
Successors: []
---
0x58b PUSH1 0x0
0x58d PUSH1 0x0
0x58f REVERT
---
0x58b: V508 = 0x0
0x58d: V509 = 0x0
0x58f: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x590
[0x590:0x5ae]
---
Predecessors: [0x57f]
Successors: [0x5af]
---
0x590 JUMPDEST
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 CALLER
0x59a AND
0x59b PUSH1 0x0
0x59d SWAP1
0x59e DUP2
0x59f MSTORE
0x5a0 PUSH1 0x20
0x5a2 DUP2
0x5a3 SWAP1
0x5a4 MSTORE
0x5a5 PUSH1 0x40
0x5a7 SWAP1
0x5a8 SHA3
0x5a9 DUP1
0x5aa SLOAD
0x5ab CALLVALUE
0x5ac ADD
0x5ad SWAP1
0x5ae SSTORE
---
0x590: JUMPDEST 
0x591: V510 = 0x1
0x593: V511 = 0xa0
0x595: V512 = 0x2
0x597: V513 = EXP 0x2 0xa0
0x598: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x599: V515 = CALLER
0x59a: V516 = AND V515 0xffffffffffffffffffffffffffffffffffffffff
0x59b: V517 = 0x0
0x59f: M[0x0] = V516
0x5a0: V518 = 0x20
0x5a4: M[0x20] = 0x0
0x5a5: V519 = 0x40
0x5a8: V520 = SHA3 0x0 0x40
0x5aa: V521 = S[V520]
0x5ab: V522 = CALLVALUE
0x5ac: V523 = ADD V522 V521
0x5ae: S[V520] = V523
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x5af
[0x5af:0x5af]
---
Predecessors: [0x590]
Successors: [0x5b0]
---
0x5af JUMPDEST
---
0x5af: JUMPDEST 
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x105}]

================================

Block 0x5b0
[0x5b0:0x5b1]
---
Predecessors: [0x5af]
Successors: [0x102, 0x105]
---
0x5b0 JUMPDEST
0x5b1 JUMP
---
0x5b0: JUMPDEST 
0x5b1: JUMP {0x102, 0x105}
---
Entry stack: [V12, S1, {0x102, 0x105}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x5b2
[0x5b2:0x5bd]
---
Predecessors: [0x10f]
Successors: [0x5be, 0x5c2]
---
0x5b2 JUMPDEST
0x5b3 PUSH1 0x3
0x5b5 SLOAD
0x5b6 PUSH1 0xff
0x5b8 AND
0x5b9 ISZERO
0x5ba PUSH2 0x5c2
0x5bd JUMPI
---
0x5b2: JUMPDEST 
0x5b3: V524 = 0x3
0x5b5: V525 = S[0x3]
0x5b6: V526 = 0xff
0x5b8: V527 = AND 0xff V525
0x5b9: V528 = ISZERO V527
0x5ba: V529 = 0x5c2
0x5bd: JUMPI 0x5c2 V528
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x5be
[0x5be:0x5c1]
---
Predecessors: [0x5b2]
Successors: [0x102]
---
0x5be PUSH2 0x102
0x5c1 JUMP
---
0x5be: V530 = 0x102
0x5c1: JUMP 0x102
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x5c2
[0x5c2:0x5cd]
---
Predecessors: [0x5b2]
Successors: [0x5ce, 0x5d3]
---
0x5c2 JUMPDEST
0x5c3 PUSH1 0x5
0x5c5 SLOAD
0x5c6 PUSH1 0xff
0x5c8 AND
0x5c9 ISZERO
0x5ca PUSH2 0x5d3
0x5cd JUMPI
---
0x5c2: JUMPDEST 
0x5c3: V531 = 0x5
0x5c5: V532 = S[0x5]
0x5c6: V533 = 0xff
0x5c8: V534 = AND 0xff V532
0x5c9: V535 = ISZERO V534
0x5ca: V536 = 0x5d3
0x5cd: JUMPI 0x5d3 V535
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x5ce
[0x5ce:0x5d2]
---
Predecessors: [0x5c2]
Successors: []
---
0x5ce PUSH1 0x0
0x5d0 PUSH1 0x0
0x5d2 REVERT
---
0x5ce: V537 = 0x0
0x5d0: V538 = 0x0
0x5d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x5d3
[0x5d3:0x65e]
---
Predecessors: [0x5c2]
Successors: [0x65f, 0x660]
---
0x5d3 JUMPDEST
0x5d4 PUSH1 0x3
0x5d6 DUP1
0x5d7 SLOAD
0x5d8 PUSH1 0xff
0x5da NOT
0x5db AND
0x5dc PUSH1 0x1
0x5de OR
0x5df SWAP1
0x5e0 SSTORE
0x5e1 PUSH3 0x15180
0x5e5 TIMESTAMP
0x5e6 ADD
0x5e7 PUSH1 0x4
0x5e9 SWAP1
0x5ea DUP2
0x5eb SSTORE
0x5ec PUSH1 0x14
0x5ee SLOAD
0x5ef PUSH1 0x2
0x5f1 SLOAD
0x5f2 PUSH1 0x40
0x5f4 DUP1
0x5f5 MLOAD
0x5f6 PUSH32 0xf48c305400000000000000000000000000000000000000000000000000000000
0x617 DUP2
0x618 MSTORE
0x619 ADDRESS
0x61a PUSH1 0x1
0x61c PUSH1 0xa0
0x61e PUSH1 0x2
0x620 EXP
0x621 SUB
0x622 SWAP1
0x623 DUP2
0x624 AND
0x625 SWAP6
0x626 DUP3
0x627 ADD
0x628 DUP7
0x629 SWAP1
0x62a MSTORE
0x62b SWAP2
0x62c MLOAD
0x62d PUSH2 0x100
0x630 SWAP1
0x631 SWAP5
0x632 DIV
0x633 SWAP2
0x634 SWAP1
0x635 SWAP2
0x636 AND
0x637 SWAP4
0x638 PUSH4 0xf48c3054
0x63d SWAP4
0x63e SWAP1
0x63f BALANCE
0x640 SWAP3
0x641 SWAP1
0x642 SWAP3
0x643 SUB
0x644 SWAP2
0x645 PUSH1 0x24
0x647 DUP1
0x648 DUP4
0x649 ADD
0x64a SWAP3
0x64b PUSH1 0x0
0x64d SWAP3
0x64e SWAP2
0x64f SWAP1
0x650 DUP3
0x651 SWAP1
0x652 SUB
0x653 ADD
0x654 DUP2
0x655 DUP6
0x656 DUP9
0x657 DUP1
0x658 EXTCODESIZE
0x659 ISZERO
0x65a ISZERO
0x65b PUSH2 0x660
0x65e JUMPI
---
0x5d3: JUMPDEST 
0x5d4: V539 = 0x3
0x5d7: V540 = S[0x3]
0x5d8: V541 = 0xff
0x5da: V542 = NOT 0xff
0x5db: V543 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V540
0x5dc: V544 = 0x1
0x5de: V545 = OR 0x1 V543
0x5e0: S[0x3] = V545
0x5e1: V546 = 0x15180
0x5e5: V547 = TIMESTAMP
0x5e6: V548 = ADD V547 0x15180
0x5e7: V549 = 0x4
0x5eb: S[0x4] = V548
0x5ec: V550 = 0x14
0x5ee: V551 = S[0x14]
0x5ef: V552 = 0x2
0x5f1: V553 = S[0x2]
0x5f2: V554 = 0x40
0x5f5: V555 = M[0x40]
0x5f6: V556 = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x618: M[V555] = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x619: V557 = ADDRESS
0x61a: V558 = 0x1
0x61c: V559 = 0xa0
0x61e: V560 = 0x2
0x620: V561 = EXP 0x2 0xa0
0x621: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x624: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x627: V564 = ADD V555 0x4
0x62a: M[V564] = V563
0x62c: V565 = M[0x40]
0x62d: V566 = 0x100
0x632: V567 = DIV V551 0x100
0x636: V568 = AND V567 0xffffffffffffffffffffffffffffffffffffffff
0x638: V569 = 0xf48c3054
0x63f: V570 = BALANCE V563
0x643: V571 = SUB V570 V553
0x645: V572 = 0x24
0x649: V573 = ADD V555 0x24
0x64b: V574 = 0x0
0x652: V575 = SUB V555 V565
0x653: V576 = ADD V575 0x24
0x658: V577 = EXTCODESIZE V568
0x659: V578 = ISZERO V577
0x65a: V579 = ISZERO V578
0x65b: V580 = 0x660
0x65e: JUMPI 0x660 V579
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: [V568, 0xf48c3054, V571, V573, 0x0, V565, V576, V565, V571, V568]
Exit stack: [V12, 0x105, V568, 0xf48c3054, V571, V573, 0x0, V565, V576, V565, V571, V568]

================================

Block 0x65f
[0x65f:0x65f]
---
Predecessors: [0x5d3]
Successors: []
---
0x65f INVALID
---
0x65f: INVALID 
---
Entry stack: [V12, 0x105, V568, 0xf48c3054, V571, V573, 0x0, V565, V576, V565, V571, V568]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V568, 0xf48c3054, V571, V573, 0x0, V565, V576, V565, V571, V568]

================================

Block 0x660
[0x660:0x66c]
---
Predecessors: [0x5d3]
Successors: [0x66d, 0x66e]
---
0x660 JUMPDEST
0x661 PUSH2 0x25ee
0x664 GAS
0x665 SUB
0x666 CALL
0x667 ISZERO
0x668 ISZERO
0x669 PUSH2 0x66e
0x66c JUMPI
---
0x660: JUMPDEST 
0x661: V581 = 0x25ee
0x664: V582 = GAS
0x665: V583 = SUB V582 0x25ee
0x666: V584 = CALL V583 V568 V571 V565 V576 V565 0x0
0x667: V585 = ISZERO V584
0x668: V586 = ISZERO V585
0x669: V587 = 0x66e
0x66c: JUMPI 0x66e V586
---
Entry stack: [V12, 0x105, V568, 0xf48c3054, V571, V573, 0x0, V565, V576, V565, V571, V568]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x105, V568, 0xf48c3054, V571, V573]

================================

Block 0x66d
[0x66d:0x66d]
---
Predecessors: [0x660]
Successors: []
---
0x66d INVALID
---
0x66d: INVALID 
---
Entry stack: [V12, 0x105, V568, 0xf48c3054, V571, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V568, 0xf48c3054, V571, V573]

================================

Block 0x66e
[0x66e:0x686]
---
Predecessors: [0x660]
Successors: [0x687, 0x6b9]
---
0x66e JUMPDEST
0x66f POP
0x670 POP
0x671 POP
0x672 POP
0x673 PUSH1 0xe
0x675 SLOAD
0x676 ADDRESS
0x677 PUSH1 0x1
0x679 PUSH1 0xa0
0x67b PUSH1 0x2
0x67d EXP
0x67e SUB
0x67f AND
0x680 BALANCE
0x681 GT
0x682 ISZERO
0x683 PUSH2 0x6b9
0x686 JUMPI
---
0x66e: JUMPDEST 
0x673: V588 = 0xe
0x675: V589 = S[0xe]
0x676: V590 = ADDRESS
0x677: V591 = 0x1
0x679: V592 = 0xa0
0x67b: V593 = 0x2
0x67d: V594 = EXP 0x2 0xa0
0x67e: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67f: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x680: V597 = BALANCE V596
0x681: V598 = GT V597 V589
0x682: V599 = ISZERO V598
0x683: V600 = 0x6b9
0x686: JUMPI 0x6b9 V599
---
Entry stack: [V12, 0x105, V568, 0xf48c3054, V571, V573]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x687
[0x687:0x6b2]
---
Predecessors: [0x66e]
Successors: [0x568, 0x6b3]
---
0x687 PUSH1 0x2
0x689 SLOAD
0x68a PUSH1 0x40
0x68c MLOAD
0x68d PUSH1 0x1
0x68f PUSH1 0xa0
0x691 PUSH1 0x2
0x693 EXP
0x694 SUB
0x695 CALLER
0x696 AND
0x697 SWAP2
0x698 DUP1
0x699 ISZERO
0x69a PUSH2 0x8fc
0x69d MUL
0x69e SWAP2
0x69f PUSH1 0x0
0x6a1 DUP2
0x6a2 DUP2
0x6a3 DUP2
0x6a4 DUP6
0x6a5 DUP9
0x6a6 DUP9
0x6a7 CALL
0x6a8 SWAP4
0x6a9 POP
0x6aa POP
0x6ab POP
0x6ac POP
0x6ad ISZERO
0x6ae ISZERO
0x6af PUSH2 0x568
0x6b2 JUMPI
---
0x687: V601 = 0x2
0x689: V602 = S[0x2]
0x68a: V603 = 0x40
0x68c: V604 = M[0x40]
0x68d: V605 = 0x1
0x68f: V606 = 0xa0
0x691: V607 = 0x2
0x693: V608 = EXP 0x2 0xa0
0x694: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x695: V610 = CALLER
0x696: V611 = AND V610 0xffffffffffffffffffffffffffffffffffffffff
0x699: V612 = ISZERO V602
0x69a: V613 = 0x8fc
0x69d: V614 = MUL 0x8fc V612
0x69f: V615 = 0x0
0x6a7: V616 = CALL V614 V611 V602 V604 0x0 V604 0x0
0x6ad: V617 = ISZERO V616
0x6ae: V618 = ISZERO V617
0x6af: V619 = 0x568
0x6b2: JUMPI 0x568 V618
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x6b3
[0x6b3:0x6b3]
---
Predecessors: [0x687]
Successors: []
---
0x6b3 INVALID
---
0x6b3: INVALID 
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x6b4
[0x6b4:0x6b8]
---
Predecessors: []
Successors: [0x102]
---
0x6b4 JUMPDEST
0x6b5 PUSH2 0x102
0x6b8 JUMP
---
0x6b4: JUMPDEST 
0x6b5: V620 = 0x102
0x6b8: JUMP 0x102
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6b9
[0x6b9:0x6d6]
---
Predecessors: [0x66e]
Successors: [0x102, 0x6d7]
---
0x6b9 JUMPDEST
0x6ba PUSH3 0xbdd80
0x6be TIMESTAMP
0x6bf ADD
0x6c0 PUSH1 0x4
0x6c2 SSTORE
0x6c3 PUSH1 0xe
0x6c5 SLOAD
0x6c6 PUSH1 0x1
0x6c8 PUSH1 0xa0
0x6ca PUSH1 0x2
0x6cc EXP
0x6cd SUB
0x6ce ADDRESS
0x6cf AND
0x6d0 BALANCE
0x6d1 GT
0x6d2 ISZERO
0x6d3 PUSH2 0x102
0x6d6 JUMPI
---
0x6b9: JUMPDEST 
0x6ba: V621 = 0xbdd80
0x6be: V622 = TIMESTAMP
0x6bf: V623 = ADD V622 0xbdd80
0x6c0: V624 = 0x4
0x6c2: S[0x4] = V623
0x6c3: V625 = 0xe
0x6c5: V626 = S[0xe]
0x6c6: V627 = 0x1
0x6c8: V628 = 0xa0
0x6ca: V629 = 0x2
0x6cc: V630 = EXP 0x2 0xa0
0x6cd: V631 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ce: V632 = ADDRESS
0x6cf: V633 = AND V632 0xffffffffffffffffffffffffffffffffffffffff
0x6d0: V634 = BALANCE V633
0x6d1: V635 = GT V634 V626
0x6d2: V636 = ISZERO V635
0x6d3: V637 = 0x102
0x6d6: JUMPI 0x102 V636
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x6d7
[0x6d7:0x702]
---
Predecessors: [0x6b9]
Successors: [0x102, 0x703]
---
0x6d7 PUSH1 0x2
0x6d9 SLOAD
0x6da PUSH1 0x40
0x6dc MLOAD
0x6dd PUSH1 0x1
0x6df PUSH1 0xa0
0x6e1 PUSH1 0x2
0x6e3 EXP
0x6e4 SUB
0x6e5 CALLER
0x6e6 AND
0x6e7 SWAP2
0x6e8 DUP1
0x6e9 ISZERO
0x6ea PUSH2 0x8fc
0x6ed MUL
0x6ee SWAP2
0x6ef PUSH1 0x0
0x6f1 DUP2
0x6f2 DUP2
0x6f3 DUP2
0x6f4 DUP6
0x6f5 DUP9
0x6f6 DUP9
0x6f7 CALL
0x6f8 SWAP4
0x6f9 POP
0x6fa POP
0x6fb POP
0x6fc POP
0x6fd ISZERO
0x6fe ISZERO
0x6ff PUSH2 0x102
0x702 JUMPI
---
0x6d7: V638 = 0x2
0x6d9: V639 = S[0x2]
0x6da: V640 = 0x40
0x6dc: V641 = M[0x40]
0x6dd: V642 = 0x1
0x6df: V643 = 0xa0
0x6e1: V644 = 0x2
0x6e3: V645 = EXP 0x2 0xa0
0x6e4: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e5: V647 = CALLER
0x6e6: V648 = AND V647 0xffffffffffffffffffffffffffffffffffffffff
0x6e9: V649 = ISZERO V639
0x6ea: V650 = 0x8fc
0x6ed: V651 = MUL 0x8fc V649
0x6ef: V652 = 0x0
0x6f7: V653 = CALL V651 V648 V639 V641 0x0 V641 0x0
0x6fd: V654 = ISZERO V653
0x6fe: V655 = ISZERO V654
0x6ff: V656 = 0x102
0x702: JUMPI 0x102 V655
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x703
[0x703:0x703]
---
Predecessors: [0x6d7]
Successors: []
---
0x703 INVALID
---
0x703: INVALID 
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x704
[0x704:0x704]
---
Predecessors: []
Successors: [0x705]
---
0x704 JUMPDEST
---
0x704: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x705
[0x705:0x705]
---
Predecessors: [0x704]
Successors: [0x706]
---
0x705 JUMPDEST
---
0x705: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x706
[0x706:0x706]
---
Predecessors: [0x705]
Successors: [0x707]
---
0x706 JUMPDEST
---
0x706: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x707
[0x707:0x708]
---
Predecessors: [0x706]
Successors: []
Has unresolved jump.
---
0x707 JUMPDEST
0x708 JUMP
---
0x707: JUMPDEST 
0x708: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x709
[0x709:0x748]
---
Predecessors: [0x121]
Successors: [0x749, 0x78f]
---
0x709 JUMPDEST
0x70a PUSH1 0x6
0x70c DUP1
0x70d SLOAD
0x70e PUSH1 0x40
0x710 DUP1
0x711 MLOAD
0x712 PUSH1 0x20
0x714 PUSH1 0x2
0x716 PUSH1 0x1
0x718 DUP6
0x719 AND
0x71a ISZERO
0x71b PUSH2 0x100
0x71e MUL
0x71f PUSH1 0x0
0x721 NOT
0x722 ADD
0x723 SWAP1
0x724 SWAP5
0x725 AND
0x726 SWAP4
0x727 SWAP1
0x728 SWAP4
0x729 DIV
0x72a PUSH1 0x1f
0x72c DUP2
0x72d ADD
0x72e DUP5
0x72f SWAP1
0x730 DIV
0x731 DUP5
0x732 MUL
0x733 DUP3
0x734 ADD
0x735 DUP5
0x736 ADD
0x737 SWAP1
0x738 SWAP3
0x739 MSTORE
0x73a DUP2
0x73b DUP2
0x73c MSTORE
0x73d SWAP3
0x73e SWAP2
0x73f DUP4
0x740 ADD
0x741 DUP3
0x742 DUP3
0x743 DUP1
0x744 ISZERO
0x745 PUSH2 0x78f
0x748 JUMPI
---
0x709: JUMPDEST 
0x70a: V657 = 0x6
0x70d: V658 = S[0x6]
0x70e: V659 = 0x40
0x711: V660 = M[0x40]
0x712: V661 = 0x20
0x714: V662 = 0x2
0x716: V663 = 0x1
0x719: V664 = AND V658 0x1
0x71a: V665 = ISZERO V664
0x71b: V666 = 0x100
0x71e: V667 = MUL 0x100 V665
0x71f: V668 = 0x0
0x721: V669 = NOT 0x0
0x722: V670 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V667
0x725: V671 = AND V658 V670
0x729: V672 = DIV V671 0x2
0x72a: V673 = 0x1f
0x72d: V674 = ADD V672 0x1f
0x730: V675 = DIV V674 0x20
0x732: V676 = MUL 0x20 V675
0x734: V677 = ADD V660 V676
0x736: V678 = ADD 0x20 V677
0x739: M[0x40] = V678
0x73c: M[V660] = V672
0x740: V679 = ADD V660 0x20
0x744: V680 = ISZERO V672
0x745: V681 = 0x78f
0x748: JUMPI 0x78f V680
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: [V660, 0x6, V672, V679, 0x6, V672]
Exit stack: [V12, 0x129, V660, 0x6, V672, V679, 0x6, V672]

================================

Block 0x749
[0x749:0x750]
---
Predecessors: [0x709]
Successors: [0x751, 0x764]
---
0x749 DUP1
0x74a PUSH1 0x1f
0x74c LT
0x74d PUSH2 0x764
0x750 JUMPI
---
0x74a: V682 = 0x1f
0x74c: V683 = LT 0x1f V672
0x74d: V684 = 0x764
0x750: JUMPI 0x764 V683
---
Entry stack: [V12, 0x129, V660, 0x6, V672, V679, 0x6, V672]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x129, V660, 0x6, V672, V679, 0x6, V672]

================================

Block 0x751
[0x751:0x763]
---
Predecessors: [0x749]
Successors: [0x78f]
---
0x751 PUSH2 0x100
0x754 DUP1
0x755 DUP4
0x756 SLOAD
0x757 DIV
0x758 MUL
0x759 DUP4
0x75a MSTORE
0x75b SWAP2
0x75c PUSH1 0x20
0x75e ADD
0x75f SWAP2
0x760 PUSH2 0x78f
0x763 JUMP
---
0x751: V685 = 0x100
0x756: V686 = S[0x6]
0x757: V687 = DIV V686 0x100
0x758: V688 = MUL V687 0x100
0x75a: M[V679] = V688
0x75c: V689 = 0x20
0x75e: V690 = ADD 0x20 V679
0x760: V691 = 0x78f
0x763: JUMP 0x78f
---
Entry stack: [V12, 0x129, V660, 0x6, V672, V679, 0x6, V672]
Stack pops: 3
Stack additions: [V690, S1, S0]
Exit stack: [V12, 0x129, V660, 0x6, V672, V690, 0x6, V672]

================================

Block 0x764
[0x764:0x771]
---
Predecessors: [0x749, 0xac8]
Successors: [0x772]
---
0x764 JUMPDEST
0x765 DUP3
0x766 ADD
0x767 SWAP2
0x768 SWAP1
0x769 PUSH1 0x0
0x76b MSTORE
0x76c PUSH1 0x20
0x76e PUSH1 0x0
0x770 SHA3
0x771 SWAP1
---
0x764: JUMPDEST 
0x766: V692 = ADD S2 S0
0x769: V693 = 0x0
0x76b: M[0x0] = {0x6, 0x7}
0x76c: V694 = 0x20
0x76e: V695 = 0x0
0x770: V696 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x129, S5, {0x6, 0x7}, S3, S2, {0x6, 0x7}, S0]
Stack pops: 3
Stack additions: [V692, V696, S2]
Exit stack: [V12, 0x129, S5, {0x6, 0x7}, S3, V692, V696, S2]

================================

Block 0x772
[0x772:0x785]
---
Predecessors: [0x764, 0x772, 0xaf1]
Successors: [0x772, 0x786]
---
0x772 JUMPDEST
0x773 DUP2
0x774 SLOAD
0x775 DUP2
0x776 MSTORE
0x777 SWAP1
0x778 PUSH1 0x1
0x77a ADD
0x77b SWAP1
0x77c PUSH1 0x20
0x77e ADD
0x77f DUP1
0x780 DUP4
0x781 GT
0x782 PUSH2 0x772
0x785 JUMPI
---
0x772: JUMPDEST 
0x774: V697 = S[S1]
0x776: M[S0] = V697
0x778: V698 = 0x1
0x77a: V699 = ADD 0x1 S1
0x77c: V700 = 0x20
0x77e: V701 = ADD 0x20 S0
0x781: V702 = GT S2 V701
0x782: V703 = 0x772
0x785: JUMPI 0x772 V702
---
Entry stack: [V12, 0x129, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V699, V701]
Exit stack: [V12, 0x129, S5, {0x6, 0x7}, S3, S2, V699, V701]

================================

Block 0x786
[0x786:0x78e]
---
Predecessors: [0x772]
Successors: [0x78f]
---
0x786 DUP3
0x787 SWAP1
0x788 SUB
0x789 PUSH1 0x1f
0x78b AND
0x78c DUP3
0x78d ADD
0x78e SWAP2
---
0x788: V704 = SUB V701 S2
0x789: V705 = 0x1f
0x78b: V706 = AND 0x1f V704
0x78d: V707 = ADD S2 V706
---
Entry stack: [V12, 0x129, S5, {0x6, 0x7}, S3, S2, V699, V701]
Stack pops: 3
Stack additions: [V707, S1, S2]
Exit stack: [V12, 0x129, S5, {0x6, 0x7}, S3, V707, V699, S2]

================================

Block 0x78f
[0x78f:0x796]
---
Predecessors: [0x709, 0x751, 0x786, 0xa88, 0xad0]
Successors: [0x129]
---
0x78f JUMPDEST
0x790 POP
0x791 POP
0x792 POP
0x793 POP
0x794 POP
0x795 DUP2
0x796 JUMP
---
0x78f: JUMPDEST 
0x796: JUMP 0x129
---
Entry stack: [V12, 0x129, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x129, S5]

================================

Block 0x797
[0x797:0x7a8]
---
Predecessors: [0x1b1]
Successors: [0x1c5]
---
0x797 JUMPDEST
0x798 PUSH1 0x0
0x79a PUSH1 0x20
0x79c DUP2
0x79d SWAP1
0x79e MSTORE
0x79f SWAP1
0x7a0 DUP2
0x7a1 MSTORE
0x7a2 PUSH1 0x40
0x7a4 SWAP1
0x7a5 SHA3
0x7a6 SLOAD
0x7a7 DUP2
0x7a8 JUMP
---
0x797: JUMPDEST 
0x798: V708 = 0x0
0x79a: V709 = 0x20
0x79e: M[0x20] = 0x0
0x7a1: M[0x0] = V139
0x7a2: V710 = 0x40
0x7a5: V711 = SHA3 0x0 0x40
0x7a6: V712 = S[V711]
0x7a8: JUMP 0x1c5
---
Entry stack: [V12, 0x1c5, V139]
Stack pops: 2
Stack additions: [S1, V712]
Exit stack: [V12, 0x1c5, V712]

================================

Block 0x7a9
[0x7a9:0x7b1]
---
Predecessors: [0x1df]
Successors: [0x1e7]
---
0x7a9 JUMPDEST
0x7aa PUSH1 0x8
0x7ac SLOAD
0x7ad PUSH1 0xff
0x7af AND
0x7b0 DUP2
0x7b1 JUMP
---
0x7a9: JUMPDEST 
0x7aa: V713 = 0x8
0x7ac: V714 = S[0x8]
0x7ad: V715 = 0xff
0x7af: V716 = AND 0xff V714
0x7b1: JUMP 0x1e7
---
Entry stack: [V12, 0x1e7]
Stack pops: 1
Stack additions: [S0, V716]
Exit stack: [V12, 0x1e7, V716]

================================

Block 0x7b2
[0x7b2:0x7c5]
---
Predecessors: [0x205, 0x560]
Successors: [0x7c6, 0x80c]
---
0x7b2 JUMPDEST
0x7b3 PUSH1 0x3
0x7b5 SLOAD
0x7b6 PUSH1 0x0
0x7b8 SWAP1
0x7b9 DUP2
0x7ba SWAP1
0x7bb DUP2
0x7bc SWAP1
0x7bd PUSH1 0xff
0x7bf AND
0x7c0 ISZERO
0x7c1 ISZERO
0x7c2 PUSH2 0x80c
0x7c5 JUMPI
---
0x7b2: JUMPDEST 
0x7b3: V717 = 0x3
0x7b5: V718 = S[0x3]
0x7b6: V719 = 0x0
0x7bd: V720 = 0xff
0x7bf: V721 = AND 0xff V718
0x7c0: V722 = ISZERO V721
0x7c1: V723 = ISZERO V722
0x7c2: V724 = 0x80c
0x7c5: JUMPI 0x80c V723
---
Entry stack: [V12, S2, S1, {0x105, 0x568}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, S2, S1, {0x105, 0x568}, 0x0, 0x0, 0x0]

================================

Block 0x7c6
[0x7c6:0x805]
---
Predecessors: [0x7b2]
Successors: [0x806, 0x807]
---
0x7c6 PUSH1 0x1
0x7c8 PUSH1 0xa0
0x7ca PUSH1 0x2
0x7cc EXP
0x7cd SUB
0x7ce CALLER
0x7cf AND
0x7d0 PUSH1 0x0
0x7d2 DUP2
0x7d3 DUP2
0x7d4 MSTORE
0x7d5 PUSH1 0x20
0x7d7 DUP2
0x7d8 SWAP1
0x7d9 MSTORE
0x7da PUSH1 0x40
0x7dc DUP1
0x7dd DUP3
0x7de SHA3
0x7df DUP1
0x7e0 SLOAD
0x7e1 SWAP1
0x7e2 DUP4
0x7e3 SWAP1
0x7e4 SSTORE
0x7e5 SWAP1
0x7e6 MLOAD
0x7e7 SWAP1
0x7e8 SWAP6
0x7e9 POP
0x7ea DUP6
0x7eb ISZERO
0x7ec PUSH2 0x8fc
0x7ef MUL
0x7f0 SWAP2
0x7f1 DUP7
0x7f2 SWAP2
0x7f3 SWAP1
0x7f4 DUP2
0x7f5 DUP2
0x7f6 DUP2
0x7f7 DUP6
0x7f8 DUP9
0x7f9 DUP9
0x7fa CALL
0x7fb SWAP4
0x7fc POP
0x7fd POP
0x7fe POP
0x7ff POP
0x800 ISZERO
0x801 ISZERO
0x802 PUSH2 0x807
0x805 JUMPI
---
0x7c6: V725 = 0x1
0x7c8: V726 = 0xa0
0x7ca: V727 = 0x2
0x7cc: V728 = EXP 0x2 0xa0
0x7cd: V729 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ce: V730 = CALLER
0x7cf: V731 = AND V730 0xffffffffffffffffffffffffffffffffffffffff
0x7d0: V732 = 0x0
0x7d4: M[0x0] = V731
0x7d5: V733 = 0x20
0x7d9: M[0x20] = 0x0
0x7da: V734 = 0x40
0x7de: V735 = SHA3 0x0 0x40
0x7e0: V736 = S[V735]
0x7e4: S[V735] = 0x0
0x7e6: V737 = M[0x40]
0x7eb: V738 = ISZERO V736
0x7ec: V739 = 0x8fc
0x7ef: V740 = MUL 0x8fc V738
0x7fa: V741 = CALL V740 V731 V736 V737 0x0 V737 0x0
0x800: V742 = ISZERO V741
0x801: V743 = ISZERO V742
0x802: V744 = 0x807
0x805: JUMPI 0x807 V743
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V736, S1, S0]
Exit stack: [V12, S5, S4, {0x105, 0x568}, V736, 0x0, 0x0]

================================

Block 0x806
[0x806:0x806]
---
Predecessors: [0x7c6]
Successors: []
---
0x806 INVALID
---
0x806: INVALID 
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, V736, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, {0x105, 0x568}, V736, 0x0, 0x0]

================================

Block 0x807
[0x807:0x80b]
---
Predecessors: [0x7c6]
Successors: [0x98a]
---
0x807 JUMPDEST
0x808 PUSH2 0x98a
0x80b JUMP
---
0x807: JUMPDEST 
0x808: V745 = 0x98a
0x80b: JUMP 0x98a
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, V736, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, {0x105, 0x568}, V736, 0x0, 0x0]

================================

Block 0x80c
[0x80c:0x844]
---
Predecessors: [0x7b2]
Successors: [0x845, 0x8ed]
---
0x80c JUMPDEST
0x80d POP
0x80e POP
0x80f PUSH1 0x9
0x811 SLOAD
0x812 PUSH1 0x1
0x814 PUSH1 0xa0
0x816 PUSH1 0x2
0x818 EXP
0x819 SUB
0x81a CALLER
0x81b AND
0x81c PUSH1 0x0
0x81e SWAP1
0x81f DUP2
0x820 MSTORE
0x821 PUSH1 0x20
0x823 DUP2
0x824 DUP2
0x825 MSTORE
0x826 PUSH1 0x40
0x828 DUP1
0x829 DUP4
0x82a SHA3
0x82b DUP1
0x82c SLOAD
0x82d SWAP1
0x82e DUP5
0x82f SWAP1
0x830 SSTORE
0x831 PUSH1 0x1
0x833 SWAP1
0x834 SWAP3
0x835 MSTORE
0x836 DUP3
0x837 SHA3
0x838 SLOAD
0x839 SWAP3
0x83a MUL
0x83b SWAP2
0x83c PUSH1 0xff
0x83e AND
0x83f ISZERO
0x840 ISZERO
0x841 PUSH2 0x8ed
0x844 JUMPI
---
0x80c: JUMPDEST 
0x80f: V746 = 0x9
0x811: V747 = S[0x9]
0x812: V748 = 0x1
0x814: V749 = 0xa0
0x816: V750 = 0x2
0x818: V751 = EXP 0x2 0xa0
0x819: V752 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81a: V753 = CALLER
0x81b: V754 = AND V753 0xffffffffffffffffffffffffffffffffffffffff
0x81c: V755 = 0x0
0x820: M[0x0] = V754
0x821: V756 = 0x20
0x825: M[0x20] = 0x0
0x826: V757 = 0x40
0x82a: V758 = SHA3 0x0 0x40
0x82c: V759 = S[V758]
0x830: S[V758] = 0x0
0x831: V760 = 0x1
0x835: M[0x20] = 0x1
0x837: V761 = SHA3 0x0 0x40
0x838: V762 = S[V761]
0x83a: V763 = MUL V747 V759
0x83c: V764 = 0xff
0x83e: V765 = AND 0xff V762
0x83f: V766 = ISZERO V765
0x840: V767 = ISZERO V766
0x841: V768 = 0x8ed
0x844: JUMPI 0x8ed V767
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V763, 0x0]
Exit stack: [V12, S5, S4, {0x105, 0x568}, 0x0, V763, 0x0]

================================

Block 0x845
[0x845:0x847]
---
Predecessors: [0x80c]
Successors: [0x848]
---
0x845 PUSH1 0x64
0x847 DUP3
---
0x845: V769 = 0x64
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, 0x0, V763, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1]
Exit stack: [V12, S5, S4, {0x105, 0x568}, 0x0, V763, 0x0, 0x64, V763]

================================

Block 0x848
[0x848:0x8c9]
---
Predecessors: [0x845]
Successors: [0x8ca, 0x8cb]
---
0x848 JUMPDEST
0x849 PUSH1 0x14
0x84b SLOAD
0x84c PUSH1 0x15
0x84e SLOAD
0x84f PUSH1 0x40
0x851 DUP1
0x852 MLOAD
0x853 PUSH1 0x0
0x855 PUSH1 0x20
0x857 SWAP2
0x858 DUP3
0x859 ADD
0x85a DUP2
0x85b SWAP1
0x85c MSTORE
0x85d DUP3
0x85e MLOAD
0x85f PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x880 DUP2
0x881 MSTORE
0x882 PUSH1 0x1
0x884 PUSH1 0xa0
0x886 PUSH1 0x2
0x888 EXP
0x889 SUB
0x88a SWAP5
0x88b DUP6
0x88c AND
0x88d PUSH1 0x4
0x88f DUP3
0x890 ADD
0x891 MSTORE
0x892 SWAP7
0x893 SWAP1
0x894 SWAP6
0x895 DIV
0x896 PUSH1 0x24
0x898 DUP8
0x899 ADD
0x89a DUP2
0x89b SWAP1
0x89c MSTORE
0x89d SWAP2
0x89e MLOAD
0x89f SWAP2
0x8a0 SWAP7
0x8a1 POP
0x8a2 PUSH2 0x100
0x8a5 SWAP1
0x8a6 SWAP4
0x8a7 DIV
0x8a8 SWAP1
0x8a9 SWAP2
0x8aa AND
0x8ab SWAP4
0x8ac PUSH4 0xa9059cbb
0x8b1 SWAP4
0x8b2 PUSH1 0x44
0x8b4 DUP1
0x8b5 DUP4
0x8b6 ADD
0x8b7 SWAP5
0x8b8 SWAP4
0x8b9 SWAP3
0x8ba DUP4
0x8bb SWAP1
0x8bc SUB
0x8bd ADD
0x8be SWAP1
0x8bf DUP3
0x8c0 SWAP1
0x8c1 DUP8
0x8c2 DUP1
0x8c3 EXTCODESIZE
0x8c4 ISZERO
0x8c5 ISZERO
0x8c6 PUSH2 0x8cb
0x8c9 JUMPI
---
0x848: JUMPDEST 
0x849: V770 = 0x14
0x84b: V771 = S[0x14]
0x84c: V772 = 0x15
0x84e: V773 = S[0x15]
0x84f: V774 = 0x40
0x852: V775 = M[0x40]
0x853: V776 = 0x0
0x855: V777 = 0x20
0x859: V778 = ADD 0x20 V775
0x85c: M[V778] = 0x0
0x85e: V779 = M[0x40]
0x85f: V780 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x881: M[V779] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x882: V781 = 0x1
0x884: V782 = 0xa0
0x886: V783 = 0x2
0x888: V784 = EXP 0x2 0xa0
0x889: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88c: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0x88d: V787 = 0x4
0x890: V788 = ADD V779 0x4
0x891: M[V788] = V786
0x895: V789 = DIV V763 0x64
0x896: V790 = 0x24
0x899: V791 = ADD V779 0x24
0x89c: M[V791] = V789
0x89e: V792 = M[0x40]
0x8a2: V793 = 0x100
0x8a7: V794 = DIV V771 0x100
0x8aa: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V794
0x8ac: V796 = 0xa9059cbb
0x8b2: V797 = 0x44
0x8b6: V798 = ADD V779 0x44
0x8bc: V799 = SUB V779 V792
0x8bd: V800 = ADD V799 0x44
0x8c3: V801 = EXTCODESIZE V795
0x8c4: V802 = ISZERO V801
0x8c5: V803 = ISZERO V802
0x8c6: V804 = 0x8cb
0x8c9: JUMPI 0x8cb V803
---
Entry stack: [V12, S7, S6, {0x105, 0x568}, 0x0, V763, 0x0, 0x64, V763]
Stack pops: 3
Stack additions: [V789, V795, 0xa9059cbb, V798, 0x20, V792, V800, V792, 0x0, V795]
Exit stack: [V12, S7, S6, {0x105, 0x568}, 0x0, V763, V789, V795, 0xa9059cbb, V798, 0x20, V792, V800, V792, 0x0, V795]

================================

Block 0x8ca
[0x8ca:0x8ca]
---
Predecessors: [0x848]
Successors: []
---
0x8ca INVALID
---
0x8ca: INVALID 
---
Entry stack: [V12, S14, S13, {0x105, 0x568}, 0x0, V763, V789, V795, 0xa9059cbb, V798, 0x20, V792, V800, V792, 0x0, V795]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, {0x105, 0x568}, 0x0, V763, V789, V795, 0xa9059cbb, V798, 0x20, V792, V800, V792, 0x0, V795]

================================

Block 0x8cb
[0x8cb:0x8d7]
---
Predecessors: [0x848]
Successors: [0x8d8, 0x8d9]
---
0x8cb JUMPDEST
0x8cc PUSH2 0x2c6
0x8cf GAS
0x8d0 SUB
0x8d1 CALL
0x8d2 ISZERO
0x8d3 ISZERO
0x8d4 PUSH2 0x8d9
0x8d7 JUMPI
---
0x8cb: JUMPDEST 
0x8cc: V805 = 0x2c6
0x8cf: V806 = GAS
0x8d0: V807 = SUB V806 0x2c6
0x8d1: V808 = CALL V807 V795 0x0 V792 V800 V792 0x20
0x8d2: V809 = ISZERO V808
0x8d3: V810 = ISZERO V809
0x8d4: V811 = 0x8d9
0x8d7: JUMPI 0x8d9 V810
---
Entry stack: [V12, S14, S13, {0x105, 0x568}, 0x0, V763, V789, V795, 0xa9059cbb, V798, 0x20, V792, V800, V792, 0x0, V795]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, {0x105, 0x568}, 0x0, V763, V789, V795, 0xa9059cbb, V798]

================================

Block 0x8d8
[0x8d8:0x8d8]
---
Predecessors: [0x8cb]
Successors: []
---
0x8d8 INVALID
---
0x8d8: INVALID 
---
Entry stack: [V12, S8, S7, {0x105, 0x568}, 0x0, V763, V789, V795, 0xa9059cbb, V798]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x105, 0x568}, 0x0, V763, V789, V795, 0xa9059cbb, V798]

================================

Block 0x8d9
[0x8d9:0x8e7]
---
Predecessors: [0x8cb]
Successors: [0x8e8, 0x8ed]
---
0x8d9 JUMPDEST
0x8da POP
0x8db POP
0x8dc PUSH1 0x40
0x8de MLOAD
0x8df MLOAD
0x8e0 ISZERO
0x8e1 ISZERO
0x8e2 SWAP1
0x8e3 POP
0x8e4 PUSH2 0x8ed
0x8e7 JUMPI
---
0x8d9: JUMPDEST 
0x8dc: V812 = 0x40
0x8de: V813 = M[0x40]
0x8df: V814 = M[V813]
0x8e0: V815 = ISZERO V814
0x8e1: V816 = ISZERO V815
0x8e4: V817 = 0x8ed
0x8e7: JUMPI 0x8ed V816
---
Entry stack: [V12, S8, S7, {0x105, 0x568}, 0x0, V763, V789, V795, 0xa9059cbb, V798]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S8, S7, {0x105, 0x568}, 0x0, V763, V789]

================================

Block 0x8e8
[0x8e8:0x8ec]
---
Predecessors: [0x8d9]
Successors: []
---
0x8e8 PUSH1 0x0
0x8ea PUSH1 0x0
0x8ec REVERT
---
0x8e8: V818 = 0x0
0x8ea: V819 = 0x0
0x8ec: REVERT 0x0 0x0
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, 0x0, V763, V789]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, {0x105, 0x568}, 0x0, V763, V789]

================================

Block 0x8ed
[0x8ed:0x8ed]
---
Predecessors: [0x80c, 0x8d9]
Successors: [0x8ee]
---
0x8ed JUMPDEST
---
0x8ed: JUMPDEST 
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, 0x0, V763, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, {0x105, 0x568}, 0x0, V763, S0]

================================

Block 0x8ee
[0x8ee:0x966]
---
Predecessors: [0x8ed]
Successors: [0x967, 0x968]
---
0x8ee JUMPDEST
0x8ef PUSH1 0x14
0x8f1 SLOAD
0x8f2 PUSH1 0x40
0x8f4 DUP1
0x8f5 MLOAD
0x8f6 PUSH1 0x0
0x8f8 PUSH1 0x20
0x8fa SWAP2
0x8fb DUP3
0x8fc ADD
0x8fd DUP2
0x8fe SWAP1
0x8ff MSTORE
0x900 DUP3
0x901 MLOAD
0x902 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x923 DUP2
0x924 MSTORE
0x925 PUSH1 0x1
0x927 PUSH1 0xa0
0x929 PUSH1 0x2
0x92b EXP
0x92c SUB
0x92d CALLER
0x92e DUP2
0x92f AND
0x930 PUSH1 0x4
0x932 DUP4
0x933 ADD
0x934 MSTORE
0x935 DUP7
0x936 DUP9
0x937 SUB
0x938 PUSH1 0x24
0x93a DUP4
0x93b ADD
0x93c MSTORE
0x93d SWAP4
0x93e MLOAD
0x93f PUSH2 0x100
0x942 SWAP1
0x943 SWAP6
0x944 DIV
0x945 SWAP1
0x946 SWAP4
0x947 AND
0x948 SWAP4
0x949 PUSH4 0xa9059cbb
0x94e SWAP4
0x94f PUSH1 0x44
0x951 DUP1
0x952 DUP3
0x953 ADD
0x954 SWAP5
0x955 SWAP4
0x956 SWAP2
0x957 DUP4
0x958 SWAP1
0x959 SUB
0x95a ADD
0x95b SWAP1
0x95c DUP3
0x95d SWAP1
0x95e DUP8
0x95f DUP1
0x960 EXTCODESIZE
0x961 ISZERO
0x962 ISZERO
0x963 PUSH2 0x968
0x966 JUMPI
---
0x8ee: JUMPDEST 
0x8ef: V820 = 0x14
0x8f1: V821 = S[0x14]
0x8f2: V822 = 0x40
0x8f5: V823 = M[0x40]
0x8f6: V824 = 0x0
0x8f8: V825 = 0x20
0x8fc: V826 = ADD 0x20 V823
0x8ff: M[V826] = 0x0
0x901: V827 = M[0x40]
0x902: V828 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x924: M[V827] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x925: V829 = 0x1
0x927: V830 = 0xa0
0x929: V831 = 0x2
0x92b: V832 = EXP 0x2 0xa0
0x92c: V833 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92d: V834 = CALLER
0x92f: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff V834
0x930: V836 = 0x4
0x933: V837 = ADD V827 0x4
0x934: M[V837] = V835
0x937: V838 = SUB S1 S0
0x938: V839 = 0x24
0x93b: V840 = ADD V827 0x24
0x93c: M[V840] = V838
0x93e: V841 = M[0x40]
0x93f: V842 = 0x100
0x944: V843 = DIV V821 0x100
0x947: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0x949: V845 = 0xa9059cbb
0x94f: V846 = 0x44
0x953: V847 = ADD V827 0x44
0x959: V848 = SUB V827 V841
0x95a: V849 = ADD V848 0x44
0x960: V850 = EXTCODESIZE V844
0x961: V851 = ISZERO V850
0x962: V852 = ISZERO V851
0x963: V853 = 0x968
0x966: JUMPI 0x968 V852
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V844, 0xa9059cbb, V847, 0x20, V841, V849, V841, 0x0, V844]
Exit stack: [V12, S5, S4, {0x105, 0x568}, 0x0, S1, S0, V844, 0xa9059cbb, V847, 0x20, V841, V849, V841, 0x0, V844]

================================

Block 0x967
[0x967:0x967]
---
Predecessors: [0x8ee]
Successors: []
---
0x967 INVALID
---
0x967: INVALID 
---
Entry stack: [V12, S14, S13, {0x105, 0x568}, 0x0, S10, S9, V844, 0xa9059cbb, V847, 0x20, V841, V849, V841, 0x0, V844]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, {0x105, 0x568}, 0x0, S10, S9, V844, 0xa9059cbb, V847, 0x20, V841, V849, V841, 0x0, V844]

================================

Block 0x968
[0x968:0x974]
---
Predecessors: [0x8ee]
Successors: [0x975, 0x976]
---
0x968 JUMPDEST
0x969 PUSH2 0x2c6
0x96c GAS
0x96d SUB
0x96e CALL
0x96f ISZERO
0x970 ISZERO
0x971 PUSH2 0x976
0x974 JUMPI
---
0x968: JUMPDEST 
0x969: V854 = 0x2c6
0x96c: V855 = GAS
0x96d: V856 = SUB V855 0x2c6
0x96e: V857 = CALL V856 V844 0x0 V841 V849 V841 0x20
0x96f: V858 = ISZERO V857
0x970: V859 = ISZERO V858
0x971: V860 = 0x976
0x974: JUMPI 0x976 V859
---
Entry stack: [V12, S14, S13, {0x105, 0x568}, 0x0, S10, S9, V844, 0xa9059cbb, V847, 0x20, V841, V849, V841, 0x0, V844]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, {0x105, 0x568}, 0x0, S10, S9, V844, 0xa9059cbb, V847]

================================

Block 0x975
[0x975:0x975]
---
Predecessors: [0x968]
Successors: []
---
0x975 INVALID
---
0x975: INVALID 
---
Entry stack: [V12, S8, S7, {0x105, 0x568}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x105, 0x568}, 0x0, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x976
[0x976:0x984]
---
Predecessors: [0x968]
Successors: [0x985, 0x98a]
---
0x976 JUMPDEST
0x977 POP
0x978 POP
0x979 PUSH1 0x40
0x97b MLOAD
0x97c MLOAD
0x97d ISZERO
0x97e ISZERO
0x97f SWAP1
0x980 POP
0x981 PUSH2 0x98a
0x984 JUMPI
---
0x976: JUMPDEST 
0x979: V861 = 0x40
0x97b: V862 = M[0x40]
0x97c: V863 = M[V862]
0x97d: V864 = ISZERO V863
0x97e: V865 = ISZERO V864
0x981: V866 = 0x98a
0x984: JUMPI 0x98a V865
---
Entry stack: [V12, S8, S7, {0x105, 0x568}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S8, S7, {0x105, 0x568}, 0x0, S4, S3]

================================

Block 0x985
[0x985:0x989]
---
Predecessors: [0x976]
Successors: []
---
0x985 PUSH1 0x0
0x987 PUSH1 0x0
0x989 REVERT
---
0x985: V867 = 0x0
0x987: V868 = 0x0
0x989: REVERT 0x0 0x0
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, {0x105, 0x568}, 0x0, S1, S0]

================================

Block 0x98a
[0x98a:0x98a]
---
Predecessors: [0x807, 0x976]
Successors: [0x98b]
---
0x98a JUMPDEST
---
0x98a: JUMPDEST 
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, {0x105, 0x568}, S2, S1, S0]

================================

Block 0x98b
[0x98b:0x98b]
---
Predecessors: [0x98a]
Successors: [0x98c]
---
0x98b JUMPDEST
---
0x98b: JUMPDEST 
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, {0x105, 0x568}, S2, S1, S0]

================================

Block 0x98c
[0x98c:0x990]
---
Predecessors: [0x98b]
Successors: [0x105, 0x568]
---
0x98c JUMPDEST
0x98d POP
0x98e POP
0x98f POP
0x990 JUMP
---
0x98c: JUMPDEST 
0x990: JUMP {0x105, 0x568}
---
Entry stack: [V12, S5, S4, {0x105, 0x568}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S5, S4]

================================

Block 0x991
[0x991:0x9a7]
---
Predecessors: [0x217]
Successors: [0x9a8, 0x9ad]
---
0x991 JUMPDEST
0x992 PUSH1 0x15
0x994 SLOAD
0x995 CALLER
0x996 PUSH1 0x1
0x998 PUSH1 0xa0
0x99a PUSH1 0x2
0x99c EXP
0x99d SUB
0x99e SWAP1
0x99f DUP2
0x9a0 AND
0x9a1 SWAP2
0x9a2 AND
0x9a3 EQ
0x9a4 PUSH2 0x9ad
0x9a7 JUMPI
---
0x991: JUMPDEST 
0x992: V869 = 0x15
0x994: V870 = S[0x15]
0x995: V871 = CALLER
0x996: V872 = 0x1
0x998: V873 = 0xa0
0x99a: V874 = 0x2
0x99c: V875 = EXP 0x2 0xa0
0x99d: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a0: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V871
0x9a2: V878 = AND V870 0xffffffffffffffffffffffffffffffffffffffff
0x9a3: V879 = EQ V878 V877
0x9a4: V880 = 0x9ad
0x9a7: JUMPI 0x9ad V879
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x9a8
[0x9a8:0x9ac]
---
Predecessors: [0x991]
Successors: []
---
0x9a8 PUSH1 0x0
0x9aa PUSH1 0x0
0x9ac REVERT
---
0x9a8: V881 = 0x0
0x9aa: V882 = 0x0
0x9ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x9ad
[0x9ad:0x9ba]
---
Predecessors: [0x991]
Successors: []
---
0x9ad JUMPDEST
0x9ae PUSH1 0x15
0x9b0 SLOAD
0x9b1 PUSH1 0x1
0x9b3 PUSH1 0xa0
0x9b5 PUSH1 0x2
0x9b7 EXP
0x9b8 SUB
0x9b9 AND
0x9ba SELFDESTRUCT
---
0x9ad: JUMPDEST 
0x9ae: V883 = 0x15
0x9b0: V884 = S[0x15]
0x9b1: V885 = 0x1
0x9b3: V886 = 0xa0
0x9b5: V887 = 0x2
0x9b7: V888 = EXP 0x2 0xa0
0x9b8: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b9: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0x9ba: SELFDESTRUCT V890
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x9bb
[0x9bb:0x9bb]
---
Predecessors: []
Successors: [0x9bc]
---
0x9bb JUMPDEST
---
0x9bb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9bc
[0x9bc:0x9bd]
---
Predecessors: [0x9bb]
Successors: []
Has unresolved jump.
---
0x9bc JUMPDEST
0x9bd JUMP
---
0x9bc: JUMPDEST 
0x9bd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9be
[0x9be:0x9d2]
---
Predecessors: [0x229]
Successors: [0x23d]
---
0x9be JUMPDEST
0x9bf PUSH1 0x1
0x9c1 PUSH1 0x20
0x9c3 MSTORE
0x9c4 PUSH1 0x0
0x9c6 SWAP1
0x9c7 DUP2
0x9c8 MSTORE
0x9c9 PUSH1 0x40
0x9cb SWAP1
0x9cc SHA3
0x9cd SLOAD
0x9ce PUSH1 0xff
0x9d0 AND
0x9d1 DUP2
0x9d2 JUMP
---
0x9be: JUMPDEST 
0x9bf: V891 = 0x1
0x9c1: V892 = 0x20
0x9c3: M[0x20] = 0x1
0x9c4: V893 = 0x0
0x9c8: M[0x0] = V181
0x9c9: V894 = 0x40
0x9cc: V895 = SHA3 0x0 0x40
0x9cd: V896 = S[V895]
0x9ce: V897 = 0xff
0x9d0: V898 = AND 0xff V896
0x9d2: JUMP 0x23d
---
Entry stack: [V12, 0x23d, V181]
Stack pops: 2
Stack additions: [S1, V898]
Exit stack: [V12, 0x23d, V898]

================================

Block 0x9d3
[0x9d3:0x9e9]
---
Predecessors: [0x25b]
Successors: [0x9ea, 0x9ef]
---
0x9d3 JUMPDEST
0x9d4 PUSH1 0x15
0x9d6 SLOAD
0x9d7 CALLER
0x9d8 PUSH1 0x1
0x9da PUSH1 0xa0
0x9dc PUSH1 0x2
0x9de EXP
0x9df SUB
0x9e0 SWAP1
0x9e1 DUP2
0x9e2 AND
0x9e3 SWAP2
0x9e4 AND
0x9e5 EQ
0x9e6 PUSH2 0x9ef
0x9e9 JUMPI
---
0x9d3: JUMPDEST 
0x9d4: V899 = 0x15
0x9d6: V900 = S[0x15]
0x9d7: V901 = CALLER
0x9d8: V902 = 0x1
0x9da: V903 = 0xa0
0x9dc: V904 = 0x2
0x9de: V905 = EXP 0x2 0xa0
0x9df: V906 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e2: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0x9e4: V908 = AND V900 0xffffffffffffffffffffffffffffffffffffffff
0x9e5: V909 = EQ V908 V907
0x9e6: V910 = 0x9ef
0x9e9: JUMPI 0x9ef V909
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x9ea
[0x9ea:0x9ee]
---
Predecessors: [0x9d3]
Successors: []
---
0x9ea PUSH1 0x0
0x9ec PUSH1 0x0
0x9ee REVERT
---
0x9ea: V911 = 0x0
0x9ec: V912 = 0x0
0x9ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x9ef
[0x9ef:0x9fa]
---
Predecessors: [0x9d3]
Successors: [0x9fb, 0xa00]
---
0x9ef JUMPDEST
0x9f0 PUSH1 0x5
0x9f2 SLOAD
0x9f3 PUSH1 0xff
0x9f5 AND
0x9f6 ISZERO
0x9f7 PUSH2 0xa00
0x9fa JUMPI
---
0x9ef: JUMPDEST 
0x9f0: V913 = 0x5
0x9f2: V914 = S[0x5]
0x9f3: V915 = 0xff
0x9f5: V916 = AND 0xff V914
0x9f6: V917 = ISZERO V916
0x9f7: V918 = 0xa00
0x9fa: JUMPI 0xa00 V917
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x9fb
[0x9fb:0x9ff]
---
Predecessors: [0x9ef]
Successors: []
---
0x9fb PUSH1 0x0
0x9fd PUSH1 0x0
0x9ff REVERT
---
0x9fb: V919 = 0x0
0x9fd: V920 = 0x0
0x9ff: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa00
[0xa00:0xa0b]
---
Predecessors: [0x9ef]
Successors: [0xa0c, 0xa11]
---
0xa00 JUMPDEST
0xa01 PUSH1 0x3
0xa03 SLOAD
0xa04 PUSH1 0xff
0xa06 AND
0xa07 ISZERO
0xa08 PUSH2 0xa11
0xa0b JUMPI
---
0xa00: JUMPDEST 
0xa01: V921 = 0x3
0xa03: V922 = S[0x3]
0xa04: V923 = 0xff
0xa06: V924 = AND 0xff V922
0xa07: V925 = ISZERO V924
0xa08: V926 = 0xa11
0xa0b: JUMPI 0xa11 V925
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa0c
[0xa0c:0xa10]
---
Predecessors: [0xa00]
Successors: []
---
0xa0c PUSH1 0x0
0xa0e PUSH1 0x0
0xa10 REVERT
---
0xa0c: V927 = 0x0
0xa0e: V928 = 0x0
0xa10: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa11
[0xa11:0xa19]
---
Predecessors: [0xa00]
Successors: [0xa1a]
---
0xa11 JUMPDEST
0xa12 PUSH1 0x2
0xa14 DUP1
0xa15 SLOAD
0xa16 CALLVALUE
0xa17 ADD
0xa18 SWAP1
0xa19 SSTORE
---
0xa11: JUMPDEST 
0xa12: V929 = 0x2
0xa15: V930 = S[0x2]
0xa16: V931 = CALLVALUE
0xa17: V932 = ADD V931 V930
0xa19: S[0x2] = V932
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa1a
[0xa1a:0xa1b]
---
Predecessors: [0xa11]
Successors: [0x105]
---
0xa1a JUMPDEST
0xa1b JUMP
---
0xa1a: JUMPDEST 
0xa1b: JUMP 0x105
---
Entry stack: [V12, 0x105]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa1c
[0xa1c:0xa24]
---
Predecessors: [0x26d]
Successors: [0x23d]
---
0xa1c JUMPDEST
0xa1d PUSH1 0x3
0xa1f SLOAD
0xa20 PUSH1 0xff
0xa22 AND
0xa23 DUP2
0xa24 JUMP
---
0xa1c: JUMPDEST 
0xa1d: V933 = 0x3
0xa1f: V934 = S[0x3]
0xa20: V935 = 0xff
0xa22: V936 = AND 0xff V934
0xa24: JUMP 0x23d
---
Entry stack: [V12, 0x23d]
Stack pops: 1
Stack additions: [S0, V936]
Exit stack: [V12, 0x23d, V936]

================================

Block 0xa25
[0xa25:0xa3b]
---
Predecessors: [0x291]
Successors: [0xa3c, 0xa41]
---
0xa25 JUMPDEST
0xa26 PUSH1 0x15
0xa28 SLOAD
0xa29 CALLER
0xa2a PUSH1 0x1
0xa2c PUSH1 0xa0
0xa2e PUSH1 0x2
0xa30 EXP
0xa31 SUB
0xa32 SWAP1
0xa33 DUP2
0xa34 AND
0xa35 SWAP2
0xa36 AND
0xa37 EQ
0xa38 PUSH2 0xa41
0xa3b JUMPI
---
0xa25: JUMPDEST 
0xa26: V937 = 0x15
0xa28: V938 = S[0x15]
0xa29: V939 = CALLER
0xa2a: V940 = 0x1
0xa2c: V941 = 0xa0
0xa2e: V942 = 0x2
0xa30: V943 = EXP 0x2 0xa0
0xa31: V944 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa34: V945 = AND 0xffffffffffffffffffffffffffffffffffffffff V939
0xa36: V946 = AND V938 0xffffffffffffffffffffffffffffffffffffffff
0xa37: V947 = EQ V946 V945
0xa38: V948 = 0xa41
0xa3b: JUMPI 0xa41 V947
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa3c
[0xa3c:0xa40]
---
Predecessors: [0xa25]
Successors: []
---
0xa3c PUSH1 0x0
0xa3e PUSH1 0x0
0xa40 REVERT
---
0xa3c: V949 = 0x0
0xa3e: V950 = 0x0
0xa40: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa41
[0xa41:0xa4e]
---
Predecessors: [0xa25]
Successors: [0xa4f]
---
0xa41 JUMPDEST
0xa42 PUSH1 0x5
0xa44 DUP1
0xa45 SLOAD
0xa46 PUSH1 0xff
0xa48 NOT
0xa49 AND
0xa4a PUSH1 0x1
0xa4c OR
0xa4d SWAP1
0xa4e SSTORE
---
0xa41: JUMPDEST 
0xa42: V951 = 0x5
0xa45: V952 = S[0x5]
0xa46: V953 = 0xff
0xa48: V954 = NOT 0xff
0xa49: V955 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V952
0xa4a: V956 = 0x1
0xa4c: V957 = OR 0x1 V955
0xa4e: S[0x5] = V957
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa4f
[0xa4f:0xa50]
---
Predecessors: [0xa41]
Successors: [0x105]
---
0xa4f JUMPDEST
0xa50 JUMP
---
0xa4f: JUMPDEST 
0xa50: JUMP 0x105
---
Entry stack: [V12, 0x105]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa51
[0xa51:0xa62]
---
Predecessors: [0x2a3]
Successors: [0x1c5]
---
0xa51 JUMPDEST
0xa52 PUSH1 0x16
0xa54 PUSH1 0x20
0xa56 MSTORE
0xa57 PUSH1 0x0
0xa59 SWAP1
0xa5a DUP2
0xa5b MSTORE
0xa5c PUSH1 0x40
0xa5e SWAP1
0xa5f SHA3
0xa60 SLOAD
0xa61 DUP2
0xa62 JUMP
---
0xa51: JUMPDEST 
0xa52: V958 = 0x16
0xa54: V959 = 0x20
0xa56: M[0x20] = 0x16
0xa57: V960 = 0x0
0xa5b: M[0x0] = V224
0xa5c: V961 = 0x40
0xa5f: V962 = SHA3 0x0 0x40
0xa60: V963 = S[V962]
0xa62: JUMP 0x1c5
---
Entry stack: [V12, 0x1c5, V224]
Stack pops: 2
Stack additions: [S1, V963]
Exit stack: [V12, 0x1c5, V963]

================================

Block 0xa63
[0xa63:0xa6a]
---
Predecessors: [0x2c9]
Successors: [0xa6b, 0xa70]
---
0xa63 JUMPDEST
0xa64 CALLVALUE
0xa65 ISZERO
0xa66 ISZERO
0xa67 PUSH2 0xa70
0xa6a JUMPI
---
0xa63: JUMPDEST 
0xa64: V964 = CALLVALUE
0xa65: V965 = ISZERO V964
0xa66: V966 = ISZERO V965
0xa67: V967 = 0xa70
0xa6a: JUMPI 0xa70 V966
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa6b
[0xa6b:0xa6f]
---
Predecessors: [0xa63]
Successors: []
---
0xa6b PUSH1 0x0
0xa6d PUSH1 0x0
0xa6f REVERT
---
0xa6b: V968 = 0x0
0xa6d: V969 = 0x0
0xa6f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa70
[0xa70:0xa7b]
---
Predecessors: [0xa63]
Successors: [0xc45]
---
0xa70 JUMPDEST
0xa71 PUSH2 0xa7c
0xa74 PUSH1 0x10
0xa76 SLOAD
0xa77 CALLVALUE
0xa78 PUSH2 0xc45
0xa7b JUMP
---
0xa70: JUMPDEST 
0xa71: V970 = 0xa7c
0xa74: V971 = 0x10
0xa76: V972 = S[0x10]
0xa77: V973 = CALLVALUE
0xa78: V974 = 0xc45
0xa7b: JUMP 0xc45
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: [0xa7c, V972, V973]
Exit stack: [V12, 0x105, 0xa7c, V972, V973]

================================

Block 0xa7c
[0xa7c:0xa7f]
---
Predecessors: [0xc66]
Successors: [0xa80]
---
0xa7c JUMPDEST
0xa7d PUSH1 0x10
0xa7f SSTORE
---
0xa7c: JUMPDEST 
0xa7d: V975 = 0x10
0xa7f: S[0x10] = V1139
---
Entry stack: [V12, 0x105, V1139]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xa80
[0xa80:0xa81]
---
Predecessors: [0xa7c]
Successors: [0x105]
---
0xa80 JUMPDEST
0xa81 JUMP
---
0xa80: JUMPDEST 
0xa81: JUMP 0x105
---
Entry stack: [V12, 0x105]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa82
[0xa82:0xa87]
---
Predecessors: [0x2db]
Successors: [0x1c5]
---
0xa82 JUMPDEST
0xa83 PUSH1 0x2
0xa85 SLOAD
0xa86 DUP2
0xa87 JUMP
---
0xa82: JUMPDEST 
0xa83: V976 = 0x2
0xa85: V977 = S[0x2]
0xa87: JUMP 0x1c5
---
Entry stack: [V12, 0x1c5]
Stack pops: 1
Stack additions: [S0, V977]
Exit stack: [V12, 0x1c5, V977]

================================

Block 0xa88
[0xa88:0xac7]
---
Predecessors: [0x2fd]
Successors: [0x78f, 0xac8]
---
0xa88 JUMPDEST
0xa89 PUSH1 0x7
0xa8b DUP1
0xa8c SLOAD
0xa8d PUSH1 0x40
0xa8f DUP1
0xa90 MLOAD
0xa91 PUSH1 0x20
0xa93 PUSH1 0x2
0xa95 PUSH1 0x1
0xa97 DUP6
0xa98 AND
0xa99 ISZERO
0xa9a PUSH2 0x100
0xa9d MUL
0xa9e PUSH1 0x0
0xaa0 NOT
0xaa1 ADD
0xaa2 SWAP1
0xaa3 SWAP5
0xaa4 AND
0xaa5 SWAP4
0xaa6 SWAP1
0xaa7 SWAP4
0xaa8 DIV
0xaa9 PUSH1 0x1f
0xaab DUP2
0xaac ADD
0xaad DUP5
0xaae SWAP1
0xaaf DIV
0xab0 DUP5
0xab1 MUL
0xab2 DUP3
0xab3 ADD
0xab4 DUP5
0xab5 ADD
0xab6 SWAP1
0xab7 SWAP3
0xab8 MSTORE
0xab9 DUP2
0xaba DUP2
0xabb MSTORE
0xabc SWAP3
0xabd SWAP2
0xabe DUP4
0xabf ADD
0xac0 DUP3
0xac1 DUP3
0xac2 DUP1
0xac3 ISZERO
0xac4 PUSH2 0x78f
0xac7 JUMPI
---
0xa88: JUMPDEST 
0xa89: V978 = 0x7
0xa8c: V979 = S[0x7]
0xa8d: V980 = 0x40
0xa90: V981 = M[0x40]
0xa91: V982 = 0x20
0xa93: V983 = 0x2
0xa95: V984 = 0x1
0xa98: V985 = AND V979 0x1
0xa99: V986 = ISZERO V985
0xa9a: V987 = 0x100
0xa9d: V988 = MUL 0x100 V986
0xa9e: V989 = 0x0
0xaa0: V990 = NOT 0x0
0xaa1: V991 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V988
0xaa4: V992 = AND V979 V991
0xaa8: V993 = DIV V992 0x2
0xaa9: V994 = 0x1f
0xaac: V995 = ADD V993 0x1f
0xaaf: V996 = DIV V995 0x20
0xab1: V997 = MUL 0x20 V996
0xab3: V998 = ADD V981 V997
0xab5: V999 = ADD 0x20 V998
0xab8: M[0x40] = V999
0xabb: M[V981] = V993
0xabf: V1000 = ADD V981 0x20
0xac3: V1001 = ISZERO V993
0xac4: V1002 = 0x78f
0xac7: JUMPI 0x78f V1001
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: [V981, 0x7, V993, V1000, 0x7, V993]
Exit stack: [V12, 0x129, V981, 0x7, V993, V1000, 0x7, V993]

================================

Block 0xac8
[0xac8:0xacf]
---
Predecessors: [0xa88]
Successors: [0x764, 0xad0]
---
0xac8 DUP1
0xac9 PUSH1 0x1f
0xacb LT
0xacc PUSH2 0x764
0xacf JUMPI
---
0xac9: V1003 = 0x1f
0xacb: V1004 = LT 0x1f V993
0xacc: V1005 = 0x764
0xacf: JUMPI 0x764 V1004
---
Entry stack: [V12, 0x129, V981, 0x7, V993, V1000, 0x7, V993]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x129, V981, 0x7, V993, V1000, 0x7, V993]

================================

Block 0xad0
[0xad0:0xae2]
---
Predecessors: [0xac8]
Successors: [0x78f]
---
0xad0 PUSH2 0x100
0xad3 DUP1
0xad4 DUP4
0xad5 SLOAD
0xad6 DIV
0xad7 MUL
0xad8 DUP4
0xad9 MSTORE
0xada SWAP2
0xadb PUSH1 0x20
0xadd ADD
0xade SWAP2
0xadf PUSH2 0x78f
0xae2 JUMP
---
0xad0: V1006 = 0x100
0xad5: V1007 = S[0x7]
0xad6: V1008 = DIV V1007 0x100
0xad7: V1009 = MUL V1008 0x100
0xad9: M[V1000] = V1009
0xadb: V1010 = 0x20
0xadd: V1011 = ADD 0x20 V1000
0xadf: V1012 = 0x78f
0xae2: JUMP 0x78f
---
Entry stack: [V12, 0x129, V981, 0x7, V993, V1000, 0x7, V993]
Stack pops: 3
Stack additions: [V1011, S1, S0]
Exit stack: [V12, 0x129, V981, 0x7, V993, V1011, 0x7, V993]

================================

Block 0xae3
[0xae3:0xaf0]
---
Predecessors: []
Successors: [0xaf1]
---
0xae3 JUMPDEST
0xae4 DUP3
0xae5 ADD
0xae6 SWAP2
0xae7 SWAP1
0xae8 PUSH1 0x0
0xaea MSTORE
0xaeb PUSH1 0x20
0xaed PUSH1 0x0
0xaef SHA3
0xaf0 SWAP1
---
0xae3: JUMPDEST 
0xae5: V1013 = ADD S2 S0
0xae8: V1014 = 0x0
0xaea: M[0x0] = S1
0xaeb: V1015 = 0x20
0xaed: V1016 = 0x0
0xaef: V1017 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V1013, V1017, S2]
Exit stack: [V1013, V1017, S2]

================================

Block 0xaf1
[0xaf1:0xb04]
---
Predecessors: [0xae3]
Successors: [0x772, 0xb05]
---
0xaf1 JUMPDEST
0xaf2 DUP2
0xaf3 SLOAD
0xaf4 DUP2
0xaf5 MSTORE
0xaf6 SWAP1
0xaf7 PUSH1 0x1
0xaf9 ADD
0xafa SWAP1
0xafb PUSH1 0x20
0xafd ADD
0xafe DUP1
0xaff DUP4
0xb00 GT
0xb01 PUSH2 0x772
0xb04 JUMPI
---
0xaf1: JUMPDEST 
0xaf3: V1018 = S[V1017]
0xaf5: M[S0] = V1018
0xaf7: V1019 = 0x1
0xaf9: V1020 = ADD 0x1 V1017
0xafb: V1021 = 0x20
0xafd: V1022 = ADD 0x20 S0
0xb00: V1023 = GT V1013 V1022
0xb01: V1024 = 0x772
0xb04: JUMPI 0x772 V1023
---
Entry stack: [V1013, V1017, S0]
Stack pops: 3
Stack additions: [S2, V1020, V1022]
Exit stack: [V1013, V1020, V1022]

================================

Block 0xb05
[0xb05:0xb0d]
---
Predecessors: [0xaf1]
Successors: [0xb0e]
---
0xb05 DUP3
0xb06 SWAP1
0xb07 SUB
0xb08 PUSH1 0x1f
0xb0a AND
0xb0b DUP3
0xb0c ADD
0xb0d SWAP2
---
0xb07: V1025 = SUB V1022 V1013
0xb08: V1026 = 0x1f
0xb0a: V1027 = AND 0x1f V1025
0xb0c: V1028 = ADD V1013 V1027
---
Entry stack: [V1013, V1020, V1022]
Stack pops: 3
Stack additions: [V1028, S1, S2]
Exit stack: [V1028, V1020, V1013]

================================

Block 0xb0e
[0xb0e:0xb15]
---
Predecessors: [0xb05]
Successors: []
Has unresolved jump.
---
0xb0e JUMPDEST
0xb0f POP
0xb10 POP
0xb11 POP
0xb12 POP
0xb13 POP
0xb14 DUP2
0xb15 JUMP
---
0xb0e: JUMPDEST 
0xb15: JUMP S6
---
Entry stack: [V1028, V1020, V1013]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xb16
[0xb16:0xb1e]
---
Predecessors: [0x38d]
Successors: [0x23d]
---
0xb16 JUMPDEST
0xb17 PUSH1 0x5
0xb19 SLOAD
0xb1a PUSH1 0xff
0xb1c AND
0xb1d DUP2
0xb1e JUMP
---
0xb16: JUMPDEST 
0xb17: V1029 = 0x5
0xb19: V1030 = S[0x5]
0xb1a: V1031 = 0xff
0xb1c: V1032 = AND 0xff V1030
0xb1e: JUMP 0x23d
---
Entry stack: [V12, 0x23d]
Stack pops: 1
Stack additions: [S0, V1032]
Exit stack: [V12, 0x23d, V1032]

================================

Block 0xb1f
[0xb1f:0xb35]
---
Predecessors: [0x3b1]
Successors: [0xb36, 0xb3b]
---
0xb1f JUMPDEST
0xb20 PUSH1 0x15
0xb22 SLOAD
0xb23 CALLER
0xb24 PUSH1 0x1
0xb26 PUSH1 0xa0
0xb28 PUSH1 0x2
0xb2a EXP
0xb2b SUB
0xb2c SWAP1
0xb2d DUP2
0xb2e AND
0xb2f SWAP2
0xb30 AND
0xb31 EQ
0xb32 PUSH2 0xb3b
0xb35 JUMPI
---
0xb1f: JUMPDEST 
0xb20: V1033 = 0x15
0xb22: V1034 = S[0x15]
0xb23: V1035 = CALLER
0xb24: V1036 = 0x1
0xb26: V1037 = 0xa0
0xb28: V1038 = 0x2
0xb2a: V1039 = EXP 0x2 0xa0
0xb2b: V1040 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2e: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff V1035
0xb30: V1042 = AND V1034 0xffffffffffffffffffffffffffffffffffffffff
0xb31: V1043 = EQ V1042 V1041
0xb32: V1044 = 0xb3b
0xb35: JUMPI 0xb3b V1043
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xb36
[0xb36:0xb3a]
---
Predecessors: [0xb1f]
Successors: []
---
0xb36 PUSH1 0x0
0xb38 PUSH1 0x0
0xb3a REVERT
---
0xb36: V1045 = 0x0
0xb38: V1046 = 0x0
0xb3a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xb3b
[0xb3b:0xb6a]
---
Predecessors: [0xb1f]
Successors: [0x102, 0xb6b]
---
0xb3b JUMPDEST
0xb3c PUSH1 0x40
0xb3e MLOAD
0xb3f PUSH1 0x1
0xb41 PUSH1 0xa0
0xb43 PUSH1 0x2
0xb45 EXP
0xb46 SUB
0xb47 CALLER
0xb48 DUP2
0xb49 AND
0xb4a SWAP2
0xb4b ADDRESS
0xb4c SWAP1
0xb4d SWAP2
0xb4e AND
0xb4f BALANCE
0xb50 DUP1
0xb51 ISZERO
0xb52 PUSH2 0x8fc
0xb55 MUL
0xb56 SWAP2
0xb57 PUSH1 0x0
0xb59 DUP2
0xb5a DUP2
0xb5b DUP2
0xb5c DUP6
0xb5d DUP9
0xb5e DUP9
0xb5f CALL
0xb60 SWAP4
0xb61 POP
0xb62 POP
0xb63 POP
0xb64 POP
0xb65 ISZERO
0xb66 ISZERO
0xb67 PUSH2 0x102
0xb6a JUMPI
---
0xb3b: JUMPDEST 
0xb3c: V1047 = 0x40
0xb3e: V1048 = M[0x40]
0xb3f: V1049 = 0x1
0xb41: V1050 = 0xa0
0xb43: V1051 = 0x2
0xb45: V1052 = EXP 0x2 0xa0
0xb46: V1053 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb47: V1054 = CALLER
0xb49: V1055 = AND 0xffffffffffffffffffffffffffffffffffffffff V1054
0xb4b: V1056 = ADDRESS
0xb4e: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V1056
0xb4f: V1058 = BALANCE V1057
0xb51: V1059 = ISZERO V1058
0xb52: V1060 = 0x8fc
0xb55: V1061 = MUL 0x8fc V1059
0xb57: V1062 = 0x0
0xb5f: V1063 = CALL V1061 V1055 V1058 V1048 0x0 V1048 0x0
0xb65: V1064 = ISZERO V1063
0xb66: V1065 = ISZERO V1064
0xb67: V1066 = 0x102
0xb6a: JUMPI 0x102 V1065
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xb6b
[0xb6b:0xb6b]
---
Predecessors: [0xb3b]
Successors: []
---
0xb6b INVALID
---
0xb6b: INVALID 
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0xb6c
[0xb6c:0xb6c]
---
Predecessors: []
Successors: [0xb6d]
---
0xb6c JUMPDEST
---
0xb6c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6d
[0xb6d:0xb6d]
---
Predecessors: [0xb6c]
Successors: [0xb6e]
---
0xb6d JUMPDEST
---
0xb6d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6e
[0xb6e:0xb6f]
---
Predecessors: [0xb6d]
Successors: []
Has unresolved jump.
---
0xb6e JUMPDEST
0xb6f JUMP
---
0xb6e: JUMPDEST 
0xb6f: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb70
[0xb70:0xb91]
---
Predecessors: [0x3c3]
Successors: [0xb92, 0xb97]
---
0xb70 JUMPDEST
0xb71 PUSH1 0x1
0xb73 PUSH1 0xa0
0xb75 PUSH1 0x2
0xb77 EXP
0xb78 SUB
0xb79 CALLER
0xb7a AND
0xb7b PUSH1 0x0
0xb7d SWAP1
0xb7e DUP2
0xb7f MSTORE
0xb80 PUSH1 0x16
0xb82 PUSH1 0x20
0xb84 MSTORE
0xb85 PUSH1 0x40
0xb87 SWAP1
0xb88 SHA3
0xb89 SLOAD
0xb8a DUP2
0xb8b SWAP1
0xb8c LT
0xb8d ISZERO
0xb8e PUSH2 0xb97
0xb91 JUMPI
---
0xb70: JUMPDEST 
0xb71: V1067 = 0x1
0xb73: V1068 = 0xa0
0xb75: V1069 = 0x2
0xb77: V1070 = EXP 0x2 0xa0
0xb78: V1071 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb79: V1072 = CALLER
0xb7a: V1073 = AND V1072 0xffffffffffffffffffffffffffffffffffffffff
0xb7b: V1074 = 0x0
0xb7f: M[0x0] = V1073
0xb80: V1075 = 0x16
0xb82: V1076 = 0x20
0xb84: M[0x20] = 0x16
0xb85: V1077 = 0x40
0xb88: V1078 = SHA3 0x0 0x40
0xb89: V1079 = S[V1078]
0xb8c: V1080 = LT V1079 V323
0xb8d: V1081 = ISZERO V1080
0xb8e: V1082 = 0xb97
0xb91: JUMPI 0xb97 V1081
---
Entry stack: [V12, 0x105, V321, V323]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V321, V323]

================================

Block 0xb92
[0xb92:0xb96]
---
Predecessors: [0xb70]
Successors: []
---
0xb92 PUSH1 0x0
0xb94 PUSH1 0x0
0xb96 REVERT
---
0xb92: V1083 = 0x0
0xb94: V1084 = 0x0
0xb96: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V321, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V321, V323]

================================

Block 0xb97
[0xb97:0xbb9]
---
Predecessors: [0xb70]
Successors: [0xbba, 0xbbf]
---
0xb97 JUMPDEST
0xb98 PUSH1 0x1
0xb9a PUSH1 0xa0
0xb9c PUSH1 0x2
0xb9e EXP
0xb9f SUB
0xba0 DUP3
0xba1 AND
0xba2 PUSH1 0x0
0xba4 SWAP1
0xba5 DUP2
0xba6 MSTORE
0xba7 PUSH1 0x16
0xba9 PUSH1 0x20
0xbab MSTORE
0xbac PUSH1 0x40
0xbae SWAP1
0xbaf SHA3
0xbb0 SLOAD
0xbb1 DUP2
0xbb2 DUP2
0xbb3 ADD
0xbb4 LT
0xbb5 ISZERO
0xbb6 PUSH2 0xbbf
0xbb9 JUMPI
---
0xb97: JUMPDEST 
0xb98: V1085 = 0x1
0xb9a: V1086 = 0xa0
0xb9c: V1087 = 0x2
0xb9e: V1088 = EXP 0x2 0xa0
0xb9f: V1089 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba1: V1090 = AND V321 0xffffffffffffffffffffffffffffffffffffffff
0xba2: V1091 = 0x0
0xba6: M[0x0] = V1090
0xba7: V1092 = 0x16
0xba9: V1093 = 0x20
0xbab: M[0x20] = 0x16
0xbac: V1094 = 0x40
0xbaf: V1095 = SHA3 0x0 0x40
0xbb0: V1096 = S[V1095]
0xbb3: V1097 = ADD V1096 V323
0xbb4: V1098 = LT V1097 V1096
0xbb5: V1099 = ISZERO V1098
0xbb6: V1100 = 0xbbf
0xbb9: JUMPI 0xbbf V1099
---
Entry stack: [V12, 0x105, V321, V323]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x105, V321, V323]

================================

Block 0xbba
[0xbba:0xbbe]
---
Predecessors: [0xb97]
Successors: []
---
0xbba PUSH1 0x0
0xbbc PUSH1 0x0
0xbbe REVERT
---
0xbba: V1101 = 0x0
0xbbc: V1102 = 0x0
0xbbe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V321, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V321, V323]

================================

Block 0xbbf
[0xbbf:0xc26]
---
Predecessors: [0xb97]
Successors: [0xc27]
---
0xbbf JUMPDEST
0xbc0 PUSH1 0x1
0xbc2 PUSH1 0xa0
0xbc4 PUSH1 0x2
0xbc6 EXP
0xbc7 SUB
0xbc8 CALLER
0xbc9 DUP2
0xbca AND
0xbcb PUSH1 0x0
0xbcd DUP2
0xbce DUP2
0xbcf MSTORE
0xbd0 PUSH1 0x16
0xbd2 PUSH1 0x20
0xbd4 SWAP1
0xbd5 DUP2
0xbd6 MSTORE
0xbd7 PUSH1 0x40
0xbd9 DUP1
0xbda DUP4
0xbdb SHA3
0xbdc DUP1
0xbdd SLOAD
0xbde DUP8
0xbdf SWAP1
0xbe0 SUB
0xbe1 SWAP1
0xbe2 SSTORE
0xbe3 SWAP4
0xbe4 DUP7
0xbe5 AND
0xbe6 DUP1
0xbe7 DUP4
0xbe8 MSTORE
0xbe9 SWAP2
0xbea DUP5
0xbeb SWAP1
0xbec SHA3
0xbed DUP1
0xbee SLOAD
0xbef DUP7
0xbf0 ADD
0xbf1 SWAP1
0xbf2 SSTORE
0xbf3 DUP4
0xbf4 MLOAD
0xbf5 DUP6
0xbf6 DUP2
0xbf7 MSTORE
0xbf8 SWAP4
0xbf9 MLOAD
0xbfa SWAP2
0xbfb SWAP4
0xbfc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc1d SWAP3
0xc1e SWAP1
0xc1f DUP2
0xc20 SWAP1
0xc21 SUB
0xc22 SWAP1
0xc23 SWAP2
0xc24 ADD
0xc25 SWAP1
0xc26 LOG3
---
0xbbf: JUMPDEST 
0xbc0: V1103 = 0x1
0xbc2: V1104 = 0xa0
0xbc4: V1105 = 0x2
0xbc6: V1106 = EXP 0x2 0xa0
0xbc7: V1107 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc8: V1108 = CALLER
0xbca: V1109 = AND 0xffffffffffffffffffffffffffffffffffffffff V1108
0xbcb: V1110 = 0x0
0xbcf: M[0x0] = V1109
0xbd0: V1111 = 0x16
0xbd2: V1112 = 0x20
0xbd6: M[0x20] = 0x16
0xbd7: V1113 = 0x40
0xbdb: V1114 = SHA3 0x0 0x40
0xbdd: V1115 = S[V1114]
0xbe0: V1116 = SUB V1115 V323
0xbe2: S[V1114] = V1116
0xbe5: V1117 = AND V321 0xffffffffffffffffffffffffffffffffffffffff
0xbe8: M[0x0] = V1117
0xbec: V1118 = SHA3 0x0 0x40
0xbee: V1119 = S[V1118]
0xbf0: V1120 = ADD V323 V1119
0xbf2: S[V1118] = V1120
0xbf4: V1121 = M[0x40]
0xbf7: M[V1121] = V323
0xbf9: V1122 = M[0x40]
0xbfc: V1123 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc21: V1124 = SUB V1121 V1122
0xc24: V1125 = ADD 0x20 V1124
0xc26: LOG V1122 V1125 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1109 V1117
---
Entry stack: [V12, 0x105, V321, V323]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x105, V321, V323]

================================

Block 0xc27
[0xc27:0xc2a]
---
Predecessors: [0xbbf]
Successors: [0x105]
---
0xc27 JUMPDEST
0xc28 POP
0xc29 POP
0xc2a JUMP
---
0xc27: JUMPDEST 
0xc2a: JUMP 0x105
---
Entry stack: [V12, 0x105, V321, V323]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xc2b
[0xc2b:0xc30]
---
Predecessors: [0x3e4]
Successors: [0x1c5]
---
0xc2b JUMPDEST
0xc2c PUSH1 0x4
0xc2e SLOAD
0xc2f DUP2
0xc30 JUMP
---
0xc2b: JUMPDEST 
0xc2c: V1126 = 0x4
0xc2e: V1127 = S[0x4]
0xc30: JUMP 0x1c5
---
Entry stack: [V12, 0x1c5]
Stack pops: 1
Stack additions: [S0, V1127]
Exit stack: [V12, 0x1c5, V1127]

================================

Block 0xc31
[0xc31:0xc44]
---
Predecessors: [0x406]
Successors: [0x40e]
---
0xc31 JUMPDEST
0xc32 PUSH1 0x14
0xc34 SLOAD
0xc35 PUSH2 0x100
0xc38 SWAP1
0xc39 DIV
0xc3a PUSH1 0x1
0xc3c PUSH1 0xa0
0xc3e PUSH1 0x2
0xc40 EXP
0xc41 SUB
0xc42 AND
0xc43 DUP2
0xc44 JUMP
---
0xc31: JUMPDEST 
0xc32: V1128 = 0x14
0xc34: V1129 = S[0x14]
0xc35: V1130 = 0x100
0xc39: V1131 = DIV V1129 0x100
0xc3a: V1132 = 0x1
0xc3c: V1133 = 0xa0
0xc3e: V1134 = 0x2
0xc40: V1135 = EXP 0x2 0xa0
0xc41: V1136 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc42: V1137 = AND 0xffffffffffffffffffffffffffffffffffffffff V1131
0xc44: JUMP 0x40e
---
Entry stack: [V12, 0x40e]
Stack pops: 1
Stack additions: [S0, V1137]
Exit stack: [V12, 0x40e, V1137]

================================

Block 0xc45
[0xc45:0xc57]
---
Predecessors: [0xa70]
Successors: [0xc58, 0xc5d]
---
0xc45 JUMPDEST
0xc46 PUSH1 0x0
0xc48 DUP3
0xc49 DUP3
0xc4a ADD
0xc4b PUSH2 0xc62
0xc4e DUP5
0xc4f DUP3
0xc50 LT
0xc51 DUP1
0xc52 ISZERO
0xc53 SWAP1
0xc54 PUSH2 0xc5d
0xc57 JUMPI
---
0xc45: JUMPDEST 
0xc46: V1138 = 0x0
0xc4a: V1139 = ADD V973 V972
0xc4b: V1140 = 0xc62
0xc50: V1141 = LT V1139 V972
0xc52: V1142 = ISZERO V1141
0xc54: V1143 = 0xc5d
0xc57: JUMPI 0xc5d V1141
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1139, 0xc62, V1142]
Exit stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, V1142]

================================

Block 0xc58
[0xc58:0xc5c]
---
Predecessors: [0xc45]
Successors: [0xc5d]
---
0xc58 POP
0xc59 DUP4
0xc5a DUP3
0xc5b LT
0xc5c ISZERO
---
0xc5b: V1144 = LT V1139 V973
0xc5c: V1145 = ISZERO V1144
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, V1142]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V1145]
Exit stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, V1145]

================================

Block 0xc5d
[0xc5d:0xc61]
---
Predecessors: [0xc45, 0xc58]
Successors: [0xc6d]
---
0xc5d JUMPDEST
0xc5e PUSH2 0xc6d
0xc61 JUMP
---
0xc5d: JUMPDEST 
0xc5e: V1146 = 0xc6d
0xc61: JUMP 0xc6d
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]

================================

Block 0xc62
[0xc62:0xc65]
---
Predecessors: [0xc7b]
Successors: [0xc66]
---
0xc62 JUMPDEST
0xc63 DUP1
0xc64 SWAP2
0xc65 POP
---
0xc62: JUMPDEST 
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x105, 0xa7c, V972, V973, V1139, V1139]

================================

Block 0xc66
[0xc66:0xc6c]
---
Predecessors: [0xc62]
Successors: [0xa7c]
---
0xc66 JUMPDEST
0xc67 POP
0xc68 SWAP3
0xc69 SWAP2
0xc6a POP
0xc6b POP
0xc6c JUMP
---
0xc66: JUMPDEST 
0xc6c: JUMP 0xa7c
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973, V1139, V1139]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x105, V1139]

================================

Block 0xc6d
[0xc6d:0xc74]
---
Predecessors: [0xc5d]
Successors: [0xc75, 0xc7a]
---
0xc6d JUMPDEST
0xc6e DUP1
0xc6f ISZERO
0xc70 ISZERO
0xc71 PUSH2 0xc7a
0xc74 JUMPI
---
0xc6d: JUMPDEST 
0xc6f: V1147 = ISZERO S0
0xc70: V1148 = ISZERO V1147
0xc71: V1149 = 0xc7a
0xc74: JUMPI 0xc7a V1148
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]

================================

Block 0xc75
[0xc75:0xc79]
---
Predecessors: [0xc6d]
Successors: []
---
0xc75 PUSH1 0x0
0xc77 PUSH1 0x0
0xc79 REVERT
---
0xc75: V1150 = 0x0
0xc77: V1151 = 0x0
0xc79: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]

================================

Block 0xc7a
[0xc7a:0xc7a]
---
Predecessors: [0xc6d]
Successors: [0xc7b]
---
0xc7a JUMPDEST
---
0xc7a: JUMPDEST 
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]

================================

Block 0xc7b
[0xc7b:0xc7d]
---
Predecessors: [0xc7a]
Successors: [0xc62]
---
0xc7b JUMPDEST
0xc7c POP
0xc7d JUMP
---
0xc7b: JUMPDEST 
0xc7d: JUMP 0xc62
---
Entry stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139, 0xc62, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x105, 0xa7c, V972, V973, 0x0, V1139]

================================

Block 0xc7e
[0xc7e:0xca9]
---
Predecessors: []
Successors: []
---
0xc7e STOP
0xc7f LOG1
0xc80 PUSH6 0x627a7a723058
0xc87 SHA3
0xc88 MISSING 0xb1
0xc89 PUSH27 0x95ea325639eecb9dc28653dc877818d7d223f8b009e36a3361f72b
0xca5 SWAP1
0xca6 MISSING 0xca
0xca7 MISSING 0xb4
0xca8 STOP
0xca9 MISSING 0x29
---
0xc7e: STOP 
0xc7f: LOG S0 S1 S2
0xc80: V1152 = 0x627a7a723058
0xc87: V1153 = SHA3 0x627a7a723058 S3
0xc88: MISSING 0xb1
0xc89: V1154 = 0x95ea325639eecb9dc28653dc877818d7d223f8b009e36a3361f72b
0xca6: MISSING 0xca
0xca7: MISSING 0xb4
0xca8: STOP 
0xca9: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1153, S0, 0x95ea325639eecb9dc28653dc877818d7d223f8b009e36a3361f72b]
Exit stack: []

================================

Function 0:
Public function signature: 0x2f58015
Entry block: 0x107
Exit block: 0x703
Body: 0x102, 0x103, 0x105, 0x107, 0x10e, 0x10f, 0x5b2, 0x5be, 0x5c2, 0x5ce, 0x5d3, 0x65f, 0x660, 0x66d, 0x66e, 0x687, 0x6b3, 0x6b9, 0x6d7, 0x703

Function 1:
Public function signature: 0x6fdde03
Entry block: 0x119
Exit block: 0x19b
Body: 0x119, 0x120, 0x121, 0x129, 0x14f, 0x15d, 0x16f, 0x182, 0x19b, 0x709, 0x749, 0x751, 0x764, 0x772, 0x786, 0x78f

Function 2:
Public function signature: 0x27e235e3
Entry block: 0x1a9
Exit block: 0x1c5
Body: 0x1a9, 0x1b0, 0x1b1, 0x1c5, 0x797

Function 3:
Public function signature: 0x313ce567
Entry block: 0x1d7
Exit block: 0x1e7
Body: 0x1d7, 0x1de, 0x1df, 0x1e7, 0x7a9

Function 4:
Public function signature: 0x3ccfd60b
Entry block: 0x1fd
Exit block: 0x105
Body: 0x105, 0x1fd, 0x204, 0x205

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x20f
Exit block: 0x9ad
Body: 0x20f, 0x216, 0x217, 0x991, 0x9a8, 0x9ad

Function 6:
Public function signature: 0x434f5f27
Entry block: 0x221
Exit block: 0x23d
Body: 0x221, 0x228, 0x229, 0x23d, 0x9be

Function 7:
Public function signature: 0x5259347d
Entry block: 0x251
Exit block: 0x105
Body: 0x105, 0x251

Function 8:
Public function signature: 0x62f5ed61
Entry block: 0x25b
Exit block: 0x105
Body: 0x105, 0x25b, 0x9d3, 0x9ea, 0x9ef, 0x9fb, 0xa00, 0xa0c, 0xa11, 0xa1a

Function 9:
Public function signature: 0x6360fc3f
Entry block: 0x265
Exit block: 0x23d
Body: 0x23d, 0x265, 0x26c, 0x26d, 0xa1c

Function 10:
Public function signature: 0x70144f8f
Entry block: 0x289
Exit block: 0x105
Body: 0x105, 0x289, 0x290, 0x291, 0xa25, 0xa3c, 0xa41, 0xa4f

Function 11:
Public function signature: 0x70a08231
Entry block: 0x29b
Exit block: 0x1c5
Body: 0x1c5, 0x29b, 0x2a2, 0x2a3, 0xa51

Function 12:
Public function signature: 0x87612102
Entry block: 0x2c9
Exit block: 0x105
Body: 0x105, 0x2c9, 0xa63, 0xa6b, 0xa70, 0xa7c, 0xa80, 0xc45, 0xc58, 0xc5d, 0xc62, 0xc66, 0xc6d, 0xc75, 0xc7a, 0xc7b

Function 13:
Public function signature: 0x943dfef1
Entry block: 0x2d3
Exit block: 0x1c5
Body: 0x1c5, 0x2d3, 0x2da, 0x2db, 0xa82

Function 14:
Public function signature: 0x95d89b41
Entry block: 0x2f5
Exit block: 0x19b
Body: 0x129, 0x14f, 0x15d, 0x16f, 0x182, 0x19b, 0x2f5, 0x2fc, 0x2fd, 0x764, 0x772, 0x786, 0x78f, 0xa88, 0xac8, 0xad0

Function 15:
Public function signature: 0xa089feea
Entry block: 0x385
Exit block: 0x23d
Body: 0x23d, 0x385, 0x38c, 0x38d, 0xb16

Function 16:
Public function signature: 0xa0ef91df
Entry block: 0x3a9
Exit block: 0x105
Body: 0x102, 0x103, 0x105, 0x3a9, 0x3b0, 0x3b1, 0xb1f, 0xb36, 0xb3b, 0xb6b

Function 17:
Public function signature: 0xa9059cbb
Entry block: 0x3bb
Exit block: 0x105
Body: 0x105, 0x3bb, 0x3c2, 0x3c3, 0xb70, 0xb92, 0xb97, 0xbba, 0xbbf, 0xc27

Function 18:
Public function signature: 0xc3dac9a1
Entry block: 0x3dc
Exit block: 0x1c5
Body: 0x1c5, 0x3dc, 0x3e3, 0x3e4, 0xc2b

Function 19:
Public function signature: 0xfc0c546a
Entry block: 0x3fe
Exit block: 0x40e
Body: 0x3fe, 0x405, 0x406, 0x40e, 0xc31

Function 20:
Public fallback function
Entry block: 0xf6
Exit block: 0x105
Body: 0xf6, 0xfa, 0x102, 0x103, 0x105

Function 21:
Private function
Entry block: 0x7b2
Exit block: 0x98c
Body: 0x7b2, 0x7c6, 0x807, 0x80c, 0x845, 0x848, 0x8cb, 0x8d9, 0x8ed, 0x8ee, 0x968, 0x976, 0x98a, 0x98b, 0x98c

Function 22:
Private function
Entry block: 0x42a
Exit block: 0x5b0
Body: 0x42a, 0x439, 0x444, 0x49e, 0x4ac, 0x511, 0x51f, 0x535, 0x560, 0x568, 0x569, 0x56e, 0x57f, 0x590, 0x5af, 0x5b0

