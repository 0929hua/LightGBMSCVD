Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3f
0xa: JUMPI 0x3f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xce]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xa4592aa2
0x3a EQ
0x3b PUSH2 0xce
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xa4592aa2
0x3a: V12 = EQ 0xa4592aa2 V10
0x3b: V13 = 0xce
0x3e: JUMPI 0xce V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x42]
---
Predecessors: [0x0, 0xb]
Successors: [0x43]
---
0x3f JUMPDEST
0x40 PUSH2 0xcc
---
0x3f: JUMPDEST 
0x40: V14 = 0xcc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcc]
Exit stack: [V10, 0xcc]

================================

Block 0x43
[0x43:0x4c]
---
Predecessors: [0x3f]
Successors: [0x4d, 0xc9]
---
0x43 JUMPDEST
0x44 PUSH1 0x0
0x46 CALLVALUE
0x47 GT
0x48 ISZERO
0x49 PUSH2 0xc9
0x4c JUMPI
---
0x43: JUMPDEST 
0x44: V15 = 0x0
0x46: V16 = CALLVALUE
0x47: V17 = GT V16 0x0
0x48: V18 = ISZERO V17
0x49: V19 = 0xc9
0x4c: JUMPI 0xc9 V18
---
Entry stack: [V10, 0xcc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc]

================================

Block 0x4d
[0x4d:0xc3]
---
Predecessors: [0x43]
Successors: [0xc4, 0xc8]
---
0x4d PUSH1 0x0
0x4f PUSH1 0x0
0x51 SWAP1
0x52 SLOAD
0x53 SWAP1
0x54 PUSH2 0x100
0x57 EXP
0x58 SWAP1
0x59 DIV
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 PUSH2 0x8fc
0x89 ADDRESS
0x8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f AND
0xa0 BALANCE
0xa1 SWAP1
0xa2 DUP2
0xa3 ISZERO
0xa4 MUL
0xa5 SWAP1
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP1
0xab POP
0xac PUSH1 0x0
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 DUP1
0xb2 DUP4
0xb3 SUB
0xb4 DUP2
0xb5 DUP6
0xb6 DUP9
0xb7 DUP9
0xb8 CALL
0xb9 SWAP4
0xba POP
0xbb POP
0xbc POP
0xbd POP
0xbe ISZERO
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0x4d: V20 = 0x0
0x4f: V21 = 0x0
0x52: V22 = S[0x0]
0x54: V23 = 0x100
0x57: V24 = EXP 0x100 0x0
0x59: V25 = DIV V22 0x1
0x5a: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x70: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x86: V30 = 0x8fc
0x89: V31 = ADDRESS
0x8a: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xa0: V34 = BALANCE V33
0xa3: V35 = ISZERO V34
0xa4: V36 = MUL V35 0x8fc
0xa6: V37 = 0x40
0xa8: V38 = M[0x40]
0xac: V39 = 0x0
0xae: V40 = 0x40
0xb0: V41 = M[0x40]
0xb3: V42 = SUB V38 V41
0xb8: V43 = CALL V36 V29 V34 V41 V42 V41 0x0
0xbe: V44 = ISZERO V43
0xbf: V45 = ISZERO V44
0xc0: V46 = 0xc8
0xc3: JUMPI 0xc8 V45
---
Entry stack: [V10, 0xcc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0x4d]
Successors: []
---
0xc4 PUSH2 0x0
0xc7 JUMP
---
0xc4: V47 = 0x0
0xc7: THROW 
---
Entry stack: [V10, 0xcc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc]

================================

Block 0xc8
[0xc8:0xc8]
---
Predecessors: [0x4d]
Successors: [0xc9]
---
0xc8 JUMPDEST
---
0xc8: JUMPDEST 
---
Entry stack: [V10, 0xcc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc]

================================

Block 0xc9
[0xc9:0xc9]
---
Predecessors: [0x43, 0xc8]
Successors: [0xca]
---
0xc9 JUMPDEST
---
0xc9: JUMPDEST 
---
Entry stack: [V10, 0xcc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc]

================================

Block 0xca
[0xca:0xcb]
---
Predecessors: [0xc9]
Successors: [0xcc]
---
0xca JUMPDEST
0xcb JUMP
---
0xca: JUMPDEST 
0xcb: JUMP 0xcc
---
Entry stack: [V10, 0xcc]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: [0xca]
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0xb]
Successors: [0xd5, 0xd6]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd6
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V48 = CALLVALUE
0xd0: V49 = ISZERO V48
0xd1: V50 = 0xd6
0xd4: JUMPI 0xd6 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd5
[0xd5:0xd5]
---
Predecessors: [0xce]
Successors: []
---
0xd5 INVALID
---
0xd5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0xce]
Successors: [0x120]
---
0xd6 JUMPDEST
0xd7 PUSH2 0xde
0xda PUSH2 0x120
0xdd JUMP
---
0xd6: JUMPDEST 
0xd7: V51 = 0xde
0xda: V52 = 0x120
0xdd: JUMP 0x120
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V10, 0xde]

================================

Block 0xde
[0xde:0x11f]
---
Predecessors: [0x120]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 DUP1
0xe3 DUP3
0xe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9 AND
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 SWAP2
0x116 POP
0x117 POP
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0xde: JUMPDEST 
0xdf: V53 = 0x40
0xe1: V54 = M[0x40]
0xe4: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0xfa: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x111: M[V54] = V58
0x112: V59 = 0x20
0x114: V60 = ADD 0x20 V54
0x118: V61 = 0x40
0x11a: V62 = M[0x40]
0x11d: V63 = SUB V60 V62
0x11f: RETURN V62 V63
---
Entry stack: [V10, 0xde, V71]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xde]

================================

Block 0x120
[0x120:0x145]
---
Predecessors: [0xd6]
Successors: [0xde]
---
0x120 JUMPDEST
0x121 PUSH1 0x0
0x123 PUSH1 0x0
0x125 SWAP1
0x126 SLOAD
0x127 SWAP1
0x128 PUSH2 0x100
0x12b EXP
0x12c SWAP1
0x12d DIV
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 DUP2
0x145 JUMP
---
0x120: JUMPDEST 
0x121: V64 = 0x0
0x123: V65 = 0x0
0x126: V66 = S[0x0]
0x128: V67 = 0x100
0x12b: V68 = EXP 0x100 0x0
0x12d: V69 = DIV V66 0x1
0x12e: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x145: JUMP 0xde
---
Entry stack: [V10, 0xde]
Stack pops: 1
Stack additions: [S0, V71]
Exit stack: [V10, 0xde, V71]

================================

Block 0x146
[0x146:0x18a]
---
Predecessors: []
Successors: []
---
0x146 STOP
0x147 LOG1
0x148 PUSH6 0x627a7a723058
0x14f SHA3
0x150 MISSING 0xc2
0x151 MISSING 0xbb
0x152 MISSING 0xc0
0x153 MISSING 0xd3
0x154 MISSING 0xac
0x155 SWAP6
0x156 MISSING 0x5e
0x157 MISSING 0xfc
0x158 SUB
0x159 MISSING 0xca
0x15a DUP8
0x15b MISSING 0x25
0x15c CALLVALUE
0x15d PUSH13 0x5ef4955ce4cf196720507afc90
0x16b MISSING 0xef
0x16c LOG0
0x16d LOG3
0x16e XOR
0x16f PUSH27 0x29
---
0x146: STOP 
0x147: LOG S0 S1 S2
0x148: V72 = 0x627a7a723058
0x14f: V73 = SHA3 0x627a7a723058 S3
0x150: MISSING 0xc2
0x151: MISSING 0xbb
0x152: MISSING 0xc0
0x153: MISSING 0xd3
0x154: MISSING 0xac
0x156: MISSING 0x5e
0x157: MISSING 0xfc
0x158: V74 = SUB S0 S1
0x159: MISSING 0xca
0x15b: MISSING 0x25
0x15c: V75 = CALLVALUE
0x15d: V76 = 0x5ef4955ce4cf196720507afc90
0x16b: MISSING 0xef
0x16c: LOG S0 S1
0x16d: LOG S2 S3 S4 S5 S6
0x16e: V77 = XOR S7 S8
0x16f: V78 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V73, S6, S1, S2, S3, S4, S5, S0, V74, S7, S0, S1, S2, S3, S4, S5, S6, S7, 0x5ef4955ce4cf196720507afc90, V75, 0x29, V77]
Exit stack: []

================================

Function 0:
Public function signature: 0xa4592aa2
Entry block: 0xce
Exit block: 0xde
Body: 0xce, 0xd5, 0xd6, 0xde, 0x120

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0xcc
Body: 0x3f, 0x43, 0x4d, 0xc4, 0xc8, 0xc9, 0xca, 0xcc

