Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x66]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x41b0a3ed
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x66
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x41b0a3ed
0x3b: V13 = EQ V11 0x41b0a3ed
0x3c: V14 = 0x66
0x3f: JUMPI 0x66 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xdb]
---
0x40 DUP1
0x41 PUSH4 0x7cadfa34
0x46 EQ
0x47 PUSH2 0xdb
0x4a JUMPI
---
0x41: V15 = 0x7cadfa34
0x46: V16 = EQ 0x7cadfa34 V11
0x47: V17 = 0xdb
0x4a: JUMPI 0xdb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xe5]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0xe5
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0xe5
0x55: JUMPI 0xe5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xfa]
---
0x56 DUP1
0x57 PUSH4 0xbe9a6555
0x5c EQ
0x5d PUSH2 0xfa
0x60 JUMPI
---
0x57: V21 = 0xbe9a6555
0x5c: V22 = EQ 0xbe9a6555 V11
0x5d: V23 = 0xfa
0x60: JUMPI 0xfa V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x65]
---
Predecessors: [0x0, 0x56]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0xbe]
---
Predecessors: [0xd]
Successors: [0x102]
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 DUP1
0x6a MLOAD
0x6b PUSH1 0x20
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATALOAD
0x71 DUP1
0x72 DUP3
0x73 ADD
0x74 CALLDATALOAD
0x75 DUP4
0x76 DUP2
0x77 MUL
0x78 DUP1
0x79 DUP7
0x7a ADD
0x7b DUP6
0x7c ADD
0x7d SWAP1
0x7e SWAP7
0x7f MSTORE
0x80 DUP1
0x81 DUP6
0x82 MSTORE
0x83 PUSH2 0xbf
0x86 SWAP6
0x87 CALLDATASIZE
0x88 SWAP6
0x89 SWAP4
0x8a SWAP5
0x8b PUSH1 0x24
0x8d SWAP5
0x8e SWAP4
0x8f DUP6
0x90 ADD
0x91 SWAP3
0x92 SWAP2
0x93 DUP3
0x94 SWAP2
0x95 DUP6
0x96 ADD
0x97 SWAP1
0x98 DUP5
0x99 SWAP1
0x9a DUP1
0x9b DUP3
0x9c DUP5
0x9d CALLDATACOPY
0x9e POP
0x9f SWAP5
0xa0 SWAP8
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 DUP4
0xa5 CALLDATALOAD
0xa6 PUSH1 0xff
0xa8 AND
0xa9 SWAP5
0xaa POP
0xab POP
0xac POP
0xad POP
0xae PUSH1 0x20
0xb0 ADD
0xb1 CALLDATALOAD
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 PUSH1 0x2
0xb8 EXP
0xb9 SUB
0xba AND
0xbb PUSH2 0x102
0xbe JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x6a: V26 = M[0x40]
0x6b: V27 = 0x20
0x6d: V28 = 0x4
0x70: V29 = CALLDATALOAD 0x4
0x73: V30 = ADD 0x4 V29
0x74: V31 = CALLDATALOAD V30
0x77: V32 = MUL V31 0x20
0x7a: V33 = ADD V26 V32
0x7c: V34 = ADD 0x20 V33
0x7f: M[0x40] = V34
0x82: M[V26] = V31
0x83: V35 = 0xbf
0x87: V36 = CALLDATASIZE
0x8b: V37 = 0x24
0x90: V38 = ADD 0x24 V29
0x96: V39 = ADD V26 0x20
0x9d: CALLDATACOPY V39 V38 V32
0xa5: V40 = CALLDATALOAD 0x24
0xa6: V41 = 0xff
0xa8: V42 = AND 0xff V40
0xae: V43 = 0x20
0xb0: V44 = ADD 0x20 0x24
0xb1: V45 = CALLDATALOAD 0x44
0xb2: V46 = 0x1
0xb4: V47 = 0xa0
0xb6: V48 = 0x2
0xb8: V49 = EXP 0x2 0xa0
0xb9: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xbb: V52 = 0x102
0xbe: JUMP 0x102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbf, V26, V42, V51]
Exit stack: [V11, 0xbf, V26, V42, V51]

================================

Block 0xbf
[0xbf:0xda]
---
Predecessors: [0x18b, 0x2ea]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x40
0xc2 DUP1
0xc3 MLOAD
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc SWAP1
0xcd SWAP3
0xce AND
0xcf DUP3
0xd0 MSTORE
0xd1 MLOAD
0xd2 SWAP1
0xd3 DUP2
0xd4 SWAP1
0xd5 SUB
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda RETURN
---
0xbf: JUMPDEST 
0xc0: V53 = 0x40
0xc3: V54 = M[0x40]
0xc4: V55 = 0x1
0xc6: V56 = 0xa0
0xc8: V57 = 0x2
0xca: V58 = EXP 0x2 0xa0
0xcb: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V60 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd0: M[V54] = V60
0xd1: V61 = M[0x40]
0xd5: V62 = SUB V54 V61
0xd6: V63 = 0x20
0xd8: V64 = ADD 0x20 V62
0xda: RETURN V61 V64
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0x40]
Successors: [0x195]
---
0xdb JUMPDEST
0xdc PUSH2 0xe3
0xdf PUSH2 0x195
0xe2 JUMP
---
0xdb: JUMPDEST 
0xdc: V65 = 0xe3
0xdf: V66 = 0x195
0xe2: JUMP 0x195
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V11, 0xe3]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: [0x2e7]
Successors: []
---
0xe3 JUMPDEST
0xe4 STOP
---
0xe3: JUMPDEST 
0xe4: STOP 
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0x4b]
Successors: [0xed, 0xf1]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 DUP1
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe5: JUMPDEST 
0xe6: V67 = CALLVALUE
0xe8: V68 = ISZERO V67
0xe9: V69 = 0xf1
0xec: JUMPI 0xf1 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe5]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V70 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0xf1
[0xf1:0xf9]
---
Predecessors: [0xe5]
Successors: [0x2ea]
---
0xf1 JUMPDEST
0xf2 POP
0xf3 PUSH2 0xbf
0xf6 PUSH2 0x2ea
0xf9 JUMP
---
0xf1: JUMPDEST 
0xf3: V71 = 0xbf
0xf6: V72 = 0x2ea
0xf9: JUMP 0x2ea
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V11, 0xbf]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x56]
Successors: [0x2f9]
---
0xfa JUMPDEST
0xfb PUSH2 0xe3
0xfe PUSH2 0x2f9
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V73 = 0xe3
0xfe: V74 = 0x2f9
0x101: JUMP 0x2f9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V11, 0xe3]

================================

Block 0x102
[0x102:0x10f]
---
Predecessors: [0x66]
Successors: [0x8c6]
---
0x102 JUMPDEST
0x103 PUSH1 0x0
0x105 CALLVALUE
0x106 DUP5
0x107 DUP5
0x108 DUP5
0x109 PUSH2 0x110
0x10c PUSH2 0x8c6
0x10f JUMP
---
0x102: JUMPDEST 
0x103: V75 = 0x0
0x105: V76 = CALLVALUE
0x109: V77 = 0x110
0x10c: V78 = 0x8c6
0x10f: JUMP 0x8c6
---
Entry stack: [V11, 0xbf, V26, V42, V51]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V76, S2, S1, S0, 0x110]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, 0x110]

================================

Block 0x110
[0x110:0x14a]
---
Predecessors: [0x8c6]
Successors: [0x14b]
---
0x110 JUMPDEST
0x111 PUSH1 0xff
0x113 DUP4
0x114 AND
0x115 PUSH1 0x20
0x117 DUP1
0x118 DUP4
0x119 ADD
0x11a SWAP2
0x11b SWAP1
0x11c SWAP2
0x11d MSTORE
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 DUP4
0x127 AND
0x128 PUSH1 0x40
0x12a DUP4
0x12b ADD
0x12c MSTORE
0x12d PUSH1 0x60
0x12f DUP1
0x130 DUP4
0x131 MSTORE
0x132 DUP6
0x133 MLOAD
0x134 SWAP1
0x135 DUP4
0x136 ADD
0x137 MSTORE
0x138 DUP5
0x139 MLOAD
0x13a DUP3
0x13b SWAP2
0x13c PUSH1 0x80
0x13e DUP4
0x13f ADD
0x140 SWAP2
0x141 DUP8
0x142 DUP3
0x143 ADD
0x144 SWAP2
0x145 MUL
0x146 DUP1
0x147 DUP4
0x148 DUP4
0x149 PUSH1 0x0
---
0x110: JUMPDEST 
0x111: V79 = 0xff
0x114: V80 = AND S2 0xff
0x115: V81 = 0x20
0x119: V82 = ADD V696 0x20
0x11d: M[V82] = V80
0x11e: V83 = 0x1
0x120: V84 = 0xa0
0x122: V85 = 0x2
0x124: V86 = EXP 0x2 0xa0
0x125: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V88 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x128: V89 = 0x40
0x12b: V90 = ADD V696 0x40
0x12c: M[V90] = V88
0x12d: V91 = 0x60
0x131: M[V696] = 0x60
0x133: V92 = M[S3]
0x136: V93 = ADD V696 0x60
0x137: M[V93] = V92
0x139: V94 = M[S3]
0x13c: V95 = 0x80
0x13f: V96 = ADD V696 0x80
0x143: V97 = ADD 0x20 S3
0x145: V98 = MUL 0x20 V94
0x149: V99 = 0x0
---
Entry stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ce}, S4, S3, S2, S1, V696]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S0, V96, V97, V98, V98, V96, V97, 0x0]
Exit stack: [S10, 0xbf, S8, S7, S6, 0x0, S4, S3, S2, S1, S0, S0, V96, V97, V98, V98, V96, V97, 0x0]

================================

Block 0x14b
[0x14b:0x153]
---
Predecessors: [0x110, 0x154]
Successors: [0x154, 0x163]
---
0x14b JUMPDEST
0x14c DUP4
0x14d DUP2
0x14e LT
0x14f ISZERO
0x150 PUSH2 0x163
0x153 JUMPI
---
0x14b: JUMPDEST 
0x14e: V100 = LT S0 V98
0x14f: V101 = ISZERO V100
0x150: V102 = 0x163
0x153: JUMPI 0x163 V101
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V696, V696, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V696, V696, V96, V97, V98, V98, V96, V97, S0]

================================

Block 0x154
[0x154:0x162]
---
Predecessors: [0x14b]
Successors: [0x14b]
---
0x154 DUP2
0x155 DUP2
0x156 ADD
0x157 MLOAD
0x158 DUP4
0x159 DUP3
0x15a ADD
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f PUSH2 0x14b
0x162 JUMP
---
0x156: V103 = ADD S0 V97
0x157: V104 = M[V103]
0x15a: V105 = ADD S0 V96
0x15b: M[V105] = V104
0x15c: V106 = 0x20
0x15e: V107 = ADD 0x20 S0
0x15f: V108 = 0x14b
0x162: JUMP 0x14b
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V696, V696, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 3
Stack additions: [S2, S1, V107]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V696, V696, V96, V97, V98, V98, V96, V97, V107]

================================

Block 0x163
[0x163:0x181]
---
Predecessors: [0x14b]
Successors: [0x182, 0x18b]
---
0x163 JUMPDEST
0x164 POP
0x165 POP
0x166 POP
0x167 POP
0x168 SWAP1
0x169 POP
0x16a ADD
0x16b SWAP5
0x16c POP
0x16d POP
0x16e POP
0x16f POP
0x170 POP
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP1
0x175 SWAP2
0x176 SUB
0x177 SWAP1
0x178 DUP3
0x179 CREATE
0x17a DUP1
0x17b ISZERO
0x17c DUP1
0x17d ISZERO
0x17e PUSH2 0x18b
0x181 JUMPI
---
0x163: JUMPDEST 
0x16a: V109 = ADD V98 V96
0x171: V110 = 0x40
0x173: V111 = M[0x40]
0x176: V112 = SUB V109 V111
0x179: V113 = CREATE V76 V111 V112
0x17b: V114 = ISZERO V113
0x17d: V115 = ISZERO V114
0x17e: V116 = 0x18b
0x181: JUMPI 0x18b V115
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V26, V42, V51, V696, V696, V96, V97, V98, V98, V96, V97, S0]
Stack pops: 13
Stack additions: [S12, V113, V114]
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]

================================

Block 0x182
[0x182:0x18a]
---
Predecessors: [0x163]
Successors: []
---
0x182 RETURNDATASIZE
0x183 PUSH1 0x0
0x185 DUP1
0x186 RETURNDATACOPY
0x187 RETURNDATASIZE
0x188 PUSH1 0x0
0x18a REVERT
---
0x182: V117 = RETURNDATASIZE
0x183: V118 = 0x0
0x186: RETURNDATACOPY 0x0 0x0 V117
0x187: V119 = RETURNDATASIZE
0x188: V120 = 0x0
0x18a: REVERT 0x0 V119
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]

================================

Block 0x18b
[0x18b:0x194]
---
Predecessors: [0x163]
Successors: [0xbf]
---
0x18b JUMPDEST
0x18c POP
0x18d SWAP6
0x18e SWAP5
0x18f POP
0x190 POP
0x191 POP
0x192 POP
0x193 POP
0x194 JUMP
---
0x18b: JUMPDEST 
0x194: JUMP 0xbf
---
Entry stack: [V11, 0xbf, V26, V42, V51, 0x0, V76, V113, V114]
Stack pops: 8
Stack additions: [S1]
Exit stack: [V11, V113]

================================

Block 0x195
[0x195:0x1fd]
---
Predecessors: [0xdb]
Successors: [0x1fe, 0x202]
---
0x195 JUMPDEST
0x196 PUSH1 0x1
0x198 SLOAD
0x199 PUSH1 0x40
0x19b DUP1
0x19c MLOAD
0x19d PUSH32 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1be DUP2
0x1bf MSTORE
0x1c0 ORIGIN
0x1c1 PUSH1 0x4
0x1c3 DUP3
0x1c4 ADD
0x1c5 MSTORE
0x1c6 PUSH1 0x2
0x1c8 PUSH1 0x24
0x1ca DUP3
0x1cb ADD
0x1cc MSTORE
0x1cd SWAP1
0x1ce MLOAD
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 SWAP1
0x1d8 SWAP3
0x1d9 AND
0x1da SWAP2
0x1db PUSH4 0x98a0871d
0x1e0 SWAP2
0x1e1 CALLVALUE
0x1e2 SWAP2
0x1e3 PUSH1 0x44
0x1e5 DUP1
0x1e6 DUP4
0x1e7 ADD
0x1e8 SWAP3
0x1e9 PUSH1 0x0
0x1eb SWAP3
0x1ec SWAP2
0x1ed SWAP1
0x1ee DUP3
0x1ef SWAP1
0x1f0 SUB
0x1f1 ADD
0x1f2 DUP2
0x1f3 DUP6
0x1f4 DUP9
0x1f5 DUP1
0x1f6 EXTCODESIZE
0x1f7 ISZERO
0x1f8 DUP1
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x195: JUMPDEST 
0x196: V121 = 0x1
0x198: V122 = S[0x1]
0x199: V123 = 0x40
0x19c: V124 = M[0x40]
0x19d: V125 = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1bf: M[V124] = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x1c0: V126 = ORIGIN
0x1c1: V127 = 0x4
0x1c4: V128 = ADD V124 0x4
0x1c5: M[V128] = V126
0x1c6: V129 = 0x2
0x1c8: V130 = 0x24
0x1cb: V131 = ADD V124 0x24
0x1cc: M[V131] = 0x2
0x1ce: V132 = M[0x40]
0x1cf: V133 = 0x1
0x1d1: V134 = 0xa0
0x1d3: V135 = 0x2
0x1d5: V136 = EXP 0x2 0xa0
0x1d6: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V138 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V139 = 0x98a0871d
0x1e1: V140 = CALLVALUE
0x1e3: V141 = 0x44
0x1e7: V142 = ADD V124 0x44
0x1e9: V143 = 0x0
0x1f0: V144 = SUB V124 V132
0x1f1: V145 = ADD V144 0x44
0x1f6: V146 = EXTCODESIZE V138
0x1f7: V147 = ISZERO V146
0x1f9: V148 = ISZERO V147
0x1fa: V149 = 0x202
0x1fd: JUMPI 0x202 V148
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x195]
Successors: []
---
0x1fe PUSH1 0x0
0x200 DUP1
0x201 REVERT
---
0x1fe: V150 = 0x0
0x201: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]

================================

Block 0x202
[0x202:0x20c]
---
Predecessors: [0x195]
Successors: [0x20d, 0x216]
---
0x202 JUMPDEST
0x203 POP
0x204 GAS
0x205 CALL
0x206 ISZERO
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x216
0x20c JUMPI
---
0x202: JUMPDEST 
0x204: V151 = GAS
0x205: V152 = CALL V151 V138 V140 V132 V145 V132 0x0
0x206: V153 = ISZERO V152
0x208: V154 = ISZERO V153
0x209: V155 = 0x216
0x20c: JUMPI 0x216 V154
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, 0x0, V132, V145, V132, V140, V138, V147]
Stack pops: 7
Stack additions: [V153]
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]

================================

Block 0x20d
[0x20d:0x215]
---
Predecessors: [0x202]
Successors: []
---
0x20d RETURNDATASIZE
0x20e PUSH1 0x0
0x210 DUP1
0x211 RETURNDATACOPY
0x212 RETURNDATASIZE
0x213 PUSH1 0x0
0x215 REVERT
---
0x20d: V156 = RETURNDATASIZE
0x20e: V157 = 0x0
0x211: RETURNDATACOPY 0x0 0x0 V156
0x212: V158 = RETURNDATASIZE
0x213: V159 = 0x0
0x215: REVERT 0x0 V158
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]

================================

Block 0x216
[0x216:0x273]
---
Predecessors: [0x202]
Successors: [0x274, 0x278]
---
0x216 JUMPDEST
0x217 POP
0x218 POP
0x219 PUSH1 0x1
0x21b SLOAD
0x21c PUSH1 0x40
0x21e DUP1
0x21f MLOAD
0x220 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x241 DUP2
0x242 MSTORE
0x243 SWAP1
0x244 MLOAD
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d SWAP1
0x24e SWAP3
0x24f AND
0x250 SWAP5
0x251 POP
0x252 PUSH4 0x3ccfd60b
0x257 SWAP4
0x258 POP
0x259 PUSH1 0x4
0x25b DUP1
0x25c DUP3
0x25d ADD
0x25e SWAP4
0x25f POP
0x260 PUSH1 0x0
0x262 SWAP3
0x263 SWAP2
0x264 DUP3
0x265 SWAP1
0x266 SUB
0x267 ADD
0x268 DUP2
0x269 DUP4
0x26a DUP8
0x26b DUP1
0x26c EXTCODESIZE
0x26d ISZERO
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x216: JUMPDEST 
0x219: V160 = 0x1
0x21b: V161 = S[0x1]
0x21c: V162 = 0x40
0x21f: V163 = M[0x40]
0x220: V164 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x242: M[V163] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x244: V165 = M[0x40]
0x245: V166 = 0x1
0x247: V167 = 0xa0
0x249: V168 = 0x2
0x24b: V169 = EXP 0x2 0xa0
0x24c: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V171 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x252: V172 = 0x3ccfd60b
0x259: V173 = 0x4
0x25d: V174 = ADD V163 0x4
0x260: V175 = 0x0
0x266: V176 = SUB V163 V165
0x267: V177 = ADD V176 0x4
0x26c: V178 = EXTCODESIZE V171
0x26d: V179 = ISZERO V178
0x26f: V180 = ISZERO V179
0x270: V181 = 0x278
0x273: JUMPI 0x278 V180
---
Entry stack: [V11, 0xe3, V138, 0x98a0871d, V140, V142, V153]
Stack pops: 5
Stack additions: [V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x216]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V182 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]

================================

Block 0x278
[0x278:0x282]
---
Predecessors: [0x216]
Successors: [0x283, 0x28c]
---
0x278 JUMPDEST
0x279 POP
0x27a GAS
0x27b CALL
0x27c ISZERO
0x27d DUP1
0x27e ISZERO
0x27f PUSH2 0x28c
0x282 JUMPI
---
0x278: JUMPDEST 
0x27a: V183 = GAS
0x27b: V184 = CALL V183 V171 0x0 V165 V177 V165 0x0
0x27c: V185 = ISZERO V184
0x27e: V186 = ISZERO V185
0x27f: V187 = 0x28c
0x282: JUMPI 0x28c V186
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, 0x0, V165, V177, V165, 0x0, V171, V179]
Stack pops: 7
Stack additions: [V185]
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]

================================

Block 0x283
[0x283:0x28b]
---
Predecessors: [0x278]
Successors: []
---
0x283 RETURNDATASIZE
0x284 PUSH1 0x0
0x286 DUP1
0x287 RETURNDATACOPY
0x288 RETURNDATASIZE
0x289 PUSH1 0x0
0x28b REVERT
---
0x283: V188 = RETURNDATASIZE
0x284: V189 = 0x0
0x287: RETURNDATACOPY 0x0 0x0 V188
0x288: V190 = RETURNDATASIZE
0x289: V191 = 0x0
0x28b: REVERT 0x0 V190
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]

================================

Block 0x28c
[0x28c:0x2a1]
---
Predecessors: [0x278]
Successors: [0x2a2, 0x2a6]
---
0x28c JUMPDEST
0x28d POP
0x28e POP
0x28f PUSH7 0x58d15e17628000
0x297 ADDRESS
0x298 BALANCE
0x299 GT
0x29a SWAP2
0x29b POP
0x29c PUSH2 0x2a6
0x29f SWAP1
0x2a0 POP
0x2a1 JUMPI
---
0x28c: JUMPDEST 
0x28f: V192 = 0x58d15e17628000
0x297: V193 = ADDRESS
0x298: V194 = BALANCE V193
0x299: V195 = GT V194 0x58d15e17628000
0x29c: V196 = 0x2a6
0x2a1: JUMPI 0x2a6 V195
---
Entry stack: [V11, 0xe3, V171, 0x3ccfd60b, V174, V185]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x28c]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 REVERT
---
0x2a2: V197 = 0x0
0x2a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x2a6
[0x2a6:0x2dd]
---
Predecessors: [0x28c]
Successors: [0x2de, 0x2e7]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa PUSH20 0x11e52c75998fe2e7928b191bfc5b25937ca16741
0x2bf SWAP1
0x2c0 ADDRESS
0x2c1 BALANCE
0x2c2 DUP1
0x2c3 ISZERO
0x2c4 PUSH2 0x8fc
0x2c7 MUL
0x2c8 SWAP2
0x2c9 PUSH1 0x0
0x2cb DUP2
0x2cc DUP2
0x2cd DUP2
0x2ce DUP6
0x2cf DUP9
0x2d0 DUP9
0x2d1 CALL
0x2d2 SWAP4
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 ISZERO
0x2d8 DUP1
0x2d9 ISZERO
0x2da PUSH2 0x2e7
0x2dd JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V198 = 0x40
0x2a9: V199 = M[0x40]
0x2aa: V200 = 0x11e52c75998fe2e7928b191bfc5b25937ca16741
0x2c0: V201 = ADDRESS
0x2c1: V202 = BALANCE V201
0x2c3: V203 = ISZERO V202
0x2c4: V204 = 0x8fc
0x2c7: V205 = MUL 0x8fc V203
0x2c9: V206 = 0x0
0x2d1: V207 = CALL V205 0x11e52c75998fe2e7928b191bfc5b25937ca16741 V202 V199 0x0 V199 0x0
0x2d7: V208 = ISZERO V207
0x2d9: V209 = ISZERO V208
0x2da: V210 = 0x2e7
0x2dd: JUMPI 0x2e7 V209
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V11, 0xe3, V208]

================================

Block 0x2de
[0x2de:0x2e6]
---
Predecessors: [0x2a6]
Successors: []
---
0x2de RETURNDATASIZE
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 RETURNDATACOPY
0x2e3 RETURNDATASIZE
0x2e4 PUSH1 0x0
0x2e6 REVERT
---
0x2de: V211 = RETURNDATASIZE
0x2df: V212 = 0x0
0x2e2: RETURNDATACOPY 0x0 0x0 V211
0x2e3: V213 = RETURNDATASIZE
0x2e4: V214 = 0x0
0x2e6: REVERT 0x0 V213
---
Entry stack: [V11, 0xe3, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V208]

================================

Block 0x2e7
[0x2e7:0x2e9]
---
Predecessors: [0x2a6, 0x3ce, 0x443]
Successors: [0xe3, 0x3c1, 0x515, 0x6f9]
---
0x2e7 JUMPDEST
0x2e8 POP
0x2e9 JUMP
---
0x2e7: JUMPDEST 
0x2e9: JUMP S1
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x2ea
[0x2ea:0x2f8]
---
Predecessors: [0xf1]
Successors: [0xbf]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x0
0x2ed SLOAD
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 AND
0x2f7 DUP2
0x2f8 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V215 = 0x0
0x2ed: V216 = S[0x0]
0x2ee: V217 = 0x1
0x2f0: V218 = 0xa0
0x2f2: V219 = 0x2
0x2f4: V220 = EXP 0x2 0xa0
0x2f5: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2f8: JUMP 0xbf
---
Entry stack: [V11, 0xbf]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V11, 0xbf, V222]

================================

Block 0x2f9
[0x2f9:0x306]
---
Predecessors: [0xfa]
Successors: [0x30e]
---
0x2f9 JUMPDEST
0x2fa PUSH2 0x30c
0x2fd PUSH2 0x307
0x300 PUSH1 0x1
0x302 ADDRESS
0x303 PUSH2 0x30e
0x306 JUMP
---
0x2f9: JUMPDEST 
0x2fa: V223 = 0x30c
0x2fd: V224 = 0x307
0x300: V225 = 0x1
0x302: V226 = ADDRESS
0x303: V227 = 0x30e
0x306: JUMP 0x30e
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [0x30c, 0x307, 0x1, V226]
Exit stack: [V11, 0xe3, 0x30c, 0x307, 0x1, V226]

================================

Block 0x307
[0x307:0x30b]
---
Predecessors: [0x30e]
Successors: [0x3b5]
---
0x307 JUMPDEST
0x308 PUSH2 0x3b5
0x30b JUMP
---
0x307: JUMPDEST 
0x308: V228 = 0x3b5
0x30b: JUMP 0x3b5
---
Entry stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x30c, 0x4ba, 0x515}, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x30c, 0x4ba, 0x515}, V255]

================================

Block 0x30c
[0x30c:0x30d]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x30c JUMPDEST
0x30d JUMP
---
0x30c: JUMPDEST 
0x30d: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30e
[0x30e:0x3b4]
---
Predecessors: [0x2f9, 0x461, 0x4ba]
Successors: [0x307]
---
0x30e JUMPDEST
0x30f PUSH1 0x40
0x311 DUP1
0x312 MLOAD
0x313 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x334 DUP2
0x335 MSTORE
0x336 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x357 PUSH1 0x1
0x359 DUP3
0x35a ADD
0x35b MSTORE
0x35c PUSH13 0x1000000000000000000000000
0x36a PUSH1 0x1
0x36c PUSH1 0xa0
0x36e PUSH1 0x2
0x370 EXP
0x371 SUB
0x372 DUP5
0x373 AND
0x374 MUL
0x375 PUSH1 0x2
0x377 DUP3
0x378 ADD
0x379 MSTORE
0x37a PUSH1 0xff
0x37c DUP5
0x37d AND
0x37e PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x39f MUL
0x3a0 PUSH1 0x16
0x3a2 DUP3
0x3a3 ADD
0x3a4 MSTORE
0x3a5 SWAP1
0x3a6 MLOAD
0x3a7 SWAP1
0x3a8 DUP2
0x3a9 SWAP1
0x3aa SUB
0x3ab PUSH1 0x17
0x3ad ADD
0x3ae SWAP1
0x3af SHA3
0x3b0 SWAP3
0x3b1 SWAP2
0x3b2 POP
0x3b3 POP
0x3b4 JUMP
---
0x30e: JUMPDEST 
0x30f: V229 = 0x40
0x312: V230 = M[0x40]
0x313: V231 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x335: M[V230] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x336: V232 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x357: V233 = 0x1
0x35a: V234 = ADD V230 0x1
0x35b: M[V234] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x35c: V235 = 0x1000000000000000000000000
0x36a: V236 = 0x1
0x36c: V237 = 0xa0
0x36e: V238 = 0x2
0x370: V239 = EXP 0x2 0xa0
0x371: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x373: V241 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x374: V242 = MUL V241 0x1000000000000000000000000
0x375: V243 = 0x2
0x378: V244 = ADD V230 0x2
0x379: M[V244] = V242
0x37a: V245 = 0xff
0x37d: V246 = AND {0x1, 0x2} 0xff
0x37e: V247 = 0x100000000000000000000000000000000000000000000000000000000000000
0x39f: V248 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V246
0x3a0: V249 = 0x16
0x3a3: V250 = ADD V230 0x16
0x3a4: M[V250] = V248
0x3a6: V251 = M[0x40]
0x3aa: V252 = SUB V230 V251
0x3ab: V253 = 0x17
0x3ad: V254 = ADD 0x17 V252
0x3af: V255 = SHA3 V251 V254
0x3b4: JUMP 0x307
---
Entry stack: [V11, 0xe3, S11, S10, S9, S8, S7, S6, S5, S4, {0x30c, 0x4ba, 0x515}, 0x307, {0x1, 0x2}, S0]
Stack pops: 3
Stack additions: [V255]
Exit stack: [V11, 0xe3, S11, S10, S9, S8, S7, S6, S5, S4, {0x30c, 0x4ba, 0x515}, V255]

================================

Block 0x3b5
[0x3b5:0x3c0]
---
Predecessors: [0x307]
Successors: [0x57c]
---
0x3b5 JUMPDEST
0x3b6 PUSH2 0x3c1
0x3b9 DUP2
0x3ba PUSH1 0x2
0x3bc SLOAD
0x3bd PUSH2 0x57c
0x3c0 JUMP
---
0x3b5: JUMPDEST 
0x3b6: V256 = 0x3c1
0x3ba: V257 = 0x2
0x3bc: V258 = S[0x2]
0x3bd: V259 = 0x57c
0x3c0: JUMP 0x57c
---
Entry stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x30c, 0x4ba, 0x515}, V255]
Stack pops: 1
Stack additions: [S0, 0x3c1, S0, V258]
Exit stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258]

================================

Block 0x3c1
[0x3c1:0x3c6]
---
Predecessors: [0x2e7, 0x578, 0x798]
Successors: [0x3c7, 0x3d3]
---
0x3c1 JUMPDEST
0x3c2 ISZERO
0x3c3 PUSH2 0x3d3
0x3c6 JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V260 = ISZERO {0x0, 0x1}
0x3c3: V261 = 0x3d3
0x3c6: JUMPI 0x3d3 V260
---
Entry stack: [V11, 0xe3, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe3, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x3c7
[0x3c7:0x3cd]
---
Predecessors: [0x3c1]
Successors: [0x79f]
---
0x3c7 PUSH2 0x3ce
0x3ca PUSH2 0x79f
0x3cd JUMP
---
0x3c7: V262 = 0x3ce
0x3ca: V263 = 0x79f
0x3cd: JUMP 0x79f
---
Entry stack: [V11, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3ce]
Exit stack: [V11, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0, 0x3ce]

================================

Block 0x3ce
[0x3ce:0x3d2]
---
Predecessors: [0x849]
Successors: [0x2e7]
---
0x3ce JUMPDEST
0x3cf PUSH2 0x2e7
0x3d2 JUMP
---
0x3ce: JUMPDEST 
0x3cf: V264 = 0x2e7
0x3d2: JUMP 0x2e7
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3d3
[0x3d3:0x3fa]
---
Predecessors: [0x3c1]
Successors: [0x3fb, 0x461]
---
0x3d3 JUMPDEST
0x3d4 PUSH1 0x3
0x3d6 DUP1
0x3d7 SLOAD
0x3d8 PUSH1 0xff
0x3da NOT
0x3db DUP2
0x3dc AND
0x3dd PUSH1 0x1
0x3df PUSH1 0xff
0x3e1 SWAP3
0x3e2 DUP4
0x3e3 AND
0x3e4 ADD
0x3e5 DUP3
0x3e6 AND
0x3e7 OR
0x3e8 SWAP2
0x3e9 DUP3
0x3ea SWAP1
0x3eb SSTORE
0x3ec PUSH2 0x100
0x3ef DUP3
0x3f0 DIV
0x3f1 DUP2
0x3f2 AND
0x3f3 SWAP2
0x3f4 AND
0x3f5 EQ
0x3f6 ISZERO
0x3f7 PUSH2 0x461
0x3fa JUMPI
---
0x3d3: JUMPDEST 
0x3d4: V265 = 0x3
0x3d7: V266 = S[0x3]
0x3d8: V267 = 0xff
0x3da: V268 = NOT 0xff
0x3dc: V269 = AND V266 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x3dd: V270 = 0x1
0x3df: V271 = 0xff
0x3e3: V272 = AND 0xff V266
0x3e4: V273 = ADD V272 0x1
0x3e6: V274 = AND 0xff V273
0x3e7: V275 = OR V274 V269
0x3eb: S[0x3] = V275
0x3ec: V276 = 0x100
0x3f0: V277 = DIV V275 0x100
0x3f2: V278 = AND 0xff V277
0x3f4: V279 = AND V275 0xff
0x3f5: V280 = EQ V279 V278
0x3f6: V281 = ISZERO V280
0x3f7: V282 = 0x461
0x3fa: JUMPI 0x461 V281
---
Entry stack: [V11, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3fb
[0x3fb:0x40a]
---
Predecessors: [0x3d3]
Successors: [0x40b, 0x40c]
---
0x3fb PUSH1 0x4
0x3fd DUP1
0x3fe SLOAD
0x3ff PUSH1 0x0
0x401 NOT
0x402 DUP2
0x403 ADD
0x404 SWAP1
0x405 DUP2
0x406 LT
0x407 PUSH2 0x40c
0x40a JUMPI
---
0x3fb: V283 = 0x4
0x3fe: V284 = S[0x4]
0x3ff: V285 = 0x0
0x401: V286 = NOT 0x0
0x403: V287 = ADD V284 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x406: V288 = LT V287 V284
0x407: V289 = 0x40c
0x40a: JUMPI 0x40c V288
---
Entry stack: [V11, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4, V287]
Exit stack: [V11, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0, 0x4, V287]

================================

Block 0x40b
[0x40b:0x40b]
---
Predecessors: [0x3fb]
Successors: []
---
0x40b INVALID
---
0x40b: INVALID 
---
Entry stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V287]

================================

Block 0x40c
[0x40c:0x442]
---
Predecessors: [0x3fb]
Successors: [0x8d6]
---
0x40c JUMPDEST
0x40d SWAP1
0x40e PUSH1 0x0
0x410 MSTORE
0x411 PUSH1 0x20
0x413 PUSH1 0x0
0x415 SHA3
0x416 SWAP1
0x417 PUSH1 0x20
0x419 SWAP2
0x41a DUP3
0x41b DUP3
0x41c DIV
0x41d ADD
0x41e SWAP2
0x41f SWAP1
0x420 MOD
0x421 PUSH2 0x100
0x424 EXP
0x425 DUP2
0x426 SLOAD
0x427 SWAP1
0x428 PUSH1 0xff
0x42a MUL
0x42b NOT
0x42c AND
0x42d SWAP1
0x42e SSTORE
0x42f PUSH1 0x4
0x431 DUP1
0x432 SLOAD
0x433 DUP1
0x434 SWAP2
0x435 SWAP1
0x436 PUSH1 0x1
0x438 SWAP1
0x439 SUB
0x43a PUSH2 0x443
0x43d SWAP2
0x43e SWAP1
0x43f PUSH2 0x8d6
0x442 JUMP
---
0x40c: JUMPDEST 
0x40e: V290 = 0x0
0x410: M[0x0] = 0x4
0x411: V291 = 0x20
0x413: V292 = 0x0
0x415: V293 = SHA3 0x0 0x20
0x417: V294 = 0x20
0x41c: V295 = DIV V287 0x20
0x41d: V296 = ADD V295 V293
0x420: V297 = MOD V287 0x20
0x421: V298 = 0x100
0x424: V299 = EXP 0x100 V297
0x426: V300 = S[V296]
0x428: V301 = 0xff
0x42a: V302 = MUL 0xff V299
0x42b: V303 = NOT V302
0x42c: V304 = AND V303 V300
0x42e: S[V296] = V304
0x42f: V305 = 0x4
0x432: V306 = S[0x4]
0x436: V307 = 0x1
0x439: V308 = SUB V306 0x1
0x43a: V309 = 0x443
0x43f: V310 = 0x8d6
0x442: JUMP 0x8d6
---
Entry stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, V287]
Stack pops: 2
Stack additions: [V306, 0x443, 0x4, V308]
Exit stack: [V11, 0xe3, S9, S8, S7, S6, S5, S4, S3, S2, V306, 0x443, 0x4, V308]

================================

Block 0x443
[0x443:0x460]
---
Predecessors: [0x849]
Successors: [0x2e7]
---
0x443 JUMPDEST
0x444 POP
0x445 PUSH1 0x3
0x447 DUP1
0x448 SLOAD
0x449 PUSH1 0xff
0x44b NOT
0x44c DUP2
0x44d AND
0x44e PUSH1 0xff
0x450 SWAP2
0x451 DUP3
0x452 AND
0x453 PUSH1 0x0
0x455 NOT
0x456 ADD
0x457 SWAP1
0x458 SWAP2
0x459 AND
0x45a OR
0x45b SWAP1
0x45c SSTORE
0x45d PUSH2 0x2e7
0x460 JUMP
---
0x443: JUMPDEST 
0x445: V311 = 0x3
0x448: V312 = S[0x3]
0x449: V313 = 0xff
0x44b: V314 = NOT 0xff
0x44d: V315 = AND V312 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x44e: V316 = 0xff
0x452: V317 = AND 0xff V312
0x453: V318 = 0x0
0x455: V319 = NOT 0x0
0x456: V320 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V317
0x459: V321 = AND 0xff V320
0x45a: V322 = OR V321 V315
0x45c: S[0x3] = V322
0x45d: V323 = 0x2e7
0x460: JUMP 0x2e7
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x461
[0x461:0x4b9]
---
Predecessors: [0x3d3]
Successors: [0x30e]
---
0x461 JUMPDEST
0x462 PUSH1 0x4
0x464 DUP1
0x465 SLOAD
0x466 PUSH1 0x1
0x468 DUP1
0x469 DUP3
0x46a ADD
0x46b DUP4
0x46c SSTORE
0x46d PUSH1 0x0
0x46f SWAP3
0x470 SWAP1
0x471 SWAP3
0x472 MSTORE
0x473 PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x494 PUSH1 0x20
0x496 DUP3
0x497 DIV
0x498 ADD
0x499 DUP1
0x49a SLOAD
0x49b PUSH1 0x1f
0x49d SWAP1
0x49e SWAP3
0x49f AND
0x4a0 PUSH2 0x100
0x4a3 EXP
0x4a4 PUSH1 0xff
0x4a6 MUL
0x4a7 NOT
0x4a8 SWAP1
0x4a9 SWAP2
0x4aa AND
0x4ab SWAP1
0x4ac SSTORE
0x4ad PUSH2 0x4ba
0x4b0 SWAP1
0x4b1 PUSH2 0x307
0x4b4 SWAP1
0x4b5 DUP4
0x4b6 PUSH2 0x30e
0x4b9 JUMP
---
0x461: JUMPDEST 
0x462: V324 = 0x4
0x465: V325 = S[0x4]
0x466: V326 = 0x1
0x46a: V327 = ADD V325 0x1
0x46c: S[0x4] = V327
0x46d: V328 = 0x0
0x472: M[0x0] = 0x4
0x473: V329 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x494: V330 = 0x20
0x497: V331 = DIV V325 0x20
0x498: V332 = ADD V331 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x49a: V333 = S[V332]
0x49b: V334 = 0x1f
0x49f: V335 = AND V325 0x1f
0x4a0: V336 = 0x100
0x4a3: V337 = EXP 0x100 V335
0x4a4: V338 = 0xff
0x4a6: V339 = MUL 0xff V337
0x4a7: V340 = NOT V339
0x4aa: V341 = AND V333 V340
0x4ac: S[V332] = V341
0x4ad: V342 = 0x4ba
0x4b1: V343 = 0x307
0x4b6: V344 = 0x30e
0x4b9: JUMP 0x30e
---
Entry stack: [V11, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x4ba, 0x307, 0x1, S0]
Exit stack: [V11, 0xe3, S7, S6, S5, S4, S3, S2, S1, S0, 0x4ba, 0x307, 0x1, S0]

================================

Block 0x4ba
[0x4ba:0x514]
---
Predecessors: []
Successors: [0x30e]
---
0x4ba JUMPDEST
0x4bb PUSH1 0x4
0x4bd DUP1
0x4be SLOAD
0x4bf PUSH1 0x1
0x4c1 DUP2
0x4c2 ADD
0x4c3 DUP3
0x4c4 SSTORE
0x4c5 PUSH1 0x0
0x4c7 SWAP2
0x4c8 SWAP1
0x4c9 SWAP2
0x4ca MSTORE
0x4cb PUSH1 0x20
0x4cd DUP2
0x4ce DIV
0x4cf PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x4f0 ADD
0x4f1 DUP1
0x4f2 SLOAD
0x4f3 PUSH1 0xff
0x4f5 PUSH1 0x1f
0x4f7 SWAP1
0x4f8 SWAP4
0x4f9 AND
0x4fa PUSH2 0x100
0x4fd EXP
0x4fe SWAP3
0x4ff DUP4
0x500 MUL
0x501 NOT
0x502 AND
0x503 SWAP1
0x504 SWAP2
0x505 OR
0x506 SWAP1
0x507 SSTORE
0x508 PUSH2 0x515
0x50b PUSH2 0x307
0x50e PUSH1 0x2
0x510 DUP4
0x511 PUSH2 0x30e
0x514 JUMP
---
0x4ba: JUMPDEST 
0x4bb: V345 = 0x4
0x4be: V346 = S[0x4]
0x4bf: V347 = 0x1
0x4c2: V348 = ADD V346 0x1
0x4c4: S[0x4] = V348
0x4c5: V349 = 0x0
0x4ca: M[0x0] = 0x4
0x4cb: V350 = 0x20
0x4ce: V351 = DIV V346 0x20
0x4cf: V352 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x4f0: V353 = ADD 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b V351
0x4f2: V354 = S[V353]
0x4f3: V355 = 0xff
0x4f5: V356 = 0x1f
0x4f9: V357 = AND V346 0x1f
0x4fa: V358 = 0x100
0x4fd: V359 = EXP 0x100 V357
0x500: V360 = MUL V359 0xff
0x501: V361 = NOT V360
0x502: V362 = AND V361 V354
0x505: V363 = OR V359 V362
0x507: S[V353] = V363
0x508: V364 = 0x515
0x50b: V365 = 0x307
0x50e: V366 = 0x2
0x511: V367 = 0x30e
0x514: JUMP 0x30e
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, 0x515, 0x307, 0x2, S0]
Exit stack: [S0, 0x515, 0x307, 0x2, S0]

================================

Block 0x515
[0x515:0x53f]
---
Predecessors: [0x2e7, 0x578, 0x798]
Successors: [0x540, 0x541]
---
0x515 JUMPDEST
0x516 PUSH1 0x3
0x518 DUP1
0x519 SLOAD
0x51a PUSH1 0xff
0x51c NOT
0x51d DUP2
0x51e AND
0x51f PUSH1 0xff
0x521 SWAP2
0x522 DUP3
0x523 AND
0x524 PUSH1 0x0
0x526 NOT
0x527 SWAP1
0x528 DUP2
0x529 ADD
0x52a SWAP1
0x52b SWAP3
0x52c AND
0x52d OR
0x52e SWAP1
0x52f SWAP2
0x530 SSTORE
0x531 PUSH1 0x4
0x533 DUP1
0x534 SLOAD
0x535 SWAP1
0x536 SWAP2
0x537 DUP2
0x538 ADD
0x539 SWAP1
0x53a DUP2
0x53b LT
0x53c PUSH2 0x541
0x53f JUMPI
---
0x515: JUMPDEST 
0x516: V368 = 0x3
0x519: V369 = S[0x3]
0x51a: V370 = 0xff
0x51c: V371 = NOT 0xff
0x51e: V372 = AND V369 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x51f: V373 = 0xff
0x523: V374 = AND 0xff V369
0x524: V375 = 0x0
0x526: V376 = NOT 0x0
0x529: V377 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V374
0x52c: V378 = AND 0xff V377
0x52d: V379 = OR V378 V372
0x530: S[0x3] = V379
0x531: V380 = 0x4
0x534: V381 = S[0x4]
0x538: V382 = ADD V381 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x53b: V383 = LT V382 V381
0x53c: V384 = 0x541
0x53f: JUMPI 0x541 V383
---
Entry stack: [V11, 0xe3, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x4, V382]
Exit stack: [V11, 0xe3, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}, 0x4, V382]

================================

Block 0x540
[0x540:0x540]
---
Predecessors: [0x515]
Successors: []
---
0x540 INVALID
---
0x540: INVALID 
---
Entry stack: [V11, 0xe3, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, 0x4, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, 0x4, V382]

================================

Block 0x541
[0x541:0x577]
---
Predecessors: [0x515]
Successors: [0x8d6]
---
0x541 JUMPDEST
0x542 SWAP1
0x543 PUSH1 0x0
0x545 MSTORE
0x546 PUSH1 0x20
0x548 PUSH1 0x0
0x54a SHA3
0x54b SWAP1
0x54c PUSH1 0x20
0x54e SWAP2
0x54f DUP3
0x550 DUP3
0x551 DIV
0x552 ADD
0x553 SWAP2
0x554 SWAP1
0x555 MOD
0x556 PUSH2 0x100
0x559 EXP
0x55a DUP2
0x55b SLOAD
0x55c SWAP1
0x55d PUSH1 0xff
0x55f MUL
0x560 NOT
0x561 AND
0x562 SWAP1
0x563 SSTORE
0x564 PUSH1 0x4
0x566 DUP1
0x567 SLOAD
0x568 DUP1
0x569 SWAP2
0x56a SWAP1
0x56b PUSH1 0x1
0x56d SWAP1
0x56e SUB
0x56f PUSH2 0x578
0x572 SWAP2
0x573 SWAP1
0x574 PUSH2 0x8d6
0x577 JUMP
---
0x541: JUMPDEST 
0x543: V385 = 0x0
0x545: M[0x0] = 0x4
0x546: V386 = 0x20
0x548: V387 = 0x0
0x54a: V388 = SHA3 0x0 0x20
0x54c: V389 = 0x20
0x551: V390 = DIV V382 0x20
0x552: V391 = ADD V390 V388
0x555: V392 = MOD V382 0x20
0x556: V393 = 0x100
0x559: V394 = EXP 0x100 V392
0x55b: V395 = S[V391]
0x55d: V396 = 0xff
0x55f: V397 = MUL 0xff V394
0x560: V398 = NOT V397
0x561: V399 = AND V398 V395
0x563: S[V391] = V399
0x564: V400 = 0x4
0x567: V401 = S[0x4]
0x56b: V402 = 0x1
0x56e: V403 = SUB V401 0x1
0x56f: V404 = 0x578
0x574: V405 = 0x8d6
0x577: JUMP 0x8d6
---
Entry stack: [V11, 0xe3, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, 0x4, V382]
Stack pops: 2
Stack additions: [V401, 0x578, 0x4, V403]
Exit stack: [V11, 0xe3, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x1}, V401, 0x578, 0x4, V403]

================================

Block 0x578
[0x578:0x57b]
---
Predecessors: [0x849]
Successors: [0x3c1, 0x515, 0x6f9]
---
0x578 JUMPDEST
0x579 POP
0x57a POP
0x57b JUMP
---
0x578: JUMPDEST 
0x57b: JUMP S2
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x57c
[0x57c:0x5d7]
---
Predecessors: [0x3b5]
Successors: [0x5d8]
---
0x57c JUMPDEST
0x57d PUSH1 0x0
0x57f DUP1
0x580 PUSH2 0x6f9
0x583 NUMBER
0x584 PUSH2 0x6ed
0x587 TIMESTAMP
0x588 DUP8
0x589 PUSH1 0x40
0x58b MLOAD
0x58c PUSH1 0x20
0x58e ADD
0x58f DUP1
0x590 DUP3
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 AND
0x59a PUSH1 0x1
0x59c PUSH1 0xa0
0x59e PUSH1 0x2
0x5a0 EXP
0x5a1 SUB
0x5a2 AND
0x5a3 PUSH13 0x1000000000000000000000000
0x5b1 MUL
0x5b2 DUP2
0x5b3 MSTORE
0x5b4 PUSH1 0x14
0x5b6 ADD
0x5b7 SWAP2
0x5b8 POP
0x5b9 POP
0x5ba PUSH1 0x40
0x5bc MLOAD
0x5bd PUSH1 0x20
0x5bf DUP2
0x5c0 DUP4
0x5c1 SUB
0x5c2 SUB
0x5c3 DUP2
0x5c4 MSTORE
0x5c5 SWAP1
0x5c6 PUSH1 0x40
0x5c8 MSTORE
0x5c9 PUSH1 0x40
0x5cb MLOAD
0x5cc DUP1
0x5cd DUP3
0x5ce DUP1
0x5cf MLOAD
0x5d0 SWAP1
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 SWAP1
0x5d5 DUP1
0x5d6 DUP4
0x5d7 DUP4
---
0x57c: JUMPDEST 
0x57d: V406 = 0x0
0x580: V407 = 0x6f9
0x583: V408 = NUMBER
0x584: V409 = 0x6ed
0x587: V410 = TIMESTAMP
0x589: V411 = 0x40
0x58b: V412 = M[0x40]
0x58c: V413 = 0x20
0x58e: V414 = ADD 0x20 V412
0x591: V415 = 0x1
0x593: V416 = 0xa0
0x595: V417 = 0x2
0x597: V418 = EXP 0x2 0xa0
0x598: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x599: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x59a: V421 = 0x1
0x59c: V422 = 0xa0
0x59e: V423 = 0x2
0x5a0: V424 = EXP 0x2 0xa0
0x5a1: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a2: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x5a3: V427 = 0x1000000000000000000000000
0x5b1: V428 = MUL 0x1000000000000000000000000 V426
0x5b3: M[V414] = V428
0x5b4: V429 = 0x14
0x5b6: V430 = ADD 0x14 V414
0x5ba: V431 = 0x40
0x5bc: V432 = M[0x40]
0x5bd: V433 = 0x20
0x5c1: V434 = SUB V430 V432
0x5c2: V435 = SUB V434 0x20
0x5c4: M[V432] = V435
0x5c6: V436 = 0x40
0x5c8: M[0x40] = V430
0x5c9: V437 = 0x40
0x5cb: V438 = M[0x40]
0x5cf: V439 = M[V432]
0x5d1: V440 = 0x20
0x5d3: V441 = ADD 0x20 V432
---
Entry stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V432, V438, V438, V441, V439, V439, V438, V441]
Exit stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V432, V438, V438, V441, V439, V439, V438, V441]

================================

Block 0x5d8
[0x5d8:0x5e0]
---
Predecessors: [0x57c, 0x5e1]
Successors: [0x5e1, 0x5f7]
---
0x5d8 JUMPDEST
0x5d9 PUSH1 0x20
0x5db DUP4
0x5dc LT
0x5dd PUSH2 0x5f7
0x5e0 JUMPI
---
0x5d8: JUMPDEST 
0x5d9: V442 = 0x20
0x5dc: V443 = LT S2 0x20
0x5dd: V444 = 0x5f7
0x5e0: JUMPI 0x5f7 V443
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V432, V438, V438, V441, V439, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V432, V438, V438, V441, V439, S2, S1, S0]

================================

Block 0x5e1
[0x5e1:0x5f6]
---
Predecessors: [0x5d8]
Successors: [0x5d8]
---
0x5e1 DUP1
0x5e2 MLOAD
0x5e3 DUP3
0x5e4 MSTORE
0x5e5 PUSH1 0x1f
0x5e7 NOT
0x5e8 SWAP1
0x5e9 SWAP3
0x5ea ADD
0x5eb SWAP2
0x5ec PUSH1 0x20
0x5ee SWAP2
0x5ef DUP3
0x5f0 ADD
0x5f1 SWAP2
0x5f2 ADD
0x5f3 PUSH2 0x5d8
0x5f6 JUMP
---
0x5e2: V445 = M[S0]
0x5e4: M[S1] = V445
0x5e5: V446 = 0x1f
0x5e7: V447 = NOT 0x1f
0x5ea: V448 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x5ec: V449 = 0x20
0x5f0: V450 = ADD 0x20 S1
0x5f2: V451 = ADD 0x20 S0
0x5f3: V452 = 0x5d8
0x5f6: JUMP 0x5d8
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V432, V438, V438, V441, V439, S2, S1, S0]
Stack pops: 3
Stack additions: [V448, V450, V451]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V432, V438, V438, V441, V439, V448, V450, V451]

================================

Block 0x5f7
[0x5f7:0x62b]
---
Predecessors: [0x5d8]
Successors: [0x62c, 0x62d]
---
0x5f7 JUMPDEST
0x5f8 MLOAD
0x5f9 DUP2
0x5fa MLOAD
0x5fb PUSH1 0x20
0x5fd SWAP4
0x5fe SWAP1
0x5ff SWAP4
0x600 SUB
0x601 PUSH2 0x100
0x604 EXP
0x605 PUSH1 0x0
0x607 NOT
0x608 ADD
0x609 DUP1
0x60a NOT
0x60b SWAP1
0x60c SWAP2
0x60d AND
0x60e SWAP3
0x60f AND
0x610 SWAP2
0x611 SWAP1
0x612 SWAP2
0x613 OR
0x614 SWAP1
0x615 MSTORE
0x616 PUSH1 0x40
0x618 MLOAD
0x619 SWAP3
0x61a ADD
0x61b DUP3
0x61c SWAP1
0x61d SUB
0x61e SWAP1
0x61f SWAP2
0x620 SHA3
0x621 SWAP3
0x622 POP
0x623 POP
0x624 POP
0x625 DUP2
0x626 ISZERO
0x627 ISZERO
0x628 PUSH2 0x62d
0x62b JUMPI
---
0x5f7: JUMPDEST 
0x5f8: V453 = M[S0]
0x5fa: V454 = M[S1]
0x5fb: V455 = 0x20
0x600: V456 = SUB 0x20 S2
0x601: V457 = 0x100
0x604: V458 = EXP 0x100 V456
0x605: V459 = 0x0
0x607: V460 = NOT 0x0
0x608: V461 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V458
0x60a: V462 = NOT V461
0x60d: V463 = AND V453 V462
0x60f: V464 = AND V454 V461
0x613: V465 = OR V464 V463
0x615: M[S1] = V465
0x616: V466 = 0x40
0x618: V467 = M[0x40]
0x61a: V468 = ADD V438 V439
0x61d: V469 = SUB V468 V467
0x620: V470 = SHA3 V467 V469
0x626: V471 = ISZERO V410
0x627: V472 = ISZERO V471
0x628: V473 = 0x62d
0x62b: JUMPI 0x62d V472
---
Entry stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V432, V438, V438, V441, V439, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V470]
Exit stack: [V11, 0xe3, S26, S25, S24, S23, S22, S21, S20, S19, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V470]

================================

Block 0x62c
[0x62c:0x62c]
---
Predecessors: [0x5f7]
Successors: []
---
0x62c INVALID
---
0x62c: INVALID 
---
Entry stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V470]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V470]

================================

Block 0x62d
[0x62d:0x686]
---
Predecessors: [0x5f7]
Successors: [0x687]
---
0x62d JUMPDEST
0x62e DIV
0x62f PUSH2 0x6ed
0x632 GASLIMIT
0x633 PUSH2 0x6ed
0x636 TIMESTAMP
0x637 COINBASE
0x638 PUSH1 0x40
0x63a MLOAD
0x63b PUSH1 0x20
0x63d ADD
0x63e DUP1
0x63f DUP3
0x640 PUSH1 0x1
0x642 PUSH1 0xa0
0x644 PUSH1 0x2
0x646 EXP
0x647 SUB
0x648 AND
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 AND
0x652 PUSH13 0x1000000000000000000000000
0x660 MUL
0x661 DUP2
0x662 MSTORE
0x663 PUSH1 0x14
0x665 ADD
0x666 SWAP2
0x667 POP
0x668 POP
0x669 PUSH1 0x40
0x66b MLOAD
0x66c PUSH1 0x20
0x66e DUP2
0x66f DUP4
0x670 SUB
0x671 SUB
0x672 DUP2
0x673 MSTORE
0x674 SWAP1
0x675 PUSH1 0x40
0x677 MSTORE
0x678 PUSH1 0x40
0x67a MLOAD
0x67b DUP1
0x67c DUP3
0x67d DUP1
0x67e MLOAD
0x67f SWAP1
0x680 PUSH1 0x20
0x682 ADD
0x683 SWAP1
0x684 DUP1
0x685 DUP4
0x686 DUP4
---
0x62d: JUMPDEST 
0x62e: V474 = DIV V470 V410
0x62f: V475 = 0x6ed
0x632: V476 = GASLIMIT
0x633: V477 = 0x6ed
0x636: V478 = TIMESTAMP
0x637: V479 = COINBASE
0x638: V480 = 0x40
0x63a: V481 = M[0x40]
0x63b: V482 = 0x20
0x63d: V483 = ADD 0x20 V481
0x640: V484 = 0x1
0x642: V485 = 0xa0
0x644: V486 = 0x2
0x646: V487 = EXP 0x2 0xa0
0x647: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x648: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x649: V490 = 0x1
0x64b: V491 = 0xa0
0x64d: V492 = 0x2
0x64f: V493 = EXP 0x2 0xa0
0x650: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x651: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x652: V496 = 0x1000000000000000000000000
0x660: V497 = MUL 0x1000000000000000000000000 V495
0x662: M[V483] = V497
0x663: V498 = 0x14
0x665: V499 = ADD 0x14 V483
0x669: V500 = 0x40
0x66b: V501 = M[0x40]
0x66c: V502 = 0x20
0x670: V503 = SUB V499 V501
0x671: V504 = SUB V503 0x20
0x673: M[V501] = V504
0x675: V505 = 0x40
0x677: M[0x40] = V499
0x678: V506 = 0x40
0x67a: V507 = M[0x40]
0x67e: V508 = M[V501]
0x680: V509 = 0x20
0x682: V510 = ADD 0x20 V501
---
Entry stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V410, V470]
Stack pops: 2
Stack additions: [V474, 0x6ed, V476, 0x6ed, V478, V501, V507, V507, V510, V508, V508, V507, V510]
Exit stack: [V11, 0xe3, S19, S18, S17, S16, S15, S14, S13, S12, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V501, V507, V507, V510, V508, V508, V507, V510]

================================

Block 0x687
[0x687:0x68f]
---
Predecessors: [0x62d, 0x690]
Successors: [0x690, 0x6a6]
---
0x687 JUMPDEST
0x688 PUSH1 0x20
0x68a DUP4
0x68b LT
0x68c PUSH2 0x6a6
0x68f JUMPI
---
0x687: JUMPDEST 
0x688: V511 = 0x20
0x68b: V512 = LT S2 0x20
0x68c: V513 = 0x6a6
0x68f: JUMPI 0x6a6 V512
---
Entry stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V501, V507, V507, V510, V508, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V501, V507, V507, V510, V508, S2, S1, S0]

================================

Block 0x690
[0x690:0x6a5]
---
Predecessors: [0x687]
Successors: [0x687]
---
0x690 DUP1
0x691 MLOAD
0x692 DUP3
0x693 MSTORE
0x694 PUSH1 0x1f
0x696 NOT
0x697 SWAP1
0x698 SWAP3
0x699 ADD
0x69a SWAP2
0x69b PUSH1 0x20
0x69d SWAP2
0x69e DUP3
0x69f ADD
0x6a0 SWAP2
0x6a1 ADD
0x6a2 PUSH2 0x687
0x6a5 JUMP
---
0x691: V514 = M[S0]
0x693: M[S1] = V514
0x694: V515 = 0x1f
0x696: V516 = NOT 0x1f
0x699: V517 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x69b: V518 = 0x20
0x69f: V519 = ADD 0x20 S1
0x6a1: V520 = ADD 0x20 S0
0x6a2: V521 = 0x687
0x6a5: JUMP 0x687
---
Entry stack: [0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V501, V507, V507, V510, V508, S2, S1, S0]
Stack pops: 3
Stack additions: [V517, V519, V520]
Exit stack: [0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V501, V507, V507, V510, V508, V517, V519, V520]

================================

Block 0x6a6
[0x6a6:0x6da]
---
Predecessors: [0x687]
Successors: [0x6db, 0x6dc]
---
0x6a6 JUMPDEST
0x6a7 MLOAD
0x6a8 DUP2
0x6a9 MLOAD
0x6aa PUSH1 0x20
0x6ac SWAP4
0x6ad SWAP1
0x6ae SWAP4
0x6af SUB
0x6b0 PUSH2 0x100
0x6b3 EXP
0x6b4 PUSH1 0x0
0x6b6 NOT
0x6b7 ADD
0x6b8 DUP1
0x6b9 NOT
0x6ba SWAP1
0x6bb SWAP2
0x6bc AND
0x6bd SWAP3
0x6be AND
0x6bf SWAP2
0x6c0 SWAP1
0x6c1 SWAP2
0x6c2 OR
0x6c3 SWAP1
0x6c4 MSTORE
0x6c5 PUSH1 0x40
0x6c7 MLOAD
0x6c8 SWAP3
0x6c9 ADD
0x6ca DUP3
0x6cb SWAP1
0x6cc SUB
0x6cd SWAP1
0x6ce SWAP2
0x6cf SHA3
0x6d0 SWAP3
0x6d1 POP
0x6d2 POP
0x6d3 POP
0x6d4 DUP2
0x6d5 ISZERO
0x6d6 ISZERO
0x6d7 PUSH2 0x6dc
0x6da JUMPI
---
0x6a6: JUMPDEST 
0x6a7: V522 = M[S0]
0x6a9: V523 = M[S1]
0x6aa: V524 = 0x20
0x6af: V525 = SUB 0x20 S2
0x6b0: V526 = 0x100
0x6b3: V527 = EXP 0x100 V525
0x6b4: V528 = 0x0
0x6b6: V529 = NOT 0x0
0x6b7: V530 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V527
0x6b9: V531 = NOT V530
0x6bc: V532 = AND V522 V531
0x6be: V533 = AND V523 V530
0x6c2: V534 = OR V533 V532
0x6c4: M[S1] = V534
0x6c5: V535 = 0x40
0x6c7: V536 = M[0x40]
0x6c9: V537 = ADD V507 V508
0x6cc: V538 = SUB V537 V536
0x6cf: V539 = SHA3 V536 V538
0x6d5: V540 = ISZERO V478
0x6d6: V541 = ISZERO V540
0x6d7: V542 = 0x6dc
0x6da: JUMPI 0x6dc V541
---
Entry stack: [0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V501, V507, V507, V510, V508, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V539]
Exit stack: [0xe3, S30, S29, S28, S27, S26, S25, S24, S23, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V539]

================================

Block 0x6db
[0x6db:0x6db]
---
Predecessors: [0x6a6]
Successors: []
---
0x6db INVALID
---
0x6db: INVALID 
---
Entry stack: [0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V539]
Stack pops: 0
Stack additions: []
Exit stack: [0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V539]

================================

Block 0x6dc
[0x6dc:0x6ec]
---
Predecessors: [0x6a6]
Successors: [0x84e]
---
0x6dc JUMPDEST
0x6dd DIV
0x6de PUSH2 0x6ed
0x6e1 TIMESTAMP
0x6e2 DIFFICULTY
0x6e3 PUSH4 0xffffffff
0x6e8 PUSH2 0x84e
0x6eb AND
0x6ec JUMP
---
0x6dc: JUMPDEST 
0x6dd: V543 = DIV V539 V478
0x6de: V544 = 0x6ed
0x6e1: V545 = TIMESTAMP
0x6e2: V546 = DIFFICULTY
0x6e3: V547 = 0xffffffff
0x6e8: V548 = 0x84e
0x6eb: V549 = AND 0x84e 0xffffffff
0x6ec: JUMP 0x84e
---
Entry stack: [0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V478, V539]
Stack pops: 2
Stack additions: [V543, 0x6ed, V545, V546]
Exit stack: [0xe3, S23, S22, S21, S20, S19, S18, S17, S16, {0x30c, 0x4ba, 0x515}, V255, 0x3c1, V255, V258, 0x0, 0x0, 0x6f9, V408, 0x6ed, V474, 0x6ed, V476, 0x6ed, V543, 0x6ed, V545, V546]

================================

Block 0x6ed
[0x6ed:0x6f8]
---
Predecessors: [0x8c0]
Successors: [0x84e]
---
0x6ed JUMPDEST
0x6ee SWAP1
0x6ef PUSH4 0xffffffff
0x6f4 PUSH2 0x84e
0x6f7 AND
0x6f8 JUMP
---
0x6ed: JUMPDEST 
0x6ef: V550 = 0xffffffff
0x6f4: V551 = 0x84e
0x6f7: V552 = AND 0x84e 0xffffffff
0x6f8: JUMP 0x84e
---
Entry stack: [0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [0xe3, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x6f9
[0x6f9:0x727]
---
Predecessors: [0x2e7, 0x578, 0x8c0]
Successors: [0x728]
---
0x6f9 JUMPDEST
0x6fa PUSH1 0x40
0x6fc MLOAD
0x6fd PUSH1 0x20
0x6ff ADD
0x700 DUP1
0x701 DUP3
0x702 DUP2
0x703 MSTORE
0x704 PUSH1 0x20
0x706 ADD
0x707 SWAP2
0x708 POP
0x709 POP
0x70a PUSH1 0x40
0x70c MLOAD
0x70d PUSH1 0x20
0x70f DUP2
0x710 DUP4
0x711 SUB
0x712 SUB
0x713 DUP2
0x714 MSTORE
0x715 SWAP1
0x716 PUSH1 0x40
0x718 MSTORE
0x719 PUSH1 0x40
0x71b MLOAD
0x71c DUP1
0x71d DUP3
0x71e DUP1
0x71f MLOAD
0x720 SWAP1
0x721 PUSH1 0x20
0x723 ADD
0x724 SWAP1
0x725 DUP1
0x726 DUP4
0x727 DUP4
---
0x6f9: JUMPDEST 
0x6fa: V553 = 0x40
0x6fc: V554 = M[0x40]
0x6fd: V555 = 0x20
0x6ff: V556 = ADD 0x20 V554
0x703: M[V556] = S0
0x704: V557 = 0x20
0x706: V558 = ADD 0x20 V556
0x70a: V559 = 0x40
0x70c: V560 = M[0x40]
0x70d: V561 = 0x20
0x711: V562 = SUB V558 V560
0x712: V563 = SUB V562 0x20
0x714: M[V560] = V563
0x716: V564 = 0x40
0x718: M[0x40] = V558
0x719: V565 = 0x40
0x71b: V566 = M[0x40]
0x71f: V567 = M[V560]
0x721: V568 = 0x20
0x723: V569 = ADD 0x20 V560
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V560, V566, V566, V569, V567, V567, V566, V569]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V560, V566, V566, V569, V567, V567, V566, V569]

================================

Block 0x728
[0x728:0x730]
---
Predecessors: [0x6f9, 0x731]
Successors: [0x731, 0x747]
---
0x728 JUMPDEST
0x729 PUSH1 0x20
0x72b DUP4
0x72c LT
0x72d PUSH2 0x747
0x730 JUMPI
---
0x728: JUMPDEST 
0x729: V570 = 0x20
0x72c: V571 = LT S2 0x20
0x72d: V572 = 0x747
0x730: JUMPI 0x747 V571
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V560, V566, V566, V569, V567, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V560, V566, V566, V569, V567, S2, S1, S0]

================================

Block 0x731
[0x731:0x746]
---
Predecessors: [0x728]
Successors: [0x728]
---
0x731 DUP1
0x732 MLOAD
0x733 DUP3
0x734 MSTORE
0x735 PUSH1 0x1f
0x737 NOT
0x738 SWAP1
0x739 SWAP3
0x73a ADD
0x73b SWAP2
0x73c PUSH1 0x20
0x73e SWAP2
0x73f DUP3
0x740 ADD
0x741 SWAP2
0x742 ADD
0x743 PUSH2 0x728
0x746 JUMP
---
0x732: V573 = M[S0]
0x734: M[S1] = V573
0x735: V574 = 0x1f
0x737: V575 = NOT 0x1f
0x73a: V576 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x73c: V577 = 0x20
0x740: V578 = ADD 0x20 S1
0x742: V579 = ADD 0x20 S0
0x743: V580 = 0x728
0x746: JUMP 0x728
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V560, V566, V566, V569, V567, S2, S1, S0]
Stack pops: 3
Stack additions: [V576, V578, V579]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V560, V566, V566, V569, V567, V576, V578, V579]

================================

Block 0x747
[0x747:0x78a]
---
Predecessors: [0x728]
Successors: [0x78b, 0x793]
---
0x747 JUMPDEST
0x748 MLOAD
0x749 DUP2
0x74a MLOAD
0x74b PUSH1 0x20
0x74d SWAP4
0x74e SWAP1
0x74f SWAP4
0x750 SUB
0x751 PUSH2 0x100
0x754 EXP
0x755 PUSH1 0x0
0x757 NOT
0x758 ADD
0x759 DUP1
0x75a NOT
0x75b SWAP1
0x75c SWAP2
0x75d AND
0x75e SWAP3
0x75f AND
0x760 SWAP2
0x761 SWAP1
0x762 SWAP2
0x763 OR
0x764 SWAP1
0x765 MSTORE
0x766 PUSH1 0x40
0x768 MLOAD
0x769 SWAP3
0x76a ADD
0x76b DUP3
0x76c SWAP1
0x76d SUB
0x76e SWAP1
0x76f SWAP2
0x770 SHA3
0x771 SWAP4
0x772 POP
0x773 DUP6
0x774 SWAP3
0x775 POP
0x776 PUSH2 0x3e8
0x779 SWAP2
0x77a POP
0x77b DUP4
0x77c SWAP1
0x77d POP
0x77e DIV
0x77f PUSH2 0x3e8
0x782 MUL
0x783 DUP3
0x784 SUB
0x785 LT
0x786 ISZERO
0x787 PUSH2 0x793
0x78a JUMPI
---
0x747: JUMPDEST 
0x748: V581 = M[S0]
0x74a: V582 = M[S1]
0x74b: V583 = 0x20
0x750: V584 = SUB 0x20 S2
0x751: V585 = 0x100
0x754: V586 = EXP 0x100 V584
0x755: V587 = 0x0
0x757: V588 = NOT 0x0
0x758: V589 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V586
0x75a: V590 = NOT V589
0x75d: V591 = AND V581 V590
0x75f: V592 = AND V582 V589
0x763: V593 = OR V592 V591
0x765: M[S1] = V593
0x766: V594 = 0x40
0x768: V595 = M[0x40]
0x76a: V596 = ADD V566 V567
0x76d: V597 = SUB V596 V595
0x770: V598 = SHA3 V595 V597
0x776: V599 = 0x3e8
0x77e: V600 = DIV V598 0x3e8
0x77f: V601 = 0x3e8
0x782: V602 = MUL 0x3e8 V600
0x784: V603 = SUB V598 V602
0x785: V604 = LT V603 S10
0x786: V605 = ISZERO V604
0x787: V606 = 0x793
0x78a: JUMPI 0x793 V605
---
Entry stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V560, V566, V566, V569, V567, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V598]
Exit stack: [V11, 0xe3, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V598]

================================

Block 0x78b
[0x78b:0x792]
---
Predecessors: [0x747]
Successors: [0x798]
---
0x78b PUSH1 0x1
0x78d SWAP2
0x78e POP
0x78f PUSH2 0x798
0x792 JUMP
---
0x78b: V607 = 0x1
0x78f: V608 = 0x798
0x792: JUMP 0x798
---
Entry stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V598]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, V598]

================================

Block 0x793
[0x793:0x797]
---
Predecessors: [0x747]
Successors: [0x798]
---
0x793 JUMPDEST
0x794 PUSH1 0x0
0x796 SWAP2
0x797 POP
---
0x793: JUMPDEST 
0x794: V609 = 0x0
---
Entry stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V598]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V598]

================================

Block 0x798
[0x798:0x79e]
---
Predecessors: [0x78b, 0x793]
Successors: [0x3c1, 0x515]
---
0x798 JUMPDEST
0x799 POP
0x79a SWAP3
0x79b SWAP2
0x79c POP
0x79d POP
0x79e JUMP
---
0x798: JUMPDEST 
0x79e: JUMP S4
---
Entry stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0xe3, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}]

================================

Block 0x79f
[0x79f:0x7ac]
---
Predecessors: [0x3c7]
Successors: [0x8c6]
---
0x79f JUMPDEST
0x7a0 CALLVALUE
0x7a1 PUSH1 0x4
0x7a3 PUSH1 0x0
0x7a5 ADDRESS
0x7a6 PUSH2 0x7ad
0x7a9 PUSH2 0x8c6
0x7ac JUMP
---
0x79f: JUMPDEST 
0x7a0: V610 = CALLVALUE
0x7a1: V611 = 0x4
0x7a3: V612 = 0x0
0x7a5: V613 = ADDRESS
0x7a6: V614 = 0x7ad
0x7a9: V615 = 0x8c6
0x7ac: JUMP 0x8c6
---
Entry stack: [V11, 0xe3, S8, S7, S6, S5, S4, S3, S2, S1, 0x3ce]
Stack pops: 0
Stack additions: [V610, 0x4, 0x0, V613, 0x7ad]
Exit stack: [V11, 0xe3, S8, S7, S6, S5, S4, S3, S2, S1, 0x3ce, V610, 0x4, 0x0, V613, 0x7ad]

================================

Block 0x7ad
[0x7ad:0x7e1]
---
Predecessors: [0x8c6]
Successors: [0x7e2, 0x826]
---
0x7ad JUMPDEST
0x7ae PUSH1 0xff
0x7b0 DUP4
0x7b1 AND
0x7b2 PUSH1 0x20
0x7b4 DUP3
0x7b5 ADD
0x7b6 MSTORE
0x7b7 PUSH1 0x1
0x7b9 PUSH1 0xa0
0x7bb PUSH1 0x2
0x7bd EXP
0x7be SUB
0x7bf DUP3
0x7c0 AND
0x7c1 PUSH1 0x40
0x7c3 DUP3
0x7c4 ADD
0x7c5 MSTORE
0x7c6 PUSH1 0x60
0x7c8 DUP1
0x7c9 DUP3
0x7ca MSTORE
0x7cb DUP5
0x7cc SLOAD
0x7cd SWAP1
0x7ce DUP3
0x7cf ADD
0x7d0 DUP2
0x7d1 SWAP1
0x7d2 MSTORE
0x7d3 DUP2
0x7d4 SWAP1
0x7d5 PUSH1 0x80
0x7d7 DUP3
0x7d8 ADD
0x7d9 SWAP1
0x7da DUP7
0x7db SWAP1
0x7dc DUP1
0x7dd ISZERO
0x7de PUSH2 0x826
0x7e1 JUMPI
---
0x7ad: JUMPDEST 
0x7ae: V616 = 0xff
0x7b1: V617 = AND S2 0xff
0x7b2: V618 = 0x20
0x7b5: V619 = ADD V696 0x20
0x7b6: M[V619] = V617
0x7b7: V620 = 0x1
0x7b9: V621 = 0xa0
0x7bb: V622 = 0x2
0x7bd: V623 = EXP 0x2 0xa0
0x7be: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c0: V625 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x7c1: V626 = 0x40
0x7c4: V627 = ADD V696 0x40
0x7c5: M[V627] = V625
0x7c6: V628 = 0x60
0x7ca: M[V696] = 0x60
0x7cc: V629 = S[S3]
0x7cf: V630 = ADD V696 0x60
0x7d2: M[V630] = V629
0x7d5: V631 = 0x80
0x7d8: V632 = ADD V696 0x80
0x7dd: V633 = ISZERO V629
0x7de: V634 = 0x826
0x7e1: JUMPI 0x826 V633
---
Entry stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ce}, S4, S3, S2, S1, V696]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S0, V632, S3, V629]
Exit stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ce}, S4, S3, S2, S1, V696, V696, V632, S3, V629]

================================

Block 0x7e2
[0x7e2:0x7f4]
---
Predecessors: [0x7ad]
Successors: [0x7f5]
---
0x7e2 PUSH1 0x20
0x7e4 MUL
0x7e5 DUP3
0x7e6 ADD
0x7e7 SWAP2
0x7e8 SWAP1
0x7e9 PUSH1 0x0
0x7eb MSTORE
0x7ec PUSH1 0x20
0x7ee PUSH1 0x0
0x7f0 SHA3
0x7f1 SWAP1
0x7f2 PUSH1 0x0
0x7f4 SWAP1
---
0x7e2: V635 = 0x20
0x7e4: V636 = MUL 0x20 V629
0x7e6: V637 = ADD V632 V636
0x7e9: V638 = 0x0
0x7eb: M[0x0] = S1
0x7ec: V639 = 0x20
0x7ee: V640 = 0x0
0x7f0: V641 = SHA3 0x0 0x20
0x7f2: V642 = 0x0
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x3ce}, S8, S7, S6, S5, V696, V696, V632, S1, V629]
Stack pops: 3
Stack additions: [V637, V641, 0x0, S2]
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x3ce}, S8, S7, S6, S5, V696, V696, V637, V641, 0x0, V632]

================================

Block 0x7f5
[0x7f5:0x823]
---
Predecessors: [0x7e2, 0x7f5]
Successors: [0x7f5, 0x824]
---
0x7f5 JUMPDEST
0x7f6 DUP3
0x7f7 SLOAD
0x7f8 PUSH2 0x100
0x7fb DUP4
0x7fc SWAP1
0x7fd EXP
0x7fe SWAP1
0x7ff DIV
0x800 PUSH1 0xff
0x802 AND
0x803 ISZERO
0x804 ISZERO
0x805 DUP2
0x806 MSTORE
0x807 PUSH1 0x20
0x809 PUSH1 0x1
0x80b SWAP3
0x80c DUP4
0x80d ADD
0x80e DUP2
0x80f DUP2
0x810 DIV
0x811 SWAP5
0x812 DUP6
0x813 ADD
0x814 SWAP5
0x815 SWAP1
0x816 SWAP4
0x817 SUB
0x818 SWAP1
0x819 SWAP3
0x81a MUL
0x81b SWAP2
0x81c ADD
0x81d DUP1
0x81e DUP5
0x81f GT
0x820 PUSH2 0x7f5
0x823 JUMPI
---
0x7f5: JUMPDEST 
0x7f7: V643 = S[S2]
0x7f8: V644 = 0x100
0x7fd: V645 = EXP 0x100 S1
0x7ff: V646 = DIV V643 V645
0x800: V647 = 0xff
0x802: V648 = AND 0xff V646
0x803: V649 = ISZERO V648
0x804: V650 = ISZERO V649
0x806: M[S0] = V650
0x807: V651 = 0x20
0x809: V652 = 0x1
0x80d: V653 = ADD 0x1 S1
0x810: V654 = DIV V653 0x20
0x813: V655 = ADD V654 S2
0x817: V656 = SUB 0x1 V654
0x81a: V657 = MUL V653 V656
0x81c: V658 = ADD 0x20 S0
0x81f: V659 = GT V637 V658
0x820: V660 = 0x7f5
0x823: JUMPI 0x7f5 V659
---
Entry stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x3ce}, S9, S8, S7, S6, S5, S4, V637, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, V655, V657, V658]
Exit stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x3ce}, S9, S8, S7, S6, S5, S4, V637, V655, V657, V658]

================================

Block 0x824
[0x824:0x825]
---
Predecessors: [0x7f5]
Successors: [0x826]
---
0x824 SWAP1
0x825 POP
---
0x824: NOP 
---
Entry stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x3ce}, S9, S8, S7, S6, S5, S4, V637, V655, V657, V658]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xe3, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x3ce}, S9, S8, S7, S6, S5, S4, V637, V655, V658]

================================

Block 0x826
[0x826:0x83f]
---
Predecessors: [0x7ad, 0x824]
Successors: [0x840, 0x849]
---
0x826 JUMPDEST
0x827 POP
0x828 POP
0x829 SWAP5
0x82a POP
0x82b POP
0x82c POP
0x82d POP
0x82e POP
0x82f PUSH1 0x40
0x831 MLOAD
0x832 DUP1
0x833 SWAP2
0x834 SUB
0x835 SWAP1
0x836 DUP3
0x837 CREATE
0x838 DUP1
0x839 ISZERO
0x83a DUP1
0x83b ISZERO
0x83c PUSH2 0x849
0x83f JUMPI
---
0x826: JUMPDEST 
0x82f: V661 = 0x40
0x831: V662 = M[0x40]
0x834: V663 = SUB S2 V662
0x837: V664 = CREATE S8 V662 V663
0x839: V665 = ISZERO V664
0x83b: V666 = ISZERO V665
0x83c: V667 = 0x849
0x83f: JUMPI 0x849 V666
---
Entry stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x3ce}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V664, V665]
Exit stack: [V11, 0xe3, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x3ce}, S8, V664, V665]

================================

Block 0x840
[0x840:0x848]
---
Predecessors: [0x826]
Successors: []
---
0x840 RETURNDATASIZE
0x841 PUSH1 0x0
0x843 DUP1
0x844 RETURNDATACOPY
0x845 RETURNDATASIZE
0x846 PUSH1 0x0
0x848 REVERT
---
0x840: V668 = RETURNDATASIZE
0x841: V669 = 0x0
0x844: RETURNDATACOPY 0x0 0x0 V668
0x845: V670 = RETURNDATASIZE
0x846: V671 = 0x0
0x848: REVERT 0x0 V670
---
Entry stack: [V11, 0xe3, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x3ce}, S2, V664, V665]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x3ce}, S2, V664, V665]

================================

Block 0x849
[0x849:0x84d]
---
Predecessors: [0x826, 0x8d6, 0x923]
Successors: [0x3ce, 0x443, 0x578]
---
0x849 JUMPDEST
0x84a POP
0x84b POP
0x84c POP
0x84d JUMP
---
0x849: JUMPDEST 
0x84d: JUMP {0x0, 0x3ce, 0x443, 0x578}
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x3ce, 0x443, 0x578}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x84e
[0x84e:0x859]
---
Predecessors: [0x6dc, 0x6ed]
Successors: [0x85a, 0x8c0]
---
0x84e JUMPDEST
0x84f DUP2
0x850 DUP2
0x851 ADD
0x852 DUP3
0x853 DUP2
0x854 LT
0x855 ISZERO
0x856 PUSH2 0x8c0
0x859 JUMPI
---
0x84e: JUMPDEST 
0x851: V672 = ADD S0 S1
0x854: V673 = LT V672 S1
0x855: V674 = ISZERO V673
0x856: V675 = 0x8c0
0x859: JUMPI 0x8c0 V674
---
Entry stack: [0xe3, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V672]
Exit stack: [0xe3, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V672]

================================

Block 0x85a
[0x85a:0x8bf]
---
Predecessors: [0x84e]
Successors: []
---
0x85a PUSH1 0x40
0x85c DUP1
0x85d MLOAD
0x85e PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x87f DUP2
0x880 MSTORE
0x881 PUSH1 0x20
0x883 PUSH1 0x4
0x885 DUP3
0x886 ADD
0x887 MSTORE
0x888 PUSH1 0x13
0x88a PUSH1 0x24
0x88c DUP3
0x88d ADD
0x88e MSTORE
0x88f PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0x8b0 PUSH1 0x44
0x8b2 DUP3
0x8b3 ADD
0x8b4 MSTORE
0x8b5 SWAP1
0x8b6 MLOAD
0x8b7 SWAP1
0x8b8 DUP2
0x8b9 SWAP1
0x8ba SUB
0x8bb PUSH1 0x64
0x8bd ADD
0x8be SWAP1
0x8bf REVERT
---
0x85a: V676 = 0x40
0x85d: V677 = M[0x40]
0x85e: V678 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x880: M[V677] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x881: V679 = 0x20
0x883: V680 = 0x4
0x886: V681 = ADD V677 0x4
0x887: M[V681] = 0x20
0x888: V682 = 0x13
0x88a: V683 = 0x24
0x88d: V684 = ADD V677 0x24
0x88e: M[V684] = 0x13
0x88f: V685 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x8b0: V686 = 0x44
0x8b3: V687 = ADD V677 0x44
0x8b4: M[V687] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x8b6: V688 = M[0x40]
0x8ba: V689 = SUB V677 V688
0x8bb: V690 = 0x64
0x8bd: V691 = ADD 0x64 V689
0x8bf: REVERT V688 V691
---
Entry stack: [0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V672]
Stack pops: 0
Stack additions: []
Exit stack: [0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V672]

================================

Block 0x8c0
[0x8c0:0x8c5]
---
Predecessors: [0x84e]
Successors: [0x6ed, 0x6f9]
---
0x8c0 JUMPDEST
0x8c1 SWAP3
0x8c2 SWAP2
0x8c3 POP
0x8c4 POP
0x8c5 JUMP
---
0x8c0: JUMPDEST 
0x8c5: JUMP S3
---
Entry stack: [0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V672]
Stack pops: 4
Stack additions: [S0]
Exit stack: [0xe3, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V672]

================================

Block 0x8c6
[0x8c6:0x8d5]
---
Predecessors: [0x102, 0x79f]
Successors: [0x110, 0x7ad]
---
0x8c6 JUMPDEST
0x8c7 PUSH1 0x40
0x8c9 MLOAD
0x8ca PUSH2 0x30b
0x8cd DUP1
0x8ce PUSH2 0x927
0x8d1 DUP4
0x8d2 CODECOPY
0x8d3 ADD
0x8d4 SWAP1
0x8d5 JUMP
---
0x8c6: JUMPDEST 
0x8c7: V692 = 0x40
0x8c9: V693 = M[0x40]
0x8ca: V694 = 0x30b
0x8ce: V695 = 0x927
0x8d2: CODECOPY V693 0x927 0x30b
0x8d3: V696 = ADD 0x30b V693
0x8d5: JUMP {0x110, 0x7ad}
---
Entry stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ce}, S4, S3, S2, S1, {0x110, 0x7ad}]
Stack pops: 1
Stack additions: [V696]
Exit stack: [V11, 0xe3, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x3ce}, S4, S3, S2, S1, V696]

================================

Block 0x8d6
[0x8d6:0x8e3]
---
Predecessors: [0x40c, 0x541]
Successors: [0x849, 0x8e4]
---
0x8d6 JUMPDEST
0x8d7 DUP2
0x8d8 SLOAD
0x8d9 DUP2
0x8da DUP4
0x8db SSTORE
0x8dc DUP2
0x8dd DUP2
0x8de GT
0x8df ISZERO
0x8e0 PUSH2 0x849
0x8e3 JUMPI
---
0x8d6: JUMPDEST 
0x8d8: V697 = S[0x4]
0x8db: S[0x4] = S0
0x8de: V698 = GT V697 S0
0x8df: V699 = ISZERO V698
0x8e0: V700 = 0x849
0x8e3: JUMPI 0x849 V699
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x443, 0x578}, 0x4, S0]
Stack pops: 2
Stack additions: [S1, S0, V697]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x443, 0x578}, 0x4, S0, V697]

================================

Block 0x8e4
[0x8e4:0x90a]
---
Predecessors: [0x8d6]
Successors: [0x90b]
---
0x8e4 PUSH1 0x1f
0x8e6 ADD
0x8e7 PUSH1 0x20
0x8e9 SWAP1
0x8ea DIV
0x8eb DUP2
0x8ec PUSH1 0x1f
0x8ee ADD
0x8ef PUSH1 0x20
0x8f1 SWAP1
0x8f2 DIV
0x8f3 DUP4
0x8f4 PUSH1 0x0
0x8f6 MSTORE
0x8f7 PUSH1 0x20
0x8f9 PUSH1 0x0
0x8fb SHA3
0x8fc SWAP2
0x8fd DUP3
0x8fe ADD
0x8ff SWAP2
0x900 ADD
0x901 PUSH2 0x849
0x904 SWAP2
0x905 SWAP1
0x906 PUSH2 0x923
0x909 SWAP2
0x90a SWAP1
---
0x8e4: V701 = 0x1f
0x8e6: V702 = ADD 0x1f V697
0x8e7: V703 = 0x20
0x8ea: V704 = DIV V702 0x20
0x8ec: V705 = 0x1f
0x8ee: V706 = ADD 0x1f S1
0x8ef: V707 = 0x20
0x8f2: V708 = DIV V706 0x20
0x8f4: V709 = 0x0
0x8f6: M[0x0] = 0x4
0x8f7: V710 = 0x20
0x8f9: V711 = 0x0
0x8fb: V712 = SHA3 0x0 0x20
0x8fe: V713 = ADD V712 V704
0x900: V714 = ADD V712 V708
0x901: V715 = 0x849
0x906: V716 = 0x923
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x443, 0x578}, 0x4, S1, V697]
Stack pops: 3
Stack additions: [S2, S1, 0x849, 0x923, V713, V714]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x443, 0x578}, 0x4, S1, 0x849, 0x923, V713, V714]

================================

Block 0x90b
[0x90b:0x913]
---
Predecessors: [0x8e4, 0x914]
Successors: [0x914, 0x91f]
---
0x90b JUMPDEST
0x90c DUP1
0x90d DUP3
0x90e GT
0x90f ISZERO
0x910 PUSH2 0x91f
0x913 JUMPI
---
0x90b: JUMPDEST 
0x90e: V717 = GT S1 S0
0x90f: V718 = ISZERO V717
0x910: V719 = 0x91f
0x913: JUMPI 0x91f V718
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x443, 0x578}, 0x4, S4, 0x849, 0x923, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x443, 0x578}, 0x4, S4, 0x849, 0x923, S1, S0]

================================

Block 0x914
[0x914:0x91e]
---
Predecessors: [0x90b]
Successors: [0x90b]
---
0x914 PUSH1 0x0
0x916 DUP2
0x917 SSTORE
0x918 PUSH1 0x1
0x91a ADD
0x91b PUSH2 0x90b
0x91e JUMP
---
0x914: V720 = 0x0
0x917: S[S0] = 0x0
0x918: V721 = 0x1
0x91a: V722 = ADD 0x1 S0
0x91b: V723 = 0x90b
0x91e: JUMP 0x90b
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x443, 0x578}, 0x4, S4, 0x849, 0x923, S1, S0]
Stack pops: 1
Stack additions: [V722]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x443, 0x578}, 0x4, S4, 0x849, 0x923, S1, V722]

================================

Block 0x91f
[0x91f:0x922]
---
Predecessors: [0x90b]
Successors: [0x923]
---
0x91f JUMPDEST
0x920 POP
0x921 SWAP1
0x922 JUMP
---
0x91f: JUMPDEST 
0x922: JUMP 0x923
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x443, 0x578}, 0x4, S4, 0x849, 0x923, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x443, 0x578}, 0x4, S4, 0x849, S1]

================================

Block 0x923
[0x923:0x925]
---
Predecessors: [0x91f]
Successors: [0x849]
---
0x923 JUMPDEST
0x924 SWAP1
0x925 JUMP
---
0x923: JUMPDEST 
0x925: JUMP 0x849
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x443, 0x578}, 0x4, S2, 0x849, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x443, 0x578}, 0x4, S2, S0]

================================

Block 0x926
[0x926:0x95b]
---
Predecessors: []
Successors: [0x95c]
---
0x926 STOP
0x927 PUSH1 0x80
0x929 PUSH1 0x40
0x92b MSTORE
0x92c PUSH1 0x40
0x92e MLOAD
0x92f PUSH2 0x30b
0x932 CODESIZE
0x933 SUB
0x934 DUP1
0x935 PUSH2 0x30b
0x938 DUP4
0x939 CODECOPY
0x93a DUP2
0x93b ADD
0x93c PUSH1 0x40
0x93e SWAP1
0x93f DUP2
0x940 MSTORE
0x941 DUP2
0x942 MLOAD
0x943 PUSH1 0x20
0x945 DUP4
0x946 ADD
0x947 MLOAD
0x948 SWAP2
0x949 DUP4
0x94a ADD
0x94b MLOAD
0x94c SWAP3
0x94d ADD
0x94e DUP1
0x94f MLOAD
0x950 SWAP1
0x951 SWAP3
0x952 SWAP1
0x953 PUSH1 0xff
0x955 DUP4
0x956 AND
0x957 EQ
0x958 PUSH2 0x1b6
0x95b JUMPI
---
0x926: STOP 
0x927: V724 = 0x80
0x929: V725 = 0x40
0x92b: M[0x40] = 0x80
0x92c: V726 = 0x40
0x92e: V727 = M[0x40]
0x92f: V728 = 0x30b
0x932: V729 = CODESIZE
0x933: V730 = SUB V729 0x30b
0x935: V731 = 0x30b
0x939: CODECOPY V727 0x30b V730
0x93b: V732 = ADD V727 V730
0x93c: V733 = 0x40
0x940: M[0x40] = V732
0x942: V734 = M[V727]
0x943: V735 = 0x20
0x946: V736 = ADD V727 0x20
0x947: V737 = M[V736]
0x94a: V738 = ADD V727 0x40
0x94b: V739 = M[V738]
0x94d: V740 = ADD V727 V734
0x94f: V741 = M[V740]
0x953: V742 = 0xff
0x956: V743 = AND V737 0xff
0x957: V744 = EQ V743 V741
0x958: V745 = 0x1b6
0x95b: THROWI V744
---
Entry stack: []
Stack pops: 0
Stack additions: [V739, V737, V740]
Exit stack: []

================================

Block 0x95c
[0x95c:0x96a]
---
Predecessors: [0x926]
Successors: [0x96b]
---
0x95c DUP3
0x95d DUP3
0x95e PUSH1 0xff
0x960 AND
0x961 DUP2
0x962 MLOAD
0x963 DUP2
0x964 LT
0x965 ISZERO
0x966 ISZERO
0x967 PUSH2 0x45
0x96a JUMPI
---
0x95e: V746 = 0xff
0x960: V747 = AND 0xff V737
0x962: V748 = M[V740]
0x964: V749 = LT V747 V748
0x965: V750 = ISZERO V749
0x966: V751 = ISZERO V750
0x967: V752 = 0x45
0x96a: THROWI V751
---
Entry stack: [V740, V737, V739]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, V747]
Exit stack: [V740, V737, V739, V740, V747]

================================

Block 0x96b
[0x96b:0x982]
---
Predecessors: [0x95c]
Successors: [0x983]
---
0x96b INVALID
0x96c JUMPDEST
0x96d SWAP1
0x96e PUSH1 0x20
0x970 ADD
0x971 SWAP1
0x972 PUSH1 0x20
0x974 MUL
0x975 ADD
0x976 MLOAD
0x977 ISZERO
0x978 ISZERO
0x979 PUSH1 0x1
0x97b ISZERO
0x97c ISZERO
0x97d EQ
0x97e ISZERO
0x97f PUSH2 0x82
0x982 JUMPI
---
0x96b: INVALID 
0x96c: JUMPDEST 
0x96e: V753 = 0x20
0x970: V754 = ADD 0x20 S1
0x972: V755 = 0x20
0x974: V756 = MUL 0x20 S0
0x975: V757 = ADD V756 V754
0x976: V758 = M[V757]
0x977: V759 = ISZERO V758
0x978: V760 = ISZERO V759
0x979: V761 = 0x1
0x97b: V762 = ISZERO 0x1
0x97c: V763 = ISZERO 0x0
0x97d: V764 = EQ 0x1 V760
0x97e: V765 = ISZERO V764
0x97f: V766 = 0x82
0x982: THROWI V765
---
Entry stack: [V740, V737, V739, V740, V747]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x983
[0x983:0x99c]
---
Predecessors: [0x96b]
Successors: [0x99d]
---
0x983 PUSH2 0x63
0x986 PUSH2 0x267
0x989 JUMP
0x98a JUMPDEST
0x98b PUSH1 0x40
0x98d MLOAD
0x98e DUP1
0x98f SWAP2
0x990 SUB
0x991 SWAP1
0x992 PUSH1 0x0
0x994 CREATE
0x995 DUP1
0x996 ISZERO
0x997 DUP1
0x998 ISZERO
0x999 PUSH2 0x7f
0x99c JUMPI
---
0x983: V767 = 0x63
0x986: V768 = 0x267
0x989: THROW 
0x98a: JUMPDEST 
0x98b: V769 = 0x40
0x98d: V770 = M[0x40]
0x990: V771 = SUB S0 V770
0x992: V772 = 0x0
0x994: V773 = CREATE 0x0 V770 V771
0x996: V774 = ISZERO V773
0x998: V775 = ISZERO V774
0x999: V776 = 0x7f
0x99c: THROWI V775
---
Entry stack: []
Stack pops: 0
Stack additions: [0x63, V774, V773]
Exit stack: []

================================

Block 0x99d
[0x99d:0x9a8]
---
Predecessors: [0x983]
Successors: [0x9a9]
---
0x99d RETURNDATASIZE
0x99e PUSH1 0x0
0x9a0 DUP1
0x9a1 RETURNDATACOPY
0x9a2 RETURNDATASIZE
0x9a3 PUSH1 0x0
0x9a5 REVERT
0x9a6 JUMPDEST
0x9a7 POP
0x9a8 POP
---
0x99d: V777 = RETURNDATASIZE
0x99e: V778 = 0x0
0x9a1: RETURNDATACOPY 0x0 0x0 V777
0x9a2: V779 = RETURNDATASIZE
0x9a3: V780 = 0x0
0x9a5: REVERT 0x0 V779
0x9a6: JUMPDEST 
---
Entry stack: [V773, V774]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9a9
[0x9a9:0xa74]
---
Predecessors: [0x99d]
Successors: [0xa75]
---
0x9a9 JUMPDEST
0x9aa DUP1
0x9ab PUSH1 0x1
0x9ad PUSH1 0xa0
0x9af PUSH1 0x2
0x9b1 EXP
0x9b2 SUB
0x9b3 AND
0x9b4 PUSH1 0x40
0x9b6 MLOAD
0x9b7 DUP1
0x9b8 DUP1
0x9b9 PUSH32 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0x9da DUP2
0x9db MSTORE
0x9dc PUSH1 0x20
0x9de ADD
0x9df PUSH32 0x6472657373290000000000000000000000000000000000000000000000000000
0xa00 DUP2
0xa01 MSTORE
0xa02 POP
0xa03 PUSH1 0x26
0xa05 ADD
0xa06 SWAP1
0xa07 POP
0xa08 PUSH1 0x40
0xa0a MLOAD
0xa0b DUP1
0xa0c SWAP2
0xa0d SUB
0xa0e SWAP1
0xa0f SHA3
0xa10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa2e SWAP1
0xa2f DIV
0xa30 DUP5
0xa31 DUP5
0xa32 PUSH1 0x1
0xa34 ADD
0xa35 DUP5
0xa36 PUSH1 0x40
0xa38 MLOAD
0xa39 DUP5
0xa3a PUSH4 0xffffffff
0xa3f AND
0xa40 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa5e MUL
0xa5f DUP2
0xa60 MSTORE
0xa61 PUSH1 0x4
0xa63 ADD
0xa64 DUP1
0xa65 DUP5
0xa66 DUP1
0xa67 MLOAD
0xa68 SWAP1
0xa69 PUSH1 0x20
0xa6b ADD
0xa6c SWAP1
0xa6d PUSH1 0x20
0xa6f MUL
0xa70 DUP1
0xa71 DUP4
0xa72 DUP4
0xa73 PUSH1 0x0
---
0x9a9: JUMPDEST 
0x9ab: V781 = 0x1
0x9ad: V782 = 0xa0
0x9af: V783 = 0x2
0x9b1: V784 = EXP 0x2 0xa0
0x9b2: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b3: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x9b4: V787 = 0x40
0x9b6: V788 = M[0x40]
0x9b9: V789 = 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0x9db: M[V788] = 0x6465706c6f794465706c6f79657228626f6f6c5b5d2c2075696e74382c206164
0x9dc: V790 = 0x20
0x9de: V791 = ADD 0x20 V788
0x9df: V792 = 0x6472657373290000000000000000000000000000000000000000000000000000
0xa01: M[V791] = 0x6472657373290000000000000000000000000000000000000000000000000000
0xa03: V793 = 0x26
0xa05: V794 = ADD 0x26 V788
0xa08: V795 = 0x40
0xa0a: V796 = M[0x40]
0xa0d: V797 = SUB V794 V796
0xa0f: V798 = SHA3 V796 V797
0xa10: V799 = 0x100000000000000000000000000000000000000000000000000000000
0xa2f: V800 = DIV V798 0x100000000000000000000000000000000000000000000000000000000
0xa32: V801 = 0x1
0xa34: V802 = ADD 0x1 S1
0xa36: V803 = 0x40
0xa38: V804 = M[0x40]
0xa3a: V805 = 0xffffffff
0xa3f: V806 = AND 0xffffffff V800
0xa40: V807 = 0x100000000000000000000000000000000000000000000000000000000
0xa5e: V808 = MUL 0x100000000000000000000000000000000000000000000000000000000 V806
0xa60: M[V804] = V808
0xa61: V809 = 0x4
0xa63: V810 = ADD 0x4 V804
0xa67: V811 = M[S2]
0xa69: V812 = 0x20
0xa6b: V813 = ADD 0x20 S2
0xa6d: V814 = 0x20
0xa6f: V815 = MUL 0x20 V811
0xa73: V816 = 0x0
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0, V786, V800, S2, V802, S0, V810, V810, V813, V815, V815, V810, V813, 0x0]
Exit stack: [S2, S1, S0, V786, V800, S2, V802, S0, V810, V810, V813, V815, V815, V810, V813, 0x0]

================================

Block 0xa75
[0xa75:0xa7d]
---
Predecessors: [0x9a9]
Successors: [0xa7e]
---
0xa75 JUMPDEST
0xa76 DUP4
0xa77 DUP2
0xa78 LT
0xa79 ISZERO
0xa7a PUSH2 0x166
0xa7d JUMPI
---
0xa75: JUMPDEST 
0xa78: V817 = LT 0x0 V815
0xa79: V818 = ISZERO V817
0xa7a: V819 = 0x166
0xa7d: THROWI V818
---
Entry stack: [S15, S14, S13, V786, V800, S10, V802, S8, V810, V810, V813, V815, V815, V810, V813, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S15, S14, S13, V786, V800, S10, V802, S8, V810, V810, V813, V815, V815, V810, V813, 0x0]

================================

Block 0xa7e
[0xa7e:0xad3]
---
Predecessors: [0xa75]
Successors: [0xad4]
---
0xa7e DUP2
0xa7f DUP2
0xa80 ADD
0xa81 MLOAD
0xa82 DUP4
0xa83 DUP3
0xa84 ADD
0xa85 MSTORE
0xa86 PUSH1 0x20
0xa88 ADD
0xa89 PUSH2 0x14e
0xa8c JUMP
0xa8d JUMPDEST
0xa8e POP
0xa8f POP
0xa90 POP
0xa91 POP
0xa92 SWAP1
0xa93 POP
0xa94 ADD
0xa95 DUP4
0xa96 PUSH1 0xff
0xa98 AND
0xa99 PUSH1 0xff
0xa9b AND
0xa9c DUP2
0xa9d MSTORE
0xa9e PUSH1 0x20
0xaa0 ADD
0xaa1 DUP3
0xaa2 PUSH1 0x1
0xaa4 PUSH1 0xa0
0xaa6 PUSH1 0x2
0xaa8 EXP
0xaa9 SUB
0xaaa AND
0xaab PUSH1 0x1
0xaad PUSH1 0xa0
0xaaf PUSH1 0x2
0xab1 EXP
0xab2 SUB
0xab3 AND
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0x20
0xab8 ADD
0xab9 SWAP4
0xaba POP
0xabb POP
0xabc POP
0xabd POP
0xabe PUSH1 0x0
0xac0 PUSH1 0x40
0xac2 MLOAD
0xac3 DUP1
0xac4 DUP4
0xac5 SUB
0xac6 DUP2
0xac7 DUP7
0xac8 GAS
0xac9 DELEGATECALL
0xaca SWAP3
0xacb POP
0xacc POP
0xacd POP
0xace ISZERO
0xacf ISZERO
0xad0 PUSH2 0x1b1
0xad3 JUMPI
---
0xa80: V820 = ADD 0x0 V813
0xa81: V821 = M[V820]
0xa84: V822 = ADD 0x0 V810
0xa85: M[V822] = V821
0xa86: V823 = 0x20
0xa88: V824 = ADD 0x20 0x0
0xa89: V825 = 0x14e
0xa8c: THROW 
0xa8d: JUMPDEST 
0xa94: V826 = ADD S4 S6
0xa96: V827 = 0xff
0xa98: V828 = AND 0xff S9
0xa99: V829 = 0xff
0xa9b: V830 = AND 0xff V828
0xa9d: M[V826] = V830
0xa9e: V831 = 0x20
0xaa0: V832 = ADD 0x20 V826
0xaa2: V833 = 0x1
0xaa4: V834 = 0xa0
0xaa6: V835 = 0x2
0xaa8: V836 = EXP 0x2 0xa0
0xaa9: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaaa: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xaab: V839 = 0x1
0xaad: V840 = 0xa0
0xaaf: V841 = 0x2
0xab1: V842 = EXP 0x2 0xa0
0xab2: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab3: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0xab5: M[V832] = V844
0xab6: V845 = 0x20
0xab8: V846 = ADD 0x20 V832
0xabe: V847 = 0x0
0xac0: V848 = 0x40
0xac2: V849 = M[0x40]
0xac5: V850 = SUB V846 V849
0xac8: V851 = GAS
0xac9: V852 = DELEGATECALL V851 S12 V849 V850 V849 0x0
0xace: V853 = ISZERO V852
0xacf: V854 = ISZERO V853
0xad0: V855 = 0x1b1
0xad3: THROWI V854
---
Entry stack: [S15, S14, S13, V786, V800, S10, V802, S8, V810, V810, V813, V815, V815, V810, V813, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xad4
[0xad4:0xb81]
---
Predecessors: [0xa7e]
Successors: [0xb82]
---
0xad4 PUSH1 0x0
0xad6 DUP1
0xad7 REVERT
0xad8 JUMPDEST
0xad9 PUSH2 0x25f
0xadc JUMP
0xadd JUMPDEST
0xade DUP1
0xadf PUSH1 0x1
0xae1 PUSH1 0xa0
0xae3 PUSH1 0x2
0xae5 EXP
0xae6 SUB
0xae7 AND
0xae8 PUSH1 0x40
0xaea MLOAD
0xaeb DUP1
0xaec DUP1
0xaed PUSH32 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb0e DUP2
0xb0f MSTORE
0xb10 POP
0xb11 PUSH1 0xc
0xb13 ADD
0xb14 SWAP1
0xb15 POP
0xb16 PUSH1 0x40
0xb18 MLOAD
0xb19 DUP1
0xb1a SWAP2
0xb1b SUB
0xb1c SWAP1
0xb1d SHA3
0xb1e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb3c SWAP1
0xb3d DIV
0xb3e PUSH1 0x40
0xb40 MLOAD
0xb41 DUP2
0xb42 PUSH4 0xffffffff
0xb47 AND
0xb48 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb66 MUL
0xb67 DUP2
0xb68 MSTORE
0xb69 PUSH1 0x4
0xb6b ADD
0xb6c PUSH1 0x0
0xb6e PUSH1 0x40
0xb70 MLOAD
0xb71 DUP1
0xb72 DUP4
0xb73 SUB
0xb74 DUP2
0xb75 DUP7
0xb76 GAS
0xb77 DELEGATECALL
0xb78 SWAP3
0xb79 POP
0xb7a POP
0xb7b POP
0xb7c ISZERO
0xb7d ISZERO
0xb7e PUSH2 0x25f
0xb81 JUMPI
---
0xad4: V856 = 0x0
0xad7: REVERT 0x0 0x0
0xad8: JUMPDEST 
0xad9: V857 = 0x25f
0xadc: THROW 
0xadd: JUMPDEST 
0xadf: V858 = 0x1
0xae1: V859 = 0xa0
0xae3: V860 = 0x2
0xae5: V861 = EXP 0x2 0xa0
0xae6: V862 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae7: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xae8: V864 = 0x40
0xaea: V865 = M[0x40]
0xaed: V866 = 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb0f: M[V865] = 0x77696e41697264726f7028290000000000000000000000000000000000000000
0xb11: V867 = 0xc
0xb13: V868 = ADD 0xc V865
0xb16: V869 = 0x40
0xb18: V870 = M[0x40]
0xb1b: V871 = SUB V868 V870
0xb1d: V872 = SHA3 V870 V871
0xb1e: V873 = 0x100000000000000000000000000000000000000000000000000000000
0xb3d: V874 = DIV V872 0x100000000000000000000000000000000000000000000000000000000
0xb3e: V875 = 0x40
0xb40: V876 = M[0x40]
0xb42: V877 = 0xffffffff
0xb47: V878 = AND 0xffffffff V874
0xb48: V879 = 0x100000000000000000000000000000000000000000000000000000000
0xb66: V880 = MUL 0x100000000000000000000000000000000000000000000000000000000 V878
0xb68: M[V876] = V880
0xb69: V881 = 0x4
0xb6b: V882 = ADD 0x4 V876
0xb6c: V883 = 0x0
0xb6e: V884 = 0x40
0xb70: V885 = M[0x40]
0xb73: V886 = SUB V882 V885
0xb76: V887 = GAS
0xb77: V888 = DELEGATECALL V887 V863 V885 V886 V885 0x0
0xb7c: V889 = ISZERO V888
0xb7d: V890 = ISZERO V889
0xb7e: V891 = 0x25f
0xb81: THROWI V890
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xb82
[0xb82:0xbea]
---
Predecessors: [0xad4]
Successors: [0xbeb]
---
0xb82 PUSH1 0x0
0xb84 DUP1
0xb85 REVERT
0xb86 JUMPDEST
0xb87 POP
0xb88 POP
0xb89 POP
0xb8a PUSH2 0x276
0xb8d JUMP
0xb8e JUMPDEST
0xb8f PUSH1 0x40
0xb91 MLOAD
0xb92 PUSH1 0x52
0xb94 DUP1
0xb95 PUSH2 0x2b9
0xb98 DUP4
0xb99 CODECOPY
0xb9a ADD
0xb9b SWAP1
0xb9c JUMP
0xb9d JUMPDEST
0xb9e PUSH1 0x35
0xba0 DUP1
0xba1 PUSH2 0x284
0xba4 PUSH1 0x0
0xba6 CODECOPY
0xba7 PUSH1 0x0
0xba9 RETURN
0xbaa STOP
0xbab PUSH1 0x80
0xbad PUSH1 0x40
0xbaf MSTORE
0xbb0 PUSH1 0x0
0xbb2 DUP1
0xbb3 REVERT
0xbb4 STOP
0xbb5 LOG1
0xbb6 PUSH6 0x627a7a723058
0xbbd SHA3
0xbbe COINBASE
0xbbf PUSH21 0x921d79a76edc126c94385f92938a7e03584d36d058
0xbd5 SWAP5
0xbd6 MISSING 0xe
0xbd7 LOG1
0xbd8 MISSING 0xf7
0xbd9 MISSING 0xd8
0xbda MISSING 0xf9
0xbdb SWAP16
0xbdc SLT
0xbdd MISSING 0xb9
0xbde STOP
0xbdf MISSING 0x29
0xbe0 PUSH1 0x80
0xbe2 PUSH1 0x40
0xbe4 MSTORE
0xbe5 CALLVALUE
0xbe6 DUP1
0xbe7 ISZERO
0xbe8 PUSH1 0xf
0xbea JUMPI
---
0xb82: V892 = 0x0
0xb85: REVERT 0x0 0x0
0xb86: JUMPDEST 
0xb8a: V893 = 0x276
0xb8d: THROW 
0xb8e: JUMPDEST 
0xb8f: V894 = 0x40
0xb91: V895 = M[0x40]
0xb92: V896 = 0x52
0xb95: V897 = 0x2b9
0xb99: CODECOPY V895 0x2b9 0x52
0xb9a: V898 = ADD 0x52 V895
0xb9c: JUMP S0
0xb9d: JUMPDEST 
0xb9e: V899 = 0x35
0xba1: V900 = 0x284
0xba4: V901 = 0x0
0xba6: CODECOPY 0x0 0x284 0x35
0xba7: V902 = 0x0
0xba9: RETURN 0x0 0x35
0xbaa: STOP 
0xbab: V903 = 0x80
0xbad: V904 = 0x40
0xbaf: M[0x40] = 0x80
0xbb0: V905 = 0x0
0xbb3: REVERT 0x0 0x0
0xbb4: STOP 
0xbb5: LOG S0 S1 S2
0xbb6: V906 = 0x627a7a723058
0xbbd: V907 = SHA3 0x627a7a723058 S3
0xbbe: V908 = COINBASE
0xbbf: V909 = 0x921d79a76edc126c94385f92938a7e03584d36d058
0xbd6: MISSING 0xe
0xbd7: LOG S0 S1 S2
0xbd8: MISSING 0xf7
0xbd9: MISSING 0xd8
0xbda: MISSING 0xf9
0xbdc: V910 = SLT S16 S1
0xbdd: MISSING 0xb9
0xbde: STOP 
0xbdf: MISSING 0x29
0xbe0: V911 = 0x80
0xbe2: V912 = 0x40
0xbe4: M[0x40] = 0x80
0xbe5: V913 = CALLVALUE
0xbe7: V914 = ISZERO V913
0xbe8: V915 = 0xf
0xbea: THROWI V914
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V898, S6, V908, V907, S4, S5, 0x921d79a76edc126c94385f92938a7e03584d36d058, V910, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V913]
Exit stack: []

================================

Block 0xbeb
[0xbeb:0xc68]
---
Predecessors: [0xb82]
Successors: []
---
0xbeb PUSH1 0x0
0xbed DUP1
0xbee REVERT
0xbef JUMPDEST
0xbf0 POP
0xbf1 PUSH1 0x35
0xbf3 DUP1
0xbf4 PUSH1 0x1d
0xbf6 PUSH1 0x0
0xbf8 CODECOPY
0xbf9 PUSH1 0x0
0xbfb RETURN
0xbfc STOP
0xbfd PUSH1 0x80
0xbff PUSH1 0x40
0xc01 MSTORE
0xc02 PUSH1 0x0
0xc04 DUP1
0xc05 REVERT
0xc06 STOP
0xc07 LOG1
0xc08 PUSH6 0x627a7a723058
0xc0f SHA3
0xc10 MISSING 0xc5
0xc11 MISSING 0xe0
0xc12 STOP
0xc13 MISSING 0xb1
0xc14 MSTORE
0xc15 SWAP12
0xc16 MISSING 0xce
0xc17 DUP12
0xc18 CODESIZE
0xc19 MISSING 0xf8
0xc1a MISSING 0xd4
0xc1b MISSING 0x23
0xc1c AND
0xc1d SAR
0xc1e DUP8
0xc1f LOG0
0xc20 MISSING 0xae
0xc21 SWAP3
0xc22 GASPRICE
0xc23 MISSING 0xb9
0xc24 MISSING 0x2b
0xc25 MISSING 0xe6
0xc26 PUSH9 0xa7d3f0e2e722054a96
0xc30 STOP
0xc31 MISSING 0x29
0xc32 LOG1
0xc33 PUSH6 0x627a7a723058
0xc3a SHA3
0xc3b PUSH24 0xc8129dab6bc201c8bd0080b6f154a1a105240a7ccaa5742f
0xc54 CALLDATASIZE
0xc55 PUSH19 0xf9a2ae976c0029
---
0xbeb: V916 = 0x0
0xbee: REVERT 0x0 0x0
0xbef: JUMPDEST 
0xbf1: V917 = 0x35
0xbf4: V918 = 0x1d
0xbf6: V919 = 0x0
0xbf8: CODECOPY 0x0 0x1d 0x35
0xbf9: V920 = 0x0
0xbfb: RETURN 0x0 0x35
0xbfc: STOP 
0xbfd: V921 = 0x80
0xbff: V922 = 0x40
0xc01: M[0x40] = 0x80
0xc02: V923 = 0x0
0xc05: REVERT 0x0 0x0
0xc06: STOP 
0xc07: LOG S0 S1 S2
0xc08: V924 = 0x627a7a723058
0xc0f: V925 = SHA3 0x627a7a723058 S3
0xc10: MISSING 0xc5
0xc11: MISSING 0xe0
0xc12: STOP 
0xc13: MISSING 0xb1
0xc14: M[S0] = S1
0xc16: MISSING 0xce
0xc18: V926 = CODESIZE
0xc19: MISSING 0xf8
0xc1a: MISSING 0xd4
0xc1b: MISSING 0x23
0xc1c: V927 = AND S0 S1
0xc1d: V928 = SAR V927 S2
0xc1f: LOG S9 V928
0xc20: MISSING 0xae
0xc22: V929 = GASPRICE
0xc23: MISSING 0xb9
0xc24: MISSING 0x2b
0xc25: MISSING 0xe6
0xc26: V930 = 0xa7d3f0e2e722054a96
0xc30: STOP 
0xc31: MISSING 0x29
0xc32: LOG S0 S1 S2
0xc33: V931 = 0x627a7a723058
0xc3a: V932 = SHA3 0x627a7a723058 S3
0xc3b: V933 = 0xc8129dab6bc201c8bd0080b6f154a1a105240a7ccaa5742f
0xc54: V934 = CALLDATASIZE
0xc55: V935 = 0xf9a2ae976c0029
---
Entry stack: [V913]
Stack pops: 0
Stack additions: [V925, S14, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S2, V926, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S3, S4, S5, S6, S7, S8, S9, V929, S3, S1, S2, S0, 0xa7d3f0e2e722054a96, 0xf9a2ae976c0029, V934, 0xc8129dab6bc201c8bd0080b6f154a1a105240a7ccaa5742f, V932]
Exit stack: []

================================

Function 0:
Public function signature: 0x41b0a3ed
Entry block: 0x66
Exit block: 0xbf
Body: 0x66, 0xbf, 0x102, 0x110, 0x14b, 0x154, 0x163, 0x182, 0x18b

Function 1:
Public function signature: 0x7cadfa34
Entry block: 0xdb
Exit block: 0x840
Body: 0xdb, 0x195, 0x1fe, 0x202, 0x20d, 0x216, 0x274, 0x278, 0x283, 0x28c, 0x2a2, 0x2a6, 0x2de, 0x840

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xe5
Exit block: 0xbf
Body: 0xbf, 0xe5, 0xed, 0xf1, 0x2ea

Function 3:
Public function signature: 0xbe9a6555
Entry block: 0xfa
Exit block: 0x6db
Body: 0xfa, 0x2f9, 0x307, 0x6db

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

Function 5:
Private function
Entry block: 0x8d6
Exit block: 0x849
Body: 0x2e7, 0x307, 0x3b5, 0x3c1, 0x3c7, 0x3ce, 0x3d3, 0x3fb, 0x40c, 0x443, 0x461, 0x515, 0x541, 0x578, 0x57c, 0x5d8, 0x5e1, 0x5f7, 0x62d, 0x687, 0x690, 0x6a6, 0x6dc, 0x6ed, 0x6f9, 0x728, 0x731, 0x747, 0x78b, 0x793, 0x798, 0x79f, 0x7ad, 0x7e2, 0x7f5, 0x824, 0x826, 0x849, 0x84e, 0x8c0, 0x8d6, 0x8e4, 0x90b, 0x914, 0x91f, 0x923

