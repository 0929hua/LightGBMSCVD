Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x104]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6b9f96ea
0x3c EQ
0x3d PUSH2 0x104
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6b9f96ea
0x3c: V13 = EQ 0x6b9f96ea V11
0x3d: V14 = 0x104
0x40: JUMPI 0x104 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x11b]
---
0x41 DUP1
0x42 PUSH4 0xca325469
0x47 EQ
0x48 PUSH2 0x11b
0x4b JUMPI
---
0x42: V15 = 0xca325469
0x47: V16 = EQ 0xca325469 V11
0x48: V17 = 0x11b
0x4b: JUMPI 0x11b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0xf7]
---
Predecessors: [0x0, 0x41]
Successors: [0xf8, 0x101]
---
0x4c JUMPDEST
0x4d CALLER
0x4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63 AND
0x64 PUSH32 0x5bac0d4f99f71df67fa7cebba0369126a7cb2b183bcb02b8393dbf5185ba77b6
0x85 CALLVALUE
0x86 PUSH1 0x40
0x88 MLOAD
0x89 DUP1
0x8a DUP3
0x8b DUP2
0x8c MSTORE
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP2
0x91 POP
0x92 POP
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP1
0x97 SWAP2
0x98 SUB
0x99 SWAP1
0x9a LOG2
0x9b PUSH1 0x0
0x9d DUP1
0x9e SWAP1
0x9f SLOAD
0xa0 SWAP1
0xa1 PUSH2 0x100
0xa4 EXP
0xa5 SWAP1
0xa6 DIV
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2 AND
0xd3 PUSH2 0x8fc
0xd6 CALLVALUE
0xd7 SWAP1
0xd8 DUP2
0xd9 ISZERO
0xda MUL
0xdb SWAP1
0xdc PUSH1 0x40
0xde MLOAD
0xdf PUSH1 0x0
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 DUP1
0xe5 DUP4
0xe6 SUB
0xe7 DUP2
0xe8 DUP6
0xe9 DUP9
0xea DUP9
0xeb CALL
0xec SWAP4
0xed POP
0xee POP
0xef POP
0xf0 POP
0xf1 ISZERO
0xf2 DUP1
0xf3 ISZERO
0xf4 PUSH2 0x101
0xf7 JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = CALLER
0x4e: V19 = 0xffffffffffffffffffffffffffffffffffffffff
0x63: V20 = AND 0xffffffffffffffffffffffffffffffffffffffff V18
0x64: V21 = 0x5bac0d4f99f71df67fa7cebba0369126a7cb2b183bcb02b8393dbf5185ba77b6
0x85: V22 = CALLVALUE
0x86: V23 = 0x40
0x88: V24 = M[0x40]
0x8c: M[V24] = V22
0x8d: V25 = 0x20
0x8f: V26 = ADD 0x20 V24
0x93: V27 = 0x40
0x95: V28 = M[0x40]
0x98: V29 = SUB V26 V28
0x9a: LOG V28 V29 0x5bac0d4f99f71df67fa7cebba0369126a7cb2b183bcb02b8393dbf5185ba77b6 V20
0x9b: V30 = 0x0
0x9f: V31 = S[0x0]
0xa1: V32 = 0x100
0xa4: V33 = EXP 0x100 0x0
0xa6: V34 = DIV V31 0x1
0xa7: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xbd: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xd3: V39 = 0x8fc
0xd6: V40 = CALLVALUE
0xd9: V41 = ISZERO V40
0xda: V42 = MUL V41 0x8fc
0xdc: V43 = 0x40
0xde: V44 = M[0x40]
0xdf: V45 = 0x0
0xe1: V46 = 0x40
0xe3: V47 = M[0x40]
0xe6: V48 = SUB V44 V47
0xeb: V49 = CALL V42 V38 V40 V47 V48 V47 0x0
0xf1: V50 = ISZERO V49
0xf3: V51 = ISZERO V50
0xf4: V52 = 0x101
0xf7: JUMPI 0x101 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xf8
[0xf8:0x100]
---
Predecessors: [0x4c]
Successors: []
---
0xf8 RETURNDATASIZE
0xf9 PUSH1 0x0
0xfb DUP1
0xfc RETURNDATACOPY
0xfd RETURNDATASIZE
0xfe PUSH1 0x0
0x100 REVERT
---
0xf8: V53 = RETURNDATASIZE
0xf9: V54 = 0x0
0xfc: RETURNDATACOPY 0x0 0x0 V53
0xfd: V55 = RETURNDATASIZE
0xfe: V56 = 0x0
0x100: REVERT 0x0 V55
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0x101
[0x101:0x103]
---
Predecessors: [0x4c]
Successors: []
---
0x101 JUMPDEST
0x102 POP
0x103 STOP
---
0x101: JUMPDEST 
0x103: STOP 
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0xd]
Successors: [0x10c, 0x110]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 DUP1
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x104: JUMPDEST 
0x105: V57 = CALLVALUE
0x107: V58 = ISZERO V57
0x108: V59 = 0x110
0x10b: JUMPI 0x110 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x104]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V60 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0x110
[0x110:0x118]
---
Predecessors: [0x104]
Successors: [0x172]
---
0x110 JUMPDEST
0x111 POP
0x112 PUSH2 0x119
0x115 PUSH2 0x172
0x118 JUMP
---
0x110: JUMPDEST 
0x112: V61 = 0x119
0x115: V62 = 0x172
0x118: JUMP 0x172
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x119]
Exit stack: [V11, 0x119]

================================

Block 0x119
[0x119:0x11a]
---
Predecessors: [0x255]
Successors: []
---
0x119 JUMPDEST
0x11a STOP
---
0x119: JUMPDEST 
0x11a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x41]
Successors: [0x123, 0x127]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d DUP1
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11b: JUMPDEST 
0x11c: V63 = CALLVALUE
0x11e: V64 = ISZERO V63
0x11f: V65 = 0x127
0x122: JUMPI 0x127 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11b]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V66 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0x127
[0x127:0x12f]
---
Predecessors: [0x11b]
Successors: [0x258]
---
0x127 JUMPDEST
0x128 POP
0x129 PUSH2 0x130
0x12c PUSH2 0x258
0x12f JUMP
---
0x127: JUMPDEST 
0x129: V67 = 0x130
0x12c: V68 = 0x258
0x12f: JUMP 0x258
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x130
[0x130:0x171]
---
Predecessors: [0x258]
Successors: []
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 MLOAD
0x134 DUP1
0x135 DUP3
0x136 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14b AND
0x14c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161 AND
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 SWAP2
0x168 POP
0x169 POP
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e SWAP2
0x16f SUB
0x170 SWAP1
0x171 RETURN
---
0x130: JUMPDEST 
0x131: V69 = 0x40
0x133: V70 = M[0x40]
0x136: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x14c: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x161: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x163: M[V70] = V74
0x164: V75 = 0x20
0x166: V76 = ADD 0x20 V70
0x16a: V77 = 0x40
0x16c: V78 = M[0x40]
0x16f: V79 = SUB V76 V78
0x171: RETURN V78 V79
---
Entry stack: [V11, 0x130, V131]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x172
[0x172:0x24b]
---
Predecessors: [0x110]
Successors: [0x24c, 0x255]
---
0x172 JUMPDEST
0x173 CALLER
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a PUSH32 0xa98efcd54f1f2ae5457ba3c68d7cf8974003a2bfce00f526f5624264a87bc0ea
0x1ab ADDRESS
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 BALANCE
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 DUP3
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP2
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 SWAP2
0x1d5 SUB
0x1d6 SWAP1
0x1d7 LOG2
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db SWAP1
0x1dc SLOAD
0x1dd SWAP1
0x1de PUSH2 0x100
0x1e1 EXP
0x1e2 SWAP1
0x1e3 DIV
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20f AND
0x210 PUSH2 0x8fc
0x213 ADDRESS
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a BALANCE
0x22b SWAP1
0x22c DUP2
0x22d ISZERO
0x22e MUL
0x22f SWAP1
0x230 PUSH1 0x40
0x232 MLOAD
0x233 PUSH1 0x0
0x235 PUSH1 0x40
0x237 MLOAD
0x238 DUP1
0x239 DUP4
0x23a SUB
0x23b DUP2
0x23c DUP6
0x23d DUP9
0x23e DUP9
0x23f CALL
0x240 SWAP4
0x241 POP
0x242 POP
0x243 POP
0x244 POP
0x245 ISZERO
0x246 DUP1
0x247 ISZERO
0x248 PUSH2 0x255
0x24b JUMPI
---
0x172: JUMPDEST 
0x173: V80 = CALLER
0x174: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x18a: V83 = 0xa98efcd54f1f2ae5457ba3c68d7cf8974003a2bfce00f526f5624264a87bc0ea
0x1ab: V84 = ADDRESS
0x1ac: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1c2: V87 = BALANCE V86
0x1c3: V88 = 0x40
0x1c5: V89 = M[0x40]
0x1c9: M[V89] = V87
0x1ca: V90 = 0x20
0x1cc: V91 = ADD 0x20 V89
0x1d0: V92 = 0x40
0x1d2: V93 = M[0x40]
0x1d5: V94 = SUB V91 V93
0x1d7: LOG V93 V94 0xa98efcd54f1f2ae5457ba3c68d7cf8974003a2bfce00f526f5624264a87bc0ea V82
0x1d8: V95 = 0x0
0x1dc: V96 = S[0x0]
0x1de: V97 = 0x100
0x1e1: V98 = EXP 0x100 0x0
0x1e3: V99 = DIV V96 0x1
0x1e4: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1fa: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x20f: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x210: V104 = 0x8fc
0x213: V105 = ADDRESS
0x214: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x22a: V108 = BALANCE V107
0x22d: V109 = ISZERO V108
0x22e: V110 = MUL V109 0x8fc
0x230: V111 = 0x40
0x232: V112 = M[0x40]
0x233: V113 = 0x0
0x235: V114 = 0x40
0x237: V115 = M[0x40]
0x23a: V116 = SUB V112 V115
0x23f: V117 = CALL V110 V103 V108 V115 V116 V115 0x0
0x245: V118 = ISZERO V117
0x247: V119 = ISZERO V118
0x248: V120 = 0x255
0x24b: JUMPI 0x255 V119
---
Entry stack: [V11, 0x119]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, 0x119, V118]

================================

Block 0x24c
[0x24c:0x254]
---
Predecessors: [0x172]
Successors: []
---
0x24c RETURNDATASIZE
0x24d PUSH1 0x0
0x24f DUP1
0x250 RETURNDATACOPY
0x251 RETURNDATASIZE
0x252 PUSH1 0x0
0x254 REVERT
---
0x24c: V121 = RETURNDATASIZE
0x24d: V122 = 0x0
0x250: RETURNDATACOPY 0x0 0x0 V121
0x251: V123 = RETURNDATASIZE
0x252: V124 = 0x0
0x254: REVERT 0x0 V123
---
Entry stack: [V11, 0x119, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V118]

================================

Block 0x255
[0x255:0x257]
---
Predecessors: [0x172]
Successors: [0x119]
---
0x255 JUMPDEST
0x256 POP
0x257 JUMP
---
0x255: JUMPDEST 
0x257: JUMP 0x119
---
Entry stack: [V11, 0x119, V118]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x258
[0x258:0x27c]
---
Predecessors: [0x127]
Successors: [0x130]
---
0x258 JUMPDEST
0x259 PUSH1 0x0
0x25b DUP1
0x25c SWAP1
0x25d SLOAD
0x25e SWAP1
0x25f PUSH2 0x100
0x262 EXP
0x263 SWAP1
0x264 DIV
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a AND
0x27b DUP2
0x27c JUMP
---
0x258: JUMPDEST 
0x259: V125 = 0x0
0x25d: V126 = S[0x0]
0x25f: V127 = 0x100
0x262: V128 = EXP 0x100 0x0
0x264: V129 = DIV V126 0x1
0x265: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x27c: JUMP 0x130
---
Entry stack: [V11, 0x130]
Stack pops: 1
Stack additions: [S0, V131]
Exit stack: [V11, 0x130, V131]

================================

Block 0x27d
[0x27d:0x2ae]
---
Predecessors: []
Successors: []
---
0x27d STOP
0x27e LOG1
0x27f PUSH6 0x627a7a723058
0x286 SHA3
0x287 MISSING 0xb7
0x288 MISSING 0xe6
0x289 MISSING 0xbf
0x28a MISSING 0xa7
0x28b INVALID
0x28c MISSING 0x1f
0x28d GASLIMIT
0x28e MISSING 0x5c
0x28f MISSING 0x25
0x290 MISSING 0xe
0x291 COINBASE
0x292 MISSING 0x28
0x293 MISSING 0xbb
0x294 MISSING 0xc7
0x295 MISSING 0xeb
0x296 STATICCALL
0x297 SWAP1
0x298 MISSING 0xa8
0x299 DUP7
0x29a DUP11
0x29b MISSING 0xae
0x29c CALLDATALOAD
0x29d STATICCALL
0x29e MISSING 0xb0
0x29f MISSING 0xc6
0x2a0 MISSING 0xd2
0x2a1 GT
0x2a2 MISSING 0x2f
0x2a3 DUP5
0x2a4 PUSH10 0x8e370029
---
0x27d: STOP 
0x27e: LOG S0 S1 S2
0x27f: V132 = 0x627a7a723058
0x286: V133 = SHA3 0x627a7a723058 S3
0x287: MISSING 0xb7
0x288: MISSING 0xe6
0x289: MISSING 0xbf
0x28a: MISSING 0xa7
0x28b: INVALID 
0x28c: MISSING 0x1f
0x28d: V134 = GASLIMIT
0x28e: MISSING 0x5c
0x28f: MISSING 0x25
0x290: MISSING 0xe
0x291: V135 = COINBASE
0x292: MISSING 0x28
0x293: MISSING 0xbb
0x294: MISSING 0xc7
0x295: MISSING 0xeb
0x296: V136 = STATICCALL S0 S1 S2 S3 S4 S5
0x298: MISSING 0xa8
0x29b: MISSING 0xae
0x29c: V137 = CALLDATALOAD S0
0x29d: V138 = STATICCALL V137 S1 S2 S3 S4 S5
0x29e: MISSING 0xb0
0x29f: MISSING 0xc6
0x2a0: MISSING 0xd2
0x2a1: V139 = GT S0 S1
0x2a2: MISSING 0x2f
0x2a4: V140 = 0x8e370029
---
Entry stack: []
Stack pops: 0
Stack additions: [V133, V134, V135, S6, V136, S9, S6, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V138, V139, 0x8e370029, S4, S0, S1, S2, S3, S4]
Exit stack: []

================================

Function 0:
Public function signature: 0x6b9f96ea
Entry block: 0x104
Exit block: 0x119
Body: 0x104, 0x10c, 0x110, 0x119, 0x172, 0x24c, 0x255

Function 1:
Public function signature: 0xca325469
Entry block: 0x11b
Exit block: 0x130
Body: 0x11b, 0x123, 0x127, 0x130, 0x258

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0xf8
Body: 0x4c, 0xf8, 0x101

