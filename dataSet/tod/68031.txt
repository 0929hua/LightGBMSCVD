Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb7
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb7
0xa: JUMPI 0xb7 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xc8]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x27e235e3
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xc8
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x27e235e3
0x39: V12 = EQ V10 0x27e235e3
0x3a: V13 = 0xc8
0x3d: JUMPI 0xc8 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xf6]
---
0x3e DUP1
0x3f PUSH4 0x3ccfd60b
0x44 EQ
0x45 PUSH2 0xf6
0x48 JUMPI
---
0x3f: V14 = 0x3ccfd60b
0x44: V15 = EQ 0x3ccfd60b V10
0x45: V16 = 0xf6
0x48: JUMPI 0xf6 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x108]
---
0x49 DUP1
0x4a PUSH4 0x434f5f27
0x4f EQ
0x50 PUSH2 0x108
0x53 JUMPI
---
0x4a: V17 = 0x434f5f27
0x4f: V18 = EQ 0x434f5f27 V10
0x50: V19 = 0x108
0x53: JUMPI 0x108 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x138]
---
0x54 DUP1
0x55 PUSH4 0x5259347d
0x5a EQ
0x5b PUSH2 0x138
0x5e JUMPI
---
0x55: V20 = 0x5259347d
0x5a: V21 = EQ 0x5259347d V10
0x5b: V22 = 0x138
0x5e: JUMPI 0x138 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x142]
---
0x5f DUP1
0x60 PUSH4 0x62f5ed61
0x65 EQ
0x66 PUSH2 0x142
0x69 JUMPI
---
0x60: V23 = 0x62f5ed61
0x65: V24 = EQ 0x62f5ed61 V10
0x66: V25 = 0x142
0x69: JUMPI 0x142 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x14c]
---
0x6a DUP1
0x6b PUSH4 0x6360fc3f
0x70 EQ
0x71 PUSH2 0x14c
0x74 JUMPI
---
0x6b: V26 = 0x6360fc3f
0x70: V27 = EQ 0x6360fc3f V10
0x71: V28 = 0x14c
0x74: JUMPI 0x14c V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x170]
---
0x75 DUP1
0x76 PUSH4 0x6ad1fe02
0x7b EQ
0x7c PUSH2 0x170
0x7f JUMPI
---
0x76: V29 = 0x6ad1fe02
0x7b: V30 = EQ 0x6ad1fe02 V10
0x7c: V31 = 0x170
0x7f: JUMPI 0x170 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x19c]
---
0x80 DUP1
0x81 PUSH4 0x70144f8f
0x86 EQ
0x87 PUSH2 0x19c
0x8a JUMPI
---
0x81: V32 = 0x70144f8f
0x86: V33 = EQ 0x70144f8f V10
0x87: V34 = 0x19c
0x8a: JUMPI 0x19c V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x1ae]
---
0x8b DUP1
0x8c PUSH4 0x943dfef1
0x91 EQ
0x92 PUSH2 0x1ae
0x95 JUMPI
---
0x8c: V35 = 0x943dfef1
0x91: V36 = EQ 0x943dfef1 V10
0x92: V37 = 0x1ae
0x95: JUMPI 0x1ae V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x1d0]
---
0x96 DUP1
0x97 PUSH4 0xa6f2ae3a
0x9c EQ
0x9d PUSH2 0x1d0
0xa0 JUMPI
---
0x97: V38 = 0xa6f2ae3a
0x9c: V39 = EQ 0xa6f2ae3a V10
0x9d: V40 = 0x1d0
0xa0: JUMPI 0x1d0 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x1e2]
---
0xa1 DUP1
0xa2 PUSH4 0xc3dac9a1
0xa7 EQ
0xa8 PUSH2 0x1e2
0xab JUMPI
---
0xa2: V41 = 0xc3dac9a1
0xa7: V42 = EQ 0xc3dac9a1 V10
0xa8: V43 = 0x1e2
0xab: JUMPI 0x1e2 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x204]
---
0xac DUP1
0xad PUSH4 0xfc0c546a
0xb2 EQ
0xb3 PUSH2 0x204
0xb6 JUMPI
---
0xad: V44 = 0xfc0c546a
0xb2: V45 = EQ 0xfc0c546a V10
0xb3: V46 = 0x204
0xb6: JUMPI 0x204 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0x0, 0xac]
Successors: [0xbb]
---
0xb7 JUMPDEST
0xb8 PUSH2 0xc6
---
0xb7: JUMPDEST 
0xb8: V47 = 0xc6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0xb7]
Successors: [0x230]
---
0xbb JUMPDEST
0xbc PUSH2 0xc3
0xbf PUSH2 0x230
0xc2 JUMP
---
0xbb: JUMPDEST 
0xbc: V48 = 0xc3
0xbf: V49 = 0x230
0xc2: JUMP 0x230
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V10, 0xc6, 0xc3]

================================

Block 0xc3
[0xc3:0xc3]
---
Predecessors: [0xc4, 0x399, 0x3e0, 0x628, 0x6ce]
Successors: [0xc4]
---
0xc3 JUMPDEST
---
0xc3: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0xc3]
Successors: [0xc3, 0xc6]
---
0xc4 JUMPDEST
0xc5 JUMP
---
0xc4: JUMPDEST 
0xc5: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xc6
[0xc6:0xc7]
---
Predecessors: [0xc4, 0x3e0, 0x58b, 0x5d0, 0x614]
Successors: []
---
0xc6 JUMPDEST
0xc7 STOP
---
0xc6: JUMPDEST 
0xc7: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0xc8
[0xc8:0xce]
---
Predecessors: [0xb]
Successors: [0xcf, 0xd0]
---
0xc8 JUMPDEST
0xc9 CALLVALUE
0xca ISZERO
0xcb PUSH2 0xd0
0xce JUMPI
---
0xc8: JUMPDEST 
0xc9: V50 = CALLVALUE
0xca: V51 = ISZERO V50
0xcb: V52 = 0xd0
0xce: JUMPI 0xd0 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xcf]
---
Predecessors: [0xc8]
Successors: []
---
0xcf INVALID
---
0xcf: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd0
[0xd0:0xe3]
---
Predecessors: [0xc8]
Successors: [0x3e2]
---
0xd0 JUMPDEST
0xd1 PUSH2 0xe4
0xd4 PUSH1 0x1
0xd6 PUSH1 0xa0
0xd8 PUSH1 0x2
0xda EXP
0xdb SUB
0xdc PUSH1 0x4
0xde CALLDATALOAD
0xdf AND
0xe0 PUSH2 0x3e2
0xe3 JUMP
---
0xd0: JUMPDEST 
0xd1: V53 = 0xe4
0xd4: V54 = 0x1
0xd6: V55 = 0xa0
0xd8: V56 = 0x2
0xda: V57 = EXP 0x2 0xa0
0xdb: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc: V59 = 0x4
0xde: V60 = CALLDATALOAD 0x4
0xdf: V61 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V62 = 0x3e2
0xe3: JUMP 0x3e2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe4, V61]
Exit stack: [V10, 0xe4, V61]

================================

Block 0xe4
[0xe4:0xf5]
---
Predecessors: [0x3e2, 0x616, 0x703]
Successors: []
---
0xe4 JUMPDEST
0xe5 PUSH1 0x40
0xe7 DUP1
0xe8 MLOAD
0xe9 SWAP2
0xea DUP3
0xeb MSTORE
0xec MLOAD
0xed SWAP1
0xee DUP2
0xef SWAP1
0xf0 SUB
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 RETURN
---
0xe4: JUMPDEST 
0xe5: V63 = 0x40
0xe8: V64 = M[0x40]
0xeb: M[V64] = S0
0xec: V65 = M[0x40]
0xf0: V66 = SUB V64 V65
0xf1: V67 = 0x20
0xf3: V68 = ADD 0x20 V66
0xf5: RETURN V65 V68
---
Entry stack: [V10, 0xe4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xe4]

================================

Block 0xf6
[0xf6:0xfc]
---
Predecessors: [0x3e]
Successors: [0xfd, 0xfe]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 ISZERO
0xf9 PUSH2 0xfe
0xfc JUMPI
---
0xf6: JUMPDEST 
0xf7: V69 = CALLVALUE
0xf8: V70 = ISZERO V69
0xf9: V71 = 0xfe
0xfc: JUMPI 0xfe V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfd
[0xfd:0xfd]
---
Predecessors: [0xf6]
Successors: []
---
0xfd INVALID
---
0xfd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfe
[0xfe:0x105]
---
Predecessors: [0xf6]
Successors: [0x3f4]
---
0xfe JUMPDEST
0xff PUSH2 0xc6
0x102 PUSH2 0x3f4
0x105 JUMP
---
0xfe: JUMPDEST 
0xff: V72 = 0xc6
0x102: V73 = 0x3f4
0x105: JUMP 0x3f4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: []
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x49]
Successors: [0x10f, 0x110]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x110
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V74 = CALLVALUE
0x10a: V75 = ISZERO V74
0x10b: V76 = 0x110
0x10e: JUMPI 0x110 V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x10f]
---
Predecessors: [0x108]
Successors: []
---
0x10f INVALID
---
0x10f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x110
[0x110:0x123]
---
Predecessors: [0x108]
Successors: [0x590]
---
0x110 JUMPDEST
0x111 PUSH2 0x124
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c PUSH1 0x4
0x11e CALLDATALOAD
0x11f AND
0x120 PUSH2 0x590
0x123 JUMP
---
0x110: JUMPDEST 
0x111: V77 = 0x124
0x114: V78 = 0x1
0x116: V79 = 0xa0
0x118: V80 = 0x2
0x11a: V81 = EXP 0x2 0xa0
0x11b: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V83 = 0x4
0x11e: V84 = CALLDATALOAD 0x4
0x11f: V85 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x120: V86 = 0x590
0x123: JUMP 0x590
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x124, V85]
Exit stack: [V10, 0x124, V85]

================================

Block 0x124
[0x124:0x137]
---
Predecessors: [0x590, 0x5d2]
Successors: []
---
0x124 JUMPDEST
0x125 PUSH1 0x40
0x127 DUP1
0x128 MLOAD
0x129 SWAP2
0x12a ISZERO
0x12b ISZERO
0x12c DUP3
0x12d MSTORE
0x12e MLOAD
0x12f SWAP1
0x130 DUP2
0x131 SWAP1
0x132 SUB
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 RETURN
---
0x124: JUMPDEST 
0x125: V87 = 0x40
0x128: V88 = M[0x40]
0x12a: V89 = ISZERO S0
0x12b: V90 = ISZERO V89
0x12d: M[V88] = V90
0x12e: V91 = M[0x40]
0x132: V92 = SUB V88 V91
0x133: V93 = 0x20
0x135: V94 = ADD 0x20 V92
0x137: RETURN V91 V94
---
Entry stack: [V10, 0x124, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x124]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x54]
Successors: [0x230]
---
0x138 JUMPDEST
0x139 PUSH2 0xc6
0x13c PUSH2 0x230
0x13f JUMP
---
0x138: JUMPDEST 
0x139: V95 = 0xc6
0x13c: V96 = 0x230
0x13f: JUMP 0x230
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x140
[0x140:0x141]
---
Predecessors: []
Successors: []
---
0x140 JUMPDEST
0x141 STOP
---
0x140: JUMPDEST 
0x141: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x5f]
Successors: [0x5a5]
---
0x142 JUMPDEST
0x143 PUSH2 0xc6
0x146 PUSH2 0x5a5
0x149 JUMP
---
0x142: JUMPDEST 
0x143: V97 = 0xc6
0x146: V98 = 0x5a5
0x149: JUMP 0x5a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x14a
[0x14a:0x14b]
---
Predecessors: []
Successors: []
---
0x14a JUMPDEST
0x14b STOP
---
0x14a: JUMPDEST 
0x14b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x6a]
Successors: [0x153, 0x154]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x154
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V99 = CALLVALUE
0x14e: V100 = ISZERO V99
0x14f: V101 = 0x154
0x152: JUMPI 0x154 V100
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x153
[0x153:0x153]
---
Predecessors: [0x14c]
Successors: []
---
0x153 INVALID
---
0x153: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x154
[0x154:0x15b]
---
Predecessors: [0x14c]
Successors: [0x5d2]
---
0x154 JUMPDEST
0x155 PUSH2 0x124
0x158 PUSH2 0x5d2
0x15b JUMP
---
0x154: JUMPDEST 
0x155: V102 = 0x124
0x158: V103 = 0x5d2
0x15b: JUMP 0x5d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V10, 0x124]

================================

Block 0x15c
[0x15c:0x16f]
---
Predecessors: []
Successors: []
---
0x15c JUMPDEST
0x15d PUSH1 0x40
0x15f DUP1
0x160 MLOAD
0x161 SWAP2
0x162 ISZERO
0x163 ISZERO
0x164 DUP3
0x165 MSTORE
0x166 MLOAD
0x167 SWAP1
0x168 DUP2
0x169 SWAP1
0x16a SUB
0x16b PUSH1 0x20
0x16d ADD
0x16e SWAP1
0x16f RETURN
---
0x15c: JUMPDEST 
0x15d: V104 = 0x40
0x160: V105 = M[0x40]
0x162: V106 = ISZERO S0
0x163: V107 = ISZERO V106
0x165: M[V105] = V107
0x166: V108 = M[0x40]
0x16a: V109 = SUB V105 V108
0x16b: V110 = 0x20
0x16d: V111 = ADD 0x20 V109
0x16f: RETURN V108 V111
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x170
[0x170:0x176]
---
Predecessors: [0x75]
Successors: [0x177, 0x178]
---
0x170 JUMPDEST
0x171 CALLVALUE
0x172 ISZERO
0x173 PUSH2 0x178
0x176 JUMPI
---
0x170: JUMPDEST 
0x171: V112 = CALLVALUE
0x172: V113 = ISZERO V112
0x173: V114 = 0x178
0x176: JUMPI 0x178 V113
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x177
[0x177:0x177]
---
Predecessors: [0x170]
Successors: []
---
0x177 INVALID
---
0x177: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x170]
Successors: [0x5db]
---
0x178 JUMPDEST
0x179 PUSH2 0x180
0x17c PUSH2 0x5db
0x17f JUMP
---
0x178: JUMPDEST 
0x179: V115 = 0x180
0x17c: V116 = 0x5db
0x17f: JUMP 0x5db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x180]
Exit stack: [V10, 0x180]

================================

Block 0x180
[0x180:0x19b]
---
Predecessors: [0x5db, 0x709]
Successors: []
---
0x180 JUMPDEST
0x181 PUSH1 0x40
0x183 DUP1
0x184 MLOAD
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d SWAP1
0x18e SWAP3
0x18f AND
0x190 DUP3
0x191 MSTORE
0x192 MLOAD
0x193 SWAP1
0x194 DUP2
0x195 SWAP1
0x196 SUB
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP1
0x19b RETURN
---
0x180: JUMPDEST 
0x181: V117 = 0x40
0x184: V118 = M[0x40]
0x185: V119 = 0x1
0x187: V120 = 0xa0
0x189: V121 = 0x2
0x18b: V122 = EXP 0x2 0xa0
0x18c: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V124 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x191: M[V118] = V124
0x192: V125 = M[0x40]
0x196: V126 = SUB V118 V125
0x197: V127 = 0x20
0x199: V128 = ADD 0x20 V126
0x19b: RETURN V125 V128
---
Entry stack: [V10, 0x180, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x180]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x80]
Successors: [0x1a3, 0x1a4]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a4
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V129 = CALLVALUE
0x19e: V130 = ISZERO V129
0x19f: V131 = 0x1a4
0x1a2: JUMPI 0x1a4 V130
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a3
[0x1a3:0x1a3]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 INVALID
---
0x1a3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a4
[0x1a4:0x1ab]
---
Predecessors: [0x19c]
Successors: [0x5ea]
---
0x1a4 JUMPDEST
0x1a5 PUSH2 0xc6
0x1a8 PUSH2 0x5ea
0x1ab JUMP
---
0x1a4: JUMPDEST 
0x1a5: V132 = 0xc6
0x1a8: V133 = 0x5ea
0x1ab: JUMP 0x5ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x1ac
[0x1ac:0x1ad]
---
Predecessors: []
Successors: []
---
0x1ac JUMPDEST
0x1ad STOP
---
0x1ac: JUMPDEST 
0x1ad: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ae
[0x1ae:0x1b4]
---
Predecessors: [0x8b]
Successors: [0x1b5, 0x1b6]
---
0x1ae JUMPDEST
0x1af CALLVALUE
0x1b0 ISZERO
0x1b1 PUSH2 0x1b6
0x1b4 JUMPI
---
0x1ae: JUMPDEST 
0x1af: V134 = CALLVALUE
0x1b0: V135 = ISZERO V134
0x1b1: V136 = 0x1b6
0x1b4: JUMPI 0x1b6 V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b5
[0x1b5:0x1b5]
---
Predecessors: [0x1ae]
Successors: []
---
0x1b5 INVALID
---
0x1b5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b6
[0x1b6:0x1bd]
---
Predecessors: [0x1ae]
Successors: [0x616]
---
0x1b6 JUMPDEST
0x1b7 PUSH2 0xe4
0x1ba PUSH2 0x616
0x1bd JUMP
---
0x1b6: JUMPDEST 
0x1b7: V137 = 0xe4
0x1ba: V138 = 0x616
0x1bd: JUMP 0x616
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe4]
Exit stack: [V10, 0xe4]

================================

Block 0x1be
[0x1be:0x1cf]
---
Predecessors: []
Successors: []
---
0x1be JUMPDEST
0x1bf PUSH1 0x40
0x1c1 DUP1
0x1c2 MLOAD
0x1c3 SWAP2
0x1c4 DUP3
0x1c5 MSTORE
0x1c6 MLOAD
0x1c7 SWAP1
0x1c8 DUP2
0x1c9 SWAP1
0x1ca SUB
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP1
0x1cf RETURN
---
0x1be: JUMPDEST 
0x1bf: V139 = 0x40
0x1c2: V140 = M[0x40]
0x1c5: M[V140] = S0
0x1c6: V141 = M[0x40]
0x1ca: V142 = SUB V140 V141
0x1cb: V143 = 0x20
0x1cd: V144 = ADD 0x20 V142
0x1cf: RETURN V141 V144
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d0
[0x1d0:0x1d6]
---
Predecessors: [0x96]
Successors: [0x1d7, 0x1d8]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 ISZERO
0x1d3 PUSH2 0x1d8
0x1d6 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V145 = CALLVALUE
0x1d2: V146 = ISZERO V145
0x1d3: V147 = 0x1d8
0x1d6: JUMPI 0x1d8 V146
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d7
[0x1d7:0x1d7]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d7 INVALID
---
0x1d7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d8
[0x1d8:0x1df]
---
Predecessors: [0x1d0]
Successors: [0x61c]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0xc6
0x1dc PUSH2 0x61c
0x1df JUMP
---
0x1d8: JUMPDEST 
0x1d9: V148 = 0xc6
0x1dc: V149 = 0x61c
0x1df: JUMP 0x61c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0x1e0
[0x1e0:0x1e1]
---
Predecessors: []
Successors: []
---
0x1e0 JUMPDEST
0x1e1 STOP
---
0x1e0: JUMPDEST 
0x1e1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e2
[0x1e2:0x1e8]
---
Predecessors: [0xa1]
Successors: [0x1e9, 0x1ea]
---
0x1e2 JUMPDEST
0x1e3 CALLVALUE
0x1e4 ISZERO
0x1e5 PUSH2 0x1ea
0x1e8 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V150 = CALLVALUE
0x1e4: V151 = ISZERO V150
0x1e5: V152 = 0x1ea
0x1e8: JUMPI 0x1ea V151
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e9
[0x1e9:0x1e9]
---
Predecessors: [0x1e2]
Successors: []
---
0x1e9 INVALID
---
0x1e9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ea
[0x1ea:0x1f1]
---
Predecessors: [0x1e2]
Successors: [0x703]
---
0x1ea JUMPDEST
0x1eb PUSH2 0xe4
0x1ee PUSH2 0x703
0x1f1 JUMP
---
0x1ea: JUMPDEST 
0x1eb: V153 = 0xe4
0x1ee: V154 = 0x703
0x1f1: JUMP 0x703
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe4]
Exit stack: [V10, 0xe4]

================================

Block 0x1f2
[0x1f2:0x203]
---
Predecessors: []
Successors: []
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x40
0x1f5 DUP1
0x1f6 MLOAD
0x1f7 SWAP2
0x1f8 DUP3
0x1f9 MSTORE
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd SWAP1
0x1fe SUB
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP1
0x203 RETURN
---
0x1f2: JUMPDEST 
0x1f3: V155 = 0x40
0x1f6: V156 = M[0x40]
0x1f9: M[V156] = S0
0x1fa: V157 = M[0x40]
0x1fe: V158 = SUB V156 V157
0x1ff: V159 = 0x20
0x201: V160 = ADD 0x20 V158
0x203: RETURN V157 V160
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x204
[0x204:0x20a]
---
Predecessors: [0xac]
Successors: [0x20b, 0x20c]
---
0x204 JUMPDEST
0x205 CALLVALUE
0x206 ISZERO
0x207 PUSH2 0x20c
0x20a JUMPI
---
0x204: JUMPDEST 
0x205: V161 = CALLVALUE
0x206: V162 = ISZERO V161
0x207: V163 = 0x20c
0x20a: JUMPI 0x20c V162
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20b
[0x20b:0x20b]
---
Predecessors: [0x204]
Successors: []
---
0x20b INVALID
---
0x20b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20c
[0x20c:0x213]
---
Predecessors: [0x204]
Successors: [0x709]
---
0x20c JUMPDEST
0x20d PUSH2 0x180
0x210 PUSH2 0x709
0x213 JUMP
---
0x20c: JUMPDEST 
0x20d: V164 = 0x180
0x210: V165 = 0x709
0x213: JUMP 0x709
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x180]
Exit stack: [V10, 0x180]

================================

Block 0x214
[0x214:0x22f]
---
Predecessors: []
Successors: []
---
0x214 JUMPDEST
0x215 PUSH1 0x40
0x217 DUP1
0x218 MLOAD
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 SWAP1
0x222 SWAP3
0x223 AND
0x224 DUP3
0x225 MSTORE
0x226 MLOAD
0x227 SWAP1
0x228 DUP2
0x229 SWAP1
0x22a SUB
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f RETURN
---
0x214: JUMPDEST 
0x215: V166 = 0x40
0x218: V167 = M[0x40]
0x219: V168 = 0x1
0x21b: V169 = 0xa0
0x21d: V170 = 0x2
0x21f: V171 = EXP 0x2 0xa0
0x220: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V173 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x225: M[V167] = V173
0x226: V174 = M[0x40]
0x22a: V175 = SUB V167 V174
0x22b: V176 = 0x20
0x22d: V177 = ADD 0x20 V175
0x22f: RETURN V174 V177
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0xbb, 0x138]
Successors: [0x238, 0x39e]
---
0x230 JUMPDEST
0x231 CALLVALUE
0x232 ISZERO
0x233 ISZERO
0x234 PUSH2 0x39e
0x237 JUMPI
---
0x230: JUMPDEST 
0x231: V178 = CALLVALUE
0x232: V179 = ISZERO V178
0x233: V180 = ISZERO V179
0x234: V181 = 0x39e
0x237: JUMPI 0x39e V180
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x238
[0x238:0x243]
---
Predecessors: [0x230]
Successors: [0x244, 0x24f]
---
0x238 PUSH1 0x3
0x23a SLOAD
0x23b PUSH1 0xff
0x23d AND
0x23e DUP1
0x23f ISZERO
0x240 PUSH2 0x24f
0x243 JUMPI
---
0x238: V182 = 0x3
0x23a: V183 = S[0x3]
0x23b: V184 = 0xff
0x23d: V185 = AND 0xff V183
0x23f: V186 = ISZERO V185
0x240: V187 = 0x24f
0x243: JUMPI 0x24f V186
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: [V185]
Exit stack: [V10, S1, {0xc3, 0xc6}, V185]

================================

Block 0x244
[0x244:0x24e]
---
Predecessors: [0x238]
Successors: [0x24f]
---
0x244 POP
0x245 PUSH1 0x4
0x247 SLOAD
0x248 PUSH3 0x15180
0x24c ADD
0x24d TIMESTAMP
0x24e LT
---
0x245: V188 = 0x4
0x247: V189 = S[0x4]
0x248: V190 = 0x15180
0x24c: V191 = ADD 0x15180 V189
0x24d: V192 = TIMESTAMP
0x24e: V193 = LT V192 V191
---
Entry stack: [V10, S2, {0xc3, 0xc6}, V185]
Stack pops: 1
Stack additions: [V193]
Exit stack: [V10, S2, {0xc3, 0xc6}, V193]

================================

Block 0x24f
[0x24f:0x254]
---
Predecessors: [0x238, 0x244]
Successors: [0x255, 0x390]
---
0x24f JUMPDEST
0x250 ISZERO
0x251 PUSH2 0x390
0x254 JUMPI
---
0x24f: JUMPDEST 
0x250: V194 = ISZERO S0
0x251: V195 = 0x390
0x254: JUMPI 0x390 V194
---
Entry stack: [V10, S2, {0xc3, 0xc6}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, {0xc3, 0xc6}]

================================

Block 0x255
[0x255:0x2b9]
---
Predecessors: [0x24f]
Successors: [0x2ba, 0x2bb]
---
0x255 PUSH1 0x6
0x257 SLOAD
0x258 PUSH1 0x8
0x25a SLOAD
0x25b PUSH1 0x40
0x25d DUP1
0x25e MLOAD
0x25f PUSH1 0x0
0x261 PUSH1 0x20
0x263 SWAP2
0x264 DUP3
0x265 ADD
0x266 DUP2
0x267 SWAP1
0x268 MSTORE
0x269 DUP3
0x26a MLOAD
0x26b PUSH32 0x4a88eb8900000000000000000000000000000000000000000000000000000000
0x28c DUP2
0x28d MSTORE
0x28e SWAP3
0x28f MLOAD
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 SWAP1
0x299 SWAP5
0x29a AND
0x29b SWAP4
0x29c PUSH4 0x4a88eb89
0x2a1 SWAP4
0x2a2 PUSH1 0x4
0x2a4 DUP1
0x2a5 DUP3
0x2a6 ADD
0x2a7 SWAP5
0x2a8 SWAP4
0x2a9 SWAP2
0x2aa DUP4
0x2ab SWAP1
0x2ac SUB
0x2ad ADD
0x2ae SWAP1
0x2af DUP3
0x2b0 SWAP1
0x2b1 DUP8
0x2b2 DUP1
0x2b3 EXTCODESIZE
0x2b4 ISZERO
0x2b5 ISZERO
0x2b6 PUSH2 0x2bb
0x2b9 JUMPI
---
0x255: V196 = 0x6
0x257: V197 = S[0x6]
0x258: V198 = 0x8
0x25a: V199 = S[0x8]
0x25b: V200 = 0x40
0x25e: V201 = M[0x40]
0x25f: V202 = 0x0
0x261: V203 = 0x20
0x265: V204 = ADD 0x20 V201
0x268: M[V204] = 0x0
0x26a: V205 = M[0x40]
0x26b: V206 = 0x4a88eb8900000000000000000000000000000000000000000000000000000000
0x28d: M[V205] = 0x4a88eb8900000000000000000000000000000000000000000000000000000000
0x28f: V207 = M[0x40]
0x290: V208 = 0x1
0x292: V209 = 0xa0
0x294: V210 = 0x2
0x296: V211 = EXP 0x2 0xa0
0x297: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V213 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x29c: V214 = 0x4a88eb89
0x2a2: V215 = 0x4
0x2a6: V216 = ADD V205 0x4
0x2ac: V217 = SUB V205 V207
0x2ad: V218 = ADD V217 0x4
0x2b3: V219 = EXTCODESIZE V213
0x2b4: V220 = ISZERO V219
0x2b5: V221 = ISZERO V220
0x2b6: V222 = 0x2bb
0x2b9: JUMPI 0x2bb V221
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: [V197, V213, 0x4a88eb89, V216, 0x20, V207, V218, V207, 0x0, V213]
Exit stack: [V10, S1, {0xc3, 0xc6}, V197, V213, 0x4a88eb89, V216, 0x20, V207, V218, V207, 0x0, V213]

================================

Block 0x2ba
[0x2ba:0x2ba]
---
Predecessors: [0x255]
Successors: []
---
0x2ba INVALID
---
0x2ba: INVALID 
---
Entry stack: [V10, S11, {0xc3, 0xc6}, V197, V213, 0x4a88eb89, V216, 0x20, V207, V218, V207, 0x0, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc3, 0xc6}, V197, V213, 0x4a88eb89, V216, 0x20, V207, V218, V207, 0x0, V213]

================================

Block 0x2bb
[0x2bb:0x2c7]
---
Predecessors: [0x255]
Successors: [0x2c8, 0x2c9]
---
0x2bb JUMPDEST
0x2bc PUSH2 0x2c6
0x2bf GAS
0x2c0 SUB
0x2c1 CALL
0x2c2 ISZERO
0x2c3 ISZERO
0x2c4 PUSH2 0x2c9
0x2c7 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V223 = 0x2c6
0x2bf: V224 = GAS
0x2c0: V225 = SUB V224 0x2c6
0x2c1: V226 = CALL V225 V213 0x0 V207 V218 V207 0x20
0x2c2: V227 = ISZERO V226
0x2c3: V228 = ISZERO V227
0x2c4: V229 = 0x2c9
0x2c7: JUMPI 0x2c9 V228
---
Entry stack: [V10, S11, {0xc3, 0xc6}, V197, V213, 0x4a88eb89, V216, 0x20, V207, V218, V207, 0x0, V213]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S11, {0xc3, 0xc6}, V197, V213, 0x4a88eb89, V216]

================================

Block 0x2c8
[0x2c8:0x2c8]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c8 INVALID
---
0x2c8: INVALID 
---
Entry stack: [V10, S5, {0xc3, 0xc6}, V197, V213, 0x4a88eb89, V216]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0xc3, 0xc6}, V197, V213, 0x4a88eb89, V216]

================================

Block 0x2c9
[0x2c9:0x334]
---
Predecessors: [0x2bb]
Successors: [0x335, 0x336]
---
0x2c9 JUMPDEST
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce DUP1
0x2cf MLOAD
0x2d0 DUP1
0x2d1 MLOAD
0x2d2 PUSH1 0x8
0x2d4 SLOAD
0x2d5 PUSH1 0x0
0x2d7 PUSH1 0x20
0x2d9 SWAP4
0x2da DUP5
0x2db ADD
0x2dc DUP2
0x2dd SWAP1
0x2de MSTORE
0x2df DUP5
0x2e0 MLOAD
0x2e1 PUSH32 0xd0c03f3500000000000000000000000000000000000000000000000000000000
0x302 DUP2
0x303 MSTORE
0x304 SWAP5
0x305 MLOAD
0x306 SWAP3
0x307 SWAP6
0x308 POP
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 SWAP1
0x312 SWAP2
0x313 AND
0x314 SWAP4
0x315 PUSH4 0xd0c03f35
0x31a SWAP4
0x31b PUSH1 0x4
0x31d DUP1
0x31e DUP4
0x31f ADD
0x320 SWAP5
0x321 SWAP2
0x322 SWAP4
0x323 SWAP2
0x324 SWAP3
0x325 DUP4
0x326 SWAP1
0x327 SUB
0x328 ADD
0x329 SWAP1
0x32a DUP3
0x32b SWAP1
0x32c DUP8
0x32d DUP1
0x32e EXTCODESIZE
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x336
0x334 JUMPI
---
0x2c9: JUMPDEST 
0x2cc: V230 = 0x40
0x2cf: V231 = M[0x40]
0x2d1: V232 = M[V231]
0x2d2: V233 = 0x8
0x2d4: V234 = S[0x8]
0x2d5: V235 = 0x0
0x2d7: V236 = 0x20
0x2db: V237 = ADD 0x20 V231
0x2de: M[V237] = 0x0
0x2e0: V238 = M[0x40]
0x2e1: V239 = 0xd0c03f3500000000000000000000000000000000000000000000000000000000
0x303: M[V238] = 0xd0c03f3500000000000000000000000000000000000000000000000000000000
0x305: V240 = M[0x40]
0x309: V241 = 0x1
0x30b: V242 = 0xa0
0x30d: V243 = 0x2
0x30f: V244 = EXP 0x2 0xa0
0x310: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x313: V246 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x315: V247 = 0xd0c03f35
0x31b: V248 = 0x4
0x31f: V249 = ADD V238 0x4
0x327: V250 = SUB V238 V240
0x328: V251 = ADD V250 0x4
0x32e: V252 = EXTCODESIZE V246
0x32f: V253 = ISZERO V252
0x330: V254 = ISZERO V253
0x331: V255 = 0x336
0x334: JUMPI 0x336 V254
---
Entry stack: [V10, S5, {0xc3, 0xc6}, V197, V213, 0x4a88eb89, V216]
Stack pops: 3
Stack additions: [V232, V246, 0xd0c03f35, V249, 0x20, V240, V251, V240, 0x0, V246]
Exit stack: [V10, S5, {0xc3, 0xc6}, V197, V232, V246, 0xd0c03f35, V249, 0x20, V240, V251, V240, 0x0, V246]

================================

Block 0x335
[0x335:0x335]
---
Predecessors: [0x2c9]
Successors: []
---
0x335 INVALID
---
0x335: INVALID 
---
Entry stack: [V10, S12, {0xc3, 0xc6}, V197, V232, V246, 0xd0c03f35, V249, 0x20, V240, V251, V240, 0x0, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S12, {0xc3, 0xc6}, V197, V232, V246, 0xd0c03f35, V249, 0x20, V240, V251, V240, 0x0, V246]

================================

Block 0x336
[0x336:0x342]
---
Predecessors: [0x2c9]
Successors: [0x343, 0x344]
---
0x336 JUMPDEST
0x337 PUSH2 0x2c6
0x33a GAS
0x33b SUB
0x33c CALL
0x33d ISZERO
0x33e ISZERO
0x33f PUSH2 0x344
0x342 JUMPI
---
0x336: JUMPDEST 
0x337: V256 = 0x2c6
0x33a: V257 = GAS
0x33b: V258 = SUB V257 0x2c6
0x33c: V259 = CALL V258 V246 0x0 V240 V251 V240 0x20
0x33d: V260 = ISZERO V259
0x33e: V261 = ISZERO V260
0x33f: V262 = 0x344
0x342: JUMPI 0x344 V261
---
Entry stack: [V10, S12, {0xc3, 0xc6}, V197, V232, V246, 0xd0c03f35, V249, 0x20, V240, V251, V240, 0x0, V246]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S12, {0xc3, 0xc6}, V197, V232, V246, 0xd0c03f35, V249]

================================

Block 0x343
[0x343:0x343]
---
Predecessors: [0x336]
Successors: []
---
0x343 INVALID
---
0x343: INVALID 
---
Entry stack: [V10, S6, {0xc3, 0xc6}, V197, V232, V246, 0xd0c03f35, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, {0xc3, 0xc6}, V197, V232, V246, 0xd0c03f35, V249]

================================

Block 0x344
[0x344:0x35f]
---
Predecessors: [0x336]
Successors: [0x360, 0x365]
---
0x344 JUMPDEST
0x345 POP
0x346 POP
0x347 POP
0x348 PUSH1 0x40
0x34a MLOAD
0x34b DUP1
0x34c MLOAD
0x34d SWAP1
0x34e POP
0x34f PUSH1 0x1
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SUB
0x357 AND
0x358 BALANCE
0x359 ADD
0x35a GT
0x35b ISZERO
0x35c PUSH2 0x365
0x35f JUMPI
---
0x344: JUMPDEST 
0x348: V263 = 0x40
0x34a: V264 = M[0x40]
0x34c: V265 = M[V264]
0x34f: V266 = 0x1
0x351: V267 = 0xa0
0x353: V268 = 0x2
0x355: V269 = EXP 0x2 0xa0
0x356: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x357: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x358: V272 = BALANCE V271
0x359: V273 = ADD V272 V232
0x35a: V274 = GT V273 V197
0x35b: V275 = ISZERO V274
0x35c: V276 = 0x365
0x35f: JUMPI 0x365 V275
---
Entry stack: [V10, S6, {0xc3, 0xc6}, V197, V232, V246, 0xd0c03f35, V249]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S6, {0xc3, 0xc6}]

================================

Block 0x360
[0x360:0x364]
---
Predecessors: [0x344]
Successors: []
---
0x360 PUSH1 0x0
0x362 PUSH1 0x0
0x364 REVERT
---
0x360: V277 = 0x0
0x362: V278 = 0x0
0x364: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x365
[0x365:0x38f]
---
Predecessors: [0x344]
Successors: [0x398]
---
0x365 JUMPDEST
0x366 PUSH1 0x1
0x368 PUSH1 0xa0
0x36a PUSH1 0x2
0x36c EXP
0x36d SUB
0x36e CALLER
0x36f AND
0x370 PUSH1 0x0
0x372 SWAP1
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x1
0x377 PUSH1 0x20
0x379 DUP2
0x37a SWAP1
0x37b MSTORE
0x37c PUSH1 0x40
0x37e SWAP1
0x37f SWAP2
0x380 SHA3
0x381 DUP1
0x382 SLOAD
0x383 PUSH1 0xff
0x385 NOT
0x386 AND
0x387 SWAP1
0x388 SWAP2
0x389 OR
0x38a SWAP1
0x38b SSTORE
0x38c PUSH2 0x398
0x38f JUMP
---
0x365: JUMPDEST 
0x366: V279 = 0x1
0x368: V280 = 0xa0
0x36a: V281 = 0x2
0x36c: V282 = EXP 0x2 0xa0
0x36d: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36e: V284 = CALLER
0x36f: V285 = AND V284 0xffffffffffffffffffffffffffffffffffffffff
0x370: V286 = 0x0
0x374: M[0x0] = V285
0x375: V287 = 0x1
0x377: V288 = 0x20
0x37b: M[0x20] = 0x1
0x37c: V289 = 0x40
0x380: V290 = SHA3 0x0 0x40
0x382: V291 = S[V290]
0x383: V292 = 0xff
0x385: V293 = NOT 0xff
0x386: V294 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V291
0x389: V295 = OR 0x1 V294
0x38b: S[V290] = V295
0x38c: V296 = 0x398
0x38f: JUMP 0x398
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x390
[0x390:0x397]
---
Predecessors: [0x24f]
Successors: [0x3f4]
---
0x390 JUMPDEST
0x391 PUSH2 0x398
0x394 PUSH2 0x3f4
0x397 JUMP
---
0x390: JUMPDEST 
0x391: V297 = 0x398
0x394: V298 = 0x3f4
0x397: JUMP 0x3f4
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: [0x398]
Exit stack: [V10, S1, {0xc3, 0xc6}, 0x398]

================================

Block 0x398
[0x398:0x398]
---
Predecessors: [0x365, 0x58b]
Successors: [0x399]
---
0x398 JUMPDEST
---
0x398: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x399
[0x399:0x39d]
---
Predecessors: [0x398]
Successors: [0xc3]
---
0x399 JUMPDEST
0x39a PUSH2 0xc3
0x39d JUMP
---
0x399: JUMPDEST 
0x39a: V299 = 0xc3
0x39d: JUMP 0xc3
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x39e
[0x39e:0x3a9]
---
Predecessors: [0x230]
Successors: [0x3aa, 0x3af]
---
0x39e JUMPDEST
0x39f PUSH1 0x5
0x3a1 SLOAD
0x3a2 PUSH1 0xff
0x3a4 AND
0x3a5 ISZERO
0x3a6 PUSH2 0x3af
0x3a9 JUMPI
---
0x39e: JUMPDEST 
0x39f: V300 = 0x5
0x3a1: V301 = S[0x5]
0x3a2: V302 = 0xff
0x3a4: V303 = AND 0xff V301
0x3a5: V304 = ISZERO V303
0x3a6: V305 = 0x3af
0x3a9: JUMPI 0x3af V304
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x3aa
[0x3aa:0x3ae]
---
Predecessors: [0x39e]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac PUSH1 0x0
0x3ae REVERT
---
0x3aa: V306 = 0x0
0x3ac: V307 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x3af
[0x3af:0x3ba]
---
Predecessors: [0x39e]
Successors: [0x3bb, 0x3c0]
---
0x3af JUMPDEST
0x3b0 PUSH1 0x3
0x3b2 SLOAD
0x3b3 PUSH1 0xff
0x3b5 AND
0x3b6 ISZERO
0x3b7 PUSH2 0x3c0
0x3ba JUMPI
---
0x3af: JUMPDEST 
0x3b0: V308 = 0x3
0x3b2: V309 = S[0x3]
0x3b3: V310 = 0xff
0x3b5: V311 = AND 0xff V309
0x3b6: V312 = ISZERO V311
0x3b7: V313 = 0x3c0
0x3ba: JUMPI 0x3c0 V312
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x3bb
[0x3bb:0x3bf]
---
Predecessors: [0x3af]
Successors: []
---
0x3bb PUSH1 0x0
0x3bd PUSH1 0x0
0x3bf REVERT
---
0x3bb: V314 = 0x0
0x3bd: V315 = 0x0
0x3bf: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x3c0
[0x3c0:0x3de]
---
Predecessors: [0x3af]
Successors: [0x3df]
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x1
0x3c3 PUSH1 0xa0
0x3c5 PUSH1 0x2
0x3c7 EXP
0x3c8 SUB
0x3c9 CALLER
0x3ca AND
0x3cb PUSH1 0x0
0x3cd SWAP1
0x3ce DUP2
0x3cf MSTORE
0x3d0 PUSH1 0x20
0x3d2 DUP2
0x3d3 SWAP1
0x3d4 MSTORE
0x3d5 PUSH1 0x40
0x3d7 SWAP1
0x3d8 SHA3
0x3d9 DUP1
0x3da SLOAD
0x3db CALLVALUE
0x3dc ADD
0x3dd SWAP1
0x3de SSTORE
---
0x3c0: JUMPDEST 
0x3c1: V316 = 0x1
0x3c3: V317 = 0xa0
0x3c5: V318 = 0x2
0x3c7: V319 = EXP 0x2 0xa0
0x3c8: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c9: V321 = CALLER
0x3ca: V322 = AND V321 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V323 = 0x0
0x3cf: M[0x0] = V322
0x3d0: V324 = 0x20
0x3d4: M[0x20] = 0x0
0x3d5: V325 = 0x40
0x3d8: V326 = SHA3 0x0 0x40
0x3da: V327 = S[V326]
0x3db: V328 = CALLVALUE
0x3dc: V329 = ADD V328 V327
0x3de: S[V326] = V329
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x3df
[0x3df:0x3df]
---
Predecessors: [0x3c0]
Successors: [0x3e0]
---
0x3df JUMPDEST
---
0x3df: JUMPDEST 
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc3, 0xc6}]

================================

Block 0x3e0
[0x3e0:0x3e1]
---
Predecessors: [0x3df]
Successors: [0xc3, 0xc6]
---
0x3e0 JUMPDEST
0x3e1 JUMP
---
0x3e0: JUMPDEST 
0x3e1: JUMP {0xc3, 0xc6}
---
Entry stack: [V10, S1, {0xc3, 0xc6}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x3e2
[0x3e2:0x3f3]
---
Predecessors: [0xd0]
Successors: [0xe4]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x0
0x3e5 PUSH1 0x20
0x3e7 DUP2
0x3e8 SWAP1
0x3e9 MSTORE
0x3ea SWAP1
0x3eb DUP2
0x3ec MSTORE
0x3ed PUSH1 0x40
0x3ef SWAP1
0x3f0 SHA3
0x3f1 SLOAD
0x3f2 DUP2
0x3f3 JUMP
---
0x3e2: JUMPDEST 
0x3e3: V330 = 0x0
0x3e5: V331 = 0x20
0x3e9: M[0x20] = 0x0
0x3ec: M[0x0] = V61
0x3ed: V332 = 0x40
0x3f0: V333 = SHA3 0x0 0x40
0x3f1: V334 = S[V333]
0x3f3: JUMP 0xe4
---
Entry stack: [V10, 0xe4, V61]
Stack pops: 2
Stack additions: [S1, V334]
Exit stack: [V10, 0xe4, V334]

================================

Block 0x3f4
[0x3f4:0x407]
---
Predecessors: [0xfe, 0x390]
Successors: [0x408, 0x44e]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x3
0x3f7 SLOAD
0x3f8 PUSH1 0x0
0x3fa SWAP1
0x3fb DUP2
0x3fc SWAP1
0x3fd DUP2
0x3fe SWAP1
0x3ff PUSH1 0xff
0x401 AND
0x402 ISZERO
0x403 ISZERO
0x404 PUSH2 0x44e
0x407 JUMPI
---
0x3f4: JUMPDEST 
0x3f5: V335 = 0x3
0x3f7: V336 = S[0x3]
0x3f8: V337 = 0x0
0x3ff: V338 = 0xff
0x401: V339 = AND 0xff V336
0x402: V340 = ISZERO V339
0x403: V341 = ISZERO V340
0x404: V342 = 0x44e
0x407: JUMPI 0x44e V341
---
Entry stack: [V10, S2, S1, {0xc6, 0x398}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S2, S1, {0xc6, 0x398}, 0x0, 0x0, 0x0]

================================

Block 0x408
[0x408:0x447]
---
Predecessors: [0x3f4]
Successors: [0x448, 0x449]
---
0x408 PUSH1 0x1
0x40a PUSH1 0xa0
0x40c PUSH1 0x2
0x40e EXP
0x40f SUB
0x410 CALLER
0x411 AND
0x412 PUSH1 0x0
0x414 DUP2
0x415 DUP2
0x416 MSTORE
0x417 PUSH1 0x20
0x419 DUP2
0x41a SWAP1
0x41b MSTORE
0x41c PUSH1 0x40
0x41e DUP1
0x41f DUP3
0x420 SHA3
0x421 DUP1
0x422 SLOAD
0x423 SWAP1
0x424 DUP4
0x425 SWAP1
0x426 SSTORE
0x427 SWAP1
0x428 MLOAD
0x429 SWAP1
0x42a SWAP6
0x42b POP
0x42c DUP6
0x42d ISZERO
0x42e PUSH2 0x8fc
0x431 MUL
0x432 SWAP2
0x433 DUP7
0x434 SWAP2
0x435 SWAP1
0x436 DUP2
0x437 DUP2
0x438 DUP2
0x439 DUP6
0x43a DUP9
0x43b DUP9
0x43c CALL
0x43d SWAP4
0x43e POP
0x43f POP
0x440 POP
0x441 POP
0x442 ISZERO
0x443 ISZERO
0x444 PUSH2 0x449
0x447 JUMPI
---
0x408: V343 = 0x1
0x40a: V344 = 0xa0
0x40c: V345 = 0x2
0x40e: V346 = EXP 0x2 0xa0
0x40f: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x410: V348 = CALLER
0x411: V349 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x412: V350 = 0x0
0x416: M[0x0] = V349
0x417: V351 = 0x20
0x41b: M[0x20] = 0x0
0x41c: V352 = 0x40
0x420: V353 = SHA3 0x0 0x40
0x422: V354 = S[V353]
0x426: S[V353] = 0x0
0x428: V355 = M[0x40]
0x42d: V356 = ISZERO V354
0x42e: V357 = 0x8fc
0x431: V358 = MUL 0x8fc V356
0x43c: V359 = CALL V358 V349 V354 V355 0x0 V355 0x0
0x442: V360 = ISZERO V359
0x443: V361 = ISZERO V360
0x444: V362 = 0x449
0x447: JUMPI 0x449 V361
---
Entry stack: [V10, S5, S4, {0xc6, 0x398}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V354, S1, S0]
Exit stack: [V10, S5, S4, {0xc6, 0x398}, V354, 0x0, 0x0]

================================

Block 0x448
[0x448:0x448]
---
Predecessors: [0x408]
Successors: []
---
0x448 INVALID
---
0x448: INVALID 
---
Entry stack: [V10, S5, S4, {0xc6, 0x398}, V354, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x398}, V354, 0x0, 0x0]

================================

Block 0x449
[0x449:0x44d]
---
Predecessors: [0x408]
Successors: [0x58a]
---
0x449 JUMPDEST
0x44a PUSH2 0x58a
0x44d JUMP
---
0x449: JUMPDEST 
0x44a: V363 = 0x58a
0x44d: JUMP 0x58a
---
Entry stack: [V10, S5, S4, {0xc6, 0x398}, V354, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x398}, V354, 0x0, 0x0]

================================

Block 0x44e
[0x44e:0x486]
---
Predecessors: [0x3f4]
Successors: [0x487, 0x48e]
---
0x44e JUMPDEST
0x44f POP
0x450 POP
0x451 PUSH1 0x7
0x453 SLOAD
0x454 PUSH1 0x1
0x456 PUSH1 0xa0
0x458 PUSH1 0x2
0x45a EXP
0x45b SUB
0x45c CALLER
0x45d AND
0x45e PUSH1 0x0
0x460 SWAP1
0x461 DUP2
0x462 MSTORE
0x463 PUSH1 0x20
0x465 DUP2
0x466 DUP2
0x467 MSTORE
0x468 PUSH1 0x40
0x46a DUP1
0x46b DUP4
0x46c SHA3
0x46d DUP1
0x46e SLOAD
0x46f SWAP1
0x470 DUP5
0x471 SWAP1
0x472 SSTORE
0x473 PUSH1 0x1
0x475 SWAP1
0x476 SWAP3
0x477 MSTORE
0x478 DUP3
0x479 SHA3
0x47a SLOAD
0x47b SWAP3
0x47c MUL
0x47d SWAP2
0x47e PUSH1 0xff
0x480 AND
0x481 ISZERO
0x482 ISZERO
0x483 PUSH2 0x48e
0x486 JUMPI
---
0x44e: JUMPDEST 
0x451: V364 = 0x7
0x453: V365 = S[0x7]
0x454: V366 = 0x1
0x456: V367 = 0xa0
0x458: V368 = 0x2
0x45a: V369 = EXP 0x2 0xa0
0x45b: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45c: V371 = CALLER
0x45d: V372 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V373 = 0x0
0x462: M[0x0] = V372
0x463: V374 = 0x20
0x467: M[0x20] = 0x0
0x468: V375 = 0x40
0x46c: V376 = SHA3 0x0 0x40
0x46e: V377 = S[V376]
0x472: S[V376] = 0x0
0x473: V378 = 0x1
0x477: M[0x20] = 0x1
0x479: V379 = SHA3 0x0 0x40
0x47a: V380 = S[V379]
0x47c: V381 = MUL V365 V377
0x47e: V382 = 0xff
0x480: V383 = AND 0xff V380
0x481: V384 = ISZERO V383
0x482: V385 = ISZERO V384
0x483: V386 = 0x48e
0x486: JUMPI 0x48e V385
---
Entry stack: [V10, S5, S4, {0xc6, 0x398}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V381, 0x0]
Exit stack: [V10, S5, S4, {0xc6, 0x398}, 0x0, V381, 0x0]

================================

Block 0x487
[0x487:0x489]
---
Predecessors: [0x44e]
Successors: [0x48a]
---
0x487 PUSH1 0x64
0x489 DUP3
---
0x487: V387 = 0x64
---
Entry stack: [V10, S5, S4, {0xc6, 0x398}, 0x0, V381, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1]
Exit stack: [V10, S5, S4, {0xc6, 0x398}, 0x0, V381, 0x0, 0x64, V381]

================================

Block 0x48a
[0x48a:0x48d]
---
Predecessors: [0x487]
Successors: [0x48e]
---
0x48a JUMPDEST
0x48b DIV
0x48c SWAP1
0x48d POP
---
0x48a: JUMPDEST 
0x48b: V388 = DIV V381 0x64
---
Entry stack: [V10, S7, S6, {0xc6, 0x398}, 0x0, V381, 0x0, 0x64, V381]
Stack pops: 3
Stack additions: [V388]
Exit stack: [V10, S7, S6, {0xc6, 0x398}, 0x0, V381, V388]

================================

Block 0x48e
[0x48e:0x4f7]
---
Predecessors: [0x44e, 0x48a]
Successors: [0x4f8, 0x4f9]
---
0x48e JUMPDEST
0x48f PUSH1 0x9
0x491 SLOAD
0x492 PUSH1 0x40
0x494 DUP1
0x495 MLOAD
0x496 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4b7 DUP2
0x4b8 MSTORE
0x4b9 PUSH1 0x1
0x4bb PUSH1 0xa0
0x4bd PUSH1 0x2
0x4bf EXP
0x4c0 SUB
0x4c1 CALLER
0x4c2 DUP2
0x4c3 AND
0x4c4 PUSH1 0x4
0x4c6 DUP4
0x4c7 ADD
0x4c8 MSTORE
0x4c9 DUP5
0x4ca DUP7
0x4cb SUB
0x4cc PUSH1 0x24
0x4ce DUP4
0x4cf ADD
0x4d0 MSTORE
0x4d1 SWAP2
0x4d2 MLOAD
0x4d3 SWAP2
0x4d4 SWAP1
0x4d5 SWAP3
0x4d6 AND
0x4d7 SWAP2
0x4d8 PUSH4 0xa9059cbb
0x4dd SWAP2
0x4de PUSH1 0x44
0x4e0 DUP1
0x4e1 DUP4
0x4e2 ADD
0x4e3 SWAP3
0x4e4 PUSH1 0x0
0x4e6 SWAP3
0x4e7 SWAP2
0x4e8 SWAP1
0x4e9 DUP3
0x4ea SWAP1
0x4eb SUB
0x4ec ADD
0x4ed DUP2
0x4ee DUP4
0x4ef DUP8
0x4f0 DUP1
0x4f1 EXTCODESIZE
0x4f2 ISZERO
0x4f3 ISZERO
0x4f4 PUSH2 0x4f9
0x4f7 JUMPI
---
0x48e: JUMPDEST 
0x48f: V389 = 0x9
0x491: V390 = S[0x9]
0x492: V391 = 0x40
0x495: V392 = M[0x40]
0x496: V393 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4b8: M[V392] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4b9: V394 = 0x1
0x4bb: V395 = 0xa0
0x4bd: V396 = 0x2
0x4bf: V397 = EXP 0x2 0xa0
0x4c0: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c1: V399 = CALLER
0x4c3: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x4c4: V401 = 0x4
0x4c7: V402 = ADD V392 0x4
0x4c8: M[V402] = V400
0x4cb: V403 = SUB V381 S0
0x4cc: V404 = 0x24
0x4cf: V405 = ADD V392 0x24
0x4d0: M[V405] = V403
0x4d2: V406 = M[0x40]
0x4d6: V407 = AND V390 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: V408 = 0xa9059cbb
0x4de: V409 = 0x44
0x4e2: V410 = ADD V392 0x44
0x4e4: V411 = 0x0
0x4eb: V412 = SUB V392 V406
0x4ec: V413 = ADD V412 0x44
0x4f1: V414 = EXTCODESIZE V407
0x4f2: V415 = ISZERO V414
0x4f3: V416 = ISZERO V415
0x4f4: V417 = 0x4f9
0x4f7: JUMPI 0x4f9 V416
---
Entry stack: [V10, S5, S4, {0xc6, 0x398}, 0x0, V381, S0]
Stack pops: 2
Stack additions: [S1, S0, V407, 0xa9059cbb, V410, 0x0, V406, V413, V406, 0x0, V407]
Exit stack: [V10, S5, S4, {0xc6, 0x398}, 0x0, V381, S0, V407, 0xa9059cbb, V410, 0x0, V406, V413, V406, 0x0, V407]

================================

Block 0x4f8
[0x4f8:0x4f8]
---
Predecessors: [0x48e]
Successors: []
---
0x4f8 INVALID
---
0x4f8: INVALID 
---
Entry stack: [V10, S14, S13, {0xc6, 0x398}, 0x0, S10, S9, V407, 0xa9059cbb, V410, 0x0, V406, V413, V406, 0x0, V407]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, {0xc6, 0x398}, 0x0, S10, S9, V407, 0xa9059cbb, V410, 0x0, V406, V413, V406, 0x0, V407]

================================

Block 0x4f9
[0x4f9:0x505]
---
Predecessors: [0x48e]
Successors: [0x506, 0x507]
---
0x4f9 JUMPDEST
0x4fa PUSH2 0x2c6
0x4fd GAS
0x4fe SUB
0x4ff CALL
0x500 ISZERO
0x501 ISZERO
0x502 PUSH2 0x507
0x505 JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V418 = 0x2c6
0x4fd: V419 = GAS
0x4fe: V420 = SUB V419 0x2c6
0x4ff: V421 = CALL V420 V407 0x0 V406 V413 V406 0x0
0x500: V422 = ISZERO V421
0x501: V423 = ISZERO V422
0x502: V424 = 0x507
0x505: JUMPI 0x507 V423
---
Entry stack: [V10, S14, S13, {0xc6, 0x398}, 0x0, S10, S9, V407, 0xa9059cbb, V410, 0x0, V406, V413, V406, 0x0, V407]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, S13, {0xc6, 0x398}, 0x0, S10, S9, V407, 0xa9059cbb, V410]

================================

Block 0x506
[0x506:0x506]
---
Predecessors: [0x4f9]
Successors: []
---
0x506 INVALID
---
0x506: INVALID 
---
Entry stack: [V10, S8, S7, {0xc6, 0x398}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, {0xc6, 0x398}, 0x0, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x507
[0x507:0x576]
---
Predecessors: [0x4f9]
Successors: [0x577, 0x578]
---
0x507 JUMPDEST
0x508 POP
0x509 POP
0x50a PUSH1 0x9
0x50c SLOAD
0x50d PUSH1 0xa
0x50f SLOAD
0x510 PUSH1 0x40
0x512 DUP1
0x513 MLOAD
0x514 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x535 DUP2
0x536 MSTORE
0x537 PUSH1 0x1
0x539 PUSH1 0xa0
0x53b PUSH1 0x2
0x53d EXP
0x53e SUB
0x53f SWAP3
0x540 DUP4
0x541 AND
0x542 PUSH1 0x4
0x544 DUP3
0x545 ADD
0x546 MSTORE
0x547 PUSH1 0x24
0x549 DUP2
0x54a ADD
0x54b DUP7
0x54c SWAP1
0x54d MSTORE
0x54e SWAP1
0x54f MLOAD
0x550 SWAP2
0x551 SWAP1
0x552 SWAP3
0x553 AND
0x554 SWAP3
0x555 POP
0x556 PUSH4 0xa9059cbb
0x55b SWAP2
0x55c PUSH1 0x44
0x55e DUP1
0x55f DUP3
0x560 ADD
0x561 SWAP3
0x562 PUSH1 0x0
0x564 SWAP3
0x565 SWAP1
0x566 SWAP2
0x567 SWAP1
0x568 DUP3
0x569 SWAP1
0x56a SUB
0x56b ADD
0x56c DUP2
0x56d DUP4
0x56e DUP8
0x56f DUP1
0x570 EXTCODESIZE
0x571 ISZERO
0x572 ISZERO
0x573 PUSH2 0x578
0x576 JUMPI
---
0x507: JUMPDEST 
0x50a: V425 = 0x9
0x50c: V426 = S[0x9]
0x50d: V427 = 0xa
0x50f: V428 = S[0xa]
0x510: V429 = 0x40
0x513: V430 = M[0x40]
0x514: V431 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x536: M[V430] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x537: V432 = 0x1
0x539: V433 = 0xa0
0x53b: V434 = 0x2
0x53d: V435 = EXP 0x2 0xa0
0x53e: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x541: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x542: V438 = 0x4
0x545: V439 = ADD V430 0x4
0x546: M[V439] = V437
0x547: V440 = 0x24
0x54a: V441 = ADD V430 0x24
0x54d: M[V441] = S3
0x54f: V442 = M[0x40]
0x553: V443 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x556: V444 = 0xa9059cbb
0x55c: V445 = 0x44
0x560: V446 = ADD V430 0x44
0x562: V447 = 0x0
0x56a: V448 = SUB V430 V442
0x56b: V449 = ADD V448 0x44
0x570: V450 = EXTCODESIZE V443
0x571: V451 = ISZERO V450
0x572: V452 = ISZERO V451
0x573: V453 = 0x578
0x576: JUMPI 0x578 V452
---
Entry stack: [V10, S8, S7, {0xc6, 0x398}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 4
Stack additions: [S3, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443]
Exit stack: [V10, S8, S7, {0xc6, 0x398}, 0x0, S4, S3, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443]

================================

Block 0x577
[0x577:0x577]
---
Predecessors: [0x507]
Successors: []
---
0x577 INVALID
---
0x577: INVALID 
---
Entry stack: [V10, S14, S13, {0xc6, 0x398}, 0x0, S10, S9, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, {0xc6, 0x398}, 0x0, S10, S9, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443]

================================

Block 0x578
[0x578:0x584]
---
Predecessors: [0x507]
Successors: [0x585, 0x586]
---
0x578 JUMPDEST
0x579 PUSH2 0x2c6
0x57c GAS
0x57d SUB
0x57e CALL
0x57f ISZERO
0x580 ISZERO
0x581 PUSH2 0x586
0x584 JUMPI
---
0x578: JUMPDEST 
0x579: V454 = 0x2c6
0x57c: V455 = GAS
0x57d: V456 = SUB V455 0x2c6
0x57e: V457 = CALL V456 V443 0x0 V442 V449 V442 0x0
0x57f: V458 = ISZERO V457
0x580: V459 = ISZERO V458
0x581: V460 = 0x586
0x584: JUMPI 0x586 V459
---
Entry stack: [V10, S14, S13, {0xc6, 0x398}, 0x0, S10, S9, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, S13, {0xc6, 0x398}, 0x0, S10, S9, V443, 0xa9059cbb, V446]

================================

Block 0x585
[0x585:0x585]
---
Predecessors: [0x578]
Successors: []
---
0x585 INVALID
---
0x585: INVALID 
---
Entry stack: [V10, S8, S7, {0xc6, 0x398}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, {0xc6, 0x398}, 0x0, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x586
[0x586:0x589]
---
Predecessors: [0x578]
Successors: [0x58a]
---
0x586 JUMPDEST
0x587 POP
0x588 POP
0x589 POP
---
0x586: JUMPDEST 
---
Entry stack: [V10, S8, S7, {0xc6, 0x398}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S8, S7, {0xc6, 0x398}, 0x0, S4, S3]

================================

Block 0x58a
[0x58a:0x58a]
---
Predecessors: [0x449, 0x586]
Successors: [0x58b]
---
0x58a JUMPDEST
---
0x58a: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0xc6, 0x398}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0xc6, 0x398}, S2, S1, S0]

================================

Block 0x58b
[0x58b:0x58f]
---
Predecessors: [0x58a]
Successors: [0xc6, 0x398]
---
0x58b JUMPDEST
0x58c POP
0x58d POP
0x58e POP
0x58f JUMP
---
0x58b: JUMPDEST 
0x58f: JUMP {0xc6, 0x398}
---
Entry stack: [V10, S5, S4, {0xc6, 0x398}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S5, S4]

================================

Block 0x590
[0x590:0x5a4]
---
Predecessors: [0x110]
Successors: [0x124]
---
0x590 JUMPDEST
0x591 PUSH1 0x1
0x593 PUSH1 0x20
0x595 MSTORE
0x596 PUSH1 0x0
0x598 SWAP1
0x599 DUP2
0x59a MSTORE
0x59b PUSH1 0x40
0x59d SWAP1
0x59e SHA3
0x59f SLOAD
0x5a0 PUSH1 0xff
0x5a2 AND
0x5a3 DUP2
0x5a4 JUMP
---
0x590: JUMPDEST 
0x591: V461 = 0x1
0x593: V462 = 0x20
0x595: M[0x20] = 0x1
0x596: V463 = 0x0
0x59a: M[0x0] = V85
0x59b: V464 = 0x40
0x59e: V465 = SHA3 0x0 0x40
0x59f: V466 = S[V465]
0x5a0: V467 = 0xff
0x5a2: V468 = AND 0xff V466
0x5a4: JUMP 0x124
---
Entry stack: [V10, 0x124, V85]
Stack pops: 2
Stack additions: [S1, V468]
Exit stack: [V10, 0x124, V468]

================================

Block 0x5a5
[0x5a5:0x5b0]
---
Predecessors: [0x142]
Successors: [0x5b1, 0x5b6]
---
0x5a5 JUMPDEST
0x5a6 PUSH1 0x5
0x5a8 SLOAD
0x5a9 PUSH1 0xff
0x5ab AND
0x5ac ISZERO
0x5ad PUSH2 0x5b6
0x5b0 JUMPI
---
0x5a5: JUMPDEST 
0x5a6: V469 = 0x5
0x5a8: V470 = S[0x5]
0x5a9: V471 = 0xff
0x5ab: V472 = AND 0xff V470
0x5ac: V473 = ISZERO V472
0x5ad: V474 = 0x5b6
0x5b0: JUMPI 0x5b6 V473
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x5b1
[0x5b1:0x5b5]
---
Predecessors: [0x5a5]
Successors: []
---
0x5b1 PUSH1 0x0
0x5b3 PUSH1 0x0
0x5b5 REVERT
---
0x5b1: V475 = 0x0
0x5b3: V476 = 0x0
0x5b5: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x5b6
[0x5b6:0x5c1]
---
Predecessors: [0x5a5]
Successors: [0x5c2, 0x5c7]
---
0x5b6 JUMPDEST
0x5b7 PUSH1 0x3
0x5b9 SLOAD
0x5ba PUSH1 0xff
0x5bc AND
0x5bd ISZERO
0x5be PUSH2 0x5c7
0x5c1 JUMPI
---
0x5b6: JUMPDEST 
0x5b7: V477 = 0x3
0x5b9: V478 = S[0x3]
0x5ba: V479 = 0xff
0x5bc: V480 = AND 0xff V478
0x5bd: V481 = ISZERO V480
0x5be: V482 = 0x5c7
0x5c1: JUMPI 0x5c7 V481
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x5c2
[0x5c2:0x5c6]
---
Predecessors: [0x5b6]
Successors: []
---
0x5c2 PUSH1 0x0
0x5c4 PUSH1 0x0
0x5c6 REVERT
---
0x5c2: V483 = 0x0
0x5c4: V484 = 0x0
0x5c6: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x5c7
[0x5c7:0x5cf]
---
Predecessors: [0x5b6]
Successors: [0x5d0]
---
0x5c7 JUMPDEST
0x5c8 PUSH1 0x2
0x5ca DUP1
0x5cb SLOAD
0x5cc CALLVALUE
0x5cd ADD
0x5ce SWAP1
0x5cf SSTORE
---
0x5c7: JUMPDEST 
0x5c8: V485 = 0x2
0x5cb: V486 = S[0x2]
0x5cc: V487 = CALLVALUE
0x5cd: V488 = ADD V487 V486
0x5cf: S[0x2] = V488
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x5d0
[0x5d0:0x5d1]
---
Predecessors: [0x5c7]
Successors: [0xc6]
---
0x5d0 JUMPDEST
0x5d1 JUMP
---
0x5d0: JUMPDEST 
0x5d1: JUMP 0xc6
---
Entry stack: [V10, 0xc6]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d2
[0x5d2:0x5da]
---
Predecessors: [0x154]
Successors: [0x124]
---
0x5d2 JUMPDEST
0x5d3 PUSH1 0x3
0x5d5 SLOAD
0x5d6 PUSH1 0xff
0x5d8 AND
0x5d9 DUP2
0x5da JUMP
---
0x5d2: JUMPDEST 
0x5d3: V489 = 0x3
0x5d5: V490 = S[0x3]
0x5d6: V491 = 0xff
0x5d8: V492 = AND 0xff V490
0x5da: JUMP 0x124
---
Entry stack: [V10, 0x124]
Stack pops: 1
Stack additions: [S0, V492]
Exit stack: [V10, 0x124, V492]

================================

Block 0x5db
[0x5db:0x5e9]
---
Predecessors: [0x178]
Successors: [0x180]
---
0x5db JUMPDEST
0x5dc PUSH1 0x8
0x5de SLOAD
0x5df PUSH1 0x1
0x5e1 PUSH1 0xa0
0x5e3 PUSH1 0x2
0x5e5 EXP
0x5e6 SUB
0x5e7 AND
0x5e8 DUP2
0x5e9 JUMP
---
0x5db: JUMPDEST 
0x5dc: V493 = 0x8
0x5de: V494 = S[0x8]
0x5df: V495 = 0x1
0x5e1: V496 = 0xa0
0x5e3: V497 = 0x2
0x5e5: V498 = EXP 0x2 0xa0
0x5e6: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e7: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x5e9: JUMP 0x180
---
Entry stack: [V10, 0x180]
Stack pops: 1
Stack additions: [S0, V500]
Exit stack: [V10, 0x180, V500]

================================

Block 0x5ea
[0x5ea:0x600]
---
Predecessors: [0x1a4]
Successors: [0x601, 0x606]
---
0x5ea JUMPDEST
0x5eb PUSH1 0xa
0x5ed SLOAD
0x5ee CALLER
0x5ef PUSH1 0x1
0x5f1 PUSH1 0xa0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 SUB
0x5f7 SWAP1
0x5f8 DUP2
0x5f9 AND
0x5fa SWAP2
0x5fb AND
0x5fc EQ
0x5fd PUSH2 0x606
0x600 JUMPI
---
0x5ea: JUMPDEST 
0x5eb: V501 = 0xa
0x5ed: V502 = S[0xa]
0x5ee: V503 = CALLER
0x5ef: V504 = 0x1
0x5f1: V505 = 0xa0
0x5f3: V506 = 0x2
0x5f5: V507 = EXP 0x2 0xa0
0x5f6: V508 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f9: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x5fb: V510 = AND V502 0xffffffffffffffffffffffffffffffffffffffff
0x5fc: V511 = EQ V510 V509
0x5fd: V512 = 0x606
0x600: JUMPI 0x606 V511
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x601
[0x601:0x605]
---
Predecessors: [0x5ea]
Successors: []
---
0x601 PUSH1 0x0
0x603 PUSH1 0x0
0x605 REVERT
---
0x601: V513 = 0x0
0x603: V514 = 0x0
0x605: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x606
[0x606:0x613]
---
Predecessors: [0x5ea]
Successors: [0x614]
---
0x606 JUMPDEST
0x607 PUSH1 0x5
0x609 DUP1
0x60a SLOAD
0x60b PUSH1 0xff
0x60d NOT
0x60e AND
0x60f PUSH1 0x1
0x611 OR
0x612 SWAP1
0x613 SSTORE
---
0x606: JUMPDEST 
0x607: V515 = 0x5
0x60a: V516 = S[0x5]
0x60b: V517 = 0xff
0x60d: V518 = NOT 0xff
0x60e: V519 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V516
0x60f: V520 = 0x1
0x611: V521 = OR 0x1 V519
0x613: S[0x5] = V521
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x614
[0x614:0x615]
---
Predecessors: [0x606]
Successors: [0xc6]
---
0x614 JUMPDEST
0x615 JUMP
---
0x614: JUMPDEST 
0x615: JUMP 0xc6
---
Entry stack: [V10, 0xc6]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x616
[0x616:0x61b]
---
Predecessors: [0x1b6]
Successors: [0xe4]
---
0x616 JUMPDEST
0x617 PUSH1 0x2
0x619 SLOAD
0x61a DUP2
0x61b JUMP
---
0x616: JUMPDEST 
0x617: V522 = 0x2
0x619: V523 = S[0x2]
0x61b: JUMP 0xe4
---
Entry stack: [V10, 0xe4]
Stack pops: 1
Stack additions: [S0, V523]
Exit stack: [V10, 0xe4, V523]

================================

Block 0x61c
[0x61c:0x627]
---
Predecessors: [0x1d8]
Successors: [0x628, 0x62c]
---
0x61c JUMPDEST
0x61d PUSH1 0x3
0x61f SLOAD
0x620 PUSH1 0xff
0x622 AND
0x623 ISZERO
0x624 PUSH2 0x62c
0x627 JUMPI
---
0x61c: JUMPDEST 
0x61d: V524 = 0x3
0x61f: V525 = S[0x3]
0x620: V526 = 0xff
0x622: V527 = AND 0xff V525
0x623: V528 = ISZERO V527
0x624: V529 = 0x62c
0x627: JUMPI 0x62c V528
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x628
[0x628:0x62b]
---
Predecessors: [0x61c]
Successors: [0xc3]
---
0x628 PUSH2 0xc3
0x62b JUMP
---
0x628: V530 = 0xc3
0x62b: JUMP 0xc3
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x62c
[0x62c:0x637]
---
Predecessors: [0x61c]
Successors: [0x638, 0x63d]
---
0x62c JUMPDEST
0x62d PUSH1 0x5
0x62f SLOAD
0x630 PUSH1 0xff
0x632 AND
0x633 ISZERO
0x634 PUSH2 0x63d
0x637 JUMPI
---
0x62c: JUMPDEST 
0x62d: V531 = 0x5
0x62f: V532 = S[0x5]
0x630: V533 = 0xff
0x632: V534 = AND 0xff V532
0x633: V535 = ISZERO V534
0x634: V536 = 0x63d
0x637: JUMPI 0x63d V535
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x638
[0x638:0x63c]
---
Predecessors: [0x62c]
Successors: []
---
0x638 PUSH1 0x0
0x63a PUSH1 0x0
0x63c REVERT
---
0x638: V537 = 0x0
0x63a: V538 = 0x0
0x63c: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x63d
[0x63d:0x6be]
---
Predecessors: [0x62c]
Successors: [0x6bf, 0x6c0]
---
0x63d JUMPDEST
0x63e PUSH1 0x3
0x640 DUP1
0x641 SLOAD
0x642 PUSH1 0xff
0x644 NOT
0x645 AND
0x646 PUSH1 0x1
0x648 OR
0x649 SWAP1
0x64a SSTORE
0x64b TIMESTAMP
0x64c PUSH1 0x4
0x64e SWAP1
0x64f DUP2
0x650 SSTORE
0x651 PUSH1 0x8
0x653 SLOAD
0x654 PUSH1 0x2
0x656 SLOAD
0x657 PUSH1 0x40
0x659 DUP1
0x65a MLOAD
0x65b PUSH32 0xcedbbeee00000000000000000000000000000000000000000000000000000000
0x67c DUP2
0x67d MSTORE
0x67e ADDRESS
0x67f PUSH1 0x1
0x681 PUSH1 0xa0
0x683 PUSH1 0x2
0x685 EXP
0x686 SUB
0x687 SWAP1
0x688 DUP2
0x689 AND
0x68a SWAP6
0x68b DUP3
0x68c ADD
0x68d DUP7
0x68e SWAP1
0x68f MSTORE
0x690 SWAP2
0x691 MLOAD
0x692 SWAP2
0x693 SWAP1
0x694 SWAP4
0x695 AND
0x696 SWAP4
0x697 PUSH4 0xcedbbeee
0x69c SWAP4
0x69d SWAP1
0x69e BALANCE
0x69f SWAP3
0x6a0 SWAP1
0x6a1 SWAP3
0x6a2 SUB
0x6a3 SWAP2
0x6a4 PUSH1 0x24
0x6a6 DUP1
0x6a7 DUP3
0x6a8 ADD
0x6a9 SWAP3
0x6aa PUSH1 0x0
0x6ac SWAP3
0x6ad SWAP1
0x6ae SWAP2
0x6af SWAP1
0x6b0 DUP3
0x6b1 SWAP1
0x6b2 SUB
0x6b3 ADD
0x6b4 DUP2
0x6b5 DUP6
0x6b6 DUP9
0x6b7 DUP1
0x6b8 EXTCODESIZE
0x6b9 ISZERO
0x6ba ISZERO
0x6bb PUSH2 0x6c0
0x6be JUMPI
---
0x63d: JUMPDEST 
0x63e: V539 = 0x3
0x641: V540 = S[0x3]
0x642: V541 = 0xff
0x644: V542 = NOT 0xff
0x645: V543 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V540
0x646: V544 = 0x1
0x648: V545 = OR 0x1 V543
0x64a: S[0x3] = V545
0x64b: V546 = TIMESTAMP
0x64c: V547 = 0x4
0x650: S[0x4] = V546
0x651: V548 = 0x8
0x653: V549 = S[0x8]
0x654: V550 = 0x2
0x656: V551 = S[0x2]
0x657: V552 = 0x40
0x65a: V553 = M[0x40]
0x65b: V554 = 0xcedbbeee00000000000000000000000000000000000000000000000000000000
0x67d: M[V553] = 0xcedbbeee00000000000000000000000000000000000000000000000000000000
0x67e: V555 = ADDRESS
0x67f: V556 = 0x1
0x681: V557 = 0xa0
0x683: V558 = 0x2
0x685: V559 = EXP 0x2 0xa0
0x686: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x689: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x68c: V562 = ADD V553 0x4
0x68f: M[V562] = V561
0x691: V563 = M[0x40]
0x695: V564 = AND V549 0xffffffffffffffffffffffffffffffffffffffff
0x697: V565 = 0xcedbbeee
0x69e: V566 = BALANCE V561
0x6a2: V567 = SUB V566 V551
0x6a4: V568 = 0x24
0x6a8: V569 = ADD V553 0x24
0x6aa: V570 = 0x0
0x6b2: V571 = SUB V553 V563
0x6b3: V572 = ADD V571 0x24
0x6b8: V573 = EXTCODESIZE V564
0x6b9: V574 = ISZERO V573
0x6ba: V575 = ISZERO V574
0x6bb: V576 = 0x6c0
0x6be: JUMPI 0x6c0 V575
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: [V564, 0xcedbbeee, V567, V569, 0x0, V563, V572, V563, V567, V564]
Exit stack: [V10, 0xc6, V564, 0xcedbbeee, V567, V569, 0x0, V563, V572, V563, V567, V564]

================================

Block 0x6bf
[0x6bf:0x6bf]
---
Predecessors: [0x63d]
Successors: []
---
0x6bf INVALID
---
0x6bf: INVALID 
---
Entry stack: [V10, 0xc6, V564, 0xcedbbeee, V567, V569, 0x0, V563, V572, V563, V567, V564]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6, V564, 0xcedbbeee, V567, V569, 0x0, V563, V572, V563, V567, V564]

================================

Block 0x6c0
[0x6c0:0x6cc]
---
Predecessors: [0x63d]
Successors: [0x6cd, 0x6ce]
---
0x6c0 JUMPDEST
0x6c1 PUSH2 0x25ee
0x6c4 GAS
0x6c5 SUB
0x6c6 CALL
0x6c7 ISZERO
0x6c8 ISZERO
0x6c9 PUSH2 0x6ce
0x6cc JUMPI
---
0x6c0: JUMPDEST 
0x6c1: V577 = 0x25ee
0x6c4: V578 = GAS
0x6c5: V579 = SUB V578 0x25ee
0x6c6: V580 = CALL V579 V564 V567 V563 V572 V563 0x0
0x6c7: V581 = ISZERO V580
0x6c8: V582 = ISZERO V581
0x6c9: V583 = 0x6ce
0x6cc: JUMPI 0x6ce V582
---
Entry stack: [V10, 0xc6, V564, 0xcedbbeee, V567, V569, 0x0, V563, V572, V563, V567, V564]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xc6, V564, 0xcedbbeee, V567, V569]

================================

Block 0x6cd
[0x6cd:0x6cd]
---
Predecessors: [0x6c0]
Successors: []
---
0x6cd INVALID
---
0x6cd: INVALID 
---
Entry stack: [V10, 0xc6, V564, 0xcedbbeee, V567, V569]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6, V564, 0xcedbbeee, V567, V569]

================================

Block 0x6ce
[0x6ce:0x6fe]
---
Predecessors: [0x6c0]
Successors: [0xc3, 0x6ff]
---
0x6ce JUMPDEST
0x6cf POP
0x6d0 POP
0x6d1 PUSH1 0x2
0x6d3 SLOAD
0x6d4 PUSH1 0x40
0x6d6 MLOAD
0x6d7 PUSH1 0x1
0x6d9 PUSH1 0xa0
0x6db PUSH1 0x2
0x6dd EXP
0x6de SUB
0x6df CALLER
0x6e0 AND
0x6e1 SWAP4
0x6e2 POP
0x6e3 DUP2
0x6e4 ISZERO
0x6e5 PUSH2 0x8fc
0x6e8 MUL
0x6e9 SWAP3
0x6ea POP
0x6eb PUSH1 0x0
0x6ed DUP2
0x6ee DUP2
0x6ef DUP2
0x6f0 DUP6
0x6f1 DUP9
0x6f2 DUP9
0x6f3 CALL
0x6f4 SWAP4
0x6f5 POP
0x6f6 POP
0x6f7 POP
0x6f8 POP
0x6f9 ISZERO
0x6fa ISZERO
0x6fb PUSH2 0xc3
0x6fe JUMPI
---
0x6ce: JUMPDEST 
0x6d1: V584 = 0x2
0x6d3: V585 = S[0x2]
0x6d4: V586 = 0x40
0x6d6: V587 = M[0x40]
0x6d7: V588 = 0x1
0x6d9: V589 = 0xa0
0x6db: V590 = 0x2
0x6dd: V591 = EXP 0x2 0xa0
0x6de: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6df: V593 = CALLER
0x6e0: V594 = AND V593 0xffffffffffffffffffffffffffffffffffffffff
0x6e4: V595 = ISZERO V585
0x6e5: V596 = 0x8fc
0x6e8: V597 = MUL 0x8fc V595
0x6eb: V598 = 0x0
0x6f3: V599 = CALL V597 V594 V585 V587 0x0 V587 0x0
0x6f9: V600 = ISZERO V599
0x6fa: V601 = ISZERO V600
0x6fb: V602 = 0xc3
0x6fe: JUMPI 0xc3 V601
---
Entry stack: [V10, 0xc6, V564, 0xcedbbeee, V567, V569]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x6ff
[0x6ff:0x6ff]
---
Predecessors: [0x6ce]
Successors: []
---
0x6ff INVALID
---
0x6ff: INVALID 
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x700
[0x700:0x700]
---
Predecessors: []
Successors: [0x701]
---
0x700 JUMPDEST
---
0x700: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x701
[0x701:0x702]
---
Predecessors: [0x700]
Successors: []
Has unresolved jump.
---
0x701 JUMPDEST
0x702 JUMP
---
0x701: JUMPDEST 
0x702: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x703
[0x703:0x708]
---
Predecessors: [0x1ea]
Successors: [0xe4]
---
0x703 JUMPDEST
0x704 PUSH1 0x4
0x706 SLOAD
0x707 DUP2
0x708 JUMP
---
0x703: JUMPDEST 
0x704: V603 = 0x4
0x706: V604 = S[0x4]
0x708: JUMP 0xe4
---
Entry stack: [V10, 0xe4]
Stack pops: 1
Stack additions: [S0, V604]
Exit stack: [V10, 0xe4, V604]

================================

Block 0x709
[0x709:0x717]
---
Predecessors: [0x20c]
Successors: [0x180]
---
0x709 JUMPDEST
0x70a PUSH1 0x9
0x70c SLOAD
0x70d PUSH1 0x1
0x70f PUSH1 0xa0
0x711 PUSH1 0x2
0x713 EXP
0x714 SUB
0x715 AND
0x716 DUP2
0x717 JUMP
---
0x709: JUMPDEST 
0x70a: V605 = 0x9
0x70c: V606 = S[0x9]
0x70d: V607 = 0x1
0x70f: V608 = 0xa0
0x711: V609 = 0x2
0x713: V610 = EXP 0x2 0xa0
0x714: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x715: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x717: JUMP 0x180
---
Entry stack: [V10, 0x180]
Stack pops: 1
Stack additions: [S0, V612]
Exit stack: [V10, 0x180, V612]

================================

Block 0x718
[0x718:0x743]
---
Predecessors: []
Successors: []
---
0x718 STOP
0x719 LOG1
0x71a PUSH6 0x627a7a723058
0x721 SHA3
0x722 LOG2
0x723 MISSING 0xc2
0x724 MISSING 0xdd
0x725 BALANCE
0x726 MISSING 0xc4
0x727 MISSING 0x4d
0x728 SWAP6
0x729 MISSING 0xae
0x72a DUP10
0x72b DIFFICULTY
0x72c NUMBER
0x72d MLOAD
0x72e MISSING 0xea
0x72f CODESIZE
0x730 MISSING 0xef
0x731 MISSING 0x5e
0x732 LOG2
0x733 MISSING 0xc4
0x734 SSTORE
0x735 MULMOD
0x736 BYTE
0x737 MISSING 0x24
0x738 MISSING 0xe6
0x739 MISSING 0x2d
0x73a MISSING 0xab
0x73b MISSING 0xeb
0x73c MISSING 0xb8
0x73d MISSING 0xb7
0x73e SWAP15
0x73f ADDMOD
0x740 SWAP3
0x741 MISSING 0x21
0x742 STOP
0x743 MISSING 0x29
---
0x718: STOP 
0x719: LOG S0 S1 S2
0x71a: V613 = 0x627a7a723058
0x721: V614 = SHA3 0x627a7a723058 S3
0x722: LOG V614 S4 S5 S6
0x723: MISSING 0xc2
0x724: MISSING 0xdd
0x725: V615 = BALANCE S0
0x726: MISSING 0xc4
0x727: MISSING 0x4d
0x729: MISSING 0xae
0x72b: V616 = DIFFICULTY
0x72c: V617 = NUMBER
0x72d: V618 = M[V617]
0x72e: MISSING 0xea
0x72f: V619 = CODESIZE
0x730: MISSING 0xef
0x731: MISSING 0x5e
0x732: LOG S0 S1 S2 S3
0x733: MISSING 0xc4
0x734: S[S0] = S1
0x735: V620 = MULMOD S2 S3 S4
0x736: V621 = BYTE V620 S5
0x737: MISSING 0x24
0x738: MISSING 0xe6
0x739: MISSING 0x2d
0x73a: MISSING 0xab
0x73b: MISSING 0xeb
0x73c: MISSING 0xb8
0x73d: MISSING 0xb7
0x73f: V622 = ADDMOD S15 S1 S2
0x741: MISSING 0x21
0x742: STOP 
0x743: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V615, S6, S1, S2, S3, S4, S5, S0, V618, V616, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V619, V621, S5, S3, S4, V622, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x27e235e3
Entry block: 0xc8
Exit block: 0xe4
Body: 0xc8, 0xcf, 0xd0, 0xe4, 0x3e2

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xf6
Exit block: 0xc6
Body: 0xc6, 0xf6, 0xfd, 0xfe

Function 2:
Public function signature: 0x434f5f27
Entry block: 0x108
Exit block: 0x124
Body: 0x108, 0x10f, 0x110, 0x124, 0x590

Function 3:
Public function signature: 0x5259347d
Entry block: 0x138
Exit block: 0xc6
Body: 0xc6, 0x138

Function 4:
Public function signature: 0x62f5ed61
Entry block: 0x142
Exit block: 0xc6
Body: 0xc6, 0x142, 0x5a5, 0x5b1, 0x5b6, 0x5c2, 0x5c7, 0x5d0

Function 5:
Public function signature: 0x6360fc3f
Entry block: 0x14c
Exit block: 0x124
Body: 0x124, 0x14c, 0x153, 0x154, 0x5d2

Function 6:
Public function signature: 0x6ad1fe02
Entry block: 0x170
Exit block: 0x180
Body: 0x170, 0x177, 0x178, 0x180, 0x5db

Function 7:
Public function signature: 0x70144f8f
Entry block: 0x19c
Exit block: 0xc6
Body: 0xc6, 0x19c, 0x1a3, 0x1a4, 0x5ea, 0x601, 0x606, 0x614

Function 8:
Public function signature: 0x943dfef1
Entry block: 0x1ae
Exit block: 0xe4
Body: 0xe4, 0x1ae, 0x1b5, 0x1b6, 0x616

Function 9:
Public function signature: 0xa6f2ae3a
Entry block: 0x1d0
Exit block: 0x6ff
Body: 0xc3, 0xc4, 0xc6, 0x1d0, 0x1d7, 0x1d8, 0x61c, 0x628, 0x62c, 0x638, 0x63d, 0x6bf, 0x6c0, 0x6cd, 0x6ce, 0x6ff

Function 10:
Public function signature: 0xc3dac9a1
Entry block: 0x1e2
Exit block: 0xe4
Body: 0xe4, 0x1e2, 0x1e9, 0x1ea, 0x703

Function 11:
Public function signature: 0xfc0c546a
Entry block: 0x204
Exit block: 0x180
Body: 0x180, 0x204, 0x20b, 0x20c, 0x709

Function 12:
Public fallback function
Entry block: 0xb7
Exit block: 0xc6
Body: 0xb7, 0xbb, 0xc3, 0xc4, 0xc6

Function 13:
Private function
Entry block: 0x3f4
Exit block: 0x58b
Body: 0x3f4, 0x408, 0x449, 0x44e, 0x487, 0x48a, 0x48e, 0x4f9, 0x507, 0x578, 0x586, 0x58a, 0x58b

Function 14:
Private function
Entry block: 0x230
Exit block: 0x3e0
Body: 0x230, 0x238, 0x244, 0x24f, 0x255, 0x2bb, 0x2c9, 0x336, 0x344, 0x365, 0x390, 0x398, 0x399, 0x39e, 0x3af, 0x3c0, 0x3df, 0x3e0

