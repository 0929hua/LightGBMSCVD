Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xeb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xeb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xeb
0xa: JUMPI 0xeb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x103]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x13af4035
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x103
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x13af4035
0x20: V14 = EQ V12 0x13af4035
0x21: V15 = 0x103
0x24: JUMPI 0x103 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x121]
---
0x25 DUP1
0x26 PUSH4 0x1c31f710
0x2b EQ
0x2c PUSH2 0x121
0x2f JUMPI
---
0x26: V16 = 0x1c31f710
0x2b: V17 = EQ 0x1c31f710 V12
0x2c: V18 = 0x121
0x2f: JUMPI 0x121 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x13f]
---
0x30 DUP1
0x31 PUSH4 0x26b387bb
0x36 EQ
0x37 PUSH2 0x13f
0x3a JUMPI
---
0x31: V19 = 0x26b387bb
0x36: V20 = EQ 0x26b387bb V12
0x37: V21 = 0x13f
0x3a: JUMPI 0x13f V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x16d]
---
0x3b DUP1
0x3c PUSH4 0x38af3eed
0x41 EQ
0x42 PUSH2 0x16d
0x45 JUMPI
---
0x3c: V22 = 0x38af3eed
0x41: V23 = EQ 0x38af3eed V12
0x42: V24 = 0x16d
0x45: JUMPI 0x16d V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x199]
---
0x46 DUP1
0x47 PUSH4 0x3ccfd60b
0x4c EQ
0x4d PUSH2 0x199
0x50 JUMPI
---
0x47: V25 = 0x3ccfd60b
0x4c: V26 = EQ 0x3ccfd60b V12
0x4d: V27 = 0x199
0x50: JUMPI 0x199 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1bd]
---
0x51 DUP1
0x52 PUSH4 0x4b449cba
0x57 EQ
0x58 PUSH2 0x1bd
0x5b JUMPI
---
0x52: V28 = 0x4b449cba
0x57: V29 = EQ 0x4b449cba V12
0x58: V30 = 0x1bd
0x5b: JUMPI 0x1bd V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1df]
---
0x5c DUP1
0x5d PUSH4 0x6255ca28
0x62 EQ
0x63 PUSH2 0x1df
0x66 JUMPI
---
0x5d: V31 = 0x6255ca28
0x62: V32 = EQ 0x6255ca28 V12
0x63: V33 = 0x1df
0x66: JUMPI 0x1df V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x201]
---
0x67 DUP1
0x68 PUSH4 0x7d350453
0x6d EQ
0x6e PUSH2 0x201
0x71 JUMPI
---
0x68: V34 = 0x7d350453
0x6d: V35 = EQ 0x7d350453 V12
0x6e: V36 = 0x201
0x71: JUMPI 0x201 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x213]
---
0x72 DUP1
0x73 PUSH4 0x853a1b90
0x78 EQ
0x79 PUSH2 0x213
0x7c JUMPI
---
0x73: V37 = 0x853a1b90
0x78: V38 = EQ 0x853a1b90 V12
0x79: V39 = 0x213
0x7c: JUMPI 0x213 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x26a]
---
0x7d DUP1
0x7e PUSH4 0x8da5cb5b
0x83 EQ
0x84 PUSH2 0x26a
0x87 JUMPI
---
0x7e: V40 = 0x8da5cb5b
0x83: V41 = EQ 0x8da5cb5b V12
0x84: V42 = 0x26a
0x87: JUMPI 0x26a V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x296]
---
0x88 DUP1
0x89 PUSH4 0x9af6549a
0x8e EQ
0x8f PUSH2 0x296
0x92 JUMPI
---
0x89: V43 = 0x9af6549a
0x8e: V44 = EQ 0x9af6549a V12
0x8f: V45 = 0x296
0x92: JUMPI 0x296 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2ba]
---
0x93 DUP1
0x94 PUSH4 0xa7a38f0b
0x99 EQ
0x9a PUSH2 0x2ba
0x9d JUMPI
---
0x94: V46 = 0xa7a38f0b
0x99: V47 = EQ 0xa7a38f0b V12
0x9a: V48 = 0x2ba
0x9d: JUMPI 0x2ba V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2df]
---
0x9e DUP1
0x9f PUSH4 0xaa7a9e79
0xa4 EQ
0xa5 PUSH2 0x2df
0xa8 JUMPI
---
0x9f: V49 = 0xaa7a9e79
0xa4: V50 = EQ 0xaa7a9e79 V12
0xa5: V51 = 0x2df
0xa8: JUMPI 0x2df V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x306]
---
0xa9 DUP1
0xaa PUSH4 0xb668e05d
0xaf EQ
0xb0 PUSH2 0x306
0xb3 JUMPI
---
0xaa: V52 = 0xb668e05d
0xaf: V53 = EQ 0xb668e05d V12
0xb0: V54 = 0x306
0xb3: JUMPI 0x306 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x35d]
---
0xb4 DUP1
0xb5 PUSH4 0xb894f3f1
0xba EQ
0xbb PUSH2 0x35d
0xbe JUMPI
---
0xb5: V55 = 0xb894f3f1
0xba: V56 = EQ 0xb894f3f1 V12
0xbb: V57 = 0x35d
0xbe: JUMPI 0x35d V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x37f]
---
0xbf DUP1
0xc0 PUSH4 0xd074a38d
0xc5 EQ
0xc6 PUSH2 0x37f
0xc9 JUMPI
---
0xc0: V58 = 0xd074a38d
0xc5: V59 = EQ 0xd074a38d V12
0xc6: V60 = 0x37f
0xc9: JUMPI 0x37f V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3a1]
---
0xca DUP1
0xcb PUSH4 0xe651aca4
0xd0 EQ
0xd1 PUSH2 0x3a1
0xd4 JUMPI
---
0xcb: V61 = 0xe651aca4
0xd0: V62 = EQ 0xe651aca4 V12
0xd1: V63 = 0x3a1
0xd4: JUMPI 0x3a1 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3c3]
---
0xd5 DUP1
0xd6 PUSH4 0xeb54f9ec
0xdb EQ
0xdc PUSH2 0x3c3
0xdf JUMPI
---
0xd6: V64 = 0xeb54f9ec
0xdb: V65 = EQ 0xeb54f9ec V12
0xdc: V66 = 0x3c3
0xdf: JUMPI 0x3c3 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3e5]
---
0xe0 DUP1
0xe1 PUSH4 0xf283511f
0xe6 EQ
0xe7 PUSH2 0x3e5
0xea JUMPI
---
0xe1: V67 = 0xf283511f
0xe6: V68 = EQ 0xf283511f V12
0xe7: V69 = 0x3e5
0xea: JUMPI 0x3e5 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0x0, 0xe0]
Successors: [0xef]
---
0xeb JUMPDEST
0xec PUSH2 0x101
---
0xeb: JUMPDEST 
0xec: V70 = 0x101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V12, 0x101]

================================

Block 0xef
[0xef:0xfa]
---
Predecessors: [0xeb]
Successors: [0x409]
---
0xef JUMPDEST
0xf0 PUSH2 0xfb
0xf3 PUSH1 0x2
0xf5 SLOAD
0xf6 CALLVALUE
0xf7 PUSH2 0x409
0xfa JUMP
---
0xef: JUMPDEST 
0xf0: V71 = 0xfb
0xf3: V72 = 0x2
0xf5: V73 = S[0x2]
0xf6: V74 = CALLVALUE
0xf7: V75 = 0x409
0xfa: JUMP 0x409
---
Entry stack: [V12, 0x101]
Stack pops: 0
Stack additions: [0xfb, V73, V74]
Exit stack: [V12, 0x101, 0xfb, V73, V74]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0x42a]
Successors: [0xff]
---
0xfb JUMPDEST
0xfc PUSH1 0x2
0xfe SSTORE
---
0xfb: JUMPDEST 
0xfc: V76 = 0x2
0xfe: S[0x2] = S0
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: [0xfb, 0xa31]
Successors: [0x101, 0x15b, 0x5b8, 0x76d, 0x77a, 0x82b, 0x832, 0x840, 0x845, 0x987]
---
0xff JUMPDEST
0x100 JUMP
---
0xff: JUMPDEST 
0x100: JUMP S0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x101
[0x101:0x102]
---
Predecessors: [0xff, 0x42a, 0x46a, 0x4bd, 0x5a7, 0x934, 0x98c]
Successors: []
---
0x101 JUMPDEST
0x102 STOP
---
0x101: JUMPDEST 
0x102: STOP 
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x103
[0x103:0x109]
---
Predecessors: [0xb]
Successors: [0x10a, 0x10b]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 ISZERO
0x106 PUSH2 0x10b
0x109 JUMPI
---
0x103: JUMPDEST 
0x104: V77 = CALLVALUE
0x105: V78 = ISZERO V77
0x106: V79 = 0x10b
0x109: JUMPI 0x10b V78
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0x103]
Successors: []
---
0x10a INVALID
---
0x10a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x11e]
---
Predecessors: [0x103]
Successors: [0x431]
---
0x10b JUMPDEST
0x10c PUSH2 0x101
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 PUSH1 0x4
0x119 CALLDATALOAD
0x11a AND
0x11b PUSH2 0x431
0x11e JUMP
---
0x10b: JUMPDEST 
0x10c: V80 = 0x101
0x10f: V81 = 0x1
0x111: V82 = 0xa0
0x113: V83 = 0x2
0x115: V84 = EXP 0x2 0xa0
0x116: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0x117: V86 = 0x4
0x119: V87 = CALLDATALOAD 0x4
0x11a: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V89 = 0x431
0x11e: JUMP 0x431
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101, V88]
Exit stack: [V12, 0x101, V88]

================================

Block 0x11f
[0x11f:0x120]
---
Predecessors: []
Successors: []
---
0x11f JUMPDEST
0x120 STOP
---
0x11f: JUMPDEST 
0x120: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x121
[0x121:0x127]
---
Predecessors: [0x25]
Successors: [0x128, 0x129]
---
0x121 JUMPDEST
0x122 CALLVALUE
0x123 ISZERO
0x124 PUSH2 0x129
0x127 JUMPI
---
0x121: JUMPDEST 
0x122: V90 = CALLVALUE
0x123: V91 = ISZERO V90
0x124: V92 = 0x129
0x127: JUMPI 0x129 V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x128
[0x128:0x128]
---
Predecessors: [0x121]
Successors: []
---
0x128 INVALID
---
0x128: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x129
[0x129:0x13c]
---
Predecessors: [0x121]
Successors: [0x46d]
---
0x129 JUMPDEST
0x12a PUSH2 0x101
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 PUSH1 0x4
0x137 CALLDATALOAD
0x138 AND
0x139 PUSH2 0x46d
0x13c JUMP
---
0x129: JUMPDEST 
0x12a: V93 = 0x101
0x12d: V94 = 0x1
0x12f: V95 = 0xa0
0x131: V96 = 0x2
0x133: V97 = EXP 0x2 0xa0
0x134: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V99 = 0x4
0x137: V100 = CALLDATALOAD 0x4
0x138: V101 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x139: V102 = 0x46d
0x13c: JUMP 0x46d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101, V101]
Exit stack: [V12, 0x101, V101]

================================

Block 0x13d
[0x13d:0x13e]
---
Predecessors: []
Successors: []
---
0x13d JUMPDEST
0x13e STOP
---
0x13d: JUMPDEST 
0x13e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13f
[0x13f:0x145]
---
Predecessors: [0x30]
Successors: [0x146, 0x147]
---
0x13f JUMPDEST
0x140 CALLVALUE
0x141 ISZERO
0x142 PUSH2 0x147
0x145 JUMPI
---
0x13f: JUMPDEST 
0x140: V103 = CALLVALUE
0x141: V104 = ISZERO V103
0x142: V105 = 0x147
0x145: JUMPI 0x147 V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x146]
---
Predecessors: [0x13f]
Successors: []
---
0x146 INVALID
---
0x146: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x147
[0x147:0x15a]
---
Predecessors: [0x13f]
Successors: [0x4c0]
---
0x147 JUMPDEST
0x148 PUSH2 0x15b
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 PUSH1 0x4
0x155 CALLDATALOAD
0x156 AND
0x157 PUSH2 0x4c0
0x15a JUMP
---
0x147: JUMPDEST 
0x148: V106 = 0x15b
0x14b: V107 = 0x1
0x14d: V108 = 0xa0
0x14f: V109 = 0x2
0x151: V110 = EXP 0x2 0xa0
0x152: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x153: V112 = 0x4
0x155: V113 = CALLDATALOAD 0x4
0x156: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x157: V115 = 0x4c0
0x15a: JUMP 0x4c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b, V114]
Exit stack: [V12, 0x15b, V114]

================================

Block 0x15b
[0x15b:0x16c]
---
Predecessors: [0xff, 0x42a, 0x4c0, 0x5a7, 0x5aa, 0x751, 0x934, 0x965, 0x96b, 0x971, 0x977, 0x98c]
Successors: []
---
0x15b JUMPDEST
0x15c PUSH1 0x40
0x15e DUP1
0x15f MLOAD
0x160 SWAP2
0x161 DUP3
0x162 MSTORE
0x163 MLOAD
0x164 SWAP1
0x165 DUP2
0x166 SWAP1
0x167 SUB
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP1
0x16c RETURN
---
0x15b: JUMPDEST 
0x15c: V116 = 0x40
0x15f: V117 = M[0x40]
0x162: M[V117] = S0
0x163: V118 = M[0x40]
0x167: V119 = SUB V117 V118
0x168: V120 = 0x20
0x16a: V121 = ADD 0x20 V119
0x16c: RETURN V118 V121
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x16d
[0x16d:0x173]
---
Predecessors: [0x3b]
Successors: [0x174, 0x175]
---
0x16d JUMPDEST
0x16e CALLVALUE
0x16f ISZERO
0x170 PUSH2 0x175
0x173 JUMPI
---
0x16d: JUMPDEST 
0x16e: V122 = CALLVALUE
0x16f: V123 = ISZERO V122
0x170: V124 = 0x175
0x173: JUMPI 0x175 V123
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x174
[0x174:0x174]
---
Predecessors: [0x16d]
Successors: []
---
0x174 INVALID
---
0x174: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x175
[0x175:0x17c]
---
Predecessors: [0x16d]
Successors: [0x4d2]
---
0x175 JUMPDEST
0x176 PUSH2 0x17d
0x179 PUSH2 0x4d2
0x17c JUMP
---
0x175: JUMPDEST 
0x176: V125 = 0x17d
0x179: V126 = 0x4d2
0x17c: JUMP 0x4d2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x17d]
Exit stack: [V12, 0x17d]

================================

Block 0x17d
[0x17d:0x198]
---
Predecessors: [0x4d2, 0x6b8]
Successors: []
---
0x17d JUMPDEST
0x17e PUSH1 0x40
0x180 DUP1
0x181 MLOAD
0x182 PUSH1 0x1
0x184 PUSH1 0xa0
0x186 PUSH1 0x2
0x188 EXP
0x189 SUB
0x18a SWAP1
0x18b SWAP3
0x18c AND
0x18d DUP3
0x18e MSTORE
0x18f MLOAD
0x190 SWAP1
0x191 DUP2
0x192 SWAP1
0x193 SUB
0x194 PUSH1 0x20
0x196 ADD
0x197 SWAP1
0x198 RETURN
---
0x17d: JUMPDEST 
0x17e: V127 = 0x40
0x181: V128 = M[0x40]
0x182: V129 = 0x1
0x184: V130 = 0xa0
0x186: V131 = 0x2
0x188: V132 = EXP 0x2 0xa0
0x189: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18c: V134 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x18e: M[V128] = V134
0x18f: V135 = M[0x40]
0x193: V136 = SUB V128 V135
0x194: V137 = 0x20
0x196: V138 = ADD 0x20 V136
0x198: RETURN V135 V138
---
Entry stack: [V12, 0x17d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x17d]

================================

Block 0x199
[0x199:0x19f]
---
Predecessors: [0x46]
Successors: [0x1a0, 0x1a1]
---
0x199 JUMPDEST
0x19a CALLVALUE
0x19b ISZERO
0x19c PUSH2 0x1a1
0x19f JUMPI
---
0x199: JUMPDEST 
0x19a: V139 = CALLVALUE
0x19b: V140 = ISZERO V139
0x19c: V141 = 0x1a1
0x19f: JUMPI 0x1a1 V140
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a0
[0x1a0:0x1a0]
---
Predecessors: [0x199]
Successors: []
---
0x1a0 INVALID
---
0x1a0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a1
[0x1a1:0x1a8]
---
Predecessors: [0x199]
Successors: [0x4e1]
---
0x1a1 JUMPDEST
0x1a2 PUSH2 0x1a9
0x1a5 PUSH2 0x4e1
0x1a8 JUMP
---
0x1a1: JUMPDEST 
0x1a2: V142 = 0x1a9
0x1a5: V143 = 0x4e1
0x1a8: JUMP 0x4e1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a9]
Exit stack: [V12, 0x1a9]

================================

Block 0x1a9
[0x1a9:0x1bc]
---
Predecessors: [0x590, 0x74d, 0x98c]
Successors: []
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x40
0x1ac DUP1
0x1ad MLOAD
0x1ae SWAP2
0x1af ISZERO
0x1b0 ISZERO
0x1b1 DUP3
0x1b2 MSTORE
0x1b3 MLOAD
0x1b4 SWAP1
0x1b5 DUP2
0x1b6 SWAP1
0x1b7 SUB
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP1
0x1bc RETURN
---
0x1a9: JUMPDEST 
0x1aa: V144 = 0x40
0x1ad: V145 = M[0x40]
0x1af: V146 = ISZERO {0x0, 0x1}
0x1b0: V147 = ISZERO V146
0x1b2: M[V145] = V147
0x1b3: V148 = M[0x40]
0x1b7: V149 = SUB V145 V148
0x1b8: V150 = 0x20
0x1ba: V151 = ADD 0x20 V149
0x1bc: RETURN V148 V151
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x51]
Successors: [0x1c4, 0x1c5]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c5
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V152 = CALLVALUE
0x1bf: V153 = ISZERO V152
0x1c0: V154 = 0x1c5
0x1c3: JUMPI 0x1c5 V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c4
[0x1c4:0x1c4]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 INVALID
---
0x1c4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c5
[0x1c5:0x1cc]
---
Predecessors: [0x1bd]
Successors: [0x594]
---
0x1c5 JUMPDEST
0x1c6 PUSH2 0x15b
0x1c9 PUSH2 0x594
0x1cc JUMP
---
0x1c5: JUMPDEST 
0x1c6: V155 = 0x15b
0x1c9: V156 = 0x594
0x1cc: JUMP 0x594
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b]
Exit stack: [V12, 0x15b]

================================

Block 0x1cd
[0x1cd:0x1de]
---
Predecessors: []
Successors: []
---
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 DUP1
0x1d1 MLOAD
0x1d2 SWAP2
0x1d3 DUP3
0x1d4 MSTORE
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 SWAP1
0x1d9 SUB
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP1
0x1de RETURN
---
0x1cd: JUMPDEST 
0x1ce: V157 = 0x40
0x1d1: V158 = M[0x40]
0x1d4: M[V158] = S0
0x1d5: V159 = M[0x40]
0x1d9: V160 = SUB V158 V159
0x1da: V161 = 0x20
0x1dc: V162 = ADD 0x20 V160
0x1de: RETURN V159 V162
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x5c]
Successors: [0x1e6, 0x1e7]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1e7
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V163 = CALLVALUE
0x1e1: V164 = ISZERO V163
0x1e2: V165 = 0x1e7
0x1e5: JUMPI 0x1e7 V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e6
[0x1e6:0x1e6]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 INVALID
---
0x1e6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x1df]
Successors: [0x5aa]
---
0x1e7 JUMPDEST
0x1e8 PUSH2 0x15b
0x1eb PUSH2 0x5aa
0x1ee JUMP
---
0x1e7: JUMPDEST 
0x1e8: V166 = 0x15b
0x1eb: V167 = 0x5aa
0x1ee: JUMP 0x5aa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b]
Exit stack: [V12, 0x15b]

================================

Block 0x1ef
[0x1ef:0x200]
---
Predecessors: []
Successors: []
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x40
0x1f2 DUP1
0x1f3 MLOAD
0x1f4 SWAP2
0x1f5 DUP3
0x1f6 MSTORE
0x1f7 MLOAD
0x1f8 SWAP1
0x1f9 DUP2
0x1fa SWAP1
0x1fb SUB
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff SWAP1
0x200 RETURN
---
0x1ef: JUMPDEST 
0x1f0: V168 = 0x40
0x1f3: V169 = M[0x40]
0x1f6: M[V169] = S0
0x1f7: V170 = M[0x40]
0x1fb: V171 = SUB V169 V170
0x1fc: V172 = 0x20
0x1fe: V173 = ADD 0x20 V171
0x200: RETURN V170 V173
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x201
[0x201:0x207]
---
Predecessors: [0x67]
Successors: [0x208, 0x209]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 ISZERO
0x204 PUSH2 0x209
0x207 JUMPI
---
0x201: JUMPDEST 
0x202: V174 = CALLVALUE
0x203: V175 = ISZERO V174
0x204: V176 = 0x209
0x207: JUMPI 0x209 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x208
[0x208:0x208]
---
Predecessors: [0x201]
Successors: []
---
0x208 INVALID
---
0x208: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x201]
Successors: [0x5b0]
---
0x209 JUMPDEST
0x20a PUSH2 0x101
0x20d PUSH2 0x5b0
0x210 JUMP
---
0x209: JUMPDEST 
0x20a: V177 = 0x101
0x20d: V178 = 0x5b0
0x210: JUMP 0x5b0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V12, 0x101]

================================

Block 0x211
[0x211:0x212]
---
Predecessors: []
Successors: []
---
0x211 JUMPDEST
0x212 STOP
---
0x211: JUMPDEST 
0x212: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x72]
Successors: [0x21a, 0x21b]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21b
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V179 = CALLVALUE
0x215: V180 = ISZERO V179
0x216: V181 = 0x21b
0x219: JUMPI 0x21b V180
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21a
[0x21a:0x21a]
---
Predecessors: [0x213]
Successors: []
---
0x21a INVALID
---
0x21a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x213]
Successors: [0x690]
---
0x21b JUMPDEST
0x21c PUSH2 0x223
0x21f PUSH2 0x690
0x222 JUMP
---
0x21b: JUMPDEST 
0x21c: V182 = 0x223
0x21f: V183 = 0x690
0x222: JUMP 0x690
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x223]
Exit stack: [V12, 0x223]

================================

Block 0x223
[0x223:0x269]
---
Predecessors: [0x690, 0x93d]
Successors: []
---
0x223 JUMPDEST
0x224 PUSH1 0x40
0x226 DUP1
0x227 MLOAD
0x228 PUSH1 0x1
0x22a PUSH1 0xa0
0x22c PUSH1 0x2
0x22e EXP
0x22f SUB
0x230 SWAP9
0x231 DUP10
0x232 AND
0x233 DUP2
0x234 MSTORE
0x235 PUSH1 0x20
0x237 DUP2
0x238 ADD
0x239 SWAP8
0x23a SWAP1
0x23b SWAP8
0x23c MSTORE
0x23d SWAP5
0x23e SWAP1
0x23f SWAP7
0x240 AND
0x241 DUP6
0x242 DUP6
0x243 ADD
0x244 MSTORE
0x245 PUSH1 0x60
0x247 DUP6
0x248 ADD
0x249 SWAP3
0x24a SWAP1
0x24b SWAP3
0x24c MSTORE
0x24d PUSH1 0x80
0x24f DUP5
0x250 ADD
0x251 MSTORE
0x252 PUSH1 0xa0
0x254 DUP4
0x255 ADD
0x256 MSTORE
0x257 PUSH1 0xc0
0x259 DUP3
0x25a ADD
0x25b SWAP3
0x25c SWAP1
0x25d SWAP3
0x25e MSTORE
0x25f SWAP1
0x260 MLOAD
0x261 SWAP1
0x262 DUP2
0x263 SWAP1
0x264 SUB
0x265 PUSH1 0xe0
0x267 ADD
0x268 SWAP1
0x269 RETURN
---
0x223: JUMPDEST 
0x224: V184 = 0x40
0x227: V185 = M[0x40]
0x228: V186 = 0x1
0x22a: V187 = 0xa0
0x22c: V188 = 0x2
0x22e: V189 = EXP 0x2 0xa0
0x22f: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x232: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x234: M[V185] = V191
0x235: V192 = 0x20
0x238: V193 = ADD V185 0x20
0x23c: M[V193] = S5
0x240: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x243: V195 = ADD 0x40 V185
0x244: M[V195] = V194
0x245: V196 = 0x60
0x248: V197 = ADD V185 0x60
0x24c: M[V197] = S3
0x24d: V198 = 0x80
0x250: V199 = ADD V185 0x80
0x251: M[V199] = S2
0x252: V200 = 0xa0
0x255: V201 = ADD V185 0xa0
0x256: M[V201] = S1
0x257: V202 = 0xc0
0x25a: V203 = ADD V185 0xc0
0x25e: M[V203] = S0
0x260: V204 = M[0x40]
0x264: V205 = SUB V185 V204
0x265: V206 = 0xe0
0x267: V207 = ADD 0xe0 V205
0x269: RETURN V204 V207
---
Entry stack: [V12, 0x223, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12, 0x223]

================================

Block 0x26a
[0x26a:0x270]
---
Predecessors: [0x7d]
Successors: [0x271, 0x272]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c ISZERO
0x26d PUSH2 0x272
0x270 JUMPI
---
0x26a: JUMPDEST 
0x26b: V208 = CALLVALUE
0x26c: V209 = ISZERO V208
0x26d: V210 = 0x272
0x270: JUMPI 0x272 V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x271
[0x271:0x271]
---
Predecessors: [0x26a]
Successors: []
---
0x271 INVALID
---
0x271: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x272
[0x272:0x279]
---
Predecessors: [0x26a]
Successors: [0x6b8]
---
0x272 JUMPDEST
0x273 PUSH2 0x17d
0x276 PUSH2 0x6b8
0x279 JUMP
---
0x272: JUMPDEST 
0x273: V211 = 0x17d
0x276: V212 = 0x6b8
0x279: JUMP 0x6b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x17d]
Exit stack: [V12, 0x17d]

================================

Block 0x27a
[0x27a:0x295]
---
Predecessors: []
Successors: []
---
0x27a JUMPDEST
0x27b PUSH1 0x40
0x27d DUP1
0x27e MLOAD
0x27f PUSH1 0x1
0x281 PUSH1 0xa0
0x283 PUSH1 0x2
0x285 EXP
0x286 SUB
0x287 SWAP1
0x288 SWAP3
0x289 AND
0x28a DUP3
0x28b MSTORE
0x28c MLOAD
0x28d SWAP1
0x28e DUP2
0x28f SWAP1
0x290 SUB
0x291 PUSH1 0x20
0x293 ADD
0x294 SWAP1
0x295 RETURN
---
0x27a: JUMPDEST 
0x27b: V213 = 0x40
0x27e: V214 = M[0x40]
0x27f: V215 = 0x1
0x281: V216 = 0xa0
0x283: V217 = 0x2
0x285: V218 = EXP 0x2 0xa0
0x286: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x289: V220 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x28b: M[V214] = V220
0x28c: V221 = M[0x40]
0x290: V222 = SUB V214 V221
0x291: V223 = 0x20
0x293: V224 = ADD 0x20 V222
0x295: RETURN V221 V224
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0x88]
Successors: [0x29d, 0x29e]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 ISZERO
0x299 PUSH2 0x29e
0x29c JUMPI
---
0x296: JUMPDEST 
0x297: V225 = CALLVALUE
0x298: V226 = ISZERO V225
0x299: V227 = 0x29e
0x29c: JUMPI 0x29e V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29d
[0x29d:0x29d]
---
Predecessors: [0x296]
Successors: []
---
0x29d INVALID
---
0x29d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29e
[0x29e:0x2a5]
---
Predecessors: [0x296]
Successors: [0x6c7]
---
0x29e JUMPDEST
0x29f PUSH2 0x1a9
0x2a2 PUSH2 0x6c7
0x2a5 JUMP
---
0x29e: JUMPDEST 
0x29f: V228 = 0x1a9
0x2a2: V229 = 0x6c7
0x2a5: JUMP 0x6c7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a9]
Exit stack: [V12, 0x1a9]

================================

Block 0x2a6
[0x2a6:0x2b9]
---
Predecessors: []
Successors: []
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x40
0x2a9 DUP1
0x2aa MLOAD
0x2ab SWAP2
0x2ac ISZERO
0x2ad ISZERO
0x2ae DUP3
0x2af MSTORE
0x2b0 MLOAD
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 SWAP1
0x2b4 SUB
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 SWAP1
0x2b9 RETURN
---
0x2a6: JUMPDEST 
0x2a7: V230 = 0x40
0x2aa: V231 = M[0x40]
0x2ac: V232 = ISZERO S0
0x2ad: V233 = ISZERO V232
0x2af: M[V231] = V233
0x2b0: V234 = M[0x40]
0x2b4: V235 = SUB V231 V234
0x2b5: V236 = 0x20
0x2b7: V237 = ADD 0x20 V235
0x2b9: RETURN V234 V237
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ba
[0x2ba:0x2c0]
---
Predecessors: [0x93]
Successors: [0x2c1, 0x2c2]
---
0x2ba JUMPDEST
0x2bb CALLVALUE
0x2bc ISZERO
0x2bd PUSH2 0x2c2
0x2c0 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V238 = CALLVALUE
0x2bc: V239 = ISZERO V238
0x2bd: V240 = 0x2c2
0x2c0: JUMPI 0x2c2 V239
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c1
[0x2c1:0x2c1]
---
Predecessors: [0x2ba]
Successors: []
---
0x2c1 INVALID
---
0x2c1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c2
[0x2c2:0x2cc]
---
Predecessors: [0x2ba]
Successors: [0x751]
---
0x2c2 JUMPDEST
0x2c3 PUSH2 0x15b
0x2c6 PUSH1 0x4
0x2c8 CALLDATALOAD
0x2c9 PUSH2 0x751
0x2cc JUMP
---
0x2c2: JUMPDEST 
0x2c3: V241 = 0x15b
0x2c6: V242 = 0x4
0x2c8: V243 = CALLDATALOAD 0x4
0x2c9: V244 = 0x751
0x2cc: JUMP 0x751
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b, V243]
Exit stack: [V12, 0x15b, V243]

================================

Block 0x2cd
[0x2cd:0x2de]
---
Predecessors: []
Successors: []
---
0x2cd JUMPDEST
0x2ce PUSH1 0x40
0x2d0 DUP1
0x2d1 MLOAD
0x2d2 SWAP2
0x2d3 DUP3
0x2d4 MSTORE
0x2d5 MLOAD
0x2d6 SWAP1
0x2d7 DUP2
0x2d8 SWAP1
0x2d9 SUB
0x2da PUSH1 0x20
0x2dc ADD
0x2dd SWAP1
0x2de RETURN
---
0x2cd: JUMPDEST 
0x2ce: V245 = 0x40
0x2d1: V246 = M[0x40]
0x2d4: M[V246] = S0
0x2d5: V247 = M[0x40]
0x2d9: V248 = SUB V246 V247
0x2da: V249 = 0x20
0x2dc: V250 = ADD 0x20 V248
0x2de: RETURN V247 V250
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2df
[0x2df:0x303]
---
Predecessors: [0x9e]
Successors: [0x763]
---
0x2df JUMPDEST
0x2e0 PUSH2 0x101
0x2e3 PUSH1 0x1
0x2e5 PUSH1 0xa0
0x2e7 PUSH1 0x2
0x2e9 EXP
0x2ea SUB
0x2eb PUSH1 0x4
0x2ed CALLDATALOAD
0x2ee AND
0x2ef PUSH1 0x24
0x2f1 CALLDATALOAD
0x2f2 PUSH1 0x44
0x2f4 CALLDATALOAD
0x2f5 PUSH1 0x64
0x2f7 CALLDATALOAD
0x2f8 PUSH1 0x84
0x2fa CALLDATALOAD
0x2fb PUSH1 0xa4
0x2fd CALLDATALOAD
0x2fe ISZERO
0x2ff ISZERO
0x300 PUSH2 0x763
0x303 JUMP
---
0x2df: JUMPDEST 
0x2e0: V251 = 0x101
0x2e3: V252 = 0x1
0x2e5: V253 = 0xa0
0x2e7: V254 = 0x2
0x2e9: V255 = EXP 0x2 0xa0
0x2ea: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V257 = 0x4
0x2ed: V258 = CALLDATALOAD 0x4
0x2ee: V259 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x2ef: V260 = 0x24
0x2f1: V261 = CALLDATALOAD 0x24
0x2f2: V262 = 0x44
0x2f4: V263 = CALLDATALOAD 0x44
0x2f5: V264 = 0x64
0x2f7: V265 = CALLDATALOAD 0x64
0x2f8: V266 = 0x84
0x2fa: V267 = CALLDATALOAD 0x84
0x2fb: V268 = 0xa4
0x2fd: V269 = CALLDATALOAD 0xa4
0x2fe: V270 = ISZERO V269
0x2ff: V271 = ISZERO V270
0x300: V272 = 0x763
0x303: JUMP 0x763
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101, V259, V261, V263, V265, V267, V271]
Exit stack: [V12, 0x101, V259, V261, V263, V265, V267, V271]

================================

Block 0x304
[0x304:0x305]
---
Predecessors: []
Successors: []
---
0x304 JUMPDEST
0x305 STOP
---
0x304: JUMPDEST 
0x305: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x306
[0x306:0x30c]
---
Predecessors: [0xa9]
Successors: [0x30d, 0x30e]
---
0x306 JUMPDEST
0x307 CALLVALUE
0x308 ISZERO
0x309 PUSH2 0x30e
0x30c JUMPI
---
0x306: JUMPDEST 
0x307: V273 = CALLVALUE
0x308: V274 = ISZERO V273
0x309: V275 = 0x30e
0x30c: JUMPI 0x30e V274
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30d
[0x30d:0x30d]
---
Predecessors: [0x306]
Successors: []
---
0x30d INVALID
---
0x30d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30e
[0x30e:0x315]
---
Predecessors: [0x306]
Successors: [0x93d]
---
0x30e JUMPDEST
0x30f PUSH2 0x223
0x312 PUSH2 0x93d
0x315 JUMP
---
0x30e: JUMPDEST 
0x30f: V276 = 0x223
0x312: V277 = 0x93d
0x315: JUMP 0x93d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x223]
Exit stack: [V12, 0x223]

================================

Block 0x316
[0x316:0x35c]
---
Predecessors: []
Successors: []
---
0x316 JUMPDEST
0x317 PUSH1 0x40
0x319 DUP1
0x31a MLOAD
0x31b PUSH1 0x1
0x31d PUSH1 0xa0
0x31f PUSH1 0x2
0x321 EXP
0x322 SUB
0x323 SWAP9
0x324 DUP10
0x325 AND
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a DUP2
0x32b ADD
0x32c SWAP8
0x32d SWAP1
0x32e SWAP8
0x32f MSTORE
0x330 SWAP5
0x331 SWAP1
0x332 SWAP7
0x333 AND
0x334 DUP6
0x335 DUP6
0x336 ADD
0x337 MSTORE
0x338 PUSH1 0x60
0x33a DUP6
0x33b ADD
0x33c SWAP3
0x33d SWAP1
0x33e SWAP3
0x33f MSTORE
0x340 PUSH1 0x80
0x342 DUP5
0x343 ADD
0x344 MSTORE
0x345 PUSH1 0xa0
0x347 DUP4
0x348 ADD
0x349 MSTORE
0x34a PUSH1 0xc0
0x34c DUP3
0x34d ADD
0x34e SWAP3
0x34f SWAP1
0x350 SWAP3
0x351 MSTORE
0x352 SWAP1
0x353 MLOAD
0x354 SWAP1
0x355 DUP2
0x356 SWAP1
0x357 SUB
0x358 PUSH1 0xe0
0x35a ADD
0x35b SWAP1
0x35c RETURN
---
0x316: JUMPDEST 
0x317: V278 = 0x40
0x31a: V279 = M[0x40]
0x31b: V280 = 0x1
0x31d: V281 = 0xa0
0x31f: V282 = 0x2
0x321: V283 = EXP 0x2 0xa0
0x322: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x325: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x327: M[V279] = V285
0x328: V286 = 0x20
0x32b: V287 = ADD V279 0x20
0x32f: M[V287] = S5
0x333: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x336: V289 = ADD 0x40 V279
0x337: M[V289] = V288
0x338: V290 = 0x60
0x33b: V291 = ADD V279 0x60
0x33f: M[V291] = S3
0x340: V292 = 0x80
0x343: V293 = ADD V279 0x80
0x344: M[V293] = S2
0x345: V294 = 0xa0
0x348: V295 = ADD V279 0xa0
0x349: M[V295] = S1
0x34a: V296 = 0xc0
0x34d: V297 = ADD V279 0xc0
0x351: M[V297] = S0
0x353: V298 = M[0x40]
0x357: V299 = SUB V279 V298
0x358: V300 = 0xe0
0x35a: V301 = ADD 0xe0 V299
0x35c: RETURN V298 V301
---
Entry stack: []
Stack pops: 7
Stack additions: []
Exit stack: []

================================

Block 0x35d
[0x35d:0x363]
---
Predecessors: [0xb4]
Successors: [0x364, 0x365]
---
0x35d JUMPDEST
0x35e CALLVALUE
0x35f ISZERO
0x360 PUSH2 0x365
0x363 JUMPI
---
0x35d: JUMPDEST 
0x35e: V302 = CALLVALUE
0x35f: V303 = ISZERO V302
0x360: V304 = 0x365
0x363: JUMPI 0x365 V303
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x364
[0x364:0x364]
---
Predecessors: [0x35d]
Successors: []
---
0x364 INVALID
---
0x364: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x365
[0x365:0x36c]
---
Predecessors: [0x35d]
Successors: [0x965]
---
0x365 JUMPDEST
0x366 PUSH2 0x15b
0x369 PUSH2 0x965
0x36c JUMP
---
0x365: JUMPDEST 
0x366: V305 = 0x15b
0x369: V306 = 0x965
0x36c: JUMP 0x965
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b]
Exit stack: [V12, 0x15b]

================================

Block 0x36d
[0x36d:0x37e]
---
Predecessors: []
Successors: []
---
0x36d JUMPDEST
0x36e PUSH1 0x40
0x370 DUP1
0x371 MLOAD
0x372 SWAP2
0x373 DUP3
0x374 MSTORE
0x375 MLOAD
0x376 SWAP1
0x377 DUP2
0x378 SWAP1
0x379 SUB
0x37a PUSH1 0x20
0x37c ADD
0x37d SWAP1
0x37e RETURN
---
0x36d: JUMPDEST 
0x36e: V307 = 0x40
0x371: V308 = M[0x40]
0x374: M[V308] = S0
0x375: V309 = M[0x40]
0x379: V310 = SUB V308 V309
0x37a: V311 = 0x20
0x37c: V312 = ADD 0x20 V310
0x37e: RETURN V309 V312
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37f
[0x37f:0x385]
---
Predecessors: [0xbf]
Successors: [0x386, 0x387]
---
0x37f JUMPDEST
0x380 CALLVALUE
0x381 ISZERO
0x382 PUSH2 0x387
0x385 JUMPI
---
0x37f: JUMPDEST 
0x380: V313 = CALLVALUE
0x381: V314 = ISZERO V313
0x382: V315 = 0x387
0x385: JUMPI 0x387 V314
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x386
[0x386:0x386]
---
Predecessors: [0x37f]
Successors: []
---
0x386 INVALID
---
0x386: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x387
[0x387:0x38e]
---
Predecessors: [0x37f]
Successors: [0x96b]
---
0x387 JUMPDEST
0x388 PUSH2 0x15b
0x38b PUSH2 0x96b
0x38e JUMP
---
0x387: JUMPDEST 
0x388: V316 = 0x15b
0x38b: V317 = 0x96b
0x38e: JUMP 0x96b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b]
Exit stack: [V12, 0x15b]

================================

Block 0x38f
[0x38f:0x3a0]
---
Predecessors: []
Successors: []
---
0x38f JUMPDEST
0x390 PUSH1 0x40
0x392 DUP1
0x393 MLOAD
0x394 SWAP2
0x395 DUP3
0x396 MSTORE
0x397 MLOAD
0x398 SWAP1
0x399 DUP2
0x39a SWAP1
0x39b SUB
0x39c PUSH1 0x20
0x39e ADD
0x39f SWAP1
0x3a0 RETURN
---
0x38f: JUMPDEST 
0x390: V318 = 0x40
0x393: V319 = M[0x40]
0x396: M[V319] = S0
0x397: V320 = M[0x40]
0x39b: V321 = SUB V319 V320
0x39c: V322 = 0x20
0x39e: V323 = ADD 0x20 V321
0x3a0: RETURN V320 V323
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3a1
[0x3a1:0x3a7]
---
Predecessors: [0xca]
Successors: [0x3a8, 0x3a9]
---
0x3a1 JUMPDEST
0x3a2 CALLVALUE
0x3a3 ISZERO
0x3a4 PUSH2 0x3a9
0x3a7 JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V324 = CALLVALUE
0x3a3: V325 = ISZERO V324
0x3a4: V326 = 0x3a9
0x3a7: JUMPI 0x3a9 V325
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a8
[0x3a8:0x3a8]
---
Predecessors: [0x3a1]
Successors: []
---
0x3a8 INVALID
---
0x3a8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a9
[0x3a9:0x3b0]
---
Predecessors: [0x3a1]
Successors: [0x971]
---
0x3a9 JUMPDEST
0x3aa PUSH2 0x15b
0x3ad PUSH2 0x971
0x3b0 JUMP
---
0x3a9: JUMPDEST 
0x3aa: V327 = 0x15b
0x3ad: V328 = 0x971
0x3b0: JUMP 0x971
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b]
Exit stack: [V12, 0x15b]

================================

Block 0x3b1
[0x3b1:0x3c2]
---
Predecessors: []
Successors: []
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x40
0x3b4 DUP1
0x3b5 MLOAD
0x3b6 SWAP2
0x3b7 DUP3
0x3b8 MSTORE
0x3b9 MLOAD
0x3ba SWAP1
0x3bb DUP2
0x3bc SWAP1
0x3bd SUB
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 SWAP1
0x3c2 RETURN
---
0x3b1: JUMPDEST 
0x3b2: V329 = 0x40
0x3b5: V330 = M[0x40]
0x3b8: M[V330] = S0
0x3b9: V331 = M[0x40]
0x3bd: V332 = SUB V330 V331
0x3be: V333 = 0x20
0x3c0: V334 = ADD 0x20 V332
0x3c2: RETURN V331 V334
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c3
[0x3c3:0x3c9]
---
Predecessors: [0xd5]
Successors: [0x3ca, 0x3cb]
---
0x3c3 JUMPDEST
0x3c4 CALLVALUE
0x3c5 ISZERO
0x3c6 PUSH2 0x3cb
0x3c9 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V335 = CALLVALUE
0x3c5: V336 = ISZERO V335
0x3c6: V337 = 0x3cb
0x3c9: JUMPI 0x3cb V336
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ca
[0x3ca:0x3ca]
---
Predecessors: [0x3c3]
Successors: []
---
0x3ca INVALID
---
0x3ca: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cb
[0x3cb:0x3d2]
---
Predecessors: [0x3c3]
Successors: [0x977]
---
0x3cb JUMPDEST
0x3cc PUSH2 0x15b
0x3cf PUSH2 0x977
0x3d2 JUMP
---
0x3cb: JUMPDEST 
0x3cc: V338 = 0x15b
0x3cf: V339 = 0x977
0x3d2: JUMP 0x977
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b]
Exit stack: [V12, 0x15b]

================================

Block 0x3d3
[0x3d3:0x3e4]
---
Predecessors: []
Successors: []
---
0x3d3 JUMPDEST
0x3d4 PUSH1 0x40
0x3d6 DUP1
0x3d7 MLOAD
0x3d8 SWAP2
0x3d9 DUP3
0x3da MSTORE
0x3db MLOAD
0x3dc SWAP1
0x3dd DUP2
0x3de SWAP1
0x3df SUB
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 SWAP1
0x3e4 RETURN
---
0x3d3: JUMPDEST 
0x3d4: V340 = 0x40
0x3d7: V341 = M[0x40]
0x3da: M[V341] = S0
0x3db: V342 = M[0x40]
0x3df: V343 = SUB V341 V342
0x3e0: V344 = 0x20
0x3e2: V345 = ADD 0x20 V343
0x3e4: RETURN V342 V345
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e5
[0x3e5:0x3eb]
---
Predecessors: [0xe0]
Successors: [0x3ec, 0x3ed]
---
0x3e5 JUMPDEST
0x3e6 CALLVALUE
0x3e7 ISZERO
0x3e8 PUSH2 0x3ed
0x3eb JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V346 = CALLVALUE
0x3e7: V347 = ISZERO V346
0x3e8: V348 = 0x3ed
0x3eb: JUMPI 0x3ed V347
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ec
[0x3ec:0x3ec]
---
Predecessors: [0x3e5]
Successors: []
---
0x3ec INVALID
---
0x3ec: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ed
[0x3ed:0x3f4]
---
Predecessors: [0x3e5]
Successors: [0x97d]
---
0x3ed JUMPDEST
0x3ee PUSH2 0x1a9
0x3f1 PUSH2 0x97d
0x3f4 JUMP
---
0x3ed: JUMPDEST 
0x3ee: V349 = 0x1a9
0x3f1: V350 = 0x97d
0x3f4: JUMP 0x97d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a9]
Exit stack: [V12, 0x1a9]

================================

Block 0x3f5
[0x3f5:0x408]
---
Predecessors: []
Successors: []
---
0x3f5 JUMPDEST
0x3f6 PUSH1 0x40
0x3f8 DUP1
0x3f9 MLOAD
0x3fa SWAP2
0x3fb ISZERO
0x3fc ISZERO
0x3fd DUP3
0x3fe MSTORE
0x3ff MLOAD
0x400 SWAP1
0x401 DUP2
0x402 SWAP1
0x403 SUB
0x404 PUSH1 0x20
0x406 ADD
0x407 SWAP1
0x408 RETURN
---
0x3f5: JUMPDEST 
0x3f6: V351 = 0x40
0x3f9: V352 = M[0x40]
0x3fb: V353 = ISZERO S0
0x3fc: V354 = ISZERO V353
0x3fe: M[V352] = V354
0x3ff: V355 = M[0x40]
0x403: V356 = SUB V352 V355
0x404: V357 = 0x20
0x406: V358 = ADD 0x20 V356
0x408: RETURN V355 V358
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x409
[0x409:0x418]
---
Predecessors: [0xef, 0x594, 0x5c4, 0x784, 0x840]
Successors: [0x419, 0x41e]
---
0x409 JUMPDEST
0x40a PUSH1 0x0
0x40c DUP3
0x40d DUP3
0x40e ADD
0x40f DUP4
0x410 DUP2
0x411 LT
0x412 DUP1
0x413 ISZERO
0x414 SWAP1
0x415 PUSH2 0x41e
0x418 JUMPI
---
0x409: JUMPDEST 
0x40a: V359 = 0x0
0x40e: V360 = ADD S0 S1
0x411: V361 = LT V360 S1
0x413: V362 = ISZERO V361
0x415: V363 = 0x41e
0x418: JUMPI 0x41e V361
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V360, V362]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V360, V362]

================================

Block 0x419
[0x419:0x41d]
---
Predecessors: [0x409]
Successors: [0x41e]
---
0x419 POP
0x41a DUP3
0x41b DUP2
0x41c LT
0x41d ISZERO
---
0x41c: V364 = LT V360 S3
0x41d: V365 = ISZERO V364
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V360, V362]
Stack pops: 4
Stack additions: [S3, S2, S1, V365]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V360, V365]

================================

Block 0x41e
[0x41e:0x424]
---
Predecessors: [0x409, 0x419, 0xa33]
Successors: [0x425, 0x426]
---
0x41e JUMPDEST
0x41f ISZERO
0x420 ISZERO
0x421 PUSH2 0x426
0x424 JUMPI
---
0x41e: JUMPDEST 
0x41f: V366 = ISZERO S0
0x420: V367 = ISZERO V366
0x421: V368 = 0x426
0x424: JUMPI 0x426 V367
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1]

================================

Block 0x425
[0x425:0x425]
---
Predecessors: [0x41e]
Successors: []
---
0x425 INVALID
---
0x425: INVALID 
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0x426
[0x426:0x429]
---
Predecessors: [0x41e, 0xa4f, 0xa87]
Successors: [0x42a]
---
0x426 JUMPDEST
0x427 DUP1
0x428 SWAP2
0x429 POP
---
0x426: JUMPDEST 
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0x42a
[0x42a:0x430]
---
Predecessors: [0x426]
Successors: [0xfb, 0x101, 0x15b, 0x5a4, 0x5b8, 0x682, 0x76d, 0x77a, 0x7a7, 0x81d, 0x82b, 0x832, 0x840, 0x845, 0x987]
---
0x42a JUMPDEST
0x42b POP
0x42c SWAP3
0x42d SWAP2
0x42e POP
0x42f POP
0x430 JUMP
---
0x42a: JUMPDEST 
0x430: JUMP S4
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0x431
[0x431:0x447]
---
Predecessors: [0x10b]
Successors: [0x448, 0x44d]
---
0x431 JUMPDEST
0x432 PUSH1 0x0
0x434 SLOAD
0x435 CALLER
0x436 PUSH1 0x1
0x438 PUSH1 0xa0
0x43a PUSH1 0x2
0x43c EXP
0x43d SUB
0x43e SWAP1
0x43f DUP2
0x440 AND
0x441 SWAP2
0x442 AND
0x443 EQ
0x444 PUSH2 0x44d
0x447 JUMPI
---
0x431: JUMPDEST 
0x432: V369 = 0x0
0x434: V370 = S[0x0]
0x435: V371 = CALLER
0x436: V372 = 0x1
0x438: V373 = 0xa0
0x43a: V374 = 0x2
0x43c: V375 = EXP 0x2 0xa0
0x43d: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x440: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x442: V378 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x443: V379 = EQ V378 V377
0x444: V380 = 0x44d
0x447: JUMPI 0x44d V379
---
Entry stack: [V12, 0x101, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x101, V88]

================================

Block 0x448
[0x448:0x44c]
---
Predecessors: [0x431]
Successors: []
---
0x448 PUSH1 0x0
0x44a PUSH1 0x0
0x44c REVERT
---
0x448: V381 = 0x0
0x44a: V382 = 0x0
0x44c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x101, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x101, V88]

================================

Block 0x44d
[0x44d:0x468]
---
Predecessors: [0x431]
Successors: [0x469]
---
0x44d JUMPDEST
0x44e PUSH1 0x0
0x450 DUP1
0x451 SLOAD
0x452 PUSH1 0x1
0x454 PUSH1 0xa0
0x456 PUSH1 0x2
0x458 EXP
0x459 SUB
0x45a NOT
0x45b AND
0x45c PUSH1 0x1
0x45e PUSH1 0xa0
0x460 PUSH1 0x2
0x462 EXP
0x463 SUB
0x464 DUP4
0x465 AND
0x466 OR
0x467 SWAP1
0x468 SSTORE
---
0x44d: JUMPDEST 
0x44e: V383 = 0x0
0x451: V384 = S[0x0]
0x452: V385 = 0x1
0x454: V386 = 0xa0
0x456: V387 = 0x2
0x458: V388 = EXP 0x2 0xa0
0x459: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45a: V390 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V391 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V384
0x45c: V392 = 0x1
0x45e: V393 = 0xa0
0x460: V394 = 0x2
0x462: V395 = EXP 0x2 0xa0
0x463: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x465: V397 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x466: V398 = OR V397 V391
0x468: S[0x0] = V398
---
Entry stack: [V12, 0x101, V88]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x101, V88]

================================

Block 0x469
[0x469:0x469]
---
Predecessors: [0x44d]
Successors: [0x46a]
---
0x469 JUMPDEST
---
0x469: JUMPDEST 
---
Entry stack: [V12, 0x101, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x101, V88]

================================

Block 0x46a
[0x46a:0x46c]
---
Predecessors: [0x469]
Successors: [0x101]
---
0x46a JUMPDEST
0x46b POP
0x46c JUMP
---
0x46a: JUMPDEST 
0x46c: JUMP 0x101
---
Entry stack: [V12, 0x101, V88]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x46d
[0x46d:0x483]
---
Predecessors: [0x129]
Successors: [0x484, 0x489]
---
0x46d JUMPDEST
0x46e PUSH1 0x0
0x470 SLOAD
0x471 CALLER
0x472 PUSH1 0x1
0x474 PUSH1 0xa0
0x476 PUSH1 0x2
0x478 EXP
0x479 SUB
0x47a SWAP1
0x47b DUP2
0x47c AND
0x47d SWAP2
0x47e AND
0x47f EQ
0x480 PUSH2 0x489
0x483 JUMPI
---
0x46d: JUMPDEST 
0x46e: V399 = 0x0
0x470: V400 = S[0x0]
0x471: V401 = CALLER
0x472: V402 = 0x1
0x474: V403 = 0xa0
0x476: V404 = 0x2
0x478: V405 = EXP 0x2 0xa0
0x479: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47c: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x47e: V408 = AND V400 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V409 = EQ V408 V407
0x480: V410 = 0x489
0x483: JUMPI 0x489 V409
---
Entry stack: [V12, 0x101, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x101, V101]

================================

Block 0x484
[0x484:0x488]
---
Predecessors: [0x46d]
Successors: []
---
0x484 PUSH1 0x0
0x486 PUSH1 0x0
0x488 REVERT
---
0x484: V411 = 0x0
0x486: V412 = 0x0
0x488: REVERT 0x0 0x0
---
Entry stack: [V12, 0x101, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x101, V101]

================================

Block 0x489
[0x489:0x49a]
---
Predecessors: [0x46d]
Successors: [0x49b, 0x4a0]
---
0x489 JUMPDEST
0x48a PUSH1 0x1
0x48c SLOAD
0x48d PUSH1 0x1
0x48f PUSH1 0xa0
0x491 PUSH1 0x2
0x493 EXP
0x494 SUB
0x495 AND
0x496 ISZERO
0x497 PUSH2 0x4a0
0x49a JUMPI
---
0x489: JUMPDEST 
0x48a: V413 = 0x1
0x48c: V414 = S[0x1]
0x48d: V415 = 0x1
0x48f: V416 = 0xa0
0x491: V417 = 0x2
0x493: V418 = EXP 0x2 0xa0
0x494: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x495: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x496: V421 = ISZERO V420
0x497: V422 = 0x4a0
0x49a: JUMPI 0x4a0 V421
---
Entry stack: [V12, 0x101, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x101, V101]

================================

Block 0x49b
[0x49b:0x49f]
---
Predecessors: [0x489]
Successors: []
---
0x49b PUSH1 0x0
0x49d PUSH1 0x0
0x49f REVERT
---
0x49b: V423 = 0x0
0x49d: V424 = 0x0
0x49f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x101, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x101, V101]

================================

Block 0x4a0
[0x4a0:0x4bb]
---
Predecessors: [0x489]
Successors: [0x4bc]
---
0x4a0 JUMPDEST
0x4a1 PUSH1 0x1
0x4a3 DUP1
0x4a4 SLOAD
0x4a5 PUSH1 0x1
0x4a7 PUSH1 0xa0
0x4a9 PUSH1 0x2
0x4ab EXP
0x4ac SUB
0x4ad NOT
0x4ae AND
0x4af PUSH1 0x1
0x4b1 PUSH1 0xa0
0x4b3 PUSH1 0x2
0x4b5 EXP
0x4b6 SUB
0x4b7 DUP4
0x4b8 AND
0x4b9 OR
0x4ba SWAP1
0x4bb SSTORE
---
0x4a0: JUMPDEST 
0x4a1: V425 = 0x1
0x4a4: V426 = S[0x1]
0x4a5: V427 = 0x1
0x4a7: V428 = 0xa0
0x4a9: V429 = 0x2
0x4ab: V430 = EXP 0x2 0xa0
0x4ac: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ad: V432 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ae: V433 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V426
0x4af: V434 = 0x1
0x4b1: V435 = 0xa0
0x4b3: V436 = 0x2
0x4b5: V437 = EXP 0x2 0xa0
0x4b6: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b8: V439 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V440 = OR V439 V433
0x4bb: S[0x1] = V440
---
Entry stack: [V12, 0x101, V101]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x101, V101]

================================

Block 0x4bc
[0x4bc:0x4bc]
---
Predecessors: [0x4a0]
Successors: [0x4bd]
---
0x4bc JUMPDEST
---
0x4bc: JUMPDEST 
---
Entry stack: [V12, 0x101, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x101, V101]

================================

Block 0x4bd
[0x4bd:0x4bf]
---
Predecessors: [0x4bc]
Successors: [0x101]
---
0x4bd JUMPDEST
0x4be POP
0x4bf JUMP
---
0x4bd: JUMPDEST 
0x4bf: JUMP 0x101
---
Entry stack: [V12, 0x101, V101]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c0
[0x4c0:0x4d1]
---
Predecessors: [0x147]
Successors: [0x15b]
---
0x4c0 JUMPDEST
0x4c1 PUSH1 0x16
0x4c3 PUSH1 0x20
0x4c5 MSTORE
0x4c6 PUSH1 0x0
0x4c8 SWAP1
0x4c9 DUP2
0x4ca MSTORE
0x4cb PUSH1 0x40
0x4cd SWAP1
0x4ce SHA3
0x4cf SLOAD
0x4d0 DUP2
0x4d1 JUMP
---
0x4c0: JUMPDEST 
0x4c1: V441 = 0x16
0x4c3: V442 = 0x20
0x4c5: M[0x20] = 0x16
0x4c6: V443 = 0x0
0x4ca: M[0x0] = V114
0x4cb: V444 = 0x40
0x4ce: V445 = SHA3 0x0 0x40
0x4cf: V446 = S[V445]
0x4d1: JUMP 0x15b
---
Entry stack: [V12, 0x15b, V114]
Stack pops: 2
Stack additions: [S1, V446]
Exit stack: [V12, 0x15b, V446]

================================

Block 0x4d2
[0x4d2:0x4e0]
---
Predecessors: [0x175]
Successors: [0x17d]
---
0x4d2 JUMPDEST
0x4d3 PUSH1 0x1
0x4d5 SLOAD
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0xa0
0x4da PUSH1 0x2
0x4dc EXP
0x4dd SUB
0x4de AND
0x4df DUP2
0x4e0 JUMP
---
0x4d2: JUMPDEST 
0x4d3: V447 = 0x1
0x4d5: V448 = S[0x1]
0x4d6: V449 = 0x1
0x4d8: V450 = 0xa0
0x4da: V451 = 0x2
0x4dc: V452 = EXP 0x2 0xa0
0x4dd: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4de: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x4e0: JUMP 0x17d
---
Entry stack: [V12, 0x17d]
Stack pops: 1
Stack additions: [S0, V454]
Exit stack: [V12, 0x17d, V454]

================================

Block 0x4e1
[0x4e1:0x502]
---
Predecessors: [0x1a1]
Successors: [0x503, 0x58b]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea CALLER
0x4eb AND
0x4ec PUSH1 0x0
0x4ee SWAP1
0x4ef DUP2
0x4f0 MSTORE
0x4f1 PUSH1 0x16
0x4f3 PUSH1 0x20
0x4f5 MSTORE
0x4f6 PUSH1 0x40
0x4f8 DUP2
0x4f9 SHA3
0x4fa SLOAD
0x4fb DUP2
0x4fc DUP2
0x4fd GT
0x4fe ISZERO
0x4ff PUSH2 0x58b
0x502 JUMPI
---
0x4e1: JUMPDEST 
0x4e2: V455 = 0x1
0x4e4: V456 = 0xa0
0x4e6: V457 = 0x2
0x4e8: V458 = EXP 0x2 0xa0
0x4e9: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V460 = CALLER
0x4eb: V461 = AND V460 0xffffffffffffffffffffffffffffffffffffffff
0x4ec: V462 = 0x0
0x4f0: M[0x0] = V461
0x4f1: V463 = 0x16
0x4f3: V464 = 0x20
0x4f5: M[0x20] = 0x16
0x4f6: V465 = 0x40
0x4f9: V466 = SHA3 0x0 0x40
0x4fa: V467 = S[V466]
0x4fd: V468 = GT V467 0x0
0x4fe: V469 = ISZERO V468
0x4ff: V470 = 0x58b
0x502: JUMPI 0x58b V469
---
Entry stack: [V12, 0x1a9]
Stack pops: 0
Stack additions: [0x0, V467]
Exit stack: [V12, 0x1a9, 0x0, V467]

================================

Block 0x503
[0x503:0x53b]
---
Predecessors: [0x4e1]
Successors: [0x53c, 0x55d]
---
0x503 PUSH1 0x1
0x505 PUSH1 0xa0
0x507 PUSH1 0x2
0x509 EXP
0x50a SUB
0x50b CALLER
0x50c AND
0x50d PUSH1 0x0
0x50f DUP2
0x510 DUP2
0x511 MSTORE
0x512 PUSH1 0x16
0x514 PUSH1 0x20
0x516 MSTORE
0x517 PUSH1 0x40
0x519 DUP1
0x51a DUP3
0x51b SHA3
0x51c DUP3
0x51d SWAP1
0x51e SSTORE
0x51f MLOAD
0x520 DUP4
0x521 ISZERO
0x522 PUSH2 0x8fc
0x525 MUL
0x526 SWAP2
0x527 DUP5
0x528 SWAP2
0x529 SWAP1
0x52a DUP2
0x52b DUP2
0x52c DUP2
0x52d DUP6
0x52e DUP9
0x52f DUP9
0x530 CALL
0x531 SWAP4
0x532 POP
0x533 POP
0x534 POP
0x535 POP
0x536 ISZERO
0x537 ISZERO
0x538 PUSH2 0x55d
0x53b JUMPI
---
0x503: V471 = 0x1
0x505: V472 = 0xa0
0x507: V473 = 0x2
0x509: V474 = EXP 0x2 0xa0
0x50a: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50b: V476 = CALLER
0x50c: V477 = AND V476 0xffffffffffffffffffffffffffffffffffffffff
0x50d: V478 = 0x0
0x511: M[0x0] = V477
0x512: V479 = 0x16
0x514: V480 = 0x20
0x516: M[0x20] = 0x16
0x517: V481 = 0x40
0x51b: V482 = SHA3 0x0 0x40
0x51e: S[V482] = 0x0
0x51f: V483 = M[0x40]
0x521: V484 = ISZERO V467
0x522: V485 = 0x8fc
0x525: V486 = MUL 0x8fc V484
0x530: V487 = CALL V486 V477 V467 V483 0x0 V483 0x0
0x536: V488 = ISZERO V487
0x537: V489 = ISZERO V488
0x538: V490 = 0x55d
0x53b: JUMPI 0x55d V489
---
Entry stack: [V12, 0x1a9, 0x0, V467]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a9, 0x0, V467]

================================

Block 0x53c
[0x53c:0x55c]
---
Predecessors: [0x503]
Successors: [0x590]
---
0x53c PUSH1 0x1
0x53e PUSH1 0xa0
0x540 PUSH1 0x2
0x542 EXP
0x543 SUB
0x544 CALLER
0x545 AND
0x546 PUSH1 0x0
0x548 SWAP1
0x549 DUP2
0x54a MSTORE
0x54b PUSH1 0x16
0x54d PUSH1 0x20
0x54f MSTORE
0x550 PUSH1 0x40
0x552 DUP2
0x553 SHA3
0x554 DUP3
0x555 SWAP1
0x556 SSTORE
0x557 SWAP2
0x558 POP
0x559 PUSH2 0x590
0x55c JUMP
---
0x53c: V491 = 0x1
0x53e: V492 = 0xa0
0x540: V493 = 0x2
0x542: V494 = EXP 0x2 0xa0
0x543: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x544: V496 = CALLER
0x545: V497 = AND V496 0xffffffffffffffffffffffffffffffffffffffff
0x546: V498 = 0x0
0x54a: M[0x0] = V497
0x54b: V499 = 0x16
0x54d: V500 = 0x20
0x54f: M[0x20] = 0x16
0x550: V501 = 0x40
0x553: V502 = SHA3 0x0 0x40
0x556: S[V502] = V467
0x559: V503 = 0x590
0x55c: JUMP 0x590
---
Entry stack: [V12, 0x1a9, 0x0, V467]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x1a9, 0x0, V467]

================================

Block 0x55d
[0x55d:0x58a]
---
Predecessors: [0x503]
Successors: [0x58b]
---
0x55d JUMPDEST
0x55e PUSH1 0x40
0x560 DUP1
0x561 MLOAD
0x562 DUP3
0x563 DUP2
0x564 MSTORE
0x565 SWAP1
0x566 MLOAD
0x567 PUSH1 0x1
0x569 PUSH1 0xa0
0x56b PUSH1 0x2
0x56d EXP
0x56e SUB
0x56f CALLER
0x570 AND
0x571 SWAP2
0x572 PUSH1 0x0
0x574 DUP1
0x575 MLOAD
0x576 PUSH1 0x20
0x578 PUSH2 0xaa2
0x57b DUP4
0x57c CODECOPY
0x57d DUP2
0x57e MLOAD
0x57f SWAP2
0x580 MSTORE
0x581 SWAP2
0x582 SWAP1
0x583 DUP2
0x584 SWAP1
0x585 SUB
0x586 PUSH1 0x20
0x588 ADD
0x589 SWAP1
0x58a LOG2
---
0x55d: JUMPDEST 
0x55e: V504 = 0x40
0x561: V505 = M[0x40]
0x564: M[V505] = V467
0x566: V506 = M[0x40]
0x567: V507 = 0x1
0x569: V508 = 0xa0
0x56b: V509 = 0x2
0x56d: V510 = EXP 0x2 0xa0
0x56e: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56f: V512 = CALLER
0x570: V513 = AND V512 0xffffffffffffffffffffffffffffffffffffffff
0x572: V514 = 0x0
0x575: V515 = M[0x0]
0x576: V516 = 0x20
0x578: V517 = 0xaa2
0x57c: CODECOPY 0x0 0xaa2 0x20
0x57e: V518 = M[0x0]
0x580: M[0x0] = V515
0x585: V519 = SUB V505 V506
0x586: V520 = 0x20
0x588: V521 = ADD 0x20 V519
0x58a: LOG V506 V521 V518 V513
---
Entry stack: [V12, 0x1a9, 0x0, V467]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a9, 0x0, V467]

================================

Block 0x58b
[0x58b:0x58f]
---
Predecessors: [0x4e1, 0x55d, 0x6c7]
Successors: [0x590]
---
0x58b JUMPDEST
0x58c PUSH1 0x1
0x58e SWAP2
0x58f POP
---
0x58b: JUMPDEST 
0x58c: V522 = 0x1
---
Entry stack: [V12, 0x1a9, 0x0, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0x1a9, 0x1, S0]

================================

Block 0x590
[0x590:0x593]
---
Predecessors: [0x53c, 0x58b, 0x70a]
Successors: [0x1a9]
---
0x590 JUMPDEST
0x591 POP
0x592 SWAP1
0x593 JUMP
---
0x590: JUMPDEST 
0x593: JUMP 0x1a9
---
Entry stack: [V12, 0x1a9, {0x0, 0x1}, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x594
[0x594:0x5a3]
---
Predecessors: [0x1c5, 0x97d]
Successors: [0x409]
---
0x594 JUMPDEST
0x595 PUSH1 0x0
0x597 PUSH2 0x5a4
0x59a PUSH1 0x4
0x59c SLOAD
0x59d PUSH1 0x6
0x59f SLOAD
0x5a0 PUSH2 0x409
0x5a3 JUMP
---
0x594: JUMPDEST 
0x595: V523 = 0x0
0x597: V524 = 0x5a4
0x59a: V525 = 0x4
0x59c: V526 = S[0x4]
0x59d: V527 = 0x6
0x59f: V528 = S[0x6]
0x5a0: V529 = 0x409
0x5a3: JUMP 0x409
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x1a9, 0x5b8, 0x76d}, S1, {0x15b, 0x987}]
Stack pops: 0
Stack additions: [0x0, 0x5a4, V526, V528]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x1a9, 0x5b8, 0x76d}, S1, {0x15b, 0x987}, 0x0, 0x5a4, V526, V528]

================================

Block 0x5a4
[0x5a4:0x5a6]
---
Predecessors: [0x42a]
Successors: [0x5a7]
---
0x5a4 JUMPDEST
0x5a5 SWAP1
0x5a6 POP
---
0x5a4: JUMPDEST 
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x5a7
[0x5a7:0x5a9]
---
Predecessors: [0x5a4]
Successors: [0x101, 0x15b, 0x5b8, 0x76d, 0x77a, 0x82b, 0x832, 0x840, 0x845, 0x987]
---
0x5a7 JUMPDEST
0x5a8 SWAP1
0x5a9 JUMP
---
0x5a7: JUMPDEST 
0x5a9: JUMP S1
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x5aa
[0x5aa:0x5af]
---
Predecessors: [0x1e7]
Successors: [0x15b]
---
0x5aa JUMPDEST
0x5ab PUSH1 0x3
0x5ad SLOAD
0x5ae DUP2
0x5af JUMP
---
0x5aa: JUMPDEST 
0x5ab: V530 = 0x3
0x5ad: V531 = S[0x3]
0x5af: JUMP 0x15b
---
Entry stack: [V12, 0x15b]
Stack pops: 1
Stack additions: [S0, V531]
Exit stack: [V12, 0x15b, V531]

================================

Block 0x5b0
[0x5b0:0x5b7]
---
Predecessors: [0x209, 0x773]
Successors: [0x97d]
---
0x5b0 JUMPDEST
0x5b1 PUSH2 0x5b8
0x5b4 PUSH2 0x97d
0x5b7 JUMP
---
0x5b0: JUMPDEST 
0x5b1: V532 = 0x5b8
0x5b4: V533 = 0x97d
0x5b7: JUMP 0x97d
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x101, 0x77a}]
Stack pops: 0
Stack additions: [0x5b8]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x101, 0x77a}, 0x5b8]

================================

Block 0x5b8
[0x5b8:0x5be]
---
Predecessors: [0xff, 0x42a, 0x5a7, 0x934, 0x98c]
Successors: [0x5bf, 0x5c4]
---
0x5b8 JUMPDEST
0x5b9 ISZERO
0x5ba ISZERO
0x5bb PUSH2 0x5c4
0x5be JUMPI
---
0x5b8: JUMPDEST 
0x5b9: V534 = ISZERO S0
0x5ba: V535 = ISZERO V534
0x5bb: V536 = 0x5c4
0x5be: JUMPI 0x5c4 V535
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x5bf
[0x5bf:0x5c3]
---
Predecessors: [0x5b8]
Successors: []
---
0x5bf PUSH1 0x0
0x5c1 PUSH1 0x0
0x5c3 REVERT
---
0x5bf: V537 = 0x0
0x5c1: V538 = 0x0
0x5c3: REVERT 0x0 0x0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5c4
[0x5c4:0x681]
---
Predecessors: [0x5b8]
Successors: [0x409]
---
0x5c4 JUMPDEST
0x5c5 PUSH1 0x7
0x5c7 DUP1
0x5c8 SLOAD
0x5c9 PUSH1 0xe
0x5cb DUP1
0x5cc SLOAD
0x5cd PUSH1 0x1
0x5cf PUSH1 0xa0
0x5d1 PUSH1 0x2
0x5d3 EXP
0x5d4 SUB
0x5d5 DUP1
0x5d6 DUP5
0x5d7 AND
0x5d8 PUSH1 0x1
0x5da PUSH1 0xa0
0x5dc PUSH1 0x2
0x5de EXP
0x5df SUB
0x5e0 NOT
0x5e1 SWAP3
0x5e2 DUP4
0x5e3 AND
0x5e4 OR
0x5e5 SWAP1
0x5e6 SWAP3
0x5e7 SSTORE
0x5e8 PUSH1 0x8
0x5ea DUP1
0x5eb SLOAD
0x5ec PUSH1 0xf
0x5ee DUP2
0x5ef SWAP1
0x5f0 SSTORE
0x5f1 PUSH1 0x9
0x5f3 DUP1
0x5f4 SLOAD
0x5f5 PUSH1 0x10
0x5f7 DUP1
0x5f8 SLOAD
0x5f9 SWAP7
0x5fa DUP3
0x5fb AND
0x5fc SWAP7
0x5fd DUP7
0x5fe AND
0x5ff SWAP7
0x600 SWAP1
0x601 SWAP7
0x602 OR
0x603 SWAP1
0x604 SWAP6
0x605 SSTORE
0x606 PUSH1 0xa
0x608 DUP1
0x609 SLOAD
0x60a PUSH1 0x11
0x60c SSTORE
0x60d PUSH1 0xb
0x60f DUP1
0x610 SLOAD
0x611 PUSH1 0x12
0x613 SSTORE
0x614 PUSH1 0xc
0x616 DUP1
0x617 SLOAD
0x618 PUSH1 0x13
0x61a SSTORE
0x61b PUSH1 0xd
0x61d DUP1
0x61e SLOAD
0x61f PUSH1 0x14
0x621 SSTORE
0x622 PUSH1 0x40
0x624 DUP1
0x625 MLOAD
0x626 PUSH1 0xe0
0x628 DUP2
0x629 ADD
0x62a DUP3
0x62b MSTORE
0x62c PUSH1 0x0
0x62e DUP1
0x62f DUP3
0x630 MSTORE
0x631 PUSH1 0x20
0x633 DUP3
0x634 ADD
0x635 DUP2
0x636 SWAP1
0x637 MSTORE
0x638 SWAP2
0x639 DUP2
0x63a ADD
0x63b DUP3
0x63c SWAP1
0x63d MSTORE
0x63e PUSH1 0x60
0x640 DUP2
0x641 ADD
0x642 DUP3
0x643 SWAP1
0x644 MSTORE
0x645 PUSH1 0x80
0x647 DUP2
0x648 ADD
0x649 DUP3
0x64a SWAP1
0x64b MSTORE
0x64c PUSH1 0xa0
0x64e DUP2
0x64f ADD
0x650 DUP3
0x651 SWAP1
0x652 MSTORE
0x653 PUSH1 0xc0
0x655 ADD
0x656 DUP2
0x657 SWAP1
0x658 MSTORE
0x659 SWAP10
0x65a DUP9
0x65b AND
0x65c SWAP1
0x65d SWAP11
0x65e SSTORE
0x65f SWAP5
0x660 DUP9
0x661 SWAP1
0x662 SSTORE
0x663 SWAP6
0x664 SWAP1
0x665 SWAP5
0x666 AND
0x667 SWAP1
0x668 SSTORE
0x669 SWAP2
0x66a DUP5
0x66b SWAP1
0x66c SSTORE
0x66d SWAP2
0x66e DUP4
0x66f SWAP1
0x670 SSTORE
0x671 SWAP1
0x672 DUP3
0x673 SWAP1
0x674 SSTORE
0x675 SWAP2
0x676 SSTORE
0x677 PUSH1 0x2
0x679 SLOAD
0x67a PUSH2 0x682
0x67d SWAP2
0x67e PUSH2 0x409
0x681 JUMP
---
0x5c4: JUMPDEST 
0x5c5: V539 = 0x7
0x5c8: V540 = S[0x7]
0x5c9: V541 = 0xe
0x5cc: V542 = S[0xe]
0x5cd: V543 = 0x1
0x5cf: V544 = 0xa0
0x5d1: V545 = 0x2
0x5d3: V546 = EXP 0x2 0xa0
0x5d4: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d7: V548 = AND V540 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V549 = 0x1
0x5da: V550 = 0xa0
0x5dc: V551 = 0x2
0x5de: V552 = EXP 0x2 0xa0
0x5df: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e0: V554 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5e3: V555 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V542
0x5e4: V556 = OR V555 V548
0x5e7: S[0xe] = V556
0x5e8: V557 = 0x8
0x5eb: V558 = S[0x8]
0x5ec: V559 = 0xf
0x5f0: S[0xf] = V558
0x5f1: V560 = 0x9
0x5f4: V561 = S[0x9]
0x5f5: V562 = 0x10
0x5f8: V563 = S[0x10]
0x5fb: V564 = AND V561 0xffffffffffffffffffffffffffffffffffffffff
0x5fe: V565 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V563
0x602: V566 = OR V565 V564
0x605: S[0x10] = V566
0x606: V567 = 0xa
0x609: V568 = S[0xa]
0x60a: V569 = 0x11
0x60c: S[0x11] = V568
0x60d: V570 = 0xb
0x610: V571 = S[0xb]
0x611: V572 = 0x12
0x613: S[0x12] = V571
0x614: V573 = 0xc
0x617: V574 = S[0xc]
0x618: V575 = 0x13
0x61a: S[0x13] = V574
0x61b: V576 = 0xd
0x61e: V577 = S[0xd]
0x61f: V578 = 0x14
0x621: S[0x14] = V577
0x622: V579 = 0x40
0x625: V580 = M[0x40]
0x626: V581 = 0xe0
0x629: V582 = ADD V580 0xe0
0x62b: M[0x40] = V582
0x62c: V583 = 0x0
0x630: M[V580] = 0x0
0x631: V584 = 0x20
0x634: V585 = ADD V580 0x20
0x637: M[V585] = 0x0
0x63a: V586 = ADD V580 0x40
0x63d: M[V586] = 0x0
0x63e: V587 = 0x60
0x641: V588 = ADD V580 0x60
0x644: M[V588] = 0x0
0x645: V589 = 0x80
0x648: V590 = ADD V580 0x80
0x64b: M[V590] = 0x0
0x64c: V591 = 0xa0
0x64f: V592 = ADD V580 0xa0
0x652: M[V592] = 0x0
0x653: V593 = 0xc0
0x655: V594 = ADD 0xc0 V580
0x658: M[V594] = 0x0
0x65b: V595 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V540
0x65e: S[0x7] = V595
0x662: S[0x8] = 0x0
0x666: V596 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V561
0x668: S[0x9] = V596
0x66c: S[0xa] = 0x0
0x670: S[0xb] = 0x0
0x674: S[0xc] = 0x0
0x676: S[0xd] = 0x0
0x677: V597 = 0x2
0x679: V598 = S[0x2]
0x67a: V599 = 0x682
0x67e: V600 = 0x409
0x681: JUMP 0x409
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x682, V598, V558]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x682, V598, V558]

================================

Block 0x682
[0x682:0x68c]
---
Predecessors: [0x42a]
Successors: [0x98f]
---
0x682 JUMPDEST
0x683 PUSH1 0x2
0x685 SSTORE
0x686 PUSH2 0xff
0x689 PUSH2 0x98f
0x68c JUMP
---
0x682: JUMPDEST 
0x683: V601 = 0x2
0x685: S[0x2] = S0
0x686: V602 = 0xff
0x689: V603 = 0x98f
0x68c: JUMP 0x98f
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0xff]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xff]

================================

Block 0x68d
[0x68d:0x68d]
---
Predecessors: []
Successors: [0x68e]
---
0x68d JUMPDEST
---
0x68d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x68e
[0x68e:0x68f]
---
Predecessors: [0x68d]
Successors: []
Has unresolved jump.
---
0x68e JUMPDEST
0x68f JUMP
---
0x68e: JUMPDEST 
0x68f: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x690
[0x690:0x6b7]
---
Predecessors: [0x21b]
Successors: [0x223]
---
0x690 JUMPDEST
0x691 PUSH1 0xe
0x693 SLOAD
0x694 PUSH1 0xf
0x696 SLOAD
0x697 PUSH1 0x10
0x699 SLOAD
0x69a PUSH1 0x11
0x69c SLOAD
0x69d PUSH1 0x12
0x69f SLOAD
0x6a0 PUSH1 0x13
0x6a2 SLOAD
0x6a3 PUSH1 0x14
0x6a5 SLOAD
0x6a6 PUSH1 0x1
0x6a8 PUSH1 0xa0
0x6aa PUSH1 0x2
0x6ac EXP
0x6ad SUB
0x6ae SWAP7
0x6af DUP8
0x6b0 AND
0x6b1 SWAP7
0x6b2 SWAP1
0x6b3 SWAP5
0x6b4 AND
0x6b5 SWAP4
0x6b6 DUP8
0x6b7 JUMP
---
0x690: JUMPDEST 
0x691: V604 = 0xe
0x693: V605 = S[0xe]
0x694: V606 = 0xf
0x696: V607 = S[0xf]
0x697: V608 = 0x10
0x699: V609 = S[0x10]
0x69a: V610 = 0x11
0x69c: V611 = S[0x11]
0x69d: V612 = 0x12
0x69f: V613 = S[0x12]
0x6a0: V614 = 0x13
0x6a2: V615 = S[0x13]
0x6a3: V616 = 0x14
0x6a5: V617 = S[0x14]
0x6a6: V618 = 0x1
0x6a8: V619 = 0xa0
0x6aa: V620 = 0x2
0x6ac: V621 = EXP 0x2 0xa0
0x6ad: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b0: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x6b4: V624 = AND V609 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: JUMP 0x223
---
Entry stack: [V12, 0x223]
Stack pops: 1
Stack additions: [S0, V623, V607, V624, V611, V613, V615, V617]
Exit stack: [V12, 0x223, V623, V607, V624, V611, V613, V615, V617]

================================

Block 0x6b8
[0x6b8:0x6c6]
---
Predecessors: [0x272]
Successors: [0x17d]
---
0x6b8 JUMPDEST
0x6b9 PUSH1 0x0
0x6bb SLOAD
0x6bc PUSH1 0x1
0x6be PUSH1 0xa0
0x6c0 PUSH1 0x2
0x6c2 EXP
0x6c3 SUB
0x6c4 AND
0x6c5 DUP2
0x6c6 JUMP
---
0x6b8: JUMPDEST 
0x6b9: V625 = 0x0
0x6bb: V626 = S[0x0]
0x6bc: V627 = 0x1
0x6be: V628 = 0xa0
0x6c0: V629 = 0x2
0x6c2: V630 = EXP 0x2 0xa0
0x6c3: V631 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c4: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V626
0x6c6: JUMP 0x17d
---
Entry stack: [V12, 0x17d]
Stack pops: 1
Stack additions: [S0, V632]
Exit stack: [V12, 0x17d, V632]

================================

Block 0x6c7
[0x6c7:0x6d5]
---
Predecessors: [0x29e]
Successors: [0x58b, 0x6d6]
---
0x6c7 JUMPDEST
0x6c8 PUSH1 0x2
0x6ca SLOAD
0x6cb PUSH1 0x0
0x6cd SWAP1
0x6ce DUP2
0x6cf DUP2
0x6d0 GT
0x6d1 ISZERO
0x6d2 PUSH2 0x58b
0x6d5 JUMPI
---
0x6c7: JUMPDEST 
0x6c8: V633 = 0x2
0x6ca: V634 = S[0x2]
0x6cb: V635 = 0x0
0x6d0: V636 = GT V634 0x0
0x6d1: V637 = ISZERO V636
0x6d2: V638 = 0x58b
0x6d5: JUMPI 0x58b V637
---
Entry stack: [V12, 0x1a9]
Stack pops: 0
Stack additions: [0x0, V634]
Exit stack: [V12, 0x1a9, 0x0, V634]

================================

Block 0x6d6
[0x6d6:0x709]
---
Predecessors: [0x6c7]
Successors: [0x70a, 0x717]
---
0x6d6 PUSH1 0x0
0x6d8 PUSH1 0x2
0x6da DUP2
0x6db SWAP1
0x6dc SSTORE
0x6dd PUSH1 0x1
0x6df SLOAD
0x6e0 PUSH1 0x40
0x6e2 MLOAD
0x6e3 PUSH1 0x1
0x6e5 PUSH1 0xa0
0x6e7 PUSH1 0x2
0x6e9 EXP
0x6ea SUB
0x6eb SWAP1
0x6ec SWAP2
0x6ed AND
0x6ee SWAP2
0x6ef DUP4
0x6f0 ISZERO
0x6f1 PUSH2 0x8fc
0x6f4 MUL
0x6f5 SWAP2
0x6f6 DUP5
0x6f7 SWAP2
0x6f8 DUP2
0x6f9 DUP2
0x6fa DUP2
0x6fb DUP6
0x6fc DUP9
0x6fd DUP9
0x6fe CALL
0x6ff SWAP4
0x700 POP
0x701 POP
0x702 POP
0x703 POP
0x704 ISZERO
0x705 ISZERO
0x706 PUSH2 0x717
0x709 JUMPI
---
0x6d6: V639 = 0x0
0x6d8: V640 = 0x2
0x6dc: S[0x2] = 0x0
0x6dd: V641 = 0x1
0x6df: V642 = S[0x1]
0x6e0: V643 = 0x40
0x6e2: V644 = M[0x40]
0x6e3: V645 = 0x1
0x6e5: V646 = 0xa0
0x6e7: V647 = 0x2
0x6e9: V648 = EXP 0x2 0xa0
0x6ea: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ed: V650 = AND V642 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V651 = ISZERO V634
0x6f1: V652 = 0x8fc
0x6f4: V653 = MUL 0x8fc V651
0x6fe: V654 = CALL V653 V650 V634 V644 0x0 V644 0x0
0x704: V655 = ISZERO V654
0x705: V656 = ISZERO V655
0x706: V657 = 0x717
0x709: JUMPI 0x717 V656
---
Entry stack: [V12, 0x1a9, 0x0, V634]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a9, 0x0, V634]

================================

Block 0x70a
[0x70a:0x716]
---
Predecessors: [0x6d6]
Successors: [0x590]
---
0x70a PUSH1 0x2
0x70c DUP2
0x70d SWAP1
0x70e SSTORE
0x70f PUSH1 0x0
0x711 SWAP2
0x712 POP
0x713 PUSH2 0x590
0x716 JUMP
---
0x70a: V658 = 0x2
0x70e: S[0x2] = V634
0x70f: V659 = 0x0
0x713: V660 = 0x590
0x716: JUMP 0x590
---
Entry stack: [V12, 0x1a9, 0x0, V634]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x1a9, 0x0, V634]

================================

Block 0x717
[0x717:0x747]
---
Predecessors: [0x6d6]
Successors: [0x748]
---
0x717 JUMPDEST
0x718 PUSH1 0x1
0x71a SLOAD
0x71b PUSH1 0x40
0x71d DUP1
0x71e MLOAD
0x71f DUP4
0x720 DUP2
0x721 MSTORE
0x722 SWAP1
0x723 MLOAD
0x724 PUSH1 0x1
0x726 PUSH1 0xa0
0x728 PUSH1 0x2
0x72a EXP
0x72b SUB
0x72c SWAP1
0x72d SWAP3
0x72e AND
0x72f SWAP2
0x730 PUSH1 0x0
0x732 DUP1
0x733 MLOAD
0x734 PUSH1 0x20
0x736 PUSH2 0xaa2
0x739 DUP4
0x73a CODECOPY
0x73b DUP2
0x73c MLOAD
0x73d SWAP2
0x73e MSTORE
0x73f SWAP2
0x740 DUP2
0x741 SWAP1
0x742 SUB
0x743 PUSH1 0x20
0x745 ADD
0x746 SWAP1
0x747 LOG2
---
0x717: JUMPDEST 
0x718: V661 = 0x1
0x71a: V662 = S[0x1]
0x71b: V663 = 0x40
0x71e: V664 = M[0x40]
0x721: M[V664] = V634
0x723: V665 = M[0x40]
0x724: V666 = 0x1
0x726: V667 = 0xa0
0x728: V668 = 0x2
0x72a: V669 = EXP 0x2 0xa0
0x72b: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72e: V671 = AND V662 0xffffffffffffffffffffffffffffffffffffffff
0x730: V672 = 0x0
0x733: V673 = M[0x0]
0x734: V674 = 0x20
0x736: V675 = 0xaa2
0x73a: CODECOPY 0x0 0xaa2 0x20
0x73c: V676 = M[0x0]
0x73e: M[0x0] = V673
0x742: V677 = SUB V664 V665
0x743: V678 = 0x20
0x745: V679 = ADD 0x20 V677
0x747: LOG V665 V679 V676 V671
---
Entry stack: [V12, 0x1a9, 0x0, V634]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a9, 0x0, V634]

================================

Block 0x748
[0x748:0x74c]
---
Predecessors: [0x717]
Successors: [0x74d]
---
0x748 JUMPDEST
0x749 PUSH1 0x1
0x74b SWAP2
0x74c POP
---
0x748: JUMPDEST 
0x749: V680 = 0x1
---
Entry stack: [V12, 0x1a9, 0x0, V634]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0x1a9, 0x1, V634]

================================

Block 0x74d
[0x74d:0x750]
---
Predecessors: [0x748]
Successors: [0x1a9]
---
0x74d JUMPDEST
0x74e POP
0x74f SWAP1
0x750 JUMP
---
0x74d: JUMPDEST 
0x750: JUMP 0x1a9
---
Entry stack: [V12, 0x1a9, 0x1, V634]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x1]

================================

Block 0x751
[0x751:0x762]
---
Predecessors: [0x2c2]
Successors: [0x15b]
---
0x751 JUMPDEST
0x752 PUSH1 0x15
0x754 PUSH1 0x20
0x756 MSTORE
0x757 PUSH1 0x0
0x759 SWAP1
0x75a DUP2
0x75b MSTORE
0x75c PUSH1 0x40
0x75e SWAP1
0x75f SHA3
0x760 SLOAD
0x761 DUP2
0x762 JUMP
---
0x751: JUMPDEST 
0x752: V681 = 0x15
0x754: V682 = 0x20
0x756: M[0x20] = 0x15
0x757: V683 = 0x0
0x75b: M[0x0] = V243
0x75c: V684 = 0x40
0x75f: V685 = SHA3 0x0 0x40
0x760: V686 = S[V685]
0x762: JUMP 0x15b
---
Entry stack: [V12, 0x15b, V243]
Stack pops: 2
Stack additions: [S1, V686]
Exit stack: [V12, 0x15b, V686]

================================

Block 0x763
[0x763:0x76c]
---
Predecessors: [0x2df]
Successors: [0x97d]
---
0x763 JUMPDEST
0x764 PUSH1 0x0
0x766 PUSH2 0x76d
0x769 PUSH2 0x97d
0x76c JUMP
---
0x763: JUMPDEST 
0x764: V687 = 0x0
0x766: V688 = 0x76d
0x769: V689 = 0x97d
0x76c: JUMP 0x97d
---
Entry stack: [V12, 0x101, V259, V261, V263, V265, V267, V271]
Stack pops: 0
Stack additions: [0x0, 0x76d]
Exit stack: [V12, 0x101, V259, V261, V263, V265, V267, V271, 0x0, 0x76d]

================================

Block 0x76d
[0x76d:0x772]
---
Predecessors: [0xff, 0x42a, 0x5a7, 0x934, 0x98c]
Successors: [0x773, 0x77a]
---
0x76d JUMPDEST
0x76e ISZERO
0x76f PUSH2 0x77a
0x772 JUMPI
---
0x76d: JUMPDEST 
0x76e: V690 = ISZERO S0
0x76f: V691 = 0x77a
0x772: JUMPI 0x77a V690
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x773
[0x773:0x779]
---
Predecessors: [0x76d]
Successors: [0x5b0]
---
0x773 PUSH2 0x77a
0x776 PUSH2 0x5b0
0x779 JUMP
---
0x773: V692 = 0x77a
0x776: V693 = 0x5b0
0x779: JUMP 0x5b0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x77a]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x77a]

================================

Block 0x77a
[0x77a:0x77a]
---
Predecessors: [0xff, 0x42a, 0x5a7, 0x76d, 0x934, 0x98c]
Successors: [0x77b]
---
0x77a JUMPDEST
---
0x77a: JUMPDEST 
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x77b
[0x77b:0x783]
---
Predecessors: [0x77a]
Successors: [0x784, 0x7c3]
---
0x77b JUMPDEST
0x77c POP
0x77d CALLVALUE
0x77e DUP2
0x77f ISZERO
0x780 PUSH2 0x7c3
0x783 JUMPI
---
0x77b: JUMPDEST 
0x77d: V694 = CALLVALUE
0x77f: V695 = ISZERO S1
0x780: V696 = 0x7c3
0x783: JUMPI 0x7c3 V695
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V694]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V694]

================================

Block 0x784
[0x784:0x7a6]
---
Predecessors: [0x77b]
Successors: [0x409]
---
0x784 PUSH1 0x1
0x786 PUSH1 0xa0
0x788 PUSH1 0x2
0x78a EXP
0x78b SUB
0x78c CALLER
0x78d AND
0x78e PUSH1 0x0
0x790 SWAP1
0x791 DUP2
0x792 MSTORE
0x793 PUSH1 0x16
0x795 PUSH1 0x20
0x797 MSTORE
0x798 PUSH1 0x40
0x79a SWAP1
0x79b SHA3
0x79c SLOAD
0x79d PUSH2 0x7a7
0x7a0 SWAP1
0x7a1 DUP3
0x7a2 SWAP1
0x7a3 PUSH2 0x409
0x7a6 JUMP
---
0x784: V697 = 0x1
0x786: V698 = 0xa0
0x788: V699 = 0x2
0x78a: V700 = EXP 0x2 0xa0
0x78b: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78c: V702 = CALLER
0x78d: V703 = AND V702 0xffffffffffffffffffffffffffffffffffffffff
0x78e: V704 = 0x0
0x792: M[0x0] = V703
0x793: V705 = 0x16
0x795: V706 = 0x20
0x797: M[0x20] = 0x16
0x798: V707 = 0x40
0x79b: V708 = SHA3 0x0 0x40
0x79c: V709 = S[V708]
0x79d: V710 = 0x7a7
0x7a3: V711 = 0x409
0x7a6: JUMP 0x409
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V694]
Stack pops: 1
Stack additions: [S0, 0x7a7, S0, V709]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V694, 0x7a7, V694, V709]

================================

Block 0x7a7
[0x7a7:0x7c2]
---
Predecessors: [0x42a]
Successors: [0x7c3]
---
0x7a7 JUMPDEST
0x7a8 PUSH1 0x1
0x7aa PUSH1 0xa0
0x7ac PUSH1 0x2
0x7ae EXP
0x7af SUB
0x7b0 CALLER
0x7b1 AND
0x7b2 PUSH1 0x0
0x7b4 SWAP1
0x7b5 DUP2
0x7b6 MSTORE
0x7b7 PUSH1 0x16
0x7b9 PUSH1 0x20
0x7bb MSTORE
0x7bc PUSH1 0x40
0x7be DUP2
0x7bf SHA3
0x7c0 SSTORE
0x7c1 SWAP1
0x7c2 POP
---
0x7a7: JUMPDEST 
0x7a8: V712 = 0x1
0x7aa: V713 = 0xa0
0x7ac: V714 = 0x2
0x7ae: V715 = EXP 0x2 0xa0
0x7af: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b0: V717 = CALLER
0x7b1: V718 = AND V717 0xffffffffffffffffffffffffffffffffffffffff
0x7b2: V719 = 0x0
0x7b6: M[0x0] = V718
0x7b7: V720 = 0x16
0x7b9: V721 = 0x20
0x7bb: M[0x20] = 0x16
0x7bc: V722 = 0x40
0x7bf: V723 = SHA3 0x0 0x40
0x7c0: S[V723] = 0x0
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x7c3
[0x7c3:0x7cc]
---
Predecessors: [0x77b, 0x7a7]
Successors: [0x7cd, 0x7d2]
---
0x7c3 JUMPDEST
0x7c4 PUSH1 0x8
0x7c6 SLOAD
0x7c7 DUP2
0x7c8 GT
0x7c9 PUSH2 0x7d2
0x7cc JUMPI
---
0x7c3: JUMPDEST 
0x7c4: V724 = 0x8
0x7c6: V725 = S[0x8]
0x7c8: V726 = GT S0 V725
0x7c9: V727 = 0x7d2
0x7cc: JUMPI 0x7d2 V726
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7cd
[0x7cd:0x7d1]
---
Predecessors: [0x7c3]
Successors: []
---
0x7cd PUSH1 0x0
0x7cf PUSH1 0x0
0x7d1 REVERT
---
0x7cd: V728 = 0x0
0x7cf: V729 = 0x0
0x7d1: REVERT 0x0 0x0
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7d2
[0x7d2:0x7e3]
---
Predecessors: [0x7c3]
Successors: [0x7e4, 0x861]
---
0x7d2 JUMPDEST
0x7d3 PUSH1 0x7
0x7d5 SLOAD
0x7d6 PUSH1 0x1
0x7d8 PUSH1 0xa0
0x7da PUSH1 0x2
0x7dc EXP
0x7dd SUB
0x7de AND
0x7df ISZERO
0x7e0 PUSH2 0x861
0x7e3 JUMPI
---
0x7d2: JUMPDEST 
0x7d3: V730 = 0x7
0x7d5: V731 = S[0x7]
0x7d6: V732 = 0x1
0x7d8: V733 = 0xa0
0x7da: V734 = 0x2
0x7dc: V735 = EXP 0x2 0xa0
0x7dd: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7de: V737 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0x7df: V738 = ISZERO V737
0x7e0: V739 = 0x861
0x7e3: JUMPI 0x861 V738
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7e4
[0x7e4:0x81c]
---
Predecessors: [0x7d2]
Successors: [0xa33]
---
0x7e4 PUSH1 0x7
0x7e6 SLOAD
0x7e7 PUSH1 0x1
0x7e9 PUSH1 0xa0
0x7eb PUSH1 0x2
0x7ed EXP
0x7ee SUB
0x7ef AND
0x7f0 PUSH1 0x0
0x7f2 SWAP1
0x7f3 DUP2
0x7f4 MSTORE
0x7f5 PUSH1 0x16
0x7f7 PUSH1 0x20
0x7f9 MSTORE
0x7fa PUSH1 0x40
0x7fc SWAP1
0x7fd SHA3
0x7fe SLOAD
0x7ff PUSH1 0x8
0x801 SLOAD
0x802 PUSH2 0x845
0x805 SWAP2
0x806 SWAP1
0x807 PUSH2 0x840
0x80a SWAP1
0x80b PUSH2 0x832
0x80e SWAP1
0x80f PUSH2 0x82b
0x812 SWAP1
0x813 PUSH2 0x81d
0x816 SWAP1
0x817 PUSH1 0x63
0x819 PUSH2 0xa33
0x81c JUMP
---
0x7e4: V740 = 0x7
0x7e6: V741 = S[0x7]
0x7e7: V742 = 0x1
0x7e9: V743 = 0xa0
0x7eb: V744 = 0x2
0x7ed: V745 = EXP 0x2 0xa0
0x7ee: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ef: V747 = AND 0xffffffffffffffffffffffffffffffffffffffff V741
0x7f0: V748 = 0x0
0x7f4: M[0x0] = V747
0x7f5: V749 = 0x16
0x7f7: V750 = 0x20
0x7f9: M[0x20] = 0x16
0x7fa: V751 = 0x40
0x7fd: V752 = SHA3 0x0 0x40
0x7fe: V753 = S[V752]
0x7ff: V754 = 0x8
0x801: V755 = S[0x8]
0x802: V756 = 0x845
0x807: V757 = 0x840
0x80b: V758 = 0x832
0x80f: V759 = 0x82b
0x813: V760 = 0x81d
0x817: V761 = 0x63
0x819: V762 = 0xa33
0x81c: JUMP 0xa33
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x845, V753, 0x840, 0x832, 0x82b, 0x81d, V755, 0x63]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x845, V753, 0x840, 0x832, 0x82b, 0x81d, V755, 0x63]

================================

Block 0x81d
[0x81d:0x82a]
---
Predecessors: [0x42a]
Successors: [0xa33]
---
0x81d JUMPDEST
0x81e PUSH8 0x8ac7230489e80000
0x827 PUSH2 0xa33
0x82a JUMP
---
0x81d: JUMPDEST 
0x81e: V763 = 0x8ac7230489e80000
0x827: V764 = 0xa33
0x82a: JUMP 0xa33
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x8ac7230489e80000]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x8ac7230489e80000]

================================

Block 0x82b
[0x82b:0x831]
---
Predecessors: [0xff, 0x42a, 0x5a7, 0x934, 0x98c]
Successors: [0xa62]
---
0x82b JUMPDEST
0x82c PUSH1 0x64
0x82e PUSH2 0xa62
0x831 JUMP
---
0x82b: JUMPDEST 
0x82c: V765 = 0x64
0x82e: V766 = 0xa62
0x831: JUMP 0xa62
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x64]

================================

Block 0x832
[0x832:0x83f]
---
Predecessors: [0xff, 0x42a, 0x5a7, 0x934, 0x98c]
Successors: [0xa62]
---
0x832 JUMPDEST
0x833 PUSH8 0x8ac7230489e80000
0x83c PUSH2 0xa62
0x83f JUMP
---
0x832: JUMPDEST 
0x833: V767 = 0x8ac7230489e80000
0x83c: V768 = 0xa62
0x83f: JUMP 0xa62
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x8ac7230489e80000]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x8ac7230489e80000]

================================

Block 0x840
[0x840:0x844]
---
Predecessors: [0xff, 0x42a, 0x5a7, 0x934, 0x98c]
Successors: [0x409]
---
0x840 JUMPDEST
0x841 PUSH2 0x409
0x844 JUMP
---
0x840: JUMPDEST 
0x841: V769 = 0x409
0x844: JUMP 0x409
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x845
[0x845:0x860]
---
Predecessors: [0xff, 0x42a, 0x5a7, 0x934, 0x98c]
Successors: [0x861]
---
0x845 JUMPDEST
0x846 PUSH1 0x7
0x848 SLOAD
0x849 PUSH1 0x1
0x84b PUSH1 0xa0
0x84d PUSH1 0x2
0x84f EXP
0x850 SUB
0x851 AND
0x852 PUSH1 0x0
0x854 SWAP1
0x855 DUP2
0x856 MSTORE
0x857 PUSH1 0x16
0x859 PUSH1 0x20
0x85b MSTORE
0x85c PUSH1 0x40
0x85e SWAP1
0x85f SHA3
0x860 SSTORE
---
0x845: JUMPDEST 
0x846: V770 = 0x7
0x848: V771 = S[0x7]
0x849: V772 = 0x1
0x84b: V773 = 0xa0
0x84d: V774 = 0x2
0x84f: V775 = EXP 0x2 0xa0
0x850: V776 = SUB 0x10000000000000000000000000000000000000000 0x1
0x851: V777 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x852: V778 = 0x0
0x856: M[0x0] = V777
0x857: V779 = 0x16
0x859: V780 = 0x20
0x85b: M[0x20] = 0x16
0x85c: V781 = 0x40
0x85f: V782 = SHA3 0x0 0x40
0x860: S[V782] = S0
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x861
[0x861:0x933]
---
Predecessors: [0x7d2, 0x845]
Successors: [0x934]
---
0x861 JUMPDEST
0x862 PUSH1 0x40
0x864 DUP1
0x865 MLOAD
0x866 PUSH1 0xe0
0x868 DUP2
0x869 ADD
0x86a DUP3
0x86b MSTORE
0x86c PUSH1 0x1
0x86e PUSH1 0xa0
0x870 PUSH1 0x2
0x872 EXP
0x873 SUB
0x874 CALLER
0x875 DUP2
0x876 AND
0x877 DUP1
0x878 DUP4
0x879 MSTORE
0x87a PUSH1 0x20
0x87c DUP1
0x87d DUP5
0x87e ADD
0x87f DUP7
0x880 SWAP1
0x881 MSTORE
0x882 SWAP2
0x883 DUP12
0x884 AND
0x885 DUP4
0x886 DUP6
0x887 ADD
0x888 DUP2
0x889 SWAP1
0x88a MSTORE
0x88b PUSH1 0x60
0x88d DUP1
0x88e DUP6
0x88f ADD
0x890 DUP13
0x891 SWAP1
0x892 MSTORE
0x893 PUSH1 0x80
0x895 DUP1
0x896 DUP7
0x897 ADD
0x898 DUP13
0x899 SWAP1
0x89a MSTORE
0x89b PUSH1 0xa0
0x89d DUP1
0x89e DUP8
0x89f ADD
0x8a0 DUP13
0x8a1 SWAP1
0x8a2 MSTORE
0x8a3 PUSH1 0xc0
0x8a5 SWAP1
0x8a6 SWAP7
0x8a7 ADD
0x8a8 DUP11
0x8a9 SWAP1
0x8aa MSTORE
0x8ab PUSH1 0x7
0x8ad DUP1
0x8ae SLOAD
0x8af PUSH1 0x1
0x8b1 PUSH1 0xa0
0x8b3 PUSH1 0x2
0x8b5 EXP
0x8b6 SUB
0x8b7 NOT
0x8b8 SWAP1
0x8b9 DUP2
0x8ba AND
0x8bb DUP7
0x8bc OR
0x8bd SWAP1
0x8be SWAP2
0x8bf SSTORE
0x8c0 PUSH1 0x8
0x8c2 DUP10
0x8c3 SWAP1
0x8c4 SSTORE
0x8c5 PUSH1 0x9
0x8c7 DUP1
0x8c8 SLOAD
0x8c9 SWAP1
0x8ca SWAP2
0x8cb AND
0x8cc DUP5
0x8cd OR
0x8ce SWAP1
0x8cf SSTORE
0x8d0 PUSH1 0xa
0x8d2 DUP14
0x8d3 SWAP1
0x8d4 SSTORE
0x8d5 PUSH1 0xb
0x8d7 DUP13
0x8d8 SWAP1
0x8d9 SSTORE
0x8da PUSH1 0xc
0x8dc DUP12
0x8dd SWAP1
0x8de SSTORE
0x8df PUSH1 0xd
0x8e1 DUP11
0x8e2 SWAP1
0x8e3 SSTORE
0x8e4 PUSH1 0x3
0x8e6 SLOAD
0x8e7 DUP8
0x8e8 MLOAD
0x8e9 DUP10
0x8ea DUP2
0x8eb MSTORE
0x8ec SWAP6
0x8ed DUP7
0x8ee ADD
0x8ef DUP15
0x8f0 SWAP1
0x8f1 MSTORE
0x8f2 DUP6
0x8f3 DUP9
0x8f4 ADD
0x8f5 DUP14
0x8f6 SWAP1
0x8f7 MSTORE
0x8f8 SWAP2
0x8f9 DUP6
0x8fa ADD
0x8fb DUP12
0x8fc SWAP1
0x8fd MSTORE
0x8fe DUP5
0x8ff ADD
0x900 DUP10
0x901 SWAP1
0x902 MSTORE
0x903 SWAP5
0x904 MLOAD
0x905 SWAP1
0x906 SWAP5
0x907 SWAP2
0x908 SWAP4
0x909 SWAP2
0x90a SWAP3
0x90b PUSH32 0xae7bf4018c5551e2d207d1e79ceefcf80a1f4981ecf9fed6a0deae7c34ee7712
0x92c SWAP3
0x92d SWAP1
0x92e DUP3
0x92f SWAP1
0x930 SUB
0x931 ADD
0x932 SWAP1
0x933 LOG4
---
0x861: JUMPDEST 
0x862: V783 = 0x40
0x865: V784 = M[0x40]
0x866: V785 = 0xe0
0x869: V786 = ADD V784 0xe0
0x86b: M[0x40] = V786
0x86c: V787 = 0x1
0x86e: V788 = 0xa0
0x870: V789 = 0x2
0x872: V790 = EXP 0x2 0xa0
0x873: V791 = SUB 0x10000000000000000000000000000000000000000 0x1
0x874: V792 = CALLER
0x876: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff V792
0x879: M[V784] = V793
0x87a: V794 = 0x20
0x87e: V795 = ADD V784 0x20
0x881: M[V795] = S0
0x884: V796 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x887: V797 = ADD 0x40 V784
0x88a: M[V797] = V796
0x88b: V798 = 0x60
0x88f: V799 = ADD V784 0x60
0x892: M[V799] = S5
0x893: V800 = 0x80
0x897: V801 = ADD V784 0x80
0x89a: M[V801] = S4
0x89b: V802 = 0xa0
0x89f: V803 = ADD V784 0xa0
0x8a2: M[V803] = S3
0x8a3: V804 = 0xc0
0x8a7: V805 = ADD V784 0xc0
0x8aa: M[V805] = S2
0x8ab: V806 = 0x7
0x8ae: V807 = S[0x7]
0x8af: V808 = 0x1
0x8b1: V809 = 0xa0
0x8b3: V810 = 0x2
0x8b5: V811 = EXP 0x2 0xa0
0x8b6: V812 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b7: V813 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8ba: V814 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V807
0x8bc: V815 = OR V793 V814
0x8bf: S[0x7] = V815
0x8c0: V816 = 0x8
0x8c4: S[0x8] = S0
0x8c5: V817 = 0x9
0x8c8: V818 = S[0x9]
0x8cb: V819 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V818
0x8cd: V820 = OR V796 V819
0x8cf: S[0x9] = V820
0x8d0: V821 = 0xa
0x8d4: S[0xa] = S5
0x8d5: V822 = 0xb
0x8d9: S[0xb] = S4
0x8da: V823 = 0xc
0x8de: S[0xc] = S3
0x8df: V824 = 0xd
0x8e3: S[0xd] = S2
0x8e4: V825 = 0x3
0x8e6: V826 = S[0x3]
0x8e8: V827 = M[0x40]
0x8eb: M[V827] = S0
0x8ee: V828 = ADD V827 0x20
0x8f1: M[V828] = S5
0x8f4: V829 = ADD 0x40 V827
0x8f7: M[V829] = S4
0x8fa: V830 = ADD V827 0x60
0x8fd: M[V830] = S3
0x8ff: V831 = ADD V827 0x80
0x902: M[V831] = S2
0x904: V832 = M[0x40]
0x90b: V833 = 0xae7bf4018c5551e2d207d1e79ceefcf80a1f4981ecf9fed6a0deae7c34ee7712
0x930: V834 = SUB V827 V832
0x931: V835 = ADD V834 0xa0
0x933: LOG V832 V835 0xae7bf4018c5551e2d207d1e79ceefcf80a1f4981ecf9fed6a0deae7c34ee7712 V826 V793 V796
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x934
[0x934:0x93c]
---
Predecessors: [0x861]
Successors: [0x101, 0x15b, 0x5b8, 0x76d, 0x77a, 0x82b, 0x832, 0x840, 0x845, 0x987]
---
0x934 JUMPDEST
0x935 POP
0x936 POP
0x937 POP
0x938 POP
0x939 POP
0x93a POP
0x93b POP
0x93c JUMP
---
0x934: JUMPDEST 
0x93c: JUMP S7
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8]

================================

Block 0x93d
[0x93d:0x964]
---
Predecessors: [0x30e]
Successors: [0x223]
---
0x93d JUMPDEST
0x93e PUSH1 0x7
0x940 SLOAD
0x941 PUSH1 0x8
0x943 SLOAD
0x944 PUSH1 0x9
0x946 SLOAD
0x947 PUSH1 0xa
0x949 SLOAD
0x94a PUSH1 0xb
0x94c SLOAD
0x94d PUSH1 0xc
0x94f SLOAD
0x950 PUSH1 0xd
0x952 SLOAD
0x953 PUSH1 0x1
0x955 PUSH1 0xa0
0x957 PUSH1 0x2
0x959 EXP
0x95a SUB
0x95b SWAP7
0x95c DUP8
0x95d AND
0x95e SWAP7
0x95f SWAP1
0x960 SWAP5
0x961 AND
0x962 SWAP4
0x963 DUP8
0x964 JUMP
---
0x93d: JUMPDEST 
0x93e: V836 = 0x7
0x940: V837 = S[0x7]
0x941: V838 = 0x8
0x943: V839 = S[0x8]
0x944: V840 = 0x9
0x946: V841 = S[0x9]
0x947: V842 = 0xa
0x949: V843 = S[0xa]
0x94a: V844 = 0xb
0x94c: V845 = S[0xb]
0x94d: V846 = 0xc
0x94f: V847 = S[0xc]
0x950: V848 = 0xd
0x952: V849 = S[0xd]
0x953: V850 = 0x1
0x955: V851 = 0xa0
0x957: V852 = 0x2
0x959: V853 = EXP 0x2 0xa0
0x95a: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95d: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V837
0x961: V856 = AND V841 0xffffffffffffffffffffffffffffffffffffffff
0x964: JUMP 0x223
---
Entry stack: [V12, 0x223]
Stack pops: 1
Stack additions: [S0, V855, V839, V856, V843, V845, V847, V849]
Exit stack: [V12, 0x223, V855, V839, V856, V843, V845, V847, V849]

================================

Block 0x965
[0x965:0x96a]
---
Predecessors: [0x365]
Successors: [0x15b]
---
0x965 JUMPDEST
0x966 PUSH1 0x2
0x968 SLOAD
0x969 DUP2
0x96a JUMP
---
0x965: JUMPDEST 
0x966: V857 = 0x2
0x968: V858 = S[0x2]
0x96a: JUMP 0x15b
---
Entry stack: [V12, 0x15b]
Stack pops: 1
Stack additions: [S0, V858]
Exit stack: [V12, 0x15b, V858]

================================

Block 0x96b
[0x96b:0x970]
---
Predecessors: [0x387]
Successors: [0x15b]
---
0x96b JUMPDEST
0x96c PUSH1 0x6
0x96e SLOAD
0x96f DUP2
0x970 JUMP
---
0x96b: JUMPDEST 
0x96c: V859 = 0x6
0x96e: V860 = S[0x6]
0x970: JUMP 0x15b
---
Entry stack: [V12, 0x15b]
Stack pops: 1
Stack additions: [S0, V860]
Exit stack: [V12, 0x15b, V860]

================================

Block 0x971
[0x971:0x976]
---
Predecessors: [0x3a9]
Successors: [0x15b]
---
0x971 JUMPDEST
0x972 PUSH1 0x5
0x974 SLOAD
0x975 DUP2
0x976 JUMP
---
0x971: JUMPDEST 
0x972: V861 = 0x5
0x974: V862 = S[0x5]
0x976: JUMP 0x15b
---
Entry stack: [V12, 0x15b]
Stack pops: 1
Stack additions: [S0, V862]
Exit stack: [V12, 0x15b, V862]

================================

Block 0x977
[0x977:0x97c]
---
Predecessors: [0x3cb]
Successors: [0x15b]
---
0x977 JUMPDEST
0x978 PUSH1 0x4
0x97a SLOAD
0x97b DUP2
0x97c JUMP
---
0x977: JUMPDEST 
0x978: V863 = 0x4
0x97a: V864 = S[0x4]
0x97c: JUMP 0x15b
---
Entry stack: [V12, 0x15b]
Stack pops: 1
Stack additions: [S0, V864]
Exit stack: [V12, 0x15b, V864]

================================

Block 0x97d
[0x97d:0x986]
---
Predecessors: [0x3ed, 0x5b0, 0x763]
Successors: [0x594]
---
0x97d JUMPDEST
0x97e PUSH1 0x0
0x980 PUSH2 0x987
0x983 PUSH2 0x594
0x986 JUMP
---
0x97d: JUMPDEST 
0x97e: V865 = 0x0
0x980: V866 = 0x987
0x983: V867 = 0x594
0x986: JUMP 0x594
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x1a9, 0x5b8, 0x76d}]
Stack pops: 0
Stack additions: [0x0, 0x987]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x1a9, 0x5b8, 0x76d}, 0x0, 0x987]

================================

Block 0x987
[0x987:0x98b]
---
Predecessors: [0xff, 0x42a, 0x5a7, 0x934, 0x98c]
Successors: [0x98c]
---
0x987 JUMPDEST
0x988 TIMESTAMP
0x989 GT
0x98a SWAP1
0x98b POP
---
0x987: JUMPDEST 
0x988: V868 = TIMESTAMP
0x989: V869 = GT V868 S0
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V869]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V869]

================================

Block 0x98c
[0x98c:0x98e]
---
Predecessors: [0x987]
Successors: [0x101, 0x15b, 0x1a9, 0x5b8, 0x76d, 0x77a, 0x82b, 0x832, 0x840, 0x845, 0x987]
---
0x98c JUMPDEST
0x98d SWAP1
0x98e JUMP
---
0x98c: JUMPDEST 
0x98e: JUMP S1
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V869]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V869]

================================

Block 0x98f
[0x98f:0xa30]
---
Predecessors: [0x682]
Successors: [0xa31]
---
0x98f JUMPDEST
0x990 PUSH1 0x10
0x992 SLOAD
0x993 PUSH1 0xe
0x995 SLOAD
0x996 PUSH1 0x3
0x998 SLOAD
0x999 PUSH1 0xf
0x99b SLOAD
0x99c PUSH1 0x11
0x99e SLOAD
0x99f PUSH1 0x12
0x9a1 SLOAD
0x9a2 PUSH1 0x13
0x9a4 SLOAD
0x9a5 PUSH1 0x14
0x9a7 SLOAD
0x9a8 PUSH1 0x40
0x9aa DUP1
0x9ab MLOAD
0x9ac TIMESTAMP
0x9ad DUP2
0x9ae MSTORE
0x9af PUSH1 0x20
0x9b1 DUP2
0x9b2 ADD
0x9b3 SWAP7
0x9b4 SWAP1
0x9b5 SWAP7
0x9b6 MSTORE
0x9b7 DUP6
0x9b8 DUP2
0x9b9 ADD
0x9ba SWAP5
0x9bb SWAP1
0x9bc SWAP5
0x9bd MSTORE
0x9be PUSH1 0x60
0x9c0 DUP6
0x9c1 ADD
0x9c2 SWAP3
0x9c3 SWAP1
0x9c4 SWAP3
0x9c5 MSTORE
0x9c6 PUSH1 0x80
0x9c8 DUP5
0x9c9 ADD
0x9ca MSTORE
0x9cb PUSH1 0xa0
0x9cd DUP4
0x9ce ADD
0x9cf MSTORE
0x9d0 MLOAD
0x9d1 PUSH1 0x1
0x9d3 PUSH1 0xa0
0x9d5 PUSH1 0x2
0x9d7 EXP
0x9d8 SUB
0x9d9 SWAP5
0x9da DUP6
0x9db AND
0x9dc SWAP5
0x9dd SWAP4
0x9de SWAP1
0x9df SWAP4
0x9e0 AND
0x9e1 SWAP3
0x9e2 PUSH32 0x41aabbeea2402f6cbb46d47cc0af89ff932802fbc090e45d2078df7cd379b5af
0xa03 SWAP2
0xa04 DUP2
0xa05 SWAP1
0xa06 SUB
0xa07 PUSH1 0xc0
0xa09 ADD
0xa0a SWAP1
0xa0b LOG4
0xa0c PUSH1 0x3
0xa0e DUP1
0xa0f SLOAD
0xa10 PUSH1 0x1
0xa12 ADD
0xa13 SWAP1
0xa14 DUP2
0xa15 SWAP1
0xa16 SSTORE
0xa17 TIMESTAMP
0xa18 PUSH1 0x4
0xa1a SSTORE
0xa1b NUMBER
0xa1c PUSH1 0x5
0xa1e DUP2
0xa1f SWAP1
0xa20 SSTORE
0xa21 PUSH1 0x0
0xa23 SWAP2
0xa24 DUP3
0xa25 MSTORE
0xa26 PUSH1 0x15
0xa28 PUSH1 0x20
0xa2a MSTORE
0xa2b PUSH1 0x40
0xa2d SWAP1
0xa2e SWAP2
0xa2f SHA3
0xa30 SSTORE
---
0x98f: JUMPDEST 
0x990: V870 = 0x10
0x992: V871 = S[0x10]
0x993: V872 = 0xe
0x995: V873 = S[0xe]
0x996: V874 = 0x3
0x998: V875 = S[0x3]
0x999: V876 = 0xf
0x99b: V877 = S[0xf]
0x99c: V878 = 0x11
0x99e: V879 = S[0x11]
0x99f: V880 = 0x12
0x9a1: V881 = S[0x12]
0x9a2: V882 = 0x13
0x9a4: V883 = S[0x13]
0x9a5: V884 = 0x14
0x9a7: V885 = S[0x14]
0x9a8: V886 = 0x40
0x9ab: V887 = M[0x40]
0x9ac: V888 = TIMESTAMP
0x9ae: M[V887] = V888
0x9af: V889 = 0x20
0x9b2: V890 = ADD V887 0x20
0x9b6: M[V890] = V877
0x9b9: V891 = ADD 0x40 V887
0x9bd: M[V891] = V879
0x9be: V892 = 0x60
0x9c1: V893 = ADD V887 0x60
0x9c5: M[V893] = V881
0x9c6: V894 = 0x80
0x9c9: V895 = ADD V887 0x80
0x9ca: M[V895] = V883
0x9cb: V896 = 0xa0
0x9ce: V897 = ADD V887 0xa0
0x9cf: M[V897] = V885
0x9d0: V898 = M[0x40]
0x9d1: V899 = 0x1
0x9d3: V900 = 0xa0
0x9d5: V901 = 0x2
0x9d7: V902 = EXP 0x2 0xa0
0x9d8: V903 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9db: V904 = AND 0xffffffffffffffffffffffffffffffffffffffff V871
0x9e0: V905 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0x9e2: V906 = 0x41aabbeea2402f6cbb46d47cc0af89ff932802fbc090e45d2078df7cd379b5af
0xa06: V907 = SUB V887 V898
0xa07: V908 = 0xc0
0xa09: V909 = ADD 0xc0 V907
0xa0b: LOG V898 V909 0x41aabbeea2402f6cbb46d47cc0af89ff932802fbc090e45d2078df7cd379b5af V875 V905 V904
0xa0c: V910 = 0x3
0xa0f: V911 = S[0x3]
0xa10: V912 = 0x1
0xa12: V913 = ADD 0x1 V911
0xa16: S[0x3] = V913
0xa17: V914 = TIMESTAMP
0xa18: V915 = 0x4
0xa1a: S[0x4] = V914
0xa1b: V916 = NUMBER
0xa1c: V917 = 0x5
0xa20: S[0x5] = V916
0xa21: V918 = 0x0
0xa25: M[0x0] = V913
0xa26: V919 = 0x15
0xa28: V920 = 0x20
0xa2a: M[0x20] = 0x15
0xa2b: V921 = 0x40
0xa2f: V922 = SHA3 0x0 0x40
0xa30: S[V922] = V916
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xff]

================================

Block 0xa31
[0xa31:0xa32]
---
Predecessors: [0x98f]
Successors: [0xff]
---
0xa31 JUMPDEST
0xa32 JUMP
---
0xa31: JUMPDEST 
0xa32: JUMP 0xff
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xff]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa33
[0xa33:0xa3f]
---
Predecessors: [0x7e4, 0x81d]
Successors: [0x41e, 0xa40]
---
0xa33 JUMPDEST
0xa34 PUSH1 0x0
0xa36 DUP3
0xa37 DUP3
0xa38 MUL
0xa39 DUP4
0xa3a ISZERO
0xa3b DUP1
0xa3c PUSH2 0x41e
0xa3f JUMPI
---
0xa33: JUMPDEST 
0xa34: V923 = 0x0
0xa38: V924 = MUL {0x63, 0x8ac7230489e80000} S1
0xa3a: V925 = ISZERO S1
0xa3c: V926 = 0x41e
0xa3f: JUMPI 0x41e V925
---
Entry stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x63, 0x8ac7230489e80000}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V924, V925]
Exit stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x63, 0x8ac7230489e80000}, 0x0, V924, V925]

================================

Block 0xa40
[0xa40:0xa4a]
---
Predecessors: [0xa33]
Successors: [0xa4b, 0xa4c]
---
0xa40 POP
0xa41 DUP3
0xa42 DUP5
0xa43 DUP3
0xa44 DUP2
0xa45 ISZERO
0xa46 ISZERO
0xa47 PUSH2 0xa4c
0xa4a JUMPI
---
0xa45: V927 = ISZERO S4
0xa46: V928 = ISZERO V927
0xa47: V929 = 0xa4c
0xa4a: JUMPI 0xa4c V928
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x63, 0x8ac7230489e80000}, 0x0, V924, V925]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x63, 0x8ac7230489e80000}, 0x0, V924, {0x63, 0x8ac7230489e80000}, S4, V924]

================================

Block 0xa4b
[0xa4b:0xa4b]
---
Predecessors: [0xa40]
Successors: []
---
0xa4b INVALID
---
0xa4b: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x63, 0x8ac7230489e80000}, 0x0, S3, {0x63, 0x8ac7230489e80000}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x63, 0x8ac7230489e80000}, 0x0, S3, {0x63, 0x8ac7230489e80000}, S1, S0]

================================

Block 0xa4c
[0xa4c:0xa4e]
---
Predecessors: [0xa40]
Successors: [0xa4f]
---
0xa4c JUMPDEST
0xa4d DIV
0xa4e EQ
---
0xa4c: JUMPDEST 
0xa4d: V930 = DIV S0 S1
0xa4e: V931 = EQ V930 {0x63, 0x8ac7230489e80000}
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x63, 0x8ac7230489e80000}, 0x0, S3, {0x63, 0x8ac7230489e80000}, S1, S0]
Stack pops: 3
Stack additions: [V931]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x63, 0x8ac7230489e80000}, 0x0, S3, V931]

================================

Block 0xa4f
[0xa4f:0xa55]
---
Predecessors: [0xa4c]
Successors: [0x426, 0xa56]
---
0xa4f JUMPDEST
0xa50 ISZERO
0xa51 ISZERO
0xa52 PUSH2 0x426
0xa55 JUMPI
---
0xa4f: JUMPDEST 
0xa50: V932 = ISZERO V931
0xa51: V933 = ISZERO V932
0xa52: V934 = 0x426
0xa55: JUMPI 0x426 V933
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x63, 0x8ac7230489e80000}, 0x0, S1, V931]
Stack pops: 1
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x63, 0x8ac7230489e80000}, 0x0, S1]

================================

Block 0xa56
[0xa56:0xa56]
---
Predecessors: [0xa4f]
Successors: []
---
0xa56 INVALID
---
0xa56: INVALID 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x63, 0x8ac7230489e80000}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x63, 0x8ac7230489e80000}, 0x0, S0]

================================

Block 0xa57
[0xa57:0xa5a]
---
Predecessors: []
Successors: [0xa5b]
---
0xa57 JUMPDEST
0xa58 DUP1
0xa59 SWAP2
0xa5a POP
---
0xa57: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xa5b
[0xa5b:0xa61]
---
Predecessors: [0xa57]
Successors: []
Has unresolved jump.
---
0xa5b JUMPDEST
0xa5c POP
0xa5d SWAP3
0xa5e SWAP2
0xa5f POP
0xa60 POP
0xa61 JUMP
---
0xa5b: JUMPDEST 
0xa61: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xa62
[0xa62:0xa6c]
---
Predecessors: [0x82b, 0x832]
Successors: [0xa6d, 0xa6e]
---
0xa62 JUMPDEST
0xa63 PUSH1 0x0
0xa65 DUP1
0xa66 DUP1
0xa67 DUP4
0xa68 GT
0xa69 PUSH2 0xa6e
0xa6c JUMPI
---
0xa62: JUMPDEST 
0xa63: V935 = 0x0
0xa68: V936 = GT {0x64, 0x8ac7230489e80000} 0x0
0xa69: V937 = 0xa6e
0xa6c: JUMPI 0xa6e V936
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x64, 0x8ac7230489e80000}]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x64, 0x8ac7230489e80000}, 0x0, 0x0]

================================

Block 0xa6d
[0xa6d:0xa6d]
---
Predecessors: [0xa62]
Successors: []
---
0xa6d INVALID
---
0xa6d: INVALID 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64, 0x8ac7230489e80000}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64, 0x8ac7230489e80000}, 0x0, 0x0]

================================

Block 0xa6e
[0xa6e:0xa77]
---
Predecessors: [0xa62]
Successors: [0xa78, 0xa79]
---
0xa6e JUMPDEST
0xa6f DUP3
0xa70 DUP5
0xa71 DUP2
0xa72 ISZERO
0xa73 ISZERO
0xa74 PUSH2 0xa79
0xa77 JUMPI
---
0xa6e: JUMPDEST 
0xa72: V938 = ISZERO {0x64, 0x8ac7230489e80000}
0xa73: V939 = ISZERO V938
0xa74: V940 = 0xa79
0xa77: JUMPI 0xa79 V939
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64, 0x8ac7230489e80000}, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, S3]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64, 0x8ac7230489e80000}, 0x0, 0x0, {0x64, 0x8ac7230489e80000}, S3]

================================

Block 0xa78
[0xa78:0xa78]
---
Predecessors: [0xa6e]
Successors: []
---
0xa78 INVALID
---
0xa78: INVALID 
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8ac7230489e80000}, 0x0, 0x0, {0x64, 0x8ac7230489e80000}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8ac7230489e80000}, 0x0, 0x0, {0x64, 0x8ac7230489e80000}, S0]

================================

Block 0xa79
[0xa79:0xa85]
---
Predecessors: [0xa6e]
Successors: [0xa86, 0xa87]
---
0xa79 JUMPDEST
0xa7a DIV
0xa7b SWAP1
0xa7c POP
0xa7d DUP3
0xa7e DUP5
0xa7f DUP2
0xa80 ISZERO
0xa81 ISZERO
0xa82 PUSH2 0xa87
0xa85 JUMPI
---
0xa79: JUMPDEST 
0xa7a: V941 = DIV S0 {0x64, 0x8ac7230489e80000}
0xa80: V942 = ISZERO {0x64, 0x8ac7230489e80000}
0xa81: V943 = ISZERO V942
0xa82: V944 = 0xa87
0xa85: JUMPI 0xa87 V943
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8ac7230489e80000}, 0x0, 0x0, {0x64, 0x8ac7230489e80000}, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V941, S4, S5]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8ac7230489e80000}, 0x0, V941, {0x64, 0x8ac7230489e80000}, S5]

================================

Block 0xa86
[0xa86:0xa86]
---
Predecessors: [0xa79]
Successors: []
---
0xa86 INVALID
---
0xa86: INVALID 
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8ac7230489e80000}, 0x0, V941, {0x64, 0x8ac7230489e80000}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8ac7230489e80000}, 0x0, V941, {0x64, 0x8ac7230489e80000}, S0]

================================

Block 0xa87
[0xa87:0xa94]
---
Predecessors: [0xa79]
Successors: [0x426, 0xa95]
---
0xa87 JUMPDEST
0xa88 MOD
0xa89 DUP2
0xa8a DUP5
0xa8b MUL
0xa8c ADD
0xa8d DUP5
0xa8e EQ
0xa8f ISZERO
0xa90 ISZERO
0xa91 PUSH2 0x426
0xa94 JUMPI
---
0xa87: JUMPDEST 
0xa88: V945 = MOD S0 {0x64, 0x8ac7230489e80000}
0xa8b: V946 = MUL {0x64, 0x8ac7230489e80000} V941
0xa8c: V947 = ADD V946 V945
0xa8e: V948 = EQ S5 V947
0xa8f: V949 = ISZERO V948
0xa90: V950 = ISZERO V949
0xa91: V951 = 0x426
0xa94: JUMPI 0x426 V950
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8ac7230489e80000}, 0x0, V941, {0x64, 0x8ac7230489e80000}, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8ac7230489e80000}, 0x0, V941]

================================

Block 0xa95
[0xa95:0xa95]
---
Predecessors: [0xa87]
Successors: []
---
0xa95 INVALID
---
0xa95: INVALID 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64, 0x8ac7230489e80000}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64, 0x8ac7230489e80000}, 0x0, S0]

================================

Block 0xa96
[0xa96:0xa99]
---
Predecessors: []
Successors: [0xa9a]
---
0xa96 JUMPDEST
0xa97 DUP1
0xa98 SWAP2
0xa99 POP
---
0xa96: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xa9a
[0xa9a:0xaf5]
---
Predecessors: [0xa96]
Successors: []
---
0xa9a JUMPDEST
0xa9b POP
0xa9c SWAP3
0xa9d SWAP2
0xa9e POP
0xa9f POP
0xaa0 JUMP
0xaa1 STOP
0xaa2 PUSH32 0xcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65a1
0xac3 PUSH6 0x627a7a723058
0xaca SHA3
0xacb MISSING 0x2c
0xacc TIMESTAMP
0xacd DUP15
0xace MISSING 0xcb
0xacf SWAP11
0xad0 RETURNDATACOPY
0xad1 MISSING 0x2c
0xad2 DUP1
0xad3 MISSING 0xc4
0xad4 MSTORE
0xad5 TIMESTAMP
0xad6 MISSING 0xf
0xad7 SMOD
0xad8 MISSING 0xc5
0xad9 AND
0xada MISSING 0xeb
0xadb DUP7
0xadc PUSH25 0x17ad6926cbee3140e73b52222efe0029
---
0xa9a: JUMPDEST 
0xaa0: JUMP S4
0xaa1: STOP 
0xaa2: V952 = 0xcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65a1
0xac3: V953 = 0x627a7a723058
0xaca: V954 = SHA3 0x627a7a723058 0xcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65a1
0xacb: MISSING 0x2c
0xacc: V955 = TIMESTAMP
0xace: MISSING 0xcb
0xad0: RETURNDATACOPY S11 S1 S2
0xad1: MISSING 0x2c
0xad3: MISSING 0xc4
0xad4: M[S0] = S1
0xad5: V956 = TIMESTAMP
0xad6: MISSING 0xf
0xad7: V957 = SMOD S0 S1
0xad8: MISSING 0xc5
0xad9: V958 = AND S0 S1
0xada: MISSING 0xeb
0xadc: V959 = 0x17ad6926cbee3140e73b52222efe0029
---
Entry stack: [S1, S0]
Stack pops: 1561
Stack additions: [0x17ad6926cbee3140e73b52222efe0029, S6, S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x103
Exit block: 0x101
Body: 0x101, 0x103, 0x10a, 0x10b, 0x431, 0x448, 0x44d, 0x469, 0x46a

Function 1:
Public function signature: 0x1c31f710
Entry block: 0x121
Exit block: 0x101
Body: 0x101, 0x121, 0x128, 0x129, 0x46d, 0x484, 0x489, 0x49b, 0x4a0, 0x4bc, 0x4bd

Function 2:
Public function signature: 0x26b387bb
Entry block: 0x13f
Exit block: 0x15b
Body: 0x13f, 0x146, 0x147, 0x15b, 0x4c0

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x16d
Exit block: 0x17d
Body: 0x16d, 0x174, 0x175, 0x17d, 0x4d2

Function 4:
Public function signature: 0x3ccfd60b
Entry block: 0x199
Exit block: 0x1a9
Body: 0x199, 0x1a0, 0x1a1, 0x1a9, 0x4e1, 0x503, 0x53c, 0x55d, 0x58b, 0x590

Function 5:
Public function signature: 0x4b449cba
Entry block: 0x1bd
Exit block: 0x1c4
Body: 0x15b, 0x1bd, 0x1c4, 0x1c5

Function 6:
Public function signature: 0x6255ca28
Entry block: 0x1df
Exit block: 0x15b
Body: 0x15b, 0x1df, 0x1e6, 0x1e7, 0x5aa

Function 7:
Public function signature: 0x7d350453
Entry block: 0x201
Exit block: 0x101
Body: 0x101, 0x201, 0x208, 0x209

Function 8:
Public function signature: 0x853a1b90
Entry block: 0x213
Exit block: 0x223
Body: 0x213, 0x21a, 0x21b, 0x223, 0x690

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x26a
Exit block: 0x17d
Body: 0x17d, 0x26a, 0x271, 0x272, 0x6b8

Function 10:
Public function signature: 0x9af6549a
Entry block: 0x296
Exit block: 0x1a9
Body: 0x1a9, 0x296, 0x29d, 0x29e, 0x58b, 0x590, 0x6c7, 0x6d6, 0x70a, 0x717, 0x748, 0x74d

Function 11:
Public function signature: 0xa7a38f0b
Entry block: 0x2ba
Exit block: 0x15b
Body: 0x15b, 0x2ba, 0x2c1, 0x2c2, 0x751

Function 12:
Public function signature: 0xaa7a9e79
Entry block: 0x2df
Exit block: 0xa56
Body: 0x2df, 0x763, 0x76d, 0xa56, 0xa95

Function 13:
Public function signature: 0xb668e05d
Entry block: 0x306
Exit block: 0x223
Body: 0x223, 0x306, 0x30d, 0x30e, 0x93d

Function 14:
Public function signature: 0xb894f3f1
Entry block: 0x35d
Exit block: 0x15b
Body: 0x15b, 0x35d, 0x364, 0x365, 0x965

Function 15:
Public function signature: 0xd074a38d
Entry block: 0x37f
Exit block: 0x15b
Body: 0x15b, 0x37f, 0x386, 0x387, 0x96b

Function 16:
Public function signature: 0xe651aca4
Entry block: 0x3a1
Exit block: 0x15b
Body: 0x15b, 0x3a1, 0x3a8, 0x3a9, 0x971

Function 17:
Public function signature: 0xeb54f9ec
Entry block: 0x3c3
Exit block: 0x15b
Body: 0x15b, 0x3c3, 0x3ca, 0x3cb, 0x977

Function 18:
Public function signature: 0xf283511f
Entry block: 0x3e5
Exit block: 0x3ec
Body: 0x1a9, 0x3e5, 0x3ec, 0x3ed

Function 19:
Public fallback function
Entry block: 0xeb
Exit block: 0xa95
Body: 0xeb, 0xef, 0xa95

Function 20:
Private function
Entry block: 0x97d
Exit block: 0x98c
Body: 0xfb, 0xff, 0x409, 0x419, 0x41e, 0x426, 0x42a, 0x5a4, 0x5a7, 0x682, 0x77a, 0x77b, 0x784, 0x7a7, 0x7c3, 0x7d2, 0x7e4, 0x81d, 0x82b, 0x832, 0x840, 0x845, 0x861, 0x934, 0x97d, 0x987, 0x98c, 0x98f, 0xa31, 0xa33, 0xa40, 0xa4c, 0xa4f, 0xa62, 0xa6e, 0xa79, 0xa87

Function 21:
Private function
Entry block: 0x5b0
Exit block: 0x98c
Body: 0xfb, 0xff, 0x409, 0x419, 0x41e, 0x426, 0x42a, 0x5a4, 0x5a7, 0x5b0, 0x5b8, 0x5c4, 0x682, 0x76d, 0x773, 0x77a, 0x77b, 0x784, 0x7a7, 0x7c3, 0x7d2, 0x7e4, 0x81d, 0x82b, 0x832, 0x840, 0x845, 0x861, 0x934, 0x987, 0x98c, 0x98f, 0xa31, 0xa33, 0xa40, 0xa4c, 0xa4f, 0xa62, 0xa6e, 0xa79, 0xa87

Function 22:
Private function
Entry block: 0x594
Exit block: 0x98c
Body: 0xfb, 0xff, 0x409, 0x419, 0x41e, 0x426, 0x42a, 0x594, 0x5a4, 0x5a7, 0x5b8, 0x5c4, 0x682, 0x76d, 0x773, 0x77a, 0x77b, 0x784, 0x7a7, 0x7c3, 0x7d2, 0x7e4, 0x81d, 0x82b, 0x832, 0x840, 0x845, 0x861, 0x934, 0x98f, 0xa31, 0xa33, 0xa40, 0xa4c, 0xa4f, 0xa62, 0xa6e, 0xa79, 0xa87

