Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x14e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x14e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x14e
0xa: JUMPI 0x14e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1e2]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1e2
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x1e2
0x24: JUMPI 0x1e2 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x26d]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x26d
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x26d
0x2f: JUMPI 0x26d V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x2a3]
---
0x30 DUP1
0x31 PUSH4 0xba12c83
0x36 EQ
0x37 PUSH2 0x2a3
0x3a JUMPI
---
0x31: V19 = 0xba12c83
0x36: V20 = EQ 0xba12c83 V12
0x37: V21 = 0x2a3
0x3a: JUMPI 0x2a3 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x2ca]
---
0x3b DUP1
0x3c PUSH4 0xe6d1de9
0x41 EQ
0x42 PUSH2 0x2ca
0x45 JUMPI
---
0x3c: V22 = 0xe6d1de9
0x41: V23 = EQ 0xe6d1de9 V12
0x42: V24 = 0x2ca
0x45: JUMPI 0x2ca V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2f9]
---
0x46 DUP1
0x47 PUSH4 0x18160ddd
0x4c EQ
0x4d PUSH2 0x2f9
0x50 JUMPI
---
0x47: V25 = 0x18160ddd
0x4c: V26 = EQ 0x18160ddd V12
0x4d: V27 = 0x2f9
0x50: JUMPI 0x2f9 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x31e]
---
0x51 DUP1
0x52 PUSH4 0x23385089
0x57 EQ
0x58 PUSH2 0x31e
0x5b JUMPI
---
0x52: V28 = 0x23385089
0x57: V29 = EQ 0x23385089 V12
0x58: V30 = 0x31e
0x5b: JUMPI 0x31e V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x348]
---
0x5c DUP1
0x5d PUSH4 0x23b872dd
0x62 EQ
0x63 PUSH2 0x348
0x66 JUMPI
---
0x5d: V31 = 0x23b872dd
0x62: V32 = EQ 0x23b872dd V12
0x63: V33 = 0x348
0x66: JUMPI 0x348 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x384]
---
0x67 DUP1
0x68 PUSH4 0x23de6651
0x6d EQ
0x6e PUSH2 0x384
0x71 JUMPI
---
0x68: V34 = 0x23de6651
0x6d: V35 = EQ 0x23de6651 V12
0x6e: V36 = 0x384
0x71: JUMPI 0x384 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x3ae]
---
0x72 DUP1
0x73 PUSH4 0x2d596330
0x78 EQ
0x79 PUSH2 0x3ae
0x7c JUMPI
---
0x73: V37 = 0x2d596330
0x78: V38 = EQ 0x2d596330 V12
0x79: V39 = 0x3ae
0x7c: JUMPI 0x3ae V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3dd]
---
0x7d DUP1
0x7e PUSH4 0x313ce567
0x83 EQ
0x84 PUSH2 0x3dd
0x87 JUMPI
---
0x7e: V40 = 0x313ce567
0x83: V41 = EQ 0x313ce567 V12
0x84: V42 = 0x3dd
0x87: JUMPI 0x3dd V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x406]
---
0x88 DUP1
0x89 PUSH4 0x4bfaf2e8
0x8e EQ
0x8f PUSH2 0x406
0x92 JUMPI
---
0x89: V43 = 0x4bfaf2e8
0x8e: V44 = EQ 0x4bfaf2e8 V12
0x8f: V45 = 0x406
0x92: JUMPI 0x406 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x42b]
---
0x93 DUP1
0x94 PUSH4 0x4dfe950d
0x99 EQ
0x9a PUSH2 0x42b
0x9d JUMPI
---
0x94: V46 = 0x4dfe950d
0x99: V47 = EQ 0x4dfe950d V12
0x9a: V48 = 0x42b
0x9d: JUMPI 0x42b V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x452]
---
0x9e DUP1
0x9f PUSH4 0x5b48684e
0xa4 EQ
0xa5 PUSH2 0x452
0xa8 JUMPI
---
0x9f: V49 = 0x5b48684e
0xa4: V50 = EQ 0x5b48684e V12
0xa5: V51 = 0x452
0xa8: JUMPI 0x452 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x479]
---
0xa9 DUP1
0xaa PUSH4 0x6a630ee7
0xaf EQ
0xb0 PUSH2 0x479
0xb3 JUMPI
---
0xaa: V52 = 0x6a630ee7
0xaf: V53 = EQ 0x6a630ee7 V12
0xb0: V54 = 0x479
0xb3: JUMPI 0x479 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x4fd]
---
0xb4 DUP1
0xb5 PUSH4 0x70a08231
0xba EQ
0xbb PUSH2 0x4fd
0xbe JUMPI
---
0xb5: V55 = 0x70a08231
0xba: V56 = EQ 0x70a08231 V12
0xbb: V57 = 0x4fd
0xbe: JUMPI 0x4fd V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x52e]
---
0xbf DUP1
0xc0 PUSH4 0x7b7054c8
0xc5 EQ
0xc6 PUSH2 0x52e
0xc9 JUMPI
---
0xc0: V58 = 0x7b7054c8
0xc5: V59 = EQ 0x7b7054c8 V12
0xc6: V60 = 0x52e
0xc9: JUMPI 0x52e V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x56b]
---
0xca DUP1
0xcb PUSH4 0x95d89b41
0xd0 EQ
0xd1 PUSH2 0x56b
0xd4 JUMPI
---
0xcb: V61 = 0x95d89b41
0xd0: V62 = EQ 0x95d89b41 V12
0xd1: V63 = 0x56b
0xd4: JUMPI 0x56b V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x5f6]
---
0xd5 DUP1
0xd6 PUSH4 0xa883fb90
0xdb EQ
0xdc PUSH2 0x5f6
0xdf JUMPI
---
0xd6: V64 = 0xa883fb90
0xdb: V65 = EQ 0xa883fb90 V12
0xdc: V66 = 0x5f6
0xdf: JUMPI 0x5f6 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x625]
---
0xe0 DUP1
0xe1 PUSH4 0xa9059cbb
0xe6 EQ
0xe7 PUSH2 0x625
0xea JUMPI
---
0xe1: V67 = 0xa9059cbb
0xe6: V68 = EQ 0xa9059cbb V12
0xe7: V69 = 0x625
0xea: JUMPI 0x625 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x65b]
---
0xeb DUP1
0xec PUSH4 0xac35caee
0xf1 EQ
0xf2 PUSH2 0x65b
0xf5 JUMPI
---
0xec: V70 = 0xac35caee
0xf1: V71 = EQ 0xac35caee V12
0xf2: V72 = 0x65b
0xf5: JUMPI 0x65b V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x6d4]
---
0xf6 DUP1
0xf7 PUSH4 0xb2b45df5
0xfc EQ
0xfd PUSH2 0x6d4
0x100 JUMPI
---
0xf7: V73 = 0xb2b45df5
0xfc: V74 = EQ 0xb2b45df5 V12
0xfd: V75 = 0x6d4
0x100: JUMPI 0x6d4 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x789]
---
0x101 DUP1
0x102 PUSH4 0xc915fc93
0x107 EQ
0x108 PUSH2 0x789
0x10b JUMPI
---
0x102: V76 = 0xc915fc93
0x107: V77 = EQ 0xc915fc93 V12
0x108: V78 = 0x789
0x10b: JUMPI 0x789 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x7bc]
---
0x10c DUP1
0x10d PUSH4 0xcb4e75bb
0x112 EQ
0x113 PUSH2 0x7bc
0x116 JUMPI
---
0x10d: V79 = 0xcb4e75bb
0x112: V80 = EQ 0xcb4e75bb V12
0x113: V81 = 0x7bc
0x116: JUMPI 0x7bc V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0x7e1]
---
0x117 DUP1
0x118 PUSH4 0xcfb51928
0x11d EQ
0x11e PUSH2 0x7e1
0x121 JUMPI
---
0x118: V82 = 0xcfb51928
0x11d: V83 = EQ 0xcfb51928 V12
0x11e: V84 = 0x7e1
0x121: JUMPI 0x7e1 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x117]
Successors: [0x12d, 0x844]
---
0x122 DUP1
0x123 PUSH4 0xd4eec5a6
0x128 EQ
0x129 PUSH2 0x844
0x12c JUMPI
---
0x123: V85 = 0xd4eec5a6
0x128: V86 = EQ 0xd4eec5a6 V12
0x129: V87 = 0x844
0x12c: JUMPI 0x844 V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x122]
Successors: [0x138, 0x86b]
---
0x12d DUP1
0x12e PUSH4 0xdd62ed3e
0x133 EQ
0x134 PUSH2 0x86b
0x137 JUMPI
---
0x12e: V88 = 0xdd62ed3e
0x133: V89 = EQ 0xdd62ed3e V12
0x134: V90 = 0x86b
0x137: JUMPI 0x86b V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x138
[0x138:0x142]
---
Predecessors: [0x12d]
Successors: [0x143, 0x8a2]
---
0x138 DUP1
0x139 PUSH4 0xec698a28
0x13e EQ
0x13f PUSH2 0x8a2
0x142 JUMPI
---
0x139: V91 = 0xec698a28
0x13e: V92 = EQ 0xec698a28 V12
0x13f: V93 = 0x8a2
0x142: JUMPI 0x8a2 V92
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14d]
---
Predecessors: [0x138]
Successors: [0x14e, 0x92d]
---
0x143 DUP1
0x144 PUSH4 0xfe8beb71
0x149 EQ
0x14a PUSH2 0x92d
0x14d JUMPI
---
0x144: V94 = 0xfe8beb71
0x149: V95 = EQ 0xfe8beb71 V12
0x14a: V96 = 0x92d
0x14d: JUMPI 0x92d V95
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x14e]
---
Predecessors: [0x0, 0x143]
Successors: [0x14f]
---
0x14e JUMPDEST
---
0x14e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14f
[0x14f:0x156]
---
Predecessors: [0x14e]
Successors: [0x968]
---
0x14f JUMPDEST
0x150 PUSH2 0x157
0x153 PUSH2 0x968
0x156 JUMP
---
0x14f: JUMPDEST 
0x150: V97 = 0x157
0x153: V98 = 0x968
0x156: JUMP 0x968
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x157]
Exit stack: [V12, 0x157]

================================

Block 0x157
[0x157:0x1c5]
---
Predecessors: [0x976]
Successors: [0x1c6, 0x1ca]
---
0x157 JUMPDEST
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 AND
0x161 PUSH4 0xf2d6e0ab
0x166 CALLVALUE
0x167 PUSH1 0x0
0x169 CALLDATASIZE
0x16a CALLER
0x16b PUSH1 0x40
0x16d MLOAD
0x16e PUSH1 0xe0
0x170 PUSH1 0x2
0x172 EXP
0x173 PUSH4 0xffffffff
0x178 DUP8
0x179 AND
0x17a MUL
0x17b DUP2
0x17c MSTORE
0x17d PUSH1 0x1
0x17f PUSH1 0xa0
0x181 PUSH1 0x2
0x183 EXP
0x184 SUB
0x185 DUP3
0x186 AND
0x187 PUSH1 0x24
0x189 DUP3
0x18a ADD
0x18b MSTORE
0x18c PUSH1 0x40
0x18e PUSH1 0x4
0x190 DUP3
0x191 ADD
0x192 SWAP1
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x44
0x197 DUP3
0x198 ADD
0x199 DUP5
0x19a SWAP1
0x19b MSTORE
0x19c SWAP1
0x19d DUP2
0x19e SWAP1
0x19f PUSH1 0x64
0x1a1 ADD
0x1a2 DUP6
0x1a3 DUP6
0x1a4 DUP1
0x1a5 DUP3
0x1a6 DUP5
0x1a7 CALLDATACOPY
0x1a8 DUP3
0x1a9 ADD
0x1aa SWAP2
0x1ab POP
0x1ac POP
0x1ad SWAP5
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 POP
0x1b3 PUSH1 0x0
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 DUP1
0x1b9 DUP4
0x1ba SUB
0x1bb DUP2
0x1bc DUP6
0x1bd DUP9
0x1be DUP1
0x1bf EXTCODESIZE
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 PUSH2 0x1ca
0x1c5 JUMPI
---
0x157: JUMPDEST 
0x158: V99 = 0x1
0x15a: V100 = 0xa0
0x15c: V101 = 0x2
0x15e: V102 = EXP 0x2 0xa0
0x15f: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x161: V105 = 0xf2d6e0ab
0x166: V106 = CALLVALUE
0x167: V107 = 0x0
0x169: V108 = CALLDATASIZE
0x16a: V109 = CALLER
0x16b: V110 = 0x40
0x16d: V111 = M[0x40]
0x16e: V112 = 0xe0
0x170: V113 = 0x2
0x172: V114 = EXP 0x2 0xe0
0x173: V115 = 0xffffffff
0x179: V116 = AND 0xf2d6e0ab 0xffffffff
0x17a: V117 = MUL 0xf2d6e0ab 0x100000000000000000000000000000000000000000000000000000000
0x17c: M[V111] = 0xf2d6e0ab00000000000000000000000000000000000000000000000000000000
0x17d: V118 = 0x1
0x17f: V119 = 0xa0
0x181: V120 = 0x2
0x183: V121 = EXP 0x2 0xa0
0x184: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V123 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x187: V124 = 0x24
0x18a: V125 = ADD V111 0x24
0x18b: M[V125] = V123
0x18c: V126 = 0x40
0x18e: V127 = 0x4
0x191: V128 = ADD V111 0x4
0x194: M[V128] = 0x40
0x195: V129 = 0x44
0x198: V130 = ADD V111 0x44
0x19b: M[V130] = V108
0x19f: V131 = 0x64
0x1a1: V132 = ADD 0x64 V111
0x1a7: CALLDATACOPY V132 0x0 V108
0x1a9: V133 = ADD V132 V108
0x1b3: V134 = 0x0
0x1b5: V135 = 0x40
0x1b7: V136 = M[0x40]
0x1ba: V137 = SUB V133 V136
0x1bf: V138 = EXTCODESIZE V104
0x1c0: V139 = ISZERO V138
0x1c1: V140 = ISZERO V139
0x1c2: V141 = 0x1ca
0x1c5: JUMPI 0x1ca V140
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V104, 0xf2d6e0ab, V106, V133, 0x0, V136, V137, V136, V106, V104]
Exit stack: [S7, S6, S5, S4, S3, S2, S1, V104, 0xf2d6e0ab, V106, V133, 0x0, V136, V137, V136, V106, V104]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0x157]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
---
0x1c6: V142 = 0x0
0x1c9: REVERT 0x0 0x0
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, V104, 0xf2d6e0ab, V106, V133, 0x0, V136, V137, V136, V106, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, V104, 0xf2d6e0ab, V106, V133, 0x0, V136, V137, V136, V106, V104]

================================

Block 0x1ca
[0x1ca:0x1d6]
---
Predecessors: [0x157]
Successors: [0x1d7, 0x1db]
---
0x1ca JUMPDEST
0x1cb PUSH2 0x25ee
0x1ce GAS
0x1cf SUB
0x1d0 CALL
0x1d1 ISZERO
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V143 = 0x25ee
0x1ce: V144 = GAS
0x1cf: V145 = SUB V144 0x25ee
0x1d0: V146 = CALL V145 V104 V106 V136 V137 V136 0x0
0x1d1: V147 = ISZERO V146
0x1d2: V148 = ISZERO V147
0x1d3: V149 = 0x1db
0x1d6: JUMPI 0x1db V148
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, V104, 0xf2d6e0ab, V106, V133, 0x0, V136, V137, V136, V106, V104]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, V104, 0xf2d6e0ab, V106, V133]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V150 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, V104, 0xf2d6e0ab, V106, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, V104, 0xf2d6e0ab, V106, V133]

================================

Block 0x1db
[0x1db:0x1df]
---
Predecessors: [0x1ca]
Successors: [0x1e0]
---
0x1db JUMPDEST
0x1dc POP
0x1dd POP
0x1de POP
0x1df POP
---
0x1db: JUMPDEST 
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, V104, 0xf2d6e0ab, V106, V133]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4]

================================

Block 0x1e0
[0x1e0:0x1e1]
---
Predecessors: [0x1db, 0xc12, 0xd3e]
Successors: []
---
0x1e0 JUMPDEST
0x1e1 STOP
---
0x1e0: JUMPDEST 
0x1e1: STOP 
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, S0]

================================

Block 0x1e2
[0x1e2:0x1e8]
---
Predecessors: [0xb]
Successors: [0x1e9, 0x1ed]
---
0x1e2 JUMPDEST
0x1e3 CALLVALUE
0x1e4 ISZERO
0x1e5 PUSH2 0x1ed
0x1e8 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V151 = CALLVALUE
0x1e4: V152 = ISZERO V151
0x1e5: V153 = 0x1ed
0x1e8: JUMPI 0x1ed V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e9
[0x1e9:0x1ec]
---
Predecessors: [0x1e2]
Successors: []
---
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec REVERT
---
0x1e9: V154 = 0x0
0x1ec: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ed
[0x1ed:0x1f4]
---
Predecessors: [0x1e2]
Successors: [0x979]
---
0x1ed JUMPDEST
0x1ee PUSH2 0x1f5
0x1f1 PUSH2 0x979
0x1f4 JUMP
---
0x1ed: JUMPDEST 
0x1ee: V155 = 0x1f5
0x1f1: V156 = 0x979
0x1f4: JUMP 0x979
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f5]
Exit stack: [V12, 0x1f5]

================================

Block 0x1f5
[0x1f5:0x218]
---
Predecessors: [0xa0f]
Successors: [0x219]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x40
0x1f8 MLOAD
0x1f9 PUSH1 0x20
0x1fb DUP1
0x1fc DUP3
0x1fd MSTORE
0x1fe DUP2
0x1ff SWAP1
0x200 DUP2
0x201 ADD
0x202 DUP4
0x203 DUP2
0x204 DUP2
0x205 MLOAD
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x20
0x20a ADD
0x20b SWAP2
0x20c POP
0x20d DUP1
0x20e MLOAD
0x20f SWAP1
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP1
0x214 DUP1
0x215 DUP4
0x216 DUP4
0x217 PUSH1 0x0
---
0x1f5: JUMPDEST 
0x1f6: V157 = 0x40
0x1f8: V158 = M[0x40]
0x1f9: V159 = 0x20
0x1fd: M[V158] = 0x20
0x201: V160 = ADD V158 0x20
0x205: V161 = M[S0]
0x207: M[V160] = V161
0x208: V162 = 0x20
0x20a: V163 = ADD 0x20 V160
0x20e: V164 = M[S0]
0x210: V165 = 0x20
0x212: V166 = ADD 0x20 S0
0x217: V167 = 0x0
---
Entry stack: [V12, 0x1f5, S0]
Stack pops: 1
Stack additions: [S0, V158, V158, V163, V166, V164, V164, V163, V166, 0x0]
Exit stack: [V12, 0x1f5, S0, V158, V158, V163, V166, V164, V164, V163, V166, 0x0]

================================

Block 0x219
[0x219:0x221]
---
Predecessors: [0x1f5, 0x22a, 0x5b3]
Successors: [0x222, 0x232]
---
0x219 JUMPDEST
0x21a DUP4
0x21b DUP2
0x21c LT
0x21d ISZERO
0x21e PUSH2 0x232
0x221 JUMPI
---
0x219: JUMPDEST 
0x21c: V168 = LT S0 S3
0x21d: V169 = ISZERO V168
0x21e: V170 = 0x232
0x221: JUMPI 0x232 V169
---
Entry stack: [V12, 0x1f5, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x1f5, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x222
[0x222:0x229]
---
Predecessors: [0x219]
Successors: [0x22a]
---
0x222 DUP1
0x223 DUP3
0x224 ADD
0x225 MLOAD
0x226 DUP2
0x227 DUP5
0x228 ADD
0x229 MSTORE
---
0x224: V171 = ADD S1 S0
0x225: V172 = M[V171]
0x228: V173 = ADD S2 S0
0x229: M[V173] = V172
---
Entry stack: [V12, 0x1f5, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x1f5, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x22a
[0x22a:0x231]
---
Predecessors: [0x222]
Successors: [0x219]
---
0x22a JUMPDEST
0x22b PUSH1 0x20
0x22d ADD
0x22e PUSH2 0x219
0x231 JUMP
---
0x22a: JUMPDEST 
0x22b: V174 = 0x20
0x22d: V175 = ADD 0x20 S0
0x22e: V176 = 0x219
0x231: JUMP 0x219
---
Entry stack: [V12, 0x1f5, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V175]
Exit stack: [V12, 0x1f5, S9, S8, S7, S6, S5, S4, S3, S2, S1, V175]

================================

Block 0x232
[0x232:0x245]
---
Predecessors: [0x219, 0x5a2]
Successors: [0x246, 0x25f]
---
0x232 JUMPDEST
0x233 POP
0x234 POP
0x235 POP
0x236 POP
0x237 SWAP1
0x238 POP
0x239 SWAP1
0x23a DUP2
0x23b ADD
0x23c SWAP1
0x23d PUSH1 0x1f
0x23f AND
0x240 DUP1
0x241 ISZERO
0x242 PUSH2 0x25f
0x245 JUMPI
---
0x232: JUMPDEST 
0x23b: V177 = ADD S4 S6
0x23d: V178 = 0x1f
0x23f: V179 = AND 0x1f S4
0x241: V180 = ISZERO V179
0x242: V181 = 0x25f
0x245: JUMPI 0x25f V180
---
Entry stack: [V12, 0x1f5, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V177, V179]
Exit stack: [V12, 0x1f5, S9, S8, S7, V177, V179]

================================

Block 0x246
[0x246:0x25e]
---
Predecessors: [0x232]
Successors: [0x25f]
---
0x246 DUP1
0x247 DUP3
0x248 SUB
0x249 DUP1
0x24a MLOAD
0x24b PUSH1 0x1
0x24d DUP4
0x24e PUSH1 0x20
0x250 SUB
0x251 PUSH2 0x100
0x254 EXP
0x255 SUB
0x256 NOT
0x257 AND
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x20
0x25c ADD
0x25d SWAP2
0x25e POP
---
0x248: V182 = SUB V177 V179
0x24a: V183 = M[V182]
0x24b: V184 = 0x1
0x24e: V185 = 0x20
0x250: V186 = SUB 0x20 V179
0x251: V187 = 0x100
0x254: V188 = EXP 0x100 V186
0x255: V189 = SUB V188 0x1
0x256: V190 = NOT V189
0x257: V191 = AND V190 V183
0x259: M[V182] = V191
0x25a: V192 = 0x20
0x25c: V193 = ADD 0x20 V182
---
Entry stack: [V12, 0x1f5, S4, S3, S2, V177, V179]
Stack pops: 2
Stack additions: [V193, S0]
Exit stack: [V12, 0x1f5, S4, S3, S2, V193, V179]

================================

Block 0x25f
[0x25f:0x26c]
---
Predecessors: [0x232, 0x246, 0x5bb]
Successors: []
---
0x25f JUMPDEST
0x260 POP
0x261 SWAP3
0x262 POP
0x263 POP
0x264 POP
0x265 PUSH1 0x40
0x267 MLOAD
0x268 DUP1
0x269 SWAP2
0x26a SUB
0x26b SWAP1
0x26c RETURN
---
0x25f: JUMPDEST 
0x265: V194 = 0x40
0x267: V195 = M[0x40]
0x26a: V196 = SUB S1 V195
0x26c: RETURN V195 V196
---
Entry stack: [V12, 0x1f5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x1f5]

================================

Block 0x26d
[0x26d:0x273]
---
Predecessors: [0x25]
Successors: [0x274, 0x278]
---
0x26d JUMPDEST
0x26e CALLVALUE
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x26d: JUMPDEST 
0x26e: V197 = CALLVALUE
0x26f: V198 = ISZERO V197
0x270: V199 = 0x278
0x273: JUMPI 0x278 V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x26d]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V200 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x278
[0x278:0x28e]
---
Predecessors: [0x26d]
Successors: [0xa17]
---
0x278 JUMPDEST
0x279 PUSH2 0x28f
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 PUSH1 0x4
0x286 CALLDATALOAD
0x287 AND
0x288 PUSH1 0x24
0x28a CALLDATALOAD
0x28b PUSH2 0xa17
0x28e JUMP
---
0x278: JUMPDEST 
0x279: V201 = 0x28f
0x27c: V202 = 0x1
0x27e: V203 = 0xa0
0x280: V204 = 0x2
0x282: V205 = EXP 0x2 0xa0
0x283: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V207 = 0x4
0x286: V208 = CALLDATALOAD 0x4
0x287: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x288: V210 = 0x24
0x28a: V211 = CALLDATALOAD 0x24
0x28b: V212 = 0xa17
0x28e: JUMP 0xa17
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V209, V211]
Exit stack: [V12, 0x28f, V209, V211]

================================

Block 0x28f
[0x28f:0x2a2]
---
Predecessors: [0x976, 0xabf, 0xb27, 0xcd6, 0xe8b, 0xeb7, 0xff0, 0x107c, 0x1144, 0x1432, 0x14aa, 0x1685, 0x17fc, 0x187e]
Successors: []
---
0x28f JUMPDEST
0x290 PUSH1 0x40
0x292 MLOAD
0x293 SWAP1
0x294 ISZERO
0x295 ISZERO
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x28f: JUMPDEST 
0x290: V213 = 0x40
0x292: V214 = M[0x40]
0x294: V215 = ISZERO S0
0x295: V216 = ISZERO V215
0x297: M[V214] = V216
0x298: V217 = 0x20
0x29a: V218 = ADD 0x20 V214
0x29b: V219 = 0x40
0x29d: V220 = M[0x40]
0x2a0: V221 = SUB V218 V220
0x2a2: RETURN V220 V221
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2a3
[0x2a3:0x2a9]
---
Predecessors: [0x30]
Successors: [0x2aa, 0x2ae]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V222 = CALLVALUE
0x2a5: V223 = ISZERO V222
0x2a6: V224 = 0x2ae
0x2a9: JUMPI 0x2ae V223
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x2a3]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V225 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ae
[0x2ae:0x2b5]
---
Predecessors: [0x2a3]
Successors: [0xac5]
---
0x2ae JUMPDEST
0x2af PUSH2 0x28f
0x2b2 PUSH2 0xac5
0x2b5 JUMP
---
0x2ae: JUMPDEST 
0x2af: V226 = 0x28f
0x2b2: V227 = 0xac5
0x2b5: JUMP 0xac5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f]
Exit stack: [V12, 0x28f]

================================

Block 0x2b6
[0x2b6:0x2c9]
---
Predecessors: []
Successors: []
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba SWAP1
0x2bb ISZERO
0x2bc ISZERO
0x2bd DUP2
0x2be MSTORE
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 PUSH1 0x40
0x2c4 MLOAD
0x2c5 DUP1
0x2c6 SWAP2
0x2c7 SUB
0x2c8 SWAP1
0x2c9 RETURN
---
0x2b6: JUMPDEST 
0x2b7: V228 = 0x40
0x2b9: V229 = M[0x40]
0x2bb: V230 = ISZERO S0
0x2bc: V231 = ISZERO V230
0x2be: M[V229] = V231
0x2bf: V232 = 0x20
0x2c1: V233 = ADD 0x20 V229
0x2c2: V234 = 0x40
0x2c4: V235 = M[0x40]
0x2c7: V236 = SUB V233 V235
0x2c9: RETURN V235 V236
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ca
[0x2ca:0x2d0]
---
Predecessors: [0x3b]
Successors: [0x2d1, 0x2d5]
---
0x2ca JUMPDEST
0x2cb CALLVALUE
0x2cc ISZERO
0x2cd PUSH2 0x2d5
0x2d0 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V237 = CALLVALUE
0x2cc: V238 = ISZERO V237
0x2cd: V239 = 0x2d5
0x2d0: JUMPI 0x2d5 V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d1
[0x2d1:0x2d4]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d1 PUSH1 0x0
0x2d3 DUP1
0x2d4 REVERT
---
0x2d1: V240 = 0x0
0x2d4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d5
[0x2d5:0x2dc]
---
Predecessors: [0x2ca]
Successors: [0xb2a]
---
0x2d5 JUMPDEST
0x2d6 PUSH2 0x2dd
0x2d9 PUSH2 0xb2a
0x2dc JUMP
---
0x2d5: JUMPDEST 
0x2d6: V241 = 0x2dd
0x2d9: V242 = 0xb2a
0x2dc: JUMP 0xb2a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2dd]
Exit stack: [V12, 0x2dd]

================================

Block 0x2dd
[0x2dd:0x2f8]
---
Predecessors: [0xb37, 0xd43, 0x11f7, 0x16e1]
Successors: []
---
0x2dd JUMPDEST
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 SWAP1
0x2ea SWAP2
0x2eb AND
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 ADD
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 DUP1
0x2f5 SWAP2
0x2f6 SUB
0x2f7 SWAP1
0x2f8 RETURN
---
0x2dd: JUMPDEST 
0x2de: V243 = 0x40
0x2e0: V244 = M[0x40]
0x2e1: V245 = 0x1
0x2e3: V246 = 0xa0
0x2e5: V247 = 0x2
0x2e7: V248 = EXP 0x2 0xa0
0x2e8: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V250 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: M[V244] = V250
0x2ee: V251 = 0x20
0x2f0: V252 = ADD 0x20 V244
0x2f1: V253 = 0x40
0x2f3: V254 = M[0x40]
0x2f6: V255 = SUB V252 V254
0x2f8: RETURN V254 V255
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2f9
[0x2f9:0x2ff]
---
Predecessors: [0x46]
Successors: [0x300, 0x304]
---
0x2f9 JUMPDEST
0x2fa CALLVALUE
0x2fb ISZERO
0x2fc PUSH2 0x304
0x2ff JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V256 = CALLVALUE
0x2fb: V257 = ISZERO V256
0x2fc: V258 = 0x304
0x2ff: JUMPI 0x304 V257
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2f9]
Successors: []
---
0x300 PUSH1 0x0
0x302 DUP1
0x303 REVERT
---
0x300: V259 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x30b]
---
Predecessors: [0x2f9]
Successors: [0xb3a]
---
0x304 JUMPDEST
0x305 PUSH2 0x30c
0x308 PUSH2 0xb3a
0x30b JUMP
---
0x304: JUMPDEST 
0x305: V260 = 0x30c
0x308: V261 = 0xb3a
0x30b: JUMP 0xb3a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30c]
Exit stack: [V12, 0x30c]

================================

Block 0x30c
[0x30c:0x31d]
---
Predecessors: [0xbae, 0xdcd, 0x107c, 0x1437, 0x1447, 0x153e]
Successors: []
---
0x30c JUMPDEST
0x30d PUSH1 0x40
0x30f MLOAD
0x310 SWAP1
0x311 DUP2
0x312 MSTORE
0x313 PUSH1 0x20
0x315 ADD
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a SWAP2
0x31b SUB
0x31c SWAP1
0x31d RETURN
---
0x30c: JUMPDEST 
0x30d: V262 = 0x40
0x30f: V263 = M[0x40]
0x312: M[V263] = S0
0x313: V264 = 0x20
0x315: V265 = ADD 0x20 V263
0x316: V266 = 0x40
0x318: V267 = M[0x40]
0x31b: V268 = SUB V265 V267
0x31d: RETURN V267 V268
---
Entry stack: [S3, V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S3, V12, S1]

================================

Block 0x31e
[0x31e:0x324]
---
Predecessors: [0x51]
Successors: [0x325, 0x329]
---
0x31e JUMPDEST
0x31f CALLVALUE
0x320 ISZERO
0x321 PUSH2 0x329
0x324 JUMPI
---
0x31e: JUMPDEST 
0x31f: V269 = CALLVALUE
0x320: V270 = ISZERO V269
0x321: V271 = 0x329
0x324: JUMPI 0x329 V270
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x325
[0x325:0x328]
---
Predecessors: [0x31e]
Successors: []
---
0x325 PUSH1 0x0
0x327 DUP1
0x328 REVERT
---
0x325: V272 = 0x0
0x328: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x329
[0x329:0x345]
---
Predecessors: [0x31e]
Successors: [0xbb1]
---
0x329 JUMPDEST
0x32a PUSH2 0x1e0
0x32d PUSH1 0x1
0x32f PUSH1 0xa0
0x331 PUSH1 0x2
0x333 EXP
0x334 SUB
0x335 PUSH1 0x4
0x337 CALLDATALOAD
0x338 DUP2
0x339 AND
0x33a SWAP1
0x33b PUSH1 0x24
0x33d CALLDATALOAD
0x33e AND
0x33f PUSH1 0x44
0x341 CALLDATALOAD
0x342 PUSH2 0xbb1
0x345 JUMP
---
0x329: JUMPDEST 
0x32a: V273 = 0x1e0
0x32d: V274 = 0x1
0x32f: V275 = 0xa0
0x331: V276 = 0x2
0x333: V277 = EXP 0x2 0xa0
0x334: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V279 = 0x4
0x337: V280 = CALLDATALOAD 0x4
0x339: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x33b: V282 = 0x24
0x33d: V283 = CALLDATALOAD 0x24
0x33e: V284 = AND V283 0xffffffffffffffffffffffffffffffffffffffff
0x33f: V285 = 0x44
0x341: V286 = CALLDATALOAD 0x44
0x342: V287 = 0xbb1
0x345: JUMP 0xbb1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e0, V281, V284, V286]
Exit stack: [V12, 0x1e0, V281, V284, V286]

================================

Block 0x346
[0x346:0x347]
---
Predecessors: []
Successors: []
---
0x346 JUMPDEST
0x347 STOP
---
0x346: JUMPDEST 
0x347: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x348
[0x348:0x34e]
---
Predecessors: [0x5c]
Successors: [0x34f, 0x353]
---
0x348 JUMPDEST
0x349 CALLVALUE
0x34a ISZERO
0x34b PUSH2 0x353
0x34e JUMPI
---
0x348: JUMPDEST 
0x349: V288 = CALLVALUE
0x34a: V289 = ISZERO V288
0x34b: V290 = 0x353
0x34e: JUMPI 0x353 V289
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x348]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V291 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x353
[0x353:0x36f]
---
Predecessors: [0x348]
Successors: [0xc17]
---
0x353 JUMPDEST
0x354 PUSH2 0x28f
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f PUSH1 0x4
0x361 CALLDATALOAD
0x362 DUP2
0x363 AND
0x364 SWAP1
0x365 PUSH1 0x24
0x367 CALLDATALOAD
0x368 AND
0x369 PUSH1 0x44
0x36b CALLDATALOAD
0x36c PUSH2 0xc17
0x36f JUMP
---
0x353: JUMPDEST 
0x354: V292 = 0x28f
0x357: V293 = 0x1
0x359: V294 = 0xa0
0x35b: V295 = 0x2
0x35d: V296 = EXP 0x2 0xa0
0x35e: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V298 = 0x4
0x361: V299 = CALLDATALOAD 0x4
0x363: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x365: V301 = 0x24
0x367: V302 = CALLDATALOAD 0x24
0x368: V303 = AND V302 0xffffffffffffffffffffffffffffffffffffffff
0x369: V304 = 0x44
0x36b: V305 = CALLDATALOAD 0x44
0x36c: V306 = 0xc17
0x36f: JUMP 0xc17
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V300, V303, V305]
Exit stack: [V12, 0x28f, V300, V303, V305]

================================

Block 0x370
[0x370:0x383]
---
Predecessors: []
Successors: []
---
0x370 JUMPDEST
0x371 PUSH1 0x40
0x373 MLOAD
0x374 SWAP1
0x375 ISZERO
0x376 ISZERO
0x377 DUP2
0x378 MSTORE
0x379 PUSH1 0x20
0x37b ADD
0x37c PUSH1 0x40
0x37e MLOAD
0x37f DUP1
0x380 SWAP2
0x381 SUB
0x382 SWAP1
0x383 RETURN
---
0x370: JUMPDEST 
0x371: V307 = 0x40
0x373: V308 = M[0x40]
0x375: V309 = ISZERO S0
0x376: V310 = ISZERO V309
0x378: M[V308] = V310
0x379: V311 = 0x20
0x37b: V312 = ADD 0x20 V308
0x37c: V313 = 0x40
0x37e: V314 = M[0x40]
0x381: V315 = SUB V312 V314
0x383: RETURN V314 V315
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x384
[0x384:0x38a]
---
Predecessors: [0x67]
Successors: [0x38b, 0x38f]
---
0x384 JUMPDEST
0x385 CALLVALUE
0x386 ISZERO
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x384: JUMPDEST 
0x385: V316 = CALLVALUE
0x386: V317 = ISZERO V316
0x387: V318 = 0x38f
0x38a: JUMPI 0x38f V317
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x384]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V319 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38f
[0x38f:0x3ab]
---
Predecessors: [0x384]
Successors: [0xcdd]
---
0x38f JUMPDEST
0x390 PUSH2 0x1e0
0x393 PUSH1 0x1
0x395 PUSH1 0xa0
0x397 PUSH1 0x2
0x399 EXP
0x39a SUB
0x39b PUSH1 0x4
0x39d CALLDATALOAD
0x39e DUP2
0x39f AND
0x3a0 SWAP1
0x3a1 PUSH1 0x24
0x3a3 CALLDATALOAD
0x3a4 AND
0x3a5 PUSH1 0x44
0x3a7 CALLDATALOAD
0x3a8 PUSH2 0xcdd
0x3ab JUMP
---
0x38f: JUMPDEST 
0x390: V320 = 0x1e0
0x393: V321 = 0x1
0x395: V322 = 0xa0
0x397: V323 = 0x2
0x399: V324 = EXP 0x2 0xa0
0x39a: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39b: V326 = 0x4
0x39d: V327 = CALLDATALOAD 0x4
0x39f: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x3a1: V329 = 0x24
0x3a3: V330 = CALLDATALOAD 0x24
0x3a4: V331 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V332 = 0x44
0x3a7: V333 = CALLDATALOAD 0x44
0x3a8: V334 = 0xcdd
0x3ab: JUMP 0xcdd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e0, V328, V331, V333]
Exit stack: [V12, 0x1e0, V328, V331, V333]

================================

Block 0x3ac
[0x3ac:0x3ad]
---
Predecessors: []
Successors: []
---
0x3ac JUMPDEST
0x3ad STOP
---
0x3ac: JUMPDEST 
0x3ad: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ae
[0x3ae:0x3b4]
---
Predecessors: [0x72]
Successors: [0x3b5, 0x3b9]
---
0x3ae JUMPDEST
0x3af CALLVALUE
0x3b0 ISZERO
0x3b1 PUSH2 0x3b9
0x3b4 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V335 = CALLVALUE
0x3b0: V336 = ISZERO V335
0x3b1: V337 = 0x3b9
0x3b4: JUMPI 0x3b9 V336
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x3ae]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 REVERT
---
0x3b5: V338 = 0x0
0x3b8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b9
[0x3b9:0x3c0]
---
Predecessors: [0x3ae]
Successors: [0xd43]
---
0x3b9 JUMPDEST
0x3ba PUSH2 0x2dd
0x3bd PUSH2 0xd43
0x3c0 JUMP
---
0x3b9: JUMPDEST 
0x3ba: V339 = 0x2dd
0x3bd: V340 = 0xd43
0x3c0: JUMP 0xd43
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2dd]
Exit stack: [V12, 0x2dd]

================================

Block 0x3c1
[0x3c1:0x3dc]
---
Predecessors: []
Successors: []
---
0x3c1 JUMPDEST
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 PUSH1 0x1
0x3c7 PUSH1 0xa0
0x3c9 PUSH1 0x2
0x3cb EXP
0x3cc SUB
0x3cd SWAP1
0x3ce SWAP2
0x3cf AND
0x3d0 DUP2
0x3d1 MSTORE
0x3d2 PUSH1 0x20
0x3d4 ADD
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 DUP1
0x3d9 SWAP2
0x3da SUB
0x3db SWAP1
0x3dc RETURN
---
0x3c1: JUMPDEST 
0x3c2: V341 = 0x40
0x3c4: V342 = M[0x40]
0x3c5: V343 = 0x1
0x3c7: V344 = 0xa0
0x3c9: V345 = 0x2
0x3cb: V346 = EXP 0x2 0xa0
0x3cc: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cf: V348 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: M[V342] = V348
0x3d2: V349 = 0x20
0x3d4: V350 = ADD 0x20 V342
0x3d5: V351 = 0x40
0x3d7: V352 = M[0x40]
0x3da: V353 = SUB V350 V352
0x3dc: RETURN V352 V353
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3dd
[0x3dd:0x3e3]
---
Predecessors: [0x7d]
Successors: [0x3e4, 0x3e8]
---
0x3dd JUMPDEST
0x3de CALLVALUE
0x3df ISZERO
0x3e0 PUSH2 0x3e8
0x3e3 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V354 = CALLVALUE
0x3df: V355 = ISZERO V354
0x3e0: V356 = 0x3e8
0x3e3: JUMPI 0x3e8 V355
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e4
[0x3e4:0x3e7]
---
Predecessors: [0x3dd]
Successors: []
---
0x3e4 PUSH1 0x0
0x3e6 DUP1
0x3e7 REVERT
---
0x3e4: V357 = 0x0
0x3e7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e8
[0x3e8:0x3ef]
---
Predecessors: [0x3dd]
Successors: [0xd52]
---
0x3e8 JUMPDEST
0x3e9 PUSH2 0x3f0
0x3ec PUSH2 0xd52
0x3ef JUMP
---
0x3e8: JUMPDEST 
0x3e9: V358 = 0x3f0
0x3ec: V359 = 0xd52
0x3ef: JUMP 0xd52
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3f0]
Exit stack: [V12, 0x3f0]

================================

Block 0x3f0
[0x3f0:0x405]
---
Predecessors: [0xbae]
Successors: []
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 PUSH1 0xff
0x3f6 SWAP1
0x3f7 SWAP2
0x3f8 AND
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x20
0x3fd ADD
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 DUP1
0x402 SWAP2
0x403 SUB
0x404 SWAP1
0x405 RETURN
---
0x3f0: JUMPDEST 
0x3f1: V360 = 0x40
0x3f3: V361 = M[0x40]
0x3f4: V362 = 0xff
0x3f8: V363 = AND S0 0xff
0x3fa: M[V361] = V363
0x3fb: V364 = 0x20
0x3fd: V365 = ADD 0x20 V361
0x3fe: V366 = 0x40
0x400: V367 = M[0x40]
0x403: V368 = SUB V365 V367
0x405: RETURN V367 V368
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x406
[0x406:0x40c]
---
Predecessors: [0x88]
Successors: [0x40d, 0x411]
---
0x406 JUMPDEST
0x407 CALLVALUE
0x408 ISZERO
0x409 PUSH2 0x411
0x40c JUMPI
---
0x406: JUMPDEST 
0x407: V369 = CALLVALUE
0x408: V370 = ISZERO V369
0x409: V371 = 0x411
0x40c: JUMPI 0x411 V370
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40d
[0x40d:0x410]
---
Predecessors: [0x406]
Successors: []
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
---
0x40d: V372 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x411
[0x411:0x418]
---
Predecessors: [0x406]
Successors: [0xdc9]
---
0x411 JUMPDEST
0x412 PUSH2 0x30c
0x415 PUSH2 0xdc9
0x418 JUMP
---
0x411: JUMPDEST 
0x412: V373 = 0x30c
0x415: V374 = 0xdc9
0x418: JUMP 0xdc9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30c]
Exit stack: [V12, 0x30c]

================================

Block 0x419
[0x419:0x42a]
---
Predecessors: []
Successors: []
---
0x419 JUMPDEST
0x41a PUSH1 0x40
0x41c MLOAD
0x41d SWAP1
0x41e DUP2
0x41f MSTORE
0x420 PUSH1 0x20
0x422 ADD
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP1
0x427 SWAP2
0x428 SUB
0x429 SWAP1
0x42a RETURN
---
0x419: JUMPDEST 
0x41a: V375 = 0x40
0x41c: V376 = M[0x40]
0x41f: M[V376] = S0
0x420: V377 = 0x20
0x422: V378 = ADD 0x20 V376
0x423: V379 = 0x40
0x425: V380 = M[0x40]
0x428: V381 = SUB V378 V380
0x42a: RETURN V380 V381
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x42b
[0x42b:0x431]
---
Predecessors: [0x93]
Successors: [0x432, 0x436]
---
0x42b JUMPDEST
0x42c CALLVALUE
0x42d ISZERO
0x42e PUSH2 0x436
0x431 JUMPI
---
0x42b: JUMPDEST 
0x42c: V382 = CALLVALUE
0x42d: V383 = ISZERO V382
0x42e: V384 = 0x436
0x431: JUMPI 0x436 V383
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x432
[0x432:0x435]
---
Predecessors: [0x42b]
Successors: []
---
0x432 PUSH1 0x0
0x434 DUP1
0x435 REVERT
---
0x432: V385 = 0x0
0x435: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x436
[0x436:0x43d]
---
Predecessors: [0x42b]
Successors: [0xdd0]
---
0x436 JUMPDEST
0x437 PUSH2 0x28f
0x43a PUSH2 0xdd0
0x43d JUMP
---
0x436: JUMPDEST 
0x437: V386 = 0x28f
0x43a: V387 = 0xdd0
0x43d: JUMP 0xdd0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f]
Exit stack: [V12, 0x28f]

================================

Block 0x43e
[0x43e:0x451]
---
Predecessors: []
Successors: []
---
0x43e JUMPDEST
0x43f PUSH1 0x40
0x441 MLOAD
0x442 SWAP1
0x443 ISZERO
0x444 ISZERO
0x445 DUP2
0x446 MSTORE
0x447 PUSH1 0x20
0x449 ADD
0x44a PUSH1 0x40
0x44c MLOAD
0x44d DUP1
0x44e SWAP2
0x44f SUB
0x450 SWAP1
0x451 RETURN
---
0x43e: JUMPDEST 
0x43f: V388 = 0x40
0x441: V389 = M[0x40]
0x443: V390 = ISZERO S0
0x444: V391 = ISZERO V390
0x446: M[V389] = V391
0x447: V392 = 0x20
0x449: V393 = ADD 0x20 V389
0x44a: V394 = 0x40
0x44c: V395 = M[0x40]
0x44f: V396 = SUB V393 V395
0x451: RETURN V395 V396
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x452
[0x452:0x458]
---
Predecessors: [0x9e]
Successors: [0x459, 0x45d]
---
0x452 JUMPDEST
0x453 CALLVALUE
0x454 ISZERO
0x455 PUSH2 0x45d
0x458 JUMPI
---
0x452: JUMPDEST 
0x453: V397 = CALLVALUE
0x454: V398 = ISZERO V397
0x455: V399 = 0x45d
0x458: JUMPI 0x45d V398
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x459
[0x459:0x45c]
---
Predecessors: [0x452]
Successors: []
---
0x459 PUSH1 0x0
0x45b DUP1
0x45c REVERT
---
0x459: V400 = 0x0
0x45c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x45d
[0x45d:0x464]
---
Predecessors: [0x452]
Successors: [0xe8e]
---
0x45d JUMPDEST
0x45e PUSH2 0x28f
0x461 PUSH2 0xe8e
0x464 JUMP
---
0x45d: JUMPDEST 
0x45e: V401 = 0x28f
0x461: V402 = 0xe8e
0x464: JUMP 0xe8e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f]
Exit stack: [V12, 0x28f]

================================

Block 0x465
[0x465:0x478]
---
Predecessors: []
Successors: []
---
0x465 JUMPDEST
0x466 PUSH1 0x40
0x468 MLOAD
0x469 SWAP1
0x46a ISZERO
0x46b ISZERO
0x46c DUP2
0x46d MSTORE
0x46e PUSH1 0x20
0x470 ADD
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP1
0x475 SWAP2
0x476 SUB
0x477 SWAP1
0x478 RETURN
---
0x465: JUMPDEST 
0x466: V403 = 0x40
0x468: V404 = M[0x40]
0x46a: V405 = ISZERO S0
0x46b: V406 = ISZERO V405
0x46d: M[V404] = V406
0x46e: V407 = 0x20
0x470: V408 = ADD 0x20 V404
0x471: V409 = 0x40
0x473: V410 = M[0x40]
0x476: V411 = SUB V408 V410
0x478: RETURN V410 V411
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x479
[0x479:0x47f]
---
Predecessors: [0xa9]
Successors: [0x480, 0x484]
---
0x479 JUMPDEST
0x47a CALLVALUE
0x47b ISZERO
0x47c PUSH2 0x484
0x47f JUMPI
---
0x479: JUMPDEST 
0x47a: V412 = CALLVALUE
0x47b: V413 = ISZERO V412
0x47c: V414 = 0x484
0x47f: JUMPI 0x484 V413
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x480
[0x480:0x483]
---
Predecessors: [0x479]
Successors: []
---
0x480 PUSH1 0x0
0x482 DUP1
0x483 REVERT
---
0x480: V415 = 0x0
0x483: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x484
[0x484:0x4e8]
---
Predecessors: [0x479]
Successors: [0xeba]
---
0x484 JUMPDEST
0x485 PUSH2 0x28f
0x488 PUSH1 0x4
0x48a DUP1
0x48b CALLDATALOAD
0x48c PUSH1 0x1
0x48e PUSH1 0xa0
0x490 PUSH1 0x2
0x492 EXP
0x493 SUB
0x494 AND
0x495 SWAP1
0x496 PUSH1 0x24
0x498 DUP1
0x499 CALLDATALOAD
0x49a SWAP2
0x49b SWAP1
0x49c PUSH1 0x64
0x49e SWAP1
0x49f PUSH1 0x44
0x4a1 CALLDATALOAD
0x4a2 SWAP1
0x4a3 DUP2
0x4a4 ADD
0x4a5 SWAP1
0x4a6 DUP4
0x4a7 ADD
0x4a8 CALLDATALOAD
0x4a9 DUP1
0x4aa PUSH1 0x20
0x4ac PUSH1 0x1f
0x4ae DUP3
0x4af ADD
0x4b0 DUP2
0x4b1 SWAP1
0x4b2 DIV
0x4b3 DUP2
0x4b4 MUL
0x4b5 ADD
0x4b6 PUSH1 0x40
0x4b8 MLOAD
0x4b9 SWAP1
0x4ba DUP2
0x4bb ADD
0x4bc PUSH1 0x40
0x4be MSTORE
0x4bf DUP2
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 SWAP3
0x4c3 SWAP2
0x4c4 SWAP1
0x4c5 PUSH1 0x20
0x4c7 DUP5
0x4c8 ADD
0x4c9 DUP4
0x4ca DUP4
0x4cb DUP1
0x4cc DUP3
0x4cd DUP5
0x4ce CALLDATACOPY
0x4cf POP
0x4d0 SWAP5
0x4d1 SWAP7
0x4d2 POP
0x4d3 POP
0x4d4 POP
0x4d5 SWAP3
0x4d6 CALLDATALOAD
0x4d7 PUSH1 0x1
0x4d9 PUSH1 0xa0
0x4db PUSH1 0x2
0x4dd EXP
0x4de SUB
0x4df AND
0x4e0 SWAP3
0x4e1 POP
0x4e2 PUSH2 0xeba
0x4e5 SWAP2
0x4e6 POP
0x4e7 POP
0x4e8 JUMP
---
0x484: JUMPDEST 
0x485: V416 = 0x28f
0x488: V417 = 0x4
0x48b: V418 = CALLDATALOAD 0x4
0x48c: V419 = 0x1
0x48e: V420 = 0xa0
0x490: V421 = 0x2
0x492: V422 = EXP 0x2 0xa0
0x493: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x494: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x496: V425 = 0x24
0x499: V426 = CALLDATALOAD 0x24
0x49c: V427 = 0x64
0x49f: V428 = 0x44
0x4a1: V429 = CALLDATALOAD 0x44
0x4a4: V430 = ADD V429 0x24
0x4a7: V431 = ADD 0x4 V429
0x4a8: V432 = CALLDATALOAD V431
0x4aa: V433 = 0x20
0x4ac: V434 = 0x1f
0x4af: V435 = ADD V432 0x1f
0x4b2: V436 = DIV V435 0x20
0x4b4: V437 = MUL 0x20 V436
0x4b5: V438 = ADD V437 0x20
0x4b6: V439 = 0x40
0x4b8: V440 = M[0x40]
0x4bb: V441 = ADD V440 V438
0x4bc: V442 = 0x40
0x4be: M[0x40] = V441
0x4c1: M[V440] = V432
0x4c5: V443 = 0x20
0x4c8: V444 = ADD V440 0x20
0x4ce: CALLDATACOPY V444 V430 V432
0x4d6: V445 = CALLDATALOAD 0x64
0x4d7: V446 = 0x1
0x4d9: V447 = 0xa0
0x4db: V448 = 0x2
0x4dd: V449 = EXP 0x2 0xa0
0x4de: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x4e2: V452 = 0xeba
0x4e8: JUMP 0xeba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V424, V426, V440, V451]
Exit stack: [V12, 0x28f, V424, V426, V440, V451]

================================

Block 0x4e9
[0x4e9:0x4fc]
---
Predecessors: []
Successors: []
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed SWAP1
0x4ee ISZERO
0x4ef ISZERO
0x4f0 DUP2
0x4f1 MSTORE
0x4f2 PUSH1 0x20
0x4f4 ADD
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 DUP1
0x4f9 SWAP2
0x4fa SUB
0x4fb SWAP1
0x4fc RETURN
---
0x4e9: JUMPDEST 
0x4ea: V453 = 0x40
0x4ec: V454 = M[0x40]
0x4ee: V455 = ISZERO S0
0x4ef: V456 = ISZERO V455
0x4f1: M[V454] = V456
0x4f2: V457 = 0x20
0x4f4: V458 = ADD 0x20 V454
0x4f5: V459 = 0x40
0x4f7: V460 = M[0x40]
0x4fa: V461 = SUB V458 V460
0x4fc: RETURN V460 V461
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4fd
[0x4fd:0x503]
---
Predecessors: [0xb4]
Successors: [0x504, 0x508]
---
0x4fd JUMPDEST
0x4fe CALLVALUE
0x4ff ISZERO
0x500 PUSH2 0x508
0x503 JUMPI
---
0x4fd: JUMPDEST 
0x4fe: V462 = CALLVALUE
0x4ff: V463 = ISZERO V462
0x500: V464 = 0x508
0x503: JUMPI 0x508 V463
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x504
[0x504:0x507]
---
Predecessors: [0x4fd]
Successors: []
---
0x504 PUSH1 0x0
0x506 DUP1
0x507 REVERT
---
0x504: V465 = 0x0
0x507: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x508
[0x508:0x51b]
---
Predecessors: [0x4fd]
Successors: [0xff9]
---
0x508 JUMPDEST
0x509 PUSH2 0x30c
0x50c PUSH1 0x1
0x50e PUSH1 0xa0
0x510 PUSH1 0x2
0x512 EXP
0x513 SUB
0x514 PUSH1 0x4
0x516 CALLDATALOAD
0x517 AND
0x518 PUSH2 0xff9
0x51b JUMP
---
0x508: JUMPDEST 
0x509: V466 = 0x30c
0x50c: V467 = 0x1
0x50e: V468 = 0xa0
0x510: V469 = 0x2
0x512: V470 = EXP 0x2 0xa0
0x513: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x514: V472 = 0x4
0x516: V473 = CALLDATALOAD 0x4
0x517: V474 = AND V473 0xffffffffffffffffffffffffffffffffffffffff
0x518: V475 = 0xff9
0x51b: JUMP 0xff9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30c, V474]
Exit stack: [V12, 0x30c, V474]

================================

Block 0x51c
[0x51c:0x52d]
---
Predecessors: []
Successors: []
---
0x51c JUMPDEST
0x51d PUSH1 0x40
0x51f MLOAD
0x520 SWAP1
0x521 DUP2
0x522 MSTORE
0x523 PUSH1 0x20
0x525 ADD
0x526 PUSH1 0x40
0x528 MLOAD
0x529 DUP1
0x52a SWAP2
0x52b SUB
0x52c SWAP1
0x52d RETURN
---
0x51c: JUMPDEST 
0x51d: V476 = 0x40
0x51f: V477 = M[0x40]
0x522: M[V477] = S0
0x523: V478 = 0x20
0x525: V479 = ADD 0x20 V477
0x526: V480 = 0x40
0x528: V481 = M[0x40]
0x52b: V482 = SUB V479 V481
0x52d: RETURN V481 V482
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x52e
[0x52e:0x534]
---
Predecessors: [0xbf]
Successors: [0x535, 0x539]
---
0x52e JUMPDEST
0x52f CALLVALUE
0x530 ISZERO
0x531 PUSH2 0x539
0x534 JUMPI
---
0x52e: JUMPDEST 
0x52f: V483 = CALLVALUE
0x530: V484 = ISZERO V483
0x531: V485 = 0x539
0x534: JUMPI 0x539 V484
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x535
[0x535:0x538]
---
Predecessors: [0x52e]
Successors: []
---
0x535 PUSH1 0x0
0x537 DUP1
0x538 REVERT
---
0x535: V486 = 0x0
0x538: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x539
[0x539:0x556]
---
Predecessors: [0x52e]
Successors: [0x1081]
---
0x539 JUMPDEST
0x53a PUSH2 0x28f
0x53d PUSH1 0x1
0x53f PUSH1 0xa0
0x541 PUSH1 0x2
0x543 EXP
0x544 SUB
0x545 PUSH1 0x4
0x547 CALLDATALOAD
0x548 DUP2
0x549 AND
0x54a SWAP1
0x54b PUSH1 0x24
0x54d CALLDATALOAD
0x54e SWAP1
0x54f PUSH1 0x44
0x551 CALLDATALOAD
0x552 AND
0x553 PUSH2 0x1081
0x556 JUMP
---
0x539: JUMPDEST 
0x53a: V487 = 0x28f
0x53d: V488 = 0x1
0x53f: V489 = 0xa0
0x541: V490 = 0x2
0x543: V491 = EXP 0x2 0xa0
0x544: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x545: V493 = 0x4
0x547: V494 = CALLDATALOAD 0x4
0x549: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x54b: V496 = 0x24
0x54d: V497 = CALLDATALOAD 0x24
0x54f: V498 = 0x44
0x551: V499 = CALLDATALOAD 0x44
0x552: V500 = AND V499 0xffffffffffffffffffffffffffffffffffffffff
0x553: V501 = 0x1081
0x556: JUMP 0x1081
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V495, V497, V500]
Exit stack: [V12, 0x28f, V495, V497, V500]

================================

Block 0x557
[0x557:0x56a]
---
Predecessors: []
Successors: []
---
0x557 JUMPDEST
0x558 PUSH1 0x40
0x55a MLOAD
0x55b SWAP1
0x55c ISZERO
0x55d ISZERO
0x55e DUP2
0x55f MSTORE
0x560 PUSH1 0x20
0x562 ADD
0x563 PUSH1 0x40
0x565 MLOAD
0x566 DUP1
0x567 SWAP2
0x568 SUB
0x569 SWAP1
0x56a RETURN
---
0x557: JUMPDEST 
0x558: V502 = 0x40
0x55a: V503 = M[0x40]
0x55c: V504 = ISZERO S0
0x55d: V505 = ISZERO V504
0x55f: M[V503] = V505
0x560: V506 = 0x20
0x562: V507 = ADD 0x20 V503
0x563: V508 = 0x40
0x565: V509 = M[0x40]
0x568: V510 = SUB V507 V509
0x56a: RETURN V509 V510
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x56b
[0x56b:0x571]
---
Predecessors: [0xca]
Successors: [0x572, 0x576]
---
0x56b JUMPDEST
0x56c CALLVALUE
0x56d ISZERO
0x56e PUSH2 0x576
0x571 JUMPI
---
0x56b: JUMPDEST 
0x56c: V511 = CALLVALUE
0x56d: V512 = ISZERO V511
0x56e: V513 = 0x576
0x571: JUMPI 0x576 V512
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x572
[0x572:0x575]
---
Predecessors: [0x56b]
Successors: []
---
0x572 PUSH1 0x0
0x574 DUP1
0x575 REVERT
---
0x572: V514 = 0x0
0x575: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x576
[0x576:0x57d]
---
Predecessors: [0x56b]
Successors: [0x114c]
---
0x576 JUMPDEST
0x577 PUSH2 0x1f5
0x57a PUSH2 0x114c
0x57d JUMP
---
0x576: JUMPDEST 
0x577: V515 = 0x1f5
0x57a: V516 = 0x114c
0x57d: JUMP 0x114c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f5]
Exit stack: [V12, 0x1f5]

================================

Block 0x57e
[0x57e:0x5a1]
---
Predecessors: []
Successors: [0x5a2]
---
0x57e JUMPDEST
0x57f PUSH1 0x40
0x581 MLOAD
0x582 PUSH1 0x20
0x584 DUP1
0x585 DUP3
0x586 MSTORE
0x587 DUP2
0x588 SWAP1
0x589 DUP2
0x58a ADD
0x58b DUP4
0x58c DUP2
0x58d DUP2
0x58e MLOAD
0x58f DUP2
0x590 MSTORE
0x591 PUSH1 0x20
0x593 ADD
0x594 SWAP2
0x595 POP
0x596 DUP1
0x597 MLOAD
0x598 SWAP1
0x599 PUSH1 0x20
0x59b ADD
0x59c SWAP1
0x59d DUP1
0x59e DUP4
0x59f DUP4
0x5a0 PUSH1 0x0
---
0x57e: JUMPDEST 
0x57f: V517 = 0x40
0x581: V518 = M[0x40]
0x582: V519 = 0x20
0x586: M[V518] = 0x20
0x58a: V520 = ADD V518 0x20
0x58e: V521 = M[S0]
0x590: M[V520] = V521
0x591: V522 = 0x20
0x593: V523 = ADD 0x20 V520
0x597: V524 = M[S0]
0x599: V525 = 0x20
0x59b: V526 = ADD 0x20 S0
0x5a0: V527 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V518, V518, V523, V526, V524, V524, V523, V526, 0x0]
Exit stack: [S0, V518, V518, V523, V526, V524, V524, V523, V526, 0x0]

================================

Block 0x5a2
[0x5a2:0x5aa]
---
Predecessors: [0x57e]
Successors: [0x232, 0x5ab]
---
0x5a2 JUMPDEST
0x5a3 DUP4
0x5a4 DUP2
0x5a5 LT
0x5a6 ISZERO
0x5a7 PUSH2 0x232
0x5aa JUMPI
---
0x5a2: JUMPDEST 
0x5a5: V528 = LT 0x0 V524
0x5a6: V529 = ISZERO V528
0x5a7: V530 = 0x232
0x5aa: JUMPI 0x232 V529
---
Entry stack: [S9, V518, V518, V523, V526, V524, V524, V523, V526, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V518, V518, V523, V526, V524, V524, V523, V526, 0x0]

================================

Block 0x5ab
[0x5ab:0x5b2]
---
Predecessors: [0x5a2]
Successors: [0x5b3]
---
0x5ab DUP1
0x5ac DUP3
0x5ad ADD
0x5ae MLOAD
0x5af DUP2
0x5b0 DUP5
0x5b1 ADD
0x5b2 MSTORE
---
0x5ad: V531 = ADD V526 0x0
0x5ae: V532 = M[V531]
0x5b1: V533 = ADD V523 0x0
0x5b2: M[V533] = V532
---
Entry stack: [S9, V518, V518, V523, V526, V524, V524, V523, V526, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V518, V518, V523, V526, V524, V524, V523, V526, 0x0]

================================

Block 0x5b3
[0x5b3:0x5ba]
---
Predecessors: [0x5ab]
Successors: [0x219]
---
0x5b3 JUMPDEST
0x5b4 PUSH1 0x20
0x5b6 ADD
0x5b7 PUSH2 0x219
0x5ba JUMP
---
0x5b3: JUMPDEST 
0x5b4: V534 = 0x20
0x5b6: V535 = ADD 0x20 0x0
0x5b7: V536 = 0x219
0x5ba: JUMP 0x219
---
Entry stack: [S9, V518, V518, V523, V526, V524, V524, V523, V526, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V518, V518, V523, V526, V524, V524, V523, V526, 0x20]

================================

Block 0x5bb
[0x5bb:0x5ce]
---
Predecessors: []
Successors: [0x25f, 0x5cf]
---
0x5bb JUMPDEST
0x5bc POP
0x5bd POP
0x5be POP
0x5bf POP
0x5c0 SWAP1
0x5c1 POP
0x5c2 SWAP1
0x5c3 DUP2
0x5c4 ADD
0x5c5 SWAP1
0x5c6 PUSH1 0x1f
0x5c8 AND
0x5c9 DUP1
0x5ca ISZERO
0x5cb PUSH2 0x25f
0x5ce JUMPI
---
0x5bb: JUMPDEST 
0x5c4: V537 = ADD S4 S6
0x5c6: V538 = 0x1f
0x5c8: V539 = AND 0x1f S4
0x5ca: V540 = ISZERO V539
0x5cb: V541 = 0x25f
0x5ce: JUMPI 0x25f V540
---
Entry stack: []
Stack pops: 7
Stack additions: [V537, V539]
Exit stack: [V537, V539]

================================

Block 0x5cf
[0x5cf:0x5e7]
---
Predecessors: [0x5bb]
Successors: [0x5e8]
---
0x5cf DUP1
0x5d0 DUP3
0x5d1 SUB
0x5d2 DUP1
0x5d3 MLOAD
0x5d4 PUSH1 0x1
0x5d6 DUP4
0x5d7 PUSH1 0x20
0x5d9 SUB
0x5da PUSH2 0x100
0x5dd EXP
0x5de SUB
0x5df NOT
0x5e0 AND
0x5e1 DUP2
0x5e2 MSTORE
0x5e3 PUSH1 0x20
0x5e5 ADD
0x5e6 SWAP2
0x5e7 POP
---
0x5d1: V542 = SUB V537 V539
0x5d3: V543 = M[V542]
0x5d4: V544 = 0x1
0x5d7: V545 = 0x20
0x5d9: V546 = SUB 0x20 V539
0x5da: V547 = 0x100
0x5dd: V548 = EXP 0x100 V546
0x5de: V549 = SUB V548 0x1
0x5df: V550 = NOT V549
0x5e0: V551 = AND V550 V543
0x5e2: M[V542] = V551
0x5e3: V552 = 0x20
0x5e5: V553 = ADD 0x20 V542
---
Entry stack: [V537, V539]
Stack pops: 2
Stack additions: [V553, S0]
Exit stack: [V553, V539]

================================

Block 0x5e8
[0x5e8:0x5f5]
---
Predecessors: [0x5cf]
Successors: []
---
0x5e8 JUMPDEST
0x5e9 POP
0x5ea SWAP3
0x5eb POP
0x5ec POP
0x5ed POP
0x5ee PUSH1 0x40
0x5f0 MLOAD
0x5f1 DUP1
0x5f2 SWAP2
0x5f3 SUB
0x5f4 SWAP1
0x5f5 RETURN
---
0x5e8: JUMPDEST 
0x5ee: V554 = 0x40
0x5f0: V555 = M[0x40]
0x5f3: V556 = SUB V553 V555
0x5f5: RETURN V555 V556
---
Entry stack: [V553, V539]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x5f6
[0x5f6:0x5fc]
---
Predecessors: [0xd5]
Successors: [0x5fd, 0x601]
---
0x5f6 JUMPDEST
0x5f7 CALLVALUE
0x5f8 ISZERO
0x5f9 PUSH2 0x601
0x5fc JUMPI
---
0x5f6: JUMPDEST 
0x5f7: V557 = CALLVALUE
0x5f8: V558 = ISZERO V557
0x5f9: V559 = 0x601
0x5fc: JUMPI 0x601 V558
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5fd
[0x5fd:0x600]
---
Predecessors: [0x5f6]
Successors: []
---
0x5fd PUSH1 0x0
0x5ff DUP1
0x600 REVERT
---
0x5fd: V560 = 0x0
0x600: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x601
[0x601:0x608]
---
Predecessors: [0x5f6]
Successors: [0x11ea]
---
0x601 JUMPDEST
0x602 PUSH2 0x2dd
0x605 PUSH2 0x11ea
0x608 JUMP
---
0x601: JUMPDEST 
0x602: V561 = 0x2dd
0x605: V562 = 0x11ea
0x608: JUMP 0x11ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2dd]
Exit stack: [V12, 0x2dd]

================================

Block 0x609
[0x609:0x624]
---
Predecessors: []
Successors: []
---
0x609 JUMPDEST
0x60a PUSH1 0x40
0x60c MLOAD
0x60d PUSH1 0x1
0x60f PUSH1 0xa0
0x611 PUSH1 0x2
0x613 EXP
0x614 SUB
0x615 SWAP1
0x616 SWAP2
0x617 AND
0x618 DUP2
0x619 MSTORE
0x61a PUSH1 0x20
0x61c ADD
0x61d PUSH1 0x40
0x61f MLOAD
0x620 DUP1
0x621 SWAP2
0x622 SUB
0x623 SWAP1
0x624 RETURN
---
0x609: JUMPDEST 
0x60a: V563 = 0x40
0x60c: V564 = M[0x40]
0x60d: V565 = 0x1
0x60f: V566 = 0xa0
0x611: V567 = 0x2
0x613: V568 = EXP 0x2 0xa0
0x614: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x617: V570 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x619: M[V564] = V570
0x61a: V571 = 0x20
0x61c: V572 = ADD 0x20 V564
0x61d: V573 = 0x40
0x61f: V574 = M[0x40]
0x622: V575 = SUB V572 V574
0x624: RETURN V574 V575
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x625
[0x625:0x62b]
---
Predecessors: [0xe0]
Successors: [0x62c, 0x630]
---
0x625 JUMPDEST
0x626 CALLVALUE
0x627 ISZERO
0x628 PUSH2 0x630
0x62b JUMPI
---
0x625: JUMPDEST 
0x626: V576 = CALLVALUE
0x627: V577 = ISZERO V576
0x628: V578 = 0x630
0x62b: JUMPI 0x630 V577
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x62c
[0x62c:0x62f]
---
Predecessors: [0x625]
Successors: []
---
0x62c PUSH1 0x0
0x62e DUP1
0x62f REVERT
---
0x62c: V579 = 0x0
0x62f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x630
[0x630:0x646]
---
Predecessors: [0x625]
Successors: [0x11fa]
---
0x630 JUMPDEST
0x631 PUSH2 0x28f
0x634 PUSH1 0x1
0x636 PUSH1 0xa0
0x638 PUSH1 0x2
0x63a EXP
0x63b SUB
0x63c PUSH1 0x4
0x63e CALLDATALOAD
0x63f AND
0x640 PUSH1 0x24
0x642 CALLDATALOAD
0x643 PUSH2 0x11fa
0x646 JUMP
---
0x630: JUMPDEST 
0x631: V580 = 0x28f
0x634: V581 = 0x1
0x636: V582 = 0xa0
0x638: V583 = 0x2
0x63a: V584 = EXP 0x2 0xa0
0x63b: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63c: V586 = 0x4
0x63e: V587 = CALLDATALOAD 0x4
0x63f: V588 = AND V587 0xffffffffffffffffffffffffffffffffffffffff
0x640: V589 = 0x24
0x642: V590 = CALLDATALOAD 0x24
0x643: V591 = 0x11fa
0x646: JUMP 0x11fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V588, V590]
Exit stack: [V12, 0x28f, V588, V590]

================================

Block 0x647
[0x647:0x65a]
---
Predecessors: []
Successors: []
---
0x647 JUMPDEST
0x648 PUSH1 0x40
0x64a MLOAD
0x64b SWAP1
0x64c ISZERO
0x64d ISZERO
0x64e DUP2
0x64f MSTORE
0x650 PUSH1 0x20
0x652 ADD
0x653 PUSH1 0x40
0x655 MLOAD
0x656 DUP1
0x657 SWAP2
0x658 SUB
0x659 SWAP1
0x65a RETURN
---
0x647: JUMPDEST 
0x648: V592 = 0x40
0x64a: V593 = M[0x40]
0x64c: V594 = ISZERO S0
0x64d: V595 = ISZERO V594
0x64f: M[V593] = V595
0x650: V596 = 0x20
0x652: V597 = ADD 0x20 V593
0x653: V598 = 0x40
0x655: V599 = M[0x40]
0x658: V600 = SUB V597 V599
0x65a: RETURN V599 V600
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x65b
[0x65b:0x661]
---
Predecessors: [0xeb]
Successors: [0x662, 0x666]
---
0x65b JUMPDEST
0x65c CALLVALUE
0x65d ISZERO
0x65e PUSH2 0x666
0x661 JUMPI
---
0x65b: JUMPDEST 
0x65c: V601 = CALLVALUE
0x65d: V602 = ISZERO V601
0x65e: V603 = 0x666
0x661: JUMPI 0x666 V602
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x662
[0x662:0x665]
---
Predecessors: [0x65b]
Successors: []
---
0x662 PUSH1 0x0
0x664 DUP1
0x665 REVERT
---
0x662: V604 = 0x0
0x665: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x666
[0x666:0x6bf]
---
Predecessors: [0x65b]
Successors: [0x123a]
---
0x666 JUMPDEST
0x667 PUSH2 0x28f
0x66a PUSH1 0x4
0x66c DUP1
0x66d CALLDATALOAD
0x66e PUSH1 0x1
0x670 PUSH1 0xa0
0x672 PUSH1 0x2
0x674 EXP
0x675 SUB
0x676 AND
0x677 SWAP1
0x678 PUSH1 0x24
0x67a DUP1
0x67b CALLDATALOAD
0x67c SWAP2
0x67d SWAP1
0x67e PUSH1 0x64
0x680 SWAP1
0x681 PUSH1 0x44
0x683 CALLDATALOAD
0x684 SWAP1
0x685 DUP2
0x686 ADD
0x687 SWAP1
0x688 DUP4
0x689 ADD
0x68a CALLDATALOAD
0x68b DUP1
0x68c PUSH1 0x20
0x68e PUSH1 0x1f
0x690 DUP3
0x691 ADD
0x692 DUP2
0x693 SWAP1
0x694 DIV
0x695 DUP2
0x696 MUL
0x697 ADD
0x698 PUSH1 0x40
0x69a MLOAD
0x69b SWAP1
0x69c DUP2
0x69d ADD
0x69e PUSH1 0x40
0x6a0 MSTORE
0x6a1 DUP2
0x6a2 DUP2
0x6a3 MSTORE
0x6a4 SWAP3
0x6a5 SWAP2
0x6a6 SWAP1
0x6a7 PUSH1 0x20
0x6a9 DUP5
0x6aa ADD
0x6ab DUP4
0x6ac DUP4
0x6ad DUP1
0x6ae DUP3
0x6af DUP5
0x6b0 CALLDATACOPY
0x6b1 POP
0x6b2 SWAP5
0x6b3 SWAP7
0x6b4 POP
0x6b5 PUSH2 0x123a
0x6b8 SWAP6
0x6b9 POP
0x6ba POP
0x6bb POP
0x6bc POP
0x6bd POP
0x6be POP
0x6bf JUMP
---
0x666: JUMPDEST 
0x667: V605 = 0x28f
0x66a: V606 = 0x4
0x66d: V607 = CALLDATALOAD 0x4
0x66e: V608 = 0x1
0x670: V609 = 0xa0
0x672: V610 = 0x2
0x674: V611 = EXP 0x2 0xa0
0x675: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x676: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x678: V614 = 0x24
0x67b: V615 = CALLDATALOAD 0x24
0x67e: V616 = 0x64
0x681: V617 = 0x44
0x683: V618 = CALLDATALOAD 0x44
0x686: V619 = ADD V618 0x24
0x689: V620 = ADD 0x4 V618
0x68a: V621 = CALLDATALOAD V620
0x68c: V622 = 0x20
0x68e: V623 = 0x1f
0x691: V624 = ADD V621 0x1f
0x694: V625 = DIV V624 0x20
0x696: V626 = MUL 0x20 V625
0x697: V627 = ADD V626 0x20
0x698: V628 = 0x40
0x69a: V629 = M[0x40]
0x69d: V630 = ADD V629 V627
0x69e: V631 = 0x40
0x6a0: M[0x40] = V630
0x6a3: M[V629] = V621
0x6a7: V632 = 0x20
0x6aa: V633 = ADD V629 0x20
0x6b0: CALLDATACOPY V633 V619 V621
0x6b5: V634 = 0x123a
0x6bf: JUMP 0x123a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V613, V615, V629]
Exit stack: [V12, 0x28f, V613, V615, V629]

================================

Block 0x6c0
[0x6c0:0x6d3]
---
Predecessors: []
Successors: []
---
0x6c0 JUMPDEST
0x6c1 PUSH1 0x40
0x6c3 MLOAD
0x6c4 SWAP1
0x6c5 ISZERO
0x6c6 ISZERO
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 PUSH1 0x20
0x6cb ADD
0x6cc PUSH1 0x40
0x6ce MLOAD
0x6cf DUP1
0x6d0 SWAP2
0x6d1 SUB
0x6d2 SWAP1
0x6d3 RETURN
---
0x6c0: JUMPDEST 
0x6c1: V635 = 0x40
0x6c3: V636 = M[0x40]
0x6c5: V637 = ISZERO S0
0x6c6: V638 = ISZERO V637
0x6c8: M[V636] = V638
0x6c9: V639 = 0x20
0x6cb: V640 = ADD 0x20 V636
0x6cc: V641 = 0x40
0x6ce: V642 = M[0x40]
0x6d1: V643 = SUB V640 V642
0x6d3: RETURN V642 V643
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6d4
[0x6d4:0x6da]
---
Predecessors: [0xf6]
Successors: [0x6db, 0x6df]
---
0x6d4 JUMPDEST
0x6d5 CALLVALUE
0x6d6 ISZERO
0x6d7 PUSH2 0x6df
0x6da JUMPI
---
0x6d4: JUMPDEST 
0x6d5: V644 = CALLVALUE
0x6d6: V645 = ISZERO V644
0x6d7: V646 = 0x6df
0x6da: JUMPI 0x6df V645
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6db
[0x6db:0x6de]
---
Predecessors: [0x6d4]
Successors: []
---
0x6db PUSH1 0x0
0x6dd DUP1
0x6de REVERT
---
0x6db: V647 = 0x0
0x6de: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6df
[0x6df:0x774]
---
Predecessors: [0x6d4]
Successors: [0x126d]
---
0x6df JUMPDEST
0x6e0 PUSH2 0x28f
0x6e3 PUSH1 0x4
0x6e5 DUP1
0x6e6 CALLDATALOAD
0x6e7 PUSH1 0x1
0x6e9 PUSH1 0xa0
0x6eb PUSH1 0x2
0x6ed EXP
0x6ee SUB
0x6ef AND
0x6f0 SWAP1
0x6f1 PUSH1 0x44
0x6f3 PUSH1 0x24
0x6f5 DUP1
0x6f6 CALLDATALOAD
0x6f7 SWAP1
0x6f8 DUP2
0x6f9 ADD
0x6fa SWAP1
0x6fb DUP4
0x6fc ADD
0x6fd CALLDATALOAD
0x6fe DUP1
0x6ff PUSH1 0x20
0x701 PUSH1 0x1f
0x703 DUP3
0x704 ADD
0x705 DUP2
0x706 SWAP1
0x707 DIV
0x708 DUP2
0x709 MUL
0x70a ADD
0x70b PUSH1 0x40
0x70d MLOAD
0x70e SWAP1
0x70f DUP2
0x710 ADD
0x711 PUSH1 0x40
0x713 MSTORE
0x714 DUP2
0x715 DUP2
0x716 MSTORE
0x717 SWAP3
0x718 SWAP2
0x719 SWAP1
0x71a PUSH1 0x20
0x71c DUP5
0x71d ADD
0x71e DUP4
0x71f DUP4
0x720 DUP1
0x721 DUP3
0x722 DUP5
0x723 CALLDATACOPY
0x724 DUP3
0x725 ADD
0x726 SWAP2
0x727 POP
0x728 POP
0x729 POP
0x72a POP
0x72b POP
0x72c POP
0x72d SWAP2
0x72e SWAP1
0x72f DUP1
0x730 CALLDATALOAD
0x731 SWAP1
0x732 PUSH1 0x20
0x734 ADD
0x735 SWAP1
0x736 DUP3
0x737 ADD
0x738 DUP1
0x739 CALLDATALOAD
0x73a SWAP1
0x73b PUSH1 0x20
0x73d ADD
0x73e SWAP1
0x73f DUP1
0x740 DUP1
0x741 PUSH1 0x1f
0x743 ADD
0x744 PUSH1 0x20
0x746 DUP1
0x747 SWAP2
0x748 DIV
0x749 MUL
0x74a PUSH1 0x20
0x74c ADD
0x74d PUSH1 0x40
0x74f MLOAD
0x750 SWAP1
0x751 DUP2
0x752 ADD
0x753 PUSH1 0x40
0x755 MSTORE
0x756 DUP2
0x757 DUP2
0x758 MSTORE
0x759 SWAP3
0x75a SWAP2
0x75b SWAP1
0x75c PUSH1 0x20
0x75e DUP5
0x75f ADD
0x760 DUP4
0x761 DUP4
0x762 DUP1
0x763 DUP3
0x764 DUP5
0x765 CALLDATACOPY
0x766 POP
0x767 SWAP5
0x768 SWAP7
0x769 POP
0x76a PUSH2 0x126d
0x76d SWAP6
0x76e POP
0x76f POP
0x770 POP
0x771 POP
0x772 POP
0x773 POP
0x774 JUMP
---
0x6df: JUMPDEST 
0x6e0: V648 = 0x28f
0x6e3: V649 = 0x4
0x6e6: V650 = CALLDATALOAD 0x4
0x6e7: V651 = 0x1
0x6e9: V652 = 0xa0
0x6eb: V653 = 0x2
0x6ed: V654 = EXP 0x2 0xa0
0x6ee: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ef: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x6f1: V657 = 0x44
0x6f3: V658 = 0x24
0x6f6: V659 = CALLDATALOAD 0x24
0x6f9: V660 = ADD V659 0x24
0x6fc: V661 = ADD 0x4 V659
0x6fd: V662 = CALLDATALOAD V661
0x6ff: V663 = 0x20
0x701: V664 = 0x1f
0x704: V665 = ADD V662 0x1f
0x707: V666 = DIV V665 0x20
0x709: V667 = MUL 0x20 V666
0x70a: V668 = ADD V667 0x20
0x70b: V669 = 0x40
0x70d: V670 = M[0x40]
0x710: V671 = ADD V670 V668
0x711: V672 = 0x40
0x713: M[0x40] = V671
0x716: M[V670] = V662
0x71a: V673 = 0x20
0x71d: V674 = ADD V670 0x20
0x723: CALLDATACOPY V674 V660 V662
0x725: V675 = ADD V674 V662
0x730: V676 = CALLDATALOAD 0x44
0x732: V677 = 0x20
0x734: V678 = ADD 0x20 0x44
0x737: V679 = ADD 0x4 V676
0x739: V680 = CALLDATALOAD V679
0x73b: V681 = 0x20
0x73d: V682 = ADD 0x20 V679
0x741: V683 = 0x1f
0x743: V684 = ADD 0x1f V680
0x744: V685 = 0x20
0x748: V686 = DIV V684 0x20
0x749: V687 = MUL V686 0x20
0x74a: V688 = 0x20
0x74c: V689 = ADD 0x20 V687
0x74d: V690 = 0x40
0x74f: V691 = M[0x40]
0x752: V692 = ADD V691 V689
0x753: V693 = 0x40
0x755: M[0x40] = V692
0x758: M[V691] = V680
0x75c: V694 = 0x20
0x75f: V695 = ADD V691 0x20
0x765: CALLDATACOPY V695 V682 V680
0x76a: V696 = 0x126d
0x774: JUMP 0x126d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V656, V670, V691]
Exit stack: [V12, 0x28f, V656, V670, V691]

================================

Block 0x775
[0x775:0x788]
---
Predecessors: []
Successors: []
---
0x775 JUMPDEST
0x776 PUSH1 0x40
0x778 MLOAD
0x779 SWAP1
0x77a ISZERO
0x77b ISZERO
0x77c DUP2
0x77d MSTORE
0x77e PUSH1 0x20
0x780 ADD
0x781 PUSH1 0x40
0x783 MLOAD
0x784 DUP1
0x785 SWAP2
0x786 SUB
0x787 SWAP1
0x788 RETURN
---
0x775: JUMPDEST 
0x776: V697 = 0x40
0x778: V698 = M[0x40]
0x77a: V699 = ISZERO S0
0x77b: V700 = ISZERO V699
0x77d: M[V698] = V700
0x77e: V701 = 0x20
0x780: V702 = ADD 0x20 V698
0x781: V703 = 0x40
0x783: V704 = M[0x40]
0x786: V705 = SUB V702 V704
0x788: RETURN V704 V705
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x789
[0x789:0x78f]
---
Predecessors: [0x101]
Successors: [0x790, 0x794]
---
0x789 JUMPDEST
0x78a CALLVALUE
0x78b ISZERO
0x78c PUSH2 0x794
0x78f JUMPI
---
0x789: JUMPDEST 
0x78a: V706 = CALLVALUE
0x78b: V707 = ISZERO V706
0x78c: V708 = 0x794
0x78f: JUMPI 0x794 V707
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x790
[0x790:0x793]
---
Predecessors: [0x789]
Successors: []
---
0x790 PUSH1 0x0
0x792 DUP1
0x793 REVERT
---
0x790: V709 = 0x0
0x793: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x794
[0x794:0x7a7]
---
Predecessors: [0x789]
Successors: [0x12e4]
---
0x794 JUMPDEST
0x795 PUSH2 0x28f
0x798 PUSH1 0x1
0x79a PUSH1 0xa0
0x79c PUSH1 0x2
0x79e EXP
0x79f SUB
0x7a0 PUSH1 0x4
0x7a2 CALLDATALOAD
0x7a3 AND
0x7a4 PUSH2 0x12e4
0x7a7 JUMP
---
0x794: JUMPDEST 
0x795: V710 = 0x28f
0x798: V711 = 0x1
0x79a: V712 = 0xa0
0x79c: V713 = 0x2
0x79e: V714 = EXP 0x2 0xa0
0x79f: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a0: V716 = 0x4
0x7a2: V717 = CALLDATALOAD 0x4
0x7a3: V718 = AND V717 0xffffffffffffffffffffffffffffffffffffffff
0x7a4: V719 = 0x12e4
0x7a7: JUMP 0x12e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V718]
Exit stack: [V12, 0x28f, V718]

================================

Block 0x7a8
[0x7a8:0x7bb]
---
Predecessors: []
Successors: []
---
0x7a8 JUMPDEST
0x7a9 PUSH1 0x40
0x7ab MLOAD
0x7ac SWAP1
0x7ad ISZERO
0x7ae ISZERO
0x7af DUP2
0x7b0 MSTORE
0x7b1 PUSH1 0x20
0x7b3 ADD
0x7b4 PUSH1 0x40
0x7b6 MLOAD
0x7b7 DUP1
0x7b8 SWAP2
0x7b9 SUB
0x7ba SWAP1
0x7bb RETURN
---
0x7a8: JUMPDEST 
0x7a9: V720 = 0x40
0x7ab: V721 = M[0x40]
0x7ad: V722 = ISZERO S0
0x7ae: V723 = ISZERO V722
0x7b0: M[V721] = V723
0x7b1: V724 = 0x20
0x7b3: V725 = ADD 0x20 V721
0x7b4: V726 = 0x40
0x7b6: V727 = M[0x40]
0x7b9: V728 = SUB V725 V727
0x7bb: RETURN V727 V728
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7bc
[0x7bc:0x7c2]
---
Predecessors: [0x10c]
Successors: [0x7c3, 0x7c7]
---
0x7bc JUMPDEST
0x7bd CALLVALUE
0x7be ISZERO
0x7bf PUSH2 0x7c7
0x7c2 JUMPI
---
0x7bc: JUMPDEST 
0x7bd: V729 = CALLVALUE
0x7be: V730 = ISZERO V729
0x7bf: V731 = 0x7c7
0x7c2: JUMPI 0x7c7 V730
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7c3
[0x7c3:0x7c6]
---
Predecessors: [0x7bc]
Successors: []
---
0x7c3 PUSH1 0x0
0x7c5 DUP1
0x7c6 REVERT
---
0x7c3: V732 = 0x0
0x7c6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7c7
[0x7c7:0x7ce]
---
Predecessors: [0x7bc]
Successors: [0x1437]
---
0x7c7 JUMPDEST
0x7c8 PUSH2 0x30c
0x7cb PUSH2 0x1437
0x7ce JUMP
---
0x7c7: JUMPDEST 
0x7c8: V733 = 0x30c
0x7cb: V734 = 0x1437
0x7ce: JUMP 0x1437
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30c]
Exit stack: [V12, 0x30c]

================================

Block 0x7cf
[0x7cf:0x7e0]
---
Predecessors: []
Successors: []
---
0x7cf JUMPDEST
0x7d0 PUSH1 0x40
0x7d2 MLOAD
0x7d3 SWAP1
0x7d4 DUP2
0x7d5 MSTORE
0x7d6 PUSH1 0x20
0x7d8 ADD
0x7d9 PUSH1 0x40
0x7db MLOAD
0x7dc DUP1
0x7dd SWAP2
0x7de SUB
0x7df SWAP1
0x7e0 RETURN
---
0x7cf: JUMPDEST 
0x7d0: V735 = 0x40
0x7d2: V736 = M[0x40]
0x7d5: M[V736] = S0
0x7d6: V737 = 0x20
0x7d8: V738 = ADD 0x20 V736
0x7d9: V739 = 0x40
0x7db: V740 = M[0x40]
0x7de: V741 = SUB V738 V740
0x7e0: RETURN V740 V741
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7e1
[0x7e1:0x7e7]
---
Predecessors: [0x117]
Successors: [0x7e8, 0x7ec]
---
0x7e1 JUMPDEST
0x7e2 CALLVALUE
0x7e3 ISZERO
0x7e4 PUSH2 0x7ec
0x7e7 JUMPI
---
0x7e1: JUMPDEST 
0x7e2: V742 = CALLVALUE
0x7e3: V743 = ISZERO V742
0x7e4: V744 = 0x7ec
0x7e7: JUMPI 0x7ec V743
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e8
[0x7e8:0x7eb]
---
Predecessors: [0x7e1]
Successors: []
---
0x7e8 PUSH1 0x0
0x7ea DUP1
0x7eb REVERT
---
0x7e8: V745 = 0x0
0x7eb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ec
[0x7ec:0x831]
---
Predecessors: [0x7e1]
Successors: [0x143d]
---
0x7ec JUMPDEST
0x7ed PUSH2 0x30c
0x7f0 PUSH1 0x4
0x7f2 PUSH1 0x24
0x7f4 DUP2
0x7f5 CALLDATALOAD
0x7f6 DUP2
0x7f7 DUP2
0x7f8 ADD
0x7f9 SWAP1
0x7fa DUP4
0x7fb ADD
0x7fc CALLDATALOAD
0x7fd DUP1
0x7fe PUSH1 0x20
0x800 PUSH1 0x1f
0x802 DUP3
0x803 ADD
0x804 DUP2
0x805 SWAP1
0x806 DIV
0x807 DUP2
0x808 MUL
0x809 ADD
0x80a PUSH1 0x40
0x80c MLOAD
0x80d SWAP1
0x80e DUP2
0x80f ADD
0x810 PUSH1 0x40
0x812 MSTORE
0x813 DUP2
0x814 DUP2
0x815 MSTORE
0x816 SWAP3
0x817 SWAP2
0x818 SWAP1
0x819 PUSH1 0x20
0x81b DUP5
0x81c ADD
0x81d DUP4
0x81e DUP4
0x81f DUP1
0x820 DUP3
0x821 DUP5
0x822 CALLDATACOPY
0x823 POP
0x824 SWAP5
0x825 SWAP7
0x826 POP
0x827 PUSH2 0x143d
0x82a SWAP6
0x82b POP
0x82c POP
0x82d POP
0x82e POP
0x82f POP
0x830 POP
0x831 JUMP
---
0x7ec: JUMPDEST 
0x7ed: V746 = 0x30c
0x7f0: V747 = 0x4
0x7f2: V748 = 0x24
0x7f5: V749 = CALLDATALOAD 0x4
0x7f8: V750 = ADD V749 0x24
0x7fb: V751 = ADD 0x4 V749
0x7fc: V752 = CALLDATALOAD V751
0x7fe: V753 = 0x20
0x800: V754 = 0x1f
0x803: V755 = ADD V752 0x1f
0x806: V756 = DIV V755 0x20
0x808: V757 = MUL 0x20 V756
0x809: V758 = ADD V757 0x20
0x80a: V759 = 0x40
0x80c: V760 = M[0x40]
0x80f: V761 = ADD V760 V758
0x810: V762 = 0x40
0x812: M[0x40] = V761
0x815: M[V760] = V752
0x819: V763 = 0x20
0x81c: V764 = ADD V760 0x20
0x822: CALLDATACOPY V764 V750 V752
0x827: V765 = 0x143d
0x831: JUMP 0x143d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30c, V760]
Exit stack: [V12, 0x30c, V760]

================================

Block 0x832
[0x832:0x843]
---
Predecessors: []
Successors: []
---
0x832 JUMPDEST
0x833 PUSH1 0x40
0x835 MLOAD
0x836 SWAP1
0x837 DUP2
0x838 MSTORE
0x839 PUSH1 0x20
0x83b ADD
0x83c PUSH1 0x40
0x83e MLOAD
0x83f DUP1
0x840 SWAP2
0x841 SUB
0x842 SWAP1
0x843 RETURN
---
0x832: JUMPDEST 
0x833: V766 = 0x40
0x835: V767 = M[0x40]
0x838: M[V767] = S0
0x839: V768 = 0x20
0x83b: V769 = ADD 0x20 V767
0x83c: V770 = 0x40
0x83e: V771 = M[0x40]
0x841: V772 = SUB V769 V771
0x843: RETURN V771 V772
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x844
[0x844:0x84a]
---
Predecessors: [0x122]
Successors: [0x84b, 0x84f]
---
0x844 JUMPDEST
0x845 CALLVALUE
0x846 ISZERO
0x847 PUSH2 0x84f
0x84a JUMPI
---
0x844: JUMPDEST 
0x845: V773 = CALLVALUE
0x846: V774 = ISZERO V773
0x847: V775 = 0x84f
0x84a: JUMPI 0x84f V774
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84b
[0x84b:0x84e]
---
Predecessors: [0x844]
Successors: []
---
0x84b PUSH1 0x0
0x84d DUP1
0x84e REVERT
---
0x84b: V776 = 0x0
0x84e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84f
[0x84f:0x856]
---
Predecessors: [0x844]
Successors: [0x144c]
---
0x84f JUMPDEST
0x850 PUSH2 0x28f
0x853 PUSH2 0x144c
0x856 JUMP
---
0x84f: JUMPDEST 
0x850: V777 = 0x28f
0x853: V778 = 0x144c
0x856: JUMP 0x144c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f]
Exit stack: [V12, 0x28f]

================================

Block 0x857
[0x857:0x86a]
---
Predecessors: []
Successors: []
---
0x857 JUMPDEST
0x858 PUSH1 0x40
0x85a MLOAD
0x85b SWAP1
0x85c ISZERO
0x85d ISZERO
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x20
0x862 ADD
0x863 PUSH1 0x40
0x865 MLOAD
0x866 DUP1
0x867 SWAP2
0x868 SUB
0x869 SWAP1
0x86a RETURN
---
0x857: JUMPDEST 
0x858: V779 = 0x40
0x85a: V780 = M[0x40]
0x85c: V781 = ISZERO S0
0x85d: V782 = ISZERO V781
0x85f: M[V780] = V782
0x860: V783 = 0x20
0x862: V784 = ADD 0x20 V780
0x863: V785 = 0x40
0x865: V786 = M[0x40]
0x868: V787 = SUB V784 V786
0x86a: RETURN V786 V787
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x86b
[0x86b:0x871]
---
Predecessors: [0x12d]
Successors: [0x872, 0x876]
---
0x86b JUMPDEST
0x86c CALLVALUE
0x86d ISZERO
0x86e PUSH2 0x876
0x871 JUMPI
---
0x86b: JUMPDEST 
0x86c: V788 = CALLVALUE
0x86d: V789 = ISZERO V788
0x86e: V790 = 0x876
0x871: JUMPI 0x876 V789
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x872
[0x872:0x875]
---
Predecessors: [0x86b]
Successors: []
---
0x872 PUSH1 0x0
0x874 DUP1
0x875 REVERT
---
0x872: V791 = 0x0
0x875: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x876
[0x876:0x88f]
---
Predecessors: [0x86b]
Successors: [0x14ad]
---
0x876 JUMPDEST
0x877 PUSH2 0x30c
0x87a PUSH1 0x1
0x87c PUSH1 0xa0
0x87e PUSH1 0x2
0x880 EXP
0x881 SUB
0x882 PUSH1 0x4
0x884 CALLDATALOAD
0x885 DUP2
0x886 AND
0x887 SWAP1
0x888 PUSH1 0x24
0x88a CALLDATALOAD
0x88b AND
0x88c PUSH2 0x14ad
0x88f JUMP
---
0x876: JUMPDEST 
0x877: V792 = 0x30c
0x87a: V793 = 0x1
0x87c: V794 = 0xa0
0x87e: V795 = 0x2
0x880: V796 = EXP 0x2 0xa0
0x881: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x882: V798 = 0x4
0x884: V799 = CALLDATALOAD 0x4
0x886: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V799
0x888: V801 = 0x24
0x88a: V802 = CALLDATALOAD 0x24
0x88b: V803 = AND V802 0xffffffffffffffffffffffffffffffffffffffff
0x88c: V804 = 0x14ad
0x88f: JUMP 0x14ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30c, V800, V803]
Exit stack: [V12, 0x30c, V800, V803]

================================

Block 0x890
[0x890:0x8a1]
---
Predecessors: []
Successors: []
---
0x890 JUMPDEST
0x891 PUSH1 0x40
0x893 MLOAD
0x894 SWAP1
0x895 DUP2
0x896 MSTORE
0x897 PUSH1 0x20
0x899 ADD
0x89a PUSH1 0x40
0x89c MLOAD
0x89d DUP1
0x89e SWAP2
0x89f SUB
0x8a0 SWAP1
0x8a1 RETURN
---
0x890: JUMPDEST 
0x891: V805 = 0x40
0x893: V806 = M[0x40]
0x896: M[V806] = S0
0x897: V807 = 0x20
0x899: V808 = ADD 0x20 V806
0x89a: V809 = 0x40
0x89c: V810 = M[0x40]
0x89f: V811 = SUB V808 V810
0x8a1: RETURN V810 V811
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8a2
[0x8a2:0x8a8]
---
Predecessors: [0x138]
Successors: [0x8a9, 0x8ad]
---
0x8a2 JUMPDEST
0x8a3 CALLVALUE
0x8a4 ISZERO
0x8a5 PUSH2 0x8ad
0x8a8 JUMPI
---
0x8a2: JUMPDEST 
0x8a3: V812 = CALLVALUE
0x8a4: V813 = ISZERO V812
0x8a5: V814 = 0x8ad
0x8a8: JUMPI 0x8ad V813
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a9
[0x8a9:0x8ac]
---
Predecessors: [0x8a2]
Successors: []
---
0x8a9 PUSH1 0x0
0x8ab DUP1
0x8ac REVERT
---
0x8a9: V815 = 0x0
0x8ac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8ad
[0x8ad:0x918]
---
Predecessors: [0x8a2]
Successors: [0x1544]
---
0x8ad JUMPDEST
0x8ae PUSH2 0x28f
0x8b1 PUSH1 0x1
0x8b3 PUSH1 0xa0
0x8b5 PUSH1 0x2
0x8b7 EXP
0x8b8 SUB
0x8b9 PUSH1 0x4
0x8bb DUP1
0x8bc CALLDATALOAD
0x8bd DUP3
0x8be AND
0x8bf SWAP2
0x8c0 PUSH1 0x24
0x8c2 DUP1
0x8c3 CALLDATALOAD
0x8c4 SWAP1
0x8c5 SWAP2
0x8c6 AND
0x8c7 SWAP2
0x8c8 PUSH1 0x44
0x8ca CALLDATALOAD
0x8cb SWAP2
0x8cc PUSH1 0x84
0x8ce SWAP1
0x8cf PUSH1 0x64
0x8d1 CALLDATALOAD
0x8d2 SWAP1
0x8d3 DUP2
0x8d4 ADD
0x8d5 SWAP1
0x8d6 DUP4
0x8d7 ADD
0x8d8 CALLDATALOAD
0x8d9 DUP1
0x8da PUSH1 0x20
0x8dc PUSH1 0x1f
0x8de DUP3
0x8df ADD
0x8e0 DUP2
0x8e1 SWAP1
0x8e2 DIV
0x8e3 DUP2
0x8e4 MUL
0x8e5 ADD
0x8e6 PUSH1 0x40
0x8e8 MLOAD
0x8e9 SWAP1
0x8ea DUP2
0x8eb ADD
0x8ec PUSH1 0x40
0x8ee MSTORE
0x8ef DUP2
0x8f0 DUP2
0x8f1 MSTORE
0x8f2 SWAP3
0x8f3 SWAP2
0x8f4 SWAP1
0x8f5 PUSH1 0x20
0x8f7 DUP5
0x8f8 ADD
0x8f9 DUP4
0x8fa DUP4
0x8fb DUP1
0x8fc DUP3
0x8fd DUP5
0x8fe CALLDATACOPY
0x8ff POP
0x900 SWAP5
0x901 SWAP7
0x902 POP
0x903 POP
0x904 POP
0x905 SWAP3
0x906 CALLDATALOAD
0x907 PUSH1 0x1
0x909 PUSH1 0xa0
0x90b PUSH1 0x2
0x90d EXP
0x90e SUB
0x90f AND
0x910 SWAP3
0x911 POP
0x912 PUSH2 0x1544
0x915 SWAP2
0x916 POP
0x917 POP
0x918 JUMP
---
0x8ad: JUMPDEST 
0x8ae: V816 = 0x28f
0x8b1: V817 = 0x1
0x8b3: V818 = 0xa0
0x8b5: V819 = 0x2
0x8b7: V820 = EXP 0x2 0xa0
0x8b8: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b9: V822 = 0x4
0x8bc: V823 = CALLDATALOAD 0x4
0x8be: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V823
0x8c0: V825 = 0x24
0x8c3: V826 = CALLDATALOAD 0x24
0x8c6: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0x8c8: V828 = 0x44
0x8ca: V829 = CALLDATALOAD 0x44
0x8cc: V830 = 0x84
0x8cf: V831 = 0x64
0x8d1: V832 = CALLDATALOAD 0x64
0x8d4: V833 = ADD V832 0x24
0x8d7: V834 = ADD 0x4 V832
0x8d8: V835 = CALLDATALOAD V834
0x8da: V836 = 0x20
0x8dc: V837 = 0x1f
0x8df: V838 = ADD V835 0x1f
0x8e2: V839 = DIV V838 0x20
0x8e4: V840 = MUL 0x20 V839
0x8e5: V841 = ADD V840 0x20
0x8e6: V842 = 0x40
0x8e8: V843 = M[0x40]
0x8eb: V844 = ADD V843 V841
0x8ec: V845 = 0x40
0x8ee: M[0x40] = V844
0x8f1: M[V843] = V835
0x8f5: V846 = 0x20
0x8f8: V847 = ADD V843 0x20
0x8fe: CALLDATACOPY V847 V833 V835
0x906: V848 = CALLDATALOAD 0x84
0x907: V849 = 0x1
0x909: V850 = 0xa0
0x90b: V851 = 0x2
0x90d: V852 = EXP 0x2 0xa0
0x90e: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90f: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0x912: V855 = 0x1544
0x918: JUMP 0x1544
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28f, V824, V827, V829, V843, V854]
Exit stack: [V12, 0x28f, V824, V827, V829, V843, V854]

================================

Block 0x919
[0x919:0x92c]
---
Predecessors: []
Successors: []
---
0x919 JUMPDEST
0x91a PUSH1 0x40
0x91c MLOAD
0x91d SWAP1
0x91e ISZERO
0x91f ISZERO
0x920 DUP2
0x921 MSTORE
0x922 PUSH1 0x20
0x924 ADD
0x925 PUSH1 0x40
0x927 MLOAD
0x928 DUP1
0x929 SWAP2
0x92a SUB
0x92b SWAP1
0x92c RETURN
---
0x919: JUMPDEST 
0x91a: V856 = 0x40
0x91c: V857 = M[0x40]
0x91e: V858 = ISZERO S0
0x91f: V859 = ISZERO V858
0x921: M[V857] = V859
0x922: V860 = 0x20
0x924: V861 = ADD 0x20 V857
0x925: V862 = 0x40
0x927: V863 = M[0x40]
0x92a: V864 = SUB V861 V863
0x92c: RETURN V863 V864
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x92d
[0x92d:0x933]
---
Predecessors: [0x143]
Successors: [0x934, 0x938]
---
0x92d JUMPDEST
0x92e CALLVALUE
0x92f ISZERO
0x930 PUSH2 0x938
0x933 JUMPI
---
0x92d: JUMPDEST 
0x92e: V865 = CALLVALUE
0x92f: V866 = ISZERO V865
0x930: V867 = 0x938
0x933: JUMPI 0x938 V866
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x934
[0x934:0x937]
---
Predecessors: [0x92d]
Successors: []
---
0x934 PUSH1 0x0
0x936 DUP1
0x937 REVERT
---
0x934: V868 = 0x0
0x937: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x938
[0x938:0x94b]
---
Predecessors: [0x92d]
Successors: [0x168f]
---
0x938 JUMPDEST
0x939 PUSH2 0x2dd
0x93c PUSH1 0x1
0x93e PUSH1 0xa0
0x940 PUSH1 0x2
0x942 EXP
0x943 SUB
0x944 PUSH1 0x4
0x946 CALLDATALOAD
0x947 AND
0x948 PUSH2 0x168f
0x94b JUMP
---
0x938: JUMPDEST 
0x939: V869 = 0x2dd
0x93c: V870 = 0x1
0x93e: V871 = 0xa0
0x940: V872 = 0x2
0x942: V873 = EXP 0x2 0xa0
0x943: V874 = SUB 0x10000000000000000000000000000000000000000 0x1
0x944: V875 = 0x4
0x946: V876 = CALLDATALOAD 0x4
0x947: V877 = AND V876 0xffffffffffffffffffffffffffffffffffffffff
0x948: V878 = 0x168f
0x94b: JUMP 0x168f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2dd, V877]
Exit stack: [V12, 0x2dd, V877]

================================

Block 0x94c
[0x94c:0x967]
---
Predecessors: []
Successors: []
---
0x94c JUMPDEST
0x94d PUSH1 0x40
0x94f MLOAD
0x950 PUSH1 0x1
0x952 PUSH1 0xa0
0x954 PUSH1 0x2
0x956 EXP
0x957 SUB
0x958 SWAP1
0x959 SWAP2
0x95a AND
0x95b DUP2
0x95c MSTORE
0x95d PUSH1 0x20
0x95f ADD
0x960 PUSH1 0x40
0x962 MLOAD
0x963 DUP1
0x964 SWAP2
0x965 SUB
0x966 SWAP1
0x967 RETURN
---
0x94c: JUMPDEST 
0x94d: V879 = 0x40
0x94f: V880 = M[0x40]
0x950: V881 = 0x1
0x952: V882 = 0xa0
0x954: V883 = 0x2
0x956: V884 = EXP 0x2 0xa0
0x957: V885 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95a: V886 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x95c: M[V880] = V886
0x95d: V887 = 0x20
0x95f: V888 = ADD 0x20 V880
0x960: V889 = 0x40
0x962: V890 = M[0x40]
0x965: V891 = SUB V888 V890
0x967: RETURN V890 V891
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x968
[0x968:0x972]
---
Predecessors: [0x14f, 0xa29, 0xc29, 0x16e6]
Successors: [0x168f]
---
0x968 JUMPDEST
0x969 PUSH1 0x0
0x96b PUSH2 0x973
0x96e CALLER
0x96f PUSH2 0x168f
0x972 JUMP
---
0x968: JUMPDEST 
0x969: V892 = 0x0
0x96b: V893 = 0x973
0x96e: V894 = CALLER
0x96f: V895 = 0x168f
0x972: JUMP 0x168f
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x157, 0xa30, 0xc30, 0x16f0}]
Stack pops: 0
Stack additions: [0x0, 0x973, V894]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x157, 0xa30, 0xc30, 0x16f0}, 0x0, 0x973, V894]

================================

Block 0x973
[0x973:0x975]
---
Predecessors: [0x16e1]
Successors: [0x976]
---
0x973 JUMPDEST
0x974 SWAP1
0x975 POP
---
0x973: JUMPDEST 
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x976
[0x976:0x978]
---
Predecessors: [0x973, 0xadb, 0xaf2, 0xe47, 0xe69, 0x146f, 0x187e]
Successors: [0x157, 0x28f, 0xa30, 0xc30, 0x16f0, 0x187e]
---
0x976 JUMPDEST
0x977 SWAP1
0x978 JUMP
---
0x976: JUMPDEST 
0x978: JUMP S1
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x979
[0x979:0x9c8]
---
Predecessors: [0x1ed]
Successors: [0x9c9, 0xa0f]
---
0x979 JUMPDEST
0x97a PUSH1 0x3
0x97c DUP1
0x97d SLOAD
0x97e PUSH1 0x1
0x980 DUP2
0x981 PUSH1 0x1
0x983 AND
0x984 ISZERO
0x985 PUSH2 0x100
0x988 MUL
0x989 SUB
0x98a AND
0x98b PUSH1 0x2
0x98d SWAP1
0x98e DIV
0x98f DUP1
0x990 PUSH1 0x1f
0x992 ADD
0x993 PUSH1 0x20
0x995 DUP1
0x996 SWAP2
0x997 DIV
0x998 MUL
0x999 PUSH1 0x20
0x99b ADD
0x99c PUSH1 0x40
0x99e MLOAD
0x99f SWAP1
0x9a0 DUP2
0x9a1 ADD
0x9a2 PUSH1 0x40
0x9a4 MSTORE
0x9a5 DUP1
0x9a6 SWAP3
0x9a7 SWAP2
0x9a8 SWAP1
0x9a9 DUP2
0x9aa DUP2
0x9ab MSTORE
0x9ac PUSH1 0x20
0x9ae ADD
0x9af DUP3
0x9b0 DUP1
0x9b1 SLOAD
0x9b2 PUSH1 0x1
0x9b4 DUP2
0x9b5 PUSH1 0x1
0x9b7 AND
0x9b8 ISZERO
0x9b9 PUSH2 0x100
0x9bc MUL
0x9bd SUB
0x9be AND
0x9bf PUSH1 0x2
0x9c1 SWAP1
0x9c2 DIV
0x9c3 DUP1
0x9c4 ISZERO
0x9c5 PUSH2 0xa0f
0x9c8 JUMPI
---
0x979: JUMPDEST 
0x97a: V896 = 0x3
0x97d: V897 = S[0x3]
0x97e: V898 = 0x1
0x981: V899 = 0x1
0x983: V900 = AND 0x1 V897
0x984: V901 = ISZERO V900
0x985: V902 = 0x100
0x988: V903 = MUL 0x100 V901
0x989: V904 = SUB V903 0x1
0x98a: V905 = AND V904 V897
0x98b: V906 = 0x2
0x98e: V907 = DIV V905 0x2
0x990: V908 = 0x1f
0x992: V909 = ADD 0x1f V907
0x993: V910 = 0x20
0x997: V911 = DIV V909 0x20
0x998: V912 = MUL V911 0x20
0x999: V913 = 0x20
0x99b: V914 = ADD 0x20 V912
0x99c: V915 = 0x40
0x99e: V916 = M[0x40]
0x9a1: V917 = ADD V916 V914
0x9a2: V918 = 0x40
0x9a4: M[0x40] = V917
0x9ab: M[V916] = V907
0x9ac: V919 = 0x20
0x9ae: V920 = ADD 0x20 V916
0x9b1: V921 = S[0x3]
0x9b2: V922 = 0x1
0x9b5: V923 = 0x1
0x9b7: V924 = AND 0x1 V921
0x9b8: V925 = ISZERO V924
0x9b9: V926 = 0x100
0x9bc: V927 = MUL 0x100 V925
0x9bd: V928 = SUB V927 0x1
0x9be: V929 = AND V928 V921
0x9bf: V930 = 0x2
0x9c2: V931 = DIV V929 0x2
0x9c4: V932 = ISZERO V931
0x9c5: V933 = 0xa0f
0x9c8: JUMPI 0xa0f V932
---
Entry stack: [V12, 0x1f5]
Stack pops: 0
Stack additions: [V916, 0x3, V907, V920, 0x3, V931]
Exit stack: [V12, 0x1f5, V916, 0x3, V907, V920, 0x3, V931]

================================

Block 0x9c9
[0x9c9:0x9d0]
---
Predecessors: [0x979]
Successors: [0x9d1, 0x9e4]
---
0x9c9 DUP1
0x9ca PUSH1 0x1f
0x9cc LT
0x9cd PUSH2 0x9e4
0x9d0 JUMPI
---
0x9ca: V934 = 0x1f
0x9cc: V935 = LT 0x1f V931
0x9cd: V936 = 0x9e4
0x9d0: JUMPI 0x9e4 V935
---
Entry stack: [V12, 0x1f5, V916, 0x3, V907, V920, 0x3, V931]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1f5, V916, 0x3, V907, V920, 0x3, V931]

================================

Block 0x9d1
[0x9d1:0x9e3]
---
Predecessors: [0x9c9]
Successors: [0xa0f]
---
0x9d1 PUSH2 0x100
0x9d4 DUP1
0x9d5 DUP4
0x9d6 SLOAD
0x9d7 DIV
0x9d8 MUL
0x9d9 DUP4
0x9da MSTORE
0x9db SWAP2
0x9dc PUSH1 0x20
0x9de ADD
0x9df SWAP2
0x9e0 PUSH2 0xa0f
0x9e3 JUMP
---
0x9d1: V937 = 0x100
0x9d6: V938 = S[0x3]
0x9d7: V939 = DIV V938 0x100
0x9d8: V940 = MUL V939 0x100
0x9da: M[V920] = V940
0x9dc: V941 = 0x20
0x9de: V942 = ADD 0x20 V920
0x9e0: V943 = 0xa0f
0x9e3: JUMP 0xa0f
---
Entry stack: [V12, 0x1f5, V916, 0x3, V907, V920, 0x3, V931]
Stack pops: 3
Stack additions: [V942, S1, S0]
Exit stack: [V12, 0x1f5, V916, 0x3, V907, V942, 0x3, V931]

================================

Block 0x9e4
[0x9e4:0x9f1]
---
Predecessors: [0x9c9, 0x119c]
Successors: [0x9f2]
---
0x9e4 JUMPDEST
0x9e5 DUP3
0x9e6 ADD
0x9e7 SWAP2
0x9e8 SWAP1
0x9e9 PUSH1 0x0
0x9eb MSTORE
0x9ec PUSH1 0x20
0x9ee PUSH1 0x0
0x9f0 SHA3
0x9f1 SWAP1
---
0x9e4: JUMPDEST 
0x9e6: V944 = ADD S2 S0
0x9e9: V945 = 0x0
0x9eb: M[0x0] = {0x3, 0x4}
0x9ec: V946 = 0x20
0x9ee: V947 = 0x0
0x9f0: V948 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x1f5, S5, {0x3, 0x4}, S3, S2, {0x3, 0x4}, S0]
Stack pops: 3
Stack additions: [V944, V948, S2]
Exit stack: [V12, 0x1f5, S5, {0x3, 0x4}, S3, V944, V948, S2]

================================

Block 0x9f2
[0x9f2:0xa05]
---
Predecessors: [0x9e4, 0x9f2, 0x11c5]
Successors: [0x9f2, 0xa06]
---
0x9f2 JUMPDEST
0x9f3 DUP2
0x9f4 SLOAD
0x9f5 DUP2
0x9f6 MSTORE
0x9f7 SWAP1
0x9f8 PUSH1 0x1
0x9fa ADD
0x9fb SWAP1
0x9fc PUSH1 0x20
0x9fe ADD
0x9ff DUP1
0xa00 DUP4
0xa01 GT
0xa02 PUSH2 0x9f2
0xa05 JUMPI
---
0x9f2: JUMPDEST 
0x9f4: V949 = S[S1]
0x9f6: M[S0] = V949
0x9f8: V950 = 0x1
0x9fa: V951 = ADD 0x1 S1
0x9fc: V952 = 0x20
0x9fe: V953 = ADD 0x20 S0
0xa01: V954 = GT S2 V953
0xa02: V955 = 0x9f2
0xa05: JUMPI 0x9f2 V954
---
Entry stack: [V12, 0x1f5, S5, {0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V951, V953]
Exit stack: [V12, 0x1f5, S5, {0x3, 0x4}, S3, S2, V951, V953]

================================

Block 0xa06
[0xa06:0xa0e]
---
Predecessors: [0x9f2]
Successors: [0xa0f]
---
0xa06 DUP3
0xa07 SWAP1
0xa08 SUB
0xa09 PUSH1 0x1f
0xa0b AND
0xa0c DUP3
0xa0d ADD
0xa0e SWAP2
---
0xa08: V956 = SUB V953 S2
0xa09: V957 = 0x1f
0xa0b: V958 = AND 0x1f V956
0xa0d: V959 = ADD S2 V958
---
Entry stack: [V12, 0x1f5, S5, {0x3, 0x4}, S3, S2, V951, V953]
Stack pops: 3
Stack additions: [V959, S1, S2]
Exit stack: [V12, 0x1f5, S5, {0x3, 0x4}, S3, V959, V951, S2]

================================

Block 0xa0f
[0xa0f:0xa16]
---
Predecessors: [0x979, 0x9d1, 0xa06, 0x114c, 0x11a4]
Successors: [0x1f5]
---
0xa0f JUMPDEST
0xa10 POP
0xa11 POP
0xa12 POP
0xa13 POP
0xa14 POP
0xa15 DUP2
0xa16 JUMP
---
0xa0f: JUMPDEST 
0xa16: JUMP 0x1f5
---
Entry stack: [V12, 0x1f5, S5, {0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x1f5, S5]

================================

Block 0xa17
[0xa17:0xa28]
---
Predecessors: [0x278]
Successors: [0xa29, 0xaba]
---
0xa17 JUMPDEST
0xa18 PUSH1 0x0
0xa1a PUSH1 0x1
0xa1c PUSH1 0xa0
0xa1e PUSH1 0x2
0xa20 EXP
0xa21 SUB
0xa22 DUP4
0xa23 AND
0xa24 ISZERO
0xa25 PUSH2 0xaba
0xa28 JUMPI
---
0xa17: JUMPDEST 
0xa18: V960 = 0x0
0xa1a: V961 = 0x1
0xa1c: V962 = 0xa0
0xa1e: V963 = 0x2
0xa20: V964 = EXP 0x2 0xa0
0xa21: V965 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa23: V966 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0xa24: V967 = ISZERO V966
0xa25: V968 = 0xaba
0xa28: JUMPI 0xaba V967
---
Entry stack: [V12, 0x28f, V209, V211]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x28f, V209, V211, 0x0]

================================

Block 0xa29
[0xa29:0xa2f]
---
Predecessors: [0xa17]
Successors: [0x968]
---
0xa29 PUSH2 0xa30
0xa2c PUSH2 0x968
0xa2f JUMP
---
0xa29: V969 = 0xa30
0xa2c: V970 = 0x968
0xa2f: JUMP 0x968
---
Entry stack: [V12, 0x28f, V209, V211, 0x0]
Stack pops: 0
Stack additions: [0xa30]
Exit stack: [V12, 0x28f, V209, V211, 0x0, 0xa30]

================================

Block 0xa30
[0xa30:0xa93]
---
Predecessors: [0x976]
Successors: [0xa94, 0xa98]
---
0xa30 JUMPDEST
0xa31 PUSH1 0x1
0xa33 PUSH1 0xa0
0xa35 PUSH1 0x2
0xa37 EXP
0xa38 SUB
0xa39 AND
0xa3a PUSH4 0x7b7054c8
0xa3f DUP5
0xa40 DUP5
0xa41 CALLER
0xa42 PUSH1 0x0
0xa44 PUSH1 0x40
0xa46 MLOAD
0xa47 PUSH1 0x20
0xa49 ADD
0xa4a MSTORE
0xa4b PUSH1 0x40
0xa4d MLOAD
0xa4e PUSH1 0xe0
0xa50 PUSH1 0x2
0xa52 EXP
0xa53 PUSH4 0xffffffff
0xa58 DUP7
0xa59 AND
0xa5a MUL
0xa5b DUP2
0xa5c MSTORE
0xa5d PUSH1 0x1
0xa5f PUSH1 0xa0
0xa61 PUSH1 0x2
0xa63 EXP
0xa64 SUB
0xa65 SWAP4
0xa66 DUP5
0xa67 AND
0xa68 PUSH1 0x4
0xa6a DUP3
0xa6b ADD
0xa6c MSTORE
0xa6d PUSH1 0x24
0xa6f DUP2
0xa70 ADD
0xa71 SWAP3
0xa72 SWAP1
0xa73 SWAP3
0xa74 MSTORE
0xa75 SWAP1
0xa76 SWAP2
0xa77 AND
0xa78 PUSH1 0x44
0xa7a DUP3
0xa7b ADD
0xa7c MSTORE
0xa7d PUSH1 0x64
0xa7f ADD
0xa80 PUSH1 0x20
0xa82 PUSH1 0x40
0xa84 MLOAD
0xa85 DUP1
0xa86 DUP4
0xa87 SUB
0xa88 DUP2
0xa89 PUSH1 0x0
0xa8b DUP8
0xa8c DUP1
0xa8d EXTCODESIZE
0xa8e ISZERO
0xa8f ISZERO
0xa90 PUSH2 0xa98
0xa93 JUMPI
---
0xa30: JUMPDEST 
0xa31: V971 = 0x1
0xa33: V972 = 0xa0
0xa35: V973 = 0x2
0xa37: V974 = EXP 0x2 0xa0
0xa38: V975 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa39: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa3a: V977 = 0x7b7054c8
0xa41: V978 = CALLER
0xa42: V979 = 0x0
0xa44: V980 = 0x40
0xa46: V981 = M[0x40]
0xa47: V982 = 0x20
0xa49: V983 = ADD 0x20 V981
0xa4a: M[V983] = 0x0
0xa4b: V984 = 0x40
0xa4d: V985 = M[0x40]
0xa4e: V986 = 0xe0
0xa50: V987 = 0x2
0xa52: V988 = EXP 0x2 0xe0
0xa53: V989 = 0xffffffff
0xa59: V990 = AND 0x7b7054c8 0xffffffff
0xa5a: V991 = MUL 0x7b7054c8 0x100000000000000000000000000000000000000000000000000000000
0xa5c: M[V985] = 0x7b7054c800000000000000000000000000000000000000000000000000000000
0xa5d: V992 = 0x1
0xa5f: V993 = 0xa0
0xa61: V994 = 0x2
0xa63: V995 = EXP 0x2 0xa0
0xa64: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa67: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa68: V998 = 0x4
0xa6b: V999 = ADD V985 0x4
0xa6c: M[V999] = V997
0xa6d: V1000 = 0x24
0xa70: V1001 = ADD V985 0x24
0xa74: M[V1001] = S2
0xa77: V1002 = AND 0xffffffffffffffffffffffffffffffffffffffff V978
0xa78: V1003 = 0x44
0xa7b: V1004 = ADD V985 0x44
0xa7c: M[V1004] = V1002
0xa7d: V1005 = 0x64
0xa7f: V1006 = ADD 0x64 V985
0xa80: V1007 = 0x20
0xa82: V1008 = 0x40
0xa84: V1009 = M[0x40]
0xa87: V1010 = SUB V1006 V1009
0xa89: V1011 = 0x0
0xa8d: V1012 = EXTCODESIZE V976
0xa8e: V1013 = ISZERO V1012
0xa8f: V1014 = ISZERO V1013
0xa90: V1015 = 0xa98
0xa93: JUMPI 0xa98 V1014
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V976, 0x7b7054c8, V1006, 0x20, V1009, V1010, V1009, 0x0, V976]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V976, 0x7b7054c8, V1006, 0x20, V1009, V1010, V1009, 0x0, V976]

================================

Block 0xa94
[0xa94:0xa97]
---
Predecessors: [0xa30]
Successors: []
---
0xa94 PUSH1 0x0
0xa96 DUP1
0xa97 REVERT
---
0xa94: V1016 = 0x0
0xa97: REVERT 0x0 0x0
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V976, 0x7b7054c8, V1006, 0x20, V1009, V1010, V1009, 0x0, V976]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V976, 0x7b7054c8, V1006, 0x20, V1009, V1010, V1009, 0x0, V976]

================================

Block 0xa98
[0xa98:0xaa4]
---
Predecessors: [0xa30]
Successors: [0xaa5, 0xaa9]
---
0xa98 JUMPDEST
0xa99 PUSH2 0x2c6
0xa9c GAS
0xa9d SUB
0xa9e CALL
0xa9f ISZERO
0xaa0 ISZERO
0xaa1 PUSH2 0xaa9
0xaa4 JUMPI
---
0xa98: JUMPDEST 
0xa99: V1017 = 0x2c6
0xa9c: V1018 = GAS
0xa9d: V1019 = SUB V1018 0x2c6
0xa9e: V1020 = CALL V1019 V976 0x0 V1009 V1010 V1009 0x20
0xa9f: V1021 = ISZERO V1020
0xaa0: V1022 = ISZERO V1021
0xaa1: V1023 = 0xaa9
0xaa4: JUMPI 0xaa9 V1022
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V976, 0x7b7054c8, V1006, 0x20, V1009, V1010, V1009, 0x0, V976]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V976, 0x7b7054c8, V1006]

================================

Block 0xaa5
[0xaa5:0xaa8]
---
Predecessors: [0xa98]
Successors: []
---
0xaa5 PUSH1 0x0
0xaa7 DUP1
0xaa8 REVERT
---
0xaa5: V1024 = 0x0
0xaa8: REVERT 0x0 0x0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V976, 0x7b7054c8, V1006]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V976, 0x7b7054c8, V1006]

================================

Block 0xaa9
[0xaa9:0xab9]
---
Predecessors: [0xa98]
Successors: [0xabe]
---
0xaa9 JUMPDEST
0xaaa POP
0xaab POP
0xaac POP
0xaad PUSH1 0x40
0xaaf MLOAD
0xab0 DUP1
0xab1 MLOAD
0xab2 SWAP1
0xab3 POP
0xab4 SWAP1
0xab5 POP
0xab6 PUSH2 0xabe
0xab9 JUMP
---
0xaa9: JUMPDEST 
0xaad: V1025 = 0x40
0xaaf: V1026 = M[0x40]
0xab1: V1027 = M[V1026]
0xab6: V1028 = 0xabe
0xab9: JUMP 0xabe
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V976, 0x7b7054c8, V1006]
Stack pops: 4
Stack additions: [V1027]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1027]

================================

Block 0xaba
[0xaba:0xabd]
---
Predecessors: [0xa17, 0x11fa]
Successors: [0xabe]
---
0xaba JUMPDEST
0xabb POP
0xabc PUSH1 0x0
---
0xaba: JUMPDEST 
0xabc: V1029 = 0x0
---
Entry stack: [V12, 0x28f, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, S2, S1, 0x0]

================================

Block 0xabe
[0xabe:0xabe]
---
Predecessors: [0xaa9, 0xaba, 0x1224, 0x122b]
Successors: [0xabf]
---
0xabe JUMPDEST
---
0xabe: JUMPDEST 
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xabf
[0xabf:0xac4]
---
Predecessors: [0xabe]
Successors: [0x28f]
---
0xabf JUMPDEST
0xac0 SWAP3
0xac1 SWAP2
0xac2 POP
0xac3 POP
0xac4 JUMP
---
0xabf: JUMPDEST 
0xac4: JUMP S3
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0xac5
[0xac5:0xada]
---
Predecessors: [0x2ae]
Successors: [0xadb, 0xae2]
---
0xac5 JUMPDEST
0xac6 PUSH1 0x6
0xac8 SLOAD
0xac9 PUSH1 0x0
0xacb SWAP1
0xacc PUSH1 0x1
0xace PUSH1 0xa0
0xad0 PUSH1 0x2
0xad2 EXP
0xad3 SUB
0xad4 AND
0xad5 ISZERO
0xad6 ISZERO
0xad7 PUSH2 0xae2
0xada JUMPI
---
0xac5: JUMPDEST 
0xac6: V1030 = 0x6
0xac8: V1031 = S[0x6]
0xac9: V1032 = 0x0
0xacc: V1033 = 0x1
0xace: V1034 = 0xa0
0xad0: V1035 = 0x2
0xad2: V1036 = EXP 0x2 0xa0
0xad3: V1037 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad4: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1031
0xad5: V1039 = ISZERO V1038
0xad6: V1040 = ISZERO V1039
0xad7: V1041 = 0xae2
0xada: JUMPI 0xae2 V1040
---
Entry stack: [V12, 0x28f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0xadb
[0xadb:0xae1]
---
Predecessors: [0xac5]
Successors: [0x976]
---
0xadb POP
0xadc PUSH1 0x0
0xade PUSH2 0x976
0xae1 JUMP
---
0xadc: V1042 = 0x0
0xade: V1043 = 0x976
0xae1: JUMP 0x976
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0xae2
[0xae2:0xaf1]
---
Predecessors: [0xac5]
Successors: [0xaf2, 0xaf9]
---
0xae2 JUMPDEST
0xae3 TIMESTAMP
0xae4 PUSH3 0x3f480
0xae8 PUSH1 0x7
0xaea SLOAD
0xaeb ADD
0xaec GT
0xaed ISZERO
0xaee PUSH2 0xaf9
0xaf1 JUMPI
---
0xae2: JUMPDEST 
0xae3: V1044 = TIMESTAMP
0xae4: V1045 = 0x3f480
0xae8: V1046 = 0x7
0xaea: V1047 = S[0x7]
0xaeb: V1048 = ADD V1047 0x3f480
0xaec: V1049 = GT V1048 V1044
0xaed: V1050 = ISZERO V1049
0xaee: V1051 = 0xaf9
0xaf1: JUMPI 0xaf9 V1050
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0xaf2
[0xaf2:0xaf8]
---
Predecessors: [0xae2]
Successors: [0x976]
---
0xaf2 POP
0xaf3 PUSH1 0x0
0xaf5 PUSH2 0x976
0xaf8 JUMP
---
0xaf3: V1052 = 0x0
0xaf5: V1053 = 0x976
0xaf8: JUMP 0x976
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0xaf9
[0xaf9:0xb26]
---
Predecessors: [0xae2]
Successors: [0xb27]
---
0xaf9 JUMPDEST
0xafa POP
0xafb PUSH1 0x6
0xafd DUP1
0xafe SLOAD
0xaff PUSH1 0x5
0xb01 DUP1
0xb02 SLOAD
0xb03 PUSH1 0x1
0xb05 PUSH1 0xa0
0xb07 PUSH1 0x2
0xb09 EXP
0xb0a SUB
0xb0b NOT
0xb0c SWAP1
0xb0d DUP2
0xb0e AND
0xb0f PUSH1 0x1
0xb11 PUSH1 0xa0
0xb13 PUSH1 0x2
0xb15 EXP
0xb16 SUB
0xb17 DUP5
0xb18 AND
0xb19 OR
0xb1a SWAP1
0xb1b SWAP2
0xb1c SSTORE
0xb1d AND
0xb1e SWAP1
0xb1f SSTORE
0xb20 PUSH1 0x0
0xb22 PUSH1 0x7
0xb24 SSTORE
0xb25 PUSH1 0x1
---
0xaf9: JUMPDEST 
0xafb: V1054 = 0x6
0xafe: V1055 = S[0x6]
0xaff: V1056 = 0x5
0xb02: V1057 = S[0x5]
0xb03: V1058 = 0x1
0xb05: V1059 = 0xa0
0xb07: V1060 = 0x2
0xb09: V1061 = EXP 0x2 0xa0
0xb0a: V1062 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0b: V1063 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb0e: V1064 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1057
0xb0f: V1065 = 0x1
0xb11: V1066 = 0xa0
0xb13: V1067 = 0x2
0xb15: V1068 = EXP 0x2 0xa0
0xb16: V1069 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb18: V1070 = AND V1055 0xffffffffffffffffffffffffffffffffffffffff
0xb19: V1071 = OR V1070 V1064
0xb1c: S[0x5] = V1071
0xb1d: V1072 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1055
0xb1f: S[0x6] = V1072
0xb20: V1073 = 0x0
0xb22: V1074 = 0x7
0xb24: S[0x7] = 0x0
0xb25: V1075 = 0x1
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x28f, 0x1]

================================

Block 0xb27
[0xb27:0xb29]
---
Predecessors: [0xaf9]
Successors: [0x28f]
---
0xb27 JUMPDEST
0xb28 SWAP1
0xb29 JUMP
---
0xb27: JUMPDEST 
0xb29: JUMP 0x28f
---
Entry stack: [V12, 0x28f, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0xb2a
[0xb2a:0xb36]
---
Predecessors: [0x2d5]
Successors: [0xb37]
---
0xb2a JUMPDEST
0xb2b PUSH1 0x5
0xb2d SLOAD
0xb2e PUSH1 0x1
0xb30 PUSH1 0xa0
0xb32 PUSH1 0x2
0xb34 EXP
0xb35 SUB
0xb36 AND
---
0xb2a: JUMPDEST 
0xb2b: V1076 = 0x5
0xb2d: V1077 = S[0x5]
0xb2e: V1078 = 0x1
0xb30: V1079 = 0xa0
0xb32: V1080 = 0x2
0xb34: V1081 = EXP 0x2 0xa0
0xb35: V1082 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb36: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff V1077
---
Entry stack: [V12, 0x2dd]
Stack pops: 0
Stack additions: [V1083]
Exit stack: [V12, 0x2dd, V1083]

================================

Block 0xb37
[0xb37:0xb39]
---
Predecessors: [0xb2a]
Successors: [0x2dd]
---
0xb37 JUMPDEST
0xb38 SWAP1
0xb39 JUMP
---
0xb37: JUMPDEST 
0xb39: JUMP 0x2dd
---
Entry stack: [V12, 0x2dd, V1083]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V1083]

================================

Block 0xb3a
[0xb3a:0xb8c]
---
Predecessors: [0x304]
Successors: [0xb8d, 0xb91]
---
0xb3a JUMPDEST
0xb3b PUSH1 0x1
0xb3d SLOAD
0xb3e PUSH1 0x2
0xb40 SLOAD
0xb41 PUSH1 0x0
0xb43 SWAP2
0xb44 PUSH1 0x1
0xb46 PUSH1 0xa0
0xb48 PUSH1 0x2
0xb4a EXP
0xb4b SUB
0xb4c AND
0xb4d SWAP1
0xb4e PUSH4 0xb524abcf
0xb53 SWAP1
0xb54 DUP4
0xb55 PUSH1 0x40
0xb57 MLOAD
0xb58 PUSH1 0x20
0xb5a ADD
0xb5b MSTORE
0xb5c PUSH1 0x40
0xb5e MLOAD
0xb5f PUSH1 0xe0
0xb61 PUSH1 0x2
0xb63 EXP
0xb64 PUSH4 0xffffffff
0xb69 DUP5
0xb6a AND
0xb6b MUL
0xb6c DUP2
0xb6d MSTORE
0xb6e PUSH1 0x4
0xb70 DUP2
0xb71 ADD
0xb72 SWAP2
0xb73 SWAP1
0xb74 SWAP2
0xb75 MSTORE
0xb76 PUSH1 0x24
0xb78 ADD
0xb79 PUSH1 0x20
0xb7b PUSH1 0x40
0xb7d MLOAD
0xb7e DUP1
0xb7f DUP4
0xb80 SUB
0xb81 DUP2
0xb82 PUSH1 0x0
0xb84 DUP8
0xb85 DUP1
0xb86 EXTCODESIZE
0xb87 ISZERO
0xb88 ISZERO
0xb89 PUSH2 0xb91
0xb8c JUMPI
---
0xb3a: JUMPDEST 
0xb3b: V1084 = 0x1
0xb3d: V1085 = S[0x1]
0xb3e: V1086 = 0x2
0xb40: V1087 = S[0x2]
0xb41: V1088 = 0x0
0xb44: V1089 = 0x1
0xb46: V1090 = 0xa0
0xb48: V1091 = 0x2
0xb4a: V1092 = EXP 0x2 0xa0
0xb4b: V1093 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4c: V1094 = AND 0xffffffffffffffffffffffffffffffffffffffff V1085
0xb4e: V1095 = 0xb524abcf
0xb55: V1096 = 0x40
0xb57: V1097 = M[0x40]
0xb58: V1098 = 0x20
0xb5a: V1099 = ADD 0x20 V1097
0xb5b: M[V1099] = 0x0
0xb5c: V1100 = 0x40
0xb5e: V1101 = M[0x40]
0xb5f: V1102 = 0xe0
0xb61: V1103 = 0x2
0xb63: V1104 = EXP 0x2 0xe0
0xb64: V1105 = 0xffffffff
0xb6a: V1106 = AND 0xb524abcf 0xffffffff
0xb6b: V1107 = MUL 0xb524abcf 0x100000000000000000000000000000000000000000000000000000000
0xb6d: M[V1101] = 0xb524abcf00000000000000000000000000000000000000000000000000000000
0xb6e: V1108 = 0x4
0xb71: V1109 = ADD V1101 0x4
0xb75: M[V1109] = V1087
0xb76: V1110 = 0x24
0xb78: V1111 = ADD 0x24 V1101
0xb79: V1112 = 0x20
0xb7b: V1113 = 0x40
0xb7d: V1114 = M[0x40]
0xb80: V1115 = SUB V1111 V1114
0xb82: V1116 = 0x0
0xb86: V1117 = EXTCODESIZE V1094
0xb87: V1118 = ISZERO V1117
0xb88: V1119 = ISZERO V1118
0xb89: V1120 = 0xb91
0xb8c: JUMPI 0xb91 V1119
---
Entry stack: [V12, 0x30c]
Stack pops: 0
Stack additions: [0x0, V1094, 0xb524abcf, V1111, 0x20, V1114, V1115, V1114, 0x0, V1094]
Exit stack: [V12, 0x30c, 0x0, V1094, 0xb524abcf, V1111, 0x20, V1114, V1115, V1114, 0x0, V1094]

================================

Block 0xb8d
[0xb8d:0xb90]
---
Predecessors: [0xb3a]
Successors: []
---
0xb8d PUSH1 0x0
0xb8f DUP1
0xb90 REVERT
---
0xb8d: V1121 = 0x0
0xb90: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, 0x0, V1094, 0xb524abcf, V1111, 0x20, V1114, V1115, V1114, 0x0, V1094]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, 0x0, V1094, 0xb524abcf, V1111, 0x20, V1114, V1115, V1114, 0x0, V1094]

================================

Block 0xb91
[0xb91:0xb9d]
---
Predecessors: [0xb3a, 0xd52]
Successors: [0xb9e, 0xba2]
---
0xb91 JUMPDEST
0xb92 PUSH2 0x2c6
0xb95 GAS
0xb96 SUB
0xb97 CALL
0xb98 ISZERO
0xb99 ISZERO
0xb9a PUSH2 0xba2
0xb9d JUMPI
---
0xb91: JUMPDEST 
0xb92: V1122 = 0x2c6
0xb95: V1123 = GAS
0xb96: V1124 = SUB V1123 0x2c6
0xb97: V1125 = CALL V1124 S0 0x0 S2 S3 S4 0x20
0xb98: V1126 = ISZERO V1125
0xb99: V1127 = ISZERO V1126
0xb9a: V1128 = 0xba2
0xb9d: JUMPI 0xba2 V1127
---
Entry stack: [V12, {0x30c, 0x3f0}, 0x0, S8, {0xb524abcf, 0xdc86e6f0}, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x30c, 0x3f0}, 0x0, S8, {0xb524abcf, 0xdc86e6f0}, S6]

================================

Block 0xb9e
[0xb9e:0xba1]
---
Predecessors: [0xb91]
Successors: []
---
0xb9e PUSH1 0x0
0xba0 DUP1
0xba1 REVERT
---
0xb9e: V1129 = 0x0
0xba1: REVERT 0x0 0x0
---
Entry stack: [V12, {0x30c, 0x3f0}, 0x0, S2, {0xb524abcf, 0xdc86e6f0}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x30c, 0x3f0}, 0x0, S2, {0xb524abcf, 0xdc86e6f0}, S0]

================================

Block 0xba2
[0xba2:0xbad]
---
Predecessors: [0xb91, 0xda9]
Successors: [0xbae]
---
0xba2 JUMPDEST
0xba3 POP
0xba4 POP
0xba5 POP
0xba6 PUSH1 0x40
0xba8 MLOAD
0xba9 DUP1
0xbaa MLOAD
0xbab SWAP2
0xbac POP
0xbad POP
---
0xba2: JUMPDEST 
0xba6: V1130 = 0x40
0xba8: V1131 = M[0x40]
0xbaa: V1132 = M[V1131]
---
Entry stack: [V12, {0x30c, 0x3f0}, 0x0, S2, {0xb524abcf, 0xdc86e6f0}, S0]
Stack pops: 4
Stack additions: [V1132]
Exit stack: [V12, {0x30c, 0x3f0}, V1132]

================================

Block 0xbae
[0xbae:0xbb0]
---
Predecessors: [0xba2]
Successors: [0x30c, 0x3f0]
---
0xbae JUMPDEST
0xbaf SWAP1
0xbb0 JUMP
---
0xbae: JUMPDEST 
0xbb0: JUMP {0x30c, 0x3f0}
---
Entry stack: [V12, {0x30c, 0x3f0}, V1132]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V1132]

================================

Block 0xbb1
[0xbb1:0xbc8]
---
Predecessors: [0x329]
Successors: [0xbc9, 0xc10]
---
0xbb1 JUMPDEST
0xbb2 PUSH1 0x1
0xbb4 SLOAD
0xbb5 CALLER
0xbb6 PUSH1 0x1
0xbb8 PUSH1 0xa0
0xbba PUSH1 0x2
0xbbc EXP
0xbbd SUB
0xbbe SWAP1
0xbbf DUP2
0xbc0 AND
0xbc1 SWAP2
0xbc2 AND
0xbc3 EQ
0xbc4 ISZERO
0xbc5 PUSH2 0xc10
0xbc8 JUMPI
---
0xbb1: JUMPDEST 
0xbb2: V1133 = 0x1
0xbb4: V1134 = S[0x1]
0xbb5: V1135 = CALLER
0xbb6: V1136 = 0x1
0xbb8: V1137 = 0xa0
0xbba: V1138 = 0x2
0xbbc: V1139 = EXP 0x2 0xa0
0xbbd: V1140 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc0: V1141 = AND 0xffffffffffffffffffffffffffffffffffffffff V1135
0xbc2: V1142 = AND V1134 0xffffffffffffffffffffffffffffffffffffffff
0xbc3: V1143 = EQ V1142 V1141
0xbc4: V1144 = ISZERO V1143
0xbc5: V1145 = 0xc10
0xbc8: JUMPI 0xc10 V1144
---
Entry stack: [V12, 0x1e0, V281, V284, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e0, V281, V284, V286]

================================

Block 0xbc9
[0xbc9:0xc0f]
---
Predecessors: [0xbb1]
Successors: [0xc10]
---
0xbc9 DUP2
0xbca PUSH1 0x1
0xbcc PUSH1 0xa0
0xbce PUSH1 0x2
0xbd0 EXP
0xbd1 SUB
0xbd2 AND
0xbd3 DUP4
0xbd4 PUSH1 0x1
0xbd6 PUSH1 0xa0
0xbd8 PUSH1 0x2
0xbda EXP
0xbdb SUB
0xbdc AND
0xbdd PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xbfe DUP4
0xbff PUSH1 0x40
0xc01 MLOAD
0xc02 SWAP1
0xc03 DUP2
0xc04 MSTORE
0xc05 PUSH1 0x20
0xc07 ADD
0xc08 PUSH1 0x40
0xc0a MLOAD
0xc0b DUP1
0xc0c SWAP2
0xc0d SUB
0xc0e SWAP1
0xc0f LOG3
---
0xbca: V1146 = 0x1
0xbcc: V1147 = 0xa0
0xbce: V1148 = 0x2
0xbd0: V1149 = EXP 0x2 0xa0
0xbd1: V1150 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd2: V1151 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0xbd4: V1152 = 0x1
0xbd6: V1153 = 0xa0
0xbd8: V1154 = 0x2
0xbda: V1155 = EXP 0x2 0xa0
0xbdb: V1156 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbdc: V1157 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0xbdd: V1158 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xbff: V1159 = 0x40
0xc01: V1160 = M[0x40]
0xc04: M[V1160] = V286
0xc05: V1161 = 0x20
0xc07: V1162 = ADD 0x20 V1160
0xc08: V1163 = 0x40
0xc0a: V1164 = M[0x40]
0xc0d: V1165 = SUB V1162 V1164
0xc0f: LOG V1164 V1165 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V1157 V1151
---
Entry stack: [V12, 0x1e0, V281, V284, V286]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x1e0, V281, V284, V286]

================================

Block 0xc10
[0xc10:0xc10]
---
Predecessors: [0xbb1, 0xbc9, 0xcdd]
Successors: [0xc11]
---
0xc10 JUMPDEST
---
0xc10: JUMPDEST 
---
Entry stack: [V12, 0x1e0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e0, S2, S1, S0]

================================

Block 0xc11
[0xc11:0xc11]
---
Predecessors: [0xc10]
Successors: [0xc12]
---
0xc11 JUMPDEST
---
0xc11: JUMPDEST 
---
Entry stack: [V12, 0x1e0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e0, S2, S1, S0]

================================

Block 0xc12
[0xc12:0xc16]
---
Predecessors: [0xc11]
Successors: [0x1e0]
---
0xc12 JUMPDEST
0xc13 POP
0xc14 POP
0xc15 POP
0xc16 JUMP
---
0xc12: JUMPDEST 
0xc16: JUMP 0x1e0
---
Entry stack: [V12, 0x1e0, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xc17
[0xc17:0xc28]
---
Predecessors: [0x353]
Successors: [0xc29, 0xcd1]
---
0xc17 JUMPDEST
0xc18 PUSH1 0x0
0xc1a PUSH1 0x1
0xc1c PUSH1 0xa0
0xc1e PUSH1 0x2
0xc20 EXP
0xc21 SUB
0xc22 DUP4
0xc23 AND
0xc24 ISZERO
0xc25 PUSH2 0xcd1
0xc28 JUMPI
---
0xc17: JUMPDEST 
0xc18: V1166 = 0x0
0xc1a: V1167 = 0x1
0xc1c: V1168 = 0xa0
0xc1e: V1169 = 0x2
0xc20: V1170 = EXP 0x2 0xa0
0xc21: V1171 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc23: V1172 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0xc24: V1173 = ISZERO V1172
0xc25: V1174 = 0xcd1
0xc28: JUMPI 0xcd1 V1173
---
Entry stack: [V12, 0x28f, V300, V303, V305]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x28f, V300, V303, V305, 0x0]

================================

Block 0xc29
[0xc29:0xc2f]
---
Predecessors: [0xc17]
Successors: [0x968]
---
0xc29 PUSH2 0xc30
0xc2c PUSH2 0x968
0xc2f JUMP
---
0xc29: V1175 = 0xc30
0xc2c: V1176 = 0x968
0xc2f: JUMP 0x968
---
Entry stack: [V12, 0x28f, V300, V303, V305, 0x0]
Stack pops: 0
Stack additions: [0xc30]
Exit stack: [V12, 0x28f, V300, V303, V305, 0x0, 0xc30]

================================

Block 0xc30
[0xc30:0xcaa]
---
Predecessors: [0x976]
Successors: [0xcab, 0xcaf]
---
0xc30 JUMPDEST
0xc31 PUSH1 0x1
0xc33 PUSH1 0xa0
0xc35 PUSH1 0x2
0xc37 EXP
0xc38 SUB
0xc39 AND
0xc3a PUSH4 0xec698a28
0xc3f DUP6
0xc40 DUP6
0xc41 DUP6
0xc42 CALLER
0xc43 PUSH1 0x0
0xc45 PUSH1 0x40
0xc47 MLOAD
0xc48 PUSH1 0x20
0xc4a ADD
0xc4b MSTORE
0xc4c PUSH1 0x40
0xc4e MLOAD
0xc4f PUSH1 0xe0
0xc51 PUSH1 0x2
0xc53 EXP
0xc54 PUSH4 0xffffffff
0xc59 DUP8
0xc5a AND
0xc5b MUL
0xc5c DUP2
0xc5d MSTORE
0xc5e PUSH1 0x1
0xc60 PUSH1 0xa0
0xc62 PUSH1 0x2
0xc64 EXP
0xc65 SUB
0xc66 SWAP5
0xc67 DUP6
0xc68 AND
0xc69 PUSH1 0x4
0xc6b DUP3
0xc6c ADD
0xc6d MSTORE
0xc6e SWAP3
0xc6f DUP5
0xc70 AND
0xc71 PUSH1 0x24
0xc73 DUP5
0xc74 ADD
0xc75 MSTORE
0xc76 PUSH1 0x44
0xc78 DUP4
0xc79 ADD
0xc7a SWAP2
0xc7b SWAP1
0xc7c SWAP2
0xc7d MSTORE
0xc7e SWAP1
0xc7f SWAP2
0xc80 AND
0xc81 PUSH1 0x84
0xc83 DUP3
0xc84 ADD
0xc85 MSTORE
0xc86 PUSH1 0xa0
0xc88 PUSH1 0x64
0xc8a DUP3
0xc8b ADD
0xc8c MSTORE
0xc8d PUSH1 0x0
0xc8f PUSH1 0xa4
0xc91 DUP3
0xc92 ADD
0xc93 MSTORE
0xc94 PUSH1 0xe4
0xc96 ADD
0xc97 PUSH1 0x20
0xc99 PUSH1 0x40
0xc9b MLOAD
0xc9c DUP1
0xc9d DUP4
0xc9e SUB
0xc9f DUP2
0xca0 PUSH1 0x0
0xca2 DUP8
0xca3 DUP1
0xca4 EXTCODESIZE
0xca5 ISZERO
0xca6 ISZERO
0xca7 PUSH2 0xcaf
0xcaa JUMPI
---
0xc30: JUMPDEST 
0xc31: V1177 = 0x1
0xc33: V1178 = 0xa0
0xc35: V1179 = 0x2
0xc37: V1180 = EXP 0x2 0xa0
0xc38: V1181 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc39: V1182 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xc3a: V1183 = 0xec698a28
0xc42: V1184 = CALLER
0xc43: V1185 = 0x0
0xc45: V1186 = 0x40
0xc47: V1187 = M[0x40]
0xc48: V1188 = 0x20
0xc4a: V1189 = ADD 0x20 V1187
0xc4b: M[V1189] = 0x0
0xc4c: V1190 = 0x40
0xc4e: V1191 = M[0x40]
0xc4f: V1192 = 0xe0
0xc51: V1193 = 0x2
0xc53: V1194 = EXP 0x2 0xe0
0xc54: V1195 = 0xffffffff
0xc5a: V1196 = AND 0xec698a28 0xffffffff
0xc5b: V1197 = MUL 0xec698a28 0x100000000000000000000000000000000000000000000000000000000
0xc5d: M[V1191] = 0xec698a2800000000000000000000000000000000000000000000000000000000
0xc5e: V1198 = 0x1
0xc60: V1199 = 0xa0
0xc62: V1200 = 0x2
0xc64: V1201 = EXP 0x2 0xa0
0xc65: V1202 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc68: V1203 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc69: V1204 = 0x4
0xc6c: V1205 = ADD V1191 0x4
0xc6d: M[V1205] = V1203
0xc70: V1206 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc71: V1207 = 0x24
0xc74: V1208 = ADD V1191 0x24
0xc75: M[V1208] = V1206
0xc76: V1209 = 0x44
0xc79: V1210 = ADD V1191 0x44
0xc7d: M[V1210] = S2
0xc80: V1211 = AND 0xffffffffffffffffffffffffffffffffffffffff V1184
0xc81: V1212 = 0x84
0xc84: V1213 = ADD V1191 0x84
0xc85: M[V1213] = V1211
0xc86: V1214 = 0xa0
0xc88: V1215 = 0x64
0xc8b: V1216 = ADD V1191 0x64
0xc8c: M[V1216] = 0xa0
0xc8d: V1217 = 0x0
0xc8f: V1218 = 0xa4
0xc92: V1219 = ADD V1191 0xa4
0xc93: M[V1219] = 0x0
0xc94: V1220 = 0xe4
0xc96: V1221 = ADD 0xe4 V1191
0xc97: V1222 = 0x20
0xc99: V1223 = 0x40
0xc9b: V1224 = M[0x40]
0xc9e: V1225 = SUB V1221 V1224
0xca0: V1226 = 0x0
0xca4: V1227 = EXTCODESIZE V1182
0xca5: V1228 = ISZERO V1227
0xca6: V1229 = ISZERO V1228
0xca7: V1230 = 0xcaf
0xcaa: JUMPI 0xcaf V1229
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V1182, 0xec698a28, V1221, 0x20, V1224, V1225, V1224, 0x0, V1182]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1182, 0xec698a28, V1221, 0x20, V1224, V1225, V1224, 0x0, V1182]

================================

Block 0xcab
[0xcab:0xcae]
---
Predecessors: [0xc30]
Successors: []
---
0xcab PUSH1 0x0
0xcad DUP1
0xcae REVERT
---
0xcab: V1231 = 0x0
0xcae: REVERT 0x0 0x0
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1182, 0xec698a28, V1221, 0x20, V1224, V1225, V1224, 0x0, V1182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1182, 0xec698a28, V1221, 0x20, V1224, V1225, V1224, 0x0, V1182]

================================

Block 0xcaf
[0xcaf:0xcbb]
---
Predecessors: [0xc30]
Successors: [0xcbc, 0xcc0]
---
0xcaf JUMPDEST
0xcb0 PUSH2 0x2c6
0xcb3 GAS
0xcb4 SUB
0xcb5 CALL
0xcb6 ISZERO
0xcb7 ISZERO
0xcb8 PUSH2 0xcc0
0xcbb JUMPI
---
0xcaf: JUMPDEST 
0xcb0: V1232 = 0x2c6
0xcb3: V1233 = GAS
0xcb4: V1234 = SUB V1233 0x2c6
0xcb5: V1235 = CALL V1234 V1182 0x0 V1224 V1225 V1224 0x20
0xcb6: V1236 = ISZERO V1235
0xcb7: V1237 = ISZERO V1236
0xcb8: V1238 = 0xcc0
0xcbb: JUMPI 0xcc0 V1237
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1182, 0xec698a28, V1221, 0x20, V1224, V1225, V1224, 0x0, V1182]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1182, 0xec698a28, V1221]

================================

Block 0xcbc
[0xcbc:0xcbf]
---
Predecessors: [0xcaf]
Successors: []
---
0xcbc PUSH1 0x0
0xcbe DUP1
0xcbf REVERT
---
0xcbc: V1239 = 0x0
0xcbf: REVERT 0x0 0x0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1182, 0xec698a28, V1221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1182, 0xec698a28, V1221]

================================

Block 0xcc0
[0xcc0:0xcd0]
---
Predecessors: [0xcaf]
Successors: [0xcd5]
---
0xcc0 JUMPDEST
0xcc1 POP
0xcc2 POP
0xcc3 POP
0xcc4 PUSH1 0x40
0xcc6 MLOAD
0xcc7 DUP1
0xcc8 MLOAD
0xcc9 SWAP1
0xcca POP
0xccb SWAP1
0xccc POP
0xccd PUSH2 0xcd5
0xcd0 JUMP
---
0xcc0: JUMPDEST 
0xcc4: V1240 = 0x40
0xcc6: V1241 = M[0x40]
0xcc8: V1242 = M[V1241]
0xccd: V1243 = 0xcd5
0xcd0: JUMP 0xcd5
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1182, 0xec698a28, V1221]
Stack pops: 4
Stack additions: [V1242]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1242]

================================

Block 0xcd1
[0xcd1:0xcd4]
---
Predecessors: [0xc17, 0x123a]
Successors: [0xcd5]
---
0xcd1 JUMPDEST
0xcd2 POP
0xcd3 PUSH1 0x0
---
0xcd1: JUMPDEST 
0xcd3: V1244 = 0x0
---
Entry stack: [V12, 0x28f, S3, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, S3, S2, S1, 0x0]

================================

Block 0xcd5
[0xcd5:0xcd5]
---
Predecessors: [0xcc0, 0xcd1, 0x1256, 0x125d, 0x1282]
Successors: [0xcd6]
---
0xcd5 JUMPDEST
---
0xcd5: JUMPDEST 
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xcd6
[0xcd6:0xcdc]
---
Predecessors: [0xcd5]
Successors: [0x28f, 0x1224, 0x1256]
---
0xcd6 JUMPDEST
0xcd7 SWAP4
0xcd8 SWAP3
0xcd9 POP
0xcda POP
0xcdb POP
0xcdc JUMP
---
0xcd6: JUMPDEST 
0xcdc: JUMP S4
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S0]

================================

Block 0xcdd
[0xcdd:0xcf4]
---
Predecessors: [0x38f]
Successors: [0xc10, 0xcf5]
---
0xcdd JUMPDEST
0xcde PUSH1 0x1
0xce0 SLOAD
0xce1 CALLER
0xce2 PUSH1 0x1
0xce4 PUSH1 0xa0
0xce6 PUSH1 0x2
0xce8 EXP
0xce9 SUB
0xcea SWAP1
0xceb DUP2
0xcec AND
0xced SWAP2
0xcee AND
0xcef EQ
0xcf0 ISZERO
0xcf1 PUSH2 0xc10
0xcf4 JUMPI
---
0xcdd: JUMPDEST 
0xcde: V1245 = 0x1
0xce0: V1246 = S[0x1]
0xce1: V1247 = CALLER
0xce2: V1248 = 0x1
0xce4: V1249 = 0xa0
0xce6: V1250 = 0x2
0xce8: V1251 = EXP 0x2 0xa0
0xce9: V1252 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcec: V1253 = AND 0xffffffffffffffffffffffffffffffffffffffff V1247
0xcee: V1254 = AND V1246 0xffffffffffffffffffffffffffffffffffffffff
0xcef: V1255 = EQ V1254 V1253
0xcf0: V1256 = ISZERO V1255
0xcf1: V1257 = 0xc10
0xcf4: JUMPI 0xc10 V1256
---
Entry stack: [V12, 0x1e0, V328, V331, V333]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e0, V328, V331, V333]

================================

Block 0xcf5
[0xcf5:0xd3b]
---
Predecessors: [0xcdd]
Successors: [0xd3c]
---
0xcf5 DUP2
0xcf6 PUSH1 0x1
0xcf8 PUSH1 0xa0
0xcfa PUSH1 0x2
0xcfc EXP
0xcfd SUB
0xcfe AND
0xcff DUP4
0xd00 PUSH1 0x1
0xd02 PUSH1 0xa0
0xd04 PUSH1 0x2
0xd06 EXP
0xd07 SUB
0xd08 AND
0xd09 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd2a DUP4
0xd2b PUSH1 0x40
0xd2d MLOAD
0xd2e SWAP1
0xd2f DUP2
0xd30 MSTORE
0xd31 PUSH1 0x20
0xd33 ADD
0xd34 PUSH1 0x40
0xd36 MLOAD
0xd37 DUP1
0xd38 SWAP2
0xd39 SUB
0xd3a SWAP1
0xd3b LOG3
---
0xcf6: V1258 = 0x1
0xcf8: V1259 = 0xa0
0xcfa: V1260 = 0x2
0xcfc: V1261 = EXP 0x2 0xa0
0xcfd: V1262 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcfe: V1263 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0xd00: V1264 = 0x1
0xd02: V1265 = 0xa0
0xd04: V1266 = 0x2
0xd06: V1267 = EXP 0x2 0xa0
0xd07: V1268 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd08: V1269 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0xd09: V1270 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd2b: V1271 = 0x40
0xd2d: V1272 = M[0x40]
0xd30: M[V1272] = V333
0xd31: V1273 = 0x20
0xd33: V1274 = ADD 0x20 V1272
0xd34: V1275 = 0x40
0xd36: V1276 = M[0x40]
0xd39: V1277 = SUB V1274 V1276
0xd3b: LOG V1276 V1277 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1269 V1263
---
Entry stack: [V12, 0x1e0, V328, V331, V333]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x1e0, V328, V331, V333]

================================

Block 0xd3c
[0xd3c:0xd3c]
---
Predecessors: [0xcf5]
Successors: [0xd3d]
---
0xd3c JUMPDEST
---
0xd3c: JUMPDEST 
---
Entry stack: [V12, 0x1e0, V328, V331, V333]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e0, V328, V331, V333]

================================

Block 0xd3d
[0xd3d:0xd3d]
---
Predecessors: [0xd3c]
Successors: [0xd3e]
---
0xd3d JUMPDEST
---
0xd3d: JUMPDEST 
---
Entry stack: [V12, 0x1e0, V328, V331, V333]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e0, V328, V331, V333]

================================

Block 0xd3e
[0xd3e:0xd42]
---
Predecessors: [0xd3d]
Successors: [0x1e0]
---
0xd3e JUMPDEST
0xd3f POP
0xd40 POP
0xd41 POP
0xd42 JUMP
---
0xd3e: JUMPDEST 
0xd42: JUMP 0x1e0
---
Entry stack: [V12, 0x1e0, V328, V331, V333]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xd43
[0xd43:0xd51]
---
Predecessors: [0x3b9]
Successors: [0x2dd]
---
0xd43 JUMPDEST
0xd44 PUSH1 0x1
0xd46 SLOAD
0xd47 PUSH1 0x1
0xd49 PUSH1 0xa0
0xd4b PUSH1 0x2
0xd4d EXP
0xd4e SUB
0xd4f AND
0xd50 DUP2
0xd51 JUMP
---
0xd43: JUMPDEST 
0xd44: V1278 = 0x1
0xd46: V1279 = S[0x1]
0xd47: V1280 = 0x1
0xd49: V1281 = 0xa0
0xd4b: V1282 = 0x2
0xd4d: V1283 = EXP 0x2 0xa0
0xd4e: V1284 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4f: V1285 = AND 0xffffffffffffffffffffffffffffffffffffffff V1279
0xd51: JUMP 0x2dd
---
Entry stack: [V12, 0x2dd]
Stack pops: 1
Stack additions: [S0, V1285]
Exit stack: [V12, 0x2dd, V1285]

================================

Block 0xd52
[0xd52:0xda4]
---
Predecessors: [0x3e8]
Successors: [0xb91, 0xda5]
---
0xd52 JUMPDEST
0xd53 PUSH1 0x1
0xd55 SLOAD
0xd56 PUSH1 0x2
0xd58 SLOAD
0xd59 PUSH1 0x0
0xd5b SWAP2
0xd5c PUSH1 0x1
0xd5e PUSH1 0xa0
0xd60 PUSH1 0x2
0xd62 EXP
0xd63 SUB
0xd64 AND
0xd65 SWAP1
0xd66 PUSH4 0xdc86e6f0
0xd6b SWAP1
0xd6c DUP4
0xd6d PUSH1 0x40
0xd6f MLOAD
0xd70 PUSH1 0x20
0xd72 ADD
0xd73 MSTORE
0xd74 PUSH1 0x40
0xd76 MLOAD
0xd77 PUSH1 0xe0
0xd79 PUSH1 0x2
0xd7b EXP
0xd7c PUSH4 0xffffffff
0xd81 DUP5
0xd82 AND
0xd83 MUL
0xd84 DUP2
0xd85 MSTORE
0xd86 PUSH1 0x4
0xd88 DUP2
0xd89 ADD
0xd8a SWAP2
0xd8b SWAP1
0xd8c SWAP2
0xd8d MSTORE
0xd8e PUSH1 0x24
0xd90 ADD
0xd91 PUSH1 0x20
0xd93 PUSH1 0x40
0xd95 MLOAD
0xd96 DUP1
0xd97 DUP4
0xd98 SUB
0xd99 DUP2
0xd9a PUSH1 0x0
0xd9c DUP8
0xd9d DUP1
0xd9e EXTCODESIZE
0xd9f ISZERO
0xda0 ISZERO
0xda1 PUSH2 0xb91
0xda4 JUMPI
---
0xd52: JUMPDEST 
0xd53: V1286 = 0x1
0xd55: V1287 = S[0x1]
0xd56: V1288 = 0x2
0xd58: V1289 = S[0x2]
0xd59: V1290 = 0x0
0xd5c: V1291 = 0x1
0xd5e: V1292 = 0xa0
0xd60: V1293 = 0x2
0xd62: V1294 = EXP 0x2 0xa0
0xd63: V1295 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd64: V1296 = AND 0xffffffffffffffffffffffffffffffffffffffff V1287
0xd66: V1297 = 0xdc86e6f0
0xd6d: V1298 = 0x40
0xd6f: V1299 = M[0x40]
0xd70: V1300 = 0x20
0xd72: V1301 = ADD 0x20 V1299
0xd73: M[V1301] = 0x0
0xd74: V1302 = 0x40
0xd76: V1303 = M[0x40]
0xd77: V1304 = 0xe0
0xd79: V1305 = 0x2
0xd7b: V1306 = EXP 0x2 0xe0
0xd7c: V1307 = 0xffffffff
0xd82: V1308 = AND 0xdc86e6f0 0xffffffff
0xd83: V1309 = MUL 0xdc86e6f0 0x100000000000000000000000000000000000000000000000000000000
0xd85: M[V1303] = 0xdc86e6f000000000000000000000000000000000000000000000000000000000
0xd86: V1310 = 0x4
0xd89: V1311 = ADD V1303 0x4
0xd8d: M[V1311] = V1289
0xd8e: V1312 = 0x24
0xd90: V1313 = ADD 0x24 V1303
0xd91: V1314 = 0x20
0xd93: V1315 = 0x40
0xd95: V1316 = M[0x40]
0xd98: V1317 = SUB V1313 V1316
0xd9a: V1318 = 0x0
0xd9e: V1319 = EXTCODESIZE V1296
0xd9f: V1320 = ISZERO V1319
0xda0: V1321 = ISZERO V1320
0xda1: V1322 = 0xb91
0xda4: JUMPI 0xb91 V1321
---
Entry stack: [V12, 0x3f0]
Stack pops: 0
Stack additions: [0x0, V1296, 0xdc86e6f0, V1313, 0x20, V1316, V1317, V1316, 0x0, V1296]
Exit stack: [V12, 0x3f0, 0x0, V1296, 0xdc86e6f0, V1313, 0x20, V1316, V1317, V1316, 0x0, V1296]

================================

Block 0xda5
[0xda5:0xda8]
---
Predecessors: [0xd52]
Successors: []
---
0xda5 PUSH1 0x0
0xda7 DUP1
0xda8 REVERT
---
0xda5: V1323 = 0x0
0xda8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3f0, 0x0, V1296, 0xdc86e6f0, V1313, 0x20, V1316, V1317, V1316, 0x0, V1296]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3f0, 0x0, V1296, 0xdc86e6f0, V1313, 0x20, V1316, V1317, V1316, 0x0, V1296]

================================

Block 0xda9
[0xda9:0xdb5]
---
Predecessors: []
Successors: [0xba2, 0xdb6]
---
0xda9 JUMPDEST
0xdaa PUSH2 0x2c6
0xdad GAS
0xdae SUB
0xdaf CALL
0xdb0 ISZERO
0xdb1 ISZERO
0xdb2 PUSH2 0xba2
0xdb5 JUMPI
---
0xda9: JUMPDEST 
0xdaa: V1324 = 0x2c6
0xdad: V1325 = GAS
0xdae: V1326 = SUB V1325 0x2c6
0xdaf: V1327 = CALL V1326 S0 S1 S2 S3 S4 S5
0xdb0: V1328 = ISZERO V1327
0xdb1: V1329 = ISZERO V1328
0xdb2: V1330 = 0xba2
0xdb5: JUMPI 0xba2 V1329
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xdb6
[0xdb6:0xdc5]
---
Predecessors: [0xda9]
Successors: [0xdc6]
---
0xdb6 PUSH1 0x0
0xdb8 DUP1
0xdb9 REVERT
0xdba JUMPDEST
0xdbb POP
0xdbc POP
0xdbd POP
0xdbe PUSH1 0x40
0xdc0 MLOAD
0xdc1 DUP1
0xdc2 MLOAD
0xdc3 SWAP2
0xdc4 POP
0xdc5 POP
---
0xdb6: V1331 = 0x0
0xdb9: REVERT 0x0 0x0
0xdba: JUMPDEST 
0xdbe: V1332 = 0x40
0xdc0: V1333 = M[0x40]
0xdc2: V1334 = M[V1333]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1334]
Exit stack: []

================================

Block 0xdc6
[0xdc6:0xdc8]
---
Predecessors: [0xdb6]
Successors: []
Has unresolved jump.
---
0xdc6 JUMPDEST
0xdc7 SWAP1
0xdc8 JUMP
---
0xdc6: JUMPDEST 
0xdc8: JUMP S1
---
Entry stack: [V1334]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V1334]

================================

Block 0xdc9
[0xdc9:0xdcc]
---
Predecessors: [0x411]
Successors: [0xdcd]
---
0xdc9 JUMPDEST
0xdca PUSH1 0x7
0xdcc SLOAD
---
0xdc9: JUMPDEST 
0xdca: V1335 = 0x7
0xdcc: V1336 = S[0x7]
---
Entry stack: [V12, 0x30c]
Stack pops: 0
Stack additions: [V1336]
Exit stack: [V12, 0x30c, V1336]

================================

Block 0xdcd
[0xdcd:0xdcf]
---
Predecessors: [0xdc9]
Successors: [0x30c]
---
0xdcd JUMPDEST
0xdce SWAP1
0xdcf JUMP
---
0xdcd: JUMPDEST 
0xdcf: JUMP 0x30c
---
Entry stack: [V12, 0x30c, V1336]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V1336]

================================

Block 0xdd0
[0xdd0:0xe31]
---
Predecessors: [0x436]
Successors: [0xe32, 0xe36]
---
0xdd0 JUMPDEST
0xdd1 PUSH1 0x1
0xdd3 SLOAD
0xdd4 PUSH1 0x2
0xdd6 SLOAD
0xdd7 PUSH1 0x0
0xdd9 SWAP2
0xdda PUSH1 0x1
0xddc PUSH1 0xa0
0xdde PUSH1 0x2
0xde0 EXP
0xde1 SUB
0xde2 AND
0xde3 SWAP1
0xde4 PUSH4 0xe96b462a
0xde9 SWAP1
0xdea CALLER
0xdeb SWAP1
0xdec DUP5
0xded PUSH1 0x40
0xdef MLOAD
0xdf0 PUSH1 0x20
0xdf2 ADD
0xdf3 MSTORE
0xdf4 PUSH1 0x40
0xdf6 MLOAD
0xdf7 PUSH1 0xe0
0xdf9 PUSH1 0x2
0xdfb EXP
0xdfc PUSH4 0xffffffff
0xe01 DUP6
0xe02 AND
0xe03 MUL
0xe04 DUP2
0xe05 MSTORE
0xe06 PUSH1 0x1
0xe08 PUSH1 0xa0
0xe0a PUSH1 0x2
0xe0c EXP
0xe0d SUB
0xe0e SWAP1
0xe0f SWAP3
0xe10 AND
0xe11 PUSH1 0x4
0xe13 DUP4
0xe14 ADD
0xe15 MSTORE
0xe16 PUSH1 0x24
0xe18 DUP3
0xe19 ADD
0xe1a MSTORE
0xe1b PUSH1 0x44
0xe1d ADD
0xe1e PUSH1 0x20
0xe20 PUSH1 0x40
0xe22 MLOAD
0xe23 DUP1
0xe24 DUP4
0xe25 SUB
0xe26 DUP2
0xe27 PUSH1 0x0
0xe29 DUP8
0xe2a DUP1
0xe2b EXTCODESIZE
0xe2c ISZERO
0xe2d ISZERO
0xe2e PUSH2 0xe36
0xe31 JUMPI
---
0xdd0: JUMPDEST 
0xdd1: V1337 = 0x1
0xdd3: V1338 = S[0x1]
0xdd4: V1339 = 0x2
0xdd6: V1340 = S[0x2]
0xdd7: V1341 = 0x0
0xdda: V1342 = 0x1
0xddc: V1343 = 0xa0
0xdde: V1344 = 0x2
0xde0: V1345 = EXP 0x2 0xa0
0xde1: V1346 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde2: V1347 = AND 0xffffffffffffffffffffffffffffffffffffffff V1338
0xde4: V1348 = 0xe96b462a
0xdea: V1349 = CALLER
0xded: V1350 = 0x40
0xdef: V1351 = M[0x40]
0xdf0: V1352 = 0x20
0xdf2: V1353 = ADD 0x20 V1351
0xdf3: M[V1353] = 0x0
0xdf4: V1354 = 0x40
0xdf6: V1355 = M[0x40]
0xdf7: V1356 = 0xe0
0xdf9: V1357 = 0x2
0xdfb: V1358 = EXP 0x2 0xe0
0xdfc: V1359 = 0xffffffff
0xe02: V1360 = AND 0xe96b462a 0xffffffff
0xe03: V1361 = MUL 0xe96b462a 0x100000000000000000000000000000000000000000000000000000000
0xe05: M[V1355] = 0xe96b462a00000000000000000000000000000000000000000000000000000000
0xe06: V1362 = 0x1
0xe08: V1363 = 0xa0
0xe0a: V1364 = 0x2
0xe0c: V1365 = EXP 0x2 0xa0
0xe0d: V1366 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe10: V1367 = AND V1349 0xffffffffffffffffffffffffffffffffffffffff
0xe11: V1368 = 0x4
0xe14: V1369 = ADD V1355 0x4
0xe15: M[V1369] = V1367
0xe16: V1370 = 0x24
0xe19: V1371 = ADD V1355 0x24
0xe1a: M[V1371] = V1340
0xe1b: V1372 = 0x44
0xe1d: V1373 = ADD 0x44 V1355
0xe1e: V1374 = 0x20
0xe20: V1375 = 0x40
0xe22: V1376 = M[0x40]
0xe25: V1377 = SUB V1373 V1376
0xe27: V1378 = 0x0
0xe2b: V1379 = EXTCODESIZE V1347
0xe2c: V1380 = ISZERO V1379
0xe2d: V1381 = ISZERO V1380
0xe2e: V1382 = 0xe36
0xe31: JUMPI 0xe36 V1381
---
Entry stack: [V12, 0x28f]
Stack pops: 0
Stack additions: [0x0, V1347, 0xe96b462a, V1373, 0x20, V1376, V1377, V1376, 0x0, V1347]
Exit stack: [V12, 0x28f, 0x0, V1347, 0xe96b462a, V1373, 0x20, V1376, V1377, V1376, 0x0, V1347]

================================

Block 0xe32
[0xe32:0xe35]
---
Predecessors: [0xdd0]
Successors: []
---
0xe32 PUSH1 0x0
0xe34 DUP1
0xe35 REVERT
---
0xe32: V1383 = 0x0
0xe35: REVERT 0x0 0x0
---
Entry stack: [V12, 0x28f, 0x0, V1347, 0xe96b462a, V1373, 0x20, V1376, V1377, V1376, 0x0, V1347]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, 0x0, V1347, 0xe96b462a, V1373, 0x20, V1376, V1377, V1376, 0x0, V1347]

================================

Block 0xe36
[0xe36:0xe42]
---
Predecessors: [0xdd0]
Successors: [0xe43, 0xe47]
---
0xe36 JUMPDEST
0xe37 PUSH2 0x2c6
0xe3a GAS
0xe3b SUB
0xe3c CALL
0xe3d ISZERO
0xe3e ISZERO
0xe3f PUSH2 0xe47
0xe42 JUMPI
---
0xe36: JUMPDEST 
0xe37: V1384 = 0x2c6
0xe3a: V1385 = GAS
0xe3b: V1386 = SUB V1385 0x2c6
0xe3c: V1387 = CALL V1386 V1347 0x0 V1376 V1377 V1376 0x20
0xe3d: V1388 = ISZERO V1387
0xe3e: V1389 = ISZERO V1388
0xe3f: V1390 = 0xe47
0xe42: JUMPI 0xe47 V1389
---
Entry stack: [V12, 0x28f, 0x0, V1347, 0xe96b462a, V1373, 0x20, V1376, V1377, V1376, 0x0, V1347]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x28f, 0x0, V1347, 0xe96b462a, V1373]

================================

Block 0xe43
[0xe43:0xe46]
---
Predecessors: [0xe36]
Successors: []
---
0xe43 PUSH1 0x0
0xe45 DUP1
0xe46 REVERT
---
0xe43: V1391 = 0x0
0xe46: REVERT 0x0 0x0
---
Entry stack: [V12, 0x28f, 0x0, V1347, 0xe96b462a, V1373]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, 0x0, V1347, 0xe96b462a, V1373]

================================

Block 0xe47
[0xe47:0xe56]
---
Predecessors: [0xe36]
Successors: [0x976, 0xe57]
---
0xe47 JUMPDEST
0xe48 POP
0xe49 POP
0xe4a POP
0xe4b PUSH1 0x40
0xe4d MLOAD
0xe4e DUP1
0xe4f MLOAD
0xe50 SWAP1
0xe51 POP
0xe52 ISZERO
0xe53 PUSH2 0x976
0xe56 JUMPI
---
0xe47: JUMPDEST 
0xe4b: V1392 = 0x40
0xe4d: V1393 = M[0x40]
0xe4f: V1394 = M[V1393]
0xe52: V1395 = ISZERO V1394
0xe53: V1396 = 0x976
0xe56: JUMPI 0x976 V1395
---
Entry stack: [V12, 0x28f, 0x0, V1347, 0xe96b462a, V1373]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0xe57
[0xe57:0xe68]
---
Predecessors: [0xe47]
Successors: [0xe69, 0xe70]
---
0xe57 PUSH1 0x6
0xe59 SLOAD
0xe5a PUSH1 0x1
0xe5c PUSH1 0xa0
0xe5e PUSH1 0x2
0xe60 EXP
0xe61 SUB
0xe62 AND
0xe63 ISZERO
0xe64 ISZERO
0xe65 PUSH2 0xe70
0xe68 JUMPI
---
0xe57: V1397 = 0x6
0xe59: V1398 = S[0x6]
0xe5a: V1399 = 0x1
0xe5c: V1400 = 0xa0
0xe5e: V1401 = 0x2
0xe60: V1402 = EXP 0x2 0xa0
0xe61: V1403 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe62: V1404 = AND 0xffffffffffffffffffffffffffffffffffffffff V1398
0xe63: V1405 = ISZERO V1404
0xe64: V1406 = ISZERO V1405
0xe65: V1407 = 0xe70
0xe68: JUMPI 0xe70 V1406
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0xe69
[0xe69:0xe6f]
---
Predecessors: [0xe57]
Successors: [0x976]
---
0xe69 POP
0xe6a PUSH1 0x0
0xe6c PUSH2 0x976
0xe6f JUMP
---
0xe6a: V1408 = 0x0
0xe6c: V1409 = 0x976
0xe6f: JUMP 0x976
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0xe70
[0xe70:0xe88]
---
Predecessors: [0xe57]
Successors: [0xe89]
---
0xe70 JUMPDEST
0xe71 POP
0xe72 PUSH1 0x6
0xe74 DUP1
0xe75 SLOAD
0xe76 PUSH1 0x1
0xe78 PUSH1 0xa0
0xe7a PUSH1 0x2
0xe7c EXP
0xe7d SUB
0xe7e NOT
0xe7f AND
0xe80 SWAP1
0xe81 SSTORE
0xe82 PUSH1 0x0
0xe84 PUSH1 0x7
0xe86 SSTORE
0xe87 PUSH1 0x1
---
0xe70: JUMPDEST 
0xe72: V1410 = 0x6
0xe75: V1411 = S[0x6]
0xe76: V1412 = 0x1
0xe78: V1413 = 0xa0
0xe7a: V1414 = 0x2
0xe7c: V1415 = EXP 0x2 0xa0
0xe7d: V1416 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7e: V1417 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe7f: V1418 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1411
0xe81: S[0x6] = V1418
0xe82: V1419 = 0x0
0xe84: V1420 = 0x7
0xe86: S[0x7] = 0x0
0xe87: V1421 = 0x1
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x28f, 0x1]

================================

Block 0xe89
[0xe89:0xe89]
---
Predecessors: [0xe70]
Successors: [0xe8a]
---
0xe89 JUMPDEST
---
0xe89: JUMPDEST 
---
Entry stack: [V12, 0x28f, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, 0x1]

================================

Block 0xe8a
[0xe8a:0xe8a]
---
Predecessors: [0xe89]
Successors: [0xe8b]
---
0xe8a JUMPDEST
---
0xe8a: JUMPDEST 
---
Entry stack: [V12, 0x28f, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, 0x1]

================================

Block 0xe8b
[0xe8b:0xe8d]
---
Predecessors: [0xe8a]
Successors: [0x28f]
---
0xe8b JUMPDEST
0xe8c SWAP1
0xe8d JUMP
---
0xe8b: JUMPDEST 
0xe8d: JUMP 0x28f
---
Entry stack: [V12, 0x28f, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0xe8e
[0xe8e:0xeb6]
---
Predecessors: [0x45d]
Successors: [0xeb7]
---
0xe8e JUMPDEST
0xe8f PUSH1 0x1
0xe91 PUSH1 0xa0
0xe93 PUSH1 0x2
0xe95 EXP
0xe96 SUB
0xe97 CALLER
0xe98 AND
0xe99 PUSH1 0x0
0xe9b SWAP1
0xe9c DUP2
0xe9d MSTORE
0xe9e PUSH1 0x8
0xea0 PUSH1 0x20
0xea2 MSTORE
0xea3 PUSH1 0x40
0xea5 SWAP1
0xea6 SHA3
0xea7 DUP1
0xea8 SLOAD
0xea9 PUSH1 0x1
0xeab PUSH1 0xa0
0xead PUSH1 0x2
0xeaf EXP
0xeb0 SUB
0xeb1 NOT
0xeb2 AND
0xeb3 SWAP1
0xeb4 SSTORE
0xeb5 PUSH1 0x1
---
0xe8e: JUMPDEST 
0xe8f: V1422 = 0x1
0xe91: V1423 = 0xa0
0xe93: V1424 = 0x2
0xe95: V1425 = EXP 0x2 0xa0
0xe96: V1426 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe97: V1427 = CALLER
0xe98: V1428 = AND V1427 0xffffffffffffffffffffffffffffffffffffffff
0xe99: V1429 = 0x0
0xe9d: M[0x0] = V1428
0xe9e: V1430 = 0x8
0xea0: V1431 = 0x20
0xea2: M[0x20] = 0x8
0xea3: V1432 = 0x40
0xea6: V1433 = SHA3 0x0 0x40
0xea8: V1434 = S[V1433]
0xea9: V1435 = 0x1
0xeab: V1436 = 0xa0
0xead: V1437 = 0x2
0xeaf: V1438 = EXP 0x2 0xa0
0xeb0: V1439 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb1: V1440 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xeb2: V1441 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1434
0xeb4: S[V1433] = V1441
0xeb5: V1442 = 0x1
---
Entry stack: [V12, 0x28f]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x28f, 0x1]

================================

Block 0xeb7
[0xeb7:0xeb9]
---
Predecessors: [0xe8e]
Successors: [0x28f]
---
0xeb7 JUMPDEST
0xeb8 SWAP1
0xeb9 JUMP
---
0xeb7: JUMPDEST 
0xeb9: JUMP 0x28f
---
Entry stack: [V12, 0x28f, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0xeba
[0xeba:0xecf]
---
Predecessors: [0x484]
Successors: [0x168f]
---
0xeba JUMPDEST
0xebb PUSH1 0x0
0xebd DUP2
0xebe CALLER
0xebf PUSH1 0x1
0xec1 PUSH1 0xa0
0xec3 PUSH1 0x2
0xec5 EXP
0xec6 SUB
0xec7 AND
0xec8 PUSH2 0xed0
0xecb DUP3
0xecc PUSH2 0x168f
0xecf JUMP
---
0xeba: JUMPDEST 
0xebb: V1443 = 0x0
0xebe: V1444 = CALLER
0xebf: V1445 = 0x1
0xec1: V1446 = 0xa0
0xec3: V1447 = 0x2
0xec5: V1448 = EXP 0x2 0xa0
0xec6: V1449 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec7: V1450 = AND 0xffffffffffffffffffffffffffffffffffffffff V1444
0xec8: V1451 = 0xed0
0xecc: V1452 = 0x168f
0xecf: JUMP 0x168f
---
Entry stack: [V12, 0x28f, V424, V426, V440, V451]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V1450, 0xed0, S0]
Exit stack: [V12, 0x28f, V424, V426, V440, V451, 0x0, V451, V1450, 0xed0, V451]

================================

Block 0xed0
[0xed0:0xedf]
---
Predecessors: [0x16e1]
Successors: [0xee0, 0xfee]
---
0xed0 JUMPDEST
0xed1 PUSH1 0x1
0xed3 PUSH1 0xa0
0xed5 PUSH1 0x2
0xed7 EXP
0xed8 SUB
0xed9 AND
0xeda EQ
0xedb ISZERO
0xedc PUSH2 0xfee
0xedf JUMPI
---
0xed0: JUMPDEST 
0xed1: V1453 = 0x1
0xed3: V1454 = 0xa0
0xed5: V1455 = 0x2
0xed7: V1456 = EXP 0x2 0xa0
0xed8: V1457 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed9: V1458 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xeda: V1459 = EQ V1458 S1
0xedb: V1460 = ISZERO V1459
0xedc: V1461 = 0xfee
0xedf: JUMPI 0xfee V1460
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xee0
[0xee0:0xf66]
---
Predecessors: [0xed0]
Successors: [0xf67]
---
0xee0 PUSH1 0x1
0xee2 DUP1
0xee3 SLOAD
0xee4 PUSH1 0x2
0xee6 SLOAD
0xee7 PUSH1 0x1
0xee9 PUSH1 0xa0
0xeeb PUSH1 0x2
0xeed EXP
0xeee SUB
0xeef SWAP1
0xef0 SWAP2
0xef1 AND
0xef2 SWAP1
0xef3 PUSH4 0x57a96dd0
0xef8 SWAP1
0xef9 DUP10
0xefa SWAP1
0xefb DUP10
0xefc SWAP1
0xefd DUP10
0xefe DUP10
0xeff PUSH1 0x0
0xf01 PUSH1 0x40
0xf03 MLOAD
0xf04 PUSH1 0x20
0xf06 ADD
0xf07 MSTORE
0xf08 PUSH1 0x40
0xf0a MLOAD
0xf0b PUSH1 0xe0
0xf0d PUSH1 0x2
0xf0f EXP
0xf10 PUSH4 0xffffffff
0xf15 DUP9
0xf16 AND
0xf17 MUL
0xf18 DUP2
0xf19 MSTORE
0xf1a PUSH1 0x1
0xf1c PUSH1 0xa0
0xf1e PUSH1 0x2
0xf20 EXP
0xf21 SUB
0xf22 DUP1
0xf23 DUP8
0xf24 AND
0xf25 PUSH1 0x4
0xf27 DUP4
0xf28 ADD
0xf29 SWAP1
0xf2a DUP2
0xf2b MSTORE
0xf2c PUSH1 0x24
0xf2e DUP4
0xf2f ADD
0xf30 DUP8
0xf31 SWAP1
0xf32 MSTORE
0xf33 PUSH1 0x44
0xf35 DUP4
0xf36 ADD
0xf37 DUP7
0xf38 SWAP1
0xf39 MSTORE
0xf3a SWAP1
0xf3b DUP4
0xf3c AND
0xf3d PUSH1 0x84
0xf3f DUP4
0xf40 ADD
0xf41 MSTORE
0xf42 PUSH1 0xa0
0xf44 PUSH1 0x64
0xf46 DUP4
0xf47 ADD
0xf48 SWAP1
0xf49 DUP2
0xf4a MSTORE
0xf4b SWAP1
0xf4c SWAP2
0xf4d PUSH1 0xa4
0xf4f ADD
0xf50 DUP5
0xf51 DUP2
0xf52 DUP2
0xf53 MLOAD
0xf54 DUP2
0xf55 MSTORE
0xf56 PUSH1 0x20
0xf58 ADD
0xf59 SWAP2
0xf5a POP
0xf5b DUP1
0xf5c MLOAD
0xf5d SWAP1
0xf5e PUSH1 0x20
0xf60 ADD
0xf61 SWAP1
0xf62 DUP1
0xf63 DUP4
0xf64 DUP4
0xf65 PUSH1 0x0
---
0xee0: V1462 = 0x1
0xee3: V1463 = S[0x1]
0xee4: V1464 = 0x2
0xee6: V1465 = S[0x2]
0xee7: V1466 = 0x1
0xee9: V1467 = 0xa0
0xeeb: V1468 = 0x2
0xeed: V1469 = EXP 0x2 0xa0
0xeee: V1470 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef1: V1471 = AND V1463 0xffffffffffffffffffffffffffffffffffffffff
0xef3: V1472 = 0x57a96dd0
0xeff: V1473 = 0x0
0xf01: V1474 = 0x40
0xf03: V1475 = M[0x40]
0xf04: V1476 = 0x20
0xf06: V1477 = ADD 0x20 V1475
0xf07: M[V1477] = 0x0
0xf08: V1478 = 0x40
0xf0a: V1479 = M[0x40]
0xf0b: V1480 = 0xe0
0xf0d: V1481 = 0x2
0xf0f: V1482 = EXP 0x2 0xe0
0xf10: V1483 = 0xffffffff
0xf16: V1484 = AND 0x57a96dd0 0xffffffff
0xf17: V1485 = MUL 0x57a96dd0 0x100000000000000000000000000000000000000000000000000000000
0xf19: M[V1479] = 0x57a96dd000000000000000000000000000000000000000000000000000000000
0xf1a: V1486 = 0x1
0xf1c: V1487 = 0xa0
0xf1e: V1488 = 0x2
0xf20: V1489 = EXP 0x2 0xa0
0xf21: V1490 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf24: V1491 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xf25: V1492 = 0x4
0xf28: V1493 = ADD V1479 0x4
0xf2b: M[V1493] = V1491
0xf2c: V1494 = 0x24
0xf2f: V1495 = ADD V1479 0x24
0xf32: M[V1495] = S4
0xf33: V1496 = 0x44
0xf36: V1497 = ADD V1479 0x44
0xf39: M[V1497] = V1465
0xf3c: V1498 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xf3d: V1499 = 0x84
0xf40: V1500 = ADD V1479 0x84
0xf41: M[V1500] = V1498
0xf42: V1501 = 0xa0
0xf44: V1502 = 0x64
0xf47: V1503 = ADD V1479 0x64
0xf4a: M[V1503] = 0xa0
0xf4d: V1504 = 0xa4
0xf4f: V1505 = ADD 0xa4 V1479
0xf53: V1506 = M[S3]
0xf55: M[V1505] = V1506
0xf56: V1507 = 0x20
0xf58: V1508 = ADD 0x20 V1505
0xf5c: V1509 = M[S3]
0xf5e: V1510 = 0x20
0xf60: V1511 = ADD 0x20 S3
0xf65: V1512 = 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x1, V1471, 0x57a96dd0, S5, S4, V1465, S3, S2, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, 0x0]
Exit stack: [S7, S6, S5, S4, S3, S2, 0x0, S0, 0x1, V1471, 0x57a96dd0, S5, S4, V1465, S3, S2, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, 0x0]

================================

Block 0xf67
[0xf67:0xf6f]
---
Predecessors: [0xee0, 0xf78]
Successors: [0xf70, 0xf80]
---
0xf67 JUMPDEST
0xf68 DUP4
0xf69 DUP2
0xf6a LT
0xf6b ISZERO
0xf6c PUSH2 0xf80
0xf6f JUMPI
---
0xf67: JUMPDEST 
0xf6a: V1513 = LT S0 V1509
0xf6b: V1514 = ISZERO V1513
0xf6c: V1515 = 0xf80
0xf6f: JUMPI 0xf80 V1514
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, 0x1, V1471, 0x57a96dd0, S13, S12, V1465, S10, S9, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, 0x1, V1471, 0x57a96dd0, S13, S12, V1465, S10, S9, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, S0]

================================

Block 0xf70
[0xf70:0xf77]
---
Predecessors: [0xf67]
Successors: [0xf78]
---
0xf70 DUP1
0xf71 DUP3
0xf72 ADD
0xf73 MLOAD
0xf74 DUP2
0xf75 DUP5
0xf76 ADD
0xf77 MSTORE
---
0xf72: V1516 = ADD V1511 S0
0xf73: V1517 = M[V1516]
0xf76: V1518 = ADD V1508 S0
0xf77: M[V1518] = V1517
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, 0x1, V1471, 0x57a96dd0, S13, S12, V1465, S10, S9, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, 0x1, V1471, 0x57a96dd0, S13, S12, V1465, S10, S9, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, S0]

================================

Block 0xf78
[0xf78:0xf7f]
---
Predecessors: [0xf70]
Successors: [0xf67]
---
0xf78 JUMPDEST
0xf79 PUSH1 0x20
0xf7b ADD
0xf7c PUSH2 0xf67
0xf7f JUMP
---
0xf78: JUMPDEST 
0xf79: V1519 = 0x20
0xf7b: V1520 = ADD 0x20 S0
0xf7c: V1521 = 0xf67
0xf7f: JUMP 0xf67
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, 0x1, V1471, 0x57a96dd0, S13, S12, V1465, S10, S9, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, S0]
Stack pops: 1
Stack additions: [V1520]
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, 0x1, V1471, 0x57a96dd0, S13, S12, V1465, S10, S9, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, V1520]

================================

Block 0xf80
[0xf80:0xf93]
---
Predecessors: [0xf67]
Successors: [0xf94, 0xfad]
---
0xf80 JUMPDEST
0xf81 POP
0xf82 POP
0xf83 POP
0xf84 POP
0xf85 SWAP1
0xf86 POP
0xf87 SWAP1
0xf88 DUP2
0xf89 ADD
0xf8a SWAP1
0xf8b PUSH1 0x1f
0xf8d AND
0xf8e DUP1
0xf8f ISZERO
0xf90 PUSH2 0xfad
0xf93 JUMPI
---
0xf80: JUMPDEST 
0xf89: V1522 = ADD V1509 V1508
0xf8b: V1523 = 0x1f
0xf8d: V1524 = AND 0x1f V1509
0xf8f: V1525 = ISZERO V1524
0xf90: V1526 = 0xfad
0xf93: JUMPI 0xfad V1525
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, 0x1, V1471, 0x57a96dd0, S13, S12, V1465, S10, S9, V1493, V1503, V1508, V1511, V1509, V1509, V1508, V1511, S0]
Stack pops: 7
Stack additions: [V1522, V1524]
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, 0x1, V1471, 0x57a96dd0, S13, S12, V1465, S10, S9, V1493, V1503, V1522, V1524]

================================

Block 0xf94
[0xf94:0xfac]
---
Predecessors: [0xf80]
Successors: [0xfad]
---
0xf94 DUP1
0xf95 DUP3
0xf96 SUB
0xf97 DUP1
0xf98 MLOAD
0xf99 PUSH1 0x1
0xf9b DUP4
0xf9c PUSH1 0x20
0xf9e SUB
0xf9f PUSH2 0x100
0xfa2 EXP
0xfa3 SUB
0xfa4 NOT
0xfa5 AND
0xfa6 DUP2
0xfa7 MSTORE
0xfa8 PUSH1 0x20
0xfaa ADD
0xfab SWAP2
0xfac POP
---
0xf96: V1527 = SUB V1522 V1524
0xf98: V1528 = M[V1527]
0xf99: V1529 = 0x1
0xf9c: V1530 = 0x20
0xf9e: V1531 = SUB 0x20 V1524
0xf9f: V1532 = 0x100
0xfa2: V1533 = EXP 0x100 V1531
0xfa3: V1534 = SUB V1533 0x1
0xfa4: V1535 = NOT V1534
0xfa5: V1536 = AND V1535 V1528
0xfa7: M[V1527] = V1536
0xfa8: V1537 = 0x20
0xfaa: V1538 = ADD 0x20 V1527
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, 0x1, V1471, 0x57a96dd0, S8, S7, V1465, S5, S4, V1493, V1503, V1522, V1524]
Stack pops: 2
Stack additions: [V1538, S0]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, 0x1, V1471, 0x57a96dd0, S8, S7, V1465, S5, S4, V1493, V1503, V1538, V1524]

================================

Block 0xfad
[0xfad:0xfca]
---
Predecessors: [0xf80, 0xf94]
Successors: [0xfcb, 0xfcf]
---
0xfad JUMPDEST
0xfae POP
0xfaf SWAP7
0xfb0 POP
0xfb1 POP
0xfb2 POP
0xfb3 POP
0xfb4 POP
0xfb5 POP
0xfb6 POP
0xfb7 PUSH1 0x20
0xfb9 PUSH1 0x40
0xfbb MLOAD
0xfbc DUP1
0xfbd DUP4
0xfbe SUB
0xfbf DUP2
0xfc0 PUSH1 0x0
0xfc2 DUP8
0xfc3 DUP1
0xfc4 EXTCODESIZE
0xfc5 ISZERO
0xfc6 ISZERO
0xfc7 PUSH2 0xfcf
0xfca JUMPI
---
0xfad: JUMPDEST 
0xfb7: V1539 = 0x20
0xfb9: V1540 = 0x40
0xfbb: V1541 = M[0x40]
0xfbe: V1542 = SUB S1 V1541
0xfc0: V1543 = 0x0
0xfc4: V1544 = EXTCODESIZE V1471
0xfc5: V1545 = ISZERO V1544
0xfc6: V1546 = ISZERO V1545
0xfc7: V1547 = 0xfcf
0xfca: JUMPI 0xfcf V1546
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, 0x1, V1471, 0x57a96dd0, S8, S7, V1465, S5, S4, V1493, V1503, S1, V1524]
Stack pops: 11
Stack additions: [S10, S9, S1, 0x20, V1541, V1542, V1541, 0x0, S10]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, 0x1, V1471, 0x57a96dd0, S1, 0x20, V1541, V1542, V1541, 0x0, V1471]

================================

Block 0xfcb
[0xfcb:0xfce]
---
Predecessors: [0xfad]
Successors: []
---
0xfcb PUSH1 0x0
0xfcd DUP1
0xfce REVERT
---
0xfcb: V1548 = 0x0
0xfce: REVERT 0x0 0x0
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, 0x1, V1471, 0x57a96dd0, S6, 0x20, V1541, V1542, V1541, 0x0, V1471]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, 0x1, V1471, 0x57a96dd0, S6, 0x20, V1541, V1542, V1541, 0x0, V1471]

================================

Block 0xfcf
[0xfcf:0xfdb]
---
Predecessors: [0xfad]
Successors: [0xfdc, 0xfe0]
---
0xfcf JUMPDEST
0xfd0 PUSH2 0x2c6
0xfd3 GAS
0xfd4 SUB
0xfd5 CALL
0xfd6 ISZERO
0xfd7 ISZERO
0xfd8 PUSH2 0xfe0
0xfdb JUMPI
---
0xfcf: JUMPDEST 
0xfd0: V1549 = 0x2c6
0xfd3: V1550 = GAS
0xfd4: V1551 = SUB V1550 0x2c6
0xfd5: V1552 = CALL V1551 V1471 0x0 V1541 V1542 V1541 0x20
0xfd6: V1553 = ISZERO V1552
0xfd7: V1554 = ISZERO V1553
0xfd8: V1555 = 0xfe0
0xfdb: JUMPI 0xfe0 V1554
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, 0x1, V1471, 0x57a96dd0, S6, 0x20, V1541, V1542, V1541, 0x0, V1471]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, 0x1, V1471, 0x57a96dd0, S6]

================================

Block 0xfdc
[0xfdc:0xfdf]
---
Predecessors: [0xfcf]
Successors: []
---
0xfdc PUSH1 0x0
0xfde DUP1
0xfdf REVERT
---
0xfdc: V1556 = 0x0
0xfdf: REVERT 0x0 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x1, V1471, 0x57a96dd0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x1, V1471, 0x57a96dd0, S0]

================================

Block 0xfe0
[0xfe0:0xfed]
---
Predecessors: [0xfcf]
Successors: [0xfee]
---
0xfe0 JUMPDEST
0xfe1 POP
0xfe2 POP
0xfe3 POP
0xfe4 PUSH1 0x40
0xfe6 MLOAD
0xfe7 DUP1
0xfe8 MLOAD
0xfe9 SWAP1
0xfea POP
0xfeb EQ
0xfec SWAP2
0xfed POP
---
0xfe0: JUMPDEST 
0xfe4: V1557 = 0x40
0xfe6: V1558 = M[0x40]
0xfe8: V1559 = M[V1558]
0xfeb: V1560 = EQ V1559 0x1
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x1, V1471, 0x57a96dd0, S0]
Stack pops: 6
Stack additions: [V1560, S4]
Exit stack: [V12, S10, S9, S8, S7, S6, V1560, S4]

================================

Block 0xfee
[0xfee:0xfee]
---
Predecessors: [0xed0, 0xfe0]
Successors: [0xfef]
---
0xfee JUMPDEST
---
0xfee: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xfef
[0xfef:0xfef]
---
Predecessors: [0xfee]
Successors: [0xff0]
---
0xfef JUMPDEST
---
0xfef: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xff0
[0xff0:0xff8]
---
Predecessors: [0xfef]
Successors: [0x28f]
---
0xff0 JUMPDEST
0xff1 POP
0xff2 SWAP5
0xff3 SWAP4
0xff4 POP
0xff5 POP
0xff6 POP
0xff7 POP
0xff8 JUMP
---
0xff0: JUMPDEST 
0xff8: JUMP S6
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V12, S10, S9, S8, S7, S1]

================================

Block 0xff9
[0xff9:0x105a]
---
Predecessors: [0x508]
Successors: [0x105b, 0x105f]
---
0xff9 JUMPDEST
0xffa PUSH1 0x1
0xffc SLOAD
0xffd PUSH1 0x2
0xfff SLOAD
0x1000 PUSH1 0x0
0x1002 SWAP2
0x1003 PUSH1 0x1
0x1005 PUSH1 0xa0
0x1007 PUSH1 0x2
0x1009 EXP
0x100a SUB
0x100b AND
0x100c SWAP1
0x100d PUSH4 0x4d30b6be
0x1012 SWAP1
0x1013 DUP5
0x1014 SWAP1
0x1015 DUP5
0x1016 PUSH1 0x40
0x1018 MLOAD
0x1019 PUSH1 0x20
0x101b ADD
0x101c MSTORE
0x101d PUSH1 0x40
0x101f MLOAD
0x1020 PUSH1 0xe0
0x1022 PUSH1 0x2
0x1024 EXP
0x1025 PUSH4 0xffffffff
0x102a DUP6
0x102b AND
0x102c MUL
0x102d DUP2
0x102e MSTORE
0x102f PUSH1 0x1
0x1031 PUSH1 0xa0
0x1033 PUSH1 0x2
0x1035 EXP
0x1036 SUB
0x1037 SWAP1
0x1038 SWAP3
0x1039 AND
0x103a PUSH1 0x4
0x103c DUP4
0x103d ADD
0x103e MSTORE
0x103f PUSH1 0x24
0x1041 DUP3
0x1042 ADD
0x1043 MSTORE
0x1044 PUSH1 0x44
0x1046 ADD
0x1047 PUSH1 0x20
0x1049 PUSH1 0x40
0x104b MLOAD
0x104c DUP1
0x104d DUP4
0x104e SUB
0x104f DUP2
0x1050 PUSH1 0x0
0x1052 DUP8
0x1053 DUP1
0x1054 EXTCODESIZE
0x1055 ISZERO
0x1056 ISZERO
0x1057 PUSH2 0x105f
0x105a JUMPI
---
0xff9: JUMPDEST 
0xffa: V1561 = 0x1
0xffc: V1562 = S[0x1]
0xffd: V1563 = 0x2
0xfff: V1564 = S[0x2]
0x1000: V1565 = 0x0
0x1003: V1566 = 0x1
0x1005: V1567 = 0xa0
0x1007: V1568 = 0x2
0x1009: V1569 = EXP 0x2 0xa0
0x100a: V1570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x100b: V1571 = AND 0xffffffffffffffffffffffffffffffffffffffff V1562
0x100d: V1572 = 0x4d30b6be
0x1016: V1573 = 0x40
0x1018: V1574 = M[0x40]
0x1019: V1575 = 0x20
0x101b: V1576 = ADD 0x20 V1574
0x101c: M[V1576] = 0x0
0x101d: V1577 = 0x40
0x101f: V1578 = M[0x40]
0x1020: V1579 = 0xe0
0x1022: V1580 = 0x2
0x1024: V1581 = EXP 0x2 0xe0
0x1025: V1582 = 0xffffffff
0x102b: V1583 = AND 0x4d30b6be 0xffffffff
0x102c: V1584 = MUL 0x4d30b6be 0x100000000000000000000000000000000000000000000000000000000
0x102e: M[V1578] = 0x4d30b6be00000000000000000000000000000000000000000000000000000000
0x102f: V1585 = 0x1
0x1031: V1586 = 0xa0
0x1033: V1587 = 0x2
0x1035: V1588 = EXP 0x2 0xa0
0x1036: V1589 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1039: V1590 = AND V474 0xffffffffffffffffffffffffffffffffffffffff
0x103a: V1591 = 0x4
0x103d: V1592 = ADD V1578 0x4
0x103e: M[V1592] = V1590
0x103f: V1593 = 0x24
0x1042: V1594 = ADD V1578 0x24
0x1043: M[V1594] = V1564
0x1044: V1595 = 0x44
0x1046: V1596 = ADD 0x44 V1578
0x1047: V1597 = 0x20
0x1049: V1598 = 0x40
0x104b: V1599 = M[0x40]
0x104e: V1600 = SUB V1596 V1599
0x1050: V1601 = 0x0
0x1054: V1602 = EXTCODESIZE V1571
0x1055: V1603 = ISZERO V1602
0x1056: V1604 = ISZERO V1603
0x1057: V1605 = 0x105f
0x105a: JUMPI 0x105f V1604
---
Entry stack: [V12, 0x30c, V474]
Stack pops: 1
Stack additions: [S0, 0x0, V1571, 0x4d30b6be, V1596, 0x20, V1599, V1600, V1599, 0x0, V1571]
Exit stack: [V12, 0x30c, V474, 0x0, V1571, 0x4d30b6be, V1596, 0x20, V1599, V1600, V1599, 0x0, V1571]

================================

Block 0x105b
[0x105b:0x105e]
---
Predecessors: [0xff9]
Successors: []
---
0x105b PUSH1 0x0
0x105d DUP1
0x105e REVERT
---
0x105b: V1606 = 0x0
0x105e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V474, 0x0, V1571, 0x4d30b6be, V1596, 0x20, V1599, V1600, V1599, 0x0, V1571]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V474, 0x0, V1571, 0x4d30b6be, V1596, 0x20, V1599, V1600, V1599, 0x0, V1571]

================================

Block 0x105f
[0x105f:0x106b]
---
Predecessors: [0xff9]
Successors: [0x106c, 0x1070]
---
0x105f JUMPDEST
0x1060 PUSH2 0x2c6
0x1063 GAS
0x1064 SUB
0x1065 CALL
0x1066 ISZERO
0x1067 ISZERO
0x1068 PUSH2 0x1070
0x106b JUMPI
---
0x105f: JUMPDEST 
0x1060: V1607 = 0x2c6
0x1063: V1608 = GAS
0x1064: V1609 = SUB V1608 0x2c6
0x1065: V1610 = CALL V1609 V1571 0x0 V1599 V1600 V1599 0x20
0x1066: V1611 = ISZERO V1610
0x1067: V1612 = ISZERO V1611
0x1068: V1613 = 0x1070
0x106b: JUMPI 0x1070 V1612
---
Entry stack: [V12, 0x30c, V474, 0x0, V1571, 0x4d30b6be, V1596, 0x20, V1599, V1600, V1599, 0x0, V1571]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x30c, V474, 0x0, V1571, 0x4d30b6be, V1596]

================================

Block 0x106c
[0x106c:0x106f]
---
Predecessors: [0x105f]
Successors: []
---
0x106c PUSH1 0x0
0x106e DUP1
0x106f REVERT
---
0x106c: V1614 = 0x0
0x106f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V474, 0x0, V1571, 0x4d30b6be, V1596]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V474, 0x0, V1571, 0x4d30b6be, V1596]

================================

Block 0x1070
[0x1070:0x107b]
---
Predecessors: [0x105f]
Successors: [0x107c]
---
0x1070 JUMPDEST
0x1071 POP
0x1072 POP
0x1073 POP
0x1074 PUSH1 0x40
0x1076 MLOAD
0x1077 DUP1
0x1078 MLOAD
0x1079 SWAP2
0x107a POP
0x107b POP
---
0x1070: JUMPDEST 
0x1074: V1615 = 0x40
0x1076: V1616 = M[0x40]
0x1078: V1617 = M[V1616]
---
Entry stack: [V12, 0x30c, V474, 0x0, V1571, 0x4d30b6be, V1596]
Stack pops: 4
Stack additions: [V1617]
Exit stack: [V12, 0x30c, V474, V1617]

================================

Block 0x107c
[0x107c:0x1080]
---
Predecessors: [0x1070, 0x135b, 0x137c, 0x1394, 0x13ae]
Successors: [0x28f, 0x30c]
---
0x107c JUMPDEST
0x107d SWAP2
0x107e SWAP1
0x107f POP
0x1080 JUMP
---
0x107c: JUMPDEST 
0x1080: JUMP {0x28f, 0x30c}
---
Entry stack: [V12, {0x28f, 0x30c}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x1081
[0x1081:0x1096]
---
Predecessors: [0x539]
Successors: [0x168f]
---
0x1081 JUMPDEST
0x1082 PUSH1 0x0
0x1084 DUP2
0x1085 CALLER
0x1086 PUSH1 0x1
0x1088 PUSH1 0xa0
0x108a PUSH1 0x2
0x108c EXP
0x108d SUB
0x108e AND
0x108f PUSH2 0x1097
0x1092 DUP3
0x1093 PUSH2 0x168f
0x1096 JUMP
---
0x1081: JUMPDEST 
0x1082: V1618 = 0x0
0x1085: V1619 = CALLER
0x1086: V1620 = 0x1
0x1088: V1621 = 0xa0
0x108a: V1622 = 0x2
0x108c: V1623 = EXP 0x2 0xa0
0x108d: V1624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108e: V1625 = AND 0xffffffffffffffffffffffffffffffffffffffff V1619
0x108f: V1626 = 0x1097
0x1093: V1627 = 0x168f
0x1096: JUMP 0x168f
---
Entry stack: [V12, 0x28f, V495, V497, V500]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V1625, 0x1097, S0]
Exit stack: [V12, 0x28f, V495, V497, V500, 0x0, V500, V1625, 0x1097, V500]

================================

Block 0x1097
[0x1097:0x10a6]
---
Predecessors: [0x16e1]
Successors: [0x10a7, 0x1142]
---
0x1097 JUMPDEST
0x1098 PUSH1 0x1
0x109a PUSH1 0xa0
0x109c PUSH1 0x2
0x109e EXP
0x109f SUB
0x10a0 AND
0x10a1 EQ
0x10a2 ISZERO
0x10a3 PUSH2 0x1142
0x10a6 JUMPI
---
0x1097: JUMPDEST 
0x1098: V1628 = 0x1
0x109a: V1629 = 0xa0
0x109c: V1630 = 0x2
0x109e: V1631 = EXP 0x2 0xa0
0x109f: V1632 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a0: V1633 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x10a1: V1634 = EQ V1633 S1
0x10a2: V1635 = ISZERO V1634
0x10a3: V1636 = 0x1142
0x10a6: JUMPI 0x1142 V1635
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x10a7
[0x10a7:0x111e]
---
Predecessors: [0x1097]
Successors: [0x111f, 0x1123]
---
0x10a7 PUSH1 0x1
0x10a9 DUP1
0x10aa SLOAD
0x10ab PUSH1 0x2
0x10ad SLOAD
0x10ae PUSH1 0x1
0x10b0 PUSH1 0xa0
0x10b2 PUSH1 0x2
0x10b4 EXP
0x10b5 SUB
0x10b6 SWAP1
0x10b7 SWAP2
0x10b8 AND
0x10b9 SWAP1
0x10ba PUSH4 0x14712e2f
0x10bf SWAP1
0x10c0 DUP9
0x10c1 SWAP1
0x10c2 DUP9
0x10c3 SWAP1
0x10c4 DUP9
0x10c5 PUSH1 0x0
0x10c7 PUSH1 0x40
0x10c9 MLOAD
0x10ca PUSH1 0x20
0x10cc ADD
0x10cd MSTORE
0x10ce PUSH1 0x40
0x10d0 MLOAD
0x10d1 PUSH1 0xe0
0x10d3 PUSH1 0x2
0x10d5 EXP
0x10d6 PUSH4 0xffffffff
0x10db DUP8
0x10dc AND
0x10dd MUL
0x10de DUP2
0x10df MSTORE
0x10e0 PUSH1 0x1
0x10e2 PUSH1 0xa0
0x10e4 PUSH1 0x2
0x10e6 EXP
0x10e7 SUB
0x10e8 SWAP5
0x10e9 DUP6
0x10ea AND
0x10eb PUSH1 0x4
0x10ed DUP3
0x10ee ADD
0x10ef MSTORE
0x10f0 PUSH1 0x24
0x10f2 DUP2
0x10f3 ADD
0x10f4 SWAP4
0x10f5 SWAP1
0x10f6 SWAP4
0x10f7 MSTORE
0x10f8 PUSH1 0x44
0x10fa DUP4
0x10fb ADD
0x10fc SWAP2
0x10fd SWAP1
0x10fe SWAP2
0x10ff MSTORE
0x1100 SWAP1
0x1101 SWAP2
0x1102 AND
0x1103 PUSH1 0x64
0x1105 DUP3
0x1106 ADD
0x1107 MSTORE
0x1108 PUSH1 0x84
0x110a ADD
0x110b PUSH1 0x20
0x110d PUSH1 0x40
0x110f MLOAD
0x1110 DUP1
0x1111 DUP4
0x1112 SUB
0x1113 DUP2
0x1114 PUSH1 0x0
0x1116 DUP8
0x1117 DUP1
0x1118 EXTCODESIZE
0x1119 ISZERO
0x111a ISZERO
0x111b PUSH2 0x1123
0x111e JUMPI
---
0x10a7: V1637 = 0x1
0x10aa: V1638 = S[0x1]
0x10ab: V1639 = 0x2
0x10ad: V1640 = S[0x2]
0x10ae: V1641 = 0x1
0x10b0: V1642 = 0xa0
0x10b2: V1643 = 0x2
0x10b4: V1644 = EXP 0x2 0xa0
0x10b5: V1645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b8: V1646 = AND V1638 0xffffffffffffffffffffffffffffffffffffffff
0x10ba: V1647 = 0x14712e2f
0x10c5: V1648 = 0x0
0x10c7: V1649 = 0x40
0x10c9: V1650 = M[0x40]
0x10ca: V1651 = 0x20
0x10cc: V1652 = ADD 0x20 V1650
0x10cd: M[V1652] = 0x0
0x10ce: V1653 = 0x40
0x10d0: V1654 = M[0x40]
0x10d1: V1655 = 0xe0
0x10d3: V1656 = 0x2
0x10d5: V1657 = EXP 0x2 0xe0
0x10d6: V1658 = 0xffffffff
0x10dc: V1659 = AND 0x14712e2f 0xffffffff
0x10dd: V1660 = MUL 0x14712e2f 0x100000000000000000000000000000000000000000000000000000000
0x10df: M[V1654] = 0x14712e2f00000000000000000000000000000000000000000000000000000000
0x10e0: V1661 = 0x1
0x10e2: V1662 = 0xa0
0x10e4: V1663 = 0x2
0x10e6: V1664 = EXP 0x2 0xa0
0x10e7: V1665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10ea: V1666 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x10eb: V1667 = 0x4
0x10ee: V1668 = ADD V1654 0x4
0x10ef: M[V1668] = V1666
0x10f0: V1669 = 0x24
0x10f3: V1670 = ADD V1654 0x24
0x10f7: M[V1670] = S3
0x10f8: V1671 = 0x44
0x10fb: V1672 = ADD V1654 0x44
0x10ff: M[V1672] = V1640
0x1102: V1673 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x1103: V1674 = 0x64
0x1106: V1675 = ADD V1654 0x64
0x1107: M[V1675] = V1673
0x1108: V1676 = 0x84
0x110a: V1677 = ADD 0x84 V1654
0x110b: V1678 = 0x20
0x110d: V1679 = 0x40
0x110f: V1680 = M[0x40]
0x1112: V1681 = SUB V1677 V1680
0x1114: V1682 = 0x0
0x1118: V1683 = EXTCODESIZE V1646
0x1119: V1684 = ISZERO V1683
0x111a: V1685 = ISZERO V1684
0x111b: V1686 = 0x1123
0x111e: JUMPI 0x1123 V1685
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x1, V1646, 0x14712e2f, V1677, 0x20, V1680, V1681, V1680, 0x0, V1646]
Exit stack: [S7, S6, S5, S4, S3, S2, 0x0, S0, 0x1, V1646, 0x14712e2f, V1677, 0x20, V1680, V1681, V1680, 0x0, V1646]

================================

Block 0x111f
[0x111f:0x1122]
---
Predecessors: [0x10a7]
Successors: []
---
0x111f PUSH1 0x0
0x1121 DUP1
0x1122 REVERT
---
0x111f: V1687 = 0x0
0x1122: REVERT 0x0 0x0
---
Entry stack: [V12, S16, S15, S14, S13, S12, 0x0, S10, 0x1, V1646, 0x14712e2f, V1677, 0x20, V1680, V1681, V1680, 0x0, V1646]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, 0x0, S10, 0x1, V1646, 0x14712e2f, V1677, 0x20, V1680, V1681, V1680, 0x0, V1646]

================================

Block 0x1123
[0x1123:0x112f]
---
Predecessors: [0x10a7]
Successors: [0x1130, 0x1134]
---
0x1123 JUMPDEST
0x1124 PUSH2 0x2c6
0x1127 GAS
0x1128 SUB
0x1129 CALL
0x112a ISZERO
0x112b ISZERO
0x112c PUSH2 0x1134
0x112f JUMPI
---
0x1123: JUMPDEST 
0x1124: V1688 = 0x2c6
0x1127: V1689 = GAS
0x1128: V1690 = SUB V1689 0x2c6
0x1129: V1691 = CALL V1690 V1646 0x0 V1680 V1681 V1680 0x20
0x112a: V1692 = ISZERO V1691
0x112b: V1693 = ISZERO V1692
0x112c: V1694 = 0x1134
0x112f: JUMPI 0x1134 V1693
---
Entry stack: [V12, S16, S15, S14, S13, S12, 0x0, S10, 0x1, V1646, 0x14712e2f, V1677, 0x20, V1680, V1681, V1680, 0x0, V1646]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, 0x0, S10, 0x1, V1646, 0x14712e2f, V1677]

================================

Block 0x1130
[0x1130:0x1133]
---
Predecessors: [0x1123]
Successors: []
---
0x1130 PUSH1 0x0
0x1132 DUP1
0x1133 REVERT
---
0x1130: V1695 = 0x0
0x1133: REVERT 0x0 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, 0x0, S4, 0x1, V1646, 0x14712e2f, V1677]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, 0x0, S4, 0x1, V1646, 0x14712e2f, V1677]

================================

Block 0x1134
[0x1134:0x1141]
---
Predecessors: [0x1123]
Successors: [0x1142]
---
0x1134 JUMPDEST
0x1135 POP
0x1136 POP
0x1137 POP
0x1138 PUSH1 0x40
0x113a MLOAD
0x113b DUP1
0x113c MLOAD
0x113d SWAP1
0x113e POP
0x113f EQ
0x1140 SWAP2
0x1141 POP
---
0x1134: JUMPDEST 
0x1138: V1696 = 0x40
0x113a: V1697 = M[0x40]
0x113c: V1698 = M[V1697]
0x113f: V1699 = EQ V1698 0x1
---
Entry stack: [V12, S10, S9, S8, S7, S6, 0x0, S4, 0x1, V1646, 0x14712e2f, V1677]
Stack pops: 6
Stack additions: [V1699, S4]
Exit stack: [V12, S10, S9, S8, S7, S6, V1699, S4]

================================

Block 0x1142
[0x1142:0x1142]
---
Predecessors: [0x1097, 0x1134]
Successors: [0x1143]
---
0x1142 JUMPDEST
---
0x1142: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1143
[0x1143:0x1143]
---
Predecessors: [0x1142]
Successors: [0x1144]
---
0x1143 JUMPDEST
---
0x1143: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1144
[0x1144:0x114b]
---
Predecessors: [0x1143]
Successors: [0x28f, 0x1224, 0x1256]
---
0x1144 JUMPDEST
0x1145 POP
0x1146 SWAP4
0x1147 SWAP3
0x1148 POP
0x1149 POP
0x114a POP
0x114b JUMP
---
0x1144: JUMPDEST 
0x114b: JUMP S5
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V12, S10, S9, S8, S7, S6, S1]

================================

Block 0x114c
[0x114c:0x119b]
---
Predecessors: [0x576]
Successors: [0xa0f, 0x119c]
---
0x114c JUMPDEST
0x114d PUSH1 0x4
0x114f DUP1
0x1150 SLOAD
0x1151 PUSH1 0x1
0x1153 DUP2
0x1154 PUSH1 0x1
0x1156 AND
0x1157 ISZERO
0x1158 PUSH2 0x100
0x115b MUL
0x115c SUB
0x115d AND
0x115e PUSH1 0x2
0x1160 SWAP1
0x1161 DIV
0x1162 DUP1
0x1163 PUSH1 0x1f
0x1165 ADD
0x1166 PUSH1 0x20
0x1168 DUP1
0x1169 SWAP2
0x116a DIV
0x116b MUL
0x116c PUSH1 0x20
0x116e ADD
0x116f PUSH1 0x40
0x1171 MLOAD
0x1172 SWAP1
0x1173 DUP2
0x1174 ADD
0x1175 PUSH1 0x40
0x1177 MSTORE
0x1178 DUP1
0x1179 SWAP3
0x117a SWAP2
0x117b SWAP1
0x117c DUP2
0x117d DUP2
0x117e MSTORE
0x117f PUSH1 0x20
0x1181 ADD
0x1182 DUP3
0x1183 DUP1
0x1184 SLOAD
0x1185 PUSH1 0x1
0x1187 DUP2
0x1188 PUSH1 0x1
0x118a AND
0x118b ISZERO
0x118c PUSH2 0x100
0x118f MUL
0x1190 SUB
0x1191 AND
0x1192 PUSH1 0x2
0x1194 SWAP1
0x1195 DIV
0x1196 DUP1
0x1197 ISZERO
0x1198 PUSH2 0xa0f
0x119b JUMPI
---
0x114c: JUMPDEST 
0x114d: V1700 = 0x4
0x1150: V1701 = S[0x4]
0x1151: V1702 = 0x1
0x1154: V1703 = 0x1
0x1156: V1704 = AND 0x1 V1701
0x1157: V1705 = ISZERO V1704
0x1158: V1706 = 0x100
0x115b: V1707 = MUL 0x100 V1705
0x115c: V1708 = SUB V1707 0x1
0x115d: V1709 = AND V1708 V1701
0x115e: V1710 = 0x2
0x1161: V1711 = DIV V1709 0x2
0x1163: V1712 = 0x1f
0x1165: V1713 = ADD 0x1f V1711
0x1166: V1714 = 0x20
0x116a: V1715 = DIV V1713 0x20
0x116b: V1716 = MUL V1715 0x20
0x116c: V1717 = 0x20
0x116e: V1718 = ADD 0x20 V1716
0x116f: V1719 = 0x40
0x1171: V1720 = M[0x40]
0x1174: V1721 = ADD V1720 V1718
0x1175: V1722 = 0x40
0x1177: M[0x40] = V1721
0x117e: M[V1720] = V1711
0x117f: V1723 = 0x20
0x1181: V1724 = ADD 0x20 V1720
0x1184: V1725 = S[0x4]
0x1185: V1726 = 0x1
0x1188: V1727 = 0x1
0x118a: V1728 = AND 0x1 V1725
0x118b: V1729 = ISZERO V1728
0x118c: V1730 = 0x100
0x118f: V1731 = MUL 0x100 V1729
0x1190: V1732 = SUB V1731 0x1
0x1191: V1733 = AND V1732 V1725
0x1192: V1734 = 0x2
0x1195: V1735 = DIV V1733 0x2
0x1197: V1736 = ISZERO V1735
0x1198: V1737 = 0xa0f
0x119b: JUMPI 0xa0f V1736
---
Entry stack: [V12, 0x1f5]
Stack pops: 0
Stack additions: [V1720, 0x4, V1711, V1724, 0x4, V1735]
Exit stack: [V12, 0x1f5, V1720, 0x4, V1711, V1724, 0x4, V1735]

================================

Block 0x119c
[0x119c:0x11a3]
---
Predecessors: [0x114c]
Successors: [0x9e4, 0x11a4]
---
0x119c DUP1
0x119d PUSH1 0x1f
0x119f LT
0x11a0 PUSH2 0x9e4
0x11a3 JUMPI
---
0x119d: V1738 = 0x1f
0x119f: V1739 = LT 0x1f V1735
0x11a0: V1740 = 0x9e4
0x11a3: JUMPI 0x9e4 V1739
---
Entry stack: [V12, 0x1f5, V1720, 0x4, V1711, V1724, 0x4, V1735]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1f5, V1720, 0x4, V1711, V1724, 0x4, V1735]

================================

Block 0x11a4
[0x11a4:0x11b6]
---
Predecessors: [0x119c]
Successors: [0xa0f]
---
0x11a4 PUSH2 0x100
0x11a7 DUP1
0x11a8 DUP4
0x11a9 SLOAD
0x11aa DIV
0x11ab MUL
0x11ac DUP4
0x11ad MSTORE
0x11ae SWAP2
0x11af PUSH1 0x20
0x11b1 ADD
0x11b2 SWAP2
0x11b3 PUSH2 0xa0f
0x11b6 JUMP
---
0x11a4: V1741 = 0x100
0x11a9: V1742 = S[0x4]
0x11aa: V1743 = DIV V1742 0x100
0x11ab: V1744 = MUL V1743 0x100
0x11ad: M[V1724] = V1744
0x11af: V1745 = 0x20
0x11b1: V1746 = ADD 0x20 V1724
0x11b3: V1747 = 0xa0f
0x11b6: JUMP 0xa0f
---
Entry stack: [V12, 0x1f5, V1720, 0x4, V1711, V1724, 0x4, V1735]
Stack pops: 3
Stack additions: [V1746, S1, S0]
Exit stack: [V12, 0x1f5, V1720, 0x4, V1711, V1746, 0x4, V1735]

================================

Block 0x11b7
[0x11b7:0x11c4]
---
Predecessors: []
Successors: [0x11c5]
---
0x11b7 JUMPDEST
0x11b8 DUP3
0x11b9 ADD
0x11ba SWAP2
0x11bb SWAP1
0x11bc PUSH1 0x0
0x11be MSTORE
0x11bf PUSH1 0x20
0x11c1 PUSH1 0x0
0x11c3 SHA3
0x11c4 SWAP1
---
0x11b7: JUMPDEST 
0x11b9: V1748 = ADD S2 S0
0x11bc: V1749 = 0x0
0x11be: M[0x0] = S1
0x11bf: V1750 = 0x20
0x11c1: V1751 = 0x0
0x11c3: V1752 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V1748, V1752, S2]
Exit stack: [V1748, V1752, S2]

================================

Block 0x11c5
[0x11c5:0x11d8]
---
Predecessors: [0x11b7]
Successors: [0x9f2, 0x11d9]
---
0x11c5 JUMPDEST
0x11c6 DUP2
0x11c7 SLOAD
0x11c8 DUP2
0x11c9 MSTORE
0x11ca SWAP1
0x11cb PUSH1 0x1
0x11cd ADD
0x11ce SWAP1
0x11cf PUSH1 0x20
0x11d1 ADD
0x11d2 DUP1
0x11d3 DUP4
0x11d4 GT
0x11d5 PUSH2 0x9f2
0x11d8 JUMPI
---
0x11c5: JUMPDEST 
0x11c7: V1753 = S[V1752]
0x11c9: M[S0] = V1753
0x11cb: V1754 = 0x1
0x11cd: V1755 = ADD 0x1 V1752
0x11cf: V1756 = 0x20
0x11d1: V1757 = ADD 0x20 S0
0x11d4: V1758 = GT V1748 V1757
0x11d5: V1759 = 0x9f2
0x11d8: JUMPI 0x9f2 V1758
---
Entry stack: [V1748, V1752, S0]
Stack pops: 3
Stack additions: [S2, V1755, V1757]
Exit stack: [V1748, V1755, V1757]

================================

Block 0x11d9
[0x11d9:0x11e1]
---
Predecessors: [0x11c5]
Successors: [0x11e2]
---
0x11d9 DUP3
0x11da SWAP1
0x11db SUB
0x11dc PUSH1 0x1f
0x11de AND
0x11df DUP3
0x11e0 ADD
0x11e1 SWAP2
---
0x11db: V1760 = SUB V1757 V1748
0x11dc: V1761 = 0x1f
0x11de: V1762 = AND 0x1f V1760
0x11e0: V1763 = ADD V1748 V1762
---
Entry stack: [V1748, V1755, V1757]
Stack pops: 3
Stack additions: [V1763, S1, S2]
Exit stack: [V1763, V1755, V1748]

================================

Block 0x11e2
[0x11e2:0x11e9]
---
Predecessors: [0x11d9]
Successors: []
Has unresolved jump.
---
0x11e2 JUMPDEST
0x11e3 POP
0x11e4 POP
0x11e5 POP
0x11e6 POP
0x11e7 POP
0x11e8 DUP2
0x11e9 JUMP
---
0x11e2: JUMPDEST 
0x11e9: JUMP S6
---
Entry stack: [V1763, V1755, V1748]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0x11ea
[0x11ea:0x11f6]
---
Predecessors: [0x601]
Successors: [0x11f7]
---
0x11ea JUMPDEST
0x11eb PUSH1 0x6
0x11ed SLOAD
0x11ee PUSH1 0x1
0x11f0 PUSH1 0xa0
0x11f2 PUSH1 0x2
0x11f4 EXP
0x11f5 SUB
0x11f6 AND
---
0x11ea: JUMPDEST 
0x11eb: V1764 = 0x6
0x11ed: V1765 = S[0x6]
0x11ee: V1766 = 0x1
0x11f0: V1767 = 0xa0
0x11f2: V1768 = 0x2
0x11f4: V1769 = EXP 0x2 0xa0
0x11f5: V1770 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11f6: V1771 = AND 0xffffffffffffffffffffffffffffffffffffffff V1765
---
Entry stack: [V12, 0x2dd]
Stack pops: 0
Stack additions: [V1771]
Exit stack: [V12, 0x2dd, V1771]

================================

Block 0x11f7
[0x11f7:0x11f9]
---
Predecessors: [0x11ea]
Successors: [0x2dd]
---
0x11f7 JUMPDEST
0x11f8 SWAP1
0x11f9 JUMP
---
0x11f7: JUMPDEST 
0x11f9: JUMP 0x2dd
---
Entry stack: [V12, 0x2dd, V1771]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V1771]

================================

Block 0x11fa
[0x11fa:0x120b]
---
Predecessors: [0x630]
Successors: [0xaba, 0x120c]
---
0x11fa JUMPDEST
0x11fb PUSH1 0x0
0x11fd PUSH1 0x1
0x11ff PUSH1 0xa0
0x1201 PUSH1 0x2
0x1203 EXP
0x1204 SUB
0x1205 DUP4
0x1206 AND
0x1207 ISZERO
0x1208 PUSH2 0xaba
0x120b JUMPI
---
0x11fa: JUMPDEST 
0x11fb: V1772 = 0x0
0x11fd: V1773 = 0x1
0x11ff: V1774 = 0xa0
0x1201: V1775 = 0x2
0x1203: V1776 = EXP 0x2 0xa0
0x1204: V1777 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1206: V1778 = AND V588 0xffffffffffffffffffffffffffffffffffffffff
0x1207: V1779 = ISZERO V1778
0x1208: V1780 = 0xaba
0x120b: JUMPI 0xaba V1779
---
Entry stack: [V12, 0x28f, V588, V590]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x28f, V588, V590, 0x0]

================================

Block 0x120c
[0x120c:0x1223]
---
Predecessors: [0x11fa]
Successors: [0x16e6]
---
0x120c PUSH2 0x1224
0x120f DUP4
0x1210 DUP4
0x1211 PUSH1 0x20
0x1213 PUSH1 0x40
0x1215 MLOAD
0x1216 SWAP1
0x1217 DUP2
0x1218 ADD
0x1219 PUSH1 0x40
0x121b MSTORE
0x121c PUSH1 0x0
0x121e DUP2
0x121f MSTORE
0x1220 PUSH2 0x16e6
0x1223 JUMP
---
0x120c: V1781 = 0x1224
0x1211: V1782 = 0x20
0x1213: V1783 = 0x40
0x1215: V1784 = M[0x40]
0x1218: V1785 = ADD V1784 0x20
0x1219: V1786 = 0x40
0x121b: M[0x40] = V1785
0x121c: V1787 = 0x0
0x121f: M[V1784] = 0x0
0x1220: V1788 = 0x16e6
0x1223: JUMP 0x16e6
---
Entry stack: [V12, 0x28f, V588, V590, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1224, S2, S1, V1784]
Exit stack: [V12, 0x28f, V588, V590, 0x0, 0x1224, V588, V590, V1784]

================================

Block 0x1224
[0x1224:0x122a]
---
Predecessors: [0xcd6, 0x1144, 0x187e]
Successors: [0xabe]
---
0x1224 JUMPDEST
0x1225 SWAP1
0x1226 POP
0x1227 PUSH2 0xabe
0x122a JUMP
---
0x1224: JUMPDEST 
0x1227: V1789 = 0xabe
0x122a: JUMP 0xabe
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S2, S0]

================================

Block 0x122b
[0x122b:0x1232]
---
Predecessors: []
Successors: [0xabe]
---
0x122b JUMPDEST
0x122c POP
0x122d PUSH1 0x0
0x122f PUSH2 0xabe
0x1232 JUMP
---
0x122b: JUMPDEST 
0x122d: V1790 = 0x0
0x122f: V1791 = 0xabe
0x1232: JUMP 0xabe
---
Entry stack: []
Stack pops: 1
Stack additions: [0x0]
Exit stack: [0x0]

================================

Block 0x1233
[0x1233:0x1233]
---
Predecessors: []
Successors: [0x1234]
---
0x1233 JUMPDEST
---
0x1233: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1234
[0x1234:0x1239]
---
Predecessors: [0x1233]
Successors: []
Has unresolved jump.
---
0x1234 JUMPDEST
0x1235 SWAP3
0x1236 SWAP2
0x1237 POP
0x1238 POP
0x1239 JUMP
---
0x1234: JUMPDEST 
0x1239: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x123a
[0x123a:0x124b]
---
Predecessors: [0x666]
Successors: [0xcd1, 0x124c]
---
0x123a JUMPDEST
0x123b PUSH1 0x0
0x123d PUSH1 0x1
0x123f PUSH1 0xa0
0x1241 PUSH1 0x2
0x1243 EXP
0x1244 SUB
0x1245 DUP5
0x1246 AND
0x1247 ISZERO
0x1248 PUSH2 0xcd1
0x124b JUMPI
---
0x123a: JUMPDEST 
0x123b: V1792 = 0x0
0x123d: V1793 = 0x1
0x123f: V1794 = 0xa0
0x1241: V1795 = 0x2
0x1243: V1796 = EXP 0x2 0xa0
0x1244: V1797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1246: V1798 = AND V613 0xffffffffffffffffffffffffffffffffffffffff
0x1247: V1799 = ISZERO V1798
0x1248: V1800 = 0xcd1
0x124b: JUMPI 0xcd1 V1799
---
Entry stack: [V12, 0x28f, V613, V615, V629]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V12, 0x28f, V613, V615, V629, 0x0]

================================

Block 0x124c
[0x124c:0x1255]
---
Predecessors: [0x123a]
Successors: [0x16e6]
---
0x124c PUSH2 0x1256
0x124f DUP5
0x1250 DUP5
0x1251 DUP5
0x1252 PUSH2 0x16e6
0x1255 JUMP
---
0x124c: V1801 = 0x1256
0x1252: V1802 = 0x16e6
0x1255: JUMP 0x16e6
---
Entry stack: [V12, 0x28f, V613, V615, V629, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x1256, S3, S2, S1]
Exit stack: [V12, 0x28f, V613, V615, V629, 0x0, 0x1256, V613, V615, V629]

================================

Block 0x1256
[0x1256:0x125c]
---
Predecessors: [0xcd6, 0x1144, 0x187e]
Successors: [0xcd5]
---
0x1256 JUMPDEST
0x1257 SWAP1
0x1258 POP
0x1259 PUSH2 0xcd5
0x125c JUMP
---
0x1256: JUMPDEST 
0x1259: V1803 = 0xcd5
0x125c: JUMP 0xcd5
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S2, S0]

================================

Block 0x125d
[0x125d:0x1264]
---
Predecessors: []
Successors: [0xcd5]
---
0x125d JUMPDEST
0x125e POP
0x125f PUSH1 0x0
0x1261 PUSH2 0xcd5
0x1264 JUMP
---
0x125d: JUMPDEST 
0x125f: V1804 = 0x0
0x1261: V1805 = 0xcd5
0x1264: JUMP 0xcd5
---
Entry stack: []
Stack pops: 1
Stack additions: [0x0]
Exit stack: [0x0]

================================

Block 0x1265
[0x1265:0x1265]
---
Predecessors: []
Successors: [0x1266]
---
0x1265 JUMPDEST
---
0x1265: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1266
[0x1266:0x126c]
---
Predecessors: [0x1265]
Successors: []
Has unresolved jump.
---
0x1266 JUMPDEST
0x1267 SWAP4
0x1268 SWAP3
0x1269 POP
0x126a POP
0x126b POP
0x126c JUMP
---
0x1266: JUMPDEST 
0x126c: JUMP S4
---
Entry stack: []
Stack pops: 5
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x126d
[0x126d:0x1281]
---
Predecessors: [0x6df]
Successors: [0x1282, 0x1289]
---
0x126d JUMPDEST
0x126e PUSH1 0x1
0x1270 SLOAD
0x1271 PUSH1 0x0
0x1273 SWAP1
0x1274 PUSH1 0x1
0x1276 PUSH1 0xa0
0x1278 PUSH1 0x2
0x127a EXP
0x127b SUB
0x127c AND
0x127d ISZERO
0x127e PUSH2 0x1289
0x1281 JUMPI
---
0x126d: JUMPDEST 
0x126e: V1806 = 0x1
0x1270: V1807 = S[0x1]
0x1271: V1808 = 0x0
0x1274: V1809 = 0x1
0x1276: V1810 = 0xa0
0x1278: V1811 = 0x2
0x127a: V1812 = EXP 0x2 0xa0
0x127b: V1813 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127c: V1814 = AND 0xffffffffffffffffffffffffffffffffffffffff V1807
0x127d: V1815 = ISZERO V1814
0x127e: V1816 = 0x1289
0x1281: JUMPI 0x1289 V1815
---
Entry stack: [V12, 0x28f, V656, V670, V691]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x28f, V656, V670, V691, 0x0]

================================

Block 0x1282
[0x1282:0x1288]
---
Predecessors: [0x126d]
Successors: [0xcd5]
---
0x1282 POP
0x1283 PUSH1 0x0
0x1285 PUSH2 0xcd5
0x1288 JUMP
---
0x1283: V1817 = 0x0
0x1285: V1818 = 0xcd5
0x1288: JUMP 0xcd5
---
Entry stack: [V12, 0x28f, V656, V670, V691, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, V656, V670, V691, 0x0]

================================

Block 0x1289
[0x1289:0x12b6]
---
Predecessors: [0x126d]
Successors: [0x1803]
---
0x1289 JUMPDEST
0x128a PUSH1 0x1
0x128c DUP1
0x128d SLOAD
0x128e PUSH1 0x1
0x1290 PUSH1 0xa0
0x1292 PUSH1 0x2
0x1294 EXP
0x1295 SUB
0x1296 NOT
0x1297 AND
0x1298 PUSH1 0x1
0x129a PUSH1 0xa0
0x129c PUSH1 0x2
0x129e EXP
0x129f SUB
0x12a0 DUP7
0x12a1 AND
0x12a2 OR
0x12a3 SWAP1
0x12a4 SSTORE
0x12a5 PUSH1 0x4
0x12a7 DUP4
0x12a8 DUP1
0x12a9 MLOAD
0x12aa PUSH2 0x12b7
0x12ad SWAP3
0x12ae SWAP2
0x12af PUSH1 0x20
0x12b1 ADD
0x12b2 SWAP1
0x12b3 PUSH2 0x1803
0x12b6 JUMP
---
0x1289: JUMPDEST 
0x128a: V1819 = 0x1
0x128d: V1820 = S[0x1]
0x128e: V1821 = 0x1
0x1290: V1822 = 0xa0
0x1292: V1823 = 0x2
0x1294: V1824 = EXP 0x2 0xa0
0x1295: V1825 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1296: V1826 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1297: V1827 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1820
0x1298: V1828 = 0x1
0x129a: V1829 = 0xa0
0x129c: V1830 = 0x2
0x129e: V1831 = EXP 0x2 0xa0
0x129f: V1832 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a1: V1833 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x12a2: V1834 = OR V1833 V1827
0x12a4: S[0x1] = V1834
0x12a5: V1835 = 0x4
0x12a9: V1836 = M[V670]
0x12aa: V1837 = 0x12b7
0x12af: V1838 = 0x20
0x12b1: V1839 = ADD 0x20 V670
0x12b3: V1840 = 0x1803
0x12b6: JUMP 0x1803
---
Entry stack: [V12, 0x28f, V656, V670, V691, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x12b7, 0x4, V1839, V1836]
Exit stack: [V12, 0x28f, V656, V670, V691, 0x0, 0x12b7, 0x4, V1839, V1836]

================================

Block 0x12b7
[0x12b7:0x12c0]
---
Predecessors: [0x187e]
Successors: [0x143d]
---
0x12b7 JUMPDEST
0x12b8 POP
0x12b9 PUSH2 0x12c1
0x12bc DUP4
0x12bd PUSH2 0x143d
0x12c0 JUMP
---
0x12b7: JUMPDEST 
0x12b9: V1841 = 0x12c1
0x12bd: V1842 = 0x143d
0x12c0: JUMP 0x143d
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, 0x12c1, S3]
Exit stack: [S3, S2, S1, 0x12c1, S3]

================================

Block 0x12c1
[0x12c1:0x12d6]
---
Predecessors: [0x1447]
Successors: [0x1803]
---
0x12c1 JUMPDEST
0x12c2 PUSH1 0x2
0x12c4 SSTORE
0x12c5 PUSH1 0x3
0x12c7 DUP3
0x12c8 DUP1
0x12c9 MLOAD
0x12ca PUSH2 0x12d7
0x12cd SWAP3
0x12ce SWAP2
0x12cf PUSH1 0x20
0x12d1 ADD
0x12d2 SWAP1
0x12d3 PUSH2 0x1803
0x12d6 JUMP
---
0x12c1: JUMPDEST 
0x12c2: V1843 = 0x2
0x12c4: S[0x2] = S0
0x12c5: V1844 = 0x3
0x12c9: V1845 = M[S2]
0x12ca: V1846 = 0x12d7
0x12cf: V1847 = 0x20
0x12d1: V1848 = ADD 0x20 S2
0x12d3: V1849 = 0x1803
0x12d6: JUMP 0x1803
---
Entry stack: [S3, S2, V12, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x12d7, 0x3, V1848, V1845]
Exit stack: [S3, S2, V12, 0x12d7, 0x3, V1848, V1845]

================================

Block 0x12d7
[0x12d7:0x12dc]
---
Predecessors: [0x187e]
Successors: [0x12dd]
---
0x12d7 JUMPDEST
0x12d8 POP
0x12d9 PUSH1 0x1
0x12db SWAP1
0x12dc POP
---
0x12d7: JUMPDEST 
0x12d9: V1850 = 0x1
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, 0x1]

================================

Block 0x12dd
[0x12dd:0x12e3]
---
Predecessors: [0x12d7]
Successors: []
Has unresolved jump.
---
0x12dd JUMPDEST
0x12de SWAP4
0x12df SWAP3
0x12e0 POP
0x12e1 POP
0x12e2 POP
0x12e3 JUMP
---
0x12dd: JUMPDEST 
0x12e3: JUMP S4
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, S7, S6, S5, 0x1]

================================

Block 0x12e4
[0x12e4:0x1345]
---
Predecessors: [0x794]
Successors: [0x1346, 0x134a]
---
0x12e4 JUMPDEST
0x12e5 PUSH1 0x1
0x12e7 SLOAD
0x12e8 PUSH1 0x2
0x12ea SLOAD
0x12eb PUSH1 0x0
0x12ed SWAP2
0x12ee PUSH1 0x1
0x12f0 PUSH1 0xa0
0x12f2 PUSH1 0x2
0x12f4 EXP
0x12f5 SUB
0x12f6 AND
0x12f7 SWAP1
0x12f8 PUSH4 0xe96b462a
0x12fd SWAP1
0x12fe CALLER
0x12ff SWAP1
0x1300 DUP5
0x1301 PUSH1 0x40
0x1303 MLOAD
0x1304 PUSH1 0x20
0x1306 ADD
0x1307 MSTORE
0x1308 PUSH1 0x40
0x130a MLOAD
0x130b PUSH1 0xe0
0x130d PUSH1 0x2
0x130f EXP
0x1310 PUSH4 0xffffffff
0x1315 DUP6
0x1316 AND
0x1317 MUL
0x1318 DUP2
0x1319 MSTORE
0x131a PUSH1 0x1
0x131c PUSH1 0xa0
0x131e PUSH1 0x2
0x1320 EXP
0x1321 SUB
0x1322 SWAP1
0x1323 SWAP3
0x1324 AND
0x1325 PUSH1 0x4
0x1327 DUP4
0x1328 ADD
0x1329 MSTORE
0x132a PUSH1 0x24
0x132c DUP3
0x132d ADD
0x132e MSTORE
0x132f PUSH1 0x44
0x1331 ADD
0x1332 PUSH1 0x20
0x1334 PUSH1 0x40
0x1336 MLOAD
0x1337 DUP1
0x1338 DUP4
0x1339 SUB
0x133a DUP2
0x133b PUSH1 0x0
0x133d DUP8
0x133e DUP1
0x133f EXTCODESIZE
0x1340 ISZERO
0x1341 ISZERO
0x1342 PUSH2 0x134a
0x1345 JUMPI
---
0x12e4: JUMPDEST 
0x12e5: V1851 = 0x1
0x12e7: V1852 = S[0x1]
0x12e8: V1853 = 0x2
0x12ea: V1854 = S[0x2]
0x12eb: V1855 = 0x0
0x12ee: V1856 = 0x1
0x12f0: V1857 = 0xa0
0x12f2: V1858 = 0x2
0x12f4: V1859 = EXP 0x2 0xa0
0x12f5: V1860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f6: V1861 = AND 0xffffffffffffffffffffffffffffffffffffffff V1852
0x12f8: V1862 = 0xe96b462a
0x12fe: V1863 = CALLER
0x1301: V1864 = 0x40
0x1303: V1865 = M[0x40]
0x1304: V1866 = 0x20
0x1306: V1867 = ADD 0x20 V1865
0x1307: M[V1867] = 0x0
0x1308: V1868 = 0x40
0x130a: V1869 = M[0x40]
0x130b: V1870 = 0xe0
0x130d: V1871 = 0x2
0x130f: V1872 = EXP 0x2 0xe0
0x1310: V1873 = 0xffffffff
0x1316: V1874 = AND 0xe96b462a 0xffffffff
0x1317: V1875 = MUL 0xe96b462a 0x100000000000000000000000000000000000000000000000000000000
0x1319: M[V1869] = 0xe96b462a00000000000000000000000000000000000000000000000000000000
0x131a: V1876 = 0x1
0x131c: V1877 = 0xa0
0x131e: V1878 = 0x2
0x1320: V1879 = EXP 0x2 0xa0
0x1321: V1880 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1324: V1881 = AND V1863 0xffffffffffffffffffffffffffffffffffffffff
0x1325: V1882 = 0x4
0x1328: V1883 = ADD V1869 0x4
0x1329: M[V1883] = V1881
0x132a: V1884 = 0x24
0x132d: V1885 = ADD V1869 0x24
0x132e: M[V1885] = V1854
0x132f: V1886 = 0x44
0x1331: V1887 = ADD 0x44 V1869
0x1332: V1888 = 0x20
0x1334: V1889 = 0x40
0x1336: V1890 = M[0x40]
0x1339: V1891 = SUB V1887 V1890
0x133b: V1892 = 0x0
0x133f: V1893 = EXTCODESIZE V1861
0x1340: V1894 = ISZERO V1893
0x1341: V1895 = ISZERO V1894
0x1342: V1896 = 0x134a
0x1345: JUMPI 0x134a V1895
---
Entry stack: [V12, 0x28f, V718]
Stack pops: 0
Stack additions: [0x0, V1861, 0xe96b462a, V1887, 0x20, V1890, V1891, V1890, 0x0, V1861]
Exit stack: [V12, 0x28f, V718, 0x0, V1861, 0xe96b462a, V1887, 0x20, V1890, V1891, V1890, 0x0, V1861]

================================

Block 0x1346
[0x1346:0x1349]
---
Predecessors: [0x12e4]
Successors: []
---
0x1346 PUSH1 0x0
0x1348 DUP1
0x1349 REVERT
---
0x1346: V1897 = 0x0
0x1349: REVERT 0x0 0x0
---
Entry stack: [V12, 0x28f, V718, 0x0, V1861, 0xe96b462a, V1887, 0x20, V1890, V1891, V1890, 0x0, V1861]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, V718, 0x0, V1861, 0xe96b462a, V1887, 0x20, V1890, V1891, V1890, 0x0, V1861]

================================

Block 0x134a
[0x134a:0x1356]
---
Predecessors: [0x12e4]
Successors: [0x1357, 0x135b]
---
0x134a JUMPDEST
0x134b PUSH2 0x2c6
0x134e GAS
0x134f SUB
0x1350 CALL
0x1351 ISZERO
0x1352 ISZERO
0x1353 PUSH2 0x135b
0x1356 JUMPI
---
0x134a: JUMPDEST 
0x134b: V1898 = 0x2c6
0x134e: V1899 = GAS
0x134f: V1900 = SUB V1899 0x2c6
0x1350: V1901 = CALL V1900 V1861 0x0 V1890 V1891 V1890 0x20
0x1351: V1902 = ISZERO V1901
0x1352: V1903 = ISZERO V1902
0x1353: V1904 = 0x135b
0x1356: JUMPI 0x135b V1903
---
Entry stack: [V12, 0x28f, V718, 0x0, V1861, 0xe96b462a, V1887, 0x20, V1890, V1891, V1890, 0x0, V1861]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x28f, V718, 0x0, V1861, 0xe96b462a, V1887]

================================

Block 0x1357
[0x1357:0x135a]
---
Predecessors: [0x134a]
Successors: []
---
0x1357 PUSH1 0x0
0x1359 DUP1
0x135a REVERT
---
0x1357: V1905 = 0x0
0x135a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x28f, V718, 0x0, V1861, 0xe96b462a, V1887]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, V718, 0x0, V1861, 0xe96b462a, V1887]

================================

Block 0x135b
[0x135b:0x136a]
---
Predecessors: [0x134a]
Successors: [0x107c, 0x136b]
---
0x135b JUMPDEST
0x135c POP
0x135d POP
0x135e POP
0x135f PUSH1 0x40
0x1361 MLOAD
0x1362 DUP1
0x1363 MLOAD
0x1364 SWAP1
0x1365 POP
0x1366 ISZERO
0x1367 PUSH2 0x107c
0x136a JUMPI
---
0x135b: JUMPDEST 
0x135f: V1906 = 0x40
0x1361: V1907 = M[0x40]
0x1363: V1908 = M[V1907]
0x1366: V1909 = ISZERO V1908
0x1367: V1910 = 0x107c
0x136a: JUMPI 0x107c V1909
---
Entry stack: [V12, 0x28f, V718, 0x0, V1861, 0xe96b462a, V1887]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x28f, V718, 0x0]

================================

Block 0x136b
[0x136b:0x137b]
---
Predecessors: [0x135b]
Successors: [0x137c, 0x1383]
---
0x136b PUSH1 0x6
0x136d SLOAD
0x136e PUSH1 0x1
0x1370 PUSH1 0xa0
0x1372 PUSH1 0x2
0x1374 EXP
0x1375 SUB
0x1376 AND
0x1377 ISZERO
0x1378 PUSH2 0x1383
0x137b JUMPI
---
0x136b: V1911 = 0x6
0x136d: V1912 = S[0x6]
0x136e: V1913 = 0x1
0x1370: V1914 = 0xa0
0x1372: V1915 = 0x2
0x1374: V1916 = EXP 0x2 0xa0
0x1375: V1917 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1376: V1918 = AND 0xffffffffffffffffffffffffffffffffffffffff V1912
0x1377: V1919 = ISZERO V1918
0x1378: V1920 = 0x1383
0x137b: JUMPI 0x1383 V1919
---
Entry stack: [V12, 0x28f, V718, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, V718, 0x0]

================================

Block 0x137c
[0x137c:0x1382]
---
Predecessors: [0x136b]
Successors: [0x107c]
---
0x137c POP
0x137d PUSH1 0x0
0x137f PUSH2 0x107c
0x1382 JUMP
---
0x137d: V1921 = 0x0
0x137f: V1922 = 0x107c
0x1382: JUMP 0x107c
---
Entry stack: [V12, 0x28f, V718, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, V718, 0x0]

================================

Block 0x1383
[0x1383:0x1393]
---
Predecessors: [0x136b]
Successors: [0x1394, 0x139b]
---
0x1383 JUMPDEST
0x1384 PUSH1 0x1
0x1386 PUSH1 0xa0
0x1388 PUSH1 0x2
0x138a EXP
0x138b SUB
0x138c DUP3
0x138d AND
0x138e ISZERO
0x138f ISZERO
0x1390 PUSH2 0x139b
0x1393 JUMPI
---
0x1383: JUMPDEST 
0x1384: V1923 = 0x1
0x1386: V1924 = 0xa0
0x1388: V1925 = 0x2
0x138a: V1926 = EXP 0x2 0xa0
0x138b: V1927 = SUB 0x10000000000000000000000000000000000000000 0x1
0x138d: V1928 = AND V718 0xffffffffffffffffffffffffffffffffffffffff
0x138e: V1929 = ISZERO V1928
0x138f: V1930 = ISZERO V1929
0x1390: V1931 = 0x139b
0x1393: JUMPI 0x139b V1930
---
Entry stack: [V12, 0x28f, V718, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x28f, V718, 0x0]

================================

Block 0x1394
[0x1394:0x139a]
---
Predecessors: [0x1383]
Successors: [0x107c]
---
0x1394 POP
0x1395 PUSH1 0x0
0x1397 PUSH2 0x107c
0x139a JUMP
---
0x1395: V1932 = 0x0
0x1397: V1933 = 0x107c
0x139a: JUMP 0x107c
---
Entry stack: [V12, 0x28f, V718, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, V718, 0x0]

================================

Block 0x139b
[0x139b:0x13ad]
---
Predecessors: [0x1383]
Successors: [0x13ae, 0x13d0]
---
0x139b JUMPDEST
0x139c PUSH1 0x5
0x139e SLOAD
0x139f PUSH1 0x1
0x13a1 PUSH1 0xa0
0x13a3 PUSH1 0x2
0x13a5 EXP
0x13a6 SUB
0x13a7 AND
0x13a8 ISZERO
0x13a9 ISZERO
0x13aa PUSH2 0x13d0
0x13ad JUMPI
---
0x139b: JUMPDEST 
0x139c: V1934 = 0x5
0x139e: V1935 = S[0x5]
0x139f: V1936 = 0x1
0x13a1: V1937 = 0xa0
0x13a3: V1938 = 0x2
0x13a5: V1939 = EXP 0x2 0xa0
0x13a6: V1940 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a7: V1941 = AND 0xffffffffffffffffffffffffffffffffffffffff V1935
0x13a8: V1942 = ISZERO V1941
0x13a9: V1943 = ISZERO V1942
0x13aa: V1944 = 0x13d0
0x13ad: JUMPI 0x13d0 V1943
---
Entry stack: [V12, 0x28f, V718, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, V718, 0x0]

================================

Block 0x13ae
[0x13ae:0x13cf]
---
Predecessors: [0x139b]
Successors: [0x107c]
---
0x13ae POP
0x13af PUSH1 0x5
0x13b1 DUP1
0x13b2 SLOAD
0x13b3 PUSH1 0x1
0x13b5 PUSH1 0xa0
0x13b7 PUSH1 0x2
0x13b9 EXP
0x13ba SUB
0x13bb NOT
0x13bc AND
0x13bd PUSH1 0x1
0x13bf PUSH1 0xa0
0x13c1 PUSH1 0x2
0x13c3 EXP
0x13c4 SUB
0x13c5 DUP4
0x13c6 AND
0x13c7 OR
0x13c8 SWAP1
0x13c9 SSTORE
0x13ca PUSH1 0x1
0x13cc PUSH2 0x107c
0x13cf JUMP
---
0x13af: V1945 = 0x5
0x13b2: V1946 = S[0x5]
0x13b3: V1947 = 0x1
0x13b5: V1948 = 0xa0
0x13b7: V1949 = 0x2
0x13b9: V1950 = EXP 0x2 0xa0
0x13ba: V1951 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13bb: V1952 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x13bc: V1953 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1946
0x13bd: V1954 = 0x1
0x13bf: V1955 = 0xa0
0x13c1: V1956 = 0x2
0x13c3: V1957 = EXP 0x2 0xa0
0x13c4: V1958 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c6: V1959 = AND V718 0xffffffffffffffffffffffffffffffffffffffff
0x13c7: V1960 = OR V1959 V1953
0x13c9: S[0x5] = V1960
0x13ca: V1961 = 0x1
0x13cc: V1962 = 0x107c
0x13cf: JUMP 0x107c
---
Entry stack: [V12, 0x28f, V718, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x28f, V718, 0x1]

================================

Block 0x13d0
[0x13d0:0x142f]
---
Predecessors: [0x139b]
Successors: [0x1430]
---
0x13d0 JUMPDEST
0x13d1 PUSH1 0x6
0x13d3 DUP1
0x13d4 SLOAD
0x13d5 PUSH1 0x1
0x13d7 PUSH1 0xa0
0x13d9 PUSH1 0x2
0x13db EXP
0x13dc SUB
0x13dd NOT
0x13de AND
0x13df PUSH1 0x1
0x13e1 PUSH1 0xa0
0x13e3 PUSH1 0x2
0x13e5 EXP
0x13e6 SUB
0x13e7 DUP5
0x13e8 AND
0x13e9 OR
0x13ea SWAP1
0x13eb SSTORE
0x13ec TIMESTAMP
0x13ed PUSH1 0x7
0x13ef SSTORE
0x13f0 PUSH32 0xaf574319215a31df9b528258f1bdeef2b12b169dc85ff443a49373248c77493a
0x1411 DUP3
0x1412 PUSH1 0x40
0x1414 MLOAD
0x1415 PUSH1 0x1
0x1417 PUSH1 0xa0
0x1419 PUSH1 0x2
0x141b EXP
0x141c SUB
0x141d SWAP1
0x141e SWAP2
0x141f AND
0x1420 DUP2
0x1421 MSTORE
0x1422 PUSH1 0x20
0x1424 ADD
0x1425 PUSH1 0x40
0x1427 MLOAD
0x1428 DUP1
0x1429 SWAP2
0x142a SUB
0x142b SWAP1
0x142c LOG1
0x142d POP
0x142e PUSH1 0x1
---
0x13d0: JUMPDEST 
0x13d1: V1963 = 0x6
0x13d4: V1964 = S[0x6]
0x13d5: V1965 = 0x1
0x13d7: V1966 = 0xa0
0x13d9: V1967 = 0x2
0x13db: V1968 = EXP 0x2 0xa0
0x13dc: V1969 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13dd: V1970 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x13de: V1971 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1964
0x13df: V1972 = 0x1
0x13e1: V1973 = 0xa0
0x13e3: V1974 = 0x2
0x13e5: V1975 = EXP 0x2 0xa0
0x13e6: V1976 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e8: V1977 = AND V718 0xffffffffffffffffffffffffffffffffffffffff
0x13e9: V1978 = OR V1977 V1971
0x13eb: S[0x6] = V1978
0x13ec: V1979 = TIMESTAMP
0x13ed: V1980 = 0x7
0x13ef: S[0x7] = V1979
0x13f0: V1981 = 0xaf574319215a31df9b528258f1bdeef2b12b169dc85ff443a49373248c77493a
0x1412: V1982 = 0x40
0x1414: V1983 = M[0x40]
0x1415: V1984 = 0x1
0x1417: V1985 = 0xa0
0x1419: V1986 = 0x2
0x141b: V1987 = EXP 0x2 0xa0
0x141c: V1988 = SUB 0x10000000000000000000000000000000000000000 0x1
0x141f: V1989 = AND V718 0xffffffffffffffffffffffffffffffffffffffff
0x1421: M[V1983] = V1989
0x1422: V1990 = 0x20
0x1424: V1991 = ADD 0x20 V1983
0x1425: V1992 = 0x40
0x1427: V1993 = M[0x40]
0x142a: V1994 = SUB V1991 V1993
0x142c: LOG V1993 V1994 0xaf574319215a31df9b528258f1bdeef2b12b169dc85ff443a49373248c77493a
0x142e: V1995 = 0x1
---
Entry stack: [V12, 0x28f, V718, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x28f, V718, 0x1]

================================

Block 0x1430
[0x1430:0x1430]
---
Predecessors: [0x13d0]
Successors: [0x1431]
---
0x1430 JUMPDEST
---
0x1430: JUMPDEST 
---
Entry stack: [V12, 0x28f, V718, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, V718, 0x1]

================================

Block 0x1431
[0x1431:0x1431]
---
Predecessors: [0x1430]
Successors: [0x1432]
---
0x1431 JUMPDEST
---
0x1431: JUMPDEST 
---
Entry stack: [V12, 0x28f, V718, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, V718, 0x1]

================================

Block 0x1432
[0x1432:0x1436]
---
Predecessors: [0x1431]
Successors: [0x28f]
---
0x1432 JUMPDEST
0x1433 SWAP2
0x1434 SWAP1
0x1435 POP
0x1436 JUMP
---
0x1432: JUMPDEST 
0x1436: JUMP 0x28f
---
Entry stack: [V12, 0x28f, V718, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x1437
[0x1437:0x143c]
---
Predecessors: [0x7c7]
Successors: [0x30c]
---
0x1437 JUMPDEST
0x1438 PUSH1 0x2
0x143a SLOAD
0x143b DUP2
0x143c JUMP
---
0x1437: JUMPDEST 
0x1438: V1996 = 0x2
0x143a: V1997 = S[0x2]
0x143c: JUMP 0x30c
---
Entry stack: [V12, 0x30c]
Stack pops: 1
Stack additions: [S0, V1997]
Exit stack: [V12, 0x30c, V1997]

================================

Block 0x143d
[0x143d:0x1446]
---
Predecessors: [0x7ec, 0x12b7]
Successors: [0x1447]
---
0x143d JUMPDEST
0x143e PUSH1 0x0
0x1440 PUSH1 0x20
0x1442 DUP3
0x1443 ADD
0x1444 MLOAD
0x1445 SWAP1
0x1446 POP
---
0x143d: JUMPDEST 
0x143e: V1998 = 0x0
0x1440: V1999 = 0x20
0x1443: V2000 = ADD V760 0x20
0x1444: V2001 = M[V2000]
---
Entry stack: [S4, S3, V12, {0x30c, 0x12c1}, V760]
Stack pops: 1
Stack additions: [S0, V2001]
Exit stack: [S4, S3, V12, {0x30c, 0x12c1}, V760, V2001]

================================

Block 0x1447
[0x1447:0x144b]
---
Predecessors: [0x143d]
Successors: [0x30c, 0x12c1]
---
0x1447 JUMPDEST
0x1448 SWAP2
0x1449 SWAP1
0x144a POP
0x144b JUMP
---
0x1447: JUMPDEST 
0x144b: JUMP {0x30c, 0x12c1}
---
Entry stack: [S5, S4, V12, {0x30c, 0x12c1}, V760, V2001]
Stack pops: 3
Stack additions: [S0]
Exit stack: [S5, S4, V12, V2001]

================================

Block 0x144c
[0x144c:0x146e]
---
Predecessors: [0x84f]
Successors: [0x146f, 0x1476]
---
0x144c JUMPDEST
0x144d PUSH1 0x1
0x144f PUSH1 0xa0
0x1451 PUSH1 0x2
0x1453 EXP
0x1454 SUB
0x1455 CALLER
0x1456 DUP2
0x1457 AND
0x1458 PUSH1 0x0
0x145a SWAP1
0x145b DUP2
0x145c MSTORE
0x145d PUSH1 0x8
0x145f PUSH1 0x20
0x1461 MSTORE
0x1462 PUSH1 0x40
0x1464 DUP2
0x1465 SHA3
0x1466 SLOAD
0x1467 SWAP1
0x1468 SWAP2
0x1469 AND
0x146a ISZERO
0x146b PUSH2 0x1476
0x146e JUMPI
---
0x144c: JUMPDEST 
0x144d: V2002 = 0x1
0x144f: V2003 = 0xa0
0x1451: V2004 = 0x2
0x1453: V2005 = EXP 0x2 0xa0
0x1454: V2006 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1455: V2007 = CALLER
0x1457: V2008 = AND 0xffffffffffffffffffffffffffffffffffffffff V2007
0x1458: V2009 = 0x0
0x145c: M[0x0] = V2008
0x145d: V2010 = 0x8
0x145f: V2011 = 0x20
0x1461: M[0x20] = 0x8
0x1462: V2012 = 0x40
0x1465: V2013 = SHA3 0x0 0x40
0x1466: V2014 = S[V2013]
0x1469: V2015 = AND 0xffffffffffffffffffffffffffffffffffffffff V2014
0x146a: V2016 = ISZERO V2015
0x146b: V2017 = 0x1476
0x146e: JUMPI 0x1476 V2016
---
Entry stack: [V12, 0x28f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0x146f
[0x146f:0x1475]
---
Predecessors: [0x144c]
Successors: [0x976]
---
0x146f POP
0x1470 PUSH1 0x0
0x1472 PUSH2 0x976
0x1475 JUMP
---
0x1470: V2018 = 0x0
0x1472: V2019 = 0x976
0x1475: JUMP 0x976
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x28f, 0x0]

================================

Block 0x1476
[0x1476:0x14a9]
---
Predecessors: [0x144c]
Successors: [0x14aa]
---
0x1476 JUMPDEST
0x1477 POP
0x1478 PUSH1 0x5
0x147a SLOAD
0x147b CALLER
0x147c PUSH1 0x1
0x147e PUSH1 0xa0
0x1480 PUSH1 0x2
0x1482 EXP
0x1483 SUB
0x1484 SWAP1
0x1485 DUP2
0x1486 AND
0x1487 PUSH1 0x0
0x1489 SWAP1
0x148a DUP2
0x148b MSTORE
0x148c PUSH1 0x8
0x148e PUSH1 0x20
0x1490 MSTORE
0x1491 PUSH1 0x40
0x1493 SWAP1
0x1494 SHA3
0x1495 DUP1
0x1496 SLOAD
0x1497 PUSH1 0x1
0x1499 PUSH1 0xa0
0x149b PUSH1 0x2
0x149d EXP
0x149e SUB
0x149f NOT
0x14a0 AND
0x14a1 SWAP2
0x14a2 SWAP1
0x14a3 SWAP3
0x14a4 AND
0x14a5 OR
0x14a6 SWAP1
0x14a7 SSTORE
0x14a8 PUSH1 0x1
---
0x1476: JUMPDEST 
0x1478: V2020 = 0x5
0x147a: V2021 = S[0x5]
0x147b: V2022 = CALLER
0x147c: V2023 = 0x1
0x147e: V2024 = 0xa0
0x1480: V2025 = 0x2
0x1482: V2026 = EXP 0x2 0xa0
0x1483: V2027 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1486: V2028 = AND 0xffffffffffffffffffffffffffffffffffffffff V2022
0x1487: V2029 = 0x0
0x148b: M[0x0] = V2028
0x148c: V2030 = 0x8
0x148e: V2031 = 0x20
0x1490: M[0x20] = 0x8
0x1491: V2032 = 0x40
0x1494: V2033 = SHA3 0x0 0x40
0x1496: V2034 = S[V2033]
0x1497: V2035 = 0x1
0x1499: V2036 = 0xa0
0x149b: V2037 = 0x2
0x149d: V2038 = EXP 0x2 0xa0
0x149e: V2039 = SUB 0x10000000000000000000000000000000000000000 0x1
0x149f: V2040 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x14a0: V2041 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V2034
0x14a4: V2042 = AND V2021 0xffffffffffffffffffffffffffffffffffffffff
0x14a5: V2043 = OR V2042 V2041
0x14a7: S[V2033] = V2043
0x14a8: V2044 = 0x1
---
Entry stack: [V12, 0x28f, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x28f, 0x1]

================================

Block 0x14aa
[0x14aa:0x14ac]
---
Predecessors: [0x1476]
Successors: [0x28f]
---
0x14aa JUMPDEST
0x14ab SWAP1
0x14ac JUMP
---
0x14aa: JUMPDEST 
0x14ac: JUMP 0x28f
---
Entry stack: [V12, 0x28f, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x14ad
[0x14ad:0x151c]
---
Predecessors: [0x876]
Successors: [0x151d, 0x1521]
---
0x14ad JUMPDEST
0x14ae PUSH1 0x1
0x14b0 SLOAD
0x14b1 PUSH1 0x2
0x14b3 SLOAD
0x14b4 PUSH1 0x0
0x14b6 SWAP2
0x14b7 PUSH1 0x1
0x14b9 PUSH1 0xa0
0x14bb PUSH1 0x2
0x14bd EXP
0x14be SUB
0x14bf AND
0x14c0 SWAP1
0x14c1 PUSH4 0x1c8d5d38
0x14c6 SWAP1
0x14c7 DUP6
0x14c8 SWAP1
0x14c9 DUP6
0x14ca SWAP1
0x14cb DUP6
0x14cc PUSH1 0x40
0x14ce MLOAD
0x14cf PUSH1 0x20
0x14d1 ADD
0x14d2 MSTORE
0x14d3 PUSH1 0x40
0x14d5 MLOAD
0x14d6 PUSH1 0xe0
0x14d8 PUSH1 0x2
0x14da EXP
0x14db PUSH4 0xffffffff
0x14e0 DUP7
0x14e1 AND
0x14e2 MUL
0x14e3 DUP2
0x14e4 MSTORE
0x14e5 PUSH1 0x1
0x14e7 PUSH1 0xa0
0x14e9 PUSH1 0x2
0x14eb EXP
0x14ec SUB
0x14ed SWAP4
0x14ee DUP5
0x14ef AND
0x14f0 PUSH1 0x4
0x14f2 DUP3
0x14f3 ADD
0x14f4 MSTORE
0x14f5 SWAP2
0x14f6 SWAP1
0x14f7 SWAP3
0x14f8 AND
0x14f9 PUSH1 0x24
0x14fb DUP3
0x14fc ADD
0x14fd MSTORE
0x14fe PUSH1 0x44
0x1500 DUP2
0x1501 ADD
0x1502 SWAP2
0x1503 SWAP1
0x1504 SWAP2
0x1505 MSTORE
0x1506 PUSH1 0x64
0x1508 ADD
0x1509 PUSH1 0x20
0x150b PUSH1 0x40
0x150d MLOAD
0x150e DUP1
0x150f DUP4
0x1510 SUB
0x1511 DUP2
0x1512 PUSH1 0x0
0x1514 DUP8
0x1515 DUP1
0x1516 EXTCODESIZE
0x1517 ISZERO
0x1518 ISZERO
0x1519 PUSH2 0x1521
0x151c JUMPI
---
0x14ad: JUMPDEST 
0x14ae: V2045 = 0x1
0x14b0: V2046 = S[0x1]
0x14b1: V2047 = 0x2
0x14b3: V2048 = S[0x2]
0x14b4: V2049 = 0x0
0x14b7: V2050 = 0x1
0x14b9: V2051 = 0xa0
0x14bb: V2052 = 0x2
0x14bd: V2053 = EXP 0x2 0xa0
0x14be: V2054 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14bf: V2055 = AND 0xffffffffffffffffffffffffffffffffffffffff V2046
0x14c1: V2056 = 0x1c8d5d38
0x14cc: V2057 = 0x40
0x14ce: V2058 = M[0x40]
0x14cf: V2059 = 0x20
0x14d1: V2060 = ADD 0x20 V2058
0x14d2: M[V2060] = 0x0
0x14d3: V2061 = 0x40
0x14d5: V2062 = M[0x40]
0x14d6: V2063 = 0xe0
0x14d8: V2064 = 0x2
0x14da: V2065 = EXP 0x2 0xe0
0x14db: V2066 = 0xffffffff
0x14e1: V2067 = AND 0x1c8d5d38 0xffffffff
0x14e2: V2068 = MUL 0x1c8d5d38 0x100000000000000000000000000000000000000000000000000000000
0x14e4: M[V2062] = 0x1c8d5d3800000000000000000000000000000000000000000000000000000000
0x14e5: V2069 = 0x1
0x14e7: V2070 = 0xa0
0x14e9: V2071 = 0x2
0x14eb: V2072 = EXP 0x2 0xa0
0x14ec: V2073 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14ef: V2074 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0x14f0: V2075 = 0x4
0x14f3: V2076 = ADD V2062 0x4
0x14f4: M[V2076] = V2074
0x14f8: V2077 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0x14f9: V2078 = 0x24
0x14fc: V2079 = ADD V2062 0x24
0x14fd: M[V2079] = V2077
0x14fe: V2080 = 0x44
0x1501: V2081 = ADD V2062 0x44
0x1505: M[V2081] = V2048
0x1506: V2082 = 0x64
0x1508: V2083 = ADD 0x64 V2062
0x1509: V2084 = 0x20
0x150b: V2085 = 0x40
0x150d: V2086 = M[0x40]
0x1510: V2087 = SUB V2083 V2086
0x1512: V2088 = 0x0
0x1516: V2089 = EXTCODESIZE V2055
0x1517: V2090 = ISZERO V2089
0x1518: V2091 = ISZERO V2090
0x1519: V2092 = 0x1521
0x151c: JUMPI 0x1521 V2091
---
Entry stack: [V12, 0x30c, V800, V803]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V2055, 0x1c8d5d38, V2083, 0x20, V2086, V2087, V2086, 0x0, V2055]
Exit stack: [V12, 0x30c, V800, V803, 0x0, V2055, 0x1c8d5d38, V2083, 0x20, V2086, V2087, V2086, 0x0, V2055]

================================

Block 0x151d
[0x151d:0x1520]
---
Predecessors: [0x14ad]
Successors: []
---
0x151d PUSH1 0x0
0x151f DUP1
0x1520 REVERT
---
0x151d: V2093 = 0x0
0x1520: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V800, V803, 0x0, V2055, 0x1c8d5d38, V2083, 0x20, V2086, V2087, V2086, 0x0, V2055]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V800, V803, 0x0, V2055, 0x1c8d5d38, V2083, 0x20, V2086, V2087, V2086, 0x0, V2055]

================================

Block 0x1521
[0x1521:0x152d]
---
Predecessors: [0x14ad]
Successors: [0x152e, 0x1532]
---
0x1521 JUMPDEST
0x1522 PUSH2 0x2c6
0x1525 GAS
0x1526 SUB
0x1527 CALL
0x1528 ISZERO
0x1529 ISZERO
0x152a PUSH2 0x1532
0x152d JUMPI
---
0x1521: JUMPDEST 
0x1522: V2094 = 0x2c6
0x1525: V2095 = GAS
0x1526: V2096 = SUB V2095 0x2c6
0x1527: V2097 = CALL V2096 V2055 0x0 V2086 V2087 V2086 0x20
0x1528: V2098 = ISZERO V2097
0x1529: V2099 = ISZERO V2098
0x152a: V2100 = 0x1532
0x152d: JUMPI 0x1532 V2099
---
Entry stack: [V12, 0x30c, V800, V803, 0x0, V2055, 0x1c8d5d38, V2083, 0x20, V2086, V2087, V2086, 0x0, V2055]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x30c, V800, V803, 0x0, V2055, 0x1c8d5d38, V2083]

================================

Block 0x152e
[0x152e:0x1531]
---
Predecessors: [0x1521]
Successors: []
---
0x152e PUSH1 0x0
0x1530 DUP1
0x1531 REVERT
---
0x152e: V2101 = 0x0
0x1531: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30c, V800, V803, 0x0, V2055, 0x1c8d5d38, V2083]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30c, V800, V803, 0x0, V2055, 0x1c8d5d38, V2083]

================================

Block 0x1532
[0x1532:0x153d]
---
Predecessors: [0x1521]
Successors: [0x153e]
---
0x1532 JUMPDEST
0x1533 POP
0x1534 POP
0x1535 POP
0x1536 PUSH1 0x40
0x1538 MLOAD
0x1539 DUP1
0x153a MLOAD
0x153b SWAP2
0x153c POP
0x153d POP
---
0x1532: JUMPDEST 
0x1536: V2102 = 0x40
0x1538: V2103 = M[0x40]
0x153a: V2104 = M[V2103]
---
Entry stack: [V12, 0x30c, V800, V803, 0x0, V2055, 0x1c8d5d38, V2083]
Stack pops: 4
Stack additions: [V2104]
Exit stack: [V12, 0x30c, V800, V803, V2104]

================================

Block 0x153e
[0x153e:0x1543]
---
Predecessors: [0x1532]
Successors: [0x30c]
---
0x153e JUMPDEST
0x153f SWAP3
0x1540 SWAP2
0x1541 POP
0x1542 POP
0x1543 JUMP
---
0x153e: JUMPDEST 
0x1543: JUMP 0x30c
---
Entry stack: [V12, 0x30c, V800, V803, V2104]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V2104]

================================

Block 0x1544
[0x1544:0x1559]
---
Predecessors: [0x8ad]
Successors: [0x168f]
---
0x1544 JUMPDEST
0x1545 PUSH1 0x0
0x1547 DUP2
0x1548 CALLER
0x1549 PUSH1 0x1
0x154b PUSH1 0xa0
0x154d PUSH1 0x2
0x154f EXP
0x1550 SUB
0x1551 AND
0x1552 PUSH2 0x155a
0x1555 DUP3
0x1556 PUSH2 0x168f
0x1559 JUMP
---
0x1544: JUMPDEST 
0x1545: V2105 = 0x0
0x1548: V2106 = CALLER
0x1549: V2107 = 0x1
0x154b: V2108 = 0xa0
0x154d: V2109 = 0x2
0x154f: V2110 = EXP 0x2 0xa0
0x1550: V2111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1551: V2112 = AND 0xffffffffffffffffffffffffffffffffffffffff V2106
0x1552: V2113 = 0x155a
0x1556: V2114 = 0x168f
0x1559: JUMP 0x168f
---
Entry stack: [V12, 0x28f, V824, V827, V829, V843, V854]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V2112, 0x155a, S0]
Exit stack: [V12, 0x28f, V824, V827, V829, V843, V854, 0x0, V854, V2112, 0x155a, V854]

================================

Block 0x155a
[0x155a:0x1569]
---
Predecessors: [0x16e1]
Successors: [0x156a, 0x1683]
---
0x155a JUMPDEST
0x155b PUSH1 0x1
0x155d PUSH1 0xa0
0x155f PUSH1 0x2
0x1561 EXP
0x1562 SUB
0x1563 AND
0x1564 EQ
0x1565 ISZERO
0x1566 PUSH2 0x1683
0x1569 JUMPI
---
0x155a: JUMPDEST 
0x155b: V2115 = 0x1
0x155d: V2116 = 0xa0
0x155f: V2117 = 0x2
0x1561: V2118 = EXP 0x2 0xa0
0x1562: V2119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1563: V2120 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1564: V2121 = EQ V2120 S1
0x1565: V2122 = ISZERO V2121
0x1566: V2123 = 0x1683
0x1569: JUMPI 0x1683 V2122
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x156a
[0x156a:0x15fa]
---
Predecessors: [0x155a]
Successors: [0x15fb]
---
0x156a PUSH1 0x1
0x156c DUP1
0x156d SLOAD
0x156e PUSH1 0x2
0x1570 SLOAD
0x1571 PUSH1 0x1
0x1573 PUSH1 0xa0
0x1575 PUSH1 0x2
0x1577 EXP
0x1578 SUB
0x1579 SWAP1
0x157a SWAP2
0x157b AND
0x157c SWAP1
0x157d PUSH4 0x161ff662
0x1582 SWAP1
0x1583 DUP11
0x1584 SWAP1
0x1585 DUP11
0x1586 SWAP1
0x1587 DUP11
0x1588 SWAP1
0x1589 DUP11
0x158a DUP11
0x158b PUSH1 0x0
0x158d PUSH1 0x40
0x158f MLOAD
0x1590 PUSH1 0x20
0x1592 ADD
0x1593 MSTORE
0x1594 PUSH1 0x40
0x1596 MLOAD
0x1597 PUSH1 0xe0
0x1599 PUSH1 0x2
0x159b EXP
0x159c PUSH4 0xffffffff
0x15a1 DUP10
0x15a2 AND
0x15a3 MUL
0x15a4 DUP2
0x15a5 MSTORE
0x15a6 PUSH1 0x1
0x15a8 PUSH1 0xa0
0x15aa PUSH1 0x2
0x15ac EXP
0x15ad SUB
0x15ae DUP1
0x15af DUP9
0x15b0 AND
0x15b1 PUSH1 0x4
0x15b3 DUP4
0x15b4 ADD
0x15b5 SWAP1
0x15b6 DUP2
0x15b7 MSTORE
0x15b8 DUP8
0x15b9 DUP3
0x15ba AND
0x15bb PUSH1 0x24
0x15bd DUP5
0x15be ADD
0x15bf MSTORE
0x15c0 PUSH1 0x44
0x15c2 DUP4
0x15c3 ADD
0x15c4 DUP8
0x15c5 SWAP1
0x15c6 MSTORE
0x15c7 PUSH1 0x64
0x15c9 DUP4
0x15ca ADD
0x15cb DUP7
0x15cc SWAP1
0x15cd MSTORE
0x15ce SWAP1
0x15cf DUP4
0x15d0 AND
0x15d1 PUSH1 0xa4
0x15d3 DUP4
0x15d4 ADD
0x15d5 MSTORE
0x15d6 PUSH1 0xc0
0x15d8 PUSH1 0x84
0x15da DUP4
0x15db ADD
0x15dc SWAP1
0x15dd DUP2
0x15de MSTORE
0x15df SWAP1
0x15e0 SWAP2
0x15e1 PUSH1 0xc4
0x15e3 ADD
0x15e4 DUP5
0x15e5 DUP2
0x15e6 DUP2
0x15e7 MLOAD
0x15e8 DUP2
0x15e9 MSTORE
0x15ea PUSH1 0x20
0x15ec ADD
0x15ed SWAP2
0x15ee POP
0x15ef DUP1
0x15f0 MLOAD
0x15f1 SWAP1
0x15f2 PUSH1 0x20
0x15f4 ADD
0x15f5 SWAP1
0x15f6 DUP1
0x15f7 DUP4
0x15f8 DUP4
0x15f9 PUSH1 0x0
---
0x156a: V2124 = 0x1
0x156d: V2125 = S[0x1]
0x156e: V2126 = 0x2
0x1570: V2127 = S[0x2]
0x1571: V2128 = 0x1
0x1573: V2129 = 0xa0
0x1575: V2130 = 0x2
0x1577: V2131 = EXP 0x2 0xa0
0x1578: V2132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157b: V2133 = AND V2125 0xffffffffffffffffffffffffffffffffffffffff
0x157d: V2134 = 0x161ff662
0x158b: V2135 = 0x0
0x158d: V2136 = 0x40
0x158f: V2137 = M[0x40]
0x1590: V2138 = 0x20
0x1592: V2139 = ADD 0x20 V2137
0x1593: M[V2139] = 0x0
0x1594: V2140 = 0x40
0x1596: V2141 = M[0x40]
0x1597: V2142 = 0xe0
0x1599: V2143 = 0x2
0x159b: V2144 = EXP 0x2 0xe0
0x159c: V2145 = 0xffffffff
0x15a2: V2146 = AND 0x161ff662 0xffffffff
0x15a3: V2147 = MUL 0x161ff662 0x100000000000000000000000000000000000000000000000000000000
0x15a5: M[V2141] = 0x161ff66200000000000000000000000000000000000000000000000000000000
0x15a6: V2148 = 0x1
0x15a8: V2149 = 0xa0
0x15aa: V2150 = 0x2
0x15ac: V2151 = EXP 0x2 0xa0
0x15ad: V2152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b0: V2153 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x15b1: V2154 = 0x4
0x15b4: V2155 = ADD V2141 0x4
0x15b7: M[V2155] = V2153
0x15ba: V2156 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x15bb: V2157 = 0x24
0x15be: V2158 = ADD V2141 0x24
0x15bf: M[V2158] = V2156
0x15c0: V2159 = 0x44
0x15c3: V2160 = ADD V2141 0x44
0x15c6: M[V2160] = S4
0x15c7: V2161 = 0x64
0x15ca: V2162 = ADD V2141 0x64
0x15cd: M[V2162] = V2127
0x15d0: V2163 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x15d1: V2164 = 0xa4
0x15d4: V2165 = ADD V2141 0xa4
0x15d5: M[V2165] = V2163
0x15d6: V2166 = 0xc0
0x15d8: V2167 = 0x84
0x15db: V2168 = ADD V2141 0x84
0x15de: M[V2168] = 0xc0
0x15e1: V2169 = 0xc4
0x15e3: V2170 = ADD 0xc4 V2141
0x15e7: V2171 = M[S3]
0x15e9: M[V2170] = V2171
0x15ea: V2172 = 0x20
0x15ec: V2173 = ADD 0x20 V2170
0x15f0: V2174 = M[S3]
0x15f2: V2175 = 0x20
0x15f4: V2176 = ADD 0x20 S3
0x15f9: V2177 = 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x1, V2133, 0x161ff662, S6, S5, S4, V2127, S3, S2, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, 0x0]
Exit stack: [S7, S6, S5, S4, S3, S2, 0x0, S0, 0x1, V2133, 0x161ff662, S6, S5, S4, V2127, S3, S2, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, 0x0]

================================

Block 0x15fb
[0x15fb:0x1603]
---
Predecessors: [0x156a, 0x160c]
Successors: [0x1604, 0x1614]
---
0x15fb JUMPDEST
0x15fc DUP4
0x15fd DUP2
0x15fe LT
0x15ff ISZERO
0x1600 PUSH2 0x1614
0x1603 JUMPI
---
0x15fb: JUMPDEST 
0x15fe: V2178 = LT S0 V2174
0x15ff: V2179 = ISZERO V2178
0x1600: V2180 = 0x1614
0x1603: JUMPI 0x1614 V2179
---
Entry stack: [V12, S24, S23, S22, S21, S20, S19, S18, 0x1, V2133, 0x161ff662, S14, S13, S12, V2127, S10, S9, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S24, S23, S22, S21, S20, S19, S18, 0x1, V2133, 0x161ff662, S14, S13, S12, V2127, S10, S9, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, S0]

================================

Block 0x1604
[0x1604:0x160b]
---
Predecessors: [0x15fb]
Successors: [0x160c]
---
0x1604 DUP1
0x1605 DUP3
0x1606 ADD
0x1607 MLOAD
0x1608 DUP2
0x1609 DUP5
0x160a ADD
0x160b MSTORE
---
0x1606: V2181 = ADD V2176 S0
0x1607: V2182 = M[V2181]
0x160a: V2183 = ADD V2173 S0
0x160b: M[V2183] = V2182
---
Entry stack: [V12, S24, S23, S22, S21, S20, S19, S18, 0x1, V2133, 0x161ff662, S14, S13, S12, V2127, S10, S9, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S24, S23, S22, S21, S20, S19, S18, 0x1, V2133, 0x161ff662, S14, S13, S12, V2127, S10, S9, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, S0]

================================

Block 0x160c
[0x160c:0x1613]
---
Predecessors: [0x1604]
Successors: [0x15fb]
---
0x160c JUMPDEST
0x160d PUSH1 0x20
0x160f ADD
0x1610 PUSH2 0x15fb
0x1613 JUMP
---
0x160c: JUMPDEST 
0x160d: V2184 = 0x20
0x160f: V2185 = ADD 0x20 S0
0x1610: V2186 = 0x15fb
0x1613: JUMP 0x15fb
---
Entry stack: [V12, S24, S23, S22, S21, S20, S19, S18, 0x1, V2133, 0x161ff662, S14, S13, S12, V2127, S10, S9, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, S0]
Stack pops: 1
Stack additions: [V2185]
Exit stack: [V12, S24, S23, S22, S21, S20, S19, S18, 0x1, V2133, 0x161ff662, S14, S13, S12, V2127, S10, S9, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, V2185]

================================

Block 0x1614
[0x1614:0x1627]
---
Predecessors: [0x15fb]
Successors: [0x1628, 0x1641]
---
0x1614 JUMPDEST
0x1615 POP
0x1616 POP
0x1617 POP
0x1618 POP
0x1619 SWAP1
0x161a POP
0x161b SWAP1
0x161c DUP2
0x161d ADD
0x161e SWAP1
0x161f PUSH1 0x1f
0x1621 AND
0x1622 DUP1
0x1623 ISZERO
0x1624 PUSH2 0x1641
0x1627 JUMPI
---
0x1614: JUMPDEST 
0x161d: V2187 = ADD V2174 V2173
0x161f: V2188 = 0x1f
0x1621: V2189 = AND 0x1f V2174
0x1623: V2190 = ISZERO V2189
0x1624: V2191 = 0x1641
0x1627: JUMPI 0x1641 V2190
---
Entry stack: [V12, S24, S23, S22, S21, S20, S19, S18, 0x1, V2133, 0x161ff662, S14, S13, S12, V2127, S10, S9, V2155, V2168, V2173, V2176, V2174, V2174, V2173, V2176, S0]
Stack pops: 7
Stack additions: [V2187, V2189]
Exit stack: [V12, S24, S23, S22, S21, S20, S19, S18, 0x1, V2133, 0x161ff662, S14, S13, S12, V2127, S10, S9, V2155, V2168, V2187, V2189]

================================

Block 0x1628
[0x1628:0x1640]
---
Predecessors: [0x1614]
Successors: [0x1641]
---
0x1628 DUP1
0x1629 DUP3
0x162a SUB
0x162b DUP1
0x162c MLOAD
0x162d PUSH1 0x1
0x162f DUP4
0x1630 PUSH1 0x20
0x1632 SUB
0x1633 PUSH2 0x100
0x1636 EXP
0x1637 SUB
0x1638 NOT
0x1639 AND
0x163a DUP2
0x163b MSTORE
0x163c PUSH1 0x20
0x163e ADD
0x163f SWAP2
0x1640 POP
---
0x162a: V2192 = SUB V2187 V2189
0x162c: V2193 = M[V2192]
0x162d: V2194 = 0x1
0x1630: V2195 = 0x20
0x1632: V2196 = SUB 0x20 V2189
0x1633: V2197 = 0x100
0x1636: V2198 = EXP 0x100 V2196
0x1637: V2199 = SUB V2198 0x1
0x1638: V2200 = NOT V2199
0x1639: V2201 = AND V2200 V2193
0x163b: M[V2192] = V2201
0x163c: V2202 = 0x20
0x163e: V2203 = ADD 0x20 V2192
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, 0x1, V2133, 0x161ff662, S9, S8, S7, V2127, S5, S4, V2155, V2168, V2187, V2189]
Stack pops: 2
Stack additions: [V2203, S0]
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, 0x1, V2133, 0x161ff662, S9, S8, S7, V2127, S5, S4, V2155, V2168, V2203, V2189]

================================

Block 0x1641
[0x1641:0x165f]
---
Predecessors: [0x1614, 0x1628]
Successors: [0x1660, 0x1664]
---
0x1641 JUMPDEST
0x1642 POP
0x1643 SWAP8
0x1644 POP
0x1645 POP
0x1646 POP
0x1647 POP
0x1648 POP
0x1649 POP
0x164a POP
0x164b POP
0x164c PUSH1 0x20
0x164e PUSH1 0x40
0x1650 MLOAD
0x1651 DUP1
0x1652 DUP4
0x1653 SUB
0x1654 DUP2
0x1655 PUSH1 0x0
0x1657 DUP8
0x1658 DUP1
0x1659 EXTCODESIZE
0x165a ISZERO
0x165b ISZERO
0x165c PUSH2 0x1664
0x165f JUMPI
---
0x1641: JUMPDEST 
0x164c: V2204 = 0x20
0x164e: V2205 = 0x40
0x1650: V2206 = M[0x40]
0x1653: V2207 = SUB S1 V2206
0x1655: V2208 = 0x0
0x1659: V2209 = EXTCODESIZE V2133
0x165a: V2210 = ISZERO V2209
0x165b: V2211 = ISZERO V2210
0x165c: V2212 = 0x1664
0x165f: JUMPI 0x1664 V2211
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, 0x1, V2133, 0x161ff662, S9, S8, S7, V2127, S5, S4, V2155, V2168, S1, V2189]
Stack pops: 12
Stack additions: [S11, S10, S1, 0x20, V2206, V2207, V2206, 0x0, S11]
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, 0x1, V2133, 0x161ff662, S1, 0x20, V2206, V2207, V2206, 0x0, V2133]

================================

Block 0x1660
[0x1660:0x1663]
---
Predecessors: [0x1641]
Successors: []
---
0x1660 PUSH1 0x0
0x1662 DUP1
0x1663 REVERT
---
0x1660: V2213 = 0x0
0x1663: REVERT 0x0 0x0
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, 0x1, V2133, 0x161ff662, S6, 0x20, V2206, V2207, V2206, 0x0, V2133]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, 0x1, V2133, 0x161ff662, S6, 0x20, V2206, V2207, V2206, 0x0, V2133]

================================

Block 0x1664
[0x1664:0x1670]
---
Predecessors: [0x1641]
Successors: [0x1671, 0x1675]
---
0x1664 JUMPDEST
0x1665 PUSH2 0x2c6
0x1668 GAS
0x1669 SUB
0x166a CALL
0x166b ISZERO
0x166c ISZERO
0x166d PUSH2 0x1675
0x1670 JUMPI
---
0x1664: JUMPDEST 
0x1665: V2214 = 0x2c6
0x1668: V2215 = GAS
0x1669: V2216 = SUB V2215 0x2c6
0x166a: V2217 = CALL V2216 V2133 0x0 V2206 V2207 V2206 0x20
0x166b: V2218 = ISZERO V2217
0x166c: V2219 = ISZERO V2218
0x166d: V2220 = 0x1675
0x1670: JUMPI 0x1675 V2219
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, 0x1, V2133, 0x161ff662, S6, 0x20, V2206, V2207, V2206, 0x0, V2133]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, 0x1, V2133, 0x161ff662, S6]

================================

Block 0x1671
[0x1671:0x1674]
---
Predecessors: [0x1664]
Successors: []
---
0x1671 PUSH1 0x0
0x1673 DUP1
0x1674 REVERT
---
0x1671: V2221 = 0x0
0x1674: REVERT 0x0 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x1, V2133, 0x161ff662, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x1, V2133, 0x161ff662, S0]

================================

Block 0x1675
[0x1675:0x1682]
---
Predecessors: [0x1664]
Successors: [0x1683]
---
0x1675 JUMPDEST
0x1676 POP
0x1677 POP
0x1678 POP
0x1679 PUSH1 0x40
0x167b MLOAD
0x167c DUP1
0x167d MLOAD
0x167e SWAP1
0x167f POP
0x1680 EQ
0x1681 SWAP2
0x1682 POP
---
0x1675: JUMPDEST 
0x1679: V2222 = 0x40
0x167b: V2223 = M[0x40]
0x167d: V2224 = M[V2223]
0x1680: V2225 = EQ V2224 0x1
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x1, V2133, 0x161ff662, S0]
Stack pops: 6
Stack additions: [V2225, S4]
Exit stack: [V12, S10, S9, S8, S7, S6, V2225, S4]

================================

Block 0x1683
[0x1683:0x1683]
---
Predecessors: [0x155a, 0x1675]
Successors: [0x1684]
---
0x1683 JUMPDEST
---
0x1683: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1684
[0x1684:0x1684]
---
Predecessors: [0x1683]
Successors: [0x1685]
---
0x1684 JUMPDEST
---
0x1684: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1685
[0x1685:0x168e]
---
Predecessors: [0x1684]
Successors: [0x28f]
---
0x1685 JUMPDEST
0x1686 POP
0x1687 SWAP6
0x1688 SWAP5
0x1689 POP
0x168a POP
0x168b POP
0x168c POP
0x168d POP
0x168e JUMP
---
0x1685: JUMPDEST 
0x168e: JUMP S7
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S1]
Exit stack: [V12, S10, S9, S8, S1]

================================

Block 0x168f
[0x168f:0x16b1]
---
Predecessors: [0x938, 0x968, 0xeba, 0x1081, 0x1544]
Successors: [0x16b2, 0x16d1]
---
0x168f JUMPDEST
0x1690 PUSH1 0x1
0x1692 PUSH1 0xa0
0x1694 PUSH1 0x2
0x1696 EXP
0x1697 SUB
0x1698 DUP1
0x1699 DUP3
0x169a AND
0x169b PUSH1 0x0
0x169d SWAP1
0x169e DUP2
0x169f MSTORE
0x16a0 PUSH1 0x8
0x16a2 PUSH1 0x20
0x16a4 MSTORE
0x16a5 PUSH1 0x40
0x16a7 DUP2
0x16a8 SHA3
0x16a9 SLOAD
0x16aa SWAP1
0x16ab SWAP2
0x16ac AND
0x16ad ISZERO
0x16ae PUSH2 0x16d1
0x16b1 JUMPI
---
0x168f: JUMPDEST 
0x1690: V2226 = 0x1
0x1692: V2227 = 0xa0
0x1694: V2228 = 0x2
0x1696: V2229 = EXP 0x2 0xa0
0x1697: V2230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169a: V2231 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x169b: V2232 = 0x0
0x169f: M[0x0] = V2231
0x16a0: V2233 = 0x8
0x16a2: V2234 = 0x20
0x16a4: M[0x20] = 0x8
0x16a5: V2235 = 0x40
0x16a8: V2236 = SHA3 0x0 0x40
0x16a9: V2237 = S[V2236]
0x16ac: V2238 = AND 0xffffffffffffffffffffffffffffffffffffffff V2237
0x16ad: V2239 = ISZERO V2238
0x16ae: V2240 = 0x16d1
0x16b1: JUMPI 0x16d1 V2239
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S0, 0x0]

================================

Block 0x16b2
[0x16b2:0x16d0]
---
Predecessors: [0x168f]
Successors: [0x16de]
---
0x16b2 PUSH1 0x1
0x16b4 PUSH1 0xa0
0x16b6 PUSH1 0x2
0x16b8 EXP
0x16b9 SUB
0x16ba DUP1
0x16bb DUP4
0x16bc AND
0x16bd PUSH1 0x0
0x16bf SWAP1
0x16c0 DUP2
0x16c1 MSTORE
0x16c2 PUSH1 0x8
0x16c4 PUSH1 0x20
0x16c6 MSTORE
0x16c7 PUSH1 0x40
0x16c9 SWAP1
0x16ca SHA3
0x16cb SLOAD
0x16cc AND
0x16cd PUSH2 0x16de
0x16d0 JUMP
---
0x16b2: V2241 = 0x1
0x16b4: V2242 = 0xa0
0x16b6: V2243 = 0x2
0x16b8: V2244 = EXP 0x2 0xa0
0x16b9: V2245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16bc: V2246 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x16bd: V2247 = 0x0
0x16c1: M[0x0] = V2246
0x16c2: V2248 = 0x8
0x16c4: V2249 = 0x20
0x16c6: M[0x20] = 0x8
0x16c7: V2250 = 0x40
0x16ca: V2251 = SHA3 0x0 0x40
0x16cb: V2252 = S[V2251]
0x16cc: V2253 = AND V2252 0xffffffffffffffffffffffffffffffffffffffff
0x16cd: V2254 = 0x16de
0x16d0: JUMP 0x16de
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V2253]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S1, 0x0, V2253]

================================

Block 0x16d1
[0x16d1:0x16dd]
---
Predecessors: [0x168f]
Successors: [0x16de]
---
0x16d1 JUMPDEST
0x16d2 PUSH1 0x5
0x16d4 SLOAD
0x16d5 PUSH1 0x1
0x16d7 PUSH1 0xa0
0x16d9 PUSH1 0x2
0x16db EXP
0x16dc SUB
0x16dd AND
---
0x16d1: JUMPDEST 
0x16d2: V2255 = 0x5
0x16d4: V2256 = S[0x5]
0x16d5: V2257 = 0x1
0x16d7: V2258 = 0xa0
0x16d9: V2259 = 0x2
0x16db: V2260 = EXP 0x2 0xa0
0x16dc: V2261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16dd: V2262 = AND 0xffffffffffffffffffffffffffffffffffffffff V2256
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S1, 0x0]
Stack pops: 0
Stack additions: [V2262]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S1, 0x0, V2262]

================================

Block 0x16de
[0x16de:0x16e0]
---
Predecessors: [0x16b2, 0x16d1]
Successors: [0x16e1]
---
0x16de JUMPDEST
0x16df SWAP1
0x16e0 POP
---
0x16de: JUMPDEST 
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S2, S0]

================================

Block 0x16e1
[0x16e1:0x16e5]
---
Predecessors: [0x16de]
Successors: [0x2dd, 0x973, 0xed0, 0x1097, 0x155a]
---
0x16e1 JUMPDEST
0x16e2 SWAP2
0x16e3 SWAP1
0x16e4 POP
0x16e5 JUMP
---
0x16e1: JUMPDEST 
0x16e5: JUMP {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x2dd, 0x973, 0xed0, 0x1097, 0x155a}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0]

================================

Block 0x16e6
[0x16e6:0x16ef]
---
Predecessors: [0x120c, 0x124c]
Successors: [0x968]
---
0x16e6 JUMPDEST
0x16e7 PUSH1 0x0
0x16e9 PUSH2 0x16f0
0x16ec PUSH2 0x968
0x16ef JUMP
---
0x16e6: JUMPDEST 
0x16e7: V2263 = 0x0
0x16e9: V2264 = 0x16f0
0x16ec: V2265 = 0x968
0x16ef: JUMP 0x968
---
Entry stack: [V12, S8, S7, S6, S5, 0x0, {0x1224, 0x1256}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x16f0]
Exit stack: [V12, S8, S7, S6, S5, 0x0, {0x1224, 0x1256}, S2, S1, S0, 0x0, 0x16f0]

================================

Block 0x16f0
[0x16f0:0x1777]
---
Predecessors: [0x976]
Successors: [0x1778]
---
0x16f0 JUMPDEST
0x16f1 PUSH1 0x1
0x16f3 PUSH1 0xa0
0x16f5 PUSH1 0x2
0x16f7 EXP
0x16f8 SUB
0x16f9 AND
0x16fa PUSH4 0x6a630ee7
0x16ff DUP6
0x1700 DUP6
0x1701 DUP6
0x1702 CALLER
0x1703 PUSH1 0x0
0x1705 PUSH1 0x40
0x1707 MLOAD
0x1708 PUSH1 0x20
0x170a ADD
0x170b MSTORE
0x170c PUSH1 0x40
0x170e MLOAD
0x170f DUP6
0x1710 PUSH4 0xffffffff
0x1715 AND
0x1716 PUSH1 0xe0
0x1718 PUSH1 0x2
0x171a EXP
0x171b MUL
0x171c DUP2
0x171d MSTORE
0x171e PUSH1 0x4
0x1720 ADD
0x1721 DUP1
0x1722 DUP6
0x1723 PUSH1 0x1
0x1725 PUSH1 0xa0
0x1727 PUSH1 0x2
0x1729 EXP
0x172a SUB
0x172b AND
0x172c PUSH1 0x1
0x172e PUSH1 0xa0
0x1730 PUSH1 0x2
0x1732 EXP
0x1733 SUB
0x1734 AND
0x1735 DUP2
0x1736 MSTORE
0x1737 PUSH1 0x20
0x1739 ADD
0x173a DUP5
0x173b DUP2
0x173c MSTORE
0x173d PUSH1 0x20
0x173f ADD
0x1740 DUP1
0x1741 PUSH1 0x20
0x1743 ADD
0x1744 DUP4
0x1745 PUSH1 0x1
0x1747 PUSH1 0xa0
0x1749 PUSH1 0x2
0x174b EXP
0x174c SUB
0x174d AND
0x174e PUSH1 0x1
0x1750 PUSH1 0xa0
0x1752 PUSH1 0x2
0x1754 EXP
0x1755 SUB
0x1756 AND
0x1757 DUP2
0x1758 MSTORE
0x1759 PUSH1 0x20
0x175b ADD
0x175c DUP3
0x175d DUP2
0x175e SUB
0x175f DUP3
0x1760 MSTORE
0x1761 DUP5
0x1762 DUP2
0x1763 DUP2
0x1764 MLOAD
0x1765 DUP2
0x1766 MSTORE
0x1767 PUSH1 0x20
0x1769 ADD
0x176a SWAP2
0x176b POP
0x176c DUP1
0x176d MLOAD
0x176e SWAP1
0x176f PUSH1 0x20
0x1771 ADD
0x1772 SWAP1
0x1773 DUP1
0x1774 DUP4
0x1775 DUP4
0x1776 PUSH1 0x0
---
0x16f0: JUMPDEST 
0x16f1: V2266 = 0x1
0x16f3: V2267 = 0xa0
0x16f5: V2268 = 0x2
0x16f7: V2269 = EXP 0x2 0xa0
0x16f8: V2270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f9: V2271 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x16fa: V2272 = 0x6a630ee7
0x1702: V2273 = CALLER
0x1703: V2274 = 0x0
0x1705: V2275 = 0x40
0x1707: V2276 = M[0x40]
0x1708: V2277 = 0x20
0x170a: V2278 = ADD 0x20 V2276
0x170b: M[V2278] = 0x0
0x170c: V2279 = 0x40
0x170e: V2280 = M[0x40]
0x1710: V2281 = 0xffffffff
0x1715: V2282 = AND 0xffffffff 0x6a630ee7
0x1716: V2283 = 0xe0
0x1718: V2284 = 0x2
0x171a: V2285 = EXP 0x2 0xe0
0x171b: V2286 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6a630ee7
0x171d: M[V2280] = 0x6a630ee700000000000000000000000000000000000000000000000000000000
0x171e: V2287 = 0x4
0x1720: V2288 = ADD 0x4 V2280
0x1723: V2289 = 0x1
0x1725: V2290 = 0xa0
0x1727: V2291 = 0x2
0x1729: V2292 = EXP 0x2 0xa0
0x172a: V2293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x172b: V2294 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x172c: V2295 = 0x1
0x172e: V2296 = 0xa0
0x1730: V2297 = 0x2
0x1732: V2298 = EXP 0x2 0xa0
0x1733: V2299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1734: V2300 = AND 0xffffffffffffffffffffffffffffffffffffffff V2294
0x1736: M[V2288] = V2300
0x1737: V2301 = 0x20
0x1739: V2302 = ADD 0x20 V2288
0x173c: M[V2302] = S3
0x173d: V2303 = 0x20
0x173f: V2304 = ADD 0x20 V2302
0x1741: V2305 = 0x20
0x1743: V2306 = ADD 0x20 V2304
0x1745: V2307 = 0x1
0x1747: V2308 = 0xa0
0x1749: V2309 = 0x2
0x174b: V2310 = EXP 0x2 0xa0
0x174c: V2311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x174d: V2312 = AND 0xffffffffffffffffffffffffffffffffffffffff V2273
0x174e: V2313 = 0x1
0x1750: V2314 = 0xa0
0x1752: V2315 = 0x2
0x1754: V2316 = EXP 0x2 0xa0
0x1755: V2317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1756: V2318 = AND 0xffffffffffffffffffffffffffffffffffffffff V2312
0x1758: M[V2306] = V2318
0x1759: V2319 = 0x20
0x175b: V2320 = ADD 0x20 V2306
0x175e: V2321 = SUB V2320 V2288
0x1760: M[V2304] = V2321
0x1764: V2322 = M[S2]
0x1766: M[V2320] = V2322
0x1767: V2323 = 0x20
0x1769: V2324 = ADD 0x20 V2320
0x176d: V2325 = M[S2]
0x176f: V2326 = 0x20
0x1771: V2327 = ADD 0x20 S2
0x1776: V2328 = 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V2271, 0x6a630ee7, S4, S3, S2, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, 0x0]
Exit stack: [S7, S6, S5, S4, S3, S2, S1, V2271, 0x6a630ee7, S4, S3, S2, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, 0x0]

================================

Block 0x1778
[0x1778:0x1780]
---
Predecessors: [0x16f0, 0x1789]
Successors: [0x1781, 0x1791]
---
0x1778 JUMPDEST
0x1779 DUP4
0x177a DUP2
0x177b LT
0x177c ISZERO
0x177d PUSH2 0x1791
0x1780 JUMPI
---
0x1778: JUMPDEST 
0x177b: V2329 = LT S0 V2325
0x177c: V2330 = ISZERO V2329
0x177d: V2331 = 0x1791
0x1780: JUMPI 0x1791 V2330
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, V2271, 0x6a630ee7, S12, S11, S10, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, V2271, 0x6a630ee7, S12, S11, S10, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, S0]

================================

Block 0x1781
[0x1781:0x1788]
---
Predecessors: [0x1778]
Successors: [0x1789]
---
0x1781 DUP1
0x1782 DUP3
0x1783 ADD
0x1784 MLOAD
0x1785 DUP2
0x1786 DUP5
0x1787 ADD
0x1788 MSTORE
---
0x1783: V2332 = ADD V2327 S0
0x1784: V2333 = M[V2332]
0x1787: V2334 = ADD V2324 S0
0x1788: M[V2334] = V2333
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, V2271, 0x6a630ee7, S12, S11, S10, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, V2271, 0x6a630ee7, S12, S11, S10, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, S0]

================================

Block 0x1789
[0x1789:0x1790]
---
Predecessors: [0x1781]
Successors: [0x1778]
---
0x1789 JUMPDEST
0x178a PUSH1 0x20
0x178c ADD
0x178d PUSH2 0x1778
0x1790 JUMP
---
0x1789: JUMPDEST 
0x178a: V2335 = 0x20
0x178c: V2336 = ADD 0x20 S0
0x178d: V2337 = 0x1778
0x1790: JUMP 0x1778
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, V2271, 0x6a630ee7, S12, S11, S10, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, S0]
Stack pops: 1
Stack additions: [V2336]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, V2271, 0x6a630ee7, S12, S11, S10, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, V2336]

================================

Block 0x1791
[0x1791:0x17a4]
---
Predecessors: [0x1778]
Successors: [0x17a5, 0x17be]
---
0x1791 JUMPDEST
0x1792 POP
0x1793 POP
0x1794 POP
0x1795 POP
0x1796 SWAP1
0x1797 POP
0x1798 SWAP1
0x1799 DUP2
0x179a ADD
0x179b SWAP1
0x179c PUSH1 0x1f
0x179e AND
0x179f DUP1
0x17a0 ISZERO
0x17a1 PUSH2 0x17be
0x17a4 JUMPI
---
0x1791: JUMPDEST 
0x179a: V2338 = ADD V2325 V2324
0x179c: V2339 = 0x1f
0x179e: V2340 = AND 0x1f V2325
0x17a0: V2341 = ISZERO V2340
0x17a1: V2342 = 0x17be
0x17a4: JUMPI 0x17be V2341
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, V2271, 0x6a630ee7, S12, S11, S10, V2273, V2288, V2304, V2324, V2327, V2325, V2325, V2324, V2327, S0]
Stack pops: 7
Stack additions: [V2338, V2340]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, V2271, 0x6a630ee7, S12, S11, S10, V2273, V2288, V2304, V2338, V2340]

================================

Block 0x17a5
[0x17a5:0x17bd]
---
Predecessors: [0x1791]
Successors: [0x17be]
---
0x17a5 DUP1
0x17a6 DUP3
0x17a7 SUB
0x17a8 DUP1
0x17a9 MLOAD
0x17aa PUSH1 0x1
0x17ac DUP4
0x17ad PUSH1 0x20
0x17af SUB
0x17b0 PUSH2 0x100
0x17b3 EXP
0x17b4 SUB
0x17b5 NOT
0x17b6 AND
0x17b7 DUP2
0x17b8 MSTORE
0x17b9 PUSH1 0x20
0x17bb ADD
0x17bc SWAP2
0x17bd POP
---
0x17a7: V2343 = SUB V2338 V2340
0x17a9: V2344 = M[V2343]
0x17aa: V2345 = 0x1
0x17ad: V2346 = 0x20
0x17af: V2347 = SUB 0x20 V2340
0x17b0: V2348 = 0x100
0x17b3: V2349 = EXP 0x100 V2347
0x17b4: V2350 = SUB V2349 0x1
0x17b5: V2351 = NOT V2350
0x17b6: V2352 = AND V2351 V2344
0x17b8: M[V2343] = V2352
0x17b9: V2353 = 0x20
0x17bb: V2354 = ADD 0x20 V2343
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, V2271, 0x6a630ee7, S7, S6, S5, V2273, V2288, V2304, V2338, V2340]
Stack pops: 2
Stack additions: [V2354, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, V2271, 0x6a630ee7, S7, S6, S5, V2273, V2288, V2304, V2354, V2340]

================================

Block 0x17be
[0x17be:0x17da]
---
Predecessors: [0x1791, 0x17a5]
Successors: [0x17db, 0x17df]
---
0x17be JUMPDEST
0x17bf POP
0x17c0 SWAP6
0x17c1 POP
0x17c2 POP
0x17c3 POP
0x17c4 POP
0x17c5 POP
0x17c6 POP
0x17c7 PUSH1 0x20
0x17c9 PUSH1 0x40
0x17cb MLOAD
0x17cc DUP1
0x17cd DUP4
0x17ce SUB
0x17cf DUP2
0x17d0 PUSH1 0x0
0x17d2 DUP8
0x17d3 DUP1
0x17d4 EXTCODESIZE
0x17d5 ISZERO
0x17d6 ISZERO
0x17d7 PUSH2 0x17df
0x17da JUMPI
---
0x17be: JUMPDEST 
0x17c7: V2355 = 0x20
0x17c9: V2356 = 0x40
0x17cb: V2357 = M[0x40]
0x17ce: V2358 = SUB S1 V2357
0x17d0: V2359 = 0x0
0x17d4: V2360 = EXTCODESIZE V2271
0x17d5: V2361 = ISZERO V2360
0x17d6: V2362 = ISZERO V2361
0x17d7: V2363 = 0x17df
0x17da: JUMPI 0x17df V2362
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, V2271, 0x6a630ee7, S7, S6, S5, V2273, V2288, V2304, S1, V2340]
Stack pops: 10
Stack additions: [S9, S8, S1, 0x20, V2357, V2358, V2357, 0x0, S9]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, V2271, 0x6a630ee7, S1, 0x20, V2357, V2358, V2357, 0x0, V2271]

================================

Block 0x17db
[0x17db:0x17de]
---
Predecessors: [0x17be]
Successors: []
---
0x17db PUSH1 0x0
0x17dd DUP1
0x17de REVERT
---
0x17db: V2364 = 0x0
0x17de: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, V2271, 0x6a630ee7, S6, 0x20, V2357, V2358, V2357, 0x0, V2271]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, V2271, 0x6a630ee7, S6, 0x20, V2357, V2358, V2357, 0x0, V2271]

================================

Block 0x17df
[0x17df:0x17eb]
---
Predecessors: [0x17be]
Successors: [0x17ec, 0x17f0]
---
0x17df JUMPDEST
0x17e0 PUSH2 0x2c6
0x17e3 GAS
0x17e4 SUB
0x17e5 CALL
0x17e6 ISZERO
0x17e7 ISZERO
0x17e8 PUSH2 0x17f0
0x17eb JUMPI
---
0x17df: JUMPDEST 
0x17e0: V2365 = 0x2c6
0x17e3: V2366 = GAS
0x17e4: V2367 = SUB V2366 0x2c6
0x17e5: V2368 = CALL V2367 V2271 0x0 V2357 V2358 V2357 0x20
0x17e6: V2369 = ISZERO V2368
0x17e7: V2370 = ISZERO V2369
0x17e8: V2371 = 0x17f0
0x17eb: JUMPI 0x17f0 V2370
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, V2271, 0x6a630ee7, S6, 0x20, V2357, V2358, V2357, 0x0, V2271]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, V2271, 0x6a630ee7, S6]

================================

Block 0x17ec
[0x17ec:0x17ef]
---
Predecessors: [0x17df]
Successors: []
---
0x17ec PUSH1 0x0
0x17ee DUP1
0x17ef REVERT
---
0x17ec: V2372 = 0x0
0x17ef: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, V2271, 0x6a630ee7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, V2271, 0x6a630ee7, S0]

================================

Block 0x17f0
[0x17f0:0x17fb]
---
Predecessors: [0x17df]
Successors: [0x17fc]
---
0x17f0 JUMPDEST
0x17f1 POP
0x17f2 POP
0x17f3 POP
0x17f4 PUSH1 0x40
0x17f6 MLOAD
0x17f7 DUP1
0x17f8 MLOAD
0x17f9 SWAP2
0x17fa POP
0x17fb POP
---
0x17f0: JUMPDEST 
0x17f4: V2373 = 0x40
0x17f6: V2374 = M[0x40]
0x17f8: V2375 = M[V2374]
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, V2271, 0x6a630ee7, S0]
Stack pops: 4
Stack additions: [V2375]
Exit stack: [V12, S8, S7, S6, S5, S4, V2375]

================================

Block 0x17fc
[0x17fc:0x1802]
---
Predecessors: [0x17f0]
Successors: [0x28f]
---
0x17fc JUMPDEST
0x17fd SWAP4
0x17fe SWAP3
0x17ff POP
0x1800 POP
0x1801 POP
0x1802 JUMP
---
0x17fc: JUMPDEST 
0x1802: JUMP S4
---
Entry stack: [V12, S5, S4, S3, S2, S1, V2375]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, S5, V2375]

================================

Block 0x1803
[0x1803:0x1833]
---
Predecessors: [0x1289, 0x12c1]
Successors: [0x1834, 0x1844]
---
0x1803 JUMPDEST
0x1804 DUP3
0x1805 DUP1
0x1806 SLOAD
0x1807 PUSH1 0x1
0x1809 DUP2
0x180a PUSH1 0x1
0x180c AND
0x180d ISZERO
0x180e PUSH2 0x100
0x1811 MUL
0x1812 SUB
0x1813 AND
0x1814 PUSH1 0x2
0x1816 SWAP1
0x1817 DIV
0x1818 SWAP1
0x1819 PUSH1 0x0
0x181b MSTORE
0x181c PUSH1 0x20
0x181e PUSH1 0x0
0x1820 SHA3
0x1821 SWAP1
0x1822 PUSH1 0x1f
0x1824 ADD
0x1825 PUSH1 0x20
0x1827 SWAP1
0x1828 DIV
0x1829 DUP2
0x182a ADD
0x182b SWAP3
0x182c DUP3
0x182d PUSH1 0x1f
0x182f LT
0x1830 PUSH2 0x1844
0x1833 JUMPI
---
0x1803: JUMPDEST 
0x1806: V2376 = S[{0x3, 0x4}]
0x1807: V2377 = 0x1
0x180a: V2378 = 0x1
0x180c: V2379 = AND 0x1 V2376
0x180d: V2380 = ISZERO V2379
0x180e: V2381 = 0x100
0x1811: V2382 = MUL 0x100 V2380
0x1812: V2383 = SUB V2382 0x1
0x1813: V2384 = AND V2383 V2376
0x1814: V2385 = 0x2
0x1817: V2386 = DIV V2384 0x2
0x1819: V2387 = 0x0
0x181b: M[0x0] = {0x3, 0x4}
0x181c: V2388 = 0x20
0x181e: V2389 = 0x0
0x1820: V2390 = SHA3 0x0 0x20
0x1822: V2391 = 0x1f
0x1824: V2392 = ADD 0x1f V2386
0x1825: V2393 = 0x20
0x1828: V2394 = DIV V2392 0x20
0x182a: V2395 = ADD V2390 V2394
0x182d: V2396 = 0x1f
0x182f: V2397 = LT 0x1f S0
0x1830: V2398 = 0x1844
0x1833: JUMPI 0x1844 V2397
---
Entry stack: [V12, 0x28f, V656, V670, V691, S4, {0x12b7, 0x12d7}, {0x3, 0x4}, S1, S0]
Stack pops: 3
Stack additions: [S2, V2395, S0, V2390, S1]
Exit stack: [V12, 0x28f, V656, V670, V691, S4, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S0, V2390, S1]

================================

Block 0x1834
[0x1834:0x1843]
---
Predecessors: [0x1803]
Successors: [0x1871]
---
0x1834 DUP1
0x1835 MLOAD
0x1836 PUSH1 0xff
0x1838 NOT
0x1839 AND
0x183a DUP4
0x183b DUP1
0x183c ADD
0x183d OR
0x183e DUP6
0x183f SSTORE
0x1840 PUSH2 0x1871
0x1843 JUMP
---
0x1835: V2399 = M[S0]
0x1836: V2400 = 0xff
0x1838: V2401 = NOT 0xff
0x1839: V2402 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V2399
0x183c: V2403 = ADD S2 S2
0x183d: V2404 = OR V2403 V2402
0x183f: S[{0x3, 0x4}] = V2404
0x1840: V2405 = 0x1871
0x1843: JUMP 0x1871
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, V2390, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, V2390, S0]

================================

Block 0x1844
[0x1844:0x1852]
---
Predecessors: [0x1803]
Successors: [0x1853, 0x1871]
---
0x1844 JUMPDEST
0x1845 DUP3
0x1846 DUP1
0x1847 ADD
0x1848 PUSH1 0x1
0x184a ADD
0x184b DUP6
0x184c SSTORE
0x184d DUP3
0x184e ISZERO
0x184f PUSH2 0x1871
0x1852 JUMPI
---
0x1844: JUMPDEST 
0x1847: V2406 = ADD S2 S2
0x1848: V2407 = 0x1
0x184a: V2408 = ADD 0x1 V2406
0x184c: S[{0x3, 0x4}] = V2408
0x184e: V2409 = ISZERO S2
0x184f: V2410 = 0x1871
0x1852: JUMPI 0x1871 V2409
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, V2390, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, V2390, S0]

================================

Block 0x1853
[0x1853:0x1855]
---
Predecessors: [0x1844]
Successors: [0x1856]
---
0x1853 SWAP2
0x1854 DUP3
0x1855 ADD
---
0x1855: V2411 = ADD S0 S2
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, V2390, S0]
Stack pops: 3
Stack additions: [S0, S1, V2411]
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S0, V2390, V2411]

================================

Block 0x1856
[0x1856:0x185e]
---
Predecessors: [0x1853, 0x185f]
Successors: [0x185f, 0x1871]
---
0x1856 JUMPDEST
0x1857 DUP3
0x1858 DUP2
0x1859 GT
0x185a ISZERO
0x185b PUSH2 0x1871
0x185e JUMPI
---
0x1856: JUMPDEST 
0x1859: V2412 = GT V2411 S2
0x185a: V2413 = ISZERO V2412
0x185b: V2414 = 0x1871
0x185e: JUMPI 0x1871 V2413
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, S1, V2411]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, S1, V2411]

================================

Block 0x185f
[0x185f:0x1870]
---
Predecessors: [0x1856]
Successors: [0x1856]
---
0x185f DUP3
0x1860 MLOAD
0x1861 DUP3
0x1862 SSTORE
0x1863 SWAP2
0x1864 PUSH1 0x20
0x1866 ADD
0x1867 SWAP2
0x1868 SWAP1
0x1869 PUSH1 0x1
0x186b ADD
0x186c SWAP1
0x186d PUSH2 0x1856
0x1870 JUMP
---
0x1860: V2415 = M[S2]
0x1862: S[S1] = V2415
0x1864: V2416 = 0x20
0x1866: V2417 = ADD 0x20 S2
0x1869: V2418 = 0x1
0x186b: V2419 = ADD 0x1 S1
0x186d: V2420 = 0x1856
0x1870: JUMP 0x1856
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, S1, V2411]
Stack pops: 3
Stack additions: [V2417, V2419, S0]
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, V2417, V2419, V2411]

================================

Block 0x1871
[0x1871:0x1871]
---
Predecessors: [0x1834, 0x1844, 0x1856]
Successors: [0x1872]
---
0x1871 JUMPDEST
---
0x1871: JUMPDEST 
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, S1, S0]

================================

Block 0x1872
[0x1872:0x187d]
---
Predecessors: [0x1871]
Successors: [0x1882]
---
0x1872 JUMPDEST
0x1873 POP
0x1874 PUSH2 0x187e
0x1877 SWAP3
0x1878 SWAP2
0x1879 POP
0x187a PUSH2 0x1882
0x187d JUMP
---
0x1872: JUMPDEST 
0x1874: V2421 = 0x187e
0x187a: V2422 = 0x1882
0x187d: JUMP 0x1882
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, V2395, S2, S1, S0]
Stack pops: 4
Stack additions: [0x187e, S3, S1]
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, 0x187e, V2395, S1]

================================

Block 0x187e
[0x187e:0x1881]
---
Predecessors: [0x976, 0x1888]
Successors: [0x28f, 0x976, 0x1224, 0x1256, 0x12b7, 0x12d7]
---
0x187e JUMPDEST
0x187f POP
0x1880 SWAP1
0x1881 JUMP
---
0x187e: JUMPDEST 
0x1881: JUMP S2
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x1882
[0x1882:0x1887]
---
Predecessors: [0x1872]
Successors: [0x1888]
---
0x1882 JUMPDEST
0x1883 PUSH2 0x976
0x1886 SWAP2
0x1887 SWAP1
---
0x1882: JUMPDEST 
0x1883: V2423 = 0x976
---
Entry stack: [V12, 0x28f, V656, V670, V691, S5, {0x12b7, 0x12d7}, {0x3, 0x4}, 0x187e, V2395, S0]
Stack pops: 2
Stack additions: [0x976, S1, S0]
Exit stack: [V12, 0x28f, V656, V670, V691, S5, {0x12b7, 0x12d7}, {0x3, 0x4}, 0x187e, 0x976, V2395, S0]

================================

Block 0x1888
[0x1888:0x1890]
---
Predecessors: [0x1882, 0x1891]
Successors: [0x187e, 0x1891]
---
0x1888 JUMPDEST
0x1889 DUP1
0x188a DUP3
0x188b GT
0x188c ISZERO
0x188d PUSH2 0x187e
0x1890 JUMPI
---
0x1888: JUMPDEST 
0x188b: V2424 = GT V2395 S0
0x188c: V2425 = ISZERO V2424
0x188d: V2426 = 0x187e
0x1890: JUMPI 0x187e V2425
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, 0x187e, 0x976, V2395, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, 0x187e, 0x976, V2395, S0]

================================

Block 0x1891
[0x1891:0x189b]
---
Predecessors: [0x1888]
Successors: [0x1888]
---
0x1891 PUSH1 0x0
0x1893 DUP2
0x1894 SSTORE
0x1895 PUSH1 0x1
0x1897 ADD
0x1898 PUSH2 0x1888
0x189b JUMP
---
0x1891: V2427 = 0x0
0x1894: S[S0] = 0x0
0x1895: V2428 = 0x1
0x1897: V2429 = ADD 0x1 S0
0x1898: V2430 = 0x1888
0x189b: JUMP 0x1888
---
Entry stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, 0x187e, 0x976, V2395, S0]
Stack pops: 1
Stack additions: [V2429]
Exit stack: [V12, 0x28f, V656, V670, V691, S6, {0x12b7, 0x12d7}, {0x3, 0x4}, 0x187e, 0x976, V2395, V2429]

================================

Block 0x189c
[0x189c:0x18da]
---
Predecessors: []
Successors: []
---
0x189c JUMPDEST
0x189d POP
0x189e SWAP1
0x189f JUMP
0x18a0 JUMPDEST
0x18a1 SWAP1
0x18a2 JUMP
0x18a3 STOP
0x18a4 LOG1
0x18a5 PUSH6 0x627a7a723058
0x18ac SHA3
0x18ad SWAP7
0x18ae MISSING 0xe8
0x18af POP
0x18b0 ORIGIN
0x18b1 MISSING 0x27
0x18b2 SWAP7
0x18b3 EXTCODEHASH
0x18b4 PUSH7 0x5ff5657bef2f0c
0x18bc NOT
0x18bd SDIV
0x18be SWAP12
0x18bf SWAP8
0x18c0 TIMESTAMP
0x18c1 DUP6
0x18c2 MISSING 0x46
0x18c3 MISSING 0xc5
0x18c4 STATICCALL
0x18c5 SWAP2
0x18c6 MISSING 0xc
0x18c7 MISSING 0xf9
0x18c8 MISSING 0xfc
0x18c9 SIGNEXTEND
0x18ca PUSH16 0xcab50029
---
0x189c: JUMPDEST 
0x189f: JUMP S2
0x18a0: JUMPDEST 
0x18a2: JUMP S1
0x18a3: STOP 
0x18a4: LOG S0 S1 S2
0x18a5: V2431 = 0x627a7a723058
0x18ac: V2432 = SHA3 0x627a7a723058 S3
0x18ae: MISSING 0xe8
0x18b0: V2433 = ORIGIN
0x18b1: MISSING 0x27
0x18b3: V2434 = EXTCODEHASH S7
0x18b4: V2435 = 0x5ff5657bef2f0c
0x18bc: V2436 = NOT 0x5ff5657bef2f0c
0x18bd: V2437 = SDIV 0xffffffffffffffffffffffffffffffffffffffffffffffffffa00a9a8410d0f3 V2434
0x18c0: V2438 = TIMESTAMP
0x18c2: MISSING 0x46
0x18c3: MISSING 0xc5
0x18c4: V2439 = STATICCALL S0 S1 S2 S3 S4 S5
0x18c6: MISSING 0xc
0x18c7: MISSING 0xf9
0x18c8: MISSING 0xfc
0x18c9: V2440 = SIGNEXTEND S0 S1
0x18ca: V2441 = 0xcab50029
---
Entry stack: []
Stack pops: 1508
Stack additions: [0xcab50029, V2440]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1e2
Exit block: 0x25f
Body: 0x1e2, 0x1e9, 0x1ed, 0x1f5, 0x219, 0x222, 0x22a, 0x232, 0x246, 0x25f, 0x979, 0x9c9, 0x9d1, 0x9e4, 0x9f2, 0xa06, 0xa0f

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x26d
Exit block: 0x28f
Body: 0x26d, 0x274, 0x278, 0x28f, 0xa17, 0xa29, 0xa30, 0xa94, 0xa98, 0xaa5, 0xaa9, 0xaba, 0xabe, 0xabf

Function 2:
Public function signature: 0xba12c83
Entry block: 0x2a3
Exit block: 0x28f
Body: 0x28f, 0x2a3, 0x2aa, 0x2ae, 0x30c, 0xac5, 0xadb, 0xae2, 0xaf2, 0xaf9, 0xb27

Function 3:
Public function signature: 0xe6d1de9
Entry block: 0x2ca
Exit block: 0x2dd
Body: 0x2ca, 0x2d1, 0x2d5, 0x2dd, 0xb2a, 0xb37

Function 4:
Public function signature: 0x18160ddd
Entry block: 0x2f9
Exit block: 0x3f0
Body: 0x2f9, 0x300, 0x304, 0x30c, 0x3f0, 0xb3a, 0xb8d, 0xb91, 0xb9e, 0xba2, 0xbae

Function 5:
Public function signature: 0x23385089
Entry block: 0x31e
Exit block: 0x1e0
Body: 0x1e0, 0x31e, 0x325, 0x329, 0xbb1, 0xbc9, 0xc10, 0xc11, 0xc12

Function 6:
Public function signature: 0x23b872dd
Entry block: 0x348
Exit block: 0x28f
Body: 0x28f, 0x348, 0x34f, 0x353, 0xabe, 0xabf, 0xc17, 0xc29, 0xc30, 0xcab, 0xcaf, 0xcbc, 0xcc0, 0xcd1, 0xcd5, 0xcd6, 0x1224, 0x1256

Function 7:
Public function signature: 0x23de6651
Entry block: 0x384
Exit block: 0x1e0
Body: 0x1e0, 0x384, 0x38b, 0x38f, 0xc10, 0xc11, 0xc12, 0xcdd, 0xcf5, 0xd3c, 0xd3d, 0xd3e

Function 8:
Public function signature: 0x2d596330
Entry block: 0x3ae
Exit block: 0x2dd
Body: 0x2dd, 0x3ae, 0x3b5, 0x3b9, 0xd43

Function 9:
Public function signature: 0x313ce567
Entry block: 0x3dd
Exit block: 0x3f0
Body: 0x30c, 0x3dd, 0x3e4, 0x3e8, 0x3f0, 0xb91, 0xb9e, 0xba2, 0xbae, 0xd52, 0xda5

Function 10:
Public function signature: 0x4bfaf2e8
Entry block: 0x406
Exit block: 0x30c
Body: 0x30c, 0x406, 0x40d, 0x411, 0xdc9, 0xdcd

Function 11:
Public function signature: 0x4dfe950d
Entry block: 0x42b
Exit block: 0x28f
Body: 0x28f, 0x30c, 0x42b, 0x432, 0x436, 0xdd0, 0xe32, 0xe36, 0xe43, 0xe47, 0xe57, 0xe69, 0xe70, 0xe89, 0xe8a, 0xe8b

Function 12:
Public function signature: 0x5b48684e
Entry block: 0x452
Exit block: 0x28f
Body: 0x28f, 0x452, 0x459, 0x45d, 0xe8e, 0xeb7

Function 13:
Public function signature: 0x6a630ee7
Entry block: 0x479
Exit block: 0xfdc
Body: 0x28f, 0x479, 0x480, 0x484, 0xeba, 0xed0, 0xee0, 0xf67, 0xf70, 0xf78, 0xf80, 0xf94, 0xfad, 0xfcb, 0xfcf, 0xfdc, 0xfe0, 0xfee, 0xfef, 0xff0

Function 14:
Public function signature: 0x70a08231
Entry block: 0x4fd
Exit block: 0x30c
Body: 0x28f, 0x30c, 0x4fd, 0x504, 0x508, 0xff9, 0x105b, 0x105f, 0x106c, 0x1070, 0x107c

Function 15:
Public function signature: 0x7b7054c8
Entry block: 0x52e
Exit block: 0x28f
Body: 0x28f, 0x52e, 0x535, 0x539, 0xabe, 0xabf, 0xcd5, 0xcd6, 0x1081, 0x1097, 0x10a7, 0x111f, 0x1123, 0x1130, 0x1134, 0x1142, 0x1143, 0x1144, 0x1224, 0x1256

Function 16:
Public function signature: 0x95d89b41
Entry block: 0x56b
Exit block: 0x25f
Body: 0x1f5, 0x219, 0x222, 0x22a, 0x232, 0x246, 0x25f, 0x56b, 0x572, 0x576, 0x9e4, 0x9f2, 0xa06, 0xa0f, 0x114c, 0x119c, 0x11a4

Function 17:
Public function signature: 0xa883fb90
Entry block: 0x5f6
Exit block: 0x2dd
Body: 0x2dd, 0x5f6, 0x5fd, 0x601, 0x11ea, 0x11f7

Function 18:
Public function signature: 0xa9059cbb
Entry block: 0x625
Exit block: 0x28f
Body: 0x28f, 0x625, 0x62c, 0x630, 0xaba, 0xabe, 0xabf, 0x11fa, 0x120c, 0x1224

Function 19:
Public function signature: 0xac35caee
Entry block: 0x65b
Exit block: 0x28f
Body: 0x28f, 0x65b, 0x662, 0x666, 0xabe, 0xabf, 0xcd1, 0xcd5, 0xcd6, 0x1224, 0x123a, 0x124c, 0x1256

Function 20:
Public function signature: 0xb2b45df5
Entry block: 0x6d4
Exit block: 0x28f
Body: 0x28f, 0x6d4, 0x6db, 0x6df, 0xabe, 0xabf, 0xcd5, 0xcd6, 0x1224, 0x1256, 0x126d, 0x1282, 0x1289, 0x12b7

Function 21:
Public function signature: 0xc915fc93
Entry block: 0x789
Exit block: 0x28f
Body: 0x28f, 0x30c, 0x789, 0x790, 0x794, 0x107c, 0x12e4, 0x1346, 0x134a, 0x1357, 0x135b, 0x136b, 0x137c, 0x1383, 0x1394, 0x139b, 0x13ae, 0x13d0, 0x1430, 0x1431, 0x1432

Function 22:
Public function signature: 0xcb4e75bb
Entry block: 0x7bc
Exit block: 0x30c
Body: 0x30c, 0x7bc, 0x7c3, 0x7c7, 0x1437

Function 23:
Public function signature: 0xcfb51928
Entry block: 0x7e1
Exit block: 0x7e8
Body: 0x30c, 0x7e1, 0x7e8, 0x7ec

Function 24:
Public function signature: 0xd4eec5a6
Entry block: 0x844
Exit block: 0x28f
Body: 0x28f, 0x30c, 0x844, 0x84b, 0x84f, 0x144c, 0x146f, 0x1476, 0x14aa

Function 25:
Public function signature: 0xdd62ed3e
Entry block: 0x86b
Exit block: 0x30c
Body: 0x30c, 0x86b, 0x872, 0x876, 0x14ad, 0x151d, 0x1521, 0x152e, 0x1532, 0x153e

Function 26:
Public function signature: 0xec698a28
Entry block: 0x8a2
Exit block: 0x1671
Body: 0x28f, 0x8a2, 0x8a9, 0x8ad, 0x1544, 0x155a, 0x156a, 0x15fb, 0x1604, 0x160c, 0x1614, 0x1628, 0x1641, 0x1660, 0x1664, 0x1671, 0x1675, 0x1683, 0x1684, 0x1685

Function 27:
Public function signature: 0xfe8beb71
Entry block: 0x92d
Exit block: 0x2dd
Body: 0x2dd, 0x92d, 0x934, 0x938

Function 28:
Public fallback function
Entry block: 0x14e
Exit block: 0x1e0
Body: 0x14e, 0x14f, 0x157, 0x1c6, 0x1ca, 0x1d7, 0x1db, 0x1e0

Function 29:
Private function
Entry block: 0x143d
Exit block: 0x1447
Body: 0x143d, 0x1447

Function 30:
Private function
Entry block: 0x1803
Exit block: 0x187e
Body: 0x976, 0x1803, 0x1834, 0x1844, 0x1853, 0x1856, 0x185f, 0x1871, 0x1872, 0x187e, 0x1882, 0x1888, 0x1891

Function 31:
Private function
Entry block: 0x168f
Exit block: 0x16e1
Body: 0x168f, 0x16b2, 0x16d1, 0x16de, 0x16e1

Function 32:
Private function
Entry block: 0x968
Exit block: 0x976
Body: 0x968, 0x973, 0x976, 0x12b7, 0x12c1, 0x187e

