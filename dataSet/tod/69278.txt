Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x60]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x60
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x60
0xc: JUMPI 0x60 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x110]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH3 0x821de3
0x39 DUP2
0x3a EQ
0x3b PUSH2 0x110
0x3e JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x821de3
0x3a: V13 = EQ V11 0x821de3
0x3b: V14 = 0x110
0x3e: JUMPI 0x110 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xd]
Successors: [0x4a, 0x141]
---
0x3f DUP1
0x40 PUSH4 0x3ef13367
0x45 EQ
0x46 PUSH2 0x141
0x49 JUMPI
---
0x40: V15 = 0x3ef13367
0x45: V16 = EQ 0x3ef13367 V11
0x46: V17 = 0x141
0x49: JUMPI 0x141 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x164]
---
0x4a DUP1
0x4b PUSH4 0x6b9f96ea
0x50 EQ
0x51 PUSH2 0x164
0x54 JUMPI
---
0x4b: V18 = 0x6b9f96ea
0x50: V19 = EQ 0x6b9f96ea V11
0x51: V20 = 0x164
0x54: JUMPI 0x164 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x179]
---
0x55 DUP1
0x56 PUSH4 0x880cdc31
0x5b EQ
0x5c PUSH2 0x179
0x5f JUMPI
---
0x56: V21 = 0x880cdc31
0x5b: V22 = EQ 0x880cdc31 V11
0x5c: V23 = 0x179
0x5f: JUMPI 0x179 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x60
[0x60:0x90]
---
Predecessors: [0x0, 0x55]
Successors: [0x91, 0x9a]
---
0x60 JUMPDEST
0x61 PUSH1 0x0
0x63 DUP1
0x64 SLOAD
0x65 PUSH1 0x40
0x67 MLOAD
0x68 PUSH1 0x1
0x6a PUSH1 0xa0
0x6c PUSH1 0x2
0x6e EXP
0x6f SUB
0x70 SWAP1
0x71 SWAP2
0x72 AND
0x73 SWAP2
0x74 CALLVALUE
0x75 DUP1
0x76 ISZERO
0x77 PUSH2 0x8fc
0x7a MUL
0x7b SWAP3
0x7c SWAP1
0x7d SWAP2
0x7e DUP2
0x7f DUP2
0x80 DUP2
0x81 DUP6
0x82 DUP9
0x83 DUP9
0x84 CALL
0x85 SWAP4
0x86 POP
0x87 POP
0x88 POP
0x89 POP
0x8a ISZERO
0x8b DUP1
0x8c ISZERO
0x8d PUSH2 0x9a
0x90 JUMPI
---
0x60: JUMPDEST 
0x61: V24 = 0x0
0x64: V25 = S[0x0]
0x65: V26 = 0x40
0x67: V27 = M[0x40]
0x68: V28 = 0x1
0x6a: V29 = 0xa0
0x6c: V30 = 0x2
0x6e: V31 = EXP 0x2 0xa0
0x6f: V32 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72: V33 = AND V25 0xffffffffffffffffffffffffffffffffffffffff
0x74: V34 = CALLVALUE
0x76: V35 = ISZERO V34
0x77: V36 = 0x8fc
0x7a: V37 = MUL 0x8fc V35
0x84: V38 = CALL V37 V33 V34 V27 0x0 V27 0x0
0x8a: V39 = ISZERO V38
0x8c: V40 = ISZERO V39
0x8d: V41 = 0x9a
0x90: JUMPI 0x9a V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V11, V39]

================================

Block 0x91
[0x91:0x99]
---
Predecessors: [0x60]
Successors: []
---
0x91 RETURNDATASIZE
0x92 PUSH1 0x0
0x94 DUP1
0x95 RETURNDATACOPY
0x96 RETURNDATASIZE
0x97 PUSH1 0x0
0x99 REVERT
---
0x91: V42 = RETURNDATASIZE
0x92: V43 = 0x0
0x95: RETURNDATACOPY 0x0 0x0 V42
0x96: V44 = RETURNDATASIZE
0x97: V45 = 0x0
0x99: REVERT 0x0 V44
---
Entry stack: [V11, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V39]

================================

Block 0x9a
[0x9a:0x10f]
---
Predecessors: [0x60]
Successors: []
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xbd CALLER
0xbe CALLVALUE
0xbf PUSH1 0x0
0xc1 CALLDATASIZE
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 DUP6
0xc7 PUSH1 0x1
0xc9 PUSH1 0xa0
0xcb PUSH1 0x2
0xcd EXP
0xce SUB
0xcf AND
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 AND
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde DUP5
0xdf DUP2
0xe0 MSTORE
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 DUP1
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 DUP3
0xe9 DUP2
0xea SUB
0xeb DUP3
0xec MSTORE
0xed DUP5
0xee DUP5
0xef DUP3
0xf0 DUP2
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP3
0xf7 POP
0xf8 DUP1
0xf9 DUP3
0xfa DUP5
0xfb CALLDATACOPY
0xfc PUSH1 0x40
0xfe MLOAD
0xff SWAP3
0x100 ADD
0x101 DUP3
0x102 SWAP1
0x103 SUB
0x104 SWAP8
0x105 POP
0x106 SWAP1
0x107 SWAP6
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c POP
0x10d POP
0x10e LOG1
0x10f STOP
---
0x9a: JUMPDEST 
0x9c: V46 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xbd: V47 = CALLER
0xbe: V48 = CALLVALUE
0xbf: V49 = 0x0
0xc1: V50 = CALLDATASIZE
0xc2: V51 = 0x40
0xc4: V52 = M[0x40]
0xc7: V53 = 0x1
0xc9: V54 = 0xa0
0xcb: V55 = 0x2
0xcd: V56 = EXP 0x2 0xa0
0xce: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xd0: V59 = 0x1
0xd2: V60 = 0xa0
0xd4: V61 = 0x2
0xd6: V62 = EXP 0x2 0xa0
0xd7: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xda: M[V52] = V64
0xdb: V65 = 0x20
0xdd: V66 = ADD 0x20 V52
0xe0: M[V66] = V48
0xe1: V67 = 0x20
0xe3: V68 = ADD 0x20 V66
0xe5: V69 = 0x20
0xe7: V70 = ADD 0x20 V68
0xea: V71 = SUB V70 V52
0xec: M[V68] = V71
0xf2: M[V70] = V50
0xf3: V72 = 0x20
0xf5: V73 = ADD 0x20 V70
0xfb: CALLDATACOPY V73 0x0 V50
0xfc: V74 = 0x40
0xfe: V75 = M[0x40]
0x100: V76 = ADD V73 V50
0x103: V77 = SUB V76 V75
0x10e: LOG V75 V77 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0x10f: STOP 
---
Entry stack: [V11, V39]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0xd]
Successors: [0x118, 0x11c]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 DUP1
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x110: JUMPDEST 
0x111: V78 = CALLVALUE
0x113: V79 = ISZERO V78
0x114: V80 = 0x11c
0x117: JUMPI 0x11c V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x110]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V81 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x11c
[0x11c:0x124]
---
Predecessors: [0x110]
Successors: [0x19a]
---
0x11c JUMPDEST
0x11d POP
0x11e PUSH2 0x125
0x121 PUSH2 0x19a
0x124 JUMP
---
0x11c: JUMPDEST 
0x11e: V82 = 0x125
0x121: V83 = 0x19a
0x124: JUMP 0x19a
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x125]
Exit stack: [V11, 0x125]

================================

Block 0x125
[0x125:0x140]
---
Predecessors: [0x19a]
Successors: []
---
0x125 JUMPDEST
0x126 PUSH1 0x40
0x128 DUP1
0x129 MLOAD
0x12a PUSH1 0x1
0x12c PUSH1 0xa0
0x12e PUSH1 0x2
0x130 EXP
0x131 SUB
0x132 SWAP1
0x133 SWAP3
0x134 AND
0x135 DUP3
0x136 MSTORE
0x137 MLOAD
0x138 SWAP1
0x139 DUP2
0x13a SWAP1
0x13b SUB
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP1
0x140 RETURN
---
0x125: JUMPDEST 
0x126: V84 = 0x40
0x129: V85 = M[0x40]
0x12a: V86 = 0x1
0x12c: V87 = 0xa0
0x12e: V88 = 0x2
0x130: V89 = EXP 0x2 0xa0
0x131: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x134: V91 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x136: M[V85] = V91
0x137: V92 = M[0x40]
0x13b: V93 = SUB V85 V92
0x13c: V94 = 0x20
0x13e: V95 = ADD 0x20 V93
0x140: RETURN V92 V95
---
Entry stack: [V11, 0x125, V137]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x125]

================================

Block 0x141
[0x141:0x148]
---
Predecessors: [0x3f]
Successors: [0x149, 0x14d]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 DUP1
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x141: JUMPDEST 
0x142: V96 = CALLVALUE
0x144: V97 = ISZERO V96
0x145: V98 = 0x14d
0x148: JUMPI 0x14d V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x141]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V99 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x14d
[0x14d:0x161]
---
Predecessors: [0x141]
Successors: [0x1a9]
---
0x14d JUMPDEST
0x14e POP
0x14f PUSH2 0x162
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a PUSH1 0x4
0x15c CALLDATALOAD
0x15d AND
0x15e PUSH2 0x1a9
0x161 JUMP
---
0x14d: JUMPDEST 
0x14f: V100 = 0x162
0x152: V101 = 0x1
0x154: V102 = 0xa0
0x156: V103 = 0x2
0x158: V104 = EXP 0x2 0xa0
0x159: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V106 = 0x4
0x15c: V107 = CALLDATALOAD 0x4
0x15d: V108 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V109 = 0x1a9
0x161: JUMP 0x1a9
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0x162, V108]
Exit stack: [V11, 0x162, V108]

================================

Block 0x162
[0x162:0x163]
---
Predecessors: [0x33f, 0x380, 0x39a]
Successors: []
---
0x162 JUMPDEST
0x163 STOP
---
0x162: JUMPDEST 
0x163: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x4a]
Successors: [0x16c, 0x170]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x164: JUMPDEST 
0x165: V110 = CALLVALUE
0x167: V111 = ISZERO V110
0x168: V112 = 0x170
0x16b: JUMPI 0x170 V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V11, V110]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x164]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V113 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V110]

================================

Block 0x170
[0x170:0x178]
---
Predecessors: [0x164]
Successors: [0x345]
---
0x170 JUMPDEST
0x171 POP
0x172 PUSH2 0x162
0x175 PUSH2 0x345
0x178 JUMP
---
0x170: JUMPDEST 
0x172: V114 = 0x162
0x175: V115 = 0x345
0x178: JUMP 0x345
---
Entry stack: [V11, V110]
Stack pops: 1
Stack additions: [0x162]
Exit stack: [V11, 0x162]

================================

Block 0x179
[0x179:0x180]
---
Predecessors: [0x55]
Successors: [0x181, 0x185]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b DUP1
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x179: JUMPDEST 
0x17a: V116 = CALLVALUE
0x17c: V117 = ISZERO V116
0x17d: V118 = 0x185
0x180: JUMPI 0x185 V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x179]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V119 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x185
[0x185:0x199]
---
Predecessors: [0x179]
Successors: [0x383]
---
0x185 JUMPDEST
0x186 POP
0x187 PUSH2 0x162
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 PUSH1 0x4
0x194 CALLDATALOAD
0x195 AND
0x196 PUSH2 0x383
0x199 JUMP
---
0x185: JUMPDEST 
0x187: V120 = 0x162
0x18a: V121 = 0x1
0x18c: V122 = 0xa0
0x18e: V123 = 0x2
0x190: V124 = EXP 0x2 0xa0
0x191: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x192: V126 = 0x4
0x194: V127 = CALLDATALOAD 0x4
0x195: V128 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x196: V129 = 0x383
0x199: JUMP 0x383
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: [0x162, V128]
Exit stack: [V11, 0x162, V128]

================================

Block 0x19a
[0x19a:0x1a8]
---
Predecessors: [0x11c]
Successors: [0x125]
---
0x19a JUMPDEST
0x19b PUSH1 0x0
0x19d SLOAD
0x19e PUSH1 0x1
0x1a0 PUSH1 0xa0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 SUB
0x1a6 AND
0x1a7 DUP2
0x1a8 JUMP
---
0x19a: JUMPDEST 
0x19b: V130 = 0x0
0x19d: V131 = S[0x0]
0x19e: V132 = 0x1
0x1a0: V133 = 0xa0
0x1a2: V134 = 0x2
0x1a4: V135 = EXP 0x2 0xa0
0x1a5: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a6: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x1a8: JUMP 0x125
---
Entry stack: [V11, 0x125]
Stack pops: 1
Stack additions: [S0, V137]
Exit stack: [V11, 0x125, V137]

================================

Block 0x1a9
[0x1a9:0x1c0]
---
Predecessors: [0x14d]
Successors: [0x1c1, 0x1c5]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad SLOAD
0x1ae DUP2
0x1af SWAP1
0x1b0 DUP2
0x1b1 SWAP1
0x1b2 PUSH1 0x1
0x1b4 PUSH1 0xa0
0x1b6 PUSH1 0x2
0x1b8 EXP
0x1b9 SUB
0x1ba AND
0x1bb CALLER
0x1bc EQ
0x1bd PUSH2 0x1c5
0x1c0 JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V138 = 0x0
0x1ad: V139 = S[0x0]
0x1b2: V140 = 0x1
0x1b4: V141 = 0xa0
0x1b6: V142 = 0x2
0x1b8: V143 = EXP 0x2 0xa0
0x1b9: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1bb: V146 = CALLER
0x1bc: V147 = EQ V146 V145
0x1bd: V148 = 0x1c5
0x1c0: JUMPI 0x1c5 V147
---
Entry stack: [V11, 0x162, V108]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x162, V108, 0x0, 0x0, 0x0]

================================

Block 0x1c1
[0x1c1:0x1c4]
---
Predecessors: [0x1a9]
Successors: []
---
0x1c1 PUSH1 0x0
0x1c3 DUP1
0x1c4 REVERT
---
0x1c1: V149 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x162, V108, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V108, 0x0, 0x0, 0x0]

================================

Block 0x1c5
[0x1c5:0x23a]
---
Predecessors: [0x1a9]
Successors: [0x23b, 0x23f]
---
0x1c5 JUMPDEST
0x1c6 DUP4
0x1c7 SWAP3
0x1c8 POP
0x1c9 ADDRESS
0x1ca SWAP2
0x1cb POP
0x1cc DUP3
0x1cd PUSH1 0x1
0x1cf PUSH1 0xa0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 SUB
0x1d5 AND
0x1d6 PUSH4 0x70a08231
0x1db DUP4
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP3
0x1e0 PUSH4 0xffffffff
0x1e5 AND
0x1e6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x204 MUL
0x205 DUP2
0x206 MSTORE
0x207 PUSH1 0x4
0x209 ADD
0x20a DUP1
0x20b DUP3
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 AND
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d AND
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x20
0x222 ADD
0x223 SWAP2
0x224 POP
0x225 POP
0x226 PUSH1 0x20
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP1
0x22c DUP4
0x22d SUB
0x22e DUP2
0x22f PUSH1 0x0
0x231 DUP8
0x232 DUP1
0x233 EXTCODESIZE
0x234 ISZERO
0x235 DUP1
0x236 ISZERO
0x237 PUSH2 0x23f
0x23a JUMPI
---
0x1c5: JUMPDEST 
0x1c9: V150 = ADDRESS
0x1cd: V151 = 0x1
0x1cf: V152 = 0xa0
0x1d1: V153 = 0x2
0x1d3: V154 = EXP 0x2 0xa0
0x1d4: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d5: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1d6: V157 = 0x70a08231
0x1dc: V158 = 0x40
0x1de: V159 = M[0x40]
0x1e0: V160 = 0xffffffff
0x1e5: V161 = AND 0xffffffff 0x70a08231
0x1e6: V162 = 0x100000000000000000000000000000000000000000000000000000000
0x204: V163 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x206: M[V159] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x207: V164 = 0x4
0x209: V165 = ADD 0x4 V159
0x20c: V166 = 0x1
0x20e: V167 = 0xa0
0x210: V168 = 0x2
0x212: V169 = EXP 0x2 0xa0
0x213: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x214: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x215: V172 = 0x1
0x217: V173 = 0xa0
0x219: V174 = 0x2
0x21b: V175 = EXP 0x2 0xa0
0x21c: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x21f: M[V165] = V177
0x220: V178 = 0x20
0x222: V179 = ADD 0x20 V165
0x226: V180 = 0x20
0x228: V181 = 0x40
0x22a: V182 = M[0x40]
0x22d: V183 = SUB V179 V182
0x22f: V184 = 0x0
0x233: V185 = EXTCODESIZE V156
0x234: V186 = ISZERO V185
0x236: V187 = ISZERO V186
0x237: V188 = 0x23f
0x23a: JUMPI 0x23f V187
---
Entry stack: [V11, 0x162, V108, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V150, S0, V156, 0x70a08231, V179, 0x20, V182, V183, V182, 0x0, V156, V186]
Exit stack: [V11, 0x162, V108, V108, V150, 0x0, V156, 0x70a08231, V179, 0x20, V182, V183, V182, 0x0, V156, V186]

================================

Block 0x23b
[0x23b:0x23e]
---
Predecessors: [0x1c5]
Successors: []
---
0x23b PUSH1 0x0
0x23d DUP1
0x23e REVERT
---
0x23b: V189 = 0x0
0x23e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x162, V108, V108, V150, 0x0, V156, 0x70a08231, V179, 0x20, V182, V183, V182, 0x0, V156, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V108, V108, V150, 0x0, V156, 0x70a08231, V179, 0x20, V182, V183, V182, 0x0, V156, V186]

================================

Block 0x23f
[0x23f:0x249]
---
Predecessors: [0x1c5]
Successors: [0x24a, 0x253]
---
0x23f JUMPDEST
0x240 POP
0x241 GAS
0x242 CALL
0x243 ISZERO
0x244 DUP1
0x245 ISZERO
0x246 PUSH2 0x253
0x249 JUMPI
---
0x23f: JUMPDEST 
0x241: V190 = GAS
0x242: V191 = CALL V190 V156 0x0 V182 V183 V182 0x20
0x243: V192 = ISZERO V191
0x245: V193 = ISZERO V192
0x246: V194 = 0x253
0x249: JUMPI 0x253 V193
---
Entry stack: [V11, 0x162, V108, V108, V150, 0x0, V156, 0x70a08231, V179, 0x20, V182, V183, V182, 0x0, V156, V186]
Stack pops: 7
Stack additions: [V192]
Exit stack: [V11, 0x162, V108, V108, V150, 0x0, V156, 0x70a08231, V179, V192]

================================

Block 0x24a
[0x24a:0x252]
---
Predecessors: [0x23f]
Successors: []
---
0x24a RETURNDATASIZE
0x24b PUSH1 0x0
0x24d DUP1
0x24e RETURNDATACOPY
0x24f RETURNDATASIZE
0x250 PUSH1 0x0
0x252 REVERT
---
0x24a: V195 = RETURNDATASIZE
0x24b: V196 = 0x0
0x24e: RETURNDATACOPY 0x0 0x0 V195
0x24f: V197 = RETURNDATASIZE
0x250: V198 = 0x0
0x252: REVERT 0x0 V197
---
Entry stack: [V11, 0x162, V108, V108, V150, 0x0, V156, 0x70a08231, V179, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V108, V108, V150, 0x0, V156, 0x70a08231, V179, V192]

================================

Block 0x253
[0x253:0x264]
---
Predecessors: [0x23f]
Successors: [0x265, 0x269]
---
0x253 JUMPDEST
0x254 POP
0x255 POP
0x256 POP
0x257 POP
0x258 PUSH1 0x40
0x25a MLOAD
0x25b RETURNDATASIZE
0x25c PUSH1 0x20
0x25e DUP2
0x25f LT
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x253: JUMPDEST 
0x258: V199 = 0x40
0x25a: V200 = M[0x40]
0x25b: V201 = RETURNDATASIZE
0x25c: V202 = 0x20
0x25f: V203 = LT V201 0x20
0x260: V204 = ISZERO V203
0x261: V205 = 0x269
0x264: JUMPI 0x269 V204
---
Entry stack: [V11, 0x162, V108, V108, V150, 0x0, V156, 0x70a08231, V179, V192]
Stack pops: 4
Stack additions: [V200, V201]
Exit stack: [V11, 0x162, V108, V108, V150, 0x0, V200, V201]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x253]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V206 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V11, 0x162, V108, V108, V150, 0x0, V200, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V108, V108, V150, 0x0, V200, V201]

================================

Block 0x269
[0x269:0x274]
---
Predecessors: [0x253]
Successors: [0x275, 0x279]
---
0x269 JUMPDEST
0x26a POP
0x26b MLOAD
0x26c SWAP1
0x26d POP
0x26e DUP1
0x26f ISZERO
0x270 ISZERO
0x271 PUSH2 0x279
0x274 JUMPI
---
0x269: JUMPDEST 
0x26b: V207 = M[V200]
0x26f: V208 = ISZERO V207
0x270: V209 = ISZERO V208
0x271: V210 = 0x279
0x274: JUMPI 0x279 V209
---
Entry stack: [V11, 0x162, V108, V108, V150, 0x0, V200, V201]
Stack pops: 3
Stack additions: [V207]
Exit stack: [V11, 0x162, V108, V108, V150, V207]

================================

Block 0x275
[0x275:0x278]
---
Predecessors: [0x269]
Successors: [0x33f]
---
0x275 PUSH2 0x33f
0x278 JUMP
---
0x275: V211 = 0x33f
0x278: JUMP 0x33f
---
Entry stack: [V11, 0x162, V108, V108, V150, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V108, V108, V150, V207]

================================

Block 0x279
[0x279:0x2dd]
---
Predecessors: [0x269]
Successors: [0x2de, 0x2e2]
---
0x279 JUMPDEST
0x27a PUSH1 0x0
0x27c DUP1
0x27d SLOAD
0x27e PUSH1 0x40
0x280 DUP1
0x281 MLOAD
0x282 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2a3 DUP2
0x2a4 MSTORE
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad SWAP3
0x2ae DUP4
0x2af AND
0x2b0 PUSH1 0x4
0x2b2 DUP3
0x2b3 ADD
0x2b4 MSTORE
0x2b5 PUSH1 0x24
0x2b7 DUP2
0x2b8 ADD
0x2b9 DUP6
0x2ba SWAP1
0x2bb MSTORE
0x2bc SWAP1
0x2bd MLOAD
0x2be SWAP2
0x2bf DUP7
0x2c0 AND
0x2c1 SWAP3
0x2c2 PUSH4 0xa9059cbb
0x2c7 SWAP3
0x2c8 PUSH1 0x44
0x2ca DUP1
0x2cb DUP5
0x2cc ADD
0x2cd SWAP4
0x2ce DUP3
0x2cf SWAP1
0x2d0 SUB
0x2d1 ADD
0x2d2 DUP2
0x2d3 DUP4
0x2d4 DUP8
0x2d5 DUP1
0x2d6 EXTCODESIZE
0x2d7 ISZERO
0x2d8 DUP1
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x279: JUMPDEST 
0x27a: V212 = 0x0
0x27d: V213 = S[0x0]
0x27e: V214 = 0x40
0x281: V215 = M[0x40]
0x282: V216 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2a4: M[V215] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2a5: V217 = 0x1
0x2a7: V218 = 0xa0
0x2a9: V219 = 0x2
0x2ab: V220 = EXP 0x2 0xa0
0x2ac: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x2b0: V223 = 0x4
0x2b3: V224 = ADD V215 0x4
0x2b4: M[V224] = V222
0x2b5: V225 = 0x24
0x2b8: V226 = ADD V215 0x24
0x2bb: M[V226] = V207
0x2bd: V227 = M[0x40]
0x2c0: V228 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V229 = 0xa9059cbb
0x2c8: V230 = 0x44
0x2cc: V231 = ADD V215 0x44
0x2d0: V232 = SUB V215 V227
0x2d1: V233 = ADD V232 0x44
0x2d6: V234 = EXTCODESIZE V228
0x2d7: V235 = ISZERO V234
0x2d9: V236 = ISZERO V235
0x2da: V237 = 0x2e2
0x2dd: JUMPI 0x2e2 V236
---
Entry stack: [V11, 0x162, V108, V108, V150, V207]
Stack pops: 3
Stack additions: [S2, S1, S0, V228, 0xa9059cbb, V231, 0x0, V227, V233, V227, 0x0, V228, V235]
Exit stack: [V11, 0x162, V108, V108, V150, V207, V228, 0xa9059cbb, V231, 0x0, V227, V233, V227, 0x0, V228, V235]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x279]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V238 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x162, V108, V108, V150, V207, V228, 0xa9059cbb, V231, 0x0, V227, V233, V227, 0x0, V228, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V108, V108, V150, V207, V228, 0xa9059cbb, V231, 0x0, V227, V233, V227, 0x0, V228, V235]

================================

Block 0x2e2
[0x2e2:0x2ec]
---
Predecessors: [0x279]
Successors: [0x2ed, 0x2f6]
---
0x2e2 JUMPDEST
0x2e3 POP
0x2e4 GAS
0x2e5 CALL
0x2e6 ISZERO
0x2e7 DUP1
0x2e8 ISZERO
0x2e9 PUSH2 0x2f6
0x2ec JUMPI
---
0x2e2: JUMPDEST 
0x2e4: V239 = GAS
0x2e5: V240 = CALL V239 V228 0x0 V227 V233 V227 0x0
0x2e6: V241 = ISZERO V240
0x2e8: V242 = ISZERO V241
0x2e9: V243 = 0x2f6
0x2ec: JUMPI 0x2f6 V242
---
Entry stack: [V11, 0x162, V108, V108, V150, V207, V228, 0xa9059cbb, V231, 0x0, V227, V233, V227, 0x0, V228, V235]
Stack pops: 7
Stack additions: [V241]
Exit stack: [V11, 0x162, V108, V108, V150, V207, V228, 0xa9059cbb, V231, V241]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2e2]
Successors: []
---
0x2ed RETURNDATASIZE
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 RETURNDATACOPY
0x2f2 RETURNDATASIZE
0x2f3 PUSH1 0x0
0x2f5 REVERT
---
0x2ed: V244 = RETURNDATASIZE
0x2ee: V245 = 0x0
0x2f1: RETURNDATACOPY 0x0 0x0 V244
0x2f2: V246 = RETURNDATASIZE
0x2f3: V247 = 0x0
0x2f5: REVERT 0x0 V246
---
Entry stack: [V11, 0x162, V108, V108, V150, V207, V228, 0xa9059cbb, V231, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V108, V108, V150, V207, V228, 0xa9059cbb, V231, V241]

================================

Block 0x2f6
[0x2f6:0x33e]
---
Predecessors: [0x2e2]
Successors: [0x33f]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x40
0x2fb DUP1
0x2fc MLOAD
0x2fd PUSH1 0x1
0x2ff PUSH1 0xa0
0x301 PUSH1 0x2
0x303 EXP
0x304 SUB
0x305 DUP9
0x306 AND
0x307 DUP2
0x308 MSTORE
0x309 PUSH1 0x20
0x30b DUP2
0x30c ADD
0x30d DUP6
0x30e SWAP1
0x30f MSTORE
0x310 DUP2
0x311 MLOAD
0x312 PUSH32 0x75d34d39d28e6c8fd84f5539c817dea378701028c77ceade58bb8789b3e81bde
0x333 SWAP5
0x334 POP
0x335 SWAP1
0x336 DUP2
0x337 SWAP1
0x338 SUB
0x339 SWAP1
0x33a SWAP2
0x33b ADD
0x33c SWAP2
0x33d POP
0x33e LOG1
---
0x2f6: JUMPDEST 
0x2f9: V248 = 0x40
0x2fc: V249 = M[0x40]
0x2fd: V250 = 0x1
0x2ff: V251 = 0xa0
0x301: V252 = 0x2
0x303: V253 = EXP 0x2 0xa0
0x304: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V255 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x308: M[V249] = V255
0x309: V256 = 0x20
0x30c: V257 = ADD V249 0x20
0x30f: M[V257] = V207
0x311: V258 = M[0x40]
0x312: V259 = 0x75d34d39d28e6c8fd84f5539c817dea378701028c77ceade58bb8789b3e81bde
0x338: V260 = SUB V249 V258
0x33b: V261 = ADD 0x40 V260
0x33e: LOG V258 V261 0x75d34d39d28e6c8fd84f5539c817dea378701028c77ceade58bb8789b3e81bde
---
Entry stack: [V11, 0x162, V108, V108, V150, V207, V228, 0xa9059cbb, V231, V241]
Stack pops: 8
Stack additions: [S7, S6, S5, S4]
Exit stack: [V11, 0x162, V108, V108, V150, V207]

================================

Block 0x33f
[0x33f:0x344]
---
Predecessors: [0x275, 0x2f6]
Successors: [0x162]
---
0x33f JUMPDEST
0x340 POP
0x341 POP
0x342 POP
0x343 POP
0x344 JUMP
---
0x33f: JUMPDEST 
0x344: JUMP 0x162
---
Entry stack: [V11, 0x162, V108, V108, V150, V207]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x345
[0x345:0x376]
---
Predecessors: [0x170]
Successors: [0x377, 0x380]
---
0x345 JUMPDEST
0x346 PUSH1 0x0
0x348 DUP1
0x349 SLOAD
0x34a PUSH1 0x40
0x34c MLOAD
0x34d PUSH1 0x1
0x34f PUSH1 0xa0
0x351 PUSH1 0x2
0x353 EXP
0x354 SUB
0x355 SWAP1
0x356 SWAP2
0x357 AND
0x358 SWAP2
0x359 ADDRESS
0x35a BALANCE
0x35b DUP1
0x35c ISZERO
0x35d PUSH2 0x8fc
0x360 MUL
0x361 SWAP3
0x362 SWAP1
0x363 SWAP2
0x364 DUP2
0x365 DUP2
0x366 DUP2
0x367 DUP6
0x368 DUP9
0x369 DUP9
0x36a CALL
0x36b SWAP4
0x36c POP
0x36d POP
0x36e POP
0x36f POP
0x370 ISZERO
0x371 DUP1
0x372 ISZERO
0x373 PUSH2 0x380
0x376 JUMPI
---
0x345: JUMPDEST 
0x346: V262 = 0x0
0x349: V263 = S[0x0]
0x34a: V264 = 0x40
0x34c: V265 = M[0x40]
0x34d: V266 = 0x1
0x34f: V267 = 0xa0
0x351: V268 = 0x2
0x353: V269 = EXP 0x2 0xa0
0x354: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x357: V271 = AND V263 0xffffffffffffffffffffffffffffffffffffffff
0x359: V272 = ADDRESS
0x35a: V273 = BALANCE V272
0x35c: V274 = ISZERO V273
0x35d: V275 = 0x8fc
0x360: V276 = MUL 0x8fc V274
0x36a: V277 = CALL V276 V271 V273 V265 0x0 V265 0x0
0x370: V278 = ISZERO V277
0x372: V279 = ISZERO V278
0x373: V280 = 0x380
0x376: JUMPI 0x380 V279
---
Entry stack: [V11, 0x162]
Stack pops: 0
Stack additions: [V278]
Exit stack: [V11, 0x162, V278]

================================

Block 0x377
[0x377:0x37f]
---
Predecessors: [0x345]
Successors: []
---
0x377 RETURNDATASIZE
0x378 PUSH1 0x0
0x37a DUP1
0x37b RETURNDATACOPY
0x37c RETURNDATASIZE
0x37d PUSH1 0x0
0x37f REVERT
---
0x377: V281 = RETURNDATASIZE
0x378: V282 = 0x0
0x37b: RETURNDATACOPY 0x0 0x0 V281
0x37c: V283 = RETURNDATASIZE
0x37d: V284 = 0x0
0x37f: REVERT 0x0 V283
---
Entry stack: [V11, 0x162, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V278]

================================

Block 0x380
[0x380:0x382]
---
Predecessors: [0x345]
Successors: [0x162]
---
0x380 JUMPDEST
0x381 POP
0x382 JUMP
---
0x380: JUMPDEST 
0x382: JUMP 0x162
---
Entry stack: [V11, 0x162, V278]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x383
[0x383:0x395]
---
Predecessors: [0x185]
Successors: [0x396, 0x39a]
---
0x383 JUMPDEST
0x384 PUSH1 0x0
0x386 SLOAD
0x387 PUSH1 0x1
0x389 PUSH1 0xa0
0x38b PUSH1 0x2
0x38d EXP
0x38e SUB
0x38f AND
0x390 CALLER
0x391 EQ
0x392 PUSH2 0x39a
0x395 JUMPI
---
0x383: JUMPDEST 
0x384: V285 = 0x0
0x386: V286 = S[0x0]
0x387: V287 = 0x1
0x389: V288 = 0xa0
0x38b: V289 = 0x2
0x38d: V290 = EXP 0x2 0xa0
0x38e: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x390: V293 = CALLER
0x391: V294 = EQ V293 V292
0x392: V295 = 0x39a
0x395: JUMPI 0x39a V294
---
Entry stack: [V11, 0x162, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V128]

================================

Block 0x396
[0x396:0x399]
---
Predecessors: [0x383]
Successors: []
---
0x396 PUSH1 0x0
0x398 DUP1
0x399 REVERT
---
0x396: V296 = 0x0
0x399: REVERT 0x0 0x0
---
Entry stack: [V11, 0x162, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x162, V128]

================================

Block 0x39a
[0x39a:0x3c8]
---
Predecessors: [0x383]
Successors: [0x162]
---
0x39a JUMPDEST
0x39b PUSH1 0x0
0x39d DUP1
0x39e SLOAD
0x39f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b4 NOT
0x3b5 AND
0x3b6 PUSH1 0x1
0x3b8 PUSH1 0xa0
0x3ba PUSH1 0x2
0x3bc EXP
0x3bd SUB
0x3be SWAP3
0x3bf SWAP1
0x3c0 SWAP3
0x3c1 AND
0x3c2 SWAP2
0x3c3 SWAP1
0x3c4 SWAP2
0x3c5 OR
0x3c6 SWAP1
0x3c7 SSTORE
0x3c8 JUMP
---
0x39a: JUMPDEST 
0x39b: V297 = 0x0
0x39e: V298 = S[0x0]
0x39f: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V300 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V301 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V298
0x3b6: V302 = 0x1
0x3b8: V303 = 0xa0
0x3ba: V304 = 0x2
0x3bc: V305 = EXP 0x2 0xa0
0x3bd: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c1: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x3c5: V308 = OR V307 V301
0x3c7: S[0x0] = V308
0x3c8: JUMP 0x162
---
Entry stack: [V11, 0x162, V128]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c9
[0x3c9:0x3f4]
---
Predecessors: []
Successors: []
---
0x3c9 STOP
0x3ca LOG1
0x3cb PUSH6 0x627a7a723058
0x3d2 SHA3
0x3d3 MISSING 0xad
0x3d4 MOD
0x3d5 MISSING 0xbe
0x3d6 MISSING 0xf6
0x3d7 PUSH9 0xfc932f366022e832c2
0x3e1 NOT
0x3e2 CALLDATACOPY
0x3e3 SELFDESTRUCT
0x3e4 MISSING 0xbf
0x3e5 DUP3
0x3e6 SELFDESTRUCT
0x3e7 MISSING 0xac
0x3e8 DUP5
0x3e9 MLOAD
0x3ea DUP5
0x3eb MISSING 0x4a
0x3ec PUSH4 0x9ace8a6e
0x3f1 LOG0
0x3f2 SLT
0x3f3 STOP
0x3f4 MISSING 0x29
---
0x3c9: STOP 
0x3ca: LOG S0 S1 S2
0x3cb: V309 = 0x627a7a723058
0x3d2: V310 = SHA3 0x627a7a723058 S3
0x3d3: MISSING 0xad
0x3d4: V311 = MOD S0 S1
0x3d5: MISSING 0xbe
0x3d6: MISSING 0xf6
0x3d7: V312 = 0xfc932f366022e832c2
0x3e1: V313 = NOT 0xfc932f366022e832c2
0x3e2: CALLDATACOPY 0xffffffffffffffffffffffffffffffffffffffffffffff036cd0c99fdd17cd3d S0 S1
0x3e3: SELFDESTRUCT S2
0x3e4: MISSING 0xbf
0x3e6: SELFDESTRUCT S2
0x3e7: MISSING 0xac
0x3e9: V314 = M[S4]
0x3eb: MISSING 0x4a
0x3ec: V315 = 0x9ace8a6e
0x3f1: LOG 0x9ace8a6e S0
0x3f2: V316 = SLT S1 S2
0x3f3: STOP 
0x3f4: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V310, V311, S0, S1, S2, S3, V314, S0, S1, S2, S3, S4, V316]
Exit stack: []

================================

Function 0:
Public function signature: 0x821de3
Entry block: 0x110
Exit block: 0x125
Body: 0x110, 0x118, 0x11c, 0x125, 0x19a

Function 1:
Public function signature: 0x3ef13367
Entry block: 0x141
Exit block: 0x162
Body: 0x141, 0x149, 0x14d, 0x162, 0x1a9, 0x1c1, 0x1c5, 0x23b, 0x23f, 0x24a, 0x253, 0x265, 0x269, 0x275, 0x279, 0x2de, 0x2e2, 0x2ed, 0x2f6, 0x33f

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x164
Exit block: 0x162
Body: 0x162, 0x164, 0x16c, 0x170, 0x345, 0x377, 0x380

Function 3:
Public function signature: 0x880cdc31
Entry block: 0x179
Exit block: 0x162
Body: 0x162, 0x179, 0x181, 0x185, 0x383, 0x396, 0x39a

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0x91
Body: 0x60, 0x91, 0x9a

