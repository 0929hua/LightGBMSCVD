Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xc1]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xc1
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xc1
0xc: JUMPI 0xc1 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xc6]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x14bfd6d0
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xc6
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x14bfd6d0
0x22: V15 = EQ V13 0x14bfd6d0
0x23: V16 = 0xc6
0x26: JUMPI 0xc6 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xfa]
---
0x27 DUP1
0x28 PUSH4 0x35a063b4
0x2d EQ
0x2e PUSH2 0xfa
0x31 JUMPI
---
0x28: V17 = 0x35a063b4
0x2d: V18 = EQ 0x35a063b4 V13
0x2e: V19 = 0xfa
0x31: JUMPI 0xfa V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x111]
---
0x32 DUP1
0x33 PUSH4 0x4783c35b
0x38 EQ
0x39 PUSH2 0x111
0x3c JUMPI
---
0x33: V20 = 0x4783c35b
0x38: V21 = EQ 0x4783c35b V13
0x39: V22 = 0x111
0x3c: JUMPI 0x111 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x126]
---
0x3d DUP1
0x3e PUSH4 0x53f754e0
0x43 EQ
0x44 PUSH2 0x126
0x47 JUMPI
---
0x3e: V23 = 0x53f754e0
0x43: V24 = EQ 0x53f754e0 V13
0x44: V25 = 0x126
0x47: JUMPI 0x126 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x150]
---
0x48 DUP1
0x49 PUSH4 0x63037b0c
0x4e EQ
0x4f PUSH2 0x150
0x52 JUMPI
---
0x49: V26 = 0x63037b0c
0x4e: V27 = EQ 0x63037b0c V13
0x4f: V28 = 0x150
0x52: JUMPI 0x150 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x192]
---
0x53 DUP1
0x54 PUSH4 0x66829b16
0x59 EQ
0x5a PUSH2 0x192
0x5d JUMPI
---
0x54: V29 = 0x66829b16
0x59: V30 = EQ 0x66829b16 V13
0x5a: V31 = 0x192
0x5d: JUMPI 0x192 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1b3]
---
0x5e DUP1
0x5f PUSH4 0x6901f668
0x64 EQ
0x65 PUSH2 0x1b3
0x68 JUMPI
---
0x5f: V32 = 0x6901f668
0x64: V33 = EQ 0x6901f668 V13
0x65: V34 = 0x1b3
0x68: JUMPI 0x1b3 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1dc]
---
0x69 DUP1
0x6a PUSH4 0x853828b6
0x6f EQ
0x70 PUSH2 0x1dc
0x73 JUMPI
---
0x6a: V35 = 0x853828b6
0x6f: V36 = EQ 0x853828b6 V13
0x70: V37 = 0x1dc
0x73: JUMPI 0x1dc V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1f1]
---
0x74 DUP1
0x75 PUSH4 0x93e88f3a
0x7a EQ
0x7b PUSH2 0x1f1
0x7e JUMPI
---
0x75: V38 = 0x93e88f3a
0x7a: V39 = EQ 0x93e88f3a V13
0x7b: V40 = 0x1f1
0x7e: JUMPI 0x1f1 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x206]
---
0x7f DUP1
0x80 PUSH4 0x9c75dd35
0x85 EQ
0x86 PUSH2 0x206
0x89 JUMPI
---
0x80: V41 = 0x9c75dd35
0x85: V42 = EQ 0x9c75dd35 V13
0x86: V43 = 0x206
0x89: JUMPI 0x206 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x21e]
---
0x8a DUP1
0x8b PUSH4 0xba3f5a12
0x90 EQ
0x91 PUSH2 0x21e
0x94 JUMPI
---
0x8b: V44 = 0xba3f5a12
0x90: V45 = EQ 0xba3f5a12 V13
0x91: V46 = 0x21e
0x94: JUMPI 0x21e V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x233]
---
0x95 DUP1
0x96 PUSH4 0xdb171211
0x9b EQ
0x9c PUSH2 0x233
0x9f JUMPI
---
0x96: V47 = 0xdb171211
0x9b: V48 = EQ 0xdb171211 V13
0x9c: V49 = 0x233
0x9f: JUMPI 0x233 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x248]
---
0xa0 DUP1
0xa1 PUSH4 0xe09adc70
0xa6 EQ
0xa7 PUSH2 0x248
0xaa JUMPI
---
0xa1: V50 = 0xe09adc70
0xa6: V51 = EQ 0xe09adc70 V13
0xa7: V52 = 0x248
0xaa: JUMPI 0x248 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x25d]
---
0xab DUP1
0xac PUSH4 0xeffd88b7
0xb1 EQ
0xb2 PUSH2 0x25d
0xb5 JUMPI
---
0xac: V53 = 0xeffd88b7
0xb1: V54 = EQ 0xeffd88b7 V13
0xb2: V55 = 0x25d
0xb5: JUMPI 0x25d V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x272]
---
0xb6 DUP1
0xb7 PUSH4 0xfc0c546a
0xbc EQ
0xbd PUSH2 0x272
0xc0 JUMPI
---
0xb7: V56 = 0xfc0c546a
0xbc: V57 = EQ 0xfc0c546a V13
0xbd: V58 = 0x272
0xc0: JUMPI 0x272 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xc5]
---
Predecessors: [0x0, 0xb6]
Successors: []
---
0xc1 JUMPDEST
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc1: JUMPDEST 
0xc2: V59 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xd]
Successors: [0xce, 0xd2]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 DUP1
0xc9 ISZERO
0xca PUSH2 0xd2
0xcd JUMPI
---
0xc6: JUMPDEST 
0xc7: V60 = CALLVALUE
0xc9: V61 = ISZERO V60
0xca: V62 = 0xd2
0xcd: JUMPI 0xd2 V61
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V13, V60]

================================

Block 0xce
[0xce:0xd1]
---
Predecessors: [0xc6]
Successors: []
---
0xce PUSH1 0x0
0xd0 DUP1
0xd1 REVERT
---
0xce: V63 = 0x0
0xd1: REVERT 0x0 0x0
---
Entry stack: [V13, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V60]

================================

Block 0xd2
[0xd2:0xdd]
---
Predecessors: [0xc6]
Successors: [0x287]
---
0xd2 JUMPDEST
0xd3 POP
0xd4 PUSH2 0xde
0xd7 PUSH1 0x4
0xd9 CALLDATALOAD
0xda PUSH2 0x287
0xdd JUMP
---
0xd2: JUMPDEST 
0xd4: V64 = 0xde
0xd7: V65 = 0x4
0xd9: V66 = CALLDATALOAD 0x4
0xda: V67 = 0x287
0xdd: JUMP 0x287
---
Entry stack: [V13, V60]
Stack pops: 1
Stack additions: [0xde, V66]
Exit stack: [V13, 0xde, V66]

================================

Block 0xde
[0xde:0xf9]
---
Predecessors: [0x295, 0x32f, 0xabf]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 DUP1
0xe2 MLOAD
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb SWAP1
0xec SWAP3
0xed AND
0xee DUP3
0xef MSTORE
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 SWAP1
0xf4 SUB
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 RETURN
---
0xde: JUMPDEST 
0xdf: V68 = 0x40
0xe2: V69 = M[0x40]
0xe3: V70 = 0x1
0xe5: V71 = 0xa0
0xe7: V72 = 0x2
0xe9: V73 = EXP 0x2 0xa0
0xea: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed: V75 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xef: M[V69] = V75
0xf0: V76 = M[0x40]
0xf4: V77 = SUB V69 V76
0xf5: V78 = 0x20
0xf7: V79 = ADD 0x20 V77
0xf9: RETURN V76 V79
---
Entry stack: [V13, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xde]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x27]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V80 = CALLVALUE
0xfd: V81 = ISZERO V80
0xfe: V82 = 0x106
0x101: JUMPI 0x106 V81
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V13, V80]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V83 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V13, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V80]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xfa]
Successors: [0x2af]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0x10f
0x10b PUSH2 0x2af
0x10e JUMP
---
0x106: JUMPDEST 
0x108: V84 = 0x10f
0x10b: V85 = 0x2af
0x10e: JUMP 0x2af
---
Entry stack: [V13, V80]
Stack pops: 1
Stack additions: [0x10f]
Exit stack: [V13, 0x10f]

================================

Block 0x10f
[0x10f:0x110]
---
Predecessors: [0x3f5, 0x7cd, 0x8e3]
Successors: []
---
0x10f JUMPDEST
0x110 STOP
---
0x10f: JUMPDEST 
0x110: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x32]
Successors: [0x119, 0x11d]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x111: JUMPDEST 
0x112: V86 = CALLVALUE
0x114: V87 = ISZERO V86
0x115: V88 = 0x11d
0x118: JUMPI 0x11d V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V13, V86]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x111]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V89 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V13, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V86]

================================

Block 0x11d
[0x11d:0x125]
---
Predecessors: [0x111]
Successors: [0x32f]
---
0x11d JUMPDEST
0x11e POP
0x11f PUSH2 0xde
0x122 PUSH2 0x32f
0x125 JUMP
---
0x11d: JUMPDEST 
0x11f: V90 = 0xde
0x122: V91 = 0x32f
0x125: JUMP 0x32f
---
Entry stack: [V13, V86]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0x126
[0x126:0x12d]
---
Predecessors: [0x3d]
Successors: [0x12e, 0x132]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 DUP1
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x126: JUMPDEST 
0x127: V92 = CALLVALUE
0x129: V93 = ISZERO V92
0x12a: V94 = 0x132
0x12d: JUMPI 0x132 V93
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V92]
Exit stack: [V13, V92]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x126]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V95 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V13, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V92]

================================

Block 0x132
[0x132:0x13d]
---
Predecessors: [0x126]
Successors: [0x33e]
---
0x132 JUMPDEST
0x133 POP
0x134 PUSH2 0x13e
0x137 PUSH1 0x4
0x139 CALLDATALOAD
0x13a PUSH2 0x33e
0x13d JUMP
---
0x132: JUMPDEST 
0x134: V96 = 0x13e
0x137: V97 = 0x4
0x139: V98 = CALLDATALOAD 0x4
0x13a: V99 = 0x33e
0x13d: JUMP 0x33e
---
Entry stack: [V13, V92]
Stack pops: 1
Stack additions: [0x13e, V98]
Exit stack: [V13, 0x13e, V98]

================================

Block 0x13e
[0x13e:0x14f]
---
Predecessors: [0x351, 0x82f, 0x8eb, 0xab3, 0xab9]
Successors: []
---
0x13e JUMPDEST
0x13f PUSH1 0x40
0x141 DUP1
0x142 MLOAD
0x143 SWAP2
0x144 DUP3
0x145 MSTORE
0x146 MLOAD
0x147 SWAP1
0x148 DUP2
0x149 SWAP1
0x14a SUB
0x14b PUSH1 0x20
0x14d ADD
0x14e SWAP1
0x14f RETURN
---
0x13e: JUMPDEST 
0x13f: V100 = 0x40
0x142: V101 = M[0x40]
0x145: M[V101] = S0
0x146: V102 = M[0x40]
0x14a: V103 = SUB V101 V102
0x14b: V104 = 0x20
0x14d: V105 = ADD 0x20 V103
0x14f: RETURN V102 V105
---
Entry stack: [V13, 0x10f, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x10f, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1]

================================

Block 0x150
[0x150:0x157]
---
Predecessors: [0x48]
Successors: [0x158, 0x15c]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 DUP1
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x150: JUMPDEST 
0x151: V106 = CALLVALUE
0x153: V107 = ISZERO V106
0x154: V108 = 0x15c
0x157: JUMPI 0x15c V107
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V13, V106]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x150]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V109 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V13, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V106]

================================

Block 0x15c
[0x15c:0x167]
---
Predecessors: [0x150]
Successors: [0x358]
---
0x15c JUMPDEST
0x15d POP
0x15e PUSH2 0x168
0x161 PUSH1 0x4
0x163 CALLDATALOAD
0x164 PUSH2 0x358
0x167 JUMP
---
0x15c: JUMPDEST 
0x15e: V110 = 0x168
0x161: V111 = 0x4
0x163: V112 = CALLDATALOAD 0x4
0x164: V113 = 0x358
0x167: JUMP 0x358
---
Entry stack: [V13, V106]
Stack pops: 1
Stack additions: [0x168, V112]
Exit stack: [V13, 0x168, V112]

================================

Block 0x168
[0x168:0x191]
---
Predecessors: [0x366]
Successors: []
---
0x168 JUMPDEST
0x169 PUSH1 0x40
0x16b DUP1
0x16c MLOAD
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 SWAP1
0x176 SWAP5
0x177 AND
0x178 DUP5
0x179 MSTORE
0x17a PUSH1 0x20
0x17c DUP5
0x17d ADD
0x17e SWAP3
0x17f SWAP1
0x180 SWAP3
0x181 MSTORE
0x182 ISZERO
0x183 ISZERO
0x184 DUP3
0x185 DUP3
0x186 ADD
0x187 MSTORE
0x188 MLOAD
0x189 SWAP1
0x18a DUP2
0x18b SWAP1
0x18c SUB
0x18d PUSH1 0x60
0x18f ADD
0x190 SWAP1
0x191 RETURN
---
0x168: JUMPDEST 
0x169: V114 = 0x40
0x16c: V115 = M[0x40]
0x16d: V116 = 0x1
0x16f: V117 = 0xa0
0x171: V118 = 0x2
0x173: V119 = EXP 0x2 0xa0
0x174: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x177: V121 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x179: M[V115] = V121
0x17a: V122 = 0x20
0x17d: V123 = ADD V115 0x20
0x181: M[V123] = V309
0x182: V124 = ISZERO V320
0x183: V125 = ISZERO V124
0x186: V126 = ADD 0x40 V115
0x187: M[V126] = V125
0x188: V127 = M[0x40]
0x18c: V128 = SUB V115 V127
0x18d: V129 = 0x60
0x18f: V130 = ADD 0x60 V128
0x191: RETURN V127 V130
---
Entry stack: [V13, 0x168, V318, V309, V320]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x168]

================================

Block 0x192
[0x192:0x199]
---
Predecessors: [0x53]
Successors: [0x19a, 0x19e]
---
0x192 JUMPDEST
0x193 CALLVALUE
0x194 DUP1
0x195 ISZERO
0x196 PUSH2 0x19e
0x199 JUMPI
---
0x192: JUMPDEST 
0x193: V131 = CALLVALUE
0x195: V132 = ISZERO V131
0x196: V133 = 0x19e
0x199: JUMPI 0x19e V132
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V13, V131]

================================

Block 0x19a
[0x19a:0x19d]
---
Predecessors: [0x192]
Successors: []
---
0x19a PUSH1 0x0
0x19c DUP1
0x19d REVERT
---
0x19a: V134 = 0x0
0x19d: REVERT 0x0 0x0
---
Entry stack: [V13, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V131]

================================

Block 0x19e
[0x19e:0x1b2]
---
Predecessors: [0x192]
Successors: [0x396]
---
0x19e JUMPDEST
0x19f POP
0x1a0 PUSH2 0x10f
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab PUSH1 0x4
0x1ad CALLDATALOAD
0x1ae AND
0x1af PUSH2 0x396
0x1b2 JUMP
---
0x19e: JUMPDEST 
0x1a0: V135 = 0x10f
0x1a3: V136 = 0x1
0x1a5: V137 = 0xa0
0x1a7: V138 = 0x2
0x1a9: V139 = EXP 0x2 0xa0
0x1aa: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ab: V141 = 0x4
0x1ad: V142 = CALLDATALOAD 0x4
0x1ae: V143 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V144 = 0x396
0x1b2: JUMP 0x396
---
Entry stack: [V13, V131]
Stack pops: 1
Stack additions: [0x10f, V143]
Exit stack: [V13, 0x10f, V143]

================================

Block 0x1b3
[0x1b3:0x1ba]
---
Predecessors: [0x5e]
Successors: [0x1bb, 0x1bf]
---
0x1b3 JUMPDEST
0x1b4 CALLVALUE
0x1b5 DUP1
0x1b6 ISZERO
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V145 = CALLVALUE
0x1b6: V146 = ISZERO V145
0x1b7: V147 = 0x1bf
0x1ba: JUMPI 0x1bf V146
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V145]
Exit stack: [V13, V145]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x1b3]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V148 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V13, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V145]

================================

Block 0x1bf
[0x1bf:0x1c7]
---
Predecessors: [0x1b3]
Successors: [0x426]
---
0x1bf JUMPDEST
0x1c0 POP
0x1c1 PUSH2 0x1c8
0x1c4 PUSH2 0x426
0x1c7 JUMP
---
0x1bf: JUMPDEST 
0x1c1: V149 = 0x1c8
0x1c4: V150 = 0x426
0x1c7: JUMP 0x426
---
Entry stack: [V13, V145]
Stack pops: 1
Stack additions: [0x1c8]
Exit stack: [V13, 0x1c8]

================================

Block 0x1c8
[0x1c8:0x1db]
---
Predecessors: [0x5e4, 0xaaa]
Successors: []
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x40
0x1cb DUP1
0x1cc MLOAD
0x1cd SWAP2
0x1ce ISZERO
0x1cf ISZERO
0x1d0 DUP3
0x1d1 MSTORE
0x1d2 MLOAD
0x1d3 SWAP1
0x1d4 DUP2
0x1d5 SWAP1
0x1d6 SUB
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da SWAP1
0x1db RETURN
---
0x1c8: JUMPDEST 
0x1c9: V151 = 0x40
0x1cc: V152 = M[0x40]
0x1ce: V153 = ISZERO S0
0x1cf: V154 = ISZERO V153
0x1d1: M[V152] = V154
0x1d2: V155 = M[0x40]
0x1d6: V156 = SUB V152 V155
0x1d7: V157 = 0x20
0x1d9: V158 = ADD 0x20 V156
0x1db: RETURN V155 V158
---
Entry stack: [V13, S4, {0x0, 0x10f}, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S4, {0x0, 0x10f}, {0x0, 0x1}, S1]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x69]
Successors: [0x1e4, 0x1e8]
---
0x1dc JUMPDEST
0x1dd CALLVALUE
0x1de DUP1
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V159 = CALLVALUE
0x1df: V160 = ISZERO V159
0x1e0: V161 = 0x1e8
0x1e3: JUMPI 0x1e8 V160
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V13, V159]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V162 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V13, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V159]

================================

Block 0x1e8
[0x1e8:0x1f0]
---
Predecessors: [0x1dc]
Successors: [0x5eb]
---
0x1e8 JUMPDEST
0x1e9 POP
0x1ea PUSH2 0x10f
0x1ed PUSH2 0x5eb
0x1f0 JUMP
---
0x1e8: JUMPDEST 
0x1ea: V163 = 0x10f
0x1ed: V164 = 0x5eb
0x1f0: JUMP 0x5eb
---
Entry stack: [V13, V159]
Stack pops: 1
Stack additions: [0x10f]
Exit stack: [V13, 0x10f]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x74]
Successors: [0x1f9, 0x1fd]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 DUP1
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V165 = CALLVALUE
0x1f4: V166 = ISZERO V165
0x1f5: V167 = 0x1fd
0x1f8: JUMPI 0x1fd V166
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V165]
Exit stack: [V13, V165]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V168 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V13, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V165]

================================

Block 0x1fd
[0x1fd:0x205]
---
Predecessors: [0x1f1]
Successors: [0x7d2]
---
0x1fd JUMPDEST
0x1fe POP
0x1ff PUSH2 0x13e
0x202 PUSH2 0x7d2
0x205 JUMP
---
0x1fd: JUMPDEST 
0x1ff: V169 = 0x13e
0x202: V170 = 0x7d2
0x205: JUMP 0x7d2
---
Entry stack: [V13, V165]
Stack pops: 1
Stack additions: [0x13e]
Exit stack: [V13, 0x13e]

================================

Block 0x206
[0x206:0x20d]
---
Predecessors: [0x7f]
Successors: [0x20e, 0x212]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x206: JUMPDEST 
0x207: V171 = CALLVALUE
0x209: V172 = ISZERO V171
0x20a: V173 = 0x212
0x20d: JUMPI 0x212 V172
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V171]
Exit stack: [V13, V171]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x206]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V174 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V13, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V171]

================================

Block 0x212
[0x212:0x21d]
---
Predecessors: [0x206]
Successors: [0x835]
---
0x212 JUMPDEST
0x213 POP
0x214 PUSH2 0x10f
0x217 PUSH1 0x4
0x219 CALLDATALOAD
0x21a PUSH2 0x835
0x21d JUMP
---
0x212: JUMPDEST 
0x214: V175 = 0x10f
0x217: V176 = 0x4
0x219: V177 = CALLDATALOAD 0x4
0x21a: V178 = 0x835
0x21d: JUMP 0x835
---
Entry stack: [V13, V171]
Stack pops: 1
Stack additions: [0x10f, V177]
Exit stack: [V13, 0x10f, V177]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x8a]
Successors: [0x226, 0x22a]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 DUP1
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x21e: JUMPDEST 
0x21f: V179 = CALLVALUE
0x221: V180 = ISZERO V179
0x222: V181 = 0x22a
0x225: JUMPI 0x22a V180
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V13, V179]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x21e]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V182 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V13, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V179]

================================

Block 0x22a
[0x22a:0x232]
---
Predecessors: [0x21e]
Successors: [0x8eb]
---
0x22a JUMPDEST
0x22b POP
0x22c PUSH2 0x13e
0x22f PUSH2 0x8eb
0x232 JUMP
---
0x22a: JUMPDEST 
0x22c: V183 = 0x13e
0x22f: V184 = 0x8eb
0x232: JUMP 0x8eb
---
Entry stack: [V13, V179]
Stack pops: 1
Stack additions: [0x13e]
Exit stack: [V13, 0x13e]

================================

Block 0x233
[0x233:0x23a]
---
Predecessors: [0x95]
Successors: [0x23b, 0x23f]
---
0x233 JUMPDEST
0x234 CALLVALUE
0x235 DUP1
0x236 ISZERO
0x237 PUSH2 0x23f
0x23a JUMPI
---
0x233: JUMPDEST 
0x234: V185 = CALLVALUE
0x236: V186 = ISZERO V185
0x237: V187 = 0x23f
0x23a: JUMPI 0x23f V186
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V185]
Exit stack: [V13, V185]

================================

Block 0x23b
[0x23b:0x23e]
---
Predecessors: [0x233]
Successors: []
---
0x23b PUSH1 0x0
0x23d DUP1
0x23e REVERT
---
0x23b: V188 = 0x0
0x23e: REVERT 0x0 0x0
---
Entry stack: [V13, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V185]

================================

Block 0x23f
[0x23f:0x247]
---
Predecessors: [0x233]
Successors: [0x8f1]
---
0x23f JUMPDEST
0x240 POP
0x241 PUSH2 0x1c8
0x244 PUSH2 0x8f1
0x247 JUMP
---
0x23f: JUMPDEST 
0x241: V189 = 0x1c8
0x244: V190 = 0x8f1
0x247: JUMP 0x8f1
---
Entry stack: [V13, V185]
Stack pops: 1
Stack additions: [0x1c8]
Exit stack: [V13, 0x1c8]

================================

Block 0x248
[0x248:0x24f]
---
Predecessors: [0xa0]
Successors: [0x250, 0x254]
---
0x248 JUMPDEST
0x249 CALLVALUE
0x24a DUP1
0x24b ISZERO
0x24c PUSH2 0x254
0x24f JUMPI
---
0x248: JUMPDEST 
0x249: V191 = CALLVALUE
0x24b: V192 = ISZERO V191
0x24c: V193 = 0x254
0x24f: JUMPI 0x254 V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V13, V191]

================================

Block 0x250
[0x250:0x253]
---
Predecessors: [0x248]
Successors: []
---
0x250 PUSH1 0x0
0x252 DUP1
0x253 REVERT
---
0x250: V194 = 0x0
0x253: REVERT 0x0 0x0
---
Entry stack: [V13, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V191]

================================

Block 0x254
[0x254:0x25c]
---
Predecessors: [0x248]
Successors: [0xab3]
---
0x254 JUMPDEST
0x255 POP
0x256 PUSH2 0x13e
0x259 PUSH2 0xab3
0x25c JUMP
---
0x254: JUMPDEST 
0x256: V195 = 0x13e
0x259: V196 = 0xab3
0x25c: JUMP 0xab3
---
Entry stack: [V13, V191]
Stack pops: 1
Stack additions: [0x13e]
Exit stack: [V13, 0x13e]

================================

Block 0x25d
[0x25d:0x264]
---
Predecessors: [0xab]
Successors: [0x265, 0x269]
---
0x25d JUMPDEST
0x25e CALLVALUE
0x25f DUP1
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25d: JUMPDEST 
0x25e: V197 = CALLVALUE
0x260: V198 = ISZERO V197
0x261: V199 = 0x269
0x264: JUMPI 0x269 V198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V197]
Exit stack: [V13, V197]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25d]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V200 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V13, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V197]

================================

Block 0x269
[0x269:0x271]
---
Predecessors: [0x25d]
Successors: [0xab9]
---
0x269 JUMPDEST
0x26a POP
0x26b PUSH2 0x13e
0x26e PUSH2 0xab9
0x271 JUMP
---
0x269: JUMPDEST 
0x26b: V201 = 0x13e
0x26e: V202 = 0xab9
0x271: JUMP 0xab9
---
Entry stack: [V13, V197]
Stack pops: 1
Stack additions: [0x13e]
Exit stack: [V13, 0x13e]

================================

Block 0x272
[0x272:0x279]
---
Predecessors: [0xb6]
Successors: [0x27a, 0x27e]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 DUP1
0x275 ISZERO
0x276 PUSH2 0x27e
0x279 JUMPI
---
0x272: JUMPDEST 
0x273: V203 = CALLVALUE
0x275: V204 = ISZERO V203
0x276: V205 = 0x27e
0x279: JUMPI 0x27e V204
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V203]
Exit stack: [V13, V203]

================================

Block 0x27a
[0x27a:0x27d]
---
Predecessors: [0x272]
Successors: []
---
0x27a PUSH1 0x0
0x27c DUP1
0x27d REVERT
---
0x27a: V206 = 0x0
0x27d: REVERT 0x0 0x0
---
Entry stack: [V13, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V203]

================================

Block 0x27e
[0x27e:0x286]
---
Predecessors: [0x272]
Successors: [0xabf]
---
0x27e JUMPDEST
0x27f POP
0x280 PUSH2 0xde
0x283 PUSH2 0xabf
0x286 JUMP
---
0x27e: JUMPDEST 
0x280: V207 = 0xde
0x283: V208 = 0xabf
0x286: JUMP 0xabf
---
Entry stack: [V13, V203]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0x287
[0x287:0x293]
---
Predecessors: [0xd2]
Successors: [0x294, 0x295]
---
0x287 JUMPDEST
0x288 PUSH1 0x4
0x28a DUP1
0x28b SLOAD
0x28c DUP3
0x28d SWAP1
0x28e DUP2
0x28f LT
0x290 PUSH2 0x295
0x293 JUMPI
---
0x287: JUMPDEST 
0x288: V209 = 0x4
0x28b: V210 = S[0x4]
0x28f: V211 = LT V66 V210
0x290: V212 = 0x295
0x293: JUMPI 0x295 V211
---
Entry stack: [V13, 0xde, V66]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V13, 0xde, V66, 0x4, V66]

================================

Block 0x294
[0x294:0x294]
---
Predecessors: [0x287]
Successors: []
---
0x294 INVALID
---
0x294: INVALID 
---
Entry stack: [V13, 0xde, V66, 0x4, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xde, V66, 0x4, V66]

================================

Block 0x295
[0x295:0x2ae]
---
Predecessors: [0x287]
Successors: [0xde]
---
0x295 JUMPDEST
0x296 PUSH1 0x0
0x298 SWAP2
0x299 DUP3
0x29a MSTORE
0x29b PUSH1 0x20
0x29d SWAP1
0x29e SWAP2
0x29f SHA3
0x2a0 ADD
0x2a1 SLOAD
0x2a2 PUSH1 0x1
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 SUB
0x2aa AND
0x2ab SWAP1
0x2ac POP
0x2ad DUP2
0x2ae JUMP
---
0x295: JUMPDEST 
0x296: V213 = 0x0
0x29a: M[0x0] = 0x4
0x29b: V214 = 0x20
0x29f: V215 = SHA3 0x0 0x20
0x2a0: V216 = ADD V215 V66
0x2a1: V217 = S[V216]
0x2a2: V218 = 0x1
0x2a4: V219 = 0xa0
0x2a6: V220 = 0x2
0x2a8: V221 = EXP 0x2 0xa0
0x2a9: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x2ae: JUMP 0xde
---
Entry stack: [V13, 0xde, V66, 0x4, V66]
Stack pops: 4
Stack additions: [S3, V223]
Exit stack: [V13, 0xde, V223]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x106]
Successors: [0x2b3]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x0
0x2b2 DUP1
---
0x2af: JUMPDEST 
0x2b0: V224 = 0x0
---
Entry stack: [V13, 0x10f]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x10f, 0x0, 0x0]

================================

Block 0x2b3
[0x2b3:0x2c0]
---
Predecessors: [0x2af, 0x2f6]
Successors: [0x2c1, 0x2fe]
---
0x2b3 JUMPDEST
0x2b4 PUSH1 0x4
0x2b6 SLOAD
0x2b7 PUSH1 0xff
0x2b9 DUP3
0x2ba AND
0x2bb LT
0x2bc ISZERO
0x2bd PUSH2 0x2fe
0x2c0 JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V225 = 0x4
0x2b6: V226 = S[0x4]
0x2b7: V227 = 0xff
0x2ba: V228 = AND S0 0xff
0x2bb: V229 = LT V228 V226
0x2bc: V230 = ISZERO V229
0x2bd: V231 = 0x2fe
0x2c0: JUMPI 0x2fe V230
---
Entry stack: [V13, 0x10f, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10f, S1, S0]

================================

Block 0x2c1
[0x2c1:0x2d2]
---
Predecessors: [0x2b3]
Successors: [0x2d3, 0x2d4]
---
0x2c1 PUSH1 0x4
0x2c3 DUP1
0x2c4 SLOAD
0x2c5 CALLER
0x2c6 SWAP2
0x2c7 SWAP1
0x2c8 PUSH1 0xff
0x2ca DUP5
0x2cb AND
0x2cc SWAP1
0x2cd DUP2
0x2ce LT
0x2cf PUSH2 0x2d4
0x2d2 JUMPI
---
0x2c1: V232 = 0x4
0x2c4: V233 = S[0x4]
0x2c5: V234 = CALLER
0x2c8: V235 = 0xff
0x2cb: V236 = AND S0 0xff
0x2ce: V237 = LT V236 V233
0x2cf: V238 = 0x2d4
0x2d2: JUMPI 0x2d4 V237
---
Entry stack: [V13, 0x10f, S1, S0]
Stack pops: 1
Stack additions: [S0, V234, 0x4, V236]
Exit stack: [V13, 0x10f, S1, S0, V234, 0x4, V236]

================================

Block 0x2d3
[0x2d3:0x2d3]
---
Predecessors: [0x2c1]
Successors: []
---
0x2d3 INVALID
---
0x2d3: INVALID 
---
Entry stack: [V13, 0x10f, S4, S3, V234, 0x4, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S4, S3, V234, 0x4, V236]

================================

Block 0x2d4
[0x2d4:0x2ef]
---
Predecessors: [0x2c1]
Successors: [0x2f0, 0x2f6]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x0
0x2d7 SWAP2
0x2d8 DUP3
0x2d9 MSTORE
0x2da PUSH1 0x20
0x2dc SWAP1
0x2dd SWAP2
0x2de SHA3
0x2df ADD
0x2e0 SLOAD
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 AND
0x2ea EQ
0x2eb ISZERO
0x2ec PUSH2 0x2f6
0x2ef JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V239 = 0x0
0x2d9: M[0x0] = 0x4
0x2da: V240 = 0x20
0x2de: V241 = SHA3 0x0 0x20
0x2df: V242 = ADD V241 V236
0x2e0: V243 = S[V242]
0x2e1: V244 = 0x1
0x2e3: V245 = 0xa0
0x2e5: V246 = 0x2
0x2e7: V247 = EXP 0x2 0xa0
0x2e8: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e9: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x2ea: V250 = EQ V249 V234
0x2eb: V251 = ISZERO V250
0x2ec: V252 = 0x2f6
0x2ef: JUMPI 0x2f6 V251
---
Entry stack: [V13, 0x10f, S4, S3, V234, 0x4, V236]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x10f, S4, S3]

================================

Block 0x2f0
[0x2f0:0x2f5]
---
Predecessors: [0x2d4]
Successors: [0x2f6]
---
0x2f0 DUP2
0x2f1 PUSH1 0x1
0x2f3 OR
0x2f4 SWAP2
0x2f5 POP
---
0x2f1: V253 = 0x1
0x2f3: V254 = OR 0x1 S1
---
Entry stack: [V13, 0x10f, S1, S0]
Stack pops: 2
Stack additions: [V254, S0]
Exit stack: [V13, 0x10f, V254, S0]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0x2d4, 0x2f0]
Successors: [0x2b3]
---
0x2f6 JUMPDEST
0x2f7 PUSH1 0x1
0x2f9 ADD
0x2fa PUSH2 0x2b3
0x2fd JUMP
---
0x2f6: JUMPDEST 
0x2f7: V255 = 0x1
0x2f9: V256 = ADD 0x1 S0
0x2fa: V257 = 0x2b3
0x2fd: JUMP 0x2b3
---
Entry stack: [V13, 0x10f, S1, S0]
Stack pops: 1
Stack additions: [V256]
Exit stack: [V13, 0x10f, S1, V256]

================================

Block 0x2fe
[0x2fe:0x309]
---
Predecessors: [0x2b3]
Successors: [0x30a, 0x30e]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x1
0x301 PUSH1 0xff
0x303 DUP4
0x304 AND
0x305 EQ
0x306 PUSH2 0x30e
0x309 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V258 = 0x1
0x301: V259 = 0xff
0x304: V260 = AND S1 0xff
0x305: V261 = EQ V260 0x1
0x306: V262 = 0x30e
0x309: JUMPI 0x30e V261
---
Entry stack: [V13, 0x10f, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x10f, S1, S0]

================================

Block 0x30a
[0x30a:0x30d]
---
Predecessors: [0x2fe]
Successors: []
---
0x30a PUSH1 0x0
0x30c DUP1
0x30d REVERT
---
0x30a: V263 = 0x0
0x30d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S1, S0]

================================

Block 0x30e
[0x30e:0x315]
---
Predecessors: [0x2fe]
Successors: [0x8f1]
---
0x30e JUMPDEST
0x30f PUSH2 0x316
0x312 PUSH2 0x8f1
0x315 JUMP
---
0x30e: JUMPDEST 
0x30f: V264 = 0x316
0x312: V265 = 0x8f1
0x315: JUMP 0x8f1
---
Entry stack: [V13, 0x10f, S1, S0]
Stack pops: 0
Stack additions: [0x316]
Exit stack: [V13, 0x10f, S1, S0, 0x316]

================================

Block 0x316
[0x316:0x31c]
---
Predecessors: [0xaaa]
Successors: [0x31d, 0x321]
---
0x316 JUMPDEST
0x317 ISZERO
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x316: JUMPDEST 
0x317: V266 = ISZERO 0x1
0x318: V267 = ISZERO 0x0
0x319: V268 = 0x321
0x31c: JUMPI 0x321 0x1
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S1]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x316]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V269 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S0]

================================

Block 0x321
[0x321:0x32e]
---
Predecessors: [0x316]
Successors: []
---
0x321 JUMPDEST
0x322 PUSH1 0x1
0x324 SLOAD
0x325 PUSH1 0x1
0x327 PUSH1 0xa0
0x329 PUSH1 0x2
0x32b EXP
0x32c SUB
0x32d AND
0x32e SELFDESTRUCT
---
0x321: JUMPDEST 
0x322: V270 = 0x1
0x324: V271 = S[0x1]
0x325: V272 = 0x1
0x327: V273 = 0xa0
0x329: V274 = 0x2
0x32b: V275 = EXP 0x2 0xa0
0x32c: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x32e: SELFDESTRUCT V277
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S0]

================================

Block 0x32f
[0x32f:0x33d]
---
Predecessors: [0x11d]
Successors: [0xde]
---
0x32f JUMPDEST
0x330 PUSH1 0x1
0x332 SLOAD
0x333 PUSH1 0x1
0x335 PUSH1 0xa0
0x337 PUSH1 0x2
0x339 EXP
0x33a SUB
0x33b AND
0x33c DUP2
0x33d JUMP
---
0x32f: JUMPDEST 
0x330: V278 = 0x1
0x332: V279 = S[0x1]
0x333: V280 = 0x1
0x335: V281 = 0xa0
0x337: V282 = 0x2
0x339: V283 = EXP 0x2 0xa0
0x33a: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33b: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x33d: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V285]
Exit stack: [V13, 0xde, V285]

================================

Block 0x33e
[0x33e:0x34f]
---
Predecessors: [0x132, 0x475]
Successors: [0x350, 0x351]
---
0x33e JUMPDEST
0x33f PUSH1 0x0
0x341 PUSH1 0x6
0x343 SLOAD
0x344 PUSH1 0x2
0x346 SLOAD
0x347 DUP4
0x348 MUL
0x349 DUP2
0x34a ISZERO
0x34b ISZERO
0x34c PUSH2 0x351
0x34f JUMPI
---
0x33e: JUMPDEST 
0x33f: V286 = 0x0
0x341: V287 = 0x6
0x343: V288 = S[0x6]
0x344: V289 = 0x2
0x346: V290 = S[0x2]
0x348: V291 = MUL S0 V290
0x34a: V292 = ISZERO V288
0x34b: V293 = ISZERO V292
0x34c: V294 = 0x351
0x34f: JUMPI 0x351 V293
---
Entry stack: [V13, 0x10f, S9, S8, S7, S6, {0x0, 0x23b872dd}, S4, S3, S2, {0x13e, 0x48c, 0x702, 0x821}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V288, V291]
Exit stack: [V13, 0x10f, S9, S8, S7, S6, {0x0, 0x23b872dd}, S4, S3, S2, {0x13e, 0x48c, 0x702, 0x821}, S0, 0x0, V288, V291]

================================

Block 0x350
[0x350:0x350]
---
Predecessors: [0x33e]
Successors: []
---
0x350 INVALID
---
0x350: INVALID 
---
Entry stack: [V13, 0x10f, S12, S11, S10, S9, {0x0, 0x23b872dd}, S7, S6, S5, {0x13e, 0x48c, 0x702, 0x821}, S3, 0x0, V288, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S12, S11, S10, S9, {0x0, 0x23b872dd}, S7, S6, S5, {0x13e, 0x48c, 0x702, 0x821}, S3, 0x0, V288, V291]

================================

Block 0x351
[0x351:0x357]
---
Predecessors: [0x33e]
Successors: [0x13e, 0x48c, 0x702, 0x821]
---
0x351 JUMPDEST
0x352 DIV
0x353 SWAP3
0x354 SWAP2
0x355 POP
0x356 POP
0x357 JUMP
---
0x351: JUMPDEST 
0x352: V295 = DIV V291 V288
0x357: JUMP {0x13e, 0x48c, 0x702, 0x821}
---
Entry stack: [V13, 0x10f, S12, S11, S10, S9, {0x0, 0x23b872dd}, S7, S6, S5, {0x13e, 0x48c, 0x702, 0x821}, S3, 0x0, V288, V291]
Stack pops: 5
Stack additions: [V295]
Exit stack: [V13, 0x10f, S12, S11, S10, S9, {0x0, 0x23b872dd}, S7, S6, S5, V295]

================================

Block 0x358
[0x358:0x364]
---
Predecessors: [0x15c]
Successors: [0x365, 0x366]
---
0x358 JUMPDEST
0x359 PUSH1 0x3
0x35b DUP1
0x35c SLOAD
0x35d DUP3
0x35e SWAP1
0x35f DUP2
0x360 LT
0x361 PUSH2 0x366
0x364 JUMPI
---
0x358: JUMPDEST 
0x359: V296 = 0x3
0x35c: V297 = S[0x3]
0x360: V298 = LT V112 V297
0x361: V299 = 0x366
0x364: JUMPI 0x366 V298
---
Entry stack: [V13, 0x168, V112]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V13, 0x168, V112, 0x3, V112]

================================

Block 0x365
[0x365:0x365]
---
Predecessors: [0x358]
Successors: []
---
0x365 INVALID
---
0x365: INVALID 
---
Entry stack: [V13, 0x168, V112, 0x3, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x168, V112, 0x3, V112]

================================

Block 0x366
[0x366:0x395]
---
Predecessors: [0x358]
Successors: [0x168]
---
0x366 JUMPDEST
0x367 PUSH1 0x0
0x369 SWAP2
0x36a DUP3
0x36b MSTORE
0x36c PUSH1 0x20
0x36e SWAP1
0x36f SWAP2
0x370 SHA3
0x371 PUSH1 0x3
0x373 SWAP1
0x374 SWAP2
0x375 MUL
0x376 ADD
0x377 DUP1
0x378 SLOAD
0x379 PUSH1 0x1
0x37b DUP3
0x37c ADD
0x37d SLOAD
0x37e PUSH1 0x2
0x380 SWAP1
0x381 SWAP3
0x382 ADD
0x383 SLOAD
0x384 PUSH1 0x1
0x386 PUSH1 0xa0
0x388 PUSH1 0x2
0x38a EXP
0x38b SUB
0x38c SWAP1
0x38d SWAP2
0x38e AND
0x38f SWAP3
0x390 POP
0x391 PUSH1 0xff
0x393 AND
0x394 DUP4
0x395 JUMP
---
0x366: JUMPDEST 
0x367: V300 = 0x0
0x36b: M[0x0] = 0x3
0x36c: V301 = 0x20
0x370: V302 = SHA3 0x0 0x20
0x371: V303 = 0x3
0x375: V304 = MUL V112 0x3
0x376: V305 = ADD V304 V302
0x378: V306 = S[V305]
0x379: V307 = 0x1
0x37c: V308 = ADD V305 0x1
0x37d: V309 = S[V308]
0x37e: V310 = 0x2
0x382: V311 = ADD V305 0x2
0x383: V312 = S[V311]
0x384: V313 = 0x1
0x386: V314 = 0xa0
0x388: V315 = 0x2
0x38a: V316 = EXP 0x2 0xa0
0x38b: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38e: V318 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x391: V319 = 0xff
0x393: V320 = AND 0xff V312
0x395: JUMP 0x168
---
Entry stack: [V13, 0x168, V112, 0x3, V112]
Stack pops: 4
Stack additions: [S3, V318, V309, V320]
Exit stack: [V13, 0x168, V318, V309, V320]

================================

Block 0x396
[0x396:0x399]
---
Predecessors: [0x19e]
Successors: [0x39a]
---
0x396 JUMPDEST
0x397 PUSH1 0x0
0x399 DUP1
---
0x396: JUMPDEST 
0x397: V321 = 0x0
---
Entry stack: [V13, 0x10f, V143]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x10f, V143, 0x0, 0x0]

================================

Block 0x39a
[0x39a:0x3a7]
---
Predecessors: [0x396, 0x3dd]
Successors: [0x3a8, 0x3e5]
---
0x39a JUMPDEST
0x39b PUSH1 0x4
0x39d SLOAD
0x39e PUSH1 0xff
0x3a0 DUP3
0x3a1 AND
0x3a2 LT
0x3a3 ISZERO
0x3a4 PUSH2 0x3e5
0x3a7 JUMPI
---
0x39a: JUMPDEST 
0x39b: V322 = 0x4
0x39d: V323 = S[0x4]
0x39e: V324 = 0xff
0x3a1: V325 = AND S0 0xff
0x3a2: V326 = LT V325 V323
0x3a3: V327 = ISZERO V326
0x3a4: V328 = 0x3e5
0x3a7: JUMPI 0x3e5 V327
---
Entry stack: [V13, 0x10f, V143, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10f, V143, S1, S0]

================================

Block 0x3a8
[0x3a8:0x3b9]
---
Predecessors: [0x39a]
Successors: [0x3ba, 0x3bb]
---
0x3a8 PUSH1 0x4
0x3aa DUP1
0x3ab SLOAD
0x3ac CALLER
0x3ad SWAP2
0x3ae SWAP1
0x3af PUSH1 0xff
0x3b1 DUP5
0x3b2 AND
0x3b3 SWAP1
0x3b4 DUP2
0x3b5 LT
0x3b6 PUSH2 0x3bb
0x3b9 JUMPI
---
0x3a8: V329 = 0x4
0x3ab: V330 = S[0x4]
0x3ac: V331 = CALLER
0x3af: V332 = 0xff
0x3b2: V333 = AND S0 0xff
0x3b5: V334 = LT V333 V330
0x3b6: V335 = 0x3bb
0x3b9: JUMPI 0x3bb V334
---
Entry stack: [V13, 0x10f, V143, S1, S0]
Stack pops: 1
Stack additions: [S0, V331, 0x4, V333]
Exit stack: [V13, 0x10f, V143, S1, S0, V331, 0x4, V333]

================================

Block 0x3ba
[0x3ba:0x3ba]
---
Predecessors: [0x3a8]
Successors: []
---
0x3ba INVALID
---
0x3ba: INVALID 
---
Entry stack: [V13, 0x10f, V143, S4, S3, V331, 0x4, V333]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, V143, S4, S3, V331, 0x4, V333]

================================

Block 0x3bb
[0x3bb:0x3d6]
---
Predecessors: [0x3a8]
Successors: [0x3d7, 0x3dd]
---
0x3bb JUMPDEST
0x3bc PUSH1 0x0
0x3be SWAP2
0x3bf DUP3
0x3c0 MSTORE
0x3c1 PUSH1 0x20
0x3c3 SWAP1
0x3c4 SWAP2
0x3c5 SHA3
0x3c6 ADD
0x3c7 SLOAD
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf SUB
0x3d0 AND
0x3d1 EQ
0x3d2 ISZERO
0x3d3 PUSH2 0x3dd
0x3d6 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V336 = 0x0
0x3c0: M[0x0] = 0x4
0x3c1: V337 = 0x20
0x3c5: V338 = SHA3 0x0 0x20
0x3c6: V339 = ADD V338 V333
0x3c7: V340 = S[V339]
0x3c8: V341 = 0x1
0x3ca: V342 = 0xa0
0x3cc: V343 = 0x2
0x3ce: V344 = EXP 0x2 0xa0
0x3cf: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x3d1: V347 = EQ V346 V331
0x3d2: V348 = ISZERO V347
0x3d3: V349 = 0x3dd
0x3d6: JUMPI 0x3dd V348
---
Entry stack: [V13, 0x10f, V143, S4, S3, V331, 0x4, V333]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x10f, V143, S4, S3]

================================

Block 0x3d7
[0x3d7:0x3dc]
---
Predecessors: [0x3bb]
Successors: [0x3dd]
---
0x3d7 DUP2
0x3d8 PUSH1 0x1
0x3da OR
0x3db SWAP2
0x3dc POP
---
0x3d8: V350 = 0x1
0x3da: V351 = OR 0x1 S1
---
Entry stack: [V13, 0x10f, V143, S1, S0]
Stack pops: 2
Stack additions: [V351, S0]
Exit stack: [V13, 0x10f, V143, V351, S0]

================================

Block 0x3dd
[0x3dd:0x3e4]
---
Predecessors: [0x3bb, 0x3d7]
Successors: [0x39a]
---
0x3dd JUMPDEST
0x3de PUSH1 0x1
0x3e0 ADD
0x3e1 PUSH2 0x39a
0x3e4 JUMP
---
0x3dd: JUMPDEST 
0x3de: V352 = 0x1
0x3e0: V353 = ADD 0x1 S0
0x3e1: V354 = 0x39a
0x3e4: JUMP 0x39a
---
Entry stack: [V13, 0x10f, V143, S1, S0]
Stack pops: 1
Stack additions: [V353]
Exit stack: [V13, 0x10f, V143, S1, V353]

================================

Block 0x3e5
[0x3e5:0x3f0]
---
Predecessors: [0x39a]
Successors: [0x3f1, 0x3f5]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x1
0x3e8 PUSH1 0xff
0x3ea DUP4
0x3eb AND
0x3ec EQ
0x3ed PUSH2 0x3f5
0x3f0 JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V355 = 0x1
0x3e8: V356 = 0xff
0x3eb: V357 = AND S1 0xff
0x3ec: V358 = EQ V357 0x1
0x3ed: V359 = 0x3f5
0x3f0: JUMPI 0x3f5 V358
---
Entry stack: [V13, 0x10f, V143, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x10f, V143, S1, S0]

================================

Block 0x3f1
[0x3f1:0x3f4]
---
Predecessors: [0x3e5]
Successors: []
---
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 REVERT
---
0x3f1: V360 = 0x0
0x3f4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, V143, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, V143, S1, S0]

================================

Block 0x3f5
[0x3f5:0x425]
---
Predecessors: [0x3e5]
Successors: [0x10f]
---
0x3f5 JUMPDEST
0x3f6 POP
0x3f7 POP
0x3f8 PUSH1 0x0
0x3fa DUP1
0x3fb SLOAD
0x3fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x411 NOT
0x412 AND
0x413 PUSH1 0x1
0x415 PUSH1 0xa0
0x417 PUSH1 0x2
0x419 EXP
0x41a SUB
0x41b SWAP3
0x41c SWAP1
0x41d SWAP3
0x41e AND
0x41f SWAP2
0x420 SWAP1
0x421 SWAP2
0x422 OR
0x423 SWAP1
0x424 SSTORE
0x425 JUMP
---
0x3f5: JUMPDEST 
0x3f8: V361 = 0x0
0x3fb: V362 = S[0x0]
0x3fc: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x411: V364 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x412: V365 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V362
0x413: V366 = 0x1
0x415: V367 = 0xa0
0x417: V368 = 0x2
0x419: V369 = EXP 0x2 0xa0
0x41a: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41e: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x422: V372 = OR V371 V365
0x424: S[0x0] = V372
0x425: JUMP 0x10f
---
Entry stack: [V13, 0x10f, V143, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x426
[0x426:0x42a]
---
Predecessors: [0x1bf, 0x64b]
Successors: [0x42b]
---
0x426 JUMPDEST
0x427 PUSH1 0x0
0x429 DUP1
0x42a DUP1
---
0x426: JUMPDEST 
0x427: V373 = 0x0
---
Entry stack: [V13, 0x10f, 0x0, S2, S1, {0x1c8, 0x653}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x10f, 0x0, S2, S1, {0x1c8, 0x653}, 0x0, 0x0, 0x0]

================================

Block 0x42b
[0x42b:0x435]
---
Predecessors: [0x426, 0x492]
Successors: [0x436, 0x49a]
---
0x42b JUMPDEST
0x42c PUSH1 0x3
0x42e SLOAD
0x42f DUP2
0x430 LT
0x431 ISZERO
0x432 PUSH2 0x49a
0x435 JUMPI
---
0x42b: JUMPDEST 
0x42c: V374 = 0x3
0x42e: V375 = S[0x3]
0x430: V376 = LT S0 V375
0x431: V377 = ISZERO V376
0x432: V378 = 0x49a
0x435: JUMPI 0x49a V377
---
Entry stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]

================================

Block 0x436
[0x436:0x441]
---
Predecessors: [0x42b]
Successors: [0x442, 0x443]
---
0x436 PUSH1 0x3
0x438 DUP1
0x439 SLOAD
0x43a DUP3
0x43b SWAP1
0x43c DUP2
0x43d LT
0x43e PUSH2 0x443
0x441 JUMPI
---
0x436: V379 = 0x3
0x439: V380 = S[0x3]
0x43d: V381 = LT S0 V380
0x43e: V382 = 0x443
0x441: JUMPI 0x443 V381
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S4, {0x1c8, 0x653}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S4, {0x1c8, 0x653}, 0x0, S1, S0, 0x3, S0]

================================

Block 0x442
[0x442:0x442]
---
Predecessors: [0x436]
Successors: []
---
0x442 INVALID
---
0x442: INVALID 
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S6, {0x1c8, 0x653}, 0x0, S3, S2, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S6, {0x1c8, 0x653}, 0x0, S3, S2, 0x3, S0]

================================

Block 0x443
[0x443:0x460]
---
Predecessors: [0x436]
Successors: [0x461, 0x492]
---
0x443 JUMPDEST
0x444 PUSH1 0x0
0x446 SWAP2
0x447 DUP3
0x448 MSTORE
0x449 PUSH1 0x20
0x44b SWAP1
0x44c SWAP2
0x44d SHA3
0x44e PUSH1 0x2
0x450 PUSH1 0x3
0x452 SWAP1
0x453 SWAP3
0x454 MUL
0x455 ADD
0x456 ADD
0x457 SLOAD
0x458 PUSH1 0xff
0x45a AND
0x45b ISZERO
0x45c ISZERO
0x45d PUSH2 0x492
0x460 JUMPI
---
0x443: JUMPDEST 
0x444: V383 = 0x0
0x448: M[0x0] = 0x3
0x449: V384 = 0x20
0x44d: V385 = SHA3 0x0 0x20
0x44e: V386 = 0x2
0x450: V387 = 0x3
0x454: V388 = MUL S0 0x3
0x455: V389 = ADD V388 V385
0x456: V390 = ADD V389 0x2
0x457: V391 = S[V390]
0x458: V392 = 0xff
0x45a: V393 = AND 0xff V391
0x45b: V394 = ISZERO V393
0x45c: V395 = ISZERO V394
0x45d: V396 = 0x492
0x460: JUMPI 0x492 V395
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S6, {0x1c8, 0x653}, 0x0, S3, S2, 0x3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S6, {0x1c8, 0x653}, 0x0, S3, S2]

================================

Block 0x461
[0x461:0x473]
---
Predecessors: [0x443]
Successors: [0x474, 0x475]
---
0x461 PUSH1 0x5
0x463 SLOAD
0x464 PUSH2 0x48c
0x467 PUSH1 0x3
0x469 DUP4
0x46a DUP2
0x46b SLOAD
0x46c DUP2
0x46d LT
0x46e ISZERO
0x46f ISZERO
0x470 PUSH2 0x475
0x473 JUMPI
---
0x461: V397 = 0x5
0x463: V398 = S[0x5]
0x464: V399 = 0x48c
0x467: V400 = 0x3
0x46b: V401 = S[0x3]
0x46d: V402 = LT S0 V401
0x46e: V403 = ISZERO V402
0x46f: V404 = ISZERO V403
0x470: V405 = 0x475
0x473: JUMPI 0x475 V404
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S4, {0x1c8, 0x653}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V398, 0x48c, 0x3, S0]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S4, {0x1c8, 0x653}, 0x0, S1, S0, V398, 0x48c, 0x3, S0]

================================

Block 0x474
[0x474:0x474]
---
Predecessors: [0x461]
Successors: []
---
0x474 INVALID
---
0x474: INVALID 
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S8, {0x1c8, 0x653}, 0x0, S5, S4, V398, 0x48c, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S8, {0x1c8, 0x653}, 0x0, S5, S4, V398, 0x48c, 0x3, S0]

================================

Block 0x475
[0x475:0x48b]
---
Predecessors: [0x461, 0x6cf, 0x80d]
Successors: [0x33e]
---
0x475 JUMPDEST
0x476 SWAP1
0x477 PUSH1 0x0
0x479 MSTORE
0x47a PUSH1 0x20
0x47c PUSH1 0x0
0x47e SHA3
0x47f SWAP1
0x480 PUSH1 0x3
0x482 MUL
0x483 ADD
0x484 PUSH1 0x1
0x486 ADD
0x487 SLOAD
0x488 PUSH2 0x33e
0x48b JUMP
---
0x475: JUMPDEST 
0x477: V406 = 0x0
0x479: M[0x0] = 0x3
0x47a: V407 = 0x20
0x47c: V408 = 0x0
0x47e: V409 = SHA3 0x0 0x20
0x480: V410 = 0x3
0x482: V411 = MUL 0x3 S0
0x483: V412 = ADD V411 V409
0x484: V413 = 0x1
0x486: V414 = ADD 0x1 V412
0x487: V415 = S[V414]
0x488: V416 = 0x33e
0x48b: JUMP 0x33e
---
Entry stack: [V13, 0x10f, S10, S9, S8, S7, {0x0, 0x23b872dd}, S5, S4, S3, {0x48c, 0x702, 0x821}, 0x3, S0]
Stack pops: 2
Stack additions: [V415]
Exit stack: [V13, 0x10f, S10, S9, S8, S7, {0x0, 0x23b872dd}, S5, S4, S3, {0x48c, 0x702, 0x821}, V415]

================================

Block 0x48c
[0x48c:0x491]
---
Predecessors: [0x351]
Successors: [0x492]
---
0x48c JUMPDEST
0x48d MUL
0x48e DUP3
0x48f ADD
0x490 SWAP2
0x491 POP
---
0x48c: JUMPDEST 
0x48d: V417 = MUL V295 S1
0x48f: V418 = ADD S3 V417
---
Entry stack: [V13, 0x10f, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1, V295]
Stack pops: 4
Stack additions: [V418, S2]
Exit stack: [V13, 0x10f, S8, S7, S6, S5, {0x0, 0x23b872dd}, V418, S2]

================================

Block 0x492
[0x492:0x499]
---
Predecessors: [0x443, 0x48c]
Successors: [0x42b]
---
0x492 JUMPDEST
0x493 PUSH1 0x1
0x495 ADD
0x496 PUSH2 0x42b
0x499 JUMP
---
0x492: JUMPDEST 
0x493: V419 = 0x1
0x495: V420 = ADD 0x1 S0
0x496: V421 = 0x42b
0x499: JUMP 0x42b
---
Entry stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]
Stack pops: 1
Stack additions: [V420]
Exit stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, V420]

================================

Block 0x49a
[0x49a:0x505]
---
Predecessors: [0x42b]
Successors: [0x506, 0x50a]
---
0x49a JUMPDEST
0x49b PUSH1 0x0
0x49d DUP1
0x49e SLOAD
0x49f PUSH1 0x1
0x4a1 SLOAD
0x4a2 PUSH1 0x40
0x4a4 DUP1
0x4a5 MLOAD
0x4a6 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4c7 DUP2
0x4c8 MSTORE
0x4c9 PUSH1 0x1
0x4cb PUSH1 0xa0
0x4cd PUSH1 0x2
0x4cf EXP
0x4d0 SUB
0x4d1 SWAP3
0x4d2 DUP4
0x4d3 AND
0x4d4 PUSH1 0x4
0x4d6 DUP3
0x4d7 ADD
0x4d8 MSTORE
0x4d9 SWAP1
0x4da MLOAD
0x4db DUP7
0x4dc SWAP5
0x4dd SWAP3
0x4de SWAP1
0x4df SWAP4
0x4e0 AND
0x4e1 SWAP3
0x4e2 PUSH4 0x70a08231
0x4e7 SWAP3
0x4e8 PUSH1 0x24
0x4ea DUP1
0x4eb DUP5
0x4ec ADD
0x4ed SWAP4
0x4ee PUSH1 0x20
0x4f0 SWAP4
0x4f1 SWAP3
0x4f2 SWAP1
0x4f3 DUP4
0x4f4 SWAP1
0x4f5 SUB
0x4f6 SWAP1
0x4f7 SWAP2
0x4f8 ADD
0x4f9 SWAP1
0x4fa DUP3
0x4fb SWAP1
0x4fc DUP8
0x4fd DUP1
0x4fe EXTCODESIZE
0x4ff ISZERO
0x500 DUP1
0x501 ISZERO
0x502 PUSH2 0x50a
0x505 JUMPI
---
0x49a: JUMPDEST 
0x49b: V422 = 0x0
0x49e: V423 = S[0x0]
0x49f: V424 = 0x1
0x4a1: V425 = S[0x1]
0x4a2: V426 = 0x40
0x4a5: V427 = M[0x40]
0x4a6: V428 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4c8: M[V427] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4c9: V429 = 0x1
0x4cb: V430 = 0xa0
0x4cd: V431 = 0x2
0x4cf: V432 = EXP 0x2 0xa0
0x4d0: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d3: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4d4: V435 = 0x4
0x4d7: V436 = ADD V427 0x4
0x4d8: M[V436] = V434
0x4da: V437 = M[0x40]
0x4e0: V438 = AND V423 0xffffffffffffffffffffffffffffffffffffffff
0x4e2: V439 = 0x70a08231
0x4e8: V440 = 0x24
0x4ec: V441 = ADD V427 0x24
0x4ee: V442 = 0x20
0x4f5: V443 = SUB V427 V437
0x4f8: V444 = ADD 0x24 V443
0x4fe: V445 = EXTCODESIZE V438
0x4ff: V446 = ISZERO V445
0x501: V447 = ISZERO V446
0x502: V448 = 0x50a
0x505: JUMPI 0x50a V447
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S4, {0x1c8, 0x653}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, V438, 0x70a08231, V441, 0x20, V437, V444, V437, 0x0, V438, V446]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S4, {0x1c8, 0x653}, 0x0, S1, S0, S1, V438, 0x70a08231, V441, 0x20, V437, V444, V437, 0x0, V438, V446]

================================

Block 0x506
[0x506:0x509]
---
Predecessors: [0x49a]
Successors: []
---
0x506 PUSH1 0x0
0x508 DUP1
0x509 REVERT
---
0x506: V449 = 0x0
0x509: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S15, {0x1c8, 0x653}, 0x0, S12, S11, S10, V438, 0x70a08231, V441, 0x20, V437, V444, V437, 0x0, V438, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S15, {0x1c8, 0x653}, 0x0, S12, S11, S10, V438, 0x70a08231, V441, 0x20, V437, V444, V437, 0x0, V438, V446]

================================

Block 0x50a
[0x50a:0x514]
---
Predecessors: [0x49a]
Successors: [0x515, 0x51e]
---
0x50a JUMPDEST
0x50b POP
0x50c GAS
0x50d CALL
0x50e ISZERO
0x50f DUP1
0x510 ISZERO
0x511 PUSH2 0x51e
0x514 JUMPI
---
0x50a: JUMPDEST 
0x50c: V450 = GAS
0x50d: V451 = CALL V450 V438 0x0 V437 V444 V437 0x20
0x50e: V452 = ISZERO V451
0x510: V453 = ISZERO V452
0x511: V454 = 0x51e
0x514: JUMPI 0x51e V453
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S15, {0x1c8, 0x653}, 0x0, S12, S11, S10, V438, 0x70a08231, V441, 0x20, V437, V444, V437, 0x0, V438, V446]
Stack pops: 7
Stack additions: [V452]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S15, {0x1c8, 0x653}, 0x0, S12, S11, S10, V438, 0x70a08231, V441, V452]

================================

Block 0x515
[0x515:0x51d]
---
Predecessors: [0x50a]
Successors: []
---
0x515 RETURNDATASIZE
0x516 PUSH1 0x0
0x518 DUP1
0x519 RETURNDATACOPY
0x51a RETURNDATASIZE
0x51b PUSH1 0x0
0x51d REVERT
---
0x515: V455 = RETURNDATASIZE
0x516: V456 = 0x0
0x519: RETURNDATACOPY 0x0 0x0 V455
0x51a: V457 = RETURNDATASIZE
0x51b: V458 = 0x0
0x51d: REVERT 0x0 V457
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S9, {0x1c8, 0x653}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V452]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S9, {0x1c8, 0x653}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V452]

================================

Block 0x51e
[0x51e:0x52f]
---
Predecessors: [0x50a]
Successors: [0x530, 0x534]
---
0x51e JUMPDEST
0x51f POP
0x520 POP
0x521 POP
0x522 POP
0x523 PUSH1 0x40
0x525 MLOAD
0x526 RETURNDATASIZE
0x527 PUSH1 0x20
0x529 DUP2
0x52a LT
0x52b ISZERO
0x52c PUSH2 0x534
0x52f JUMPI
---
0x51e: JUMPDEST 
0x523: V459 = 0x40
0x525: V460 = M[0x40]
0x526: V461 = RETURNDATASIZE
0x527: V462 = 0x20
0x52a: V463 = LT V461 0x20
0x52b: V464 = ISZERO V463
0x52c: V465 = 0x534
0x52f: JUMPI 0x534 V464
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S9, {0x1c8, 0x653}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V452]
Stack pops: 4
Stack additions: [V460, V461]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S9, {0x1c8, 0x653}, 0x0, S6, S5, S4, V460, V461]

================================

Block 0x530
[0x530:0x533]
---
Predecessors: [0x51e]
Successors: []
---
0x530 PUSH1 0x0
0x532 DUP1
0x533 REVERT
---
0x530: V466 = 0x0
0x533: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S7, {0x1c8, 0x653}, 0x0, S4, S3, S2, V460, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S7, {0x1c8, 0x653}, 0x0, S4, S3, S2, V460, V461]

================================

Block 0x534
[0x534:0x53e]
---
Predecessors: [0x51e]
Successors: [0x53f, 0x5e4]
---
0x534 JUMPDEST
0x535 POP
0x536 MLOAD
0x537 LT
0x538 DUP1
0x539 ISZERO
0x53a SWAP1
0x53b PUSH2 0x5e4
0x53e JUMPI
---
0x534: JUMPDEST 
0x536: V467 = M[V460]
0x537: V468 = LT V467 S2
0x539: V469 = ISZERO V468
0x53b: V470 = 0x5e4
0x53e: JUMPI 0x5e4 V468
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S7, {0x1c8, 0x653}, 0x0, S4, S3, S2, V460, V461]
Stack pops: 3
Stack additions: [V469]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S7, {0x1c8, 0x653}, 0x0, S4, S3, V469]

================================

Block 0x53f
[0x53f:0x5b0]
---
Predecessors: [0x534]
Successors: [0x5b1, 0x5b5]
---
0x53f POP
0x540 PUSH1 0x0
0x542 DUP1
0x543 SLOAD
0x544 PUSH1 0x1
0x546 SLOAD
0x547 PUSH1 0x40
0x549 DUP1
0x54a MLOAD
0x54b PUSH32 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x56c DUP2
0x56d MSTORE
0x56e PUSH1 0x1
0x570 PUSH1 0xa0
0x572 PUSH1 0x2
0x574 EXP
0x575 SUB
0x576 SWAP3
0x577 DUP4
0x578 AND
0x579 PUSH1 0x4
0x57b DUP3
0x57c ADD
0x57d MSTORE
0x57e ADDRESS
0x57f PUSH1 0x24
0x581 DUP3
0x582 ADD
0x583 MSTORE
0x584 SWAP1
0x585 MLOAD
0x586 DUP7
0x587 SWAP5
0x588 SWAP3
0x589 SWAP1
0x58a SWAP4
0x58b AND
0x58c SWAP3
0x58d PUSH4 0xdd62ed3e
0x592 SWAP3
0x593 PUSH1 0x44
0x595 DUP1
0x596 DUP5
0x597 ADD
0x598 SWAP4
0x599 PUSH1 0x20
0x59b SWAP4
0x59c SWAP3
0x59d SWAP1
0x59e DUP4
0x59f SWAP1
0x5a0 SUB
0x5a1 SWAP1
0x5a2 SWAP2
0x5a3 ADD
0x5a4 SWAP1
0x5a5 DUP3
0x5a6 SWAP1
0x5a7 DUP8
0x5a8 DUP1
0x5a9 EXTCODESIZE
0x5aa ISZERO
0x5ab DUP1
0x5ac ISZERO
0x5ad PUSH2 0x5b5
0x5b0 JUMPI
---
0x540: V471 = 0x0
0x543: V472 = S[0x0]
0x544: V473 = 0x1
0x546: V474 = S[0x1]
0x547: V475 = 0x40
0x54a: V476 = M[0x40]
0x54b: V477 = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x56d: M[V476] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x56e: V478 = 0x1
0x570: V479 = 0xa0
0x572: V480 = 0x2
0x574: V481 = EXP 0x2 0xa0
0x575: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x578: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x579: V484 = 0x4
0x57c: V485 = ADD V476 0x4
0x57d: M[V485] = V483
0x57e: V486 = ADDRESS
0x57f: V487 = 0x24
0x582: V488 = ADD V476 0x24
0x583: M[V488] = V486
0x585: V489 = M[0x40]
0x58b: V490 = AND V472 0xffffffffffffffffffffffffffffffffffffffff
0x58d: V491 = 0xdd62ed3e
0x593: V492 = 0x44
0x597: V493 = ADD V476 0x44
0x599: V494 = 0x20
0x5a0: V495 = SUB V476 V489
0x5a3: V496 = ADD 0x44 V495
0x5a9: V497 = EXTCODESIZE V490
0x5aa: V498 = ISZERO V497
0x5ac: V499 = ISZERO V498
0x5ad: V500 = 0x5b5
0x5b0: JUMPI 0x5b5 V499
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S5, {0x1c8, 0x653}, 0x0, S2, S1, V469]
Stack pops: 3
Stack additions: [S2, S1, S2, V490, 0xdd62ed3e, V493, 0x20, V489, V496, V489, 0x0, V490, V498]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S5, {0x1c8, 0x653}, 0x0, S2, S1, S2, V490, 0xdd62ed3e, V493, 0x20, V489, V496, V489, 0x0, V490, V498]

================================

Block 0x5b1
[0x5b1:0x5b4]
---
Predecessors: [0x53f]
Successors: []
---
0x5b1 PUSH1 0x0
0x5b3 DUP1
0x5b4 REVERT
---
0x5b1: V501 = 0x0
0x5b4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S15, {0x1c8, 0x653}, 0x0, S12, S11, S10, V490, 0xdd62ed3e, V493, 0x20, V489, V496, V489, 0x0, V490, V498]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S15, {0x1c8, 0x653}, 0x0, S12, S11, S10, V490, 0xdd62ed3e, V493, 0x20, V489, V496, V489, 0x0, V490, V498]

================================

Block 0x5b5
[0x5b5:0x5bf]
---
Predecessors: [0x53f]
Successors: [0x5c0, 0x5c9]
---
0x5b5 JUMPDEST
0x5b6 POP
0x5b7 GAS
0x5b8 CALL
0x5b9 ISZERO
0x5ba DUP1
0x5bb ISZERO
0x5bc PUSH2 0x5c9
0x5bf JUMPI
---
0x5b5: JUMPDEST 
0x5b7: V502 = GAS
0x5b8: V503 = CALL V502 V490 0x0 V489 V496 V489 0x20
0x5b9: V504 = ISZERO V503
0x5bb: V505 = ISZERO V504
0x5bc: V506 = 0x5c9
0x5bf: JUMPI 0x5c9 V505
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S15, {0x1c8, 0x653}, 0x0, S12, S11, S10, V490, 0xdd62ed3e, V493, 0x20, V489, V496, V489, 0x0, V490, V498]
Stack pops: 7
Stack additions: [V504]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S15, {0x1c8, 0x653}, 0x0, S12, S11, S10, V490, 0xdd62ed3e, V493, V504]

================================

Block 0x5c0
[0x5c0:0x5c8]
---
Predecessors: [0x5b5]
Successors: []
---
0x5c0 RETURNDATASIZE
0x5c1 PUSH1 0x0
0x5c3 DUP1
0x5c4 RETURNDATACOPY
0x5c5 RETURNDATASIZE
0x5c6 PUSH1 0x0
0x5c8 REVERT
---
0x5c0: V507 = RETURNDATASIZE
0x5c1: V508 = 0x0
0x5c4: RETURNDATACOPY 0x0 0x0 V507
0x5c5: V509 = RETURNDATASIZE
0x5c6: V510 = 0x0
0x5c8: REVERT 0x0 V509
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S9, {0x1c8, 0x653}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V504]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S9, {0x1c8, 0x653}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V504]

================================

Block 0x5c9
[0x5c9:0x5da]
---
Predecessors: [0x5b5]
Successors: [0x5db, 0x5df]
---
0x5c9 JUMPDEST
0x5ca POP
0x5cb POP
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 RETURNDATASIZE
0x5d2 PUSH1 0x20
0x5d4 DUP2
0x5d5 LT
0x5d6 ISZERO
0x5d7 PUSH2 0x5df
0x5da JUMPI
---
0x5c9: JUMPDEST 
0x5ce: V511 = 0x40
0x5d0: V512 = M[0x40]
0x5d1: V513 = RETURNDATASIZE
0x5d2: V514 = 0x20
0x5d5: V515 = LT V513 0x20
0x5d6: V516 = ISZERO V515
0x5d7: V517 = 0x5df
0x5da: JUMPI 0x5df V516
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S9, {0x1c8, 0x653}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V504]
Stack pops: 4
Stack additions: [V512, V513]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S9, {0x1c8, 0x653}, 0x0, S6, S5, S4, V512, V513]

================================

Block 0x5db
[0x5db:0x5de]
---
Predecessors: [0x5c9]
Successors: []
---
0x5db PUSH1 0x0
0x5dd DUP1
0x5de REVERT
---
0x5db: V518 = 0x0
0x5de: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S7, {0x1c8, 0x653}, 0x0, S4, S3, S2, V512, V513]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S7, {0x1c8, 0x653}, 0x0, S4, S3, S2, V512, V513]

================================

Block 0x5df
[0x5df:0x5e3]
---
Predecessors: [0x5c9]
Successors: [0x5e4]
---
0x5df JUMPDEST
0x5e0 POP
0x5e1 MLOAD
0x5e2 LT
0x5e3 ISZERO
---
0x5df: JUMPDEST 
0x5e1: V519 = M[V512]
0x5e2: V520 = LT V519 S2
0x5e3: V521 = ISZERO V520
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S7, {0x1c8, 0x653}, 0x0, S4, S3, S2, V512, V513]
Stack pops: 3
Stack additions: [V521]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S7, {0x1c8, 0x653}, 0x0, S4, S3, V521]

================================

Block 0x5e4
[0x5e4:0x5ea]
---
Predecessors: [0x534, 0x5df]
Successors: [0x1c8, 0x653]
---
0x5e4 JUMPDEST
0x5e5 SWAP3
0x5e6 POP
0x5e7 POP
0x5e8 POP
0x5e9 SWAP1
0x5ea JUMP
---
0x5e4: JUMPDEST 
0x5ea: JUMP {0x1c8, 0x653}
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S5, {0x1c8, 0x653}, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S5, S0]

================================

Block 0x5eb
[0x5eb:0x5ef]
---
Predecessors: [0x1e8]
Successors: [0x5f0]
---
0x5eb JUMPDEST
0x5ec PUSH1 0x0
0x5ee DUP1
0x5ef DUP1
---
0x5eb: JUMPDEST 
0x5ec: V522 = 0x0
---
Entry stack: [V13, 0x10f]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x10f, 0x0, 0x0, 0x0]

================================

Block 0x5f0
[0x5f0:0x5fd]
---
Predecessors: [0x5eb, 0x633]
Successors: [0x5fe, 0x63b]
---
0x5f0 JUMPDEST
0x5f1 PUSH1 0x4
0x5f3 SLOAD
0x5f4 PUSH1 0xff
0x5f6 DUP3
0x5f7 AND
0x5f8 LT
0x5f9 ISZERO
0x5fa PUSH2 0x63b
0x5fd JUMPI
---
0x5f0: JUMPDEST 
0x5f1: V523 = 0x4
0x5f3: V524 = S[0x4]
0x5f4: V525 = 0xff
0x5f7: V526 = AND S0 0xff
0x5f8: V527 = LT V526 V524
0x5f9: V528 = ISZERO V527
0x5fa: V529 = 0x63b
0x5fd: JUMPI 0x63b V528
---
Entry stack: [V13, 0x10f, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10f, 0x0, S1, S0]

================================

Block 0x5fe
[0x5fe:0x60f]
---
Predecessors: [0x5f0]
Successors: [0x610, 0x611]
---
0x5fe PUSH1 0x4
0x600 DUP1
0x601 SLOAD
0x602 CALLER
0x603 SWAP2
0x604 SWAP1
0x605 PUSH1 0xff
0x607 DUP5
0x608 AND
0x609 SWAP1
0x60a DUP2
0x60b LT
0x60c PUSH2 0x611
0x60f JUMPI
---
0x5fe: V530 = 0x4
0x601: V531 = S[0x4]
0x602: V532 = CALLER
0x605: V533 = 0xff
0x608: V534 = AND S0 0xff
0x60b: V535 = LT V534 V531
0x60c: V536 = 0x611
0x60f: JUMPI 0x611 V535
---
Entry stack: [V13, 0x10f, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V532, 0x4, V534]
Exit stack: [V13, 0x10f, 0x0, S1, S0, V532, 0x4, V534]

================================

Block 0x610
[0x610:0x610]
---
Predecessors: [0x5fe]
Successors: []
---
0x610 INVALID
---
0x610: INVALID 
---
Entry stack: [V13, 0x10f, 0x0, S4, S3, V532, 0x4, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, S4, S3, V532, 0x4, V534]

================================

Block 0x611
[0x611:0x62c]
---
Predecessors: [0x5fe]
Successors: [0x62d, 0x633]
---
0x611 JUMPDEST
0x612 PUSH1 0x0
0x614 SWAP2
0x615 DUP3
0x616 MSTORE
0x617 PUSH1 0x20
0x619 SWAP1
0x61a SWAP2
0x61b SHA3
0x61c ADD
0x61d SLOAD
0x61e PUSH1 0x1
0x620 PUSH1 0xa0
0x622 PUSH1 0x2
0x624 EXP
0x625 SUB
0x626 AND
0x627 EQ
0x628 ISZERO
0x629 PUSH2 0x633
0x62c JUMPI
---
0x611: JUMPDEST 
0x612: V537 = 0x0
0x616: M[0x0] = 0x4
0x617: V538 = 0x20
0x61b: V539 = SHA3 0x0 0x20
0x61c: V540 = ADD V539 V534
0x61d: V541 = S[V540]
0x61e: V542 = 0x1
0x620: V543 = 0xa0
0x622: V544 = 0x2
0x624: V545 = EXP 0x2 0xa0
0x625: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x626: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x627: V548 = EQ V547 V532
0x628: V549 = ISZERO V548
0x629: V550 = 0x633
0x62c: JUMPI 0x633 V549
---
Entry stack: [V13, 0x10f, 0x0, S4, S3, V532, 0x4, V534]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, S4, S3]

================================

Block 0x62d
[0x62d:0x632]
---
Predecessors: [0x611]
Successors: [0x633]
---
0x62d DUP2
0x62e PUSH1 0x1
0x630 OR
0x631 SWAP2
0x632 POP
---
0x62e: V551 = 0x1
0x630: V552 = OR 0x1 S1
---
Entry stack: [V13, 0x10f, 0x0, S1, S0]
Stack pops: 2
Stack additions: [V552, S0]
Exit stack: [V13, 0x10f, 0x0, V552, S0]

================================

Block 0x633
[0x633:0x63a]
---
Predecessors: [0x611, 0x62d]
Successors: [0x5f0]
---
0x633 JUMPDEST
0x634 PUSH1 0x1
0x636 ADD
0x637 PUSH2 0x5f0
0x63a JUMP
---
0x633: JUMPDEST 
0x634: V553 = 0x1
0x636: V554 = ADD 0x1 S0
0x637: V555 = 0x5f0
0x63a: JUMP 0x5f0
---
Entry stack: [V13, 0x10f, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V554]
Exit stack: [V13, 0x10f, 0x0, S1, V554]

================================

Block 0x63b
[0x63b:0x646]
---
Predecessors: [0x5f0]
Successors: [0x647, 0x64b]
---
0x63b JUMPDEST
0x63c PUSH1 0x1
0x63e PUSH1 0xff
0x640 DUP4
0x641 AND
0x642 EQ
0x643 PUSH2 0x64b
0x646 JUMPI
---
0x63b: JUMPDEST 
0x63c: V556 = 0x1
0x63e: V557 = 0xff
0x641: V558 = AND S1 0xff
0x642: V559 = EQ V558 0x1
0x643: V560 = 0x64b
0x646: JUMPI 0x64b V559
---
Entry stack: [V13, 0x10f, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x10f, 0x0, S1, S0]

================================

Block 0x647
[0x647:0x64a]
---
Predecessors: [0x63b]
Successors: []
---
0x647 PUSH1 0x0
0x649 DUP1
0x64a REVERT
---
0x647: V561 = 0x0
0x64a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, S1, S0]

================================

Block 0x64b
[0x64b:0x652]
---
Predecessors: [0x63b]
Successors: [0x426]
---
0x64b JUMPDEST
0x64c PUSH2 0x653
0x64f PUSH2 0x426
0x652 JUMP
---
0x64b: JUMPDEST 
0x64c: V562 = 0x653
0x64f: V563 = 0x426
0x652: JUMP 0x426
---
Entry stack: [V13, 0x10f, 0x0, S1, S0]
Stack pops: 0
Stack additions: [0x653]
Exit stack: [V13, 0x10f, 0x0, S1, S0, 0x653]

================================

Block 0x653
[0x653:0x659]
---
Predecessors: [0x5e4]
Successors: [0x65a, 0x65e]
---
0x653 JUMPDEST
0x654 ISZERO
0x655 ISZERO
0x656 PUSH2 0x65e
0x659 JUMPI
---
0x653: JUMPDEST 
0x654: V564 = ISZERO S0
0x655: V565 = ISZERO V564
0x656: V566 = 0x65e
0x659: JUMPI 0x65e V565
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S1]

================================

Block 0x65a
[0x65a:0x65d]
---
Predecessors: [0x653]
Successors: []
---
0x65a PUSH1 0x0
0x65c DUP1
0x65d REVERT
---
0x65a: V567 = 0x0
0x65d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S0]

================================

Block 0x65e
[0x65e:0x662]
---
Predecessors: [0x653]
Successors: [0x663]
---
0x65e JUMPDEST
0x65f PUSH1 0x0
0x661 SWAP3
0x662 POP
---
0x65e: JUMPDEST 
0x65f: V568 = 0x0
---
Entry stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V13, 0x10f, 0x0, {0x0, 0x1}, S0]

================================

Block 0x663
[0x663:0x66d]
---
Predecessors: [0x65e, 0x7c2]
Successors: [0x66e, 0x7cd]
---
0x663 JUMPDEST
0x664 PUSH1 0x3
0x666 SLOAD
0x667 DUP4
0x668 LT
0x669 ISZERO
0x66a PUSH2 0x7cd
0x66d JUMPI
---
0x663: JUMPDEST 
0x664: V569 = 0x3
0x666: V570 = S[0x3]
0x668: V571 = LT S2 V570
0x669: V572 = ISZERO V571
0x66a: V573 = 0x7cd
0x66d: JUMPI 0x7cd V572
---
Entry stack: [V13, 0x10f, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x10f, S2, S1, S0]

================================

Block 0x66e
[0x66e:0x679]
---
Predecessors: [0x663]
Successors: [0x67a, 0x67b]
---
0x66e PUSH1 0x3
0x670 DUP1
0x671 SLOAD
0x672 DUP5
0x673 SWAP1
0x674 DUP2
0x675 LT
0x676 PUSH2 0x67b
0x679 JUMPI
---
0x66e: V574 = 0x3
0x671: V575 = S[0x3]
0x675: V576 = LT S2 V575
0x676: V577 = 0x67b
0x679: JUMPI 0x67b V576
---
Entry stack: [V13, 0x10f, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x3, S2]
Exit stack: [V13, 0x10f, S2, S1, S0, 0x3, S2]

================================

Block 0x67a
[0x67a:0x67a]
---
Predecessors: [0x66e]
Successors: []
---
0x67a INVALID
---
0x67a: INVALID 
---
Entry stack: [V13, 0x10f, S4, S3, S2, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S4, S3, S2, 0x3, S0]

================================

Block 0x67b
[0x67b:0x699]
---
Predecessors: [0x66e]
Successors: [0x69a, 0x6a1]
---
0x67b JUMPDEST
0x67c PUSH1 0x0
0x67e SWAP2
0x67f DUP3
0x680 MSTORE
0x681 PUSH1 0x20
0x683 SWAP1
0x684 SWAP2
0x685 SHA3
0x686 PUSH1 0x2
0x688 PUSH1 0x3
0x68a SWAP1
0x68b SWAP3
0x68c MUL
0x68d ADD
0x68e ADD
0x68f SLOAD
0x690 PUSH1 0xff
0x692 AND
0x693 ISZERO
0x694 DUP1
0x695 ISZERO
0x696 PUSH2 0x6a1
0x699 JUMPI
---
0x67b: JUMPDEST 
0x67c: V578 = 0x0
0x680: M[0x0] = 0x3
0x681: V579 = 0x20
0x685: V580 = SHA3 0x0 0x20
0x686: V581 = 0x2
0x688: V582 = 0x3
0x68c: V583 = MUL S0 0x3
0x68d: V584 = ADD V583 V580
0x68e: V585 = ADD V584 0x2
0x68f: V586 = S[V585]
0x690: V587 = 0xff
0x692: V588 = AND 0xff V586
0x693: V589 = ISZERO V588
0x695: V590 = ISZERO V589
0x696: V591 = 0x6a1
0x699: JUMPI 0x6a1 V590
---
Entry stack: [V13, 0x10f, S4, S3, S2, 0x3, S0]
Stack pops: 2
Stack additions: [V589]
Exit stack: [V13, 0x10f, S4, S3, S2, V589]

================================

Block 0x69a
[0x69a:0x6a0]
---
Predecessors: [0x67b]
Successors: [0x6a1]
---
0x69a POP
0x69b PUSH3 0x249f0
0x69f GAS
0x6a0 GT
---
0x69b: V592 = 0x249f0
0x69f: V593 = GAS
0x6a0: V594 = GT V593 0x249f0
---
Entry stack: [V13, 0x10f, S3, S2, S1, V589]
Stack pops: 1
Stack additions: [V594]
Exit stack: [V13, 0x10f, S3, S2, S1, V594]

================================

Block 0x6a1
[0x6a1:0x6a6]
---
Predecessors: [0x67b, 0x69a]
Successors: [0x6a7, 0x7c2]
---
0x6a1 JUMPDEST
0x6a2 ISZERO
0x6a3 PUSH2 0x7c2
0x6a6 JUMPI
---
0x6a1: JUMPDEST 
0x6a2: V595 = ISZERO S0
0x6a3: V596 = 0x7c2
0x6a6: JUMPI 0x7c2 V595
---
Entry stack: [V13, 0x10f, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x10f, S3, S2, S1]

================================

Block 0x6a7
[0x6a7:0x6cd]
---
Predecessors: [0x6a1]
Successors: [0x6ce, 0x6cf]
---
0x6a7 PUSH1 0x0
0x6a9 SLOAD
0x6aa PUSH1 0x1
0x6ac SLOAD
0x6ad PUSH1 0x3
0x6af DUP1
0x6b0 SLOAD
0x6b1 PUSH1 0x1
0x6b3 PUSH1 0xa0
0x6b5 PUSH1 0x2
0x6b7 EXP
0x6b8 SUB
0x6b9 SWAP4
0x6ba DUP5
0x6bb AND
0x6bc SWAP4
0x6bd PUSH4 0x23b872dd
0x6c2 SWAP4
0x6c3 AND
0x6c4 SWAP2
0x6c5 SWAP1
0x6c6 DUP8
0x6c7 SWAP1
0x6c8 DUP2
0x6c9 LT
0x6ca PUSH2 0x6cf
0x6cd JUMPI
---
0x6a7: V597 = 0x0
0x6a9: V598 = S[0x0]
0x6aa: V599 = 0x1
0x6ac: V600 = S[0x1]
0x6ad: V601 = 0x3
0x6b0: V602 = S[0x3]
0x6b1: V603 = 0x1
0x6b3: V604 = 0xa0
0x6b5: V605 = 0x2
0x6b7: V606 = EXP 0x2 0xa0
0x6b8: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bb: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x6bd: V609 = 0x23b872dd
0x6c3: V610 = AND V600 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V611 = LT S2 V602
0x6ca: V612 = 0x6cf
0x6cd: JUMPI 0x6cf V611
---
Entry stack: [V13, 0x10f, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V608, 0x23b872dd, V610, 0x3, S2]
Exit stack: [V13, 0x10f, S2, S1, S0, V608, 0x23b872dd, V610, 0x3, S2]

================================

Block 0x6ce
[0x6ce:0x6ce]
---
Predecessors: [0x6a7]
Successors: []
---
0x6ce INVALID
---
0x6ce: INVALID 
---
Entry stack: [V13, 0x10f, S7, S6, S5, V608, 0x23b872dd, V610, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S7, S6, S5, V608, 0x23b872dd, V610, 0x3, S0]

================================

Block 0x6cf
[0x6cf:0x700]
---
Predecessors: [0x6a7]
Successors: [0x475, 0x701]
---
0x6cf JUMPDEST
0x6d0 PUSH1 0x0
0x6d2 SWAP2
0x6d3 DUP3
0x6d4 MSTORE
0x6d5 PUSH1 0x20
0x6d7 SWAP1
0x6d8 SWAP2
0x6d9 SHA3
0x6da PUSH1 0x3
0x6dc SWAP2
0x6dd DUP3
0x6de MUL
0x6df ADD
0x6e0 SLOAD
0x6e1 PUSH1 0x5
0x6e3 SLOAD
0x6e4 DUP3
0x6e5 SLOAD
0x6e6 PUSH1 0x1
0x6e8 PUSH1 0xa0
0x6ea PUSH1 0x2
0x6ec EXP
0x6ed SUB
0x6ee SWAP1
0x6ef SWAP3
0x6f0 AND
0x6f1 SWAP3
0x6f2 SWAP1
0x6f3 SWAP2
0x6f4 PUSH2 0x702
0x6f7 SWAP2
0x6f8 SWAP1
0x6f9 DUP11
0x6fa SWAP1
0x6fb DUP2
0x6fc LT
0x6fd PUSH2 0x475
0x700 JUMPI
---
0x6cf: JUMPDEST 
0x6d0: V613 = 0x0
0x6d4: M[0x0] = 0x3
0x6d5: V614 = 0x20
0x6d9: V615 = SHA3 0x0 0x20
0x6da: V616 = 0x3
0x6de: V617 = MUL 0x3 S0
0x6df: V618 = ADD V617 V615
0x6e0: V619 = S[V618]
0x6e1: V620 = 0x5
0x6e3: V621 = S[0x5]
0x6e5: V622 = S[0x3]
0x6e6: V623 = 0x1
0x6e8: V624 = 0xa0
0x6ea: V625 = 0x2
0x6ec: V626 = EXP 0x2 0xa0
0x6ed: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f0: V628 = AND V619 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V629 = 0x702
0x6fc: V630 = LT S7 V622
0x6fd: V631 = 0x475
0x700: JUMPI 0x475 V630
---
Entry stack: [V13, 0x10f, S7, S6, S5, V608, 0x23b872dd, V610, 0x3, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V628, V621, 0x702, 0x3, S7]
Exit stack: [V13, 0x10f, S7, S6, S5, V608, 0x23b872dd, V610, V628, V621, 0x702, 0x3, S7]

================================

Block 0x701
[0x701:0x701]
---
Predecessors: [0x6cf]
Successors: []
---
0x701 INVALID
---
0x701: INVALID 
---
Entry stack: [V13, 0x10f, S10, S9, S8, V608, 0x23b872dd, V610, V628, V621, 0x702, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S10, S9, S8, V608, 0x23b872dd, V610, V628, V621, 0x702, 0x3, S0]

================================

Block 0x702
[0x702:0x752]
---
Predecessors: [0x351]
Successors: [0x753, 0x757]
---
0x702 JUMPDEST
0x703 PUSH1 0x40
0x705 DUP1
0x706 MLOAD
0x707 PUSH1 0xe0
0x709 PUSH1 0x2
0x70b EXP
0x70c PUSH4 0xffffffff
0x711 DUP9
0x712 AND
0x713 MUL
0x714 DUP2
0x715 MSTORE
0x716 PUSH1 0x1
0x718 PUSH1 0xa0
0x71a PUSH1 0x2
0x71c EXP
0x71d SUB
0x71e SWAP6
0x71f DUP7
0x720 AND
0x721 PUSH1 0x4
0x723 DUP3
0x724 ADD
0x725 MSTORE
0x726 SWAP4
0x727 SWAP1
0x728 SWAP5
0x729 AND
0x72a PUSH1 0x24
0x72c DUP5
0x72d ADD
0x72e MSTORE
0x72f MUL
0x730 PUSH1 0x44
0x732 DUP3
0x733 ADD
0x734 MSTORE
0x735 SWAP1
0x736 MLOAD
0x737 PUSH1 0x64
0x739 DUP1
0x73a DUP4
0x73b ADD
0x73c SWAP3
0x73d PUSH1 0x20
0x73f SWAP3
0x740 SWAP2
0x741 SWAP1
0x742 DUP3
0x743 SWAP1
0x744 SUB
0x745 ADD
0x746 DUP2
0x747 PUSH1 0x0
0x749 DUP8
0x74a DUP1
0x74b EXTCODESIZE
0x74c ISZERO
0x74d DUP1
0x74e ISZERO
0x74f PUSH2 0x757
0x752 JUMPI
---
0x702: JUMPDEST 
0x703: V632 = 0x40
0x706: V633 = M[0x40]
0x707: V634 = 0xe0
0x709: V635 = 0x2
0x70b: V636 = EXP 0x2 0xe0
0x70c: V637 = 0xffffffff
0x712: V638 = AND {0x0, 0x23b872dd} 0xffffffff
0x713: V639 = MUL V638 0x100000000000000000000000000000000000000000000000000000000
0x715: M[V633] = V639
0x716: V640 = 0x1
0x718: V641 = 0xa0
0x71a: V642 = 0x2
0x71c: V643 = EXP 0x2 0xa0
0x71d: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x720: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x721: V646 = 0x4
0x724: V647 = ADD V633 0x4
0x725: M[V647] = V645
0x729: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x72a: V649 = 0x24
0x72d: V650 = ADD V633 0x24
0x72e: M[V650] = V648
0x72f: V651 = MUL V295 S1
0x730: V652 = 0x44
0x733: V653 = ADD V633 0x44
0x734: M[V653] = V651
0x736: V654 = M[0x40]
0x737: V655 = 0x64
0x73b: V656 = ADD V633 0x64
0x73d: V657 = 0x20
0x744: V658 = SUB V633 V654
0x745: V659 = ADD V658 0x64
0x747: V660 = 0x0
0x74b: V661 = EXTCODESIZE S5
0x74c: V662 = ISZERO V661
0x74e: V663 = ISZERO V662
0x74f: V664 = 0x757
0x752: JUMPI 0x757 V663
---
Entry stack: [V13, 0x10f, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1, V295]
Stack pops: 6
Stack additions: [S5, S4, V656, 0x20, V654, V659, V654, 0x0, S5, V662]
Exit stack: [V13, 0x10f, S8, S7, S6, S5, {0x0, 0x23b872dd}, V656, 0x20, V654, V659, V654, 0x0, S5, V662]

================================

Block 0x753
[0x753:0x756]
---
Predecessors: [0x702]
Successors: []
---
0x753 PUSH1 0x0
0x755 DUP1
0x756 REVERT
---
0x753: V665 = 0x0
0x756: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, S12, S11, S10, S9, {0x0, 0x23b872dd}, V656, 0x20, V654, V659, V654, 0x0, S1, V662]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S12, S11, S10, S9, {0x0, 0x23b872dd}, V656, 0x20, V654, V659, V654, 0x0, S1, V662]

================================

Block 0x757
[0x757:0x761]
---
Predecessors: [0x702]
Successors: [0x762, 0x76b]
---
0x757 JUMPDEST
0x758 POP
0x759 GAS
0x75a CALL
0x75b ISZERO
0x75c DUP1
0x75d ISZERO
0x75e PUSH2 0x76b
0x761 JUMPI
---
0x757: JUMPDEST 
0x759: V666 = GAS
0x75a: V667 = CALL V666 S1 0x0 V654 V659 V654 0x20
0x75b: V668 = ISZERO V667
0x75d: V669 = ISZERO V668
0x75e: V670 = 0x76b
0x761: JUMPI 0x76b V669
---
Entry stack: [V13, 0x10f, S12, S11, S10, S9, {0x0, 0x23b872dd}, V656, 0x20, V654, V659, V654, 0x0, S1, V662]
Stack pops: 7
Stack additions: [V668]
Exit stack: [V13, 0x10f, S12, S11, S10, S9, {0x0, 0x23b872dd}, V656, V668]

================================

Block 0x762
[0x762:0x76a]
---
Predecessors: [0x757]
Successors: []
---
0x762 RETURNDATASIZE
0x763 PUSH1 0x0
0x765 DUP1
0x766 RETURNDATACOPY
0x767 RETURNDATASIZE
0x768 PUSH1 0x0
0x76a REVERT
---
0x762: V671 = RETURNDATASIZE
0x763: V672 = 0x0
0x766: RETURNDATACOPY 0x0 0x0 V671
0x767: V673 = RETURNDATASIZE
0x768: V674 = 0x0
0x76a: REVERT 0x0 V673
---
Entry stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, V656, V668]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, V656, V668]

================================

Block 0x76b
[0x76b:0x77c]
---
Predecessors: [0x757]
Successors: [0x77d, 0x781]
---
0x76b JUMPDEST
0x76c POP
0x76d POP
0x76e POP
0x76f POP
0x770 PUSH1 0x40
0x772 MLOAD
0x773 RETURNDATASIZE
0x774 PUSH1 0x20
0x776 DUP2
0x777 LT
0x778 ISZERO
0x779 PUSH2 0x781
0x77c JUMPI
---
0x76b: JUMPDEST 
0x770: V675 = 0x40
0x772: V676 = M[0x40]
0x773: V677 = RETURNDATASIZE
0x774: V678 = 0x20
0x777: V679 = LT V677 0x20
0x778: V680 = ISZERO V679
0x779: V681 = 0x781
0x77c: JUMPI 0x781 V680
---
Entry stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, V656, V668]
Stack pops: 4
Stack additions: [V676, V677]
Exit stack: [V13, 0x10f, S6, S5, S4, V676, V677]

================================

Block 0x77d
[0x77d:0x780]
---
Predecessors: [0x76b]
Successors: []
---
0x77d PUSH1 0x0
0x77f DUP1
0x780 REVERT
---
0x77d: V682 = 0x0
0x780: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, S4, S3, S2, V676, V677]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S4, S3, S2, V676, V677]

================================

Block 0x781
[0x781:0x789]
---
Predecessors: [0x76b]
Successors: [0x78a, 0x78e]
---
0x781 JUMPDEST
0x782 POP
0x783 MLOAD
0x784 ISZERO
0x785 ISZERO
0x786 PUSH2 0x78e
0x789 JUMPI
---
0x781: JUMPDEST 
0x783: V683 = M[V676]
0x784: V684 = ISZERO V683
0x785: V685 = ISZERO V684
0x786: V686 = 0x78e
0x789: JUMPI 0x78e V685
---
Entry stack: [V13, 0x10f, S4, S3, S2, V676, V677]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x10f, S4, S3, S2]

================================

Block 0x78a
[0x78a:0x78d]
---
Predecessors: [0x781]
Successors: []
---
0x78a PUSH1 0x0
0x78c DUP1
0x78d REVERT
---
0x78a: V687 = 0x0
0x78d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S2, S1, S0]

================================

Block 0x78e
[0x78e:0x79d]
---
Predecessors: [0x781]
Successors: [0x79e, 0x79f]
---
0x78e JUMPDEST
0x78f PUSH1 0x1
0x791 PUSH1 0x3
0x793 DUP5
0x794 DUP2
0x795 SLOAD
0x796 DUP2
0x797 LT
0x798 ISZERO
0x799 ISZERO
0x79a PUSH2 0x79f
0x79d JUMPI
---
0x78e: JUMPDEST 
0x78f: V688 = 0x1
0x791: V689 = 0x3
0x795: V690 = S[0x3]
0x797: V691 = LT S2 V690
0x798: V692 = ISZERO V691
0x799: V693 = ISZERO V692
0x79a: V694 = 0x79f
0x79d: JUMPI 0x79f V693
---
Entry stack: [V13, 0x10f, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, 0x3, S2]
Exit stack: [V13, 0x10f, S2, S1, S0, 0x1, 0x3, S2]

================================

Block 0x79e
[0x79e:0x79e]
---
Predecessors: [0x78e]
Successors: []
---
0x79e INVALID
---
0x79e: INVALID 
---
Entry stack: [V13, 0x10f, S5, S4, S3, 0x1, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, S5, S4, S3, 0x1, 0x3, S0]

================================

Block 0x79f
[0x79f:0x7c1]
---
Predecessors: [0x78e]
Successors: [0x7c2]
---
0x79f JUMPDEST
0x7a0 PUSH1 0x0
0x7a2 SWAP2
0x7a3 DUP3
0x7a4 MSTORE
0x7a5 PUSH1 0x20
0x7a7 SWAP1
0x7a8 SWAP2
0x7a9 SHA3
0x7aa PUSH1 0x3
0x7ac SWAP1
0x7ad SWAP2
0x7ae MUL
0x7af ADD
0x7b0 PUSH1 0x2
0x7b2 ADD
0x7b3 DUP1
0x7b4 SLOAD
0x7b5 PUSH1 0xff
0x7b7 NOT
0x7b8 AND
0x7b9 SWAP2
0x7ba ISZERO
0x7bb ISZERO
0x7bc SWAP2
0x7bd SWAP1
0x7be SWAP2
0x7bf OR
0x7c0 SWAP1
0x7c1 SSTORE
---
0x79f: JUMPDEST 
0x7a0: V695 = 0x0
0x7a4: M[0x0] = 0x3
0x7a5: V696 = 0x20
0x7a9: V697 = SHA3 0x0 0x20
0x7aa: V698 = 0x3
0x7ae: V699 = MUL S0 0x3
0x7af: V700 = ADD V699 V697
0x7b0: V701 = 0x2
0x7b2: V702 = ADD 0x2 V700
0x7b4: V703 = S[V702]
0x7b5: V704 = 0xff
0x7b7: V705 = NOT 0xff
0x7b8: V706 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V703
0x7ba: V707 = ISZERO 0x1
0x7bb: V708 = ISZERO 0x0
0x7bf: V709 = OR 0x1 V706
0x7c1: S[V702] = V709
---
Entry stack: [V13, 0x10f, S5, S4, S3, 0x1, 0x3, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x10f, S5, S4, S3]

================================

Block 0x7c2
[0x7c2:0x7cc]
---
Predecessors: [0x6a1, 0x79f]
Successors: [0x663]
---
0x7c2 JUMPDEST
0x7c3 PUSH1 0x1
0x7c5 SWAP1
0x7c6 SWAP3
0x7c7 ADD
0x7c8 SWAP2
0x7c9 PUSH2 0x663
0x7cc JUMP
---
0x7c2: JUMPDEST 
0x7c3: V710 = 0x1
0x7c7: V711 = ADD S2 0x1
0x7c9: V712 = 0x663
0x7cc: JUMP 0x663
---
Entry stack: [V13, 0x10f, S2, S1, S0]
Stack pops: 3
Stack additions: [V711, S1, S0]
Exit stack: [V13, 0x10f, V711, S1, S0]

================================

Block 0x7cd
[0x7cd:0x7d1]
---
Predecessors: [0x663]
Successors: [0x10f]
---
0x7cd JUMPDEST
0x7ce POP
0x7cf POP
0x7d0 POP
0x7d1 JUMP
---
0x7cd: JUMPDEST 
0x7d1: JUMP 0x10f
---
Entry stack: [V13, 0x10f, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x7d2
[0x7d2:0x7d6]
---
Predecessors: [0x1fd]
Successors: [0x7d7]
---
0x7d2 JUMPDEST
0x7d3 PUSH1 0x0
0x7d5 DUP1
0x7d6 DUP1
---
0x7d2: JUMPDEST 
0x7d3: V713 = 0x0
---
Entry stack: [V13, 0x13e]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x13e, 0x0, 0x0, 0x0]

================================

Block 0x7d7
[0x7d7:0x7e1]
---
Predecessors: [0x7d2, 0x827]
Successors: [0x7e2, 0x82f]
---
0x7d7 JUMPDEST
0x7d8 PUSH1 0x3
0x7da SLOAD
0x7db DUP2
0x7dc LT
0x7dd ISZERO
0x7de PUSH2 0x82f
0x7e1 JUMPI
---
0x7d7: JUMPDEST 
0x7d8: V714 = 0x3
0x7da: V715 = S[0x3]
0x7dc: V716 = LT S0 V715
0x7dd: V717 = ISZERO V716
0x7de: V718 = 0x82f
0x7e1: JUMPI 0x82f V717
---
Entry stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]

================================

Block 0x7e2
[0x7e2:0x7ed]
---
Predecessors: [0x7d7]
Successors: [0x7ee, 0x7ef]
---
0x7e2 PUSH1 0x3
0x7e4 DUP1
0x7e5 SLOAD
0x7e6 DUP3
0x7e7 SWAP1
0x7e8 DUP2
0x7e9 LT
0x7ea PUSH2 0x7ef
0x7ed JUMPI
---
0x7e2: V719 = 0x3
0x7e5: V720 = S[0x3]
0x7e9: V721 = LT S0 V720
0x7ea: V722 = 0x7ef
0x7ed: JUMPI 0x7ef V721
---
Entry stack: [V13, 0x13e, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V13, 0x13e, 0x0, S1, S0, 0x3, S0]

================================

Block 0x7ee
[0x7ee:0x7ee]
---
Predecessors: [0x7e2]
Successors: []
---
0x7ee INVALID
---
0x7ee: INVALID 
---
Entry stack: [V13, 0x13e, 0x0, S3, S2, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, 0x0, S3, S2, 0x3, S0]

================================

Block 0x7ef
[0x7ef:0x80c]
---
Predecessors: [0x7e2]
Successors: [0x80d, 0x827]
---
0x7ef JUMPDEST
0x7f0 PUSH1 0x0
0x7f2 SWAP2
0x7f3 DUP3
0x7f4 MSTORE
0x7f5 PUSH1 0x20
0x7f7 SWAP1
0x7f8 SWAP2
0x7f9 SHA3
0x7fa PUSH1 0x2
0x7fc PUSH1 0x3
0x7fe SWAP1
0x7ff SWAP3
0x800 MUL
0x801 ADD
0x802 ADD
0x803 SLOAD
0x804 PUSH1 0xff
0x806 AND
0x807 ISZERO
0x808 ISZERO
0x809 PUSH2 0x827
0x80c JUMPI
---
0x7ef: JUMPDEST 
0x7f0: V723 = 0x0
0x7f4: M[0x0] = 0x3
0x7f5: V724 = 0x20
0x7f9: V725 = SHA3 0x0 0x20
0x7fa: V726 = 0x2
0x7fc: V727 = 0x3
0x800: V728 = MUL S0 0x3
0x801: V729 = ADD V728 V725
0x802: V730 = ADD V729 0x2
0x803: V731 = S[V730]
0x804: V732 = 0xff
0x806: V733 = AND 0xff V731
0x807: V734 = ISZERO V733
0x808: V735 = ISZERO V734
0x809: V736 = 0x827
0x80c: JUMPI 0x827 V735
---
Entry stack: [V13, 0x13e, 0x0, S3, S2, 0x3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x13e, 0x0, S3, S2]

================================

Block 0x80d
[0x80d:0x81f]
---
Predecessors: [0x7ef]
Successors: [0x475, 0x820]
---
0x80d PUSH1 0x5
0x80f SLOAD
0x810 PUSH2 0x821
0x813 PUSH1 0x3
0x815 DUP4
0x816 DUP2
0x817 SLOAD
0x818 DUP2
0x819 LT
0x81a ISZERO
0x81b ISZERO
0x81c PUSH2 0x475
0x81f JUMPI
---
0x80d: V737 = 0x5
0x80f: V738 = S[0x5]
0x810: V739 = 0x821
0x813: V740 = 0x3
0x817: V741 = S[0x3]
0x819: V742 = LT S0 V741
0x81a: V743 = ISZERO V742
0x81b: V744 = ISZERO V743
0x81c: V745 = 0x475
0x81f: JUMPI 0x475 V744
---
Entry stack: [V13, 0x13e, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V738, 0x821, 0x3, S0]
Exit stack: [V13, 0x13e, 0x0, S1, S0, V738, 0x821, 0x3, S0]

================================

Block 0x820
[0x820:0x820]
---
Predecessors: [0x80d]
Successors: []
---
0x820 INVALID
---
0x820: INVALID 
---
Entry stack: [V13, 0x13e, 0x0, S5, S4, V738, 0x821, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, 0x0, S5, S4, V738, 0x821, 0x3, S0]

================================

Block 0x821
[0x821:0x826]
---
Predecessors: [0x351]
Successors: [0x827]
---
0x821 JUMPDEST
0x822 MUL
0x823 DUP3
0x824 ADD
0x825 SWAP2
0x826 POP
---
0x821: JUMPDEST 
0x822: V746 = MUL V295 S1
0x824: V747 = ADD S3 V746
---
Entry stack: [V13, 0x10f, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1, V295]
Stack pops: 4
Stack additions: [V747, S2]
Exit stack: [V13, 0x10f, S8, S7, S6, S5, {0x0, 0x23b872dd}, V747, S2]

================================

Block 0x827
[0x827:0x82e]
---
Predecessors: [0x7ef, 0x821]
Successors: [0x7d7]
---
0x827 JUMPDEST
0x828 PUSH1 0x1
0x82a ADD
0x82b PUSH2 0x7d7
0x82e JUMP
---
0x827: JUMPDEST 
0x828: V748 = 0x1
0x82a: V749 = ADD 0x1 S0
0x82b: V750 = 0x7d7
0x82e: JUMP 0x7d7
---
Entry stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]
Stack pops: 1
Stack additions: [V749]
Exit stack: [V13, 0x10f, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, V749]

================================

Block 0x82f
[0x82f:0x834]
---
Predecessors: [0x7d7]
Successors: [0x13e]
---
0x82f JUMPDEST
0x830 POP
0x831 SWAP2
0x832 SWAP1
0x833 POP
0x834 JUMP
---
0x82f: JUMPDEST 
0x834: JUMP 0x13e
---
Entry stack: [V13, 0x13e, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V13, S1]

================================

Block 0x835
[0x835:0x839]
---
Predecessors: [0x212]
Successors: [0x83a]
---
0x835 JUMPDEST
0x836 PUSH1 0x0
0x838 DUP1
0x839 DUP1
---
0x835: JUMPDEST 
0x836: V751 = 0x0
---
Entry stack: [V13, 0x10f, V177]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x10f, V177, 0x0, 0x0, 0x0]

================================

Block 0x83a
[0x83a:0x847]
---
Predecessors: [0x835, 0x87d]
Successors: [0x848, 0x885]
---
0x83a JUMPDEST
0x83b PUSH1 0x4
0x83d SLOAD
0x83e PUSH1 0xff
0x840 DUP3
0x841 AND
0x842 LT
0x843 ISZERO
0x844 PUSH2 0x885
0x847 JUMPI
---
0x83a: JUMPDEST 
0x83b: V752 = 0x4
0x83d: V753 = S[0x4]
0x83e: V754 = 0xff
0x841: V755 = AND S0 0xff
0x842: V756 = LT V755 V753
0x843: V757 = ISZERO V756
0x844: V758 = 0x885
0x847: JUMPI 0x885 V757
---
Entry stack: [V13, 0x10f, V177, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10f, V177, 0x0, S1, S0]

================================

Block 0x848
[0x848:0x859]
---
Predecessors: [0x83a]
Successors: [0x85a, 0x85b]
---
0x848 PUSH1 0x4
0x84a DUP1
0x84b SLOAD
0x84c CALLER
0x84d SWAP2
0x84e SWAP1
0x84f PUSH1 0xff
0x851 DUP5
0x852 AND
0x853 SWAP1
0x854 DUP2
0x855 LT
0x856 PUSH2 0x85b
0x859 JUMPI
---
0x848: V759 = 0x4
0x84b: V760 = S[0x4]
0x84c: V761 = CALLER
0x84f: V762 = 0xff
0x852: V763 = AND S0 0xff
0x855: V764 = LT V763 V760
0x856: V765 = 0x85b
0x859: JUMPI 0x85b V764
---
Entry stack: [V13, 0x10f, V177, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V761, 0x4, V763]
Exit stack: [V13, 0x10f, V177, 0x0, S1, S0, V761, 0x4, V763]

================================

Block 0x85a
[0x85a:0x85a]
---
Predecessors: [0x848]
Successors: []
---
0x85a INVALID
---
0x85a: INVALID 
---
Entry stack: [V13, 0x10f, V177, 0x0, S4, S3, V761, 0x4, V763]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, V177, 0x0, S4, S3, V761, 0x4, V763]

================================

Block 0x85b
[0x85b:0x876]
---
Predecessors: [0x848]
Successors: [0x877, 0x87d]
---
0x85b JUMPDEST
0x85c PUSH1 0x0
0x85e SWAP2
0x85f DUP3
0x860 MSTORE
0x861 PUSH1 0x20
0x863 SWAP1
0x864 SWAP2
0x865 SHA3
0x866 ADD
0x867 SLOAD
0x868 PUSH1 0x1
0x86a PUSH1 0xa0
0x86c PUSH1 0x2
0x86e EXP
0x86f SUB
0x870 AND
0x871 EQ
0x872 ISZERO
0x873 PUSH2 0x87d
0x876 JUMPI
---
0x85b: JUMPDEST 
0x85c: V766 = 0x0
0x860: M[0x0] = 0x4
0x861: V767 = 0x20
0x865: V768 = SHA3 0x0 0x20
0x866: V769 = ADD V768 V763
0x867: V770 = S[V769]
0x868: V771 = 0x1
0x86a: V772 = 0xa0
0x86c: V773 = 0x2
0x86e: V774 = EXP 0x2 0xa0
0x86f: V775 = SUB 0x10000000000000000000000000000000000000000 0x1
0x870: V776 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0x871: V777 = EQ V776 V761
0x872: V778 = ISZERO V777
0x873: V779 = 0x87d
0x876: JUMPI 0x87d V778
---
Entry stack: [V13, 0x10f, V177, 0x0, S4, S3, V761, 0x4, V763]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x10f, V177, 0x0, S4, S3]

================================

Block 0x877
[0x877:0x87c]
---
Predecessors: [0x85b]
Successors: [0x87d]
---
0x877 DUP2
0x878 PUSH1 0x1
0x87a OR
0x87b SWAP2
0x87c POP
---
0x878: V780 = 0x1
0x87a: V781 = OR 0x1 S1
---
Entry stack: [V13, 0x10f, V177, 0x0, S1, S0]
Stack pops: 2
Stack additions: [V781, S0]
Exit stack: [V13, 0x10f, V177, 0x0, V781, S0]

================================

Block 0x87d
[0x87d:0x884]
---
Predecessors: [0x85b, 0x877]
Successors: [0x83a]
---
0x87d JUMPDEST
0x87e PUSH1 0x1
0x880 ADD
0x881 PUSH2 0x83a
0x884 JUMP
---
0x87d: JUMPDEST 
0x87e: V782 = 0x1
0x880: V783 = ADD 0x1 S0
0x881: V784 = 0x83a
0x884: JUMP 0x83a
---
Entry stack: [V13, 0x10f, V177, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V783]
Exit stack: [V13, 0x10f, V177, 0x0, S1, V783]

================================

Block 0x885
[0x885:0x890]
---
Predecessors: [0x83a]
Successors: [0x891, 0x895]
---
0x885 JUMPDEST
0x886 PUSH1 0x1
0x888 PUSH1 0xff
0x88a DUP4
0x88b AND
0x88c EQ
0x88d PUSH2 0x895
0x890 JUMPI
---
0x885: JUMPDEST 
0x886: V785 = 0x1
0x888: V786 = 0xff
0x88b: V787 = AND S1 0xff
0x88c: V788 = EQ V787 0x1
0x88d: V789 = 0x895
0x890: JUMPI 0x895 V788
---
Entry stack: [V13, 0x10f, V177, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x10f, V177, 0x0, S1, S0]

================================

Block 0x891
[0x891:0x894]
---
Predecessors: [0x885]
Successors: []
---
0x891 PUSH1 0x0
0x893 DUP1
0x894 REVERT
---
0x891: V790 = 0x0
0x894: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, V177, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, V177, 0x0, S1, S0]

================================

Block 0x895
[0x895:0x899]
---
Predecessors: [0x885]
Successors: [0x89a]
---
0x895 JUMPDEST
0x896 PUSH1 0x0
0x898 SWAP3
0x899 POP
---
0x895: JUMPDEST 
0x896: V791 = 0x0
---
Entry stack: [V13, 0x10f, V177, 0x0, S1, S0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V13, 0x10f, V177, 0x0, S1, S0]

================================

Block 0x89a
[0x89a:0x8a4]
---
Predecessors: [0x895, 0x8b5]
Successors: [0x8a5, 0x8e3]
---
0x89a JUMPDEST
0x89b PUSH1 0x3
0x89d SLOAD
0x89e DUP4
0x89f LT
0x8a0 ISZERO
0x8a1 PUSH2 0x8e3
0x8a4 JUMPI
---
0x89a: JUMPDEST 
0x89b: V792 = 0x3
0x89d: V793 = S[0x3]
0x89f: V794 = LT S2 V793
0x8a0: V795 = ISZERO V794
0x8a1: V796 = 0x8e3
0x8a4: JUMPI 0x8e3 V795
---
Entry stack: [V13, 0x10f, V177, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x10f, V177, S2, S1, S0]

================================

Block 0x8a5
[0x8a5:0x8b3]
---
Predecessors: [0x89a]
Successors: [0x8b4, 0x8b5]
---
0x8a5 PUSH1 0x0
0x8a7 PUSH1 0x3
0x8a9 DUP5
0x8aa DUP2
0x8ab SLOAD
0x8ac DUP2
0x8ad LT
0x8ae ISZERO
0x8af ISZERO
0x8b0 PUSH2 0x8b5
0x8b3 JUMPI
---
0x8a5: V797 = 0x0
0x8a7: V798 = 0x3
0x8ab: V799 = S[0x3]
0x8ad: V800 = LT S2 V799
0x8ae: V801 = ISZERO V800
0x8af: V802 = ISZERO V801
0x8b0: V803 = 0x8b5
0x8b3: JUMPI 0x8b5 V802
---
Entry stack: [V13, 0x10f, V177, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x3, S2]
Exit stack: [V13, 0x10f, V177, S2, S1, S0, 0x0, 0x3, S2]

================================

Block 0x8b4
[0x8b4:0x8b4]
---
Predecessors: [0x8a5]
Successors: []
---
0x8b4 INVALID
---
0x8b4: INVALID 
---
Entry stack: [V13, 0x10f, V177, S5, S4, S3, 0x0, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, V177, S5, S4, S3, 0x0, 0x3, S0]

================================

Block 0x8b5
[0x8b5:0x8e2]
---
Predecessors: [0x8a5]
Successors: [0x89a]
---
0x8b5 JUMPDEST
0x8b6 PUSH1 0x0
0x8b8 SWAP2
0x8b9 DUP3
0x8ba MSTORE
0x8bb PUSH1 0x20
0x8bd SWAP1
0x8be SWAP2
0x8bf SHA3
0x8c0 PUSH1 0x3
0x8c2 SWAP1
0x8c3 SWAP2
0x8c4 MUL
0x8c5 ADD
0x8c6 PUSH1 0x2
0x8c8 ADD
0x8c9 DUP1
0x8ca SLOAD
0x8cb PUSH1 0xff
0x8cd NOT
0x8ce AND
0x8cf SWAP2
0x8d0 ISZERO
0x8d1 ISZERO
0x8d2 SWAP2
0x8d3 SWAP1
0x8d4 SWAP2
0x8d5 OR
0x8d6 SWAP1
0x8d7 SSTORE
0x8d8 PUSH1 0x1
0x8da SWAP3
0x8db SWAP1
0x8dc SWAP3
0x8dd ADD
0x8de SWAP2
0x8df PUSH2 0x89a
0x8e2 JUMP
---
0x8b5: JUMPDEST 
0x8b6: V804 = 0x0
0x8ba: M[0x0] = 0x3
0x8bb: V805 = 0x20
0x8bf: V806 = SHA3 0x0 0x20
0x8c0: V807 = 0x3
0x8c4: V808 = MUL S0 0x3
0x8c5: V809 = ADD V808 V806
0x8c6: V810 = 0x2
0x8c8: V811 = ADD 0x2 V809
0x8ca: V812 = S[V811]
0x8cb: V813 = 0xff
0x8cd: V814 = NOT 0xff
0x8ce: V815 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V812
0x8d0: V816 = ISZERO 0x0
0x8d1: V817 = ISZERO 0x1
0x8d5: V818 = OR 0x0 V815
0x8d7: S[V811] = V818
0x8d8: V819 = 0x1
0x8dd: V820 = ADD 0x1 S5
0x8df: V821 = 0x89a
0x8e2: JUMP 0x89a
---
Entry stack: [V13, 0x10f, V177, S5, S4, S3, 0x0, 0x3, S0]
Stack pops: 6
Stack additions: [V820, S4, S3]
Exit stack: [V13, 0x10f, V177, V820, S4, S3]

================================

Block 0x8e3
[0x8e3:0x8ea]
---
Predecessors: [0x89a]
Successors: [0x10f]
---
0x8e3 JUMPDEST
0x8e4 POP
0x8e5 POP
0x8e6 POP
0x8e7 PUSH1 0x2
0x8e9 SSTORE
0x8ea JUMP
---
0x8e3: JUMPDEST 
0x8e7: V822 = 0x2
0x8e9: S[0x2] = V177
0x8ea: JUMP 0x10f
---
Entry stack: [V13, 0x10f, V177, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x8eb
[0x8eb:0x8f0]
---
Predecessors: [0x22a]
Successors: [0x13e]
---
0x8eb JUMPDEST
0x8ec PUSH1 0x5
0x8ee SLOAD
0x8ef DUP2
0x8f0 JUMP
---
0x8eb: JUMPDEST 
0x8ec: V823 = 0x5
0x8ee: V824 = S[0x5]
0x8f0: JUMP 0x13e
---
Entry stack: [V13, 0x13e]
Stack pops: 1
Stack additions: [S0, V824]
Exit stack: [V13, 0x13e, V824]

================================

Block 0x8f1
[0x8f1:0x8f5]
---
Predecessors: [0x23f, 0x30e]
Successors: [0x8f6]
---
0x8f1 JUMPDEST
0x8f2 PUSH1 0x0
0x8f4 DUP1
0x8f5 DUP1
---
0x8f1: JUMPDEST 
0x8f2: V825 = 0x0
---
Entry stack: [V13, 0x10f, S2, S1, {0x1c8, 0x316}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x10f, S2, S1, {0x1c8, 0x316}, 0x0, 0x0, 0x0]

================================

Block 0x8f6
[0x8f6:0x903]
---
Predecessors: [0x8f1, 0x939]
Successors: [0x904, 0x941]
---
0x8f6 JUMPDEST
0x8f7 PUSH1 0x4
0x8f9 SLOAD
0x8fa PUSH1 0xff
0x8fc DUP3
0x8fd AND
0x8fe LT
0x8ff ISZERO
0x900 PUSH2 0x941
0x903 JUMPI
---
0x8f6: JUMPDEST 
0x8f7: V826 = 0x4
0x8f9: V827 = S[0x4]
0x8fa: V828 = 0xff
0x8fd: V829 = AND S0 0xff
0x8fe: V830 = LT V829 V827
0x8ff: V831 = ISZERO V830
0x900: V832 = 0x941
0x903: JUMPI 0x941 V831
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, S1, S0]

================================

Block 0x904
[0x904:0x915]
---
Predecessors: [0x8f6]
Successors: [0x916, 0x917]
---
0x904 PUSH1 0x4
0x906 DUP1
0x907 SLOAD
0x908 CALLER
0x909 SWAP2
0x90a SWAP1
0x90b PUSH1 0xff
0x90d DUP5
0x90e AND
0x90f SWAP1
0x910 DUP2
0x911 LT
0x912 PUSH2 0x917
0x915 JUMPI
---
0x904: V833 = 0x4
0x907: V834 = S[0x4]
0x908: V835 = CALLER
0x90b: V836 = 0xff
0x90e: V837 = AND S0 0xff
0x911: V838 = LT V837 V834
0x912: V839 = 0x917
0x915: JUMPI 0x917 V838
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0, V835, 0x4, V837]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0, V835, 0x4, V837]

================================

Block 0x916
[0x916:0x916]
---
Predecessors: [0x904]
Successors: []
---
0x916 INVALID
---
0x916: INVALID 
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S7, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S3, V835, 0x4, V837]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S7, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S3, V835, 0x4, V837]

================================

Block 0x917
[0x917:0x932]
---
Predecessors: [0x904]
Successors: [0x933, 0x939]
---
0x917 JUMPDEST
0x918 PUSH1 0x0
0x91a SWAP2
0x91b DUP3
0x91c MSTORE
0x91d PUSH1 0x20
0x91f SWAP1
0x920 SWAP2
0x921 SHA3
0x922 ADD
0x923 SLOAD
0x924 PUSH1 0x1
0x926 PUSH1 0xa0
0x928 PUSH1 0x2
0x92a EXP
0x92b SUB
0x92c AND
0x92d EQ
0x92e ISZERO
0x92f PUSH2 0x939
0x932 JUMPI
---
0x917: JUMPDEST 
0x918: V840 = 0x0
0x91c: M[0x0] = 0x4
0x91d: V841 = 0x20
0x921: V842 = SHA3 0x0 0x20
0x922: V843 = ADD V842 V837
0x923: V844 = S[V843]
0x924: V845 = 0x1
0x926: V846 = 0xa0
0x928: V847 = 0x2
0x92a: V848 = EXP 0x2 0xa0
0x92b: V849 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92c: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff V844
0x92d: V851 = EQ V850 V835
0x92e: V852 = ISZERO V851
0x92f: V853 = 0x939
0x932: JUMPI 0x939 V852
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S7, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S3, V835, 0x4, V837]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S7, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S3]

================================

Block 0x933
[0x933:0x938]
---
Predecessors: [0x917]
Successors: [0x939]
---
0x933 DUP2
0x934 PUSH1 0x1
0x936 OR
0x937 SWAP2
0x938 POP
---
0x934: V854 = 0x1
0x936: V855 = OR 0x1 {0x0, 0x1}
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [V855, S0]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, V855, S0]

================================

Block 0x939
[0x939:0x940]
---
Predecessors: [0x917, 0x933]
Successors: [0x8f6]
---
0x939 JUMPDEST
0x93a PUSH1 0x1
0x93c ADD
0x93d PUSH2 0x8f6
0x940 JUMP
---
0x939: JUMPDEST 
0x93a: V856 = 0x1
0x93c: V857 = ADD 0x1 S0
0x93d: V858 = 0x8f6
0x940: JUMP 0x8f6
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V857]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, S1, V857]

================================

Block 0x941
[0x941:0x94c]
---
Predecessors: [0x8f6]
Successors: [0x94d, 0x951]
---
0x941 JUMPDEST
0x942 PUSH1 0x1
0x944 PUSH1 0xff
0x946 DUP4
0x947 AND
0x948 EQ
0x949 PUSH2 0x951
0x94c JUMPI
---
0x941: JUMPDEST 
0x942: V859 = 0x1
0x944: V860 = 0xff
0x947: V861 = AND {0x0, 0x1} 0xff
0x948: V862 = EQ V861 0x1
0x949: V863 = 0x951
0x94c: JUMPI 0x951 V862
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x94d
[0x94d:0x950]
---
Predecessors: [0x941]
Successors: []
---
0x94d PUSH1 0x0
0x94f DUP1
0x950 REVERT
---
0x94d: V864 = 0x0
0x950: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x951
[0x951:0x9c1]
---
Predecessors: [0x941]
Successors: [0x9c2, 0x9c6]
---
0x951 JUMPDEST
0x952 PUSH1 0x0
0x954 DUP1
0x955 SLOAD
0x956 PUSH1 0x1
0x958 SLOAD
0x959 PUSH1 0x40
0x95b DUP1
0x95c MLOAD
0x95d PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x97e DUP2
0x97f MSTORE
0x980 ADDRESS
0x981 PUSH1 0x4
0x983 DUP3
0x984 ADD
0x985 MSTORE
0x986 SWAP1
0x987 MLOAD
0x988 PUSH1 0x1
0x98a PUSH1 0xa0
0x98c PUSH1 0x2
0x98e EXP
0x98f SUB
0x990 SWAP4
0x991 DUP5
0x992 AND
0x993 SWAP5
0x994 PUSH4 0xa9059cbb
0x999 SWAP5
0x99a SWAP1
0x99b SWAP4
0x99c AND
0x99d SWAP3
0x99e DUP6
0x99f SWAP3
0x9a0 PUSH4 0x70a08231
0x9a5 SWAP3
0x9a6 PUSH1 0x24
0x9a8 DUP1
0x9a9 DUP4
0x9aa ADD
0x9ab SWAP4
0x9ac PUSH1 0x20
0x9ae SWAP4
0x9af DUP4
0x9b0 SWAP1
0x9b1 SUB
0x9b2 SWAP1
0x9b3 SWAP2
0x9b4 ADD
0x9b5 SWAP1
0x9b6 DUP3
0x9b7 SWAP1
0x9b8 DUP8
0x9b9 DUP1
0x9ba EXTCODESIZE
0x9bb ISZERO
0x9bc DUP1
0x9bd ISZERO
0x9be PUSH2 0x9c6
0x9c1 JUMPI
---
0x951: JUMPDEST 
0x952: V865 = 0x0
0x955: V866 = S[0x0]
0x956: V867 = 0x1
0x958: V868 = S[0x1]
0x959: V869 = 0x40
0x95c: V870 = M[0x40]
0x95d: V871 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x97f: M[V870] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x980: V872 = ADDRESS
0x981: V873 = 0x4
0x984: V874 = ADD V870 0x4
0x985: M[V874] = V872
0x987: V875 = M[0x40]
0x988: V876 = 0x1
0x98a: V877 = 0xa0
0x98c: V878 = 0x2
0x98e: V879 = EXP 0x2 0xa0
0x98f: V880 = SUB 0x10000000000000000000000000000000000000000 0x1
0x992: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0x994: V882 = 0xa9059cbb
0x99c: V883 = AND V868 0xffffffffffffffffffffffffffffffffffffffff
0x9a0: V884 = 0x70a08231
0x9a6: V885 = 0x24
0x9aa: V886 = ADD V870 0x24
0x9ac: V887 = 0x20
0x9b1: V888 = SUB V870 V875
0x9b4: V889 = ADD 0x24 V888
0x9ba: V890 = EXTCODESIZE V881
0x9bb: V891 = ISZERO V890
0x9bd: V892 = ISZERO V891
0x9be: V893 = 0x9c6
0x9c1: JUMPI 0x9c6 V892
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: [V881, 0xa9059cbb, V883, V881, 0x70a08231, V886, 0x20, V875, V889, V875, 0x0, V881, V891]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0, V881, 0xa9059cbb, V883, V881, 0x70a08231, V886, 0x20, V875, V889, V875, 0x0, V881, V891]

================================

Block 0x9c2
[0x9c2:0x9c5]
---
Predecessors: [0x951]
Successors: []
---
0x9c2 PUSH1 0x0
0x9c4 DUP1
0x9c5 REVERT
---
0x9c2: V894 = 0x0
0x9c5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S17, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S13, V881, 0xa9059cbb, V883, V881, 0x70a08231, V886, 0x20, V875, V889, V875, 0x0, V881, V891]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S17, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S13, V881, 0xa9059cbb, V883, V881, 0x70a08231, V886, 0x20, V875, V889, V875, 0x0, V881, V891]

================================

Block 0x9c6
[0x9c6:0x9d0]
---
Predecessors: [0x951]
Successors: [0x9d1, 0x9da]
---
0x9c6 JUMPDEST
0x9c7 POP
0x9c8 GAS
0x9c9 CALL
0x9ca ISZERO
0x9cb DUP1
0x9cc ISZERO
0x9cd PUSH2 0x9da
0x9d0 JUMPI
---
0x9c6: JUMPDEST 
0x9c8: V895 = GAS
0x9c9: V896 = CALL V895 V881 0x0 V875 V889 V875 0x20
0x9ca: V897 = ISZERO V896
0x9cc: V898 = ISZERO V897
0x9cd: V899 = 0x9da
0x9d0: JUMPI 0x9da V898
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S17, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S13, V881, 0xa9059cbb, V883, V881, 0x70a08231, V886, 0x20, V875, V889, V875, 0x0, V881, V891]
Stack pops: 7
Stack additions: [V897]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S17, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S13, V881, 0xa9059cbb, V883, V881, 0x70a08231, V886, V897]

================================

Block 0x9d1
[0x9d1:0x9d9]
---
Predecessors: [0x9c6]
Successors: []
---
0x9d1 RETURNDATASIZE
0x9d2 PUSH1 0x0
0x9d4 DUP1
0x9d5 RETURNDATACOPY
0x9d6 RETURNDATASIZE
0x9d7 PUSH1 0x0
0x9d9 REVERT
---
0x9d1: V900 = RETURNDATASIZE
0x9d2: V901 = 0x0
0x9d5: RETURNDATACOPY 0x0 0x0 V900
0x9d6: V902 = RETURNDATASIZE
0x9d7: V903 = 0x0
0x9d9: REVERT 0x0 V902
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S11, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V897]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S11, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V897]

================================

Block 0x9da
[0x9da:0x9eb]
---
Predecessors: [0x9c6]
Successors: [0x9ec, 0x9f0]
---
0x9da JUMPDEST
0x9db POP
0x9dc POP
0x9dd POP
0x9de POP
0x9df PUSH1 0x40
0x9e1 MLOAD
0x9e2 RETURNDATASIZE
0x9e3 PUSH1 0x20
0x9e5 DUP2
0x9e6 LT
0x9e7 ISZERO
0x9e8 PUSH2 0x9f0
0x9eb JUMPI
---
0x9da: JUMPDEST 
0x9df: V904 = 0x40
0x9e1: V905 = M[0x40]
0x9e2: V906 = RETURNDATASIZE
0x9e3: V907 = 0x20
0x9e6: V908 = LT V906 0x20
0x9e7: V909 = ISZERO V908
0x9e8: V910 = 0x9f0
0x9eb: JUMPI 0x9f0 V909
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S11, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V897]
Stack pops: 4
Stack additions: [V905, V906]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S11, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, V905, V906]

================================

Block 0x9ec
[0x9ec:0x9ef]
---
Predecessors: [0x9da]
Successors: []
---
0x9ec PUSH1 0x0
0x9ee DUP1
0x9ef REVERT
---
0x9ec: V911 = 0x0
0x9ef: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S9, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V905, V906]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S9, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V905, V906]

================================

Block 0x9f0
[0x9f0:0xa3a]
---
Predecessors: [0x9da]
Successors: [0xa3b, 0xa3f]
---
0x9f0 JUMPDEST
0x9f1 POP
0x9f2 MLOAD
0x9f3 PUSH1 0x40
0x9f5 DUP1
0x9f6 MLOAD
0x9f7 PUSH1 0xe0
0x9f9 PUSH1 0x2
0x9fb EXP
0x9fc PUSH4 0xffffffff
0xa01 DUP7
0xa02 AND
0xa03 MUL
0xa04 DUP2
0xa05 MSTORE
0xa06 PUSH1 0x1
0xa08 PUSH1 0xa0
0xa0a PUSH1 0x2
0xa0c EXP
0xa0d SUB
0xa0e SWAP1
0xa0f SWAP4
0xa10 AND
0xa11 PUSH1 0x4
0xa13 DUP5
0xa14 ADD
0xa15 MSTORE
0xa16 PUSH1 0x24
0xa18 DUP4
0xa19 ADD
0xa1a SWAP2
0xa1b SWAP1
0xa1c SWAP2
0xa1d MSTORE
0xa1e MLOAD
0xa1f PUSH1 0x44
0xa21 DUP1
0xa22 DUP4
0xa23 ADD
0xa24 SWAP3
0xa25 PUSH1 0x20
0xa27 SWAP3
0xa28 SWAP2
0xa29 SWAP1
0xa2a DUP3
0xa2b SWAP1
0xa2c SUB
0xa2d ADD
0xa2e DUP2
0xa2f PUSH1 0x0
0xa31 DUP8
0xa32 DUP1
0xa33 EXTCODESIZE
0xa34 ISZERO
0xa35 DUP1
0xa36 ISZERO
0xa37 PUSH2 0xa3f
0xa3a JUMPI
---
0x9f0: JUMPDEST 
0x9f2: V912 = M[V905]
0x9f3: V913 = 0x40
0x9f6: V914 = M[0x40]
0x9f7: V915 = 0xe0
0x9f9: V916 = 0x2
0x9fb: V917 = EXP 0x2 0xe0
0x9fc: V918 = 0xffffffff
0xa02: V919 = AND 0xa9059cbb 0xffffffff
0xa03: V920 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa05: M[V914] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa06: V921 = 0x1
0xa08: V922 = 0xa0
0xa0a: V923 = 0x2
0xa0c: V924 = EXP 0x2 0xa0
0xa0d: V925 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa10: V926 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa11: V927 = 0x4
0xa14: V928 = ADD V914 0x4
0xa15: M[V928] = V926
0xa16: V929 = 0x24
0xa19: V930 = ADD V914 0x24
0xa1d: M[V930] = V912
0xa1e: V931 = M[0x40]
0xa1f: V932 = 0x44
0xa23: V933 = ADD V914 0x44
0xa25: V934 = 0x20
0xa2c: V935 = SUB V914 V931
0xa2d: V936 = ADD V935 0x44
0xa2f: V937 = 0x0
0xa33: V938 = EXTCODESIZE S4
0xa34: V939 = ISZERO V938
0xa36: V940 = ISZERO V939
0xa37: V941 = 0xa3f
0xa3a: JUMPI 0xa3f V940
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S9, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V905, V906]
Stack pops: 5
Stack additions: [S4, S3, V933, 0x20, V931, V936, V931, 0x0, S4, V939]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S9, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, V933, 0x20, V931, V936, V931, 0x0, S4, V939]

================================

Block 0xa3b
[0xa3b:0xa3e]
---
Predecessors: [0x9f0]
Successors: []
---
0xa3b PUSH1 0x0
0xa3d DUP1
0xa3e REVERT
---
0xa3b: V942 = 0x0
0xa3e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S14, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V933, 0x20, V931, V936, V931, 0x0, S1, V939]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S14, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V933, 0x20, V931, V936, V931, 0x0, S1, V939]

================================

Block 0xa3f
[0xa3f:0xa49]
---
Predecessors: [0x9f0]
Successors: [0xa4a, 0xa53]
---
0xa3f JUMPDEST
0xa40 POP
0xa41 GAS
0xa42 CALL
0xa43 ISZERO
0xa44 DUP1
0xa45 ISZERO
0xa46 PUSH2 0xa53
0xa49 JUMPI
---
0xa3f: JUMPDEST 
0xa41: V943 = GAS
0xa42: V944 = CALL V943 S1 0x0 V931 V936 V931 0x20
0xa43: V945 = ISZERO V944
0xa45: V946 = ISZERO V945
0xa46: V947 = 0xa53
0xa49: JUMPI 0xa53 V946
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S14, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V933, 0x20, V931, V936, V931, 0x0, S1, V939]
Stack pops: 7
Stack additions: [V945]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S14, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V933, V945]

================================

Block 0xa4a
[0xa4a:0xa52]
---
Predecessors: [0xa3f]
Successors: []
---
0xa4a RETURNDATASIZE
0xa4b PUSH1 0x0
0xa4d DUP1
0xa4e RETURNDATACOPY
0xa4f RETURNDATASIZE
0xa50 PUSH1 0x0
0xa52 REVERT
---
0xa4a: V948 = RETURNDATASIZE
0xa4b: V949 = 0x0
0xa4e: RETURNDATACOPY 0x0 0x0 V948
0xa4f: V950 = RETURNDATASIZE
0xa50: V951 = 0x0
0xa52: REVERT 0x0 V950
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S8, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V945]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S8, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V945]

================================

Block 0xa53
[0xa53:0xa64]
---
Predecessors: [0xa3f]
Successors: [0xa65, 0xa69]
---
0xa53 JUMPDEST
0xa54 POP
0xa55 POP
0xa56 POP
0xa57 POP
0xa58 PUSH1 0x40
0xa5a MLOAD
0xa5b RETURNDATASIZE
0xa5c PUSH1 0x20
0xa5e DUP2
0xa5f LT
0xa60 ISZERO
0xa61 PUSH2 0xa69
0xa64 JUMPI
---
0xa53: JUMPDEST 
0xa58: V952 = 0x40
0xa5a: V953 = M[0x40]
0xa5b: V954 = RETURNDATASIZE
0xa5c: V955 = 0x20
0xa5f: V956 = LT V954 0x20
0xa60: V957 = ISZERO V956
0xa61: V958 = 0xa69
0xa64: JUMPI 0xa69 V957
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S8, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V945]
Stack pops: 4
Stack additions: [V953, V954]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S8, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S4, V953, V954]

================================

Block 0xa65
[0xa65:0xa68]
---
Predecessors: [0xa53]
Successors: []
---
0xa65 PUSH1 0x0
0xa67 DUP1
0xa68 REVERT
---
0xa65: V959 = 0x0
0xa68: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S6, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S2, V953, V954]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S6, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S2, V953, V954]

================================

Block 0xa69
[0xa69:0xa71]
---
Predecessors: [0xa53]
Successors: [0xa72, 0xa76]
---
0xa69 JUMPDEST
0xa6a POP
0xa6b MLOAD
0xa6c ISZERO
0xa6d ISZERO
0xa6e PUSH2 0xa76
0xa71 JUMPI
---
0xa69: JUMPDEST 
0xa6b: V960 = M[V953]
0xa6c: V961 = ISZERO V960
0xa6d: V962 = ISZERO V961
0xa6e: V963 = 0xa76
0xa71: JUMPI 0xa76 V962
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S6, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S2, V953, V954]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S6, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S2]

================================

Block 0xa72
[0xa72:0xa75]
---
Predecessors: [0xa69]
Successors: []
---
0xa72 PUSH1 0x0
0xa74 DUP1
0xa75 REVERT
---
0xa72: V964 = 0x0
0xa75: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]

================================

Block 0xa76
[0xa76:0xaa5]
---
Predecessors: [0xa69]
Successors: [0xaa6, 0xaaa]
---
0xa76 JUMPDEST
0xa77 PUSH1 0x1
0xa79 SLOAD
0xa7a PUSH1 0x40
0xa7c MLOAD
0xa7d PUSH1 0x1
0xa7f PUSH1 0xa0
0xa81 PUSH1 0x2
0xa83 EXP
0xa84 SUB
0xa85 SWAP1
0xa86 SWAP2
0xa87 AND
0xa88 SWAP1
0xa89 ADDRESS
0xa8a BALANCE
0xa8b DUP1
0xa8c ISZERO
0xa8d PUSH2 0x8fc
0xa90 MUL
0xa91 SWAP2
0xa92 PUSH1 0x0
0xa94 DUP2
0xa95 DUP2
0xa96 DUP2
0xa97 DUP6
0xa98 DUP9
0xa99 DUP9
0xa9a CALL
0xa9b SWAP4
0xa9c POP
0xa9d POP
0xa9e POP
0xa9f POP
0xaa0 ISZERO
0xaa1 ISZERO
0xaa2 PUSH2 0xaaa
0xaa5 JUMPI
---
0xa76: JUMPDEST 
0xa77: V965 = 0x1
0xa79: V966 = S[0x1]
0xa7a: V967 = 0x40
0xa7c: V968 = M[0x40]
0xa7d: V969 = 0x1
0xa7f: V970 = 0xa0
0xa81: V971 = 0x2
0xa83: V972 = EXP 0x2 0xa0
0xa84: V973 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa87: V974 = AND V966 0xffffffffffffffffffffffffffffffffffffffff
0xa89: V975 = ADDRESS
0xa8a: V976 = BALANCE V975
0xa8c: V977 = ISZERO V976
0xa8d: V978 = 0x8fc
0xa90: V979 = MUL 0x8fc V977
0xa92: V980 = 0x0
0xa9a: V981 = CALL V979 V974 V976 V968 0x0 V968 0x0
0xaa0: V982 = ISZERO V981
0xaa1: V983 = ISZERO V982
0xaa2: V984 = 0xaaa
0xaa5: JUMPI 0xaaa V983
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]

================================

Block 0xaa6
[0xaa6:0xaa9]
---
Predecessors: [0xa76]
Successors: []
---
0xaa6 PUSH1 0x0
0xaa8 DUP1
0xaa9 REVERT
---
0xaa6: V985 = 0x0
0xaa9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]

================================

Block 0xaaa
[0xaaa:0xab2]
---
Predecessors: [0xa76]
Successors: [0x1c8, 0x316]
---
0xaaa JUMPDEST
0xaab PUSH1 0x1
0xaad SWAP3
0xaae POP
0xaaf POP
0xab0 POP
0xab1 SWAP1
0xab2 JUMP
---
0xaaa: JUMPDEST 
0xaab: V986 = 0x1
0xab2: JUMP {0x1c8, 0x316}
---
Entry stack: [V13, 0x10f, {0x0, 0x1}, S4, {0x1c8, 0x316}, 0x0, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, 0x10f, {0x0, 0x1}, S4, 0x1]

================================

Block 0xab3
[0xab3:0xab8]
---
Predecessors: [0x254]
Successors: [0x13e]
---
0xab3 JUMPDEST
0xab4 PUSH1 0x2
0xab6 SLOAD
0xab7 DUP2
0xab8 JUMP
---
0xab3: JUMPDEST 
0xab4: V987 = 0x2
0xab6: V988 = S[0x2]
0xab8: JUMP 0x13e
---
Entry stack: [V13, 0x13e]
Stack pops: 1
Stack additions: [S0, V988]
Exit stack: [V13, 0x13e, V988]

================================

Block 0xab9
[0xab9:0xabe]
---
Predecessors: [0x269]
Successors: [0x13e]
---
0xab9 JUMPDEST
0xaba PUSH1 0x6
0xabc SLOAD
0xabd DUP2
0xabe JUMP
---
0xab9: JUMPDEST 
0xaba: V989 = 0x6
0xabc: V990 = S[0x6]
0xabe: JUMP 0x13e
---
Entry stack: [V13, 0x13e]
Stack pops: 1
Stack additions: [S0, V990]
Exit stack: [V13, 0x13e, V990]

================================

Block 0xabf
[0xabf:0xacd]
---
Predecessors: [0x27e]
Successors: [0xde]
---
0xabf JUMPDEST
0xac0 PUSH1 0x0
0xac2 SLOAD
0xac3 PUSH1 0x1
0xac5 PUSH1 0xa0
0xac7 PUSH1 0x2
0xac9 EXP
0xaca SUB
0xacb AND
0xacc DUP2
0xacd JUMP
---
0xabf: JUMPDEST 
0xac0: V991 = 0x0
0xac2: V992 = S[0x0]
0xac3: V993 = 0x1
0xac5: V994 = 0xa0
0xac7: V995 = 0x2
0xac9: V996 = EXP 0x2 0xa0
0xaca: V997 = SUB 0x10000000000000000000000000000000000000000 0x1
0xacb: V998 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0xacd: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V998]
Exit stack: [V13, 0xde, V998]

================================

Block 0xace
[0xace:0xafc]
---
Predecessors: []
Successors: []
---
0xace STOP
0xacf LOG1
0xad0 PUSH6 0x627a7a723058
0xad7 SHA3
0xad8 MISSING 0x4e
0xad9 MISSING 0xcd
0xada DUP1
0xadb DUP2
0xadc MISSING 0xed
0xadd NUMBER
0xade MISSING 0xb2
0xadf MISSING 0xd2
0xae0 PUSH28 0xf2429b74ffc21386495e2cbef788f2f2ccdc28b5b4191c0029
---
0xace: STOP 
0xacf: LOG S0 S1 S2
0xad0: V999 = 0x627a7a723058
0xad7: V1000 = SHA3 0x627a7a723058 S3
0xad8: MISSING 0x4e
0xad9: MISSING 0xcd
0xadc: MISSING 0xed
0xadd: V1001 = NUMBER
0xade: MISSING 0xb2
0xadf: MISSING 0xd2
0xae0: V1002 = 0xf2429b74ffc21386495e2cbef788f2f2ccdc28b5b4191c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1000, S0, S0, S0, V1001, 0xf2429b74ffc21386495e2cbef788f2f2ccdc28b5b4191c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x14bfd6d0
Entry block: 0xc6
Exit block: 0xde
Body: 0xc6, 0xce, 0xd2, 0xde, 0x287, 0x294, 0x295

Function 1:
Public function signature: 0x35a063b4
Entry block: 0xfa
Exit block: 0x31d
Body: 0xfa, 0x102, 0x106, 0x2af, 0x2b3, 0x2c1, 0x2d3, 0x2d4, 0x2f0, 0x2f6, 0x2fe, 0x30a, 0x30e, 0x316, 0x31d, 0x321

Function 2:
Public function signature: 0x4783c35b
Entry block: 0x111
Exit block: 0xde
Body: 0xde, 0x111, 0x119, 0x11d, 0x32f

Function 3:
Public function signature: 0x53f754e0
Entry block: 0x126
Exit block: 0x13e
Body: 0x126, 0x12e, 0x132, 0x13e

Function 4:
Public function signature: 0x63037b0c
Entry block: 0x150
Exit block: 0x168
Body: 0x150, 0x158, 0x15c, 0x168, 0x358, 0x365, 0x366

Function 5:
Public function signature: 0x66829b16
Entry block: 0x192
Exit block: 0x10f
Body: 0x10f, 0x192, 0x19a, 0x19e, 0x396, 0x39a, 0x3a8, 0x3ba, 0x3bb, 0x3d7, 0x3dd, 0x3e5, 0x3f1, 0x3f5

Function 6:
Public function signature: 0x6901f668
Entry block: 0x1b3
Exit block: 0x1bb
Body: 0x1b3, 0x1bb, 0x1bf, 0x1c8

Function 7:
Public function signature: 0x853828b6
Entry block: 0x1dc
Exit block: 0x79e
Body: 0x10f, 0x1dc, 0x1e4, 0x1e8, 0x5eb, 0x5f0, 0x5fe, 0x610, 0x611, 0x62d, 0x633, 0x63b, 0x647, 0x64b, 0x653, 0x65a, 0x65e, 0x663, 0x66e, 0x67a, 0x67b, 0x69a, 0x6a1, 0x6a7, 0x6ce, 0x6cf, 0x702, 0x753, 0x757, 0x762, 0x76b, 0x77d, 0x781, 0x78a, 0x78e, 0x79e, 0x79f, 0x7c2, 0x7cd

Function 8:
Public function signature: 0x93e88f3a
Entry block: 0x1f1
Exit block: 0x13e
Body: 0x13e, 0x1f1, 0x1f9, 0x1fd, 0x7d2, 0x7d7, 0x7e2, 0x7ee, 0x7ef, 0x80d, 0x821, 0x827, 0x82f

Function 9:
Public function signature: 0x9c75dd35
Entry block: 0x206
Exit block: 0x10f
Body: 0x10f, 0x206, 0x20e, 0x212, 0x835, 0x83a, 0x848, 0x85a, 0x85b, 0x877, 0x87d, 0x885, 0x891, 0x895, 0x89a, 0x8a5, 0x8b4, 0x8b5, 0x8e3

Function 10:
Public function signature: 0xba3f5a12
Entry block: 0x21e
Exit block: 0x13e
Body: 0x13e, 0x21e, 0x226, 0x22a, 0x8eb

Function 11:
Public function signature: 0xdb171211
Entry block: 0x233
Exit block: 0x1c8
Body: 0x1c8, 0x233, 0x23b, 0x23f

Function 12:
Public function signature: 0xe09adc70
Entry block: 0x248
Exit block: 0x13e
Body: 0x13e, 0x248, 0x250, 0x254, 0xab3

Function 13:
Public function signature: 0xeffd88b7
Entry block: 0x25d
Exit block: 0x13e
Body: 0x13e, 0x25d, 0x265, 0x269, 0xab9

Function 14:
Public function signature: 0xfc0c546a
Entry block: 0x272
Exit block: 0xde
Body: 0xde, 0x272, 0x27a, 0x27e, 0xabf

Function 15:
Public fallback function
Entry block: 0xc1
Exit block: 0xc1
Body: 0xc1

Function 16:
Private function
Entry block: 0x426
Exit block: 0x5e4
Body: 0x426, 0x42b, 0x436, 0x443, 0x461, 0x48c, 0x492, 0x49a, 0x50a, 0x51e, 0x534, 0x53f, 0x5b5, 0x5c9, 0x5df, 0x5e4

Function 17:
Private function
Entry block: 0x8f1
Exit block: 0xaaa
Body: 0x8f1, 0x8f6, 0x904, 0x917, 0x933, 0x939, 0x941, 0x951, 0x9c6, 0x9da, 0x9f0, 0xa3f, 0xa53, 0xa69, 0xa76, 0xaaa

Function 18:
Private function
Entry block: 0x475
Exit block: 0x351
Body: 0x33e, 0x351, 0x475

