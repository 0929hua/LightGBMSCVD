Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10c
0xa: JUMPI 0x10c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x11d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x11d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x11d
0x24: JUMPI 0x11d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1ad]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x1ad
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x1ad
0x2f: JUMPI 0x1ad V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1e0]
---
0x30 DUP1
0x31 PUSH4 0x15143d6a
0x36 EQ
0x37 PUSH2 0x1e0
0x3a JUMPI
---
0x31: V19 = 0x15143d6a
0x36: V20 = EQ 0x15143d6a V12
0x37: V21 = 0x1e0
0x3a: JUMPI 0x1e0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1ea]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x1ea
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x1ea
0x45: JUMPI 0x1ea V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x20c]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x20c
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x20c
0x50: JUMPI 0x20c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x245]
---
0x51 DUP1
0x52 PUSH4 0x2e1a7d4d
0x57 EQ
0x58 PUSH2 0x245
0x5b JUMPI
---
0x52: V28 = 0x2e1a7d4d
0x57: V29 = EQ 0x2e1a7d4d V12
0x58: V30 = 0x245
0x5b: JUMPI 0x245 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x26c]
---
0x5c DUP1
0x5d PUSH4 0x70a08231
0x62 EQ
0x63 PUSH2 0x26c
0x66 JUMPI
---
0x5d: V31 = 0x70a08231
0x62: V32 = EQ 0x70a08231 V12
0x63: V33 = 0x26c
0x66: JUMPI 0x26c V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x29a]
---
0x67 DUP1
0x68 PUSH4 0x75b4d78c
0x6d EQ
0x6e PUSH2 0x29a
0x71 JUMPI
---
0x68: V34 = 0x75b4d78c
0x6d: V35 = EQ 0x75b4d78c V12
0x6e: V36 = 0x29a
0x71: JUMPI 0x29a V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2bc]
---
0x72 DUP1
0x73 PUSH4 0x773ef1cf
0x78 EQ
0x79 PUSH2 0x2bc
0x7c JUMPI
---
0x73: V37 = 0x773ef1cf
0x78: V38 = EQ 0x773ef1cf V12
0x79: V39 = 0x2bc
0x7c: JUMPI 0x2bc V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2e0]
---
0x7d DUP1
0x7e PUSH4 0x8da58897
0x83 EQ
0x84 PUSH2 0x2e0
0x87 JUMPI
---
0x7e: V40 = 0x8da58897
0x83: V41 = EQ 0x8da58897 V12
0x84: V42 = 0x2e0
0x87: JUMPI 0x2e0 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x302]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x302
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x302
0x92: JUMPI 0x302 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x32e]
---
0x93 DUP1
0x94 PUSH4 0x955ef429
0x99 EQ
0x9a PUSH2 0x32e
0x9d JUMPI
---
0x94: V46 = 0x955ef429
0x99: V47 = EQ 0x955ef429 V12
0x9a: V48 = 0x32e
0x9d: JUMPI 0x32e V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x340]
---
0x9e DUP1
0x9f PUSH4 0x95d89b41
0xa4 EQ
0xa5 PUSH2 0x340
0xa8 JUMPI
---
0x9f: V49 = 0x95d89b41
0xa4: V50 = EQ 0x95d89b41 V12
0xa5: V51 = 0x340
0xa8: JUMPI 0x340 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x3d0]
---
0xa9 DUP1
0xaa PUSH4 0xa391c15b
0xaf EQ
0xb0 PUSH2 0x3d0
0xb3 JUMPI
---
0xaa: V52 = 0xa391c15b
0xaf: V53 = EQ 0xa391c15b V12
0xb0: V54 = 0x3d0
0xb3: JUMPI 0x3d0 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x3f8]
---
0xb4 DUP1
0xb5 PUSH4 0xa6f9dae1
0xba EQ
0xbb PUSH2 0x3f8
0xbe JUMPI
---
0xb5: V55 = 0xa6f9dae1
0xba: V56 = EQ 0xa6f9dae1 V12
0xbb: V57 = 0x3f8
0xbe: JUMPI 0x3f8 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x416]
---
0xbf DUP1
0xc0 PUSH4 0xa7be85c6
0xc5 EQ
0xc6 PUSH2 0x416
0xc9 JUMPI
---
0xc0: V58 = 0xa7be85c6
0xc5: V59 = EQ 0xa7be85c6 V12
0xc6: V60 = 0x416
0xc9: JUMPI 0x416 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x442]
---
0xca DUP1
0xcb PUSH4 0xa9059cbb
0xd0 EQ
0xd1 PUSH2 0x442
0xd4 JUMPI
---
0xcb: V61 = 0xa9059cbb
0xd0: V62 = EQ 0xa9059cbb V12
0xd1: V63 = 0x442
0xd4: JUMPI 0x442 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x475]
---
0xd5 DUP1
0xd6 PUSH4 0xb66a0e5d
0xdb EQ
0xdc PUSH2 0x475
0xdf JUMPI
---
0xd6: V64 = 0xb66a0e5d
0xdb: V65 = EQ 0xb66a0e5d V12
0xdc: V66 = 0x475
0xdf: JUMPI 0x475 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x487]
---
0xe0 DUP1
0xe1 PUSH4 0xc8a4ac9c
0xe6 EQ
0xe7 PUSH2 0x487
0xea JUMPI
---
0xe1: V67 = 0xc8a4ac9c
0xe6: V68 = EQ 0xc8a4ac9c V12
0xe7: V69 = 0x487
0xea: JUMPI 0x487 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x4af]
---
0xeb DUP1
0xec PUSH4 0xd233e5c0
0xf1 EQ
0xf2 PUSH2 0x4af
0xf5 JUMPI
---
0xec: V70 = 0xd233e5c0
0xf1: V71 = EQ 0xd233e5c0 V12
0xf2: V72 = 0x4af
0xf5: JUMPI 0x4af V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x4dd]
---
0xf6 DUP1
0xf7 PUSH4 0xdd62ed3e
0xfc EQ
0xfd PUSH2 0x4dd
0x100 JUMPI
---
0xf7: V73 = 0xdd62ed3e
0xfc: V74 = EQ 0xdd62ed3e V12
0xfd: V75 = 0x4dd
0x100: JUMPI 0x4dd V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x511]
---
0x101 DUP1
0x102 PUSH4 0xe5a93dd8
0x107 EQ
0x108 PUSH2 0x511
0x10b JUMPI
---
0x102: V76 = 0xe5a93dd8
0x107: V77 = EQ 0xe5a93dd8 V12
0x108: V78 = 0x511
0x10b: JUMPI 0x511 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x0, 0x101]
Successors: [0x110]
---
0x10c JUMPDEST
0x10d PUSH2 0x11b
---
0x10c: JUMPDEST 
0x10d: V79 = 0x11b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V12, 0x11b]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x10c]
Successors: [0x533]
---
0x110 JUMPDEST
0x111 PUSH2 0x118
0x114 PUSH2 0x533
0x117 JUMP
---
0x110: JUMPDEST 
0x111: V80 = 0x118
0x114: V81 = 0x533
0x117: JUMP 0x533
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V12, 0x11b, 0x118]

================================

Block 0x118
[0x118:0x118]
---
Predecessors: [0x119, 0x607, 0x93e, 0xa54]
Successors: [0x119]
---
0x118 JUMPDEST
---
0x118: JUMPDEST 
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, S0]

================================

Block 0x119
[0x119:0x11a]
---
Predecessors: [0x118]
Successors: [0x118, 0x11b, 0x58a]
---
0x119 JUMPDEST
0x11a JUMP
---
0x119: JUMPDEST 
0x11a: JUMP S0
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1]

================================

Block 0x11b
[0x11b:0x11c]
---
Predecessors: [0x119, 0x607, 0x93e, 0x97e, 0xab2]
Successors: []
---
0x11b JUMPDEST
0x11c STOP
---
0x11b: JUMPDEST 
0x11c: STOP 
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, S0]

================================

Block 0x11d
[0x11d:0x123]
---
Predecessors: [0xb]
Successors: [0x124, 0x125]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f ISZERO
0x120 PUSH2 0x125
0x123 JUMPI
---
0x11d: JUMPDEST 
0x11e: V82 = CALLVALUE
0x11f: V83 = ISZERO V82
0x120: V84 = 0x125
0x123: JUMPI 0x125 V83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x124
[0x124:0x124]
---
Predecessors: [0x11d]
Successors: []
---
0x124 INVALID
---
0x124: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0x11d]
Successors: [0x60a]
---
0x125 JUMPDEST
0x126 PUSH2 0x12d
0x129 PUSH2 0x60a
0x12c JUMP
---
0x125: JUMPDEST 
0x126: V85 = 0x12d
0x129: V86 = 0x60a
0x12c: JUMP 0x60a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x12d
[0x12d:0x152]
---
Predecessors: [0x60a, 0x906]
Successors: [0x153, 0x173]
---
0x12d JUMPDEST
0x12e PUSH1 0x40
0x130 DUP1
0x131 MLOAD
0x132 PUSH1 0x20
0x134 DUP1
0x135 DUP3
0x136 MSTORE
0x137 DUP4
0x138 MLOAD
0x139 DUP2
0x13a DUP4
0x13b ADD
0x13c MSTORE
0x13d DUP4
0x13e MLOAD
0x13f SWAP2
0x140 SWAP3
0x141 DUP4
0x142 SWAP3
0x143 SWAP1
0x144 DUP4
0x145 ADD
0x146 SWAP2
0x147 DUP6
0x148 ADD
0x149 SWAP1
0x14a DUP1
0x14b DUP4
0x14c DUP4
0x14d DUP3
0x14e ISZERO
0x14f PUSH2 0x173
0x152 JUMPI
---
0x12d: JUMPDEST 
0x12e: V87 = 0x40
0x131: V88 = M[0x40]
0x132: V89 = 0x20
0x136: M[V88] = 0x20
0x138: V90 = M[S0]
0x13b: V91 = ADD V88 0x20
0x13c: M[V91] = V90
0x13e: V92 = M[S0]
0x145: V93 = ADD V88 0x40
0x148: V94 = ADD S0 0x20
0x14e: V95 = ISZERO V92
0x14f: V96 = 0x173
0x152: JUMPI 0x173 V95
---
Entry stack: [V12, 0x12d, S0]
Stack pops: 1
Stack additions: [S0, V88, V88, V93, V94, V92, V92, V93, V94]
Exit stack: [V12, 0x12d, S0, V88, V88, V93, V94, V92, V92, V93, V94]

================================

Block 0x153
[0x153:0x160]
---
Predecessors: [0x12d, 0x161, 0x384]
Successors: [0x161, 0x173]
---
0x153 JUMPDEST
0x154 DUP1
0x155 MLOAD
0x156 DUP3
0x157 MSTORE
0x158 PUSH1 0x20
0x15a DUP4
0x15b GT
0x15c ISZERO
0x15d PUSH2 0x173
0x160 JUMPI
---
0x153: JUMPDEST 
0x155: V97 = M[S0]
0x157: M[S1] = V97
0x158: V98 = 0x20
0x15b: V99 = GT S2 0x20
0x15c: V100 = ISZERO V99
0x15d: V101 = 0x173
0x160: JUMPI 0x173 V100
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x161
[0x161:0x172]
---
Predecessors: [0x153]
Successors: [0x153]
---
0x161 PUSH1 0x1f
0x163 NOT
0x164 SWAP1
0x165 SWAP3
0x166 ADD
0x167 SWAP2
0x168 PUSH1 0x20
0x16a SWAP2
0x16b DUP3
0x16c ADD
0x16d SWAP2
0x16e ADD
0x16f PUSH2 0x153
0x172 JUMP
---
0x161: V102 = 0x1f
0x163: V103 = NOT 0x1f
0x166: V104 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x168: V105 = 0x20
0x16c: V106 = ADD 0x20 S1
0x16e: V107 = ADD 0x20 S0
0x16f: V108 = 0x153
0x172: JUMP 0x153
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V104, V106, V107]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, V104, V106, V107]

================================

Block 0x173
[0x173:0x185]
---
Predecessors: [0x12d, 0x153, 0x350, 0x376]
Successors: [0x186, 0x19f]
---
0x173 JUMPDEST
0x174 POP
0x175 POP
0x176 POP
0x177 SWAP1
0x178 POP
0x179 SWAP1
0x17a DUP2
0x17b ADD
0x17c SWAP1
0x17d PUSH1 0x1f
0x17f AND
0x180 DUP1
0x181 ISZERO
0x182 PUSH2 0x19f
0x185 JUMPI
---
0x173: JUMPDEST 
0x17b: V109 = ADD S3 S5
0x17d: V110 = 0x1f
0x17f: V111 = AND 0x1f S3
0x181: V112 = ISZERO V111
0x182: V113 = 0x19f
0x185: JUMPI 0x19f V112
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V109, V111]
Exit stack: [V12, 0x12d, S8, S7, S6, V109, V111]

================================

Block 0x186
[0x186:0x19e]
---
Predecessors: [0x173]
Successors: [0x19f]
---
0x186 DUP1
0x187 DUP3
0x188 SUB
0x189 DUP1
0x18a MLOAD
0x18b PUSH1 0x1
0x18d DUP4
0x18e PUSH1 0x20
0x190 SUB
0x191 PUSH2 0x100
0x194 EXP
0x195 SUB
0x196 NOT
0x197 AND
0x198 DUP2
0x199 MSTORE
0x19a PUSH1 0x20
0x19c ADD
0x19d SWAP2
0x19e POP
---
0x188: V114 = SUB V109 V111
0x18a: V115 = M[V114]
0x18b: V116 = 0x1
0x18e: V117 = 0x20
0x190: V118 = SUB 0x20 V111
0x191: V119 = 0x100
0x194: V120 = EXP 0x100 V118
0x195: V121 = SUB V120 0x1
0x196: V122 = NOT V121
0x197: V123 = AND V122 V115
0x199: M[V114] = V123
0x19a: V124 = 0x20
0x19c: V125 = ADD 0x20 V114
---
Entry stack: [V12, 0x12d, S4, S3, S2, V109, V111]
Stack pops: 2
Stack additions: [V125, S0]
Exit stack: [V12, 0x12d, S4, S3, S2, V125, V111]

================================

Block 0x19f
[0x19f:0x1ac]
---
Predecessors: [0x173, 0x186, 0x396]
Successors: []
---
0x19f JUMPDEST
0x1a0 POP
0x1a1 SWAP3
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 SWAP2
0x1aa SUB
0x1ab SWAP1
0x1ac RETURN
---
0x19f: JUMPDEST 
0x1a5: V126 = 0x40
0x1a7: V127 = M[0x40]
0x1aa: V128 = SUB S1 V127
0x1ac: RETURN V127 V128
---
Entry stack: [V12, 0x12d, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x25]
Successors: [0x1b4, 0x1b5]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af ISZERO
0x1b0 PUSH2 0x1b5
0x1b3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V129 = CALLVALUE
0x1af: V130 = ISZERO V129
0x1b0: V131 = 0x1b5
0x1b3: JUMPI 0x1b5 V130
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b4
[0x1b4:0x1b4]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b4 INVALID
---
0x1b4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b5
[0x1b5:0x1cb]
---
Predecessors: [0x1ad]
Successors: [0x629]
---
0x1b5 JUMPDEST
0x1b6 PUSH2 0x1cc
0x1b9 PUSH1 0x1
0x1bb PUSH1 0xa0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 SUB
0x1c1 PUSH1 0x4
0x1c3 CALLDATALOAD
0x1c4 AND
0x1c5 PUSH1 0x24
0x1c7 CALLDATALOAD
0x1c8 PUSH2 0x629
0x1cb JUMP
---
0x1b5: JUMPDEST 
0x1b6: V132 = 0x1cc
0x1b9: V133 = 0x1
0x1bb: V134 = 0xa0
0x1bd: V135 = 0x2
0x1bf: V136 = EXP 0x2 0xa0
0x1c0: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c1: V138 = 0x4
0x1c3: V139 = CALLDATALOAD 0x4
0x1c4: V140 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V141 = 0x24
0x1c7: V142 = CALLDATALOAD 0x24
0x1c8: V143 = 0x629
0x1cb: JUMP 0x629
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cc, V140, V142]
Exit stack: [V12, 0x1cc, V140, V142]

================================

Block 0x1cc
[0x1cc:0x1df]
---
Predecessors: [0x6a1, 0x7af, 0x819, 0x8c1, 0xa29]
Successors: []
---
0x1cc JUMPDEST
0x1cd PUSH1 0x40
0x1cf DUP1
0x1d0 MLOAD
0x1d1 SWAP2
0x1d2 ISZERO
0x1d3 ISZERO
0x1d4 DUP3
0x1d5 MSTORE
0x1d6 MLOAD
0x1d7 SWAP1
0x1d8 DUP2
0x1d9 SWAP1
0x1da SUB
0x1db PUSH1 0x20
0x1dd ADD
0x1de SWAP1
0x1df RETURN
---
0x1cc: JUMPDEST 
0x1cd: V144 = 0x40
0x1d0: V145 = M[0x40]
0x1d2: V146 = ISZERO S0
0x1d3: V147 = ISZERO V146
0x1d5: M[V145] = V147
0x1d6: V148 = M[0x40]
0x1da: V149 = SUB V145 V148
0x1db: V150 = 0x20
0x1dd: V151 = ADD 0x20 V149
0x1df: RETURN V148 V151
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1]

================================

Block 0x1e0
[0x1e0:0x1e7]
---
Predecessors: [0x30]
Successors: [0x533]
---
0x1e0 JUMPDEST
0x1e1 PUSH2 0x11b
0x1e4 PUSH2 0x533
0x1e7 JUMP
---
0x1e0: JUMPDEST 
0x1e1: V152 = 0x11b
0x1e4: V153 = 0x533
0x1e7: JUMP 0x533
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V12, 0x11b]

================================

Block 0x1e8
[0x1e8:0x1e9]
---
Predecessors: []
Successors: []
---
0x1e8 JUMPDEST
0x1e9 STOP
---
0x1e8: JUMPDEST 
0x1e9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ea
[0x1ea:0x1f0]
---
Predecessors: [0x3b]
Successors: [0x1f1, 0x1f2]
---
0x1ea JUMPDEST
0x1eb CALLVALUE
0x1ec ISZERO
0x1ed PUSH2 0x1f2
0x1f0 JUMPI
---
0x1ea: JUMPDEST 
0x1eb: V154 = CALLVALUE
0x1ec: V155 = ISZERO V154
0x1ed: V156 = 0x1f2
0x1f0: JUMPI 0x1f2 V155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f1
[0x1f1:0x1f1]
---
Predecessors: [0x1ea]
Successors: []
---
0x1f1 INVALID
---
0x1f1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f2
[0x1f2:0x1f9]
---
Predecessors: [0x1ea]
Successors: [0x6a7]
---
0x1f2 JUMPDEST
0x1f3 PUSH2 0x1fa
0x1f6 PUSH2 0x6a7
0x1f9 JUMP
---
0x1f2: JUMPDEST 
0x1f3: V157 = 0x1fa
0x1f6: V158 = 0x6a7
0x1f9: JUMP 0x6a7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa]
Exit stack: [V12, 0x1fa]

================================

Block 0x1fa
[0x1fa:0x20b]
---
Predecessors: [0x6ab, 0x838, 0x8ae, 0x8c4, 0x93e, 0xaeb, 0xb24, 0xb2a]
Successors: []
---
0x1fa JUMPDEST
0x1fb PUSH1 0x40
0x1fd DUP1
0x1fe MLOAD
0x1ff SWAP2
0x200 DUP3
0x201 MSTORE
0x202 MLOAD
0x203 SWAP1
0x204 DUP2
0x205 SWAP1
0x206 SUB
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP1
0x20b RETURN
---
0x1fa: JUMPDEST 
0x1fb: V159 = 0x40
0x1fe: V160 = M[0x40]
0x201: M[V160] = S0
0x202: V161 = M[0x40]
0x206: V162 = SUB V160 V161
0x207: V163 = 0x20
0x209: V164 = ADD 0x20 V162
0x20b: RETURN V161 V164
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2, S1]

================================

Block 0x20c
[0x20c:0x212]
---
Predecessors: [0x46]
Successors: [0x213, 0x214]
---
0x20c JUMPDEST
0x20d CALLVALUE
0x20e ISZERO
0x20f PUSH2 0x214
0x212 JUMPI
---
0x20c: JUMPDEST 
0x20d: V165 = CALLVALUE
0x20e: V166 = ISZERO V165
0x20f: V167 = 0x214
0x212: JUMPI 0x214 V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x213
[0x213:0x213]
---
Predecessors: [0x20c]
Successors: []
---
0x213 INVALID
---
0x213: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x214
[0x214:0x230]
---
Predecessors: [0x20c]
Successors: [0x6ae]
---
0x214 JUMPDEST
0x215 PUSH2 0x1cc
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 PUSH1 0x4
0x222 CALLDATALOAD
0x223 DUP2
0x224 AND
0x225 SWAP1
0x226 PUSH1 0x24
0x228 CALLDATALOAD
0x229 AND
0x22a PUSH1 0x44
0x22c CALLDATALOAD
0x22d PUSH2 0x6ae
0x230 JUMP
---
0x214: JUMPDEST 
0x215: V168 = 0x1cc
0x218: V169 = 0x1
0x21a: V170 = 0xa0
0x21c: V171 = 0x2
0x21e: V172 = EXP 0x2 0xa0
0x21f: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V174 = 0x4
0x222: V175 = CALLDATALOAD 0x4
0x224: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x226: V177 = 0x24
0x228: V178 = CALLDATALOAD 0x24
0x229: V179 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V180 = 0x44
0x22c: V181 = CALLDATALOAD 0x44
0x22d: V182 = 0x6ae
0x230: JUMP 0x6ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cc, V176, V179, V181]
Exit stack: [V12, 0x1cc, V176, V179, V181]

================================

Block 0x231
[0x231:0x244]
---
Predecessors: []
Successors: []
---
0x231 JUMPDEST
0x232 PUSH1 0x40
0x234 DUP1
0x235 MLOAD
0x236 SWAP2
0x237 ISZERO
0x238 ISZERO
0x239 DUP3
0x23a MSTORE
0x23b MLOAD
0x23c SWAP1
0x23d DUP2
0x23e SWAP1
0x23f SUB
0x240 PUSH1 0x20
0x242 ADD
0x243 SWAP1
0x244 RETURN
---
0x231: JUMPDEST 
0x232: V183 = 0x40
0x235: V184 = M[0x40]
0x237: V185 = ISZERO S0
0x238: V186 = ISZERO V185
0x23a: M[V184] = V186
0x23b: V187 = M[0x40]
0x23f: V188 = SUB V184 V187
0x240: V189 = 0x20
0x242: V190 = ADD 0x20 V188
0x244: RETURN V187 V190
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x245
[0x245:0x24b]
---
Predecessors: [0x51]
Successors: [0x24c, 0x24d]
---
0x245 JUMPDEST
0x246 CALLVALUE
0x247 ISZERO
0x248 PUSH2 0x24d
0x24b JUMPI
---
0x245: JUMPDEST 
0x246: V191 = CALLVALUE
0x247: V192 = ISZERO V191
0x248: V193 = 0x24d
0x24b: JUMPI 0x24d V192
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24c
[0x24c:0x24c]
---
Predecessors: [0x245]
Successors: []
---
0x24c INVALID
---
0x24c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24d
[0x24d:0x257]
---
Predecessors: [0x245]
Successors: [0x7b6]
---
0x24d JUMPDEST
0x24e PUSH2 0x1cc
0x251 PUSH1 0x4
0x253 CALLDATALOAD
0x254 PUSH2 0x7b6
0x257 JUMP
---
0x24d: JUMPDEST 
0x24e: V194 = 0x1cc
0x251: V195 = 0x4
0x253: V196 = CALLDATALOAD 0x4
0x254: V197 = 0x7b6
0x257: JUMP 0x7b6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cc, V196]
Exit stack: [V12, 0x1cc, V196]

================================

Block 0x258
[0x258:0x26b]
---
Predecessors: []
Successors: []
---
0x258 JUMPDEST
0x259 PUSH1 0x40
0x25b DUP1
0x25c MLOAD
0x25d SWAP2
0x25e ISZERO
0x25f ISZERO
0x260 DUP3
0x261 MSTORE
0x262 MLOAD
0x263 SWAP1
0x264 DUP2
0x265 SWAP1
0x266 SUB
0x267 PUSH1 0x20
0x269 ADD
0x26a SWAP1
0x26b RETURN
---
0x258: JUMPDEST 
0x259: V198 = 0x40
0x25c: V199 = M[0x40]
0x25e: V200 = ISZERO S0
0x25f: V201 = ISZERO V200
0x261: M[V199] = V201
0x262: V202 = M[0x40]
0x266: V203 = SUB V199 V202
0x267: V204 = 0x20
0x269: V205 = ADD 0x20 V203
0x26b: RETURN V202 V205
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x26c
[0x26c:0x272]
---
Predecessors: [0x5c]
Successors: [0x273, 0x274]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e ISZERO
0x26f PUSH2 0x274
0x272 JUMPI
---
0x26c: JUMPDEST 
0x26d: V206 = CALLVALUE
0x26e: V207 = ISZERO V206
0x26f: V208 = 0x274
0x272: JUMPI 0x274 V207
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x273
[0x273:0x273]
---
Predecessors: [0x26c]
Successors: []
---
0x273 INVALID
---
0x273: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x274
[0x274:0x287]
---
Predecessors: [0x26c]
Successors: [0x81e]
---
0x274 JUMPDEST
0x275 PUSH2 0x1fa
0x278 PUSH1 0x1
0x27a PUSH1 0xa0
0x27c PUSH1 0x2
0x27e EXP
0x27f SUB
0x280 PUSH1 0x4
0x282 CALLDATALOAD
0x283 AND
0x284 PUSH2 0x81e
0x287 JUMP
---
0x274: JUMPDEST 
0x275: V209 = 0x1fa
0x278: V210 = 0x1
0x27a: V211 = 0xa0
0x27c: V212 = 0x2
0x27e: V213 = EXP 0x2 0xa0
0x27f: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x280: V215 = 0x4
0x282: V216 = CALLDATALOAD 0x4
0x283: V217 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0x284: V218 = 0x81e
0x287: JUMP 0x81e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa, V217]
Exit stack: [V12, 0x1fa, V217]

================================

Block 0x288
[0x288:0x299]
---
Predecessors: []
Successors: []
---
0x288 JUMPDEST
0x289 PUSH1 0x40
0x28b DUP1
0x28c MLOAD
0x28d SWAP2
0x28e DUP3
0x28f MSTORE
0x290 MLOAD
0x291 SWAP1
0x292 DUP2
0x293 SWAP1
0x294 SUB
0x295 PUSH1 0x20
0x297 ADD
0x298 SWAP1
0x299 RETURN
---
0x288: JUMPDEST 
0x289: V219 = 0x40
0x28c: V220 = M[0x40]
0x28f: M[V220] = S0
0x290: V221 = M[0x40]
0x294: V222 = SUB V220 V221
0x295: V223 = 0x20
0x297: V224 = ADD 0x20 V222
0x299: RETURN V221 V224
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29a
[0x29a:0x2a0]
---
Predecessors: [0x67]
Successors: [0x2a1, 0x2a2]
---
0x29a JUMPDEST
0x29b CALLVALUE
0x29c ISZERO
0x29d PUSH2 0x2a2
0x2a0 JUMPI
---
0x29a: JUMPDEST 
0x29b: V225 = CALLVALUE
0x29c: V226 = ISZERO V225
0x29d: V227 = 0x2a2
0x2a0: JUMPI 0x2a2 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2a1]
---
Predecessors: [0x29a]
Successors: []
---
0x2a1 INVALID
---
0x2a1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a2
[0x2a2:0x2a9]
---
Predecessors: [0x29a]
Successors: [0x83d]
---
0x2a2 JUMPDEST
0x2a3 PUSH2 0x1fa
0x2a6 PUSH2 0x83d
0x2a9 JUMP
---
0x2a2: JUMPDEST 
0x2a3: V228 = 0x1fa
0x2a6: V229 = 0x83d
0x2a9: JUMP 0x83d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa]
Exit stack: [V12, 0x1fa]

================================

Block 0x2aa
[0x2aa:0x2bb]
---
Predecessors: []
Successors: []
---
0x2aa JUMPDEST
0x2ab PUSH1 0x40
0x2ad DUP1
0x2ae MLOAD
0x2af SWAP2
0x2b0 DUP3
0x2b1 MSTORE
0x2b2 MLOAD
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 SWAP1
0x2b6 SUB
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba SWAP1
0x2bb RETURN
---
0x2aa: JUMPDEST 
0x2ab: V230 = 0x40
0x2ae: V231 = M[0x40]
0x2b1: M[V231] = S0
0x2b2: V232 = M[0x40]
0x2b6: V233 = SUB V231 V232
0x2b7: V234 = 0x20
0x2b9: V235 = ADD 0x20 V233
0x2bb: RETURN V232 V235
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2bc
[0x2bc:0x2c2]
---
Predecessors: [0x72]
Successors: [0x2c3, 0x2c4]
---
0x2bc JUMPDEST
0x2bd CALLVALUE
0x2be ISZERO
0x2bf PUSH2 0x2c4
0x2c2 JUMPI
---
0x2bc: JUMPDEST 
0x2bd: V236 = CALLVALUE
0x2be: V237 = ISZERO V236
0x2bf: V238 = 0x2c4
0x2c2: JUMPI 0x2c4 V237
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c3
[0x2c3:0x2c3]
---
Predecessors: [0x2bc]
Successors: []
---
0x2c3 INVALID
---
0x2c3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c4
[0x2c4:0x2cb]
---
Predecessors: [0x2bc]
Successors: [0x8b2]
---
0x2c4 JUMPDEST
0x2c5 PUSH2 0x1cc
0x2c8 PUSH2 0x8b2
0x2cb JUMP
---
0x2c4: JUMPDEST 
0x2c5: V239 = 0x1cc
0x2c8: V240 = 0x8b2
0x2cb: JUMP 0x8b2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cc]
Exit stack: [V12, 0x1cc]

================================

Block 0x2cc
[0x2cc:0x2df]
---
Predecessors: []
Successors: []
---
0x2cc JUMPDEST
0x2cd PUSH1 0x40
0x2cf DUP1
0x2d0 MLOAD
0x2d1 SWAP2
0x2d2 ISZERO
0x2d3 ISZERO
0x2d4 DUP3
0x2d5 MSTORE
0x2d6 MLOAD
0x2d7 SWAP1
0x2d8 DUP2
0x2d9 SWAP1
0x2da SUB
0x2db PUSH1 0x20
0x2dd ADD
0x2de SWAP1
0x2df RETURN
---
0x2cc: JUMPDEST 
0x2cd: V241 = 0x40
0x2d0: V242 = M[0x40]
0x2d2: V243 = ISZERO S0
0x2d3: V244 = ISZERO V243
0x2d5: M[V242] = V244
0x2d6: V245 = M[0x40]
0x2da: V246 = SUB V242 V245
0x2db: V247 = 0x20
0x2dd: V248 = ADD 0x20 V246
0x2df: RETURN V245 V248
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e0
[0x2e0:0x2e6]
---
Predecessors: [0x7d]
Successors: [0x2e7, 0x2e8]
---
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 ISZERO
0x2e3 PUSH2 0x2e8
0x2e6 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V249 = CALLVALUE
0x2e2: V250 = ISZERO V249
0x2e3: V251 = 0x2e8
0x2e6: JUMPI 0x2e8 V250
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e7
[0x2e7:0x2e7]
---
Predecessors: [0x2e0]
Successors: []
---
0x2e7 INVALID
---
0x2e7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e8
[0x2e8:0x2ef]
---
Predecessors: [0x2e0]
Successors: [0x8c4]
---
0x2e8 JUMPDEST
0x2e9 PUSH2 0x1fa
0x2ec PUSH2 0x8c4
0x2ef JUMP
---
0x2e8: JUMPDEST 
0x2e9: V252 = 0x1fa
0x2ec: V253 = 0x8c4
0x2ef: JUMP 0x8c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa]
Exit stack: [V12, 0x1fa]

================================

Block 0x2f0
[0x2f0:0x301]
---
Predecessors: []
Successors: []
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x40
0x2f3 DUP1
0x2f4 MLOAD
0x2f5 SWAP2
0x2f6 DUP3
0x2f7 MSTORE
0x2f8 MLOAD
0x2f9 SWAP1
0x2fa DUP2
0x2fb SWAP1
0x2fc SUB
0x2fd PUSH1 0x20
0x2ff ADD
0x300 SWAP1
0x301 RETURN
---
0x2f0: JUMPDEST 
0x2f1: V254 = 0x40
0x2f4: V255 = M[0x40]
0x2f7: M[V255] = S0
0x2f8: V256 = M[0x40]
0x2fc: V257 = SUB V255 V256
0x2fd: V258 = 0x20
0x2ff: V259 = ADD 0x20 V257
0x301: RETURN V256 V259
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x302
[0x302:0x308]
---
Predecessors: [0x88]
Successors: [0x309, 0x30a]
---
0x302 JUMPDEST
0x303 CALLVALUE
0x304 ISZERO
0x305 PUSH2 0x30a
0x308 JUMPI
---
0x302: JUMPDEST 
0x303: V260 = CALLVALUE
0x304: V261 = ISZERO V260
0x305: V262 = 0x30a
0x308: JUMPI 0x30a V261
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x309
[0x309:0x309]
---
Predecessors: [0x302]
Successors: []
---
0x309 INVALID
---
0x309: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30a
[0x30a:0x311]
---
Predecessors: [0x302]
Successors: [0x8ca]
---
0x30a JUMPDEST
0x30b PUSH2 0x312
0x30e PUSH2 0x8ca
0x311 JUMP
---
0x30a: JUMPDEST 
0x30b: V263 = 0x312
0x30e: V264 = 0x8ca
0x311: JUMP 0x8ca
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x312]
Exit stack: [V12, 0x312]

================================

Block 0x312
[0x312:0x32d]
---
Predecessors: [0x8ca, 0x981]
Successors: []
---
0x312 JUMPDEST
0x313 PUSH1 0x40
0x315 DUP1
0x316 MLOAD
0x317 PUSH1 0x1
0x319 PUSH1 0xa0
0x31b PUSH1 0x2
0x31d EXP
0x31e SUB
0x31f SWAP1
0x320 SWAP3
0x321 AND
0x322 DUP3
0x323 MSTORE
0x324 MLOAD
0x325 SWAP1
0x326 DUP2
0x327 SWAP1
0x328 SUB
0x329 PUSH1 0x20
0x32b ADD
0x32c SWAP1
0x32d RETURN
---
0x312: JUMPDEST 
0x313: V265 = 0x40
0x316: V266 = M[0x40]
0x317: V267 = 0x1
0x319: V268 = 0xa0
0x31b: V269 = 0x2
0x31d: V270 = EXP 0x2 0xa0
0x31e: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x321: V272 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x323: M[V266] = V272
0x324: V273 = M[0x40]
0x328: V274 = SUB V266 V273
0x329: V275 = 0x20
0x32b: V276 = ADD 0x20 V274
0x32d: RETURN V273 V276
---
Entry stack: [V12, 0x312, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x312]

================================

Block 0x32e
[0x32e:0x334]
---
Predecessors: [0x93]
Successors: [0x335, 0x336]
---
0x32e JUMPDEST
0x32f CALLVALUE
0x330 ISZERO
0x331 PUSH2 0x336
0x334 JUMPI
---
0x32e: JUMPDEST 
0x32f: V277 = CALLVALUE
0x330: V278 = ISZERO V277
0x331: V279 = 0x336
0x334: JUMPI 0x336 V278
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x335
[0x335:0x335]
---
Predecessors: [0x32e]
Successors: []
---
0x335 INVALID
---
0x335: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x336
[0x336:0x33d]
---
Predecessors: [0x32e]
Successors: [0x8d9]
---
0x336 JUMPDEST
0x337 PUSH2 0x11b
0x33a PUSH2 0x8d9
0x33d JUMP
---
0x336: JUMPDEST 
0x337: V280 = 0x11b
0x33a: V281 = 0x8d9
0x33d: JUMP 0x8d9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V12, 0x11b]

================================

Block 0x33e
[0x33e:0x33f]
---
Predecessors: []
Successors: []
---
0x33e JUMPDEST
0x33f STOP
---
0x33e: JUMPDEST 
0x33f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x340
[0x340:0x346]
---
Predecessors: [0x9e]
Successors: [0x347, 0x348]
---
0x340 JUMPDEST
0x341 CALLVALUE
0x342 ISZERO
0x343 PUSH2 0x348
0x346 JUMPI
---
0x340: JUMPDEST 
0x341: V282 = CALLVALUE
0x342: V283 = ISZERO V282
0x343: V284 = 0x348
0x346: JUMPI 0x348 V283
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x347
[0x347:0x347]
---
Predecessors: [0x340]
Successors: []
---
0x347 INVALID
---
0x347: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x348
[0x348:0x34f]
---
Predecessors: [0x340]
Successors: [0x906]
---
0x348 JUMPDEST
0x349 PUSH2 0x12d
0x34c PUSH2 0x906
0x34f JUMP
---
0x348: JUMPDEST 
0x349: V285 = 0x12d
0x34c: V286 = 0x906
0x34f: JUMP 0x906
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x350
[0x350:0x375]
---
Predecessors: []
Successors: [0x173, 0x376]
---
0x350 JUMPDEST
0x351 PUSH1 0x40
0x353 DUP1
0x354 MLOAD
0x355 PUSH1 0x20
0x357 DUP1
0x358 DUP3
0x359 MSTORE
0x35a DUP4
0x35b MLOAD
0x35c DUP2
0x35d DUP4
0x35e ADD
0x35f MSTORE
0x360 DUP4
0x361 MLOAD
0x362 SWAP2
0x363 SWAP3
0x364 DUP4
0x365 SWAP3
0x366 SWAP1
0x367 DUP4
0x368 ADD
0x369 SWAP2
0x36a DUP6
0x36b ADD
0x36c SWAP1
0x36d DUP1
0x36e DUP4
0x36f DUP4
0x370 DUP3
0x371 ISZERO
0x372 PUSH2 0x173
0x375 JUMPI
---
0x350: JUMPDEST 
0x351: V287 = 0x40
0x354: V288 = M[0x40]
0x355: V289 = 0x20
0x359: M[V288] = 0x20
0x35b: V290 = M[S0]
0x35e: V291 = ADD V288 0x20
0x35f: M[V291] = V290
0x361: V292 = M[S0]
0x368: V293 = ADD V288 0x40
0x36b: V294 = ADD S0 0x20
0x371: V295 = ISZERO V292
0x372: V296 = 0x173
0x375: JUMPI 0x173 V295
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V288, V288, V293, V294, V292, V292, V293, V294]
Exit stack: [S0, V288, V288, V293, V294, V292, V292, V293, V294]

================================

Block 0x376
[0x376:0x383]
---
Predecessors: [0x350]
Successors: [0x173, 0x384]
---
0x376 JUMPDEST
0x377 DUP1
0x378 MLOAD
0x379 DUP3
0x37a MSTORE
0x37b PUSH1 0x20
0x37d DUP4
0x37e GT
0x37f ISZERO
0x380 PUSH2 0x173
0x383 JUMPI
---
0x376: JUMPDEST 
0x378: V297 = M[V294]
0x37a: M[V293] = V297
0x37b: V298 = 0x20
0x37e: V299 = GT V292 0x20
0x37f: V300 = ISZERO V299
0x380: V301 = 0x173
0x383: JUMPI 0x173 V300
---
Entry stack: [S8, V288, V288, V293, V294, V292, V292, V293, V294]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V288, V288, V293, V294, V292, V292, V293, V294]

================================

Block 0x384
[0x384:0x395]
---
Predecessors: [0x376]
Successors: [0x153]
---
0x384 PUSH1 0x1f
0x386 NOT
0x387 SWAP1
0x388 SWAP3
0x389 ADD
0x38a SWAP2
0x38b PUSH1 0x20
0x38d SWAP2
0x38e DUP3
0x38f ADD
0x390 SWAP2
0x391 ADD
0x392 PUSH2 0x153
0x395 JUMP
---
0x384: V302 = 0x1f
0x386: V303 = NOT 0x1f
0x389: V304 = ADD V292 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x38b: V305 = 0x20
0x38f: V306 = ADD 0x20 V293
0x391: V307 = ADD 0x20 V294
0x392: V308 = 0x153
0x395: JUMP 0x153
---
Entry stack: [S8, V288, V288, V293, V294, V292, V292, V293, V294]
Stack pops: 3
Stack additions: [V304, V306, V307]
Exit stack: [S8, V288, V288, V293, V294, V292, V304, V306, V307]

================================

Block 0x396
[0x396:0x3a8]
---
Predecessors: []
Successors: [0x19f, 0x3a9]
---
0x396 JUMPDEST
0x397 POP
0x398 POP
0x399 POP
0x39a SWAP1
0x39b POP
0x39c SWAP1
0x39d DUP2
0x39e ADD
0x39f SWAP1
0x3a0 PUSH1 0x1f
0x3a2 AND
0x3a3 DUP1
0x3a4 ISZERO
0x3a5 PUSH2 0x19f
0x3a8 JUMPI
---
0x396: JUMPDEST 
0x39e: V309 = ADD S3 S5
0x3a0: V310 = 0x1f
0x3a2: V311 = AND 0x1f S3
0x3a4: V312 = ISZERO V311
0x3a5: V313 = 0x19f
0x3a8: JUMPI 0x19f V312
---
Entry stack: []
Stack pops: 6
Stack additions: [V309, V311]
Exit stack: [V309, V311]

================================

Block 0x3a9
[0x3a9:0x3c1]
---
Predecessors: [0x396]
Successors: [0x3c2]
---
0x3a9 DUP1
0x3aa DUP3
0x3ab SUB
0x3ac DUP1
0x3ad MLOAD
0x3ae PUSH1 0x1
0x3b0 DUP4
0x3b1 PUSH1 0x20
0x3b3 SUB
0x3b4 PUSH2 0x100
0x3b7 EXP
0x3b8 SUB
0x3b9 NOT
0x3ba AND
0x3bb DUP2
0x3bc MSTORE
0x3bd PUSH1 0x20
0x3bf ADD
0x3c0 SWAP2
0x3c1 POP
---
0x3ab: V314 = SUB V309 V311
0x3ad: V315 = M[V314]
0x3ae: V316 = 0x1
0x3b1: V317 = 0x20
0x3b3: V318 = SUB 0x20 V311
0x3b4: V319 = 0x100
0x3b7: V320 = EXP 0x100 V318
0x3b8: V321 = SUB V320 0x1
0x3b9: V322 = NOT V321
0x3ba: V323 = AND V322 V315
0x3bc: M[V314] = V323
0x3bd: V324 = 0x20
0x3bf: V325 = ADD 0x20 V314
---
Entry stack: [V309, V311]
Stack pops: 2
Stack additions: [V325, S0]
Exit stack: [V325, V311]

================================

Block 0x3c2
[0x3c2:0x3cf]
---
Predecessors: [0x3a9]
Successors: []
---
0x3c2 JUMPDEST
0x3c3 POP
0x3c4 SWAP3
0x3c5 POP
0x3c6 POP
0x3c7 POP
0x3c8 PUSH1 0x40
0x3ca MLOAD
0x3cb DUP1
0x3cc SWAP2
0x3cd SUB
0x3ce SWAP1
0x3cf RETURN
---
0x3c2: JUMPDEST 
0x3c8: V326 = 0x40
0x3ca: V327 = M[0x40]
0x3cd: V328 = SUB V325 V327
0x3cf: RETURN V327 V328
---
Entry stack: [V325, V311]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x3d0
[0x3d0:0x3d6]
---
Predecessors: [0xa9]
Successors: [0x3d7, 0x3d8]
---
0x3d0 JUMPDEST
0x3d1 CALLVALUE
0x3d2 ISZERO
0x3d3 PUSH2 0x3d8
0x3d6 JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V329 = CALLVALUE
0x3d2: V330 = ISZERO V329
0x3d3: V331 = 0x3d8
0x3d6: JUMPI 0x3d8 V330
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d7
[0x3d7:0x3d7]
---
Predecessors: [0x3d0]
Successors: []
---
0x3d7 INVALID
---
0x3d7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d8
[0x3d8:0x3e5]
---
Predecessors: [0x3d0]
Successors: [0x928]
---
0x3d8 JUMPDEST
0x3d9 PUSH2 0x1fa
0x3dc PUSH1 0x4
0x3de CALLDATALOAD
0x3df PUSH1 0x24
0x3e1 CALLDATALOAD
0x3e2 PUSH2 0x928
0x3e5 JUMP
---
0x3d8: JUMPDEST 
0x3d9: V332 = 0x1fa
0x3dc: V333 = 0x4
0x3de: V334 = CALLDATALOAD 0x4
0x3df: V335 = 0x24
0x3e1: V336 = CALLDATALOAD 0x24
0x3e2: V337 = 0x928
0x3e5: JUMP 0x928
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa, V334, V336]
Exit stack: [V12, 0x1fa, V334, V336]

================================

Block 0x3e6
[0x3e6:0x3f7]
---
Predecessors: []
Successors: []
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x40
0x3e9 DUP1
0x3ea MLOAD
0x3eb SWAP2
0x3ec DUP3
0x3ed MSTORE
0x3ee MLOAD
0x3ef SWAP1
0x3f0 DUP2
0x3f1 SWAP1
0x3f2 SUB
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 SWAP1
0x3f7 RETURN
---
0x3e6: JUMPDEST 
0x3e7: V338 = 0x40
0x3ea: V339 = M[0x40]
0x3ed: M[V339] = S0
0x3ee: V340 = M[0x40]
0x3f2: V341 = SUB V339 V340
0x3f3: V342 = 0x20
0x3f5: V343 = ADD 0x20 V341
0x3f7: RETURN V340 V343
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3f8
[0x3f8:0x3fe]
---
Predecessors: [0xb4]
Successors: [0x3ff, 0x400]
---
0x3f8 JUMPDEST
0x3f9 CALLVALUE
0x3fa ISZERO
0x3fb PUSH2 0x400
0x3fe JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V344 = CALLVALUE
0x3fa: V345 = ISZERO V344
0x3fb: V346 = 0x400
0x3fe: JUMPI 0x400 V345
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ff
[0x3ff:0x3ff]
---
Predecessors: [0x3f8]
Successors: []
---
0x3ff INVALID
---
0x3ff: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x400
[0x400:0x413]
---
Predecessors: [0x3f8]
Successors: [0x945]
---
0x400 JUMPDEST
0x401 PUSH2 0x11b
0x404 PUSH1 0x1
0x406 PUSH1 0xa0
0x408 PUSH1 0x2
0x40a EXP
0x40b SUB
0x40c PUSH1 0x4
0x40e CALLDATALOAD
0x40f AND
0x410 PUSH2 0x945
0x413 JUMP
---
0x400: JUMPDEST 
0x401: V347 = 0x11b
0x404: V348 = 0x1
0x406: V349 = 0xa0
0x408: V350 = 0x2
0x40a: V351 = EXP 0x2 0xa0
0x40b: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40c: V353 = 0x4
0x40e: V354 = CALLDATALOAD 0x4
0x40f: V355 = AND V354 0xffffffffffffffffffffffffffffffffffffffff
0x410: V356 = 0x945
0x413: JUMP 0x945
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11b, V355]
Exit stack: [V12, 0x11b, V355]

================================

Block 0x414
[0x414:0x415]
---
Predecessors: []
Successors: []
---
0x414 JUMPDEST
0x415 STOP
---
0x414: JUMPDEST 
0x415: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x416
[0x416:0x41c]
---
Predecessors: [0xbf]
Successors: [0x41d, 0x41e]
---
0x416 JUMPDEST
0x417 CALLVALUE
0x418 ISZERO
0x419 PUSH2 0x41e
0x41c JUMPI
---
0x416: JUMPDEST 
0x417: V357 = CALLVALUE
0x418: V358 = ISZERO V357
0x419: V359 = 0x41e
0x41c: JUMPI 0x41e V358
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41d
[0x41d:0x41d]
---
Predecessors: [0x416]
Successors: []
---
0x41d INVALID
---
0x41d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41e
[0x41e:0x425]
---
Predecessors: [0x416]
Successors: [0x981]
---
0x41e JUMPDEST
0x41f PUSH2 0x312
0x422 PUSH2 0x981
0x425 JUMP
---
0x41e: JUMPDEST 
0x41f: V360 = 0x312
0x422: V361 = 0x981
0x425: JUMP 0x981
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x312]
Exit stack: [V12, 0x312]

================================

Block 0x426
[0x426:0x441]
---
Predecessors: []
Successors: []
---
0x426 JUMPDEST
0x427 PUSH1 0x40
0x429 DUP1
0x42a MLOAD
0x42b PUSH1 0x1
0x42d PUSH1 0xa0
0x42f PUSH1 0x2
0x431 EXP
0x432 SUB
0x433 SWAP1
0x434 SWAP3
0x435 AND
0x436 DUP3
0x437 MSTORE
0x438 MLOAD
0x439 SWAP1
0x43a DUP2
0x43b SWAP1
0x43c SUB
0x43d PUSH1 0x20
0x43f ADD
0x440 SWAP1
0x441 RETURN
---
0x426: JUMPDEST 
0x427: V362 = 0x40
0x42a: V363 = M[0x40]
0x42b: V364 = 0x1
0x42d: V365 = 0xa0
0x42f: V366 = 0x2
0x431: V367 = EXP 0x2 0xa0
0x432: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x435: V369 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x437: M[V363] = V369
0x438: V370 = M[0x40]
0x43c: V371 = SUB V363 V370
0x43d: V372 = 0x20
0x43f: V373 = ADD 0x20 V371
0x441: RETURN V370 V373
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x442
[0x442:0x448]
---
Predecessors: [0xca]
Successors: [0x449, 0x44a]
---
0x442 JUMPDEST
0x443 CALLVALUE
0x444 ISZERO
0x445 PUSH2 0x44a
0x448 JUMPI
---
0x442: JUMPDEST 
0x443: V374 = CALLVALUE
0x444: V375 = ISZERO V374
0x445: V376 = 0x44a
0x448: JUMPI 0x44a V375
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x449
[0x449:0x449]
---
Predecessors: [0x442]
Successors: []
---
0x449 INVALID
---
0x449: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44a
[0x44a:0x460]
---
Predecessors: [0x442]
Successors: [0x999]
---
0x44a JUMPDEST
0x44b PUSH2 0x1cc
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 PUSH1 0x4
0x458 CALLDATALOAD
0x459 AND
0x45a PUSH1 0x24
0x45c CALLDATALOAD
0x45d PUSH2 0x999
0x460 JUMP
---
0x44a: JUMPDEST 
0x44b: V377 = 0x1cc
0x44e: V378 = 0x1
0x450: V379 = 0xa0
0x452: V380 = 0x2
0x454: V381 = EXP 0x2 0xa0
0x455: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V383 = 0x4
0x458: V384 = CALLDATALOAD 0x4
0x459: V385 = AND V384 0xffffffffffffffffffffffffffffffffffffffff
0x45a: V386 = 0x24
0x45c: V387 = CALLDATALOAD 0x24
0x45d: V388 = 0x999
0x460: JUMP 0x999
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cc, V385, V387]
Exit stack: [V12, 0x1cc, V385, V387]

================================

Block 0x461
[0x461:0x474]
---
Predecessors: []
Successors: []
---
0x461 JUMPDEST
0x462 PUSH1 0x40
0x464 DUP1
0x465 MLOAD
0x466 SWAP2
0x467 ISZERO
0x468 ISZERO
0x469 DUP3
0x46a MSTORE
0x46b MLOAD
0x46c SWAP1
0x46d DUP2
0x46e SWAP1
0x46f SUB
0x470 PUSH1 0x20
0x472 ADD
0x473 SWAP1
0x474 RETURN
---
0x461: JUMPDEST 
0x462: V389 = 0x40
0x465: V390 = M[0x40]
0x467: V391 = ISZERO S0
0x468: V392 = ISZERO V391
0x46a: M[V390] = V392
0x46b: V393 = M[0x40]
0x46f: V394 = SUB V390 V393
0x470: V395 = 0x20
0x472: V396 = ADD 0x20 V394
0x474: RETURN V393 V396
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x475
[0x475:0x47b]
---
Predecessors: [0xd5]
Successors: [0x47c, 0x47d]
---
0x475 JUMPDEST
0x476 CALLVALUE
0x477 ISZERO
0x478 PUSH2 0x47d
0x47b JUMPI
---
0x475: JUMPDEST 
0x476: V397 = CALLVALUE
0x477: V398 = ISZERO V397
0x478: V399 = 0x47d
0x47b: JUMPI 0x47d V398
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47c
[0x47c:0x47c]
---
Predecessors: [0x475]
Successors: []
---
0x47c INVALID
---
0x47c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47d
[0x47d:0x484]
---
Predecessors: [0x475]
Successors: [0xa2f]
---
0x47d JUMPDEST
0x47e PUSH2 0x11b
0x481 PUSH2 0xa2f
0x484 JUMP
---
0x47d: JUMPDEST 
0x47e: V400 = 0x11b
0x481: V401 = 0xa2f
0x484: JUMP 0xa2f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V12, 0x11b]

================================

Block 0x485
[0x485:0x486]
---
Predecessors: []
Successors: []
---
0x485 JUMPDEST
0x486 STOP
---
0x485: JUMPDEST 
0x486: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x487
[0x487:0x48d]
---
Predecessors: [0xe0]
Successors: [0x48e, 0x48f]
---
0x487 JUMPDEST
0x488 CALLVALUE
0x489 ISZERO
0x48a PUSH2 0x48f
0x48d JUMPI
---
0x487: JUMPDEST 
0x488: V402 = CALLVALUE
0x489: V403 = ISZERO V402
0x48a: V404 = 0x48f
0x48d: JUMPI 0x48f V403
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48e
[0x48e:0x48e]
---
Predecessors: [0x487]
Successors: []
---
0x48e INVALID
---
0x48e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48f
[0x48f:0x49c]
---
Predecessors: [0x487]
Successors: [0xab4]
---
0x48f JUMPDEST
0x490 PUSH2 0x1fa
0x493 PUSH1 0x4
0x495 CALLDATALOAD
0x496 PUSH1 0x24
0x498 CALLDATALOAD
0x499 PUSH2 0xab4
0x49c JUMP
---
0x48f: JUMPDEST 
0x490: V405 = 0x1fa
0x493: V406 = 0x4
0x495: V407 = CALLDATALOAD 0x4
0x496: V408 = 0x24
0x498: V409 = CALLDATALOAD 0x24
0x499: V410 = 0xab4
0x49c: JUMP 0xab4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa, V407, V409]
Exit stack: [V12, 0x1fa, V407, V409]

================================

Block 0x49d
[0x49d:0x4ae]
---
Predecessors: []
Successors: []
---
0x49d JUMPDEST
0x49e PUSH1 0x40
0x4a0 DUP1
0x4a1 MLOAD
0x4a2 SWAP2
0x4a3 DUP3
0x4a4 MSTORE
0x4a5 MLOAD
0x4a6 SWAP1
0x4a7 DUP2
0x4a8 SWAP1
0x4a9 SUB
0x4aa PUSH1 0x20
0x4ac ADD
0x4ad SWAP1
0x4ae RETURN
---
0x49d: JUMPDEST 
0x49e: V411 = 0x40
0x4a1: V412 = M[0x40]
0x4a4: M[V412] = S0
0x4a5: V413 = M[0x40]
0x4a9: V414 = SUB V412 V413
0x4aa: V415 = 0x20
0x4ac: V416 = ADD 0x20 V414
0x4ae: RETURN V413 V416
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4af
[0x4af:0x4b5]
---
Predecessors: [0xeb]
Successors: [0x4b6, 0x4b7]
---
0x4af JUMPDEST
0x4b0 CALLVALUE
0x4b1 ISZERO
0x4b2 PUSH2 0x4b7
0x4b5 JUMPI
---
0x4af: JUMPDEST 
0x4b0: V417 = CALLVALUE
0x4b1: V418 = ISZERO V417
0x4b2: V419 = 0x4b7
0x4b5: JUMPI 0x4b7 V418
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b6
[0x4b6:0x4b6]
---
Predecessors: [0x4af]
Successors: []
---
0x4b6 INVALID
---
0x4b6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b7
[0x4b7:0x4ca]
---
Predecessors: [0x4af]
Successors: [0xaeb]
---
0x4b7 JUMPDEST
0x4b8 PUSH2 0x1fa
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 PUSH1 0x4
0x4c5 CALLDATALOAD
0x4c6 AND
0x4c7 PUSH2 0xaeb
0x4ca JUMP
---
0x4b7: JUMPDEST 
0x4b8: V420 = 0x1fa
0x4bb: V421 = 0x1
0x4bd: V422 = 0xa0
0x4bf: V423 = 0x2
0x4c1: V424 = EXP 0x2 0xa0
0x4c2: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c3: V426 = 0x4
0x4c5: V427 = CALLDATALOAD 0x4
0x4c6: V428 = AND V427 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V429 = 0xaeb
0x4ca: JUMP 0xaeb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa, V428]
Exit stack: [V12, 0x1fa, V428]

================================

Block 0x4cb
[0x4cb:0x4dc]
---
Predecessors: []
Successors: []
---
0x4cb JUMPDEST
0x4cc PUSH1 0x40
0x4ce DUP1
0x4cf MLOAD
0x4d0 SWAP2
0x4d1 DUP3
0x4d2 MSTORE
0x4d3 MLOAD
0x4d4 SWAP1
0x4d5 DUP2
0x4d6 SWAP1
0x4d7 SUB
0x4d8 PUSH1 0x20
0x4da ADD
0x4db SWAP1
0x4dc RETURN
---
0x4cb: JUMPDEST 
0x4cc: V430 = 0x40
0x4cf: V431 = M[0x40]
0x4d2: M[V431] = S0
0x4d3: V432 = M[0x40]
0x4d7: V433 = SUB V431 V432
0x4d8: V434 = 0x20
0x4da: V435 = ADD 0x20 V433
0x4dc: RETURN V432 V435
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4dd
[0x4dd:0x4e3]
---
Predecessors: [0xf6]
Successors: [0x4e4, 0x4e5]
---
0x4dd JUMPDEST
0x4de CALLVALUE
0x4df ISZERO
0x4e0 PUSH2 0x4e5
0x4e3 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V436 = CALLVALUE
0x4df: V437 = ISZERO V436
0x4e0: V438 = 0x4e5
0x4e3: JUMPI 0x4e5 V437
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e4
[0x4e4:0x4e4]
---
Predecessors: [0x4dd]
Successors: []
---
0x4e4 INVALID
---
0x4e4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e5
[0x4e5:0x4fe]
---
Predecessors: [0x4dd]
Successors: [0xafd]
---
0x4e5 JUMPDEST
0x4e6 PUSH2 0x1fa
0x4e9 PUSH1 0x1
0x4eb PUSH1 0xa0
0x4ed PUSH1 0x2
0x4ef EXP
0x4f0 SUB
0x4f1 PUSH1 0x4
0x4f3 CALLDATALOAD
0x4f4 DUP2
0x4f5 AND
0x4f6 SWAP1
0x4f7 PUSH1 0x24
0x4f9 CALLDATALOAD
0x4fa AND
0x4fb PUSH2 0xafd
0x4fe JUMP
---
0x4e5: JUMPDEST 
0x4e6: V439 = 0x1fa
0x4e9: V440 = 0x1
0x4eb: V441 = 0xa0
0x4ed: V442 = 0x2
0x4ef: V443 = EXP 0x2 0xa0
0x4f0: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f1: V445 = 0x4
0x4f3: V446 = CALLDATALOAD 0x4
0x4f5: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x4f7: V448 = 0x24
0x4f9: V449 = CALLDATALOAD 0x24
0x4fa: V450 = AND V449 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V451 = 0xafd
0x4fe: JUMP 0xafd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa, V447, V450]
Exit stack: [V12, 0x1fa, V447, V450]

================================

Block 0x4ff
[0x4ff:0x510]
---
Predecessors: []
Successors: []
---
0x4ff JUMPDEST
0x500 PUSH1 0x40
0x502 DUP1
0x503 MLOAD
0x504 SWAP2
0x505 DUP3
0x506 MSTORE
0x507 MLOAD
0x508 SWAP1
0x509 DUP2
0x50a SWAP1
0x50b SUB
0x50c PUSH1 0x20
0x50e ADD
0x50f SWAP1
0x510 RETURN
---
0x4ff: JUMPDEST 
0x500: V452 = 0x40
0x503: V453 = M[0x40]
0x506: M[V453] = S0
0x507: V454 = M[0x40]
0x50b: V455 = SUB V453 V454
0x50c: V456 = 0x20
0x50e: V457 = ADD 0x20 V455
0x510: RETURN V454 V457
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x511
[0x511:0x517]
---
Predecessors: [0x101]
Successors: [0x518, 0x519]
---
0x511 JUMPDEST
0x512 CALLVALUE
0x513 ISZERO
0x514 PUSH2 0x519
0x517 JUMPI
---
0x511: JUMPDEST 
0x512: V458 = CALLVALUE
0x513: V459 = ISZERO V458
0x514: V460 = 0x519
0x517: JUMPI 0x519 V459
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x518
[0x518:0x518]
---
Predecessors: [0x511]
Successors: []
---
0x518 INVALID
---
0x518: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x519
[0x519:0x520]
---
Predecessors: [0x511]
Successors: [0xb2a]
---
0x519 JUMPDEST
0x51a PUSH2 0x1fa
0x51d PUSH2 0xb2a
0x520 JUMP
---
0x519: JUMPDEST 
0x51a: V461 = 0x1fa
0x51d: V462 = 0xb2a
0x520: JUMP 0xb2a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa]
Exit stack: [V12, 0x1fa]

================================

Block 0x521
[0x521:0x532]
---
Predecessors: []
Successors: []
---
0x521 JUMPDEST
0x522 PUSH1 0x40
0x524 DUP1
0x525 MLOAD
0x526 SWAP2
0x527 DUP3
0x528 MSTORE
0x529 MLOAD
0x52a SWAP1
0x52b DUP2
0x52c SWAP1
0x52d SUB
0x52e PUSH1 0x20
0x530 ADD
0x531 SWAP1
0x532 RETURN
---
0x521: JUMPDEST 
0x522: V463 = 0x40
0x525: V464 = M[0x40]
0x528: M[V464] = S0
0x529: V465 = M[0x40]
0x52d: V466 = SUB V464 V465
0x52e: V467 = 0x20
0x530: V468 = ADD 0x20 V466
0x532: RETURN V465 V468
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x533
[0x533:0x53c]
---
Predecessors: [0x110, 0x1e0]
Successors: [0x8b2]
---
0x533 JUMPDEST
0x534 PUSH1 0x0
0x536 PUSH2 0x53d
0x539 PUSH2 0x8b2
0x53c JUMP
---
0x533: JUMPDEST 
0x534: V469 = 0x0
0x536: V470 = 0x53d
0x539: V471 = 0x8b2
0x53c: JUMP 0x8b2
---
Entry stack: [V12, S1, {0x118, 0x11b}]
Stack pops: 0
Stack additions: [0x0, 0x53d]
Exit stack: [V12, S1, {0x118, 0x11b}, 0x0, 0x53d]

================================

Block 0x53d
[0x53d:0x543]
---
Predecessors: [0x8c1]
Successors: [0x544, 0x550]
---
0x53d JUMPDEST
0x53e ISZERO
0x53f DUP1
0x540 PUSH2 0x550
0x543 JUMPI
---
0x53d: JUMPDEST 
0x53e: V472 = ISZERO S0
0x540: V473 = 0x550
0x543: JUMPI 0x550 V472
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V472]
Exit stack: [V12, S4, S3, S2, S1, V472]

================================

Block 0x544
[0x544:0x54f]
---
Predecessors: [0x53d]
Successors: [0x550]
---
0x544 POP
0x545 PUSH8 0x16345785d8a0000
0x54e CALLVALUE
0x54f LT
---
0x545: V474 = 0x16345785d8a0000
0x54e: V475 = CALLVALUE
0x54f: V476 = LT V475 0x16345785d8a0000
---
Entry stack: [V12, S4, S3, S2, S1, V472]
Stack pops: 1
Stack additions: [V476]
Exit stack: [V12, S4, S3, S2, S1, V476]

================================

Block 0x550
[0x550:0x555]
---
Predecessors: [0x53d, 0x544]
Successors: [0x556, 0x55b]
---
0x550 JUMPDEST
0x551 ISZERO
0x552 PUSH2 0x55b
0x555 JUMPI
---
0x550: JUMPDEST 
0x551: V477 = ISZERO S0
0x552: V478 = 0x55b
0x555: JUMPI 0x55b V477
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1]

================================

Block 0x556
[0x556:0x55a]
---
Predecessors: [0x550]
Successors: []
---
0x556 PUSH1 0x0
0x558 PUSH1 0x0
0x55a REVERT
---
0x556: V479 = 0x0
0x558: V480 = 0x0
0x55a: REVERT 0x0 0x0
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x55b
[0x55b:0x56b]
---
Predecessors: [0x550]
Successors: [0xab4]
---
0x55b JUMPDEST
0x55c PUSH2 0x58a
0x55f PUSH2 0x57c
0x562 PUSH2 0x56c
0x565 CALLVALUE
0x566 PUSH1 0x3
0x568 PUSH2 0xab4
0x56b JUMP
---
0x55b: JUMPDEST 
0x55c: V481 = 0x58a
0x55f: V482 = 0x57c
0x562: V483 = 0x56c
0x565: V484 = CALLVALUE
0x566: V485 = 0x3
0x568: V486 = 0xab4
0x56b: JUMP 0xab4
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x58a, 0x57c, 0x56c, V484, 0x3]
Exit stack: [V12, S3, S2, S1, S0, 0x58a, 0x57c, 0x56c, V484, 0x3]

================================

Block 0x56c
[0x56c:0x573]
---
Predecessors: [0x93e]
Successors: [0x83d]
---
0x56c JUMPDEST
0x56d PUSH2 0x574
0x570 PUSH2 0x83d
0x573 JUMP
---
0x56c: JUMPDEST 
0x56d: V487 = 0x574
0x570: V488 = 0x83d
0x573: JUMP 0x83d
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x574]
Exit stack: [V12, S5, S4, S3, S2, S1, S0, 0x574]

================================

Block 0x574
[0x574:0x57b]
---
Predecessors: [0x8ae]
Successors: [0xab4]
---
0x574 JUMPDEST
0x575 PUSH1 0x64
0x577 ADD
0x578 PUSH2 0xab4
0x57b JUMP
---
0x574: JUMPDEST 
0x575: V489 = 0x64
0x577: V490 = ADD 0x64 {0x0, 0x5, 0xa, 0xf, 0x14, 0x19}
0x578: V491 = 0xab4
0x57b: JUMP 0xab4
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, {0x0, 0x5, 0xa, 0xf, 0x14, 0x19}]
Stack pops: 1
Stack additions: [V490]
Exit stack: [V12, S6, S5, S4, S3, S2, S1, V490]

================================

Block 0x57c
[0x57c:0x589]
---
Predecessors: [0x93e]
Successors: [0x928]
---
0x57c JUMPDEST
0x57d PUSH8 0x16345785d8a0000
0x586 PUSH2 0x928
0x589 JUMP
---
0x57c: JUMPDEST 
0x57d: V492 = 0x16345785d8a0000
0x586: V493 = 0x928
0x589: JUMP 0x928
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x16345785d8a0000]
Exit stack: [V12, S5, S4, S3, S2, S1, S0, 0x16345785d8a0000]

================================

Block 0x58a
[0x58a:0x59c]
---
Predecessors: [0x119, 0x607, 0x93e]
Successors: [0x59d, 0x5a2]
---
0x58a JUMPDEST
0x58b SWAP1
0x58c POP
0x58d PUSH4 0x3b9aca00
0x592 DUP2
0x593 PUSH1 0x2
0x595 SLOAD
0x596 ADD
0x597 GT
0x598 ISZERO
0x599 PUSH2 0x5a2
0x59c JUMPI
---
0x58a: JUMPDEST 
0x58d: V494 = 0x3b9aca00
0x593: V495 = 0x2
0x595: V496 = S[0x2]
0x596: V497 = ADD V496 S0
0x597: V498 = GT V497 0x3b9aca00
0x598: V499 = ISZERO V498
0x599: V500 = 0x5a2
0x59c: JUMPI 0x5a2 V499
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S2, S0]

================================

Block 0x59d
[0x59d:0x5a1]
---
Predecessors: [0x58a]
Successors: []
---
0x59d PUSH1 0x0
0x59f PUSH1 0x0
0x5a1 REVERT
---
0x59d: V501 = 0x0
0x59f: V502 = 0x0
0x5a1: REVERT 0x0 0x0
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x5a2
[0x5a2:0x606]
---
Predecessors: [0x58a]
Successors: [0x607]
---
0x5a2 JUMPDEST
0x5a3 PUSH1 0x2
0x5a5 DUP1
0x5a6 SLOAD
0x5a7 DUP3
0x5a8 ADD
0x5a9 SWAP1
0x5aa SSTORE
0x5ab PUSH1 0x1
0x5ad PUSH1 0xa0
0x5af PUSH1 0x2
0x5b1 EXP
0x5b2 SUB
0x5b3 CALLER
0x5b4 AND
0x5b5 PUSH1 0x0
0x5b7 DUP2
0x5b8 DUP2
0x5b9 MSTORE
0x5ba PUSH1 0x3
0x5bc PUSH1 0x20
0x5be SWAP1
0x5bf DUP2
0x5c0 MSTORE
0x5c1 PUSH1 0x40
0x5c3 SWAP2
0x5c4 DUP3
0x5c5 SWAP1
0x5c6 SHA3
0x5c7 DUP1
0x5c8 SLOAD
0x5c9 DUP6
0x5ca ADD
0x5cb SWAP1
0x5cc SSTORE
0x5cd DUP2
0x5ce MLOAD
0x5cf DUP5
0x5d0 DUP2
0x5d1 MSTORE
0x5d2 CALLVALUE
0x5d3 SWAP2
0x5d4 DUP2
0x5d5 ADD
0x5d6 SWAP2
0x5d7 SWAP1
0x5d8 SWAP2
0x5d9 MSTORE
0x5da DUP2
0x5db MLOAD
0x5dc PUSH32 0xb54144b2711919f9fb59c30ec3b593b154784e26488806a6ddb320c41b5c1c93
0x5fd SWAP3
0x5fe SWAP2
0x5ff DUP2
0x600 SWAP1
0x601 SUB
0x602 SWAP1
0x603 SWAP2
0x604 ADD
0x605 SWAP1
0x606 LOG2
---
0x5a2: JUMPDEST 
0x5a3: V503 = 0x2
0x5a6: V504 = S[0x2]
0x5a8: V505 = ADD S0 V504
0x5aa: S[0x2] = V505
0x5ab: V506 = 0x1
0x5ad: V507 = 0xa0
0x5af: V508 = 0x2
0x5b1: V509 = EXP 0x2 0xa0
0x5b2: V510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b3: V511 = CALLER
0x5b4: V512 = AND V511 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: V513 = 0x0
0x5b9: M[0x0] = V512
0x5ba: V514 = 0x3
0x5bc: V515 = 0x20
0x5c0: M[0x20] = 0x3
0x5c1: V516 = 0x40
0x5c6: V517 = SHA3 0x0 0x40
0x5c8: V518 = S[V517]
0x5ca: V519 = ADD S0 V518
0x5cc: S[V517] = V519
0x5ce: V520 = M[0x40]
0x5d1: M[V520] = S0
0x5d2: V521 = CALLVALUE
0x5d5: V522 = ADD V520 0x20
0x5d9: M[V522] = V521
0x5db: V523 = M[0x40]
0x5dc: V524 = 0xb54144b2711919f9fb59c30ec3b593b154784e26488806a6ddb320c41b5c1c93
0x601: V525 = SUB V520 V523
0x604: V526 = ADD 0x40 V525
0x606: LOG V523 V526 0xb54144b2711919f9fb59c30ec3b593b154784e26488806a6ddb320c41b5c1c93 V512
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x607
[0x607:0x609]
---
Predecessors: [0x5a2]
Successors: [0x118, 0x11b, 0x58a]
---
0x607 JUMPDEST
0x608 POP
0x609 JUMP
---
0x607: JUMPDEST 
0x609: JUMP S1
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S4, S3, S2]

================================

Block 0x60a
[0x60a:0x628]
---
Predecessors: [0x125]
Successors: [0x12d]
---
0x60a JUMPDEST
0x60b PUSH1 0x40
0x60d DUP1
0x60e MLOAD
0x60f DUP1
0x610 DUP3
0x611 ADD
0x612 SWAP1
0x613 SWAP2
0x614 MSTORE
0x615 PUSH1 0x2
0x617 DUP2
0x618 MSTORE
0x619 PUSH1 0xf3
0x61b PUSH1 0x2
0x61d EXP
0x61e PUSH2 0x9eb
0x621 MUL
0x622 PUSH1 0x20
0x624 DUP3
0x625 ADD
0x626 MSTORE
0x627 DUP2
0x628 JUMP
---
0x60a: JUMPDEST 
0x60b: V527 = 0x40
0x60e: V528 = M[0x40]
0x611: V529 = ADD 0x40 V528
0x614: M[0x40] = V529
0x615: V530 = 0x2
0x618: M[V528] = 0x2
0x619: V531 = 0xf3
0x61b: V532 = 0x2
0x61d: V533 = EXP 0x2 0xf3
0x61e: V534 = 0x9eb
0x621: V535 = MUL 0x9eb 0x8000000000000000000000000000000000000000000000000000000000000
0x622: V536 = 0x20
0x625: V537 = ADD V528 0x20
0x626: M[V537] = 0x4f58000000000000000000000000000000000000000000000000000000000000
0x628: JUMP 0x12d
---
Entry stack: [V12, 0x12d]
Stack pops: 1
Stack additions: [S0, V528]
Exit stack: [V12, 0x12d, V528]

================================

Block 0x629
[0x629:0x632]
---
Predecessors: [0x1b5]
Successors: [0x8b2]
---
0x629 JUMPDEST
0x62a PUSH1 0x0
0x62c PUSH2 0x633
0x62f PUSH2 0x8b2
0x632 JUMP
---
0x629: JUMPDEST 
0x62a: V538 = 0x0
0x62c: V539 = 0x633
0x62f: V540 = 0x8b2
0x632: JUMP 0x8b2
---
Entry stack: [V12, 0x1cc, V140, V142]
Stack pops: 0
Stack additions: [0x0, 0x633]
Exit stack: [V12, 0x1cc, V140, V142, 0x0, 0x633]

================================

Block 0x633
[0x633:0x638]
---
Predecessors: [0x8c1]
Successors: [0x639, 0x640]
---
0x633 JUMPDEST
0x634 ISZERO
0x635 PUSH2 0x640
0x638 JUMPI
---
0x633: JUMPDEST 
0x634: V541 = ISZERO S0
0x635: V542 = 0x640
0x638: JUMPI 0x640 V541
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1]

================================

Block 0x639
[0x639:0x63f]
---
Predecessors: [0x633]
Successors: [0x6a1]
---
0x639 POP
0x63a PUSH1 0x0
0x63c PUSH2 0x6a1
0x63f JUMP
---
0x63a: V543 = 0x0
0x63c: V544 = 0x6a1
0x63f: JUMP 0x6a1
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, S3, S2, S1, 0x0]

================================

Block 0x640
[0x640:0x6a0]
---
Predecessors: [0x633]
Successors: [0x6a1]
---
0x640 JUMPDEST
0x641 PUSH1 0x1
0x643 PUSH1 0xa0
0x645 PUSH1 0x2
0x647 EXP
0x648 SUB
0x649 CALLER
0x64a DUP2
0x64b AND
0x64c PUSH1 0x0
0x64e DUP2
0x64f DUP2
0x650 MSTORE
0x651 PUSH1 0x4
0x653 PUSH1 0x20
0x655 SWAP1
0x656 DUP2
0x657 MSTORE
0x658 PUSH1 0x40
0x65a DUP1
0x65b DUP4
0x65c SHA3
0x65d SWAP5
0x65e DUP9
0x65f AND
0x660 DUP1
0x661 DUP5
0x662 MSTORE
0x663 SWAP5
0x664 DUP3
0x665 MSTORE
0x666 SWAP2
0x667 DUP3
0x668 SWAP1
0x669 SHA3
0x66a DUP7
0x66b SWAP1
0x66c SSTORE
0x66d DUP2
0x66e MLOAD
0x66f DUP7
0x670 DUP2
0x671 MSTORE
0x672 SWAP2
0x673 MLOAD
0x674 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x695 SWAP3
0x696 DUP2
0x697 SWAP1
0x698 SUB
0x699 SWAP1
0x69a SWAP2
0x69b ADD
0x69c SWAP1
0x69d LOG3
0x69e POP
0x69f PUSH1 0x1
---
0x640: JUMPDEST 
0x641: V545 = 0x1
0x643: V546 = 0xa0
0x645: V547 = 0x2
0x647: V548 = EXP 0x2 0xa0
0x648: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x649: V550 = CALLER
0x64b: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x64c: V552 = 0x0
0x650: M[0x0] = V551
0x651: V553 = 0x4
0x653: V554 = 0x20
0x657: M[0x20] = 0x4
0x658: V555 = 0x40
0x65c: V556 = SHA3 0x0 0x40
0x65f: V557 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x662: M[0x0] = V557
0x665: M[0x20] = V556
0x669: V558 = SHA3 0x0 0x40
0x66c: S[V558] = S1
0x66e: V559 = M[0x40]
0x671: M[V559] = S1
0x673: V560 = M[0x40]
0x674: V561 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x698: V562 = SUB V559 V560
0x69b: V563 = ADD 0x20 V562
0x69d: LOG V560 V563 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V551 V557
0x69f: V564 = 0x1
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, S3, S2, S1, 0x1]

================================

Block 0x6a1
[0x6a1:0x6a6]
---
Predecessors: [0x639, 0x640, 0x9c9]
Successors: [0x1cc]
---
0x6a1 JUMPDEST
0x6a2 SWAP3
0x6a3 SWAP2
0x6a4 POP
0x6a5 POP
0x6a6 JUMP
---
0x6a1: JUMPDEST 
0x6a6: JUMP S3
---
Entry stack: [V12, S3, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x6a7
[0x6a7:0x6aa]
---
Predecessors: [0x1f2]
Successors: [0x6ab]
---
0x6a7 JUMPDEST
0x6a8 PUSH1 0x2
0x6aa SLOAD
---
0x6a7: JUMPDEST 
0x6a8: V565 = 0x2
0x6aa: V566 = S[0x2]
---
Entry stack: [V12, 0x1fa]
Stack pops: 0
Stack additions: [V566]
Exit stack: [V12, 0x1fa, V566]

================================

Block 0x6ab
[0x6ab:0x6ad]
---
Predecessors: [0x6a7]
Successors: [0x1fa]
---
0x6ab JUMPDEST
0x6ac SWAP1
0x6ad JUMP
---
0x6ab: JUMPDEST 
0x6ad: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa, V566]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V566]

================================

Block 0x6ae
[0x6ae:0x6d1]
---
Predecessors: [0x214]
Successors: [0x6d2, 0x6fe]
---
0x6ae JUMPDEST
0x6af PUSH1 0x1
0x6b1 PUSH1 0xa0
0x6b3 PUSH1 0x2
0x6b5 EXP
0x6b6 SUB
0x6b7 DUP4
0x6b8 AND
0x6b9 PUSH1 0x0
0x6bb SWAP1
0x6bc DUP2
0x6bd MSTORE
0x6be PUSH1 0x3
0x6c0 PUSH1 0x20
0x6c2 MSTORE
0x6c3 PUSH1 0x40
0x6c5 DUP2
0x6c6 SHA3
0x6c7 SLOAD
0x6c8 DUP3
0x6c9 SWAP1
0x6ca LT
0x6cb DUP1
0x6cc ISZERO
0x6cd SWAP1
0x6ce PUSH2 0x6fe
0x6d1 JUMPI
---
0x6ae: JUMPDEST 
0x6af: V567 = 0x1
0x6b1: V568 = 0xa0
0x6b3: V569 = 0x2
0x6b5: V570 = EXP 0x2 0xa0
0x6b6: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b8: V572 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x6b9: V573 = 0x0
0x6bd: M[0x0] = V572
0x6be: V574 = 0x3
0x6c0: V575 = 0x20
0x6c2: M[0x20] = 0x3
0x6c3: V576 = 0x40
0x6c6: V577 = SHA3 0x0 0x40
0x6c7: V578 = S[V577]
0x6ca: V579 = LT V578 V181
0x6cc: V580 = ISZERO V579
0x6ce: V581 = 0x6fe
0x6d1: JUMPI 0x6fe V579
---
Entry stack: [V12, 0x1cc, V176, V179, V181]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V580]
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x0, V580]

================================

Block 0x6d2
[0x6d2:0x6fd]
---
Predecessors: [0x6ae]
Successors: [0x6fe]
---
0x6d2 POP
0x6d3 PUSH1 0x1
0x6d5 PUSH1 0xa0
0x6d7 PUSH1 0x2
0x6d9 EXP
0x6da SUB
0x6db DUP1
0x6dc DUP6
0x6dd AND
0x6de PUSH1 0x0
0x6e0 SWAP1
0x6e1 DUP2
0x6e2 MSTORE
0x6e3 PUSH1 0x4
0x6e5 PUSH1 0x20
0x6e7 SWAP1
0x6e8 DUP2
0x6e9 MSTORE
0x6ea PUSH1 0x40
0x6ec DUP1
0x6ed DUP4
0x6ee SHA3
0x6ef CALLER
0x6f0 SWAP1
0x6f1 SWAP5
0x6f2 AND
0x6f3 DUP4
0x6f4 MSTORE
0x6f5 SWAP3
0x6f6 SWAP1
0x6f7 MSTORE
0x6f8 SHA3
0x6f9 SLOAD
0x6fa DUP3
0x6fb SWAP1
0x6fc LT
0x6fd ISZERO
---
0x6d3: V582 = 0x1
0x6d5: V583 = 0xa0
0x6d7: V584 = 0x2
0x6d9: V585 = EXP 0x2 0xa0
0x6da: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dd: V587 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V588 = 0x0
0x6e2: M[0x0] = V587
0x6e3: V589 = 0x4
0x6e5: V590 = 0x20
0x6e9: M[0x20] = 0x4
0x6ea: V591 = 0x40
0x6ee: V592 = SHA3 0x0 0x40
0x6ef: V593 = CALLER
0x6f2: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x6f4: M[0x0] = V594
0x6f7: M[0x20] = V592
0x6f8: V595 = SHA3 0x0 0x40
0x6f9: V596 = S[V595]
0x6fc: V597 = LT V596 V181
0x6fd: V598 = ISZERO V597
---
Entry stack: [V12, 0x1cc, V176, V179, V181, 0x0, V580]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V598]
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x0, V598]

================================

Block 0x6fe
[0x6fe:0x704]
---
Predecessors: [0x6ae, 0x6d2]
Successors: [0x705, 0x70a]
---
0x6fe JUMPDEST
0x6ff DUP1
0x700 ISZERO
0x701 PUSH2 0x70a
0x704 JUMPI
---
0x6fe: JUMPDEST 
0x700: V599 = ISZERO S0
0x701: V600 = 0x70a
0x704: JUMPI 0x70a V599
---
Entry stack: [V12, 0x1cc, V176, V179, V181, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x0, S0]

================================

Block 0x705
[0x705:0x709]
---
Predecessors: [0x6fe]
Successors: [0x70a]
---
0x705 POP
0x706 PUSH1 0x0
0x708 DUP3
0x709 GT
---
0x706: V601 = 0x0
0x709: V602 = GT V181 0x0
---
Entry stack: [V12, 0x1cc, V176, V179, V181, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V602]
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x0, V602]

================================

Block 0x70a
[0x70a:0x710]
---
Predecessors: [0x6fe, 0x705]
Successors: [0x711, 0x72f]
---
0x70a JUMPDEST
0x70b DUP1
0x70c ISZERO
0x70d PUSH2 0x72f
0x710 JUMPI
---
0x70a: JUMPDEST 
0x70c: V603 = ISZERO S0
0x70d: V604 = 0x72f
0x710: JUMPI 0x72f V603
---
Entry stack: [V12, 0x1cc, V176, V179, V181, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x0, S0]

================================

Block 0x711
[0x711:0x72e]
---
Predecessors: [0x70a]
Successors: [0x72f]
---
0x711 POP
0x712 PUSH1 0x1
0x714 PUSH1 0xa0
0x716 PUSH1 0x2
0x718 EXP
0x719 SUB
0x71a DUP4
0x71b AND
0x71c PUSH1 0x0
0x71e SWAP1
0x71f DUP2
0x720 MSTORE
0x721 PUSH1 0x3
0x723 PUSH1 0x20
0x725 MSTORE
0x726 PUSH1 0x40
0x728 SWAP1
0x729 SHA3
0x72a SLOAD
0x72b DUP3
0x72c DUP2
0x72d ADD
0x72e GT
---
0x712: V605 = 0x1
0x714: V606 = 0xa0
0x716: V607 = 0x2
0x718: V608 = EXP 0x2 0xa0
0x719: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71b: V610 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x71c: V611 = 0x0
0x720: M[0x0] = V610
0x721: V612 = 0x3
0x723: V613 = 0x20
0x725: M[0x20] = 0x3
0x726: V614 = 0x40
0x729: V615 = SHA3 0x0 0x40
0x72a: V616 = S[V615]
0x72d: V617 = ADD V616 V181
0x72e: V618 = GT V617 V616
---
Entry stack: [V12, 0x1cc, V176, V179, V181, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V618]
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x0, V618]

================================

Block 0x72f
[0x72f:0x734]
---
Predecessors: [0x70a, 0x711]
Successors: [0x735, 0x7aa]
---
0x72f JUMPDEST
0x730 ISZERO
0x731 PUSH2 0x7aa
0x734 JUMPI
---
0x72f: JUMPDEST 
0x730: V619 = ISZERO S0
0x731: V620 = 0x7aa
0x734: JUMPI 0x7aa V619
---
Entry stack: [V12, 0x1cc, V176, V179, V181, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x0]

================================

Block 0x735
[0x735:0x7a9]
---
Predecessors: [0x72f]
Successors: [0x7ae]
---
0x735 PUSH1 0x1
0x737 PUSH1 0xa0
0x739 PUSH1 0x2
0x73b EXP
0x73c SUB
0x73d DUP1
0x73e DUP6
0x73f AND
0x740 PUSH1 0x0
0x742 DUP2
0x743 DUP2
0x744 MSTORE
0x745 PUSH1 0x3
0x747 PUSH1 0x20
0x749 DUP2
0x74a DUP2
0x74b MSTORE
0x74c PUSH1 0x40
0x74e DUP1
0x74f DUP5
0x750 SHA3
0x751 DUP1
0x752 SLOAD
0x753 DUP10
0x754 SWAP1
0x755 SUB
0x756 SWAP1
0x757 SSTORE
0x758 PUSH1 0x4
0x75a DUP3
0x75b MSTORE
0x75c DUP1
0x75d DUP5
0x75e SHA3
0x75f CALLER
0x760 DUP8
0x761 AND
0x762 DUP6
0x763 MSTORE
0x764 DUP3
0x765 MSTORE
0x766 DUP1
0x767 DUP5
0x768 SHA3
0x769 DUP1
0x76a SLOAD
0x76b DUP10
0x76c SWAP1
0x76d SUB
0x76e SWAP1
0x76f SSTORE
0x770 SWAP5
0x771 DUP9
0x772 AND
0x773 DUP1
0x774 DUP5
0x775 MSTORE
0x776 SWAP2
0x777 DUP2
0x778 MSTORE
0x779 SWAP2
0x77a DUP5
0x77b SWAP1
0x77c SHA3
0x77d DUP1
0x77e SLOAD
0x77f DUP8
0x780 ADD
0x781 SWAP1
0x782 SSTORE
0x783 DUP4
0x784 MLOAD
0x785 DUP7
0x786 DUP2
0x787 MSTORE
0x788 SWAP4
0x789 MLOAD
0x78a SWAP1
0x78b SWAP4
0x78c PUSH1 0x0
0x78e DUP1
0x78f MLOAD
0x790 PUSH1 0x20
0x792 PUSH2 0xb31
0x795 DUP4
0x796 CODECOPY
0x797 DUP2
0x798 MLOAD
0x799 SWAP2
0x79a MSTORE
0x79b SWAP3
0x79c SWAP1
0x79d DUP3
0x79e SWAP1
0x79f SUB
0x7a0 ADD
0x7a1 SWAP1
0x7a2 LOG3
0x7a3 POP
0x7a4 PUSH1 0x1
0x7a6 PUSH2 0x7ae
0x7a9 JUMP
---
0x735: V621 = 0x1
0x737: V622 = 0xa0
0x739: V623 = 0x2
0x73b: V624 = EXP 0x2 0xa0
0x73c: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73f: V626 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x740: V627 = 0x0
0x744: M[0x0] = V626
0x745: V628 = 0x3
0x747: V629 = 0x20
0x74b: M[0x20] = 0x3
0x74c: V630 = 0x40
0x750: V631 = SHA3 0x0 0x40
0x752: V632 = S[V631]
0x755: V633 = SUB V632 V181
0x757: S[V631] = V633
0x758: V634 = 0x4
0x75b: M[0x20] = 0x4
0x75e: V635 = SHA3 0x0 0x40
0x75f: V636 = CALLER
0x761: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0x763: M[0x0] = V637
0x765: M[0x20] = V635
0x768: V638 = SHA3 0x0 0x40
0x76a: V639 = S[V638]
0x76d: V640 = SUB V639 V181
0x76f: S[V638] = V640
0x772: V641 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x775: M[0x0] = V641
0x778: M[0x20] = 0x3
0x77c: V642 = SHA3 0x0 0x40
0x77e: V643 = S[V642]
0x780: V644 = ADD V181 V643
0x782: S[V642] = V644
0x784: V645 = M[0x40]
0x787: M[V645] = V181
0x789: V646 = M[0x40]
0x78c: V647 = 0x0
0x78f: V648 = M[0x0]
0x790: V649 = 0x20
0x792: V650 = 0xb31
0x796: CODECOPY 0x0 0xb31 0x20
0x798: V651 = M[0x0]
0x79a: M[0x0] = V648
0x79f: V652 = SUB V645 V646
0x7a0: V653 = ADD V652 0x20
0x7a2: LOG V646 V653 V651 V626 V641
0x7a4: V654 = 0x1
0x7a6: V655 = 0x7ae
0x7a9: JUMP 0x7ae
---
Entry stack: [V12, 0x1cc, V176, V179, V181, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x1]

================================

Block 0x7aa
[0x7aa:0x7ad]
---
Predecessors: [0x72f]
Successors: [0x7ae]
---
0x7aa JUMPDEST
0x7ab POP
0x7ac PUSH1 0x0
---
0x7aa: JUMPDEST 
0x7ac: V656 = 0x0
---
Entry stack: [V12, 0x1cc, V176, V179, V181, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x1cc, V176, V179, V181, 0x0]

================================

Block 0x7ae
[0x7ae:0x7ae]
---
Predecessors: [0x735, 0x7aa]
Successors: [0x7af]
---
0x7ae JUMPDEST
---
0x7ae: JUMPDEST 
---
Entry stack: [V12, 0x1cc, V176, V179, V181, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cc, V176, V179, V181, {0x0, 0x1}]

================================

Block 0x7af
[0x7af:0x7b5]
---
Predecessors: [0x7ae]
Successors: [0x1cc]
---
0x7af JUMPDEST
0x7b0 SWAP4
0x7b1 SWAP3
0x7b2 POP
0x7b3 POP
0x7b4 POP
0x7b5 JUMP
---
0x7af: JUMPDEST 
0x7b5: JUMP 0x1cc
---
Entry stack: [V12, 0x1cc, V176, V179, V181, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x7b6
[0x7b6:0x7cd]
---
Predecessors: [0x24d]
Successors: [0x7ce, 0x7d3]
---
0x7b6 JUMPDEST
0x7b7 PUSH1 0x0
0x7b9 DUP1
0x7ba SLOAD
0x7bb CALLER
0x7bc PUSH1 0x1
0x7be PUSH1 0xa0
0x7c0 PUSH1 0x2
0x7c2 EXP
0x7c3 SUB
0x7c4 SWAP1
0x7c5 DUP2
0x7c6 AND
0x7c7 SWAP2
0x7c8 AND
0x7c9 EQ
0x7ca PUSH2 0x7d3
0x7cd JUMPI
---
0x7b6: JUMPDEST 
0x7b7: V657 = 0x0
0x7ba: V658 = S[0x0]
0x7bb: V659 = CALLER
0x7bc: V660 = 0x1
0x7be: V661 = 0xa0
0x7c0: V662 = 0x2
0x7c2: V663 = EXP 0x2 0xa0
0x7c3: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c6: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0x7c8: V666 = AND V658 0xffffffffffffffffffffffffffffffffffffffff
0x7c9: V667 = EQ V666 V665
0x7ca: V668 = 0x7d3
0x7cd: JUMPI 0x7d3 V667
---
Entry stack: [V12, 0x1cc, V196]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1cc, V196, 0x0]

================================

Block 0x7ce
[0x7ce:0x7d2]
---
Predecessors: [0x7b6]
Successors: []
---
0x7ce PUSH1 0x0
0x7d0 PUSH1 0x0
0x7d2 REVERT
---
0x7ce: V669 = 0x0
0x7d0: V670 = 0x0
0x7d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cc, V196, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cc, V196, 0x0]

================================

Block 0x7d3
[0x7d3:0x7e4]
---
Predecessors: [0x7b6]
Successors: [0x7e5, 0x813]
---
0x7d3 JUMPDEST
0x7d4 PUSH1 0x1
0x7d6 PUSH1 0xa0
0x7d8 PUSH1 0x2
0x7da EXP
0x7db SUB
0x7dc ADDRESS
0x7dd AND
0x7de BALANCE
0x7df DUP3
0x7e0 GT
0x7e1 PUSH2 0x813
0x7e4 JUMPI
---
0x7d3: JUMPDEST 
0x7d4: V671 = 0x1
0x7d6: V672 = 0xa0
0x7d8: V673 = 0x2
0x7da: V674 = EXP 0x2 0xa0
0x7db: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dc: V676 = ADDRESS
0x7dd: V677 = AND V676 0xffffffffffffffffffffffffffffffffffffffff
0x7de: V678 = BALANCE V677
0x7e0: V679 = GT V196 V678
0x7e1: V680 = 0x813
0x7e4: JUMPI 0x813 V679
---
Entry stack: [V12, 0x1cc, V196, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x1cc, V196, 0x0]

================================

Block 0x7e5
[0x7e5:0x812]
---
Predecessors: [0x7d3]
Successors: [0x817]
---
0x7e5 PUSH1 0x0
0x7e7 DUP1
0x7e8 SLOAD
0x7e9 PUSH1 0x40
0x7eb MLOAD
0x7ec PUSH1 0x1
0x7ee PUSH1 0xa0
0x7f0 PUSH1 0x2
0x7f2 EXP
0x7f3 SUB
0x7f4 SWAP1
0x7f5 SWAP2
0x7f6 AND
0x7f7 SWAP2
0x7f8 DUP5
0x7f9 ISZERO
0x7fa PUSH2 0x8fc
0x7fd MUL
0x7fe SWAP2
0x7ff DUP6
0x800 SWAP2
0x801 DUP2
0x802 DUP2
0x803 DUP2
0x804 DUP6
0x805 DUP9
0x806 DUP9
0x807 CALL
0x808 SWAP4
0x809 POP
0x80a POP
0x80b POP
0x80c POP
0x80d SWAP1
0x80e POP
0x80f PUSH2 0x817
0x812 JUMP
---
0x7e5: V681 = 0x0
0x7e8: V682 = S[0x0]
0x7e9: V683 = 0x40
0x7eb: V684 = M[0x40]
0x7ec: V685 = 0x1
0x7ee: V686 = 0xa0
0x7f0: V687 = 0x2
0x7f2: V688 = EXP 0x2 0xa0
0x7f3: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f6: V690 = AND V682 0xffffffffffffffffffffffffffffffffffffffff
0x7f9: V691 = ISZERO V196
0x7fa: V692 = 0x8fc
0x7fd: V693 = MUL 0x8fc V691
0x807: V694 = CALL V693 V690 V196 V684 0x0 V684 0x0
0x80f: V695 = 0x817
0x812: JUMP 0x817
---
Entry stack: [V12, 0x1cc, V196, 0x0]
Stack pops: 2
Stack additions: [S1, V694]
Exit stack: [V12, 0x1cc, V196, V694]

================================

Block 0x813
[0x813:0x816]
---
Predecessors: [0x7d3]
Successors: [0x817]
---
0x813 JUMPDEST
0x814 POP
0x815 PUSH1 0x0
---
0x813: JUMPDEST 
0x815: V696 = 0x0
---
Entry stack: [V12, 0x1cc, V196, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x1cc, V196, 0x0]

================================

Block 0x817
[0x817:0x817]
---
Predecessors: [0x7e5, 0x813]
Successors: [0x818]
---
0x817 JUMPDEST
---
0x817: JUMPDEST 
---
Entry stack: [V12, 0x1cc, V196, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cc, V196, S0]

================================

Block 0x818
[0x818:0x818]
---
Predecessors: [0x817]
Successors: [0x819]
---
0x818 JUMPDEST
---
0x818: JUMPDEST 
---
Entry stack: [V12, 0x1cc, V196, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cc, V196, S0]

================================

Block 0x819
[0x819:0x81d]
---
Predecessors: [0x818]
Successors: [0x1cc]
---
0x819 JUMPDEST
0x81a SWAP2
0x81b SWAP1
0x81c POP
0x81d JUMP
---
0x819: JUMPDEST 
0x81d: JUMP 0x1cc
---
Entry stack: [V12, 0x1cc, V196, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x81e
[0x81e:0x837]
---
Predecessors: [0x274]
Successors: [0x838]
---
0x81e JUMPDEST
0x81f PUSH1 0x1
0x821 PUSH1 0xa0
0x823 PUSH1 0x2
0x825 EXP
0x826 SUB
0x827 DUP2
0x828 AND
0x829 PUSH1 0x0
0x82b SWAP1
0x82c DUP2
0x82d MSTORE
0x82e PUSH1 0x3
0x830 PUSH1 0x20
0x832 MSTORE
0x833 PUSH1 0x40
0x835 SWAP1
0x836 SHA3
0x837 SLOAD
---
0x81e: JUMPDEST 
0x81f: V697 = 0x1
0x821: V698 = 0xa0
0x823: V699 = 0x2
0x825: V700 = EXP 0x2 0xa0
0x826: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x828: V702 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x829: V703 = 0x0
0x82d: M[0x0] = V702
0x82e: V704 = 0x3
0x830: V705 = 0x20
0x832: M[0x20] = 0x3
0x833: V706 = 0x40
0x836: V707 = SHA3 0x0 0x40
0x837: V708 = S[V707]
---
Entry stack: [V12, 0x1fa, V217]
Stack pops: 1
Stack additions: [S0, V708]
Exit stack: [V12, 0x1fa, V217, V708]

================================

Block 0x838
[0x838:0x83c]
---
Predecessors: [0x81e]
Successors: [0x1fa]
---
0x838 JUMPDEST
0x839 SWAP2
0x83a SWAP1
0x83b POP
0x83c JUMP
---
0x838: JUMPDEST 
0x83c: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa, V217, V708]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V708]

================================

Block 0x83d
[0x83d:0x850]
---
Predecessors: [0x2a2, 0x56c]
Successors: [0x851, 0x859]
---
0x83d JUMPDEST
0x83e PUSH1 0x1
0x840 SLOAD
0x841 PUSH1 0x0
0x843 SWAP1
0x844 TIMESTAMP
0x845 SUB
0x846 PUSH3 0x15180
0x84a DUP2
0x84b LT
0x84c ISZERO
0x84d PUSH2 0x859
0x850 JUMPI
---
0x83d: JUMPDEST 
0x83e: V709 = 0x1
0x840: V710 = S[0x1]
0x841: V711 = 0x0
0x844: V712 = TIMESTAMP
0x845: V713 = SUB V712 V710
0x846: V714 = 0x15180
0x84b: V715 = LT V713 0x15180
0x84c: V716 = ISZERO V715
0x84d: V717 = 0x859
0x850: JUMPI 0x859 V716
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, {0x1fa, 0x574}]
Stack pops: 0
Stack additions: [0x0, V713]
Exit stack: [V12, S6, S5, S4, S3, S2, S1, {0x1fa, 0x574}, 0x0, V713]

================================

Block 0x851
[0x851:0x858]
---
Predecessors: [0x83d]
Successors: [0x8ae]
---
0x851 PUSH1 0x19
0x853 SWAP2
0x854 POP
0x855 PUSH2 0x8ae
0x858 JUMP
---
0x851: V718 = 0x19
0x855: V719 = 0x8ae
0x858: JUMP 0x8ae
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 2
Stack additions: [0x19, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x19, V713]

================================

Block 0x859
[0x859:0x864]
---
Predecessors: [0x83d]
Successors: [0x865, 0x86d]
---
0x859 JUMPDEST
0x85a PUSH3 0x93a80
0x85e DUP2
0x85f LT
0x860 ISZERO
0x861 PUSH2 0x86d
0x864 JUMPI
---
0x859: JUMPDEST 
0x85a: V720 = 0x93a80
0x85f: V721 = LT V713 0x93a80
0x860: V722 = ISZERO V721
0x861: V723 = 0x86d
0x864: JUMPI 0x86d V722
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]

================================

Block 0x865
[0x865:0x86c]
---
Predecessors: [0x859]
Successors: [0x8ae]
---
0x865 PUSH1 0x14
0x867 SWAP2
0x868 POP
0x869 PUSH2 0x8ae
0x86c JUMP
---
0x865: V724 = 0x14
0x869: V725 = 0x8ae
0x86c: JUMP 0x8ae
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 2
Stack additions: [0x14, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x14, V713]

================================

Block 0x86d
[0x86d:0x878]
---
Predecessors: [0x859]
Successors: [0x879, 0x881]
---
0x86d JUMPDEST
0x86e PUSH3 0x127500
0x872 DUP2
0x873 LT
0x874 ISZERO
0x875 PUSH2 0x881
0x878 JUMPI
---
0x86d: JUMPDEST 
0x86e: V726 = 0x127500
0x873: V727 = LT V713 0x127500
0x874: V728 = ISZERO V727
0x875: V729 = 0x881
0x878: JUMPI 0x881 V728
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]

================================

Block 0x879
[0x879:0x880]
---
Predecessors: [0x86d]
Successors: [0x8ae]
---
0x879 PUSH1 0xf
0x87b SWAP2
0x87c POP
0x87d PUSH2 0x8ae
0x880 JUMP
---
0x879: V730 = 0xf
0x87d: V731 = 0x8ae
0x880: JUMP 0x8ae
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 2
Stack additions: [0xf, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0xf, V713]

================================

Block 0x881
[0x881:0x88c]
---
Predecessors: [0x86d]
Successors: [0x88d, 0x895]
---
0x881 JUMPDEST
0x882 PUSH3 0x1baf80
0x886 DUP2
0x887 LT
0x888 ISZERO
0x889 PUSH2 0x895
0x88c JUMPI
---
0x881: JUMPDEST 
0x882: V732 = 0x1baf80
0x887: V733 = LT V713 0x1baf80
0x888: V734 = ISZERO V733
0x889: V735 = 0x895
0x88c: JUMPI 0x895 V734
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]

================================

Block 0x88d
[0x88d:0x894]
---
Predecessors: [0x881]
Successors: [0x8ae]
---
0x88d PUSH1 0xa
0x88f SWAP2
0x890 POP
0x891 PUSH2 0x8ae
0x894 JUMP
---
0x88d: V736 = 0xa
0x891: V737 = 0x8ae
0x894: JUMP 0x8ae
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 2
Stack additions: [0xa, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0xa, V713]

================================

Block 0x895
[0x895:0x8a0]
---
Predecessors: [0x881]
Successors: [0x8a1, 0x8a9]
---
0x895 JUMPDEST
0x896 PUSH3 0x24ea00
0x89a DUP2
0x89b LT
0x89c ISZERO
0x89d PUSH2 0x8a9
0x8a0 JUMPI
---
0x895: JUMPDEST 
0x896: V738 = 0x24ea00
0x89b: V739 = LT V713 0x24ea00
0x89c: V740 = ISZERO V739
0x89d: V741 = 0x8a9
0x8a0: JUMPI 0x8a9 V740
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]

================================

Block 0x8a1
[0x8a1:0x8a8]
---
Predecessors: [0x895]
Successors: [0x8ae]
---
0x8a1 PUSH1 0x5
0x8a3 SWAP2
0x8a4 POP
0x8a5 PUSH2 0x8ae
0x8a8 JUMP
---
0x8a1: V742 = 0x5
0x8a5: V743 = 0x8ae
0x8a8: JUMP 0x8ae
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 2
Stack additions: [0x5, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x5, V713]

================================

Block 0x8a9
[0x8a9:0x8ad]
---
Predecessors: [0x895]
Successors: [0x8ae]
---
0x8a9 JUMPDEST
0x8aa PUSH1 0x0
0x8ac SWAP2
0x8ad POP
---
0x8a9: JUMPDEST 
0x8aa: V744 = 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, 0x0, V713]

================================

Block 0x8ae
[0x8ae:0x8b1]
---
Predecessors: [0x851, 0x865, 0x879, 0x88d, 0x8a1, 0x8a9]
Successors: [0x1fa, 0x574]
---
0x8ae JUMPDEST
0x8af POP
0x8b0 SWAP1
0x8b1 JUMP
---
0x8ae: JUMPDEST 
0x8b1: JUMP {0x1fa, 0x574}
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x1fa, 0x574}, {0x0, 0x5, 0xa, 0xf, 0x14, 0x19}, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x0, 0x5, 0xa, 0xf, 0x14, 0x19}]

================================

Block 0x8b2
[0x8b2:0x8c0]
---
Predecessors: [0x2c4, 0x533, 0x629, 0x9ba]
Successors: [0x8c1]
---
0x8b2 JUMPDEST
0x8b3 PUSH1 0x0
0x8b5 PUSH3 0x28de80
0x8b9 PUSH1 0x1
0x8bb SLOAD
0x8bc TIMESTAMP
0x8bd SUB
0x8be LT
0x8bf SWAP1
0x8c0 POP
---
0x8b2: JUMPDEST 
0x8b3: V745 = 0x0
0x8b5: V746 = 0x28de80
0x8b9: V747 = 0x1
0x8bb: V748 = S[0x1]
0x8bc: V749 = TIMESTAMP
0x8bd: V750 = SUB V749 V748
0x8be: V751 = LT V750 0x28de80
---
Entry stack: [V12, S4, S3, S2, S1, {0x1cc, 0x53d, 0x633, 0x9c2}]
Stack pops: 0
Stack additions: [V751]
Exit stack: [V12, S4, S3, S2, S1, {0x1cc, 0x53d, 0x633, 0x9c2}, V751]

================================

Block 0x8c1
[0x8c1:0x8c3]
---
Predecessors: [0x8b2]
Successors: [0x1cc, 0x53d, 0x633, 0x9c2]
---
0x8c1 JUMPDEST
0x8c2 SWAP1
0x8c3 JUMP
---
0x8c1: JUMPDEST 
0x8c3: JUMP {0x1cc, 0x53d, 0x633, 0x9c2}
---
Entry stack: [V12, S5, S4, S3, S2, {0x1cc, 0x53d, 0x633, 0x9c2}, V751]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S2, V751]

================================

Block 0x8c4
[0x8c4:0x8c9]
---
Predecessors: [0x2e8]
Successors: [0x1fa]
---
0x8c4 JUMPDEST
0x8c5 PUSH1 0x1
0x8c7 SLOAD
0x8c8 DUP2
0x8c9 JUMP
---
0x8c4: JUMPDEST 
0x8c5: V752 = 0x1
0x8c7: V753 = S[0x1]
0x8c9: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa]
Stack pops: 1
Stack additions: [S0, V753]
Exit stack: [V12, 0x1fa, V753]

================================

Block 0x8ca
[0x8ca:0x8d8]
---
Predecessors: [0x30a]
Successors: [0x312]
---
0x8ca JUMPDEST
0x8cb PUSH1 0x0
0x8cd SLOAD
0x8ce PUSH1 0x1
0x8d0 PUSH1 0xa0
0x8d2 PUSH1 0x2
0x8d4 EXP
0x8d5 SUB
0x8d6 AND
0x8d7 DUP2
0x8d8 JUMP
---
0x8ca: JUMPDEST 
0x8cb: V754 = 0x0
0x8cd: V755 = S[0x0]
0x8ce: V756 = 0x1
0x8d0: V757 = 0xa0
0x8d2: V758 = 0x2
0x8d4: V759 = EXP 0x2 0xa0
0x8d5: V760 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d6: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0x8d8: JUMP 0x312
---
Entry stack: [V12, 0x312]
Stack pops: 1
Stack additions: [S0, V761]
Exit stack: [V12, 0x312, V761]

================================

Block 0x8d9
[0x8d9:0x8ef]
---
Predecessors: [0x336]
Successors: [0x8f0, 0x8f5]
---
0x8d9 JUMPDEST
0x8da PUSH1 0x0
0x8dc SLOAD
0x8dd CALLER
0x8de PUSH1 0x1
0x8e0 PUSH1 0xa0
0x8e2 PUSH1 0x2
0x8e4 EXP
0x8e5 SUB
0x8e6 SWAP1
0x8e7 DUP2
0x8e8 AND
0x8e9 SWAP2
0x8ea AND
0x8eb EQ
0x8ec PUSH2 0x8f5
0x8ef JUMPI
---
0x8d9: JUMPDEST 
0x8da: V762 = 0x0
0x8dc: V763 = S[0x0]
0x8dd: V764 = CALLER
0x8de: V765 = 0x1
0x8e0: V766 = 0xa0
0x8e2: V767 = 0x2
0x8e4: V768 = EXP 0x2 0xa0
0x8e5: V769 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e8: V770 = AND 0xffffffffffffffffffffffffffffffffffffffff V764
0x8ea: V771 = AND V763 0xffffffffffffffffffffffffffffffffffffffff
0x8eb: V772 = EQ V771 V770
0x8ec: V773 = 0x8f5
0x8ef: JUMPI 0x8f5 V772
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0x8f0
[0x8f0:0x8f4]
---
Predecessors: [0x8d9]
Successors: []
---
0x8f0 PUSH1 0x0
0x8f2 PUSH1 0x0
0x8f4 REVERT
---
0x8f0: V774 = 0x0
0x8f2: V775 = 0x0
0x8f4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0x8f5
[0x8f5:0x902]
---
Predecessors: [0x8d9]
Successors: []
---
0x8f5 JUMPDEST
0x8f6 PUSH1 0x0
0x8f8 SLOAD
0x8f9 PUSH1 0x1
0x8fb PUSH1 0xa0
0x8fd PUSH1 0x2
0x8ff EXP
0x900 SUB
0x901 AND
0x902 SELFDESTRUCT
---
0x8f5: JUMPDEST 
0x8f6: V776 = 0x0
0x8f8: V777 = S[0x0]
0x8f9: V778 = 0x1
0x8fb: V779 = 0xa0
0x8fd: V780 = 0x2
0x8ff: V781 = EXP 0x2 0xa0
0x900: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x901: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
0x902: SELFDESTRUCT V783
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0x903
[0x903:0x903]
---
Predecessors: []
Successors: [0x904]
---
0x903 JUMPDEST
---
0x903: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x904
[0x904:0x905]
---
Predecessors: [0x903]
Successors: []
Has unresolved jump.
---
0x904 JUMPDEST
0x905 JUMP
---
0x904: JUMPDEST 
0x905: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x906
[0x906:0x927]
---
Predecessors: [0x348]
Successors: [0x12d]
---
0x906 JUMPDEST
0x907 PUSH1 0x40
0x909 DUP1
0x90a MLOAD
0x90b DUP1
0x90c DUP3
0x90d ADD
0x90e SWAP1
0x90f SWAP2
0x910 MSTORE
0x911 PUSH1 0x5
0x913 DUP2
0x914 MSTORE
0x915 PUSH1 0xda
0x917 PUSH1 0x2
0x919 EXP
0x91a PUSH5 0x1192561151
0x920 MUL
0x921 PUSH1 0x20
0x923 DUP3
0x924 ADD
0x925 MSTORE
0x926 DUP2
0x927 JUMP
---
0x906: JUMPDEST 
0x907: V784 = 0x40
0x90a: V785 = M[0x40]
0x90d: V786 = ADD 0x40 V785
0x910: M[0x40] = V786
0x911: V787 = 0x5
0x914: M[V785] = 0x5
0x915: V788 = 0xda
0x917: V789 = 0x2
0x919: V790 = EXP 0x2 0xda
0x91a: V791 = 0x1192561151
0x920: V792 = MUL 0x1192561151 0x4000000000000000000000000000000000000000000000000000000
0x921: V793 = 0x20
0x924: V794 = ADD V785 0x20
0x925: M[V794] = 0x4649584544000000000000000000000000000000000000000000000000000000
0x927: JUMP 0x12d
---
Entry stack: [V12, 0x12d]
Stack pops: 1
Stack additions: [S0, V785]
Exit stack: [V12, 0x12d, V785]

================================

Block 0x928
[0x928:0x935]
---
Predecessors: [0x3d8, 0x57c]
Successors: [0x936, 0x937]
---
0x928 JUMPDEST
0x929 PUSH1 0x0
0x92b PUSH1 0x0
0x92d DUP3
0x92e DUP5
0x92f DUP2
0x930 ISZERO
0x931 ISZERO
0x932 PUSH2 0x937
0x935 JUMPI
---
0x928: JUMPDEST 
0x929: V795 = 0x0
0x92b: V796 = 0x0
0x930: V797 = ISZERO S0
0x931: V798 = ISZERO V797
0x932: V799 = 0x937
0x935: JUMPI 0x937 V798
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x936
[0x936:0x936]
---
Predecessors: [0x928]
Successors: []
---
0x936 INVALID
---
0x936: INVALID 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x937
[0x937:0x93d]
---
Predecessors: [0x928]
Successors: [0x93e]
---
0x937 JUMPDEST
0x938 DIV
0x939 SWAP1
0x93a POP
0x93b DUP1
0x93c SWAP2
0x93d POP
---
0x937: JUMPDEST 
0x938: V800 = DIV S0 S1
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V800, V800]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, V800, V800]

================================

Block 0x93e
[0x93e:0x944]
---
Predecessors: [0x937, 0xad6]
Successors: [0x118, 0x11b, 0x1fa, 0x56c, 0x57c, 0x58a]
---
0x93e JUMPDEST
0x93f POP
0x940 SWAP3
0x941 SWAP2
0x942 POP
0x943 POP
0x944 JUMP
---
0x93e: JUMPDEST 
0x944: JUMP S4
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S9, S8, S7, S6, S5, S1]

================================

Block 0x945
[0x945:0x95b]
---
Predecessors: [0x400]
Successors: [0x95c, 0x961]
---
0x945 JUMPDEST
0x946 PUSH1 0x0
0x948 SLOAD
0x949 CALLER
0x94a PUSH1 0x1
0x94c PUSH1 0xa0
0x94e PUSH1 0x2
0x950 EXP
0x951 SUB
0x952 SWAP1
0x953 DUP2
0x954 AND
0x955 SWAP2
0x956 AND
0x957 EQ
0x958 PUSH2 0x961
0x95b JUMPI
---
0x945: JUMPDEST 
0x946: V801 = 0x0
0x948: V802 = S[0x0]
0x949: V803 = CALLER
0x94a: V804 = 0x1
0x94c: V805 = 0xa0
0x94e: V806 = 0x2
0x950: V807 = EXP 0x2 0xa0
0x951: V808 = SUB 0x10000000000000000000000000000000000000000 0x1
0x954: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0x956: V810 = AND V802 0xffffffffffffffffffffffffffffffffffffffff
0x957: V811 = EQ V810 V809
0x958: V812 = 0x961
0x95b: JUMPI 0x961 V811
---
Entry stack: [V12, 0x11b, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b, V355]

================================

Block 0x95c
[0x95c:0x960]
---
Predecessors: [0x945]
Successors: []
---
0x95c PUSH1 0x0
0x95e PUSH1 0x0
0x960 REVERT
---
0x95c: V813 = 0x0
0x95e: V814 = 0x0
0x960: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11b, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b, V355]

================================

Block 0x961
[0x961:0x97c]
---
Predecessors: [0x945]
Successors: [0x97d]
---
0x961 JUMPDEST
0x962 PUSH1 0x0
0x964 DUP1
0x965 SLOAD
0x966 PUSH1 0x1
0x968 PUSH1 0xa0
0x96a PUSH1 0x2
0x96c EXP
0x96d SUB
0x96e NOT
0x96f AND
0x970 PUSH1 0x1
0x972 PUSH1 0xa0
0x974 PUSH1 0x2
0x976 EXP
0x977 SUB
0x978 DUP4
0x979 AND
0x97a OR
0x97b SWAP1
0x97c SSTORE
---
0x961: JUMPDEST 
0x962: V815 = 0x0
0x965: V816 = S[0x0]
0x966: V817 = 0x1
0x968: V818 = 0xa0
0x96a: V819 = 0x2
0x96c: V820 = EXP 0x2 0xa0
0x96d: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96e: V822 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V823 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V816
0x970: V824 = 0x1
0x972: V825 = 0xa0
0x974: V826 = 0x2
0x976: V827 = EXP 0x2 0xa0
0x977: V828 = SUB 0x10000000000000000000000000000000000000000 0x1
0x979: V829 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x97a: V830 = OR V829 V823
0x97c: S[0x0] = V830
---
Entry stack: [V12, 0x11b, V355]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x11b, V355]

================================

Block 0x97d
[0x97d:0x97d]
---
Predecessors: [0x961]
Successors: [0x97e]
---
0x97d JUMPDEST
---
0x97d: JUMPDEST 
---
Entry stack: [V12, 0x11b, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b, V355]

================================

Block 0x97e
[0x97e:0x980]
---
Predecessors: [0x97d]
Successors: [0x11b]
---
0x97e JUMPDEST
0x97f POP
0x980 JUMP
---
0x97e: JUMPDEST 
0x980: JUMP 0x11b
---
Entry stack: [V12, 0x11b, V355]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x981
[0x981:0x998]
---
Predecessors: [0x41e]
Successors: [0x312]
---
0x981 JUMPDEST
0x982 PUSH20 0x8e9342eb769c4039aaf33da739fb2fc8af9afdc1
0x997 DUP2
0x998 JUMP
---
0x981: JUMPDEST 
0x982: V831 = 0x8e9342eb769c4039aaf33da739fb2fc8af9afdc1
0x998: JUMP 0x312
---
Entry stack: [V12, 0x312]
Stack pops: 1
Stack additions: [S0, 0x8e9342eb769c4039aaf33da739fb2fc8af9afdc1]
Exit stack: [V12, 0x312, 0x8e9342eb769c4039aaf33da739fb2fc8af9afdc1]

================================

Block 0x999
[0x999:0x9b9]
---
Predecessors: [0x44a]
Successors: [0x9ba, 0x9c2]
---
0x999 JUMPDEST
0x99a PUSH1 0x1
0x99c PUSH1 0xa0
0x99e PUSH1 0x2
0x9a0 EXP
0x9a1 SUB
0x9a2 CALLER
0x9a3 AND
0x9a4 PUSH1 0x0
0x9a6 SWAP1
0x9a7 DUP2
0x9a8 MSTORE
0x9a9 PUSH1 0x3
0x9ab PUSH1 0x20
0x9ad MSTORE
0x9ae PUSH1 0x40
0x9b0 DUP2
0x9b1 SHA3
0x9b2 SLOAD
0x9b3 DUP3
0x9b4 GT
0x9b5 DUP1
0x9b6 PUSH2 0x9c2
0x9b9 JUMPI
---
0x999: JUMPDEST 
0x99a: V832 = 0x1
0x99c: V833 = 0xa0
0x99e: V834 = 0x2
0x9a0: V835 = EXP 0x2 0xa0
0x9a1: V836 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a2: V837 = CALLER
0x9a3: V838 = AND V837 0xffffffffffffffffffffffffffffffffffffffff
0x9a4: V839 = 0x0
0x9a8: M[0x0] = V838
0x9a9: V840 = 0x3
0x9ab: V841 = 0x20
0x9ad: M[0x20] = 0x3
0x9ae: V842 = 0x40
0x9b1: V843 = SHA3 0x0 0x40
0x9b2: V844 = S[V843]
0x9b4: V845 = GT V387 V844
0x9b6: V846 = 0x9c2
0x9b9: JUMPI 0x9c2 V845
---
Entry stack: [V12, 0x1cc, V385, V387]
Stack pops: 1
Stack additions: [S0, 0x0, V845]
Exit stack: [V12, 0x1cc, V385, V387, 0x0, V845]

================================

Block 0x9ba
[0x9ba:0x9c1]
---
Predecessors: [0x999]
Successors: [0x8b2]
---
0x9ba POP
0x9bb PUSH2 0x9c2
0x9be PUSH2 0x8b2
0x9c1 JUMP
---
0x9bb: V847 = 0x9c2
0x9be: V848 = 0x8b2
0x9c1: JUMP 0x8b2
---
Entry stack: [V12, 0x1cc, V385, V387, 0x0, V845]
Stack pops: 1
Stack additions: [0x9c2]
Exit stack: [V12, 0x1cc, V385, V387, 0x0, 0x9c2]

================================

Block 0x9c2
[0x9c2:0x9c2]
---
Predecessors: [0x8c1, 0x999]
Successors: [0x9c3]
---
0x9c2 JUMPDEST
---
0x9c2: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x9c3
[0x9c3:0x9c8]
---
Predecessors: [0x9c2]
Successors: [0x9c9, 0x9d0]
---
0x9c3 JUMPDEST
0x9c4 ISZERO
0x9c5 PUSH2 0x9d0
0x9c8 JUMPI
---
0x9c3: JUMPDEST 
0x9c4: V849 = ISZERO S0
0x9c5: V850 = 0x9d0
0x9c8: JUMPI 0x9d0 V849
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1]

================================

Block 0x9c9
[0x9c9:0x9cf]
---
Predecessors: [0x9c3]
Successors: [0x6a1]
---
0x9c9 POP
0x9ca PUSH1 0x0
0x9cc PUSH2 0x6a1
0x9cf JUMP
---
0x9ca: V851 = 0x0
0x9cc: V852 = 0x6a1
0x9cf: JUMP 0x6a1
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, S3, S2, S1, 0x0]

================================

Block 0x9d0
[0x9d0:0xa28]
---
Predecessors: [0x9c3]
Successors: [0xa29]
---
0x9d0 JUMPDEST
0x9d1 PUSH1 0x1
0x9d3 PUSH1 0xa0
0x9d5 PUSH1 0x2
0x9d7 EXP
0x9d8 SUB
0x9d9 CALLER
0x9da DUP2
0x9db AND
0x9dc PUSH1 0x0
0x9de DUP2
0x9df DUP2
0x9e0 MSTORE
0x9e1 PUSH1 0x3
0x9e3 PUSH1 0x20
0x9e5 SWAP1
0x9e6 DUP2
0x9e7 MSTORE
0x9e8 PUSH1 0x40
0x9ea DUP1
0x9eb DUP4
0x9ec SHA3
0x9ed DUP1
0x9ee SLOAD
0x9ef DUP9
0x9f0 SWAP1
0x9f1 SUB
0x9f2 SWAP1
0x9f3 SSTORE
0x9f4 SWAP4
0x9f5 DUP8
0x9f6 AND
0x9f7 DUP1
0x9f8 DUP4
0x9f9 MSTORE
0x9fa SWAP2
0x9fb DUP5
0x9fc SWAP1
0x9fd SHA3
0x9fe DUP1
0x9ff SLOAD
0xa00 DUP8
0xa01 ADD
0xa02 SWAP1
0xa03 SSTORE
0xa04 DUP4
0xa05 MLOAD
0xa06 DUP7
0xa07 DUP2
0xa08 MSTORE
0xa09 SWAP4
0xa0a MLOAD
0xa0b SWAP2
0xa0c SWAP4
0xa0d PUSH1 0x0
0xa0f DUP1
0xa10 MLOAD
0xa11 PUSH1 0x20
0xa13 PUSH2 0xb31
0xa16 DUP4
0xa17 CODECOPY
0xa18 DUP2
0xa19 MLOAD
0xa1a SWAP2
0xa1b MSTORE
0xa1c SWAP3
0xa1d SWAP1
0xa1e DUP2
0xa1f SWAP1
0xa20 SUB
0xa21 SWAP1
0xa22 SWAP2
0xa23 ADD
0xa24 SWAP1
0xa25 LOG3
0xa26 POP
0xa27 PUSH1 0x1
---
0x9d0: JUMPDEST 
0x9d1: V853 = 0x1
0x9d3: V854 = 0xa0
0x9d5: V855 = 0x2
0x9d7: V856 = EXP 0x2 0xa0
0x9d8: V857 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d9: V858 = CALLER
0x9db: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V858
0x9dc: V860 = 0x0
0x9e0: M[0x0] = V859
0x9e1: V861 = 0x3
0x9e3: V862 = 0x20
0x9e7: M[0x20] = 0x3
0x9e8: V863 = 0x40
0x9ec: V864 = SHA3 0x0 0x40
0x9ee: V865 = S[V864]
0x9f1: V866 = SUB V865 S1
0x9f3: S[V864] = V866
0x9f6: V867 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x9f9: M[0x0] = V867
0x9fd: V868 = SHA3 0x0 0x40
0x9ff: V869 = S[V868]
0xa01: V870 = ADD S1 V869
0xa03: S[V868] = V870
0xa05: V871 = M[0x40]
0xa08: M[V871] = S1
0xa0a: V872 = M[0x40]
0xa0d: V873 = 0x0
0xa10: V874 = M[0x0]
0xa11: V875 = 0x20
0xa13: V876 = 0xb31
0xa17: CODECOPY 0x0 0xb31 0x20
0xa19: V877 = M[0x0]
0xa1b: M[0x0] = V874
0xa20: V878 = SUB V871 V872
0xa23: V879 = ADD 0x20 V878
0xa25: LOG V872 V879 V877 V859 V867
0xa27: V880 = 0x1
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, S3, S2, S1, 0x1]

================================

Block 0xa29
[0xa29:0xa2e]
---
Predecessors: [0x9d0]
Successors: [0x1cc]
---
0xa29 JUMPDEST
0xa2a SWAP3
0xa2b SWAP2
0xa2c POP
0xa2d POP
0xa2e JUMP
---
0xa29: JUMPDEST 
0xa2e: JUMP S3
---
Entry stack: [V12, S3, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0xa2f
[0xa2f:0xa45]
---
Predecessors: [0x47d]
Successors: [0xa46, 0xa4b]
---
0xa2f JUMPDEST
0xa30 PUSH1 0x0
0xa32 SLOAD
0xa33 CALLER
0xa34 PUSH1 0x1
0xa36 PUSH1 0xa0
0xa38 PUSH1 0x2
0xa3a EXP
0xa3b SUB
0xa3c SWAP1
0xa3d DUP2
0xa3e AND
0xa3f SWAP2
0xa40 AND
0xa41 EQ
0xa42 PUSH2 0xa4b
0xa45 JUMPI
---
0xa2f: JUMPDEST 
0xa30: V881 = 0x0
0xa32: V882 = S[0x0]
0xa33: V883 = CALLER
0xa34: V884 = 0x1
0xa36: V885 = 0xa0
0xa38: V886 = 0x2
0xa3a: V887 = EXP 0x2 0xa0
0xa3b: V888 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3e: V889 = AND 0xffffffffffffffffffffffffffffffffffffffff V883
0xa40: V890 = AND V882 0xffffffffffffffffffffffffffffffffffffffff
0xa41: V891 = EQ V890 V889
0xa42: V892 = 0xa4b
0xa45: JUMPI 0xa4b V891
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0xa46
[0xa46:0xa4a]
---
Predecessors: [0xa2f]
Successors: []
---
0xa46 PUSH1 0x0
0xa48 PUSH1 0x0
0xa4a REVERT
---
0xa46: V893 = 0x0
0xa48: V894 = 0x0
0xa4a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0xa4b
[0xa4b:0xa53]
---
Predecessors: [0xa2f]
Successors: [0xa54, 0xa58]
---
0xa4b JUMPDEST
0xa4c PUSH1 0x1
0xa4e SLOAD
0xa4f ISZERO
0xa50 PUSH2 0xa58
0xa53 JUMPI
---
0xa4b: JUMPDEST 
0xa4c: V895 = 0x1
0xa4e: V896 = S[0x1]
0xa4f: V897 = ISZERO V896
0xa50: V898 = 0xa58
0xa53: JUMPI 0xa58 V897
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0xa54
[0xa54:0xa57]
---
Predecessors: [0xa4b]
Successors: [0x118]
---
0xa54 PUSH2 0x118
0xa57 JUMP
---
0xa54: V899 = 0x118
0xa57: JUMP 0x118
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0xa58
[0xa58:0xab0]
---
Predecessors: [0xa4b]
Successors: [0xab1]
---
0xa58 JUMPDEST
0xa59 TIMESTAMP
0xa5a PUSH1 0x1
0xa5c SSTORE
0xa5d PUSH4 0x1dcd6500
0xa62 PUSH1 0x2
0xa64 DUP2
0xa65 SWAP1
0xa66 SSTORE
0xa67 PUSH1 0x0
0xa69 DUP1
0xa6a SLOAD
0xa6b PUSH1 0x1
0xa6d PUSH1 0xa0
0xa6f PUSH1 0x2
0xa71 EXP
0xa72 SUB
0xa73 SWAP1
0xa74 DUP2
0xa75 AND
0xa76 DUP3
0xa77 MSTORE
0xa78 PUSH1 0x3
0xa7a PUSH1 0x20
0xa7c SWAP1
0xa7d DUP2
0xa7e MSTORE
0xa7f PUSH1 0x40
0xa81 DUP1
0xa82 DUP5
0xa83 SHA3
0xa84 DUP6
0xa85 SWAP1
0xa86 SSTORE
0xa87 SWAP3
0xa88 SLOAD
0xa89 DUP4
0xa8a MLOAD
0xa8b SWAP5
0xa8c DUP6
0xa8d MSTORE
0xa8e SWAP3
0xa8f MLOAD
0xa90 SWAP3
0xa91 DUP3
0xa92 AND
0xa93 SWAP4
0xa94 ADDRESS
0xa95 SWAP1
0xa96 SWAP3
0xa97 AND
0xa98 SWAP3
0xa99 PUSH1 0x0
0xa9b DUP1
0xa9c MLOAD
0xa9d PUSH1 0x20
0xa9f PUSH2 0xb31
0xaa2 DUP4
0xaa3 CODECOPY
0xaa4 DUP2
0xaa5 MLOAD
0xaa6 SWAP2
0xaa7 MSTORE
0xaa8 SWAP3
0xaa9 DUP2
0xaaa SWAP1
0xaab SUB
0xaac SWAP1
0xaad SWAP2
0xaae ADD
0xaaf SWAP1
0xab0 LOG3
---
0xa58: JUMPDEST 
0xa59: V900 = TIMESTAMP
0xa5a: V901 = 0x1
0xa5c: S[0x1] = V900
0xa5d: V902 = 0x1dcd6500
0xa62: V903 = 0x2
0xa66: S[0x2] = 0x1dcd6500
0xa67: V904 = 0x0
0xa6a: V905 = S[0x0]
0xa6b: V906 = 0x1
0xa6d: V907 = 0xa0
0xa6f: V908 = 0x2
0xa71: V909 = EXP 0x2 0xa0
0xa72: V910 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa75: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V905
0xa77: M[0x0] = V911
0xa78: V912 = 0x3
0xa7a: V913 = 0x20
0xa7e: M[0x20] = 0x3
0xa7f: V914 = 0x40
0xa83: V915 = SHA3 0x0 0x40
0xa86: S[V915] = 0x1dcd6500
0xa88: V916 = S[0x0]
0xa8a: V917 = M[0x40]
0xa8d: M[V917] = 0x1dcd6500
0xa8f: V918 = M[0x40]
0xa92: V919 = AND 0xffffffffffffffffffffffffffffffffffffffff V916
0xa94: V920 = ADDRESS
0xa97: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V920
0xa99: V922 = 0x0
0xa9c: V923 = M[0x0]
0xa9d: V924 = 0x20
0xa9f: V925 = 0xb31
0xaa3: CODECOPY 0x0 0xb31 0x20
0xaa5: V926 = M[0x0]
0xaa7: M[0x0] = V923
0xaab: V927 = SUB V917 V918
0xaae: V928 = ADD 0x20 V927
0xab0: LOG V918 V928 V926 V921 V919
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0xab1
[0xab1:0xab1]
---
Predecessors: [0xa58]
Successors: [0xab2]
---
0xab1 JUMPDEST
---
0xab1: JUMPDEST 
---
Entry stack: [V12, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11b]

================================

Block 0xab2
[0xab2:0xab3]
---
Predecessors: [0xab1]
Successors: [0x11b]
---
0xab2 JUMPDEST
0xab3 JUMP
---
0xab2: JUMPDEST 
0xab3: JUMP 0x11b
---
Entry stack: [V12, 0x11b]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xab4
[0xab4:0xac0]
---
Predecessors: [0x48f, 0x55b, 0x574]
Successors: [0xac1, 0xad0]
---
0xab4 JUMPDEST
0xab5 PUSH1 0x0
0xab7 DUP3
0xab8 DUP3
0xab9 MUL
0xaba DUP4
0xabb ISZERO
0xabc DUP1
0xabd PUSH2 0xad0
0xac0 JUMPI
---
0xab4: JUMPDEST 
0xab5: V929 = 0x0
0xab9: V930 = MUL S0 S1
0xabb: V931 = ISZERO S1
0xabd: V932 = 0xad0
0xac0: JUMPI 0xad0 V931
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V930, V931]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V930, V931]

================================

Block 0xac1
[0xac1:0xacb]
---
Predecessors: [0xab4]
Successors: [0xacc, 0xacd]
---
0xac1 POP
0xac2 DUP3
0xac3 DUP5
0xac4 DUP3
0xac5 DUP2
0xac6 ISZERO
0xac7 ISZERO
0xac8 PUSH2 0xacd
0xacb JUMPI
---
0xac6: V933 = ISZERO S4
0xac7: V934 = ISZERO V933
0xac8: V935 = 0xacd
0xacb: JUMPI 0xacd V934
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V930, V931]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V930, S3, S4, V930]

================================

Block 0xacc
[0xacc:0xacc]
---
Predecessors: [0xac1]
Successors: []
---
0xacc INVALID
---
0xacc: INVALID 
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V930, S2, S1, V930]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V930, S2, S1, V930]

================================

Block 0xacd
[0xacd:0xacf]
---
Predecessors: [0xac1]
Successors: [0xad0]
---
0xacd JUMPDEST
0xace DIV
0xacf EQ
---
0xacd: JUMPDEST 
0xace: V936 = DIV V930 S1
0xacf: V937 = EQ V936 S2
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V930, S2, S1, V930]
Stack pops: 3
Stack additions: [V937]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V930, V937]

================================

Block 0xad0
[0xad0:0xad5]
---
Predecessors: [0xab4, 0xacd]
Successors: [0xad6, 0xadd]
---
0xad0 JUMPDEST
0xad1 ISZERO
0xad2 PUSH2 0xadd
0xad5 JUMPI
---
0xad0: JUMPDEST 
0xad1: V938 = ISZERO S0
0xad2: V939 = 0xadd
0xad5: JUMPI 0xadd V938
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V930, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V930]

================================

Block 0xad6
[0xad6:0xadc]
---
Predecessors: [0xad0]
Successors: [0x93e]
---
0xad6 DUP1
0xad7 SWAP2
0xad8 POP
0xad9 PUSH2 0x93e
0xadc JUMP
---
0xad9: V940 = 0x93e
0xadc: JUMP 0x93e
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0xadd
[0xadd:0xae2]
---
Predecessors: [0xad0]
Successors: []
---
0xadd JUMPDEST
0xade PUSH1 0x0
0xae0 PUSH1 0x0
0xae2 REVERT
---
0xadd: JUMPDEST 
0xade: V941 = 0x0
0xae0: V942 = 0x0
0xae2: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0xae3
[0xae3:0xae3]
---
Predecessors: []
Successors: [0xae4]
---
0xae3 JUMPDEST
---
0xae3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xae4
[0xae4:0xaea]
---
Predecessors: [0xae3]
Successors: []
Has unresolved jump.
---
0xae4 JUMPDEST
0xae5 POP
0xae6 SWAP3
0xae7 SWAP2
0xae8 POP
0xae9 POP
0xaea JUMP
---
0xae4: JUMPDEST 
0xaea: JUMP S4
---
Entry stack: []
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xaeb
[0xaeb:0xafc]
---
Predecessors: [0x4b7]
Successors: [0x1fa]
---
0xaeb JUMPDEST
0xaec PUSH1 0x3
0xaee PUSH1 0x20
0xaf0 MSTORE
0xaf1 PUSH1 0x0
0xaf3 SWAP1
0xaf4 DUP2
0xaf5 MSTORE
0xaf6 PUSH1 0x40
0xaf8 SWAP1
0xaf9 SHA3
0xafa SLOAD
0xafb DUP2
0xafc JUMP
---
0xaeb: JUMPDEST 
0xaec: V943 = 0x3
0xaee: V944 = 0x20
0xaf0: M[0x20] = 0x3
0xaf1: V945 = 0x0
0xaf5: M[0x0] = V428
0xaf6: V946 = 0x40
0xaf9: V947 = SHA3 0x0 0x40
0xafa: V948 = S[V947]
0xafc: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa, V428]
Stack pops: 2
Stack additions: [S1, V948]
Exit stack: [V12, 0x1fa, V948]

================================

Block 0xafd
[0xafd:0xb23]
---
Predecessors: [0x4e5]
Successors: [0xb24]
---
0xafd JUMPDEST
0xafe PUSH1 0x1
0xb00 PUSH1 0xa0
0xb02 PUSH1 0x2
0xb04 EXP
0xb05 SUB
0xb06 DUP1
0xb07 DUP4
0xb08 AND
0xb09 PUSH1 0x0
0xb0b SWAP1
0xb0c DUP2
0xb0d MSTORE
0xb0e PUSH1 0x4
0xb10 PUSH1 0x20
0xb12 SWAP1
0xb13 DUP2
0xb14 MSTORE
0xb15 PUSH1 0x40
0xb17 DUP1
0xb18 DUP4
0xb19 SHA3
0xb1a SWAP4
0xb1b DUP6
0xb1c AND
0xb1d DUP4
0xb1e MSTORE
0xb1f SWAP3
0xb20 SWAP1
0xb21 MSTORE
0xb22 SHA3
0xb23 SLOAD
---
0xafd: JUMPDEST 
0xafe: V949 = 0x1
0xb00: V950 = 0xa0
0xb02: V951 = 0x2
0xb04: V952 = EXP 0x2 0xa0
0xb05: V953 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb08: V954 = AND V447 0xffffffffffffffffffffffffffffffffffffffff
0xb09: V955 = 0x0
0xb0d: M[0x0] = V954
0xb0e: V956 = 0x4
0xb10: V957 = 0x20
0xb14: M[0x20] = 0x4
0xb15: V958 = 0x40
0xb19: V959 = SHA3 0x0 0x40
0xb1c: V960 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0xb1e: M[0x0] = V960
0xb21: M[0x20] = V959
0xb22: V961 = SHA3 0x0 0x40
0xb23: V962 = S[V961]
---
Entry stack: [V12, 0x1fa, V447, V450]
Stack pops: 2
Stack additions: [S1, S0, V962]
Exit stack: [V12, 0x1fa, V447, V450, V962]

================================

Block 0xb24
[0xb24:0xb29]
---
Predecessors: [0xafd]
Successors: [0x1fa]
---
0xb24 JUMPDEST
0xb25 SWAP3
0xb26 SWAP2
0xb27 POP
0xb28 POP
0xb29 JUMP
---
0xb24: JUMPDEST 
0xb29: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa, V447, V450, V962]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V962]

================================

Block 0xb2a
[0xb2a:0xb2f]
---
Predecessors: [0x519]
Successors: [0x1fa]
---
0xb2a JUMPDEST
0xb2b PUSH1 0x2
0xb2d SLOAD
0xb2e DUP2
0xb2f JUMP
---
0xb2a: JUMPDEST 
0xb2b: V963 = 0x2
0xb2d: V964 = S[0x2]
0xb2f: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa]
Stack pops: 1
Stack additions: [S0, V964]
Exit stack: [V12, 0x1fa, V964]

================================

Block 0xb30
[0xb30:0xb7b]
---
Predecessors: []
Successors: []
---
0xb30 STOP
0xb31 MISSING 0xdd
0xb32 CALLCODE
0xb33 MSTORE
0xb34 MISSING 0xad
0xb35 SHL
0xb36 MISSING 0xe2
0xb37 MISSING 0xc8
0xb38 SWAP12
0xb39 PUSH10 0xc2b068fc378daa952ba7
0xb44 CALL
0xb45 PUSH4 0xc4a11628
0xb4a CREATE2
0xb4b GAS
0xb4c MISSING 0x4d
0xb4d CREATE2
0xb4e MISSING 0x23
0xb4f MISSING 0xb3
0xb50 MISSING 0xef
0xb51 LOG1
0xb52 PUSH6 0x627a7a723058
0xb59 SHA3
0xb5a MISSING 0x49
0xb5b MULMOD
0xb5c MISSING 0x5f
0xb5d PUSH28 0x23b231c4fe18ee43ff3e65233e8a7099950f8d6cb291c2c9cb37fe7
0xb7a STOP
0xb7b MISSING 0x29
---
0xb30: STOP 
0xb31: MISSING 0xdd
0xb32: V965 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xb33: M[V965] = S7
0xb34: MISSING 0xad
0xb35: V966 = SHL S0 S1
0xb36: MISSING 0xe2
0xb37: MISSING 0xc8
0xb39: V967 = 0xc2b068fc378daa952ba7
0xb44: V968 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0xb45: V969 = 0xc4a11628
0xb4a: V970 = CREATE2 0xc4a11628 V968 S6 S7
0xb4b: V971 = GAS
0xb4c: MISSING 0x4d
0xb4d: V972 = CREATE2 S0 S1 S2 S3
0xb4e: MISSING 0x23
0xb4f: MISSING 0xb3
0xb50: MISSING 0xef
0xb51: LOG S0 S1 S2
0xb52: V973 = 0x627a7a723058
0xb59: V974 = SHA3 0x627a7a723058 S3
0xb5a: MISSING 0x49
0xb5b: V975 = MULMOD S0 S1 S2
0xb5c: MISSING 0x5f
0xb5d: V976 = 0x23b231c4fe18ee43ff3e65233e8a7099950f8d6cb291c2c9cb37fe7
0xb7a: STOP 
0xb7b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V966, V971, V970, S8, S9, S10, S11, S0, V972, V974, V975, 0x23b231c4fe18ee43ff3e65233e8a7099950f8d6cb291c2c9cb37fe7]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x11d
Exit block: 0x19f
Body: 0x11d, 0x124, 0x125, 0x12d, 0x153, 0x161, 0x173, 0x186, 0x19f, 0x60a

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x1ad
Exit block: 0x1cc
Body: 0x1ad, 0x1b4, 0x1b5, 0x1cc, 0x629, 0x633, 0x639, 0x640, 0x6a1

Function 2:
Public function signature: 0x15143d6a
Entry block: 0x1e0
Exit block: 0x11b
Body: 0x11b, 0x1e0

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x1ea
Exit block: 0x1fa
Body: 0x1ea, 0x1f1, 0x1f2, 0x1fa, 0x6a7, 0x6ab

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x20c
Exit block: 0x1cc
Body: 0x1cc, 0x20c, 0x213, 0x214, 0x6ae, 0x6d2, 0x6fe, 0x705, 0x70a, 0x711, 0x72f, 0x735, 0x7aa, 0x7ae, 0x7af

Function 5:
Public function signature: 0x2e1a7d4d
Entry block: 0x245
Exit block: 0x1cc
Body: 0x1cc, 0x245, 0x24c, 0x24d, 0x7b6, 0x7ce, 0x7d3, 0x7e5, 0x813, 0x817, 0x818, 0x819

Function 6:
Public function signature: 0x70a08231
Entry block: 0x26c
Exit block: 0x1fa
Body: 0x1fa, 0x26c, 0x273, 0x274, 0x81e, 0x838

Function 7:
Public function signature: 0x75b4d78c
Entry block: 0x29a
Exit block: 0x2a1
Body: 0x1fa, 0x29a, 0x2a1, 0x2a2

Function 8:
Public function signature: 0x773ef1cf
Entry block: 0x2bc
Exit block: 0x1cc
Body: 0x1cc, 0x2bc, 0x2c3, 0x2c4

Function 9:
Public function signature: 0x8da58897
Entry block: 0x2e0
Exit block: 0x1fa
Body: 0x1fa, 0x2e0, 0x2e7, 0x2e8, 0x8c4

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x302
Exit block: 0x312
Body: 0x302, 0x309, 0x30a, 0x312, 0x8ca

Function 11:
Public function signature: 0x955ef429
Entry block: 0x32e
Exit block: 0x8f5
Body: 0x32e, 0x335, 0x336, 0x8d9, 0x8f0, 0x8f5

Function 12:
Public function signature: 0x95d89b41
Entry block: 0x340
Exit block: 0x19f
Body: 0x12d, 0x153, 0x161, 0x173, 0x186, 0x19f, 0x340, 0x347, 0x348, 0x906

Function 13:
Public function signature: 0xa391c15b
Entry block: 0x3d0
Exit block: 0x11b
Body: 0x11b, 0x3d0, 0x3d7, 0x3d8

Function 14:
Public function signature: 0xa6f9dae1
Entry block: 0x3f8
Exit block: 0x11b
Body: 0x11b, 0x3f8, 0x3ff, 0x400, 0x945, 0x95c, 0x961, 0x97d, 0x97e

Function 15:
Public function signature: 0xa7be85c6
Entry block: 0x416
Exit block: 0x312
Body: 0x312, 0x416, 0x41d, 0x41e, 0x981

Function 16:
Public function signature: 0xa9059cbb
Entry block: 0x442
Exit block: 0x1cc
Body: 0x1cc, 0x442, 0x449, 0x44a, 0x6a1, 0x999, 0x9ba, 0x9c2, 0x9c3, 0x9c9, 0x9d0, 0xa29

Function 17:
Public function signature: 0xb66a0e5d
Entry block: 0x475
Exit block: 0x11b
Body: 0x118, 0x119, 0x11b, 0x475, 0x47c, 0x47d, 0xa2f, 0xa46, 0xa4b, 0xa54, 0xa58, 0xab1, 0xab2

Function 18:
Public function signature: 0xc8a4ac9c
Entry block: 0x487
Exit block: 0x1fa
Body: 0x1fa, 0x487, 0x48e, 0x48f

Function 19:
Public function signature: 0xd233e5c0
Entry block: 0x4af
Exit block: 0x1fa
Body: 0x1fa, 0x4af, 0x4b6, 0x4b7, 0xaeb

Function 20:
Public function signature: 0xdd62ed3e
Entry block: 0x4dd
Exit block: 0x1fa
Body: 0x1fa, 0x4dd, 0x4e4, 0x4e5, 0xafd, 0xb24

Function 21:
Public function signature: 0xe5a93dd8
Entry block: 0x511
Exit block: 0x1fa
Body: 0x1fa, 0x511, 0x518, 0x519, 0xb2a

Function 22:
Public fallback function
Entry block: 0x10c
Exit block: 0x11b
Body: 0x10c, 0x110, 0x118, 0x119, 0x11b

Function 23:
Private function
Entry block: 0xab4
Exit block: 0x93e
Body: 0x57c, 0x928, 0x937, 0x93e, 0xab4, 0xac1, 0xacd, 0xad0, 0xad6

Function 24:
Private function
Entry block: 0x83d
Exit block: 0x8ae
Body: 0x83d, 0x851, 0x859, 0x865, 0x86d, 0x879, 0x881, 0x88d, 0x895, 0x8a1, 0x8a9, 0x8ae

Function 25:
Private function
Entry block: 0x8b2
Exit block: 0x8c1
Body: 0x8b2, 0x8c1

Function 26:
Private function
Entry block: 0x533
Exit block: 0x93e
Body: 0x533, 0x53d, 0x544, 0x550, 0x55b, 0x56c, 0x56c, 0x574, 0x57c, 0x58a, 0x5a2, 0x607, 0x928, 0x937, 0x93e, 0xab4, 0xac1, 0xacd, 0xad0, 0xad6

