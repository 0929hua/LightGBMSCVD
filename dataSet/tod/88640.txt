Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x35]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x35
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x35
0xa: JUMPI 0x35 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x94]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x35faa416
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x94
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x35faa416
0x1a: V12 = EQ V10 0x35faa416
0x1b: V13 = 0x94
0x1e: JUMPI 0x94 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xd4]
---
0x1f DUP1
0x20 PUSH4 0x5ccaf589
0x25 EQ
0x26 PUSH2 0xd4
0x29 JUMPI
---
0x20: V14 = 0x5ccaf589
0x25: V15 = EQ 0x5ccaf589 V10
0x26: V16 = 0xd4
0x29: JUMPI 0xd4 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xe7]
---
0x2a DUP1
0x2b PUSH4 0x63898e2b
0x30 EQ
0x31 PUSH2 0xe7
0x34 JUMPI
---
0x2b: V17 = 0x63898e2b
0x30: V18 = EQ 0x63898e2b V10
0x31: V19 = 0xe7
0x34: JUMPI 0xe7 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x8f]
---
Predecessors: [0x0, 0x2a]
Successors: [0x90, 0xfc]
---
0x35 JUMPDEST
0x36 PUSH2 0xfa
0x39 PUSH1 0x0
0x3b DUP1
0x3c SLOAD
0x3d PUSH21 0xff0000000000000000000000000000000000000000
0x53 NOT
0x54 AND
0x55 PUSH1 0xa0
0x57 PUSH1 0x2
0x59 EXP
0x5a OR
0x5b DUP1
0x5c DUP3
0x5d SSTORE
0x5e PUSH1 0x40
0x60 MLOAD
0x61 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76 SWAP1
0x77 SWAP2
0x78 AND
0x79 SWAP2
0x7a SWAP1
0x7b CALLVALUE
0x7c SWAP1
0x7d DUP3
0x7e DUP2
0x7f DUP2
0x80 DUP2
0x81 DUP6
0x82 DUP9
0x83 DUP4
0x84 CALL
0x85 SWAP4
0x86 POP
0x87 POP
0x88 POP
0x89 POP
0x8a ISZERO
0x8b ISZERO
0x8c PUSH2 0xfc
0x8f JUMPI
---
0x35: JUMPDEST 
0x36: V20 = 0xfa
0x39: V21 = 0x0
0x3c: V22 = S[0x0]
0x3d: V23 = 0xff0000000000000000000000000000000000000000
0x53: V24 = NOT 0xff0000000000000000000000000000000000000000
0x54: V25 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V22
0x55: V26 = 0xa0
0x57: V27 = 0x2
0x59: V28 = EXP 0x2 0xa0
0x5a: V29 = OR 0x10000000000000000000000000000000000000000 V25
0x5d: S[0x0] = V29
0x5e: V30 = 0x40
0x60: V31 = M[0x40]
0x61: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x78: V33 = AND V29 0xffffffffffffffffffffffffffffffffffffffff
0x7b: V34 = CALLVALUE
0x84: V35 = CALL 0x0 V33 V34 V31 0x0 V31 0x0
0x8a: V36 = ISZERO V35
0x8b: V37 = ISZERO V36
0x8c: V38 = 0xfc
0x8f: JUMPI 0xfc V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x35]
Successors: []
---
0x90 PUSH2 0x2
0x93 JUMP
---
0x90: V39 = 0x2
0x93: THROW 
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x94
[0x94:0xcf]
---
Predecessors: [0xb]
Successors: [0xd0, 0xfc]
---
0x94 JUMPDEST
0x95 PUSH2 0xfa
0x98 PUSH1 0x0
0x9a DUP1
0x9b SLOAD
0x9c PUSH1 0x40
0x9e MLOAD
0x9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4 SWAP2
0xb5 DUP3
0xb6 AND
0xb7 SWAP3
0xb8 SWAP2
0xb9 ADDRESS
0xba AND
0xbb BALANCE
0xbc SWAP1
0xbd DUP3
0xbe DUP2
0xbf DUP2
0xc0 DUP2
0xc1 DUP6
0xc2 DUP9
0xc3 DUP4
0xc4 CALL
0xc5 SWAP4
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca ISZERO
0xcb ISZERO
0xcc PUSH2 0xfc
0xcf JUMPI
---
0x94: JUMPDEST 
0x95: V40 = 0xfa
0x98: V41 = 0x0
0x9b: V42 = S[0x0]
0x9c: V43 = 0x40
0x9e: V44 = M[0x40]
0x9f: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xb9: V47 = ADDRESS
0xba: V48 = AND V47 0xffffffffffffffffffffffffffffffffffffffff
0xbb: V49 = BALANCE V48
0xc4: V50 = CALL 0x0 V46 V49 V44 0x0 V44 0x0
0xca: V51 = ISZERO V50
0xcb: V52 = ISZERO V51
0xcc: V53 = 0xfc
0xcf: JUMPI 0xfc V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0x94]
Successors: []
---
0xd0 PUSH2 0x2
0xd3 JUMP
---
0xd0: V54 = 0x2
0xd3: THROW 
---
Entry stack: [V10, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0xd4
[0xd4:0xe6]
---
Predecessors: [0x1f]
Successors: [0xfe]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xfe
0xd8 PUSH1 0x0
0xda SLOAD
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SWAP1
0xe1 DIV
0xe2 PUSH1 0xff
0xe4 AND
0xe5 SWAP1
0xe6 JUMP
---
0xd4: JUMPDEST 
0xd5: V55 = 0xfe
0xd8: V56 = 0x0
0xda: V57 = S[0x0]
0xdb: V58 = 0xa0
0xdd: V59 = 0x2
0xdf: V60 = EXP 0x2 0xa0
0xe1: V61 = DIV V57 0x10000000000000000000000000000000000000000
0xe2: V62 = 0xff
0xe4: V63 = AND 0xff V61
0xe6: JUMP 0xfe
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V10, V63]

================================

Block 0xe7
[0xe7:0xf9]
---
Predecessors: [0x2a]
Successors: [0xfe]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xfe
0xeb PUSH1 0x0
0xed SLOAD
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SWAP1
0xf4 DIV
0xf5 PUSH1 0xff
0xf7 AND
0xf8 DUP2
0xf9 JUMP
---
0xe7: JUMPDEST 
0xe8: V64 = 0xfe
0xeb: V65 = 0x0
0xed: V66 = S[0x0]
0xee: V67 = 0xa0
0xf0: V68 = 0x2
0xf2: V69 = EXP 0x2 0xa0
0xf4: V70 = DIV V66 0x10000000000000000000000000000000000000000
0xf5: V71 = 0xff
0xf7: V72 = AND 0xff V70
0xf9: JUMP 0xfe
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe, V72]
Exit stack: [V10, 0xfe, V72]

================================

Block 0xfa
[0xfa:0xfb]
---
Predecessors: [0xfc]
Successors: []
---
0xfa JUMPDEST
0xfb STOP
---
0xfa: JUMPDEST 
0xfb: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfc
[0xfc:0xfd]
---
Predecessors: [0x35, 0x94]
Successors: [0xfa]
---
0xfc JUMPDEST
0xfd JUMP
---
0xfc: JUMPDEST 
0xfd: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xfe
[0xfe:0x111]
---
Predecessors: [0xd4, 0xe7]
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 DUP1
0x102 MLOAD
0x103 SWAP2
0x104 ISZERO
0x105 ISZERO
0x106 DUP3
0x107 MSTORE
0x108 MLOAD
0x109 SWAP1
0x10a DUP2
0x10b SWAP1
0x10c SUB
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 RETURN
---
0xfe: JUMPDEST 
0xff: V73 = 0x40
0x102: V74 = M[0x40]
0x104: V75 = ISZERO S0
0x105: V76 = ISZERO V75
0x107: M[V74] = V76
0x108: V77 = M[0x40]
0x10c: V78 = SUB V74 V77
0x10d: V79 = 0x20
0x10f: V80 = ADD 0x20 V78
0x111: RETURN V77 V80
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Function 0:
Public function signature: 0x35faa416
Entry block: 0x94
Exit block: 0xfa
Body: 0x94, 0xfa

Function 1:
Public function signature: 0x5ccaf589
Entry block: 0xd4
Exit block: 0xfe
Body: 0xd4, 0xfe

Function 2:
Public function signature: 0x63898e2b
Entry block: 0xe7
Exit block: 0xfe
Body: 0xe7, 0xfe

Function 3:
Public fallback function
Entry block: 0x35
Exit block: 0xfa
Body: 0x35, 0xfa

