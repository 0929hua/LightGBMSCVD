Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb9]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb9
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb9
0xc: JUMPI 0xb9 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xbe]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1c31f710
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xbe
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1c31f710
0x3b: V13 = EQ V11 0x1c31f710
0x3c: V14 = 0xbe
0x3f: JUMPI 0xbe V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xe1]
---
0x40 DUP1
0x41 PUSH4 0x38af3eed
0x46 EQ
0x47 PUSH2 0xe1
0x4a JUMPI
---
0x41: V15 = 0x38af3eed
0x46: V16 = EQ 0x38af3eed V11
0x47: V17 = 0xe1
0x4a: JUMPI 0xe1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x112]
---
0x4b DUP1
0x4c PUSH4 0x43d726d6
0x51 EQ
0x52 PUSH2 0x112
0x55 JUMPI
---
0x4c: V18 = 0x43d726d6
0x51: V19 = EQ 0x43d726d6 V11
0x52: V20 = 0x112
0x55: JUMPI 0x112 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x127]
---
0x56 DUP1
0x57 PUSH4 0x59c656df
0x5c EQ
0x5d PUSH2 0x127
0x60 JUMPI
---
0x57: V21 = 0x59c656df
0x5c: V22 = EQ 0x59c656df V11
0x5d: V23 = 0x127
0x60: JUMPI 0x127 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x13c]
---
0x61 DUP1
0x62 PUSH4 0x79ba5097
0x67 EQ
0x68 PUSH2 0x13c
0x6b JUMPI
---
0x62: V24 = 0x79ba5097
0x67: V25 = EQ 0x79ba5097 V11
0x68: V26 = 0x13c
0x6b: JUMPI 0x13c V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x151]
---
0x6c DUP1
0x6d PUSH4 0x8da5cb5b
0x72 EQ
0x73 PUSH2 0x151
0x76 JUMPI
---
0x6d: V27 = 0x8da5cb5b
0x72: V28 = EQ 0x8da5cb5b V11
0x73: V29 = 0x151
0x76: JUMPI 0x151 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x166]
---
0x77 DUP1
0x78 PUSH4 0xc19d93fb
0x7d EQ
0x7e PUSH2 0x166
0x81 JUMPI
---
0x78: V30 = 0xc19d93fb
0x7d: V31 = EQ 0xc19d93fb V11
0x7e: V32 = 0x166
0x81: JUMPI 0x166 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x19f]
---
0x82 DUP1
0x83 PUSH4 0xd4ee1d90
0x88 EQ
0x89 PUSH2 0x19f
0x8c JUMPI
---
0x83: V33 = 0xd4ee1d90
0x88: V34 = EQ 0xd4ee1d90 V11
0x89: V35 = 0x19f
0x8c: JUMPI 0x19f V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1b4]
---
0x8d DUP1
0x8e PUSH4 0xf2fde38b
0x93 EQ
0x94 PUSH2 0x1b4
0x97 JUMPI
---
0x8e: V36 = 0xf2fde38b
0x93: V37 = EQ 0xf2fde38b V11
0x94: V38 = 0x1b4
0x97: JUMPI 0x1b4 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1d5]
---
0x98 DUP1
0x99 PUSH4 0xf340fa01
0x9e EQ
0x9f PUSH2 0x1d5
0xa2 JUMPI
---
0x99: V39 = 0xf340fa01
0x9e: V40 = EQ 0xf340fa01 V11
0x9f: V41 = 0x1d5
0xa2: JUMPI 0x1d5 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x1e9]
---
0xa3 DUP1
0xa4 PUSH4 0xfa89401a
0xa9 EQ
0xaa PUSH2 0x1e9
0xad JUMPI
---
0xa4: V42 = 0xfa89401a
0xa9: V43 = EQ 0xfa89401a V11
0xaa: V44 = 0x1e9
0xad: JUMPI 0x1e9 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x20a]
---
0xae DUP1
0xaf PUSH4 0xfc7e286d
0xb4 EQ
0xb5 PUSH2 0x20a
0xb8 JUMPI
---
0xaf: V45 = 0xfc7e286d
0xb4: V46 = EQ 0xfc7e286d V11
0xb5: V47 = 0x20a
0xb8: JUMPI 0x20a V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xbd]
---
Predecessors: [0x0, 0xae]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xb9: JUMPDEST 
0xba: V48 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0xd]
Successors: [0xc6, 0xca]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 DUP1
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbe: JUMPDEST 
0xbf: V49 = CALLVALUE
0xc1: V50 = ISZERO V49
0xc2: V51 = 0xca
0xc5: JUMPI 0xca V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbe]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V52 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xca
[0xca:0xde]
---
Predecessors: [0xbe]
Successors: [0x23d]
---
0xca JUMPDEST
0xcb POP
0xcc PUSH2 0xdf
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 PUSH1 0x4
0xd9 CALLDATALOAD
0xda AND
0xdb PUSH2 0x23d
0xde JUMP
---
0xca: JUMPDEST 
0xcc: V53 = 0xdf
0xcf: V54 = 0x1
0xd1: V55 = 0xa0
0xd3: V56 = 0x2
0xd5: V57 = EXP 0x2 0xa0
0xd6: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V59 = 0x4
0xd9: V60 = CALLDATALOAD 0x4
0xda: V61 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V62 = 0x23d
0xde: JUMP 0x23d
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xdf, V61]
Exit stack: [V11, 0xdf, V61]

================================

Block 0xdf
[0xdf:0xe0]
---
Predecessors: [0x269, 0x37a, 0x3b8, 0x41e, 0x4d1, 0x564, 0x610]
Successors: []
---
0xdf JUMPDEST
0xe0 STOP
---
0xdf: JUMPDEST 
0xe0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0x40]
Successors: [0xe9, 0xed]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe1: JUMPDEST 
0xe2: V63 = CALLVALUE
0xe4: V64 = ISZERO V63
0xe5: V65 = 0xed
0xe8: JUMPI 0xed V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe1]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V66 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0xed
[0xed:0xf5]
---
Predecessors: [0xe1]
Successors: [0x298]
---
0xed JUMPDEST
0xee POP
0xef PUSH2 0xf6
0xf2 PUSH2 0x298
0xf5 JUMP
---
0xed: JUMPDEST 
0xef: V67 = 0xf6
0xf2: V68 = 0x298
0xf5: JUMP 0x298
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0xf6]
Exit stack: [V11, 0xf6]

================================

Block 0xf6
[0xf6:0x111]
---
Predecessors: [0x298, 0x48c, 0x4ab]
Successors: []
---
0xf6 JUMPDEST
0xf7 PUSH1 0x40
0xf9 DUP1
0xfa MLOAD
0xfb PUSH1 0x1
0xfd PUSH1 0xa0
0xff PUSH1 0x2
0x101 EXP
0x102 SUB
0x103 SWAP1
0x104 SWAP3
0x105 AND
0x106 DUP3
0x107 MSTORE
0x108 MLOAD
0x109 SWAP1
0x10a DUP2
0x10b SWAP1
0x10c SUB
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 RETURN
---
0xf6: JUMPDEST 
0xf7: V69 = 0x40
0xfa: V70 = M[0x40]
0xfb: V71 = 0x1
0xfd: V72 = 0xa0
0xff: V73 = 0x2
0x101: V74 = EXP 0x2 0xa0
0x102: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0x105: V76 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x107: M[V70] = V76
0x108: V77 = M[0x40]
0x10c: V78 = SUB V70 V77
0x10d: V79 = 0x20
0x10f: V80 = ADD 0x20 V78
0x111: RETURN V77 V80
---
Entry stack: [V11, 0xf6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf6]

================================

Block 0x112
[0x112:0x119]
---
Predecessors: [0x4b]
Successors: [0x11a, 0x11e]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 DUP1
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x112: JUMPDEST 
0x113: V81 = CALLVALUE
0x115: V82 = ISZERO V81
0x116: V83 = 0x11e
0x119: JUMPI 0x11e V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x112]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V84 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V81]

================================

Block 0x11e
[0x11e:0x126]
---
Predecessors: [0x112]
Successors: [0x2a7]
---
0x11e JUMPDEST
0x11f POP
0x120 PUSH2 0xdf
0x123 PUSH2 0x2a7
0x126 JUMP
---
0x11e: JUMPDEST 
0x120: V85 = 0xdf
0x123: V86 = 0x2a7
0x126: JUMP 0x2a7
---
Entry stack: [V11, V81]
Stack pops: 1
Stack additions: [0xdf]
Exit stack: [V11, 0xdf]

================================

Block 0x127
[0x127:0x12e]
---
Predecessors: [0x56]
Successors: [0x12f, 0x133]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 DUP1
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x127: JUMPDEST 
0x128: V87 = CALLVALUE
0x12a: V88 = ISZERO V87
0x12b: V89 = 0x133
0x12e: JUMPI 0x133 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x127]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V90 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x133
[0x133:0x13b]
---
Predecessors: [0x127]
Successors: [0x37d]
---
0x133 JUMPDEST
0x134 POP
0x135 PUSH2 0xdf
0x138 PUSH2 0x37d
0x13b JUMP
---
0x133: JUMPDEST 
0x135: V91 = 0xdf
0x138: V92 = 0x37d
0x13b: JUMP 0x37d
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0xdf]
Exit stack: [V11, 0xdf]

================================

Block 0x13c
[0x13c:0x143]
---
Predecessors: [0x61]
Successors: [0x144, 0x148]
---
0x13c JUMPDEST
0x13d CALLVALUE
0x13e DUP1
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13c: JUMPDEST 
0x13d: V93 = CALLVALUE
0x13f: V94 = ISZERO V93
0x140: V95 = 0x148
0x143: JUMPI 0x148 V94
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V11, V93]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13c]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V96 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V11, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V93]

================================

Block 0x148
[0x148:0x150]
---
Predecessors: [0x13c]
Successors: [0x407]
---
0x148 JUMPDEST
0x149 POP
0x14a PUSH2 0xdf
0x14d PUSH2 0x407
0x150 JUMP
---
0x148: JUMPDEST 
0x14a: V97 = 0xdf
0x14d: V98 = 0x407
0x150: JUMP 0x407
---
Entry stack: [V11, V93]
Stack pops: 1
Stack additions: [0xdf]
Exit stack: [V11, 0xdf]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0x6c]
Successors: [0x159, 0x15d]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 DUP1
0x154 ISZERO
0x155 PUSH2 0x15d
0x158 JUMPI
---
0x151: JUMPDEST 
0x152: V99 = CALLVALUE
0x154: V100 = ISZERO V99
0x155: V101 = 0x15d
0x158: JUMPI 0x15d V100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V99]
Exit stack: [V11, V99]

================================

Block 0x159
[0x159:0x15c]
---
Predecessors: [0x151]
Successors: []
---
0x159 PUSH1 0x0
0x15b DUP1
0x15c REVERT
---
0x159: V102 = 0x0
0x15c: REVERT 0x0 0x0
---
Entry stack: [V11, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V99]

================================

Block 0x15d
[0x15d:0x165]
---
Predecessors: [0x151]
Successors: [0x48c]
---
0x15d JUMPDEST
0x15e POP
0x15f PUSH2 0xf6
0x162 PUSH2 0x48c
0x165 JUMP
---
0x15d: JUMPDEST 
0x15f: V103 = 0xf6
0x162: V104 = 0x48c
0x165: JUMP 0x48c
---
Entry stack: [V11, V99]
Stack pops: 1
Stack additions: [0xf6]
Exit stack: [V11, 0xf6]

================================

Block 0x166
[0x166:0x16d]
---
Predecessors: [0x77]
Successors: [0x16e, 0x172]
---
0x166 JUMPDEST
0x167 CALLVALUE
0x168 DUP1
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x166: JUMPDEST 
0x167: V105 = CALLVALUE
0x169: V106 = ISZERO V105
0x16a: V107 = 0x172
0x16d: JUMPI 0x172 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V11, V105]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x166]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V108 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V11, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V105]

================================

Block 0x172
[0x172:0x17a]
---
Predecessors: [0x166]
Successors: [0x49b]
---
0x172 JUMPDEST
0x173 POP
0x174 PUSH2 0x17b
0x177 PUSH2 0x49b
0x17a JUMP
---
0x172: JUMPDEST 
0x174: V109 = 0x17b
0x177: V110 = 0x49b
0x17a: JUMP 0x49b
---
Entry stack: [V11, V105]
Stack pops: 1
Stack additions: [0x17b]
Exit stack: [V11, 0x17b]

================================

Block 0x17b
[0x17b:0x189]
---
Predecessors: [0x49b]
Successors: [0x18a, 0x18b]
---
0x17b JUMPDEST
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP3
0x181 PUSH1 0x2
0x183 DUP2
0x184 GT
0x185 ISZERO
0x186 PUSH2 0x18b
0x189 JUMPI
---
0x17b: JUMPDEST 
0x17c: V111 = 0x40
0x17e: V112 = M[0x40]
0x181: V113 = 0x2
0x184: V114 = GT V389 0x2
0x185: V115 = ISZERO V114
0x186: V116 = 0x18b
0x189: JUMPI 0x18b V115
---
Entry stack: [V11, 0x17b, V389]
Stack pops: 1
Stack additions: [S0, V112, V112, S0]
Exit stack: [V11, 0x17b, V389, V112, V112, V389]

================================

Block 0x18a
[0x18a:0x18a]
---
Predecessors: [0x17b]
Successors: []
---
0x18a INVALID
---
0x18a: INVALID 
---
Entry stack: [V11, 0x17b, V389, V112, V112, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17b, V389, V112, V112, V389]

================================

Block 0x18b
[0x18b:0x19e]
---
Predecessors: [0x17b]
Successors: []
---
0x18b JUMPDEST
0x18c PUSH1 0xff
0x18e AND
0x18f DUP2
0x190 MSTORE
0x191 PUSH1 0x20
0x193 ADD
0x194 SWAP2
0x195 POP
0x196 POP
0x197 PUSH1 0x40
0x199 MLOAD
0x19a DUP1
0x19b SWAP2
0x19c SUB
0x19d SWAP1
0x19e RETURN
---
0x18b: JUMPDEST 
0x18c: V117 = 0xff
0x18e: V118 = AND 0xff V389
0x190: M[V112] = V118
0x191: V119 = 0x20
0x193: V120 = ADD 0x20 V112
0x197: V121 = 0x40
0x199: V122 = M[0x40]
0x19c: V123 = SUB V120 V122
0x19e: RETURN V122 V123
---
Entry stack: [V11, 0x17b, V389, V112, V112, V389]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x17b]

================================

Block 0x19f
[0x19f:0x1a6]
---
Predecessors: [0x82]
Successors: [0x1a7, 0x1ab]
---
0x19f JUMPDEST
0x1a0 CALLVALUE
0x1a1 DUP1
0x1a2 ISZERO
0x1a3 PUSH2 0x1ab
0x1a6 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V124 = CALLVALUE
0x1a2: V125 = ISZERO V124
0x1a3: V126 = 0x1ab
0x1a6: JUMPI 0x1ab V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V11, V124]

================================

Block 0x1a7
[0x1a7:0x1aa]
---
Predecessors: [0x19f]
Successors: []
---
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a7: V127 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V11, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V124]

================================

Block 0x1ab
[0x1ab:0x1b3]
---
Predecessors: [0x19f]
Successors: [0x4ab]
---
0x1ab JUMPDEST
0x1ac POP
0x1ad PUSH2 0xf6
0x1b0 PUSH2 0x4ab
0x1b3 JUMP
---
0x1ab: JUMPDEST 
0x1ad: V128 = 0xf6
0x1b0: V129 = 0x4ab
0x1b3: JUMP 0x4ab
---
Entry stack: [V11, V124]
Stack pops: 1
Stack additions: [0xf6]
Exit stack: [V11, 0xf6]

================================

Block 0x1b4
[0x1b4:0x1bb]
---
Predecessors: [0x8d]
Successors: [0x1bc, 0x1c0]
---
0x1b4 JUMPDEST
0x1b5 CALLVALUE
0x1b6 DUP1
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V130 = CALLVALUE
0x1b7: V131 = ISZERO V130
0x1b8: V132 = 0x1c0
0x1bb: JUMPI 0x1c0 V131
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V11, V130]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V133 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V11, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V130]

================================

Block 0x1c0
[0x1c0:0x1d4]
---
Predecessors: [0x1b4]
Successors: [0x4ba]
---
0x1c0 JUMPDEST
0x1c1 POP
0x1c2 PUSH2 0xdf
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd PUSH1 0x4
0x1cf CALLDATALOAD
0x1d0 AND
0x1d1 PUSH2 0x4ba
0x1d4 JUMP
---
0x1c0: JUMPDEST 
0x1c2: V134 = 0xdf
0x1c5: V135 = 0x1
0x1c7: V136 = 0xa0
0x1c9: V137 = 0x2
0x1cb: V138 = EXP 0x2 0xa0
0x1cc: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cd: V140 = 0x4
0x1cf: V141 = CALLDATALOAD 0x4
0x1d0: V142 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V143 = 0x4ba
0x1d4: JUMP 0x4ba
---
Entry stack: [V11, V130]
Stack pops: 1
Stack additions: [0xdf, V142]
Exit stack: [V11, 0xdf, V142]

================================

Block 0x1d5
[0x1d5:0x1e8]
---
Predecessors: [0x98]
Successors: [0x500]
---
0x1d5 JUMPDEST
0x1d6 PUSH2 0xdf
0x1d9 PUSH1 0x1
0x1db PUSH1 0xa0
0x1dd PUSH1 0x2
0x1df EXP
0x1e0 SUB
0x1e1 PUSH1 0x4
0x1e3 CALLDATALOAD
0x1e4 AND
0x1e5 PUSH2 0x500
0x1e8 JUMP
---
0x1d5: JUMPDEST 
0x1d6: V144 = 0xdf
0x1d9: V145 = 0x1
0x1db: V146 = 0xa0
0x1dd: V147 = 0x2
0x1df: V148 = EXP 0x2 0xa0
0x1e0: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e1: V150 = 0x4
0x1e3: V151 = CALLDATALOAD 0x4
0x1e4: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V153 = 0x500
0x1e8: JUMP 0x500
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdf, V152]
Exit stack: [V11, 0xdf, V152]

================================

Block 0x1e9
[0x1e9:0x1f0]
---
Predecessors: [0xa3]
Successors: [0x1f1, 0x1f5]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb DUP1
0x1ec ISZERO
0x1ed PUSH2 0x1f5
0x1f0 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V154 = CALLVALUE
0x1ec: V155 = ISZERO V154
0x1ed: V156 = 0x1f5
0x1f0: JUMPI 0x1f5 V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x1f1
[0x1f1:0x1f4]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 REVERT
---
0x1f1: V157 = 0x0
0x1f4: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x1f5
[0x1f5:0x209]
---
Predecessors: [0x1e9]
Successors: [0x580]
---
0x1f5 JUMPDEST
0x1f6 POP
0x1f7 PUSH2 0xdf
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 PUSH1 0x4
0x204 CALLDATALOAD
0x205 AND
0x206 PUSH2 0x580
0x209 JUMP
---
0x1f5: JUMPDEST 
0x1f7: V158 = 0xdf
0x1fa: V159 = 0x1
0x1fc: V160 = 0xa0
0x1fe: V161 = 0x2
0x200: V162 = EXP 0x2 0xa0
0x201: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V164 = 0x4
0x204: V165 = CALLDATALOAD 0x4
0x205: V166 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x206: V167 = 0x580
0x209: JUMP 0x580
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0xdf, V166]
Exit stack: [V11, 0xdf, V166]

================================

Block 0x20a
[0x20a:0x211]
---
Predecessors: [0xae]
Successors: [0x212, 0x216]
---
0x20a JUMPDEST
0x20b CALLVALUE
0x20c DUP1
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x20a: JUMPDEST 
0x20b: V168 = CALLVALUE
0x20d: V169 = ISZERO V168
0x20e: V170 = 0x216
0x211: JUMPI 0x216 V169
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V168]
Exit stack: [V11, V168]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x20a]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V171 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V11, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V168]

================================

Block 0x216
[0x216:0x22a]
---
Predecessors: [0x20a]
Successors: [0x654]
---
0x216 JUMPDEST
0x217 POP
0x218 PUSH2 0x22b
0x21b PUSH1 0x1
0x21d PUSH1 0xa0
0x21f PUSH1 0x2
0x221 EXP
0x222 SUB
0x223 PUSH1 0x4
0x225 CALLDATALOAD
0x226 AND
0x227 PUSH2 0x654
0x22a JUMP
---
0x216: JUMPDEST 
0x218: V172 = 0x22b
0x21b: V173 = 0x1
0x21d: V174 = 0xa0
0x21f: V175 = 0x2
0x221: V176 = EXP 0x2 0xa0
0x222: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V178 = 0x4
0x225: V179 = CALLDATALOAD 0x4
0x226: V180 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x227: V181 = 0x654
0x22a: JUMP 0x654
---
Entry stack: [V11, V168]
Stack pops: 1
Stack additions: [0x22b, V180]
Exit stack: [V11, 0x22b, V180]

================================

Block 0x22b
[0x22b:0x23c]
---
Predecessors: [0x654]
Successors: []
---
0x22b JUMPDEST
0x22c PUSH1 0x40
0x22e DUP1
0x22f MLOAD
0x230 SWAP2
0x231 DUP3
0x232 MSTORE
0x233 MLOAD
0x234 SWAP1
0x235 DUP2
0x236 SWAP1
0x237 SUB
0x238 PUSH1 0x20
0x23a ADD
0x23b SWAP1
0x23c RETURN
---
0x22b: JUMPDEST 
0x22c: V182 = 0x40
0x22f: V183 = M[0x40]
0x232: M[V183] = V552
0x233: V184 = M[0x40]
0x237: V185 = SUB V183 V184
0x238: V186 = 0x20
0x23a: V187 = ADD 0x20 V185
0x23c: RETURN V184 V187
---
Entry stack: [V11, 0x22b, V552]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x22b]

================================

Block 0x23d
[0x23d:0x24f]
---
Predecessors: [0xca]
Successors: [0x250, 0x254]
---
0x23d JUMPDEST
0x23e PUSH1 0x0
0x240 SLOAD
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 AND
0x24a CALLER
0x24b EQ
0x24c PUSH2 0x254
0x24f JUMPI
---
0x23d: JUMPDEST 
0x23e: V188 = 0x0
0x240: V189 = S[0x0]
0x241: V190 = 0x1
0x243: V191 = 0xa0
0x245: V192 = 0x2
0x247: V193 = EXP 0x2 0xa0
0x248: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x24a: V196 = CALLER
0x24b: V197 = EQ V196 V195
0x24c: V198 = 0x254
0x24f: JUMPI 0x254 V197
---
Entry stack: [V11, 0xdf, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V61]

================================

Block 0x250
[0x250:0x253]
---
Predecessors: [0x23d]
Successors: []
---
0x250 PUSH1 0x0
0x252 DUP1
0x253 REVERT
---
0x250: V199 = 0x0
0x253: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V61]

================================

Block 0x254
[0x254:0x264]
---
Predecessors: [0x23d]
Successors: [0x265, 0x269]
---
0x254 JUMPDEST
0x255 PUSH1 0x1
0x257 PUSH1 0xa0
0x259 PUSH1 0x2
0x25b EXP
0x25c SUB
0x25d DUP2
0x25e AND
0x25f ISZERO
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x254: JUMPDEST 
0x255: V200 = 0x1
0x257: V201 = 0xa0
0x259: V202 = 0x2
0x25b: V203 = EXP 0x2 0xa0
0x25c: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V205 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V206 = ISZERO V205
0x260: V207 = ISZERO V206
0x261: V208 = 0x269
0x264: JUMPI 0x269 V207
---
Entry stack: [V11, 0xdf, V61]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xdf, V61]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x254]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V209 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V61]

================================

Block 0x269
[0x269:0x297]
---
Predecessors: [0x254]
Successors: [0xdf]
---
0x269 JUMPDEST
0x26a PUSH1 0x3
0x26c DUP1
0x26d SLOAD
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 NOT
0x284 AND
0x285 PUSH1 0x1
0x287 PUSH1 0xa0
0x289 PUSH1 0x2
0x28b EXP
0x28c SUB
0x28d SWAP3
0x28e SWAP1
0x28f SWAP3
0x290 AND
0x291 SWAP2
0x292 SWAP1
0x293 SWAP2
0x294 OR
0x295 SWAP1
0x296 SSTORE
0x297 JUMP
---
0x269: JUMPDEST 
0x26a: V210 = 0x3
0x26d: V211 = S[0x3]
0x26e: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V213 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x284: V214 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V211
0x285: V215 = 0x1
0x287: V216 = 0xa0
0x289: V217 = 0x2
0x28b: V218 = EXP 0x2 0xa0
0x28c: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x294: V221 = OR V220 V214
0x296: S[0x3] = V221
0x297: JUMP 0xdf
---
Entry stack: [V11, 0xdf, V61]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x298
[0x298:0x2a6]
---
Predecessors: [0xed]
Successors: [0xf6]
---
0x298 JUMPDEST
0x299 PUSH1 0x3
0x29b SLOAD
0x29c PUSH1 0x1
0x29e PUSH1 0xa0
0x2a0 PUSH1 0x2
0x2a2 EXP
0x2a3 SUB
0x2a4 AND
0x2a5 DUP2
0x2a6 JUMP
---
0x298: JUMPDEST 
0x299: V222 = 0x3
0x29b: V223 = S[0x3]
0x29c: V224 = 0x1
0x29e: V225 = 0xa0
0x2a0: V226 = 0x2
0x2a2: V227 = EXP 0x2 0xa0
0x2a3: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x2a6: JUMP 0xf6
---
Entry stack: [V11, 0xf6]
Stack pops: 1
Stack additions: [S0, V229]
Exit stack: [V11, 0xf6, V229]

================================

Block 0x2a7
[0x2a7:0x2b9]
---
Predecessors: [0x11e]
Successors: [0x2ba, 0x2be]
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x0
0x2aa SLOAD
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 CALLER
0x2b5 EQ
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V230 = 0x0
0x2aa: V231 = S[0x0]
0x2ab: V232 = 0x1
0x2ad: V233 = 0xa0
0x2af: V234 = 0x2
0x2b1: V235 = EXP 0x2 0xa0
0x2b2: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x2b4: V238 = CALLER
0x2b5: V239 = EQ V238 V237
0x2b6: V240 = 0x2be
0x2b9: JUMPI 0x2be V239
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2a7]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V241 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x2be
[0x2be:0x2d6]
---
Predecessors: [0x2a7]
Successors: [0x2d7, 0x2d8]
---
0x2be JUMPDEST
0x2bf PUSH1 0x0
0x2c1 PUSH1 0x3
0x2c3 SLOAD
0x2c4 PUSH1 0xa0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 SWAP1
0x2ca DIV
0x2cb PUSH1 0xff
0x2cd AND
0x2ce PUSH1 0x2
0x2d0 DUP2
0x2d1 GT
0x2d2 ISZERO
0x2d3 PUSH2 0x2d8
0x2d6 JUMPI
---
0x2be: JUMPDEST 
0x2bf: V242 = 0x0
0x2c1: V243 = 0x3
0x2c3: V244 = S[0x3]
0x2c4: V245 = 0xa0
0x2c6: V246 = 0x2
0x2c8: V247 = EXP 0x2 0xa0
0x2ca: V248 = DIV V244 0x10000000000000000000000000000000000000000
0x2cb: V249 = 0xff
0x2cd: V250 = AND 0xff V248
0x2ce: V251 = 0x2
0x2d1: V252 = GT V250 0x2
0x2d2: V253 = ISZERO V252
0x2d3: V254 = 0x2d8
0x2d6: JUMPI 0x2d8 V253
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: [0x0, V250]
Exit stack: [V11, 0xdf, 0x0, V250]

================================

Block 0x2d7
[0x2d7:0x2d7]
---
Predecessors: [0x2be]
Successors: []
---
0x2d7 INVALID
---
0x2d7: INVALID 
---
Entry stack: [V11, 0xdf, 0x0, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, 0x0, V250]

================================

Block 0x2d8
[0x2d8:0x2dd]
---
Predecessors: [0x2be]
Successors: [0x2de, 0x2e2]
---
0x2d8 JUMPDEST
0x2d9 EQ
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V255 = EQ V250 0x0
0x2da: V256 = 0x2e2
0x2dd: JUMPI 0x2e2 V255
---
Entry stack: [V11, 0xdf, 0x0, V250]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x2d8]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V257 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x2e2
[0x2e2:0x370]
---
Predecessors: [0x2d8]
Successors: [0x371, 0x37a]
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x3
0x2e5 DUP1
0x2e6 SLOAD
0x2e7 PUSH21 0xff0000000000000000000000000000000000000000
0x2fd NOT
0x2fe AND
0x2ff PUSH21 0x20000000000000000000000000000000000000000
0x315 OR
0x316 SWAP1
0x317 SSTORE
0x318 PUSH1 0x40
0x31a MLOAD
0x31b PUSH32 0x88672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f
0x33c SWAP1
0x33d PUSH1 0x0
0x33f SWAP1
0x340 LOG1
0x341 PUSH1 0x3
0x343 SLOAD
0x344 PUSH1 0x40
0x346 MLOAD
0x347 PUSH1 0x1
0x349 PUSH1 0xa0
0x34b PUSH1 0x2
0x34d EXP
0x34e SUB
0x34f SWAP1
0x350 SWAP2
0x351 AND
0x352 SWAP1
0x353 ADDRESS
0x354 BALANCE
0x355 DUP1
0x356 ISZERO
0x357 PUSH2 0x8fc
0x35a MUL
0x35b SWAP2
0x35c PUSH1 0x0
0x35e DUP2
0x35f DUP2
0x360 DUP2
0x361 DUP6
0x362 DUP9
0x363 DUP9
0x364 CALL
0x365 SWAP4
0x366 POP
0x367 POP
0x368 POP
0x369 POP
0x36a ISZERO
0x36b DUP1
0x36c ISZERO
0x36d PUSH2 0x37a
0x370 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V258 = 0x3
0x2e6: V259 = S[0x3]
0x2e7: V260 = 0xff0000000000000000000000000000000000000000
0x2fd: V261 = NOT 0xff0000000000000000000000000000000000000000
0x2fe: V262 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V259
0x2ff: V263 = 0x20000000000000000000000000000000000000000
0x315: V264 = OR 0x20000000000000000000000000000000000000000 V262
0x317: S[0x3] = V264
0x318: V265 = 0x40
0x31a: V266 = M[0x40]
0x31b: V267 = 0x88672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f
0x33d: V268 = 0x0
0x340: LOG V266 0x0 0x88672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f
0x341: V269 = 0x3
0x343: V270 = S[0x3]
0x344: V271 = 0x40
0x346: V272 = M[0x40]
0x347: V273 = 0x1
0x349: V274 = 0xa0
0x34b: V275 = 0x2
0x34d: V276 = EXP 0x2 0xa0
0x34e: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V278 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0x353: V279 = ADDRESS
0x354: V280 = BALANCE V279
0x356: V281 = ISZERO V280
0x357: V282 = 0x8fc
0x35a: V283 = MUL 0x8fc V281
0x35c: V284 = 0x0
0x364: V285 = CALL V283 V278 V280 V272 0x0 V272 0x0
0x36a: V286 = ISZERO V285
0x36c: V287 = ISZERO V286
0x36d: V288 = 0x37a
0x370: JUMPI 0x37a V287
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: [V286]
Exit stack: [V11, 0xdf, V286]

================================

Block 0x371
[0x371:0x379]
---
Predecessors: [0x2e2]
Successors: []
---
0x371 RETURNDATASIZE
0x372 PUSH1 0x0
0x374 DUP1
0x375 RETURNDATACOPY
0x376 RETURNDATASIZE
0x377 PUSH1 0x0
0x379 REVERT
---
0x371: V289 = RETURNDATASIZE
0x372: V290 = 0x0
0x375: RETURNDATACOPY 0x0 0x0 V289
0x376: V291 = RETURNDATASIZE
0x377: V292 = 0x0
0x379: REVERT 0x0 V291
---
Entry stack: [V11, 0xdf, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V286]

================================

Block 0x37a
[0x37a:0x37c]
---
Predecessors: [0x2e2]
Successors: [0xdf]
---
0x37a JUMPDEST
0x37b POP
0x37c JUMP
---
0x37a: JUMPDEST 
0x37c: JUMP 0xdf
---
Entry stack: [V11, 0xdf, V286]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x37d
[0x37d:0x38f]
---
Predecessors: [0x133]
Successors: [0x390, 0x394]
---
0x37d JUMPDEST
0x37e PUSH1 0x0
0x380 SLOAD
0x381 PUSH1 0x1
0x383 PUSH1 0xa0
0x385 PUSH1 0x2
0x387 EXP
0x388 SUB
0x389 AND
0x38a CALLER
0x38b EQ
0x38c PUSH2 0x394
0x38f JUMPI
---
0x37d: JUMPDEST 
0x37e: V293 = 0x0
0x380: V294 = S[0x0]
0x381: V295 = 0x1
0x383: V296 = 0xa0
0x385: V297 = 0x2
0x387: V298 = EXP 0x2 0xa0
0x388: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x38a: V301 = CALLER
0x38b: V302 = EQ V301 V300
0x38c: V303 = 0x394
0x38f: JUMPI 0x394 V302
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x390
[0x390:0x393]
---
Predecessors: [0x37d]
Successors: []
---
0x390 PUSH1 0x0
0x392 DUP1
0x393 REVERT
---
0x390: V304 = 0x0
0x393: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x394
[0x394:0x3ac]
---
Predecessors: [0x37d]
Successors: [0x3ad, 0x3ae]
---
0x394 JUMPDEST
0x395 PUSH1 0x0
0x397 PUSH1 0x3
0x399 SLOAD
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SWAP1
0x3a0 DIV
0x3a1 PUSH1 0xff
0x3a3 AND
0x3a4 PUSH1 0x2
0x3a6 DUP2
0x3a7 GT
0x3a8 ISZERO
0x3a9 PUSH2 0x3ae
0x3ac JUMPI
---
0x394: JUMPDEST 
0x395: V305 = 0x0
0x397: V306 = 0x3
0x399: V307 = S[0x3]
0x39a: V308 = 0xa0
0x39c: V309 = 0x2
0x39e: V310 = EXP 0x2 0xa0
0x3a0: V311 = DIV V307 0x10000000000000000000000000000000000000000
0x3a1: V312 = 0xff
0x3a3: V313 = AND 0xff V311
0x3a4: V314 = 0x2
0x3a7: V315 = GT V313 0x2
0x3a8: V316 = ISZERO V315
0x3a9: V317 = 0x3ae
0x3ac: JUMPI 0x3ae V316
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: [0x0, V313]
Exit stack: [V11, 0xdf, 0x0, V313]

================================

Block 0x3ad
[0x3ad:0x3ad]
---
Predecessors: [0x394]
Successors: []
---
0x3ad INVALID
---
0x3ad: INVALID 
---
Entry stack: [V11, 0xdf, 0x0, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, 0x0, V313]

================================

Block 0x3ae
[0x3ae:0x3b3]
---
Predecessors: [0x394]
Successors: [0x3b4, 0x3b8]
---
0x3ae JUMPDEST
0x3af EQ
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V318 = EQ V313 0x0
0x3b0: V319 = 0x3b8
0x3b3: JUMPI 0x3b8 V318
---
Entry stack: [V11, 0xdf, 0x0, V313]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x3ae]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V320 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x3b8
[0x3b8:0x406]
---
Predecessors: [0x3ae]
Successors: [0xdf]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x3
0x3bb DUP1
0x3bc SLOAD
0x3bd PUSH21 0xff0000000000000000000000000000000000000000
0x3d3 NOT
0x3d4 AND
0x3d5 PUSH1 0xa0
0x3d7 PUSH1 0x2
0x3d9 EXP
0x3da OR
0x3db SWAP1
0x3dc SSTORE
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 PUSH32 0x94ecd7b823a8ac3135e076f17b83ae633f0e44fbce83145686e29f20a722ed39
0x401 SWAP1
0x402 PUSH1 0x0
0x404 SWAP1
0x405 LOG1
0x406 JUMP
---
0x3b8: JUMPDEST 
0x3b9: V321 = 0x3
0x3bc: V322 = S[0x3]
0x3bd: V323 = 0xff0000000000000000000000000000000000000000
0x3d3: V324 = NOT 0xff0000000000000000000000000000000000000000
0x3d4: V325 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V322
0x3d5: V326 = 0xa0
0x3d7: V327 = 0x2
0x3d9: V328 = EXP 0x2 0xa0
0x3da: V329 = OR 0x10000000000000000000000000000000000000000 V325
0x3dc: S[0x3] = V329
0x3dd: V330 = 0x40
0x3df: V331 = M[0x40]
0x3e0: V332 = 0x94ecd7b823a8ac3135e076f17b83ae633f0e44fbce83145686e29f20a722ed39
0x402: V333 = 0x0
0x405: LOG V331 0x0 0x94ecd7b823a8ac3135e076f17b83ae633f0e44fbce83145686e29f20a722ed39
0x406: JUMP 0xdf
---
Entry stack: [V11, 0xdf]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x407
[0x407:0x419]
---
Predecessors: [0x148]
Successors: [0x41a, 0x41e]
---
0x407 JUMPDEST
0x408 PUSH1 0x1
0x40a SLOAD
0x40b PUSH1 0x1
0x40d PUSH1 0xa0
0x40f PUSH1 0x2
0x411 EXP
0x412 SUB
0x413 AND
0x414 CALLER
0x415 EQ
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x407: JUMPDEST 
0x408: V334 = 0x1
0x40a: V335 = S[0x1]
0x40b: V336 = 0x1
0x40d: V337 = 0xa0
0x40f: V338 = 0x2
0x411: V339 = EXP 0x2 0xa0
0x412: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x413: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x414: V342 = CALLER
0x415: V343 = EQ V342 V341
0x416: V344 = 0x41e
0x419: JUMPI 0x41e V343
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x407]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V345 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0x41e
[0x41e:0x48b]
---
Predecessors: [0x407]
Successors: [0xdf]
---
0x41e JUMPDEST
0x41f PUSH1 0x1
0x421 SLOAD
0x422 PUSH1 0x0
0x424 DUP1
0x425 SLOAD
0x426 PUSH1 0x40
0x428 MLOAD
0x429 PUSH1 0x1
0x42b PUSH1 0xa0
0x42d PUSH1 0x2
0x42f EXP
0x430 SUB
0x431 SWAP4
0x432 DUP5
0x433 AND
0x434 SWAP4
0x435 SWAP1
0x436 SWAP2
0x437 AND
0x438 SWAP2
0x439 PUSH32 0x22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca
0x45a SWAP2
0x45b LOG3
0x45c PUSH1 0x1
0x45e SLOAD
0x45f PUSH1 0x0
0x461 DUP1
0x462 SLOAD
0x463 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x478 NOT
0x479 AND
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 SWAP1
0x483 SWAP3
0x484 AND
0x485 SWAP2
0x486 SWAP1
0x487 SWAP2
0x488 OR
0x489 SWAP1
0x48a SSTORE
0x48b JUMP
---
0x41e: JUMPDEST 
0x41f: V346 = 0x1
0x421: V347 = S[0x1]
0x422: V348 = 0x0
0x425: V349 = S[0x0]
0x426: V350 = 0x40
0x428: V351 = M[0x40]
0x429: V352 = 0x1
0x42b: V353 = 0xa0
0x42d: V354 = 0x2
0x42f: V355 = EXP 0x2 0xa0
0x430: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x433: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x437: V358 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0x439: V359 = 0x22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca
0x45b: LOG V351 0x0 0x22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca V358 V357
0x45c: V360 = 0x1
0x45e: V361 = S[0x1]
0x45f: V362 = 0x0
0x462: V363 = S[0x0]
0x463: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x478: V365 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x479: V366 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V363
0x47a: V367 = 0x1
0x47c: V368 = 0xa0
0x47e: V369 = 0x2
0x480: V370 = EXP 0x2 0xa0
0x481: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x484: V372 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x488: V373 = OR V372 V366
0x48a: S[0x0] = V373
0x48b: JUMP 0xdf
---
Entry stack: [V11, 0xdf]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x48c
[0x48c:0x49a]
---
Predecessors: [0x15d]
Successors: [0xf6]
---
0x48c JUMPDEST
0x48d PUSH1 0x0
0x48f SLOAD
0x490 PUSH1 0x1
0x492 PUSH1 0xa0
0x494 PUSH1 0x2
0x496 EXP
0x497 SUB
0x498 AND
0x499 DUP2
0x49a JUMP
---
0x48c: JUMPDEST 
0x48d: V374 = 0x0
0x48f: V375 = S[0x0]
0x490: V376 = 0x1
0x492: V377 = 0xa0
0x494: V378 = 0x2
0x496: V379 = EXP 0x2 0xa0
0x497: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x498: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x49a: JUMP 0xf6
---
Entry stack: [V11, 0xf6]
Stack pops: 1
Stack additions: [S0, V381]
Exit stack: [V11, 0xf6, V381]

================================

Block 0x49b
[0x49b:0x4aa]
---
Predecessors: [0x172]
Successors: [0x17b]
---
0x49b JUMPDEST
0x49c PUSH1 0x3
0x49e SLOAD
0x49f PUSH1 0xa0
0x4a1 PUSH1 0x2
0x4a3 EXP
0x4a4 SWAP1
0x4a5 DIV
0x4a6 PUSH1 0xff
0x4a8 AND
0x4a9 DUP2
0x4aa JUMP
---
0x49b: JUMPDEST 
0x49c: V382 = 0x3
0x49e: V383 = S[0x3]
0x49f: V384 = 0xa0
0x4a1: V385 = 0x2
0x4a3: V386 = EXP 0x2 0xa0
0x4a5: V387 = DIV V383 0x10000000000000000000000000000000000000000
0x4a6: V388 = 0xff
0x4a8: V389 = AND 0xff V387
0x4aa: JUMP 0x17b
---
Entry stack: [V11, 0x17b]
Stack pops: 1
Stack additions: [S0, V389]
Exit stack: [V11, 0x17b, V389]

================================

Block 0x4ab
[0x4ab:0x4b9]
---
Predecessors: [0x1ab]
Successors: [0xf6]
---
0x4ab JUMPDEST
0x4ac PUSH1 0x1
0x4ae SLOAD
0x4af PUSH1 0x1
0x4b1 PUSH1 0xa0
0x4b3 PUSH1 0x2
0x4b5 EXP
0x4b6 SUB
0x4b7 AND
0x4b8 DUP2
0x4b9 JUMP
---
0x4ab: JUMPDEST 
0x4ac: V390 = 0x1
0x4ae: V391 = S[0x1]
0x4af: V392 = 0x1
0x4b1: V393 = 0xa0
0x4b3: V394 = 0x2
0x4b5: V395 = EXP 0x2 0xa0
0x4b6: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b7: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x4b9: JUMP 0xf6
---
Entry stack: [V11, 0xf6]
Stack pops: 1
Stack additions: [S0, V397]
Exit stack: [V11, 0xf6, V397]

================================

Block 0x4ba
[0x4ba:0x4cc]
---
Predecessors: [0x1c0]
Successors: [0x4cd, 0x4d1]
---
0x4ba JUMPDEST
0x4bb PUSH1 0x0
0x4bd SLOAD
0x4be PUSH1 0x1
0x4c0 PUSH1 0xa0
0x4c2 PUSH1 0x2
0x4c4 EXP
0x4c5 SUB
0x4c6 AND
0x4c7 CALLER
0x4c8 EQ
0x4c9 PUSH2 0x4d1
0x4cc JUMPI
---
0x4ba: JUMPDEST 
0x4bb: V398 = 0x0
0x4bd: V399 = S[0x0]
0x4be: V400 = 0x1
0x4c0: V401 = 0xa0
0x4c2: V402 = 0x2
0x4c4: V403 = EXP 0x2 0xa0
0x4c5: V404 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c6: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x4c7: V406 = CALLER
0x4c8: V407 = EQ V406 V405
0x4c9: V408 = 0x4d1
0x4cc: JUMPI 0x4d1 V407
---
Entry stack: [V11, 0xdf, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V142]

================================

Block 0x4cd
[0x4cd:0x4d0]
---
Predecessors: [0x4ba]
Successors: []
---
0x4cd PUSH1 0x0
0x4cf DUP1
0x4d0 REVERT
---
0x4cd: V409 = 0x0
0x4d0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V142]

================================

Block 0x4d1
[0x4d1:0x4ff]
---
Predecessors: [0x4ba]
Successors: [0xdf]
---
0x4d1 JUMPDEST
0x4d2 PUSH1 0x1
0x4d4 DUP1
0x4d5 SLOAD
0x4d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4eb NOT
0x4ec AND
0x4ed PUSH1 0x1
0x4ef PUSH1 0xa0
0x4f1 PUSH1 0x2
0x4f3 EXP
0x4f4 SUB
0x4f5 SWAP3
0x4f6 SWAP1
0x4f7 SWAP3
0x4f8 AND
0x4f9 SWAP2
0x4fa SWAP1
0x4fb SWAP2
0x4fc OR
0x4fd SWAP1
0x4fe SSTORE
0x4ff JUMP
---
0x4d1: JUMPDEST 
0x4d2: V410 = 0x1
0x4d5: V411 = S[0x1]
0x4d6: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x4eb: V413 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ec: V414 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V411
0x4ed: V415 = 0x1
0x4ef: V416 = 0xa0
0x4f1: V417 = 0x2
0x4f3: V418 = EXP 0x2 0xa0
0x4f4: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f8: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x4fc: V421 = OR V420 V414
0x4fe: S[0x1] = V421
0x4ff: JUMP 0xdf
---
Entry stack: [V11, 0xdf, V142]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x500
[0x500:0x512]
---
Predecessors: [0x1d5]
Successors: [0x513, 0x517]
---
0x500 JUMPDEST
0x501 PUSH1 0x0
0x503 SLOAD
0x504 PUSH1 0x1
0x506 PUSH1 0xa0
0x508 PUSH1 0x2
0x50a EXP
0x50b SUB
0x50c AND
0x50d CALLER
0x50e EQ
0x50f PUSH2 0x517
0x512 JUMPI
---
0x500: JUMPDEST 
0x501: V422 = 0x0
0x503: V423 = S[0x0]
0x504: V424 = 0x1
0x506: V425 = 0xa0
0x508: V426 = 0x2
0x50a: V427 = EXP 0x2 0xa0
0x50b: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50c: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x50d: V430 = CALLER
0x50e: V431 = EQ V430 V429
0x50f: V432 = 0x517
0x512: JUMPI 0x517 V431
---
Entry stack: [V11, 0xdf, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V152]

================================

Block 0x513
[0x513:0x516]
---
Predecessors: [0x500]
Successors: []
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 REVERT
---
0x513: V433 = 0x0
0x516: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V152]

================================

Block 0x517
[0x517:0x52f]
---
Predecessors: [0x500]
Successors: [0x530, 0x531]
---
0x517 JUMPDEST
0x518 PUSH1 0x0
0x51a PUSH1 0x3
0x51c SLOAD
0x51d PUSH1 0xa0
0x51f PUSH1 0x2
0x521 EXP
0x522 SWAP1
0x523 DIV
0x524 PUSH1 0xff
0x526 AND
0x527 PUSH1 0x2
0x529 DUP2
0x52a GT
0x52b ISZERO
0x52c PUSH2 0x531
0x52f JUMPI
---
0x517: JUMPDEST 
0x518: V434 = 0x0
0x51a: V435 = 0x3
0x51c: V436 = S[0x3]
0x51d: V437 = 0xa0
0x51f: V438 = 0x2
0x521: V439 = EXP 0x2 0xa0
0x523: V440 = DIV V436 0x10000000000000000000000000000000000000000
0x524: V441 = 0xff
0x526: V442 = AND 0xff V440
0x527: V443 = 0x2
0x52a: V444 = GT V442 0x2
0x52b: V445 = ISZERO V444
0x52c: V446 = 0x531
0x52f: JUMPI 0x531 V445
---
Entry stack: [V11, 0xdf, V152]
Stack pops: 0
Stack additions: [0x0, V442]
Exit stack: [V11, 0xdf, V152, 0x0, V442]

================================

Block 0x530
[0x530:0x530]
---
Predecessors: [0x517]
Successors: []
---
0x530 INVALID
---
0x530: INVALID 
---
Entry stack: [V11, 0xdf, V152, 0x0, V442]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V152, 0x0, V442]

================================

Block 0x531
[0x531:0x536]
---
Predecessors: [0x517]
Successors: [0x537, 0x53b]
---
0x531 JUMPDEST
0x532 EQ
0x533 PUSH2 0x53b
0x536 JUMPI
---
0x531: JUMPDEST 
0x532: V447 = EQ V442 0x0
0x533: V448 = 0x53b
0x536: JUMPI 0x53b V447
---
Entry stack: [V11, 0xdf, V152, 0x0, V442]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xdf, V152]

================================

Block 0x537
[0x537:0x53a]
---
Predecessors: [0x531]
Successors: []
---
0x537 PUSH1 0x0
0x539 DUP1
0x53a REVERT
---
0x537: V449 = 0x0
0x53a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V152]

================================

Block 0x53b
[0x53b:0x563]
---
Predecessors: [0x531]
Successors: [0x666]
---
0x53b JUMPDEST
0x53c PUSH1 0x1
0x53e PUSH1 0xa0
0x540 PUSH1 0x2
0x542 EXP
0x543 SUB
0x544 DUP2
0x545 AND
0x546 PUSH1 0x0
0x548 SWAP1
0x549 DUP2
0x54a MSTORE
0x54b PUSH1 0x2
0x54d PUSH1 0x20
0x54f MSTORE
0x550 PUSH1 0x40
0x552 SWAP1
0x553 SHA3
0x554 SLOAD
0x555 PUSH2 0x564
0x558 SWAP1
0x559 CALLVALUE
0x55a PUSH4 0xffffffff
0x55f PUSH2 0x666
0x562 AND
0x563 JUMP
---
0x53b: JUMPDEST 
0x53c: V450 = 0x1
0x53e: V451 = 0xa0
0x540: V452 = 0x2
0x542: V453 = EXP 0x2 0xa0
0x543: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x545: V455 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x546: V456 = 0x0
0x54a: M[0x0] = V455
0x54b: V457 = 0x2
0x54d: V458 = 0x20
0x54f: M[0x20] = 0x2
0x550: V459 = 0x40
0x553: V460 = SHA3 0x0 0x40
0x554: V461 = S[V460]
0x555: V462 = 0x564
0x559: V463 = CALLVALUE
0x55a: V464 = 0xffffffff
0x55f: V465 = 0x666
0x562: V466 = AND 0x666 0xffffffff
0x563: JUMP 0x666
---
Entry stack: [V11, 0xdf, V152]
Stack pops: 1
Stack additions: [S0, 0x564, V461, V463]
Exit stack: [V11, 0xdf, V152, 0x564, V461, V463]

================================

Block 0x564
[0x564:0x57f]
---
Predecessors: [0x675]
Successors: [0xdf]
---
0x564 JUMPDEST
0x565 PUSH1 0x1
0x567 PUSH1 0xa0
0x569 PUSH1 0x2
0x56b EXP
0x56c SUB
0x56d SWAP1
0x56e SWAP2
0x56f AND
0x570 PUSH1 0x0
0x572 SWAP1
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x2
0x577 PUSH1 0x20
0x579 MSTORE
0x57a PUSH1 0x40
0x57c SWAP1
0x57d SHA3
0x57e SSTORE
0x57f JUMP
---
0x564: JUMPDEST 
0x565: V467 = 0x1
0x567: V468 = 0xa0
0x569: V469 = 0x2
0x56b: V470 = EXP 0x2 0xa0
0x56c: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56f: V472 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x570: V473 = 0x0
0x574: M[0x0] = V472
0x575: V474 = 0x2
0x577: V475 = 0x20
0x579: M[0x20] = 0x2
0x57a: V476 = 0x40
0x57d: V477 = SHA3 0x0 0x40
0x57e: S[V477] = V554
0x57f: JUMP 0xdf
---
Entry stack: [V11, 0xdf, V152, V554]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x580
[0x580:0x59a]
---
Predecessors: [0x1f5]
Successors: [0x59b, 0x59c]
---
0x580 JUMPDEST
0x581 PUSH1 0x0
0x583 PUSH1 0x1
0x585 PUSH1 0x3
0x587 SLOAD
0x588 PUSH1 0xa0
0x58a PUSH1 0x2
0x58c EXP
0x58d SWAP1
0x58e DIV
0x58f PUSH1 0xff
0x591 AND
0x592 PUSH1 0x2
0x594 DUP2
0x595 GT
0x596 ISZERO
0x597 PUSH2 0x59c
0x59a JUMPI
---
0x580: JUMPDEST 
0x581: V478 = 0x0
0x583: V479 = 0x1
0x585: V480 = 0x3
0x587: V481 = S[0x3]
0x588: V482 = 0xa0
0x58a: V483 = 0x2
0x58c: V484 = EXP 0x2 0xa0
0x58e: V485 = DIV V481 0x10000000000000000000000000000000000000000
0x58f: V486 = 0xff
0x591: V487 = AND 0xff V485
0x592: V488 = 0x2
0x595: V489 = GT V487 0x2
0x596: V490 = ISZERO V489
0x597: V491 = 0x59c
0x59a: JUMPI 0x59c V490
---
Entry stack: [V11, 0xdf, V166]
Stack pops: 0
Stack additions: [0x0, 0x1, V487]
Exit stack: [V11, 0xdf, V166, 0x0, 0x1, V487]

================================

Block 0x59b
[0x59b:0x59b]
---
Predecessors: [0x580]
Successors: []
---
0x59b INVALID
---
0x59b: INVALID 
---
Entry stack: [V11, 0xdf, V166, 0x0, 0x1, V487]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V166, 0x0, 0x1, V487]

================================

Block 0x59c
[0x59c:0x5a1]
---
Predecessors: [0x580]
Successors: [0x5a2, 0x5a6]
---
0x59c JUMPDEST
0x59d EQ
0x59e PUSH2 0x5a6
0x5a1 JUMPI
---
0x59c: JUMPDEST 
0x59d: V492 = EQ V487 0x1
0x59e: V493 = 0x5a6
0x5a1: JUMPI 0x5a6 V492
---
Entry stack: [V11, 0xdf, V166, 0x0, 0x1, V487]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xdf, V166, 0x0]

================================

Block 0x5a2
[0x5a2:0x5a5]
---
Predecessors: [0x59c]
Successors: []
---
0x5a2 PUSH1 0x0
0x5a4 DUP1
0x5a5 REVERT
---
0x5a2: V494 = 0x0
0x5a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V166, 0x0]

================================

Block 0x5a6
[0x5a6:0x5c7]
---
Predecessors: [0x59c]
Successors: [0x5c8, 0x5cc]
---
0x5a6 JUMPDEST
0x5a7 POP
0x5a8 PUSH1 0x1
0x5aa PUSH1 0xa0
0x5ac PUSH1 0x2
0x5ae EXP
0x5af SUB
0x5b0 DUP2
0x5b1 AND
0x5b2 PUSH1 0x0
0x5b4 SWAP1
0x5b5 DUP2
0x5b6 MSTORE
0x5b7 PUSH1 0x2
0x5b9 PUSH1 0x20
0x5bb MSTORE
0x5bc PUSH1 0x40
0x5be SWAP1
0x5bf SHA3
0x5c0 SLOAD
0x5c1 DUP1
0x5c2 ISZERO
0x5c3 ISZERO
0x5c4 PUSH2 0x5cc
0x5c7 JUMPI
---
0x5a6: JUMPDEST 
0x5a8: V495 = 0x1
0x5aa: V496 = 0xa0
0x5ac: V497 = 0x2
0x5ae: V498 = EXP 0x2 0xa0
0x5af: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b1: V500 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x5b2: V501 = 0x0
0x5b6: M[0x0] = V500
0x5b7: V502 = 0x2
0x5b9: V503 = 0x20
0x5bb: M[0x20] = 0x2
0x5bc: V504 = 0x40
0x5bf: V505 = SHA3 0x0 0x40
0x5c0: V506 = S[V505]
0x5c2: V507 = ISZERO V506
0x5c3: V508 = ISZERO V507
0x5c4: V509 = 0x5cc
0x5c7: JUMPI 0x5cc V508
---
Entry stack: [V11, 0xdf, V166, 0x0]
Stack pops: 2
Stack additions: [S1, V506]
Exit stack: [V11, 0xdf, V166, V506]

================================

Block 0x5c8
[0x5c8:0x5cb]
---
Predecessors: [0x5a6]
Successors: []
---
0x5c8 PUSH1 0x0
0x5ca DUP1
0x5cb REVERT
---
0x5c8: V510 = 0x0
0x5cb: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V166, V506]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V166, V506]

================================

Block 0x5cc
[0x5cc:0x606]
---
Predecessors: [0x5a6]
Successors: [0x607, 0x610]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x1
0x5cf PUSH1 0xa0
0x5d1 PUSH1 0x2
0x5d3 EXP
0x5d4 SUB
0x5d5 DUP3
0x5d6 AND
0x5d7 PUSH1 0x0
0x5d9 DUP2
0x5da DUP2
0x5db MSTORE
0x5dc PUSH1 0x2
0x5de PUSH1 0x20
0x5e0 MSTORE
0x5e1 PUSH1 0x40
0x5e3 DUP1
0x5e4 DUP3
0x5e5 SHA3
0x5e6 DUP3
0x5e7 SWAP1
0x5e8 SSTORE
0x5e9 MLOAD
0x5ea DUP4
0x5eb ISZERO
0x5ec PUSH2 0x8fc
0x5ef MUL
0x5f0 SWAP2
0x5f1 DUP5
0x5f2 SWAP2
0x5f3 SWAP1
0x5f4 DUP2
0x5f5 DUP2
0x5f6 DUP2
0x5f7 DUP6
0x5f8 DUP9
0x5f9 DUP9
0x5fa CALL
0x5fb SWAP4
0x5fc POP
0x5fd POP
0x5fe POP
0x5ff POP
0x600 ISZERO
0x601 DUP1
0x602 ISZERO
0x603 PUSH2 0x610
0x606 JUMPI
---
0x5cc: JUMPDEST 
0x5cd: V511 = 0x1
0x5cf: V512 = 0xa0
0x5d1: V513 = 0x2
0x5d3: V514 = EXP 0x2 0xa0
0x5d4: V515 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d6: V516 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x5d7: V517 = 0x0
0x5db: M[0x0] = V516
0x5dc: V518 = 0x2
0x5de: V519 = 0x20
0x5e0: M[0x20] = 0x2
0x5e1: V520 = 0x40
0x5e5: V521 = SHA3 0x0 0x40
0x5e8: S[V521] = 0x0
0x5e9: V522 = M[0x40]
0x5eb: V523 = ISZERO V506
0x5ec: V524 = 0x8fc
0x5ef: V525 = MUL 0x8fc V523
0x5fa: V526 = CALL V525 V516 V506 V522 0x0 V522 0x0
0x600: V527 = ISZERO V526
0x602: V528 = ISZERO V527
0x603: V529 = 0x610
0x606: JUMPI 0x610 V528
---
Entry stack: [V11, 0xdf, V166, V506]
Stack pops: 2
Stack additions: [S1, S0, V527]
Exit stack: [V11, 0xdf, V166, V506, V527]

================================

Block 0x607
[0x607:0x60f]
---
Predecessors: [0x5cc]
Successors: []
---
0x607 RETURNDATASIZE
0x608 PUSH1 0x0
0x60a DUP1
0x60b RETURNDATACOPY
0x60c RETURNDATASIZE
0x60d PUSH1 0x0
0x60f REVERT
---
0x607: V530 = RETURNDATASIZE
0x608: V531 = 0x0
0x60b: RETURNDATACOPY 0x0 0x0 V530
0x60c: V532 = RETURNDATASIZE
0x60d: V533 = 0x0
0x60f: REVERT 0x0 V532
---
Entry stack: [V11, 0xdf, V166, V506, V527]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V166, V506, V527]

================================

Block 0x610
[0x610:0x653]
---
Predecessors: [0x5cc]
Successors: [0xdf]
---
0x610 JUMPDEST
0x611 POP
0x612 PUSH1 0x40
0x614 DUP1
0x615 MLOAD
0x616 DUP3
0x617 DUP2
0x618 MSTORE
0x619 SWAP1
0x61a MLOAD
0x61b PUSH1 0x1
0x61d PUSH1 0xa0
0x61f PUSH1 0x2
0x621 EXP
0x622 SUB
0x623 DUP5
0x624 AND
0x625 SWAP2
0x626 PUSH32 0xc77b936abfe9f7a0b660115162ddb07bb0484e4f2bb1aa9229d9d0bd13636afe
0x647 SWAP2
0x648 SWAP1
0x649 DUP2
0x64a SWAP1
0x64b SUB
0x64c PUSH1 0x20
0x64e ADD
0x64f SWAP1
0x650 LOG2
0x651 POP
0x652 POP
0x653 JUMP
---
0x610: JUMPDEST 
0x612: V534 = 0x40
0x615: V535 = M[0x40]
0x618: M[V535] = V506
0x61a: V536 = M[0x40]
0x61b: V537 = 0x1
0x61d: V538 = 0xa0
0x61f: V539 = 0x2
0x621: V540 = EXP 0x2 0xa0
0x622: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x624: V542 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x626: V543 = 0xc77b936abfe9f7a0b660115162ddb07bb0484e4f2bb1aa9229d9d0bd13636afe
0x64b: V544 = SUB V535 V536
0x64c: V545 = 0x20
0x64e: V546 = ADD 0x20 V544
0x650: LOG V536 V546 0xc77b936abfe9f7a0b660115162ddb07bb0484e4f2bb1aa9229d9d0bd13636afe V542
0x653: JUMP 0xdf
---
Entry stack: [V11, 0xdf, V166, V506, V527]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x654
[0x654:0x665]
---
Predecessors: [0x216]
Successors: [0x22b]
---
0x654 JUMPDEST
0x655 PUSH1 0x2
0x657 PUSH1 0x20
0x659 MSTORE
0x65a PUSH1 0x0
0x65c SWAP1
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x40
0x661 SWAP1
0x662 SHA3
0x663 SLOAD
0x664 DUP2
0x665 JUMP
---
0x654: JUMPDEST 
0x655: V547 = 0x2
0x657: V548 = 0x20
0x659: M[0x20] = 0x2
0x65a: V549 = 0x0
0x65e: M[0x0] = V180
0x65f: V550 = 0x40
0x662: V551 = SHA3 0x0 0x40
0x663: V552 = S[V551]
0x665: JUMP 0x22b
---
Entry stack: [V11, 0x22b, V180]
Stack pops: 2
Stack additions: [S1, V552]
Exit stack: [V11, 0x22b, V552]

================================

Block 0x666
[0x666:0x673]
---
Predecessors: [0x53b]
Successors: [0x674, 0x675]
---
0x666 JUMPDEST
0x667 PUSH1 0x0
0x669 DUP3
0x66a DUP3
0x66b ADD
0x66c DUP4
0x66d DUP2
0x66e LT
0x66f ISZERO
0x670 PUSH2 0x675
0x673 JUMPI
---
0x666: JUMPDEST 
0x667: V553 = 0x0
0x66b: V554 = ADD V463 V461
0x66e: V555 = LT V554 V461
0x66f: V556 = ISZERO V555
0x670: V557 = 0x675
0x673: JUMPI 0x675 V556
---
Entry stack: [V11, 0xdf, V152, 0x564, V461, V463]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V554]
Exit stack: [V11, 0xdf, V152, 0x564, V461, V463, 0x0, V554]

================================

Block 0x674
[0x674:0x674]
---
Predecessors: [0x666]
Successors: []
---
0x674 INVALID
---
0x674: INVALID 
---
Entry stack: [V11, 0xdf, V152, 0x564, V461, V463, 0x0, V554]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V152, 0x564, V461, V463, 0x0, V554]

================================

Block 0x675
[0x675:0x67b]
---
Predecessors: [0x666]
Successors: [0x564]
---
0x675 JUMPDEST
0x676 SWAP4
0x677 SWAP3
0x678 POP
0x679 POP
0x67a POP
0x67b JUMP
---
0x675: JUMPDEST 
0x67b: JUMP 0x564
---
Entry stack: [V11, 0xdf, V152, 0x564, V461, V463, 0x0, V554]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0xdf, V152, V554]

================================

Block 0x67c
[0x67c:0x6a7]
---
Predecessors: []
Successors: []
---
0x67c STOP
0x67d LOG1
0x67e PUSH6 0x627a7a723058
0x685 SHA3
0x686 MISSING 0x47
0x687 MISSING 0xc9
0x688 MISSING 0xcd
0x689 MISSING 0xe3
0x68a MISSING 0xd9
0x68b CALL
0x68c MSIZE
0x68d COINBASE
0x68e RETURNDATASIZE
0x68f MISSING 0xa7
0x690 MISSING 0x2c
0x691 MISSING 0x47
0x692 MISSING 0xd2
0x693 SWAP13
0x694 MISSING 0xcc
0x695 DUP5
0x696 MISSING 0xb9
0x697 MISSING 0xd5
0x698 MISSING 0xdb
0x699 MISSING 0x47
0x69a MOD
0x69b MISSING 0xae
0x69c LOG0
0x69d MISSING 0x49
0x69e MISSING 0xac
0x69f MISSING 0xa6
0x6a0 MISSING 0xb4
0x6a1 SWAP10
0x6a2 LOG4
0x6a3 SWAP3
0x6a4 MISSING 0xcf
0x6a5 SWAP2
0x6a6 STOP
0x6a7 MISSING 0x29
---
0x67c: STOP 
0x67d: LOG S0 S1 S2
0x67e: V558 = 0x627a7a723058
0x685: V559 = SHA3 0x627a7a723058 S3
0x686: MISSING 0x47
0x687: MISSING 0xc9
0x688: MISSING 0xcd
0x689: MISSING 0xe3
0x68a: MISSING 0xd9
0x68b: V560 = CALL S0 S1 S2 S3 S4 S5 S6
0x68c: V561 = MSIZE
0x68d: V562 = COINBASE
0x68e: V563 = RETURNDATASIZE
0x68f: MISSING 0xa7
0x690: MISSING 0x2c
0x691: MISSING 0x47
0x692: MISSING 0xd2
0x694: MISSING 0xcc
0x696: MISSING 0xb9
0x697: MISSING 0xd5
0x698: MISSING 0xdb
0x699: MISSING 0x47
0x69a: V564 = MOD S0 S1
0x69b: MISSING 0xae
0x69c: LOG S0 S1
0x69d: MISSING 0x49
0x69e: MISSING 0xac
0x69f: MISSING 0xa6
0x6a0: MISSING 0xb4
0x6a2: LOG S10 S1 S2 S3 S4 S5
0x6a4: MISSING 0xcf
0x6a6: STOP 
0x6a7: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V559, V563, V562, V561, V560, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S4, S0, S1, S2, S3, S4, V564, S9, S7, S8, S6, S0, S2, S1, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1c31f710
Entry block: 0xbe
Exit block: 0xdf
Body: 0xbe, 0xc6, 0xca, 0xdf, 0x23d, 0x250, 0x254, 0x265, 0x269

Function 1:
Public function signature: 0x38af3eed
Entry block: 0xe1
Exit block: 0xf6
Body: 0xe1, 0xe9, 0xed, 0xf6, 0x298

Function 2:
Public function signature: 0x43d726d6
Entry block: 0x112
Exit block: 0xdf
Body: 0xdf, 0x112, 0x11a, 0x11e, 0x2a7, 0x2ba, 0x2be, 0x2d7, 0x2d8, 0x2de, 0x2e2, 0x371, 0x37a

Function 3:
Public function signature: 0x59c656df
Entry block: 0x127
Exit block: 0xdf
Body: 0xdf, 0x127, 0x12f, 0x133, 0x37d, 0x390, 0x394, 0x3ad, 0x3ae, 0x3b4, 0x3b8

Function 4:
Public function signature: 0x79ba5097
Entry block: 0x13c
Exit block: 0xdf
Body: 0xdf, 0x13c, 0x144, 0x148, 0x407, 0x41a, 0x41e

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x151
Exit block: 0xf6
Body: 0xf6, 0x151, 0x159, 0x15d, 0x48c

Function 6:
Public function signature: 0xc19d93fb
Entry block: 0x166
Exit block: 0x18a
Body: 0x166, 0x16e, 0x172, 0x17b, 0x18a, 0x18b, 0x49b

Function 7:
Public function signature: 0xd4ee1d90
Entry block: 0x19f
Exit block: 0xf6
Body: 0xf6, 0x19f, 0x1a7, 0x1ab, 0x4ab

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x1b4
Exit block: 0xdf
Body: 0xdf, 0x1b4, 0x1bc, 0x1c0, 0x4ba, 0x4cd, 0x4d1

Function 9:
Public function signature: 0xf340fa01
Entry block: 0x1d5
Exit block: 0xdf
Body: 0xdf, 0x1d5, 0x500, 0x513, 0x517, 0x530, 0x531, 0x537, 0x53b, 0x564, 0x666, 0x674, 0x675

Function 10:
Public function signature: 0xfa89401a
Entry block: 0x1e9
Exit block: 0xdf
Body: 0xdf, 0x1e9, 0x1f1, 0x1f5, 0x580, 0x59b, 0x59c, 0x5a2, 0x5a6, 0x5c8, 0x5cc, 0x607, 0x610

Function 11:
Public function signature: 0xfc7e286d
Entry block: 0x20a
Exit block: 0x22b
Body: 0x20a, 0x212, 0x216, 0x22b, 0x654

Function 12:
Public fallback function
Entry block: 0xb9
Exit block: 0xb9
Body: 0xb9

