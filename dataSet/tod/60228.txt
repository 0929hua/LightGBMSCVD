Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xe1]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3c8410a2
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xe1
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3c8410a2
0x3b: V13 = EQ V11 0x3c8410a2
0x3c: V14 = 0xe1
0x3f: JUMPI 0xe1 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x16b]
---
0x40 DUP1
0x41 PUSH4 0x3ef13367
0x46 EQ
0x47 PUSH2 0x16b
0x4a JUMPI
---
0x41: V15 = 0x3ef13367
0x46: V16 = EQ 0x3ef13367 V11
0x47: V17 = 0x16b
0x4a: JUMPI 0x16b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x19b]
---
0x4b DUP1
0x4c PUSH4 0x6b9f96ea
0x51 EQ
0x52 PUSH2 0x19b
0x55 JUMPI
---
0x4c: V18 = 0x6b9f96ea
0x51: V19 = EQ 0x6b9f96ea V11
0x52: V20 = 0x19b
0x55: JUMPI 0x19b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1b0]
---
0x56 DUP1
0x57 PUSH4 0xca325469
0x5c EQ
0x5d PUSH2 0x1b0
0x60 JUMPI
---
0x57: V21 = 0xca325469
0x5c: V22 = EQ 0xca325469 V11
0x5d: V23 = 0x1b0
0x60: JUMPI 0x1b0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0xd4]
---
Predecessors: [0x0, 0x56]
Successors: [0xd5, 0xde]
---
0x61 JUMPDEST
0x62 PUSH1 0x40
0x64 DUP1
0x65 MLOAD
0x66 CALLVALUE
0x67 DUP2
0x68 MSTORE
0x69 SWAP1
0x6a MLOAD
0x6b CALLER
0x6c SWAP2
0x6d PUSH32 0x5bac0d4f99f71df67fa7cebba0369126a7cb2b183bcb02b8393dbf5185ba77b6
0x8e SWAP2
0x8f SWAP1
0x90 DUP2
0x91 SWAP1
0x92 SUB
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 LOG2
0x98 PUSH1 0x0
0x9a DUP1
0x9b SLOAD
0x9c PUSH1 0x40
0x9e MLOAD
0x9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4 SWAP1
0xb5 SWAP2
0xb6 AND
0xb7 SWAP2
0xb8 CALLVALUE
0xb9 DUP1
0xba ISZERO
0xbb PUSH2 0x8fc
0xbe MUL
0xbf SWAP3
0xc0 SWAP1
0xc1 SWAP2
0xc2 DUP2
0xc3 DUP2
0xc4 DUP2
0xc5 DUP6
0xc6 DUP9
0xc7 DUP9
0xc8 CALL
0xc9 SWAP4
0xca POP
0xcb POP
0xcc POP
0xcd POP
0xce ISZERO
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0xde
0xd4 JUMPI
---
0x61: JUMPDEST 
0x62: V24 = 0x40
0x65: V25 = M[0x40]
0x66: V26 = CALLVALUE
0x68: M[V25] = V26
0x6a: V27 = M[0x40]
0x6b: V28 = CALLER
0x6d: V29 = 0x5bac0d4f99f71df67fa7cebba0369126a7cb2b183bcb02b8393dbf5185ba77b6
0x92: V30 = SUB V25 V27
0x93: V31 = 0x20
0x95: V32 = ADD 0x20 V30
0x97: LOG V27 V32 0x5bac0d4f99f71df67fa7cebba0369126a7cb2b183bcb02b8393dbf5185ba77b6 V28
0x98: V33 = 0x0
0x9b: V34 = S[0x0]
0x9c: V35 = 0x40
0x9e: V36 = M[0x40]
0x9f: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V38 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V39 = CALLVALUE
0xba: V40 = ISZERO V39
0xbb: V41 = 0x8fc
0xbe: V42 = MUL 0x8fc V40
0xc8: V43 = CALL V42 V38 V39 V36 0x0 V36 0x0
0xce: V44 = ISZERO V43
0xd0: V45 = ISZERO V44
0xd1: V46 = 0xde
0xd4: JUMPI 0xde V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0x61]
Successors: []
---
0xd5 RETURNDATASIZE
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 RETURNDATACOPY
0xda RETURNDATASIZE
0xdb PUSH1 0x0
0xdd REVERT
---
0xd5: V47 = RETURNDATASIZE
0xd6: V48 = 0x0
0xd9: RETURNDATACOPY 0x0 0x0 V47
0xda: V49 = RETURNDATASIZE
0xdb: V50 = 0x0
0xdd: REVERT 0x0 V49
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xde
[0xde:0xe0]
---
Predecessors: [0x61]
Successors: []
---
0xde JUMPDEST
0xdf POP
0xe0 STOP
---
0xde: JUMPDEST 
0xe0: STOP 
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0xd]
Successors: [0xe9, 0xed]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe1: JUMPDEST 
0xe2: V51 = CALLVALUE
0xe4: V52 = ISZERO V51
0xe5: V53 = 0xed
0xe8: JUMPI 0xed V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V11, V51]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe1]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V54 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V11, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V51]

================================

Block 0xed
[0xed:0xf5]
---
Predecessors: [0xe1]
Successors: [0x1ee]
---
0xed JUMPDEST
0xee POP
0xef PUSH2 0xf6
0xf2 PUSH2 0x1ee
0xf5 JUMP
---
0xed: JUMPDEST 
0xef: V55 = 0xf6
0xf2: V56 = 0x1ee
0xf5: JUMP 0x1ee
---
Entry stack: [V11, V51]
Stack pops: 1
Stack additions: [0xf6]
Exit stack: [V11, 0xf6]

================================

Block 0xf6
[0xf6:0x117]
---
Predecessors: [0x273]
Successors: [0x118]
---
0xf6 JUMPDEST
0xf7 PUSH1 0x40
0xf9 DUP1
0xfa MLOAD
0xfb PUSH1 0x20
0xfd DUP1
0xfe DUP3
0xff MSTORE
0x100 DUP4
0x101 MLOAD
0x102 DUP2
0x103 DUP4
0x104 ADD
0x105 MSTORE
0x106 DUP4
0x107 MLOAD
0x108 SWAP2
0x109 SWAP3
0x10a DUP4
0x10b SWAP3
0x10c SWAP1
0x10d DUP4
0x10e ADD
0x10f SWAP2
0x110 DUP6
0x111 ADD
0x112 SWAP1
0x113 DUP1
0x114 DUP4
0x115 DUP4
0x116 PUSH1 0x0
---
0xf6: JUMPDEST 
0xf7: V57 = 0x40
0xfa: V58 = M[0x40]
0xfb: V59 = 0x20
0xff: M[V58] = 0x20
0x101: V60 = M[V128]
0x104: V61 = ADD V58 0x20
0x105: M[V61] = V60
0x107: V62 = M[V128]
0x10e: V63 = ADD V58 0x40
0x111: V64 = ADD V128 0x20
0x116: V65 = 0x0
---
Entry stack: [V11, 0xf6, V128]
Stack pops: 1
Stack additions: [S0, V58, V58, V63, V64, V62, V62, V63, V64, 0x0]
Exit stack: [V11, 0xf6, V128, V58, V58, V63, V64, V62, V62, V63, V64, 0x0]

================================

Block 0x118
[0x118:0x120]
---
Predecessors: [0xf6, 0x121]
Successors: [0x121, 0x130]
---
0x118 JUMPDEST
0x119 DUP4
0x11a DUP2
0x11b LT
0x11c ISZERO
0x11d PUSH2 0x130
0x120 JUMPI
---
0x118: JUMPDEST 
0x11b: V66 = LT S0 V62
0x11c: V67 = ISZERO V66
0x11d: V68 = 0x130
0x120: JUMPI 0x130 V67
---
Entry stack: [V11, 0xf6, V128, V58, V58, V63, V64, V62, V62, V63, V64, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xf6, V128, V58, V58, V63, V64, V62, V62, V63, V64, S0]

================================

Block 0x121
[0x121:0x12f]
---
Predecessors: [0x118]
Successors: [0x118]
---
0x121 DUP2
0x122 DUP2
0x123 ADD
0x124 MLOAD
0x125 DUP4
0x126 DUP3
0x127 ADD
0x128 MSTORE
0x129 PUSH1 0x20
0x12b ADD
0x12c PUSH2 0x118
0x12f JUMP
---
0x123: V69 = ADD S0 V64
0x124: V70 = M[V69]
0x127: V71 = ADD S0 V63
0x128: M[V71] = V70
0x129: V72 = 0x20
0x12b: V73 = ADD 0x20 S0
0x12c: V74 = 0x118
0x12f: JUMP 0x118
---
Entry stack: [V11, 0xf6, V128, V58, V58, V63, V64, V62, V62, V63, V64, S0]
Stack pops: 3
Stack additions: [S2, S1, V73]
Exit stack: [V11, 0xf6, V128, V58, V58, V63, V64, V62, V62, V63, V64, V73]

================================

Block 0x130
[0x130:0x143]
---
Predecessors: [0x118]
Successors: [0x144, 0x15d]
---
0x130 JUMPDEST
0x131 POP
0x132 POP
0x133 POP
0x134 POP
0x135 SWAP1
0x136 POP
0x137 SWAP1
0x138 DUP2
0x139 ADD
0x13a SWAP1
0x13b PUSH1 0x1f
0x13d AND
0x13e DUP1
0x13f ISZERO
0x140 PUSH2 0x15d
0x143 JUMPI
---
0x130: JUMPDEST 
0x139: V75 = ADD V62 V63
0x13b: V76 = 0x1f
0x13d: V77 = AND 0x1f V62
0x13f: V78 = ISZERO V77
0x140: V79 = 0x15d
0x143: JUMPI 0x15d V78
---
Entry stack: [V11, 0xf6, V128, V58, V58, V63, V64, V62, V62, V63, V64, S0]
Stack pops: 7
Stack additions: [V75, V77]
Exit stack: [V11, 0xf6, V128, V58, V58, V75, V77]

================================

Block 0x144
[0x144:0x15c]
---
Predecessors: [0x130]
Successors: [0x15d]
---
0x144 DUP1
0x145 DUP3
0x146 SUB
0x147 DUP1
0x148 MLOAD
0x149 PUSH1 0x1
0x14b DUP4
0x14c PUSH1 0x20
0x14e SUB
0x14f PUSH2 0x100
0x152 EXP
0x153 SUB
0x154 NOT
0x155 AND
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP2
0x15c POP
---
0x146: V80 = SUB V75 V77
0x148: V81 = M[V80]
0x149: V82 = 0x1
0x14c: V83 = 0x20
0x14e: V84 = SUB 0x20 V77
0x14f: V85 = 0x100
0x152: V86 = EXP 0x100 V84
0x153: V87 = SUB V86 0x1
0x154: V88 = NOT V87
0x155: V89 = AND V88 V81
0x157: M[V80] = V89
0x158: V90 = 0x20
0x15a: V91 = ADD 0x20 V80
---
Entry stack: [V11, 0xf6, V128, V58, V58, V75, V77]
Stack pops: 2
Stack additions: [V91, S0]
Exit stack: [V11, 0xf6, V128, V58, V58, V91, V77]

================================

Block 0x15d
[0x15d:0x16a]
---
Predecessors: [0x130, 0x144]
Successors: []
---
0x15d JUMPDEST
0x15e POP
0x15f SWAP3
0x160 POP
0x161 POP
0x162 POP
0x163 PUSH1 0x40
0x165 MLOAD
0x166 DUP1
0x167 SWAP2
0x168 SUB
0x169 SWAP1
0x16a RETURN
---
0x15d: JUMPDEST 
0x163: V92 = 0x40
0x165: V93 = M[0x40]
0x168: V94 = SUB S1 V93
0x16a: RETURN V93 V94
---
Entry stack: [V11, 0xf6, V128, V58, V58, S1, V77]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xf6]

================================

Block 0x16b
[0x16b:0x172]
---
Predecessors: [0x40]
Successors: [0x173, 0x177]
---
0x16b JUMPDEST
0x16c CALLVALUE
0x16d DUP1
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x16b: JUMPDEST 
0x16c: V95 = CALLVALUE
0x16e: V96 = ISZERO V95
0x16f: V97 = 0x177
0x172: JUMPI 0x177 V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V11, V95]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x16b]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V98 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V11, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V95]

================================

Block 0x177
[0x177:0x198]
---
Predecessors: [0x16b]
Successors: [0x27b]
---
0x177 JUMPDEST
0x178 POP
0x179 PUSH2 0x199
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 PUSH1 0x4
0x193 CALLDATALOAD
0x194 AND
0x195 PUSH2 0x27b
0x198 JUMP
---
0x177: JUMPDEST 
0x179: V99 = 0x199
0x17c: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V101 = 0x4
0x193: V102 = CALLDATALOAD 0x4
0x194: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x195: V104 = 0x27b
0x198: JUMP 0x27b
---
Entry stack: [V11, V95]
Stack pops: 1
Stack additions: [0x199, V103]
Exit stack: [V11, 0x199, V103]

================================

Block 0x199
[0x199:0x19a]
---
Predecessors: [0x3de, 0x463]
Successors: []
---
0x199 JUMPDEST
0x19a STOP
---
0x199: JUMPDEST 
0x19a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x4b]
Successors: [0x1a3, 0x1a7]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d DUP1
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19b: JUMPDEST 
0x19c: V105 = CALLVALUE
0x19e: V106 = ISZERO V105
0x19f: V107 = 0x1a7
0x1a2: JUMPI 0x1a7 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V11, V105]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19b]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V108 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V105]

================================

Block 0x1a7
[0x1a7:0x1af]
---
Predecessors: [0x19b]
Successors: [0x3e4]
---
0x1a7 JUMPDEST
0x1a8 POP
0x1a9 PUSH2 0x199
0x1ac PUSH2 0x3e4
0x1af JUMP
---
0x1a7: JUMPDEST 
0x1a9: V109 = 0x199
0x1ac: V110 = 0x3e4
0x1af: JUMP 0x3e4
---
Entry stack: [V11, V105]
Stack pops: 1
Stack additions: [0x199]
Exit stack: [V11, 0x199]

================================

Block 0x1b0
[0x1b0:0x1b7]
---
Predecessors: [0x56]
Successors: [0x1b8, 0x1bc]
---
0x1b0 JUMPDEST
0x1b1 CALLVALUE
0x1b2 DUP1
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V111 = CALLVALUE
0x1b3: V112 = ISZERO V111
0x1b4: V113 = 0x1bc
0x1b7: JUMPI 0x1bc V112
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V111]
Exit stack: [V11, V111]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b0]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V114 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V11, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V111]

================================

Block 0x1bc
[0x1bc:0x1c4]
---
Predecessors: [0x1b0]
Successors: [0x466]
---
0x1bc JUMPDEST
0x1bd POP
0x1be PUSH2 0x1c5
0x1c1 PUSH2 0x466
0x1c4 JUMP
---
0x1bc: JUMPDEST 
0x1be: V115 = 0x1c5
0x1c1: V116 = 0x466
0x1c4: JUMP 0x466
---
Entry stack: [V11, V111]
Stack pops: 1
Stack additions: [0x1c5]
Exit stack: [V11, 0x1c5]

================================

Block 0x1c5
[0x1c5:0x1ed]
---
Predecessors: [0x466]
Successors: []
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x40
0x1c8 DUP1
0x1c9 MLOAD
0x1ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1df SWAP1
0x1e0 SWAP3
0x1e1 AND
0x1e2 DUP3
0x1e3 MSTORE
0x1e4 MLOAD
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 SWAP1
0x1e8 SUB
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec SWAP1
0x1ed RETURN
---
0x1c5: JUMPDEST 
0x1c6: V117 = 0x40
0x1c9: V118 = M[0x40]
0x1ca: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V120 = AND V296 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: M[V118] = V120
0x1e4: V121 = M[0x40]
0x1e8: V122 = SUB V118 V121
0x1e9: V123 = 0x20
0x1eb: V124 = ADD 0x20 V122
0x1ed: RETURN V121 V124
---
Entry stack: [V11, 0x1c5, V296]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1c5]

================================

Block 0x1ee
[0x1ee:0x22c]
---
Predecessors: [0xed]
Successors: [0x22d, 0x273]
---
0x1ee JUMPDEST
0x1ef PUSH1 0x1
0x1f1 DUP1
0x1f2 SLOAD
0x1f3 PUSH1 0x40
0x1f5 DUP1
0x1f6 MLOAD
0x1f7 PUSH1 0x20
0x1f9 PUSH1 0x2
0x1fb DUP5
0x1fc DUP7
0x1fd AND
0x1fe ISZERO
0x1ff PUSH2 0x100
0x202 MUL
0x203 PUSH1 0x0
0x205 NOT
0x206 ADD
0x207 SWAP1
0x208 SWAP5
0x209 AND
0x20a SWAP4
0x20b SWAP1
0x20c SWAP4
0x20d DIV
0x20e PUSH1 0x1f
0x210 DUP2
0x211 ADD
0x212 DUP5
0x213 SWAP1
0x214 DIV
0x215 DUP5
0x216 MUL
0x217 DUP3
0x218 ADD
0x219 DUP5
0x21a ADD
0x21b SWAP1
0x21c SWAP3
0x21d MSTORE
0x21e DUP2
0x21f DUP2
0x220 MSTORE
0x221 SWAP3
0x222 SWAP2
0x223 DUP4
0x224 ADD
0x225 DUP3
0x226 DUP3
0x227 DUP1
0x228 ISZERO
0x229 PUSH2 0x273
0x22c JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V125 = 0x1
0x1f2: V126 = S[0x1]
0x1f3: V127 = 0x40
0x1f6: V128 = M[0x40]
0x1f7: V129 = 0x20
0x1f9: V130 = 0x2
0x1fd: V131 = AND 0x1 V126
0x1fe: V132 = ISZERO V131
0x1ff: V133 = 0x100
0x202: V134 = MUL 0x100 V132
0x203: V135 = 0x0
0x205: V136 = NOT 0x0
0x206: V137 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V134
0x209: V138 = AND V126 V137
0x20d: V139 = DIV V138 0x2
0x20e: V140 = 0x1f
0x211: V141 = ADD V139 0x1f
0x214: V142 = DIV V141 0x20
0x216: V143 = MUL 0x20 V142
0x218: V144 = ADD V128 V143
0x21a: V145 = ADD 0x20 V144
0x21d: M[0x40] = V145
0x220: M[V128] = V139
0x224: V146 = ADD V128 0x20
0x228: V147 = ISZERO V139
0x229: V148 = 0x273
0x22c: JUMPI 0x273 V147
---
Entry stack: [V11, 0xf6]
Stack pops: 0
Stack additions: [V128, 0x1, V139, V146, 0x1, V139]
Exit stack: [V11, 0xf6, V128, 0x1, V139, V146, 0x1, V139]

================================

Block 0x22d
[0x22d:0x234]
---
Predecessors: [0x1ee]
Successors: [0x235, 0x248]
---
0x22d DUP1
0x22e PUSH1 0x1f
0x230 LT
0x231 PUSH2 0x248
0x234 JUMPI
---
0x22e: V149 = 0x1f
0x230: V150 = LT 0x1f V139
0x231: V151 = 0x248
0x234: JUMPI 0x248 V150
---
Entry stack: [V11, 0xf6, V128, 0x1, V139, V146, 0x1, V139]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xf6, V128, 0x1, V139, V146, 0x1, V139]

================================

Block 0x235
[0x235:0x247]
---
Predecessors: [0x22d]
Successors: [0x273]
---
0x235 PUSH2 0x100
0x238 DUP1
0x239 DUP4
0x23a SLOAD
0x23b DIV
0x23c MUL
0x23d DUP4
0x23e MSTORE
0x23f SWAP2
0x240 PUSH1 0x20
0x242 ADD
0x243 SWAP2
0x244 PUSH2 0x273
0x247 JUMP
---
0x235: V152 = 0x100
0x23a: V153 = S[0x1]
0x23b: V154 = DIV V153 0x100
0x23c: V155 = MUL V154 0x100
0x23e: M[V146] = V155
0x240: V156 = 0x20
0x242: V157 = ADD 0x20 V146
0x244: V158 = 0x273
0x247: JUMP 0x273
---
Entry stack: [V11, 0xf6, V128, 0x1, V139, V146, 0x1, V139]
Stack pops: 3
Stack additions: [V157, S1, S0]
Exit stack: [V11, 0xf6, V128, 0x1, V139, V157, 0x1, V139]

================================

Block 0x248
[0x248:0x255]
---
Predecessors: [0x22d]
Successors: [0x256]
---
0x248 JUMPDEST
0x249 DUP3
0x24a ADD
0x24b SWAP2
0x24c SWAP1
0x24d PUSH1 0x0
0x24f MSTORE
0x250 PUSH1 0x20
0x252 PUSH1 0x0
0x254 SHA3
0x255 SWAP1
---
0x248: JUMPDEST 
0x24a: V159 = ADD V146 V139
0x24d: V160 = 0x0
0x24f: M[0x0] = 0x1
0x250: V161 = 0x20
0x252: V162 = 0x0
0x254: V163 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xf6, V128, 0x1, V139, V146, 0x1, V139]
Stack pops: 3
Stack additions: [V159, V163, S2]
Exit stack: [V11, 0xf6, V128, 0x1, V139, V159, V163, V146]

================================

Block 0x256
[0x256:0x269]
---
Predecessors: [0x248, 0x256]
Successors: [0x256, 0x26a]
---
0x256 JUMPDEST
0x257 DUP2
0x258 SLOAD
0x259 DUP2
0x25a MSTORE
0x25b SWAP1
0x25c PUSH1 0x1
0x25e ADD
0x25f SWAP1
0x260 PUSH1 0x20
0x262 ADD
0x263 DUP1
0x264 DUP4
0x265 GT
0x266 PUSH2 0x256
0x269 JUMPI
---
0x256: JUMPDEST 
0x258: V164 = S[S1]
0x25a: M[S0] = V164
0x25c: V165 = 0x1
0x25e: V166 = ADD 0x1 S1
0x260: V167 = 0x20
0x262: V168 = ADD 0x20 S0
0x265: V169 = GT V159 V168
0x266: V170 = 0x256
0x269: JUMPI 0x256 V169
---
Entry stack: [V11, 0xf6, V128, 0x1, V139, V159, S1, S0]
Stack pops: 3
Stack additions: [S2, V166, V168]
Exit stack: [V11, 0xf6, V128, 0x1, V139, V159, V166, V168]

================================

Block 0x26a
[0x26a:0x272]
---
Predecessors: [0x256]
Successors: [0x273]
---
0x26a DUP3
0x26b SWAP1
0x26c SUB
0x26d PUSH1 0x1f
0x26f AND
0x270 DUP3
0x271 ADD
0x272 SWAP2
---
0x26c: V171 = SUB V168 V159
0x26d: V172 = 0x1f
0x26f: V173 = AND 0x1f V171
0x271: V174 = ADD V159 V173
---
Entry stack: [V11, 0xf6, V128, 0x1, V139, V159, V166, V168]
Stack pops: 3
Stack additions: [V174, S1, S2]
Exit stack: [V11, 0xf6, V128, 0x1, V139, V174, V166, V159]

================================

Block 0x273
[0x273:0x27a]
---
Predecessors: [0x1ee, 0x235, 0x26a]
Successors: [0xf6]
---
0x273 JUMPDEST
0x274 POP
0x275 POP
0x276 POP
0x277 POP
0x278 POP
0x279 DUP2
0x27a JUMP
---
0x273: JUMPDEST 
0x27a: JUMP 0xf6
---
Entry stack: [V11, 0xf6, V128, 0x1, V139, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xf6, V128]

================================

Block 0x27b
[0x27b:0x2eb]
---
Predecessors: [0x177]
Successors: [0x2ec, 0x2f0]
---
0x27b JUMPDEST
0x27c PUSH1 0x40
0x27e DUP1
0x27f MLOAD
0x280 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 ADDRESS
0x2a4 PUSH1 0x4
0x2a6 DUP3
0x2a7 ADD
0x2a8 DUP2
0x2a9 SWAP1
0x2aa MSTORE
0x2ab SWAP2
0x2ac MLOAD
0x2ad DUP4
0x2ae SWAP3
0x2af SWAP2
0x2b0 PUSH1 0x0
0x2b2 SWAP2
0x2b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c8 DUP6
0x2c9 AND
0x2ca SWAP2
0x2cb PUSH4 0x70a08231
0x2d0 SWAP2
0x2d1 PUSH1 0x24
0x2d3 DUP1
0x2d4 DUP4
0x2d5 ADD
0x2d6 SWAP3
0x2d7 PUSH1 0x20
0x2d9 SWAP3
0x2da SWAP2
0x2db SWAP1
0x2dc DUP3
0x2dd SWAP1
0x2de SUB
0x2df ADD
0x2e0 DUP2
0x2e1 DUP8
0x2e2 DUP8
0x2e3 DUP1
0x2e4 EXTCODESIZE
0x2e5 ISZERO
0x2e6 DUP1
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x27b: JUMPDEST 
0x27c: V175 = 0x40
0x27f: V176 = M[0x40]
0x280: V177 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2a2: M[V176] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2a3: V178 = ADDRESS
0x2a4: V179 = 0x4
0x2a7: V180 = ADD V176 0x4
0x2aa: M[V180] = V178
0x2ac: V181 = M[0x40]
0x2b0: V182 = 0x0
0x2b3: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V184 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x2cb: V185 = 0x70a08231
0x2d1: V186 = 0x24
0x2d5: V187 = ADD V176 0x24
0x2d7: V188 = 0x20
0x2de: V189 = SUB V176 V181
0x2df: V190 = ADD V189 0x24
0x2e4: V191 = EXTCODESIZE V184
0x2e5: V192 = ISZERO V191
0x2e7: V193 = ISZERO V192
0x2e8: V194 = 0x2f0
0x2eb: JUMPI 0x2f0 V193
---
Entry stack: [V11, 0x199, V103]
Stack pops: 1
Stack additions: [S0, S0, V178, 0x0, V184, 0x70a08231, V187, 0x20, V181, V190, V181, 0x0, V184, V192]
Exit stack: [V11, 0x199, V103, V103, V178, 0x0, V184, 0x70a08231, V187, 0x20, V181, V190, V181, 0x0, V184, V192]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x27b]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V195 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x199, V103, V103, V178, 0x0, V184, 0x70a08231, V187, 0x20, V181, V190, V181, 0x0, V184, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, 0x0, V184, 0x70a08231, V187, 0x20, V181, V190, V181, 0x0, V184, V192]

================================

Block 0x2f0
[0x2f0:0x2fa]
---
Predecessors: [0x27b]
Successors: [0x2fb, 0x304]
---
0x2f0 JUMPDEST
0x2f1 POP
0x2f2 GAS
0x2f3 CALL
0x2f4 ISZERO
0x2f5 DUP1
0x2f6 ISZERO
0x2f7 PUSH2 0x304
0x2fa JUMPI
---
0x2f0: JUMPDEST 
0x2f2: V196 = GAS
0x2f3: V197 = CALL V196 V184 0x0 V181 V190 V181 0x20
0x2f4: V198 = ISZERO V197
0x2f6: V199 = ISZERO V198
0x2f7: V200 = 0x304
0x2fa: JUMPI 0x304 V199
---
Entry stack: [V11, 0x199, V103, V103, V178, 0x0, V184, 0x70a08231, V187, 0x20, V181, V190, V181, 0x0, V184, V192]
Stack pops: 7
Stack additions: [V198]
Exit stack: [V11, 0x199, V103, V103, V178, 0x0, V184, 0x70a08231, V187, V198]

================================

Block 0x2fb
[0x2fb:0x303]
---
Predecessors: [0x2f0]
Successors: []
---
0x2fb RETURNDATASIZE
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff RETURNDATACOPY
0x300 RETURNDATASIZE
0x301 PUSH1 0x0
0x303 REVERT
---
0x2fb: V201 = RETURNDATASIZE
0x2fc: V202 = 0x0
0x2ff: RETURNDATACOPY 0x0 0x0 V201
0x300: V203 = RETURNDATASIZE
0x301: V204 = 0x0
0x303: REVERT 0x0 V203
---
Entry stack: [V11, 0x199, V103, V103, V178, 0x0, V184, 0x70a08231, V187, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, 0x0, V184, 0x70a08231, V187, V198]

================================

Block 0x304
[0x304:0x315]
---
Predecessors: [0x2f0]
Successors: [0x316, 0x31a]
---
0x304 JUMPDEST
0x305 POP
0x306 POP
0x307 POP
0x308 POP
0x309 PUSH1 0x40
0x30b MLOAD
0x30c RETURNDATASIZE
0x30d PUSH1 0x20
0x30f DUP2
0x310 LT
0x311 ISZERO
0x312 PUSH2 0x31a
0x315 JUMPI
---
0x304: JUMPDEST 
0x309: V205 = 0x40
0x30b: V206 = M[0x40]
0x30c: V207 = RETURNDATASIZE
0x30d: V208 = 0x20
0x310: V209 = LT V207 0x20
0x311: V210 = ISZERO V209
0x312: V211 = 0x31a
0x315: JUMPI 0x31a V210
---
Entry stack: [V11, 0x199, V103, V103, V178, 0x0, V184, 0x70a08231, V187, V198]
Stack pops: 4
Stack additions: [V206, V207]
Exit stack: [V11, 0x199, V103, V103, V178, 0x0, V206, V207]

================================

Block 0x316
[0x316:0x319]
---
Predecessors: [0x304]
Successors: []
---
0x316 PUSH1 0x0
0x318 DUP1
0x319 REVERT
---
0x316: V212 = 0x0
0x319: REVERT 0x0 0x0
---
Entry stack: [V11, 0x199, V103, V103, V178, 0x0, V206, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, 0x0, V206, V207]

================================

Block 0x31a
[0x31a:0x325]
---
Predecessors: [0x304]
Successors: [0x326, 0x32a]
---
0x31a JUMPDEST
0x31b POP
0x31c MLOAD
0x31d SWAP1
0x31e POP
0x31f DUP1
0x320 ISZERO
0x321 ISZERO
0x322 PUSH2 0x32a
0x325 JUMPI
---
0x31a: JUMPDEST 
0x31c: V213 = M[V206]
0x320: V214 = ISZERO V213
0x321: V215 = ISZERO V214
0x322: V216 = 0x32a
0x325: JUMPI 0x32a V215
---
Entry stack: [V11, 0x199, V103, V103, V178, 0x0, V206, V207]
Stack pops: 3
Stack additions: [V213]
Exit stack: [V11, 0x199, V103, V103, V178, V213]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x31a]
Successors: [0x3de]
---
0x326 PUSH2 0x3de
0x329 JUMP
---
0x326: V217 = 0x3de
0x329: JUMP 0x3de
---
Entry stack: [V11, 0x199, V103, V103, V178, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, V213]

================================

Block 0x32a
[0x32a:0x3a2]
---
Predecessors: [0x31a]
Successors: [0x3a3, 0x3a7]
---
0x32a JUMPDEST
0x32b PUSH1 0x0
0x32d DUP1
0x32e SLOAD
0x32f PUSH1 0x40
0x331 DUP1
0x332 MLOAD
0x333 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x354 DUP2
0x355 MSTORE
0x356 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36b SWAP3
0x36c DUP4
0x36d AND
0x36e PUSH1 0x4
0x370 DUP3
0x371 ADD
0x372 MSTORE
0x373 PUSH1 0x24
0x375 DUP2
0x376 ADD
0x377 DUP6
0x378 SWAP1
0x379 MSTORE
0x37a SWAP1
0x37b MLOAD
0x37c SWAP2
0x37d DUP7
0x37e AND
0x37f SWAP3
0x380 PUSH4 0xa9059cbb
0x385 SWAP3
0x386 PUSH1 0x44
0x388 DUP1
0x389 DUP5
0x38a ADD
0x38b SWAP4
0x38c PUSH1 0x20
0x38e SWAP4
0x38f SWAP1
0x390 DUP4
0x391 SWAP1
0x392 SUB
0x393 SWAP1
0x394 SWAP2
0x395 ADD
0x396 SWAP1
0x397 DUP3
0x398 SWAP1
0x399 DUP8
0x39a DUP1
0x39b EXTCODESIZE
0x39c ISZERO
0x39d DUP1
0x39e ISZERO
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x32a: JUMPDEST 
0x32b: V218 = 0x0
0x32e: V219 = S[0x0]
0x32f: V220 = 0x40
0x332: V221 = M[0x40]
0x333: V222 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x355: M[V221] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x356: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x36e: V225 = 0x4
0x371: V226 = ADD V221 0x4
0x372: M[V226] = V224
0x373: V227 = 0x24
0x376: V228 = ADD V221 0x24
0x379: M[V228] = V213
0x37b: V229 = M[0x40]
0x37e: V230 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x380: V231 = 0xa9059cbb
0x386: V232 = 0x44
0x38a: V233 = ADD V221 0x44
0x38c: V234 = 0x20
0x392: V235 = SUB V221 V229
0x395: V236 = ADD 0x44 V235
0x39b: V237 = EXTCODESIZE V230
0x39c: V238 = ISZERO V237
0x39e: V239 = ISZERO V238
0x39f: V240 = 0x3a7
0x3a2: JUMPI 0x3a7 V239
---
Entry stack: [V11, 0x199, V103, V103, V178, V213]
Stack pops: 3
Stack additions: [S2, S1, S0, V230, 0xa9059cbb, V233, 0x20, V229, V236, V229, 0x0, V230, V238]
Exit stack: [V11, 0x199, V103, V103, V178, V213, V230, 0xa9059cbb, V233, 0x20, V229, V236, V229, 0x0, V230, V238]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x32a]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V241 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x199, V103, V103, V178, V213, V230, 0xa9059cbb, V233, 0x20, V229, V236, V229, 0x0, V230, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, V213, V230, 0xa9059cbb, V233, 0x20, V229, V236, V229, 0x0, V230, V238]

================================

Block 0x3a7
[0x3a7:0x3b1]
---
Predecessors: [0x32a]
Successors: [0x3b2, 0x3bb]
---
0x3a7 JUMPDEST
0x3a8 POP
0x3a9 GAS
0x3aa CALL
0x3ab ISZERO
0x3ac DUP1
0x3ad ISZERO
0x3ae PUSH2 0x3bb
0x3b1 JUMPI
---
0x3a7: JUMPDEST 
0x3a9: V242 = GAS
0x3aa: V243 = CALL V242 V230 0x0 V229 V236 V229 0x20
0x3ab: V244 = ISZERO V243
0x3ad: V245 = ISZERO V244
0x3ae: V246 = 0x3bb
0x3b1: JUMPI 0x3bb V245
---
Entry stack: [V11, 0x199, V103, V103, V178, V213, V230, 0xa9059cbb, V233, 0x20, V229, V236, V229, 0x0, V230, V238]
Stack pops: 7
Stack additions: [V244]
Exit stack: [V11, 0x199, V103, V103, V178, V213, V230, 0xa9059cbb, V233, V244]

================================

Block 0x3b2
[0x3b2:0x3ba]
---
Predecessors: [0x3a7]
Successors: []
---
0x3b2 RETURNDATASIZE
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 RETURNDATACOPY
0x3b7 RETURNDATASIZE
0x3b8 PUSH1 0x0
0x3ba REVERT
---
0x3b2: V247 = RETURNDATASIZE
0x3b3: V248 = 0x0
0x3b6: RETURNDATACOPY 0x0 0x0 V247
0x3b7: V249 = RETURNDATASIZE
0x3b8: V250 = 0x0
0x3ba: REVERT 0x0 V249
---
Entry stack: [V11, 0x199, V103, V103, V178, V213, V230, 0xa9059cbb, V233, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, V213, V230, 0xa9059cbb, V233, V244]

================================

Block 0x3bb
[0x3bb:0x3cc]
---
Predecessors: [0x3a7]
Successors: [0x3cd, 0x3d1]
---
0x3bb JUMPDEST
0x3bc POP
0x3bd POP
0x3be POP
0x3bf POP
0x3c0 PUSH1 0x40
0x3c2 MLOAD
0x3c3 RETURNDATASIZE
0x3c4 PUSH1 0x20
0x3c6 DUP2
0x3c7 LT
0x3c8 ISZERO
0x3c9 PUSH2 0x3d1
0x3cc JUMPI
---
0x3bb: JUMPDEST 
0x3c0: V251 = 0x40
0x3c2: V252 = M[0x40]
0x3c3: V253 = RETURNDATASIZE
0x3c4: V254 = 0x20
0x3c7: V255 = LT V253 0x20
0x3c8: V256 = ISZERO V255
0x3c9: V257 = 0x3d1
0x3cc: JUMPI 0x3d1 V256
---
Entry stack: [V11, 0x199, V103, V103, V178, V213, V230, 0xa9059cbb, V233, V244]
Stack pops: 4
Stack additions: [V252, V253]
Exit stack: [V11, 0x199, V103, V103, V178, V213, V252, V253]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x3bb]
Successors: []
---
0x3cd PUSH1 0x0
0x3cf DUP1
0x3d0 REVERT
---
0x3cd: V258 = 0x0
0x3d0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x199, V103, V103, V178, V213, V252, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, V213, V252, V253]

================================

Block 0x3d1
[0x3d1:0x3d9]
---
Predecessors: [0x3bb]
Successors: [0x3da, 0x3de]
---
0x3d1 JUMPDEST
0x3d2 POP
0x3d3 MLOAD
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 PUSH2 0x3de
0x3d9 JUMPI
---
0x3d1: JUMPDEST 
0x3d3: V259 = M[V252]
0x3d4: V260 = ISZERO V259
0x3d5: V261 = ISZERO V260
0x3d6: V262 = 0x3de
0x3d9: JUMPI 0x3de V261
---
Entry stack: [V11, 0x199, V103, V103, V178, V213, V252, V253]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, V213]

================================

Block 0x3da
[0x3da:0x3dd]
---
Predecessors: [0x3d1]
Successors: []
---
0x3da PUSH1 0x0
0x3dc DUP1
0x3dd REVERT
---
0x3da: V263 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x199, V103, V103, V178, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V103, V103, V178, V213]

================================

Block 0x3de
[0x3de:0x3e3]
---
Predecessors: [0x326, 0x3d1]
Successors: [0x199]
---
0x3de JUMPDEST
0x3df POP
0x3e0 POP
0x3e1 POP
0x3e2 POP
0x3e3 JUMP
---
0x3de: JUMPDEST 
0x3e3: JUMP 0x199
---
Entry stack: [V11, 0x199, V103, V103, V178, V213]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e4
[0x3e4:0x459]
---
Predecessors: [0x1a7]
Successors: [0x45a, 0x463]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x40
0x3e7 DUP1
0x3e8 MLOAD
0x3e9 ADDRESS
0x3ea BALANCE
0x3eb DUP2
0x3ec MSTORE
0x3ed SWAP1
0x3ee MLOAD
0x3ef CALLER
0x3f0 SWAP2
0x3f1 PUSH32 0xa98efcd54f1f2ae5457ba3c68d7cf8974003a2bfce00f526f5624264a87bc0ea
0x412 SWAP2
0x413 SWAP1
0x414 DUP2
0x415 SWAP1
0x416 SUB
0x417 PUSH1 0x20
0x419 ADD
0x41a SWAP1
0x41b LOG2
0x41c PUSH1 0x0
0x41e DUP1
0x41f SLOAD
0x420 PUSH1 0x40
0x422 MLOAD
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 SWAP1
0x439 SWAP2
0x43a AND
0x43b SWAP2
0x43c ADDRESS
0x43d BALANCE
0x43e DUP1
0x43f ISZERO
0x440 PUSH2 0x8fc
0x443 MUL
0x444 SWAP3
0x445 SWAP1
0x446 SWAP2
0x447 DUP2
0x448 DUP2
0x449 DUP2
0x44a DUP6
0x44b DUP9
0x44c DUP9
0x44d CALL
0x44e SWAP4
0x44f POP
0x450 POP
0x451 POP
0x452 POP
0x453 ISZERO
0x454 DUP1
0x455 ISZERO
0x456 PUSH2 0x463
0x459 JUMPI
---
0x3e4: JUMPDEST 
0x3e5: V264 = 0x40
0x3e8: V265 = M[0x40]
0x3e9: V266 = ADDRESS
0x3ea: V267 = BALANCE V266
0x3ec: M[V265] = V267
0x3ee: V268 = M[0x40]
0x3ef: V269 = CALLER
0x3f1: V270 = 0xa98efcd54f1f2ae5457ba3c68d7cf8974003a2bfce00f526f5624264a87bc0ea
0x416: V271 = SUB V265 V268
0x417: V272 = 0x20
0x419: V273 = ADD 0x20 V271
0x41b: LOG V268 V273 0xa98efcd54f1f2ae5457ba3c68d7cf8974003a2bfce00f526f5624264a87bc0ea V269
0x41c: V274 = 0x0
0x41f: V275 = S[0x0]
0x420: V276 = 0x40
0x422: V277 = M[0x40]
0x423: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V279 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x43c: V280 = ADDRESS
0x43d: V281 = BALANCE V280
0x43f: V282 = ISZERO V281
0x440: V283 = 0x8fc
0x443: V284 = MUL 0x8fc V282
0x44d: V285 = CALL V284 V279 V281 V277 0x0 V277 0x0
0x453: V286 = ISZERO V285
0x455: V287 = ISZERO V286
0x456: V288 = 0x463
0x459: JUMPI 0x463 V287
---
Entry stack: [V11, 0x199]
Stack pops: 0
Stack additions: [V286]
Exit stack: [V11, 0x199, V286]

================================

Block 0x45a
[0x45a:0x462]
---
Predecessors: [0x3e4]
Successors: []
---
0x45a RETURNDATASIZE
0x45b PUSH1 0x0
0x45d DUP1
0x45e RETURNDATACOPY
0x45f RETURNDATASIZE
0x460 PUSH1 0x0
0x462 REVERT
---
0x45a: V289 = RETURNDATASIZE
0x45b: V290 = 0x0
0x45e: RETURNDATACOPY 0x0 0x0 V289
0x45f: V291 = RETURNDATASIZE
0x460: V292 = 0x0
0x462: REVERT 0x0 V291
---
Entry stack: [V11, 0x199, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199, V286]

================================

Block 0x463
[0x463:0x465]
---
Predecessors: [0x3e4]
Successors: [0x199]
---
0x463 JUMPDEST
0x464 POP
0x465 JUMP
---
0x463: JUMPDEST 
0x465: JUMP 0x199
---
Entry stack: [V11, 0x199, V286]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x466
[0x466:0x481]
---
Predecessors: [0x1bc]
Successors: [0x1c5]
---
0x466 JUMPDEST
0x467 PUSH1 0x0
0x469 SLOAD
0x46a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47f AND
0x480 DUP2
0x481 JUMP
---
0x466: JUMPDEST 
0x467: V293 = 0x0
0x469: V294 = S[0x0]
0x46a: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x481: JUMP 0x1c5
---
Entry stack: [V11, 0x1c5]
Stack pops: 1
Stack additions: [S0, V296]
Exit stack: [V11, 0x1c5, V296]

================================

Block 0x482
[0x482:0x4b6]
---
Predecessors: []
Successors: []
---
0x482 STOP
0x483 LOG1
0x484 PUSH6 0x627a7a723058
0x48b SHA3
0x48c MISSING 0xb5
0x48d MULMOD
0x48e SWAP8
0x48f MISSING 0xe5
0x490 PUSH2 0xbdb9
0x493 MISSING 0xe5
0x494 MISSING 0xbb
0x495 SWAP10
0x496 MSTORE
0x497 PUSH31 0x995b254774fd7fcc650c893beeb1510ceff1cb80029
---
0x482: STOP 
0x483: LOG S0 S1 S2
0x484: V297 = 0x627a7a723058
0x48b: V298 = SHA3 0x627a7a723058 S3
0x48c: MISSING 0xb5
0x48d: V299 = MULMOD S0 S1 S2
0x48f: MISSING 0xe5
0x490: V300 = 0xbdb9
0x493: MISSING 0xe5
0x494: MISSING 0xbb
0x496: M[S10] = S1
0x497: V301 = 0x995b254774fd7fcc650c893beeb1510ceff1cb80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V298, S10, S3, S4, S5, S6, S7, S8, S9, V299, 0xbdb9, 0x995b254774fd7fcc650c893beeb1510ceff1cb80029, S2, S3, S4, S5, S6, S7, S8, S9, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x3c8410a2
Entry block: 0xe1
Exit block: 0x15d
Body: 0xe1, 0xe9, 0xed, 0xf6, 0x118, 0x121, 0x130, 0x144, 0x15d, 0x1ee, 0x22d, 0x235, 0x248, 0x256, 0x26a, 0x273

Function 1:
Public function signature: 0x3ef13367
Entry block: 0x16b
Exit block: 0x3da
Body: 0x16b, 0x173, 0x177, 0x199, 0x27b, 0x2ec, 0x2f0, 0x2fb, 0x304, 0x316, 0x31a, 0x326, 0x32a, 0x3a3, 0x3a7, 0x3b2, 0x3bb, 0x3cd, 0x3d1, 0x3da, 0x3de

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x19b
Exit block: 0x199
Body: 0x199, 0x19b, 0x1a3, 0x1a7, 0x3e4, 0x45a, 0x463

Function 3:
Public function signature: 0xca325469
Entry block: 0x1b0
Exit block: 0x1c5
Body: 0x1b0, 0x1b8, 0x1bc, 0x1c5, 0x466

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0xde
Body: 0x61, 0xd5, 0xde

