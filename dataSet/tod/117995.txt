Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x3a]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x3a
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3a
0xc: JUMPI 0x3a V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x39]
---
Predecessors: [0x0]
Successors: [0x3a, 0x92]
---
0xd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b PUSH1 0x0
0x2d CALLDATALOAD
0x2e DIV
0x2f PUSH4 0x5a87db75
0x34 DUP2
0x35 EQ
0x36 PUSH2 0x92
0x39 JUMPI
---
0xd: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2b: V7 = 0x0
0x2d: V8 = CALLDATALOAD 0x0
0x2e: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0x5a87db75
0x35: V11 = EQ V9 0x5a87db75
0x36: V12 = 0x92
0x39: JUMPI 0x92 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3a
[0x3a:0x42]
---
Predecessors: [0x0, 0xd]
Successors: [0x43, 0x47]
---
0x3a JUMPDEST
0x3b PUSH1 0x0
0x3d CALLVALUE
0x3e GT
0x3f PUSH2 0x47
0x42 JUMPI
---
0x3a: JUMPDEST 
0x3b: V13 = 0x0
0x3d: V14 = CALLVALUE
0x3e: V15 = GT V14 0x0
0x3f: V16 = 0x47
0x42: JUMPI 0x47 V15
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x43
[0x43:0x46]
---
Predecessors: [0x3a]
Successors: []
---
0x43 PUSH1 0x0
0x45 DUP1
0x46 REVERT
---
0x43: V17 = 0x0
0x46: REVERT 0x0 0x0
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x47
[0x47:0x85]
---
Predecessors: [0x3a]
Successors: [0x86, 0x8f]
---
0x47 JUMPDEST
0x48 PUSH1 0x0
0x4a DUP1
0x4b SLOAD
0x4c PUSH1 0x40
0x4e MLOAD
0x4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64 SWAP1
0x65 SWAP2
0x66 AND
0x67 SWAP2
0x68 ADDRESS
0x69 BALANCE
0x6a DUP1
0x6b ISZERO
0x6c PUSH2 0x8fc
0x6f MUL
0x70 SWAP3
0x71 SWAP1
0x72 SWAP2
0x73 DUP2
0x74 DUP2
0x75 DUP2
0x76 DUP6
0x77 DUP9
0x78 DUP9
0x79 CALL
0x7a SWAP4
0x7b POP
0x7c POP
0x7d POP
0x7e POP
0x7f ISZERO
0x80 DUP1
0x81 ISZERO
0x82 PUSH2 0x8f
0x85 JUMPI
---
0x47: JUMPDEST 
0x48: V18 = 0x0
0x4b: V19 = S[0x0]
0x4c: V20 = 0x40
0x4e: V21 = M[0x40]
0x4f: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x66: V23 = AND V19 0xffffffffffffffffffffffffffffffffffffffff
0x68: V24 = ADDRESS
0x69: V25 = BALANCE V24
0x6b: V26 = ISZERO V25
0x6c: V27 = 0x8fc
0x6f: V28 = MUL 0x8fc V26
0x79: V29 = CALL V28 V23 V25 V21 0x0 V21 0x0
0x7f: V30 = ISZERO V29
0x81: V31 = ISZERO V30
0x82: V32 = 0x8f
0x85: JUMPI 0x8f V31
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V9, V30]

================================

Block 0x86
[0x86:0x8e]
---
Predecessors: [0x47]
Successors: []
---
0x86 RETURNDATASIZE
0x87 PUSH1 0x0
0x89 DUP1
0x8a RETURNDATACOPY
0x8b RETURNDATASIZE
0x8c PUSH1 0x0
0x8e REVERT
---
0x86: V33 = RETURNDATASIZE
0x87: V34 = 0x0
0x8a: RETURNDATACOPY 0x0 0x0 V33
0x8b: V35 = RETURNDATASIZE
0x8c: V36 = 0x0
0x8e: REVERT 0x0 V35
---
Entry stack: [V9, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V30]

================================

Block 0x8f
[0x8f:0x91]
---
Predecessors: [0x47]
Successors: []
---
0x8f JUMPDEST
0x90 POP
0x91 STOP
---
0x8f: JUMPDEST 
0x91: STOP 
---
Entry stack: [V9, V30]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x92
[0x92:0x99]
---
Predecessors: [0xd]
Successors: [0x9a, 0x9e]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 DUP1
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x92: JUMPDEST 
0x93: V37 = CALLVALUE
0x95: V38 = ISZERO V37
0x96: V39 = 0x9e
0x99: JUMPI 0x9e V38
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V9, V37]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x92]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V40 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V9, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V37]

================================

Block 0x9e
[0x9e:0xb0]
---
Predecessors: [0x92]
Successors: [0xb1, 0xb5]
---
0x9e JUMPDEST
0x9f POP
0xa0 PUSH2 0xd2
0xa3 PUSH1 0x4
0xa5 DUP1
0xa6 CALLDATASIZE
0xa7 SUB
0xa8 PUSH1 0x20
0xaa DUP2
0xab LT
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0x9e: JUMPDEST 
0xa0: V41 = 0xd2
0xa3: V42 = 0x4
0xa6: V43 = CALLDATASIZE
0xa7: V44 = SUB V43 0x4
0xa8: V45 = 0x20
0xab: V46 = LT V44 0x20
0xac: V47 = ISZERO V46
0xad: V48 = 0xb5
0xb0: JUMPI 0xb5 V47
---
Entry stack: [V9, V37]
Stack pops: 1
Stack additions: [0xd2, 0x4, V44]
Exit stack: [V9, 0xd2, 0x4, V44]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0x9e]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V49 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V9, 0xd2, 0x4, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xd2, 0x4, V44]

================================

Block 0xb5
[0xb5:0xd1]
---
Predecessors: [0x9e]
Successors: [0xd4]
---
0xb5 JUMPDEST
0xb6 POP
0xb7 CALLDATALOAD
0xb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd AND
0xce PUSH2 0xd4
0xd1 JUMP
---
0xb5: JUMPDEST 
0xb7: V50 = CALLDATALOAD 0x4
0xb8: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xce: V53 = 0xd4
0xd1: JUMP 0xd4
---
Entry stack: [V9, 0xd2, 0x4, V44]
Stack pops: 2
Stack additions: [V52]
Exit stack: [V9, 0xd2, V52]

================================

Block 0xd2
[0xd2:0xd3]
---
Predecessors: [0xf8]
Successors: []
---
0xd2 JUMPDEST
0xd3 STOP
---
0xd2: JUMPDEST 
0xd3: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xd4
[0xd4:0xf3]
---
Predecessors: [0xb5]
Successors: [0xf4, 0xf8]
---
0xd4 JUMPDEST
0xd5 PUSH1 0x0
0xd7 SLOAD
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee CALLER
0xef EQ
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xd4: JUMPDEST 
0xd5: V54 = 0x0
0xd7: V55 = S[0x0]
0xd8: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xee: V58 = CALLER
0xef: V59 = EQ V58 V57
0xf0: V60 = 0xf8
0xf3: JUMPI 0xf8 V59
---
Entry stack: [V9, 0xd2, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xd2, V52]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xd4]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V61 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V9, 0xd2, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xd2, V52]

================================

Block 0xf8
[0xf8:0x133]
---
Predecessors: [0xd4]
Successors: [0xd2]
---
0xf8 JUMPDEST
0xf9 PUSH1 0x0
0xfb DUP1
0xfc SLOAD
0xfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112 NOT
0x113 AND
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 SWAP3
0x12a SWAP1
0x12b SWAP3
0x12c AND
0x12d SWAP2
0x12e SWAP1
0x12f SWAP2
0x130 OR
0x131 SWAP1
0x132 SSTORE
0x133 JUMP
---
0xf8: JUMPDEST 
0xf9: V62 = 0x0
0xfc: V63 = S[0x0]
0xfd: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x112: V65 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x113: V66 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V63
0x114: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x130: V69 = OR V68 V66
0x132: S[0x0] = V69
0x133: JUMP 0xd2
---
Entry stack: [V9, 0xd2, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x134
[0x134:0x15f]
---
Predecessors: []
Successors: []
---
0x134 INVALID
0x135 LOG1
0x136 PUSH6 0x627a7a723058
0x13d SHA3
0x13e CALL
0x13f MISSING 0xaa
0x140 MSTORE8
0x141 DUP2
0x142 MISSING 0x49
0x143 RETURNDATASIZE
0x144 BLOCKHASH
0x145 CALLCODE
0x146 GASLIMIT
0x147 SWAP14
0x148 DUP5
0x149 PUSH14 0x778489351b0756ee7f92440d8f12
0x158 MISSING 0xdd
0x159 RETURNDATACOPY
0x15a MISSING 0xa7
0x15b MISSING 0xbe
0x15c MISSING 0xb7
0x15d MISSING 0xdb
0x15e STOP
0x15f MISSING 0x29
---
0x134: INVALID 
0x135: LOG S0 S1 S2
0x136: V70 = 0x627a7a723058
0x13d: V71 = SHA3 0x627a7a723058 S3
0x13e: V72 = CALL V71 S4 S5 S6 S7 S8 S9
0x13f: MISSING 0xaa
0x140: M8[S0] = S1
0x142: MISSING 0x49
0x143: V73 = RETURNDATASIZE
0x144: V74 = BLOCKHASH V73
0x145: V75 = CALLCODE V74 S0 S1 S2 S3 S4 S5
0x146: V76 = GASLIMIT
0x149: V77 = 0x778489351b0756ee7f92440d8f12
0x158: MISSING 0xdd
0x159: RETURNDATACOPY S0 S1 S2
0x15a: MISSING 0xa7
0x15b: MISSING 0xbe
0x15c: MISSING 0xb7
0x15d: MISSING 0xdb
0x15e: STOP 
0x15f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V72, S3, S2, S3, 0x778489351b0756ee7f92440d8f12, S8, S18, V75, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V76]
Exit stack: []

================================

Function 0:
Public function signature: 0x5a87db75
Entry block: 0x92
Exit block: 0xd2
Body: 0x92, 0x9a, 0x9e, 0xb1, 0xb5, 0xd2, 0xd4, 0xf4, 0xf8

Function 1:
Public fallback function
Entry block: 0x3a
Exit block: 0x86
Body: 0x3a, 0x43, 0x47, 0x86, 0x8f

