Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x3d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x3d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3d
0xc: JUMPI 0x3d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xf5]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x8da5cb5b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xf5
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x8da5cb5b
0x22: V15 = EQ V13 0x8da5cb5b
0x23: V16 = 0xf5
0x26: JUMPI 0xf5 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x132]
---
0x27 DUP1
0x28 PUSH4 0xc4ecb7db
0x2d EQ
0x2e PUSH2 0x132
0x31 JUMPI
---
0x28: V17 = 0xc4ecb7db
0x2d: V18 = EQ 0xc4ecb7db V13
0x2e: V19 = 0x132
0x31: JUMPI 0x132 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x15d]
---
0x32 DUP1
0x33 PUSH4 0xf19c020d
0x38 EQ
0x39 PUSH2 0x15d
0x3c JUMPI
---
0x33: V20 = 0xf19c020d
0x38: V21 = EQ 0xf19c020d V13
0x39: V22 = 0x15d
0x3c: JUMPI 0x15d V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0xe8]
---
Predecessors: [0x0, 0x32]
Successors: [0xe9, 0xf2]
---
0x3d JUMPDEST
0x3e PUSH1 0x1
0x40 DUP1
0x41 SLOAD
0x42 DUP2
0x43 ADD
0x44 DUP1
0x45 DUP3
0x46 SSTORE
0x47 PUSH1 0x0
0x49 DUP3
0x4a DUP2
0x4b MSTORE
0x4c PUSH1 0x20
0x4e SWAP1
0x4f DUP2
0x50 SWAP1
0x51 SHA3
0x52 CALLVALUE
0x53 SWAP4
0x54 SWAP1
0x55 SWAP3
0x56 SUB
0x57 SWAP1
0x58 SWAP2
0x59 ADD
0x5a SWAP2
0x5b SWAP1
0x5c SWAP2
0x5d SSTORE
0x5e PUSH1 0x40
0x60 DUP1
0x61 MLOAD
0x62 ADDRESS
0x63 PUSH1 0x1
0x65 PUSH1 0xa0
0x67 PUSH1 0x2
0x69 EXP
0x6a SUB
0x6b AND
0x6c BALANCE
0x6d DUP2
0x6e MSTORE
0x6f SWAP1
0x70 MLOAD
0x71 PUSH32 0x9ad80f184c77f1f621c85a0c3e75cec47732d9cd4a8240915d9b718fc6b541d3
0x92 SWAP3
0x93 SWAP2
0x94 SWAP1
0x95 SWAP2
0x96 ADD
0x97 DUP2
0x98 SWAP1
0x99 SUB
0x9a SWAP1
0x9b LOG1
0x9c PUSH1 0x0
0x9e DUP1
0x9f SWAP1
0xa0 SLOAD
0xa1 SWAP1
0xa2 PUSH2 0x100
0xa5 EXP
0xa6 SWAP1
0xa7 DIV
0xa8 PUSH1 0x1
0xaa PUSH1 0xa0
0xac PUSH1 0x2
0xae EXP
0xaf SUB
0xb0 AND
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 AND
0xba PUSH2 0x8fc
0xbd ADDRESS
0xbe PUSH1 0x1
0xc0 PUSH1 0xa0
0xc2 PUSH1 0x2
0xc4 EXP
0xc5 SUB
0xc6 AND
0xc7 BALANCE
0xc8 SWAP1
0xc9 DUP2
0xca ISZERO
0xcb MUL
0xcc SWAP1
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 PUSH1 0x0
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 DUP1
0xd6 DUP4
0xd7 SUB
0xd8 DUP2
0xd9 DUP6
0xda DUP9
0xdb DUP9
0xdc CALL
0xdd SWAP4
0xde POP
0xdf POP
0xe0 POP
0xe1 POP
0xe2 ISZERO
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0xf2
0xe8 JUMPI
---
0x3d: JUMPDEST 
0x3e: V23 = 0x1
0x41: V24 = S[0x1]
0x43: V25 = ADD 0x1 V24
0x46: S[0x1] = V25
0x47: V26 = 0x0
0x4b: M[0x0] = 0x1
0x4c: V27 = 0x20
0x51: V28 = SHA3 0x0 0x20
0x52: V29 = CALLVALUE
0x56: V30 = SUB V25 0x1
0x59: V31 = ADD V28 V30
0x5d: S[V31] = V29
0x5e: V32 = 0x40
0x61: V33 = M[0x40]
0x62: V34 = ADDRESS
0x63: V35 = 0x1
0x65: V36 = 0xa0
0x67: V37 = 0x2
0x69: V38 = EXP 0x2 0xa0
0x6a: V39 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x6c: V41 = BALANCE V40
0x6e: M[V33] = V41
0x70: V42 = M[0x40]
0x71: V43 = 0x9ad80f184c77f1f621c85a0c3e75cec47732d9cd4a8240915d9b718fc6b541d3
0x96: V44 = ADD 0x20 V33
0x99: V45 = SUB V44 V42
0x9b: LOG V42 V45 0x9ad80f184c77f1f621c85a0c3e75cec47732d9cd4a8240915d9b718fc6b541d3
0x9c: V46 = 0x0
0xa0: V47 = S[0x0]
0xa2: V48 = 0x100
0xa5: V49 = EXP 0x100 0x0
0xa7: V50 = DIV V47 0x1
0xa8: V51 = 0x1
0xaa: V52 = 0xa0
0xac: V53 = 0x2
0xae: V54 = EXP 0x2 0xa0
0xaf: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xb1: V57 = 0x1
0xb3: V58 = 0xa0
0xb5: V59 = 0x2
0xb7: V60 = EXP 0x2 0xa0
0xb8: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xba: V63 = 0x8fc
0xbd: V64 = ADDRESS
0xbe: V65 = 0x1
0xc0: V66 = 0xa0
0xc2: V67 = 0x2
0xc4: V68 = EXP 0x2 0xa0
0xc5: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xc7: V71 = BALANCE V70
0xca: V72 = ISZERO V71
0xcb: V73 = MUL V72 0x8fc
0xcd: V74 = 0x40
0xcf: V75 = M[0x40]
0xd0: V76 = 0x0
0xd2: V77 = 0x40
0xd4: V78 = M[0x40]
0xd7: V79 = SUB V75 V78
0xdc: V80 = CALL V73 V62 V71 V78 V79 V78 0x0
0xe2: V81 = ISZERO V80
0xe4: V82 = ISZERO V81
0xe5: V83 = 0xf2
0xe8: JUMPI 0xf2 V82
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V13, V81]

================================

Block 0xe9
[0xe9:0xf1]
---
Predecessors: [0x3d]
Successors: []
---
0xe9 RETURNDATASIZE
0xea PUSH1 0x0
0xec DUP1
0xed RETURNDATACOPY
0xee RETURNDATASIZE
0xef PUSH1 0x0
0xf1 REVERT
---
0xe9: V84 = RETURNDATASIZE
0xea: V85 = 0x0
0xed: RETURNDATACOPY 0x0 0x0 V84
0xee: V86 = RETURNDATASIZE
0xef: V87 = 0x0
0xf1: REVERT 0x0 V86
---
Entry stack: [V13, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V81]

================================

Block 0xf2
[0xf2:0xf4]
---
Predecessors: [0x3d]
Successors: []
---
0xf2 JUMPDEST
0xf3 POP
0xf4 STOP
---
0xf2: JUMPDEST 
0xf4: STOP 
---
Entry stack: [V13, V81]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0xd]
Successors: [0xfd, 0x101]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf5: JUMPDEST 
0xf6: V88 = CALLVALUE
0xf8: V89 = ISZERO V88
0xf9: V90 = 0x101
0xfc: JUMPI 0x101 V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V13, V88]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf5]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V91 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V13, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88]

================================

Block 0x101
[0x101:0x109]
---
Predecessors: [0xf5]
Successors: [0x180]
---
0x101 JUMPDEST
0x102 POP
0x103 PUSH2 0x10a
0x106 PUSH2 0x180
0x109 JUMP
---
0x101: JUMPDEST 
0x103: V92 = 0x10a
0x106: V93 = 0x180
0x109: JUMP 0x180
---
Entry stack: [V13, V88]
Stack pops: 1
Stack additions: [0x10a]
Exit stack: [V13, 0x10a]

================================

Block 0x10a
[0x10a:0x131]
---
Predecessors: [0x180]
Successors: []
---
0x10a JUMPDEST
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f DUP3
0x110 PUSH1 0x1
0x112 PUSH1 0xa0
0x114 PUSH1 0x2
0x116 EXP
0x117 SUB
0x118 AND
0x119 PUSH1 0x1
0x11b PUSH1 0xa0
0x11d PUSH1 0x2
0x11f EXP
0x120 SUB
0x121 AND
0x122 DUP2
0x123 MSTORE
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP2
0x128 POP
0x129 POP
0x12a PUSH1 0x40
0x12c MLOAD
0x12d DUP1
0x12e SWAP2
0x12f SUB
0x130 SWAP1
0x131 RETURN
---
0x10a: JUMPDEST 
0x10b: V94 = 0x40
0x10d: V95 = M[0x40]
0x110: V96 = 0x1
0x112: V97 = 0xa0
0x114: V98 = 0x2
0x116: V99 = EXP 0x2 0xa0
0x117: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x118: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x119: V102 = 0x1
0x11b: V103 = 0xa0
0x11d: V104 = 0x2
0x11f: V105 = EXP 0x2 0xa0
0x120: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x121: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x123: M[V95] = V107
0x124: V108 = 0x20
0x126: V109 = ADD 0x20 V95
0x12a: V110 = 0x40
0x12c: V111 = M[0x40]
0x12f: V112 = SUB V109 V111
0x131: RETURN V111 V112
---
Entry stack: [V13, 0x10a, V151]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x10a]

================================

Block 0x132
[0x132:0x139]
---
Predecessors: [0x27]
Successors: [0x13a, 0x13e]
---
0x132 JUMPDEST
0x133 CALLVALUE
0x134 DUP1
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0x132: JUMPDEST 
0x133: V113 = CALLVALUE
0x135: V114 = ISZERO V113
0x136: V115 = 0x13e
0x139: JUMPI 0x13e V114
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V13, V113]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0x132]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V116 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V13, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V113]

================================

Block 0x13e
[0x13e:0x149]
---
Predecessors: [0x132]
Successors: [0x198]
---
0x13e JUMPDEST
0x13f POP
0x140 PUSH2 0x14a
0x143 PUSH1 0x4
0x145 CALLDATALOAD
0x146 PUSH2 0x198
0x149 JUMP
---
0x13e: JUMPDEST 
0x140: V117 = 0x14a
0x143: V118 = 0x4
0x145: V119 = CALLDATALOAD 0x4
0x146: V120 = 0x198
0x149: JUMP 0x198
---
Entry stack: [V13, V113]
Stack pops: 1
Stack additions: [0x14a, V119]
Exit stack: [V13, 0x14a, V119]

================================

Block 0x14a
[0x14a:0x15c]
---
Predecessors: [0x1a7]
Successors: []
---
0x14a JUMPDEST
0x14b PUSH1 0x40
0x14d DUP1
0x14e MLOAD
0x14f SWAP2
0x150 DUP3
0x151 MSTORE
0x152 MLOAD
0x153 PUSH1 0x20
0x155 SWAP1
0x156 SWAP2
0x157 ADD
0x158 DUP2
0x159 SWAP1
0x15a SUB
0x15b SWAP1
0x15c RETURN
---
0x14a: JUMPDEST 
0x14b: V121 = 0x40
0x14e: V122 = M[0x40]
0x151: M[V122] = V162
0x152: V123 = M[0x40]
0x153: V124 = 0x20
0x157: V125 = ADD V122 0x20
0x15a: V126 = SUB V125 V123
0x15c: RETURN V123 V126
---
Entry stack: [V13, 0x14a, V162]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x14a]

================================

Block 0x15d
[0x15d:0x164]
---
Predecessors: [0x32]
Successors: [0x165, 0x169]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f DUP1
0x160 ISZERO
0x161 PUSH2 0x169
0x164 JUMPI
---
0x15d: JUMPDEST 
0x15e: V127 = CALLVALUE
0x160: V128 = ISZERO V127
0x161: V129 = 0x169
0x164: JUMPI 0x169 V128
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V13, V127]

================================

Block 0x165
[0x165:0x168]
---
Predecessors: [0x15d]
Successors: []
---
0x165 PUSH1 0x0
0x167 DUP1
0x168 REVERT
---
0x165: V130 = 0x0
0x168: REVERT 0x0 0x0
---
Entry stack: [V13, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V127]

================================

Block 0x169
[0x169:0x17d]
---
Predecessors: [0x15d]
Successors: [0x1b8]
---
0x169 JUMPDEST
0x16a POP
0x16b PUSH2 0x17e
0x16e PUSH1 0x1
0x170 PUSH1 0xa0
0x172 PUSH1 0x2
0x174 EXP
0x175 SUB
0x176 PUSH1 0x4
0x178 CALLDATALOAD
0x179 AND
0x17a PUSH2 0x1b8
0x17d JUMP
---
0x169: JUMPDEST 
0x16b: V131 = 0x17e
0x16e: V132 = 0x1
0x170: V133 = 0xa0
0x172: V134 = 0x2
0x174: V135 = EXP 0x2 0xa0
0x175: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V137 = 0x4
0x178: V138 = CALLDATALOAD 0x4
0x179: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V140 = 0x1b8
0x17d: JUMP 0x1b8
---
Entry stack: [V13, V127]
Stack pops: 1
Stack additions: [0x17e, V139]
Exit stack: [V13, 0x17e, V139]

================================

Block 0x17e
[0x17e:0x17f]
---
Predecessors: [0x348]
Successors: []
---
0x17e JUMPDEST
0x17f STOP
---
0x17e: JUMPDEST 
0x17f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x180
[0x180:0x197]
---
Predecessors: [0x101]
Successors: [0x10a]
---
0x180 JUMPDEST
0x181 PUSH1 0x0
0x183 DUP1
0x184 SWAP1
0x185 SLOAD
0x186 SWAP1
0x187 PUSH2 0x100
0x18a EXP
0x18b SWAP1
0x18c DIV
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 AND
0x196 DUP2
0x197 JUMP
---
0x180: JUMPDEST 
0x181: V141 = 0x0
0x185: V142 = S[0x0]
0x187: V143 = 0x100
0x18a: V144 = EXP 0x100 0x0
0x18c: V145 = DIV V142 0x1
0x18d: V146 = 0x1
0x18f: V147 = 0xa0
0x191: V148 = 0x2
0x193: V149 = EXP 0x2 0xa0
0x194: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x197: JUMP 0x10a
---
Entry stack: [V13, 0x10a]
Stack pops: 1
Stack additions: [S0, V151]
Exit stack: [V13, 0x10a, V151]

================================

Block 0x198
[0x198:0x1a5]
---
Predecessors: [0x13e]
Successors: [0x1a6, 0x1a7]
---
0x198 JUMPDEST
0x199 PUSH1 0x1
0x19b DUP2
0x19c DUP2
0x19d SLOAD
0x19e DUP2
0x19f LT
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 PUSH2 0x1a7
0x1a5 JUMPI
---
0x198: JUMPDEST 
0x199: V152 = 0x1
0x19d: V153 = S[0x1]
0x19f: V154 = LT V119 V153
0x1a0: V155 = ISZERO V154
0x1a1: V156 = ISZERO V155
0x1a2: V157 = 0x1a7
0x1a5: JUMPI 0x1a7 V156
---
Entry stack: [V13, 0x14a, V119]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V13, 0x14a, V119, 0x1, V119]

================================

Block 0x1a6
[0x1a6:0x1a6]
---
Predecessors: [0x198]
Successors: []
---
0x1a6 INVALID
---
0x1a6: INVALID 
---
Entry stack: [V13, 0x14a, V119, 0x1, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14a, V119, 0x1, V119]

================================

Block 0x1a7
[0x1a7:0x1b7]
---
Predecessors: [0x198]
Successors: [0x14a]
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x0
0x1aa SWAP2
0x1ab DUP3
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af SWAP1
0x1b0 SWAP2
0x1b1 SHA3
0x1b2 ADD
0x1b3 SLOAD
0x1b4 SWAP1
0x1b5 POP
0x1b6 DUP2
0x1b7 JUMP
---
0x1a7: JUMPDEST 
0x1a8: V158 = 0x0
0x1ac: M[0x0] = 0x1
0x1ad: V159 = 0x20
0x1b1: V160 = SHA3 0x0 0x20
0x1b2: V161 = ADD V160 V119
0x1b3: V162 = S[V161]
0x1b7: JUMP 0x14a
---
Entry stack: [V13, 0x14a, V119, 0x1, V119]
Stack pops: 4
Stack additions: [S3, V162]
Exit stack: [V13, 0x14a, V162]

================================

Block 0x1b8
[0x1b8:0x1e9]
---
Predecessors: [0x169]
Successors: [0x1ea, 0x1ee]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc PUSH1 0x0
0x1be SWAP1
0x1bf SLOAD
0x1c0 SWAP1
0x1c1 PUSH2 0x100
0x1c4 EXP
0x1c5 SWAP1
0x1c6 DIV
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf AND
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 AND
0x1d9 CALLER
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 AND
0x1e3 EQ
0x1e4 ISZERO
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V163 = 0x0
0x1bc: V164 = 0x0
0x1bf: V165 = S[0x0]
0x1c1: V166 = 0x100
0x1c4: V167 = EXP 0x100 0x0
0x1c6: V168 = DIV V165 0x1
0x1c7: V169 = 0x1
0x1c9: V170 = 0xa0
0x1cb: V171 = 0x2
0x1cd: V172 = EXP 0x2 0xa0
0x1ce: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x1d0: V175 = 0x1
0x1d2: V176 = 0xa0
0x1d4: V177 = 0x2
0x1d6: V178 = EXP 0x2 0xa0
0x1d7: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x1d9: V181 = CALLER
0x1da: V182 = 0x1
0x1dc: V183 = 0xa0
0x1de: V184 = 0x2
0x1e0: V185 = EXP 0x2 0xa0
0x1e1: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x1e3: V188 = EQ V187 V180
0x1e4: V189 = ISZERO V188
0x1e5: V190 = ISZERO V189
0x1e6: V191 = 0x1ee
0x1e9: JUMPI 0x1ee V190
---
Entry stack: [V13, 0x17e, V139]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x17e, V139, 0x0]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1b8]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V192 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V13, 0x17e, V139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17e, V139, 0x0]

================================

Block 0x1ee
[0x1ee:0x244]
---
Predecessors: [0x1b8]
Successors: [0x245, 0x249]
---
0x1ee JUMPDEST
0x1ef DUP2
0x1f0 PUSH1 0x1
0x1f2 PUSH1 0xa0
0x1f4 PUSH1 0x2
0x1f6 EXP
0x1f7 SUB
0x1f8 AND
0x1f9 PUSH4 0x70a08231
0x1fe ADDRESS
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 DUP3
0x203 PUSH4 0xffffffff
0x208 AND
0x209 PUSH1 0xe0
0x20b PUSH1 0x2
0x20d EXP
0x20e MUL
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x4
0x213 ADD
0x214 DUP1
0x215 DUP3
0x216 PUSH1 0x1
0x218 PUSH1 0xa0
0x21a PUSH1 0x2
0x21c EXP
0x21d SUB
0x21e AND
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 AND
0x228 DUP2
0x229 MSTORE
0x22a PUSH1 0x20
0x22c ADD
0x22d SWAP2
0x22e POP
0x22f POP
0x230 PUSH1 0x20
0x232 PUSH1 0x40
0x234 MLOAD
0x235 DUP1
0x236 DUP4
0x237 SUB
0x238 DUP2
0x239 PUSH1 0x0
0x23b DUP8
0x23c DUP1
0x23d EXTCODESIZE
0x23e ISZERO
0x23f DUP1
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x1ee: JUMPDEST 
0x1f0: V193 = 0x1
0x1f2: V194 = 0xa0
0x1f4: V195 = 0x2
0x1f6: V196 = EXP 0x2 0xa0
0x1f7: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f8: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1f9: V199 = 0x70a08231
0x1fe: V200 = ADDRESS
0x1ff: V201 = 0x40
0x201: V202 = M[0x40]
0x203: V203 = 0xffffffff
0x208: V204 = AND 0xffffffff 0x70a08231
0x209: V205 = 0xe0
0x20b: V206 = 0x2
0x20d: V207 = EXP 0x2 0xe0
0x20e: V208 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x210: M[V202] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x211: V209 = 0x4
0x213: V210 = ADD 0x4 V202
0x216: V211 = 0x1
0x218: V212 = 0xa0
0x21a: V213 = 0x2
0x21c: V214 = EXP 0x2 0xa0
0x21d: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21e: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x21f: V217 = 0x1
0x221: V218 = 0xa0
0x223: V219 = 0x2
0x225: V220 = EXP 0x2 0xa0
0x226: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x229: M[V210] = V222
0x22a: V223 = 0x20
0x22c: V224 = ADD 0x20 V210
0x230: V225 = 0x20
0x232: V226 = 0x40
0x234: V227 = M[0x40]
0x237: V228 = SUB V224 V227
0x239: V229 = 0x0
0x23d: V230 = EXTCODESIZE V198
0x23e: V231 = ISZERO V230
0x240: V232 = ISZERO V231
0x241: V233 = 0x249
0x244: JUMPI 0x249 V232
---
Entry stack: [V13, 0x17e, V139, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V198, 0x70a08231, V224, 0x20, V227, V228, V227, 0x0, V198, V231]
Exit stack: [V13, 0x17e, V139, 0x0, V198, 0x70a08231, V224, 0x20, V227, V228, V227, 0x0, V198, V231]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x1ee]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V234 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V13, 0x17e, V139, 0x0, V198, 0x70a08231, V224, 0x20, V227, V228, V227, 0x0, V198, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17e, V139, 0x0, V198, 0x70a08231, V224, 0x20, V227, V228, V227, 0x0, V198, V231]

================================

Block 0x249
[0x249:0x253]
---
Predecessors: [0x1ee]
Successors: [0x254, 0x25d]
---
0x249 JUMPDEST
0x24a POP
0x24b GAS
0x24c CALL
0x24d ISZERO
0x24e DUP1
0x24f ISZERO
0x250 PUSH2 0x25d
0x253 JUMPI
---
0x249: JUMPDEST 
0x24b: V235 = GAS
0x24c: V236 = CALL V235 V198 0x0 V227 V228 V227 0x20
0x24d: V237 = ISZERO V236
0x24f: V238 = ISZERO V237
0x250: V239 = 0x25d
0x253: JUMPI 0x25d V238
---
Entry stack: [V13, 0x17e, V139, 0x0, V198, 0x70a08231, V224, 0x20, V227, V228, V227, 0x0, V198, V231]
Stack pops: 7
Stack additions: [V237]
Exit stack: [V13, 0x17e, V139, 0x0, V198, 0x70a08231, V224, V237]

================================

Block 0x254
[0x254:0x25c]
---
Predecessors: [0x249]
Successors: []
---
0x254 RETURNDATASIZE
0x255 PUSH1 0x0
0x257 DUP1
0x258 RETURNDATACOPY
0x259 RETURNDATASIZE
0x25a PUSH1 0x0
0x25c REVERT
---
0x254: V240 = RETURNDATASIZE
0x255: V241 = 0x0
0x258: RETURNDATACOPY 0x0 0x0 V240
0x259: V242 = RETURNDATASIZE
0x25a: V243 = 0x0
0x25c: REVERT 0x0 V242
---
Entry stack: [V13, 0x17e, V139, 0x0, V198, 0x70a08231, V224, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17e, V139, 0x0, V198, 0x70a08231, V224, V237]

================================

Block 0x25d
[0x25d:0x26e]
---
Predecessors: [0x249]
Successors: [0x26f, 0x273]
---
0x25d JUMPDEST
0x25e POP
0x25f POP
0x260 POP
0x261 POP
0x262 PUSH1 0x40
0x264 MLOAD
0x265 RETURNDATASIZE
0x266 PUSH1 0x20
0x268 DUP2
0x269 LT
0x26a ISZERO
0x26b PUSH2 0x273
0x26e JUMPI
---
0x25d: JUMPDEST 
0x262: V244 = 0x40
0x264: V245 = M[0x40]
0x265: V246 = RETURNDATASIZE
0x266: V247 = 0x20
0x269: V248 = LT V246 0x20
0x26a: V249 = ISZERO V248
0x26b: V250 = 0x273
0x26e: JUMPI 0x273 V249
---
Entry stack: [V13, 0x17e, V139, 0x0, V198, 0x70a08231, V224, V237]
Stack pops: 4
Stack additions: [V245, V246]
Exit stack: [V13, 0x17e, V139, 0x0, V245, V246]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x25d]
Successors: []
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
---
0x26f: V251 = 0x0
0x272: REVERT 0x0 0x0
---
Entry stack: [V13, 0x17e, V139, 0x0, V245, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17e, V139, 0x0, V245, V246]

================================

Block 0x273
[0x273:0x32f]
---
Predecessors: [0x25d]
Successors: [0x330, 0x334]
---
0x273 JUMPDEST
0x274 POP
0x275 MLOAD
0x276 PUSH1 0x40
0x278 DUP1
0x279 MLOAD
0x27a PUSH1 0x1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 SUB
0x282 DUP1
0x283 DUP7
0x284 AND
0x285 AND
0x286 DUP2
0x287 MSTORE
0x288 PUSH1 0x20
0x28a SWAP1
0x28b DUP2
0x28c ADD
0x28d DUP4
0x28e DUP2
0x28f MSTORE
0x290 SWAP2
0x291 MLOAD
0x292 SWAP3
0x293 SWAP4
0x294 POP
0x295 PUSH32 0xe4a1d8684cc204d783dc7fc5752122c91b456a98bf4a88b6281b4811237b64b6
0x2b6 SWAP3
0x2b7 SWAP2
0x2b8 ADD
0x2b9 DUP2
0x2ba SWAP1
0x2bb SUB
0x2bc SWAP1
0x2bd LOG1
0x2be DUP2
0x2bf PUSH1 0x1
0x2c1 PUSH1 0xa0
0x2c3 PUSH1 0x2
0x2c5 EXP
0x2c6 SUB
0x2c7 AND
0x2c8 PUSH4 0xa9059cbb
0x2cd PUSH1 0x0
0x2cf DUP1
0x2d0 SWAP1
0x2d1 SLOAD
0x2d2 SWAP1
0x2d3 PUSH2 0x100
0x2d6 EXP
0x2d7 SWAP1
0x2d8 DIV
0x2d9 PUSH1 0x1
0x2db PUSH1 0xa0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SUB
0x2e1 AND
0x2e2 DUP4
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 DUP4
0x2e7 PUSH4 0xffffffff
0x2ec AND
0x2ed PUSH1 0xe0
0x2ef PUSH1 0x2
0x2f1 EXP
0x2f2 MUL
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x4
0x2f7 ADD
0x2f8 DUP1
0x2f9 DUP4
0x2fa PUSH1 0x1
0x2fc PUSH1 0xa0
0x2fe PUSH1 0x2
0x300 EXP
0x301 SUB
0x302 AND
0x303 PUSH1 0x1
0x305 PUSH1 0xa0
0x307 PUSH1 0x2
0x309 EXP
0x30a SUB
0x30b AND
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 DUP3
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x20
0x316 ADD
0x317 SWAP3
0x318 POP
0x319 POP
0x31a POP
0x31b PUSH1 0x0
0x31d PUSH1 0x40
0x31f MLOAD
0x320 DUP1
0x321 DUP4
0x322 SUB
0x323 DUP2
0x324 PUSH1 0x0
0x326 DUP8
0x327 DUP1
0x328 EXTCODESIZE
0x329 ISZERO
0x32a DUP1
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x273: JUMPDEST 
0x275: V252 = M[V245]
0x276: V253 = 0x40
0x279: V254 = M[0x40]
0x27a: V255 = 0x1
0x27c: V256 = 0xa0
0x27e: V257 = 0x2
0x280: V258 = EXP 0x2 0xa0
0x281: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V260 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x285: V261 = AND V260 0xffffffffffffffffffffffffffffffffffffffff
0x287: M[V254] = V261
0x288: V262 = 0x20
0x28c: V263 = ADD 0x20 V254
0x28f: M[V263] = V252
0x291: V264 = M[0x40]
0x295: V265 = 0xe4a1d8684cc204d783dc7fc5752122c91b456a98bf4a88b6281b4811237b64b6
0x2b8: V266 = ADD V263 0x20
0x2bb: V267 = SUB V266 V264
0x2bd: LOG V264 V267 0xe4a1d8684cc204d783dc7fc5752122c91b456a98bf4a88b6281b4811237b64b6
0x2bf: V268 = 0x1
0x2c1: V269 = 0xa0
0x2c3: V270 = 0x2
0x2c5: V271 = EXP 0x2 0xa0
0x2c6: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c7: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x2c8: V274 = 0xa9059cbb
0x2cd: V275 = 0x0
0x2d1: V276 = S[0x0]
0x2d3: V277 = 0x100
0x2d6: V278 = EXP 0x100 0x0
0x2d8: V279 = DIV V276 0x1
0x2d9: V280 = 0x1
0x2db: V281 = 0xa0
0x2dd: V282 = 0x2
0x2df: V283 = EXP 0x2 0xa0
0x2e0: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2e3: V286 = 0x40
0x2e5: V287 = M[0x40]
0x2e7: V288 = 0xffffffff
0x2ec: V289 = AND 0xffffffff 0xa9059cbb
0x2ed: V290 = 0xe0
0x2ef: V291 = 0x2
0x2f1: V292 = EXP 0x2 0xe0
0x2f2: V293 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2f4: M[V287] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2f5: V294 = 0x4
0x2f7: V295 = ADD 0x4 V287
0x2fa: V296 = 0x1
0x2fc: V297 = 0xa0
0x2fe: V298 = 0x2
0x300: V299 = EXP 0x2 0xa0
0x301: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x302: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x303: V302 = 0x1
0x305: V303 = 0xa0
0x307: V304 = 0x2
0x309: V305 = EXP 0x2 0xa0
0x30a: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30b: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x30d: M[V295] = V307
0x30e: V308 = 0x20
0x310: V309 = ADD 0x20 V295
0x313: M[V309] = V252
0x314: V310 = 0x20
0x316: V311 = ADD 0x20 V309
0x31b: V312 = 0x0
0x31d: V313 = 0x40
0x31f: V314 = M[0x40]
0x322: V315 = SUB V311 V314
0x324: V316 = 0x0
0x328: V317 = EXTCODESIZE V273
0x329: V318 = ISZERO V317
0x32b: V319 = ISZERO V318
0x32c: V320 = 0x334
0x32f: JUMPI 0x334 V319
---
Entry stack: [V13, 0x17e, V139, 0x0, V245, V246]
Stack pops: 4
Stack additions: [S3, V252, V273, 0xa9059cbb, V311, 0x0, V314, V315, V314, 0x0, V273, V318]
Exit stack: [V13, 0x17e, V139, V252, V273, 0xa9059cbb, V311, 0x0, V314, V315, V314, 0x0, V273, V318]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x273]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V321 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V13, 0x17e, V139, V252, V273, 0xa9059cbb, V311, 0x0, V314, V315, V314, 0x0, V273, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17e, V139, V252, V273, 0xa9059cbb, V311, 0x0, V314, V315, V314, 0x0, V273, V318]

================================

Block 0x334
[0x334:0x33e]
---
Predecessors: [0x273]
Successors: [0x33f, 0x348]
---
0x334 JUMPDEST
0x335 POP
0x336 GAS
0x337 CALL
0x338 ISZERO
0x339 DUP1
0x33a ISZERO
0x33b PUSH2 0x348
0x33e JUMPI
---
0x334: JUMPDEST 
0x336: V322 = GAS
0x337: V323 = CALL V322 V273 0x0 V314 V315 V314 0x0
0x338: V324 = ISZERO V323
0x33a: V325 = ISZERO V324
0x33b: V326 = 0x348
0x33e: JUMPI 0x348 V325
---
Entry stack: [V13, 0x17e, V139, V252, V273, 0xa9059cbb, V311, 0x0, V314, V315, V314, 0x0, V273, V318]
Stack pops: 7
Stack additions: [V324]
Exit stack: [V13, 0x17e, V139, V252, V273, 0xa9059cbb, V311, V324]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x334]
Successors: []
---
0x33f RETURNDATASIZE
0x340 PUSH1 0x0
0x342 DUP1
0x343 RETURNDATACOPY
0x344 RETURNDATASIZE
0x345 PUSH1 0x0
0x347 REVERT
---
0x33f: V327 = RETURNDATASIZE
0x340: V328 = 0x0
0x343: RETURNDATACOPY 0x0 0x0 V327
0x344: V329 = RETURNDATASIZE
0x345: V330 = 0x0
0x347: REVERT 0x0 V329
---
Entry stack: [V13, 0x17e, V139, V252, V273, 0xa9059cbb, V311, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17e, V139, V252, V273, 0xa9059cbb, V311, V324]

================================

Block 0x348
[0x348:0x34f]
---
Predecessors: [0x334]
Successors: [0x17e]
---
0x348 JUMPDEST
0x349 POP
0x34a POP
0x34b POP
0x34c POP
0x34d POP
0x34e POP
0x34f JUMP
---
0x348: JUMPDEST 
0x34f: JUMP 0x17e
---
Entry stack: [V13, 0x17e, V139, V252, V273, 0xa9059cbb, V311, V324]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x350
[0x350:0x37b]
---
Predecessors: []
Successors: []
---
0x350 STOP
0x351 LOG1
0x352 PUSH6 0x627a7a723058
0x359 SHA3
0x35a ADD
0x35b MISSING 0x4a
0x35c MISSING 0x2e
0x35d DUP11
0x35e PUSH19 0xa68a99456284dab026b9d9bd2ad826484dbd06
0x372 MISSING 0xa7
0x373 MISSING 0xc6
0x374 MISSING 0xaf
0x375 CALLVALUE
0x376 BALANCE
0x377 MISSING 0x2e
0x378 MISSING 0xdb
0x379 MISSING 0xe4
0x37a STOP
0x37b MISSING 0x29
---
0x350: STOP 
0x351: LOG S0 S1 S2
0x352: V331 = 0x627a7a723058
0x359: V332 = SHA3 0x627a7a723058 S3
0x35a: V333 = ADD V332 S4
0x35b: MISSING 0x4a
0x35c: MISSING 0x2e
0x35e: V334 = 0xa68a99456284dab026b9d9bd2ad826484dbd06
0x372: MISSING 0xa7
0x373: MISSING 0xc6
0x374: MISSING 0xaf
0x375: V335 = CALLVALUE
0x376: V336 = BALANCE V335
0x377: MISSING 0x2e
0x378: MISSING 0xdb
0x379: MISSING 0xe4
0x37a: STOP 
0x37b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V333, 0xa68a99456284dab026b9d9bd2ad826484dbd06, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V336]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0xf5
Exit block: 0x10a
Body: 0xf5, 0xfd, 0x101, 0x10a, 0x180

Function 1:
Public function signature: 0xc4ecb7db
Entry block: 0x132
Exit block: 0x14a
Body: 0x132, 0x13a, 0x13e, 0x14a, 0x198, 0x1a6, 0x1a7

Function 2:
Public function signature: 0xf19c020d
Entry block: 0x15d
Exit block: 0x17e
Body: 0x15d, 0x165, 0x169, 0x17e, 0x1b8, 0x1ea, 0x1ee, 0x245, 0x249, 0x254, 0x25d, 0x26f, 0x273, 0x330, 0x334, 0x33f, 0x348

Function 3:
Public fallback function
Entry block: 0x3d
Exit block: 0xe9
Body: 0x3d, 0xe9, 0xf2

