Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xf9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xf9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xf9
0xa: JUMPI 0xf9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x105]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x105
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x105
0x3d: JUMPI 0x105 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x190]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x190
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x190
0x48: JUMPI 0x190 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1c6]
---
0x49 DUP1
0x4a PUSH4 0x18160ddd
0x4f EQ
0x50 PUSH2 0x1c6
0x53 JUMPI
---
0x4a: V17 = 0x18160ddd
0x4f: V18 = EQ 0x18160ddd V10
0x50: V19 = 0x1c6
0x53: JUMPI 0x1c6 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1eb]
---
0x54 DUP1
0x55 PUSH4 0x205c2878
0x5a EQ
0x5b PUSH2 0x1eb
0x5e JUMPI
---
0x55: V20 = 0x205c2878
0x5a: V21 = EQ 0x205c2878 V10
0x5b: V22 = 0x1eb
0x5e: JUMPI 0x1eb V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x20f]
---
0x5f DUP1
0x60 PUSH4 0x23b872dd
0x65 EQ
0x66 PUSH2 0x20f
0x69 JUMPI
---
0x60: V23 = 0x23b872dd
0x65: V24 = EQ 0x23b872dd V10
0x66: V25 = 0x20f
0x69: JUMPI 0x20f V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x24b]
---
0x6a DUP1
0x6b PUSH4 0x2e1a7d4d
0x70 EQ
0x71 PUSH2 0x24b
0x74 JUMPI
---
0x6b: V26 = 0x2e1a7d4d
0x70: V27 = EQ 0x2e1a7d4d V10
0x71: V28 = 0x24b
0x74: JUMPI 0x24b V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x263]
---
0x75 DUP1
0x76 PUSH4 0x313ce567
0x7b EQ
0x7c PUSH2 0x263
0x7f JUMPI
---
0x76: V29 = 0x313ce567
0x7b: V30 = EQ 0x313ce567 V10
0x7c: V31 = 0x263
0x7f: JUMPI 0x263 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x28c]
---
0x80 DUP1
0x81 PUSH4 0x5a3b7e42
0x86 EQ
0x87 PUSH2 0x28c
0x8a JUMPI
---
0x81: V32 = 0x5a3b7e42
0x86: V33 = EQ 0x5a3b7e42 V10
0x87: V34 = 0x28c
0x8a: JUMPI 0x28c V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x317]
---
0x8b DUP1
0x8c PUSH4 0x5e35359e
0x91 EQ
0x92 PUSH2 0x317
0x95 JUMPI
---
0x8c: V35 = 0x5e35359e
0x91: V36 = EQ 0x5e35359e V10
0x92: V37 = 0x317
0x95: JUMPI 0x317 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x341]
---
0x96 DUP1
0x97 PUSH4 0x70a08231
0x9c EQ
0x9d PUSH2 0x341
0xa0 JUMPI
---
0x97: V38 = 0x70a08231
0x9c: V39 = EQ 0x70a08231 V10
0x9d: V40 = 0x341
0xa0: JUMPI 0x341 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x372]
---
0xa1 DUP1
0xa2 PUSH4 0x79ba5097
0xa7 EQ
0xa8 PUSH2 0x372
0xab JUMPI
---
0xa2: V41 = 0x79ba5097
0xa7: V42 = EQ 0x79ba5097 V10
0xa8: V43 = 0x372
0xab: JUMPI 0x372 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x387]
---
0xac DUP1
0xad PUSH4 0x8da5cb5b
0xb2 EQ
0xb3 PUSH2 0x387
0xb6 JUMPI
---
0xad: V44 = 0x8da5cb5b
0xb2: V45 = EQ 0x8da5cb5b V10
0xb3: V46 = 0x387
0xb6: JUMPI 0x387 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x3b6]
---
0xb7 DUP1
0xb8 PUSH4 0x95d89b41
0xbd EQ
0xbe PUSH2 0x3b6
0xc1 JUMPI
---
0xb8: V47 = 0x95d89b41
0xbd: V48 = EQ 0x95d89b41 V10
0xbe: V49 = 0x3b6
0xc1: JUMPI 0x3b6 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x441]
---
0xc2 DUP1
0xc3 PUSH4 0xa9059cbb
0xc8 EQ
0xc9 PUSH2 0x441
0xcc JUMPI
---
0xc3: V50 = 0xa9059cbb
0xc8: V51 = EQ 0xa9059cbb V10
0xc9: V52 = 0x441
0xcc: JUMPI 0x441 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0xf9]
---
0xcd DUP1
0xce PUSH4 0xd0e30db0
0xd3 EQ
0xd4 PUSH2 0xf9
0xd7 JUMPI
---
0xce: V53 = 0xd0e30db0
0xd3: V54 = EQ 0xd0e30db0 V10
0xd4: V55 = 0xf9
0xd7: JUMPI 0xf9 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x481]
---
0xd8 DUP1
0xd9 PUSH4 0xd4ee1d90
0xde EQ
0xdf PUSH2 0x481
0xe2 JUMPI
---
0xd9: V56 = 0xd4ee1d90
0xde: V57 = EQ 0xd4ee1d90 V10
0xdf: V58 = 0x481
0xe2: JUMPI 0x481 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x4b0]
---
0xe3 DUP1
0xe4 PUSH4 0xdd62ed3e
0xe9 EQ
0xea PUSH2 0x4b0
0xed JUMPI
---
0xe4: V59 = 0xdd62ed3e
0xe9: V60 = EQ 0xdd62ed3e V10
0xea: V61 = 0x4b0
0xed: JUMPI 0x4b0 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x4e7]
---
0xee DUP1
0xef PUSH4 0xf2fde38b
0xf4 EQ
0xf5 PUSH2 0x4e7
0xf8 JUMPI
---
0xef: V62 = 0xf2fde38b
0xf4: V63 = EQ 0xf2fde38b V10
0xf5: V64 = 0x4e7
0xf8: JUMPI 0x4e7 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0xf9]
---
Predecessors: [0x0, 0xcd, 0xee]
Successors: [0xfa]
---
0xf9 JUMPDEST
---
0xf9: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0xf9]
Successors: [0x508]
---
0xfa JUMPDEST
0xfb PUSH2 0x102
0xfe PUSH2 0x508
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V65 = 0x102
0xfe: V66 = 0x508
0x101: JUMP 0x508
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V10, 0x102]

================================

Block 0x102
[0x102:0x102]
---
Predecessors: [0x5bd, 0x82c, 0x881, 0xa32, 0xaef, 0xc6a]
Successors: [0x103]
---
0x102 JUMPDEST
---
0x102: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: [0x102]
Successors: []
---
0x103 JUMPDEST
0x104 STOP
---
0x103: JUMPDEST 
0x104: STOP 
---
Entry stack: [V10, 0x1b2, V179, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0xb]
Successors: [0x10c, 0x110]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x105: JUMPDEST 
0x106: V67 = CALLVALUE
0x107: V68 = ISZERO V67
0x108: V69 = 0x110
0x10b: JUMPI 0x110 V68
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x105]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V70 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x105]
Successors: [0x5bf]
---
0x110 JUMPDEST
0x111 PUSH2 0x118
0x114 PUSH2 0x5bf
0x117 JUMP
---
0x110: JUMPDEST 
0x111: V71 = 0x118
0x114: V72 = 0x5bf
0x117: JUMP 0x5bf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V10, 0x118]

================================

Block 0x118
[0x118:0x13b]
---
Predecessors: [0x655]
Successors: [0x13c]
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b MLOAD
0x11c PUSH1 0x20
0x11e DUP1
0x11f DUP3
0x120 MSTORE
0x121 DUP2
0x122 SWAP1
0x123 DUP2
0x124 ADD
0x125 DUP4
0x126 DUP2
0x127 DUP2
0x128 MLOAD
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP2
0x12f POP
0x130 DUP1
0x131 MLOAD
0x132 SWAP1
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 DUP1
0x138 DUP4
0x139 DUP4
0x13a PUSH1 0x0
---
0x118: JUMPDEST 
0x119: V73 = 0x40
0x11b: V74 = M[0x40]
0x11c: V75 = 0x20
0x120: M[V74] = 0x20
0x124: V76 = ADD V74 0x20
0x128: V77 = M[S0]
0x12a: M[V76] = V77
0x12b: V78 = 0x20
0x12d: V79 = ADD 0x20 V76
0x131: V80 = M[S0]
0x133: V81 = 0x20
0x135: V82 = ADD 0x20 S0
0x13a: V83 = 0x0
---
Entry stack: [V10, 0x118, S0]
Stack pops: 1
Stack additions: [S0, V74, V74, V79, V82, V80, V80, V79, V82, 0x0]
Exit stack: [V10, 0x118, S0, V74, V74, V79, V82, V80, V80, V79, V82, 0x0]

================================

Block 0x13c
[0x13c:0x144]
---
Predecessors: [0x118, 0x14d, 0x2d4, 0x3fe]
Successors: [0x145, 0x155]
---
0x13c JUMPDEST
0x13d DUP4
0x13e DUP2
0x13f LT
0x140 ISZERO
0x141 PUSH2 0x155
0x144 JUMPI
---
0x13c: JUMPDEST 
0x13f: V84 = LT S0 S3
0x140: V85 = ISZERO V84
0x141: V86 = 0x155
0x144: JUMPI 0x155 V85
---
Entry stack: [V10, 0x118, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x118, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x145
[0x145:0x14c]
---
Predecessors: [0x13c]
Successors: [0x14d]
---
0x145 DUP1
0x146 DUP3
0x147 ADD
0x148 MLOAD
0x149 DUP2
0x14a DUP5
0x14b ADD
0x14c MSTORE
---
0x147: V87 = ADD S1 S0
0x148: V88 = M[V87]
0x14b: V89 = ADD S2 S0
0x14c: M[V89] = V88
---
Entry stack: [V10, 0x118, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x118, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x14d
[0x14d:0x154]
---
Predecessors: [0x145]
Successors: [0x13c]
---
0x14d JUMPDEST
0x14e PUSH1 0x20
0x150 ADD
0x151 PUSH2 0x13c
0x154 JUMP
---
0x14d: JUMPDEST 
0x14e: V90 = 0x20
0x150: V91 = ADD 0x20 S0
0x151: V92 = 0x13c
0x154: JUMP 0x13c
---
Entry stack: [V10, 0x118, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V91]
Exit stack: [V10, 0x118, S9, S8, S7, S6, S5, S4, S3, S2, S1, V91]

================================

Block 0x155
[0x155:0x168]
---
Predecessors: [0x13c, 0x2c3, 0x3ed]
Successors: [0x169, 0x182]
---
0x155 JUMPDEST
0x156 POP
0x157 POP
0x158 POP
0x159 POP
0x15a SWAP1
0x15b POP
0x15c SWAP1
0x15d DUP2
0x15e ADD
0x15f SWAP1
0x160 PUSH1 0x1f
0x162 AND
0x163 DUP1
0x164 ISZERO
0x165 PUSH2 0x182
0x168 JUMPI
---
0x155: JUMPDEST 
0x15e: V93 = ADD S4 S6
0x160: V94 = 0x1f
0x162: V95 = AND 0x1f S4
0x164: V96 = ISZERO V95
0x165: V97 = 0x182
0x168: JUMPI 0x182 V96
---
Entry stack: [V10, 0x118, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V93, V95]
Exit stack: [V10, 0x118, S9, S8, S7, V93, V95]

================================

Block 0x169
[0x169:0x181]
---
Predecessors: [0x155]
Successors: [0x182]
---
0x169 DUP1
0x16a DUP3
0x16b SUB
0x16c DUP1
0x16d MLOAD
0x16e PUSH1 0x1
0x170 DUP4
0x171 PUSH1 0x20
0x173 SUB
0x174 PUSH2 0x100
0x177 EXP
0x178 SUB
0x179 NOT
0x17a AND
0x17b DUP2
0x17c MSTORE
0x17d PUSH1 0x20
0x17f ADD
0x180 SWAP2
0x181 POP
---
0x16b: V98 = SUB V93 V95
0x16d: V99 = M[V98]
0x16e: V100 = 0x1
0x171: V101 = 0x20
0x173: V102 = SUB 0x20 V95
0x174: V103 = 0x100
0x177: V104 = EXP 0x100 V102
0x178: V105 = SUB V104 0x1
0x179: V106 = NOT V105
0x17a: V107 = AND V106 V99
0x17c: M[V98] = V107
0x17d: V108 = 0x20
0x17f: V109 = ADD 0x20 V98
---
Entry stack: [V10, 0x118, S4, S3, S2, V93, V95]
Stack pops: 2
Stack additions: [V109, S0]
Exit stack: [V10, 0x118, S4, S3, S2, V109, V95]

================================

Block 0x182
[0x182:0x18f]
---
Predecessors: [0x155, 0x169, 0x2dc, 0x406]
Successors: []
---
0x182 JUMPDEST
0x183 POP
0x184 SWAP3
0x185 POP
0x186 POP
0x187 POP
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP1
0x18c SWAP2
0x18d SUB
0x18e SWAP1
0x18f RETURN
---
0x182: JUMPDEST 
0x188: V110 = 0x40
0x18a: V111 = M[0x40]
0x18d: V112 = SUB S1 V111
0x18f: RETURN V111 V112
---
Entry stack: [V10, 0x118, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x118]

================================

Block 0x190
[0x190:0x196]
---
Predecessors: [0x3e]
Successors: [0x197, 0x19b]
---
0x190 JUMPDEST
0x191 CALLVALUE
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x190: JUMPDEST 
0x191: V113 = CALLVALUE
0x192: V114 = ISZERO V113
0x193: V115 = 0x19b
0x196: JUMPI 0x19b V114
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x190]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V116 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19b
[0x19b:0x1b1]
---
Predecessors: [0x190]
Successors: [0x65d]
---
0x19b JUMPDEST
0x19c PUSH2 0x1b2
0x19f PUSH1 0x1
0x1a1 PUSH1 0xa0
0x1a3 PUSH1 0x2
0x1a5 EXP
0x1a6 SUB
0x1a7 PUSH1 0x4
0x1a9 CALLDATALOAD
0x1aa AND
0x1ab PUSH1 0x24
0x1ad CALLDATALOAD
0x1ae PUSH2 0x65d
0x1b1 JUMP
---
0x19b: JUMPDEST 
0x19c: V117 = 0x1b2
0x19f: V118 = 0x1
0x1a1: V119 = 0xa0
0x1a3: V120 = 0x2
0x1a5: V121 = EXP 0x2 0xa0
0x1a6: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a7: V123 = 0x4
0x1a9: V124 = CALLDATALOAD 0x4
0x1aa: V125 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V126 = 0x24
0x1ad: V127 = CALLDATALOAD 0x24
0x1ae: V128 = 0x65d
0x1b1: JUMP 0x65d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b2, V125, V127]
Exit stack: [V10, 0x1b2, V125, V127]

================================

Block 0x1b2
[0x1b2:0x1c5]
---
Predecessors: [0x716, 0x86e, 0xbda]
Successors: []
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 SWAP1
0x1b7 ISZERO
0x1b8 ISZERO
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x20
0x1bd ADD
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 SWAP2
0x1c3 SUB
0x1c4 SWAP1
0x1c5 RETURN
---
0x1b2: JUMPDEST 
0x1b3: V129 = 0x40
0x1b5: V130 = M[0x40]
0x1b7: V131 = ISZERO 0x1
0x1b8: V132 = ISZERO 0x0
0x1ba: M[V130] = 0x1
0x1bb: V133 = 0x20
0x1bd: V134 = ADD 0x20 V130
0x1be: V135 = 0x40
0x1c0: V136 = M[0x40]
0x1c3: V137 = SUB V134 V136
0x1c5: RETURN V136 V137
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c6
[0x1c6:0x1cc]
---
Predecessors: [0x49]
Successors: [0x1cd, 0x1d1]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V138 = CALLVALUE
0x1c8: V139 = ISZERO V138
0x1c9: V140 = 0x1d1
0x1cc: JUMPI 0x1d1 V139
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c6]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V141 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x1c6]
Successors: [0x71d]
---
0x1d1 JUMPDEST
0x1d2 PUSH2 0x1d9
0x1d5 PUSH2 0x71d
0x1d8 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V142 = 0x1d9
0x1d5: V143 = 0x71d
0x1d8: JUMP 0x71d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: [V10, 0x1d9]

================================

Block 0x1d9
[0x1d9:0x1ea]
---
Predecessors: [0x71d, 0xa37, 0xbf0]
Successors: []
---
0x1d9 JUMPDEST
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd SWAP1
0x1de DUP2
0x1df MSTORE
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 DUP1
0x1e7 SWAP2
0x1e8 SUB
0x1e9 SWAP1
0x1ea RETURN
---
0x1d9: JUMPDEST 
0x1da: V144 = 0x40
0x1dc: V145 = M[0x40]
0x1df: M[V145] = S0
0x1e0: V146 = 0x20
0x1e2: V147 = ADD 0x20 V145
0x1e3: V148 = 0x40
0x1e5: V149 = M[0x40]
0x1e8: V150 = SUB V147 V149
0x1ea: RETURN V149 V150
---
Entry stack: [V10, 0x1d9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d9]

================================

Block 0x1eb
[0x1eb:0x1f1]
---
Predecessors: [0x54]
Successors: [0x1f2, 0x1f6]
---
0x1eb JUMPDEST
0x1ec CALLVALUE
0x1ed ISZERO
0x1ee PUSH2 0x1f6
0x1f1 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V151 = CALLVALUE
0x1ed: V152 = ISZERO V151
0x1ee: V153 = 0x1f6
0x1f1: JUMPI 0x1f6 V152
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f2
[0x1f2:0x1f5]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f2 PUSH1 0x0
0x1f4 DUP1
0x1f5 REVERT
---
0x1f2: V154 = 0x0
0x1f5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f6
[0x1f6:0x20c]
---
Predecessors: [0x1eb]
Successors: [0x723]
---
0x1f6 JUMPDEST
0x1f7 PUSH2 0x102
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 PUSH1 0x4
0x204 CALLDATALOAD
0x205 AND
0x206 PUSH1 0x24
0x208 CALLDATALOAD
0x209 PUSH2 0x723
0x20c JUMP
---
0x1f6: JUMPDEST 
0x1f7: V155 = 0x102
0x1fa: V156 = 0x1
0x1fc: V157 = 0xa0
0x1fe: V158 = 0x2
0x200: V159 = EXP 0x2 0xa0
0x201: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V161 = 0x4
0x204: V162 = CALLDATALOAD 0x4
0x205: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x206: V164 = 0x24
0x208: V165 = CALLDATALOAD 0x24
0x209: V166 = 0x723
0x20c: JUMP 0x723
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102, V163, V165]
Exit stack: [V10, 0x102, V163, V165]

================================

Block 0x20d
[0x20d:0x20e]
---
Predecessors: []
Successors: []
---
0x20d JUMPDEST
0x20e STOP
---
0x20d: JUMPDEST 
0x20e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20f
[0x20f:0x215]
---
Predecessors: [0x5f]
Successors: [0x216, 0x21a]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 ISZERO
0x212 PUSH2 0x21a
0x215 JUMPI
---
0x20f: JUMPDEST 
0x210: V167 = CALLVALUE
0x211: V168 = ISZERO V167
0x212: V169 = 0x21a
0x215: JUMPI 0x21a V168
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x216
[0x216:0x219]
---
Predecessors: [0x20f]
Successors: []
---
0x216 PUSH1 0x0
0x218 DUP1
0x219 REVERT
---
0x216: V170 = 0x0
0x219: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21a
[0x21a:0x236]
---
Predecessors: [0x20f]
Successors: [0x831]
---
0x21a JUMPDEST
0x21b PUSH2 0x1b2
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 PUSH1 0x4
0x228 CALLDATALOAD
0x229 DUP2
0x22a AND
0x22b SWAP1
0x22c PUSH1 0x24
0x22e CALLDATALOAD
0x22f AND
0x230 PUSH1 0x44
0x232 CALLDATALOAD
0x233 PUSH2 0x831
0x236 JUMP
---
0x21a: JUMPDEST 
0x21b: V171 = 0x1b2
0x21e: V172 = 0x1
0x220: V173 = 0xa0
0x222: V174 = 0x2
0x224: V175 = EXP 0x2 0xa0
0x225: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x226: V177 = 0x4
0x228: V178 = CALLDATALOAD 0x4
0x22a: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x22c: V180 = 0x24
0x22e: V181 = CALLDATALOAD 0x24
0x22f: V182 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x230: V183 = 0x44
0x232: V184 = CALLDATALOAD 0x44
0x233: V185 = 0x831
0x236: JUMP 0x831
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b2, V179, V182, V184]
Exit stack: [V10, 0x1b2, V179, V182, V184]

================================

Block 0x237
[0x237:0x24a]
---
Predecessors: []
Successors: []
---
0x237 JUMPDEST
0x238 PUSH1 0x40
0x23a MLOAD
0x23b SWAP1
0x23c ISZERO
0x23d ISZERO
0x23e DUP2
0x23f MSTORE
0x240 PUSH1 0x20
0x242 ADD
0x243 PUSH1 0x40
0x245 MLOAD
0x246 DUP1
0x247 SWAP2
0x248 SUB
0x249 SWAP1
0x24a RETURN
---
0x237: JUMPDEST 
0x238: V186 = 0x40
0x23a: V187 = M[0x40]
0x23c: V188 = ISZERO S0
0x23d: V189 = ISZERO V188
0x23f: M[V187] = V189
0x240: V190 = 0x20
0x242: V191 = ADD 0x20 V187
0x243: V192 = 0x40
0x245: V193 = M[0x40]
0x248: V194 = SUB V191 V193
0x24a: RETURN V193 V194
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x24b
[0x24b:0x251]
---
Predecessors: [0x6a]
Successors: [0x252, 0x256]
---
0x24b JUMPDEST
0x24c CALLVALUE
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x24b: JUMPDEST 
0x24c: V195 = CALLVALUE
0x24d: V196 = ISZERO V195
0x24e: V197 = 0x256
0x251: JUMPI 0x256 V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x24b]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V198 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x256
[0x256:0x260]
---
Predecessors: [0x24b]
Successors: [0x876]
---
0x256 JUMPDEST
0x257 PUSH2 0x102
0x25a PUSH1 0x4
0x25c CALLDATALOAD
0x25d PUSH2 0x876
0x260 JUMP
---
0x256: JUMPDEST 
0x257: V199 = 0x102
0x25a: V200 = 0x4
0x25c: V201 = CALLDATALOAD 0x4
0x25d: V202 = 0x876
0x260: JUMP 0x876
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102, V201]
Exit stack: [V10, 0x102, V201]

================================

Block 0x261
[0x261:0x262]
---
Predecessors: []
Successors: []
---
0x261 JUMPDEST
0x262 STOP
---
0x261: JUMPDEST 
0x262: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x263
[0x263:0x269]
---
Predecessors: [0x75]
Successors: [0x26a, 0x26e]
---
0x263 JUMPDEST
0x264 CALLVALUE
0x265 ISZERO
0x266 PUSH2 0x26e
0x269 JUMPI
---
0x263: JUMPDEST 
0x264: V203 = CALLVALUE
0x265: V204 = ISZERO V203
0x266: V205 = 0x26e
0x269: JUMPI 0x26e V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x263]
Successors: []
---
0x26a PUSH1 0x0
0x26c DUP1
0x26d REVERT
---
0x26a: V206 = 0x0
0x26d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26e
[0x26e:0x275]
---
Predecessors: [0x263]
Successors: [0x884]
---
0x26e JUMPDEST
0x26f PUSH2 0x276
0x272 PUSH2 0x884
0x275 JUMP
---
0x26e: JUMPDEST 
0x26f: V207 = 0x276
0x272: V208 = 0x884
0x275: JUMP 0x884
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x276]
Exit stack: [V10, 0x276]

================================

Block 0x276
[0x276:0x28b]
---
Predecessors: [0x884]
Successors: []
---
0x276 JUMPDEST
0x277 PUSH1 0x40
0x279 MLOAD
0x27a PUSH1 0xff
0x27c SWAP1
0x27d SWAP2
0x27e AND
0x27f DUP2
0x280 MSTORE
0x281 PUSH1 0x20
0x283 ADD
0x284 PUSH1 0x40
0x286 MLOAD
0x287 DUP1
0x288 SWAP2
0x289 SUB
0x28a SWAP1
0x28b RETURN
---
0x276: JUMPDEST 
0x277: V209 = 0x40
0x279: V210 = M[0x40]
0x27a: V211 = 0xff
0x27e: V212 = AND V787 0xff
0x280: M[V210] = V212
0x281: V213 = 0x20
0x283: V214 = ADD 0x20 V210
0x284: V215 = 0x40
0x286: V216 = M[0x40]
0x289: V217 = SUB V214 V216
0x28b: RETURN V216 V217
---
Entry stack: [V10, 0x276, V787]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x276]

================================

Block 0x28c
[0x28c:0x292]
---
Predecessors: [0x80]
Successors: [0x293, 0x297]
---
0x28c JUMPDEST
0x28d CALLVALUE
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x28c: JUMPDEST 
0x28d: V218 = CALLVALUE
0x28e: V219 = ISZERO V218
0x28f: V220 = 0x297
0x292: JUMPI 0x297 V219
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x28c]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V221 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x297
[0x297:0x29e]
---
Predecessors: [0x28c]
Successors: [0x88d]
---
0x297 JUMPDEST
0x298 PUSH2 0x118
0x29b PUSH2 0x88d
0x29e JUMP
---
0x297: JUMPDEST 
0x298: V222 = 0x118
0x29b: V223 = 0x88d
0x29e: JUMP 0x88d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V10, 0x118]

================================

Block 0x29f
[0x29f:0x2c2]
---
Predecessors: []
Successors: [0x2c3]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 PUSH1 0x20
0x2a5 DUP1
0x2a6 DUP3
0x2a7 MSTORE
0x2a8 DUP2
0x2a9 SWAP1
0x2aa DUP2
0x2ab ADD
0x2ac DUP4
0x2ad DUP2
0x2ae DUP2
0x2af MLOAD
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 SWAP2
0x2b6 POP
0x2b7 DUP1
0x2b8 MLOAD
0x2b9 SWAP1
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd SWAP1
0x2be DUP1
0x2bf DUP4
0x2c0 DUP4
0x2c1 PUSH1 0x0
---
0x29f: JUMPDEST 
0x2a0: V224 = 0x40
0x2a2: V225 = M[0x40]
0x2a3: V226 = 0x20
0x2a7: M[V225] = 0x20
0x2ab: V227 = ADD V225 0x20
0x2af: V228 = M[S0]
0x2b1: M[V227] = V228
0x2b2: V229 = 0x20
0x2b4: V230 = ADD 0x20 V227
0x2b8: V231 = M[S0]
0x2ba: V232 = 0x20
0x2bc: V233 = ADD 0x20 S0
0x2c1: V234 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V225, V225, V230, V233, V231, V231, V230, V233, 0x0]
Exit stack: [S0, V225, V225, V230, V233, V231, V231, V230, V233, 0x0]

================================

Block 0x2c3
[0x2c3:0x2cb]
---
Predecessors: [0x29f]
Successors: [0x155, 0x2cc]
---
0x2c3 JUMPDEST
0x2c4 DUP4
0x2c5 DUP2
0x2c6 LT
0x2c7 ISZERO
0x2c8 PUSH2 0x155
0x2cb JUMPI
---
0x2c3: JUMPDEST 
0x2c6: V235 = LT 0x0 V231
0x2c7: V236 = ISZERO V235
0x2c8: V237 = 0x155
0x2cb: JUMPI 0x155 V236
---
Entry stack: [S9, V225, V225, V230, V233, V231, V231, V230, V233, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V225, V225, V230, V233, V231, V231, V230, V233, 0x0]

================================

Block 0x2cc
[0x2cc:0x2d3]
---
Predecessors: [0x2c3]
Successors: [0x2d4]
---
0x2cc DUP1
0x2cd DUP3
0x2ce ADD
0x2cf MLOAD
0x2d0 DUP2
0x2d1 DUP5
0x2d2 ADD
0x2d3 MSTORE
---
0x2ce: V238 = ADD V233 0x0
0x2cf: V239 = M[V238]
0x2d2: V240 = ADD V230 0x0
0x2d3: M[V240] = V239
---
Entry stack: [S9, V225, V225, V230, V233, V231, V231, V230, V233, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V225, V225, V230, V233, V231, V231, V230, V233, 0x0]

================================

Block 0x2d4
[0x2d4:0x2db]
---
Predecessors: [0x2cc]
Successors: [0x13c]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 PUSH2 0x13c
0x2db JUMP
---
0x2d4: JUMPDEST 
0x2d5: V241 = 0x20
0x2d7: V242 = ADD 0x20 0x0
0x2d8: V243 = 0x13c
0x2db: JUMP 0x13c
---
Entry stack: [S9, V225, V225, V230, V233, V231, V231, V230, V233, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V225, V225, V230, V233, V231, V231, V230, V233, 0x20]

================================

Block 0x2dc
[0x2dc:0x2ef]
---
Predecessors: []
Successors: [0x182, 0x2f0]
---
0x2dc JUMPDEST
0x2dd POP
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 SWAP1
0x2e2 POP
0x2e3 SWAP1
0x2e4 DUP2
0x2e5 ADD
0x2e6 SWAP1
0x2e7 PUSH1 0x1f
0x2e9 AND
0x2ea DUP1
0x2eb ISZERO
0x2ec PUSH2 0x182
0x2ef JUMPI
---
0x2dc: JUMPDEST 
0x2e5: V244 = ADD S4 S6
0x2e7: V245 = 0x1f
0x2e9: V246 = AND 0x1f S4
0x2eb: V247 = ISZERO V246
0x2ec: V248 = 0x182
0x2ef: JUMPI 0x182 V247
---
Entry stack: []
Stack pops: 7
Stack additions: [V244, V246]
Exit stack: [V244, V246]

================================

Block 0x2f0
[0x2f0:0x308]
---
Predecessors: [0x2dc]
Successors: [0x309]
---
0x2f0 DUP1
0x2f1 DUP3
0x2f2 SUB
0x2f3 DUP1
0x2f4 MLOAD
0x2f5 PUSH1 0x1
0x2f7 DUP4
0x2f8 PUSH1 0x20
0x2fa SUB
0x2fb PUSH2 0x100
0x2fe EXP
0x2ff SUB
0x300 NOT
0x301 AND
0x302 DUP2
0x303 MSTORE
0x304 PUSH1 0x20
0x306 ADD
0x307 SWAP2
0x308 POP
---
0x2f2: V249 = SUB V244 V246
0x2f4: V250 = M[V249]
0x2f5: V251 = 0x1
0x2f8: V252 = 0x20
0x2fa: V253 = SUB 0x20 V246
0x2fb: V254 = 0x100
0x2fe: V255 = EXP 0x100 V253
0x2ff: V256 = SUB V255 0x1
0x300: V257 = NOT V256
0x301: V258 = AND V257 V250
0x303: M[V249] = V258
0x304: V259 = 0x20
0x306: V260 = ADD 0x20 V249
---
Entry stack: [V244, V246]
Stack pops: 2
Stack additions: [V260, S0]
Exit stack: [V260, V246]

================================

Block 0x309
[0x309:0x316]
---
Predecessors: [0x2f0]
Successors: []
---
0x309 JUMPDEST
0x30a POP
0x30b SWAP3
0x30c POP
0x30d POP
0x30e POP
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 SWAP2
0x314 SUB
0x315 SWAP1
0x316 RETURN
---
0x309: JUMPDEST 
0x30f: V261 = 0x40
0x311: V262 = M[0x40]
0x314: V263 = SUB V260 V262
0x316: RETURN V262 V263
---
Entry stack: [V260, V246]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x317
[0x317:0x31d]
---
Predecessors: [0x8b]
Successors: [0x31e, 0x322]
---
0x317 JUMPDEST
0x318 CALLVALUE
0x319 ISZERO
0x31a PUSH2 0x322
0x31d JUMPI
---
0x317: JUMPDEST 
0x318: V264 = CALLVALUE
0x319: V265 = ISZERO V264
0x31a: V266 = 0x322
0x31d: JUMPI 0x322 V265
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31e
[0x31e:0x321]
---
Predecessors: [0x317]
Successors: []
---
0x31e PUSH1 0x0
0x320 DUP1
0x321 REVERT
---
0x31e: V267 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x322
[0x322:0x33e]
---
Predecessors: [0x317]
Successors: [0x92b]
---
0x322 JUMPDEST
0x323 PUSH2 0x102
0x326 PUSH1 0x1
0x328 PUSH1 0xa0
0x32a PUSH1 0x2
0x32c EXP
0x32d SUB
0x32e PUSH1 0x4
0x330 CALLDATALOAD
0x331 DUP2
0x332 AND
0x333 SWAP1
0x334 PUSH1 0x24
0x336 CALLDATALOAD
0x337 AND
0x338 PUSH1 0x44
0x33a CALLDATALOAD
0x33b PUSH2 0x92b
0x33e JUMP
---
0x322: JUMPDEST 
0x323: V268 = 0x102
0x326: V269 = 0x1
0x328: V270 = 0xa0
0x32a: V271 = 0x2
0x32c: V272 = EXP 0x2 0xa0
0x32d: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32e: V274 = 0x4
0x330: V275 = CALLDATALOAD 0x4
0x332: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x334: V277 = 0x24
0x336: V278 = CALLDATALOAD 0x24
0x337: V279 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x338: V280 = 0x44
0x33a: V281 = CALLDATALOAD 0x44
0x33b: V282 = 0x92b
0x33e: JUMP 0x92b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102, V276, V279, V281]
Exit stack: [V10, 0x102, V276, V279, V281]

================================

Block 0x33f
[0x33f:0x340]
---
Predecessors: []
Successors: []
---
0x33f JUMPDEST
0x340 STOP
---
0x33f: JUMPDEST 
0x340: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x341
[0x341:0x347]
---
Predecessors: [0x96]
Successors: [0x348, 0x34c]
---
0x341 JUMPDEST
0x342 CALLVALUE
0x343 ISZERO
0x344 PUSH2 0x34c
0x347 JUMPI
---
0x341: JUMPDEST 
0x342: V283 = CALLVALUE
0x343: V284 = ISZERO V283
0x344: V285 = 0x34c
0x347: JUMPI 0x34c V284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x348
[0x348:0x34b]
---
Predecessors: [0x341]
Successors: []
---
0x348 PUSH1 0x0
0x34a DUP1
0x34b REVERT
---
0x348: V286 = 0x0
0x34b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x34c
[0x34c:0x35f]
---
Predecessors: [0x341]
Successors: [0xa37]
---
0x34c JUMPDEST
0x34d PUSH2 0x1d9
0x350 PUSH1 0x1
0x352 PUSH1 0xa0
0x354 PUSH1 0x2
0x356 EXP
0x357 SUB
0x358 PUSH1 0x4
0x35a CALLDATALOAD
0x35b AND
0x35c PUSH2 0xa37
0x35f JUMP
---
0x34c: JUMPDEST 
0x34d: V287 = 0x1d9
0x350: V288 = 0x1
0x352: V289 = 0xa0
0x354: V290 = 0x2
0x356: V291 = EXP 0x2 0xa0
0x357: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x358: V293 = 0x4
0x35a: V294 = CALLDATALOAD 0x4
0x35b: V295 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V296 = 0xa37
0x35f: JUMP 0xa37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9, V295]
Exit stack: [V10, 0x1d9, V295]

================================

Block 0x360
[0x360:0x371]
---
Predecessors: []
Successors: []
---
0x360 JUMPDEST
0x361 PUSH1 0x40
0x363 MLOAD
0x364 SWAP1
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x20
0x369 ADD
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e SWAP2
0x36f SUB
0x370 SWAP1
0x371 RETURN
---
0x360: JUMPDEST 
0x361: V297 = 0x40
0x363: V298 = M[0x40]
0x366: M[V298] = S0
0x367: V299 = 0x20
0x369: V300 = ADD 0x20 V298
0x36a: V301 = 0x40
0x36c: V302 = M[0x40]
0x36f: V303 = SUB V300 V302
0x371: RETURN V302 V303
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x372
[0x372:0x378]
---
Predecessors: [0xa1]
Successors: [0x379, 0x37d]
---
0x372 JUMPDEST
0x373 CALLVALUE
0x374 ISZERO
0x375 PUSH2 0x37d
0x378 JUMPI
---
0x372: JUMPDEST 
0x373: V304 = CALLVALUE
0x374: V305 = ISZERO V304
0x375: V306 = 0x37d
0x378: JUMPI 0x37d V305
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x372]
Successors: []
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
---
0x379: V307 = 0x0
0x37c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37d
[0x37d:0x384]
---
Predecessors: [0x372]
Successors: [0xa49]
---
0x37d JUMPDEST
0x37e PUSH2 0x102
0x381 PUSH2 0xa49
0x384 JUMP
---
0x37d: JUMPDEST 
0x37e: V308 = 0x102
0x381: V309 = 0xa49
0x384: JUMP 0xa49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V10, 0x102]

================================

Block 0x385
[0x385:0x386]
---
Predecessors: []
Successors: []
---
0x385 JUMPDEST
0x386 STOP
---
0x385: JUMPDEST 
0x386: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x387
[0x387:0x38d]
---
Predecessors: [0xac]
Successors: [0x38e, 0x392]
---
0x387 JUMPDEST
0x388 CALLVALUE
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x387: JUMPDEST 
0x388: V310 = CALLVALUE
0x389: V311 = ISZERO V310
0x38a: V312 = 0x392
0x38d: JUMPI 0x392 V311
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x387]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V313 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x392
[0x392:0x399]
---
Predecessors: [0x387]
Successors: [0xaf1]
---
0x392 JUMPDEST
0x393 PUSH2 0x39a
0x396 PUSH2 0xaf1
0x399 JUMP
---
0x392: JUMPDEST 
0x393: V314 = 0x39a
0x396: V315 = 0xaf1
0x399: JUMP 0xaf1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x39a]
Exit stack: [V10, 0x39a]

================================

Block 0x39a
[0x39a:0x3b5]
---
Predecessors: [0xaf1, 0xbe1]
Successors: []
---
0x39a JUMPDEST
0x39b PUSH1 0x40
0x39d MLOAD
0x39e PUSH1 0x1
0x3a0 PUSH1 0xa0
0x3a2 PUSH1 0x2
0x3a4 EXP
0x3a5 SUB
0x3a6 SWAP1
0x3a7 SWAP2
0x3a8 AND
0x3a9 DUP2
0x3aa MSTORE
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 SWAP2
0x3b3 SUB
0x3b4 SWAP1
0x3b5 RETURN
---
0x39a: JUMPDEST 
0x39b: V316 = 0x40
0x39d: V317 = M[0x40]
0x39e: V318 = 0x1
0x3a0: V319 = 0xa0
0x3a2: V320 = 0x2
0x3a4: V321 = EXP 0x2 0xa0
0x3a5: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a8: V323 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: M[V317] = V323
0x3ab: V324 = 0x20
0x3ad: V325 = ADD 0x20 V317
0x3ae: V326 = 0x40
0x3b0: V327 = M[0x40]
0x3b3: V328 = SUB V325 V327
0x3b5: RETURN V327 V328
---
Entry stack: [V10, 0x39a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x39a]

================================

Block 0x3b6
[0x3b6:0x3bc]
---
Predecessors: [0xb7]
Successors: [0x3bd, 0x3c1]
---
0x3b6 JUMPDEST
0x3b7 CALLVALUE
0x3b8 ISZERO
0x3b9 PUSH2 0x3c1
0x3bc JUMPI
---
0x3b6: JUMPDEST 
0x3b7: V329 = CALLVALUE
0x3b8: V330 = ISZERO V329
0x3b9: V331 = 0x3c1
0x3bc: JUMPI 0x3c1 V330
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bd
[0x3bd:0x3c0]
---
Predecessors: [0x3b6]
Successors: []
---
0x3bd PUSH1 0x0
0x3bf DUP1
0x3c0 REVERT
---
0x3bd: V332 = 0x0
0x3c0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c1
[0x3c1:0x3c8]
---
Predecessors: [0x3b6]
Successors: [0xb00]
---
0x3c1 JUMPDEST
0x3c2 PUSH2 0x118
0x3c5 PUSH2 0xb00
0x3c8 JUMP
---
0x3c1: JUMPDEST 
0x3c2: V333 = 0x118
0x3c5: V334 = 0xb00
0x3c8: JUMP 0xb00
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V10, 0x118]

================================

Block 0x3c9
[0x3c9:0x3ec]
---
Predecessors: []
Successors: [0x3ed]
---
0x3c9 JUMPDEST
0x3ca PUSH1 0x40
0x3cc MLOAD
0x3cd PUSH1 0x20
0x3cf DUP1
0x3d0 DUP3
0x3d1 MSTORE
0x3d2 DUP2
0x3d3 SWAP1
0x3d4 DUP2
0x3d5 ADD
0x3d6 DUP4
0x3d7 DUP2
0x3d8 DUP2
0x3d9 MLOAD
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x20
0x3de ADD
0x3df SWAP2
0x3e0 POP
0x3e1 DUP1
0x3e2 MLOAD
0x3e3 SWAP1
0x3e4 PUSH1 0x20
0x3e6 ADD
0x3e7 SWAP1
0x3e8 DUP1
0x3e9 DUP4
0x3ea DUP4
0x3eb PUSH1 0x0
---
0x3c9: JUMPDEST 
0x3ca: V335 = 0x40
0x3cc: V336 = M[0x40]
0x3cd: V337 = 0x20
0x3d1: M[V336] = 0x20
0x3d5: V338 = ADD V336 0x20
0x3d9: V339 = M[S0]
0x3db: M[V338] = V339
0x3dc: V340 = 0x20
0x3de: V341 = ADD 0x20 V338
0x3e2: V342 = M[S0]
0x3e4: V343 = 0x20
0x3e6: V344 = ADD 0x20 S0
0x3eb: V345 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V336, V336, V341, V344, V342, V342, V341, V344, 0x0]
Exit stack: [S0, V336, V336, V341, V344, V342, V342, V341, V344, 0x0]

================================

Block 0x3ed
[0x3ed:0x3f5]
---
Predecessors: [0x3c9]
Successors: [0x155, 0x3f6]
---
0x3ed JUMPDEST
0x3ee DUP4
0x3ef DUP2
0x3f0 LT
0x3f1 ISZERO
0x3f2 PUSH2 0x155
0x3f5 JUMPI
---
0x3ed: JUMPDEST 
0x3f0: V346 = LT 0x0 V342
0x3f1: V347 = ISZERO V346
0x3f2: V348 = 0x155
0x3f5: JUMPI 0x155 V347
---
Entry stack: [S9, V336, V336, V341, V344, V342, V342, V341, V344, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V336, V336, V341, V344, V342, V342, V341, V344, 0x0]

================================

Block 0x3f6
[0x3f6:0x3fd]
---
Predecessors: [0x3ed]
Successors: [0x3fe]
---
0x3f6 DUP1
0x3f7 DUP3
0x3f8 ADD
0x3f9 MLOAD
0x3fa DUP2
0x3fb DUP5
0x3fc ADD
0x3fd MSTORE
---
0x3f8: V349 = ADD V344 0x0
0x3f9: V350 = M[V349]
0x3fc: V351 = ADD V341 0x0
0x3fd: M[V351] = V350
---
Entry stack: [S9, V336, V336, V341, V344, V342, V342, V341, V344, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V336, V336, V341, V344, V342, V342, V341, V344, 0x0]

================================

Block 0x3fe
[0x3fe:0x405]
---
Predecessors: [0x3f6]
Successors: [0x13c]
---
0x3fe JUMPDEST
0x3ff PUSH1 0x20
0x401 ADD
0x402 PUSH2 0x13c
0x405 JUMP
---
0x3fe: JUMPDEST 
0x3ff: V352 = 0x20
0x401: V353 = ADD 0x20 0x0
0x402: V354 = 0x13c
0x405: JUMP 0x13c
---
Entry stack: [S9, V336, V336, V341, V344, V342, V342, V341, V344, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V336, V336, V341, V344, V342, V342, V341, V344, 0x20]

================================

Block 0x406
[0x406:0x419]
---
Predecessors: []
Successors: [0x182, 0x41a]
---
0x406 JUMPDEST
0x407 POP
0x408 POP
0x409 POP
0x40a POP
0x40b SWAP1
0x40c POP
0x40d SWAP1
0x40e DUP2
0x40f ADD
0x410 SWAP1
0x411 PUSH1 0x1f
0x413 AND
0x414 DUP1
0x415 ISZERO
0x416 PUSH2 0x182
0x419 JUMPI
---
0x406: JUMPDEST 
0x40f: V355 = ADD S4 S6
0x411: V356 = 0x1f
0x413: V357 = AND 0x1f S4
0x415: V358 = ISZERO V357
0x416: V359 = 0x182
0x419: JUMPI 0x182 V358
---
Entry stack: []
Stack pops: 7
Stack additions: [V355, V357]
Exit stack: [V355, V357]

================================

Block 0x41a
[0x41a:0x432]
---
Predecessors: [0x406]
Successors: [0x433]
---
0x41a DUP1
0x41b DUP3
0x41c SUB
0x41d DUP1
0x41e MLOAD
0x41f PUSH1 0x1
0x421 DUP4
0x422 PUSH1 0x20
0x424 SUB
0x425 PUSH2 0x100
0x428 EXP
0x429 SUB
0x42a NOT
0x42b AND
0x42c DUP2
0x42d MSTORE
0x42e PUSH1 0x20
0x430 ADD
0x431 SWAP2
0x432 POP
---
0x41c: V360 = SUB V355 V357
0x41e: V361 = M[V360]
0x41f: V362 = 0x1
0x422: V363 = 0x20
0x424: V364 = SUB 0x20 V357
0x425: V365 = 0x100
0x428: V366 = EXP 0x100 V364
0x429: V367 = SUB V366 0x1
0x42a: V368 = NOT V367
0x42b: V369 = AND V368 V361
0x42d: M[V360] = V369
0x42e: V370 = 0x20
0x430: V371 = ADD 0x20 V360
---
Entry stack: [V355, V357]
Stack pops: 2
Stack additions: [V371, S0]
Exit stack: [V371, V357]

================================

Block 0x433
[0x433:0x440]
---
Predecessors: [0x41a]
Successors: []
---
0x433 JUMPDEST
0x434 POP
0x435 SWAP3
0x436 POP
0x437 POP
0x438 POP
0x439 PUSH1 0x40
0x43b MLOAD
0x43c DUP1
0x43d SWAP2
0x43e SUB
0x43f SWAP1
0x440 RETURN
---
0x433: JUMPDEST 
0x439: V372 = 0x40
0x43b: V373 = M[0x40]
0x43e: V374 = SUB V371 V373
0x440: RETURN V373 V374
---
Entry stack: [V371, V357]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x441
[0x441:0x447]
---
Predecessors: [0xc2]
Successors: [0x448, 0x44c]
---
0x441 JUMPDEST
0x442 CALLVALUE
0x443 ISZERO
0x444 PUSH2 0x44c
0x447 JUMPI
---
0x441: JUMPDEST 
0x442: V375 = CALLVALUE
0x443: V376 = ISZERO V375
0x444: V377 = 0x44c
0x447: JUMPI 0x44c V376
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x448
[0x448:0x44b]
---
Predecessors: [0x441]
Successors: []
---
0x448 PUSH1 0x0
0x44a DUP1
0x44b REVERT
---
0x448: V378 = 0x0
0x44b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44c
[0x44c:0x462]
---
Predecessors: [0x441]
Successors: [0xb9e]
---
0x44c JUMPDEST
0x44d PUSH2 0x1b2
0x450 PUSH1 0x1
0x452 PUSH1 0xa0
0x454 PUSH1 0x2
0x456 EXP
0x457 SUB
0x458 PUSH1 0x4
0x45a CALLDATALOAD
0x45b AND
0x45c PUSH1 0x24
0x45e CALLDATALOAD
0x45f PUSH2 0xb9e
0x462 JUMP
---
0x44c: JUMPDEST 
0x44d: V379 = 0x1b2
0x450: V380 = 0x1
0x452: V381 = 0xa0
0x454: V382 = 0x2
0x456: V383 = EXP 0x2 0xa0
0x457: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V385 = 0x4
0x45a: V386 = CALLDATALOAD 0x4
0x45b: V387 = AND V386 0xffffffffffffffffffffffffffffffffffffffff
0x45c: V388 = 0x24
0x45e: V389 = CALLDATALOAD 0x24
0x45f: V390 = 0xb9e
0x462: JUMP 0xb9e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b2, V387, V389]
Exit stack: [V10, 0x1b2, V387, V389]

================================

Block 0x463
[0x463:0x47e]
---
Predecessors: []
Successors: [0x508]
---
0x463 JUMPDEST
0x464 PUSH1 0x40
0x466 MLOAD
0x467 SWAP1
0x468 ISZERO
0x469 ISZERO
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x20
0x46e ADD
0x46f PUSH1 0x40
0x471 MLOAD
0x472 DUP1
0x473 SWAP2
0x474 SUB
0x475 SWAP1
0x476 RETURN
0x477 JUMPDEST
0x478 PUSH2 0x102
0x47b PUSH2 0x508
0x47e JUMP
---
0x463: JUMPDEST 
0x464: V391 = 0x40
0x466: V392 = M[0x40]
0x468: V393 = ISZERO S0
0x469: V394 = ISZERO V393
0x46b: M[V392] = V394
0x46c: V395 = 0x20
0x46e: V396 = ADD 0x20 V392
0x46f: V397 = 0x40
0x471: V398 = M[0x40]
0x474: V399 = SUB V396 V398
0x476: RETURN V398 V399
0x477: JUMPDEST 
0x478: V400 = 0x102
0x47b: V401 = 0x508
0x47e: JUMP 0x508
---
Entry stack: []
Stack pops: 2
Stack additions: [0x102]
Exit stack: []

================================

Block 0x47f
[0x47f:0x480]
---
Predecessors: []
Successors: []
---
0x47f JUMPDEST
0x480 STOP
---
0x47f: JUMPDEST 
0x480: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x481
[0x481:0x487]
---
Predecessors: [0xd8]
Successors: [0x488, 0x48c]
---
0x481 JUMPDEST
0x482 CALLVALUE
0x483 ISZERO
0x484 PUSH2 0x48c
0x487 JUMPI
---
0x481: JUMPDEST 
0x482: V402 = CALLVALUE
0x483: V403 = ISZERO V402
0x484: V404 = 0x48c
0x487: JUMPI 0x48c V403
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x488
[0x488:0x48b]
---
Predecessors: [0x481]
Successors: []
---
0x488 PUSH1 0x0
0x48a DUP1
0x48b REVERT
---
0x488: V405 = 0x0
0x48b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48c
[0x48c:0x493]
---
Predecessors: [0x481]
Successors: [0xbe1]
---
0x48c JUMPDEST
0x48d PUSH2 0x39a
0x490 PUSH2 0xbe1
0x493 JUMP
---
0x48c: JUMPDEST 
0x48d: V406 = 0x39a
0x490: V407 = 0xbe1
0x493: JUMP 0xbe1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x39a]
Exit stack: [V10, 0x39a]

================================

Block 0x494
[0x494:0x4af]
---
Predecessors: []
Successors: []
---
0x494 JUMPDEST
0x495 PUSH1 0x40
0x497 MLOAD
0x498 PUSH1 0x1
0x49a PUSH1 0xa0
0x49c PUSH1 0x2
0x49e EXP
0x49f SUB
0x4a0 SWAP1
0x4a1 SWAP2
0x4a2 AND
0x4a3 DUP2
0x4a4 MSTORE
0x4a5 PUSH1 0x20
0x4a7 ADD
0x4a8 PUSH1 0x40
0x4aa MLOAD
0x4ab DUP1
0x4ac SWAP2
0x4ad SUB
0x4ae SWAP1
0x4af RETURN
---
0x494: JUMPDEST 
0x495: V408 = 0x40
0x497: V409 = M[0x40]
0x498: V410 = 0x1
0x49a: V411 = 0xa0
0x49c: V412 = 0x2
0x49e: V413 = EXP 0x2 0xa0
0x49f: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a2: V415 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: M[V409] = V415
0x4a5: V416 = 0x20
0x4a7: V417 = ADD 0x20 V409
0x4a8: V418 = 0x40
0x4aa: V419 = M[0x40]
0x4ad: V420 = SUB V417 V419
0x4af: RETURN V419 V420
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x4b6]
---
Predecessors: [0xe3]
Successors: [0x4b7, 0x4bb]
---
0x4b0 JUMPDEST
0x4b1 CALLVALUE
0x4b2 ISZERO
0x4b3 PUSH2 0x4bb
0x4b6 JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V421 = CALLVALUE
0x4b2: V422 = ISZERO V421
0x4b3: V423 = 0x4bb
0x4b6: JUMPI 0x4bb V422
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b7
[0x4b7:0x4ba]
---
Predecessors: [0x4b0]
Successors: []
---
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba REVERT
---
0x4b7: V424 = 0x0
0x4ba: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4bb
[0x4bb:0x4d4]
---
Predecessors: [0x4b0]
Successors: [0xbf0]
---
0x4bb JUMPDEST
0x4bc PUSH2 0x1d9
0x4bf PUSH1 0x1
0x4c1 PUSH1 0xa0
0x4c3 PUSH1 0x2
0x4c5 EXP
0x4c6 SUB
0x4c7 PUSH1 0x4
0x4c9 CALLDATALOAD
0x4ca DUP2
0x4cb AND
0x4cc SWAP1
0x4cd PUSH1 0x24
0x4cf CALLDATALOAD
0x4d0 AND
0x4d1 PUSH2 0xbf0
0x4d4 JUMP
---
0x4bb: JUMPDEST 
0x4bc: V425 = 0x1d9
0x4bf: V426 = 0x1
0x4c1: V427 = 0xa0
0x4c3: V428 = 0x2
0x4c5: V429 = EXP 0x2 0xa0
0x4c6: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c7: V431 = 0x4
0x4c9: V432 = CALLDATALOAD 0x4
0x4cb: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x4cd: V434 = 0x24
0x4cf: V435 = CALLDATALOAD 0x24
0x4d0: V436 = AND V435 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V437 = 0xbf0
0x4d4: JUMP 0xbf0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9, V433, V436]
Exit stack: [V10, 0x1d9, V433, V436]

================================

Block 0x4d5
[0x4d5:0x4e6]
---
Predecessors: []
Successors: []
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x40
0x4d8 MLOAD
0x4d9 SWAP1
0x4da DUP2
0x4db MSTORE
0x4dc PUSH1 0x20
0x4de ADD
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 DUP1
0x4e3 SWAP2
0x4e4 SUB
0x4e5 SWAP1
0x4e6 RETURN
---
0x4d5: JUMPDEST 
0x4d6: V438 = 0x40
0x4d8: V439 = M[0x40]
0x4db: M[V439] = S0
0x4dc: V440 = 0x20
0x4de: V441 = ADD 0x20 V439
0x4df: V442 = 0x40
0x4e1: V443 = M[0x40]
0x4e4: V444 = SUB V441 V443
0x4e6: RETURN V443 V444
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4e7
[0x4e7:0x4ed]
---
Predecessors: [0xee]
Successors: [0x4ee, 0x4f2]
---
0x4e7 JUMPDEST
0x4e8 CALLVALUE
0x4e9 ISZERO
0x4ea PUSH2 0x4f2
0x4ed JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V445 = CALLVALUE
0x4e9: V446 = ISZERO V445
0x4ea: V447 = 0x4f2
0x4ed: JUMPI 0x4f2 V446
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ee
[0x4ee:0x4f1]
---
Predecessors: [0x4e7]
Successors: []
---
0x4ee PUSH1 0x0
0x4f0 DUP1
0x4f1 REVERT
---
0x4ee: V448 = 0x0
0x4f1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f2
[0x4f2:0x505]
---
Predecessors: [0x4e7]
Successors: [0xc0d]
---
0x4f2 JUMPDEST
0x4f3 PUSH2 0x102
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0xa0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd SUB
0x4fe PUSH1 0x4
0x500 CALLDATALOAD
0x501 AND
0x502 PUSH2 0xc0d
0x505 JUMP
---
0x4f2: JUMPDEST 
0x4f3: V449 = 0x102
0x4f6: V450 = 0x1
0x4f8: V451 = 0xa0
0x4fa: V452 = 0x2
0x4fc: V453 = EXP 0x2 0xa0
0x4fd: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fe: V455 = 0x4
0x500: V456 = CALLDATALOAD 0x4
0x501: V457 = AND V456 0xffffffffffffffffffffffffffffffffffffffff
0x502: V458 = 0xc0d
0x505: JUMP 0xc0d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102, V457]
Exit stack: [V10, 0x102, V457]

================================

Block 0x506
[0x506:0x507]
---
Predecessors: []
Successors: []
---
0x506 JUMPDEST
0x507 STOP
---
0x506: JUMPDEST 
0x507: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x508
[0x508:0x52a]
---
Predecessors: [0xfa, 0x463]
Successors: [0xc6d]
---
0x508 JUMPDEST
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 CALLER
0x512 AND
0x513 PUSH1 0x0
0x515 SWAP1
0x516 DUP2
0x517 MSTORE
0x518 PUSH1 0x7
0x51a PUSH1 0x20
0x51c MSTORE
0x51d PUSH1 0x40
0x51f SWAP1
0x520 SHA3
0x521 SLOAD
0x522 PUSH2 0x52b
0x525 SWAP1
0x526 CALLVALUE
0x527 PUSH2 0xc6d
0x52a JUMP
---
0x508: JUMPDEST 
0x509: V459 = 0x1
0x50b: V460 = 0xa0
0x50d: V461 = 0x2
0x50f: V462 = EXP 0x2 0xa0
0x510: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x511: V464 = CALLER
0x512: V465 = AND V464 0xffffffffffffffffffffffffffffffffffffffff
0x513: V466 = 0x0
0x517: M[0x0] = V465
0x518: V467 = 0x7
0x51a: V468 = 0x20
0x51c: M[0x20] = 0x7
0x51d: V469 = 0x40
0x520: V470 = SHA3 0x0 0x40
0x521: V471 = S[V470]
0x522: V472 = 0x52b
0x526: V473 = CALLVALUE
0x527: V474 = 0xc6d
0x52a: JUMP 0xc6d
---
Entry stack: [V10, 0x102]
Stack pops: 0
Stack additions: [0x52b, V471, V473]
Exit stack: [V10, 0x102, 0x52b, V471, V473]

================================

Block 0x52b
[0x52b:0x550]
---
Predecessors: [0xc80]
Successors: [0xc6d]
---
0x52b JUMPDEST
0x52c PUSH1 0x1
0x52e PUSH1 0xa0
0x530 PUSH1 0x2
0x532 EXP
0x533 SUB
0x534 CALLER
0x535 AND
0x536 PUSH1 0x0
0x538 SWAP1
0x539 DUP2
0x53a MSTORE
0x53b PUSH1 0x7
0x53d PUSH1 0x20
0x53f MSTORE
0x540 PUSH1 0x40
0x542 SWAP1
0x543 SHA3
0x544 SSTORE
0x545 PUSH1 0x6
0x547 SLOAD
0x548 PUSH2 0x551
0x54b SWAP1
0x54c CALLVALUE
0x54d PUSH2 0xc6d
0x550 JUMP
---
0x52b: JUMPDEST 
0x52c: V475 = 0x1
0x52e: V476 = 0xa0
0x530: V477 = 0x2
0x532: V478 = EXP 0x2 0xa0
0x533: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x534: V480 = CALLER
0x535: V481 = AND V480 0xffffffffffffffffffffffffffffffffffffffff
0x536: V482 = 0x0
0x53a: M[0x0] = V481
0x53b: V483 = 0x7
0x53d: V484 = 0x20
0x53f: M[0x20] = 0x7
0x540: V485 = 0x40
0x543: V486 = SHA3 0x0 0x40
0x544: S[V486] = S0
0x545: V487 = 0x6
0x547: V488 = S[0x6]
0x548: V489 = 0x551
0x54c: V490 = CALLVALUE
0x54d: V491 = 0xc6d
0x550: JUMP 0xc6d
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, {0x0, 0x860}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x551, V488, V490]
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, {0x0, 0x860}, S6, S5, S4, S3, S2, S1, 0x551, V488, V490]

================================

Block 0x551
[0x551:0x5bc]
---
Predecessors: [0xc80]
Successors: [0x5bd]
---
0x551 JUMPDEST
0x552 PUSH1 0x6
0x554 SSTORE
0x555 PUSH32 0x9386c90217c323f58030f9dadcbc938f807a940f4ff41cd4cead9562f5da7dc3
0x576 CALLVALUE
0x577 PUSH1 0x40
0x579 MLOAD
0x57a SWAP1
0x57b DUP2
0x57c MSTORE
0x57d PUSH1 0x20
0x57f ADD
0x580 PUSH1 0x40
0x582 MLOAD
0x583 DUP1
0x584 SWAP2
0x585 SUB
0x586 SWAP1
0x587 LOG1
0x588 CALLER
0x589 PUSH1 0x1
0x58b PUSH1 0xa0
0x58d PUSH1 0x2
0x58f EXP
0x590 SUB
0x591 AND
0x592 ADDRESS
0x593 PUSH1 0x1
0x595 PUSH1 0xa0
0x597 PUSH1 0x2
0x599 EXP
0x59a SUB
0x59b AND
0x59c PUSH1 0x0
0x59e DUP1
0x59f MLOAD
0x5a0 PUSH1 0x20
0x5a2 PUSH2 0xe80
0x5a5 DUP4
0x5a6 CODECOPY
0x5a7 DUP2
0x5a8 MLOAD
0x5a9 SWAP2
0x5aa MSTORE
0x5ab CALLVALUE
0x5ac PUSH1 0x40
0x5ae MLOAD
0x5af SWAP1
0x5b0 DUP2
0x5b1 MSTORE
0x5b2 PUSH1 0x20
0x5b4 ADD
0x5b5 PUSH1 0x40
0x5b7 MLOAD
0x5b8 DUP1
0x5b9 SWAP2
0x5ba SUB
0x5bb SWAP1
0x5bc LOG3
---
0x551: JUMPDEST 
0x552: V492 = 0x6
0x554: S[0x6] = S0
0x555: V493 = 0x9386c90217c323f58030f9dadcbc938f807a940f4ff41cd4cead9562f5da7dc3
0x576: V494 = CALLVALUE
0x577: V495 = 0x40
0x579: V496 = M[0x40]
0x57c: M[V496] = V494
0x57d: V497 = 0x20
0x57f: V498 = ADD 0x20 V496
0x580: V499 = 0x40
0x582: V500 = M[0x40]
0x585: V501 = SUB V498 V500
0x587: LOG V500 V501 0x9386c90217c323f58030f9dadcbc938f807a940f4ff41cd4cead9562f5da7dc3
0x588: V502 = CALLER
0x589: V503 = 0x1
0x58b: V504 = 0xa0
0x58d: V505 = 0x2
0x58f: V506 = EXP 0x2 0xa0
0x590: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x591: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x592: V509 = ADDRESS
0x593: V510 = 0x1
0x595: V511 = 0xa0
0x597: V512 = 0x2
0x599: V513 = EXP 0x2 0xa0
0x59a: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x59c: V516 = 0x0
0x59f: V517 = M[0x0]
0x5a0: V518 = 0x20
0x5a2: V519 = 0xe80
0x5a6: CODECOPY 0x0 0xe80 0x20
0x5a8: V520 = M[0x0]
0x5aa: M[0x0] = V517
0x5ab: V521 = CALLVALUE
0x5ac: V522 = 0x40
0x5ae: V523 = M[0x40]
0x5b1: M[V523] = V521
0x5b2: V524 = 0x20
0x5b4: V525 = ADD 0x20 V523
0x5b5: V526 = 0x40
0x5b7: V527 = M[0x40]
0x5ba: V528 = SUB V525 V527
0x5bc: LOG V527 V528 V520 V515 V508
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, {0x0, 0x860}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, {0x0, 0x860}, S6, S5, S4, S3, S2, S1]

================================

Block 0x5bd
[0x5bd:0x5be]
---
Predecessors: [0x551]
Successors: [0x102]
---
0x5bd JUMPDEST
0x5be JUMP
---
0x5bd: JUMPDEST 
0x5be: JUMP S0
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, S2, S1]

================================

Block 0x5bf
[0x5bf:0x60e]
---
Predecessors: [0x110]
Successors: [0x60f, 0x655]
---
0x5bf JUMPDEST
0x5c0 PUSH1 0x3
0x5c2 DUP1
0x5c3 SLOAD
0x5c4 PUSH1 0x1
0x5c6 DUP2
0x5c7 PUSH1 0x1
0x5c9 AND
0x5ca ISZERO
0x5cb PUSH2 0x100
0x5ce MUL
0x5cf SUB
0x5d0 AND
0x5d1 PUSH1 0x2
0x5d3 SWAP1
0x5d4 DIV
0x5d5 DUP1
0x5d6 PUSH1 0x1f
0x5d8 ADD
0x5d9 PUSH1 0x20
0x5db DUP1
0x5dc SWAP2
0x5dd DIV
0x5de MUL
0x5df PUSH1 0x20
0x5e1 ADD
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 SWAP1
0x5e6 DUP2
0x5e7 ADD
0x5e8 PUSH1 0x40
0x5ea MSTORE
0x5eb DUP1
0x5ec SWAP3
0x5ed SWAP2
0x5ee SWAP1
0x5ef DUP2
0x5f0 DUP2
0x5f1 MSTORE
0x5f2 PUSH1 0x20
0x5f4 ADD
0x5f5 DUP3
0x5f6 DUP1
0x5f7 SLOAD
0x5f8 PUSH1 0x1
0x5fa DUP2
0x5fb PUSH1 0x1
0x5fd AND
0x5fe ISZERO
0x5ff PUSH2 0x100
0x602 MUL
0x603 SUB
0x604 AND
0x605 PUSH1 0x2
0x607 SWAP1
0x608 DIV
0x609 DUP1
0x60a ISZERO
0x60b PUSH2 0x655
0x60e JUMPI
---
0x5bf: JUMPDEST 
0x5c0: V529 = 0x3
0x5c3: V530 = S[0x3]
0x5c4: V531 = 0x1
0x5c7: V532 = 0x1
0x5c9: V533 = AND 0x1 V530
0x5ca: V534 = ISZERO V533
0x5cb: V535 = 0x100
0x5ce: V536 = MUL 0x100 V534
0x5cf: V537 = SUB V536 0x1
0x5d0: V538 = AND V537 V530
0x5d1: V539 = 0x2
0x5d4: V540 = DIV V538 0x2
0x5d6: V541 = 0x1f
0x5d8: V542 = ADD 0x1f V540
0x5d9: V543 = 0x20
0x5dd: V544 = DIV V542 0x20
0x5de: V545 = MUL V544 0x20
0x5df: V546 = 0x20
0x5e1: V547 = ADD 0x20 V545
0x5e2: V548 = 0x40
0x5e4: V549 = M[0x40]
0x5e7: V550 = ADD V549 V547
0x5e8: V551 = 0x40
0x5ea: M[0x40] = V550
0x5f1: M[V549] = V540
0x5f2: V552 = 0x20
0x5f4: V553 = ADD 0x20 V549
0x5f7: V554 = S[0x3]
0x5f8: V555 = 0x1
0x5fb: V556 = 0x1
0x5fd: V557 = AND 0x1 V554
0x5fe: V558 = ISZERO V557
0x5ff: V559 = 0x100
0x602: V560 = MUL 0x100 V558
0x603: V561 = SUB V560 0x1
0x604: V562 = AND V561 V554
0x605: V563 = 0x2
0x608: V564 = DIV V562 0x2
0x60a: V565 = ISZERO V564
0x60b: V566 = 0x655
0x60e: JUMPI 0x655 V565
---
Entry stack: [V10, 0x118]
Stack pops: 0
Stack additions: [V549, 0x3, V540, V553, 0x3, V564]
Exit stack: [V10, 0x118, V549, 0x3, V540, V553, 0x3, V564]

================================

Block 0x60f
[0x60f:0x616]
---
Predecessors: [0x5bf]
Successors: [0x617, 0x62a]
---
0x60f DUP1
0x610 PUSH1 0x1f
0x612 LT
0x613 PUSH2 0x62a
0x616 JUMPI
---
0x610: V567 = 0x1f
0x612: V568 = LT 0x1f V564
0x613: V569 = 0x62a
0x616: JUMPI 0x62a V568
---
Entry stack: [V10, 0x118, V549, 0x3, V540, V553, 0x3, V564]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x118, V549, 0x3, V540, V553, 0x3, V564]

================================

Block 0x617
[0x617:0x629]
---
Predecessors: [0x60f]
Successors: [0x655]
---
0x617 PUSH2 0x100
0x61a DUP1
0x61b DUP4
0x61c SLOAD
0x61d DIV
0x61e MUL
0x61f DUP4
0x620 MSTORE
0x621 SWAP2
0x622 PUSH1 0x20
0x624 ADD
0x625 SWAP2
0x626 PUSH2 0x655
0x629 JUMP
---
0x617: V570 = 0x100
0x61c: V571 = S[0x3]
0x61d: V572 = DIV V571 0x100
0x61e: V573 = MUL V572 0x100
0x620: M[V553] = V573
0x622: V574 = 0x20
0x624: V575 = ADD 0x20 V553
0x626: V576 = 0x655
0x629: JUMP 0x655
---
Entry stack: [V10, 0x118, V549, 0x3, V540, V553, 0x3, V564]
Stack pops: 3
Stack additions: [V575, S1, S0]
Exit stack: [V10, 0x118, V549, 0x3, V540, V575, 0x3, V564]

================================

Block 0x62a
[0x62a:0x637]
---
Predecessors: [0x60f, 0x8dd, 0xb50]
Successors: [0x638]
---
0x62a JUMPDEST
0x62b DUP3
0x62c ADD
0x62d SWAP2
0x62e SWAP1
0x62f PUSH1 0x0
0x631 MSTORE
0x632 PUSH1 0x20
0x634 PUSH1 0x0
0x636 SHA3
0x637 SWAP1
---
0x62a: JUMPDEST 
0x62c: V577 = ADD S2 S0
0x62f: V578 = 0x0
0x631: M[0x0] = {0x2, 0x3, 0x4}
0x632: V579 = 0x20
0x634: V580 = 0x0
0x636: V581 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x118, S5, {0x2, 0x3, 0x4}, S3, S2, {0x2, 0x3, 0x4}, S0]
Stack pops: 3
Stack additions: [V577, V581, S2]
Exit stack: [V10, 0x118, S5, {0x2, 0x3, 0x4}, S3, V577, V581, S2]

================================

Block 0x638
[0x638:0x64b]
---
Predecessors: [0x62a, 0x638, 0x906, 0xb79]
Successors: [0x638, 0x64c]
---
0x638 JUMPDEST
0x639 DUP2
0x63a SLOAD
0x63b DUP2
0x63c MSTORE
0x63d SWAP1
0x63e PUSH1 0x1
0x640 ADD
0x641 SWAP1
0x642 PUSH1 0x20
0x644 ADD
0x645 DUP1
0x646 DUP4
0x647 GT
0x648 PUSH2 0x638
0x64b JUMPI
---
0x638: JUMPDEST 
0x63a: V582 = S[S1]
0x63c: M[S0] = V582
0x63e: V583 = 0x1
0x640: V584 = ADD 0x1 S1
0x642: V585 = 0x20
0x644: V586 = ADD 0x20 S0
0x647: V587 = GT S2 V586
0x648: V588 = 0x638
0x64b: JUMPI 0x638 V587
---
Entry stack: [V10, 0x118, S5, {0x2, 0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V584, V586]
Exit stack: [V10, 0x118, S5, {0x2, 0x3, 0x4}, S3, S2, V584, V586]

================================

Block 0x64c
[0x64c:0x654]
---
Predecessors: [0x638]
Successors: [0x655]
---
0x64c DUP3
0x64d SWAP1
0x64e SUB
0x64f PUSH1 0x1f
0x651 AND
0x652 DUP3
0x653 ADD
0x654 SWAP2
---
0x64e: V589 = SUB V586 S2
0x64f: V590 = 0x1f
0x651: V591 = AND 0x1f V589
0x653: V592 = ADD S2 V591
---
Entry stack: [V10, 0x118, S5, {0x2, 0x3, 0x4}, S3, S2, V584, V586]
Stack pops: 3
Stack additions: [V592, S1, S2]
Exit stack: [V10, 0x118, S5, {0x2, 0x3, 0x4}, S3, V592, V584, S2]

================================

Block 0x655
[0x655:0x65c]
---
Predecessors: [0x5bf, 0x617, 0x64c, 0x88d, 0x8e5, 0xb00, 0xb58]
Successors: [0x118]
---
0x655 JUMPDEST
0x656 POP
0x657 POP
0x658 POP
0x659 POP
0x65a POP
0x65b DUP2
0x65c JUMP
---
0x655: JUMPDEST 
0x65c: JUMP 0x118
---
Entry stack: [V10, 0x118, S5, {0x2, 0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x118, S5]

================================

Block 0x65d
[0x65d:0x670]
---
Predecessors: [0x19b]
Successors: [0x671, 0x675]
---
0x65d JUMPDEST
0x65e PUSH1 0x0
0x660 DUP3
0x661 PUSH1 0x1
0x663 PUSH1 0xa0
0x665 PUSH1 0x2
0x667 EXP
0x668 SUB
0x669 DUP2
0x66a AND
0x66b ISZERO
0x66c ISZERO
0x66d PUSH2 0x675
0x670 JUMPI
---
0x65d: JUMPDEST 
0x65e: V593 = 0x0
0x661: V594 = 0x1
0x663: V595 = 0xa0
0x665: V596 = 0x2
0x667: V597 = EXP 0x2 0xa0
0x668: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66a: V599 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x66b: V600 = ISZERO V599
0x66c: V601 = ISZERO V600
0x66d: V602 = 0x675
0x670: JUMPI 0x675 V601
---
Entry stack: [V10, 0x1b2, V125, V127]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V10, 0x1b2, V125, V127, 0x0, V125]

================================

Block 0x671
[0x671:0x674]
---
Predecessors: [0x65d]
Successors: []
---
0x671 PUSH1 0x0
0x673 DUP1
0x674 REVERT
---
0x671: V603 = 0x0
0x674: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b2, V125, V127, 0x0, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V125, V127, 0x0, V125]

================================

Block 0x675
[0x675:0x67c]
---
Predecessors: [0x65d]
Successors: [0x67d, 0x6a5]
---
0x675 JUMPDEST
0x676 DUP3
0x677 ISZERO
0x678 DUP1
0x679 PUSH2 0x6a5
0x67c JUMPI
---
0x675: JUMPDEST 
0x677: V604 = ISZERO V127
0x679: V605 = 0x6a5
0x67c: JUMPI 0x6a5 V604
---
Entry stack: [V10, 0x1b2, V125, V127, 0x0, V125]
Stack pops: 3
Stack additions: [S2, S1, S0, V604]
Exit stack: [V10, 0x1b2, V125, V127, 0x0, V125, V604]

================================

Block 0x67d
[0x67d:0x6a4]
---
Predecessors: [0x675]
Successors: [0x6a5]
---
0x67d POP
0x67e PUSH1 0x1
0x680 PUSH1 0xa0
0x682 PUSH1 0x2
0x684 EXP
0x685 SUB
0x686 CALLER
0x687 DUP2
0x688 AND
0x689 PUSH1 0x0
0x68b SWAP1
0x68c DUP2
0x68d MSTORE
0x68e PUSH1 0x8
0x690 PUSH1 0x20
0x692 SWAP1
0x693 DUP2
0x694 MSTORE
0x695 PUSH1 0x40
0x697 DUP1
0x698 DUP4
0x699 SHA3
0x69a SWAP4
0x69b DUP9
0x69c AND
0x69d DUP4
0x69e MSTORE
0x69f SWAP3
0x6a0 SWAP1
0x6a1 MSTORE
0x6a2 SHA3
0x6a3 SLOAD
0x6a4 ISZERO
---
0x67e: V606 = 0x1
0x680: V607 = 0xa0
0x682: V608 = 0x2
0x684: V609 = EXP 0x2 0xa0
0x685: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x686: V611 = CALLER
0x688: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x689: V613 = 0x0
0x68d: M[0x0] = V612
0x68e: V614 = 0x8
0x690: V615 = 0x20
0x694: M[0x20] = 0x8
0x695: V616 = 0x40
0x699: V617 = SHA3 0x0 0x40
0x69c: V618 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x69e: M[0x0] = V618
0x6a1: M[0x20] = V617
0x6a2: V619 = SHA3 0x0 0x40
0x6a3: V620 = S[V619]
0x6a4: V621 = ISZERO V620
---
Entry stack: [V10, 0x1b2, V125, V127, 0x0, V125, V604]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V621]
Exit stack: [V10, 0x1b2, V125, V127, 0x0, V125, V621]

================================

Block 0x6a5
[0x6a5:0x6ab]
---
Predecessors: [0x675, 0x67d]
Successors: [0x6ac, 0x6b0]
---
0x6a5 JUMPDEST
0x6a6 ISZERO
0x6a7 ISZERO
0x6a8 PUSH2 0x6b0
0x6ab JUMPI
---
0x6a5: JUMPDEST 
0x6a6: V622 = ISZERO S0
0x6a7: V623 = ISZERO V622
0x6a8: V624 = 0x6b0
0x6ab: JUMPI 0x6b0 V623
---
Entry stack: [V10, 0x1b2, V125, V127, 0x0, V125, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b2, V125, V127, 0x0, V125]

================================

Block 0x6ac
[0x6ac:0x6af]
---
Predecessors: [0x6a5]
Successors: []
---
0x6ac PUSH1 0x0
0x6ae DUP1
0x6af REVERT
---
0x6ac: V625 = 0x0
0x6af: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b2, V125, V127, 0x0, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V125, V127, 0x0, V125]

================================

Block 0x6b0
[0x6b0:0x714]
---
Predecessors: [0x6a5]
Successors: [0x715]
---
0x6b0 JUMPDEST
0x6b1 PUSH1 0x1
0x6b3 PUSH1 0xa0
0x6b5 PUSH1 0x2
0x6b7 EXP
0x6b8 SUB
0x6b9 CALLER
0x6ba DUP2
0x6bb AND
0x6bc PUSH1 0x0
0x6be DUP2
0x6bf DUP2
0x6c0 MSTORE
0x6c1 PUSH1 0x8
0x6c3 PUSH1 0x20
0x6c5 SWAP1
0x6c6 DUP2
0x6c7 MSTORE
0x6c8 PUSH1 0x40
0x6ca DUP1
0x6cb DUP4
0x6cc SHA3
0x6cd SWAP5
0x6ce DUP10
0x6cf AND
0x6d0 DUP1
0x6d1 DUP5
0x6d2 MSTORE
0x6d3 SWAP5
0x6d4 SWAP1
0x6d5 SWAP2
0x6d6 MSTORE
0x6d7 SWAP1
0x6d8 DUP2
0x6d9 SWAP1
0x6da SHA3
0x6db DUP7
0x6dc SWAP1
0x6dd SSTORE
0x6de PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6ff SWAP1
0x700 DUP7
0x701 SWAP1
0x702 MLOAD
0x703 SWAP1
0x704 DUP2
0x705 MSTORE
0x706 PUSH1 0x20
0x708 ADD
0x709 PUSH1 0x40
0x70b MLOAD
0x70c DUP1
0x70d SWAP2
0x70e SUB
0x70f SWAP1
0x710 LOG3
0x711 PUSH1 0x1
0x713 SWAP2
0x714 POP
---
0x6b0: JUMPDEST 
0x6b1: V626 = 0x1
0x6b3: V627 = 0xa0
0x6b5: V628 = 0x2
0x6b7: V629 = EXP 0x2 0xa0
0x6b8: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b9: V631 = CALLER
0x6bb: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x6bc: V633 = 0x0
0x6c0: M[0x0] = V632
0x6c1: V634 = 0x8
0x6c3: V635 = 0x20
0x6c7: M[0x20] = 0x8
0x6c8: V636 = 0x40
0x6cc: V637 = SHA3 0x0 0x40
0x6cf: V638 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: M[0x0] = V638
0x6d6: M[0x20] = V637
0x6da: V639 = SHA3 0x0 0x40
0x6dd: S[V639] = V127
0x6de: V640 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x702: V641 = M[0x40]
0x705: M[V641] = V127
0x706: V642 = 0x20
0x708: V643 = ADD 0x20 V641
0x709: V644 = 0x40
0x70b: V645 = M[0x40]
0x70e: V646 = SUB V643 V645
0x710: LOG V645 V646 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V632 V638
0x711: V647 = 0x1
---
Entry stack: [V10, 0x1b2, V125, V127, 0x0, V125]
Stack pops: 4
Stack additions: [S3, S2, 0x1, S0]
Exit stack: [V10, 0x1b2, V125, V127, 0x1, V125]

================================

Block 0x715
[0x715:0x715]
---
Predecessors: [0x6b0]
Successors: [0x716]
---
0x715 JUMPDEST
---
0x715: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V125, V127, 0x1, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V125, V127, 0x1, V125]

================================

Block 0x716
[0x716:0x71c]
---
Predecessors: [0x715]
Successors: [0x1b2]
---
0x716 JUMPDEST
0x717 POP
0x718 SWAP3
0x719 SWAP2
0x71a POP
0x71b POP
0x71c JUMP
---
0x716: JUMPDEST 
0x71c: JUMP 0x1b2
---
Entry stack: [V10, 0x1b2, V125, V127, 0x1, V125]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x1]

================================

Block 0x71d
[0x71d:0x722]
---
Predecessors: [0x1d1]
Successors: [0x1d9]
---
0x71d JUMPDEST
0x71e PUSH1 0x6
0x720 SLOAD
0x721 DUP2
0x722 JUMP
---
0x71d: JUMPDEST 
0x71e: V648 = 0x6
0x720: V649 = S[0x6]
0x722: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9]
Stack pops: 1
Stack additions: [S0, V649]
Exit stack: [V10, 0x1d9, V649]

================================

Block 0x723
[0x723:0x740]
---
Predecessors: [0x1f6, 0x876]
Successors: [0x741, 0x745]
---
0x723 JUMPDEST
0x724 DUP2
0x725 ADDRESS
0x726 PUSH1 0x1
0x728 PUSH1 0xa0
0x72a PUSH1 0x2
0x72c EXP
0x72d SUB
0x72e AND
0x72f DUP2
0x730 PUSH1 0x1
0x732 PUSH1 0xa0
0x734 PUSH1 0x2
0x736 EXP
0x737 SUB
0x738 AND
0x739 EQ
0x73a ISZERO
0x73b ISZERO
0x73c ISZERO
0x73d PUSH2 0x745
0x740 JUMPI
---
0x723: JUMPDEST 
0x725: V650 = ADDRESS
0x726: V651 = 0x1
0x728: V652 = 0xa0
0x72a: V653 = 0x2
0x72c: V654 = EXP 0x2 0xa0
0x72d: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72e: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x730: V657 = 0x1
0x732: V658 = 0xa0
0x734: V659 = 0x2
0x736: V660 = EXP 0x2 0xa0
0x737: V661 = SUB 0x10000000000000000000000000000000000000000 0x1
0x738: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x739: V663 = EQ V662 V656
0x73a: V664 = ISZERO V663
0x73b: V665 = ISZERO V664
0x73c: V666 = ISZERO V665
0x73d: V667 = 0x745
0x740: JUMPI 0x745 V666
---
Entry stack: [V10, 0x102, S3, {0x102, 0x880}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V10, 0x102, S3, {0x102, 0x880}, S1, S0, S1]

================================

Block 0x741
[0x741:0x744]
---
Predecessors: [0x723]
Successors: []
---
0x741 PUSH1 0x0
0x743 DUP1
0x744 REVERT
---
0x741: V668 = 0x0
0x744: REVERT 0x0 0x0
---
Entry stack: [V10, 0x102, S4, {0x102, 0x880}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, S4, {0x102, 0x880}, S2, S1, S0]

================================

Block 0x745
[0x745:0x767]
---
Predecessors: [0x723]
Successors: [0xc87]
---
0x745 JUMPDEST
0x746 PUSH1 0x1
0x748 PUSH1 0xa0
0x74a PUSH1 0x2
0x74c EXP
0x74d SUB
0x74e CALLER
0x74f AND
0x750 PUSH1 0x0
0x752 SWAP1
0x753 DUP2
0x754 MSTORE
0x755 PUSH1 0x7
0x757 PUSH1 0x20
0x759 MSTORE
0x75a PUSH1 0x40
0x75c SWAP1
0x75d SHA3
0x75e SLOAD
0x75f PUSH2 0x768
0x762 SWAP1
0x763 DUP4
0x764 PUSH2 0xc87
0x767 JUMP
---
0x745: JUMPDEST 
0x746: V669 = 0x1
0x748: V670 = 0xa0
0x74a: V671 = 0x2
0x74c: V672 = EXP 0x2 0xa0
0x74d: V673 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74e: V674 = CALLER
0x74f: V675 = AND V674 0xffffffffffffffffffffffffffffffffffffffff
0x750: V676 = 0x0
0x754: M[0x0] = V675
0x755: V677 = 0x7
0x757: V678 = 0x20
0x759: M[0x20] = 0x7
0x75a: V679 = 0x40
0x75d: V680 = SHA3 0x0 0x40
0x75e: V681 = S[V680]
0x75f: V682 = 0x768
0x764: V683 = 0xc87
0x767: JUMP 0xc87
---
Entry stack: [V10, 0x102, S4, {0x102, 0x880}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x768, V681, S1]
Exit stack: [V10, 0x102, S4, {0x102, 0x880}, S2, S1, S0, 0x768, V681, S1]

================================

Block 0x768
[0x768:0x78d]
---
Predecessors: [0xc98]
Successors: [0xc87]
---
0x768 JUMPDEST
0x769 PUSH1 0x1
0x76b PUSH1 0xa0
0x76d PUSH1 0x2
0x76f EXP
0x770 SUB
0x771 CALLER
0x772 AND
0x773 PUSH1 0x0
0x775 SWAP1
0x776 DUP2
0x777 MSTORE
0x778 PUSH1 0x7
0x77a PUSH1 0x20
0x77c MSTORE
0x77d PUSH1 0x40
0x77f SWAP1
0x780 SHA3
0x781 SSTORE
0x782 PUSH1 0x6
0x784 SLOAD
0x785 PUSH2 0x78e
0x788 SWAP1
0x789 DUP4
0x78a PUSH2 0xc87
0x78d JUMP
---
0x768: JUMPDEST 
0x769: V684 = 0x1
0x76b: V685 = 0xa0
0x76d: V686 = 0x2
0x76f: V687 = EXP 0x2 0xa0
0x770: V688 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V689 = CALLER
0x772: V690 = AND V689 0xffffffffffffffffffffffffffffffffffffffff
0x773: V691 = 0x0
0x777: M[0x0] = V690
0x778: V692 = 0x7
0x77a: V693 = 0x20
0x77c: M[0x20] = 0x7
0x77d: V694 = 0x40
0x780: V695 = SHA3 0x0 0x40
0x781: S[V695] = V1177
0x782: V696 = 0x6
0x784: V697 = S[0x6]
0x785: V698 = 0x78e
0x78a: V699 = 0xc87
0x78d: JUMP 0xc87
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1177]
Stack pops: 3
Stack additions: [S2, S1, 0x78e, V697, S2]
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x78e, V697, S2]

================================

Block 0x78e
[0x78e:0x7bd]
---
Predecessors: [0xc98]
Successors: [0x7be, 0x7c2]
---
0x78e JUMPDEST
0x78f PUSH1 0x6
0x791 SSTORE
0x792 PUSH1 0x1
0x794 PUSH1 0xa0
0x796 PUSH1 0x2
0x798 EXP
0x799 SUB
0x79a DUP4
0x79b AND
0x79c DUP3
0x79d ISZERO
0x79e PUSH2 0x8fc
0x7a1 MUL
0x7a2 DUP4
0x7a3 PUSH1 0x40
0x7a5 MLOAD
0x7a6 PUSH1 0x0
0x7a8 PUSH1 0x40
0x7aa MLOAD
0x7ab DUP1
0x7ac DUP4
0x7ad SUB
0x7ae DUP2
0x7af DUP6
0x7b0 DUP9
0x7b1 DUP9
0x7b2 CALL
0x7b3 SWAP4
0x7b4 POP
0x7b5 POP
0x7b6 POP
0x7b7 POP
0x7b8 ISZERO
0x7b9 ISZERO
0x7ba PUSH2 0x7c2
0x7bd JUMPI
---
0x78e: JUMPDEST 
0x78f: V700 = 0x6
0x791: S[0x6] = S0
0x792: V701 = 0x1
0x794: V702 = 0xa0
0x796: V703 = 0x2
0x798: V704 = EXP 0x2 0xa0
0x799: V705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79b: V706 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x79d: V707 = ISZERO S2
0x79e: V708 = 0x8fc
0x7a1: V709 = MUL 0x8fc V707
0x7a3: V710 = 0x40
0x7a5: V711 = M[0x40]
0x7a6: V712 = 0x0
0x7a8: V713 = 0x40
0x7aa: V714 = M[0x40]
0x7ad: V715 = SUB V711 V714
0x7b2: V716 = CALL V709 V706 S2 V714 V715 V714 0x0
0x7b8: V717 = ISZERO V716
0x7b9: V718 = ISZERO V717
0x7ba: V719 = 0x7c2
0x7bd: JUMPI 0x7c2 V718
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x7be
[0x7be:0x7c1]
---
Predecessors: [0x78e]
Successors: []
---
0x7be PUSH1 0x0
0x7c0 DUP1
0x7c1 REVERT
---
0x7be: V720 = 0x0
0x7c1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7c2
[0x7c2:0x82a]
---
Predecessors: [0x78e]
Successors: [0x82b]
---
0x7c2 JUMPDEST
0x7c3 ADDRESS
0x7c4 PUSH1 0x1
0x7c6 PUSH1 0xa0
0x7c8 PUSH1 0x2
0x7ca EXP
0x7cb SUB
0x7cc AND
0x7cd CALLER
0x7ce PUSH1 0x1
0x7d0 PUSH1 0xa0
0x7d2 PUSH1 0x2
0x7d4 EXP
0x7d5 SUB
0x7d6 AND
0x7d7 PUSH1 0x0
0x7d9 DUP1
0x7da MLOAD
0x7db PUSH1 0x20
0x7dd PUSH2 0xe80
0x7e0 DUP4
0x7e1 CODECOPY
0x7e2 DUP2
0x7e3 MLOAD
0x7e4 SWAP2
0x7e5 MSTORE
0x7e6 DUP5
0x7e7 PUSH1 0x40
0x7e9 MLOAD
0x7ea SWAP1
0x7eb DUP2
0x7ec MSTORE
0x7ed PUSH1 0x20
0x7ef ADD
0x7f0 PUSH1 0x40
0x7f2 MLOAD
0x7f3 DUP1
0x7f4 SWAP2
0x7f5 SUB
0x7f6 SWAP1
0x7f7 LOG3
0x7f8 PUSH32 0x9a1b418bc061a5d80270261562e6986a35d995f8051145f277be16103abd3453
0x819 DUP3
0x81a PUSH1 0x40
0x81c MLOAD
0x81d SWAP1
0x81e DUP2
0x81f MSTORE
0x820 PUSH1 0x20
0x822 ADD
0x823 PUSH1 0x40
0x825 MLOAD
0x826 DUP1
0x827 SWAP2
0x828 SUB
0x829 SWAP1
0x82a LOG1
---
0x7c2: JUMPDEST 
0x7c3: V721 = ADDRESS
0x7c4: V722 = 0x1
0x7c6: V723 = 0xa0
0x7c8: V724 = 0x2
0x7ca: V725 = EXP 0x2 0xa0
0x7cb: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cc: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0x7cd: V728 = CALLER
0x7ce: V729 = 0x1
0x7d0: V730 = 0xa0
0x7d2: V731 = 0x2
0x7d4: V732 = EXP 0x2 0xa0
0x7d5: V733 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d6: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V728
0x7d7: V735 = 0x0
0x7da: V736 = M[0x0]
0x7db: V737 = 0x20
0x7dd: V738 = 0xe80
0x7e1: CODECOPY 0x0 0xe80 0x20
0x7e3: V739 = M[0x0]
0x7e5: M[0x0] = V736
0x7e7: V740 = 0x40
0x7e9: V741 = M[0x40]
0x7ec: M[V741] = S1
0x7ed: V742 = 0x20
0x7ef: V743 = ADD 0x20 V741
0x7f0: V744 = 0x40
0x7f2: V745 = M[0x40]
0x7f5: V746 = SUB V743 V745
0x7f7: LOG V745 V746 V739 V734 V727
0x7f8: V747 = 0x9a1b418bc061a5d80270261562e6986a35d995f8051145f277be16103abd3453
0x81a: V748 = 0x40
0x81c: V749 = M[0x40]
0x81f: M[V749] = S1
0x820: V750 = 0x20
0x822: V751 = ADD 0x20 V749
0x823: V752 = 0x40
0x825: V753 = M[0x40]
0x828: V754 = SUB V751 V753
0x82a: LOG V753 V754 0x9a1b418bc061a5d80270261562e6986a35d995f8051145f277be16103abd3453
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x82b
[0x82b:0x82b]
---
Predecessors: [0x7c2]
Successors: [0x82c]
---
0x82b JUMPDEST
---
0x82b: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x82c
[0x82c:0x830]
---
Predecessors: [0x82b]
Successors: [0x102, 0x880]
---
0x82c JUMPDEST
0x82d POP
0x82e POP
0x82f POP
0x830 JUMP
---
0x82c: JUMPDEST 
0x830: JUMP S3
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x831
[0x831:0x850]
---
Predecessors: [0x21a]
Successors: [0x851, 0x855]
---
0x831 JUMPDEST
0x832 PUSH1 0x0
0x834 DUP3
0x835 ADDRESS
0x836 PUSH1 0x1
0x838 PUSH1 0xa0
0x83a PUSH1 0x2
0x83c EXP
0x83d SUB
0x83e AND
0x83f DUP2
0x840 PUSH1 0x1
0x842 PUSH1 0xa0
0x844 PUSH1 0x2
0x846 EXP
0x847 SUB
0x848 AND
0x849 EQ
0x84a ISZERO
0x84b ISZERO
0x84c ISZERO
0x84d PUSH2 0x855
0x850 JUMPI
---
0x831: JUMPDEST 
0x832: V755 = 0x0
0x835: V756 = ADDRESS
0x836: V757 = 0x1
0x838: V758 = 0xa0
0x83a: V759 = 0x2
0x83c: V760 = EXP 0x2 0xa0
0x83d: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83e: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0x840: V763 = 0x1
0x842: V764 = 0xa0
0x844: V765 = 0x2
0x846: V766 = EXP 0x2 0xa0
0x847: V767 = SUB 0x10000000000000000000000000000000000000000 0x1
0x848: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x849: V769 = EQ V768 V762
0x84a: V770 = ISZERO V769
0x84b: V771 = ISZERO V770
0x84c: V772 = ISZERO V771
0x84d: V773 = 0x855
0x850: JUMPI 0x855 V772
---
Entry stack: [V10, 0x1b2, V179, V182, V184]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182]

================================

Block 0x851
[0x851:0x854]
---
Predecessors: [0x831]
Successors: []
---
0x851 PUSH1 0x0
0x853 DUP1
0x854 REVERT
---
0x851: V774 = 0x0
0x854: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182]

================================

Block 0x855
[0x855:0x85f]
---
Predecessors: [0x831]
Successors: [0xc9e]
---
0x855 JUMPDEST
0x856 PUSH2 0x860
0x859 DUP6
0x85a DUP6
0x85b DUP6
0x85c PUSH2 0xc9e
0x85f JUMP
---
0x855: JUMPDEST 
0x856: V775 = 0x860
0x85c: V776 = 0xc9e
0x85f: JUMP 0xc9e
---
Entry stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x860, S4, S3, S2]
Exit stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184]

================================

Block 0x860
[0x860:0x866]
---
Predecessors: [0xdba]
Successors: [0x867, 0x868]
---
0x860 JUMPDEST
0x861 ISZERO
0x862 ISZERO
0x863 PUSH2 0x868
0x866 JUMPI
---
0x860: JUMPDEST 
0x861: V777 = ISZERO 0x1
0x862: V778 = ISZERO 0x0
0x863: V779 = 0x868
0x866: JUMPI 0x868 0x1
---
Entry stack: [V10, 0x1b2, V179, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S4, S3, S2, S1]

================================

Block 0x867
[0x867:0x867]
---
Predecessors: [0x860]
Successors: []
---
0x867 INVALID
---
0x867: INVALID 
---
Entry stack: [V10, 0x1b2, V179, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S3, S2, S1, S0]

================================

Block 0x868
[0x868:0x86c]
---
Predecessors: [0x860]
Successors: [0x86d]
---
0x868 JUMPDEST
0x869 PUSH1 0x1
0x86b SWAP2
0x86c POP
---
0x868: JUMPDEST 
0x869: V780 = 0x1
---
Entry stack: [V10, 0x1b2, V179, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V10, 0x1b2, V179, S3, S2, 0x1, S0]

================================

Block 0x86d
[0x86d:0x86d]
---
Predecessors: [0x868]
Successors: [0x86e]
---
0x86d JUMPDEST
---
0x86d: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S3, S2, 0x1, S0]

================================

Block 0x86e
[0x86e:0x875]
---
Predecessors: [0x86d]
Successors: [0x1b2]
---
0x86e JUMPDEST
0x86f POP
0x870 SWAP4
0x871 SWAP3
0x872 POP
0x873 POP
0x874 POP
0x875 JUMP
---
0x86e: JUMPDEST 
0x875: JUMP 0x1b2
---
Entry stack: [V10, 0x1b2, V179, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V10, 0x1]

================================

Block 0x876
[0x876:0x87f]
---
Predecessors: [0x256]
Successors: [0x723]
---
0x876 JUMPDEST
0x877 PUSH2 0x880
0x87a CALLER
0x87b DUP3
0x87c PUSH2 0x723
0x87f JUMP
---
0x876: JUMPDEST 
0x877: V781 = 0x880
0x87a: V782 = CALLER
0x87c: V783 = 0x723
0x87f: JUMP 0x723
---
Entry stack: [V10, 0x102, V201]
Stack pops: 1
Stack additions: [S0, 0x880, V782, S0]
Exit stack: [V10, 0x102, V201, 0x880, V782, V201]

================================

Block 0x880
[0x880:0x880]
---
Predecessors: [0x82c]
Successors: [0x881]
---
0x880 JUMPDEST
---
0x880: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x881
[0x881:0x883]
---
Predecessors: [0x880]
Successors: [0x102]
---
0x881 JUMPDEST
0x882 POP
0x883 JUMP
---
0x881: JUMPDEST 
0x883: JUMP S1
---
Entry stack: [V10, 0x1b2, V179, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S6, S5, S4, S3, S2]

================================

Block 0x884
[0x884:0x88c]
---
Predecessors: [0x26e]
Successors: [0x276]
---
0x884 JUMPDEST
0x885 PUSH1 0x5
0x887 SLOAD
0x888 PUSH1 0xff
0x88a AND
0x88b DUP2
0x88c JUMP
---
0x884: JUMPDEST 
0x885: V784 = 0x5
0x887: V785 = S[0x5]
0x888: V786 = 0xff
0x88a: V787 = AND 0xff V785
0x88c: JUMP 0x276
---
Entry stack: [V10, 0x276]
Stack pops: 1
Stack additions: [S0, V787]
Exit stack: [V10, 0x276, V787]

================================

Block 0x88d
[0x88d:0x8dc]
---
Predecessors: [0x297]
Successors: [0x655, 0x8dd]
---
0x88d JUMPDEST
0x88e PUSH1 0x2
0x890 DUP1
0x891 SLOAD
0x892 PUSH1 0x1
0x894 DUP2
0x895 PUSH1 0x1
0x897 AND
0x898 ISZERO
0x899 PUSH2 0x100
0x89c MUL
0x89d SUB
0x89e AND
0x89f PUSH1 0x2
0x8a1 SWAP1
0x8a2 DIV
0x8a3 DUP1
0x8a4 PUSH1 0x1f
0x8a6 ADD
0x8a7 PUSH1 0x20
0x8a9 DUP1
0x8aa SWAP2
0x8ab DIV
0x8ac MUL
0x8ad PUSH1 0x20
0x8af ADD
0x8b0 PUSH1 0x40
0x8b2 MLOAD
0x8b3 SWAP1
0x8b4 DUP2
0x8b5 ADD
0x8b6 PUSH1 0x40
0x8b8 MSTORE
0x8b9 DUP1
0x8ba SWAP3
0x8bb SWAP2
0x8bc SWAP1
0x8bd DUP2
0x8be DUP2
0x8bf MSTORE
0x8c0 PUSH1 0x20
0x8c2 ADD
0x8c3 DUP3
0x8c4 DUP1
0x8c5 SLOAD
0x8c6 PUSH1 0x1
0x8c8 DUP2
0x8c9 PUSH1 0x1
0x8cb AND
0x8cc ISZERO
0x8cd PUSH2 0x100
0x8d0 MUL
0x8d1 SUB
0x8d2 AND
0x8d3 PUSH1 0x2
0x8d5 SWAP1
0x8d6 DIV
0x8d7 DUP1
0x8d8 ISZERO
0x8d9 PUSH2 0x655
0x8dc JUMPI
---
0x88d: JUMPDEST 
0x88e: V788 = 0x2
0x891: V789 = S[0x2]
0x892: V790 = 0x1
0x895: V791 = 0x1
0x897: V792 = AND 0x1 V789
0x898: V793 = ISZERO V792
0x899: V794 = 0x100
0x89c: V795 = MUL 0x100 V793
0x89d: V796 = SUB V795 0x1
0x89e: V797 = AND V796 V789
0x89f: V798 = 0x2
0x8a2: V799 = DIV V797 0x2
0x8a4: V800 = 0x1f
0x8a6: V801 = ADD 0x1f V799
0x8a7: V802 = 0x20
0x8ab: V803 = DIV V801 0x20
0x8ac: V804 = MUL V803 0x20
0x8ad: V805 = 0x20
0x8af: V806 = ADD 0x20 V804
0x8b0: V807 = 0x40
0x8b2: V808 = M[0x40]
0x8b5: V809 = ADD V808 V806
0x8b6: V810 = 0x40
0x8b8: M[0x40] = V809
0x8bf: M[V808] = V799
0x8c0: V811 = 0x20
0x8c2: V812 = ADD 0x20 V808
0x8c5: V813 = S[0x2]
0x8c6: V814 = 0x1
0x8c9: V815 = 0x1
0x8cb: V816 = AND 0x1 V813
0x8cc: V817 = ISZERO V816
0x8cd: V818 = 0x100
0x8d0: V819 = MUL 0x100 V817
0x8d1: V820 = SUB V819 0x1
0x8d2: V821 = AND V820 V813
0x8d3: V822 = 0x2
0x8d6: V823 = DIV V821 0x2
0x8d8: V824 = ISZERO V823
0x8d9: V825 = 0x655
0x8dc: JUMPI 0x655 V824
---
Entry stack: [V10, 0x118]
Stack pops: 0
Stack additions: [V808, 0x2, V799, V812, 0x2, V823]
Exit stack: [V10, 0x118, V808, 0x2, V799, V812, 0x2, V823]

================================

Block 0x8dd
[0x8dd:0x8e4]
---
Predecessors: [0x88d]
Successors: [0x62a, 0x8e5]
---
0x8dd DUP1
0x8de PUSH1 0x1f
0x8e0 LT
0x8e1 PUSH2 0x62a
0x8e4 JUMPI
---
0x8de: V826 = 0x1f
0x8e0: V827 = LT 0x1f V823
0x8e1: V828 = 0x62a
0x8e4: JUMPI 0x62a V827
---
Entry stack: [V10, 0x118, V808, 0x2, V799, V812, 0x2, V823]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x118, V808, 0x2, V799, V812, 0x2, V823]

================================

Block 0x8e5
[0x8e5:0x8f7]
---
Predecessors: [0x8dd]
Successors: [0x655]
---
0x8e5 PUSH2 0x100
0x8e8 DUP1
0x8e9 DUP4
0x8ea SLOAD
0x8eb DIV
0x8ec MUL
0x8ed DUP4
0x8ee MSTORE
0x8ef SWAP2
0x8f0 PUSH1 0x20
0x8f2 ADD
0x8f3 SWAP2
0x8f4 PUSH2 0x655
0x8f7 JUMP
---
0x8e5: V829 = 0x100
0x8ea: V830 = S[0x2]
0x8eb: V831 = DIV V830 0x100
0x8ec: V832 = MUL V831 0x100
0x8ee: M[V812] = V832
0x8f0: V833 = 0x20
0x8f2: V834 = ADD 0x20 V812
0x8f4: V835 = 0x655
0x8f7: JUMP 0x655
---
Entry stack: [V10, 0x118, V808, 0x2, V799, V812, 0x2, V823]
Stack pops: 3
Stack additions: [V834, S1, S0]
Exit stack: [V10, 0x118, V808, 0x2, V799, V834, 0x2, V823]

================================

Block 0x8f8
[0x8f8:0x905]
---
Predecessors: []
Successors: [0x906]
---
0x8f8 JUMPDEST
0x8f9 DUP3
0x8fa ADD
0x8fb SWAP2
0x8fc SWAP1
0x8fd PUSH1 0x0
0x8ff MSTORE
0x900 PUSH1 0x20
0x902 PUSH1 0x0
0x904 SHA3
0x905 SWAP1
---
0x8f8: JUMPDEST 
0x8fa: V836 = ADD S2 S0
0x8fd: V837 = 0x0
0x8ff: M[0x0] = S1
0x900: V838 = 0x20
0x902: V839 = 0x0
0x904: V840 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V836, V840, S2]
Exit stack: [V836, V840, S2]

================================

Block 0x906
[0x906:0x919]
---
Predecessors: [0x8f8]
Successors: [0x638, 0x91a]
---
0x906 JUMPDEST
0x907 DUP2
0x908 SLOAD
0x909 DUP2
0x90a MSTORE
0x90b SWAP1
0x90c PUSH1 0x1
0x90e ADD
0x90f SWAP1
0x910 PUSH1 0x20
0x912 ADD
0x913 DUP1
0x914 DUP4
0x915 GT
0x916 PUSH2 0x638
0x919 JUMPI
---
0x906: JUMPDEST 
0x908: V841 = S[V840]
0x90a: M[S0] = V841
0x90c: V842 = 0x1
0x90e: V843 = ADD 0x1 V840
0x910: V844 = 0x20
0x912: V845 = ADD 0x20 S0
0x915: V846 = GT V836 V845
0x916: V847 = 0x638
0x919: JUMPI 0x638 V846
---
Entry stack: [V836, V840, S0]
Stack pops: 3
Stack additions: [S2, V843, V845]
Exit stack: [V836, V843, V845]

================================

Block 0x91a
[0x91a:0x922]
---
Predecessors: [0x906]
Successors: [0x923]
---
0x91a DUP3
0x91b SWAP1
0x91c SUB
0x91d PUSH1 0x1f
0x91f AND
0x920 DUP3
0x921 ADD
0x922 SWAP2
---
0x91c: V848 = SUB V845 V836
0x91d: V849 = 0x1f
0x91f: V850 = AND 0x1f V848
0x921: V851 = ADD V836 V850
---
Entry stack: [V836, V843, V845]
Stack pops: 3
Stack additions: [V851, S1, S2]
Exit stack: [V851, V843, V836]

================================

Block 0x923
[0x923:0x92a]
---
Predecessors: [0x91a]
Successors: []
Has unresolved jump.
---
0x923 JUMPDEST
0x924 POP
0x925 POP
0x926 POP
0x927 POP
0x928 POP
0x929 DUP2
0x92a JUMP
---
0x923: JUMPDEST 
0x92a: JUMP S6
---
Entry stack: [V851, V843, V836]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0x92b
[0x92b:0x941]
---
Predecessors: [0x322]
Successors: [0x942, 0x943]
---
0x92b JUMPDEST
0x92c PUSH1 0x0
0x92e SLOAD
0x92f CALLER
0x930 PUSH1 0x1
0x932 PUSH1 0xa0
0x934 PUSH1 0x2
0x936 EXP
0x937 SUB
0x938 SWAP1
0x939 DUP2
0x93a AND
0x93b SWAP2
0x93c AND
0x93d EQ
0x93e PUSH2 0x943
0x941 JUMPI
---
0x92b: JUMPDEST 
0x92c: V852 = 0x0
0x92e: V853 = S[0x0]
0x92f: V854 = CALLER
0x930: V855 = 0x1
0x932: V856 = 0xa0
0x934: V857 = 0x2
0x936: V858 = EXP 0x2 0xa0
0x937: V859 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93a: V860 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0x93c: V861 = AND V853 0xffffffffffffffffffffffffffffffffffffffff
0x93d: V862 = EQ V861 V860
0x93e: V863 = 0x943
0x941: JUMPI 0x943 V862
---
Entry stack: [V10, 0x102, V276, V279, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281]

================================

Block 0x942
[0x942:0x942]
---
Predecessors: [0x92b]
Successors: []
---
0x942 INVALID
---
0x942: INVALID 
---
Entry stack: [V10, 0x102, V276, V279, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281]

================================

Block 0x943
[0x943:0x954]
---
Predecessors: [0x92b]
Successors: [0x955, 0x959]
---
0x943 JUMPDEST
0x944 DUP3
0x945 PUSH1 0x1
0x947 PUSH1 0xa0
0x949 PUSH1 0x2
0x94b EXP
0x94c SUB
0x94d DUP2
0x94e AND
0x94f ISZERO
0x950 ISZERO
0x951 PUSH2 0x959
0x954 JUMPI
---
0x943: JUMPDEST 
0x945: V864 = 0x1
0x947: V865 = 0xa0
0x949: V866 = 0x2
0x94b: V867 = EXP 0x2 0xa0
0x94c: V868 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94e: V869 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x94f: V870 = ISZERO V869
0x950: V871 = ISZERO V870
0x951: V872 = 0x959
0x954: JUMPI 0x959 V871
---
Entry stack: [V10, 0x102, V276, V279, V281]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V10, 0x102, V276, V279, V281, V276]

================================

Block 0x955
[0x955:0x958]
---
Predecessors: [0x943]
Successors: []
---
0x955 PUSH1 0x0
0x957 DUP1
0x958 REVERT
---
0x955: V873 = 0x0
0x958: REVERT 0x0 0x0
---
Entry stack: [V10, 0x102, V276, V279, V281, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276]

================================

Block 0x959
[0x959:0x96a]
---
Predecessors: [0x943]
Successors: [0x96b, 0x96f]
---
0x959 JUMPDEST
0x95a DUP3
0x95b PUSH1 0x1
0x95d PUSH1 0xa0
0x95f PUSH1 0x2
0x961 EXP
0x962 SUB
0x963 DUP2
0x964 AND
0x965 ISZERO
0x966 ISZERO
0x967 PUSH2 0x96f
0x96a JUMPI
---
0x959: JUMPDEST 
0x95b: V874 = 0x1
0x95d: V875 = 0xa0
0x95f: V876 = 0x2
0x961: V877 = EXP 0x2 0xa0
0x962: V878 = SUB 0x10000000000000000000000000000000000000000 0x1
0x964: V879 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x965: V880 = ISZERO V879
0x966: V881 = ISZERO V880
0x967: V882 = 0x96f
0x96a: JUMPI 0x96f V881
---
Entry stack: [V10, 0x102, V276, V279, V281, V276]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279]

================================

Block 0x96b
[0x96b:0x96e]
---
Predecessors: [0x959]
Successors: []
---
0x96b PUSH1 0x0
0x96d DUP1
0x96e REVERT
---
0x96b: V883 = 0x0
0x96e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279]

================================

Block 0x96f
[0x96f:0x98c]
---
Predecessors: [0x959]
Successors: [0x98d, 0x991]
---
0x96f JUMPDEST
0x970 DUP4
0x971 ADDRESS
0x972 PUSH1 0x1
0x974 PUSH1 0xa0
0x976 PUSH1 0x2
0x978 EXP
0x979 SUB
0x97a AND
0x97b DUP2
0x97c PUSH1 0x1
0x97e PUSH1 0xa0
0x980 PUSH1 0x2
0x982 EXP
0x983 SUB
0x984 AND
0x985 EQ
0x986 ISZERO
0x987 ISZERO
0x988 ISZERO
0x989 PUSH2 0x991
0x98c JUMPI
---
0x96f: JUMPDEST 
0x971: V884 = ADDRESS
0x972: V885 = 0x1
0x974: V886 = 0xa0
0x976: V887 = 0x2
0x978: V888 = EXP 0x2 0xa0
0x979: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97a: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0x97c: V891 = 0x1
0x97e: V892 = 0xa0
0x980: V893 = 0x2
0x982: V894 = EXP 0x2 0xa0
0x983: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0x984: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x985: V897 = EQ V896 V890
0x986: V898 = ISZERO V897
0x987: V899 = ISZERO V898
0x988: V900 = ISZERO V899
0x989: V901 = 0x991
0x98c: JUMPI 0x991 V900
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]

================================

Block 0x98d
[0x98d:0x990]
---
Predecessors: [0x96f]
Successors: []
---
0x98d PUSH1 0x0
0x98f DUP1
0x990 REVERT
---
0x98d: V902 = 0x0
0x990: REVERT 0x0 0x0
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]

================================

Block 0x991
[0x991:0xa02]
---
Predecessors: [0x96f]
Successors: [0xa03, 0xa07]
---
0x991 JUMPDEST
0x992 DUP6
0x993 PUSH1 0x1
0x995 PUSH1 0xa0
0x997 PUSH1 0x2
0x999 EXP
0x99a SUB
0x99b AND
0x99c PUSH4 0xa9059cbb
0x9a1 DUP7
0x9a2 DUP7
0x9a3 PUSH1 0x0
0x9a5 PUSH1 0x40
0x9a7 MLOAD
0x9a8 PUSH1 0x20
0x9aa ADD
0x9ab MSTORE
0x9ac PUSH1 0x40
0x9ae MLOAD
0x9af PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9cd PUSH4 0xffffffff
0x9d2 DUP6
0x9d3 AND
0x9d4 MUL
0x9d5 DUP2
0x9d6 MSTORE
0x9d7 PUSH1 0x1
0x9d9 PUSH1 0xa0
0x9db PUSH1 0x2
0x9dd EXP
0x9de SUB
0x9df SWAP1
0x9e0 SWAP3
0x9e1 AND
0x9e2 PUSH1 0x4
0x9e4 DUP4
0x9e5 ADD
0x9e6 MSTORE
0x9e7 PUSH1 0x24
0x9e9 DUP3
0x9ea ADD
0x9eb MSTORE
0x9ec PUSH1 0x44
0x9ee ADD
0x9ef PUSH1 0x20
0x9f1 PUSH1 0x40
0x9f3 MLOAD
0x9f4 DUP1
0x9f5 DUP4
0x9f6 SUB
0x9f7 DUP2
0x9f8 PUSH1 0x0
0x9fa DUP8
0x9fb DUP1
0x9fc EXTCODESIZE
0x9fd ISZERO
0x9fe ISZERO
0x9ff PUSH2 0xa07
0xa02 JUMPI
---
0x991: JUMPDEST 
0x993: V903 = 0x1
0x995: V904 = 0xa0
0x997: V905 = 0x2
0x999: V906 = EXP 0x2 0xa0
0x99a: V907 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99b: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x99c: V909 = 0xa9059cbb
0x9a3: V910 = 0x0
0x9a5: V911 = 0x40
0x9a7: V912 = M[0x40]
0x9a8: V913 = 0x20
0x9aa: V914 = ADD 0x20 V912
0x9ab: M[V914] = 0x0
0x9ac: V915 = 0x40
0x9ae: V916 = M[0x40]
0x9af: V917 = 0x100000000000000000000000000000000000000000000000000000000
0x9cd: V918 = 0xffffffff
0x9d3: V919 = AND 0xa9059cbb 0xffffffff
0x9d4: V920 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x9d6: M[V916] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9d7: V921 = 0x1
0x9d9: V922 = 0xa0
0x9db: V923 = 0x2
0x9dd: V924 = EXP 0x2 0xa0
0x9de: V925 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e1: V926 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x9e2: V927 = 0x4
0x9e5: V928 = ADD V916 0x4
0x9e6: M[V928] = V926
0x9e7: V929 = 0x24
0x9ea: V930 = ADD V916 0x24
0x9eb: M[V930] = V281
0x9ec: V931 = 0x44
0x9ee: V932 = ADD 0x44 V916
0x9ef: V933 = 0x20
0x9f1: V934 = 0x40
0x9f3: V935 = M[0x40]
0x9f6: V936 = SUB V932 V935
0x9f8: V937 = 0x0
0x9fc: V938 = EXTCODESIZE V908
0x9fd: V939 = ISZERO V938
0x9fe: V940 = ISZERO V939
0x9ff: V941 = 0xa07
0xa02: JUMPI 0xa07 V940
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V908, 0xa9059cbb, V932, 0x20, V935, V936, V935, 0x0, V908]
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279, V908, 0xa9059cbb, V932, 0x20, V935, V936, V935, 0x0, V908]

================================

Block 0xa03
[0xa03:0xa06]
---
Predecessors: [0x991]
Successors: []
---
0xa03 PUSH1 0x0
0xa05 DUP1
0xa06 REVERT
---
0xa03: V942 = 0x0
0xa06: REVERT 0x0 0x0
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279, V908, 0xa9059cbb, V932, 0x20, V935, V936, V935, 0x0, V908]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279, V908, 0xa9059cbb, V932, 0x20, V935, V936, V935, 0x0, V908]

================================

Block 0xa07
[0xa07:0xa13]
---
Predecessors: [0x991]
Successors: [0xa14, 0xa18]
---
0xa07 JUMPDEST
0xa08 PUSH2 0x2c6
0xa0b GAS
0xa0c SUB
0xa0d CALL
0xa0e ISZERO
0xa0f ISZERO
0xa10 PUSH2 0xa18
0xa13 JUMPI
---
0xa07: JUMPDEST 
0xa08: V943 = 0x2c6
0xa0b: V944 = GAS
0xa0c: V945 = SUB V944 0x2c6
0xa0d: V946 = CALL V945 V908 0x0 V935 V936 V935 0x20
0xa0e: V947 = ISZERO V946
0xa0f: V948 = ISZERO V947
0xa10: V949 = 0xa18
0xa13: JUMPI 0xa18 V948
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279, V908, 0xa9059cbb, V932, 0x20, V935, V936, V935, 0x0, V908]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279, V908, 0xa9059cbb, V932]

================================

Block 0xa14
[0xa14:0xa17]
---
Predecessors: [0xa07]
Successors: []
---
0xa14 PUSH1 0x0
0xa16 DUP1
0xa17 REVERT
---
0xa14: V950 = 0x0
0xa17: REVERT 0x0 0x0
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279, V908, 0xa9059cbb, V932]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279, V908, 0xa9059cbb, V932]

================================

Block 0xa18
[0xa18:0xa28]
---
Predecessors: [0xa07]
Successors: [0xa29, 0xa2a]
---
0xa18 JUMPDEST
0xa19 POP
0xa1a POP
0xa1b POP
0xa1c PUSH1 0x40
0xa1e MLOAD
0xa1f DUP1
0xa20 MLOAD
0xa21 SWAP1
0xa22 POP
0xa23 ISZERO
0xa24 ISZERO
0xa25 PUSH2 0xa2a
0xa28 JUMPI
---
0xa18: JUMPDEST 
0xa1c: V951 = 0x40
0xa1e: V952 = M[0x40]
0xa20: V953 = M[V952]
0xa23: V954 = ISZERO V953
0xa24: V955 = ISZERO V954
0xa25: V956 = 0xa2a
0xa28: JUMPI 0xa2a V955
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279, V908, 0xa9059cbb, V932]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]

================================

Block 0xa29
[0xa29:0xa29]
---
Predecessors: [0xa18]
Successors: []
---
0xa29 INVALID
---
0xa29: INVALID 
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]

================================

Block 0xa2a
[0xa2a:0xa2a]
---
Predecessors: [0xa18]
Successors: [0xa2b]
---
0xa2a JUMPDEST
---
0xa2a: JUMPDEST 
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]

================================

Block 0xa2b
[0xa2b:0xa2b]
---
Predecessors: [0xa2a]
Successors: [0xa2c]
---
0xa2b JUMPDEST
---
0xa2b: JUMPDEST 
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]

================================

Block 0xa2c
[0xa2c:0xa2d]
---
Predecessors: [0xa2b]
Successors: [0xa2e]
---
0xa2c JUMPDEST
0xa2d POP
---
0xa2c: JUMPDEST 
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279, V279]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276, V279]

================================

Block 0xa2e
[0xa2e:0xa2f]
---
Predecessors: [0xa2c]
Successors: [0xa30]
---
0xa2e JUMPDEST
0xa2f POP
---
0xa2e: JUMPDEST 
---
Entry stack: [V10, 0x102, V276, V279, V281, V276, V279]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281, V276]

================================

Block 0xa30
[0xa30:0xa31]
---
Predecessors: [0xa2e]
Successors: [0xa32]
---
0xa30 JUMPDEST
0xa31 POP
---
0xa30: JUMPDEST 
---
Entry stack: [V10, 0x102, V276, V279, V281, V276]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x102, V276, V279, V281]

================================

Block 0xa32
[0xa32:0xa36]
---
Predecessors: [0xa30]
Successors: [0x102]
---
0xa32 JUMPDEST
0xa33 POP
0xa34 POP
0xa35 POP
0xa36 JUMP
---
0xa32: JUMPDEST 
0xa36: JUMP 0x102
---
Entry stack: [V10, 0x102, V276, V279, V281]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0xa37
[0xa37:0xa48]
---
Predecessors: [0x34c]
Successors: [0x1d9]
---
0xa37 JUMPDEST
0xa38 PUSH1 0x7
0xa3a PUSH1 0x20
0xa3c MSTORE
0xa3d PUSH1 0x0
0xa3f SWAP1
0xa40 DUP2
0xa41 MSTORE
0xa42 PUSH1 0x40
0xa44 SWAP1
0xa45 SHA3
0xa46 SLOAD
0xa47 DUP2
0xa48 JUMP
---
0xa37: JUMPDEST 
0xa38: V957 = 0x7
0xa3a: V958 = 0x20
0xa3c: M[0x20] = 0x7
0xa3d: V959 = 0x0
0xa41: M[0x0] = V295
0xa42: V960 = 0x40
0xa45: V961 = SHA3 0x0 0x40
0xa46: V962 = S[V961]
0xa48: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9, V295]
Stack pops: 2
Stack additions: [S1, V962]
Exit stack: [V10, 0x1d9, V962]

================================

Block 0xa49
[0xa49:0xa5f]
---
Predecessors: [0x37d]
Successors: [0xa60, 0xa64]
---
0xa49 JUMPDEST
0xa4a PUSH1 0x1
0xa4c SLOAD
0xa4d CALLER
0xa4e PUSH1 0x1
0xa50 PUSH1 0xa0
0xa52 PUSH1 0x2
0xa54 EXP
0xa55 SUB
0xa56 SWAP1
0xa57 DUP2
0xa58 AND
0xa59 SWAP2
0xa5a AND
0xa5b EQ
0xa5c PUSH2 0xa64
0xa5f JUMPI
---
0xa49: JUMPDEST 
0xa4a: V963 = 0x1
0xa4c: V964 = S[0x1]
0xa4d: V965 = CALLER
0xa4e: V966 = 0x1
0xa50: V967 = 0xa0
0xa52: V968 = 0x2
0xa54: V969 = EXP 0x2 0xa0
0xa55: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa58: V971 = AND 0xffffffffffffffffffffffffffffffffffffffff V965
0xa5a: V972 = AND V964 0xffffffffffffffffffffffffffffffffffffffff
0xa5b: V973 = EQ V972 V971
0xa5c: V974 = 0xa64
0xa5f: JUMPI 0xa64 V973
---
Entry stack: [V10, 0x102]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102]

================================

Block 0xa60
[0xa60:0xa63]
---
Predecessors: [0xa49]
Successors: []
---
0xa60 PUSH1 0x0
0xa62 DUP1
0xa63 REVERT
---
0xa60: V975 = 0x0
0xa63: REVERT 0x0 0x0
---
Entry stack: [V10, 0x102]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102]

================================

Block 0xa64
[0xa64:0xaee]
---
Predecessors: [0xa49]
Successors: [0xaef]
---
0xa64 JUMPDEST
0xa65 PUSH1 0x0
0xa67 SLOAD
0xa68 PUSH1 0x1
0xa6a SLOAD
0xa6b PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0xa8c SWAP2
0xa8d PUSH1 0x1
0xa8f PUSH1 0xa0
0xa91 PUSH1 0x2
0xa93 EXP
0xa94 SUB
0xa95 SWAP1
0xa96 DUP2
0xa97 AND
0xa98 SWAP2
0xa99 AND
0xa9a PUSH1 0x40
0xa9c MLOAD
0xa9d PUSH1 0x1
0xa9f PUSH1 0xa0
0xaa1 PUSH1 0x2
0xaa3 EXP
0xaa4 SUB
0xaa5 SWAP3
0xaa6 DUP4
0xaa7 AND
0xaa8 DUP2
0xaa9 MSTORE
0xaaa SWAP2
0xaab AND
0xaac PUSH1 0x20
0xaae DUP3
0xaaf ADD
0xab0 MSTORE
0xab1 PUSH1 0x40
0xab3 SWAP1
0xab4 DUP2
0xab5 ADD
0xab6 SWAP1
0xab7 MLOAD
0xab8 DUP1
0xab9 SWAP2
0xaba SUB
0xabb SWAP1
0xabc LOG1
0xabd PUSH1 0x1
0xabf DUP1
0xac0 SLOAD
0xac1 PUSH1 0x0
0xac3 DUP1
0xac4 SLOAD
0xac5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xada NOT
0xadb SWAP1
0xadc DUP2
0xadd AND
0xade PUSH1 0x1
0xae0 PUSH1 0xa0
0xae2 PUSH1 0x2
0xae4 EXP
0xae5 SUB
0xae6 DUP5
0xae7 AND
0xae8 OR
0xae9 SWAP1
0xaea SWAP2
0xaeb SSTORE
0xaec AND
0xaed SWAP1
0xaee SSTORE
---
0xa64: JUMPDEST 
0xa65: V976 = 0x0
0xa67: V977 = S[0x0]
0xa68: V978 = 0x1
0xa6a: V979 = S[0x1]
0xa6b: V980 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0xa8d: V981 = 0x1
0xa8f: V982 = 0xa0
0xa91: V983 = 0x2
0xa93: V984 = EXP 0x2 0xa0
0xa94: V985 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa97: V986 = AND 0xffffffffffffffffffffffffffffffffffffffff V977
0xa99: V987 = AND V979 0xffffffffffffffffffffffffffffffffffffffff
0xa9a: V988 = 0x40
0xa9c: V989 = M[0x40]
0xa9d: V990 = 0x1
0xa9f: V991 = 0xa0
0xaa1: V992 = 0x2
0xaa3: V993 = EXP 0x2 0xa0
0xaa4: V994 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa7: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V986
0xaa9: M[V989] = V995
0xaab: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V987
0xaac: V997 = 0x20
0xaaf: V998 = ADD V989 0x20
0xab0: M[V998] = V996
0xab1: V999 = 0x40
0xab5: V1000 = ADD 0x40 V989
0xab7: V1001 = M[0x40]
0xaba: V1002 = SUB V1000 V1001
0xabc: LOG V1001 V1002 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0xabd: V1003 = 0x1
0xac0: V1004 = S[0x1]
0xac1: V1005 = 0x0
0xac4: V1006 = S[0x0]
0xac5: V1007 = 0xffffffffffffffffffffffffffffffffffffffff
0xada: V1008 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xadd: V1009 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1006
0xade: V1010 = 0x1
0xae0: V1011 = 0xa0
0xae2: V1012 = 0x2
0xae4: V1013 = EXP 0x2 0xa0
0xae5: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae7: V1015 = AND V1004 0xffffffffffffffffffffffffffffffffffffffff
0xae8: V1016 = OR V1015 V1009
0xaeb: S[0x0] = V1016
0xaec: V1017 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1004
0xaee: S[0x1] = V1017
---
Entry stack: [V10, 0x102]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102]

================================

Block 0xaef
[0xaef:0xaf0]
---
Predecessors: [0xa64]
Successors: [0x102]
---
0xaef JUMPDEST
0xaf0 JUMP
---
0xaef: JUMPDEST 
0xaf0: JUMP 0x102
---
Entry stack: [V10, 0x102]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xaf1
[0xaf1:0xaff]
---
Predecessors: [0x392]
Successors: [0x39a]
---
0xaf1 JUMPDEST
0xaf2 PUSH1 0x0
0xaf4 SLOAD
0xaf5 PUSH1 0x1
0xaf7 PUSH1 0xa0
0xaf9 PUSH1 0x2
0xafb EXP
0xafc SUB
0xafd AND
0xafe DUP2
0xaff JUMP
---
0xaf1: JUMPDEST 
0xaf2: V1018 = 0x0
0xaf4: V1019 = S[0x0]
0xaf5: V1020 = 0x1
0xaf7: V1021 = 0xa0
0xaf9: V1022 = 0x2
0xafb: V1023 = EXP 0x2 0xa0
0xafc: V1024 = SUB 0x10000000000000000000000000000000000000000 0x1
0xafd: V1025 = AND 0xffffffffffffffffffffffffffffffffffffffff V1019
0xaff: JUMP 0x39a
---
Entry stack: [V10, 0x39a]
Stack pops: 1
Stack additions: [S0, V1025]
Exit stack: [V10, 0x39a, V1025]

================================

Block 0xb00
[0xb00:0xb4f]
---
Predecessors: [0x3c1]
Successors: [0x655, 0xb50]
---
0xb00 JUMPDEST
0xb01 PUSH1 0x4
0xb03 DUP1
0xb04 SLOAD
0xb05 PUSH1 0x1
0xb07 DUP2
0xb08 PUSH1 0x1
0xb0a AND
0xb0b ISZERO
0xb0c PUSH2 0x100
0xb0f MUL
0xb10 SUB
0xb11 AND
0xb12 PUSH1 0x2
0xb14 SWAP1
0xb15 DIV
0xb16 DUP1
0xb17 PUSH1 0x1f
0xb19 ADD
0xb1a PUSH1 0x20
0xb1c DUP1
0xb1d SWAP2
0xb1e DIV
0xb1f MUL
0xb20 PUSH1 0x20
0xb22 ADD
0xb23 PUSH1 0x40
0xb25 MLOAD
0xb26 SWAP1
0xb27 DUP2
0xb28 ADD
0xb29 PUSH1 0x40
0xb2b MSTORE
0xb2c DUP1
0xb2d SWAP3
0xb2e SWAP2
0xb2f SWAP1
0xb30 DUP2
0xb31 DUP2
0xb32 MSTORE
0xb33 PUSH1 0x20
0xb35 ADD
0xb36 DUP3
0xb37 DUP1
0xb38 SLOAD
0xb39 PUSH1 0x1
0xb3b DUP2
0xb3c PUSH1 0x1
0xb3e AND
0xb3f ISZERO
0xb40 PUSH2 0x100
0xb43 MUL
0xb44 SUB
0xb45 AND
0xb46 PUSH1 0x2
0xb48 SWAP1
0xb49 DIV
0xb4a DUP1
0xb4b ISZERO
0xb4c PUSH2 0x655
0xb4f JUMPI
---
0xb00: JUMPDEST 
0xb01: V1026 = 0x4
0xb04: V1027 = S[0x4]
0xb05: V1028 = 0x1
0xb08: V1029 = 0x1
0xb0a: V1030 = AND 0x1 V1027
0xb0b: V1031 = ISZERO V1030
0xb0c: V1032 = 0x100
0xb0f: V1033 = MUL 0x100 V1031
0xb10: V1034 = SUB V1033 0x1
0xb11: V1035 = AND V1034 V1027
0xb12: V1036 = 0x2
0xb15: V1037 = DIV V1035 0x2
0xb17: V1038 = 0x1f
0xb19: V1039 = ADD 0x1f V1037
0xb1a: V1040 = 0x20
0xb1e: V1041 = DIV V1039 0x20
0xb1f: V1042 = MUL V1041 0x20
0xb20: V1043 = 0x20
0xb22: V1044 = ADD 0x20 V1042
0xb23: V1045 = 0x40
0xb25: V1046 = M[0x40]
0xb28: V1047 = ADD V1046 V1044
0xb29: V1048 = 0x40
0xb2b: M[0x40] = V1047
0xb32: M[V1046] = V1037
0xb33: V1049 = 0x20
0xb35: V1050 = ADD 0x20 V1046
0xb38: V1051 = S[0x4]
0xb39: V1052 = 0x1
0xb3c: V1053 = 0x1
0xb3e: V1054 = AND 0x1 V1051
0xb3f: V1055 = ISZERO V1054
0xb40: V1056 = 0x100
0xb43: V1057 = MUL 0x100 V1055
0xb44: V1058 = SUB V1057 0x1
0xb45: V1059 = AND V1058 V1051
0xb46: V1060 = 0x2
0xb49: V1061 = DIV V1059 0x2
0xb4b: V1062 = ISZERO V1061
0xb4c: V1063 = 0x655
0xb4f: JUMPI 0x655 V1062
---
Entry stack: [V10, 0x118]
Stack pops: 0
Stack additions: [V1046, 0x4, V1037, V1050, 0x4, V1061]
Exit stack: [V10, 0x118, V1046, 0x4, V1037, V1050, 0x4, V1061]

================================

Block 0xb50
[0xb50:0xb57]
---
Predecessors: [0xb00]
Successors: [0x62a, 0xb58]
---
0xb50 DUP1
0xb51 PUSH1 0x1f
0xb53 LT
0xb54 PUSH2 0x62a
0xb57 JUMPI
---
0xb51: V1064 = 0x1f
0xb53: V1065 = LT 0x1f V1061
0xb54: V1066 = 0x62a
0xb57: JUMPI 0x62a V1065
---
Entry stack: [V10, 0x118, V1046, 0x4, V1037, V1050, 0x4, V1061]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x118, V1046, 0x4, V1037, V1050, 0x4, V1061]

================================

Block 0xb58
[0xb58:0xb6a]
---
Predecessors: [0xb50]
Successors: [0x655]
---
0xb58 PUSH2 0x100
0xb5b DUP1
0xb5c DUP4
0xb5d SLOAD
0xb5e DIV
0xb5f MUL
0xb60 DUP4
0xb61 MSTORE
0xb62 SWAP2
0xb63 PUSH1 0x20
0xb65 ADD
0xb66 SWAP2
0xb67 PUSH2 0x655
0xb6a JUMP
---
0xb58: V1067 = 0x100
0xb5d: V1068 = S[0x4]
0xb5e: V1069 = DIV V1068 0x100
0xb5f: V1070 = MUL V1069 0x100
0xb61: M[V1050] = V1070
0xb63: V1071 = 0x20
0xb65: V1072 = ADD 0x20 V1050
0xb67: V1073 = 0x655
0xb6a: JUMP 0x655
---
Entry stack: [V10, 0x118, V1046, 0x4, V1037, V1050, 0x4, V1061]
Stack pops: 3
Stack additions: [V1072, S1, S0]
Exit stack: [V10, 0x118, V1046, 0x4, V1037, V1072, 0x4, V1061]

================================

Block 0xb6b
[0xb6b:0xb78]
---
Predecessors: []
Successors: [0xb79]
---
0xb6b JUMPDEST
0xb6c DUP3
0xb6d ADD
0xb6e SWAP2
0xb6f SWAP1
0xb70 PUSH1 0x0
0xb72 MSTORE
0xb73 PUSH1 0x20
0xb75 PUSH1 0x0
0xb77 SHA3
0xb78 SWAP1
---
0xb6b: JUMPDEST 
0xb6d: V1074 = ADD S2 S0
0xb70: V1075 = 0x0
0xb72: M[0x0] = S1
0xb73: V1076 = 0x20
0xb75: V1077 = 0x0
0xb77: V1078 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V1074, V1078, S2]
Exit stack: [V1074, V1078, S2]

================================

Block 0xb79
[0xb79:0xb8c]
---
Predecessors: [0xb6b]
Successors: [0x638, 0xb8d]
---
0xb79 JUMPDEST
0xb7a DUP2
0xb7b SLOAD
0xb7c DUP2
0xb7d MSTORE
0xb7e SWAP1
0xb7f PUSH1 0x1
0xb81 ADD
0xb82 SWAP1
0xb83 PUSH1 0x20
0xb85 ADD
0xb86 DUP1
0xb87 DUP4
0xb88 GT
0xb89 PUSH2 0x638
0xb8c JUMPI
---
0xb79: JUMPDEST 
0xb7b: V1079 = S[V1078]
0xb7d: M[S0] = V1079
0xb7f: V1080 = 0x1
0xb81: V1081 = ADD 0x1 V1078
0xb83: V1082 = 0x20
0xb85: V1083 = ADD 0x20 S0
0xb88: V1084 = GT V1074 V1083
0xb89: V1085 = 0x638
0xb8c: JUMPI 0x638 V1084
---
Entry stack: [V1074, V1078, S0]
Stack pops: 3
Stack additions: [S2, V1081, V1083]
Exit stack: [V1074, V1081, V1083]

================================

Block 0xb8d
[0xb8d:0xb95]
---
Predecessors: [0xb79]
Successors: [0xb96]
---
0xb8d DUP3
0xb8e SWAP1
0xb8f SUB
0xb90 PUSH1 0x1f
0xb92 AND
0xb93 DUP3
0xb94 ADD
0xb95 SWAP2
---
0xb8f: V1086 = SUB V1083 V1074
0xb90: V1087 = 0x1f
0xb92: V1088 = AND 0x1f V1086
0xb94: V1089 = ADD V1074 V1088
---
Entry stack: [V1074, V1081, V1083]
Stack pops: 3
Stack additions: [V1089, S1, S2]
Exit stack: [V1089, V1081, V1074]

================================

Block 0xb96
[0xb96:0xb9d]
---
Predecessors: [0xb8d]
Successors: []
Has unresolved jump.
---
0xb96 JUMPDEST
0xb97 POP
0xb98 POP
0xb99 POP
0xb9a POP
0xb9b POP
0xb9c DUP2
0xb9d JUMP
---
0xb96: JUMPDEST 
0xb9d: JUMP S6
---
Entry stack: [V1089, V1081, V1074]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xb9e
[0xb9e:0xbbd]
---
Predecessors: [0x44c]
Successors: [0xbbe, 0xbc2]
---
0xb9e JUMPDEST
0xb9f PUSH1 0x0
0xba1 DUP3
0xba2 ADDRESS
0xba3 PUSH1 0x1
0xba5 PUSH1 0xa0
0xba7 PUSH1 0x2
0xba9 EXP
0xbaa SUB
0xbab AND
0xbac DUP2
0xbad PUSH1 0x1
0xbaf PUSH1 0xa0
0xbb1 PUSH1 0x2
0xbb3 EXP
0xbb4 SUB
0xbb5 AND
0xbb6 EQ
0xbb7 ISZERO
0xbb8 ISZERO
0xbb9 ISZERO
0xbba PUSH2 0xbc2
0xbbd JUMPI
---
0xb9e: JUMPDEST 
0xb9f: V1090 = 0x0
0xba2: V1091 = ADDRESS
0xba3: V1092 = 0x1
0xba5: V1093 = 0xa0
0xba7: V1094 = 0x2
0xba9: V1095 = EXP 0x2 0xa0
0xbaa: V1096 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbab: V1097 = AND 0xffffffffffffffffffffffffffffffffffffffff V1091
0xbad: V1098 = 0x1
0xbaf: V1099 = 0xa0
0xbb1: V1100 = 0x2
0xbb3: V1101 = EXP 0x2 0xa0
0xbb4: V1102 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb5: V1103 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0xbb6: V1104 = EQ V1103 V1097
0xbb7: V1105 = ISZERO V1104
0xbb8: V1106 = ISZERO V1105
0xbb9: V1107 = ISZERO V1106
0xbba: V1108 = 0xbc2
0xbbd: JUMPI 0xbc2 V1107
---
Entry stack: [V10, 0x1b2, V387, V389]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V10, 0x1b2, V387, V389, 0x0, V387]

================================

Block 0xbbe
[0xbbe:0xbc1]
---
Predecessors: [0xb9e]
Successors: []
---
0xbbe PUSH1 0x0
0xbc0 DUP1
0xbc1 REVERT
---
0xbbe: V1109 = 0x0
0xbc1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b2, V387, V389, 0x0, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V387, V389, 0x0, V387]

================================

Block 0xbc2
[0xbc2:0xbcb]
---
Predecessors: [0xb9e]
Successors: [0xdc2]
---
0xbc2 JUMPDEST
0xbc3 PUSH2 0xbcc
0xbc6 DUP5
0xbc7 DUP5
0xbc8 PUSH2 0xdc2
0xbcb JUMP
---
0xbc2: JUMPDEST 
0xbc3: V1110 = 0xbcc
0xbc8: V1111 = 0xdc2
0xbcb: JUMP 0xdc2
---
Entry stack: [V10, 0x1b2, V387, V389, 0x0, V387]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xbcc, S3, S2]
Exit stack: [V10, 0x1b2, V387, V389, 0x0, V387, 0xbcc, V387, V389]

================================

Block 0xbcc
[0xbcc:0xbd2]
---
Predecessors: [0xe78]
Successors: [0xbd3, 0xbd4]
---
0xbcc JUMPDEST
0xbcd ISZERO
0xbce ISZERO
0xbcf PUSH2 0xbd4
0xbd2 JUMPI
---
0xbcc: JUMPDEST 
0xbcd: V1112 = ISZERO 0x1
0xbce: V1113 = ISZERO 0x0
0xbcf: V1114 = 0xbd4
0xbd2: JUMPI 0xbd4 0x1
---
Entry stack: [V10, 0x1b2, V179, S6, S5, S4, S3, {0x0, 0x860}, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S6, S5, S4, S3, {0x0, 0x860}, S1]

================================

Block 0xbd3
[0xbd3:0xbd3]
---
Predecessors: [0xbcc]
Successors: []
---
0xbd3 INVALID
---
0xbd3: INVALID 
---
Entry stack: [V10, 0x1b2, V179, S5, S4, S3, S2, {0x0, 0x860}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S5, S4, S3, S2, {0x0, 0x860}, S0]

================================

Block 0xbd4
[0xbd4:0xbd8]
---
Predecessors: [0xbcc]
Successors: [0xbd9]
---
0xbd4 JUMPDEST
0xbd5 PUSH1 0x1
0xbd7 SWAP2
0xbd8 POP
---
0xbd4: JUMPDEST 
0xbd5: V1115 = 0x1
---
Entry stack: [V10, 0x1b2, V179, S5, S4, S3, S2, {0x0, 0x860}, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V10, 0x1b2, V179, S5, S4, S3, S2, 0x1, S0]

================================

Block 0xbd9
[0xbd9:0xbd9]
---
Predecessors: [0xbd4]
Successors: [0xbda]
---
0xbd9 JUMPDEST
---
0xbd9: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S5, S4, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S5, S4, S3, S2, 0x1, S0]

================================

Block 0xbda
[0xbda:0xbe0]
---
Predecessors: [0xbd9]
Successors: [0x1b2]
---
0xbda JUMPDEST
0xbdb POP
0xbdc SWAP3
0xbdd SWAP2
0xbde POP
0xbdf POP
0xbe0 JUMP
---
0xbda: JUMPDEST 
0xbe0: JUMP S4
---
Entry stack: [V10, 0x1b2, V179, S5, S4, S3, S2, 0x1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x1b2, V179, S5, 0x1]

================================

Block 0xbe1
[0xbe1:0xbef]
---
Predecessors: [0x48c]
Successors: [0x39a]
---
0xbe1 JUMPDEST
0xbe2 PUSH1 0x1
0xbe4 SLOAD
0xbe5 PUSH1 0x1
0xbe7 PUSH1 0xa0
0xbe9 PUSH1 0x2
0xbeb EXP
0xbec SUB
0xbed AND
0xbee DUP2
0xbef JUMP
---
0xbe1: JUMPDEST 
0xbe2: V1116 = 0x1
0xbe4: V1117 = S[0x1]
0xbe5: V1118 = 0x1
0xbe7: V1119 = 0xa0
0xbe9: V1120 = 0x2
0xbeb: V1121 = EXP 0x2 0xa0
0xbec: V1122 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbed: V1123 = AND 0xffffffffffffffffffffffffffffffffffffffff V1117
0xbef: JUMP 0x39a
---
Entry stack: [V10, 0x39a]
Stack pops: 1
Stack additions: [S0, V1123]
Exit stack: [V10, 0x39a, V1123]

================================

Block 0xbf0
[0xbf0:0xc0c]
---
Predecessors: [0x4bb]
Successors: [0x1d9]
---
0xbf0 JUMPDEST
0xbf1 PUSH1 0x8
0xbf3 PUSH1 0x20
0xbf5 SWAP1
0xbf6 DUP2
0xbf7 MSTORE
0xbf8 PUSH1 0x0
0xbfa SWAP3
0xbfb DUP4
0xbfc MSTORE
0xbfd PUSH1 0x40
0xbff DUP1
0xc00 DUP5
0xc01 SHA3
0xc02 SWAP1
0xc03 SWAP2
0xc04 MSTORE
0xc05 SWAP1
0xc06 DUP3
0xc07 MSTORE
0xc08 SWAP1
0xc09 SHA3
0xc0a SLOAD
0xc0b DUP2
0xc0c JUMP
---
0xbf0: JUMPDEST 
0xbf1: V1124 = 0x8
0xbf3: V1125 = 0x20
0xbf7: M[0x20] = 0x8
0xbf8: V1126 = 0x0
0xbfc: M[0x0] = V433
0xbfd: V1127 = 0x40
0xc01: V1128 = SHA3 0x0 0x40
0xc04: M[0x20] = V1128
0xc07: M[0x0] = V436
0xc09: V1129 = SHA3 0x0 0x40
0xc0a: V1130 = S[V1129]
0xc0c: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9, V433, V436]
Stack pops: 3
Stack additions: [S2, V1130]
Exit stack: [V10, 0x1d9, V1130]

================================

Block 0xc0d
[0xc0d:0xc23]
---
Predecessors: [0x4f2]
Successors: [0xc24, 0xc25]
---
0xc0d JUMPDEST
0xc0e PUSH1 0x0
0xc10 SLOAD
0xc11 CALLER
0xc12 PUSH1 0x1
0xc14 PUSH1 0xa0
0xc16 PUSH1 0x2
0xc18 EXP
0xc19 SUB
0xc1a SWAP1
0xc1b DUP2
0xc1c AND
0xc1d SWAP2
0xc1e AND
0xc1f EQ
0xc20 PUSH2 0xc25
0xc23 JUMPI
---
0xc0d: JUMPDEST 
0xc0e: V1131 = 0x0
0xc10: V1132 = S[0x0]
0xc11: V1133 = CALLER
0xc12: V1134 = 0x1
0xc14: V1135 = 0xa0
0xc16: V1136 = 0x2
0xc18: V1137 = EXP 0x2 0xa0
0xc19: V1138 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1c: V1139 = AND 0xffffffffffffffffffffffffffffffffffffffff V1133
0xc1e: V1140 = AND V1132 0xffffffffffffffffffffffffffffffffffffffff
0xc1f: V1141 = EQ V1140 V1139
0xc20: V1142 = 0xc25
0xc23: JUMPI 0xc25 V1141
---
Entry stack: [V10, 0x102, V457]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V457]

================================

Block 0xc24
[0xc24:0xc24]
---
Predecessors: [0xc0d]
Successors: []
---
0xc24 INVALID
---
0xc24: INVALID 
---
Entry stack: [V10, 0x102, V457]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V457]

================================

Block 0xc25
[0xc25:0xc3b]
---
Predecessors: [0xc0d]
Successors: [0xc3c, 0xc40]
---
0xc25 JUMPDEST
0xc26 PUSH1 0x0
0xc28 SLOAD
0xc29 PUSH1 0x1
0xc2b PUSH1 0xa0
0xc2d PUSH1 0x2
0xc2f EXP
0xc30 SUB
0xc31 DUP3
0xc32 DUP2
0xc33 AND
0xc34 SWAP2
0xc35 AND
0xc36 EQ
0xc37 ISZERO
0xc38 PUSH2 0xc40
0xc3b JUMPI
---
0xc25: JUMPDEST 
0xc26: V1143 = 0x0
0xc28: V1144 = S[0x0]
0xc29: V1145 = 0x1
0xc2b: V1146 = 0xa0
0xc2d: V1147 = 0x2
0xc2f: V1148 = EXP 0x2 0xa0
0xc30: V1149 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc33: V1150 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0xc35: V1151 = AND V1144 0xffffffffffffffffffffffffffffffffffffffff
0xc36: V1152 = EQ V1151 V1150
0xc37: V1153 = ISZERO V1152
0xc38: V1154 = 0xc40
0xc3b: JUMPI 0xc40 V1153
---
Entry stack: [V10, 0x102, V457]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x102, V457]

================================

Block 0xc3c
[0xc3c:0xc3f]
---
Predecessors: [0xc25]
Successors: []
---
0xc3c PUSH1 0x0
0xc3e DUP1
0xc3f REVERT
---
0xc3c: V1155 = 0x0
0xc3f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x102, V457]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V457]

================================

Block 0xc40
[0xc40:0xc68]
---
Predecessors: [0xc25]
Successors: [0xc69]
---
0xc40 JUMPDEST
0xc41 PUSH1 0x1
0xc43 DUP1
0xc44 SLOAD
0xc45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5a NOT
0xc5b AND
0xc5c PUSH1 0x1
0xc5e PUSH1 0xa0
0xc60 PUSH1 0x2
0xc62 EXP
0xc63 SUB
0xc64 DUP4
0xc65 AND
0xc66 OR
0xc67 SWAP1
0xc68 SSTORE
---
0xc40: JUMPDEST 
0xc41: V1156 = 0x1
0xc44: V1157 = S[0x1]
0xc45: V1158 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5a: V1159 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc5b: V1160 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1157
0xc5c: V1161 = 0x1
0xc5e: V1162 = 0xa0
0xc60: V1163 = 0x2
0xc62: V1164 = EXP 0x2 0xa0
0xc63: V1165 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc65: V1166 = AND V457 0xffffffffffffffffffffffffffffffffffffffff
0xc66: V1167 = OR V1166 V1160
0xc68: S[0x1] = V1167
---
Entry stack: [V10, 0x102, V457]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x102, V457]

================================

Block 0xc69
[0xc69:0xc69]
---
Predecessors: [0xc40]
Successors: [0xc6a]
---
0xc69 JUMPDEST
---
0xc69: JUMPDEST 
---
Entry stack: [V10, 0x102, V457]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102, V457]

================================

Block 0xc6a
[0xc6a:0xc6c]
---
Predecessors: [0xc69]
Successors: [0x102]
---
0xc6a JUMPDEST
0xc6b POP
0xc6c JUMP
---
0xc6a: JUMPDEST 
0xc6c: JUMP 0x102
---
Entry stack: [V10, 0x102, V457]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xc6d
[0xc6d:0xc7a]
---
Predecessors: [0x508, 0x52b, 0xd3e, 0xdfd]
Successors: [0xc7b, 0xc7c]
---
0xc6d JUMPDEST
0xc6e PUSH1 0x0
0xc70 DUP3
0xc71 DUP3
0xc72 ADD
0xc73 DUP4
0xc74 DUP2
0xc75 LT
0xc76 ISZERO
0xc77 PUSH2 0xc7c
0xc7a JUMPI
---
0xc6d: JUMPDEST 
0xc6e: V1168 = 0x0
0xc72: V1169 = ADD S0 S1
0xc75: V1170 = LT V1169 S1
0xc76: V1171 = ISZERO V1170
0xc77: V1172 = 0xc7c
0xc7a: JUMPI 0xc7c V1171
---
Entry stack: [V10, 0x1b2, V179, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x52b, 0x551, 0xd6d, 0xe2c}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1169]
Exit stack: [V10, 0x1b2, V179, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x52b, 0x551, 0xd6d, 0xe2c}, S1, S0, 0x0, V1169]

================================

Block 0xc7b
[0xc7b:0xc7b]
---
Predecessors: [0xc6d]
Successors: []
---
0xc7b INVALID
---
0xc7b: INVALID 
---
Entry stack: [V10, 0x1b2, V179, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x52b, 0x551, 0xd6d, 0xe2c}, S3, S2, 0x0, V1169]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x52b, 0x551, 0xd6d, 0xe2c}, S3, S2, 0x0, V1169]

================================

Block 0xc7c
[0xc7c:0xc7f]
---
Predecessors: [0xc6d]
Successors: [0xc80]
---
0xc7c JUMPDEST
0xc7d DUP1
0xc7e SWAP2
0xc7f POP
---
0xc7c: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x52b, 0x551, 0xd6d, 0xe2c}, S3, S2, 0x0, V1169]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x1b2, V179, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x52b, 0x551, 0xd6d, 0xe2c}, S3, S2, V1169, V1169]

================================

Block 0xc80
[0xc80:0xc86]
---
Predecessors: [0xc7c]
Successors: [0x52b, 0x551, 0xd6d, 0xe2c]
---
0xc80 JUMPDEST
0xc81 POP
0xc82 SWAP3
0xc83 SWAP2
0xc84 POP
0xc85 POP
0xc86 JUMP
---
0xc80: JUMPDEST 
0xc86: JUMP {0x52b, 0x551, 0xd6d, 0xe2c}
---
Entry stack: [V10, 0x1b2, V179, S15, S14, S13, S12, {0x0, 0x860}, S10, S9, S8, S7, S6, S5, {0x52b, 0x551, 0xd6d, 0xe2c}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x1b2, V179, S15, S14, S13, S12, {0x0, 0x860}, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xc87
[0xc87:0xc91]
---
Predecessors: [0x745, 0x768, 0xccc, 0xcfd, 0xdda]
Successors: [0xc92, 0xc93]
---
0xc87 JUMPDEST
0xc88 PUSH1 0x0
0xc8a DUP2
0xc8b DUP4
0xc8c LT
0xc8d ISZERO
0xc8e PUSH2 0xc93
0xc91 JUMPI
---
0xc87: JUMPDEST 
0xc88: V1173 = 0x0
0xc8c: V1174 = LT S1 S0
0xc8d: V1175 = ISZERO V1174
0xc8e: V1176 = 0xc93
0xc91: JUMPI 0xc93 V1175
---
Entry stack: [V10, 0x1b2, V179, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x1b2, V179, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd}, S1, S0, 0x0]

================================

Block 0xc92
[0xc92:0xc92]
---
Predecessors: [0xc87]
Successors: []
---
0xc92 INVALID
---
0xc92: INVALID 
---
Entry stack: [V10, 0x1b2, V179, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd}, S2, S1, 0x0]

================================

Block 0xc93
[0xc93:0xc97]
---
Predecessors: [0xc87]
Successors: [0xc98]
---
0xc93 JUMPDEST
0xc94 POP
0xc95 DUP1
0xc96 DUP3
0xc97 SUB
---
0xc93: JUMPDEST 
0xc97: V1177 = SUB S2 S1
---
Entry stack: [V10, 0x1b2, V179, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1177]
Exit stack: [V10, 0x1b2, V179, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd}, S2, S1, V1177]

================================

Block 0xc98
[0xc98:0xc9d]
---
Predecessors: [0xc93]
Successors: [0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd]
---
0xc98 JUMPDEST
0xc99 SWAP3
0xc9a SWAP2
0xc9b POP
0xc9c POP
0xc9d JUMP
---
0xc98: JUMPDEST 
0xc9d: JUMP {0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd}
---
Entry stack: [V10, 0x1b2, V179, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x768, 0x78e, 0xcfd, 0xd3e, 0xdfd}, S2, S1, V1177]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1b2, V179, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1177]

================================

Block 0xc9e
[0xc9e:0xcb1]
---
Predecessors: [0x855]
Successors: [0xcb2, 0xcb6]
---
0xc9e JUMPDEST
0xc9f PUSH1 0x0
0xca1 DUP4
0xca2 PUSH1 0x1
0xca4 PUSH1 0xa0
0xca6 PUSH1 0x2
0xca8 EXP
0xca9 SUB
0xcaa DUP2
0xcab AND
0xcac ISZERO
0xcad ISZERO
0xcae PUSH2 0xcb6
0xcb1 JUMPI
---
0xc9e: JUMPDEST 
0xc9f: V1178 = 0x0
0xca2: V1179 = 0x1
0xca4: V1180 = 0xa0
0xca6: V1181 = 0x2
0xca8: V1182 = EXP 0x2 0xa0
0xca9: V1183 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcab: V1184 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0xcac: V1185 = ISZERO V1184
0xcad: V1186 = ISZERO V1185
0xcae: V1187 = 0xcb6
0xcb1: JUMPI 0xcb6 V1186
---
Entry stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S2]
Exit stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179]

================================

Block 0xcb2
[0xcb2:0xcb5]
---
Predecessors: [0xc9e]
Successors: []
---
0xcb2 PUSH1 0x0
0xcb4 DUP1
0xcb5 REVERT
---
0xcb2: V1188 = 0x0
0xcb5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179]

================================

Block 0xcb6
[0xcb6:0xcc7]
---
Predecessors: [0xc9e]
Successors: [0xcc8, 0xccc]
---
0xcb6 JUMPDEST
0xcb7 DUP4
0xcb8 PUSH1 0x1
0xcba PUSH1 0xa0
0xcbc PUSH1 0x2
0xcbe EXP
0xcbf SUB
0xcc0 DUP2
0xcc1 AND
0xcc2 ISZERO
0xcc3 ISZERO
0xcc4 PUSH2 0xccc
0xcc7 JUMPI
---
0xcb6: JUMPDEST 
0xcb8: V1189 = 0x1
0xcba: V1190 = 0xa0
0xcbc: V1191 = 0x2
0xcbe: V1192 = EXP 0x2 0xa0
0xcbf: V1193 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc1: V1194 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0xcc2: V1195 = ISZERO V1194
0xcc3: V1196 = ISZERO V1195
0xcc4: V1197 = 0xccc
0xcc7: JUMPI 0xccc V1196
---
Entry stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179, V182]

================================

Block 0xcc8
[0xcc8:0xccb]
---
Predecessors: [0xcb6]
Successors: []
---
0xcc8 PUSH1 0x0
0xcca DUP1
0xccb REVERT
---
0xcc8: V1198 = 0x0
0xccb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179, V182]

================================

Block 0xccc
[0xccc:0xcfc]
---
Predecessors: [0xcb6]
Successors: [0xc87]
---
0xccc JUMPDEST
0xccd PUSH1 0x1
0xccf PUSH1 0xa0
0xcd1 PUSH1 0x2
0xcd3 EXP
0xcd4 SUB
0xcd5 DUP1
0xcd6 DUP8
0xcd7 AND
0xcd8 PUSH1 0x0
0xcda SWAP1
0xcdb DUP2
0xcdc MSTORE
0xcdd PUSH1 0x8
0xcdf PUSH1 0x20
0xce1 SWAP1
0xce2 DUP2
0xce3 MSTORE
0xce4 PUSH1 0x40
0xce6 DUP1
0xce7 DUP4
0xce8 SHA3
0xce9 CALLER
0xcea SWAP1
0xceb SWAP5
0xcec AND
0xced DUP4
0xcee MSTORE
0xcef SWAP3
0xcf0 SWAP1
0xcf1 MSTORE
0xcf2 SHA3
0xcf3 SLOAD
0xcf4 PUSH2 0xcfd
0xcf7 SWAP1
0xcf8 DUP6
0xcf9 PUSH2 0xc87
0xcfc JUMP
---
0xccc: JUMPDEST 
0xccd: V1199 = 0x1
0xccf: V1200 = 0xa0
0xcd1: V1201 = 0x2
0xcd3: V1202 = EXP 0x2 0xa0
0xcd4: V1203 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd7: V1204 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0xcd8: V1205 = 0x0
0xcdc: M[0x0] = V1204
0xcdd: V1206 = 0x8
0xcdf: V1207 = 0x20
0xce3: M[0x20] = 0x8
0xce4: V1208 = 0x40
0xce8: V1209 = SHA3 0x0 0x40
0xce9: V1210 = CALLER
0xcec: V1211 = AND 0xffffffffffffffffffffffffffffffffffffffff V1210
0xcee: M[0x0] = V1211
0xcf1: M[0x20] = V1209
0xcf2: V1212 = SHA3 0x0 0x40
0xcf3: V1213 = S[V1212]
0xcf4: V1214 = 0xcfd
0xcf9: V1215 = 0xc87
0xcfc: JUMP 0xc87
---
Entry stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179, V182]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xcfd, V1213, S3]
Exit stack: [V10, 0x1b2, V179, V182, V184, 0x0, V182, 0x860, V179, V182, V184, 0x0, V179, V182, 0xcfd, V1213, V184]

================================

Block 0xcfd
[0xcfd:0xd3d]
---
Predecessors: [0xc98]
Successors: [0xc87]
---
0xcfd JUMPDEST
0xcfe PUSH1 0x1
0xd00 PUSH1 0xa0
0xd02 PUSH1 0x2
0xd04 EXP
0xd05 SUB
0xd06 DUP1
0xd07 DUP9
0xd08 AND
0xd09 PUSH1 0x0
0xd0b DUP2
0xd0c DUP2
0xd0d MSTORE
0xd0e PUSH1 0x8
0xd10 PUSH1 0x20
0xd12 SWAP1
0xd13 DUP2
0xd14 MSTORE
0xd15 PUSH1 0x40
0xd17 DUP1
0xd18 DUP4
0xd19 SHA3
0xd1a CALLER
0xd1b SWAP1
0xd1c SWAP6
0xd1d AND
0xd1e DUP4
0xd1f MSTORE
0xd20 SWAP4
0xd21 DUP2
0xd22 MSTORE
0xd23 DUP4
0xd24 DUP3
0xd25 SHA3
0xd26 SWAP5
0xd27 SWAP1
0xd28 SWAP5
0xd29 SSTORE
0xd2a SWAP1
0xd2b DUP2
0xd2c MSTORE
0xd2d PUSH1 0x7
0xd2f SWAP1
0xd30 SWAP3
0xd31 MSTORE
0xd32 SWAP1
0xd33 SHA3
0xd34 SLOAD
0xd35 PUSH2 0xd3e
0xd38 SWAP1
0xd39 DUP6
0xd3a PUSH2 0xc87
0xd3d JUMP
---
0xcfd: JUMPDEST 
0xcfe: V1216 = 0x1
0xd00: V1217 = 0xa0
0xd02: V1218 = 0x2
0xd04: V1219 = EXP 0x2 0xa0
0xd05: V1220 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd08: V1221 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xd09: V1222 = 0x0
0xd0d: M[0x0] = V1221
0xd0e: V1223 = 0x8
0xd10: V1224 = 0x20
0xd14: M[0x20] = 0x8
0xd15: V1225 = 0x40
0xd19: V1226 = SHA3 0x0 0x40
0xd1a: V1227 = CALLER
0xd1d: V1228 = AND 0xffffffffffffffffffffffffffffffffffffffff V1227
0xd1f: M[0x0] = V1228
0xd22: M[0x20] = V1226
0xd25: V1229 = SHA3 0x0 0x40
0xd29: S[V1229] = S0
0xd2c: M[0x0] = V1221
0xd2d: V1230 = 0x7
0xd31: M[0x20] = 0x7
0xd33: V1231 = SHA3 0x0 0x40
0xd34: V1232 = S[V1231]
0xd35: V1233 = 0xd3e
0xd3a: V1234 = 0xc87
0xd3d: JUMP 0xc87
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0xd3e, V1232, S4]
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xd3e, V1232, S4]

================================

Block 0xd3e
[0xd3e:0xd6c]
---
Predecessors: [0xc98]
Successors: [0xc6d]
---
0xd3e JUMPDEST
0xd3f PUSH1 0x1
0xd41 PUSH1 0xa0
0xd43 PUSH1 0x2
0xd45 EXP
0xd46 SUB
0xd47 DUP1
0xd48 DUP9
0xd49 AND
0xd4a PUSH1 0x0
0xd4c SWAP1
0xd4d DUP2
0xd4e MSTORE
0xd4f PUSH1 0x7
0xd51 PUSH1 0x20
0xd53 MSTORE
0xd54 PUSH1 0x40
0xd56 DUP1
0xd57 DUP3
0xd58 SHA3
0xd59 SWAP4
0xd5a SWAP1
0xd5b SWAP4
0xd5c SSTORE
0xd5d SWAP1
0xd5e DUP8
0xd5f AND
0xd60 DUP2
0xd61 MSTORE
0xd62 SHA3
0xd63 SLOAD
0xd64 PUSH2 0xd6d
0xd67 SWAP1
0xd68 DUP6
0xd69 PUSH2 0xc6d
0xd6c JUMP
---
0xd3e: JUMPDEST 
0xd3f: V1235 = 0x1
0xd41: V1236 = 0xa0
0xd43: V1237 = 0x2
0xd45: V1238 = EXP 0x2 0xa0
0xd46: V1239 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd49: V1240 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xd4a: V1241 = 0x0
0xd4e: M[0x0] = V1240
0xd4f: V1242 = 0x7
0xd51: V1243 = 0x20
0xd53: M[0x20] = 0x7
0xd54: V1244 = 0x40
0xd58: V1245 = SHA3 0x0 0x40
0xd5c: S[V1245] = S0
0xd5f: V1246 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xd61: M[0x0] = V1246
0xd62: V1247 = SHA3 0x0 0x40
0xd63: V1248 = S[V1247]
0xd64: V1249 = 0xd6d
0xd69: V1250 = 0xc6d
0xd6c: JUMP 0xc6d
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0xd6d, V1248, S4]
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xd6d, V1248, S4]

================================

Block 0xd6d
[0xd6d:0xdb6]
---
Predecessors: [0xc80]
Successors: [0xdb7]
---
0xd6d JUMPDEST
0xd6e PUSH1 0x1
0xd70 PUSH1 0xa0
0xd72 PUSH1 0x2
0xd74 EXP
0xd75 SUB
0xd76 DUP1
0xd77 DUP8
0xd78 AND
0xd79 PUSH1 0x0
0xd7b DUP2
0xd7c DUP2
0xd7d MSTORE
0xd7e PUSH1 0x7
0xd80 PUSH1 0x20
0xd82 MSTORE
0xd83 PUSH1 0x40
0xd85 SWAP1
0xd86 DUP2
0xd87 SWAP1
0xd88 SHA3
0xd89 SWAP4
0xd8a SWAP1
0xd8b SWAP4
0xd8c SSTORE
0xd8d SWAP2
0xd8e SWAP1
0xd8f DUP9
0xd90 AND
0xd91 SWAP1
0xd92 PUSH1 0x0
0xd94 DUP1
0xd95 MLOAD
0xd96 PUSH1 0x20
0xd98 PUSH2 0xe80
0xd9b DUP4
0xd9c CODECOPY
0xd9d DUP2
0xd9e MLOAD
0xd9f SWAP2
0xda0 MSTORE
0xda1 SWAP1
0xda2 DUP8
0xda3 SWAP1
0xda4 MLOAD
0xda5 SWAP1
0xda6 DUP2
0xda7 MSTORE
0xda8 PUSH1 0x20
0xdaa ADD
0xdab PUSH1 0x40
0xdad MLOAD
0xdae DUP1
0xdaf SWAP2
0xdb0 SUB
0xdb1 SWAP1
0xdb2 LOG3
0xdb3 PUSH1 0x1
0xdb5 SWAP3
0xdb6 POP
---
0xd6d: JUMPDEST 
0xd6e: V1251 = 0x1
0xd70: V1252 = 0xa0
0xd72: V1253 = 0x2
0xd74: V1254 = EXP 0x2 0xa0
0xd75: V1255 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd78: V1256 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xd79: V1257 = 0x0
0xd7d: M[0x0] = V1256
0xd7e: V1258 = 0x7
0xd80: V1259 = 0x20
0xd82: M[0x20] = 0x7
0xd83: V1260 = 0x40
0xd88: V1261 = SHA3 0x0 0x40
0xd8c: S[V1261] = S0
0xd90: V1262 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xd92: V1263 = 0x0
0xd95: V1264 = M[0x0]
0xd96: V1265 = 0x20
0xd98: V1266 = 0xe80
0xd9c: CODECOPY 0x0 0xe80 0x20
0xd9e: V1267 = M[0x0]
0xda0: M[0x0] = V1264
0xda4: V1268 = M[0x40]
0xda7: M[V1268] = S4
0xda8: V1269 = 0x20
0xdaa: V1270 = ADD 0x20 V1268
0xdab: V1271 = 0x40
0xdad: V1272 = M[0x40]
0xdb0: V1273 = SUB V1270 V1272
0xdb2: LOG V1272 V1273 V1267 V1262 V1256
0xdb3: V1274 = 0x1
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, {0x0, 0x860}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, 0x1, S2, S1]
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, {0x0, 0x860}, S6, S5, S4, 0x1, S2, S1]

================================

Block 0xdb7
[0xdb7:0xdb7]
---
Predecessors: [0xd6d]
Successors: [0xdb8]
---
0xdb7 JUMPDEST
---
0xdb7: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, 0x1, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, 0x1, S1, S0]

================================

Block 0xdb8
[0xdb8:0xdb9]
---
Predecessors: [0xdb7]
Successors: [0xdba]
---
0xdb8 JUMPDEST
0xdb9 POP
---
0xdb8: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, 0x1, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, 0x1, S1]

================================

Block 0xdba
[0xdba:0xdc1]
---
Predecessors: [0xdb8]
Successors: [0x860]
---
0xdba JUMPDEST
0xdbb POP
0xdbc SWAP4
0xdbd SWAP3
0xdbe POP
0xdbf POP
0xdc0 POP
0xdc1 JUMP
---
0xdba: JUMPDEST 
0xdc1: JUMP {0x0, 0x860}
---
Entry stack: [V10, 0x1b2, V179, S9, S8, S7, S6, {0x0, 0x860}, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V10, 0x1b2, V179, S9, S8, S7, S6, 0x1]

================================

Block 0xdc2
[0xdc2:0xdd5]
---
Predecessors: [0xbc2]
Successors: [0xdd6, 0xdda]
---
0xdc2 JUMPDEST
0xdc3 PUSH1 0x0
0xdc5 DUP3
0xdc6 PUSH1 0x1
0xdc8 PUSH1 0xa0
0xdca PUSH1 0x2
0xdcc EXP
0xdcd SUB
0xdce DUP2
0xdcf AND
0xdd0 ISZERO
0xdd1 ISZERO
0xdd2 PUSH2 0xdda
0xdd5 JUMPI
---
0xdc2: JUMPDEST 
0xdc3: V1275 = 0x0
0xdc6: V1276 = 0x1
0xdc8: V1277 = 0xa0
0xdca: V1278 = 0x2
0xdcc: V1279 = EXP 0x2 0xa0
0xdcd: V1280 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdcf: V1281 = AND V387 0xffffffffffffffffffffffffffffffffffffffff
0xdd0: V1282 = ISZERO V1281
0xdd1: V1283 = ISZERO V1282
0xdd2: V1284 = 0xdda
0xdd5: JUMPI 0xdda V1283
---
Entry stack: [V10, 0x1b2, V387, V389, 0x0, V387, 0xbcc, V387, V389]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V10, 0x1b2, V387, V389, 0x0, V387, 0xbcc, V387, V389, 0x0, V387]

================================

Block 0xdd6
[0xdd6:0xdd9]
---
Predecessors: [0xdc2]
Successors: []
---
0xdd6 PUSH1 0x0
0xdd8 DUP1
0xdd9 REVERT
---
0xdd6: V1285 = 0x0
0xdd9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b2, V387, V389, 0x0, V387, 0xbcc, V387, V389, 0x0, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V387, V389, 0x0, V387, 0xbcc, V387, V389, 0x0, V387]

================================

Block 0xdda
[0xdda:0xdfc]
---
Predecessors: [0xdc2]
Successors: [0xc87]
---
0xdda JUMPDEST
0xddb PUSH1 0x1
0xddd PUSH1 0xa0
0xddf PUSH1 0x2
0xde1 EXP
0xde2 SUB
0xde3 CALLER
0xde4 AND
0xde5 PUSH1 0x0
0xde7 SWAP1
0xde8 DUP2
0xde9 MSTORE
0xdea PUSH1 0x7
0xdec PUSH1 0x20
0xdee MSTORE
0xdef PUSH1 0x40
0xdf1 SWAP1
0xdf2 SHA3
0xdf3 SLOAD
0xdf4 PUSH2 0xdfd
0xdf7 SWAP1
0xdf8 DUP5
0xdf9 PUSH2 0xc87
0xdfc JUMP
---
0xdda: JUMPDEST 
0xddb: V1286 = 0x1
0xddd: V1287 = 0xa0
0xddf: V1288 = 0x2
0xde1: V1289 = EXP 0x2 0xa0
0xde2: V1290 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde3: V1291 = CALLER
0xde4: V1292 = AND V1291 0xffffffffffffffffffffffffffffffffffffffff
0xde5: V1293 = 0x0
0xde9: M[0x0] = V1292
0xdea: V1294 = 0x7
0xdec: V1295 = 0x20
0xdee: M[0x20] = 0x7
0xdef: V1296 = 0x40
0xdf2: V1297 = SHA3 0x0 0x40
0xdf3: V1298 = S[V1297]
0xdf4: V1299 = 0xdfd
0xdf9: V1300 = 0xc87
0xdfc: JUMP 0xc87
---
Entry stack: [V10, 0x1b2, V387, V389, 0x0, V387, 0xbcc, V387, V389, 0x0, V387]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xdfd, V1298, S2]
Exit stack: [V10, 0x1b2, V387, V389, 0x0, V387, 0xbcc, V387, V389, 0x0, V387, 0xdfd, V1298, V389]

================================

Block 0xdfd
[0xdfd:0xe2b]
---
Predecessors: [0xc98]
Successors: [0xc6d]
---
0xdfd JUMPDEST
0xdfe PUSH1 0x1
0xe00 PUSH1 0xa0
0xe02 PUSH1 0x2
0xe04 EXP
0xe05 SUB
0xe06 CALLER
0xe07 DUP2
0xe08 AND
0xe09 PUSH1 0x0
0xe0b SWAP1
0xe0c DUP2
0xe0d MSTORE
0xe0e PUSH1 0x7
0xe10 PUSH1 0x20
0xe12 MSTORE
0xe13 PUSH1 0x40
0xe15 DUP1
0xe16 DUP3
0xe17 SHA3
0xe18 SWAP4
0xe19 SWAP1
0xe1a SWAP4
0xe1b SSTORE
0xe1c SWAP1
0xe1d DUP7
0xe1e AND
0xe1f DUP2
0xe20 MSTORE
0xe21 SHA3
0xe22 SLOAD
0xe23 PUSH2 0xe2c
0xe26 SWAP1
0xe27 DUP5
0xe28 PUSH2 0xc6d
0xe2b JUMP
---
0xdfd: JUMPDEST 
0xdfe: V1301 = 0x1
0xe00: V1302 = 0xa0
0xe02: V1303 = 0x2
0xe04: V1304 = EXP 0x2 0xa0
0xe05: V1305 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe06: V1306 = CALLER
0xe08: V1307 = AND 0xffffffffffffffffffffffffffffffffffffffff V1306
0xe09: V1308 = 0x0
0xe0d: M[0x0] = V1307
0xe0e: V1309 = 0x7
0xe10: V1310 = 0x20
0xe12: M[0x20] = 0x7
0xe13: V1311 = 0x40
0xe17: V1312 = SHA3 0x0 0x40
0xe1b: S[V1312] = S0
0xe1e: V1313 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xe20: M[0x0] = V1313
0xe21: V1314 = SHA3 0x0 0x40
0xe22: V1315 = S[V1314]
0xe23: V1316 = 0xe2c
0xe28: V1317 = 0xc6d
0xe2b: JUMP 0xc6d
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xe2c, V1315, S3]
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xe2c, V1315, S3]

================================

Block 0xe2c
[0xe2c:0xe76]
---
Predecessors: [0xc80]
Successors: [0xe77]
---
0xe2c JUMPDEST
0xe2d PUSH1 0x1
0xe2f PUSH1 0xa0
0xe31 PUSH1 0x2
0xe33 EXP
0xe34 SUB
0xe35 DUP1
0xe36 DUP7
0xe37 AND
0xe38 PUSH1 0x0
0xe3a DUP2
0xe3b DUP2
0xe3c MSTORE
0xe3d PUSH1 0x7
0xe3f PUSH1 0x20
0xe41 MSTORE
0xe42 PUSH1 0x40
0xe44 SWAP1
0xe45 DUP2
0xe46 SWAP1
0xe47 SHA3
0xe48 SWAP4
0xe49 SWAP1
0xe4a SWAP4
0xe4b SSTORE
0xe4c SWAP2
0xe4d CALLER
0xe4e SWAP1
0xe4f SWAP2
0xe50 AND
0xe51 SWAP1
0xe52 PUSH1 0x0
0xe54 DUP1
0xe55 MLOAD
0xe56 PUSH1 0x20
0xe58 PUSH2 0xe80
0xe5b DUP4
0xe5c CODECOPY
0xe5d DUP2
0xe5e MLOAD
0xe5f SWAP2
0xe60 MSTORE
0xe61 SWAP1
0xe62 DUP7
0xe63 SWAP1
0xe64 MLOAD
0xe65 SWAP1
0xe66 DUP2
0xe67 MSTORE
0xe68 PUSH1 0x20
0xe6a ADD
0xe6b PUSH1 0x40
0xe6d MLOAD
0xe6e DUP1
0xe6f SWAP2
0xe70 SUB
0xe71 SWAP1
0xe72 LOG3
0xe73 PUSH1 0x1
0xe75 SWAP2
0xe76 POP
---
0xe2c: JUMPDEST 
0xe2d: V1318 = 0x1
0xe2f: V1319 = 0xa0
0xe31: V1320 = 0x2
0xe33: V1321 = EXP 0x2 0xa0
0xe34: V1322 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe37: V1323 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xe38: V1324 = 0x0
0xe3c: M[0x0] = V1323
0xe3d: V1325 = 0x7
0xe3f: V1326 = 0x20
0xe41: M[0x20] = 0x7
0xe42: V1327 = 0x40
0xe47: V1328 = SHA3 0x0 0x40
0xe4b: S[V1328] = S0
0xe4d: V1329 = CALLER
0xe50: V1330 = AND 0xffffffffffffffffffffffffffffffffffffffff V1329
0xe52: V1331 = 0x0
0xe55: V1332 = M[0x0]
0xe56: V1333 = 0x20
0xe58: V1334 = 0xe80
0xe5c: CODECOPY 0x0 0xe80 0x20
0xe5e: V1335 = M[0x0]
0xe60: M[0x0] = V1332
0xe64: V1336 = M[0x40]
0xe67: M[V1336] = S3
0xe68: V1337 = 0x20
0xe6a: V1338 = ADD 0x20 V1336
0xe6b: V1339 = 0x40
0xe6d: V1340 = M[0x40]
0xe70: V1341 = SUB V1338 V1340
0xe72: LOG V1340 V1341 V1335 V1330 V1323
0xe73: V1342 = 0x1
---
Entry stack: [V10, 0x1b2, V179, S11, S10, S9, S8, {0x0, 0x860}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, 0x1, S1]
Exit stack: [V10, 0x1b2, V179, S11, S10, S9, S8, {0x0, 0x860}, S6, S5, S4, S3, 0x1, S1]

================================

Block 0xe77
[0xe77:0xe77]
---
Predecessors: [0xe2c]
Successors: [0xe78]
---
0xe77 JUMPDEST
---
0xe77: JUMPDEST 
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, S2, 0x1, S0]

================================

Block 0xe78
[0xe78:0xe7e]
---
Predecessors: [0xe77]
Successors: [0xbcc]
---
0xe78 JUMPDEST
0xe79 POP
0xe7a SWAP3
0xe7b SWAP2
0xe7c POP
0xe7d POP
0xe7e JUMP
---
0xe78: JUMPDEST 
0xe7e: JUMP S4
---
Entry stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, S4, S3, S2, 0x1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x1b2, V179, S10, S9, S8, S7, {0x0, 0x860}, S5, 0x1]

================================

Block 0xe7f
[0xe7f:0xeca]
---
Predecessors: []
Successors: []
---
0xe7f STOP
0xe80 MISSING 0xdd
0xe81 CALLCODE
0xe82 MSTORE
0xe83 MISSING 0xad
0xe84 SHL
0xe85 MISSING 0xe2
0xe86 MISSING 0xc8
0xe87 SWAP12
0xe88 PUSH10 0xc2b068fc378daa952ba7
0xe93 CALL
0xe94 PUSH4 0xc4a11628
0xe99 CREATE2
0xe9a GAS
0xe9b MISSING 0x4d
0xe9c CREATE2
0xe9d MISSING 0x23
0xe9e MISSING 0xb3
0xe9f MISSING 0xef
0xea0 LOG1
0xea1 PUSH6 0x627a7a723058
0xea8 SHA3
0xea9 MISSING 0xc4
0xeaa MISSING 0xa9
0xeab MISSING 0x47
0xeac PUSH6 0xf8e4f7bd2740
0xeb3 MISSING 0xc3
0xeb4 LOG1
0xeb5 CALL
0xeb6 PUSH1 0xfa
0xeb8 PUSH15 0x88e8064d9839f932cb6982620da6b1
0xec8 GT
0xec9 STOP
0xeca MISSING 0x29
---
0xe7f: STOP 
0xe80: MISSING 0xdd
0xe81: V1343 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xe82: M[V1343] = S7
0xe83: MISSING 0xad
0xe84: V1344 = SHL S0 S1
0xe85: MISSING 0xe2
0xe86: MISSING 0xc8
0xe88: V1345 = 0xc2b068fc378daa952ba7
0xe93: V1346 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0xe94: V1347 = 0xc4a11628
0xe99: V1348 = CREATE2 0xc4a11628 V1346 S6 S7
0xe9a: V1349 = GAS
0xe9b: MISSING 0x4d
0xe9c: V1350 = CREATE2 S0 S1 S2 S3
0xe9d: MISSING 0x23
0xe9e: MISSING 0xb3
0xe9f: MISSING 0xef
0xea0: LOG S0 S1 S2
0xea1: V1351 = 0x627a7a723058
0xea8: V1352 = SHA3 0x627a7a723058 S3
0xea9: MISSING 0xc4
0xeaa: MISSING 0xa9
0xeab: MISSING 0x47
0xeac: V1353 = 0xf8e4f7bd2740
0xeb3: MISSING 0xc3
0xeb4: LOG S0 S1 S2
0xeb5: V1354 = CALL S3 S4 S5 S6 S7 S8 S9
0xeb6: V1355 = 0xfa
0xeb8: V1356 = 0x88e8064d9839f932cb6982620da6b1
0xec8: V1357 = GT 0x88e8064d9839f932cb6982620da6b1 0xfa
0xec9: STOP 
0xeca: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1344, V1349, V1348, S8, S9, S10, S11, S0, V1350, V1352, 0xf8e4f7bd2740, 0x1, V1354]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x105
Exit block: 0x182
Body: 0x105, 0x10c, 0x110, 0x118, 0x13c, 0x145, 0x14d, 0x155, 0x169, 0x182, 0x5bf, 0x60f, 0x617, 0x62a, 0x638, 0x64c, 0x655

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x190
Exit block: 0x1b2
Body: 0x190, 0x197, 0x19b, 0x1b2, 0x65d, 0x671, 0x675, 0x67d, 0x6a5, 0x6ac, 0x6b0, 0x715, 0x716

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1c6
Exit block: 0x1d9
Body: 0x1c6, 0x1cd, 0x1d1, 0x1d9, 0x71d

Function 3:
Public function signature: 0x205c2878
Entry block: 0x1eb
Exit block: 0x103
Body: 0x102, 0x103, 0x1eb, 0x1f2, 0x1f6

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x20f
Exit block: 0xbd3
Body: 0x20f, 0x216, 0x21a, 0x831, 0x851, 0x855, 0xbd3, 0xc9e, 0xcb2, 0xcb6, 0xcc8, 0xccc, 0xcfd

Function 5:
Public function signature: 0x2e1a7d4d
Entry block: 0x24b
Exit block: 0x103
Body: 0x102, 0x103, 0x24b, 0x252, 0x256, 0x876, 0x880, 0x881

Function 6:
Public function signature: 0x313ce567
Entry block: 0x263
Exit block: 0x276
Body: 0x263, 0x26a, 0x26e, 0x276, 0x884

Function 7:
Public function signature: 0x5a3b7e42
Entry block: 0x28c
Exit block: 0x182
Body: 0x118, 0x13c, 0x145, 0x14d, 0x155, 0x169, 0x182, 0x28c, 0x293, 0x297, 0x62a, 0x638, 0x64c, 0x655, 0x88d, 0x8dd, 0x8e5

Function 8:
Public function signature: 0x5e35359e
Entry block: 0x317
Exit block: 0x103
Body: 0x102, 0x103, 0x317, 0x31e, 0x322, 0x92b, 0x942, 0x943, 0x955, 0x959, 0x96b, 0x96f, 0x98d, 0x991, 0xa03, 0xa07, 0xa14, 0xa18, 0xa29, 0xa2a, 0xa2b, 0xa2c, 0xa2e, 0xa30, 0xa32

Function 9:
Public function signature: 0x70a08231
Entry block: 0x341
Exit block: 0x1d9
Body: 0x1d9, 0x341, 0x348, 0x34c, 0xa37

Function 10:
Public function signature: 0x79ba5097
Entry block: 0x372
Exit block: 0x103
Body: 0x102, 0x103, 0x372, 0x379, 0x37d, 0xa49, 0xa60, 0xa64, 0xaef

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x387
Exit block: 0x39a
Body: 0x387, 0x38e, 0x392, 0x39a, 0xaf1

Function 12:
Public function signature: 0x95d89b41
Entry block: 0x3b6
Exit block: 0x182
Body: 0x118, 0x13c, 0x145, 0x14d, 0x155, 0x169, 0x182, 0x3b6, 0x3bd, 0x3c1, 0x62a, 0x638, 0x64c, 0x655, 0xb00, 0xb50, 0xb58

Function 13:
Public function signature: 0xa9059cbb
Entry block: 0x441
Exit block: 0x1b2
Body: 0x1b2, 0x441, 0x448, 0x44c, 0xb9e, 0xbbe, 0xbc2, 0xbcc, 0xbd3, 0xbd4, 0xbd9, 0xbda, 0xdc2, 0xdd6, 0xdda, 0xdfd

Function 14:
Public function signature: 0xd0e30db0
Entry block: 0xf9
Exit block: 0x103
Body: 0xf9, 0xfa, 0x102, 0x103

Function 15:
Public function signature: 0xd4ee1d90
Entry block: 0x481
Exit block: 0x39a
Body: 0x39a, 0x481, 0x488, 0x48c, 0xbe1

Function 16:
Public function signature: 0xdd62ed3e
Entry block: 0x4b0
Exit block: 0x1d9
Body: 0x1d9, 0x4b0, 0x4b7, 0x4bb, 0xbf0

Function 17:
Public function signature: 0xf2fde38b
Entry block: 0x4e7
Exit block: 0x103
Body: 0x102, 0x103, 0x4e7, 0x4ee, 0x4f2, 0xc0d, 0xc24, 0xc25, 0xc3c, 0xc40, 0xc69, 0xc6a

Function 18:
Public fallback function
Entry block: 0xf9
Exit block: 0x103
Body: 0xf9, 0xfa, 0x102, 0x103

Function 19:
Private function
Entry block: 0x723
Exit block: 0x82c
Body: 0x723, 0x745, 0x768, 0x768, 0x78e, 0x7c2, 0x82b, 0x82c, 0xc87, 0xc93, 0xc98, 0xcfd, 0xd3e, 0xd3e, 0xdfd

Function 20:
Private function
Entry block: 0xc87
Exit block: 0xc98
Body: 0xc87, 0xc93, 0xc98

Function 21:
Private function
Entry block: 0xc6d
Exit block: 0xc80
Body: 0xc6d, 0xc7c, 0xc80

Function 22:
Private function
Entry block: 0x508
Exit block: 0xc6a
Body: 0x508, 0x52b, 0x52b, 0x551, 0x5bd, 0xc6d, 0xc7c, 0xc80

