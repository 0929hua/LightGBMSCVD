Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xa6622798
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xa6622798
0x3b: V13 = EQ V11 0xa6622798
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x78]
---
0x40 DUP1
0x41 PUSH4 0xad2b884e
0x46 EQ
0x47 PUSH2 0x78
0x4a JUMPI
---
0x41: V15 = 0xad2b884e
0x46: V16 = EQ 0xad2b884e V11
0x47: V17 = 0x78
0x4a: JUMPI 0x78 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc3]
---
0x4b DUP1
0x4c PUSH4 0xb69ef8a8
0x51 EQ
0x52 PUSH2 0xc3
0x55 JUMPI
---
0x4c: V18 = 0xb69ef8a8
0x51: V19 = EQ 0xb69ef8a8 V11
0x52: V20 = 0xc3
0x55: JUMPI 0xc3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xea]
---
0x56 DUP1
0x57 PUSH4 0xeffc73a4
0x5c EQ
0x5d PUSH2 0xea
0x60 JUMPI
---
0x57: V21 = 0xeffc73a4
0x5c: V22 = EQ 0xeffc73a4 V11
0x5d: V23 = 0xea
0x60: JUMPI 0xea V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x165]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x6f
[0x6f:0x77]
---
Predecessors: [0x63]
Successors: [0xff]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH2 0x61
0x74 PUSH2 0xff
0x77 JUMP
---
0x6f: JUMPDEST 
0x71: V28 = 0x61
0x74: V29 = 0xff
0x77: JUMP 0xff
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x40]
Successors: [0x80, 0x84]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a DUP1
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x78: JUMPDEST 
0x79: V30 = CALLVALUE
0x7b: V31 = ISZERO V30
0x7c: V32 = 0x84
0x7f: JUMPI 0x84 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x78]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V33 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x84
[0x84:0xae]
---
Predecessors: [0x78]
Successors: [0x168]
---
0x84 JUMPDEST
0x85 POP
0x86 PUSH2 0xaf
0x89 PUSH1 0x4
0x8b CALLDATALOAD
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 PUSH1 0x24
0xa3 CALLDATALOAD
0xa4 AND
0xa5 PUSH1 0x44
0xa7 CALLDATALOAD
0xa8 PUSH1 0x64
0xaa CALLDATALOAD
0xab PUSH2 0x168
0xae JUMP
---
0x84: JUMPDEST 
0x86: V34 = 0xaf
0x89: V35 = 0x4
0x8b: V36 = CALLDATALOAD 0x4
0x8c: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V38 = 0x24
0xa3: V39 = CALLDATALOAD 0x24
0xa4: V40 = AND V39 0xffffffffffffffffffffffffffffffffffffffff
0xa5: V41 = 0x44
0xa7: V42 = CALLDATALOAD 0x44
0xa8: V43 = 0x64
0xaa: V44 = CALLDATALOAD 0x64
0xab: V45 = 0x168
0xae: JUMP 0x168
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0xaf, V36, V40, V42, V44]
Exit stack: [V11, 0xaf, V36, V40, V42, V44]

================================

Block 0xaf
[0xaf:0xc2]
---
Predecessors: [0x347]
Successors: []
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 DUP1
0xb3 MLOAD
0xb4 SWAP2
0xb5 ISZERO
0xb6 ISZERO
0xb7 DUP3
0xb8 MSTORE
0xb9 MLOAD
0xba SWAP1
0xbb DUP2
0xbc SWAP1
0xbd SUB
0xbe PUSH1 0x20
0xc0 ADD
0xc1 SWAP1
0xc2 RETURN
---
0xaf: JUMPDEST 
0xb0: V46 = 0x40
0xb3: V47 = M[0x40]
0xb5: V48 = ISZERO 0x1
0xb6: V49 = ISZERO 0x0
0xb8: M[V47] = 0x1
0xb9: V50 = M[0x40]
0xbd: V51 = SUB V47 V50
0xbe: V52 = 0x20
0xc0: V53 = ADD 0x20 V51
0xc2: RETURN V50 V53
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0x4b]
Successors: [0xcb, 0xcf]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 DUP1
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc3: JUMPDEST 
0xc4: V54 = CALLVALUE
0xc6: V55 = ISZERO V54
0xc7: V56 = 0xcf
0xca: JUMPI 0xcf V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc3]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V57 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xcf
[0xcf:0xd7]
---
Predecessors: [0xc3]
Successors: [0x355]
---
0xcf JUMPDEST
0xd0 POP
0xd1 PUSH2 0xd8
0xd4 PUSH2 0x355
0xd7 JUMP
---
0xcf: JUMPDEST 
0xd1: V58 = 0xd8
0xd4: V59 = 0x355
0xd7: JUMP 0x355
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0xd8]
Exit stack: [V11, 0xd8]

================================

Block 0xd8
[0xd8:0xe9]
---
Predecessors: [0x355]
Successors: []
---
0xd8 JUMPDEST
0xd9 PUSH1 0x40
0xdb DUP1
0xdc MLOAD
0xdd SWAP2
0xde DUP3
0xdf MSTORE
0xe0 MLOAD
0xe1 SWAP1
0xe2 DUP2
0xe3 SWAP1
0xe4 SUB
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 RETURN
---
0xd8: JUMPDEST 
0xd9: V60 = 0x40
0xdc: V61 = M[0x40]
0xdf: M[V61] = V194
0xe0: V62 = M[0x40]
0xe4: V63 = SUB V61 V62
0xe5: V64 = 0x20
0xe7: V65 = ADD 0x20 V63
0xe9: RETURN V62 V65
---
Entry stack: [V11, 0xd8, V194]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd8]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0x56]
Successors: [0xf2, 0xf6]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec DUP1
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xea: JUMPDEST 
0xeb: V66 = CALLVALUE
0xed: V67 = ISZERO V66
0xee: V68 = 0xf6
0xf1: JUMPI 0xf6 V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V11, V66]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xea]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V69 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V11, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66]

================================

Block 0xf6
[0xf6:0xfe]
---
Predecessors: [0xea]
Successors: [0x35b]
---
0xf6 JUMPDEST
0xf7 POP
0xf8 PUSH2 0x61
0xfb PUSH2 0x35b
0xfe JUMP
---
0xf6: JUMPDEST 
0xf8: V70 = 0x61
0xfb: V71 = 0x35b
0xfe: JUMP 0x35b
---
Entry stack: [V11, V66]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xff
[0xff:0x11a]
---
Predecessors: [0x6f]
Successors: [0x11b, 0x11f]
---
0xff JUMPDEST
0x100 CALLER
0x101 PUSH20 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0x116 EQ
0x117 PUSH2 0x11f
0x11a JUMPI
---
0xff: JUMPDEST 
0x100: V72 = CALLER
0x101: V73 = 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0x116: V74 = EQ 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87 V72
0x117: V75 = 0x11f
0x11a: JUMPI 0x11f V74
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0xff]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V76 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x11f
[0x11f:0x15b]
---
Predecessors: [0xff]
Successors: [0x15c, 0x165]
---
0x11f JUMPDEST
0x120 ADDRESS
0x121 BALANCE
0x122 PUSH1 0x1
0x124 DUP2
0x125 SWAP1
0x126 SSTORE
0x127 PUSH1 0x40
0x129 MLOAD
0x12a PUSH20 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0x13f SWAP2
0x140 DUP1
0x141 ISZERO
0x142 PUSH2 0x8fc
0x145 MUL
0x146 SWAP2
0x147 PUSH1 0x0
0x149 DUP2
0x14a DUP2
0x14b DUP2
0x14c DUP6
0x14d DUP9
0x14e DUP9
0x14f CALL
0x150 SWAP4
0x151 POP
0x152 POP
0x153 POP
0x154 POP
0x155 ISZERO
0x156 DUP1
0x157 ISZERO
0x158 PUSH2 0x165
0x15b JUMPI
---
0x11f: JUMPDEST 
0x120: V77 = ADDRESS
0x121: V78 = BALANCE V77
0x122: V79 = 0x1
0x126: S[0x1] = V78
0x127: V80 = 0x40
0x129: V81 = M[0x40]
0x12a: V82 = 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0x141: V83 = ISZERO V78
0x142: V84 = 0x8fc
0x145: V85 = MUL 0x8fc V83
0x147: V86 = 0x0
0x14f: V87 = CALL V85 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87 V78 V81 0x0 V81 0x0
0x155: V88 = ISZERO V87
0x157: V89 = ISZERO V88
0x158: V90 = 0x165
0x15b: JUMPI 0x165 V89
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, 0x61, V88]

================================

Block 0x15c
[0x15c:0x164]
---
Predecessors: [0x11f]
Successors: []
---
0x15c RETURNDATASIZE
0x15d PUSH1 0x0
0x15f DUP1
0x160 RETURNDATACOPY
0x161 RETURNDATASIZE
0x162 PUSH1 0x0
0x164 REVERT
---
0x15c: V91 = RETURNDATASIZE
0x15d: V92 = 0x0
0x160: RETURNDATACOPY 0x0 0x0 V91
0x161: V93 = RETURNDATASIZE
0x162: V94 = 0x0
0x164: REVERT 0x0 V93
---
Entry stack: [V11, 0x61, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V88]

================================

Block 0x165
[0x165:0x167]
---
Predecessors: [0x11f, 0x37f]
Successors: [0x61]
---
0x165 JUMPDEST
0x166 POP
0x167 JUMP
---
0x165: JUMPDEST 
0x167: JUMP 0x61
---
Entry stack: [V11, 0x61, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x168
[0x168:0x18a]
---
Predecessors: [0x84]
Successors: [0x18b, 0x18f]
---
0x168 JUMPDEST
0x169 PUSH1 0x0
0x16b DUP1
0x16c SLOAD
0x16d DUP2
0x16e SWAP1
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 CALLER
0x186 EQ
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x168: JUMPDEST 
0x169: V95 = 0x0
0x16c: V96 = S[0x0]
0x16f: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x185: V99 = CALLER
0x186: V100 = EQ V99 V98
0x187: V101 = 0x18f
0x18a: JUMPI 0x18f V100
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x168]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V102 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0]

================================

Block 0x18f
[0x18f:0x262]
---
Predecessors: [0x168]
Successors: [0x263]
---
0x18f JUMPDEST
0x190 PUSH1 0x40
0x192 DUP1
0x193 MLOAD
0x194 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x1b5 PUSH1 0x20
0x1b7 DUP1
0x1b8 DUP4
0x1b9 ADD
0x1ba SWAP2
0x1bb SWAP1
0x1bc SWAP2
0x1bd MSTORE
0x1be PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x1df PUSH1 0x21
0x1e1 DUP4
0x1e2 ADD
0x1e3 MSTORE
0x1e4 PUSH13 0x1000000000000000000000000
0x1f2 ADDRESS
0x1f3 MUL
0x1f4 PUSH1 0x22
0x1f6 DUP4
0x1f7 ADD
0x1f8 MSTORE
0x1f9 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x21a PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x23b DUP11
0x23c MUL
0x23d AND
0x23e PUSH1 0x36
0x240 DUP4
0x241 ADD
0x242 MSTORE
0x243 DUP3
0x244 MLOAD
0x245 PUSH1 0x17
0x247 DUP2
0x248 DUP5
0x249 SUB
0x24a ADD
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x37
0x24f SWAP1
0x250 SWAP3
0x251 ADD
0x252 SWAP3
0x253 DUP4
0x254 SWAP1
0x255 MSTORE
0x256 DUP2
0x257 MLOAD
0x258 SWAP2
0x259 SWAP3
0x25a SWAP2
0x25b DUP3
0x25c SWAP2
0x25d DUP5
0x25e ADD
0x25f SWAP1
0x260 DUP1
0x261 DUP4
0x262 DUP4
---
0x18f: JUMPDEST 
0x190: V103 = 0x40
0x193: V104 = M[0x40]
0x194: V105 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x1b5: V106 = 0x20
0x1b9: V107 = ADD V104 0x20
0x1bd: M[V107] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x1be: V108 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x1df: V109 = 0x21
0x1e2: V110 = ADD V104 0x21
0x1e3: M[V110] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x1e4: V111 = 0x1000000000000000000000000
0x1f2: V112 = ADDRESS
0x1f3: V113 = MUL V112 0x1000000000000000000000000
0x1f4: V114 = 0x22
0x1f7: V115 = ADD V104 0x22
0x1f8: M[V115] = V113
0x1f9: V116 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x21a: V117 = 0x100000000000000000000000000000000000000000000000000000000000000
0x23c: V118 = MUL V36 0x100000000000000000000000000000000000000000000000000000000000000
0x23d: V119 = AND V118 0xff00000000000000000000000000000000000000000000000000000000000000
0x23e: V120 = 0x36
0x241: V121 = ADD V104 0x36
0x242: M[V121] = V119
0x244: V122 = M[0x40]
0x245: V123 = 0x17
0x249: V124 = SUB V104 V122
0x24a: V125 = ADD V124 0x17
0x24c: M[V122] = V125
0x24d: V126 = 0x37
0x251: V127 = ADD V104 0x37
0x255: M[0x40] = V127
0x257: V128 = M[V122]
0x25e: V129 = ADD V122 0x20
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V122, V127, V127, V129, V128, V128, V127, V129]
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0, V122, V127, V127, V129, V128, V128, V127, V129]

================================

Block 0x263
[0x263:0x26b]
---
Predecessors: [0x18f, 0x26c]
Successors: [0x26c, 0x282]
---
0x263 JUMPDEST
0x264 PUSH1 0x20
0x266 DUP4
0x267 LT
0x268 PUSH2 0x282
0x26b JUMPI
---
0x263: JUMPDEST 
0x264: V130 = 0x20
0x267: V131 = LT S2 0x20
0x268: V132 = 0x282
0x26b: JUMPI 0x282 V131
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0, V122, V127, V127, V129, V128, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0, V122, V127, V127, V129, V128, S2, S1, S0]

================================

Block 0x26c
[0x26c:0x281]
---
Predecessors: [0x263]
Successors: [0x263]
---
0x26c DUP1
0x26d MLOAD
0x26e DUP3
0x26f MSTORE
0x270 PUSH1 0x1f
0x272 NOT
0x273 SWAP1
0x274 SWAP3
0x275 ADD
0x276 SWAP2
0x277 PUSH1 0x20
0x279 SWAP2
0x27a DUP3
0x27b ADD
0x27c SWAP2
0x27d ADD
0x27e PUSH2 0x263
0x281 JUMP
---
0x26d: V133 = M[S0]
0x26f: M[S1] = V133
0x270: V134 = 0x1f
0x272: V135 = NOT 0x1f
0x275: V136 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x277: V137 = 0x20
0x27b: V138 = ADD 0x20 S1
0x27d: V139 = ADD 0x20 S0
0x27e: V140 = 0x263
0x281: JUMP 0x263
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0, V122, V127, V127, V129, V128, S2, S1, S0]
Stack pops: 3
Stack additions: [V136, V138, V139]
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0, V122, V127, V127, V129, V128, V136, V138, V139]

================================

Block 0x282
[0x282:0x2e8]
---
Predecessors: [0x263]
Successors: [0x2e9, 0x2f2]
---
0x282 JUMPDEST
0x283 MLOAD
0x284 DUP2
0x285 MLOAD
0x286 PUSH1 0x20
0x288 SWAP4
0x289 SWAP1
0x28a SWAP4
0x28b SUB
0x28c PUSH2 0x100
0x28f EXP
0x290 PUSH1 0x0
0x292 NOT
0x293 ADD
0x294 DUP1
0x295 NOT
0x296 SWAP1
0x297 SWAP2
0x298 AND
0x299 SWAP3
0x29a AND
0x29b SWAP2
0x29c SWAP1
0x29d SWAP2
0x29e OR
0x29f SWAP1
0x2a0 MSTORE
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 SWAP3
0x2a5 ADD
0x2a6 DUP3
0x2a7 SWAP1
0x2a8 SUB
0x2a9 DUP3
0x2aa SHA3
0x2ab SWAP5
0x2ac POP
0x2ad POP
0x2ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c3 DUP5
0x2c4 AND
0x2c5 SWAP3
0x2c6 POP
0x2c7 PUSH1 0x0
0x2c9 SWAP2
0x2ca POP
0x2cb PUSH8 0x16345785d8a0000
0x2d4 SWAP1
0x2d5 DUP3
0x2d6 DUP2
0x2d7 DUP2
0x2d8 DUP2
0x2d9 DUP6
0x2da DUP9
0x2db DUP4
0x2dc CALL
0x2dd SWAP4
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 ISZERO
0x2e3 DUP1
0x2e4 ISZERO
0x2e5 PUSH2 0x2f2
0x2e8 JUMPI
---
0x282: JUMPDEST 
0x283: V141 = M[S0]
0x285: V142 = M[S1]
0x286: V143 = 0x20
0x28b: V144 = SUB 0x20 S2
0x28c: V145 = 0x100
0x28f: V146 = EXP 0x100 V144
0x290: V147 = 0x0
0x292: V148 = NOT 0x0
0x293: V149 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V146
0x295: V150 = NOT V149
0x298: V151 = AND V141 V150
0x29a: V152 = AND V142 V149
0x29e: V153 = OR V152 V151
0x2a0: M[S1] = V153
0x2a1: V154 = 0x40
0x2a3: V155 = M[0x40]
0x2a5: V156 = ADD V127 V128
0x2a8: V157 = SUB V156 V155
0x2aa: V158 = SHA3 V155 V157
0x2ae: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V160 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: V161 = 0x0
0x2cb: V162 = 0x16345785d8a0000
0x2dc: V163 = CALL 0x0 V160 0x16345785d8a0000 V155 0x0 V155 0x0
0x2e2: V164 = ISZERO V163
0x2e4: V165 = ISZERO V164
0x2e5: V166 = 0x2f2
0x2e8: JUMPI 0x2f2 V165
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, 0x0, V122, V127, V127, V129, V128, S2, S1, S0]
Stack pops: 9
Stack additions: [V158, V164]
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V164]

================================

Block 0x2e9
[0x2e9:0x2f1]
---
Predecessors: [0x282]
Successors: []
---
0x2e9 RETURNDATASIZE
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed RETURNDATACOPY
0x2ee RETURNDATASIZE
0x2ef PUSH1 0x0
0x2f1 REVERT
---
0x2e9: V167 = RETURNDATASIZE
0x2ea: V168 = 0x0
0x2ed: RETURNDATACOPY 0x0 0x0 V167
0x2ee: V169 = RETURNDATASIZE
0x2ef: V170 = 0x0
0x2f1: REVERT 0x0 V169
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V164]

================================

Block 0x2f2
[0x2f2:0x2fd]
---
Predecessors: [0x282]
Successors: [0x3cd]
---
0x2f2 JUMPDEST
0x2f3 POP
0x2f4 DUP5
0x2f5 DUP5
0x2f6 DUP5
0x2f7 PUSH2 0x2fe
0x2fa PUSH2 0x3cd
0x2fd JUMP
---
0x2f2: JUMPDEST 
0x2f7: V171 = 0x2fe
0x2fa: V172 = 0x3cd
0x2fd: JUMP 0x3cd
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V164]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5, S4, S3, 0x2fe]
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V40, V42, V44, 0x2fe]

================================

Block 0x2fe
[0x2fe:0x33d]
---
Predecessors: [0x3cd]
Successors: [0x33e, 0x347]
---
0x2fe JUMPDEST
0x2ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x314 SWAP1
0x315 SWAP4
0x316 AND
0x317 DUP4
0x318 MSTORE
0x319 PUSH1 0x20
0x31b DUP4
0x31c ADD
0x31d SWAP2
0x31e SWAP1
0x31f SWAP2
0x320 MSTORE
0x321 PUSH1 0x40
0x323 DUP1
0x324 DUP4
0x325 ADD
0x326 SWAP2
0x327 SWAP1
0x328 SWAP2
0x329 MSTORE
0x32a MLOAD
0x32b SWAP1
0x32c DUP2
0x32d SWAP1
0x32e SUB
0x32f PUSH1 0x60
0x331 ADD
0x332 SWAP1
0x333 PUSH1 0x0
0x335 CREATE
0x336 DUP1
0x337 ISZERO
0x338 DUP1
0x339 ISZERO
0x33a PUSH2 0x347
0x33d JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V174 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x318: M[V227] = V174
0x319: V175 = 0x20
0x31c: V176 = ADD V227 0x20
0x320: M[V176] = V42
0x321: V177 = 0x40
0x325: V178 = ADD V227 0x40
0x329: M[V178] = V44
0x32a: V179 = M[0x40]
0x32e: V180 = SUB V227 V179
0x32f: V181 = 0x60
0x331: V182 = ADD 0x60 V180
0x333: V183 = 0x0
0x335: V184 = CREATE 0x0 V179 V182
0x337: V185 = ISZERO V184
0x339: V186 = ISZERO V185
0x33a: V187 = 0x347
0x33d: JUMPI 0x347 V186
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V40, V42, V44, V227]
Stack pops: 4
Stack additions: [V184, V185]
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V184, V185]

================================

Block 0x33e
[0x33e:0x346]
---
Predecessors: [0x2fe]
Successors: []
---
0x33e RETURNDATASIZE
0x33f PUSH1 0x0
0x341 DUP1
0x342 RETURNDATACOPY
0x343 RETURNDATASIZE
0x344 PUSH1 0x0
0x346 REVERT
---
0x33e: V188 = RETURNDATASIZE
0x33f: V189 = 0x0
0x342: RETURNDATACOPY 0x0 0x0 V188
0x343: V190 = RETURNDATASIZE
0x344: V191 = 0x0
0x346: REVERT 0x0 V190
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V184, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V184, V185]

================================

Block 0x347
[0x347:0x354]
---
Predecessors: [0x2fe]
Successors: [0xaf]
---
0x347 JUMPDEST
0x348 POP
0x349 PUSH1 0x1
0x34b SWAP8
0x34c SWAP7
0x34d POP
0x34e POP
0x34f POP
0x350 POP
0x351 POP
0x352 POP
0x353 POP
0x354 JUMP
---
0x347: JUMPDEST 
0x349: V192 = 0x1
0x354: JUMP 0xaf
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V184, V185]
Stack pops: 9
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x355
[0x355:0x35a]
---
Predecessors: [0xcf]
Successors: [0xd8]
---
0x355 JUMPDEST
0x356 PUSH1 0x1
0x358 SLOAD
0x359 DUP2
0x35a JUMP
---
0x355: JUMPDEST 
0x356: V193 = 0x1
0x358: V194 = S[0x1]
0x35a: JUMP 0xd8
---
Entry stack: [V11, 0xd8]
Stack pops: 1
Stack additions: [S0, V194]
Exit stack: [V11, 0xd8, V194]

================================

Block 0x35b
[0x35b:0x37a]
---
Predecessors: [0xf6]
Successors: [0x37b, 0x37f]
---
0x35b JUMPDEST
0x35c PUSH1 0x0
0x35e SLOAD
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 AND
0x375 CALLER
0x376 EQ
0x377 PUSH2 0x37f
0x37a JUMPI
---
0x35b: JUMPDEST 
0x35c: V195 = 0x0
0x35e: V196 = S[0x0]
0x35f: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x375: V199 = CALLER
0x376: V200 = EQ V199 V198
0x377: V201 = 0x37f
0x37a: JUMPI 0x37f V200
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x37b
[0x37b:0x37e]
---
Predecessors: [0x35b]
Successors: []
---
0x37b PUSH1 0x0
0x37d DUP1
0x37e REVERT
---
0x37b: V202 = 0x0
0x37e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x37f
[0x37f:0x3c3]
---
Predecessors: [0x35b]
Successors: [0x165, 0x3c4]
---
0x37f JUMPDEST
0x380 ADDRESS
0x381 BALANCE
0x382 PUSH1 0x1
0x384 DUP2
0x385 SWAP1
0x386 SSTORE
0x387 PUSH1 0x0
0x389 DUP1
0x38a SLOAD
0x38b PUSH1 0x40
0x38d MLOAD
0x38e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a3 SWAP1
0x3a4 SWAP2
0x3a5 AND
0x3a6 SWAP3
0x3a7 PUSH2 0x8fc
0x3aa DUP2
0x3ab ISZERO
0x3ac MUL
0x3ad SWAP3
0x3ae SWAP1
0x3af SWAP2
0x3b0 SWAP1
0x3b1 DUP2
0x3b2 DUP2
0x3b3 DUP2
0x3b4 DUP6
0x3b5 DUP9
0x3b6 DUP9
0x3b7 CALL
0x3b8 SWAP4
0x3b9 POP
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd ISZERO
0x3be DUP1
0x3bf ISZERO
0x3c0 PUSH2 0x165
0x3c3 JUMPI
---
0x37f: JUMPDEST 
0x380: V203 = ADDRESS
0x381: V204 = BALANCE V203
0x382: V205 = 0x1
0x386: S[0x1] = V204
0x387: V206 = 0x0
0x38a: V207 = S[0x0]
0x38b: V208 = 0x40
0x38d: V209 = M[0x40]
0x38e: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V211 = AND V207 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V212 = 0x8fc
0x3ab: V213 = ISZERO V204
0x3ac: V214 = MUL V213 0x8fc
0x3b7: V215 = CALL V214 V211 V204 V209 0x0 V209 0x0
0x3bd: V216 = ISZERO V215
0x3bf: V217 = ISZERO V216
0x3c0: V218 = 0x165
0x3c3: JUMPI 0x165 V217
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V216]
Exit stack: [V11, 0x61, V216]

================================

Block 0x3c4
[0x3c4:0x3cc]
---
Predecessors: [0x37f]
Successors: []
---
0x3c4 RETURNDATASIZE
0x3c5 PUSH1 0x0
0x3c7 DUP1
0x3c8 RETURNDATACOPY
0x3c9 RETURNDATASIZE
0x3ca PUSH1 0x0
0x3cc REVERT
---
0x3c4: V219 = RETURNDATASIZE
0x3c5: V220 = 0x0
0x3c8: RETURNDATACOPY 0x0 0x0 V219
0x3c9: V221 = RETURNDATASIZE
0x3ca: V222 = 0x0
0x3cc: REVERT 0x0 V221
---
Entry stack: [V11, 0x61, V216]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V216]

================================

Block 0x3cd
[0x3cd:0x3dc]
---
Predecessors: [0x2f2]
Successors: [0x2fe]
---
0x3cd JUMPDEST
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 PUSH2 0x142
0x3d4 DUP1
0x3d5 PUSH2 0x3de
0x3d8 DUP4
0x3d9 CODECOPY
0x3da ADD
0x3db SWAP1
0x3dc JUMP
---
0x3cd: JUMPDEST 
0x3ce: V223 = 0x40
0x3d0: V224 = M[0x40]
0x3d1: V225 = 0x142
0x3d5: V226 = 0x3de
0x3d9: CODECOPY V224 0x3de 0x142
0x3da: V227 = ADD 0x142 V224
0x3dc: JUMP 0x2fe
---
Entry stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V40, V42, V44, 0x2fe]
Stack pops: 1
Stack additions: [V227]
Exit stack: [V11, 0xaf, V36, V40, V42, V44, 0x0, V158, V40, V42, V44, V227]

================================

Block 0x3dd
[0x3dd:0x3e9]
---
Predecessors: []
Successors: [0x3ea]
---
0x3dd STOP
0x3de PUSH1 0x80
0x3e0 PUSH1 0x40
0x3e2 MSTORE
0x3e3 CALLVALUE
0x3e4 DUP1
0x3e5 ISZERO
0x3e6 PUSH2 0x10
0x3e9 JUMPI
---
0x3dd: STOP 
0x3de: V228 = 0x80
0x3e0: V229 = 0x40
0x3e2: M[0x40] = 0x80
0x3e3: V230 = CALLVALUE
0x3e5: V231 = ISZERO V230
0x3e6: V232 = 0x10
0x3e9: THROWI V231
---
Entry stack: []
Stack pops: 0
Stack additions: [V230]
Exit stack: []

================================

Block 0x3ea
[0x3ea:0x477]
---
Predecessors: [0x3dd]
Successors: [0x478]
---
0x3ea PUSH1 0x0
0x3ec DUP1
0x3ed REVERT
0x3ee JUMPDEST
0x3ef POP
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 PUSH1 0x60
0x3f5 DUP1
0x3f6 PUSH2 0x142
0x3f9 DUP4
0x3fa CODECOPY
0x3fb DUP2
0x3fc ADD
0x3fd PUSH1 0x40
0x3ff DUP2
0x400 DUP2
0x401 MSTORE
0x402 DUP3
0x403 MLOAD
0x404 PUSH1 0x20
0x406 DUP1
0x407 DUP6
0x408 ADD
0x409 MLOAD
0x40a SWAP5
0x40b DUP4
0x40c ADD
0x40d MLOAD
0x40e PUSH32 0x8f38f30900000000000000000000000000000000000000000000000000000000
0x42f DUP6
0x430 MSTORE
0x431 PUSH1 0x4
0x433 DUP6
0x434 ADD
0x435 DUP7
0x436 SWAP1
0x437 MSTORE
0x438 PUSH1 0x24
0x43a DUP6
0x43b ADD
0x43c DUP2
0x43d SWAP1
0x43e MSTORE
0x43f SWAP3
0x440 MLOAD
0x441 SWAP2
0x442 SWAP5
0x443 SWAP4
0x444 DUP6
0x445 SWAP3
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e DUP5
0x44f AND
0x450 SWAP3
0x451 PUSH4 0x8f38f309
0x456 SWAP3
0x457 PUSH8 0x16345785d8a0000
0x460 SWAP3
0x461 PUSH1 0x44
0x463 DUP1
0x464 DUP4
0x465 ADD
0x466 SWAP4
0x467 SWAP3
0x468 DUP3
0x469 SWAP1
0x46a SUB
0x46b ADD
0x46c DUP2
0x46d DUP6
0x46e DUP9
0x46f DUP1
0x470 EXTCODESIZE
0x471 ISZERO
0x472 DUP1
0x473 ISZERO
0x474 PUSH2 0x9e
0x477 JUMPI
---
0x3ea: V233 = 0x0
0x3ed: REVERT 0x0 0x0
0x3ee: JUMPDEST 
0x3f0: V234 = 0x40
0x3f2: V235 = M[0x40]
0x3f3: V236 = 0x60
0x3f6: V237 = 0x142
0x3fa: CODECOPY V235 0x142 0x60
0x3fc: V238 = ADD V235 0x60
0x3fd: V239 = 0x40
0x401: M[0x40] = V238
0x403: V240 = M[V235]
0x404: V241 = 0x20
0x408: V242 = ADD V235 0x20
0x409: V243 = M[V242]
0x40c: V244 = ADD 0x40 V235
0x40d: V245 = M[V244]
0x40e: V246 = 0x8f38f30900000000000000000000000000000000000000000000000000000000
0x430: M[V238] = 0x8f38f30900000000000000000000000000000000000000000000000000000000
0x431: V247 = 0x4
0x434: V248 = ADD V238 0x4
0x437: M[V248] = V243
0x438: V249 = 0x24
0x43b: V250 = ADD V238 0x24
0x43e: M[V250] = V245
0x440: V251 = M[0x40]
0x446: V252 = 0x1
0x448: V253 = 0xa0
0x44a: V254 = 0x2
0x44c: V255 = EXP 0x2 0xa0
0x44d: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44f: V257 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x451: V258 = 0x8f38f309
0x457: V259 = 0x16345785d8a0000
0x461: V260 = 0x44
0x465: V261 = ADD V238 0x44
0x46a: V262 = SUB V238 V251
0x46b: V263 = ADD V262 0x44
0x470: V264 = EXTCODESIZE V257
0x471: V265 = ISZERO V264
0x473: V266 = ISZERO V265
0x474: V267 = 0x9e
0x477: THROWI V266
---
Entry stack: [V230]
Stack pops: 0
Stack additions: [V265, V257, 0x16345785d8a0000, V251, V263, V251, 0x20, V261, 0x16345785d8a0000, 0x8f38f309, V257, V240, V245, V243, V240]
Exit stack: []

================================

Block 0x478
[0x478:0x486]
---
Predecessors: [0x3ea]
Successors: [0x487]
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
0x47c JUMPDEST
0x47d POP
0x47e GAS
0x47f CALL
0x480 ISZERO
0x481 DUP1
0x482 ISZERO
0x483 PUSH2 0xb2
0x486 JUMPI
---
0x478: V268 = 0x0
0x47b: REVERT 0x0 0x0
0x47c: JUMPDEST 
0x47e: V269 = GAS
0x47f: V270 = CALL V269 S1 S2 S3 S4 S5 S6
0x480: V271 = ISZERO V270
0x482: V272 = ISZERO V271
0x483: V273 = 0xb2
0x486: THROWI V272
---
Entry stack: [V240, V243, V245, V240, V257, 0x8f38f309, 0x16345785d8a0000, V261, 0x20, V251, V263, V251, 0x16345785d8a0000, V257, V265]
Stack pops: 0
Stack additions: [V271]
Exit stack: []

================================

Block 0x487
[0x487:0x4a2]
---
Predecessors: [0x478]
Successors: [0x4a3]
---
0x487 RETURNDATASIZE
0x488 PUSH1 0x0
0x48a DUP1
0x48b RETURNDATACOPY
0x48c RETURNDATASIZE
0x48d PUSH1 0x0
0x48f REVERT
0x490 JUMPDEST
0x491 POP
0x492 POP
0x493 POP
0x494 POP
0x495 POP
0x496 PUSH1 0x40
0x498 MLOAD
0x499 RETURNDATASIZE
0x49a PUSH1 0x20
0x49c DUP2
0x49d LT
0x49e ISZERO
0x49f PUSH2 0xc9
0x4a2 JUMPI
---
0x487: V274 = RETURNDATASIZE
0x488: V275 = 0x0
0x48b: RETURNDATACOPY 0x0 0x0 V274
0x48c: V276 = RETURNDATASIZE
0x48d: V277 = 0x0
0x48f: REVERT 0x0 V276
0x490: JUMPDEST 
0x496: V278 = 0x40
0x498: V279 = M[0x40]
0x499: V280 = RETURNDATASIZE
0x49a: V281 = 0x20
0x49d: V282 = LT V280 0x20
0x49e: V283 = ISZERO V282
0x49f: V284 = 0xc9
0x4a2: THROWI V283
---
Entry stack: [V271]
Stack pops: 0
Stack additions: [V280, V279]
Exit stack: []

================================

Block 0x4a3
[0x4a3:0x4fe]
---
Predecessors: [0x487]
Successors: [0x4ff]
---
0x4a3 PUSH1 0x0
0x4a5 DUP1
0x4a6 REVERT
0x4a7 JUMPDEST
0x4a8 POP
0x4a9 POP
0x4aa PUSH1 0x40
0x4ac DUP1
0x4ad MLOAD
0x4ae PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x4cf DUP2
0x4d0 MSTORE
0x4d1 SWAP1
0x4d2 MLOAD
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db DUP4
0x4dc AND
0x4dd SWAP2
0x4de PUSH4 0x3ccfd60b
0x4e3 SWAP2
0x4e4 PUSH1 0x4
0x4e6 DUP1
0x4e7 DUP4
0x4e8 ADD
0x4e9 SWAP3
0x4ea PUSH1 0x0
0x4ec SWAP3
0x4ed SWAP2
0x4ee SWAP1
0x4ef DUP3
0x4f0 SWAP1
0x4f1 SUB
0x4f2 ADD
0x4f3 DUP2
0x4f4 DUP4
0x4f5 DUP8
0x4f6 DUP1
0x4f7 EXTCODESIZE
0x4f8 ISZERO
0x4f9 DUP1
0x4fa ISZERO
0x4fb PUSH2 0x125
0x4fe JUMPI
---
0x4a3: V285 = 0x0
0x4a6: REVERT 0x0 0x0
0x4a7: JUMPDEST 
0x4aa: V286 = 0x40
0x4ad: V287 = M[0x40]
0x4ae: V288 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x4d0: M[V287] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x4d2: V289 = M[0x40]
0x4d3: V290 = 0x1
0x4d5: V291 = 0xa0
0x4d7: V292 = 0x2
0x4d9: V293 = EXP 0x2 0xa0
0x4da: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4dc: V295 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V296 = 0x3ccfd60b
0x4e4: V297 = 0x4
0x4e8: V298 = ADD V287 0x4
0x4ea: V299 = 0x0
0x4f1: V300 = SUB V287 V289
0x4f2: V301 = ADD V300 0x4
0x4f7: V302 = EXTCODESIZE V295
0x4f8: V303 = ISZERO V302
0x4fa: V304 = ISZERO V303
0x4fb: V305 = 0x125
0x4fe: THROWI V304
---
Entry stack: [V279, V280]
Stack pops: 0
Stack additions: [V303, V295, 0x0, V289, V301, V289, 0x0, V298, 0x3ccfd60b, V295, S2]
Exit stack: []

================================

Block 0x4ff
[0x4ff:0x50d]
---
Predecessors: [0x4a3]
Successors: [0x50e]
---
0x4ff PUSH1 0x0
0x501 DUP1
0x502 REVERT
0x503 JUMPDEST
0x504 POP
0x505 GAS
0x506 CALL
0x507 ISZERO
0x508 DUP1
0x509 ISZERO
0x50a PUSH2 0x139
0x50d JUMPI
---
0x4ff: V306 = 0x0
0x502: REVERT 0x0 0x0
0x503: JUMPDEST 
0x505: V307 = GAS
0x506: V308 = CALL V307 S1 S2 S3 S4 S5 S6
0x507: V309 = ISZERO V308
0x509: V310 = ISZERO V309
0x50a: V311 = 0x139
0x50d: THROWI V310
---
Entry stack: [S10, V295, 0x3ccfd60b, V298, 0x0, V289, V301, V289, 0x0, V295, V303]
Stack pops: 0
Stack additions: [V309]
Exit stack: []

================================

Block 0x50e
[0x50e:0x52f]
---
Predecessors: [0x4ff]
Successors: [0x530]
Has unresolved jump.
---
0x50e RETURNDATASIZE
0x50f PUSH1 0x0
0x511 DUP1
0x512 RETURNDATACOPY
0x513 RETURNDATASIZE
0x514 PUSH1 0x0
0x516 REVERT
0x517 JUMPDEST
0x518 POP
0x519 CALLER
0x51a SWAP3
0x51b POP
0x51c POP
0x51d POP
0x51e SELFDESTRUCT
0x51f STOP
0x520 LOG1
0x521 PUSH6 0x627a7a723058
0x528 SHA3
0x529 MISSING 0xbd
0x52a CALLVALUE
0x52b SWAP3
0x52c MISSING 0xbc
0x52d MISSING 0xdc
0x52e LOG2
0x52f JUMPI
---
0x50e: V312 = RETURNDATASIZE
0x50f: V313 = 0x0
0x512: RETURNDATACOPY 0x0 0x0 V312
0x513: V314 = RETURNDATASIZE
0x514: V315 = 0x0
0x516: REVERT 0x0 V314
0x517: JUMPDEST 
0x519: V316 = CALLER
0x51e: SELFDESTRUCT V316
0x51f: STOP 
0x520: LOG S0 S1 S2
0x521: V317 = 0x627a7a723058
0x528: V318 = SHA3 0x627a7a723058 S3
0x529: MISSING 0xbd
0x52a: V319 = CALLVALUE
0x52c: MISSING 0xbc
0x52d: MISSING 0xdc
0x52e: LOG S0 S1 S2 S3
0x52f: JUMPI S4 S5
---
Entry stack: [V309]
Stack pops: 0
Stack additions: [V318, S2, S0, S1, V319]
Exit stack: []

================================

Block 0x530
[0x530:0x54b]
---
Predecessors: [0x50e]
Successors: []
---
0x530 PUSH6 0x93ebfeda47a8
0x537 SDIV
0x538 MSIZE
0x539 MISSING 0x5f
0x53a DUP4
0x53b MISSING 0x29
0x53c MISSING 0x2b
0x53d MISSING 0xde
0x53e MISSING 0xd0
0x53f TIMESTAMP
0x540 PUSH5 0x988305158a
0x546 MISSING 0xcc
0x547 PUSH4 0x500029
---
0x530: V320 = 0x93ebfeda47a8
0x537: V321 = SDIV 0x93ebfeda47a8 S0
0x538: V322 = MSIZE
0x539: MISSING 0x5f
0x53b: MISSING 0x29
0x53c: MISSING 0x2b
0x53d: MISSING 0xde
0x53e: MISSING 0xd0
0x53f: V323 = TIMESTAMP
0x540: V324 = 0x988305158a
0x546: MISSING 0xcc
0x547: V325 = 0x500029
---
Entry stack: []
Stack pops: 1
Stack additions: [V321, S3, 0x988305158a, 0x500029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6622798
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x6b, 0x6f, 0xff, 0x11b, 0x11f, 0x15c, 0x165

Function 1:
Public function signature: 0xad2b884e
Entry block: 0x78
Exit block: 0xaf
Body: 0x78, 0x80, 0x84, 0xaf, 0x168, 0x18b, 0x18f, 0x263, 0x26c, 0x282, 0x2e9, 0x2f2, 0x2fe, 0x33e, 0x347, 0x3cd

Function 2:
Public function signature: 0xb69ef8a8
Entry block: 0xc3
Exit block: 0xd8
Body: 0xc3, 0xcb, 0xcf, 0xd8, 0x355

Function 3:
Public function signature: 0xeffc73a4
Entry block: 0xea
Exit block: 0x61
Body: 0x61, 0xea, 0xf2, 0xf6, 0x165, 0x35b, 0x37b, 0x37f, 0x3c4

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

