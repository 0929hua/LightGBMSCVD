Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xae5e739
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xae5e739
0x3b: V13 = EQ V11 0xae5e739
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x91]
---
0x40 DUP1
0x41 PUSH4 0x3ccfd60b
0x46 EQ
0x47 PUSH2 0x91
0x4a JUMPI
---
0x41: V15 = 0x3ccfd60b
0x46: V16 = EQ 0x3ccfd60b V11
0x47: V17 = 0x91
0x4a: JUMPI 0x91 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa6]
---
0x4b DUP1
0x4c PUSH4 0xa6df4557
0x51 EQ
0x52 PUSH2 0xa6
0x55 JUMPI
---
0x4c: V18 = 0xa6df4557
0x51: V19 = EQ 0xa6df4557 V11
0x52: V20 = 0xa6
0x55: JUMPI 0xa6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xcd]
---
0x56 DUP1
0x57 PUSH4 0xfe9fbb80
0x5c EQ
0x5d PUSH2 0xcd
0x60 JUMPI
---
0x57: V21 = 0xfe9fbb80
0x5c: V22 = EQ 0xfe9fbb80 V11
0x5d: V23 = 0xcd
0x60: JUMPI 0xcd V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x133, 0x1af, 0x3cb]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x6f
[0x6f:0x90]
---
Predecessors: [0x63]
Successors: [0x10f]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH2 0x61
0x74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89 PUSH1 0x4
0x8b CALLDATALOAD
0x8c AND
0x8d PUSH2 0x10f
0x90 JUMP
---
0x6f: JUMPDEST 
0x71: V28 = 0x61
0x74: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x89: V30 = 0x4
0x8b: V31 = CALLDATALOAD 0x4
0x8c: V32 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V33 = 0x10f
0x90: JUMP 0x10f
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x61, V32]
Exit stack: [V11, 0x61, V32]

================================

Block 0x91
[0x91:0x98]
---
Predecessors: [0x40]
Successors: [0x99, 0x9d]
---
0x91 JUMPDEST
0x92 CALLVALUE
0x93 DUP1
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x91: JUMPDEST 
0x92: V34 = CALLVALUE
0x94: V35 = ISZERO V34
0x95: V36 = 0x9d
0x98: JUMPI 0x9d V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x91]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V37 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x9d
[0x9d:0xa5]
---
Predecessors: [0x91]
Successors: [0x167]
---
0x9d JUMPDEST
0x9e POP
0x9f PUSH2 0x61
0xa2 PUSH2 0x167
0xa5 JUMP
---
0x9d: JUMPDEST 
0x9f: V38 = 0x61
0xa2: V39 = 0x167
0xa5: JUMP 0x167
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xa6
[0xa6:0xcc]
---
Predecessors: [0x4b]
Successors: [0x1b2]
---
0xa6 JUMPDEST
0xa7 PUSH2 0x61
0xaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf PUSH1 0x4
0xc1 CALLDATALOAD
0xc2 AND
0xc3 PUSH1 0x24
0xc5 CALLDATALOAD
0xc6 PUSH1 0x44
0xc8 CALLDATALOAD
0xc9 PUSH2 0x1b2
0xcc JUMP
---
0xa6: JUMPDEST 
0xa7: V40 = 0x61
0xaa: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V42 = 0x4
0xc1: V43 = CALLDATALOAD 0x4
0xc2: V44 = AND V43 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V45 = 0x24
0xc5: V46 = CALLDATALOAD 0x24
0xc6: V47 = 0x44
0xc8: V48 = CALLDATALOAD 0x44
0xc9: V49 = 0x1b2
0xcc: JUMP 0x1b2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V44, V46, V48]
Exit stack: [V11, 0x61, V44, V46, V48]

================================

Block 0xcd
[0xcd:0xd4]
---
Predecessors: [0x56]
Successors: [0xd5, 0xd9]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xcd: JUMPDEST 
0xce: V50 = CALLVALUE
0xd0: V51 = ISZERO V50
0xd1: V52 = 0xd9
0xd4: JUMPI 0xd9 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xcd]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V53 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xd9
[0xd9:0xfa]
---
Predecessors: [0xcd]
Successors: [0x3d3]
---
0xd9 JUMPDEST
0xda POP
0xdb PUSH2 0xfb
0xde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3 PUSH1 0x4
0xf5 CALLDATALOAD
0xf6 AND
0xf7 PUSH2 0x3d3
0xfa JUMP
---
0xd9: JUMPDEST 
0xdb: V54 = 0xfb
0xde: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V56 = 0x4
0xf5: V57 = CALLDATALOAD 0x4
0xf6: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V59 = 0x3d3
0xfa: JUMP 0x3d3
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0xfb, V58]
Exit stack: [V11, 0xfb, V58]

================================

Block 0xfb
[0xfb:0x10e]
---
Predecessors: [0x3d3]
Successors: []
---
0xfb JUMPDEST
0xfc PUSH1 0x40
0xfe DUP1
0xff MLOAD
0x100 SWAP2
0x101 ISZERO
0x102 ISZERO
0x103 DUP3
0x104 MSTORE
0x105 MLOAD
0x106 SWAP1
0x107 DUP2
0x108 SWAP1
0x109 SUB
0x10a PUSH1 0x20
0x10c ADD
0x10d SWAP1
0x10e RETURN
---
0xfb: JUMPDEST 
0xfc: V60 = 0x40
0xff: V61 = M[0x40]
0x101: V62 = ISZERO V255
0x102: V63 = ISZERO V62
0x104: M[V61] = V63
0x105: V64 = M[0x40]
0x109: V65 = SUB V61 V64
0x10a: V66 = 0x20
0x10c: V67 = ADD 0x20 V65
0x10e: RETURN V64 V67
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S1, V255]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S1]

================================

Block 0x10f
[0x10f:0x12e]
---
Predecessors: [0x6f]
Successors: [0x12f, 0x133]
---
0x10f JUMPDEST
0x110 PUSH1 0x0
0x112 SLOAD
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 CALLER
0x12a EQ
0x12b PUSH2 0x133
0x12e JUMPI
---
0x10f: JUMPDEST 
0x110: V68 = 0x0
0x112: V69 = S[0x0]
0x113: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x129: V72 = CALLER
0x12a: V73 = EQ V72 V71
0x12b: V74 = 0x133
0x12e: JUMPI 0x133 V73
---
Entry stack: [V11, 0x61, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V32]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x10f]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V75 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V32]

================================

Block 0x133
[0x133:0x166]
---
Predecessors: [0x10f]
Successors: [0x61]
---
0x133 JUMPDEST
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a PUSH1 0x0
0x14c SWAP1
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x1
0x151 PUSH1 0x20
0x153 DUP2
0x154 SWAP1
0x155 MSTORE
0x156 PUSH1 0x40
0x158 SWAP1
0x159 SWAP2
0x15a SHA3
0x15b DUP1
0x15c SLOAD
0x15d PUSH1 0xff
0x15f NOT
0x160 AND
0x161 SWAP1
0x162 SWAP2
0x163 OR
0x164 SWAP1
0x165 SSTORE
0x166 JUMP
---
0x133: JUMPDEST 
0x134: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x14a: V78 = 0x0
0x14e: M[0x0] = V77
0x14f: V79 = 0x1
0x151: V80 = 0x20
0x155: M[0x20] = 0x1
0x156: V81 = 0x40
0x15a: V82 = SHA3 0x0 0x40
0x15c: V83 = S[V82]
0x15d: V84 = 0xff
0x15f: V85 = NOT 0xff
0x160: V86 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V83
0x163: V87 = OR 0x1 V86
0x165: S[V82] = V87
0x166: JUMP 0x61
---
Entry stack: [V11, 0x61, V32]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x167
[0x167:0x1a5]
---
Predecessors: [0x9d]
Successors: [0x1a6, 0x1af]
---
0x167 JUMPDEST
0x168 PUSH1 0x0
0x16a DUP1
0x16b SLOAD
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 SWAP1
0x185 SWAP2
0x186 AND
0x187 SWAP2
0x188 ADDRESS
0x189 BALANCE
0x18a DUP1
0x18b ISZERO
0x18c PUSH2 0x8fc
0x18f MUL
0x190 SWAP3
0x191 SWAP1
0x192 SWAP2
0x193 DUP2
0x194 DUP2
0x195 DUP2
0x196 DUP6
0x197 DUP9
0x198 DUP9
0x199 CALL
0x19a SWAP4
0x19b POP
0x19c POP
0x19d POP
0x19e POP
0x19f ISZERO
0x1a0 DUP1
0x1a1 ISZERO
0x1a2 PUSH2 0x1af
0x1a5 JUMPI
---
0x167: JUMPDEST 
0x168: V88 = 0x0
0x16b: V89 = S[0x0]
0x16c: V90 = 0x40
0x16e: V91 = M[0x40]
0x16f: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V93 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x188: V94 = ADDRESS
0x189: V95 = BALANCE V94
0x18b: V96 = ISZERO V95
0x18c: V97 = 0x8fc
0x18f: V98 = MUL 0x8fc V96
0x199: V99 = CALL V98 V93 V95 V91 0x0 V91 0x0
0x19f: V100 = ISZERO V99
0x1a1: V101 = ISZERO V100
0x1a2: V102 = 0x1af
0x1a5: JUMPI 0x1af V101
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V100]
Exit stack: [V11, 0x61, V100]

================================

Block 0x1a6
[0x1a6:0x1ae]
---
Predecessors: [0x167]
Successors: []
---
0x1a6 RETURNDATASIZE
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa RETURNDATACOPY
0x1ab RETURNDATASIZE
0x1ac PUSH1 0x0
0x1ae REVERT
---
0x1a6: V103 = RETURNDATASIZE
0x1a7: V104 = 0x0
0x1aa: RETURNDATACOPY 0x0 0x0 V103
0x1ab: V105 = RETURNDATASIZE
0x1ac: V106 = 0x0
0x1ae: REVERT 0x0 V105
---
Entry stack: [V11, 0x61, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V100]

================================

Block 0x1af
[0x1af:0x1b1]
---
Predecessors: [0x167]
Successors: [0x61]
---
0x1af JUMPDEST
0x1b0 POP
0x1b1 JUMP
---
0x1af: JUMPDEST 
0x1b1: JUMP 0x61
---
Entry stack: [V11, 0x61, V100]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b2
[0x1b2:0x219]
---
Predecessors: [0xa6]
Successors: [0x21a, 0x21e]
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 PUSH1 0x0
0x1b8 DUP6
0x1b9 SWAP3
0x1ba POP
0x1bb DUP3
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 PUSH4 0xd87574e0
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP2
0x1db PUSH4 0xffffffff
0x1e0 AND
0x1e1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1ff MUL
0x200 DUP2
0x201 MSTORE
0x202 PUSH1 0x4
0x204 ADD
0x205 PUSH1 0x20
0x207 PUSH1 0x40
0x209 MLOAD
0x20a DUP1
0x20b DUP4
0x20c SUB
0x20d DUP2
0x20e PUSH1 0x0
0x210 DUP8
0x211 DUP1
0x212 EXTCODESIZE
0x213 ISZERO
0x214 DUP1
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V107 = 0x0
0x1b6: V108 = 0x0
0x1bc: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x1d2: V111 = 0xd87574e0
0x1d7: V112 = 0x40
0x1d9: V113 = M[0x40]
0x1db: V114 = 0xffffffff
0x1e0: V115 = AND 0xffffffff 0xd87574e0
0x1e1: V116 = 0x100000000000000000000000000000000000000000000000000000000
0x1ff: V117 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x201: M[V113] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x202: V118 = 0x4
0x204: V119 = ADD 0x4 V113
0x205: V120 = 0x20
0x207: V121 = 0x40
0x209: V122 = M[0x40]
0x20c: V123 = SUB V119 V122
0x20e: V124 = 0x0
0x212: V125 = EXTCODESIZE V110
0x213: V126 = ISZERO V125
0x215: V127 = ISZERO V126
0x216: V128 = 0x21e
0x219: JUMPI 0x21e V127
---
Entry stack: [V11, 0x61, V44, V46, V48]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x0, 0x0, V110, 0xd87574e0, V119, 0x20, V122, V123, V122, 0x0, V110, V126]
Exit stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V110, 0xd87574e0, V119, 0x20, V122, V123, V122, 0x0, V110, V126]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x1b2]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V129 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V110, 0xd87574e0, V119, 0x20, V122, V123, V122, 0x0, V110, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V110, 0xd87574e0, V119, 0x20, V122, V123, V122, 0x0, V110, V126]

================================

Block 0x21e
[0x21e:0x228]
---
Predecessors: [0x1b2]
Successors: [0x229, 0x232]
---
0x21e JUMPDEST
0x21f POP
0x220 GAS
0x221 CALL
0x222 ISZERO
0x223 DUP1
0x224 ISZERO
0x225 PUSH2 0x232
0x228 JUMPI
---
0x21e: JUMPDEST 
0x220: V130 = GAS
0x221: V131 = CALL V130 V110 0x0 V122 V123 V122 0x20
0x222: V132 = ISZERO V131
0x224: V133 = ISZERO V132
0x225: V134 = 0x232
0x228: JUMPI 0x232 V133
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V110, 0xd87574e0, V119, 0x20, V122, V123, V122, 0x0, V110, V126]
Stack pops: 7
Stack additions: [V132]
Exit stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V110, 0xd87574e0, V119, V132]

================================

Block 0x229
[0x229:0x231]
---
Predecessors: [0x21e]
Successors: []
---
0x229 RETURNDATASIZE
0x22a PUSH1 0x0
0x22c DUP1
0x22d RETURNDATACOPY
0x22e RETURNDATASIZE
0x22f PUSH1 0x0
0x231 REVERT
---
0x229: V135 = RETURNDATASIZE
0x22a: V136 = 0x0
0x22d: RETURNDATACOPY 0x0 0x0 V135
0x22e: V137 = RETURNDATASIZE
0x22f: V138 = 0x0
0x231: REVERT 0x0 V137
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V110, 0xd87574e0, V119, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V110, 0xd87574e0, V119, V132]

================================

Block 0x232
[0x232:0x243]
---
Predecessors: [0x21e]
Successors: [0x244, 0x248]
---
0x232 JUMPDEST
0x233 POP
0x234 POP
0x235 POP
0x236 POP
0x237 PUSH1 0x40
0x239 MLOAD
0x23a RETURNDATASIZE
0x23b PUSH1 0x20
0x23d DUP2
0x23e LT
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x232: JUMPDEST 
0x237: V139 = 0x40
0x239: V140 = M[0x40]
0x23a: V141 = RETURNDATASIZE
0x23b: V142 = 0x20
0x23e: V143 = LT V141 0x20
0x23f: V144 = ISZERO V143
0x240: V145 = 0x248
0x243: JUMPI 0x248 V144
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V110, 0xd87574e0, V119, V132]
Stack pops: 4
Stack additions: [V140, V141]
Exit stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V140, V141]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x232]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V146 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V140, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V140, V141]

================================

Block 0x248
[0x248:0x254]
---
Predecessors: [0x232]
Successors: [0x255, 0x259]
---
0x248 JUMPDEST
0x249 POP
0x24a MLOAD
0x24b SWAP2
0x24c POP
0x24d DUP5
0x24e DUP3
0x24f LT
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x248: JUMPDEST 
0x24a: V147 = M[V140]
0x24f: V148 = LT V147 V46
0x250: V149 = ISZERO V148
0x251: V150 = 0x259
0x254: JUMPI 0x259 V149
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, 0x0, 0x0, V140, V141]
Stack pops: 7
Stack additions: [S6, S5, S4, V147, S2]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x248]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V151 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0]

================================

Block 0x259
[0x259:0x261]
---
Predecessors: [0x248]
Successors: [0x262, 0x2ff]
---
0x259 JUMPDEST
0x25a DUP4
0x25b DUP3
0x25c LT
0x25d ISZERO
0x25e PUSH2 0x2ff
0x261 JUMPI
---
0x259: JUMPDEST 
0x25c: V152 = LT V147 V48
0x25d: V153 = ISZERO V152
0x25e: V154 = 0x2ff
0x261: JUMPI 0x2ff V153
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0]

================================

Block 0x262
[0x262:0x2c0]
---
Predecessors: [0x259]
Successors: [0x2c1, 0x2c5]
---
0x262 DUP3
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 PUSH4 0x11a09ae7
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP2
0x282 PUSH4 0xffffffff
0x287 AND
0x288 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2a6 MUL
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x4
0x2ab ADD
0x2ac PUSH1 0x20
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 DUP1
0x2b2 DUP4
0x2b3 SUB
0x2b4 DUP2
0x2b5 PUSH1 0x0
0x2b7 DUP8
0x2b8 DUP1
0x2b9 EXTCODESIZE
0x2ba ISZERO
0x2bb DUP1
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x263: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x279: V157 = 0x11a09ae7
0x27e: V158 = 0x40
0x280: V159 = M[0x40]
0x282: V160 = 0xffffffff
0x287: V161 = AND 0xffffffff 0x11a09ae7
0x288: V162 = 0x100000000000000000000000000000000000000000000000000000000
0x2a6: V163 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x2a8: M[V159] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x2a9: V164 = 0x4
0x2ab: V165 = ADD 0x4 V159
0x2ac: V166 = 0x20
0x2ae: V167 = 0x40
0x2b0: V168 = M[0x40]
0x2b3: V169 = SUB V165 V168
0x2b5: V170 = 0x0
0x2b9: V171 = EXTCODESIZE V156
0x2ba: V172 = ISZERO V171
0x2bc: V173 = ISZERO V172
0x2bd: V174 = 0x2c5
0x2c0: JUMPI 0x2c5 V173
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V156, 0x11a09ae7, V165, 0x20, V168, V169, V168, 0x0, V156, V172]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V156, 0x11a09ae7, V165, 0x20, V168, V169, V168, 0x0, V156, V172]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x262]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V175 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V156, 0x11a09ae7, V165, 0x20, V168, V169, V168, 0x0, V156, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V156, 0x11a09ae7, V165, 0x20, V168, V169, V168, 0x0, V156, V172]

================================

Block 0x2c5
[0x2c5:0x2cf]
---
Predecessors: [0x262]
Successors: [0x2d0, 0x2d9]
---
0x2c5 JUMPDEST
0x2c6 POP
0x2c7 GAS
0x2c8 CALL
0x2c9 ISZERO
0x2ca DUP1
0x2cb ISZERO
0x2cc PUSH2 0x2d9
0x2cf JUMPI
---
0x2c5: JUMPDEST 
0x2c7: V176 = GAS
0x2c8: V177 = CALL V176 V156 0x0 V168 V169 V168 0x20
0x2c9: V178 = ISZERO V177
0x2cb: V179 = ISZERO V178
0x2cc: V180 = 0x2d9
0x2cf: JUMPI 0x2d9 V179
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V156, 0x11a09ae7, V165, 0x20, V168, V169, V168, 0x0, V156, V172]
Stack pops: 7
Stack additions: [V178]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V156, 0x11a09ae7, V165, V178]

================================

Block 0x2d0
[0x2d0:0x2d8]
---
Predecessors: [0x2c5]
Successors: []
---
0x2d0 RETURNDATASIZE
0x2d1 PUSH1 0x0
0x2d3 DUP1
0x2d4 RETURNDATACOPY
0x2d5 RETURNDATASIZE
0x2d6 PUSH1 0x0
0x2d8 REVERT
---
0x2d0: V181 = RETURNDATASIZE
0x2d1: V182 = 0x0
0x2d4: RETURNDATACOPY 0x0 0x0 V181
0x2d5: V183 = RETURNDATASIZE
0x2d6: V184 = 0x0
0x2d8: REVERT 0x0 V183
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V156, 0x11a09ae7, V165, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V156, 0x11a09ae7, V165, V178]

================================

Block 0x2d9
[0x2d9:0x2ea]
---
Predecessors: [0x2c5]
Successors: [0x2eb, 0x2ef]
---
0x2d9 JUMPDEST
0x2da POP
0x2db POP
0x2dc POP
0x2dd POP
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 RETURNDATASIZE
0x2e2 PUSH1 0x20
0x2e4 DUP2
0x2e5 LT
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x2d9: JUMPDEST 
0x2de: V185 = 0x40
0x2e0: V186 = M[0x40]
0x2e1: V187 = RETURNDATASIZE
0x2e2: V188 = 0x20
0x2e5: V189 = LT V187 0x20
0x2e6: V190 = ISZERO V189
0x2e7: V191 = 0x2ef
0x2ea: JUMPI 0x2ef V190
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V156, 0x11a09ae7, V165, V178]
Stack pops: 4
Stack additions: [V186, V187]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V186, V187]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x2d9]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V192 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V186, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V186, V187]

================================

Block 0x2ef
[0x2ef:0x2fa]
---
Predecessors: [0x2d9]
Successors: [0x2fb, 0x2ff]
---
0x2ef JUMPDEST
0x2f0 POP
0x2f1 MLOAD
0x2f2 SWAP1
0x2f3 POP
0x2f4 DUP1
0x2f5 ISZERO
0x2f6 ISZERO
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2ef: JUMPDEST 
0x2f1: V193 = M[V186]
0x2f5: V194 = ISZERO V193
0x2f6: V195 = ISZERO V194
0x2f7: V196 = 0x2ff
0x2fa: JUMPI 0x2ff V195
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, 0x0, V186, V187]
Stack pops: 3
Stack additions: [V193]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, V193]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2ef]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V197 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, V193]

================================

Block 0x2ff
[0x2ff:0x307]
---
Predecessors: [0x259, 0x2ef]
Successors: [0x3d3]
---
0x2ff JUMPDEST
0x300 PUSH2 0x308
0x303 CALLER
0x304 PUSH2 0x3d3
0x307 JUMP
---
0x2ff: JUMPDEST 
0x300: V198 = 0x308
0x303: V199 = CALLER
0x304: V200 = 0x3d3
0x307: JUMP 0x3d3
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S0]
Stack pops: 0
Stack additions: [0x308, V199]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S0, 0x308, V199]

================================

Block 0x308
[0x308:0x30e]
---
Predecessors: [0x3d3]
Successors: [0x30f, 0x313]
---
0x308 JUMPDEST
0x309 ISZERO
0x30a ISZERO
0x30b PUSH2 0x313
0x30e JUMPI
---
0x308: JUMPDEST 
0x309: V201 = ISZERO V255
0x30a: V202 = ISZERO V201
0x30b: V203 = 0x313
0x30e: JUMPI 0x313 V202
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S1, V255]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S1]

================================

Block 0x30f
[0x30f:0x312]
---
Predecessors: [0x308]
Successors: [0x3cb]
---
0x30f PUSH2 0x3cb
0x312 JUMP
---
0x30f: V204 = 0x3cb
0x312: JUMP 0x3cb
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S0]

================================

Block 0x313
[0x313:0x39c]
---
Predecessors: [0x308]
Successors: [0x39d, 0x3cb]
---
0x313 JUMPDEST
0x314 PUSH1 0x40
0x316 DUP1
0x317 MLOAD
0x318 PUSH32 0x9a288b4600000000000000000000000000000000000000000000000000000000
0x339 DUP2
0x33a MSTORE
0x33b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x350 DUP9
0x351 AND
0x352 PUSH1 0x4
0x354 DUP3
0x355 ADD
0x356 MSTORE
0x357 SWAP1
0x358 MLOAD
0x359 PUSH20 0xbce9bffd51d6e7d53f08a6f76580c1064bc78772
0x36e SWAP2
0x36f PUSH4 0x9a288b46
0x374 SWAP2
0x375 CALLVALUE
0x376 SWAP2
0x377 PUSH1 0x24
0x379 DUP1
0x37a DUP3
0x37b ADD
0x37c SWAP3
0x37d PUSH1 0x0
0x37f SWAP3
0x380 SWAP1
0x381 SWAP2
0x382 SWAP1
0x383 DUP3
0x384 SWAP1
0x385 SUB
0x386 ADD
0x387 DUP2
0x388 DUP6
0x389 DUP9
0x38a GAS
0x38b CALL
0x38c POP
0x38d POP
0x38e POP
0x38f PUSH1 0x0
0x391 ADDRESS
0x392 BALANCE
0x393 GT
0x394 ISZERO
0x395 SWAP2
0x396 POP
0x397 PUSH2 0x3cb
0x39a SWAP1
0x39b POP
0x39c JUMPI
---
0x313: JUMPDEST 
0x314: V205 = 0x40
0x317: V206 = M[0x40]
0x318: V207 = 0x9a288b4600000000000000000000000000000000000000000000000000000000
0x33a: M[V206] = 0x9a288b4600000000000000000000000000000000000000000000000000000000
0x33b: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V209 = AND V44 0xffffffffffffffffffffffffffffffffffffffff
0x352: V210 = 0x4
0x355: V211 = ADD V206 0x4
0x356: M[V211] = V209
0x358: V212 = M[0x40]
0x359: V213 = 0xbce9bffd51d6e7d53f08a6f76580c1064bc78772
0x36f: V214 = 0x9a288b46
0x375: V215 = CALLVALUE
0x377: V216 = 0x24
0x37b: V217 = ADD V206 0x24
0x37d: V218 = 0x0
0x385: V219 = SUB V206 V212
0x386: V220 = ADD V219 0x24
0x38a: V221 = GAS
0x38b: V222 = CALL V221 0xbce9bffd51d6e7d53f08a6f76580c1064bc78772 V215 V212 V220 V212 0x0
0x38f: V223 = 0x0
0x391: V224 = ADDRESS
0x392: V225 = BALANCE V224
0x393: V226 = GT V225 0x0
0x394: V227 = ISZERO V226
0x397: V228 = 0x3cb
0x39c: JUMPI 0x3cb V227
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S0]

================================

Block 0x39d
[0x39d:0x3bf]
---
Predecessors: [0x313]
Successors: [0x3c0, 0x3c9]
---
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 CALLER
0x3a1 SWAP1
0x3a2 ADDRESS
0x3a3 BALANCE
0x3a4 DUP1
0x3a5 ISZERO
0x3a6 PUSH2 0x8fc
0x3a9 MUL
0x3aa SWAP2
0x3ab PUSH1 0x0
0x3ad DUP2
0x3ae DUP2
0x3af DUP2
0x3b0 DUP6
0x3b1 DUP9
0x3b2 DUP9
0x3b3 CALL
0x3b4 SWAP4
0x3b5 POP
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 ISZERO
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x3c9
0x3bf JUMPI
---
0x39d: V229 = 0x40
0x39f: V230 = M[0x40]
0x3a0: V231 = CALLER
0x3a2: V232 = ADDRESS
0x3a3: V233 = BALANCE V232
0x3a5: V234 = ISZERO V233
0x3a6: V235 = 0x8fc
0x3a9: V236 = MUL 0x8fc V234
0x3ab: V237 = 0x0
0x3b3: V238 = CALL V236 V231 V233 V230 0x0 V230 0x0
0x3b9: V239 = ISZERO V238
0x3bb: V240 = ISZERO V239
0x3bc: V241 = 0x3c9
0x3bf: JUMPI 0x3c9 V240
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S0]
Stack pops: 0
Stack additions: [V239]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S0, V239]

================================

Block 0x3c0
[0x3c0:0x3c8]
---
Predecessors: [0x39d]
Successors: []
---
0x3c0 RETURNDATASIZE
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 RETURNDATACOPY
0x3c5 RETURNDATASIZE
0x3c6 PUSH1 0x0
0x3c8 REVERT
---
0x3c0: V242 = RETURNDATASIZE
0x3c1: V243 = 0x0
0x3c4: RETURNDATACOPY 0x0 0x0 V242
0x3c5: V244 = RETURNDATASIZE
0x3c6: V245 = 0x0
0x3c8: REVERT 0x0 V244
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S1, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S1, V239]

================================

Block 0x3c9
[0x3c9:0x3ca]
---
Predecessors: [0x39d]
Successors: [0x3cb]
---
0x3c9 JUMPDEST
0x3ca POP
---
0x3c9: JUMPDEST 
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S1, V239]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S1]

================================

Block 0x3cb
[0x3cb:0x3d2]
---
Predecessors: [0x30f, 0x313, 0x3c9]
Successors: [0x61]
---
0x3cb JUMPDEST
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 JUMP
---
0x3cb: JUMPDEST 
0x3d2: JUMP 0x61
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x3d3
[0x3d3:0x3fd]
---
Predecessors: [0xd9, 0x2ff]
Successors: [0xfb, 0x308]
---
0x3d3 JUMPDEST
0x3d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e9 AND
0x3ea PUSH1 0x0
0x3ec SWAP1
0x3ed DUP2
0x3ee MSTORE
0x3ef PUSH1 0x1
0x3f1 PUSH1 0x20
0x3f3 MSTORE
0x3f4 PUSH1 0x40
0x3f6 SWAP1
0x3f7 SHA3
0x3f8 SLOAD
0x3f9 PUSH1 0xff
0x3fb AND
0x3fc SWAP1
0x3fd JUMP
---
0x3d3: JUMPDEST 
0x3d4: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3ea: V248 = 0x0
0x3ee: M[0x0] = V247
0x3ef: V249 = 0x1
0x3f1: V250 = 0x20
0x3f3: M[0x20] = 0x1
0x3f4: V251 = 0x40
0x3f7: V252 = SHA3 0x0 0x40
0x3f8: V253 = S[V252]
0x3f9: V254 = 0xff
0x3fb: V255 = AND 0xff V253
0x3fd: JUMP {0xfb, 0x308}
---
Entry stack: [V11, 0x61, V44, V46, V48, V44, V147, S2, {0xfb, 0x308}, S0]
Stack pops: 2
Stack additions: [V255]
Exit stack: [V11, 0x61, V44, V46, V48, V44, V147, S2, V255]

================================

Block 0x3fe
[0x3fe:0x429]
---
Predecessors: []
Successors: []
---
0x3fe STOP
0x3ff LOG1
0x400 PUSH6 0x627a7a723058
0x407 SHA3
0x408 LOG0
0x409 MISSING 0xb3
0x40a LOG4
0x40b GASLIMIT
0x40c CREATE2
0x40d PUSH18 0x85ec5487f115dc2429f06ec4124be9b0d2dc
0x420 RETURNDATACOPY
0x421 MULMOD
0x422 MISSING 0xc
0x423 MISSING 0xcc
0x424 MISSING 0xc
0x425 MISSING 0xca
0x426 MISSING 0xc0
0x427 MISSING 0x4b
0x428 STOP
0x429 MISSING 0x29
---
0x3fe: STOP 
0x3ff: LOG S0 S1 S2
0x400: V256 = 0x627a7a723058
0x407: V257 = SHA3 0x627a7a723058 S3
0x408: LOG V257 S4
0x409: MISSING 0xb3
0x40a: LOG S0 S1 S2 S3 S4 S5
0x40b: V258 = GASLIMIT
0x40c: V259 = CREATE2 V258 S6 S7 S8
0x40d: V260 = 0x85ec5487f115dc2429f06ec4124be9b0d2dc
0x420: RETURNDATACOPY 0x85ec5487f115dc2429f06ec4124be9b0d2dc V259 S9
0x421: V261 = MULMOD S10 S11 S12
0x422: MISSING 0xc
0x423: MISSING 0xcc
0x424: MISSING 0xc
0x425: MISSING 0xca
0x426: MISSING 0xc0
0x427: MISSING 0x4b
0x428: STOP 
0x429: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V261]
Exit stack: []

================================

Function 0:
Public function signature: 0xae5e739
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x6b, 0x6f, 0x10f, 0x12f, 0x133

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x91
Exit block: 0x61
Body: 0x61, 0x91, 0x99, 0x9d, 0x167, 0x1a6, 0x1af

Function 2:
Public function signature: 0xa6df4557
Entry block: 0xa6
Exit block: 0x2fb
Body: 0x61, 0xa6, 0x1b2, 0x21a, 0x21e, 0x229, 0x232, 0x244, 0x248, 0x255, 0x259, 0x262, 0x2c1, 0x2c5, 0x2d0, 0x2d9, 0x2eb, 0x2ef, 0x2fb, 0x2ff, 0x308, 0x30f, 0x313, 0x39d, 0x3c0, 0x3c9, 0x3cb

Function 3:
Public function signature: 0xfe9fbb80
Entry block: 0xcd
Exit block: 0xd5
Body: 0xcd, 0xd5, 0xd9, 0xfb

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

