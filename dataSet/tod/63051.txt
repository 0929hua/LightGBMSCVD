Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x125]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x125
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x125
0xa: JUMPI 0x125 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x136]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1a7a8c0
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x136
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1a7a8c0
0x39: V12 = EQ V10 0x1a7a8c0
0x3a: V13 = 0x136
0x3d: JUMPI 0x136 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x162]
---
0x3e DUP1
0x3f PUSH4 0x6fdde03
0x44 EQ
0x45 PUSH2 0x162
0x48 JUMPI
---
0x3f: V14 = 0x6fdde03
0x44: V15 = EQ 0x6fdde03 V10
0x45: V16 = 0x162
0x48: JUMPI 0x162 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1f2]
---
0x49 DUP1
0x4a PUSH4 0x95ea7b3
0x4f EQ
0x50 PUSH2 0x1f2
0x53 JUMPI
---
0x4a: V17 = 0x95ea7b3
0x4f: V18 = EQ 0x95ea7b3 V10
0x50: V19 = 0x1f2
0x53: JUMPI 0x1f2 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x225]
---
0x54 DUP1
0x55 PUSH4 0x18160ddd
0x5a EQ
0x5b PUSH2 0x225
0x5e JUMPI
---
0x55: V20 = 0x18160ddd
0x5a: V21 = EQ 0x18160ddd V10
0x5b: V22 = 0x225
0x5e: JUMPI 0x225 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x247]
---
0x5f DUP1
0x60 PUSH4 0x229a4978
0x65 EQ
0x66 PUSH2 0x247
0x69 JUMPI
---
0x60: V23 = 0x229a4978
0x65: V24 = EQ 0x229a4978 V10
0x66: V25 = 0x247
0x69: JUMPI 0x247 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x269]
---
0x6a DUP1
0x6b PUSH4 0x23b872dd
0x70 EQ
0x71 PUSH2 0x269
0x74 JUMPI
---
0x6b: V26 = 0x23b872dd
0x70: V27 = EQ 0x23b872dd V10
0x71: V28 = 0x269
0x74: JUMPI 0x269 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2a2]
---
0x75 DUP1
0x76 PUSH4 0x313ce567
0x7b EQ
0x7c PUSH2 0x2a2
0x7f JUMPI
---
0x76: V29 = 0x313ce567
0x7b: V30 = EQ 0x313ce567 V10
0x7c: V31 = 0x2a2
0x7f: JUMPI 0x2a2 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2c4]
---
0x80 DUP1
0x81 PUSH4 0x4172d080
0x86 EQ
0x87 PUSH2 0x2c4
0x8a JUMPI
---
0x81: V32 = 0x4172d080
0x86: V33 = EQ 0x4172d080 V10
0x87: V34 = 0x2c4
0x8a: JUMPI 0x2c4 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2e6]
---
0x8b DUP1
0x8c PUSH4 0x4bb278f3
0x91 EQ
0x92 PUSH2 0x2e6
0x95 JUMPI
---
0x8c: V35 = 0x4bb278f3
0x91: V36 = EQ 0x4bb278f3 V10
0x92: V37 = 0x2e6
0x95: JUMPI 0x2e6 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x2f8]
---
0x96 DUP1
0x97 PUSH4 0x54fd4d50
0x9c EQ
0x9d PUSH2 0x2f8
0xa0 JUMPI
---
0x97: V38 = 0x54fd4d50
0x9c: V39 = EQ 0x54fd4d50 V10
0x9d: V40 = 0x2f8
0xa0: JUMPI 0x2f8 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x388]
---
0xa1 DUP1
0xa2 PUSH4 0x590e1ae3
0xa7 EQ
0xa8 PUSH2 0x388
0xab JUMPI
---
0xa2: V41 = 0x590e1ae3
0xa7: V42 = EQ 0x590e1ae3 V10
0xa8: V43 = 0x388
0xab: JUMPI 0x388 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x39a]
---
0xac DUP1
0xad PUSH4 0x6f7920fd
0xb2 EQ
0xb3 PUSH2 0x39a
0xb6 JUMPI
---
0xad: V44 = 0x6f7920fd
0xb2: V45 = EQ 0x6f7920fd V10
0xb3: V46 = 0x39a
0xb6: JUMPI 0x39a V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x3bc]
---
0xb7 DUP1
0xb8 PUSH4 0x70a08231
0xbd EQ
0xbe PUSH2 0x3bc
0xc1 JUMPI
---
0xb8: V47 = 0x70a08231
0xbd: V48 = EQ 0x70a08231 V10
0xbe: V49 = 0x3bc
0xc1: JUMPI 0x3bc V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x3ea]
---
0xc2 DUP1
0xc3 PUSH4 0x8d4e4083
0xc8 EQ
0xc9 PUSH2 0x3ea
0xcc JUMPI
---
0xc3: V50 = 0x8d4e4083
0xc8: V51 = EQ 0x8d4e4083 V10
0xc9: V52 = 0x3ea
0xcc: JUMPI 0x3ea V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x40e]
---
0xcd DUP1
0xce PUSH4 0x91b43d13
0xd3 EQ
0xd4 PUSH2 0x40e
0xd7 JUMPI
---
0xce: V53 = 0x91b43d13
0xd3: V54 = EQ 0x91b43d13 V10
0xd4: V55 = 0x40e
0xd7: JUMPI 0x40e V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x430]
---
0xd8 DUP1
0xd9 PUSH4 0x95d89b41
0xde EQ
0xdf PUSH2 0x430
0xe2 JUMPI
---
0xd9: V56 = 0x95d89b41
0xde: V57 = EQ 0x95d89b41 V10
0xdf: V58 = 0x430
0xe2: JUMPI 0x430 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x4c0]
---
0xe3 DUP1
0xe4 PUSH4 0xa81c3bdf
0xe9 EQ
0xea PUSH2 0x4c0
0xed JUMPI
---
0xe4: V59 = 0xa81c3bdf
0xe9: V60 = EQ 0xa81c3bdf V10
0xea: V61 = 0x4c0
0xed: JUMPI 0x4c0 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x4ec]
---
0xee DUP1
0xef PUSH4 0xa9059cbb
0xf4 EQ
0xf5 PUSH2 0x4ec
0xf8 JUMPI
---
0xef: V62 = 0xa9059cbb
0xf4: V63 = EQ 0xa9059cbb V10
0xf5: V64 = 0x4ec
0xf8: JUMPI 0x4ec V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x51f]
---
0xf9 DUP1
0xfa PUSH4 0xb4427263
0xff EQ
0x100 PUSH2 0x51f
0x103 JUMPI
---
0xfa: V65 = 0xb4427263
0xff: V66 = EQ 0xb4427263 V10
0x100: V67 = 0x51f
0x103: JUMPI 0x51f V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x10e]
---
Predecessors: [0xf9]
Successors: [0x10f, 0x247]
---
0x104 DUP1
0x105 PUSH4 0xc039daf6
0x10a EQ
0x10b PUSH2 0x247
0x10e JUMPI
---
0x105: V68 = 0xc039daf6
0x10a: V69 = EQ 0xc039daf6 V10
0x10b: V70 = 0x247
0x10e: JUMPI 0x247 V69
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x119]
---
Predecessors: [0x104]
Successors: [0x11a, 0x54b]
---
0x10f DUP1
0x110 PUSH4 0xd648a647
0x115 EQ
0x116 PUSH2 0x54b
0x119 JUMPI
---
0x110: V71 = 0xd648a647
0x115: V72 = EQ 0xd648a647 V10
0x116: V73 = 0x54b
0x119: JUMPI 0x54b V72
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x11a
[0x11a:0x124]
---
Predecessors: [0x10f]
Successors: [0x125, 0x56d]
---
0x11a DUP1
0x11b PUSH4 0xdd62ed3e
0x120 EQ
0x121 PUSH2 0x56d
0x124 JUMPI
---
0x11b: V74 = 0xdd62ed3e
0x120: V75 = EQ 0xdd62ed3e V10
0x121: V76 = 0x56d
0x124: JUMPI 0x56d V75
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x0, 0x11a]
Successors: [0x129]
---
0x125 JUMPDEST
0x126 PUSH2 0x134
---
0x125: JUMPDEST 
0x126: V77 = 0x134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x134]
Exit stack: [V10, 0x134]

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0x125]
Successors: [0x5a1]
---
0x129 JUMPDEST
0x12a PUSH2 0x131
0x12d PUSH2 0x5a1
0x130 JUMP
---
0x129: JUMPDEST 
0x12a: V78 = 0x131
0x12d: V79 = 0x5a1
0x130: JUMP 0x5a1
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x134, 0x131]

================================

Block 0x131
[0x131:0x131]
---
Predecessors: [0x67d, 0x8c6]
Successors: [0x132]
---
0x131 JUMPDEST
---
0x131: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x131]
Successors: [0x134]
---
0x132 JUMPDEST
0x133 JUMP
---
0x132: JUMPDEST 
0x133: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x134
[0x134:0x135]
---
Predecessors: [0x132, 0x67d]
Successors: []
---
0x134 JUMPDEST
0x135 STOP
---
0x134: JUMPDEST 
0x135: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x136
[0x136:0x13c]
---
Predecessors: [0xb]
Successors: [0x13d, 0x13e]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 ISZERO
0x139 PUSH2 0x13e
0x13c JUMPI
---
0x136: JUMPDEST 
0x137: V80 = CALLVALUE
0x138: V81 = ISZERO V80
0x139: V82 = 0x13e
0x13c: JUMPI 0x13e V81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13d
[0x13d:0x13d]
---
Predecessors: [0x136]
Successors: []
---
0x13d INVALID
---
0x13d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x136]
Successors: [0x681]
---
0x13e JUMPDEST
0x13f PUSH2 0x146
0x142 PUSH2 0x681
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V83 = 0x146
0x142: V84 = 0x681
0x145: JUMP 0x681
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V10, 0x146]

================================

Block 0x146
[0x146:0x161]
---
Predecessors: [0x681, 0xb63]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 DUP1
0x14a MLOAD
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP1
0x154 SWAP3
0x155 AND
0x156 DUP3
0x157 MSTORE
0x158 MLOAD
0x159 SWAP1
0x15a DUP2
0x15b SWAP1
0x15c SUB
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP1
0x161 RETURN
---
0x146: JUMPDEST 
0x147: V85 = 0x40
0x14a: V86 = M[0x40]
0x14b: V87 = 0x1
0x14d: V88 = 0xa0
0x14f: V89 = 0x2
0x151: V90 = EXP 0x2 0xa0
0x152: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V92 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x157: M[V86] = V92
0x158: V93 = M[0x40]
0x15c: V94 = SUB V86 V93
0x15d: V95 = 0x20
0x15f: V96 = ADD 0x20 V94
0x161: RETURN V93 V96
---
Entry stack: [V10, 0x146, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x146]

================================

Block 0x162
[0x162:0x168]
---
Predecessors: [0x3e]
Successors: [0x169, 0x16a]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x16a
0x168 JUMPI
---
0x162: JUMPDEST 
0x163: V97 = CALLVALUE
0x164: V98 = ISZERO V97
0x165: V99 = 0x16a
0x168: JUMPI 0x16a V98
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x169
[0x169:0x169]
---
Predecessors: [0x162]
Successors: []
---
0x169 INVALID
---
0x169: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x162]
Successors: [0x690]
---
0x16a JUMPDEST
0x16b PUSH2 0x172
0x16e PUSH2 0x690
0x171 JUMP
---
0x16a: JUMPDEST 
0x16b: V100 = 0x172
0x16e: V101 = 0x690
0x171: JUMP 0x690
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V10, 0x172]

================================

Block 0x172
[0x172:0x197]
---
Predecessors: [0x690, 0x9a9, 0xb2c]
Successors: [0x198, 0x1b8]
---
0x172 JUMPDEST
0x173 PUSH1 0x40
0x175 DUP1
0x176 MLOAD
0x177 PUSH1 0x20
0x179 DUP1
0x17a DUP3
0x17b MSTORE
0x17c DUP4
0x17d MLOAD
0x17e DUP2
0x17f DUP4
0x180 ADD
0x181 MSTORE
0x182 DUP4
0x183 MLOAD
0x184 SWAP2
0x185 SWAP3
0x186 DUP4
0x187 SWAP3
0x188 SWAP1
0x189 DUP4
0x18a ADD
0x18b SWAP2
0x18c DUP6
0x18d ADD
0x18e SWAP1
0x18f DUP1
0x190 DUP4
0x191 DUP4
0x192 DUP3
0x193 ISZERO
0x194 PUSH2 0x1b8
0x197 JUMPI
---
0x172: JUMPDEST 
0x173: V102 = 0x40
0x176: V103 = M[0x40]
0x177: V104 = 0x20
0x17b: M[V103] = 0x20
0x17d: V105 = M[S0]
0x180: V106 = ADD V103 0x20
0x181: M[V106] = V105
0x183: V107 = M[S0]
0x18a: V108 = ADD V103 0x40
0x18d: V109 = ADD S0 0x20
0x193: V110 = ISZERO V107
0x194: V111 = 0x1b8
0x197: JUMPI 0x1b8 V110
---
Entry stack: [V10, 0x172, S0]
Stack pops: 1
Stack additions: [S0, V103, V103, V108, V109, V107, V107, V108, V109]
Exit stack: [V10, 0x172, S0, V103, V103, V108, V109, V107, V107, V108, V109]

================================

Block 0x198
[0x198:0x1a5]
---
Predecessors: [0x172, 0x1a6, 0x33c, 0x474]
Successors: [0x1a6, 0x1b8]
---
0x198 JUMPDEST
0x199 DUP1
0x19a MLOAD
0x19b DUP3
0x19c MSTORE
0x19d PUSH1 0x20
0x19f DUP4
0x1a0 GT
0x1a1 ISZERO
0x1a2 PUSH2 0x1b8
0x1a5 JUMPI
---
0x198: JUMPDEST 
0x19a: V112 = M[S0]
0x19c: M[S1] = V112
0x19d: V113 = 0x20
0x1a0: V114 = GT S2 0x20
0x1a1: V115 = ISZERO V114
0x1a2: V116 = 0x1b8
0x1a5: JUMPI 0x1b8 V115
---
Entry stack: [V10, 0x172, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x172, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1a6
[0x1a6:0x1b7]
---
Predecessors: [0x198]
Successors: [0x198]
---
0x1a6 PUSH1 0x1f
0x1a8 NOT
0x1a9 SWAP1
0x1aa SWAP3
0x1ab ADD
0x1ac SWAP2
0x1ad PUSH1 0x20
0x1af SWAP2
0x1b0 DUP3
0x1b1 ADD
0x1b2 SWAP2
0x1b3 ADD
0x1b4 PUSH2 0x198
0x1b7 JUMP
---
0x1a6: V117 = 0x1f
0x1a8: V118 = NOT 0x1f
0x1ab: V119 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1ad: V120 = 0x20
0x1b1: V121 = ADD 0x20 S1
0x1b3: V122 = ADD 0x20 S0
0x1b4: V123 = 0x198
0x1b7: JUMP 0x198
---
Entry stack: [V10, 0x172, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V119, V121, V122]
Exit stack: [V10, 0x172, S8, S7, S6, S5, S4, S3, V119, V121, V122]

================================

Block 0x1b8
[0x1b8:0x1ca]
---
Predecessors: [0x172, 0x198, 0x308, 0x32e, 0x440, 0x466]
Successors: [0x1cb, 0x1e4]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc SWAP1
0x1bd POP
0x1be SWAP1
0x1bf DUP2
0x1c0 ADD
0x1c1 SWAP1
0x1c2 PUSH1 0x1f
0x1c4 AND
0x1c5 DUP1
0x1c6 ISZERO
0x1c7 PUSH2 0x1e4
0x1ca JUMPI
---
0x1b8: JUMPDEST 
0x1c0: V124 = ADD S3 S5
0x1c2: V125 = 0x1f
0x1c4: V126 = AND 0x1f S3
0x1c6: V127 = ISZERO V126
0x1c7: V128 = 0x1e4
0x1ca: JUMPI 0x1e4 V127
---
Entry stack: [V10, 0x172, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V124, V126]
Exit stack: [V10, 0x172, S8, S7, S6, V124, V126]

================================

Block 0x1cb
[0x1cb:0x1e3]
---
Predecessors: [0x1b8]
Successors: [0x1e4]
---
0x1cb DUP1
0x1cc DUP3
0x1cd SUB
0x1ce DUP1
0x1cf MLOAD
0x1d0 PUSH1 0x1
0x1d2 DUP4
0x1d3 PUSH1 0x20
0x1d5 SUB
0x1d6 PUSH2 0x100
0x1d9 EXP
0x1da SUB
0x1db NOT
0x1dc AND
0x1dd DUP2
0x1de MSTORE
0x1df PUSH1 0x20
0x1e1 ADD
0x1e2 SWAP2
0x1e3 POP
---
0x1cd: V129 = SUB V124 V126
0x1cf: V130 = M[V129]
0x1d0: V131 = 0x1
0x1d3: V132 = 0x20
0x1d5: V133 = SUB 0x20 V126
0x1d6: V134 = 0x100
0x1d9: V135 = EXP 0x100 V133
0x1da: V136 = SUB V135 0x1
0x1db: V137 = NOT V136
0x1dc: V138 = AND V137 V130
0x1de: M[V129] = V138
0x1df: V139 = 0x20
0x1e1: V140 = ADD 0x20 V129
---
Entry stack: [V10, 0x172, S4, S3, S2, V124, V126]
Stack pops: 2
Stack additions: [V140, S0]
Exit stack: [V10, 0x172, S4, S3, S2, V140, V126]

================================

Block 0x1e4
[0x1e4:0x1f1]
---
Predecessors: [0x1b8, 0x1cb, 0x34e, 0x486]
Successors: []
---
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 SWAP3
0x1e7 POP
0x1e8 POP
0x1e9 POP
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee SWAP2
0x1ef SUB
0x1f0 SWAP1
0x1f1 RETURN
---
0x1e4: JUMPDEST 
0x1ea: V141 = 0x40
0x1ec: V142 = M[0x40]
0x1ef: V143 = SUB S1 V142
0x1f1: RETURN V142 V143
---
Entry stack: [V10, 0x172, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x172]

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x49]
Successors: [0x1f9, 0x1fa]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fa
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V144 = CALLVALUE
0x1f4: V145 = ISZERO V144
0x1f5: V146 = 0x1fa
0x1f8: JUMPI 0x1fa V145
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f9
[0x1f9:0x1f9]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 INVALID
---
0x1f9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fa
[0x1fa:0x210]
---
Predecessors: [0x1f2]
Successors: [0x6c7]
---
0x1fa JUMPDEST
0x1fb PUSH2 0x211
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 PUSH1 0x4
0x208 CALLDATALOAD
0x209 AND
0x20a PUSH1 0x24
0x20c CALLDATALOAD
0x20d PUSH2 0x6c7
0x210 JUMP
---
0x1fa: JUMPDEST 
0x1fb: V147 = 0x211
0x1fe: V148 = 0x1
0x200: V149 = 0xa0
0x202: V150 = 0x2
0x204: V151 = EXP 0x2 0xa0
0x205: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V153 = 0x4
0x208: V154 = CALLDATALOAD 0x4
0x209: V155 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V156 = 0x24
0x20c: V157 = CALLDATALOAD 0x24
0x20d: V158 = 0x6c7
0x210: JUMP 0x6c7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x211, V155, V157]
Exit stack: [V10, 0x211, V155, V157]

================================

Block 0x211
[0x211:0x224]
---
Predecessors: [0x72c, 0x837, 0xb16]
Successors: []
---
0x211 JUMPDEST
0x212 PUSH1 0x40
0x214 DUP1
0x215 MLOAD
0x216 SWAP2
0x217 ISZERO
0x218 ISZERO
0x219 DUP3
0x21a MSTORE
0x21b MLOAD
0x21c SWAP1
0x21d DUP2
0x21e SWAP1
0x21f SUB
0x220 PUSH1 0x20
0x222 ADD
0x223 SWAP1
0x224 RETURN
---
0x211: JUMPDEST 
0x212: V159 = 0x40
0x215: V160 = M[0x40]
0x217: V161 = ISZERO S0
0x218: V162 = ISZERO V161
0x21a: M[V160] = V162
0x21b: V163 = M[0x40]
0x21f: V164 = SUB V160 V163
0x220: V165 = 0x20
0x222: V166 = ADD 0x20 V164
0x224: RETURN V163 V166
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x54]
Successors: [0x22c, 0x22d]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x22d
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V167 = CALLVALUE
0x227: V168 = ISZERO V167
0x228: V169 = 0x22d
0x22b: JUMPI 0x22d V168
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22c
[0x22c:0x22c]
---
Predecessors: [0x225]
Successors: []
---
0x22c INVALID
---
0x22c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22d
[0x22d:0x234]
---
Predecessors: [0x225]
Successors: [0x732]
---
0x22d JUMPDEST
0x22e PUSH2 0x235
0x231 PUSH2 0x732
0x234 JUMP
---
0x22d: JUMPDEST 
0x22e: V170 = 0x235
0x231: V171 = 0x732
0x234: JUMP 0x732
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V10, 0x235]

================================

Block 0x235
[0x235:0x246]
---
Predecessors: [0x732, 0x738, 0x83e, 0x843, 0xae7, 0xb11, 0xb26, 0xc2e, 0xc5b]
Successors: []
---
0x235 JUMPDEST
0x236 PUSH1 0x40
0x238 DUP1
0x239 MLOAD
0x23a SWAP2
0x23b DUP3
0x23c MSTORE
0x23d MLOAD
0x23e SWAP1
0x23f DUP2
0x240 SWAP1
0x241 SUB
0x242 PUSH1 0x20
0x244 ADD
0x245 SWAP1
0x246 RETURN
---
0x235: JUMPDEST 
0x236: V172 = 0x40
0x239: V173 = M[0x40]
0x23c: M[V173] = S0
0x23d: V174 = M[0x40]
0x241: V175 = SUB V173 V174
0x242: V176 = 0x20
0x244: V177 = ADD 0x20 V175
0x246: RETURN V174 V177
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x247
[0x247:0x24d]
---
Predecessors: [0x5f, 0x104]
Successors: [0x24e, 0x24f]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 ISZERO
0x24a PUSH2 0x24f
0x24d JUMPI
---
0x247: JUMPDEST 
0x248: V178 = CALLVALUE
0x249: V179 = ISZERO V178
0x24a: V180 = 0x24f
0x24d: JUMPI 0x24f V179
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24e
[0x24e:0x24e]
---
Predecessors: [0x247]
Successors: []
---
0x24e INVALID
---
0x24e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24f
[0x24f:0x256]
---
Predecessors: [0x247, 0x527]
Successors: [0x738]
---
0x24f JUMPDEST
0x250 PUSH2 0x235
0x253 PUSH2 0x738
0x256 JUMP
---
0x24f: JUMPDEST 
0x250: V181 = 0x235
0x253: V182 = 0x738
0x256: JUMP 0x738
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V10, 0x235]

================================

Block 0x257
[0x257:0x268]
---
Predecessors: []
Successors: []
---
0x257 JUMPDEST
0x258 PUSH1 0x40
0x25a DUP1
0x25b MLOAD
0x25c SWAP2
0x25d DUP3
0x25e MSTORE
0x25f MLOAD
0x260 SWAP1
0x261 DUP2
0x262 SWAP1
0x263 SUB
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP1
0x268 RETURN
---
0x257: JUMPDEST 
0x258: V183 = 0x40
0x25b: V184 = M[0x40]
0x25e: M[V184] = S0
0x25f: V185 = M[0x40]
0x263: V186 = SUB V184 V185
0x264: V187 = 0x20
0x266: V188 = ADD 0x20 V186
0x268: RETURN V185 V188
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x269
[0x269:0x26f]
---
Predecessors: [0x6a]
Successors: [0x270, 0x271]
---
0x269 JUMPDEST
0x26a CALLVALUE
0x26b ISZERO
0x26c PUSH2 0x271
0x26f JUMPI
---
0x269: JUMPDEST 
0x26a: V189 = CALLVALUE
0x26b: V190 = ISZERO V189
0x26c: V191 = 0x271
0x26f: JUMPI 0x271 V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x270
[0x270:0x270]
---
Predecessors: [0x269]
Successors: []
---
0x270 INVALID
---
0x270: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x271
[0x271:0x28d]
---
Predecessors: [0x269]
Successors: [0x748]
---
0x271 JUMPDEST
0x272 PUSH2 0x211
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d PUSH1 0x4
0x27f CALLDATALOAD
0x280 DUP2
0x281 AND
0x282 SWAP1
0x283 PUSH1 0x24
0x285 CALLDATALOAD
0x286 AND
0x287 PUSH1 0x44
0x289 CALLDATALOAD
0x28a PUSH2 0x748
0x28d JUMP
---
0x271: JUMPDEST 
0x272: V192 = 0x211
0x275: V193 = 0x1
0x277: V194 = 0xa0
0x279: V195 = 0x2
0x27b: V196 = EXP 0x2 0xa0
0x27c: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V198 = 0x4
0x27f: V199 = CALLDATALOAD 0x4
0x281: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x283: V201 = 0x24
0x285: V202 = CALLDATALOAD 0x24
0x286: V203 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x287: V204 = 0x44
0x289: V205 = CALLDATALOAD 0x44
0x28a: V206 = 0x748
0x28d: JUMP 0x748
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x211, V200, V203, V205]
Exit stack: [V10, 0x211, V200, V203, V205]

================================

Block 0x28e
[0x28e:0x2a1]
---
Predecessors: []
Successors: []
---
0x28e JUMPDEST
0x28f PUSH1 0x40
0x291 DUP1
0x292 MLOAD
0x293 SWAP2
0x294 ISZERO
0x295 ISZERO
0x296 DUP3
0x297 MSTORE
0x298 MLOAD
0x299 SWAP1
0x29a DUP2
0x29b SWAP1
0x29c SUB
0x29d PUSH1 0x20
0x29f ADD
0x2a0 SWAP1
0x2a1 RETURN
---
0x28e: JUMPDEST 
0x28f: V207 = 0x40
0x292: V208 = M[0x40]
0x294: V209 = ISZERO S0
0x295: V210 = ISZERO V209
0x297: M[V208] = V210
0x298: V211 = M[0x40]
0x29c: V212 = SUB V208 V211
0x29d: V213 = 0x20
0x29f: V214 = ADD 0x20 V212
0x2a1: RETURN V211 V214
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a2
[0x2a2:0x2a8]
---
Predecessors: [0x75]
Successors: [0x2a9, 0x2aa]
---
0x2a2 JUMPDEST
0x2a3 CALLVALUE
0x2a4 ISZERO
0x2a5 PUSH2 0x2aa
0x2a8 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V215 = CALLVALUE
0x2a4: V216 = ISZERO V215
0x2a5: V217 = 0x2aa
0x2a8: JUMPI 0x2aa V216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a9
[0x2a9:0x2a9]
---
Predecessors: [0x2a2]
Successors: []
---
0x2a9 INVALID
---
0x2a9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x2a2]
Successors: [0x83e]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x235
0x2ae PUSH2 0x83e
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V218 = 0x235
0x2ae: V219 = 0x83e
0x2b1: JUMP 0x83e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V10, 0x235]

================================

Block 0x2b2
[0x2b2:0x2c3]
---
Predecessors: []
Successors: []
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x40
0x2b5 DUP1
0x2b6 MLOAD
0x2b7 SWAP2
0x2b8 DUP3
0x2b9 MSTORE
0x2ba MLOAD
0x2bb SWAP1
0x2bc DUP2
0x2bd SWAP1
0x2be SUB
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP1
0x2c3 RETURN
---
0x2b2: JUMPDEST 
0x2b3: V220 = 0x40
0x2b6: V221 = M[0x40]
0x2b9: M[V221] = S0
0x2ba: V222 = M[0x40]
0x2be: V223 = SUB V221 V222
0x2bf: V224 = 0x20
0x2c1: V225 = ADD 0x20 V223
0x2c3: RETURN V222 V225
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c4
[0x2c4:0x2ca]
---
Predecessors: [0x80]
Successors: [0x2cb, 0x2cc]
---
0x2c4 JUMPDEST
0x2c5 CALLVALUE
0x2c6 ISZERO
0x2c7 PUSH2 0x2cc
0x2ca JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V226 = CALLVALUE
0x2c6: V227 = ISZERO V226
0x2c7: V228 = 0x2cc
0x2ca: JUMPI 0x2cc V227
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cb
[0x2cb:0x2cb]
---
Predecessors: [0x2c4]
Successors: []
---
0x2cb INVALID
---
0x2cb: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cc
[0x2cc:0x2d3]
---
Predecessors: [0x2c4]
Successors: [0x843]
---
0x2cc JUMPDEST
0x2cd PUSH2 0x235
0x2d0 PUSH2 0x843
0x2d3 JUMP
---
0x2cc: JUMPDEST 
0x2cd: V229 = 0x235
0x2d0: V230 = 0x843
0x2d3: JUMP 0x843
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V10, 0x235]

================================

Block 0x2d4
[0x2d4:0x2e5]
---
Predecessors: []
Successors: []
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x40
0x2d7 DUP1
0x2d8 MLOAD
0x2d9 SWAP2
0x2da DUP3
0x2db MSTORE
0x2dc MLOAD
0x2dd SWAP1
0x2de DUP2
0x2df SWAP1
0x2e0 SUB
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 SWAP1
0x2e5 RETURN
---
0x2d4: JUMPDEST 
0x2d5: V231 = 0x40
0x2d8: V232 = M[0x40]
0x2db: M[V232] = S0
0x2dc: V233 = M[0x40]
0x2e0: V234 = SUB V232 V233
0x2e1: V235 = 0x20
0x2e3: V236 = ADD 0x20 V234
0x2e5: RETURN V233 V236
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e6
[0x2e6:0x2ec]
---
Predecessors: [0x8b]
Successors: [0x2ed, 0x2ee]
---
0x2e6 JUMPDEST
0x2e7 CALLVALUE
0x2e8 ISZERO
0x2e9 PUSH2 0x2ee
0x2ec JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V237 = CALLVALUE
0x2e8: V238 = ISZERO V237
0x2e9: V239 = 0x2ee
0x2ec: JUMPI 0x2ee V238
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ed
[0x2ed:0x2ed]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ed INVALID
---
0x2ed: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ee
[0x2ee:0x2f5]
---
Predecessors: [0x2e6]
Successors: [0x84a]
---
0x2ee JUMPDEST
0x2ef PUSH2 0x134
0x2f2 PUSH2 0x84a
0x2f5 JUMP
---
0x2ee: JUMPDEST 
0x2ef: V240 = 0x134
0x2f2: V241 = 0x84a
0x2f5: JUMP 0x84a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x134]
Exit stack: [V10, 0x134]

================================

Block 0x2f6
[0x2f6:0x2f7]
---
Predecessors: []
Successors: []
---
0x2f6 JUMPDEST
0x2f7 STOP
---
0x2f6: JUMPDEST 
0x2f7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x96]
Successors: [0x2ff, 0x300]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x300
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V242 = CALLVALUE
0x2fa: V243 = ISZERO V242
0x2fb: V244 = 0x300
0x2fe: JUMPI 0x300 V243
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ff
[0x2ff:0x2ff]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff INVALID
---
0x2ff: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x300
[0x300:0x307]
---
Predecessors: [0x2f8]
Successors: [0x923]
---
0x300 JUMPDEST
0x301 PUSH2 0x172
0x304 PUSH2 0x923
0x307 JUMP
---
0x300: JUMPDEST 
0x301: V245 = 0x172
0x304: V246 = 0x923
0x307: JUMP 0x923
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V10, 0x172]

================================

Block 0x308
[0x308:0x32d]
---
Predecessors: []
Successors: [0x1b8, 0x32e]
---
0x308 JUMPDEST
0x309 PUSH1 0x40
0x30b DUP1
0x30c MLOAD
0x30d PUSH1 0x20
0x30f DUP1
0x310 DUP3
0x311 MSTORE
0x312 DUP4
0x313 MLOAD
0x314 DUP2
0x315 DUP4
0x316 ADD
0x317 MSTORE
0x318 DUP4
0x319 MLOAD
0x31a SWAP2
0x31b SWAP3
0x31c DUP4
0x31d SWAP3
0x31e SWAP1
0x31f DUP4
0x320 ADD
0x321 SWAP2
0x322 DUP6
0x323 ADD
0x324 SWAP1
0x325 DUP1
0x326 DUP4
0x327 DUP4
0x328 DUP3
0x329 ISZERO
0x32a PUSH2 0x1b8
0x32d JUMPI
---
0x308: JUMPDEST 
0x309: V247 = 0x40
0x30c: V248 = M[0x40]
0x30d: V249 = 0x20
0x311: M[V248] = 0x20
0x313: V250 = M[S0]
0x316: V251 = ADD V248 0x20
0x317: M[V251] = V250
0x319: V252 = M[S0]
0x320: V253 = ADD V248 0x40
0x323: V254 = ADD S0 0x20
0x329: V255 = ISZERO V252
0x32a: V256 = 0x1b8
0x32d: JUMPI 0x1b8 V255
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V248, V248, V253, V254, V252, V252, V253, V254]
Exit stack: [S0, V248, V248, V253, V254, V252, V252, V253, V254]

================================

Block 0x32e
[0x32e:0x33b]
---
Predecessors: [0x308]
Successors: [0x1b8, 0x33c]
---
0x32e JUMPDEST
0x32f DUP1
0x330 MLOAD
0x331 DUP3
0x332 MSTORE
0x333 PUSH1 0x20
0x335 DUP4
0x336 GT
0x337 ISZERO
0x338 PUSH2 0x1b8
0x33b JUMPI
---
0x32e: JUMPDEST 
0x330: V257 = M[V254]
0x332: M[V253] = V257
0x333: V258 = 0x20
0x336: V259 = GT V252 0x20
0x337: V260 = ISZERO V259
0x338: V261 = 0x1b8
0x33b: JUMPI 0x1b8 V260
---
Entry stack: [S8, V248, V248, V253, V254, V252, V252, V253, V254]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V248, V248, V253, V254, V252, V252, V253, V254]

================================

Block 0x33c
[0x33c:0x34d]
---
Predecessors: [0x32e]
Successors: [0x198]
---
0x33c PUSH1 0x1f
0x33e NOT
0x33f SWAP1
0x340 SWAP3
0x341 ADD
0x342 SWAP2
0x343 PUSH1 0x20
0x345 SWAP2
0x346 DUP3
0x347 ADD
0x348 SWAP2
0x349 ADD
0x34a PUSH2 0x198
0x34d JUMP
---
0x33c: V262 = 0x1f
0x33e: V263 = NOT 0x1f
0x341: V264 = ADD V252 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x343: V265 = 0x20
0x347: V266 = ADD 0x20 V253
0x349: V267 = ADD 0x20 V254
0x34a: V268 = 0x198
0x34d: JUMP 0x198
---
Entry stack: [S8, V248, V248, V253, V254, V252, V252, V253, V254]
Stack pops: 3
Stack additions: [V264, V266, V267]
Exit stack: [S8, V248, V248, V253, V254, V252, V264, V266, V267]

================================

Block 0x34e
[0x34e:0x360]
---
Predecessors: []
Successors: [0x1e4, 0x361]
---
0x34e JUMPDEST
0x34f POP
0x350 POP
0x351 POP
0x352 SWAP1
0x353 POP
0x354 SWAP1
0x355 DUP2
0x356 ADD
0x357 SWAP1
0x358 PUSH1 0x1f
0x35a AND
0x35b DUP1
0x35c ISZERO
0x35d PUSH2 0x1e4
0x360 JUMPI
---
0x34e: JUMPDEST 
0x356: V269 = ADD S3 S5
0x358: V270 = 0x1f
0x35a: V271 = AND 0x1f S3
0x35c: V272 = ISZERO V271
0x35d: V273 = 0x1e4
0x360: JUMPI 0x1e4 V272
---
Entry stack: []
Stack pops: 6
Stack additions: [V269, V271]
Exit stack: [V269, V271]

================================

Block 0x361
[0x361:0x379]
---
Predecessors: [0x34e]
Successors: [0x37a]
---
0x361 DUP1
0x362 DUP3
0x363 SUB
0x364 DUP1
0x365 MLOAD
0x366 PUSH1 0x1
0x368 DUP4
0x369 PUSH1 0x20
0x36b SUB
0x36c PUSH2 0x100
0x36f EXP
0x370 SUB
0x371 NOT
0x372 AND
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x20
0x377 ADD
0x378 SWAP2
0x379 POP
---
0x363: V274 = SUB V269 V271
0x365: V275 = M[V274]
0x366: V276 = 0x1
0x369: V277 = 0x20
0x36b: V278 = SUB 0x20 V271
0x36c: V279 = 0x100
0x36f: V280 = EXP 0x100 V278
0x370: V281 = SUB V280 0x1
0x371: V282 = NOT V281
0x372: V283 = AND V282 V275
0x374: M[V274] = V283
0x375: V284 = 0x20
0x377: V285 = ADD 0x20 V274
---
Entry stack: [V269, V271]
Stack pops: 2
Stack additions: [V285, S0]
Exit stack: [V285, V271]

================================

Block 0x37a
[0x37a:0x387]
---
Predecessors: [0x361]
Successors: []
---
0x37a JUMPDEST
0x37b POP
0x37c SWAP3
0x37d POP
0x37e POP
0x37f POP
0x380 PUSH1 0x40
0x382 MLOAD
0x383 DUP1
0x384 SWAP2
0x385 SUB
0x386 SWAP1
0x387 RETURN
---
0x37a: JUMPDEST 
0x380: V286 = 0x40
0x382: V287 = M[0x40]
0x385: V288 = SUB V285 V287
0x387: RETURN V287 V288
---
Entry stack: [V285, V271]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x388
[0x388:0x38e]
---
Predecessors: [0xa1]
Successors: [0x38f, 0x390]
---
0x388 JUMPDEST
0x389 CALLVALUE
0x38a ISZERO
0x38b PUSH2 0x390
0x38e JUMPI
---
0x388: JUMPDEST 
0x389: V289 = CALLVALUE
0x38a: V290 = ISZERO V289
0x38b: V291 = 0x390
0x38e: JUMPI 0x390 V290
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38f
[0x38f:0x38f]
---
Predecessors: [0x388]
Successors: []
---
0x38f INVALID
---
0x38f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x390
[0x390:0x397]
---
Predecessors: [0x388]
Successors: [0x9b1]
---
0x390 JUMPDEST
0x391 PUSH2 0x134
0x394 PUSH2 0x9b1
0x397 JUMP
---
0x390: JUMPDEST 
0x391: V292 = 0x134
0x394: V293 = 0x9b1
0x397: JUMP 0x9b1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x134]
Exit stack: [V10, 0x134]

================================

Block 0x398
[0x398:0x399]
---
Predecessors: []
Successors: []
---
0x398 JUMPDEST
0x399 STOP
---
0x398: JUMPDEST 
0x399: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x39a
[0x39a:0x3a0]
---
Predecessors: [0xac]
Successors: [0x3a1, 0x3a2]
---
0x39a JUMPDEST
0x39b CALLVALUE
0x39c ISZERO
0x39d PUSH2 0x3a2
0x3a0 JUMPI
---
0x39a: JUMPDEST 
0x39b: V294 = CALLVALUE
0x39c: V295 = ISZERO V294
0x39d: V296 = 0x3a2
0x3a0: JUMPI 0x3a2 V295
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a1
[0x3a1:0x3a1]
---
Predecessors: [0x39a]
Successors: []
---
0x3a1 INVALID
---
0x3a1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a2
[0x3a2:0x3a9]
---
Predecessors: [0x39a]
Successors: [0xae7]
---
0x3a2 JUMPDEST
0x3a3 PUSH2 0x235
0x3a6 PUSH2 0xae7
0x3a9 JUMP
---
0x3a2: JUMPDEST 
0x3a3: V297 = 0x235
0x3a6: V298 = 0xae7
0x3a9: JUMP 0xae7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V10, 0x235]

================================

Block 0x3aa
[0x3aa:0x3bb]
---
Predecessors: []
Successors: []
---
0x3aa JUMPDEST
0x3ab PUSH1 0x40
0x3ad DUP1
0x3ae MLOAD
0x3af SWAP2
0x3b0 DUP3
0x3b1 MSTORE
0x3b2 MLOAD
0x3b3 SWAP1
0x3b4 DUP2
0x3b5 SWAP1
0x3b6 SUB
0x3b7 PUSH1 0x20
0x3b9 ADD
0x3ba SWAP1
0x3bb RETURN
---
0x3aa: JUMPDEST 
0x3ab: V299 = 0x40
0x3ae: V300 = M[0x40]
0x3b1: M[V300] = S0
0x3b2: V301 = M[0x40]
0x3b6: V302 = SUB V300 V301
0x3b7: V303 = 0x20
0x3b9: V304 = ADD 0x20 V302
0x3bb: RETURN V301 V304
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3bc
[0x3bc:0x3c2]
---
Predecessors: [0xb7]
Successors: [0x3c3, 0x3c4]
---
0x3bc JUMPDEST
0x3bd CALLVALUE
0x3be ISZERO
0x3bf PUSH2 0x3c4
0x3c2 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V305 = CALLVALUE
0x3be: V306 = ISZERO V305
0x3bf: V307 = 0x3c4
0x3c2: JUMPI 0x3c4 V306
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c3
[0x3c3:0x3c3]
---
Predecessors: [0x3bc]
Successors: []
---
0x3c3 INVALID
---
0x3c3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c4
[0x3c4:0x3d7]
---
Predecessors: [0x3bc]
Successors: [0xaf7]
---
0x3c4 JUMPDEST
0x3c5 PUSH2 0x235
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf SUB
0x3d0 PUSH1 0x4
0x3d2 CALLDATALOAD
0x3d3 AND
0x3d4 PUSH2 0xaf7
0x3d7 JUMP
---
0x3c4: JUMPDEST 
0x3c5: V308 = 0x235
0x3c8: V309 = 0x1
0x3ca: V310 = 0xa0
0x3cc: V311 = 0x2
0x3ce: V312 = EXP 0x2 0xa0
0x3cf: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V314 = 0x4
0x3d2: V315 = CALLDATALOAD 0x4
0x3d3: V316 = AND V315 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V317 = 0xaf7
0x3d7: JUMP 0xaf7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235, V316]
Exit stack: [V10, 0x235, V316]

================================

Block 0x3d8
[0x3d8:0x3e9]
---
Predecessors: []
Successors: []
---
0x3d8 JUMPDEST
0x3d9 PUSH1 0x40
0x3db DUP1
0x3dc MLOAD
0x3dd SWAP2
0x3de DUP3
0x3df MSTORE
0x3e0 MLOAD
0x3e1 SWAP1
0x3e2 DUP2
0x3e3 SWAP1
0x3e4 SUB
0x3e5 PUSH1 0x20
0x3e7 ADD
0x3e8 SWAP1
0x3e9 RETURN
---
0x3d8: JUMPDEST 
0x3d9: V318 = 0x40
0x3dc: V319 = M[0x40]
0x3df: M[V319] = S0
0x3e0: V320 = M[0x40]
0x3e4: V321 = SUB V319 V320
0x3e5: V322 = 0x20
0x3e7: V323 = ADD 0x20 V321
0x3e9: RETURN V320 V323
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ea
[0x3ea:0x3f0]
---
Predecessors: [0xc2]
Successors: [0x3f1, 0x3f2]
---
0x3ea JUMPDEST
0x3eb CALLVALUE
0x3ec ISZERO
0x3ed PUSH2 0x3f2
0x3f0 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V324 = CALLVALUE
0x3ec: V325 = ISZERO V324
0x3ed: V326 = 0x3f2
0x3f0: JUMPI 0x3f2 V325
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f1
[0x3f1:0x3f1]
---
Predecessors: [0x3ea]
Successors: []
---
0x3f1 INVALID
---
0x3f1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f2
[0x3f2:0x3f9]
---
Predecessors: [0x3ea]
Successors: [0xb16]
---
0x3f2 JUMPDEST
0x3f3 PUSH2 0x211
0x3f6 PUSH2 0xb16
0x3f9 JUMP
---
0x3f2: JUMPDEST 
0x3f3: V327 = 0x211
0x3f6: V328 = 0xb16
0x3f9: JUMP 0xb16
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x211]
Exit stack: [V10, 0x211]

================================

Block 0x3fa
[0x3fa:0x40d]
---
Predecessors: []
Successors: []
---
0x3fa JUMPDEST
0x3fb PUSH1 0x40
0x3fd DUP1
0x3fe MLOAD
0x3ff SWAP2
0x400 ISZERO
0x401 ISZERO
0x402 DUP3
0x403 MSTORE
0x404 MLOAD
0x405 SWAP1
0x406 DUP2
0x407 SWAP1
0x408 SUB
0x409 PUSH1 0x20
0x40b ADD
0x40c SWAP1
0x40d RETURN
---
0x3fa: JUMPDEST 
0x3fb: V329 = 0x40
0x3fe: V330 = M[0x40]
0x400: V331 = ISZERO S0
0x401: V332 = ISZERO V331
0x403: M[V330] = V332
0x404: V333 = M[0x40]
0x408: V334 = SUB V330 V333
0x409: V335 = 0x20
0x40b: V336 = ADD 0x20 V334
0x40d: RETURN V333 V336
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x40e
[0x40e:0x414]
---
Predecessors: [0xcd]
Successors: [0x415, 0x416]
---
0x40e JUMPDEST
0x40f CALLVALUE
0x410 ISZERO
0x411 PUSH2 0x416
0x414 JUMPI
---
0x40e: JUMPDEST 
0x40f: V337 = CALLVALUE
0x410: V338 = ISZERO V337
0x411: V339 = 0x416
0x414: JUMPI 0x416 V338
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x415
[0x415:0x415]
---
Predecessors: [0x40e]
Successors: []
---
0x415 INVALID
---
0x415: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x416
[0x416:0x41d]
---
Predecessors: [0x40e]
Successors: [0xb26]
---
0x416 JUMPDEST
0x417 PUSH2 0x235
0x41a PUSH2 0xb26
0x41d JUMP
---
0x416: JUMPDEST 
0x417: V340 = 0x235
0x41a: V341 = 0xb26
0x41d: JUMP 0xb26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V10, 0x235]

================================

Block 0x41e
[0x41e:0x42f]
---
Predecessors: []
Successors: []
---
0x41e JUMPDEST
0x41f PUSH1 0x40
0x421 DUP1
0x422 MLOAD
0x423 SWAP2
0x424 DUP3
0x425 MSTORE
0x426 MLOAD
0x427 SWAP1
0x428 DUP2
0x429 SWAP1
0x42a SUB
0x42b PUSH1 0x20
0x42d ADD
0x42e SWAP1
0x42f RETURN
---
0x41e: JUMPDEST 
0x41f: V342 = 0x40
0x422: V343 = M[0x40]
0x425: M[V343] = S0
0x426: V344 = M[0x40]
0x42a: V345 = SUB V343 V344
0x42b: V346 = 0x20
0x42d: V347 = ADD 0x20 V345
0x42f: RETURN V344 V347
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x430
[0x430:0x436]
---
Predecessors: [0xd8]
Successors: [0x437, 0x438]
---
0x430 JUMPDEST
0x431 CALLVALUE
0x432 ISZERO
0x433 PUSH2 0x438
0x436 JUMPI
---
0x430: JUMPDEST 
0x431: V348 = CALLVALUE
0x432: V349 = ISZERO V348
0x433: V350 = 0x438
0x436: JUMPI 0x438 V349
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x437
[0x437:0x437]
---
Predecessors: [0x430]
Successors: []
---
0x437 INVALID
---
0x437: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x438
[0x438:0x43f]
---
Predecessors: [0x430]
Successors: [0xb2c]
---
0x438 JUMPDEST
0x439 PUSH2 0x172
0x43c PUSH2 0xb2c
0x43f JUMP
---
0x438: JUMPDEST 
0x439: V351 = 0x172
0x43c: V352 = 0xb2c
0x43f: JUMP 0xb2c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V10, 0x172]

================================

Block 0x440
[0x440:0x465]
---
Predecessors: []
Successors: [0x1b8, 0x466]
---
0x440 JUMPDEST
0x441 PUSH1 0x40
0x443 DUP1
0x444 MLOAD
0x445 PUSH1 0x20
0x447 DUP1
0x448 DUP3
0x449 MSTORE
0x44a DUP4
0x44b MLOAD
0x44c DUP2
0x44d DUP4
0x44e ADD
0x44f MSTORE
0x450 DUP4
0x451 MLOAD
0x452 SWAP2
0x453 SWAP3
0x454 DUP4
0x455 SWAP3
0x456 SWAP1
0x457 DUP4
0x458 ADD
0x459 SWAP2
0x45a DUP6
0x45b ADD
0x45c SWAP1
0x45d DUP1
0x45e DUP4
0x45f DUP4
0x460 DUP3
0x461 ISZERO
0x462 PUSH2 0x1b8
0x465 JUMPI
---
0x440: JUMPDEST 
0x441: V353 = 0x40
0x444: V354 = M[0x40]
0x445: V355 = 0x20
0x449: M[V354] = 0x20
0x44b: V356 = M[S0]
0x44e: V357 = ADD V354 0x20
0x44f: M[V357] = V356
0x451: V358 = M[S0]
0x458: V359 = ADD V354 0x40
0x45b: V360 = ADD S0 0x20
0x461: V361 = ISZERO V358
0x462: V362 = 0x1b8
0x465: JUMPI 0x1b8 V361
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V354, V354, V359, V360, V358, V358, V359, V360]
Exit stack: [S0, V354, V354, V359, V360, V358, V358, V359, V360]

================================

Block 0x466
[0x466:0x473]
---
Predecessors: [0x440]
Successors: [0x1b8, 0x474]
---
0x466 JUMPDEST
0x467 DUP1
0x468 MLOAD
0x469 DUP3
0x46a MSTORE
0x46b PUSH1 0x20
0x46d DUP4
0x46e GT
0x46f ISZERO
0x470 PUSH2 0x1b8
0x473 JUMPI
---
0x466: JUMPDEST 
0x468: V363 = M[V360]
0x46a: M[V359] = V363
0x46b: V364 = 0x20
0x46e: V365 = GT V358 0x20
0x46f: V366 = ISZERO V365
0x470: V367 = 0x1b8
0x473: JUMPI 0x1b8 V366
---
Entry stack: [S8, V354, V354, V359, V360, V358, V358, V359, V360]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V354, V354, V359, V360, V358, V358, V359, V360]

================================

Block 0x474
[0x474:0x485]
---
Predecessors: [0x466]
Successors: [0x198]
---
0x474 PUSH1 0x1f
0x476 NOT
0x477 SWAP1
0x478 SWAP3
0x479 ADD
0x47a SWAP2
0x47b PUSH1 0x20
0x47d SWAP2
0x47e DUP3
0x47f ADD
0x480 SWAP2
0x481 ADD
0x482 PUSH2 0x198
0x485 JUMP
---
0x474: V368 = 0x1f
0x476: V369 = NOT 0x1f
0x479: V370 = ADD V358 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x47b: V371 = 0x20
0x47f: V372 = ADD 0x20 V359
0x481: V373 = ADD 0x20 V360
0x482: V374 = 0x198
0x485: JUMP 0x198
---
Entry stack: [S8, V354, V354, V359, V360, V358, V358, V359, V360]
Stack pops: 3
Stack additions: [V370, V372, V373]
Exit stack: [S8, V354, V354, V359, V360, V358, V370, V372, V373]

================================

Block 0x486
[0x486:0x498]
---
Predecessors: []
Successors: [0x1e4, 0x499]
---
0x486 JUMPDEST
0x487 POP
0x488 POP
0x489 POP
0x48a SWAP1
0x48b POP
0x48c SWAP1
0x48d DUP2
0x48e ADD
0x48f SWAP1
0x490 PUSH1 0x1f
0x492 AND
0x493 DUP1
0x494 ISZERO
0x495 PUSH2 0x1e4
0x498 JUMPI
---
0x486: JUMPDEST 
0x48e: V375 = ADD S3 S5
0x490: V376 = 0x1f
0x492: V377 = AND 0x1f S3
0x494: V378 = ISZERO V377
0x495: V379 = 0x1e4
0x498: JUMPI 0x1e4 V378
---
Entry stack: []
Stack pops: 6
Stack additions: [V375, V377]
Exit stack: [V375, V377]

================================

Block 0x499
[0x499:0x4b1]
---
Predecessors: [0x486]
Successors: [0x4b2]
---
0x499 DUP1
0x49a DUP3
0x49b SUB
0x49c DUP1
0x49d MLOAD
0x49e PUSH1 0x1
0x4a0 DUP4
0x4a1 PUSH1 0x20
0x4a3 SUB
0x4a4 PUSH2 0x100
0x4a7 EXP
0x4a8 SUB
0x4a9 NOT
0x4aa AND
0x4ab DUP2
0x4ac MSTORE
0x4ad PUSH1 0x20
0x4af ADD
0x4b0 SWAP2
0x4b1 POP
---
0x49b: V380 = SUB V375 V377
0x49d: V381 = M[V380]
0x49e: V382 = 0x1
0x4a1: V383 = 0x20
0x4a3: V384 = SUB 0x20 V377
0x4a4: V385 = 0x100
0x4a7: V386 = EXP 0x100 V384
0x4a8: V387 = SUB V386 0x1
0x4a9: V388 = NOT V387
0x4aa: V389 = AND V388 V381
0x4ac: M[V380] = V389
0x4ad: V390 = 0x20
0x4af: V391 = ADD 0x20 V380
---
Entry stack: [V375, V377]
Stack pops: 2
Stack additions: [V391, S0]
Exit stack: [V391, V377]

================================

Block 0x4b2
[0x4b2:0x4bf]
---
Predecessors: [0x499]
Successors: []
---
0x4b2 JUMPDEST
0x4b3 POP
0x4b4 SWAP3
0x4b5 POP
0x4b6 POP
0x4b7 POP
0x4b8 PUSH1 0x40
0x4ba MLOAD
0x4bb DUP1
0x4bc SWAP2
0x4bd SUB
0x4be SWAP1
0x4bf RETURN
---
0x4b2: JUMPDEST 
0x4b8: V392 = 0x40
0x4ba: V393 = M[0x40]
0x4bd: V394 = SUB V391 V393
0x4bf: RETURN V393 V394
---
Entry stack: [V391, V377]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x4c0
[0x4c0:0x4c6]
---
Predecessors: [0xe3]
Successors: [0x4c7, 0x4c8]
---
0x4c0 JUMPDEST
0x4c1 CALLVALUE
0x4c2 ISZERO
0x4c3 PUSH2 0x4c8
0x4c6 JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V395 = CALLVALUE
0x4c2: V396 = ISZERO V395
0x4c3: V397 = 0x4c8
0x4c6: JUMPI 0x4c8 V396
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c7
[0x4c7:0x4c7]
---
Predecessors: [0x4c0]
Successors: []
---
0x4c7 INVALID
---
0x4c7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c8
[0x4c8:0x4cf]
---
Predecessors: [0x4c0]
Successors: [0xb63]
---
0x4c8 JUMPDEST
0x4c9 PUSH2 0x146
0x4cc PUSH2 0xb63
0x4cf JUMP
---
0x4c8: JUMPDEST 
0x4c9: V398 = 0x146
0x4cc: V399 = 0xb63
0x4cf: JUMP 0xb63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V10, 0x146]

================================

Block 0x4d0
[0x4d0:0x4eb]
---
Predecessors: []
Successors: []
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x40
0x4d3 DUP1
0x4d4 MLOAD
0x4d5 PUSH1 0x1
0x4d7 PUSH1 0xa0
0x4d9 PUSH1 0x2
0x4db EXP
0x4dc SUB
0x4dd SWAP1
0x4de SWAP3
0x4df AND
0x4e0 DUP3
0x4e1 MSTORE
0x4e2 MLOAD
0x4e3 SWAP1
0x4e4 DUP2
0x4e5 SWAP1
0x4e6 SUB
0x4e7 PUSH1 0x20
0x4e9 ADD
0x4ea SWAP1
0x4eb RETURN
---
0x4d0: JUMPDEST 
0x4d1: V400 = 0x40
0x4d4: V401 = M[0x40]
0x4d5: V402 = 0x1
0x4d7: V403 = 0xa0
0x4d9: V404 = 0x2
0x4db: V405 = EXP 0x2 0xa0
0x4dc: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V407 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: M[V401] = V407
0x4e2: V408 = M[0x40]
0x4e6: V409 = SUB V401 V408
0x4e7: V410 = 0x20
0x4e9: V411 = ADD 0x20 V409
0x4eb: RETURN V408 V411
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4ec
[0x4ec:0x4f2]
---
Predecessors: [0xee]
Successors: [0x4f3, 0x4f4]
---
0x4ec JUMPDEST
0x4ed CALLVALUE
0x4ee ISZERO
0x4ef PUSH2 0x4f4
0x4f2 JUMPI
---
0x4ec: JUMPDEST 
0x4ed: V412 = CALLVALUE
0x4ee: V413 = ISZERO V412
0x4ef: V414 = 0x4f4
0x4f2: JUMPI 0x4f4 V413
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f3
[0x4f3:0x4f3]
---
Predecessors: [0x4ec]
Successors: []
---
0x4f3 INVALID
---
0x4f3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f4
[0x4f4:0x50a]
---
Predecessors: [0x4ec]
Successors: [0xb72]
---
0x4f4 JUMPDEST
0x4f5 PUSH2 0x211
0x4f8 PUSH1 0x1
0x4fa PUSH1 0xa0
0x4fc PUSH1 0x2
0x4fe EXP
0x4ff SUB
0x500 PUSH1 0x4
0x502 CALLDATALOAD
0x503 AND
0x504 PUSH1 0x24
0x506 CALLDATALOAD
0x507 PUSH2 0xb72
0x50a JUMP
---
0x4f4: JUMPDEST 
0x4f5: V415 = 0x211
0x4f8: V416 = 0x1
0x4fa: V417 = 0xa0
0x4fc: V418 = 0x2
0x4fe: V419 = EXP 0x2 0xa0
0x4ff: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V421 = 0x4
0x502: V422 = CALLDATALOAD 0x4
0x503: V423 = AND V422 0xffffffffffffffffffffffffffffffffffffffff
0x504: V424 = 0x24
0x506: V425 = CALLDATALOAD 0x24
0x507: V426 = 0xb72
0x50a: JUMP 0xb72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x211, V423, V425]
Exit stack: [V10, 0x211, V423, V425]

================================

Block 0x50b
[0x50b:0x51e]
---
Predecessors: []
Successors: []
---
0x50b JUMPDEST
0x50c PUSH1 0x40
0x50e DUP1
0x50f MLOAD
0x510 SWAP2
0x511 ISZERO
0x512 ISZERO
0x513 DUP3
0x514 MSTORE
0x515 MLOAD
0x516 SWAP1
0x517 DUP2
0x518 SWAP1
0x519 SUB
0x51a PUSH1 0x20
0x51c ADD
0x51d SWAP1
0x51e RETURN
---
0x50b: JUMPDEST 
0x50c: V427 = 0x40
0x50f: V428 = M[0x40]
0x511: V429 = ISZERO S0
0x512: V430 = ISZERO V429
0x514: M[V428] = V430
0x515: V431 = M[0x40]
0x519: V432 = SUB V428 V431
0x51a: V433 = 0x20
0x51c: V434 = ADD 0x20 V432
0x51e: RETURN V431 V434
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x51f
[0x51f:0x526]
---
Predecessors: [0xf9]
Successors: [0x5a1]
---
0x51f JUMPDEST
0x520 PUSH2 0x134
0x523 PUSH2 0x5a1
0x526 JUMP
---
0x51f: JUMPDEST 
0x520: V435 = 0x134
0x523: V436 = 0x5a1
0x526: JUMP 0x5a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x134]
Exit stack: [V10, 0x134]

================================

Block 0x527
[0x527:0x52f]
---
Predecessors: []
Successors: [0x24f, 0x530]
---
0x527 JUMPDEST
0x528 STOP
0x529 JUMPDEST
0x52a CALLVALUE
0x52b ISZERO
0x52c PUSH2 0x24f
0x52f JUMPI
---
0x527: JUMPDEST 
0x528: STOP 
0x529: JUMPDEST 
0x52a: V437 = CALLVALUE
0x52b: V438 = ISZERO V437
0x52c: V439 = 0x24f
0x52f: JUMPI 0x24f V438
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x530
[0x530:0x538]
---
Predecessors: [0x527]
Successors: [0x738]
---
0x530 INVALID
0x531 JUMPDEST
0x532 PUSH2 0x235
0x535 PUSH2 0x738
0x538 JUMP
---
0x530: INVALID 
0x531: JUMPDEST 
0x532: V440 = 0x235
0x535: V441 = 0x738
0x538: JUMP 0x738
---
Entry stack: []
Stack pops: 0
Stack additions: [0x235]
Exit stack: []

================================

Block 0x539
[0x539:0x54a]
---
Predecessors: []
Successors: []
---
0x539 JUMPDEST
0x53a PUSH1 0x40
0x53c DUP1
0x53d MLOAD
0x53e SWAP2
0x53f DUP3
0x540 MSTORE
0x541 MLOAD
0x542 SWAP1
0x543 DUP2
0x544 SWAP1
0x545 SUB
0x546 PUSH1 0x20
0x548 ADD
0x549 SWAP1
0x54a RETURN
---
0x539: JUMPDEST 
0x53a: V442 = 0x40
0x53d: V443 = M[0x40]
0x540: M[V443] = S0
0x541: V444 = M[0x40]
0x545: V445 = SUB V443 V444
0x546: V446 = 0x20
0x548: V447 = ADD 0x20 V445
0x54a: RETURN V444 V447
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x54b
[0x54b:0x551]
---
Predecessors: [0x10f]
Successors: [0x552, 0x553]
---
0x54b JUMPDEST
0x54c CALLVALUE
0x54d ISZERO
0x54e PUSH2 0x553
0x551 JUMPI
---
0x54b: JUMPDEST 
0x54c: V448 = CALLVALUE
0x54d: V449 = ISZERO V448
0x54e: V450 = 0x553
0x551: JUMPI 0x553 V449
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x552
[0x552:0x552]
---
Predecessors: [0x54b]
Successors: []
---
0x552 INVALID
---
0x552: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x553
[0x553:0x55a]
---
Predecessors: [0x54b]
Successors: [0xc2e]
---
0x553 JUMPDEST
0x554 PUSH2 0x235
0x557 PUSH2 0xc2e
0x55a JUMP
---
0x553: JUMPDEST 
0x554: V451 = 0x235
0x557: V452 = 0xc2e
0x55a: JUMP 0xc2e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V10, 0x235]

================================

Block 0x55b
[0x55b:0x56c]
---
Predecessors: []
Successors: []
---
0x55b JUMPDEST
0x55c PUSH1 0x40
0x55e DUP1
0x55f MLOAD
0x560 SWAP2
0x561 DUP3
0x562 MSTORE
0x563 MLOAD
0x564 SWAP1
0x565 DUP2
0x566 SWAP1
0x567 SUB
0x568 PUSH1 0x20
0x56a ADD
0x56b SWAP1
0x56c RETURN
---
0x55b: JUMPDEST 
0x55c: V453 = 0x40
0x55f: V454 = M[0x40]
0x562: M[V454] = S0
0x563: V455 = M[0x40]
0x567: V456 = SUB V454 V455
0x568: V457 = 0x20
0x56a: V458 = ADD 0x20 V456
0x56c: RETURN V455 V458
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x56d
[0x56d:0x573]
---
Predecessors: [0x11a]
Successors: [0x574, 0x575]
---
0x56d JUMPDEST
0x56e CALLVALUE
0x56f ISZERO
0x570 PUSH2 0x575
0x573 JUMPI
---
0x56d: JUMPDEST 
0x56e: V459 = CALLVALUE
0x56f: V460 = ISZERO V459
0x570: V461 = 0x575
0x573: JUMPI 0x575 V460
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x574
[0x574:0x574]
---
Predecessors: [0x56d]
Successors: []
---
0x574 INVALID
---
0x574: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x575
[0x575:0x58e]
---
Predecessors: [0x56d]
Successors: [0xc34]
---
0x575 JUMPDEST
0x576 PUSH2 0x235
0x579 PUSH1 0x1
0x57b PUSH1 0xa0
0x57d PUSH1 0x2
0x57f EXP
0x580 SUB
0x581 PUSH1 0x4
0x583 CALLDATALOAD
0x584 DUP2
0x585 AND
0x586 SWAP1
0x587 PUSH1 0x24
0x589 CALLDATALOAD
0x58a AND
0x58b PUSH2 0xc34
0x58e JUMP
---
0x575: JUMPDEST 
0x576: V462 = 0x235
0x579: V463 = 0x1
0x57b: V464 = 0xa0
0x57d: V465 = 0x2
0x57f: V466 = EXP 0x2 0xa0
0x580: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x581: V468 = 0x4
0x583: V469 = CALLDATALOAD 0x4
0x585: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x587: V471 = 0x24
0x589: V472 = CALLDATALOAD 0x24
0x58a: V473 = AND V472 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V474 = 0xc34
0x58e: JUMP 0xc34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235, V470, V473]
Exit stack: [V10, 0x235, V470, V473]

================================

Block 0x58f
[0x58f:0x5a0]
---
Predecessors: []
Successors: []
---
0x58f JUMPDEST
0x590 PUSH1 0x40
0x592 DUP1
0x593 MLOAD
0x594 SWAP2
0x595 DUP3
0x596 MSTORE
0x597 MLOAD
0x598 SWAP1
0x599 DUP2
0x59a SWAP1
0x59b SUB
0x59c PUSH1 0x20
0x59e ADD
0x59f SWAP1
0x5a0 RETURN
---
0x58f: JUMPDEST 
0x590: V475 = 0x40
0x593: V476 = M[0x40]
0x596: M[V476] = S0
0x597: V477 = M[0x40]
0x59b: V478 = SUB V476 V477
0x59c: V479 = 0x20
0x59e: V480 = ADD 0x20 V478
0x5a0: RETURN V477 V480
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5a1
[0x5a1:0x5b8]
---
Predecessors: [0x129, 0x51f]
Successors: [0x5b9, 0x5be]
---
0x5a1 JUMPDEST
0x5a2 PUSH1 0x5
0x5a4 SLOAD
0x5a5 PUSH1 0x0
0x5a7 SWAP1
0x5a8 DUP2
0x5a9 SWAP1
0x5aa PUSH1 0xa0
0x5ac PUSH1 0x2
0x5ae EXP
0x5af SWAP1
0x5b0 DIV
0x5b1 PUSH1 0xff
0x5b3 AND
0x5b4 ISZERO
0x5b5 PUSH2 0x5be
0x5b8 JUMPI
---
0x5a1: JUMPDEST 
0x5a2: V481 = 0x5
0x5a4: V482 = S[0x5]
0x5a5: V483 = 0x0
0x5aa: V484 = 0xa0
0x5ac: V485 = 0x2
0x5ae: V486 = EXP 0x2 0xa0
0x5b0: V487 = DIV V482 0x10000000000000000000000000000000000000000
0x5b1: V488 = 0xff
0x5b3: V489 = AND 0xff V487
0x5b4: V490 = ISZERO V489
0x5b5: V491 = 0x5be
0x5b8: JUMPI 0x5be V490
---
Entry stack: [V10, S1, {0x131, 0x134}]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, S1, {0x131, 0x134}, 0x0, 0x0]

================================

Block 0x5b9
[0x5b9:0x5bd]
---
Predecessors: [0x5a1]
Successors: []
---
0x5b9 PUSH1 0x0
0x5bb PUSH1 0x0
0x5bd REVERT
---
0x5b9: V492 = 0x0
0x5bb: V493 = 0x0
0x5bd: REVERT 0x0 0x0
---
Entry stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]

================================

Block 0x5be
[0x5be:0x5c8]
---
Predecessors: [0x5a1]
Successors: [0x5c9, 0x5ce]
---
0x5be JUMPDEST
0x5bf PUSH1 0x6
0x5c1 SLOAD
0x5c2 NUMBER
0x5c3 LT
0x5c4 ISZERO
0x5c5 PUSH2 0x5ce
0x5c8 JUMPI
---
0x5be: JUMPDEST 
0x5bf: V494 = 0x6
0x5c1: V495 = S[0x6]
0x5c2: V496 = NUMBER
0x5c3: V497 = LT V496 V495
0x5c4: V498 = ISZERO V497
0x5c5: V499 = 0x5ce
0x5c8: JUMPI 0x5ce V498
---
Entry stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]

================================

Block 0x5c9
[0x5c9:0x5cd]
---
Predecessors: [0x5be]
Successors: []
---
0x5c9 PUSH1 0x0
0x5cb PUSH1 0x0
0x5cd REVERT
---
0x5c9: V500 = 0x0
0x5cb: V501 = 0x0
0x5cd: REVERT 0x0 0x0
---
Entry stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]

================================

Block 0x5ce
[0x5ce:0x5d8]
---
Predecessors: [0x5be]
Successors: [0x5d9, 0x5de]
---
0x5ce JUMPDEST
0x5cf PUSH1 0x7
0x5d1 SLOAD
0x5d2 NUMBER
0x5d3 GT
0x5d4 ISZERO
0x5d5 PUSH2 0x5de
0x5d8 JUMPI
---
0x5ce: JUMPDEST 
0x5cf: V502 = 0x7
0x5d1: V503 = S[0x7]
0x5d2: V504 = NUMBER
0x5d3: V505 = GT V504 V503
0x5d4: V506 = ISZERO V505
0x5d5: V507 = 0x5de
0x5d8: JUMPI 0x5de V506
---
Entry stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]

================================

Block 0x5d9
[0x5d9:0x5dd]
---
Predecessors: [0x5ce]
Successors: []
---
0x5d9 PUSH1 0x0
0x5db PUSH1 0x0
0x5dd REVERT
---
0x5d9: V508 = 0x0
0x5db: V509 = 0x0
0x5dd: REVERT 0x0 0x0
---
Entry stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]

================================

Block 0x5de
[0x5de:0x5e5]
---
Predecessors: [0x5ce]
Successors: [0x5e6, 0x5eb]
---
0x5de JUMPDEST
0x5df CALLVALUE
0x5e0 ISZERO
0x5e1 ISZERO
0x5e2 PUSH2 0x5eb
0x5e5 JUMPI
---
0x5de: JUMPDEST 
0x5df: V510 = CALLVALUE
0x5e0: V511 = ISZERO V510
0x5e1: V512 = ISZERO V511
0x5e2: V513 = 0x5eb
0x5e5: JUMPI 0x5eb V512
---
Entry stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]

================================

Block 0x5e6
[0x5e6:0x5ea]
---
Predecessors: [0x5de]
Successors: []
---
0x5e6 PUSH1 0x0
0x5e8 PUSH1 0x0
0x5ea REVERT
---
0x5e6: V514 = 0x0
0x5e8: V515 = 0x0
0x5ea: REVERT 0x0 0x0
---
Entry stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]

================================

Block 0x5eb
[0x5eb:0x5f7]
---
Predecessors: [0x5de]
Successors: [0xc61]
---
0x5eb JUMPDEST
0x5ec PUSH2 0x5f8
0x5ef CALLVALUE
0x5f0 PUSH3 0xf4240
0x5f4 PUSH2 0xc61
0x5f7 JUMP
---
0x5eb: JUMPDEST 
0x5ec: V516 = 0x5f8
0x5ef: V517 = CALLVALUE
0x5f0: V518 = 0xf4240
0x5f4: V519 = 0xc61
0x5f7: JUMP 0xc61
---
Entry stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x5f8, V517, 0xf4240]
Exit stack: [V10, S3, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240]

================================

Block 0x5f8
[0x5f8:0x605]
---
Predecessors: [0xc89]
Successors: [0xc90]
---
0x5f8 JUMPDEST
0x5f9 SWAP2
0x5fa POP
0x5fb PUSH2 0x606
0x5fe PUSH1 0x0
0x600 SLOAD
0x601 DUP4
0x602 PUSH2 0xc90
0x605 JUMP
---
0x5f8: JUMPDEST 
0x5fb: V520 = 0x606
0x5fe: V521 = 0x0
0x600: V522 = S[0x0]
0x602: V523 = 0xc90
0x605: JUMP 0xc90
---
Entry stack: [V10, S4, {0x131, 0x134}, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x606, V522, S0]
Exit stack: [V10, S4, {0x131, 0x134}, S0, 0x0, 0x606, V522, S0]

================================

Block 0x606
[0x606:0x61d]
---
Predecessors: [0xc89]
Successors: [0x61e, 0x623]
---
0x606 JUMPDEST
0x607 SWAP1
0x608 POP
0x609 PUSH12 0x33b2e3c9fd0803ce8000000
0x616 DUP2
0x617 SWAP1
0x618 LT
0x619 ISZERO
0x61a PUSH2 0x623
0x61d JUMPI
---
0x606: JUMPDEST 
0x609: V524 = 0x33b2e3c9fd0803ce8000000
0x618: V525 = LT 0x33b2e3c9fd0803ce8000000 S0
0x619: V526 = ISZERO V525
0x61a: V527 = 0x623
0x61d: JUMPI 0x623 V526
---
Entry stack: [V10, S4, {0x131, 0x134}, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S4, {0x131, 0x134}, S2, S0]

================================

Block 0x61e
[0x61e:0x622]
---
Predecessors: [0x606]
Successors: []
---
0x61e PUSH1 0x0
0x620 PUSH1 0x0
0x622 REVERT
---
0x61e: V528 = 0x0
0x620: V529 = 0x0
0x622: REVERT 0x0 0x0
---
Entry stack: [V10, S3, {0x131, 0x134}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x131, 0x134}, S1, S0]

================================

Block 0x623
[0x623:0x67c]
---
Predecessors: [0x606]
Successors: [0x67d]
---
0x623 JUMPDEST
0x624 PUSH1 0x0
0x626 DUP2
0x627 DUP2
0x628 SSTORE
0x629 PUSH1 0x1
0x62b PUSH1 0xa0
0x62d PUSH1 0x2
0x62f EXP
0x630 SUB
0x631 CALLER
0x632 AND
0x633 DUP1
0x634 DUP3
0x635 MSTORE
0x636 PUSH1 0x1
0x638 PUSH1 0x20
0x63a SWAP1
0x63b DUP2
0x63c MSTORE
0x63d PUSH1 0x40
0x63f SWAP3
0x640 DUP4
0x641 SWAP1
0x642 SHA3
0x643 DUP1
0x644 SLOAD
0x645 DUP7
0x646 ADD
0x647 SWAP1
0x648 SSTORE
0x649 DUP3
0x64a MLOAD
0x64b DUP6
0x64c DUP2
0x64d MSTORE
0x64e SWAP3
0x64f MLOAD
0x650 SWAP2
0x651 SWAP3
0x652 PUSH32 0xb33527d2e0d30b7aece2c5e82927985866c1b75173d671c14f4457bf67aa6910
0x673 SWAP3
0x674 SWAP1
0x675 DUP2
0x676 SWAP1
0x677 SUB
0x678 SWAP1
0x679 SWAP2
0x67a ADD
0x67b SWAP1
0x67c LOG2
---
0x623: JUMPDEST 
0x624: V530 = 0x0
0x628: S[0x0] = S0
0x629: V531 = 0x1
0x62b: V532 = 0xa0
0x62d: V533 = 0x2
0x62f: V534 = EXP 0x2 0xa0
0x630: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x631: V536 = CALLER
0x632: V537 = AND V536 0xffffffffffffffffffffffffffffffffffffffff
0x635: M[0x0] = V537
0x636: V538 = 0x1
0x638: V539 = 0x20
0x63c: M[0x20] = 0x1
0x63d: V540 = 0x40
0x642: V541 = SHA3 0x0 0x40
0x644: V542 = S[V541]
0x646: V543 = ADD S1 V542
0x648: S[V541] = V543
0x64a: V544 = M[0x40]
0x64d: M[V544] = S1
0x64f: V545 = M[0x40]
0x652: V546 = 0xb33527d2e0d30b7aece2c5e82927985866c1b75173d671c14f4457bf67aa6910
0x677: V547 = SUB V544 V545
0x67a: V548 = ADD 0x20 V547
0x67c: LOG V545 V548 0xb33527d2e0d30b7aece2c5e82927985866c1b75173d671c14f4457bf67aa6910 V537
---
Entry stack: [V10, S3, {0x131, 0x134}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S3, {0x131, 0x134}, S1, S0]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: [0x623, 0xa6d]
Successors: [0x131, 0x134]
---
0x67d JUMPDEST
0x67e POP
0x67f POP
0x680 JUMP
---
0x67d: JUMPDEST 
0x680: JUMP {0x131, 0x134}
---
Entry stack: [V10, S3, {0x131, 0x134}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Block 0x681
[0x681:0x68f]
---
Predecessors: [0x13e]
Successors: [0x146]
---
0x681 JUMPDEST
0x682 PUSH1 0x5
0x684 SLOAD
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d AND
0x68e DUP2
0x68f JUMP
---
0x681: JUMPDEST 
0x682: V549 = 0x5
0x684: V550 = S[0x5]
0x685: V551 = 0x1
0x687: V552 = 0xa0
0x689: V553 = 0x2
0x68b: V554 = EXP 0x2 0xa0
0x68c: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68d: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x68f: JUMP 0x146
---
Entry stack: [V10, 0x146]
Stack pops: 1
Stack additions: [S0, V556]
Exit stack: [V10, 0x146, V556]

================================

Block 0x690
[0x690:0x6c6]
---
Predecessors: [0x16a]
Successors: [0x172]
---
0x690 JUMPDEST
0x691 PUSH1 0x40
0x693 DUP1
0x694 MLOAD
0x695 DUP1
0x696 DUP3
0x697 ADD
0x698 SWAP1
0x699 SWAP2
0x69a MSTORE
0x69b PUSH1 0xc
0x69d DUP2
0x69e MSTORE
0x69f PUSH32 0x54657374204d7920436f696e0000000000000000000000000000000000000000
0x6c0 PUSH1 0x20
0x6c2 DUP3
0x6c3 ADD
0x6c4 MSTORE
0x6c5 DUP2
0x6c6 JUMP
---
0x690: JUMPDEST 
0x691: V557 = 0x40
0x694: V558 = M[0x40]
0x697: V559 = ADD 0x40 V558
0x69a: M[0x40] = V559
0x69b: V560 = 0xc
0x69e: M[V558] = 0xc
0x69f: V561 = 0x54657374204d7920436f696e0000000000000000000000000000000000000000
0x6c0: V562 = 0x20
0x6c3: V563 = ADD V558 0x20
0x6c4: M[V563] = 0x54657374204d7920436f696e0000000000000000000000000000000000000000
0x6c6: JUMP 0x172
---
Entry stack: [V10, 0x172]
Stack pops: 1
Stack additions: [S0, V558]
Exit stack: [V10, 0x172, V558]

================================

Block 0x6c7
[0x6c7:0x72b]
---
Predecessors: [0x1fa]
Successors: [0x72c]
---
0x6c7 JUMPDEST
0x6c8 PUSH1 0x1
0x6ca PUSH1 0xa0
0x6cc PUSH1 0x2
0x6ce EXP
0x6cf SUB
0x6d0 CALLER
0x6d1 DUP2
0x6d2 AND
0x6d3 PUSH1 0x0
0x6d5 DUP2
0x6d6 DUP2
0x6d7 MSTORE
0x6d8 PUSH1 0x2
0x6da PUSH1 0x20
0x6dc SWAP1
0x6dd DUP2
0x6de MSTORE
0x6df PUSH1 0x40
0x6e1 DUP1
0x6e2 DUP4
0x6e3 SHA3
0x6e4 SWAP5
0x6e5 DUP8
0x6e6 AND
0x6e7 DUP1
0x6e8 DUP5
0x6e9 MSTORE
0x6ea SWAP5
0x6eb DUP3
0x6ec MSTORE
0x6ed DUP1
0x6ee DUP4
0x6ef SHA3
0x6f0 DUP7
0x6f1 SWAP1
0x6f2 SSTORE
0x6f3 DUP1
0x6f4 MLOAD
0x6f5 DUP7
0x6f6 DUP2
0x6f7 MSTORE
0x6f8 SWAP1
0x6f9 MLOAD
0x6fa SWAP3
0x6fb SWAP5
0x6fc SWAP4
0x6fd SWAP3
0x6fe PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x71f SWAP3
0x720 SWAP2
0x721 DUP2
0x722 SWAP1
0x723 SUB
0x724 SWAP1
0x725 SWAP2
0x726 ADD
0x727 SWAP1
0x728 LOG3
0x729 POP
0x72a PUSH1 0x1
---
0x6c7: JUMPDEST 
0x6c8: V564 = 0x1
0x6ca: V565 = 0xa0
0x6cc: V566 = 0x2
0x6ce: V567 = EXP 0x2 0xa0
0x6cf: V568 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d0: V569 = CALLER
0x6d2: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x6d3: V571 = 0x0
0x6d7: M[0x0] = V570
0x6d8: V572 = 0x2
0x6da: V573 = 0x20
0x6de: M[0x20] = 0x2
0x6df: V574 = 0x40
0x6e3: V575 = SHA3 0x0 0x40
0x6e6: V576 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x6e9: M[0x0] = V576
0x6ec: M[0x20] = V575
0x6ef: V577 = SHA3 0x0 0x40
0x6f2: S[V577] = V157
0x6f4: V578 = M[0x40]
0x6f7: M[V578] = V157
0x6f9: V579 = M[0x40]
0x6fe: V580 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x723: V581 = SUB V578 V579
0x726: V582 = ADD 0x20 V581
0x728: LOG V579 V582 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V570 V576
0x72a: V583 = 0x1
---
Entry stack: [V10, 0x211, V155, V157]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x211, V155, V157, 0x1]

================================

Block 0x72c
[0x72c:0x731]
---
Predecessors: [0x6c7, 0xba1, 0xc0f]
Successors: [0x211]
---
0x72c JUMPDEST
0x72d SWAP3
0x72e SWAP2
0x72f POP
0x730 POP
0x731 JUMP
---
0x72c: JUMPDEST 
0x731: JUMP 0x211
---
Entry stack: [V10, 0x211, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x732
[0x732:0x737]
---
Predecessors: [0x22d]
Successors: [0x235]
---
0x732 JUMPDEST
0x733 PUSH1 0x0
0x735 SLOAD
0x736 DUP2
0x737 JUMP
---
0x732: JUMPDEST 
0x733: V584 = 0x0
0x735: V585 = S[0x0]
0x737: JUMP 0x235
---
Entry stack: [V10, 0x235]
Stack pops: 1
Stack additions: [S0, V585]
Exit stack: [V10, 0x235, V585]

================================

Block 0x738
[0x738:0x747]
---
Predecessors: [0x24f, 0x530]
Successors: [0x235]
---
0x738 JUMPDEST
0x739 PUSH12 0x24306c4097859c43c000000
0x746 DUP2
0x747 JUMP
---
0x738: JUMPDEST 
0x739: V586 = 0x24306c4097859c43c000000
0x747: JUMP 0x235
---
Entry stack: [V10, 0x235]
Stack pops: 1
Stack additions: [S0, 0x24306c4097859c43c000000]
Exit stack: [V10, 0x235, 0x24306c4097859c43c000000]

================================

Block 0x748
[0x748:0x76b]
---
Predecessors: [0x271]
Successors: [0x76c, 0x798]
---
0x748 JUMPDEST
0x749 PUSH1 0x1
0x74b PUSH1 0xa0
0x74d PUSH1 0x2
0x74f EXP
0x750 SUB
0x751 DUP4
0x752 AND
0x753 PUSH1 0x0
0x755 SWAP1
0x756 DUP2
0x757 MSTORE
0x758 PUSH1 0x1
0x75a PUSH1 0x20
0x75c MSTORE
0x75d PUSH1 0x40
0x75f DUP2
0x760 SHA3
0x761 SLOAD
0x762 DUP3
0x763 SWAP1
0x764 LT
0x765 DUP1
0x766 ISZERO
0x767 SWAP1
0x768 PUSH2 0x798
0x76b JUMPI
---
0x748: JUMPDEST 
0x749: V587 = 0x1
0x74b: V588 = 0xa0
0x74d: V589 = 0x2
0x74f: V590 = EXP 0x2 0xa0
0x750: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x752: V592 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x753: V593 = 0x0
0x757: M[0x0] = V592
0x758: V594 = 0x1
0x75a: V595 = 0x20
0x75c: M[0x20] = 0x1
0x75d: V596 = 0x40
0x760: V597 = SHA3 0x0 0x40
0x761: V598 = S[V597]
0x764: V599 = LT V598 V205
0x766: V600 = ISZERO V599
0x768: V601 = 0x798
0x76b: JUMPI 0x798 V599
---
Entry stack: [V10, 0x211, V200, V203, V205]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V600]
Exit stack: [V10, 0x211, V200, V203, V205, 0x0, V600]

================================

Block 0x76c
[0x76c:0x797]
---
Predecessors: [0x748]
Successors: [0x798]
---
0x76c POP
0x76d PUSH1 0x1
0x76f PUSH1 0xa0
0x771 PUSH1 0x2
0x773 EXP
0x774 SUB
0x775 DUP1
0x776 DUP6
0x777 AND
0x778 PUSH1 0x0
0x77a SWAP1
0x77b DUP2
0x77c MSTORE
0x77d PUSH1 0x2
0x77f PUSH1 0x20
0x781 SWAP1
0x782 DUP2
0x783 MSTORE
0x784 PUSH1 0x40
0x786 DUP1
0x787 DUP4
0x788 SHA3
0x789 CALLER
0x78a SWAP1
0x78b SWAP5
0x78c AND
0x78d DUP4
0x78e MSTORE
0x78f SWAP3
0x790 SWAP1
0x791 MSTORE
0x792 SHA3
0x793 SLOAD
0x794 DUP3
0x795 SWAP1
0x796 LT
0x797 ISZERO
---
0x76d: V602 = 0x1
0x76f: V603 = 0xa0
0x771: V604 = 0x2
0x773: V605 = EXP 0x2 0xa0
0x774: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x777: V607 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x778: V608 = 0x0
0x77c: M[0x0] = V607
0x77d: V609 = 0x2
0x77f: V610 = 0x20
0x783: M[0x20] = 0x2
0x784: V611 = 0x40
0x788: V612 = SHA3 0x0 0x40
0x789: V613 = CALLER
0x78c: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0x78e: M[0x0] = V614
0x791: M[0x20] = V612
0x792: V615 = SHA3 0x0 0x40
0x793: V616 = S[V615]
0x796: V617 = LT V616 V205
0x797: V618 = ISZERO V617
---
Entry stack: [V10, 0x211, V200, V203, V205, 0x0, V600]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V618]
Exit stack: [V10, 0x211, V200, V203, V205, 0x0, V618]

================================

Block 0x798
[0x798:0x79e]
---
Predecessors: [0x748, 0x76c]
Successors: [0x79f, 0x7a4]
---
0x798 JUMPDEST
0x799 DUP1
0x79a ISZERO
0x79b PUSH2 0x7a4
0x79e JUMPI
---
0x798: JUMPDEST 
0x79a: V619 = ISZERO S0
0x79b: V620 = 0x7a4
0x79e: JUMPI 0x7a4 V619
---
Entry stack: [V10, 0x211, V200, V203, V205, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x211, V200, V203, V205, 0x0, S0]

================================

Block 0x79f
[0x79f:0x7a3]
---
Predecessors: [0x798]
Successors: [0x7a4]
---
0x79f POP
0x7a0 PUSH1 0x0
0x7a2 DUP3
0x7a3 GT
---
0x7a0: V621 = 0x0
0x7a3: V622 = GT V205 0x0
---
Entry stack: [V10, 0x211, V200, V203, V205, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V622]
Exit stack: [V10, 0x211, V200, V203, V205, 0x0, V622]

================================

Block 0x7a4
[0x7a4:0x7a9]
---
Predecessors: [0x798, 0x79f]
Successors: [0x7aa, 0x832]
---
0x7a4 JUMPDEST
0x7a5 ISZERO
0x7a6 PUSH2 0x832
0x7a9 JUMPI
---
0x7a4: JUMPDEST 
0x7a5: V623 = ISZERO S0
0x7a6: V624 = 0x832
0x7a9: JUMPI 0x832 V623
---
Entry stack: [V10, 0x211, V200, V203, V205, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x211, V200, V203, V205, 0x0]

================================

Block 0x7aa
[0x7aa:0x831]
---
Predecessors: [0x7a4]
Successors: [0x836]
---
0x7aa PUSH1 0x1
0x7ac PUSH1 0xa0
0x7ae PUSH1 0x2
0x7b0 EXP
0x7b1 SUB
0x7b2 DUP1
0x7b3 DUP5
0x7b4 AND
0x7b5 PUSH1 0x0
0x7b7 DUP2
0x7b8 DUP2
0x7b9 MSTORE
0x7ba PUSH1 0x1
0x7bc PUSH1 0x20
0x7be SWAP1
0x7bf DUP2
0x7c0 MSTORE
0x7c1 PUSH1 0x40
0x7c3 DUP1
0x7c4 DUP4
0x7c5 SHA3
0x7c6 DUP1
0x7c7 SLOAD
0x7c8 DUP9
0x7c9 ADD
0x7ca SWAP1
0x7cb SSTORE
0x7cc DUP9
0x7cd DUP6
0x7ce AND
0x7cf DUP1
0x7d0 DUP5
0x7d1 MSTORE
0x7d2 DUP2
0x7d3 DUP5
0x7d4 SHA3
0x7d5 DUP1
0x7d6 SLOAD
0x7d7 DUP10
0x7d8 SWAP1
0x7d9 SUB
0x7da SWAP1
0x7db SSTORE
0x7dc PUSH1 0x2
0x7de DUP4
0x7df MSTORE
0x7e0 DUP2
0x7e1 DUP5
0x7e2 SHA3
0x7e3 CALLER
0x7e4 SWAP1
0x7e5 SWAP7
0x7e6 AND
0x7e7 DUP5
0x7e8 MSTORE
0x7e9 SWAP5
0x7ea DUP3
0x7eb MSTORE
0x7ec SWAP2
0x7ed DUP3
0x7ee SWAP1
0x7ef SHA3
0x7f0 DUP1
0x7f1 SLOAD
0x7f2 DUP8
0x7f3 SWAP1
0x7f4 SUB
0x7f5 SWAP1
0x7f6 SSTORE
0x7f7 DUP2
0x7f8 MLOAD
0x7f9 DUP7
0x7fa DUP2
0x7fb MSTORE
0x7fc SWAP2
0x7fd MLOAD
0x7fe SWAP3
0x7ff SWAP4
0x800 SWAP3
0x801 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x822 SWAP3
0x823 DUP2
0x824 SWAP1
0x825 SUB
0x826 SWAP1
0x827 SWAP2
0x828 ADD
0x829 SWAP1
0x82a LOG3
0x82b POP
0x82c PUSH1 0x1
0x82e PUSH2 0x836
0x831 JUMP
---
0x7aa: V625 = 0x1
0x7ac: V626 = 0xa0
0x7ae: V627 = 0x2
0x7b0: V628 = EXP 0x2 0xa0
0x7b1: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b4: V630 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x7b5: V631 = 0x0
0x7b9: M[0x0] = V630
0x7ba: V632 = 0x1
0x7bc: V633 = 0x20
0x7c0: M[0x20] = 0x1
0x7c1: V634 = 0x40
0x7c5: V635 = SHA3 0x0 0x40
0x7c7: V636 = S[V635]
0x7c9: V637 = ADD V205 V636
0x7cb: S[V635] = V637
0x7ce: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x7d1: M[0x0] = V638
0x7d4: V639 = SHA3 0x0 0x40
0x7d6: V640 = S[V639]
0x7d9: V641 = SUB V640 V205
0x7db: S[V639] = V641
0x7dc: V642 = 0x2
0x7df: M[0x20] = 0x2
0x7e2: V643 = SHA3 0x0 0x40
0x7e3: V644 = CALLER
0x7e6: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x7e8: M[0x0] = V645
0x7eb: M[0x20] = V643
0x7ef: V646 = SHA3 0x0 0x40
0x7f1: V647 = S[V646]
0x7f4: V648 = SUB V647 V205
0x7f6: S[V646] = V648
0x7f8: V649 = M[0x40]
0x7fb: M[V649] = V205
0x7fd: V650 = M[0x40]
0x801: V651 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x825: V652 = SUB V649 V650
0x828: V653 = ADD 0x20 V652
0x82a: LOG V650 V653 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V638 V630
0x82c: V654 = 0x1
0x82e: V655 = 0x836
0x831: JUMP 0x836
---
Entry stack: [V10, 0x211, V200, V203, V205, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x211, V200, V203, V205, 0x1]

================================

Block 0x832
[0x832:0x835]
---
Predecessors: [0x7a4]
Successors: [0x836]
---
0x832 JUMPDEST
0x833 POP
0x834 PUSH1 0x0
---
0x832: JUMPDEST 
0x834: V656 = 0x0
---
Entry stack: [V10, 0x211, V200, V203, V205, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x211, V200, V203, V205, 0x0]

================================

Block 0x836
[0x836:0x836]
---
Predecessors: [0x7aa, 0x832]
Successors: [0x837]
---
0x836 JUMPDEST
---
0x836: JUMPDEST 
---
Entry stack: [V10, 0x211, V200, V203, V205, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, V200, V203, V205, {0x0, 0x1}]

================================

Block 0x837
[0x837:0x83d]
---
Predecessors: [0x836]
Successors: [0x211]
---
0x837 JUMPDEST
0x838 SWAP4
0x839 SWAP3
0x83a POP
0x83b POP
0x83c POP
0x83d JUMP
---
0x837: JUMPDEST 
0x83d: JUMP 0x211
---
Entry stack: [V10, 0x211, V200, V203, V205, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x83e
[0x83e:0x842]
---
Predecessors: [0x2aa]
Successors: [0x235]
---
0x83e JUMPDEST
0x83f PUSH1 0x12
0x841 DUP2
0x842 JUMP
---
0x83e: JUMPDEST 
0x83f: V657 = 0x12
0x842: JUMP 0x235
---
Entry stack: [V10, 0x235]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V10, 0x235, 0x12]

================================

Block 0x843
[0x843:0x849]
---
Predecessors: [0x2cc]
Successors: [0x235]
---
0x843 JUMPDEST
0x844 PUSH3 0xf4240
0x848 DUP2
0x849 JUMP
---
0x843: JUMPDEST 
0x844: V658 = 0xf4240
0x849: JUMP 0x235
---
Entry stack: [V10, 0x235]
Stack pops: 1
Stack additions: [S0, 0xf4240]
Exit stack: [V10, 0x235, 0xf4240]

================================

Block 0x84a
[0x84a:0x85c]
---
Predecessors: [0x2ee]
Successors: [0x85d, 0x862]
---
0x84a JUMPDEST
0x84b PUSH1 0x5
0x84d SLOAD
0x84e PUSH1 0xa0
0x850 PUSH1 0x2
0x852 EXP
0x853 SWAP1
0x854 DIV
0x855 PUSH1 0xff
0x857 AND
0x858 ISZERO
0x859 PUSH2 0x862
0x85c JUMPI
---
0x84a: JUMPDEST 
0x84b: V659 = 0x5
0x84d: V660 = S[0x5]
0x84e: V661 = 0xa0
0x850: V662 = 0x2
0x852: V663 = EXP 0x2 0xa0
0x854: V664 = DIV V660 0x10000000000000000000000000000000000000000
0x855: V665 = 0xff
0x857: V666 = AND 0xff V664
0x858: V667 = ISZERO V666
0x859: V668 = 0x862
0x85c: JUMPI 0x862 V667
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x85d
[0x85d:0x861]
---
Predecessors: [0x84a]
Successors: []
---
0x85d PUSH1 0x0
0x85f PUSH1 0x0
0x861 REVERT
---
0x85d: V669 = 0x0
0x85f: V670 = 0x0
0x861: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x862
[0x862:0x878]
---
Predecessors: [0x84a]
Successors: [0x879, 0x87e]
---
0x862 JUMPDEST
0x863 PUSH1 0x4
0x865 SLOAD
0x866 CALLER
0x867 PUSH1 0x1
0x869 PUSH1 0xa0
0x86b PUSH1 0x2
0x86d EXP
0x86e SUB
0x86f SWAP1
0x870 DUP2
0x871 AND
0x872 SWAP2
0x873 AND
0x874 EQ
0x875 PUSH2 0x87e
0x878 JUMPI
---
0x862: JUMPDEST 
0x863: V671 = 0x4
0x865: V672 = S[0x4]
0x866: V673 = CALLER
0x867: V674 = 0x1
0x869: V675 = 0xa0
0x86b: V676 = 0x2
0x86d: V677 = EXP 0x2 0xa0
0x86e: V678 = SUB 0x10000000000000000000000000000000000000000 0x1
0x871: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0x873: V680 = AND V672 0xffffffffffffffffffffffffffffffffffffffff
0x874: V681 = EQ V680 V679
0x875: V682 = 0x87e
0x878: JUMPI 0x87e V681
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x879
[0x879:0x87d]
---
Predecessors: [0x862]
Successors: []
---
0x879 PUSH1 0x0
0x87b PUSH1 0x0
0x87d REVERT
---
0x879: V683 = 0x0
0x87b: V684 = 0x0
0x87d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x87e
[0x87e:0x895]
---
Predecessors: [0x862]
Successors: [0x896, 0x89b]
---
0x87e JUMPDEST
0x87f PUSH1 0x0
0x881 SLOAD
0x882 PUSH12 0x24306c4097859c43c000000
0x88f SWAP1
0x890 LT
0x891 ISZERO
0x892 PUSH2 0x89b
0x895 JUMPI
---
0x87e: JUMPDEST 
0x87f: V685 = 0x0
0x881: V686 = S[0x0]
0x882: V687 = 0x24306c4097859c43c000000
0x890: V688 = LT V686 0x24306c4097859c43c000000
0x891: V689 = ISZERO V688
0x892: V690 = 0x89b
0x895: JUMPI 0x89b V689
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x896
[0x896:0x89a]
---
Predecessors: [0x87e]
Successors: []
---
0x896 PUSH1 0x0
0x898 PUSH1 0x0
0x89a REVERT
---
0x896: V691 = 0x0
0x898: V692 = 0x0
0x89a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x89b
[0x89b:0x8a7]
---
Predecessors: [0x87e]
Successors: [0x8a8, 0x8bb]
---
0x89b JUMPDEST
0x89c PUSH1 0x7
0x89e SLOAD
0x89f NUMBER
0x8a0 GT
0x8a1 ISZERO
0x8a2 DUP1
0x8a3 ISZERO
0x8a4 PUSH2 0x8bb
0x8a7 JUMPI
---
0x89b: JUMPDEST 
0x89c: V693 = 0x7
0x89e: V694 = S[0x7]
0x89f: V695 = NUMBER
0x8a0: V696 = GT V695 V694
0x8a1: V697 = ISZERO V696
0x8a3: V698 = ISZERO V697
0x8a4: V699 = 0x8bb
0x8a7: JUMPI 0x8bb V698
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: [V697]
Exit stack: [V10, 0x134, V697]

================================

Block 0x8a8
[0x8a8:0x8ba]
---
Predecessors: [0x89b]
Successors: [0x8bb]
---
0x8a8 POP
0x8a9 PUSH1 0x0
0x8ab SLOAD
0x8ac PUSH12 0x33b2e3c9fd0803ce8000000
0x8b9 EQ
0x8ba ISZERO
---
0x8a9: V700 = 0x0
0x8ab: V701 = S[0x0]
0x8ac: V702 = 0x33b2e3c9fd0803ce8000000
0x8b9: V703 = EQ 0x33b2e3c9fd0803ce8000000 V701
0x8ba: V704 = ISZERO V703
---
Entry stack: [V10, 0x134, V697]
Stack pops: 1
Stack additions: [V704]
Exit stack: [V10, 0x134, V704]

================================

Block 0x8bb
[0x8bb:0x8c0]
---
Predecessors: [0x89b, 0x8a8]
Successors: [0x8c1, 0x8c6]
---
0x8bb JUMPDEST
0x8bc ISZERO
0x8bd PUSH2 0x8c6
0x8c0 JUMPI
---
0x8bb: JUMPDEST 
0x8bc: V705 = ISZERO S0
0x8bd: V706 = 0x8c6
0x8c0: JUMPI 0x8c6 V705
---
Entry stack: [V10, 0x134, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x8c1
[0x8c1:0x8c5]
---
Predecessors: [0x8bb]
Successors: []
---
0x8c1 PUSH1 0x0
0x8c3 PUSH1 0x0
0x8c5 REVERT
---
0x8c1: V707 = 0x0
0x8c3: V708 = 0x0
0x8c5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x8c6
[0x8c6:0x91a]
---
Predecessors: [0x8bb]
Successors: [0x131, 0x91b]
---
0x8c6 JUMPDEST
0x8c7 PUSH1 0x5
0x8c9 DUP1
0x8ca SLOAD
0x8cb PUSH21 0xff0000000000000000000000000000000000000000
0x8e1 NOT
0x8e2 AND
0x8e3 PUSH1 0xa0
0x8e5 PUSH1 0x2
0x8e7 EXP
0x8e8 OR
0x8e9 SWAP1
0x8ea SSTORE
0x8eb PUSH1 0x4
0x8ed SLOAD
0x8ee PUSH1 0x40
0x8f0 MLOAD
0x8f1 PUSH1 0x1
0x8f3 PUSH1 0xa0
0x8f5 PUSH1 0x2
0x8f7 EXP
0x8f8 SUB
0x8f9 SWAP2
0x8fa DUP3
0x8fb AND
0x8fc SWAP2
0x8fd ADDRESS
0x8fe AND
0x8ff BALANCE
0x900 DUP1
0x901 ISZERO
0x902 PUSH2 0x8fc
0x905 MUL
0x906 SWAP2
0x907 PUSH1 0x0
0x909 DUP2
0x90a DUP2
0x90b DUP2
0x90c DUP6
0x90d DUP9
0x90e DUP9
0x90f CALL
0x910 SWAP4
0x911 POP
0x912 POP
0x913 POP
0x914 POP
0x915 ISZERO
0x916 ISZERO
0x917 PUSH2 0x131
0x91a JUMPI
---
0x8c6: JUMPDEST 
0x8c7: V709 = 0x5
0x8ca: V710 = S[0x5]
0x8cb: V711 = 0xff0000000000000000000000000000000000000000
0x8e1: V712 = NOT 0xff0000000000000000000000000000000000000000
0x8e2: V713 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V710
0x8e3: V714 = 0xa0
0x8e5: V715 = 0x2
0x8e7: V716 = EXP 0x2 0xa0
0x8e8: V717 = OR 0x10000000000000000000000000000000000000000 V713
0x8ea: S[0x5] = V717
0x8eb: V718 = 0x4
0x8ed: V719 = S[0x4]
0x8ee: V720 = 0x40
0x8f0: V721 = M[0x40]
0x8f1: V722 = 0x1
0x8f3: V723 = 0xa0
0x8f5: V724 = 0x2
0x8f7: V725 = EXP 0x2 0xa0
0x8f8: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fb: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V719
0x8fd: V728 = ADDRESS
0x8fe: V729 = AND V728 0xffffffffffffffffffffffffffffffffffffffff
0x8ff: V730 = BALANCE V729
0x901: V731 = ISZERO V730
0x902: V732 = 0x8fc
0x905: V733 = MUL 0x8fc V731
0x907: V734 = 0x0
0x90f: V735 = CALL V733 V727 V730 V721 0x0 V721 0x0
0x915: V736 = ISZERO V735
0x916: V737 = ISZERO V736
0x917: V738 = 0x131
0x91a: JUMPI 0x131 V737
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x91b
[0x91b:0x91f]
---
Predecessors: [0x8c6]
Successors: []
---
0x91b PUSH1 0x0
0x91d PUSH1 0x0
0x91f REVERT
---
0x91b: V739 = 0x0
0x91d: V740 = 0x0
0x91f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134]

================================

Block 0x920
[0x920:0x920]
---
Predecessors: []
Successors: [0x921]
---
0x920 JUMPDEST
---
0x920: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x921
[0x921:0x922]
---
Predecessors: [0x920]
Successors: []
Has unresolved jump.
---
0x921 JUMPDEST
0x922 JUMP
---
0x921: JUMPDEST 
0x922: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x923
[0x923:0x962]
---
Predecessors: [0x300]
Successors: [0x963, 0x9a9]
---
0x923 JUMPDEST
0x924 PUSH1 0x3
0x926 DUP1
0x927 SLOAD
0x928 PUSH1 0x40
0x92a DUP1
0x92b MLOAD
0x92c PUSH1 0x20
0x92e PUSH1 0x2
0x930 PUSH1 0x1
0x932 DUP6
0x933 AND
0x934 ISZERO
0x935 PUSH2 0x100
0x938 MUL
0x939 PUSH1 0x0
0x93b NOT
0x93c ADD
0x93d SWAP1
0x93e SWAP5
0x93f AND
0x940 SWAP4
0x941 SWAP1
0x942 SWAP4
0x943 DIV
0x944 PUSH1 0x1f
0x946 DUP2
0x947 ADD
0x948 DUP5
0x949 SWAP1
0x94a DIV
0x94b DUP5
0x94c MUL
0x94d DUP3
0x94e ADD
0x94f DUP5
0x950 ADD
0x951 SWAP1
0x952 SWAP3
0x953 MSTORE
0x954 DUP2
0x955 DUP2
0x956 MSTORE
0x957 SWAP3
0x958 SWAP2
0x959 DUP4
0x95a ADD
0x95b DUP3
0x95c DUP3
0x95d DUP1
0x95e ISZERO
0x95f PUSH2 0x9a9
0x962 JUMPI
---
0x923: JUMPDEST 
0x924: V741 = 0x3
0x927: V742 = S[0x3]
0x928: V743 = 0x40
0x92b: V744 = M[0x40]
0x92c: V745 = 0x20
0x92e: V746 = 0x2
0x930: V747 = 0x1
0x933: V748 = AND V742 0x1
0x934: V749 = ISZERO V748
0x935: V750 = 0x100
0x938: V751 = MUL 0x100 V749
0x939: V752 = 0x0
0x93b: V753 = NOT 0x0
0x93c: V754 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V751
0x93f: V755 = AND V742 V754
0x943: V756 = DIV V755 0x2
0x944: V757 = 0x1f
0x947: V758 = ADD V756 0x1f
0x94a: V759 = DIV V758 0x20
0x94c: V760 = MUL 0x20 V759
0x94e: V761 = ADD V744 V760
0x950: V762 = ADD 0x20 V761
0x953: M[0x40] = V762
0x956: M[V744] = V756
0x95a: V763 = ADD V744 0x20
0x95e: V764 = ISZERO V756
0x95f: V765 = 0x9a9
0x962: JUMPI 0x9a9 V764
---
Entry stack: [V10, 0x172]
Stack pops: 0
Stack additions: [V744, 0x3, V756, V763, 0x3, V756]
Exit stack: [V10, 0x172, V744, 0x3, V756, V763, 0x3, V756]

================================

Block 0x963
[0x963:0x96a]
---
Predecessors: [0x923]
Successors: [0x96b, 0x97e]
---
0x963 DUP1
0x964 PUSH1 0x1f
0x966 LT
0x967 PUSH2 0x97e
0x96a JUMPI
---
0x964: V766 = 0x1f
0x966: V767 = LT 0x1f V756
0x967: V768 = 0x97e
0x96a: JUMPI 0x97e V767
---
Entry stack: [V10, 0x172, V744, 0x3, V756, V763, 0x3, V756]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x172, V744, 0x3, V756, V763, 0x3, V756]

================================

Block 0x96b
[0x96b:0x97d]
---
Predecessors: [0x963]
Successors: [0x9a9]
---
0x96b PUSH2 0x100
0x96e DUP1
0x96f DUP4
0x970 SLOAD
0x971 DIV
0x972 MUL
0x973 DUP4
0x974 MSTORE
0x975 SWAP2
0x976 PUSH1 0x20
0x978 ADD
0x979 SWAP2
0x97a PUSH2 0x9a9
0x97d JUMP
---
0x96b: V769 = 0x100
0x970: V770 = S[0x3]
0x971: V771 = DIV V770 0x100
0x972: V772 = MUL V771 0x100
0x974: M[V763] = V772
0x976: V773 = 0x20
0x978: V774 = ADD 0x20 V763
0x97a: V775 = 0x9a9
0x97d: JUMP 0x9a9
---
Entry stack: [V10, 0x172, V744, 0x3, V756, V763, 0x3, V756]
Stack pops: 3
Stack additions: [V774, S1, S0]
Exit stack: [V10, 0x172, V744, 0x3, V756, V774, 0x3, V756]

================================

Block 0x97e
[0x97e:0x98b]
---
Predecessors: [0x963]
Successors: [0x98c]
---
0x97e JUMPDEST
0x97f DUP3
0x980 ADD
0x981 SWAP2
0x982 SWAP1
0x983 PUSH1 0x0
0x985 MSTORE
0x986 PUSH1 0x20
0x988 PUSH1 0x0
0x98a SHA3
0x98b SWAP1
---
0x97e: JUMPDEST 
0x980: V776 = ADD V763 V756
0x983: V777 = 0x0
0x985: M[0x0] = 0x3
0x986: V778 = 0x20
0x988: V779 = 0x0
0x98a: V780 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x172, V744, 0x3, V756, V763, 0x3, V756]
Stack pops: 3
Stack additions: [V776, V780, S2]
Exit stack: [V10, 0x172, V744, 0x3, V756, V776, V780, V763]

================================

Block 0x98c
[0x98c:0x99f]
---
Predecessors: [0x97e, 0x98c]
Successors: [0x98c, 0x9a0]
---
0x98c JUMPDEST
0x98d DUP2
0x98e SLOAD
0x98f DUP2
0x990 MSTORE
0x991 SWAP1
0x992 PUSH1 0x1
0x994 ADD
0x995 SWAP1
0x996 PUSH1 0x20
0x998 ADD
0x999 DUP1
0x99a DUP4
0x99b GT
0x99c PUSH2 0x98c
0x99f JUMPI
---
0x98c: JUMPDEST 
0x98e: V781 = S[S1]
0x990: M[S0] = V781
0x992: V782 = 0x1
0x994: V783 = ADD 0x1 S1
0x996: V784 = 0x20
0x998: V785 = ADD 0x20 S0
0x99b: V786 = GT V776 V785
0x99c: V787 = 0x98c
0x99f: JUMPI 0x98c V786
---
Entry stack: [V10, 0x172, V744, 0x3, V756, V776, S1, S0]
Stack pops: 3
Stack additions: [S2, V783, V785]
Exit stack: [V10, 0x172, V744, 0x3, V756, V776, V783, V785]

================================

Block 0x9a0
[0x9a0:0x9a8]
---
Predecessors: [0x98c]
Successors: [0x9a9]
---
0x9a0 DUP3
0x9a1 SWAP1
0x9a2 SUB
0x9a3 PUSH1 0x1f
0x9a5 AND
0x9a6 DUP3
0x9a7 ADD
0x9a8 SWAP2
---
0x9a2: V788 = SUB V785 V776
0x9a3: V789 = 0x1f
0x9a5: V790 = AND 0x1f V788
0x9a7: V791 = ADD V776 V790
---
Entry stack: [V10, 0x172, V744, 0x3, V756, V776, V783, V785]
Stack pops: 3
Stack additions: [V791, S1, S2]
Exit stack: [V10, 0x172, V744, 0x3, V756, V791, V783, V776]

================================

Block 0x9a9
[0x9a9:0x9b0]
---
Predecessors: [0x923, 0x96b, 0x9a0]
Successors: [0x172]
---
0x9a9 JUMPDEST
0x9aa POP
0x9ab POP
0x9ac POP
0x9ad POP
0x9ae POP
0x9af DUP2
0x9b0 JUMP
---
0x9a9: JUMPDEST 
0x9b0: JUMP 0x172
---
Entry stack: [V10, 0x172, V744, 0x3, V756, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x172, V744]

================================

Block 0x9b1
[0x9b1:0x9c8]
---
Predecessors: [0x390]
Successors: [0x9c9, 0x9ce]
---
0x9b1 JUMPDEST
0x9b2 PUSH1 0x5
0x9b4 SLOAD
0x9b5 PUSH1 0x0
0x9b7 SWAP1
0x9b8 DUP2
0x9b9 SWAP1
0x9ba PUSH1 0xa0
0x9bc PUSH1 0x2
0x9be EXP
0x9bf SWAP1
0x9c0 DIV
0x9c1 PUSH1 0xff
0x9c3 AND
0x9c4 ISZERO
0x9c5 PUSH2 0x9ce
0x9c8 JUMPI
---
0x9b1: JUMPDEST 
0x9b2: V792 = 0x5
0x9b4: V793 = S[0x5]
0x9b5: V794 = 0x0
0x9ba: V795 = 0xa0
0x9bc: V796 = 0x2
0x9be: V797 = EXP 0x2 0xa0
0x9c0: V798 = DIV V793 0x10000000000000000000000000000000000000000
0x9c1: V799 = 0xff
0x9c3: V800 = AND 0xff V798
0x9c4: V801 = ISZERO V800
0x9c5: V802 = 0x9ce
0x9c8: JUMPI 0x9ce V801
---
Entry stack: [V10, 0x134]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x134, 0x0, 0x0]

================================

Block 0x9c9
[0x9c9:0x9cd]
---
Predecessors: [0x9b1]
Successors: []
---
0x9c9 PUSH1 0x0
0x9cb PUSH1 0x0
0x9cd REVERT
---
0x9c9: V803 = 0x0
0x9cb: V804 = 0x0
0x9cd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, 0x0, 0x0]

================================

Block 0x9ce
[0x9ce:0x9d7]
---
Predecessors: [0x9b1]
Successors: [0x9d8, 0x9dd]
---
0x9ce JUMPDEST
0x9cf PUSH1 0x7
0x9d1 SLOAD
0x9d2 NUMBER
0x9d3 GT
0x9d4 PUSH2 0x9dd
0x9d7 JUMPI
---
0x9ce: JUMPDEST 
0x9cf: V805 = 0x7
0x9d1: V806 = S[0x7]
0x9d2: V807 = NUMBER
0x9d3: V808 = GT V807 V806
0x9d4: V809 = 0x9dd
0x9d7: JUMPI 0x9dd V808
---
Entry stack: [V10, 0x134, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, 0x0, 0x0]

================================

Block 0x9d8
[0x9d8:0x9dc]
---
Predecessors: [0x9ce]
Successors: []
---
0x9d8 PUSH1 0x0
0x9da PUSH1 0x0
0x9dc REVERT
---
0x9d8: V810 = 0x0
0x9da: V811 = 0x0
0x9dc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, 0x0, 0x0]

================================

Block 0x9dd
[0x9dd:0x9f3]
---
Predecessors: [0x9ce]
Successors: [0x9f4, 0x9f9]
---
0x9dd JUMPDEST
0x9de PUSH1 0x0
0x9e0 SLOAD
0x9e1 PUSH12 0x24306c4097859c43c000000
0x9ee SWAP1
0x9ef LT
0x9f0 PUSH2 0x9f9
0x9f3 JUMPI
---
0x9dd: JUMPDEST 
0x9de: V812 = 0x0
0x9e0: V813 = S[0x0]
0x9e1: V814 = 0x24306c4097859c43c000000
0x9ef: V815 = LT V813 0x24306c4097859c43c000000
0x9f0: V816 = 0x9f9
0x9f3: JUMPI 0x9f9 V815
---
Entry stack: [V10, 0x134, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, 0x0, 0x0]

================================

Block 0x9f4
[0x9f4:0x9f8]
---
Predecessors: [0x9dd]
Successors: []
---
0x9f4 PUSH1 0x0
0x9f6 PUSH1 0x0
0x9f8 REVERT
---
0x9f4: V817 = 0x0
0x9f6: V818 = 0x0
0x9f8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, 0x0, 0x0]

================================

Block 0x9f9
[0x9f9:0xa10]
---
Predecessors: [0x9dd]
Successors: [0xa11, 0xa16]
---
0x9f9 JUMPDEST
0x9fa PUSH1 0x5
0x9fc SLOAD
0x9fd CALLER
0x9fe PUSH1 0x1
0xa00 PUSH1 0xa0
0xa02 PUSH1 0x2
0xa04 EXP
0xa05 SUB
0xa06 SWAP1
0xa07 DUP2
0xa08 AND
0xa09 SWAP2
0xa0a AND
0xa0b EQ
0xa0c ISZERO
0xa0d PUSH2 0xa16
0xa10 JUMPI
---
0x9f9: JUMPDEST 
0x9fa: V819 = 0x5
0x9fc: V820 = S[0x5]
0x9fd: V821 = CALLER
0x9fe: V822 = 0x1
0xa00: V823 = 0xa0
0xa02: V824 = 0x2
0xa04: V825 = EXP 0x2 0xa0
0xa05: V826 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa08: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0xa0a: V828 = AND V820 0xffffffffffffffffffffffffffffffffffffffff
0xa0b: V829 = EQ V828 V827
0xa0c: V830 = ISZERO V829
0xa0d: V831 = 0xa16
0xa10: JUMPI 0xa16 V830
---
Entry stack: [V10, 0x134, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, 0x0, 0x0]

================================

Block 0xa11
[0xa11:0xa15]
---
Predecessors: [0x9f9]
Successors: []
---
0xa11 PUSH1 0x0
0xa13 PUSH1 0x0
0xa15 REVERT
---
0xa11: V832 = 0x0
0xa13: V833 = 0x0
0xa15: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, 0x0, 0x0]

================================

Block 0xa16
[0xa16:0xa38]
---
Predecessors: [0x9f9]
Successors: [0xa39, 0xa3e]
---
0xa16 JUMPDEST
0xa17 PUSH1 0x1
0xa19 PUSH1 0xa0
0xa1b PUSH1 0x2
0xa1d EXP
0xa1e SUB
0xa1f CALLER
0xa20 AND
0xa21 PUSH1 0x0
0xa23 SWAP1
0xa24 DUP2
0xa25 MSTORE
0xa26 PUSH1 0x1
0xa28 PUSH1 0x20
0xa2a MSTORE
0xa2b PUSH1 0x40
0xa2d SWAP1
0xa2e SHA3
0xa2f SLOAD
0xa30 SWAP2
0xa31 POP
0xa32 DUP2
0xa33 ISZERO
0xa34 ISZERO
0xa35 PUSH2 0xa3e
0xa38 JUMPI
---
0xa16: JUMPDEST 
0xa17: V834 = 0x1
0xa19: V835 = 0xa0
0xa1b: V836 = 0x2
0xa1d: V837 = EXP 0x2 0xa0
0xa1e: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1f: V839 = CALLER
0xa20: V840 = AND V839 0xffffffffffffffffffffffffffffffffffffffff
0xa21: V841 = 0x0
0xa25: M[0x0] = V840
0xa26: V842 = 0x1
0xa28: V843 = 0x20
0xa2a: M[0x20] = 0x1
0xa2b: V844 = 0x40
0xa2e: V845 = SHA3 0x0 0x40
0xa2f: V846 = S[V845]
0xa33: V847 = ISZERO V846
0xa34: V848 = ISZERO V847
0xa35: V849 = 0xa3e
0xa38: JUMPI 0xa3e V848
---
Entry stack: [V10, 0x134, 0x0, 0x0]
Stack pops: 2
Stack additions: [V846, S0]
Exit stack: [V10, 0x134, V846, 0x0]

================================

Block 0xa39
[0xa39:0xa3d]
---
Predecessors: [0xa16]
Successors: []
---
0xa39 PUSH1 0x0
0xa3b PUSH1 0x0
0xa3d REVERT
---
0xa39: V850 = 0x0
0xa3b: V851 = 0x0
0xa3d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134, V846, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, V846, 0x0]

================================

Block 0xa3e
[0xa3e:0xa63]
---
Predecessors: [0xa16]
Successors: [0xcb8]
---
0xa3e JUMPDEST
0xa3f PUSH1 0x1
0xa41 PUSH1 0xa0
0xa43 PUSH1 0x2
0xa45 EXP
0xa46 SUB
0xa47 CALLER
0xa48 AND
0xa49 PUSH1 0x0
0xa4b SWAP1
0xa4c DUP2
0xa4d MSTORE
0xa4e PUSH1 0x1
0xa50 PUSH1 0x20
0xa52 MSTORE
0xa53 PUSH1 0x40
0xa55 DUP2
0xa56 SHA3
0xa57 DUP2
0xa58 SWAP1
0xa59 SSTORE
0xa5a SLOAD
0xa5b PUSH2 0xa64
0xa5e SWAP1
0xa5f DUP4
0xa60 PUSH2 0xcb8
0xa63 JUMP
---
0xa3e: JUMPDEST 
0xa3f: V852 = 0x1
0xa41: V853 = 0xa0
0xa43: V854 = 0x2
0xa45: V855 = EXP 0x2 0xa0
0xa46: V856 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa47: V857 = CALLER
0xa48: V858 = AND V857 0xffffffffffffffffffffffffffffffffffffffff
0xa49: V859 = 0x0
0xa4d: M[0x0] = V858
0xa4e: V860 = 0x1
0xa50: V861 = 0x20
0xa52: M[0x20] = 0x1
0xa53: V862 = 0x40
0xa56: V863 = SHA3 0x0 0x40
0xa59: S[V863] = 0x0
0xa5a: V864 = S[0x0]
0xa5b: V865 = 0xa64
0xa60: V866 = 0xcb8
0xa63: JUMP 0xcb8
---
Entry stack: [V10, 0x134, V846, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xa64, V864, S1]
Exit stack: [V10, 0x134, V846, 0x0, 0xa64, V864, V846]

================================

Block 0xa64
[0xa64:0xa6c]
---
Predecessors: [0xccc]
Successors: [0xa6d]
---
0xa64 JUMPDEST
0xa65 PUSH1 0x0
0xa67 SSTORE
0xa68 PUSH3 0xf4240
0xa6c DUP3
---
0xa64: JUMPDEST 
0xa65: V867 = 0x0
0xa67: S[0x0] = V1032
0xa68: V868 = 0xf4240
---
Entry stack: [V10, 0x134, V846, 0x0, V1032]
Stack pops: 3
Stack additions: [S2, S1, 0xf4240, S2]
Exit stack: [V10, 0x134, V846, 0x0, 0xf4240, V846]

================================

Block 0xa6d
[0xa6d:0xadc]
---
Predecessors: [0xa64]
Successors: [0x67d, 0xadd]
---
0xa6d JUMPDEST
0xa6e DIV
0xa6f SWAP1
0xa70 POP
0xa71 CALLER
0xa72 PUSH1 0x1
0xa74 PUSH1 0xa0
0xa76 PUSH1 0x2
0xa78 EXP
0xa79 SUB
0xa7a AND
0xa7b PUSH32 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7
0xa9c DUP3
0xa9d PUSH1 0x40
0xa9f MLOAD
0xaa0 DUP1
0xaa1 DUP3
0xaa2 DUP2
0xaa3 MSTORE
0xaa4 PUSH1 0x20
0xaa6 ADD
0xaa7 SWAP2
0xaa8 POP
0xaa9 POP
0xaaa PUSH1 0x40
0xaac MLOAD
0xaad DUP1
0xaae SWAP2
0xaaf SUB
0xab0 SWAP1
0xab1 LOG2
0xab2 PUSH1 0x40
0xab4 MLOAD
0xab5 PUSH1 0x1
0xab7 PUSH1 0xa0
0xab9 PUSH1 0x2
0xabb EXP
0xabc SUB
0xabd CALLER
0xabe AND
0xabf SWAP1
0xac0 DUP3
0xac1 ISZERO
0xac2 PUSH2 0x8fc
0xac5 MUL
0xac6 SWAP1
0xac7 DUP4
0xac8 SWAP1
0xac9 PUSH1 0x0
0xacb DUP2
0xacc DUP2
0xacd DUP2
0xace DUP6
0xacf DUP9
0xad0 DUP9
0xad1 CALL
0xad2 SWAP4
0xad3 POP
0xad4 POP
0xad5 POP
0xad6 POP
0xad7 ISZERO
0xad8 ISZERO
0xad9 PUSH2 0x67d
0xadc JUMPI
---
0xa6d: JUMPDEST 
0xa6e: V869 = DIV V846 0xf4240
0xa71: V870 = CALLER
0xa72: V871 = 0x1
0xa74: V872 = 0xa0
0xa76: V873 = 0x2
0xa78: V874 = EXP 0x2 0xa0
0xa79: V875 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7a: V876 = AND 0xffffffffffffffffffffffffffffffffffffffff V870
0xa7b: V877 = 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7
0xa9d: V878 = 0x40
0xa9f: V879 = M[0x40]
0xaa3: M[V879] = V869
0xaa4: V880 = 0x20
0xaa6: V881 = ADD 0x20 V879
0xaaa: V882 = 0x40
0xaac: V883 = M[0x40]
0xaaf: V884 = SUB V881 V883
0xab1: LOG V883 V884 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7 V876
0xab2: V885 = 0x40
0xab4: V886 = M[0x40]
0xab5: V887 = 0x1
0xab7: V888 = 0xa0
0xab9: V889 = 0x2
0xabb: V890 = EXP 0x2 0xa0
0xabc: V891 = SUB 0x10000000000000000000000000000000000000000 0x1
0xabd: V892 = CALLER
0xabe: V893 = AND V892 0xffffffffffffffffffffffffffffffffffffffff
0xac1: V894 = ISZERO V869
0xac2: V895 = 0x8fc
0xac5: V896 = MUL 0x8fc V894
0xac9: V897 = 0x0
0xad1: V898 = CALL V896 V893 V869 V886 0x0 V886 0x0
0xad7: V899 = ISZERO V898
0xad8: V900 = ISZERO V899
0xad9: V901 = 0x67d
0xadc: JUMPI 0x67d V900
---
Entry stack: [V10, 0x134, V846, 0x0, 0xf4240, V846]
Stack pops: 3
Stack additions: [V869]
Exit stack: [V10, 0x134, V846, V869]

================================

Block 0xadd
[0xadd:0xae1]
---
Predecessors: [0xa6d]
Successors: []
---
0xadd PUSH1 0x0
0xadf PUSH1 0x0
0xae1 REVERT
---
0xadd: V902 = 0x0
0xadf: V903 = 0x0
0xae1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x134, V846, V869]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, V846, V869]

================================

Block 0xae2
[0xae2:0xae2]
---
Predecessors: []
Successors: [0xae3]
---
0xae2 JUMPDEST
---
0xae2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xae3
[0xae3:0xae6]
---
Predecessors: [0xae2]
Successors: []
Has unresolved jump.
---
0xae3 JUMPDEST
0xae4 POP
0xae5 POP
0xae6 JUMP
---
0xae3: JUMPDEST 
0xae6: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xae7
[0xae7:0xaf6]
---
Predecessors: [0x3a2]
Successors: [0x235]
---
0xae7 JUMPDEST
0xae8 PUSH12 0x33b2e3c9fd0803ce8000000
0xaf5 DUP2
0xaf6 JUMP
---
0xae7: JUMPDEST 
0xae8: V904 = 0x33b2e3c9fd0803ce8000000
0xaf6: JUMP 0x235
---
Entry stack: [V10, 0x235]
Stack pops: 1
Stack additions: [S0, 0x33b2e3c9fd0803ce8000000]
Exit stack: [V10, 0x235, 0x33b2e3c9fd0803ce8000000]

================================

Block 0xaf7
[0xaf7:0xb10]
---
Predecessors: [0x3c4]
Successors: [0xb11]
---
0xaf7 JUMPDEST
0xaf8 PUSH1 0x1
0xafa PUSH1 0xa0
0xafc PUSH1 0x2
0xafe EXP
0xaff SUB
0xb00 DUP2
0xb01 AND
0xb02 PUSH1 0x0
0xb04 SWAP1
0xb05 DUP2
0xb06 MSTORE
0xb07 PUSH1 0x1
0xb09 PUSH1 0x20
0xb0b MSTORE
0xb0c PUSH1 0x40
0xb0e SWAP1
0xb0f SHA3
0xb10 SLOAD
---
0xaf7: JUMPDEST 
0xaf8: V905 = 0x1
0xafa: V906 = 0xa0
0xafc: V907 = 0x2
0xafe: V908 = EXP 0x2 0xa0
0xaff: V909 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb01: V910 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0xb02: V911 = 0x0
0xb06: M[0x0] = V910
0xb07: V912 = 0x1
0xb09: V913 = 0x20
0xb0b: M[0x20] = 0x1
0xb0c: V914 = 0x40
0xb0f: V915 = SHA3 0x0 0x40
0xb10: V916 = S[V915]
---
Entry stack: [V10, 0x235, V316]
Stack pops: 1
Stack additions: [S0, V916]
Exit stack: [V10, 0x235, V316, V916]

================================

Block 0xb11
[0xb11:0xb15]
---
Predecessors: [0xaf7]
Successors: [0x235]
---
0xb11 JUMPDEST
0xb12 SWAP2
0xb13 SWAP1
0xb14 POP
0xb15 JUMP
---
0xb11: JUMPDEST 
0xb15: JUMP 0x235
---
Entry stack: [V10, 0x235, V316, V916]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V916]

================================

Block 0xb16
[0xb16:0xb25]
---
Predecessors: [0x3f2]
Successors: [0x211]
---
0xb16 JUMPDEST
0xb17 PUSH1 0x5
0xb19 SLOAD
0xb1a PUSH1 0xa0
0xb1c PUSH1 0x2
0xb1e EXP
0xb1f SWAP1
0xb20 DIV
0xb21 PUSH1 0xff
0xb23 AND
0xb24 DUP2
0xb25 JUMP
---
0xb16: JUMPDEST 
0xb17: V917 = 0x5
0xb19: V918 = S[0x5]
0xb1a: V919 = 0xa0
0xb1c: V920 = 0x2
0xb1e: V921 = EXP 0x2 0xa0
0xb20: V922 = DIV V918 0x10000000000000000000000000000000000000000
0xb21: V923 = 0xff
0xb23: V924 = AND 0xff V922
0xb25: JUMP 0x211
---
Entry stack: [V10, 0x211]
Stack pops: 1
Stack additions: [S0, V924]
Exit stack: [V10, 0x211, V924]

================================

Block 0xb26
[0xb26:0xb2b]
---
Predecessors: [0x416]
Successors: [0x235]
---
0xb26 JUMPDEST
0xb27 PUSH1 0x7
0xb29 SLOAD
0xb2a DUP2
0xb2b JUMP
---
0xb26: JUMPDEST 
0xb27: V925 = 0x7
0xb29: V926 = S[0x7]
0xb2b: JUMP 0x235
---
Entry stack: [V10, 0x235]
Stack pops: 1
Stack additions: [S0, V926]
Exit stack: [V10, 0x235, V926]

================================

Block 0xb2c
[0xb2c:0xb62]
---
Predecessors: [0x438]
Successors: [0x172]
---
0xb2c JUMPDEST
0xb2d PUSH1 0x40
0xb2f DUP1
0xb30 MLOAD
0xb31 DUP1
0xb32 DUP3
0xb33 ADD
0xb34 SWAP1
0xb35 SWAP2
0xb36 MSTORE
0xb37 PUSH1 0x3
0xb39 DUP2
0xb3a MSTORE
0xb3b PUSH32 0x544d430000000000000000000000000000000000000000000000000000000000
0xb5c PUSH1 0x20
0xb5e DUP3
0xb5f ADD
0xb60 MSTORE
0xb61 DUP2
0xb62 JUMP
---
0xb2c: JUMPDEST 
0xb2d: V927 = 0x40
0xb30: V928 = M[0x40]
0xb33: V929 = ADD 0x40 V928
0xb36: M[0x40] = V929
0xb37: V930 = 0x3
0xb3a: M[V928] = 0x3
0xb3b: V931 = 0x544d430000000000000000000000000000000000000000000000000000000000
0xb5c: V932 = 0x20
0xb5f: V933 = ADD V928 0x20
0xb60: M[V933] = 0x544d430000000000000000000000000000000000000000000000000000000000
0xb62: JUMP 0x172
---
Entry stack: [V10, 0x172]
Stack pops: 1
Stack additions: [S0, V928]
Exit stack: [V10, 0x172, V928]

================================

Block 0xb63
[0xb63:0xb71]
---
Predecessors: [0x4c8]
Successors: [0x146]
---
0xb63 JUMPDEST
0xb64 PUSH1 0x4
0xb66 SLOAD
0xb67 PUSH1 0x1
0xb69 PUSH1 0xa0
0xb6b PUSH1 0x2
0xb6d EXP
0xb6e SUB
0xb6f AND
0xb70 DUP2
0xb71 JUMP
---
0xb63: JUMPDEST 
0xb64: V934 = 0x4
0xb66: V935 = S[0x4]
0xb67: V936 = 0x1
0xb69: V937 = 0xa0
0xb6b: V938 = 0x2
0xb6d: V939 = EXP 0x2 0xa0
0xb6e: V940 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6f: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff V935
0xb71: JUMP 0x146
---
Entry stack: [V10, 0x146]
Stack pops: 1
Stack additions: [S0, V941]
Exit stack: [V10, 0x146, V941]

================================

Block 0xb72
[0xb72:0xb95]
---
Predecessors: [0x4f4]
Successors: [0xb96, 0xb9b]
---
0xb72 JUMPDEST
0xb73 PUSH1 0x1
0xb75 PUSH1 0xa0
0xb77 PUSH1 0x2
0xb79 EXP
0xb7a SUB
0xb7b CALLER
0xb7c AND
0xb7d PUSH1 0x0
0xb7f SWAP1
0xb80 DUP2
0xb81 MSTORE
0xb82 PUSH1 0x1
0xb84 PUSH1 0x20
0xb86 MSTORE
0xb87 PUSH1 0x40
0xb89 DUP2
0xb8a SHA3
0xb8b SLOAD
0xb8c DUP3
0xb8d SWAP1
0xb8e LT
0xb8f DUP1
0xb90 ISZERO
0xb91 SWAP1
0xb92 PUSH2 0xb9b
0xb95 JUMPI
---
0xb72: JUMPDEST 
0xb73: V942 = 0x1
0xb75: V943 = 0xa0
0xb77: V944 = 0x2
0xb79: V945 = EXP 0x2 0xa0
0xb7a: V946 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7b: V947 = CALLER
0xb7c: V948 = AND V947 0xffffffffffffffffffffffffffffffffffffffff
0xb7d: V949 = 0x0
0xb81: M[0x0] = V948
0xb82: V950 = 0x1
0xb84: V951 = 0x20
0xb86: M[0x20] = 0x1
0xb87: V952 = 0x40
0xb8a: V953 = SHA3 0x0 0x40
0xb8b: V954 = S[V953]
0xb8e: V955 = LT V954 V425
0xb90: V956 = ISZERO V955
0xb92: V957 = 0xb9b
0xb95: JUMPI 0xb9b V955
---
Entry stack: [V10, 0x211, V423, V425]
Stack pops: 1
Stack additions: [S0, 0x0, V956]
Exit stack: [V10, 0x211, V423, V425, 0x0, V956]

================================

Block 0xb96
[0xb96:0xb9a]
---
Predecessors: [0xb72]
Successors: [0xb9b]
---
0xb96 POP
0xb97 PUSH1 0x0
0xb99 DUP3
0xb9a GT
---
0xb97: V958 = 0x0
0xb9a: V959 = GT V425 0x0
---
Entry stack: [V10, 0x211, V423, V425, 0x0, V956]
Stack pops: 3
Stack additions: [S2, S1, V959]
Exit stack: [V10, 0x211, V423, V425, 0x0, V959]

================================

Block 0xb9b
[0xb9b:0xba0]
---
Predecessors: [0xb72, 0xb96]
Successors: [0xba1, 0xc0f]
---
0xb9b JUMPDEST
0xb9c ISZERO
0xb9d PUSH2 0xc0f
0xba0 JUMPI
---
0xb9b: JUMPDEST 
0xb9c: V960 = ISZERO S0
0xb9d: V961 = 0xc0f
0xba0: JUMPI 0xc0f V960
---
Entry stack: [V10, 0x211, V423, V425, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x211, V423, V425, 0x0]

================================

Block 0xba1
[0xba1:0xc0e]
---
Predecessors: [0xb9b]
Successors: [0x72c]
---
0xba1 PUSH1 0x1
0xba3 PUSH1 0xa0
0xba5 PUSH1 0x2
0xba7 EXP
0xba8 SUB
0xba9 CALLER
0xbaa DUP2
0xbab AND
0xbac PUSH1 0x0
0xbae DUP2
0xbaf DUP2
0xbb0 MSTORE
0xbb1 PUSH1 0x1
0xbb3 PUSH1 0x20
0xbb5 SWAP1
0xbb6 DUP2
0xbb7 MSTORE
0xbb8 PUSH1 0x40
0xbba DUP1
0xbbb DUP4
0xbbc SHA3
0xbbd DUP1
0xbbe SLOAD
0xbbf DUP9
0xbc0 SWAP1
0xbc1 SUB
0xbc2 SWAP1
0xbc3 SSTORE
0xbc4 SWAP4
0xbc5 DUP8
0xbc6 AND
0xbc7 DUP1
0xbc8 DUP4
0xbc9 MSTORE
0xbca SWAP2
0xbcb DUP5
0xbcc SWAP1
0xbcd SHA3
0xbce DUP1
0xbcf SLOAD
0xbd0 DUP8
0xbd1 ADD
0xbd2 SWAP1
0xbd3 SSTORE
0xbd4 DUP4
0xbd5 MLOAD
0xbd6 DUP7
0xbd7 DUP2
0xbd8 MSTORE
0xbd9 SWAP4
0xbda MLOAD
0xbdb SWAP2
0xbdc SWAP4
0xbdd PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xbfe SWAP3
0xbff SWAP1
0xc00 DUP2
0xc01 SWAP1
0xc02 SUB
0xc03 SWAP1
0xc04 SWAP2
0xc05 ADD
0xc06 SWAP1
0xc07 LOG3
0xc08 POP
0xc09 PUSH1 0x1
0xc0b PUSH2 0x72c
0xc0e JUMP
---
0xba1: V962 = 0x1
0xba3: V963 = 0xa0
0xba5: V964 = 0x2
0xba7: V965 = EXP 0x2 0xa0
0xba8: V966 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba9: V967 = CALLER
0xbab: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V967
0xbac: V969 = 0x0
0xbb0: M[0x0] = V968
0xbb1: V970 = 0x1
0xbb3: V971 = 0x20
0xbb7: M[0x20] = 0x1
0xbb8: V972 = 0x40
0xbbc: V973 = SHA3 0x0 0x40
0xbbe: V974 = S[V973]
0xbc1: V975 = SUB V974 V425
0xbc3: S[V973] = V975
0xbc6: V976 = AND V423 0xffffffffffffffffffffffffffffffffffffffff
0xbc9: M[0x0] = V976
0xbcd: V977 = SHA3 0x0 0x40
0xbcf: V978 = S[V977]
0xbd1: V979 = ADD V425 V978
0xbd3: S[V977] = V979
0xbd5: V980 = M[0x40]
0xbd8: M[V980] = V425
0xbda: V981 = M[0x40]
0xbdd: V982 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc02: V983 = SUB V980 V981
0xc05: V984 = ADD 0x20 V983
0xc07: LOG V981 V984 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V968 V976
0xc09: V985 = 0x1
0xc0b: V986 = 0x72c
0xc0e: JUMP 0x72c
---
Entry stack: [V10, 0x211, V423, V425, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x211, V423, V425, 0x1]

================================

Block 0xc0f
[0xc0f:0xc16]
---
Predecessors: [0xb9b]
Successors: [0x72c]
---
0xc0f JUMPDEST
0xc10 POP
0xc11 PUSH1 0x0
0xc13 PUSH2 0x72c
0xc16 JUMP
---
0xc0f: JUMPDEST 
0xc11: V987 = 0x0
0xc13: V988 = 0x72c
0xc16: JUMP 0x72c
---
Entry stack: [V10, 0x211, V423, V425, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x211, V423, V425, 0x0]

================================

Block 0xc17
[0xc17:0xc17]
---
Predecessors: []
Successors: [0xc18]
---
0xc17 JUMPDEST
---
0xc17: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc18
[0xc18:0xc2d]
---
Predecessors: [0xc17]
Successors: []
Has unresolved jump.
---
0xc18 JUMPDEST
0xc19 SWAP3
0xc1a SWAP2
0xc1b POP
0xc1c POP
0xc1d JUMP
0xc1e JUMPDEST
0xc1f PUSH12 0x24306c4097859c43c000000
0xc2c DUP2
0xc2d JUMP
---
0xc18: JUMPDEST 
0xc1d: JUMP S3
0xc1e: JUMPDEST 
0xc1f: V989 = 0x24306c4097859c43c000000
0xc2d: JUMP S0
---
Entry stack: []
Stack pops: 7
Stack additions: [0x24306c4097859c43c000000, S0]
Exit stack: []

================================

Block 0xc2e
[0xc2e:0xc33]
---
Predecessors: [0x553]
Successors: [0x235]
---
0xc2e JUMPDEST
0xc2f PUSH1 0x6
0xc31 SLOAD
0xc32 DUP2
0xc33 JUMP
---
0xc2e: JUMPDEST 
0xc2f: V990 = 0x6
0xc31: V991 = S[0x6]
0xc33: JUMP 0x235
---
Entry stack: [V10, 0x235]
Stack pops: 1
Stack additions: [S0, V991]
Exit stack: [V10, 0x235, V991]

================================

Block 0xc34
[0xc34:0xc5a]
---
Predecessors: [0x575]
Successors: [0xc5b]
---
0xc34 JUMPDEST
0xc35 PUSH1 0x1
0xc37 PUSH1 0xa0
0xc39 PUSH1 0x2
0xc3b EXP
0xc3c SUB
0xc3d DUP1
0xc3e DUP4
0xc3f AND
0xc40 PUSH1 0x0
0xc42 SWAP1
0xc43 DUP2
0xc44 MSTORE
0xc45 PUSH1 0x2
0xc47 PUSH1 0x20
0xc49 SWAP1
0xc4a DUP2
0xc4b MSTORE
0xc4c PUSH1 0x40
0xc4e DUP1
0xc4f DUP4
0xc50 SHA3
0xc51 SWAP4
0xc52 DUP6
0xc53 AND
0xc54 DUP4
0xc55 MSTORE
0xc56 SWAP3
0xc57 SWAP1
0xc58 MSTORE
0xc59 SHA3
0xc5a SLOAD
---
0xc34: JUMPDEST 
0xc35: V992 = 0x1
0xc37: V993 = 0xa0
0xc39: V994 = 0x2
0xc3b: V995 = EXP 0x2 0xa0
0xc3c: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3f: V997 = AND V470 0xffffffffffffffffffffffffffffffffffffffff
0xc40: V998 = 0x0
0xc44: M[0x0] = V997
0xc45: V999 = 0x2
0xc47: V1000 = 0x20
0xc4b: M[0x20] = 0x2
0xc4c: V1001 = 0x40
0xc50: V1002 = SHA3 0x0 0x40
0xc53: V1003 = AND V473 0xffffffffffffffffffffffffffffffffffffffff
0xc55: M[0x0] = V1003
0xc58: M[0x20] = V1002
0xc59: V1004 = SHA3 0x0 0x40
0xc5a: V1005 = S[V1004]
---
Entry stack: [V10, 0x235, V470, V473]
Stack pops: 2
Stack additions: [S1, S0, V1005]
Exit stack: [V10, 0x235, V470, V473, V1005]

================================

Block 0xc5b
[0xc5b:0xc60]
---
Predecessors: [0xc34]
Successors: [0x235]
---
0xc5b JUMPDEST
0xc5c SWAP3
0xc5d SWAP2
0xc5e POP
0xc5f POP
0xc60 JUMP
---
0xc5b: JUMPDEST 
0xc60: JUMP 0x235
---
Entry stack: [V10, 0x235, V470, V473, V1005]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V1005]

================================

Block 0xc61
[0xc61:0xc6d]
---
Predecessors: [0x5eb]
Successors: [0xc6e, 0xc7d]
---
0xc61 JUMPDEST
0xc62 PUSH1 0x0
0xc64 DUP3
0xc65 DUP3
0xc66 MUL
0xc67 DUP4
0xc68 ISZERO
0xc69 DUP1
0xc6a PUSH2 0xc7d
0xc6d JUMPI
---
0xc61: JUMPDEST 
0xc62: V1006 = 0x0
0xc66: V1007 = MUL 0xf4240 V517
0xc68: V1008 = ISZERO V517
0xc6a: V1009 = 0xc7d
0xc6d: JUMPI 0xc7d V1008
---
Entry stack: [V10, S6, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1007, V1008]
Exit stack: [V10, S6, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240, 0x0, V1007, V1008]

================================

Block 0xc6e
[0xc6e:0xc78]
---
Predecessors: [0xc61]
Successors: [0xc79, 0xc7a]
---
0xc6e POP
0xc6f DUP3
0xc70 DUP5
0xc71 DUP3
0xc72 DUP2
0xc73 ISZERO
0xc74 ISZERO
0xc75 PUSH2 0xc7a
0xc78 JUMPI
---
0xc73: V1010 = ISZERO V517
0xc74: V1011 = ISZERO V1010
0xc75: V1012 = 0xc7a
0xc78: JUMPI 0xc7a V1011
---
Entry stack: [V10, S9, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240, 0x0, V1007, V1008]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V10, S9, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240, 0x0, V1007, 0xf4240, V517, V1007]

================================

Block 0xc79
[0xc79:0xc79]
---
Predecessors: [0xc6e]
Successors: []
---
0xc79 INVALID
---
0xc79: INVALID 
---
Entry stack: [V10, S11, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240, 0x0, V1007, 0xf4240, V517, V1007]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240, 0x0, V1007, 0xf4240, V517, V1007]

================================

Block 0xc7a
[0xc7a:0xc7c]
---
Predecessors: [0xc6e]
Successors: [0xc7d]
---
0xc7a JUMPDEST
0xc7b DIV
0xc7c EQ
---
0xc7a: JUMPDEST 
0xc7b: V1013 = DIV V1007 V517
0xc7c: V1014 = EQ V1013 0xf4240
---
Entry stack: [V10, S11, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240, 0x0, V1007, 0xf4240, V517, V1007]
Stack pops: 3
Stack additions: [V1014]
Exit stack: [V10, S11, {0x131, 0x134}, 0x0, 0x0, 0x5f8, V517, 0xf4240, 0x0, V1007, V1014]

================================

Block 0xc7d
[0xc7d:0xc83]
---
Predecessors: [0xc61, 0xc7a, 0xc90]
Successors: [0xc84, 0xc85]
---
0xc7d JUMPDEST
0xc7e ISZERO
0xc7f ISZERO
0xc80 PUSH2 0xc85
0xc83 JUMPI
---
0xc7d: JUMPDEST 
0xc7e: V1015 = ISZERO S0
0xc7f: V1016 = ISZERO V1015
0xc80: V1017 = 0xc85
0xc83: JUMPI 0xc85 V1016
---
Entry stack: [V10, S9, {0x131, 0x134}, S7, 0x0, {0x5f8, 0x606}, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S9, {0x131, 0x134}, S7, 0x0, {0x5f8, 0x606}, S4, S3, 0x0, S1]

================================

Block 0xc84
[0xc84:0xc84]
---
Predecessors: [0xc7d]
Successors: []
---
0xc84 INVALID
---
0xc84: INVALID 
---
Entry stack: [V10, S8, {0x131, 0x134}, S6, 0x0, {0x5f8, 0x606}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0x131, 0x134}, S6, 0x0, {0x5f8, 0x606}, S3, S2, 0x0, S0]

================================

Block 0xc85
[0xc85:0xc88]
---
Predecessors: [0xc7d, 0xca5]
Successors: [0xc89]
---
0xc85 JUMPDEST
0xc86 DUP1
0xc87 SWAP2
0xc88 POP
---
0xc85: JUMPDEST 
---
Entry stack: [V10, S8, {0x131, 0x134}, S6, 0x0, {0x5f8, 0x606}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, S8, {0x131, 0x134}, S6, 0x0, {0x5f8, 0x606}, S3, S2, S0, S0]

================================

Block 0xc89
[0xc89:0xc8f]
---
Predecessors: [0xc85]
Successors: [0x5f8, 0x606]
---
0xc89 JUMPDEST
0xc8a POP
0xc8b SWAP3
0xc8c SWAP2
0xc8d POP
0xc8e POP
0xc8f JUMP
---
0xc89: JUMPDEST 
0xc8f: JUMP {0x5f8, 0x606}
---
Entry stack: [V10, S8, {0x131, 0x134}, S6, 0x0, {0x5f8, 0x606}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, S8, {0x131, 0x134}, S6, 0x0, S1]

================================

Block 0xc90
[0xc90:0xc9f]
---
Predecessors: [0x5f8]
Successors: [0xc7d, 0xca0]
---
0xc90 JUMPDEST
0xc91 PUSH1 0x0
0xc93 DUP3
0xc94 DUP3
0xc95 ADD
0xc96 DUP4
0xc97 DUP2
0xc98 LT
0xc99 DUP1
0xc9a ISZERO
0xc9b SWAP1
0xc9c PUSH2 0xc7d
0xc9f JUMPI
---
0xc90: JUMPDEST 
0xc91: V1018 = 0x0
0xc95: V1019 = ADD S0 V522
0xc98: V1020 = LT V1019 V522
0xc9a: V1021 = ISZERO V1020
0xc9c: V1022 = 0xc7d
0xc9f: JUMPI 0xc7d V1020
---
Entry stack: [V10, S6, {0x131, 0x134}, S4, 0x0, 0x606, V522, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1019, V1021]
Exit stack: [V10, S6, {0x131, 0x134}, S4, 0x0, 0x606, V522, S0, 0x0, V1019, V1021]

================================

Block 0xca0
[0xca0:0xca4]
---
Predecessors: [0xc90]
Successors: [0xca5]
---
0xca0 POP
0xca1 DUP3
0xca2 DUP2
0xca3 LT
0xca4 ISZERO
---
0xca3: V1023 = LT V1019 V1007
0xca4: V1024 = ISZERO V1023
---
Entry stack: [V10, S9, {0x131, 0x134}, V1007, 0x0, 0x606, S4, V1007, 0x0, V1019, V1021]
Stack pops: 4
Stack additions: [S3, S2, S1, V1024]
Exit stack: [V10, S9, {0x131, 0x134}, V1007, 0x0, 0x606, S4, V1007, 0x0, V1019, V1024]

================================

Block 0xca5
[0xca5:0xcab]
---
Predecessors: [0xca0]
Successors: [0xc85, 0xcac]
---
0xca5 JUMPDEST
0xca6 ISZERO
0xca7 ISZERO
0xca8 PUSH2 0xc85
0xcab JUMPI
---
0xca5: JUMPDEST 
0xca6: V1025 = ISZERO V1024
0xca7: V1026 = ISZERO V1025
0xca8: V1027 = 0xc85
0xcab: JUMPI 0xc85 V1026
---
Entry stack: [V10, S9, {0x131, 0x134}, V1007, 0x0, 0x606, S4, V1007, 0x0, V1019, V1024]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S9, {0x131, 0x134}, V1007, 0x0, 0x606, S4, V1007, 0x0, V1019]

================================

Block 0xcac
[0xcac:0xcac]
---
Predecessors: [0xca5]
Successors: []
---
0xcac INVALID
---
0xcac: INVALID 
---
Entry stack: [V10, S8, {0x131, 0x134}, V1007, 0x0, 0x606, S3, V1007, 0x0, V1019]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0x131, 0x134}, V1007, 0x0, 0x606, S3, V1007, 0x0, V1019]

================================

Block 0xcad
[0xcad:0xcb0]
---
Predecessors: []
Successors: [0xcb1]
---
0xcad JUMPDEST
0xcae DUP1
0xcaf SWAP2
0xcb0 POP
---
0xcad: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xcb1
[0xcb1:0xcb7]
---
Predecessors: [0xcad]
Successors: []
Has unresolved jump.
---
0xcb1 JUMPDEST
0xcb2 POP
0xcb3 SWAP3
0xcb4 SWAP2
0xcb5 POP
0xcb6 POP
0xcb7 JUMP
---
0xcb1: JUMPDEST 
0xcb7: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xcb8
[0xcb8:0xcc3]
---
Predecessors: [0xa3e]
Successors: [0xcc4, 0xcc5]
---
0xcb8 JUMPDEST
0xcb9 PUSH1 0x0
0xcbb DUP1
0xcbc DUP3
0xcbd DUP5
0xcbe LT
0xcbf ISZERO
0xcc0 PUSH2 0xcc5
0xcc3 JUMPI
---
0xcb8: JUMPDEST 
0xcb9: V1028 = 0x0
0xcbe: V1029 = LT V864 V846
0xcbf: V1030 = ISZERO V1029
0xcc0: V1031 = 0xcc5
0xcc3: JUMPI 0xcc5 V1030
---
Entry stack: [V10, 0x134, V846, 0x0, 0xa64, V864, V846]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V10, 0x134, V846, 0x0, 0xa64, V864, V846, 0x0, 0x0]

================================

Block 0xcc4
[0xcc4:0xcc4]
---
Predecessors: [0xcb8]
Successors: []
---
0xcc4 INVALID
---
0xcc4: INVALID 
---
Entry stack: [V10, 0x134, V846, 0x0, 0xa64, V864, V846, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, V846, 0x0, 0xa64, V864, V846, 0x0, 0x0]

================================

Block 0xcc5
[0xcc5:0xccb]
---
Predecessors: [0xcb8]
Successors: [0xccc]
---
0xcc5 JUMPDEST
0xcc6 POP
0xcc7 POP
0xcc8 DUP1
0xcc9 DUP3
0xcca SUB
0xccb DUP1
---
0xcc5: JUMPDEST 
0xcca: V1032 = SUB V864 V846
---
Entry stack: [V10, 0x134, V846, 0x0, 0xa64, V864, V846, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V1032, V1032]
Exit stack: [V10, 0x134, V846, 0x0, 0xa64, V864, V846, V1032, V1032]

================================

Block 0xccc
[0xccc:0xcd2]
---
Predecessors: [0xcc5]
Successors: [0xa64]
---
0xccc JUMPDEST
0xccd POP
0xcce SWAP3
0xccf SWAP2
0xcd0 POP
0xcd1 POP
0xcd2 JUMP
---
0xccc: JUMPDEST 
0xcd2: JUMP 0xa64
---
Entry stack: [V10, 0x134, V846, 0x0, 0xa64, V864, V846, V1032, V1032]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x134, V846, 0x0, V1032]

================================

Block 0xcd3
[0xcd3:0xd11]
---
Predecessors: []
Successors: []
---
0xcd3 STOP
0xcd4 LOG1
0xcd5 PUSH6 0x627a7a723058
0xcdc SHA3
0xcdd DUP13
0xcde MISSING 0xf
0xcdf MSIZE
0xce0 MISSING 0xd9
0xce1 PUSH4 0x815030a7
0xce6 RETURNDATACOPY
0xce7 BLOCKHASH
0xce8 PUSH6 0x359d1874eaf
0xcef MISSING 0xd0
0xcf0 DUP5
0xcf1 AND
0xcf2 PUSH3 0x491a8b
0xcf6 MISSING 0xf6
0xcf7 SELFDESTRUCT
0xcf8 MISSING 0xf6
0xcf9 PUSH24 0x2555ec0029
---
0xcd3: STOP 
0xcd4: LOG S0 S1 S2
0xcd5: V1033 = 0x627a7a723058
0xcdc: V1034 = SHA3 0x627a7a723058 S3
0xcde: MISSING 0xf
0xcdf: V1035 = MSIZE
0xce0: MISSING 0xd9
0xce1: V1036 = 0x815030a7
0xce6: RETURNDATACOPY 0x815030a7 S0 S1
0xce7: V1037 = BLOCKHASH S2
0xce8: V1038 = 0x359d1874eaf
0xcef: MISSING 0xd0
0xcf1: V1039 = AND S4 S0
0xcf2: V1040 = 0x491a8b
0xcf6: MISSING 0xf6
0xcf7: SELFDESTRUCT S0
0xcf8: MISSING 0xf6
0xcf9: V1041 = 0x2555ec0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, V1034, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V1035, 0x359d1874eaf, V1037, 0x491a8b, V1039, S1, S2, S3, S4, 0x2555ec0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1a7a8c0
Entry block: 0x136
Exit block: 0x146
Body: 0x136, 0x13d, 0x13e, 0x146, 0x681

Function 1:
Public function signature: 0x6fdde03
Entry block: 0x162
Exit block: 0x1e4
Body: 0x162, 0x169, 0x16a, 0x172, 0x198, 0x1a6, 0x1b8, 0x1cb, 0x1e4, 0x690

Function 2:
Public function signature: 0x95ea7b3
Entry block: 0x1f2
Exit block: 0x211
Body: 0x1f2, 0x1f9, 0x1fa, 0x211, 0x6c7, 0x72c

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x225
Exit block: 0x235
Body: 0x225, 0x22c, 0x22d, 0x235, 0x732

Function 4:
Public function signature: 0x229a4978
Entry block: 0x247
Exit block: 0x235
Body: 0x235, 0x247, 0x24e, 0x24f

Function 5:
Public function signature: 0x23b872dd
Entry block: 0x269
Exit block: 0x211
Body: 0x211, 0x269, 0x270, 0x271, 0x748, 0x76c, 0x798, 0x79f, 0x7a4, 0x7aa, 0x832, 0x836, 0x837

Function 6:
Public function signature: 0x313ce567
Entry block: 0x2a2
Exit block: 0x235
Body: 0x235, 0x2a2, 0x2a9, 0x2aa, 0x83e

Function 7:
Public function signature: 0x4172d080
Entry block: 0x2c4
Exit block: 0x235
Body: 0x235, 0x2c4, 0x2cb, 0x2cc, 0x843

Function 8:
Public function signature: 0x4bb278f3
Entry block: 0x2e6
Exit block: 0x134
Body: 0x131, 0x132, 0x134, 0x2e6, 0x2ed, 0x2ee, 0x84a, 0x85d, 0x862, 0x879, 0x87e, 0x896, 0x89b, 0x8a8, 0x8bb, 0x8c1, 0x8c6, 0x91b

Function 9:
Public function signature: 0x54fd4d50
Entry block: 0x2f8
Exit block: 0x1e4
Body: 0x172, 0x198, 0x1a6, 0x1b8, 0x1cb, 0x1e4, 0x2f8, 0x2ff, 0x300, 0x923, 0x963, 0x96b, 0x97e, 0x98c, 0x9a0, 0x9a9

Function 10:
Public function signature: 0x590e1ae3
Entry block: 0x388
Exit block: 0x134
Body: 0x134, 0x388, 0x38f, 0x390, 0x9b1, 0x9c9, 0x9ce, 0x9d8, 0x9dd, 0x9f4, 0x9f9, 0xa11, 0xa16, 0xa39, 0xa3e, 0xa64, 0xa6d, 0xadd, 0xcb8, 0xcc4, 0xcc5, 0xccc

Function 11:
Public function signature: 0x6f7920fd
Entry block: 0x39a
Exit block: 0x235
Body: 0x235, 0x39a, 0x3a1, 0x3a2, 0xae7

Function 12:
Public function signature: 0x70a08231
Entry block: 0x3bc
Exit block: 0x235
Body: 0x235, 0x3bc, 0x3c3, 0x3c4, 0xaf7, 0xb11

Function 13:
Public function signature: 0x8d4e4083
Entry block: 0x3ea
Exit block: 0x211
Body: 0x211, 0x3ea, 0x3f1, 0x3f2, 0xb16

Function 14:
Public function signature: 0x91b43d13
Entry block: 0x40e
Exit block: 0x235
Body: 0x235, 0x40e, 0x415, 0x416, 0xb26

Function 15:
Public function signature: 0x95d89b41
Entry block: 0x430
Exit block: 0x1e4
Body: 0x172, 0x198, 0x1a6, 0x1b8, 0x1cb, 0x1e4, 0x430, 0x437, 0x438, 0xb2c

Function 16:
Public function signature: 0xa81c3bdf
Entry block: 0x4c0
Exit block: 0x146
Body: 0x146, 0x4c0, 0x4c7, 0x4c8, 0xb63

Function 17:
Public function signature: 0xa9059cbb
Entry block: 0x4ec
Exit block: 0x211
Body: 0x211, 0x4ec, 0x4f3, 0x4f4, 0x72c, 0xb72, 0xb96, 0xb9b, 0xba1, 0xc0f

Function 18:
Public function signature: 0xb4427263
Entry block: 0x51f
Exit block: 0x134
Body: 0x134, 0x51f

Function 19:
Public function signature: 0xc039daf6
Entry block: 0x247
Exit block: 0x235
Body: 0x235, 0x247, 0x24e, 0x24f

Function 20:
Public function signature: 0xd648a647
Entry block: 0x54b
Exit block: 0x235
Body: 0x235, 0x54b, 0x552, 0x553, 0xc2e

Function 21:
Public function signature: 0xdd62ed3e
Entry block: 0x56d
Exit block: 0x235
Body: 0x235, 0x56d, 0x574, 0x575, 0xc34, 0xc5b

Function 22:
Public fallback function
Entry block: 0x125
Exit block: 0x134
Body: 0x125, 0x129, 0x131, 0x132, 0x134

Function 23:
Private function
Entry block: 0x5a1
Exit block: 0x67d
Body: 0x5a1, 0x5be, 0x5ce, 0x5de, 0x5eb, 0x5f8, 0x606, 0x623, 0x67d, 0xc61, 0xc6e, 0xc7a, 0xc7d, 0xc85, 0xc89, 0xc90, 0xca0, 0xca5

