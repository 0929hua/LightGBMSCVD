Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x40a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xc7c625ee
0x3c EQ
0x3d PUSH2 0x40a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xc7c625ee
0x3c: V13 = EQ 0xc7c625ee V11
0x3d: V14 = 0x40a
0x40: JUMPI 0x40a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x9c]
---
Predecessors: [0x0, 0xd]
Successors: [0x9d, 0xa2]
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 PUSH1 0x0
0x47 DUP1
0x48 PUSH1 0x0
0x4a SWAP1
0x4b SLOAD
0x4c SWAP1
0x4d PUSH2 0x100
0x50 EXP
0x51 SWAP1
0x52 DIV
0x53 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68 AND
0x69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e AND
0x7f CALLER
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 EQ
0x97 DUP1
0x98 ISZERO
0x99 PUSH2 0xa2
0x9c JUMPI
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: V16 = 0x0
0x48: V17 = 0x0
0x4b: V18 = S[0x0]
0x4d: V19 = 0x100
0x50: V20 = EXP 0x100 0x0
0x52: V21 = DIV V18 0x1
0x53: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x68: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x69: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x7f: V26 = CALLER
0x80: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x96: V29 = EQ V28 V25
0x98: V30 = ISZERO V29
0x99: V31 = 0xa2
0x9c: JUMPI 0xa2 V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V29]
Exit stack: [V11, 0x0, 0x0, 0x0, V29]

================================

Block 0x9d
[0x9d:0xa1]
---
Predecessors: [0x41]
Successors: [0xa2]
---
0x9d POP
0x9e PUSH1 0x0
0xa0 CALLVALUE
0xa1 GT
---
0x9e: V32 = 0x0
0xa0: V33 = CALLVALUE
0xa1: V34 = GT V33 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0, V29]
Stack pops: 1
Stack additions: [V34]
Exit stack: [V11, 0x0, 0x0, 0x0, V34]

================================

Block 0xa2
[0xa2:0xa7]
---
Predecessors: [0x41, 0x9d]
Successors: [0xa8, 0xac]
---
0xa2 JUMPDEST
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa2: JUMPDEST 
0xa3: V35 = ISZERO S0
0xa4: V36 = 0xac
0xa7: JUMPI 0xac V35
---
Entry stack: [V11, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa2]
Successors: [0x405]
---
0xa8 PUSH2 0x405
0xab JUMP
---
0xa8: V37 = 0x405
0xab: JUMP 0x405
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0xac
[0xac:0x102]
---
Predecessors: [0xa2]
Successors: [0x103, 0x108]
---
0xac JUMPDEST
0xad PUSH1 0x0
0xaf DUP1
0xb0 SWAP1
0xb1 SLOAD
0xb2 SWAP1
0xb3 PUSH2 0x100
0xb6 EXP
0xb7 SWAP1
0xb8 DIV
0xb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce AND
0xcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4 AND
0xe5 CALLER
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc EQ
0xfd DUP1
0xfe ISZERO
0xff PUSH2 0x108
0x102 JUMPI
---
0xac: JUMPDEST 
0xad: V38 = 0x0
0xb1: V39 = S[0x0]
0xb3: V40 = 0x100
0xb6: V41 = EXP 0x100 0x0
0xb8: V42 = DIV V39 0x1
0xb9: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xce: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xcf: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xe5: V47 = CALLER
0xe6: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xfc: V50 = EQ V49 V46
0xfe: V51 = ISZERO V50
0xff: V52 = 0x108
0x102: JUMPI 0x108 V51
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, 0x0, 0x0, 0x0, V50]

================================

Block 0x103
[0x103:0x107]
---
Predecessors: [0xac]
Successors: [0x108]
---
0x103 POP
0x104 PUSH1 0x0
0x106 CALLVALUE
0x107 EQ
---
0x104: V53 = 0x0
0x106: V54 = CALLVALUE
0x107: V55 = EQ V54 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0, V50]
Stack pops: 1
Stack additions: [V55]
Exit stack: [V11, 0x0, 0x0, 0x0, V55]

================================

Block 0x108
[0x108:0x10d]
---
Predecessors: [0xac, 0x103]
Successors: [0x10e, 0x18a]
---
0x108 JUMPDEST
0x109 ISZERO
0x10a PUSH2 0x18a
0x10d JUMPI
---
0x108: JUMPDEST 
0x109: V56 = ISZERO S0
0x10a: V57 = 0x18a
0x10d: JUMPI 0x18a V56
---
Entry stack: [V11, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0x10e
[0x10e:0x180]
---
Predecessors: [0x108]
Successors: [0x181, 0x185]
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 SWAP1
0x112 SLOAD
0x113 SWAP1
0x114 PUSH2 0x100
0x117 EXP
0x118 SWAP1
0x119 DIV
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 PUSH2 0x8fc
0x149 ADDRESS
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 BALANCE
0x161 SWAP1
0x162 DUP2
0x163 ISZERO
0x164 MUL
0x165 SWAP1
0x166 PUSH1 0x40
0x168 MLOAD
0x169 PUSH1 0x0
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f DUP4
0x170 SUB
0x171 DUP2
0x172 DUP6
0x173 DUP9
0x174 DUP9
0x175 CALL
0x176 SWAP4
0x177 POP
0x178 POP
0x179 POP
0x17a POP
0x17b ISZERO
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x10e: V58 = 0x0
0x112: V59 = S[0x0]
0x114: V60 = 0x100
0x117: V61 = EXP 0x100 0x0
0x119: V62 = DIV V59 0x1
0x11a: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x130: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x146: V67 = 0x8fc
0x149: V68 = ADDRESS
0x14a: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x160: V71 = BALANCE V70
0x163: V72 = ISZERO V71
0x164: V73 = MUL V72 0x8fc
0x166: V74 = 0x40
0x168: V75 = M[0x40]
0x169: V76 = 0x0
0x16b: V77 = 0x40
0x16d: V78 = M[0x40]
0x170: V79 = SUB V75 V78
0x175: V80 = CALL V73 V66 V71 V78 V79 V78 0x0
0x17b: V81 = ISZERO V80
0x17c: V82 = ISZERO V81
0x17d: V83 = 0x185
0x180: JUMPI 0x185 V82
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x10e]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V84 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0x185
[0x185:0x189]
---
Predecessors: [0x10e]
Successors: [0x404]
---
0x185 JUMPDEST
0x186 PUSH2 0x404
0x189 JUMP
---
0x185: JUMPDEST 
0x186: V85 = 0x404
0x189: JUMP 0x404
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0x18a
[0x18a:0x194]
---
Predecessors: [0x108]
Successors: [0x195, 0x196]
---
0x18a JUMPDEST
0x18b PUSH1 0x64
0x18d CALLVALUE
0x18e DUP2
0x18f ISZERO
0x190 ISZERO
0x191 PUSH2 0x196
0x194 JUMPI
---
0x18a: JUMPDEST 
0x18b: V86 = 0x64
0x18d: V87 = CALLVALUE
0x18f: V88 = ISZERO 0x64
0x190: V89 = ISZERO 0x0
0x191: V90 = 0x196
0x194: JUMPI 0x196 0x1
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x64, V87]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x64, V87]

================================

Block 0x195
[0x195:0x195]
---
Predecessors: [0x18a]
Successors: []
---
0x195 INVALID
---
0x195: INVALID 
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x64, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x64, V87]

================================

Block 0x196
[0x196:0x1f5]
---
Predecessors: [0x18a]
Successors: [0x1f6, 0x1fa]
---
0x196 JUMPDEST
0x197 DIV
0x198 SWAP3
0x199 POP
0x19a PUSH1 0x0
0x19c DUP1
0x19d SWAP1
0x19e SLOAD
0x19f SWAP1
0x1a0 PUSH2 0x100
0x1a3 EXP
0x1a4 SWAP1
0x1a5 DIV
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 PUSH2 0x8fc
0x1d5 DUP5
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 ISZERO
0x1d9 MUL
0x1da SWAP1
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de PUSH1 0x0
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 DUP1
0x1e4 DUP4
0x1e5 SUB
0x1e6 DUP2
0x1e7 DUP6
0x1e8 DUP9
0x1e9 DUP9
0x1ea CALL
0x1eb SWAP4
0x1ec POP
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 ISZERO
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x196: JUMPDEST 
0x197: V91 = DIV V87 0x64
0x19a: V92 = 0x0
0x19e: V93 = S[0x0]
0x1a0: V94 = 0x100
0x1a3: V95 = EXP 0x100 0x0
0x1a5: V96 = DIV V93 0x1
0x1a6: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1bc: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1d2: V101 = 0x8fc
0x1d8: V102 = ISZERO V91
0x1d9: V103 = MUL V102 0x8fc
0x1db: V104 = 0x40
0x1dd: V105 = M[0x40]
0x1de: V106 = 0x0
0x1e0: V107 = 0x40
0x1e2: V108 = M[0x40]
0x1e5: V109 = SUB V105 V108
0x1ea: V110 = CALL V103 V100 V91 V108 V109 V108 0x0
0x1f0: V111 = ISZERO V110
0x1f1: V112 = ISZERO V111
0x1f2: V113 = 0x1fa
0x1f5: JUMPI 0x1fa V112
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x64, V87]
Stack pops: 5
Stack additions: [V91, S3, S2]
Exit stack: [V11, V91, 0x0, 0x0]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x196]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V114 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V11, V91, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91, 0x0, 0x0]

================================

Block 0x1fa
[0x1fa:0x202]
---
Predecessors: [0x196]
Successors: [0x499]
---
0x1fa JUMPDEST
0x1fb PUSH2 0x203
0x1fe CALLER
0x1ff PUSH2 0x499
0x202 JUMP
---
0x1fa: JUMPDEST 
0x1fb: V115 = 0x203
0x1fe: V116 = CALLER
0x1ff: V117 = 0x499
0x202: JUMP 0x499
---
Entry stack: [V11, V91, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x203, V116]
Exit stack: [V11, V91, 0x0, 0x0, 0x203, V116]

================================

Block 0x203
[0x203:0x22e]
---
Predecessors: [0x499]
Successors: [0x499]
---
0x203 JUMPDEST
0x204 SWAP2
0x205 POP
0x206 PUSH2 0x22f
0x209 PUSH1 0x0
0x20b DUP1
0x20c SWAP1
0x20d SLOAD
0x20e SWAP1
0x20f PUSH2 0x100
0x212 EXP
0x213 SWAP1
0x214 DIV
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b PUSH2 0x499
0x22e JUMP
---
0x203: JUMPDEST 
0x206: V118 = 0x22f
0x209: V119 = 0x0
0x20d: V120 = S[0x0]
0x20f: V121 = 0x100
0x212: V122 = EXP 0x100 0x0
0x214: V123 = DIV V120 0x1
0x215: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x22b: V126 = 0x499
0x22e: JUMP 0x499
---
Entry stack: [V11, V91, S2, S1, V267]
Stack pops: 3
Stack additions: [S0, S1, 0x22f, V125]
Exit stack: [V11, V91, V267, S1, 0x22f, V125]

================================

Block 0x22f
[0x22f:0x33c]
---
Predecessors: [0x499]
Successors: [0x33d, 0x403]
---
0x22f JUMPDEST
0x230 SWAP1
0x231 POP
0x232 PUSH32 0xb69a8e32fe21e912c295abf8b3cc6f6fc80466dc6ba6f4401c1e8a56723e575b
0x253 DUP3
0x254 PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x273 NOT
0x274 AND
0x275 PUSH1 0x40
0x277 MLOAD
0x278 DUP1
0x279 DUP3
0x27a PUSH1 0x0
0x27c NOT
0x27d AND
0x27e PUSH1 0x0
0x280 NOT
0x281 AND
0x282 DUP2
0x283 MSTORE
0x284 PUSH1 0x20
0x286 ADD
0x287 SWAP2
0x288 POP
0x289 POP
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e SWAP2
0x28f SUB
0x290 SWAP1
0x291 LOG1
0x292 PUSH32 0xceca126e47a6b9a29e469fc3bc8e96c7b7189eba26060f49a5587986fbeea3f0
0x2b3 DUP2
0x2b4 PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2d3 NOT
0x2d4 AND
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 DUP3
0x2da PUSH1 0x0
0x2dc NOT
0x2dd AND
0x2de PUSH1 0x0
0x2e0 NOT
0x2e1 AND
0x2e2 DUP2
0x2e3 MSTORE
0x2e4 PUSH1 0x20
0x2e6 ADD
0x2e7 SWAP2
0x2e8 POP
0x2e9 POP
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed DUP1
0x2ee SWAP2
0x2ef SUB
0x2f0 SWAP1
0x2f1 LOG1
0x2f2 DUP1
0x2f3 PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x312 NOT
0x313 AND
0x314 DUP3
0x315 PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x334 NOT
0x335 AND
0x336 GT
0x337 ISZERO
0x338 ISZERO
0x339 PUSH2 0x403
0x33c JUMPI
---
0x22f: JUMPDEST 
0x232: V127 = 0xb69a8e32fe21e912c295abf8b3cc6f6fc80466dc6ba6f4401c1e8a56723e575b
0x254: V128 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x273: V129 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x274: V130 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 S2
0x275: V131 = 0x40
0x277: V132 = M[0x40]
0x27a: V133 = 0x0
0x27c: V134 = NOT 0x0
0x27d: V135 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V130
0x27e: V136 = 0x0
0x280: V137 = NOT 0x0
0x281: V138 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V135
0x283: M[V132] = V138
0x284: V139 = 0x20
0x286: V140 = ADD 0x20 V132
0x28a: V141 = 0x40
0x28c: V142 = M[0x40]
0x28f: V143 = SUB V140 V142
0x291: LOG V142 V143 0xb69a8e32fe21e912c295abf8b3cc6f6fc80466dc6ba6f4401c1e8a56723e575b
0x292: V144 = 0xceca126e47a6b9a29e469fc3bc8e96c7b7189eba26060f49a5587986fbeea3f0
0x2b4: V145 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2d3: V146 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2d4: V147 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V267
0x2d5: V148 = 0x40
0x2d7: V149 = M[0x40]
0x2da: V150 = 0x0
0x2dc: V151 = NOT 0x0
0x2dd: V152 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V147
0x2de: V153 = 0x0
0x2e0: V154 = NOT 0x0
0x2e1: V155 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V152
0x2e3: M[V149] = V155
0x2e4: V156 = 0x20
0x2e6: V157 = ADD 0x20 V149
0x2ea: V158 = 0x40
0x2ec: V159 = M[0x40]
0x2ef: V160 = SUB V157 V159
0x2f1: LOG V159 V160 0xceca126e47a6b9a29e469fc3bc8e96c7b7189eba26060f49a5587986fbeea3f0
0x2f3: V161 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x312: V162 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x313: V163 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V267
0x315: V164 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x334: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x335: V166 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 S2
0x336: V167 = GT V166 V163
0x337: V168 = ISZERO V167
0x338: V169 = ISZERO V168
0x339: V170 = 0x403
0x33c: JUMPI 0x403 V169
---
Entry stack: [V11, V91, S2, S1, V267]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [V11, V91, S2, V267]

================================

Block 0x33d
[0x33d:0x360]
---
Predecessors: [0x22f]
Successors: [0x361, 0x3bc]
---
0x33d ADDRESS
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 AND
0x354 BALANCE
0x355 DUP4
0x356 PUSH1 0x2
0x358 CALLVALUE
0x359 MUL
0x35a SUB
0x35b GT
0x35c ISZERO
0x35d PUSH2 0x3bc
0x360 JUMPI
---
0x33d: V171 = ADDRESS
0x33e: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x354: V174 = BALANCE V173
0x356: V175 = 0x2
0x358: V176 = CALLVALUE
0x359: V177 = MUL V176 0x2
0x35a: V178 = SUB V177 V91
0x35b: V179 = GT V178 V174
0x35c: V180 = ISZERO V179
0x35d: V181 = 0x3bc
0x360: JUMPI 0x3bc V180
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V91, S1, V267]

================================

Block 0x361
[0x361:0x3b2]
---
Predecessors: [0x33d]
Successors: [0x3b3, 0x3b7]
---
0x361 CALLER
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 AND
0x378 PUSH2 0x8fc
0x37b ADDRESS
0x37c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x391 AND
0x392 BALANCE
0x393 SWAP1
0x394 DUP2
0x395 ISZERO
0x396 MUL
0x397 SWAP1
0x398 PUSH1 0x40
0x39a MLOAD
0x39b PUSH1 0x0
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 DUP1
0x3a1 DUP4
0x3a2 SUB
0x3a3 DUP2
0x3a4 DUP6
0x3a5 DUP9
0x3a6 DUP9
0x3a7 CALL
0x3a8 SWAP4
0x3a9 POP
0x3aa POP
0x3ab POP
0x3ac POP
0x3ad ISZERO
0x3ae ISZERO
0x3af PUSH2 0x3b7
0x3b2 JUMPI
---
0x361: V182 = CALLER
0x362: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x378: V185 = 0x8fc
0x37b: V186 = ADDRESS
0x37c: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x391: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x392: V189 = BALANCE V188
0x395: V190 = ISZERO V189
0x396: V191 = MUL V190 0x8fc
0x398: V192 = 0x40
0x39a: V193 = M[0x40]
0x39b: V194 = 0x0
0x39d: V195 = 0x40
0x39f: V196 = M[0x40]
0x3a2: V197 = SUB V193 V196
0x3a7: V198 = CALL V191 V184 V189 V196 V197 V196 0x0
0x3ad: V199 = ISZERO V198
0x3ae: V200 = ISZERO V199
0x3af: V201 = 0x3b7
0x3b2: JUMPI 0x3b7 V200
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91, S1, V267]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x361]
Successors: []
---
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 REVERT
---
0x3b3: V202 = 0x0
0x3b6: REVERT 0x0 0x0
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91, S1, V267]

================================

Block 0x3b7
[0x3b7:0x3bb]
---
Predecessors: [0x361]
Successors: [0x402]
---
0x3b7 JUMPDEST
0x3b8 PUSH2 0x402
0x3bb JUMP
---
0x3b7: JUMPDEST 
0x3b8: V203 = 0x402
0x3bb: JUMP 0x402
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91, S1, V267]

================================

Block 0x3bc
[0x3bc:0x3fc]
---
Predecessors: [0x33d]
Successors: [0x3fd, 0x401]
---
0x3bc JUMPDEST
0x3bd CALLER
0x3be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d3 AND
0x3d4 PUSH2 0x8fc
0x3d7 DUP5
0x3d8 PUSH1 0x2
0x3da CALLVALUE
0x3db MUL
0x3dc SUB
0x3dd SWAP1
0x3de DUP2
0x3df ISZERO
0x3e0 MUL
0x3e1 SWAP1
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 PUSH1 0x0
0x3e7 PUSH1 0x40
0x3e9 MLOAD
0x3ea DUP1
0x3eb DUP4
0x3ec SUB
0x3ed DUP2
0x3ee DUP6
0x3ef DUP9
0x3f0 DUP9
0x3f1 CALL
0x3f2 SWAP4
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 POP
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V204 = CALLER
0x3be: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x3d4: V207 = 0x8fc
0x3d8: V208 = 0x2
0x3da: V209 = CALLVALUE
0x3db: V210 = MUL V209 0x2
0x3dc: V211 = SUB V210 V91
0x3df: V212 = ISZERO V211
0x3e0: V213 = MUL V212 0x8fc
0x3e2: V214 = 0x40
0x3e4: V215 = M[0x40]
0x3e5: V216 = 0x0
0x3e7: V217 = 0x40
0x3e9: V218 = M[0x40]
0x3ec: V219 = SUB V215 V218
0x3f1: V220 = CALL V213 V206 V211 V218 V219 V218 0x0
0x3f7: V221 = ISZERO V220
0x3f8: V222 = ISZERO V221
0x3f9: V223 = 0x401
0x3fc: JUMPI 0x401 V222
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V91, S1, V267]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x3bc]
Successors: []
---
0x3fd PUSH1 0x0
0x3ff DUP1
0x400 REVERT
---
0x3fd: V224 = 0x0
0x400: REVERT 0x0 0x0
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91, S1, V267]

================================

Block 0x401
[0x401:0x401]
---
Predecessors: [0x3bc]
Successors: [0x402]
---
0x401 JUMPDEST
---
0x401: JUMPDEST 
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91, S1, V267]

================================

Block 0x402
[0x402:0x402]
---
Predecessors: [0x3b7, 0x401]
Successors: [0x403]
---
0x402 JUMPDEST
---
0x402: JUMPDEST 
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91, S1, V267]

================================

Block 0x403
[0x403:0x403]
---
Predecessors: [0x22f, 0x402]
Successors: [0x404]
---
0x403 JUMPDEST
---
0x403: JUMPDEST 
---
Entry stack: [V11, V91, S1, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91, S1, V267]

================================

Block 0x404
[0x404:0x404]
---
Predecessors: [0x185, 0x403]
Successors: [0x405]
---
0x404 JUMPDEST
---
0x404: JUMPDEST 
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, S0]

================================

Block 0x405
[0x405:0x409]
---
Predecessors: [0xa8, 0x404]
Successors: []
---
0x405 JUMPDEST
0x406 POP
0x407 POP
0x408 POP
0x409 STOP
---
0x405: JUMPDEST 
0x409: STOP 
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x40a
[0x40a:0x410]
---
Predecessors: [0xd]
Successors: [0x411, 0x415]
---
0x40a JUMPDEST
0x40b CALLVALUE
0x40c ISZERO
0x40d PUSH2 0x415
0x410 JUMPI
---
0x40a: JUMPDEST 
0x40b: V225 = CALLVALUE
0x40c: V226 = ISZERO V225
0x40d: V227 = 0x415
0x410: JUMPI 0x415 V226
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x411
[0x411:0x414]
---
Predecessors: [0x40a]
Successors: []
---
0x411 PUSH1 0x0
0x413 DUP1
0x414 REVERT
---
0x411: V228 = 0x0
0x414: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x415
[0x415:0x440]
---
Predecessors: [0x40a]
Successors: [0x499]
---
0x415 JUMPDEST
0x416 PUSH2 0x441
0x419 PUSH1 0x4
0x41b DUP1
0x41c DUP1
0x41d CALLDATALOAD
0x41e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x433 AND
0x434 SWAP1
0x435 PUSH1 0x20
0x437 ADD
0x438 SWAP1
0x439 SWAP2
0x43a SWAP1
0x43b POP
0x43c POP
0x43d PUSH2 0x499
0x440 JUMP
---
0x415: JUMPDEST 
0x416: V229 = 0x441
0x419: V230 = 0x4
0x41d: V231 = CALLDATALOAD 0x4
0x41e: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x433: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x435: V234 = 0x20
0x437: V235 = ADD 0x20 0x4
0x43d: V236 = 0x499
0x440: JUMP 0x499
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x441, V233]
Exit stack: [V11, 0x441, V233]

================================

Block 0x441
[0x441:0x498]
---
Predecessors: [0x499]
Successors: []
---
0x441 JUMPDEST
0x442 PUSH1 0x40
0x444 MLOAD
0x445 DUP1
0x446 DUP3
0x447 PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x466 NOT
0x467 AND
0x468 PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x487 NOT
0x488 AND
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0x20
0x48d ADD
0x48e SWAP2
0x48f POP
0x490 POP
0x491 PUSH1 0x40
0x493 MLOAD
0x494 DUP1
0x495 SWAP2
0x496 SUB
0x497 SWAP1
0x498 RETURN
---
0x441: JUMPDEST 
0x442: V237 = 0x40
0x444: V238 = M[0x40]
0x447: V239 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x466: V240 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x467: V241 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V267
0x468: V242 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x487: V243 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x488: V244 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V241
0x48a: M[V238] = V244
0x48b: V245 = 0x20
0x48d: V246 = ADD 0x20 V238
0x491: V247 = 0x40
0x493: V248 = M[0x40]
0x496: V249 = SUB V246 V248
0x498: RETURN V248 V249
---
Entry stack: [V11, V91, S2, S1, V267]
Stack pops: 1
Stack additions: []
Exit stack: [V11, V91, S2, S1]

================================

Block 0x499
[0x499:0x4fa]
---
Predecessors: [0x1fa, 0x203, 0x415]
Successors: [0x203, 0x22f, 0x441]
---
0x499 JUMPDEST
0x49a PUSH1 0x0
0x49c DUP2
0x49d TIMESTAMP
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 DUP1
0x4a2 DUP4
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 AND
0x4b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ce AND
0x4cf PUSH13 0x1000000000000000000000000
0x4dd MUL
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x14
0x4e2 ADD
0x4e3 DUP3
0x4e4 DUP2
0x4e5 MSTORE
0x4e6 PUSH1 0x20
0x4e8 ADD
0x4e9 SWAP3
0x4ea POP
0x4eb POP
0x4ec POP
0x4ed PUSH1 0x40
0x4ef MLOAD
0x4f0 DUP1
0x4f1 SWAP2
0x4f2 SUB
0x4f3 SWAP1
0x4f4 SHA3
0x4f5 SWAP1
0x4f6 POP
0x4f7 SWAP2
0x4f8 SWAP1
0x4f9 POP
0x4fa JUMP
---
0x499: JUMPDEST 
0x49a: V250 = 0x0
0x49d: V251 = TIMESTAMP
0x49e: V252 = 0x40
0x4a0: V253 = M[0x40]
0x4a3: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4b9: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ce: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4cf: V258 = 0x1000000000000000000000000
0x4dd: V259 = MUL 0x1000000000000000000000000 V257
0x4df: M[V253] = V259
0x4e0: V260 = 0x14
0x4e2: V261 = ADD 0x14 V253
0x4e5: M[V261] = V251
0x4e6: V262 = 0x20
0x4e8: V263 = ADD 0x20 V261
0x4ed: V264 = 0x40
0x4ef: V265 = M[0x40]
0x4f2: V266 = SUB V263 V265
0x4f4: V267 = SHA3 V265 V266
0x4fa: JUMP {0x203, 0x22f, 0x441}
---
Entry stack: [V11, V91, S3, S2, {0x203, 0x22f, 0x441}, S0]
Stack pops: 2
Stack additions: [V267]
Exit stack: [V11, V91, S3, S2, V267]

================================

Block 0x4fb
[0x4fb:0x526]
---
Predecessors: []
Successors: []
---
0x4fb STOP
0x4fc LOG1
0x4fd PUSH6 0x627a7a723058
0x504 SHA3
0x505 ISZERO
0x506 SUB
0x507 JUMP
0x508 MISSING 0xb4
0x509 PUSH4 0xa0715591
0x50e NOT
0x50f AND
0x510 PUSH22 0x29024c2f6a638f17c4fb8667ea7a690348ee6f870029
---
0x4fb: STOP 
0x4fc: LOG S0 S1 S2
0x4fd: V268 = 0x627a7a723058
0x504: V269 = SHA3 0x627a7a723058 S3
0x505: V270 = ISZERO V269
0x506: V271 = SUB V270 S4
0x507: JUMP V271
0x508: MISSING 0xb4
0x509: V272 = 0xa0715591
0x50e: V273 = NOT 0xa0715591
0x50f: V274 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f8eaa6e S0
0x510: V275 = 0x29024c2f6a638f17c4fb8667ea7a690348ee6f870029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x29024c2f6a638f17c4fb8667ea7a690348ee6f870029, V274]
Exit stack: []

================================

Function 0:
Public function signature: 0xc7c625ee
Entry block: 0x40a
Exit block: 0x441
Body: 0x40a, 0x411, 0x415, 0x441

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x3b3
Body: 0x41, 0x9d, 0xa2, 0xa8, 0xac, 0x103, 0x108, 0x10e, 0x181, 0x185, 0x18a, 0x195, 0x196, 0x1f6, 0x1fa, 0x203, 0x22f, 0x33d, 0x361, 0x3b3, 0x3b7, 0x3bc, 0x3fd, 0x401, 0x402, 0x403, 0x404, 0x405, 0x441, 0x499

