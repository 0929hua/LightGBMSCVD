Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x104]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x104
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x104
0xa: JUMPI 0x104 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x106]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x106
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x106
0x3d: JUMPI 0x106 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x196]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x196
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x196
0x48: JUMPI 0x196 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1c9]
---
0x49 DUP1
0x4a PUSH4 0x18160ddd
0x4f EQ
0x50 PUSH2 0x1c9
0x53 JUMPI
---
0x4a: V17 = 0x18160ddd
0x4f: V18 = EQ 0x18160ddd V10
0x50: V19 = 0x1c9
0x53: JUMPI 0x1c9 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1eb]
---
0x54 DUP1
0x55 PUSH4 0x23b872dd
0x5a EQ
0x5b PUSH2 0x1eb
0x5e JUMPI
---
0x55: V20 = 0x23b872dd
0x5a: V21 = EQ 0x23b872dd V10
0x5b: V22 = 0x1eb
0x5e: JUMPI 0x1eb V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x224]
---
0x5f DUP1
0x60 PUSH4 0x313ce567
0x65 EQ
0x66 PUSH2 0x224
0x69 JUMPI
---
0x60: V23 = 0x313ce567
0x65: V24 = EQ 0x313ce567 V10
0x66: V25 = 0x224
0x69: JUMPI 0x224 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x246]
---
0x6a DUP1
0x6b PUSH4 0x4172d080
0x70 EQ
0x71 PUSH2 0x246
0x74 JUMPI
---
0x6b: V26 = 0x4172d080
0x70: V27 = EQ 0x4172d080 V10
0x71: V28 = 0x246
0x74: JUMPI 0x246 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x268]
---
0x75 DUP1
0x76 PUSH4 0x4bb278f3
0x7b EQ
0x7c PUSH2 0x268
0x7f JUMPI
---
0x76: V29 = 0x4bb278f3
0x7b: V30 = EQ 0x4bb278f3 V10
0x7c: V31 = 0x268
0x7f: JUMPI 0x268 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x27a]
---
0x80 DUP1
0x81 PUSH4 0x54fd4d50
0x86 EQ
0x87 PUSH2 0x27a
0x8a JUMPI
---
0x81: V32 = 0x54fd4d50
0x86: V33 = EQ 0x54fd4d50 V10
0x87: V34 = 0x27a
0x8a: JUMPI 0x27a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x30a]
---
0x8b DUP1
0x8c PUSH4 0x590e1ae3
0x91 EQ
0x92 PUSH2 0x30a
0x95 JUMPI
---
0x8c: V35 = 0x590e1ae3
0x91: V36 = EQ 0x590e1ae3 V10
0x92: V37 = 0x30a
0x95: JUMPI 0x30a V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x31c]
---
0x96 DUP1
0x97 PUSH4 0x70a08231
0x9c EQ
0x9d PUSH2 0x31c
0xa0 JUMPI
---
0x97: V38 = 0x70a08231
0x9c: V39 = EQ 0x70a08231 V10
0x9d: V40 = 0x31c
0xa0: JUMPI 0x31c V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x34a]
---
0xa1 DUP1
0xa2 PUSH4 0x8d4e4083
0xa7 EQ
0xa8 PUSH2 0x34a
0xab JUMPI
---
0xa2: V41 = 0x8d4e4083
0xa7: V42 = EQ 0x8d4e4083 V10
0xa8: V43 = 0x34a
0xab: JUMPI 0x34a V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x246]
---
0xac DUP1
0xad PUSH4 0x8e499bcf
0xb2 EQ
0xb3 PUSH2 0x246
0xb6 JUMPI
---
0xad: V44 = 0x8e499bcf
0xb2: V45 = EQ 0x8e499bcf V10
0xb3: V46 = 0x246
0xb6: JUMPI 0x246 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x390]
---
0xb7 DUP1
0xb8 PUSH4 0x91b43d13
0xbd EQ
0xbe PUSH2 0x390
0xc1 JUMPI
---
0xb8: V47 = 0x91b43d13
0xbd: V48 = EQ 0x91b43d13 V10
0xbe: V49 = 0x390
0xc1: JUMPI 0x390 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x3b2]
---
0xc2 DUP1
0xc3 PUSH4 0x95d89b41
0xc8 EQ
0xc9 PUSH2 0x3b2
0xcc JUMPI
---
0xc3: V50 = 0x95d89b41
0xc8: V51 = EQ 0x95d89b41 V10
0xc9: V52 = 0x3b2
0xcc: JUMPI 0x3b2 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x442]
---
0xcd DUP1
0xce PUSH4 0xa81c3bdf
0xd3 EQ
0xd4 PUSH2 0x442
0xd7 JUMPI
---
0xce: V53 = 0xa81c3bdf
0xd3: V54 = EQ 0xa81c3bdf V10
0xd4: V55 = 0x442
0xd7: JUMPI 0x442 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x46e]
---
0xd8 DUP1
0xd9 PUSH4 0xa9059cbb
0xde EQ
0xdf PUSH2 0x46e
0xe2 JUMPI
---
0xd9: V56 = 0xa9059cbb
0xde: V57 = EQ 0xa9059cbb V10
0xdf: V58 = 0x46e
0xe2: JUMPI 0x46e V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x4a1]
---
0xe3 DUP1
0xe4 PUSH4 0xb4427263
0xe9 EQ
0xea PUSH2 0x4a1
0xed JUMPI
---
0xe4: V59 = 0xb4427263
0xe9: V60 = EQ 0xb4427263 V10
0xea: V61 = 0x4a1
0xed: JUMPI 0x4a1 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x4ab]
---
0xee DUP1
0xef PUSH4 0xd648a647
0xf4 EQ
0xf5 PUSH2 0x4ab
0xf8 JUMPI
---
0xef: V62 = 0xd648a647
0xf4: V63 = EQ 0xd648a647 V10
0xf5: V64 = 0x4ab
0xf8: JUMPI 0x4ab V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x4cd]
---
0xf9 DUP1
0xfa PUSH4 0xdd62ed3e
0xff EQ
0x100 PUSH2 0x4cd
0x103 JUMPI
---
0xfa: V65 = 0xdd62ed3e
0xff: V66 = EQ 0xdd62ed3e V10
0x100: V67 = 0x4cd
0x103: JUMPI 0x4cd V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: [0x0, 0xf9]
Successors: []
---
0x104 JUMPDEST
0x105 INVALID
---
0x104: JUMPDEST 
0x105: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0xb]
Successors: [0x10d, 0x10e]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 ISZERO
0x109 PUSH2 0x10e
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V68 = CALLVALUE
0x108: V69 = ISZERO V68
0x109: V70 = 0x10e
0x10c: JUMPI 0x10e V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10d
[0x10d:0x10d]
---
Predecessors: [0x106]
Successors: []
---
0x10d INVALID
---
0x10d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10e
[0x10e:0x115]
---
Predecessors: [0x106]
Successors: [0x501]
---
0x10e JUMPDEST
0x10f PUSH2 0x116
0x112 PUSH2 0x501
0x115 JUMP
---
0x10e: JUMPDEST 
0x10f: V71 = 0x116
0x112: V72 = 0x501
0x115: JUMP 0x501
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x116]
Exit stack: [V10, 0x116]

================================

Block 0x116
[0x116:0x13b]
---
Predecessors: [0x501, 0x7f6, 0x967]
Successors: [0x13c, 0x15c]
---
0x116 JUMPDEST
0x117 PUSH1 0x40
0x119 DUP1
0x11a MLOAD
0x11b PUSH1 0x20
0x11d DUP1
0x11e DUP3
0x11f MSTORE
0x120 DUP4
0x121 MLOAD
0x122 DUP2
0x123 DUP4
0x124 ADD
0x125 MSTORE
0x126 DUP4
0x127 MLOAD
0x128 SWAP2
0x129 SWAP3
0x12a DUP4
0x12b SWAP3
0x12c SWAP1
0x12d DUP4
0x12e ADD
0x12f SWAP2
0x130 DUP6
0x131 ADD
0x132 SWAP1
0x133 DUP1
0x134 DUP4
0x135 DUP4
0x136 DUP3
0x137 ISZERO
0x138 PUSH2 0x15c
0x13b JUMPI
---
0x116: JUMPDEST 
0x117: V73 = 0x40
0x11a: V74 = M[0x40]
0x11b: V75 = 0x20
0x11f: M[V74] = 0x20
0x121: V76 = M[S0]
0x124: V77 = ADD V74 0x20
0x125: M[V77] = V76
0x127: V78 = M[S0]
0x12e: V79 = ADD V74 0x40
0x131: V80 = ADD S0 0x20
0x137: V81 = ISZERO V78
0x138: V82 = 0x15c
0x13b: JUMPI 0x15c V81
---
Entry stack: [V10, 0x116, S0]
Stack pops: 1
Stack additions: [S0, V74, V74, V79, V80, V78, V78, V79, V80]
Exit stack: [V10, 0x116, S0, V74, V74, V79, V80, V78, V78, V79, V80]

================================

Block 0x13c
[0x13c:0x149]
---
Predecessors: [0x116, 0x14a, 0x2be, 0x3f6]
Successors: [0x14a, 0x15c]
---
0x13c JUMPDEST
0x13d DUP1
0x13e MLOAD
0x13f DUP3
0x140 MSTORE
0x141 PUSH1 0x20
0x143 DUP4
0x144 GT
0x145 ISZERO
0x146 PUSH2 0x15c
0x149 JUMPI
---
0x13c: JUMPDEST 
0x13e: V83 = M[S0]
0x140: M[S1] = V83
0x141: V84 = 0x20
0x144: V85 = GT S2 0x20
0x145: V86 = ISZERO V85
0x146: V87 = 0x15c
0x149: JUMPI 0x15c V86
---
Entry stack: [V10, 0x116, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x116, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x14a
[0x14a:0x15b]
---
Predecessors: [0x13c]
Successors: [0x13c]
---
0x14a PUSH1 0x1f
0x14c NOT
0x14d SWAP1
0x14e SWAP3
0x14f ADD
0x150 SWAP2
0x151 PUSH1 0x20
0x153 SWAP2
0x154 DUP3
0x155 ADD
0x156 SWAP2
0x157 ADD
0x158 PUSH2 0x13c
0x15b JUMP
---
0x14a: V88 = 0x1f
0x14c: V89 = NOT 0x1f
0x14f: V90 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x151: V91 = 0x20
0x155: V92 = ADD 0x20 S1
0x157: V93 = ADD 0x20 S0
0x158: V94 = 0x13c
0x15b: JUMP 0x13c
---
Entry stack: [V10, 0x116, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V90, V92, V93]
Exit stack: [V10, 0x116, S8, S7, S6, S5, S4, S3, V90, V92, V93]

================================

Block 0x15c
[0x15c:0x16e]
---
Predecessors: [0x116, 0x13c, 0x28a, 0x2b0, 0x3c2, 0x3e8]
Successors: [0x16f, 0x188]
---
0x15c JUMPDEST
0x15d POP
0x15e POP
0x15f POP
0x160 SWAP1
0x161 POP
0x162 SWAP1
0x163 DUP2
0x164 ADD
0x165 SWAP1
0x166 PUSH1 0x1f
0x168 AND
0x169 DUP1
0x16a ISZERO
0x16b PUSH2 0x188
0x16e JUMPI
---
0x15c: JUMPDEST 
0x164: V95 = ADD S3 S5
0x166: V96 = 0x1f
0x168: V97 = AND 0x1f S3
0x16a: V98 = ISZERO V97
0x16b: V99 = 0x188
0x16e: JUMPI 0x188 V98
---
Entry stack: [V10, 0x116, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V95, V97]
Exit stack: [V10, 0x116, S8, S7, S6, V95, V97]

================================

Block 0x16f
[0x16f:0x187]
---
Predecessors: [0x15c]
Successors: [0x188]
---
0x16f DUP1
0x170 DUP3
0x171 SUB
0x172 DUP1
0x173 MLOAD
0x174 PUSH1 0x1
0x176 DUP4
0x177 PUSH1 0x20
0x179 SUB
0x17a PUSH2 0x100
0x17d EXP
0x17e SUB
0x17f NOT
0x180 AND
0x181 DUP2
0x182 MSTORE
0x183 PUSH1 0x20
0x185 ADD
0x186 SWAP2
0x187 POP
---
0x171: V100 = SUB V95 V97
0x173: V101 = M[V100]
0x174: V102 = 0x1
0x177: V103 = 0x20
0x179: V104 = SUB 0x20 V97
0x17a: V105 = 0x100
0x17d: V106 = EXP 0x100 V104
0x17e: V107 = SUB V106 0x1
0x17f: V108 = NOT V107
0x180: V109 = AND V108 V101
0x182: M[V100] = V109
0x183: V110 = 0x20
0x185: V111 = ADD 0x20 V100
---
Entry stack: [V10, 0x116, S4, S3, S2, V95, V97]
Stack pops: 2
Stack additions: [V111, S0]
Exit stack: [V10, 0x116, S4, S3, S2, V111, V97]

================================

Block 0x188
[0x188:0x195]
---
Predecessors: [0x15c, 0x16f, 0x2d0, 0x408]
Successors: []
---
0x188 JUMPDEST
0x189 POP
0x18a SWAP3
0x18b POP
0x18c POP
0x18d POP
0x18e PUSH1 0x40
0x190 MLOAD
0x191 DUP1
0x192 SWAP2
0x193 SUB
0x194 SWAP1
0x195 RETURN
---
0x188: JUMPDEST 
0x18e: V112 = 0x40
0x190: V113 = M[0x40]
0x193: V114 = SUB S1 V113
0x195: RETURN V113 V114
---
Entry stack: [V10, 0x116, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x116]

================================

Block 0x196
[0x196:0x19c]
---
Predecessors: [0x3e]
Successors: [0x19d, 0x19e]
---
0x196 JUMPDEST
0x197 CALLVALUE
0x198 ISZERO
0x199 PUSH2 0x19e
0x19c JUMPI
---
0x196: JUMPDEST 
0x197: V115 = CALLVALUE
0x198: V116 = ISZERO V115
0x199: V117 = 0x19e
0x19c: JUMPI 0x19e V116
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19d
[0x19d:0x19d]
---
Predecessors: [0x196]
Successors: []
---
0x19d INVALID
---
0x19d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19e
[0x19e:0x1b4]
---
Predecessors: [0x196]
Successors: [0x538]
---
0x19e JUMPDEST
0x19f PUSH2 0x1b5
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa PUSH1 0x4
0x1ac CALLDATALOAD
0x1ad AND
0x1ae PUSH1 0x24
0x1b0 CALLDATALOAD
0x1b1 PUSH2 0x538
0x1b4 JUMP
---
0x19e: JUMPDEST 
0x19f: V118 = 0x1b5
0x1a2: V119 = 0x1
0x1a4: V120 = 0xa0
0x1a6: V121 = 0x2
0x1a8: V122 = EXP 0x2 0xa0
0x1a9: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1aa: V124 = 0x4
0x1ac: V125 = CALLDATALOAD 0x4
0x1ad: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V127 = 0x24
0x1b0: V128 = CALLDATALOAD 0x24
0x1b1: V129 = 0x538
0x1b4: JUMP 0x538
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b5, V126, V128]
Exit stack: [V10, 0x1b5, V126, V128]

================================

Block 0x1b5
[0x1b5:0x1c8]
---
Predecessors: [0x59d, 0x698, 0x94a]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x40
0x1b8 DUP1
0x1b9 MLOAD
0x1ba SWAP2
0x1bb ISZERO
0x1bc ISZERO
0x1bd DUP3
0x1be MSTORE
0x1bf MLOAD
0x1c0 SWAP1
0x1c1 DUP2
0x1c2 SWAP1
0x1c3 SUB
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 RETURN
---
0x1b5: JUMPDEST 
0x1b6: V130 = 0x40
0x1b9: V131 = M[0x40]
0x1bb: V132 = ISZERO S0
0x1bc: V133 = ISZERO V132
0x1be: M[V131] = V133
0x1bf: V134 = M[0x40]
0x1c3: V135 = SUB V131 V134
0x1c4: V136 = 0x20
0x1c6: V137 = ADD 0x20 V135
0x1c8: RETURN V134 V137
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x1c9
[0x1c9:0x1cf]
---
Predecessors: [0x49]
Successors: [0x1d0, 0x1d1]
---
0x1c9 JUMPDEST
0x1ca CALLVALUE
0x1cb ISZERO
0x1cc PUSH2 0x1d1
0x1cf JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V138 = CALLVALUE
0x1cb: V139 = ISZERO V138
0x1cc: V140 = 0x1d1
0x1cf: JUMPI 0x1d1 V139
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d0
[0x1d0:0x1d0]
---
Predecessors: [0x1c9]
Successors: []
---
0x1d0 INVALID
---
0x1d0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x1c9]
Successors: [0x5a3]
---
0x1d1 JUMPDEST
0x1d2 PUSH2 0x1d9
0x1d5 PUSH2 0x5a3
0x1d8 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V141 = 0x1d9
0x1d5: V142 = 0x5a3
0x1d8: JUMP 0x5a3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: [V10, 0x1d9]

================================

Block 0x1d9
[0x1d9:0x1ea]
---
Predecessors: [0x5a3, 0x69f, 0x6a4, 0x945, 0x961, 0xb2f, 0xb5c]
Successors: []
---
0x1d9 JUMPDEST
0x1da PUSH1 0x40
0x1dc DUP1
0x1dd MLOAD
0x1de SWAP2
0x1df DUP3
0x1e0 MSTORE
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 DUP2
0x1e4 SWAP1
0x1e5 SUB
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 SWAP1
0x1ea RETURN
---
0x1d9: JUMPDEST 
0x1da: V143 = 0x40
0x1dd: V144 = M[0x40]
0x1e0: M[V144] = S0
0x1e1: V145 = M[0x40]
0x1e5: V146 = SUB V144 V145
0x1e6: V147 = 0x20
0x1e8: V148 = ADD 0x20 V146
0x1ea: RETURN V145 V148
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x1eb
[0x1eb:0x1f1]
---
Predecessors: [0x54]
Successors: [0x1f2, 0x1f3]
---
0x1eb JUMPDEST
0x1ec CALLVALUE
0x1ed ISZERO
0x1ee PUSH2 0x1f3
0x1f1 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V149 = CALLVALUE
0x1ed: V150 = ISZERO V149
0x1ee: V151 = 0x1f3
0x1f1: JUMPI 0x1f3 V150
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f2
[0x1f2:0x1f2]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f2 INVALID
---
0x1f2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f3
[0x1f3:0x20f]
---
Predecessors: [0x1eb]
Successors: [0x5a9]
---
0x1f3 JUMPDEST
0x1f4 PUSH2 0x1b5
0x1f7 PUSH1 0x1
0x1f9 PUSH1 0xa0
0x1fb PUSH1 0x2
0x1fd EXP
0x1fe SUB
0x1ff PUSH1 0x4
0x201 CALLDATALOAD
0x202 DUP2
0x203 AND
0x204 SWAP1
0x205 PUSH1 0x24
0x207 CALLDATALOAD
0x208 AND
0x209 PUSH1 0x44
0x20b CALLDATALOAD
0x20c PUSH2 0x5a9
0x20f JUMP
---
0x1f3: JUMPDEST 
0x1f4: V152 = 0x1b5
0x1f7: V153 = 0x1
0x1f9: V154 = 0xa0
0x1fb: V155 = 0x2
0x1fd: V156 = EXP 0x2 0xa0
0x1fe: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ff: V158 = 0x4
0x201: V159 = CALLDATALOAD 0x4
0x203: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x205: V161 = 0x24
0x207: V162 = CALLDATALOAD 0x24
0x208: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x209: V164 = 0x44
0x20b: V165 = CALLDATALOAD 0x44
0x20c: V166 = 0x5a9
0x20f: JUMP 0x5a9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b5, V160, V163, V165]
Exit stack: [V10, 0x1b5, V160, V163, V165]

================================

Block 0x210
[0x210:0x223]
---
Predecessors: []
Successors: []
---
0x210 JUMPDEST
0x211 PUSH1 0x40
0x213 DUP1
0x214 MLOAD
0x215 SWAP2
0x216 ISZERO
0x217 ISZERO
0x218 DUP3
0x219 MSTORE
0x21a MLOAD
0x21b SWAP1
0x21c DUP2
0x21d SWAP1
0x21e SUB
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP1
0x223 RETURN
---
0x210: JUMPDEST 
0x211: V167 = 0x40
0x214: V168 = M[0x40]
0x216: V169 = ISZERO S0
0x217: V170 = ISZERO V169
0x219: M[V168] = V170
0x21a: V171 = M[0x40]
0x21e: V172 = SUB V168 V171
0x21f: V173 = 0x20
0x221: V174 = ADD 0x20 V172
0x223: RETURN V171 V174
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x224
[0x224:0x22a]
---
Predecessors: [0x5f]
Successors: [0x22b, 0x22c]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0x22c
0x22a JUMPI
---
0x224: JUMPDEST 
0x225: V175 = CALLVALUE
0x226: V176 = ISZERO V175
0x227: V177 = 0x22c
0x22a: JUMPI 0x22c V176
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22b
[0x22b:0x22b]
---
Predecessors: [0x224]
Successors: []
---
0x22b INVALID
---
0x22b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22c
[0x22c:0x233]
---
Predecessors: [0x224]
Successors: [0x69f]
---
0x22c JUMPDEST
0x22d PUSH2 0x1d9
0x230 PUSH2 0x69f
0x233 JUMP
---
0x22c: JUMPDEST 
0x22d: V178 = 0x1d9
0x230: V179 = 0x69f
0x233: JUMP 0x69f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: [V10, 0x1d9]

================================

Block 0x234
[0x234:0x245]
---
Predecessors: []
Successors: []
---
0x234 JUMPDEST
0x235 PUSH1 0x40
0x237 DUP1
0x238 MLOAD
0x239 SWAP2
0x23a DUP3
0x23b MSTORE
0x23c MLOAD
0x23d SWAP1
0x23e DUP2
0x23f SWAP1
0x240 SUB
0x241 PUSH1 0x20
0x243 ADD
0x244 SWAP1
0x245 RETURN
---
0x234: JUMPDEST 
0x235: V180 = 0x40
0x238: V181 = M[0x40]
0x23b: M[V181] = S0
0x23c: V182 = M[0x40]
0x240: V183 = SUB V181 V182
0x241: V184 = 0x20
0x243: V185 = ADD 0x20 V183
0x245: RETURN V182 V185
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x246
[0x246:0x24c]
---
Predecessors: [0x6a, 0xac]
Successors: [0x24d, 0x24e]
---
0x246 JUMPDEST
0x247 CALLVALUE
0x248 ISZERO
0x249 PUSH2 0x24e
0x24c JUMPI
---
0x246: JUMPDEST 
0x247: V186 = CALLVALUE
0x248: V187 = ISZERO V186
0x249: V188 = 0x24e
0x24c: JUMPI 0x24e V187
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24d
[0x24d:0x24d]
---
Predecessors: [0x246]
Successors: []
---
0x24d INVALID
---
0x24d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24e
[0x24e:0x255]
---
Predecessors: [0x246, 0x35a]
Successors: [0x6a4]
---
0x24e JUMPDEST
0x24f PUSH2 0x1d9
0x252 PUSH2 0x6a4
0x255 JUMP
---
0x24e: JUMPDEST 
0x24f: V189 = 0x1d9
0x252: V190 = 0x6a4
0x255: JUMP 0x6a4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: [V10, 0x1d9]

================================

Block 0x256
[0x256:0x267]
---
Predecessors: []
Successors: []
---
0x256 JUMPDEST
0x257 PUSH1 0x40
0x259 DUP1
0x25a MLOAD
0x25b SWAP2
0x25c DUP3
0x25d MSTORE
0x25e MLOAD
0x25f SWAP1
0x260 DUP2
0x261 SWAP1
0x262 SUB
0x263 PUSH1 0x20
0x265 ADD
0x266 SWAP1
0x267 RETURN
---
0x256: JUMPDEST 
0x257: V191 = 0x40
0x25a: V192 = M[0x40]
0x25d: M[V192] = S0
0x25e: V193 = M[0x40]
0x262: V194 = SUB V192 V193
0x263: V195 = 0x20
0x265: V196 = ADD 0x20 V194
0x267: RETURN V193 V196
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x268
[0x268:0x26e]
---
Predecessors: [0x75]
Successors: [0x26f, 0x270]
---
0x268 JUMPDEST
0x269 CALLVALUE
0x26a ISZERO
0x26b PUSH2 0x270
0x26e JUMPI
---
0x268: JUMPDEST 
0x269: V197 = CALLVALUE
0x26a: V198 = ISZERO V197
0x26b: V199 = 0x270
0x26e: JUMPI 0x270 V198
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26f
[0x26f:0x26f]
---
Predecessors: [0x268]
Successors: []
---
0x26f INVALID
---
0x26f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x270
[0x270:0x277]
---
Predecessors: [0x268]
Successors: [0x6ab]
---
0x270 JUMPDEST
0x271 PUSH2 0x278
0x274 PUSH2 0x6ab
0x277 JUMP
---
0x270: JUMPDEST 
0x271: V200 = 0x278
0x274: V201 = 0x6ab
0x277: JUMP 0x6ab
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x278]
Exit stack: [V10, 0x278]

================================

Block 0x278
[0x278:0x279]
---
Predecessors: [0x76e, 0x927, 0xb2b]
Successors: []
---
0x278 JUMPDEST
0x279 STOP
---
0x278: JUMPDEST 
0x279: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27a
[0x27a:0x280]
---
Predecessors: [0x80]
Successors: [0x281, 0x282]
---
0x27a JUMPDEST
0x27b CALLVALUE
0x27c ISZERO
0x27d PUSH2 0x282
0x280 JUMPI
---
0x27a: JUMPDEST 
0x27b: V202 = CALLVALUE
0x27c: V203 = ISZERO V202
0x27d: V204 = 0x282
0x280: JUMPI 0x282 V203
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x281
[0x281:0x281]
---
Predecessors: [0x27a]
Successors: []
---
0x281 INVALID
---
0x281: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x282
[0x282:0x289]
---
Predecessors: [0x27a]
Successors: [0x770]
---
0x282 JUMPDEST
0x283 PUSH2 0x116
0x286 PUSH2 0x770
0x289 JUMP
---
0x282: JUMPDEST 
0x283: V205 = 0x116
0x286: V206 = 0x770
0x289: JUMP 0x770
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x116]
Exit stack: [V10, 0x116]

================================

Block 0x28a
[0x28a:0x2af]
---
Predecessors: []
Successors: [0x15c, 0x2b0]
---
0x28a JUMPDEST
0x28b PUSH1 0x40
0x28d DUP1
0x28e MLOAD
0x28f PUSH1 0x20
0x291 DUP1
0x292 DUP3
0x293 MSTORE
0x294 DUP4
0x295 MLOAD
0x296 DUP2
0x297 DUP4
0x298 ADD
0x299 MSTORE
0x29a DUP4
0x29b MLOAD
0x29c SWAP2
0x29d SWAP3
0x29e DUP4
0x29f SWAP3
0x2a0 SWAP1
0x2a1 DUP4
0x2a2 ADD
0x2a3 SWAP2
0x2a4 DUP6
0x2a5 ADD
0x2a6 SWAP1
0x2a7 DUP1
0x2a8 DUP4
0x2a9 DUP4
0x2aa DUP3
0x2ab ISZERO
0x2ac PUSH2 0x15c
0x2af JUMPI
---
0x28a: JUMPDEST 
0x28b: V207 = 0x40
0x28e: V208 = M[0x40]
0x28f: V209 = 0x20
0x293: M[V208] = 0x20
0x295: V210 = M[S0]
0x298: V211 = ADD V208 0x20
0x299: M[V211] = V210
0x29b: V212 = M[S0]
0x2a2: V213 = ADD V208 0x40
0x2a5: V214 = ADD S0 0x20
0x2ab: V215 = ISZERO V212
0x2ac: V216 = 0x15c
0x2af: JUMPI 0x15c V215
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V208, V208, V213, V214, V212, V212, V213, V214]
Exit stack: [S0, V208, V208, V213, V214, V212, V212, V213, V214]

================================

Block 0x2b0
[0x2b0:0x2bd]
---
Predecessors: [0x28a]
Successors: [0x15c, 0x2be]
---
0x2b0 JUMPDEST
0x2b1 DUP1
0x2b2 MLOAD
0x2b3 DUP3
0x2b4 MSTORE
0x2b5 PUSH1 0x20
0x2b7 DUP4
0x2b8 GT
0x2b9 ISZERO
0x2ba PUSH2 0x15c
0x2bd JUMPI
---
0x2b0: JUMPDEST 
0x2b2: V217 = M[V214]
0x2b4: M[V213] = V217
0x2b5: V218 = 0x20
0x2b8: V219 = GT V212 0x20
0x2b9: V220 = ISZERO V219
0x2ba: V221 = 0x15c
0x2bd: JUMPI 0x15c V220
---
Entry stack: [S8, V208, V208, V213, V214, V212, V212, V213, V214]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V208, V208, V213, V214, V212, V212, V213, V214]

================================

Block 0x2be
[0x2be:0x2cf]
---
Predecessors: [0x2b0]
Successors: [0x13c]
---
0x2be PUSH1 0x1f
0x2c0 NOT
0x2c1 SWAP1
0x2c2 SWAP3
0x2c3 ADD
0x2c4 SWAP2
0x2c5 PUSH1 0x20
0x2c7 SWAP2
0x2c8 DUP3
0x2c9 ADD
0x2ca SWAP2
0x2cb ADD
0x2cc PUSH2 0x13c
0x2cf JUMP
---
0x2be: V222 = 0x1f
0x2c0: V223 = NOT 0x1f
0x2c3: V224 = ADD V212 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2c5: V225 = 0x20
0x2c9: V226 = ADD 0x20 V213
0x2cb: V227 = ADD 0x20 V214
0x2cc: V228 = 0x13c
0x2cf: JUMP 0x13c
---
Entry stack: [S8, V208, V208, V213, V214, V212, V212, V213, V214]
Stack pops: 3
Stack additions: [V224, V226, V227]
Exit stack: [S8, V208, V208, V213, V214, V212, V224, V226, V227]

================================

Block 0x2d0
[0x2d0:0x2e2]
---
Predecessors: []
Successors: [0x188, 0x2e3]
---
0x2d0 JUMPDEST
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 SWAP1
0x2d5 POP
0x2d6 SWAP1
0x2d7 DUP2
0x2d8 ADD
0x2d9 SWAP1
0x2da PUSH1 0x1f
0x2dc AND
0x2dd DUP1
0x2de ISZERO
0x2df PUSH2 0x188
0x2e2 JUMPI
---
0x2d0: JUMPDEST 
0x2d8: V229 = ADD S3 S5
0x2da: V230 = 0x1f
0x2dc: V231 = AND 0x1f S3
0x2de: V232 = ISZERO V231
0x2df: V233 = 0x188
0x2e2: JUMPI 0x188 V232
---
Entry stack: []
Stack pops: 6
Stack additions: [V229, V231]
Exit stack: [V229, V231]

================================

Block 0x2e3
[0x2e3:0x2fb]
---
Predecessors: [0x2d0]
Successors: [0x2fc]
---
0x2e3 DUP1
0x2e4 DUP3
0x2e5 SUB
0x2e6 DUP1
0x2e7 MLOAD
0x2e8 PUSH1 0x1
0x2ea DUP4
0x2eb PUSH1 0x20
0x2ed SUB
0x2ee PUSH2 0x100
0x2f1 EXP
0x2f2 SUB
0x2f3 NOT
0x2f4 AND
0x2f5 DUP2
0x2f6 MSTORE
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa SWAP2
0x2fb POP
---
0x2e5: V234 = SUB V229 V231
0x2e7: V235 = M[V234]
0x2e8: V236 = 0x1
0x2eb: V237 = 0x20
0x2ed: V238 = SUB 0x20 V231
0x2ee: V239 = 0x100
0x2f1: V240 = EXP 0x100 V238
0x2f2: V241 = SUB V240 0x1
0x2f3: V242 = NOT V241
0x2f4: V243 = AND V242 V235
0x2f6: M[V234] = V243
0x2f7: V244 = 0x20
0x2f9: V245 = ADD 0x20 V234
---
Entry stack: [V229, V231]
Stack pops: 2
Stack additions: [V245, S0]
Exit stack: [V245, V231]

================================

Block 0x2fc
[0x2fc:0x309]
---
Predecessors: [0x2e3]
Successors: []
---
0x2fc JUMPDEST
0x2fd POP
0x2fe SWAP3
0x2ff POP
0x300 POP
0x301 POP
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 SWAP2
0x307 SUB
0x308 SWAP1
0x309 RETURN
---
0x2fc: JUMPDEST 
0x302: V246 = 0x40
0x304: V247 = M[0x40]
0x307: V248 = SUB V245 V247
0x309: RETURN V247 V248
---
Entry stack: [V245, V231]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x30a
[0x30a:0x310]
---
Predecessors: [0x8b]
Successors: [0x311, 0x312]
---
0x30a JUMPDEST
0x30b CALLVALUE
0x30c ISZERO
0x30d PUSH2 0x312
0x310 JUMPI
---
0x30a: JUMPDEST 
0x30b: V249 = CALLVALUE
0x30c: V250 = ISZERO V249
0x30d: V251 = 0x312
0x310: JUMPI 0x312 V250
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x311
[0x311:0x311]
---
Predecessors: [0x30a]
Successors: []
---
0x311 INVALID
---
0x311: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x312
[0x312:0x319]
---
Predecessors: [0x30a]
Successors: [0x7fe]
---
0x312 JUMPDEST
0x313 PUSH2 0x278
0x316 PUSH2 0x7fe
0x319 JUMP
---
0x312: JUMPDEST 
0x313: V252 = 0x278
0x316: V253 = 0x7fe
0x319: JUMP 0x7fe
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x278]
Exit stack: [V10, 0x278]

================================

Block 0x31a
[0x31a:0x31b]
---
Predecessors: []
Successors: []
---
0x31a JUMPDEST
0x31b STOP
---
0x31a: JUMPDEST 
0x31b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x31c
[0x31c:0x322]
---
Predecessors: [0x96]
Successors: [0x323, 0x324]
---
0x31c JUMPDEST
0x31d CALLVALUE
0x31e ISZERO
0x31f PUSH2 0x324
0x322 JUMPI
---
0x31c: JUMPDEST 
0x31d: V254 = CALLVALUE
0x31e: V255 = ISZERO V254
0x31f: V256 = 0x324
0x322: JUMPI 0x324 V255
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x323
[0x323:0x323]
---
Predecessors: [0x31c]
Successors: []
---
0x323 INVALID
---
0x323: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x324
[0x324:0x337]
---
Predecessors: [0x31c]
Successors: [0x92b]
---
0x324 JUMPDEST
0x325 PUSH2 0x1d9
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 PUSH1 0x4
0x332 CALLDATALOAD
0x333 AND
0x334 PUSH2 0x92b
0x337 JUMP
---
0x324: JUMPDEST 
0x325: V257 = 0x1d9
0x328: V258 = 0x1
0x32a: V259 = 0xa0
0x32c: V260 = 0x2
0x32e: V261 = EXP 0x2 0xa0
0x32f: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V263 = 0x4
0x332: V264 = CALLDATALOAD 0x4
0x333: V265 = AND V264 0xffffffffffffffffffffffffffffffffffffffff
0x334: V266 = 0x92b
0x337: JUMP 0x92b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9, V265]
Exit stack: [V10, 0x1d9, V265]

================================

Block 0x338
[0x338:0x349]
---
Predecessors: []
Successors: []
---
0x338 JUMPDEST
0x339 PUSH1 0x40
0x33b DUP1
0x33c MLOAD
0x33d SWAP2
0x33e DUP3
0x33f MSTORE
0x340 MLOAD
0x341 SWAP1
0x342 DUP2
0x343 SWAP1
0x344 SUB
0x345 PUSH1 0x20
0x347 ADD
0x348 SWAP1
0x349 RETURN
---
0x338: JUMPDEST 
0x339: V267 = 0x40
0x33c: V268 = M[0x40]
0x33f: M[V268] = S0
0x340: V269 = M[0x40]
0x344: V270 = SUB V268 V269
0x345: V271 = 0x20
0x347: V272 = ADD 0x20 V270
0x349: RETURN V269 V272
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x34a
[0x34a:0x350]
---
Predecessors: [0xa1]
Successors: [0x351, 0x352]
---
0x34a JUMPDEST
0x34b CALLVALUE
0x34c ISZERO
0x34d PUSH2 0x352
0x350 JUMPI
---
0x34a: JUMPDEST 
0x34b: V273 = CALLVALUE
0x34c: V274 = ISZERO V273
0x34d: V275 = 0x352
0x350: JUMPI 0x352 V274
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x351
[0x351:0x351]
---
Predecessors: [0x34a]
Successors: []
---
0x351 INVALID
---
0x351: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x352
[0x352:0x359]
---
Predecessors: [0x34a]
Successors: [0x94a]
---
0x352 JUMPDEST
0x353 PUSH2 0x1b5
0x356 PUSH2 0x94a
0x359 JUMP
---
0x352: JUMPDEST 
0x353: V276 = 0x1b5
0x356: V277 = 0x94a
0x359: JUMP 0x94a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b5]
Exit stack: [V10, 0x1b5]

================================

Block 0x35a
[0x35a:0x374]
---
Predecessors: []
Successors: [0x24e, 0x375]
---
0x35a JUMPDEST
0x35b PUSH1 0x40
0x35d DUP1
0x35e MLOAD
0x35f SWAP2
0x360 ISZERO
0x361 ISZERO
0x362 DUP3
0x363 MSTORE
0x364 MLOAD
0x365 SWAP1
0x366 DUP2
0x367 SWAP1
0x368 SUB
0x369 PUSH1 0x20
0x36b ADD
0x36c SWAP1
0x36d RETURN
0x36e JUMPDEST
0x36f CALLVALUE
0x370 ISZERO
0x371 PUSH2 0x24e
0x374 JUMPI
---
0x35a: JUMPDEST 
0x35b: V278 = 0x40
0x35e: V279 = M[0x40]
0x360: V280 = ISZERO S0
0x361: V281 = ISZERO V280
0x363: M[V279] = V281
0x364: V282 = M[0x40]
0x368: V283 = SUB V279 V282
0x369: V284 = 0x20
0x36b: V285 = ADD 0x20 V283
0x36d: RETURN V282 V285
0x36e: JUMPDEST 
0x36f: V286 = CALLVALUE
0x370: V287 = ISZERO V286
0x371: V288 = 0x24e
0x374: JUMPI 0x24e V287
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x375
[0x375:0x37d]
---
Predecessors: [0x35a]
Successors: [0x6a4]
---
0x375 INVALID
0x376 JUMPDEST
0x377 PUSH2 0x1d9
0x37a PUSH2 0x6a4
0x37d JUMP
---
0x375: INVALID 
0x376: JUMPDEST 
0x377: V289 = 0x1d9
0x37a: V290 = 0x6a4
0x37d: JUMP 0x6a4
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: []

================================

Block 0x37e
[0x37e:0x38f]
---
Predecessors: []
Successors: []
---
0x37e JUMPDEST
0x37f PUSH1 0x40
0x381 DUP1
0x382 MLOAD
0x383 SWAP2
0x384 DUP3
0x385 MSTORE
0x386 MLOAD
0x387 SWAP1
0x388 DUP2
0x389 SWAP1
0x38a SUB
0x38b PUSH1 0x20
0x38d ADD
0x38e SWAP1
0x38f RETURN
---
0x37e: JUMPDEST 
0x37f: V291 = 0x40
0x382: V292 = M[0x40]
0x385: M[V292] = S0
0x386: V293 = M[0x40]
0x38a: V294 = SUB V292 V293
0x38b: V295 = 0x20
0x38d: V296 = ADD 0x20 V294
0x38f: RETURN V293 V296
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x390
[0x390:0x396]
---
Predecessors: [0xb7]
Successors: [0x397, 0x398]
---
0x390 JUMPDEST
0x391 CALLVALUE
0x392 ISZERO
0x393 PUSH2 0x398
0x396 JUMPI
---
0x390: JUMPDEST 
0x391: V297 = CALLVALUE
0x392: V298 = ISZERO V297
0x393: V299 = 0x398
0x396: JUMPI 0x398 V298
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x397
[0x397:0x397]
---
Predecessors: [0x390]
Successors: []
---
0x397 INVALID
---
0x397: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x398
[0x398:0x39f]
---
Predecessors: [0x390]
Successors: [0x961]
---
0x398 JUMPDEST
0x399 PUSH2 0x1d9
0x39c PUSH2 0x961
0x39f JUMP
---
0x398: JUMPDEST 
0x399: V300 = 0x1d9
0x39c: V301 = 0x961
0x39f: JUMP 0x961
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: [V10, 0x1d9]

================================

Block 0x3a0
[0x3a0:0x3b1]
---
Predecessors: []
Successors: []
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x40
0x3a3 DUP1
0x3a4 MLOAD
0x3a5 SWAP2
0x3a6 DUP3
0x3a7 MSTORE
0x3a8 MLOAD
0x3a9 SWAP1
0x3aa DUP2
0x3ab SWAP1
0x3ac SUB
0x3ad PUSH1 0x20
0x3af ADD
0x3b0 SWAP1
0x3b1 RETURN
---
0x3a0: JUMPDEST 
0x3a1: V302 = 0x40
0x3a4: V303 = M[0x40]
0x3a7: M[V303] = S0
0x3a8: V304 = M[0x40]
0x3ac: V305 = SUB V303 V304
0x3ad: V306 = 0x20
0x3af: V307 = ADD 0x20 V305
0x3b1: RETURN V304 V307
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b2
[0x3b2:0x3b8]
---
Predecessors: [0xc2]
Successors: [0x3b9, 0x3ba]
---
0x3b2 JUMPDEST
0x3b3 CALLVALUE
0x3b4 ISZERO
0x3b5 PUSH2 0x3ba
0x3b8 JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V308 = CALLVALUE
0x3b4: V309 = ISZERO V308
0x3b5: V310 = 0x3ba
0x3b8: JUMPI 0x3ba V309
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b9
[0x3b9:0x3b9]
---
Predecessors: [0x3b2]
Successors: []
---
0x3b9 INVALID
---
0x3b9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ba
[0x3ba:0x3c1]
---
Predecessors: [0x3b2]
Successors: [0x967]
---
0x3ba JUMPDEST
0x3bb PUSH2 0x116
0x3be PUSH2 0x967
0x3c1 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V311 = 0x116
0x3be: V312 = 0x967
0x3c1: JUMP 0x967
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x116]
Exit stack: [V10, 0x116]

================================

Block 0x3c2
[0x3c2:0x3e7]
---
Predecessors: []
Successors: [0x15c, 0x3e8]
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x40
0x3c5 DUP1
0x3c6 MLOAD
0x3c7 PUSH1 0x20
0x3c9 DUP1
0x3ca DUP3
0x3cb MSTORE
0x3cc DUP4
0x3cd MLOAD
0x3ce DUP2
0x3cf DUP4
0x3d0 ADD
0x3d1 MSTORE
0x3d2 DUP4
0x3d3 MLOAD
0x3d4 SWAP2
0x3d5 SWAP3
0x3d6 DUP4
0x3d7 SWAP3
0x3d8 SWAP1
0x3d9 DUP4
0x3da ADD
0x3db SWAP2
0x3dc DUP6
0x3dd ADD
0x3de SWAP1
0x3df DUP1
0x3e0 DUP4
0x3e1 DUP4
0x3e2 DUP3
0x3e3 ISZERO
0x3e4 PUSH2 0x15c
0x3e7 JUMPI
---
0x3c2: JUMPDEST 
0x3c3: V313 = 0x40
0x3c6: V314 = M[0x40]
0x3c7: V315 = 0x20
0x3cb: M[V314] = 0x20
0x3cd: V316 = M[S0]
0x3d0: V317 = ADD V314 0x20
0x3d1: M[V317] = V316
0x3d3: V318 = M[S0]
0x3da: V319 = ADD V314 0x40
0x3dd: V320 = ADD S0 0x20
0x3e3: V321 = ISZERO V318
0x3e4: V322 = 0x15c
0x3e7: JUMPI 0x15c V321
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V314, V314, V319, V320, V318, V318, V319, V320]
Exit stack: [S0, V314, V314, V319, V320, V318, V318, V319, V320]

================================

Block 0x3e8
[0x3e8:0x3f5]
---
Predecessors: [0x3c2]
Successors: [0x15c, 0x3f6]
---
0x3e8 JUMPDEST
0x3e9 DUP1
0x3ea MLOAD
0x3eb DUP3
0x3ec MSTORE
0x3ed PUSH1 0x20
0x3ef DUP4
0x3f0 GT
0x3f1 ISZERO
0x3f2 PUSH2 0x15c
0x3f5 JUMPI
---
0x3e8: JUMPDEST 
0x3ea: V323 = M[V320]
0x3ec: M[V319] = V323
0x3ed: V324 = 0x20
0x3f0: V325 = GT V318 0x20
0x3f1: V326 = ISZERO V325
0x3f2: V327 = 0x15c
0x3f5: JUMPI 0x15c V326
---
Entry stack: [S8, V314, V314, V319, V320, V318, V318, V319, V320]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V314, V314, V319, V320, V318, V318, V319, V320]

================================

Block 0x3f6
[0x3f6:0x407]
---
Predecessors: [0x3e8]
Successors: [0x13c]
---
0x3f6 PUSH1 0x1f
0x3f8 NOT
0x3f9 SWAP1
0x3fa SWAP3
0x3fb ADD
0x3fc SWAP2
0x3fd PUSH1 0x20
0x3ff SWAP2
0x400 DUP3
0x401 ADD
0x402 SWAP2
0x403 ADD
0x404 PUSH2 0x13c
0x407 JUMP
---
0x3f6: V328 = 0x1f
0x3f8: V329 = NOT 0x1f
0x3fb: V330 = ADD V318 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3fd: V331 = 0x20
0x401: V332 = ADD 0x20 V319
0x403: V333 = ADD 0x20 V320
0x404: V334 = 0x13c
0x407: JUMP 0x13c
---
Entry stack: [S8, V314, V314, V319, V320, V318, V318, V319, V320]
Stack pops: 3
Stack additions: [V330, V332, V333]
Exit stack: [S8, V314, V314, V319, V320, V318, V330, V332, V333]

================================

Block 0x408
[0x408:0x41a]
---
Predecessors: []
Successors: [0x188, 0x41b]
---
0x408 JUMPDEST
0x409 POP
0x40a POP
0x40b POP
0x40c SWAP1
0x40d POP
0x40e SWAP1
0x40f DUP2
0x410 ADD
0x411 SWAP1
0x412 PUSH1 0x1f
0x414 AND
0x415 DUP1
0x416 ISZERO
0x417 PUSH2 0x188
0x41a JUMPI
---
0x408: JUMPDEST 
0x410: V335 = ADD S3 S5
0x412: V336 = 0x1f
0x414: V337 = AND 0x1f S3
0x416: V338 = ISZERO V337
0x417: V339 = 0x188
0x41a: JUMPI 0x188 V338
---
Entry stack: []
Stack pops: 6
Stack additions: [V335, V337]
Exit stack: [V335, V337]

================================

Block 0x41b
[0x41b:0x433]
---
Predecessors: [0x408]
Successors: [0x434]
---
0x41b DUP1
0x41c DUP3
0x41d SUB
0x41e DUP1
0x41f MLOAD
0x420 PUSH1 0x1
0x422 DUP4
0x423 PUSH1 0x20
0x425 SUB
0x426 PUSH2 0x100
0x429 EXP
0x42a SUB
0x42b NOT
0x42c AND
0x42d DUP2
0x42e MSTORE
0x42f PUSH1 0x20
0x431 ADD
0x432 SWAP2
0x433 POP
---
0x41d: V340 = SUB V335 V337
0x41f: V341 = M[V340]
0x420: V342 = 0x1
0x423: V343 = 0x20
0x425: V344 = SUB 0x20 V337
0x426: V345 = 0x100
0x429: V346 = EXP 0x100 V344
0x42a: V347 = SUB V346 0x1
0x42b: V348 = NOT V347
0x42c: V349 = AND V348 V341
0x42e: M[V340] = V349
0x42f: V350 = 0x20
0x431: V351 = ADD 0x20 V340
---
Entry stack: [V335, V337]
Stack pops: 2
Stack additions: [V351, S0]
Exit stack: [V351, V337]

================================

Block 0x434
[0x434:0x441]
---
Predecessors: [0x41b]
Successors: []
---
0x434 JUMPDEST
0x435 POP
0x436 SWAP3
0x437 POP
0x438 POP
0x439 POP
0x43a PUSH1 0x40
0x43c MLOAD
0x43d DUP1
0x43e SWAP2
0x43f SUB
0x440 SWAP1
0x441 RETURN
---
0x434: JUMPDEST 
0x43a: V352 = 0x40
0x43c: V353 = M[0x40]
0x43f: V354 = SUB V351 V353
0x441: RETURN V353 V354
---
Entry stack: [V351, V337]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x442
[0x442:0x448]
---
Predecessors: [0xcd]
Successors: [0x449, 0x44a]
---
0x442 JUMPDEST
0x443 CALLVALUE
0x444 ISZERO
0x445 PUSH2 0x44a
0x448 JUMPI
---
0x442: JUMPDEST 
0x443: V355 = CALLVALUE
0x444: V356 = ISZERO V355
0x445: V357 = 0x44a
0x448: JUMPI 0x44a V356
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x449
[0x449:0x449]
---
Predecessors: [0x442]
Successors: []
---
0x449 INVALID
---
0x449: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44a
[0x44a:0x451]
---
Predecessors: [0x442]
Successors: [0x99e]
---
0x44a JUMPDEST
0x44b PUSH2 0x452
0x44e PUSH2 0x99e
0x451 JUMP
---
0x44a: JUMPDEST 
0x44b: V358 = 0x452
0x44e: V359 = 0x99e
0x451: JUMP 0x99e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x452]
Exit stack: [V10, 0x452]

================================

Block 0x452
[0x452:0x46d]
---
Predecessors: [0x99e]
Successors: []
---
0x452 JUMPDEST
0x453 PUSH1 0x40
0x455 DUP1
0x456 MLOAD
0x457 PUSH1 0x1
0x459 PUSH1 0xa0
0x45b PUSH1 0x2
0x45d EXP
0x45e SUB
0x45f SWAP1
0x460 SWAP3
0x461 AND
0x462 DUP3
0x463 MSTORE
0x464 MLOAD
0x465 SWAP1
0x466 DUP2
0x467 SWAP1
0x468 SUB
0x469 PUSH1 0x20
0x46b ADD
0x46c SWAP1
0x46d RETURN
---
0x452: JUMPDEST 
0x453: V360 = 0x40
0x456: V361 = M[0x40]
0x457: V362 = 0x1
0x459: V363 = 0xa0
0x45b: V364 = 0x2
0x45d: V365 = EXP 0x2 0xa0
0x45e: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V367 = AND V811 0xffffffffffffffffffffffffffffffffffffffff
0x463: M[V361] = V367
0x464: V368 = M[0x40]
0x468: V369 = SUB V361 V368
0x469: V370 = 0x20
0x46b: V371 = ADD 0x20 V369
0x46d: RETURN V368 V371
---
Entry stack: [V10, 0x452, V811]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x452]

================================

Block 0x46e
[0x46e:0x474]
---
Predecessors: [0xd8]
Successors: [0x475, 0x476]
---
0x46e JUMPDEST
0x46f CALLVALUE
0x470 ISZERO
0x471 PUSH2 0x476
0x474 JUMPI
---
0x46e: JUMPDEST 
0x46f: V372 = CALLVALUE
0x470: V373 = ISZERO V372
0x471: V374 = 0x476
0x474: JUMPI 0x476 V373
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x475
[0x475:0x475]
---
Predecessors: [0x46e]
Successors: []
---
0x475 INVALID
---
0x475: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x476
[0x476:0x48c]
---
Predecessors: [0x46e]
Successors: [0x9ad]
---
0x476 JUMPDEST
0x477 PUSH2 0x1b5
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 PUSH1 0x4
0x484 CALLDATALOAD
0x485 AND
0x486 PUSH1 0x24
0x488 CALLDATALOAD
0x489 PUSH2 0x9ad
0x48c JUMP
---
0x476: JUMPDEST 
0x477: V375 = 0x1b5
0x47a: V376 = 0x1
0x47c: V377 = 0xa0
0x47e: V378 = 0x2
0x480: V379 = EXP 0x2 0xa0
0x481: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x482: V381 = 0x4
0x484: V382 = CALLDATALOAD 0x4
0x485: V383 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0x486: V384 = 0x24
0x488: V385 = CALLDATALOAD 0x24
0x489: V386 = 0x9ad
0x48c: JUMP 0x9ad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b5, V383, V385]
Exit stack: [V10, 0x1b5, V383, V385]

================================

Block 0x48d
[0x48d:0x4a0]
---
Predecessors: []
Successors: []
---
0x48d JUMPDEST
0x48e PUSH1 0x40
0x490 DUP1
0x491 MLOAD
0x492 SWAP2
0x493 ISZERO
0x494 ISZERO
0x495 DUP3
0x496 MSTORE
0x497 MLOAD
0x498 SWAP1
0x499 DUP2
0x49a SWAP1
0x49b SUB
0x49c PUSH1 0x20
0x49e ADD
0x49f SWAP1
0x4a0 RETURN
---
0x48d: JUMPDEST 
0x48e: V387 = 0x40
0x491: V388 = M[0x40]
0x493: V389 = ISZERO S0
0x494: V390 = ISZERO V389
0x496: M[V388] = V390
0x497: V391 = M[0x40]
0x49b: V392 = SUB V388 V391
0x49c: V393 = 0x20
0x49e: V394 = ADD 0x20 V392
0x4a0: RETURN V391 V394
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4a1
[0x4a1:0x4a8]
---
Predecessors: [0xe3]
Successors: [0xa59]
---
0x4a1 JUMPDEST
0x4a2 PUSH2 0x278
0x4a5 PUSH2 0xa59
0x4a8 JUMP
---
0x4a1: JUMPDEST 
0x4a2: V395 = 0x278
0x4a5: V396 = 0xa59
0x4a8: JUMP 0xa59
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x278]
Exit stack: [V10, 0x278]

================================

Block 0x4a9
[0x4a9:0x4aa]
---
Predecessors: []
Successors: []
---
0x4a9 JUMPDEST
0x4aa STOP
---
0x4a9: JUMPDEST 
0x4aa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4ab
[0x4ab:0x4b1]
---
Predecessors: [0xee]
Successors: [0x4b2, 0x4b3]
---
0x4ab JUMPDEST
0x4ac CALLVALUE
0x4ad ISZERO
0x4ae PUSH2 0x4b3
0x4b1 JUMPI
---
0x4ab: JUMPDEST 
0x4ac: V397 = CALLVALUE
0x4ad: V398 = ISZERO V397
0x4ae: V399 = 0x4b3
0x4b1: JUMPI 0x4b3 V398
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b2
[0x4b2:0x4b2]
---
Predecessors: [0x4ab]
Successors: []
---
0x4b2 INVALID
---
0x4b2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b3
[0x4b3:0x4ba]
---
Predecessors: [0x4ab]
Successors: [0xb2f]
---
0x4b3 JUMPDEST
0x4b4 PUSH2 0x1d9
0x4b7 PUSH2 0xb2f
0x4ba JUMP
---
0x4b3: JUMPDEST 
0x4b4: V400 = 0x1d9
0x4b7: V401 = 0xb2f
0x4ba: JUMP 0xb2f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: [V10, 0x1d9]

================================

Block 0x4bb
[0x4bb:0x4cc]
---
Predecessors: []
Successors: []
---
0x4bb JUMPDEST
0x4bc PUSH1 0x40
0x4be DUP1
0x4bf MLOAD
0x4c0 SWAP2
0x4c1 DUP3
0x4c2 MSTORE
0x4c3 MLOAD
0x4c4 SWAP1
0x4c5 DUP2
0x4c6 SWAP1
0x4c7 SUB
0x4c8 PUSH1 0x20
0x4ca ADD
0x4cb SWAP1
0x4cc RETURN
---
0x4bb: JUMPDEST 
0x4bc: V402 = 0x40
0x4bf: V403 = M[0x40]
0x4c2: M[V403] = S0
0x4c3: V404 = M[0x40]
0x4c7: V405 = SUB V403 V404
0x4c8: V406 = 0x20
0x4ca: V407 = ADD 0x20 V405
0x4cc: RETURN V404 V407
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4cd
[0x4cd:0x4d3]
---
Predecessors: [0xf9]
Successors: [0x4d4, 0x4d5]
---
0x4cd JUMPDEST
0x4ce CALLVALUE
0x4cf ISZERO
0x4d0 PUSH2 0x4d5
0x4d3 JUMPI
---
0x4cd: JUMPDEST 
0x4ce: V408 = CALLVALUE
0x4cf: V409 = ISZERO V408
0x4d0: V410 = 0x4d5
0x4d3: JUMPI 0x4d5 V409
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4d4
[0x4d4:0x4d4]
---
Predecessors: [0x4cd]
Successors: []
---
0x4d4 INVALID
---
0x4d4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4d5
[0x4d5:0x4ee]
---
Predecessors: [0x4cd]
Successors: [0xb35]
---
0x4d5 JUMPDEST
0x4d6 PUSH2 0x1d9
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 PUSH1 0x4
0x4e3 CALLDATALOAD
0x4e4 DUP2
0x4e5 AND
0x4e6 SWAP1
0x4e7 PUSH1 0x24
0x4e9 CALLDATALOAD
0x4ea AND
0x4eb PUSH2 0xb35
0x4ee JUMP
---
0x4d5: JUMPDEST 
0x4d6: V411 = 0x1d9
0x4d9: V412 = 0x1
0x4db: V413 = 0xa0
0x4dd: V414 = 0x2
0x4df: V415 = EXP 0x2 0xa0
0x4e0: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V417 = 0x4
0x4e3: V418 = CALLDATALOAD 0x4
0x4e5: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x4e7: V420 = 0x24
0x4e9: V421 = CALLDATALOAD 0x24
0x4ea: V422 = AND V421 0xffffffffffffffffffffffffffffffffffffffff
0x4eb: V423 = 0xb35
0x4ee: JUMP 0xb35
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9, V419, V422]
Exit stack: [V10, 0x1d9, V419, V422]

================================

Block 0x4ef
[0x4ef:0x500]
---
Predecessors: []
Successors: []
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x40
0x4f2 DUP1
0x4f3 MLOAD
0x4f4 SWAP2
0x4f5 DUP3
0x4f6 MSTORE
0x4f7 MLOAD
0x4f8 SWAP1
0x4f9 DUP2
0x4fa SWAP1
0x4fb SUB
0x4fc PUSH1 0x20
0x4fe ADD
0x4ff SWAP1
0x500 RETURN
---
0x4ef: JUMPDEST 
0x4f0: V424 = 0x40
0x4f3: V425 = M[0x40]
0x4f6: M[V425] = S0
0x4f7: V426 = M[0x40]
0x4fb: V427 = SUB V425 V426
0x4fc: V428 = 0x20
0x4fe: V429 = ADD 0x20 V427
0x500: RETURN V426 V429
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x501
[0x501:0x537]
---
Predecessors: [0x10e]
Successors: [0x116]
---
0x501 JUMPDEST
0x502 PUSH1 0x40
0x504 DUP1
0x505 MLOAD
0x506 DUP1
0x507 DUP3
0x508 ADD
0x509 SWAP1
0x50a SWAP2
0x50b MSTORE
0x50c PUSH1 0x5
0x50e DUP2
0x50f MSTORE
0x510 PUSH32 0x436c6f7564000000000000000000000000000000000000000000000000000000
0x531 PUSH1 0x20
0x533 DUP3
0x534 ADD
0x535 MSTORE
0x536 DUP2
0x537 JUMP
---
0x501: JUMPDEST 
0x502: V430 = 0x40
0x505: V431 = M[0x40]
0x508: V432 = ADD 0x40 V431
0x50b: M[0x40] = V432
0x50c: V433 = 0x5
0x50f: M[V431] = 0x5
0x510: V434 = 0x436c6f7564000000000000000000000000000000000000000000000000000000
0x531: V435 = 0x20
0x534: V436 = ADD V431 0x20
0x535: M[V436] = 0x436c6f7564000000000000000000000000000000000000000000000000000000
0x537: JUMP 0x116
---
Entry stack: [V10, 0x116]
Stack pops: 1
Stack additions: [S0, V431]
Exit stack: [V10, 0x116, V431]

================================

Block 0x538
[0x538:0x59c]
---
Predecessors: [0x19e]
Successors: [0x59d]
---
0x538 JUMPDEST
0x539 PUSH1 0x1
0x53b PUSH1 0xa0
0x53d PUSH1 0x2
0x53f EXP
0x540 SUB
0x541 CALLER
0x542 DUP2
0x543 AND
0x544 PUSH1 0x0
0x546 DUP2
0x547 DUP2
0x548 MSTORE
0x549 PUSH1 0x2
0x54b PUSH1 0x20
0x54d SWAP1
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x40
0x552 DUP1
0x553 DUP4
0x554 SHA3
0x555 SWAP5
0x556 DUP8
0x557 AND
0x558 DUP1
0x559 DUP5
0x55a MSTORE
0x55b SWAP5
0x55c DUP3
0x55d MSTORE
0x55e DUP1
0x55f DUP4
0x560 SHA3
0x561 DUP7
0x562 SWAP1
0x563 SSTORE
0x564 DUP1
0x565 MLOAD
0x566 DUP7
0x567 DUP2
0x568 MSTORE
0x569 SWAP1
0x56a MLOAD
0x56b SWAP3
0x56c SWAP5
0x56d SWAP4
0x56e SWAP3
0x56f PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x590 SWAP3
0x591 SWAP2
0x592 DUP2
0x593 SWAP1
0x594 SUB
0x595 SWAP1
0x596 SWAP2
0x597 ADD
0x598 SWAP1
0x599 LOG3
0x59a POP
0x59b PUSH1 0x1
---
0x538: JUMPDEST 
0x539: V437 = 0x1
0x53b: V438 = 0xa0
0x53d: V439 = 0x2
0x53f: V440 = EXP 0x2 0xa0
0x540: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x541: V442 = CALLER
0x543: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x544: V444 = 0x0
0x548: M[0x0] = V443
0x549: V445 = 0x2
0x54b: V446 = 0x20
0x54f: M[0x20] = 0x2
0x550: V447 = 0x40
0x554: V448 = SHA3 0x0 0x40
0x557: V449 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x55a: M[0x0] = V449
0x55d: M[0x20] = V448
0x560: V450 = SHA3 0x0 0x40
0x563: S[V450] = V128
0x565: V451 = M[0x40]
0x568: M[V451] = V128
0x56a: V452 = M[0x40]
0x56f: V453 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x594: V454 = SUB V451 V452
0x597: V455 = ADD 0x20 V454
0x599: LOG V452 V455 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V443 V449
0x59b: V456 = 0x1
---
Entry stack: [V10, 0x1b5, V126, V128]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x1b5, V126, V128, 0x1]

================================

Block 0x59d
[0x59d:0x5a2]
---
Predecessors: [0x538, 0x9dc, 0xa4a]
Successors: [0x1b5]
---
0x59d JUMPDEST
0x59e SWAP3
0x59f SWAP2
0x5a0 POP
0x5a1 POP
0x5a2 JUMP
---
0x59d: JUMPDEST 
0x5a2: JUMP 0x1b5
---
Entry stack: [V10, 0x1b5, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x5a3
[0x5a3:0x5a8]
---
Predecessors: [0x1d1]
Successors: [0x1d9]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0x0
0x5a6 SLOAD
0x5a7 DUP2
0x5a8 JUMP
---
0x5a3: JUMPDEST 
0x5a4: V457 = 0x0
0x5a6: V458 = S[0x0]
0x5a8: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9]
Stack pops: 1
Stack additions: [S0, V458]
Exit stack: [V10, 0x1d9, V458]

================================

Block 0x5a9
[0x5a9:0x5cc]
---
Predecessors: [0x1f3]
Successors: [0x5cd, 0x5f9]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x1
0x5ac PUSH1 0xa0
0x5ae PUSH1 0x2
0x5b0 EXP
0x5b1 SUB
0x5b2 DUP4
0x5b3 AND
0x5b4 PUSH1 0x0
0x5b6 SWAP1
0x5b7 DUP2
0x5b8 MSTORE
0x5b9 PUSH1 0x1
0x5bb PUSH1 0x20
0x5bd MSTORE
0x5be PUSH1 0x40
0x5c0 DUP2
0x5c1 SHA3
0x5c2 SLOAD
0x5c3 DUP3
0x5c4 SWAP1
0x5c5 LT
0x5c6 DUP1
0x5c7 ISZERO
0x5c8 SWAP1
0x5c9 PUSH2 0x5f9
0x5cc JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V459 = 0x1
0x5ac: V460 = 0xa0
0x5ae: V461 = 0x2
0x5b0: V462 = EXP 0x2 0xa0
0x5b1: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b3: V464 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x5b4: V465 = 0x0
0x5b8: M[0x0] = V464
0x5b9: V466 = 0x1
0x5bb: V467 = 0x20
0x5bd: M[0x20] = 0x1
0x5be: V468 = 0x40
0x5c1: V469 = SHA3 0x0 0x40
0x5c2: V470 = S[V469]
0x5c5: V471 = LT V470 V165
0x5c7: V472 = ISZERO V471
0x5c9: V473 = 0x5f9
0x5cc: JUMPI 0x5f9 V471
---
Entry stack: [V10, 0x1b5, V160, V163, V165]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V472]
Exit stack: [V10, 0x1b5, V160, V163, V165, 0x0, V472]

================================

Block 0x5cd
[0x5cd:0x5f8]
---
Predecessors: [0x5a9]
Successors: [0x5f9]
---
0x5cd POP
0x5ce PUSH1 0x1
0x5d0 PUSH1 0xa0
0x5d2 PUSH1 0x2
0x5d4 EXP
0x5d5 SUB
0x5d6 DUP1
0x5d7 DUP6
0x5d8 AND
0x5d9 PUSH1 0x0
0x5db SWAP1
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x2
0x5e0 PUSH1 0x20
0x5e2 SWAP1
0x5e3 DUP2
0x5e4 MSTORE
0x5e5 PUSH1 0x40
0x5e7 DUP1
0x5e8 DUP4
0x5e9 SHA3
0x5ea CALLER
0x5eb SWAP1
0x5ec SWAP5
0x5ed AND
0x5ee DUP4
0x5ef MSTORE
0x5f0 SWAP3
0x5f1 SWAP1
0x5f2 MSTORE
0x5f3 SHA3
0x5f4 SLOAD
0x5f5 DUP3
0x5f6 SWAP1
0x5f7 LT
0x5f8 ISZERO
---
0x5ce: V474 = 0x1
0x5d0: V475 = 0xa0
0x5d2: V476 = 0x2
0x5d4: V477 = EXP 0x2 0xa0
0x5d5: V478 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d8: V479 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x5d9: V480 = 0x0
0x5dd: M[0x0] = V479
0x5de: V481 = 0x2
0x5e0: V482 = 0x20
0x5e4: M[0x20] = 0x2
0x5e5: V483 = 0x40
0x5e9: V484 = SHA3 0x0 0x40
0x5ea: V485 = CALLER
0x5ed: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x5ef: M[0x0] = V486
0x5f2: M[0x20] = V484
0x5f3: V487 = SHA3 0x0 0x40
0x5f4: V488 = S[V487]
0x5f7: V489 = LT V488 V165
0x5f8: V490 = ISZERO V489
---
Entry stack: [V10, 0x1b5, V160, V163, V165, 0x0, V472]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V490]
Exit stack: [V10, 0x1b5, V160, V163, V165, 0x0, V490]

================================

Block 0x5f9
[0x5f9:0x5ff]
---
Predecessors: [0x5a9, 0x5cd]
Successors: [0x600, 0x605]
---
0x5f9 JUMPDEST
0x5fa DUP1
0x5fb ISZERO
0x5fc PUSH2 0x605
0x5ff JUMPI
---
0x5f9: JUMPDEST 
0x5fb: V491 = ISZERO S0
0x5fc: V492 = 0x605
0x5ff: JUMPI 0x605 V491
---
Entry stack: [V10, 0x1b5, V160, V163, V165, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1b5, V160, V163, V165, 0x0, S0]

================================

Block 0x600
[0x600:0x604]
---
Predecessors: [0x5f9]
Successors: [0x605]
---
0x600 POP
0x601 PUSH1 0x0
0x603 DUP3
0x604 GT
---
0x601: V493 = 0x0
0x604: V494 = GT V165 0x0
---
Entry stack: [V10, 0x1b5, V160, V163, V165, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V494]
Exit stack: [V10, 0x1b5, V160, V163, V165, 0x0, V494]

================================

Block 0x605
[0x605:0x60a]
---
Predecessors: [0x5f9, 0x600]
Successors: [0x60b, 0x693]
---
0x605 JUMPDEST
0x606 ISZERO
0x607 PUSH2 0x693
0x60a JUMPI
---
0x605: JUMPDEST 
0x606: V495 = ISZERO S0
0x607: V496 = 0x693
0x60a: JUMPI 0x693 V495
---
Entry stack: [V10, 0x1b5, V160, V163, V165, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b5, V160, V163, V165, 0x0]

================================

Block 0x60b
[0x60b:0x692]
---
Predecessors: [0x605]
Successors: [0x697]
---
0x60b PUSH1 0x1
0x60d PUSH1 0xa0
0x60f PUSH1 0x2
0x611 EXP
0x612 SUB
0x613 DUP1
0x614 DUP5
0x615 AND
0x616 PUSH1 0x0
0x618 DUP2
0x619 DUP2
0x61a MSTORE
0x61b PUSH1 0x1
0x61d PUSH1 0x20
0x61f SWAP1
0x620 DUP2
0x621 MSTORE
0x622 PUSH1 0x40
0x624 DUP1
0x625 DUP4
0x626 SHA3
0x627 DUP1
0x628 SLOAD
0x629 DUP9
0x62a ADD
0x62b SWAP1
0x62c SSTORE
0x62d DUP9
0x62e DUP6
0x62f AND
0x630 DUP1
0x631 DUP5
0x632 MSTORE
0x633 DUP2
0x634 DUP5
0x635 SHA3
0x636 DUP1
0x637 SLOAD
0x638 DUP10
0x639 SWAP1
0x63a SUB
0x63b SWAP1
0x63c SSTORE
0x63d PUSH1 0x2
0x63f DUP4
0x640 MSTORE
0x641 DUP2
0x642 DUP5
0x643 SHA3
0x644 CALLER
0x645 SWAP1
0x646 SWAP7
0x647 AND
0x648 DUP5
0x649 MSTORE
0x64a SWAP5
0x64b DUP3
0x64c MSTORE
0x64d SWAP2
0x64e DUP3
0x64f SWAP1
0x650 SHA3
0x651 DUP1
0x652 SLOAD
0x653 DUP8
0x654 SWAP1
0x655 SUB
0x656 SWAP1
0x657 SSTORE
0x658 DUP2
0x659 MLOAD
0x65a DUP7
0x65b DUP2
0x65c MSTORE
0x65d SWAP2
0x65e MLOAD
0x65f SWAP3
0x660 SWAP4
0x661 SWAP3
0x662 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x683 SWAP3
0x684 DUP2
0x685 SWAP1
0x686 SUB
0x687 SWAP1
0x688 SWAP2
0x689 ADD
0x68a SWAP1
0x68b LOG3
0x68c POP
0x68d PUSH1 0x1
0x68f PUSH2 0x697
0x692 JUMP
---
0x60b: V497 = 0x1
0x60d: V498 = 0xa0
0x60f: V499 = 0x2
0x611: V500 = EXP 0x2 0xa0
0x612: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x615: V502 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x616: V503 = 0x0
0x61a: M[0x0] = V502
0x61b: V504 = 0x1
0x61d: V505 = 0x20
0x621: M[0x20] = 0x1
0x622: V506 = 0x40
0x626: V507 = SHA3 0x0 0x40
0x628: V508 = S[V507]
0x62a: V509 = ADD V165 V508
0x62c: S[V507] = V509
0x62f: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x632: M[0x0] = V510
0x635: V511 = SHA3 0x0 0x40
0x637: V512 = S[V511]
0x63a: V513 = SUB V512 V165
0x63c: S[V511] = V513
0x63d: V514 = 0x2
0x640: M[0x20] = 0x2
0x643: V515 = SHA3 0x0 0x40
0x644: V516 = CALLER
0x647: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x649: M[0x0] = V517
0x64c: M[0x20] = V515
0x650: V518 = SHA3 0x0 0x40
0x652: V519 = S[V518]
0x655: V520 = SUB V519 V165
0x657: S[V518] = V520
0x659: V521 = M[0x40]
0x65c: M[V521] = V165
0x65e: V522 = M[0x40]
0x662: V523 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x686: V524 = SUB V521 V522
0x689: V525 = ADD 0x20 V524
0x68b: LOG V522 V525 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V510 V502
0x68d: V526 = 0x1
0x68f: V527 = 0x697
0x692: JUMP 0x697
---
Entry stack: [V10, 0x1b5, V160, V163, V165, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x1b5, V160, V163, V165, 0x1]

================================

Block 0x693
[0x693:0x696]
---
Predecessors: [0x605]
Successors: [0x697]
---
0x693 JUMPDEST
0x694 POP
0x695 PUSH1 0x0
---
0x693: JUMPDEST 
0x695: V528 = 0x0
---
Entry stack: [V10, 0x1b5, V160, V163, V165, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1b5, V160, V163, V165, 0x0]

================================

Block 0x697
[0x697:0x697]
---
Predecessors: [0x60b, 0x693]
Successors: [0x698]
---
0x697 JUMPDEST
---
0x697: JUMPDEST 
---
Entry stack: [V10, 0x1b5, V160, V163, V165, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b5, V160, V163, V165, {0x0, 0x1}]

================================

Block 0x698
[0x698:0x69e]
---
Predecessors: [0x697]
Successors: [0x1b5]
---
0x698 JUMPDEST
0x699 SWAP4
0x69a SWAP3
0x69b POP
0x69c POP
0x69d POP
0x69e JUMP
---
0x698: JUMPDEST 
0x69e: JUMP 0x1b5
---
Entry stack: [V10, 0x1b5, V160, V163, V165, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x69f
[0x69f:0x6a3]
---
Predecessors: [0x22c]
Successors: [0x1d9]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x0
0x6a2 DUP2
0x6a3 JUMP
---
0x69f: JUMPDEST 
0x6a0: V529 = 0x0
0x6a3: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V10, 0x1d9, 0x0]

================================

Block 0x6a4
[0x6a4:0x6aa]
---
Predecessors: [0x24e, 0x375]
Successors: [0x1d9]
---
0x6a4 JUMPDEST
0x6a5 PUSH3 0xf4240
0x6a9 DUP2
0x6aa JUMP
---
0x6a4: JUMPDEST 
0x6a5: V530 = 0xf4240
0x6aa: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9]
Stack pops: 1
Stack additions: [S0, 0xf4240]
Exit stack: [V10, 0x1d9, 0xf4240]

================================

Block 0x6ab
[0x6ab:0x6bd]
---
Predecessors: [0x270]
Successors: [0x6be, 0x6c3]
---
0x6ab JUMPDEST
0x6ac PUSH1 0x4
0x6ae SLOAD
0x6af PUSH1 0xa0
0x6b1 PUSH1 0x2
0x6b3 EXP
0x6b4 SWAP1
0x6b5 DIV
0x6b6 PUSH1 0xff
0x6b8 AND
0x6b9 ISZERO
0x6ba PUSH2 0x6c3
0x6bd JUMPI
---
0x6ab: JUMPDEST 
0x6ac: V531 = 0x4
0x6ae: V532 = S[0x4]
0x6af: V533 = 0xa0
0x6b1: V534 = 0x2
0x6b3: V535 = EXP 0x2 0xa0
0x6b5: V536 = DIV V532 0x10000000000000000000000000000000000000000
0x6b6: V537 = 0xff
0x6b8: V538 = AND 0xff V536
0x6b9: V539 = ISZERO V538
0x6ba: V540 = 0x6c3
0x6bd: JUMPI 0x6c3 V539
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x6be
[0x6be:0x6c2]
---
Predecessors: [0x6ab]
Successors: []
---
0x6be PUSH1 0x0
0x6c0 PUSH1 0x0
0x6c2 REVERT
---
0x6be: V541 = 0x0
0x6c0: V542 = 0x0
0x6c2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x6c3
[0x6c3:0x6d9]
---
Predecessors: [0x6ab]
Successors: [0x6da, 0x6df]
---
0x6c3 JUMPDEST
0x6c4 PUSH1 0x4
0x6c6 SLOAD
0x6c7 CALLER
0x6c8 PUSH1 0x1
0x6ca PUSH1 0xa0
0x6cc PUSH1 0x2
0x6ce EXP
0x6cf SUB
0x6d0 SWAP1
0x6d1 DUP2
0x6d2 AND
0x6d3 SWAP2
0x6d4 AND
0x6d5 EQ
0x6d6 PUSH2 0x6df
0x6d9 JUMPI
---
0x6c3: JUMPDEST 
0x6c4: V543 = 0x4
0x6c6: V544 = S[0x4]
0x6c7: V545 = CALLER
0x6c8: V546 = 0x1
0x6ca: V547 = 0xa0
0x6cc: V548 = 0x2
0x6ce: V549 = EXP 0x2 0xa0
0x6cf: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d2: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x6d4: V552 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x6d5: V553 = EQ V552 V551
0x6d6: V554 = 0x6df
0x6d9: JUMPI 0x6df V553
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x6da
[0x6da:0x6de]
---
Predecessors: [0x6c3]
Successors: []
---
0x6da PUSH1 0x0
0x6dc PUSH1 0x0
0x6de REVERT
---
0x6da: V555 = 0x0
0x6dc: V556 = 0x0
0x6de: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x6df
[0x6df:0x6ec]
---
Predecessors: [0x6c3]
Successors: [0x6ed, 0x6f2]
---
0x6df JUMPDEST
0x6e0 PUSH3 0xf4240
0x6e4 PUSH1 0x0
0x6e6 SLOAD
0x6e7 LT
0x6e8 ISZERO
0x6e9 PUSH2 0x6f2
0x6ec JUMPI
---
0x6df: JUMPDEST 
0x6e0: V557 = 0xf4240
0x6e4: V558 = 0x0
0x6e6: V559 = S[0x0]
0x6e7: V560 = LT V559 0xf4240
0x6e8: V561 = ISZERO V560
0x6e9: V562 = 0x6f2
0x6ec: JUMPI 0x6f2 V561
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x6ed
[0x6ed:0x6f1]
---
Predecessors: [0x6df]
Successors: []
---
0x6ed PUSH1 0x0
0x6ef PUSH1 0x0
0x6f1 REVERT
---
0x6ed: V563 = 0x0
0x6ef: V564 = 0x0
0x6f1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x6f2
[0x6f2:0x6fe]
---
Predecessors: [0x6df]
Successors: [0x6ff, 0x709]
---
0x6f2 JUMPDEST
0x6f3 PUSH1 0x6
0x6f5 SLOAD
0x6f6 NUMBER
0x6f7 GT
0x6f8 ISZERO
0x6f9 DUP1
0x6fa ISZERO
0x6fb PUSH2 0x709
0x6fe JUMPI
---
0x6f2: JUMPDEST 
0x6f3: V565 = 0x6
0x6f5: V566 = S[0x6]
0x6f6: V567 = NUMBER
0x6f7: V568 = GT V567 V566
0x6f8: V569 = ISZERO V568
0x6fa: V570 = ISZERO V569
0x6fb: V571 = 0x709
0x6fe: JUMPI 0x709 V570
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: [V569]
Exit stack: [V10, 0x278, V569]

================================

Block 0x6ff
[0x6ff:0x708]
---
Predecessors: [0x6f2]
Successors: [0x709]
---
0x6ff POP
0x700 PUSH3 0xf4240
0x704 PUSH1 0x0
0x706 SLOAD
0x707 EQ
0x708 ISZERO
---
0x700: V572 = 0xf4240
0x704: V573 = 0x0
0x706: V574 = S[0x0]
0x707: V575 = EQ V574 0xf4240
0x708: V576 = ISZERO V575
---
Entry stack: [V10, 0x278, V569]
Stack pops: 1
Stack additions: [V576]
Exit stack: [V10, 0x278, V576]

================================

Block 0x709
[0x709:0x70e]
---
Predecessors: [0x6f2, 0x6ff]
Successors: [0x70f, 0x714]
---
0x709 JUMPDEST
0x70a ISZERO
0x70b PUSH2 0x714
0x70e JUMPI
---
0x709: JUMPDEST 
0x70a: V577 = ISZERO S0
0x70b: V578 = 0x714
0x70e: JUMPI 0x714 V577
---
Entry stack: [V10, 0x278, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x70f
[0x70f:0x713]
---
Predecessors: [0x709]
Successors: []
---
0x70f PUSH1 0x0
0x711 PUSH1 0x0
0x713 REVERT
---
0x70f: V579 = 0x0
0x711: V580 = 0x0
0x713: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x714
[0x714:0x767]
---
Predecessors: [0x709]
Successors: [0x768, 0x76d]
---
0x714 JUMPDEST
0x715 PUSH1 0x4
0x717 DUP1
0x718 SLOAD
0x719 PUSH21 0xff0000000000000000000000000000000000000000
0x72f NOT
0x730 AND
0x731 PUSH1 0xa0
0x733 PUSH1 0x2
0x735 EXP
0x736 OR
0x737 SWAP1
0x738 DUP2
0x739 SWAP1
0x73a SSTORE
0x73b PUSH1 0x40
0x73d MLOAD
0x73e PUSH1 0x1
0x740 PUSH1 0xa0
0x742 PUSH1 0x2
0x744 EXP
0x745 SUB
0x746 SWAP2
0x747 DUP3
0x748 AND
0x749 SWAP2
0x74a ADDRESS
0x74b AND
0x74c BALANCE
0x74d DUP1
0x74e ISZERO
0x74f PUSH2 0x8fc
0x752 MUL
0x753 SWAP2
0x754 PUSH1 0x0
0x756 DUP2
0x757 DUP2
0x758 DUP2
0x759 DUP6
0x75a DUP9
0x75b DUP9
0x75c CALL
0x75d SWAP4
0x75e POP
0x75f POP
0x760 POP
0x761 POP
0x762 ISZERO
0x763 ISZERO
0x764 PUSH2 0x76d
0x767 JUMPI
---
0x714: JUMPDEST 
0x715: V581 = 0x4
0x718: V582 = S[0x4]
0x719: V583 = 0xff0000000000000000000000000000000000000000
0x72f: V584 = NOT 0xff0000000000000000000000000000000000000000
0x730: V585 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V582
0x731: V586 = 0xa0
0x733: V587 = 0x2
0x735: V588 = EXP 0x2 0xa0
0x736: V589 = OR 0x10000000000000000000000000000000000000000 V585
0x73a: S[0x4] = V589
0x73b: V590 = 0x40
0x73d: V591 = M[0x40]
0x73e: V592 = 0x1
0x740: V593 = 0xa0
0x742: V594 = 0x2
0x744: V595 = EXP 0x2 0xa0
0x745: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x748: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x74a: V598 = ADDRESS
0x74b: V599 = AND V598 0xffffffffffffffffffffffffffffffffffffffff
0x74c: V600 = BALANCE V599
0x74e: V601 = ISZERO V600
0x74f: V602 = 0x8fc
0x752: V603 = MUL 0x8fc V601
0x754: V604 = 0x0
0x75c: V605 = CALL V603 V597 V600 V591 0x0 V591 0x0
0x762: V606 = ISZERO V605
0x763: V607 = ISZERO V606
0x764: V608 = 0x76d
0x767: JUMPI 0x76d V607
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x768
[0x768:0x76c]
---
Predecessors: [0x714]
Successors: []
---
0x768 PUSH1 0x0
0x76a PUSH1 0x0
0x76c REVERT
---
0x768: V609 = 0x0
0x76a: V610 = 0x0
0x76c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x76d
[0x76d:0x76d]
---
Predecessors: [0x714]
Successors: [0x76e]
---
0x76d JUMPDEST
---
0x76d: JUMPDEST 
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278]

================================

Block 0x76e
[0x76e:0x76f]
---
Predecessors: [0x76d]
Successors: [0x278]
---
0x76e JUMPDEST
0x76f JUMP
---
0x76e: JUMPDEST 
0x76f: JUMP 0x278
---
Entry stack: [V10, 0x278]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x770
[0x770:0x7af]
---
Predecessors: [0x282]
Successors: [0x7b0, 0x7f6]
---
0x770 JUMPDEST
0x771 PUSH1 0x3
0x773 DUP1
0x774 SLOAD
0x775 PUSH1 0x40
0x777 DUP1
0x778 MLOAD
0x779 PUSH1 0x20
0x77b PUSH1 0x2
0x77d PUSH1 0x1
0x77f DUP6
0x780 AND
0x781 ISZERO
0x782 PUSH2 0x100
0x785 MUL
0x786 PUSH1 0x0
0x788 NOT
0x789 ADD
0x78a SWAP1
0x78b SWAP5
0x78c AND
0x78d SWAP4
0x78e SWAP1
0x78f SWAP4
0x790 DIV
0x791 PUSH1 0x1f
0x793 DUP2
0x794 ADD
0x795 DUP5
0x796 SWAP1
0x797 DIV
0x798 DUP5
0x799 MUL
0x79a DUP3
0x79b ADD
0x79c DUP5
0x79d ADD
0x79e SWAP1
0x79f SWAP3
0x7a0 MSTORE
0x7a1 DUP2
0x7a2 DUP2
0x7a3 MSTORE
0x7a4 SWAP3
0x7a5 SWAP2
0x7a6 DUP4
0x7a7 ADD
0x7a8 DUP3
0x7a9 DUP3
0x7aa DUP1
0x7ab ISZERO
0x7ac PUSH2 0x7f6
0x7af JUMPI
---
0x770: JUMPDEST 
0x771: V611 = 0x3
0x774: V612 = S[0x3]
0x775: V613 = 0x40
0x778: V614 = M[0x40]
0x779: V615 = 0x20
0x77b: V616 = 0x2
0x77d: V617 = 0x1
0x780: V618 = AND V612 0x1
0x781: V619 = ISZERO V618
0x782: V620 = 0x100
0x785: V621 = MUL 0x100 V619
0x786: V622 = 0x0
0x788: V623 = NOT 0x0
0x789: V624 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V621
0x78c: V625 = AND V612 V624
0x790: V626 = DIV V625 0x2
0x791: V627 = 0x1f
0x794: V628 = ADD V626 0x1f
0x797: V629 = DIV V628 0x20
0x799: V630 = MUL 0x20 V629
0x79b: V631 = ADD V614 V630
0x79d: V632 = ADD 0x20 V631
0x7a0: M[0x40] = V632
0x7a3: M[V614] = V626
0x7a7: V633 = ADD V614 0x20
0x7ab: V634 = ISZERO V626
0x7ac: V635 = 0x7f6
0x7af: JUMPI 0x7f6 V634
---
Entry stack: [V10, 0x116]
Stack pops: 0
Stack additions: [V614, 0x3, V626, V633, 0x3, V626]
Exit stack: [V10, 0x116, V614, 0x3, V626, V633, 0x3, V626]

================================

Block 0x7b0
[0x7b0:0x7b7]
---
Predecessors: [0x770]
Successors: [0x7b8, 0x7cb]
---
0x7b0 DUP1
0x7b1 PUSH1 0x1f
0x7b3 LT
0x7b4 PUSH2 0x7cb
0x7b7 JUMPI
---
0x7b1: V636 = 0x1f
0x7b3: V637 = LT 0x1f V626
0x7b4: V638 = 0x7cb
0x7b7: JUMPI 0x7cb V637
---
Entry stack: [V10, 0x116, V614, 0x3, V626, V633, 0x3, V626]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x116, V614, 0x3, V626, V633, 0x3, V626]

================================

Block 0x7b8
[0x7b8:0x7ca]
---
Predecessors: [0x7b0]
Successors: [0x7f6]
---
0x7b8 PUSH2 0x100
0x7bb DUP1
0x7bc DUP4
0x7bd SLOAD
0x7be DIV
0x7bf MUL
0x7c0 DUP4
0x7c1 MSTORE
0x7c2 SWAP2
0x7c3 PUSH1 0x20
0x7c5 ADD
0x7c6 SWAP2
0x7c7 PUSH2 0x7f6
0x7ca JUMP
---
0x7b8: V639 = 0x100
0x7bd: V640 = S[0x3]
0x7be: V641 = DIV V640 0x100
0x7bf: V642 = MUL V641 0x100
0x7c1: M[V633] = V642
0x7c3: V643 = 0x20
0x7c5: V644 = ADD 0x20 V633
0x7c7: V645 = 0x7f6
0x7ca: JUMP 0x7f6
---
Entry stack: [V10, 0x116, V614, 0x3, V626, V633, 0x3, V626]
Stack pops: 3
Stack additions: [V644, S1, S0]
Exit stack: [V10, 0x116, V614, 0x3, V626, V644, 0x3, V626]

================================

Block 0x7cb
[0x7cb:0x7d8]
---
Predecessors: [0x7b0]
Successors: [0x7d9]
---
0x7cb JUMPDEST
0x7cc DUP3
0x7cd ADD
0x7ce SWAP2
0x7cf SWAP1
0x7d0 PUSH1 0x0
0x7d2 MSTORE
0x7d3 PUSH1 0x20
0x7d5 PUSH1 0x0
0x7d7 SHA3
0x7d8 SWAP1
---
0x7cb: JUMPDEST 
0x7cd: V646 = ADD V633 V626
0x7d0: V647 = 0x0
0x7d2: M[0x0] = 0x3
0x7d3: V648 = 0x20
0x7d5: V649 = 0x0
0x7d7: V650 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x116, V614, 0x3, V626, V633, 0x3, V626]
Stack pops: 3
Stack additions: [V646, V650, S2]
Exit stack: [V10, 0x116, V614, 0x3, V626, V646, V650, V633]

================================

Block 0x7d9
[0x7d9:0x7ec]
---
Predecessors: [0x7cb, 0x7d9]
Successors: [0x7d9, 0x7ed]
---
0x7d9 JUMPDEST
0x7da DUP2
0x7db SLOAD
0x7dc DUP2
0x7dd MSTORE
0x7de SWAP1
0x7df PUSH1 0x1
0x7e1 ADD
0x7e2 SWAP1
0x7e3 PUSH1 0x20
0x7e5 ADD
0x7e6 DUP1
0x7e7 DUP4
0x7e8 GT
0x7e9 PUSH2 0x7d9
0x7ec JUMPI
---
0x7d9: JUMPDEST 
0x7db: V651 = S[S1]
0x7dd: M[S0] = V651
0x7df: V652 = 0x1
0x7e1: V653 = ADD 0x1 S1
0x7e3: V654 = 0x20
0x7e5: V655 = ADD 0x20 S0
0x7e8: V656 = GT V646 V655
0x7e9: V657 = 0x7d9
0x7ec: JUMPI 0x7d9 V656
---
Entry stack: [V10, 0x116, V614, 0x3, V626, V646, S1, S0]
Stack pops: 3
Stack additions: [S2, V653, V655]
Exit stack: [V10, 0x116, V614, 0x3, V626, V646, V653, V655]

================================

Block 0x7ed
[0x7ed:0x7f5]
---
Predecessors: [0x7d9]
Successors: [0x7f6]
---
0x7ed DUP3
0x7ee SWAP1
0x7ef SUB
0x7f0 PUSH1 0x1f
0x7f2 AND
0x7f3 DUP3
0x7f4 ADD
0x7f5 SWAP2
---
0x7ef: V658 = SUB V655 V646
0x7f0: V659 = 0x1f
0x7f2: V660 = AND 0x1f V658
0x7f4: V661 = ADD V646 V660
---
Entry stack: [V10, 0x116, V614, 0x3, V626, V646, V653, V655]
Stack pops: 3
Stack additions: [V661, S1, S2]
Exit stack: [V10, 0x116, V614, 0x3, V626, V661, V653, V646]

================================

Block 0x7f6
[0x7f6:0x7fd]
---
Predecessors: [0x770, 0x7b8, 0x7ed]
Successors: [0x116]
---
0x7f6 JUMPDEST
0x7f7 POP
0x7f8 POP
0x7f9 POP
0x7fa POP
0x7fb POP
0x7fc DUP2
0x7fd JUMP
---
0x7f6: JUMPDEST 
0x7fd: JUMP 0x116
---
Entry stack: [V10, 0x116, V614, 0x3, V626, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x116, V614]

================================

Block 0x7fe
[0x7fe:0x815]
---
Predecessors: [0x312]
Successors: [0x816, 0x81b]
---
0x7fe JUMPDEST
0x7ff PUSH1 0x4
0x801 SLOAD
0x802 PUSH1 0x0
0x804 SWAP1
0x805 DUP2
0x806 SWAP1
0x807 PUSH1 0xa0
0x809 PUSH1 0x2
0x80b EXP
0x80c SWAP1
0x80d DIV
0x80e PUSH1 0xff
0x810 AND
0x811 ISZERO
0x812 PUSH2 0x81b
0x815 JUMPI
---
0x7fe: JUMPDEST 
0x7ff: V662 = 0x4
0x801: V663 = S[0x4]
0x802: V664 = 0x0
0x807: V665 = 0xa0
0x809: V666 = 0x2
0x80b: V667 = EXP 0x2 0xa0
0x80d: V668 = DIV V663 0x10000000000000000000000000000000000000000
0x80e: V669 = 0xff
0x810: V670 = AND 0xff V668
0x811: V671 = ISZERO V670
0x812: V672 = 0x81b
0x815: JUMPI 0x81b V671
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0x816
[0x816:0x81a]
---
Predecessors: [0x7fe]
Successors: []
---
0x816 PUSH1 0x0
0x818 PUSH1 0x0
0x81a REVERT
---
0x816: V673 = 0x0
0x818: V674 = 0x0
0x81a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0x81b
[0x81b:0x824]
---
Predecessors: [0x7fe]
Successors: [0x825, 0x82a]
---
0x81b JUMPDEST
0x81c PUSH1 0x6
0x81e SLOAD
0x81f NUMBER
0x820 GT
0x821 PUSH2 0x82a
0x824 JUMPI
---
0x81b: JUMPDEST 
0x81c: V675 = 0x6
0x81e: V676 = S[0x6]
0x81f: V677 = NUMBER
0x820: V678 = GT V677 V676
0x821: V679 = 0x82a
0x824: JUMPI 0x82a V678
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0x825
[0x825:0x829]
---
Predecessors: [0x81b]
Successors: []
---
0x825 PUSH1 0x0
0x827 PUSH1 0x0
0x829 REVERT
---
0x825: V680 = 0x0
0x827: V681 = 0x0
0x829: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0x82a
[0x82a:0x837]
---
Predecessors: [0x81b]
Successors: [0x838, 0x83d]
---
0x82a JUMPDEST
0x82b PUSH1 0x0
0x82d SLOAD
0x82e PUSH3 0xf4240
0x832 SWAP1
0x833 LT
0x834 PUSH2 0x83d
0x837 JUMPI
---
0x82a: JUMPDEST 
0x82b: V682 = 0x0
0x82d: V683 = S[0x0]
0x82e: V684 = 0xf4240
0x833: V685 = LT V683 0xf4240
0x834: V686 = 0x83d
0x837: JUMPI 0x83d V685
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0x838
[0x838:0x83c]
---
Predecessors: [0x82a]
Successors: []
---
0x838 PUSH1 0x0
0x83a PUSH1 0x0
0x83c REVERT
---
0x838: V687 = 0x0
0x83a: V688 = 0x0
0x83c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0x83d
[0x83d:0x854]
---
Predecessors: [0x82a]
Successors: [0x855, 0x85a]
---
0x83d JUMPDEST
0x83e PUSH1 0x4
0x840 SLOAD
0x841 CALLER
0x842 PUSH1 0x1
0x844 PUSH1 0xa0
0x846 PUSH1 0x2
0x848 EXP
0x849 SUB
0x84a SWAP1
0x84b DUP2
0x84c AND
0x84d SWAP2
0x84e AND
0x84f EQ
0x850 ISZERO
0x851 PUSH2 0x85a
0x854 JUMPI
---
0x83d: JUMPDEST 
0x83e: V689 = 0x4
0x840: V690 = S[0x4]
0x841: V691 = CALLER
0x842: V692 = 0x1
0x844: V693 = 0xa0
0x846: V694 = 0x2
0x848: V695 = EXP 0x2 0xa0
0x849: V696 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84c: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0x84e: V698 = AND V690 0xffffffffffffffffffffffffffffffffffffffff
0x84f: V699 = EQ V698 V697
0x850: V700 = ISZERO V699
0x851: V701 = 0x85a
0x854: JUMPI 0x85a V700
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0x855
[0x855:0x859]
---
Predecessors: [0x83d]
Successors: []
---
0x855 PUSH1 0x0
0x857 PUSH1 0x0
0x859 REVERT
---
0x855: V702 = 0x0
0x857: V703 = 0x0
0x859: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0x85a
[0x85a:0x87c]
---
Predecessors: [0x83d]
Successors: [0x87d, 0x882]
---
0x85a JUMPDEST
0x85b PUSH1 0x1
0x85d PUSH1 0xa0
0x85f PUSH1 0x2
0x861 EXP
0x862 SUB
0x863 CALLER
0x864 AND
0x865 PUSH1 0x0
0x867 SWAP1
0x868 DUP2
0x869 MSTORE
0x86a PUSH1 0x1
0x86c PUSH1 0x20
0x86e MSTORE
0x86f PUSH1 0x40
0x871 SWAP1
0x872 SHA3
0x873 SLOAD
0x874 SWAP2
0x875 POP
0x876 DUP2
0x877 ISZERO
0x878 ISZERO
0x879 PUSH2 0x882
0x87c JUMPI
---
0x85a: JUMPDEST 
0x85b: V704 = 0x1
0x85d: V705 = 0xa0
0x85f: V706 = 0x2
0x861: V707 = EXP 0x2 0xa0
0x862: V708 = SUB 0x10000000000000000000000000000000000000000 0x1
0x863: V709 = CALLER
0x864: V710 = AND V709 0xffffffffffffffffffffffffffffffffffffffff
0x865: V711 = 0x0
0x869: M[0x0] = V710
0x86a: V712 = 0x1
0x86c: V713 = 0x20
0x86e: M[0x20] = 0x1
0x86f: V714 = 0x40
0x872: V715 = SHA3 0x0 0x40
0x873: V716 = S[V715]
0x877: V717 = ISZERO V716
0x878: V718 = ISZERO V717
0x879: V719 = 0x882
0x87c: JUMPI 0x882 V718
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 2
Stack additions: [V716, S0]
Exit stack: [V10, 0x278, V716, 0x0]

================================

Block 0x87d
[0x87d:0x881]
---
Predecessors: [0x85a]
Successors: []
---
0x87d PUSH1 0x0
0x87f PUSH1 0x0
0x881 REVERT
---
0x87d: V720 = 0x0
0x87f: V721 = 0x0
0x881: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, V716, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, V716, 0x0]

================================

Block 0x882
[0x882:0x8a7]
---
Predecessors: [0x85a]
Successors: [0xb62]
---
0x882 JUMPDEST
0x883 PUSH1 0x1
0x885 PUSH1 0xa0
0x887 PUSH1 0x2
0x889 EXP
0x88a SUB
0x88b CALLER
0x88c AND
0x88d PUSH1 0x0
0x88f SWAP1
0x890 DUP2
0x891 MSTORE
0x892 PUSH1 0x1
0x894 PUSH1 0x20
0x896 MSTORE
0x897 PUSH1 0x40
0x899 DUP2
0x89a SHA3
0x89b DUP2
0x89c SWAP1
0x89d SSTORE
0x89e SLOAD
0x89f PUSH2 0x8a8
0x8a2 SWAP1
0x8a3 DUP4
0x8a4 PUSH2 0xb62
0x8a7 JUMP
---
0x882: JUMPDEST 
0x883: V722 = 0x1
0x885: V723 = 0xa0
0x887: V724 = 0x2
0x889: V725 = EXP 0x2 0xa0
0x88a: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88b: V727 = CALLER
0x88c: V728 = AND V727 0xffffffffffffffffffffffffffffffffffffffff
0x88d: V729 = 0x0
0x891: M[0x0] = V728
0x892: V730 = 0x1
0x894: V731 = 0x20
0x896: M[0x20] = 0x1
0x897: V732 = 0x40
0x89a: V733 = SHA3 0x0 0x40
0x89d: S[V733] = 0x0
0x89e: V734 = S[0x0]
0x89f: V735 = 0x8a8
0x8a4: V736 = 0xb62
0x8a7: JUMP 0xb62
---
Entry stack: [V10, 0x278, V716, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x8a8, V734, S1]
Exit stack: [V10, 0x278, V716, 0x0, 0x8a8, V734, V716]

================================

Block 0x8a8
[0x8a8:0x8b0]
---
Predecessors: [0xb76]
Successors: [0x8b1]
---
0x8a8 JUMPDEST
0x8a9 PUSH1 0x0
0x8ab SSTORE
0x8ac PUSH3 0xf4240
0x8b0 DUP3
---
0x8a8: JUMPDEST 
0x8a9: V737 = 0x0
0x8ab: S[0x0] = V947
0x8ac: V738 = 0xf4240
---
Entry stack: [V10, 0x278, V716, 0x0, V947]
Stack pops: 3
Stack additions: [S2, S1, 0xf4240, S2]
Exit stack: [V10, 0x278, V716, 0x0, 0xf4240, V716]

================================

Block 0x8b1
[0x8b1:0x920]
---
Predecessors: [0x8a8]
Successors: [0x921, 0x926]
---
0x8b1 JUMPDEST
0x8b2 DIV
0x8b3 SWAP1
0x8b4 POP
0x8b5 CALLER
0x8b6 PUSH1 0x1
0x8b8 PUSH1 0xa0
0x8ba PUSH1 0x2
0x8bc EXP
0x8bd SUB
0x8be AND
0x8bf PUSH32 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7
0x8e0 DUP3
0x8e1 PUSH1 0x40
0x8e3 MLOAD
0x8e4 DUP1
0x8e5 DUP3
0x8e6 DUP2
0x8e7 MSTORE
0x8e8 PUSH1 0x20
0x8ea ADD
0x8eb SWAP2
0x8ec POP
0x8ed POP
0x8ee PUSH1 0x40
0x8f0 MLOAD
0x8f1 DUP1
0x8f2 SWAP2
0x8f3 SUB
0x8f4 SWAP1
0x8f5 LOG2
0x8f6 PUSH1 0x40
0x8f8 MLOAD
0x8f9 PUSH1 0x1
0x8fb PUSH1 0xa0
0x8fd PUSH1 0x2
0x8ff EXP
0x900 SUB
0x901 CALLER
0x902 AND
0x903 SWAP1
0x904 DUP3
0x905 ISZERO
0x906 PUSH2 0x8fc
0x909 MUL
0x90a SWAP1
0x90b DUP4
0x90c SWAP1
0x90d PUSH1 0x0
0x90f DUP2
0x910 DUP2
0x911 DUP2
0x912 DUP6
0x913 DUP9
0x914 DUP9
0x915 CALL
0x916 SWAP4
0x917 POP
0x918 POP
0x919 POP
0x91a POP
0x91b ISZERO
0x91c ISZERO
0x91d PUSH2 0x926
0x920 JUMPI
---
0x8b1: JUMPDEST 
0x8b2: V739 = DIV V716 0xf4240
0x8b5: V740 = CALLER
0x8b6: V741 = 0x1
0x8b8: V742 = 0xa0
0x8ba: V743 = 0x2
0x8bc: V744 = EXP 0x2 0xa0
0x8bd: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8be: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V740
0x8bf: V747 = 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7
0x8e1: V748 = 0x40
0x8e3: V749 = M[0x40]
0x8e7: M[V749] = V739
0x8e8: V750 = 0x20
0x8ea: V751 = ADD 0x20 V749
0x8ee: V752 = 0x40
0x8f0: V753 = M[0x40]
0x8f3: V754 = SUB V751 V753
0x8f5: LOG V753 V754 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7 V746
0x8f6: V755 = 0x40
0x8f8: V756 = M[0x40]
0x8f9: V757 = 0x1
0x8fb: V758 = 0xa0
0x8fd: V759 = 0x2
0x8ff: V760 = EXP 0x2 0xa0
0x900: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x901: V762 = CALLER
0x902: V763 = AND V762 0xffffffffffffffffffffffffffffffffffffffff
0x905: V764 = ISZERO V739
0x906: V765 = 0x8fc
0x909: V766 = MUL 0x8fc V764
0x90d: V767 = 0x0
0x915: V768 = CALL V766 V763 V739 V756 0x0 V756 0x0
0x91b: V769 = ISZERO V768
0x91c: V770 = ISZERO V769
0x91d: V771 = 0x926
0x920: JUMPI 0x926 V770
---
Entry stack: [V10, 0x278, V716, 0x0, 0xf4240, V716]
Stack pops: 3
Stack additions: [V739]
Exit stack: [V10, 0x278, V716, V739]

================================

Block 0x921
[0x921:0x925]
---
Predecessors: [0x8b1]
Successors: []
---
0x921 PUSH1 0x0
0x923 PUSH1 0x0
0x925 REVERT
---
0x921: V772 = 0x0
0x923: V773 = 0x0
0x925: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, V716, V739]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, V716, V739]

================================

Block 0x926
[0x926:0x926]
---
Predecessors: [0x8b1]
Successors: [0x927]
---
0x926 JUMPDEST
---
0x926: JUMPDEST 
---
Entry stack: [V10, 0x278, V716, V739]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, V716, V739]

================================

Block 0x927
[0x927:0x92a]
---
Predecessors: [0x926]
Successors: [0x278]
---
0x927 JUMPDEST
0x928 POP
0x929 POP
0x92a JUMP
---
0x927: JUMPDEST 
0x92a: JUMP 0x278
---
Entry stack: [V10, 0x278, V716, V739]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x92b
[0x92b:0x944]
---
Predecessors: [0x324]
Successors: [0x945]
---
0x92b JUMPDEST
0x92c PUSH1 0x1
0x92e PUSH1 0xa0
0x930 PUSH1 0x2
0x932 EXP
0x933 SUB
0x934 DUP2
0x935 AND
0x936 PUSH1 0x0
0x938 SWAP1
0x939 DUP2
0x93a MSTORE
0x93b PUSH1 0x1
0x93d PUSH1 0x20
0x93f MSTORE
0x940 PUSH1 0x40
0x942 SWAP1
0x943 SHA3
0x944 SLOAD
---
0x92b: JUMPDEST 
0x92c: V774 = 0x1
0x92e: V775 = 0xa0
0x930: V776 = 0x2
0x932: V777 = EXP 0x2 0xa0
0x933: V778 = SUB 0x10000000000000000000000000000000000000000 0x1
0x935: V779 = AND V265 0xffffffffffffffffffffffffffffffffffffffff
0x936: V780 = 0x0
0x93a: M[0x0] = V779
0x93b: V781 = 0x1
0x93d: V782 = 0x20
0x93f: M[0x20] = 0x1
0x940: V783 = 0x40
0x943: V784 = SHA3 0x0 0x40
0x944: V785 = S[V784]
---
Entry stack: [V10, 0x1d9, V265]
Stack pops: 1
Stack additions: [S0, V785]
Exit stack: [V10, 0x1d9, V265, V785]

================================

Block 0x945
[0x945:0x949]
---
Predecessors: [0x92b]
Successors: [0x1d9]
---
0x945 JUMPDEST
0x946 SWAP2
0x947 SWAP1
0x948 POP
0x949 JUMP
---
0x945: JUMPDEST 
0x949: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9, V265, V785]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V785]

================================

Block 0x94a
[0x94a:0x959]
---
Predecessors: [0x352]
Successors: [0x1b5]
---
0x94a JUMPDEST
0x94b PUSH1 0x4
0x94d SLOAD
0x94e PUSH1 0xa0
0x950 PUSH1 0x2
0x952 EXP
0x953 SWAP1
0x954 DIV
0x955 PUSH1 0xff
0x957 AND
0x958 DUP2
0x959 JUMP
---
0x94a: JUMPDEST 
0x94b: V786 = 0x4
0x94d: V787 = S[0x4]
0x94e: V788 = 0xa0
0x950: V789 = 0x2
0x952: V790 = EXP 0x2 0xa0
0x954: V791 = DIV V787 0x10000000000000000000000000000000000000000
0x955: V792 = 0xff
0x957: V793 = AND 0xff V791
0x959: JUMP 0x1b5
---
Entry stack: [V10, 0x1b5]
Stack pops: 1
Stack additions: [S0, V793]
Exit stack: [V10, 0x1b5, V793]

================================

Block 0x95a
[0x95a:0x960]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x95a JUMPDEST
0x95b PUSH3 0xf4240
0x95f DUP2
0x960 JUMP
---
0x95a: JUMPDEST 
0x95b: V794 = 0xf4240
0x960: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, 0xf4240]
Exit stack: [S0, 0xf4240]

================================

Block 0x961
[0x961:0x966]
---
Predecessors: [0x398]
Successors: [0x1d9]
---
0x961 JUMPDEST
0x962 PUSH1 0x6
0x964 SLOAD
0x965 DUP2
0x966 JUMP
---
0x961: JUMPDEST 
0x962: V795 = 0x6
0x964: V796 = S[0x6]
0x966: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9]
Stack pops: 1
Stack additions: [S0, V796]
Exit stack: [V10, 0x1d9, V796]

================================

Block 0x967
[0x967:0x99d]
---
Predecessors: [0x3ba]
Successors: [0x116]
---
0x967 JUMPDEST
0x968 PUSH1 0x40
0x96a DUP1
0x96b MLOAD
0x96c DUP1
0x96d DUP3
0x96e ADD
0x96f SWAP1
0x970 SWAP2
0x971 MSTORE
0x972 PUSH1 0x6
0x974 DUP2
0x975 MSTORE
0x976 PUSH32 0xe29881efb88f0000000000000000000000000000000000000000000000000000
0x997 PUSH1 0x20
0x999 DUP3
0x99a ADD
0x99b MSTORE
0x99c DUP2
0x99d JUMP
---
0x967: JUMPDEST 
0x968: V797 = 0x40
0x96b: V798 = M[0x40]
0x96e: V799 = ADD 0x40 V798
0x971: M[0x40] = V799
0x972: V800 = 0x6
0x975: M[V798] = 0x6
0x976: V801 = 0xe29881efb88f0000000000000000000000000000000000000000000000000000
0x997: V802 = 0x20
0x99a: V803 = ADD V798 0x20
0x99b: M[V803] = 0xe29881efb88f0000000000000000000000000000000000000000000000000000
0x99d: JUMP 0x116
---
Entry stack: [V10, 0x116]
Stack pops: 1
Stack additions: [S0, V798]
Exit stack: [V10, 0x116, V798]

================================

Block 0x99e
[0x99e:0x9ac]
---
Predecessors: [0x44a]
Successors: [0x452]
---
0x99e JUMPDEST
0x99f PUSH1 0x4
0x9a1 SLOAD
0x9a2 PUSH1 0x1
0x9a4 PUSH1 0xa0
0x9a6 PUSH1 0x2
0x9a8 EXP
0x9a9 SUB
0x9aa AND
0x9ab DUP2
0x9ac JUMP
---
0x99e: JUMPDEST 
0x99f: V804 = 0x4
0x9a1: V805 = S[0x4]
0x9a2: V806 = 0x1
0x9a4: V807 = 0xa0
0x9a6: V808 = 0x2
0x9a8: V809 = EXP 0x2 0xa0
0x9a9: V810 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9aa: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0x9ac: JUMP 0x452
---
Entry stack: [V10, 0x452]
Stack pops: 1
Stack additions: [S0, V811]
Exit stack: [V10, 0x452, V811]

================================

Block 0x9ad
[0x9ad:0x9d0]
---
Predecessors: [0x476]
Successors: [0x9d1, 0x9d6]
---
0x9ad JUMPDEST
0x9ae PUSH1 0x1
0x9b0 PUSH1 0xa0
0x9b2 PUSH1 0x2
0x9b4 EXP
0x9b5 SUB
0x9b6 CALLER
0x9b7 AND
0x9b8 PUSH1 0x0
0x9ba SWAP1
0x9bb DUP2
0x9bc MSTORE
0x9bd PUSH1 0x1
0x9bf PUSH1 0x20
0x9c1 MSTORE
0x9c2 PUSH1 0x40
0x9c4 DUP2
0x9c5 SHA3
0x9c6 SLOAD
0x9c7 DUP3
0x9c8 SWAP1
0x9c9 LT
0x9ca DUP1
0x9cb ISZERO
0x9cc SWAP1
0x9cd PUSH2 0x9d6
0x9d0 JUMPI
---
0x9ad: JUMPDEST 
0x9ae: V812 = 0x1
0x9b0: V813 = 0xa0
0x9b2: V814 = 0x2
0x9b4: V815 = EXP 0x2 0xa0
0x9b5: V816 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b6: V817 = CALLER
0x9b7: V818 = AND V817 0xffffffffffffffffffffffffffffffffffffffff
0x9b8: V819 = 0x0
0x9bc: M[0x0] = V818
0x9bd: V820 = 0x1
0x9bf: V821 = 0x20
0x9c1: M[0x20] = 0x1
0x9c2: V822 = 0x40
0x9c5: V823 = SHA3 0x0 0x40
0x9c6: V824 = S[V823]
0x9c9: V825 = LT V824 V385
0x9cb: V826 = ISZERO V825
0x9cd: V827 = 0x9d6
0x9d0: JUMPI 0x9d6 V825
---
Entry stack: [V10, 0x1b5, V383, V385]
Stack pops: 1
Stack additions: [S0, 0x0, V826]
Exit stack: [V10, 0x1b5, V383, V385, 0x0, V826]

================================

Block 0x9d1
[0x9d1:0x9d5]
---
Predecessors: [0x9ad]
Successors: [0x9d6]
---
0x9d1 POP
0x9d2 PUSH1 0x0
0x9d4 DUP3
0x9d5 GT
---
0x9d2: V828 = 0x0
0x9d5: V829 = GT V385 0x0
---
Entry stack: [V10, 0x1b5, V383, V385, 0x0, V826]
Stack pops: 3
Stack additions: [S2, S1, V829]
Exit stack: [V10, 0x1b5, V383, V385, 0x0, V829]

================================

Block 0x9d6
[0x9d6:0x9db]
---
Predecessors: [0x9ad, 0x9d1]
Successors: [0x9dc, 0xa4a]
---
0x9d6 JUMPDEST
0x9d7 ISZERO
0x9d8 PUSH2 0xa4a
0x9db JUMPI
---
0x9d6: JUMPDEST 
0x9d7: V830 = ISZERO S0
0x9d8: V831 = 0xa4a
0x9db: JUMPI 0xa4a V830
---
Entry stack: [V10, 0x1b5, V383, V385, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b5, V383, V385, 0x0]

================================

Block 0x9dc
[0x9dc:0xa49]
---
Predecessors: [0x9d6]
Successors: [0x59d]
---
0x9dc PUSH1 0x1
0x9de PUSH1 0xa0
0x9e0 PUSH1 0x2
0x9e2 EXP
0x9e3 SUB
0x9e4 CALLER
0x9e5 DUP2
0x9e6 AND
0x9e7 PUSH1 0x0
0x9e9 DUP2
0x9ea DUP2
0x9eb MSTORE
0x9ec PUSH1 0x1
0x9ee PUSH1 0x20
0x9f0 SWAP1
0x9f1 DUP2
0x9f2 MSTORE
0x9f3 PUSH1 0x40
0x9f5 DUP1
0x9f6 DUP4
0x9f7 SHA3
0x9f8 DUP1
0x9f9 SLOAD
0x9fa DUP9
0x9fb SWAP1
0x9fc SUB
0x9fd SWAP1
0x9fe SSTORE
0x9ff SWAP4
0xa00 DUP8
0xa01 AND
0xa02 DUP1
0xa03 DUP4
0xa04 MSTORE
0xa05 SWAP2
0xa06 DUP5
0xa07 SWAP1
0xa08 SHA3
0xa09 DUP1
0xa0a SLOAD
0xa0b DUP8
0xa0c ADD
0xa0d SWAP1
0xa0e SSTORE
0xa0f DUP4
0xa10 MLOAD
0xa11 DUP7
0xa12 DUP2
0xa13 MSTORE
0xa14 SWAP4
0xa15 MLOAD
0xa16 SWAP2
0xa17 SWAP4
0xa18 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa39 SWAP3
0xa3a SWAP1
0xa3b DUP2
0xa3c SWAP1
0xa3d SUB
0xa3e SWAP1
0xa3f SWAP2
0xa40 ADD
0xa41 SWAP1
0xa42 LOG3
0xa43 POP
0xa44 PUSH1 0x1
0xa46 PUSH2 0x59d
0xa49 JUMP
---
0x9dc: V832 = 0x1
0x9de: V833 = 0xa0
0x9e0: V834 = 0x2
0x9e2: V835 = EXP 0x2 0xa0
0x9e3: V836 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e4: V837 = CALLER
0x9e6: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff V837
0x9e7: V839 = 0x0
0x9eb: M[0x0] = V838
0x9ec: V840 = 0x1
0x9ee: V841 = 0x20
0x9f2: M[0x20] = 0x1
0x9f3: V842 = 0x40
0x9f7: V843 = SHA3 0x0 0x40
0x9f9: V844 = S[V843]
0x9fc: V845 = SUB V844 V385
0x9fe: S[V843] = V845
0xa01: V846 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0xa04: M[0x0] = V846
0xa08: V847 = SHA3 0x0 0x40
0xa0a: V848 = S[V847]
0xa0c: V849 = ADD V385 V848
0xa0e: S[V847] = V849
0xa10: V850 = M[0x40]
0xa13: M[V850] = V385
0xa15: V851 = M[0x40]
0xa18: V852 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa3d: V853 = SUB V850 V851
0xa40: V854 = ADD 0x20 V853
0xa42: LOG V851 V854 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V838 V846
0xa44: V855 = 0x1
0xa46: V856 = 0x59d
0xa49: JUMP 0x59d
---
Entry stack: [V10, 0x1b5, V383, V385, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x1b5, V383, V385, 0x1]

================================

Block 0xa4a
[0xa4a:0xa51]
---
Predecessors: [0x9d6]
Successors: [0x59d]
---
0xa4a JUMPDEST
0xa4b POP
0xa4c PUSH1 0x0
0xa4e PUSH2 0x59d
0xa51 JUMP
---
0xa4a: JUMPDEST 
0xa4c: V857 = 0x0
0xa4e: V858 = 0x59d
0xa51: JUMP 0x59d
---
Entry stack: [V10, 0x1b5, V383, V385, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1b5, V383, V385, 0x0]

================================

Block 0xa52
[0xa52:0xa52]
---
Predecessors: []
Successors: [0xa53]
---
0xa52 JUMPDEST
---
0xa52: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa53
[0xa53:0xa58]
---
Predecessors: [0xa52]
Successors: []
Has unresolved jump.
---
0xa53 JUMPDEST
0xa54 SWAP3
0xa55 SWAP2
0xa56 POP
0xa57 POP
0xa58 JUMP
---
0xa53: JUMPDEST 
0xa58: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xa59
[0xa59:0xa70]
---
Predecessors: [0x4a1]
Successors: [0xa71, 0xa76]
---
0xa59 JUMPDEST
0xa5a PUSH1 0x4
0xa5c SLOAD
0xa5d PUSH1 0x0
0xa5f SWAP1
0xa60 DUP2
0xa61 SWAP1
0xa62 PUSH1 0xa0
0xa64 PUSH1 0x2
0xa66 EXP
0xa67 SWAP1
0xa68 DIV
0xa69 PUSH1 0xff
0xa6b AND
0xa6c ISZERO
0xa6d PUSH2 0xa76
0xa70 JUMPI
---
0xa59: JUMPDEST 
0xa5a: V859 = 0x4
0xa5c: V860 = S[0x4]
0xa5d: V861 = 0x0
0xa62: V862 = 0xa0
0xa64: V863 = 0x2
0xa66: V864 = EXP 0x2 0xa0
0xa68: V865 = DIV V860 0x10000000000000000000000000000000000000000
0xa69: V866 = 0xff
0xa6b: V867 = AND 0xff V865
0xa6c: V868 = ISZERO V867
0xa6d: V869 = 0xa76
0xa70: JUMPI 0xa76 V868
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0xa71
[0xa71:0xa75]
---
Predecessors: [0xa59]
Successors: []
---
0xa71 PUSH1 0x0
0xa73 PUSH1 0x0
0xa75 REVERT
---
0xa71: V870 = 0x0
0xa73: V871 = 0x0
0xa75: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0xa76
[0xa76:0xa80]
---
Predecessors: [0xa59]
Successors: [0xa81, 0xa86]
---
0xa76 JUMPDEST
0xa77 PUSH1 0x5
0xa79 SLOAD
0xa7a NUMBER
0xa7b LT
0xa7c ISZERO
0xa7d PUSH2 0xa86
0xa80 JUMPI
---
0xa76: JUMPDEST 
0xa77: V872 = 0x5
0xa79: V873 = S[0x5]
0xa7a: V874 = NUMBER
0xa7b: V875 = LT V874 V873
0xa7c: V876 = ISZERO V875
0xa7d: V877 = 0xa86
0xa80: JUMPI 0xa86 V876
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0xa81
[0xa81:0xa85]
---
Predecessors: [0xa76]
Successors: []
---
0xa81 PUSH1 0x0
0xa83 PUSH1 0x0
0xa85 REVERT
---
0xa81: V878 = 0x0
0xa83: V879 = 0x0
0xa85: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0xa86
[0xa86:0xa90]
---
Predecessors: [0xa76]
Successors: [0xa91, 0xa96]
---
0xa86 JUMPDEST
0xa87 PUSH1 0x6
0xa89 SLOAD
0xa8a NUMBER
0xa8b GT
0xa8c ISZERO
0xa8d PUSH2 0xa96
0xa90 JUMPI
---
0xa86: JUMPDEST 
0xa87: V880 = 0x6
0xa89: V881 = S[0x6]
0xa8a: V882 = NUMBER
0xa8b: V883 = GT V882 V881
0xa8c: V884 = ISZERO V883
0xa8d: V885 = 0xa96
0xa90: JUMPI 0xa96 V884
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0xa91
[0xa91:0xa95]
---
Predecessors: [0xa86]
Successors: []
---
0xa91 PUSH1 0x0
0xa93 PUSH1 0x0
0xa95 REVERT
---
0xa91: V886 = 0x0
0xa93: V887 = 0x0
0xa95: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0xa96
[0xa96:0xa9d]
---
Predecessors: [0xa86]
Successors: [0xa9e, 0xaa3]
---
0xa96 JUMPDEST
0xa97 CALLVALUE
0xa98 ISZERO
0xa99 ISZERO
0xa9a PUSH2 0xaa3
0xa9d JUMPI
---
0xa96: JUMPDEST 
0xa97: V888 = CALLVALUE
0xa98: V889 = ISZERO V888
0xa99: V890 = ISZERO V889
0xa9a: V891 = 0xaa3
0xa9d: JUMPI 0xaa3 V890
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0xa9e
[0xa9e:0xaa2]
---
Predecessors: [0xa96]
Successors: []
---
0xa9e PUSH1 0x0
0xaa0 PUSH1 0x0
0xaa2 REVERT
---
0xa9e: V892 = 0x0
0xaa0: V893 = 0x0
0xaa2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0]

================================

Block 0xaa3
[0xaa3:0xaaf]
---
Predecessors: [0xa96]
Successors: [0xb7d]
---
0xaa3 JUMPDEST
0xaa4 PUSH2 0xab0
0xaa7 CALLVALUE
0xaa8 PUSH3 0xf4240
0xaac PUSH2 0xb7d
0xaaf JUMP
---
0xaa3: JUMPDEST 
0xaa4: V894 = 0xab0
0xaa7: V895 = CALLVALUE
0xaa8: V896 = 0xf4240
0xaac: V897 = 0xb7d
0xaaf: JUMP 0xb7d
---
Entry stack: [V10, 0x278, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xab0, V895, 0xf4240]
Exit stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240]

================================

Block 0xab0
[0xab0:0xabd]
---
Predecessors: [0xba5]
Successors: [0xbac]
---
0xab0 JUMPDEST
0xab1 SWAP2
0xab2 POP
0xab3 PUSH2 0xabe
0xab6 PUSH1 0x0
0xab8 SLOAD
0xab9 DUP4
0xaba PUSH2 0xbac
0xabd JUMP
---
0xab0: JUMPDEST 
0xab3: V898 = 0xabe
0xab6: V899 = 0x0
0xab8: V900 = S[0x0]
0xaba: V901 = 0xbac
0xabd: JUMP 0xbac
---
Entry stack: [V10, 0x278, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S0, S1, 0xabe, V900, S0]
Exit stack: [V10, 0x278, S0, 0x0, 0xabe, V900, S0]

================================

Block 0xabe
[0xabe:0xacb]
---
Predecessors: [0xba5]
Successors: [0xacc, 0xad1]
---
0xabe JUMPDEST
0xabf SWAP1
0xac0 POP
0xac1 DUP1
0xac2 PUSH3 0xf4240
0xac6 LT
0xac7 ISZERO
0xac8 PUSH2 0xad1
0xacb JUMPI
---
0xabe: JUMPDEST 
0xac2: V902 = 0xf4240
0xac6: V903 = LT 0xf4240 S0
0xac7: V904 = ISZERO V903
0xac8: V905 = 0xad1
0xacb: JUMPI 0xad1 V904
---
Entry stack: [V10, 0x278, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x278, S2, S0]

================================

Block 0xacc
[0xacc:0xad0]
---
Predecessors: [0xabe]
Successors: []
---
0xacc PUSH1 0x0
0xace PUSH1 0x0
0xad0 REVERT
---
0xacc: V906 = 0x0
0xace: V907 = 0x0
0xad0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, S1, S0]

================================

Block 0xad1
[0xad1:0xb2a]
---
Predecessors: [0xabe]
Successors: [0xb2b]
---
0xad1 JUMPDEST
0xad2 PUSH1 0x0
0xad4 DUP2
0xad5 DUP2
0xad6 SSTORE
0xad7 PUSH1 0x1
0xad9 PUSH1 0xa0
0xadb PUSH1 0x2
0xadd EXP
0xade SUB
0xadf CALLER
0xae0 AND
0xae1 DUP1
0xae2 DUP3
0xae3 MSTORE
0xae4 PUSH1 0x1
0xae6 PUSH1 0x20
0xae8 SWAP1
0xae9 DUP2
0xaea MSTORE
0xaeb PUSH1 0x40
0xaed SWAP3
0xaee DUP4
0xaef SWAP1
0xaf0 SHA3
0xaf1 DUP1
0xaf2 SLOAD
0xaf3 DUP7
0xaf4 ADD
0xaf5 SWAP1
0xaf6 SSTORE
0xaf7 DUP3
0xaf8 MLOAD
0xaf9 DUP6
0xafa DUP2
0xafb MSTORE
0xafc SWAP3
0xafd MLOAD
0xafe SWAP2
0xaff SWAP3
0xb00 PUSH32 0xf042abfe501a40f1ac8cee4c04b5a869eea79d71c19509906a6af6e40b65a1c9
0xb21 SWAP3
0xb22 SWAP1
0xb23 DUP2
0xb24 SWAP1
0xb25 SUB
0xb26 SWAP1
0xb27 SWAP2
0xb28 ADD
0xb29 SWAP1
0xb2a LOG2
---
0xad1: JUMPDEST 
0xad2: V908 = 0x0
0xad6: S[0x0] = S0
0xad7: V909 = 0x1
0xad9: V910 = 0xa0
0xadb: V911 = 0x2
0xadd: V912 = EXP 0x2 0xa0
0xade: V913 = SUB 0x10000000000000000000000000000000000000000 0x1
0xadf: V914 = CALLER
0xae0: V915 = AND V914 0xffffffffffffffffffffffffffffffffffffffff
0xae3: M[0x0] = V915
0xae4: V916 = 0x1
0xae6: V917 = 0x20
0xaea: M[0x20] = 0x1
0xaeb: V918 = 0x40
0xaf0: V919 = SHA3 0x0 0x40
0xaf2: V920 = S[V919]
0xaf4: V921 = ADD S1 V920
0xaf6: S[V919] = V921
0xaf8: V922 = M[0x40]
0xafb: M[V922] = S1
0xafd: V923 = M[0x40]
0xb00: V924 = 0xf042abfe501a40f1ac8cee4c04b5a869eea79d71c19509906a6af6e40b65a1c9
0xb25: V925 = SUB V922 V923
0xb28: V926 = ADD 0x20 V925
0xb2a: LOG V923 V926 0xf042abfe501a40f1ac8cee4c04b5a869eea79d71c19509906a6af6e40b65a1c9 V915
---
Entry stack: [V10, 0x278, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x278, S1, S0]

================================

Block 0xb2b
[0xb2b:0xb2e]
---
Predecessors: [0xad1]
Successors: [0x278]
---
0xb2b JUMPDEST
0xb2c POP
0xb2d POP
0xb2e JUMP
---
0xb2b: JUMPDEST 
0xb2e: JUMP 0x278
---
Entry stack: [V10, 0x278, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2f
[0xb2f:0xb34]
---
Predecessors: [0x4b3]
Successors: [0x1d9]
---
0xb2f JUMPDEST
0xb30 PUSH1 0x5
0xb32 SLOAD
0xb33 DUP2
0xb34 JUMP
---
0xb2f: JUMPDEST 
0xb30: V927 = 0x5
0xb32: V928 = S[0x5]
0xb34: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9]
Stack pops: 1
Stack additions: [S0, V928]
Exit stack: [V10, 0x1d9, V928]

================================

Block 0xb35
[0xb35:0xb5b]
---
Predecessors: [0x4d5]
Successors: [0xb5c]
---
0xb35 JUMPDEST
0xb36 PUSH1 0x1
0xb38 PUSH1 0xa0
0xb3a PUSH1 0x2
0xb3c EXP
0xb3d SUB
0xb3e DUP1
0xb3f DUP4
0xb40 AND
0xb41 PUSH1 0x0
0xb43 SWAP1
0xb44 DUP2
0xb45 MSTORE
0xb46 PUSH1 0x2
0xb48 PUSH1 0x20
0xb4a SWAP1
0xb4b DUP2
0xb4c MSTORE
0xb4d PUSH1 0x40
0xb4f DUP1
0xb50 DUP4
0xb51 SHA3
0xb52 SWAP4
0xb53 DUP6
0xb54 AND
0xb55 DUP4
0xb56 MSTORE
0xb57 SWAP3
0xb58 SWAP1
0xb59 MSTORE
0xb5a SHA3
0xb5b SLOAD
---
0xb35: JUMPDEST 
0xb36: V929 = 0x1
0xb38: V930 = 0xa0
0xb3a: V931 = 0x2
0xb3c: V932 = EXP 0x2 0xa0
0xb3d: V933 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb40: V934 = AND V419 0xffffffffffffffffffffffffffffffffffffffff
0xb41: V935 = 0x0
0xb45: M[0x0] = V934
0xb46: V936 = 0x2
0xb48: V937 = 0x20
0xb4c: M[0x20] = 0x2
0xb4d: V938 = 0x40
0xb51: V939 = SHA3 0x0 0x40
0xb54: V940 = AND V422 0xffffffffffffffffffffffffffffffffffffffff
0xb56: M[0x0] = V940
0xb59: M[0x20] = V939
0xb5a: V941 = SHA3 0x0 0x40
0xb5b: V942 = S[V941]
---
Entry stack: [V10, 0x1d9, V419, V422]
Stack pops: 2
Stack additions: [S1, S0, V942]
Exit stack: [V10, 0x1d9, V419, V422, V942]

================================

Block 0xb5c
[0xb5c:0xb61]
---
Predecessors: [0xb35]
Successors: [0x1d9]
---
0xb5c JUMPDEST
0xb5d SWAP3
0xb5e SWAP2
0xb5f POP
0xb60 POP
0xb61 JUMP
---
0xb5c: JUMPDEST 
0xb61: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9, V419, V422, V942]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V942]

================================

Block 0xb62
[0xb62:0xb6d]
---
Predecessors: [0x882]
Successors: [0xb6e, 0xb6f]
---
0xb62 JUMPDEST
0xb63 PUSH1 0x0
0xb65 DUP1
0xb66 DUP3
0xb67 DUP5
0xb68 LT
0xb69 ISZERO
0xb6a PUSH2 0xb6f
0xb6d JUMPI
---
0xb62: JUMPDEST 
0xb63: V943 = 0x0
0xb68: V944 = LT V734 V716
0xb69: V945 = ISZERO V944
0xb6a: V946 = 0xb6f
0xb6d: JUMPI 0xb6f V945
---
Entry stack: [V10, 0x278, V716, 0x0, 0x8a8, V734, V716]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V10, 0x278, V716, 0x0, 0x8a8, V734, V716, 0x0, 0x0]

================================

Block 0xb6e
[0xb6e:0xb6e]
---
Predecessors: [0xb62]
Successors: []
---
0xb6e INVALID
---
0xb6e: INVALID 
---
Entry stack: [V10, 0x278, V716, 0x0, 0x8a8, V734, V716, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, V716, 0x0, 0x8a8, V734, V716, 0x0, 0x0]

================================

Block 0xb6f
[0xb6f:0xb75]
---
Predecessors: [0xb62]
Successors: [0xb76]
---
0xb6f JUMPDEST
0xb70 POP
0xb71 POP
0xb72 DUP1
0xb73 DUP3
0xb74 SUB
0xb75 DUP1
---
0xb6f: JUMPDEST 
0xb74: V947 = SUB V734 V716
---
Entry stack: [V10, 0x278, V716, 0x0, 0x8a8, V734, V716, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V947, V947]
Exit stack: [V10, 0x278, V716, 0x0, 0x8a8, V734, V716, V947, V947]

================================

Block 0xb76
[0xb76:0xb7c]
---
Predecessors: [0xb6f]
Successors: [0x8a8]
---
0xb76 JUMPDEST
0xb77 POP
0xb78 SWAP3
0xb79 SWAP2
0xb7a POP
0xb7b POP
0xb7c JUMP
---
0xb76: JUMPDEST 
0xb7c: JUMP 0x8a8
---
Entry stack: [V10, 0x278, V716, 0x0, 0x8a8, V734, V716, V947, V947]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x278, V716, 0x0, V947]

================================

Block 0xb7d
[0xb7d:0xb89]
---
Predecessors: [0xaa3]
Successors: [0xb8a, 0xb99]
---
0xb7d JUMPDEST
0xb7e PUSH1 0x0
0xb80 DUP3
0xb81 DUP3
0xb82 MUL
0xb83 DUP4
0xb84 ISZERO
0xb85 DUP1
0xb86 PUSH2 0xb99
0xb89 JUMPI
---
0xb7d: JUMPDEST 
0xb7e: V948 = 0x0
0xb82: V949 = MUL 0xf4240 V895
0xb84: V950 = ISZERO V895
0xb86: V951 = 0xb99
0xb89: JUMPI 0xb99 V950
---
Entry stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V949, V950]
Exit stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240, 0x0, V949, V950]

================================

Block 0xb8a
[0xb8a:0xb94]
---
Predecessors: [0xb7d]
Successors: [0xb95, 0xb96]
---
0xb8a POP
0xb8b DUP3
0xb8c DUP5
0xb8d DUP3
0xb8e DUP2
0xb8f ISZERO
0xb90 ISZERO
0xb91 PUSH2 0xb96
0xb94 JUMPI
---
0xb8f: V952 = ISZERO V895
0xb90: V953 = ISZERO V952
0xb91: V954 = 0xb96
0xb94: JUMPI 0xb96 V953
---
Entry stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240, 0x0, V949, V950]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240, 0x0, V949, 0xf4240, V895, V949]

================================

Block 0xb95
[0xb95:0xb95]
---
Predecessors: [0xb8a]
Successors: []
---
0xb95 INVALID
---
0xb95: INVALID 
---
Entry stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240, 0x0, V949, 0xf4240, V895, V949]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240, 0x0, V949, 0xf4240, V895, V949]

================================

Block 0xb96
[0xb96:0xb98]
---
Predecessors: [0xb8a]
Successors: [0xb99]
---
0xb96 JUMPDEST
0xb97 DIV
0xb98 EQ
---
0xb96: JUMPDEST 
0xb97: V955 = DIV V949 V895
0xb98: V956 = EQ V955 0xf4240
---
Entry stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240, 0x0, V949, 0xf4240, V895, V949]
Stack pops: 3
Stack additions: [V956]
Exit stack: [V10, 0x278, 0x0, 0x0, 0xab0, V895, 0xf4240, 0x0, V949, V956]

================================

Block 0xb99
[0xb99:0xb9f]
---
Predecessors: [0xb7d, 0xb96, 0xbac]
Successors: [0xba0, 0xba1]
---
0xb99 JUMPDEST
0xb9a ISZERO
0xb9b ISZERO
0xb9c PUSH2 0xba1
0xb9f JUMPI
---
0xb99: JUMPDEST 
0xb9a: V957 = ISZERO S0
0xb9b: V958 = ISZERO V957
0xb9c: V959 = 0xba1
0xb9f: JUMPI 0xba1 V958
---
Entry stack: [V10, 0x278, S7, 0x0, {0xab0, 0xabe}, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x278, S7, 0x0, {0xab0, 0xabe}, S4, S3, 0x0, S1]

================================

Block 0xba0
[0xba0:0xba0]
---
Predecessors: [0xb99]
Successors: []
---
0xba0 INVALID
---
0xba0: INVALID 
---
Entry stack: [V10, 0x278, S6, 0x0, {0xab0, 0xabe}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, S6, 0x0, {0xab0, 0xabe}, S3, S2, 0x0, S0]

================================

Block 0xba1
[0xba1:0xba4]
---
Predecessors: [0xb99, 0xbc1]
Successors: [0xba5]
---
0xba1 JUMPDEST
0xba2 DUP1
0xba3 SWAP2
0xba4 POP
---
0xba1: JUMPDEST 
---
Entry stack: [V10, 0x278, S6, 0x0, {0xab0, 0xabe}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x278, S6, 0x0, {0xab0, 0xabe}, S3, S2, S0, S0]

================================

Block 0xba5
[0xba5:0xbab]
---
Predecessors: [0xba1]
Successors: [0xab0, 0xabe]
---
0xba5 JUMPDEST
0xba6 POP
0xba7 SWAP3
0xba8 SWAP2
0xba9 POP
0xbaa POP
0xbab JUMP
---
0xba5: JUMPDEST 
0xbab: JUMP {0xab0, 0xabe}
---
Entry stack: [V10, 0x278, S6, 0x0, {0xab0, 0xabe}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x278, S6, 0x0, S1]

================================

Block 0xbac
[0xbac:0xbbb]
---
Predecessors: [0xab0]
Successors: [0xb99, 0xbbc]
---
0xbac JUMPDEST
0xbad PUSH1 0x0
0xbaf DUP3
0xbb0 DUP3
0xbb1 ADD
0xbb2 DUP4
0xbb3 DUP2
0xbb4 LT
0xbb5 DUP1
0xbb6 ISZERO
0xbb7 SWAP1
0xbb8 PUSH2 0xb99
0xbbb JUMPI
---
0xbac: JUMPDEST 
0xbad: V960 = 0x0
0xbb1: V961 = ADD S0 V900
0xbb4: V962 = LT V961 V900
0xbb6: V963 = ISZERO V962
0xbb8: V964 = 0xb99
0xbbb: JUMPI 0xb99 V962
---
Entry stack: [V10, 0x278, S4, 0x0, 0xabe, V900, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V961, V963]
Exit stack: [V10, 0x278, S4, 0x0, 0xabe, V900, S0, 0x0, V961, V963]

================================

Block 0xbbc
[0xbbc:0xbc0]
---
Predecessors: [0xbac]
Successors: [0xbc1]
---
0xbbc POP
0xbbd DUP3
0xbbe DUP2
0xbbf LT
0xbc0 ISZERO
---
0xbbf: V965 = LT V961 S3
0xbc0: V966 = ISZERO V965
---
Entry stack: [V10, 0x278, S7, 0x0, 0xabe, V900, S3, 0x0, V961, V963]
Stack pops: 4
Stack additions: [S3, S2, S1, V966]
Exit stack: [V10, 0x278, S7, 0x0, 0xabe, V900, S3, 0x0, V961, V966]

================================

Block 0xbc1
[0xbc1:0xbc7]
---
Predecessors: [0xbbc]
Successors: [0xba1, 0xbc8]
---
0xbc1 JUMPDEST
0xbc2 ISZERO
0xbc3 ISZERO
0xbc4 PUSH2 0xba1
0xbc7 JUMPI
---
0xbc1: JUMPDEST 
0xbc2: V967 = ISZERO V966
0xbc3: V968 = ISZERO V967
0xbc4: V969 = 0xba1
0xbc7: JUMPI 0xba1 V968
---
Entry stack: [V10, 0x278, S7, 0x0, 0xabe, V900, S3, 0x0, V961, V966]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x278, S7, 0x0, 0xabe, V900, S3, 0x0, V961]

================================

Block 0xbc8
[0xbc8:0xbc8]
---
Predecessors: [0xbc1]
Successors: []
---
0xbc8 INVALID
---
0xbc8: INVALID 
---
Entry stack: [V10, 0x278, S6, 0x0, 0xabe, V900, S2, 0x0, V961]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, S6, 0x0, 0xabe, V900, S2, 0x0, V961]

================================

Block 0xbc9
[0xbc9:0xbcc]
---
Predecessors: []
Successors: [0xbcd]
---
0xbc9 JUMPDEST
0xbca DUP1
0xbcb SWAP2
0xbcc POP
---
0xbc9: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xbcd
[0xbcd:0xc14]
---
Predecessors: [0xbc9]
Successors: []
---
0xbcd JUMPDEST
0xbce POP
0xbcf SWAP3
0xbd0 SWAP2
0xbd1 POP
0xbd2 POP
0xbd3 JUMP
0xbd4 STOP
0xbd5 LOG1
0xbd6 PUSH6 0x627a7a723058
0xbdd SHA3
0xbde MISSING 0xc9
0xbdf SHR
0xbe0 PUSH20 0x4e3391abbf34361add36eaa953b4f915b9b30937
0xbf5 PUSH31 0x4a6e4903b499739f0029
---
0xbcd: JUMPDEST 
0xbd3: JUMP S4
0xbd4: STOP 
0xbd5: LOG S0 S1 S2
0xbd6: V970 = 0x627a7a723058
0xbdd: V971 = SHA3 0x627a7a723058 S3
0xbde: MISSING 0xc9
0xbdf: V972 = SHR S0 S1
0xbe0: V973 = 0x4e3391abbf34361add36eaa953b4f915b9b30937
0xbf5: V974 = 0x4a6e4903b499739f0029
---
Entry stack: [S1, S0]
Stack pops: 35
Stack additions: [0x4a6e4903b499739f0029, 0x4e3391abbf34361add36eaa953b4f915b9b30937, V972]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x106
Exit block: 0x188
Body: 0x106, 0x10d, 0x10e, 0x116, 0x13c, 0x14a, 0x15c, 0x16f, 0x188, 0x501

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x196
Exit block: 0x1b5
Body: 0x196, 0x19d, 0x19e, 0x1b5, 0x538, 0x59d

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1c9
Exit block: 0x1d9
Body: 0x1c9, 0x1d0, 0x1d1, 0x1d9, 0x5a3

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1eb
Exit block: 0x1b5
Body: 0x1b5, 0x1eb, 0x1f2, 0x1f3, 0x5a9, 0x5cd, 0x5f9, 0x600, 0x605, 0x60b, 0x693, 0x697, 0x698

Function 4:
Public function signature: 0x313ce567
Entry block: 0x224
Exit block: 0x1d9
Body: 0x1d9, 0x224, 0x22b, 0x22c, 0x69f

Function 5:
Public function signature: 0x4172d080
Entry block: 0x246
Exit block: 0x1d9
Body: 0x1d9, 0x246, 0x24d, 0x24e

Function 6:
Public function signature: 0x4bb278f3
Entry block: 0x268
Exit block: 0x278
Body: 0x268, 0x26f, 0x270, 0x278, 0x6ab, 0x6be, 0x6c3, 0x6da, 0x6df, 0x6ed, 0x6f2, 0x6ff, 0x709, 0x70f, 0x714, 0x768, 0x76d, 0x76e

Function 7:
Public function signature: 0x54fd4d50
Entry block: 0x27a
Exit block: 0x188
Body: 0x116, 0x13c, 0x14a, 0x15c, 0x16f, 0x188, 0x27a, 0x281, 0x282, 0x770, 0x7b0, 0x7b8, 0x7cb, 0x7d9, 0x7ed, 0x7f6

Function 8:
Public function signature: 0x590e1ae3
Entry block: 0x30a
Exit block: 0x278
Body: 0x278, 0x30a, 0x311, 0x312, 0x7fe, 0x816, 0x81b, 0x825, 0x82a, 0x838, 0x83d, 0x855, 0x85a, 0x87d, 0x882, 0x8a8, 0x8b1, 0x921, 0x926, 0x927, 0xb62, 0xb6e, 0xb6f, 0xb76

Function 9:
Public function signature: 0x70a08231
Entry block: 0x31c
Exit block: 0x1d9
Body: 0x1d9, 0x31c, 0x323, 0x324, 0x92b, 0x945

Function 10:
Public function signature: 0x8d4e4083
Entry block: 0x34a
Exit block: 0x1b5
Body: 0x1b5, 0x34a, 0x351, 0x352, 0x94a

Function 11:
Public function signature: 0x8e499bcf
Entry block: 0x246
Exit block: 0x1d9
Body: 0x1d9, 0x246, 0x24d, 0x24e

Function 12:
Public function signature: 0x91b43d13
Entry block: 0x390
Exit block: 0x1d9
Body: 0x1d9, 0x390, 0x397, 0x398, 0x961

Function 13:
Public function signature: 0x95d89b41
Entry block: 0x3b2
Exit block: 0x188
Body: 0x116, 0x13c, 0x14a, 0x15c, 0x16f, 0x188, 0x3b2, 0x3b9, 0x3ba, 0x967

Function 14:
Public function signature: 0xa81c3bdf
Entry block: 0x442
Exit block: 0x452
Body: 0x442, 0x449, 0x44a, 0x452, 0x99e

Function 15:
Public function signature: 0xa9059cbb
Entry block: 0x46e
Exit block: 0x1b5
Body: 0x1b5, 0x46e, 0x475, 0x476, 0x59d, 0x9ad, 0x9d1, 0x9d6, 0x9dc, 0xa4a

Function 16:
Public function signature: 0xb4427263
Entry block: 0x4a1
Exit block: 0xbc8
Body: 0x278, 0x4a1, 0xa59, 0xa71, 0xa76, 0xa81, 0xa86, 0xa91, 0xa96, 0xa9e, 0xaa3, 0xab0, 0xabe, 0xacc, 0xad1, 0xb2b, 0xb7d, 0xb8a, 0xb95, 0xb96, 0xb99, 0xba0, 0xba1, 0xba5, 0xbac, 0xbbc, 0xbc1, 0xbc8

Function 17:
Public function signature: 0xd648a647
Entry block: 0x4ab
Exit block: 0x1d9
Body: 0x1d9, 0x4ab, 0x4b2, 0x4b3, 0xb2f

Function 18:
Public function signature: 0xdd62ed3e
Entry block: 0x4cd
Exit block: 0x1d9
Body: 0x1d9, 0x4cd, 0x4d4, 0x4d5, 0xb35, 0xb5c

Function 19:
Public fallback function
Entry block: 0x104
Exit block: 0x104
Body: 0x104

