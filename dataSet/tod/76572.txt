Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb6
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb6
0xc: JUMPI 0xb6 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xbb]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xbb
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0xbb
0x26: JUMPI 0xbb V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x145]
---
0x27 DUP1
0x28 PUSH4 0x18160ddd
0x2d EQ
0x2e PUSH2 0x145
0x31 JUMPI
---
0x28: V17 = 0x18160ddd
0x2d: V18 = EQ 0x18160ddd V13
0x2e: V19 = 0x145
0x31: JUMPI 0x145 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x16a]
---
0x32 DUP1
0x33 PUSH4 0x313ce567
0x38 EQ
0x39 PUSH2 0x16a
0x3c JUMPI
---
0x33: V20 = 0x313ce567
0x38: V21 = EQ 0x313ce567 V13
0x39: V22 = 0x16a
0x3c: JUMPI 0x16a V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x193]
---
0x3d DUP1
0x3e PUSH4 0x33a581d2
0x43 EQ
0x44 PUSH2 0x193
0x47 JUMPI
---
0x3e: V23 = 0x33a581d2
0x43: V24 = EQ 0x33a581d2 V13
0x44: V25 = 0x193
0x47: JUMPI 0x193 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x1a6]
---
0x48 DUP1
0x49 PUSH4 0x40c10f19
0x4e EQ
0x4f PUSH2 0x1a6
0x52 JUMPI
---
0x49: V26 = 0x40c10f19
0x4e: V27 = EQ 0x40c10f19 V13
0x4f: V28 = 0x1a6
0x52: JUMPI 0x1a6 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1dc]
---
0x53 DUP1
0x54 PUSH4 0x70a08231
0x59 EQ
0x5a PUSH2 0x1dc
0x5d JUMPI
---
0x54: V29 = 0x70a08231
0x59: V30 = EQ 0x70a08231 V13
0x5a: V31 = 0x1dc
0x5d: JUMPI 0x1dc V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1fb]
---
0x5e DUP1
0x5f PUSH4 0x83197ef0
0x64 EQ
0x65 PUSH2 0x1fb
0x68 JUMPI
---
0x5f: V32 = 0x83197ef0
0x64: V33 = EQ 0x83197ef0 V13
0x65: V34 = 0x1fb
0x68: JUMPI 0x1fb V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x210]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x210
0x73 JUMPI
---
0x6a: V35 = 0x8da5cb5b
0x6f: V36 = EQ 0x8da5cb5b V13
0x70: V37 = 0x210
0x73: JUMPI 0x210 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x23f]
---
0x74 DUP1
0x75 PUSH4 0x95d89b41
0x7a EQ
0x7b PUSH2 0x23f
0x7e JUMPI
---
0x75: V38 = 0x95d89b41
0x7a: V39 = EQ 0x95d89b41 V13
0x7b: V40 = 0x23f
0x7e: JUMPI 0x23f V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x252]
---
0x7f DUP1
0x80 PUSH4 0xa9059cbb
0x85 EQ
0x86 PUSH2 0x252
0x89 JUMPI
---
0x80: V41 = 0xa9059cbb
0x85: V42 = EQ 0xa9059cbb V13
0x86: V43 = 0x252
0x89: JUMPI 0x252 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x274]
---
0x8a DUP1
0x8b PUSH4 0xbe45fd62
0x90 EQ
0x91 PUSH2 0x274
0x94 JUMPI
---
0x8b: V44 = 0xbe45fd62
0x90: V45 = EQ 0xbe45fd62 V13
0x91: V46 = 0x274
0x94: JUMPI 0x274 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x2d9]
---
0x95 DUP1
0x96 PUSH4 0xf2fde38b
0x9b EQ
0x9c PUSH2 0x2d9
0x9f JUMPI
---
0x96: V47 = 0xf2fde38b
0x9b: V48 = EQ 0xf2fde38b V13
0x9c: V49 = 0x2d9
0x9f: JUMPI 0x2d9 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x2f8]
---
0xa0 DUP1
0xa1 PUSH4 0xf5074f41
0xa6 EQ
0xa7 PUSH2 0x2f8
0xaa JUMPI
---
0xa1: V50 = 0xf5074f41
0xa6: V51 = EQ 0xf5074f41 V13
0xa7: V52 = 0x2f8
0xaa: JUMPI 0x2f8 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x317]
---
0xab DUP1
0xac PUSH4 0xf6368f8a
0xb1 EQ
0xb2 PUSH2 0x317
0xb5 JUMPI
---
0xac: V53 = 0xf6368f8a
0xb1: V54 = EQ 0xf6368f8a V13
0xb2: V55 = 0x317
0xb5: JUMPI 0x317 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xba]
---
Predecessors: [0x0, 0xab]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb6: JUMPDEST 
0xb7: V56 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0xd]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V57 = CALLVALUE
0xbd: V58 = ISZERO V57
0xbe: V59 = 0xc6
0xc1: JUMPI 0xc6 V58
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V60 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbb]
Successors: [0x3be]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xce
0xca PUSH2 0x3be
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V61 = 0xce
0xca: V62 = 0x3be
0xcd: JUMP 0x3be
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0xce
[0xce:0xf1]
---
Predecessors: [0x45c]
Successors: [0xf2]
---
0xce JUMPDEST
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 PUSH1 0x20
0xd4 DUP1
0xd5 DUP3
0xd6 MSTORE
0xd7 DUP2
0xd8 SWAP1
0xd9 DUP2
0xda ADD
0xdb DUP4
0xdc DUP2
0xdd DUP2
0xde MLOAD
0xdf DUP2
0xe0 MSTORE
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 SWAP2
0xe5 POP
0xe6 DUP1
0xe7 MLOAD
0xe8 SWAP1
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP1
0xed DUP1
0xee DUP4
0xef DUP4
0xf0 PUSH1 0x0
---
0xce: JUMPDEST 
0xcf: V63 = 0x40
0xd1: V64 = M[0x40]
0xd2: V65 = 0x20
0xd6: M[V64] = 0x20
0xda: V66 = ADD V64 0x20
0xde: V67 = M[S0]
0xe0: M[V66] = V67
0xe1: V68 = 0x20
0xe3: V69 = ADD 0x20 V66
0xe7: V70 = M[S0]
0xe9: V71 = 0x20
0xeb: V72 = ADD 0x20 S0
0xf0: V73 = 0x0
---
Entry stack: [V13, 0x1c8, V219, S1, S0]
Stack pops: 1
Stack additions: [S0, V64, V64, V69, V72, V70, V70, V69, V72, 0x0]
Exit stack: [V13, 0x1c8, V219, S1, S0, V64, V64, V69, V72, V70, V70, V69, V72, 0x0]

================================

Block 0xf2
[0xf2:0xfa]
---
Predecessors: [0xce, 0xfb]
Successors: [0xfb, 0x10a]
---
0xf2 JUMPDEST
0xf3 DUP4
0xf4 DUP2
0xf5 LT
0xf6 ISZERO
0xf7 PUSH2 0x10a
0xfa JUMPI
---
0xf2: JUMPDEST 
0xf5: V74 = LT S0 V70
0xf6: V75 = ISZERO V74
0xf7: V76 = 0x10a
0xfa: JUMPI 0x10a V75
---
Entry stack: [V13, 0x1c8, V219, S10, S9, V64, V64, V69, V72, V70, V70, V69, V72, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x1c8, V219, S10, S9, V64, V64, V69, V72, V70, V70, V69, V72, S0]

================================

Block 0xfb
[0xfb:0x109]
---
Predecessors: [0xf2]
Successors: [0xf2]
---
0xfb DUP1
0xfc DUP3
0xfd ADD
0xfe MLOAD
0xff DUP4
0x100 DUP3
0x101 ADD
0x102 MSTORE
0x103 PUSH1 0x20
0x105 ADD
0x106 PUSH2 0xf2
0x109 JUMP
---
0xfd: V77 = ADD V72 S0
0xfe: V78 = M[V77]
0x101: V79 = ADD S0 V69
0x102: M[V79] = V78
0x103: V80 = 0x20
0x105: V81 = ADD 0x20 S0
0x106: V82 = 0xf2
0x109: JUMP 0xf2
---
Entry stack: [V13, 0x1c8, V219, S10, S9, V64, V64, V69, V72, V70, V70, V69, V72, S0]
Stack pops: 3
Stack additions: [S2, S1, V81]
Exit stack: [V13, 0x1c8, V219, S10, S9, V64, V64, V69, V72, V70, V70, V69, V72, V81]

================================

Block 0x10a
[0x10a:0x11d]
---
Predecessors: [0xf2]
Successors: [0x11e, 0x137]
---
0x10a JUMPDEST
0x10b POP
0x10c POP
0x10d POP
0x10e POP
0x10f SWAP1
0x110 POP
0x111 SWAP1
0x112 DUP2
0x113 ADD
0x114 SWAP1
0x115 PUSH1 0x1f
0x117 AND
0x118 DUP1
0x119 ISZERO
0x11a PUSH2 0x137
0x11d JUMPI
---
0x10a: JUMPDEST 
0x113: V83 = ADD V70 V69
0x115: V84 = 0x1f
0x117: V85 = AND 0x1f V70
0x119: V86 = ISZERO V85
0x11a: V87 = 0x137
0x11d: JUMPI 0x137 V86
---
Entry stack: [V13, 0x1c8, V219, S10, S9, V64, V64, V69, V72, V70, V70, V69, V72, S0]
Stack pops: 7
Stack additions: [V83, V85]
Exit stack: [V13, 0x1c8, V219, S10, S9, V64, V64, V83, V85]

================================

Block 0x11e
[0x11e:0x136]
---
Predecessors: [0x10a]
Successors: [0x137]
---
0x11e DUP1
0x11f DUP3
0x120 SUB
0x121 DUP1
0x122 MLOAD
0x123 PUSH1 0x1
0x125 DUP4
0x126 PUSH1 0x20
0x128 SUB
0x129 PUSH2 0x100
0x12c EXP
0x12d SUB
0x12e NOT
0x12f AND
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 SWAP2
0x136 POP
---
0x120: V88 = SUB V83 V85
0x122: V89 = M[V88]
0x123: V90 = 0x1
0x126: V91 = 0x20
0x128: V92 = SUB 0x20 V85
0x129: V93 = 0x100
0x12c: V94 = EXP 0x100 V92
0x12d: V95 = SUB V94 0x1
0x12e: V96 = NOT V95
0x12f: V97 = AND V96 V89
0x131: M[V88] = V97
0x132: V98 = 0x20
0x134: V99 = ADD 0x20 V88
---
Entry stack: [V13, 0x1c8, V219, S5, S4, V64, V64, V83, V85]
Stack pops: 2
Stack additions: [V99, S0]
Exit stack: [V13, 0x1c8, V219, S5, S4, V64, V64, V99, V85]

================================

Block 0x137
[0x137:0x144]
---
Predecessors: [0x10a, 0x11e]
Successors: []
---
0x137 JUMPDEST
0x138 POP
0x139 SWAP3
0x13a POP
0x13b POP
0x13c POP
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 SWAP2
0x142 SUB
0x143 SWAP1
0x144 RETURN
---
0x137: JUMPDEST 
0x13d: V100 = 0x40
0x13f: V101 = M[0x40]
0x142: V102 = SUB S1 V101
0x144: RETURN V101 V102
---
Entry stack: [V13, 0x1c8, V219, S5, S4, V64, V64, S1, V85]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x1c8, V219, S5]

================================

Block 0x145
[0x145:0x14b]
---
Predecessors: [0x27]
Successors: [0x14c, 0x150]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x145: JUMPDEST 
0x146: V103 = CALLVALUE
0x147: V104 = ISZERO V103
0x148: V105 = 0x150
0x14b: JUMPI 0x150 V104
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x145]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V106 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x150
[0x150:0x157]
---
Predecessors: [0x145]
Successors: [0x466]
---
0x150 JUMPDEST
0x151 PUSH2 0x158
0x154 PUSH2 0x466
0x157 JUMP
---
0x150: JUMPDEST 
0x151: V107 = 0x158
0x154: V108 = 0x466
0x157: JUMP 0x466
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x158]
Exit stack: [V13, 0x158]

================================

Block 0x158
[0x158:0x169]
---
Predecessors: [0x466, 0x475, 0x540]
Successors: []
---
0x158 JUMPDEST
0x159 PUSH1 0x40
0x15b MLOAD
0x15c SWAP1
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0x20
0x161 ADD
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 SWAP2
0x167 SUB
0x168 SWAP1
0x169 RETURN
---
0x158: JUMPDEST 
0x159: V109 = 0x40
0x15b: V110 = M[0x40]
0x15e: M[V110] = S0
0x15f: V111 = 0x20
0x161: V112 = ADD 0x20 V110
0x162: V113 = 0x40
0x164: V114 = M[0x40]
0x167: V115 = SUB V112 V114
0x169: RETURN V114 V115
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x16a
[0x16a:0x170]
---
Predecessors: [0x32]
Successors: [0x171, 0x175]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x16a: JUMPDEST 
0x16b: V116 = CALLVALUE
0x16c: V117 = ISZERO V116
0x16d: V118 = 0x175
0x170: JUMPI 0x175 V117
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x16a]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V119 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x175
[0x175:0x17c]
---
Predecessors: [0x16a]
Successors: [0x46c]
---
0x175 JUMPDEST
0x176 PUSH2 0x17d
0x179 PUSH2 0x46c
0x17c JUMP
---
0x175: JUMPDEST 
0x176: V120 = 0x17d
0x179: V121 = 0x46c
0x17c: JUMP 0x46c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x17d]
Exit stack: [V13, 0x17d]

================================

Block 0x17d
[0x17d:0x192]
---
Predecessors: [0x46c]
Successors: []
---
0x17d JUMPDEST
0x17e PUSH1 0x40
0x180 MLOAD
0x181 PUSH1 0xff
0x183 SWAP1
0x184 SWAP2
0x185 AND
0x186 DUP2
0x187 MSTORE
0x188 PUSH1 0x20
0x18a ADD
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f SWAP2
0x190 SUB
0x191 SWAP1
0x192 RETURN
---
0x17d: JUMPDEST 
0x17e: V122 = 0x40
0x180: V123 = M[0x40]
0x181: V124 = 0xff
0x185: V125 = AND V411 0xff
0x187: M[V123] = V125
0x188: V126 = 0x20
0x18a: V127 = ADD 0x20 V123
0x18b: V128 = 0x40
0x18d: V129 = M[0x40]
0x190: V130 = SUB V127 V129
0x192: RETURN V129 V130
---
Entry stack: [V13, V411]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x193
[0x193:0x199]
---
Predecessors: [0x3d]
Successors: [0x19a, 0x19e]
---
0x193 JUMPDEST
0x194 CALLVALUE
0x195 ISZERO
0x196 PUSH2 0x19e
0x199 JUMPI
---
0x193: JUMPDEST 
0x194: V131 = CALLVALUE
0x195: V132 = ISZERO V131
0x196: V133 = 0x19e
0x199: JUMPI 0x19e V132
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x19a
[0x19a:0x19d]
---
Predecessors: [0x193]
Successors: []
---
0x19a PUSH1 0x0
0x19c DUP1
0x19d REVERT
---
0x19a: V134 = 0x0
0x19d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x19e
[0x19e:0x1a5]
---
Predecessors: [0x193]
Successors: [0x475]
---
0x19e JUMPDEST
0x19f PUSH2 0x158
0x1a2 PUSH2 0x475
0x1a5 JUMP
---
0x19e: JUMPDEST 
0x19f: V135 = 0x158
0x1a2: V136 = 0x475
0x1a5: JUMP 0x475
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x158]
Exit stack: [V13, 0x158]

================================

Block 0x1a6
[0x1a6:0x1ac]
---
Predecessors: [0x48]
Successors: [0x1ad, 0x1b1]
---
0x1a6 JUMPDEST
0x1a7 CALLVALUE
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V137 = CALLVALUE
0x1a8: V138 = ISZERO V137
0x1a9: V139 = 0x1b1
0x1ac: JUMPI 0x1b1 V138
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a6]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V140 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b1
[0x1b1:0x1c7]
---
Predecessors: [0x1a6]
Successors: [0x47b]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x1c8
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd PUSH1 0x4
0x1bf CALLDATALOAD
0x1c0 AND
0x1c1 PUSH1 0x24
0x1c3 CALLDATALOAD
0x1c4 PUSH2 0x47b
0x1c7 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V141 = 0x1c8
0x1b5: V142 = 0x1
0x1b7: V143 = 0xa0
0x1b9: V144 = 0x2
0x1bb: V145 = EXP 0x2 0xa0
0x1bc: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V147 = 0x4
0x1bf: V148 = CALLDATALOAD 0x4
0x1c0: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V150 = 0x24
0x1c3: V151 = CALLDATALOAD 0x24
0x1c4: V152 = 0x47b
0x1c7: JUMP 0x47b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c8, V149, V151]
Exit stack: [V13, 0x1c8, V149, V151]

================================

Block 0x1c8
[0x1c8:0x1db]
---
Predecessors: [0x4ba, 0x63b, 0x66f, 0x915, 0xa7d]
Successors: []
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc SWAP1
0x1cd ISZERO
0x1ce ISZERO
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 PUSH1 0x40
0x1d6 MLOAD
0x1d7 DUP1
0x1d8 SWAP2
0x1d9 SUB
0x1da SWAP1
0x1db RETURN
---
0x1c8: JUMPDEST 
0x1c9: V153 = 0x40
0x1cb: V154 = M[0x40]
0x1cd: V155 = ISZERO 0x1
0x1ce: V156 = ISZERO 0x0
0x1d0: M[V154] = 0x1
0x1d1: V157 = 0x20
0x1d3: V158 = ADD 0x20 V154
0x1d4: V159 = 0x40
0x1d6: V160 = M[0x40]
0x1d9: V161 = SUB V158 V160
0x1db: RETURN V160 V161
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1dc
[0x1dc:0x1e2]
---
Predecessors: [0x53]
Successors: [0x1e3, 0x1e7]
---
0x1dc JUMPDEST
0x1dd CALLVALUE
0x1de ISZERO
0x1df PUSH2 0x1e7
0x1e2 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V162 = CALLVALUE
0x1de: V163 = ISZERO V162
0x1df: V164 = 0x1e7
0x1e2: JUMPI 0x1e7 V163
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e3
[0x1e3:0x1e6]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 REVERT
---
0x1e3: V165 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e7
[0x1e7:0x1fa]
---
Predecessors: [0x1dc]
Successors: [0x540]
---
0x1e7 JUMPDEST
0x1e8 PUSH2 0x158
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 PUSH1 0x4
0x1f5 CALLDATALOAD
0x1f6 AND
0x1f7 PUSH2 0x540
0x1fa JUMP
---
0x1e7: JUMPDEST 
0x1e8: V166 = 0x158
0x1eb: V167 = 0x1
0x1ed: V168 = 0xa0
0x1ef: V169 = 0x2
0x1f1: V170 = EXP 0x2 0xa0
0x1f2: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f3: V172 = 0x4
0x1f5: V173 = CALLDATALOAD 0x4
0x1f6: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V175 = 0x540
0x1fa: JUMP 0x540
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x158, V174]
Exit stack: [V13, 0x158, V174]

================================

Block 0x1fb
[0x1fb:0x201]
---
Predecessors: [0x5e]
Successors: [0x202, 0x206]
---
0x1fb JUMPDEST
0x1fc CALLVALUE
0x1fd ISZERO
0x1fe PUSH2 0x206
0x201 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V176 = CALLVALUE
0x1fd: V177 = ISZERO V176
0x1fe: V178 = 0x206
0x201: JUMPI 0x206 V177
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x1fb]
Successors: []
---
0x202 PUSH1 0x0
0x204 DUP1
0x205 REVERT
---
0x202: V179 = 0x0
0x205: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x206
[0x206:0x20d]
---
Predecessors: [0x1fb]
Successors: [0x55b]
---
0x206 JUMPDEST
0x207 PUSH2 0x20e
0x20a PUSH2 0x55b
0x20d JUMP
---
0x206: JUMPDEST 
0x207: V180 = 0x20e
0x20a: V181 = 0x55b
0x20d: JUMP 0x55b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x20e]
Exit stack: [V13, 0x20e]

================================

Block 0x20e
[0x20e:0x20f]
---
Predecessors: [0x6a6]
Successors: []
---
0x20e JUMPDEST
0x20f STOP
---
0x20e: JUMPDEST 
0x20f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x210
[0x210:0x216]
---
Predecessors: [0x69]
Successors: [0x217, 0x21b]
---
0x210 JUMPDEST
0x211 CALLVALUE
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x210: JUMPDEST 
0x211: V182 = CALLVALUE
0x212: V183 = ISZERO V182
0x213: V184 = 0x21b
0x216: JUMPI 0x21b V183
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x210]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V185 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x210]
Successors: [0x584]
---
0x21b JUMPDEST
0x21c PUSH2 0x223
0x21f PUSH2 0x584
0x222 JUMP
---
0x21b: JUMPDEST 
0x21c: V186 = 0x223
0x21f: V187 = 0x584
0x222: JUMP 0x584
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x223]
Exit stack: [V13, 0x223]

================================

Block 0x223
[0x223:0x23e]
---
Predecessors: [0x584]
Successors: []
---
0x223 JUMPDEST
0x224 PUSH1 0x40
0x226 MLOAD
0x227 PUSH1 0x1
0x229 PUSH1 0xa0
0x22b PUSH1 0x2
0x22d EXP
0x22e SUB
0x22f SWAP1
0x230 SWAP2
0x231 AND
0x232 DUP2
0x233 MSTORE
0x234 PUSH1 0x20
0x236 ADD
0x237 PUSH1 0x40
0x239 MLOAD
0x23a DUP1
0x23b SWAP2
0x23c SUB
0x23d SWAP1
0x23e RETURN
---
0x223: JUMPDEST 
0x224: V188 = 0x40
0x226: V189 = M[0x40]
0x227: V190 = 0x1
0x229: V191 = 0xa0
0x22b: V192 = 0x2
0x22d: V193 = EXP 0x2 0xa0
0x22e: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V195 = AND V514 0xffffffffffffffffffffffffffffffffffffffff
0x233: M[V189] = V195
0x234: V196 = 0x20
0x236: V197 = ADD 0x20 V189
0x237: V198 = 0x40
0x239: V199 = M[0x40]
0x23c: V200 = SUB V197 V199
0x23e: RETURN V199 V200
---
Entry stack: [V13, 0x223, V514]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x223]

================================

Block 0x23f
[0x23f:0x245]
---
Predecessors: [0x74]
Successors: [0x246, 0x24a]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x23f: JUMPDEST 
0x240: V201 = CALLVALUE
0x241: V202 = ISZERO V201
0x242: V203 = 0x24a
0x245: JUMPI 0x24a V202
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x23f]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V204 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24a
[0x24a:0x251]
---
Predecessors: [0x23f]
Successors: [0x593]
---
0x24a JUMPDEST
0x24b PUSH2 0xce
0x24e PUSH2 0x593
0x251 JUMP
---
0x24a: JUMPDEST 
0x24b: V205 = 0xce
0x24e: V206 = 0x593
0x251: JUMP 0x593
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0x252
[0x252:0x258]
---
Predecessors: [0x7f]
Successors: [0x259, 0x25d]
---
0x252 JUMPDEST
0x253 CALLVALUE
0x254 ISZERO
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x252: JUMPDEST 
0x253: V207 = CALLVALUE
0x254: V208 = ISZERO V207
0x255: V209 = 0x25d
0x258: JUMPI 0x25d V208
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x252]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V210 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x25d
[0x25d:0x273]
---
Predecessors: [0x252]
Successors: [0x606]
---
0x25d JUMPDEST
0x25e PUSH2 0x1c8
0x261 PUSH1 0x1
0x263 PUSH1 0xa0
0x265 PUSH1 0x2
0x267 EXP
0x268 SUB
0x269 PUSH1 0x4
0x26b CALLDATALOAD
0x26c AND
0x26d PUSH1 0x24
0x26f CALLDATALOAD
0x270 PUSH2 0x606
0x273 JUMP
---
0x25d: JUMPDEST 
0x25e: V211 = 0x1c8
0x261: V212 = 0x1
0x263: V213 = 0xa0
0x265: V214 = 0x2
0x267: V215 = EXP 0x2 0xa0
0x268: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x269: V217 = 0x4
0x26b: V218 = CALLDATALOAD 0x4
0x26c: V219 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V220 = 0x24
0x26f: V221 = CALLDATALOAD 0x24
0x270: V222 = 0x606
0x273: JUMP 0x606
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c8, V219, V221]
Exit stack: [V13, 0x1c8, V219, V221]

================================

Block 0x274
[0x274:0x27a]
---
Predecessors: [0x8a]
Successors: [0x27b, 0x27f]
---
0x274 JUMPDEST
0x275 CALLVALUE
0x276 ISZERO
0x277 PUSH2 0x27f
0x27a JUMPI
---
0x274: JUMPDEST 
0x275: V223 = CALLVALUE
0x276: V224 = ISZERO V223
0x277: V225 = 0x27f
0x27a: JUMPI 0x27f V224
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27b
[0x27b:0x27e]
---
Predecessors: [0x274]
Successors: []
---
0x27b PUSH1 0x0
0x27d DUP1
0x27e REVERT
---
0x27b: V226 = 0x0
0x27e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27f
[0x27f:0x2d8]
---
Predecessors: [0x274]
Successors: [0x642]
---
0x27f JUMPDEST
0x280 PUSH2 0x1c8
0x283 PUSH1 0x4
0x285 DUP1
0x286 CALLDATALOAD
0x287 PUSH1 0x1
0x289 PUSH1 0xa0
0x28b PUSH1 0x2
0x28d EXP
0x28e SUB
0x28f AND
0x290 SWAP1
0x291 PUSH1 0x24
0x293 DUP1
0x294 CALLDATALOAD
0x295 SWAP2
0x296 SWAP1
0x297 PUSH1 0x64
0x299 SWAP1
0x29a PUSH1 0x44
0x29c CALLDATALOAD
0x29d SWAP1
0x29e DUP2
0x29f ADD
0x2a0 SWAP1
0x2a1 DUP4
0x2a2 ADD
0x2a3 CALLDATALOAD
0x2a4 DUP1
0x2a5 PUSH1 0x20
0x2a7 PUSH1 0x1f
0x2a9 DUP3
0x2aa ADD
0x2ab DUP2
0x2ac SWAP1
0x2ad DIV
0x2ae DUP2
0x2af MUL
0x2b0 ADD
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 ADD
0x2b7 PUSH1 0x40
0x2b9 MSTORE
0x2ba DUP2
0x2bb DUP2
0x2bc MSTORE
0x2bd SWAP3
0x2be SWAP2
0x2bf SWAP1
0x2c0 PUSH1 0x20
0x2c2 DUP5
0x2c3 ADD
0x2c4 DUP4
0x2c5 DUP4
0x2c6 DUP1
0x2c7 DUP3
0x2c8 DUP5
0x2c9 CALLDATACOPY
0x2ca POP
0x2cb SWAP5
0x2cc SWAP7
0x2cd POP
0x2ce PUSH2 0x642
0x2d1 SWAP6
0x2d2 POP
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 POP
0x2d8 JUMP
---
0x27f: JUMPDEST 
0x280: V227 = 0x1c8
0x283: V228 = 0x4
0x286: V229 = CALLDATALOAD 0x4
0x287: V230 = 0x1
0x289: V231 = 0xa0
0x28b: V232 = 0x2
0x28d: V233 = EXP 0x2 0xa0
0x28e: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28f: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x291: V236 = 0x24
0x294: V237 = CALLDATALOAD 0x24
0x297: V238 = 0x64
0x29a: V239 = 0x44
0x29c: V240 = CALLDATALOAD 0x44
0x29f: V241 = ADD V240 0x24
0x2a2: V242 = ADD 0x4 V240
0x2a3: V243 = CALLDATALOAD V242
0x2a5: V244 = 0x20
0x2a7: V245 = 0x1f
0x2aa: V246 = ADD V243 0x1f
0x2ad: V247 = DIV V246 0x20
0x2af: V248 = MUL 0x20 V247
0x2b0: V249 = ADD V248 0x20
0x2b1: V250 = 0x40
0x2b3: V251 = M[0x40]
0x2b6: V252 = ADD V251 V249
0x2b7: V253 = 0x40
0x2b9: M[0x40] = V252
0x2bc: M[V251] = V243
0x2c0: V254 = 0x20
0x2c3: V255 = ADD V251 0x20
0x2c9: CALLDATACOPY V255 V241 V243
0x2ce: V256 = 0x642
0x2d8: JUMP 0x642
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c8, V235, V237, V251]
Exit stack: [V13, 0x1c8, V235, V237, V251]

================================

Block 0x2d9
[0x2d9:0x2df]
---
Predecessors: [0x95]
Successors: [0x2e0, 0x2e4]
---
0x2d9 JUMPDEST
0x2da CALLVALUE
0x2db ISZERO
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x2d9: JUMPDEST 
0x2da: V257 = CALLVALUE
0x2db: V258 = ISZERO V257
0x2dc: V259 = 0x2e4
0x2df: JUMPI 0x2e4 V258
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x2d9]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V260 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e4
[0x2e4:0x2f7]
---
Predecessors: [0x2d9]
Successors: [0x676]
---
0x2e4 JUMPDEST
0x2e5 PUSH2 0x20e
0x2e8 PUSH1 0x1
0x2ea PUSH1 0xa0
0x2ec PUSH1 0x2
0x2ee EXP
0x2ef SUB
0x2f0 PUSH1 0x4
0x2f2 CALLDATALOAD
0x2f3 AND
0x2f4 PUSH2 0x676
0x2f7 JUMP
---
0x2e4: JUMPDEST 
0x2e5: V261 = 0x20e
0x2e8: V262 = 0x1
0x2ea: V263 = 0xa0
0x2ec: V264 = 0x2
0x2ee: V265 = EXP 0x2 0xa0
0x2ef: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f0: V267 = 0x4
0x2f2: V268 = CALLDATALOAD 0x4
0x2f3: V269 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V270 = 0x676
0x2f7: JUMP 0x676
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x20e, V269]
Exit stack: [V13, 0x20e, V269]

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0xa0]
Successors: [0x2ff, 0x303]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V271 = CALLVALUE
0x2fa: V272 = ISZERO V271
0x2fb: V273 = 0x303
0x2fe: JUMPI 0x303 V272
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V274 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x303
[0x303:0x316]
---
Predecessors: [0x2f8]
Successors: [0x711]
---
0x303 JUMPDEST
0x304 PUSH2 0x20e
0x307 PUSH1 0x1
0x309 PUSH1 0xa0
0x30b PUSH1 0x2
0x30d EXP
0x30e SUB
0x30f PUSH1 0x4
0x311 CALLDATALOAD
0x312 AND
0x313 PUSH2 0x711
0x316 JUMP
---
0x303: JUMPDEST 
0x304: V275 = 0x20e
0x307: V276 = 0x1
0x309: V277 = 0xa0
0x30b: V278 = 0x2
0x30d: V279 = EXP 0x2 0xa0
0x30e: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V281 = 0x4
0x311: V282 = CALLDATALOAD 0x4
0x312: V283 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x313: V284 = 0x711
0x316: JUMP 0x711
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x20e, V283]
Exit stack: [V13, 0x20e, V283]

================================

Block 0x317
[0x317:0x31d]
---
Predecessors: [0xab]
Successors: [0x31e, 0x322]
---
0x317 JUMPDEST
0x318 CALLVALUE
0x319 ISZERO
0x31a PUSH2 0x322
0x31d JUMPI
---
0x317: JUMPDEST 
0x318: V285 = CALLVALUE
0x319: V286 = ISZERO V285
0x31a: V287 = 0x322
0x31d: JUMPI 0x322 V286
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x31e
[0x31e:0x321]
---
Predecessors: [0x317]
Successors: []
---
0x31e PUSH1 0x0
0x320 DUP1
0x321 REVERT
---
0x31e: V288 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x322
[0x322:0x3bd]
---
Predecessors: [0x317]
Successors: [0x738]
---
0x322 JUMPDEST
0x323 PUSH2 0x1c8
0x326 PUSH1 0x4
0x328 DUP1
0x329 CALLDATALOAD
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 AND
0x333 SWAP1
0x334 PUSH1 0x24
0x336 DUP1
0x337 CALLDATALOAD
0x338 SWAP2
0x339 SWAP1
0x33a PUSH1 0x64
0x33c SWAP1
0x33d PUSH1 0x44
0x33f CALLDATALOAD
0x340 SWAP1
0x341 DUP2
0x342 ADD
0x343 SWAP1
0x344 DUP4
0x345 ADD
0x346 CALLDATALOAD
0x347 DUP1
0x348 PUSH1 0x20
0x34a PUSH1 0x1f
0x34c DUP3
0x34d ADD
0x34e DUP2
0x34f SWAP1
0x350 DIV
0x351 DUP2
0x352 MUL
0x353 ADD
0x354 PUSH1 0x40
0x356 MLOAD
0x357 SWAP1
0x358 DUP2
0x359 ADD
0x35a PUSH1 0x40
0x35c MSTORE
0x35d DUP2
0x35e DUP2
0x35f MSTORE
0x360 SWAP3
0x361 SWAP2
0x362 SWAP1
0x363 PUSH1 0x20
0x365 DUP5
0x366 ADD
0x367 DUP4
0x368 DUP4
0x369 DUP1
0x36a DUP3
0x36b DUP5
0x36c CALLDATACOPY
0x36d DUP3
0x36e ADD
0x36f SWAP2
0x370 POP
0x371 POP
0x372 POP
0x373 POP
0x374 POP
0x375 POP
0x376 SWAP2
0x377 SWAP1
0x378 DUP1
0x379 CALLDATALOAD
0x37a SWAP1
0x37b PUSH1 0x20
0x37d ADD
0x37e SWAP1
0x37f DUP3
0x380 ADD
0x381 DUP1
0x382 CALLDATALOAD
0x383 SWAP1
0x384 PUSH1 0x20
0x386 ADD
0x387 SWAP1
0x388 DUP1
0x389 DUP1
0x38a PUSH1 0x1f
0x38c ADD
0x38d PUSH1 0x20
0x38f DUP1
0x390 SWAP2
0x391 DIV
0x392 MUL
0x393 PUSH1 0x20
0x395 ADD
0x396 PUSH1 0x40
0x398 MLOAD
0x399 SWAP1
0x39a DUP2
0x39b ADD
0x39c PUSH1 0x40
0x39e MSTORE
0x39f DUP2
0x3a0 DUP2
0x3a1 MSTORE
0x3a2 SWAP3
0x3a3 SWAP2
0x3a4 SWAP1
0x3a5 PUSH1 0x20
0x3a7 DUP5
0x3a8 ADD
0x3a9 DUP4
0x3aa DUP4
0x3ab DUP1
0x3ac DUP3
0x3ad DUP5
0x3ae CALLDATACOPY
0x3af POP
0x3b0 SWAP5
0x3b1 SWAP7
0x3b2 POP
0x3b3 PUSH2 0x738
0x3b6 SWAP6
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd JUMP
---
0x322: JUMPDEST 
0x323: V289 = 0x1c8
0x326: V290 = 0x4
0x329: V291 = CALLDATALOAD 0x4
0x32a: V292 = 0x1
0x32c: V293 = 0xa0
0x32e: V294 = 0x2
0x330: V295 = EXP 0x2 0xa0
0x331: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x334: V298 = 0x24
0x337: V299 = CALLDATALOAD 0x24
0x33a: V300 = 0x64
0x33d: V301 = 0x44
0x33f: V302 = CALLDATALOAD 0x44
0x342: V303 = ADD V302 0x24
0x345: V304 = ADD 0x4 V302
0x346: V305 = CALLDATALOAD V304
0x348: V306 = 0x20
0x34a: V307 = 0x1f
0x34d: V308 = ADD V305 0x1f
0x350: V309 = DIV V308 0x20
0x352: V310 = MUL 0x20 V309
0x353: V311 = ADD V310 0x20
0x354: V312 = 0x40
0x356: V313 = M[0x40]
0x359: V314 = ADD V313 V311
0x35a: V315 = 0x40
0x35c: M[0x40] = V314
0x35f: M[V313] = V305
0x363: V316 = 0x20
0x366: V317 = ADD V313 0x20
0x36c: CALLDATACOPY V317 V303 V305
0x36e: V318 = ADD V317 V305
0x379: V319 = CALLDATALOAD 0x64
0x37b: V320 = 0x20
0x37d: V321 = ADD 0x20 0x64
0x380: V322 = ADD 0x4 V319
0x382: V323 = CALLDATALOAD V322
0x384: V324 = 0x20
0x386: V325 = ADD 0x20 V322
0x38a: V326 = 0x1f
0x38c: V327 = ADD 0x1f V323
0x38d: V328 = 0x20
0x391: V329 = DIV V327 0x20
0x392: V330 = MUL V329 0x20
0x393: V331 = 0x20
0x395: V332 = ADD 0x20 V330
0x396: V333 = 0x40
0x398: V334 = M[0x40]
0x39b: V335 = ADD V334 V332
0x39c: V336 = 0x40
0x39e: M[0x40] = V335
0x3a1: M[V334] = V323
0x3a5: V337 = 0x20
0x3a8: V338 = ADD V334 0x20
0x3ae: CALLDATACOPY V338 V325 V323
0x3b3: V339 = 0x738
0x3bd: JUMP 0x738
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c8, V297, V299, V313, V334]
Exit stack: [V13, 0x1c8, V297, V299, V313, V334]

================================

Block 0x3be
[0x3be:0x3c5]
---
Predecessors: [0xc6]
Successors: [0xb79]
---
0x3be JUMPDEST
0x3bf PUSH2 0x3c6
0x3c2 PUSH2 0xb79
0x3c5 JUMP
---
0x3be: JUMPDEST 
0x3bf: V340 = 0x3c6
0x3c2: V341 = 0xb79
0x3c5: JUMP 0xb79
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: [0x3c6]
Exit stack: [V13, 0xce, 0x3c6]

================================

Block 0x3c6
[0x3c6:0x415]
---
Predecessors: [0xb79]
Successors: [0x416, 0x45c]
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x3
0x3c9 DUP1
0x3ca SLOAD
0x3cb PUSH1 0x1
0x3cd DUP2
0x3ce PUSH1 0x1
0x3d0 AND
0x3d1 ISZERO
0x3d2 PUSH2 0x100
0x3d5 MUL
0x3d6 SUB
0x3d7 AND
0x3d8 PUSH1 0x2
0x3da SWAP1
0x3db DIV
0x3dc DUP1
0x3dd PUSH1 0x1f
0x3df ADD
0x3e0 PUSH1 0x20
0x3e2 DUP1
0x3e3 SWAP2
0x3e4 DIV
0x3e5 MUL
0x3e6 PUSH1 0x20
0x3e8 ADD
0x3e9 PUSH1 0x40
0x3eb MLOAD
0x3ec SWAP1
0x3ed DUP2
0x3ee ADD
0x3ef PUSH1 0x40
0x3f1 MSTORE
0x3f2 DUP1
0x3f3 SWAP3
0x3f4 SWAP2
0x3f5 SWAP1
0x3f6 DUP2
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc DUP3
0x3fd DUP1
0x3fe SLOAD
0x3ff PUSH1 0x1
0x401 DUP2
0x402 PUSH1 0x1
0x404 AND
0x405 ISZERO
0x406 PUSH2 0x100
0x409 MUL
0x40a SUB
0x40b AND
0x40c PUSH1 0x2
0x40e SWAP1
0x40f DIV
0x410 DUP1
0x411 ISZERO
0x412 PUSH2 0x45c
0x415 JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V342 = 0x3
0x3ca: V343 = S[0x3]
0x3cb: V344 = 0x1
0x3ce: V345 = 0x1
0x3d0: V346 = AND 0x1 V343
0x3d1: V347 = ISZERO V346
0x3d2: V348 = 0x100
0x3d5: V349 = MUL 0x100 V347
0x3d6: V350 = SUB V349 0x1
0x3d7: V351 = AND V350 V343
0x3d8: V352 = 0x2
0x3db: V353 = DIV V351 0x2
0x3dd: V354 = 0x1f
0x3df: V355 = ADD 0x1f V353
0x3e0: V356 = 0x20
0x3e4: V357 = DIV V355 0x20
0x3e5: V358 = MUL V357 0x20
0x3e6: V359 = 0x20
0x3e8: V360 = ADD 0x20 V358
0x3e9: V361 = 0x40
0x3eb: V362 = M[0x40]
0x3ee: V363 = ADD V362 V360
0x3ef: V364 = 0x40
0x3f1: M[0x40] = V363
0x3f8: M[V362] = V353
0x3f9: V365 = 0x20
0x3fb: V366 = ADD 0x20 V362
0x3fe: V367 = S[0x3]
0x3ff: V368 = 0x1
0x402: V369 = 0x1
0x404: V370 = AND 0x1 V367
0x405: V371 = ISZERO V370
0x406: V372 = 0x100
0x409: V373 = MUL 0x100 V371
0x40a: V374 = SUB V373 0x1
0x40b: V375 = AND V374 V367
0x40c: V376 = 0x2
0x40f: V377 = DIV V375 0x2
0x411: V378 = ISZERO V377
0x412: V379 = 0x45c
0x415: JUMPI 0x45c V378
---
Entry stack: [V13, 0x1c8, V219, S2, {0x0, 0xce}, V1052]
Stack pops: 0
Stack additions: [V362, 0x3, V353, V366, 0x3, V377]
Exit stack: [V13, 0x1c8, V219, S2, {0x0, 0xce}, V1052, V362, 0x3, V353, V366, 0x3, V377]

================================

Block 0x416
[0x416:0x41d]
---
Predecessors: [0x3c6]
Successors: [0x41e, 0x431]
---
0x416 DUP1
0x417 PUSH1 0x1f
0x419 LT
0x41a PUSH2 0x431
0x41d JUMPI
---
0x417: V380 = 0x1f
0x419: V381 = LT 0x1f V377
0x41a: V382 = 0x431
0x41d: JUMPI 0x431 V381
---
Entry stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, V1052, V362, 0x3, V353, V366, 0x3, V377]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, V1052, V362, 0x3, V353, V366, 0x3, V377]

================================

Block 0x41e
[0x41e:0x430]
---
Predecessors: [0x416]
Successors: [0x45c]
---
0x41e PUSH2 0x100
0x421 DUP1
0x422 DUP4
0x423 SLOAD
0x424 DIV
0x425 MUL
0x426 DUP4
0x427 MSTORE
0x428 SWAP2
0x429 PUSH1 0x20
0x42b ADD
0x42c SWAP2
0x42d PUSH2 0x45c
0x430 JUMP
---
0x41e: V383 = 0x100
0x423: V384 = S[0x3]
0x424: V385 = DIV V384 0x100
0x425: V386 = MUL V385 0x100
0x427: M[V366] = V386
0x429: V387 = 0x20
0x42b: V388 = ADD 0x20 V366
0x42d: V389 = 0x45c
0x430: JUMP 0x45c
---
Entry stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, V1052, V362, 0x3, V353, V366, 0x3, V377]
Stack pops: 3
Stack additions: [V388, S1, S0]
Exit stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, V1052, V362, 0x3, V353, V388, 0x3, V377]

================================

Block 0x431
[0x431:0x43e]
---
Predecessors: [0x416, 0x5eb]
Successors: [0x43f]
---
0x431 JUMPDEST
0x432 DUP3
0x433 ADD
0x434 SWAP2
0x435 SWAP1
0x436 PUSH1 0x0
0x438 MSTORE
0x439 PUSH1 0x20
0x43b PUSH1 0x0
0x43d SHA3
0x43e SWAP1
---
0x431: JUMPDEST 
0x433: V390 = ADD S2 S0
0x436: V391 = 0x0
0x438: M[0x0] = {0x3, 0x4}
0x439: V392 = 0x20
0x43b: V393 = 0x0
0x43d: V394 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, S6, S5, {0x3, 0x4}, S3, S2, {0x3, 0x4}, S0]
Stack pops: 3
Stack additions: [V390, V394, S2]
Exit stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, S6, S5, {0x3, 0x4}, S3, V390, V394, S2]

================================

Block 0x43f
[0x43f:0x452]
---
Predecessors: [0x431, 0x43f]
Successors: [0x43f, 0x453]
---
0x43f JUMPDEST
0x440 DUP2
0x441 SLOAD
0x442 DUP2
0x443 MSTORE
0x444 SWAP1
0x445 PUSH1 0x1
0x447 ADD
0x448 SWAP1
0x449 PUSH1 0x20
0x44b ADD
0x44c DUP1
0x44d DUP4
0x44e GT
0x44f PUSH2 0x43f
0x452 JUMPI
---
0x43f: JUMPDEST 
0x441: V395 = S[S1]
0x443: M[S0] = V395
0x445: V396 = 0x1
0x447: V397 = ADD 0x1 S1
0x449: V398 = 0x20
0x44b: V399 = ADD 0x20 S0
0x44e: V400 = GT V390 V399
0x44f: V401 = 0x43f
0x452: JUMPI 0x43f V400
---
Entry stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, S6, S5, {0x3, 0x4}, S3, V390, S1, S0]
Stack pops: 3
Stack additions: [S2, V397, V399]
Exit stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, S6, S5, {0x3, 0x4}, S3, V390, V397, V399]

================================

Block 0x453
[0x453:0x45b]
---
Predecessors: [0x43f]
Successors: [0x45c]
---
0x453 DUP3
0x454 SWAP1
0x455 SUB
0x456 PUSH1 0x1f
0x458 AND
0x459 DUP3
0x45a ADD
0x45b SWAP2
---
0x455: V402 = SUB V399 V390
0x456: V403 = 0x1f
0x458: V404 = AND 0x1f V402
0x45a: V405 = ADD V390 V404
---
Entry stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, S6, S5, {0x3, 0x4}, S3, V390, V397, V399]
Stack pops: 3
Stack additions: [V405, S1, S2]
Exit stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, S6, S5, {0x3, 0x4}, S3, V405, V397, V390]

================================

Block 0x45c
[0x45c:0x465]
---
Predecessors: [0x3c6, 0x41e, 0x453, 0x59b, 0x5f3]
Successors: [0xce]
---
0x45c JUMPDEST
0x45d POP
0x45e POP
0x45f POP
0x460 POP
0x461 POP
0x462 SWAP1
0x463 POP
0x464 SWAP1
0x465 JUMP
---
0x45c: JUMPDEST 
0x465: JUMP {0x0, 0xce}
---
Entry stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, S6, S5, {0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, 0x1c8, V219, S8, S5]

================================

Block 0x466
[0x466:0x46b]
---
Predecessors: [0x150]
Successors: [0x158]
---
0x466 JUMPDEST
0x467 PUSH1 0x6
0x469 SLOAD
0x46a SWAP1
0x46b JUMP
---
0x466: JUMPDEST 
0x467: V406 = 0x6
0x469: V407 = S[0x6]
0x46b: JUMP 0x158
---
Entry stack: [V13, 0x158]
Stack pops: 1
Stack additions: [V407]
Exit stack: [V13, V407]

================================

Block 0x46c
[0x46c:0x474]
---
Predecessors: [0x175]
Successors: [0x17d]
---
0x46c JUMPDEST
0x46d PUSH1 0x5
0x46f SLOAD
0x470 PUSH1 0xff
0x472 AND
0x473 SWAP1
0x474 JUMP
---
0x46c: JUMPDEST 
0x46d: V408 = 0x5
0x46f: V409 = S[0x5]
0x470: V410 = 0xff
0x472: V411 = AND 0xff V409
0x474: JUMP 0x17d
---
Entry stack: [V13, 0x17d]
Stack pops: 1
Stack additions: [V411]
Exit stack: [V13, V411]

================================

Block 0x475
[0x475:0x47a]
---
Predecessors: [0x19e]
Successors: [0x158]
---
0x475 JUMPDEST
0x476 PUSH1 0x0
0x478 NOT
0x479 DUP2
0x47a JUMP
---
0x475: JUMPDEST 
0x476: V412 = 0x0
0x478: V413 = NOT 0x0
0x47a: JUMP 0x158
---
Entry stack: [V13, 0x158]
Stack pops: 1
Stack additions: [S0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Exit stack: [V13, 0x158, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]

================================

Block 0x47b
[0x47b:0x494]
---
Predecessors: [0x1b1]
Successors: [0x495, 0x499]
---
0x47b JUMPDEST
0x47c PUSH1 0x1
0x47e SLOAD
0x47f PUSH1 0x0
0x481 SWAP1
0x482 CALLER
0x483 PUSH1 0x1
0x485 PUSH1 0xa0
0x487 PUSH1 0x2
0x489 EXP
0x48a SUB
0x48b SWAP1
0x48c DUP2
0x48d AND
0x48e SWAP2
0x48f AND
0x490 EQ
0x491 PUSH2 0x499
0x494 JUMPI
---
0x47b: JUMPDEST 
0x47c: V414 = 0x1
0x47e: V415 = S[0x1]
0x47f: V416 = 0x0
0x482: V417 = CALLER
0x483: V418 = 0x1
0x485: V419 = 0xa0
0x487: V420 = 0x2
0x489: V421 = EXP 0x2 0xa0
0x48a: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48d: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x48f: V424 = AND V415 0xffffffffffffffffffffffffffffffffffffffff
0x490: V425 = EQ V424 V423
0x491: V426 = 0x499
0x494: JUMPI 0x499 V425
---
Entry stack: [V13, 0x1c8, V149, V151]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1c8, V149, V151, 0x0]

================================

Block 0x495
[0x495:0x498]
---
Predecessors: [0x47b]
Successors: []
---
0x495 PUSH1 0x0
0x497 DUP1
0x498 REVERT
---
0x495: V427 = 0x0
0x498: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1c8, V149, V151, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1c8, V149, V151, 0x0]

================================

Block 0x499
[0x499:0x4a4]
---
Predecessors: [0x47b]
Successors: [0x91d]
---
0x499 JUMPDEST
0x49a PUSH2 0x4a5
0x49d PUSH1 0x6
0x49f SLOAD
0x4a0 DUP4
0x4a1 PUSH2 0x91d
0x4a4 JUMP
---
0x499: JUMPDEST 
0x49a: V428 = 0x4a5
0x49d: V429 = 0x6
0x49f: V430 = S[0x6]
0x4a1: V431 = 0x91d
0x4a4: JUMP 0x91d
---
Entry stack: [V13, 0x1c8, V149, V151, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x4a5, V430, S1]
Exit stack: [V13, 0x1c8, V149, V151, 0x0, 0x4a5, V430, V151]

================================

Block 0x4a5
[0x4a5:0x4b3]
---
Predecessors: [0x930]
Successors: [0x540]
---
0x4a5 JUMPDEST
0x4a6 PUSH1 0x6
0x4a8 SSTORE
0x4a9 PUSH2 0x4ba
0x4ac PUSH2 0x4b4
0x4af DUP5
0x4b0 PUSH2 0x540
0x4b3 JUMP
---
0x4a5: JUMPDEST 
0x4a6: V432 = 0x6
0x4a8: S[0x6] = V841
0x4a9: V433 = 0x4ba
0x4ac: V434 = 0x4b4
0x4b0: V435 = 0x540
0x4b3: JUMP 0x540
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V841]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x4ba, 0x4b4, S3]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x4ba, 0x4b4, S3]

================================

Block 0x4b4
[0x4b4:0x4b9]
---
Predecessors: [0x540]
Successors: [0x91d]
---
0x4b4 JUMPDEST
0x4b5 DUP4
0x4b6 PUSH2 0x91d
0x4b9 JUMP
---
0x4b4: JUMPDEST 
0x4b6: V436 = 0x91d
0x4b9: JUMP 0x91d
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485, S3]

================================

Block 0x4ba
[0x4ba:0x53f]
---
Predecessors: [0x930]
Successors: [0x1c8]
---
0x4ba JUMPDEST
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 DUP5
0x4c4 AND
0x4c5 PUSH1 0x0
0x4c7 DUP2
0x4c8 DUP2
0x4c9 MSTORE
0x4ca PUSH1 0x2
0x4cc PUSH1 0x20
0x4ce MSTORE
0x4cf PUSH1 0x40
0x4d1 DUP1
0x4d2 DUP3
0x4d3 SHA3
0x4d4 SWAP4
0x4d5 SWAP1
0x4d6 SWAP4
0x4d7 SSTORE
0x4d8 SWAP1
0x4d9 SWAP2
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd MLOAD
0x4de PUSH1 0x20
0x4e0 PUSH2 0xb8c
0x4e3 DUP4
0x4e4 CODECOPY
0x4e5 DUP2
0x4e6 MLOAD
0x4e7 SWAP2
0x4e8 MSTORE
0x4e9 SWAP1
0x4ea DUP6
0x4eb SWAP1
0x4ec MLOAD
0x4ed SWAP1
0x4ee DUP2
0x4ef MSTORE
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 PUSH1 0x40
0x4f5 MLOAD
0x4f6 DUP1
0x4f7 SWAP2
0x4f8 SUB
0x4f9 SWAP1
0x4fa LOG3
0x4fb DUP3
0x4fc PUSH1 0x1
0x4fe PUSH1 0xa0
0x500 PUSH1 0x2
0x502 EXP
0x503 SUB
0x504 AND
0x505 PUSH32 0xf6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885
0x526 DUP4
0x527 PUSH1 0x40
0x529 MLOAD
0x52a SWAP1
0x52b DUP2
0x52c MSTORE
0x52d PUSH1 0x20
0x52f ADD
0x530 PUSH1 0x40
0x532 MLOAD
0x533 DUP1
0x534 SWAP2
0x535 SUB
0x536 SWAP1
0x537 LOG2
0x538 POP
0x539 PUSH1 0x1
0x53b SWAP3
0x53c SWAP2
0x53d POP
0x53e POP
0x53f JUMP
---
0x4ba: JUMPDEST 
0x4bb: V437 = 0x1
0x4bd: V438 = 0xa0
0x4bf: V439 = 0x2
0x4c1: V440 = EXP 0x2 0xa0
0x4c2: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c4: V442 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x4c5: V443 = 0x0
0x4c9: M[0x0] = V442
0x4ca: V444 = 0x2
0x4cc: V445 = 0x20
0x4ce: M[0x20] = 0x2
0x4cf: V446 = 0x40
0x4d3: V447 = SHA3 0x0 0x40
0x4d7: S[V447] = V841
0x4da: V448 = 0x0
0x4dd: V449 = M[0x0]
0x4de: V450 = 0x20
0x4e0: V451 = 0xb8c
0x4e4: CODECOPY 0x0 0xb8c 0x20
0x4e6: V452 = M[0x0]
0x4e8: M[0x0] = V449
0x4ec: V453 = M[0x40]
0x4ef: M[V453] = S2
0x4f0: V454 = 0x20
0x4f2: V455 = ADD 0x20 V453
0x4f3: V456 = 0x40
0x4f5: V457 = M[0x40]
0x4f8: V458 = SUB V455 V457
0x4fa: LOG V457 V458 V452 0x0 V442
0x4fc: V459 = 0x1
0x4fe: V460 = 0xa0
0x500: V461 = 0x2
0x502: V462 = EXP 0x2 0xa0
0x503: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x504: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x505: V465 = 0xf6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885
0x527: V466 = 0x40
0x529: V467 = M[0x40]
0x52c: M[V467] = S2
0x52d: V468 = 0x20
0x52f: V469 = ADD 0x20 V467
0x530: V470 = 0x40
0x532: V471 = M[0x40]
0x535: V472 = SUB V469 V471
0x537: LOG V471 V472 0xf6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885 V464
0x539: V473 = 0x1
0x53f: JUMP S4
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V841]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, 0x1]

================================

Block 0x540
[0x540:0x55a]
---
Predecessors: [0x1e7, 0x4a5, 0x749, 0x75d, 0x76f, 0x93d, 0x955, 0x961, 0xac0, 0xad7, 0xae9]
Successors: [0x158, 0x4b4, 0x752, 0x769, 0x794, 0x94a, 0xacc, 0xae3, 0xb0e]
---
0x540 JUMPDEST
0x541 PUSH1 0x1
0x543 PUSH1 0xa0
0x545 PUSH1 0x2
0x547 EXP
0x548 SUB
0x549 AND
0x54a PUSH1 0x0
0x54c SWAP1
0x54d DUP2
0x54e MSTORE
0x54f PUSH1 0x2
0x551 PUSH1 0x20
0x553 MSTORE
0x554 PUSH1 0x40
0x556 SWAP1
0x557 SHA3
0x558 SLOAD
0x559 SWAP1
0x55a JUMP
---
0x540: JUMPDEST 
0x541: V474 = 0x1
0x543: V475 = 0xa0
0x545: V476 = 0x2
0x547: V477 = EXP 0x2 0xa0
0x548: V478 = SUB 0x10000000000000000000000000000000000000000 0x1
0x549: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x54a: V480 = 0x0
0x54e: M[0x0] = V479
0x54f: V481 = 0x2
0x551: V482 = 0x20
0x553: M[0x20] = 0x2
0x554: V483 = 0x40
0x557: V484 = SHA3 0x0 0x40
0x558: V485 = S[V484]
0x55a: JUMP {0x158, 0x4b4, 0x752, 0x769, 0x794, 0x94a, 0xacc, 0xae3, 0xb0e}
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x158, 0x4b4, 0x752, 0x769, 0x794, 0x94a, 0xacc, 0xae3, 0xb0e}, S0]
Stack pops: 2
Stack additions: [V485]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V485]

================================

Block 0x55b
[0x55b:0x571]
---
Predecessors: [0x206]
Successors: [0x572, 0x576]
---
0x55b JUMPDEST
0x55c PUSH1 0x1
0x55e SLOAD
0x55f CALLER
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 SWAP1
0x569 DUP2
0x56a AND
0x56b SWAP2
0x56c AND
0x56d EQ
0x56e PUSH2 0x576
0x571 JUMPI
---
0x55b: JUMPDEST 
0x55c: V486 = 0x1
0x55e: V487 = S[0x1]
0x55f: V488 = CALLER
0x560: V489 = 0x1
0x562: V490 = 0xa0
0x564: V491 = 0x2
0x566: V492 = EXP 0x2 0xa0
0x567: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x56c: V495 = AND V487 0xffffffffffffffffffffffffffffffffffffffff
0x56d: V496 = EQ V495 V494
0x56e: V497 = 0x576
0x571: JUMPI 0x576 V496
---
Entry stack: [V13, 0x20e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x20e]

================================

Block 0x572
[0x572:0x575]
---
Predecessors: [0x55b]
Successors: []
---
0x572 PUSH1 0x0
0x574 DUP1
0x575 REVERT
---
0x572: V498 = 0x0
0x575: REVERT 0x0 0x0
---
Entry stack: [V13, 0x20e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x20e]

================================

Block 0x576
[0x576:0x583]
---
Predecessors: [0x55b]
Successors: []
---
0x576 JUMPDEST
0x577 PUSH1 0x1
0x579 SLOAD
0x57a PUSH1 0x1
0x57c PUSH1 0xa0
0x57e PUSH1 0x2
0x580 EXP
0x581 SUB
0x582 AND
0x583 SELFDESTRUCT
---
0x576: JUMPDEST 
0x577: V499 = 0x1
0x579: V500 = S[0x1]
0x57a: V501 = 0x1
0x57c: V502 = 0xa0
0x57e: V503 = 0x2
0x580: V504 = EXP 0x2 0xa0
0x581: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x582: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x583: SELFDESTRUCT V506
---
Entry stack: [V13, 0x20e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x20e]

================================

Block 0x584
[0x584:0x592]
---
Predecessors: [0x21b]
Successors: [0x223]
---
0x584 JUMPDEST
0x585 PUSH1 0x1
0x587 SLOAD
0x588 PUSH1 0x1
0x58a PUSH1 0xa0
0x58c PUSH1 0x2
0x58e EXP
0x58f SUB
0x590 AND
0x591 DUP2
0x592 JUMP
---
0x584: JUMPDEST 
0x585: V507 = 0x1
0x587: V508 = S[0x1]
0x588: V509 = 0x1
0x58a: V510 = 0xa0
0x58c: V511 = 0x2
0x58e: V512 = EXP 0x2 0xa0
0x58f: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x590: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x592: JUMP 0x223
---
Entry stack: [V13, 0x223]
Stack pops: 1
Stack additions: [S0, V514]
Exit stack: [V13, 0x223, V514]

================================

Block 0x593
[0x593:0x59a]
---
Predecessors: [0x24a]
Successors: [0xb79]
---
0x593 JUMPDEST
0x594 PUSH2 0x59b
0x597 PUSH2 0xb79
0x59a JUMP
---
0x593: JUMPDEST 
0x594: V515 = 0x59b
0x597: V516 = 0xb79
0x59a: JUMP 0xb79
---
Entry stack: [V13, 0xce]
Stack pops: 0
Stack additions: [0x59b]
Exit stack: [V13, 0xce, 0x59b]

================================

Block 0x59b
[0x59b:0x5ea]
---
Predecessors: [0xb79]
Successors: [0x45c, 0x5eb]
---
0x59b JUMPDEST
0x59c PUSH1 0x4
0x59e DUP1
0x59f SLOAD
0x5a0 PUSH1 0x1
0x5a2 DUP2
0x5a3 PUSH1 0x1
0x5a5 AND
0x5a6 ISZERO
0x5a7 PUSH2 0x100
0x5aa MUL
0x5ab SUB
0x5ac AND
0x5ad PUSH1 0x2
0x5af SWAP1
0x5b0 DIV
0x5b1 DUP1
0x5b2 PUSH1 0x1f
0x5b4 ADD
0x5b5 PUSH1 0x20
0x5b7 DUP1
0x5b8 SWAP2
0x5b9 DIV
0x5ba MUL
0x5bb PUSH1 0x20
0x5bd ADD
0x5be PUSH1 0x40
0x5c0 MLOAD
0x5c1 SWAP1
0x5c2 DUP2
0x5c3 ADD
0x5c4 PUSH1 0x40
0x5c6 MSTORE
0x5c7 DUP1
0x5c8 SWAP3
0x5c9 SWAP2
0x5ca SWAP1
0x5cb DUP2
0x5cc DUP2
0x5cd MSTORE
0x5ce PUSH1 0x20
0x5d0 ADD
0x5d1 DUP3
0x5d2 DUP1
0x5d3 SLOAD
0x5d4 PUSH1 0x1
0x5d6 DUP2
0x5d7 PUSH1 0x1
0x5d9 AND
0x5da ISZERO
0x5db PUSH2 0x100
0x5de MUL
0x5df SUB
0x5e0 AND
0x5e1 PUSH1 0x2
0x5e3 SWAP1
0x5e4 DIV
0x5e5 DUP1
0x5e6 ISZERO
0x5e7 PUSH2 0x45c
0x5ea JUMPI
---
0x59b: JUMPDEST 
0x59c: V517 = 0x4
0x59f: V518 = S[0x4]
0x5a0: V519 = 0x1
0x5a3: V520 = 0x1
0x5a5: V521 = AND 0x1 V518
0x5a6: V522 = ISZERO V521
0x5a7: V523 = 0x100
0x5aa: V524 = MUL 0x100 V522
0x5ab: V525 = SUB V524 0x1
0x5ac: V526 = AND V525 V518
0x5ad: V527 = 0x2
0x5b0: V528 = DIV V526 0x2
0x5b2: V529 = 0x1f
0x5b4: V530 = ADD 0x1f V528
0x5b5: V531 = 0x20
0x5b9: V532 = DIV V530 0x20
0x5ba: V533 = MUL V532 0x20
0x5bb: V534 = 0x20
0x5bd: V535 = ADD 0x20 V533
0x5be: V536 = 0x40
0x5c0: V537 = M[0x40]
0x5c3: V538 = ADD V537 V535
0x5c4: V539 = 0x40
0x5c6: M[0x40] = V538
0x5cd: M[V537] = V528
0x5ce: V540 = 0x20
0x5d0: V541 = ADD 0x20 V537
0x5d3: V542 = S[0x4]
0x5d4: V543 = 0x1
0x5d7: V544 = 0x1
0x5d9: V545 = AND 0x1 V542
0x5da: V546 = ISZERO V545
0x5db: V547 = 0x100
0x5de: V548 = MUL 0x100 V546
0x5df: V549 = SUB V548 0x1
0x5e0: V550 = AND V549 V542
0x5e1: V551 = 0x2
0x5e4: V552 = DIV V550 0x2
0x5e6: V553 = ISZERO V552
0x5e7: V554 = 0x45c
0x5ea: JUMPI 0x45c V553
---
Entry stack: [V13, 0x1c8, V219, S2, {0x0, 0xce}, V1052]
Stack pops: 0
Stack additions: [V537, 0x4, V528, V541, 0x4, V552]
Exit stack: [V13, 0x1c8, V219, S2, {0x0, 0xce}, V1052, V537, 0x4, V528, V541, 0x4, V552]

================================

Block 0x5eb
[0x5eb:0x5f2]
---
Predecessors: [0x59b]
Successors: [0x431, 0x5f3]
---
0x5eb DUP1
0x5ec PUSH1 0x1f
0x5ee LT
0x5ef PUSH2 0x431
0x5f2 JUMPI
---
0x5ec: V555 = 0x1f
0x5ee: V556 = LT 0x1f V552
0x5ef: V557 = 0x431
0x5f2: JUMPI 0x431 V556
---
Entry stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, V1052, V537, 0x4, V528, V541, 0x4, V552]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, V1052, V537, 0x4, V528, V541, 0x4, V552]

================================

Block 0x5f3
[0x5f3:0x605]
---
Predecessors: [0x5eb]
Successors: [0x45c]
---
0x5f3 PUSH2 0x100
0x5f6 DUP1
0x5f7 DUP4
0x5f8 SLOAD
0x5f9 DIV
0x5fa MUL
0x5fb DUP4
0x5fc MSTORE
0x5fd SWAP2
0x5fe PUSH1 0x20
0x600 ADD
0x601 SWAP2
0x602 PUSH2 0x45c
0x605 JUMP
---
0x5f3: V558 = 0x100
0x5f8: V559 = S[0x4]
0x5f9: V560 = DIV V559 0x100
0x5fa: V561 = MUL V560 0x100
0x5fc: M[V541] = V561
0x5fe: V562 = 0x20
0x600: V563 = ADD 0x20 V541
0x602: V564 = 0x45c
0x605: JUMP 0x45c
---
Entry stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, V1052, V537, 0x4, V528, V541, 0x4, V552]
Stack pops: 3
Stack additions: [V563, S1, S0]
Exit stack: [V13, 0x1c8, V219, S8, {0x0, 0xce}, V1052, V537, 0x4, V528, V563, 0x4, V552]

================================

Block 0x606
[0x606:0x60f]
---
Predecessors: [0x25d]
Successors: [0xb79]
---
0x606 JUMPDEST
0x607 PUSH1 0x0
0x609 PUSH2 0x610
0x60c PUSH2 0xb79
0x60f JUMP
---
0x606: JUMPDEST 
0x607: V565 = 0x0
0x609: V566 = 0x610
0x60c: V567 = 0xb79
0x60f: JUMP 0xb79
---
Entry stack: [V13, 0x1c8, V219, V221]
Stack pops: 0
Stack additions: [0x0, 0x610]
Exit stack: [V13, 0x1c8, V219, V221, 0x0, 0x610]

================================

Block 0x610
[0x610:0x618]
---
Predecessors: [0xb79]
Successors: [0x935]
---
0x610 JUMPDEST
0x611 PUSH2 0x619
0x614 DUP5
0x615 PUSH2 0x935
0x618 JUMP
---
0x610: JUMPDEST 
0x611: V568 = 0x619
0x615: V569 = 0x935
0x618: JUMP 0x935
---
Entry stack: [V13, 0x1c8, V219, S2, {0x0, 0xce}, V1052]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x619, S3]
Exit stack: [V13, 0x1c8, V219, S2, {0x0, 0xce}, V1052, 0x619, V219]

================================

Block 0x619
[0x619:0x61e]
---
Predecessors: [0x935]
Successors: [0x61f, 0x630]
---
0x619 JUMPDEST
0x61a ISZERO
0x61b PUSH2 0x630
0x61e JUMPI
---
0x619: JUMPDEST 
0x61a: V570 = ISZERO V844
0x61b: V571 = 0x630
0x61e: JUMPI 0x630 V570
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V844]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1]

================================

Block 0x61f
[0x61f:0x628]
---
Predecessors: [0x619]
Successors: [0x93d]
---
0x61f PUSH2 0x629
0x622 DUP5
0x623 DUP5
0x624 DUP4
0x625 PUSH2 0x93d
0x628 JUMP
---
0x61f: V572 = 0x629
0x625: V573 = 0x93d
0x628: JUMP 0x93d
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x629, S3, S2, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x629, S3, S2, S0]

================================

Block 0x629
[0x629:0x62f]
---
Predecessors: [0x915, 0xa7d, 0xb14]
Successors: [0x63b]
---
0x629 JUMPDEST
0x62a SWAP2
0x62b POP
0x62c PUSH2 0x63b
0x62f JUMP
---
0x629: JUMPDEST 
0x62c: V574 = 0x63b
0x62f: JUMP 0x63b
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V13, S6, S5, S4, S3, 0x1, S1]

================================

Block 0x630
[0x630:0x63a]
---
Predecessors: [0x619]
Successors: [0xac0]
---
0x630 JUMPDEST
0x631 PUSH2 0x629
0x634 DUP5
0x635 DUP5
0x636 DUP4
0x637 PUSH2 0xac0
0x63a JUMP
---
0x630: JUMPDEST 
0x631: V575 = 0x629
0x637: V576 = 0xac0
0x63a: JUMP 0xac0
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x629, S3, S2, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x629, S3, S2, S0]

================================

Block 0x63b
[0x63b:0x641]
---
Predecessors: [0x629]
Successors: [0x1c8]
---
0x63b JUMPDEST
0x63c POP
0x63d SWAP3
0x63e SWAP2
0x63f POP
0x640 POP
0x641 JUMP
---
0x63b: JUMPDEST 
0x641: JUMP S4
---
Entry stack: [V13, S5, S4, S3, S2, 0x1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V13, S5, 0x1]

================================

Block 0x642
[0x642:0x64c]
---
Predecessors: [0x27f]
Successors: [0x935]
---
0x642 JUMPDEST
0x643 PUSH1 0x0
0x645 PUSH2 0x64d
0x648 DUP5
0x649 PUSH2 0x935
0x64c JUMP
---
0x642: JUMPDEST 
0x643: V577 = 0x0
0x645: V578 = 0x64d
0x649: V579 = 0x935
0x64c: JUMP 0x935
---
Entry stack: [V13, 0x1c8, V235, V237, V251]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x64d, S2]
Exit stack: [V13, 0x1c8, V235, V237, V251, 0x0, 0x64d, V235]

================================

Block 0x64d
[0x64d:0x652]
---
Predecessors: [0x935]
Successors: [0x653, 0x664]
---
0x64d JUMPDEST
0x64e ISZERO
0x64f PUSH2 0x664
0x652 JUMPI
---
0x64d: JUMPDEST 
0x64e: V580 = ISZERO V844
0x64f: V581 = 0x664
0x652: JUMPI 0x664 V580
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V844]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1]

================================

Block 0x653
[0x653:0x65c]
---
Predecessors: [0x64d]
Successors: [0x93d]
---
0x653 PUSH2 0x65d
0x656 DUP5
0x657 DUP5
0x658 DUP5
0x659 PUSH2 0x93d
0x65c JUMP
---
0x653: V582 = 0x65d
0x659: V583 = 0x93d
0x65c: JUMP 0x93d
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x65d, S3, S2, S1]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x65d, S3, S2, S1]

================================

Block 0x65d
[0x65d:0x663]
---
Predecessors: [0x915, 0xa7d, 0xb14]
Successors: [0x66f]
---
0x65d JUMPDEST
0x65e SWAP1
0x65f POP
0x660 PUSH2 0x66f
0x663 JUMP
---
0x65d: JUMPDEST 
0x660: V584 = 0x66f
0x663: JUMP 0x66f
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, S3, S2, 0x1]

================================

Block 0x664
[0x664:0x66e]
---
Predecessors: [0x64d]
Successors: [0xac0]
---
0x664 JUMPDEST
0x665 PUSH2 0x65d
0x668 DUP5
0x669 DUP5
0x66a DUP5
0x66b PUSH2 0xac0
0x66e JUMP
---
0x664: JUMPDEST 
0x665: V585 = 0x65d
0x66b: V586 = 0xac0
0x66e: JUMP 0xac0
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x65d, S3, S2, S1]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x65d, S3, S2, S1]

================================

Block 0x66f
[0x66f:0x675]
---
Predecessors: [0x65d]
Successors: [0x1c8]
---
0x66f JUMPDEST
0x670 SWAP4
0x671 SWAP3
0x672 POP
0x673 POP
0x674 POP
0x675 JUMP
---
0x66f: JUMPDEST 
0x675: JUMP S4
---
Entry stack: [V13, S5, S4, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S5, 0x1]

================================

Block 0x676
[0x676:0x68c]
---
Predecessors: [0x2e4]
Successors: [0x68d, 0x691]
---
0x676 JUMPDEST
0x677 PUSH1 0x1
0x679 SLOAD
0x67a CALLER
0x67b PUSH1 0x1
0x67d PUSH1 0xa0
0x67f PUSH1 0x2
0x681 EXP
0x682 SUB
0x683 SWAP1
0x684 DUP2
0x685 AND
0x686 SWAP2
0x687 AND
0x688 EQ
0x689 PUSH2 0x691
0x68c JUMPI
---
0x676: JUMPDEST 
0x677: V587 = 0x1
0x679: V588 = S[0x1]
0x67a: V589 = CALLER
0x67b: V590 = 0x1
0x67d: V591 = 0xa0
0x67f: V592 = 0x2
0x681: V593 = EXP 0x2 0xa0
0x682: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x685: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x687: V596 = AND V588 0xffffffffffffffffffffffffffffffffffffffff
0x688: V597 = EQ V596 V595
0x689: V598 = 0x691
0x68c: JUMPI 0x691 V597
---
Entry stack: [V13, 0x20e, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x20e, V269]

================================

Block 0x68d
[0x68d:0x690]
---
Predecessors: [0x676]
Successors: []
---
0x68d PUSH1 0x0
0x68f DUP1
0x690 REVERT
---
0x68d: V599 = 0x0
0x690: REVERT 0x0 0x0
---
Entry stack: [V13, 0x20e, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x20e, V269]

================================

Block 0x691
[0x691:0x6a1]
---
Predecessors: [0x676]
Successors: [0x6a2, 0x6a6]
---
0x691 JUMPDEST
0x692 PUSH1 0x1
0x694 PUSH1 0xa0
0x696 PUSH1 0x2
0x698 EXP
0x699 SUB
0x69a DUP2
0x69b AND
0x69c ISZERO
0x69d ISZERO
0x69e PUSH2 0x6a6
0x6a1 JUMPI
---
0x691: JUMPDEST 
0x692: V600 = 0x1
0x694: V601 = 0xa0
0x696: V602 = 0x2
0x698: V603 = EXP 0x2 0xa0
0x699: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69b: V605 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x69c: V606 = ISZERO V605
0x69d: V607 = ISZERO V606
0x69e: V608 = 0x6a6
0x6a1: JUMPI 0x6a6 V607
---
Entry stack: [V13, 0x20e, V269]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x20e, V269]

================================

Block 0x6a2
[0x6a2:0x6a5]
---
Predecessors: [0x691]
Successors: []
---
0x6a2 PUSH1 0x0
0x6a4 DUP1
0x6a5 REVERT
---
0x6a2: V609 = 0x0
0x6a5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x20e, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x20e, V269]

================================

Block 0x6a6
[0x6a6:0x710]
---
Predecessors: [0x691]
Successors: [0x20e]
---
0x6a6 JUMPDEST
0x6a7 PUSH1 0x1
0x6a9 SLOAD
0x6aa PUSH1 0x1
0x6ac PUSH1 0xa0
0x6ae PUSH1 0x2
0x6b0 EXP
0x6b1 SUB
0x6b2 DUP1
0x6b3 DUP4
0x6b4 AND
0x6b5 SWAP2
0x6b6 AND
0x6b7 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6d8 PUSH1 0x40
0x6da MLOAD
0x6db PUSH1 0x40
0x6dd MLOAD
0x6de DUP1
0x6df SWAP2
0x6e0 SUB
0x6e1 SWAP1
0x6e2 LOG3
0x6e3 PUSH1 0x1
0x6e5 DUP1
0x6e6 SLOAD
0x6e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fc NOT
0x6fd AND
0x6fe PUSH1 0x1
0x700 PUSH1 0xa0
0x702 PUSH1 0x2
0x704 EXP
0x705 SUB
0x706 SWAP3
0x707 SWAP1
0x708 SWAP3
0x709 AND
0x70a SWAP2
0x70b SWAP1
0x70c SWAP2
0x70d OR
0x70e SWAP1
0x70f SSTORE
0x710 JUMP
---
0x6a6: JUMPDEST 
0x6a7: V610 = 0x1
0x6a9: V611 = S[0x1]
0x6aa: V612 = 0x1
0x6ac: V613 = 0xa0
0x6ae: V614 = 0x2
0x6b0: V615 = EXP 0x2 0xa0
0x6b1: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b4: V617 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V618 = AND V611 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V619 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6d8: V620 = 0x40
0x6da: V621 = M[0x40]
0x6db: V622 = 0x40
0x6dd: V623 = M[0x40]
0x6e0: V624 = SUB V621 V623
0x6e2: LOG V623 V624 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V618 V617
0x6e3: V625 = 0x1
0x6e6: V626 = S[0x1]
0x6e7: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fc: V628 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6fd: V629 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V626
0x6fe: V630 = 0x1
0x700: V631 = 0xa0
0x702: V632 = 0x2
0x704: V633 = EXP 0x2 0xa0
0x705: V634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x709: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x70d: V636 = OR V635 V629
0x70f: S[0x1] = V636
0x710: JUMP 0x20e
---
Entry stack: [V13, 0x20e, V269]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x711
[0x711:0x727]
---
Predecessors: [0x303]
Successors: [0x728, 0x72c]
---
0x711 JUMPDEST
0x712 PUSH1 0x1
0x714 SLOAD
0x715 CALLER
0x716 PUSH1 0x1
0x718 PUSH1 0xa0
0x71a PUSH1 0x2
0x71c EXP
0x71d SUB
0x71e SWAP1
0x71f DUP2
0x720 AND
0x721 SWAP2
0x722 AND
0x723 EQ
0x724 PUSH2 0x72c
0x727 JUMPI
---
0x711: JUMPDEST 
0x712: V637 = 0x1
0x714: V638 = S[0x1]
0x715: V639 = CALLER
0x716: V640 = 0x1
0x718: V641 = 0xa0
0x71a: V642 = 0x2
0x71c: V643 = EXP 0x2 0xa0
0x71d: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x720: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x722: V646 = AND V638 0xffffffffffffffffffffffffffffffffffffffff
0x723: V647 = EQ V646 V645
0x724: V648 = 0x72c
0x727: JUMPI 0x72c V647
---
Entry stack: [V13, 0x20e, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x20e, V283]

================================

Block 0x728
[0x728:0x72b]
---
Predecessors: [0x711]
Successors: []
---
0x728 PUSH1 0x0
0x72a DUP1
0x72b REVERT
---
0x728: V649 = 0x0
0x72b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x20e, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x20e, V283]

================================

Block 0x72c
[0x72c:0x737]
---
Predecessors: [0x711]
Successors: []
---
0x72c JUMPDEST
0x72d DUP1
0x72e PUSH1 0x1
0x730 PUSH1 0xa0
0x732 PUSH1 0x2
0x734 EXP
0x735 SUB
0x736 AND
0x737 SELFDESTRUCT
---
0x72c: JUMPDEST 
0x72e: V650 = 0x1
0x730: V651 = 0xa0
0x732: V652 = 0x2
0x734: V653 = EXP 0x2 0xa0
0x735: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x736: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x737: SELFDESTRUCT V655
---
Entry stack: [V13, 0x20e, V283]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x20e, V283]

================================

Block 0x738
[0x738:0x742]
---
Predecessors: [0x322]
Successors: [0x935]
---
0x738 JUMPDEST
0x739 PUSH1 0x0
0x73b PUSH2 0x743
0x73e DUP6
0x73f PUSH2 0x935
0x742 JUMP
---
0x738: JUMPDEST 
0x739: V656 = 0x0
0x73b: V657 = 0x743
0x73f: V658 = 0x935
0x742: JUMP 0x935
---
Entry stack: [V13, 0x1c8, V297, V299, V313, V334]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x743, S3]
Exit stack: [V13, 0x1c8, V297, V299, V313, V334, 0x0, 0x743, V297]

================================

Block 0x743
[0x743:0x748]
---
Predecessors: [0x935]
Successors: [0x749, 0x907]
---
0x743 JUMPDEST
0x744 ISZERO
0x745 PUSH2 0x907
0x748 JUMPI
---
0x743: JUMPDEST 
0x744: V659 = ISZERO V844
0x745: V660 = 0x907
0x748: JUMPI 0x907 V659
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V844]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1]

================================

Block 0x749
[0x749:0x751]
---
Predecessors: [0x743]
Successors: [0x540]
---
0x749 DUP4
0x74a PUSH2 0x752
0x74d CALLER
0x74e PUSH2 0x540
0x751 JUMP
---
0x74a: V661 = 0x752
0x74d: V662 = CALLER
0x74e: V663 = 0x540
0x751: JUMP 0x540
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x752, V662]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, S3, 0x752, V662]

================================

Block 0x752
[0x752:0x758]
---
Predecessors: [0x540]
Successors: [0x759, 0x75d]
---
0x752 JUMPDEST
0x753 LT
0x754 ISZERO
0x755 PUSH2 0x75d
0x758 JUMPI
---
0x752: JUMPDEST 
0x753: V664 = LT V485 S1
0x754: V665 = ISZERO V664
0x755: V666 = 0x75d
0x758: JUMPI 0x75d V665
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x759
[0x759:0x75c]
---
Predecessors: [0x752]
Successors: []
---
0x759 PUSH1 0x0
0x75b DUP1
0x75c REVERT
---
0x759: V667 = 0x0
0x75c: REVERT 0x0 0x0
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x75d
[0x75d:0x768]
---
Predecessors: [0x752]
Successors: [0x540]
---
0x75d JUMPDEST
0x75e PUSH2 0x76f
0x761 PUSH2 0x769
0x764 CALLER
0x765 PUSH2 0x540
0x768 JUMP
---
0x75d: JUMPDEST 
0x75e: V668 = 0x76f
0x761: V669 = 0x769
0x764: V670 = CALLER
0x765: V671 = 0x540
0x768: JUMP 0x540
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x76f, 0x769, V670]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x76f, 0x769, V670]

================================

Block 0x769
[0x769:0x76e]
---
Predecessors: [0x540]
Successors: [0xb64]
---
0x769 JUMPDEST
0x76a DUP6
0x76b PUSH2 0xb64
0x76e JUMP
---
0x769: JUMPDEST 
0x76b: V672 = 0xb64
0x76e: JUMP 0xb64
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485, S5]

================================

Block 0x76f
[0x76f:0x793]
---
Predecessors: [0x930, 0xb73]
Successors: [0x540]
---
0x76f JUMPDEST
0x770 PUSH1 0x1
0x772 PUSH1 0xa0
0x774 PUSH1 0x2
0x776 EXP
0x777 SUB
0x778 CALLER
0x779 AND
0x77a PUSH1 0x0
0x77c SWAP1
0x77d DUP2
0x77e MSTORE
0x77f PUSH1 0x2
0x781 PUSH1 0x20
0x783 MSTORE
0x784 PUSH1 0x40
0x786 SWAP1
0x787 SHA3
0x788 SSTORE
0x789 PUSH2 0x79a
0x78c PUSH2 0x794
0x78f DUP7
0x790 PUSH2 0x540
0x793 JUMP
---
0x76f: JUMPDEST 
0x770: V673 = 0x1
0x772: V674 = 0xa0
0x774: V675 = 0x2
0x776: V676 = EXP 0x2 0xa0
0x777: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x778: V678 = CALLER
0x779: V679 = AND V678 0xffffffffffffffffffffffffffffffffffffffff
0x77a: V680 = 0x0
0x77e: M[0x0] = V679
0x77f: V681 = 0x2
0x781: V682 = 0x20
0x783: M[0x20] = 0x2
0x784: V683 = 0x40
0x787: V684 = SHA3 0x0 0x40
0x788: S[V684] = V1049
0x789: V685 = 0x79a
0x78c: V686 = 0x794
0x790: V687 = 0x540
0x793: JUMP 0x540
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1049]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x79a, 0x794, S5]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x79a, 0x794, S5]

================================

Block 0x794
[0x794:0x799]
---
Predecessors: [0x540]
Successors: [0x91d]
---
0x794 JUMPDEST
0x795 DUP6
0x796 PUSH2 0x91d
0x799 JUMP
---
0x794: JUMPDEST 
0x796: V688 = 0x91d
0x799: JUMP 0x91d
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485, S5]

================================

Block 0x79a
[0x79a:0x7c8]
---
Predecessors: [0x930]
Successors: [0x7c9]
---
0x79a JUMPDEST
0x79b PUSH1 0x1
0x79d PUSH1 0xa0
0x79f PUSH1 0x2
0x7a1 EXP
0x7a2 SUB
0x7a3 DUP7
0x7a4 AND
0x7a5 PUSH1 0x0
0x7a7 DUP2
0x7a8 DUP2
0x7a9 MSTORE
0x7aa PUSH1 0x2
0x7ac PUSH1 0x20
0x7ae MSTORE
0x7af PUSH1 0x40
0x7b1 DUP1
0x7b2 DUP3
0x7b3 SHA3
0x7b4 SWAP4
0x7b5 SWAP1
0x7b6 SWAP4
0x7b7 SSTORE
0x7b8 SWAP1
0x7b9 SWAP2
0x7ba DUP5
0x7bb SWAP1
0x7bc MLOAD
0x7bd DUP1
0x7be DUP3
0x7bf DUP1
0x7c0 MLOAD
0x7c1 SWAP1
0x7c2 PUSH1 0x20
0x7c4 ADD
0x7c5 SWAP1
0x7c6 DUP1
0x7c7 DUP4
0x7c8 DUP4
---
0x79a: JUMPDEST 
0x79b: V689 = 0x1
0x79d: V690 = 0xa0
0x79f: V691 = 0x2
0x7a1: V692 = EXP 0x2 0xa0
0x7a2: V693 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a4: V694 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x7a5: V695 = 0x0
0x7a9: M[0x0] = V694
0x7aa: V696 = 0x2
0x7ac: V697 = 0x20
0x7ae: M[0x20] = 0x2
0x7af: V698 = 0x40
0x7b3: V699 = SHA3 0x0 0x40
0x7b7: S[V699] = V841
0x7bc: V700 = M[0x40]
0x7c0: V701 = M[S2]
0x7c2: V702 = 0x20
0x7c4: V703 = ADD 0x20 S2
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V841]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V694, 0x0, S2, V700, V700, V703, V701, V701, V700, V703]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V694, 0x0, S2, V700, V700, V703, V701, V701, V700, V703]

================================

Block 0x7c9
[0x7c9:0x7d1]
---
Predecessors: [0x79a, 0x7d2]
Successors: [0x7d2, 0x7e8]
---
0x7c9 JUMPDEST
0x7ca PUSH1 0x20
0x7cc DUP4
0x7cd LT
0x7ce PUSH2 0x7e8
0x7d1 JUMPI
---
0x7c9: JUMPDEST 
0x7ca: V704 = 0x20
0x7cd: V705 = LT S2 0x20
0x7ce: V706 = 0x7e8
0x7d1: JUMPI 0x7e8 V705
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V694, 0x0, S7, V700, V700, V703, V701, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V694, 0x0, S7, V700, V700, V703, V701, S2, S1, S0]

================================

Block 0x7d2
[0x7d2:0x7e7]
---
Predecessors: [0x7c9]
Successors: [0x7c9]
---
0x7d2 DUP1
0x7d3 MLOAD
0x7d4 DUP3
0x7d5 MSTORE
0x7d6 PUSH1 0x1f
0x7d8 NOT
0x7d9 SWAP1
0x7da SWAP3
0x7db ADD
0x7dc SWAP2
0x7dd PUSH1 0x20
0x7df SWAP2
0x7e0 DUP3
0x7e1 ADD
0x7e2 SWAP2
0x7e3 ADD
0x7e4 PUSH2 0x7c9
0x7e7 JUMP
---
0x7d3: V707 = M[S0]
0x7d5: M[S1] = V707
0x7d6: V708 = 0x1f
0x7d8: V709 = NOT 0x1f
0x7db: V710 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7dd: V711 = 0x20
0x7e1: V712 = ADD 0x20 S1
0x7e3: V713 = ADD 0x20 S0
0x7e4: V714 = 0x7c9
0x7e7: JUMP 0x7c9
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V694, 0x0, S7, V700, V700, V703, V701, S2, S1, S0]
Stack pops: 3
Stack additions: [V710, V712, V713]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V694, 0x0, S7, V700, V700, V703, V701, V710, V712, V713]

================================

Block 0x7e8
[0x7e8:0x860]
---
Predecessors: [0x7c9]
Successors: [0x861]
---
0x7e8 JUMPDEST
0x7e9 PUSH1 0x1
0x7eb DUP4
0x7ec PUSH1 0x20
0x7ee SUB
0x7ef PUSH2 0x100
0x7f2 EXP
0x7f3 SUB
0x7f4 DUP1
0x7f5 NOT
0x7f6 DUP3
0x7f7 MLOAD
0x7f8 AND
0x7f9 DUP2
0x7fa DUP5
0x7fb MLOAD
0x7fc AND
0x7fd OR
0x7fe SWAP1
0x7ff SWAP3
0x800 MSTORE
0x801 POP
0x802 POP
0x803 POP
0x804 SWAP2
0x805 SWAP1
0x806 SWAP2
0x807 ADD
0x808 SWAP3
0x809 POP
0x80a PUSH1 0x40
0x80c SWAP2
0x80d POP
0x80e POP
0x80f MLOAD
0x810 DUP1
0x811 SWAP2
0x812 SUB
0x813 SWAP1
0x814 SHA3
0x815 PUSH1 0xe0
0x817 PUSH1 0x2
0x819 EXP
0x81a SWAP1
0x81b DIV
0x81c SWAP1
0x81d CALLER
0x81e DUP8
0x81f DUP8
0x820 PUSH1 0x40
0x822 MLOAD
0x823 DUP6
0x824 PUSH4 0xffffffff
0x829 AND
0x82a PUSH1 0xe0
0x82c PUSH1 0x2
0x82e EXP
0x82f MUL
0x830 DUP2
0x831 MSTORE
0x832 PUSH1 0x4
0x834 ADD
0x835 DUP1
0x836 DUP5
0x837 PUSH1 0x1
0x839 PUSH1 0xa0
0x83b PUSH1 0x2
0x83d EXP
0x83e SUB
0x83f AND
0x840 PUSH1 0x1
0x842 PUSH1 0xa0
0x844 PUSH1 0x2
0x846 EXP
0x847 SUB
0x848 AND
0x849 DUP2
0x84a MSTORE
0x84b PUSH1 0x20
0x84d ADD
0x84e DUP4
0x84f DUP2
0x850 MSTORE
0x851 PUSH1 0x20
0x853 ADD
0x854 DUP3
0x855 DUP1
0x856 MLOAD
0x857 SWAP1
0x858 PUSH1 0x20
0x85a ADD
0x85b SWAP1
0x85c DUP1
0x85d DUP4
0x85e DUP4
0x85f PUSH1 0x0
---
0x7e8: JUMPDEST 
0x7e9: V715 = 0x1
0x7ec: V716 = 0x20
0x7ee: V717 = SUB 0x20 S2
0x7ef: V718 = 0x100
0x7f2: V719 = EXP 0x100 V717
0x7f3: V720 = SUB V719 0x1
0x7f5: V721 = NOT V720
0x7f7: V722 = M[S0]
0x7f8: V723 = AND V722 V721
0x7fb: V724 = M[S1]
0x7fc: V725 = AND V724 V720
0x7fd: V726 = OR V725 V723
0x800: M[S1] = V726
0x807: V727 = ADD V701 V700
0x80a: V728 = 0x40
0x80f: V729 = M[0x40]
0x812: V730 = SUB V727 V729
0x814: V731 = SHA3 V729 V730
0x815: V732 = 0xe0
0x817: V733 = 0x2
0x819: V734 = EXP 0x2 0xe0
0x81b: V735 = DIV V731 0x100000000000000000000000000000000000000000000000000000000
0x81d: V736 = CALLER
0x820: V737 = 0x40
0x822: V738 = M[0x40]
0x824: V739 = 0xffffffff
0x829: V740 = AND 0xffffffff V735
0x82a: V741 = 0xe0
0x82c: V742 = 0x2
0x82e: V743 = EXP 0x2 0xe0
0x82f: V744 = MUL 0x100000000000000000000000000000000000000000000000000000000 V740
0x831: M[V738] = V744
0x832: V745 = 0x4
0x834: V746 = ADD 0x4 V738
0x837: V747 = 0x1
0x839: V748 = 0xa0
0x83b: V749 = 0x2
0x83d: V750 = EXP 0x2 0xa0
0x83e: V751 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83f: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x840: V753 = 0x1
0x842: V754 = 0xa0
0x844: V755 = 0x2
0x846: V756 = EXP 0x2 0xa0
0x847: V757 = SUB 0x10000000000000000000000000000000000000000 0x1
0x848: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V752
0x84a: M[V746] = V758
0x84b: V759 = 0x20
0x84d: V760 = ADD 0x20 V746
0x850: M[V760] = S13
0x851: V761 = 0x20
0x853: V762 = ADD 0x20 V760
0x856: V763 = M[S12]
0x858: V764 = 0x20
0x85a: V765 = ADD 0x20 S12
0x85f: V766 = 0x0
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V694, 0x0, S7, V700, V700, V703, V701, S2, S1, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, V735, S8, V736, S13, S12, V746, V762, V765, V763, V763, V762, V765, 0x0]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V694, V735, 0x0, V736, S13, S12, V746, V762, V765, V763, V763, V762, V765, 0x0]

================================

Block 0x861
[0x861:0x869]
---
Predecessors: [0x7e8, 0x86a]
Successors: [0x86a, 0x879]
---
0x861 JUMPDEST
0x862 DUP4
0x863 DUP2
0x864 LT
0x865 ISZERO
0x866 PUSH2 0x879
0x869 JUMPI
---
0x861: JUMPDEST 
0x864: V767 = LT S0 V763
0x865: V768 = ISZERO V767
0x866: V769 = 0x879
0x869: JUMPI 0x879 V768
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V694, V735, 0x0, V736, S9, S8, V746, V762, V765, V763, V763, V762, V765, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V694, V735, 0x0, V736, S9, S8, V746, V762, V765, V763, V763, V762, V765, S0]

================================

Block 0x86a
[0x86a:0x878]
---
Predecessors: [0x861]
Successors: [0x861]
---
0x86a DUP1
0x86b DUP3
0x86c ADD
0x86d MLOAD
0x86e DUP4
0x86f DUP3
0x870 ADD
0x871 MSTORE
0x872 PUSH1 0x20
0x874 ADD
0x875 PUSH2 0x861
0x878 JUMP
---
0x86c: V770 = ADD V765 S0
0x86d: V771 = M[V770]
0x870: V772 = ADD S0 V762
0x871: M[V772] = V771
0x872: V773 = 0x20
0x874: V774 = ADD 0x20 S0
0x875: V775 = 0x861
0x878: JUMP 0x861
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V694, V735, 0x0, V736, S9, S8, V746, V762, V765, V763, V763, V762, V765, S0]
Stack pops: 3
Stack additions: [S2, S1, V774]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V694, V735, 0x0, V736, S9, S8, V746, V762, V765, V763, V763, V762, V765, V774]

================================

Block 0x879
[0x879:0x88c]
---
Predecessors: [0x861]
Successors: [0x88d, 0x8a6]
---
0x879 JUMPDEST
0x87a POP
0x87b POP
0x87c POP
0x87d POP
0x87e SWAP1
0x87f POP
0x880 SWAP1
0x881 DUP2
0x882 ADD
0x883 SWAP1
0x884 PUSH1 0x1f
0x886 AND
0x887 DUP1
0x888 ISZERO
0x889 PUSH2 0x8a6
0x88c JUMPI
---
0x879: JUMPDEST 
0x882: V776 = ADD V763 V762
0x884: V777 = 0x1f
0x886: V778 = AND 0x1f V763
0x888: V779 = ISZERO V778
0x889: V780 = 0x8a6
0x88c: JUMPI 0x8a6 V779
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V694, V735, 0x0, V736, S9, S8, V746, V762, V765, V763, V763, V762, V765, S0]
Stack pops: 7
Stack additions: [V776, V778]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V694, V735, 0x0, V736, S9, S8, V746, V776, V778]

================================

Block 0x88d
[0x88d:0x8a5]
---
Predecessors: [0x879]
Successors: [0x8a6]
---
0x88d DUP1
0x88e DUP3
0x88f SUB
0x890 DUP1
0x891 MLOAD
0x892 PUSH1 0x1
0x894 DUP4
0x895 PUSH1 0x20
0x897 SUB
0x898 PUSH2 0x100
0x89b EXP
0x89c SUB
0x89d NOT
0x89e AND
0x89f DUP2
0x8a0 MSTORE
0x8a1 PUSH1 0x20
0x8a3 ADD
0x8a4 SWAP2
0x8a5 POP
---
0x88f: V781 = SUB V776 V778
0x891: V782 = M[V781]
0x892: V783 = 0x1
0x895: V784 = 0x20
0x897: V785 = SUB 0x20 V778
0x898: V786 = 0x100
0x89b: V787 = EXP 0x100 V785
0x89c: V788 = SUB V787 0x1
0x89d: V789 = NOT V788
0x89e: V790 = AND V789 V782
0x8a0: M[V781] = V790
0x8a1: V791 = 0x20
0x8a3: V792 = ADD 0x20 V781
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, V694, V735, 0x0, V736, S4, S3, V746, V776, V778]
Stack pops: 2
Stack additions: [V792, S0]
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, V694, V735, 0x0, V736, S4, S3, V746, V792, V778]

================================

Block 0x8a6
[0x8a6:0x8c8]
---
Predecessors: [0x879, 0x88d]
Successors: [0x8c9, 0x8ca]
---
0x8a6 JUMPDEST
0x8a7 POP
0x8a8 SWAP4
0x8a9 POP
0x8aa POP
0x8ab POP
0x8ac POP
0x8ad PUSH1 0x0
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 DUP1
0x8b3 DUP4
0x8b4 SUB
0x8b5 DUP2
0x8b6 DUP6
0x8b7 DUP9
0x8b8 PUSH2 0x8796
0x8bb GAS
0x8bc SUB
0x8bd CALL
0x8be SWAP4
0x8bf POP
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 ISZERO
0x8c4 ISZERO
0x8c5 PUSH2 0x8ca
0x8c8 JUMPI
---
0x8a6: JUMPDEST 
0x8ad: V793 = 0x0
0x8af: V794 = 0x40
0x8b1: V795 = M[0x40]
0x8b4: V796 = SUB S1 V795
0x8b8: V797 = 0x8796
0x8bb: V798 = GAS
0x8bc: V799 = SUB V798 0x8796
0x8bd: V800 = CALL V799 V694 0x0 V795 V796 V795 0x0
0x8c3: V801 = ISZERO V800
0x8c4: V802 = ISZERO V801
0x8c5: V803 = 0x8ca
0x8c8: JUMPI 0x8ca V802
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, V694, V735, 0x0, V736, S4, S3, V746, S1, V778]
Stack pops: 9
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0]

================================

Block 0x8c9
[0x8c9:0x8c9]
---
Predecessors: [0x8a6]
Successors: []
---
0x8c9 INVALID
---
0x8c9: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x8ca
[0x8ca:0x906]
---
Predecessors: [0x8a6]
Successors: [0x915]
---
0x8ca JUMPDEST
0x8cb DUP5
0x8cc PUSH1 0x1
0x8ce PUSH1 0xa0
0x8d0 PUSH1 0x2
0x8d2 EXP
0x8d3 SUB
0x8d4 AND
0x8d5 CALLER
0x8d6 PUSH1 0x1
0x8d8 PUSH1 0xa0
0x8da PUSH1 0x2
0x8dc EXP
0x8dd SUB
0x8de AND
0x8df PUSH1 0x0
0x8e1 DUP1
0x8e2 MLOAD
0x8e3 PUSH1 0x20
0x8e5 PUSH2 0xb8c
0x8e8 DUP4
0x8e9 CODECOPY
0x8ea DUP2
0x8eb MLOAD
0x8ec SWAP2
0x8ed MSTORE
0x8ee DUP7
0x8ef PUSH1 0x40
0x8f1 MLOAD
0x8f2 SWAP1
0x8f3 DUP2
0x8f4 MSTORE
0x8f5 PUSH1 0x20
0x8f7 ADD
0x8f8 PUSH1 0x40
0x8fa MLOAD
0x8fb DUP1
0x8fc SWAP2
0x8fd SUB
0x8fe SWAP1
0x8ff LOG3
0x900 POP
0x901 PUSH1 0x1
0x903 PUSH2 0x915
0x906 JUMP
---
0x8ca: JUMPDEST 
0x8cc: V804 = 0x1
0x8ce: V805 = 0xa0
0x8d0: V806 = 0x2
0x8d2: V807 = EXP 0x2 0xa0
0x8d3: V808 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d4: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x8d5: V810 = CALLER
0x8d6: V811 = 0x1
0x8d8: V812 = 0xa0
0x8da: V813 = 0x2
0x8dc: V814 = EXP 0x2 0xa0
0x8dd: V815 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8de: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff V810
0x8df: V817 = 0x0
0x8e2: V818 = M[0x0]
0x8e3: V819 = 0x20
0x8e5: V820 = 0xb8c
0x8e9: CODECOPY 0x0 0xb8c 0x20
0x8eb: V821 = M[0x0]
0x8ed: M[0x0] = V818
0x8ef: V822 = 0x40
0x8f1: V823 = M[0x40]
0x8f4: M[V823] = S3
0x8f5: V824 = 0x20
0x8f7: V825 = ADD 0x20 V823
0x8f8: V826 = 0x40
0x8fa: V827 = M[0x40]
0x8fd: V828 = SUB V825 V827
0x8ff: LOG V827 V828 V821 V816 V809
0x901: V829 = 0x1
0x903: V830 = 0x915
0x906: JUMP 0x915
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x1]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x907
[0x907:0x911]
---
Predecessors: [0x743]
Successors: [0xac0]
---
0x907 JUMPDEST
0x908 PUSH2 0x912
0x90b DUP6
0x90c DUP6
0x90d DUP6
0x90e PUSH2 0xac0
0x911 JUMP
---
0x907: JUMPDEST 
0x908: V831 = 0x912
0x90e: V832 = 0xac0
0x911: JUMP 0xac0
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x912, S4, S3, S2]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x912, S4, S3, S2]

================================

Block 0x912
[0x912:0x914]
---
Predecessors: [0xb14]
Successors: [0x915]
---
0x912 JUMPDEST
0x913 SWAP1
0x914 POP
---
0x912: JUMPDEST 
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, S3, S2, 0x1]

================================

Block 0x915
[0x915:0x91c]
---
Predecessors: [0x8ca, 0x912]
Successors: [0x1c8, 0x629, 0x65d]
---
0x915 JUMPDEST
0x916 SWAP5
0x917 SWAP4
0x918 POP
0x919 POP
0x91a POP
0x91b POP
0x91c JUMP
---
0x915: JUMPDEST 
0x91c: JUMP S5
---
Entry stack: [V13, S5, S4, S3, S2, S1, 0x1]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V13, 0x1]

================================

Block 0x91d
[0x91d:0x92b]
---
Predecessors: [0x499, 0x4b4, 0x794, 0xb0e]
Successors: [0x92c, 0x930]
---
0x91d JUMPDEST
0x91e PUSH1 0x0
0x920 DUP2
0x921 PUSH1 0x0
0x923 NOT
0x924 SUB
0x925 DUP4
0x926 GT
0x927 ISZERO
0x928 PUSH2 0x930
0x92b JUMPI
---
0x91d: JUMPDEST 
0x91e: V833 = 0x0
0x921: V834 = 0x0
0x923: V835 = NOT 0x0
0x924: V836 = SUB 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0x926: V837 = GT S1 V836
0x927: V838 = ISZERO V837
0x928: V839 = 0x930
0x92b: JUMPI 0x930 V838
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x92c
[0x92c:0x92f]
---
Predecessors: [0x91d]
Successors: []
---
0x92c PUSH1 0x0
0x92e DUP1
0x92f REVERT
---
0x92c: V840 = 0x0
0x92f: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, S1, 0x0]

================================

Block 0x930
[0x930:0x934]
---
Predecessors: [0x91d]
Successors: [0x4a5, 0x4ba, 0x76f, 0x79a, 0x961, 0x986, 0xae9, 0xb14]
---
0x930 JUMPDEST
0x931 POP
0x932 ADD
0x933 SWAP1
0x934 JUMP
---
0x930: JUMPDEST 
0x932: V841 = ADD S1 S2
0x934: JUMP S3
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V841]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V841]

================================

Block 0x935
[0x935:0x93c]
---
Predecessors: [0x610, 0x642, 0x738]
Successors: [0x619, 0x64d, 0x743]
---
0x935 JUMPDEST
0x936 PUSH1 0x0
0x938 SWAP1
0x939 EXTCODESIZE
0x93a GT
0x93b SWAP1
0x93c JUMP
---
0x935: JUMPDEST 
0x936: V842 = 0x0
0x939: V843 = EXTCODESIZE S0
0x93a: V844 = GT V843 0x0
0x93c: JUMP {0x619, 0x64d, 0x743}
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, {0x619, 0x64d, 0x743}, S0]
Stack pops: 2
Stack additions: [V844]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, V844]

================================

Block 0x93d
[0x93d:0x949]
---
Predecessors: [0x61f, 0x653]
Successors: [0x540]
---
0x93d JUMPDEST
0x93e PUSH1 0x0
0x940 DUP1
0x941 DUP4
0x942 PUSH2 0x94a
0x945 CALLER
0x946 PUSH2 0x540
0x949 JUMP
---
0x93d: JUMPDEST 
0x93e: V845 = 0x0
0x942: V846 = 0x94a
0x945: V847 = CALLER
0x946: V848 = 0x540
0x949: JUMP 0x540
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x629, 0x65d}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S1, 0x94a, V847]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x629, 0x65d}, S2, S1, S0, 0x0, 0x0, S1, 0x94a, V847]

================================

Block 0x94a
[0x94a:0x950]
---
Predecessors: [0x540]
Successors: [0x951, 0x955]
---
0x94a JUMPDEST
0x94b LT
0x94c ISZERO
0x94d PUSH2 0x955
0x950 JUMPI
---
0x94a: JUMPDEST 
0x94b: V849 = LT V485 S1
0x94c: V850 = ISZERO V849
0x94d: V851 = 0x955
0x950: JUMPI 0x955 V850
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x951
[0x951:0x954]
---
Predecessors: [0x94a]
Successors: []
---
0x951 PUSH1 0x0
0x953 DUP1
0x954 REVERT
---
0x951: V852 = 0x0
0x954: REVERT 0x0 0x0
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x955
[0x955:0x960]
---
Predecessors: [0x94a]
Successors: [0x540]
---
0x955 JUMPDEST
0x956 PUSH2 0x961
0x959 PUSH2 0x769
0x95c CALLER
0x95d PUSH2 0x540
0x960 JUMP
---
0x955: JUMPDEST 
0x956: V853 = 0x961
0x959: V854 = 0x769
0x95c: V855 = CALLER
0x95d: V856 = 0x540
0x960: JUMP 0x540
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x961, 0x769, V855]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x961, 0x769, V855]

================================

Block 0x961
[0x961:0x985]
---
Predecessors: [0x930, 0xb73]
Successors: [0x540]
---
0x961 JUMPDEST
0x962 PUSH1 0x1
0x964 PUSH1 0xa0
0x966 PUSH1 0x2
0x968 EXP
0x969 SUB
0x96a CALLER
0x96b AND
0x96c PUSH1 0x0
0x96e SWAP1
0x96f DUP2
0x970 MSTORE
0x971 PUSH1 0x2
0x973 PUSH1 0x20
0x975 MSTORE
0x976 PUSH1 0x40
0x978 SWAP1
0x979 SHA3
0x97a SSTORE
0x97b PUSH2 0x986
0x97e PUSH2 0x794
0x981 DUP7
0x982 PUSH2 0x540
0x985 JUMP
---
0x961: JUMPDEST 
0x962: V857 = 0x1
0x964: V858 = 0xa0
0x966: V859 = 0x2
0x968: V860 = EXP 0x2 0xa0
0x969: V861 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96a: V862 = CALLER
0x96b: V863 = AND V862 0xffffffffffffffffffffffffffffffffffffffff
0x96c: V864 = 0x0
0x970: M[0x0] = V863
0x971: V865 = 0x2
0x973: V866 = 0x20
0x975: M[0x20] = 0x2
0x976: V867 = 0x40
0x979: V868 = SHA3 0x0 0x40
0x97a: S[V868] = V1049
0x97b: V869 = 0x986
0x97e: V870 = 0x794
0x982: V871 = 0x540
0x985: JUMP 0x540
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1049]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x986, 0x794, S5]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x986, 0x794, S5]

================================

Block 0x986
[0x986:0xa06]
---
Predecessors: [0x930]
Successors: [0xa07]
---
0x986 JUMPDEST
0x987 PUSH1 0x1
0x989 PUSH1 0xa0
0x98b PUSH1 0x2
0x98d EXP
0x98e SUB
0x98f DUP7
0x990 AND
0x991 PUSH1 0x0
0x993 DUP2
0x994 DUP2
0x995 MSTORE
0x996 PUSH1 0x2
0x998 PUSH1 0x20
0x99a MSTORE
0x99b PUSH1 0x40
0x99d SWAP1
0x99e DUP2
0x99f SWAP1
0x9a0 SHA3
0x9a1 SWAP3
0x9a2 SWAP1
0x9a3 SWAP3
0x9a4 SSTORE
0x9a5 DUP7
0x9a6 SWAP3
0x9a7 POP
0x9a8 SWAP1
0x9a9 PUSH4 0xc0ee0b8a
0x9ae SWAP1
0x9af CALLER
0x9b0 SWAP1
0x9b1 DUP8
0x9b2 SWAP1
0x9b3 DUP8
0x9b4 SWAP1
0x9b5 MLOAD
0x9b6 DUP5
0x9b7 PUSH4 0xffffffff
0x9bc AND
0x9bd PUSH1 0xe0
0x9bf PUSH1 0x2
0x9c1 EXP
0x9c2 MUL
0x9c3 DUP2
0x9c4 MSTORE
0x9c5 PUSH1 0x4
0x9c7 ADD
0x9c8 DUP1
0x9c9 DUP5
0x9ca PUSH1 0x1
0x9cc PUSH1 0xa0
0x9ce PUSH1 0x2
0x9d0 EXP
0x9d1 SUB
0x9d2 AND
0x9d3 PUSH1 0x1
0x9d5 PUSH1 0xa0
0x9d7 PUSH1 0x2
0x9d9 EXP
0x9da SUB
0x9db AND
0x9dc DUP2
0x9dd MSTORE
0x9de PUSH1 0x20
0x9e0 ADD
0x9e1 DUP4
0x9e2 DUP2
0x9e3 MSTORE
0x9e4 PUSH1 0x20
0x9e6 ADD
0x9e7 DUP1
0x9e8 PUSH1 0x20
0x9ea ADD
0x9eb DUP3
0x9ec DUP2
0x9ed SUB
0x9ee DUP3
0x9ef MSTORE
0x9f0 DUP4
0x9f1 DUP2
0x9f2 DUP2
0x9f3 MLOAD
0x9f4 DUP2
0x9f5 MSTORE
0x9f6 PUSH1 0x20
0x9f8 ADD
0x9f9 SWAP2
0x9fa POP
0x9fb DUP1
0x9fc MLOAD
0x9fd SWAP1
0x9fe PUSH1 0x20
0xa00 ADD
0xa01 SWAP1
0xa02 DUP1
0xa03 DUP4
0xa04 DUP4
0xa05 PUSH1 0x0
---
0x986: JUMPDEST 
0x987: V872 = 0x1
0x989: V873 = 0xa0
0x98b: V874 = 0x2
0x98d: V875 = EXP 0x2 0xa0
0x98e: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0x990: V877 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x991: V878 = 0x0
0x995: M[0x0] = V877
0x996: V879 = 0x2
0x998: V880 = 0x20
0x99a: M[0x20] = 0x2
0x99b: V881 = 0x40
0x9a0: V882 = SHA3 0x0 0x40
0x9a4: S[V882] = V841
0x9a9: V883 = 0xc0ee0b8a
0x9af: V884 = CALLER
0x9b5: V885 = M[0x40]
0x9b7: V886 = 0xffffffff
0x9bc: V887 = AND 0xffffffff 0xc0ee0b8a
0x9bd: V888 = 0xe0
0x9bf: V889 = 0x2
0x9c1: V890 = EXP 0x2 0xe0
0x9c2: V891 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0x9c4: M[V885] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x9c5: V892 = 0x4
0x9c7: V893 = ADD 0x4 V885
0x9ca: V894 = 0x1
0x9cc: V895 = 0xa0
0x9ce: V896 = 0x2
0x9d0: V897 = EXP 0x2 0xa0
0x9d1: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d2: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0x9d3: V900 = 0x1
0x9d5: V901 = 0xa0
0x9d7: V902 = 0x2
0x9d9: V903 = EXP 0x2 0xa0
0x9da: V904 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9db: V905 = AND 0xffffffffffffffffffffffffffffffffffffffff V899
0x9dd: M[V893] = V905
0x9de: V906 = 0x20
0x9e0: V907 = ADD 0x20 V893
0x9e3: M[V907] = S4
0x9e4: V908 = 0x20
0x9e6: V909 = ADD 0x20 V907
0x9e8: V910 = 0x20
0x9ea: V911 = ADD 0x20 V909
0x9ed: V912 = SUB V911 V893
0x9ef: M[V909] = V912
0x9f3: V913 = M[S3]
0x9f5: M[V911] = V913
0x9f6: V914 = 0x20
0x9f8: V915 = ADD 0x20 V911
0x9fc: V916 = M[S3]
0x9fe: V917 = 0x20
0xa00: V918 = ADD 0x20 S3
0xa05: V919 = 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V841]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S5, V877, 0xc0ee0b8a, V884, S4, S3, V893, V909, V915, V918, V916, V916, V915, V918, 0x0]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S5, V877, 0xc0ee0b8a, V884, S4, S3, V893, V909, V915, V918, V916, V916, V915, V918, 0x0]

================================

Block 0xa07
[0xa07:0xa0f]
---
Predecessors: [0x986, 0xa10]
Successors: [0xa10, 0xa1f]
---
0xa07 JUMPDEST
0xa08 DUP4
0xa09 DUP2
0xa0a LT
0xa0b ISZERO
0xa0c PUSH2 0xa1f
0xa0f JUMPI
---
0xa07: JUMPDEST 
0xa0a: V920 = LT S0 V916
0xa0b: V921 = ISZERO V920
0xa0c: V922 = 0xa1f
0xa0f: JUMPI 0xa1f V921
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V877, 0xc0ee0b8a, V884, S10, S9, V893, V909, V915, V918, V916, V916, V915, V918, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V877, 0xc0ee0b8a, V884, S10, S9, V893, V909, V915, V918, V916, V916, V915, V918, S0]

================================

Block 0xa10
[0xa10:0xa1e]
---
Predecessors: [0xa07]
Successors: [0xa07]
---
0xa10 DUP1
0xa11 DUP3
0xa12 ADD
0xa13 MLOAD
0xa14 DUP4
0xa15 DUP3
0xa16 ADD
0xa17 MSTORE
0xa18 PUSH1 0x20
0xa1a ADD
0xa1b PUSH2 0xa07
0xa1e JUMP
---
0xa12: V923 = ADD V918 S0
0xa13: V924 = M[V923]
0xa16: V925 = ADD S0 V915
0xa17: M[V925] = V924
0xa18: V926 = 0x20
0xa1a: V927 = ADD 0x20 S0
0xa1b: V928 = 0xa07
0xa1e: JUMP 0xa07
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V877, 0xc0ee0b8a, V884, S10, S9, V893, V909, V915, V918, V916, V916, V915, V918, S0]
Stack pops: 3
Stack additions: [S2, S1, V927]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V877, 0xc0ee0b8a, V884, S10, S9, V893, V909, V915, V918, V916, V916, V915, V918, V927]

================================

Block 0xa1f
[0xa1f:0xa32]
---
Predecessors: [0xa07]
Successors: [0xa33, 0xa4c]
---
0xa1f JUMPDEST
0xa20 POP
0xa21 POP
0xa22 POP
0xa23 POP
0xa24 SWAP1
0xa25 POP
0xa26 SWAP1
0xa27 DUP2
0xa28 ADD
0xa29 SWAP1
0xa2a PUSH1 0x1f
0xa2c AND
0xa2d DUP1
0xa2e ISZERO
0xa2f PUSH2 0xa4c
0xa32 JUMPI
---
0xa1f: JUMPDEST 
0xa28: V929 = ADD V916 V915
0xa2a: V930 = 0x1f
0xa2c: V931 = AND 0x1f V916
0xa2e: V932 = ISZERO V931
0xa2f: V933 = 0xa4c
0xa32: JUMPI 0xa4c V932
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V877, 0xc0ee0b8a, V884, S10, S9, V893, V909, V915, V918, V916, V916, V915, V918, S0]
Stack pops: 7
Stack additions: [V929, V931]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V877, 0xc0ee0b8a, V884, S10, S9, V893, V909, V929, V931]

================================

Block 0xa33
[0xa33:0xa4b]
---
Predecessors: [0xa1f]
Successors: [0xa4c]
---
0xa33 DUP1
0xa34 DUP3
0xa35 SUB
0xa36 DUP1
0xa37 MLOAD
0xa38 PUSH1 0x1
0xa3a DUP4
0xa3b PUSH1 0x20
0xa3d SUB
0xa3e PUSH2 0x100
0xa41 EXP
0xa42 SUB
0xa43 NOT
0xa44 AND
0xa45 DUP2
0xa46 MSTORE
0xa47 PUSH1 0x20
0xa49 ADD
0xa4a SWAP2
0xa4b POP
---
0xa35: V934 = SUB V929 V931
0xa37: V935 = M[V934]
0xa38: V936 = 0x1
0xa3b: V937 = 0x20
0xa3d: V938 = SUB 0x20 V931
0xa3e: V939 = 0x100
0xa41: V940 = EXP 0x100 V938
0xa42: V941 = SUB V940 0x1
0xa43: V942 = NOT V941
0xa44: V943 = AND V942 V935
0xa46: M[V934] = V943
0xa47: V944 = 0x20
0xa49: V945 = ADD 0x20 V934
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V877, 0xc0ee0b8a, V884, S5, S4, V893, V909, V929, V931]
Stack pops: 2
Stack additions: [V945, S0]
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V877, 0xc0ee0b8a, V884, S5, S4, V893, V909, V945, V931]

================================

Block 0xa4c
[0xa4c:0xa67]
---
Predecessors: [0xa1f, 0xa33]
Successors: [0xa68, 0xa6c]
---
0xa4c JUMPDEST
0xa4d POP
0xa4e SWAP5
0xa4f POP
0xa50 POP
0xa51 POP
0xa52 POP
0xa53 POP
0xa54 PUSH1 0x0
0xa56 PUSH1 0x40
0xa58 MLOAD
0xa59 DUP1
0xa5a DUP4
0xa5b SUB
0xa5c DUP2
0xa5d PUSH1 0x0
0xa5f DUP8
0xa60 DUP1
0xa61 EXTCODESIZE
0xa62 ISZERO
0xa63 ISZERO
0xa64 PUSH2 0xa6c
0xa67 JUMPI
---
0xa4c: JUMPDEST 
0xa54: V946 = 0x0
0xa56: V947 = 0x40
0xa58: V948 = M[0x40]
0xa5b: V949 = SUB S1 V948
0xa5d: V950 = 0x0
0xa61: V951 = EXTCODESIZE V877
0xa62: V952 = ISZERO V951
0xa63: V953 = ISZERO V952
0xa64: V954 = 0xa6c
0xa67: JUMPI 0xa6c V953
---
Entry stack: [V13, 0x1c8, S18, S17, S16, S15, {0x629, 0x65d}, S13, S12, S11, 0x0, S9, V877, 0xc0ee0b8a, V884, S5, S4, V893, V909, S1, V931]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V948, V949, V948, 0x0, S8]
Exit stack: [V13, 0x1c8, S18, S17, S16, S15, {0x629, 0x65d}, S13, S12, S11, 0x0, S9, V877, 0xc0ee0b8a, S1, 0x0, V948, V949, V948, 0x0, V877]

================================

Block 0xa68
[0xa68:0xa6b]
---
Predecessors: [0xa4c]
Successors: []
---
0xa68 PUSH1 0x0
0xa6a DUP1
0xa6b REVERT
---
0xa68: V955 = 0x0
0xa6b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1c8, S18, S17, S16, S15, {0x629, 0x65d}, S13, S12, S11, 0x0, S9, V877, 0xc0ee0b8a, S6, 0x0, V948, V949, V948, 0x0, V877]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1c8, S18, S17, S16, S15, {0x629, 0x65d}, S13, S12, S11, 0x0, S9, V877, 0xc0ee0b8a, S6, 0x0, V948, V949, V948, 0x0, V877]

================================

Block 0xa6c
[0xa6c:0xa78]
---
Predecessors: [0xa4c]
Successors: [0xa79, 0xa7d]
---
0xa6c JUMPDEST
0xa6d PUSH2 0x2c6
0xa70 GAS
0xa71 SUB
0xa72 CALL
0xa73 ISZERO
0xa74 ISZERO
0xa75 PUSH2 0xa7d
0xa78 JUMPI
---
0xa6c: JUMPDEST 
0xa6d: V956 = 0x2c6
0xa70: V957 = GAS
0xa71: V958 = SUB V957 0x2c6
0xa72: V959 = CALL V958 V877 0x0 V948 V949 V948 0x0
0xa73: V960 = ISZERO V959
0xa74: V961 = ISZERO V960
0xa75: V962 = 0xa7d
0xa78: JUMPI 0xa7d V961
---
Entry stack: [V13, 0x1c8, S18, S17, S16, S15, {0x629, 0x65d}, S13, S12, S11, 0x0, S9, V877, 0xc0ee0b8a, S6, 0x0, V948, V949, V948, 0x0, V877]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x1c8, S18, S17, S16, S15, {0x629, 0x65d}, S13, S12, S11, 0x0, S9, V877, 0xc0ee0b8a, S6]

================================

Block 0xa79
[0xa79:0xa7c]
---
Predecessors: [0xa6c]
Successors: []
---
0xa79 PUSH1 0x0
0xa7b DUP1
0xa7c REVERT
---
0xa79: V963 = 0x0
0xa7c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1c8, S12, S11, S10, S9, {0x629, 0x65d}, S7, S6, S5, 0x0, S3, V877, 0xc0ee0b8a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1c8, S12, S11, S10, S9, {0x629, 0x65d}, S7, S6, S5, 0x0, S3, V877, 0xc0ee0b8a, S0]

================================

Block 0xa7d
[0xa7d:0xabf]
---
Predecessors: [0xa6c]
Successors: [0x1c8, 0x629, 0x65d]
---
0xa7d JUMPDEST
0xa7e POP
0xa7f POP
0xa80 POP
0xa81 DUP5
0xa82 PUSH1 0x1
0xa84 PUSH1 0xa0
0xa86 PUSH1 0x2
0xa88 EXP
0xa89 SUB
0xa8a AND
0xa8b CALLER
0xa8c PUSH1 0x1
0xa8e PUSH1 0xa0
0xa90 PUSH1 0x2
0xa92 EXP
0xa93 SUB
0xa94 AND
0xa95 PUSH1 0x0
0xa97 DUP1
0xa98 MLOAD
0xa99 PUSH1 0x20
0xa9b PUSH2 0xb8c
0xa9e DUP4
0xa9f CODECOPY
0xaa0 DUP2
0xaa1 MLOAD
0xaa2 SWAP2
0xaa3 MSTORE
0xaa4 DUP7
0xaa5 PUSH1 0x40
0xaa7 MLOAD
0xaa8 SWAP1
0xaa9 DUP2
0xaaa MSTORE
0xaab PUSH1 0x20
0xaad ADD
0xaae PUSH1 0x40
0xab0 MLOAD
0xab1 DUP1
0xab2 SWAP2
0xab3 SUB
0xab4 SWAP1
0xab5 LOG3
0xab6 POP
0xab7 PUSH1 0x1
0xab9 SWAP5
0xaba SWAP4
0xabb POP
0xabc POP
0xabd POP
0xabe POP
0xabf JUMP
---
0xa7d: JUMPDEST 
0xa82: V964 = 0x1
0xa84: V965 = 0xa0
0xa86: V966 = 0x2
0xa88: V967 = EXP 0x2 0xa0
0xa89: V968 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8a: V969 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xa8b: V970 = CALLER
0xa8c: V971 = 0x1
0xa8e: V972 = 0xa0
0xa90: V973 = 0x2
0xa92: V974 = EXP 0x2 0xa0
0xa93: V975 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa94: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff V970
0xa95: V977 = 0x0
0xa98: V978 = M[0x0]
0xa99: V979 = 0x20
0xa9b: V980 = 0xb8c
0xa9f: CODECOPY 0x0 0xb8c 0x20
0xaa1: V981 = M[0x0]
0xaa3: M[0x0] = V978
0xaa5: V982 = 0x40
0xaa7: V983 = M[0x40]
0xaaa: M[V983] = S6
0xaab: V984 = 0x20
0xaad: V985 = ADD 0x20 V983
0xaae: V986 = 0x40
0xab0: V987 = M[0x40]
0xab3: V988 = SUB V985 V987
0xab5: LOG V987 V988 V981 V976 V969
0xab7: V989 = 0x1
0xabf: JUMP {0x629, 0x65d}
---
Entry stack: [V13, 0x1c8, S12, S11, S10, S9, {0x629, 0x65d}, S7, S6, S5, 0x0, S3, V877, 0xc0ee0b8a, S0]
Stack pops: 9
Stack additions: [0x1]
Exit stack: [V13, 0x1c8, S12, S11, S10, S9, 0x1]

================================

Block 0xac0
[0xac0:0xacb]
---
Predecessors: [0x630, 0x664, 0x907]
Successors: [0x540]
---
0xac0 JUMPDEST
0xac1 PUSH1 0x0
0xac3 DUP3
0xac4 PUSH2 0xacc
0xac7 CALLER
0xac8 PUSH2 0x540
0xacb JUMP
---
0xac0: JUMPDEST 
0xac1: V990 = 0x0
0xac4: V991 = 0xacc
0xac7: V992 = CALLER
0xac8: V993 = 0x540
0xacb: JUMP 0x540
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x629, 0x65d, 0x912}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1, 0xacc, V992]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x629, 0x65d, 0x912}, S2, S1, S0, 0x0, S1, 0xacc, V992]

================================

Block 0xacc
[0xacc:0xad2]
---
Predecessors: [0x540]
Successors: [0xad3, 0xad7]
---
0xacc JUMPDEST
0xacd LT
0xace ISZERO
0xacf PUSH2 0xad7
0xad2 JUMPI
---
0xacc: JUMPDEST 
0xacd: V994 = LT V485 S1
0xace: V995 = ISZERO V994
0xacf: V996 = 0xad7
0xad2: JUMPI 0xad7 V995
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xad3
[0xad3:0xad6]
---
Predecessors: [0xacc]
Successors: []
---
0xad3 PUSH1 0x0
0xad5 DUP1
0xad6 REVERT
---
0xad3: V997 = 0x0
0xad6: REVERT 0x0 0x0
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xad7
[0xad7:0xae2]
---
Predecessors: [0xacc]
Successors: [0x540]
---
0xad7 JUMPDEST
0xad8 PUSH2 0xae9
0xadb PUSH2 0xae3
0xade CALLER
0xadf PUSH2 0x540
0xae2 JUMP
---
0xad7: JUMPDEST 
0xad8: V998 = 0xae9
0xadb: V999 = 0xae3
0xade: V1000 = CALLER
0xadf: V1001 = 0x540
0xae2: JUMP 0x540
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xae9, 0xae3, V1000]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xae9, 0xae3, V1000]

================================

Block 0xae3
[0xae3:0xae8]
---
Predecessors: [0x540]
Successors: [0xb64]
---
0xae3 JUMPDEST
0xae4 DUP5
0xae5 PUSH2 0xb64
0xae8 JUMP
---
0xae3: JUMPDEST 
0xae5: V1002 = 0xb64
0xae8: JUMP 0xb64
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485, S4]

================================

Block 0xae9
[0xae9:0xb0d]
---
Predecessors: [0x930, 0xb73]
Successors: [0x540]
---
0xae9 JUMPDEST
0xaea PUSH1 0x1
0xaec PUSH1 0xa0
0xaee PUSH1 0x2
0xaf0 EXP
0xaf1 SUB
0xaf2 CALLER
0xaf3 AND
0xaf4 PUSH1 0x0
0xaf6 SWAP1
0xaf7 DUP2
0xaf8 MSTORE
0xaf9 PUSH1 0x2
0xafb PUSH1 0x20
0xafd MSTORE
0xafe PUSH1 0x40
0xb00 SWAP1
0xb01 SHA3
0xb02 SSTORE
0xb03 PUSH2 0xb14
0xb06 PUSH2 0xb0e
0xb09 DUP6
0xb0a PUSH2 0x540
0xb0d JUMP
---
0xae9: JUMPDEST 
0xaea: V1003 = 0x1
0xaec: V1004 = 0xa0
0xaee: V1005 = 0x2
0xaf0: V1006 = EXP 0x2 0xa0
0xaf1: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf2: V1008 = CALLER
0xaf3: V1009 = AND V1008 0xffffffffffffffffffffffffffffffffffffffff
0xaf4: V1010 = 0x0
0xaf8: M[0x0] = V1009
0xaf9: V1011 = 0x2
0xafb: V1012 = 0x20
0xafd: M[0x20] = 0x2
0xafe: V1013 = 0x40
0xb01: V1014 = SHA3 0x0 0x40
0xb02: S[V1014] = V1049
0xb03: V1015 = 0xb14
0xb06: V1016 = 0xb0e
0xb0a: V1017 = 0x540
0xb0d: JUMP 0x540
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1049]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xb14, 0xb0e, S4]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0xb14, 0xb0e, S4]

================================

Block 0xb0e
[0xb0e:0xb13]
---
Predecessors: [0x540]
Successors: [0x91d]
---
0xb0e JUMPDEST
0xb0f DUP5
0xb10 PUSH2 0x91d
0xb13 JUMP
---
0xb0e: JUMPDEST 
0xb10: V1018 = 0x91d
0xb13: JUMP 0x91d
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V485, S4]

================================

Block 0xb14
[0xb14:0xb63]
---
Predecessors: [0x930]
Successors: [0x629, 0x65d, 0x912]
---
0xb14 JUMPDEST
0xb15 PUSH1 0x1
0xb17 PUSH1 0xa0
0xb19 PUSH1 0x2
0xb1b EXP
0xb1c SUB
0xb1d DUP1
0xb1e DUP7
0xb1f AND
0xb20 PUSH1 0x0
0xb22 DUP2
0xb23 DUP2
0xb24 MSTORE
0xb25 PUSH1 0x2
0xb27 PUSH1 0x20
0xb29 MSTORE
0xb2a PUSH1 0x40
0xb2c SWAP1
0xb2d DUP2
0xb2e SWAP1
0xb2f SHA3
0xb30 SWAP4
0xb31 SWAP1
0xb32 SWAP4
0xb33 SSTORE
0xb34 SWAP2
0xb35 CALLER
0xb36 SWAP1
0xb37 SWAP2
0xb38 AND
0xb39 SWAP1
0xb3a PUSH1 0x0
0xb3c DUP1
0xb3d MLOAD
0xb3e PUSH1 0x20
0xb40 PUSH2 0xb8c
0xb43 DUP4
0xb44 CODECOPY
0xb45 DUP2
0xb46 MLOAD
0xb47 SWAP2
0xb48 MSTORE
0xb49 SWAP1
0xb4a DUP7
0xb4b SWAP1
0xb4c MLOAD
0xb4d SWAP1
0xb4e DUP2
0xb4f MSTORE
0xb50 PUSH1 0x20
0xb52 ADD
0xb53 PUSH1 0x40
0xb55 MLOAD
0xb56 DUP1
0xb57 SWAP2
0xb58 SUB
0xb59 SWAP1
0xb5a LOG3
0xb5b POP
0xb5c PUSH1 0x1
0xb5e SWAP4
0xb5f SWAP3
0xb60 POP
0xb61 POP
0xb62 POP
0xb63 JUMP
---
0xb14: JUMPDEST 
0xb15: V1019 = 0x1
0xb17: V1020 = 0xa0
0xb19: V1021 = 0x2
0xb1b: V1022 = EXP 0x2 0xa0
0xb1c: V1023 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1f: V1024 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xb20: V1025 = 0x0
0xb24: M[0x0] = V1024
0xb25: V1026 = 0x2
0xb27: V1027 = 0x20
0xb29: M[0x20] = 0x2
0xb2a: V1028 = 0x40
0xb2f: V1029 = SHA3 0x0 0x40
0xb33: S[V1029] = V841
0xb35: V1030 = CALLER
0xb38: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V1030
0xb3a: V1032 = 0x0
0xb3d: V1033 = M[0x0]
0xb3e: V1034 = 0x20
0xb40: V1035 = 0xb8c
0xb44: CODECOPY 0x0 0xb8c 0x20
0xb46: V1036 = M[0x0]
0xb48: M[0x0] = V1033
0xb4c: V1037 = M[0x40]
0xb4f: M[V1037] = S3
0xb50: V1038 = 0x20
0xb52: V1039 = ADD 0x20 V1037
0xb53: V1040 = 0x40
0xb55: V1041 = M[0x40]
0xb58: V1042 = SUB V1039 V1041
0xb5a: LOG V1041 V1042 V1036 V1031 V1024
0xb5c: V1043 = 0x1
0xb63: JUMP S5
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V841]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, 0x1]

================================

Block 0xb64
[0xb64:0xb6e]
---
Predecessors: [0x769, 0xae3]
Successors: [0xb6f, 0xb73]
---
0xb64 JUMPDEST
0xb65 PUSH1 0x0
0xb67 DUP2
0xb68 DUP4
0xb69 LT
0xb6a ISZERO
0xb6b PUSH2 0xb73
0xb6e JUMPI
---
0xb64: JUMPDEST 
0xb65: V1044 = 0x0
0xb69: V1045 = LT V485 S0
0xb6a: V1046 = ISZERO V1045
0xb6b: V1047 = 0xb73
0xb6e: JUMPI 0xb73 V1046
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V485, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V485, S0, 0x0]

================================

Block 0xb6f
[0xb6f:0xb72]
---
Predecessors: [0xb64]
Successors: []
---
0xb6f PUSH1 0x0
0xb71 DUP1
0xb72 REVERT
---
0xb6f: V1048 = 0x0
0xb72: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x76f, 0x961, 0xae9}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x76f, 0x961, 0xae9}, S2, S1, 0x0]

================================

Block 0xb73
[0xb73:0xb78]
---
Predecessors: [0xb64]
Successors: [0x76f, 0x961, 0xae9]
---
0xb73 JUMPDEST
0xb74 POP
0xb75 SWAP1
0xb76 SUB
0xb77 SWAP1
0xb78 JUMP
---
0xb73: JUMPDEST 
0xb76: V1049 = SUB S2 S1
0xb78: JUMP {0x76f, 0x961, 0xae9}
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x76f, 0x961, 0xae9}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1049]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1049]

================================

Block 0xb79
[0xb79:0xb8a]
---
Predecessors: [0x3be, 0x593, 0x606]
Successors: [0x3c6, 0x59b, 0x610]
---
0xb79 JUMPDEST
0xb7a PUSH1 0x20
0xb7c PUSH1 0x40
0xb7e MLOAD
0xb7f SWAP1
0xb80 DUP2
0xb81 ADD
0xb82 PUSH1 0x40
0xb84 MSTORE
0xb85 PUSH1 0x0
0xb87 DUP2
0xb88 MSTORE
0xb89 SWAP1
0xb8a JUMP
---
0xb79: JUMPDEST 
0xb7a: V1050 = 0x20
0xb7c: V1051 = 0x40
0xb7e: V1052 = M[0x40]
0xb81: V1053 = ADD V1052 0x20
0xb82: V1054 = 0x40
0xb84: M[0x40] = V1053
0xb85: V1055 = 0x0
0xb88: M[V1052] = 0x0
0xb8a: JUMP {0x3c6, 0x59b, 0x610}
---
Entry stack: [V13, 0x1c8, V219, S2, {0x0, 0xce}, {0x3c6, 0x59b, 0x610}]
Stack pops: 1
Stack additions: [V1052]
Exit stack: [V13, 0x1c8, V219, S2, {0x0, 0xce}, V1052]

================================

Block 0xb8b
[0xb8b:0xbe0]
---
Predecessors: []
Successors: []
---
0xb8b STOP
0xb8c MISSING 0xdd
0xb8d CALLCODE
0xb8e MSTORE
0xb8f MISSING 0xad
0xb90 SHL
0xb91 MISSING 0xe2
0xb92 MISSING 0xc8
0xb93 SWAP12
0xb94 PUSH10 0xc2b068fc378daa952ba7
0xb9f CALL
0xba0 PUSH4 0xc4a11628
0xba5 CREATE2
0xba6 GAS
0xba7 MISSING 0x4d
0xba8 CREATE2
0xba9 MISSING 0x23
0xbaa MISSING 0xb3
0xbab MISSING 0xef
0xbac LOG1
0xbad PUSH6 0x627a7a723058
0xbb4 SHA3
0xbb5 MISSING 0x4c
0xbb6 MISSING 0x4c
0xbb7 SWAP14
0xbb8 MISSING 0xc0
0xbb9 MISSING 0xe1
0xbba PUSH14 0xe6282ce8b40c7e5353f8bce12054
0xbc9 SAR
0xbca PUSH22 0xbdb4e075235a3a71b1880029
---
0xb8b: STOP 
0xb8c: MISSING 0xdd
0xb8d: V1056 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xb8e: M[V1056] = S7
0xb8f: MISSING 0xad
0xb90: V1057 = SHL S0 S1
0xb91: MISSING 0xe2
0xb92: MISSING 0xc8
0xb94: V1058 = 0xc2b068fc378daa952ba7
0xb9f: V1059 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0xba0: V1060 = 0xc4a11628
0xba5: V1061 = CREATE2 0xc4a11628 V1059 S6 S7
0xba6: V1062 = GAS
0xba7: MISSING 0x4d
0xba8: V1063 = CREATE2 S0 S1 S2 S3
0xba9: MISSING 0x23
0xbaa: MISSING 0xb3
0xbab: MISSING 0xef
0xbac: LOG S0 S1 S2
0xbad: V1064 = 0x627a7a723058
0xbb4: V1065 = SHA3 0x627a7a723058 S3
0xbb5: MISSING 0x4c
0xbb6: MISSING 0x4c
0xbb8: MISSING 0xc0
0xbb9: MISSING 0xe1
0xbba: V1066 = 0xe6282ce8b40c7e5353f8bce12054
0xbc9: V1067 = SAR 0xe6282ce8b40c7e5353f8bce12054 S0
0xbca: V1068 = 0xbdb4e075235a3a71b1880029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1057, V1062, V1061, S8, S9, S10, S11, S0, V1063, V1065, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, 0xbdb4e075235a3a71b1880029, V1067]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xbb
Exit block: 0x137
Body: 0xbb, 0xc2, 0xc6, 0xce, 0xf2, 0xfb, 0x10a, 0x11e, 0x137, 0x3be, 0x3c6, 0x416, 0x41e, 0x431, 0x43f, 0x453, 0x45c

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x145
Exit block: 0x158
Body: 0x145, 0x14c, 0x150, 0x158, 0x466

Function 2:
Public function signature: 0x313ce567
Entry block: 0x16a
Exit block: 0x17d
Body: 0x16a, 0x171, 0x175, 0x17d, 0x46c

Function 3:
Public function signature: 0x33a581d2
Entry block: 0x193
Exit block: 0x158
Body: 0x158, 0x193, 0x19a, 0x19e, 0x475

Function 4:
Public function signature: 0x40c10f19
Entry block: 0x1a6
Exit block: 0x951
Body: 0x1a6, 0x1ad, 0x1b1, 0x47b, 0x495, 0x499, 0x951

Function 5:
Public function signature: 0x70a08231
Entry block: 0x1dc
Exit block: 0x1e3
Body: 0x158, 0x1dc, 0x1e3, 0x1e7

Function 6:
Public function signature: 0x83197ef0
Entry block: 0x1fb
Exit block: 0x576
Body: 0x1fb, 0x202, 0x206, 0x55b, 0x572, 0x576

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x210
Exit block: 0x223
Body: 0x210, 0x217, 0x21b, 0x223, 0x584

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x23f
Exit block: 0x137
Body: 0xce, 0xf2, 0xfb, 0x10a, 0x11e, 0x137, 0x23f, 0x246, 0x24a, 0x431, 0x43f, 0x453, 0x45c, 0x593, 0x59b, 0x5eb, 0x5f3

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x252
Exit block: 0x951
Body: 0x1c8, 0x252, 0x259, 0x25d, 0x606, 0x610, 0x619, 0x61f, 0x629, 0x630, 0x63b, 0x64d, 0x653, 0x65d, 0x664, 0x66f, 0x743, 0x749, 0x752, 0x759, 0x75d, 0x769, 0x907, 0x912, 0x935, 0x951

Function 10:
Public function signature: 0xbe45fd62
Entry block: 0x274
Exit block: 0x1c8
Body: 0x1c8, 0x274, 0x27b, 0x27f, 0x642, 0x64d, 0x653, 0x65d, 0x664, 0x66f

Function 11:
Public function signature: 0xf2fde38b
Entry block: 0x2d9
Exit block: 0x20e
Body: 0x20e, 0x2d9, 0x2e0, 0x2e4, 0x676, 0x68d, 0x691, 0x6a2, 0x6a6

Function 12:
Public function signature: 0xf5074f41
Entry block: 0x2f8
Exit block: 0x728
Body: 0x2f8, 0x2ff, 0x303, 0x711, 0x728, 0x72c

Function 13:
Public function signature: 0xf6368f8a
Entry block: 0x317
Exit block: 0x951
Body: 0x1c8, 0x317, 0x31e, 0x322, 0x738, 0x743, 0x749, 0x752, 0x759, 0x75d, 0x769, 0x907, 0x912, 0x951

Function 14:
Public fallback function
Entry block: 0xb6
Exit block: 0xb6
Body: 0xb6

Function 15:
Private function
Entry block: 0x93d
Exit block: 0xb14
Body: 0x4a5, 0x4b4, 0x769, 0x76f, 0x76f, 0x794, 0x79a, 0x7c9, 0x7d2, 0x7e8, 0x861, 0x86a, 0x879, 0x88d, 0x8a6, 0x8ca, 0x912, 0x915, 0x91d, 0x930, 0x93d, 0x94a, 0x955, 0x961, 0x961, 0x986, 0xa07, 0xa10, 0xa1f, 0xa33, 0xa4c, 0xa6c, 0xa7d, 0xae9, 0xae9, 0xb0e, 0xb14, 0xb64, 0xb73

Function 16:
Private function
Entry block: 0xac0
Exit block: 0xb14
Body: 0x4a5, 0x4b4, 0x76f, 0x76f, 0x794, 0x79a, 0x7c9, 0x7d2, 0x7e8, 0x861, 0x86a, 0x879, 0x88d, 0x8a6, 0x8ca, 0x915, 0x91d, 0x930, 0x961, 0x961, 0x986, 0xa07, 0xa10, 0xa1f, 0xa33, 0xa4c, 0xa6c, 0xa7d, 0xac0, 0xacc, 0xad7, 0xae3, 0xae9, 0xae9, 0xb0e, 0xb14, 0xb64, 0xb73

