Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xe5]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xe5
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xe5
0xc: JUMPI 0xe5 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x121]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x19dad680
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x121
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x19dad680
0x3b: V13 = EQ V11 0x19dad680
0x3c: V14 = 0x121
0x3f: JUMPI 0x121 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x138]
---
0x40 DUP1
0x41 PUSH4 0x1c31f710
0x46 EQ
0x47 PUSH2 0x138
0x4a JUMPI
---
0x41: V15 = 0x1c31f710
0x46: V16 = EQ 0x1c31f710 V11
0x47: V17 = 0x138
0x4a: JUMPI 0x138 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x159]
---
0x4b DUP1
0x4c PUSH4 0x38af3eed
0x51 EQ
0x52 PUSH2 0x159
0x55 JUMPI
---
0x4c: V18 = 0x38af3eed
0x51: V19 = EQ 0x38af3eed V11
0x52: V20 = 0x159
0x55: JUMPI 0x159 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x18a]
---
0x56 DUP1
0x57 PUSH4 0x51320bed
0x5c EQ
0x5d PUSH2 0x18a
0x60 JUMPI
---
0x57: V21 = 0x51320bed
0x5c: V22 = EQ 0x51320bed V11
0x5d: V23 = 0x18a
0x60: JUMPI 0x18a V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1c6]
---
0x61 DUP1
0x62 PUSH4 0x5541315b
0x67 EQ
0x68 PUSH2 0x1c6
0x6b JUMPI
---
0x62: V24 = 0x5541315b
0x67: V25 = EQ 0x5541315b V11
0x68: V26 = 0x1c6
0x6b: JUMPI 0x1c6 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1de]
---
0x6c DUP1
0x6d PUSH4 0x67c3b1b9
0x72 EQ
0x73 PUSH2 0x1de
0x76 JUMPI
---
0x6d: V27 = 0x67c3b1b9
0x72: V28 = EQ 0x67c3b1b9 V11
0x73: V29 = 0x1de
0x76: JUMPI 0x1de V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1f6]
---
0x77 DUP1
0x78 PUSH4 0x6c0db7e3
0x7d EQ
0x7e PUSH2 0x1f6
0x81 JUMPI
---
0x78: V30 = 0x6c0db7e3
0x7d: V31 = EQ 0x6c0db7e3 V11
0x7e: V32 = 0x1f6
0x81: JUMPI 0x1f6 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x215]
---
0x82 DUP1
0x83 PUSH4 0x835fc6ca
0x88 EQ
0x89 PUSH2 0x215
0x8c JUMPI
---
0x83: V33 = 0x835fc6ca
0x88: V34 = EQ 0x835fc6ca V11
0x89: V35 = 0x215
0x8c: JUMPI 0x215 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x22d]
---
0x8d DUP1
0x8e PUSH4 0x8da5cb5b
0x93 EQ
0x94 PUSH2 0x22d
0x97 JUMPI
---
0x8e: V36 = 0x8da5cb5b
0x93: V37 = EQ 0x8da5cb5b V11
0x94: V38 = 0x22d
0x97: JUMPI 0x22d V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x242]
---
0x98 DUP1
0x99 PUSH4 0x96799760
0x9e EQ
0x9f PUSH2 0x242
0xa2 JUMPI
---
0x99: V39 = 0x96799760
0x9e: V40 = EQ 0x96799760 V11
0x9f: V41 = 0x242
0xa2: JUMPI 0x242 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x263]
---
0xa3 DUP1
0xa4 PUSH4 0xadea7a6a
0xa9 EQ
0xaa PUSH2 0x263
0xad JUMPI
---
0xa4: V42 = 0xadea7a6a
0xa9: V43 = EQ 0xadea7a6a V11
0xaa: V44 = 0x263
0xad: JUMPI 0x263 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x27f]
---
0xae DUP1
0xaf PUSH4 0xd0ebdbe7
0xb4 EQ
0xb5 PUSH2 0x27f
0xb8 JUMPI
---
0xaf: V45 = 0xd0ebdbe7
0xb4: V46 = EQ 0xd0ebdbe7 V11
0xb5: V47 = 0x27f
0xb8: JUMPI 0x27f V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x2a0]
---
0xb9 DUP1
0xba PUSH4 0xdceb45e0
0xbf EQ
0xc0 PUSH2 0x2a0
0xc3 JUMPI
---
0xba: V48 = 0xdceb45e0
0xbf: V49 = EQ 0xdceb45e0 V11
0xc0: V50 = 0x2a0
0xc3: JUMPI 0x2a0 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x2dc]
---
0xc4 DUP1
0xc5 PUSH4 0xf2fde38b
0xca EQ
0xcb PUSH2 0x2dc
0xce JUMPI
---
0xc5: V51 = 0xf2fde38b
0xca: V52 = EQ 0xf2fde38b V11
0xcb: V53 = 0x2dc
0xce: JUMPI 0x2dc V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x2fd]
---
0xcf DUP1
0xd0 PUSH4 0xf44b79b3
0xd5 EQ
0xd6 PUSH2 0x2fd
0xd9 JUMPI
---
0xd0: V54 = 0xf44b79b3
0xd5: V55 = EQ 0xf44b79b3 V11
0xd6: V56 = 0x2fd
0xd9: JUMPI 0x2fd V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x312]
---
0xda DUP1
0xdb PUSH4 0xfdff9b4d
0xe0 EQ
0xe1 PUSH2 0x312
0xe4 JUMPI
---
0xdb: V57 = 0xfdff9b4d
0xe0: V58 = EQ 0xfdff9b4d V11
0xe1: V59 = 0x312
0xe4: JUMPI 0x312 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0x114]
---
Predecessors: [0x0, 0xda]
Successors: [0x115, 0x11e]
---
0xe5 JUMPDEST
0xe6 PUSH1 0x4
0xe8 SLOAD
0xe9 PUSH1 0x40
0xeb MLOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 SWAP1
0xf5 SWAP2
0xf6 AND
0xf7 SWAP1
0xf8 CALLVALUE
0xf9 DUP1
0xfa ISZERO
0xfb PUSH2 0x8fc
0xfe MUL
0xff SWAP2
0x100 PUSH1 0x0
0x102 DUP2
0x103 DUP2
0x104 DUP2
0x105 DUP6
0x106 DUP9
0x107 DUP9
0x108 CALL
0x109 SWAP4
0x10a POP
0x10b POP
0x10c POP
0x10d POP
0x10e ISZERO
0x10f DUP1
0x110 ISZERO
0x111 PUSH2 0x11e
0x114 JUMPI
---
0xe5: JUMPDEST 
0xe6: V60 = 0x4
0xe8: V61 = S[0x4]
0xe9: V62 = 0x40
0xeb: V63 = M[0x40]
0xec: V64 = 0x1
0xee: V65 = 0xa0
0xf0: V66 = 0x2
0xf2: V67 = EXP 0x2 0xa0
0xf3: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf6: V69 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V70 = CALLVALUE
0xfa: V71 = ISZERO V70
0xfb: V72 = 0x8fc
0xfe: V73 = MUL 0x8fc V71
0x100: V74 = 0x0
0x108: V75 = CALL V73 V69 V70 V63 0x0 V63 0x0
0x10e: V76 = ISZERO V75
0x110: V77 = ISZERO V76
0x111: V78 = 0x11e
0x114: JUMPI 0x11e V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V76]
Exit stack: [V11, V76]

================================

Block 0x115
[0x115:0x11d]
---
Predecessors: [0xe5]
Successors: []
---
0x115 RETURNDATASIZE
0x116 PUSH1 0x0
0x118 DUP1
0x119 RETURNDATACOPY
0x11a RETURNDATASIZE
0x11b PUSH1 0x0
0x11d REVERT
---
0x115: V79 = RETURNDATASIZE
0x116: V80 = 0x0
0x119: RETURNDATACOPY 0x0 0x0 V79
0x11a: V81 = RETURNDATASIZE
0x11b: V82 = 0x0
0x11d: REVERT 0x0 V81
---
Entry stack: [V11, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V76]

================================

Block 0x11e
[0x11e:0x120]
---
Predecessors: [0xe5]
Successors: []
---
0x11e JUMPDEST
0x11f POP
0x120 STOP
---
0x11e: JUMPDEST 
0x120: STOP 
---
Entry stack: [V11, V76]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x121
[0x121:0x128]
---
Predecessors: [0xd]
Successors: [0x129, 0x12d]
---
0x121 JUMPDEST
0x122 CALLVALUE
0x123 DUP1
0x124 ISZERO
0x125 PUSH2 0x12d
0x128 JUMPI
---
0x121: JUMPDEST 
0x122: V83 = CALLVALUE
0x124: V84 = ISZERO V83
0x125: V85 = 0x12d
0x128: JUMPI 0x12d V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V11, V83]

================================

Block 0x129
[0x129:0x12c]
---
Predecessors: [0x121]
Successors: []
---
0x129 PUSH1 0x0
0x12b DUP1
0x12c REVERT
---
0x129: V86 = 0x0
0x12c: REVERT 0x0 0x0
---
Entry stack: [V11, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V83]

================================

Block 0x12d
[0x12d:0x135]
---
Predecessors: [0x121]
Successors: [0x347]
---
0x12d JUMPDEST
0x12e POP
0x12f PUSH2 0x136
0x132 PUSH2 0x347
0x135 JUMP
---
0x12d: JUMPDEST 
0x12f: V87 = 0x136
0x132: V88 = 0x347
0x135: JUMP 0x347
---
Entry stack: [V11, V83]
Stack pops: 1
Stack additions: [0x136]
Exit stack: [V11, 0x136]

================================

Block 0x136
[0x136:0x137]
---
Predecessors: [0x3ba, 0x419, 0x457, 0x50b, 0x50e, 0x654, 0x6cb, 0x7c5]
Successors: []
---
0x136 JUMPDEST
0x137 STOP
---
0x136: JUMPDEST 
0x137: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x40]
Successors: [0x140, 0x144]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x138: JUMPDEST 
0x139: V89 = CALLVALUE
0x13b: V90 = ISZERO V89
0x13c: V91 = 0x144
0x13f: JUMPI 0x144 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x138]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V92 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x144
[0x144:0x158]
---
Predecessors: [0x138]
Successors: [0x3c9]
---
0x144 JUMPDEST
0x145 POP
0x146 PUSH2 0x136
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 PUSH1 0x4
0x153 CALLDATALOAD
0x154 AND
0x155 PUSH2 0x3c9
0x158 JUMP
---
0x144: JUMPDEST 
0x146: V93 = 0x136
0x149: V94 = 0x1
0x14b: V95 = 0xa0
0x14d: V96 = 0x2
0x14f: V97 = EXP 0x2 0xa0
0x150: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V99 = 0x4
0x153: V100 = CALLDATALOAD 0x4
0x154: V101 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x155: V102 = 0x3c9
0x158: JUMP 0x3c9
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0x136, V101]
Exit stack: [V11, 0x136, V101]

================================

Block 0x159
[0x159:0x160]
---
Predecessors: [0x4b]
Successors: [0x161, 0x165]
---
0x159 JUMPDEST
0x15a CALLVALUE
0x15b DUP1
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x159: JUMPDEST 
0x15a: V103 = CALLVALUE
0x15c: V104 = ISZERO V103
0x15d: V105 = 0x165
0x160: JUMPI 0x165 V104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V103]
Exit stack: [V11, V103]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x159]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V106 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V11, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V103]

================================

Block 0x165
[0x165:0x16d]
---
Predecessors: [0x159]
Successors: [0x448]
---
0x165 JUMPDEST
0x166 POP
0x167 PUSH2 0x16e
0x16a PUSH2 0x448
0x16d JUMP
---
0x165: JUMPDEST 
0x167: V107 = 0x16e
0x16a: V108 = 0x448
0x16d: JUMP 0x448
---
Entry stack: [V11, V103]
Stack pops: 1
Stack additions: [0x16e]
Exit stack: [V11, 0x16e]

================================

Block 0x16e
[0x16e:0x189]
---
Predecessors: [0x448, 0x5f5, 0x675]
Successors: []
---
0x16e JUMPDEST
0x16f PUSH1 0x40
0x171 DUP1
0x172 MLOAD
0x173 PUSH1 0x1
0x175 PUSH1 0xa0
0x177 PUSH1 0x2
0x179 EXP
0x17a SUB
0x17b SWAP1
0x17c SWAP3
0x17d AND
0x17e DUP3
0x17f MSTORE
0x180 MLOAD
0x181 SWAP1
0x182 DUP2
0x183 SWAP1
0x184 SUB
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP1
0x189 RETURN
---
0x16e: JUMPDEST 
0x16f: V109 = 0x40
0x172: V110 = M[0x40]
0x173: V111 = 0x1
0x175: V112 = 0xa0
0x177: V113 = 0x2
0x179: V114 = EXP 0x2 0xa0
0x17a: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17d: V116 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x17f: M[V110] = V116
0x180: V117 = M[0x40]
0x184: V118 = SUB V110 V117
0x185: V119 = 0x20
0x187: V120 = ADD 0x20 V118
0x189: RETURN V117 V120
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x18a
[0x18a:0x191]
---
Predecessors: [0x56]
Successors: [0x192, 0x196]
---
0x18a JUMPDEST
0x18b CALLVALUE
0x18c DUP1
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x18a: JUMPDEST 
0x18b: V121 = CALLVALUE
0x18d: V122 = ISZERO V121
0x18e: V123 = 0x196
0x191: JUMPI 0x196 V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V121]
Exit stack: [V11, V121]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x18a]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V124 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V11, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V121]

================================

Block 0x196
[0x196:0x1c5]
---
Predecessors: [0x18a]
Successors: [0x457]
---
0x196 JUMPDEST
0x197 POP
0x198 PUSH2 0x136
0x19b PUSH1 0x4
0x19d CALLDATALOAD
0x19e PUSH1 0x7
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 SIGNEXTEND
0x1a3 SWAP1
0x1a4 PUSH1 0x24
0x1a6 CALLDATALOAD
0x1a7 SWAP1
0x1a8 SIGNEXTEND
0x1a9 PUSH2 0xffff
0x1ac PUSH1 0x44
0x1ae CALLDATALOAD
0x1af AND
0x1b0 PUSH1 0xff
0x1b2 PUSH1 0x64
0x1b4 CALLDATALOAD
0x1b5 AND
0x1b6 PUSH1 0x1
0x1b8 PUSH1 0xa0
0x1ba PUSH1 0x2
0x1bc EXP
0x1bd SUB
0x1be PUSH1 0x84
0x1c0 CALLDATALOAD
0x1c1 AND
0x1c2 PUSH2 0x457
0x1c5 JUMP
---
0x196: JUMPDEST 
0x198: V125 = 0x136
0x19b: V126 = 0x4
0x19d: V127 = CALLDATALOAD 0x4
0x19e: V128 = 0x7
0x1a2: V129 = SIGNEXTEND 0x7 V127
0x1a4: V130 = 0x24
0x1a6: V131 = CALLDATALOAD 0x24
0x1a8: V132 = SIGNEXTEND 0x7 V131
0x1a9: V133 = 0xffff
0x1ac: V134 = 0x44
0x1ae: V135 = CALLDATALOAD 0x44
0x1af: V136 = AND V135 0xffff
0x1b0: V137 = 0xff
0x1b2: V138 = 0x64
0x1b4: V139 = CALLDATALOAD 0x64
0x1b5: V140 = AND V139 0xff
0x1b6: V141 = 0x1
0x1b8: V142 = 0xa0
0x1ba: V143 = 0x2
0x1bc: V144 = EXP 0x2 0xa0
0x1bd: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V146 = 0x84
0x1c0: V147 = CALLDATALOAD 0x84
0x1c1: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V149 = 0x457
0x1c5: JUMP 0x457
---
Entry stack: [V11, V121]
Stack pops: 1
Stack additions: [0x136, V129, V132, V136, V140, V148]
Exit stack: [V11, 0x136, V129, V132, V136, V140, V148]

================================

Block 0x1c6
[0x1c6:0x1cd]
---
Predecessors: [0x61]
Successors: [0x1ce, 0x1d2]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 DUP1
0x1c9 ISZERO
0x1ca PUSH2 0x1d2
0x1cd JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V150 = CALLVALUE
0x1c9: V151 = ISZERO V150
0x1ca: V152 = 0x1d2
0x1cd: JUMPI 0x1d2 V151
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V150]
Exit stack: [V11, V150]

================================

Block 0x1ce
[0x1ce:0x1d1]
---
Predecessors: [0x1c6]
Successors: []
---
0x1ce PUSH1 0x0
0x1d0 DUP1
0x1d1 REVERT
---
0x1ce: V153 = 0x0
0x1d1: REVERT 0x0 0x0
---
Entry stack: [V11, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V150]

================================

Block 0x1d2
[0x1d2:0x1dd]
---
Predecessors: [0x1c6]
Successors: [0x45e]
---
0x1d2 JUMPDEST
0x1d3 POP
0x1d4 PUSH2 0x136
0x1d7 PUSH1 0x4
0x1d9 CALLDATALOAD
0x1da PUSH2 0x45e
0x1dd JUMP
---
0x1d2: JUMPDEST 
0x1d4: V154 = 0x136
0x1d7: V155 = 0x4
0x1d9: V156 = CALLDATALOAD 0x4
0x1da: V157 = 0x45e
0x1dd: JUMP 0x45e
---
Entry stack: [V11, V150]
Stack pops: 1
Stack additions: [0x136, V156]
Exit stack: [V11, 0x136, V156]

================================

Block 0x1de
[0x1de:0x1e5]
---
Predecessors: [0x6c]
Successors: [0x1e6, 0x1ea]
---
0x1de JUMPDEST
0x1df CALLVALUE
0x1e0 DUP1
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1de: JUMPDEST 
0x1df: V158 = CALLVALUE
0x1e1: V159 = ISZERO V158
0x1e2: V160 = 0x1ea
0x1e5: JUMPI 0x1ea V159
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V158]
Exit stack: [V11, V158]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1de]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V161 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V11, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V158]

================================

Block 0x1ea
[0x1ea:0x1f5]
---
Predecessors: [0x1de]
Successors: [0x50b]
---
0x1ea JUMPDEST
0x1eb POP
0x1ec PUSH2 0x136
0x1ef PUSH1 0x4
0x1f1 CALLDATALOAD
0x1f2 PUSH2 0x50b
0x1f5 JUMP
---
0x1ea: JUMPDEST 
0x1ec: V162 = 0x136
0x1ef: V163 = 0x4
0x1f1: V164 = CALLDATALOAD 0x4
0x1f2: V165 = 0x50b
0x1f5: JUMP 0x50b
---
Entry stack: [V11, V158]
Stack pops: 1
Stack additions: [0x136, V164]
Exit stack: [V11, 0x136, V164]

================================

Block 0x1f6
[0x1f6:0x1fd]
---
Predecessors: [0x77]
Successors: [0x1fe, 0x202]
---
0x1f6 JUMPDEST
0x1f7 CALLVALUE
0x1f8 DUP1
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V166 = CALLVALUE
0x1f9: V167 = ISZERO V166
0x1fa: V168 = 0x202
0x1fd: JUMPI 0x202 V167
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V11, V166]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x1f6]
Successors: []
---
0x1fe PUSH1 0x0
0x200 DUP1
0x201 REVERT
---
0x1fe: V169 = 0x0
0x201: REVERT 0x0 0x0
---
Entry stack: [V11, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V166]

================================

Block 0x202
[0x202:0x214]
---
Predecessors: [0x1f6]
Successors: [0x50e]
---
0x202 JUMPDEST
0x203 POP
0x204 PUSH2 0x136
0x207 PUSH2 0xffff
0x20a PUSH1 0x4
0x20c CALLDATALOAD
0x20d AND
0x20e PUSH1 0x24
0x210 CALLDATALOAD
0x211 PUSH2 0x50e
0x214 JUMP
---
0x202: JUMPDEST 
0x204: V170 = 0x136
0x207: V171 = 0xffff
0x20a: V172 = 0x4
0x20c: V173 = CALLDATALOAD 0x4
0x20d: V174 = AND V173 0xffff
0x20e: V175 = 0x24
0x210: V176 = CALLDATALOAD 0x24
0x211: V177 = 0x50e
0x214: JUMP 0x50e
---
Entry stack: [V11, V166]
Stack pops: 1
Stack additions: [0x136, V174, V176]
Exit stack: [V11, 0x136, V174, V176]

================================

Block 0x215
[0x215:0x21c]
---
Predecessors: [0x82]
Successors: [0x21d, 0x221]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 DUP1
0x218 ISZERO
0x219 PUSH2 0x221
0x21c JUMPI
---
0x215: JUMPDEST 
0x216: V178 = CALLVALUE
0x218: V179 = ISZERO V178
0x219: V180 = 0x221
0x21c: JUMPI 0x221 V179
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V178]
Exit stack: [V11, V178]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x215]
Successors: []
---
0x21d PUSH1 0x0
0x21f DUP1
0x220 REVERT
---
0x21d: V181 = 0x0
0x220: REVERT 0x0 0x0
---
Entry stack: [V11, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V178]

================================

Block 0x221
[0x221:0x22c]
---
Predecessors: [0x215]
Successors: [0x512]
---
0x221 JUMPDEST
0x222 POP
0x223 PUSH2 0x136
0x226 PUSH1 0x4
0x228 CALLDATALOAD
0x229 PUSH2 0x512
0x22c JUMP
---
0x221: JUMPDEST 
0x223: V182 = 0x136
0x226: V183 = 0x4
0x228: V184 = CALLDATALOAD 0x4
0x229: V185 = 0x512
0x22c: JUMP 0x512
---
Entry stack: [V11, V178]
Stack pops: 1
Stack additions: [0x136, V184]
Exit stack: [V11, 0x136, V184]

================================

Block 0x22d
[0x22d:0x234]
---
Predecessors: [0x8d]
Successors: [0x235, 0x239]
---
0x22d JUMPDEST
0x22e CALLVALUE
0x22f DUP1
0x230 ISZERO
0x231 PUSH2 0x239
0x234 JUMPI
---
0x22d: JUMPDEST 
0x22e: V186 = CALLVALUE
0x230: V187 = ISZERO V186
0x231: V188 = 0x239
0x234: JUMPI 0x239 V187
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V186]
Exit stack: [V11, V186]

================================

Block 0x235
[0x235:0x238]
---
Predecessors: [0x22d]
Successors: []
---
0x235 PUSH1 0x0
0x237 DUP1
0x238 REVERT
---
0x235: V189 = 0x0
0x238: REVERT 0x0 0x0
---
Entry stack: [V11, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V186]

================================

Block 0x239
[0x239:0x241]
---
Predecessors: [0x22d]
Successors: [0x5f5]
---
0x239 JUMPDEST
0x23a POP
0x23b PUSH2 0x16e
0x23e PUSH2 0x5f5
0x241 JUMP
---
0x239: JUMPDEST 
0x23b: V190 = 0x16e
0x23e: V191 = 0x5f5
0x241: JUMP 0x5f5
---
Entry stack: [V11, V186]
Stack pops: 1
Stack additions: [0x16e]
Exit stack: [V11, 0x16e]

================================

Block 0x242
[0x242:0x249]
---
Predecessors: [0x98]
Successors: [0x24a, 0x24e]
---
0x242 JUMPDEST
0x243 CALLVALUE
0x244 DUP1
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x242: JUMPDEST 
0x243: V192 = CALLVALUE
0x245: V193 = ISZERO V192
0x246: V194 = 0x24e
0x249: JUMPI 0x24e V193
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V11, V192]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x242]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V195 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V11, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V192]

================================

Block 0x24e
[0x24e:0x262]
---
Predecessors: [0x242]
Successors: [0x604]
---
0x24e JUMPDEST
0x24f POP
0x250 PUSH2 0x136
0x253 PUSH1 0x1
0x255 PUSH1 0xa0
0x257 PUSH1 0x2
0x259 EXP
0x25a SUB
0x25b PUSH1 0x4
0x25d CALLDATALOAD
0x25e AND
0x25f PUSH2 0x604
0x262 JUMP
---
0x24e: JUMPDEST 
0x250: V196 = 0x136
0x253: V197 = 0x1
0x255: V198 = 0xa0
0x257: V199 = 0x2
0x259: V200 = EXP 0x2 0xa0
0x25a: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25b: V202 = 0x4
0x25d: V203 = CALLDATALOAD 0x4
0x25e: V204 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V205 = 0x604
0x262: JUMP 0x604
---
Entry stack: [V11, V192]
Stack pops: 1
Stack additions: [0x136, V204]
Exit stack: [V11, 0x136, V204]

================================

Block 0x263
[0x263:0x26a]
---
Predecessors: [0xa3]
Successors: [0x26b, 0x26f]
---
0x263 JUMPDEST
0x264 CALLVALUE
0x265 DUP1
0x266 ISZERO
0x267 PUSH2 0x26f
0x26a JUMPI
---
0x263: JUMPDEST 
0x264: V206 = CALLVALUE
0x266: V207 = ISZERO V206
0x267: V208 = 0x26f
0x26a: JUMPI 0x26f V207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V206]
Exit stack: [V11, V206]

================================

Block 0x26b
[0x26b:0x26e]
---
Predecessors: [0x263]
Successors: []
---
0x26b PUSH1 0x0
0x26d DUP1
0x26e REVERT
---
0x26b: V209 = 0x0
0x26e: REVERT 0x0 0x0
---
Entry stack: [V11, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V206]

================================

Block 0x26f
[0x26f:0x27e]
---
Predecessors: [0x263]
Successors: [0x675]
---
0x26f JUMPDEST
0x270 POP
0x271 PUSH2 0x16e
0x274 PUSH2 0xffff
0x277 PUSH1 0x4
0x279 CALLDATALOAD
0x27a AND
0x27b PUSH2 0x675
0x27e JUMP
---
0x26f: JUMPDEST 
0x271: V210 = 0x16e
0x274: V211 = 0xffff
0x277: V212 = 0x4
0x279: V213 = CALLDATALOAD 0x4
0x27a: V214 = AND V213 0xffff
0x27b: V215 = 0x675
0x27e: JUMP 0x675
---
Entry stack: [V11, V206]
Stack pops: 1
Stack additions: [0x16e, V214]
Exit stack: [V11, 0x16e, V214]

================================

Block 0x27f
[0x27f:0x286]
---
Predecessors: [0xae]
Successors: [0x287, 0x28b]
---
0x27f JUMPDEST
0x280 CALLVALUE
0x281 DUP1
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x27f: JUMPDEST 
0x280: V216 = CALLVALUE
0x282: V217 = ISZERO V216
0x283: V218 = 0x28b
0x286: JUMPI 0x28b V217
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V216]
Exit stack: [V11, V216]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x27f]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V219 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V11, V216]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V216]

================================

Block 0x28b
[0x28b:0x29f]
---
Predecessors: [0x27f]
Successors: [0x67b]
---
0x28b JUMPDEST
0x28c POP
0x28d PUSH2 0x136
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 PUSH1 0x4
0x29a CALLDATALOAD
0x29b AND
0x29c PUSH2 0x67b
0x29f JUMP
---
0x28b: JUMPDEST 
0x28d: V220 = 0x136
0x290: V221 = 0x1
0x292: V222 = 0xa0
0x294: V223 = 0x2
0x296: V224 = EXP 0x2 0xa0
0x297: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x298: V226 = 0x4
0x29a: V227 = CALLDATALOAD 0x4
0x29b: V228 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x29c: V229 = 0x67b
0x29f: JUMP 0x67b
---
Entry stack: [V11, V216]
Stack pops: 1
Stack additions: [0x136, V228]
Exit stack: [V11, 0x136, V228]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0xb9]
Successors: [0x2a8, 0x2ac]
---
0x2a0 JUMPDEST
0x2a1 CALLVALUE
0x2a2 DUP1
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V230 = CALLVALUE
0x2a3: V231 = ISZERO V230
0x2a4: V232 = 0x2ac
0x2a7: JUMPI 0x2ac V231
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V11, V230]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V233 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V11, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V230]

================================

Block 0x2ac
[0x2ac:0x2db]
---
Predecessors: [0x2a0]
Successors: [0x457]
---
0x2ac JUMPDEST
0x2ad POP
0x2ae PUSH2 0x136
0x2b1 PUSH1 0x4
0x2b3 CALLDATALOAD
0x2b4 PUSH1 0x7
0x2b6 SWAP1
0x2b7 DUP2
0x2b8 SIGNEXTEND
0x2b9 SWAP1
0x2ba PUSH1 0x24
0x2bc CALLDATALOAD
0x2bd SWAP1
0x2be SIGNEXTEND
0x2bf PUSH2 0xffff
0x2c2 PUSH1 0x44
0x2c4 CALLDATALOAD
0x2c5 AND
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce PUSH1 0x64
0x2d0 CALLDATALOAD
0x2d1 DUP2
0x2d2 AND
0x2d3 SWAP1
0x2d4 PUSH1 0x84
0x2d6 CALLDATALOAD
0x2d7 AND
0x2d8 PUSH2 0x457
0x2db JUMP
---
0x2ac: JUMPDEST 
0x2ae: V234 = 0x136
0x2b1: V235 = 0x4
0x2b3: V236 = CALLDATALOAD 0x4
0x2b4: V237 = 0x7
0x2b8: V238 = SIGNEXTEND 0x7 V236
0x2ba: V239 = 0x24
0x2bc: V240 = CALLDATALOAD 0x24
0x2be: V241 = SIGNEXTEND 0x7 V240
0x2bf: V242 = 0xffff
0x2c2: V243 = 0x44
0x2c4: V244 = CALLDATALOAD 0x44
0x2c5: V245 = AND V244 0xffff
0x2c6: V246 = 0x1
0x2c8: V247 = 0xa0
0x2ca: V248 = 0x2
0x2cc: V249 = EXP 0x2 0xa0
0x2cd: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V251 = 0x64
0x2d0: V252 = CALLDATALOAD 0x64
0x2d2: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x2d4: V254 = 0x84
0x2d6: V255 = CALLDATALOAD 0x84
0x2d7: V256 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V257 = 0x457
0x2db: JUMP 0x457
---
Entry stack: [V11, V230]
Stack pops: 1
Stack additions: [0x136, V238, V241, V245, V253, V256]
Exit stack: [V11, 0x136, V238, V241, V245, V253, V256]

================================

Block 0x2dc
[0x2dc:0x2e3]
---
Predecessors: [0xc4]
Successors: [0x2e4, 0x2e8]
---
0x2dc JUMPDEST
0x2dd CALLVALUE
0x2de DUP1
0x2df ISZERO
0x2e0 PUSH2 0x2e8
0x2e3 JUMPI
---
0x2dc: JUMPDEST 
0x2dd: V258 = CALLVALUE
0x2df: V259 = ISZERO V258
0x2e0: V260 = 0x2e8
0x2e3: JUMPI 0x2e8 V259
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V258]
Exit stack: [V11, V258]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: [0x2dc]
Successors: []
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
---
0x2e4: V261 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V11, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V258]

================================

Block 0x2e8
[0x2e8:0x2fc]
---
Predecessors: [0x2dc]
Successors: [0x6ef]
---
0x2e8 JUMPDEST
0x2e9 POP
0x2ea PUSH2 0x136
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 SUB
0x2f5 PUSH1 0x4
0x2f7 CALLDATALOAD
0x2f8 AND
0x2f9 PUSH2 0x6ef
0x2fc JUMP
---
0x2e8: JUMPDEST 
0x2ea: V262 = 0x136
0x2ed: V263 = 0x1
0x2ef: V264 = 0xa0
0x2f1: V265 = 0x2
0x2f3: V266 = EXP 0x2 0xa0
0x2f4: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f5: V268 = 0x4
0x2f7: V269 = CALLDATALOAD 0x4
0x2f8: V270 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V271 = 0x6ef
0x2fc: JUMP 0x6ef
---
Entry stack: [V11, V258]
Stack pops: 1
Stack additions: [0x136, V270]
Exit stack: [V11, 0x136, V270]

================================

Block 0x2fd
[0x2fd:0x304]
---
Predecessors: [0xcf]
Successors: [0x305, 0x309]
---
0x2fd JUMPDEST
0x2fe CALLVALUE
0x2ff DUP1
0x300 ISZERO
0x301 PUSH2 0x309
0x304 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V272 = CALLVALUE
0x300: V273 = ISZERO V272
0x301: V274 = 0x309
0x304: JUMPI 0x309 V273
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V272]
Exit stack: [V11, V272]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x2fd]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V275 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [V11, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V272]

================================

Block 0x309
[0x309:0x311]
---
Predecessors: [0x2fd]
Successors: [0x82d]
---
0x309 JUMPDEST
0x30a POP
0x30b PUSH2 0x136
0x30e PUSH2 0x82d
0x311 JUMP
---
0x309: JUMPDEST 
0x30b: V276 = 0x136
0x30e: V277 = 0x82d
0x311: JUMP 0x82d
---
Entry stack: [V11, V272]
Stack pops: 1
Stack additions: [0x136]
Exit stack: [V11, 0x136]

================================

Block 0x312
[0x312:0x319]
---
Predecessors: [0xda]
Successors: [0x31a, 0x31e]
---
0x312 JUMPDEST
0x313 CALLVALUE
0x314 DUP1
0x315 ISZERO
0x316 PUSH2 0x31e
0x319 JUMPI
---
0x312: JUMPDEST 
0x313: V278 = CALLVALUE
0x315: V279 = ISZERO V278
0x316: V280 = 0x31e
0x319: JUMPI 0x31e V279
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V278]
Exit stack: [V11, V278]

================================

Block 0x31a
[0x31a:0x31d]
---
Predecessors: [0x312]
Successors: []
---
0x31a PUSH1 0x0
0x31c DUP1
0x31d REVERT
---
0x31a: V281 = 0x0
0x31d: REVERT 0x0 0x0
---
Entry stack: [V11, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V278]

================================

Block 0x31e
[0x31e:0x332]
---
Predecessors: [0x312]
Successors: [0x8b7]
---
0x31e JUMPDEST
0x31f POP
0x320 PUSH2 0x333
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b PUSH1 0x4
0x32d CALLDATALOAD
0x32e AND
0x32f PUSH2 0x8b7
0x332 JUMP
---
0x31e: JUMPDEST 
0x320: V282 = 0x333
0x323: V283 = 0x1
0x325: V284 = 0xa0
0x327: V285 = 0x2
0x329: V286 = EXP 0x2 0xa0
0x32a: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32b: V288 = 0x4
0x32d: V289 = CALLDATALOAD 0x4
0x32e: V290 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x32f: V291 = 0x8b7
0x332: JUMP 0x8b7
---
Entry stack: [V11, V278]
Stack pops: 1
Stack additions: [0x333, V290]
Exit stack: [V11, 0x333, V290]

================================

Block 0x333
[0x333:0x346]
---
Predecessors: [0x8b7]
Successors: []
---
0x333 JUMPDEST
0x334 PUSH1 0x40
0x336 DUP1
0x337 MLOAD
0x338 SWAP2
0x339 ISZERO
0x33a ISZERO
0x33b DUP3
0x33c MSTORE
0x33d MLOAD
0x33e SWAP1
0x33f DUP2
0x340 SWAP1
0x341 SUB
0x342 PUSH1 0x20
0x344 ADD
0x345 SWAP1
0x346 RETURN
---
0x333: JUMPDEST 
0x334: V292 = 0x40
0x337: V293 = M[0x40]
0x339: V294 = ISZERO V809
0x33a: V295 = ISZERO V294
0x33c: M[V293] = V295
0x33d: V296 = M[0x40]
0x341: V297 = SUB V293 V296
0x342: V298 = 0x20
0x344: V299 = ADD 0x20 V297
0x346: RETURN V296 V299
---
Entry stack: [V11, 0x333, V809]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x333]

================================

Block 0x347
[0x347:0x35f]
---
Predecessors: [0x12d]
Successors: [0x360, 0x364]
---
0x347 JUMPDEST
0x348 CALLER
0x349 PUSH1 0x0
0x34b SWAP1
0x34c DUP2
0x34d MSTORE
0x34e PUSH1 0x2
0x350 PUSH1 0x20
0x352 MSTORE
0x353 PUSH1 0x40
0x355 SWAP1
0x356 SHA3
0x357 SLOAD
0x358 PUSH1 0xff
0x35a AND
0x35b DUP1
0x35c PUSH2 0x364
0x35f JUMPI
---
0x347: JUMPDEST 
0x348: V300 = CALLER
0x349: V301 = 0x0
0x34d: M[0x0] = V300
0x34e: V302 = 0x2
0x350: V303 = 0x20
0x352: M[0x20] = 0x2
0x353: V304 = 0x40
0x356: V305 = SHA3 0x0 0x40
0x357: V306 = S[V305]
0x358: V307 = 0xff
0x35a: V308 = AND 0xff V306
0x35c: V309 = 0x364
0x35f: JUMPI 0x364 V308
---
Entry stack: [V11, 0x136]
Stack pops: 0
Stack additions: [V308]
Exit stack: [V11, 0x136, V308]

================================

Block 0x360
[0x360:0x363]
---
Predecessors: [0x347]
Successors: [0x364]
---
0x360 POP
0x361 CALLER
0x362 ADDRESS
0x363 EQ
---
0x361: V310 = CALLER
0x362: V311 = ADDRESS
0x363: V312 = EQ V311 V310
---
Entry stack: [V11, 0x136, V308]
Stack pops: 1
Stack additions: [V312]
Exit stack: [V11, 0x136, V312]

================================

Block 0x364
[0x364:0x36a]
---
Predecessors: [0x347, 0x360]
Successors: [0x36b, 0x3ba]
---
0x364 JUMPDEST
0x365 ISZERO
0x366 ISZERO
0x367 PUSH2 0x3ba
0x36a JUMPI
---
0x364: JUMPDEST 
0x365: V313 = ISZERO S0
0x366: V314 = ISZERO V313
0x367: V315 = 0x3ba
0x36a: JUMPI 0x3ba V314
---
Entry stack: [V11, 0x136, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x136]

================================

Block 0x36b
[0x36b:0x3b9]
---
Predecessors: [0x364]
Successors: []
---
0x36b PUSH1 0x40
0x36d DUP1
0x36e MLOAD
0x36f PUSH1 0xe5
0x371 PUSH1 0x2
0x373 EXP
0x374 PUSH3 0x461bcd
0x378 MUL
0x379 DUP2
0x37a MSTORE
0x37b PUSH1 0x20
0x37d PUSH1 0x4
0x37f DUP3
0x380 ADD
0x381 MSTORE
0x382 PUSH1 0x15
0x384 PUSH1 0x24
0x386 DUP3
0x387 ADD
0x388 MSTORE
0x389 PUSH32 0x4f6e6c79206d616e616765727320616c6c6f7765640000000000000000000000
0x3aa PUSH1 0x44
0x3ac DUP3
0x3ad ADD
0x3ae MSTORE
0x3af SWAP1
0x3b0 MLOAD
0x3b1 SWAP1
0x3b2 DUP2
0x3b3 SWAP1
0x3b4 SUB
0x3b5 PUSH1 0x64
0x3b7 ADD
0x3b8 SWAP1
0x3b9 REVERT
---
0x36b: V316 = 0x40
0x36e: V317 = M[0x40]
0x36f: V318 = 0xe5
0x371: V319 = 0x2
0x373: V320 = EXP 0x2 0xe5
0x374: V321 = 0x461bcd
0x378: V322 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x37a: M[V317] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x37b: V323 = 0x20
0x37d: V324 = 0x4
0x380: V325 = ADD V317 0x4
0x381: M[V325] = 0x20
0x382: V326 = 0x15
0x384: V327 = 0x24
0x387: V328 = ADD V317 0x24
0x388: M[V328] = 0x15
0x389: V329 = 0x4f6e6c79206d616e616765727320616c6c6f7765640000000000000000000000
0x3aa: V330 = 0x44
0x3ad: V331 = ADD V317 0x44
0x3ae: M[V331] = 0x4f6e6c79206d616e616765727320616c6c6f7765640000000000000000000000
0x3b0: V332 = M[0x40]
0x3b4: V333 = SUB V317 V332
0x3b5: V334 = 0x64
0x3b7: V335 = ADD 0x64 V333
0x3b9: REVERT V332 V335
---
Entry stack: [V11, 0x136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136]

================================

Block 0x3ba
[0x3ba:0x3c8]
---
Predecessors: [0x364]
Successors: [0x136]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x3
0x3bd DUP1
0x3be SLOAD
0x3bf PUSH1 0xff
0x3c1 NOT
0x3c2 AND
0x3c3 PUSH1 0x1
0x3c5 OR
0x3c6 SWAP1
0x3c7 SSTORE
0x3c8 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V336 = 0x3
0x3be: V337 = S[0x3]
0x3bf: V338 = 0xff
0x3c1: V339 = NOT 0xff
0x3c2: V340 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V337
0x3c3: V341 = 0x1
0x3c5: V342 = OR 0x1 V340
0x3c7: S[0x3] = V342
0x3c8: JUMP 0x136
---
Entry stack: [V11, 0x136]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c9
[0x3c9:0x3db]
---
Predecessors: [0x144]
Successors: [0x3dc, 0x419]
---
0x3c9 JUMPDEST
0x3ca PUSH1 0x0
0x3cc SLOAD
0x3cd PUSH1 0x1
0x3cf PUSH1 0xa0
0x3d1 PUSH1 0x2
0x3d3 EXP
0x3d4 SUB
0x3d5 AND
0x3d6 CALLER
0x3d7 EQ
0x3d8 PUSH2 0x419
0x3db JUMPI
---
0x3c9: JUMPDEST 
0x3ca: V343 = 0x0
0x3cc: V344 = S[0x0]
0x3cd: V345 = 0x1
0x3cf: V346 = 0xa0
0x3d1: V347 = 0x2
0x3d3: V348 = EXP 0x2 0xa0
0x3d4: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d5: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x3d6: V351 = CALLER
0x3d7: V352 = EQ V351 V350
0x3d8: V353 = 0x419
0x3db: JUMPI 0x419 V352
---
Entry stack: [V11, 0x136, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V101]

================================

Block 0x3dc
[0x3dc:0x418]
---
Predecessors: [0x3c9]
Successors: []
---
0x3dc PUSH1 0x40
0x3de DUP1
0x3df MLOAD
0x3e0 PUSH1 0xe5
0x3e2 PUSH1 0x2
0x3e4 EXP
0x3e5 PUSH3 0x461bcd
0x3e9 MUL
0x3ea DUP2
0x3eb MSTORE
0x3ec PUSH1 0x20
0x3ee PUSH1 0x4
0x3f0 DUP3
0x3f1 ADD
0x3f2 MSTORE
0x3f3 PUSH1 0xa
0x3f5 PUSH1 0x24
0x3f7 DUP3
0x3f8 ADD
0x3f9 MSTORE
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd MLOAD
0x3fe PUSH1 0x20
0x400 PUSH2 0x8cd
0x403 DUP4
0x404 CODECOPY
0x405 DUP2
0x406 MLOAD
0x407 SWAP2
0x408 MSTORE
0x409 PUSH1 0x44
0x40b DUP3
0x40c ADD
0x40d MSTORE
0x40e SWAP1
0x40f MLOAD
0x410 SWAP1
0x411 DUP2
0x412 SWAP1
0x413 SUB
0x414 PUSH1 0x64
0x416 ADD
0x417 SWAP1
0x418 REVERT
---
0x3dc: V354 = 0x40
0x3df: V355 = M[0x40]
0x3e0: V356 = 0xe5
0x3e2: V357 = 0x2
0x3e4: V358 = EXP 0x2 0xe5
0x3e5: V359 = 0x461bcd
0x3e9: V360 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x3eb: M[V355] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3ec: V361 = 0x20
0x3ee: V362 = 0x4
0x3f1: V363 = ADD V355 0x4
0x3f2: M[V363] = 0x20
0x3f3: V364 = 0xa
0x3f5: V365 = 0x24
0x3f8: V366 = ADD V355 0x24
0x3f9: M[V366] = 0xa
0x3fa: V367 = 0x0
0x3fd: V368 = M[0x0]
0x3fe: V369 = 0x20
0x400: V370 = 0x8cd
0x404: CODECOPY 0x0 0x8cd 0x20
0x406: V371 = M[0x0]
0x408: M[0x0] = V368
0x409: V372 = 0x44
0x40c: V373 = ADD V355 0x44
0x40d: M[V373] = V371
0x40f: V374 = M[0x40]
0x413: V375 = SUB V355 V374
0x414: V376 = 0x64
0x416: V377 = ADD 0x64 V375
0x418: REVERT V374 V377
---
Entry stack: [V11, 0x136, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V101]

================================

Block 0x419
[0x419:0x447]
---
Predecessors: [0x3c9]
Successors: [0x136]
---
0x419 JUMPDEST
0x41a PUSH1 0x1
0x41c DUP1
0x41d SLOAD
0x41e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x433 NOT
0x434 AND
0x435 PUSH1 0x1
0x437 PUSH1 0xa0
0x439 PUSH1 0x2
0x43b EXP
0x43c SUB
0x43d SWAP3
0x43e SWAP1
0x43f SWAP3
0x440 AND
0x441 SWAP2
0x442 SWAP1
0x443 SWAP2
0x444 OR
0x445 SWAP1
0x446 SSTORE
0x447 JUMP
---
0x419: JUMPDEST 
0x41a: V378 = 0x1
0x41d: V379 = S[0x1]
0x41e: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x433: V381 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x434: V382 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V379
0x435: V383 = 0x1
0x437: V384 = 0xa0
0x439: V385 = 0x2
0x43b: V386 = EXP 0x2 0xa0
0x43c: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x440: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x444: V389 = OR V388 V382
0x446: S[0x1] = V389
0x447: JUMP 0x136
---
Entry stack: [V11, 0x136, V101]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x448
[0x448:0x456]
---
Predecessors: [0x165]
Successors: [0x16e]
---
0x448 JUMPDEST
0x449 PUSH1 0x1
0x44b SLOAD
0x44c PUSH1 0x1
0x44e PUSH1 0xa0
0x450 PUSH1 0x2
0x452 EXP
0x453 SUB
0x454 AND
0x455 DUP2
0x456 JUMP
---
0x448: JUMPDEST 
0x449: V390 = 0x1
0x44b: V391 = S[0x1]
0x44c: V392 = 0x1
0x44e: V393 = 0xa0
0x450: V394 = 0x2
0x452: V395 = EXP 0x2 0xa0
0x453: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x454: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x456: JUMP 0x16e
---
Entry stack: [V11, 0x16e]
Stack pops: 1
Stack additions: [S0, V397]
Exit stack: [V11, 0x16e, V397]

================================

Block 0x457
[0x457:0x45d]
---
Predecessors: [0x196, 0x2ac, 0x4f7]
Successors: [0x136]
---
0x457 JUMPDEST
0x458 POP
0x459 POP
0x45a POP
0x45b POP
0x45c POP
0x45d JUMP
---
0x457: JUMPDEST 
0x45d: JUMP 0x136
---
Entry stack: [V11, 0x136, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x45e
[0x45e:0x476]
---
Predecessors: [0x1d2]
Successors: [0x477, 0x486]
---
0x45e JUMPDEST
0x45f PUSH1 0x3
0x461 SLOAD
0x462 PUSH2 0x100
0x465 SWAP1
0x466 DIV
0x467 PUSH1 0x1
0x469 PUSH1 0xa0
0x46b PUSH1 0x2
0x46d EXP
0x46e SUB
0x46f AND
0x470 CALLER
0x471 EQ
0x472 DUP1
0x473 PUSH2 0x486
0x476 JUMPI
---
0x45e: JUMPDEST 
0x45f: V398 = 0x3
0x461: V399 = S[0x3]
0x462: V400 = 0x100
0x466: V401 = DIV V399 0x100
0x467: V402 = 0x1
0x469: V403 = 0xa0
0x46b: V404 = 0x2
0x46d: V405 = EXP 0x2 0xa0
0x46e: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46f: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x470: V408 = CALLER
0x471: V409 = EQ V408 V407
0x473: V410 = 0x486
0x476: JUMPI 0x486 V409
---
Entry stack: [V11, 0x136, V156]
Stack pops: 0
Stack additions: [V409]
Exit stack: [V11, 0x136, V156, V409]

================================

Block 0x477
[0x477:0x485]
---
Predecessors: [0x45e]
Successors: [0x486]
---
0x477 POP
0x478 PUSH1 0x0
0x47a SLOAD
0x47b PUSH1 0x1
0x47d PUSH1 0xa0
0x47f PUSH1 0x2
0x481 EXP
0x482 SUB
0x483 AND
0x484 CALLER
0x485 EQ
---
0x478: V411 = 0x0
0x47a: V412 = S[0x0]
0x47b: V413 = 0x1
0x47d: V414 = 0xa0
0x47f: V415 = 0x2
0x481: V416 = EXP 0x2 0xa0
0x482: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x483: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x484: V419 = CALLER
0x485: V420 = EQ V419 V418
---
Entry stack: [V11, 0x136, V156, V409]
Stack pops: 1
Stack additions: [V420]
Exit stack: [V11, 0x136, V156, V420]

================================

Block 0x486
[0x486:0x48c]
---
Predecessors: [0x45e, 0x477]
Successors: [0x48d, 0x491]
---
0x486 JUMPDEST
0x487 ISZERO
0x488 ISZERO
0x489 PUSH2 0x491
0x48c JUMPI
---
0x486: JUMPDEST 
0x487: V421 = ISZERO S0
0x488: V422 = ISZERO V421
0x489: V423 = 0x491
0x48c: JUMPI 0x491 V422
---
Entry stack: [V11, 0x136, V156, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x136, V156]

================================

Block 0x48d
[0x48d:0x490]
---
Predecessors: [0x486]
Successors: []
---
0x48d PUSH1 0x0
0x48f DUP1
0x490 REVERT
---
0x48d: V424 = 0x0
0x490: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V156]

================================

Block 0x491
[0x491:0x4f2]
---
Predecessors: [0x486]
Successors: [0x4f3, 0x4f7]
---
0x491 JUMPDEST
0x492 PUSH1 0x5
0x494 SLOAD
0x495 PUSH1 0x40
0x497 DUP1
0x498 MLOAD
0x499 PUSH32 0x127a565200000000000000000000000000000000000000000000000000000000
0x4ba DUP2
0x4bb MSTORE
0x4bc PUSH1 0x4
0x4be DUP2
0x4bf ADD
0x4c0 DUP5
0x4c1 SWAP1
0x4c2 MSTORE
0x4c3 SWAP1
0x4c4 MLOAD
0x4c5 PUSH1 0x1
0x4c7 PUSH1 0xa0
0x4c9 PUSH1 0x2
0x4cb EXP
0x4cc SUB
0x4cd SWAP1
0x4ce SWAP3
0x4cf AND
0x4d0 SWAP2
0x4d1 PUSH4 0x127a5652
0x4d6 SWAP2
0x4d7 PUSH1 0x24
0x4d9 DUP1
0x4da DUP3
0x4db ADD
0x4dc SWAP3
0x4dd PUSH1 0x0
0x4df SWAP3
0x4e0 SWAP1
0x4e1 SWAP2
0x4e2 SWAP1
0x4e3 DUP3
0x4e4 SWAP1
0x4e5 SUB
0x4e6 ADD
0x4e7 DUP2
0x4e8 DUP4
0x4e9 DUP8
0x4ea DUP1
0x4eb EXTCODESIZE
0x4ec ISZERO
0x4ed DUP1
0x4ee ISZERO
0x4ef PUSH2 0x4f7
0x4f2 JUMPI
---
0x491: JUMPDEST 
0x492: V425 = 0x5
0x494: V426 = S[0x5]
0x495: V427 = 0x40
0x498: V428 = M[0x40]
0x499: V429 = 0x127a565200000000000000000000000000000000000000000000000000000000
0x4bb: M[V428] = 0x127a565200000000000000000000000000000000000000000000000000000000
0x4bc: V430 = 0x4
0x4bf: V431 = ADD V428 0x4
0x4c2: M[V431] = V156
0x4c4: V432 = M[0x40]
0x4c5: V433 = 0x1
0x4c7: V434 = 0xa0
0x4c9: V435 = 0x2
0x4cb: V436 = EXP 0x2 0xa0
0x4cc: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V438 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V439 = 0x127a5652
0x4d7: V440 = 0x24
0x4db: V441 = ADD V428 0x24
0x4dd: V442 = 0x0
0x4e5: V443 = SUB V428 V432
0x4e6: V444 = ADD V443 0x24
0x4eb: V445 = EXTCODESIZE V438
0x4ec: V446 = ISZERO V445
0x4ee: V447 = ISZERO V446
0x4ef: V448 = 0x4f7
0x4f2: JUMPI 0x4f7 V447
---
Entry stack: [V11, 0x136, V156]
Stack pops: 1
Stack additions: [S0, V438, 0x127a5652, V441, 0x0, V432, V444, V432, 0x0, V438, V446]
Exit stack: [V11, 0x136, V156, V438, 0x127a5652, V441, 0x0, V432, V444, V432, 0x0, V438, V446]

================================

Block 0x4f3
[0x4f3:0x4f6]
---
Predecessors: [0x491]
Successors: []
---
0x4f3 PUSH1 0x0
0x4f5 DUP1
0x4f6 REVERT
---
0x4f3: V449 = 0x0
0x4f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V156, V438, 0x127a5652, V441, 0x0, V432, V444, V432, 0x0, V438, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V156, V438, 0x127a5652, V441, 0x0, V432, V444, V432, 0x0, V438, V446]

================================

Block 0x4f7
[0x4f7:0x501]
---
Predecessors: [0x491]
Successors: [0x457, 0x502]
---
0x4f7 JUMPDEST
0x4f8 POP
0x4f9 GAS
0x4fa CALL
0x4fb ISZERO
0x4fc DUP1
0x4fd ISZERO
0x4fe PUSH2 0x457
0x501 JUMPI
---
0x4f7: JUMPDEST 
0x4f9: V450 = GAS
0x4fa: V451 = CALL V450 V438 0x0 V432 V444 V432 0x0
0x4fb: V452 = ISZERO V451
0x4fd: V453 = ISZERO V452
0x4fe: V454 = 0x457
0x501: JUMPI 0x457 V453
---
Entry stack: [V11, 0x136, V156, V438, 0x127a5652, V441, 0x0, V432, V444, V432, 0x0, V438, V446]
Stack pops: 7
Stack additions: [V452]
Exit stack: [V11, 0x136, V156, V438, 0x127a5652, V441, V452]

================================

Block 0x502
[0x502:0x50a]
---
Predecessors: [0x4f7]
Successors: []
---
0x502 RETURNDATASIZE
0x503 PUSH1 0x0
0x505 DUP1
0x506 RETURNDATACOPY
0x507 RETURNDATASIZE
0x508 PUSH1 0x0
0x50a REVERT
---
0x502: V455 = RETURNDATASIZE
0x503: V456 = 0x0
0x506: RETURNDATACOPY 0x0 0x0 V455
0x507: V457 = RETURNDATASIZE
0x508: V458 = 0x0
0x50a: REVERT 0x0 V457
---
Entry stack: [V11, 0x136, V156, V438, 0x127a5652, V441, V452]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V156, V438, 0x127a5652, V441, V452]

================================

Block 0x50b
[0x50b:0x50d]
---
Predecessors: [0x1ea, 0x87d]
Successors: [0x136]
---
0x50b JUMPDEST
0x50c POP
0x50d JUMP
---
0x50b: JUMPDEST 
0x50d: JUMP 0x136
---
Entry stack: [V11, 0x136, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x50e
[0x50e:0x511]
---
Predecessors: [0x202, 0x5bb]
Successors: [0x136]
---
0x50e JUMPDEST
0x50f POP
0x510 POP
0x511 JUMP
---
0x50e: JUMPDEST 
0x511: JUMP 0x136
---
Entry stack: [V11, 0x136, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x512
[0x512:0x524]
---
Predecessors: [0x221]
Successors: [0x525, 0x562]
---
0x512 JUMPDEST
0x513 PUSH1 0x0
0x515 SLOAD
0x516 PUSH1 0x1
0x518 PUSH1 0xa0
0x51a PUSH1 0x2
0x51c EXP
0x51d SUB
0x51e AND
0x51f CALLER
0x520 EQ
0x521 PUSH2 0x562
0x524 JUMPI
---
0x512: JUMPDEST 
0x513: V459 = 0x0
0x515: V460 = S[0x0]
0x516: V461 = 0x1
0x518: V462 = 0xa0
0x51a: V463 = 0x2
0x51c: V464 = EXP 0x2 0xa0
0x51d: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51e: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x51f: V467 = CALLER
0x520: V468 = EQ V467 V466
0x521: V469 = 0x562
0x524: JUMPI 0x562 V468
---
Entry stack: [V11, 0x136, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V184]

================================

Block 0x525
[0x525:0x561]
---
Predecessors: [0x512]
Successors: []
---
0x525 PUSH1 0x40
0x527 DUP1
0x528 MLOAD
0x529 PUSH1 0xe5
0x52b PUSH1 0x2
0x52d EXP
0x52e PUSH3 0x461bcd
0x532 MUL
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x20
0x537 PUSH1 0x4
0x539 DUP3
0x53a ADD
0x53b MSTORE
0x53c PUSH1 0xa
0x53e PUSH1 0x24
0x540 DUP3
0x541 ADD
0x542 MSTORE
0x543 PUSH1 0x0
0x545 DUP1
0x546 MLOAD
0x547 PUSH1 0x20
0x549 PUSH2 0x8cd
0x54c DUP4
0x54d CODECOPY
0x54e DUP2
0x54f MLOAD
0x550 SWAP2
0x551 MSTORE
0x552 PUSH1 0x44
0x554 DUP3
0x555 ADD
0x556 MSTORE
0x557 SWAP1
0x558 MLOAD
0x559 SWAP1
0x55a DUP2
0x55b SWAP1
0x55c SUB
0x55d PUSH1 0x64
0x55f ADD
0x560 SWAP1
0x561 REVERT
---
0x525: V470 = 0x40
0x528: V471 = M[0x40]
0x529: V472 = 0xe5
0x52b: V473 = 0x2
0x52d: V474 = EXP 0x2 0xe5
0x52e: V475 = 0x461bcd
0x532: V476 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x534: M[V471] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x535: V477 = 0x20
0x537: V478 = 0x4
0x53a: V479 = ADD V471 0x4
0x53b: M[V479] = 0x20
0x53c: V480 = 0xa
0x53e: V481 = 0x24
0x541: V482 = ADD V471 0x24
0x542: M[V482] = 0xa
0x543: V483 = 0x0
0x546: V484 = M[0x0]
0x547: V485 = 0x20
0x549: V486 = 0x8cd
0x54d: CODECOPY 0x0 0x8cd 0x20
0x54f: V487 = M[0x0]
0x551: M[0x0] = V484
0x552: V488 = 0x44
0x555: V489 = ADD V471 0x44
0x556: M[V489] = V487
0x558: V490 = M[0x40]
0x55c: V491 = SUB V471 V490
0x55d: V492 = 0x64
0x55f: V493 = ADD 0x64 V491
0x561: REVERT V490 V493
---
Entry stack: [V11, 0x136, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V184]

================================

Block 0x562
[0x562:0x56b]
---
Predecessors: [0x512]
Successors: [0x56c, 0x5bb]
---
0x562 JUMPDEST
0x563 ADDRESS
0x564 BALANCE
0x565 DUP2
0x566 GT
0x567 ISZERO
0x568 PUSH2 0x5bb
0x56b JUMPI
---
0x562: JUMPDEST 
0x563: V494 = ADDRESS
0x564: V495 = BALANCE V494
0x566: V496 = GT V184 V495
0x567: V497 = ISZERO V496
0x568: V498 = 0x5bb
0x56b: JUMPI 0x5bb V497
---
Entry stack: [V11, 0x136, V184]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x136, V184]

================================

Block 0x56c
[0x56c:0x5ba]
---
Predecessors: [0x562]
Successors: []
---
0x56c PUSH1 0x40
0x56e DUP1
0x56f MLOAD
0x570 PUSH1 0xe5
0x572 PUSH1 0x2
0x574 EXP
0x575 PUSH3 0x461bcd
0x579 MUL
0x57a DUP2
0x57b MSTORE
0x57c PUSH1 0x20
0x57e PUSH1 0x4
0x580 DUP3
0x581 ADD
0x582 MSTORE
0x583 PUSH1 0x14
0x585 PUSH1 0x24
0x587 DUP3
0x588 ADD
0x589 MSTORE
0x58a PUSH32 0x496e73756666696369656e742062616c616e6365000000000000000000000000
0x5ab PUSH1 0x44
0x5ad DUP3
0x5ae ADD
0x5af MSTORE
0x5b0 SWAP1
0x5b1 MLOAD
0x5b2 SWAP1
0x5b3 DUP2
0x5b4 SWAP1
0x5b5 SUB
0x5b6 PUSH1 0x64
0x5b8 ADD
0x5b9 SWAP1
0x5ba REVERT
---
0x56c: V499 = 0x40
0x56f: V500 = M[0x40]
0x570: V501 = 0xe5
0x572: V502 = 0x2
0x574: V503 = EXP 0x2 0xe5
0x575: V504 = 0x461bcd
0x579: V505 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x57b: M[V500] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x57c: V506 = 0x20
0x57e: V507 = 0x4
0x581: V508 = ADD V500 0x4
0x582: M[V508] = 0x20
0x583: V509 = 0x14
0x585: V510 = 0x24
0x588: V511 = ADD V500 0x24
0x589: M[V511] = 0x14
0x58a: V512 = 0x496e73756666696369656e742062616c616e6365000000000000000000000000
0x5ab: V513 = 0x44
0x5ae: V514 = ADD V500 0x44
0x5af: M[V514] = 0x496e73756666696369656e742062616c616e6365000000000000000000000000
0x5b1: V515 = M[0x40]
0x5b5: V516 = SUB V500 V515
0x5b6: V517 = 0x64
0x5b8: V518 = ADD 0x64 V516
0x5ba: REVERT V515 V518
---
Entry stack: [V11, 0x136, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V184]

================================

Block 0x5bb
[0x5bb:0x5eb]
---
Predecessors: [0x562]
Successors: [0x50e, 0x5ec]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x1
0x5be SLOAD
0x5bf PUSH1 0x40
0x5c1 MLOAD
0x5c2 PUSH1 0x1
0x5c4 PUSH1 0xa0
0x5c6 PUSH1 0x2
0x5c8 EXP
0x5c9 SUB
0x5ca SWAP1
0x5cb SWAP2
0x5cc AND
0x5cd SWAP1
0x5ce DUP3
0x5cf ISZERO
0x5d0 PUSH2 0x8fc
0x5d3 MUL
0x5d4 SWAP1
0x5d5 DUP4
0x5d6 SWAP1
0x5d7 PUSH1 0x0
0x5d9 DUP2
0x5da DUP2
0x5db DUP2
0x5dc DUP6
0x5dd DUP9
0x5de DUP9
0x5df CALL
0x5e0 SWAP4
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 POP
0x5e5 ISZERO
0x5e6 DUP1
0x5e7 ISZERO
0x5e8 PUSH2 0x50e
0x5eb JUMPI
---
0x5bb: JUMPDEST 
0x5bc: V519 = 0x1
0x5be: V520 = S[0x1]
0x5bf: V521 = 0x40
0x5c1: V522 = M[0x40]
0x5c2: V523 = 0x1
0x5c4: V524 = 0xa0
0x5c6: V525 = 0x2
0x5c8: V526 = EXP 0x2 0xa0
0x5c9: V527 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cc: V528 = AND V520 0xffffffffffffffffffffffffffffffffffffffff
0x5cf: V529 = ISZERO V184
0x5d0: V530 = 0x8fc
0x5d3: V531 = MUL 0x8fc V529
0x5d7: V532 = 0x0
0x5df: V533 = CALL V531 V528 V184 V522 0x0 V522 0x0
0x5e5: V534 = ISZERO V533
0x5e7: V535 = ISZERO V534
0x5e8: V536 = 0x50e
0x5eb: JUMPI 0x50e V535
---
Entry stack: [V11, 0x136, V184]
Stack pops: 1
Stack additions: [S0, V534]
Exit stack: [V11, 0x136, V184, V534]

================================

Block 0x5ec
[0x5ec:0x5f4]
---
Predecessors: [0x5bb]
Successors: []
---
0x5ec RETURNDATASIZE
0x5ed PUSH1 0x0
0x5ef DUP1
0x5f0 RETURNDATACOPY
0x5f1 RETURNDATASIZE
0x5f2 PUSH1 0x0
0x5f4 REVERT
---
0x5ec: V537 = RETURNDATASIZE
0x5ed: V538 = 0x0
0x5f0: RETURNDATACOPY 0x0 0x0 V537
0x5f1: V539 = RETURNDATASIZE
0x5f2: V540 = 0x0
0x5f4: REVERT 0x0 V539
---
Entry stack: [V11, 0x136, V184, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V184, V534]

================================

Block 0x5f5
[0x5f5:0x603]
---
Predecessors: [0x239]
Successors: [0x16e]
---
0x5f5 JUMPDEST
0x5f6 PUSH1 0x0
0x5f8 SLOAD
0x5f9 PUSH1 0x1
0x5fb PUSH1 0xa0
0x5fd PUSH1 0x2
0x5ff EXP
0x600 SUB
0x601 AND
0x602 DUP2
0x603 JUMP
---
0x5f5: JUMPDEST 
0x5f6: V541 = 0x0
0x5f8: V542 = S[0x0]
0x5f9: V543 = 0x1
0x5fb: V544 = 0xa0
0x5fd: V545 = 0x2
0x5ff: V546 = EXP 0x2 0xa0
0x600: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x601: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x603: JUMP 0x16e
---
Entry stack: [V11, 0x16e]
Stack pops: 1
Stack additions: [S0, V548]
Exit stack: [V11, 0x16e, V548]

================================

Block 0x604
[0x604:0x616]
---
Predecessors: [0x24e]
Successors: [0x617, 0x654]
---
0x604 JUMPDEST
0x605 PUSH1 0x0
0x607 SLOAD
0x608 PUSH1 0x1
0x60a PUSH1 0xa0
0x60c PUSH1 0x2
0x60e EXP
0x60f SUB
0x610 AND
0x611 CALLER
0x612 EQ
0x613 PUSH2 0x654
0x616 JUMPI
---
0x604: JUMPDEST 
0x605: V549 = 0x0
0x607: V550 = S[0x0]
0x608: V551 = 0x1
0x60a: V552 = 0xa0
0x60c: V553 = 0x2
0x60e: V554 = EXP 0x2 0xa0
0x60f: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x610: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x611: V557 = CALLER
0x612: V558 = EQ V557 V556
0x613: V559 = 0x654
0x616: JUMPI 0x654 V558
---
Entry stack: [V11, 0x136, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V204]

================================

Block 0x617
[0x617:0x653]
---
Predecessors: [0x604]
Successors: []
---
0x617 PUSH1 0x40
0x619 DUP1
0x61a MLOAD
0x61b PUSH1 0xe5
0x61d PUSH1 0x2
0x61f EXP
0x620 PUSH3 0x461bcd
0x624 MUL
0x625 DUP2
0x626 MSTORE
0x627 PUSH1 0x20
0x629 PUSH1 0x4
0x62b DUP3
0x62c ADD
0x62d MSTORE
0x62e PUSH1 0xa
0x630 PUSH1 0x24
0x632 DUP3
0x633 ADD
0x634 MSTORE
0x635 PUSH1 0x0
0x637 DUP1
0x638 MLOAD
0x639 PUSH1 0x20
0x63b PUSH2 0x8cd
0x63e DUP4
0x63f CODECOPY
0x640 DUP2
0x641 MLOAD
0x642 SWAP2
0x643 MSTORE
0x644 PUSH1 0x44
0x646 DUP3
0x647 ADD
0x648 MSTORE
0x649 SWAP1
0x64a MLOAD
0x64b SWAP1
0x64c DUP2
0x64d SWAP1
0x64e SUB
0x64f PUSH1 0x64
0x651 ADD
0x652 SWAP1
0x653 REVERT
---
0x617: V560 = 0x40
0x61a: V561 = M[0x40]
0x61b: V562 = 0xe5
0x61d: V563 = 0x2
0x61f: V564 = EXP 0x2 0xe5
0x620: V565 = 0x461bcd
0x624: V566 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x626: M[V561] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x627: V567 = 0x20
0x629: V568 = 0x4
0x62c: V569 = ADD V561 0x4
0x62d: M[V569] = 0x20
0x62e: V570 = 0xa
0x630: V571 = 0x24
0x633: V572 = ADD V561 0x24
0x634: M[V572] = 0xa
0x635: V573 = 0x0
0x638: V574 = M[0x0]
0x639: V575 = 0x20
0x63b: V576 = 0x8cd
0x63f: CODECOPY 0x0 0x8cd 0x20
0x641: V577 = M[0x0]
0x643: M[0x0] = V574
0x644: V578 = 0x44
0x647: V579 = ADD V561 0x44
0x648: M[V579] = V577
0x64a: V580 = M[0x40]
0x64e: V581 = SUB V561 V580
0x64f: V582 = 0x64
0x651: V583 = ADD 0x64 V581
0x653: REVERT V580 V583
---
Entry stack: [V11, 0x136, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V204]

================================

Block 0x654
[0x654:0x674]
---
Predecessors: [0x604]
Successors: [0x136]
---
0x654 JUMPDEST
0x655 PUSH1 0x1
0x657 PUSH1 0xa0
0x659 PUSH1 0x2
0x65b EXP
0x65c SUB
0x65d AND
0x65e PUSH1 0x0
0x660 SWAP1
0x661 DUP2
0x662 MSTORE
0x663 PUSH1 0x2
0x665 PUSH1 0x20
0x667 MSTORE
0x668 PUSH1 0x40
0x66a SWAP1
0x66b SHA3
0x66c DUP1
0x66d SLOAD
0x66e PUSH1 0xff
0x670 NOT
0x671 AND
0x672 SWAP1
0x673 SSTORE
0x674 JUMP
---
0x654: JUMPDEST 
0x655: V584 = 0x1
0x657: V585 = 0xa0
0x659: V586 = 0x2
0x65b: V587 = EXP 0x2 0xa0
0x65c: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65d: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x65e: V590 = 0x0
0x662: M[0x0] = V589
0x663: V591 = 0x2
0x665: V592 = 0x20
0x667: M[0x20] = 0x2
0x668: V593 = 0x40
0x66b: V594 = SHA3 0x0 0x40
0x66d: V595 = S[V594]
0x66e: V596 = 0xff
0x670: V597 = NOT 0xff
0x671: V598 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V595
0x673: S[V594] = V598
0x674: JUMP 0x136
---
Entry stack: [V11, 0x136, V204]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x675
[0x675:0x67a]
---
Predecessors: [0x26f]
Successors: [0x16e]
---
0x675 JUMPDEST
0x676 POP
0x677 PUSH1 0x0
0x679 SWAP1
0x67a JUMP
---
0x675: JUMPDEST 
0x677: V599 = 0x0
0x67a: JUMP 0x16e
---
Entry stack: [V11, 0x16e, V214]
Stack pops: 2
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x67b
[0x67b:0x68d]
---
Predecessors: [0x28b]
Successors: [0x68e, 0x6cb]
---
0x67b JUMPDEST
0x67c PUSH1 0x0
0x67e SLOAD
0x67f PUSH1 0x1
0x681 PUSH1 0xa0
0x683 PUSH1 0x2
0x685 EXP
0x686 SUB
0x687 AND
0x688 CALLER
0x689 EQ
0x68a PUSH2 0x6cb
0x68d JUMPI
---
0x67b: JUMPDEST 
0x67c: V600 = 0x0
0x67e: V601 = S[0x0]
0x67f: V602 = 0x1
0x681: V603 = 0xa0
0x683: V604 = 0x2
0x685: V605 = EXP 0x2 0xa0
0x686: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x687: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V601
0x688: V608 = CALLER
0x689: V609 = EQ V608 V607
0x68a: V610 = 0x6cb
0x68d: JUMPI 0x6cb V609
---
Entry stack: [V11, 0x136, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V228]

================================

Block 0x68e
[0x68e:0x6ca]
---
Predecessors: [0x67b]
Successors: []
---
0x68e PUSH1 0x40
0x690 DUP1
0x691 MLOAD
0x692 PUSH1 0xe5
0x694 PUSH1 0x2
0x696 EXP
0x697 PUSH3 0x461bcd
0x69b MUL
0x69c DUP2
0x69d MSTORE
0x69e PUSH1 0x20
0x6a0 PUSH1 0x4
0x6a2 DUP3
0x6a3 ADD
0x6a4 MSTORE
0x6a5 PUSH1 0xa
0x6a7 PUSH1 0x24
0x6a9 DUP3
0x6aa ADD
0x6ab MSTORE
0x6ac PUSH1 0x0
0x6ae DUP1
0x6af MLOAD
0x6b0 PUSH1 0x20
0x6b2 PUSH2 0x8cd
0x6b5 DUP4
0x6b6 CODECOPY
0x6b7 DUP2
0x6b8 MLOAD
0x6b9 SWAP2
0x6ba MSTORE
0x6bb PUSH1 0x44
0x6bd DUP3
0x6be ADD
0x6bf MSTORE
0x6c0 SWAP1
0x6c1 MLOAD
0x6c2 SWAP1
0x6c3 DUP2
0x6c4 SWAP1
0x6c5 SUB
0x6c6 PUSH1 0x64
0x6c8 ADD
0x6c9 SWAP1
0x6ca REVERT
---
0x68e: V611 = 0x40
0x691: V612 = M[0x40]
0x692: V613 = 0xe5
0x694: V614 = 0x2
0x696: V615 = EXP 0x2 0xe5
0x697: V616 = 0x461bcd
0x69b: V617 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x69d: M[V612] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x69e: V618 = 0x20
0x6a0: V619 = 0x4
0x6a3: V620 = ADD V612 0x4
0x6a4: M[V620] = 0x20
0x6a5: V621 = 0xa
0x6a7: V622 = 0x24
0x6aa: V623 = ADD V612 0x24
0x6ab: M[V623] = 0xa
0x6ac: V624 = 0x0
0x6af: V625 = M[0x0]
0x6b0: V626 = 0x20
0x6b2: V627 = 0x8cd
0x6b6: CODECOPY 0x0 0x8cd 0x20
0x6b8: V628 = M[0x0]
0x6ba: M[0x0] = V625
0x6bb: V629 = 0x44
0x6be: V630 = ADD V612 0x44
0x6bf: M[V630] = V628
0x6c1: V631 = M[0x40]
0x6c5: V632 = SUB V612 V631
0x6c6: V633 = 0x64
0x6c8: V634 = ADD 0x64 V632
0x6ca: REVERT V631 V634
---
Entry stack: [V11, 0x136, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V228]

================================

Block 0x6cb
[0x6cb:0x6ee]
---
Predecessors: [0x67b]
Successors: [0x136]
---
0x6cb JUMPDEST
0x6cc PUSH1 0x1
0x6ce PUSH1 0xa0
0x6d0 PUSH1 0x2
0x6d2 EXP
0x6d3 SUB
0x6d4 AND
0x6d5 PUSH1 0x0
0x6d7 SWAP1
0x6d8 DUP2
0x6d9 MSTORE
0x6da PUSH1 0x2
0x6dc PUSH1 0x20
0x6de MSTORE
0x6df PUSH1 0x40
0x6e1 SWAP1
0x6e2 SHA3
0x6e3 DUP1
0x6e4 SLOAD
0x6e5 PUSH1 0xff
0x6e7 NOT
0x6e8 AND
0x6e9 PUSH1 0x1
0x6eb OR
0x6ec SWAP1
0x6ed SSTORE
0x6ee JUMP
---
0x6cb: JUMPDEST 
0x6cc: V635 = 0x1
0x6ce: V636 = 0xa0
0x6d0: V637 = 0x2
0x6d2: V638 = EXP 0x2 0xa0
0x6d3: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d4: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x6d5: V641 = 0x0
0x6d9: M[0x0] = V640
0x6da: V642 = 0x2
0x6dc: V643 = 0x20
0x6de: M[0x20] = 0x2
0x6df: V644 = 0x40
0x6e2: V645 = SHA3 0x0 0x40
0x6e4: V646 = S[V645]
0x6e5: V647 = 0xff
0x6e7: V648 = NOT 0xff
0x6e8: V649 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V646
0x6e9: V650 = 0x1
0x6eb: V651 = OR 0x1 V649
0x6ed: S[V645] = V651
0x6ee: JUMP 0x136
---
Entry stack: [V11, 0x136, V228]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6ef
[0x6ef:0x701]
---
Predecessors: [0x2e8]
Successors: [0x702, 0x73f]
---
0x6ef JUMPDEST
0x6f0 PUSH1 0x0
0x6f2 SLOAD
0x6f3 PUSH1 0x1
0x6f5 PUSH1 0xa0
0x6f7 PUSH1 0x2
0x6f9 EXP
0x6fa SUB
0x6fb AND
0x6fc CALLER
0x6fd EQ
0x6fe PUSH2 0x73f
0x701 JUMPI
---
0x6ef: JUMPDEST 
0x6f0: V652 = 0x0
0x6f2: V653 = S[0x0]
0x6f3: V654 = 0x1
0x6f5: V655 = 0xa0
0x6f7: V656 = 0x2
0x6f9: V657 = EXP 0x2 0xa0
0x6fa: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fb: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x6fc: V660 = CALLER
0x6fd: V661 = EQ V660 V659
0x6fe: V662 = 0x73f
0x701: JUMPI 0x73f V661
---
Entry stack: [V11, 0x136, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V270]

================================

Block 0x702
[0x702:0x73e]
---
Predecessors: [0x6ef]
Successors: []
---
0x702 PUSH1 0x40
0x704 DUP1
0x705 MLOAD
0x706 PUSH1 0xe5
0x708 PUSH1 0x2
0x70a EXP
0x70b PUSH3 0x461bcd
0x70f MUL
0x710 DUP2
0x711 MSTORE
0x712 PUSH1 0x20
0x714 PUSH1 0x4
0x716 DUP3
0x717 ADD
0x718 MSTORE
0x719 PUSH1 0xa
0x71b PUSH1 0x24
0x71d DUP3
0x71e ADD
0x71f MSTORE
0x720 PUSH1 0x0
0x722 DUP1
0x723 MLOAD
0x724 PUSH1 0x20
0x726 PUSH2 0x8cd
0x729 DUP4
0x72a CODECOPY
0x72b DUP2
0x72c MLOAD
0x72d SWAP2
0x72e MSTORE
0x72f PUSH1 0x44
0x731 DUP3
0x732 ADD
0x733 MSTORE
0x734 SWAP1
0x735 MLOAD
0x736 SWAP1
0x737 DUP2
0x738 SWAP1
0x739 SUB
0x73a PUSH1 0x64
0x73c ADD
0x73d SWAP1
0x73e REVERT
---
0x702: V663 = 0x40
0x705: V664 = M[0x40]
0x706: V665 = 0xe5
0x708: V666 = 0x2
0x70a: V667 = EXP 0x2 0xe5
0x70b: V668 = 0x461bcd
0x70f: V669 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x711: M[V664] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x712: V670 = 0x20
0x714: V671 = 0x4
0x717: V672 = ADD V664 0x4
0x718: M[V672] = 0x20
0x719: V673 = 0xa
0x71b: V674 = 0x24
0x71e: V675 = ADD V664 0x24
0x71f: M[V675] = 0xa
0x720: V676 = 0x0
0x723: V677 = M[0x0]
0x724: V678 = 0x20
0x726: V679 = 0x8cd
0x72a: CODECOPY 0x0 0x8cd 0x20
0x72c: V680 = M[0x0]
0x72e: M[0x0] = V677
0x72f: V681 = 0x44
0x732: V682 = ADD V664 0x44
0x733: M[V682] = V680
0x735: V683 = M[0x40]
0x739: V684 = SUB V664 V683
0x73a: V685 = 0x64
0x73c: V686 = ADD 0x64 V684
0x73e: REVERT V683 V686
---
Entry stack: [V11, 0x136, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V270]

================================

Block 0x73f
[0x73f:0x74f]
---
Predecessors: [0x6ef]
Successors: [0x750, 0x7c5]
---
0x73f JUMPDEST
0x740 PUSH1 0x1
0x742 PUSH1 0xa0
0x744 PUSH1 0x2
0x746 EXP
0x747 SUB
0x748 DUP2
0x749 AND
0x74a ISZERO
0x74b ISZERO
0x74c PUSH2 0x7c5
0x74f JUMPI
---
0x73f: JUMPDEST 
0x740: V687 = 0x1
0x742: V688 = 0xa0
0x744: V689 = 0x2
0x746: V690 = EXP 0x2 0xa0
0x747: V691 = SUB 0x10000000000000000000000000000000000000000 0x1
0x749: V692 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0x74a: V693 = ISZERO V692
0x74b: V694 = ISZERO V693
0x74c: V695 = 0x7c5
0x74f: JUMPI 0x7c5 V694
---
Entry stack: [V11, 0x136, V270]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x136, V270]

================================

Block 0x750
[0x750:0x7c4]
---
Predecessors: [0x73f]
Successors: []
---
0x750 PUSH1 0x40
0x752 DUP1
0x753 MLOAD
0x754 PUSH1 0xe5
0x756 PUSH1 0x2
0x758 EXP
0x759 PUSH3 0x461bcd
0x75d MUL
0x75e DUP2
0x75f MSTORE
0x760 PUSH1 0x20
0x762 PUSH1 0x4
0x764 DUP3
0x765 ADD
0x766 MSTORE
0x767 PUSH1 0x27
0x769 PUSH1 0x24
0x76b DUP3
0x76c ADD
0x76d MSTORE
0x76e PUSH32 0x5472616e7366657220746f206e756c6c2061646472657373206973206e6f7420
0x78f PUSH1 0x44
0x791 DUP3
0x792 ADD
0x793 MSTORE
0x794 PUSH32 0x616c6c6f77656400000000000000000000000000000000000000000000000000
0x7b5 PUSH1 0x64
0x7b7 DUP3
0x7b8 ADD
0x7b9 MSTORE
0x7ba SWAP1
0x7bb MLOAD
0x7bc SWAP1
0x7bd DUP2
0x7be SWAP1
0x7bf SUB
0x7c0 PUSH1 0x84
0x7c2 ADD
0x7c3 SWAP1
0x7c4 REVERT
---
0x750: V696 = 0x40
0x753: V697 = M[0x40]
0x754: V698 = 0xe5
0x756: V699 = 0x2
0x758: V700 = EXP 0x2 0xe5
0x759: V701 = 0x461bcd
0x75d: V702 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x75f: M[V697] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x760: V703 = 0x20
0x762: V704 = 0x4
0x765: V705 = ADD V697 0x4
0x766: M[V705] = 0x20
0x767: V706 = 0x27
0x769: V707 = 0x24
0x76c: V708 = ADD V697 0x24
0x76d: M[V708] = 0x27
0x76e: V709 = 0x5472616e7366657220746f206e756c6c2061646472657373206973206e6f7420
0x78f: V710 = 0x44
0x792: V711 = ADD V697 0x44
0x793: M[V711] = 0x5472616e7366657220746f206e756c6c2061646472657373206973206e6f7420
0x794: V712 = 0x616c6c6f77656400000000000000000000000000000000000000000000000000
0x7b5: V713 = 0x64
0x7b8: V714 = ADD V697 0x64
0x7b9: M[V714] = 0x616c6c6f77656400000000000000000000000000000000000000000000000000
0x7bb: V715 = M[0x40]
0x7bf: V716 = SUB V697 V715
0x7c0: V717 = 0x84
0x7c2: V718 = ADD 0x84 V716
0x7c4: REVERT V715 V718
---
Entry stack: [V11, 0x136, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V270]

================================

Block 0x7c5
[0x7c5:0x82c]
---
Predecessors: [0x73f]
Successors: [0x136]
---
0x7c5 JUMPDEST
0x7c6 PUSH1 0x0
0x7c8 DUP1
0x7c9 SLOAD
0x7ca PUSH1 0x40
0x7cc MLOAD
0x7cd PUSH1 0x1
0x7cf PUSH1 0xa0
0x7d1 PUSH1 0x2
0x7d3 EXP
0x7d4 SUB
0x7d5 DUP1
0x7d6 DUP6
0x7d7 AND
0x7d8 SWAP4
0x7d9 SWAP3
0x7da AND
0x7db SWAP2
0x7dc PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7fd SWAP2
0x7fe LOG3
0x7ff PUSH1 0x0
0x801 DUP1
0x802 SLOAD
0x803 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x818 NOT
0x819 AND
0x81a PUSH1 0x1
0x81c PUSH1 0xa0
0x81e PUSH1 0x2
0x820 EXP
0x821 SUB
0x822 SWAP3
0x823 SWAP1
0x824 SWAP3
0x825 AND
0x826 SWAP2
0x827 SWAP1
0x828 SWAP2
0x829 OR
0x82a SWAP1
0x82b SSTORE
0x82c JUMP
---
0x7c5: JUMPDEST 
0x7c6: V719 = 0x0
0x7c9: V720 = S[0x0]
0x7ca: V721 = 0x40
0x7cc: V722 = M[0x40]
0x7cd: V723 = 0x1
0x7cf: V724 = 0xa0
0x7d1: V725 = 0x2
0x7d3: V726 = EXP 0x2 0xa0
0x7d4: V727 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d7: V728 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0x7da: V729 = AND V720 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V730 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7fe: LOG V722 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V729 V728
0x7ff: V731 = 0x0
0x802: V732 = S[0x0]
0x803: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0x818: V734 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x819: V735 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V732
0x81a: V736 = 0x1
0x81c: V737 = 0xa0
0x81e: V738 = 0x2
0x820: V739 = EXP 0x2 0xa0
0x821: V740 = SUB 0x10000000000000000000000000000000000000000 0x1
0x825: V741 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x829: V742 = OR V741 V735
0x82b: S[0x0] = V742
0x82c: JUMP 0x136
---
Entry stack: [V11, 0x136, V270]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x82d
[0x82d:0x83f]
---
Predecessors: [0x309]
Successors: [0x840, 0x87d]
---
0x82d JUMPDEST
0x82e PUSH1 0x0
0x830 SLOAD
0x831 PUSH1 0x1
0x833 PUSH1 0xa0
0x835 PUSH1 0x2
0x837 EXP
0x838 SUB
0x839 AND
0x83a CALLER
0x83b EQ
0x83c PUSH2 0x87d
0x83f JUMPI
---
0x82d: JUMPDEST 
0x82e: V743 = 0x0
0x830: V744 = S[0x0]
0x831: V745 = 0x1
0x833: V746 = 0xa0
0x835: V747 = 0x2
0x837: V748 = EXP 0x2 0xa0
0x838: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x839: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0x83a: V751 = CALLER
0x83b: V752 = EQ V751 V750
0x83c: V753 = 0x87d
0x83f: JUMPI 0x87d V752
---
Entry stack: [V11, 0x136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136]

================================

Block 0x840
[0x840:0x87c]
---
Predecessors: [0x82d]
Successors: []
---
0x840 PUSH1 0x40
0x842 DUP1
0x843 MLOAD
0x844 PUSH1 0xe5
0x846 PUSH1 0x2
0x848 EXP
0x849 PUSH3 0x461bcd
0x84d MUL
0x84e DUP2
0x84f MSTORE
0x850 PUSH1 0x20
0x852 PUSH1 0x4
0x854 DUP3
0x855 ADD
0x856 MSTORE
0x857 PUSH1 0xa
0x859 PUSH1 0x24
0x85b DUP3
0x85c ADD
0x85d MSTORE
0x85e PUSH1 0x0
0x860 DUP1
0x861 MLOAD
0x862 PUSH1 0x20
0x864 PUSH2 0x8cd
0x867 DUP4
0x868 CODECOPY
0x869 DUP2
0x86a MLOAD
0x86b SWAP2
0x86c MSTORE
0x86d PUSH1 0x44
0x86f DUP3
0x870 ADD
0x871 MSTORE
0x872 SWAP1
0x873 MLOAD
0x874 SWAP1
0x875 DUP2
0x876 SWAP1
0x877 SUB
0x878 PUSH1 0x64
0x87a ADD
0x87b SWAP1
0x87c REVERT
---
0x840: V754 = 0x40
0x843: V755 = M[0x40]
0x844: V756 = 0xe5
0x846: V757 = 0x2
0x848: V758 = EXP 0x2 0xe5
0x849: V759 = 0x461bcd
0x84d: V760 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x84f: M[V755] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x850: V761 = 0x20
0x852: V762 = 0x4
0x855: V763 = ADD V755 0x4
0x856: M[V763] = 0x20
0x857: V764 = 0xa
0x859: V765 = 0x24
0x85c: V766 = ADD V755 0x24
0x85d: M[V766] = 0xa
0x85e: V767 = 0x0
0x861: V768 = M[0x0]
0x862: V769 = 0x20
0x864: V770 = 0x8cd
0x868: CODECOPY 0x0 0x8cd 0x20
0x86a: V771 = M[0x0]
0x86c: M[0x0] = V768
0x86d: V772 = 0x44
0x870: V773 = ADD V755 0x44
0x871: M[V773] = V771
0x873: V774 = M[0x40]
0x877: V775 = SUB V755 V774
0x878: V776 = 0x64
0x87a: V777 = ADD 0x64 V775
0x87c: REVERT V774 V777
---
Entry stack: [V11, 0x136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136]

================================

Block 0x87d
[0x87d:0x8ad]
---
Predecessors: [0x82d]
Successors: [0x50b, 0x8ae]
---
0x87d JUMPDEST
0x87e PUSH1 0x1
0x880 SLOAD
0x881 PUSH1 0x40
0x883 MLOAD
0x884 PUSH1 0x1
0x886 PUSH1 0xa0
0x888 PUSH1 0x2
0x88a EXP
0x88b SUB
0x88c SWAP1
0x88d SWAP2
0x88e AND
0x88f SWAP1
0x890 ADDRESS
0x891 BALANCE
0x892 DUP1
0x893 ISZERO
0x894 PUSH2 0x8fc
0x897 MUL
0x898 SWAP2
0x899 PUSH1 0x0
0x89b DUP2
0x89c DUP2
0x89d DUP2
0x89e DUP6
0x89f DUP9
0x8a0 DUP9
0x8a1 CALL
0x8a2 SWAP4
0x8a3 POP
0x8a4 POP
0x8a5 POP
0x8a6 POP
0x8a7 ISZERO
0x8a8 DUP1
0x8a9 ISZERO
0x8aa PUSH2 0x50b
0x8ad JUMPI
---
0x87d: JUMPDEST 
0x87e: V778 = 0x1
0x880: V779 = S[0x1]
0x881: V780 = 0x40
0x883: V781 = M[0x40]
0x884: V782 = 0x1
0x886: V783 = 0xa0
0x888: V784 = 0x2
0x88a: V785 = EXP 0x2 0xa0
0x88b: V786 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88e: V787 = AND V779 0xffffffffffffffffffffffffffffffffffffffff
0x890: V788 = ADDRESS
0x891: V789 = BALANCE V788
0x893: V790 = ISZERO V789
0x894: V791 = 0x8fc
0x897: V792 = MUL 0x8fc V790
0x899: V793 = 0x0
0x8a1: V794 = CALL V792 V787 V789 V781 0x0 V781 0x0
0x8a7: V795 = ISZERO V794
0x8a9: V796 = ISZERO V795
0x8aa: V797 = 0x50b
0x8ad: JUMPI 0x50b V796
---
Entry stack: [V11, 0x136]
Stack pops: 0
Stack additions: [V795]
Exit stack: [V11, 0x136, V795]

================================

Block 0x8ae
[0x8ae:0x8b6]
---
Predecessors: [0x87d]
Successors: []
---
0x8ae RETURNDATASIZE
0x8af PUSH1 0x0
0x8b1 DUP1
0x8b2 RETURNDATACOPY
0x8b3 RETURNDATASIZE
0x8b4 PUSH1 0x0
0x8b6 REVERT
---
0x8ae: V798 = RETURNDATASIZE
0x8af: V799 = 0x0
0x8b2: RETURNDATACOPY 0x0 0x0 V798
0x8b3: V800 = RETURNDATASIZE
0x8b4: V801 = 0x0
0x8b6: REVERT 0x0 V800
---
Entry stack: [V11, 0x136, V795]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V795]

================================

Block 0x8b7
[0x8b7:0x8cb]
---
Predecessors: [0x31e]
Successors: [0x333]
---
0x8b7 JUMPDEST
0x8b8 PUSH1 0x2
0x8ba PUSH1 0x20
0x8bc MSTORE
0x8bd PUSH1 0x0
0x8bf SWAP1
0x8c0 DUP2
0x8c1 MSTORE
0x8c2 PUSH1 0x40
0x8c4 SWAP1
0x8c5 SHA3
0x8c6 SLOAD
0x8c7 PUSH1 0xff
0x8c9 AND
0x8ca DUP2
0x8cb JUMP
---
0x8b7: JUMPDEST 
0x8b8: V802 = 0x2
0x8ba: V803 = 0x20
0x8bc: M[0x20] = 0x2
0x8bd: V804 = 0x0
0x8c1: M[0x0] = V290
0x8c2: V805 = 0x40
0x8c5: V806 = SHA3 0x0 0x40
0x8c6: V807 = S[V806]
0x8c7: V808 = 0xff
0x8c9: V809 = AND 0xff V807
0x8cb: JUMP 0x333
---
Entry stack: [V11, 0x333, V290]
Stack pops: 2
Stack additions: [S1, V809]
Exit stack: [V11, 0x333, V809]

================================

Block 0x8cc
[0x8cc:0x931]
---
Predecessors: []
Successors: []
---
0x8cc STOP
0x8cd MISSING 0x4f
0x8ce PUSH15 0x6c79206f776e657200000000000000
0x8de STOP
0x8df STOP
0x8e0 STOP
0x8e1 STOP
0x8e2 STOP
0x8e3 STOP
0x8e4 STOP
0x8e5 STOP
0x8e6 STOP
0x8e7 STOP
0x8e8 STOP
0x8e9 STOP
0x8ea STOP
0x8eb STOP
0x8ec STOP
0x8ed LOG1
0x8ee PUSH6 0x627a7a723058
0x8f5 SHA3
0x8f6 DUP15
0x8f7 DELEGATECALL
0x8f8 MISSING 0xfc
0x8f9 DIFFICULTY
0x8fa MISSING 0x2f
0x8fb PUSH19 0x18902139a97f076ec1436025663b6fe5d930ee
0x90f MISSING 0x4c
0x910 DUP6
0x911 MISSING 0xfb
0x912 MISSING 0xe7
0x913 PUSH30 0xdbc10029
---
0x8cc: STOP 
0x8cd: MISSING 0x4f
0x8ce: V810 = 0x6c79206f776e657200000000000000
0x8de: STOP 
0x8df: STOP 
0x8e0: STOP 
0x8e1: STOP 
0x8e2: STOP 
0x8e3: STOP 
0x8e4: STOP 
0x8e5: STOP 
0x8e6: STOP 
0x8e7: STOP 
0x8e8: STOP 
0x8e9: STOP 
0x8ea: STOP 
0x8eb: STOP 
0x8ec: STOP 
0x8ed: LOG S0 S1 S2
0x8ee: V811 = 0x627a7a723058
0x8f5: V812 = SHA3 0x627a7a723058 S3
0x8f7: V813 = DELEGATECALL S17 V812 S4 S5 S6 S7
0x8f8: MISSING 0xfc
0x8f9: V814 = DIFFICULTY
0x8fa: MISSING 0x2f
0x8fb: V815 = 0x18902139a97f076ec1436025663b6fe5d930ee
0x90f: MISSING 0x4c
0x911: MISSING 0xfb
0x912: MISSING 0xe7
0x913: V816 = 0xdbc10029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6c79206f776e657200000000000000, V813, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V814, 0x18902139a97f076ec1436025663b6fe5d930ee, S5, S0, S1, S2, S3, S4, S5, 0xdbc10029]
Exit stack: []

================================

Function 0:
Public function signature: 0x19dad680
Entry block: 0x121
Exit block: 0x136
Body: 0x121, 0x129, 0x12d, 0x136, 0x347, 0x360, 0x364, 0x36b, 0x3ba

Function 1:
Public function signature: 0x1c31f710
Entry block: 0x138
Exit block: 0x136
Body: 0x136, 0x138, 0x140, 0x144, 0x3c9, 0x3dc, 0x419

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x159
Exit block: 0x16e
Body: 0x159, 0x161, 0x165, 0x16e, 0x448

Function 3:
Public function signature: 0x51320bed
Entry block: 0x18a
Exit block: 0x136
Body: 0x136, 0x18a, 0x192, 0x196, 0x457

Function 4:
Public function signature: 0x5541315b
Entry block: 0x1c6
Exit block: 0x136
Body: 0x136, 0x1c6, 0x1ce, 0x1d2, 0x457, 0x45e, 0x477, 0x486, 0x48d, 0x491, 0x4f3, 0x4f7, 0x502

Function 5:
Public function signature: 0x67c3b1b9
Entry block: 0x1de
Exit block: 0x136
Body: 0x136, 0x1de, 0x1e6, 0x1ea, 0x50b

Function 6:
Public function signature: 0x6c0db7e3
Entry block: 0x1f6
Exit block: 0x136
Body: 0x136, 0x1f6, 0x1fe, 0x202, 0x50e

Function 7:
Public function signature: 0x835fc6ca
Entry block: 0x215
Exit block: 0x136
Body: 0x136, 0x215, 0x21d, 0x221, 0x50e, 0x512, 0x525, 0x562, 0x56c, 0x5bb, 0x5ec

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x22d
Exit block: 0x16e
Body: 0x16e, 0x22d, 0x235, 0x239, 0x5f5

Function 9:
Public function signature: 0x96799760
Entry block: 0x242
Exit block: 0x136
Body: 0x136, 0x242, 0x24a, 0x24e, 0x604, 0x617, 0x654

Function 10:
Public function signature: 0xadea7a6a
Entry block: 0x263
Exit block: 0x16e
Body: 0x16e, 0x263, 0x26b, 0x26f, 0x675

Function 11:
Public function signature: 0xd0ebdbe7
Entry block: 0x27f
Exit block: 0x136
Body: 0x136, 0x27f, 0x287, 0x28b, 0x67b, 0x68e, 0x6cb

Function 12:
Public function signature: 0xdceb45e0
Entry block: 0x2a0
Exit block: 0x136
Body: 0x136, 0x2a0, 0x2a8, 0x2ac, 0x457

Function 13:
Public function signature: 0xf2fde38b
Entry block: 0x2dc
Exit block: 0x136
Body: 0x136, 0x2dc, 0x2e4, 0x2e8, 0x6ef, 0x702, 0x73f, 0x750, 0x7c5

Function 14:
Public function signature: 0xf44b79b3
Entry block: 0x2fd
Exit block: 0x136
Body: 0x136, 0x2fd, 0x305, 0x309, 0x50b, 0x82d, 0x840, 0x87d, 0x8ae

Function 15:
Public function signature: 0xfdff9b4d
Entry block: 0x312
Exit block: 0x333
Body: 0x312, 0x31a, 0x31e, 0x333, 0x8b7

Function 16:
Public fallback function
Entry block: 0xe5
Exit block: 0x115
Body: 0xe5, 0x115, 0x11e

