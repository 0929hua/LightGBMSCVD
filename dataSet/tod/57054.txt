Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x114]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0xdbe671f
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x114
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xdbe671f
0x39: V12 = EQ V10 0xdbe671f
0x3a: V13 = 0x114
0x3d: JUMPI 0x114 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x140]
---
0x3e DUP1
0x3f PUSH4 0x2c4e722e
0x44 EQ
0x45 PUSH2 0x140
0x48 JUMPI
---
0x3f: V14 = 0x2c4e722e
0x44: V15 = EQ 0x2c4e722e V10
0x45: V16 = 0x140
0x48: JUMPI 0x140 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x162]
---
0x49 DUP1
0x4a PUSH4 0x41c0e1b5
0x4f EQ
0x50 PUSH2 0x162
0x53 JUMPI
---
0x4a: V17 = 0x41c0e1b5
0x4f: V18 = EQ 0x41c0e1b5 V10
0x50: V19 = 0x162
0x53: JUMPI 0x162 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x174]
---
0x54 DUP1
0x55 PUSH4 0x4bfc4782
0x5a EQ
0x5b PUSH2 0x174
0x5e JUMPI
---
0x55: V20 = 0x4bfc4782
0x5a: V21 = EQ 0x4bfc4782 V10
0x5b: V22 = 0x174
0x5e: JUMPI 0x174 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x192]
---
0x5f DUP1
0x60 PUSH4 0x4df7e3d0
0x65 EQ
0x66 PUSH2 0x192
0x69 JUMPI
---
0x60: V23 = 0x4df7e3d0
0x65: V24 = EQ 0x4df7e3d0 V10
0x66: V25 = 0x192
0x69: JUMPI 0x192 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x1be]
---
0x6a DUP1
0x6b PUSH4 0xaa54e040
0x70 EQ
0x71 PUSH2 0x1be
0x74 JUMPI
---
0x6b: V26 = 0xaa54e040
0x70: V27 = EQ 0xaa54e040 V10
0x71: V28 = 0x1be
0x74: JUMPI 0x1be V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1d3]
---
0x75 DUP1
0x76 PUSH4 0xe5225381
0x7b EQ
0x7c PUSH2 0x1d3
0x7f JUMPI
---
0x76: V29 = 0xe5225381
0x7b: V30 = EQ 0xe5225381 V10
0x7c: V31 = 0x1d3
0x7f: JUMPI 0x1d3 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1e5]
---
0x80 DUP1
0x81 PUSH4 0xfca2452b
0x86 EQ
0x87 PUSH2 0x1e5
0x8a JUMPI
---
0x81: V32 = 0xfca2452b
0x86: V33 = EQ 0xfca2452b V10
0x87: V34 = 0x1e5
0x8a: JUMPI 0x1e5 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x0, 0x80]
Successors: [0x8f]
---
0x8b JUMPDEST
0x8c PUSH2 0x112
---
0x8b: JUMPDEST 
0x8c: V35 = 0x112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x112]
Exit stack: [V10, 0x112]

================================

Block 0x8f
[0x8f:0xaa]
---
Predecessors: [0x8b]
Successors: [0xab]
---
0x8f JUMPDEST
0x90 PUSH1 0x0
0x92 SLOAD
0x93 PUSH1 0x2
0x95 SLOAD
0x96 PUSH1 0x1
0x98 PUSH1 0xa0
0x9a PUSH1 0x2
0x9c EXP
0x9d SUB
0x9e SWAP1
0x9f SWAP2
0xa0 AND
0xa1 SWAP1
0xa2 PUSH2 0x8fc
0xa5 SWAP1
0xa6 PUSH1 0x64
0xa8 SWAP1
0xa9 CALLVALUE
0xaa MUL
---
0x8f: JUMPDEST 
0x90: V36 = 0x0
0x92: V37 = S[0x0]
0x93: V38 = 0x2
0x95: V39 = S[0x2]
0x96: V40 = 0x1
0x98: V41 = 0xa0
0x9a: V42 = 0x2
0x9c: V43 = EXP 0x2 0xa0
0x9d: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V45 = AND V37 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V46 = 0x8fc
0xa6: V47 = 0x64
0xa9: V48 = CALLVALUE
0xaa: V49 = MUL V48 V39
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: [V45, 0x8fc, 0x64, V49]
Exit stack: [V10, 0x112, V45, 0x8fc, 0x64, V49]

================================

Block 0xab
[0xab:0xcc]
---
Predecessors: [0x8f]
Successors: [0xcd, 0xce]
---
0xab JUMPDEST
0xac PUSH1 0x40
0xae MLOAD
0xaf SWAP2
0xb0 SWAP1
0xb1 DIV
0xb2 DUP1
0xb3 ISZERO
0xb4 SWAP1
0xb5 SWAP3
0xb6 MUL
0xb7 SWAP2
0xb8 SWAP1
0xb9 PUSH1 0x0
0xbb DUP2
0xbc DUP2
0xbd DUP2
0xbe DUP6
0xbf DUP9
0xc0 DUP9
0xc1 CALL
0xc2 SWAP4
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 ISZERO
0xc8 ISZERO
0xc9 PUSH2 0xce
0xcc JUMPI
---
0xab: JUMPDEST 
0xac: V50 = 0x40
0xae: V51 = M[0x40]
0xb1: V52 = DIV V49 0x64
0xb3: V53 = ISZERO V52
0xb6: V54 = MUL 0x8fc V53
0xb9: V55 = 0x0
0xc1: V56 = CALL V54 V45 V52 V51 0x0 V51 0x0
0xc7: V57 = ISZERO V56
0xc8: V58 = ISZERO V57
0xc9: V59 = 0xce
0xcc: JUMPI 0xce V58
---
Entry stack: [V10, 0x112, V45, 0x8fc, 0x64, V49]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0xcd
[0xcd:0xcd]
---
Predecessors: [0xab]
Successors: []
---
0xcd INVALID
---
0xcd: INVALID 
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0xce
[0xce:0xeb]
---
Predecessors: [0xab]
Successors: [0xec]
---
0xce JUMPDEST
0xcf PUSH1 0x1
0xd1 SLOAD
0xd2 PUSH1 0x2
0xd4 SLOAD
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde SWAP2
0xdf AND
0xe0 SWAP1
0xe1 PUSH2 0x8fc
0xe4 SWAP1
0xe5 PUSH1 0x64
0xe7 SWAP1
0xe8 DUP2
0xe9 SUB
0xea CALLVALUE
0xeb MUL
---
0xce: JUMPDEST 
0xcf: V60 = 0x1
0xd1: V61 = S[0x1]
0xd2: V62 = 0x2
0xd4: V63 = S[0x2]
0xd5: V64 = 0x1
0xd7: V65 = 0xa0
0xd9: V66 = 0x2
0xdb: V67 = EXP 0x2 0xa0
0xdc: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V69 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V70 = 0x8fc
0xe5: V71 = 0x64
0xe9: V72 = SUB 0x64 V63
0xea: V73 = CALLVALUE
0xeb: V74 = MUL V73 V72
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: [V69, 0x8fc, 0x64, V74]
Exit stack: [V10, 0x112, V69, 0x8fc, 0x64, V74]

================================

Block 0xec
[0xec:0x10d]
---
Predecessors: [0xce]
Successors: [0x10e, 0x10f]
---
0xec JUMPDEST
0xed PUSH1 0x40
0xef MLOAD
0xf0 SWAP2
0xf1 SWAP1
0xf2 DIV
0xf3 DUP1
0xf4 ISZERO
0xf5 SWAP1
0xf6 SWAP3
0xf7 MUL
0xf8 SWAP2
0xf9 SWAP1
0xfa PUSH1 0x0
0xfc DUP2
0xfd DUP2
0xfe DUP2
0xff DUP6
0x100 DUP9
0x101 DUP9
0x102 CALL
0x103 SWAP4
0x104 POP
0x105 POP
0x106 POP
0x107 POP
0x108 ISZERO
0x109 ISZERO
0x10a PUSH2 0x10f
0x10d JUMPI
---
0xec: JUMPDEST 
0xed: V75 = 0x40
0xef: V76 = M[0x40]
0xf2: V77 = DIV V74 0x64
0xf4: V78 = ISZERO V77
0xf7: V79 = MUL 0x8fc V78
0xfa: V80 = 0x0
0x102: V81 = CALL V79 V69 V77 V76 0x0 V76 0x0
0x108: V82 = ISZERO V81
0x109: V83 = ISZERO V82
0x10a: V84 = 0x10f
0x10d: JUMPI 0x10f V83
---
Entry stack: [V10, 0x112, V69, 0x8fc, 0x64, V74]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x10e
[0x10e:0x10e]
---
Predecessors: [0xec]
Successors: []
---
0x10e INVALID
---
0x10e: INVALID 
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x10f
[0x10f:0x10f]
---
Predecessors: [0xec, 0x34d]
Successors: [0x110]
---
0x10f JUMPDEST
---
0x10f: JUMPDEST 
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x110
[0x110:0x111]
---
Predecessors: [0x10f]
Successors: [0x112]
---
0x110 JUMPDEST
0x111 JUMP
---
0x110: JUMPDEST 
0x111: JUMP 0x112
---
Entry stack: [V10, 0x112]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x112
[0x112:0x113]
---
Predecessors: [0x110, 0x2c1, 0x312, 0x3e4]
Successors: []
---
0x112 JUMPDEST
0x113 STOP
---
0x112: JUMPDEST 
0x113: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0xb]
Successors: [0x11b, 0x11c]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11c
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V85 = CALLVALUE
0x116: V86 = ISZERO V85
0x117: V87 = 0x11c
0x11a: JUMPI 0x11c V86
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11b
[0x11b:0x11b]
---
Predecessors: [0x114]
Successors: []
---
0x11b INVALID
---
0x11b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x123]
---
Predecessors: [0x114]
Successors: [0x203]
---
0x11c JUMPDEST
0x11d PUSH2 0x124
0x120 PUSH2 0x203
0x123 JUMP
---
0x11c: JUMPDEST 
0x11d: V88 = 0x124
0x120: V89 = 0x203
0x123: JUMP 0x203
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V10, 0x124]

================================

Block 0x124
[0x124:0x13f]
---
Predecessors: [0x203, 0x2c4]
Successors: []
---
0x124 JUMPDEST
0x125 PUSH1 0x40
0x127 DUP1
0x128 MLOAD
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 SWAP1
0x132 SWAP3
0x133 AND
0x134 DUP3
0x135 MSTORE
0x136 MLOAD
0x137 SWAP1
0x138 DUP2
0x139 SWAP1
0x13a SUB
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP1
0x13f RETURN
---
0x124: JUMPDEST 
0x125: V90 = 0x40
0x128: V91 = M[0x40]
0x129: V92 = 0x1
0x12b: V93 = 0xa0
0x12d: V94 = 0x2
0x12f: V95 = EXP 0x2 0xa0
0x130: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133: V97 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x135: M[V91] = V97
0x136: V98 = M[0x40]
0x13a: V99 = SUB V91 V98
0x13b: V100 = 0x20
0x13d: V101 = ADD 0x20 V99
0x13f: RETURN V98 V101
---
Entry stack: [V10, 0x124, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x124]

================================

Block 0x140
[0x140:0x146]
---
Predecessors: [0x3e]
Successors: [0x147, 0x148]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 ISZERO
0x143 PUSH2 0x148
0x146 JUMPI
---
0x140: JUMPDEST 
0x141: V102 = CALLVALUE
0x142: V103 = ISZERO V102
0x143: V104 = 0x148
0x146: JUMPI 0x148 V103
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x147
[0x147:0x147]
---
Predecessors: [0x140]
Successors: []
---
0x147 INVALID
---
0x147: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x140]
Successors: [0x212]
---
0x148 JUMPDEST
0x149 PUSH2 0x150
0x14c PUSH2 0x212
0x14f JUMP
---
0x148: JUMPDEST 
0x149: V105 = 0x150
0x14c: V106 = 0x212
0x14f: JUMP 0x212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V10, 0x150]

================================

Block 0x150
[0x150:0x161]
---
Predecessors: [0x212]
Successors: []
---
0x150 JUMPDEST
0x151 PUSH1 0x40
0x153 DUP1
0x154 MLOAD
0x155 SWAP2
0x156 DUP3
0x157 MSTORE
0x158 MLOAD
0x159 SWAP1
0x15a DUP2
0x15b SWAP1
0x15c SUB
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP1
0x161 RETURN
---
0x150: JUMPDEST 
0x151: V107 = 0x40
0x154: V108 = M[0x40]
0x157: M[V108] = V182
0x158: V109 = M[0x40]
0x15c: V110 = SUB V108 V109
0x15d: V111 = 0x20
0x15f: V112 = ADD 0x20 V110
0x161: RETURN V109 V112
---
Entry stack: [V10, 0x150, V182]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x150]

================================

Block 0x162
[0x162:0x168]
---
Predecessors: [0x49]
Successors: [0x169, 0x16a]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x16a
0x168 JUMPI
---
0x162: JUMPDEST 
0x163: V113 = CALLVALUE
0x164: V114 = ISZERO V113
0x165: V115 = 0x16a
0x168: JUMPI 0x16a V114
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x169
[0x169:0x169]
---
Predecessors: [0x162]
Successors: []
---
0x169 INVALID
---
0x169: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x162]
Successors: [0x218]
---
0x16a JUMPDEST
0x16b PUSH2 0x112
0x16e PUSH2 0x218
0x171 JUMP
---
0x16a: JUMPDEST 
0x16b: V116 = 0x112
0x16e: V117 = 0x218
0x171: JUMP 0x218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x112]
Exit stack: [V10, 0x112]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: []
Successors: []
---
0x172 JUMPDEST
0x173 STOP
---
0x172: JUMPDEST 
0x173: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x174
[0x174:0x17a]
---
Predecessors: [0x54]
Successors: [0x17b, 0x17c]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 ISZERO
0x177 PUSH2 0x17c
0x17a JUMPI
---
0x174: JUMPDEST 
0x175: V118 = CALLVALUE
0x176: V119 = ISZERO V118
0x177: V120 = 0x17c
0x17a: JUMPI 0x17c V119
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17b
[0x17b:0x17b]
---
Predecessors: [0x174]
Successors: []
---
0x17b INVALID
---
0x17b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17c
[0x17c:0x18f]
---
Predecessors: [0x174]
Successors: [0x25f]
---
0x17c JUMPDEST
0x17d PUSH2 0x112
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 PUSH1 0x4
0x18a CALLDATALOAD
0x18b AND
0x18c PUSH2 0x25f
0x18f JUMP
---
0x17c: JUMPDEST 
0x17d: V121 = 0x112
0x180: V122 = 0x1
0x182: V123 = 0xa0
0x184: V124 = 0x2
0x186: V125 = EXP 0x2 0xa0
0x187: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x188: V127 = 0x4
0x18a: V128 = CALLDATALOAD 0x4
0x18b: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V130 = 0x25f
0x18f: JUMP 0x25f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x112, V129]
Exit stack: [V10, 0x112, V129]

================================

Block 0x190
[0x190:0x191]
---
Predecessors: []
Successors: []
---
0x190 JUMPDEST
0x191 STOP
---
0x190: JUMPDEST 
0x191: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0x5f]
Successors: [0x199, 0x19a]
---
0x192 JUMPDEST
0x193 CALLVALUE
0x194 ISZERO
0x195 PUSH2 0x19a
0x198 JUMPI
---
0x192: JUMPDEST 
0x193: V131 = CALLVALUE
0x194: V132 = ISZERO V131
0x195: V133 = 0x19a
0x198: JUMPI 0x19a V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x199
[0x199:0x199]
---
Predecessors: [0x192]
Successors: []
---
0x199 INVALID
---
0x199: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x192]
Successors: [0x2c4]
---
0x19a JUMPDEST
0x19b PUSH2 0x124
0x19e PUSH2 0x2c4
0x1a1 JUMP
---
0x19a: JUMPDEST 
0x19b: V134 = 0x124
0x19e: V135 = 0x2c4
0x1a1: JUMP 0x2c4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V10, 0x124]

================================

Block 0x1a2
[0x1a2:0x1bd]
---
Predecessors: []
Successors: []
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x40
0x1a5 DUP1
0x1a6 MLOAD
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af SWAP1
0x1b0 SWAP3
0x1b1 AND
0x1b2 DUP3
0x1b3 MSTORE
0x1b4 MLOAD
0x1b5 SWAP1
0x1b6 DUP2
0x1b7 SWAP1
0x1b8 SUB
0x1b9 PUSH1 0x20
0x1bb ADD
0x1bc SWAP1
0x1bd RETURN
---
0x1a2: JUMPDEST 
0x1a3: V136 = 0x40
0x1a6: V137 = M[0x40]
0x1a7: V138 = 0x1
0x1a9: V139 = 0xa0
0x1ab: V140 = 0x2
0x1ad: V141 = EXP 0x2 0xa0
0x1ae: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V143 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: M[V137] = V143
0x1b4: V144 = M[0x40]
0x1b8: V145 = SUB V137 V144
0x1b9: V146 = 0x20
0x1bb: V147 = ADD 0x20 V145
0x1bd: RETURN V144 V147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1be
[0x1be:0x1c4]
---
Predecessors: [0x6a]
Successors: [0x1c5, 0x1c6]
---
0x1be JUMPDEST
0x1bf CALLVALUE
0x1c0 ISZERO
0x1c1 PUSH2 0x1c6
0x1c4 JUMPI
---
0x1be: JUMPDEST 
0x1bf: V148 = CALLVALUE
0x1c0: V149 = ISZERO V148
0x1c1: V150 = 0x1c6
0x1c4: JUMPI 0x1c6 V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c5
[0x1c5:0x1c5]
---
Predecessors: [0x1be]
Successors: []
---
0x1c5 INVALID
---
0x1c5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c6
[0x1c6:0x1d0]
---
Predecessors: [0x1be]
Successors: [0x2d3]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0x112
0x1ca PUSH1 0x4
0x1cc CALLDATALOAD
0x1cd PUSH2 0x2d3
0x1d0 JUMP
---
0x1c6: JUMPDEST 
0x1c7: V151 = 0x112
0x1ca: V152 = 0x4
0x1cc: V153 = CALLDATALOAD 0x4
0x1cd: V154 = 0x2d3
0x1d0: JUMP 0x2d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x112, V153]
Exit stack: [V10, 0x112, V153]

================================

Block 0x1d1
[0x1d1:0x1d2]
---
Predecessors: []
Successors: []
---
0x1d1 JUMPDEST
0x1d2 STOP
---
0x1d1: JUMPDEST 
0x1d2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d3
[0x1d3:0x1d9]
---
Predecessors: [0x75]
Successors: [0x1da, 0x1db]
---
0x1d3 JUMPDEST
0x1d4 CALLVALUE
0x1d5 ISZERO
0x1d6 PUSH2 0x1db
0x1d9 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V155 = CALLVALUE
0x1d5: V156 = ISZERO V155
0x1d6: V157 = 0x1db
0x1d9: JUMPI 0x1db V156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x1da]
---
Predecessors: [0x1d3]
Successors: []
---
0x1da INVALID
---
0x1da: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x1d3]
Successors: [0x315]
---
0x1db JUMPDEST
0x1dc PUSH2 0x112
0x1df PUSH2 0x315
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V158 = 0x112
0x1df: V159 = 0x315
0x1e2: JUMP 0x315
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x112]
Exit stack: [V10, 0x112]

================================

Block 0x1e3
[0x1e3:0x1e4]
---
Predecessors: []
Successors: []
---
0x1e3 JUMPDEST
0x1e4 STOP
---
0x1e3: JUMPDEST 
0x1e4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e5
[0x1e5:0x1eb]
---
Predecessors: [0x80]
Successors: [0x1ec, 0x1ed]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 ISZERO
0x1e8 PUSH2 0x1ed
0x1eb JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V160 = CALLVALUE
0x1e7: V161 = ISZERO V160
0x1e8: V162 = 0x1ed
0x1eb: JUMPI 0x1ed V161
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ec
[0x1ec:0x1ec]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ec INVALID
---
0x1ec: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ed
[0x1ed:0x200]
---
Predecessors: [0x1e5]
Successors: [0x382]
---
0x1ed JUMPDEST
0x1ee PUSH2 0x112
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 PUSH1 0x4
0x1fb CALLDATALOAD
0x1fc AND
0x1fd PUSH2 0x382
0x200 JUMP
---
0x1ed: JUMPDEST 
0x1ee: V163 = 0x112
0x1f1: V164 = 0x1
0x1f3: V165 = 0xa0
0x1f5: V166 = 0x2
0x1f7: V167 = EXP 0x2 0xa0
0x1f8: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V169 = 0x4
0x1fb: V170 = CALLDATALOAD 0x4
0x1fc: V171 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V172 = 0x382
0x200: JUMP 0x382
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x112, V171]
Exit stack: [V10, 0x112, V171]

================================

Block 0x201
[0x201:0x202]
---
Predecessors: []
Successors: []
---
0x201 JUMPDEST
0x202 STOP
---
0x201: JUMPDEST 
0x202: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x203
[0x203:0x211]
---
Predecessors: [0x11c]
Successors: [0x124]
---
0x203 JUMPDEST
0x204 PUSH1 0x0
0x206 SLOAD
0x207 PUSH1 0x1
0x209 PUSH1 0xa0
0x20b PUSH1 0x2
0x20d EXP
0x20e SUB
0x20f AND
0x210 DUP2
0x211 JUMP
---
0x203: JUMPDEST 
0x204: V173 = 0x0
0x206: V174 = S[0x0]
0x207: V175 = 0x1
0x209: V176 = 0xa0
0x20b: V177 = 0x2
0x20d: V178 = EXP 0x2 0xa0
0x20e: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20f: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x211: JUMP 0x124
---
Entry stack: [V10, 0x124]
Stack pops: 1
Stack additions: [S0, V180]
Exit stack: [V10, 0x124, V180]

================================

Block 0x212
[0x212:0x217]
---
Predecessors: [0x148]
Successors: [0x150]
---
0x212 JUMPDEST
0x213 PUSH1 0x2
0x215 SLOAD
0x216 DUP2
0x217 JUMP
---
0x212: JUMPDEST 
0x213: V181 = 0x2
0x215: V182 = S[0x2]
0x217: JUMP 0x150
---
Entry stack: [V10, 0x150]
Stack pops: 1
Stack additions: [S0, V182]
Exit stack: [V10, 0x150, V182]

================================

Block 0x218
[0x218:0x230]
---
Predecessors: [0x16a]
Successors: [0x231, 0x245]
---
0x218 JUMPDEST
0x219 PUSH1 0x0
0x21b SLOAD
0x21c CALLER
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 SWAP1
0x226 DUP2
0x227 AND
0x228 SWAP2
0x229 AND
0x22a EQ
0x22b ISZERO
0x22c DUP1
0x22d PUSH2 0x245
0x230 JUMPI
---
0x218: JUMPDEST 
0x219: V183 = 0x0
0x21b: V184 = S[0x0]
0x21c: V185 = CALLER
0x21d: V186 = 0x1
0x21f: V187 = 0xa0
0x221: V188 = 0x2
0x223: V189 = EXP 0x2 0xa0
0x224: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x229: V192 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V193 = EQ V192 V191
0x22b: V194 = ISZERO V193
0x22d: V195 = 0x245
0x230: JUMPI 0x245 V194
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: [V194]
Exit stack: [V10, 0x112, V194]

================================

Block 0x231
[0x231:0x244]
---
Predecessors: [0x218]
Successors: [0x245]
---
0x231 POP
0x232 PUSH1 0x1
0x234 SLOAD
0x235 CALLER
0x236 PUSH1 0x1
0x238 PUSH1 0xa0
0x23a PUSH1 0x2
0x23c EXP
0x23d SUB
0x23e SWAP1
0x23f DUP2
0x240 AND
0x241 SWAP2
0x242 AND
0x243 EQ
0x244 ISZERO
---
0x232: V196 = 0x1
0x234: V197 = S[0x1]
0x235: V198 = CALLER
0x236: V199 = 0x1
0x238: V200 = 0xa0
0x23a: V201 = 0x2
0x23c: V202 = EXP 0x2 0xa0
0x23d: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x240: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x242: V205 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x243: V206 = EQ V205 V204
0x244: V207 = ISZERO V206
---
Entry stack: [V10, 0x112, V194]
Stack pops: 1
Stack additions: [V207]
Exit stack: [V10, 0x112, V207]

================================

Block 0x245
[0x245:0x24a]
---
Predecessors: [0x218, 0x231]
Successors: [0x24b, 0x250]
---
0x245 JUMPDEST
0x246 ISZERO
0x247 PUSH2 0x250
0x24a JUMPI
---
0x245: JUMPDEST 
0x246: V208 = ISZERO S0
0x247: V209 = 0x250
0x24a: JUMPI 0x250 V208
---
Entry stack: [V10, 0x112, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x24b
[0x24b:0x24f]
---
Predecessors: [0x245]
Successors: []
---
0x24b PUSH1 0x0
0x24d PUSH1 0x0
0x24f REVERT
---
0x24b: V210 = 0x0
0x24d: V211 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x250
[0x250:0x25b]
---
Predecessors: [0x245]
Successors: []
---
0x250 JUMPDEST
0x251 CALLER
0x252 PUSH1 0x1
0x254 PUSH1 0xa0
0x256 PUSH1 0x2
0x258 EXP
0x259 SUB
0x25a AND
0x25b SELFDESTRUCT
---
0x250: JUMPDEST 
0x251: V212 = CALLER
0x252: V213 = 0x1
0x254: V214 = 0xa0
0x256: V215 = 0x2
0x258: V216 = EXP 0x2 0xa0
0x259: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25a: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x25b: SELFDESTRUCT V218
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x25c
[0x25c:0x25c]
---
Predecessors: []
Successors: [0x25d]
---
0x25c JUMPDEST
---
0x25c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x25d
[0x25d:0x25e]
---
Predecessors: [0x25c]
Successors: []
Has unresolved jump.
---
0x25d JUMPDEST
0x25e JUMP
---
0x25d: JUMPDEST 
0x25e: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25f
[0x25f:0x277]
---
Predecessors: [0x17c]
Successors: [0x278, 0x28c]
---
0x25f JUMPDEST
0x260 PUSH1 0x0
0x262 SLOAD
0x263 CALLER
0x264 PUSH1 0x1
0x266 PUSH1 0xa0
0x268 PUSH1 0x2
0x26a EXP
0x26b SUB
0x26c SWAP1
0x26d DUP2
0x26e AND
0x26f SWAP2
0x270 AND
0x271 EQ
0x272 ISZERO
0x273 DUP1
0x274 PUSH2 0x28c
0x277 JUMPI
---
0x25f: JUMPDEST 
0x260: V219 = 0x0
0x262: V220 = S[0x0]
0x263: V221 = CALLER
0x264: V222 = 0x1
0x266: V223 = 0xa0
0x268: V224 = 0x2
0x26a: V225 = EXP 0x2 0xa0
0x26b: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26e: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x270: V228 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x271: V229 = EQ V228 V227
0x272: V230 = ISZERO V229
0x274: V231 = 0x28c
0x277: JUMPI 0x28c V230
---
Entry stack: [V10, 0x112, V129]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V10, 0x112, V129, V230]

================================

Block 0x278
[0x278:0x28b]
---
Predecessors: [0x25f]
Successors: [0x28c]
---
0x278 POP
0x279 PUSH1 0x1
0x27b SLOAD
0x27c CALLER
0x27d PUSH1 0x1
0x27f PUSH1 0xa0
0x281 PUSH1 0x2
0x283 EXP
0x284 SUB
0x285 SWAP1
0x286 DUP2
0x287 AND
0x288 SWAP2
0x289 AND
0x28a EQ
0x28b ISZERO
---
0x279: V232 = 0x1
0x27b: V233 = S[0x1]
0x27c: V234 = CALLER
0x27d: V235 = 0x1
0x27f: V236 = 0xa0
0x281: V237 = 0x2
0x283: V238 = EXP 0x2 0xa0
0x284: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x287: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x289: V241 = AND V233 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V242 = EQ V241 V240
0x28b: V243 = ISZERO V242
---
Entry stack: [V10, 0x112, V129, V230]
Stack pops: 1
Stack additions: [V243]
Exit stack: [V10, 0x112, V129, V243]

================================

Block 0x28c
[0x28c:0x291]
---
Predecessors: [0x25f, 0x278]
Successors: [0x292, 0x297]
---
0x28c JUMPDEST
0x28d ISZERO
0x28e PUSH2 0x297
0x291 JUMPI
---
0x28c: JUMPDEST 
0x28d: V244 = ISZERO S0
0x28e: V245 = 0x297
0x291: JUMPI 0x297 V244
---
Entry stack: [V10, 0x112, V129, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x112, V129]

================================

Block 0x292
[0x292:0x296]
---
Predecessors: [0x28c]
Successors: []
---
0x292 PUSH1 0x0
0x294 PUSH1 0x0
0x296 REVERT
---
0x292: V246 = 0x0
0x294: V247 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V10, 0x112, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112, V129]

================================

Block 0x297
[0x297:0x2bf]
---
Predecessors: [0x28c]
Successors: [0x2c0]
---
0x297 JUMPDEST
0x298 PUSH1 0x0
0x29a DUP1
0x29b SLOAD
0x29c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b1 NOT
0x2b2 AND
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb DUP4
0x2bc AND
0x2bd OR
0x2be SWAP1
0x2bf SSTORE
---
0x297: JUMPDEST 
0x298: V248 = 0x0
0x29b: V249 = S[0x0]
0x29c: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V251 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V252 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V249
0x2b3: V253 = 0x1
0x2b5: V254 = 0xa0
0x2b7: V255 = 0x2
0x2b9: V256 = EXP 0x2 0xa0
0x2ba: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bc: V258 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V259 = OR V258 V252
0x2bf: S[0x0] = V259
---
Entry stack: [V10, 0x112, V129]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x112, V129]

================================

Block 0x2c0
[0x2c0:0x2c0]
---
Predecessors: [0x297]
Successors: [0x2c1]
---
0x2c0 JUMPDEST
---
0x2c0: JUMPDEST 
---
Entry stack: [V10, 0x112, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112, V129]

================================

Block 0x2c1
[0x2c1:0x2c3]
---
Predecessors: [0x2c0]
Successors: [0x112]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 JUMP
---
0x2c1: JUMPDEST 
0x2c3: JUMP 0x112
---
Entry stack: [V10, 0x112, V129]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c4
[0x2c4:0x2d2]
---
Predecessors: [0x19a]
Successors: [0x124]
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x1
0x2c7 SLOAD
0x2c8 PUSH1 0x1
0x2ca PUSH1 0xa0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf SUB
0x2d0 AND
0x2d1 DUP2
0x2d2 JUMP
---
0x2c4: JUMPDEST 
0x2c5: V260 = 0x1
0x2c7: V261 = S[0x1]
0x2c8: V262 = 0x1
0x2ca: V263 = 0xa0
0x2cc: V264 = 0x2
0x2ce: V265 = EXP 0x2 0xa0
0x2cf: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x2d2: JUMP 0x124
---
Entry stack: [V10, 0x124]
Stack pops: 1
Stack additions: [S0, V267]
Exit stack: [V10, 0x124, V267]

================================

Block 0x2d3
[0x2d3:0x2eb]
---
Predecessors: [0x1c6]
Successors: [0x2ec, 0x300]
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x0
0x2d6 SLOAD
0x2d7 CALLER
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 SWAP1
0x2e1 DUP2
0x2e2 AND
0x2e3 SWAP2
0x2e4 AND
0x2e5 EQ
0x2e6 ISZERO
0x2e7 DUP1
0x2e8 PUSH2 0x300
0x2eb JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V268 = 0x0
0x2d6: V269 = S[0x0]
0x2d7: V270 = CALLER
0x2d8: V271 = 0x1
0x2da: V272 = 0xa0
0x2dc: V273 = 0x2
0x2de: V274 = EXP 0x2 0xa0
0x2df: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e2: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x2e4: V277 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V278 = EQ V277 V276
0x2e6: V279 = ISZERO V278
0x2e8: V280 = 0x300
0x2eb: JUMPI 0x300 V279
---
Entry stack: [V10, 0x112, V153]
Stack pops: 0
Stack additions: [V279]
Exit stack: [V10, 0x112, V153, V279]

================================

Block 0x2ec
[0x2ec:0x2ff]
---
Predecessors: [0x2d3]
Successors: [0x300]
---
0x2ec POP
0x2ed PUSH1 0x1
0x2ef SLOAD
0x2f0 CALLER
0x2f1 PUSH1 0x1
0x2f3 PUSH1 0xa0
0x2f5 PUSH1 0x2
0x2f7 EXP
0x2f8 SUB
0x2f9 SWAP1
0x2fa DUP2
0x2fb AND
0x2fc SWAP2
0x2fd AND
0x2fe EQ
0x2ff ISZERO
---
0x2ed: V281 = 0x1
0x2ef: V282 = S[0x1]
0x2f0: V283 = CALLER
0x2f1: V284 = 0x1
0x2f3: V285 = 0xa0
0x2f5: V286 = 0x2
0x2f7: V287 = EXP 0x2 0xa0
0x2f8: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fb: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x2fd: V290 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V291 = EQ V290 V289
0x2ff: V292 = ISZERO V291
---
Entry stack: [V10, 0x112, V153, V279]
Stack pops: 1
Stack additions: [V292]
Exit stack: [V10, 0x112, V153, V292]

================================

Block 0x300
[0x300:0x305]
---
Predecessors: [0x2d3, 0x2ec]
Successors: [0x306, 0x30b]
---
0x300 JUMPDEST
0x301 ISZERO
0x302 PUSH2 0x30b
0x305 JUMPI
---
0x300: JUMPDEST 
0x301: V293 = ISZERO S0
0x302: V294 = 0x30b
0x305: JUMPI 0x30b V293
---
Entry stack: [V10, 0x112, V153, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x112, V153]

================================

Block 0x306
[0x306:0x30a]
---
Predecessors: [0x300]
Successors: []
---
0x306 PUSH1 0x0
0x308 PUSH1 0x0
0x30a REVERT
---
0x306: V295 = 0x0
0x308: V296 = 0x0
0x30a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x112, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112, V153]

================================

Block 0x30b
[0x30b:0x310]
---
Predecessors: [0x300]
Successors: [0x311]
---
0x30b JUMPDEST
0x30c PUSH1 0x2
0x30e DUP2
0x30f SWAP1
0x310 SSTORE
---
0x30b: JUMPDEST 
0x30c: V297 = 0x2
0x310: S[0x2] = V153
---
Entry stack: [V10, 0x112, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x112, V153]

================================

Block 0x311
[0x311:0x311]
---
Predecessors: [0x30b]
Successors: [0x312]
---
0x311 JUMPDEST
---
0x311: JUMPDEST 
---
Entry stack: [V10, 0x112, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112, V153]

================================

Block 0x312
[0x312:0x314]
---
Predecessors: [0x311]
Successors: [0x112]
---
0x312 JUMPDEST
0x313 POP
0x314 JUMP
---
0x312: JUMPDEST 
0x314: JUMP 0x112
---
Entry stack: [V10, 0x112, V153]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x315
[0x315:0x32d]
---
Predecessors: [0x1db]
Successors: [0x32e, 0x342]
---
0x315 JUMPDEST
0x316 PUSH1 0x0
0x318 SLOAD
0x319 CALLER
0x31a PUSH1 0x1
0x31c PUSH1 0xa0
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 SWAP1
0x323 DUP2
0x324 AND
0x325 SWAP2
0x326 AND
0x327 EQ
0x328 ISZERO
0x329 DUP1
0x32a PUSH2 0x342
0x32d JUMPI
---
0x315: JUMPDEST 
0x316: V298 = 0x0
0x318: V299 = S[0x0]
0x319: V300 = CALLER
0x31a: V301 = 0x1
0x31c: V302 = 0xa0
0x31e: V303 = 0x2
0x320: V304 = EXP 0x2 0xa0
0x321: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x324: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x326: V307 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0x327: V308 = EQ V307 V306
0x328: V309 = ISZERO V308
0x32a: V310 = 0x342
0x32d: JUMPI 0x342 V309
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: [V309]
Exit stack: [V10, 0x112, V309]

================================

Block 0x32e
[0x32e:0x341]
---
Predecessors: [0x315]
Successors: [0x342]
---
0x32e POP
0x32f PUSH1 0x1
0x331 SLOAD
0x332 CALLER
0x333 PUSH1 0x1
0x335 PUSH1 0xa0
0x337 PUSH1 0x2
0x339 EXP
0x33a SUB
0x33b SWAP1
0x33c DUP2
0x33d AND
0x33e SWAP2
0x33f AND
0x340 EQ
0x341 ISZERO
---
0x32f: V311 = 0x1
0x331: V312 = S[0x1]
0x332: V313 = CALLER
0x333: V314 = 0x1
0x335: V315 = 0xa0
0x337: V316 = 0x2
0x339: V317 = EXP 0x2 0xa0
0x33a: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33d: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x33f: V320 = AND V312 0xffffffffffffffffffffffffffffffffffffffff
0x340: V321 = EQ V320 V319
0x341: V322 = ISZERO V321
---
Entry stack: [V10, 0x112, V309]
Stack pops: 1
Stack additions: [V322]
Exit stack: [V10, 0x112, V322]

================================

Block 0x342
[0x342:0x347]
---
Predecessors: [0x315, 0x32e]
Successors: [0x348, 0x34d]
---
0x342 JUMPDEST
0x343 ISZERO
0x344 PUSH2 0x34d
0x347 JUMPI
---
0x342: JUMPDEST 
0x343: V323 = ISZERO S0
0x344: V324 = 0x34d
0x347: JUMPI 0x34d V323
---
Entry stack: [V10, 0x112, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x348
[0x348:0x34c]
---
Predecessors: [0x342]
Successors: []
---
0x348 PUSH1 0x0
0x34a PUSH1 0x0
0x34c REVERT
---
0x348: V325 = 0x0
0x34a: V326 = 0x0
0x34c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x34d
[0x34d:0x37c]
---
Predecessors: [0x342]
Successors: [0x10f, 0x37d]
---
0x34d JUMPDEST
0x34e PUSH1 0x40
0x350 MLOAD
0x351 PUSH1 0x1
0x353 PUSH1 0xa0
0x355 PUSH1 0x2
0x357 EXP
0x358 SUB
0x359 CALLER
0x35a DUP2
0x35b AND
0x35c SWAP2
0x35d ADDRESS
0x35e SWAP1
0x35f SWAP2
0x360 AND
0x361 BALANCE
0x362 DUP1
0x363 ISZERO
0x364 PUSH2 0x8fc
0x367 MUL
0x368 SWAP2
0x369 PUSH1 0x0
0x36b DUP2
0x36c DUP2
0x36d DUP2
0x36e DUP6
0x36f DUP9
0x370 DUP9
0x371 CALL
0x372 SWAP4
0x373 POP
0x374 POP
0x375 POP
0x376 POP
0x377 ISZERO
0x378 ISZERO
0x379 PUSH2 0x10f
0x37c JUMPI
---
0x34d: JUMPDEST 
0x34e: V327 = 0x40
0x350: V328 = M[0x40]
0x351: V329 = 0x1
0x353: V330 = 0xa0
0x355: V331 = 0x2
0x357: V332 = EXP 0x2 0xa0
0x358: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V334 = CALLER
0x35b: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x35d: V336 = ADDRESS
0x360: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x361: V338 = BALANCE V337
0x363: V339 = ISZERO V338
0x364: V340 = 0x8fc
0x367: V341 = MUL 0x8fc V339
0x369: V342 = 0x0
0x371: V343 = CALL V341 V335 V338 V328 0x0 V328 0x0
0x377: V344 = ISZERO V343
0x378: V345 = ISZERO V344
0x379: V346 = 0x10f
0x37c: JUMPI 0x10f V345
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x37d
[0x37d:0x37d]
---
Predecessors: [0x34d]
Successors: []
---
0x37d INVALID
---
0x37d: INVALID 
---
Entry stack: [V10, 0x112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x37e
[0x37e:0x37e]
---
Predecessors: []
Successors: [0x37f]
---
0x37e JUMPDEST
---
0x37e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x37f
[0x37f:0x37f]
---
Predecessors: [0x37e]
Successors: [0x380]
---
0x37f JUMPDEST
---
0x37f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x380
[0x380:0x381]
---
Predecessors: [0x37f]
Successors: []
Has unresolved jump.
---
0x380 JUMPDEST
0x381 JUMP
---
0x380: JUMPDEST 
0x381: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x382
[0x382:0x39a]
---
Predecessors: [0x1ed]
Successors: [0x39b, 0x3af]
---
0x382 JUMPDEST
0x383 PUSH1 0x0
0x385 SLOAD
0x386 CALLER
0x387 PUSH1 0x1
0x389 PUSH1 0xa0
0x38b PUSH1 0x2
0x38d EXP
0x38e SUB
0x38f SWAP1
0x390 DUP2
0x391 AND
0x392 SWAP2
0x393 AND
0x394 EQ
0x395 ISZERO
0x396 DUP1
0x397 PUSH2 0x3af
0x39a JUMPI
---
0x382: JUMPDEST 
0x383: V347 = 0x0
0x385: V348 = S[0x0]
0x386: V349 = CALLER
0x387: V350 = 0x1
0x389: V351 = 0xa0
0x38b: V352 = 0x2
0x38d: V353 = EXP 0x2 0xa0
0x38e: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x391: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x393: V356 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x394: V357 = EQ V356 V355
0x395: V358 = ISZERO V357
0x397: V359 = 0x3af
0x39a: JUMPI 0x3af V358
---
Entry stack: [V10, 0x112, V171]
Stack pops: 0
Stack additions: [V358]
Exit stack: [V10, 0x112, V171, V358]

================================

Block 0x39b
[0x39b:0x3ae]
---
Predecessors: [0x382]
Successors: [0x3af]
---
0x39b POP
0x39c PUSH1 0x1
0x39e SLOAD
0x39f CALLER
0x3a0 PUSH1 0x1
0x3a2 PUSH1 0xa0
0x3a4 PUSH1 0x2
0x3a6 EXP
0x3a7 SUB
0x3a8 SWAP1
0x3a9 DUP2
0x3aa AND
0x3ab SWAP2
0x3ac AND
0x3ad EQ
0x3ae ISZERO
---
0x39c: V360 = 0x1
0x39e: V361 = S[0x1]
0x39f: V362 = CALLER
0x3a0: V363 = 0x1
0x3a2: V364 = 0xa0
0x3a4: V365 = 0x2
0x3a6: V366 = EXP 0x2 0xa0
0x3a7: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3aa: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x3ac: V369 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V370 = EQ V369 V368
0x3ae: V371 = ISZERO V370
---
Entry stack: [V10, 0x112, V171, V358]
Stack pops: 1
Stack additions: [V371]
Exit stack: [V10, 0x112, V171, V371]

================================

Block 0x3af
[0x3af:0x3b4]
---
Predecessors: [0x382, 0x39b]
Successors: [0x3b5, 0x3ba]
---
0x3af JUMPDEST
0x3b0 ISZERO
0x3b1 PUSH2 0x3ba
0x3b4 JUMPI
---
0x3af: JUMPDEST 
0x3b0: V372 = ISZERO S0
0x3b1: V373 = 0x3ba
0x3b4: JUMPI 0x3ba V372
---
Entry stack: [V10, 0x112, V171, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x112, V171]

================================

Block 0x3b5
[0x3b5:0x3b9]
---
Predecessors: [0x3af]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 PUSH1 0x0
0x3b9 REVERT
---
0x3b5: V374 = 0x0
0x3b7: V375 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x112, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112, V171]

================================

Block 0x3ba
[0x3ba:0x3e2]
---
Predecessors: [0x3af]
Successors: [0x3e3]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x1
0x3bd DUP1
0x3be SLOAD
0x3bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d4 NOT
0x3d5 AND
0x3d6 PUSH1 0x1
0x3d8 PUSH1 0xa0
0x3da PUSH1 0x2
0x3dc EXP
0x3dd SUB
0x3de DUP4
0x3df AND
0x3e0 OR
0x3e1 SWAP1
0x3e2 SSTORE
---
0x3ba: JUMPDEST 
0x3bb: V376 = 0x1
0x3be: V377 = S[0x1]
0x3bf: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V379 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V380 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V377
0x3d6: V381 = 0x1
0x3d8: V382 = 0xa0
0x3da: V383 = 0x2
0x3dc: V384 = EXP 0x2 0xa0
0x3dd: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3df: V386 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V387 = OR V386 V380
0x3e2: S[0x1] = V387
---
Entry stack: [V10, 0x112, V171]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x112, V171]

================================

Block 0x3e3
[0x3e3:0x3e3]
---
Predecessors: [0x3ba]
Successors: [0x3e4]
---
0x3e3 JUMPDEST
---
0x3e3: JUMPDEST 
---
Entry stack: [V10, 0x112, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x112, V171]

================================

Block 0x3e4
[0x3e4:0x3e6]
---
Predecessors: [0x3e3]
Successors: [0x112]
---
0x3e4 JUMPDEST
0x3e5 POP
0x3e6 JUMP
---
0x3e4: JUMPDEST 
0x3e6: JUMP 0x112
---
Entry stack: [V10, 0x112, V171]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e7
[0x3e7:0x42d]
---
Predecessors: []
Successors: []
---
0x3e7 STOP
0x3e8 LOG1
0x3e9 PUSH6 0x627a7a723058
0x3f0 SHA3
0x3f1 MISSING 0xbc
0x3f2 ADD
0x3f3 SLT
0x3f4 SWAP12
0x3f5 DUP7
0x3f6 SWAP1
0x3f7 BYTE
0x3f8 MISSING 0xd1
0x3f9 TIMESTAMP
0x3fa MISSING 0xd3
0x3fb MISSING 0x4f
0x3fc DUP6
0x3fd AND
0x3fe MISSING 0xc2
0x3ff MISSING 0x2c
0x400 MISSING 0xc8
0x401 BYTE
0x402 MISSING 0xa7
0x403 MISSING 0x23
0x404 MISSING 0x24
0x405 MISSING 0x2c
0x406 BALANCE
0x407 SGT
0x408 MISSING 0xa7
0x409 MISSING 0xed
0x40a MSIZE
0x40b MISSING 0x2c
0x40c MISSING 0xd5
0x40d MISSING 0xbc
0x40e DUP8
0x40f PUSH30 0x6f0029
---
0x3e7: STOP 
0x3e8: LOG S0 S1 S2
0x3e9: V388 = 0x627a7a723058
0x3f0: V389 = SHA3 0x627a7a723058 S3
0x3f1: MISSING 0xbc
0x3f2: V390 = ADD S0 S1
0x3f3: V391 = SLT V390 S2
0x3f7: V392 = BYTE S14 S8
0x3f8: MISSING 0xd1
0x3f9: V393 = TIMESTAMP
0x3fa: MISSING 0xd3
0x3fb: MISSING 0x4f
0x3fd: V394 = AND S5 S0
0x3fe: MISSING 0xc2
0x3ff: MISSING 0x2c
0x400: MISSING 0xc8
0x401: V395 = BYTE S0 S1
0x402: MISSING 0xa7
0x403: MISSING 0x23
0x404: MISSING 0x24
0x405: MISSING 0x2c
0x406: V396 = BALANCE S0
0x407: V397 = SGT V396 S1
0x408: MISSING 0xa7
0x409: MISSING 0xed
0x40a: V398 = MSIZE
0x40b: MISSING 0x2c
0x40c: MISSING 0xd5
0x40d: MISSING 0xbc
0x40f: V399 = 0x6f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V389, V392, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V391, V393, V394, S1, S2, S3, S4, S5, V395, V397, V398, 0x6f0029, S7, S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0xdbe671f
Entry block: 0x114
Exit block: 0x124
Body: 0x114, 0x11b, 0x11c, 0x124, 0x203

Function 1:
Public function signature: 0x2c4e722e
Entry block: 0x140
Exit block: 0x150
Body: 0x140, 0x147, 0x148, 0x150, 0x212

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0x162
Exit block: 0x250
Body: 0x162, 0x169, 0x16a, 0x218, 0x231, 0x245, 0x24b, 0x250

Function 3:
Public function signature: 0x4bfc4782
Entry block: 0x174
Exit block: 0x112
Body: 0x112, 0x174, 0x17b, 0x17c, 0x25f, 0x278, 0x28c, 0x292, 0x297, 0x2c0, 0x2c1

Function 4:
Public function signature: 0x4df7e3d0
Entry block: 0x192
Exit block: 0x124
Body: 0x124, 0x192, 0x199, 0x19a, 0x2c4

Function 5:
Public function signature: 0xaa54e040
Entry block: 0x1be
Exit block: 0x112
Body: 0x112, 0x1be, 0x1c5, 0x1c6, 0x2d3, 0x2ec, 0x300, 0x306, 0x30b, 0x311, 0x312

Function 6:
Public function signature: 0xe5225381
Entry block: 0x1d3
Exit block: 0x112
Body: 0x10f, 0x110, 0x112, 0x1d3, 0x1da, 0x1db, 0x315, 0x32e, 0x342, 0x348, 0x34d, 0x37d

Function 7:
Public function signature: 0xfca2452b
Entry block: 0x1e5
Exit block: 0x112
Body: 0x112, 0x1e5, 0x1ec, 0x1ed, 0x382, 0x39b, 0x3af, 0x3b5, 0x3ba, 0x3e3, 0x3e4

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0x112
Body: 0x8b, 0x8f, 0xab, 0xcd, 0xce, 0xec, 0x10e, 0x10f, 0x110, 0x112

