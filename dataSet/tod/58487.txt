Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x6c]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x39a248f3
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x6c
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x39a248f3
0x1a: V12 = EQ V10 0x39a248f3
0x1b: V13 = 0x6c
0x1e: JUMPI 0x6c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x75]
---
0x1f DUP1
0x20 PUSH4 0x75b9c384
0x25 EQ
0x26 PUSH2 0x75
0x29 JUMPI
---
0x20: V14 = 0x75b9c384
0x25: V15 = EQ 0x75b9c384 V10
0x26: V16 = 0x75
0x29: JUMPI 0x75 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xf4]
---
0x2a DUP1
0x2b PUSH4 0x7a5c8432
0x30 EQ
0x31 PUSH2 0xf4
0x34 JUMPI
---
0x2b: V17 = 0x7a5c8432
0x30: V18 = EQ 0x7a5c8432 V10
0x31: V19 = 0xf4
0x34: JUMPI 0xf4 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xfd]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0xfd
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0xfd
0x3f: JUMPI 0xfd V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x10f]
---
0x40 DUP1
0x41 PUSH4 0xa2f9eac6
0x46 EQ
0x47 PUSH2 0x10f
0x4a JUMPI
---
0x41: V23 = 0xa2f9eac6
0x46: V24 = EQ 0xa2f9eac6 V10
0x47: V25 = 0x10f
0x4a: JUMPI 0x10f V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x170]
---
0x4b DUP1
0x4c PUSH4 0xca4b208b
0x51 EQ
0x52 PUSH2 0x170
0x55 JUMPI
---
0x4c: V26 = 0xca4b208b
0x51: V27 = EQ 0xca4b208b V10
0x52: V28 = 0x170
0x55: JUMPI 0x170 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x182]
---
0x56 DUP1
0x57 PUSH4 0xe97dcb62
0x5c EQ
0x5d PUSH2 0x182
0x60 JUMPI
---
0x57: V29 = 0xe97dcb62
0x5c: V30 = EQ 0xe97dcb62 V10
0x5d: V31 = 0x182
0x60: JUMPI 0x182 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x0, 0x56]
Successors: [0x186]
---
0x61 JUMPDEST
0x62 PUSH2 0x1c2
0x65 PUSH2 0xf2
0x68 PUSH2 0x186
0x6b JUMP
---
0x61: JUMPDEST 
0x62: V32 = 0x1c2
0x65: V33 = 0xf2
0x68: V34 = 0x186
0x6b: JUMP 0x186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c2, 0xf2]
Exit stack: [V10, 0x1c2, 0xf2]

================================

Block 0x6c
[0x6c:0x74]
---
Predecessors: [0xb]
Successors: [0x1c4]
---
0x6c JUMPDEST
0x6d PUSH2 0x1c4
0x70 PUSH1 0x2
0x72 SLOAD
0x73 DUP2
0x74 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x1c4
0x70: V36 = 0x2
0x72: V37 = S[0x2]
0x74: JUMP 0x1c4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c4, V37]
Exit stack: [V10, 0x1c4, V37]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x1f]
Successors: [0x79]
---
0x75 JUMPDEST
0x76 PUSH2 0x1c2
---
0x75: JUMPDEST 
0x76: V38 = 0x1c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c2]
Exit stack: [V10, 0x1c2]

================================

Block 0x79
[0x79:0x90]
---
Predecessors: [0x75, 0x1bb]
Successors: [0x91, 0xa5]
---
0x79 JUMPDEST
0x7a PUSH1 0x4
0x7c SLOAD
0x7d CALLER
0x7e PUSH1 0x1
0x80 PUSH1 0xa0
0x82 PUSH1 0x2
0x84 EXP
0x85 SUB
0x86 SWAP1
0x87 DUP2
0x88 AND
0x89 SWAP2
0x8a AND
0x8b EQ
0x8c DUP1
0x8d PUSH2 0xa5
0x90 JUMPI
---
0x79: JUMPDEST 
0x7a: V39 = 0x4
0x7c: V40 = S[0x4]
0x7d: V41 = CALLER
0x7e: V42 = 0x1
0x80: V43 = 0xa0
0x82: V44 = 0x2
0x84: V45 = EXP 0x2 0xa0
0x85: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x8a: V48 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x8b: V49 = EQ V48 V47
0x8d: V50 = 0xa5
0x90: JUMPI 0xa5 V49
---
Entry stack: [V10, S3, {0xf2, 0x1c2}, S1, {0x1c2, 0x2e6}]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V10, S3, {0xf2, 0x1c2}, S1, {0x1c2, 0x2e6}, V49]

================================

Block 0x91
[0x91:0xa4]
---
Predecessors: [0x79]
Successors: [0xa5]
---
0x91 POP
0x92 PUSH1 0x5
0x94 SLOAD
0x95 PUSH1 0x1
0x97 PUSH1 0xa0
0x99 PUSH1 0x2
0x9b EXP
0x9c SUB
0x9d SWAP1
0x9e DUP2
0x9f AND
0xa0 CALLER
0xa1 SWAP1
0xa2 SWAP2
0xa3 AND
0xa4 EQ
---
0x92: V51 = 0x5
0x94: V52 = S[0x5]
0x95: V53 = 0x1
0x97: V54 = 0xa0
0x99: V55 = 0x2
0x9b: V56 = EXP 0x2 0xa0
0x9c: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xa0: V59 = CALLER
0xa3: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xa4: V61 = EQ V60 V58
---
Entry stack: [V10, S4, {0xf2, 0x1c2}, S2, {0x1c2, 0x2e6}, V49]
Stack pops: 1
Stack additions: [V61]
Exit stack: [V10, S4, {0xf2, 0x1c2}, S2, {0x1c2, 0x2e6}, V61]

================================

Block 0xa5
[0xa5:0xaa]
---
Predecessors: [0x79, 0x91]
Successors: [0xab, 0xf2]
---
0xa5 JUMPDEST
0xa6 ISZERO
0xa7 PUSH2 0xf2
0xaa JUMPI
---
0xa5: JUMPDEST 
0xa6: V62 = ISZERO S0
0xa7: V63 = 0xf2
0xaa: JUMPI 0xf2 V62
---
Entry stack: [V10, S4, {0xf2, 0x1c2}, S2, {0x1c2, 0x2e6}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S4, {0xf2, 0x1c2}, S2, {0x1c2, 0x2e6}]

================================

Block 0xab
[0xab:0xc9]
---
Predecessors: [0xa5]
Successors: [0xca, 0x486]
---
0xab PUSH1 0x6
0xad SLOAD
0xae PUSH8 0xde0b6b3a7640000
0xb7 PUSH1 0x1
0xb9 PUSH1 0xa0
0xbb PUSH1 0x2
0xbd EXP
0xbe SUB
0xbf SWAP2
0xc0 SWAP1
0xc1 SWAP2
0xc2 AND
0xc3 BALANCE
0xc4 GT
0xc5 ISZERO
0xc6 PUSH2 0x486
0xc9 JUMPI
---
0xab: V64 = 0x6
0xad: V65 = S[0x6]
0xae: V66 = 0xde0b6b3a7640000
0xb7: V67 = 0x1
0xb9: V68 = 0xa0
0xbb: V69 = 0x2
0xbd: V70 = EXP 0x2 0xa0
0xbe: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xc3: V73 = BALANCE V72
0xc4: V74 = GT V73 0xde0b6b3a7640000
0xc5: V75 = ISZERO V74
0xc6: V76 = 0x486
0xc9: JUMPI 0x486 V75
---
Entry stack: [V10, S3, {0xf2, 0x1c2}, S1, {0x1c2, 0x2e6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0xf2, 0x1c2}, S1, {0x1c2, 0x2e6}]

================================

Block 0xca
[0xca:0xf1]
---
Predecessors: [0xab]
Successors: [0xf2]
---
0xca PUSH1 0x40
0xcc MLOAD
0xcd CALLER
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 AND
0xd7 SWAP1
0xd8 PUSH1 0x0
0xda SWAP1
0xdb PUSH8 0xde0b6b3a7640000
0xe4 SWAP1
0xe5 DUP3
0xe6 DUP2
0xe7 DUP2
0xe8 DUP2
0xe9 DUP6
0xea DUP9
0xeb DUP4
0xec CALL
0xed POP
0xee POP
0xef POP
0xf0 POP
0xf1 POP
---
0xca: V77 = 0x40
0xcc: V78 = M[0x40]
0xcd: V79 = CALLER
0xce: V80 = 0x1
0xd0: V81 = 0xa0
0xd2: V82 = 0x2
0xd4: V83 = EXP 0x2 0xa0
0xd5: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0xd8: V86 = 0x0
0xdb: V87 = 0xde0b6b3a7640000
0xec: V88 = CALL 0x0 V85 0xde0b6b3a7640000 V78 0x0 V78 0x0
---
Entry stack: [V10, S3, {0xf2, 0x1c2}, S1, {0x1c2, 0x2e6}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0xf2, 0x1c2}, S1, {0x1c2, 0x2e6}]

================================

Block 0xf2
[0xf2:0xf3]
---
Predecessors: [0xa5, 0xca, 0x313]
Successors: [0x1c2, 0x2e6]
---
0xf2 JUMPDEST
0xf3 JUMP
---
0xf2: JUMPDEST 
0xf3: JUMP S0
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S3, S2, S1]

================================

Block 0xf4
[0xf4:0xfc]
---
Predecessors: [0x2a]
Successors: [0x1c4]
---
0xf4 JUMPDEST
0xf5 PUSH2 0x1c4
0xf8 PUSH1 0x1
0xfa SLOAD
0xfb DUP2
0xfc JUMP
---
0xf4: JUMPDEST 
0xf5: V89 = 0x1c4
0xf8: V90 = 0x1
0xfa: V91 = S[0x1]
0xfc: JUMP 0x1c4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c4, V91]
Exit stack: [V10, 0x1c4, V91]

================================

Block 0xfd
[0xfd:0x10e]
---
Predecessors: [0x35]
Successors: [0x1d6]
---
0xfd JUMPDEST
0xfe PUSH2 0x1d6
0x101 PUSH1 0x4
0x103 SLOAD
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c AND
0x10d DUP2
0x10e JUMP
---
0xfd: JUMPDEST 
0xfe: V92 = 0x1d6
0x101: V93 = 0x4
0x103: V94 = S[0x4]
0x104: V95 = 0x1
0x106: V96 = 0xa0
0x108: V97 = 0x2
0x10a: V98 = EXP 0x2 0xa0
0x10b: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x10e: JUMP 0x1d6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d6, V100]
Exit stack: [V10, 0x1d6, V100]

================================

Block 0x10f
[0x10f:0x122]
---
Predecessors: [0x40]
Successors: [0x123]
---
0x10f JUMPDEST
0x110 PUSH2 0x1f3
0x113 PUSH1 0x4
0x115 CALLDATALOAD
0x116 PUSH1 0x0
0x118 DUP1
0x119 SLOAD
0x11a DUP3
0x11b SWAP1
0x11c DUP2
0x11d LT
0x11e ISZERO
0x11f PUSH2 0x2
0x122 JUMPI
---
0x10f: JUMPDEST 
0x110: V101 = 0x1f3
0x113: V102 = 0x4
0x115: V103 = CALLDATALOAD 0x4
0x116: V104 = 0x0
0x119: V105 = S[0x0]
0x11d: V106 = LT V103 V105
0x11e: V107 = ISZERO V106
0x11f: V108 = 0x2
0x122: THROWI V107
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f3, V103, 0x0, V103]
Exit stack: [V10, 0x1f3, V103, 0x0, V103]

================================

Block 0x123
[0x123:0x16f]
---
Predecessors: [0x10f]
Successors: [0x1f3]
---
0x123 POP
0x124 DUP1
0x125 MSTORE
0x126 PUSH1 0x2
0x128 MUL
0x129 PUSH1 0x0
0x12b DUP1
0x12c MLOAD
0x12d PUSH1 0x20
0x12f PUSH2 0x4af
0x132 DUP4
0x133 CODECOPY
0x134 DUP2
0x135 MLOAD
0x136 SWAP2
0x137 MSTORE
0x138 DUP2
0x139 ADD
0x13a SLOAD
0x13b PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564
0x15c SWAP2
0x15d SWAP1
0x15e SWAP2
0x15f ADD
0x160 SLOAD
0x161 PUSH1 0x1
0x163 PUSH1 0xa0
0x165 PUSH1 0x2
0x167 EXP
0x168 SUB
0x169 SWAP2
0x16a SWAP1
0x16b SWAP2
0x16c AND
0x16d SWAP1
0x16e DUP3
0x16f JUMP
---
0x125: M[0x0] = 0x0
0x126: V109 = 0x2
0x128: V110 = MUL 0x2 V103
0x129: V111 = 0x0
0x12c: V112 = M[0x0]
0x12d: V113 = 0x20
0x12f: V114 = 0x4af
0x133: CODECOPY 0x0 0x4af 0x20
0x135: V115 = M[0x0]
0x137: M[0x0] = V112
0x139: V116 = ADD V110 V115
0x13a: V117 = S[V116]
0x13b: V118 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564
0x15f: V119 = ADD 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564 V110
0x160: V120 = S[V119]
0x161: V121 = 0x1
0x163: V122 = 0xa0
0x165: V123 = 0x2
0x167: V124 = EXP 0x2 0xa0
0x168: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16c: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x16f: JUMP 0x1f3
---
Entry stack: [V10, 0x1f3, V103, 0x0, V103]
Stack pops: 4
Stack additions: [S3, V126, V120]
Exit stack: [V10, 0x1f3, V126, V120]

================================

Block 0x170
[0x170:0x181]
---
Predecessors: [0x4b]
Successors: [0x1d6]
---
0x170 JUMPDEST
0x171 PUSH2 0x1d6
0x174 PUSH1 0x5
0x176 SLOAD
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f AND
0x180 DUP2
0x181 JUMP
---
0x170: JUMPDEST 
0x171: V127 = 0x1d6
0x174: V128 = 0x5
0x176: V129 = S[0x5]
0x177: V130 = 0x1
0x179: V131 = 0xa0
0x17b: V132 = 0x2
0x17d: V133 = EXP 0x2 0xa0
0x17e: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17f: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x181: JUMP 0x1d6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d6, V135]
Exit stack: [V10, 0x1d6, V135]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x56]
Successors: [0x186]
---
0x182 JUMPDEST
0x183 PUSH2 0x1c2
---
0x182: JUMPDEST 
0x183: V136 = 0x1c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c2]
Exit stack: [V10, 0x1c2]

================================

Block 0x186
[0x186:0x1a0]
---
Predecessors: [0x61, 0x182]
Successors: [0x1a1, 0x1b5]
---
0x186 JUMPDEST
0x187 PUSH1 0x4
0x189 SLOAD
0x18a PUSH1 0x0
0x18c SWAP1
0x18d CALLER
0x18e PUSH1 0x1
0x190 PUSH1 0xa0
0x192 PUSH1 0x2
0x194 EXP
0x195 SUB
0x196 SWAP1
0x197 DUP2
0x198 AND
0x199 SWAP2
0x19a AND
0x19b EQ
0x19c DUP1
0x19d PUSH2 0x1b5
0x1a0 JUMPI
---
0x186: JUMPDEST 
0x187: V137 = 0x4
0x189: V138 = S[0x4]
0x18a: V139 = 0x0
0x18d: V140 = CALLER
0x18e: V141 = 0x1
0x190: V142 = 0xa0
0x192: V143 = 0x2
0x194: V144 = EXP 0x2 0xa0
0x195: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x19a: V147 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V148 = EQ V147 V146
0x19d: V149 = 0x1b5
0x1a0: JUMPI 0x1b5 V148
---
Entry stack: [V10, S1, {0xf2, 0x1c2}]
Stack pops: 0
Stack additions: [0x0, V148]
Exit stack: [V10, S1, {0xf2, 0x1c2}, 0x0, V148]

================================

Block 0x1a1
[0x1a1:0x1b4]
---
Predecessors: [0x186]
Successors: [0x1b5]
---
0x1a1 POP
0x1a2 PUSH1 0x5
0x1a4 SLOAD
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad SWAP1
0x1ae DUP2
0x1af AND
0x1b0 CALLER
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 AND
0x1b4 EQ
---
0x1a2: V150 = 0x5
0x1a4: V151 = S[0x5]
0x1a5: V152 = 0x1
0x1a7: V153 = 0xa0
0x1a9: V154 = 0x2
0x1ab: V155 = EXP 0x2 0xa0
0x1ac: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1af: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x1b0: V158 = CALLER
0x1b3: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x1b4: V160 = EQ V159 V157
---
Entry stack: [V10, S3, {0xf2, 0x1c2}, 0x0, V148]
Stack pops: 1
Stack additions: [V160]
Exit stack: [V10, S3, {0xf2, 0x1c2}, 0x0, V160]

================================

Block 0x1b5
[0x1b5:0x1ba]
---
Predecessors: [0x186, 0x1a1]
Successors: [0x1bb, 0x219]
---
0x1b5 JUMPDEST
0x1b6 ISZERO
0x1b7 PUSH2 0x219
0x1ba JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V161 = ISZERO S0
0x1b7: V162 = 0x219
0x1ba: JUMPI 0x219 V161
---
Entry stack: [V10, S3, {0xf2, 0x1c2}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S3, {0xf2, 0x1c2}, 0x0]

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x1b5]
Successors: [0x79]
---
0x1bb PUSH2 0x2e6
0x1be PUSH2 0x79
0x1c1 JUMP
---
0x1bb: V163 = 0x2e6
0x1be: V164 = 0x79
0x1c1: JUMP 0x79
---
Entry stack: [V10, S2, {0xf2, 0x1c2}, 0x0]
Stack pops: 0
Stack additions: [0x2e6]
Exit stack: [V10, S2, {0xf2, 0x1c2}, 0x0, 0x2e6]

================================

Block 0x1c2
[0x1c2:0x1c3]
---
Predecessors: [0xf2, 0x313, 0x486]
Successors: []
---
0x1c2 JUMPDEST
0x1c3 STOP
---
0x1c2: JUMPDEST 
0x1c3: STOP 
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x1c4
[0x1c4:0x1d5]
---
Predecessors: [0x6c, 0xf4]
Successors: []
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x40
0x1c7 DUP1
0x1c8 MLOAD
0x1c9 SWAP2
0x1ca DUP3
0x1cb MSTORE
0x1cc MLOAD
0x1cd SWAP1
0x1ce DUP2
0x1cf SWAP1
0x1d0 SUB
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP1
0x1d5 RETURN
---
0x1c4: JUMPDEST 
0x1c5: V165 = 0x40
0x1c8: V166 = M[0x40]
0x1cb: M[V166] = S0
0x1cc: V167 = M[0x40]
0x1d0: V168 = SUB V166 V167
0x1d1: V169 = 0x20
0x1d3: V170 = ADD 0x20 V168
0x1d5: RETURN V167 V170
---
Entry stack: [V10, 0x1c4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x1d6
[0x1d6:0x1f2]
---
Predecessors: [0xfd, 0x170]
Successors: []
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x40
0x1d9 DUP1
0x1da MLOAD
0x1db PUSH1 0x1
0x1dd PUSH1 0xa0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SUB
0x1e3 SWAP3
0x1e4 SWAP1
0x1e5 SWAP3
0x1e6 AND
0x1e7 DUP3
0x1e8 MSTORE
0x1e9 MLOAD
0x1ea SWAP1
0x1eb DUP2
0x1ec SWAP1
0x1ed SUB
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP1
0x1f2 RETURN
---
0x1d6: JUMPDEST 
0x1d7: V171 = 0x40
0x1da: V172 = M[0x40]
0x1db: V173 = 0x1
0x1dd: V174 = 0xa0
0x1df: V175 = 0x2
0x1e1: V176 = EXP 0x2 0xa0
0x1e2: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1e8: M[V172] = V178
0x1e9: V179 = M[0x40]
0x1ed: V180 = SUB V172 V179
0x1ee: V181 = 0x20
0x1f0: V182 = ADD 0x20 V180
0x1f2: RETURN V179 V182
---
Entry stack: [V10, 0x1d6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d6]

================================

Block 0x1f3
[0x1f3:0x218]
---
Predecessors: [0x123]
Successors: []
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 DUP1
0x1f8 DUP4
0x1f9 PUSH1 0x1
0x1fb PUSH1 0xa0
0x1fd PUSH1 0x2
0x1ff EXP
0x200 SUB
0x201 AND
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x20
0x206 ADD
0x207 DUP3
0x208 DUP2
0x209 MSTORE
0x20a PUSH1 0x20
0x20c ADD
0x20d SWAP3
0x20e POP
0x20f POP
0x210 POP
0x211 PUSH1 0x40
0x213 MLOAD
0x214 DUP1
0x215 SWAP2
0x216 SUB
0x217 SWAP1
0x218 RETURN
---
0x1f3: JUMPDEST 
0x1f4: V183 = 0x40
0x1f6: V184 = M[0x40]
0x1f9: V185 = 0x1
0x1fb: V186 = 0xa0
0x1fd: V187 = 0x2
0x1ff: V188 = EXP 0x2 0xa0
0x200: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x201: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x203: M[V184] = V190
0x204: V191 = 0x20
0x206: V192 = ADD 0x20 V184
0x209: M[V192] = V120
0x20a: V193 = 0x20
0x20c: V194 = ADD 0x20 V192
0x211: V195 = 0x40
0x213: V196 = M[0x40]
0x216: V197 = SUB V194 V196
0x218: RETURN V196 V197
---
Entry stack: [V10, 0x1f3, V126, V120]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x1f3]

================================

Block 0x219
[0x219:0x27c]
---
Predecessors: [0x1b5]
Successors: [0x27d, 0x2eb]
---
0x219 JUMPDEST
0x21a PUSH1 0x2
0x21c DUP1
0x21d SLOAD
0x21e PUSH1 0xa
0x220 CALLVALUE
0x221 DIV
0x222 ADD
0x223 DUP1
0x224 DUP3
0x225 SSTORE
0x226 PUSH1 0x4
0x228 SLOAD
0x229 PUSH1 0x40
0x22b MLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP1
0x235 SWAP2
0x236 AND
0x237 SWAP3
0x238 PUSH1 0x0
0x23a SWAP3
0x23b DIV
0x23c SWAP1
0x23d DUP3
0x23e DUP2
0x23f DUP2
0x240 DUP2
0x241 DUP6
0x242 DUP9
0x243 DUP4
0x244 CALL
0x245 POP
0x246 PUSH1 0x5
0x248 SLOAD
0x249 PUSH1 0x2
0x24b DUP1
0x24c SLOAD
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 SWAP3
0x256 SWAP1
0x257 SWAP3
0x258 AND
0x259 SWAP6
0x25a POP
0x25b SWAP1
0x25c DIV
0x25d SWAP2
0x25e POP
0x25f DUP3
0x260 DUP2
0x261 DUP2
0x262 DUP2
0x263 DUP6
0x264 DUP9
0x265 DUP4
0x266 CALL
0x267 POP
0x268 POP
0x269 POP
0x26a PUSH1 0x2
0x26c SSTORE
0x26d POP
0x26e PUSH7 0x58d15e17628000
0x276 CALLVALUE
0x277 EQ
0x278 ISZERO
0x279 PUSH2 0x2eb
0x27c JUMPI
---
0x219: JUMPDEST 
0x21a: V198 = 0x2
0x21d: V199 = S[0x2]
0x21e: V200 = 0xa
0x220: V201 = CALLVALUE
0x221: V202 = DIV V201 0xa
0x222: V203 = ADD V202 V199
0x225: S[0x2] = V203
0x226: V204 = 0x4
0x228: V205 = S[0x4]
0x229: V206 = 0x40
0x22b: V207 = M[0x40]
0x22c: V208 = 0x1
0x22e: V209 = 0xa0
0x230: V210 = 0x2
0x232: V211 = EXP 0x2 0xa0
0x233: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V213 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x238: V214 = 0x0
0x23b: V215 = DIV V203 0x2
0x244: V216 = CALL 0x0 V213 V215 V207 0x0 V207 0x0
0x246: V217 = 0x5
0x248: V218 = S[0x5]
0x249: V219 = 0x2
0x24c: V220 = S[0x2]
0x24d: V221 = 0x1
0x24f: V222 = 0xa0
0x251: V223 = 0x2
0x253: V224 = EXP 0x2 0xa0
0x254: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x258: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x25c: V227 = DIV V220 0x2
0x266: V228 = CALL 0x0 V226 V227 V207 0x0 V207 0x0
0x26a: V229 = 0x2
0x26c: S[0x2] = 0x0
0x26e: V230 = 0x58d15e17628000
0x276: V231 = CALLVALUE
0x277: V232 = EQ V231 0x58d15e17628000
0x278: V233 = ISZERO V232
0x279: V234 = 0x2eb
0x27c: JUMPI 0x2eb V233
---
Entry stack: [V10, S2, {0xf2, 0x1c2}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0xf2, 0x1c2}, 0x0]

================================

Block 0x27d
[0x27d:0x299]
---
Predecessors: [0x219]
Successors: [0x29a, 0x316]
---
0x27d POP
0x27e CALLVALUE
0x27f PUSH1 0x3
0x281 SSTORE
0x282 PUSH1 0x0
0x284 DUP1
0x285 SLOAD
0x286 PUSH1 0x1
0x288 DUP2
0x289 ADD
0x28a DUP1
0x28b DUP4
0x28c SSTORE
0x28d SWAP1
0x28e SWAP2
0x28f DUP2
0x290 DUP4
0x291 DUP1
0x292 ISZERO
0x293 DUP3
0x294 SWAP1
0x295 GT
0x296 PUSH2 0x316
0x299 JUMPI
---
0x27e: V235 = CALLVALUE
0x27f: V236 = 0x3
0x281: S[0x3] = V235
0x282: V237 = 0x0
0x285: V238 = S[0x0]
0x286: V239 = 0x1
0x289: V240 = ADD V238 0x1
0x28c: S[0x0] = V240
0x292: V241 = ISZERO V238
0x295: V242 = GT V241 V240
0x296: V243 = 0x316
0x299: JUMPI 0x316 V242
---
Entry stack: [V10, S2, {0xf2, 0x1c2}, 0x0]
Stack pops: 1
Stack additions: [V238, V240, 0x0, V240, V238]
Exit stack: [V10, S2, {0xf2, 0x1c2}, V238, V240, 0x0, V240, V238]

================================

Block 0x29a
[0x29a:0x2b3]
---
Predecessors: [0x27d]
Successors: [0x2b4]
---
0x29a PUSH1 0x2
0x29c MUL
0x29d DUP2
0x29e PUSH1 0x2
0x2a0 MUL
0x2a1 DUP4
0x2a2 PUSH1 0x0
0x2a4 MSTORE
0x2a5 PUSH1 0x20
0x2a7 PUSH1 0x0
0x2a9 SHA3
0x2aa SWAP2
0x2ab DUP3
0x2ac ADD
0x2ad SWAP2
0x2ae ADD
0x2af PUSH2 0x316
0x2b2 SWAP2
0x2b3 SWAP1
---
0x29a: V244 = 0x2
0x29c: V245 = MUL 0x2 V238
0x29e: V246 = 0x2
0x2a0: V247 = MUL 0x2 V240
0x2a2: V248 = 0x0
0x2a4: M[0x0] = 0x0
0x2a5: V249 = 0x20
0x2a7: V250 = 0x0
0x2a9: V251 = SHA3 0x0 0x20
0x2ac: V252 = ADD V251 V245
0x2ae: V253 = ADD V251 V247
0x2af: V254 = 0x316
---
Entry stack: [V10, S6, {0xf2, 0x1c2}, V238, V240, 0x0, V240, V238]
Stack pops: 3
Stack additions: [S2, S1, 0x316, V252, V253]
Exit stack: [V10, S6, {0xf2, 0x1c2}, V238, V240, 0x0, V240, 0x316, V252, V253]

================================

Block 0x2b4
[0x2b4:0x2bc]
---
Predecessors: [0x29a, 0x2bd]
Successors: [0x2bd, 0x482]
---
0x2b4 JUMPDEST
0x2b5 DUP1
0x2b6 DUP3
0x2b7 GT
0x2b8 ISZERO
0x2b9 PUSH2 0x482
0x2bc JUMPI
---
0x2b4: JUMPDEST 
0x2b7: V255 = GT V252 S0
0x2b8: V256 = ISZERO V255
0x2b9: V257 = 0x482
0x2bc: JUMPI 0x482 V256
---
Entry stack: [V10, S8, {0xf2, 0x1c2}, V238, V240, 0x0, V240, 0x316, V252, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S8, {0xf2, 0x1c2}, V238, V240, 0x0, V240, 0x316, V252, S0]

================================

Block 0x2bd
[0x2bd:0x2e5]
---
Predecessors: [0x2b4]
Successors: [0x2b4]
---
0x2bd DUP1
0x2be SLOAD
0x2bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d4 NOT
0x2d5 AND
0x2d6 DUP2
0x2d7 SSTORE
0x2d8 PUSH1 0x0
0x2da PUSH1 0x1
0x2dc SWAP1
0x2dd SWAP2
0x2de ADD
0x2df SWAP1
0x2e0 DUP2
0x2e1 SSTORE
0x2e2 PUSH2 0x2b4
0x2e5 JUMP
---
0x2be: V258 = S[S0]
0x2bf: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V260 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V261 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V258
0x2d7: S[S0] = V261
0x2d8: V262 = 0x0
0x2da: V263 = 0x1
0x2de: V264 = ADD S0 0x1
0x2e1: S[V264] = 0x0
0x2e2: V265 = 0x2b4
0x2e5: JUMP 0x2b4
---
Entry stack: [V10, S8, {0xf2, 0x1c2}, V238, V240, 0x0, V240, 0x316, V252, S0]
Stack pops: 1
Stack additions: [V264]
Exit stack: [V10, S8, {0xf2, 0x1c2}, V238, V240, 0x0, V240, 0x316, V252, V264]

================================

Block 0x2e6
[0x2e6:0x2ea]
---
Predecessors: [0xf2, 0x313, 0x486]
Successors: [0x313]
---
0x2e6 JUMPDEST
0x2e7 PUSH2 0x313
0x2ea JUMP
---
0x2e6: JUMPDEST 
0x2e7: V266 = 0x313
0x2ea: JUMP 0x313
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x2eb
[0x2eb:0x312]
---
Predecessors: [0x219]
Successors: [0x313]
---
0x2eb JUMPDEST
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef CALLER
0x2f0 PUSH1 0x1
0x2f2 PUSH1 0xa0
0x2f4 PUSH1 0x2
0x2f6 EXP
0x2f7 SUB
0x2f8 AND
0x2f9 SWAP1
0x2fa PUSH1 0x0
0x2fc SWAP1
0x2fd PUSH1 0xa
0x2ff CALLVALUE
0x300 SWAP1
0x301 DUP2
0x302 DIV
0x303 SWAP1
0x304 SUB
0x305 SWAP1
0x306 DUP3
0x307 DUP2
0x308 DUP2
0x309 DUP2
0x30a DUP6
0x30b DUP9
0x30c DUP4
0x30d CALL
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 POP
---
0x2eb: JUMPDEST 
0x2ec: V267 = 0x40
0x2ee: V268 = M[0x40]
0x2ef: V269 = CALLER
0x2f0: V270 = 0x1
0x2f2: V271 = 0xa0
0x2f4: V272 = 0x2
0x2f6: V273 = EXP 0x2 0xa0
0x2f7: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f8: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x2fa: V276 = 0x0
0x2fd: V277 = 0xa
0x2ff: V278 = CALLVALUE
0x302: V279 = DIV V278 0xa
0x304: V280 = SUB V278 V279
0x30d: V281 = CALL 0x0 V275 V280 V268 0x0 V268 0x0
---
Entry stack: [V10, S2, {0xf2, 0x1c2}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0xf2, 0x1c2}, 0x0]

================================

Block 0x313
[0x313:0x315]
---
Predecessors: [0x2e6, 0x2eb, 0x3b3]
Successors: [0xf2, 0x1c2, 0x2e6]
---
0x313 JUMPDEST
0x314 POP
0x315 JUMP
---
0x313: JUMPDEST 
0x315: JUMP S1
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S4, S3, S2]

================================

Block 0x316
[0x316:0x32a]
---
Predecessors: [0x27d, 0x482]
Successors: [0x32b]
---
0x316 JUMPDEST
0x317 POP
0x318 POP
0x319 POP
0x31a POP
0x31b CALLER
0x31c PUSH1 0x0
0x31e PUSH1 0x0
0x320 POP
0x321 DUP3
0x322 DUP2
0x323 SLOAD
0x324 DUP2
0x325 LT
0x326 ISZERO
0x327 PUSH2 0x2
0x32a JUMPI
---
0x316: JUMPDEST 
0x31b: V282 = CALLER
0x31c: V283 = 0x0
0x31e: V284 = 0x0
0x323: V285 = S[0x0]
0x325: V286 = LT V238 V285
0x326: V287 = ISZERO V286
0x327: V288 = 0x2
0x32a: THROWI V287
---
Entry stack: [V10, S6, {0xf2, 0x1c2}, V238, V240, 0x0, V240, S0]
Stack pops: 5
Stack additions: [S4, V282, 0x0, S4]
Exit stack: [V10, S6, {0xf2, 0x1c2}, V238, V282, 0x0, V238]

================================

Block 0x32b
[0x32b:0x370]
---
Predecessors: [0x316]
Successors: [0x371]
---
0x32b DUP2
0x32c DUP1
0x32d MSTORE
0x32e PUSH1 0x2
0x330 DUP2
0x331 MUL
0x332 PUSH1 0x0
0x334 DUP1
0x335 MLOAD
0x336 PUSH1 0x20
0x338 PUSH2 0x4af
0x33b DUP4
0x33c CODECOPY
0x33d DUP2
0x33e MLOAD
0x33f SWAP2
0x340 MSTORE
0x341 ADD
0x342 DUP1
0x343 SLOAD
0x344 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x359 NOT
0x35a AND
0x35b SWAP1
0x35c SWAP4
0x35d OR
0x35e SWAP1
0x35f SWAP3
0x360 SSTORE
0x361 DUP1
0x362 SLOAD
0x363 PUSH1 0x3
0x365 SLOAD
0x366 SWAP3
0x367 POP
0x368 DUP4
0x369 SWAP1
0x36a DUP2
0x36b LT
0x36c ISZERO
0x36d PUSH2 0x2
0x370 JUMPI
---
0x32d: M[0x0] = 0x0
0x32e: V289 = 0x2
0x331: V290 = MUL V238 0x2
0x332: V291 = 0x0
0x335: V292 = M[0x0]
0x336: V293 = 0x20
0x338: V294 = 0x4af
0x33c: CODECOPY 0x0 0x4af 0x20
0x33e: V295 = M[0x0]
0x340: M[0x0] = V292
0x341: V296 = ADD V295 V290
0x343: V297 = S[V296]
0x344: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x359: V299 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V300 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V297
0x35d: V301 = OR V282 V300
0x360: S[V296] = V301
0x362: V302 = S[0x0]
0x363: V303 = 0x3
0x365: V304 = S[0x3]
0x36b: V305 = LT V238 V302
0x36c: V306 = ISZERO V305
0x36d: V307 = 0x2
0x370: THROWI V306
---
Entry stack: [V10, S5, {0xf2, 0x1c2}, V238, V282, 0x0, V238]
Stack pops: 4
Stack additions: [S3, V304, S1, S3]
Exit stack: [V10, S5, {0xf2, 0x1c2}, V238, V304, 0x0, V238]

================================

Block 0x371
[0x371:0x39f]
---
Predecessors: [0x32b]
Successors: [0x3a0]
---
0x371 POP
0x372 PUSH1 0x2
0x374 DUP4
0x375 MUL
0x376 PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564
0x397 ADD
0x398 SWAP2
0x399 SWAP1
0x39a SWAP2
0x39b SSTORE
0x39c PUSH2 0x2e6
0x39f SWAP1
---
0x372: V308 = 0x2
0x375: V309 = MUL V238 0x2
0x376: V310 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564
0x397: V311 = ADD 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564 V309
0x39b: S[V311] = V304
0x39c: V312 = 0x2e6
---
Entry stack: [V10, S5, {0xf2, 0x1c2}, V238, V304, 0x0, V238]
Stack pops: 4
Stack additions: [S3, 0x2e6, S1]
Exit stack: [V10, S5, {0xf2, 0x1c2}, V238, 0x2e6, 0x0]

================================

Block 0x3a0
[0x3a0:0x3b2]
---
Predecessors: [0x371, 0x43a]
Successors: [0x3b3]
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 SLOAD
0x3a5 PUSH1 0x1
0x3a7 SLOAD
0x3a8 PUSH1 0x64
0x3aa SWAP3
0x3ab SWAP2
0x3ac DUP2
0x3ad LT
0x3ae ISZERO
0x3af PUSH2 0x2
0x3b2 JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V313 = 0x0
0x3a4: V314 = S[0x0]
0x3a5: V315 = 0x1
0x3a7: V316 = S[0x1]
0x3a8: V317 = 0x64
0x3ad: V318 = LT V316 V314
0x3ae: V319 = ISZERO V318
0x3af: V320 = 0x2
0x3b2: THROWI V319
---
Entry stack: [V10, S4, {0xf2, 0x1c2}, V238, 0x2e6, S0]
Stack pops: 0
Stack additions: [0x64, 0x0, V316]
Exit stack: [V10, S4, {0xf2, 0x1c2}, V238, 0x2e6, S0, 0x64, 0x0, V316]

================================

Block 0x3b3
[0x3b3:0x3ee]
---
Predecessors: [0x3a0]
Successors: [0x313, 0x3ef]
---
0x3b3 DUP2
0x3b4 DUP1
0x3b5 MSTORE
0x3b6 PUSH1 0x2
0x3b8 MUL
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc MLOAD
0x3bd PUSH1 0x20
0x3bf PUSH2 0x4af
0x3c2 DUP4
0x3c3 CODECOPY
0x3c4 DUP2
0x3c5 MLOAD
0x3c6 SWAP2
0x3c7 MSTORE
0x3c8 ADD
0x3c9 SWAP1
0x3ca POP
0x3cb PUSH1 0x6
0x3cd SLOAD
0x3ce PUSH1 0x1
0x3d0 SWAP2
0x3d1 SWAP1
0x3d2 SWAP2
0x3d3 ADD
0x3d4 SLOAD
0x3d5 SWAP2
0x3d6 SWAP1
0x3d7 SWAP2
0x3d8 DIV
0x3d9 PUSH1 0x73
0x3db MUL
0x3dc PUSH1 0x1
0x3de PUSH1 0xa0
0x3e0 PUSH1 0x2
0x3e2 EXP
0x3e3 SUB
0x3e4 SWAP2
0x3e5 SWAP1
0x3e6 SWAP2
0x3e7 AND
0x3e8 BALANCE
0x3e9 GT
0x3ea ISZERO
0x3eb PUSH2 0x313
0x3ee JUMPI
---
0x3b5: M[0x0] = 0x0
0x3b6: V321 = 0x2
0x3b8: V322 = MUL 0x2 V316
0x3b9: V323 = 0x0
0x3bc: V324 = M[0x0]
0x3bd: V325 = 0x20
0x3bf: V326 = 0x4af
0x3c3: CODECOPY 0x0 0x4af 0x20
0x3c5: V327 = M[0x0]
0x3c7: M[0x0] = V324
0x3c8: V328 = ADD V327 V322
0x3cb: V329 = 0x6
0x3cd: V330 = S[0x6]
0x3ce: V331 = 0x1
0x3d3: V332 = ADD 0x1 V328
0x3d4: V333 = S[V332]
0x3d8: V334 = DIV V333 0x64
0x3d9: V335 = 0x73
0x3db: V336 = MUL 0x73 V334
0x3dc: V337 = 0x1
0x3de: V338 = 0xa0
0x3e0: V339 = 0x2
0x3e2: V340 = EXP 0x2 0xa0
0x3e3: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e7: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x3e8: V343 = BALANCE V342
0x3e9: V344 = GT V343 V336
0x3ea: V345 = ISZERO V344
0x3eb: V346 = 0x313
0x3ee: JUMPI 0x313 V345
---
Entry stack: [V10, S7, {0xf2, 0x1c2}, V238, 0x2e6, S3, 0x64, 0x0, V316]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0xf2, 0x1c2}, V238, 0x2e6, S3]

================================

Block 0x3ef
[0x3ef:0x400]
---
Predecessors: [0x3b3]
Successors: [0x401]
---
0x3ef PUSH1 0x1
0x3f1 SLOAD
0x3f2 PUSH1 0x0
0x3f4 DUP1
0x3f5 SLOAD
0x3f6 PUSH1 0x64
0x3f8 SWAP3
0x3f9 SWAP1
0x3fa DUP2
0x3fb LT
0x3fc ISZERO
0x3fd PUSH2 0x2
0x400 JUMPI
---
0x3ef: V347 = 0x1
0x3f1: V348 = S[0x1]
0x3f2: V349 = 0x0
0x3f5: V350 = S[0x0]
0x3f6: V351 = 0x64
0x3fb: V352 = LT V348 V350
0x3fc: V353 = ISZERO V352
0x3fd: V354 = 0x2
0x400: THROWI V353
---
Entry stack: [V10, S4, {0xf2, 0x1c2}, V238, 0x2e6, S0]
Stack pops: 0
Stack additions: [0x64, 0x0, V348]
Exit stack: [V10, S4, {0xf2, 0x1c2}, V238, 0x2e6, S0, 0x64, 0x0, V348]

================================

Block 0x401
[0x401:0x439]
---
Predecessors: [0x3ef]
Successors: [0x43a]
---
0x401 DUP2
0x402 DUP1
0x403 MSTORE
0x404 PUSH1 0x2
0x406 MUL
0x407 PUSH1 0x0
0x409 DUP1
0x40a MLOAD
0x40b PUSH1 0x20
0x40d PUSH2 0x4af
0x410 DUP4
0x411 CODECOPY
0x412 DUP2
0x413 MLOAD
0x414 SWAP2
0x415 MSTORE
0x416 ADD
0x417 SWAP1
0x418 POP
0x419 PUSH1 0x1
0x41b ADD
0x41c PUSH1 0x0
0x41e POP
0x41f SLOAD
0x420 DIV
0x421 PUSH1 0x73
0x423 MUL
0x424 SWAP1
0x425 POP
0x426 PUSH1 0x0
0x428 PUSH1 0x0
0x42a POP
0x42b PUSH1 0x1
0x42d PUSH1 0x0
0x42f POP
0x430 SLOAD
0x431 DUP2
0x432 SLOAD
0x433 DUP2
0x434 LT
0x435 ISZERO
0x436 PUSH2 0x2
0x439 JUMPI
---
0x403: M[0x0] = 0x0
0x404: V355 = 0x2
0x406: V356 = MUL 0x2 V348
0x407: V357 = 0x0
0x40a: V358 = M[0x0]
0x40b: V359 = 0x20
0x40d: V360 = 0x4af
0x411: CODECOPY 0x0 0x4af 0x20
0x413: V361 = M[0x0]
0x415: M[0x0] = V358
0x416: V362 = ADD V361 V356
0x419: V363 = 0x1
0x41b: V364 = ADD 0x1 V362
0x41c: V365 = 0x0
0x41f: V366 = S[V364]
0x420: V367 = DIV V366 0x64
0x421: V368 = 0x73
0x423: V369 = MUL 0x73 V367
0x426: V370 = 0x0
0x428: V371 = 0x0
0x42b: V372 = 0x1
0x42d: V373 = 0x0
0x430: V374 = S[0x1]
0x432: V375 = S[0x0]
0x434: V376 = LT V374 V375
0x435: V377 = ISZERO V376
0x436: V378 = 0x2
0x439: THROWI V377
---
Entry stack: [V10, S7, {0xf2, 0x1c2}, V238, 0x2e6, S3, 0x64, 0x0, V348]
Stack pops: 4
Stack additions: [V369, 0x0, V374]
Exit stack: [V10, S7, {0xf2, 0x1c2}, V238, 0x2e6, V369, 0x0, V374]

================================

Block 0x43a
[0x43a:0x481]
---
Predecessors: [0x401]
Successors: [0x3a0]
---
0x43a DUP2
0x43b DUP1
0x43c MSTORE
0x43d PUSH1 0x2
0x43f MUL
0x440 PUSH1 0x0
0x442 DUP1
0x443 MLOAD
0x444 PUSH1 0x20
0x446 PUSH2 0x4af
0x449 DUP4
0x44a CODECOPY
0x44b DUP2
0x44c MLOAD
0x44d SWAP2
0x44e MSTORE
0x44f ADD
0x450 SWAP1
0x451 POP
0x452 SLOAD
0x453 PUSH1 0x40
0x455 MLOAD
0x456 PUSH1 0x1
0x458 PUSH1 0xa0
0x45a PUSH1 0x2
0x45c EXP
0x45d SUB
0x45e SWAP2
0x45f SWAP1
0x460 SWAP2
0x461 AND
0x462 SWAP1
0x463 PUSH1 0x0
0x465 SWAP1
0x466 DUP4
0x467 SWAP1
0x468 DUP3
0x469 DUP2
0x46a DUP2
0x46b DUP2
0x46c DUP6
0x46d DUP9
0x46e DUP4
0x46f CALL
0x470 POP
0x471 POP
0x472 PUSH1 0x1
0x474 DUP1
0x475 SLOAD
0x476 DUP2
0x477 ADD
0x478 SWAP1
0x479 SSTORE
0x47a POP
0x47b PUSH2 0x3a0
0x47e SWAP2
0x47f POP
0x480 POP
0x481 JUMP
---
0x43c: M[0x0] = 0x0
0x43d: V379 = 0x2
0x43f: V380 = MUL 0x2 V374
0x440: V381 = 0x0
0x443: V382 = M[0x0]
0x444: V383 = 0x20
0x446: V384 = 0x4af
0x44a: CODECOPY 0x0 0x4af 0x20
0x44c: V385 = M[0x0]
0x44e: M[0x0] = V382
0x44f: V386 = ADD V385 V380
0x452: V387 = S[V386]
0x453: V388 = 0x40
0x455: V389 = M[0x40]
0x456: V390 = 0x1
0x458: V391 = 0xa0
0x45a: V392 = 0x2
0x45c: V393 = EXP 0x2 0xa0
0x45d: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x463: V396 = 0x0
0x46f: V397 = CALL 0x0 V395 V369 V389 0x0 V389 0x0
0x472: V398 = 0x1
0x475: V399 = S[0x1]
0x477: V400 = ADD 0x1 V399
0x479: S[0x1] = V400
0x47b: V401 = 0x3a0
0x481: JUMP 0x3a0
---
Entry stack: [V10, S6, {0xf2, 0x1c2}, V238, 0x2e6, V369, 0x0, V374]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V10, S6, {0xf2, 0x1c2}, V238, 0x2e6, V369]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x2b4]
Successors: [0x316]
---
0x482 JUMPDEST
0x483 POP
0x484 SWAP1
0x485 JUMP
---
0x482: JUMPDEST 
0x485: JUMP 0x316
---
Entry stack: [V10, S8, {0xf2, 0x1c2}, V238, V240, 0x0, V240, 0x316, V252, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S8, {0xf2, 0x1c2}, V238, V240, 0x0, V240, V252]

================================

Block 0x486
[0x486:0x4ae]
---
Predecessors: [0xab]
Successors: [0x1c2, 0x2e6]
---
0x486 JUMPDEST
0x487 PUSH1 0x40
0x489 MLOAD
0x48a PUSH1 0x6
0x48c SLOAD
0x48d PUSH1 0x1
0x48f PUSH1 0xa0
0x491 PUSH1 0x2
0x493 EXP
0x494 SUB
0x495 CALLER
0x496 DUP2
0x497 AND
0x498 SWAP3
0x499 PUSH1 0x0
0x49b SWAP3
0x49c SWAP1
0x49d SWAP2
0x49e AND
0x49f BALANCE
0x4a0 SWAP1
0x4a1 DUP3
0x4a2 DUP2
0x4a3 DUP2
0x4a4 DUP2
0x4a5 DUP6
0x4a6 DUP9
0x4a7 DUP4
0x4a8 CALL
0x4a9 POP
0x4aa POP
0x4ab POP
0x4ac POP
0x4ad POP
0x4ae JUMP
---
0x486: JUMPDEST 
0x487: V402 = 0x40
0x489: V403 = M[0x40]
0x48a: V404 = 0x6
0x48c: V405 = S[0x6]
0x48d: V406 = 0x1
0x48f: V407 = 0xa0
0x491: V408 = 0x2
0x493: V409 = EXP 0x2 0xa0
0x494: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x495: V411 = CALLER
0x497: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x499: V413 = 0x0
0x49e: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x49f: V415 = BALANCE V414
0x4a8: V416 = CALL 0x0 V412 V415 V403 0x0 V403 0x0
0x4ae: JUMP {0x1c2, 0x2e6}
---
Entry stack: [V10, S3, {0xf2, 0x1c2}, S1, {0x1c2, 0x2e6}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S3, {0xf2, 0x1c2}, S1]

================================

Block 0x4af
[0x4af:0x4d2]
---
Predecessors: []
Successors: []
---
0x4af MISSING 0x29
0x4b0 MISSING 0xd
0x4b1 MISSING 0xec
0x4b2 MISSING 0xd9
0x4b3 SLOAD
0x4b4 DUP12
0x4b5 PUSH3 0xa8d603
0x4b9 GASLIMIT
0x4ba MISSING 0xa9
0x4bb DUP9
0x4bc CODESIZE
0x4bd PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x4ce PUSH4 0x0
---
0x4af: MISSING 0x29
0x4b0: MISSING 0xd
0x4b1: MISSING 0xec
0x4b2: MISSING 0xd9
0x4b3: V417 = S[S0]
0x4b5: V418 = 0xa8d603
0x4b9: V419 = GASLIMIT
0x4ba: MISSING 0xa9
0x4bc: V420 = CODESIZE
0x4bd: V421 = 0xc84ba6bc95484008f6362f93160ef3e5
0x4ce: V422 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V419, 0xa8d603, S11, V417, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x0, 0xc84ba6bc95484008f6362f93160ef3e5, V420, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x39a248f3
Entry block: 0x6c
Exit block: 0x1c4
Body: 0x6c, 0x1c4

Function 1:
Public function signature: 0x75b9c384
Entry block: 0x75
Exit block: 0x1c2
Body: 0x75, 0x79, 0x91, 0xa5, 0xab, 0xca, 0xf2, 0x1c2, 0x2e6, 0x313, 0x486

Function 2:
Public function signature: 0x7a5c8432
Entry block: 0xf4
Exit block: 0x1c4
Body: 0xf4, 0x1c4

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xfd
Exit block: 0x1d6
Body: 0xfd, 0x1d6

Function 4:
Public function signature: 0xa2f9eac6
Entry block: 0x10f
Exit block: 0x1f3
Body: 0x10f, 0x123, 0x1f3

Function 5:
Public function signature: 0xca4b208b
Entry block: 0x170
Exit block: 0x1d6
Body: 0x170, 0x1d6

Function 6:
Public function signature: 0xe97dcb62
Entry block: 0x182
Exit block: 0x1c2
Body: 0x79, 0x91, 0xa5, 0xab, 0xca, 0xf2, 0x182, 0x186, 0x1a1, 0x1b5, 0x1bb, 0x1c2, 0x219, 0x27d, 0x29a, 0x2b4, 0x2bd, 0x2e6, 0x2eb, 0x313, 0x316, 0x32b, 0x371, 0x3a0, 0x3b3, 0x3ef, 0x401, 0x43a, 0x482, 0x486

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x1c2
Body: 0x61, 0x79, 0x91, 0xa5, 0xab, 0xca, 0xf2, 0x186, 0x1a1, 0x1b5, 0x1bb, 0x1c2, 0x219, 0x27d, 0x29a, 0x2b4, 0x2bd, 0x2e6, 0x2eb, 0x313, 0x316, 0x32b, 0x371, 0x3a0, 0x3b3, 0x3ef, 0x401, 0x43a, 0x482, 0x486

