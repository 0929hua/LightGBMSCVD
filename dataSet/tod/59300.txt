Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2e1a7d4d
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x84
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2e1a7d4d
0x3b: V13 = EQ V11 0x2e1a7d4d
0x3c: V14 = 0x84
0x3f: JUMPI 0x84 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8f]
---
0x40 DUP1
0x41 PUSH4 0x853828b6
0x46 EQ
0x47 PUSH2 0x8f
0x4a JUMPI
---
0x41: V15 = 0x853828b6
0x46: V16 = EQ 0x853828b6 V11
0x47: V17 = 0x8f
0x4a: JUMPI 0x8f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x97]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0x97
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0x97
0x55: JUMPI 0x97 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xc8]
---
0x56 DUP1
0x57 PUSH4 0xa6f9dae1
0x5c EQ
0x5d PUSH2 0xc8
0x60 JUMPI
---
0x57: V21 = 0xa6f9dae1
0x5c: V22 = EQ 0xa6f9dae1 V11
0x5d: V23 = 0xc8
0x60: JUMPI 0xc8 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xe9]
---
0x61 DUP1
0x62 PUSH4 0xc71daccb
0x67 EQ
0x68 PUSH2 0xe9
0x6b JUMPI
---
0x62: V24 = 0xc71daccb
0x67: V25 = EQ 0xc71daccb V11
0x68: V26 = 0xe9
0x6b: JUMPI 0xe9 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x110]
---
0x6c DUP1
0x6d PUSH4 0xcfe52bdd
0x72 EQ
0x73 PUSH2 0x110
0x76 JUMPI
---
0x6d: V27 = 0xcfe52bdd
0x72: V28 = EQ 0xcfe52bdd V11
0x73: V29 = 0x110
0x76: JUMPI 0x110 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x124]
---
0x77 DUP1
0x78 PUSH4 0xd1aea543
0x7d EQ
0x7e PUSH2 0x124
0x81 JUMPI
---
0x78: V30 = 0xd1aea543
0x7d: V31 = EQ 0xd1aea543 V11
0x7e: V32 = 0x124
0x81: JUMPI 0x124 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x1bc, 0x26e, 0x2fb, 0x437, 0x4ee]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x8e]
---
Predecessors: [0xd]
Successors: [0x138]
---
0x84 JUMPDEST
0x85 PUSH2 0x82
0x88 PUSH1 0x4
0x8a CALLDATALOAD
0x8b PUSH2 0x138
0x8e JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x82
0x88: V34 = 0x4
0x8a: V35 = CALLDATALOAD 0x4
0x8b: V36 = 0x138
0x8e: JUMP 0x138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V35]
Exit stack: [V11, 0x82, V35]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0x40]
Successors: [0x1e8]
---
0x8f JUMPDEST
0x90 PUSH2 0x82
0x93 PUSH2 0x1e8
0x96 JUMP
---
0x8f: JUMPDEST 
0x90: V37 = 0x82
0x93: V38 = 0x1e8
0x96: JUMP 0x1e8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x97
[0x97:0x9e]
---
Predecessors: [0x4b]
Successors: [0x9f, 0xa3]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 DUP1
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x97: JUMPDEST 
0x98: V39 = CALLVALUE
0x9a: V40 = ISZERO V39
0x9b: V41 = 0xa3
0x9e: JUMPI 0xa3 V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V11, V39]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x97]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V42 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V11, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V39]

================================

Block 0xa3
[0xa3:0xab]
---
Predecessors: [0x97]
Successors: [0x29b]
---
0xa3 JUMPDEST
0xa4 POP
0xa5 PUSH2 0xac
0xa8 PUSH2 0x29b
0xab JUMP
---
0xa3: JUMPDEST 
0xa5: V43 = 0xac
0xa8: V44 = 0x29b
0xab: JUMP 0x29b
---
Entry stack: [V11, V39]
Stack pops: 1
Stack additions: [0xac]
Exit stack: [V11, 0xac]

================================

Block 0xac
[0xac:0xc7]
---
Predecessors: [0x29b]
Successors: []
---
0xac JUMPDEST
0xad PUSH1 0x40
0xaf DUP1
0xb0 MLOAD
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 SWAP1
0xba SWAP3
0xbb AND
0xbc DUP3
0xbd MSTORE
0xbe MLOAD
0xbf SWAP1
0xc0 DUP2
0xc1 SWAP1
0xc2 SUB
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP1
0xc7 RETURN
---
0xac: JUMPDEST 
0xad: V45 = 0x40
0xb0: V46 = M[0x40]
0xb1: V47 = 0x1
0xb3: V48 = 0xa0
0xb5: V49 = 0x2
0xb7: V50 = EXP 0x2 0xa0
0xb8: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V52 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0xbd: M[V46] = V52
0xbe: V53 = M[0x40]
0xc2: V54 = SUB V46 V53
0xc3: V55 = 0x20
0xc5: V56 = ADD 0x20 V54
0xc7: RETURN V53 V56
---
Entry stack: [V11, 0xac, V248]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xac]

================================

Block 0xc8
[0xc8:0xcf]
---
Predecessors: [0x56]
Successors: [0xd0, 0xd4]
---
0xc8 JUMPDEST
0xc9 CALLVALUE
0xca DUP1
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc8: JUMPDEST 
0xc9: V57 = CALLVALUE
0xcb: V58 = ISZERO V57
0xcc: V59 = 0xd4
0xcf: JUMPI 0xd4 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc8]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V60 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0xd4
[0xd4:0xe8]
---
Predecessors: [0xc8]
Successors: [0x2aa]
---
0xd4 JUMPDEST
0xd5 POP
0xd6 PUSH2 0x82
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 PUSH1 0x4
0xe3 CALLDATALOAD
0xe4 AND
0xe5 PUSH2 0x2aa
0xe8 JUMP
---
0xd4: JUMPDEST 
0xd6: V61 = 0x82
0xd9: V62 = 0x1
0xdb: V63 = 0xa0
0xdd: V64 = 0x2
0xdf: V65 = EXP 0x2 0xa0
0xe0: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1: V67 = 0x4
0xe3: V68 = CALLDATALOAD 0x4
0xe4: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V70 = 0x2aa
0xe8: JUMP 0x2aa
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x82, V69]
Exit stack: [V11, 0x82, V69]

================================

Block 0xe9
[0xe9:0xf0]
---
Predecessors: [0x61]
Successors: [0xf1, 0xf5]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb DUP1
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xe9: JUMPDEST 
0xea: V71 = CALLVALUE
0xec: V72 = ISZERO V71
0xed: V73 = 0xf5
0xf0: JUMPI 0xf5 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V11, V71]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xe9]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V74 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V11, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V71]

================================

Block 0xf5
[0xf5:0xfd]
---
Predecessors: [0xe9]
Successors: [0x32b]
---
0xf5 JUMPDEST
0xf6 POP
0xf7 PUSH2 0xfe
0xfa PUSH2 0x32b
0xfd JUMP
---
0xf5: JUMPDEST 
0xf7: V75 = 0xfe
0xfa: V76 = 0x32b
0xfd: JUMP 0x32b
---
Entry stack: [V11, V71]
Stack pops: 1
Stack additions: [0xfe]
Exit stack: [V11, 0xfe]

================================

Block 0xfe
[0xfe:0x10f]
---
Predecessors: [0x37d]
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 DUP1
0x102 MLOAD
0x103 SWAP2
0x104 DUP3
0x105 MSTORE
0x106 MLOAD
0x107 SWAP1
0x108 DUP2
0x109 SWAP1
0x10a SUB
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f RETURN
---
0xfe: JUMPDEST 
0xff: V77 = 0x40
0x102: V78 = M[0x40]
0x105: M[V78] = V332
0x106: V79 = M[0x40]
0x10a: V80 = SUB V78 V79
0x10b: V81 = 0x20
0x10d: V82 = ADD 0x20 V80
0x10f: RETURN V79 V82
---
Entry stack: [V11, V332]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x110
[0x110:0x123]
---
Predecessors: [0x6c]
Successors: [0x384]
---
0x110 JUMPDEST
0x111 PUSH2 0x82
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c PUSH1 0x4
0x11e CALLDATALOAD
0x11f AND
0x120 PUSH2 0x384
0x123 JUMP
---
0x110: JUMPDEST 
0x111: V83 = 0x82
0x114: V84 = 0x1
0x116: V85 = 0xa0
0x118: V86 = 0x2
0x11a: V87 = EXP 0x2 0xa0
0x11b: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V89 = 0x4
0x11e: V90 = CALLDATALOAD 0x4
0x11f: V91 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x120: V92 = 0x384
0x123: JUMP 0x384
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V91]
Exit stack: [V11, 0x82, V91]

================================

Block 0x124
[0x124:0x137]
---
Predecessors: [0x77]
Successors: [0x43b]
---
0x124 JUMPDEST
0x125 PUSH2 0x82
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 PUSH1 0x4
0x132 CALLDATALOAD
0x133 AND
0x134 PUSH2 0x43b
0x137 JUMP
---
0x124: JUMPDEST 
0x125: V93 = 0x82
0x128: V94 = 0x1
0x12a: V95 = 0xa0
0x12c: V96 = 0x2
0x12e: V97 = EXP 0x2 0xa0
0x12f: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130: V99 = 0x4
0x132: V100 = CALLDATALOAD 0x4
0x133: V101 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x134: V102 = 0x43b
0x137: JUMP 0x43b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V101]
Exit stack: [V11, 0x82, V101]

================================

Block 0x138
[0x138:0x14b]
---
Predecessors: [0x84]
Successors: [0x14c, 0x189]
---
0x138 JUMPDEST
0x139 PUSH1 0x0
0x13b SLOAD
0x13c PUSH1 0x1
0x13e PUSH1 0xa0
0x140 PUSH1 0x2
0x142 EXP
0x143 SUB
0x144 AND
0x145 CALLER
0x146 DUP2
0x147 EQ
0x148 PUSH2 0x189
0x14b JUMPI
---
0x138: JUMPDEST 
0x139: V103 = 0x0
0x13b: V104 = S[0x0]
0x13c: V105 = 0x1
0x13e: V106 = 0xa0
0x140: V107 = 0x2
0x142: V108 = EXP 0x2 0xa0
0x143: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x144: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x145: V111 = CALLER
0x147: V112 = EQ V110 V111
0x148: V113 = 0x189
0x14b: JUMPI 0x189 V112
---
Entry stack: [V11, 0x82, V35]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V11, 0x82, V35, V110]

================================

Block 0x14c
[0x14c:0x188]
---
Predecessors: [0x138]
Successors: []
---
0x14c PUSH1 0x40
0x14e DUP1
0x14f MLOAD
0x150 PUSH1 0xe5
0x152 PUSH1 0x2
0x154 EXP
0x155 PUSH3 0x461bcd
0x159 MUL
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e PUSH1 0x4
0x160 DUP3
0x161 ADD
0x162 MSTORE
0x163 PUSH1 0x16
0x165 PUSH1 0x24
0x167 DUP3
0x168 ADD
0x169 MSTORE
0x16a PUSH1 0x0
0x16c DUP1
0x16d MLOAD
0x16e PUSH1 0x20
0x170 PUSH2 0x517
0x173 DUP4
0x174 CODECOPY
0x175 DUP2
0x176 MLOAD
0x177 SWAP2
0x178 MSTORE
0x179 PUSH1 0x44
0x17b DUP3
0x17c ADD
0x17d MSTORE
0x17e SWAP1
0x17f MLOAD
0x180 SWAP1
0x181 DUP2
0x182 SWAP1
0x183 SUB
0x184 PUSH1 0x64
0x186 ADD
0x187 SWAP1
0x188 REVERT
---
0x14c: V114 = 0x40
0x14f: V115 = M[0x40]
0x150: V116 = 0xe5
0x152: V117 = 0x2
0x154: V118 = EXP 0x2 0xe5
0x155: V119 = 0x461bcd
0x159: V120 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x15b: M[V115] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x15c: V121 = 0x20
0x15e: V122 = 0x4
0x161: V123 = ADD V115 0x4
0x162: M[V123] = 0x20
0x163: V124 = 0x16
0x165: V125 = 0x24
0x168: V126 = ADD V115 0x24
0x169: M[V126] = 0x16
0x16a: V127 = 0x0
0x16d: V128 = M[0x0]
0x16e: V129 = 0x20
0x170: V130 = 0x517
0x174: CODECOPY 0x0 0x517 0x20
0x176: V131 = M[0x0]
0x178: M[0x0] = V128
0x179: V132 = 0x44
0x17c: V133 = ADD V115 0x44
0x17d: M[V133] = V131
0x17f: V134 = M[0x40]
0x183: V135 = SUB V115 V134
0x184: V136 = 0x64
0x186: V137 = ADD 0x64 V135
0x188: REVERT V134 V137
---
Entry stack: [V11, 0x82, V35, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V35, V110]

================================

Block 0x189
[0x189:0x1b7]
---
Predecessors: [0x138]
Successors: [0x1b8, 0x1bc]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c DUP1
0x18d SLOAD
0x18e PUSH1 0x40
0x190 MLOAD
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 PUSH1 0x2
0x197 EXP
0x198 SUB
0x199 SWAP1
0x19a SWAP2
0x19b AND
0x19c SWAP2
0x19d DUP5
0x19e ISZERO
0x19f PUSH2 0x8fc
0x1a2 MUL
0x1a3 SWAP2
0x1a4 DUP6
0x1a5 SWAP2
0x1a6 DUP2
0x1a7 DUP2
0x1a8 DUP2
0x1a9 DUP6
0x1aa DUP9
0x1ab DUP9
0x1ac CALL
0x1ad SWAP4
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 ISZERO
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x189: JUMPDEST 
0x18a: V138 = 0x0
0x18d: V139 = S[0x0]
0x18e: V140 = 0x40
0x190: V141 = M[0x40]
0x191: V142 = 0x1
0x193: V143 = 0xa0
0x195: V144 = 0x2
0x197: V145 = EXP 0x2 0xa0
0x198: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V147 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V148 = ISZERO V35
0x19f: V149 = 0x8fc
0x1a2: V150 = MUL 0x8fc V148
0x1ac: V151 = CALL V150 V147 V35 V141 0x0 V141 0x0
0x1b2: V152 = ISZERO V151
0x1b3: V153 = ISZERO V152
0x1b4: V154 = 0x1bc
0x1b7: JUMPI 0x1bc V153
---
Entry stack: [V11, 0x82, V35, V110]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x82, V35, V110]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x189]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V155 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V35, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V35, V110]

================================

Block 0x1bc
[0x1bc:0x1e7]
---
Predecessors: [0x189]
Successors: [0x82]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 SLOAD
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 PUSH1 0x1
0x1c6 PUSH1 0xa0
0x1c8 PUSH1 0x2
0x1ca EXP
0x1cb SUB
0x1cc SWAP1
0x1cd SWAP2
0x1ce AND
0x1cf SWAP2
0x1d0 DUP5
0x1d1 ISZERO
0x1d2 PUSH2 0x8fc
0x1d5 MUL
0x1d6 SWAP2
0x1d7 DUP6
0x1d8 SWAP2
0x1d9 DUP2
0x1da DUP2
0x1db DUP2
0x1dc DUP6
0x1dd DUP9
0x1de DUP9
0x1df CALL
0x1e0 POP
0x1e1 POP
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V156 = 0x0
0x1c0: V157 = S[0x0]
0x1c1: V158 = 0x40
0x1c3: V159 = M[0x40]
0x1c4: V160 = 0x1
0x1c6: V161 = 0xa0
0x1c8: V162 = 0x2
0x1ca: V163 = EXP 0x2 0xa0
0x1cb: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ce: V165 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V166 = ISZERO V35
0x1d2: V167 = 0x8fc
0x1d5: V168 = MUL 0x8fc V166
0x1df: V169 = CALL V168 V165 V35 V159 0x0 V159 0x0
0x1e7: JUMP 0x82
---
Entry stack: [V11, 0x82, V35, V110]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e8
[0x1e8:0x1fb]
---
Predecessors: [0x8f]
Successors: [0x1fc, 0x239]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb SLOAD
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 AND
0x1f5 CALLER
0x1f6 DUP2
0x1f7 EQ
0x1f8 PUSH2 0x239
0x1fb JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V170 = 0x0
0x1eb: V171 = S[0x0]
0x1ec: V172 = 0x1
0x1ee: V173 = 0xa0
0x1f0: V174 = 0x2
0x1f2: V175 = EXP 0x2 0xa0
0x1f3: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x1f5: V178 = CALLER
0x1f7: V179 = EQ V177 V178
0x1f8: V180 = 0x239
0x1fb: JUMPI 0x239 V179
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V11, 0x82, V177]

================================

Block 0x1fc
[0x1fc:0x238]
---
Predecessors: [0x1e8]
Successors: []
---
0x1fc PUSH1 0x40
0x1fe DUP1
0x1ff MLOAD
0x200 PUSH1 0xe5
0x202 PUSH1 0x2
0x204 EXP
0x205 PUSH3 0x461bcd
0x209 MUL
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x20
0x20e PUSH1 0x4
0x210 DUP3
0x211 ADD
0x212 MSTORE
0x213 PUSH1 0x16
0x215 PUSH1 0x24
0x217 DUP3
0x218 ADD
0x219 MSTORE
0x21a PUSH1 0x0
0x21c DUP1
0x21d MLOAD
0x21e PUSH1 0x20
0x220 PUSH2 0x517
0x223 DUP4
0x224 CODECOPY
0x225 DUP2
0x226 MLOAD
0x227 SWAP2
0x228 MSTORE
0x229 PUSH1 0x44
0x22b DUP3
0x22c ADD
0x22d MSTORE
0x22e SWAP1
0x22f MLOAD
0x230 SWAP1
0x231 DUP2
0x232 SWAP1
0x233 SUB
0x234 PUSH1 0x64
0x236 ADD
0x237 SWAP1
0x238 REVERT
---
0x1fc: V181 = 0x40
0x1ff: V182 = M[0x40]
0x200: V183 = 0xe5
0x202: V184 = 0x2
0x204: V185 = EXP 0x2 0xe5
0x205: V186 = 0x461bcd
0x209: V187 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x20b: M[V182] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x20c: V188 = 0x20
0x20e: V189 = 0x4
0x211: V190 = ADD V182 0x4
0x212: M[V190] = 0x20
0x213: V191 = 0x16
0x215: V192 = 0x24
0x218: V193 = ADD V182 0x24
0x219: M[V193] = 0x16
0x21a: V194 = 0x0
0x21d: V195 = M[0x0]
0x21e: V196 = 0x20
0x220: V197 = 0x517
0x224: CODECOPY 0x0 0x517 0x20
0x226: V198 = M[0x0]
0x228: M[0x0] = V195
0x229: V199 = 0x44
0x22c: V200 = ADD V182 0x44
0x22d: M[V200] = V198
0x22f: V201 = M[0x40]
0x233: V202 = SUB V182 V201
0x234: V203 = 0x64
0x236: V204 = ADD 0x64 V202
0x238: REVERT V201 V204
---
Entry stack: [V11, 0x82, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V177]

================================

Block 0x239
[0x239:0x269]
---
Predecessors: [0x1e8]
Successors: [0x26a, 0x26e]
---
0x239 JUMPDEST
0x23a PUSH1 0x0
0x23c DUP1
0x23d SLOAD
0x23e PUSH1 0x40
0x240 MLOAD
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 SWAP1
0x24a SWAP2
0x24b AND
0x24c SWAP2
0x24d ADDRESS
0x24e BALANCE
0x24f DUP1
0x250 ISZERO
0x251 PUSH2 0x8fc
0x254 MUL
0x255 SWAP3
0x256 SWAP1
0x257 SWAP2
0x258 DUP2
0x259 DUP2
0x25a DUP2
0x25b DUP6
0x25c DUP9
0x25d DUP9
0x25e CALL
0x25f SWAP4
0x260 POP
0x261 POP
0x262 POP
0x263 POP
0x264 ISZERO
0x265 ISZERO
0x266 PUSH2 0x26e
0x269 JUMPI
---
0x239: JUMPDEST 
0x23a: V205 = 0x0
0x23d: V206 = S[0x0]
0x23e: V207 = 0x40
0x240: V208 = M[0x40]
0x241: V209 = 0x1
0x243: V210 = 0xa0
0x245: V211 = 0x2
0x247: V212 = EXP 0x2 0xa0
0x248: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24b: V214 = AND V206 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V215 = ADDRESS
0x24e: V216 = BALANCE V215
0x250: V217 = ISZERO V216
0x251: V218 = 0x8fc
0x254: V219 = MUL 0x8fc V217
0x25e: V220 = CALL V219 V214 V216 V208 0x0 V208 0x0
0x264: V221 = ISZERO V220
0x265: V222 = ISZERO V221
0x266: V223 = 0x26e
0x269: JUMPI 0x26e V222
---
Entry stack: [V11, 0x82, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V177]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x239]
Successors: []
---
0x26a PUSH1 0x0
0x26c DUP1
0x26d REVERT
---
0x26a: V224 = 0x0
0x26d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V177]

================================

Block 0x26e
[0x26e:0x29a]
---
Predecessors: [0x239]
Successors: [0x82]
---
0x26e JUMPDEST
0x26f PUSH1 0x0
0x271 DUP1
0x272 SLOAD
0x273 PUSH1 0x40
0x275 MLOAD
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e SWAP1
0x27f SWAP2
0x280 AND
0x281 SWAP2
0x282 ADDRESS
0x283 BALANCE
0x284 DUP1
0x285 ISZERO
0x286 PUSH2 0x8fc
0x289 MUL
0x28a SWAP3
0x28b SWAP1
0x28c SWAP2
0x28d DUP2
0x28e DUP2
0x28f DUP2
0x290 DUP6
0x291 DUP9
0x292 DUP9
0x293 CALL
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a JUMP
---
0x26e: JUMPDEST 
0x26f: V225 = 0x0
0x272: V226 = S[0x0]
0x273: V227 = 0x40
0x275: V228 = M[0x40]
0x276: V229 = 0x1
0x278: V230 = 0xa0
0x27a: V231 = 0x2
0x27c: V232 = EXP 0x2 0xa0
0x27d: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x280: V234 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x282: V235 = ADDRESS
0x283: V236 = BALANCE V235
0x285: V237 = ISZERO V236
0x286: V238 = 0x8fc
0x289: V239 = MUL 0x8fc V237
0x293: V240 = CALL V239 V234 V236 V228 0x0 V228 0x0
0x29a: JUMP 0x82
---
Entry stack: [V11, 0x82, V177]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x29b
[0x29b:0x2a9]
---
Predecessors: [0xa3]
Successors: [0xac]
---
0x29b JUMPDEST
0x29c PUSH1 0x0
0x29e SLOAD
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 AND
0x2a8 DUP2
0x2a9 JUMP
---
0x29b: JUMPDEST 
0x29c: V241 = 0x0
0x29e: V242 = S[0x0]
0x29f: V243 = 0x1
0x2a1: V244 = 0xa0
0x2a3: V245 = 0x2
0x2a5: V246 = EXP 0x2 0xa0
0x2a6: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x2a9: JUMP 0xac
---
Entry stack: [V11, 0xac]
Stack pops: 1
Stack additions: [S0, V248]
Exit stack: [V11, 0xac, V248]

================================

Block 0x2aa
[0x2aa:0x2bd]
---
Predecessors: [0xd4]
Successors: [0x2be, 0x2fb]
---
0x2aa JUMPDEST
0x2ab PUSH1 0x0
0x2ad SLOAD
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 AND
0x2b7 CALLER
0x2b8 DUP2
0x2b9 EQ
0x2ba PUSH2 0x2fb
0x2bd JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V249 = 0x0
0x2ad: V250 = S[0x0]
0x2ae: V251 = 0x1
0x2b0: V252 = 0xa0
0x2b2: V253 = 0x2
0x2b4: V254 = EXP 0x2 0xa0
0x2b5: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x2b7: V257 = CALLER
0x2b9: V258 = EQ V256 V257
0x2ba: V259 = 0x2fb
0x2bd: JUMPI 0x2fb V258
---
Entry stack: [V11, 0x82, V69]
Stack pops: 0
Stack additions: [V256]
Exit stack: [V11, 0x82, V69, V256]

================================

Block 0x2be
[0x2be:0x2fa]
---
Predecessors: [0x2aa]
Successors: []
---
0x2be PUSH1 0x40
0x2c0 DUP1
0x2c1 MLOAD
0x2c2 PUSH1 0xe5
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 PUSH3 0x461bcd
0x2cb MUL
0x2cc DUP2
0x2cd MSTORE
0x2ce PUSH1 0x20
0x2d0 PUSH1 0x4
0x2d2 DUP3
0x2d3 ADD
0x2d4 MSTORE
0x2d5 PUSH1 0x16
0x2d7 PUSH1 0x24
0x2d9 DUP3
0x2da ADD
0x2db MSTORE
0x2dc PUSH1 0x0
0x2de DUP1
0x2df MLOAD
0x2e0 PUSH1 0x20
0x2e2 PUSH2 0x517
0x2e5 DUP4
0x2e6 CODECOPY
0x2e7 DUP2
0x2e8 MLOAD
0x2e9 SWAP2
0x2ea MSTORE
0x2eb PUSH1 0x44
0x2ed DUP3
0x2ee ADD
0x2ef MSTORE
0x2f0 SWAP1
0x2f1 MLOAD
0x2f2 SWAP1
0x2f3 DUP2
0x2f4 SWAP1
0x2f5 SUB
0x2f6 PUSH1 0x64
0x2f8 ADD
0x2f9 SWAP1
0x2fa REVERT
---
0x2be: V260 = 0x40
0x2c1: V261 = M[0x40]
0x2c2: V262 = 0xe5
0x2c4: V263 = 0x2
0x2c6: V264 = EXP 0x2 0xe5
0x2c7: V265 = 0x461bcd
0x2cb: V266 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2cd: M[V261] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2ce: V267 = 0x20
0x2d0: V268 = 0x4
0x2d3: V269 = ADD V261 0x4
0x2d4: M[V269] = 0x20
0x2d5: V270 = 0x16
0x2d7: V271 = 0x24
0x2da: V272 = ADD V261 0x24
0x2db: M[V272] = 0x16
0x2dc: V273 = 0x0
0x2df: V274 = M[0x0]
0x2e0: V275 = 0x20
0x2e2: V276 = 0x517
0x2e6: CODECOPY 0x0 0x517 0x20
0x2e8: V277 = M[0x0]
0x2ea: M[0x0] = V274
0x2eb: V278 = 0x44
0x2ee: V279 = ADD V261 0x44
0x2ef: M[V279] = V277
0x2f1: V280 = M[0x40]
0x2f5: V281 = SUB V261 V280
0x2f6: V282 = 0x64
0x2f8: V283 = ADD 0x64 V281
0x2fa: REVERT V280 V283
---
Entry stack: [V11, 0x82, V69, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V69, V256]

================================

Block 0x2fb
[0x2fb:0x32a]
---
Predecessors: [0x2aa]
Successors: [0x82]
---
0x2fb JUMPDEST
0x2fc POP
0x2fd PUSH1 0x0
0x2ff DUP1
0x300 SLOAD
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 NOT
0x317 AND
0x318 PUSH1 0x1
0x31a PUSH1 0xa0
0x31c PUSH1 0x2
0x31e EXP
0x31f SUB
0x320 SWAP3
0x321 SWAP1
0x322 SWAP3
0x323 AND
0x324 SWAP2
0x325 SWAP1
0x326 SWAP2
0x327 OR
0x328 SWAP1
0x329 SSTORE
0x32a JUMP
---
0x2fb: JUMPDEST 
0x2fd: V284 = 0x0
0x300: V285 = S[0x0]
0x301: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V287 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x317: V288 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V285
0x318: V289 = 0x1
0x31a: V290 = 0xa0
0x31c: V291 = 0x2
0x31e: V292 = EXP 0x2 0xa0
0x31f: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x323: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x327: V295 = OR V294 V288
0x329: S[0x0] = V295
0x32a: JUMP 0x82
---
Entry stack: [V11, 0x82, V69, V256]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x32b
[0x32b:0x33f]
---
Predecessors: [0xf5]
Successors: [0x340, 0x37d]
---
0x32b JUMPDEST
0x32c PUSH1 0x0
0x32e DUP1
0x32f SLOAD
0x330 PUSH1 0x1
0x332 PUSH1 0xa0
0x334 PUSH1 0x2
0x336 EXP
0x337 SUB
0x338 AND
0x339 CALLER
0x33a DUP2
0x33b EQ
0x33c PUSH2 0x37d
0x33f JUMPI
---
0x32b: JUMPDEST 
0x32c: V296 = 0x0
0x32f: V297 = S[0x0]
0x330: V298 = 0x1
0x332: V299 = 0xa0
0x334: V300 = 0x2
0x336: V301 = EXP 0x2 0xa0
0x337: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x338: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x339: V304 = CALLER
0x33b: V305 = EQ V303 V304
0x33c: V306 = 0x37d
0x33f: JUMPI 0x37d V305
---
Entry stack: [V11, 0xfe]
Stack pops: 0
Stack additions: [0x0, V303]
Exit stack: [V11, 0xfe, 0x0, V303]

================================

Block 0x340
[0x340:0x37c]
---
Predecessors: [0x32b]
Successors: []
---
0x340 PUSH1 0x40
0x342 DUP1
0x343 MLOAD
0x344 PUSH1 0xe5
0x346 PUSH1 0x2
0x348 EXP
0x349 PUSH3 0x461bcd
0x34d MUL
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x20
0x352 PUSH1 0x4
0x354 DUP3
0x355 ADD
0x356 MSTORE
0x357 PUSH1 0x16
0x359 PUSH1 0x24
0x35b DUP3
0x35c ADD
0x35d MSTORE
0x35e PUSH1 0x0
0x360 DUP1
0x361 MLOAD
0x362 PUSH1 0x20
0x364 PUSH2 0x517
0x367 DUP4
0x368 CODECOPY
0x369 DUP2
0x36a MLOAD
0x36b SWAP2
0x36c MSTORE
0x36d PUSH1 0x44
0x36f DUP3
0x370 ADD
0x371 MSTORE
0x372 SWAP1
0x373 MLOAD
0x374 SWAP1
0x375 DUP2
0x376 SWAP1
0x377 SUB
0x378 PUSH1 0x64
0x37a ADD
0x37b SWAP1
0x37c REVERT
---
0x340: V307 = 0x40
0x343: V308 = M[0x40]
0x344: V309 = 0xe5
0x346: V310 = 0x2
0x348: V311 = EXP 0x2 0xe5
0x349: V312 = 0x461bcd
0x34d: V313 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x34f: M[V308] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x350: V314 = 0x20
0x352: V315 = 0x4
0x355: V316 = ADD V308 0x4
0x356: M[V316] = 0x20
0x357: V317 = 0x16
0x359: V318 = 0x24
0x35c: V319 = ADD V308 0x24
0x35d: M[V319] = 0x16
0x35e: V320 = 0x0
0x361: V321 = M[0x0]
0x362: V322 = 0x20
0x364: V323 = 0x517
0x368: CODECOPY 0x0 0x517 0x20
0x36a: V324 = M[0x0]
0x36c: M[0x0] = V321
0x36d: V325 = 0x44
0x370: V326 = ADD V308 0x44
0x371: M[V326] = V324
0x373: V327 = M[0x40]
0x377: V328 = SUB V308 V327
0x378: V329 = 0x64
0x37a: V330 = ADD 0x64 V328
0x37c: REVERT V327 V330
---
Entry stack: [V11, 0xfe, 0x0, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, 0x0, V303]

================================

Block 0x37d
[0x37d:0x383]
---
Predecessors: [0x32b]
Successors: [0xfe]
---
0x37d JUMPDEST
0x37e POP
0x37f POP
0x380 ADDRESS
0x381 BALANCE
0x382 SWAP1
0x383 JUMP
---
0x37d: JUMPDEST 
0x380: V331 = ADDRESS
0x381: V332 = BALANCE V331
0x383: JUMP 0xfe
---
Entry stack: [V11, 0xfe, 0x0, V303]
Stack pops: 3
Stack additions: [V332]
Exit stack: [V11, V332]

================================

Block 0x384
[0x384:0x397]
---
Predecessors: [0x110]
Successors: [0x398, 0x3d5]
---
0x384 JUMPDEST
0x385 PUSH1 0x0
0x387 SLOAD
0x388 PUSH1 0x1
0x38a PUSH1 0xa0
0x38c PUSH1 0x2
0x38e EXP
0x38f SUB
0x390 AND
0x391 CALLER
0x392 DUP2
0x393 EQ
0x394 PUSH2 0x3d5
0x397 JUMPI
---
0x384: JUMPDEST 
0x385: V333 = 0x0
0x387: V334 = S[0x0]
0x388: V335 = 0x1
0x38a: V336 = 0xa0
0x38c: V337 = 0x2
0x38e: V338 = EXP 0x2 0xa0
0x38f: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x390: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x391: V341 = CALLER
0x393: V342 = EQ V340 V341
0x394: V343 = 0x3d5
0x397: JUMPI 0x3d5 V342
---
Entry stack: [V11, 0x82, V91]
Stack pops: 0
Stack additions: [V340]
Exit stack: [V11, 0x82, V91, V340]

================================

Block 0x398
[0x398:0x3d4]
---
Predecessors: [0x384]
Successors: []
---
0x398 PUSH1 0x40
0x39a DUP1
0x39b MLOAD
0x39c PUSH1 0xe5
0x39e PUSH1 0x2
0x3a0 EXP
0x3a1 PUSH3 0x461bcd
0x3a5 MUL
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x20
0x3aa PUSH1 0x4
0x3ac DUP3
0x3ad ADD
0x3ae MSTORE
0x3af PUSH1 0x16
0x3b1 PUSH1 0x24
0x3b3 DUP3
0x3b4 ADD
0x3b5 MSTORE
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 MLOAD
0x3ba PUSH1 0x20
0x3bc PUSH2 0x517
0x3bf DUP4
0x3c0 CODECOPY
0x3c1 DUP2
0x3c2 MLOAD
0x3c3 SWAP2
0x3c4 MSTORE
0x3c5 PUSH1 0x44
0x3c7 DUP3
0x3c8 ADD
0x3c9 MSTORE
0x3ca SWAP1
0x3cb MLOAD
0x3cc SWAP1
0x3cd DUP2
0x3ce SWAP1
0x3cf SUB
0x3d0 PUSH1 0x64
0x3d2 ADD
0x3d3 SWAP1
0x3d4 REVERT
---
0x398: V344 = 0x40
0x39b: V345 = M[0x40]
0x39c: V346 = 0xe5
0x39e: V347 = 0x2
0x3a0: V348 = EXP 0x2 0xe5
0x3a1: V349 = 0x461bcd
0x3a5: V350 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x3a7: M[V345] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3a8: V351 = 0x20
0x3aa: V352 = 0x4
0x3ad: V353 = ADD V345 0x4
0x3ae: M[V353] = 0x20
0x3af: V354 = 0x16
0x3b1: V355 = 0x24
0x3b4: V356 = ADD V345 0x24
0x3b5: M[V356] = 0x16
0x3b6: V357 = 0x0
0x3b9: V358 = M[0x0]
0x3ba: V359 = 0x20
0x3bc: V360 = 0x517
0x3c0: CODECOPY 0x0 0x517 0x20
0x3c2: V361 = M[0x0]
0x3c4: M[0x0] = V358
0x3c5: V362 = 0x44
0x3c8: V363 = ADD V345 0x44
0x3c9: M[V363] = V361
0x3cb: V364 = M[0x40]
0x3cf: V365 = SUB V345 V364
0x3d0: V366 = 0x64
0x3d2: V367 = ADD 0x64 V365
0x3d4: REVERT V364 V367
---
Entry stack: [V11, 0x82, V91, V340]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V91, V340]

================================

Block 0x3d5
[0x3d5:0x432]
---
Predecessors: [0x384]
Successors: [0x433, 0x437]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x40
0x3d8 DUP1
0x3d9 MLOAD
0x3da CALLVALUE
0x3db DUP2
0x3dc MSTORE
0x3dd SWAP1
0x3de MLOAD
0x3df PUSH32 0x49b4c3f4344f33413322c03885f90f29e906bd8eb0cb2c3d815ee1ad2b3c989c
0x400 SWAP2
0x401 DUP2
0x402 SWAP1
0x403 SUB
0x404 PUSH1 0x20
0x406 ADD
0x407 SWAP1
0x408 LOG1
0x409 PUSH1 0x40
0x40b MLOAD
0x40c PUSH1 0x1
0x40e PUSH1 0xa0
0x410 PUSH1 0x2
0x412 EXP
0x413 SUB
0x414 DUP4
0x415 AND
0x416 SWAP1
0x417 CALLVALUE
0x418 DUP1
0x419 ISZERO
0x41a PUSH2 0x8fc
0x41d MUL
0x41e SWAP2
0x41f PUSH1 0x0
0x421 DUP2
0x422 DUP2
0x423 DUP2
0x424 DUP6
0x425 DUP9
0x426 DUP9
0x427 CALL
0x428 SWAP4
0x429 POP
0x42a POP
0x42b POP
0x42c POP
0x42d ISZERO
0x42e ISZERO
0x42f PUSH2 0x437
0x432 JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V368 = 0x40
0x3d9: V369 = M[0x40]
0x3da: V370 = CALLVALUE
0x3dc: M[V369] = V370
0x3de: V371 = M[0x40]
0x3df: V372 = 0x49b4c3f4344f33413322c03885f90f29e906bd8eb0cb2c3d815ee1ad2b3c989c
0x403: V373 = SUB V369 V371
0x404: V374 = 0x20
0x406: V375 = ADD 0x20 V373
0x408: LOG V371 V375 0x49b4c3f4344f33413322c03885f90f29e906bd8eb0cb2c3d815ee1ad2b3c989c
0x409: V376 = 0x40
0x40b: V377 = M[0x40]
0x40c: V378 = 0x1
0x40e: V379 = 0xa0
0x410: V380 = 0x2
0x412: V381 = EXP 0x2 0xa0
0x413: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x415: V383 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x417: V384 = CALLVALUE
0x419: V385 = ISZERO V384
0x41a: V386 = 0x8fc
0x41d: V387 = MUL 0x8fc V385
0x41f: V388 = 0x0
0x427: V389 = CALL V387 V383 V384 V377 0x0 V377 0x0
0x42d: V390 = ISZERO V389
0x42e: V391 = ISZERO V390
0x42f: V392 = 0x437
0x432: JUMPI 0x437 V391
---
Entry stack: [V11, 0x82, V91, V340]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x82, V91, V340]

================================

Block 0x433
[0x433:0x436]
---
Predecessors: [0x3d5]
Successors: []
---
0x433 PUSH1 0x0
0x435 DUP1
0x436 REVERT
---
0x433: V393 = 0x0
0x436: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V91, V340]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V91, V340]

================================

Block 0x437
[0x437:0x43a]
---
Predecessors: [0x3d5]
Successors: [0x82]
---
0x437 JUMPDEST
0x438 POP
0x439 POP
0x43a JUMP
---
0x437: JUMPDEST 
0x43a: JUMP 0x82
---
Entry stack: [V11, 0x82, V91, V340]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x43b
[0x43b:0x44e]
---
Predecessors: [0x124]
Successors: [0x44f, 0x48c]
---
0x43b JUMPDEST
0x43c PUSH1 0x0
0x43e SLOAD
0x43f PUSH1 0x1
0x441 PUSH1 0xa0
0x443 PUSH1 0x2
0x445 EXP
0x446 SUB
0x447 AND
0x448 CALLER
0x449 DUP2
0x44a EQ
0x44b PUSH2 0x48c
0x44e JUMPI
---
0x43b: JUMPDEST 
0x43c: V394 = 0x0
0x43e: V395 = S[0x0]
0x43f: V396 = 0x1
0x441: V397 = 0xa0
0x443: V398 = 0x2
0x445: V399 = EXP 0x2 0xa0
0x446: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x447: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x448: V402 = CALLER
0x44a: V403 = EQ V401 V402
0x44b: V404 = 0x48c
0x44e: JUMPI 0x48c V403
---
Entry stack: [V11, 0x82, V101]
Stack pops: 0
Stack additions: [V401]
Exit stack: [V11, 0x82, V101, V401]

================================

Block 0x44f
[0x44f:0x48b]
---
Predecessors: [0x43b]
Successors: []
---
0x44f PUSH1 0x40
0x451 DUP1
0x452 MLOAD
0x453 PUSH1 0xe5
0x455 PUSH1 0x2
0x457 EXP
0x458 PUSH3 0x461bcd
0x45c MUL
0x45d DUP2
0x45e MSTORE
0x45f PUSH1 0x20
0x461 PUSH1 0x4
0x463 DUP3
0x464 ADD
0x465 MSTORE
0x466 PUSH1 0x16
0x468 PUSH1 0x24
0x46a DUP3
0x46b ADD
0x46c MSTORE
0x46d PUSH1 0x0
0x46f DUP1
0x470 MLOAD
0x471 PUSH1 0x20
0x473 PUSH2 0x517
0x476 DUP4
0x477 CODECOPY
0x478 DUP2
0x479 MLOAD
0x47a SWAP2
0x47b MSTORE
0x47c PUSH1 0x44
0x47e DUP3
0x47f ADD
0x480 MSTORE
0x481 SWAP1
0x482 MLOAD
0x483 SWAP1
0x484 DUP2
0x485 SWAP1
0x486 SUB
0x487 PUSH1 0x64
0x489 ADD
0x48a SWAP1
0x48b REVERT
---
0x44f: V405 = 0x40
0x452: V406 = M[0x40]
0x453: V407 = 0xe5
0x455: V408 = 0x2
0x457: V409 = EXP 0x2 0xe5
0x458: V410 = 0x461bcd
0x45c: V411 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x45e: M[V406] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x45f: V412 = 0x20
0x461: V413 = 0x4
0x464: V414 = ADD V406 0x4
0x465: M[V414] = 0x20
0x466: V415 = 0x16
0x468: V416 = 0x24
0x46b: V417 = ADD V406 0x24
0x46c: M[V417] = 0x16
0x46d: V418 = 0x0
0x470: V419 = M[0x0]
0x471: V420 = 0x20
0x473: V421 = 0x517
0x477: CODECOPY 0x0 0x517 0x20
0x479: V422 = M[0x0]
0x47b: M[0x0] = V419
0x47c: V423 = 0x44
0x47f: V424 = ADD V406 0x44
0x480: M[V424] = V422
0x482: V425 = M[0x40]
0x486: V426 = SUB V406 V425
0x487: V427 = 0x64
0x489: V428 = ADD 0x64 V426
0x48b: REVERT V425 V428
---
Entry stack: [V11, 0x82, V101, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V101, V401]

================================

Block 0x48c
[0x48c:0x4e9]
---
Predecessors: [0x43b]
Successors: [0x4ea, 0x4ee]
---
0x48c JUMPDEST
0x48d PUSH1 0x40
0x48f DUP1
0x490 MLOAD
0x491 CALLVALUE
0x492 DUP2
0x493 MSTORE
0x494 SWAP1
0x495 MLOAD
0x496 PUSH32 0x49b4c3f4344f33413322c03885f90f29e906bd8eb0cb2c3d815ee1ad2b3c989c
0x4b7 SWAP2
0x4b8 DUP2
0x4b9 SWAP1
0x4ba SUB
0x4bb PUSH1 0x20
0x4bd ADD
0x4be SWAP1
0x4bf LOG1
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0xa0
0x4c7 PUSH1 0x2
0x4c9 EXP
0x4ca SUB
0x4cb DUP4
0x4cc AND
0x4cd SWAP1
0x4ce CALLVALUE
0x4cf DUP1
0x4d0 ISZERO
0x4d1 PUSH2 0x8fc
0x4d4 MUL
0x4d5 SWAP2
0x4d6 PUSH1 0x0
0x4d8 DUP2
0x4d9 DUP2
0x4da DUP2
0x4db DUP6
0x4dc DUP9
0x4dd DUP9
0x4de CALL
0x4df SWAP4
0x4e0 POP
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 ISZERO
0x4e5 ISZERO
0x4e6 PUSH2 0x4ee
0x4e9 JUMPI
---
0x48c: JUMPDEST 
0x48d: V429 = 0x40
0x490: V430 = M[0x40]
0x491: V431 = CALLVALUE
0x493: M[V430] = V431
0x495: V432 = M[0x40]
0x496: V433 = 0x49b4c3f4344f33413322c03885f90f29e906bd8eb0cb2c3d815ee1ad2b3c989c
0x4ba: V434 = SUB V430 V432
0x4bb: V435 = 0x20
0x4bd: V436 = ADD 0x20 V434
0x4bf: LOG V432 V436 0x49b4c3f4344f33413322c03885f90f29e906bd8eb0cb2c3d815ee1ad2b3c989c
0x4c0: V437 = 0x40
0x4c2: V438 = M[0x40]
0x4c3: V439 = 0x1
0x4c5: V440 = 0xa0
0x4c7: V441 = 0x2
0x4c9: V442 = EXP 0x2 0xa0
0x4ca: V443 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V444 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x4ce: V445 = CALLVALUE
0x4d0: V446 = ISZERO V445
0x4d1: V447 = 0x8fc
0x4d4: V448 = MUL 0x8fc V446
0x4d6: V449 = 0x0
0x4de: V450 = CALL V448 V444 V445 V438 0x0 V438 0x0
0x4e4: V451 = ISZERO V450
0x4e5: V452 = ISZERO V451
0x4e6: V453 = 0x4ee
0x4e9: JUMPI 0x4ee V452
---
Entry stack: [V11, 0x82, V101, V401]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x82, V101, V401]

================================

Block 0x4ea
[0x4ea:0x4ed]
---
Predecessors: [0x48c]
Successors: []
---
0x4ea PUSH1 0x0
0x4ec DUP1
0x4ed REVERT
---
0x4ea: V454 = 0x0
0x4ed: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V101, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V101, V401]

================================

Block 0x4ee
[0x4ee:0x515]
---
Predecessors: [0x48c]
Successors: [0x82]
---
0x4ee JUMPDEST
0x4ef PUSH1 0x40
0x4f1 MLOAD
0x4f2 PUSH1 0x1
0x4f4 PUSH1 0xa0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 SUB
0x4fa DUP4
0x4fb AND
0x4fc SWAP1
0x4fd CALLVALUE
0x4fe DUP1
0x4ff ISZERO
0x500 PUSH2 0x8fc
0x503 MUL
0x504 SWAP2
0x505 PUSH1 0x0
0x507 DUP2
0x508 DUP2
0x509 DUP2
0x50a DUP6
0x50b DUP9
0x50c DUP9
0x50d CALL
0x50e POP
0x50f POP
0x510 POP
0x511 POP
0x512 POP
0x513 POP
0x514 POP
0x515 JUMP
---
0x4ee: JUMPDEST 
0x4ef: V455 = 0x40
0x4f1: V456 = M[0x40]
0x4f2: V457 = 0x1
0x4f4: V458 = 0xa0
0x4f6: V459 = 0x2
0x4f8: V460 = EXP 0x2 0xa0
0x4f9: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fb: V462 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x4fd: V463 = CALLVALUE
0x4ff: V464 = ISZERO V463
0x500: V465 = 0x8fc
0x503: V466 = MUL 0x8fc V464
0x505: V467 = 0x0
0x50d: V468 = CALL V466 V462 V463 V456 0x0 V456 0x0
0x515: JUMP 0x82
---
Entry stack: [V11, 0x82, V101, V401]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x516
[0x516:0x561]
---
Predecessors: []
Successors: []
---
0x516 STOP
0x517 MSTORE8
0x518 PUSH6 0x6e646572206e
0x51f PUSH16 0x7420617574686f72697a65642e000000
0x530 STOP
0x531 STOP
0x532 STOP
0x533 STOP
0x534 STOP
0x535 STOP
0x536 STOP
0x537 LOG1
0x538 PUSH6 0x627a7a723058
0x53f SHA3
0x540 CALLCODE
0x541 MISSING 0xde
0x542 MISSING 0xdc
0x543 OR
0x544 MISSING 0xb0
0x545 SGT
0x546 MISSING 0x24
0x547 BLOCKHASH
0x548 MISSING 0xe8
0x549 MISSING 0x4d
0x54a MISSING 0x4c
0x54b JUMPDEST
0x54c DUP4
0x54d PUSH19 0xf8f88d4c10090bb470a3fcc7394470e38c6500
0x561 MISSING 0x29
---
0x516: STOP 
0x517: M8[S0] = S1
0x518: V469 = 0x6e646572206e
0x51f: V470 = 0x7420617574686f72697a65642e000000
0x530: STOP 
0x531: STOP 
0x532: STOP 
0x533: STOP 
0x534: STOP 
0x535: STOP 
0x536: STOP 
0x537: LOG S0 S1 S2
0x538: V471 = 0x627a7a723058
0x53f: V472 = SHA3 0x627a7a723058 S3
0x540: V473 = CALLCODE V472 S4 S5 S6 S7 S8 S9
0x541: MISSING 0xde
0x542: MISSING 0xdc
0x543: V474 = OR S0 S1
0x544: MISSING 0xb0
0x545: V475 = SGT S0 S1
0x546: MISSING 0x24
0x547: V476 = BLOCKHASH S0
0x548: MISSING 0xe8
0x549: MISSING 0x4d
0x54a: MISSING 0x4c
0x54b: JUMPDEST 
0x54d: V477 = 0xf8f88d4c10090bb470a3fcc7394470e38c6500
0x561: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x7420617574686f72697a65642e000000, 0x6e646572206e, V473, V474, V475, V476, 0xf8f88d4c10090bb470a3fcc7394470e38c6500, S3, S0, S1, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x84
Exit block: 0x82
Body: 0x82, 0x84, 0x138, 0x14c, 0x189, 0x1b8, 0x1bc

Function 1:
Public function signature: 0x853828b6
Entry block: 0x8f
Exit block: 0x82
Body: 0x82, 0x8f, 0x1e8, 0x1fc, 0x239, 0x26a, 0x26e

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x97
Exit block: 0xac
Body: 0x97, 0x9f, 0xa3, 0xac, 0x29b

Function 3:
Public function signature: 0xa6f9dae1
Entry block: 0xc8
Exit block: 0x82
Body: 0x82, 0xc8, 0xd0, 0xd4, 0x2aa, 0x2be, 0x2fb

Function 4:
Public function signature: 0xc71daccb
Entry block: 0xe9
Exit block: 0xfe
Body: 0xe9, 0xf1, 0xf5, 0xfe, 0x32b, 0x340, 0x37d

Function 5:
Public function signature: 0xcfe52bdd
Entry block: 0x110
Exit block: 0x82
Body: 0x82, 0x110, 0x384, 0x398, 0x3d5, 0x433, 0x437

Function 6:
Public function signature: 0xd1aea543
Entry block: 0x124
Exit block: 0x82
Body: 0x82, 0x124, 0x43b, 0x44f, 0x48c, 0x4ea, 0x4ee

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

