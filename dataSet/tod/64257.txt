Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x173]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x812448a5
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x173
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x812448a5
0x3b: V13 = EQ V11 0x812448a5
0x3c: V14 = 0x173
0x3f: JUMPI 0x173 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x18b]
---
0x40 DUP1
0x41 PUSH4 0xb252720b
0x46 EQ
0x47 PUSH2 0x18b
0x4a JUMPI
---
0x41: V15 = 0xb252720b
0x46: V16 = EQ 0xb252720b V11
0x47: V17 = 0x18b
0x4a: JUMPI 0x18b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x5d]
---
Predecessors: [0x0, 0x40]
Successors: [0x5e, 0x6c]
---
0x4b JUMPDEST
0x4c PUSH6 0x9184e72a000
0x53 PUSH1 0x6
0x55 SLOAD
0x56 CALLVALUE
0x57 SUB
0x58 GT
0x59 DUP1
0x5a PUSH2 0x6c
0x5d JUMPI
---
0x4b: JUMPDEST 
0x4c: V18 = 0x9184e72a000
0x53: V19 = 0x6
0x55: V20 = S[0x6]
0x56: V21 = CALLVALUE
0x57: V22 = SUB V21 V20
0x58: V23 = GT V22 0x9184e72a000
0x5a: V24 = 0x6c
0x5d: JUMPI 0x6c V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V23]
Exit stack: [V11, V23]

================================

Block 0x5e
[0x5e:0x6b]
---
Predecessors: [0x4b]
Successors: [0x6c]
---
0x5e POP
0x5f PUSH6 0x9184e72a000
0x66 CALLVALUE
0x67 PUSH1 0x6
0x69 SLOAD
0x6a SUB
0x6b GT
---
0x5f: V25 = 0x9184e72a000
0x66: V26 = CALLVALUE
0x67: V27 = 0x6
0x69: V28 = S[0x6]
0x6a: V29 = SUB V28 V26
0x6b: V30 = GT V29 0x9184e72a000
---
Entry stack: [V11, V23]
Stack pops: 1
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x6c
[0x6c:0x71]
---
Predecessors: [0x4b, 0x5e]
Successors: [0x72, 0x9f]
---
0x6c JUMPDEST
0x6d ISZERO
0x6e PUSH2 0x9f
0x71 JUMPI
---
0x6c: JUMPDEST 
0x6d: V31 = ISZERO S0
0x6e: V32 = 0x9f
0x71: JUMPI 0x9f V31
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x93]
---
Predecessors: [0x6c]
Successors: [0x94, 0x9d]
---
0x72 PUSH1 0x40
0x74 MLOAD
0x75 CALLER
0x76 SWAP1
0x77 CALLVALUE
0x78 DUP1
0x79 ISZERO
0x7a PUSH2 0x8fc
0x7d MUL
0x7e SWAP2
0x7f PUSH1 0x0
0x81 DUP2
0x82 DUP2
0x83 DUP2
0x84 DUP6
0x85 DUP9
0x86 DUP9
0x87 CALL
0x88 SWAP4
0x89 POP
0x8a POP
0x8b POP
0x8c POP
0x8d ISZERO
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x9d
0x93 JUMPI
---
0x72: V33 = 0x40
0x74: V34 = M[0x40]
0x75: V35 = CALLER
0x77: V36 = CALLVALUE
0x79: V37 = ISZERO V36
0x7a: V38 = 0x8fc
0x7d: V39 = MUL 0x8fc V37
0x7f: V40 = 0x0
0x87: V41 = CALL V39 V35 V36 V34 0x0 V34 0x0
0x8d: V42 = ISZERO V41
0x8f: V43 = ISZERO V42
0x90: V44 = 0x9d
0x93: JUMPI 0x9d V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0x94
[0x94:0x9c]
---
Predecessors: [0x72]
Successors: []
---
0x94 RETURNDATASIZE
0x95 PUSH1 0x0
0x97 DUP1
0x98 RETURNDATACOPY
0x99 RETURNDATASIZE
0x9a PUSH1 0x0
0x9c REVERT
---
0x94: V45 = RETURNDATASIZE
0x95: V46 = 0x0
0x98: RETURNDATACOPY 0x0 0x0 V45
0x99: V47 = RETURNDATASIZE
0x9a: V48 = 0x0
0x9c: REVERT 0x0 V47
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0x9d
[0x9d:0x9e]
---
Predecessors: [0x72]
Successors: [0x9f]
---
0x9d JUMPDEST
0x9e POP
---
0x9d: JUMPDEST 
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xaf]
---
Predecessors: [0x6c, 0x9d]
Successors: [0xb0, 0xb1]
---
0x9f JUMPDEST
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 SLOAD
0xa4 PUSH1 0xff
0xa6 AND
0xa7 PUSH1 0x2
0xa9 DUP2
0xaa GT
0xab ISZERO
0xac PUSH2 0xb1
0xaf JUMPI
---
0x9f: JUMPDEST 
0xa0: V49 = 0x0
0xa3: V50 = S[0x0]
0xa4: V51 = 0xff
0xa6: V52 = AND 0xff V50
0xa7: V53 = 0x2
0xaa: V54 = GT V52 0x2
0xab: V55 = ISZERO V54
0xac: V56 = 0xb1
0xaf: JUMPI 0xb1 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, V52]
Exit stack: [V11, 0x0, V52]

================================

Block 0xb0
[0xb0:0xb0]
---
Predecessors: [0x9f]
Successors: []
---
0xb0 INVALID
---
0xb0: INVALID 
---
Entry stack: [V11, 0x0, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, V52]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x9f]
Successors: [0xb8, 0xf3]
---
0xb1 JUMPDEST
0xb2 EQ
0xb3 ISZERO
0xb4 PUSH2 0xf3
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V57 = EQ V52 0x0
0xb3: V58 = ISZERO V57
0xb4: V59 = 0xf3
0xb7: JUMPI 0xf3 V58
---
Entry stack: [V11, 0x0, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xe8]
---
Predecessors: [0xb1]
Successors: [0xe9]
---
0xb8 PUSH1 0x2
0xba DUP1
0xbb SLOAD
0xbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1 NOT
0xd2 AND
0xd3 CALLER
0xd4 OR
0xd5 SWAP1
0xd6 SSTORE
0xd7 CALLVALUE
0xd8 PUSH1 0x4
0xda SSTORE
0xdb PUSH1 0x0
0xdd DUP1
0xde SLOAD
0xdf PUSH1 0x1
0xe1 SWAP2
0xe2 SWAP1
0xe3 PUSH1 0xff
0xe5 NOT
0xe6 AND
0xe7 DUP3
0xe8 DUP1
---
0xb8: V60 = 0x2
0xbb: V61 = S[0x2]
0xbc: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V63 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V64 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V61
0xd3: V65 = CALLER
0xd4: V66 = OR V65 V64
0xd6: S[0x2] = V66
0xd7: V67 = CALLVALUE
0xd8: V68 = 0x4
0xda: S[0x4] = V67
0xdb: V69 = 0x0
0xde: V70 = S[0x0]
0xdf: V71 = 0x1
0xe3: V72 = 0xff
0xe5: V73 = NOT 0xff
0xe6: V74 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1, 0x0, V74, 0x1, 0x1]
Exit stack: [V11, 0x1, 0x0, V74, 0x1, 0x1]

================================

Block 0xe9
[0xe9:0xf2]
---
Predecessors: [0xb8, 0x10d]
Successors: [0x171]
---
0xe9 JUMPDEST
0xea MUL
0xeb OR
0xec SWAP1
0xed SSTORE
0xee POP
0xef PUSH2 0x171
0xf2 JUMP
---
0xe9: JUMPDEST 
0xea: V75 = MUL {0x1, 0x2} 0x1
0xeb: V76 = OR V75 S2
0xed: S[0x0] = V76
0xef: V77 = 0x171
0xf2: JUMP 0x171
---
Entry stack: [V11, {0x1, 0x2}, 0x0, S2, 0x1, {0x1, 0x2}]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0x104]
---
Predecessors: [0xb1]
Successors: [0x105, 0x106]
---
0xf3 JUMPDEST
0xf4 PUSH1 0x1
0xf6 PUSH1 0x0
0xf8 SLOAD
0xf9 PUSH1 0xff
0xfb AND
0xfc PUSH1 0x2
0xfe DUP2
0xff GT
0x100 ISZERO
0x101 PUSH2 0x106
0x104 JUMPI
---
0xf3: JUMPDEST 
0xf4: V78 = 0x1
0xf6: V79 = 0x0
0xf8: V80 = S[0x0]
0xf9: V81 = 0xff
0xfb: V82 = AND 0xff V80
0xfc: V83 = 0x2
0xff: V84 = GT V82 0x2
0x100: V85 = ISZERO V84
0x101: V86 = 0x106
0x104: JUMPI 0x106 V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1, V82]
Exit stack: [V11, 0x1, V82]

================================

Block 0x105
[0x105:0x105]
---
Predecessors: [0xf3]
Successors: []
---
0x105 INVALID
---
0x105: INVALID 
---
Entry stack: [V11, 0x1, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1, V82]

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0xf3]
Successors: [0x10d, 0x143]
---
0x106 JUMPDEST
0x107 EQ
0x108 ISZERO
0x109 PUSH2 0x143
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V87 = EQ V82 0x1
0x108: V88 = ISZERO V87
0x109: V89 = 0x143
0x10c: JUMPI 0x143 V88
---
Entry stack: [V11, 0x1, V82]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x142]
---
Predecessors: [0x106]
Successors: [0xe9]
---
0x10d PUSH1 0x3
0x10f DUP1
0x110 SLOAD
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 NOT
0x127 AND
0x128 CALLER
0x129 OR
0x12a SWAP1
0x12b SSTORE
0x12c CALLVALUE
0x12d PUSH1 0x5
0x12f SSTORE
0x130 PUSH1 0x0
0x132 DUP1
0x133 SLOAD
0x134 PUSH1 0x2
0x136 SWAP2
0x137 SWAP1
0x138 PUSH1 0xff
0x13a NOT
0x13b AND
0x13c PUSH1 0x1
0x13e DUP4
0x13f PUSH2 0xe9
0x142 JUMP
---
0x10d: V90 = 0x3
0x110: V91 = S[0x3]
0x111: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V93 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x127: V94 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V91
0x128: V95 = CALLER
0x129: V96 = OR V95 V94
0x12b: S[0x3] = V96
0x12c: V97 = CALLVALUE
0x12d: V98 = 0x5
0x12f: S[0x5] = V97
0x130: V99 = 0x0
0x133: V100 = S[0x0]
0x134: V101 = 0x2
0x138: V102 = 0xff
0x13a: V103 = NOT 0xff
0x13b: V104 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V100
0x13c: V105 = 0x1
0x13f: V106 = 0xe9
0x142: JUMP 0xe9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2, 0x0, V104, 0x1, 0x2]
Exit stack: [V11, 0x2, 0x0, V104, 0x1, 0x2]

================================

Block 0x143
[0x143:0x165]
---
Predecessors: [0x106]
Successors: [0x166, 0x16f]
---
0x143 JUMPDEST
0x144 PUSH1 0x40
0x146 MLOAD
0x147 CALLER
0x148 SWAP1
0x149 CALLVALUE
0x14a DUP1
0x14b ISZERO
0x14c PUSH2 0x8fc
0x14f MUL
0x150 SWAP2
0x151 PUSH1 0x0
0x153 DUP2
0x154 DUP2
0x155 DUP2
0x156 DUP6
0x157 DUP9
0x158 DUP9
0x159 CALL
0x15a SWAP4
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f ISZERO
0x160 DUP1
0x161 ISZERO
0x162 PUSH2 0x16f
0x165 JUMPI
---
0x143: JUMPDEST 
0x144: V107 = 0x40
0x146: V108 = M[0x40]
0x147: V109 = CALLER
0x149: V110 = CALLVALUE
0x14b: V111 = ISZERO V110
0x14c: V112 = 0x8fc
0x14f: V113 = MUL 0x8fc V111
0x151: V114 = 0x0
0x159: V115 = CALL V113 V109 V110 V108 0x0 V108 0x0
0x15f: V116 = ISZERO V115
0x161: V117 = ISZERO V116
0x162: V118 = 0x16f
0x165: JUMPI 0x16f V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x166
[0x166:0x16e]
---
Predecessors: [0x143]
Successors: []
---
0x166 RETURNDATASIZE
0x167 PUSH1 0x0
0x169 DUP1
0x16a RETURNDATACOPY
0x16b RETURNDATASIZE
0x16c PUSH1 0x0
0x16e REVERT
---
0x166: V119 = RETURNDATASIZE
0x167: V120 = 0x0
0x16a: RETURNDATACOPY 0x0 0x0 V119
0x16b: V121 = RETURNDATASIZE
0x16c: V122 = 0x0
0x16e: REVERT 0x0 V121
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x16f
[0x16f:0x170]
---
Predecessors: [0x143]
Successors: [0x171]
---
0x16f JUMPDEST
0x170 POP
---
0x16f: JUMPDEST 
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x171
[0x171:0x172]
---
Predecessors: [0xe9, 0x16f, 0x296]
Successors: []
---
0x171 JUMPDEST
0x172 STOP
---
0x171: JUMPDEST 
0x172: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0xd]
Successors: [0x17b, 0x17f]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 DUP1
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x173: JUMPDEST 
0x174: V123 = CALLVALUE
0x176: V124 = ISZERO V123
0x177: V125 = 0x17f
0x17a: JUMPI 0x17f V124
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V123]
Exit stack: [V11, V123]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x173]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V126 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V11, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V123]

================================

Block 0x17f
[0x17f:0x18a]
---
Predecessors: [0x173]
Successors: [0x1b2]
---
0x17f JUMPDEST
0x180 POP
0x181 PUSH2 0x171
0x184 PUSH1 0x4
0x186 CALLDATALOAD
0x187 PUSH2 0x1b2
0x18a JUMP
---
0x17f: JUMPDEST 
0x181: V127 = 0x171
0x184: V128 = 0x4
0x186: V129 = CALLDATALOAD 0x4
0x187: V130 = 0x1b2
0x18a: JUMP 0x1b2
---
Entry stack: [V11, V123]
Stack pops: 1
Stack additions: [0x171, V129]
Exit stack: [V11, 0x171, V129]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x40]
Successors: [0x193, 0x197]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d DUP1
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18b: JUMPDEST 
0x18c: V131 = CALLVALUE
0x18e: V132 = ISZERO V131
0x18f: V133 = 0x197
0x192: JUMPI 0x197 V132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V11, V131]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18b]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V134 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V11, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V131]

================================

Block 0x197
[0x197:0x19f]
---
Predecessors: [0x18b]
Successors: [0x299]
---
0x197 JUMPDEST
0x198 POP
0x199 PUSH2 0x1a0
0x19c PUSH2 0x299
0x19f JUMP
---
0x197: JUMPDEST 
0x199: V135 = 0x1a0
0x19c: V136 = 0x299
0x19f: JUMP 0x299
---
Entry stack: [V11, V131]
Stack pops: 1
Stack additions: [0x1a0]
Exit stack: [V11, 0x1a0]

================================

Block 0x1a0
[0x1a0:0x1b1]
---
Predecessors: [0x34e]
Successors: []
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x40
0x1a3 DUP1
0x1a4 MLOAD
0x1a5 SWAP2
0x1a6 DUP3
0x1a7 MSTORE
0x1a8 MLOAD
0x1a9 SWAP1
0x1aa DUP2
0x1ab SWAP1
0x1ac SUB
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP1
0x1b1 RETURN
---
0x1a0: JUMPDEST 
0x1a1: V137 = 0x40
0x1a4: V138 = M[0x40]
0x1a7: M[V138] = {0x0, 0x1, 0x2}
0x1a8: V139 = M[0x40]
0x1ac: V140 = SUB V138 V139
0x1ad: V141 = 0x20
0x1af: V142 = ADD 0x20 V140
0x1b1: RETURN V139 V142
---
Entry stack: [V11, {0x0, 0x1, 0x2}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b2
[0x1b2:0x1d1]
---
Predecessors: [0x17f]
Successors: [0x1d2, 0x1d6]
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x7
0x1b5 SLOAD
0x1b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cb AND
0x1cc CALLER
0x1cd EQ
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V143 = 0x7
0x1b5: V144 = S[0x7]
0x1b6: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x1cc: V147 = CALLER
0x1cd: V148 = EQ V147 V146
0x1ce: V149 = 0x1d6
0x1d1: JUMPI 0x1d6 V148
---
Entry stack: [V11, 0x171, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x171, V129]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1b2]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V150 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x171, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x171, V129]

================================

Block 0x1d6
[0x1d6:0x1e7]
---
Predecessors: [0x1b2]
Successors: [0x1e8, 0x1e9]
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x2
0x1d9 PUSH1 0x0
0x1db SLOAD
0x1dc PUSH1 0xff
0x1de AND
0x1df PUSH1 0x2
0x1e1 DUP2
0x1e2 GT
0x1e3 ISZERO
0x1e4 PUSH2 0x1e9
0x1e7 JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V151 = 0x2
0x1d9: V152 = 0x0
0x1db: V153 = S[0x0]
0x1dc: V154 = 0xff
0x1de: V155 = AND 0xff V153
0x1df: V156 = 0x2
0x1e2: V157 = GT V155 0x2
0x1e3: V158 = ISZERO V157
0x1e4: V159 = 0x1e9
0x1e7: JUMPI 0x1e9 V158
---
Entry stack: [V11, 0x171, V129]
Stack pops: 0
Stack additions: [0x2, V155]
Exit stack: [V11, 0x171, V129, 0x2, V155]

================================

Block 0x1e8
[0x1e8:0x1e8]
---
Predecessors: [0x1d6]
Successors: []
---
0x1e8 INVALID
---
0x1e8: INVALID 
---
Entry stack: [V11, 0x171, V129, 0x2, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x171, V129, 0x2, V155]

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0x1d6]
Successors: [0x1f0, 0x296]
---
0x1e9 JUMPDEST
0x1ea EQ
0x1eb ISZERO
0x1ec PUSH2 0x296
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V160 = EQ V155 0x2
0x1eb: V161 = ISZERO V160
0x1ec: V162 = 0x296
0x1ef: JUMPI 0x296 V161
---
Entry stack: [V11, 0x171, V129, 0x2, V155]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x171, V129]

================================

Block 0x1f0
[0x1f0:0x1f8]
---
Predecessors: [0x1e9]
Successors: [0x1f9, 0x24d]
---
0x1f0 DUP1
0x1f1 PUSH1 0x1
0x1f3 EQ
0x1f4 ISZERO
0x1f5 PUSH2 0x24d
0x1f8 JUMPI
---
0x1f1: V163 = 0x1
0x1f3: V164 = EQ 0x1 V129
0x1f4: V165 = ISZERO V164
0x1f5: V166 = 0x24d
0x1f8: JUMPI 0x24d V165
---
Entry stack: [V11, 0x171, V129]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x171, V129]

================================

Block 0x1f9
[0x1f9:0x23d]
---
Predecessors: [0x1f0]
Successors: [0x23e, 0x247]
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc SLOAD
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 PUSH2 0x100
0x218 SWAP1
0x219 SWAP3
0x21a DIV
0x21b SWAP2
0x21c SWAP1
0x21d SWAP2
0x21e AND
0x21f SWAP2
0x220 ADDRESS
0x221 BALANCE
0x222 DUP1
0x223 ISZERO
0x224 PUSH2 0x8fc
0x227 MUL
0x228 SWAP3
0x229 SWAP1
0x22a SWAP2
0x22b DUP2
0x22c DUP2
0x22d DUP2
0x22e DUP6
0x22f DUP9
0x230 DUP9
0x231 CALL
0x232 SWAP4
0x233 POP
0x234 POP
0x235 POP
0x236 POP
0x237 ISZERO
0x238 DUP1
0x239 ISZERO
0x23a PUSH2 0x247
0x23d JUMPI
---
0x1f9: V167 = 0x0
0x1fc: V168 = S[0x0]
0x1fd: V169 = 0x40
0x1ff: V170 = M[0x40]
0x200: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V172 = 0x100
0x21a: V173 = DIV V168 0x100
0x21e: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x220: V175 = ADDRESS
0x221: V176 = BALANCE V175
0x223: V177 = ISZERO V176
0x224: V178 = 0x8fc
0x227: V179 = MUL 0x8fc V177
0x231: V180 = CALL V179 V174 V176 V170 0x0 V170 0x0
0x237: V181 = ISZERO V180
0x239: V182 = ISZERO V181
0x23a: V183 = 0x247
0x23d: JUMPI 0x247 V182
---
Entry stack: [V11, 0x171, V129]
Stack pops: 0
Stack additions: [V181]
Exit stack: [V11, 0x171, V129, V181]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x1f9]
Successors: []
---
0x23e RETURNDATASIZE
0x23f PUSH1 0x0
0x241 DUP1
0x242 RETURNDATACOPY
0x243 RETURNDATASIZE
0x244 PUSH1 0x0
0x246 REVERT
---
0x23e: V184 = RETURNDATASIZE
0x23f: V185 = 0x0
0x242: RETURNDATACOPY 0x0 0x0 V184
0x243: V186 = RETURNDATASIZE
0x244: V187 = 0x0
0x246: REVERT 0x0 V186
---
Entry stack: [V11, 0x171, V129, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x171, V129, V181]

================================

Block 0x247
[0x247:0x24c]
---
Predecessors: [0x1f9]
Successors: [0x296]
---
0x247 JUMPDEST
0x248 POP
0x249 PUSH2 0x296
0x24c JUMP
---
0x247: JUMPDEST 
0x249: V188 = 0x296
0x24c: JUMP 0x296
---
Entry stack: [V11, 0x171, V129, V181]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x171, V129]

================================

Block 0x24d
[0x24d:0x28a]
---
Predecessors: [0x1f0]
Successors: [0x28b, 0x294]
---
0x24d JUMPDEST
0x24e PUSH1 0x1
0x250 SLOAD
0x251 PUSH1 0x40
0x253 MLOAD
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 SWAP1
0x26a SWAP2
0x26b AND
0x26c SWAP1
0x26d ADDRESS
0x26e BALANCE
0x26f DUP1
0x270 ISZERO
0x271 PUSH2 0x8fc
0x274 MUL
0x275 SWAP2
0x276 PUSH1 0x0
0x278 DUP2
0x279 DUP2
0x27a DUP2
0x27b DUP6
0x27c DUP9
0x27d DUP9
0x27e CALL
0x27f SWAP4
0x280 POP
0x281 POP
0x282 POP
0x283 POP
0x284 ISZERO
0x285 DUP1
0x286 ISZERO
0x287 PUSH2 0x294
0x28a JUMPI
---
0x24d: JUMPDEST 
0x24e: V189 = 0x1
0x250: V190 = S[0x1]
0x251: V191 = 0x40
0x253: V192 = M[0x40]
0x254: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V194 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V195 = ADDRESS
0x26e: V196 = BALANCE V195
0x270: V197 = ISZERO V196
0x271: V198 = 0x8fc
0x274: V199 = MUL 0x8fc V197
0x276: V200 = 0x0
0x27e: V201 = CALL V199 V194 V196 V192 0x0 V192 0x0
0x284: V202 = ISZERO V201
0x286: V203 = ISZERO V202
0x287: V204 = 0x294
0x28a: JUMPI 0x294 V203
---
Entry stack: [V11, 0x171, V129]
Stack pops: 0
Stack additions: [V202]
Exit stack: [V11, 0x171, V129, V202]

================================

Block 0x28b
[0x28b:0x293]
---
Predecessors: [0x24d]
Successors: []
---
0x28b RETURNDATASIZE
0x28c PUSH1 0x0
0x28e DUP1
0x28f RETURNDATACOPY
0x290 RETURNDATASIZE
0x291 PUSH1 0x0
0x293 REVERT
---
0x28b: V205 = RETURNDATASIZE
0x28c: V206 = 0x0
0x28f: RETURNDATACOPY 0x0 0x0 V205
0x290: V207 = RETURNDATASIZE
0x291: V208 = 0x0
0x293: REVERT 0x0 V207
---
Entry stack: [V11, 0x171, V129, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x171, V129, V202]

================================

Block 0x294
[0x294:0x295]
---
Predecessors: [0x24d]
Successors: [0x296]
---
0x294 JUMPDEST
0x295 POP
---
0x294: JUMPDEST 
---
Entry stack: [V11, 0x171, V129, V202]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x171, V129]

================================

Block 0x296
[0x296:0x298]
---
Predecessors: [0x1e9, 0x247, 0x294]
Successors: [0x171]
---
0x296 JUMPDEST
0x297 POP
0x298 JUMP
---
0x296: JUMPDEST 
0x298: JUMP 0x171
---
Entry stack: [V11, 0x171, V129]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x299
[0x299:0x2bb]
---
Predecessors: [0x197]
Successors: [0x2bc, 0x2c0]
---
0x299 JUMPDEST
0x29a PUSH1 0x7
0x29c SLOAD
0x29d PUSH1 0x0
0x29f SWAP1
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 CALLER
0x2b7 EQ
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x299: JUMPDEST 
0x29a: V209 = 0x7
0x29c: V210 = S[0x7]
0x29d: V211 = 0x0
0x2a0: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x2b6: V214 = CALLER
0x2b7: V215 = EQ V214 V213
0x2b8: V216 = 0x2c0
0x2bb: JUMPI 0x2c0 V215
---
Entry stack: [V11, 0x1a0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1a0, 0x0]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x299]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V217 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0]

================================

Block 0x2c0
[0x2c0:0x2d1]
---
Predecessors: [0x299]
Successors: [0x2d2, 0x2d3]
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x2
0x2c3 PUSH1 0x0
0x2c5 SLOAD
0x2c6 PUSH1 0xff
0x2c8 AND
0x2c9 PUSH1 0x2
0x2cb DUP2
0x2cc GT
0x2cd ISZERO
0x2ce PUSH2 0x2d3
0x2d1 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V218 = 0x2
0x2c3: V219 = 0x0
0x2c5: V220 = S[0x0]
0x2c6: V221 = 0xff
0x2c8: V222 = AND 0xff V220
0x2c9: V223 = 0x2
0x2cc: V224 = GT V222 0x2
0x2cd: V225 = ISZERO V224
0x2ce: V226 = 0x2d3
0x2d1: JUMPI 0x2d3 V225
---
Entry stack: [V11, 0x1a0, 0x0]
Stack pops: 0
Stack additions: [0x2, V222]
Exit stack: [V11, 0x1a0, 0x0, 0x2, V222]

================================

Block 0x2d2
[0x2d2:0x2d2]
---
Predecessors: [0x2c0]
Successors: []
---
0x2d2 INVALID
---
0x2d2: INVALID 
---
Entry stack: [V11, 0x1a0, 0x0, 0x2, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0, 0x2, V222]

================================

Block 0x2d3
[0x2d3:0x2d8]
---
Predecessors: [0x2c0]
Successors: [0x2d9, 0x34a]
---
0x2d3 JUMPDEST
0x2d4 EQ
0x2d5 PUSH2 0x34a
0x2d8 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V227 = EQ V222 0x2
0x2d5: V228 = 0x34a
0x2d8: JUMPI 0x34a V227
---
Entry stack: [V11, 0x1a0, 0x0, 0x2, V222]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0]

================================

Block 0x2d9
[0x2d9:0x2e9]
---
Predecessors: [0x2d3]
Successors: [0x2ea, 0x2eb]
---
0x2d9 PUSH1 0x1
0x2db PUSH1 0x0
0x2dd SLOAD
0x2de PUSH1 0xff
0x2e0 AND
0x2e1 PUSH1 0x2
0x2e3 DUP2
0x2e4 GT
0x2e5 ISZERO
0x2e6 PUSH2 0x2eb
0x2e9 JUMPI
---
0x2d9: V229 = 0x1
0x2db: V230 = 0x0
0x2dd: V231 = S[0x0]
0x2de: V232 = 0xff
0x2e0: V233 = AND 0xff V231
0x2e1: V234 = 0x2
0x2e4: V235 = GT V233 0x2
0x2e5: V236 = ISZERO V235
0x2e6: V237 = 0x2eb
0x2e9: JUMPI 0x2eb V236
---
Entry stack: [V11, 0x1a0, 0x0]
Stack pops: 0
Stack additions: [0x1, V233]
Exit stack: [V11, 0x1a0, 0x0, 0x1, V233]

================================

Block 0x2ea
[0x2ea:0x2ea]
---
Predecessors: [0x2d9]
Successors: []
---
0x2ea INVALID
---
0x2ea: INVALID 
---
Entry stack: [V11, 0x1a0, 0x0, 0x1, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0, 0x1, V233]

================================

Block 0x2eb
[0x2eb:0x2f1]
---
Predecessors: [0x2d9]
Successors: [0x2f2, 0x342]
---
0x2eb JUMPDEST
0x2ec EQ
0x2ed ISZERO
0x2ee PUSH2 0x342
0x2f1 JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V238 = EQ V233 0x1
0x2ed: V239 = ISZERO V238
0x2ee: V240 = 0x342
0x2f1: JUMPI 0x342 V239
---
Entry stack: [V11, 0x1a0, 0x0, 0x1, V233]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0]

================================

Block 0x2f2
[0x2f2:0x32e]
---
Predecessors: [0x2eb]
Successors: [0x32f, 0x338]
---
0x2f2 PUSH1 0x2
0x2f4 SLOAD
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30d SWAP1
0x30e SWAP2
0x30f AND
0x310 SWAP1
0x311 ADDRESS
0x312 BALANCE
0x313 DUP1
0x314 ISZERO
0x315 PUSH2 0x8fc
0x318 MUL
0x319 SWAP2
0x31a PUSH1 0x0
0x31c DUP2
0x31d DUP2
0x31e DUP2
0x31f DUP6
0x320 DUP9
0x321 DUP9
0x322 CALL
0x323 SWAP4
0x324 POP
0x325 POP
0x326 POP
0x327 POP
0x328 ISZERO
0x329 DUP1
0x32a ISZERO
0x32b PUSH2 0x338
0x32e JUMPI
---
0x2f2: V241 = 0x2
0x2f4: V242 = S[0x2]
0x2f5: V243 = 0x40
0x2f7: V244 = M[0x40]
0x2f8: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V246 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x311: V247 = ADDRESS
0x312: V248 = BALANCE V247
0x314: V249 = ISZERO V248
0x315: V250 = 0x8fc
0x318: V251 = MUL 0x8fc V249
0x31a: V252 = 0x0
0x322: V253 = CALL V251 V246 V248 V244 0x0 V244 0x0
0x328: V254 = ISZERO V253
0x32a: V255 = ISZERO V254
0x32b: V256 = 0x338
0x32e: JUMPI 0x338 V255
---
Entry stack: [V11, 0x1a0, 0x0]
Stack pops: 0
Stack additions: [V254]
Exit stack: [V11, 0x1a0, 0x0, V254]

================================

Block 0x32f
[0x32f:0x337]
---
Predecessors: [0x2f2]
Successors: []
---
0x32f RETURNDATASIZE
0x330 PUSH1 0x0
0x332 DUP1
0x333 RETURNDATACOPY
0x334 RETURNDATASIZE
0x335 PUSH1 0x0
0x337 REVERT
---
0x32f: V257 = RETURNDATASIZE
0x330: V258 = 0x0
0x333: RETURNDATACOPY 0x0 0x0 V257
0x334: V259 = RETURNDATASIZE
0x335: V260 = 0x0
0x337: REVERT 0x0 V259
---
Entry stack: [V11, 0x1a0, 0x0, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0, V254]

================================

Block 0x338
[0x338:0x341]
---
Predecessors: [0x2f2]
Successors: [0x34e]
---
0x338 JUMPDEST
0x339 POP
0x33a PUSH1 0x1
0x33c SWAP1
0x33d POP
0x33e PUSH2 0x34e
0x341 JUMP
---
0x338: JUMPDEST 
0x33a: V261 = 0x1
0x33e: V262 = 0x34e
0x341: JUMP 0x34e
---
Entry stack: [V11, 0x1a0, 0x0, V254]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1a0, 0x1]

================================

Block 0x342
[0x342:0x349]
---
Predecessors: [0x2eb]
Successors: [0x34e]
---
0x342 JUMPDEST
0x343 POP
0x344 PUSH1 0x0
0x346 PUSH2 0x34e
0x349 JUMP
---
0x342: JUMPDEST 
0x344: V263 = 0x0
0x346: V264 = 0x34e
0x349: JUMP 0x34e
---
Entry stack: [V11, 0x1a0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a0, 0x0]

================================

Block 0x34a
[0x34a:0x34d]
---
Predecessors: [0x2d3]
Successors: [0x34e]
---
0x34a JUMPDEST
0x34b POP
0x34c PUSH1 0x2
---
0x34a: JUMPDEST 
0x34c: V265 = 0x2
---
Entry stack: [V11, 0x1a0, 0x0]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V11, 0x1a0, 0x2]

================================

Block 0x34e
[0x34e:0x350]
---
Predecessors: [0x338, 0x342, 0x34a]
Successors: [0x1a0]
---
0x34e JUMPDEST
0x34f SWAP1
0x350 JUMP
---
0x34e: JUMPDEST 
0x350: JUMP 0x1a0
---
Entry stack: [V11, 0x1a0, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1, 0x2}]

================================

Block 0x351
[0x351:0x384]
---
Predecessors: []
Successors: []
---
0x351 STOP
0x352 LOG1
0x353 PUSH6 0x627a7a723058
0x35a SHA3
0x35b CODESIZE
0x35c MISSING 0x4c
0x35d CALL
0x35e MISSING 0xe0
0x35f MISSING 0xb5
0x360 MISSING 0xb2
0x361 LOG0
0x362 JUMP
0x363 CREATE
0x364 SHL
0x365 MISSING 0x49
0x366 PUSH30 0xf581b728cffc24cfc494f4cefb71a6857475aa7d0029
---
0x351: STOP 
0x352: LOG S0 S1 S2
0x353: V266 = 0x627a7a723058
0x35a: V267 = SHA3 0x627a7a723058 S3
0x35b: V268 = CODESIZE
0x35c: MISSING 0x4c
0x35d: V269 = CALL S0 S1 S2 S3 S4 S5 S6
0x35e: MISSING 0xe0
0x35f: MISSING 0xb5
0x360: MISSING 0xb2
0x361: LOG S0 S1
0x362: JUMP S2
0x363: V270 = CREATE S0 S1 S2
0x364: V271 = SHL V270 S3
0x365: MISSING 0x49
0x366: V272 = 0xf581b728cffc24cfc494f4cefb71a6857475aa7d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V268, V267, V269, V271, 0xf581b728cffc24cfc494f4cefb71a6857475aa7d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x812448a5
Entry block: 0x173
Exit block: 0x28b
Body: 0x171, 0x173, 0x17b, 0x17f, 0x1b2, 0x1d2, 0x1d6, 0x1e8, 0x1e9, 0x1f0, 0x1f9, 0x23e, 0x247, 0x24d, 0x28b, 0x294, 0x296

Function 1:
Public function signature: 0xb252720b
Entry block: 0x18b
Exit block: 0x32f
Body: 0x18b, 0x193, 0x197, 0x1a0, 0x299, 0x2bc, 0x2c0, 0x2d2, 0x2d3, 0x2d9, 0x2ea, 0x2eb, 0x2f2, 0x32f, 0x338, 0x342, 0x34a, 0x34e

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0x171
Body: 0x4b, 0x5e, 0x6c, 0x72, 0x94, 0x9d, 0x9f, 0xb0, 0xb1, 0xb8, 0xe9, 0xf3, 0x105, 0x106, 0x10d, 0x143, 0x166, 0x16f, 0x171

