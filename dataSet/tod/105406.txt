Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x55]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x55
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x55
0xa: JUMPI 0x55 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xe2]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x8da5cb5b
0x3a EQ
0x3b PUSH2 0xe2
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x8da5cb5b
0x3a: V12 = EQ 0x8da5cb5b V10
0x3b: V13 = 0xe2
0x3e: JUMPI 0xe2 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x134]
---
0x3f DUP1
0x40 PUSH4 0xf2fde38b
0x45 EQ
0x46 PUSH2 0x134
0x49 JUMPI
---
0x40: V14 = 0xf2fde38b
0x45: V15 = EQ 0xf2fde38b V10
0x46: V16 = 0x134
0x49: JUMPI 0x134 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x16a]
---
0x4a DUP1
0x4b PUSH4 0xfa89401a
0x50 EQ
0x51 PUSH2 0x16a
0x54 JUMPI
---
0x4b: V17 = 0xfa89401a
0x50: V18 = EQ 0xfa89401a V10
0x51: V19 = 0x16a
0x54: JUMPI 0x16a V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5b]
---
Predecessors: [0x0, 0x4a]
Successors: [0x5c, 0x5d]
---
0x55 JUMPDEST
0x56 CALLVALUE
0x57 ISZERO
0x58 PUSH2 0x5d
0x5b JUMPI
---
0x55: JUMPDEST 
0x56: V20 = CALLVALUE
0x57: V21 = ISZERO V20
0x58: V22 = 0x5d
0x5b: JUMPI 0x5d V21
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5c
[0x5c:0x5c]
---
Predecessors: [0x55]
Successors: []
---
0x5c INVALID
---
0x5c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d
[0x5d:0x60]
---
Predecessors: [0x55]
Successors: [0x61]
---
0x5d JUMPDEST
0x5e PUSH2 0xe0
---
0x5d: JUMPDEST 
0x5e: V23 = 0xe0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe0]
Exit stack: [V10, 0xe0]

================================

Block 0x61
[0x61:0xdc]
---
Predecessors: [0x5d]
Successors: [0x1a0]
---
0x61 JUMPDEST
0x62 NUMBER
0x63 PUSH32 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x84 CALLER
0x85 CALLVALUE
0x86 TIMESTAMP
0x87 PUSH1 0x40
0x89 MLOAD
0x8a DUP1
0x8b DUP5
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 AND
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x20
0xbc ADD
0xbd DUP4
0xbe DUP2
0xbf MSTORE
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 DUP3
0xc4 DUP2
0xc5 MSTORE
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP4
0xca POP
0xcb POP
0xcc POP
0xcd POP
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP1
0xd2 SWAP2
0xd3 SUB
0xd4 SWAP1
0xd5 LOG2
0xd6 PUSH2 0xdd
0xd9 PUSH2 0x1a0
0xdc JUMP
---
0x61: JUMPDEST 
0x62: V24 = NUMBER
0x63: V25 = 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x84: V26 = CALLER
0x85: V27 = CALLVALUE
0x86: V28 = TIMESTAMP
0x87: V29 = 0x40
0x89: V30 = M[0x40]
0x8c: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0xa2: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xb9: M[V30] = V34
0xba: V35 = 0x20
0xbc: V36 = ADD 0x20 V30
0xbf: M[V36] = V27
0xc0: V37 = 0x20
0xc2: V38 = ADD 0x20 V36
0xc5: M[V38] = V28
0xc6: V39 = 0x20
0xc8: V40 = ADD 0x20 V38
0xce: V41 = 0x40
0xd0: V42 = M[0x40]
0xd3: V43 = SUB V40 V42
0xd5: LOG V42 V43 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db V24
0xd6: V44 = 0xdd
0xd9: V45 = 0x1a0
0xdc: JUMP 0x1a0
---
Entry stack: [V10, 0xe0]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V10, 0xe0, 0xdd]

================================

Block 0xdd
[0xdd:0xdd]
---
Predecessors: [0x213]
Successors: [0xde]
---
0xdd JUMPDEST
---
0xdd: JUMPDEST 
---
Entry stack: [V10, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe0]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0xdd]
Successors: [0xe0]
---
0xde JUMPDEST
0xdf JUMP
---
0xde: JUMPDEST 
0xdf: JUMP 0xe0
---
Entry stack: [V10, 0xe0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: [0xde]
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0xb]
Successors: [0xe9, 0xea]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xea
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V46 = CALLVALUE
0xe4: V47 = ISZERO V46
0xe5: V48 = 0xea
0xe8: JUMPI 0xea V47
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe9
[0xe9:0xe9]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 INVALID
---
0xe9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0xe2]
Successors: [0x215]
---
0xea JUMPDEST
0xeb PUSH2 0xf2
0xee PUSH2 0x215
0xf1 JUMP
---
0xea: JUMPDEST 
0xeb: V49 = 0xf2
0xee: V50 = 0x215
0xf1: JUMP 0x215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf2]
Exit stack: [V10, 0xf2]

================================

Block 0xf2
[0xf2:0x133]
---
Predecessors: [0x215]
Successors: []
---
0xf2 JUMPDEST
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP1
0xf7 DUP3
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123 AND
0x124 DUP2
0x125 MSTORE
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP2
0x12a POP
0x12b POP
0x12c PUSH1 0x40
0x12e MLOAD
0x12f DUP1
0x130 SWAP2
0x131 SUB
0x132 SWAP1
0x133 RETURN
---
0xf2: JUMPDEST 
0xf3: V51 = 0x40
0xf5: V52 = M[0x40]
0xf8: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x10e: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x123: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x125: M[V52] = V56
0x126: V57 = 0x20
0x128: V58 = ADD 0x20 V52
0x12c: V59 = 0x40
0x12e: V60 = M[0x40]
0x131: V61 = SUB V58 V60
0x133: RETURN V60 V61
---
Entry stack: [V10, 0xf2, V115]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf2]

================================

Block 0x134
[0x134:0x13a]
---
Predecessors: [0x3f]
Successors: [0x13b, 0x13c]
---
0x134 JUMPDEST
0x135 CALLVALUE
0x136 ISZERO
0x137 PUSH2 0x13c
0x13a JUMPI
---
0x134: JUMPDEST 
0x135: V62 = CALLVALUE
0x136: V63 = ISZERO V62
0x137: V64 = 0x13c
0x13a: JUMPI 0x13c V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13b
[0x13b:0x13b]
---
Predecessors: [0x134]
Successors: []
---
0x13b INVALID
---
0x13b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13c
[0x13c:0x167]
---
Predecessors: [0x134]
Successors: [0x23b]
---
0x13c JUMPDEST
0x13d PUSH2 0x168
0x140 PUSH1 0x4
0x142 DUP1
0x143 DUP1
0x144 CALLDATALOAD
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b SWAP1
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP1
0x160 SWAP2
0x161 SWAP1
0x162 POP
0x163 POP
0x164 PUSH2 0x23b
0x167 JUMP
---
0x13c: JUMPDEST 
0x13d: V65 = 0x168
0x140: V66 = 0x4
0x144: V67 = CALLDATALOAD 0x4
0x145: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x15c: V70 = 0x20
0x15e: V71 = ADD 0x20 0x4
0x164: V72 = 0x23b
0x167: JUMP 0x23b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168, V69]
Exit stack: [V10, 0x168, V69]

================================

Block 0x168
[0x168:0x169]
---
Predecessors: [0x2da]
Successors: []
---
0x168 JUMPDEST
0x169 STOP
---
0x168: JUMPDEST 
0x169: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16a
[0x16a:0x170]
---
Predecessors: [0x4a]
Successors: [0x171, 0x172]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c ISZERO
0x16d PUSH2 0x172
0x170 JUMPI
---
0x16a: JUMPDEST 
0x16b: V73 = CALLVALUE
0x16c: V74 = ISZERO V73
0x16d: V75 = 0x172
0x170: JUMPI 0x172 V74
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x171
[0x171:0x171]
---
Predecessors: [0x16a]
Successors: []
---
0x171 INVALID
---
0x171: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x172
[0x172:0x19d]
---
Predecessors: [0x16a]
Successors: [0x2dd]
---
0x172 JUMPDEST
0x173 PUSH2 0x19e
0x176 PUSH1 0x4
0x178 DUP1
0x179 DUP1
0x17a CALLDATALOAD
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 SWAP1
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP1
0x196 SWAP2
0x197 SWAP1
0x198 POP
0x199 POP
0x19a PUSH2 0x2dd
0x19d JUMP
---
0x172: JUMPDEST 
0x173: V76 = 0x19e
0x176: V77 = 0x4
0x17a: V78 = CALLDATALOAD 0x4
0x17b: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x192: V81 = 0x20
0x194: V82 = ADD 0x20 0x4
0x19a: V83 = 0x2dd
0x19d: JUMP 0x2dd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x19e, V80]
Exit stack: [V10, 0x19e, V80]

================================

Block 0x19e
[0x19e:0x19f]
---
Predecessors: [0x3a6]
Successors: []
---
0x19e JUMPDEST
0x19f STOP
---
0x19e: JUMPDEST 
0x19f: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a0
[0x1a0:0x212]
---
Predecessors: [0x61]
Successors: [0x213]
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x1
0x1a3 PUSH1 0x0
0x1a5 SWAP1
0x1a6 SLOAD
0x1a7 SWAP1
0x1a8 PUSH2 0x100
0x1ab EXP
0x1ac SWAP1
0x1ad DIV
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 AND
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da PUSH2 0x8fc
0x1dd ADDRESS
0x1de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f3 AND
0x1f4 BALANCE
0x1f5 SWAP1
0x1f6 DUP2
0x1f7 ISZERO
0x1f8 MUL
0x1f9 SWAP1
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd DUP1
0x1fe SWAP1
0x1ff POP
0x200 PUSH1 0x0
0x202 PUSH1 0x40
0x204 MLOAD
0x205 DUP1
0x206 DUP4
0x207 SUB
0x208 DUP2
0x209 DUP6
0x20a DUP9
0x20b DUP9
0x20c CALL
0x20d SWAP4
0x20e POP
0x20f POP
0x210 POP
0x211 POP
0x212 POP
---
0x1a0: JUMPDEST 
0x1a1: V84 = 0x1
0x1a3: V85 = 0x0
0x1a6: V86 = S[0x1]
0x1a8: V87 = 0x100
0x1ab: V88 = EXP 0x100 0x0
0x1ad: V89 = DIV V86 0x1
0x1ae: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1c4: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1da: V94 = 0x8fc
0x1dd: V95 = ADDRESS
0x1de: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1f4: V98 = BALANCE V97
0x1f7: V99 = ISZERO V98
0x1f8: V100 = MUL V99 0x8fc
0x1fa: V101 = 0x40
0x1fc: V102 = M[0x40]
0x200: V103 = 0x0
0x202: V104 = 0x40
0x204: V105 = M[0x40]
0x207: V106 = SUB V102 V105
0x20c: V107 = CALL V100 V93 V98 V105 V106 V105 0x0
---
Entry stack: [V10, 0xe0, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe0, 0xdd]

================================

Block 0x213
[0x213:0x214]
---
Predecessors: [0x1a0]
Successors: [0xdd]
---
0x213 JUMPDEST
0x214 JUMP
---
0x213: JUMPDEST 
0x214: JUMP 0xdd
---
Entry stack: [V10, 0xe0, 0xdd]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xe0]

================================

Block 0x215
[0x215:0x23a]
---
Predecessors: [0xea]
Successors: [0xf2]
---
0x215 JUMPDEST
0x216 PUSH1 0x0
0x218 PUSH1 0x0
0x21a SWAP1
0x21b SLOAD
0x21c SWAP1
0x21d PUSH2 0x100
0x220 EXP
0x221 SWAP1
0x222 DIV
0x223 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x238 AND
0x239 DUP2
0x23a JUMP
---
0x215: JUMPDEST 
0x216: V108 = 0x0
0x218: V109 = 0x0
0x21b: V110 = S[0x0]
0x21d: V111 = 0x100
0x220: V112 = EXP 0x100 0x0
0x222: V113 = DIV V110 0x1
0x223: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x238: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x23a: JUMP 0xf2
---
Entry stack: [V10, 0xf2]
Stack pops: 1
Stack additions: [S0, V115]
Exit stack: [V10, 0xf2, V115]

================================

Block 0x23b
[0x23b:0x292]
---
Predecessors: [0x13c]
Successors: [0x293, 0x297]
---
0x23b JUMPDEST
0x23c PUSH1 0x0
0x23e PUSH1 0x0
0x240 SWAP1
0x241 SLOAD
0x242 SWAP1
0x243 PUSH2 0x100
0x246 EXP
0x247 SWAP1
0x248 DIV
0x249 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25e AND
0x25f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x274 AND
0x275 CALLER
0x276 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28b AND
0x28c EQ
0x28d ISZERO
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x23b: JUMPDEST 
0x23c: V116 = 0x0
0x23e: V117 = 0x0
0x241: V118 = S[0x0]
0x243: V119 = 0x100
0x246: V120 = EXP 0x100 0x0
0x248: V121 = DIV V118 0x1
0x249: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x25e: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x25f: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x274: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x275: V126 = CALLER
0x276: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x28c: V129 = EQ V128 V125
0x28d: V130 = ISZERO V129
0x28e: V131 = ISZERO V130
0x28f: V132 = 0x297
0x292: JUMPI 0x297 V131
---
Entry stack: [V10, 0x168, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x168, V69]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x23b]
Successors: []
---
0x293 PUSH2 0x0
0x296 JUMP
---
0x293: V133 = 0x0
0x296: THROW 
---
Entry stack: [V10, 0x168, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x168, V69]

================================

Block 0x297
[0x297:0x2d8]
---
Predecessors: [0x23b]
Successors: [0x2d9]
---
0x297 JUMPDEST
0x298 DUP1
0x299 PUSH1 0x0
0x29b PUSH1 0x0
0x29d PUSH2 0x100
0x2a0 EXP
0x2a1 DUP2
0x2a2 SLOAD
0x2a3 DUP2
0x2a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b9 MUL
0x2ba NOT
0x2bb AND
0x2bc SWAP1
0x2bd DUP4
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 AND
0x2d4 MUL
0x2d5 OR
0x2d6 SWAP1
0x2d7 SSTORE
0x2d8 POP
---
0x297: JUMPDEST 
0x299: V134 = 0x0
0x29b: V135 = 0x0
0x29d: V136 = 0x100
0x2a0: V137 = EXP 0x100 0x0
0x2a2: V138 = S[0x0]
0x2a4: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V140 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2ba: V141 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V142 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V138
0x2be: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x2d4: V145 = MUL V144 0x1
0x2d5: V146 = OR V145 V142
0x2d7: S[0x0] = V146
---
Entry stack: [V10, 0x168, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x168, V69]

================================

Block 0x2d9
[0x2d9:0x2d9]
---
Predecessors: [0x297]
Successors: [0x2da]
---
0x2d9 JUMPDEST
---
0x2d9: JUMPDEST 
---
Entry stack: [V10, 0x168, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x168, V69]

================================

Block 0x2da
[0x2da:0x2dc]
---
Predecessors: [0x2d9]
Successors: [0x168]
---
0x2da JUMPDEST
0x2db POP
0x2dc JUMP
---
0x2da: JUMPDEST 
0x2dc: JUMP 0x168
---
Entry stack: [V10, 0x168, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2dd
[0x2dd:0x334]
---
Predecessors: [0x172]
Successors: [0x335, 0x339]
---
0x2dd JUMPDEST
0x2de PUSH1 0x0
0x2e0 PUSH1 0x0
0x2e2 SWAP1
0x2e3 SLOAD
0x2e4 SWAP1
0x2e5 PUSH2 0x100
0x2e8 EXP
0x2e9 SWAP1
0x2ea DIV
0x2eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x300 AND
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 CALLER
0x318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32d AND
0x32e EQ
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x2dd: JUMPDEST 
0x2de: V147 = 0x0
0x2e0: V148 = 0x0
0x2e3: V149 = S[0x0]
0x2e5: V150 = 0x100
0x2e8: V151 = EXP 0x100 0x0
0x2ea: V152 = DIV V149 0x1
0x2eb: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x300: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x301: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x317: V157 = CALLER
0x318: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x32e: V160 = EQ V159 V156
0x32f: V161 = ISZERO V160
0x330: V162 = ISZERO V161
0x331: V163 = 0x339
0x334: JUMPI 0x339 V162
---
Entry stack: [V10, 0x19e, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x19e, V80]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x2dd]
Successors: []
---
0x335 PUSH2 0x0
0x338 JUMP
---
0x335: V164 = 0x0
0x338: THROW 
---
Entry stack: [V10, 0x19e, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x19e, V80]

================================

Block 0x339
[0x339:0x3a4]
---
Predecessors: [0x2dd]
Successors: [0x3a5]
---
0x339 JUMPDEST
0x33a PUSH32 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x35b ADDRESS
0x35c TIMESTAMP
0x35d PUSH1 0x40
0x35f MLOAD
0x360 DUP1
0x361 DUP4
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 AND
0x378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38d AND
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x20
0x392 ADD
0x393 DUP3
0x394 DUP2
0x395 MSTORE
0x396 PUSH1 0x20
0x398 ADD
0x399 SWAP3
0x39a POP
0x39b POP
0x39c POP
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 DUP1
0x3a1 SWAP2
0x3a2 SUB
0x3a3 SWAP1
0x3a4 LOG1
---
0x339: JUMPDEST 
0x33a: V165 = 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x35b: V166 = ADDRESS
0x35c: V167 = TIMESTAMP
0x35d: V168 = 0x40
0x35f: V169 = M[0x40]
0x362: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x378: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x38f: M[V169] = V173
0x390: V174 = 0x20
0x392: V175 = ADD 0x20 V169
0x395: M[V175] = V167
0x396: V176 = 0x20
0x398: V177 = ADD 0x20 V175
0x39d: V178 = 0x40
0x39f: V179 = M[0x40]
0x3a2: V180 = SUB V177 V179
0x3a4: LOG V179 V180 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
---
Entry stack: [V10, 0x19e, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x19e, V80]

================================

Block 0x3a5
[0x3a5:0x3a5]
---
Predecessors: [0x339]
Successors: [0x3a6]
---
0x3a5 JUMPDEST
---
0x3a5: JUMPDEST 
---
Entry stack: [V10, 0x19e, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x19e, V80]

================================

Block 0x3a6
[0x3a6:0x3a8]
---
Predecessors: [0x3a5]
Successors: [0x19e]
---
0x3a6 JUMPDEST
0x3a7 POP
0x3a8 JUMP
---
0x3a6: JUMPDEST 
0x3a8: JUMP 0x19e
---
Entry stack: [V10, 0x19e, V80]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a9
[0x3a9:0x3d4]
---
Predecessors: []
Successors: []
---
0x3a9 STOP
0x3aa LOG1
0x3ab PUSH6 0x627a7a723058
0x3b2 SHA3
0x3b3 STATICCALL
0x3b4 MISSING 0xee
0x3b5 DUP4
0x3b6 DUP10
0x3b7 PUSH10 0x363c989510debf7ff29b
0x3c2 DIFFICULTY
0x3c3 MISSING 0xf9
0x3c4 PUSH9 0xcafcf9dc8ccc72dab2
0x3ce SWAP14
0x3cf ORIGIN
0x3d0 DUP13
0x3d1 CALLCODE
0x3d2 MISSING 0xbe
0x3d3 STOP
0x3d4 MISSING 0x29
---
0x3a9: STOP 
0x3aa: LOG S0 S1 S2
0x3ab: V181 = 0x627a7a723058
0x3b2: V182 = SHA3 0x627a7a723058 S3
0x3b3: V183 = STATICCALL V182 S4 S5 S6 S7 S8
0x3b4: MISSING 0xee
0x3b7: V184 = 0x363c989510debf7ff29b
0x3c2: V185 = DIFFICULTY
0x3c3: MISSING 0xf9
0x3c4: V186 = 0xcafcf9dc8ccc72dab2
0x3cf: V187 = ORIGIN
0x3d1: V188 = CALLCODE S10 V187 S13 S0 S1 S2 S3
0x3d2: MISSING 0xbe
0x3d3: STOP 
0x3d4: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V183, V185, 0x363c989510debf7ff29b, S8, S3, S0, S1, S2, S3, S4, S5, S6, S7, S8, V188, S4, S5, S6, S7, S8, S9, S10, S11, S12, 0xcafcf9dc8ccc72dab2]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0xe2
Exit block: 0xf2
Body: 0xe2, 0xe9, 0xea, 0xf2, 0x215

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0x134
Exit block: 0x168
Body: 0x134, 0x13b, 0x13c, 0x168, 0x23b, 0x293, 0x297, 0x2d9, 0x2da

Function 2:
Public function signature: 0xfa89401a
Entry block: 0x16a
Exit block: 0x19e
Body: 0x16a, 0x171, 0x172, 0x19e, 0x2dd, 0x335, 0x339, 0x3a5, 0x3a6

Function 3:
Public fallback function
Entry block: 0x55
Exit block: 0xe0
Body: 0x55, 0x5c, 0x5d, 0x61, 0xdd, 0xde, 0xe0, 0x1a0, 0x213

