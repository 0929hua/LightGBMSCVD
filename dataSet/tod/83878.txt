Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x3d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x3d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3d
0xc: JUMPI 0x3d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x3f]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x41c0e1b5
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x3f
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x41c0e1b5
0x22: V15 = EQ V13 0x41c0e1b5
0x23: V16 = 0x3f
0x26: JUMPI 0x3f V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x52]
---
0x27 DUP1
0x28 PUSH4 0xab3b8747
0x2d EQ
0x2e PUSH2 0x52
0x31 JUMPI
---
0x28: V17 = 0xab3b8747
0x2d: V18 = EQ 0xab3b8747 V13
0x2e: V19 = 0x52
0x31: JUMPI 0x52 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xb8]
---
0x32 DUP1
0x33 PUSH4 0xfcae8c06
0x38 EQ
0x39 PUSH2 0xb8
0x3c JUMPI
---
0x33: V20 = 0xfcae8c06
0x38: V21 = EQ 0xfcae8c06 V13
0x39: V22 = 0xb8
0x3c: JUMPI 0xb8 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x3e]
---
Predecessors: [0x0, 0x32, 0x12d]
Successors: []
---
0x3d JUMPDEST
0x3e STOP
---
0x3d: JUMPDEST 
0x3e: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3f
[0x3f:0x45]
---
Predecessors: [0xd]
Successors: [0x46, 0x4a]
---
0x3f JUMPDEST
0x40 CALLVALUE
0x41 ISZERO
0x42 PUSH2 0x4a
0x45 JUMPI
---
0x3f: JUMPDEST 
0x40: V23 = CALLVALUE
0x41: V24 = ISZERO V23
0x42: V25 = 0x4a
0x45: JUMPI 0x4a V24
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x46
[0x46:0x49]
---
Predecessors: [0x3f]
Successors: []
---
0x46 PUSH1 0x0
0x48 DUP1
0x49 REVERT
---
0x46: V26 = 0x0
0x49: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x4a
[0x4a:0x51]
---
Predecessors: [0x3f]
Successors: [0xcb]
---
0x4a JUMPDEST
0x4b PUSH2 0x3d
0x4e PUSH2 0xcb
0x51 JUMP
---
0x4a: JUMPDEST 
0x4b: V27 = 0x3d
0x4e: V28 = 0xcb
0x51: JUMP 0xcb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x3d]
Exit stack: [V13, 0x3d]

================================

Block 0x52
[0x52:0x58]
---
Predecessors: [0x27]
Successors: [0x59, 0x5d]
---
0x52 JUMPDEST
0x53 CALLVALUE
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x52: JUMPDEST 
0x53: V29 = CALLVALUE
0x54: V30 = ISZERO V29
0x55: V31 = 0x5d
0x58: JUMPI 0x5d V30
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x52]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V32 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x5d
[0x5d:0xa5]
---
Predecessors: [0x52]
Successors: [0x12f]
---
0x5d JUMPDEST
0x5e PUSH2 0xa6
0x61 PUSH1 0x4
0x63 DUP1
0x64 CALLDATALOAD
0x65 SWAP1
0x66 PUSH1 0x44
0x68 PUSH1 0x24
0x6a DUP1
0x6b CALLDATALOAD
0x6c SWAP1
0x6d DUP2
0x6e ADD
0x6f SWAP1
0x70 DUP4
0x71 ADD
0x72 CALLDATALOAD
0x73 DUP1
0x74 PUSH1 0x20
0x76 DUP2
0x77 DUP2
0x78 MUL
0x79 ADD
0x7a PUSH1 0x40
0x7c MLOAD
0x7d SWAP1
0x7e DUP2
0x7f ADD
0x80 PUSH1 0x40
0x82 MSTORE
0x83 DUP1
0x84 SWAP4
0x85 SWAP3
0x86 SWAP2
0x87 SWAP1
0x88 DUP2
0x89 DUP2
0x8a MSTORE
0x8b PUSH1 0x20
0x8d ADD
0x8e DUP4
0x8f DUP4
0x90 PUSH1 0x20
0x92 MUL
0x93 DUP1
0x94 DUP3
0x95 DUP5
0x96 CALLDATACOPY
0x97 POP
0x98 SWAP5
0x99 SWAP7
0x9a POP
0x9b PUSH2 0x12f
0x9e SWAP6
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 POP
0xa5 JUMP
---
0x5d: JUMPDEST 
0x5e: V33 = 0xa6
0x61: V34 = 0x4
0x64: V35 = CALLDATALOAD 0x4
0x66: V36 = 0x44
0x68: V37 = 0x24
0x6b: V38 = CALLDATALOAD 0x24
0x6e: V39 = ADD V38 0x24
0x71: V40 = ADD 0x4 V38
0x72: V41 = CALLDATALOAD V40
0x74: V42 = 0x20
0x78: V43 = MUL 0x20 V41
0x79: V44 = ADD V43 0x20
0x7a: V45 = 0x40
0x7c: V46 = M[0x40]
0x7f: V47 = ADD V46 V44
0x80: V48 = 0x40
0x82: M[0x40] = V47
0x8a: M[V46] = V41
0x8b: V49 = 0x20
0x8d: V50 = ADD 0x20 V46
0x90: V51 = 0x20
0x92: V52 = MUL 0x20 V41
0x96: CALLDATACOPY V50 V39 V52
0x9b: V53 = 0x12f
0xa5: JUMP 0x12f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa6, V35, V46]
Exit stack: [V13, 0xa6, V35, V46]

================================

Block 0xa6
[0xa6:0xb7]
---
Predecessors: [0x32e]
Successors: []
---
0xa6 JUMPDEST
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa SWAP1
0xab DUP2
0xac MSTORE
0xad PUSH1 0x20
0xaf ADD
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 SWAP2
0xb5 SUB
0xb6 SWAP1
0xb7 RETURN
---
0xa6: JUMPDEST 
0xa7: V54 = 0x40
0xa9: V55 = M[0x40]
0xac: M[V55] = 0x0
0xad: V56 = 0x20
0xaf: V57 = ADD 0x20 V55
0xb0: V58 = 0x40
0xb2: V59 = M[0x40]
0xb5: V60 = SUB V57 V59
0xb7: RETURN V59 V60
---
Entry stack: [V13, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xb8
[0xb8:0xbe]
---
Predecessors: [0x32]
Successors: [0xbf, 0xc3]
---
0xb8 JUMPDEST
0xb9 CALLVALUE
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb8: JUMPDEST 
0xb9: V61 = CALLVALUE
0xba: V62 = ISZERO V61
0xbb: V63 = 0xc3
0xbe: JUMPI 0xc3 V62
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb8]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V64 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0xb8]
Successors: [0x33f]
---
0xc3 JUMPDEST
0xc4 PUSH2 0x3d
0xc7 PUSH2 0x33f
0xca JUMP
---
0xc3: JUMPDEST 
0xc4: V65 = 0x3d
0xc7: V66 = 0x33f
0xca: JUMP 0x33f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x3d]
Exit stack: [V13, 0x3d]

================================

Block 0xcb
[0xcb:0xe2]
---
Predecessors: [0x4a]
Successors: [0xe3, 0x12d]
---
0xcb JUMPDEST
0xcc PUSH1 0x0
0xce SLOAD
0xcf CALLER
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 SWAP1
0xd9 DUP2
0xda AND
0xdb SWAP2
0xdc AND
0xdd EQ
0xde ISZERO
0xdf PUSH2 0x12d
0xe2 JUMPI
---
0xcb: JUMPDEST 
0xcc: V67 = 0x0
0xce: V68 = S[0x0]
0xcf: V69 = CALLER
0xd0: V70 = 0x1
0xd2: V71 = 0xa0
0xd4: V72 = 0x2
0xd6: V73 = EXP 0x2 0xa0
0xd7: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0xdc: V76 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xdd: V77 = EQ V76 V75
0xde: V78 = ISZERO V77
0xdf: V79 = 0x12d
0xe2: JUMPI 0x12d V78
---
Entry stack: [V13, 0x3d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3d]

================================

Block 0xe3
[0xe3:0x11a]
---
Predecessors: [0xcb]
Successors: [0x11b, 0x11f]
---
0xe3 CALLER
0xe4 PUSH1 0x1
0xe6 PUSH1 0xa0
0xe8 PUSH1 0x2
0xea EXP
0xeb SUB
0xec AND
0xed PUSH2 0x8fc
0xf0 ADDRESS
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 AND
0xfa BALANCE
0xfb SWAP1
0xfc DUP2
0xfd ISZERO
0xfe MUL
0xff SWAP1
0x100 PUSH1 0x40
0x102 MLOAD
0x103 PUSH1 0x0
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 DUP4
0x10a SUB
0x10b DUP2
0x10c DUP6
0x10d DUP9
0x10e DUP9
0x10f CALL
0x110 SWAP4
0x111 POP
0x112 POP
0x113 POP
0x114 POP
0x115 ISZERO
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0xe3: V80 = CALLER
0xe4: V81 = 0x1
0xe6: V82 = 0xa0
0xe8: V83 = 0x2
0xea: V84 = EXP 0x2 0xa0
0xeb: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xed: V87 = 0x8fc
0xf0: V88 = ADDRESS
0xf1: V89 = 0x1
0xf3: V90 = 0xa0
0xf5: V91 = 0x2
0xf7: V92 = EXP 0x2 0xa0
0xf8: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0xfa: V95 = BALANCE V94
0xfd: V96 = ISZERO V95
0xfe: V97 = MUL V96 0x8fc
0x100: V98 = 0x40
0x102: V99 = M[0x40]
0x103: V100 = 0x0
0x105: V101 = 0x40
0x107: V102 = M[0x40]
0x10a: V103 = SUB V99 V102
0x10f: V104 = CALL V97 V86 V95 V102 V103 V102 0x0
0x115: V105 = ISZERO V104
0x116: V106 = ISZERO V105
0x117: V107 = 0x11f
0x11a: JUMPI 0x11f V106
---
Entry stack: [V13, 0x3d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3d]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0xe3]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V108 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x3d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3d]

================================

Block 0x11f
[0x11f:0x12c]
---
Predecessors: [0xe3]
Successors: []
---
0x11f JUMPDEST
0x120 PUSH1 0x0
0x122 SLOAD
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b AND
0x12c SELFDESTRUCT
---
0x11f: JUMPDEST 
0x120: V109 = 0x0
0x122: V110 = S[0x0]
0x123: V111 = 0x1
0x125: V112 = 0xa0
0x127: V113 = 0x2
0x129: V114 = EXP 0x2 0xa0
0x12a: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12b: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x12c: SELFDESTRUCT V116
---
Entry stack: [V13, 0x3d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3d]

================================

Block 0x12d
[0x12d:0x12e]
---
Predecessors: [0xcb, 0x33f, 0x357]
Successors: [0x3d]
---
0x12d JUMPDEST
0x12e JUMP
---
0x12d: JUMPDEST 
0x12e: JUMP 0x3d
---
Entry stack: [V13, 0x3d]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x12f
[0x12f:0x161]
---
Predecessors: [0x5d]
Successors: [0x162, 0x32e]
---
0x12f JUMPDEST
0x130 PUSH1 0x0
0x132 DUP1
0x133 DUP1
0x134 DUP1
0x135 DUP1
0x136 DUP1
0x137 DUP1
0x138 DUP1
0x139 DUP1
0x13a DUP1
0x13b DUP1
0x13c DUP1
0x13d CALLER
0x13e PUSH1 0x1
0x140 PUSH1 0xa0
0x142 PUSH1 0x2
0x144 EXP
0x145 SUB
0x146 AND
0x147 PUSH20 0x357ee72591a310d8eaae8b2c0d7fe36b3a7accf1
0x15c EQ
0x15d ISZERO
0x15e PUSH2 0x32e
0x161 JUMPI
---
0x12f: JUMPDEST 
0x130: V117 = 0x0
0x13d: V118 = CALLER
0x13e: V119 = 0x1
0x140: V120 = 0xa0
0x142: V121 = 0x2
0x144: V122 = EXP 0x2 0xa0
0x145: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x146: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x147: V125 = 0x357ee72591a310d8eaae8b2c0d7fe36b3a7accf1
0x15c: V126 = EQ 0x357ee72591a310d8eaae8b2c0d7fe36b3a7accf1 V124
0x15d: V127 = ISZERO V126
0x15e: V128 = 0x32e
0x161: JUMPI 0x32e V127
---
Entry stack: [V13, 0xa6, V35, V46]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0xa6, V35, V46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x12f]
Successors: [0x16a, 0x32e]
---
0x162 NUMBER
0x163 DUP15
0x164 SWAP1
0x165 LT
0x166 PUSH2 0x32e
0x169 JUMPI
---
0x162: V129 = NUMBER
0x165: V130 = LT V129 V35
0x166: V131 = 0x32e
0x169: JUMPI 0x32e V130
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xa6, V35, V46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x162]
Successors: [0x16e]
---
0x16a PUSH1 0x0
0x16c SWAP11
0x16d POP
---
0x16a: V132 = 0x0
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 11
Stack additions: [0x0, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xa6, V35, V46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x16e
[0x16e:0x177]
---
Predecessors: [0x16a, 0x2d3]
Successors: [0x178, 0x2de]
---
0x16e JUMPDEST
0x16f DUP13
0x170 MLOAD
0x171 DUP12
0x172 LT
0x173 ISZERO
0x174 PUSH2 0x2de
0x177 JUMPI
---
0x16e: JUMPDEST 
0x170: V133 = M[V46]
0x172: V134 = LT S10 V133
0x173: V135 = ISZERO V134
0x174: V136 = 0x2de
0x177: JUMPI 0x2de V135
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x178
[0x178:0x192]
---
Predecessors: [0x16e]
Successors: [0x193, 0x194]
---
0x178 PUSH1 0x1
0x17a SLOAD
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 AND
0x184 PUSH4 0xe98b7f4d
0x189 DUP15
0x18a DUP14
0x18b DUP2
0x18c MLOAD
0x18d DUP2
0x18e LT
0x18f PUSH2 0x194
0x192 JUMPI
---
0x178: V137 = 0x1
0x17a: V138 = S[0x1]
0x17b: V139 = 0x1
0x17d: V140 = 0xa0
0x17f: V141 = 0x2
0x181: V142 = EXP 0x2 0xa0
0x182: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x184: V145 = 0xe98b7f4d
0x18c: V146 = M[V46]
0x18e: V147 = LT S10 V146
0x18f: V148 = 0x194
0x192: JUMPI 0x194 V147
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V144, 0xe98b7f4d, S12, S10]
Exit stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V144, 0xe98b7f4d, V46, S10]

================================

Block 0x193
[0x193:0x193]
---
Predecessors: [0x178]
Successors: []
---
0x193 INVALID
---
0x193: INVALID 
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V144, 0xe98b7f4d, V46, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V144, 0xe98b7f4d, V46, S0]

================================

Block 0x194
[0x194:0x1da]
---
Predecessors: [0x178]
Successors: [0x1db, 0x1df]
---
0x194 JUMPDEST
0x195 SWAP1
0x196 PUSH1 0x20
0x198 ADD
0x199 SWAP1
0x19a PUSH1 0x20
0x19c MUL
0x19d ADD
0x19e MLOAD
0x19f PUSH1 0x0
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 PUSH2 0x140
0x1a7 ADD
0x1a8 MSTORE
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac PUSH1 0xe0
0x1ae PUSH1 0x2
0x1b0 EXP
0x1b1 PUSH4 0xffffffff
0x1b6 DUP5
0x1b7 AND
0x1b8 MUL
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x4
0x1bd DUP2
0x1be ADD
0x1bf SWAP2
0x1c0 SWAP1
0x1c1 SWAP2
0x1c2 MSTORE
0x1c3 PUSH1 0x24
0x1c5 ADD
0x1c6 PUSH2 0x140
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc DUP1
0x1cd DUP4
0x1ce SUB
0x1cf DUP2
0x1d0 PUSH1 0x0
0x1d2 DUP8
0x1d3 DUP1
0x1d4 EXTCODESIZE
0x1d5 ISZERO
0x1d6 ISZERO
0x1d7 PUSH2 0x1df
0x1da JUMPI
---
0x194: JUMPDEST 
0x196: V149 = 0x20
0x198: V150 = ADD 0x20 V46
0x19a: V151 = 0x20
0x19c: V152 = MUL 0x20 S0
0x19d: V153 = ADD V152 V150
0x19e: V154 = M[V153]
0x19f: V155 = 0x0
0x1a1: V156 = 0x40
0x1a3: V157 = M[0x40]
0x1a4: V158 = 0x140
0x1a7: V159 = ADD 0x140 V157
0x1a8: M[V159] = 0x0
0x1a9: V160 = 0x40
0x1ab: V161 = M[0x40]
0x1ac: V162 = 0xe0
0x1ae: V163 = 0x2
0x1b0: V164 = EXP 0x2 0xe0
0x1b1: V165 = 0xffffffff
0x1b7: V166 = AND 0xe98b7f4d 0xffffffff
0x1b8: V167 = MUL 0xe98b7f4d 0x100000000000000000000000000000000000000000000000000000000
0x1ba: M[V161] = 0xe98b7f4d00000000000000000000000000000000000000000000000000000000
0x1bb: V168 = 0x4
0x1be: V169 = ADD V161 0x4
0x1c2: M[V169] = V154
0x1c3: V170 = 0x24
0x1c5: V171 = ADD 0x24 V161
0x1c6: V172 = 0x140
0x1c9: V173 = 0x40
0x1cb: V174 = M[0x40]
0x1ce: V175 = SUB V171 V174
0x1d0: V176 = 0x0
0x1d4: V177 = EXTCODESIZE V144
0x1d5: V178 = ISZERO V177
0x1d6: V179 = ISZERO V178
0x1d7: V180 = 0x1df
0x1da: JUMPI 0x1df V179
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V144, 0xe98b7f4d, V46, S0]
Stack pops: 4
Stack additions: [S3, S2, V171, 0x140, V174, V175, V174, 0x0, S3]
Exit stack: [V13, 0xa6, V35, V46, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V144, 0xe98b7f4d, V171, 0x140, V174, V175, V174, 0x0, V144]

================================

Block 0x1db
[0x1db:0x1de]
---
Predecessors: [0x194]
Successors: []
---
0x1db PUSH1 0x0
0x1dd DUP1
0x1de REVERT
---
0x1db: V181 = 0x0
0x1de: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V144, 0xe98b7f4d, V171, 0x140, V174, V175, V174, 0x0, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V144, 0xe98b7f4d, V171, 0x140, V174, V175, V174, 0x0, V144]

================================

Block 0x1df
[0x1df:0x1eb]
---
Predecessors: [0x194]
Successors: [0x1ec, 0x1f0]
---
0x1df JUMPDEST
0x1e0 PUSH2 0x2c6
0x1e3 GAS
0x1e4 SUB
0x1e5 CALL
0x1e6 ISZERO
0x1e7 ISZERO
0x1e8 PUSH2 0x1f0
0x1eb JUMPI
---
0x1df: JUMPDEST 
0x1e0: V182 = 0x2c6
0x1e3: V183 = GAS
0x1e4: V184 = SUB V183 0x2c6
0x1e5: V185 = CALL V184 V144 0x0 V174 V175 V174 0x140
0x1e6: V186 = ISZERO V185
0x1e7: V187 = ISZERO V186
0x1e8: V188 = 0x1f0
0x1eb: JUMPI 0x1f0 V187
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V144, 0xe98b7f4d, V171, 0x140, V174, V175, V174, 0x0, V144]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V144, 0xe98b7f4d, V171]

================================

Block 0x1ec
[0x1ec:0x1ef]
---
Predecessors: [0x1df]
Successors: []
---
0x1ec PUSH1 0x0
0x1ee DUP1
0x1ef REVERT
---
0x1ec: V189 = 0x0
0x1ef: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V144, 0xe98b7f4d, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V144, 0xe98b7f4d, V171]

================================

Block 0x1f0
[0x1f0:0x251]
---
Predecessors: [0x1df]
Successors: [0x252, 0x2d3]
---
0x1f0 JUMPDEST
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 DUP1
0x1f8 MLOAD
0x1f9 SWAP1
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd DUP1
0x1fe MLOAD
0x1ff SWAP1
0x200 PUSH1 0x20
0x202 ADD
0x203 DUP1
0x204 MLOAD
0x205 SWAP1
0x206 PUSH1 0x20
0x208 ADD
0x209 DUP1
0x20a MLOAD
0x20b SWAP1
0x20c PUSH1 0x20
0x20e ADD
0x20f DUP1
0x210 MLOAD
0x211 SWAP1
0x212 PUSH1 0x20
0x214 ADD
0x215 DUP1
0x216 MLOAD
0x217 SWAP1
0x218 PUSH1 0x20
0x21a ADD
0x21b DUP1
0x21c MLOAD
0x21d SWAP1
0x21e PUSH1 0x20
0x220 ADD
0x221 DUP1
0x222 MLOAD
0x223 SWAP1
0x224 PUSH1 0x20
0x226 ADD
0x227 DUP1
0x228 MLOAD
0x229 SWAP1
0x22a PUSH1 0x20
0x22c ADD
0x22d DUP1
0x22e MLOAD
0x22f SWAP1
0x230 POP
0x231 SWAP10
0x232 POP
0x233 SWAP10
0x234 POP
0x235 SWAP10
0x236 POP
0x237 SWAP10
0x238 POP
0x239 SWAP10
0x23a POP
0x23b SWAP10
0x23c POP
0x23d SWAP10
0x23e POP
0x23f SWAP10
0x240 POP
0x241 SWAP10
0x242 POP
0x243 SWAP10
0x244 POP
0x245 DUP9
0x246 ISZERO
0x247 ISZERO
0x248 PUSH1 0x1
0x24a ISZERO
0x24b ISZERO
0x24c EQ
0x24d ISZERO
0x24e PUSH2 0x2d3
0x251 JUMPI
---
0x1f0: JUMPDEST 
0x1f4: V190 = 0x40
0x1f6: V191 = M[0x40]
0x1f8: V192 = M[V191]
0x1fa: V193 = 0x20
0x1fc: V194 = ADD 0x20 V191
0x1fe: V195 = M[V194]
0x200: V196 = 0x20
0x202: V197 = ADD 0x20 V194
0x204: V198 = M[V197]
0x206: V199 = 0x20
0x208: V200 = ADD 0x20 V197
0x20a: V201 = M[V200]
0x20c: V202 = 0x20
0x20e: V203 = ADD 0x20 V200
0x210: V204 = M[V203]
0x212: V205 = 0x20
0x214: V206 = ADD 0x20 V203
0x216: V207 = M[V206]
0x218: V208 = 0x20
0x21a: V209 = ADD 0x20 V206
0x21c: V210 = M[V209]
0x21e: V211 = 0x20
0x220: V212 = ADD 0x20 V209
0x222: V213 = M[V212]
0x224: V214 = 0x20
0x226: V215 = ADD 0x20 V212
0x228: V216 = M[V215]
0x22a: V217 = 0x20
0x22c: V218 = ADD 0x20 V215
0x22e: V219 = M[V218]
0x246: V220 = ISZERO V195
0x247: V221 = ISZERO V220
0x248: V222 = 0x1
0x24a: V223 = ISZERO 0x1
0x24b: V224 = ISZERO 0x0
0x24c: V225 = EQ 0x1 V221
0x24d: V226 = ISZERO V225
0x24e: V227 = 0x2d3
0x251: JUMPI 0x2d3 V226
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V144, 0xe98b7f4d, V171]
Stack pops: 13
Stack additions: [V192, V195, V198, V201, V204, V207, V210, V213, V216, V219]
Exit stack: [V13, 0xa6, V35, V46, 0x0, S13, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219]

================================

Block 0x252
[0x252:0x26c]
---
Predecessors: [0x1f0]
Successors: [0x26d, 0x26e]
---
0x252 PUSH1 0x1
0x254 SLOAD
0x255 PUSH1 0x1
0x257 PUSH1 0xa0
0x259 PUSH1 0x2
0x25b EXP
0x25c SUB
0x25d AND
0x25e PUSH4 0x88c2a0bf
0x263 DUP15
0x264 DUP14
0x265 DUP2
0x266 MLOAD
0x267 DUP2
0x268 LT
0x269 PUSH2 0x26e
0x26c JUMPI
---
0x252: V228 = 0x1
0x254: V229 = S[0x1]
0x255: V230 = 0x1
0x257: V231 = 0xa0
0x259: V232 = 0x2
0x25b: V233 = EXP 0x2 0xa0
0x25c: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25d: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x25e: V236 = 0x88c2a0bf
0x266: V237 = M[V46]
0x268: V238 = LT S10 V237
0x269: V239 = 0x26e
0x26c: JUMPI 0x26e V238
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S10, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V235, 0x88c2a0bf, S12, S10]
Exit stack: [V13, 0xa6, V35, V46, 0x0, S10, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V46, S10]

================================

Block 0x26d
[0x26d:0x26d]
---
Predecessors: [0x252]
Successors: []
---
0x26d INVALID
---
0x26d: INVALID 
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S14, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V46, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S14, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V46, S0]

================================

Block 0x26e
[0x26e:0x2b2]
---
Predecessors: [0x252]
Successors: [0x2b3, 0x2b7]
---
0x26e JUMPDEST
0x26f SWAP1
0x270 PUSH1 0x20
0x272 ADD
0x273 SWAP1
0x274 PUSH1 0x20
0x276 MUL
0x277 ADD
0x278 MLOAD
0x279 PUSH1 0x0
0x27b PUSH1 0x40
0x27d MLOAD
0x27e PUSH1 0x20
0x280 ADD
0x281 MSTORE
0x282 PUSH1 0x40
0x284 MLOAD
0x285 PUSH1 0xe0
0x287 PUSH1 0x2
0x289 EXP
0x28a PUSH4 0xffffffff
0x28f DUP5
0x290 AND
0x291 MUL
0x292 DUP2
0x293 MSTORE
0x294 PUSH1 0x4
0x296 DUP2
0x297 ADD
0x298 SWAP2
0x299 SWAP1
0x29a SWAP2
0x29b MSTORE
0x29c PUSH1 0x24
0x29e ADD
0x29f PUSH1 0x20
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 DUP1
0x2a5 DUP4
0x2a6 SUB
0x2a7 DUP2
0x2a8 PUSH1 0x0
0x2aa DUP8
0x2ab DUP1
0x2ac EXTCODESIZE
0x2ad ISZERO
0x2ae ISZERO
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x26e: JUMPDEST 
0x270: V240 = 0x20
0x272: V241 = ADD 0x20 V46
0x274: V242 = 0x20
0x276: V243 = MUL 0x20 S0
0x277: V244 = ADD V243 V241
0x278: V245 = M[V244]
0x279: V246 = 0x0
0x27b: V247 = 0x40
0x27d: V248 = M[0x40]
0x27e: V249 = 0x20
0x280: V250 = ADD 0x20 V248
0x281: M[V250] = 0x0
0x282: V251 = 0x40
0x284: V252 = M[0x40]
0x285: V253 = 0xe0
0x287: V254 = 0x2
0x289: V255 = EXP 0x2 0xe0
0x28a: V256 = 0xffffffff
0x290: V257 = AND 0x88c2a0bf 0xffffffff
0x291: V258 = MUL 0x88c2a0bf 0x100000000000000000000000000000000000000000000000000000000
0x293: M[V252] = 0x88c2a0bf00000000000000000000000000000000000000000000000000000000
0x294: V259 = 0x4
0x297: V260 = ADD V252 0x4
0x29b: M[V260] = V245
0x29c: V261 = 0x24
0x29e: V262 = ADD 0x24 V252
0x29f: V263 = 0x20
0x2a1: V264 = 0x40
0x2a3: V265 = M[0x40]
0x2a6: V266 = SUB V262 V265
0x2a8: V267 = 0x0
0x2ac: V268 = EXTCODESIZE V235
0x2ad: V269 = ISZERO V268
0x2ae: V270 = ISZERO V269
0x2af: V271 = 0x2b7
0x2b2: JUMPI 0x2b7 V270
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S14, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V46, S0]
Stack pops: 4
Stack additions: [S3, S2, V262, 0x20, V265, V266, V265, 0x0, S3]
Exit stack: [V13, 0xa6, V35, V46, 0x0, S14, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V262, 0x20, V265, V266, V265, 0x0, V235]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x26e]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V272 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S19, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V262, 0x20, V265, V266, V265, 0x0, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S19, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V262, 0x20, V265, V266, V265, 0x0, V235]

================================

Block 0x2b7
[0x2b7:0x2c3]
---
Predecessors: [0x26e]
Successors: [0x2c4, 0x2c8]
---
0x2b7 JUMPDEST
0x2b8 PUSH2 0x2c6
0x2bb GAS
0x2bc SUB
0x2bd CALL
0x2be ISZERO
0x2bf ISZERO
0x2c0 PUSH2 0x2c8
0x2c3 JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V273 = 0x2c6
0x2bb: V274 = GAS
0x2bc: V275 = SUB V274 0x2c6
0x2bd: V276 = CALL V275 V235 0x0 V265 V266 V265 0x20
0x2be: V277 = ISZERO V276
0x2bf: V278 = ISZERO V277
0x2c0: V279 = 0x2c8
0x2c3: JUMPI 0x2c8 V278
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S19, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V262, 0x20, V265, V266, V265, 0x0, V235]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S19, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V262]

================================

Block 0x2c4
[0x2c4:0x2c7]
---
Predecessors: [0x2b7]
Successors: []
---
0x2c4 PUSH1 0x0
0x2c6 DUP1
0x2c7 REVERT
---
0x2c4: V280 = 0x0
0x2c7: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S13, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S13, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V262]

================================

Block 0x2c8
[0x2c8:0x2d2]
---
Predecessors: [0x2b7]
Successors: [0x2d3]
---
0x2c8 JUMPDEST
0x2c9 POP
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 MLOAD
0x2d1 POP
0x2d2 POP
---
0x2c8: JUMPDEST 
0x2cc: V281 = 0x40
0x2ce: V282 = M[0x40]
0x2d0: V283 = M[V282]
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S13, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219, V235, 0x88c2a0bf, V262]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S13, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219]

================================

Block 0x2d3
[0x2d3:0x2dd]
---
Predecessors: [0x1f0, 0x2c8]
Successors: [0x16e]
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x1
0x2d6 SWAP1
0x2d7 SWAP11
0x2d8 ADD
0x2d9 SWAP10
0x2da PUSH2 0x16e
0x2dd JUMP
---
0x2d3: JUMPDEST 
0x2d4: V284 = 0x1
0x2d8: V285 = ADD S10 0x1
0x2da: V286 = 0x16e
0x2dd: JUMP 0x16e
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S10, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219]
Stack pops: 11
Stack additions: [V285, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xa6, V35, V46, 0x0, V285, V192, V195, V198, V201, V204, V207, V210, V213, V216, V219]

================================

Block 0x2de
[0x2de:0x2f1]
---
Predecessors: [0x16e]
Successors: [0x2f2, 0x32e]
---
0x2de JUMPDEST
0x2df PUSH1 0x0
0x2e1 ADDRESS
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea AND
0x2eb BALANCE
0x2ec GT
0x2ed ISZERO
0x2ee PUSH2 0x32e
0x2f1 JUMPI
---
0x2de: JUMPDEST 
0x2df: V287 = 0x0
0x2e1: V288 = ADDRESS
0x2e2: V289 = 0x1
0x2e4: V290 = 0xa0
0x2e6: V291 = 0x2
0x2e8: V292 = EXP 0x2 0xa0
0x2e9: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x2eb: V295 = BALANCE V294
0x2ec: V296 = GT V295 0x0
0x2ed: V297 = ISZERO V296
0x2ee: V298 = 0x32e
0x2f1: JUMPI 0x32e V297
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x2f2
[0x2f2:0x329]
---
Predecessors: [0x2de]
Successors: [0x32a, 0x32e]
---
0x2f2 CALLER
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb AND
0x2fc PUSH2 0x8fc
0x2ff ADDRESS
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 AND
0x309 BALANCE
0x30a SWAP1
0x30b DUP2
0x30c ISZERO
0x30d MUL
0x30e SWAP1
0x30f PUSH1 0x40
0x311 MLOAD
0x312 PUSH1 0x0
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 DUP4
0x319 SUB
0x31a DUP2
0x31b DUP6
0x31c DUP9
0x31d DUP9
0x31e CALL
0x31f SWAP4
0x320 POP
0x321 POP
0x322 POP
0x323 POP
0x324 ISZERO
0x325 ISZERO
0x326 PUSH2 0x32e
0x329 JUMPI
---
0x2f2: V299 = CALLER
0x2f3: V300 = 0x1
0x2f5: V301 = 0xa0
0x2f7: V302 = 0x2
0x2f9: V303 = EXP 0x2 0xa0
0x2fa: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fb: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x2fc: V306 = 0x8fc
0x2ff: V307 = ADDRESS
0x300: V308 = 0x1
0x302: V309 = 0xa0
0x304: V310 = 0x2
0x306: V311 = EXP 0x2 0xa0
0x307: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x309: V314 = BALANCE V313
0x30c: V315 = ISZERO V314
0x30d: V316 = MUL V315 0x8fc
0x30f: V317 = 0x40
0x311: V318 = M[0x40]
0x312: V319 = 0x0
0x314: V320 = 0x40
0x316: V321 = M[0x40]
0x319: V322 = SUB V318 V321
0x31e: V323 = CALL V316 V305 V314 V321 V322 V321 0x0
0x324: V324 = ISZERO V323
0x325: V325 = ISZERO V324
0x326: V326 = 0x32e
0x329: JUMPI 0x32e V325
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x32a
[0x32a:0x32d]
---
Predecessors: [0x2f2]
Successors: []
---
0x32a PUSH1 0x0
0x32c DUP1
0x32d REVERT
---
0x32a: V327 = 0x0
0x32d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x32e
[0x32e:0x33e]
---
Predecessors: [0x12f, 0x162, 0x2de, 0x2f2]
Successors: [0xa6]
---
0x32e JUMPDEST
0x32f POP
0x330 POP
0x331 POP
0x332 POP
0x333 POP
0x334 POP
0x335 POP
0x336 POP
0x337 POP
0x338 POP
0x339 POP
0x33a SWAP3
0x33b SWAP2
0x33c POP
0x33d POP
0x33e JUMP
---
0x32e: JUMPDEST 
0x33e: JUMP 0xa6
---
Entry stack: [V13, 0xa6, V35, V46, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 15
Stack additions: [S11]
Exit stack: [V13, 0x0]

================================

Block 0x33f
[0x33f:0x356]
---
Predecessors: [0xc3]
Successors: [0x12d, 0x357]
---
0x33f JUMPDEST
0x340 PUSH1 0x0
0x342 SLOAD
0x343 CALLER
0x344 PUSH1 0x1
0x346 PUSH1 0xa0
0x348 PUSH1 0x2
0x34a EXP
0x34b SUB
0x34c SWAP1
0x34d DUP2
0x34e AND
0x34f SWAP2
0x350 AND
0x351 EQ
0x352 ISZERO
0x353 PUSH2 0x12d
0x356 JUMPI
---
0x33f: JUMPDEST 
0x340: V328 = 0x0
0x342: V329 = S[0x0]
0x343: V330 = CALLER
0x344: V331 = 0x1
0x346: V332 = 0xa0
0x348: V333 = 0x2
0x34a: V334 = EXP 0x2 0xa0
0x34b: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34e: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x350: V337 = AND V329 0xffffffffffffffffffffffffffffffffffffffff
0x351: V338 = EQ V337 V336
0x352: V339 = ISZERO V338
0x353: V340 = 0x12d
0x356: JUMPI 0x12d V339
---
Entry stack: [V13, 0x3d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3d]

================================

Block 0x357
[0x357:0x38e]
---
Predecessors: [0x33f]
Successors: [0x12d, 0x38f]
---
0x357 CALLER
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 AND
0x361 PUSH2 0x8fc
0x364 ADDRESS
0x365 PUSH1 0x1
0x367 PUSH1 0xa0
0x369 PUSH1 0x2
0x36b EXP
0x36c SUB
0x36d AND
0x36e BALANCE
0x36f SWAP1
0x370 DUP2
0x371 ISZERO
0x372 MUL
0x373 SWAP1
0x374 PUSH1 0x40
0x376 MLOAD
0x377 PUSH1 0x0
0x379 PUSH1 0x40
0x37b MLOAD
0x37c DUP1
0x37d DUP4
0x37e SUB
0x37f DUP2
0x380 DUP6
0x381 DUP9
0x382 DUP9
0x383 CALL
0x384 SWAP4
0x385 POP
0x386 POP
0x387 POP
0x388 POP
0x389 ISZERO
0x38a ISZERO
0x38b PUSH2 0x12d
0x38e JUMPI
---
0x357: V341 = CALLER
0x358: V342 = 0x1
0x35a: V343 = 0xa0
0x35c: V344 = 0x2
0x35e: V345 = EXP 0x2 0xa0
0x35f: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x360: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x361: V348 = 0x8fc
0x364: V349 = ADDRESS
0x365: V350 = 0x1
0x367: V351 = 0xa0
0x369: V352 = 0x2
0x36b: V353 = EXP 0x2 0xa0
0x36c: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36d: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x36e: V356 = BALANCE V355
0x371: V357 = ISZERO V356
0x372: V358 = MUL V357 0x8fc
0x374: V359 = 0x40
0x376: V360 = M[0x40]
0x377: V361 = 0x0
0x379: V362 = 0x40
0x37b: V363 = M[0x40]
0x37e: V364 = SUB V360 V363
0x383: V365 = CALL V358 V347 V356 V363 V364 V363 0x0
0x389: V366 = ISZERO V365
0x38a: V367 = ISZERO V366
0x38b: V368 = 0x12d
0x38e: JUMPI 0x12d V367
---
Entry stack: [V13, 0x3d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3d]

================================

Block 0x38f
[0x38f:0x392]
---
Predecessors: [0x357]
Successors: []
---
0x38f PUSH1 0x0
0x391 DUP1
0x392 REVERT
---
0x38f: V369 = 0x0
0x392: REVERT 0x0 0x0
---
Entry stack: [V13, 0x3d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3d]

================================

Block 0x393
[0x393:0x3be]
---
Predecessors: []
Successors: []
---
0x393 STOP
0x394 LOG1
0x395 PUSH6 0x627a7a723058
0x39c SHA3
0x39d MISSING 0xe3
0x39e PUSH1 0x9c
0x3a0 NOT
0x3a1 SWAP11
0x3a2 MUL
0x3a3 SWAP15
0x3a4 CALLDATALOAD
0x3a5 MISSING 0xda
0x3a6 RETURNDATACOPY
0x3a7 BLOCKHASH
0x3a8 ORIGIN
0x3a9 MISSING 0xad
0x3aa MISSING 0xec
0x3ab PUSH16 0x8a21a7cb49bd5a76c4a951203e93ea42
0x3bc MISSING 0xcc
0x3bd STOP
0x3be MISSING 0x29
---
0x393: STOP 
0x394: LOG S0 S1 S2
0x395: V370 = 0x627a7a723058
0x39c: V371 = SHA3 0x627a7a723058 S3
0x39d: MISSING 0xe3
0x39e: V372 = 0x9c
0x3a0: V373 = NOT 0x9c
0x3a2: V374 = MUL S10 S0
0x3a4: V375 = CALLDATALOAD S15
0x3a5: MISSING 0xda
0x3a6: RETURNDATACOPY S0 S1 S2
0x3a7: V376 = BLOCKHASH S3
0x3a8: V377 = ORIGIN
0x3a9: MISSING 0xad
0x3aa: MISSING 0xec
0x3ab: V378 = 0x8a21a7cb49bd5a76c4a951203e93ea42
0x3bc: MISSING 0xcc
0x3bd: STOP 
0x3be: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V371, V375, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff63, S11, S12, S13, S14, V374, V377, V376, 0x8a21a7cb49bd5a76c4a951203e93ea42]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x3f
Exit block: 0x3d
Body: 0x3d, 0x3f, 0x46, 0x4a, 0xcb, 0xe3, 0x11b, 0x11f, 0x12d

Function 1:
Public function signature: 0xab3b8747
Entry block: 0x52
Exit block: 0x2c4
Body: 0x52, 0x59, 0x5d, 0xa6, 0x12f, 0x162, 0x16a, 0x16e, 0x178, 0x193, 0x194, 0x1db, 0x1df, 0x1ec, 0x1f0, 0x252, 0x26d, 0x26e, 0x2b3, 0x2b7, 0x2c4, 0x2c8, 0x2d3, 0x2de, 0x2f2, 0x32a, 0x32e

Function 2:
Public function signature: 0xfcae8c06
Entry block: 0xb8
Exit block: 0x38f
Body: 0x3d, 0xb8, 0xbf, 0xc3, 0x12d, 0x33f, 0x357, 0x38f

Function 3:
Public fallback function
Entry block: 0x3d
Exit block: 0x3d
Body: 0x3d

