Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x7c329e52
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x7c329e52
0x3c: V13 = EQ 0x7c329e52 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7c]
---
0x41 DUP1
0x42 PUSH4 0xc9bd33b8
0x47 EQ
0x48 PUSH2 0x7c
0x4b JUMPI
---
0x42: V15 = 0xc9bd33b8
0x47: V16 = EQ 0xc9bd33b8 V11
0x48: V17 = 0x7c
0x4b: JUMPI 0x7c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x54]
---
Predecessors: [0xd]
Successors: [0x55, 0x59]
---
0x4e JUMPDEST
0x4f CALLVALUE
0x50 ISZERO
0x51 PUSH2 0x59
0x54 JUMPI
---
0x4e: JUMPDEST 
0x4f: V18 = CALLVALUE
0x50: V19 = ISZERO V18
0x51: V20 = 0x59
0x54: JUMPI 0x59 V19
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x55
[0x55:0x58]
---
Predecessors: [0x4e]
Successors: []
---
0x55 PUSH1 0x0
0x57 DUP1
0x58 REVERT
---
0x55: V21 = 0x0
0x58: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0x79]
---
Predecessors: [0x4e]
Successors: [0x9f]
---
0x59 JUMPDEST
0x5a PUSH2 0x7a
0x5d PUSH1 0x4
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 SWAP1
0x63 PUSH1 0x20
0x65 ADD
0x66 SWAP1
0x67 DUP3
0x68 ADD
0x69 DUP1
0x6a CALLDATALOAD
0x6b SWAP1
0x6c PUSH1 0x20
0x6e ADD
0x6f SWAP2
0x70 SWAP1
0x71 SWAP2
0x72 SWAP3
0x73 SWAP1
0x74 POP
0x75 POP
0x76 PUSH2 0x9f
0x79 JUMP
---
0x59: JUMPDEST 
0x5a: V22 = 0x7a
0x5d: V23 = 0x4
0x61: V24 = CALLDATALOAD 0x4
0x63: V25 = 0x20
0x65: V26 = ADD 0x20 0x4
0x68: V27 = ADD 0x4 V24
0x6a: V28 = CALLDATALOAD V27
0x6c: V29 = 0x20
0x6e: V30 = ADD 0x20 V27
0x76: V31 = 0x9f
0x79: JUMP 0x9f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7a, V30, V28]
Exit stack: [V11, 0x7a, V30, V28]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x252]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x82]
---
Predecessors: [0x41]
Successors: [0x83, 0x87]
---
0x7c JUMPDEST
0x7d CALLVALUE
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x7c: JUMPDEST 
0x7d: V32 = CALLVALUE
0x7e: V33 = ISZERO V32
0x7f: V34 = 0x87
0x82: JUMPI 0x87 V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x7c]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V35 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x9c]
---
Predecessors: [0x7c]
Successors: [0x2a5]
---
0x87 JUMPDEST
0x88 PUSH2 0x9d
0x8b PUSH1 0x4
0x8d DUP1
0x8e DUP1
0x8f CALLDATALOAD
0x90 SWAP1
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP1
0x95 SWAP2
0x96 SWAP1
0x97 POP
0x98 POP
0x99 PUSH2 0x2a5
0x9c JUMP
---
0x87: JUMPDEST 
0x88: V36 = 0x9d
0x8b: V37 = 0x4
0x8f: V38 = CALLDATALOAD 0x4
0x91: V39 = 0x20
0x93: V40 = ADD 0x20 0x4
0x99: V41 = 0x2a5
0x9c: JUMP 0x2a5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9d, V38]
Exit stack: [V11, 0x9d, V38]

================================

Block 0x9d
[0x9d:0x9e]
---
Predecessors: [0x426]
Successors: []
---
0x9d JUMPDEST
0x9e STOP
---
0x9d: JUMPDEST 
0x9e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa9]
---
Predecessors: [0x59]
Successors: [0xaa]
---
0x9f JUMPDEST
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 CALLER
0xa4 SWAP2
0xa5 POP
0xa6 PUSH1 0x0
0xa8 SWAP1
0xa9 POP
---
0x9f: JUMPDEST 
0xa0: V42 = 0x0
0xa3: V43 = CALLER
0xa6: V44 = 0x0
---
Entry stack: [V11, 0x7a, V30, V28]
Stack pops: 0
Stack additions: [V43, 0x0]
Exit stack: [V11, 0x7a, V30, V28, V43, 0x0]

================================

Block 0xaa
[0xaa:0xb5]
---
Predecessors: [0x9f, 0x245]
Successors: [0xb6, 0x252]
---
0xaa JUMPDEST
0xab DUP4
0xac DUP4
0xad SWAP1
0xae POP
0xaf DUP2
0xb0 LT
0xb1 ISZERO
0xb2 PUSH2 0x252
0xb5 JUMPI
---
0xaa: JUMPDEST 
0xb0: V45 = LT S0 V28
0xb1: V46 = ISZERO V45
0xb2: V47 = 0x252
0xb5: JUMPI 0x252 V46
---
Entry stack: [V11, 0x7a, V30, V28, V43, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x7a, V30, V28, V43, S0]

================================

Block 0xb6
[0xb6:0x14f]
---
Predecessors: [0xaa]
Successors: [0x150, 0x151]
---
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 SWAP1
0xba SLOAD
0xbb SWAP1
0xbc PUSH2 0x100
0xbf EXP
0xc0 SWAP1
0xc1 DIV
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee PUSH1 0x40
0xf0 MLOAD
0xf1 DUP1
0xf2 DUP1
0xf3 PUSH32 0x6769766542697274682875696e74323536290000000000000000000000000000
0x114 DUP2
0x115 MSTORE
0x116 POP
0x117 PUSH1 0x12
0x119 ADD
0x11a SWAP1
0x11b POP
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 SHA3
0x124 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x142 SWAP1
0x143 DIV
0x144 DUP6
0x145 DUP6
0x146 DUP5
0x147 DUP2
0x148 DUP2
0x149 LT
0x14a ISZERO
0x14b ISZERO
0x14c PUSH2 0x151
0x14f JUMPI
---
0xb6: V48 = 0x0
0xba: V49 = S[0x0]
0xbc: V50 = 0x100
0xbf: V51 = EXP 0x100 0x0
0xc1: V52 = DIV V49 0x1
0xc2: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xd8: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xee: V57 = 0x40
0xf0: V58 = M[0x40]
0xf3: V59 = 0x6769766542697274682875696e74323536290000000000000000000000000000
0x115: M[V58] = 0x6769766542697274682875696e74323536290000000000000000000000000000
0x117: V60 = 0x12
0x119: V61 = ADD 0x12 V58
0x11c: V62 = 0x40
0x11e: V63 = M[0x40]
0x121: V64 = SUB V61 V63
0x123: V65 = SHA3 V63 V64
0x124: V66 = 0x100000000000000000000000000000000000000000000000000000000
0x143: V67 = DIV V65 0x100000000000000000000000000000000000000000000000000000000
0x149: V68 = LT S0 V28
0x14a: V69 = ISZERO V68
0x14b: V70 = ISZERO V69
0x14c: V71 = 0x151
0x14f: JUMPI 0x151 V70
---
Entry stack: [V11, 0x7a, V30, V28, V43, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V56, V67, S3, S2, S0]
Exit stack: [V11, 0x7a, V30, V28, V43, S0, V56, V67, V30, V28, S0]

================================

Block 0x150
[0x150:0x150]
---
Predecessors: [0xb6]
Successors: []
---
0x150 INVALID
---
0x150: INVALID 
---
Entry stack: [V11, 0x7a, V30, V28, V43, S5, V56, V67, V30, V28, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a, V30, V28, V43, S5, V56, V67, V30, V28, S0]

================================

Block 0x151
[0x151:0x1ab]
---
Predecessors: [0xb6]
Successors: [0x1ac, 0x245]
---
0x151 JUMPDEST
0x152 SWAP1
0x153 POP
0x154 PUSH1 0x20
0x156 MUL
0x157 ADD
0x158 CALLDATALOAD
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP3
0x15d PUSH4 0xffffffff
0x162 AND
0x163 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x181 MUL
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x4
0x186 ADD
0x187 DUP1
0x188 DUP3
0x189 DUP2
0x18a MSTORE
0x18b PUSH1 0x20
0x18d ADD
0x18e SWAP2
0x18f POP
0x190 POP
0x191 PUSH1 0x0
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 DUP4
0x198 SUB
0x199 DUP2
0x19a PUSH1 0x0
0x19c DUP8
0x19d PUSH2 0x646e
0x1a0 GAS
0x1a1 SUB
0x1a2 CALL
0x1a3 SWAP3
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 ISZERO
0x1a8 PUSH2 0x245
0x1ab JUMPI
---
0x151: JUMPDEST 
0x154: V72 = 0x20
0x156: V73 = MUL 0x20 S0
0x157: V74 = ADD V73 V30
0x158: V75 = CALLDATALOAD V74
0x159: V76 = 0x40
0x15b: V77 = M[0x40]
0x15d: V78 = 0xffffffff
0x162: V79 = AND 0xffffffff V67
0x163: V80 = 0x100000000000000000000000000000000000000000000000000000000
0x181: V81 = MUL 0x100000000000000000000000000000000000000000000000000000000 V79
0x183: M[V77] = V81
0x184: V82 = 0x4
0x186: V83 = ADD 0x4 V77
0x18a: M[V83] = V75
0x18b: V84 = 0x20
0x18d: V85 = ADD 0x20 V83
0x191: V86 = 0x0
0x193: V87 = 0x40
0x195: V88 = M[0x40]
0x198: V89 = SUB V85 V88
0x19a: V90 = 0x0
0x19d: V91 = 0x646e
0x1a0: V92 = GAS
0x1a1: V93 = SUB V92 0x646e
0x1a2: V94 = CALL V93 V56 0x0 V88 V89 V88 0x0
0x1a7: V95 = ISZERO V94
0x1a8: V96 = 0x245
0x1ab: JUMPI 0x245 V95
---
Entry stack: [V11, 0x7a, V30, V28, V43, S5, V56, V67, V30, V28, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x7a, V30, V28, V43, S5]

================================

Block 0x1ac
[0x1ac:0x22b]
---
Predecessors: [0x151]
Successors: [0x22c, 0x230]
---
0x1ac PUSH1 0x1
0x1ae PUSH1 0x0
0x1b0 SWAP1
0x1b1 SLOAD
0x1b2 SWAP1
0x1b3 PUSH2 0x100
0x1b6 EXP
0x1b7 SWAP1
0x1b8 DIV
0x1b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ce AND
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 PUSH4 0x8a054ac2
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP2
0x1ee PUSH4 0xffffffff
0x1f3 AND
0x1f4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x212 MUL
0x213 DUP2
0x214 MSTORE
0x215 PUSH1 0x4
0x217 ADD
0x218 PUSH1 0x0
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP1
0x21e DUP4
0x21f SUB
0x220 DUP2
0x221 PUSH1 0x0
0x223 DUP8
0x224 DUP1
0x225 EXTCODESIZE
0x226 ISZERO
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x1ac: V97 = 0x1
0x1ae: V98 = 0x0
0x1b1: V99 = S[0x1]
0x1b3: V100 = 0x100
0x1b6: V101 = EXP 0x100 0x0
0x1b8: V102 = DIV V99 0x1
0x1b9: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1cf: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1e5: V107 = 0x8a054ac2
0x1ea: V108 = 0x40
0x1ec: V109 = M[0x40]
0x1ee: V110 = 0xffffffff
0x1f3: V111 = AND 0xffffffff 0x8a054ac2
0x1f4: V112 = 0x100000000000000000000000000000000000000000000000000000000
0x212: V113 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8a054ac2
0x214: M[V109] = 0x8a054ac200000000000000000000000000000000000000000000000000000000
0x215: V114 = 0x4
0x217: V115 = ADD 0x4 V109
0x218: V116 = 0x0
0x21a: V117 = 0x40
0x21c: V118 = M[0x40]
0x21f: V119 = SUB V115 V118
0x221: V120 = 0x0
0x225: V121 = EXTCODESIZE V106
0x226: V122 = ISZERO V121
0x227: V123 = ISZERO V122
0x228: V124 = 0x230
0x22b: JUMPI 0x230 V123
---
Entry stack: [V11, 0x7a, V30, V28, V43, S0]
Stack pops: 0
Stack additions: [V106, 0x8a054ac2, V115, 0x0, V118, V119, V118, 0x0, V106]
Exit stack: [V11, 0x7a, V30, V28, V43, S0, V106, 0x8a054ac2, V115, 0x0, V118, V119, V118, 0x0, V106]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x1ac]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V125 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7a, V30, V28, V43, S9, V106, 0x8a054ac2, V115, 0x0, V118, V119, V118, 0x0, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a, V30, V28, V43, S9, V106, 0x8a054ac2, V115, 0x0, V118, V119, V118, 0x0, V106]

================================

Block 0x230
[0x230:0x23c]
---
Predecessors: [0x1ac]
Successors: [0x23d, 0x241]
---
0x230 JUMPDEST
0x231 PUSH2 0x2c6
0x234 GAS
0x235 SUB
0x236 CALL
0x237 ISZERO
0x238 ISZERO
0x239 PUSH2 0x241
0x23c JUMPI
---
0x230: JUMPDEST 
0x231: V126 = 0x2c6
0x234: V127 = GAS
0x235: V128 = SUB V127 0x2c6
0x236: V129 = CALL V128 V106 0x0 V118 V119 V118 0x0
0x237: V130 = ISZERO V129
0x238: V131 = ISZERO V130
0x239: V132 = 0x241
0x23c: JUMPI 0x241 V131
---
Entry stack: [V11, 0x7a, V30, V28, V43, S9, V106, 0x8a054ac2, V115, 0x0, V118, V119, V118, 0x0, V106]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x7a, V30, V28, V43, S9, V106, 0x8a054ac2, V115]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x230]
Successors: []
---
0x23d PUSH1 0x0
0x23f DUP1
0x240 REVERT
---
0x23d: V133 = 0x0
0x240: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7a, V30, V28, V43, S3, V106, 0x8a054ac2, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a, V30, V28, V43, S3, V106, 0x8a054ac2, V115]

================================

Block 0x241
[0x241:0x244]
---
Predecessors: [0x230]
Successors: [0x245]
---
0x241 JUMPDEST
0x242 POP
0x243 POP
0x244 POP
---
0x241: JUMPDEST 
---
Entry stack: [V11, 0x7a, V30, V28, V43, S3, V106, 0x8a054ac2, V115]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x7a, V30, V28, V43, S3]

================================

Block 0x245
[0x245:0x251]
---
Predecessors: [0x151, 0x241]
Successors: [0xaa]
---
0x245 JUMPDEST
0x246 DUP1
0x247 DUP1
0x248 PUSH1 0x1
0x24a ADD
0x24b SWAP2
0x24c POP
0x24d POP
0x24e PUSH2 0xaa
0x251 JUMP
---
0x245: JUMPDEST 
0x248: V134 = 0x1
0x24a: V135 = ADD 0x1 S0
0x24e: V136 = 0xaa
0x251: JUMP 0xaa
---
Entry stack: [V11, 0x7a, V30, V28, V43, S0]
Stack pops: 1
Stack additions: [V135]
Exit stack: [V11, 0x7a, V30, V28, V43, V135]

================================

Block 0x252
[0x252:0x2a4]
---
Predecessors: [0xaa]
Successors: [0x7a]
---
0x252 JUMPDEST
0x253 DUP2
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a PUSH2 0x8fc
0x26d ADDRESS
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 BALANCE
0x285 SWAP1
0x286 DUP2
0x287 ISZERO
0x288 MUL
0x289 SWAP1
0x28a PUSH1 0x40
0x28c MLOAD
0x28d PUSH1 0x0
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 DUP4
0x294 SUB
0x295 DUP2
0x296 DUP6
0x297 DUP9
0x298 DUP9
0x299 CALL
0x29a SWAP4
0x29b POP
0x29c POP
0x29d POP
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 JUMP
---
0x252: JUMPDEST 
0x254: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x26a: V139 = 0x8fc
0x26d: V140 = ADDRESS
0x26e: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x284: V143 = BALANCE V142
0x287: V144 = ISZERO V143
0x288: V145 = MUL V144 0x8fc
0x28a: V146 = 0x40
0x28c: V147 = M[0x40]
0x28d: V148 = 0x0
0x28f: V149 = 0x40
0x291: V150 = M[0x40]
0x294: V151 = SUB V147 V150
0x299: V152 = CALL V145 V138 V143 V150 V151 V150 0x0
0x2a4: JUMP 0x7a
---
Entry stack: [V11, 0x7a, V30, V28, V43, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a5
[0x2a5:0x38c]
---
Predecessors: [0x87]
Successors: [0x38d, 0x426]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x0
0x2a8 CALLER
0x2a9 SWAP1
0x2aa POP
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae SWAP1
0x2af SLOAD
0x2b0 SWAP1
0x2b1 PUSH2 0x100
0x2b4 EXP
0x2b5 SWAP1
0x2b6 DIV
0x2b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cc AND
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 DUP1
0x2e7 DUP1
0x2e8 PUSH32 0x6769766542697274682875696e74323536290000000000000000000000000000
0x309 DUP2
0x30a MSTORE
0x30b POP
0x30c PUSH1 0x12
0x30e ADD
0x30f SWAP1
0x310 POP
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP1
0x315 SWAP2
0x316 SUB
0x317 SWAP1
0x318 SHA3
0x319 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x337 SWAP1
0x338 DIV
0x339 DUP4
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP3
0x33e PUSH4 0xffffffff
0x343 AND
0x344 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x362 MUL
0x363 DUP2
0x364 MSTORE
0x365 PUSH1 0x4
0x367 ADD
0x368 DUP1
0x369 DUP3
0x36a DUP2
0x36b MSTORE
0x36c PUSH1 0x20
0x36e ADD
0x36f SWAP2
0x370 POP
0x371 POP
0x372 PUSH1 0x0
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP1
0x378 DUP4
0x379 SUB
0x37a DUP2
0x37b PUSH1 0x0
0x37d DUP8
0x37e PUSH2 0x646e
0x381 GAS
0x382 SUB
0x383 CALL
0x384 SWAP3
0x385 POP
0x386 POP
0x387 POP
0x388 ISZERO
0x389 PUSH2 0x426
0x38c JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V153 = 0x0
0x2a8: V154 = CALLER
0x2ab: V155 = 0x0
0x2af: V156 = S[0x0]
0x2b1: V157 = 0x100
0x2b4: V158 = EXP 0x100 0x0
0x2b6: V159 = DIV V156 0x1
0x2b7: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2cd: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2e3: V164 = 0x40
0x2e5: V165 = M[0x40]
0x2e8: V166 = 0x6769766542697274682875696e74323536290000000000000000000000000000
0x30a: M[V165] = 0x6769766542697274682875696e74323536290000000000000000000000000000
0x30c: V167 = 0x12
0x30e: V168 = ADD 0x12 V165
0x311: V169 = 0x40
0x313: V170 = M[0x40]
0x316: V171 = SUB V168 V170
0x318: V172 = SHA3 V170 V171
0x319: V173 = 0x100000000000000000000000000000000000000000000000000000000
0x338: V174 = DIV V172 0x100000000000000000000000000000000000000000000000000000000
0x33a: V175 = 0x40
0x33c: V176 = M[0x40]
0x33e: V177 = 0xffffffff
0x343: V178 = AND 0xffffffff V174
0x344: V179 = 0x100000000000000000000000000000000000000000000000000000000
0x362: V180 = MUL 0x100000000000000000000000000000000000000000000000000000000 V178
0x364: M[V176] = V180
0x365: V181 = 0x4
0x367: V182 = ADD 0x4 V176
0x36b: M[V182] = V38
0x36c: V183 = 0x20
0x36e: V184 = ADD 0x20 V182
0x372: V185 = 0x0
0x374: V186 = 0x40
0x376: V187 = M[0x40]
0x379: V188 = SUB V184 V187
0x37b: V189 = 0x0
0x37e: V190 = 0x646e
0x381: V191 = GAS
0x382: V192 = SUB V191 0x646e
0x383: V193 = CALL V192 V163 0x0 V187 V188 V187 0x0
0x388: V194 = ISZERO V193
0x389: V195 = 0x426
0x38c: JUMPI 0x426 V194
---
Entry stack: [V11, 0x9d, V38]
Stack pops: 1
Stack additions: [S0, V154]
Exit stack: [V11, 0x9d, V38, V154]

================================

Block 0x38d
[0x38d:0x40c]
---
Predecessors: [0x2a5]
Successors: [0x40d, 0x411]
---
0x38d PUSH1 0x1
0x38f PUSH1 0x0
0x391 SWAP1
0x392 SLOAD
0x393 SWAP1
0x394 PUSH2 0x100
0x397 EXP
0x398 SWAP1
0x399 DIV
0x39a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3af AND
0x3b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c5 AND
0x3c6 PUSH4 0x8a054ac2
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce DUP2
0x3cf PUSH4 0xffffffff
0x3d4 AND
0x3d5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3f3 MUL
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 PUSH1 0x4
0x3f8 ADD
0x3f9 PUSH1 0x0
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe DUP1
0x3ff DUP4
0x400 SUB
0x401 DUP2
0x402 PUSH1 0x0
0x404 DUP8
0x405 DUP1
0x406 EXTCODESIZE
0x407 ISZERO
0x408 ISZERO
0x409 PUSH2 0x411
0x40c JUMPI
---
0x38d: V196 = 0x1
0x38f: V197 = 0x0
0x392: V198 = S[0x1]
0x394: V199 = 0x100
0x397: V200 = EXP 0x100 0x0
0x399: V201 = DIV V198 0x1
0x39a: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x3b0: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c5: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x3c6: V206 = 0x8a054ac2
0x3cb: V207 = 0x40
0x3cd: V208 = M[0x40]
0x3cf: V209 = 0xffffffff
0x3d4: V210 = AND 0xffffffff 0x8a054ac2
0x3d5: V211 = 0x100000000000000000000000000000000000000000000000000000000
0x3f3: V212 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8a054ac2
0x3f5: M[V208] = 0x8a054ac200000000000000000000000000000000000000000000000000000000
0x3f6: V213 = 0x4
0x3f8: V214 = ADD 0x4 V208
0x3f9: V215 = 0x0
0x3fb: V216 = 0x40
0x3fd: V217 = M[0x40]
0x400: V218 = SUB V214 V217
0x402: V219 = 0x0
0x406: V220 = EXTCODESIZE V205
0x407: V221 = ISZERO V220
0x408: V222 = ISZERO V221
0x409: V223 = 0x411
0x40c: JUMPI 0x411 V222
---
Entry stack: [V11, 0x9d, V38, V154]
Stack pops: 0
Stack additions: [V205, 0x8a054ac2, V214, 0x0, V217, V218, V217, 0x0, V205]
Exit stack: [V11, 0x9d, V38, V154, V205, 0x8a054ac2, V214, 0x0, V217, V218, V217, 0x0, V205]

================================

Block 0x40d
[0x40d:0x410]
---
Predecessors: [0x38d]
Successors: []
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
---
0x40d: V224 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9d, V38, V154, V205, 0x8a054ac2, V214, 0x0, V217, V218, V217, 0x0, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9d, V38, V154, V205, 0x8a054ac2, V214, 0x0, V217, V218, V217, 0x0, V205]

================================

Block 0x411
[0x411:0x41d]
---
Predecessors: [0x38d]
Successors: [0x41e, 0x422]
---
0x411 JUMPDEST
0x412 PUSH2 0x2c6
0x415 GAS
0x416 SUB
0x417 CALL
0x418 ISZERO
0x419 ISZERO
0x41a PUSH2 0x422
0x41d JUMPI
---
0x411: JUMPDEST 
0x412: V225 = 0x2c6
0x415: V226 = GAS
0x416: V227 = SUB V226 0x2c6
0x417: V228 = CALL V227 V205 0x0 V217 V218 V217 0x0
0x418: V229 = ISZERO V228
0x419: V230 = ISZERO V229
0x41a: V231 = 0x422
0x41d: JUMPI 0x422 V230
---
Entry stack: [V11, 0x9d, V38, V154, V205, 0x8a054ac2, V214, 0x0, V217, V218, V217, 0x0, V205]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x9d, V38, V154, V205, 0x8a054ac2, V214]

================================

Block 0x41e
[0x41e:0x421]
---
Predecessors: [0x411]
Successors: []
---
0x41e PUSH1 0x0
0x420 DUP1
0x421 REVERT
---
0x41e: V232 = 0x0
0x421: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9d, V38, V154, V205, 0x8a054ac2, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9d, V38, V154, V205, 0x8a054ac2, V214]

================================

Block 0x422
[0x422:0x425]
---
Predecessors: [0x411]
Successors: [0x426]
---
0x422 JUMPDEST
0x423 POP
0x424 POP
0x425 POP
---
0x422: JUMPDEST 
---
Entry stack: [V11, 0x9d, V38, V154, V205, 0x8a054ac2, V214]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x9d, V38, V154]

================================

Block 0x426
[0x426:0x476]
---
Predecessors: [0x2a5, 0x422]
Successors: [0x9d]
---
0x426 JUMPDEST
0x427 DUP1
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e PUSH2 0x8fc
0x441 ADDRESS
0x442 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x457 AND
0x458 BALANCE
0x459 SWAP1
0x45a DUP2
0x45b ISZERO
0x45c MUL
0x45d SWAP1
0x45e PUSH1 0x40
0x460 MLOAD
0x461 PUSH1 0x0
0x463 PUSH1 0x40
0x465 MLOAD
0x466 DUP1
0x467 DUP4
0x468 SUB
0x469 DUP2
0x46a DUP6
0x46b DUP9
0x46c DUP9
0x46d CALL
0x46e SWAP4
0x46f POP
0x470 POP
0x471 POP
0x472 POP
0x473 POP
0x474 POP
0x475 POP
0x476 JUMP
---
0x426: JUMPDEST 
0x428: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x43e: V235 = 0x8fc
0x441: V236 = ADDRESS
0x442: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x457: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x458: V239 = BALANCE V238
0x45b: V240 = ISZERO V239
0x45c: V241 = MUL V240 0x8fc
0x45e: V242 = 0x40
0x460: V243 = M[0x40]
0x461: V244 = 0x0
0x463: V245 = 0x40
0x465: V246 = M[0x40]
0x468: V247 = SUB V243 V246
0x46d: V248 = CALL V241 V234 V239 V246 V247 V246 0x0
0x476: JUMP 0x9d
---
Entry stack: [V11, 0x9d, V38, V154]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x477
[0x477:0x4b5]
---
Predecessors: []
Successors: []
---
0x477 STOP
0x478 LOG1
0x479 PUSH6 0x627a7a723058
0x480 SHA3
0x481 MISSING 0x47
0x482 PUSH26 0x40dfb65c7e1d8e46dc18e6f0dec3aac440f2be02c50da2fce1d3
0x49d MISSING 0xbb
0x49e POP
0x49f PUSH22 0x500029
---
0x477: STOP 
0x478: LOG S0 S1 S2
0x479: V249 = 0x627a7a723058
0x480: V250 = SHA3 0x627a7a723058 S3
0x481: MISSING 0x47
0x482: V251 = 0x40dfb65c7e1d8e46dc18e6f0dec3aac440f2be02c50da2fce1d3
0x49d: MISSING 0xbb
0x49f: V252 = 0x500029
---
Entry stack: []
Stack pops: 0
Stack additions: [V250, 0x40dfb65c7e1d8e46dc18e6f0dec3aac440f2be02c50da2fce1d3, 0x500029]
Exit stack: []

================================

Function 0:
Public function signature: 0x7c329e52
Entry block: 0x4e
Exit block: 0x23d
Body: 0x4e, 0x55, 0x59, 0x7a, 0x9f, 0xaa, 0xb6, 0x150, 0x151, 0x1ac, 0x22c, 0x230, 0x23d, 0x241, 0x245, 0x252

Function 1:
Public function signature: 0xc9bd33b8
Entry block: 0x7c
Exit block: 0x41e
Body: 0x7c, 0x83, 0x87, 0x9d, 0x2a5, 0x38d, 0x40d, 0x411, 0x41e, 0x422, 0x426

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

