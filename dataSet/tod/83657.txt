Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x77]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x13af4035
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x77
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x13af4035
0x1a: V12 = EQ V10 0x13af4035
0x1b: V13 = 0x77
0x1e: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xac]
---
0x1f DUP1
0x20 PUSH4 0x35c1d349
0x25 EQ
0x26 PUSH2 0xac
0x29 JUMPI
---
0x20: V14 = 0x35c1d349
0x25: V15 = EQ 0x35c1d349 V10
0x26: V16 = 0xac
0x29: JUMPI 0xac V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xfb]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xfb
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xfb
0x34: JUMPI 0xfb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x10d]
---
0x35 DUP1
0x36 PUSH4 0x9003adfe
0x3b EQ
0x3c PUSH2 0x10d
0x3f JUMPI
---
0x36: V20 = 0x9003adfe
0x3b: V21 = EQ 0x9003adfe V10
0x3c: V22 = 0x10d
0x3f: JUMPI 0x10d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x116]
---
0x40 DUP1
0x41 PUSH4 0xa60f3588
0x46 EQ
0x47 PUSH2 0x116
0x4a JUMPI
---
0x41: V23 = 0xa60f3588
0x46: V24 = EQ 0xa60f3588 V10
0x47: V25 = 0x116
0x4a: JUMPI 0x116 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x11f]
---
0x4b DUP1
0x4c PUSH4 0xb69ef8a8
0x51 EQ
0x52 PUSH2 0x11f
0x55 JUMPI
---
0x4c: V26 = 0xb69ef8a8
0x51: V27 = EQ 0xb69ef8a8 V10
0x52: V28 = 0x11f
0x55: JUMPI 0x11f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x128]
---
0x56 DUP1
0x57 PUSH4 0xc8796572
0x5c EQ
0x5d PUSH2 0x128
0x60 JUMPI
---
0x57: V29 = 0xc8796572
0x5c: V30 = EQ 0xc8796572 V10
0x5d: V31 = 0x128
0x60: JUMPI 0x128 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x152]
---
0x61 DUP1
0x62 PUSH4 0xe97dcb62
0x67 EQ
0x68 PUSH2 0x152
0x6b JUMPI
---
0x62: V32 = 0xe97dcb62
0x67: V33 = EQ 0xe97dcb62 V10
0x68: V34 = 0x152
0x6b: JUMPI 0x152 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x0, 0x61]
Successors: [0x156]
---
0x6c JUMPDEST
0x6d PUSH2 0x190
0x70 PUSH2 0x150
0x73 PUSH2 0x156
0x76 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x190
0x70: V36 = 0x150
0x73: V37 = 0x156
0x76: JUMP 0x156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190, 0x150]
Exit stack: [V10, 0x190, 0x150]

================================

Block 0x77
[0x77:0x96]
---
Predecessors: [0xb]
Successors: [0x97, 0xa9]
---
0x77 JUMPDEST
0x78 PUSH2 0x190
0x7b PUSH1 0x4
0x7d CALLDATALOAD
0x7e PUSH1 0x4
0x80 SLOAD
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 SWAP1
0x8a DUP2
0x8b AND
0x8c CALLER
0x8d SWAP2
0x8e SWAP1
0x8f SWAP2
0x90 AND
0x91 EQ
0x92 ISZERO
0x93 PUSH2 0xa9
0x96 JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x190
0x7b: V39 = 0x4
0x7d: V40 = CALLDATALOAD 0x4
0x7e: V41 = 0x4
0x80: V42 = S[0x4]
0x81: V43 = 0x1
0x83: V44 = 0xa0
0x85: V45 = 0x2
0x87: V46 = EXP 0x2 0xa0
0x88: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x8c: V49 = CALLER
0x90: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x91: V51 = EQ V50 V48
0x92: V52 = ISZERO V51
0x93: V53 = 0xa9
0x96: JUMPI 0xa9 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190, V40]
Exit stack: [V10, 0x190, V40]

================================

Block 0x97
[0x97:0xa8]
---
Predecessors: [0x77]
Successors: [0xa9]
---
0x97 PUSH1 0x4
0x99 DUP1
0x9a SLOAD
0x9b PUSH1 0x1
0x9d PUSH1 0xa0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 SUB
0xa3 NOT
0xa4 AND
0xa5 DUP3
0xa6 OR
0xa7 SWAP1
0xa8 SSTORE
---
0x97: V54 = 0x4
0x9a: V55 = S[0x4]
0x9b: V56 = 0x1
0x9d: V57 = 0xa0
0x9f: V58 = 0x2
0xa1: V59 = EXP 0x2 0xa0
0xa2: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3: V61 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V62 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V55
0xa6: V63 = OR V40 V62
0xa8: S[0x4] = V63
---
Entry stack: [V10, 0x190, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x190, V40]

================================

Block 0xa9
[0xa9:0xab]
---
Predecessors: [0x77, 0x97]
Successors: [0x190]
---
0xa9 JUMPDEST
0xaa POP
0xab JUMP
---
0xa9: JUMPDEST 
0xab: JUMP 0x190
---
Entry stack: [V10, 0x190, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xbf]
---
Predecessors: [0x1f]
Successors: [0xc0]
---
0xac JUMPDEST
0xad PUSH2 0x192
0xb0 PUSH1 0x4
0xb2 CALLDATALOAD
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 SLOAD
0xb7 DUP3
0xb8 SWAP1
0xb9 DUP2
0xba LT
0xbb ISZERO
0xbc PUSH2 0x2
0xbf JUMPI
---
0xac: JUMPDEST 
0xad: V64 = 0x192
0xb0: V65 = 0x4
0xb2: V66 = CALLDATALOAD 0x4
0xb3: V67 = 0x0
0xb6: V68 = S[0x0]
0xba: V69 = LT V66 V68
0xbb: V70 = ISZERO V69
0xbc: V71 = 0x2
0xbf: THROWI V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x192, V66, 0x0, V66]
Exit stack: [V10, 0x192, V66, 0x0, V66]

================================

Block 0xc0
[0xc0:0xfa]
---
Predecessors: [0xac]
Successors: [0x192]
---
0xc0 POP
0xc1 DUP1
0xc2 MSTORE
0xc3 PUSH1 0x2
0xc5 MUL
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 MLOAD
0xca PUSH1 0x20
0xcc PUSH2 0x43f
0xcf DUP4
0xd0 CODECOPY
0xd1 DUP2
0xd2 MLOAD
0xd3 SWAP2
0xd4 MSTORE
0xd5 DUP2
0xd6 ADD
0xd7 SLOAD
0xd8 PUSH1 0x0
0xda DUP1
0xdb MLOAD
0xdc PUSH1 0x20
0xde PUSH2 0x45f
0xe1 DUP4
0xe2 CODECOPY
0xe3 DUP2
0xe4 MLOAD
0xe5 SWAP2
0xe6 MSTORE
0xe7 SWAP2
0xe8 SWAP1
0xe9 SWAP2
0xea ADD
0xeb SLOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 SWAP2
0xf5 SWAP1
0xf6 SWAP2
0xf7 AND
0xf8 SWAP1
0xf9 DUP3
0xfa JUMP
---
0xc2: M[0x0] = 0x0
0xc3: V72 = 0x2
0xc5: V73 = MUL 0x2 V66
0xc6: V74 = 0x0
0xc9: V75 = M[0x0]
0xca: V76 = 0x20
0xcc: V77 = 0x43f
0xd0: CODECOPY 0x0 0x43f 0x20
0xd2: V78 = M[0x0]
0xd4: M[0x0] = V75
0xd6: V79 = ADD V73 V78
0xd7: V80 = S[V79]
0xd8: V81 = 0x0
0xdb: V82 = M[0x0]
0xdc: V83 = 0x20
0xde: V84 = 0x45f
0xe2: CODECOPY 0x0 0x45f 0x20
0xe4: V85 = M[0x0]
0xe6: M[0x0] = V82
0xea: V86 = ADD V85 V73
0xeb: V87 = S[V86]
0xec: V88 = 0x1
0xee: V89 = 0xa0
0xf0: V90 = 0x2
0xf2: V91 = EXP 0x2 0xa0
0xf3: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xfa: JUMP 0x192
---
Entry stack: [V10, 0x192, V66, 0x0, V66]
Stack pops: 4
Stack additions: [S3, V93, V87]
Exit stack: [V10, 0x192, V93, V87]

================================

Block 0xfb
[0xfb:0x10c]
---
Predecessors: [0x2a]
Successors: [0x1b8]
---
0xfb JUMPDEST
0xfc PUSH2 0x1b8
0xff PUSH1 0x4
0x101 SLOAD
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a AND
0x10b DUP2
0x10c JUMP
---
0xfb: JUMPDEST 
0xfc: V94 = 0x1b8
0xff: V95 = 0x4
0x101: V96 = S[0x4]
0x102: V97 = 0x1
0x104: V98 = 0xa0
0x106: V99 = 0x2
0x108: V100 = EXP 0x2 0xa0
0x109: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x10c: JUMP 0x1b8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b8, V102]
Exit stack: [V10, 0x1b8, V102]

================================

Block 0x10d
[0x10d:0x115]
---
Predecessors: [0x35]
Successors: [0x1d5]
---
0x10d JUMPDEST
0x10e PUSH2 0x1d5
0x111 PUSH1 0x2
0x113 SLOAD
0x114 DUP2
0x115 JUMP
---
0x10d: JUMPDEST 
0x10e: V103 = 0x1d5
0x111: V104 = 0x2
0x113: V105 = S[0x2]
0x115: JUMP 0x1d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5, V105]
Exit stack: [V10, 0x1d5, V105]

================================

Block 0x116
[0x116:0x11e]
---
Predecessors: [0x40]
Successors: [0x1d5]
---
0x116 JUMPDEST
0x117 PUSH2 0x1d5
0x11a PUSH1 0x1
0x11c SLOAD
0x11d DUP2
0x11e JUMP
---
0x116: JUMPDEST 
0x117: V106 = 0x1d5
0x11a: V107 = 0x1
0x11c: V108 = S[0x1]
0x11e: JUMP 0x1d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5, V108]
Exit stack: [V10, 0x1d5, V108]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x4b]
Successors: [0x1d5]
---
0x11f JUMPDEST
0x120 PUSH2 0x1d5
0x123 PUSH1 0x3
0x125 SLOAD
0x126 DUP2
0x127 JUMP
---
0x11f: JUMPDEST 
0x120: V109 = 0x1d5
0x123: V110 = 0x3
0x125: V111 = S[0x3]
0x127: JUMP 0x1d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5, V111]
Exit stack: [V10, 0x1d5, V111]

================================

Block 0x128
[0x128:0x144]
---
Predecessors: [0x56]
Successors: [0x145, 0x150]
---
0x128 JUMPDEST
0x129 PUSH2 0x190
0x12c PUSH1 0x4
0x12e SLOAD
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 SWAP1
0x138 DUP2
0x139 AND
0x13a CALLER
0x13b SWAP2
0x13c SWAP1
0x13d SWAP2
0x13e AND
0x13f EQ
0x140 ISZERO
0x141 PUSH2 0x150
0x144 JUMPI
---
0x128: JUMPDEST 
0x129: V112 = 0x190
0x12c: V113 = 0x4
0x12e: V114 = S[0x4]
0x12f: V115 = 0x1
0x131: V116 = 0xa0
0x133: V117 = 0x2
0x135: V118 = EXP 0x2 0xa0
0x136: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x13a: V121 = CALLER
0x13e: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V123 = EQ V122 V120
0x140: V124 = ISZERO V123
0x141: V125 = 0x150
0x144: JUMPI 0x150 V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V10, 0x190]

================================

Block 0x145
[0x145:0x14f]
---
Predecessors: [0x128]
Successors: [0x150, 0x414]
---
0x145 PUSH1 0x2
0x147 SLOAD
0x148 PUSH1 0x0
0x14a EQ
0x14b ISZERO
0x14c PUSH2 0x414
0x14f JUMPI
---
0x145: V126 = 0x2
0x147: V127 = S[0x2]
0x148: V128 = 0x0
0x14a: V129 = EQ 0x0 V127
0x14b: V130 = ISZERO V129
0x14c: V131 = 0x414
0x14f: JUMPI 0x414 V130
---
Entry stack: [V10, 0x190]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x190]

================================

Block 0x150
[0x150:0x151]
---
Predecessors: [0x128, 0x145, 0x18b]
Successors: [0x190]
---
0x150 JUMPDEST
0x151 JUMP
---
0x150: JUMPDEST 
0x151: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x61]
Successors: [0x156]
---
0x152 JUMPDEST
0x153 PUSH2 0x190
---
0x152: JUMPDEST 
0x153: V132 = 0x190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V10, 0x190]

================================

Block 0x156
[0x156:0x16b]
---
Predecessors: [0x6c, 0x152]
Successors: [0x16c, 0x1e7]
---
0x156 JUMPDEST
0x157 PUSH1 0x0
0x159 PUSH1 0x0
0x15b PUSH1 0x0
0x15d PUSH7 0x2386f26fc10000
0x165 CALLVALUE
0x166 LT
0x167 ISZERO
0x168 PUSH2 0x1e7
0x16b JUMPI
---
0x156: JUMPDEST 
0x157: V133 = 0x0
0x159: V134 = 0x0
0x15b: V135 = 0x0
0x15d: V136 = 0x2386f26fc10000
0x165: V137 = CALLVALUE
0x166: V138 = LT V137 0x2386f26fc10000
0x167: V139 = ISZERO V138
0x168: V140 = 0x1e7
0x16b: JUMPI 0x1e7 V139
---
Entry stack: [V10, S1, {0x150, 0x190}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0x150, 0x190}, 0x0, 0x0, 0x0]

================================

Block 0x16c
[0x16c:0x18a]
---
Predecessors: [0x156]
Successors: [0x18b]
---
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 CALLER
0x178 AND
0x179 SWAP1
0x17a DUP3
0x17b SWAP1
0x17c CALLVALUE
0x17d SWAP1
0x17e DUP3
0x17f DUP2
0x180 DUP2
0x181 DUP2
0x182 DUP6
0x183 DUP9
0x184 DUP4
0x185 CALL
0x186 POP
0x187 POP
0x188 POP
0x189 POP
0x18a POP
---
0x16c: V141 = 0x40
0x16e: V142 = M[0x40]
0x16f: V143 = 0x1
0x171: V144 = 0xa0
0x173: V145 = 0x2
0x175: V146 = EXP 0x2 0xa0
0x176: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x177: V148 = CALLER
0x178: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V150 = CALLVALUE
0x185: V151 = CALL 0x0 V149 V150 V142 0x0 V142 0x0
---
Entry stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]

================================

Block 0x18b
[0x18b:0x18f]
---
Predecessors: [0x16c, 0x332]
Successors: [0x150, 0x190]
---
0x18b JUMPDEST
0x18c POP
0x18d POP
0x18e POP
0x18f JUMP
---
0x18b: JUMPDEST 
0x18f: JUMP {0x150, 0x190}
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x190
[0x190:0x191]
---
Predecessors: [0xa9, 0x150, 0x18b, 0x414]
Successors: []
---
0x190 JUMPDEST
0x191 STOP
---
0x190: JUMPDEST 
0x191: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x192
[0x192:0x1b7]
---
Predecessors: [0xc0]
Successors: []
---
0x192 JUMPDEST
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 DUP4
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 AND
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 DUP3
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac SWAP3
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x192: JUMPDEST 
0x193: V152 = 0x40
0x195: V153 = M[0x40]
0x198: V154 = 0x1
0x19a: V155 = 0xa0
0x19c: V156 = 0x2
0x19e: V157 = EXP 0x2 0xa0
0x19f: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1a2: M[V153] = V159
0x1a3: V160 = 0x20
0x1a5: V161 = ADD 0x20 V153
0x1a8: M[V161] = V87
0x1a9: V162 = 0x20
0x1ab: V163 = ADD 0x20 V161
0x1b0: V164 = 0x40
0x1b2: V165 = M[0x40]
0x1b5: V166 = SUB V163 V165
0x1b7: RETURN V165 V166
---
Entry stack: [V10, 0x192, V93, V87]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x192]

================================

Block 0x1b8
[0x1b8:0x1d4]
---
Predecessors: [0xfb]
Successors: []
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x40
0x1bb DUP1
0x1bc MLOAD
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 SWAP3
0x1c6 SWAP1
0x1c7 SWAP3
0x1c8 AND
0x1c9 DUP3
0x1ca MSTORE
0x1cb MLOAD
0x1cc SWAP1
0x1cd DUP2
0x1ce SWAP1
0x1cf SUB
0x1d0 PUSH1 0x20
0x1d2 ADD
0x1d3 SWAP1
0x1d4 RETURN
---
0x1b8: JUMPDEST 
0x1b9: V167 = 0x40
0x1bc: V168 = M[0x40]
0x1bd: V169 = 0x1
0x1bf: V170 = 0xa0
0x1c1: V171 = 0x2
0x1c3: V172 = EXP 0x2 0xa0
0x1c4: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1ca: M[V168] = V174
0x1cb: V175 = M[0x40]
0x1cf: V176 = SUB V168 V175
0x1d0: V177 = 0x20
0x1d2: V178 = ADD 0x20 V176
0x1d4: RETURN V175 V178
---
Entry stack: [V10, 0x1b8, V102]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b8]

================================

Block 0x1d5
[0x1d5:0x1e6]
---
Predecessors: [0x10d, 0x116, 0x11f]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 DUP1
0x1d9 MLOAD
0x1da SWAP2
0x1db DUP3
0x1dc MSTORE
0x1dd MLOAD
0x1de SWAP1
0x1df DUP2
0x1e0 SWAP1
0x1e1 SUB
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 SWAP1
0x1e6 RETURN
---
0x1d5: JUMPDEST 
0x1d6: V179 = 0x40
0x1d9: V180 = M[0x40]
0x1dc: M[V180] = S0
0x1dd: V181 = M[0x40]
0x1e1: V182 = SUB V180 V181
0x1e2: V183 = 0x20
0x1e4: V184 = ADD 0x20 V182
0x1e6: RETURN V181 V184
---
Entry stack: [V10, 0x1d5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d5]

================================

Block 0x1e7
[0x1e7:0x1f7]
---
Predecessors: [0x156]
Successors: [0x1f8, 0x233]
---
0x1e7 JUMPDEST
0x1e8 PUSH8 0x29a2241af62c0000
0x1f1 CALLVALUE
0x1f2 GT
0x1f3 ISZERO
0x1f4 PUSH2 0x233
0x1f7 JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V185 = 0x29a2241af62c0000
0x1f1: V186 = CALLVALUE
0x1f2: V187 = GT V186 0x29a2241af62c0000
0x1f3: V188 = ISZERO V187
0x1f4: V189 = 0x233
0x1f7: JUMPI 0x233 V188
---
Entry stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]

================================

Block 0x1f8
[0x1f8:0x232]
---
Predecessors: [0x1e7]
Successors: [0x237]
---
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 CALLER
0x204 AND
0x205 SWAP1
0x206 PUSH1 0x0
0x208 SWAP1
0x209 PUSH8 0x29a2241af62bffff
0x212 NOT
0x213 CALLVALUE
0x214 ADD
0x215 SWAP1
0x216 DUP3
0x217 DUP2
0x218 DUP2
0x219 DUP2
0x21a DUP6
0x21b DUP9
0x21c DUP4
0x21d CALL
0x21e POP
0x21f PUSH8 0x29a2241af62c0000
0x228 SWAP7
0x229 POP
0x22a PUSH2 0x237
0x22d SWAP4
0x22e POP
0x22f POP
0x230 POP
0x231 POP
0x232 JUMP
---
0x1f8: V190 = 0x40
0x1fa: V191 = M[0x40]
0x1fb: V192 = 0x1
0x1fd: V193 = 0xa0
0x1ff: V194 = 0x2
0x201: V195 = EXP 0x2 0xa0
0x202: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V197 = CALLER
0x204: V198 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x206: V199 = 0x0
0x209: V200 = 0x29a2241af62bffff
0x212: V201 = NOT 0x29a2241af62bffff
0x213: V202 = CALLVALUE
0x214: V203 = ADD V202 0xffffffffffffffffffffffffffffffffffffffffffffffffd65ddbe509d40000
0x21d: V204 = CALL 0x0 V198 V203 V191 0x0 V191 0x0
0x21f: V205 = 0x29a2241af62c0000
0x22a: V206 = 0x237
0x232: JUMP 0x237
---
Entry stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x29a2241af62c0000, S1, S0]
Exit stack: [V10, S4, {0x150, 0x190}, 0x29a2241af62c0000, 0x0, 0x0]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x1e7]
Successors: [0x237]
---
0x233 JUMPDEST
0x234 CALLVALUE
0x235 SWAP3
0x236 POP
---
0x233: JUMPDEST 
0x234: V207 = CALLVALUE
---
Entry stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V207, S1, S0]
Exit stack: [V10, S4, {0x150, 0x190}, V207, 0x0, 0x0]

================================

Block 0x237
[0x237:0x251]
---
Predecessors: [0x1f8, 0x233]
Successors: [0x252, 0x292]
---
0x237 JUMPDEST
0x238 PUSH1 0x0
0x23a DUP1
0x23b SLOAD
0x23c PUSH1 0x1
0x23e DUP2
0x23f ADD
0x240 DUP1
0x241 DUP4
0x242 SSTORE
0x243 SWAP1
0x244 SWAP4
0x245 POP
0x246 SWAP1
0x247 DUP2
0x248 DUP5
0x249 DUP1
0x24a ISZERO
0x24b DUP3
0x24c SWAP1
0x24d GT
0x24e PUSH2 0x292
0x251 JUMPI
---
0x237: JUMPDEST 
0x238: V208 = 0x0
0x23b: V209 = S[0x0]
0x23c: V210 = 0x1
0x23f: V211 = ADD V209 0x1
0x242: S[0x0] = V211
0x24a: V212 = ISZERO V209
0x24d: V213 = GT V212 V211
0x24e: V214 = 0x292
0x251: JUMPI 0x292 V213
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V209, S0, V211, 0x0, V211, V209]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V209, 0x0, V211, 0x0, V211, V209]

================================

Block 0x252
[0x252:0x26b]
---
Predecessors: [0x237]
Successors: [0x26c]
---
0x252 PUSH1 0x2
0x254 MUL
0x255 DUP2
0x256 PUSH1 0x2
0x258 MUL
0x259 DUP4
0x25a PUSH1 0x0
0x25c MSTORE
0x25d PUSH1 0x20
0x25f PUSH1 0x0
0x261 SHA3
0x262 SWAP2
0x263 DUP3
0x264 ADD
0x265 SWAP2
0x266 ADD
0x267 PUSH2 0x292
0x26a SWAP2
0x26b SWAP1
---
0x252: V215 = 0x2
0x254: V216 = MUL 0x2 V209
0x256: V217 = 0x2
0x258: V218 = MUL 0x2 V211
0x25a: V219 = 0x0
0x25c: M[0x0] = 0x0
0x25d: V220 = 0x20
0x25f: V221 = 0x0
0x261: V222 = SHA3 0x0 0x20
0x264: V223 = ADD V222 V216
0x266: V224 = ADD V222 V218
0x267: V225 = 0x292
---
Entry stack: [V10, S8, {0x150, 0x190}, S6, V209, 0x0, V211, 0x0, V211, V209]
Stack pops: 3
Stack additions: [S2, S1, 0x292, V223, V224]
Exit stack: [V10, S8, {0x150, 0x190}, S6, V209, 0x0, V211, 0x0, V211, 0x292, V223, V224]

================================

Block 0x26c
[0x26c:0x274]
---
Predecessors: [0x252, 0x275]
Successors: [0x275, 0x311]
---
0x26c JUMPDEST
0x26d DUP1
0x26e DUP3
0x26f GT
0x270 ISZERO
0x271 PUSH2 0x311
0x274 JUMPI
---
0x26c: JUMPDEST 
0x26f: V226 = GT V223 S0
0x270: V227 = ISZERO V226
0x271: V228 = 0x311
0x274: JUMPI 0x311 V227
---
Entry stack: [V10, S10, {0x150, 0x190}, S8, V209, 0x0, V211, 0x0, V211, 0x292, V223, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S10, {0x150, 0x190}, S8, V209, 0x0, V211, 0x0, V211, 0x292, V223, S0]

================================

Block 0x275
[0x275:0x291]
---
Predecessors: [0x26c]
Successors: [0x26c]
---
0x275 DUP1
0x276 SLOAD
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f NOT
0x280 AND
0x281 DUP2
0x282 SSTORE
0x283 PUSH1 0x0
0x285 PUSH1 0x1
0x287 SWAP2
0x288 SWAP1
0x289 SWAP2
0x28a ADD
0x28b SWAP1
0x28c DUP2
0x28d SSTORE
0x28e PUSH2 0x26c
0x291 JUMP
---
0x276: V229 = S[S0]
0x277: V230 = 0x1
0x279: V231 = 0xa0
0x27b: V232 = 0x2
0x27d: V233 = EXP 0x2 0xa0
0x27e: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V235 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x280: V236 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V229
0x282: S[S0] = V236
0x283: V237 = 0x0
0x285: V238 = 0x1
0x28a: V239 = ADD 0x1 S0
0x28d: S[V239] = 0x0
0x28e: V240 = 0x26c
0x291: JUMP 0x26c
---
Entry stack: [V10, S10, {0x150, 0x190}, S8, V209, 0x0, V211, 0x0, V211, 0x292, V223, S0]
Stack pops: 1
Stack additions: [V239]
Exit stack: [V10, S10, {0x150, 0x190}, S8, V209, 0x0, V211, 0x0, V211, 0x292, V223, V239]

================================

Block 0x292
[0x292:0x2a6]
---
Predecessors: [0x237, 0x311]
Successors: [0x2a7]
---
0x292 JUMPDEST
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 CALLER
0x298 PUSH1 0x0
0x29a PUSH1 0x0
0x29c POP
0x29d DUP4
0x29e DUP2
0x29f SLOAD
0x2a0 DUP2
0x2a1 LT
0x2a2 ISZERO
0x2a3 PUSH2 0x2
0x2a6 JUMPI
---
0x292: JUMPDEST 
0x297: V241 = CALLER
0x298: V242 = 0x0
0x29a: V243 = 0x0
0x29f: V244 = S[0x0]
0x2a1: V245 = LT V209 V244
0x2a2: V246 = ISZERO V245
0x2a3: V247 = 0x2
0x2a6: THROWI V246
---
Entry stack: [V10, S8, {0x150, 0x190}, S6, V209, 0x0, V211, 0x0, V211, S0]
Stack pops: 6
Stack additions: [S5, S4, V241, 0x0, S5]
Exit stack: [V10, S8, {0x150, 0x190}, S6, V209, 0x0, V241, 0x0, V209]

================================

Block 0x2a7
[0x2a7:0x2dc]
---
Predecessors: [0x292]
Successors: [0x2dd]
---
0x2a7 DUP2
0x2a8 DUP1
0x2a9 MSTORE
0x2aa PUSH1 0x2
0x2ac MUL
0x2ad PUSH1 0x0
0x2af DUP1
0x2b0 MLOAD
0x2b1 PUSH1 0x20
0x2b3 PUSH2 0x43f
0x2b6 DUP4
0x2b7 CODECOPY
0x2b8 DUP2
0x2b9 MLOAD
0x2ba SWAP2
0x2bb MSTORE
0x2bc ADD
0x2bd DUP1
0x2be SLOAD
0x2bf PUSH1 0x1
0x2c1 PUSH1 0xa0
0x2c3 PUSH1 0x2
0x2c5 EXP
0x2c6 SUB
0x2c7 NOT
0x2c8 AND
0x2c9 SWAP1
0x2ca SWAP3
0x2cb OR
0x2cc SWAP1
0x2cd SWAP2
0x2ce SSTORE
0x2cf DUP1
0x2d0 SLOAD
0x2d1 DUP5
0x2d2 SWAP2
0x2d3 SWAP1
0x2d4 DUP5
0x2d5 SWAP1
0x2d6 DUP2
0x2d7 LT
0x2d8 ISZERO
0x2d9 PUSH2 0x2
0x2dc JUMPI
---
0x2a9: M[0x0] = 0x0
0x2aa: V248 = 0x2
0x2ac: V249 = MUL 0x2 V209
0x2ad: V250 = 0x0
0x2b0: V251 = M[0x0]
0x2b1: V252 = 0x20
0x2b3: V253 = 0x43f
0x2b7: CODECOPY 0x0 0x43f 0x20
0x2b9: V254 = M[0x0]
0x2bb: M[0x0] = V251
0x2bc: V255 = ADD V254 V249
0x2be: V256 = S[V255]
0x2bf: V257 = 0x1
0x2c1: V258 = 0xa0
0x2c3: V259 = 0x2
0x2c5: V260 = EXP 0x2 0xa0
0x2c6: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c7: V262 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V263 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V256
0x2cb: V264 = OR V241 V263
0x2ce: S[V255] = V264
0x2d0: V265 = S[0x0]
0x2d7: V266 = LT V209 V265
0x2d8: V267 = ISZERO V266
0x2d9: V268 = 0x2
0x2dc: THROWI V267
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V209, 0x0, V241, 0x0, V209]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, S1, S4]
Exit stack: [V10, S7, {0x150, 0x190}, S5, V209, 0x0, S5, 0x0, V209]

================================

Block 0x2dd
[0x2dd:0x2f9]
---
Predecessors: [0x2a7]
Successors: [0x2fa, 0x315]
---
0x2dd PUSH1 0x2
0x2df MUL
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 MLOAD
0x2e4 PUSH1 0x20
0x2e6 PUSH2 0x45f
0x2e9 DUP4
0x2ea CODECOPY
0x2eb DUP2
0x2ec MLOAD
0x2ed SWAP2
0x2ee MSTORE
0x2ef ADD
0x2f0 SWAP2
0x2f1 SWAP1
0x2f2 SWAP2
0x2f3 SSTORE
0x2f4 DUP3
0x2f5 EQ
0x2f6 PUSH2 0x315
0x2f9 JUMPI
---
0x2dd: V269 = 0x2
0x2df: V270 = MUL 0x2 V209
0x2e0: V271 = 0x0
0x2e3: V272 = M[0x0]
0x2e4: V273 = 0x20
0x2e6: V274 = 0x45f
0x2ea: CODECOPY 0x0 0x45f 0x20
0x2ec: V275 = M[0x0]
0x2ee: M[0x0] = V272
0x2ef: V276 = ADD V275 V270
0x2f3: S[V276] = S2
0x2f5: V277 = EQ V209 0x0
0x2f6: V278 = 0x315
0x2f9: JUMPI 0x315 V277
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V209, 0x0, S2, 0x0, V209]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, S7, {0x150, 0x190}, S5, V209, 0x0]

================================

Block 0x2fa
[0x2fa:0x310]
---
Predecessors: [0x2dd]
Successors: [0x31e]
---
0x2fa PUSH1 0x2
0x2fc DUP1
0x2fd SLOAD
0x2fe PUSH1 0x32
0x300 DUP6
0x301 DIV
0x302 ADD
0x303 SWAP1
0x304 SSTORE
0x305 PUSH1 0x3
0x307 DUP1
0x308 SLOAD
0x309 DUP5
0x30a ADD
0x30b SWAP1
0x30c SSTORE
0x30d PUSH2 0x31e
0x310 JUMP
---
0x2fa: V279 = 0x2
0x2fd: V280 = S[0x2]
0x2fe: V281 = 0x32
0x301: V282 = DIV S2 0x32
0x302: V283 = ADD V282 V280
0x304: S[0x2] = V283
0x305: V284 = 0x3
0x308: V285 = S[0x3]
0x30a: V286 = ADD S2 V285
0x30c: S[0x3] = V286
0x30d: V287 = 0x31e
0x310: JUMP 0x31e
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V209, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V209, 0x0]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x26c]
Successors: [0x292]
---
0x311 JUMPDEST
0x312 POP
0x313 SWAP1
0x314 JUMP
---
0x311: JUMPDEST 
0x314: JUMP 0x292
---
Entry stack: [V10, S10, {0x150, 0x190}, S8, V209, 0x0, V211, 0x0, V211, 0x292, V223, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S10, {0x150, 0x190}, S8, V209, 0x0, V211, 0x0, V211, V223]

================================

Block 0x315
[0x315:0x31d]
---
Predecessors: [0x2dd]
Successors: [0x31e]
---
0x315 JUMPDEST
0x316 PUSH1 0x2
0x318 DUP1
0x319 SLOAD
0x31a DUP5
0x31b ADD
0x31c SWAP1
0x31d SSTORE
---
0x315: JUMPDEST 
0x316: V288 = 0x2
0x319: V289 = S[0x2]
0x31b: V290 = ADD S2 V289
0x31d: S[0x2] = V290
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V209, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V209, 0x0]

================================

Block 0x31e
[0x31e:0x31e]
---
Predecessors: [0x2fa, 0x315]
Successors: [0x31f]
---
0x31e JUMPDEST
---
0x31e: JUMPDEST 
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V209, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x150, 0x190}, S2, V209, 0x0]

================================

Block 0x31f
[0x31f:0x331]
---
Predecessors: [0x31e, 0x3df]
Successors: [0x332]
---
0x31f JUMPDEST
0x320 PUSH1 0x1
0x322 SLOAD
0x323 PUSH1 0x0
0x325 DUP1
0x326 SLOAD
0x327 PUSH1 0x64
0x329 SWAP3
0x32a SWAP1
0x32b DUP2
0x32c LT
0x32d ISZERO
0x32e PUSH2 0x2
0x331 JUMPI
---
0x31f: JUMPDEST 
0x320: V291 = 0x1
0x322: V292 = S[0x1]
0x323: V293 = 0x0
0x326: V294 = S[0x0]
0x327: V295 = 0x64
0x32c: V296 = LT V292 V294
0x32d: V297 = ISZERO V296
0x32e: V298 = 0x2
0x331: THROWI V297
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V209, S0]
Stack pops: 0
Stack additions: [0x64, 0x0, V292]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V209, S0, 0x64, 0x0, V292]

================================

Block 0x332
[0x332:0x35d]
---
Predecessors: [0x31f]
Successors: [0x18b, 0x35e]
---
0x332 DUP2
0x333 DUP1
0x334 MSTORE
0x335 PUSH1 0x2
0x337 MUL
0x338 PUSH1 0x0
0x33a DUP1
0x33b MLOAD
0x33c PUSH1 0x20
0x33e PUSH2 0x43f
0x341 DUP4
0x342 CODECOPY
0x343 DUP2
0x344 MLOAD
0x345 SWAP2
0x346 MSTORE
0x347 ADD
0x348 SWAP1
0x349 POP
0x34a PUSH1 0x1
0x34c ADD
0x34d SLOAD
0x34e PUSH1 0x3
0x350 SLOAD
0x351 SWAP2
0x352 SWAP1
0x353 DIV
0x354 PUSH1 0xbc
0x356 MUL
0x357 SWAP1
0x358 GT
0x359 ISZERO
0x35a PUSH2 0x18b
0x35d JUMPI
---
0x334: M[0x0] = 0x0
0x335: V299 = 0x2
0x337: V300 = MUL 0x2 V292
0x338: V301 = 0x0
0x33b: V302 = M[0x0]
0x33c: V303 = 0x20
0x33e: V304 = 0x43f
0x342: CODECOPY 0x0 0x43f 0x20
0x344: V305 = M[0x0]
0x346: M[0x0] = V302
0x347: V306 = ADD V305 V300
0x34a: V307 = 0x1
0x34c: V308 = ADD 0x1 V306
0x34d: V309 = S[V308]
0x34e: V310 = 0x3
0x350: V311 = S[0x3]
0x353: V312 = DIV V309 0x64
0x354: V313 = 0xbc
0x356: V314 = MUL 0xbc V312
0x358: V315 = GT V311 V314
0x359: V316 = ISZERO V315
0x35a: V317 = 0x18b
0x35d: JUMPI 0x18b V316
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V209, S3, 0x64, 0x0, V292]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0x150, 0x190}, S5, V209, S3]

================================

Block 0x35e
[0x35e:0x36f]
---
Predecessors: [0x332]
Successors: [0x370]
---
0x35e PUSH1 0x1
0x360 SLOAD
0x361 PUSH1 0x0
0x363 DUP1
0x364 SLOAD
0x365 PUSH1 0x64
0x367 SWAP3
0x368 SWAP1
0x369 DUP2
0x36a LT
0x36b ISZERO
0x36c PUSH2 0x2
0x36f JUMPI
---
0x35e: V318 = 0x1
0x360: V319 = S[0x1]
0x361: V320 = 0x0
0x364: V321 = S[0x0]
0x365: V322 = 0x64
0x36a: V323 = LT V319 V321
0x36b: V324 = ISZERO V323
0x36c: V325 = 0x2
0x36f: THROWI V324
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V209, S0]
Stack pops: 0
Stack additions: [0x64, 0x0, V319]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V209, S0, 0x64, 0x0, V319]

================================

Block 0x370
[0x370:0x39a]
---
Predecessors: [0x35e]
Successors: [0x39b]
---
0x370 PUSH1 0x2
0x372 MUL
0x373 PUSH1 0x0
0x375 DUP1
0x376 MLOAD
0x377 PUSH1 0x20
0x379 PUSH2 0x45f
0x37c DUP4
0x37d CODECOPY
0x37e DUP2
0x37f MLOAD
0x380 SWAP2
0x381 MSTORE
0x382 ADD
0x383 SLOAD
0x384 PUSH1 0x1
0x386 SLOAD
0x387 DUP3
0x388 SLOAD
0x389 SWAP4
0x38a SWAP1
0x38b SWAP2
0x38c DIV
0x38d PUSH1 0x5f
0x38f MUL
0x390 SWAP4
0x391 POP
0x392 SWAP1
0x393 SWAP2
0x394 DUP2
0x395 LT
0x396 ISZERO
0x397 PUSH2 0x2
0x39a JUMPI
---
0x370: V326 = 0x2
0x372: V327 = MUL 0x2 V319
0x373: V328 = 0x0
0x376: V329 = M[0x0]
0x377: V330 = 0x20
0x379: V331 = 0x45f
0x37d: CODECOPY 0x0 0x45f 0x20
0x37f: V332 = M[0x0]
0x381: M[0x0] = V329
0x382: V333 = ADD V332 V327
0x383: V334 = S[V333]
0x384: V335 = 0x1
0x386: V336 = S[0x1]
0x388: V337 = S[0x0]
0x38c: V338 = DIV V334 0x64
0x38d: V339 = 0x5f
0x38f: V340 = MUL 0x5f V338
0x395: V341 = LT V336 V337
0x396: V342 = ISZERO V341
0x397: V343 = 0x2
0x39a: THROWI V342
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V209, S3, 0x64, 0x0, V319]
Stack pops: 4
Stack additions: [V340, S1, V336]
Exit stack: [V10, S7, {0x150, 0x190}, S5, V209, V340, 0x0, V336]

================================

Block 0x39b
[0x39b:0x3de]
---
Predecessors: [0x370]
Successors: [0x3df]
---
0x39b PUSH1 0x2
0x39d MUL
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 MLOAD
0x3a2 PUSH1 0x20
0x3a4 PUSH2 0x43f
0x3a7 DUP4
0x3a8 CODECOPY
0x3a9 DUP2
0x3aa MLOAD
0x3ab SWAP2
0x3ac MSTORE
0x3ad ADD
0x3ae SLOAD
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 PUSH1 0x1
0x3b4 PUSH1 0xa0
0x3b6 PUSH1 0x2
0x3b8 EXP
0x3b9 SUB
0x3ba SWAP2
0x3bb SWAP1
0x3bc SWAP2
0x3bd AND
0x3be SWAP2
0x3bf SWAP1
0x3c0 DUP4
0x3c1 SWAP1
0x3c2 DUP3
0x3c3 DUP2
0x3c4 DUP2
0x3c5 DUP2
0x3c6 DUP6
0x3c7 DUP9
0x3c8 DUP4
0x3c9 CALL
0x3ca POP
0x3cb POP
0x3cc PUSH1 0x1
0x3ce SLOAD
0x3cf DUP3
0x3d0 SLOAD
0x3d1 PUSH1 0x64
0x3d3 SWAP5
0x3d4 POP
0x3d5 SWAP1
0x3d6 SWAP2
0x3d7 POP
0x3d8 DUP2
0x3d9 LT
0x3da ISZERO
0x3db PUSH2 0x2
0x3de JUMPI
---
0x39b: V344 = 0x2
0x39d: V345 = MUL 0x2 V336
0x39e: V346 = 0x0
0x3a1: V347 = M[0x0]
0x3a2: V348 = 0x20
0x3a4: V349 = 0x43f
0x3a8: CODECOPY 0x0 0x43f 0x20
0x3aa: V350 = M[0x0]
0x3ac: M[0x0] = V347
0x3ad: V351 = ADD V350 V345
0x3ae: V352 = S[V351]
0x3af: V353 = 0x40
0x3b1: V354 = M[0x40]
0x3b2: V355 = 0x1
0x3b4: V356 = 0xa0
0x3b6: V357 = 0x2
0x3b8: V358 = EXP 0x2 0xa0
0x3b9: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x3c9: V361 = CALL 0x0 V360 V340 V354 0x0 V354 0x0
0x3cc: V362 = 0x1
0x3ce: V363 = S[0x1]
0x3d0: V364 = S[0x0]
0x3d1: V365 = 0x64
0x3d9: V366 = LT V363 V364
0x3da: V367 = ISZERO V366
0x3db: V368 = 0x2
0x3de: THROWI V367
---
Entry stack: [V10, S6, {0x150, 0x190}, S4, V209, V340, 0x0, V336]
Stack pops: 3
Stack additions: [S2, 0x64, S1, V363]
Exit stack: [V10, S6, {0x150, 0x190}, S4, V209, V340, 0x64, 0x0, V363]

================================

Block 0x3df
[0x3df:0x413]
---
Predecessors: [0x39b]
Successors: [0x31f]
---
0x3df SWAP1
0x3e0 DUP1
0x3e1 MSTORE
0x3e2 PUSH1 0x3
0x3e4 DUP1
0x3e5 SLOAD
0x3e6 PUSH1 0x2
0x3e8 SWAP3
0x3e9 SWAP1
0x3ea SWAP3
0x3eb MUL
0x3ec PUSH1 0x0
0x3ee DUP1
0x3ef MLOAD
0x3f0 PUSH1 0x20
0x3f2 PUSH2 0x45f
0x3f5 DUP4
0x3f6 CODECOPY
0x3f7 DUP2
0x3f8 MLOAD
0x3f9 SWAP2
0x3fa MSTORE
0x3fb ADD
0x3fc SLOAD
0x3fd SWAP3
0x3fe SWAP1
0x3ff SWAP3
0x400 DIV
0x401 PUSH1 0xbc
0x403 MUL
0x404 SWAP1
0x405 SUB
0x406 SWAP1
0x407 SSTORE
0x408 PUSH1 0x1
0x40a DUP1
0x40b SLOAD
0x40c DUP2
0x40d ADD
0x40e SWAP1
0x40f SSTORE
0x410 PUSH2 0x31f
0x413 JUMP
---
0x3e1: M[0x0] = 0x0
0x3e2: V369 = 0x3
0x3e5: V370 = S[0x3]
0x3e6: V371 = 0x2
0x3eb: V372 = MUL 0x2 V363
0x3ec: V373 = 0x0
0x3ef: V374 = M[0x0]
0x3f0: V375 = 0x20
0x3f2: V376 = 0x45f
0x3f6: CODECOPY 0x0 0x45f 0x20
0x3f8: V377 = M[0x0]
0x3fa: M[0x0] = V374
0x3fb: V378 = ADD V377 V372
0x3fc: V379 = S[V378]
0x400: V380 = DIV V379 0x64
0x401: V381 = 0xbc
0x403: V382 = MUL 0xbc V380
0x405: V383 = SUB V370 V382
0x407: S[0x3] = V383
0x408: V384 = 0x1
0x40b: V385 = S[0x1]
0x40d: V386 = ADD 0x1 V385
0x40f: S[0x1] = V386
0x410: V387 = 0x31f
0x413: JUMP 0x31f
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V209, V340, 0x64, 0x0, V363]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0x150, 0x190}, S5, V209, V340]

================================

Block 0x414
[0x414:0x43e]
---
Predecessors: [0x145]
Successors: [0x190]
---
0x414 JUMPDEST
0x415 PUSH1 0x4
0x417 SLOAD
0x418 PUSH1 0x2
0x41a SLOAD
0x41b PUSH1 0x40
0x41d MLOAD
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 SWAP3
0x427 SWAP1
0x428 SWAP3
0x429 AND
0x42a SWAP2
0x42b PUSH1 0x0
0x42d SWAP2
0x42e SWAP1
0x42f DUP3
0x430 DUP2
0x431 DUP2
0x432 DUP2
0x433 DUP6
0x434 DUP9
0x435 DUP4
0x436 CALL
0x437 POP
0x438 POP
0x439 POP
0x43a PUSH1 0x2
0x43c SSTORE
0x43d POP
0x43e JUMP
---
0x414: JUMPDEST 
0x415: V388 = 0x4
0x417: V389 = S[0x4]
0x418: V390 = 0x2
0x41a: V391 = S[0x2]
0x41b: V392 = 0x40
0x41d: V393 = M[0x40]
0x41e: V394 = 0x1
0x420: V395 = 0xa0
0x422: V396 = 0x2
0x424: V397 = EXP 0x2 0xa0
0x425: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x42b: V400 = 0x0
0x436: V401 = CALL 0x0 V399 V391 V393 0x0 V393 0x0
0x43a: V402 = 0x2
0x43c: S[0x2] = 0x0
0x43e: JUMP 0x190
---
Entry stack: [V10, 0x190]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x43f
[0x43f:0x483]
---
Predecessors: []
Successors: []
---
0x43f MISSING 0x29
0x440 MISSING 0xd
0x441 MISSING 0xec
0x442 MISSING 0xd9
0x443 SLOAD
0x444 DUP12
0x445 PUSH3 0xa8d603
0x449 GASLIMIT
0x44a MISSING 0xa9
0x44b DUP9
0x44c CODESIZE
0x44d PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x45e PUSH4 0x290decd9
0x463 SLOAD
0x464 DUP12
0x465 PUSH3 0xa8d603
0x469 GASLIMIT
0x46a MISSING 0xa9
0x46b DUP9
0x46c CODESIZE
0x46d PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x47e PUSH5 0x0
---
0x43f: MISSING 0x29
0x440: MISSING 0xd
0x441: MISSING 0xec
0x442: MISSING 0xd9
0x443: V403 = S[S0]
0x445: V404 = 0xa8d603
0x449: V405 = GASLIMIT
0x44a: MISSING 0xa9
0x44c: V406 = CODESIZE
0x44d: V407 = 0xc84ba6bc95484008f6362f93160ef3e5
0x45e: V408 = 0x290decd9
0x463: V409 = S[0x290decd9]
0x465: V410 = 0xa8d603
0x469: V411 = GASLIMIT
0x46a: MISSING 0xa9
0x46c: V412 = CODESIZE
0x46d: V413 = 0xc84ba6bc95484008f6362f93160ef3e5
0x47e: V414 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V405, 0xa8d603, S11, V403, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V411, 0xa8d603, S7, V409, 0xc84ba6bc95484008f6362f93160ef3e5, V406, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0x0, 0xc84ba6bc95484008f6362f93160ef3e5, V412, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x77
Exit block: 0x190
Body: 0x77, 0x97, 0xa9, 0x190

Function 1:
Public function signature: 0x35c1d349
Entry block: 0xac
Exit block: 0x192
Body: 0xac, 0xc0, 0x192

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xfb
Exit block: 0x1b8
Body: 0xfb, 0x1b8

Function 3:
Public function signature: 0x9003adfe
Entry block: 0x10d
Exit block: 0x1d5
Body: 0x10d, 0x1d5

Function 4:
Public function signature: 0xa60f3588
Entry block: 0x116
Exit block: 0x1d5
Body: 0x116, 0x1d5

Function 5:
Public function signature: 0xb69ef8a8
Entry block: 0x11f
Exit block: 0x1d5
Body: 0x11f, 0x1d5

Function 6:
Public function signature: 0xc8796572
Entry block: 0x128
Exit block: 0x190
Body: 0x128, 0x145, 0x150, 0x190, 0x414

Function 7:
Public function signature: 0xe97dcb62
Entry block: 0x152
Exit block: 0x190
Body: 0x150, 0x152, 0x156, 0x16c, 0x18b, 0x190, 0x1e7, 0x1f8, 0x233, 0x237, 0x252, 0x26c, 0x275, 0x292, 0x2a7, 0x2dd, 0x2fa, 0x311, 0x315, 0x31e, 0x31f, 0x332, 0x35e, 0x370, 0x39b, 0x3df

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x190
Body: 0x6c, 0x150, 0x156, 0x16c, 0x18b, 0x190, 0x1e7, 0x1f8, 0x233, 0x237, 0x252, 0x26c, 0x275, 0x292, 0x2a7, 0x2dd, 0x2fa, 0x311, 0x315, 0x31e, 0x31f, 0x332, 0x35e, 0x370, 0x39b, 0x3df

