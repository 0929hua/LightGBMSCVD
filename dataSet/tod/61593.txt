Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xda]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xda
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xda
0xc: JUMPI 0xda V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x177]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x177
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x177
0x3f: JUMPI 0x177 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x201]
---
0x40 DUP1
0x41 PUSH4 0x95ea7b3
0x46 EQ
0x47 PUSH2 0x201
0x4a JUMPI
---
0x41: V15 = 0x95ea7b3
0x46: V16 = EQ 0x95ea7b3 V11
0x47: V17 = 0x201
0x4a: JUMPI 0x201 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x239]
---
0x4b DUP1
0x4c PUSH4 0x18160ddd
0x51 EQ
0x52 PUSH2 0x239
0x55 JUMPI
---
0x4c: V18 = 0x18160ddd
0x51: V19 = EQ 0x18160ddd V11
0x52: V20 = 0x239
0x55: JUMPI 0x239 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x260]
---
0x56 DUP1
0x57 PUSH4 0x23b872dd
0x5c EQ
0x5d PUSH2 0x260
0x60 JUMPI
---
0x57: V21 = 0x23b872dd
0x5c: V22 = EQ 0x23b872dd V11
0x5d: V23 = 0x260
0x60: JUMPI 0x260 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x28a]
---
0x61 DUP1
0x62 PUSH4 0x313ce567
0x67 EQ
0x68 PUSH2 0x28a
0x6b JUMPI
---
0x62: V24 = 0x313ce567
0x67: V25 = EQ 0x313ce567 V11
0x68: V26 = 0x28a
0x6b: JUMPI 0x28a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x2b5]
---
0x6c DUP1
0x6d PUSH4 0x4a5da9cd
0x72 EQ
0x73 PUSH2 0x2b5
0x76 JUMPI
---
0x6d: V27 = 0x4a5da9cd
0x72: V28 = EQ 0x4a5da9cd V11
0x73: V29 = 0x2b5
0x76: JUMPI 0x2b5 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x2ca]
---
0x77 DUP1
0x78 PUSH4 0x57376198
0x7d EQ
0x7e PUSH2 0x2ca
0x81 JUMPI
---
0x78: V30 = 0x57376198
0x7d: V31 = EQ 0x57376198 V11
0x7e: V32 = 0x2ca
0x81: JUMPI 0x2ca V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x2ee]
---
0x82 DUP1
0x83 PUSH4 0x70a08231
0x88 EQ
0x89 PUSH2 0x2ee
0x8c JUMPI
---
0x83: V33 = 0x70a08231
0x88: V34 = EQ 0x70a08231 V11
0x89: V35 = 0x2ee
0x8c: JUMPI 0x2ee V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x30f]
---
0x8d DUP1
0x8e PUSH4 0x7ecfb675
0x93 EQ
0x94 PUSH2 0x30f
0x97 JUMPI
---
0x8e: V36 = 0x7ecfb675
0x93: V37 = EQ 0x7ecfb675 V11
0x94: V38 = 0x30f
0x97: JUMPI 0x30f V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x324]
---
0x98 DUP1
0x99 PUSH4 0x8da5cb5b
0x9e EQ
0x9f PUSH2 0x324
0xa2 JUMPI
---
0x99: V39 = 0x8da5cb5b
0x9e: V40 = EQ 0x8da5cb5b V11
0x9f: V41 = 0x324
0xa2: JUMPI 0x324 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x355]
---
0xa3 DUP1
0xa4 PUSH4 0x95d89b41
0xa9 EQ
0xaa PUSH2 0x355
0xad JUMPI
---
0xa4: V42 = 0x95d89b41
0xa9: V43 = EQ 0x95d89b41 V11
0xaa: V44 = 0x355
0xad: JUMPI 0x355 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x36a]
---
0xae DUP1
0xaf PUSH4 0xa9059cbb
0xb4 EQ
0xb5 PUSH2 0x36a
0xb8 JUMPI
---
0xaf: V45 = 0xa9059cbb
0xb4: V46 = EQ 0xa9059cbb V11
0xb5: V47 = 0x36a
0xb8: JUMPI 0x36a V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x38e]
---
0xb9 DUP1
0xba PUSH4 0xd8cb4aa3
0xbf EQ
0xc0 PUSH2 0x38e
0xc3 JUMPI
---
0xba: V48 = 0xd8cb4aa3
0xbf: V49 = EQ 0xd8cb4aa3 V11
0xc0: V50 = 0x38e
0xc3: JUMPI 0x38e V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x3af]
---
0xc4 DUP1
0xc5 PUSH4 0xdd62ed3e
0xca EQ
0xcb PUSH2 0x3af
0xce JUMPI
---
0xc5: V51 = 0xdd62ed3e
0xca: V52 = EQ 0xdd62ed3e V11
0xcb: V53 = 0x3af
0xce: JUMPI 0x3af V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x3d6]
---
0xcf DUP1
0xd0 PUSH4 0xfdbb9fdb
0xd5 EQ
0xd6 PUSH2 0x3d6
0xd9 JUMPI
---
0xd0: V54 = 0xfdbb9fdb
0xd5: V55 = EQ 0xfdbb9fdb V11
0xd6: V56 = 0x3d6
0xd9: JUMPI 0x3d6 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0x10a]
---
Predecessors: [0x0, 0xcf]
Successors: [0x10b, 0x114]
---
0xda JUMPDEST
0xdb PUSH1 0x6
0xdd SLOAD
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 SWAP1
0xea SWAP2
0xeb AND
0xec SWAP1
0xed ADDRESS
0xee BALANCE
0xef DUP1
0xf0 ISZERO
0xf1 PUSH2 0x8fc
0xf4 MUL
0xf5 SWAP2
0xf6 PUSH1 0x0
0xf8 DUP2
0xf9 DUP2
0xfa DUP2
0xfb DUP6
0xfc DUP9
0xfd DUP9
0xfe CALL
0xff SWAP4
0x100 POP
0x101 POP
0x102 POP
0x103 POP
0x104 ISZERO
0x105 DUP1
0x106 ISZERO
0x107 PUSH2 0x114
0x10a JUMPI
---
0xda: JUMPDEST 
0xdb: V57 = 0x6
0xdd: V58 = S[0x6]
0xde: V59 = 0x40
0xe0: V60 = M[0x40]
0xe1: V61 = 0x1
0xe3: V62 = 0xa0
0xe5: V63 = 0x2
0xe7: V64 = EXP 0x2 0xa0
0xe8: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb: V66 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0xed: V67 = ADDRESS
0xee: V68 = BALANCE V67
0xf0: V69 = ISZERO V68
0xf1: V70 = 0x8fc
0xf4: V71 = MUL 0x8fc V69
0xf6: V72 = 0x0
0xfe: V73 = CALL V71 V66 V68 V60 0x0 V60 0x0
0x104: V74 = ISZERO V73
0x106: V75 = ISZERO V74
0x107: V76 = 0x114
0x10a: JUMPI 0x114 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V11, V74]

================================

Block 0x10b
[0x10b:0x113]
---
Predecessors: [0xda]
Successors: []
---
0x10b RETURNDATASIZE
0x10c PUSH1 0x0
0x10e DUP1
0x10f RETURNDATACOPY
0x110 RETURNDATASIZE
0x111 PUSH1 0x0
0x113 REVERT
---
0x10b: V77 = RETURNDATASIZE
0x10c: V78 = 0x0
0x10f: RETURNDATACOPY 0x0 0x0 V77
0x110: V79 = RETURNDATASIZE
0x111: V80 = 0x0
0x113: REVERT 0x0 V79
---
Entry stack: [V11, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V74]

================================

Block 0x114
[0x114:0x176]
---
Predecessors: [0xda]
Successors: []
---
0x114 JUMPDEST
0x115 POP
0x116 PUSH1 0x40
0x118 DUP1
0x119 MLOAD
0x11a PUSH1 0x20
0x11c DUP1
0x11d DUP3
0x11e MSTORE
0x11f PUSH1 0x19
0x121 SWAP1
0x122 DUP3
0x123 ADD
0x124 MSTORE
0x125 PUSH32 0x5468616e6b7320666f7220796f757220646f6e6174696f6e2e00000000000000
0x146 DUP2
0x147 DUP4
0x148 ADD
0x149 MSTORE
0x14a SWAP1
0x14b MLOAD
0x14c PUSH32 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x16d SWAP2
0x16e DUP2
0x16f SWAP1
0x170 SUB
0x171 PUSH1 0x60
0x173 ADD
0x174 SWAP1
0x175 LOG1
0x176 STOP
---
0x114: JUMPDEST 
0x116: V81 = 0x40
0x119: V82 = M[0x40]
0x11a: V83 = 0x20
0x11e: M[V82] = 0x20
0x11f: V84 = 0x19
0x123: V85 = ADD V82 0x20
0x124: M[V85] = 0x19
0x125: V86 = 0x5468616e6b7320666f7220796f757220646f6e6174696f6e2e00000000000000
0x148: V87 = ADD 0x40 V82
0x149: M[V87] = 0x5468616e6b7320666f7220796f757220646f6e6174696f6e2e00000000000000
0x14b: V88 = M[0x40]
0x14c: V89 = 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x170: V90 = SUB V82 V88
0x171: V91 = 0x60
0x173: V92 = ADD 0x60 V90
0x175: LOG V88 V92 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x176: STOP 
---
Entry stack: [V11, V74]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x177
[0x177:0x17e]
---
Predecessors: [0xd]
Successors: [0x17f, 0x183]
---
0x177 JUMPDEST
0x178 CALLVALUE
0x179 DUP1
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x177: JUMPDEST 
0x178: V93 = CALLVALUE
0x17a: V94 = ISZERO V93
0x17b: V95 = 0x183
0x17e: JUMPI 0x183 V94
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V11, V93]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x177]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V96 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V11, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V93]

================================

Block 0x183
[0x183:0x18b]
---
Predecessors: [0x177]
Successors: [0x47e]
---
0x183 JUMPDEST
0x184 POP
0x185 PUSH2 0x18c
0x188 PUSH2 0x47e
0x18b JUMP
---
0x183: JUMPDEST 
0x185: V97 = 0x18c
0x188: V98 = 0x47e
0x18b: JUMP 0x47e
---
Entry stack: [V11, V93]
Stack pops: 1
Stack additions: [0x18c]
Exit stack: [V11, 0x18c]

================================

Block 0x18c
[0x18c:0x1ad]
---
Predecessors: [0x503]
Successors: [0x1ae]
---
0x18c JUMPDEST
0x18d PUSH1 0x40
0x18f DUP1
0x190 MLOAD
0x191 PUSH1 0x20
0x193 DUP1
0x194 DUP3
0x195 MSTORE
0x196 DUP4
0x197 MLOAD
0x198 DUP2
0x199 DUP4
0x19a ADD
0x19b MSTORE
0x19c DUP4
0x19d MLOAD
0x19e SWAP2
0x19f SWAP3
0x1a0 DUP4
0x1a1 SWAP3
0x1a2 SWAP1
0x1a3 DUP4
0x1a4 ADD
0x1a5 SWAP2
0x1a6 DUP6
0x1a7 ADD
0x1a8 SWAP1
0x1a9 DUP1
0x1aa DUP4
0x1ab DUP4
0x1ac PUSH1 0x0
---
0x18c: JUMPDEST 
0x18d: V99 = 0x40
0x190: V100 = M[0x40]
0x191: V101 = 0x20
0x195: M[V100] = 0x20
0x197: V102 = M[S0]
0x19a: V103 = ADD V100 0x20
0x19b: M[V103] = V102
0x19d: V104 = M[S0]
0x1a4: V105 = ADD V100 0x40
0x1a7: V106 = ADD S0 0x20
0x1ac: V107 = 0x0
---
Entry stack: [V11, 0x18c, S0]
Stack pops: 1
Stack additions: [S0, V100, V100, V105, V106, V104, V104, V105, V106, 0x0]
Exit stack: [V11, 0x18c, S0, V100, V100, V105, V106, V104, V104, V105, V106, 0x0]

================================

Block 0x1ae
[0x1ae:0x1b6]
---
Predecessors: [0x18c, 0x1b7]
Successors: [0x1b7, 0x1c6]
---
0x1ae JUMPDEST
0x1af DUP4
0x1b0 DUP2
0x1b1 LT
0x1b2 ISZERO
0x1b3 PUSH2 0x1c6
0x1b6 JUMPI
---
0x1ae: JUMPDEST 
0x1b1: V108 = LT S0 V104
0x1b2: V109 = ISZERO V108
0x1b3: V110 = 0x1c6
0x1b6: JUMPI 0x1c6 V109
---
Entry stack: [V11, 0x18c, S9, V100, V100, V105, V106, V104, V104, V105, V106, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x18c, S9, V100, V100, V105, V106, V104, V104, V105, V106, S0]

================================

Block 0x1b7
[0x1b7:0x1c5]
---
Predecessors: [0x1ae]
Successors: [0x1ae]
---
0x1b7 DUP2
0x1b8 DUP2
0x1b9 ADD
0x1ba MLOAD
0x1bb DUP4
0x1bc DUP3
0x1bd ADD
0x1be MSTORE
0x1bf PUSH1 0x20
0x1c1 ADD
0x1c2 PUSH2 0x1ae
0x1c5 JUMP
---
0x1b9: V111 = ADD S0 V106
0x1ba: V112 = M[V111]
0x1bd: V113 = ADD S0 V105
0x1be: M[V113] = V112
0x1bf: V114 = 0x20
0x1c1: V115 = ADD 0x20 S0
0x1c2: V116 = 0x1ae
0x1c5: JUMP 0x1ae
---
Entry stack: [V11, 0x18c, S9, V100, V100, V105, V106, V104, V104, V105, V106, S0]
Stack pops: 3
Stack additions: [S2, S1, V115]
Exit stack: [V11, 0x18c, S9, V100, V100, V105, V106, V104, V104, V105, V106, V115]

================================

Block 0x1c6
[0x1c6:0x1d9]
---
Predecessors: [0x1ae]
Successors: [0x1da, 0x1f3]
---
0x1c6 JUMPDEST
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb SWAP1
0x1cc POP
0x1cd SWAP1
0x1ce DUP2
0x1cf ADD
0x1d0 SWAP1
0x1d1 PUSH1 0x1f
0x1d3 AND
0x1d4 DUP1
0x1d5 ISZERO
0x1d6 PUSH2 0x1f3
0x1d9 JUMPI
---
0x1c6: JUMPDEST 
0x1cf: V117 = ADD V104 V105
0x1d1: V118 = 0x1f
0x1d3: V119 = AND 0x1f V104
0x1d5: V120 = ISZERO V119
0x1d6: V121 = 0x1f3
0x1d9: JUMPI 0x1f3 V120
---
Entry stack: [V11, 0x18c, S9, V100, V100, V105, V106, V104, V104, V105, V106, S0]
Stack pops: 7
Stack additions: [V117, V119]
Exit stack: [V11, 0x18c, S9, V100, V100, V117, V119]

================================

Block 0x1da
[0x1da:0x1f2]
---
Predecessors: [0x1c6]
Successors: [0x1f3]
---
0x1da DUP1
0x1db DUP3
0x1dc SUB
0x1dd DUP1
0x1de MLOAD
0x1df PUSH1 0x1
0x1e1 DUP4
0x1e2 PUSH1 0x20
0x1e4 SUB
0x1e5 PUSH2 0x100
0x1e8 EXP
0x1e9 SUB
0x1ea NOT
0x1eb AND
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP2
0x1f2 POP
---
0x1dc: V122 = SUB V117 V119
0x1de: V123 = M[V122]
0x1df: V124 = 0x1
0x1e2: V125 = 0x20
0x1e4: V126 = SUB 0x20 V119
0x1e5: V127 = 0x100
0x1e8: V128 = EXP 0x100 V126
0x1e9: V129 = SUB V128 0x1
0x1ea: V130 = NOT V129
0x1eb: V131 = AND V130 V123
0x1ed: M[V122] = V131
0x1ee: V132 = 0x20
0x1f0: V133 = ADD 0x20 V122
---
Entry stack: [V11, 0x18c, S4, V100, V100, V117, V119]
Stack pops: 2
Stack additions: [V133, S0]
Exit stack: [V11, 0x18c, S4, V100, V100, V133, V119]

================================

Block 0x1f3
[0x1f3:0x200]
---
Predecessors: [0x1c6, 0x1da]
Successors: []
---
0x1f3 JUMPDEST
0x1f4 POP
0x1f5 SWAP3
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd SWAP2
0x1fe SUB
0x1ff SWAP1
0x200 RETURN
---
0x1f3: JUMPDEST 
0x1f9: V134 = 0x40
0x1fb: V135 = M[0x40]
0x1fe: V136 = SUB S1 V135
0x200: RETURN V135 V136
---
Entry stack: [V11, 0x18c, S4, V100, V100, S1, V119]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x18c]

================================

Block 0x201
[0x201:0x208]
---
Predecessors: [0x40]
Successors: [0x209, 0x20d]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 DUP1
0x204 ISZERO
0x205 PUSH2 0x20d
0x208 JUMPI
---
0x201: JUMPDEST 
0x202: V137 = CALLVALUE
0x204: V138 = ISZERO V137
0x205: V139 = 0x20d
0x208: JUMPI 0x20d V138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V137]
Exit stack: [V11, V137]

================================

Block 0x209
[0x209:0x20c]
---
Predecessors: [0x201]
Successors: []
---
0x209 PUSH1 0x0
0x20b DUP1
0x20c REVERT
---
0x209: V140 = 0x0
0x20c: REVERT 0x0 0x0
---
Entry stack: [V11, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V137]

================================

Block 0x20d
[0x20d:0x224]
---
Predecessors: [0x201]
Successors: [0x50b]
---
0x20d JUMPDEST
0x20e POP
0x20f PUSH2 0x225
0x212 PUSH1 0x1
0x214 PUSH1 0xa0
0x216 PUSH1 0x2
0x218 EXP
0x219 SUB
0x21a PUSH1 0x4
0x21c CALLDATALOAD
0x21d AND
0x21e PUSH1 0x24
0x220 CALLDATALOAD
0x221 PUSH2 0x50b
0x224 JUMP
---
0x20d: JUMPDEST 
0x20f: V141 = 0x225
0x212: V142 = 0x1
0x214: V143 = 0xa0
0x216: V144 = 0x2
0x218: V145 = EXP 0x2 0xa0
0x219: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V147 = 0x4
0x21c: V148 = CALLDATALOAD 0x4
0x21d: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x21e: V150 = 0x24
0x220: V151 = CALLDATALOAD 0x24
0x221: V152 = 0x50b
0x224: JUMP 0x50b
---
Entry stack: [V11, V137]
Stack pops: 1
Stack additions: [0x225, V149, V151]
Exit stack: [V11, 0x225, V149, V151]

================================

Block 0x225
[0x225:0x238]
---
Predecessors: [0x50b, 0x519, 0x5ea, 0x6a4, 0x797]
Successors: []
---
0x225 JUMPDEST
0x226 PUSH1 0x40
0x228 DUP1
0x229 MLOAD
0x22a SWAP2
0x22b ISZERO
0x22c ISZERO
0x22d DUP3
0x22e MSTORE
0x22f MLOAD
0x230 SWAP1
0x231 DUP2
0x232 SWAP1
0x233 SUB
0x234 PUSH1 0x20
0x236 ADD
0x237 SWAP1
0x238 RETURN
---
0x225: JUMPDEST 
0x226: V153 = 0x40
0x229: V154 = M[0x40]
0x22b: V155 = ISZERO S0
0x22c: V156 = ISZERO V155
0x22e: M[V154] = V156
0x22f: V157 = M[0x40]
0x233: V158 = SUB V154 V157
0x234: V159 = 0x20
0x236: V160 = ADD 0x20 V158
0x238: RETURN V157 V160
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x239
[0x239:0x240]
---
Predecessors: [0x4b]
Successors: [0x241, 0x245]
---
0x239 JUMPDEST
0x23a CALLVALUE
0x23b DUP1
0x23c ISZERO
0x23d PUSH2 0x245
0x240 JUMPI
---
0x239: JUMPDEST 
0x23a: V161 = CALLVALUE
0x23c: V162 = ISZERO V161
0x23d: V163 = 0x245
0x240: JUMPI 0x245 V162
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V161]
Exit stack: [V11, V161]

================================

Block 0x241
[0x241:0x244]
---
Predecessors: [0x239]
Successors: []
---
0x241 PUSH1 0x0
0x243 DUP1
0x244 REVERT
---
0x241: V164 = 0x0
0x244: REVERT 0x0 0x0
---
Entry stack: [V11, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V161]

================================

Block 0x245
[0x245:0x24d]
---
Predecessors: [0x239]
Successors: [0x513]
---
0x245 JUMPDEST
0x246 POP
0x247 PUSH2 0x24e
0x24a PUSH2 0x513
0x24d JUMP
---
0x245: JUMPDEST 
0x247: V165 = 0x24e
0x24a: V166 = 0x513
0x24d: JUMP 0x513
---
Entry stack: [V11, V161]
Stack pops: 1
Stack additions: [0x24e]
Exit stack: [V11, 0x24e]

================================

Block 0x24e
[0x24e:0x25f]
---
Predecessors: [0x513, 0x722, 0x727, 0x85e, 0x870]
Successors: []
---
0x24e JUMPDEST
0x24f PUSH1 0x40
0x251 DUP1
0x252 MLOAD
0x253 SWAP2
0x254 DUP3
0x255 MSTORE
0x256 MLOAD
0x257 SWAP1
0x258 DUP2
0x259 SWAP1
0x25a SUB
0x25b PUSH1 0x20
0x25d ADD
0x25e SWAP1
0x25f RETURN
---
0x24e: JUMPDEST 
0x24f: V167 = 0x40
0x252: V168 = M[0x40]
0x255: M[V168] = S0
0x256: V169 = M[0x40]
0x25a: V170 = SUB V168 V169
0x25b: V171 = 0x20
0x25d: V172 = ADD 0x20 V170
0x25f: RETURN V169 V172
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x260
[0x260:0x267]
---
Predecessors: [0x56]
Successors: [0x268, 0x26c]
---
0x260 JUMPDEST
0x261 CALLVALUE
0x262 DUP1
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x260: JUMPDEST 
0x261: V173 = CALLVALUE
0x263: V174 = ISZERO V173
0x264: V175 = 0x26c
0x267: JUMPI 0x26c V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V11, V173]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x260]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V176 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V11, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V173]

================================

Block 0x26c
[0x26c:0x289]
---
Predecessors: [0x260]
Successors: [0x519]
---
0x26c JUMPDEST
0x26d POP
0x26e PUSH2 0x225
0x271 PUSH1 0x1
0x273 PUSH1 0xa0
0x275 PUSH1 0x2
0x277 EXP
0x278 SUB
0x279 PUSH1 0x4
0x27b CALLDATALOAD
0x27c DUP2
0x27d AND
0x27e SWAP1
0x27f PUSH1 0x24
0x281 CALLDATALOAD
0x282 AND
0x283 PUSH1 0x44
0x285 CALLDATALOAD
0x286 PUSH2 0x519
0x289 JUMP
---
0x26c: JUMPDEST 
0x26e: V177 = 0x225
0x271: V178 = 0x1
0x273: V179 = 0xa0
0x275: V180 = 0x2
0x277: V181 = EXP 0x2 0xa0
0x278: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V183 = 0x4
0x27b: V184 = CALLDATALOAD 0x4
0x27d: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x27f: V186 = 0x24
0x281: V187 = CALLDATALOAD 0x24
0x282: V188 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x283: V189 = 0x44
0x285: V190 = CALLDATALOAD 0x44
0x286: V191 = 0x519
0x289: JUMP 0x519
---
Entry stack: [V11, V173]
Stack pops: 1
Stack additions: [0x225, V185, V188, V190]
Exit stack: [V11, 0x225, V185, V188, V190]

================================

Block 0x28a
[0x28a:0x291]
---
Predecessors: [0x61]
Successors: [0x292, 0x296]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c DUP1
0x28d ISZERO
0x28e PUSH2 0x296
0x291 JUMPI
---
0x28a: JUMPDEST 
0x28b: V192 = CALLVALUE
0x28d: V193 = ISZERO V192
0x28e: V194 = 0x296
0x291: JUMPI 0x296 V193
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V11, V192]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x28a]
Successors: []
---
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x292: V195 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V11, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V192]

================================

Block 0x296
[0x296:0x29e]
---
Predecessors: [0x28a]
Successors: [0x5e1]
---
0x296 JUMPDEST
0x297 POP
0x298 PUSH2 0x29f
0x29b PUSH2 0x5e1
0x29e JUMP
---
0x296: JUMPDEST 
0x298: V196 = 0x29f
0x29b: V197 = 0x5e1
0x29e: JUMP 0x5e1
---
Entry stack: [V11, V192]
Stack pops: 1
Stack additions: [0x29f]
Exit stack: [V11, 0x29f]

================================

Block 0x29f
[0x29f:0x2b4]
---
Predecessors: [0x5e1]
Successors: []
---
0x29f JUMPDEST
0x2a0 PUSH1 0x40
0x2a2 DUP1
0x2a3 MLOAD
0x2a4 PUSH1 0xff
0x2a6 SWAP1
0x2a7 SWAP3
0x2a8 AND
0x2a9 DUP3
0x2aa MSTORE
0x2ab MLOAD
0x2ac SWAP1
0x2ad DUP2
0x2ae SWAP1
0x2af SUB
0x2b0 PUSH1 0x20
0x2b2 ADD
0x2b3 SWAP1
0x2b4 RETURN
---
0x29f: JUMPDEST 
0x2a0: V198 = 0x40
0x2a3: V199 = M[0x40]
0x2a4: V200 = 0xff
0x2a8: V201 = AND V456 0xff
0x2aa: M[V199] = V201
0x2ab: V202 = M[0x40]
0x2af: V203 = SUB V199 V202
0x2b0: V204 = 0x20
0x2b2: V205 = ADD 0x20 V203
0x2b4: RETURN V202 V205
---
Entry stack: [V11, 0x29f, V456]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x29f]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0x6c]
Successors: [0x2bd, 0x2c1]
---
0x2b5 JUMPDEST
0x2b6 CALLVALUE
0x2b7 DUP1
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V206 = CALLVALUE
0x2b8: V207 = ISZERO V206
0x2b9: V208 = 0x2c1
0x2bc: JUMPI 0x2c1 V207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V206]
Exit stack: [V11, V206]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b5]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V209 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V11, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V206]

================================

Block 0x2c1
[0x2c1:0x2c9]
---
Predecessors: [0x2b5]
Successors: [0x5ea]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 PUSH2 0x225
0x2c6 PUSH2 0x5ea
0x2c9 JUMP
---
0x2c1: JUMPDEST 
0x2c3: V210 = 0x225
0x2c6: V211 = 0x5ea
0x2c9: JUMP 0x5ea
---
Entry stack: [V11, V206]
Stack pops: 1
Stack additions: [0x225]
Exit stack: [V11, 0x225]

================================

Block 0x2ca
[0x2ca:0x2d1]
---
Predecessors: [0x77]
Successors: [0x2d2, 0x2d6]
---
0x2ca JUMPDEST
0x2cb CALLVALUE
0x2cc DUP1
0x2cd ISZERO
0x2ce PUSH2 0x2d6
0x2d1 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V212 = CALLVALUE
0x2cd: V213 = ISZERO V212
0x2ce: V214 = 0x2d6
0x2d1: JUMPI 0x2d6 V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V212]
Exit stack: [V11, V212]

================================

Block 0x2d2
[0x2d2:0x2d5]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 REVERT
---
0x2d2: V215 = 0x0
0x2d5: REVERT 0x0 0x0
---
Entry stack: [V11, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V212]

================================

Block 0x2d6
[0x2d6:0x2ed]
---
Predecessors: [0x2ca]
Successors: [0x60b]
---
0x2d6 JUMPDEST
0x2d7 POP
0x2d8 PUSH2 0x225
0x2db PUSH1 0x1
0x2dd PUSH1 0xa0
0x2df PUSH1 0x2
0x2e1 EXP
0x2e2 SUB
0x2e3 PUSH1 0x4
0x2e5 CALLDATALOAD
0x2e6 AND
0x2e7 PUSH1 0x24
0x2e9 CALLDATALOAD
0x2ea PUSH2 0x60b
0x2ed JUMP
---
0x2d6: JUMPDEST 
0x2d8: V216 = 0x225
0x2db: V217 = 0x1
0x2dd: V218 = 0xa0
0x2df: V219 = 0x2
0x2e1: V220 = EXP 0x2 0xa0
0x2e2: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e3: V222 = 0x4
0x2e5: V223 = CALLDATALOAD 0x4
0x2e6: V224 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V225 = 0x24
0x2e9: V226 = CALLDATALOAD 0x24
0x2ea: V227 = 0x60b
0x2ed: JUMP 0x60b
---
Entry stack: [V11, V212]
Stack pops: 1
Stack additions: [0x225, V224, V226]
Exit stack: [V11, 0x225, V224, V226]

================================

Block 0x2ee
[0x2ee:0x2f5]
---
Predecessors: [0x82]
Successors: [0x2f6, 0x2fa]
---
0x2ee JUMPDEST
0x2ef CALLVALUE
0x2f0 DUP1
0x2f1 ISZERO
0x2f2 PUSH2 0x2fa
0x2f5 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V228 = CALLVALUE
0x2f1: V229 = ISZERO V228
0x2f2: V230 = 0x2fa
0x2f5: JUMPI 0x2fa V229
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V228]
Exit stack: [V11, V228]

================================

Block 0x2f6
[0x2f6:0x2f9]
---
Predecessors: [0x2ee]
Successors: []
---
0x2f6 PUSH1 0x0
0x2f8 DUP1
0x2f9 REVERT
---
0x2f6: V231 = 0x0
0x2f9: REVERT 0x0 0x0
---
Entry stack: [V11, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V228]

================================

Block 0x2fa
[0x2fa:0x30e]
---
Predecessors: [0x2ee]
Successors: [0x6ad]
---
0x2fa JUMPDEST
0x2fb POP
0x2fc PUSH2 0x24e
0x2ff PUSH1 0x1
0x301 PUSH1 0xa0
0x303 PUSH1 0x2
0x305 EXP
0x306 SUB
0x307 PUSH1 0x4
0x309 CALLDATALOAD
0x30a AND
0x30b PUSH2 0x6ad
0x30e JUMP
---
0x2fa: JUMPDEST 
0x2fc: V232 = 0x24e
0x2ff: V233 = 0x1
0x301: V234 = 0xa0
0x303: V235 = 0x2
0x305: V236 = EXP 0x2 0xa0
0x306: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x307: V238 = 0x4
0x309: V239 = CALLDATALOAD 0x4
0x30a: V240 = AND V239 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V241 = 0x6ad
0x30e: JUMP 0x6ad
---
Entry stack: [V11, V228]
Stack pops: 1
Stack additions: [0x24e, V240]
Exit stack: [V11, 0x24e, V240]

================================

Block 0x30f
[0x30f:0x316]
---
Predecessors: [0x8d]
Successors: [0x317, 0x31b]
---
0x30f JUMPDEST
0x310 CALLVALUE
0x311 DUP1
0x312 ISZERO
0x313 PUSH2 0x31b
0x316 JUMPI
---
0x30f: JUMPDEST 
0x310: V242 = CALLVALUE
0x312: V243 = ISZERO V242
0x313: V244 = 0x31b
0x316: JUMPI 0x31b V243
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V242]
Exit stack: [V11, V242]

================================

Block 0x317
[0x317:0x31a]
---
Predecessors: [0x30f]
Successors: []
---
0x317 PUSH1 0x0
0x319 DUP1
0x31a REVERT
---
0x317: V245 = 0x0
0x31a: REVERT 0x0 0x0
---
Entry stack: [V11, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V242]

================================

Block 0x31b
[0x31b:0x323]
---
Predecessors: [0x30f]
Successors: [0x727]
---
0x31b JUMPDEST
0x31c POP
0x31d PUSH2 0x24e
0x320 PUSH2 0x727
0x323 JUMP
---
0x31b: JUMPDEST 
0x31d: V246 = 0x24e
0x320: V247 = 0x727
0x323: JUMP 0x727
---
Entry stack: [V11, V242]
Stack pops: 1
Stack additions: [0x24e]
Exit stack: [V11, 0x24e]

================================

Block 0x324
[0x324:0x32b]
---
Predecessors: [0x98]
Successors: [0x32c, 0x330]
---
0x324 JUMPDEST
0x325 CALLVALUE
0x326 DUP1
0x327 ISZERO
0x328 PUSH2 0x330
0x32b JUMPI
---
0x324: JUMPDEST 
0x325: V248 = CALLVALUE
0x327: V249 = ISZERO V248
0x328: V250 = 0x330
0x32b: JUMPI 0x330 V249
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V248]
Exit stack: [V11, V248]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x324]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V251 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V11, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V248]

================================

Block 0x330
[0x330:0x338]
---
Predecessors: [0x324]
Successors: [0x72d]
---
0x330 JUMPDEST
0x331 POP
0x332 PUSH2 0x339
0x335 PUSH2 0x72d
0x338 JUMP
---
0x330: JUMPDEST 
0x332: V252 = 0x339
0x335: V253 = 0x72d
0x338: JUMP 0x72d
---
Entry stack: [V11, V248]
Stack pops: 1
Stack additions: [0x339]
Exit stack: [V11, 0x339]

================================

Block 0x339
[0x339:0x354]
---
Predecessors: [0x72d]
Successors: []
---
0x339 JUMPDEST
0x33a PUSH1 0x40
0x33c DUP1
0x33d MLOAD
0x33e PUSH1 0x1
0x340 PUSH1 0xa0
0x342 PUSH1 0x2
0x344 EXP
0x345 SUB
0x346 SWAP1
0x347 SWAP3
0x348 AND
0x349 DUP3
0x34a MSTORE
0x34b MLOAD
0x34c SWAP1
0x34d DUP2
0x34e SWAP1
0x34f SUB
0x350 PUSH1 0x20
0x352 ADD
0x353 SWAP1
0x354 RETURN
---
0x339: JUMPDEST 
0x33a: V254 = 0x40
0x33d: V255 = M[0x40]
0x33e: V256 = 0x1
0x340: V257 = 0xa0
0x342: V258 = 0x2
0x344: V259 = EXP 0x2 0xa0
0x345: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x348: V261 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x34a: M[V255] = V261
0x34b: V262 = M[0x40]
0x34f: V263 = SUB V255 V262
0x350: V264 = 0x20
0x352: V265 = ADD 0x20 V263
0x354: RETURN V262 V265
---
Entry stack: [V11, 0x339, V563]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x339]

================================

Block 0x355
[0x355:0x35c]
---
Predecessors: [0xa3]
Successors: [0x35d, 0x361]
---
0x355 JUMPDEST
0x356 CALLVALUE
0x357 DUP1
0x358 ISZERO
0x359 PUSH2 0x361
0x35c JUMPI
---
0x355: JUMPDEST 
0x356: V266 = CALLVALUE
0x358: V267 = ISZERO V266
0x359: V268 = 0x361
0x35c: JUMPI 0x361 V267
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V266]
Exit stack: [V11, V266]

================================

Block 0x35d
[0x35d:0x360]
---
Predecessors: [0x355]
Successors: []
---
0x35d PUSH1 0x0
0x35f DUP1
0x360 REVERT
---
0x35d: V269 = 0x0
0x360: REVERT 0x0 0x0
---
Entry stack: [V11, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V266]

================================

Block 0x361
[0x361:0x369]
---
Predecessors: [0x355]
Successors: [0x73c]
---
0x361 JUMPDEST
0x362 POP
0x363 PUSH2 0x18c
0x366 PUSH2 0x73c
0x369 JUMP
---
0x361: JUMPDEST 
0x363: V270 = 0x18c
0x366: V271 = 0x73c
0x369: JUMP 0x73c
---
Entry stack: [V11, V266]
Stack pops: 1
Stack additions: [0x18c]
Exit stack: [V11, 0x18c]

================================

Block 0x36a
[0x36a:0x371]
---
Predecessors: [0xae]
Successors: [0x372, 0x376]
---
0x36a JUMPDEST
0x36b CALLVALUE
0x36c DUP1
0x36d ISZERO
0x36e PUSH2 0x376
0x371 JUMPI
---
0x36a: JUMPDEST 
0x36b: V272 = CALLVALUE
0x36d: V273 = ISZERO V272
0x36e: V274 = 0x376
0x371: JUMPI 0x376 V273
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V272]
Exit stack: [V11, V272]

================================

Block 0x372
[0x372:0x375]
---
Predecessors: [0x36a]
Successors: []
---
0x372 PUSH1 0x0
0x374 DUP1
0x375 REVERT
---
0x372: V275 = 0x0
0x375: REVERT 0x0 0x0
---
Entry stack: [V11, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V272]

================================

Block 0x376
[0x376:0x38d]
---
Predecessors: [0x36a]
Successors: [0x797]
---
0x376 JUMPDEST
0x377 POP
0x378 PUSH2 0x225
0x37b PUSH1 0x1
0x37d PUSH1 0xa0
0x37f PUSH1 0x2
0x381 EXP
0x382 SUB
0x383 PUSH1 0x4
0x385 CALLDATALOAD
0x386 AND
0x387 PUSH1 0x24
0x389 CALLDATALOAD
0x38a PUSH2 0x797
0x38d JUMP
---
0x376: JUMPDEST 
0x378: V276 = 0x225
0x37b: V277 = 0x1
0x37d: V278 = 0xa0
0x37f: V279 = 0x2
0x381: V280 = EXP 0x2 0xa0
0x382: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x383: V282 = 0x4
0x385: V283 = CALLDATALOAD 0x4
0x386: V284 = AND V283 0xffffffffffffffffffffffffffffffffffffffff
0x387: V285 = 0x24
0x389: V286 = CALLDATALOAD 0x24
0x38a: V287 = 0x797
0x38d: JUMP 0x797
---
Entry stack: [V11, V272]
Stack pops: 1
Stack additions: [0x225, V284, V286]
Exit stack: [V11, 0x225, V284, V286]

================================

Block 0x38e
[0x38e:0x395]
---
Predecessors: [0xb9]
Successors: [0x396, 0x39a]
---
0x38e JUMPDEST
0x38f CALLVALUE
0x390 DUP1
0x391 ISZERO
0x392 PUSH2 0x39a
0x395 JUMPI
---
0x38e: JUMPDEST 
0x38f: V288 = CALLVALUE
0x391: V289 = ISZERO V288
0x392: V290 = 0x39a
0x395: JUMPI 0x39a V289
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V288]
Exit stack: [V11, V288]

================================

Block 0x396
[0x396:0x399]
---
Predecessors: [0x38e]
Successors: []
---
0x396 PUSH1 0x0
0x398 DUP1
0x399 REVERT
---
0x396: V291 = 0x0
0x399: REVERT 0x0 0x0
---
Entry stack: [V11, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V288]

================================

Block 0x39a
[0x39a:0x3ae]
---
Predecessors: [0x38e]
Successors: [0x85e]
---
0x39a JUMPDEST
0x39b POP
0x39c PUSH2 0x24e
0x39f PUSH1 0x1
0x3a1 PUSH1 0xa0
0x3a3 PUSH1 0x2
0x3a5 EXP
0x3a6 SUB
0x3a7 PUSH1 0x4
0x3a9 CALLDATALOAD
0x3aa AND
0x3ab PUSH2 0x85e
0x3ae JUMP
---
0x39a: JUMPDEST 
0x39c: V292 = 0x24e
0x39f: V293 = 0x1
0x3a1: V294 = 0xa0
0x3a3: V295 = 0x2
0x3a5: V296 = EXP 0x2 0xa0
0x3a6: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V298 = 0x4
0x3a9: V299 = CALLDATALOAD 0x4
0x3aa: V300 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V301 = 0x85e
0x3ae: JUMP 0x85e
---
Entry stack: [V11, V288]
Stack pops: 1
Stack additions: [0x24e, V300]
Exit stack: [V11, 0x24e, V300]

================================

Block 0x3af
[0x3af:0x3b6]
---
Predecessors: [0xc4]
Successors: [0x3b7, 0x3bb]
---
0x3af JUMPDEST
0x3b0 CALLVALUE
0x3b1 DUP1
0x3b2 ISZERO
0x3b3 PUSH2 0x3bb
0x3b6 JUMPI
---
0x3af: JUMPDEST 
0x3b0: V302 = CALLVALUE
0x3b2: V303 = ISZERO V302
0x3b3: V304 = 0x3bb
0x3b6: JUMPI 0x3bb V303
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V302]
Exit stack: [V11, V302]

================================

Block 0x3b7
[0x3b7:0x3ba]
---
Predecessors: [0x3af]
Successors: []
---
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba REVERT
---
0x3b7: V305 = 0x0
0x3ba: REVERT 0x0 0x0
---
Entry stack: [V11, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V302]

================================

Block 0x3bb
[0x3bb:0x3d5]
---
Predecessors: [0x3af]
Successors: [0x870]
---
0x3bb JUMPDEST
0x3bc POP
0x3bd PUSH2 0x24e
0x3c0 PUSH1 0x1
0x3c2 PUSH1 0xa0
0x3c4 PUSH1 0x2
0x3c6 EXP
0x3c7 SUB
0x3c8 PUSH1 0x4
0x3ca CALLDATALOAD
0x3cb DUP2
0x3cc AND
0x3cd SWAP1
0x3ce PUSH1 0x24
0x3d0 CALLDATALOAD
0x3d1 AND
0x3d2 PUSH2 0x870
0x3d5 JUMP
---
0x3bb: JUMPDEST 
0x3bd: V306 = 0x24e
0x3c0: V307 = 0x1
0x3c2: V308 = 0xa0
0x3c4: V309 = 0x2
0x3c6: V310 = EXP 0x2 0xa0
0x3c7: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c8: V312 = 0x4
0x3ca: V313 = CALLDATALOAD 0x4
0x3cc: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x3ce: V315 = 0x24
0x3d0: V316 = CALLDATALOAD 0x24
0x3d1: V317 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V318 = 0x870
0x3d5: JUMP 0x870
---
Entry stack: [V11, V302]
Stack pops: 1
Stack additions: [0x24e, V314, V317]
Exit stack: [V11, 0x24e, V314, V317]

================================

Block 0x3d6
[0x3d6:0x3dd]
---
Predecessors: [0xcf]
Successors: [0x3de, 0x3e2]
---
0x3d6 JUMPDEST
0x3d7 CALLVALUE
0x3d8 DUP1
0x3d9 ISZERO
0x3da PUSH2 0x3e2
0x3dd JUMPI
---
0x3d6: JUMPDEST 
0x3d7: V319 = CALLVALUE
0x3d9: V320 = ISZERO V319
0x3da: V321 = 0x3e2
0x3dd: JUMPI 0x3e2 V320
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V319]
Exit stack: [V11, V319]

================================

Block 0x3de
[0x3de:0x3e1]
---
Predecessors: [0x3d6]
Successors: []
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
---
0x3de: V322 = 0x0
0x3e1: REVERT 0x0 0x0
---
Entry stack: [V11, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V319]

================================

Block 0x3e2
[0x3e2:0x47b]
---
Predecessors: [0x3d6]
Successors: [0x878]
---
0x3e2 JUMPDEST
0x3e3 POP
0x3e4 PUSH1 0x40
0x3e6 DUP1
0x3e7 MLOAD
0x3e8 PUSH1 0x20
0x3ea PUSH1 0x4
0x3ec DUP1
0x3ed CALLDATALOAD
0x3ee DUP1
0x3ef DUP3
0x3f0 ADD
0x3f1 CALLDATALOAD
0x3f2 PUSH1 0x1f
0x3f4 DUP2
0x3f5 ADD
0x3f6 DUP5
0x3f7 SWAP1
0x3f8 DIV
0x3f9 DUP5
0x3fa MUL
0x3fb DUP6
0x3fc ADD
0x3fd DUP5
0x3fe ADD
0x3ff SWAP1
0x400 SWAP6
0x401 MSTORE
0x402 DUP5
0x403 DUP5
0x404 MSTORE
0x405 PUSH2 0x47c
0x408 SWAP5
0x409 CALLDATASIZE
0x40a SWAP5
0x40b SWAP3
0x40c SWAP4
0x40d PUSH1 0x24
0x40f SWAP4
0x410 SWAP3
0x411 DUP5
0x412 ADD
0x413 SWAP2
0x414 SWAP1
0x415 DUP2
0x416 SWAP1
0x417 DUP5
0x418 ADD
0x419 DUP4
0x41a DUP3
0x41b DUP1
0x41c DUP3
0x41d DUP5
0x41e CALLDATACOPY
0x41f POP
0x420 POP
0x421 PUSH1 0x40
0x423 DUP1
0x424 MLOAD
0x425 PUSH1 0x20
0x427 PUSH1 0x1f
0x429 DUP10
0x42a CALLDATALOAD
0x42b DUP12
0x42c ADD
0x42d DUP1
0x42e CALLDATALOAD
0x42f SWAP2
0x430 DUP3
0x431 ADD
0x432 DUP4
0x433 SWAP1
0x434 DIV
0x435 DUP4
0x436 MUL
0x437 DUP5
0x438 ADD
0x439 DUP4
0x43a ADD
0x43b SWAP1
0x43c SWAP5
0x43d MSTORE
0x43e DUP1
0x43f DUP4
0x440 MSTORE
0x441 SWAP8
0x442 SWAP11
0x443 SWAP10
0x444 SWAP9
0x445 DUP2
0x446 ADD
0x447 SWAP8
0x448 SWAP2
0x449 SWAP7
0x44a POP
0x44b SWAP2
0x44c DUP3
0x44d ADD
0x44e SWAP5
0x44f POP
0x450 SWAP3
0x451 POP
0x452 DUP3
0x453 SWAP2
0x454 POP
0x455 DUP5
0x456 ADD
0x457 DUP4
0x458 DUP3
0x459 DUP1
0x45a DUP3
0x45b DUP5
0x45c CALLDATACOPY
0x45d POP
0x45e SWAP5
0x45f SWAP8
0x460 POP
0x461 POP
0x462 DUP5
0x463 CALLDATALOAD
0x464 SWAP6
0x465 POP
0x466 POP
0x467 POP
0x468 PUSH1 0x20
0x46a DUP4
0x46b ADD
0x46c CALLDATALOAD
0x46d SWAP3
0x46e PUSH1 0x40
0x470 ADD
0x471 CALLDATALOAD
0x472 ISZERO
0x473 ISZERO
0x474 SWAP2
0x475 POP
0x476 PUSH2 0x878
0x479 SWAP1
0x47a POP
0x47b JUMP
---
0x3e2: JUMPDEST 
0x3e4: V323 = 0x40
0x3e7: V324 = M[0x40]
0x3e8: V325 = 0x20
0x3ea: V326 = 0x4
0x3ed: V327 = CALLDATALOAD 0x4
0x3f0: V328 = ADD 0x4 V327
0x3f1: V329 = CALLDATALOAD V328
0x3f2: V330 = 0x1f
0x3f5: V331 = ADD V329 0x1f
0x3f8: V332 = DIV V331 0x20
0x3fa: V333 = MUL 0x20 V332
0x3fc: V334 = ADD V324 V333
0x3fe: V335 = ADD 0x20 V334
0x401: M[0x40] = V335
0x404: M[V324] = V329
0x405: V336 = 0x47c
0x409: V337 = CALLDATASIZE
0x40d: V338 = 0x24
0x412: V339 = ADD 0x24 V327
0x418: V340 = ADD V324 0x20
0x41e: CALLDATACOPY V340 V339 V329
0x421: V341 = 0x40
0x424: V342 = M[0x40]
0x425: V343 = 0x20
0x427: V344 = 0x1f
0x42a: V345 = CALLDATALOAD 0x24
0x42c: V346 = ADD 0x4 V345
0x42e: V347 = CALLDATALOAD V346
0x431: V348 = ADD V347 0x1f
0x434: V349 = DIV V348 0x20
0x436: V350 = MUL 0x20 V349
0x438: V351 = ADD V342 V350
0x43a: V352 = ADD 0x20 V351
0x43d: M[0x40] = V352
0x440: M[V342] = V347
0x446: V353 = ADD 0x20 0x24
0x44d: V354 = ADD 0x20 V346
0x456: V355 = ADD V342 0x20
0x45c: CALLDATACOPY V355 V354 V347
0x463: V356 = CALLDATALOAD 0x44
0x468: V357 = 0x20
0x46b: V358 = ADD 0x44 0x20
0x46c: V359 = CALLDATALOAD 0x64
0x46e: V360 = 0x40
0x470: V361 = ADD 0x40 0x44
0x471: V362 = CALLDATALOAD 0x84
0x472: V363 = ISZERO V362
0x473: V364 = ISZERO V363
0x476: V365 = 0x878
0x47b: JUMP 0x878
---
Entry stack: [V11, V319]
Stack pops: 1
Stack additions: [0x47c, V324, V342, V356, V359, V364]
Exit stack: [V11, 0x47c, V324, V342, V356, V359, V364]

================================

Block 0x47c
[0x47c:0x47d]
---
Predecessors: [0x8b6]
Successors: []
---
0x47c JUMPDEST
0x47d STOP
---
0x47c: JUMPDEST 
0x47d: STOP 
---
Entry stack: [V11, 0x47c, V324, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x47c, V324, S0]

================================

Block 0x47e
[0x47e:0x4bc]
---
Predecessors: [0x183]
Successors: [0x4bd, 0x503]
---
0x47e JUMPDEST
0x47f PUSH1 0x1
0x481 DUP1
0x482 SLOAD
0x483 PUSH1 0x40
0x485 DUP1
0x486 MLOAD
0x487 PUSH1 0x20
0x489 PUSH1 0x2
0x48b DUP5
0x48c DUP7
0x48d AND
0x48e ISZERO
0x48f PUSH2 0x100
0x492 MUL
0x493 PUSH1 0x0
0x495 NOT
0x496 ADD
0x497 SWAP1
0x498 SWAP5
0x499 AND
0x49a SWAP4
0x49b SWAP1
0x49c SWAP4
0x49d DIV
0x49e PUSH1 0x1f
0x4a0 DUP2
0x4a1 ADD
0x4a2 DUP5
0x4a3 SWAP1
0x4a4 DIV
0x4a5 DUP5
0x4a6 MUL
0x4a7 DUP3
0x4a8 ADD
0x4a9 DUP5
0x4aa ADD
0x4ab SWAP1
0x4ac SWAP3
0x4ad MSTORE
0x4ae DUP2
0x4af DUP2
0x4b0 MSTORE
0x4b1 SWAP3
0x4b2 SWAP2
0x4b3 DUP4
0x4b4 ADD
0x4b5 DUP3
0x4b6 DUP3
0x4b7 DUP1
0x4b8 ISZERO
0x4b9 PUSH2 0x503
0x4bc JUMPI
---
0x47e: JUMPDEST 
0x47f: V366 = 0x1
0x482: V367 = S[0x1]
0x483: V368 = 0x40
0x486: V369 = M[0x40]
0x487: V370 = 0x20
0x489: V371 = 0x2
0x48d: V372 = AND 0x1 V367
0x48e: V373 = ISZERO V372
0x48f: V374 = 0x100
0x492: V375 = MUL 0x100 V373
0x493: V376 = 0x0
0x495: V377 = NOT 0x0
0x496: V378 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V375
0x499: V379 = AND V367 V378
0x49d: V380 = DIV V379 0x2
0x49e: V381 = 0x1f
0x4a1: V382 = ADD V380 0x1f
0x4a4: V383 = DIV V382 0x20
0x4a6: V384 = MUL 0x20 V383
0x4a8: V385 = ADD V369 V384
0x4aa: V386 = ADD 0x20 V385
0x4ad: M[0x40] = V386
0x4b0: M[V369] = V380
0x4b4: V387 = ADD V369 0x20
0x4b8: V388 = ISZERO V380
0x4b9: V389 = 0x503
0x4bc: JUMPI 0x503 V388
---
Entry stack: [V11, 0x18c]
Stack pops: 0
Stack additions: [V369, 0x1, V380, V387, 0x1, V380]
Exit stack: [V11, 0x18c, V369, 0x1, V380, V387, 0x1, V380]

================================

Block 0x4bd
[0x4bd:0x4c4]
---
Predecessors: [0x47e]
Successors: [0x4c5, 0x4d8]
---
0x4bd DUP1
0x4be PUSH1 0x1f
0x4c0 LT
0x4c1 PUSH2 0x4d8
0x4c4 JUMPI
---
0x4be: V390 = 0x1f
0x4c0: V391 = LT 0x1f V380
0x4c1: V392 = 0x4d8
0x4c4: JUMPI 0x4d8 V391
---
Entry stack: [V11, 0x18c, V369, 0x1, V380, V387, 0x1, V380]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x18c, V369, 0x1, V380, V387, 0x1, V380]

================================

Block 0x4c5
[0x4c5:0x4d7]
---
Predecessors: [0x4bd]
Successors: [0x503]
---
0x4c5 PUSH2 0x100
0x4c8 DUP1
0x4c9 DUP4
0x4ca SLOAD
0x4cb DIV
0x4cc MUL
0x4cd DUP4
0x4ce MSTORE
0x4cf SWAP2
0x4d0 PUSH1 0x20
0x4d2 ADD
0x4d3 SWAP2
0x4d4 PUSH2 0x503
0x4d7 JUMP
---
0x4c5: V393 = 0x100
0x4ca: V394 = S[0x1]
0x4cb: V395 = DIV V394 0x100
0x4cc: V396 = MUL V395 0x100
0x4ce: M[V387] = V396
0x4d0: V397 = 0x20
0x4d2: V398 = ADD 0x20 V387
0x4d4: V399 = 0x503
0x4d7: JUMP 0x503
---
Entry stack: [V11, 0x18c, V369, 0x1, V380, V387, 0x1, V380]
Stack pops: 3
Stack additions: [V398, S1, S0]
Exit stack: [V11, 0x18c, V369, 0x1, V380, V398, 0x1, V380]

================================

Block 0x4d8
[0x4d8:0x4e5]
---
Predecessors: [0x4bd, 0x77c]
Successors: [0x4e6]
---
0x4d8 JUMPDEST
0x4d9 DUP3
0x4da ADD
0x4db SWAP2
0x4dc SWAP1
0x4dd PUSH1 0x0
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 PUSH1 0x0
0x4e4 SHA3
0x4e5 SWAP1
---
0x4d8: JUMPDEST 
0x4da: V400 = ADD S2 S0
0x4dd: V401 = 0x0
0x4df: M[0x0] = {0x1, 0x3}
0x4e0: V402 = 0x20
0x4e2: V403 = 0x0
0x4e4: V404 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x18c, S5, {0x1, 0x3}, S3, S2, {0x1, 0x3}, S0]
Stack pops: 3
Stack additions: [V400, V404, S2]
Exit stack: [V11, 0x18c, S5, {0x1, 0x3}, S3, V400, V404, S2]

================================

Block 0x4e6
[0x4e6:0x4f9]
---
Predecessors: [0x4d8, 0x4e6]
Successors: [0x4e6, 0x4fa]
---
0x4e6 JUMPDEST
0x4e7 DUP2
0x4e8 SLOAD
0x4e9 DUP2
0x4ea MSTORE
0x4eb SWAP1
0x4ec PUSH1 0x1
0x4ee ADD
0x4ef SWAP1
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 DUP1
0x4f4 DUP4
0x4f5 GT
0x4f6 PUSH2 0x4e6
0x4f9 JUMPI
---
0x4e6: JUMPDEST 
0x4e8: V405 = S[S1]
0x4ea: M[S0] = V405
0x4ec: V406 = 0x1
0x4ee: V407 = ADD 0x1 S1
0x4f0: V408 = 0x20
0x4f2: V409 = ADD 0x20 S0
0x4f5: V410 = GT V400 V409
0x4f6: V411 = 0x4e6
0x4f9: JUMPI 0x4e6 V410
---
Entry stack: [V11, 0x18c, S5, {0x1, 0x3}, S3, V400, S1, S0]
Stack pops: 3
Stack additions: [S2, V407, V409]
Exit stack: [V11, 0x18c, S5, {0x1, 0x3}, S3, V400, V407, V409]

================================

Block 0x4fa
[0x4fa:0x502]
---
Predecessors: [0x4e6]
Successors: [0x503]
---
0x4fa DUP3
0x4fb SWAP1
0x4fc SUB
0x4fd PUSH1 0x1f
0x4ff AND
0x500 DUP3
0x501 ADD
0x502 SWAP2
---
0x4fc: V412 = SUB V409 V400
0x4fd: V413 = 0x1f
0x4ff: V414 = AND 0x1f V412
0x501: V415 = ADD V400 V414
---
Entry stack: [V11, 0x18c, S5, {0x1, 0x3}, S3, V400, V407, V409]
Stack pops: 3
Stack additions: [V415, S1, S2]
Exit stack: [V11, 0x18c, S5, {0x1, 0x3}, S3, V415, V407, V400]

================================

Block 0x503
[0x503:0x50a]
---
Predecessors: [0x47e, 0x4c5, 0x4fa, 0x73c, 0x784]
Successors: [0x18c]
---
0x503 JUMPDEST
0x504 POP
0x505 POP
0x506 POP
0x507 POP
0x508 POP
0x509 DUP2
0x50a JUMP
---
0x503: JUMPDEST 
0x50a: JUMP 0x18c
---
Entry stack: [V11, 0x18c, S5, {0x1, 0x3}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x18c, S5]

================================

Block 0x50b
[0x50b:0x512]
---
Predecessors: [0x20d]
Successors: [0x225]
---
0x50b JUMPDEST
0x50c PUSH1 0x1
0x50e SWAP3
0x50f SWAP2
0x510 POP
0x511 POP
0x512 JUMP
---
0x50b: JUMPDEST 
0x50c: V416 = 0x1
0x512: JUMP 0x225
---
Entry stack: [V11, 0x225, V149, V151]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x513
[0x513:0x518]
---
Predecessors: [0x245]
Successors: [0x24e]
---
0x513 JUMPDEST
0x514 PUSH1 0x0
0x516 SLOAD
0x517 DUP2
0x518 JUMP
---
0x513: JUMPDEST 
0x514: V417 = 0x0
0x516: V418 = S[0x0]
0x518: JUMP 0x24e
---
Entry stack: [V11, 0x24e]
Stack pops: 1
Stack additions: [S0, V418]
Exit stack: [V11, 0x24e, V418]

================================

Block 0x519
[0x519:0x5e0]
---
Predecessors: [0x26c]
Successors: [0x225]
---
0x519 JUMPDEST
0x51a CALLER
0x51b PUSH1 0x0
0x51d SWAP1
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x5
0x522 PUSH1 0x20
0x524 SWAP1
0x525 DUP2
0x526 MSTORE
0x527 PUSH1 0x40
0x529 DUP1
0x52a DUP4
0x52b SHA3
0x52c DUP1
0x52d SLOAD
0x52e PUSH8 0xde0b6b3a7640000
0x537 ADD
0x538 SWAP1
0x539 SSTORE
0x53a DUP1
0x53b MLOAD
0x53c DUP3
0x53d DUP2
0x53e MSTORE
0x53f PUSH1 0x11
0x541 SWAP3
0x542 DUP2
0x543 ADD
0x544 SWAP3
0x545 SWAP1
0x546 SWAP3
0x547 MSTORE
0x548 PUSH32 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x569 DUP3
0x56a DUP3
0x56b ADD
0x56c MSTORE
0x56d MLOAD
0x56e PUSH32 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x58f SWAP2
0x590 DUP2
0x591 SWAP1
0x592 SUB
0x593 PUSH1 0x60
0x595 ADD
0x596 SWAP1
0x597 LOG1
0x598 PUSH1 0x40
0x59a DUP1
0x59b MLOAD
0x59c DUP4
0x59d DUP2
0x59e MSTORE
0x59f SWAP1
0x5a0 MLOAD
0x5a1 PUSH1 0x1
0x5a3 PUSH1 0xa0
0x5a5 PUSH1 0x2
0x5a7 EXP
0x5a8 SUB
0x5a9 DUP6
0x5aa AND
0x5ab SWAP2
0x5ac CALLER
0x5ad SWAP2
0x5ae PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x5cf SWAP2
0x5d0 DUP2
0x5d1 SWAP1
0x5d2 SUB
0x5d3 PUSH1 0x20
0x5d5 ADD
0x5d6 SWAP1
0x5d7 LOG3
0x5d8 POP
0x5d9 PUSH1 0x1
0x5db SWAP4
0x5dc SWAP3
0x5dd POP
0x5de POP
0x5df POP
0x5e0 JUMP
---
0x519: JUMPDEST 
0x51a: V419 = CALLER
0x51b: V420 = 0x0
0x51f: M[0x0] = V419
0x520: V421 = 0x5
0x522: V422 = 0x20
0x526: M[0x20] = 0x5
0x527: V423 = 0x40
0x52b: V424 = SHA3 0x0 0x40
0x52d: V425 = S[V424]
0x52e: V426 = 0xde0b6b3a7640000
0x537: V427 = ADD 0xde0b6b3a7640000 V425
0x539: S[V424] = V427
0x53b: V428 = M[0x40]
0x53e: M[V428] = 0x20
0x53f: V429 = 0x11
0x543: V430 = ADD V428 0x20
0x547: M[V430] = 0x11
0x548: V431 = 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x56b: V432 = ADD 0x40 V428
0x56c: M[V432] = 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x56d: V433 = M[0x40]
0x56e: V434 = 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x592: V435 = SUB V428 V433
0x593: V436 = 0x60
0x595: V437 = ADD 0x60 V435
0x597: LOG V433 V437 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x598: V438 = 0x40
0x59b: V439 = M[0x40]
0x59e: M[V439] = V190
0x5a0: V440 = M[0x40]
0x5a1: V441 = 0x1
0x5a3: V442 = 0xa0
0x5a5: V443 = 0x2
0x5a7: V444 = EXP 0x2 0xa0
0x5a8: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V446 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V447 = CALLER
0x5ae: V448 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x5d2: V449 = SUB V439 V440
0x5d3: V450 = 0x20
0x5d5: V451 = ADD 0x20 V449
0x5d7: LOG V440 V451 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V447 V446
0x5d9: V452 = 0x1
0x5e0: JUMP 0x225
---
Entry stack: [V11, 0x225, V185, V188, V190]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5e1
[0x5e1:0x5e9]
---
Predecessors: [0x296]
Successors: [0x29f]
---
0x5e1 JUMPDEST
0x5e2 PUSH1 0x2
0x5e4 SLOAD
0x5e5 PUSH1 0xff
0x5e7 AND
0x5e8 DUP2
0x5e9 JUMP
---
0x5e1: JUMPDEST 
0x5e2: V453 = 0x2
0x5e4: V454 = S[0x2]
0x5e5: V455 = 0xff
0x5e7: V456 = AND 0xff V454
0x5e9: JUMP 0x29f
---
Entry stack: [V11, 0x29f]
Stack pops: 1
Stack additions: [S0, V456]
Exit stack: [V11, 0x29f, V456]

================================

Block 0x5ea
[0x5ea:0x60a]
---
Predecessors: [0x2c1]
Successors: [0x225]
---
0x5ea JUMPDEST
0x5eb PUSH1 0x6
0x5ed SLOAD
0x5ee PUSH21 0x10000000000000000000000000000000000000000
0x604 SWAP1
0x605 DIV
0x606 PUSH1 0xff
0x608 AND
0x609 DUP2
0x60a JUMP
---
0x5ea: JUMPDEST 
0x5eb: V457 = 0x6
0x5ed: V458 = S[0x6]
0x5ee: V459 = 0x10000000000000000000000000000000000000000
0x605: V460 = DIV V458 0x10000000000000000000000000000000000000000
0x606: V461 = 0xff
0x608: V462 = AND 0xff V460
0x60a: JUMP 0x225
---
Entry stack: [V11, 0x225]
Stack pops: 1
Stack additions: [S0, V462]
Exit stack: [V11, 0x225, V462]

================================

Block 0x60b
[0x60b:0x675]
---
Predecessors: [0x2d6]
Successors: [0x676, 0x67a]
---
0x60b JUMPDEST
0x60c PUSH1 0x6
0x60e SLOAD
0x60f PUSH1 0x40
0x611 DUP1
0x612 MLOAD
0x613 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x634 DUP2
0x635 MSTORE
0x636 PUSH1 0x1
0x638 PUSH1 0xa0
0x63a PUSH1 0x2
0x63c EXP
0x63d SUB
0x63e SWAP3
0x63f DUP4
0x640 AND
0x641 PUSH1 0x4
0x643 DUP3
0x644 ADD
0x645 MSTORE
0x646 PUSH1 0x24
0x648 DUP2
0x649 ADD
0x64a DUP5
0x64b SWAP1
0x64c MSTORE
0x64d SWAP1
0x64e MLOAD
0x64f PUSH1 0x0
0x651 SWAP3
0x652 DUP6
0x653 AND
0x654 SWAP2
0x655 PUSH4 0xa9059cbb
0x65a SWAP2
0x65b PUSH1 0x44
0x65d DUP1
0x65e DUP4
0x65f ADD
0x660 SWAP3
0x661 PUSH1 0x20
0x663 SWAP3
0x664 SWAP2
0x665 SWAP1
0x666 DUP3
0x667 SWAP1
0x668 SUB
0x669 ADD
0x66a DUP2
0x66b DUP8
0x66c DUP8
0x66d DUP1
0x66e EXTCODESIZE
0x66f ISZERO
0x670 DUP1
0x671 ISZERO
0x672 PUSH2 0x67a
0x675 JUMPI
---
0x60b: JUMPDEST 
0x60c: V463 = 0x6
0x60e: V464 = S[0x6]
0x60f: V465 = 0x40
0x612: V466 = M[0x40]
0x613: V467 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x635: M[V466] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x636: V468 = 0x1
0x638: V469 = 0xa0
0x63a: V470 = 0x2
0x63c: V471 = EXP 0x2 0xa0
0x63d: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x640: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x641: V474 = 0x4
0x644: V475 = ADD V466 0x4
0x645: M[V475] = V473
0x646: V476 = 0x24
0x649: V477 = ADD V466 0x24
0x64c: M[V477] = V226
0x64e: V478 = M[0x40]
0x64f: V479 = 0x0
0x653: V480 = AND V224 0xffffffffffffffffffffffffffffffffffffffff
0x655: V481 = 0xa9059cbb
0x65b: V482 = 0x44
0x65f: V483 = ADD V466 0x44
0x661: V484 = 0x20
0x668: V485 = SUB V466 V478
0x669: V486 = ADD V485 0x44
0x66e: V487 = EXTCODESIZE V480
0x66f: V488 = ISZERO V487
0x671: V489 = ISZERO V488
0x672: V490 = 0x67a
0x675: JUMPI 0x67a V489
---
Entry stack: [V11, 0x225, V224, V226]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V480, 0xa9059cbb, V483, 0x20, V478, V486, V478, 0x0, V480, V488]
Exit stack: [V11, 0x225, V224, V226, 0x0, V480, 0xa9059cbb, V483, 0x20, V478, V486, V478, 0x0, V480, V488]

================================

Block 0x676
[0x676:0x679]
---
Predecessors: [0x60b]
Successors: []
---
0x676 PUSH1 0x0
0x678 DUP1
0x679 REVERT
---
0x676: V491 = 0x0
0x679: REVERT 0x0 0x0
---
Entry stack: [V11, 0x225, V224, V226, 0x0, V480, 0xa9059cbb, V483, 0x20, V478, V486, V478, 0x0, V480, V488]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x225, V224, V226, 0x0, V480, 0xa9059cbb, V483, 0x20, V478, V486, V478, 0x0, V480, V488]

================================

Block 0x67a
[0x67a:0x684]
---
Predecessors: [0x60b]
Successors: [0x685, 0x68e]
---
0x67a JUMPDEST
0x67b POP
0x67c GAS
0x67d CALL
0x67e ISZERO
0x67f DUP1
0x680 ISZERO
0x681 PUSH2 0x68e
0x684 JUMPI
---
0x67a: JUMPDEST 
0x67c: V492 = GAS
0x67d: V493 = CALL V492 V480 0x0 V478 V486 V478 0x20
0x67e: V494 = ISZERO V493
0x680: V495 = ISZERO V494
0x681: V496 = 0x68e
0x684: JUMPI 0x68e V495
---
Entry stack: [V11, 0x225, V224, V226, 0x0, V480, 0xa9059cbb, V483, 0x20, V478, V486, V478, 0x0, V480, V488]
Stack pops: 7
Stack additions: [V494]
Exit stack: [V11, 0x225, V224, V226, 0x0, V480, 0xa9059cbb, V483, V494]

================================

Block 0x685
[0x685:0x68d]
---
Predecessors: [0x67a]
Successors: []
---
0x685 RETURNDATASIZE
0x686 PUSH1 0x0
0x688 DUP1
0x689 RETURNDATACOPY
0x68a RETURNDATASIZE
0x68b PUSH1 0x0
0x68d REVERT
---
0x685: V497 = RETURNDATASIZE
0x686: V498 = 0x0
0x689: RETURNDATACOPY 0x0 0x0 V497
0x68a: V499 = RETURNDATASIZE
0x68b: V500 = 0x0
0x68d: REVERT 0x0 V499
---
Entry stack: [V11, 0x225, V224, V226, 0x0, V480, 0xa9059cbb, V483, V494]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x225, V224, V226, 0x0, V480, 0xa9059cbb, V483, V494]

================================

Block 0x68e
[0x68e:0x69f]
---
Predecessors: [0x67a]
Successors: [0x6a0, 0x6a4]
---
0x68e JUMPDEST
0x68f POP
0x690 POP
0x691 POP
0x692 POP
0x693 PUSH1 0x40
0x695 MLOAD
0x696 RETURNDATASIZE
0x697 PUSH1 0x20
0x699 DUP2
0x69a LT
0x69b ISZERO
0x69c PUSH2 0x6a4
0x69f JUMPI
---
0x68e: JUMPDEST 
0x693: V501 = 0x40
0x695: V502 = M[0x40]
0x696: V503 = RETURNDATASIZE
0x697: V504 = 0x20
0x69a: V505 = LT V503 0x20
0x69b: V506 = ISZERO V505
0x69c: V507 = 0x6a4
0x69f: JUMPI 0x6a4 V506
---
Entry stack: [V11, 0x225, V224, V226, 0x0, V480, 0xa9059cbb, V483, V494]
Stack pops: 4
Stack additions: [V502, V503]
Exit stack: [V11, 0x225, V224, V226, 0x0, V502, V503]

================================

Block 0x6a0
[0x6a0:0x6a3]
---
Predecessors: [0x68e]
Successors: []
---
0x6a0 PUSH1 0x0
0x6a2 DUP1
0x6a3 REVERT
---
0x6a0: V508 = 0x0
0x6a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x225, V224, V226, 0x0, V502, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x225, V224, V226, 0x0, V502, V503]

================================

Block 0x6a4
[0x6a4:0x6ac]
---
Predecessors: [0x68e]
Successors: [0x225]
---
0x6a4 JUMPDEST
0x6a5 POP
0x6a6 MLOAD
0x6a7 SWAP4
0x6a8 SWAP3
0x6a9 POP
0x6aa POP
0x6ab POP
0x6ac JUMP
---
0x6a4: JUMPDEST 
0x6a6: V509 = M[V502]
0x6ac: JUMP 0x225
---
Entry stack: [V11, 0x225, V224, V226, 0x0, V502, V503]
Stack pops: 6
Stack additions: [V509]
Exit stack: [V11, V509]

================================

Block 0x6ad
[0x6ad:0x6d3]
---
Predecessors: [0x2fa]
Successors: [0x6d4, 0x71e]
---
0x6ad JUMPDEST
0x6ae PUSH1 0x6
0x6b0 SLOAD
0x6b1 PUSH1 0x0
0x6b3 SWAP1
0x6b4 PUSH21 0x10000000000000000000000000000000000000000
0x6ca SWAP1
0x6cb DIV
0x6cc PUSH1 0xff
0x6ce AND
0x6cf ISZERO
0x6d0 PUSH2 0x71e
0x6d3 JUMPI
---
0x6ad: JUMPDEST 
0x6ae: V510 = 0x6
0x6b0: V511 = S[0x6]
0x6b1: V512 = 0x0
0x6b4: V513 = 0x10000000000000000000000000000000000000000
0x6cb: V514 = DIV V511 0x10000000000000000000000000000000000000000
0x6cc: V515 = 0xff
0x6ce: V516 = AND 0xff V514
0x6cf: V517 = ISZERO V516
0x6d0: V518 = 0x71e
0x6d3: JUMPI 0x71e V517
---
Entry stack: [V11, 0x24e, V240]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x24e, V240, 0x0]

================================

Block 0x6d4
[0x6d4:0x6f2]
---
Predecessors: [0x6ad]
Successors: [0x6f3, 0x715]
---
0x6d4 PUSH1 0x1
0x6d6 PUSH1 0xa0
0x6d8 PUSH1 0x2
0x6da EXP
0x6db SUB
0x6dc DUP3
0x6dd AND
0x6de PUSH1 0x0
0x6e0 SWAP1
0x6e1 DUP2
0x6e2 MSTORE
0x6e3 PUSH1 0x5
0x6e5 PUSH1 0x20
0x6e7 MSTORE
0x6e8 PUSH1 0x40
0x6ea DUP2
0x6eb SHA3
0x6ec SLOAD
0x6ed GT
0x6ee ISZERO
0x6ef PUSH2 0x715
0x6f2 JUMPI
---
0x6d4: V519 = 0x1
0x6d6: V520 = 0xa0
0x6d8: V521 = 0x2
0x6da: V522 = EXP 0x2 0xa0
0x6db: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dd: V524 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V525 = 0x0
0x6e2: M[0x0] = V524
0x6e3: V526 = 0x5
0x6e5: V527 = 0x20
0x6e7: M[0x20] = 0x5
0x6e8: V528 = 0x40
0x6eb: V529 = SHA3 0x0 0x40
0x6ec: V530 = S[V529]
0x6ed: V531 = GT V530 0x0
0x6ee: V532 = ISZERO V531
0x6ef: V533 = 0x715
0x6f2: JUMPI 0x715 V532
---
Entry stack: [V11, 0x24e, V240, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x24e, V240, 0x0]

================================

Block 0x6f3
[0x6f3:0x714]
---
Predecessors: [0x6d4]
Successors: [0x722]
---
0x6f3 POP
0x6f4 PUSH1 0x1
0x6f6 PUSH1 0xa0
0x6f8 PUSH1 0x2
0x6fa EXP
0x6fb SUB
0x6fc DUP2
0x6fd AND
0x6fe PUSH1 0x0
0x700 SWAP1
0x701 DUP2
0x702 MSTORE
0x703 PUSH1 0x5
0x705 PUSH1 0x20
0x707 MSTORE
0x708 PUSH1 0x40
0x70a SWAP1
0x70b SHA3
0x70c SLOAD
0x70d PUSH1 0x4
0x70f SLOAD
0x710 ADD
0x711 PUSH2 0x722
0x714 JUMP
---
0x6f4: V534 = 0x1
0x6f6: V535 = 0xa0
0x6f8: V536 = 0x2
0x6fa: V537 = EXP 0x2 0xa0
0x6fb: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fd: V539 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x6fe: V540 = 0x0
0x702: M[0x0] = V539
0x703: V541 = 0x5
0x705: V542 = 0x20
0x707: M[0x20] = 0x5
0x708: V543 = 0x40
0x70b: V544 = SHA3 0x0 0x40
0x70c: V545 = S[V544]
0x70d: V546 = 0x4
0x70f: V547 = S[0x4]
0x710: V548 = ADD V547 V545
0x711: V549 = 0x722
0x714: JUMP 0x722
---
Entry stack: [V11, 0x24e, V240, 0x0]
Stack pops: 2
Stack additions: [S1, V548]
Exit stack: [V11, 0x24e, V240, V548]

================================

Block 0x715
[0x715:0x71d]
---
Predecessors: [0x6d4]
Successors: [0x722]
---
0x715 JUMPDEST
0x716 POP
0x717 PUSH1 0x4
0x719 SLOAD
0x71a PUSH2 0x722
0x71d JUMP
---
0x715: JUMPDEST 
0x717: V550 = 0x4
0x719: V551 = S[0x4]
0x71a: V552 = 0x722
0x71d: JUMP 0x722
---
Entry stack: [V11, 0x24e, V240, 0x0]
Stack pops: 1
Stack additions: [V551]
Exit stack: [V11, 0x24e, V240, V551]

================================

Block 0x71e
[0x71e:0x721]
---
Predecessors: [0x6ad]
Successors: [0x722]
---
0x71e JUMPDEST
0x71f POP
0x720 PUSH1 0x0
---
0x71e: JUMPDEST 
0x720: V553 = 0x0
---
Entry stack: [V11, 0x24e, V240, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x24e, V240, 0x0]

================================

Block 0x722
[0x722:0x726]
---
Predecessors: [0x6f3, 0x715, 0x71e]
Successors: [0x24e]
---
0x722 JUMPDEST
0x723 SWAP2
0x724 SWAP1
0x725 POP
0x726 JUMP
---
0x722: JUMPDEST 
0x726: JUMP 0x24e
---
Entry stack: [V11, 0x24e, V240, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x727
[0x727:0x72c]
---
Predecessors: [0x31b]
Successors: [0x24e]
---
0x727 JUMPDEST
0x728 PUSH1 0x4
0x72a SLOAD
0x72b DUP2
0x72c JUMP
---
0x727: JUMPDEST 
0x728: V554 = 0x4
0x72a: V555 = S[0x4]
0x72c: JUMP 0x24e
---
Entry stack: [V11, 0x24e]
Stack pops: 1
Stack additions: [S0, V555]
Exit stack: [V11, 0x24e, V555]

================================

Block 0x72d
[0x72d:0x73b]
---
Predecessors: [0x330]
Successors: [0x339]
---
0x72d JUMPDEST
0x72e PUSH1 0x6
0x730 SLOAD
0x731 PUSH1 0x1
0x733 PUSH1 0xa0
0x735 PUSH1 0x2
0x737 EXP
0x738 SUB
0x739 AND
0x73a DUP2
0x73b JUMP
---
0x72d: JUMPDEST 
0x72e: V556 = 0x6
0x730: V557 = S[0x6]
0x731: V558 = 0x1
0x733: V559 = 0xa0
0x735: V560 = 0x2
0x737: V561 = EXP 0x2 0xa0
0x738: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x739: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x73b: JUMP 0x339
---
Entry stack: [V11, 0x339]
Stack pops: 1
Stack additions: [S0, V563]
Exit stack: [V11, 0x339, V563]

================================

Block 0x73c
[0x73c:0x77b]
---
Predecessors: [0x361]
Successors: [0x503, 0x77c]
---
0x73c JUMPDEST
0x73d PUSH1 0x3
0x73f DUP1
0x740 SLOAD
0x741 PUSH1 0x40
0x743 DUP1
0x744 MLOAD
0x745 PUSH1 0x20
0x747 PUSH1 0x2
0x749 PUSH1 0x1
0x74b DUP6
0x74c AND
0x74d ISZERO
0x74e PUSH2 0x100
0x751 MUL
0x752 PUSH1 0x0
0x754 NOT
0x755 ADD
0x756 SWAP1
0x757 SWAP5
0x758 AND
0x759 SWAP4
0x75a SWAP1
0x75b SWAP4
0x75c DIV
0x75d PUSH1 0x1f
0x75f DUP2
0x760 ADD
0x761 DUP5
0x762 SWAP1
0x763 DIV
0x764 DUP5
0x765 MUL
0x766 DUP3
0x767 ADD
0x768 DUP5
0x769 ADD
0x76a SWAP1
0x76b SWAP3
0x76c MSTORE
0x76d DUP2
0x76e DUP2
0x76f MSTORE
0x770 SWAP3
0x771 SWAP2
0x772 DUP4
0x773 ADD
0x774 DUP3
0x775 DUP3
0x776 DUP1
0x777 ISZERO
0x778 PUSH2 0x503
0x77b JUMPI
---
0x73c: JUMPDEST 
0x73d: V564 = 0x3
0x740: V565 = S[0x3]
0x741: V566 = 0x40
0x744: V567 = M[0x40]
0x745: V568 = 0x20
0x747: V569 = 0x2
0x749: V570 = 0x1
0x74c: V571 = AND V565 0x1
0x74d: V572 = ISZERO V571
0x74e: V573 = 0x100
0x751: V574 = MUL 0x100 V572
0x752: V575 = 0x0
0x754: V576 = NOT 0x0
0x755: V577 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V574
0x758: V578 = AND V565 V577
0x75c: V579 = DIV V578 0x2
0x75d: V580 = 0x1f
0x760: V581 = ADD V579 0x1f
0x763: V582 = DIV V581 0x20
0x765: V583 = MUL 0x20 V582
0x767: V584 = ADD V567 V583
0x769: V585 = ADD 0x20 V584
0x76c: M[0x40] = V585
0x76f: M[V567] = V579
0x773: V586 = ADD V567 0x20
0x777: V587 = ISZERO V579
0x778: V588 = 0x503
0x77b: JUMPI 0x503 V587
---
Entry stack: [V11, 0x18c]
Stack pops: 0
Stack additions: [V567, 0x3, V579, V586, 0x3, V579]
Exit stack: [V11, 0x18c, V567, 0x3, V579, V586, 0x3, V579]

================================

Block 0x77c
[0x77c:0x783]
---
Predecessors: [0x73c]
Successors: [0x4d8, 0x784]
---
0x77c DUP1
0x77d PUSH1 0x1f
0x77f LT
0x780 PUSH2 0x4d8
0x783 JUMPI
---
0x77d: V589 = 0x1f
0x77f: V590 = LT 0x1f V579
0x780: V591 = 0x4d8
0x783: JUMPI 0x4d8 V590
---
Entry stack: [V11, 0x18c, V567, 0x3, V579, V586, 0x3, V579]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x18c, V567, 0x3, V579, V586, 0x3, V579]

================================

Block 0x784
[0x784:0x796]
---
Predecessors: [0x77c]
Successors: [0x503]
---
0x784 PUSH2 0x100
0x787 DUP1
0x788 DUP4
0x789 SLOAD
0x78a DIV
0x78b MUL
0x78c DUP4
0x78d MSTORE
0x78e SWAP2
0x78f PUSH1 0x20
0x791 ADD
0x792 SWAP2
0x793 PUSH2 0x503
0x796 JUMP
---
0x784: V592 = 0x100
0x789: V593 = S[0x3]
0x78a: V594 = DIV V593 0x100
0x78b: V595 = MUL V594 0x100
0x78d: M[V586] = V595
0x78f: V596 = 0x20
0x791: V597 = ADD 0x20 V586
0x793: V598 = 0x503
0x796: JUMP 0x503
---
Entry stack: [V11, 0x18c, V567, 0x3, V579, V586, 0x3, V579]
Stack pops: 3
Stack additions: [V597, S1, S0]
Exit stack: [V11, 0x18c, V567, 0x3, V579, V597, 0x3, V579]

================================

Block 0x797
[0x797:0x85d]
---
Predecessors: [0x376]
Successors: [0x225]
---
0x797 JUMPDEST
0x798 CALLER
0x799 PUSH1 0x0
0x79b SWAP1
0x79c DUP2
0x79d MSTORE
0x79e PUSH1 0x5
0x7a0 PUSH1 0x20
0x7a2 SWAP1
0x7a3 DUP2
0x7a4 MSTORE
0x7a5 PUSH1 0x40
0x7a7 DUP1
0x7a8 DUP4
0x7a9 SHA3
0x7aa DUP1
0x7ab SLOAD
0x7ac PUSH8 0xde0b6b3a7640000
0x7b5 ADD
0x7b6 SWAP1
0x7b7 SSTORE
0x7b8 DUP1
0x7b9 MLOAD
0x7ba DUP3
0x7bb DUP2
0x7bc MSTORE
0x7bd PUSH1 0x11
0x7bf SWAP3
0x7c0 DUP2
0x7c1 ADD
0x7c2 SWAP3
0x7c3 SWAP1
0x7c4 SWAP3
0x7c5 MSTORE
0x7c6 PUSH32 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x7e7 DUP3
0x7e8 DUP3
0x7e9 ADD
0x7ea MSTORE
0x7eb MLOAD
0x7ec PUSH32 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x80d SWAP2
0x80e DUP2
0x80f SWAP1
0x810 SUB
0x811 PUSH1 0x60
0x813 ADD
0x814 SWAP1
0x815 LOG1
0x816 PUSH1 0x40
0x818 DUP1
0x819 MLOAD
0x81a DUP4
0x81b DUP2
0x81c MSTORE
0x81d SWAP1
0x81e MLOAD
0x81f PUSH1 0x1
0x821 PUSH1 0xa0
0x823 PUSH1 0x2
0x825 EXP
0x826 SUB
0x827 DUP6
0x828 AND
0x829 SWAP2
0x82a CALLER
0x82b SWAP2
0x82c PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x84d SWAP2
0x84e DUP2
0x84f SWAP1
0x850 SUB
0x851 PUSH1 0x20
0x853 ADD
0x854 SWAP1
0x855 LOG3
0x856 POP
0x857 PUSH1 0x1
0x859 SWAP3
0x85a SWAP2
0x85b POP
0x85c POP
0x85d JUMP
---
0x797: JUMPDEST 
0x798: V599 = CALLER
0x799: V600 = 0x0
0x79d: M[0x0] = V599
0x79e: V601 = 0x5
0x7a0: V602 = 0x20
0x7a4: M[0x20] = 0x5
0x7a5: V603 = 0x40
0x7a9: V604 = SHA3 0x0 0x40
0x7ab: V605 = S[V604]
0x7ac: V606 = 0xde0b6b3a7640000
0x7b5: V607 = ADD 0xde0b6b3a7640000 V605
0x7b7: S[V604] = V607
0x7b9: V608 = M[0x40]
0x7bc: M[V608] = 0x20
0x7bd: V609 = 0x11
0x7c1: V610 = ADD V608 0x20
0x7c5: M[V610] = 0x11
0x7c6: V611 = 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x7e9: V612 = ADD 0x40 V608
0x7ea: M[V612] = 0x2b3120746f6b656e20666f7220796f752e000000000000000000000000000000
0x7eb: V613 = M[0x40]
0x7ec: V614 = 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x810: V615 = SUB V608 V613
0x811: V616 = 0x60
0x813: V617 = ADD 0x60 V615
0x815: LOG V613 V617 0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137
0x816: V618 = 0x40
0x819: V619 = M[0x40]
0x81c: M[V619] = V286
0x81e: V620 = M[0x40]
0x81f: V621 = 0x1
0x821: V622 = 0xa0
0x823: V623 = 0x2
0x825: V624 = EXP 0x2 0xa0
0x826: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x828: V626 = AND V284 0xffffffffffffffffffffffffffffffffffffffff
0x82a: V627 = CALLER
0x82c: V628 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x850: V629 = SUB V619 V620
0x851: V630 = 0x20
0x853: V631 = ADD 0x20 V629
0x855: LOG V620 V631 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V627 V626
0x857: V632 = 0x1
0x85d: JUMP 0x225
---
Entry stack: [V11, 0x225, V284, V286]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x85e
[0x85e:0x86f]
---
Predecessors: [0x39a]
Successors: [0x24e]
---
0x85e JUMPDEST
0x85f PUSH1 0x5
0x861 PUSH1 0x20
0x863 MSTORE
0x864 PUSH1 0x0
0x866 SWAP1
0x867 DUP2
0x868 MSTORE
0x869 PUSH1 0x40
0x86b SWAP1
0x86c SHA3
0x86d SLOAD
0x86e DUP2
0x86f JUMP
---
0x85e: JUMPDEST 
0x85f: V633 = 0x5
0x861: V634 = 0x20
0x863: M[0x20] = 0x5
0x864: V635 = 0x0
0x868: M[0x0] = V300
0x869: V636 = 0x40
0x86c: V637 = SHA3 0x0 0x40
0x86d: V638 = S[V637]
0x86f: JUMP 0x24e
---
Entry stack: [V11, 0x24e, V300]
Stack pops: 2
Stack additions: [S1, V638]
Exit stack: [V11, 0x24e, V638]

================================

Block 0x870
[0x870:0x877]
---
Predecessors: [0x3bb]
Successors: [0x24e]
---
0x870 JUMPDEST
0x871 PUSH1 0x0
0x873 SWAP3
0x874 SWAP2
0x875 POP
0x876 POP
0x877 JUMP
---
0x870: JUMPDEST 
0x871: V639 = 0x0
0x877: JUMP 0x24e
---
Entry stack: [V11, 0x24e, V314, V317]
Stack pops: 3
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x878
[0x878:0x88a]
---
Predecessors: [0x3e2]
Successors: [0x88b, 0x88f]
---
0x878 JUMPDEST
0x879 PUSH1 0x6
0x87b SLOAD
0x87c PUSH1 0x1
0x87e PUSH1 0xa0
0x880 PUSH1 0x2
0x882 EXP
0x883 SUB
0x884 AND
0x885 CALLER
0x886 EQ
0x887 PUSH2 0x88f
0x88a JUMPI
---
0x878: JUMPDEST 
0x879: V640 = 0x6
0x87b: V641 = S[0x6]
0x87c: V642 = 0x1
0x87e: V643 = 0xa0
0x880: V644 = 0x2
0x882: V645 = EXP 0x2 0xa0
0x883: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x884: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x885: V648 = CALLER
0x886: V649 = EQ V648 V647
0x887: V650 = 0x88f
0x88a: JUMPI 0x88f V649
---
Entry stack: [V11, 0x47c, V324, V342, V356, V359, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x47c, V324, V342, V356, V359, V364]

================================

Block 0x88b
[0x88b:0x88e]
---
Predecessors: [0x878]
Successors: []
---
0x88b PUSH1 0x0
0x88d DUP1
0x88e REVERT
---
0x88b: V651 = 0x0
0x88e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x47c, V324, V342, V356, V359, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x47c, V324, V342, V356, V359, V364]

================================

Block 0x88f
[0x88f:0x8a1]
---
Predecessors: [0x878]
Successors: [0x902]
---
0x88f JUMPDEST
0x890 DUP5
0x891 MLOAD
0x892 PUSH2 0x8a2
0x895 SWAP1
0x896 PUSH1 0x1
0x898 SWAP1
0x899 PUSH1 0x20
0x89b DUP9
0x89c ADD
0x89d SWAP1
0x89e PUSH2 0x902
0x8a1 JUMP
---
0x88f: JUMPDEST 
0x891: V652 = M[V324]
0x892: V653 = 0x8a2
0x896: V654 = 0x1
0x899: V655 = 0x20
0x89c: V656 = ADD V324 0x20
0x89e: V657 = 0x902
0x8a1: JUMP 0x902
---
Entry stack: [V11, 0x47c, V324, V342, V356, V359, V364]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x8a2, 0x1, V656, V652]
Exit stack: [V11, 0x47c, V324, V342, V356, V359, V364, 0x8a2, 0x1, V656, V652]

================================

Block 0x8a2
[0x8a2:0x8b5]
---
Predecessors: [0x97c]
Successors: [0x902]
---
0x8a2 JUMPDEST
0x8a3 POP
0x8a4 DUP4
0x8a5 MLOAD
0x8a6 PUSH2 0x8b6
0x8a9 SWAP1
0x8aa PUSH1 0x3
0x8ac SWAP1
0x8ad PUSH1 0x20
0x8af DUP8
0x8b0 ADD
0x8b1 SWAP1
0x8b2 PUSH2 0x902
0x8b5 JUMP
---
0x8a2: JUMPDEST 
0x8a5: V658 = M[S4]
0x8a6: V659 = 0x8b6
0x8aa: V660 = 0x3
0x8ad: V661 = 0x20
0x8b0: V662 = ADD S4 0x20
0x8b2: V663 = 0x902
0x8b5: JUMP 0x902
---
Entry stack: [V11, 0x47c, V324, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x8b6, 0x3, V662, V658]
Exit stack: [V11, 0x47c, V324, S7, S6, S5, S4, S3, S2, S1, 0x8b6, 0x3, V662, V658]

================================

Block 0x8b6
[0x8b6:0x901]
---
Predecessors: [0x97c]
Successors: [0x47c]
---
0x8b6 JUMPDEST
0x8b7 POP
0x8b8 PUSH1 0x4
0x8ba SWAP3
0x8bb SWAP1
0x8bc SWAP3
0x8bd SSTORE
0x8be PUSH1 0x0
0x8c0 SSTORE
0x8c1 PUSH1 0x6
0x8c3 DUP1
0x8c4 SLOAD
0x8c5 SWAP2
0x8c6 ISZERO
0x8c7 ISZERO
0x8c8 PUSH21 0x10000000000000000000000000000000000000000
0x8de MUL
0x8df PUSH21 0xff0000000000000000000000000000000000000000
0x8f5 NOT
0x8f6 SWAP1
0x8f7 SWAP3
0x8f8 AND
0x8f9 SWAP2
0x8fa SWAP1
0x8fb SWAP2
0x8fc OR
0x8fd SWAP1
0x8fe SSTORE
0x8ff POP
0x900 POP
0x901 JUMP
---
0x8b6: JUMPDEST 
0x8b8: V664 = 0x4
0x8bd: S[0x4] = S3
0x8be: V665 = 0x0
0x8c0: S[0x0] = S2
0x8c1: V666 = 0x6
0x8c4: V667 = S[0x6]
0x8c6: V668 = ISZERO S1
0x8c7: V669 = ISZERO V668
0x8c8: V670 = 0x10000000000000000000000000000000000000000
0x8de: V671 = MUL 0x10000000000000000000000000000000000000000 V669
0x8df: V672 = 0xff0000000000000000000000000000000000000000
0x8f5: V673 = NOT 0xff0000000000000000000000000000000000000000
0x8f8: V674 = AND V667 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff
0x8fc: V675 = OR V674 V671
0x8fe: S[0x6] = V675
0x901: JUMP S6
---
Entry stack: [V11, 0x47c, V324, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V11, 0x47c, V324, S7]

================================

Block 0x902
[0x902:0x932]
---
Predecessors: [0x88f, 0x8a2]
Successors: [0x933, 0x943]
---
0x902 JUMPDEST
0x903 DUP3
0x904 DUP1
0x905 SLOAD
0x906 PUSH1 0x1
0x908 DUP2
0x909 PUSH1 0x1
0x90b AND
0x90c ISZERO
0x90d PUSH2 0x100
0x910 MUL
0x911 SUB
0x912 AND
0x913 PUSH1 0x2
0x915 SWAP1
0x916 DIV
0x917 SWAP1
0x918 PUSH1 0x0
0x91a MSTORE
0x91b PUSH1 0x20
0x91d PUSH1 0x0
0x91f SHA3
0x920 SWAP1
0x921 PUSH1 0x1f
0x923 ADD
0x924 PUSH1 0x20
0x926 SWAP1
0x927 DIV
0x928 DUP2
0x929 ADD
0x92a SWAP3
0x92b DUP3
0x92c PUSH1 0x1f
0x92e LT
0x92f PUSH2 0x943
0x932 JUMPI
---
0x902: JUMPDEST 
0x905: V676 = S[{0x1, 0x3}]
0x906: V677 = 0x1
0x909: V678 = 0x1
0x90b: V679 = AND 0x1 V676
0x90c: V680 = ISZERO V679
0x90d: V681 = 0x100
0x910: V682 = MUL 0x100 V680
0x911: V683 = SUB V682 0x1
0x912: V684 = AND V683 V676
0x913: V685 = 0x2
0x916: V686 = DIV V684 0x2
0x918: V687 = 0x0
0x91a: M[0x0] = {0x1, 0x3}
0x91b: V688 = 0x20
0x91d: V689 = 0x0
0x91f: V690 = SHA3 0x0 0x20
0x921: V691 = 0x1f
0x923: V692 = ADD 0x1f V686
0x924: V693 = 0x20
0x927: V694 = DIV V692 0x20
0x929: V695 = ADD V690 V694
0x92c: V696 = 0x1f
0x92e: V697 = LT 0x1f S0
0x92f: V698 = 0x943
0x932: JUMPI 0x943 V697
---
Entry stack: [V11, 0x47c, V324, S10, S9, S8, S7, S6, S5, S4, {0x8a2, 0x8b6}, {0x1, 0x3}, S1, S0]
Stack pops: 3
Stack additions: [S2, V695, S0, V690, S1]
Exit stack: [V11, 0x47c, V324, S10, S9, S8, S7, S6, S5, S4, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S0, V690, S1]

================================

Block 0x933
[0x933:0x942]
---
Predecessors: [0x902]
Successors: [0x970]
---
0x933 DUP1
0x934 MLOAD
0x935 PUSH1 0xff
0x937 NOT
0x938 AND
0x939 DUP4
0x93a DUP1
0x93b ADD
0x93c OR
0x93d DUP6
0x93e SSTORE
0x93f PUSH2 0x970
0x942 JUMP
---
0x934: V699 = M[S0]
0x935: V700 = 0xff
0x937: V701 = NOT 0xff
0x938: V702 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V699
0x93b: V703 = ADD S2 S2
0x93c: V704 = OR V703 V702
0x93e: S[{0x1, 0x3}] = V704
0x93f: V705 = 0x970
0x942: JUMP 0x970
---
Entry stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, V690, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, V690, S0]

================================

Block 0x943
[0x943:0x951]
---
Predecessors: [0x902]
Successors: [0x952, 0x970]
---
0x943 JUMPDEST
0x944 DUP3
0x945 DUP1
0x946 ADD
0x947 PUSH1 0x1
0x949 ADD
0x94a DUP6
0x94b SSTORE
0x94c DUP3
0x94d ISZERO
0x94e PUSH2 0x970
0x951 JUMPI
---
0x943: JUMPDEST 
0x946: V706 = ADD S2 S2
0x947: V707 = 0x1
0x949: V708 = ADD 0x1 V706
0x94b: S[{0x1, 0x3}] = V708
0x94d: V709 = ISZERO S2
0x94e: V710 = 0x970
0x951: JUMPI 0x970 V709
---
Entry stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, V690, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, V690, S0]

================================

Block 0x952
[0x952:0x954]
---
Predecessors: [0x943]
Successors: [0x955]
---
0x952 SWAP2
0x953 DUP3
0x954 ADD
---
0x954: V711 = ADD S0 S2
---
Entry stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, V690, S0]
Stack pops: 3
Stack additions: [S0, S1, V711]
Exit stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S0, V690, V711]

================================

Block 0x955
[0x955:0x95d]
---
Predecessors: [0x952, 0x95e]
Successors: [0x95e, 0x970]
---
0x955 JUMPDEST
0x956 DUP3
0x957 DUP2
0x958 GT
0x959 ISZERO
0x95a PUSH2 0x970
0x95d JUMPI
---
0x955: JUMPDEST 
0x958: V712 = GT V711 S2
0x959: V713 = ISZERO V712
0x95a: V714 = 0x970
0x95d: JUMPI 0x970 V713
---
Entry stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, S1, V711]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, S1, V711]

================================

Block 0x95e
[0x95e:0x96f]
---
Predecessors: [0x955]
Successors: [0x955]
---
0x95e DUP3
0x95f MLOAD
0x960 DUP3
0x961 SSTORE
0x962 SWAP2
0x963 PUSH1 0x20
0x965 ADD
0x966 SWAP2
0x967 SWAP1
0x968 PUSH1 0x1
0x96a ADD
0x96b SWAP1
0x96c PUSH2 0x955
0x96f JUMP
---
0x95f: V715 = M[S2]
0x961: S[S1] = V715
0x963: V716 = 0x20
0x965: V717 = ADD 0x20 S2
0x968: V718 = 0x1
0x96a: V719 = ADD 0x1 S1
0x96c: V720 = 0x955
0x96f: JUMP 0x955
---
Entry stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, S1, V711]
Stack pops: 3
Stack additions: [V717, V719, S0]
Exit stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, V717, V719, V711]

================================

Block 0x970
[0x970:0x97b]
---
Predecessors: [0x933, 0x943, 0x955]
Successors: [0x980]
---
0x970 JUMPDEST
0x971 POP
0x972 PUSH2 0x97c
0x975 SWAP3
0x976 SWAP2
0x977 POP
0x978 PUSH2 0x980
0x97b JUMP
---
0x970: JUMPDEST 
0x972: V721 = 0x97c
0x978: V722 = 0x980
0x97b: JUMP 0x980
---
Entry stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, V695, S2, S1, S0]
Stack pops: 4
Stack additions: [0x97c, S3, S1]
Exit stack: [V11, 0x47c, V324, S12, S11, S10, S9, S8, S7, S6, {0x8a2, 0x8b6}, {0x1, 0x3}, 0x97c, V695, S1]

================================

Block 0x97c
[0x97c:0x97f]
---
Predecessors: [0x986, 0x99a]
Successors: [0x8a2, 0x8b6, 0x99a]
---
0x97c JUMPDEST
0x97d POP
0x97e SWAP1
0x97f JUMP
---
0x97c: JUMPDEST 
0x97f: JUMP S2
---
Entry stack: [V11, 0x47c, V324, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x47c, V324, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x980
[0x980:0x985]
---
Predecessors: [0x970]
Successors: [0x986]
---
0x980 JUMPDEST
0x981 PUSH2 0x99a
0x984 SWAP2
0x985 SWAP1
---
0x980: JUMPDEST 
0x981: V723 = 0x99a
---
Entry stack: [V11, 0x47c, V324, S11, S10, S9, S8, S7, S6, S5, {0x8a2, 0x8b6}, {0x1, 0x3}, 0x97c, V695, S0]
Stack pops: 2
Stack additions: [0x99a, S1, S0]
Exit stack: [V11, 0x47c, V324, S11, S10, S9, S8, S7, S6, S5, {0x8a2, 0x8b6}, {0x1, 0x3}, 0x97c, 0x99a, V695, S0]

================================

Block 0x986
[0x986:0x98e]
---
Predecessors: [0x980, 0x98f]
Successors: [0x97c, 0x98f]
---
0x986 JUMPDEST
0x987 DUP1
0x988 DUP3
0x989 GT
0x98a ISZERO
0x98b PUSH2 0x97c
0x98e JUMPI
---
0x986: JUMPDEST 
0x989: V724 = GT V695 S0
0x98a: V725 = ISZERO V724
0x98b: V726 = 0x97c
0x98e: JUMPI 0x97c V725
---
Entry stack: [V11, 0x47c, V324, V342, V356, V359, V364, {0x8a2, 0x8b6}, {0x1, 0x3}, 0x97c, 0x99a, V695, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x47c, V324, V342, V356, V359, V364, {0x8a2, 0x8b6}, {0x1, 0x3}, 0x97c, 0x99a, V695, S0]

================================

Block 0x98f
[0x98f:0x999]
---
Predecessors: [0x986]
Successors: [0x986]
---
0x98f PUSH1 0x0
0x991 DUP2
0x992 SSTORE
0x993 PUSH1 0x1
0x995 ADD
0x996 PUSH2 0x986
0x999 JUMP
---
0x98f: V727 = 0x0
0x992: S[S0] = 0x0
0x993: V728 = 0x1
0x995: V729 = ADD 0x1 S0
0x996: V730 = 0x986
0x999: JUMP 0x986
---
Entry stack: [V11, 0x47c, V324, V342, V356, V359, V364, {0x8a2, 0x8b6}, {0x1, 0x3}, 0x97c, 0x99a, V695, S0]
Stack pops: 1
Stack additions: [V729]
Exit stack: [V11, 0x47c, V324, V342, V356, V359, V364, {0x8a2, 0x8b6}, {0x1, 0x3}, 0x97c, 0x99a, V695, V729]

================================

Block 0x99a
[0x99a:0x99c]
---
Predecessors: [0x97c]
Successors: [0x97c]
---
0x99a JUMPDEST
0x99b SWAP1
0x99c JUMP
---
0x99a: JUMPDEST 
0x99c: JUMP S1
---
Entry stack: [V11, 0x47c, V324, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x47c, V324, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x99d
[0x99d:0x9cc]
---
Predecessors: []
Successors: []
---
0x99d STOP
0x99e LOG1
0x99f PUSH6 0x627a7a723058
0x9a6 SHA3
0x9a7 MISSING 0xd8
0x9a8 COINBASE
0x9a9 MSTORE
0x9aa MISSING 0x24
0x9ab NOT
0x9ac PUSH32 0xf275c3d910a3a6e16403539cd23e10190638336e10a92bbff3b60029
---
0x99d: STOP 
0x99e: LOG S0 S1 S2
0x99f: V731 = 0x627a7a723058
0x9a6: V732 = SHA3 0x627a7a723058 S3
0x9a7: MISSING 0xd8
0x9a8: V733 = COINBASE
0x9a9: M[V733] = S0
0x9aa: MISSING 0x24
0x9ab: V734 = NOT S0
0x9ac: V735 = 0xf275c3d910a3a6e16403539cd23e10190638336e10a92bbff3b60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V732, 0xf275c3d910a3a6e16403539cd23e10190638336e10a92bbff3b60029, V734]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x177
Exit block: 0x1f3
Body: 0x177, 0x17f, 0x183, 0x18c, 0x1ae, 0x1b7, 0x1c6, 0x1da, 0x1f3, 0x47e, 0x4bd, 0x4c5, 0x4d8, 0x4e6, 0x4fa, 0x503

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x201
Exit block: 0x225
Body: 0x201, 0x209, 0x20d, 0x225, 0x50b

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x239
Exit block: 0x24e
Body: 0x239, 0x241, 0x245, 0x24e, 0x513

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x260
Exit block: 0x225
Body: 0x225, 0x260, 0x268, 0x26c, 0x519

Function 4:
Public function signature: 0x313ce567
Entry block: 0x28a
Exit block: 0x29f
Body: 0x28a, 0x292, 0x296, 0x29f, 0x5e1

Function 5:
Public function signature: 0x4a5da9cd
Entry block: 0x2b5
Exit block: 0x225
Body: 0x225, 0x2b5, 0x2bd, 0x2c1, 0x5ea

Function 6:
Public function signature: 0x57376198
Entry block: 0x2ca
Exit block: 0x225
Body: 0x225, 0x2ca, 0x2d2, 0x2d6, 0x60b, 0x676, 0x67a, 0x685, 0x68e, 0x6a0, 0x6a4

Function 7:
Public function signature: 0x70a08231
Entry block: 0x2ee
Exit block: 0x24e
Body: 0x24e, 0x2ee, 0x2f6, 0x2fa, 0x6ad, 0x6d4, 0x6f3, 0x715, 0x71e, 0x722

Function 8:
Public function signature: 0x7ecfb675
Entry block: 0x30f
Exit block: 0x24e
Body: 0x24e, 0x30f, 0x317, 0x31b, 0x727

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x324
Exit block: 0x339
Body: 0x324, 0x32c, 0x330, 0x339, 0x72d

Function 10:
Public function signature: 0x95d89b41
Entry block: 0x355
Exit block: 0x1f3
Body: 0x18c, 0x1ae, 0x1b7, 0x1c6, 0x1da, 0x1f3, 0x355, 0x35d, 0x361, 0x4d8, 0x4e6, 0x4fa, 0x503, 0x73c, 0x77c, 0x784

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x36a
Exit block: 0x225
Body: 0x225, 0x36a, 0x372, 0x376, 0x797

Function 12:
Public function signature: 0xd8cb4aa3
Entry block: 0x38e
Exit block: 0x24e
Body: 0x24e, 0x38e, 0x396, 0x39a, 0x85e

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x3af
Exit block: 0x24e
Body: 0x24e, 0x3af, 0x3b7, 0x3bb, 0x870

Function 14:
Public function signature: 0xfdbb9fdb
Entry block: 0x3d6
Exit block: 0x47c
Body: 0x3d6, 0x3de, 0x3e2, 0x47c, 0x878, 0x88b, 0x88f, 0x8a2

Function 15:
Public fallback function
Entry block: 0xda
Exit block: 0x10b
Body: 0xda, 0x10b, 0x114

Function 16:
Private function
Entry block: 0x902
Exit block: 0x97c
Body: 0x902, 0x933, 0x943, 0x952, 0x955, 0x95e, 0x970, 0x97c, 0x980, 0x986, 0x98f, 0x99a

