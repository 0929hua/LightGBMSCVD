Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xac]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xac
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xac
0xa: JUMPI 0xac V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xbd]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2e1a7d4d
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xbd
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2e1a7d4d
0x39: V12 = EQ V10 0x2e1a7d4d
0x3a: V13 = 0xbd
0x3d: JUMPI 0xbd V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xe4]
---
0x3e DUP1
0x3f PUSH4 0x38d52e0f
0x44 EQ
0x45 PUSH2 0xe4
0x48 JUMPI
---
0x3f: V14 = 0x38d52e0f
0x44: V15 = EQ 0x38d52e0f V10
0x45: V16 = 0xe4
0x48: JUMPI 0xe4 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x110]
---
0x49 DUP1
0x4a PUSH4 0x4b750334
0x4f EQ
0x50 PUSH2 0x110
0x53 JUMPI
---
0x4a: V17 = 0x4b750334
0x4f: V18 = EQ 0x4b750334 V10
0x50: V19 = 0x110
0x53: JUMPI 0x110 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x132]
---
0x54 DUP1
0x55 PUSH4 0x4ca50f59
0x5a EQ
0x5b PUSH2 0x132
0x5e JUMPI
---
0x55: V20 = 0x4ca50f59
0x5a: V21 = EQ 0x4ca50f59 V10
0x5b: V22 = 0x132
0x5e: JUMPI 0x132 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x156]
---
0x5f DUP1
0x60 PUSH4 0x8d92fdf3
0x65 EQ
0x66 PUSH2 0x156
0x69 JUMPI
---
0x60: V23 = 0x8d92fdf3
0x65: V24 = EQ 0x8d92fdf3 V10
0x66: V25 = 0x156
0x69: JUMPI 0x156 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x17d]
---
0x6a DUP1
0x6b PUSH4 0x8da5cb5b
0x70 EQ
0x71 PUSH2 0x17d
0x74 JUMPI
---
0x6b: V26 = 0x8da5cb5b
0x70: V27 = EQ 0x8da5cb5b V10
0x71: V28 = 0x17d
0x74: JUMPI 0x17d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1a9]
---
0x75 DUP1
0x76 PUSH4 0x976a8435
0x7b EQ
0x7c PUSH2 0x1a9
0x7f JUMPI
---
0x76: V29 = 0x976a8435
0x7b: V30 = EQ 0x976a8435 V10
0x7c: V31 = 0x1a9
0x7f: JUMPI 0x1a9 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1cb]
---
0x80 DUP1
0x81 PUSH4 0x9e281a98
0x86 EQ
0x87 PUSH2 0x1cb
0x8a JUMPI
---
0x81: V32 = 0x9e281a98
0x86: V33 = EQ 0x9e281a98 V10
0x87: V34 = 0x1cb
0x8a: JUMPI 0x1cb V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x1fe]
---
0x8b DUP1
0x8c PUSH4 0xa6f2ae3a
0x91 EQ
0x92 PUSH2 0x1fe
0x95 JUMPI
---
0x8c: V35 = 0xa6f2ae3a
0x91: V36 = EQ 0xa6f2ae3a V10
0x92: V37 = 0x1fe
0x95: JUMPI 0x1fe V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x208]
---
0x96 DUP1
0x97 PUSH4 0xce5e84a3
0x9c EQ
0x9d PUSH2 0x208
0xa0 JUMPI
---
0x97: V38 = 0xce5e84a3
0x9c: V39 = EQ 0xce5e84a3 V10
0x9d: V40 = 0x208
0xa0: JUMPI 0x208 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x21f]
---
0xa1 DUP1
0xa2 PUSH4 0xf2fde38b
0xa7 EQ
0xa8 PUSH2 0x21f
0xab JUMPI
---
0xa2: V41 = 0xf2fde38b
0xa7: V42 = EQ 0xf2fde38b V10
0xa8: V43 = 0x21f
0xab: JUMPI 0x21f V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0x0, 0xa1]
Successors: [0xb0]
---
0xac JUMPDEST
0xad PUSH2 0xbb
---
0xac: JUMPDEST 
0xad: V44 = 0xbb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbb]
Exit stack: [V10, 0xbb]

================================

Block 0xb0
[0xb0:0xb7]
---
Predecessors: [0xac]
Successors: [0x23d]
---
0xb0 JUMPDEST
0xb1 PUSH2 0xb8
0xb4 PUSH2 0x23d
0xb7 JUMP
---
0xb0: JUMPDEST 
0xb1: V45 = 0xb8
0xb4: V46 = 0x23d
0xb7: JUMP 0x23d
---
Entry stack: [V10, 0xbb]
Stack pops: 0
Stack additions: [0xb8]
Exit stack: [V10, 0xbb, 0xb8]

================================

Block 0xb8
[0xb8:0xb8]
---
Predecessors: [0x479]
Successors: [0xb9]
---
0xb8 JUMPDEST
---
0xb8: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0xb8]
Successors: [0xbb]
---
0xb9 JUMPDEST
0xba JUMP
---
0xb9: JUMPDEST 
0xba: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xbb
[0xbb:0xbc]
---
Predecessors: [0xb9, 0x479, 0x706, 0x74f]
Successors: []
---
0xbb JUMPDEST
0xbc STOP
---
0xbb: JUMPDEST 
0xbc: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xbd
[0xbd:0xc3]
---
Predecessors: [0xb]
Successors: [0xc4, 0xc5]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf ISZERO
0xc0 PUSH2 0xc5
0xc3 JUMPI
---
0xbd: JUMPDEST 
0xbe: V47 = CALLVALUE
0xbf: V48 = ISZERO V47
0xc0: V49 = 0xc5
0xc3: JUMPI 0xc5 V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xc4]
---
Predecessors: [0xbd]
Successors: []
---
0xc4 INVALID
---
0xc4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xbd]
Successors: [0x47e]
---
0xc5 JUMPDEST
0xc6 PUSH2 0xd0
0xc9 PUSH1 0x4
0xcb CALLDATALOAD
0xcc PUSH2 0x47e
0xcf JUMP
---
0xc5: JUMPDEST 
0xc6: V50 = 0xd0
0xc9: V51 = 0x4
0xcb: V52 = CALLDATALOAD 0x4
0xcc: V53 = 0x47e
0xcf: JUMP 0x47e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd0, V52]
Exit stack: [V10, 0xd0, V52]

================================

Block 0xd0
[0xd0:0xe3]
---
Predecessors: [0x507, 0x521, 0x5d6, 0x699]
Successors: []
---
0xd0 JUMPDEST
0xd1 PUSH1 0x40
0xd3 DUP1
0xd4 MLOAD
0xd5 SWAP2
0xd6 ISZERO
0xd7 ISZERO
0xd8 DUP3
0xd9 MSTORE
0xda MLOAD
0xdb SWAP1
0xdc DUP2
0xdd SWAP1
0xde SUB
0xdf PUSH1 0x20
0xe1 ADD
0xe2 SWAP1
0xe3 RETURN
---
0xd0: JUMPDEST 
0xd1: V54 = 0x40
0xd4: V55 = M[0x40]
0xd6: V56 = ISZERO S0
0xd7: V57 = ISZERO V56
0xd9: M[V55] = V57
0xda: V58 = M[0x40]
0xde: V59 = SUB V55 V58
0xdf: V60 = 0x20
0xe1: V61 = ADD 0x20 V59
0xe3: RETURN V58 V61
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xe4
[0xe4:0xea]
---
Predecessors: [0x3e]
Successors: [0xeb, 0xec]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 ISZERO
0xe7 PUSH2 0xec
0xea JUMPI
---
0xe4: JUMPDEST 
0xe5: V62 = CALLVALUE
0xe6: V63 = ISZERO V62
0xe7: V64 = 0xec
0xea: JUMPI 0xec V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xeb
[0xeb:0xeb]
---
Predecessors: [0xe4]
Successors: []
---
0xeb INVALID
---
0xeb: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0xe4]
Successors: [0x50c]
---
0xec JUMPDEST
0xed PUSH2 0xf4
0xf0 PUSH2 0x50c
0xf3 JUMP
---
0xec: JUMPDEST 
0xed: V65 = 0xf4
0xf0: V66 = 0x50c
0xf3: JUMP 0x50c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf4]
Exit stack: [V10, 0xf4]

================================

Block 0xf4
[0xf4:0x10f]
---
Predecessors: [0x50c, 0x5db]
Successors: []
---
0xf4 JUMPDEST
0xf5 PUSH1 0x40
0xf7 DUP1
0xf8 MLOAD
0xf9 PUSH1 0x1
0xfb PUSH1 0xa0
0xfd PUSH1 0x2
0xff EXP
0x100 SUB
0x101 SWAP1
0x102 SWAP3
0x103 AND
0x104 DUP3
0x105 MSTORE
0x106 MLOAD
0x107 SWAP1
0x108 DUP2
0x109 SWAP1
0x10a SUB
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f RETURN
---
0xf4: JUMPDEST 
0xf5: V67 = 0x40
0xf8: V68 = M[0x40]
0xf9: V69 = 0x1
0xfb: V70 = 0xa0
0xfd: V71 = 0x2
0xff: V72 = EXP 0x2 0xa0
0x100: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0x103: V74 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x105: M[V68] = V74
0x106: V75 = M[0x40]
0x10a: V76 = SUB V68 V75
0x10b: V77 = 0x20
0x10d: V78 = ADD 0x20 V76
0x10f: RETURN V75 V78
---
Entry stack: [V10, 0xf4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf4]

================================

Block 0x110
[0x110:0x116]
---
Predecessors: [0x49]
Successors: [0x117, 0x118]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 ISZERO
0x113 PUSH2 0x118
0x116 JUMPI
---
0x110: JUMPDEST 
0x111: V79 = CALLVALUE
0x112: V80 = ISZERO V79
0x113: V81 = 0x118
0x116: JUMPI 0x118 V80
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x117
[0x117:0x117]
---
Predecessors: [0x110]
Successors: []
---
0x117 INVALID
---
0x117: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x118
[0x118:0x11f]
---
Predecessors: [0x110]
Successors: [0x51b]
---
0x118 JUMPDEST
0x119 PUSH2 0x120
0x11c PUSH2 0x51b
0x11f JUMP
---
0x118: JUMPDEST 
0x119: V82 = 0x120
0x11c: V83 = 0x51b
0x11f: JUMP 0x51b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x120]
Exit stack: [V10, 0x120]

================================

Block 0x120
[0x120:0x131]
---
Predecessors: [0x51b, 0x5ea]
Successors: []
---
0x120 JUMPDEST
0x121 PUSH1 0x40
0x123 DUP1
0x124 MLOAD
0x125 SWAP2
0x126 DUP3
0x127 MSTORE
0x128 MLOAD
0x129 SWAP1
0x12a DUP2
0x12b SWAP1
0x12c SUB
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP1
0x131 RETURN
---
0x120: JUMPDEST 
0x121: V84 = 0x40
0x124: V85 = M[0x40]
0x127: M[V85] = S0
0x128: V86 = M[0x40]
0x12c: V87 = SUB V85 V86
0x12d: V88 = 0x20
0x12f: V89 = ADD 0x20 V87
0x131: RETURN V86 V89
---
Entry stack: [V10, 0x120, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x120]

================================

Block 0x132
[0x132:0x138]
---
Predecessors: [0x54]
Successors: [0x139, 0x13a]
---
0x132 JUMPDEST
0x133 CALLVALUE
0x134 ISZERO
0x135 PUSH2 0x13a
0x138 JUMPI
---
0x132: JUMPDEST 
0x133: V90 = CALLVALUE
0x134: V91 = ISZERO V90
0x135: V92 = 0x13a
0x138: JUMPI 0x13a V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x139
[0x139:0x139]
---
Predecessors: [0x132]
Successors: []
---
0x139 INVALID
---
0x139: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13a
[0x13a:0x141]
---
Predecessors: [0x132]
Successors: [0x521]
---
0x13a JUMPDEST
0x13b PUSH2 0xd0
0x13e PUSH2 0x521
0x141 JUMP
---
0x13a: JUMPDEST 
0x13b: V93 = 0xd0
0x13e: V94 = 0x521
0x141: JUMP 0x521
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V10, 0xd0]

================================

Block 0x142
[0x142:0x155]
---
Predecessors: []
Successors: []
---
0x142 JUMPDEST
0x143 PUSH1 0x40
0x145 DUP1
0x146 MLOAD
0x147 SWAP2
0x148 ISZERO
0x149 ISZERO
0x14a DUP3
0x14b MSTORE
0x14c MLOAD
0x14d SWAP1
0x14e DUP2
0x14f SWAP1
0x150 SUB
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP1
0x155 RETURN
---
0x142: JUMPDEST 
0x143: V95 = 0x40
0x146: V96 = M[0x40]
0x148: V97 = ISZERO S0
0x149: V98 = ISZERO V97
0x14b: M[V96] = V98
0x14c: V99 = M[0x40]
0x150: V100 = SUB V96 V99
0x151: V101 = 0x20
0x153: V102 = ADD 0x20 V100
0x155: RETURN V99 V102
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x156
[0x156:0x15c]
---
Predecessors: [0x5f]
Successors: [0x15d, 0x15e]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 ISZERO
0x159 PUSH2 0x15e
0x15c JUMPI
---
0x156: JUMPDEST 
0x157: V103 = CALLVALUE
0x158: V104 = ISZERO V103
0x159: V105 = 0x15e
0x15c: JUMPI 0x15e V104
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15d
[0x15d:0x15d]
---
Predecessors: [0x156]
Successors: []
---
0x15d INVALID
---
0x15d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15e
[0x15e:0x168]
---
Predecessors: [0x156]
Successors: [0x52a]
---
0x15e JUMPDEST
0x15f PUSH2 0xd0
0x162 PUSH1 0x4
0x164 CALLDATALOAD
0x165 PUSH2 0x52a
0x168 JUMP
---
0x15e: JUMPDEST 
0x15f: V106 = 0xd0
0x162: V107 = 0x4
0x164: V108 = CALLDATALOAD 0x4
0x165: V109 = 0x52a
0x168: JUMP 0x52a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd0, V108]
Exit stack: [V10, 0xd0, V108]

================================

Block 0x169
[0x169:0x17c]
---
Predecessors: []
Successors: []
---
0x169 JUMPDEST
0x16a PUSH1 0x40
0x16c DUP1
0x16d MLOAD
0x16e SWAP2
0x16f ISZERO
0x170 ISZERO
0x171 DUP3
0x172 MSTORE
0x173 MLOAD
0x174 SWAP1
0x175 DUP2
0x176 SWAP1
0x177 SUB
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP1
0x17c RETURN
---
0x169: JUMPDEST 
0x16a: V110 = 0x40
0x16d: V111 = M[0x40]
0x16f: V112 = ISZERO S0
0x170: V113 = ISZERO V112
0x172: M[V111] = V113
0x173: V114 = M[0x40]
0x177: V115 = SUB V111 V114
0x178: V116 = 0x20
0x17a: V117 = ADD 0x20 V115
0x17c: RETURN V114 V117
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x17d
[0x17d:0x183]
---
Predecessors: [0x6a]
Successors: [0x184, 0x185]
---
0x17d JUMPDEST
0x17e CALLVALUE
0x17f ISZERO
0x180 PUSH2 0x185
0x183 JUMPI
---
0x17d: JUMPDEST 
0x17e: V118 = CALLVALUE
0x17f: V119 = ISZERO V118
0x180: V120 = 0x185
0x183: JUMPI 0x185 V119
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x184
[0x184:0x184]
---
Predecessors: [0x17d]
Successors: []
---
0x184 INVALID
---
0x184: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x185
[0x185:0x18c]
---
Predecessors: [0x17d]
Successors: [0x5db]
---
0x185 JUMPDEST
0x186 PUSH2 0xf4
0x189 PUSH2 0x5db
0x18c JUMP
---
0x185: JUMPDEST 
0x186: V121 = 0xf4
0x189: V122 = 0x5db
0x18c: JUMP 0x5db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf4]
Exit stack: [V10, 0xf4]

================================

Block 0x18d
[0x18d:0x1a8]
---
Predecessors: []
Successors: []
---
0x18d JUMPDEST
0x18e PUSH1 0x40
0x190 DUP1
0x191 MLOAD
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a SWAP1
0x19b SWAP3
0x19c AND
0x19d DUP3
0x19e MSTORE
0x19f MLOAD
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 SWAP1
0x1a3 SUB
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 SWAP1
0x1a8 RETURN
---
0x18d: JUMPDEST 
0x18e: V123 = 0x40
0x191: V124 = M[0x40]
0x192: V125 = 0x1
0x194: V126 = 0xa0
0x196: V127 = 0x2
0x198: V128 = EXP 0x2 0xa0
0x199: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19c: V130 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x19e: M[V124] = V130
0x19f: V131 = M[0x40]
0x1a3: V132 = SUB V124 V131
0x1a4: V133 = 0x20
0x1a6: V134 = ADD 0x20 V132
0x1a8: RETURN V131 V134
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a9
[0x1a9:0x1af]
---
Predecessors: [0x75]
Successors: [0x1b0, 0x1b1]
---
0x1a9 JUMPDEST
0x1aa CALLVALUE
0x1ab ISZERO
0x1ac PUSH2 0x1b1
0x1af JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V135 = CALLVALUE
0x1ab: V136 = ISZERO V135
0x1ac: V137 = 0x1b1
0x1af: JUMPI 0x1b1 V136
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b0
[0x1b0:0x1b0]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b0 INVALID
---
0x1b0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b1
[0x1b1:0x1b8]
---
Predecessors: [0x1a9]
Successors: [0x5ea]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x120
0x1b5 PUSH2 0x5ea
0x1b8 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V138 = 0x120
0x1b5: V139 = 0x5ea
0x1b8: JUMP 0x5ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x120]
Exit stack: [V10, 0x120]

================================

Block 0x1b9
[0x1b9:0x1ca]
---
Predecessors: []
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc DUP1
0x1bd MLOAD
0x1be SWAP2
0x1bf DUP3
0x1c0 MSTORE
0x1c1 MLOAD
0x1c2 SWAP1
0x1c3 DUP2
0x1c4 SWAP1
0x1c5 SUB
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 SWAP1
0x1ca RETURN
---
0x1b9: JUMPDEST 
0x1ba: V140 = 0x40
0x1bd: V141 = M[0x40]
0x1c0: M[V141] = S0
0x1c1: V142 = M[0x40]
0x1c5: V143 = SUB V141 V142
0x1c6: V144 = 0x20
0x1c8: V145 = ADD 0x20 V143
0x1ca: RETURN V142 V145
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x80]
Successors: [0x1d2, 0x1d3]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d3
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V146 = CALLVALUE
0x1cd: V147 = ISZERO V146
0x1ce: V148 = 0x1d3
0x1d1: JUMPI 0x1d3 V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d2
[0x1d2:0x1d2]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 INVALID
---
0x1d2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d3
[0x1d3:0x1e9]
---
Predecessors: [0x1cb]
Successors: [0x5f0]
---
0x1d3 JUMPDEST
0x1d4 PUSH2 0xd0
0x1d7 PUSH1 0x1
0x1d9 PUSH1 0xa0
0x1db PUSH1 0x2
0x1dd EXP
0x1de SUB
0x1df PUSH1 0x4
0x1e1 CALLDATALOAD
0x1e2 AND
0x1e3 PUSH1 0x24
0x1e5 CALLDATALOAD
0x1e6 PUSH2 0x5f0
0x1e9 JUMP
---
0x1d3: JUMPDEST 
0x1d4: V149 = 0xd0
0x1d7: V150 = 0x1
0x1d9: V151 = 0xa0
0x1db: V152 = 0x2
0x1dd: V153 = EXP 0x2 0xa0
0x1de: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1df: V155 = 0x4
0x1e1: V156 = CALLDATALOAD 0x4
0x1e2: V157 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V158 = 0x24
0x1e5: V159 = CALLDATALOAD 0x24
0x1e6: V160 = 0x5f0
0x1e9: JUMP 0x5f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd0, V157, V159]
Exit stack: [V10, 0xd0, V157, V159]

================================

Block 0x1ea
[0x1ea:0x1fd]
---
Predecessors: []
Successors: []
---
0x1ea JUMPDEST
0x1eb PUSH1 0x40
0x1ed DUP1
0x1ee MLOAD
0x1ef SWAP2
0x1f0 ISZERO
0x1f1 ISZERO
0x1f2 DUP3
0x1f3 MSTORE
0x1f4 MLOAD
0x1f5 SWAP1
0x1f6 DUP2
0x1f7 SWAP1
0x1f8 SUB
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP1
0x1fd RETURN
---
0x1ea: JUMPDEST 
0x1eb: V161 = 0x40
0x1ee: V162 = M[0x40]
0x1f0: V163 = ISZERO S0
0x1f1: V164 = ISZERO V163
0x1f3: M[V162] = V164
0x1f4: V165 = M[0x40]
0x1f8: V166 = SUB V162 V165
0x1f9: V167 = 0x20
0x1fb: V168 = ADD 0x20 V166
0x1fd: RETURN V165 V168
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fe
[0x1fe:0x205]
---
Predecessors: [0x8b]
Successors: [0x23d]
---
0x1fe JUMPDEST
0x1ff PUSH2 0xbb
0x202 PUSH2 0x23d
0x205 JUMP
---
0x1fe: JUMPDEST 
0x1ff: V169 = 0xbb
0x202: V170 = 0x23d
0x205: JUMP 0x23d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbb]
Exit stack: [V10, 0xbb]

================================

Block 0x206
[0x206:0x207]
---
Predecessors: []
Successors: []
---
0x206 JUMPDEST
0x207 STOP
---
0x206: JUMPDEST 
0x207: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0x96]
Successors: [0x20f, 0x210]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x210
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V171 = CALLVALUE
0x20a: V172 = ISZERO V171
0x20b: V173 = 0x210
0x20e: JUMPI 0x210 V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20f
[0x20f:0x20f]
---
Predecessors: [0x208]
Successors: []
---
0x20f INVALID
---
0x20f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x210
[0x210:0x21c]
---
Predecessors: [0x208]
Successors: [0x69f]
---
0x210 JUMPDEST
0x211 PUSH2 0xbb
0x214 PUSH1 0x4
0x216 CALLDATALOAD
0x217 ISZERO
0x218 ISZERO
0x219 PUSH2 0x69f
0x21c JUMP
---
0x210: JUMPDEST 
0x211: V174 = 0xbb
0x214: V175 = 0x4
0x216: V176 = CALLDATALOAD 0x4
0x217: V177 = ISZERO V176
0x218: V178 = ISZERO V177
0x219: V179 = 0x69f
0x21c: JUMP 0x69f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbb, V178]
Exit stack: [V10, 0xbb, V178]

================================

Block 0x21d
[0x21d:0x21e]
---
Predecessors: []
Successors: []
---
0x21d JUMPDEST
0x21e STOP
---
0x21d: JUMPDEST 
0x21e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21f
[0x21f:0x225]
---
Predecessors: [0xa1]
Successors: [0x226, 0x227]
---
0x21f JUMPDEST
0x220 CALLVALUE
0x221 ISZERO
0x222 PUSH2 0x227
0x225 JUMPI
---
0x21f: JUMPDEST 
0x220: V180 = CALLVALUE
0x221: V181 = ISZERO V180
0x222: V182 = 0x227
0x225: JUMPI 0x227 V181
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x226
[0x226:0x226]
---
Predecessors: [0x21f]
Successors: []
---
0x226 INVALID
---
0x226: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x227
[0x227:0x23a]
---
Predecessors: [0x21f]
Successors: [0x709]
---
0x227 JUMPDEST
0x228 PUSH2 0xbb
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 PUSH1 0x4
0x235 CALLDATALOAD
0x236 AND
0x237 PUSH2 0x709
0x23a JUMP
---
0x227: JUMPDEST 
0x228: V183 = 0xbb
0x22b: V184 = 0x1
0x22d: V185 = 0xa0
0x22f: V186 = 0x2
0x231: V187 = EXP 0x2 0xa0
0x232: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x233: V189 = 0x4
0x235: V190 = CALLDATALOAD 0x4
0x236: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x237: V192 = 0x709
0x23a: JUMP 0x709
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbb, V191]
Exit stack: [V10, 0xbb, V191]

================================

Block 0x23b
[0x23b:0x23c]
---
Predecessors: []
Successors: []
---
0x23b JUMPDEST
0x23c STOP
---
0x23b: JUMPDEST 
0x23c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23d
[0x23d:0x24f]
---
Predecessors: [0xb0, 0x1fe]
Successors: [0x250, 0x263]
---
0x23d JUMPDEST
0x23e PUSH1 0x4
0x240 SLOAD
0x241 PUSH1 0x0
0x243 SWAP1
0x244 DUP2
0x245 SWAP1
0x246 DUP2
0x247 SWAP1
0x248 PUSH1 0xff
0x24a AND
0x24b DUP1
0x24c PUSH2 0x263
0x24f JUMPI
---
0x23d: JUMPDEST 
0x23e: V193 = 0x4
0x240: V194 = S[0x4]
0x241: V195 = 0x0
0x248: V196 = 0xff
0x24a: V197 = AND 0xff V194
0x24c: V198 = 0x263
0x24f: JUMPI 0x263 V197
---
Entry stack: [V10, S1, {0xb8, 0xbb}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V197]
Exit stack: [V10, S1, {0xb8, 0xbb}, 0x0, 0x0, 0x0, V197]

================================

Block 0x250
[0x250:0x262]
---
Predecessors: [0x23d]
Successors: [0x263]
---
0x250 POP
0x251 PUSH1 0x0
0x253 SLOAD
0x254 CALLER
0x255 PUSH1 0x1
0x257 PUSH1 0xa0
0x259 PUSH1 0x2
0x25b EXP
0x25c SUB
0x25d SWAP1
0x25e DUP2
0x25f AND
0x260 SWAP2
0x261 AND
0x262 EQ
---
0x251: V199 = 0x0
0x253: V200 = S[0x0]
0x254: V201 = CALLER
0x255: V202 = 0x1
0x257: V203 = 0xa0
0x259: V204 = 0x2
0x25b: V205 = EXP 0x2 0xa0
0x25c: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x261: V208 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x262: V209 = EQ V208 V207
---
Entry stack: [V10, S5, {0xb8, 0xbb}, 0x0, 0x0, 0x0, V197]
Stack pops: 1
Stack additions: [V209]
Exit stack: [V10, S5, {0xb8, 0xbb}, 0x0, 0x0, 0x0, V209]

================================

Block 0x263
[0x263:0x268]
---
Predecessors: [0x23d, 0x250]
Successors: [0x269, 0x447]
---
0x263 JUMPDEST
0x264 ISZERO
0x265 PUSH2 0x447
0x268 JUMPI
---
0x263: JUMPDEST 
0x264: V210 = ISZERO S0
0x265: V211 = 0x447
0x268: JUMPI 0x447 V210
---
Entry stack: [V10, S5, {0xb8, 0xbb}, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S5, {0xb8, 0xbb}, 0x0, 0x0, 0x0]

================================

Block 0x269
[0x269:0x273]
---
Predecessors: [0x263]
Successors: [0x274, 0x275]
---
0x269 PUSH1 0x2
0x26b SLOAD
0x26c CALLVALUE
0x26d DUP2
0x26e ISZERO
0x26f ISZERO
0x270 PUSH2 0x275
0x273 JUMPI
---
0x269: V212 = 0x2
0x26b: V213 = S[0x2]
0x26c: V214 = CALLVALUE
0x26e: V215 = ISZERO V213
0x26f: V216 = ISZERO V215
0x270: V217 = 0x275
0x273: JUMPI 0x275 V216
---
Entry stack: [V10, S4, {0xb8, 0xbb}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V213, V214]
Exit stack: [V10, S4, {0xb8, 0xbb}, 0x0, 0x0, 0x0, V213, V214]

================================

Block 0x274
[0x274:0x274]
---
Predecessors: [0x269]
Successors: []
---
0x274 INVALID
---
0x274: INVALID 
---
Entry stack: [V10, S6, {0xb8, 0xbb}, 0x0, 0x0, 0x0, V213, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, {0xb8, 0xbb}, 0x0, 0x0, 0x0, V213, V214]

================================

Block 0x275
[0x275:0x307]
---
Predecessors: [0x269]
Successors: [0x308, 0x309]
---
0x275 JUMPDEST
0x276 DIV
0x277 SWAP3
0x278 POP
0x279 PUSH1 0x3
0x27b SLOAD
0x27c PUSH1 0x1
0x27e PUSH1 0x0
0x280 SWAP1
0x281 SLOAD
0x282 SWAP1
0x283 PUSH2 0x100
0x286 EXP
0x287 SWAP1
0x288 DIV
0x289 PUSH1 0x1
0x28b PUSH1 0xa0
0x28d PUSH1 0x2
0x28f EXP
0x290 SUB
0x291 AND
0x292 PUSH1 0x1
0x294 PUSH1 0xa0
0x296 PUSH1 0x2
0x298 EXP
0x299 SUB
0x29a AND
0x29b PUSH4 0x70a08231
0x2a0 ADDRESS
0x2a1 PUSH1 0x0
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 MSTORE
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP3
0x2ae PUSH4 0xffffffff
0x2b3 AND
0x2b4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d2 MUL
0x2d3 DUP2
0x2d4 MSTORE
0x2d5 PUSH1 0x4
0x2d7 ADD
0x2d8 DUP1
0x2d9 DUP3
0x2da PUSH1 0x1
0x2dc PUSH1 0xa0
0x2de PUSH1 0x2
0x2e0 EXP
0x2e1 SUB
0x2e2 AND
0x2e3 PUSH1 0x1
0x2e5 PUSH1 0xa0
0x2e7 PUSH1 0x2
0x2e9 EXP
0x2ea SUB
0x2eb AND
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 ADD
0x2f1 SWAP2
0x2f2 POP
0x2f3 POP
0x2f4 PUSH1 0x20
0x2f6 PUSH1 0x40
0x2f8 MLOAD
0x2f9 DUP1
0x2fa DUP4
0x2fb SUB
0x2fc DUP2
0x2fd PUSH1 0x0
0x2ff DUP8
0x300 DUP1
0x301 EXTCODESIZE
0x302 ISZERO
0x303 ISZERO
0x304 PUSH2 0x309
0x307 JUMPI
---
0x275: JUMPDEST 
0x276: V218 = DIV V214 V213
0x279: V219 = 0x3
0x27b: V220 = S[0x3]
0x27c: V221 = 0x1
0x27e: V222 = 0x0
0x281: V223 = S[0x1]
0x283: V224 = 0x100
0x286: V225 = EXP 0x100 0x0
0x288: V226 = DIV V223 0x1
0x289: V227 = 0x1
0x28b: V228 = 0xa0
0x28d: V229 = 0x2
0x28f: V230 = EXP 0x2 0xa0
0x290: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x292: V233 = 0x1
0x294: V234 = 0xa0
0x296: V235 = 0x2
0x298: V236 = EXP 0x2 0xa0
0x299: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x29b: V239 = 0x70a08231
0x2a0: V240 = ADDRESS
0x2a1: V241 = 0x0
0x2a3: V242 = 0x40
0x2a5: V243 = M[0x40]
0x2a6: V244 = 0x20
0x2a8: V245 = ADD 0x20 V243
0x2a9: M[V245] = 0x0
0x2aa: V246 = 0x40
0x2ac: V247 = M[0x40]
0x2ae: V248 = 0xffffffff
0x2b3: V249 = AND 0xffffffff 0x70a08231
0x2b4: V250 = 0x100000000000000000000000000000000000000000000000000000000
0x2d2: V251 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x2d4: M[V247] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2d5: V252 = 0x4
0x2d7: V253 = ADD 0x4 V247
0x2da: V254 = 0x1
0x2dc: V255 = 0xa0
0x2de: V256 = 0x2
0x2e0: V257 = EXP 0x2 0xa0
0x2e1: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e2: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2e3: V260 = 0x1
0x2e5: V261 = 0xa0
0x2e7: V262 = 0x2
0x2e9: V263 = EXP 0x2 0xa0
0x2ea: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2ed: M[V253] = V265
0x2ee: V266 = 0x20
0x2f0: V267 = ADD 0x20 V253
0x2f4: V268 = 0x20
0x2f6: V269 = 0x40
0x2f8: V270 = M[0x40]
0x2fb: V271 = SUB V267 V270
0x2fd: V272 = 0x0
0x301: V273 = EXTCODESIZE V238
0x302: V274 = ISZERO V273
0x303: V275 = ISZERO V274
0x304: V276 = 0x309
0x307: JUMPI 0x309 V275
---
Entry stack: [V10, S6, {0xb8, 0xbb}, 0x0, 0x0, 0x0, V213, V214]
Stack pops: 5
Stack additions: [V218, S3, S2, V220, V238, 0x70a08231, V267, 0x20, V270, V271, V270, 0x0, V238]
Exit stack: [V10, S6, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V238, 0x70a08231, V267, 0x20, V270, V271, V270, 0x0, V238]

================================

Block 0x308
[0x308:0x308]
---
Predecessors: [0x275]
Successors: []
---
0x308 INVALID
---
0x308: INVALID 
---
Entry stack: [V10, S14, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V238, 0x70a08231, V267, 0x20, V270, V271, V270, 0x0, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V238, 0x70a08231, V267, 0x20, V270, V271, V270, 0x0, V238]

================================

Block 0x309
[0x309:0x315]
---
Predecessors: [0x275]
Successors: [0x316, 0x317]
---
0x309 JUMPDEST
0x30a PUSH2 0x2c6
0x30d GAS
0x30e SUB
0x30f CALL
0x310 ISZERO
0x311 ISZERO
0x312 PUSH2 0x317
0x315 JUMPI
---
0x309: JUMPDEST 
0x30a: V277 = 0x2c6
0x30d: V278 = GAS
0x30e: V279 = SUB V278 0x2c6
0x30f: V280 = CALL V279 V238 0x0 V270 V271 V270 0x20
0x310: V281 = ISZERO V280
0x311: V282 = ISZERO V281
0x312: V283 = 0x317
0x315: JUMPI 0x317 V282
---
Entry stack: [V10, S14, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V238, 0x70a08231, V267, 0x20, V270, V271, V270, 0x0, V238]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V238, 0x70a08231, V267]

================================

Block 0x316
[0x316:0x316]
---
Predecessors: [0x309]
Successors: []
---
0x316 INVALID
---
0x316: INVALID 
---
Entry stack: [V10, S8, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V238, 0x70a08231, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V238, 0x70a08231, V267]

================================

Block 0x317
[0x317:0x326]
---
Predecessors: [0x309]
Successors: [0x327, 0x328]
---
0x317 JUMPDEST
0x318 POP
0x319 POP
0x31a PUSH1 0x40
0x31c MLOAD
0x31d MLOAD
0x31e SWAP1
0x31f POP
0x320 DUP2
0x321 ISZERO
0x322 ISZERO
0x323 PUSH2 0x328
0x326 JUMPI
---
0x317: JUMPDEST 
0x31a: V284 = 0x40
0x31c: V285 = M[0x40]
0x31d: V286 = M[V285]
0x321: V287 = ISZERO V220
0x322: V288 = ISZERO V287
0x323: V289 = 0x328
0x326: JUMPI 0x328 V288
---
Entry stack: [V10, S8, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V238, 0x70a08231, V267]
Stack pops: 4
Stack additions: [S3, V286]
Exit stack: [V10, S8, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V286]

================================

Block 0x327
[0x327:0x327]
---
Predecessors: [0x317]
Successors: []
---
0x327 INVALID
---
0x327: INVALID 
---
Entry stack: [V10, S6, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V286]

================================

Block 0x328
[0x328:0x333]
---
Predecessors: [0x317]
Successors: [0x334, 0x373]
---
0x328 JUMPDEST
0x329 DIV
0x32a SWAP2
0x32b POP
0x32c DUP2
0x32d DUP4
0x32e GT
0x32f ISZERO
0x330 PUSH2 0x373
0x333 JUMPI
---
0x328: JUMPDEST 
0x329: V290 = DIV V286 V220
0x32e: V291 = GT V218 V290
0x32f: V292 = ISZERO V291
0x330: V293 = 0x373
0x333: JUMPI 0x373 V292
---
Entry stack: [V10, S6, {0xb8, 0xbb}, V218, 0x0, 0x0, V220, V286]
Stack pops: 5
Stack additions: [S4, V290, S2]
Exit stack: [V10, S6, {0xb8, 0xbb}, V218, V290, 0x0]

================================

Block 0x334
[0x334:0x36d]
---
Predecessors: [0x328]
Successors: [0x36e, 0x373]
---
0x334 POP
0x335 PUSH1 0x2
0x337 SLOAD
0x338 PUSH1 0x40
0x33a MLOAD
0x33b SWAP2
0x33c SWAP3
0x33d POP
0x33e DUP3
0x33f SWAP2
0x340 SWAP1
0x341 DUP3
0x342 MUL
0x343 CALLVALUE
0x344 SUB
0x345 SWAP1
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e CALLER
0x34f AND
0x350 SWAP1
0x351 DUP3
0x352 ISZERO
0x353 PUSH2 0x8fc
0x356 MUL
0x357 SWAP1
0x358 DUP4
0x359 SWAP1
0x35a PUSH1 0x0
0x35c DUP2
0x35d DUP2
0x35e DUP2
0x35f DUP6
0x360 DUP9
0x361 DUP9
0x362 CALL
0x363 SWAP4
0x364 POP
0x365 POP
0x366 POP
0x367 POP
0x368 ISZERO
0x369 ISZERO
0x36a PUSH2 0x373
0x36d JUMPI
---
0x335: V294 = 0x2
0x337: V295 = S[0x2]
0x338: V296 = 0x40
0x33a: V297 = M[0x40]
0x342: V298 = MUL V290 V295
0x343: V299 = CALLVALUE
0x344: V300 = SUB V299 V298
0x346: V301 = 0x1
0x348: V302 = 0xa0
0x34a: V303 = 0x2
0x34c: V304 = EXP 0x2 0xa0
0x34d: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34e: V306 = CALLER
0x34f: V307 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x352: V308 = ISZERO V300
0x353: V309 = 0x8fc
0x356: V310 = MUL 0x8fc V308
0x35a: V311 = 0x0
0x362: V312 = CALL V310 V307 V300 V297 0x0 V297 0x0
0x368: V313 = ISZERO V312
0x369: V314 = ISZERO V313
0x36a: V315 = 0x373
0x36d: JUMPI 0x373 V314
---
Entry stack: [V10, S4, {0xb8, 0xbb}, V218, V290, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V300]
Exit stack: [V10, S4, {0xb8, 0xbb}, V290, V290, V300]

================================

Block 0x36e
[0x36e:0x372]
---
Predecessors: [0x334]
Successors: []
---
0x36e PUSH1 0x0
0x370 PUSH1 0x0
0x372 REVERT
---
0x36e: V316 = 0x0
0x370: V317 = 0x0
0x372: REVERT 0x0 0x0
---
Entry stack: [V10, S4, {0xb8, 0xbb}, V290, V290, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, V290, V290, V300]

================================

Block 0x373
[0x373:0x373]
---
Predecessors: [0x328, 0x334]
Successors: [0x374]
---
0x373 JUMPDEST
---
0x373: JUMPDEST 
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]

================================

Block 0x374
[0x374:0x37d]
---
Predecessors: [0x373]
Successors: [0x37e, 0x418]
---
0x374 JUMPDEST
0x375 PUSH1 0x0
0x377 DUP4
0x378 GT
0x379 ISZERO
0x37a PUSH2 0x418
0x37d JUMPI
---
0x374: JUMPDEST 
0x375: V318 = 0x0
0x378: V319 = GT S2 0x0
0x379: V320 = ISZERO V319
0x37a: V321 = 0x418
0x37d: JUMPI 0x418 V320
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]

================================

Block 0x37e
[0x37e:0x3f4]
---
Predecessors: [0x374]
Successors: [0x3f5, 0x3f6]
---
0x37e PUSH1 0x1
0x380 SLOAD
0x381 PUSH1 0x3
0x383 SLOAD
0x384 PUSH1 0x40
0x386 DUP1
0x387 MLOAD
0x388 PUSH1 0x0
0x38a PUSH1 0x20
0x38c SWAP2
0x38d DUP3
0x38e ADD
0x38f DUP2
0x390 SWAP1
0x391 MSTORE
0x392 DUP3
0x393 MLOAD
0x394 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b5 DUP2
0x3b6 MSTORE
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be SUB
0x3bf CALLER
0x3c0 DUP2
0x3c1 AND
0x3c2 PUSH1 0x4
0x3c4 DUP4
0x3c5 ADD
0x3c6 MSTORE
0x3c7 SWAP5
0x3c8 DUP10
0x3c9 MUL
0x3ca PUSH1 0x24
0x3cc DUP3
0x3cd ADD
0x3ce MSTORE
0x3cf SWAP3
0x3d0 MLOAD
0x3d1 SWAP4
0x3d2 SWAP1
0x3d3 SWAP5
0x3d4 AND
0x3d5 SWAP4
0x3d6 PUSH4 0xa9059cbb
0x3db SWAP4
0x3dc PUSH1 0x44
0x3de DUP1
0x3df DUP6
0x3e0 ADD
0x3e1 SWAP5
0x3e2 SWAP2
0x3e3 SWAP3
0x3e4 SWAP2
0x3e5 DUP4
0x3e6 SWAP1
0x3e7 SUB
0x3e8 ADD
0x3e9 SWAP1
0x3ea DUP3
0x3eb SWAP1
0x3ec DUP8
0x3ed DUP1
0x3ee EXTCODESIZE
0x3ef ISZERO
0x3f0 ISZERO
0x3f1 PUSH2 0x3f6
0x3f4 JUMPI
---
0x37e: V322 = 0x1
0x380: V323 = S[0x1]
0x381: V324 = 0x3
0x383: V325 = S[0x3]
0x384: V326 = 0x40
0x387: V327 = M[0x40]
0x388: V328 = 0x0
0x38a: V329 = 0x20
0x38e: V330 = ADD 0x20 V327
0x391: M[V330] = 0x0
0x393: V331 = M[0x40]
0x394: V332 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b6: M[V331] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b7: V333 = 0x1
0x3b9: V334 = 0xa0
0x3bb: V335 = 0x2
0x3bd: V336 = EXP 0x2 0xa0
0x3be: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bf: V338 = CALLER
0x3c1: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x3c2: V340 = 0x4
0x3c5: V341 = ADD V331 0x4
0x3c6: M[V341] = V339
0x3c9: V342 = MUL S2 V325
0x3ca: V343 = 0x24
0x3cd: V344 = ADD V331 0x24
0x3ce: M[V344] = V342
0x3d0: V345 = M[0x40]
0x3d4: V346 = AND V323 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V347 = 0xa9059cbb
0x3dc: V348 = 0x44
0x3e0: V349 = ADD V331 0x44
0x3e7: V350 = SUB V331 V345
0x3e8: V351 = ADD V350 0x44
0x3ee: V352 = EXTCODESIZE V346
0x3ef: V353 = ISZERO V352
0x3f0: V354 = ISZERO V353
0x3f1: V355 = 0x3f6
0x3f4: JUMPI 0x3f6 V354
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Exit stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]

================================

Block 0x3f5
[0x3f5:0x3f5]
---
Predecessors: [0x37e]
Successors: []
---
0x3f5 INVALID
---
0x3f5: INVALID 
---
Entry stack: [V10, S13, {0xb8, 0xbb}, S11, V290, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S13, {0xb8, 0xbb}, S11, V290, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]

================================

Block 0x3f6
[0x3f6:0x402]
---
Predecessors: [0x37e]
Successors: [0x403, 0x404]
---
0x3f6 JUMPDEST
0x3f7 PUSH2 0x2c6
0x3fa GAS
0x3fb SUB
0x3fc CALL
0x3fd ISZERO
0x3fe ISZERO
0x3ff PUSH2 0x404
0x402 JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V356 = 0x2c6
0x3fa: V357 = GAS
0x3fb: V358 = SUB V357 0x2c6
0x3fc: V359 = CALL V358 V346 0x0 V345 V351 V345 0x20
0x3fd: V360 = ISZERO V359
0x3fe: V361 = ISZERO V360
0x3ff: V362 = 0x404
0x402: JUMPI 0x404 V361
---
Entry stack: [V10, S13, {0xb8, 0xbb}, S11, V290, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S13, {0xb8, 0xbb}, S11, V290, S9, V346, 0xa9059cbb, V349]

================================

Block 0x403
[0x403:0x403]
---
Predecessors: [0x3f6]
Successors: []
---
0x403 INVALID
---
0x403: INVALID 
---
Entry stack: [V10, S7, {0xb8, 0xbb}, S5, V290, S3, V346, 0xa9059cbb, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xb8, 0xbb}, S5, V290, S3, V346, 0xa9059cbb, V349]

================================

Block 0x404
[0x404:0x412]
---
Predecessors: [0x3f6]
Successors: [0x413, 0x418]
---
0x404 JUMPDEST
0x405 POP
0x406 POP
0x407 PUSH1 0x40
0x409 MLOAD
0x40a MLOAD
0x40b ISZERO
0x40c ISZERO
0x40d SWAP1
0x40e POP
0x40f PUSH2 0x418
0x412 JUMPI
---
0x404: JUMPDEST 
0x407: V363 = 0x40
0x409: V364 = M[0x40]
0x40a: V365 = M[V364]
0x40b: V366 = ISZERO V365
0x40c: V367 = ISZERO V366
0x40f: V368 = 0x418
0x412: JUMPI 0x418 V367
---
Entry stack: [V10, S7, {0xb8, 0xbb}, S5, V290, S3, V346, 0xa9059cbb, V349]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0xb8, 0xbb}, S5, V290, S3]

================================

Block 0x413
[0x413:0x417]
---
Predecessors: [0x404]
Successors: []
---
0x413 PUSH1 0x0
0x415 PUSH1 0x0
0x417 REVERT
---
0x413: V369 = 0x0
0x415: V370 = 0x0
0x417: REVERT 0x0 0x0
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]

================================

Block 0x418
[0x418:0x418]
---
Predecessors: [0x374, 0x404]
Successors: [0x419]
---
0x418 JUMPDEST
---
0x418: JUMPDEST 
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]

================================

Block 0x419
[0x419:0x446]
---
Predecessors: [0x418]
Successors: [0x477]
---
0x419 JUMPDEST
0x41a PUSH1 0x40
0x41c MLOAD
0x41d PUSH32 0x36ff37f436d9a671f4776bd73e3be89800c29518da3abc0618ef2b18c707481f
0x43e SWAP1
0x43f PUSH1 0x0
0x441 SWAP1
0x442 LOG1
0x443 PUSH2 0x477
0x446 JUMP
---
0x419: JUMPDEST 
0x41a: V371 = 0x40
0x41c: V372 = M[0x40]
0x41d: V373 = 0x36ff37f436d9a671f4776bd73e3be89800c29518da3abc0618ef2b18c707481f
0x43f: V374 = 0x0
0x442: LOG V372 0x0 0x36ff37f436d9a671f4776bd73e3be89800c29518da3abc0618ef2b18c707481f
0x443: V375 = 0x477
0x446: JUMP 0x477
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, S2, V290, S0]

================================

Block 0x447
[0x447:0x471]
---
Predecessors: [0x263]
Successors: [0x472, 0x477]
---
0x447 JUMPDEST
0x448 PUSH1 0x40
0x44a MLOAD
0x44b PUSH1 0x1
0x44d PUSH1 0xa0
0x44f PUSH1 0x2
0x451 EXP
0x452 SUB
0x453 CALLER
0x454 AND
0x455 SWAP1
0x456 CALLVALUE
0x457 DUP1
0x458 ISZERO
0x459 PUSH2 0x8fc
0x45c MUL
0x45d SWAP2
0x45e PUSH1 0x0
0x460 DUP2
0x461 DUP2
0x462 DUP2
0x463 DUP6
0x464 DUP9
0x465 DUP9
0x466 CALL
0x467 SWAP4
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c ISZERO
0x46d ISZERO
0x46e PUSH2 0x477
0x471 JUMPI
---
0x447: JUMPDEST 
0x448: V376 = 0x40
0x44a: V377 = M[0x40]
0x44b: V378 = 0x1
0x44d: V379 = 0xa0
0x44f: V380 = 0x2
0x451: V381 = EXP 0x2 0xa0
0x452: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x453: V383 = CALLER
0x454: V384 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0x456: V385 = CALLVALUE
0x458: V386 = ISZERO V385
0x459: V387 = 0x8fc
0x45c: V388 = MUL 0x8fc V386
0x45e: V389 = 0x0
0x466: V390 = CALL V388 V384 V385 V377 0x0 V377 0x0
0x46c: V391 = ISZERO V390
0x46d: V392 = ISZERO V391
0x46e: V393 = 0x477
0x471: JUMPI 0x477 V392
---
Entry stack: [V10, S4, {0xb8, 0xbb}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, 0x0, 0x0, 0x0]

================================

Block 0x472
[0x472:0x476]
---
Predecessors: [0x447]
Successors: []
---
0x472 PUSH1 0x0
0x474 PUSH1 0x0
0x476 REVERT
---
0x472: V394 = 0x0
0x474: V395 = 0x0
0x476: REVERT 0x0 0x0
---
Entry stack: [V10, S4, {0xb8, 0xbb}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, 0x0, 0x0, 0x0]

================================

Block 0x477
[0x477:0x477]
---
Predecessors: [0x419, 0x447]
Successors: [0x478]
---
0x477 JUMPDEST
---
0x477: JUMPDEST 
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, S2, S1, S0]

================================

Block 0x478
[0x478:0x478]
---
Predecessors: [0x477]
Successors: [0x479]
---
0x478 JUMPDEST
---
0x478: JUMPDEST 
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xb8, 0xbb}, S2, S1, S0]

================================

Block 0x479
[0x479:0x47d]
---
Predecessors: [0x478]
Successors: [0xb8, 0xbb]
---
0x479 JUMPDEST
0x47a POP
0x47b POP
0x47c POP
0x47d JUMP
---
0x479: JUMPDEST 
0x47d: JUMP {0xb8, 0xbb}
---
Entry stack: [V10, S4, {0xb8, 0xbb}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x47e
[0x47e:0x495]
---
Predecessors: [0xc5]
Successors: [0x496, 0x49b]
---
0x47e JUMPDEST
0x47f PUSH1 0x0
0x481 DUP1
0x482 SLOAD
0x483 CALLER
0x484 PUSH1 0x1
0x486 PUSH1 0xa0
0x488 PUSH1 0x2
0x48a EXP
0x48b SUB
0x48c SWAP1
0x48d DUP2
0x48e AND
0x48f SWAP2
0x490 AND
0x491 EQ
0x492 PUSH2 0x49b
0x495 JUMPI
---
0x47e: JUMPDEST 
0x47f: V396 = 0x0
0x482: V397 = S[0x0]
0x483: V398 = CALLER
0x484: V399 = 0x1
0x486: V400 = 0xa0
0x488: V401 = 0x2
0x48a: V402 = EXP 0x2 0xa0
0x48b: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48e: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x490: V405 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x491: V406 = EQ V405 V404
0x492: V407 = 0x49b
0x495: JUMPI 0x49b V406
---
Entry stack: [V10, 0xd0, V52]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xd0, V52, 0x0]

================================

Block 0x496
[0x496:0x49a]
---
Predecessors: [0x47e]
Successors: []
---
0x496 PUSH1 0x0
0x498 PUSH1 0x0
0x49a REVERT
---
0x496: V408 = 0x0
0x498: V409 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xd0, V52, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V52, 0x0]

================================

Block 0x49b
[0x49b:0x4ad]
---
Predecessors: [0x47e]
Successors: [0x4ae, 0x4dc]
---
0x49b JUMPDEST
0x49c PUSH1 0x1
0x49e PUSH1 0xa0
0x4a0 PUSH1 0x2
0x4a2 EXP
0x4a3 SUB
0x4a4 ADDRESS
0x4a5 AND
0x4a6 BALANCE
0x4a7 DUP3
0x4a8 SWAP1
0x4a9 LT
0x4aa PUSH2 0x4dc
0x4ad JUMPI
---
0x49b: JUMPDEST 
0x49c: V410 = 0x1
0x49e: V411 = 0xa0
0x4a0: V412 = 0x2
0x4a2: V413 = EXP 0x2 0xa0
0x4a3: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a4: V415 = ADDRESS
0x4a5: V416 = AND V415 0xffffffffffffffffffffffffffffffffffffffff
0x4a6: V417 = BALANCE V416
0x4a9: V418 = LT V417 V52
0x4aa: V419 = 0x4dc
0x4ad: JUMPI 0x4dc V418
---
Entry stack: [V10, 0xd0, V52, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xd0, V52, 0x0]

================================

Block 0x4ae
[0x4ae:0x4db]
---
Predecessors: [0x49b]
Successors: [0x506]
---
0x4ae PUSH1 0x0
0x4b0 DUP1
0x4b1 SLOAD
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 PUSH1 0x1
0x4b7 PUSH1 0xa0
0x4b9 PUSH1 0x2
0x4bb EXP
0x4bc SUB
0x4bd SWAP1
0x4be SWAP2
0x4bf AND
0x4c0 SWAP2
0x4c1 DUP5
0x4c2 ISZERO
0x4c3 PUSH2 0x8fc
0x4c6 MUL
0x4c7 SWAP2
0x4c8 DUP6
0x4c9 SWAP2
0x4ca DUP2
0x4cb DUP2
0x4cc DUP2
0x4cd DUP6
0x4ce DUP9
0x4cf DUP9
0x4d0 CALL
0x4d1 SWAP4
0x4d2 POP
0x4d3 POP
0x4d4 POP
0x4d5 POP
0x4d6 SWAP1
0x4d7 POP
0x4d8 PUSH2 0x506
0x4db JUMP
---
0x4ae: V420 = 0x0
0x4b1: V421 = S[0x0]
0x4b2: V422 = 0x40
0x4b4: V423 = M[0x40]
0x4b5: V424 = 0x1
0x4b7: V425 = 0xa0
0x4b9: V426 = 0x2
0x4bb: V427 = EXP 0x2 0xa0
0x4bc: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bf: V429 = AND V421 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V430 = ISZERO V52
0x4c3: V431 = 0x8fc
0x4c6: V432 = MUL 0x8fc V430
0x4d0: V433 = CALL V432 V429 V52 V423 0x0 V423 0x0
0x4d8: V434 = 0x506
0x4db: JUMP 0x506
---
Entry stack: [V10, 0xd0, V52, 0x0]
Stack pops: 2
Stack additions: [S1, V433]
Exit stack: [V10, 0xd0, V52, V433]

================================

Block 0x4dc
[0x4dc:0x505]
---
Predecessors: [0x49b]
Successors: [0x506]
---
0x4dc JUMPDEST
0x4dd PUSH1 0x40
0x4df MLOAD
0x4e0 PUSH32 0x36ff37f436d9a671f4776bd73e3be89800c29518da3abc0618ef2b18c707481f
0x501 SWAP1
0x502 PUSH1 0x0
0x504 SWAP1
0x505 LOG1
---
0x4dc: JUMPDEST 
0x4dd: V435 = 0x40
0x4df: V436 = M[0x40]
0x4e0: V437 = 0x36ff37f436d9a671f4776bd73e3be89800c29518da3abc0618ef2b18c707481f
0x502: V438 = 0x0
0x505: LOG V436 0x0 0x36ff37f436d9a671f4776bd73e3be89800c29518da3abc0618ef2b18c707481f
---
Entry stack: [V10, 0xd0, V52, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V52, 0x0]

================================

Block 0x506
[0x506:0x506]
---
Predecessors: [0x4ae, 0x4dc]
Successors: [0x507]
---
0x506 JUMPDEST
---
0x506: JUMPDEST 
---
Entry stack: [V10, 0xd0, V52, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V52, S0]

================================

Block 0x507
[0x507:0x50b]
---
Predecessors: [0x506]
Successors: [0xd0]
---
0x507 JUMPDEST
0x508 SWAP2
0x509 SWAP1
0x50a POP
0x50b JUMP
---
0x507: JUMPDEST 
0x50b: JUMP 0xd0
---
Entry stack: [V10, 0xd0, V52, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x50c
[0x50c:0x51a]
---
Predecessors: [0xec]
Successors: [0xf4]
---
0x50c JUMPDEST
0x50d PUSH1 0x1
0x50f SLOAD
0x510 PUSH1 0x1
0x512 PUSH1 0xa0
0x514 PUSH1 0x2
0x516 EXP
0x517 SUB
0x518 AND
0x519 DUP2
0x51a JUMP
---
0x50c: JUMPDEST 
0x50d: V439 = 0x1
0x50f: V440 = S[0x1]
0x510: V441 = 0x1
0x512: V442 = 0xa0
0x514: V443 = 0x2
0x516: V444 = EXP 0x2 0xa0
0x517: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x518: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x51a: JUMP 0xf4
---
Entry stack: [V10, 0xf4]
Stack pops: 1
Stack additions: [S0, V446]
Exit stack: [V10, 0xf4, V446]

================================

Block 0x51b
[0x51b:0x520]
---
Predecessors: [0x118]
Successors: [0x120]
---
0x51b JUMPDEST
0x51c PUSH1 0x2
0x51e SLOAD
0x51f DUP2
0x520 JUMP
---
0x51b: JUMPDEST 
0x51c: V447 = 0x2
0x51e: V448 = S[0x2]
0x520: JUMP 0x120
---
Entry stack: [V10, 0x120]
Stack pops: 1
Stack additions: [S0, V448]
Exit stack: [V10, 0x120, V448]

================================

Block 0x521
[0x521:0x529]
---
Predecessors: [0x13a]
Successors: [0xd0]
---
0x521 JUMPDEST
0x522 PUSH1 0x4
0x524 SLOAD
0x525 PUSH1 0xff
0x527 AND
0x528 DUP2
0x529 JUMP
---
0x521: JUMPDEST 
0x522: V449 = 0x4
0x524: V450 = S[0x4]
0x525: V451 = 0xff
0x527: V452 = AND 0xff V450
0x529: JUMP 0xd0
---
Entry stack: [V10, 0xd0]
Stack pops: 1
Stack additions: [S0, V452]
Exit stack: [V10, 0xd0, V452]

================================

Block 0x52a
[0x52a:0x541]
---
Predecessors: [0x15e]
Successors: [0x542, 0x547]
---
0x52a JUMPDEST
0x52b PUSH1 0x0
0x52d DUP1
0x52e SLOAD
0x52f CALLER
0x530 PUSH1 0x1
0x532 PUSH1 0xa0
0x534 PUSH1 0x2
0x536 EXP
0x537 SUB
0x538 SWAP1
0x539 DUP2
0x53a AND
0x53b SWAP2
0x53c AND
0x53d EQ
0x53e PUSH2 0x547
0x541 JUMPI
---
0x52a: JUMPDEST 
0x52b: V453 = 0x0
0x52e: V454 = S[0x0]
0x52f: V455 = CALLER
0x530: V456 = 0x1
0x532: V457 = 0xa0
0x534: V458 = 0x2
0x536: V459 = EXP 0x2 0xa0
0x537: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53a: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x53c: V462 = AND V454 0xffffffffffffffffffffffffffffffffffffffff
0x53d: V463 = EQ V462 V461
0x53e: V464 = 0x547
0x541: JUMPI 0x547 V463
---
Entry stack: [V10, 0xd0, V108]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xd0, V108, 0x0]

================================

Block 0x542
[0x542:0x546]
---
Predecessors: [0x52a]
Successors: []
---
0x542 PUSH1 0x0
0x544 PUSH1 0x0
0x546 REVERT
---
0x542: V465 = 0x0
0x544: V466 = 0x0
0x546: REVERT 0x0 0x0
---
Entry stack: [V10, 0xd0, V108, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V108, 0x0]

================================

Block 0x547
[0x547:0x5bb]
---
Predecessors: [0x52a]
Successors: [0x5bc, 0x5bd]
---
0x547 JUMPDEST
0x548 PUSH1 0x1
0x54a SLOAD
0x54b PUSH1 0x0
0x54d DUP1
0x54e SLOAD
0x54f PUSH1 0x40
0x551 DUP1
0x552 MLOAD
0x553 PUSH1 0x20
0x555 SWAP1
0x556 DUP2
0x557 ADD
0x558 DUP5
0x559 SWAP1
0x55a MSTORE
0x55b DUP2
0x55c MLOAD
0x55d PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x57e DUP2
0x57f MSTORE
0x580 PUSH1 0x1
0x582 PUSH1 0xa0
0x584 PUSH1 0x2
0x586 EXP
0x587 SUB
0x588 SWAP4
0x589 DUP5
0x58a AND
0x58b PUSH1 0x4
0x58d DUP3
0x58e ADD
0x58f MSTORE
0x590 PUSH1 0x24
0x592 DUP2
0x593 ADD
0x594 DUP9
0x595 SWAP1
0x596 MSTORE
0x597 SWAP2
0x598 MLOAD
0x599 SWAP3
0x59a SWAP1
0x59b SWAP5
0x59c AND
0x59d SWAP4
0x59e PUSH4 0xa9059cbb
0x5a3 SWAP4
0x5a4 PUSH1 0x44
0x5a6 DUP1
0x5a7 DUP5
0x5a8 ADD
0x5a9 SWAP5
0x5aa SWAP3
0x5ab SWAP4
0x5ac DUP4
0x5ad SWAP1
0x5ae SUB
0x5af ADD
0x5b0 SWAP1
0x5b1 DUP3
0x5b2 SWAP1
0x5b3 DUP8
0x5b4 DUP1
0x5b5 EXTCODESIZE
0x5b6 ISZERO
0x5b7 ISZERO
0x5b8 PUSH2 0x5bd
0x5bb JUMPI
---
0x547: JUMPDEST 
0x548: V467 = 0x1
0x54a: V468 = S[0x1]
0x54b: V469 = 0x0
0x54e: V470 = S[0x0]
0x54f: V471 = 0x40
0x552: V472 = M[0x40]
0x553: V473 = 0x20
0x557: V474 = ADD 0x20 V472
0x55a: M[V474] = 0x0
0x55c: V475 = M[0x40]
0x55d: V476 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x57f: M[V475] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x580: V477 = 0x1
0x582: V478 = 0xa0
0x584: V479 = 0x2
0x586: V480 = EXP 0x2 0xa0
0x587: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58a: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x58b: V483 = 0x4
0x58e: V484 = ADD V475 0x4
0x58f: M[V484] = V482
0x590: V485 = 0x24
0x593: V486 = ADD V475 0x24
0x596: M[V486] = V108
0x598: V487 = M[0x40]
0x59c: V488 = AND V468 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V489 = 0xa9059cbb
0x5a4: V490 = 0x44
0x5a8: V491 = ADD V475 0x44
0x5ae: V492 = SUB V475 V487
0x5af: V493 = ADD V492 0x44
0x5b5: V494 = EXTCODESIZE V488
0x5b6: V495 = ISZERO V494
0x5b7: V496 = ISZERO V495
0x5b8: V497 = 0x5bd
0x5bb: JUMPI 0x5bd V496
---
Entry stack: [V10, 0xd0, V108, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]
Exit stack: [V10, 0xd0, V108, 0x0, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]

================================

Block 0x5bc
[0x5bc:0x5bc]
---
Predecessors: [0x547]
Successors: []
---
0x5bc INVALID
---
0x5bc: INVALID 
---
Entry stack: [V10, 0xd0, V108, 0x0, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V108, 0x0, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]

================================

Block 0x5bd
[0x5bd:0x5c9]
---
Predecessors: [0x547]
Successors: [0x5ca, 0x5cb]
---
0x5bd JUMPDEST
0x5be PUSH2 0x2c6
0x5c1 GAS
0x5c2 SUB
0x5c3 CALL
0x5c4 ISZERO
0x5c5 ISZERO
0x5c6 PUSH2 0x5cb
0x5c9 JUMPI
---
0x5bd: JUMPDEST 
0x5be: V498 = 0x2c6
0x5c1: V499 = GAS
0x5c2: V500 = SUB V499 0x2c6
0x5c3: V501 = CALL V500 V488 0x0 V487 V493 V487 0x20
0x5c4: V502 = ISZERO V501
0x5c5: V503 = ISZERO V502
0x5c6: V504 = 0x5cb
0x5c9: JUMPI 0x5cb V503
---
Entry stack: [V10, 0xd0, V108, 0x0, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xd0, V108, 0x0, V488, 0xa9059cbb, V491]

================================

Block 0x5ca
[0x5ca:0x5ca]
---
Predecessors: [0x5bd]
Successors: []
---
0x5ca INVALID
---
0x5ca: INVALID 
---
Entry stack: [V10, 0xd0, V108, 0x0, V488, 0xa9059cbb, V491]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V108, 0x0, V488, 0xa9059cbb, V491]

================================

Block 0x5cb
[0x5cb:0x5d4]
---
Predecessors: [0x5bd]
Successors: [0x5d5]
---
0x5cb JUMPDEST
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 MLOAD
0x5d2 SWAP2
0x5d3 POP
0x5d4 POP
---
0x5cb: JUMPDEST 
0x5ce: V505 = 0x40
0x5d0: V506 = M[0x40]
0x5d1: V507 = M[V506]
---
Entry stack: [V10, 0xd0, V108, 0x0, V488, 0xa9059cbb, V491]
Stack pops: 4
Stack additions: [V507]
Exit stack: [V10, 0xd0, V108, V507]

================================

Block 0x5d5
[0x5d5:0x5d5]
---
Predecessors: [0x5cb]
Successors: [0x5d6]
---
0x5d5 JUMPDEST
---
0x5d5: JUMPDEST 
---
Entry stack: [V10, 0xd0, V108, V507]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V108, V507]

================================

Block 0x5d6
[0x5d6:0x5da]
---
Predecessors: [0x5d5]
Successors: [0xd0]
---
0x5d6 JUMPDEST
0x5d7 SWAP2
0x5d8 SWAP1
0x5d9 POP
0x5da JUMP
---
0x5d6: JUMPDEST 
0x5da: JUMP 0xd0
---
Entry stack: [V10, 0xd0, V108, V507]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V507]

================================

Block 0x5db
[0x5db:0x5e9]
---
Predecessors: [0x185]
Successors: [0xf4]
---
0x5db JUMPDEST
0x5dc PUSH1 0x0
0x5de SLOAD
0x5df PUSH1 0x1
0x5e1 PUSH1 0xa0
0x5e3 PUSH1 0x2
0x5e5 EXP
0x5e6 SUB
0x5e7 AND
0x5e8 DUP2
0x5e9 JUMP
---
0x5db: JUMPDEST 
0x5dc: V508 = 0x0
0x5de: V509 = S[0x0]
0x5df: V510 = 0x1
0x5e1: V511 = 0xa0
0x5e3: V512 = 0x2
0x5e5: V513 = EXP 0x2 0xa0
0x5e6: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e7: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x5e9: JUMP 0xf4
---
Entry stack: [V10, 0xf4]
Stack pops: 1
Stack additions: [S0, V515]
Exit stack: [V10, 0xf4, V515]

================================

Block 0x5ea
[0x5ea:0x5ef]
---
Predecessors: [0x1b1]
Successors: [0x120]
---
0x5ea JUMPDEST
0x5eb PUSH1 0x3
0x5ed SLOAD
0x5ee DUP2
0x5ef JUMP
---
0x5ea: JUMPDEST 
0x5eb: V516 = 0x3
0x5ed: V517 = S[0x3]
0x5ef: JUMP 0x120
---
Entry stack: [V10, 0x120]
Stack pops: 1
Stack additions: [S0, V517]
Exit stack: [V10, 0x120, V517]

================================

Block 0x5f0
[0x5f0:0x607]
---
Predecessors: [0x1d3]
Successors: [0x608, 0x60d]
---
0x5f0 JUMPDEST
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 SLOAD
0x5f5 CALLER
0x5f6 PUSH1 0x1
0x5f8 PUSH1 0xa0
0x5fa PUSH1 0x2
0x5fc EXP
0x5fd SUB
0x5fe SWAP1
0x5ff DUP2
0x600 AND
0x601 SWAP2
0x602 AND
0x603 EQ
0x604 PUSH2 0x60d
0x607 JUMPI
---
0x5f0: JUMPDEST 
0x5f1: V518 = 0x0
0x5f4: V519 = S[0x0]
0x5f5: V520 = CALLER
0x5f6: V521 = 0x1
0x5f8: V522 = 0xa0
0x5fa: V523 = 0x2
0x5fc: V524 = EXP 0x2 0xa0
0x5fd: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x600: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x602: V527 = AND V519 0xffffffffffffffffffffffffffffffffffffffff
0x603: V528 = EQ V527 V526
0x604: V529 = 0x60d
0x607: JUMPI 0x60d V528
---
Entry stack: [V10, 0xd0, V157, V159]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xd0, V157, V159, 0x0]

================================

Block 0x608
[0x608:0x60c]
---
Predecessors: [0x5f0]
Successors: []
---
0x608 PUSH1 0x0
0x60a PUSH1 0x0
0x60c REVERT
---
0x608: V530 = 0x0
0x60a: V531 = 0x0
0x60c: REVERT 0x0 0x0
---
Entry stack: [V10, 0xd0, V157, V159, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V157, V159, 0x0]

================================

Block 0x60d
[0x60d:0x67e]
---
Predecessors: [0x5f0]
Successors: [0x67f, 0x680]
---
0x60d JUMPDEST
0x60e PUSH1 0x0
0x610 DUP1
0x611 SLOAD
0x612 PUSH1 0x40
0x614 DUP1
0x615 MLOAD
0x616 PUSH1 0x20
0x618 SWAP1
0x619 DUP2
0x61a ADD
0x61b DUP5
0x61c SWAP1
0x61d MSTORE
0x61e DUP2
0x61f MLOAD
0x620 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x641 DUP2
0x642 MSTORE
0x643 PUSH1 0x1
0x645 PUSH1 0xa0
0x647 PUSH1 0x2
0x649 EXP
0x64a SUB
0x64b SWAP4
0x64c DUP5
0x64d AND
0x64e PUSH1 0x4
0x650 DUP3
0x651 ADD
0x652 MSTORE
0x653 PUSH1 0x24
0x655 DUP2
0x656 ADD
0x657 DUP8
0x658 SWAP1
0x659 MSTORE
0x65a SWAP2
0x65b MLOAD
0x65c SWAP3
0x65d DUP8
0x65e AND
0x65f SWAP4
0x660 PUSH4 0xa9059cbb
0x665 SWAP4
0x666 PUSH1 0x44
0x668 DUP1
0x669 DUP6
0x66a ADD
0x66b SWAP5
0x66c SWAP2
0x66d SWAP3
0x66e SWAP2
0x66f DUP4
0x670 SWAP1
0x671 SUB
0x672 ADD
0x673 SWAP1
0x674 DUP3
0x675 SWAP1
0x676 DUP8
0x677 DUP1
0x678 EXTCODESIZE
0x679 ISZERO
0x67a ISZERO
0x67b PUSH2 0x680
0x67e JUMPI
---
0x60d: JUMPDEST 
0x60e: V532 = 0x0
0x611: V533 = S[0x0]
0x612: V534 = 0x40
0x615: V535 = M[0x40]
0x616: V536 = 0x20
0x61a: V537 = ADD 0x20 V535
0x61d: M[V537] = 0x0
0x61f: V538 = M[0x40]
0x620: V539 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x642: M[V538] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x643: V540 = 0x1
0x645: V541 = 0xa0
0x647: V542 = 0x2
0x649: V543 = EXP 0x2 0xa0
0x64a: V544 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64d: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x64e: V546 = 0x4
0x651: V547 = ADD V538 0x4
0x652: M[V547] = V545
0x653: V548 = 0x24
0x656: V549 = ADD V538 0x24
0x659: M[V549] = V159
0x65b: V550 = M[0x40]
0x65e: V551 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x660: V552 = 0xa9059cbb
0x666: V553 = 0x44
0x66a: V554 = ADD V538 0x44
0x671: V555 = SUB V538 V550
0x672: V556 = ADD V555 0x44
0x678: V557 = EXTCODESIZE V551
0x679: V558 = ISZERO V557
0x67a: V559 = ISZERO V558
0x67b: V560 = 0x680
0x67e: JUMPI 0x680 V559
---
Entry stack: [V10, 0xd0, V157, V159, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V551, 0xa9059cbb, V554, 0x20, V550, V556, V550, 0x0, V551]
Exit stack: [V10, 0xd0, V157, V159, 0x0, V551, 0xa9059cbb, V554, 0x20, V550, V556, V550, 0x0, V551]

================================

Block 0x67f
[0x67f:0x67f]
---
Predecessors: [0x60d]
Successors: []
---
0x67f INVALID
---
0x67f: INVALID 
---
Entry stack: [V10, 0xd0, V157, V159, 0x0, V551, 0xa9059cbb, V554, 0x20, V550, V556, V550, 0x0, V551]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V157, V159, 0x0, V551, 0xa9059cbb, V554, 0x20, V550, V556, V550, 0x0, V551]

================================

Block 0x680
[0x680:0x68c]
---
Predecessors: [0x60d]
Successors: [0x68d, 0x68e]
---
0x680 JUMPDEST
0x681 PUSH2 0x2c6
0x684 GAS
0x685 SUB
0x686 CALL
0x687 ISZERO
0x688 ISZERO
0x689 PUSH2 0x68e
0x68c JUMPI
---
0x680: JUMPDEST 
0x681: V561 = 0x2c6
0x684: V562 = GAS
0x685: V563 = SUB V562 0x2c6
0x686: V564 = CALL V563 V551 0x0 V550 V556 V550 0x20
0x687: V565 = ISZERO V564
0x688: V566 = ISZERO V565
0x689: V567 = 0x68e
0x68c: JUMPI 0x68e V566
---
Entry stack: [V10, 0xd0, V157, V159, 0x0, V551, 0xa9059cbb, V554, 0x20, V550, V556, V550, 0x0, V551]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xd0, V157, V159, 0x0, V551, 0xa9059cbb, V554]

================================

Block 0x68d
[0x68d:0x68d]
---
Predecessors: [0x680]
Successors: []
---
0x68d INVALID
---
0x68d: INVALID 
---
Entry stack: [V10, 0xd0, V157, V159, 0x0, V551, 0xa9059cbb, V554]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V157, V159, 0x0, V551, 0xa9059cbb, V554]

================================

Block 0x68e
[0x68e:0x697]
---
Predecessors: [0x680]
Successors: [0x698]
---
0x68e JUMPDEST
0x68f POP
0x690 POP
0x691 PUSH1 0x40
0x693 MLOAD
0x694 MLOAD
0x695 SWAP2
0x696 POP
0x697 POP
---
0x68e: JUMPDEST 
0x691: V568 = 0x40
0x693: V569 = M[0x40]
0x694: V570 = M[V569]
---
Entry stack: [V10, 0xd0, V157, V159, 0x0, V551, 0xa9059cbb, V554]
Stack pops: 4
Stack additions: [V570]
Exit stack: [V10, 0xd0, V157, V159, V570]

================================

Block 0x698
[0x698:0x698]
---
Predecessors: [0x68e]
Successors: [0x699]
---
0x698 JUMPDEST
---
0x698: JUMPDEST 
---
Entry stack: [V10, 0xd0, V157, V159, V570]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd0, V157, V159, V570]

================================

Block 0x699
[0x699:0x69e]
---
Predecessors: [0x698]
Successors: [0xd0]
---
0x699 JUMPDEST
0x69a SWAP3
0x69b SWAP2
0x69c POP
0x69d POP
0x69e JUMP
---
0x699: JUMPDEST 
0x69e: JUMP 0xd0
---
Entry stack: [V10, 0xd0, V157, V159, V570]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V570]

================================

Block 0x69f
[0x69f:0x6b5]
---
Predecessors: [0x210]
Successors: [0x6b6, 0x6bb]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x0
0x6a2 SLOAD
0x6a3 CALLER
0x6a4 PUSH1 0x1
0x6a6 PUSH1 0xa0
0x6a8 PUSH1 0x2
0x6aa EXP
0x6ab SUB
0x6ac SWAP1
0x6ad DUP2
0x6ae AND
0x6af SWAP2
0x6b0 AND
0x6b1 EQ
0x6b2 PUSH2 0x6bb
0x6b5 JUMPI
---
0x69f: JUMPDEST 
0x6a0: V571 = 0x0
0x6a2: V572 = S[0x0]
0x6a3: V573 = CALLER
0x6a4: V574 = 0x1
0x6a6: V575 = 0xa0
0x6a8: V576 = 0x2
0x6aa: V577 = EXP 0x2 0xa0
0x6ab: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ae: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x6b0: V580 = AND V572 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V581 = EQ V580 V579
0x6b2: V582 = 0x6bb
0x6b5: JUMPI 0x6bb V581
---
Entry stack: [V10, 0xbb, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbb, V178]

================================

Block 0x6b6
[0x6b6:0x6ba]
---
Predecessors: [0x69f]
Successors: []
---
0x6b6 PUSH1 0x0
0x6b8 PUSH1 0x0
0x6ba REVERT
---
0x6b6: V583 = 0x0
0x6b8: V584 = 0x0
0x6ba: REVERT 0x0 0x0
---
Entry stack: [V10, 0xbb, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbb, V178]

================================

Block 0x6bb
[0x6bb:0x704]
---
Predecessors: [0x69f]
Successors: [0x705]
---
0x6bb JUMPDEST
0x6bc PUSH1 0x4
0x6be DUP1
0x6bf SLOAD
0x6c0 PUSH1 0xff
0x6c2 NOT
0x6c3 AND
0x6c4 DUP3
0x6c5 ISZERO
0x6c6 ISZERO
0x6c7 OR
0x6c8 SWAP1
0x6c9 DUP2
0x6ca SWAP1
0x6cb SSTORE
0x6cc PUSH1 0x40
0x6ce DUP1
0x6cf MLOAD
0x6d0 PUSH1 0xff
0x6d2 SWAP1
0x6d3 SWAP3
0x6d4 AND
0x6d5 ISZERO
0x6d6 ISZERO
0x6d7 DUP3
0x6d8 MSTORE
0x6d9 MLOAD
0x6da PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6fb SWAP2
0x6fc PUSH1 0x20
0x6fe SWAP1
0x6ff DUP3
0x700 SWAP1
0x701 SUB
0x702 ADD
0x703 SWAP1
0x704 LOG1
---
0x6bb: JUMPDEST 
0x6bc: V585 = 0x4
0x6bf: V586 = S[0x4]
0x6c0: V587 = 0xff
0x6c2: V588 = NOT 0xff
0x6c3: V589 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V586
0x6c5: V590 = ISZERO V178
0x6c6: V591 = ISZERO V590
0x6c7: V592 = OR V591 V589
0x6cb: S[0x4] = V592
0x6cc: V593 = 0x40
0x6cf: V594 = M[0x40]
0x6d0: V595 = 0xff
0x6d4: V596 = AND V592 0xff
0x6d5: V597 = ISZERO V596
0x6d6: V598 = ISZERO V597
0x6d8: M[V594] = V598
0x6d9: V599 = M[0x40]
0x6da: V600 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6fc: V601 = 0x20
0x701: V602 = SUB V594 V599
0x702: V603 = ADD V602 0x20
0x704: LOG V599 V603 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
---
Entry stack: [V10, 0xbb, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xbb, V178]

================================

Block 0x705
[0x705:0x705]
---
Predecessors: [0x6bb]
Successors: [0x706]
---
0x705 JUMPDEST
---
0x705: JUMPDEST 
---
Entry stack: [V10, 0xbb, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbb, V178]

================================

Block 0x706
[0x706:0x708]
---
Predecessors: [0x705]
Successors: [0xbb]
---
0x706 JUMPDEST
0x707 POP
0x708 JUMP
---
0x706: JUMPDEST 
0x708: JUMP 0xbb
---
Entry stack: [V10, 0xbb, V178]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x709
[0x709:0x71f]
---
Predecessors: [0x227]
Successors: [0x720, 0x725]
---
0x709 JUMPDEST
0x70a PUSH1 0x0
0x70c SLOAD
0x70d CALLER
0x70e PUSH1 0x1
0x710 PUSH1 0xa0
0x712 PUSH1 0x2
0x714 EXP
0x715 SUB
0x716 SWAP1
0x717 DUP2
0x718 AND
0x719 SWAP2
0x71a AND
0x71b EQ
0x71c PUSH2 0x725
0x71f JUMPI
---
0x709: JUMPDEST 
0x70a: V604 = 0x0
0x70c: V605 = S[0x0]
0x70d: V606 = CALLER
0x70e: V607 = 0x1
0x710: V608 = 0xa0
0x712: V609 = 0x2
0x714: V610 = EXP 0x2 0xa0
0x715: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x718: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x71a: V613 = AND V605 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V614 = EQ V613 V612
0x71c: V615 = 0x725
0x71f: JUMPI 0x725 V614
---
Entry stack: [V10, 0xbb, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbb, V191]

================================

Block 0x720
[0x720:0x724]
---
Predecessors: [0x709]
Successors: []
---
0x720 PUSH1 0x0
0x722 PUSH1 0x0
0x724 REVERT
---
0x720: V616 = 0x0
0x722: V617 = 0x0
0x724: REVERT 0x0 0x0
---
Entry stack: [V10, 0xbb, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbb, V191]

================================

Block 0x725
[0x725:0x74d]
---
Predecessors: [0x709]
Successors: [0x74e]
---
0x725 JUMPDEST
0x726 PUSH1 0x0
0x728 DUP1
0x729 SLOAD
0x72a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73f NOT
0x740 AND
0x741 PUSH1 0x1
0x743 PUSH1 0xa0
0x745 PUSH1 0x2
0x747 EXP
0x748 SUB
0x749 DUP4
0x74a AND
0x74b OR
0x74c SWAP1
0x74d SSTORE
---
0x725: JUMPDEST 
0x726: V618 = 0x0
0x729: V619 = S[0x0]
0x72a: V620 = 0xffffffffffffffffffffffffffffffffffffffff
0x73f: V621 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x740: V622 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V619
0x741: V623 = 0x1
0x743: V624 = 0xa0
0x745: V625 = 0x2
0x747: V626 = EXP 0x2 0xa0
0x748: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74a: V628 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x74b: V629 = OR V628 V622
0x74d: S[0x0] = V629
---
Entry stack: [V10, 0xbb, V191]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xbb, V191]

================================

Block 0x74e
[0x74e:0x74e]
---
Predecessors: [0x725]
Successors: [0x74f]
---
0x74e JUMPDEST
---
0x74e: JUMPDEST 
---
Entry stack: [V10, 0xbb, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbb, V191]

================================

Block 0x74f
[0x74f:0x751]
---
Predecessors: [0x74e]
Successors: [0xbb]
---
0x74f JUMPDEST
0x750 POP
0x751 JUMP
---
0x74f: JUMPDEST 
0x751: JUMP 0xbb
---
Entry stack: [V10, 0xbb, V191]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x752
[0x752:0x783]
---
Predecessors: []
Successors: []
---
0x752 STOP
0x753 LOG1
0x754 PUSH6 0x627a7a723058
0x75b SHA3
0x75c LT
0x75d MISSING 0x5d
0x75e BYTE
0x75f MISSING 0xfc
0x760 SWAP16
0x761 MISSING 0x25
0x762 MISSING 0xbe
0x763 MISSING 0xcc
0x764 PUSH31 0x3ec4c7ef4a31a2a3dacc2c1b6681b473b41e2b2916d5250029
---
0x752: STOP 
0x753: LOG S0 S1 S2
0x754: V630 = 0x627a7a723058
0x75b: V631 = SHA3 0x627a7a723058 S3
0x75c: V632 = LT V631 S4
0x75d: MISSING 0x5d
0x75e: V633 = BYTE S0 S1
0x75f: MISSING 0xfc
0x761: MISSING 0x25
0x762: MISSING 0xbe
0x763: MISSING 0xcc
0x764: V634 = 0x3ec4c7ef4a31a2a3dacc2c1b6681b473b41e2b2916d5250029
---
Entry stack: []
Stack pops: 0
Stack additions: [V632, V633, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, 0x3ec4c7ef4a31a2a3dacc2c1b6681b473b41e2b2916d5250029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0xbd
Exit block: 0xd0
Body: 0xbd, 0xc4, 0xc5, 0xd0, 0x47e, 0x496, 0x49b, 0x4ae, 0x4dc, 0x506, 0x507

Function 1:
Public function signature: 0x38d52e0f
Entry block: 0xe4
Exit block: 0xf4
Body: 0xe4, 0xeb, 0xec, 0xf4, 0x50c

Function 2:
Public function signature: 0x4b750334
Entry block: 0x110
Exit block: 0x120
Body: 0x110, 0x117, 0x118, 0x120, 0x51b

Function 3:
Public function signature: 0x4ca50f59
Entry block: 0x132
Exit block: 0xd0
Body: 0xd0, 0x132, 0x139, 0x13a, 0x521

Function 4:
Public function signature: 0x8d92fdf3
Entry block: 0x156
Exit block: 0xd0
Body: 0xd0, 0x156, 0x15d, 0x15e, 0x52a, 0x542, 0x547, 0x5bc, 0x5bd, 0x5ca, 0x5cb, 0x5d5, 0x5d6

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x17d
Exit block: 0xf4
Body: 0xf4, 0x17d, 0x184, 0x185, 0x5db

Function 6:
Public function signature: 0x976a8435
Entry block: 0x1a9
Exit block: 0x120
Body: 0x120, 0x1a9, 0x1b0, 0x1b1, 0x5ea

Function 7:
Public function signature: 0x9e281a98
Entry block: 0x1cb
Exit block: 0xd0
Body: 0xd0, 0x1cb, 0x1d2, 0x1d3, 0x5f0, 0x608, 0x60d, 0x67f, 0x680, 0x68d, 0x68e, 0x698, 0x699

Function 8:
Public function signature: 0xa6f2ae3a
Entry block: 0x1fe
Exit block: 0xbb
Body: 0xbb, 0x1fe

Function 9:
Public function signature: 0xce5e84a3
Entry block: 0x208
Exit block: 0xbb
Body: 0xbb, 0x208, 0x20f, 0x210, 0x69f, 0x6b6, 0x6bb, 0x705, 0x706

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x21f
Exit block: 0xbb
Body: 0xbb, 0x21f, 0x226, 0x227, 0x709, 0x720, 0x725, 0x74e, 0x74f

Function 11:
Public fallback function
Entry block: 0xac
Exit block: 0xbb
Body: 0xac, 0xb0, 0xb8, 0xb9, 0xbb

Function 12:
Private function
Entry block: 0x23d
Exit block: 0x479
Body: 0x23d, 0x250, 0x263, 0x269, 0x275, 0x309, 0x317, 0x328, 0x334, 0x373, 0x374, 0x37e, 0x3f6, 0x404, 0x418, 0x419, 0x447, 0x477, 0x478, 0x479

