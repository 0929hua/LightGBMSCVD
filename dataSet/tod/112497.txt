Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x5b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x64dac408
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x5b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x64dac408
0x3b: V13 = EQ V11 0x64dac408
0x3c: V14 = 0x5b
0x3f: JUMPI 0x5b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x65]
---
0x40 DUP1
0x41 PUSH4 0xa035b1fe
0x46 EQ
0x47 PUSH2 0x65
0x4a JUMPI
---
0x41: V15 = 0xa035b1fe
0x46: V16 = EQ 0xa035b1fe V11
0x47: V17 = 0x65
0x4a: JUMPI 0x65 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x8c]
---
0x4b DUP1
0x4c PUSH4 0xdfbf53ae
0x51 EQ
0x52 PUSH2 0x8c
0x55 JUMPI
---
0x4c: V18 = 0xdfbf53ae
0x51: V19 = EQ 0xdfbf53ae V11
0x52: V20 = 0x8c
0x55: JUMPI 0x8c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x5a]
---
Predecessors: [0x0, 0x4b]
Successors: []
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 DUP1
0x5a REVERT
---
0x56: JUMPDEST 
0x57: V21 = 0x0
0x5a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x62]
---
Predecessors: [0xd]
Successors: [0xca]
---
0x5b JUMPDEST
0x5c PUSH2 0x63
0x5f PUSH2 0xca
0x62 JUMP
---
0x5b: JUMPDEST 
0x5c: V22 = 0x63
0x5f: V23 = 0xca
0x62: JUMP 0xca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x63]
Exit stack: [V11, 0x63]

================================

Block 0x63
[0x63:0x64]
---
Predecessors: [0x19c]
Successors: []
---
0x63 JUMPDEST
0x64 STOP
---
0x63: JUMPDEST 
0x64: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x65
[0x65:0x6c]
---
Predecessors: [0x40]
Successors: [0x6d, 0x71]
---
0x65 JUMPDEST
0x66 CALLVALUE
0x67 DUP1
0x68 ISZERO
0x69 PUSH2 0x71
0x6c JUMPI
---
0x65: JUMPDEST 
0x66: V24 = CALLVALUE
0x68: V25 = ISZERO V24
0x69: V26 = 0x71
0x6c: JUMPI 0x71 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6d
[0x6d:0x70]
---
Predecessors: [0x65]
Successors: []
---
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6d: V27 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x71
[0x71:0x79]
---
Predecessors: [0x65]
Successors: [0x1c6]
---
0x71 JUMPDEST
0x72 POP
0x73 PUSH2 0x7a
0x76 PUSH2 0x1c6
0x79 JUMP
---
0x71: JUMPDEST 
0x73: V28 = 0x7a
0x76: V29 = 0x1c6
0x79: JUMP 0x1c6
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0x8b]
---
Predecessors: [0x1c6]
Successors: []
---
0x7a JUMPDEST
0x7b PUSH1 0x40
0x7d DUP1
0x7e MLOAD
0x7f SWAP2
0x80 DUP3
0x81 MSTORE
0x82 MLOAD
0x83 SWAP1
0x84 DUP2
0x85 SWAP1
0x86 SUB
0x87 PUSH1 0x20
0x89 ADD
0x8a SWAP1
0x8b RETURN
---
0x7a: JUMPDEST 
0x7b: V30 = 0x40
0x7e: V31 = M[0x40]
0x81: M[V31] = V130
0x82: V32 = M[0x40]
0x86: V33 = SUB V31 V32
0x87: V34 = 0x20
0x89: V35 = ADD 0x20 V33
0x8b: RETURN V32 V35
---
Entry stack: [V11, 0x7a, V130]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x4b]
Successors: [0x94, 0x98]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8c: JUMPDEST 
0x8d: V36 = CALLVALUE
0x8f: V37 = ISZERO V36
0x90: V38 = 0x98
0x93: JUMPI 0x98 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8c]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V39 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x98
[0x98:0xa0]
---
Predecessors: [0x8c]
Successors: [0x1cc]
---
0x98 JUMPDEST
0x99 POP
0x9a PUSH2 0xa1
0x9d PUSH2 0x1cc
0xa0 JUMP
---
0x98: JUMPDEST 
0x9a: V40 = 0xa1
0x9d: V41 = 0x1cc
0xa0: JUMP 0x1cc
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xa1]
Exit stack: [V11, 0xa1]

================================

Block 0xa1
[0xa1:0xc9]
---
Predecessors: [0x1cc]
Successors: []
---
0xa1 JUMPDEST
0xa2 PUSH1 0x40
0xa4 DUP1
0xa5 MLOAD
0xa6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb SWAP1
0xbc SWAP3
0xbd AND
0xbe DUP3
0xbf MSTORE
0xc0 MLOAD
0xc1 SWAP1
0xc2 DUP2
0xc3 SWAP1
0xc4 SUB
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP1
0xc9 RETURN
---
0xa1: JUMPDEST 
0xa2: V42 = 0x40
0xa5: V43 = M[0x40]
0xa6: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd: V45 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0xbf: M[V43] = V45
0xc0: V46 = M[0x40]
0xc4: V47 = SUB V43 V46
0xc5: V48 = 0x20
0xc7: V49 = ADD 0x20 V47
0xc9: RETURN V46 V49
---
Entry stack: [V11, 0xa1, V134]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa1]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0x5b]
Successors: [0xd5, 0xd9]
---
0xca JUMPDEST
0xcb PUSH1 0x0
0xcd SLOAD
0xce CALLVALUE
0xcf LT
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xca: JUMPDEST 
0xcb: V50 = 0x0
0xcd: V51 = S[0x0]
0xce: V52 = CALLVALUE
0xcf: V53 = LT V52 V51
0xd0: V54 = ISZERO V53
0xd1: V55 = 0xd9
0xd4: JUMPI 0xd9 V54
---
Entry stack: [V11, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x63]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xca]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V56 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x63]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0xca]
Successors: [0xe4, 0x12f]
---
0xd9 JUMPDEST
0xda PUSH1 0x0
0xdc SLOAD
0xdd CALLVALUE
0xde GT
0xdf ISZERO
0xe0 PUSH2 0x12f
0xe3 JUMPI
---
0xd9: JUMPDEST 
0xda: V57 = 0x0
0xdc: V58 = S[0x0]
0xdd: V59 = CALLVALUE
0xde: V60 = GT V59 V58
0xdf: V61 = ISZERO V60
0xe0: V62 = 0x12f
0xe3: JUMPI 0x12f V61
---
Entry stack: [V11, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x63]

================================

Block 0xe4
[0xe4:0x123]
---
Predecessors: [0xd9]
Successors: [0x124, 0x12d]
---
0xe4 CALLER
0xe5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa AND
0xfb PUSH2 0x8fc
0xfe PUSH1 0x0
0x100 SLOAD
0x101 CALLVALUE
0x102 SUB
0x103 SWAP1
0x104 DUP2
0x105 ISZERO
0x106 MUL
0x107 SWAP1
0x108 PUSH1 0x40
0x10a MLOAD
0x10b PUSH1 0x0
0x10d PUSH1 0x40
0x10f MLOAD
0x110 DUP1
0x111 DUP4
0x112 SUB
0x113 DUP2
0x114 DUP6
0x115 DUP9
0x116 DUP9
0x117 CALL
0x118 SWAP4
0x119 POP
0x11a POP
0x11b POP
0x11c POP
0x11d ISZERO
0x11e DUP1
0x11f ISZERO
0x120 PUSH2 0x12d
0x123 JUMPI
---
0xe4: V63 = CALLER
0xe5: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xfb: V66 = 0x8fc
0xfe: V67 = 0x0
0x100: V68 = S[0x0]
0x101: V69 = CALLVALUE
0x102: V70 = SUB V69 V68
0x105: V71 = ISZERO V70
0x106: V72 = MUL V71 0x8fc
0x108: V73 = 0x40
0x10a: V74 = M[0x40]
0x10b: V75 = 0x0
0x10d: V76 = 0x40
0x10f: V77 = M[0x40]
0x112: V78 = SUB V74 V77
0x117: V79 = CALL V72 V65 V70 V77 V78 V77 0x0
0x11d: V80 = ISZERO V79
0x11f: V81 = ISZERO V80
0x120: V82 = 0x12d
0x123: JUMPI 0x12d V81
---
Entry stack: [V11, 0x63]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V11, 0x63, V80]

================================

Block 0x124
[0x124:0x12c]
---
Predecessors: [0xe4]
Successors: []
---
0x124 RETURNDATASIZE
0x125 PUSH1 0x0
0x127 DUP1
0x128 RETURNDATACOPY
0x129 RETURNDATASIZE
0x12a PUSH1 0x0
0x12c REVERT
---
0x124: V83 = RETURNDATASIZE
0x125: V84 = 0x0
0x128: RETURNDATACOPY 0x0 0x0 V83
0x129: V85 = RETURNDATASIZE
0x12a: V86 = 0x0
0x12c: REVERT 0x0 V85
---
Entry stack: [V11, 0x63, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x63, V80]

================================

Block 0x12d
[0x12d:0x12e]
---
Predecessors: [0xe4]
Successors: [0x12f]
---
0x12d JUMPDEST
0x12e POP
---
0x12d: JUMPDEST 
---
Entry stack: [V11, 0x63, V80]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x63]

================================

Block 0x12f
[0x12f:0x16b]
---
Predecessors: [0xd9, 0x12d]
Successors: [0x16c, 0x19c]
---
0x12f JUMPDEST
0x130 PUSH1 0x1
0x132 SLOAD
0x133 PUSH1 0x0
0x135 DUP1
0x136 SLOAD
0x137 PUSH1 0x40
0x139 MLOAD
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f SWAP1
0x150 SWAP4
0x151 AND
0x152 SWAP3
0x153 DUP2
0x154 ISZERO
0x155 PUSH2 0x8fc
0x158 MUL
0x159 SWAP3
0x15a DUP2
0x15b DUP2
0x15c DUP2
0x15d DUP6
0x15e DUP9
0x15f DUP9
0x160 CALL
0x161 SWAP4
0x162 POP
0x163 POP
0x164 POP
0x165 POP
0x166 ISZERO
0x167 ISZERO
0x168 PUSH2 0x19c
0x16b JUMPI
---
0x12f: JUMPDEST 
0x130: V87 = 0x1
0x132: V88 = S[0x1]
0x133: V89 = 0x0
0x136: V90 = S[0x0]
0x137: V91 = 0x40
0x139: V92 = M[0x40]
0x13a: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V94 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x154: V95 = ISZERO V90
0x155: V96 = 0x8fc
0x158: V97 = MUL 0x8fc V95
0x160: V98 = CALL V97 V94 V90 V92 0x0 V92 0x0
0x166: V99 = ISZERO V98
0x167: V100 = ISZERO V99
0x168: V101 = 0x19c
0x16b: JUMPI 0x19c V100
---
Entry stack: [V11, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x63]

================================

Block 0x16c
[0x16c:0x190]
---
Predecessors: [0x12f]
Successors: [0x191, 0x19a]
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f SLOAD
0x170 PUSH1 0x40
0x172 MLOAD
0x173 CALLER
0x174 SWAP3
0x175 DUP3
0x176 ISZERO
0x177 PUSH2 0x8fc
0x17a MUL
0x17b SWAP3
0x17c SWAP2
0x17d SWAP1
0x17e DUP2
0x17f DUP2
0x180 DUP2
0x181 DUP6
0x182 DUP9
0x183 DUP9
0x184 CALL
0x185 SWAP4
0x186 POP
0x187 POP
0x188 POP
0x189 POP
0x18a ISZERO
0x18b DUP1
0x18c ISZERO
0x18d PUSH2 0x19a
0x190 JUMPI
---
0x16c: V102 = 0x0
0x16f: V103 = S[0x0]
0x170: V104 = 0x40
0x172: V105 = M[0x40]
0x173: V106 = CALLER
0x176: V107 = ISZERO V103
0x177: V108 = 0x8fc
0x17a: V109 = MUL 0x8fc V107
0x184: V110 = CALL V109 V106 V103 V105 0x0 V105 0x0
0x18a: V111 = ISZERO V110
0x18c: V112 = ISZERO V111
0x18d: V113 = 0x19a
0x190: JUMPI 0x19a V112
---
Entry stack: [V11, 0x63]
Stack pops: 0
Stack additions: [V111]
Exit stack: [V11, 0x63, V111]

================================

Block 0x191
[0x191:0x199]
---
Predecessors: [0x16c]
Successors: []
---
0x191 RETURNDATASIZE
0x192 PUSH1 0x0
0x194 DUP1
0x195 RETURNDATACOPY
0x196 RETURNDATASIZE
0x197 PUSH1 0x0
0x199 REVERT
---
0x191: V114 = RETURNDATASIZE
0x192: V115 = 0x0
0x195: RETURNDATACOPY 0x0 0x0 V114
0x196: V116 = RETURNDATASIZE
0x197: V117 = 0x0
0x199: REVERT 0x0 V116
---
Entry stack: [V11, 0x63, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x63, V111]

================================

Block 0x19a
[0x19a:0x19b]
---
Predecessors: [0x16c]
Successors: [0x19c]
---
0x19a JUMPDEST
0x19b POP
---
0x19a: JUMPDEST 
---
Entry stack: [V11, 0x63, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x63]

================================

Block 0x19c
[0x19c:0x1c5]
---
Predecessors: [0x12f, 0x19a]
Successors: [0x63]
---
0x19c JUMPDEST
0x19d PUSH1 0x1
0x19f DUP1
0x1a0 SLOAD
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 NOT
0x1b7 AND
0x1b8 CALLER
0x1b9 OR
0x1ba SWAP1
0x1bb SSTORE
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf SLOAD
0x1c0 PUSH1 0x2
0x1c2 MUL
0x1c3 SWAP1
0x1c4 SSTORE
0x1c5 JUMP
---
0x19c: JUMPDEST 
0x19d: V118 = 0x1
0x1a0: V119 = S[0x1]
0x1a1: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V121 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1b7: V122 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V119
0x1b8: V123 = CALLER
0x1b9: V124 = OR V123 V122
0x1bb: S[0x1] = V124
0x1bc: V125 = 0x0
0x1bf: V126 = S[0x0]
0x1c0: V127 = 0x2
0x1c2: V128 = MUL 0x2 V126
0x1c4: S[0x0] = V128
0x1c5: JUMP 0x63
---
Entry stack: [V11, 0x63]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c6
[0x1c6:0x1cb]
---
Predecessors: [0x71]
Successors: [0x7a]
---
0x1c6 JUMPDEST
0x1c7 PUSH1 0x0
0x1c9 SLOAD
0x1ca DUP2
0x1cb JUMP
---
0x1c6: JUMPDEST 
0x1c7: V129 = 0x0
0x1c9: V130 = S[0x0]
0x1cb: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: [S0, V130]
Exit stack: [V11, 0x7a, V130]

================================

Block 0x1cc
[0x1cc:0x1e7]
---
Predecessors: [0x98]
Successors: [0xa1]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x1
0x1cf SLOAD
0x1d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e5 AND
0x1e6 DUP2
0x1e7 JUMP
---
0x1cc: JUMPDEST 
0x1cd: V131 = 0x1
0x1cf: V132 = S[0x1]
0x1d0: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x1e7: JUMP 0xa1
---
Entry stack: [V11, 0xa1]
Stack pops: 1
Stack additions: [S0, V134]
Exit stack: [V11, 0xa1, V134]

================================

Block 0x1e8
[0x1e8:0x219]
---
Predecessors: []
Successors: []
---
0x1e8 STOP
0x1e9 LOG1
0x1ea PUSH6 0x627a7a723058
0x1f1 SHA3
0x1f2 PUSH6 0xd61c34ebb56
0x1f9 DUP14
0x1fa LOG3
0x1fb MSIZE
0x1fc MISSING 0xb4
0x1fd MISSING 0xef
0x1fe MISSING 0xe9
0x1ff MISSING 0x2a
0x200 PUSH3 0x3f9657
0x204 DUP11
0x205 MISSING 0x5f
0x206 SUB
0x207 PUSH18 0xdc6d641e3177ce81ecd10029
---
0x1e8: STOP 
0x1e9: LOG S0 S1 S2
0x1ea: V135 = 0x627a7a723058
0x1f1: V136 = SHA3 0x627a7a723058 S3
0x1f2: V137 = 0xd61c34ebb56
0x1fa: LOG S15 0xd61c34ebb56 V136 S4 S5
0x1fb: V138 = MSIZE
0x1fc: MISSING 0xb4
0x1fd: MISSING 0xef
0x1fe: MISSING 0xe9
0x1ff: MISSING 0x2a
0x200: V139 = 0x3f9657
0x205: MISSING 0x5f
0x206: V140 = SUB S0 S1
0x207: V141 = 0xdc6d641e3177ce81ecd10029
---
Entry stack: []
Stack pops: 0
Stack additions: [V138, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S9, 0x3f9657, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0xdc6d641e3177ce81ecd10029, V140]
Exit stack: []

================================

Function 0:
Public function signature: 0x64dac408
Entry block: 0x5b
Exit block: 0x191
Body: 0x5b, 0x63, 0xca, 0xd5, 0xd9, 0xe4, 0x124, 0x12d, 0x12f, 0x16c, 0x191, 0x19a, 0x19c

Function 1:
Public function signature: 0xa035b1fe
Entry block: 0x65
Exit block: 0x7a
Body: 0x65, 0x6d, 0x71, 0x7a, 0x1c6

Function 2:
Public function signature: 0xdfbf53ae
Entry block: 0x8c
Exit block: 0xa1
Body: 0x8c, 0x94, 0x98, 0xa1, 0x1cc

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

