Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xd7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xd7
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xd7
0xc: JUMPI 0xd7 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xdc]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1476e40f
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xdc
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1476e40f
0x22: V15 = EQ V13 0x1476e40f
0x23: V16 = 0xdc
0x26: JUMPI 0xdc V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x174]
---
0x27 DUP1
0x28 PUSH4 0x1e89d545
0x2d EQ
0x2e PUSH2 0x174
0x31 JUMPI
---
0x28: V17 = 0x1e89d545
0x2d: V18 = EQ 0x1e89d545 V13
0x2e: V19 = 0x174
0x31: JUMPI 0x174 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1f8]
---
0x32 DUP1
0x33 PUSH4 0x1f6eb6e7
0x38 EQ
0x39 PUSH2 0x1f8
0x3c JUMPI
---
0x33: V20 = 0x1f6eb6e7
0x38: V21 = EQ 0x1f6eb6e7 V13
0x39: V22 = 0x1f8
0x3c: JUMPI 0x1f8 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x227]
---
0x3d DUP1
0x3e PUSH4 0x2a17e397
0x43 EQ
0x44 PUSH2 0x227
0x47 JUMPI
---
0x3e: V23 = 0x2a17e397
0x43: V24 = EQ 0x2a17e397 V13
0x44: V25 = 0x227
0x47: JUMPI 0x227 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x26b]
---
0x48 DUP1
0x49 PUSH4 0x2af4c31e
0x4e EQ
0x4f PUSH2 0x26b
0x52 JUMPI
---
0x49: V26 = 0x2af4c31e
0x4e: V27 = EQ 0x2af4c31e V13
0x4f: V28 = 0x26b
0x52: JUMPI 0x26b V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x28c]
---
0x53 DUP1
0x54 PUSH4 0x35a21728
0x59 EQ
0x5a PUSH2 0x28c
0x5d JUMPI
---
0x54: V29 = 0x35a21728
0x59: V30 = EQ 0x35a21728 V13
0x5a: V31 = 0x28c
0x5d: JUMPI 0x28c V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x329]
---
0x5e DUP1
0x5f PUSH4 0x666a3427
0x64 EQ
0x65 PUSH2 0x329
0x68 JUMPI
---
0x5f: V32 = 0x666a3427
0x64: V33 = EQ 0x666a3427 V13
0x65: V34 = 0x329
0x68: JUMPI 0x329 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x348]
---
0x69 DUP1
0x6a PUSH4 0x710bf322
0x6f EQ
0x70 PUSH2 0x348
0x73 JUMPI
---
0x6a: V35 = 0x710bf322
0x6f: V36 = EQ 0x710bf322 V13
0x70: V37 = 0x348
0x73: JUMPI 0x348 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x367]
---
0x74 DUP1
0x75 PUSH4 0x79ba5097
0x7a EQ
0x7b PUSH2 0x367
0x7e JUMPI
---
0x75: V38 = 0x79ba5097
0x7a: V39 = EQ 0x79ba5097 V13
0x7b: V40 = 0x367
0x7e: JUMPI 0x367 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x37a]
---
0x7f DUP1
0x80 PUSH4 0x892db057
0x85 EQ
0x86 PUSH2 0x37a
0x89 JUMPI
---
0x80: V41 = 0x892db057
0x85: V42 = EQ 0x892db057 V13
0x86: V43 = 0x37a
0x89: JUMPI 0x37a V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x399]
---
0x8a DUP1
0x8b PUSH4 0x8da5cb5b
0x90 EQ
0x91 PUSH2 0x399
0x94 JUMPI
---
0x8b: V44 = 0x8da5cb5b
0x90: V45 = EQ 0x8da5cb5b V13
0x91: V46 = 0x399
0x94: JUMPI 0x399 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x3ac]
---
0x95 DUP1
0x96 PUSH4 0xa142d608
0x9b EQ
0x9c PUSH2 0x3ac
0x9f JUMPI
---
0x96: V47 = 0xa142d608
0x9b: V48 = EQ 0xa142d608 V13
0x9c: V49 = 0x3ac
0x9f: JUMPI 0x3ac V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x3cb]
---
0xa0 DUP1
0xa1 PUSH4 0xac66777f
0xa6 EQ
0xa7 PUSH2 0x3cb
0xaa JUMPI
---
0xa1: V50 = 0xac66777f
0xa6: V51 = EQ 0xac66777f V13
0xa7: V52 = 0x3cb
0xaa: JUMPI 0x3cb V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x40f]
---
0xab DUP1
0xac PUSH4 0xd091b550
0xb1 EQ
0xb2 PUSH2 0x40f
0xb5 JUMPI
---
0xac: V53 = 0xd091b550
0xb1: V54 = EQ 0xd091b550 V13
0xb2: V55 = 0x40f
0xb5: JUMPI 0x40f V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x422]
---
0xb6 DUP1
0xb7 PUSH4 0xd836fbe8
0xbc EQ
0xbd PUSH2 0x422
0xc0 JUMPI
---
0xb7: V56 = 0xd836fbe8
0xbc: V57 = EQ 0xd836fbe8 V13
0xbd: V58 = 0x422
0xc0: JUMPI 0x422 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x441]
---
0xc1 DUP1
0xc2 PUSH4 0xf5b61230
0xc7 EQ
0xc8 PUSH2 0x441
0xcb JUMPI
---
0xc2: V59 = 0xf5b61230
0xc7: V60 = EQ 0xf5b61230 V13
0xc8: V61 = 0x441
0xcb: JUMPI 0x441 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x454]
---
0xcc DUP1
0xcd PUSH4 0xf8f1d927
0xd2 EQ
0xd3 PUSH2 0x454
0xd6 JUMPI
---
0xcd: V62 = 0xf8f1d927
0xd2: V63 = EQ 0xf8f1d927 V13
0xd3: V64 = 0x454
0xd6: JUMPI 0x454 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xdb]
---
Predecessors: [0x0, 0xcc]
Successors: []
---
0xd7 JUMPDEST
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd7: JUMPDEST 
0xd8: V65 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdc
[0xdc:0x15f]
---
Predecessors: [0xd]
Successors: [0x4b1]
---
0xdc JUMPDEST
0xdd PUSH2 0x160
0xe0 PUSH1 0x4
0xe2 PUSH1 0x24
0xe4 DUP2
0xe5 CALLDATALOAD
0xe6 DUP2
0xe7 DUP2
0xe8 ADD
0xe9 SWAP1
0xea DUP4
0xeb ADD
0xec CALLDATALOAD
0xed DUP1
0xee PUSH1 0x20
0xf0 DUP2
0xf1 DUP2
0xf2 MUL
0xf3 ADD
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 SWAP1
0xf8 DUP2
0xf9 ADD
0xfa PUSH1 0x40
0xfc MSTORE
0xfd DUP1
0xfe SWAP4
0xff SWAP3
0x100 SWAP2
0x101 SWAP1
0x102 DUP2
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 ADD
0x108 DUP4
0x109 DUP4
0x10a PUSH1 0x20
0x10c MUL
0x10d DUP1
0x10e DUP3
0x10f DUP5
0x110 CALLDATACOPY
0x111 DUP3
0x112 ADD
0x113 SWAP2
0x114 POP
0x115 POP
0x116 POP
0x117 POP
0x118 POP
0x119 POP
0x11a SWAP2
0x11b SWAP1
0x11c DUP1
0x11d CALLDATALOAD
0x11e SWAP1
0x11f PUSH1 0x20
0x121 ADD
0x122 SWAP1
0x123 DUP3
0x124 ADD
0x125 DUP1
0x126 CALLDATALOAD
0x127 SWAP1
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c DUP1
0x12d DUP1
0x12e PUSH1 0x20
0x130 MUL
0x131 PUSH1 0x20
0x133 ADD
0x134 PUSH1 0x40
0x136 MLOAD
0x137 SWAP1
0x138 DUP2
0x139 ADD
0x13a PUSH1 0x40
0x13c MSTORE
0x13d DUP1
0x13e SWAP4
0x13f SWAP3
0x140 SWAP2
0x141 SWAP1
0x142 DUP2
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x20
0x147 ADD
0x148 DUP4
0x149 DUP4
0x14a PUSH1 0x20
0x14c MUL
0x14d DUP1
0x14e DUP3
0x14f DUP5
0x150 CALLDATACOPY
0x151 POP
0x152 SWAP5
0x153 SWAP7
0x154 POP
0x155 PUSH2 0x4b1
0x158 SWAP6
0x159 POP
0x15a POP
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f JUMP
---
0xdc: JUMPDEST 
0xdd: V66 = 0x160
0xe0: V67 = 0x4
0xe2: V68 = 0x24
0xe5: V69 = CALLDATALOAD 0x4
0xe8: V70 = ADD V69 0x24
0xeb: V71 = ADD 0x4 V69
0xec: V72 = CALLDATALOAD V71
0xee: V73 = 0x20
0xf2: V74 = MUL 0x20 V72
0xf3: V75 = ADD V74 0x20
0xf4: V76 = 0x40
0xf6: V77 = M[0x40]
0xf9: V78 = ADD V77 V75
0xfa: V79 = 0x40
0xfc: M[0x40] = V78
0x104: M[V77] = V72
0x105: V80 = 0x20
0x107: V81 = ADD 0x20 V77
0x10a: V82 = 0x20
0x10c: V83 = MUL 0x20 V72
0x110: CALLDATACOPY V81 V70 V83
0x112: V84 = ADD V81 V83
0x11d: V85 = CALLDATALOAD 0x24
0x11f: V86 = 0x20
0x121: V87 = ADD 0x20 0x24
0x124: V88 = ADD 0x4 V85
0x126: V89 = CALLDATALOAD V88
0x128: V90 = 0x20
0x12a: V91 = ADD 0x20 V88
0x12e: V92 = 0x20
0x130: V93 = MUL 0x20 V89
0x131: V94 = 0x20
0x133: V95 = ADD 0x20 V93
0x134: V96 = 0x40
0x136: V97 = M[0x40]
0x139: V98 = ADD V97 V95
0x13a: V99 = 0x40
0x13c: M[0x40] = V98
0x144: M[V97] = V89
0x145: V100 = 0x20
0x147: V101 = ADD 0x20 V97
0x14a: V102 = 0x20
0x14c: V103 = MUL 0x20 V89
0x150: CALLDATACOPY V101 V91 V103
0x155: V104 = 0x4b1
0x15f: JUMP 0x4b1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x160, V77, V97]
Exit stack: [V13, 0x160, V77, V97]

================================

Block 0x160
[0x160:0x173]
---
Predecessors: [0x596, 0x75b, 0xa75]
Successors: []
---
0x160 JUMPDEST
0x161 PUSH1 0x40
0x163 MLOAD
0x164 SWAP1
0x165 ISZERO
0x166 ISZERO
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x20
0x16b ADD
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 SWAP2
0x171 SUB
0x172 SWAP1
0x173 RETURN
---
0x160: JUMPDEST 
0x161: V105 = 0x40
0x163: V106 = M[0x40]
0x165: V107 = ISZERO S0
0x166: V108 = ISZERO V107
0x168: M[V106] = V108
0x169: V109 = 0x20
0x16b: V110 = ADD 0x20 V106
0x16c: V111 = 0x40
0x16e: V112 = M[0x40]
0x171: V113 = SUB V110 V112
0x173: RETURN V112 V113
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x174
[0x174:0x1f7]
---
Predecessors: [0x27]
Successors: [0x5a1]
---
0x174 JUMPDEST
0x175 PUSH2 0x160
0x178 PUSH1 0x4
0x17a PUSH1 0x24
0x17c DUP2
0x17d CALLDATALOAD
0x17e DUP2
0x17f DUP2
0x180 ADD
0x181 SWAP1
0x182 DUP4
0x183 ADD
0x184 CALLDATALOAD
0x185 DUP1
0x186 PUSH1 0x20
0x188 DUP2
0x189 DUP2
0x18a MUL
0x18b ADD
0x18c PUSH1 0x40
0x18e MLOAD
0x18f SWAP1
0x190 DUP2
0x191 ADD
0x192 PUSH1 0x40
0x194 MSTORE
0x195 DUP1
0x196 SWAP4
0x197 SWAP3
0x198 SWAP2
0x199 SWAP1
0x19a DUP2
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 DUP4
0x1a1 DUP4
0x1a2 PUSH1 0x20
0x1a4 MUL
0x1a5 DUP1
0x1a6 DUP3
0x1a7 DUP5
0x1a8 CALLDATACOPY
0x1a9 DUP3
0x1aa ADD
0x1ab SWAP2
0x1ac POP
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 SWAP2
0x1b3 SWAP1
0x1b4 DUP1
0x1b5 CALLDATALOAD
0x1b6 SWAP1
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba SWAP1
0x1bb DUP3
0x1bc ADD
0x1bd DUP1
0x1be CALLDATALOAD
0x1bf SWAP1
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 DUP1
0x1c5 DUP1
0x1c6 PUSH1 0x20
0x1c8 MUL
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf SWAP1
0x1d0 DUP2
0x1d1 ADD
0x1d2 PUSH1 0x40
0x1d4 MSTORE
0x1d5 DUP1
0x1d6 SWAP4
0x1d7 SWAP3
0x1d8 SWAP2
0x1d9 SWAP1
0x1da DUP2
0x1db DUP2
0x1dc MSTORE
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 DUP4
0x1e1 DUP4
0x1e2 PUSH1 0x20
0x1e4 MUL
0x1e5 DUP1
0x1e6 DUP3
0x1e7 DUP5
0x1e8 CALLDATACOPY
0x1e9 POP
0x1ea SWAP5
0x1eb SWAP7
0x1ec POP
0x1ed PUSH2 0x5a1
0x1f0 SWAP6
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 JUMP
---
0x174: JUMPDEST 
0x175: V114 = 0x160
0x178: V115 = 0x4
0x17a: V116 = 0x24
0x17d: V117 = CALLDATALOAD 0x4
0x180: V118 = ADD V117 0x24
0x183: V119 = ADD 0x4 V117
0x184: V120 = CALLDATALOAD V119
0x186: V121 = 0x20
0x18a: V122 = MUL 0x20 V120
0x18b: V123 = ADD V122 0x20
0x18c: V124 = 0x40
0x18e: V125 = M[0x40]
0x191: V126 = ADD V125 V123
0x192: V127 = 0x40
0x194: M[0x40] = V126
0x19c: M[V125] = V120
0x19d: V128 = 0x20
0x19f: V129 = ADD 0x20 V125
0x1a2: V130 = 0x20
0x1a4: V131 = MUL 0x20 V120
0x1a8: CALLDATACOPY V129 V118 V131
0x1aa: V132 = ADD V129 V131
0x1b5: V133 = CALLDATALOAD 0x24
0x1b7: V134 = 0x20
0x1b9: V135 = ADD 0x20 0x24
0x1bc: V136 = ADD 0x4 V133
0x1be: V137 = CALLDATALOAD V136
0x1c0: V138 = 0x20
0x1c2: V139 = ADD 0x20 V136
0x1c6: V140 = 0x20
0x1c8: V141 = MUL 0x20 V137
0x1c9: V142 = 0x20
0x1cb: V143 = ADD 0x20 V141
0x1cc: V144 = 0x40
0x1ce: V145 = M[0x40]
0x1d1: V146 = ADD V145 V143
0x1d2: V147 = 0x40
0x1d4: M[0x40] = V146
0x1dc: M[V145] = V137
0x1dd: V148 = 0x20
0x1df: V149 = ADD 0x20 V145
0x1e2: V150 = 0x20
0x1e4: V151 = MUL 0x20 V137
0x1e8: CALLDATACOPY V149 V139 V151
0x1ed: V152 = 0x5a1
0x1f7: JUMP 0x5a1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x160, V125, V145]
Exit stack: [V13, 0x160, V125, V145]

================================

Block 0x1f8
[0x1f8:0x1fe]
---
Predecessors: [0x32]
Successors: [0x1ff, 0x203]
---
0x1f8 JUMPDEST
0x1f9 CALLVALUE
0x1fa ISZERO
0x1fb PUSH2 0x203
0x1fe JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V153 = CALLVALUE
0x1fa: V154 = ISZERO V153
0x1fb: V155 = 0x203
0x1fe: JUMPI 0x203 V154
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ff
[0x1ff:0x202]
---
Predecessors: [0x1f8]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 REVERT
---
0x1ff: V156 = 0x0
0x202: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x203
[0x203:0x20a]
---
Predecessors: [0x1f8]
Successors: [0x66e]
---
0x203 JUMPDEST
0x204 PUSH2 0x20b
0x207 PUSH2 0x66e
0x20a JUMP
---
0x203: JUMPDEST 
0x204: V157 = 0x20b
0x207: V158 = 0x66e
0x20a: JUMP 0x66e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x20b]
Exit stack: [V13, 0x20b]

================================

Block 0x20b
[0x20b:0x226]
---
Predecessors: [0x66e, 0xa94, 0xda5, 0xe19]
Successors: []
---
0x20b JUMPDEST
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 SWAP1
0x218 SWAP2
0x219 AND
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x20
0x21e ADD
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP1
0x223 SWAP2
0x224 SUB
0x225 SWAP1
0x226 RETURN
---
0x20b: JUMPDEST 
0x20c: V159 = 0x40
0x20e: V160 = M[0x40]
0x20f: V161 = 0x1
0x211: V162 = 0xa0
0x213: V163 = 0x2
0x215: V164 = EXP 0x2 0xa0
0x216: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x219: V166 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x21b: M[V160] = V166
0x21c: V167 = 0x20
0x21e: V168 = ADD 0x20 V160
0x21f: V169 = 0x40
0x221: V170 = M[0x40]
0x224: V171 = SUB V168 V170
0x226: RETURN V170 V171
---
Entry stack: [V13, 0x20b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x20b]

================================

Block 0x227
[0x227:0x26a]
---
Predecessors: [0x3d]
Successors: [0x67d]
---
0x227 JUMPDEST
0x228 PUSH2 0x160
0x22b PUSH1 0x4
0x22d PUSH1 0x24
0x22f DUP2
0x230 CALLDATALOAD
0x231 DUP2
0x232 DUP2
0x233 ADD
0x234 SWAP1
0x235 DUP4
0x236 ADD
0x237 CALLDATALOAD
0x238 DUP1
0x239 PUSH1 0x20
0x23b DUP2
0x23c DUP2
0x23d MUL
0x23e ADD
0x23f PUSH1 0x40
0x241 MLOAD
0x242 SWAP1
0x243 DUP2
0x244 ADD
0x245 PUSH1 0x40
0x247 MSTORE
0x248 DUP1
0x249 SWAP4
0x24a SWAP3
0x24b SWAP2
0x24c SWAP1
0x24d DUP2
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 DUP4
0x254 DUP4
0x255 PUSH1 0x20
0x257 MUL
0x258 DUP1
0x259 DUP3
0x25a DUP5
0x25b CALLDATACOPY
0x25c POP
0x25d SWAP5
0x25e SWAP7
0x25f POP
0x260 PUSH2 0x67d
0x263 SWAP6
0x264 POP
0x265 POP
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a JUMP
---
0x227: JUMPDEST 
0x228: V172 = 0x160
0x22b: V173 = 0x4
0x22d: V174 = 0x24
0x230: V175 = CALLDATALOAD 0x4
0x233: V176 = ADD V175 0x24
0x236: V177 = ADD 0x4 V175
0x237: V178 = CALLDATALOAD V177
0x239: V179 = 0x20
0x23d: V180 = MUL 0x20 V178
0x23e: V181 = ADD V180 0x20
0x23f: V182 = 0x40
0x241: V183 = M[0x40]
0x244: V184 = ADD V183 V181
0x245: V185 = 0x40
0x247: M[0x40] = V184
0x24f: M[V183] = V178
0x250: V186 = 0x20
0x252: V187 = ADD 0x20 V183
0x255: V188 = 0x20
0x257: V189 = MUL 0x20 V178
0x25b: CALLDATACOPY V187 V176 V189
0x260: V190 = 0x67d
0x26a: JUMP 0x67d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x160, V183]
Exit stack: [V13, 0x160, V183]

================================

Block 0x26b
[0x26b:0x271]
---
Predecessors: [0x48]
Successors: [0x272, 0x276]
---
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x26b: JUMPDEST 
0x26c: V191 = CALLVALUE
0x26d: V192 = ISZERO V191
0x26e: V193 = 0x276
0x271: JUMPI 0x276 V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x26b]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V194 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x276
[0x276:0x289]
---
Predecessors: [0x26b]
Successors: [0x767]
---
0x276 JUMPDEST
0x277 PUSH2 0x28a
0x27a PUSH1 0x1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 SUB
0x282 PUSH1 0x4
0x284 CALLDATALOAD
0x285 AND
0x286 PUSH2 0x767
0x289 JUMP
---
0x276: JUMPDEST 
0x277: V195 = 0x28a
0x27a: V196 = 0x1
0x27c: V197 = 0xa0
0x27e: V198 = 0x2
0x280: V199 = EXP 0x2 0xa0
0x281: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x282: V201 = 0x4
0x284: V202 = CALLDATALOAD 0x4
0x285: V203 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x286: V204 = 0x767
0x289: JUMP 0x767
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28a, V203]
Exit stack: [V13, 0x28a, V203]

================================

Block 0x28a
[0x28a:0x28b]
---
Predecessors: [0x798, 0x8da, 0x912, 0x985, 0xa06, 0xcda, 0xdea, 0xef3]
Successors: []
---
0x28a JUMPDEST
0x28b STOP
---
0x28a: JUMPDEST 
0x28b: STOP 
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, S0]

================================

Block 0x28c
[0x28c:0x292]
---
Predecessors: [0x53]
Successors: [0x293, 0x297]
---
0x28c JUMPDEST
0x28d CALLVALUE
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x28c: JUMPDEST 
0x28d: V205 = CALLVALUE
0x28e: V206 = ISZERO V205
0x28f: V207 = 0x297
0x292: JUMPI 0x297 V206
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x28c]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V208 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x297
[0x297:0x328]
---
Predecessors: [0x28c]
Successors: [0x808]
---
0x297 JUMPDEST
0x298 PUSH2 0x28a
0x29b PUSH1 0x4
0x29d DUP1
0x29e CALLDATALOAD
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 AND
0x2a8 SWAP1
0x2a9 PUSH1 0x44
0x2ab PUSH1 0x24
0x2ad DUP1
0x2ae CALLDATALOAD
0x2af SWAP1
0x2b0 DUP2
0x2b1 ADD
0x2b2 SWAP1
0x2b3 DUP4
0x2b4 ADD
0x2b5 CALLDATALOAD
0x2b6 DUP1
0x2b7 PUSH1 0x20
0x2b9 DUP1
0x2ba DUP3
0x2bb MUL
0x2bc ADD
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 SWAP1
0x2c1 DUP2
0x2c2 ADD
0x2c3 PUSH1 0x40
0x2c5 MSTORE
0x2c6 DUP1
0x2c7 SWAP4
0x2c8 SWAP3
0x2c9 SWAP2
0x2ca SWAP1
0x2cb DUP2
0x2cc DUP2
0x2cd MSTORE
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 DUP4
0x2d2 DUP4
0x2d3 PUSH1 0x20
0x2d5 MUL
0x2d6 DUP1
0x2d7 DUP3
0x2d8 DUP5
0x2d9 CALLDATACOPY
0x2da DUP3
0x2db ADD
0x2dc SWAP2
0x2dd POP
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 POP
0x2e3 SWAP2
0x2e4 SWAP1
0x2e5 DUP1
0x2e6 CALLDATALOAD
0x2e7 SWAP1
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb SWAP1
0x2ec DUP3
0x2ed ADD
0x2ee DUP1
0x2ef CALLDATALOAD
0x2f0 SWAP1
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 SWAP1
0x2f5 DUP1
0x2f6 DUP1
0x2f7 PUSH1 0x20
0x2f9 MUL
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 SWAP1
0x301 DUP2
0x302 ADD
0x303 PUSH1 0x40
0x305 MSTORE
0x306 DUP1
0x307 SWAP4
0x308 SWAP3
0x309 SWAP2
0x30a SWAP1
0x30b DUP2
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 DUP4
0x312 DUP4
0x313 PUSH1 0x20
0x315 MUL
0x316 DUP1
0x317 DUP3
0x318 DUP5
0x319 CALLDATACOPY
0x31a POP
0x31b SWAP5
0x31c SWAP7
0x31d POP
0x31e PUSH2 0x808
0x321 SWAP6
0x322 POP
0x323 POP
0x324 POP
0x325 POP
0x326 POP
0x327 POP
0x328 JUMP
---
0x297: JUMPDEST 
0x298: V209 = 0x28a
0x29b: V210 = 0x4
0x29e: V211 = CALLDATALOAD 0x4
0x29f: V212 = 0x1
0x2a1: V213 = 0xa0
0x2a3: V214 = 0x2
0x2a5: V215 = EXP 0x2 0xa0
0x2a6: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x2a9: V218 = 0x44
0x2ab: V219 = 0x24
0x2ae: V220 = CALLDATALOAD 0x24
0x2b1: V221 = ADD V220 0x24
0x2b4: V222 = ADD 0x4 V220
0x2b5: V223 = CALLDATALOAD V222
0x2b7: V224 = 0x20
0x2bb: V225 = MUL V223 0x20
0x2bc: V226 = ADD V225 0x20
0x2bd: V227 = 0x40
0x2bf: V228 = M[0x40]
0x2c2: V229 = ADD V228 V226
0x2c3: V230 = 0x40
0x2c5: M[0x40] = V229
0x2cd: M[V228] = V223
0x2ce: V231 = 0x20
0x2d0: V232 = ADD 0x20 V228
0x2d3: V233 = 0x20
0x2d5: V234 = MUL 0x20 V223
0x2d9: CALLDATACOPY V232 V221 V234
0x2db: V235 = ADD V232 V234
0x2e6: V236 = CALLDATALOAD 0x44
0x2e8: V237 = 0x20
0x2ea: V238 = ADD 0x20 0x44
0x2ed: V239 = ADD 0x4 V236
0x2ef: V240 = CALLDATALOAD V239
0x2f1: V241 = 0x20
0x2f3: V242 = ADD 0x20 V239
0x2f7: V243 = 0x20
0x2f9: V244 = MUL 0x20 V240
0x2fa: V245 = 0x20
0x2fc: V246 = ADD 0x20 V244
0x2fd: V247 = 0x40
0x2ff: V248 = M[0x40]
0x302: V249 = ADD V248 V246
0x303: V250 = 0x40
0x305: M[0x40] = V249
0x30d: M[V248] = V240
0x30e: V251 = 0x20
0x310: V252 = ADD 0x20 V248
0x313: V253 = 0x20
0x315: V254 = MUL 0x20 V240
0x319: CALLDATACOPY V252 V242 V254
0x31e: V255 = 0x808
0x328: JUMP 0x808
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28a, V217, V228, V248]
Exit stack: [V13, 0x28a, V217, V228, V248]

================================

Block 0x329
[0x329:0x32f]
---
Predecessors: [0x5e]
Successors: [0x330, 0x334]
---
0x329 JUMPDEST
0x32a CALLVALUE
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x329: JUMPDEST 
0x32a: V256 = CALLVALUE
0x32b: V257 = ISZERO V256
0x32c: V258 = 0x334
0x32f: JUMPI 0x334 V257
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x329]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V259 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x334
[0x334:0x347]
---
Predecessors: [0x329]
Successors: [0x8e0]
---
0x334 JUMPDEST
0x335 PUSH2 0x28a
0x338 PUSH1 0x1
0x33a PUSH1 0xa0
0x33c PUSH1 0x2
0x33e EXP
0x33f SUB
0x340 PUSH1 0x4
0x342 CALLDATALOAD
0x343 AND
0x344 PUSH2 0x8e0
0x347 JUMP
---
0x334: JUMPDEST 
0x335: V260 = 0x28a
0x338: V261 = 0x1
0x33a: V262 = 0xa0
0x33c: V263 = 0x2
0x33e: V264 = EXP 0x2 0xa0
0x33f: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x340: V266 = 0x4
0x342: V267 = CALLDATALOAD 0x4
0x343: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x344: V269 = 0x8e0
0x347: JUMP 0x8e0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28a, V268]
Exit stack: [V13, 0x28a, V268]

================================

Block 0x348
[0x348:0x34e]
---
Predecessors: [0x69]
Successors: [0x34f, 0x353]
---
0x348 JUMPDEST
0x349 CALLVALUE
0x34a ISZERO
0x34b PUSH2 0x353
0x34e JUMPI
---
0x348: JUMPDEST 
0x349: V270 = CALLVALUE
0x34a: V271 = ISZERO V270
0x34b: V272 = 0x353
0x34e: JUMPI 0x353 V271
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x348]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V273 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x353
[0x353:0x366]
---
Predecessors: [0x348]
Successors: [0x96a]
---
0x353 JUMPDEST
0x354 PUSH2 0x28a
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f PUSH1 0x4
0x361 CALLDATALOAD
0x362 AND
0x363 PUSH2 0x96a
0x366 JUMP
---
0x353: JUMPDEST 
0x354: V274 = 0x28a
0x357: V275 = 0x1
0x359: V276 = 0xa0
0x35b: V277 = 0x2
0x35d: V278 = EXP 0x2 0xa0
0x35e: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V280 = 0x4
0x361: V281 = CALLDATALOAD 0x4
0x362: V282 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x363: V283 = 0x96a
0x366: JUMP 0x96a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28a, V282]
Exit stack: [V13, 0x28a, V282]

================================

Block 0x367
[0x367:0x36d]
---
Predecessors: [0x74]
Successors: [0x36e, 0x372]
---
0x367 JUMPDEST
0x368 CALLVALUE
0x369 ISZERO
0x36a PUSH2 0x372
0x36d JUMPI
---
0x367: JUMPDEST 
0x368: V284 = CALLVALUE
0x369: V285 = ISZERO V284
0x36a: V286 = 0x372
0x36d: JUMPI 0x372 V285
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x36e
[0x36e:0x371]
---
Predecessors: [0x367]
Successors: []
---
0x36e PUSH1 0x0
0x370 DUP1
0x371 REVERT
---
0x36e: V287 = 0x0
0x371: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x372
[0x372:0x379]
---
Predecessors: [0x367]
Successors: [0x9e8]
---
0x372 JUMPDEST
0x373 PUSH2 0x28a
0x376 PUSH2 0x9e8
0x379 JUMP
---
0x372: JUMPDEST 
0x373: V288 = 0x28a
0x376: V289 = 0x9e8
0x379: JUMP 0x9e8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28a]
Exit stack: [V13, 0x28a]

================================

Block 0x37a
[0x37a:0x380]
---
Predecessors: [0x7f]
Successors: [0x381, 0x385]
---
0x37a JUMPDEST
0x37b CALLVALUE
0x37c ISZERO
0x37d PUSH2 0x385
0x380 JUMPI
---
0x37a: JUMPDEST 
0x37b: V290 = CALLVALUE
0x37c: V291 = ISZERO V290
0x37d: V292 = 0x385
0x380: JUMPI 0x385 V291
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x381
[0x381:0x384]
---
Predecessors: [0x37a]
Successors: []
---
0x381 PUSH1 0x0
0x383 DUP1
0x384 REVERT
---
0x381: V293 = 0x0
0x384: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x385
[0x385:0x398]
---
Predecessors: [0x37a]
Successors: [0xa75]
---
0x385 JUMPDEST
0x386 PUSH2 0x160
0x389 PUSH1 0x1
0x38b PUSH1 0xa0
0x38d PUSH1 0x2
0x38f EXP
0x390 SUB
0x391 PUSH1 0x4
0x393 CALLDATALOAD
0x394 AND
0x395 PUSH2 0xa75
0x398 JUMP
---
0x385: JUMPDEST 
0x386: V294 = 0x160
0x389: V295 = 0x1
0x38b: V296 = 0xa0
0x38d: V297 = 0x2
0x38f: V298 = EXP 0x2 0xa0
0x390: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x391: V300 = 0x4
0x393: V301 = CALLDATALOAD 0x4
0x394: V302 = AND V301 0xffffffffffffffffffffffffffffffffffffffff
0x395: V303 = 0xa75
0x398: JUMP 0xa75
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x160, V302]
Exit stack: [V13, 0x160, V302]

================================

Block 0x399
[0x399:0x39f]
---
Predecessors: [0x8a]
Successors: [0x3a0, 0x3a4]
---
0x399 JUMPDEST
0x39a CALLVALUE
0x39b ISZERO
0x39c PUSH2 0x3a4
0x39f JUMPI
---
0x399: JUMPDEST 
0x39a: V304 = CALLVALUE
0x39b: V305 = ISZERO V304
0x39c: V306 = 0x3a4
0x39f: JUMPI 0x3a4 V305
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x399]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V307 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a4
[0x3a4:0x3ab]
---
Predecessors: [0x399]
Successors: [0xa94]
---
0x3a4 JUMPDEST
0x3a5 PUSH2 0x20b
0x3a8 PUSH2 0xa94
0x3ab JUMP
---
0x3a4: JUMPDEST 
0x3a5: V308 = 0x20b
0x3a8: V309 = 0xa94
0x3ab: JUMP 0xa94
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x20b]
Exit stack: [V13, 0x20b]

================================

Block 0x3ac
[0x3ac:0x3b2]
---
Predecessors: [0x95]
Successors: [0x3b3, 0x3b7]
---
0x3ac JUMPDEST
0x3ad CALLVALUE
0x3ae ISZERO
0x3af PUSH2 0x3b7
0x3b2 JUMPI
---
0x3ac: JUMPDEST 
0x3ad: V310 = CALLVALUE
0x3ae: V311 = ISZERO V310
0x3af: V312 = 0x3b7
0x3b2: JUMPI 0x3b7 V311
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x3ac]
Successors: []
---
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 REVERT
---
0x3b3: V313 = 0x0
0x3b6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b7
[0x3b7:0x3ca]
---
Predecessors: [0x3ac]
Successors: [0xaa3]
---
0x3b7 JUMPDEST
0x3b8 PUSH2 0x28a
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 PUSH1 0x4
0x3c5 CALLDATALOAD
0x3c6 AND
0x3c7 PUSH2 0xaa3
0x3ca JUMP
---
0x3b7: JUMPDEST 
0x3b8: V314 = 0x28a
0x3bb: V315 = 0x1
0x3bd: V316 = 0xa0
0x3bf: V317 = 0x2
0x3c1: V318 = EXP 0x2 0xa0
0x3c2: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V320 = 0x4
0x3c5: V321 = CALLDATALOAD 0x4
0x3c6: V322 = AND V321 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V323 = 0xaa3
0x3ca: JUMP 0xaa3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28a, V322]
Exit stack: [V13, 0x28a, V322]

================================

Block 0x3cb
[0x3cb:0x40e]
---
Predecessors: [0xa0]
Successors: [0xcdf]
---
0x3cb JUMPDEST
0x3cc PUSH2 0x160
0x3cf PUSH1 0x4
0x3d1 PUSH1 0x24
0x3d3 DUP2
0x3d4 CALLDATALOAD
0x3d5 DUP2
0x3d6 DUP2
0x3d7 ADD
0x3d8 SWAP1
0x3d9 DUP4
0x3da ADD
0x3db CALLDATALOAD
0x3dc DUP1
0x3dd PUSH1 0x20
0x3df DUP2
0x3e0 DUP2
0x3e1 MUL
0x3e2 ADD
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 SWAP1
0x3e7 DUP2
0x3e8 ADD
0x3e9 PUSH1 0x40
0x3eb MSTORE
0x3ec DUP1
0x3ed SWAP4
0x3ee SWAP3
0x3ef SWAP2
0x3f0 SWAP1
0x3f1 DUP2
0x3f2 DUP2
0x3f3 MSTORE
0x3f4 PUSH1 0x20
0x3f6 ADD
0x3f7 DUP4
0x3f8 DUP4
0x3f9 PUSH1 0x20
0x3fb MUL
0x3fc DUP1
0x3fd DUP3
0x3fe DUP5
0x3ff CALLDATACOPY
0x400 POP
0x401 SWAP5
0x402 SWAP7
0x403 POP
0x404 PUSH2 0xcdf
0x407 SWAP6
0x408 POP
0x409 POP
0x40a POP
0x40b POP
0x40c POP
0x40d POP
0x40e JUMP
---
0x3cb: JUMPDEST 
0x3cc: V324 = 0x160
0x3cf: V325 = 0x4
0x3d1: V326 = 0x24
0x3d4: V327 = CALLDATALOAD 0x4
0x3d7: V328 = ADD V327 0x24
0x3da: V329 = ADD 0x4 V327
0x3db: V330 = CALLDATALOAD V329
0x3dd: V331 = 0x20
0x3e1: V332 = MUL 0x20 V330
0x3e2: V333 = ADD V332 0x20
0x3e3: V334 = 0x40
0x3e5: V335 = M[0x40]
0x3e8: V336 = ADD V335 V333
0x3e9: V337 = 0x40
0x3eb: M[0x40] = V336
0x3f3: M[V335] = V330
0x3f4: V338 = 0x20
0x3f6: V339 = ADD 0x20 V335
0x3f9: V340 = 0x20
0x3fb: V341 = MUL 0x20 V330
0x3ff: CALLDATACOPY V339 V328 V341
0x404: V342 = 0xcdf
0x40e: JUMP 0xcdf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x160, V335]
Exit stack: [V13, 0x160, V335]

================================

Block 0x40f
[0x40f:0x415]
---
Predecessors: [0xab]
Successors: [0x416, 0x41a]
---
0x40f JUMPDEST
0x410 CALLVALUE
0x411 ISZERO
0x412 PUSH2 0x41a
0x415 JUMPI
---
0x40f: JUMPDEST 
0x410: V343 = CALLVALUE
0x411: V344 = ISZERO V343
0x412: V345 = 0x41a
0x415: JUMPI 0x41a V344
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x416
[0x416:0x419]
---
Predecessors: [0x40f]
Successors: []
---
0x416 PUSH1 0x0
0x418 DUP1
0x419 REVERT
---
0x416: V346 = 0x0
0x419: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x41a
[0x41a:0x421]
---
Predecessors: [0x40f]
Successors: [0xda5]
---
0x41a JUMPDEST
0x41b PUSH2 0x20b
0x41e PUSH2 0xda5
0x421 JUMP
---
0x41a: JUMPDEST 
0x41b: V347 = 0x20b
0x41e: V348 = 0xda5
0x421: JUMP 0xda5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x20b]
Exit stack: [V13, 0x20b]

================================

Block 0x422
[0x422:0x428]
---
Predecessors: [0xb6]
Successors: [0x429, 0x42d]
---
0x422 JUMPDEST
0x423 CALLVALUE
0x424 ISZERO
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x422: JUMPDEST 
0x423: V349 = CALLVALUE
0x424: V350 = ISZERO V349
0x425: V351 = 0x42d
0x428: JUMPI 0x42d V350
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x422]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V352 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x42d
[0x42d:0x440]
---
Predecessors: [0x422]
Successors: [0xdb4]
---
0x42d JUMPDEST
0x42e PUSH2 0x28a
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 PUSH1 0x4
0x43b CALLDATALOAD
0x43c AND
0x43d PUSH2 0xdb4
0x440 JUMP
---
0x42d: JUMPDEST 
0x42e: V353 = 0x28a
0x431: V354 = 0x1
0x433: V355 = 0xa0
0x435: V356 = 0x2
0x437: V357 = EXP 0x2 0xa0
0x438: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x439: V359 = 0x4
0x43b: V360 = CALLDATALOAD 0x4
0x43c: V361 = AND V360 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V362 = 0xdb4
0x440: JUMP 0xdb4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28a, V361]
Exit stack: [V13, 0x28a, V361]

================================

Block 0x441
[0x441:0x447]
---
Predecessors: [0xc1]
Successors: [0x448, 0x44c]
---
0x441 JUMPDEST
0x442 CALLVALUE
0x443 ISZERO
0x444 PUSH2 0x44c
0x447 JUMPI
---
0x441: JUMPDEST 
0x442: V363 = CALLVALUE
0x443: V364 = ISZERO V363
0x444: V365 = 0x44c
0x447: JUMPI 0x44c V364
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x448
[0x448:0x44b]
---
Predecessors: [0x441]
Successors: []
---
0x448 PUSH1 0x0
0x44a DUP1
0x44b REVERT
---
0x448: V366 = 0x0
0x44b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x44c
[0x44c:0x453]
---
Predecessors: [0x441]
Successors: [0xe19]
---
0x44c JUMPDEST
0x44d PUSH2 0x20b
0x450 PUSH2 0xe19
0x453 JUMP
---
0x44c: JUMPDEST 
0x44d: V367 = 0x20b
0x450: V368 = 0xe19
0x453: JUMP 0xe19
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x20b]
Exit stack: [V13, 0x20b]

================================

Block 0x454
[0x454:0x45a]
---
Predecessors: [0xcc]
Successors: [0x45b, 0x45f]
---
0x454 JUMPDEST
0x455 CALLVALUE
0x456 ISZERO
0x457 PUSH2 0x45f
0x45a JUMPI
---
0x454: JUMPDEST 
0x455: V369 = CALLVALUE
0x456: V370 = ISZERO V369
0x457: V371 = 0x45f
0x45a: JUMPI 0x45f V370
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x45b
[0x45b:0x45e]
---
Predecessors: [0x454]
Successors: []
---
0x45b PUSH1 0x0
0x45d DUP1
0x45e REVERT
---
0x45b: V372 = 0x0
0x45e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x45f
[0x45f:0x4b0]
---
Predecessors: [0x454]
Successors: [0xe28]
---
0x45f JUMPDEST
0x460 PUSH2 0x28a
0x463 PUSH1 0x4
0x465 DUP1
0x466 CALLDATALOAD
0x467 PUSH1 0x1
0x469 PUSH1 0xa0
0x46b PUSH1 0x2
0x46d EXP
0x46e SUB
0x46f AND
0x470 SWAP1
0x471 PUSH1 0x44
0x473 PUSH1 0x24
0x475 DUP1
0x476 CALLDATALOAD
0x477 SWAP1
0x478 DUP2
0x479 ADD
0x47a SWAP1
0x47b DUP4
0x47c ADD
0x47d CALLDATALOAD
0x47e DUP1
0x47f PUSH1 0x20
0x481 DUP1
0x482 DUP3
0x483 MUL
0x484 ADD
0x485 PUSH1 0x40
0x487 MLOAD
0x488 SWAP1
0x489 DUP2
0x48a ADD
0x48b PUSH1 0x40
0x48d MSTORE
0x48e DUP1
0x48f SWAP4
0x490 SWAP3
0x491 SWAP2
0x492 SWAP1
0x493 DUP2
0x494 DUP2
0x495 MSTORE
0x496 PUSH1 0x20
0x498 ADD
0x499 DUP4
0x49a DUP4
0x49b PUSH1 0x20
0x49d MUL
0x49e DUP1
0x49f DUP3
0x4a0 DUP5
0x4a1 CALLDATACOPY
0x4a2 POP
0x4a3 SWAP5
0x4a4 SWAP7
0x4a5 POP
0x4a6 PUSH2 0xe28
0x4a9 SWAP6
0x4aa POP
0x4ab POP
0x4ac POP
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 JUMP
---
0x45f: JUMPDEST 
0x460: V373 = 0x28a
0x463: V374 = 0x4
0x466: V375 = CALLDATALOAD 0x4
0x467: V376 = 0x1
0x469: V377 = 0xa0
0x46b: V378 = 0x2
0x46d: V379 = EXP 0x2 0xa0
0x46e: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46f: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x471: V382 = 0x44
0x473: V383 = 0x24
0x476: V384 = CALLDATALOAD 0x24
0x479: V385 = ADD V384 0x24
0x47c: V386 = ADD 0x4 V384
0x47d: V387 = CALLDATALOAD V386
0x47f: V388 = 0x20
0x483: V389 = MUL V387 0x20
0x484: V390 = ADD V389 0x20
0x485: V391 = 0x40
0x487: V392 = M[0x40]
0x48a: V393 = ADD V392 V390
0x48b: V394 = 0x40
0x48d: M[0x40] = V393
0x495: M[V392] = V387
0x496: V395 = 0x20
0x498: V396 = ADD 0x20 V392
0x49b: V397 = 0x20
0x49d: V398 = MUL 0x20 V387
0x4a1: CALLDATACOPY V396 V385 V398
0x4a6: V399 = 0xe28
0x4b0: JUMP 0xe28
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28a, V381, V392]
Exit stack: [V13, 0x28a, V381, V392]

================================

Block 0x4b1
[0x4b1:0x4bf]
---
Predecessors: [0xdc]
Successors: [0x4c0]
---
0x4b1 JUMPDEST
0x4b2 PUSH1 0x0
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc ADDRESS
0x4bd AND
0x4be BALANCE
0x4bf DUP2
---
0x4b1: JUMPDEST 
0x4b2: V400 = 0x0
0x4b4: V401 = 0x1
0x4b6: V402 = 0xa0
0x4b8: V403 = 0x2
0x4ba: V404 = EXP 0x2 0xa0
0x4bb: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bc: V406 = ADDRESS
0x4bd: V407 = AND V406 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V408 = BALANCE V407
---
Entry stack: [V13, 0x160, V77, V97]
Stack pops: 0
Stack additions: [0x0, V408, 0x0]
Exit stack: [V13, 0x160, V77, V97, 0x0, V408, 0x0]

================================

Block 0x4c0
[0x4c0:0x4c9]
---
Predecessors: [0x4b1, 0x54b]
Successors: [0x4ca, 0x57e]
---
0x4c0 JUMPDEST
0x4c1 DUP5
0x4c2 MLOAD
0x4c3 DUP2
0x4c4 LT
0x4c5 ISZERO
0x4c6 PUSH2 0x57e
0x4c9 JUMPI
---
0x4c0: JUMPDEST 
0x4c2: V409 = M[S4]
0x4c4: V410 = LT S0 V409
0x4c5: V411 = ISZERO V410
0x4c6: V412 = 0x57e
0x4c9: JUMPI 0x57e V411
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4ca
[0x4ca:0x4d6]
---
Predecessors: [0x4c0]
Successors: [0x4d7, 0x4d8]
---
0x4ca PUSH2 0x4fd
0x4cd DUP6
0x4ce DUP3
0x4cf DUP2
0x4d0 MLOAD
0x4d1 DUP2
0x4d2 LT
0x4d3 PUSH2 0x4d8
0x4d6 JUMPI
---
0x4ca: V413 = 0x4fd
0x4d0: V414 = M[S4]
0x4d2: V415 = LT S0 V414
0x4d3: V416 = 0x4d8
0x4d6: JUMPI 0x4d8 V415
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x4fd, S4, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, 0x4fd, S4, S0]

================================

Block 0x4d7
[0x4d7:0x4d7]
---
Predecessors: [0x4ca]
Successors: []
---
0x4d7 INVALID
---
0x4d7: INVALID 
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x4fd, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x4fd, S1, S0]

================================

Block 0x4d8
[0x4d8:0x4ec]
---
Predecessors: [0x4ca]
Successors: [0x4ed, 0x4ee]
---
0x4d8 JUMPDEST
0x4d9 SWAP1
0x4da PUSH1 0x20
0x4dc ADD
0x4dd SWAP1
0x4de PUSH1 0x20
0x4e0 MUL
0x4e1 ADD
0x4e2 MLOAD
0x4e3 DUP6
0x4e4 DUP4
0x4e5 DUP2
0x4e6 MLOAD
0x4e7 DUP2
0x4e8 LT
0x4e9 PUSH2 0x4ee
0x4ec JUMPI
---
0x4d8: JUMPDEST 
0x4da: V417 = 0x20
0x4dc: V418 = ADD 0x20 S1
0x4de: V419 = 0x20
0x4e0: V420 = MUL 0x20 S0
0x4e1: V421 = ADD V420 V418
0x4e2: V422 = M[V421]
0x4e6: V423 = M[S6]
0x4e8: V424 = LT S3 V423
0x4e9: V425 = 0x4ee
0x4ec: JUMPI 0x4ee V424
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x4fd, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V422, S6, S3]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x4fd, V422, S6, S3]

================================

Block 0x4ed
[0x4ed:0x4ed]
---
Predecessors: [0x4d8]
Successors: []
---
0x4ed INVALID
---
0x4ed: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, 0x4fd, V422, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, 0x4fd, V422, S1, S0]

================================

Block 0x4ee
[0x4ee:0x4fc]
---
Predecessors: [0x4d8]
Successors: [0xefa]
---
0x4ee JUMPDEST
0x4ef SWAP1
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 SWAP1
0x4f4 PUSH1 0x20
0x4f6 MUL
0x4f7 ADD
0x4f8 MLOAD
0x4f9 PUSH2 0xefa
0x4fc JUMP
---
0x4ee: JUMPDEST 
0x4f0: V426 = 0x20
0x4f2: V427 = ADD 0x20 S1
0x4f4: V428 = 0x20
0x4f6: V429 = MUL 0x20 S0
0x4f7: V430 = ADD V429 V427
0x4f8: V431 = M[V430]
0x4f9: V432 = 0xefa
0x4fc: JUMP 0xefa
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, 0x4fd, V422, S1, S0]
Stack pops: 2
Stack additions: [V431]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, 0x4fd, V422, V431]

================================

Block 0x4fd
[0x4fd:0x533]
---
Predecessors: [0xf3d]
Successors: [0x534, 0x535]
---
0x4fd JUMPDEST
0x4fe CALLVALUE
0x4ff CALLER
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 PUSH1 0x2
0x506 EXP
0x507 SUB
0x508 AND
0x509 PUSH32 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7
0x52a DUP8
0x52b DUP5
0x52c DUP2
0x52d MLOAD
0x52e DUP2
0x52f LT
0x530 PUSH2 0x535
0x533 JUMPI
---
0x4fd: JUMPDEST 
0x4fe: V433 = CALLVALUE
0x4ff: V434 = CALLER
0x500: V435 = 0x1
0x502: V436 = 0xa0
0x504: V437 = 0x2
0x506: V438 = EXP 0x2 0xa0
0x507: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x508: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x509: V441 = 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7
0x52d: V442 = M[S4]
0x52f: V443 = LT S0 V442
0x530: V444 = 0x535
0x533: JUMPI 0x535 V443
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, S4, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, S4, S0]

================================

Block 0x534
[0x534:0x534]
---
Predecessors: [0x4fd]
Successors: []
---
0x534 INVALID
---
0x534: INVALID 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, S1, S0]

================================

Block 0x535
[0x535:0x549]
---
Predecessors: [0x4fd]
Successors: [0x54a, 0x54b]
---
0x535 JUMPDEST
0x536 SWAP1
0x537 PUSH1 0x20
0x539 ADD
0x53a SWAP1
0x53b PUSH1 0x20
0x53d MUL
0x53e ADD
0x53f MLOAD
0x540 DUP8
0x541 DUP6
0x542 DUP2
0x543 MLOAD
0x544 DUP2
0x545 LT
0x546 PUSH2 0x54b
0x549 JUMPI
---
0x535: JUMPDEST 
0x537: V445 = 0x20
0x539: V446 = ADD 0x20 S1
0x53b: V447 = 0x20
0x53d: V448 = MUL 0x20 S0
0x53e: V449 = ADD V448 V446
0x53f: V450 = M[V449]
0x543: V451 = M[S8]
0x545: V452 = LT S5 V451
0x546: V453 = 0x54b
0x549: JUMPI 0x54b V452
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V450, S8, S5]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, V450, S8, S5]

================================

Block 0x54a
[0x54a:0x54a]
---
Predecessors: [0x535]
Successors: []
---
0x54a INVALID
---
0x54a: INVALID 
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, V450, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, V450, S1, S0]

================================

Block 0x54b
[0x54b:0x57d]
---
Predecessors: [0x535]
Successors: [0x4c0]
---
0x54b JUMPDEST
0x54c SWAP1
0x54d PUSH1 0x20
0x54f ADD
0x550 SWAP1
0x551 PUSH1 0x20
0x553 MUL
0x554 ADD
0x555 MLOAD
0x556 PUSH1 0x40
0x558 MLOAD
0x559 PUSH1 0x1
0x55b PUSH1 0xa0
0x55d PUSH1 0x2
0x55f EXP
0x560 SUB
0x561 SWAP1
0x562 SWAP3
0x563 AND
0x564 DUP3
0x565 MSTORE
0x566 PUSH1 0x20
0x568 DUP3
0x569 ADD
0x56a MSTORE
0x56b PUSH1 0x40
0x56d SWAP1
0x56e DUP2
0x56f ADD
0x570 SWAP1
0x571 MLOAD
0x572 DUP1
0x573 SWAP2
0x574 SUB
0x575 SWAP1
0x576 LOG3
0x577 PUSH1 0x1
0x579 ADD
0x57a PUSH2 0x4c0
0x57d JUMP
---
0x54b: JUMPDEST 
0x54d: V454 = 0x20
0x54f: V455 = ADD 0x20 S1
0x551: V456 = 0x20
0x553: V457 = MUL 0x20 S0
0x554: V458 = ADD V457 V455
0x555: V459 = M[V458]
0x556: V460 = 0x40
0x558: V461 = M[0x40]
0x559: V462 = 0x1
0x55b: V463 = 0xa0
0x55d: V464 = 0x2
0x55f: V465 = EXP 0x2 0xa0
0x560: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x563: V467 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0x565: M[V461] = V467
0x566: V468 = 0x20
0x569: V469 = ADD V461 0x20
0x56a: M[V469] = V459
0x56b: V470 = 0x40
0x56f: V471 = ADD 0x40 V461
0x571: V472 = M[0x40]
0x574: V473 = SUB V471 V472
0x576: LOG V472 V473 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7 V440 V433
0x577: V474 = 0x1
0x579: V475 = ADD 0x1 S6
0x57a: V476 = 0x4c0
0x57d: JUMP 0x4c0
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, V433, V440, 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7, V450, S1, S0]
Stack pops: 7
Stack additions: [V475]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, V475]

================================

Block 0x57e
[0x57e:0x591]
---
Predecessors: [0x4c0, 0x5b0]
Successors: [0x592, 0x596]
---
0x57e JUMPDEST
0x57f CALLVALUE
0x580 DUP3
0x581 SUB
0x582 PUSH1 0x1
0x584 PUSH1 0xa0
0x586 PUSH1 0x2
0x588 EXP
0x589 SUB
0x58a ADDRESS
0x58b AND
0x58c BALANCE
0x58d EQ
0x58e PUSH2 0x596
0x591 JUMPI
---
0x57e: JUMPDEST 
0x57f: V477 = CALLVALUE
0x581: V478 = SUB S1 V477
0x582: V479 = 0x1
0x584: V480 = 0xa0
0x586: V481 = 0x2
0x588: V482 = EXP 0x2 0xa0
0x589: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58a: V484 = ADDRESS
0x58b: V485 = AND V484 0xffffffffffffffffffffffffffffffffffffffff
0x58c: V486 = BALANCE V485
0x58d: V487 = EQ V486 V478
0x58e: V488 = 0x596
0x591: JUMPI 0x596 V487
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x592
[0x592:0x595]
---
Predecessors: [0x57e]
Successors: []
---
0x592 PUSH1 0x0
0x594 DUP1
0x595 REVERT
---
0x592: V489 = 0x0
0x595: REVERT 0x0 0x0
---
Entry stack: [V13, 0x160, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x160, S4, S3, 0x0, S1, S0]

================================

Block 0x596
[0x596:0x5a0]
---
Predecessors: [0x57e]
Successors: [0x160]
---
0x596 JUMPDEST
0x597 POP
0x598 PUSH1 0x1
0x59a SWAP5
0x59b SWAP4
0x59c POP
0x59d POP
0x59e POP
0x59f POP
0x5a0 JUMP
---
0x596: JUMPDEST 
0x598: V490 = 0x1
0x5a0: JUMP 0x160
---
Entry stack: [V13, 0x160, S4, S3, 0x0, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x5a1
[0x5a1:0x5af]
---
Predecessors: [0x174]
Successors: [0x5b0]
---
0x5a1 JUMPDEST
0x5a2 PUSH1 0x0
0x5a4 PUSH1 0x1
0x5a6 PUSH1 0xa0
0x5a8 PUSH1 0x2
0x5aa EXP
0x5ab SUB
0x5ac ADDRESS
0x5ad AND
0x5ae BALANCE
0x5af DUP2
---
0x5a1: JUMPDEST 
0x5a2: V491 = 0x0
0x5a4: V492 = 0x1
0x5a6: V493 = 0xa0
0x5a8: V494 = 0x2
0x5aa: V495 = EXP 0x2 0xa0
0x5ab: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ac: V497 = ADDRESS
0x5ad: V498 = AND V497 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V499 = BALANCE V498
---
Entry stack: [V13, 0x160, V125, V145]
Stack pops: 0
Stack additions: [0x0, V499, 0x0]
Exit stack: [V13, 0x160, V125, V145, 0x0, V499, 0x0]

================================

Block 0x5b0
[0x5b0:0x5b9]
---
Predecessors: [0x5a1, 0x63b]
Successors: [0x57e, 0x5ba]
---
0x5b0 JUMPDEST
0x5b1 DUP5
0x5b2 MLOAD
0x5b3 DUP2
0x5b4 LT
0x5b5 ISZERO
0x5b6 PUSH2 0x57e
0x5b9 JUMPI
---
0x5b0: JUMPDEST 
0x5b2: V500 = M[S4]
0x5b4: V501 = LT S0 V500
0x5b5: V502 = ISZERO V501
0x5b6: V503 = 0x57e
0x5b9: JUMPI 0x57e V502
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5ba
[0x5ba:0x5c6]
---
Predecessors: [0x5b0]
Successors: [0x5c7, 0x5c8]
---
0x5ba PUSH2 0x5ed
0x5bd DUP6
0x5be DUP3
0x5bf DUP2
0x5c0 MLOAD
0x5c1 DUP2
0x5c2 LT
0x5c3 PUSH2 0x5c8
0x5c6 JUMPI
---
0x5ba: V504 = 0x5ed
0x5c0: V505 = M[S4]
0x5c2: V506 = LT S0 V505
0x5c3: V507 = 0x5c8
0x5c6: JUMPI 0x5c8 V506
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x5ed, S4, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, 0x5ed, S4, S0]

================================

Block 0x5c7
[0x5c7:0x5c7]
---
Predecessors: [0x5ba]
Successors: []
---
0x5c7 INVALID
---
0x5c7: INVALID 
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x5ed, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x5ed, S1, S0]

================================

Block 0x5c8
[0x5c8:0x5dc]
---
Predecessors: [0x5ba]
Successors: [0x5dd, 0x5de]
---
0x5c8 JUMPDEST
0x5c9 SWAP1
0x5ca PUSH1 0x20
0x5cc ADD
0x5cd SWAP1
0x5ce PUSH1 0x20
0x5d0 MUL
0x5d1 ADD
0x5d2 MLOAD
0x5d3 DUP6
0x5d4 DUP4
0x5d5 DUP2
0x5d6 MLOAD
0x5d7 DUP2
0x5d8 LT
0x5d9 PUSH2 0x5de
0x5dc JUMPI
---
0x5c8: JUMPDEST 
0x5ca: V508 = 0x20
0x5cc: V509 = ADD 0x20 S1
0x5ce: V510 = 0x20
0x5d0: V511 = MUL 0x20 S0
0x5d1: V512 = ADD V511 V509
0x5d2: V513 = M[V512]
0x5d6: V514 = M[S6]
0x5d8: V515 = LT S3 V514
0x5d9: V516 = 0x5de
0x5dc: JUMPI 0x5de V515
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x5ed, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V513, S6, S3]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x5ed, V513, S6, S3]

================================

Block 0x5dd
[0x5dd:0x5dd]
---
Predecessors: [0x5c8]
Successors: []
---
0x5dd INVALID
---
0x5dd: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, 0x5ed, V513, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, 0x5ed, V513, S1, S0]

================================

Block 0x5de
[0x5de:0x5ec]
---
Predecessors: [0x5c8]
Successors: [0xf41]
---
0x5de JUMPDEST
0x5df SWAP1
0x5e0 PUSH1 0x20
0x5e2 ADD
0x5e3 SWAP1
0x5e4 PUSH1 0x20
0x5e6 MUL
0x5e7 ADD
0x5e8 MLOAD
0x5e9 PUSH2 0xf41
0x5ec JUMP
---
0x5de: JUMPDEST 
0x5e0: V517 = 0x20
0x5e2: V518 = ADD 0x20 S1
0x5e4: V519 = 0x20
0x5e6: V520 = MUL 0x20 S0
0x5e7: V521 = ADD V520 V518
0x5e8: V522 = M[V521]
0x5e9: V523 = 0xf41
0x5ec: JUMP 0xf41
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, 0x5ed, V513, S1, S0]
Stack pops: 2
Stack additions: [V522]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, 0x5ed, V513, V522]

================================

Block 0x5ed
[0x5ed:0x623]
---
Predecessors: [0xf3d]
Successors: [0x624, 0x625]
---
0x5ed JUMPDEST
0x5ee CALLVALUE
0x5ef CALLER
0x5f0 PUSH1 0x1
0x5f2 PUSH1 0xa0
0x5f4 PUSH1 0x2
0x5f6 EXP
0x5f7 SUB
0x5f8 AND
0x5f9 PUSH32 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0
0x61a DUP8
0x61b DUP5
0x61c DUP2
0x61d MLOAD
0x61e DUP2
0x61f LT
0x620 PUSH2 0x625
0x623 JUMPI
---
0x5ed: JUMPDEST 
0x5ee: V524 = CALLVALUE
0x5ef: V525 = CALLER
0x5f0: V526 = 0x1
0x5f2: V527 = 0xa0
0x5f4: V528 = 0x2
0x5f6: V529 = EXP 0x2 0xa0
0x5f7: V530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f8: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x5f9: V532 = 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0
0x61d: V533 = M[S4]
0x61f: V534 = LT S0 V533
0x620: V535 = 0x625
0x623: JUMPI 0x625 V534
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, S4, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, S4, S0]

================================

Block 0x624
[0x624:0x624]
---
Predecessors: [0x5ed]
Successors: []
---
0x624 INVALID
---
0x624: INVALID 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, S1, S0]

================================

Block 0x625
[0x625:0x639]
---
Predecessors: [0x5ed]
Successors: [0x63a, 0x63b]
---
0x625 JUMPDEST
0x626 SWAP1
0x627 PUSH1 0x20
0x629 ADD
0x62a SWAP1
0x62b PUSH1 0x20
0x62d MUL
0x62e ADD
0x62f MLOAD
0x630 DUP8
0x631 DUP6
0x632 DUP2
0x633 MLOAD
0x634 DUP2
0x635 LT
0x636 PUSH2 0x63b
0x639 JUMPI
---
0x625: JUMPDEST 
0x627: V536 = 0x20
0x629: V537 = ADD 0x20 S1
0x62b: V538 = 0x20
0x62d: V539 = MUL 0x20 S0
0x62e: V540 = ADD V539 V537
0x62f: V541 = M[V540]
0x633: V542 = M[S8]
0x635: V543 = LT S5 V542
0x636: V544 = 0x63b
0x639: JUMPI 0x63b V543
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V541, S8, S5]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, V541, S8, S5]

================================

Block 0x63a
[0x63a:0x63a]
---
Predecessors: [0x625]
Successors: []
---
0x63a INVALID
---
0x63a: INVALID 
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, V541, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, V541, S1, S0]

================================

Block 0x63b
[0x63b:0x66d]
---
Predecessors: [0x625]
Successors: [0x5b0]
---
0x63b JUMPDEST
0x63c SWAP1
0x63d PUSH1 0x20
0x63f ADD
0x640 SWAP1
0x641 PUSH1 0x20
0x643 MUL
0x644 ADD
0x645 MLOAD
0x646 PUSH1 0x40
0x648 MLOAD
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 SWAP1
0x652 SWAP3
0x653 AND
0x654 DUP3
0x655 MSTORE
0x656 PUSH1 0x20
0x658 DUP3
0x659 ADD
0x65a MSTORE
0x65b PUSH1 0x40
0x65d SWAP1
0x65e DUP2
0x65f ADD
0x660 SWAP1
0x661 MLOAD
0x662 DUP1
0x663 SWAP2
0x664 SUB
0x665 SWAP1
0x666 LOG3
0x667 PUSH1 0x1
0x669 ADD
0x66a PUSH2 0x5b0
0x66d JUMP
---
0x63b: JUMPDEST 
0x63d: V545 = 0x20
0x63f: V546 = ADD 0x20 S1
0x641: V547 = 0x20
0x643: V548 = MUL 0x20 S0
0x644: V549 = ADD V548 V546
0x645: V550 = M[V549]
0x646: V551 = 0x40
0x648: V552 = M[0x40]
0x649: V553 = 0x1
0x64b: V554 = 0xa0
0x64d: V555 = 0x2
0x64f: V556 = EXP 0x2 0xa0
0x650: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x653: V558 = AND V541 0xffffffffffffffffffffffffffffffffffffffff
0x655: M[V552] = V558
0x656: V559 = 0x20
0x659: V560 = ADD V552 0x20
0x65a: M[V560] = V550
0x65b: V561 = 0x40
0x65f: V562 = ADD 0x40 V552
0x661: V563 = M[0x40]
0x664: V564 = SUB V562 V563
0x666: LOG V563 V564 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0 V531 V524
0x667: V565 = 0x1
0x669: V566 = ADD 0x1 S6
0x66a: V567 = 0x5b0
0x66d: JUMP 0x5b0
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, V524, V531, 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0, V541, S1, S0]
Stack pops: 7
Stack additions: [V566]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, V566]

================================

Block 0x66e
[0x66e:0x67c]
---
Predecessors: [0x203]
Successors: [0x20b]
---
0x66e JUMPDEST
0x66f PUSH1 0x2
0x671 SLOAD
0x672 PUSH1 0x1
0x674 PUSH1 0xa0
0x676 PUSH1 0x2
0x678 EXP
0x679 SUB
0x67a AND
0x67b DUP2
0x67c JUMP
---
0x66e: JUMPDEST 
0x66f: V568 = 0x2
0x671: V569 = S[0x2]
0x672: V570 = 0x1
0x674: V571 = 0xa0
0x676: V572 = 0x2
0x678: V573 = EXP 0x2 0xa0
0x679: V574 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67a: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x67c: JUMP 0x20b
---
Entry stack: [V13, 0x20b]
Stack pops: 1
Stack additions: [S0, V575]
Exit stack: [V13, 0x20b, V575]

================================

Block 0x67d
[0x67d:0x68d]
---
Predecessors: [0x227]
Successors: [0x68e]
---
0x67d JUMPDEST
0x67e PUSH1 0x0
0x680 PUSH1 0x1
0x682 PUSH1 0xa0
0x684 PUSH1 0x2
0x686 EXP
0x687 SUB
0x688 ADDRESS
0x689 AND
0x68a BALANCE
0x68b DUP2
0x68c DUP1
0x68d DUP1
---
0x67d: JUMPDEST 
0x67e: V576 = 0x0
0x680: V577 = 0x1
0x682: V578 = 0xa0
0x684: V579 = 0x2
0x686: V580 = EXP 0x2 0xa0
0x687: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x688: V582 = ADDRESS
0x689: V583 = AND V582 0xffffffffffffffffffffffffffffffffffffffff
0x68a: V584 = BALANCE V583
---
Entry stack: [V13, 0x160, V183]
Stack pops: 0
Stack additions: [0x0, V584, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x160, V183, 0x0, V584, 0x0, 0x0, 0x0]

================================

Block 0x68e
[0x68e:0x697]
---
Predecessors: [0x67d, 0x6e9]
Successors: [0x698, 0x743]
---
0x68e JUMPDEST
0x68f DUP6
0x690 MLOAD
0x691 DUP4
0x692 LT
0x693 ISZERO
0x694 PUSH2 0x743
0x697 JUMPI
---
0x68e: JUMPDEST 
0x690: V585 = M[S5]
0x692: V586 = LT S2 V585
0x693: V587 = ISZERO V586
0x694: V588 = 0x743
0x697: JUMPI 0x743 V587
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x698
[0x698:0x6a3]
---
Predecessors: [0x68e]
Successors: [0x6a4, 0x6a5]
---
0x698 PUSH1 0x60
0x69a DUP7
0x69b DUP5
0x69c DUP2
0x69d MLOAD
0x69e DUP2
0x69f LT
0x6a0 PUSH2 0x6a5
0x6a3 JUMPI
---
0x698: V589 = 0x60
0x69d: V590 = M[S5]
0x69f: V591 = LT S2 V590
0x6a0: V592 = 0x6a5
0x6a3: JUMPI 0x6a5 V591
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x60, S5, S2]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, 0x60, S5, S2]

================================

Block 0x6a4
[0x6a4:0x6a4]
---
Predecessors: [0x698]
Successors: []
---
0x6a4 INVALID
---
0x6a4: INVALID 
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]

================================

Block 0x6a5
[0x6a5:0x6c3]
---
Predecessors: [0x698]
Successors: [0x6c4, 0x6c5]
---
0x6a5 JUMPDEST
0x6a6 SWAP1
0x6a7 PUSH1 0x20
0x6a9 ADD
0x6aa SWAP1
0x6ab PUSH1 0x20
0x6ad MUL
0x6ae ADD
0x6af MLOAD
0x6b0 PUSH1 0x2
0x6b2 SWAP2
0x6b3 SWAP1
0x6b4 SWAP2
0x6b5 EXP
0x6b6 SWAP1
0x6b7 DIV
0x6b8 SWAP2
0x6b9 POP
0x6ba DUP6
0x6bb DUP4
0x6bc DUP2
0x6bd MLOAD
0x6be DUP2
0x6bf LT
0x6c0 PUSH2 0x6c5
0x6c3 JUMPI
---
0x6a5: JUMPDEST 
0x6a7: V593 = 0x20
0x6a9: V594 = ADD 0x20 S1
0x6ab: V595 = 0x20
0x6ad: V596 = MUL 0x20 S0
0x6ae: V597 = ADD V596 V594
0x6af: V598 = M[V597]
0x6b0: V599 = 0x2
0x6b5: V600 = EXP 0x2 0x60
0x6b7: V601 = DIV V598 0x1000000000000000000000000
0x6bd: V602 = M[S8]
0x6bf: V603 = LT S5 V602
0x6c0: V604 = 0x6c5
0x6c3: JUMPI 0x6c5 V603
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V601, S3, S8, S5]
Exit stack: [V13, S9, S8, S7, S6, S5, V601, S3, S8, S5]

================================

Block 0x6c4
[0x6c4:0x6c4]
---
Predecessors: [0x6a5]
Successors: []
---
0x6c4 INVALID
---
0x6c4: INVALID 
---
Entry stack: [V13, S8, S7, S6, S5, S4, V601, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, V601, S2, S1, S0]

================================

Block 0x6c5
[0x6c5:0x6e8]
---
Predecessors: [0x6a5]
Successors: [0xf41]
---
0x6c5 JUMPDEST
0x6c6 SWAP1
0x6c7 PUSH1 0x20
0x6c9 ADD
0x6ca SWAP1
0x6cb PUSH1 0x20
0x6cd MUL
0x6ce ADD
0x6cf MLOAD
0x6d0 PUSH12 0xffffffffffffffffffffffff
0x6dd AND
0x6de SWAP1
0x6df POP
0x6e0 PUSH2 0x6e9
0x6e3 DUP3
0x6e4 DUP3
0x6e5 PUSH2 0xf41
0x6e8 JUMP
---
0x6c5: JUMPDEST 
0x6c7: V605 = 0x20
0x6c9: V606 = ADD 0x20 S1
0x6cb: V607 = 0x20
0x6cd: V608 = MUL 0x20 S0
0x6ce: V609 = ADD V608 V606
0x6cf: V610 = M[V609]
0x6d0: V611 = 0xffffffffffffffffffffffff
0x6dd: V612 = AND 0xffffffffffffffffffffffff V610
0x6e0: V613 = 0x6e9
0x6e5: V614 = 0xf41
0x6e8: JUMP 0xf41
---
Entry stack: [V13, S8, S7, S6, S5, S4, V601, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, V612, 0x6e9, S3, V612]
Exit stack: [V13, S8, S7, S6, S5, S4, V601, V612, 0x6e9, V601, V612]

================================

Block 0x6e9
[0x6e9:0x742]
---
Predecessors: [0xf3d]
Successors: [0x68e]
---
0x6e9 JUMPDEST
0x6ea CALLVALUE
0x6eb CALLER
0x6ec PUSH1 0x1
0x6ee PUSH1 0xa0
0x6f0 PUSH1 0x2
0x6f2 EXP
0x6f3 SUB
0x6f4 AND
0x6f5 PUSH32 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0
0x716 DUP5
0x717 DUP5
0x718 PUSH1 0x40
0x71a MLOAD
0x71b PUSH1 0x1
0x71d PUSH1 0xa0
0x71f PUSH1 0x2
0x721 EXP
0x722 SUB
0x723 SWAP1
0x724 SWAP3
0x725 AND
0x726 DUP3
0x727 MSTORE
0x728 PUSH1 0x20
0x72a DUP3
0x72b ADD
0x72c MSTORE
0x72d PUSH1 0x40
0x72f SWAP1
0x730 DUP2
0x731 ADD
0x732 SWAP1
0x733 MLOAD
0x734 DUP1
0x735 SWAP2
0x736 SUB
0x737 SWAP1
0x738 LOG3
0x739 PUSH1 0x1
0x73b SWAP1
0x73c SWAP3
0x73d ADD
0x73e SWAP2
0x73f PUSH2 0x68e
0x742 JUMP
---
0x6e9: JUMPDEST 
0x6ea: V615 = CALLVALUE
0x6eb: V616 = CALLER
0x6ec: V617 = 0x1
0x6ee: V618 = 0xa0
0x6f0: V619 = 0x2
0x6f2: V620 = EXP 0x2 0xa0
0x6f3: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f4: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x6f5: V623 = 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0
0x718: V624 = 0x40
0x71a: V625 = M[0x40]
0x71b: V626 = 0x1
0x71d: V627 = 0xa0
0x71f: V628 = 0x2
0x721: V629 = EXP 0x2 0xa0
0x722: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x725: V631 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x727: M[V625] = V631
0x728: V632 = 0x20
0x72b: V633 = ADD V625 0x20
0x72c: M[V633] = S0
0x72d: V634 = 0x40
0x731: V635 = ADD 0x40 V625
0x733: V636 = M[0x40]
0x736: V637 = SUB V635 V636
0x738: LOG V636 V637 0x319e0008dcdeba1f31169497fb0f35d31b2b2f481c714d1f50640e86ac6c3bb0 V622 V615
0x739: V638 = 0x1
0x73d: V639 = ADD S2 0x1
0x73f: V640 = 0x68e
0x742: JUMP 0x68e
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V639, S1, S0]
Exit stack: [V13, S6, S5, S4, S3, V639, S1, S0]

================================

Block 0x743
[0x743:0x756]
---
Predecessors: [0x68e, 0xcf0]
Successors: [0x757, 0x75b]
---
0x743 JUMPDEST
0x744 CALLVALUE
0x745 DUP5
0x746 SUB
0x747 PUSH1 0x1
0x749 PUSH1 0xa0
0x74b PUSH1 0x2
0x74d EXP
0x74e SUB
0x74f ADDRESS
0x750 AND
0x751 BALANCE
0x752 EQ
0x753 PUSH2 0x75b
0x756 JUMPI
---
0x743: JUMPDEST 
0x744: V641 = CALLVALUE
0x746: V642 = SUB S3 V641
0x747: V643 = 0x1
0x749: V644 = 0xa0
0x74b: V645 = 0x2
0x74d: V646 = EXP 0x2 0xa0
0x74e: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74f: V648 = ADDRESS
0x750: V649 = AND V648 0xffffffffffffffffffffffffffffffffffffffff
0x751: V650 = BALANCE V649
0x752: V651 = EQ V650 V642
0x753: V652 = 0x75b
0x756: JUMPI 0x75b V651
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x757
[0x757:0x75a]
---
Predecessors: [0x743]
Successors: []
---
0x757 PUSH1 0x0
0x759 DUP1
0x75a REVERT
---
0x757: V653 = 0x0
0x75a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x160, S5, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x160, S5, 0x0, S3, S2, S1, S0]

================================

Block 0x75b
[0x75b:0x766]
---
Predecessors: [0x743]
Successors: [0x160]
---
0x75b JUMPDEST
0x75c POP
0x75d PUSH1 0x1
0x75f SWAP6
0x760 SWAP5
0x761 POP
0x762 POP
0x763 POP
0x764 POP
0x765 POP
0x766 JUMP
---
0x75b: JUMPDEST 
0x75d: V654 = 0x1
0x766: JUMP 0x160
---
Entry stack: [V13, 0x160, S5, 0x0, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x767
[0x767:0x77e]
---
Predecessors: [0x276]
Successors: [0x77f, 0x783]
---
0x767 JUMPDEST
0x768 PUSH1 0x0
0x76a DUP1
0x76b SLOAD
0x76c CALLER
0x76d PUSH1 0x1
0x76f PUSH1 0xa0
0x771 PUSH1 0x2
0x773 EXP
0x774 SUB
0x775 SWAP1
0x776 DUP2
0x777 AND
0x778 SWAP2
0x779 AND
0x77a EQ
0x77b PUSH2 0x783
0x77e JUMPI
---
0x767: JUMPDEST 
0x768: V655 = 0x0
0x76b: V656 = S[0x0]
0x76c: V657 = CALLER
0x76d: V658 = 0x1
0x76f: V659 = 0xa0
0x771: V660 = 0x2
0x773: V661 = EXP 0x2 0xa0
0x774: V662 = SUB 0x10000000000000000000000000000000000000000 0x1
0x777: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x779: V664 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x77a: V665 = EQ V664 V663
0x77b: V666 = 0x783
0x77e: JUMPI 0x783 V665
---
Entry stack: [V13, 0x28a, V203]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x28a, V203, 0x0]

================================

Block 0x77f
[0x77f:0x782]
---
Predecessors: [0x767]
Successors: []
---
0x77f PUSH1 0x0
0x781 DUP1
0x782 REVERT
---
0x77f: V667 = 0x0
0x782: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V203, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V203, 0x0]

================================

Block 0x783
[0x783:0x793]
---
Predecessors: [0x767]
Successors: [0x794, 0x798]
---
0x783 JUMPDEST
0x784 PUSH1 0x1
0x786 PUSH1 0xa0
0x788 PUSH1 0x2
0x78a EXP
0x78b SUB
0x78c DUP3
0x78d AND
0x78e ISZERO
0x78f ISZERO
0x790 PUSH2 0x798
0x793 JUMPI
---
0x783: JUMPDEST 
0x784: V668 = 0x1
0x786: V669 = 0xa0
0x788: V670 = 0x2
0x78a: V671 = EXP 0x2 0xa0
0x78b: V672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78d: V673 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x78e: V674 = ISZERO V673
0x78f: V675 = ISZERO V674
0x790: V676 = 0x798
0x793: JUMPI 0x798 V675
---
Entry stack: [V13, 0x28a, V203, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x28a, V203, 0x0]

================================

Block 0x794
[0x794:0x797]
---
Predecessors: [0x783]
Successors: []
---
0x794 PUSH1 0x0
0x796 DUP1
0x797 REVERT
---
0x794: V677 = 0x0
0x797: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V203, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V203, 0x0]

================================

Block 0x798
[0x798:0x807]
---
Predecessors: [0x783]
Successors: [0x28a]
---
0x798 JUMPDEST
0x799 POP
0x79a PUSH1 0x0
0x79c DUP1
0x79d SLOAD
0x79e PUSH1 0x1
0x7a0 PUSH1 0xa0
0x7a2 PUSH1 0x2
0x7a4 EXP
0x7a5 SUB
0x7a6 DUP4
0x7a7 DUP2
0x7a8 AND
0x7a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7be NOT
0x7bf DUP1
0x7c0 DUP5
0x7c1 AND
0x7c2 SWAP2
0x7c3 SWAP1
0x7c4 SWAP2
0x7c5 OR
0x7c6 SWAP4
0x7c7 DUP5
0x7c8 SWAP1
0x7c9 SSTORE
0x7ca PUSH1 0x1
0x7cc DUP1
0x7cd SLOAD
0x7ce SWAP1
0x7cf SWAP2
0x7d0 AND
0x7d1 SWAP1
0x7d2 SSTORE
0x7d3 SWAP1
0x7d4 DUP2
0x7d5 AND
0x7d6 SWAP2
0x7d7 AND
0x7d8 DUP2
0x7d9 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7fa PUSH1 0x40
0x7fc MLOAD
0x7fd PUSH1 0x40
0x7ff MLOAD
0x800 DUP1
0x801 SWAP2
0x802 SUB
0x803 SWAP1
0x804 LOG3
0x805 POP
0x806 POP
0x807 JUMP
---
0x798: JUMPDEST 
0x79a: V678 = 0x0
0x79d: V679 = S[0x0]
0x79e: V680 = 0x1
0x7a0: V681 = 0xa0
0x7a2: V682 = 0x2
0x7a4: V683 = EXP 0x2 0xa0
0x7a5: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a8: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x7a9: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0x7be: V687 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7c1: V688 = AND V679 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x7c5: V689 = OR V688 V685
0x7c9: S[0x0] = V689
0x7ca: V690 = 0x1
0x7cd: V691 = S[0x1]
0x7d0: V692 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V691
0x7d2: S[0x1] = V692
0x7d5: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0x7d7: V694 = AND V689 0xffffffffffffffffffffffffffffffffffffffff
0x7d9: V695 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7fa: V696 = 0x40
0x7fc: V697 = M[0x40]
0x7fd: V698 = 0x40
0x7ff: V699 = M[0x40]
0x802: V700 = SUB V697 V699
0x804: LOG V699 V700 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V693 V694
0x807: JUMP 0x28a
---
Entry stack: [V13, 0x28a, V203, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x808
[0x808:0x80a]
---
Predecessors: [0x297]
Successors: [0x80b]
---
0x808 JUMPDEST
0x809 PUSH1 0x0
---
0x808: JUMPDEST 
0x809: V701 = 0x0
---
Entry stack: [V13, 0x28a, V217, V228, V248]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x28a, V217, V228, V248, 0x0]

================================

Block 0x80b
[0x80b:0x814]
---
Predecessors: [0x808, 0x897]
Successors: [0x815, 0x8da]
---
0x80b JUMPDEST
0x80c DUP3
0x80d MLOAD
0x80e DUP2
0x80f LT
0x810 ISZERO
0x811 PUSH2 0x8da
0x814 JUMPI
---
0x80b: JUMPDEST 
0x80d: V702 = M[S2]
0x80f: V703 = LT S0 V702
0x810: V704 = ISZERO V703
0x811: V705 = 0x8da
0x814: JUMPI 0x8da V704
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, S0]

================================

Block 0x815
[0x815:0x822]
---
Predecessors: [0x80b]
Successors: [0x823, 0x824]
---
0x815 PUSH2 0x849
0x818 DUP5
0x819 DUP5
0x81a DUP4
0x81b DUP2
0x81c MLOAD
0x81d DUP2
0x81e LT
0x81f PUSH2 0x824
0x822 JUMPI
---
0x815: V706 = 0x849
0x81c: V707 = M[S2]
0x81e: V708 = LT S0 V707
0x81f: V709 = 0x824
0x822: JUMPI 0x824 V708
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x849, S3, S2, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x849, S3, S2, S0]

================================

Block 0x823
[0x823:0x823]
---
Predecessors: [0x815]
Successors: []
---
0x823 INVALID
---
0x823: INVALID 
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, 0x849, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, 0x849, S2, S1, S0]

================================

Block 0x824
[0x824:0x838]
---
Predecessors: [0x815]
Successors: [0x839, 0x83a]
---
0x824 JUMPDEST
0x825 SWAP1
0x826 PUSH1 0x20
0x828 ADD
0x829 SWAP1
0x82a PUSH1 0x20
0x82c MUL
0x82d ADD
0x82e MLOAD
0x82f DUP5
0x830 DUP5
0x831 DUP2
0x832 MLOAD
0x833 DUP2
0x834 LT
0x835 PUSH2 0x83a
0x838 JUMPI
---
0x824: JUMPDEST 
0x826: V710 = 0x20
0x828: V711 = ADD 0x20 S1
0x82a: V712 = 0x20
0x82c: V713 = MUL 0x20 S0
0x82d: V714 = ADD V713 V711
0x82e: V715 = M[V714]
0x832: V716 = M[S5]
0x834: V717 = LT S4 V716
0x835: V718 = 0x83a
0x838: JUMPI 0x83a V717
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, 0x849, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V715, S5, S4]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, 0x849, S2, V715, S5, S4]

================================

Block 0x839
[0x839:0x839]
---
Predecessors: [0x824]
Successors: []
---
0x839 INVALID
---
0x839: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, 0x849, S3, V715, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, 0x849, S3, V715, S1, S0]

================================

Block 0x83a
[0x83a:0x848]
---
Predecessors: [0x824]
Successors: [0xf87]
---
0x83a JUMPDEST
0x83b SWAP1
0x83c PUSH1 0x20
0x83e ADD
0x83f SWAP1
0x840 PUSH1 0x20
0x842 MUL
0x843 ADD
0x844 MLOAD
0x845 PUSH2 0xf87
0x848 JUMP
---
0x83a: JUMPDEST 
0x83c: V719 = 0x20
0x83e: V720 = ADD 0x20 S1
0x840: V721 = 0x20
0x842: V722 = MUL 0x20 S0
0x843: V723 = ADD V722 V720
0x844: V724 = M[V723]
0x845: V725 = 0xf87
0x848: JUMP 0xf87
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, 0x849, S3, V715, S1, S0]
Stack pops: 2
Stack additions: [V724]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, 0x849, S3, V715, V724]

================================

Block 0x849
[0x849:0x87f]
---
Predecessors: [0xcda]
Successors: [0x880, 0x881]
---
0x849 JUMPDEST
0x84a CALLVALUE
0x84b CALLER
0x84c PUSH1 0x1
0x84e PUSH1 0xa0
0x850 PUSH1 0x2
0x852 EXP
0x853 SUB
0x854 AND
0x855 PUSH32 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93
0x876 DUP6
0x877 DUP5
0x878 DUP2
0x879 MLOAD
0x87a DUP2
0x87b LT
0x87c PUSH2 0x881
0x87f JUMPI
---
0x849: JUMPDEST 
0x84a: V726 = CALLVALUE
0x84b: V727 = CALLER
0x84c: V728 = 0x1
0x84e: V729 = 0xa0
0x850: V730 = 0x2
0x852: V731 = EXP 0x2 0xa0
0x853: V732 = SUB 0x10000000000000000000000000000000000000000 0x1
0x854: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0x855: V734 = 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93
0x879: V735 = M[S2]
0x87b: V736 = LT S0 V735
0x87c: V737 = 0x881
0x87f: JUMPI 0x881 V736
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V726, V733, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, S2, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, V726, V733, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, S2, S0]

================================

Block 0x880
[0x880:0x880]
---
Predecessors: [0x849]
Successors: []
---
0x880 INVALID
---
0x880: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, V726, V733, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, V726, V733, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, S1, S0]

================================

Block 0x881
[0x881:0x895]
---
Predecessors: [0x849]
Successors: [0x896, 0x897]
---
0x881 JUMPDEST
0x882 SWAP1
0x883 PUSH1 0x20
0x885 ADD
0x886 SWAP1
0x887 PUSH1 0x20
0x889 MUL
0x88a ADD
0x88b MLOAD
0x88c DUP6
0x88d DUP6
0x88e DUP2
0x88f MLOAD
0x890 DUP2
0x891 LT
0x892 PUSH2 0x897
0x895 JUMPI
---
0x881: JUMPDEST 
0x883: V738 = 0x20
0x885: V739 = ADD 0x20 S1
0x887: V740 = 0x20
0x889: V741 = MUL 0x20 S0
0x88a: V742 = ADD V741 V739
0x88b: V743 = M[V742]
0x88f: V744 = M[S6]
0x891: V745 = LT S5 V744
0x892: V746 = 0x897
0x895: JUMPI 0x897 V745
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, V726, V733, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V743, S6, S5]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, V726, V733, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, V743, S6, S5]

================================

Block 0x896
[0x896:0x896]
---
Predecessors: [0x881]
Successors: []
---
0x896 INVALID
---
0x896: INVALID 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, V743, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, V743, S1, S0]

================================

Block 0x897
[0x897:0x8d9]
---
Predecessors: [0x881]
Successors: [0x80b]
---
0x897 JUMPDEST
0x898 SWAP1
0x899 PUSH1 0x20
0x89b ADD
0x89c SWAP1
0x89d PUSH1 0x20
0x89f MUL
0x8a0 ADD
0x8a1 MLOAD
0x8a2 DUP9
0x8a3 PUSH1 0x40
0x8a5 MLOAD
0x8a6 PUSH1 0x1
0x8a8 PUSH1 0xa0
0x8aa PUSH1 0x2
0x8ac EXP
0x8ad SUB
0x8ae SWAP4
0x8af DUP5
0x8b0 AND
0x8b1 DUP2
0x8b2 MSTORE
0x8b3 PUSH1 0x20
0x8b5 DUP2
0x8b6 ADD
0x8b7 SWAP3
0x8b8 SWAP1
0x8b9 SWAP3
0x8ba MSTORE
0x8bb SWAP1
0x8bc SWAP2
0x8bd AND
0x8be PUSH1 0x40
0x8c0 DUP1
0x8c1 DUP4
0x8c2 ADD
0x8c3 SWAP2
0x8c4 SWAP1
0x8c5 SWAP2
0x8c6 MSTORE
0x8c7 PUSH1 0x60
0x8c9 SWAP1
0x8ca SWAP2
0x8cb ADD
0x8cc SWAP1
0x8cd MLOAD
0x8ce DUP1
0x8cf SWAP2
0x8d0 SUB
0x8d1 SWAP1
0x8d2 LOG3
0x8d3 PUSH1 0x1
0x8d5 ADD
0x8d6 PUSH2 0x80b
0x8d9 JUMP
---
0x897: JUMPDEST 
0x899: V747 = 0x20
0x89b: V748 = ADD 0x20 S1
0x89d: V749 = 0x20
0x89f: V750 = MUL 0x20 S0
0x8a0: V751 = ADD V750 V748
0x8a1: V752 = M[V751]
0x8a3: V753 = 0x40
0x8a5: V754 = M[0x40]
0x8a6: V755 = 0x1
0x8a8: V756 = 0xa0
0x8aa: V757 = 0x2
0x8ac: V758 = EXP 0x2 0xa0
0x8ad: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b0: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0x8b2: M[V754] = V760
0x8b3: V761 = 0x20
0x8b6: V762 = ADD V754 0x20
0x8ba: M[V762] = V752
0x8bd: V763 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x8be: V764 = 0x40
0x8c2: V765 = ADD V754 0x40
0x8c6: M[V765] = V763
0x8c7: V766 = 0x60
0x8cb: V767 = ADD V754 0x60
0x8cd: V768 = M[0x40]
0x8d0: V769 = SUB V767 V768
0x8d2: LOG V768 V769 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93 S4 S5
0x8d3: V770 = 0x1
0x8d5: V771 = ADD 0x1 S6
0x8d6: V772 = 0x80b
0x8d9: JUMP 0x80b
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93, V743, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, V771]
Exit stack: [V13, S11, S10, S9, S8, S7, V771]

================================

Block 0x8da
[0x8da:0x8df]
---
Predecessors: [0x80b]
Successors: [0x28a]
---
0x8da JUMPDEST
0x8db POP
0x8dc POP
0x8dd POP
0x8de POP
0x8df JUMP
---
0x8da: JUMPDEST 
0x8df: JUMP S4
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S5]

================================

Block 0x8e0
[0x8e0:0x8f6]
---
Predecessors: [0x334]
Successors: [0x8f7, 0x8fb]
---
0x8e0 JUMPDEST
0x8e1 PUSH1 0x0
0x8e3 SLOAD
0x8e4 CALLER
0x8e5 PUSH1 0x1
0x8e7 PUSH1 0xa0
0x8e9 PUSH1 0x2
0x8eb EXP
0x8ec SUB
0x8ed SWAP1
0x8ee DUP2
0x8ef AND
0x8f0 SWAP2
0x8f1 AND
0x8f2 EQ
0x8f3 PUSH2 0x8fb
0x8f6 JUMPI
---
0x8e0: JUMPDEST 
0x8e1: V773 = 0x0
0x8e3: V774 = S[0x0]
0x8e4: V775 = CALLER
0x8e5: V776 = 0x1
0x8e7: V777 = 0xa0
0x8e9: V778 = 0x2
0x8eb: V779 = EXP 0x2 0xa0
0x8ec: V780 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ef: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x8f1: V782 = AND V774 0xffffffffffffffffffffffffffffffffffffffff
0x8f2: V783 = EQ V782 V781
0x8f3: V784 = 0x8fb
0x8f6: JUMPI 0x8fb V783
---
Entry stack: [V13, 0x28a, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V268]

================================

Block 0x8f7
[0x8f7:0x8fa]
---
Predecessors: [0x8e0]
Successors: []
---
0x8f7 PUSH1 0x0
0x8f9 DUP1
0x8fa REVERT
---
0x8f7: V785 = 0x0
0x8fa: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V268]

================================

Block 0x8fb
[0x8fb:0x90d]
---
Predecessors: [0x8e0]
Successors: [0x90e, 0x912]
---
0x8fb JUMPDEST
0x8fc PUSH2 0xdac
0x8ff PUSH1 0x1
0x901 PUSH1 0xa0
0x903 PUSH1 0x2
0x905 EXP
0x906 SUB
0x907 DUP3
0x908 AND
0x909 EQ
0x90a PUSH2 0x912
0x90d JUMPI
---
0x8fb: JUMPDEST 
0x8fc: V786 = 0xdac
0x8ff: V787 = 0x1
0x901: V788 = 0xa0
0x903: V789 = 0x2
0x905: V790 = EXP 0x2 0xa0
0x906: V791 = SUB 0x10000000000000000000000000000000000000000 0x1
0x908: V792 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x909: V793 = EQ V792 0xdac
0x90a: V794 = 0x912
0x90d: JUMPI 0x912 V793
---
Entry stack: [V13, 0x28a, V268]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x28a, V268]

================================

Block 0x90e
[0x90e:0x911]
---
Predecessors: [0x8fb]
Successors: []
---
0x90e PUSH1 0x0
0x910 DUP1
0x911 REVERT
---
0x90e: V795 = 0x0
0x911: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V268]

================================

Block 0x912
[0x912:0x969]
---
Predecessors: [0x8fb]
Successors: [0x28a]
---
0x912 JUMPDEST
0x913 PUSH1 0x0
0x915 DUP1
0x916 SLOAD
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c NOT
0x92d SWAP1
0x92e DUP2
0x92f AND
0x930 SWAP1
0x931 SWAP2
0x932 SSTORE
0x933 PUSH1 0x1
0x935 DUP1
0x936 SLOAD
0x937 SWAP1
0x938 SWAP2
0x939 AND
0x93a SWAP1
0x93b SSTORE
0x93c PUSH32 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x95d PUSH1 0x40
0x95f MLOAD
0x960 PUSH1 0x40
0x962 MLOAD
0x963 DUP1
0x964 SWAP2
0x965 SUB
0x966 SWAP1
0x967 LOG1
0x968 POP
0x969 JUMP
---
0x912: JUMPDEST 
0x913: V796 = 0x0
0x916: V797 = S[0x0]
0x917: V798 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V799 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x92f: V800 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V797
0x932: S[0x0] = V800
0x933: V801 = 0x1
0x936: V802 = S[0x1]
0x939: V803 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V802
0x93b: S[0x1] = V803
0x93c: V804 = 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x95d: V805 = 0x40
0x95f: V806 = M[0x40]
0x960: V807 = 0x40
0x962: V808 = M[0x40]
0x965: V809 = SUB V806 V808
0x967: LOG V808 V809 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x969: JUMP 0x28a
---
Entry stack: [V13, 0x28a, V268]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x96a
[0x96a:0x980]
---
Predecessors: [0x353]
Successors: [0x981, 0x985]
---
0x96a JUMPDEST
0x96b PUSH1 0x0
0x96d SLOAD
0x96e CALLER
0x96f PUSH1 0x1
0x971 PUSH1 0xa0
0x973 PUSH1 0x2
0x975 EXP
0x976 SUB
0x977 SWAP1
0x978 DUP2
0x979 AND
0x97a SWAP2
0x97b AND
0x97c EQ
0x97d PUSH2 0x985
0x980 JUMPI
---
0x96a: JUMPDEST 
0x96b: V810 = 0x0
0x96d: V811 = S[0x0]
0x96e: V812 = CALLER
0x96f: V813 = 0x1
0x971: V814 = 0xa0
0x973: V815 = 0x2
0x975: V816 = EXP 0x2 0xa0
0x976: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x979: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x97b: V819 = AND V811 0xffffffffffffffffffffffffffffffffffffffff
0x97c: V820 = EQ V819 V818
0x97d: V821 = 0x985
0x980: JUMPI 0x985 V820
---
Entry stack: [V13, 0x28a, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V282]

================================

Block 0x981
[0x981:0x984]
---
Predecessors: [0x96a]
Successors: []
---
0x981 PUSH1 0x0
0x983 DUP1
0x984 REVERT
---
0x981: V822 = 0x0
0x984: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V282]

================================

Block 0x985
[0x985:0x9e7]
---
Predecessors: [0x96a]
Successors: [0x28a]
---
0x985 JUMPDEST
0x986 PUSH1 0x1
0x988 DUP1
0x989 SLOAD
0x98a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99f NOT
0x9a0 AND
0x9a1 PUSH1 0x1
0x9a3 PUSH1 0xa0
0x9a5 PUSH1 0x2
0x9a7 EXP
0x9a8 SUB
0x9a9 DUP4
0x9aa DUP2
0x9ab AND
0x9ac SWAP2
0x9ad SWAP1
0x9ae SWAP2
0x9af OR
0x9b0 SWAP2
0x9b1 DUP3
0x9b2 SWAP1
0x9b3 SSTORE
0x9b4 SWAP1
0x9b5 DUP2
0x9b6 AND
0x9b7 SWAP1
0x9b8 CALLER
0x9b9 AND
0x9ba PUSH32 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4
0x9db PUSH1 0x40
0x9dd MLOAD
0x9de PUSH1 0x40
0x9e0 MLOAD
0x9e1 DUP1
0x9e2 SWAP2
0x9e3 SUB
0x9e4 SWAP1
0x9e5 LOG3
0x9e6 POP
0x9e7 JUMP
---
0x985: JUMPDEST 
0x986: V823 = 0x1
0x989: V824 = S[0x1]
0x98a: V825 = 0xffffffffffffffffffffffffffffffffffffffff
0x99f: V826 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9a0: V827 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V824
0x9a1: V828 = 0x1
0x9a3: V829 = 0xa0
0x9a5: V830 = 0x2
0x9a7: V831 = EXP 0x2 0xa0
0x9a8: V832 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ab: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x9af: V834 = OR V833 V827
0x9b3: S[0x1] = V834
0x9b6: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff V834
0x9b8: V836 = CALLER
0x9b9: V837 = AND V836 0xffffffffffffffffffffffffffffffffffffffff
0x9ba: V838 = 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4
0x9db: V839 = 0x40
0x9dd: V840 = M[0x40]
0x9de: V841 = 0x40
0x9e0: V842 = M[0x40]
0x9e3: V843 = SUB V840 V842
0x9e5: LOG V842 V843 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4 V837 V835
0x9e7: JUMP 0x28a
---
Entry stack: [V13, 0x28a, V282]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x9e8
[0x9e8:0xa01]
---
Predecessors: [0x372]
Successors: [0xa02, 0xa06]
---
0x9e8 JUMPDEST
0x9e9 PUSH1 0x1
0x9eb SLOAD
0x9ec PUSH1 0x0
0x9ee SWAP1
0x9ef CALLER
0x9f0 PUSH1 0x1
0x9f2 PUSH1 0xa0
0x9f4 PUSH1 0x2
0x9f6 EXP
0x9f7 SUB
0x9f8 SWAP1
0x9f9 DUP2
0x9fa AND
0x9fb SWAP2
0x9fc AND
0x9fd EQ
0x9fe PUSH2 0xa06
0xa01 JUMPI
---
0x9e8: JUMPDEST 
0x9e9: V844 = 0x1
0x9eb: V845 = S[0x1]
0x9ec: V846 = 0x0
0x9ef: V847 = CALLER
0x9f0: V848 = 0x1
0x9f2: V849 = 0xa0
0x9f4: V850 = 0x2
0x9f6: V851 = EXP 0x2 0xa0
0x9f7: V852 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fa: V853 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0x9fc: V854 = AND V845 0xffffffffffffffffffffffffffffffffffffffff
0x9fd: V855 = EQ V854 V853
0x9fe: V856 = 0xa06
0xa01: JUMPI 0xa06 V855
---
Entry stack: [V13, 0x28a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x28a, 0x0]

================================

Block 0xa02
[0xa02:0xa05]
---
Predecessors: [0x9e8]
Successors: []
---
0xa02 PUSH1 0x0
0xa04 DUP1
0xa05 REVERT
---
0xa02: V857 = 0x0
0xa05: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, 0x0]

================================

Block 0xa06
[0xa06:0xa74]
---
Predecessors: [0x9e8]
Successors: [0x28a]
---
0xa06 JUMPDEST
0xa07 POP
0xa08 PUSH1 0x0
0xa0a DUP1
0xa0b SLOAD
0xa0c PUSH1 0x1
0xa0e DUP1
0xa0f SLOAD
0xa10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa25 NOT
0xa26 DUP1
0xa27 DUP5
0xa28 AND
0xa29 PUSH1 0x1
0xa2b PUSH1 0xa0
0xa2d PUSH1 0x2
0xa2f EXP
0xa30 SUB
0xa31 DUP4
0xa32 DUP2
0xa33 AND
0xa34 SWAP2
0xa35 SWAP1
0xa36 SWAP2
0xa37 OR
0xa38 SWAP6
0xa39 DUP7
0xa3a SWAP1
0xa3b SSTORE
0xa3c SWAP2
0xa3d AND
0xa3e SWAP1
0xa3f SWAP2
0xa40 SSTORE
0xa41 SWAP1
0xa42 DUP2
0xa43 AND
0xa44 SWAP2
0xa45 AND
0xa46 DUP2
0xa47 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xa68 PUSH1 0x40
0xa6a MLOAD
0xa6b PUSH1 0x40
0xa6d MLOAD
0xa6e DUP1
0xa6f SWAP2
0xa70 SUB
0xa71 SWAP1
0xa72 LOG3
0xa73 POP
0xa74 JUMP
---
0xa06: JUMPDEST 
0xa08: V858 = 0x0
0xa0b: V859 = S[0x0]
0xa0c: V860 = 0x1
0xa0f: V861 = S[0x1]
0xa10: V862 = 0xffffffffffffffffffffffffffffffffffffffff
0xa25: V863 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa28: V864 = AND V859 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xa29: V865 = 0x1
0xa2b: V866 = 0xa0
0xa2d: V867 = 0x2
0xa2f: V868 = EXP 0x2 0xa0
0xa30: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa33: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0xa37: V871 = OR V870 V864
0xa3b: S[0x0] = V871
0xa3d: V872 = AND V861 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xa40: S[0x1] = V872
0xa43: V873 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0xa45: V874 = AND V871 0xffffffffffffffffffffffffffffffffffffffff
0xa47: V875 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xa68: V876 = 0x40
0xa6a: V877 = M[0x40]
0xa6b: V878 = 0x40
0xa6d: V879 = M[0x40]
0xa70: V880 = SUB V877 V879
0xa72: LOG V879 V880 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V873 V874
0xa74: JUMP 0x28a
---
Entry stack: [V13, 0x28a, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xa75
[0xa75:0xa93]
---
Predecessors: [0x385]
Successors: [0x160]
---
0xa75 JUMPDEST
0xa76 PUSH1 0x1
0xa78 PUSH1 0xa0
0xa7a PUSH1 0x2
0xa7c EXP
0xa7d SUB
0xa7e AND
0xa7f PUSH1 0x0
0xa81 SWAP1
0xa82 DUP2
0xa83 MSTORE
0xa84 PUSH1 0x4
0xa86 PUSH1 0x20
0xa88 MSTORE
0xa89 PUSH1 0x40
0xa8b SWAP1
0xa8c SHA3
0xa8d SLOAD
0xa8e PUSH1 0xff
0xa90 AND
0xa91 ISZERO
0xa92 SWAP1
0xa93 JUMP
---
0xa75: JUMPDEST 
0xa76: V881 = 0x1
0xa78: V882 = 0xa0
0xa7a: V883 = 0x2
0xa7c: V884 = EXP 0x2 0xa0
0xa7d: V885 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7e: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xa7f: V887 = 0x0
0xa83: M[0x0] = V886
0xa84: V888 = 0x4
0xa86: V889 = 0x20
0xa88: M[0x20] = 0x4
0xa89: V890 = 0x40
0xa8c: V891 = SHA3 0x0 0x40
0xa8d: V892 = S[V891]
0xa8e: V893 = 0xff
0xa90: V894 = AND 0xff V892
0xa91: V895 = ISZERO V894
0xa93: JUMP 0x160
---
Entry stack: [V13, 0x160, V302]
Stack pops: 2
Stack additions: [V895]
Exit stack: [V13, V895]

================================

Block 0xa94
[0xa94:0xaa2]
---
Predecessors: [0x3a4]
Successors: [0x20b]
---
0xa94 JUMPDEST
0xa95 PUSH1 0x0
0xa97 SLOAD
0xa98 PUSH1 0x1
0xa9a PUSH1 0xa0
0xa9c PUSH1 0x2
0xa9e EXP
0xa9f SUB
0xaa0 AND
0xaa1 DUP2
0xaa2 JUMP
---
0xa94: JUMPDEST 
0xa95: V896 = 0x0
0xa97: V897 = S[0x0]
0xa98: V898 = 0x1
0xa9a: V899 = 0xa0
0xa9c: V900 = 0x2
0xa9e: V901 = EXP 0x2 0xa0
0xa9f: V902 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa0: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V897
0xaa2: JUMP 0x20b
---
Entry stack: [V13, 0x20b]
Stack pops: 1
Stack additions: [S0, V903]
Exit stack: [V13, 0x20b, V903]

================================

Block 0xaa3
[0xaa3:0xabf]
---
Predecessors: [0x3b7]
Successors: [0xac0, 0xad3]
---
0xaa3 JUMPDEST
0xaa4 PUSH1 0x2
0xaa6 SLOAD
0xaa7 PUSH1 0x0
0xaa9 SWAP1
0xaaa DUP2
0xaab SWAP1
0xaac CALLER
0xaad PUSH1 0x1
0xaaf PUSH1 0xa0
0xab1 PUSH1 0x2
0xab3 EXP
0xab4 SUB
0xab5 SWAP1
0xab6 DUP2
0xab7 AND
0xab8 SWAP2
0xab9 AND
0xaba EQ
0xabb DUP1
0xabc PUSH2 0xad3
0xabf JUMPI
---
0xaa3: JUMPDEST 
0xaa4: V904 = 0x2
0xaa6: V905 = S[0x2]
0xaa7: V906 = 0x0
0xaac: V907 = CALLER
0xaad: V908 = 0x1
0xaaf: V909 = 0xa0
0xab1: V910 = 0x2
0xab3: V911 = EXP 0x2 0xa0
0xab4: V912 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab7: V913 = AND 0xffffffffffffffffffffffffffffffffffffffff V907
0xab9: V914 = AND V905 0xffffffffffffffffffffffffffffffffffffffff
0xaba: V915 = EQ V914 V913
0xabc: V916 = 0xad3
0xabf: JUMPI 0xad3 V915
---
Entry stack: [V13, 0x28a, V322]
Stack pops: 0
Stack additions: [0x0, 0x0, V915]
Exit stack: [V13, 0x28a, V322, 0x0, 0x0, V915]

================================

Block 0xac0
[0xac0:0xad2]
---
Predecessors: [0xaa3]
Successors: [0xad3]
---
0xac0 POP
0xac1 PUSH1 0x0
0xac3 SLOAD
0xac4 CALLER
0xac5 PUSH1 0x1
0xac7 PUSH1 0xa0
0xac9 PUSH1 0x2
0xacb EXP
0xacc SUB
0xacd SWAP1
0xace DUP2
0xacf AND
0xad0 SWAP2
0xad1 AND
0xad2 EQ
---
0xac1: V917 = 0x0
0xac3: V918 = S[0x0]
0xac4: V919 = CALLER
0xac5: V920 = 0x1
0xac7: V921 = 0xa0
0xac9: V922 = 0x2
0xacb: V923 = EXP 0x2 0xa0
0xacc: V924 = SUB 0x10000000000000000000000000000000000000000 0x1
0xacf: V925 = AND 0xffffffffffffffffffffffffffffffffffffffff V919
0xad1: V926 = AND V918 0xffffffffffffffffffffffffffffffffffffffff
0xad2: V927 = EQ V926 V925
---
Entry stack: [V13, 0x28a, V322, 0x0, 0x0, V915]
Stack pops: 1
Stack additions: [V927]
Exit stack: [V13, 0x28a, V322, 0x0, 0x0, V927]

================================

Block 0xad3
[0xad3:0xad9]
---
Predecessors: [0xaa3, 0xac0]
Successors: [0xada, 0xade]
---
0xad3 JUMPDEST
0xad4 ISZERO
0xad5 ISZERO
0xad6 PUSH2 0xade
0xad9 JUMPI
---
0xad3: JUMPDEST 
0xad4: V928 = ISZERO S0
0xad5: V929 = ISZERO V928
0xad6: V930 = 0xade
0xad9: JUMPI 0xade V929
---
Entry stack: [V13, 0x28a, V322, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x28a, V322, 0x0, 0x0]

================================

Block 0xada
[0xada:0xadd]
---
Predecessors: [0xad3]
Successors: []
---
0xada PUSH1 0x0
0xadc DUP1
0xadd REVERT
---
0xada: V931 = 0x0
0xadd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V322, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V322, 0x0, 0x0]

================================

Block 0xade
[0xade:0xaff]
---
Predecessors: [0xad3]
Successors: [0xb00, 0xb04]
---
0xade JUMPDEST
0xadf PUSH1 0x1
0xae1 PUSH1 0xa0
0xae3 PUSH1 0x2
0xae5 EXP
0xae6 SUB
0xae7 DUP4
0xae8 AND
0xae9 PUSH1 0x0
0xaeb SWAP1
0xaec DUP2
0xaed MSTORE
0xaee PUSH1 0x4
0xaf0 PUSH1 0x20
0xaf2 MSTORE
0xaf3 PUSH1 0x40
0xaf5 SWAP1
0xaf6 SHA3
0xaf7 SLOAD
0xaf8 PUSH1 0xff
0xafa AND
0xafb ISZERO
0xafc PUSH2 0xb04
0xaff JUMPI
---
0xade: JUMPDEST 
0xadf: V932 = 0x1
0xae1: V933 = 0xa0
0xae3: V934 = 0x2
0xae5: V935 = EXP 0x2 0xa0
0xae6: V936 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae8: V937 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0xae9: V938 = 0x0
0xaed: M[0x0] = V937
0xaee: V939 = 0x4
0xaf0: V940 = 0x20
0xaf2: M[0x20] = 0x4
0xaf3: V941 = 0x40
0xaf6: V942 = SHA3 0x0 0x40
0xaf7: V943 = S[V942]
0xaf8: V944 = 0xff
0xafa: V945 = AND 0xff V943
0xafb: V946 = ISZERO V945
0xafc: V947 = 0xb04
0xaff: JUMPI 0xb04 V946
---
Entry stack: [V13, 0x28a, V322, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x28a, V322, 0x0, 0x0]

================================

Block 0xb00
[0xb00:0xb03]
---
Predecessors: [0xade]
Successors: []
---
0xb00 PUSH1 0x0
0xb02 DUP1
0xb03 REVERT
---
0xb00: V948 = 0x0
0xb03: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V322, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V322, 0x0, 0x0]

================================

Block 0xb04
[0xb04:0xb14]
---
Predecessors: [0xade]
Successors: [0xb15, 0xb96]
---
0xb04 JUMPDEST
0xb05 PUSH1 0x1
0xb07 PUSH1 0xa0
0xb09 PUSH1 0x2
0xb0b EXP
0xb0c SUB
0xb0d DUP4
0xb0e AND
0xb0f ISZERO
0xb10 ISZERO
0xb11 PUSH2 0xb96
0xb14 JUMPI
---
0xb04: JUMPDEST 
0xb05: V949 = 0x1
0xb07: V950 = 0xa0
0xb09: V951 = 0x2
0xb0b: V952 = EXP 0x2 0xa0
0xb0c: V953 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0e: V954 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0xb0f: V955 = ISZERO V954
0xb10: V956 = ISZERO V955
0xb11: V957 = 0xb96
0xb14: JUMPI 0xb96 V956
---
Entry stack: [V13, 0x28a, V322, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x28a, V322, 0x0, 0x0]

================================

Block 0xb15
[0xb15:0xb48]
---
Predecessors: [0xb04]
Successors: [0xb49, 0xb4d]
---
0xb15 PUSH1 0x3
0xb17 SLOAD
0xb18 PUSH1 0x1
0xb1a PUSH1 0xa0
0xb1c PUSH1 0x2
0xb1e EXP
0xb1f SUB
0xb20 ADDRESS
0xb21 DUP2
0xb22 AND
0xb23 BALANCE
0xb24 SWAP4
0xb25 POP
0xb26 AND
0xb27 DUP3
0xb28 ISZERO
0xb29 PUSH2 0x8fc
0xb2c MUL
0xb2d DUP4
0xb2e PUSH1 0x40
0xb30 MLOAD
0xb31 PUSH1 0x0
0xb33 PUSH1 0x40
0xb35 MLOAD
0xb36 DUP1
0xb37 DUP4
0xb38 SUB
0xb39 DUP2
0xb3a DUP6
0xb3b DUP9
0xb3c DUP9
0xb3d CALL
0xb3e SWAP4
0xb3f POP
0xb40 POP
0xb41 POP
0xb42 POP
0xb43 ISZERO
0xb44 ISZERO
0xb45 PUSH2 0xb4d
0xb48 JUMPI
---
0xb15: V958 = 0x3
0xb17: V959 = S[0x3]
0xb18: V960 = 0x1
0xb1a: V961 = 0xa0
0xb1c: V962 = 0x2
0xb1e: V963 = EXP 0x2 0xa0
0xb1f: V964 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb20: V965 = ADDRESS
0xb22: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V965
0xb23: V967 = BALANCE V966
0xb26: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V959
0xb28: V969 = ISZERO V967
0xb29: V970 = 0x8fc
0xb2c: V971 = MUL 0x8fc V969
0xb2e: V972 = 0x40
0xb30: V973 = M[0x40]
0xb31: V974 = 0x0
0xb33: V975 = 0x40
0xb35: V976 = M[0x40]
0xb38: V977 = SUB V973 V976
0xb3d: V978 = CALL V971 V968 V967 V976 V977 V976 0x0
0xb43: V979 = ISZERO V978
0xb44: V980 = ISZERO V979
0xb45: V981 = 0xb4d
0xb48: JUMPI 0xb4d V980
---
Entry stack: [V13, 0x28a, V322, 0x0, 0x0]
Stack pops: 2
Stack additions: [V967, S0]
Exit stack: [V13, 0x28a, V322, V967, 0x0]

================================

Block 0xb49
[0xb49:0xb4c]
---
Predecessors: [0xb15]
Successors: []
---
0xb49 PUSH1 0x0
0xb4b DUP1
0xb4c REVERT
---
0xb49: V982 = 0x0
0xb4c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V322, V967, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V322, V967, 0x0]

================================

Block 0xb4d
[0xb4d:0xb95]
---
Predecessors: [0xb15]
Successors: [0xcda]
---
0xb4d JUMPDEST
0xb4e PUSH32 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0xb6f DUP4
0xb70 DUP4
0xb71 PUSH1 0x40
0xb73 MLOAD
0xb74 PUSH1 0x1
0xb76 PUSH1 0xa0
0xb78 PUSH1 0x2
0xb7a EXP
0xb7b SUB
0xb7c SWAP1
0xb7d SWAP3
0xb7e AND
0xb7f DUP3
0xb80 MSTORE
0xb81 PUSH1 0x20
0xb83 DUP3
0xb84 ADD
0xb85 MSTORE
0xb86 PUSH1 0x40
0xb88 SWAP1
0xb89 DUP2
0xb8a ADD
0xb8b SWAP1
0xb8c MLOAD
0xb8d DUP1
0xb8e SWAP2
0xb8f SUB
0xb90 SWAP1
0xb91 LOG1
0xb92 PUSH2 0xcda
0xb95 JUMP
---
0xb4d: JUMPDEST 
0xb4e: V983 = 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0xb71: V984 = 0x40
0xb73: V985 = M[0x40]
0xb74: V986 = 0x1
0xb76: V987 = 0xa0
0xb78: V988 = 0x2
0xb7a: V989 = EXP 0x2 0xa0
0xb7b: V990 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7e: V991 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0xb80: M[V985] = V991
0xb81: V992 = 0x20
0xb84: V993 = ADD V985 0x20
0xb85: M[V993] = V967
0xb86: V994 = 0x40
0xb8a: V995 = ADD 0x40 V985
0xb8c: V996 = M[0x40]
0xb8f: V997 = SUB V995 V996
0xb91: LOG V996 V997 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0xb92: V998 = 0xcda
0xb95: JUMP 0xcda
---
Entry stack: [V13, 0x28a, V322, V967, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x28a, V322, V967, 0x0]

================================

Block 0xb96
[0xb96:0xbea]
---
Predecessors: [0xb04]
Successors: [0xbeb, 0xbef]
---
0xb96 JUMPDEST
0xb97 POP
0xb98 DUP2
0xb99 PUSH1 0x1
0xb9b PUSH1 0xa0
0xb9d PUSH1 0x2
0xb9f EXP
0xba0 SUB
0xba1 DUP2
0xba2 AND
0xba3 PUSH4 0x70a08231
0xba8 ADDRESS
0xba9 PUSH1 0x0
0xbab PUSH1 0x40
0xbad MLOAD
0xbae PUSH1 0x20
0xbb0 ADD
0xbb1 MSTORE
0xbb2 PUSH1 0x40
0xbb4 MLOAD
0xbb5 PUSH1 0xe0
0xbb7 PUSH1 0x2
0xbb9 EXP
0xbba PUSH4 0xffffffff
0xbbf DUP5
0xbc0 AND
0xbc1 MUL
0xbc2 DUP2
0xbc3 MSTORE
0xbc4 PUSH1 0x1
0xbc6 PUSH1 0xa0
0xbc8 PUSH1 0x2
0xbca EXP
0xbcb SUB
0xbcc SWAP1
0xbcd SWAP2
0xbce AND
0xbcf PUSH1 0x4
0xbd1 DUP3
0xbd2 ADD
0xbd3 MSTORE
0xbd4 PUSH1 0x24
0xbd6 ADD
0xbd7 PUSH1 0x20
0xbd9 PUSH1 0x40
0xbdb MLOAD
0xbdc DUP1
0xbdd DUP4
0xbde SUB
0xbdf DUP2
0xbe0 PUSH1 0x0
0xbe2 DUP8
0xbe3 DUP1
0xbe4 EXTCODESIZE
0xbe5 ISZERO
0xbe6 ISZERO
0xbe7 PUSH2 0xbef
0xbea JUMPI
---
0xb96: JUMPDEST 
0xb99: V999 = 0x1
0xb9b: V1000 = 0xa0
0xb9d: V1001 = 0x2
0xb9f: V1002 = EXP 0x2 0xa0
0xba0: V1003 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba2: V1004 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0xba3: V1005 = 0x70a08231
0xba8: V1006 = ADDRESS
0xba9: V1007 = 0x0
0xbab: V1008 = 0x40
0xbad: V1009 = M[0x40]
0xbae: V1010 = 0x20
0xbb0: V1011 = ADD 0x20 V1009
0xbb1: M[V1011] = 0x0
0xbb2: V1012 = 0x40
0xbb4: V1013 = M[0x40]
0xbb5: V1014 = 0xe0
0xbb7: V1015 = 0x2
0xbb9: V1016 = EXP 0x2 0xe0
0xbba: V1017 = 0xffffffff
0xbc0: V1018 = AND 0x70a08231 0xffffffff
0xbc1: V1019 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xbc3: M[V1013] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbc4: V1020 = 0x1
0xbc6: V1021 = 0xa0
0xbc8: V1022 = 0x2
0xbca: V1023 = EXP 0x2 0xa0
0xbcb: V1024 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbce: V1025 = AND V1006 0xffffffffffffffffffffffffffffffffffffffff
0xbcf: V1026 = 0x4
0xbd2: V1027 = ADD V1013 0x4
0xbd3: M[V1027] = V1025
0xbd4: V1028 = 0x24
0xbd6: V1029 = ADD 0x24 V1013
0xbd7: V1030 = 0x20
0xbd9: V1031 = 0x40
0xbdb: V1032 = M[0x40]
0xbde: V1033 = SUB V1029 V1032
0xbe0: V1034 = 0x0
0xbe4: V1035 = EXTCODESIZE V1004
0xbe5: V1036 = ISZERO V1035
0xbe6: V1037 = ISZERO V1036
0xbe7: V1038 = 0xbef
0xbea: JUMPI 0xbef V1037
---
Entry stack: [V13, 0x28a, V322, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2, V1004, 0x70a08231, V1029, 0x20, V1032, V1033, V1032, 0x0, V1004]
Exit stack: [V13, 0x28a, V322, 0x0, V322, V1004, 0x70a08231, V1029, 0x20, V1032, V1033, V1032, 0x0, V1004]

================================

Block 0xbeb
[0xbeb:0xbee]
---
Predecessors: [0xb96]
Successors: []
---
0xbeb PUSH1 0x0
0xbed DUP1
0xbee REVERT
---
0xbeb: V1039 = 0x0
0xbee: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V322, 0x0, V322, V1004, 0x70a08231, V1029, 0x20, V1032, V1033, V1032, 0x0, V1004]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V322, 0x0, V322, V1004, 0x70a08231, V1029, 0x20, V1032, V1033, V1032, 0x0, V1004]

================================

Block 0xbef
[0xbef:0xbfb]
---
Predecessors: [0xb96]
Successors: [0xbfc, 0xc00]
---
0xbef JUMPDEST
0xbf0 PUSH2 0x2c6
0xbf3 GAS
0xbf4 SUB
0xbf5 CALL
0xbf6 ISZERO
0xbf7 ISZERO
0xbf8 PUSH2 0xc00
0xbfb JUMPI
---
0xbef: JUMPDEST 
0xbf0: V1040 = 0x2c6
0xbf3: V1041 = GAS
0xbf4: V1042 = SUB V1041 0x2c6
0xbf5: V1043 = CALL V1042 V1004 0x0 V1032 V1033 V1032 0x20
0xbf6: V1044 = ISZERO V1043
0xbf7: V1045 = ISZERO V1044
0xbf8: V1046 = 0xc00
0xbfb: JUMPI 0xc00 V1045
---
Entry stack: [V13, 0x28a, V322, 0x0, V322, V1004, 0x70a08231, V1029, 0x20, V1032, V1033, V1032, 0x0, V1004]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x28a, V322, 0x0, V322, V1004, 0x70a08231, V1029]

================================

Block 0xbfc
[0xbfc:0xbff]
---
Predecessors: [0xbef]
Successors: []
---
0xbfc PUSH1 0x0
0xbfe DUP1
0xbff REVERT
---
0xbfc: V1047 = 0x0
0xbff: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V322, 0x0, V322, V1004, 0x70a08231, V1029]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V322, 0x0, V322, V1004, 0x70a08231, V1029]

================================

Block 0xc00
[0xc00:0xc6a]
---
Predecessors: [0xbef]
Successors: [0xc6b, 0xc6f]
---
0xc00 JUMPDEST
0xc01 POP
0xc02 POP
0xc03 POP
0xc04 PUSH1 0x40
0xc06 MLOAD
0xc07 DUP1
0xc08 MLOAD
0xc09 PUSH1 0x3
0xc0b SLOAD
0xc0c SWAP1
0xc0d SWAP4
0xc0e POP
0xc0f PUSH1 0x1
0xc11 PUSH1 0xa0
0xc13 PUSH1 0x2
0xc15 EXP
0xc16 SUB
0xc17 DUP1
0xc18 DUP5
0xc19 AND
0xc1a SWAP3
0xc1b POP
0xc1c PUSH4 0xa9059cbb
0xc21 SWAP2
0xc22 AND
0xc23 DUP5
0xc24 PUSH1 0x0
0xc26 PUSH1 0x40
0xc28 MLOAD
0xc29 PUSH1 0x20
0xc2b ADD
0xc2c MSTORE
0xc2d PUSH1 0x40
0xc2f MLOAD
0xc30 PUSH1 0xe0
0xc32 PUSH1 0x2
0xc34 EXP
0xc35 PUSH4 0xffffffff
0xc3a DUP6
0xc3b AND
0xc3c MUL
0xc3d DUP2
0xc3e MSTORE
0xc3f PUSH1 0x1
0xc41 PUSH1 0xa0
0xc43 PUSH1 0x2
0xc45 EXP
0xc46 SUB
0xc47 SWAP1
0xc48 SWAP3
0xc49 AND
0xc4a PUSH1 0x4
0xc4c DUP4
0xc4d ADD
0xc4e MSTORE
0xc4f PUSH1 0x24
0xc51 DUP3
0xc52 ADD
0xc53 MSTORE
0xc54 PUSH1 0x44
0xc56 ADD
0xc57 PUSH1 0x20
0xc59 PUSH1 0x40
0xc5b MLOAD
0xc5c DUP1
0xc5d DUP4
0xc5e SUB
0xc5f DUP2
0xc60 PUSH1 0x0
0xc62 DUP8
0xc63 DUP1
0xc64 EXTCODESIZE
0xc65 ISZERO
0xc66 ISZERO
0xc67 PUSH2 0xc6f
0xc6a JUMPI
---
0xc00: JUMPDEST 
0xc04: V1048 = 0x40
0xc06: V1049 = M[0x40]
0xc08: V1050 = M[V1049]
0xc09: V1051 = 0x3
0xc0b: V1052 = S[0x3]
0xc0f: V1053 = 0x1
0xc11: V1054 = 0xa0
0xc13: V1055 = 0x2
0xc15: V1056 = EXP 0x2 0xa0
0xc16: V1057 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc19: V1058 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0xc1c: V1059 = 0xa9059cbb
0xc22: V1060 = AND V1052 0xffffffffffffffffffffffffffffffffffffffff
0xc24: V1061 = 0x0
0xc26: V1062 = 0x40
0xc28: V1063 = M[0x40]
0xc29: V1064 = 0x20
0xc2b: V1065 = ADD 0x20 V1063
0xc2c: M[V1065] = 0x0
0xc2d: V1066 = 0x40
0xc2f: V1067 = M[0x40]
0xc30: V1068 = 0xe0
0xc32: V1069 = 0x2
0xc34: V1070 = EXP 0x2 0xe0
0xc35: V1071 = 0xffffffff
0xc3b: V1072 = AND 0xa9059cbb 0xffffffff
0xc3c: V1073 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc3e: M[V1067] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc3f: V1074 = 0x1
0xc41: V1075 = 0xa0
0xc43: V1076 = 0x2
0xc45: V1077 = EXP 0x2 0xa0
0xc46: V1078 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc49: V1079 = AND V1060 0xffffffffffffffffffffffffffffffffffffffff
0xc4a: V1080 = 0x4
0xc4d: V1081 = ADD V1067 0x4
0xc4e: M[V1081] = V1079
0xc4f: V1082 = 0x24
0xc52: V1083 = ADD V1067 0x24
0xc53: M[V1083] = V1050
0xc54: V1084 = 0x44
0xc56: V1085 = ADD 0x44 V1067
0xc57: V1086 = 0x20
0xc59: V1087 = 0x40
0xc5b: V1088 = M[0x40]
0xc5e: V1089 = SUB V1085 V1088
0xc60: V1090 = 0x0
0xc64: V1091 = EXTCODESIZE V1058
0xc65: V1092 = ISZERO V1091
0xc66: V1093 = ISZERO V1092
0xc67: V1094 = 0xc6f
0xc6a: JUMPI 0xc6f V1093
---
Entry stack: [V13, 0x28a, V322, 0x0, V322, V1004, 0x70a08231, V1029]
Stack pops: 5
Stack additions: [V1050, S3, V1058, 0xa9059cbb, V1085, 0x20, V1088, V1089, V1088, 0x0, V1058]
Exit stack: [V13, 0x28a, V322, V1050, V322, V1058, 0xa9059cbb, V1085, 0x20, V1088, V1089, V1088, 0x0, V1058]

================================

Block 0xc6b
[0xc6b:0xc6e]
---
Predecessors: [0xc00]
Successors: []
---
0xc6b PUSH1 0x0
0xc6d DUP1
0xc6e REVERT
---
0xc6b: V1095 = 0x0
0xc6e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V322, V1050, V322, V1058, 0xa9059cbb, V1085, 0x20, V1088, V1089, V1088, 0x0, V1058]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V322, V1050, V322, V1058, 0xa9059cbb, V1085, 0x20, V1088, V1089, V1088, 0x0, V1058]

================================

Block 0xc6f
[0xc6f:0xc7b]
---
Predecessors: [0xc00]
Successors: [0xc7c, 0xc80]
---
0xc6f JUMPDEST
0xc70 PUSH2 0x2c6
0xc73 GAS
0xc74 SUB
0xc75 CALL
0xc76 ISZERO
0xc77 ISZERO
0xc78 PUSH2 0xc80
0xc7b JUMPI
---
0xc6f: JUMPDEST 
0xc70: V1096 = 0x2c6
0xc73: V1097 = GAS
0xc74: V1098 = SUB V1097 0x2c6
0xc75: V1099 = CALL V1098 V1058 0x0 V1088 V1089 V1088 0x20
0xc76: V1100 = ISZERO V1099
0xc77: V1101 = ISZERO V1100
0xc78: V1102 = 0xc80
0xc7b: JUMPI 0xc80 V1101
---
Entry stack: [V13, 0x28a, V322, V1050, V322, V1058, 0xa9059cbb, V1085, 0x20, V1088, V1089, V1088, 0x0, V1058]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x28a, V322, V1050, V322, V1058, 0xa9059cbb, V1085]

================================

Block 0xc7c
[0xc7c:0xc7f]
---
Predecessors: [0xc6f]
Successors: []
---
0xc7c PUSH1 0x0
0xc7e DUP1
0xc7f REVERT
---
0xc7c: V1103 = 0x0
0xc7f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V322, V1050, V322, V1058, 0xa9059cbb, V1085]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V322, V1050, V322, V1058, 0xa9059cbb, V1085]

================================

Block 0xc80
[0xc80:0xc90]
---
Predecessors: [0xc6f]
Successors: [0xc91, 0xc95]
---
0xc80 JUMPDEST
0xc81 POP
0xc82 POP
0xc83 POP
0xc84 PUSH1 0x40
0xc86 MLOAD
0xc87 DUP1
0xc88 MLOAD
0xc89 SWAP1
0xc8a POP
0xc8b ISZERO
0xc8c ISZERO
0xc8d PUSH2 0xc95
0xc90 JUMPI
---
0xc80: JUMPDEST 
0xc84: V1104 = 0x40
0xc86: V1105 = M[0x40]
0xc88: V1106 = M[V1105]
0xc8b: V1107 = ISZERO V1106
0xc8c: V1108 = ISZERO V1107
0xc8d: V1109 = 0xc95
0xc90: JUMPI 0xc95 V1108
---
Entry stack: [V13, 0x28a, V322, V1050, V322, V1058, 0xa9059cbb, V1085]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x28a, V322, V1050, V322]

================================

Block 0xc91
[0xc91:0xc94]
---
Predecessors: [0xc80]
Successors: []
---
0xc91 PUSH1 0x0
0xc93 DUP1
0xc94 REVERT
---
0xc91: V1110 = 0x0
0xc94: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V322, V1050, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V322, V1050, V322]

================================

Block 0xc95
[0xc95:0xcd9]
---
Predecessors: [0xc80]
Successors: [0xcda]
---
0xc95 JUMPDEST
0xc96 PUSH32 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0xcb7 DUP4
0xcb8 DUP4
0xcb9 PUSH1 0x40
0xcbb MLOAD
0xcbc PUSH1 0x1
0xcbe PUSH1 0xa0
0xcc0 PUSH1 0x2
0xcc2 EXP
0xcc3 SUB
0xcc4 SWAP1
0xcc5 SWAP3
0xcc6 AND
0xcc7 DUP3
0xcc8 MSTORE
0xcc9 PUSH1 0x20
0xccb DUP3
0xccc ADD
0xccd MSTORE
0xcce PUSH1 0x40
0xcd0 SWAP1
0xcd1 DUP2
0xcd2 ADD
0xcd3 SWAP1
0xcd4 MLOAD
0xcd5 DUP1
0xcd6 SWAP2
0xcd7 SUB
0xcd8 SWAP1
0xcd9 LOG1
---
0xc95: JUMPDEST 
0xc96: V1111 = 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0xcb9: V1112 = 0x40
0xcbb: V1113 = M[0x40]
0xcbc: V1114 = 0x1
0xcbe: V1115 = 0xa0
0xcc0: V1116 = 0x2
0xcc2: V1117 = EXP 0x2 0xa0
0xcc3: V1118 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc6: V1119 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0xcc8: M[V1113] = V1119
0xcc9: V1120 = 0x20
0xccc: V1121 = ADD V1113 0x20
0xccd: M[V1121] = V1050
0xcce: V1122 = 0x40
0xcd2: V1123 = ADD 0x40 V1113
0xcd4: V1124 = M[0x40]
0xcd7: V1125 = SUB V1123 V1124
0xcd9: LOG V1124 V1125 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
---
Entry stack: [V13, 0x28a, V322, V1050, V322]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x28a, V322, V1050, V322]

================================

Block 0xcda
[0xcda:0xcde]
---
Predecessors: [0xb4d, 0xc95, 0x1017]
Successors: [0x28a, 0x849, 0xe89]
---
0xcda JUMPDEST
0xcdb POP
0xcdc POP
0xcdd POP
0xcde JUMP
---
0xcda: JUMPDEST 
0xcde: JUMP {0x28a, 0x849, 0xe89}
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x28a, 0x849, 0xe89}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4]

================================

Block 0xcdf
[0xcdf:0xcef]
---
Predecessors: [0x3cb]
Successors: [0xcf0]
---
0xcdf JUMPDEST
0xce0 PUSH1 0x0
0xce2 PUSH1 0x1
0xce4 PUSH1 0xa0
0xce6 PUSH1 0x2
0xce8 EXP
0xce9 SUB
0xcea ADDRESS
0xceb AND
0xcec BALANCE
0xced DUP2
0xcee DUP1
0xcef DUP1
---
0xcdf: JUMPDEST 
0xce0: V1126 = 0x0
0xce2: V1127 = 0x1
0xce4: V1128 = 0xa0
0xce6: V1129 = 0x2
0xce8: V1130 = EXP 0x2 0xa0
0xce9: V1131 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcea: V1132 = ADDRESS
0xceb: V1133 = AND V1132 0xffffffffffffffffffffffffffffffffffffffff
0xcec: V1134 = BALANCE V1133
---
Entry stack: [V13, 0x160, V335]
Stack pops: 0
Stack additions: [0x0, V1134, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x160, V335, 0x0, V1134, 0x0, 0x0, 0x0]

================================

Block 0xcf0
[0xcf0:0xcf9]
---
Predecessors: [0xcdf, 0xd4b]
Successors: [0x743, 0xcfa]
---
0xcf0 JUMPDEST
0xcf1 DUP6
0xcf2 MLOAD
0xcf3 DUP4
0xcf4 LT
0xcf5 ISZERO
0xcf6 PUSH2 0x743
0xcf9 JUMPI
---
0xcf0: JUMPDEST 
0xcf2: V1135 = M[S5]
0xcf4: V1136 = LT S2 V1135
0xcf5: V1137 = ISZERO V1136
0xcf6: V1138 = 0x743
0xcf9: JUMPI 0x743 V1137
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xcfa
[0xcfa:0xd05]
---
Predecessors: [0xcf0]
Successors: [0xd06, 0xd07]
---
0xcfa PUSH1 0x60
0xcfc DUP7
0xcfd DUP5
0xcfe DUP2
0xcff MLOAD
0xd00 DUP2
0xd01 LT
0xd02 PUSH2 0xd07
0xd05 JUMPI
---
0xcfa: V1139 = 0x60
0xcff: V1140 = M[S5]
0xd01: V1141 = LT S2 V1140
0xd02: V1142 = 0xd07
0xd05: JUMPI 0xd07 V1141
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x60, S5, S2]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, 0x60, S5, S2]

================================

Block 0xd06
[0xd06:0xd06]
---
Predecessors: [0xcfa]
Successors: []
---
0xd06 INVALID
---
0xd06: INVALID 
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]

================================

Block 0xd07
[0xd07:0xd25]
---
Predecessors: [0xcfa]
Successors: [0xd26, 0xd27]
---
0xd07 JUMPDEST
0xd08 SWAP1
0xd09 PUSH1 0x20
0xd0b ADD
0xd0c SWAP1
0xd0d PUSH1 0x20
0xd0f MUL
0xd10 ADD
0xd11 MLOAD
0xd12 PUSH1 0x2
0xd14 SWAP2
0xd15 SWAP1
0xd16 SWAP2
0xd17 EXP
0xd18 SWAP1
0xd19 DIV
0xd1a SWAP2
0xd1b POP
0xd1c DUP6
0xd1d DUP4
0xd1e DUP2
0xd1f MLOAD
0xd20 DUP2
0xd21 LT
0xd22 PUSH2 0xd27
0xd25 JUMPI
---
0xd07: JUMPDEST 
0xd09: V1143 = 0x20
0xd0b: V1144 = ADD 0x20 S1
0xd0d: V1145 = 0x20
0xd0f: V1146 = MUL 0x20 S0
0xd10: V1147 = ADD V1146 V1144
0xd11: V1148 = M[V1147]
0xd12: V1149 = 0x2
0xd17: V1150 = EXP 0x2 0x60
0xd19: V1151 = DIV V1148 0x1000000000000000000000000
0xd1f: V1152 = M[S8]
0xd21: V1153 = LT S5 V1152
0xd22: V1154 = 0xd27
0xd25: JUMPI 0xd27 V1153
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V1151, S3, S8, S5]
Exit stack: [V13, S9, S8, S7, S6, S5, V1151, S3, S8, S5]

================================

Block 0xd26
[0xd26:0xd26]
---
Predecessors: [0xd07]
Successors: []
---
0xd26 INVALID
---
0xd26: INVALID 
---
Entry stack: [V13, S8, S7, S6, S5, S4, V1151, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, V1151, S2, S1, S0]

================================

Block 0xd27
[0xd27:0xd4a]
---
Predecessors: [0xd07]
Successors: [0xefa]
---
0xd27 JUMPDEST
0xd28 SWAP1
0xd29 PUSH1 0x20
0xd2b ADD
0xd2c SWAP1
0xd2d PUSH1 0x20
0xd2f MUL
0xd30 ADD
0xd31 MLOAD
0xd32 PUSH12 0xffffffffffffffffffffffff
0xd3f AND
0xd40 SWAP1
0xd41 POP
0xd42 PUSH2 0xd4b
0xd45 DUP3
0xd46 DUP3
0xd47 PUSH2 0xefa
0xd4a JUMP
---
0xd27: JUMPDEST 
0xd29: V1155 = 0x20
0xd2b: V1156 = ADD 0x20 S1
0xd2d: V1157 = 0x20
0xd2f: V1158 = MUL 0x20 S0
0xd30: V1159 = ADD V1158 V1156
0xd31: V1160 = M[V1159]
0xd32: V1161 = 0xffffffffffffffffffffffff
0xd3f: V1162 = AND 0xffffffffffffffffffffffff V1160
0xd42: V1163 = 0xd4b
0xd47: V1164 = 0xefa
0xd4a: JUMP 0xefa
---
Entry stack: [V13, S8, S7, S6, S5, S4, V1151, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, V1162, 0xd4b, S3, V1162]
Exit stack: [V13, S8, S7, S6, S5, S4, V1151, V1162, 0xd4b, V1151, V1162]

================================

Block 0xd4b
[0xd4b:0xda4]
---
Predecessors: [0xf3d]
Successors: [0xcf0]
---
0xd4b JUMPDEST
0xd4c CALLVALUE
0xd4d CALLER
0xd4e PUSH1 0x1
0xd50 PUSH1 0xa0
0xd52 PUSH1 0x2
0xd54 EXP
0xd55 SUB
0xd56 AND
0xd57 PUSH32 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7
0xd78 DUP5
0xd79 DUP5
0xd7a PUSH1 0x40
0xd7c MLOAD
0xd7d PUSH1 0x1
0xd7f PUSH1 0xa0
0xd81 PUSH1 0x2
0xd83 EXP
0xd84 SUB
0xd85 SWAP1
0xd86 SWAP3
0xd87 AND
0xd88 DUP3
0xd89 MSTORE
0xd8a PUSH1 0x20
0xd8c DUP3
0xd8d ADD
0xd8e MSTORE
0xd8f PUSH1 0x40
0xd91 SWAP1
0xd92 DUP2
0xd93 ADD
0xd94 SWAP1
0xd95 MLOAD
0xd96 DUP1
0xd97 SWAP2
0xd98 SUB
0xd99 SWAP1
0xd9a LOG3
0xd9b PUSH1 0x1
0xd9d SWAP1
0xd9e SWAP3
0xd9f ADD
0xda0 SWAP2
0xda1 PUSH2 0xcf0
0xda4 JUMP
---
0xd4b: JUMPDEST 
0xd4c: V1165 = CALLVALUE
0xd4d: V1166 = CALLER
0xd4e: V1167 = 0x1
0xd50: V1168 = 0xa0
0xd52: V1169 = 0x2
0xd54: V1170 = EXP 0x2 0xa0
0xd55: V1171 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd56: V1172 = AND 0xffffffffffffffffffffffffffffffffffffffff V1166
0xd57: V1173 = 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7
0xd7a: V1174 = 0x40
0xd7c: V1175 = M[0x40]
0xd7d: V1176 = 0x1
0xd7f: V1177 = 0xa0
0xd81: V1178 = 0x2
0xd83: V1179 = EXP 0x2 0xa0
0xd84: V1180 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd87: V1181 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xd89: M[V1175] = V1181
0xd8a: V1182 = 0x20
0xd8d: V1183 = ADD V1175 0x20
0xd8e: M[V1183] = S0
0xd8f: V1184 = 0x40
0xd93: V1185 = ADD 0x40 V1175
0xd95: V1186 = M[0x40]
0xd98: V1187 = SUB V1185 V1186
0xd9a: LOG V1186 V1187 0xa5c03fd81f783c38e4b274cd539e517bacfc824ee513ec4dad385269fa9684d7 V1172 V1165
0xd9b: V1188 = 0x1
0xd9f: V1189 = ADD S2 0x1
0xda1: V1190 = 0xcf0
0xda4: JUMP 0xcf0
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V1189, S1, S0]
Exit stack: [V13, S6, S5, S4, S3, V1189, S1, S0]

================================

Block 0xda5
[0xda5:0xdb3]
---
Predecessors: [0x41a]
Successors: [0x20b]
---
0xda5 JUMPDEST
0xda6 PUSH1 0x1
0xda8 SLOAD
0xda9 PUSH1 0x1
0xdab PUSH1 0xa0
0xdad PUSH1 0x2
0xdaf EXP
0xdb0 SUB
0xdb1 AND
0xdb2 DUP2
0xdb3 JUMP
---
0xda5: JUMPDEST 
0xda6: V1191 = 0x1
0xda8: V1192 = S[0x1]
0xda9: V1193 = 0x1
0xdab: V1194 = 0xa0
0xdad: V1195 = 0x2
0xdaf: V1196 = EXP 0x2 0xa0
0xdb0: V1197 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb1: V1198 = AND 0xffffffffffffffffffffffffffffffffffffffff V1192
0xdb3: JUMP 0x20b
---
Entry stack: [V13, 0x20b]
Stack pops: 1
Stack additions: [S0, V1198]
Exit stack: [V13, 0x20b, V1198]

================================

Block 0xdb4
[0xdb4:0xdcb]
---
Predecessors: [0x42d]
Successors: [0xdcc, 0xddf]
---
0xdb4 JUMPDEST
0xdb5 PUSH1 0x2
0xdb7 SLOAD
0xdb8 CALLER
0xdb9 PUSH1 0x1
0xdbb PUSH1 0xa0
0xdbd PUSH1 0x2
0xdbf EXP
0xdc0 SUB
0xdc1 SWAP1
0xdc2 DUP2
0xdc3 AND
0xdc4 SWAP2
0xdc5 AND
0xdc6 EQ
0xdc7 DUP1
0xdc8 PUSH2 0xddf
0xdcb JUMPI
---
0xdb4: JUMPDEST 
0xdb5: V1199 = 0x2
0xdb7: V1200 = S[0x2]
0xdb8: V1201 = CALLER
0xdb9: V1202 = 0x1
0xdbb: V1203 = 0xa0
0xdbd: V1204 = 0x2
0xdbf: V1205 = EXP 0x2 0xa0
0xdc0: V1206 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc3: V1207 = AND 0xffffffffffffffffffffffffffffffffffffffff V1201
0xdc5: V1208 = AND V1200 0xffffffffffffffffffffffffffffffffffffffff
0xdc6: V1209 = EQ V1208 V1207
0xdc8: V1210 = 0xddf
0xdcb: JUMPI 0xddf V1209
---
Entry stack: [V13, 0x28a, V361]
Stack pops: 0
Stack additions: [V1209]
Exit stack: [V13, 0x28a, V361, V1209]

================================

Block 0xdcc
[0xdcc:0xdde]
---
Predecessors: [0xdb4]
Successors: [0xddf]
---
0xdcc POP
0xdcd PUSH1 0x0
0xdcf SLOAD
0xdd0 CALLER
0xdd1 PUSH1 0x1
0xdd3 PUSH1 0xa0
0xdd5 PUSH1 0x2
0xdd7 EXP
0xdd8 SUB
0xdd9 SWAP1
0xdda DUP2
0xddb AND
0xddc SWAP2
0xddd AND
0xdde EQ
---
0xdcd: V1211 = 0x0
0xdcf: V1212 = S[0x0]
0xdd0: V1213 = CALLER
0xdd1: V1214 = 0x1
0xdd3: V1215 = 0xa0
0xdd5: V1216 = 0x2
0xdd7: V1217 = EXP 0x2 0xa0
0xdd8: V1218 = SUB 0x10000000000000000000000000000000000000000 0x1
0xddb: V1219 = AND 0xffffffffffffffffffffffffffffffffffffffff V1213
0xddd: V1220 = AND V1212 0xffffffffffffffffffffffffffffffffffffffff
0xdde: V1221 = EQ V1220 V1219
---
Entry stack: [V13, 0x28a, V361, V1209]
Stack pops: 1
Stack additions: [V1221]
Exit stack: [V13, 0x28a, V361, V1221]

================================

Block 0xddf
[0xddf:0xde5]
---
Predecessors: [0xdb4, 0xdcc]
Successors: [0xde6, 0xdea]
---
0xddf JUMPDEST
0xde0 ISZERO
0xde1 ISZERO
0xde2 PUSH2 0xdea
0xde5 JUMPI
---
0xddf: JUMPDEST 
0xde0: V1222 = ISZERO S0
0xde1: V1223 = ISZERO V1222
0xde2: V1224 = 0xdea
0xde5: JUMPI 0xdea V1223
---
Entry stack: [V13, 0x28a, V361, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x28a, V361]

================================

Block 0xde6
[0xde6:0xde9]
---
Predecessors: [0xddf]
Successors: []
---
0xde6 PUSH1 0x0
0xde8 DUP1
0xde9 REVERT
---
0xde6: V1225 = 0x0
0xde9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28a, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28a, V361]

================================

Block 0xdea
[0xdea:0xe18]
---
Predecessors: [0xddf]
Successors: [0x28a]
---
0xdea JUMPDEST
0xdeb PUSH1 0x2
0xded DUP1
0xdee SLOAD
0xdef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe04 NOT
0xe05 AND
0xe06 PUSH1 0x1
0xe08 PUSH1 0xa0
0xe0a PUSH1 0x2
0xe0c EXP
0xe0d SUB
0xe0e SWAP3
0xe0f SWAP1
0xe10 SWAP3
0xe11 AND
0xe12 SWAP2
0xe13 SWAP1
0xe14 SWAP2
0xe15 OR
0xe16 SWAP1
0xe17 SSTORE
0xe18 JUMP
---
0xdea: JUMPDEST 
0xdeb: V1226 = 0x2
0xdee: V1227 = S[0x2]
0xdef: V1228 = 0xffffffffffffffffffffffffffffffffffffffff
0xe04: V1229 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe05: V1230 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1227
0xe06: V1231 = 0x1
0xe08: V1232 = 0xa0
0xe0a: V1233 = 0x2
0xe0c: V1234 = EXP 0x2 0xa0
0xe0d: V1235 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe11: V1236 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0xe15: V1237 = OR V1236 V1230
0xe17: S[0x2] = V1237
0xe18: JUMP 0x28a
---
Entry stack: [V13, 0x28a, V361]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xe19
[0xe19:0xe27]
---
Predecessors: [0x44c]
Successors: [0x20b]
---
0xe19 JUMPDEST
0xe1a PUSH1 0x3
0xe1c SLOAD
0xe1d PUSH1 0x1
0xe1f PUSH1 0xa0
0xe21 PUSH1 0x2
0xe23 EXP
0xe24 SUB
0xe25 AND
0xe26 DUP2
0xe27 JUMP
---
0xe19: JUMPDEST 
0xe1a: V1238 = 0x3
0xe1c: V1239 = S[0x3]
0xe1d: V1240 = 0x1
0xe1f: V1241 = 0xa0
0xe21: V1242 = 0x2
0xe23: V1243 = EXP 0x2 0xa0
0xe24: V1244 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe25: V1245 = AND 0xffffffffffffffffffffffffffffffffffffffff V1239
0xe27: JUMP 0x20b
---
Entry stack: [V13, 0x20b]
Stack pops: 1
Stack additions: [S0, V1245]
Exit stack: [V13, 0x20b, V1245]

================================

Block 0xe28
[0xe28:0xe2c]
---
Predecessors: [0x45f]
Successors: [0xe2d]
---
0xe28 JUMPDEST
0xe29 PUSH1 0x0
0xe2b DUP1
0xe2c DUP1
---
0xe28: JUMPDEST 
0xe29: V1246 = 0x0
---
Entry stack: [V13, 0x28a, V381, V392]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x28a, V381, V392, 0x0, 0x0, 0x0]

================================

Block 0xe2d
[0xe2d:0xe36]
---
Predecessors: [0xe28, 0xe89]
Successors: [0xe37, 0xef3]
---
0xe2d JUMPDEST
0xe2e DUP4
0xe2f MLOAD
0xe30 DUP4
0xe31 LT
0xe32 ISZERO
0xe33 PUSH2 0xef3
0xe36 JUMPI
---
0xe2d: JUMPDEST 
0xe2f: V1247 = M[S3]
0xe31: V1248 = LT S2 V1247
0xe32: V1249 = ISZERO V1248
0xe33: V1250 = 0xef3
0xe36: JUMPI 0xef3 V1249
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, S0]

================================

Block 0xe37
[0xe37:0xe42]
---
Predecessors: [0xe2d]
Successors: [0xe43, 0xe44]
---
0xe37 PUSH1 0x60
0xe39 DUP5
0xe3a DUP5
0xe3b DUP2
0xe3c MLOAD
0xe3d DUP2
0xe3e LT
0xe3f PUSH2 0xe44
0xe42 JUMPI
---
0xe37: V1251 = 0x60
0xe3c: V1252 = M[S3]
0xe3e: V1253 = LT S2 V1252
0xe3f: V1254 = 0xe44
0xe42: JUMPI 0xe44 V1253
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x60, S3, S2]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x60, S3, S2]

================================

Block 0xe43
[0xe43:0xe43]
---
Predecessors: [0xe37]
Successors: []
---
0xe43 INVALID
---
0xe43: INVALID 
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]

================================

Block 0xe44
[0xe44:0xe62]
---
Predecessors: [0xe37]
Successors: [0xe63, 0xe64]
---
0xe44 JUMPDEST
0xe45 SWAP1
0xe46 PUSH1 0x20
0xe48 ADD
0xe49 SWAP1
0xe4a PUSH1 0x20
0xe4c MUL
0xe4d ADD
0xe4e MLOAD
0xe4f PUSH1 0x2
0xe51 SWAP2
0xe52 SWAP1
0xe53 SWAP2
0xe54 EXP
0xe55 SWAP1
0xe56 DIV
0xe57 SWAP2
0xe58 POP
0xe59 DUP4
0xe5a DUP4
0xe5b DUP2
0xe5c MLOAD
0xe5d DUP2
0xe5e LT
0xe5f PUSH2 0xe64
0xe62 JUMPI
---
0xe44: JUMPDEST 
0xe46: V1255 = 0x20
0xe48: V1256 = ADD 0x20 S1
0xe4a: V1257 = 0x20
0xe4c: V1258 = MUL 0x20 S0
0xe4d: V1259 = ADD V1258 V1256
0xe4e: V1260 = M[V1259]
0xe4f: V1261 = 0x2
0xe54: V1262 = EXP 0x2 0x60
0xe56: V1263 = DIV V1260 0x1000000000000000000000000
0xe5c: V1264 = M[S6]
0xe5e: V1265 = LT S5 V1264
0xe5f: V1266 = 0xe64
0xe62: JUMPI 0xe64 V1265
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, 0x60, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, V1263, S3, S6, S5]
Exit stack: [V13, S8, S7, S6, S5, V1263, S3, S6, S5]

================================

Block 0xe63
[0xe63:0xe63]
---
Predecessors: [0xe44]
Successors: []
---
0xe63 INVALID
---
0xe63: INVALID 
---
Entry stack: [V13, S7, S6, S5, S4, V1263, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, V1263, S2, S1, S0]

================================

Block 0xe64
[0xe64:0xe88]
---
Predecessors: [0xe44]
Successors: [0xf87]
---
0xe64 JUMPDEST
0xe65 SWAP1
0xe66 PUSH1 0x20
0xe68 ADD
0xe69 SWAP1
0xe6a PUSH1 0x20
0xe6c MUL
0xe6d ADD
0xe6e MLOAD
0xe6f PUSH12 0xffffffffffffffffffffffff
0xe7c AND
0xe7d SWAP1
0xe7e POP
0xe7f PUSH2 0xe89
0xe82 DUP6
0xe83 DUP4
0xe84 DUP4
0xe85 PUSH2 0xf87
0xe88 JUMP
---
0xe64: JUMPDEST 
0xe66: V1267 = 0x20
0xe68: V1268 = ADD 0x20 S1
0xe6a: V1269 = 0x20
0xe6c: V1270 = MUL 0x20 S0
0xe6d: V1271 = ADD V1270 V1268
0xe6e: V1272 = M[V1271]
0xe6f: V1273 = 0xffffffffffffffffffffffff
0xe7c: V1274 = AND 0xffffffffffffffffffffffff V1272
0xe7f: V1275 = 0xe89
0xe85: V1276 = 0xf87
0xe88: JUMP 0xf87
---
Entry stack: [V13, S7, S6, S5, S4, V1263, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V1274, 0xe89, S6, S3, V1274]
Exit stack: [V13, S7, S6, S5, S4, V1263, V1274, 0xe89, S6, V1263, V1274]

================================

Block 0xe89
[0xe89:0xef2]
---
Predecessors: [0xcda]
Successors: [0xe2d]
---
0xe89 JUMPDEST
0xe8a CALLVALUE
0xe8b CALLER
0xe8c PUSH1 0x1
0xe8e PUSH1 0xa0
0xe90 PUSH1 0x2
0xe92 EXP
0xe93 SUB
0xe94 AND
0xe95 PUSH32 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93
0xeb6 DUP5
0xeb7 DUP5
0xeb8 DUP10
0xeb9 PUSH1 0x40
0xebb MLOAD
0xebc PUSH1 0x1
0xebe PUSH1 0xa0
0xec0 PUSH1 0x2
0xec2 EXP
0xec3 SUB
0xec4 SWAP4
0xec5 DUP5
0xec6 AND
0xec7 DUP2
0xec8 MSTORE
0xec9 PUSH1 0x20
0xecb DUP2
0xecc ADD
0xecd SWAP3
0xece SWAP1
0xecf SWAP3
0xed0 MSTORE
0xed1 SWAP1
0xed2 SWAP2
0xed3 AND
0xed4 PUSH1 0x40
0xed6 DUP1
0xed7 DUP4
0xed8 ADD
0xed9 SWAP2
0xeda SWAP1
0xedb SWAP2
0xedc MSTORE
0xedd PUSH1 0x60
0xedf SWAP1
0xee0 SWAP2
0xee1 ADD
0xee2 SWAP1
0xee3 MLOAD
0xee4 DUP1
0xee5 SWAP2
0xee6 SUB
0xee7 SWAP1
0xee8 LOG3
0xee9 PUSH1 0x1
0xeeb SWAP1
0xeec SWAP3
0xeed ADD
0xeee SWAP2
0xeef PUSH2 0xe2d
0xef2 JUMP
---
0xe89: JUMPDEST 
0xe8a: V1277 = CALLVALUE
0xe8b: V1278 = CALLER
0xe8c: V1279 = 0x1
0xe8e: V1280 = 0xa0
0xe90: V1281 = 0x2
0xe92: V1282 = EXP 0x2 0xa0
0xe93: V1283 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe94: V1284 = AND 0xffffffffffffffffffffffffffffffffffffffff V1278
0xe95: V1285 = 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93
0xeb9: V1286 = 0x40
0xebb: V1287 = M[0x40]
0xebc: V1288 = 0x1
0xebe: V1289 = 0xa0
0xec0: V1290 = 0x2
0xec2: V1291 = EXP 0x2 0xa0
0xec3: V1292 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec6: V1293 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xec8: M[V1287] = V1293
0xec9: V1294 = 0x20
0xecc: V1295 = ADD V1287 0x20
0xed0: M[V1295] = S0
0xed3: V1296 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xed4: V1297 = 0x40
0xed8: V1298 = ADD V1287 0x40
0xedc: M[V1298] = V1296
0xedd: V1299 = 0x60
0xee1: V1300 = ADD V1287 0x60
0xee3: V1301 = M[0x40]
0xee6: V1302 = SUB V1300 V1301
0xee8: LOG V1301 V1302 0xfc01e439ca3c7015e18b8adea39e270034ba32f41fc788a4ff659842f0f37a93 V1284 V1277
0xee9: V1303 = 0x1
0xeed: V1304 = ADD S2 0x1
0xeef: V1305 = 0xe2d
0xef2: JUMP 0xe2d
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V1304, S1, S0]
Exit stack: [V13, S5, S4, S3, V1304, S1, S0]

================================

Block 0xef3
[0xef3:0xef9]
---
Predecessors: [0xe2d]
Successors: [0x28a]
---
0xef3 JUMPDEST
0xef4 POP
0xef5 POP
0xef6 POP
0xef7 POP
0xef8 POP
0xef9 JUMP
---
0xef3: JUMPDEST 
0xef9: JUMP S5
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0xefa
[0xefa:0xf0a]
---
Predecessors: [0x4ee, 0xd27]
Successors: [0xf0b, 0xf0f]
---
0xefa JUMPDEST
0xefb PUSH1 0x1
0xefd PUSH1 0xa0
0xeff PUSH1 0x2
0xf01 EXP
0xf02 SUB
0xf03 DUP3
0xf04 AND
0xf05 ISZERO
0xf06 ISZERO
0xf07 PUSH2 0xf0f
0xf0a JUMPI
---
0xefa: JUMPDEST 
0xefb: V1306 = 0x1
0xefd: V1307 = 0xa0
0xeff: V1308 = 0x2
0xf01: V1309 = EXP 0x2 0xa0
0xf02: V1310 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf04: V1311 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xf05: V1312 = ISZERO V1311
0xf06: V1313 = ISZERO V1312
0xf07: V1314 = 0xf0f
0xf0a: JUMPI 0xf0f V1313
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0xd4b}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0xd4b}, S1, S0]

================================

Block 0xf0b
[0xf0b:0xf0e]
---
Predecessors: [0xefa]
Successors: []
---
0xf0b PUSH1 0x0
0xf0d DUP1
0xf0e REVERT
---
0xf0b: V1315 = 0x0
0xf0e: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0xd4b}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0xd4b}, S1, S0]

================================

Block 0xf0f
[0xf0f:0xf38]
---
Predecessors: [0xefa]
Successors: [0xf39, 0xf3d]
---
0xf0f JUMPDEST
0xf10 DUP2
0xf11 PUSH1 0x1
0xf13 PUSH1 0xa0
0xf15 PUSH1 0x2
0xf17 EXP
0xf18 SUB
0xf19 AND
0xf1a DUP2
0xf1b PUSH1 0x40
0xf1d MLOAD
0xf1e PUSH1 0x0
0xf20 PUSH1 0x40
0xf22 MLOAD
0xf23 DUP1
0xf24 DUP4
0xf25 SUB
0xf26 DUP2
0xf27 DUP6
0xf28 DUP8
0xf29 PUSH2 0x8796
0xf2c GAS
0xf2d SUB
0xf2e CALL
0xf2f SWAP3
0xf30 POP
0xf31 POP
0xf32 POP
0xf33 ISZERO
0xf34 ISZERO
0xf35 PUSH2 0xf3d
0xf38 JUMPI
---
0xf0f: JUMPDEST 
0xf11: V1316 = 0x1
0xf13: V1317 = 0xa0
0xf15: V1318 = 0x2
0xf17: V1319 = EXP 0x2 0xa0
0xf18: V1320 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf19: V1321 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf1b: V1322 = 0x40
0xf1d: V1323 = M[0x40]
0xf1e: V1324 = 0x0
0xf20: V1325 = 0x40
0xf22: V1326 = M[0x40]
0xf25: V1327 = SUB V1323 V1326
0xf29: V1328 = 0x8796
0xf2c: V1329 = GAS
0xf2d: V1330 = SUB V1329 0x8796
0xf2e: V1331 = CALL V1330 V1321 S0 V1326 V1327 V1326 0x0
0xf33: V1332 = ISZERO V1331
0xf34: V1333 = ISZERO V1332
0xf35: V1334 = 0xf3d
0xf38: JUMPI 0xf3d V1333
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0xd4b}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0xd4b}, S1, S0]

================================

Block 0xf39
[0xf39:0xf3c]
---
Predecessors: [0xf0f]
Successors: []
---
0xf39 PUSH1 0x0
0xf3b DUP1
0xf3c REVERT
---
0xf39: V1335 = 0x0
0xf3c: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0xd4b}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0xd4b}, S1, S0]

================================

Block 0xf3d
[0xf3d:0xf40]
---
Predecessors: [0xf0f, 0xf56]
Successors: [0x4fd, 0x5ed, 0x6e9, 0xd4b]
---
0xf3d JUMPDEST
0xf3e POP
0xf3f POP
0xf40 JUMP
---
0xf3d: JUMPDEST 
0xf40: JUMP {0x4fd, 0x5ed, 0x6e9, 0xd4b}
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x4fd, 0x5ed, 0x6e9, 0xd4b}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xf41
[0xf41:0xf51]
---
Predecessors: [0x5de, 0x6c5]
Successors: [0xf52, 0xf56]
---
0xf41 JUMPDEST
0xf42 PUSH1 0x1
0xf44 PUSH1 0xa0
0xf46 PUSH1 0x2
0xf48 EXP
0xf49 SUB
0xf4a DUP3
0xf4b AND
0xf4c ISZERO
0xf4d ISZERO
0xf4e PUSH2 0xf56
0xf51 JUMPI
---
0xf41: JUMPDEST 
0xf42: V1336 = 0x1
0xf44: V1337 = 0xa0
0xf46: V1338 = 0x2
0xf48: V1339 = EXP 0x2 0xa0
0xf49: V1340 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4b: V1341 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xf4c: V1342 = ISZERO V1341
0xf4d: V1343 = ISZERO V1342
0xf4e: V1344 = 0xf56
0xf51: JUMPI 0xf56 V1343
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x5ed, 0x6e9}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x5ed, 0x6e9}, S1, S0]

================================

Block 0xf52
[0xf52:0xf55]
---
Predecessors: [0xf41]
Successors: []
---
0xf52 PUSH1 0x0
0xf54 DUP1
0xf55 REVERT
---
0xf52: V1345 = 0x0
0xf55: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x5ed, 0x6e9}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x5ed, 0x6e9}, S1, S0]

================================

Block 0xf56
[0xf56:0xf82]
---
Predecessors: [0xf41]
Successors: [0xf3d, 0xf83]
---
0xf56 JUMPDEST
0xf57 PUSH1 0x1
0xf59 PUSH1 0xa0
0xf5b PUSH1 0x2
0xf5d EXP
0xf5e SUB
0xf5f DUP3
0xf60 AND
0xf61 DUP2
0xf62 ISZERO
0xf63 PUSH2 0x8fc
0xf66 MUL
0xf67 DUP3
0xf68 PUSH1 0x40
0xf6a MLOAD
0xf6b PUSH1 0x0
0xf6d PUSH1 0x40
0xf6f MLOAD
0xf70 DUP1
0xf71 DUP4
0xf72 SUB
0xf73 DUP2
0xf74 DUP6
0xf75 DUP9
0xf76 DUP9
0xf77 CALL
0xf78 SWAP4
0xf79 POP
0xf7a POP
0xf7b POP
0xf7c POP
0xf7d ISZERO
0xf7e ISZERO
0xf7f PUSH2 0xf3d
0xf82 JUMPI
---
0xf56: JUMPDEST 
0xf57: V1346 = 0x1
0xf59: V1347 = 0xa0
0xf5b: V1348 = 0x2
0xf5d: V1349 = EXP 0x2 0xa0
0xf5e: V1350 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf60: V1351 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xf62: V1352 = ISZERO S0
0xf63: V1353 = 0x8fc
0xf66: V1354 = MUL 0x8fc V1352
0xf68: V1355 = 0x40
0xf6a: V1356 = M[0x40]
0xf6b: V1357 = 0x0
0xf6d: V1358 = 0x40
0xf6f: V1359 = M[0x40]
0xf72: V1360 = SUB V1356 V1359
0xf77: V1361 = CALL V1354 V1351 S0 V1359 V1360 V1359 0x0
0xf7d: V1362 = ISZERO V1361
0xf7e: V1363 = ISZERO V1362
0xf7f: V1364 = 0xf3d
0xf82: JUMPI 0xf3d V1363
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x5ed, 0x6e9}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x5ed, 0x6e9}, S1, S0]

================================

Block 0xf83
[0xf83:0xf86]
---
Predecessors: [0xf56]
Successors: []
---
0xf83 PUSH1 0x0
0xf85 DUP1
0xf86 REVERT
---
0xf83: V1365 = 0x0
0xf86: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x5ed, 0x6e9}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x5ed, 0x6e9}, S1, S0]

================================

Block 0xf87
[0xf87:0xf97]
---
Predecessors: [0x83a, 0xe64]
Successors: [0xf98, 0xf9c]
---
0xf87 JUMPDEST
0xf88 PUSH1 0x1
0xf8a PUSH1 0xa0
0xf8c PUSH1 0x2
0xf8e EXP
0xf8f SUB
0xf90 DUP3
0xf91 AND
0xf92 ISZERO
0xf93 ISZERO
0xf94 PUSH2 0xf9c
0xf97 JUMPI
---
0xf87: JUMPDEST 
0xf88: V1366 = 0x1
0xf8a: V1367 = 0xa0
0xf8c: V1368 = 0x2
0xf8e: V1369 = EXP 0x2 0xa0
0xf8f: V1370 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf91: V1371 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xf92: V1372 = ISZERO V1371
0xf93: V1373 = ISZERO V1372
0xf94: V1374 = 0xf9c
0xf97: JUMPI 0xf9c V1373
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x849, 0xe89}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x849, 0xe89}, S2, S1, S0]

================================

Block 0xf98
[0xf98:0xf9b]
---
Predecessors: [0xf87]
Successors: []
---
0xf98 PUSH1 0x0
0xf9a DUP1
0xf9b REVERT
---
0xf98: V1375 = 0x0
0xf9b: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x849, 0xe89}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x849, 0xe89}, S2, S1, S0]

================================

Block 0xf9c
[0xf9c:0x1001]
---
Predecessors: [0xf87]
Successors: [0x1002, 0x1006]
---
0xf9c JUMPDEST
0xf9d DUP3
0xf9e PUSH1 0x1
0xfa0 PUSH1 0xa0
0xfa2 PUSH1 0x2
0xfa4 EXP
0xfa5 SUB
0xfa6 AND
0xfa7 PUSH4 0x23b872dd
0xfac CALLER
0xfad DUP5
0xfae DUP5
0xfaf PUSH1 0x0
0xfb1 PUSH1 0x40
0xfb3 MLOAD
0xfb4 PUSH1 0x20
0xfb6 ADD
0xfb7 MSTORE
0xfb8 PUSH1 0x40
0xfba MLOAD
0xfbb PUSH1 0xe0
0xfbd PUSH1 0x2
0xfbf EXP
0xfc0 PUSH4 0xffffffff
0xfc5 DUP7
0xfc6 AND
0xfc7 MUL
0xfc8 DUP2
0xfc9 MSTORE
0xfca PUSH1 0x1
0xfcc PUSH1 0xa0
0xfce PUSH1 0x2
0xfd0 EXP
0xfd1 SUB
0xfd2 SWAP4
0xfd3 DUP5
0xfd4 AND
0xfd5 PUSH1 0x4
0xfd7 DUP3
0xfd8 ADD
0xfd9 MSTORE
0xfda SWAP2
0xfdb SWAP1
0xfdc SWAP3
0xfdd AND
0xfde PUSH1 0x24
0xfe0 DUP3
0xfe1 ADD
0xfe2 MSTORE
0xfe3 PUSH1 0x44
0xfe5 DUP2
0xfe6 ADD
0xfe7 SWAP2
0xfe8 SWAP1
0xfe9 SWAP2
0xfea MSTORE
0xfeb PUSH1 0x64
0xfed ADD
0xfee PUSH1 0x20
0xff0 PUSH1 0x40
0xff2 MLOAD
0xff3 DUP1
0xff4 DUP4
0xff5 SUB
0xff6 DUP2
0xff7 PUSH1 0x0
0xff9 DUP8
0xffa DUP1
0xffb EXTCODESIZE
0xffc ISZERO
0xffd ISZERO
0xffe PUSH2 0x1006
0x1001 JUMPI
---
0xf9c: JUMPDEST 
0xf9e: V1376 = 0x1
0xfa0: V1377 = 0xa0
0xfa2: V1378 = 0x2
0xfa4: V1379 = EXP 0x2 0xa0
0xfa5: V1380 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa6: V1381 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xfa7: V1382 = 0x23b872dd
0xfac: V1383 = CALLER
0xfaf: V1384 = 0x0
0xfb1: V1385 = 0x40
0xfb3: V1386 = M[0x40]
0xfb4: V1387 = 0x20
0xfb6: V1388 = ADD 0x20 V1386
0xfb7: M[V1388] = 0x0
0xfb8: V1389 = 0x40
0xfba: V1390 = M[0x40]
0xfbb: V1391 = 0xe0
0xfbd: V1392 = 0x2
0xfbf: V1393 = EXP 0x2 0xe0
0xfc0: V1394 = 0xffffffff
0xfc6: V1395 = AND 0x23b872dd 0xffffffff
0xfc7: V1396 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0xfc9: M[V1390] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xfca: V1397 = 0x1
0xfcc: V1398 = 0xa0
0xfce: V1399 = 0x2
0xfd0: V1400 = EXP 0x2 0xa0
0xfd1: V1401 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd4: V1402 = AND 0xffffffffffffffffffffffffffffffffffffffff V1383
0xfd5: V1403 = 0x4
0xfd8: V1404 = ADD V1390 0x4
0xfd9: M[V1404] = V1402
0xfdd: V1405 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xfde: V1406 = 0x24
0xfe1: V1407 = ADD V1390 0x24
0xfe2: M[V1407] = V1405
0xfe3: V1408 = 0x44
0xfe6: V1409 = ADD V1390 0x44
0xfea: M[V1409] = S0
0xfeb: V1410 = 0x64
0xfed: V1411 = ADD 0x64 V1390
0xfee: V1412 = 0x20
0xff0: V1413 = 0x40
0xff2: V1414 = M[0x40]
0xff5: V1415 = SUB V1411 V1414
0xff7: V1416 = 0x0
0xffb: V1417 = EXTCODESIZE V1381
0xffc: V1418 = ISZERO V1417
0xffd: V1419 = ISZERO V1418
0xffe: V1420 = 0x1006
0x1001: JUMPI 0x1006 V1419
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x849, 0xe89}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1381, 0x23b872dd, V1411, 0x20, V1414, V1415, V1414, 0x0, V1381]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x849, 0xe89}, S2, S1, S0, V1381, 0x23b872dd, V1411, 0x20, V1414, V1415, V1414, 0x0, V1381]

================================

Block 0x1002
[0x1002:0x1005]
---
Predecessors: [0xf9c]
Successors: []
---
0x1002 PUSH1 0x0
0x1004 DUP1
0x1005 REVERT
---
0x1002: V1421 = 0x0
0x1005: REVERT 0x0 0x0
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, {0x849, 0xe89}, S11, S10, S9, V1381, 0x23b872dd, V1411, 0x20, V1414, V1415, V1414, 0x0, V1381]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, {0x849, 0xe89}, S11, S10, S9, V1381, 0x23b872dd, V1411, 0x20, V1414, V1415, V1414, 0x0, V1381]

================================

Block 0x1006
[0x1006:0x1012]
---
Predecessors: [0xf9c]
Successors: [0x1013, 0x1017]
---
0x1006 JUMPDEST
0x1007 PUSH2 0x2c6
0x100a GAS
0x100b SUB
0x100c CALL
0x100d ISZERO
0x100e ISZERO
0x100f PUSH2 0x1017
0x1012 JUMPI
---
0x1006: JUMPDEST 
0x1007: V1422 = 0x2c6
0x100a: V1423 = GAS
0x100b: V1424 = SUB V1423 0x2c6
0x100c: V1425 = CALL V1424 V1381 0x0 V1414 V1415 V1414 0x20
0x100d: V1426 = ISZERO V1425
0x100e: V1427 = ISZERO V1426
0x100f: V1428 = 0x1017
0x1012: JUMPI 0x1017 V1427
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, {0x849, 0xe89}, S11, S10, S9, V1381, 0x23b872dd, V1411, 0x20, V1414, V1415, V1414, 0x0, V1381]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, {0x849, 0xe89}, S11, S10, S9, V1381, 0x23b872dd, V1411]

================================

Block 0x1013
[0x1013:0x1016]
---
Predecessors: [0x1006]
Successors: []
---
0x1013 PUSH1 0x0
0x1015 DUP1
0x1016 REVERT
---
0x1013: V1429 = 0x0
0x1016: REVERT 0x0 0x0
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, {0x849, 0xe89}, S5, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, {0x849, 0xe89}, S5, S4, S3, S2, 0x23b872dd, S0]

================================

Block 0x1017
[0x1017:0x1027]
---
Predecessors: [0x1006]
Successors: [0xcda, 0x1028]
---
0x1017 JUMPDEST
0x1018 POP
0x1019 POP
0x101a POP
0x101b PUSH1 0x40
0x101d MLOAD
0x101e DUP1
0x101f MLOAD
0x1020 SWAP1
0x1021 POP
0x1022 ISZERO
0x1023 ISZERO
0x1024 PUSH2 0xcda
0x1027 JUMPI
---
0x1017: JUMPDEST 
0x101b: V1430 = 0x40
0x101d: V1431 = M[0x40]
0x101f: V1432 = M[V1431]
0x1022: V1433 = ISZERO V1432
0x1023: V1434 = ISZERO V1433
0x1024: V1435 = 0xcda
0x1027: JUMPI 0xcda V1434
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, {0x849, 0xe89}, S5, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, {0x849, 0xe89}, S5, S4, S3]

================================

Block 0x1028
[0x1028:0x102b]
---
Predecessors: [0x1017]
Successors: []
---
0x1028 PUSH1 0x0
0x102a DUP1
0x102b REVERT
---
0x1028: V1436 = 0x0
0x102b: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x849, 0xe89}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x849, 0xe89}, S2, S1, S0]

================================

Block 0x102c
[0x102c:0x1071]
---
Predecessors: []
Successors: []
---
0x102c STOP
0x102d LOG1
0x102e PUSH6 0x627a7a723058
0x1035 SHA3
0x1036 PUSH14 0x3245535bbb40c1e4add63bf860ef
0x1045 MISSING 0xf7
0x1046 MISSING 0xb6
0x1047 DUP13
0x1048 SLOAD
0x1049 MISSING 0xd2
0x104a SWAP11
0x104b AND
0x104c MISSING 0xb4
0x104d MISSING 0xd
0x104e MISSING 0x2b
0x104f SWAP13
0x1050 MISSING 0xc
0x1051 AND
0x1052 MISSING 0xd9
0x1053 MISSING 0x4d
0x1054 PUSH29 0xd50029
---
0x102c: STOP 
0x102d: LOG S0 S1 S2
0x102e: V1437 = 0x627a7a723058
0x1035: V1438 = SHA3 0x627a7a723058 S3
0x1036: V1439 = 0x3245535bbb40c1e4add63bf860ef
0x1045: MISSING 0xf7
0x1046: MISSING 0xb6
0x1048: V1440 = S[S12]
0x1049: MISSING 0xd2
0x104b: V1441 = AND S11 S1
0x104c: MISSING 0xb4
0x104d: MISSING 0xd
0x104e: MISSING 0x2b
0x1050: MISSING 0xc
0x1051: V1442 = AND S0 S1
0x1052: MISSING 0xd9
0x1053: MISSING 0x4d
0x1054: V1443 = 0xd50029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3245535bbb40c1e4add63bf860ef, V1438, V1440, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1441, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, V1442, 0xd50029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1476e40f
Entry block: 0xdc
Exit block: 0xf83
Body: 0xdc, 0x160, 0x4b1, 0x4c0, 0x4ca, 0x4d7, 0x4d8, 0x4ed, 0x4ee, 0x4fd, 0x534, 0x535, 0x54a, 0x54b, 0x57e, 0x592, 0x596, 0x5b0, 0x5ba, 0x5c7, 0x5c8, 0x5dd, 0x5de, 0x5ed, 0x624, 0x625, 0x63a, 0x63b, 0x68e, 0x698, 0x6a4, 0x6a5, 0x6c4, 0x6c5, 0x6e9, 0x743, 0x757, 0x75b, 0xcf0, 0xcfa, 0xd06, 0xd07, 0xd26, 0xd27, 0xd4b, 0xefa, 0xf0b, 0xf0f, 0xf39, 0xf3d, 0xf41, 0xf52, 0xf56, 0xf83

Function 1:
Public function signature: 0x1e89d545
Entry block: 0x174
Exit block: 0xf39
Body: 0x160, 0x174, 0x4c0, 0x4ca, 0x4d7, 0x4d8, 0x4ed, 0x4ee, 0x4fd, 0x534, 0x535, 0x54a, 0x54b, 0x57e, 0x592, 0x596, 0x5a1, 0x5b0, 0x5ba, 0x5c7, 0x5c8, 0x5dd, 0x5de, 0x5ed, 0x624, 0x625, 0x63a, 0x63b, 0x68e, 0x698, 0x6a4, 0x6a5, 0x6c4, 0x6c5, 0x6e9, 0x743, 0x757, 0x75b, 0xcf0, 0xcfa, 0xd06, 0xd07, 0xd26, 0xd27, 0xd4b, 0xefa, 0xf0b, 0xf0f, 0xf39, 0xf3d, 0xf41, 0xf52, 0xf56, 0xf83

Function 2:
Public function signature: 0x1f6eb6e7
Entry block: 0x1f8
Exit block: 0x20b
Body: 0x1f8, 0x1ff, 0x203, 0x20b, 0x66e

Function 3:
Public function signature: 0x2a17e397
Entry block: 0x227
Exit block: 0xf39
Body: 0x160, 0x227, 0x4c0, 0x4ca, 0x4d7, 0x4d8, 0x4ed, 0x4ee, 0x4fd, 0x534, 0x535, 0x54a, 0x54b, 0x57e, 0x592, 0x596, 0x5b0, 0x5ba, 0x5c7, 0x5c8, 0x5dd, 0x5de, 0x5ed, 0x624, 0x625, 0x63a, 0x63b, 0x67d, 0x68e, 0x698, 0x6a4, 0x6a5, 0x6c4, 0x6c5, 0x6e9, 0x743, 0x757, 0x75b, 0xcf0, 0xcfa, 0xd06, 0xd07, 0xd26, 0xd27, 0xd4b, 0xefa, 0xf0b, 0xf0f, 0xf39, 0xf3d, 0xf41, 0xf52, 0xf56, 0xf83

Function 4:
Public function signature: 0x2af4c31e
Entry block: 0x26b
Exit block: 0x28a
Body: 0x26b, 0x272, 0x276, 0x28a, 0x767, 0x77f, 0x783, 0x794, 0x798

Function 5:
Public function signature: 0x35a21728
Entry block: 0x28c
Exit block: 0xe63
Body: 0x28a, 0x28c, 0x293, 0x297, 0x808, 0x80b, 0x815, 0x823, 0x824, 0x839, 0x83a, 0x849, 0x880, 0x881, 0x896, 0x897, 0x8da, 0xcda, 0xe2d, 0xe37, 0xe43, 0xe44, 0xe63, 0xe64, 0xe89, 0xef3, 0xf87, 0xf98, 0xf9c, 0x1002, 0x1006, 0x1013, 0x1017, 0x1028

Function 6:
Public function signature: 0x666a3427
Entry block: 0x329
Exit block: 0x28a
Body: 0x28a, 0x329, 0x330, 0x334, 0x8e0, 0x8f7, 0x8fb, 0x90e, 0x912

Function 7:
Public function signature: 0x710bf322
Entry block: 0x348
Exit block: 0x28a
Body: 0x28a, 0x348, 0x34f, 0x353, 0x96a, 0x981, 0x985

Function 8:
Public function signature: 0x79ba5097
Entry block: 0x367
Exit block: 0x28a
Body: 0x28a, 0x367, 0x36e, 0x372, 0x9e8, 0xa02, 0xa06

Function 9:
Public function signature: 0x892db057
Entry block: 0x37a
Exit block: 0x160
Body: 0x160, 0x37a, 0x381, 0x385, 0xa75

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x399
Exit block: 0x20b
Body: 0x20b, 0x399, 0x3a0, 0x3a4, 0xa94

Function 11:
Public function signature: 0xa142d608
Entry block: 0x3ac
Exit block: 0x1028
Body: 0x28a, 0x3ac, 0x3b3, 0x3b7, 0x80b, 0x815, 0x823, 0x824, 0x839, 0x83a, 0x849, 0x880, 0x881, 0x896, 0x897, 0x8da, 0xaa3, 0xac0, 0xad3, 0xada, 0xade, 0xb00, 0xb04, 0xb15, 0xb49, 0xb4d, 0xb96, 0xbeb, 0xbef, 0xbfc, 0xc00, 0xc6b, 0xc6f, 0xc7c, 0xc80, 0xc91, 0xc95, 0xcda, 0xe2d, 0xe37, 0xe43, 0xe44, 0xe63, 0xe64, 0xe89, 0xef3, 0xf87, 0xf98, 0xf9c, 0x1002, 0x1006, 0x1013, 0x1017, 0x1028

Function 12:
Public function signature: 0xac66777f
Entry block: 0x3cb
Exit block: 0xf83
Body: 0x160, 0x3cb, 0x4c0, 0x4ca, 0x4d7, 0x4d8, 0x4ed, 0x4ee, 0x4fd, 0x534, 0x535, 0x54a, 0x54b, 0x57e, 0x592, 0x596, 0x5b0, 0x5ba, 0x5c7, 0x5c8, 0x5dd, 0x5de, 0x5ed, 0x624, 0x625, 0x63a, 0x63b, 0x68e, 0x698, 0x6a4, 0x6a5, 0x6c4, 0x6c5, 0x6e9, 0x743, 0x757, 0x75b, 0xcdf, 0xcf0, 0xcfa, 0xd06, 0xd07, 0xd26, 0xd27, 0xd4b, 0xefa, 0xf0b, 0xf0f, 0xf39, 0xf3d, 0xf41, 0xf52, 0xf56, 0xf83

Function 13:
Public function signature: 0xd091b550
Entry block: 0x40f
Exit block: 0x20b
Body: 0x20b, 0x40f, 0x416, 0x41a, 0xda5

Function 14:
Public function signature: 0xd836fbe8
Entry block: 0x422
Exit block: 0x28a
Body: 0x28a, 0x422, 0x429, 0x42d, 0xdb4, 0xdcc, 0xddf, 0xde6, 0xdea

Function 15:
Public function signature: 0xf5b61230
Entry block: 0x441
Exit block: 0x20b
Body: 0x20b, 0x441, 0x448, 0x44c, 0xe19

Function 16:
Public function signature: 0xf8f1d927
Entry block: 0x454
Exit block: 0x839
Body: 0x28a, 0x454, 0x45b, 0x45f, 0x80b, 0x815, 0x823, 0x824, 0x839, 0x83a, 0x849, 0x880, 0x881, 0x896, 0x897, 0x8da, 0xcda, 0xe28, 0xe2d, 0xe37, 0xe43, 0xe44, 0xe63, 0xe64, 0xe89, 0xef3, 0xf87, 0xf98, 0xf9c, 0x1002, 0x1006, 0x1013, 0x1017, 0x1028

Function 17:
Public fallback function
Entry block: 0xd7
Exit block: 0xd7
Body: 0xd7

