Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x92]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x92
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x92
0xa: JUMPI 0x92 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x97]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH3 0x5b4487
0x1e DUP2
0x1f EQ
0x20 PUSH2 0x97
0x23 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x5b4487
0x1f: V14 = EQ V12 0x5b4487
0x20: V15 = 0x97
0x23: JUMPI 0x97 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0xb]
Successors: [0x2f, 0xbc]
---
0x24 DUP1
0x25 PUSH4 0x377ed13c
0x2a EQ
0x2b PUSH2 0xbc
0x2e JUMPI
---
0x25: V16 = 0x377ed13c
0x2a: V17 = EQ 0x377ed13c V12
0x2b: V18 = 0xbc
0x2e: JUMPI 0xbc V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0xdd]
---
0x2f DUP1
0x30 PUSH4 0x6103d70b
0x35 EQ
0x36 PUSH2 0xdd
0x39 JUMPI
---
0x30: V19 = 0x6103d70b
0x35: V20 = EQ 0x6103d70b V12
0x36: V21 = 0xdd
0x39: JUMPI 0xdd V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0xf2]
---
0x3a DUP1
0x3b PUSH4 0x83197ef0
0x40 EQ
0x41 PUSH2 0xf2
0x44 JUMPI
---
0x3b: V22 = 0x83197ef0
0x40: V23 = EQ 0x83197ef0 V12
0x41: V24 = 0xf2
0x44: JUMPI 0xf2 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x45
[0x45:0x4f]
---
Predecessors: [0x3a]
Successors: [0x50, 0x107]
---
0x45 DUP1
0x46 PUSH4 0x8da5cb5b
0x4b EQ
0x4c PUSH2 0x107
0x4f JUMPI
---
0x46: V25 = 0x8da5cb5b
0x4b: V26 = EQ 0x8da5cb5b V12
0x4c: V27 = 0x107
0x4f: JUMPI 0x107 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0x45]
Successors: [0x5b, 0x136]
---
0x50 DUP1
0x51 PUSH4 0x9ad2fc8b
0x56 EQ
0x57 PUSH2 0x136
0x5a JUMPI
---
0x51: V28 = 0x9ad2fc8b
0x56: V29 = EQ 0x9ad2fc8b V12
0x57: V30 = 0x136
0x5a: JUMPI 0x136 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5b
[0x5b:0x65]
---
Predecessors: [0x50]
Successors: [0x66, 0x184]
---
0x5b DUP1
0x5c PUSH4 0xaeabc062
0x61 EQ
0x62 PUSH2 0x184
0x65 JUMPI
---
0x5c: V31 = 0xaeabc062
0x61: V32 = EQ 0xaeabc062 V12
0x62: V33 = 0x184
0x65: JUMPI 0x184 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x66
[0x66:0x70]
---
Predecessors: [0x5b]
Successors: [0x71, 0x1a5]
---
0x66 DUP1
0x67 PUSH4 0xe2982c21
0x6c EQ
0x6d PUSH2 0x1a5
0x70 JUMPI
---
0x67: V34 = 0xe2982c21
0x6c: V35 = EQ 0xe2982c21 V12
0x6d: V36 = 0x1a5
0x70: JUMPI 0x1a5 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x71
[0x71:0x7b]
---
Predecessors: [0x66]
Successors: [0x7c, 0x1d6]
---
0x71 DUP1
0x72 PUSH4 0xf2fde38b
0x77 EQ
0x78 PUSH2 0x1d6
0x7b JUMPI
---
0x72: V37 = 0xf2fde38b
0x77: V38 = EQ 0xf2fde38b V12
0x78: V39 = 0x1d6
0x7b: JUMPI 0x1d6 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7c
[0x7c:0x86]
---
Predecessors: [0x71]
Successors: [0x87, 0x1f7]
---
0x7c DUP1
0x7d PUSH4 0xf4de7548
0x82 EQ
0x83 PUSH2 0x1f7
0x86 JUMPI
---
0x7d: V40 = 0xf4de7548
0x82: V41 = EQ 0xf4de7548 V12
0x83: V42 = 0x1f7
0x86: JUMPI 0x1f7 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x87
[0x87:0x91]
---
Predecessors: [0x7c]
Successors: [0x92, 0x22a]
---
0x87 DUP1
0x88 PUSH4 0xf5074f41
0x8d EQ
0x8e PUSH2 0x22a
0x91 JUMPI
---
0x88: V43 = 0xf5074f41
0x8d: V44 = EQ 0xf5074f41 V12
0x8e: V45 = 0x22a
0x91: JUMPI 0x22a V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x92
[0x92:0x96]
---
Predecessors: [0x0, 0x87]
Successors: []
---
0x92 JUMPDEST
0x93 PUSH1 0x0
0x95 DUP1
0x96 REVERT
---
0x92: JUMPDEST 
0x93: V46 = 0x0
0x96: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x97
[0x97:0x9d]
---
Predecessors: [0xb]
Successors: [0x9e, 0xa2]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x97: JUMPDEST 
0x98: V47 = CALLVALUE
0x99: V48 = ISZERO V47
0x9a: V49 = 0xa2
0x9d: JUMPI 0xa2 V48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x97]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V50 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x97]
Successors: [0x24b]
---
0xa2 JUMPDEST
0xa3 PUSH2 0xaa
0xa6 PUSH2 0x24b
0xa9 JUMP
---
0xa2: JUMPDEST 
0xa3: V51 = 0xaa
0xa6: V52 = 0x24b
0xa9: JUMP 0x24b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xaa]
Exit stack: [V12, 0xaa]

================================

Block 0xaa
[0xaa:0xbb]
---
Predecessors: [0x24b, 0x47c, 0x4cb]
Successors: []
---
0xaa JUMPDEST
0xab PUSH1 0x40
0xad MLOAD
0xae SWAP1
0xaf DUP2
0xb0 MSTORE
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 SWAP2
0xb9 SUB
0xba SWAP1
0xbb RETURN
---
0xaa: JUMPDEST 
0xab: V53 = 0x40
0xad: V54 = M[0x40]
0xb0: M[V54] = S0
0xb1: V55 = 0x20
0xb3: V56 = ADD 0x20 V54
0xb4: V57 = 0x40
0xb6: V58 = M[0x40]
0xb9: V59 = SUB V56 V58
0xbb: RETURN V58 V59
---
Entry stack: [V12, 0xdb, V183, V188, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, S2, S1]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x24]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V60 = CALLVALUE
0xbe: V61 = ISZERO V60
0xbf: V62 = 0xc7
0xc2: JUMPI 0xc7 V61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V63 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc7
[0xc7:0xda]
---
Predecessors: [0xbc]
Successors: [0x251]
---
0xc7 JUMPDEST
0xc8 PUSH2 0xdb
0xcb PUSH1 0x1
0xcd PUSH1 0xa0
0xcf PUSH1 0x2
0xd1 EXP
0xd2 SUB
0xd3 PUSH1 0x4
0xd5 CALLDATALOAD
0xd6 AND
0xd7 PUSH2 0x251
0xda JUMP
---
0xc7: JUMPDEST 
0xc8: V64 = 0xdb
0xcb: V65 = 0x1
0xcd: V66 = 0xa0
0xcf: V67 = 0x2
0xd1: V68 = EXP 0x2 0xa0
0xd2: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3: V70 = 0x4
0xd5: V71 = CALLDATALOAD 0x4
0xd6: V72 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V73 = 0x251
0xda: JUMP 0x251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdb, V72]
Exit stack: [V12, 0xdb, V72]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: [0x296, 0x32f, 0x4c8, 0x532, 0x645]
Successors: []
---
0xdb JUMPDEST
0xdc STOP
---
0xdb: JUMPDEST 
0xdc: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xe3]
---
Predecessors: [0x2f]
Successors: [0xe4, 0xe8]
---
0xdd JUMPDEST
0xde CALLVALUE
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xdd: JUMPDEST 
0xde: V74 = CALLVALUE
0xdf: V75 = ISZERO V74
0xe0: V76 = 0xe8
0xe3: JUMPI 0xe8 V75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xdd]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V77 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xef]
---
Predecessors: [0xdd]
Successors: [0x299]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xdb
0xec PUSH2 0x299
0xef JUMP
---
0xe8: JUMPDEST 
0xe9: V78 = 0xdb
0xec: V79 = 0x299
0xef: JUMP 0x299
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdb]
Exit stack: [V12, 0xdb]

================================

Block 0xf0
[0xf0:0xf1]
---
Predecessors: []
Successors: []
---
0xf0 JUMPDEST
0xf1 STOP
---
0xf0: JUMPDEST 
0xf1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf2
[0xf2:0xf8]
---
Predecessors: [0x3a]
Successors: [0xf9, 0xfd]
---
0xf2 JUMPDEST
0xf3 CALLVALUE
0xf4 ISZERO
0xf5 PUSH2 0xfd
0xf8 JUMPI
---
0xf2: JUMPDEST 
0xf3: V80 = CALLVALUE
0xf4: V81 = ISZERO V80
0xf5: V82 = 0xfd
0xf8: JUMPI 0xfd V81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf9
[0xf9:0xfc]
---
Predecessors: [0xf2]
Successors: []
---
0xf9 PUSH1 0x0
0xfb DUP1
0xfc REVERT
---
0xf9: V83 = 0x0
0xfc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfd
[0xfd:0x104]
---
Predecessors: [0xf2]
Successors: [0x333]
---
0xfd JUMPDEST
0xfe PUSH2 0xdb
0x101 PUSH2 0x333
0x104 JUMP
---
0xfd: JUMPDEST 
0xfe: V84 = 0xdb
0x101: V85 = 0x333
0x104: JUMP 0x333
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdb]
Exit stack: [V12, 0xdb]

================================

Block 0x105
[0x105:0x106]
---
Predecessors: []
Successors: []
---
0x105 JUMPDEST
0x106 STOP
---
0x105: JUMPDEST 
0x106: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0x45]
Successors: [0x10e, 0x112]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a PUSH2 0x112
0x10d JUMPI
---
0x107: JUMPDEST 
0x108: V86 = CALLVALUE
0x109: V87 = ISZERO V86
0x10a: V88 = 0x112
0x10d: JUMPI 0x112 V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0x107]
Successors: []
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 REVERT
---
0x10e: V89 = 0x0
0x111: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x112
[0x112:0x119]
---
Predecessors: [0x107]
Successors: [0x35f]
---
0x112 JUMPDEST
0x113 PUSH2 0x11a
0x116 PUSH2 0x35f
0x119 JUMP
---
0x112: JUMPDEST 
0x113: V90 = 0x11a
0x116: V91 = 0x35f
0x119: JUMP 0x35f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a]
Exit stack: [V12, 0x11a]

================================

Block 0x11a
[0x11a:0x135]
---
Predecessors: [0x35f]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d MLOAD
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 SWAP1
0x127 SWAP2
0x128 AND
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e PUSH1 0x40
0x130 MLOAD
0x131 DUP1
0x132 SWAP2
0x133 SUB
0x134 SWAP1
0x135 RETURN
---
0x11a: JUMPDEST 
0x11b: V92 = 0x40
0x11d: V93 = M[0x40]
0x11e: V94 = 0x1
0x120: V95 = 0xa0
0x122: V96 = 0x2
0x124: V97 = EXP 0x2 0xa0
0x125: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V99 = AND V321 0xffffffffffffffffffffffffffffffffffffffff
0x12a: M[V93] = V99
0x12b: V100 = 0x20
0x12d: V101 = ADD 0x20 V93
0x12e: V102 = 0x40
0x130: V103 = M[0x40]
0x133: V104 = SUB V101 V103
0x135: RETURN V103 V104
---
Entry stack: [V12, 0x11a, V321]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x136
[0x136:0x13c]
---
Predecessors: [0x50]
Successors: [0x13d, 0x141]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x136: JUMPDEST 
0x137: V105 = CALLVALUE
0x138: V106 = ISZERO V105
0x139: V107 = 0x141
0x13c: JUMPI 0x141 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x136]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V108 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x141
[0x141:0x171]
---
Predecessors: [0x136]
Successors: [0x36e]
---
0x141 JUMPDEST
0x142 PUSH2 0xaa
0x145 PUSH3 0xffffff
0x149 PUSH1 0x4
0x14b CALLDATALOAD
0x14c AND
0x14d PUSH21 0xffffffffffffffffffffffffffffffffffffffffff
0x163 NOT
0x164 PUSH1 0x24
0x166 CALLDATALOAD
0x167 DUP2
0x168 AND
0x169 SWAP1
0x16a PUSH1 0x44
0x16c CALLDATALOAD
0x16d AND
0x16e PUSH2 0x36e
0x171 JUMP
---
0x141: JUMPDEST 
0x142: V109 = 0xaa
0x145: V110 = 0xffffff
0x149: V111 = 0x4
0x14b: V112 = CALLDATALOAD 0x4
0x14c: V113 = AND V112 0xffffff
0x14d: V114 = 0xffffffffffffffffffffffffffffffffffffffffff
0x163: V115 = NOT 0xffffffffffffffffffffffffffffffffffffffffff
0x164: V116 = 0x24
0x166: V117 = CALLDATALOAD 0x24
0x168: V118 = AND 0xffffffffffffffffffffff000000000000000000000000000000000000000000 V117
0x16a: V119 = 0x44
0x16c: V120 = CALLDATALOAD 0x44
0x16d: V121 = AND V120 0xffffffffffffffffffffff000000000000000000000000000000000000000000
0x16e: V122 = 0x36e
0x171: JUMP 0x36e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xaa, V113, V118, V121]
Exit stack: [V12, 0xaa, V113, V118, V121]

================================

Block 0x172
[0x172:0x183]
---
Predecessors: []
Successors: []
---
0x172 JUMPDEST
0x173 PUSH1 0x40
0x175 MLOAD
0x176 SWAP1
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x20
0x17b ADD
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 SWAP2
0x181 SUB
0x182 SWAP1
0x183 RETURN
---
0x172: JUMPDEST 
0x173: V123 = 0x40
0x175: V124 = M[0x40]
0x178: M[V124] = S0
0x179: V125 = 0x20
0x17b: V126 = ADD 0x20 V124
0x17c: V127 = 0x40
0x17e: V128 = M[0x40]
0x181: V129 = SUB V126 V128
0x183: RETURN V128 V129
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x184
[0x184:0x18a]
---
Predecessors: [0x5b]
Successors: [0x18b, 0x18f]
---
0x184 JUMPDEST
0x185 CALLVALUE
0x186 ISZERO
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x184: JUMPDEST 
0x185: V130 = CALLVALUE
0x186: V131 = ISZERO V130
0x187: V132 = 0x18f
0x18a: JUMPI 0x18f V131
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x184]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V133 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18f
[0x18f:0x1a2]
---
Predecessors: [0x184]
Successors: [0x483]
---
0x18f JUMPDEST
0x190 PUSH2 0xdb
0x193 PUSH1 0x1
0x195 PUSH1 0xa0
0x197 PUSH1 0x2
0x199 EXP
0x19a SUB
0x19b PUSH1 0x4
0x19d CALLDATALOAD
0x19e AND
0x19f PUSH2 0x483
0x1a2 JUMP
---
0x18f: JUMPDEST 
0x190: V134 = 0xdb
0x193: V135 = 0x1
0x195: V136 = 0xa0
0x197: V137 = 0x2
0x199: V138 = EXP 0x2 0xa0
0x19a: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V140 = 0x4
0x19d: V141 = CALLDATALOAD 0x4
0x19e: V142 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V143 = 0x483
0x1a2: JUMP 0x483
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdb, V142]
Exit stack: [V12, 0xdb, V142]

================================

Block 0x1a3
[0x1a3:0x1a4]
---
Predecessors: []
Successors: []
---
0x1a3 JUMPDEST
0x1a4 STOP
---
0x1a3: JUMPDEST 
0x1a4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a5
[0x1a5:0x1ab]
---
Predecessors: [0x66]
Successors: [0x1ac, 0x1b0]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V144 = CALLVALUE
0x1a7: V145 = ISZERO V144
0x1a8: V146 = 0x1b0
0x1ab: JUMPI 0x1b0 V145
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V147 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1c3]
---
Predecessors: [0x1a5]
Successors: [0x4cb]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0xaa
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc PUSH1 0x4
0x1be CALLDATALOAD
0x1bf AND
0x1c0 PUSH2 0x4cb
0x1c3 JUMP
---
0x1b0: JUMPDEST 
0x1b1: V148 = 0xaa
0x1b4: V149 = 0x1
0x1b6: V150 = 0xa0
0x1b8: V151 = 0x2
0x1ba: V152 = EXP 0x2 0xa0
0x1bb: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bc: V154 = 0x4
0x1be: V155 = CALLDATALOAD 0x4
0x1bf: V156 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V157 = 0x4cb
0x1c3: JUMP 0x4cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xaa, V156]
Exit stack: [V12, 0xaa, V156]

================================

Block 0x1c4
[0x1c4:0x1d5]
---
Predecessors: []
Successors: []
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP1
0x1d2 SWAP2
0x1d3 SUB
0x1d4 SWAP1
0x1d5 RETURN
---
0x1c4: JUMPDEST 
0x1c5: V158 = 0x40
0x1c7: V159 = M[0x40]
0x1ca: M[V159] = S0
0x1cb: V160 = 0x20
0x1cd: V161 = ADD 0x20 V159
0x1ce: V162 = 0x40
0x1d0: V163 = M[0x40]
0x1d3: V164 = SUB V161 V163
0x1d5: RETURN V163 V164
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d6
[0x1d6:0x1dc]
---
Predecessors: [0x71]
Successors: [0x1dd, 0x1e1]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 ISZERO
0x1d9 PUSH2 0x1e1
0x1dc JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V165 = CALLVALUE
0x1d8: V166 = ISZERO V165
0x1d9: V167 = 0x1e1
0x1dc: JUMPI 0x1e1 V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dd
[0x1dd:0x1e0]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 REVERT
---
0x1dd: V168 = 0x0
0x1e0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e1
[0x1e1:0x1f4]
---
Predecessors: [0x1d6]
Successors: [0x4dd]
---
0x1e1 JUMPDEST
0x1e2 PUSH2 0xdb
0x1e5 PUSH1 0x1
0x1e7 PUSH1 0xa0
0x1e9 PUSH1 0x2
0x1eb EXP
0x1ec SUB
0x1ed PUSH1 0x4
0x1ef CALLDATALOAD
0x1f0 AND
0x1f1 PUSH2 0x4dd
0x1f4 JUMP
---
0x1e1: JUMPDEST 
0x1e2: V169 = 0xdb
0x1e5: V170 = 0x1
0x1e7: V171 = 0xa0
0x1e9: V172 = 0x2
0x1eb: V173 = EXP 0x2 0xa0
0x1ec: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ed: V175 = 0x4
0x1ef: V176 = CALLDATALOAD 0x4
0x1f0: V177 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V178 = 0x4dd
0x1f4: JUMP 0x4dd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdb, V177]
Exit stack: [V12, 0xdb, V177]

================================

Block 0x1f5
[0x1f5:0x1f6]
---
Predecessors: []
Successors: []
---
0x1f5 JUMPDEST
0x1f6 STOP
---
0x1f5: JUMPDEST 
0x1f6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f7
[0x1f7:0x227]
---
Predecessors: [0x7c]
Successors: [0x535]
---
0x1f7 JUMPDEST
0x1f8 PUSH2 0xdb
0x1fb PUSH3 0xffffff
0x1ff PUSH1 0x4
0x201 CALLDATALOAD
0x202 AND
0x203 PUSH21 0xffffffffffffffffffffffffffffffffffffffffff
0x219 NOT
0x21a PUSH1 0x24
0x21c CALLDATALOAD
0x21d DUP2
0x21e AND
0x21f SWAP1
0x220 PUSH1 0x44
0x222 CALLDATALOAD
0x223 AND
0x224 PUSH2 0x535
0x227 JUMP
---
0x1f7: JUMPDEST 
0x1f8: V179 = 0xdb
0x1fb: V180 = 0xffffff
0x1ff: V181 = 0x4
0x201: V182 = CALLDATALOAD 0x4
0x202: V183 = AND V182 0xffffff
0x203: V184 = 0xffffffffffffffffffffffffffffffffffffffffff
0x219: V185 = NOT 0xffffffffffffffffffffffffffffffffffffffffff
0x21a: V186 = 0x24
0x21c: V187 = CALLDATALOAD 0x24
0x21e: V188 = AND 0xffffffffffffffffffffff000000000000000000000000000000000000000000 V187
0x220: V189 = 0x44
0x222: V190 = CALLDATALOAD 0x44
0x223: V191 = AND V190 0xffffffffffffffffffffff000000000000000000000000000000000000000000
0x224: V192 = 0x535
0x227: JUMP 0x535
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdb, V183, V188, V191]
Exit stack: [V12, 0xdb, V183, V188, V191]

================================

Block 0x228
[0x228:0x229]
---
Predecessors: []
Successors: []
---
0x228 JUMPDEST
0x229 STOP
---
0x228: JUMPDEST 
0x229: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x87]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V193 = CALLVALUE
0x22c: V194 = ISZERO V193
0x22d: V195 = 0x235
0x230: JUMPI 0x235 V194
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V196 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x235
[0x235:0x248]
---
Predecessors: [0x22a]
Successors: [0x64b]
---
0x235 JUMPDEST
0x236 PUSH2 0xdb
0x239 PUSH1 0x1
0x23b PUSH1 0xa0
0x23d PUSH1 0x2
0x23f EXP
0x240 SUB
0x241 PUSH1 0x4
0x243 CALLDATALOAD
0x244 AND
0x245 PUSH2 0x64b
0x248 JUMP
---
0x235: JUMPDEST 
0x236: V197 = 0xdb
0x239: V198 = 0x1
0x23b: V199 = 0xa0
0x23d: V200 = 0x2
0x23f: V201 = EXP 0x2 0xa0
0x240: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x241: V203 = 0x4
0x243: V204 = CALLDATALOAD 0x4
0x244: V205 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x245: V206 = 0x64b
0x248: JUMP 0x64b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdb, V205]
Exit stack: [V12, 0xdb, V205]

================================

Block 0x249
[0x249:0x24a]
---
Predecessors: []
Successors: []
---
0x249 JUMPDEST
0x24a STOP
---
0x249: JUMPDEST 
0x24a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24b
[0x24b:0x250]
---
Predecessors: [0xa2]
Successors: [0xaa]
---
0x24b JUMPDEST
0x24c PUSH1 0x2
0x24e SLOAD
0x24f DUP2
0x250 JUMP
---
0x24b: JUMPDEST 
0x24c: V207 = 0x2
0x24e: V208 = S[0x2]
0x250: JUMP 0xaa
---
Entry stack: [V12, 0xaa]
Stack pops: 1
Stack additions: [S0, V208]
Exit stack: [V12, 0xaa, V208]

================================

Block 0x251
[0x251:0x267]
---
Predecessors: [0xc7]
Successors: [0x268, 0x26c]
---
0x251 JUMPDEST
0x252 PUSH1 0x0
0x254 SLOAD
0x255 CALLER
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a PUSH1 0x2
0x25c EXP
0x25d SUB
0x25e SWAP1
0x25f DUP2
0x260 AND
0x261 SWAP2
0x262 AND
0x263 EQ
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x251: JUMPDEST 
0x252: V209 = 0x0
0x254: V210 = S[0x0]
0x255: V211 = CALLER
0x256: V212 = 0x1
0x258: V213 = 0xa0
0x25a: V214 = 0x2
0x25c: V215 = EXP 0x2 0xa0
0x25d: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x262: V218 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x263: V219 = EQ V218 V217
0x264: V220 = 0x26c
0x267: JUMPI 0x26c V219
---
Entry stack: [V12, 0xdb, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V72]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x251]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V221 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V72]

================================

Block 0x26c
[0x26c:0x294]
---
Predecessors: [0x251]
Successors: [0x295]
---
0x26c JUMPDEST
0x26d PUSH1 0x3
0x26f DUP1
0x270 SLOAD
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 NOT
0x287 AND
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 DUP4
0x291 AND
0x292 OR
0x293 SWAP1
0x294 SSTORE
---
0x26c: JUMPDEST 
0x26d: V222 = 0x3
0x270: V223 = S[0x3]
0x271: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V225 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x287: V226 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V223
0x288: V227 = 0x1
0x28a: V228 = 0xa0
0x28c: V229 = 0x2
0x28e: V230 = EXP 0x2 0xa0
0x28f: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V232 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0x292: V233 = OR V232 V226
0x294: S[0x3] = V233
---
Entry stack: [V12, 0xdb, V72]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdb, V72]

================================

Block 0x295
[0x295:0x295]
---
Predecessors: [0x26c, 0x4f8]
Successors: [0x296]
---
0x295 JUMPDEST
---
0x295: JUMPDEST 
---
Entry stack: [V12, 0xdb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, S0]

================================

Block 0x296
[0x296:0x298]
---
Predecessors: [0x295]
Successors: [0xdb]
---
0x296 JUMPDEST
0x297 POP
0x298 JUMP
---
0x296: JUMPDEST 
0x298: JUMP 0xdb
---
Entry stack: [V12, 0xdb, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x299
[0x299:0x2ba]
---
Predecessors: [0xe8]
Successors: [0x2bb, 0x2bf]
---
0x299 JUMPDEST
0x29a CALLER
0x29b PUSH1 0x1
0x29d PUSH1 0xa0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 SUB
0x2a3 DUP2
0x2a4 AND
0x2a5 PUSH1 0x0
0x2a7 SWAP1
0x2a8 DUP2
0x2a9 MSTORE
0x2aa PUSH1 0x1
0x2ac PUSH1 0x20
0x2ae MSTORE
0x2af PUSH1 0x40
0x2b1 SWAP1
0x2b2 SHA3
0x2b3 SLOAD
0x2b4 DUP1
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x299: JUMPDEST 
0x29a: V234 = CALLER
0x29b: V235 = 0x1
0x29d: V236 = 0xa0
0x29f: V237 = 0x2
0x2a1: V238 = EXP 0x2 0xa0
0x2a2: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V240 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V241 = 0x0
0x2a9: M[0x0] = V240
0x2aa: V242 = 0x1
0x2ac: V243 = 0x20
0x2ae: M[0x20] = 0x1
0x2af: V244 = 0x40
0x2b2: V245 = SHA3 0x0 0x40
0x2b3: V246 = S[V245]
0x2b5: V247 = ISZERO V246
0x2b6: V248 = ISZERO V247
0x2b7: V249 = 0x2bf
0x2ba: JUMPI 0x2bf V248
---
Entry stack: [V12, 0xdb]
Stack pops: 0
Stack additions: [V234, V246]
Exit stack: [V12, 0xdb, V234, V246]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x299]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V250 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V234, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V234, V246]

================================

Block 0x2bf
[0x2bf:0x2d2]
---
Predecessors: [0x299]
Successors: [0x2d3, 0x2d7]
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x1
0x2c2 PUSH1 0xa0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SUB
0x2c8 ADDRESS
0x2c9 AND
0x2ca BALANCE
0x2cb DUP2
0x2cc SWAP1
0x2cd LT
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V251 = 0x1
0x2c2: V252 = 0xa0
0x2c4: V253 = 0x2
0x2c6: V254 = EXP 0x2 0xa0
0x2c7: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V256 = ADDRESS
0x2c9: V257 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V258 = BALANCE V257
0x2cd: V259 = LT V258 V246
0x2ce: V260 = ISZERO V259
0x2cf: V261 = 0x2d7
0x2d2: JUMPI 0x2d7 V260
---
Entry stack: [V12, 0xdb, V234, V246]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdb, V234, V246]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2bf]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V262 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V234, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V234, V246]

================================

Block 0x2d7
[0x2d7:0x2e9]
---
Predecessors: [0x2bf]
Successors: [0x676]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x2
0x2da SLOAD
0x2db PUSH2 0x2ea
0x2de SWAP1
0x2df DUP3
0x2e0 PUSH4 0xffffffff
0x2e5 PUSH2 0x676
0x2e8 AND
0x2e9 JUMP
---
0x2d7: JUMPDEST 
0x2d8: V263 = 0x2
0x2da: V264 = S[0x2]
0x2db: V265 = 0x2ea
0x2e0: V266 = 0xffffffff
0x2e5: V267 = 0x676
0x2e8: V268 = AND 0x676 0xffffffff
0x2e9: JUMP 0x676
---
Entry stack: [V12, 0xdb, V234, V246]
Stack pops: 1
Stack additions: [S0, 0x2ea, V264, S0]
Exit stack: [V12, 0xdb, V234, V246, 0x2ea, V264, V246]

================================

Block 0x2ea
[0x2ea:0x32c]
---
Predecessors: [0x687]
Successors: [0x32d, 0x32e]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x2
0x2ed SSTORE
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 DUP3
0x2f7 AND
0x2f8 PUSH1 0x0
0x2fa DUP2
0x2fb DUP2
0x2fc MSTORE
0x2fd PUSH1 0x1
0x2ff PUSH1 0x20
0x301 MSTORE
0x302 PUSH1 0x40
0x304 DUP1
0x305 DUP3
0x306 SHA3
0x307 SWAP2
0x308 SWAP1
0x309 SWAP2
0x30a SSTORE
0x30b DUP3
0x30c ISZERO
0x30d PUSH2 0x8fc
0x310 MUL
0x311 SWAP1
0x312 DUP4
0x313 SWAP1
0x314 MLOAD
0x315 PUSH1 0x0
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b DUP4
0x31c SUB
0x31d DUP2
0x31e DUP6
0x31f DUP9
0x320 DUP9
0x321 CALL
0x322 SWAP4
0x323 POP
0x324 POP
0x325 POP
0x326 POP
0x327 ISZERO
0x328 ISZERO
0x329 PUSH2 0x32e
0x32c JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V269 = 0x2
0x2ed: S[0x2] = V626
0x2ee: V270 = 0x1
0x2f0: V271 = 0xa0
0x2f2: V272 = 0x2
0x2f4: V273 = EXP 0x2 0xa0
0x2f5: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V275 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V276 = 0x0
0x2fc: M[0x0] = V275
0x2fd: V277 = 0x1
0x2ff: V278 = 0x20
0x301: M[0x20] = 0x1
0x302: V279 = 0x40
0x306: V280 = SHA3 0x0 0x40
0x30a: S[V280] = 0x0
0x30c: V281 = ISZERO V246
0x30d: V282 = 0x8fc
0x310: V283 = MUL 0x8fc V281
0x314: V284 = M[0x40]
0x315: V285 = 0x0
0x317: V286 = 0x40
0x319: V287 = M[0x40]
0x31c: V288 = SUB V284 V287
0x321: V289 = CALL V283 V275 V246 V287 V288 V287 0x0
0x327: V290 = ISZERO V289
0x328: V291 = ISZERO V290
0x329: V292 = 0x32e
0x32c: JUMPI 0x32e V291
---
Entry stack: [V12, 0xdb, V234, V246, V626]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V12, 0xdb, V234, V246]

================================

Block 0x32d
[0x32d:0x32d]
---
Predecessors: [0x2ea]
Successors: []
---
0x32d INVALID
---
0x32d: INVALID 
---
Entry stack: [V12, 0xdb, V234, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V234, V246]

================================

Block 0x32e
[0x32e:0x32e]
---
Predecessors: [0x2ea]
Successors: [0x32f]
---
0x32e JUMPDEST
---
0x32e: JUMPDEST 
---
Entry stack: [V12, 0xdb, V234, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V234, V246]

================================

Block 0x32f
[0x32f:0x332]
---
Predecessors: [0x32e]
Successors: [0xdb]
---
0x32f JUMPDEST
0x330 POP
0x331 POP
0x332 JUMP
---
0x32f: JUMPDEST 
0x332: JUMP 0xdb
---
Entry stack: [V12, 0xdb, V234, V246]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x333
[0x333:0x349]
---
Predecessors: [0xfd]
Successors: [0x34a, 0x34e]
---
0x333 JUMPDEST
0x334 PUSH1 0x0
0x336 SLOAD
0x337 CALLER
0x338 PUSH1 0x1
0x33a PUSH1 0xa0
0x33c PUSH1 0x2
0x33e EXP
0x33f SUB
0x340 SWAP1
0x341 DUP2
0x342 AND
0x343 SWAP2
0x344 AND
0x345 EQ
0x346 PUSH2 0x34e
0x349 JUMPI
---
0x333: JUMPDEST 
0x334: V293 = 0x0
0x336: V294 = S[0x0]
0x337: V295 = CALLER
0x338: V296 = 0x1
0x33a: V297 = 0xa0
0x33c: V298 = 0x2
0x33e: V299 = EXP 0x2 0xa0
0x33f: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x342: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x344: V302 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x345: V303 = EQ V302 V301
0x346: V304 = 0x34e
0x349: JUMPI 0x34e V303
---
Entry stack: [V12, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb]

================================

Block 0x34a
[0x34a:0x34d]
---
Predecessors: [0x333]
Successors: []
---
0x34a PUSH1 0x0
0x34c DUP1
0x34d REVERT
---
0x34a: V305 = 0x0
0x34d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb]

================================

Block 0x34e
[0x34e:0x35b]
---
Predecessors: [0x333]
Successors: []
---
0x34e JUMPDEST
0x34f PUSH1 0x0
0x351 SLOAD
0x352 PUSH1 0x1
0x354 PUSH1 0xa0
0x356 PUSH1 0x2
0x358 EXP
0x359 SUB
0x35a AND
0x35b SELFDESTRUCT
---
0x34e: JUMPDEST 
0x34f: V306 = 0x0
0x351: V307 = S[0x0]
0x352: V308 = 0x1
0x354: V309 = 0xa0
0x356: V310 = 0x2
0x358: V311 = EXP 0x2 0xa0
0x359: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35a: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x35b: SELFDESTRUCT V313
---
Entry stack: [V12, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb]

================================

Block 0x35c
[0x35c:0x35c]
---
Predecessors: []
Successors: [0x35d]
---
0x35c JUMPDEST
---
0x35c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x35d
[0x35d:0x35e]
---
Predecessors: [0x35c]
Successors: []
Has unresolved jump.
---
0x35d JUMPDEST
0x35e JUMP
---
0x35d: JUMPDEST 
0x35e: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35f
[0x35f:0x36d]
---
Predecessors: [0x112]
Successors: [0x11a]
---
0x35f JUMPDEST
0x360 PUSH1 0x0
0x362 SLOAD
0x363 PUSH1 0x1
0x365 PUSH1 0xa0
0x367 PUSH1 0x2
0x369 EXP
0x36a SUB
0x36b AND
0x36c DUP2
0x36d JUMP
---
0x35f: JUMPDEST 
0x360: V314 = 0x0
0x362: V315 = S[0x0]
0x363: V316 = 0x1
0x365: V317 = 0xa0
0x367: V318 = 0x2
0x369: V319 = EXP 0x2 0xa0
0x36a: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36b: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x36d: JUMP 0x11a
---
Entry stack: [V12, 0x11a]
Stack pops: 1
Stack additions: [S0, V321]
Exit stack: [V12, 0x11a, V321]

================================

Block 0x36e
[0x36e:0x3e7]
---
Predecessors: [0x141, 0x62d]
Successors: [0x3e8, 0x3ec]
---
0x36e JUMPDEST
0x36f PUSH1 0x4
0x371 SLOAD
0x372 PUSH1 0x0
0x374 SWAP1
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d AND
0x37e PUSH4 0xe68d4c3a
0x383 DUP6
0x384 DUP6
0x385 DUP6
0x386 DUP6
0x387 PUSH1 0x40
0x389 MLOAD
0x38a PUSH1 0x20
0x38c ADD
0x38d MSTORE
0x38e PUSH1 0x40
0x390 MLOAD
0x391 PUSH1 0xe0
0x393 PUSH1 0x2
0x395 EXP
0x396 PUSH4 0xffffffff
0x39b DUP7
0x39c AND
0x39d MUL
0x39e DUP2
0x39f MSTORE
0x3a0 PUSH3 0xffffff
0x3a4 SWAP1
0x3a5 SWAP4
0x3a6 AND
0x3a7 PUSH1 0x4
0x3a9 DUP5
0x3aa ADD
0x3ab MSTORE
0x3ac PUSH21 0xffffffffffffffffffffffffffffffffffffffffff
0x3c2 NOT
0x3c3 SWAP2
0x3c4 DUP3
0x3c5 AND
0x3c6 PUSH1 0x24
0x3c8 DUP5
0x3c9 ADD
0x3ca MSTORE
0x3cb AND
0x3cc PUSH1 0x44
0x3ce DUP3
0x3cf ADD
0x3d0 MSTORE
0x3d1 PUSH1 0x64
0x3d3 ADD
0x3d4 PUSH1 0x20
0x3d6 PUSH1 0x40
0x3d8 MLOAD
0x3d9 DUP1
0x3da DUP4
0x3db SUB
0x3dc DUP2
0x3dd PUSH1 0x0
0x3df DUP8
0x3e0 DUP1
0x3e1 EXTCODESIZE
0x3e2 ISZERO
0x3e3 ISZERO
0x3e4 PUSH2 0x3ec
0x3e7 JUMPI
---
0x36e: JUMPDEST 
0x36f: V322 = 0x4
0x371: V323 = S[0x4]
0x372: V324 = 0x0
0x375: V325 = 0x1
0x377: V326 = 0xa0
0x379: V327 = 0x2
0x37b: V328 = EXP 0x2 0xa0
0x37c: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37d: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x37e: V331 = 0xe68d4c3a
0x387: V332 = 0x40
0x389: V333 = M[0x40]
0x38a: V334 = 0x20
0x38c: V335 = ADD 0x20 V333
0x38d: M[V335] = 0x0
0x38e: V336 = 0x40
0x390: V337 = M[0x40]
0x391: V338 = 0xe0
0x393: V339 = 0x2
0x395: V340 = EXP 0x2 0xe0
0x396: V341 = 0xffffffff
0x39c: V342 = AND 0xe68d4c3a 0xffffffff
0x39d: V343 = MUL 0xe68d4c3a 0x100000000000000000000000000000000000000000000000000000000
0x39f: M[V337] = 0xe68d4c3a00000000000000000000000000000000000000000000000000000000
0x3a0: V344 = 0xffffff
0x3a6: V345 = AND S2 0xffffff
0x3a7: V346 = 0x4
0x3aa: V347 = ADD V337 0x4
0x3ab: M[V347] = V345
0x3ac: V348 = 0xffffffffffffffffffffffffffffffffffffffffff
0x3c2: V349 = NOT 0xffffffffffffffffffffffffffffffffffffffffff
0x3c5: V350 = AND 0xffffffffffffffffffffff000000000000000000000000000000000000000000 S1
0x3c6: V351 = 0x24
0x3c9: V352 = ADD V337 0x24
0x3ca: M[V352] = V350
0x3cb: V353 = AND S0 0xffffffffffffffffffffff000000000000000000000000000000000000000000
0x3cc: V354 = 0x44
0x3cf: V355 = ADD V337 0x44
0x3d0: M[V355] = V353
0x3d1: V356 = 0x64
0x3d3: V357 = ADD 0x64 V337
0x3d4: V358 = 0x20
0x3d6: V359 = 0x40
0x3d8: V360 = M[0x40]
0x3db: V361 = SUB V357 V360
0x3dd: V362 = 0x0
0x3e1: V363 = EXTCODESIZE V330
0x3e2: V364 = ISZERO V363
0x3e3: V365 = ISZERO V364
0x3e4: V366 = 0x3ec
0x3e7: JUMPI 0x3ec V365
---
Entry stack: [V12, 0xdb, V183, V188, V191, S4, {0xaa, 0x638}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V330, 0xe68d4c3a, V357, 0x20, V360, V361, V360, 0x0, V330]
Exit stack: [V12, 0xdb, V183, V188, V191, S4, {0xaa, 0x638}, S2, S1, S0, 0x0, V330, 0xe68d4c3a, V357, 0x20, V360, V361, V360, 0x0, V330]

================================

Block 0x3e8
[0x3e8:0x3eb]
---
Predecessors: [0x36e]
Successors: []
---
0x3e8 PUSH1 0x0
0x3ea DUP1
0x3eb REVERT
---
0x3e8: V367 = 0x0
0x3eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S14, {0xaa, 0x638}, S12, S11, S10, 0x0, V330, 0xe68d4c3a, V357, 0x20, V360, V361, V360, 0x0, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S14, {0xaa, 0x638}, S12, S11, S10, 0x0, V330, 0xe68d4c3a, V357, 0x20, V360, V361, V360, 0x0, V330]

================================

Block 0x3ec
[0x3ec:0x3f8]
---
Predecessors: [0x36e]
Successors: [0x3f9, 0x3fd]
---
0x3ec JUMPDEST
0x3ed PUSH2 0x2c6
0x3f0 GAS
0x3f1 SUB
0x3f2 CALL
0x3f3 ISZERO
0x3f4 ISZERO
0x3f5 PUSH2 0x3fd
0x3f8 JUMPI
---
0x3ec: JUMPDEST 
0x3ed: V368 = 0x2c6
0x3f0: V369 = GAS
0x3f1: V370 = SUB V369 0x2c6
0x3f2: V371 = CALL V370 V330 0x0 V360 V361 V360 0x20
0x3f3: V372 = ISZERO V371
0x3f4: V373 = ISZERO V372
0x3f5: V374 = 0x3fd
0x3f8: JUMPI 0x3fd V373
---
Entry stack: [V12, 0xdb, V183, V188, V191, S14, {0xaa, 0x638}, S12, S11, S10, 0x0, V330, 0xe68d4c3a, V357, 0x20, V360, V361, V360, 0x0, V330]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S14, {0xaa, 0x638}, S12, S11, S10, 0x0, V330, 0xe68d4c3a, V357]

================================

Block 0x3f9
[0x3f9:0x3fc]
---
Predecessors: [0x3ec]
Successors: []
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
---
0x3f9: V375 = 0x0
0x3fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S8, {0xaa, 0x638}, S6, S5, S4, 0x0, S2, 0xe68d4c3a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S8, {0xaa, 0x638}, S6, S5, S4, 0x0, S2, 0xe68d4c3a, S0]

================================

Block 0x3fd
[0x3fd:0x458]
---
Predecessors: [0x3ec]
Successors: [0x459, 0x45d]
---
0x3fd JUMPDEST
0x3fe POP
0x3ff POP
0x400 POP
0x401 PUSH1 0x40
0x403 MLOAD
0x404 DUP1
0x405 MLOAD
0x406 PUSH1 0x4
0x408 SLOAD
0x409 SWAP1
0x40a SWAP2
0x40b POP
0x40c PUSH1 0x1
0x40e PUSH1 0xa0
0x410 PUSH1 0x2
0x412 EXP
0x413 SUB
0x414 AND
0x415 PUSH4 0xfe407f4f
0x41a DUP7
0x41b PUSH1 0x0
0x41d PUSH1 0x40
0x41f MLOAD
0x420 PUSH1 0x20
0x422 ADD
0x423 MSTORE
0x424 PUSH1 0x40
0x426 MLOAD
0x427 PUSH1 0xe0
0x429 PUSH1 0x2
0x42b EXP
0x42c PUSH4 0xffffffff
0x431 DUP5
0x432 AND
0x433 MUL
0x434 DUP2
0x435 MSTORE
0x436 PUSH3 0xffffff
0x43a SWAP1
0x43b SWAP2
0x43c AND
0x43d PUSH1 0x4
0x43f DUP3
0x440 ADD
0x441 MSTORE
0x442 PUSH1 0x24
0x444 ADD
0x445 PUSH1 0x20
0x447 PUSH1 0x40
0x449 MLOAD
0x44a DUP1
0x44b DUP4
0x44c SUB
0x44d DUP2
0x44e PUSH1 0x0
0x450 DUP8
0x451 DUP1
0x452 EXTCODESIZE
0x453 ISZERO
0x454 ISZERO
0x455 PUSH2 0x45d
0x458 JUMPI
---
0x3fd: JUMPDEST 
0x401: V376 = 0x40
0x403: V377 = M[0x40]
0x405: V378 = M[V377]
0x406: V379 = 0x4
0x408: V380 = S[0x4]
0x40c: V381 = 0x1
0x40e: V382 = 0xa0
0x410: V383 = 0x2
0x412: V384 = EXP 0x2 0xa0
0x413: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x414: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x415: V387 = 0xfe407f4f
0x41b: V388 = 0x0
0x41d: V389 = 0x40
0x41f: V390 = M[0x40]
0x420: V391 = 0x20
0x422: V392 = ADD 0x20 V390
0x423: M[V392] = 0x0
0x424: V393 = 0x40
0x426: V394 = M[0x40]
0x427: V395 = 0xe0
0x429: V396 = 0x2
0x42b: V397 = EXP 0x2 0xe0
0x42c: V398 = 0xffffffff
0x432: V399 = AND 0xfe407f4f 0xffffffff
0x433: V400 = MUL 0xfe407f4f 0x100000000000000000000000000000000000000000000000000000000
0x435: M[V394] = 0xfe407f4f00000000000000000000000000000000000000000000000000000000
0x436: V401 = 0xffffff
0x43c: V402 = AND S6 0xffffff
0x43d: V403 = 0x4
0x440: V404 = ADD V394 0x4
0x441: M[V404] = V402
0x442: V405 = 0x24
0x444: V406 = ADD 0x24 V394
0x445: V407 = 0x20
0x447: V408 = 0x40
0x449: V409 = M[0x40]
0x44c: V410 = SUB V406 V409
0x44e: V411 = 0x0
0x452: V412 = EXTCODESIZE V386
0x453: V413 = ISZERO V412
0x454: V414 = ISZERO V413
0x455: V415 = 0x45d
0x458: JUMPI 0x45d V414
---
Entry stack: [V12, 0xdb, V183, V188, V191, S8, {0xaa, 0x638}, S6, S5, S4, 0x0, S2, 0xe68d4c3a, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V378, V386, 0xfe407f4f, V406, 0x20, V409, V410, V409, 0x0, V386]
Exit stack: [V12, 0xdb, V183, V188, V191, S8, {0xaa, 0x638}, S6, S5, S4, 0x0, V378, V386, 0xfe407f4f, V406, 0x20, V409, V410, V409, 0x0, V386]

================================

Block 0x459
[0x459:0x45c]
---
Predecessors: [0x3fd]
Successors: []
---
0x459 PUSH1 0x0
0x45b DUP1
0x45c REVERT
---
0x459: V416 = 0x0
0x45c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S15, {0xaa, 0x638}, S13, S12, S11, 0x0, V378, V386, 0xfe407f4f, V406, 0x20, V409, V410, V409, 0x0, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S15, {0xaa, 0x638}, S13, S12, S11, 0x0, V378, V386, 0xfe407f4f, V406, 0x20, V409, V410, V409, 0x0, V386]

================================

Block 0x45d
[0x45d:0x469]
---
Predecessors: [0x3fd]
Successors: [0x46a, 0x46e]
---
0x45d JUMPDEST
0x45e PUSH2 0x2c6
0x461 GAS
0x462 SUB
0x463 CALL
0x464 ISZERO
0x465 ISZERO
0x466 PUSH2 0x46e
0x469 JUMPI
---
0x45d: JUMPDEST 
0x45e: V417 = 0x2c6
0x461: V418 = GAS
0x462: V419 = SUB V418 0x2c6
0x463: V420 = CALL V419 V386 0x0 V409 V410 V409 0x20
0x464: V421 = ISZERO V420
0x465: V422 = ISZERO V421
0x466: V423 = 0x46e
0x469: JUMPI 0x46e V422
---
Entry stack: [V12, 0xdb, V183, V188, V191, S15, {0xaa, 0x638}, S13, S12, S11, 0x0, V378, V386, 0xfe407f4f, V406, 0x20, V409, V410, V409, 0x0, V386]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S15, {0xaa, 0x638}, S13, S12, S11, 0x0, V378, V386, 0xfe407f4f, V406]

================================

Block 0x46a
[0x46a:0x46d]
---
Predecessors: [0x45d]
Successors: []
---
0x46a PUSH1 0x0
0x46c DUP1
0x46d REVERT
---
0x46a: V424 = 0x0
0x46d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S9, {0xaa, 0x638}, S7, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S9, {0xaa, 0x638}, S7, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]

================================

Block 0x46e
[0x46e:0x47b]
---
Predecessors: [0x45d]
Successors: [0x47c]
---
0x46e JUMPDEST
0x46f POP
0x470 POP
0x471 POP
0x472 PUSH1 0x40
0x474 MLOAD
0x475 DUP1
0x476 MLOAD
0x477 SWAP1
0x478 POP
0x479 ADD
0x47a SWAP1
0x47b POP
---
0x46e: JUMPDEST 
0x472: V425 = 0x40
0x474: V426 = M[0x40]
0x476: V427 = M[V426]
0x479: V428 = ADD V427 S3
---
Entry stack: [V12, 0xdb, V183, V188, V191, S9, {0xaa, 0x638}, S7, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]
Stack pops: 5
Stack additions: [V428]
Exit stack: [V12, 0xdb, V183, V188, V191, S9, {0xaa, 0x638}, S7, S6, S5, V428]

================================

Block 0x47c
[0x47c:0x482]
---
Predecessors: [0x46e]
Successors: [0xaa, 0x638]
---
0x47c JUMPDEST
0x47d SWAP4
0x47e SWAP3
0x47f POP
0x480 POP
0x481 POP
0x482 JUMP
---
0x47c: JUMPDEST 
0x482: JUMP {0xaa, 0x638}
---
Entry stack: [V12, 0xdb, V183, V188, V191, S5, {0xaa, 0x638}, S3, S2, S1, V428]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, 0xdb, V183, V188, V191, S5, V428]

================================

Block 0x483
[0x483:0x499]
---
Predecessors: [0x18f]
Successors: [0x49a, 0x49e]
---
0x483 JUMPDEST
0x484 PUSH1 0x0
0x486 SLOAD
0x487 CALLER
0x488 PUSH1 0x1
0x48a PUSH1 0xa0
0x48c PUSH1 0x2
0x48e EXP
0x48f SUB
0x490 SWAP1
0x491 DUP2
0x492 AND
0x493 SWAP2
0x494 AND
0x495 EQ
0x496 PUSH2 0x49e
0x499 JUMPI
---
0x483: JUMPDEST 
0x484: V429 = 0x0
0x486: V430 = S[0x0]
0x487: V431 = CALLER
0x488: V432 = 0x1
0x48a: V433 = 0xa0
0x48c: V434 = 0x2
0x48e: V435 = EXP 0x2 0xa0
0x48f: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x492: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x494: V438 = AND V430 0xffffffffffffffffffffffffffffffffffffffff
0x495: V439 = EQ V438 V437
0x496: V440 = 0x49e
0x499: JUMPI 0x49e V439
---
Entry stack: [V12, 0xdb, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V142]

================================

Block 0x49a
[0x49a:0x49d]
---
Predecessors: [0x483]
Successors: []
---
0x49a PUSH1 0x0
0x49c DUP1
0x49d REVERT
---
0x49a: V441 = 0x0
0x49d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V142]

================================

Block 0x49e
[0x49e:0x4c6]
---
Predecessors: [0x483]
Successors: [0x4c7]
---
0x49e JUMPDEST
0x49f PUSH1 0x4
0x4a1 DUP1
0x4a2 SLOAD
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 NOT
0x4b9 AND
0x4ba PUSH1 0x1
0x4bc PUSH1 0xa0
0x4be PUSH1 0x2
0x4c0 EXP
0x4c1 SUB
0x4c2 DUP4
0x4c3 AND
0x4c4 OR
0x4c5 SWAP1
0x4c6 SSTORE
---
0x49e: JUMPDEST 
0x49f: V442 = 0x4
0x4a2: V443 = S[0x4]
0x4a3: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V445 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V446 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V443
0x4ba: V447 = 0x1
0x4bc: V448 = 0xa0
0x4be: V449 = 0x2
0x4c0: V450 = EXP 0x2 0xa0
0x4c1: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c3: V452 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x4c4: V453 = OR V452 V446
0x4c6: S[0x4] = V453
---
Entry stack: [V12, 0xdb, V142]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdb, V142]

================================

Block 0x4c7
[0x4c7:0x4c7]
---
Predecessors: [0x49e]
Successors: [0x4c8]
---
0x4c7 JUMPDEST
---
0x4c7: JUMPDEST 
---
Entry stack: [V12, 0xdb, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V142]

================================

Block 0x4c8
[0x4c8:0x4ca]
---
Predecessors: [0x4c7]
Successors: [0xdb]
---
0x4c8 JUMPDEST
0x4c9 POP
0x4ca JUMP
---
0x4c8: JUMPDEST 
0x4ca: JUMP 0xdb
---
Entry stack: [V12, 0xdb, V142]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4cb
[0x4cb:0x4dc]
---
Predecessors: [0x1b0]
Successors: [0xaa]
---
0x4cb JUMPDEST
0x4cc PUSH1 0x1
0x4ce PUSH1 0x20
0x4d0 MSTORE
0x4d1 PUSH1 0x0
0x4d3 SWAP1
0x4d4 DUP2
0x4d5 MSTORE
0x4d6 PUSH1 0x40
0x4d8 SWAP1
0x4d9 SHA3
0x4da SLOAD
0x4db DUP2
0x4dc JUMP
---
0x4cb: JUMPDEST 
0x4cc: V454 = 0x1
0x4ce: V455 = 0x20
0x4d0: M[0x20] = 0x1
0x4d1: V456 = 0x0
0x4d5: M[0x0] = V156
0x4d6: V457 = 0x40
0x4d9: V458 = SHA3 0x0 0x40
0x4da: V459 = S[V458]
0x4dc: JUMP 0xaa
---
Entry stack: [V12, 0xaa, V156]
Stack pops: 2
Stack additions: [S1, V459]
Exit stack: [V12, 0xaa, V459]

================================

Block 0x4dd
[0x4dd:0x4f3]
---
Predecessors: [0x1e1]
Successors: [0x4f4, 0x4f8]
---
0x4dd JUMPDEST
0x4de PUSH1 0x0
0x4e0 SLOAD
0x4e1 CALLER
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea SWAP1
0x4eb DUP2
0x4ec AND
0x4ed SWAP2
0x4ee AND
0x4ef EQ
0x4f0 PUSH2 0x4f8
0x4f3 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V460 = 0x0
0x4e0: V461 = S[0x0]
0x4e1: V462 = CALLER
0x4e2: V463 = 0x1
0x4e4: V464 = 0xa0
0x4e6: V465 = 0x2
0x4e8: V466 = EXP 0x2 0xa0
0x4e9: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ec: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x4ee: V469 = AND V461 0xffffffffffffffffffffffffffffffffffffffff
0x4ef: V470 = EQ V469 V468
0x4f0: V471 = 0x4f8
0x4f3: JUMPI 0x4f8 V470
---
Entry stack: [V12, 0xdb, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V177]

================================

Block 0x4f4
[0x4f4:0x4f7]
---
Predecessors: [0x4dd]
Successors: []
---
0x4f4 PUSH1 0x0
0x4f6 DUP1
0x4f7 REVERT
---
0x4f4: V472 = 0x0
0x4f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V177]

================================

Block 0x4f8
[0x4f8:0x507]
---
Predecessors: [0x4dd]
Successors: [0x295, 0x508]
---
0x4f8 JUMPDEST
0x4f9 PUSH1 0x1
0x4fb PUSH1 0xa0
0x4fd PUSH1 0x2
0x4ff EXP
0x500 SUB
0x501 DUP2
0x502 AND
0x503 ISZERO
0x504 PUSH2 0x295
0x507 JUMPI
---
0x4f8: JUMPDEST 
0x4f9: V473 = 0x1
0x4fb: V474 = 0xa0
0x4fd: V475 = 0x2
0x4ff: V476 = EXP 0x2 0xa0
0x500: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x502: V478 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x503: V479 = ISZERO V478
0x504: V480 = 0x295
0x507: JUMPI 0x295 V479
---
Entry stack: [V12, 0xdb, V177]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdb, V177]

================================

Block 0x508
[0x508:0x52f]
---
Predecessors: [0x4f8]
Successors: [0x530]
---
0x508 PUSH1 0x0
0x50a DUP1
0x50b SLOAD
0x50c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x521 NOT
0x522 AND
0x523 PUSH1 0x1
0x525 PUSH1 0xa0
0x527 PUSH1 0x2
0x529 EXP
0x52a SUB
0x52b DUP4
0x52c AND
0x52d OR
0x52e SWAP1
0x52f SSTORE
---
0x508: V481 = 0x0
0x50b: V482 = S[0x0]
0x50c: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x521: V484 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x522: V485 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V482
0x523: V486 = 0x1
0x525: V487 = 0xa0
0x527: V488 = 0x2
0x529: V489 = EXP 0x2 0xa0
0x52a: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52c: V491 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x52d: V492 = OR V491 V485
0x52f: S[0x0] = V492
---
Entry stack: [V12, 0xdb, V177]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdb, V177]

================================

Block 0x530
[0x530:0x530]
---
Predecessors: [0x508]
Successors: [0x531]
---
0x530 JUMPDEST
---
0x530: JUMPDEST 
---
Entry stack: [V12, 0xdb, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V177]

================================

Block 0x531
[0x531:0x531]
---
Predecessors: [0x530]
Successors: [0x532]
---
0x531 JUMPDEST
---
0x531: JUMPDEST 
---
Entry stack: [V12, 0xdb, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V177]

================================

Block 0x532
[0x532:0x534]
---
Predecessors: [0x531]
Successors: [0xdb]
---
0x532 JUMPDEST
0x533 POP
0x534 JUMP
---
0x532: JUMPDEST 
0x534: JUMP 0xdb
---
Entry stack: [V12, 0xdb, V177]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x535
[0x535:0x587]
---
Predecessors: [0x1f7]
Successors: [0x588, 0x58c]
---
0x535 JUMPDEST
0x536 PUSH1 0x4
0x538 SLOAD
0x539 PUSH1 0x0
0x53b SWAP1
0x53c PUSH1 0x1
0x53e PUSH1 0xa0
0x540 PUSH1 0x2
0x542 EXP
0x543 SUB
0x544 AND
0x545 PUSH4 0x29d68b00
0x54a DUP6
0x54b DUP4
0x54c PUSH1 0x40
0x54e MLOAD
0x54f PUSH1 0x20
0x551 ADD
0x552 MSTORE
0x553 PUSH1 0x40
0x555 MLOAD
0x556 PUSH1 0xe0
0x558 PUSH1 0x2
0x55a EXP
0x55b PUSH4 0xffffffff
0x560 DUP5
0x561 AND
0x562 MUL
0x563 DUP2
0x564 MSTORE
0x565 PUSH3 0xffffff
0x569 SWAP1
0x56a SWAP2
0x56b AND
0x56c PUSH1 0x4
0x56e DUP3
0x56f ADD
0x570 MSTORE
0x571 PUSH1 0x24
0x573 ADD
0x574 PUSH1 0x20
0x576 PUSH1 0x40
0x578 MLOAD
0x579 DUP1
0x57a DUP4
0x57b SUB
0x57c DUP2
0x57d PUSH1 0x0
0x57f DUP8
0x580 DUP1
0x581 EXTCODESIZE
0x582 ISZERO
0x583 ISZERO
0x584 PUSH2 0x58c
0x587 JUMPI
---
0x535: JUMPDEST 
0x536: V493 = 0x4
0x538: V494 = S[0x4]
0x539: V495 = 0x0
0x53c: V496 = 0x1
0x53e: V497 = 0xa0
0x540: V498 = 0x2
0x542: V499 = EXP 0x2 0xa0
0x543: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x544: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x545: V502 = 0x29d68b00
0x54c: V503 = 0x40
0x54e: V504 = M[0x40]
0x54f: V505 = 0x20
0x551: V506 = ADD 0x20 V504
0x552: M[V506] = 0x0
0x553: V507 = 0x40
0x555: V508 = M[0x40]
0x556: V509 = 0xe0
0x558: V510 = 0x2
0x55a: V511 = EXP 0x2 0xe0
0x55b: V512 = 0xffffffff
0x561: V513 = AND 0x29d68b00 0xffffffff
0x562: V514 = MUL 0x29d68b00 0x100000000000000000000000000000000000000000000000000000000
0x564: M[V508] = 0x29d68b0000000000000000000000000000000000000000000000000000000000
0x565: V515 = 0xffffff
0x56b: V516 = AND V183 0xffffff
0x56c: V517 = 0x4
0x56f: V518 = ADD V508 0x4
0x570: M[V518] = V516
0x571: V519 = 0x24
0x573: V520 = ADD 0x24 V508
0x574: V521 = 0x20
0x576: V522 = 0x40
0x578: V523 = M[0x40]
0x57b: V524 = SUB V520 V523
0x57d: V525 = 0x0
0x581: V526 = EXTCODESIZE V501
0x582: V527 = ISZERO V526
0x583: V528 = ISZERO V527
0x584: V529 = 0x58c
0x587: JUMPI 0x58c V528
---
Entry stack: [V12, 0xdb, V183, V188, V191]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V501, 0x29d68b00, V520, 0x20, V523, V524, V523, 0x0, V501]
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, V501, 0x29d68b00, V520, 0x20, V523, V524, V523, 0x0, V501]

================================

Block 0x588
[0x588:0x58b]
---
Predecessors: [0x535]
Successors: []
---
0x588 PUSH1 0x0
0x58a DUP1
0x58b REVERT
---
0x588: V530 = 0x0
0x58b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0, V501, 0x29d68b00, V520, 0x20, V523, V524, V523, 0x0, V501]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, V501, 0x29d68b00, V520, 0x20, V523, V524, V523, 0x0, V501]

================================

Block 0x58c
[0x58c:0x598]
---
Predecessors: [0x535]
Successors: [0x599, 0x59d]
---
0x58c JUMPDEST
0x58d PUSH2 0x2c6
0x590 GAS
0x591 SUB
0x592 CALL
0x593 ISZERO
0x594 ISZERO
0x595 PUSH2 0x59d
0x598 JUMPI
---
0x58c: JUMPDEST 
0x58d: V531 = 0x2c6
0x590: V532 = GAS
0x591: V533 = SUB V532 0x2c6
0x592: V534 = CALL V533 V501 0x0 V523 V524 V523 0x20
0x593: V535 = ISZERO V534
0x594: V536 = ISZERO V535
0x595: V537 = 0x59d
0x598: JUMPI 0x59d V536
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0, V501, 0x29d68b00, V520, 0x20, V523, V524, V523, 0x0, V501]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, V501, 0x29d68b00, V520]

================================

Block 0x599
[0x599:0x59c]
---
Predecessors: [0x58c]
Successors: []
---
0x599 PUSH1 0x0
0x59b DUP1
0x59c REVERT
---
0x599: V538 = 0x0
0x59c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0, V501, 0x29d68b00, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, V501, 0x29d68b00, V520]

================================

Block 0x59d
[0x59d:0x5ad]
---
Predecessors: [0x58c]
Successors: [0x5ae, 0x5b2]
---
0x59d JUMPDEST
0x59e POP
0x59f POP
0x5a0 POP
0x5a1 PUSH1 0x40
0x5a3 MLOAD
0x5a4 DUP1
0x5a5 MLOAD
0x5a6 SWAP1
0x5a7 POP
0x5a8 ISZERO
0x5a9 ISZERO
0x5aa PUSH2 0x5b2
0x5ad JUMPI
---
0x59d: JUMPDEST 
0x5a1: V539 = 0x40
0x5a3: V540 = M[0x40]
0x5a5: V541 = M[V540]
0x5a8: V542 = ISZERO V541
0x5a9: V543 = ISZERO V542
0x5aa: V544 = 0x5b2
0x5ad: JUMPI 0x5b2 V543
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0, V501, 0x29d68b00, V520]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0]

================================

Block 0x5ae
[0x5ae:0x5b1]
---
Predecessors: [0x59d]
Successors: []
---
0x5ae PUSH1 0x0
0x5b0 DUP1
0x5b1 REVERT
---
0x5ae: V545 = 0x0
0x5b1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0]

================================

Block 0x5b2
[0x5b2:0x602]
---
Predecessors: [0x59d]
Successors: [0x603, 0x607]
---
0x5b2 JUMPDEST
0x5b3 PUSH1 0x4
0x5b5 SLOAD
0x5b6 PUSH1 0x1
0x5b8 PUSH1 0xa0
0x5ba PUSH1 0x2
0x5bc EXP
0x5bd SUB
0x5be AND
0x5bf PUSH4 0xb5254419
0x5c4 DUP6
0x5c5 PUSH1 0x0
0x5c7 PUSH1 0x40
0x5c9 MLOAD
0x5ca PUSH1 0x20
0x5cc ADD
0x5cd MSTORE
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 PUSH1 0xe0
0x5d3 PUSH1 0x2
0x5d5 EXP
0x5d6 PUSH4 0xffffffff
0x5db DUP5
0x5dc AND
0x5dd MUL
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH3 0xffffff
0x5e4 SWAP1
0x5e5 SWAP2
0x5e6 AND
0x5e7 PUSH1 0x4
0x5e9 DUP3
0x5ea ADD
0x5eb MSTORE
0x5ec PUSH1 0x24
0x5ee ADD
0x5ef PUSH1 0x20
0x5f1 PUSH1 0x40
0x5f3 MLOAD
0x5f4 DUP1
0x5f5 DUP4
0x5f6 SUB
0x5f7 DUP2
0x5f8 PUSH1 0x0
0x5fa DUP8
0x5fb DUP1
0x5fc EXTCODESIZE
0x5fd ISZERO
0x5fe ISZERO
0x5ff PUSH2 0x607
0x602 JUMPI
---
0x5b2: JUMPDEST 
0x5b3: V546 = 0x4
0x5b5: V547 = S[0x4]
0x5b6: V548 = 0x1
0x5b8: V549 = 0xa0
0x5ba: V550 = 0x2
0x5bc: V551 = EXP 0x2 0xa0
0x5bd: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5be: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x5bf: V554 = 0xb5254419
0x5c5: V555 = 0x0
0x5c7: V556 = 0x40
0x5c9: V557 = M[0x40]
0x5ca: V558 = 0x20
0x5cc: V559 = ADD 0x20 V557
0x5cd: M[V559] = 0x0
0x5ce: V560 = 0x40
0x5d0: V561 = M[0x40]
0x5d1: V562 = 0xe0
0x5d3: V563 = 0x2
0x5d5: V564 = EXP 0x2 0xe0
0x5d6: V565 = 0xffffffff
0x5dc: V566 = AND 0xb5254419 0xffffffff
0x5dd: V567 = MUL 0xb5254419 0x100000000000000000000000000000000000000000000000000000000
0x5df: M[V561] = 0xb525441900000000000000000000000000000000000000000000000000000000
0x5e0: V568 = 0xffffff
0x5e6: V569 = AND V183 0xffffff
0x5e7: V570 = 0x4
0x5ea: V571 = ADD V561 0x4
0x5eb: M[V571] = V569
0x5ec: V572 = 0x24
0x5ee: V573 = ADD 0x24 V561
0x5ef: V574 = 0x20
0x5f1: V575 = 0x40
0x5f3: V576 = M[0x40]
0x5f6: V577 = SUB V573 V576
0x5f8: V578 = 0x0
0x5fc: V579 = EXTCODESIZE V553
0x5fd: V580 = ISZERO V579
0x5fe: V581 = ISZERO V580
0x5ff: V582 = 0x607
0x602: JUMPI 0x607 V581
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V553, 0xb5254419, V573, 0x20, V576, V577, V576, 0x0, V553]
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, V553, 0xb5254419, V573, 0x20, V576, V577, V576, 0x0, V553]

================================

Block 0x603
[0x603:0x606]
---
Predecessors: [0x5b2]
Successors: []
---
0x603 PUSH1 0x0
0x605 DUP1
0x606 REVERT
---
0x603: V583 = 0x0
0x606: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0, V553, 0xb5254419, V573, 0x20, V576, V577, V576, 0x0, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, V553, 0xb5254419, V573, 0x20, V576, V577, V576, 0x0, V553]

================================

Block 0x607
[0x607:0x613]
---
Predecessors: [0x5b2]
Successors: [0x614, 0x618]
---
0x607 JUMPDEST
0x608 PUSH2 0x2c6
0x60b GAS
0x60c SUB
0x60d CALL
0x60e ISZERO
0x60f ISZERO
0x610 PUSH2 0x618
0x613 JUMPI
---
0x607: JUMPDEST 
0x608: V584 = 0x2c6
0x60b: V585 = GAS
0x60c: V586 = SUB V585 0x2c6
0x60d: V587 = CALL V586 V553 0x0 V576 V577 V576 0x20
0x60e: V588 = ISZERO V587
0x60f: V589 = ISZERO V588
0x610: V590 = 0x618
0x613: JUMPI 0x618 V589
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0, V553, 0xb5254419, V573, 0x20, V576, V577, V576, 0x0, V553]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, V553, 0xb5254419, V573]

================================

Block 0x614
[0x614:0x617]
---
Predecessors: [0x607]
Successors: []
---
0x614 PUSH1 0x0
0x616 DUP1
0x617 REVERT
---
0x614: V591 = 0x0
0x617: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0, V553, 0xb5254419, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, V553, 0xb5254419, V573]

================================

Block 0x618
[0x618:0x628]
---
Predecessors: [0x607]
Successors: [0x629, 0x62d]
---
0x618 JUMPDEST
0x619 POP
0x61a POP
0x61b POP
0x61c PUSH1 0x40
0x61e MLOAD
0x61f DUP1
0x620 MLOAD
0x621 SWAP1
0x622 POP
0x623 ISZERO
0x624 ISZERO
0x625 PUSH2 0x62d
0x628 JUMPI
---
0x618: JUMPDEST 
0x61c: V592 = 0x40
0x61e: V593 = M[0x40]
0x620: V594 = M[V593]
0x623: V595 = ISZERO V594
0x624: V596 = ISZERO V595
0x625: V597 = 0x62d
0x628: JUMPI 0x62d V596
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0, V553, 0xb5254419, V573]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0]

================================

Block 0x629
[0x629:0x62c]
---
Predecessors: [0x618]
Successors: []
---
0x629 PUSH1 0x0
0x62b DUP1
0x62c REVERT
---
0x629: V598 = 0x0
0x62c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0]

================================

Block 0x62d
[0x62d:0x637]
---
Predecessors: [0x618]
Successors: [0x36e]
---
0x62d JUMPDEST
0x62e PUSH2 0x638
0x631 DUP5
0x632 DUP5
0x633 DUP5
0x634 PUSH2 0x36e
0x637 JUMP
---
0x62d: JUMPDEST 
0x62e: V599 = 0x638
0x634: V600 = 0x36e
0x637: JUMP 0x36e
---
Entry stack: [V12, 0xdb, V183, V188, V191, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x638, S3, S2, S1]
Exit stack: [V12, 0xdb, V183, V188, V191, 0x0, 0x638, V183, V188, V191]

================================

Block 0x638
[0x638:0x643]
---
Predecessors: [0x47c]
Successors: [0x68d]
---
0x638 JUMPDEST
0x639 SWAP1
0x63a POP
0x63b PUSH2 0x644
0x63e DUP5
0x63f DUP3
0x640 PUSH2 0x68d
0x643 JUMP
---
0x638: JUMPDEST 
0x63b: V601 = 0x644
0x640: V602 = 0x68d
0x643: JUMP 0x68d
---
Entry stack: [V12, 0xdb, V183, V188, V191, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S0, 0x644, S4, S0]
Exit stack: [V12, 0xdb, V183, V188, V191, S0, 0x644, V183, S0]

================================

Block 0x644
[0x644:0x644]
---
Predecessors: [0x848]
Successors: [0x645]
---
0x644 JUMPDEST
---
0x644: JUMPDEST 
---
Entry stack: [V12, 0xdb, V183, V188, V191, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, V428]

================================

Block 0x645
[0x645:0x64a]
---
Predecessors: [0x644]
Successors: [0xdb]
---
0x645 JUMPDEST
0x646 POP
0x647 POP
0x648 POP
0x649 POP
0x64a JUMP
---
0x645: JUMPDEST 
0x64a: JUMP 0xdb
---
Entry stack: [V12, 0xdb, V183, V188, V191, V428]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x64b
[0x64b:0x661]
---
Predecessors: [0x235]
Successors: [0x662, 0x666]
---
0x64b JUMPDEST
0x64c PUSH1 0x0
0x64e SLOAD
0x64f CALLER
0x650 PUSH1 0x1
0x652 PUSH1 0xa0
0x654 PUSH1 0x2
0x656 EXP
0x657 SUB
0x658 SWAP1
0x659 DUP2
0x65a AND
0x65b SWAP2
0x65c AND
0x65d EQ
0x65e PUSH2 0x666
0x661 JUMPI
---
0x64b: JUMPDEST 
0x64c: V603 = 0x0
0x64e: V604 = S[0x0]
0x64f: V605 = CALLER
0x650: V606 = 0x1
0x652: V607 = 0xa0
0x654: V608 = 0x2
0x656: V609 = EXP 0x2 0xa0
0x657: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65a: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x65c: V612 = AND V604 0xffffffffffffffffffffffffffffffffffffffff
0x65d: V613 = EQ V612 V611
0x65e: V614 = 0x666
0x661: JUMPI 0x666 V613
---
Entry stack: [V12, 0xdb, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V205]

================================

Block 0x662
[0x662:0x665]
---
Predecessors: [0x64b]
Successors: []
---
0x662 PUSH1 0x0
0x664 DUP1
0x665 REVERT
---
0x662: V615 = 0x0
0x665: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V205]

================================

Block 0x666
[0x666:0x671]
---
Predecessors: [0x64b]
Successors: []
---
0x666 JUMPDEST
0x667 DUP1
0x668 PUSH1 0x1
0x66a PUSH1 0xa0
0x66c PUSH1 0x2
0x66e EXP
0x66f SUB
0x670 AND
0x671 SELFDESTRUCT
---
0x666: JUMPDEST 
0x668: V616 = 0x1
0x66a: V617 = 0xa0
0x66c: V618 = 0x2
0x66e: V619 = EXP 0x2 0xa0
0x66f: V620 = SUB 0x10000000000000000000000000000000000000000 0x1
0x670: V621 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x671: SELFDESTRUCT V621
---
Entry stack: [V12, 0xdb, V205]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdb, V205]

================================

Block 0x672
[0x672:0x672]
---
Predecessors: []
Successors: [0x673]
---
0x672 JUMPDEST
---
0x672: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x673
[0x673:0x675]
---
Predecessors: [0x672]
Successors: []
Has unresolved jump.
---
0x673 JUMPDEST
0x674 POP
0x675 JUMP
---
0x673: JUMPDEST 
0x675: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x676
[0x676:0x680]
---
Predecessors: [0x2d7]
Successors: [0x681, 0x682]
---
0x676 JUMPDEST
0x677 PUSH1 0x0
0x679 DUP3
0x67a DUP3
0x67b GT
0x67c ISZERO
0x67d PUSH2 0x682
0x680 JUMPI
---
0x676: JUMPDEST 
0x677: V622 = 0x0
0x67b: V623 = GT V246 V264
0x67c: V624 = ISZERO V623
0x67d: V625 = 0x682
0x680: JUMPI 0x682 V624
---
Entry stack: [V12, 0xdb, V234, V246, 0x2ea, V264, V246]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0xdb, V234, V246, 0x2ea, V264, V246, 0x0]

================================

Block 0x681
[0x681:0x681]
---
Predecessors: [0x676]
Successors: []
---
0x681 INVALID
---
0x681: INVALID 
---
Entry stack: [V12, 0xdb, V234, V246, 0x2ea, V264, V246, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V234, V246, 0x2ea, V264, V246, 0x0]

================================

Block 0x682
[0x682:0x686]
---
Predecessors: [0x676]
Successors: [0x687]
---
0x682 JUMPDEST
0x683 POP
0x684 DUP1
0x685 DUP3
0x686 SUB
---
0x682: JUMPDEST 
0x686: V626 = SUB V264 V246
---
Entry stack: [V12, 0xdb, V234, V246, 0x2ea, V264, V246, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V626]
Exit stack: [V12, 0xdb, V234, V246, 0x2ea, V264, V246, V626]

================================

Block 0x687
[0x687:0x68c]
---
Predecessors: [0x682]
Successors: [0x2ea]
---
0x687 JUMPDEST
0x688 SWAP3
0x689 SWAP2
0x68a POP
0x68b POP
0x68c JUMP
---
0x687: JUMPDEST 
0x68c: JUMP 0x2ea
---
Entry stack: [V12, 0xdb, V234, V246, 0x2ea, V264, V246, V626]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0xdb, V234, V246, V626]

================================

Block 0x68d
[0x68d:0x698]
---
Predecessors: [0x638]
Successors: [0x699, 0x69d]
---
0x68d JUMPDEST
0x68e PUSH1 0x0
0x690 CALLVALUE
0x691 DUP3
0x692 SWAP1
0x693 LT
0x694 ISZERO
0x695 PUSH2 0x69d
0x698 JUMPI
---
0x68d: JUMPDEST 
0x68e: V627 = 0x0
0x690: V628 = CALLVALUE
0x693: V629 = LT V628 S0
0x694: V630 = ISZERO V629
0x695: V631 = 0x69d
0x698: JUMPI 0x69d V630
---
Entry stack: [V12, 0xdb, V183, V188, V191, S3, 0x644, V183, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0xdb, V183, V188, V191, S3, 0x644, V183, S0, 0x0]

================================

Block 0x699
[0x699:0x69c]
---
Predecessors: [0x68d]
Successors: []
---
0x699 PUSH1 0x0
0x69b DUP1
0x69c REVERT
---
0x699: V632 = 0x0
0x69c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S4, 0x644, V183, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S4, 0x644, V183, S1, 0x0]

================================

Block 0x69d
[0x69d:0x6ef]
---
Predecessors: [0x68d]
Successors: [0x6f0, 0x6f4]
---
0x69d JUMPDEST
0x69e POP
0x69f PUSH1 0x3
0x6a1 SLOAD
0x6a2 PUSH1 0x1
0x6a4 PUSH1 0xa0
0x6a6 PUSH1 0x2
0x6a8 EXP
0x6a9 SUB
0x6aa AND
0x6ab DUP1
0x6ac PUSH4 0x6e07d77
0x6b1 DUP5
0x6b2 PUSH1 0x0
0x6b4 PUSH1 0x40
0x6b6 MLOAD
0x6b7 PUSH1 0x20
0x6b9 ADD
0x6ba MSTORE
0x6bb PUSH1 0x40
0x6bd MLOAD
0x6be PUSH1 0xe0
0x6c0 PUSH1 0x2
0x6c2 EXP
0x6c3 PUSH4 0xffffffff
0x6c8 DUP5
0x6c9 AND
0x6ca MUL
0x6cb DUP2
0x6cc MSTORE
0x6cd PUSH3 0xffffff
0x6d1 SWAP1
0x6d2 SWAP2
0x6d3 AND
0x6d4 PUSH1 0x4
0x6d6 DUP3
0x6d7 ADD
0x6d8 MSTORE
0x6d9 PUSH1 0x24
0x6db ADD
0x6dc PUSH1 0x20
0x6de PUSH1 0x40
0x6e0 MLOAD
0x6e1 DUP1
0x6e2 DUP4
0x6e3 SUB
0x6e4 DUP2
0x6e5 PUSH1 0x0
0x6e7 DUP8
0x6e8 DUP1
0x6e9 EXTCODESIZE
0x6ea ISZERO
0x6eb ISZERO
0x6ec PUSH2 0x6f4
0x6ef JUMPI
---
0x69d: JUMPDEST 
0x69f: V633 = 0x3
0x6a1: V634 = S[0x3]
0x6a2: V635 = 0x1
0x6a4: V636 = 0xa0
0x6a6: V637 = 0x2
0x6a8: V638 = EXP 0x2 0xa0
0x6a9: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6aa: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0x6ac: V641 = 0x6e07d77
0x6b2: V642 = 0x0
0x6b4: V643 = 0x40
0x6b6: V644 = M[0x40]
0x6b7: V645 = 0x20
0x6b9: V646 = ADD 0x20 V644
0x6ba: M[V646] = 0x0
0x6bb: V647 = 0x40
0x6bd: V648 = M[0x40]
0x6be: V649 = 0xe0
0x6c0: V650 = 0x2
0x6c2: V651 = EXP 0x2 0xe0
0x6c3: V652 = 0xffffffff
0x6c9: V653 = AND 0x6e07d77 0xffffffff
0x6ca: V654 = MUL 0x6e07d77 0x100000000000000000000000000000000000000000000000000000000
0x6cc: M[V648] = 0x6e07d7700000000000000000000000000000000000000000000000000000000
0x6cd: V655 = 0xffffff
0x6d3: V656 = AND V183 0xffffff
0x6d4: V657 = 0x4
0x6d7: V658 = ADD V648 0x4
0x6d8: M[V658] = V656
0x6d9: V659 = 0x24
0x6db: V660 = ADD 0x24 V648
0x6dc: V661 = 0x20
0x6de: V662 = 0x40
0x6e0: V663 = M[0x40]
0x6e3: V664 = SUB V660 V663
0x6e5: V665 = 0x0
0x6e9: V666 = EXTCODESIZE V640
0x6ea: V667 = ISZERO V666
0x6eb: V668 = ISZERO V667
0x6ec: V669 = 0x6f4
0x6ef: JUMPI 0x6f4 V668
---
Entry stack: [V12, 0xdb, V183, V188, V191, S4, 0x644, V183, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V640, V640, 0x6e07d77, V660, 0x20, V663, V664, V663, 0x0, V640]
Exit stack: [V12, 0xdb, V183, V188, V191, S4, 0x644, V183, S1, V640, V640, 0x6e07d77, V660, 0x20, V663, V664, V663, 0x0, V640]

================================

Block 0x6f0
[0x6f0:0x6f3]
---
Predecessors: [0x69d]
Successors: []
---
0x6f0 PUSH1 0x0
0x6f2 DUP1
0x6f3 REVERT
---
0x6f0: V670 = 0x0
0x6f3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S13, 0x644, V183, S10, V640, V640, 0x6e07d77, V660, 0x20, V663, V664, V663, 0x0, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S13, 0x644, V183, S10, V640, V640, 0x6e07d77, V660, 0x20, V663, V664, V663, 0x0, V640]

================================

Block 0x6f4
[0x6f4:0x700]
---
Predecessors: [0x69d]
Successors: [0x701, 0x705]
---
0x6f4 JUMPDEST
0x6f5 PUSH2 0x2c6
0x6f8 GAS
0x6f9 SUB
0x6fa CALL
0x6fb ISZERO
0x6fc ISZERO
0x6fd PUSH2 0x705
0x700 JUMPI
---
0x6f4: JUMPDEST 
0x6f5: V671 = 0x2c6
0x6f8: V672 = GAS
0x6f9: V673 = SUB V672 0x2c6
0x6fa: V674 = CALL V673 V640 0x0 V663 V664 V663 0x20
0x6fb: V675 = ISZERO V674
0x6fc: V676 = ISZERO V675
0x6fd: V677 = 0x705
0x700: JUMPI 0x705 V676
---
Entry stack: [V12, 0xdb, V183, V188, V191, S13, 0x644, V183, S10, V640, V640, 0x6e07d77, V660, 0x20, V663, V664, V663, 0x0, V640]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S13, 0x644, V183, S10, V640, V640, 0x6e07d77, V660]

================================

Block 0x701
[0x701:0x704]
---
Predecessors: [0x6f4]
Successors: []
---
0x701 PUSH1 0x0
0x703 DUP1
0x704 REVERT
---
0x701: V678 = 0x0
0x704: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, V640, 0x6e07d77, V660]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, V640, 0x6e07d77, V660]

================================

Block 0x705
[0x705:0x73a]
---
Predecessors: [0x6f4]
Successors: [0x73b, 0x73f]
---
0x705 JUMPDEST
0x706 POP
0x707 POP
0x708 POP
0x709 PUSH1 0x40
0x70b MLOAD
0x70c DUP1
0x70d MLOAD
0x70e PUSH1 0x1
0x710 PUSH1 0xa0
0x712 PUSH1 0x2
0x714 EXP
0x715 SUB
0x716 AND
0x717 SWAP1
0x718 POP
0x719 DUP3
0x71a ISZERO
0x71b PUSH2 0x8fc
0x71e MUL
0x71f DUP4
0x720 PUSH1 0x40
0x722 MLOAD
0x723 PUSH1 0x0
0x725 PUSH1 0x40
0x727 MLOAD
0x728 DUP1
0x729 DUP4
0x72a SUB
0x72b DUP2
0x72c DUP6
0x72d DUP9
0x72e DUP9
0x72f CALL
0x730 SWAP4
0x731 POP
0x732 POP
0x733 POP
0x734 POP
0x735 ISZERO
0x736 ISZERO
0x737 PUSH2 0x73f
0x73a JUMPI
---
0x705: JUMPDEST 
0x709: V679 = 0x40
0x70b: V680 = M[0x40]
0x70d: V681 = M[V680]
0x70e: V682 = 0x1
0x710: V683 = 0xa0
0x712: V684 = 0x2
0x714: V685 = EXP 0x2 0xa0
0x715: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x716: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x71a: V688 = ISZERO S4
0x71b: V689 = 0x8fc
0x71e: V690 = MUL 0x8fc V688
0x720: V691 = 0x40
0x722: V692 = M[0x40]
0x723: V693 = 0x0
0x725: V694 = 0x40
0x727: V695 = M[0x40]
0x72a: V696 = SUB V692 V695
0x72f: V697 = CALL V690 V687 S4 V695 V696 V695 0x0
0x735: V698 = ISZERO V697
0x736: V699 = ISZERO V698
0x737: V700 = 0x73f
0x73a: JUMPI 0x73f V699
---
Entry stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, V640, 0x6e07d77, V660]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640]

================================

Block 0x73b
[0x73b:0x73e]
---
Predecessors: [0x705]
Successors: []
---
0x73b PUSH1 0x0
0x73d DUP1
0x73e REVERT
---
0x73b: V701 = 0x0
0x73e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S4, 0x644, V183, S1, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S4, 0x644, V183, S1, V640]

================================

Block 0x73f
[0x73f:0x793]
---
Predecessors: [0x705]
Successors: [0x794, 0x798]
---
0x73f JUMPDEST
0x740 DUP1
0x741 PUSH1 0x1
0x743 PUSH1 0xa0
0x745 PUSH1 0x2
0x747 EXP
0x748 SUB
0x749 AND
0x74a PUSH4 0x26bf576a
0x74f DUP5
0x750 CALLER
0x751 PUSH1 0x40
0x753 MLOAD
0x754 PUSH1 0xe0
0x756 PUSH1 0x2
0x758 EXP
0x759 PUSH4 0xffffffff
0x75e DUP6
0x75f AND
0x760 MUL
0x761 DUP2
0x762 MSTORE
0x763 PUSH3 0xffffff
0x767 SWAP1
0x768 SWAP3
0x769 AND
0x76a PUSH1 0x4
0x76c DUP4
0x76d ADD
0x76e MSTORE
0x76f PUSH1 0x1
0x771 PUSH1 0xa0
0x773 PUSH1 0x2
0x775 EXP
0x776 SUB
0x777 AND
0x778 PUSH1 0x24
0x77a DUP3
0x77b ADD
0x77c MSTORE
0x77d PUSH1 0x44
0x77f ADD
0x780 PUSH1 0x0
0x782 PUSH1 0x40
0x784 MLOAD
0x785 DUP1
0x786 DUP4
0x787 SUB
0x788 DUP2
0x789 PUSH1 0x0
0x78b DUP8
0x78c DUP1
0x78d EXTCODESIZE
0x78e ISZERO
0x78f ISZERO
0x790 PUSH2 0x798
0x793 JUMPI
---
0x73f: JUMPDEST 
0x741: V702 = 0x1
0x743: V703 = 0xa0
0x745: V704 = 0x2
0x747: V705 = EXP 0x2 0xa0
0x748: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x749: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0x74a: V708 = 0x26bf576a
0x750: V709 = CALLER
0x751: V710 = 0x40
0x753: V711 = M[0x40]
0x754: V712 = 0xe0
0x756: V713 = 0x2
0x758: V714 = EXP 0x2 0xe0
0x759: V715 = 0xffffffff
0x75f: V716 = AND 0x26bf576a 0xffffffff
0x760: V717 = MUL 0x26bf576a 0x100000000000000000000000000000000000000000000000000000000
0x762: M[V711] = 0x26bf576a00000000000000000000000000000000000000000000000000000000
0x763: V718 = 0xffffff
0x769: V719 = AND V183 0xffffff
0x76a: V720 = 0x4
0x76d: V721 = ADD V711 0x4
0x76e: M[V721] = V719
0x76f: V722 = 0x1
0x771: V723 = 0xa0
0x773: V724 = 0x2
0x775: V725 = EXP 0x2 0xa0
0x776: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x777: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0x778: V728 = 0x24
0x77b: V729 = ADD V711 0x24
0x77c: M[V729] = V727
0x77d: V730 = 0x44
0x77f: V731 = ADD 0x44 V711
0x780: V732 = 0x0
0x782: V733 = 0x40
0x784: V734 = M[0x40]
0x787: V735 = SUB V731 V734
0x789: V736 = 0x0
0x78d: V737 = EXTCODESIZE V707
0x78e: V738 = ISZERO V737
0x78f: V739 = ISZERO V738
0x790: V740 = 0x798
0x793: JUMPI 0x798 V739
---
Entry stack: [V12, 0xdb, V183, V188, V191, S4, 0x644, V183, S1, V640]
Stack pops: 3
Stack additions: [S2, S1, S0, V707, 0x26bf576a, V731, 0x0, V734, V735, V734, 0x0, V707]
Exit stack: [V12, 0xdb, V183, V188, V191, S4, 0x644, V183, S1, V640, V707, 0x26bf576a, V731, 0x0, V734, V735, V734, 0x0, V707]

================================

Block 0x794
[0x794:0x797]
---
Predecessors: [0x73f]
Successors: []
---
0x794 PUSH1 0x0
0x796 DUP1
0x797 REVERT
---
0x794: V741 = 0x0
0x797: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S13, 0x644, V183, S10, V640, V707, 0x26bf576a, V731, 0x0, V734, V735, V734, 0x0, V707]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S13, 0x644, V183, S10, V640, V707, 0x26bf576a, V731, 0x0, V734, V735, V734, 0x0, V707]

================================

Block 0x798
[0x798:0x7a4]
---
Predecessors: [0x73f]
Successors: [0x7a5, 0x7a9]
---
0x798 JUMPDEST
0x799 PUSH2 0x2c6
0x79c GAS
0x79d SUB
0x79e CALL
0x79f ISZERO
0x7a0 ISZERO
0x7a1 PUSH2 0x7a9
0x7a4 JUMPI
---
0x798: JUMPDEST 
0x799: V742 = 0x2c6
0x79c: V743 = GAS
0x79d: V744 = SUB V743 0x2c6
0x79e: V745 = CALL V744 V707 0x0 V734 V735 V734 0x0
0x79f: V746 = ISZERO V745
0x7a0: V747 = ISZERO V746
0x7a1: V748 = 0x7a9
0x7a4: JUMPI 0x7a9 V747
---
Entry stack: [V12, 0xdb, V183, V188, V191, S13, 0x644, V183, S10, V640, V707, 0x26bf576a, V731, 0x0, V734, V735, V734, 0x0, V707]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S13, 0x644, V183, S10, V640, V707, 0x26bf576a, V731]

================================

Block 0x7a5
[0x7a5:0x7a8]
---
Predecessors: [0x798]
Successors: []
---
0x7a5 PUSH1 0x0
0x7a7 DUP1
0x7a8 REVERT
---
0x7a5: V749 = 0x0
0x7a8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, V707, 0x26bf576a, V731]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, V707, 0x26bf576a, V731]

================================

Block 0x7a9
[0x7a9:0x7fd]
---
Predecessors: [0x798]
Successors: [0x84d]
---
0x7a9 JUMPDEST
0x7aa POP
0x7ab POP
0x7ac POP
0x7ad PUSH32 0xfbd2f544956cd49df3ba51f37dfcf65bf87effb3da1d190782b5afeb08a5386
0x7ce CALLER
0x7cf DUP4
0x7d0 CALLVALUE
0x7d1 SUB
0x7d2 PUSH1 0x40
0x7d4 MLOAD
0x7d5 PUSH1 0x1
0x7d7 PUSH1 0xa0
0x7d9 PUSH1 0x2
0x7db EXP
0x7dc SUB
0x7dd SWAP1
0x7de SWAP3
0x7df AND
0x7e0 DUP3
0x7e1 MSTORE
0x7e2 PUSH1 0x20
0x7e4 DUP3
0x7e5 ADD
0x7e6 MSTORE
0x7e7 PUSH1 0x40
0x7e9 SWAP1
0x7ea DUP2
0x7eb ADD
0x7ec SWAP1
0x7ed MLOAD
0x7ee DUP1
0x7ef SWAP2
0x7f0 SUB
0x7f1 SWAP1
0x7f2 LOG1
0x7f3 PUSH2 0x7fe
0x7f6 CALLER
0x7f7 DUP4
0x7f8 CALLVALUE
0x7f9 SUB
0x7fa PUSH2 0x84d
0x7fd JUMP
---
0x7a9: JUMPDEST 
0x7ad: V750 = 0xfbd2f544956cd49df3ba51f37dfcf65bf87effb3da1d190782b5afeb08a5386
0x7ce: V751 = CALLER
0x7d0: V752 = CALLVALUE
0x7d1: V753 = SUB V752 S4
0x7d2: V754 = 0x40
0x7d4: V755 = M[0x40]
0x7d5: V756 = 0x1
0x7d7: V757 = 0xa0
0x7d9: V758 = 0x2
0x7db: V759 = EXP 0x2 0xa0
0x7dc: V760 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7df: V761 = AND V751 0xffffffffffffffffffffffffffffffffffffffff
0x7e1: M[V755] = V761
0x7e2: V762 = 0x20
0x7e5: V763 = ADD V755 0x20
0x7e6: M[V763] = V753
0x7e7: V764 = 0x40
0x7eb: V765 = ADD 0x40 V755
0x7ed: V766 = M[0x40]
0x7f0: V767 = SUB V765 V766
0x7f2: LOG V766 V767 0xfbd2f544956cd49df3ba51f37dfcf65bf87effb3da1d190782b5afeb08a5386
0x7f3: V768 = 0x7fe
0x7f6: V769 = CALLER
0x7f8: V770 = CALLVALUE
0x7f9: V771 = SUB V770 S4
0x7fa: V772 = 0x84d
0x7fd: JUMP 0x84d
---
Entry stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, V707, 0x26bf576a, V731]
Stack pops: 5
Stack additions: [S4, S3, 0x7fe, V769, V771]
Exit stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, 0x7fe, V769, V771]

================================

Block 0x7fe
[0x7fe:0x847]
---
Predecessors: [0x8a6]
Successors: [0x848]
---
0x7fe JUMPDEST
0x7ff PUSH32 0x3a22d8eeac2ce8076694d03a4e6171c1a47e8d018cb950be460912b37650ec0f
0x820 DUP4
0x821 CALLER
0x822 PUSH1 0x40
0x824 MLOAD
0x825 PUSH3 0xffffff
0x829 SWAP1
0x82a SWAP3
0x82b AND
0x82c DUP3
0x82d MSTORE
0x82e PUSH1 0x1
0x830 PUSH1 0xa0
0x832 PUSH1 0x2
0x834 EXP
0x835 SUB
0x836 AND
0x837 PUSH1 0x20
0x839 DUP3
0x83a ADD
0x83b MSTORE
0x83c PUSH1 0x40
0x83e SWAP1
0x83f DUP2
0x840 ADD
0x841 SWAP1
0x842 MLOAD
0x843 DUP1
0x844 SWAP2
0x845 SUB
0x846 SWAP1
0x847 LOG1
---
0x7fe: JUMPDEST 
0x7ff: V773 = 0x3a22d8eeac2ce8076694d03a4e6171c1a47e8d018cb950be460912b37650ec0f
0x821: V774 = CALLER
0x822: V775 = 0x40
0x824: V776 = M[0x40]
0x825: V777 = 0xffffff
0x82b: V778 = AND V183 0xffffff
0x82d: M[V776] = V778
0x82e: V779 = 0x1
0x830: V780 = 0xa0
0x832: V781 = 0x2
0x834: V782 = EXP 0x2 0xa0
0x835: V783 = SUB 0x10000000000000000000000000000000000000000 0x1
0x836: V784 = AND 0xffffffffffffffffffffffffffffffffffffffff V774
0x837: V785 = 0x20
0x83a: V786 = ADD V776 0x20
0x83b: M[V786] = V784
0x83c: V787 = 0x40
0x840: V788 = ADD 0x40 V776
0x842: V789 = M[0x40]
0x845: V790 = SUB V788 V789
0x847: LOG V789 V790 0x3a22d8eeac2ce8076694d03a4e6171c1a47e8d018cb950be460912b37650ec0f
---
Entry stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640]

================================

Block 0x848
[0x848:0x84c]
---
Predecessors: [0x7fe]
Successors: [0x644]
---
0x848 JUMPDEST
0x849 POP
0x84a POP
0x84b POP
0x84c JUMP
---
0x848: JUMPDEST 
0x84c: JUMP 0x644
---
Entry stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, V428]

================================

Block 0x84d
[0x84d:0x875]
---
Predecessors: [0x7a9]
Successors: [0x8aa]
---
0x84d JUMPDEST
0x84e PUSH1 0x1
0x850 PUSH1 0xa0
0x852 PUSH1 0x2
0x854 EXP
0x855 SUB
0x856 DUP3
0x857 AND
0x858 PUSH1 0x0
0x85a SWAP1
0x85b DUP2
0x85c MSTORE
0x85d PUSH1 0x1
0x85f PUSH1 0x20
0x861 MSTORE
0x862 PUSH1 0x40
0x864 SWAP1
0x865 SHA3
0x866 SLOAD
0x867 PUSH2 0x876
0x86a SWAP1
0x86b DUP3
0x86c PUSH4 0xffffffff
0x871 PUSH2 0x8aa
0x874 AND
0x875 JUMP
---
0x84d: JUMPDEST 
0x84e: V791 = 0x1
0x850: V792 = 0xa0
0x852: V793 = 0x2
0x854: V794 = EXP 0x2 0xa0
0x855: V795 = SUB 0x10000000000000000000000000000000000000000 0x1
0x857: V796 = AND V769 0xffffffffffffffffffffffffffffffffffffffff
0x858: V797 = 0x0
0x85c: M[0x0] = V796
0x85d: V798 = 0x1
0x85f: V799 = 0x20
0x861: M[0x20] = 0x1
0x862: V800 = 0x40
0x865: V801 = SHA3 0x0 0x40
0x866: V802 = S[V801]
0x867: V803 = 0x876
0x86c: V804 = 0xffffffff
0x871: V805 = 0x8aa
0x874: V806 = AND 0x8aa 0xffffffff
0x875: JUMP 0x8aa
---
Entry stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, 0x7fe, V769, V771]
Stack pops: 2
Stack additions: [S1, S0, 0x876, V802, S0]
Exit stack: [V12, 0xdb, V183, V188, V191, S7, 0x644, V183, S4, V640, 0x7fe, V769, V771, 0x876, V802, V771]

================================

Block 0x876
[0x876:0x8a1]
---
Predecessors: [0x8bd]
Successors: [0x8aa]
---
0x876 JUMPDEST
0x877 PUSH1 0x1
0x879 PUSH1 0xa0
0x87b PUSH1 0x2
0x87d EXP
0x87e SUB
0x87f DUP4
0x880 AND
0x881 PUSH1 0x0
0x883 SWAP1
0x884 DUP2
0x885 MSTORE
0x886 PUSH1 0x1
0x888 PUSH1 0x20
0x88a MSTORE
0x88b PUSH1 0x40
0x88d SWAP1
0x88e SHA3
0x88f SSTORE
0x890 PUSH1 0x2
0x892 SLOAD
0x893 PUSH2 0x8a2
0x896 SWAP1
0x897 DUP3
0x898 PUSH4 0xffffffff
0x89d PUSH2 0x8aa
0x8a0 AND
0x8a1 JUMP
---
0x876: JUMPDEST 
0x877: V807 = 0x1
0x879: V808 = 0xa0
0x87b: V809 = 0x2
0x87d: V810 = EXP 0x2 0xa0
0x87e: V811 = SUB 0x10000000000000000000000000000000000000000 0x1
0x880: V812 = AND V769 0xffffffffffffffffffffffffffffffffffffffff
0x881: V813 = 0x0
0x885: M[0x0] = V812
0x886: V814 = 0x1
0x888: V815 = 0x20
0x88a: M[0x20] = 0x1
0x88b: V816 = 0x40
0x88e: V817 = SHA3 0x0 0x40
0x88f: S[V817] = S0
0x890: V818 = 0x2
0x892: V819 = S[0x2]
0x893: V820 = 0x8a2
0x898: V821 = 0xffffffff
0x89d: V822 = 0x8aa
0x8a0: V823 = AND 0x8aa 0xffffffff
0x8a1: JUMP 0x8aa
---
Entry stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640, 0x7fe, V769, V771, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x8a2, V819, S1]
Exit stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640, 0x7fe, V769, V771, 0x8a2, V819, V771]

================================

Block 0x8a2
[0x8a2:0x8a5]
---
Predecessors: [0x8bd]
Successors: [0x8a6]
---
0x8a2 JUMPDEST
0x8a3 PUSH1 0x2
0x8a5 SSTORE
---
0x8a2: JUMPDEST 
0x8a3: V824 = 0x2
0x8a5: S[0x2] = S0
---
Entry stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640, 0x7fe, V769, V771, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640, 0x7fe, V769, V771]

================================

Block 0x8a6
[0x8a6:0x8a9]
---
Predecessors: [0x8a2]
Successors: [0x7fe]
---
0x8a6 JUMPDEST
0x8a7 POP
0x8a8 POP
0x8a9 JUMP
---
0x8a6: JUMPDEST 
0x8a9: JUMP 0x7fe
---
Entry stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640, 0x7fe, V769, V771]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640]

================================

Block 0x8aa
[0x8aa:0x8b7]
---
Predecessors: [0x84d, 0x876]
Successors: [0x8b8, 0x8b9]
---
0x8aa JUMPDEST
0x8ab PUSH1 0x0
0x8ad DUP3
0x8ae DUP3
0x8af ADD
0x8b0 DUP4
0x8b1 DUP2
0x8b2 LT
0x8b3 ISZERO
0x8b4 PUSH2 0x8b9
0x8b7 JUMPI
---
0x8aa: JUMPDEST 
0x8ab: V825 = 0x0
0x8af: V826 = ADD V771 S1
0x8b2: V827 = LT V826 S1
0x8b3: V828 = ISZERO V827
0x8b4: V829 = 0x8b9
0x8b7: JUMPI 0x8b9 V828
---
Entry stack: [V12, 0xdb, V183, V188, V191, S10, 0x644, V183, S7, V640, 0x7fe, V769, V771, {0x876, 0x8a2}, S1, V771]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V826]
Exit stack: [V12, 0xdb, V183, V188, V191, S10, 0x644, V183, S7, V640, 0x7fe, V769, V771, {0x876, 0x8a2}, S1, V771, 0x0, V826]

================================

Block 0x8b8
[0x8b8:0x8b8]
---
Predecessors: [0x8aa]
Successors: []
---
0x8b8 INVALID
---
0x8b8: INVALID 
---
Entry stack: [V12, 0xdb, V183, V188, V191, S12, 0x644, V183, S9, V640, 0x7fe, V769, V771, {0x876, 0x8a2}, S3, V771, 0x0, V826]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdb, V183, V188, V191, S12, 0x644, V183, S9, V640, 0x7fe, V769, V771, {0x876, 0x8a2}, S3, V771, 0x0, V826]

================================

Block 0x8b9
[0x8b9:0x8bc]
---
Predecessors: [0x8aa]
Successors: [0x8bd]
---
0x8b9 JUMPDEST
0x8ba DUP1
0x8bb SWAP2
0x8bc POP
---
0x8b9: JUMPDEST 
---
Entry stack: [V12, 0xdb, V183, V188, V191, S12, 0x644, V183, S9, V640, 0x7fe, V769, V771, {0x876, 0x8a2}, S3, V771, 0x0, V826]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0xdb, V183, V188, V191, S12, 0x644, V183, S9, V640, 0x7fe, V769, V771, {0x876, 0x8a2}, S3, V771, V826, V826]

================================

Block 0x8bd
[0x8bd:0x8c3]
---
Predecessors: [0x8b9]
Successors: [0x876, 0x8a2]
---
0x8bd JUMPDEST
0x8be POP
0x8bf SWAP3
0x8c0 SWAP2
0x8c1 POP
0x8c2 POP
0x8c3 JUMP
---
0x8bd: JUMPDEST 
0x8c3: JUMP {0x876, 0x8a2}
---
Entry stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640, 0x7fe, V769, V771, {0x876, 0x8a2}, S3, V771, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xdb, V183, V188, V191, V428, 0x644, V183, V428, V640, 0x7fe, V769, V771, S1]

================================

Block 0x8c4
[0x8c4:0x8fb]
---
Predecessors: []
Successors: []
---
0x8c4 STOP
0x8c5 LOG1
0x8c6 PUSH6 0x627a7a723058
0x8cd SHA3
0x8ce MISSING 0xea
0x8cf MISSING 0xc8
0x8d0 MISSING 0x27
0x8d1 MISSING 0xa5
0x8d2 MISSING 0xd0
0x8d3 CODECOPY
0x8d4 SWAP12
0x8d5 PUSH3 0x829c6
0x8d9 MISSING 0x2b
0x8da MISSING 0xfb
0x8db MISSING 0xe3
0x8dc MISSING 0xca
0x8dd MISSING 0xd5
0x8de MISSING 0x25
0x8df MISSING 0xba
0x8e0 MISSING 0xdb
0x8e1 MISSING 0x4e
0x8e2 MISSING 0xbd
0x8e3 MISSING 0xaf
0x8e4 MISSING 0xca
0x8e5 MISSING 0xbd
0x8e6 MISSING 0xe4
0x8e7 PUSH20 0x510828fe917f0029
---
0x8c4: STOP 
0x8c5: LOG S0 S1 S2
0x8c6: V830 = 0x627a7a723058
0x8cd: V831 = SHA3 0x627a7a723058 S3
0x8ce: MISSING 0xea
0x8cf: MISSING 0xc8
0x8d0: MISSING 0x27
0x8d1: MISSING 0xa5
0x8d2: MISSING 0xd0
0x8d3: CODECOPY S0 S1 S2
0x8d5: V832 = 0x829c6
0x8d9: MISSING 0x2b
0x8da: MISSING 0xfb
0x8db: MISSING 0xe3
0x8dc: MISSING 0xca
0x8dd: MISSING 0xd5
0x8de: MISSING 0x25
0x8df: MISSING 0xba
0x8e0: MISSING 0xdb
0x8e1: MISSING 0x4e
0x8e2: MISSING 0xbd
0x8e3: MISSING 0xaf
0x8e4: MISSING 0xca
0x8e5: MISSING 0xbd
0x8e6: MISSING 0xe4
0x8e7: V833 = 0x510828fe917f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V831, 0x829c6, S15, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S3, 0x510828fe917f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x5b4487
Entry block: 0x97
Exit block: 0xaa
Body: 0x97, 0x9e, 0xa2, 0xaa, 0x24b

Function 1:
Public function signature: 0x377ed13c
Entry block: 0xbc
Exit block: 0xdb
Body: 0xbc, 0xc3, 0xc7, 0xdb, 0x251, 0x268, 0x26c, 0x295, 0x296

Function 2:
Public function signature: 0x6103d70b
Entry block: 0xdd
Exit block: 0xdb
Body: 0xdb, 0xdd, 0xe4, 0xe8, 0x299, 0x2bb, 0x2bf, 0x2d3, 0x2d7, 0x2ea, 0x32d, 0x32e, 0x32f, 0x676, 0x681, 0x682, 0x687

Function 3:
Public function signature: 0x83197ef0
Entry block: 0xf2
Exit block: 0x34a
Body: 0xf2, 0xf9, 0xfd, 0x333, 0x34a, 0x34e

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x107
Exit block: 0x11a
Body: 0x107, 0x10e, 0x112, 0x11a, 0x35f

Function 5:
Public function signature: 0x9ad2fc8b
Entry block: 0x136
Exit block: 0x13d
Body: 0xaa, 0x136, 0x13d, 0x141

Function 6:
Public function signature: 0xaeabc062
Entry block: 0x184
Exit block: 0xdb
Body: 0xdb, 0x184, 0x18b, 0x18f, 0x483, 0x49a, 0x49e, 0x4c7, 0x4c8

Function 7:
Public function signature: 0xe2982c21
Entry block: 0x1a5
Exit block: 0xaa
Body: 0xaa, 0x1a5, 0x1ac, 0x1b0, 0x4cb

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x1d6
Exit block: 0xdb
Body: 0xdb, 0x1d6, 0x1dd, 0x1e1, 0x295, 0x296, 0x4dd, 0x4f4, 0x4f8, 0x508, 0x530, 0x531, 0x532

Function 9:
Public function signature: 0xf4de7548
Entry block: 0x1f7
Exit block: 0xdb
Body: 0xdb, 0x1f7, 0x535, 0x588, 0x58c, 0x599, 0x59d, 0x5ae, 0x5b2, 0x603, 0x607, 0x614, 0x618, 0x629, 0x62d, 0x638, 0x644, 0x645, 0x68d, 0x699, 0x69d, 0x6f0, 0x6f4, 0x701, 0x705, 0x73b, 0x73f, 0x794, 0x798, 0x7a5, 0x7a9, 0x7fe, 0x848, 0x84d, 0x876

Function 10:
Public function signature: 0xf5074f41
Entry block: 0x22a
Exit block: 0x662
Body: 0x22a, 0x231, 0x235, 0x64b, 0x662, 0x666

Function 11:
Public fallback function
Entry block: 0x92
Exit block: 0x92
Body: 0x92

Function 12:
Private function
Entry block: 0x8aa
Exit block: 0x8bd
Body: 0x8aa, 0x8b9, 0x8bd

Function 13:
Private function
Entry block: 0x36e
Exit block: 0x47c
Body: 0x36e, 0x3ec, 0x3fd, 0x45d, 0x46e, 0x47c

