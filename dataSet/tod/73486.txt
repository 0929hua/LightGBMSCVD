Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x77]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x13af4035
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x77
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x13af4035
0x1a: V12 = EQ V10 0x13af4035
0x1b: V13 = 0x77
0x1e: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xac]
---
0x1f DUP1
0x20 PUSH4 0x35c1d349
0x25 EQ
0x26 PUSH2 0xac
0x29 JUMPI
---
0x20: V14 = 0x35c1d349
0x25: V15 = EQ 0x35c1d349 V10
0x26: V16 = 0xac
0x29: JUMPI 0xac V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xf1]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xf1
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xf1
0x34: JUMPI 0xf1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x103]
---
0x35 DUP1
0x36 PUSH4 0x9003adfe
0x3b EQ
0x3c PUSH2 0x103
0x3f JUMPI
---
0x36: V20 = 0x9003adfe
0x3b: V21 = EQ 0x9003adfe V10
0x3c: V22 = 0x103
0x3f: JUMPI 0x103 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x10c]
---
0x40 DUP1
0x41 PUSH4 0xa60f3588
0x46 EQ
0x47 PUSH2 0x10c
0x4a JUMPI
---
0x41: V23 = 0xa60f3588
0x46: V24 = EQ 0xa60f3588 V10
0x47: V25 = 0x10c
0x4a: JUMPI 0x10c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x115]
---
0x4b DUP1
0x4c PUSH4 0xb69ef8a8
0x51 EQ
0x52 PUSH2 0x115
0x55 JUMPI
---
0x4c: V26 = 0xb69ef8a8
0x51: V27 = EQ 0xb69ef8a8 V10
0x52: V28 = 0x115
0x55: JUMPI 0x115 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x11e]
---
0x56 DUP1
0x57 PUSH4 0xc8796572
0x5c EQ
0x5d PUSH2 0x11e
0x60 JUMPI
---
0x57: V29 = 0xc8796572
0x5c: V30 = EQ 0xc8796572 V10
0x5d: V31 = 0x11e
0x60: JUMPI 0x11e V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x148]
---
0x61 DUP1
0x62 PUSH4 0xe97dcb62
0x67 EQ
0x68 PUSH2 0x148
0x6b JUMPI
---
0x62: V32 = 0xe97dcb62
0x67: V33 = EQ 0xe97dcb62 V10
0x68: V34 = 0x148
0x6b: JUMPI 0x148 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x0, 0x61]
Successors: [0x14c]
---
0x6c JUMPDEST
0x6d PUSH2 0x182
0x70 PUSH2 0x146
0x73 PUSH2 0x14c
0x76 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x182
0x70: V36 = 0x146
0x73: V37 = 0x14c
0x76: JUMP 0x14c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x182, 0x146]
Exit stack: [V10, 0x182, 0x146]

================================

Block 0x77
[0x77:0x96]
---
Predecessors: [0xb]
Successors: [0x97, 0xa9]
---
0x77 JUMPDEST
0x78 PUSH2 0x182
0x7b PUSH1 0x4
0x7d CALLDATALOAD
0x7e PUSH1 0x4
0x80 SLOAD
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 SWAP1
0x8a DUP2
0x8b AND
0x8c CALLER
0x8d SWAP2
0x8e SWAP1
0x8f SWAP2
0x90 AND
0x91 EQ
0x92 ISZERO
0x93 PUSH2 0xa9
0x96 JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x182
0x7b: V39 = 0x4
0x7d: V40 = CALLDATALOAD 0x4
0x7e: V41 = 0x4
0x80: V42 = S[0x4]
0x81: V43 = 0x1
0x83: V44 = 0xa0
0x85: V45 = 0x2
0x87: V46 = EXP 0x2 0xa0
0x88: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x8c: V49 = CALLER
0x90: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x91: V51 = EQ V50 V48
0x92: V52 = ISZERO V51
0x93: V53 = 0xa9
0x96: JUMPI 0xa9 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x182, V40]
Exit stack: [V10, 0x182, V40]

================================

Block 0x97
[0x97:0xa8]
---
Predecessors: [0x77]
Successors: [0xa9]
---
0x97 PUSH1 0x4
0x99 DUP1
0x9a SLOAD
0x9b PUSH1 0x1
0x9d PUSH1 0xa0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 SUB
0xa3 NOT
0xa4 AND
0xa5 DUP3
0xa6 OR
0xa7 SWAP1
0xa8 SSTORE
---
0x97: V54 = 0x4
0x9a: V55 = S[0x4]
0x9b: V56 = 0x1
0x9d: V57 = 0xa0
0x9f: V58 = 0x2
0xa1: V59 = EXP 0x2 0xa0
0xa2: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3: V61 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V62 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V55
0xa6: V63 = OR V40 V62
0xa8: S[0x4] = V63
---
Entry stack: [V10, 0x182, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x182, V40]

================================

Block 0xa9
[0xa9:0xab]
---
Predecessors: [0x77, 0x97]
Successors: [0x182]
---
0xa9 JUMPDEST
0xaa POP
0xab JUMP
---
0xa9: JUMPDEST 
0xab: JUMP 0x182
---
Entry stack: [V10, 0x182, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xbf]
---
Predecessors: [0x1f]
Successors: [0xc0]
---
0xac JUMPDEST
0xad PUSH2 0x184
0xb0 PUSH1 0x4
0xb2 CALLDATALOAD
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 SLOAD
0xb7 DUP3
0xb8 SWAP1
0xb9 DUP2
0xba LT
0xbb ISZERO
0xbc PUSH2 0x2
0xbf JUMPI
---
0xac: JUMPDEST 
0xad: V64 = 0x184
0xb0: V65 = 0x4
0xb2: V66 = CALLDATALOAD 0x4
0xb3: V67 = 0x0
0xb6: V68 = S[0x0]
0xba: V69 = LT V66 V68
0xbb: V70 = ISZERO V69
0xbc: V71 = 0x2
0xbf: THROWI V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x184, V66, 0x0, V66]
Exit stack: [V10, 0x184, V66, 0x0, V66]

================================

Block 0xc0
[0xc0:0xf0]
---
Predecessors: [0xac]
Successors: [0x184]
---
0xc0 POP
0xc1 DUP1
0xc2 MSTORE
0xc3 PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0xe4 ADD
0xe5 SLOAD
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee AND
0xef DUP2
0xf0 JUMP
---
0xc2: M[0x0] = 0x0
0xc3: V72 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0xe4: V73 = ADD 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563 V66
0xe5: V74 = S[V73]
0xe6: V75 = 0x1
0xe8: V76 = 0xa0
0xea: V77 = 0x2
0xec: V78 = EXP 0x2 0xa0
0xed: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xf0: JUMP 0x184
---
Entry stack: [V10, 0x184, V66, 0x0, V66]
Stack pops: 4
Stack additions: [S3, V80]
Exit stack: [V10, 0x184, V80]

================================

Block 0xf1
[0xf1:0x102]
---
Predecessors: [0x2a]
Successors: [0x184]
---
0xf1 JUMPDEST
0xf2 PUSH2 0x184
0xf5 PUSH1 0x4
0xf7 SLOAD
0xf8 PUSH1 0x1
0xfa PUSH1 0xa0
0xfc PUSH1 0x2
0xfe EXP
0xff SUB
0x100 AND
0x101 DUP2
0x102 JUMP
---
0xf1: JUMPDEST 
0xf2: V81 = 0x184
0xf5: V82 = 0x4
0xf7: V83 = S[0x4]
0xf8: V84 = 0x1
0xfa: V85 = 0xa0
0xfc: V86 = 0x2
0xfe: V87 = EXP 0x2 0xa0
0xff: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x100: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x102: JUMP 0x184
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x184, V89]
Exit stack: [V10, 0x184, V89]

================================

Block 0x103
[0x103:0x10b]
---
Predecessors: [0x35]
Successors: [0x1a1]
---
0x103 JUMPDEST
0x104 PUSH2 0x1a1
0x107 PUSH1 0x2
0x109 SLOAD
0x10a DUP2
0x10b JUMP
---
0x103: JUMPDEST 
0x104: V90 = 0x1a1
0x107: V91 = 0x2
0x109: V92 = S[0x2]
0x10b: JUMP 0x1a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a1, V92]
Exit stack: [V10, 0x1a1, V92]

================================

Block 0x10c
[0x10c:0x114]
---
Predecessors: [0x40]
Successors: [0x1a1]
---
0x10c JUMPDEST
0x10d PUSH2 0x1a1
0x110 PUSH1 0x1
0x112 SLOAD
0x113 DUP2
0x114 JUMP
---
0x10c: JUMPDEST 
0x10d: V93 = 0x1a1
0x110: V94 = 0x1
0x112: V95 = S[0x1]
0x114: JUMP 0x1a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a1, V95]
Exit stack: [V10, 0x1a1, V95]

================================

Block 0x115
[0x115:0x11d]
---
Predecessors: [0x4b]
Successors: [0x1a1]
---
0x115 JUMPDEST
0x116 PUSH2 0x1a1
0x119 PUSH1 0x3
0x11b SLOAD
0x11c DUP2
0x11d JUMP
---
0x115: JUMPDEST 
0x116: V96 = 0x1a1
0x119: V97 = 0x3
0x11b: V98 = S[0x3]
0x11d: JUMP 0x1a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a1, V98]
Exit stack: [V10, 0x1a1, V98]

================================

Block 0x11e
[0x11e:0x13a]
---
Predecessors: [0x56]
Successors: [0x13b, 0x146]
---
0x11e JUMPDEST
0x11f PUSH2 0x182
0x122 PUSH1 0x4
0x124 SLOAD
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d SWAP1
0x12e DUP2
0x12f AND
0x130 CALLER
0x131 SWAP2
0x132 SWAP1
0x133 SWAP2
0x134 AND
0x135 EQ
0x136 ISZERO
0x137 PUSH2 0x146
0x13a JUMPI
---
0x11e: JUMPDEST 
0x11f: V99 = 0x182
0x122: V100 = 0x4
0x124: V101 = S[0x4]
0x125: V102 = 0x1
0x127: V103 = 0xa0
0x129: V104 = 0x2
0x12b: V105 = EXP 0x2 0xa0
0x12c: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x130: V108 = CALLER
0x134: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x135: V110 = EQ V109 V107
0x136: V111 = ISZERO V110
0x137: V112 = 0x146
0x13a: JUMPI 0x146 V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V10, 0x182]

================================

Block 0x13b
[0x13b:0x145]
---
Predecessors: [0x11e]
Successors: [0x146, 0x30c]
---
0x13b PUSH1 0x2
0x13d SLOAD
0x13e PUSH1 0x0
0x140 EQ
0x141 ISZERO
0x142 PUSH2 0x30c
0x145 JUMPI
---
0x13b: V113 = 0x2
0x13d: V114 = S[0x2]
0x13e: V115 = 0x0
0x140: V116 = EQ 0x0 V114
0x141: V117 = ISZERO V116
0x142: V118 = 0x30c
0x145: JUMPI 0x30c V117
---
Entry stack: [V10, 0x182]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x182]

================================

Block 0x146
[0x146:0x147]
---
Predecessors: [0x11e, 0x13b, 0x17e]
Successors: [0x182]
---
0x146 JUMPDEST
0x147 JUMP
---
0x146: JUMPDEST 
0x147: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x61]
Successors: [0x14c]
---
0x148 JUMPDEST
0x149 PUSH2 0x182
---
0x148: JUMPDEST 
0x149: V119 = 0x182
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V10, 0x182]

================================

Block 0x14c
[0x14c:0x15e]
---
Predecessors: [0x6c, 0x148]
Successors: [0x15f, 0x1b3]
---
0x14c JUMPDEST
0x14d PUSH1 0x0
0x14f DUP1
0x150 PUSH8 0xde0b6b3a7640000
0x159 CALLVALUE
0x15a EQ
0x15b PUSH2 0x1b3
0x15e JUMPI
---
0x14c: JUMPDEST 
0x14d: V120 = 0x0
0x150: V121 = 0xde0b6b3a7640000
0x159: V122 = CALLVALUE
0x15a: V123 = EQ V122 0xde0b6b3a7640000
0x15b: V124 = 0x1b3
0x15e: JUMPI 0x1b3 V123
---
Entry stack: [V10, S1, {0x146, 0x182}]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, S1, {0x146, 0x182}, 0x0, 0x0]

================================

Block 0x15f
[0x15f:0x17d]
---
Predecessors: [0x14c]
Successors: [0x17e]
---
0x15f PUSH1 0x40
0x161 MLOAD
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a CALLER
0x16b AND
0x16c SWAP1
0x16d DUP3
0x16e SWAP1
0x16f CALLVALUE
0x170 SWAP1
0x171 DUP3
0x172 DUP2
0x173 DUP2
0x174 DUP2
0x175 DUP6
0x176 DUP9
0x177 DUP4
0x178 CALL
0x179 POP
0x17a POP
0x17b POP
0x17c POP
0x17d POP
---
0x15f: V125 = 0x40
0x161: V126 = M[0x40]
0x162: V127 = 0x1
0x164: V128 = 0xa0
0x166: V129 = 0x2
0x168: V130 = EXP 0x2 0xa0
0x169: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V132 = CALLER
0x16b: V133 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V134 = CALLVALUE
0x178: V135 = CALL 0x0 V133 V134 V126 0x0 V126 0x0
---
Entry stack: [V10, S3, {0x146, 0x182}, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S3, {0x146, 0x182}, 0x0, 0x0]

================================

Block 0x17e
[0x17e:0x181]
---
Predecessors: [0x15f, 0x298]
Successors: [0x146, 0x182]
---
0x17e JUMPDEST
0x17f POP
0x180 POP
0x181 JUMP
---
0x17e: JUMPDEST 
0x181: JUMP {0x146, 0x182}
---
Entry stack: [V10, S3, {0x146, 0x182}, S1, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Block 0x182
[0x182:0x183]
---
Predecessors: [0xa9, 0x146, 0x17e, 0x30c]
Successors: []
---
0x182 JUMPDEST
0x183 STOP
---
0x182: JUMPDEST 
0x183: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x184
[0x184:0x1a0]
---
Predecessors: [0xc0, 0xf1]
Successors: []
---
0x184 JUMPDEST
0x185 PUSH1 0x40
0x187 DUP1
0x188 MLOAD
0x189 PUSH1 0x1
0x18b PUSH1 0xa0
0x18d PUSH1 0x2
0x18f EXP
0x190 SUB
0x191 SWAP3
0x192 SWAP1
0x193 SWAP3
0x194 AND
0x195 DUP3
0x196 MSTORE
0x197 MLOAD
0x198 SWAP1
0x199 DUP2
0x19a SWAP1
0x19b SUB
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 RETURN
---
0x184: JUMPDEST 
0x185: V136 = 0x40
0x188: V137 = M[0x40]
0x189: V138 = 0x1
0x18b: V139 = 0xa0
0x18d: V140 = 0x2
0x18f: V141 = EXP 0x2 0xa0
0x190: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x196: M[V137] = V143
0x197: V144 = M[0x40]
0x19b: V145 = SUB V137 V144
0x19c: V146 = 0x20
0x19e: V147 = ADD 0x20 V145
0x1a0: RETURN V144 V147
---
Entry stack: [V10, 0x184, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x184]

================================

Block 0x1a1
[0x1a1:0x1b2]
---
Predecessors: [0x103, 0x10c, 0x115]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 MLOAD
0x1a6 SWAP2
0x1a7 DUP3
0x1a8 MSTORE
0x1a9 MLOAD
0x1aa SWAP1
0x1ab DUP2
0x1ac SWAP1
0x1ad SUB
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP1
0x1b2 RETURN
---
0x1a1: JUMPDEST 
0x1a2: V148 = 0x40
0x1a5: V149 = M[0x40]
0x1a8: M[V149] = S0
0x1a9: V150 = M[0x40]
0x1ad: V151 = SUB V149 V150
0x1ae: V152 = 0x20
0x1b0: V153 = ADD 0x20 V151
0x1b2: RETURN V150 V153
---
Entry stack: [V10, 0x1a1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1a1]

================================

Block 0x1b3
[0x1b3:0x1cd]
---
Predecessors: [0x14c]
Successors: [0x1ce, 0x200]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 SLOAD
0x1b8 PUSH1 0x1
0x1ba DUP2
0x1bb ADD
0x1bc DUP1
0x1bd DUP4
0x1be SSTORE
0x1bf SWAP1
0x1c0 SWAP4
0x1c1 POP
0x1c2 SWAP1
0x1c3 DUP2
0x1c4 DUP5
0x1c5 DUP1
0x1c6 ISZERO
0x1c7 DUP3
0x1c8 SWAP1
0x1c9 GT
0x1ca PUSH2 0x200
0x1cd JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V154 = 0x0
0x1b7: V155 = S[0x0]
0x1b8: V156 = 0x1
0x1bb: V157 = ADD V155 0x1
0x1be: S[0x0] = V157
0x1c6: V158 = ISZERO V155
0x1c9: V159 = GT V158 V157
0x1ca: V160 = 0x200
0x1cd: JUMPI 0x200 V159
---
Entry stack: [V10, S3, {0x146, 0x182}, 0x0, 0x0]
Stack pops: 2
Stack additions: [V155, S0, V157, 0x0, V157, V155]
Exit stack: [V10, S3, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, V155]

================================

Block 0x1ce
[0x1ce:0x1e1]
---
Predecessors: [0x1b3]
Successors: [0x1e2]
---
0x1ce DUP2
0x1cf DUP4
0x1d0 PUSH1 0x0
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 PUSH1 0x0
0x1d7 SHA3
0x1d8 SWAP2
0x1d9 DUP3
0x1da ADD
0x1db SWAP2
0x1dc ADD
0x1dd PUSH2 0x200
0x1e0 SWAP2
0x1e1 SWAP1
---
0x1d0: V161 = 0x0
0x1d2: M[0x0] = 0x0
0x1d3: V162 = 0x20
0x1d5: V163 = 0x0
0x1d7: V164 = SHA3 0x0 0x20
0x1da: V165 = ADD V164 V155
0x1dc: V166 = ADD V164 V157
0x1dd: V167 = 0x200
---
Entry stack: [V10, S7, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, V155]
Stack pops: 3
Stack additions: [S2, S1, 0x200, V165, V166]
Exit stack: [V10, S7, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, 0x200, V165, V166]

================================

Block 0x1e2
[0x1e2:0x1ea]
---
Predecessors: [0x1ce, 0x1eb]
Successors: [0x1eb, 0x28a]
---
0x1e2 JUMPDEST
0x1e3 DUP1
0x1e4 DUP3
0x1e5 GT
0x1e6 ISZERO
0x1e7 PUSH2 0x28a
0x1ea JUMPI
---
0x1e2: JUMPDEST 
0x1e5: V168 = GT V165 S0
0x1e6: V169 = ISZERO V168
0x1e7: V170 = 0x28a
0x1ea: JUMPI 0x28a V169
---
Entry stack: [V10, S9, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, 0x200, V165, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S9, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, 0x200, V165, S0]

================================

Block 0x1eb
[0x1eb:0x1ff]
---
Predecessors: [0x1e2]
Successors: [0x1e2]
---
0x1eb DUP1
0x1ec SLOAD
0x1ed PUSH1 0x1
0x1ef PUSH1 0xa0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 SUB
0x1f5 NOT
0x1f6 AND
0x1f7 DUP2
0x1f8 SSTORE
0x1f9 PUSH1 0x1
0x1fb ADD
0x1fc PUSH2 0x1e2
0x1ff JUMP
---
0x1ec: V171 = S[S0]
0x1ed: V172 = 0x1
0x1ef: V173 = 0xa0
0x1f1: V174 = 0x2
0x1f3: V175 = EXP 0x2 0xa0
0x1f4: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V177 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V178 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V171
0x1f8: S[S0] = V178
0x1f9: V179 = 0x1
0x1fb: V180 = ADD 0x1 S0
0x1fc: V181 = 0x1e2
0x1ff: JUMP 0x1e2
---
Entry stack: [V10, S9, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, 0x200, V165, S0]
Stack pops: 1
Stack additions: [V180]
Exit stack: [V10, S9, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, 0x200, V165, V180]

================================

Block 0x200
[0x200:0x214]
---
Predecessors: [0x1b3, 0x28a]
Successors: [0x215]
---
0x200 JUMPDEST
0x201 POP
0x202 POP
0x203 POP
0x204 POP
0x205 CALLER
0x206 PUSH1 0x0
0x208 PUSH1 0x0
0x20a POP
0x20b DUP4
0x20c DUP2
0x20d SLOAD
0x20e DUP2
0x20f LT
0x210 ISZERO
0x211 PUSH2 0x2
0x214 JUMPI
---
0x200: JUMPDEST 
0x205: V182 = CALLER
0x206: V183 = 0x0
0x208: V184 = 0x0
0x20d: V185 = S[0x0]
0x20f: V186 = LT V155 V185
0x210: V187 = ISZERO V186
0x211: V188 = 0x2
0x214: THROWI V187
---
Entry stack: [V10, S7, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, S0]
Stack pops: 6
Stack additions: [S5, S4, V182, 0x0, S5]
Exit stack: [V10, S7, {0x146, 0x182}, V155, 0x0, V182, 0x0, V155]

================================

Block 0x215
[0x215:0x251]
---
Predecessors: [0x200]
Successors: [0x252, 0x28e]
---
0x215 DUP2
0x216 DUP1
0x217 MSTORE
0x218 PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0x239 ADD
0x23a DUP1
0x23b SLOAD
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 NOT
0x245 AND
0x246 SWAP1
0x247 SWAP3
0x248 OR
0x249 SWAP1
0x24a SWAP2
0x24b SSTORE
0x24c DUP3
0x24d EQ
0x24e PUSH2 0x28e
0x251 JUMPI
---
0x217: M[0x0] = 0x0
0x218: V189 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0x239: V190 = ADD 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563 V155
0x23b: V191 = S[V190]
0x23c: V192 = 0x1
0x23e: V193 = 0xa0
0x240: V194 = 0x2
0x242: V195 = EXP 0x2 0xa0
0x243: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V197 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x245: V198 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V191
0x248: V199 = OR V182 V198
0x24b: S[V190] = V199
0x24d: V200 = EQ V155 0x0
0x24e: V201 = 0x28e
0x251: JUMPI 0x28e V200
---
Entry stack: [V10, S6, {0x146, 0x182}, V155, 0x0, V182, 0x0, V155]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, S6, {0x146, 0x182}, V155, 0x0]

================================

Block 0x252
[0x252:0x25c]
---
Predecessors: [0x215]
Successors: [0x25d, 0x285]
---
0x252 PUSH1 0x2
0x254 SLOAD
0x255 PUSH1 0x0
0x257 SWAP1
0x258 LT
0x259 PUSH2 0x285
0x25c JUMPI
---
0x252: V202 = 0x2
0x254: V203 = S[0x2]
0x255: V204 = 0x0
0x258: V205 = LT V203 0x0
0x259: V206 = 0x285
0x25c: JUMPI 0x285 V205
---
Entry stack: [V10, S3, {0x146, 0x182}, V155, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x146, 0x182}, V155, 0x0]

================================

Block 0x25d
[0x25d:0x284]
---
Predecessors: [0x252]
Successors: [0x285]
---
0x25d PUSH1 0x2
0x25f SLOAD
0x260 PUSH1 0x4
0x262 SLOAD
0x263 PUSH1 0x40
0x265 MLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e SWAP2
0x26f SWAP1
0x270 SWAP2
0x271 AND
0x272 SWAP2
0x273 PUSH1 0x0
0x275 SWAP2
0x276 DUP3
0x277 DUP2
0x278 DUP2
0x279 DUP2
0x27a DUP6
0x27b DUP9
0x27c DUP4
0x27d CALL
0x27e POP
0x27f POP
0x280 POP
0x281 PUSH1 0x2
0x283 SSTORE
0x284 POP
---
0x25d: V207 = 0x2
0x25f: V208 = S[0x2]
0x260: V209 = 0x4
0x262: V210 = S[0x4]
0x263: V211 = 0x40
0x265: V212 = M[0x40]
0x266: V213 = 0x1
0x268: V214 = 0xa0
0x26a: V215 = 0x2
0x26c: V216 = EXP 0x2 0xa0
0x26d: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x273: V219 = 0x0
0x27d: V220 = CALL 0x0 V218 V208 V212 0x0 V212 0x0
0x281: V221 = 0x2
0x283: S[0x2] = 0x0
---
Entry stack: [V10, S3, {0x146, 0x182}, V155, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x146, 0x182}, V155, 0x0]

================================

Block 0x285
[0x285:0x289]
---
Predecessors: [0x252, 0x25d]
Successors: [0x297]
---
0x285 JUMPDEST
0x286 PUSH2 0x297
0x289 JUMP
---
0x285: JUMPDEST 
0x286: V222 = 0x297
0x289: JUMP 0x297
---
Entry stack: [V10, S3, {0x146, 0x182}, V155, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x146, 0x182}, V155, 0x0]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x1e2]
Successors: [0x200]
---
0x28a JUMPDEST
0x28b POP
0x28c SWAP1
0x28d JUMP
---
0x28a: JUMPDEST 
0x28d: JUMP 0x200
---
Entry stack: [V10, S9, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, 0x200, V165, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S9, {0x146, 0x182}, V155, 0x0, V157, 0x0, V157, V165]

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x215]
Successors: [0x297]
---
0x28e JUMPDEST
0x28f PUSH1 0x2
0x291 DUP1
0x292 SLOAD
0x293 CALLVALUE
0x294 ADD
0x295 SWAP1
0x296 SSTORE
---
0x28e: JUMPDEST 
0x28f: V223 = 0x2
0x292: V224 = S[0x2]
0x293: V225 = CALLVALUE
0x294: V226 = ADD V225 V224
0x296: S[0x2] = V226
---
Entry stack: [V10, S3, {0x146, 0x182}, V155, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x146, 0x182}, V155, 0x0]

================================

Block 0x297
[0x297:0x297]
---
Predecessors: [0x285, 0x28e]
Successors: [0x298]
---
0x297 JUMPDEST
---
0x297: JUMPDEST 
---
Entry stack: [V10, S3, {0x146, 0x182}, V155, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x146, 0x182}, V155, 0x0]

================================

Block 0x298
[0x298:0x2a3]
---
Predecessors: [0x297, 0x2b7]
Successors: [0x17e, 0x2a4]
---
0x298 JUMPDEST
0x299 PUSH1 0x3
0x29b SLOAD
0x29c PUSH1 0x0
0x29e SWAP1
0x29f LT
0x2a0 PUSH2 0x17e
0x2a3 JUMPI
---
0x298: JUMPDEST 
0x299: V227 = 0x3
0x29b: V228 = S[0x3]
0x29c: V229 = 0x0
0x29f: V230 = LT V228 0x0
0x2a0: V231 = 0x17e
0x2a3: JUMPI 0x17e V230
---
Entry stack: [V10, S3, {0x146, 0x182}, V155, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x146, 0x182}, V155, 0x0]

================================

Block 0x2a4
[0x2a4:0x2b6]
---
Predecessors: [0x298]
Successors: [0x2b7]
---
0x2a4 POP
0x2a5 PUSH1 0x1
0x2a7 SLOAD
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab SLOAD
0x2ac SWAP1
0x2ad SWAP2
0x2ae DUP3
0x2af SWAP2
0x2b0 DUP2
0x2b1 LT
0x2b2 ISZERO
0x2b3 PUSH2 0x2
0x2b6 JUMPI
---
0x2a5: V232 = 0x1
0x2a7: V233 = S[0x1]
0x2a8: V234 = 0x0
0x2ab: V235 = S[0x0]
0x2b1: V236 = LT V233 V235
0x2b2: V237 = ISZERO V236
0x2b3: V238 = 0x2
0x2b6: THROWI V237
---
Entry stack: [V10, S3, {0x146, 0x182}, V155, 0x0]
Stack pops: 1
Stack additions: [0x0, 0x0, V233]
Exit stack: [V10, S3, {0x146, 0x182}, V155, 0x0, 0x0, V233]

================================

Block 0x2b7
[0x2b7:0x30b]
---
Predecessors: [0x2a4]
Successors: [0x298]
---
0x2b7 SWAP1
0x2b8 DUP1
0x2b9 MSTORE
0x2ba PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0x2db ADD
0x2dc DUP2
0x2dd POP
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 SWAP1
0x2e2 SLOAD
0x2e3 PUSH1 0x1
0x2e5 PUSH1 0xa0
0x2e7 PUSH1 0x2
0x2e9 EXP
0x2ea SUB
0x2eb AND
0x2ec SWAP1
0x2ed PUSH1 0x0
0x2ef SWAP1
0x2f0 DUP4
0x2f1 SWAP1
0x2f2 DUP3
0x2f3 DUP2
0x2f4 DUP2
0x2f5 DUP2
0x2f6 DUP6
0x2f7 DUP9
0x2f8 DUP4
0x2f9 CALL
0x2fa POP
0x2fb POP
0x2fc PUSH1 0x1
0x2fe DUP1
0x2ff SLOAD
0x300 DUP2
0x301 ADD
0x302 SWAP1
0x303 SSTORE
0x304 POP
0x305 PUSH2 0x298
0x308 SWAP2
0x309 POP
0x30a POP
0x30b JUMP
---
0x2b9: M[0x0] = 0x0
0x2ba: V239 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0x2db: V240 = ADD 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563 V233
0x2de: V241 = 0x40
0x2e0: V242 = M[0x40]
0x2e2: V243 = S[V240]
0x2e3: V244 = 0x1
0x2e5: V245 = 0xa0
0x2e7: V246 = 0x2
0x2e9: V247 = EXP 0x2 0xa0
0x2ea: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x2ed: V250 = 0x0
0x2f9: V251 = CALL 0x0 V249 0x0 V242 0x0 V242 0x0
0x2fc: V252 = 0x1
0x2ff: V253 = S[0x1]
0x301: V254 = ADD 0x1 V253
0x303: S[0x1] = V254
0x305: V255 = 0x298
0x30b: JUMP 0x298
---
Entry stack: [V10, S5, {0x146, 0x182}, V155, 0x0, 0x0, V233]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V10, S5, {0x146, 0x182}, V155, 0x0]

================================

Block 0x30c
[0x30c:0x336]
---
Predecessors: [0x13b]
Successors: [0x182]
---
0x30c JUMPDEST
0x30d PUSH1 0x4
0x30f SLOAD
0x310 PUSH1 0x2
0x312 SLOAD
0x313 PUSH1 0x40
0x315 MLOAD
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e SWAP3
0x31f SWAP1
0x320 SWAP3
0x321 AND
0x322 SWAP2
0x323 PUSH1 0x0
0x325 SWAP2
0x326 SWAP1
0x327 DUP3
0x328 DUP2
0x329 DUP2
0x32a DUP2
0x32b DUP6
0x32c DUP9
0x32d DUP4
0x32e CALL
0x32f POP
0x330 POP
0x331 POP
0x332 PUSH1 0x2
0x334 SSTORE
0x335 POP
0x336 JUMP
---
0x30c: JUMPDEST 
0x30d: V256 = 0x4
0x30f: V257 = S[0x4]
0x310: V258 = 0x2
0x312: V259 = S[0x2]
0x313: V260 = 0x40
0x315: V261 = M[0x40]
0x316: V262 = 0x1
0x318: V263 = 0xa0
0x31a: V264 = 0x2
0x31c: V265 = EXP 0x2 0xa0
0x31d: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x321: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x323: V268 = 0x0
0x32e: V269 = CALL 0x0 V267 V259 V261 0x0 V261 0x0
0x332: V270 = 0x2
0x334: S[0x2] = 0x0
0x336: JUMP 0x182
---
Entry stack: [V10, 0x182]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x77
Exit block: 0x182
Body: 0x77, 0x97, 0xa9, 0x182

Function 1:
Public function signature: 0x35c1d349
Entry block: 0xac
Exit block: 0x184
Body: 0xac, 0xc0, 0x184

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xf1
Exit block: 0x184
Body: 0xf1, 0x184

Function 3:
Public function signature: 0x9003adfe
Entry block: 0x103
Exit block: 0x1a1
Body: 0x103, 0x1a1

Function 4:
Public function signature: 0xa60f3588
Entry block: 0x10c
Exit block: 0x1a1
Body: 0x10c, 0x1a1

Function 5:
Public function signature: 0xb69ef8a8
Entry block: 0x115
Exit block: 0x1a1
Body: 0x115, 0x1a1

Function 6:
Public function signature: 0xc8796572
Entry block: 0x11e
Exit block: 0x182
Body: 0x11e, 0x13b, 0x146, 0x182, 0x30c

Function 7:
Public function signature: 0xe97dcb62
Entry block: 0x148
Exit block: 0x182
Body: 0x146, 0x148, 0x14c, 0x15f, 0x17e, 0x182, 0x1b3, 0x1ce, 0x1e2, 0x1eb, 0x200, 0x215, 0x252, 0x25d, 0x285, 0x28a, 0x28e, 0x297, 0x298, 0x2a4, 0x2b7

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x182
Body: 0x6c, 0x146, 0x14c, 0x15f, 0x17e, 0x182, 0x1b3, 0x1ce, 0x1e2, 0x1eb, 0x200, 0x215, 0x252, 0x25d, 0x285, 0x28a, 0x28e, 0x297, 0x298, 0x2a4, 0x2b7

