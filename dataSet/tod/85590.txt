Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x31]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x2e1a7d4d
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x31
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x2e1a7d4d
0x14: V9 = EQ V7 0x2e1a7d4d
0x15: V10 = 0x31
0x18: JUMPI 0x31 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x70]
---
0x19 DUP1
0x1a PUSH4 0x41c0e1b5
0x1f EQ
0x20 PUSH2 0x70
0x23 JUMPI
---
0x1a: V11 = 0x41c0e1b5
0x1f: V12 = EQ 0x41c0e1b5 V7
0x20: V13 = 0x70
0x23: JUMPI 0x70 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x81]
---
0x24 DUP1
0x25 PUSH4 0xb1d05422
0x2a EQ
0x2b PUSH2 0x81
0x2e JUMPI
---
0x25: V14 = 0xb1d05422
0x2a: V15 = EQ 0xb1d05422 V7
0x2b: V16 = 0x81
0x2e: JUMPI 0x81 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x30]
---
Predecessors: [0x24, 0x6d, 0x1ef]
Successors: []
---
0x2f JUMPDEST
0x30 STOP
---
0x2f: JUMPDEST 
0x30: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x31
[0x31:0x50]
---
Predecessors: [0x0]
Successors: [0x51, 0x6d]
---
0x31 JUMPDEST
0x32 PUSH2 0x2f
0x35 PUSH1 0x4
0x37 CALLDATALOAD
0x38 PUSH1 0x0
0x3a SLOAD
0x3b PUSH1 0x1
0x3d PUSH1 0xa0
0x3f PUSH1 0x2
0x41 EXP
0x42 SUB
0x43 SWAP1
0x44 DUP2
0x45 AND
0x46 CALLER
0x47 SWAP2
0x48 SWAP1
0x49 SWAP2
0x4a AND
0x4b EQ
0x4c ISZERO
0x4d PUSH2 0x6d
0x50 JUMPI
---
0x31: JUMPDEST 
0x32: V17 = 0x2f
0x35: V18 = 0x4
0x37: V19 = CALLDATALOAD 0x4
0x38: V20 = 0x0
0x3a: V21 = S[0x0]
0x3b: V22 = 0x1
0x3d: V23 = 0xa0
0x3f: V24 = 0x2
0x41: V25 = EXP 0x2 0xa0
0x42: V26 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x46: V28 = CALLER
0x4a: V29 = AND V28 0xffffffffffffffffffffffffffffffffffffffff
0x4b: V30 = EQ V29 V27
0x4c: V31 = ISZERO V30
0x4d: V32 = 0x6d
0x50: JUMPI 0x6d V31
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2f, V19]
Exit stack: [V7, 0x2f, V19]

================================

Block 0x51
[0x51:0x6c]
---
Predecessors: [0x31]
Successors: [0x6d]
---
0x51 ADDRESS
0x52 PUSH1 0x1
0x54 PUSH1 0xa0
0x56 PUSH1 0x2
0x58 EXP
0x59 SUB
0x5a AND
0x5b PUSH1 0x0
0x5d DUP3
0x5e PUSH1 0x60
0x60 DUP3
0x61 DUP2
0x62 DUP2
0x63 DUP2
0x64 DUP6
0x65 DUP9
0x66 DUP4
0x67 CALL
0x68 POP
0x69 POP
0x6a POP
0x6b POP
0x6c POP
---
0x51: V33 = ADDRESS
0x52: V34 = 0x1
0x54: V35 = 0xa0
0x56: V36 = 0x2
0x58: V37 = EXP 0x2 0xa0
0x59: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x5b: V40 = 0x0
0x5e: V41 = 0x60
0x67: V42 = CALL 0x0 V39 V19 0x60 0x0 0x60 0x0
---
Entry stack: [V7, 0x2f, V19]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x2f, V19]

================================

Block 0x6d
[0x6d:0x6f]
---
Predecessors: [0x31, 0x51]
Successors: [0x2f]
---
0x6d JUMPDEST
0x6e POP
0x6f JUMP
---
0x6d: JUMPDEST 
0x6f: JUMP 0x2f
---
Entry stack: [V7, 0x2f, V19]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x70
[0x70:0x80]
---
Predecessors: [0x19]
Successors: []
---
0x70 JUMPDEST
0x71 PUSH2 0x2f
0x74 PUSH1 0x0
0x76 SLOAD
0x77 PUSH1 0x1
0x79 PUSH1 0xa0
0x7b PUSH1 0x2
0x7d EXP
0x7e SUB
0x7f AND
0x80 SELFDESTRUCT
---
0x70: JUMPDEST 
0x71: V43 = 0x2f
0x74: V44 = 0x0
0x76: V45 = S[0x0]
0x77: V46 = 0x1
0x79: V47 = 0xa0
0x7b: V48 = 0x2
0x7d: V49 = EXP 0x2 0xa0
0x7e: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x80: SELFDESTRUCT V51
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2f]
Exit stack: [V7, 0x2f]

================================

Block 0x81
[0x81:0x17c]
---
Predecessors: [0x24]
Successors: [0x17d, 0x196]
---
0x81 JUMPDEST
0x82 PUSH1 0x20
0x84 PUSH1 0x4
0x86 DUP1
0x87 CALLDATALOAD
0x88 DUP1
0x89 DUP3
0x8a ADD
0x8b CALLDATALOAD
0x8c PUSH1 0x1f
0x8e DUP2
0x8f ADD
0x90 DUP5
0x91 SWAP1
0x92 DIV
0x93 SWAP1
0x94 SWAP4
0x95 MUL
0x96 PUSH1 0x80
0x98 SWAP1
0x99 DUP2
0x9a ADD
0x9b PUSH1 0x40
0x9d MSTORE
0x9e PUSH1 0x60
0xa0 DUP5
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH2 0x2f
0xa6 SWAP5
0xa7 PUSH1 0x24
0xa9 SWAP4
0xaa SWAP2
0xab SWAP3
0xac SWAP2
0xad DUP5
0xae ADD
0xaf SWAP2
0xb0 DUP2
0xb1 SWAP1
0xb2 DUP4
0xb3 DUP3
0xb4 DUP1
0xb5 DUP3
0xb6 DUP5
0xb7 CALLDATACOPY
0xb8 POP
0xb9 POP
0xba PUSH1 0x40
0xbc DUP1
0xbd MLOAD
0xbe PUSH1 0x20
0xc0 DUP9
0xc1 CALLDATALOAD
0xc2 DUP1
0xc3 DUP12
0xc4 ADD
0xc5 CALLDATALOAD
0xc6 PUSH1 0x1f
0xc8 DUP2
0xc9 ADD
0xca DUP4
0xcb SWAP1
0xcc DIV
0xcd DUP4
0xce MUL
0xcf DUP5
0xd0 ADD
0xd1 DUP4
0xd2 ADD
0xd3 SWAP1
0xd4 SWAP5
0xd5 MSTORE
0xd6 DUP4
0xd7 DUP4
0xd8 MSTORE
0xd9 SWAP8
0xda SWAP10
0xdb SWAP9
0xdc PUSH1 0x44
0xde SWAP9
0xdf SWAP3
0xe0 SWAP8
0xe1 POP
0xe2 SWAP2
0xe3 SWAP1
0xe4 SWAP2
0xe5 ADD
0xe6 SWAP5
0xe7 POP
0xe8 SWAP1
0xe9 SWAP3
0xea POP
0xeb DUP3
0xec SWAP2
0xed POP
0xee DUP5
0xef ADD
0xf0 DUP4
0xf1 DUP3
0xf2 DUP1
0xf3 DUP3
0xf4 DUP5
0xf5 CALLDATACOPY
0xf6 POP
0xf7 SWAP5
0xf8 SWAP7
0xf9 POP
0xfa POP
0xfb POP
0xfc POP
0xfd POP
0xfe POP
0xff POP
0x100 PUSH32 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486
0x121 CALLER
0x122 DUP4
0x123 DUP4
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 DUP5
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 AND
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x20
0x136 ADD
0x137 DUP1
0x138 PUSH1 0x20
0x13a ADD
0x13b DUP1
0x13c PUSH1 0x20
0x13e ADD
0x13f DUP4
0x140 DUP2
0x141 SUB
0x142 DUP4
0x143 MSTORE
0x144 DUP6
0x145 DUP2
0x146 DUP2
0x147 MLOAD
0x148 DUP2
0x149 MSTORE
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP2
0x14e POP
0x14f DUP1
0x150 MLOAD
0x151 SWAP1
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP1
0x156 DUP1
0x157 DUP4
0x158 DUP4
0x159 DUP3
0x15a SWAP1
0x15b PUSH1 0x0
0x15d PUSH1 0x4
0x15f PUSH1 0x20
0x161 DUP5
0x162 PUSH1 0x1f
0x164 ADD
0x165 DIV
0x166 PUSH1 0xf
0x168 MUL
0x169 PUSH1 0x3
0x16b ADD
0x16c CALL
0x16d POP
0x16e SWAP1
0x16f POP
0x170 SWAP1
0x171 DUP2
0x172 ADD
0x173 SWAP1
0x174 PUSH1 0x1f
0x176 AND
0x177 DUP1
0x178 ISZERO
0x179 PUSH2 0x196
0x17c JUMPI
---
0x81: JUMPDEST 
0x82: V52 = 0x20
0x84: V53 = 0x4
0x87: V54 = CALLDATALOAD 0x4
0x8a: V55 = ADD 0x4 V54
0x8b: V56 = CALLDATALOAD V55
0x8c: V57 = 0x1f
0x8f: V58 = ADD V56 0x1f
0x92: V59 = DIV V58 0x20
0x95: V60 = MUL 0x20 V59
0x96: V61 = 0x80
0x9a: V62 = ADD 0x80 V60
0x9b: V63 = 0x40
0x9d: M[0x40] = V62
0x9e: V64 = 0x60
0xa2: M[0x60] = V56
0xa3: V65 = 0x2f
0xa7: V66 = 0x24
0xae: V67 = ADD 0x24 V54
0xb7: CALLDATACOPY 0x80 V67 V56
0xba: V68 = 0x40
0xbd: V69 = M[0x40]
0xbe: V70 = 0x20
0xc1: V71 = CALLDATALOAD 0x24
0xc4: V72 = ADD 0x4 V71
0xc5: V73 = CALLDATALOAD V72
0xc6: V74 = 0x1f
0xc9: V75 = ADD V73 0x1f
0xcc: V76 = DIV V75 0x20
0xce: V77 = MUL 0x20 V76
0xd0: V78 = ADD V69 V77
0xd2: V79 = ADD 0x20 V78
0xd5: M[0x40] = V79
0xd8: M[V69] = V73
0xdc: V80 = 0x44
0xe5: V81 = ADD 0x24 V71
0xef: V82 = ADD V69 0x20
0xf5: CALLDATACOPY V82 V81 V73
0x100: V83 = 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486
0x121: V84 = CALLER
0x124: V85 = 0x40
0x126: V86 = M[0x40]
0x129: V87 = 0x1
0x12b: V88 = 0xa0
0x12d: V89 = 0x2
0x12f: V90 = EXP 0x2 0xa0
0x130: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x133: M[V86] = V92
0x134: V93 = 0x20
0x136: V94 = ADD 0x20 V86
0x138: V95 = 0x20
0x13a: V96 = ADD 0x20 V94
0x13c: V97 = 0x20
0x13e: V98 = ADD 0x20 V96
0x141: V99 = SUB V98 V86
0x143: M[V94] = V99
0x147: V100 = M[0x60]
0x149: M[V98] = V100
0x14a: V101 = 0x20
0x14c: V102 = ADD 0x20 V98
0x150: V103 = M[0x60]
0x152: V104 = 0x20
0x154: V105 = ADD 0x20 0x60
0x15b: V106 = 0x0
0x15d: V107 = 0x4
0x15f: V108 = 0x20
0x162: V109 = 0x1f
0x164: V110 = ADD 0x1f V103
0x165: V111 = DIV V110 0x20
0x166: V112 = 0xf
0x168: V113 = MUL 0xf V111
0x169: V114 = 0x3
0x16b: V115 = ADD 0x3 V113
0x16c: V116 = CALL V115 0x4 0x0 0x80 V103 V102 V103
0x172: V117 = ADD V103 V102
0x174: V118 = 0x1f
0x176: V119 = AND 0x1f V103
0x178: V120 = ISZERO V119
0x179: V121 = 0x196
0x17c: JUMPI 0x196 V120
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, V117, V119]
Exit stack: [V7, 0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, V117, V119]

================================

Block 0x17d
[0x17d:0x195]
---
Predecessors: [0x81]
Successors: [0x196]
---
0x17d DUP1
0x17e DUP3
0x17f SUB
0x180 DUP1
0x181 MLOAD
0x182 PUSH1 0x1
0x184 DUP4
0x185 PUSH1 0x20
0x187 SUB
0x188 PUSH2 0x100
0x18b EXP
0x18c SUB
0x18d NOT
0x18e AND
0x18f DUP2
0x190 MSTORE
0x191 PUSH1 0x20
0x193 ADD
0x194 SWAP2
0x195 POP
---
0x17f: V122 = SUB V117 V119
0x181: V123 = M[V122]
0x182: V124 = 0x1
0x185: V125 = 0x20
0x187: V126 = SUB 0x20 V119
0x188: V127 = 0x100
0x18b: V128 = EXP 0x100 V126
0x18c: V129 = SUB V128 0x1
0x18d: V130 = NOT V129
0x18e: V131 = AND V130 V123
0x190: M[V122] = V131
0x191: V132 = 0x20
0x193: V133 = ADD 0x20 V122
---
Entry stack: [V7, 0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, V117, V119]
Stack pops: 2
Stack additions: [V133, S0]
Exit stack: [V7, 0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, V133, V119]

================================

Block 0x196
[0x196:0x1d5]
---
Predecessors: [0x81, 0x17d]
Successors: [0x1d6, 0x1ef]
---
0x196 JUMPDEST
0x197 POP
0x198 DUP4
0x199 DUP2
0x19a SUB
0x19b DUP3
0x19c MSTORE
0x19d DUP5
0x19e DUP2
0x19f DUP2
0x1a0 MLOAD
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 SWAP2
0x1a7 POP
0x1a8 DUP1
0x1a9 MLOAD
0x1aa SWAP1
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae SWAP1
0x1af DUP1
0x1b0 DUP4
0x1b1 DUP4
0x1b2 DUP3
0x1b3 SWAP1
0x1b4 PUSH1 0x0
0x1b6 PUSH1 0x4
0x1b8 PUSH1 0x20
0x1ba DUP5
0x1bb PUSH1 0x1f
0x1bd ADD
0x1be DIV
0x1bf PUSH1 0xf
0x1c1 MUL
0x1c2 PUSH1 0x3
0x1c4 ADD
0x1c5 CALL
0x1c6 POP
0x1c7 SWAP1
0x1c8 POP
0x1c9 SWAP1
0x1ca DUP2
0x1cb ADD
0x1cc SWAP1
0x1cd PUSH1 0x1f
0x1cf AND
0x1d0 DUP1
0x1d1 ISZERO
0x1d2 PUSH2 0x1ef
0x1d5 JUMPI
---
0x196: JUMPDEST 
0x19a: V134 = SUB S1 V86
0x19c: M[V96] = V134
0x1a0: V135 = M[V69]
0x1a2: M[S1] = V135
0x1a3: V136 = 0x20
0x1a5: V137 = ADD 0x20 S1
0x1a9: V138 = M[V69]
0x1ab: V139 = 0x20
0x1ad: V140 = ADD 0x20 V69
0x1b4: V141 = 0x0
0x1b6: V142 = 0x4
0x1b8: V143 = 0x20
0x1bb: V144 = 0x1f
0x1bd: V145 = ADD 0x1f V138
0x1be: V146 = DIV V145 0x20
0x1bf: V147 = 0xf
0x1c1: V148 = MUL 0xf V146
0x1c2: V149 = 0x3
0x1c4: V150 = ADD 0x3 V148
0x1c5: V151 = CALL V150 0x4 0x0 V140 V138 V137 V138
0x1cb: V152 = ADD V138 V137
0x1cd: V153 = 0x1f
0x1cf: V154 = AND 0x1f V138
0x1d1: V155 = ISZERO V154
0x1d2: V156 = 0x1ef
0x1d5: JUMPI 0x1ef V155
---
Entry stack: [V7, 0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, S1, V119]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V152, V154]
Exit stack: [V7, 0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, V152, V154]

================================

Block 0x1d6
[0x1d6:0x1ee]
---
Predecessors: [0x196]
Successors: [0x1ef]
---
0x1d6 DUP1
0x1d7 DUP3
0x1d8 SUB
0x1d9 DUP1
0x1da MLOAD
0x1db PUSH1 0x1
0x1dd DUP4
0x1de PUSH1 0x20
0x1e0 SUB
0x1e1 PUSH2 0x100
0x1e4 EXP
0x1e5 SUB
0x1e6 NOT
0x1e7 AND
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed SWAP2
0x1ee POP
---
0x1d8: V157 = SUB V152 V154
0x1da: V158 = M[V157]
0x1db: V159 = 0x1
0x1de: V160 = 0x20
0x1e0: V161 = SUB 0x20 V154
0x1e1: V162 = 0x100
0x1e4: V163 = EXP 0x100 V161
0x1e5: V164 = SUB V163 0x1
0x1e6: V165 = NOT V164
0x1e7: V166 = AND V165 V158
0x1e9: M[V157] = V166
0x1ea: V167 = 0x20
0x1ec: V168 = ADD 0x20 V157
---
Entry stack: [V7, 0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, V152, V154]
Stack pops: 2
Stack additions: [V168, S0]
Exit stack: [V7, 0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, V168, V154]

================================

Block 0x1ef
[0x1ef:0x202]
---
Predecessors: [0x196, 0x1d6]
Successors: [0x2f]
---
0x1ef JUMPDEST
0x1f0 POP
0x1f1 SWAP6
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc SWAP2
0x1fd SUB
0x1fe SWAP1
0x1ff LOG1
0x200 POP
0x201 POP
0x202 JUMP
---
0x1ef: JUMPDEST 
0x1f8: V169 = 0x40
0x1fa: V170 = M[0x40]
0x1fd: V171 = SUB S1 V170
0x1ff: LOG V170 V171 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486
0x202: JUMP 0x2f
---
Entry stack: [V7, 0x2f, 0x60, V69, 0xaa3d8946e6f98e9174ce746f041baa906398f5ec5cd8f4722f359db714035486, V84, 0x60, V69, V86, V94, V96, S1, V154]
Stack pops: 12
Stack additions: []
Exit stack: [V7]

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x31
Exit block: 0x2f
Body: 0x2f, 0x31, 0x51, 0x6d

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x70
Exit block: 0x70
Body: 0x70

Function 2:
Public function signature: 0xb1d05422
Entry block: 0x81
Exit block: 0x2f
Body: 0x2f, 0x81, 0x17d, 0x196, 0x1d6, 0x1ef

Function 3:
Public fallback function
Entry block: 0x2f
Exit block: 0x2f
Body: 0x2f

