Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x53
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x53
0xa: JUMPI 0x53 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xc9]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x41c0e1b5
0x34 EQ
0x35 PUSH2 0xc9
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x41c0e1b5
0x34: V10 = EQ 0x41c0e1b5 V8
0x35: V11 = 0xc9
0x38: JUMPI 0xc9 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xd8]
---
0x39 DUP1
0x3a PUSH4 0x933a9ce8
0x3f EQ
0x40 PUSH2 0xd8
0x43 JUMPI
---
0x3a: V12 = 0x933a9ce8
0x3f: V13 = EQ 0x933a9ce8 V8
0x40: V14 = 0xd8
0x43: JUMPI 0xd8 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x111]
---
0x44 DUP1
0x45 PUSH4 0x9e955149
0x4a EQ
0x4b PUSH2 0x111
0x4e JUMPI
---
0x45: V15 = 0x9e955149
0x4a: V16 = EQ 0x9e955149 V8
0x4b: V17 = 0x111
0x4e: JUMPI 0x111 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x52]
---
Predecessors: [0x44]
Successors: [0x53]
---
0x4f PUSH2 0x53
0x52 JUMP
---
0x4f: V18 = 0x53
0x52: JUMP 0x53
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x0, 0x4f]
Successors: [0x57]
---
0x53 JUMPDEST
0x54 PUSH2 0xc7
---
0x53: JUMPDEST 
0x54: V19 = 0xc7
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V8, 0xc7]

================================

Block 0x57
[0x57:0x60]
---
Predecessors: [0x53]
Successors: [0x61, 0x65]
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a CALLVALUE
0x5b EQ
0x5c ISZERO
0x5d PUSH2 0x65
0x60 JUMPI
---
0x57: JUMPDEST 
0x58: V20 = 0x0
0x5a: V21 = CALLVALUE
0x5b: V22 = EQ V21 0x0
0x5c: V23 = ISZERO V22
0x5d: V24 = 0x65
0x60: JUMPI 0x65 V23
---
Entry stack: [V8, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc7]

================================

Block 0x61
[0x61:0x64]
---
Predecessors: [0x57]
Successors: []
---
0x61 PUSH2 0x2
0x64 JUMP
---
0x61: V25 = 0x2
0x64: THROW 
---
Entry stack: [V8, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc7]

================================

Block 0x65
[0x65:0xbf]
---
Predecessors: [0x57]
Successors: [0xc0, 0xc4]
---
0x65 JUMPDEST
0x66 PUSH1 0x1
0x68 PUSH1 0x0
0x6a SWAP1
0x6b SLOAD
0x6c SWAP1
0x6d PUSH2 0x100
0x70 EXP
0x71 SWAP1
0x72 DIV
0x73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88 AND
0x89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e AND
0x9f PUSH1 0x0
0xa1 CALLVALUE
0xa2 PUSH1 0x40
0xa4 MLOAD
0xa5 DUP1
0xa6 SWAP1
0xa7 POP
0xa8 PUSH1 0x0
0xaa PUSH1 0x40
0xac MLOAD
0xad DUP1
0xae DUP4
0xaf SUB
0xb0 DUP2
0xb1 DUP6
0xb2 DUP9
0xb3 DUP9
0xb4 CALL
0xb5 SWAP4
0xb6 POP
0xb7 POP
0xb8 POP
0xb9 POP
0xba ISZERO
0xbb ISZERO
0xbc PUSH2 0xc4
0xbf JUMPI
---
0x65: JUMPDEST 
0x66: V26 = 0x1
0x68: V27 = 0x0
0x6b: V28 = S[0x1]
0x6d: V29 = 0x100
0x70: V30 = EXP 0x100 0x0
0x72: V31 = DIV V28 0x1
0x73: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x88: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x89: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x9f: V36 = 0x0
0xa1: V37 = CALLVALUE
0xa2: V38 = 0x40
0xa4: V39 = M[0x40]
0xa8: V40 = 0x0
0xaa: V41 = 0x40
0xac: V42 = M[0x40]
0xaf: V43 = SUB V39 V42
0xb4: V44 = CALL 0x0 V35 V37 V42 V43 V42 0x0
0xba: V45 = ISZERO V44
0xbb: V46 = ISZERO V45
0xbc: V47 = 0xc4
0xbf: JUMPI 0xc4 V46
---
Entry stack: [V8, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc7]

================================

Block 0xc0
[0xc0:0xc3]
---
Predecessors: [0x65]
Successors: []
---
0xc0 PUSH2 0x2
0xc3 JUMP
---
0xc0: V48 = 0x2
0xc3: THROW 
---
Entry stack: [V8, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc7]

================================

Block 0xc4
[0xc4:0xc4]
---
Predecessors: [0x65]
Successors: [0xc5]
---
0xc4 JUMPDEST
---
0xc4: JUMPDEST 
---
Entry stack: [V8, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc7]

================================

Block 0xc5
[0xc5:0xc6]
---
Predecessors: [0xc4]
Successors: [0xc7]
---
0xc5 JUMPDEST
0xc6 JUMP
---
0xc5: JUMPDEST 
0xc6: JUMP 0xc7
---
Entry stack: [V8, 0xc7]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: [0xc5]
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xc9
[0xc9:0xd5]
---
Predecessors: [0xb]
Successors: [0x23f]
---
0xc9 JUMPDEST
0xca PUSH2 0xd6
0xcd PUSH1 0x4
0xcf DUP1
0xd0 POP
0xd1 POP
0xd2 PUSH2 0x23f
0xd5 JUMP
---
0xc9: JUMPDEST 
0xca: V49 = 0xd6
0xcd: V50 = 0x4
0xd2: V51 = 0x23f
0xd5: JUMP 0x23f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xd6]
Exit stack: [V8, 0xd6]

================================

Block 0xd6
[0xd6:0xd7]
---
Predecessors: []
Successors: []
---
0xd6 JUMPDEST
0xd7 STOP
---
0xd6: JUMPDEST 
0xd7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd8
[0xd8:0xe4]
---
Predecessors: [0x39]
Successors: [0x1b4]
---
0xd8 JUMPDEST
0xd9 PUSH2 0xe5
0xdc PUSH1 0x4
0xde DUP1
0xdf POP
0xe0 POP
0xe1 PUSH2 0x1b4
0xe4 JUMP
---
0xd8: JUMPDEST 
0xd9: V52 = 0xe5
0xdc: V53 = 0x4
0xe1: V54 = 0x1b4
0xe4: JUMP 0x1b4
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V8, 0xe5]

================================

Block 0xe5
[0xe5:0x110]
---
Predecessors: [0x23c]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP3
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 DUP2
0x102 MSTORE
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP2
0x107 POP
0x108 POP
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d SWAP2
0x10e SUB
0x10f SWAP1
0x110 RETURN
---
0xe5: JUMPDEST 
0xe6: V55 = 0x40
0xe8: V56 = M[0x40]
0xeb: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x102: M[V56] = V58
0x103: V59 = 0x20
0x105: V60 = ADD 0x20 V56
0x109: V61 = 0x40
0x10b: V62 = M[0x40]
0x10e: V63 = SUB V60 V62
0x110: RETURN V62 V63
---
Entry stack: [V8, V125]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x111
[0x111:0x126]
---
Predecessors: [0x44]
Successors: [0x129]
---
0x111 JUMPDEST
0x112 PUSH2 0x127
0x115 PUSH1 0x4
0x117 DUP1
0x118 DUP1
0x119 CALLDATALOAD
0x11a SWAP1
0x11b PUSH1 0x20
0x11d ADD
0x11e SWAP1
0x11f SWAP2
0x120 SWAP1
0x121 POP
0x122 POP
0x123 PUSH2 0x129
0x126 JUMP
---
0x111: JUMPDEST 
0x112: V64 = 0x127
0x115: V65 = 0x4
0x119: V66 = CALLDATALOAD 0x4
0x11b: V67 = 0x20
0x11d: V68 = ADD 0x20 0x4
0x123: V69 = 0x129
0x126: JUMP 0x129
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x127, V66]
Exit stack: [V8, 0x127, V66]

================================

Block 0x127
[0x127:0x128]
---
Predecessors: [0x1b1]
Successors: []
---
0x127 JUMPDEST
0x128 STOP
---
0x127: JUMPDEST 
0x128: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x129
[0x129:0x180]
---
Predecessors: [0x111]
Successors: [0x181, 0x185]
---
0x129 JUMPDEST
0x12a PUSH1 0x0
0x12c PUSH1 0x0
0x12e SWAP1
0x12f SLOAD
0x130 SWAP1
0x131 PUSH2 0x100
0x134 EXP
0x135 SWAP1
0x136 DIV
0x137 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14c AND
0x14d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x162 AND
0x163 CALLER
0x164 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x179 AND
0x17a EQ
0x17b ISZERO
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x129: JUMPDEST 
0x12a: V70 = 0x0
0x12c: V71 = 0x0
0x12f: V72 = S[0x0]
0x131: V73 = 0x100
0x134: V74 = EXP 0x100 0x0
0x136: V75 = DIV V72 0x1
0x137: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x14d: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x162: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x163: V80 = CALLER
0x164: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x179: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x17a: V83 = EQ V82 V79
0x17b: V84 = ISZERO V83
0x17c: V85 = ISZERO V84
0x17d: V86 = 0x185
0x180: JUMPI 0x185 V85
---
Entry stack: [V8, 0x127, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x127, V66]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x129]
Successors: []
---
0x181 PUSH2 0x2
0x184 JUMP
---
0x181: V87 = 0x2
0x184: THROW 
---
Entry stack: [V8, 0x127, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x127, V66]

================================

Block 0x185
[0x185:0x1b0]
---
Predecessors: [0x129]
Successors: [0x1b1]
---
0x185 JUMPDEST
0x186 DUP1
0x187 PUSH1 0x1
0x189 PUSH1 0x0
0x18b PUSH2 0x100
0x18e EXP
0x18f DUP2
0x190 SLOAD
0x191 DUP2
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 MUL
0x1a8 NOT
0x1a9 AND
0x1aa SWAP1
0x1ab DUP4
0x1ac MUL
0x1ad OR
0x1ae SWAP1
0x1af SSTORE
0x1b0 POP
---
0x185: JUMPDEST 
0x187: V88 = 0x1
0x189: V89 = 0x0
0x18b: V90 = 0x100
0x18e: V91 = EXP 0x100 0x0
0x190: V92 = S[0x1]
0x192: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V94 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1a8: V95 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V96 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V92
0x1ac: V97 = MUL V66 0x1
0x1ad: V98 = OR V97 V96
0x1af: S[0x1] = V98
---
Entry stack: [V8, 0x127, V66]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x127, V66]

================================

Block 0x1b1
[0x1b1:0x1b3]
---
Predecessors: [0x185]
Successors: [0x127]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 JUMP
---
0x1b1: JUMPDEST 
0x1b3: JUMP 0x127
---
Entry stack: [V8, 0x127, V66]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x1b4
[0x1b4:0x20d]
---
Predecessors: [0xd8]
Successors: [0x20e, 0x212]
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x0
0x1b7 PUSH1 0x0
0x1b9 PUSH1 0x0
0x1bb SWAP1
0x1bc SLOAD
0x1bd SWAP1
0x1be PUSH2 0x100
0x1c1 EXP
0x1c2 SWAP1
0x1c3 DIV
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ef AND
0x1f0 CALLER
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 EQ
0x208 ISZERO
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V99 = 0x0
0x1b7: V100 = 0x0
0x1b9: V101 = 0x0
0x1bc: V102 = S[0x0]
0x1be: V103 = 0x100
0x1c1: V104 = EXP 0x100 0x0
0x1c3: V105 = DIV V102 0x1
0x1c4: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1da: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1f0: V110 = CALLER
0x1f1: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x207: V113 = EQ V112 V109
0x208: V114 = ISZERO V113
0x209: V115 = ISZERO V114
0x20a: V116 = 0x212
0x20d: JUMPI 0x212 V115
---
Entry stack: [V8, 0xe5]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V8, 0xe5, 0x0]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x1b4]
Successors: []
---
0x20e PUSH2 0x2
0x211 JUMP
---
0x20e: V117 = 0x2
0x211: THROW 
---
Entry stack: [V8, 0xe5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe5, 0x0]

================================

Block 0x212
[0x212:0x23b]
---
Predecessors: [0x1b4]
Successors: [0x23c]
---
0x212 JUMPDEST
0x213 PUSH1 0x1
0x215 PUSH1 0x0
0x217 SWAP1
0x218 SLOAD
0x219 SWAP1
0x21a PUSH2 0x100
0x21d EXP
0x21e SWAP1
0x21f DIV
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 SWAP1
0x237 POP
0x238 PUSH2 0x23c
0x23b JUMP
---
0x212: JUMPDEST 
0x213: V118 = 0x1
0x215: V119 = 0x0
0x218: V120 = S[0x1]
0x21a: V121 = 0x100
0x21d: V122 = EXP 0x100 0x0
0x21f: V123 = DIV V120 0x1
0x220: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x238: V126 = 0x23c
0x23b: JUMP 0x23c
---
Entry stack: [V8, 0xe5, 0x0]
Stack pops: 1
Stack additions: [V125]
Exit stack: [V8, 0xe5, V125]

================================

Block 0x23c
[0x23c:0x23e]
---
Predecessors: [0x212]
Successors: [0xe5]
---
0x23c JUMPDEST
0x23d SWAP1
0x23e JUMP
---
0x23c: JUMPDEST 
0x23e: JUMP 0xe5
---
Entry stack: [V8, 0xe5, V125]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V125]

================================

Block 0x23f
[0x23f:0x296]
---
Predecessors: [0xc9]
Successors: [0x297, 0x29b]
---
0x23f JUMPDEST
0x240 PUSH1 0x0
0x242 PUSH1 0x0
0x244 SWAP1
0x245 SLOAD
0x246 SWAP1
0x247 PUSH2 0x100
0x24a EXP
0x24b SWAP1
0x24c DIV
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 AND
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 CALLER
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 EQ
0x291 ISZERO
0x292 ISZERO
0x293 PUSH2 0x29b
0x296 JUMPI
---
0x23f: JUMPDEST 
0x240: V127 = 0x0
0x242: V128 = 0x0
0x245: V129 = S[0x0]
0x247: V130 = 0x100
0x24a: V131 = EXP 0x100 0x0
0x24c: V132 = DIV V129 0x1
0x24d: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x263: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x279: V137 = CALLER
0x27a: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x290: V140 = EQ V139 V136
0x291: V141 = ISZERO V140
0x292: V142 = ISZERO V141
0x293: V143 = 0x29b
0x296: JUMPI 0x29b V142
---
Entry stack: [V8, 0xd6]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd6]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x23f]
Successors: []
---
0x297 PUSH2 0x2
0x29a JUMP
---
0x297: V144 = 0x2
0x29a: THROW 
---
Entry stack: [V8, 0xd6]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd6]

================================

Block 0x29b
[0x29b:0x2d5]
---
Predecessors: [0x23f]
Successors: []
---
0x29b JUMPDEST
0x29c PUSH1 0x0
0x29e PUSH1 0x0
0x2a0 SWAP1
0x2a1 SLOAD
0x2a2 SWAP1
0x2a3 PUSH2 0x100
0x2a6 EXP
0x2a7 SWAP1
0x2a8 DIV
0x2a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2be AND
0x2bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d4 AND
0x2d5 SELFDESTRUCT
---
0x29b: JUMPDEST 
0x29c: V145 = 0x0
0x29e: V146 = 0x0
0x2a1: V147 = S[0x0]
0x2a3: V148 = 0x100
0x2a6: V149 = EXP 0x100 0x0
0x2a8: V150 = DIV V147 0x1
0x2a9: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2bf: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2d5: SELFDESTRUCT V154
---
Entry stack: [V8, 0xd6]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd6]

================================

Block 0x2d6
[0x2d6:0x2d7]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x2d6 JUMPDEST
0x2d7 JUMP
---
0x2d6: JUMPDEST 
0x2d7: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0xc9
Exit block: 0x297
Body: 0xc9, 0x23f, 0x297, 0x29b

Function 1:
Public function signature: 0x933a9ce8
Entry block: 0xd8
Exit block: 0xe5
Body: 0xd8, 0xe5, 0x1b4, 0x20e, 0x212, 0x23c

Function 2:
Public function signature: 0x9e955149
Entry block: 0x111
Exit block: 0x127
Body: 0x111, 0x127, 0x129, 0x181, 0x185, 0x1b1

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0xc7
Body: 0x4f, 0x53, 0x57, 0x61, 0x65, 0xc0, 0xc4, 0xc5, 0xc7

