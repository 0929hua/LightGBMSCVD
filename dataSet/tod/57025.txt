Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x41c0e1b5
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x41c0e1b5
0x3c: V13 = EQ 0x41c0e1b5 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7c]
---
0x41 DUP1
0x42 PUSH4 0x86d1a69f
0x47 EQ
0x48 PUSH2 0x7c
0x4b JUMPI
---
0x42: V15 = 0x86d1a69f
0x47: V16 = EQ 0x86d1a69f V11
0x48: V17 = 0x7c
0x4b: JUMPI 0x7c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x91]
---
0x4c DUP1
0x4d PUSH4 0xcfae3217
0x52 EQ
0x53 PUSH2 0x91
0x56 JUMPI
---
0x4d: V18 = 0xcfae3217
0x52: V19 = EQ 0xcfae3217 V11
0x53: V20 = 0x91
0x56: JUMPI 0x91 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x11f]
---
0x57 DUP1
0x58 PUSH4 0xea8a1af0
0x5d EQ
0x5e PUSH2 0x11f
0x61 JUMPI
---
0x58: V21 = 0xea8a1af0
0x5d: V22 = EQ 0xea8a1af0 V11
0x5e: V23 = 0x11f
0x61: JUMPI 0x11f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x67]
Successors: [0x134]
---
0x72 JUMPDEST
0x73 PUSH2 0x7a
0x76 PUSH2 0x134
0x79 JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0x7a
0x76: V30 = 0x134
0x79: JUMP 0x134
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x1c3]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x82]
---
Predecessors: [0x41]
Successors: [0x83, 0x87]
---
0x7c JUMPDEST
0x7d CALLVALUE
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x7c: JUMPDEST 
0x7d: V31 = CALLVALUE
0x7e: V32 = ISZERO V31
0x7f: V33 = 0x87
0x82: JUMPI 0x87 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x7c]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V34 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x7c]
Successors: [0x1c5]
---
0x87 JUMPDEST
0x88 PUSH2 0x8f
0x8b PUSH2 0x1c5
0x8e JUMP
---
0x87: JUMPDEST 
0x88: V35 = 0x8f
0x8b: V36 = 0x1c5
0x8e: JUMP 0x1c5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: []
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x91
[0x91:0x97]
---
Predecessors: [0x4c]
Successors: [0x98, 0x9c]
---
0x91 JUMPDEST
0x92 CALLVALUE
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x91: JUMPDEST 
0x92: V37 = CALLVALUE
0x93: V38 = ISZERO V37
0x94: V39 = 0x9c
0x97: JUMPI 0x9c V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x91]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V40 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x91]
Successors: [0x25b]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x25b
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V41 = 0xa4
0xa0: V42 = 0x25b
0xa3: JUMP 0x25b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V11, 0xa4]

================================

Block 0xa4
[0xa4:0xc8]
---
Predecessors: [0x2f9]
Successors: [0xc9]
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 DUP1
0xaa PUSH1 0x20
0xac ADD
0xad DUP3
0xae DUP2
0xaf SUB
0xb0 DUP3
0xb1 MSTORE
0xb2 DUP4
0xb3 DUP2
0xb4 DUP2
0xb5 MLOAD
0xb6 DUP2
0xb7 MSTORE
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP2
0xbc POP
0xbd DUP1
0xbe MLOAD
0xbf SWAP1
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 SWAP1
0xc4 DUP1
0xc5 DUP4
0xc6 DUP4
0xc7 PUSH1 0x0
---
0xa4: JUMPDEST 
0xa5: V43 = 0x40
0xa7: V44 = M[0x40]
0xaa: V45 = 0x20
0xac: V46 = ADD 0x20 V44
0xaf: V47 = SUB V46 V44
0xb1: M[V44] = V47
0xb5: V48 = M[V163]
0xb7: M[V46] = V48
0xb8: V49 = 0x20
0xba: V50 = ADD 0x20 V46
0xbe: V51 = M[V163]
0xc0: V52 = 0x20
0xc2: V53 = ADD 0x20 V163
0xc7: V54 = 0x0
---
Entry stack: [V11, V163]
Stack pops: 1
Stack additions: [S0, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]
Exit stack: [V11, V163, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]

================================

Block 0xc9
[0xc9:0xd1]
---
Predecessors: [0xa4, 0xd2]
Successors: [0xd2, 0xe4]
---
0xc9 JUMPDEST
0xca DUP4
0xcb DUP2
0xcc LT
0xcd ISZERO
0xce PUSH2 0xe4
0xd1 JUMPI
---
0xc9: JUMPDEST 
0xcc: V55 = LT S0 V51
0xcd: V56 = ISZERO V55
0xce: V57 = 0xe4
0xd1: JUMPI 0xe4 V56
---
Entry stack: [V11, V163, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V163, V44, V44, V50, V53, V51, V51, V50, V53, S0]

================================

Block 0xd2
[0xd2:0xe3]
---
Predecessors: [0xc9]
Successors: [0xc9]
---
0xd2 DUP1
0xd3 DUP3
0xd4 ADD
0xd5 MLOAD
0xd6 DUP2
0xd7 DUP5
0xd8 ADD
0xd9 MSTORE
0xda PUSH1 0x20
0xdc DUP2
0xdd ADD
0xde SWAP1
0xdf POP
0xe0 PUSH2 0xc9
0xe3 JUMP
---
0xd4: V58 = ADD V53 S0
0xd5: V59 = M[V58]
0xd8: V60 = ADD V50 S0
0xd9: M[V60] = V59
0xda: V61 = 0x20
0xdd: V62 = ADD S0 0x20
0xe0: V63 = 0xc9
0xe3: JUMP 0xc9
---
Entry stack: [V11, V163, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 3
Stack additions: [S2, S1, V62]
Exit stack: [V11, V163, V44, V44, V50, V53, V51, V51, V50, V53, V62]

================================

Block 0xe4
[0xe4:0xf7]
---
Predecessors: [0xc9]
Successors: [0xf8, 0x111]
---
0xe4 JUMPDEST
0xe5 POP
0xe6 POP
0xe7 POP
0xe8 POP
0xe9 SWAP1
0xea POP
0xeb SWAP1
0xec DUP2
0xed ADD
0xee SWAP1
0xef PUSH1 0x1f
0xf1 AND
0xf2 DUP1
0xf3 ISZERO
0xf4 PUSH2 0x111
0xf7 JUMPI
---
0xe4: JUMPDEST 
0xed: V64 = ADD V51 V50
0xef: V65 = 0x1f
0xf1: V66 = AND 0x1f V51
0xf3: V67 = ISZERO V66
0xf4: V68 = 0x111
0xf7: JUMPI 0x111 V67
---
Entry stack: [V11, V163, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 7
Stack additions: [V64, V66]
Exit stack: [V11, V163, V44, V44, V64, V66]

================================

Block 0xf8
[0xf8:0x110]
---
Predecessors: [0xe4]
Successors: [0x111]
---
0xf8 DUP1
0xf9 DUP3
0xfa SUB
0xfb DUP1
0xfc MLOAD
0xfd PUSH1 0x1
0xff DUP4
0x100 PUSH1 0x20
0x102 SUB
0x103 PUSH2 0x100
0x106 EXP
0x107 SUB
0x108 NOT
0x109 AND
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f SWAP2
0x110 POP
---
0xfa: V69 = SUB V64 V66
0xfc: V70 = M[V69]
0xfd: V71 = 0x1
0x100: V72 = 0x20
0x102: V73 = SUB 0x20 V66
0x103: V74 = 0x100
0x106: V75 = EXP 0x100 V73
0x107: V76 = SUB V75 0x1
0x108: V77 = NOT V76
0x109: V78 = AND V77 V70
0x10b: M[V69] = V78
0x10c: V79 = 0x20
0x10e: V80 = ADD 0x20 V69
---
Entry stack: [V11, V163, V44, V44, V64, V66]
Stack pops: 2
Stack additions: [V80, S0]
Exit stack: [V11, V163, V44, V44, V80, V66]

================================

Block 0x111
[0x111:0x11e]
---
Predecessors: [0xe4, 0xf8]
Successors: []
---
0x111 JUMPDEST
0x112 POP
0x113 SWAP3
0x114 POP
0x115 POP
0x116 POP
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b SWAP2
0x11c SUB
0x11d SWAP1
0x11e RETURN
---
0x111: JUMPDEST 
0x117: V81 = 0x40
0x119: V82 = M[0x40]
0x11c: V83 = SUB S1 V82
0x11e: RETURN V82 V83
---
Entry stack: [V11, V163, V44, V44, S1, V66]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x11f
[0x11f:0x125]
---
Predecessors: [0x57]
Successors: [0x126, 0x12a]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0x11f: JUMPDEST 
0x120: V84 = CALLVALUE
0x121: V85 = ISZERO V84
0x122: V86 = 0x12a
0x125: JUMPI 0x12a V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x11f]
Successors: []
---
0x126 PUSH1 0x0
0x128 DUP1
0x129 REVERT
---
0x126: V87 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12a
[0x12a:0x131]
---
Predecessors: [0x11f]
Successors: [0x303]
---
0x12a JUMPDEST
0x12b PUSH2 0x132
0x12e PUSH2 0x303
0x131 JUMP
---
0x12a: JUMPDEST 
0x12b: V88 = 0x132
0x12e: V89 = 0x303
0x131: JUMP 0x303
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x132]
Exit stack: [V11, 0x132]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: []
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x134
[0x134:0x189]
---
Predecessors: [0x72]
Successors: [0x18a, 0x1c3]
---
0x134 JUMPDEST
0x135 PUSH1 0x0
0x137 DUP1
0x138 SWAP1
0x139 SLOAD
0x13a SWAP1
0x13b PUSH2 0x100
0x13e EXP
0x13f SWAP1
0x140 DIV
0x141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x156 AND
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d CALLER
0x16e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183 AND
0x184 EQ
0x185 ISZERO
0x186 PUSH2 0x1c3
0x189 JUMPI
---
0x134: JUMPDEST 
0x135: V90 = 0x0
0x139: V91 = S[0x0]
0x13b: V92 = 0x100
0x13e: V93 = EXP 0x100 0x0
0x140: V94 = DIV V91 0x1
0x141: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x156: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x157: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x16d: V99 = CALLER
0x16e: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x183: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x184: V102 = EQ V101 V98
0x185: V103 = ISZERO V102
0x186: V104 = 0x1c3
0x189: JUMPI 0x1c3 V103
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x18a
[0x18a:0x1c2]
---
Predecessors: [0x134]
Successors: []
---
0x18a PUSH1 0x0
0x18c DUP1
0x18d SWAP1
0x18e SLOAD
0x18f SWAP1
0x190 PUSH2 0x100
0x193 EXP
0x194 SWAP1
0x195 DIV
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 SELFDESTRUCT
---
0x18a: V105 = 0x0
0x18e: V106 = S[0x0]
0x190: V107 = 0x100
0x193: V108 = EXP 0x100 0x0
0x195: V109 = DIV V106 0x1
0x196: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1ac: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1c2: SELFDESTRUCT V113
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x1c3
[0x1c3:0x1c4]
---
Predecessors: [0x134]
Successors: [0x7a]
---
0x1c3 JUMPDEST
0x1c4 JUMP
---
0x1c3: JUMPDEST 
0x1c4: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c5
[0x1c5:0x21b]
---
Predecessors: [0x87]
Successors: [0x21c, 0x256]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x4
0x1c8 PUSH1 0x0
0x1ca SWAP1
0x1cb SLOAD
0x1cc SWAP1
0x1cd PUSH2 0x100
0x1d0 EXP
0x1d1 SWAP1
0x1d2 DIV
0x1d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e8 AND
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe AND
0x1ff CALLER
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 EQ
0x217 ISZERO
0x218 PUSH2 0x256
0x21b JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V114 = 0x4
0x1c8: V115 = 0x0
0x1cb: V116 = S[0x4]
0x1cd: V117 = 0x100
0x1d0: V118 = EXP 0x100 0x0
0x1d2: V119 = DIV V116 0x1
0x1d3: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1e9: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1ff: V124 = CALLER
0x200: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x216: V127 = EQ V126 V123
0x217: V128 = ISZERO V127
0x218: V129 = 0x256
0x21b: JUMPI 0x256 V128
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x21c
[0x21c:0x255]
---
Predecessors: [0x1c5]
Successors: []
---
0x21c PUSH1 0x3
0x21e PUSH1 0x0
0x220 SWAP1
0x221 SLOAD
0x222 SWAP1
0x223 PUSH2 0x100
0x226 EXP
0x227 SWAP1
0x228 DIV
0x229 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23e AND
0x23f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x254 AND
0x255 SELFDESTRUCT
---
0x21c: V130 = 0x3
0x21e: V131 = 0x0
0x221: V132 = S[0x3]
0x223: V133 = 0x100
0x226: V134 = EXP 0x100 0x0
0x228: V135 = DIV V132 0x1
0x229: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x23f: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x254: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x255: SELFDESTRUCT V139
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x256
[0x256:0x25a]
---
Predecessors: [0x1c5]
Successors: []
---
0x256 JUMPDEST
0x257 PUSH1 0x0
0x259 DUP1
0x25a REVERT
---
0x256: JUMPDEST 
0x257: V140 = 0x0
0x25a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x25b
[0x25b:0x262]
---
Predecessors: [0x9c]
Successors: [0x399]
---
0x25b JUMPDEST
0x25c PUSH2 0x263
0x25f PUSH2 0x399
0x262 JUMP
---
0x25b: JUMPDEST 
0x25c: V141 = 0x263
0x25f: V142 = 0x399
0x262: JUMP 0x399
---
Entry stack: [V11, 0xa4]
Stack pops: 0
Stack additions: [0x263]
Exit stack: [V11, 0xa4, 0x263]

================================

Block 0x263
[0x263:0x2b2]
---
Predecessors: [0x399]
Successors: [0x2b3, 0x2f9]
---
0x263 JUMPDEST
0x264 PUSH1 0x1
0x266 DUP1
0x267 SLOAD
0x268 PUSH1 0x1
0x26a DUP2
0x26b PUSH1 0x1
0x26d AND
0x26e ISZERO
0x26f PUSH2 0x100
0x272 MUL
0x273 SUB
0x274 AND
0x275 PUSH1 0x2
0x277 SWAP1
0x278 DIV
0x279 DUP1
0x27a PUSH1 0x1f
0x27c ADD
0x27d PUSH1 0x20
0x27f DUP1
0x280 SWAP2
0x281 DIV
0x282 MUL
0x283 PUSH1 0x20
0x285 ADD
0x286 PUSH1 0x40
0x288 MLOAD
0x289 SWAP1
0x28a DUP2
0x28b ADD
0x28c PUSH1 0x40
0x28e MSTORE
0x28f DUP1
0x290 SWAP3
0x291 SWAP2
0x292 SWAP1
0x293 DUP2
0x294 DUP2
0x295 MSTORE
0x296 PUSH1 0x20
0x298 ADD
0x299 DUP3
0x29a DUP1
0x29b SLOAD
0x29c PUSH1 0x1
0x29e DUP2
0x29f PUSH1 0x1
0x2a1 AND
0x2a2 ISZERO
0x2a3 PUSH2 0x100
0x2a6 MUL
0x2a7 SUB
0x2a8 AND
0x2a9 PUSH1 0x2
0x2ab SWAP1
0x2ac DIV
0x2ad DUP1
0x2ae ISZERO
0x2af PUSH2 0x2f9
0x2b2 JUMPI
---
0x263: JUMPDEST 
0x264: V143 = 0x1
0x267: V144 = S[0x1]
0x268: V145 = 0x1
0x26b: V146 = 0x1
0x26d: V147 = AND 0x1 V144
0x26e: V148 = ISZERO V147
0x26f: V149 = 0x100
0x272: V150 = MUL 0x100 V148
0x273: V151 = SUB V150 0x1
0x274: V152 = AND V151 V144
0x275: V153 = 0x2
0x278: V154 = DIV V152 0x2
0x27a: V155 = 0x1f
0x27c: V156 = ADD 0x1f V154
0x27d: V157 = 0x20
0x281: V158 = DIV V156 0x20
0x282: V159 = MUL V158 0x20
0x283: V160 = 0x20
0x285: V161 = ADD 0x20 V159
0x286: V162 = 0x40
0x288: V163 = M[0x40]
0x28b: V164 = ADD V163 V161
0x28c: V165 = 0x40
0x28e: M[0x40] = V164
0x295: M[V163] = V154
0x296: V166 = 0x20
0x298: V167 = ADD 0x20 V163
0x29b: V168 = S[0x1]
0x29c: V169 = 0x1
0x29f: V170 = 0x1
0x2a1: V171 = AND 0x1 V168
0x2a2: V172 = ISZERO V171
0x2a3: V173 = 0x100
0x2a6: V174 = MUL 0x100 V172
0x2a7: V175 = SUB V174 0x1
0x2a8: V176 = AND V175 V168
0x2a9: V177 = 0x2
0x2ac: V178 = DIV V176 0x2
0x2ae: V179 = ISZERO V178
0x2af: V180 = 0x2f9
0x2b2: JUMPI 0x2f9 V179
---
Entry stack: [V11, 0xa4, V236]
Stack pops: 0
Stack additions: [V163, 0x1, V154, V167, 0x1, V178]
Exit stack: [V11, 0xa4, V236, V163, 0x1, V154, V167, 0x1, V178]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x263]
Successors: [0x2bb, 0x2ce]
---
0x2b3 DUP1
0x2b4 PUSH1 0x1f
0x2b6 LT
0x2b7 PUSH2 0x2ce
0x2ba JUMPI
---
0x2b4: V181 = 0x1f
0x2b6: V182 = LT 0x1f V178
0x2b7: V183 = 0x2ce
0x2ba: JUMPI 0x2ce V182
---
Entry stack: [V11, 0xa4, V236, V163, 0x1, V154, V167, 0x1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa4, V236, V163, 0x1, V154, V167, 0x1, V178]

================================

Block 0x2bb
[0x2bb:0x2cd]
---
Predecessors: [0x2b3]
Successors: [0x2f9]
---
0x2bb PUSH2 0x100
0x2be DUP1
0x2bf DUP4
0x2c0 SLOAD
0x2c1 DIV
0x2c2 MUL
0x2c3 DUP4
0x2c4 MSTORE
0x2c5 SWAP2
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP2
0x2ca PUSH2 0x2f9
0x2cd JUMP
---
0x2bb: V184 = 0x100
0x2c0: V185 = S[0x1]
0x2c1: V186 = DIV V185 0x100
0x2c2: V187 = MUL V186 0x100
0x2c4: M[V167] = V187
0x2c6: V188 = 0x20
0x2c8: V189 = ADD 0x20 V167
0x2ca: V190 = 0x2f9
0x2cd: JUMP 0x2f9
---
Entry stack: [V11, 0xa4, V236, V163, 0x1, V154, V167, 0x1, V178]
Stack pops: 3
Stack additions: [V189, S1, S0]
Exit stack: [V11, 0xa4, V236, V163, 0x1, V154, V189, 0x1, V178]

================================

Block 0x2ce
[0x2ce:0x2db]
---
Predecessors: [0x2b3]
Successors: [0x2dc]
---
0x2ce JUMPDEST
0x2cf DUP3
0x2d0 ADD
0x2d1 SWAP2
0x2d2 SWAP1
0x2d3 PUSH1 0x0
0x2d5 MSTORE
0x2d6 PUSH1 0x20
0x2d8 PUSH1 0x0
0x2da SHA3
0x2db SWAP1
---
0x2ce: JUMPDEST 
0x2d0: V191 = ADD V167 V178
0x2d3: V192 = 0x0
0x2d5: M[0x0] = 0x1
0x2d6: V193 = 0x20
0x2d8: V194 = 0x0
0x2da: V195 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xa4, V236, V163, 0x1, V154, V167, 0x1, V178]
Stack pops: 3
Stack additions: [V191, V195, S2]
Exit stack: [V11, 0xa4, V236, V163, 0x1, V154, V191, V195, V167]

================================

Block 0x2dc
[0x2dc:0x2ef]
---
Predecessors: [0x2ce, 0x2dc]
Successors: [0x2dc, 0x2f0]
---
0x2dc JUMPDEST
0x2dd DUP2
0x2de SLOAD
0x2df DUP2
0x2e0 MSTORE
0x2e1 SWAP1
0x2e2 PUSH1 0x1
0x2e4 ADD
0x2e5 SWAP1
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 DUP1
0x2ea DUP4
0x2eb GT
0x2ec PUSH2 0x2dc
0x2ef JUMPI
---
0x2dc: JUMPDEST 
0x2de: V196 = S[S1]
0x2e0: M[S0] = V196
0x2e2: V197 = 0x1
0x2e4: V198 = ADD 0x1 S1
0x2e6: V199 = 0x20
0x2e8: V200 = ADD 0x20 S0
0x2eb: V201 = GT V191 V200
0x2ec: V202 = 0x2dc
0x2ef: JUMPI 0x2dc V201
---
Entry stack: [V11, 0xa4, V236, V163, 0x1, V154, V191, S1, S0]
Stack pops: 3
Stack additions: [S2, V198, V200]
Exit stack: [V11, 0xa4, V236, V163, 0x1, V154, V191, V198, V200]

================================

Block 0x2f0
[0x2f0:0x2f8]
---
Predecessors: [0x2dc]
Successors: [0x2f9]
---
0x2f0 DUP3
0x2f1 SWAP1
0x2f2 SUB
0x2f3 PUSH1 0x1f
0x2f5 AND
0x2f6 DUP3
0x2f7 ADD
0x2f8 SWAP2
---
0x2f2: V203 = SUB V200 V191
0x2f3: V204 = 0x1f
0x2f5: V205 = AND 0x1f V203
0x2f7: V206 = ADD V191 V205
---
Entry stack: [V11, 0xa4, V236, V163, 0x1, V154, V191, V198, V200]
Stack pops: 3
Stack additions: [V206, S1, S2]
Exit stack: [V11, 0xa4, V236, V163, 0x1, V154, V206, V198, V191]

================================

Block 0x2f9
[0x2f9:0x302]
---
Predecessors: [0x263, 0x2bb, 0x2f0]
Successors: [0xa4]
---
0x2f9 JUMPDEST
0x2fa POP
0x2fb POP
0x2fc POP
0x2fd POP
0x2fe POP
0x2ff SWAP1
0x300 POP
0x301 SWAP1
0x302 JUMP
---
0x2f9: JUMPDEST 
0x302: JUMP 0xa4
---
Entry stack: [V11, 0xa4, V236, V163, 0x1, V154, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V163]

================================

Block 0x303
[0x303:0x359]
---
Predecessors: [0x12a]
Successors: [0x35a, 0x394]
---
0x303 JUMPDEST
0x304 PUSH1 0x4
0x306 PUSH1 0x0
0x308 SWAP1
0x309 SLOAD
0x30a SWAP1
0x30b PUSH2 0x100
0x30e EXP
0x30f SWAP1
0x310 DIV
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33c AND
0x33d CALLER
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 AND
0x354 EQ
0x355 ISZERO
0x356 PUSH2 0x394
0x359 JUMPI
---
0x303: JUMPDEST 
0x304: V207 = 0x4
0x306: V208 = 0x0
0x309: V209 = S[0x4]
0x30b: V210 = 0x100
0x30e: V211 = EXP 0x100 0x0
0x310: V212 = DIV V209 0x1
0x311: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x327: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x33d: V217 = CALLER
0x33e: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x354: V220 = EQ V219 V216
0x355: V221 = ISZERO V220
0x356: V222 = 0x394
0x359: JUMPI 0x394 V221
---
Entry stack: [V11, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132]

================================

Block 0x35a
[0x35a:0x393]
---
Predecessors: [0x303]
Successors: []
---
0x35a PUSH1 0x2
0x35c PUSH1 0x0
0x35e SWAP1
0x35f SLOAD
0x360 SWAP1
0x361 PUSH2 0x100
0x364 EXP
0x365 SWAP1
0x366 DIV
0x367 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37c AND
0x37d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x392 AND
0x393 SELFDESTRUCT
---
0x35a: V223 = 0x2
0x35c: V224 = 0x0
0x35f: V225 = S[0x2]
0x361: V226 = 0x100
0x364: V227 = EXP 0x100 0x0
0x366: V228 = DIV V225 0x1
0x367: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x37d: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x392: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x393: SELFDESTRUCT V232
---
Entry stack: [V11, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132]

================================

Block 0x394
[0x394:0x398]
---
Predecessors: [0x303]
Successors: []
---
0x394 JUMPDEST
0x395 PUSH1 0x0
0x397 DUP1
0x398 REVERT
---
0x394: JUMPDEST 
0x395: V233 = 0x0
0x398: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132]

================================

Block 0x399
[0x399:0x3ac]
---
Predecessors: [0x25b]
Successors: [0x263]
---
0x399 JUMPDEST
0x39a PUSH1 0x20
0x39c PUSH1 0x40
0x39e MLOAD
0x39f SWAP1
0x3a0 DUP2
0x3a1 ADD
0x3a2 PUSH1 0x40
0x3a4 MSTORE
0x3a5 DUP1
0x3a6 PUSH1 0x0
0x3a8 DUP2
0x3a9 MSTORE
0x3aa POP
0x3ab SWAP1
0x3ac JUMP
---
0x399: JUMPDEST 
0x39a: V234 = 0x20
0x39c: V235 = 0x40
0x39e: V236 = M[0x40]
0x3a1: V237 = ADD V236 0x20
0x3a2: V238 = 0x40
0x3a4: M[0x40] = V237
0x3a6: V239 = 0x0
0x3a9: M[V236] = 0x0
0x3ac: JUMP 0x263
---
Entry stack: [V11, 0xa4, 0x263]
Stack pops: 1
Stack additions: [V236]
Exit stack: [V11, 0xa4, V236]

================================

Block 0x3ad
[0x3ad:0x3e0]
---
Predecessors: []
Successors: []
---
0x3ad STOP
0x3ae LOG1
0x3af PUSH6 0x627a7a723058
0x3b6 SHA3
0x3b7 CALL
0x3b8 MISSING 0x23
0x3b9 JUMP
0x3ba MISSING 0xf
0x3bb DUP11
0x3bc MISSING 0x46
0x3bd MISSING 0x5f
0x3be MISSING 0x1f
0x3bf ADD
0x3c0 COINBASE
0x3c1 CALLER
0x3c2 SWAP12
0x3c3 TIMESTAMP
0x3c4 MISSING 0xec
0x3c5 MISSING 0xdf
0x3c6 LOG1
0x3c7 SWAP9
0x3c8 MISSING 0xcc
0x3c9 DUP16
0x3ca GASPRICE
0x3cb MISSING 0xe3
0x3cc MISSING 0xa6
0x3cd PUSH19 0xf5838b9e1863aa92f00029
---
0x3ad: STOP 
0x3ae: LOG S0 S1 S2
0x3af: V240 = 0x627a7a723058
0x3b6: V241 = SHA3 0x627a7a723058 S3
0x3b7: V242 = CALL V241 S4 S5 S6 S7 S8 S9
0x3b8: MISSING 0x23
0x3b9: JUMP S0
0x3ba: MISSING 0xf
0x3bc: MISSING 0x46
0x3bd: MISSING 0x5f
0x3be: MISSING 0x1f
0x3bf: V243 = ADD S0 S1
0x3c0: V244 = COINBASE
0x3c1: V245 = CALLER
0x3c3: V246 = TIMESTAMP
0x3c4: MISSING 0xec
0x3c5: MISSING 0xdf
0x3c6: LOG S0 S1 S2
0x3c8: MISSING 0xcc
0x3ca: V247 = GASPRICE
0x3cb: MISSING 0xe3
0x3cc: MISSING 0xa6
0x3cd: V248 = 0xf5838b9e1863aa92f00029
---
Entry stack: []
Stack pops: 0
Stack additions: [V242, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V246, S11, V244, V243, S2, S3, S4, S5, S6, S7, S8, S9, S10, V245, S12, S4, S5, S6, S7, S8, S9, S10, S11, S3, V247, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0xf5838b9e1863aa92f00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x67
Exit block: 0x7a
Body: 0x67, 0x6e, 0x72, 0x7a, 0x134, 0x18a, 0x1c3

Function 1:
Public function signature: 0x86d1a69f
Entry block: 0x7c
Exit block: 0x256
Body: 0x7c, 0x83, 0x87, 0x1c5, 0x21c, 0x256

Function 2:
Public function signature: 0xcfae3217
Entry block: 0x91
Exit block: 0x111
Body: 0x91, 0x98, 0x9c, 0xa4, 0xc9, 0xd2, 0xe4, 0xf8, 0x111, 0x25b, 0x263, 0x2b3, 0x2bb, 0x2ce, 0x2dc, 0x2f0, 0x2f9, 0x399

Function 3:
Public function signature: 0xea8a1af0
Entry block: 0x11f
Exit block: 0x394
Body: 0x11f, 0x126, 0x12a, 0x303, 0x35a, 0x394

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

