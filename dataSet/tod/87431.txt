Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xeb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xeb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xeb
0xa: JUMPI 0xeb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x190]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x83c6323
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x190
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x83c6323
0x20: V14 = EQ V12 0x83c6323
0x21: V15 = 0x190
0x24: JUMPI 0x190 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1b5]
---
0x25 DUP1
0x26 PUSH4 0x11f58e99
0x2b EQ
0x2c PUSH2 0x1b5
0x2f JUMPI
---
0x26: V16 = 0x11f58e99
0x2b: V17 = EQ 0x11f58e99 V12
0x2c: V18 = 0x1b5
0x2f: JUMPI 0x1b5 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1da]
---
0x30 DUP1
0x31 PUSH4 0x1944bc3d
0x36 EQ
0x37 PUSH2 0x1da
0x3a JUMPI
---
0x31: V19 = 0x1944bc3d
0x36: V20 = EQ 0x1944bc3d V12
0x37: V21 = 0x1da
0x3a: JUMPI 0x1da V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x214]
---
0x3b DUP1
0x3c PUSH4 0x1fa4ea66
0x41 EQ
0x42 PUSH2 0x214
0x45 JUMPI
---
0x3c: V22 = 0x1fa4ea66
0x41: V23 = EQ 0x1fa4ea66 V12
0x42: V24 = 0x214
0x45: JUMPI 0x214 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x243]
---
0x46 DUP1
0x47 PUSH4 0x3cecd719
0x4c EQ
0x4d PUSH2 0x243
0x50 JUMPI
---
0x47: V25 = 0x3cecd719
0x4c: V26 = EQ 0x3cecd719 V12
0x4d: V27 = 0x243
0x50: JUMPI 0x243 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x258]
---
0x51 DUP1
0x52 PUSH4 0x48cd4cb1
0x57 EQ
0x58 PUSH2 0x258
0x5b JUMPI
---
0x52: V28 = 0x48cd4cb1
0x57: V29 = EQ 0x48cd4cb1 V12
0x58: V30 = 0x258
0x5b: JUMPI 0x258 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x27d]
---
0x5c DUP1
0x5d PUSH4 0x4c9297fa
0x62 EQ
0x63 PUSH2 0x27d
0x66 JUMPI
---
0x5d: V31 = 0x4c9297fa
0x62: V32 = EQ 0x4c9297fa V12
0x63: V33 = 0x27d
0x66: JUMPI 0x27d V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x295]
---
0x67 DUP1
0x68 PUSH4 0x521eb273
0x6d EQ
0x6e PUSH2 0x295
0x71 JUMPI
---
0x68: V34 = 0x521eb273
0x6d: V35 = EQ 0x521eb273 V12
0x6e: V36 = 0x295
0x71: JUMPI 0x295 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2c4]
---
0x72 DUP1
0x73 PUSH4 0x58623642
0x78 EQ
0x79 PUSH2 0x2c4
0x7c JUMPI
---
0x73: V37 = 0x58623642
0x78: V38 = EQ 0x58623642 V12
0x79: V39 = 0x2c4
0x7c: JUMPI 0x2c4 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2e9]
---
0x7d DUP1
0x7e PUSH4 0x63b20117
0x83 EQ
0x84 PUSH2 0x2e9
0x87 JUMPI
---
0x7e: V40 = 0x63b20117
0x83: V41 = EQ 0x63b20117 V12
0x84: V42 = 0x2e9
0x87: JUMPI 0x2e9 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x30e]
---
0x88 DUP1
0x89 PUSH4 0x6db5c8fd
0x8e EQ
0x8f PUSH2 0x30e
0x92 JUMPI
---
0x89: V43 = 0x6db5c8fd
0x8e: V44 = EQ 0x6db5c8fd V12
0x8f: V45 = 0x30e
0x92: JUMPI 0x30e V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x333]
---
0x93 DUP1
0x94 PUSH4 0x8da5cb5b
0x99 EQ
0x9a PUSH2 0x333
0x9d JUMPI
---
0x94: V46 = 0x8da5cb5b
0x99: V47 = EQ 0x8da5cb5b V12
0x9a: V48 = 0x333
0x9d: JUMPI 0x333 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x362]
---
0x9e DUP1
0x9f PUSH4 0xae422c09
0xa4 EQ
0xa5 PUSH2 0x362
0xa8 JUMPI
---
0x9f: V49 = 0xae422c09
0xa4: V50 = EQ 0xae422c09 V12
0xa5: V51 = 0x362
0xa8: JUMPI 0x362 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x391]
---
0xa9 DUP1
0xaa PUSH4 0xb956a8a6
0xaf EQ
0xb0 PUSH2 0x391
0xb3 JUMPI
---
0xaa: V52 = 0xb956a8a6
0xaf: V53 = EQ 0xb956a8a6 V12
0xb0: V54 = 0x391
0xb3: JUMPI 0x391 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x3c0]
---
0xb4 DUP1
0xb5 PUSH4 0xc040e6b8
0xba EQ
0xbb PUSH2 0x3c0
0xbe JUMPI
---
0xb5: V55 = 0xc040e6b8
0xba: V56 = EQ 0xc040e6b8 V12
0xbb: V57 = 0x3c0
0xbe: JUMPI 0x3c0 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x3f7]
---
0xbf DUP1
0xc0 PUSH4 0xc062f578
0xc5 EQ
0xc6 PUSH2 0x3f7
0xc9 JUMPI
---
0xc0: V58 = 0xc062f578
0xc5: V59 = EQ 0xc062f578 V12
0xc6: V60 = 0x3f7
0xc9: JUMPI 0x3f7 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x42e]
---
0xca DUP1
0xcb PUSH4 0xc7efb162
0xd0 EQ
0xd1 PUSH2 0x42e
0xd4 JUMPI
---
0xcb: V61 = 0xc7efb162
0xd0: V62 = EQ 0xc7efb162 V12
0xd1: V63 = 0x42e
0xd4: JUMPI 0x42e V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x461]
---
0xd5 DUP1
0xd6 PUSH4 0xd031370b
0xdb EQ
0xdc PUSH2 0x461
0xdf JUMPI
---
0xd6: V64 = 0xd031370b
0xdb: V65 = EQ 0xd031370b V12
0xdc: V66 = 0x461
0xdf: JUMPI 0x461 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x479]
---
0xe0 DUP1
0xe1 PUSH4 0xd0febe4c
0xe6 EQ
0xe7 PUSH2 0x479
0xea JUMPI
---
0xe1: V67 = 0xd0febe4c
0xe6: V68 = EQ 0xd0febe4c V12
0xe7: V69 = 0x479
0xea: JUMPI 0x479 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0x0, 0xe0]
Successors: [0xef]
---
0xeb JUMPDEST
0xec PUSH2 0x18e
---
0xeb: JUMPDEST 
0xec: V70 = 0x18e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18e]
Exit stack: [V12, 0x18e]

================================

Block 0xef
[0xef:0xf1]
---
Predecessors: [0xeb]
Successors: [0xf2]
---
0xef JUMPDEST
0xf0 PUSH1 0x2
---
0xef: JUMPDEST 
0xf0: V71 = 0x2
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x18e, 0x2]

================================

Block 0xf2
[0xf2:0x101]
---
Predecessors: [0xef]
Successors: [0x102, 0x103]
---
0xf2 JUMPDEST
0xf3 PUSH1 0x12
0xf5 SLOAD
0xf6 PUSH1 0xff
0xf8 AND
0xf9 PUSH1 0x4
0xfb DUP2
0xfc GT
0xfd ISZERO
0xfe PUSH2 0x103
0x101 JUMPI
---
0xf2: JUMPDEST 
0xf3: V72 = 0x12
0xf5: V73 = S[0x12]
0xf6: V74 = 0xff
0xf8: V75 = AND 0xff V73
0xf9: V76 = 0x4
0xfc: V77 = GT V75 0x4
0xfd: V78 = ISZERO V77
0xfe: V79 = 0x103
0x101: JUMPI 0x103 V78
---
Entry stack: [V12, 0x18e, 0x2]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V12, 0x18e, 0x2, V75]

================================

Block 0x102
[0x102:0x102]
---
Predecessors: [0xf2]
Successors: []
---
0x102 INVALID
---
0x102: INVALID 
---
Entry stack: [V12, 0x18e, 0x2, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, 0x2, V75]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0xf2]
Successors: [0x10b, 0x112]
---
0x103 JUMPDEST
0x104 EQ
0x105 DUP1
0x106 ISZERO
0x107 PUSH2 0x112
0x10a JUMPI
---
0x103: JUMPDEST 
0x104: V80 = EQ V75 0x2
0x106: V81 = ISZERO V80
0x107: V82 = 0x112
0x10a: JUMPI 0x112 V81
---
Entry stack: [V12, 0x18e, 0x2, V75]
Stack pops: 2
Stack additions: [V80]
Exit stack: [V12, 0x18e, V80]

================================

Block 0x10b
[0x10b:0x111]
---
Predecessors: [0x103]
Successors: [0x112]
---
0x10b POP
0x10c PUSH1 0x7
0x10e SLOAD
0x10f NUMBER
0x110 LT
0x111 ISZERO
---
0x10c: V83 = 0x7
0x10e: V84 = S[0x7]
0x10f: V85 = NUMBER
0x110: V86 = LT V85 V84
0x111: V87 = ISZERO V86
---
Entry stack: [V12, 0x18e, V80]
Stack pops: 1
Stack additions: [V87]
Exit stack: [V12, 0x18e, V87]

================================

Block 0x112
[0x112:0x117]
---
Predecessors: [0x103, 0x10b]
Successors: [0x118, 0x12d]
---
0x112 JUMPDEST
0x113 ISZERO
0x114 PUSH2 0x12d
0x117 JUMPI
---
0x112: JUMPDEST 
0x113: V88 = ISZERO S0
0x114: V89 = 0x12d
0x117: JUMPI 0x12d V88
---
Entry stack: [V12, 0x18e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18e]

================================

Block 0x118
[0x118:0x126]
---
Predecessors: [0x112]
Successors: [0x127]
---
0x118 PUSH1 0x12
0x11a DUP1
0x11b SLOAD
0x11c PUSH1 0x3
0x11e SWAP2
0x11f SWAP1
0x120 PUSH1 0xff
0x122 NOT
0x123 AND
0x124 PUSH1 0x1
0x126 DUP4
---
0x118: V90 = 0x12
0x11b: V91 = S[0x12]
0x11c: V92 = 0x3
0x120: V93 = 0xff
0x122: V94 = NOT 0xff
0x123: V95 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V91
0x124: V96 = 0x1
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: [0x3, 0x12, V95, 0x1, 0x3]
Exit stack: [V12, 0x18e, 0x3, 0x12, V95, 0x1, 0x3]

================================

Block 0x127
[0x127:0x12c]
---
Predecessors: [0x118]
Successors: [0x12d]
---
0x127 JUMPDEST
0x128 MUL
0x129 OR
0x12a SWAP1
0x12b SSTORE
0x12c POP
---
0x127: JUMPDEST 
0x128: V97 = MUL 0x3 0x1
0x129: V98 = OR 0x3 V95
0x12b: S[0x12] = V98
---
Entry stack: [V12, 0x18e, 0x3, 0x12, V95, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x18e]

================================

Block 0x12d
[0x12d:0x12f]
---
Predecessors: [0x112, 0x127]
Successors: [0x130]
---
0x12d JUMPDEST
0x12e PUSH1 0x3
---
0x12d: JUMPDEST 
0x12e: V99 = 0x3
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x18e, 0x3]

================================

Block 0x130
[0x130:0x13f]
---
Predecessors: [0x12d]
Successors: [0x140, 0x141]
---
0x130 JUMPDEST
0x131 PUSH1 0x12
0x133 SLOAD
0x134 PUSH1 0xff
0x136 AND
0x137 PUSH1 0x4
0x139 DUP2
0x13a GT
0x13b ISZERO
0x13c PUSH2 0x141
0x13f JUMPI
---
0x130: JUMPDEST 
0x131: V100 = 0x12
0x133: V101 = S[0x12]
0x134: V102 = 0xff
0x136: V103 = AND 0xff V101
0x137: V104 = 0x4
0x13a: V105 = GT V103 0x4
0x13b: V106 = ISZERO V105
0x13c: V107 = 0x141
0x13f: JUMPI 0x141 V106
---
Entry stack: [V12, 0x18e, 0x3]
Stack pops: 0
Stack additions: [V103]
Exit stack: [V12, 0x18e, 0x3, V103]

================================

Block 0x140
[0x140:0x140]
---
Predecessors: [0x130]
Successors: []
---
0x140 INVALID
---
0x140: INVALID 
---
Entry stack: [V12, 0x18e, 0x3, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, 0x3, V103]

================================

Block 0x141
[0x141:0x148]
---
Predecessors: [0x130]
Successors: [0x149, 0x150]
---
0x141 JUMPDEST
0x142 EQ
0x143 DUP1
0x144 ISZERO
0x145 PUSH2 0x150
0x148 JUMPI
---
0x141: JUMPDEST 
0x142: V108 = EQ V103 0x3
0x144: V109 = ISZERO V108
0x145: V110 = 0x150
0x148: JUMPI 0x150 V109
---
Entry stack: [V12, 0x18e, 0x3, V103]
Stack pops: 2
Stack additions: [V108]
Exit stack: [V12, 0x18e, V108]

================================

Block 0x149
[0x149:0x14f]
---
Predecessors: [0x141]
Successors: [0x150]
---
0x149 POP
0x14a PUSH1 0x8
0x14c SLOAD
0x14d NUMBER
0x14e LT
0x14f ISZERO
---
0x14a: V111 = 0x8
0x14c: V112 = S[0x8]
0x14d: V113 = NUMBER
0x14e: V114 = LT V113 V112
0x14f: V115 = ISZERO V114
---
Entry stack: [V12, 0x18e, V108]
Stack pops: 1
Stack additions: [V115]
Exit stack: [V12, 0x18e, V115]

================================

Block 0x150
[0x150:0x155]
---
Predecessors: [0x141, 0x149]
Successors: [0x156, 0x15d]
---
0x150 JUMPDEST
0x151 ISZERO
0x152 PUSH2 0x15d
0x155 JUMPI
---
0x150: JUMPDEST 
0x151: V116 = ISZERO S0
0x152: V117 = 0x15d
0x155: JUMPI 0x15d V116
---
Entry stack: [V12, 0x18e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18e]

================================

Block 0x156
[0x156:0x15c]
---
Predecessors: [0x150]
Successors: [0x483]
---
0x156 PUSH2 0x15d
0x159 PUSH2 0x483
0x15c JUMP
---
0x156: V118 = 0x15d
0x159: V119 = 0x483
0x15c: JUMP 0x483
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: [0x15d]
Exit stack: [V12, 0x18e, 0x15d]

================================

Block 0x15d
[0x15d:0x15d]
---
Predecessors: [0x150, 0x5b2]
Successors: [0x15e]
---
0x15d JUMPDEST
---
0x15d: JUMPDEST 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x15e
[0x15e:0x160]
---
Predecessors: [0x15d]
Successors: [0x161]
---
0x15e JUMPDEST
0x15f PUSH1 0x3
---
0x15e: JUMPDEST 
0x15f: V120 = 0x3
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0, 0x3]

================================

Block 0x161
[0x161:0x170]
---
Predecessors: [0x15e]
Successors: [0x171, 0x172]
---
0x161 JUMPDEST
0x162 PUSH1 0x12
0x164 SLOAD
0x165 PUSH1 0xff
0x167 AND
0x168 PUSH1 0x4
0x16a DUP2
0x16b GT
0x16c ISZERO
0x16d PUSH2 0x172
0x170 JUMPI
---
0x161: JUMPDEST 
0x162: V121 = 0x12
0x164: V122 = S[0x12]
0x165: V123 = 0xff
0x167: V124 = AND 0xff V122
0x168: V125 = 0x4
0x16b: V126 = GT V124 0x4
0x16c: V127 = ISZERO V126
0x16d: V128 = 0x172
0x170: JUMPI 0x172 V127
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3, V124]

================================

Block 0x171
[0x171:0x171]
---
Predecessors: [0x161]
Successors: []
---
0x171 INVALID
---
0x171: INVALID 
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V124]

================================

Block 0x172
[0x172:0x178]
---
Predecessors: [0x161]
Successors: [0x179, 0x185]
---
0x172 JUMPDEST
0x173 EQ
0x174 ISZERO
0x175 PUSH2 0x185
0x178 JUMPI
---
0x172: JUMPDEST 
0x173: V129 = EQ V124 0x3
0x174: V130 = ISZERO V129
0x175: V131 = 0x185
0x178: JUMPI 0x185 V130
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V124]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x172]
Successors: [0x5b5]
---
0x179 PUSH2 0x180
0x17c PUSH2 0x5b5
0x17f JUMP
---
0x179: V132 = 0x180
0x17c: V133 = 0x5b5
0x17f: JUMP 0x5b5
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x180]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0, 0x180]

================================

Block 0x180
[0x180:0x184]
---
Predecessors: [0x18c, 0x8c8, 0x1076]
Successors: [0x18a]
---
0x180 JUMPDEST
0x181 PUSH2 0x18a
0x184 JUMP
---
0x180: JUMPDEST 
0x181: V134 = 0x18a
0x184: JUMP 0x18a
---
Entry stack: [S6, V610, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S6, V610, S4, S3, S2, S1, S0]

================================

Block 0x185
[0x185:0x189]
---
Predecessors: [0x172]
Successors: []
---
0x185 JUMPDEST
0x186 PUSH1 0x0
0x188 DUP1
0x189 REVERT
---
0x185: JUMPDEST 
0x186: V135 = 0x0
0x189: REVERT 0x0 0x0
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x18a
[0x18a:0x18a]
---
Predecessors: [0x180]
Successors: [0x18b]
---
0x18a JUMPDEST
---
0x18a: JUMPDEST 
---
Entry stack: [S6, V610, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S6, V610, S4, S3, S2, S1, S0]

================================

Block 0x18b
[0x18b:0x18b]
---
Predecessors: [0x18a]
Successors: [0x18c]
---
0x18b JUMPDEST
---
0x18b: JUMPDEST 
---
Entry stack: [S6, V610, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S6, V610, S4, S3, S2, S1, S0]

================================

Block 0x18c
[0x18c:0x18d]
---
Predecessors: [0x18b]
Successors: [0x180, 0x18e]
---
0x18c JUMPDEST
0x18d JUMP
---
0x18c: JUMPDEST 
0x18d: JUMP S0
---
Entry stack: [S6, V610, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S6, V610, S4, S3, S2, S1]

================================

Block 0x18e
[0x18e:0x18f]
---
Predecessors: [0x18c, 0x5b2, 0x8c8, 0xaaa, 0xe35, 0x1076]
Successors: []
---
0x18e JUMPDEST
0x18f STOP
---
0x18e: JUMPDEST 
0x18f: STOP 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x190
[0x190:0x196]
---
Predecessors: [0xb]
Successors: [0x197, 0x19b]
---
0x190 JUMPDEST
0x191 CALLVALUE
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x190: JUMPDEST 
0x191: V136 = CALLVALUE
0x192: V137 = ISZERO V136
0x193: V138 = 0x19b
0x196: JUMPI 0x19b V137
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x190]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V139 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x190]
Successors: [0x8d0]
---
0x19b JUMPDEST
0x19c PUSH2 0x1a3
0x19f PUSH2 0x8d0
0x1a2 JUMP
---
0x19b: JUMPDEST 
0x19c: V140 = 0x1a3
0x19f: V141 = 0x8d0
0x1a2: JUMP 0x8d0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3]
Exit stack: [V12, 0x1a3]

================================

Block 0x1a3
[0x1a3:0x1b4]
---
Predecessors: [0x8d0, 0x912, 0xa34, 0xabc, 0xb05]
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 SWAP1
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 SWAP2
0x1b2 SUB
0x1b3 SWAP1
0x1b4 RETURN
---
0x1a3: JUMPDEST 
0x1a4: V142 = 0x40
0x1a6: V143 = M[0x40]
0x1a9: M[V143] = S0
0x1aa: V144 = 0x20
0x1ac: V145 = ADD 0x20 V143
0x1ad: V146 = 0x40
0x1af: V147 = M[0x40]
0x1b2: V148 = SUB V145 V147
0x1b4: RETURN V147 V148
---
Entry stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1b5
[0x1b5:0x1bb]
---
Predecessors: [0x25]
Successors: [0x1bc, 0x1c0]
---
0x1b5 JUMPDEST
0x1b6 CALLVALUE
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V149 = CALLVALUE
0x1b7: V150 = ISZERO V149
0x1b8: V151 = 0x1c0
0x1bb: JUMPI 0x1c0 V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1b5]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V152 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c0
[0x1c0:0x1c7]
---
Predecessors: [0x1b5]
Successors: [0x8d6]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0x1a3
0x1c4 PUSH2 0x8d6
0x1c7 JUMP
---
0x1c0: JUMPDEST 
0x1c1: V153 = 0x1a3
0x1c4: V154 = 0x8d6
0x1c7: JUMP 0x8d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3]
Exit stack: [V12, 0x1a3]

================================

Block 0x1c8
[0x1c8:0x1d9]
---
Predecessors: []
Successors: []
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc SWAP1
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 SWAP2
0x1d7 SUB
0x1d8 SWAP1
0x1d9 RETURN
---
0x1c8: JUMPDEST 
0x1c9: V155 = 0x40
0x1cb: V156 = M[0x40]
0x1ce: M[V156] = S0
0x1cf: V157 = 0x20
0x1d1: V158 = ADD 0x20 V156
0x1d2: V159 = 0x40
0x1d4: V160 = M[0x40]
0x1d7: V161 = SUB V158 V160
0x1d9: RETURN V160 V161
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1da
[0x1da:0x1e0]
---
Predecessors: [0x30]
Successors: [0x1e1, 0x1e5]
---
0x1da JUMPDEST
0x1db CALLVALUE
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x1da: JUMPDEST 
0x1db: V162 = CALLVALUE
0x1dc: V163 = ISZERO V162
0x1dd: V164 = 0x1e5
0x1e0: JUMPI 0x1e5 V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x1da]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V165 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e5
[0x1e5:0x1ef]
---
Predecessors: [0x1da]
Successors: [0x917]
---
0x1e5 JUMPDEST
0x1e6 PUSH2 0x1f0
0x1e9 PUSH1 0x4
0x1eb CALLDATALOAD
0x1ec PUSH2 0x917
0x1ef JUMP
---
0x1e5: JUMPDEST 
0x1e6: V166 = 0x1f0
0x1e9: V167 = 0x4
0x1eb: V168 = CALLDATALOAD 0x4
0x1ec: V169 = 0x917
0x1ef: JUMP 0x917
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f0, V168]
Exit stack: [V12, 0x1f0, V168]

================================

Block 0x1f0
[0x1f0:0x213]
---
Predecessors: [0x92b]
Successors: []
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 DUP5
0x1f6 DUP2
0x1f7 MSTORE
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb DUP4
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 DUP3
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x20
0x206 ADD
0x207 SWAP4
0x208 POP
0x209 POP
0x20a POP
0x20b POP
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 SWAP2
0x211 SUB
0x212 SWAP1
0x213 RETURN
---
0x1f0: JUMPDEST 
0x1f1: V170 = 0x40
0x1f3: V171 = M[0x40]
0x1f7: M[V171] = V869
0x1f8: V172 = 0x20
0x1fa: V173 = ADD 0x20 V171
0x1fd: M[V173] = V872
0x1fe: V174 = 0x20
0x200: V175 = ADD 0x20 V173
0x203: M[V175] = V875
0x204: V176 = 0x20
0x206: V177 = ADD 0x20 V175
0x20c: V178 = 0x40
0x20e: V179 = M[0x40]
0x211: V180 = SUB V177 V179
0x213: RETURN V179 V180
---
Entry stack: [V12, 0x1f0, V869, V872, V875]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1f0]

================================

Block 0x214
[0x214:0x21a]
---
Predecessors: [0x3b]
Successors: [0x21b, 0x21f]
---
0x214 JUMPDEST
0x215 CALLVALUE
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x214: JUMPDEST 
0x215: V181 = CALLVALUE
0x216: V182 = ISZERO V181
0x217: V183 = 0x21f
0x21a: JUMPI 0x21f V182
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x214]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V184 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21f
[0x21f:0x226]
---
Predecessors: [0x214]
Successors: [0x93f]
---
0x21f JUMPDEST
0x220 PUSH2 0x227
0x223 PUSH2 0x93f
0x226 JUMP
---
0x21f: JUMPDEST 
0x220: V185 = 0x227
0x223: V186 = 0x93f
0x226: JUMP 0x93f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V12, 0x227]

================================

Block 0x227
[0x227:0x242]
---
Predecessors: [0x93f, 0xaad, 0xb0b, 0xb1a, 0xb29]
Successors: []
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a MLOAD
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 SWAP1
0x234 SWAP2
0x235 AND
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x20
0x23a ADD
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f SWAP2
0x240 SUB
0x241 SWAP1
0x242 RETURN
---
0x227: JUMPDEST 
0x228: V187 = 0x40
0x22a: V188 = M[0x40]
0x22b: V189 = 0x1
0x22d: V190 = 0xa0
0x22f: V191 = 0x2
0x231: V192 = EXP 0x2 0xa0
0x232: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V194 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x237: M[V188] = V194
0x238: V195 = 0x20
0x23a: V196 = ADD 0x20 V188
0x23b: V197 = 0x40
0x23d: V198 = M[0x40]
0x240: V199 = SUB V196 V198
0x242: RETURN V198 V199
---
Entry stack: [V12, 0x227, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x227]

================================

Block 0x243
[0x243:0x249]
---
Predecessors: [0x46]
Successors: [0x24a, 0x24e]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x243: JUMPDEST 
0x244: V200 = CALLVALUE
0x245: V201 = ISZERO V200
0x246: V202 = 0x24e
0x249: JUMPI 0x24e V201
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x243]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V203 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24e
[0x24e:0x255]
---
Predecessors: [0x243]
Successors: [0x94e]
---
0x24e JUMPDEST
0x24f PUSH2 0x18e
0x252 PUSH2 0x94e
0x255 JUMP
---
0x24e: JUMPDEST 
0x24f: V204 = 0x18e
0x252: V205 = 0x94e
0x255: JUMP 0x94e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18e]
Exit stack: [V12, 0x18e]

================================

Block 0x256
[0x256:0x257]
---
Predecessors: []
Successors: []
---
0x256 JUMPDEST
0x257 STOP
---
0x256: JUMPDEST 
0x257: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x258
[0x258:0x25e]
---
Predecessors: [0x51]
Successors: [0x25f, 0x263]
---
0x258 JUMPDEST
0x259 CALLVALUE
0x25a ISZERO
0x25b PUSH2 0x263
0x25e JUMPI
---
0x258: JUMPDEST 
0x259: V206 = CALLVALUE
0x25a: V207 = ISZERO V206
0x25b: V208 = 0x263
0x25e: JUMPI 0x263 V207
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x258]
Successors: []
---
0x25f PUSH1 0x0
0x261 DUP1
0x262 REVERT
---
0x25f: V209 = 0x0
0x262: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x263
[0x263:0x26a]
---
Predecessors: [0x258]
Successors: [0xa34]
---
0x263 JUMPDEST
0x264 PUSH2 0x1a3
0x267 PUSH2 0xa34
0x26a JUMP
---
0x263: JUMPDEST 
0x264: V210 = 0x1a3
0x267: V211 = 0xa34
0x26a: JUMP 0xa34
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3]
Exit stack: [V12, 0x1a3]

================================

Block 0x26b
[0x26b:0x27c]
---
Predecessors: []
Successors: []
---
0x26b JUMPDEST
0x26c PUSH1 0x40
0x26e MLOAD
0x26f SWAP1
0x270 DUP2
0x271 MSTORE
0x272 PUSH1 0x20
0x274 ADD
0x275 PUSH1 0x40
0x277 MLOAD
0x278 DUP1
0x279 SWAP2
0x27a SUB
0x27b SWAP1
0x27c RETURN
---
0x26b: JUMPDEST 
0x26c: V212 = 0x40
0x26e: V213 = M[0x40]
0x271: M[V213] = S0
0x272: V214 = 0x20
0x274: V215 = ADD 0x20 V213
0x275: V216 = 0x40
0x277: V217 = M[0x40]
0x27a: V218 = SUB V215 V217
0x27c: RETURN V217 V218
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x27d
[0x27d:0x283]
---
Predecessors: [0x5c]
Successors: [0x284, 0x288]
---
0x27d JUMPDEST
0x27e CALLVALUE
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27d: JUMPDEST 
0x27e: V219 = CALLVALUE
0x27f: V220 = ISZERO V219
0x280: V221 = 0x288
0x283: JUMPI 0x288 V220
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27d]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V222 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x288
[0x288:0x292]
---
Predecessors: [0x27d]
Successors: [0xa3a]
---
0x288 JUMPDEST
0x289 PUSH2 0x18e
0x28c PUSH1 0x4
0x28e CALLDATALOAD
0x28f PUSH2 0xa3a
0x292 JUMP
---
0x288: JUMPDEST 
0x289: V223 = 0x18e
0x28c: V224 = 0x4
0x28e: V225 = CALLDATALOAD 0x4
0x28f: V226 = 0xa3a
0x292: JUMP 0xa3a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18e, V225]
Exit stack: [V12, 0x18e, V225]

================================

Block 0x293
[0x293:0x294]
---
Predecessors: []
Successors: []
---
0x293 JUMPDEST
0x294 STOP
---
0x293: JUMPDEST 
0x294: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x295
[0x295:0x29b]
---
Predecessors: [0x67]
Successors: [0x29c, 0x2a0]
---
0x295 JUMPDEST
0x296 CALLVALUE
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x295: JUMPDEST 
0x296: V227 = CALLVALUE
0x297: V228 = ISZERO V227
0x298: V229 = 0x2a0
0x29b: JUMPI 0x2a0 V228
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x295]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V230 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x295]
Successors: [0xaad]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x227
0x2a4 PUSH2 0xaad
0x2a7 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V231 = 0x227
0x2a4: V232 = 0xaad
0x2a7: JUMP 0xaad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V12, 0x227]

================================

Block 0x2a8
[0x2a8:0x2c3]
---
Predecessors: []
Successors: []
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac PUSH1 0x1
0x2ae PUSH1 0xa0
0x2b0 PUSH1 0x2
0x2b2 EXP
0x2b3 SUB
0x2b4 SWAP1
0x2b5 SWAP2
0x2b6 AND
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf DUP1
0x2c0 SWAP2
0x2c1 SUB
0x2c2 SWAP1
0x2c3 RETURN
---
0x2a8: JUMPDEST 
0x2a9: V233 = 0x40
0x2ab: V234 = M[0x40]
0x2ac: V235 = 0x1
0x2ae: V236 = 0xa0
0x2b0: V237 = 0x2
0x2b2: V238 = EXP 0x2 0xa0
0x2b3: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V240 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: M[V234] = V240
0x2b9: V241 = 0x20
0x2bb: V242 = ADD 0x20 V234
0x2bc: V243 = 0x40
0x2be: V244 = M[0x40]
0x2c1: V245 = SUB V242 V244
0x2c3: RETURN V244 V245
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c4
[0x2c4:0x2ca]
---
Predecessors: [0x72]
Successors: [0x2cb, 0x2cf]
---
0x2c4 JUMPDEST
0x2c5 CALLVALUE
0x2c6 ISZERO
0x2c7 PUSH2 0x2cf
0x2ca JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V246 = CALLVALUE
0x2c6: V247 = ISZERO V246
0x2c7: V248 = 0x2cf
0x2ca: JUMPI 0x2cf V247
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x2c4]
Successors: []
---
0x2cb PUSH1 0x0
0x2cd DUP1
0x2ce REVERT
---
0x2cb: V249 = 0x0
0x2ce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cf
[0x2cf:0x2d6]
---
Predecessors: [0x2c4]
Successors: [0xabc]
---
0x2cf JUMPDEST
0x2d0 PUSH2 0x1a3
0x2d3 PUSH2 0xabc
0x2d6 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V250 = 0x1a3
0x2d3: V251 = 0xabc
0x2d6: JUMP 0xabc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3]
Exit stack: [V12, 0x1a3]

================================

Block 0x2d7
[0x2d7:0x2e8]
---
Predecessors: []
Successors: []
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db SWAP1
0x2dc DUP2
0x2dd MSTORE
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP1
0x2e5 SWAP2
0x2e6 SUB
0x2e7 SWAP1
0x2e8 RETURN
---
0x2d7: JUMPDEST 
0x2d8: V252 = 0x40
0x2da: V253 = M[0x40]
0x2dd: M[V253] = S0
0x2de: V254 = 0x20
0x2e0: V255 = ADD 0x20 V253
0x2e1: V256 = 0x40
0x2e3: V257 = M[0x40]
0x2e6: V258 = SUB V255 V257
0x2e8: RETURN V257 V258
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e9
[0x2e9:0x2ef]
---
Predecessors: [0x7d]
Successors: [0x2f0, 0x2f4]
---
0x2e9 JUMPDEST
0x2ea CALLVALUE
0x2eb ISZERO
0x2ec PUSH2 0x2f4
0x2ef JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V259 = CALLVALUE
0x2eb: V260 = ISZERO V259
0x2ec: V261 = 0x2f4
0x2ef: JUMPI 0x2f4 V260
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2e9]
Successors: []
---
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 REVERT
---
0x2f0: V262 = 0x0
0x2f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f4
[0x2f4:0x2fb]
---
Predecessors: [0x2e9]
Successors: [0xac2]
---
0x2f4 JUMPDEST
0x2f5 PUSH2 0x1a3
0x2f8 PUSH2 0xac2
0x2fb JUMP
---
0x2f4: JUMPDEST 
0x2f5: V263 = 0x1a3
0x2f8: V264 = 0xac2
0x2fb: JUMP 0xac2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3]
Exit stack: [V12, 0x1a3]

================================

Block 0x2fc
[0x2fc:0x30d]
---
Predecessors: []
Successors: []
---
0x2fc JUMPDEST
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 SWAP1
0x301 DUP2
0x302 MSTORE
0x303 PUSH1 0x20
0x305 ADD
0x306 PUSH1 0x40
0x308 MLOAD
0x309 DUP1
0x30a SWAP2
0x30b SUB
0x30c SWAP1
0x30d RETURN
---
0x2fc: JUMPDEST 
0x2fd: V265 = 0x40
0x2ff: V266 = M[0x40]
0x302: M[V266] = S0
0x303: V267 = 0x20
0x305: V268 = ADD 0x20 V266
0x306: V269 = 0x40
0x308: V270 = M[0x40]
0x30b: V271 = SUB V268 V270
0x30d: RETURN V270 V271
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0x88]
Successors: [0x315, 0x319]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x319
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V272 = CALLVALUE
0x310: V273 = ISZERO V272
0x311: V274 = 0x319
0x314: JUMPI 0x319 V273
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x30e]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V275 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x319
[0x319:0x320]
---
Predecessors: [0x30e]
Successors: [0xb05]
---
0x319 JUMPDEST
0x31a PUSH2 0x1a3
0x31d PUSH2 0xb05
0x320 JUMP
---
0x319: JUMPDEST 
0x31a: V276 = 0x1a3
0x31d: V277 = 0xb05
0x320: JUMP 0xb05
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3]
Exit stack: [V12, 0x1a3]

================================

Block 0x321
[0x321:0x332]
---
Predecessors: []
Successors: []
---
0x321 JUMPDEST
0x322 PUSH1 0x40
0x324 MLOAD
0x325 SWAP1
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a ADD
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f SWAP2
0x330 SUB
0x331 SWAP1
0x332 RETURN
---
0x321: JUMPDEST 
0x322: V278 = 0x40
0x324: V279 = M[0x40]
0x327: M[V279] = S0
0x328: V280 = 0x20
0x32a: V281 = ADD 0x20 V279
0x32b: V282 = 0x40
0x32d: V283 = M[0x40]
0x330: V284 = SUB V281 V283
0x332: RETURN V283 V284
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x333
[0x333:0x339]
---
Predecessors: [0x93]
Successors: [0x33a, 0x33e]
---
0x333 JUMPDEST
0x334 CALLVALUE
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x333: JUMPDEST 
0x334: V285 = CALLVALUE
0x335: V286 = ISZERO V285
0x336: V287 = 0x33e
0x339: JUMPI 0x33e V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x333]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V288 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33e
[0x33e:0x345]
---
Predecessors: [0x333]
Successors: [0xb0b]
---
0x33e JUMPDEST
0x33f PUSH2 0x227
0x342 PUSH2 0xb0b
0x345 JUMP
---
0x33e: JUMPDEST 
0x33f: V289 = 0x227
0x342: V290 = 0xb0b
0x345: JUMP 0xb0b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V12, 0x227]

================================

Block 0x346
[0x346:0x361]
---
Predecessors: []
Successors: []
---
0x346 JUMPDEST
0x347 PUSH1 0x40
0x349 MLOAD
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 SWAP1
0x353 SWAP2
0x354 AND
0x355 DUP2
0x356 MSTORE
0x357 PUSH1 0x20
0x359 ADD
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e SWAP2
0x35f SUB
0x360 SWAP1
0x361 RETURN
---
0x346: JUMPDEST 
0x347: V291 = 0x40
0x349: V292 = M[0x40]
0x34a: V293 = 0x1
0x34c: V294 = 0xa0
0x34e: V295 = 0x2
0x350: V296 = EXP 0x2 0xa0
0x351: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x354: V298 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x356: M[V292] = V298
0x357: V299 = 0x20
0x359: V300 = ADD 0x20 V292
0x35a: V301 = 0x40
0x35c: V302 = M[0x40]
0x35f: V303 = SUB V300 V302
0x361: RETURN V302 V303
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x362
[0x362:0x368]
---
Predecessors: [0x9e]
Successors: [0x369, 0x36d]
---
0x362 JUMPDEST
0x363 CALLVALUE
0x364 ISZERO
0x365 PUSH2 0x36d
0x368 JUMPI
---
0x362: JUMPDEST 
0x363: V304 = CALLVALUE
0x364: V305 = ISZERO V304
0x365: V306 = 0x36d
0x368: JUMPI 0x36d V305
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x369
[0x369:0x36c]
---
Predecessors: [0x362]
Successors: []
---
0x369 PUSH1 0x0
0x36b DUP1
0x36c REVERT
---
0x369: V307 = 0x0
0x36c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36d
[0x36d:0x374]
---
Predecessors: [0x362]
Successors: [0xb1a]
---
0x36d JUMPDEST
0x36e PUSH2 0x227
0x371 PUSH2 0xb1a
0x374 JUMP
---
0x36d: JUMPDEST 
0x36e: V308 = 0x227
0x371: V309 = 0xb1a
0x374: JUMP 0xb1a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V12, 0x227]

================================

Block 0x375
[0x375:0x390]
---
Predecessors: []
Successors: []
---
0x375 JUMPDEST
0x376 PUSH1 0x40
0x378 MLOAD
0x379 PUSH1 0x1
0x37b PUSH1 0xa0
0x37d PUSH1 0x2
0x37f EXP
0x380 SUB
0x381 SWAP1
0x382 SWAP2
0x383 AND
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x20
0x388 ADD
0x389 PUSH1 0x40
0x38b MLOAD
0x38c DUP1
0x38d SWAP2
0x38e SUB
0x38f SWAP1
0x390 RETURN
---
0x375: JUMPDEST 
0x376: V310 = 0x40
0x378: V311 = M[0x40]
0x379: V312 = 0x1
0x37b: V313 = 0xa0
0x37d: V314 = 0x2
0x37f: V315 = EXP 0x2 0xa0
0x380: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x383: V317 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x385: M[V311] = V317
0x386: V318 = 0x20
0x388: V319 = ADD 0x20 V311
0x389: V320 = 0x40
0x38b: V321 = M[0x40]
0x38e: V322 = SUB V319 V321
0x390: RETURN V321 V322
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x391
[0x391:0x397]
---
Predecessors: [0xa9]
Successors: [0x398, 0x39c]
---
0x391 JUMPDEST
0x392 CALLVALUE
0x393 ISZERO
0x394 PUSH2 0x39c
0x397 JUMPI
---
0x391: JUMPDEST 
0x392: V323 = CALLVALUE
0x393: V324 = ISZERO V323
0x394: V325 = 0x39c
0x397: JUMPI 0x39c V324
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x398
[0x398:0x39b]
---
Predecessors: [0x391]
Successors: []
---
0x398 PUSH1 0x0
0x39a DUP1
0x39b REVERT
---
0x398: V326 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39c
[0x39c:0x3a3]
---
Predecessors: [0x391]
Successors: [0xb29]
---
0x39c JUMPDEST
0x39d PUSH2 0x227
0x3a0 PUSH2 0xb29
0x3a3 JUMP
---
0x39c: JUMPDEST 
0x39d: V327 = 0x227
0x3a0: V328 = 0xb29
0x3a3: JUMP 0xb29
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V12, 0x227]

================================

Block 0x3a4
[0x3a4:0x3bf]
---
Predecessors: []
Successors: []
---
0x3a4 JUMPDEST
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 PUSH1 0x1
0x3aa PUSH1 0xa0
0x3ac PUSH1 0x2
0x3ae EXP
0x3af SUB
0x3b0 SWAP1
0x3b1 SWAP2
0x3b2 AND
0x3b3 DUP2
0x3b4 MSTORE
0x3b5 PUSH1 0x20
0x3b7 ADD
0x3b8 PUSH1 0x40
0x3ba MLOAD
0x3bb DUP1
0x3bc SWAP2
0x3bd SUB
0x3be SWAP1
0x3bf RETURN
---
0x3a4: JUMPDEST 
0x3a5: V329 = 0x40
0x3a7: V330 = M[0x40]
0x3a8: V331 = 0x1
0x3aa: V332 = 0xa0
0x3ac: V333 = 0x2
0x3ae: V334 = EXP 0x2 0xa0
0x3af: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b2: V336 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: M[V330] = V336
0x3b5: V337 = 0x20
0x3b7: V338 = ADD 0x20 V330
0x3b8: V339 = 0x40
0x3ba: V340 = M[0x40]
0x3bd: V341 = SUB V338 V340
0x3bf: RETURN V340 V341
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c0
[0x3c0:0x3c6]
---
Predecessors: [0xb4]
Successors: [0x3c7, 0x3cb]
---
0x3c0 JUMPDEST
0x3c1 CALLVALUE
0x3c2 ISZERO
0x3c3 PUSH2 0x3cb
0x3c6 JUMPI
---
0x3c0: JUMPDEST 
0x3c1: V342 = CALLVALUE
0x3c2: V343 = ISZERO V342
0x3c3: V344 = 0x3cb
0x3c6: JUMPI 0x3cb V343
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c7
[0x3c7:0x3ca]
---
Predecessors: [0x3c0]
Successors: []
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca REVERT
---
0x3c7: V345 = 0x0
0x3ca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cb
[0x3cb:0x3d2]
---
Predecessors: [0x3c0]
Successors: [0xb38]
---
0x3cb JUMPDEST
0x3cc PUSH2 0x3d3
0x3cf PUSH2 0xb38
0x3d2 JUMP
---
0x3cb: JUMPDEST 
0x3cc: V346 = 0x3d3
0x3cf: V347 = 0xb38
0x3d2: JUMP 0xb38
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3d3]
Exit stack: [V12, 0x3d3]

================================

Block 0x3d3
[0x3d3:0x3e1]
---
Predecessors: [0x5b2, 0x8c8, 0xb38, 0xbbb, 0x1076]
Successors: [0x3e2, 0x3e3]
---
0x3d3 JUMPDEST
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 DUP1
0x3d8 DUP3
0x3d9 PUSH1 0x4
0x3db DUP2
0x3dc GT
0x3dd ISZERO
0x3de PUSH2 0x3e3
0x3e1 JUMPI
---
0x3d3: JUMPDEST 
0x3d4: V348 = 0x40
0x3d6: V349 = M[0x40]
0x3d9: V350 = 0x4
0x3dc: V351 = GT S0 0x4
0x3dd: V352 = ISZERO V351
0x3de: V353 = 0x3e3
0x3e1: JUMPI 0x3e3 V352
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V349, V349, S0]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0, V349, V349, S0]

================================

Block 0x3e2
[0x3e2:0x3e2]
---
Predecessors: [0x3d3]
Successors: []
---
0x3e2 INVALID
---
0x3e2: INVALID 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, V349, V349, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, V349, V349, S0]

================================

Block 0x3e3
[0x3e3:0x3f6]
---
Predecessors: [0x3d3, 0x40a]
Successors: []
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0xff
0x3e6 AND
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x20
0x3eb ADD
0x3ec SWAP2
0x3ed POP
0x3ee POP
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 SWAP2
0x3f4 SUB
0x3f5 SWAP1
0x3f6 RETURN
---
0x3e3: JUMPDEST 
0x3e4: V354 = 0xff
0x3e6: V355 = AND 0xff S0
0x3e8: M[S1] = V355
0x3e9: V356 = 0x20
0x3eb: V357 = ADD 0x20 S1
0x3ef: V358 = 0x40
0x3f1: V359 = M[0x40]
0x3f4: V360 = SUB V357 V359
0x3f6: RETURN V359 V360
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x3f7
[0x3f7:0x3fd]
---
Predecessors: [0xbf]
Successors: [0x3fe, 0x402]
---
0x3f7 JUMPDEST
0x3f8 CALLVALUE
0x3f9 ISZERO
0x3fa PUSH2 0x402
0x3fd JUMPI
---
0x3f7: JUMPDEST 
0x3f8: V361 = CALLVALUE
0x3f9: V362 = ISZERO V361
0x3fa: V363 = 0x402
0x3fd: JUMPI 0x402 V362
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fe
[0x3fe:0x401]
---
Predecessors: [0x3f7]
Successors: []
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
---
0x3fe: V364 = 0x0
0x401: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x402
[0x402:0x409]
---
Predecessors: [0x3f7]
Successors: [0xb41]
---
0x402 JUMPDEST
0x403 PUSH2 0x3d3
0x406 PUSH2 0xb41
0x409 JUMP
---
0x402: JUMPDEST 
0x403: V365 = 0x3d3
0x406: V366 = 0xb41
0x409: JUMP 0xb41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3d3]
Exit stack: [V12, 0x3d3]

================================

Block 0x40a
[0x40a:0x418]
---
Predecessors: []
Successors: [0x3e3, 0x419]
---
0x40a JUMPDEST
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f DUP3
0x410 PUSH1 0x4
0x412 DUP2
0x413 GT
0x414 ISZERO
0x415 PUSH2 0x3e3
0x418 JUMPI
---
0x40a: JUMPDEST 
0x40b: V367 = 0x40
0x40d: V368 = M[0x40]
0x410: V369 = 0x4
0x413: V370 = GT S0 0x4
0x414: V371 = ISZERO V370
0x415: V372 = 0x3e3
0x418: JUMPI 0x3e3 V371
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V368, V368, S0]
Exit stack: [S0, V368, V368, S0]

================================

Block 0x419
[0x419:0x42d]
---
Predecessors: [0x40a]
Successors: []
---
0x419 INVALID
0x41a JUMPDEST
0x41b PUSH1 0xff
0x41d AND
0x41e DUP2
0x41f MSTORE
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP2
0x424 POP
0x425 POP
0x426 PUSH1 0x40
0x428 MLOAD
0x429 DUP1
0x42a SWAP2
0x42b SUB
0x42c SWAP1
0x42d RETURN
---
0x419: INVALID 
0x41a: JUMPDEST 
0x41b: V373 = 0xff
0x41d: V374 = AND 0xff S0
0x41f: M[S1] = V374
0x420: V375 = 0x20
0x422: V376 = ADD 0x20 S1
0x426: V377 = 0x40
0x428: V378 = M[0x40]
0x42b: V379 = SUB V376 V378
0x42d: RETURN V378 V379
---
Entry stack: [S3, V368, V368, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42e
[0x42e:0x434]
---
Predecessors: [0xca]
Successors: [0x435, 0x439]
---
0x42e JUMPDEST
0x42f CALLVALUE
0x430 ISZERO
0x431 PUSH2 0x439
0x434 JUMPI
---
0x42e: JUMPDEST 
0x42f: V380 = CALLVALUE
0x430: V381 = ISZERO V380
0x431: V382 = 0x439
0x434: JUMPI 0x439 V381
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x435
[0x435:0x438]
---
Predecessors: [0x42e]
Successors: []
---
0x435 PUSH1 0x0
0x437 DUP1
0x438 REVERT
---
0x435: V383 = 0x0
0x438: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x439
[0x439:0x45e]
---
Predecessors: [0x42e]
Successors: [0xbbe]
---
0x439 JUMPDEST
0x43a PUSH2 0x18e
0x43d PUSH1 0x1
0x43f PUSH1 0xa0
0x441 PUSH1 0x2
0x443 EXP
0x444 SUB
0x445 PUSH1 0x4
0x447 CALLDATALOAD
0x448 DUP2
0x449 AND
0x44a SWAP1
0x44b PUSH1 0x24
0x44d CALLDATALOAD
0x44e DUP2
0x44f AND
0x450 SWAP1
0x451 PUSH1 0x44
0x453 CALLDATALOAD
0x454 AND
0x455 PUSH1 0x64
0x457 CALLDATALOAD
0x458 PUSH1 0x84
0x45a CALLDATALOAD
0x45b PUSH2 0xbbe
0x45e JUMP
---
0x439: JUMPDEST 
0x43a: V384 = 0x18e
0x43d: V385 = 0x1
0x43f: V386 = 0xa0
0x441: V387 = 0x2
0x443: V388 = EXP 0x2 0xa0
0x444: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x445: V390 = 0x4
0x447: V391 = CALLDATALOAD 0x4
0x449: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x44b: V393 = 0x24
0x44d: V394 = CALLDATALOAD 0x24
0x44f: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x451: V396 = 0x44
0x453: V397 = CALLDATALOAD 0x44
0x454: V398 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x455: V399 = 0x64
0x457: V400 = CALLDATALOAD 0x64
0x458: V401 = 0x84
0x45a: V402 = CALLDATALOAD 0x84
0x45b: V403 = 0xbbe
0x45e: JUMP 0xbbe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18e, V392, V395, V398, V400, V402]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402]

================================

Block 0x45f
[0x45f:0x460]
---
Predecessors: []
Successors: []
---
0x45f JUMPDEST
0x460 STOP
---
0x45f: JUMPDEST 
0x460: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x461
[0x461:0x467]
---
Predecessors: [0xd5]
Successors: [0x468, 0x46c]
---
0x461 JUMPDEST
0x462 CALLVALUE
0x463 ISZERO
0x464 PUSH2 0x46c
0x467 JUMPI
---
0x461: JUMPDEST 
0x462: V404 = CALLVALUE
0x463: V405 = ISZERO V404
0x464: V406 = 0x46c
0x467: JUMPI 0x46c V405
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x468
[0x468:0x46b]
---
Predecessors: [0x461]
Successors: []
---
0x468 PUSH1 0x0
0x46a DUP1
0x46b REVERT
---
0x468: V407 = 0x0
0x46b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x46c
[0x46c:0x476]
---
Predecessors: [0x461]
Successors: [0xe3c]
---
0x46c JUMPDEST
0x46d PUSH2 0x18e
0x470 PUSH1 0x4
0x472 CALLDATALOAD
0x473 PUSH2 0xe3c
0x476 JUMP
---
0x46c: JUMPDEST 
0x46d: V408 = 0x18e
0x470: V409 = 0x4
0x472: V410 = CALLDATALOAD 0x4
0x473: V411 = 0xe3c
0x476: JUMP 0xe3c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18e, V410]
Exit stack: [V12, 0x18e, V410]

================================

Block 0x477
[0x477:0x478]
---
Predecessors: []
Successors: []
---
0x477 JUMPDEST
0x478 STOP
---
0x477: JUMPDEST 
0x478: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x479
[0x479:0x480]
---
Predecessors: [0xe0]
Successors: [0x5b5]
---
0x479 JUMPDEST
0x47a PUSH2 0x18e
0x47d PUSH2 0x5b5
0x480 JUMP
---
0x479: JUMPDEST 
0x47a: V412 = 0x18e
0x47d: V413 = 0x5b5
0x480: JUMP 0x5b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18e]
Exit stack: [V12, 0x18e]

================================

Block 0x481
[0x481:0x482]
---
Predecessors: []
Successors: []
---
0x481 JUMPDEST
0x482 STOP
---
0x481: JUMPDEST 
0x482: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x483
[0x483:0x494]
---
Predecessors: [0x156, 0x63b, 0x87e, 0x9d0, 0xbaa, 0xec9, 0x1036]
Successors: [0x495]
---
0x483 JUMPDEST
0x484 PUSH1 0x12
0x486 DUP1
0x487 SLOAD
0x488 PUSH1 0x0
0x48a SWAP2
0x48b PUSH1 0x4
0x48d SWAP2
0x48e PUSH1 0xff
0x490 NOT
0x491 AND
0x492 PUSH1 0x1
0x494 DUP4
---
0x483: JUMPDEST 
0x484: V414 = 0x12
0x487: V415 = S[0x12]
0x488: V416 = 0x0
0x48b: V417 = 0x4
0x48e: V418 = 0xff
0x490: V419 = NOT 0xff
0x491: V420 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V415
0x492: V421 = 0x1
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}]
Stack pops: 0
Stack additions: [0x0, 0x4, 0x12, V420, 0x1, 0x4]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, 0x4, 0x12, V420, 0x1, 0x4]

================================

Block 0x495
[0x495:0x4ee]
---
Predecessors: [0x483]
Successors: [0x4ef, 0x4f3]
---
0x495 JUMPDEST
0x496 MUL
0x497 OR
0x498 SWAP1
0x499 SSTORE
0x49a POP
0x49b PUSH1 0x6
0x49d SLOAD
0x49e PUSH1 0x1
0x4a0 PUSH1 0xa0
0x4a2 PUSH1 0x2
0x4a4 EXP
0x4a5 SUB
0x4a6 AND
0x4a7 PUSH4 0x70a08231
0x4ac ADDRESS
0x4ad PUSH1 0x0
0x4af PUSH1 0x40
0x4b1 MLOAD
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 MSTORE
0x4b6 PUSH1 0x40
0x4b8 MLOAD
0x4b9 PUSH1 0xe0
0x4bb PUSH1 0x2
0x4bd EXP
0x4be PUSH4 0xffffffff
0x4c3 DUP5
0x4c4 AND
0x4c5 MUL
0x4c6 DUP2
0x4c7 MSTORE
0x4c8 PUSH1 0x1
0x4ca PUSH1 0xa0
0x4cc PUSH1 0x2
0x4ce EXP
0x4cf SUB
0x4d0 SWAP1
0x4d1 SWAP2
0x4d2 AND
0x4d3 PUSH1 0x4
0x4d5 DUP3
0x4d6 ADD
0x4d7 MSTORE
0x4d8 PUSH1 0x24
0x4da ADD
0x4db PUSH1 0x20
0x4dd PUSH1 0x40
0x4df MLOAD
0x4e0 DUP1
0x4e1 DUP4
0x4e2 SUB
0x4e3 DUP2
0x4e4 PUSH1 0x0
0x4e6 DUP8
0x4e7 DUP1
0x4e8 EXTCODESIZE
0x4e9 ISZERO
0x4ea ISZERO
0x4eb PUSH2 0x4f3
0x4ee JUMPI
---
0x495: JUMPDEST 
0x496: V422 = MUL 0x4 0x1
0x497: V423 = OR 0x4 V420
0x499: S[0x12] = V423
0x49b: V424 = 0x6
0x49d: V425 = S[0x6]
0x49e: V426 = 0x1
0x4a0: V427 = 0xa0
0x4a2: V428 = 0x2
0x4a4: V429 = EXP 0x2 0xa0
0x4a5: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a6: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4a7: V432 = 0x70a08231
0x4ac: V433 = ADDRESS
0x4ad: V434 = 0x0
0x4af: V435 = 0x40
0x4b1: V436 = M[0x40]
0x4b2: V437 = 0x20
0x4b4: V438 = ADD 0x20 V436
0x4b5: M[V438] = 0x0
0x4b6: V439 = 0x40
0x4b8: V440 = M[0x40]
0x4b9: V441 = 0xe0
0x4bb: V442 = 0x2
0x4bd: V443 = EXP 0x2 0xe0
0x4be: V444 = 0xffffffff
0x4c4: V445 = AND 0x70a08231 0xffffffff
0x4c5: V446 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x4c7: M[V440] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4c8: V447 = 0x1
0x4ca: V448 = 0xa0
0x4cc: V449 = 0x2
0x4ce: V450 = EXP 0x2 0xa0
0x4cf: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d2: V452 = AND V433 0xffffffffffffffffffffffffffffffffffffffff
0x4d3: V453 = 0x4
0x4d6: V454 = ADD V440 0x4
0x4d7: M[V454] = V452
0x4d8: V455 = 0x24
0x4da: V456 = ADD 0x24 V440
0x4db: V457 = 0x20
0x4dd: V458 = 0x40
0x4df: V459 = M[0x40]
0x4e2: V460 = SUB V456 V459
0x4e4: V461 = 0x0
0x4e8: V462 = EXTCODESIZE V431
0x4e9: V463 = ISZERO V462
0x4ea: V464 = ISZERO V463
0x4eb: V465 = 0x4f3
0x4ee: JUMPI 0x4f3 V464
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, 0x4, 0x12, V420, 0x1, 0x4]
Stack pops: 5
Stack additions: [V431, 0x70a08231, V456, 0x20, V459, V460, V459, 0x0, V431]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, V431, 0x70a08231, V456, 0x20, V459, V460, V459, 0x0, V431]

================================

Block 0x4ef
[0x4ef:0x4f2]
---
Predecessors: [0x495]
Successors: []
---
0x4ef PUSH1 0x0
0x4f1 DUP1
0x4f2 REVERT
---
0x4ef: V466 = 0x0
0x4f2: REVERT 0x0 0x0
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, V431, 0x70a08231, V456, 0x20, V459, V460, V459, 0x0, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, V431, 0x70a08231, V456, 0x20, V459, V460, V459, 0x0, V431]

================================

Block 0x4f3
[0x4f3:0x4ff]
---
Predecessors: [0x495]
Successors: [0x500, 0x504]
---
0x4f3 JUMPDEST
0x4f4 PUSH2 0x2c6
0x4f7 GAS
0x4f8 SUB
0x4f9 CALL
0x4fa ISZERO
0x4fb ISZERO
0x4fc PUSH2 0x504
0x4ff JUMPI
---
0x4f3: JUMPDEST 
0x4f4: V467 = 0x2c6
0x4f7: V468 = GAS
0x4f8: V469 = SUB V468 0x2c6
0x4f9: V470 = CALL V469 V431 0x0 V459 V460 V459 0x20
0x4fa: V471 = ISZERO V470
0x4fb: V472 = ISZERO V471
0x4fc: V473 = 0x504
0x4ff: JUMPI 0x504 V472
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, V431, 0x70a08231, V456, 0x20, V459, V460, V459, 0x0, V431]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, V431, 0x70a08231, V456]

================================

Block 0x500
[0x500:0x503]
---
Predecessors: [0x4f3]
Successors: []
---
0x500 PUSH1 0x0
0x502 DUP1
0x503 REVERT
---
0x500: V474 = 0x0
0x503: REVERT 0x0 0x0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, V431, 0x70a08231, V456]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, V431, 0x70a08231, V456]

================================

Block 0x504
[0x504:0x55d]
---
Predecessors: [0x4f3]
Successors: [0x55e, 0x562]
---
0x504 JUMPDEST
0x505 POP
0x506 POP
0x507 POP
0x508 PUSH1 0x40
0x50a MLOAD
0x50b DUP1
0x50c MLOAD
0x50d PUSH1 0x6
0x50f SLOAD
0x510 SWAP1
0x511 SWAP3
0x512 POP
0x513 PUSH1 0x1
0x515 PUSH1 0xa0
0x517 PUSH1 0x2
0x519 EXP
0x51a SUB
0x51b AND
0x51c SWAP1
0x51d POP
0x51e PUSH4 0x42966c68
0x523 DUP3
0x524 PUSH1 0x0
0x526 PUSH1 0x40
0x528 MLOAD
0x529 PUSH1 0x20
0x52b ADD
0x52c MSTORE
0x52d PUSH1 0x40
0x52f MLOAD
0x530 PUSH1 0xe0
0x532 PUSH1 0x2
0x534 EXP
0x535 PUSH4 0xffffffff
0x53a DUP5
0x53b AND
0x53c MUL
0x53d DUP2
0x53e MSTORE
0x53f PUSH1 0x4
0x541 DUP2
0x542 ADD
0x543 SWAP2
0x544 SWAP1
0x545 SWAP2
0x546 MSTORE
0x547 PUSH1 0x24
0x549 ADD
0x54a PUSH1 0x20
0x54c PUSH1 0x40
0x54e MLOAD
0x54f DUP1
0x550 DUP4
0x551 SUB
0x552 DUP2
0x553 PUSH1 0x0
0x555 DUP8
0x556 DUP1
0x557 EXTCODESIZE
0x558 ISZERO
0x559 ISZERO
0x55a PUSH2 0x562
0x55d JUMPI
---
0x504: JUMPDEST 
0x508: V475 = 0x40
0x50a: V476 = M[0x40]
0x50c: V477 = M[V476]
0x50d: V478 = 0x6
0x50f: V479 = S[0x6]
0x513: V480 = 0x1
0x515: V481 = 0xa0
0x517: V482 = 0x2
0x519: V483 = EXP 0x2 0xa0
0x51a: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51b: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x51e: V486 = 0x42966c68
0x524: V487 = 0x0
0x526: V488 = 0x40
0x528: V489 = M[0x40]
0x529: V490 = 0x20
0x52b: V491 = ADD 0x20 V489
0x52c: M[V491] = 0x0
0x52d: V492 = 0x40
0x52f: V493 = M[0x40]
0x530: V494 = 0xe0
0x532: V495 = 0x2
0x534: V496 = EXP 0x2 0xe0
0x535: V497 = 0xffffffff
0x53b: V498 = AND 0x42966c68 0xffffffff
0x53c: V499 = MUL 0x42966c68 0x100000000000000000000000000000000000000000000000000000000
0x53e: M[V493] = 0x42966c6800000000000000000000000000000000000000000000000000000000
0x53f: V500 = 0x4
0x542: V501 = ADD V493 0x4
0x546: M[V501] = V477
0x547: V502 = 0x24
0x549: V503 = ADD 0x24 V493
0x54a: V504 = 0x20
0x54c: V505 = 0x40
0x54e: V506 = M[0x40]
0x551: V507 = SUB V503 V506
0x553: V508 = 0x0
0x557: V509 = EXTCODESIZE V485
0x558: V510 = ISZERO V509
0x559: V511 = ISZERO V510
0x55a: V512 = 0x562
0x55d: JUMPI 0x562 V511
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, 0x0, V431, 0x70a08231, V456]
Stack pops: 4
Stack additions: [V477, V485, 0x42966c68, V503, 0x20, V506, V507, V506, 0x0, V485]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477, V485, 0x42966c68, V503, 0x20, V506, V507, V506, 0x0, V485]

================================

Block 0x55e
[0x55e:0x561]
---
Predecessors: [0x504]
Successors: []
---
0x55e PUSH1 0x0
0x560 DUP1
0x561 REVERT
---
0x55e: V513 = 0x0
0x561: REVERT 0x0 0x0
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477, V485, 0x42966c68, V503, 0x20, V506, V507, V506, 0x0, V485]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477, V485, 0x42966c68, V503, 0x20, V506, V507, V506, 0x0, V485]

================================

Block 0x562
[0x562:0x56e]
---
Predecessors: [0x504]
Successors: [0x56f, 0x573]
---
0x562 JUMPDEST
0x563 PUSH2 0x2c6
0x566 GAS
0x567 SUB
0x568 CALL
0x569 ISZERO
0x56a ISZERO
0x56b PUSH2 0x573
0x56e JUMPI
---
0x562: JUMPDEST 
0x563: V514 = 0x2c6
0x566: V515 = GAS
0x567: V516 = SUB V515 0x2c6
0x568: V517 = CALL V516 V485 0x0 V506 V507 V506 0x20
0x569: V518 = ISZERO V517
0x56a: V519 = ISZERO V518
0x56b: V520 = 0x573
0x56e: JUMPI 0x573 V519
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477, V485, 0x42966c68, V503, 0x20, V506, V507, V506, 0x0, V485]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477, V485, 0x42966c68, V503]

================================

Block 0x56f
[0x56f:0x572]
---
Predecessors: [0x562]
Successors: []
---
0x56f PUSH1 0x0
0x571 DUP1
0x572 REVERT
---
0x56f: V521 = 0x0
0x572: REVERT 0x0 0x0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477, V485, 0x42966c68, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477, V485, 0x42966c68, V503]

================================

Block 0x573
[0x573:0x5b1]
---
Predecessors: [0x562]
Successors: [0x5b2]
---
0x573 JUMPDEST
0x574 POP
0x575 POP
0x576 POP
0x577 PUSH1 0x40
0x579 MLOAD
0x57a DUP1
0x57b MLOAD
0x57c SWAP1
0x57d POP
0x57e POP
0x57f PUSH32 0xbf75838e432c8f571bbeb07f5b72499d293b76cc6e9c39c1980f187945c7d939
0x5a0 DUP2
0x5a1 PUSH1 0x40
0x5a3 MLOAD
0x5a4 SWAP1
0x5a5 DUP2
0x5a6 MSTORE
0x5a7 PUSH1 0x20
0x5a9 ADD
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae SWAP2
0x5af SUB
0x5b0 SWAP1
0x5b1 LOG1
---
0x573: JUMPDEST 
0x577: V522 = 0x40
0x579: V523 = M[0x40]
0x57b: V524 = M[V523]
0x57f: V525 = 0xbf75838e432c8f571bbeb07f5b72499d293b76cc6e9c39c1980f187945c7d939
0x5a1: V526 = 0x40
0x5a3: V527 = M[0x40]
0x5a6: M[V527] = V477
0x5a7: V528 = 0x20
0x5a9: V529 = ADD 0x20 V527
0x5aa: V530 = 0x40
0x5ac: V531 = M[0x40]
0x5af: V532 = SUB V529 V531
0x5b1: LOG V531 V532 0xbf75838e432c8f571bbeb07f5b72499d293b76cc6e9c39c1980f187945c7d939
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477, V485, 0x42966c68, V503]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x15d, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d}, V477]

================================

Block 0x5b2
[0x5b2:0x5b4]
---
Predecessors: [0x573, 0x9f7]
Successors: [0x15d, 0x18e, 0x3d3, 0x642, 0x885, 0x9d7, 0xbb1, 0xed0, 0x103d]
---
0x5b2 JUMPDEST
0x5b3 POP
0x5b4 JUMP
---
0x5b2: JUMPDEST 
0x5b4: JUMP S1
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x5b5
[0x5b5:0x5c3]
---
Predecessors: [0x179, 0x479]
Successors: [0x5c4, 0x5c9]
---
0x5b5 JUMPDEST
0x5b6 PUSH1 0x0
0x5b8 DUP1
0x5b9 DUP1
0x5ba DUP1
0x5bb DUP1
0x5bc DUP1
0x5bd CALLDATASIZE
0x5be ISZERO
0x5bf DUP1
0x5c0 PUSH2 0x5c9
0x5c3 JUMPI
---
0x5b5: JUMPDEST 
0x5b6: V533 = 0x0
0x5bd: V534 = CALLDATASIZE
0x5be: V535 = ISZERO V534
0x5c0: V536 = 0x5c9
0x5c3: JUMPI 0x5c9 V535
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, {0x180, 0x18e}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V535]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V535]

================================

Block 0x5c4
[0x5c4:0x5c8]
---
Predecessors: [0x5b5]
Successors: [0x5c9]
---
0x5c4 POP
0x5c5 PUSH1 0x4
0x5c7 CALLDATASIZE
0x5c8 EQ
---
0x5c5: V537 = 0x4
0x5c7: V538 = CALLDATASIZE
0x5c8: V539 = EQ V538 0x4
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V535]
Stack pops: 1
Stack additions: [V539]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V539]

================================

Block 0x5c9
[0x5c9:0x5cf]
---
Predecessors: [0x5b5, 0x5c4]
Successors: [0x5d0, 0x5d4]
---
0x5c9 JUMPDEST
0x5ca ISZERO
0x5cb ISZERO
0x5cc PUSH2 0x5d4
0x5cf JUMPI
---
0x5c9: JUMPDEST 
0x5ca: V540 = ISZERO S0
0x5cb: V541 = ISZERO V540
0x5cc: V542 = 0x5d4
0x5cf: JUMPI 0x5d4 V541
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5d0
[0x5d0:0x5d3]
---
Predecessors: [0x5c9]
Successors: []
---
0x5d0 PUSH1 0x0
0x5d2 DUP1
0x5d3 REVERT
---
0x5d0: V543 = 0x0
0x5d3: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5d4
[0x5d4:0x5d6]
---
Predecessors: [0x5c9]
Successors: [0x5d7]
---
0x5d4 JUMPDEST
0x5d5 PUSH1 0x2
---
0x5d4: JUMPDEST 
0x5d5: V544 = 0x2
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2]

================================

Block 0x5d7
[0x5d7:0x5e6]
---
Predecessors: [0x5d4]
Successors: [0x5e7, 0x5e8]
---
0x5d7 JUMPDEST
0x5d8 PUSH1 0x12
0x5da SLOAD
0x5db PUSH1 0xff
0x5dd AND
0x5de PUSH1 0x4
0x5e0 DUP2
0x5e1 GT
0x5e2 ISZERO
0x5e3 PUSH2 0x5e8
0x5e6 JUMPI
---
0x5d7: JUMPDEST 
0x5d8: V545 = 0x12
0x5da: V546 = S[0x12]
0x5db: V547 = 0xff
0x5dd: V548 = AND 0xff V546
0x5de: V549 = 0x4
0x5e1: V550 = GT V548 0x4
0x5e2: V551 = ISZERO V550
0x5e3: V552 = 0x5e8
0x5e6: JUMPI 0x5e8 V551
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2]
Stack pops: 0
Stack additions: [V548]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V548]

================================

Block 0x5e7
[0x5e7:0x5e7]
---
Predecessors: [0x5d7]
Successors: []
---
0x5e7 INVALID
---
0x5e7: INVALID 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V548]

================================

Block 0x5e8
[0x5e8:0x5ef]
---
Predecessors: [0x5d7]
Successors: [0x5f0, 0x5f7]
---
0x5e8 JUMPDEST
0x5e9 EQ
0x5ea DUP1
0x5eb ISZERO
0x5ec PUSH2 0x5f7
0x5ef JUMPI
---
0x5e8: JUMPDEST 
0x5e9: V553 = EQ V548 0x2
0x5eb: V554 = ISZERO V553
0x5ec: V555 = 0x5f7
0x5ef: JUMPI 0x5f7 V554
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V548]
Stack pops: 2
Stack additions: [V553]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V553]

================================

Block 0x5f0
[0x5f0:0x5f6]
---
Predecessors: [0x5e8]
Successors: [0x5f7]
---
0x5f0 POP
0x5f1 PUSH1 0x7
0x5f3 SLOAD
0x5f4 NUMBER
0x5f5 LT
0x5f6 ISZERO
---
0x5f1: V556 = 0x7
0x5f3: V557 = S[0x7]
0x5f4: V558 = NUMBER
0x5f5: V559 = LT V558 V557
0x5f6: V560 = ISZERO V559
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V553]
Stack pops: 1
Stack additions: [V560]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V560]

================================

Block 0x5f7
[0x5f7:0x5fc]
---
Predecessors: [0x5e8, 0x5f0]
Successors: [0x5fd, 0x612]
---
0x5f7 JUMPDEST
0x5f8 ISZERO
0x5f9 PUSH2 0x612
0x5fc JUMPI
---
0x5f7: JUMPDEST 
0x5f8: V561 = ISZERO S0
0x5f9: V562 = 0x612
0x5fc: JUMPI 0x612 V561
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5fd
[0x5fd:0x60b]
---
Predecessors: [0x5f7]
Successors: [0x60c]
---
0x5fd PUSH1 0x12
0x5ff DUP1
0x600 SLOAD
0x601 PUSH1 0x3
0x603 SWAP2
0x604 SWAP1
0x605 PUSH1 0xff
0x607 NOT
0x608 AND
0x609 PUSH1 0x1
0x60b DUP4
---
0x5fd: V563 = 0x12
0x600: V564 = S[0x12]
0x601: V565 = 0x3
0x605: V566 = 0xff
0x607: V567 = NOT 0xff
0x608: V568 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V564
0x609: V569 = 0x1
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, 0x12, V568, 0x1, 0x3]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x12, V568, 0x1, 0x3]

================================

Block 0x60c
[0x60c:0x611]
---
Predecessors: [0x5fd]
Successors: [0x612]
---
0x60c JUMPDEST
0x60d MUL
0x60e OR
0x60f SWAP1
0x610 SSTORE
0x611 POP
---
0x60c: JUMPDEST 
0x60d: V570 = MUL 0x3 0x1
0x60e: V571 = OR 0x3 V568
0x610: S[0x12] = V571
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x12, V568, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x612
[0x612:0x614]
---
Predecessors: [0x5f7, 0x60c]
Successors: [0x615]
---
0x612 JUMPDEST
0x613 PUSH1 0x3
---
0x612: JUMPDEST 
0x613: V572 = 0x3
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3]

================================

Block 0x615
[0x615:0x624]
---
Predecessors: [0x612]
Successors: [0x625, 0x626]
---
0x615 JUMPDEST
0x616 PUSH1 0x12
0x618 SLOAD
0x619 PUSH1 0xff
0x61b AND
0x61c PUSH1 0x4
0x61e DUP2
0x61f GT
0x620 ISZERO
0x621 PUSH2 0x626
0x624 JUMPI
---
0x615: JUMPDEST 
0x616: V573 = 0x12
0x618: V574 = S[0x12]
0x619: V575 = 0xff
0x61b: V576 = AND 0xff V574
0x61c: V577 = 0x4
0x61f: V578 = GT V576 0x4
0x620: V579 = ISZERO V578
0x621: V580 = 0x626
0x624: JUMPI 0x626 V579
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3]
Stack pops: 0
Stack additions: [V576]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V576]

================================

Block 0x625
[0x625:0x625]
---
Predecessors: [0x615]
Successors: []
---
0x625 INVALID
---
0x625: INVALID 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V576]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V576]

================================

Block 0x626
[0x626:0x62d]
---
Predecessors: [0x615]
Successors: [0x62e, 0x635]
---
0x626 JUMPDEST
0x627 EQ
0x628 DUP1
0x629 ISZERO
0x62a PUSH2 0x635
0x62d JUMPI
---
0x626: JUMPDEST 
0x627: V581 = EQ V576 0x3
0x629: V582 = ISZERO V581
0x62a: V583 = 0x635
0x62d: JUMPI 0x635 V582
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V576]
Stack pops: 2
Stack additions: [V581]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V581]

================================

Block 0x62e
[0x62e:0x634]
---
Predecessors: [0x626]
Successors: [0x635]
---
0x62e POP
0x62f PUSH1 0x8
0x631 SLOAD
0x632 NUMBER
0x633 LT
0x634 ISZERO
---
0x62f: V584 = 0x8
0x631: V585 = S[0x8]
0x632: V586 = NUMBER
0x633: V587 = LT V586 V585
0x634: V588 = ISZERO V587
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V581]
Stack pops: 1
Stack additions: [V588]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V588]

================================

Block 0x635
[0x635:0x63a]
---
Predecessors: [0x626, 0x62e]
Successors: [0x63b, 0x642]
---
0x635 JUMPDEST
0x636 ISZERO
0x637 PUSH2 0x642
0x63a JUMPI
---
0x635: JUMPDEST 
0x636: V589 = ISZERO S0
0x637: V590 = 0x642
0x63a: JUMPI 0x642 V589
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x63b
[0x63b:0x641]
---
Predecessors: [0x635]
Successors: [0x483]
---
0x63b PUSH2 0x642
0x63e PUSH2 0x483
0x641 JUMP
---
0x63b: V591 = 0x642
0x63e: V592 = 0x483
0x641: JUMP 0x483
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x642]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, {0x180, 0x18e}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x642]

================================

Block 0x642
[0x642:0x642]
---
Predecessors: [0x5b2, 0x635]
Successors: [0x643]
---
0x642 JUMPDEST
---
0x642: JUMPDEST 
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x643
[0x643:0x646]
---
Predecessors: [0x642]
Successors: [0x647]
---
0x643 JUMPDEST
0x644 PUSH1 0x3
0x646 DUP1
---
0x643: JUMPDEST 
0x644: V593 = 0x3
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3, 0x3]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3, 0x3]

================================

Block 0x647
[0x647:0x656]
---
Predecessors: [0x643]
Successors: [0x657, 0x658]
---
0x647 JUMPDEST
0x648 PUSH1 0x12
0x64a SLOAD
0x64b PUSH1 0xff
0x64d AND
0x64e PUSH1 0x4
0x650 DUP2
0x651 GT
0x652 ISZERO
0x653 PUSH2 0x658
0x656 JUMPI
---
0x647: JUMPDEST 
0x648: V594 = 0x12
0x64a: V595 = S[0x12]
0x64b: V596 = 0xff
0x64d: V597 = AND 0xff V595
0x64e: V598 = 0x4
0x651: V599 = GT V597 0x4
0x652: V600 = ISZERO V599
0x653: V601 = 0x658
0x656: JUMPI 0x658 V600
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, 0x3]
Stack pops: 0
Stack additions: [V597]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, 0x3, V597]

================================

Block 0x657
[0x657:0x657]
---
Predecessors: [0x647]
Successors: []
---
0x657 INVALID
---
0x657: INVALID 
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x3, V597]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x3, V597]

================================

Block 0x658
[0x658:0x65d]
---
Predecessors: [0x647]
Successors: [0x65e, 0x662]
---
0x658 JUMPDEST
0x659 EQ
0x65a PUSH2 0x662
0x65d JUMPI
---
0x658: JUMPDEST 
0x659: V602 = EQ V597 0x3
0x65a: V603 = 0x662
0x65d: JUMPI 0x662 V602
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x3, V597]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3]

================================

Block 0x65e
[0x65e:0x661]
---
Predecessors: [0x658]
Successors: []
---
0x65e PUSH1 0x0
0x660 DUP1
0x661 REVERT
---
0x65e: V604 = 0x0
0x661: REVERT 0x0 0x0
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x662
[0x662:0x66a]
---
Predecessors: [0x658]
Successors: [0x66b, 0x66f]
---
0x662 JUMPDEST
0x663 PUSH1 0x0
0x665 CALLVALUE
0x666 GT
0x667 PUSH2 0x66f
0x66a JUMPI
---
0x662: JUMPDEST 
0x663: V605 = 0x0
0x665: V606 = CALLVALUE
0x666: V607 = GT V606 0x0
0x667: V608 = 0x66f
0x66a: JUMPI 0x66f V607
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x66b
[0x66b:0x66e]
---
Predecessors: [0x662]
Successors: []
---
0x66b PUSH1 0x0
0x66d DUP1
0x66e REVERT
---
0x66b: V609 = 0x0
0x66e: REVERT 0x0 0x0
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x66f
[0x66f:0x67a]
---
Predecessors: [0x662]
Successors: [0x67b]
---
0x66f JUMPDEST
0x670 CALLVALUE
0x671 SWAP7
0x672 POP
0x673 PUSH1 0x0
0x675 SWAP6
0x676 POP
0x677 PUSH1 0x0
0x679 SWAP5
0x67a POP
---
0x66f: JUMPDEST 
0x670: V610 = CALLVALUE
0x673: V611 = 0x0
0x677: V612 = 0x0
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 7
Stack additions: [V610, 0x0, 0x0, S3, S2, S1, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, V610, 0x0, 0x0, S3, S2, S1, 0x3]

================================

Block 0x67b
[0x67b:0x687]
---
Predecessors: [0x66f, 0x767]
Successors: [0x688, 0x772]
---
0x67b JUMPDEST
0x67c PUSH1 0x3
0x67e DUP6
0x67f PUSH1 0xff
0x681 AND
0x682 LT
0x683 ISZERO
0x684 PUSH2 0x772
0x687 JUMPI
---
0x67b: JUMPDEST 
0x67c: V613 = 0x3
0x67f: V614 = 0xff
0x681: V615 = AND 0xff S4
0x682: V616 = LT V615 0x3
0x683: V617 = ISZERO V616
0x684: V618 = 0x772
0x687: JUMPI 0x772 V617
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x688
[0x688:0x695]
---
Predecessors: [0x67b]
Successors: [0x696, 0x697]
---
0x688 PUSH1 0x9
0x68a PUSH1 0xff
0x68c DUP7
0x68d AND
0x68e PUSH1 0x3
0x690 DUP2
0x691 LT
0x692 PUSH2 0x697
0x695 JUMPI
---
0x688: V619 = 0x9
0x68a: V620 = 0xff
0x68d: V621 = AND S4 0xff
0x68e: V622 = 0x3
0x691: V623 = LT V621 0x3
0x692: V624 = 0x697
0x695: JUMPI 0x697 V623
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x9, V621]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3, 0x9, V621]

================================

Block 0x696
[0x696:0x696]
---
Predecessors: [0x688]
Successors: []
---
0x696 INVALID
---
0x696: INVALID 
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x9, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x9, V621]

================================

Block 0x697
[0x697:0x69d]
---
Predecessors: [0x688]
Successors: [0x69e]
---
0x697 JUMPDEST
0x698 PUSH1 0x3
0x69a MUL
0x69b ADD
0x69c PUSH1 0x0
---
0x697: JUMPDEST 
0x698: V625 = 0x3
0x69a: V626 = MUL 0x3 V621
0x69b: V627 = ADD V626 0x9
0x69c: V628 = 0x0
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x9, V621]
Stack pops: 2
Stack additions: [V627, 0x0]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, V627, 0x0]

================================

Block 0x69e
[0x69e:0x6b1]
---
Predecessors: [0x697]
Successors: [0x6b2, 0x6b3]
---
0x69e JUMPDEST
0x69f POP
0x6a0 PUSH1 0x2
0x6a2 ADD
0x6a3 SLOAD
0x6a4 PUSH1 0x9
0x6a6 PUSH1 0xff
0x6a8 DUP8
0x6a9 AND
0x6aa PUSH1 0x3
0x6ac DUP2
0x6ad LT
0x6ae PUSH2 0x6b3
0x6b1 JUMPI
---
0x69e: JUMPDEST 
0x6a0: V629 = 0x2
0x6a2: V630 = ADD 0x2 V627
0x6a3: V631 = S[V630]
0x6a4: V632 = 0x9
0x6a6: V633 = 0xff
0x6a9: V634 = AND S6 0xff
0x6aa: V635 = 0x3
0x6ad: V636 = LT V634 0x3
0x6ae: V637 = 0x6b3
0x6b1: JUMPI 0x6b3 V636
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, V627, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V631, 0x9, V634]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, V631, 0x9, V634]

================================

Block 0x6b2
[0x6b2:0x6b2]
---
Predecessors: [0x69e]
Successors: []
---
0x6b2 INVALID
---
0x6b2: INVALID 
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V631, 0x9, V634]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V631, 0x9, V634]

================================

Block 0x6b3
[0x6b3:0x6b9]
---
Predecessors: [0x69e]
Successors: [0x6ba]
---
0x6b3 JUMPDEST
0x6b4 PUSH1 0x3
0x6b6 MUL
0x6b7 ADD
0x6b8 PUSH1 0x0
---
0x6b3: JUMPDEST 
0x6b4: V638 = 0x3
0x6b6: V639 = MUL 0x3 V634
0x6b7: V640 = ADD V639 0x9
0x6b8: V641 = 0x0
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V631, 0x9, V634]
Stack pops: 2
Stack additions: [V640, 0x0]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V631, V640, 0x0]

================================

Block 0x6ba
[0x6ba:0x6cd]
---
Predecessors: [0x6b3]
Successors: [0x6ce, 0x6cf]
---
0x6ba JUMPDEST
0x6bb POP
0x6bc SLOAD
0x6bd SUB
0x6be SWAP4
0x6bf POP
0x6c0 PUSH1 0x9
0x6c2 PUSH1 0xff
0x6c4 DUP7
0x6c5 AND
0x6c6 PUSH1 0x3
0x6c8 DUP2
0x6c9 LT
0x6ca PUSH2 0x6cf
0x6cd JUMPI
---
0x6ba: JUMPDEST 
0x6bc: V642 = S[V640]
0x6bd: V643 = SUB V642 V631
0x6c0: V644 = 0x9
0x6c2: V645 = 0xff
0x6c5: V646 = AND S7 0xff
0x6c6: V647 = 0x3
0x6c9: V648 = LT V646 0x3
0x6ca: V649 = 0x6cf
0x6cd: JUMPI 0x6cf V648
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V631, V640, 0x0]
Stack pops: 8
Stack additions: [S7, V643, S5, S4, S3, 0x9, V646]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V643, S5, S4, 0x3, 0x9, V646]

================================

Block 0x6ce
[0x6ce:0x6ce]
---
Predecessors: [0x6ba]
Successors: []
---
0x6ce INVALID
---
0x6ce: INVALID 
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, 0x9, V646]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, 0x9, V646]

================================

Block 0x6cf
[0x6cf:0x6d5]
---
Predecessors: [0x6ba]
Successors: [0x6d6]
---
0x6cf JUMPDEST
0x6d0 PUSH1 0x3
0x6d2 MUL
0x6d3 ADD
0x6d4 PUSH1 0x0
---
0x6cf: JUMPDEST 
0x6d0: V650 = 0x3
0x6d2: V651 = MUL 0x3 V646
0x6d3: V652 = ADD V651 0x9
0x6d4: V653 = 0x0
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, 0x9, V646]
Stack pops: 2
Stack additions: [V652, 0x0]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, V652, 0x0]

================================

Block 0x6d6
[0x6d6:0x6ed]
---
Predecessors: [0x6cf]
Successors: [0x6ee, 0x6ef]
---
0x6d6 JUMPDEST
0x6d7 POP
0x6d8 PUSH1 0x1
0x6da ADD
0x6db SLOAD
0x6dc DUP8
0x6dd PUSH8 0xde0b6b3a7640000
0x6e6 MUL
0x6e7 DUP2
0x6e8 ISZERO
0x6e9 ISZERO
0x6ea PUSH2 0x6ef
0x6ed JUMPI
---
0x6d6: JUMPDEST 
0x6d8: V654 = 0x1
0x6da: V655 = ADD 0x1 V652
0x6db: V656 = S[V655]
0x6dd: V657 = 0xde0b6b3a7640000
0x6e6: V658 = MUL 0xde0b6b3a7640000 S8
0x6e8: V659 = ISZERO V656
0x6e9: V660 = ISZERO V659
0x6ea: V661 = 0x6ef
0x6ed: JUMPI 0x6ef V660
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, V652, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V656, V658]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, V656, V658]

================================

Block 0x6ee
[0x6ee:0x6ee]
---
Predecessors: [0x6d6]
Successors: []
---
0x6ee INVALID
---
0x6ee: INVALID 
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, V656, V658]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, V656, V658]

================================

Block 0x6ef
[0x6ef:0x6fa]
---
Predecessors: [0x6d6]
Successors: [0x6fb, 0x737]
---
0x6ef JUMPDEST
0x6f0 DIV
0x6f1 SWAP3
0x6f2 POP
0x6f3 DUP4
0x6f4 DUP4
0x6f5 GT
0x6f6 ISZERO
0x6f7 PUSH2 0x737
0x6fa JUMPI
---
0x6ef: JUMPDEST 
0x6f0: V662 = DIV V658 V656
0x6f5: V663 = GT V662 V643
0x6f6: V664 = ISZERO V663
0x6f7: V665 = 0x737
0x6fa: JUMPI 0x737 V664
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, S4, S3, 0x3, V656, V658]
Stack pops: 6
Stack additions: [S5, V662, S3, S2]
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V643, V662, S3, 0x3]

================================

Block 0x6fb
[0x6fb:0x715]
---
Predecessors: [0x6ef]
Successors: [0x716, 0x717]
---
0x6fb DUP4
0x6fc SWAP2
0x6fd POP
0x6fe PUSH8 0xde0b6b3a7640000
0x707 DUP3
0x708 PUSH1 0x9
0x70a PUSH1 0xff
0x70c DUP9
0x70d AND
0x70e PUSH1 0x3
0x710 DUP2
0x711 LT
0x712 PUSH2 0x717
0x715 JUMPI
---
0x6fe: V666 = 0xde0b6b3a7640000
0x708: V667 = 0x9
0x70a: V668 = 0xff
0x70d: V669 = AND S4 0xff
0x70e: V670 = 0x3
0x711: V671 = LT V669 0x3
0x712: V672 = 0x717
0x715: JUMPI 0x717 V671
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V643, V662, S1, 0x3]
Stack pops: 5
Stack additions: [S4, S3, S2, S3, S0, 0xde0b6b3a7640000, S3, 0x9, V669]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1, 0x2, 0x3}, S3, S2, S3, 0x3, 0xde0b6b3a7640000, S3, 0x9, V669]

================================

Block 0x716
[0x716:0x716]
---
Predecessors: [0x6fb]
Successors: []
---
0x716 INVALID
---
0x716: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V643, 0x9, V669]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V643, 0x9, V669]

================================

Block 0x717
[0x717:0x71d]
---
Predecessors: [0x6fb]
Successors: [0x71e]
---
0x717 JUMPDEST
0x718 PUSH1 0x3
0x71a MUL
0x71b ADD
0x71c PUSH1 0x0
---
0x717: JUMPDEST 
0x718: V673 = 0x3
0x71a: V674 = MUL 0x3 V669
0x71b: V675 = ADD V674 0x9
0x71c: V676 = 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V643, 0x9, V669]
Stack pops: 2
Stack additions: [V675, 0x0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V643, V675, 0x0]

================================

Block 0x71e
[0x71e:0x72b]
---
Predecessors: [0x717]
Successors: [0x72c, 0x72d]
---
0x71e JUMPDEST
0x71f POP
0x720 PUSH1 0x1
0x722 ADD
0x723 SLOAD
0x724 MUL
0x725 DUP2
0x726 ISZERO
0x727 ISZERO
0x728 PUSH2 0x72d
0x72b JUMPI
---
0x71e: JUMPDEST 
0x720: V677 = 0x1
0x722: V678 = ADD 0x1 V675
0x723: V679 = S[V678]
0x724: V680 = MUL V679 V643
0x726: V681 = ISZERO 0xde0b6b3a7640000
0x727: V682 = ISZERO 0x0
0x728: V683 = 0x72d
0x72b: JUMPI 0x72d 0x1
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V643, V675, 0x0]
Stack pops: 4
Stack additions: [S3, V680]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V680]

================================

Block 0x72c
[0x72c:0x72c]
---
Predecessors: [0x71e]
Successors: []
---
0x72c INVALID
---
0x72c: INVALID 
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V680]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V680]

================================

Block 0x72d
[0x72d:0x736]
---
Predecessors: [0x71e]
Successors: [0x73f]
---
0x72d JUMPDEST
0x72e DIV
0x72f DUP8
0x730 SUB
0x731 SWAP7
0x732 POP
0x733 PUSH2 0x73f
0x736 JUMP
---
0x72d: JUMPDEST 
0x72e: V684 = DIV V680 0xde0b6b3a7640000
0x730: V685 = SUB S8 V684
0x733: V686 = 0x73f
0x736: JUMP 0x73f
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3, 0xde0b6b3a7640000, V680]
Stack pops: 9
Stack additions: [V685, S7, S6, S5, S4, S3, S2]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, V685, S7, {0x0, 0x1, 0x2, 0x3}, V643, V662, V643, 0x3]

================================

Block 0x737
[0x737:0x73e]
---
Predecessors: [0x6ef]
Successors: [0x73f]
---
0x737 JUMPDEST
0x738 DUP3
0x739 SWAP2
0x73a POP
0x73b PUSH1 0x0
0x73d SWAP7
0x73e POP
---
0x737: JUMPDEST 
0x73b: V687 = 0x0
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V643, V662, S1, 0x3]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3, S2, S2, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V643, V662, V662, 0x3]

================================

Block 0x73f
[0x73f:0x74e]
---
Predecessors: [0x72d, 0x737]
Successors: [0x74f, 0x750]
---
0x73f JUMPDEST
0x740 DUP2
0x741 PUSH1 0x9
0x743 PUSH1 0xff
0x745 DUP8
0x746 AND
0x747 PUSH1 0x3
0x749 DUP2
0x74a LT
0x74b PUSH2 0x750
0x74e JUMPI
---
0x73f: JUMPDEST 
0x741: V688 = 0x9
0x743: V689 = 0xff
0x746: V690 = AND S4 0xff
0x747: V691 = 0x3
0x74a: V692 = LT V690 0x3
0x74b: V693 = 0x750
0x74e: JUMPI 0x750 V692
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V643, V662, S1, 0x3]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S1, 0x9, V690]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V643, V662, S1, 0x3, S1, 0x9, V690]

================================

Block 0x74f
[0x74f:0x74f]
---
Predecessors: [0x73f]
Successors: []
---
0x74f INVALID
---
0x74f: INVALID 
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V643, V662, S4, 0x3, S2, 0x9, V690]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V643, V662, S4, 0x3, S2, 0x9, V690]

================================

Block 0x750
[0x750:0x756]
---
Predecessors: [0x73f]
Successors: [0x757]
---
0x750 JUMPDEST
0x751 PUSH1 0x3
0x753 MUL
0x754 ADD
0x755 PUSH1 0x0
---
0x750: JUMPDEST 
0x751: V694 = 0x3
0x753: V695 = MUL 0x3 V690
0x754: V696 = ADD V695 0x9
0x755: V697 = 0x0
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V643, V662, S4, 0x3, S2, 0x9, V690]
Stack pops: 2
Stack additions: [V696, 0x0]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V643, V662, S4, 0x3, S2, V696, 0x0]

================================

Block 0x757
[0x757:0x766]
---
Predecessors: [0x750]
Successors: [0x767]
---
0x757 JUMPDEST
0x758 POP
0x759 PUSH1 0x2
0x75b ADD
0x75c DUP1
0x75d SLOAD
0x75e SWAP1
0x75f SWAP2
0x760 ADD
0x761 SWAP1
0x762 SSTORE
0x763 SWAP5
0x764 DUP2
0x765 ADD
0x766 SWAP5
---
0x757: JUMPDEST 
0x759: V698 = 0x2
0x75b: V699 = ADD 0x2 V696
0x75d: V700 = S[V699]
0x760: V701 = ADD S2 V700
0x762: S[V699] = V701
0x765: V702 = ADD S4 S8
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V643, V662, S4, 0x3, S2, V696, 0x0]
Stack pops: 9
Stack additions: [V702, S7, S6, S5, S4, S3]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V702, S7, V643, V662, S4, 0x3]

================================

Block 0x767
[0x767:0x771]
---
Predecessors: [0x757]
Successors: [0x67b]
---
0x767 JUMPDEST
0x768 PUSH1 0x1
0x76a SWAP1
0x76b SWAP5
0x76c ADD
0x76d SWAP4
0x76e PUSH2 0x67b
0x771 JUMP
---
0x767: JUMPDEST 
0x768: V703 = 0x1
0x76c: V704 = ADD S4 0x1
0x76e: V705 = 0x67b
0x771: JUMP 0x67b
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V702, S4, V643, V662, S1, 0x3]
Stack pops: 5
Stack additions: [V704, S3, S2, S1, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V702, V704, V643, V662, S1, 0x3]

================================

Block 0x772
[0x772:0x77a]
---
Predecessors: [0x67b]
Successors: [0x77b, 0x77c]
---
0x772 JUMPDEST
0x773 PUSH1 0x0
0x775 DUP7
0x776 GT
0x777 PUSH2 0x77c
0x77a JUMPI
---
0x772: JUMPDEST 
0x773: V706 = 0x0
0x776: V707 = GT S5 0x0
0x777: V708 = 0x77c
0x77a: JUMPI 0x77c V707
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x77b
[0x77b:0x77b]
---
Predecessors: [0x772]
Successors: []
---
0x77b INVALID
---
0x77b: INVALID 
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x77c
[0x77c:0x782]
---
Predecessors: [0x772]
Successors: [0x783, 0x7b0]
---
0x77c JUMPDEST
0x77d DUP7
0x77e ISZERO
0x77f PUSH2 0x7b0
0x782 JUMPI
---
0x77c: JUMPDEST 
0x77e: V709 = ISZERO S6
0x77f: V710 = 0x7b0
0x782: JUMPI 0x7b0 V709
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x783
[0x783:0x7ae]
---
Predecessors: [0x77c]
Successors: [0x7af, 0x7b0]
---
0x783 PUSH1 0x1
0x785 PUSH1 0xa0
0x787 PUSH1 0x2
0x789 EXP
0x78a SUB
0x78b CALLER
0x78c AND
0x78d DUP8
0x78e ISZERO
0x78f PUSH2 0x8fc
0x792 MUL
0x793 DUP9
0x794 PUSH1 0x40
0x796 MLOAD
0x797 PUSH1 0x0
0x799 PUSH1 0x40
0x79b MLOAD
0x79c DUP1
0x79d DUP4
0x79e SUB
0x79f DUP2
0x7a0 DUP6
0x7a1 DUP9
0x7a2 DUP9
0x7a3 CALL
0x7a4 SWAP4
0x7a5 POP
0x7a6 POP
0x7a7 POP
0x7a8 POP
0x7a9 ISZERO
0x7aa ISZERO
0x7ab PUSH2 0x7b0
0x7ae JUMPI
---
0x783: V711 = 0x1
0x785: V712 = 0xa0
0x787: V713 = 0x2
0x789: V714 = EXP 0x2 0xa0
0x78a: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78b: V716 = CALLER
0x78c: V717 = AND V716 0xffffffffffffffffffffffffffffffffffffffff
0x78e: V718 = ISZERO S6
0x78f: V719 = 0x8fc
0x792: V720 = MUL 0x8fc V718
0x794: V721 = 0x40
0x796: V722 = M[0x40]
0x797: V723 = 0x0
0x799: V724 = 0x40
0x79b: V725 = M[0x40]
0x79e: V726 = SUB V722 V725
0x7a3: V727 = CALL V720 V717 S6 V725 V726 V725 0x0
0x7a9: V728 = ISZERO V727
0x7aa: V729 = ISZERO V728
0x7ab: V730 = 0x7b0
0x7ae: JUMPI 0x7b0 V729
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x7af
[0x7af:0x7af]
---
Predecessors: [0x783]
Successors: []
---
0x7af INVALID
---
0x7af: INVALID 
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x7b0
[0x7b0:0x7b0]
---
Predecessors: [0x77c, 0x783]
Successors: [0x7b1]
---
0x7b0 JUMPDEST
---
0x7b0: JUMPDEST 
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x7b1
[0x7b1:0x7e3]
---
Predecessors: [0x7b0]
Successors: [0x7e4, 0x7e5]
---
0x7b1 JUMPDEST
0x7b2 PUSH1 0x5
0x7b4 SLOAD
0x7b5 PUSH1 0x1
0x7b7 PUSH1 0xa0
0x7b9 PUSH1 0x2
0x7bb EXP
0x7bc SUB
0x7bd AND
0x7be CALLVALUE
0x7bf DUP9
0x7c0 SWAP1
0x7c1 SUB
0x7c2 DUP1
0x7c3 ISZERO
0x7c4 PUSH2 0x8fc
0x7c7 MUL
0x7c8 SWAP1
0x7c9 PUSH1 0x40
0x7cb MLOAD
0x7cc PUSH1 0x0
0x7ce PUSH1 0x40
0x7d0 MLOAD
0x7d1 DUP1
0x7d2 DUP4
0x7d3 SUB
0x7d4 DUP2
0x7d5 DUP6
0x7d6 DUP9
0x7d7 DUP9
0x7d8 CALL
0x7d9 SWAP4
0x7da POP
0x7db POP
0x7dc POP
0x7dd POP
0x7de ISZERO
0x7df ISZERO
0x7e0 PUSH2 0x7e5
0x7e3 JUMPI
---
0x7b1: JUMPDEST 
0x7b2: V731 = 0x5
0x7b4: V732 = S[0x5]
0x7b5: V733 = 0x1
0x7b7: V734 = 0xa0
0x7b9: V735 = 0x2
0x7bb: V736 = EXP 0x2 0xa0
0x7bc: V737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bd: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0x7be: V739 = CALLVALUE
0x7c1: V740 = SUB V739 S6
0x7c3: V741 = ISZERO V740
0x7c4: V742 = 0x8fc
0x7c7: V743 = MUL 0x8fc V741
0x7c9: V744 = 0x40
0x7cb: V745 = M[0x40]
0x7cc: V746 = 0x0
0x7ce: V747 = 0x40
0x7d0: V748 = M[0x40]
0x7d3: V749 = SUB V745 V748
0x7d8: V750 = CALL V743 V738 V740 V748 V749 V748 0x0
0x7de: V751 = ISZERO V750
0x7df: V752 = ISZERO V751
0x7e0: V753 = 0x7e5
0x7e3: JUMPI 0x7e5 V752
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x7e4
[0x7e4:0x7e4]
---
Predecessors: [0x7b1]
Successors: []
---
0x7e4 INVALID
---
0x7e4: INVALID 
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x7e5
[0x7e5:0x83f]
---
Predecessors: [0x7b1]
Successors: [0x840, 0x844]
---
0x7e5 JUMPDEST
0x7e6 PUSH1 0x6
0x7e8 SLOAD
0x7e9 PUSH1 0x1
0x7eb PUSH1 0xa0
0x7ed PUSH1 0x2
0x7ef EXP
0x7f0 SUB
0x7f1 AND
0x7f2 PUSH4 0xa9059cbb
0x7f7 CALLER
0x7f8 DUP9
0x7f9 PUSH1 0x0
0x7fb PUSH1 0x40
0x7fd MLOAD
0x7fe PUSH1 0x20
0x800 ADD
0x801 MSTORE
0x802 PUSH1 0x40
0x804 MLOAD
0x805 PUSH1 0xe0
0x807 PUSH1 0x2
0x809 EXP
0x80a PUSH4 0xffffffff
0x80f DUP6
0x810 AND
0x811 MUL
0x812 DUP2
0x813 MSTORE
0x814 PUSH1 0x1
0x816 PUSH1 0xa0
0x818 PUSH1 0x2
0x81a EXP
0x81b SUB
0x81c SWAP1
0x81d SWAP3
0x81e AND
0x81f PUSH1 0x4
0x821 DUP4
0x822 ADD
0x823 MSTORE
0x824 PUSH1 0x24
0x826 DUP3
0x827 ADD
0x828 MSTORE
0x829 PUSH1 0x44
0x82b ADD
0x82c PUSH1 0x20
0x82e PUSH1 0x40
0x830 MLOAD
0x831 DUP1
0x832 DUP4
0x833 SUB
0x834 DUP2
0x835 PUSH1 0x0
0x837 DUP8
0x838 DUP1
0x839 EXTCODESIZE
0x83a ISZERO
0x83b ISZERO
0x83c PUSH2 0x844
0x83f JUMPI
---
0x7e5: JUMPDEST 
0x7e6: V754 = 0x6
0x7e8: V755 = S[0x6]
0x7e9: V756 = 0x1
0x7eb: V757 = 0xa0
0x7ed: V758 = 0x2
0x7ef: V759 = EXP 0x2 0xa0
0x7f0: V760 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f1: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0x7f2: V762 = 0xa9059cbb
0x7f7: V763 = CALLER
0x7f9: V764 = 0x0
0x7fb: V765 = 0x40
0x7fd: V766 = M[0x40]
0x7fe: V767 = 0x20
0x800: V768 = ADD 0x20 V766
0x801: M[V768] = 0x0
0x802: V769 = 0x40
0x804: V770 = M[0x40]
0x805: V771 = 0xe0
0x807: V772 = 0x2
0x809: V773 = EXP 0x2 0xe0
0x80a: V774 = 0xffffffff
0x810: V775 = AND 0xa9059cbb 0xffffffff
0x811: V776 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x813: M[V770] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x814: V777 = 0x1
0x816: V778 = 0xa0
0x818: V779 = 0x2
0x81a: V780 = EXP 0x2 0xa0
0x81b: V781 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81e: V782 = AND V763 0xffffffffffffffffffffffffffffffffffffffff
0x81f: V783 = 0x4
0x822: V784 = ADD V770 0x4
0x823: M[V784] = V782
0x824: V785 = 0x24
0x827: V786 = ADD V770 0x24
0x828: M[V786] = S5
0x829: V787 = 0x44
0x82b: V788 = ADD 0x44 V770
0x82c: V789 = 0x20
0x82e: V790 = 0x40
0x830: V791 = M[0x40]
0x833: V792 = SUB V788 V791
0x835: V793 = 0x0
0x839: V794 = EXTCODESIZE V761
0x83a: V795 = ISZERO V794
0x83b: V796 = ISZERO V795
0x83c: V797 = 0x844
0x83f: JUMPI 0x844 V796
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V761, 0xa9059cbb, V788, 0x20, V791, V792, V791, 0x0, V761]
Exit stack: [S9, S8, S7, S6, S5, {0x0, 0x1, 0x2}, S3, S2, S1, 0x3, V761, 0xa9059cbb, V788, 0x20, V791, V792, V791, 0x0, V761]

================================

Block 0x840
[0x840:0x843]
---
Predecessors: [0x7e5]
Successors: []
---
0x840 PUSH1 0x0
0x842 DUP1
0x843 REVERT
---
0x840: V798 = 0x0
0x843: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, S15, S14, {0x0, 0x1, 0x2}, S12, S11, S10, 0x3, V761, 0xa9059cbb, V788, 0x20, V791, V792, V791, 0x0, V761]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, {0x0, 0x1, 0x2}, S12, S11, S10, 0x3, V761, 0xa9059cbb, V788, 0x20, V791, V792, V791, 0x0, V761]

================================

Block 0x844
[0x844:0x850]
---
Predecessors: [0x7e5]
Successors: [0x851, 0x855]
---
0x844 JUMPDEST
0x845 PUSH2 0x2c6
0x848 GAS
0x849 SUB
0x84a CALL
0x84b ISZERO
0x84c ISZERO
0x84d PUSH2 0x855
0x850 JUMPI
---
0x844: JUMPDEST 
0x845: V799 = 0x2c6
0x848: V800 = GAS
0x849: V801 = SUB V800 0x2c6
0x84a: V802 = CALL V801 V761 0x0 V791 V792 V791 0x20
0x84b: V803 = ISZERO V802
0x84c: V804 = ISZERO V803
0x84d: V805 = 0x855
0x850: JUMPI 0x855 V804
---
Entry stack: [V12, S17, S16, S15, S14, {0x0, 0x1, 0x2}, S12, S11, S10, 0x3, V761, 0xa9059cbb, V788, 0x20, V791, V792, V791, 0x0, V761]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, {0x0, 0x1, 0x2}, S12, S11, S10, 0x3, V761, 0xa9059cbb, V788]

================================

Block 0x851
[0x851:0x854]
---
Predecessors: [0x844]
Successors: []
---
0x851 PUSH1 0x0
0x853 DUP1
0x854 REVERT
---
0x851: V806 = 0x0
0x854: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, {0x0, 0x1, 0x2}, S6, S5, S4, 0x3, V761, 0xa9059cbb, V788]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, {0x0, 0x1, 0x2}, S6, S5, S4, 0x3, V761, 0xa9059cbb, V788]

================================

Block 0x855
[0x855:0x865]
---
Predecessors: [0x844]
Successors: [0x866, 0x867]
---
0x855 JUMPDEST
0x856 POP
0x857 POP
0x858 POP
0x859 PUSH1 0x40
0x85b MLOAD
0x85c DUP1
0x85d MLOAD
0x85e SWAP1
0x85f POP
0x860 ISZERO
0x861 ISZERO
0x862 PUSH2 0x867
0x865 JUMPI
---
0x855: JUMPDEST 
0x859: V807 = 0x40
0x85b: V808 = M[0x40]
0x85d: V809 = M[V808]
0x860: V810 = ISZERO V809
0x861: V811 = ISZERO V810
0x862: V812 = 0x867
0x865: JUMPI 0x867 V811
---
Entry stack: [V12, S11, S10, S9, S8, {0x0, 0x1, 0x2}, S6, S5, S4, 0x3, V761, 0xa9059cbb, V788]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, {0x0, 0x1, 0x2}, S6, S5, S4, 0x3]

================================

Block 0x866
[0x866:0x866]
---
Predecessors: [0x855]
Successors: []
---
0x866 INVALID
---
0x866: INVALID 
---
Entry stack: [V12, S8, S7, S6, S5, {0x0, 0x1, 0x2}, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, {0x0, 0x1, 0x2}, S3, S2, S1, 0x3]

================================

Block 0x867
[0x867:0x86e]
---
Predecessors: [0x855]
Successors: [0x8d6]
---
0x867 JUMPDEST
0x868 PUSH2 0x86f
0x86b PUSH2 0x8d6
0x86e JUMP
---
0x867: JUMPDEST 
0x868: V813 = 0x86f
0x86b: V814 = 0x8d6
0x86e: JUMP 0x8d6
---
Entry stack: [V12, S8, S7, S6, S5, {0x0, 0x1, 0x2}, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: [0x86f]
Exit stack: [V12, S8, S7, S6, S5, {0x0, 0x1, 0x2}, S3, S2, S1, 0x3, 0x86f]

================================

Block 0x86f
[0x86f:0x876]
---
Predecessors: [0x912]
Successors: [0xac2]
---
0x86f JUMPDEST
0x870 PUSH2 0x877
0x873 PUSH2 0xac2
0x876 JUMP
---
0x86f: JUMPDEST 
0x870: V815 = 0x877
0x873: V816 = 0xac2
0x876: JUMP 0xac2
---
Entry stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x877]
Exit stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x877]

================================

Block 0x877
[0x877:0x87d]
---
Predecessors: [0x912]
Successors: [0x87e, 0x885]
---
0x877 JUMPDEST
0x878 EQ
0x879 ISZERO
0x87a PUSH2 0x885
0x87d JUMPI
---
0x877: JUMPDEST 
0x878: V817 = EQ S0 S1
0x879: V818 = ISZERO V817
0x87a: V819 = 0x885
0x87d: JUMPI 0x885 V818
---
Entry stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x87e
[0x87e:0x884]
---
Predecessors: [0x877]
Successors: [0x483]
---
0x87e PUSH2 0x885
0x881 PUSH2 0x483
0x884 JUMP
---
0x87e: V820 = 0x885
0x881: V821 = 0x483
0x884: JUMP 0x483
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x885]
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x885]

================================

Block 0x885
[0x885:0x885]
---
Predecessors: [0x5b2, 0x877]
Successors: [0x886]
---
0x885 JUMPDEST
---
0x885: JUMPDEST 
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x886
[0x886:0x8c3]
---
Predecessors: [0x885]
Successors: [0x8c4]
---
0x886 JUMPDEST
0x887 CALLER
0x888 PUSH1 0x1
0x88a PUSH1 0xa0
0x88c PUSH1 0x2
0x88e EXP
0x88f SUB
0x890 AND
0x891 PUSH32 0x57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e
0x8b2 DUP8
0x8b3 PUSH1 0x40
0x8b5 MLOAD
0x8b6 SWAP1
0x8b7 DUP2
0x8b8 MSTORE
0x8b9 PUSH1 0x20
0x8bb ADD
0x8bc PUSH1 0x40
0x8be MLOAD
0x8bf DUP1
0x8c0 SWAP2
0x8c1 SUB
0x8c2 SWAP1
0x8c3 LOG2
---
0x886: JUMPDEST 
0x887: V822 = CALLER
0x888: V823 = 0x1
0x88a: V824 = 0xa0
0x88c: V825 = 0x2
0x88e: V826 = EXP 0x2 0xa0
0x88f: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x890: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0x891: V829 = 0x57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e
0x8b3: V830 = 0x40
0x8b5: V831 = M[0x40]
0x8b8: M[V831] = S5
0x8b9: V832 = 0x20
0x8bb: V833 = ADD 0x20 V831
0x8bc: V834 = 0x40
0x8be: V835 = M[0x40]
0x8c1: V836 = SUB V833 V835
0x8c3: LOG V835 V836 0x57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e V828
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8c4
[0x8c4:0x8c4]
---
Predecessors: [0x886]
Successors: [0x8c5]
---
0x8c4 JUMPDEST
---
0x8c4: JUMPDEST 
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8c5
[0x8c5:0x8c6]
---
Predecessors: [0x8c4]
Successors: [0x8c7]
---
0x8c5 JUMPDEST
0x8c6 POP
---
0x8c5: JUMPDEST 
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x8c7
[0x8c7:0x8c7]
---
Predecessors: [0x8c5]
Successors: [0x8c8]
---
0x8c7 JUMPDEST
---
0x8c7: JUMPDEST 
---
Entry stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8c8
[0x8c8:0x8cf]
---
Predecessors: [0x8c7]
Successors: [0x180, 0x18e, 0x3d3]
---
0x8c8 JUMPDEST
0x8c9 POP
0x8ca POP
0x8cb POP
0x8cc POP
0x8cd POP
0x8ce POP
0x8cf JUMP
---
0x8c8: JUMPDEST 
0x8cf: JUMP S6
---
Entry stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [S13, V610, S11, S10, S9, S8, S7]

================================

Block 0x8d0
[0x8d0:0x8d5]
---
Predecessors: [0x19b]
Successors: [0x1a3]
---
0x8d0 JUMPDEST
0x8d1 PUSH1 0x8
0x8d3 SLOAD
0x8d4 DUP2
0x8d5 JUMP
---
0x8d0: JUMPDEST 
0x8d1: V837 = 0x8
0x8d3: V838 = S[0x8]
0x8d5: JUMP 0x1a3
---
Entry stack: [V12, 0x1a3]
Stack pops: 1
Stack additions: [S0, V838]
Exit stack: [V12, 0x1a3, V838]

================================

Block 0x8d6
[0x8d6:0x8da]
---
Predecessors: [0x1c0, 0x867, 0xd36, 0x101f]
Successors: [0x8db]
---
0x8d6 JUMPDEST
0x8d7 PUSH1 0x0
0x8d9 DUP1
0x8da DUP1
---
0x8d6: JUMPDEST 
0x8d7: V839 = 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x1a3, 0x86f, 0xda0, 0x1027}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, 0x0, 0x0]

================================

Block 0x8db
[0x8db:0x8e7]
---
Predecessors: [0x8d6, 0x906]
Successors: [0x8e8, 0x90e]
---
0x8db JUMPDEST
0x8dc PUSH1 0x3
0x8de DUP2
0x8df PUSH1 0xff
0x8e1 AND
0x8e2 LT
0x8e3 ISZERO
0x8e4 PUSH2 0x90e
0x8e7 JUMPI
---
0x8db: JUMPDEST 
0x8dc: V840 = 0x3
0x8df: V841 = 0xff
0x8e1: V842 = AND 0xff S0
0x8e2: V843 = LT V842 0x3
0x8e3: V844 = ISZERO V843
0x8e4: V845 = 0x90e
0x8e7: JUMPI 0x90e V844
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S1, S0]

================================

Block 0x8e8
[0x8e8:0x8f5]
---
Predecessors: [0x8db]
Successors: [0x8f6, 0x8f7]
---
0x8e8 PUSH1 0x9
0x8ea PUSH1 0xff
0x8ec DUP3
0x8ed AND
0x8ee PUSH1 0x3
0x8f0 DUP2
0x8f1 LT
0x8f2 PUSH2 0x8f7
0x8f5 JUMPI
---
0x8e8: V846 = 0x9
0x8ea: V847 = 0xff
0x8ed: V848 = AND S0 0xff
0x8ee: V849 = 0x3
0x8f1: V850 = LT V848 0x3
0x8f2: V851 = 0x8f7
0x8f5: JUMPI 0x8f7 V850
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x9, V848]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S1, S0, 0x9, V848]

================================

Block 0x8f6
[0x8f6:0x8f6]
---
Predecessors: [0x8e8]
Successors: []
---
0x8f6 INVALID
---
0x8f6: INVALID 
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S3, S2, 0x9, V848]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S3, S2, 0x9, V848]

================================

Block 0x8f7
[0x8f7:0x8fd]
---
Predecessors: [0x8e8]
Successors: [0x8fe]
---
0x8f7 JUMPDEST
0x8f8 PUSH1 0x3
0x8fa MUL
0x8fb ADD
0x8fc PUSH1 0x0
---
0x8f7: JUMPDEST 
0x8f8: V852 = 0x3
0x8fa: V853 = MUL 0x3 V848
0x8fb: V854 = ADD V853 0x9
0x8fc: V855 = 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S3, S2, 0x9, V848]
Stack pops: 2
Stack additions: [V854, 0x0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S3, S2, V854, 0x0]

================================

Block 0x8fe
[0x8fe:0x905]
---
Predecessors: [0x8f7]
Successors: [0x906]
---
0x8fe JUMPDEST
0x8ff POP
0x900 SLOAD
0x901 SWAP2
0x902 SWAP1
0x903 SWAP2
0x904 ADD
0x905 SWAP1
---
0x8fe: JUMPDEST 
0x900: V856 = S[V854]
0x904: V857 = ADD V856 S3
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, S3, S2, V854, 0x0]
Stack pops: 4
Stack additions: [V857, S2]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, V857, S2]

================================

Block 0x906
[0x906:0x90d]
---
Predecessors: [0x8fe]
Successors: [0x8db]
---
0x906 JUMPDEST
0x907 PUSH1 0x1
0x909 ADD
0x90a PUSH2 0x8db
0x90d JUMP
---
0x906: JUMPDEST 
0x907: V858 = 0x1
0x909: V859 = ADD 0x1 S0
0x90a: V860 = 0x8db
0x90d: JUMP 0x8db
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, V857, S0]
Stack pops: 1
Stack additions: [V859]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0xda0, 0x1027}, 0x0, V857, V859]

================================

Block 0x90e
[0x90e:0x911]
---
Predecessors: [0x8db, 0xac7]
Successors: [0x912]
---
0x90e JUMPDEST
0x90f DUP2
0x910 SWAP3
0x911 POP
---
0x90e: JUMPDEST 
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0x877, 0xda0, 0x1027, 0x102f}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S1, S1, S0]
Exit stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0x877, 0xda0, 0x1027, 0x102f}, S1, S1, S0]

================================

Block 0x912
[0x912:0x916]
---
Predecessors: [0x90e]
Successors: [0x1a3, 0x86f, 0x877, 0xda0, 0x1027, 0x102f]
---
0x912 JUMPDEST
0x913 POP
0x914 POP
0x915 SWAP1
0x916 JUMP
---
0x912: JUMPDEST 
0x916: JUMP {0x1a3, 0x86f, 0x877, 0xda0, 0x1027, 0x102f}
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x86f, 0x877, 0xda0, 0x1027, 0x102f}, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S2]

================================

Block 0x917
[0x917:0x922]
---
Predecessors: [0x1e5]
Successors: [0x923, 0x924]
---
0x917 JUMPDEST
0x918 PUSH1 0x9
0x91a DUP2
0x91b PUSH1 0x3
0x91d DUP2
0x91e LT
0x91f PUSH2 0x924
0x922 JUMPI
---
0x917: JUMPDEST 
0x918: V861 = 0x9
0x91b: V862 = 0x3
0x91e: V863 = LT V168 0x3
0x91f: V864 = 0x924
0x922: JUMPI 0x924 V863
---
Entry stack: [V12, 0x1f0, V168]
Stack pops: 1
Stack additions: [S0, 0x9, S0]
Exit stack: [V12, 0x1f0, V168, 0x9, V168]

================================

Block 0x923
[0x923:0x923]
---
Predecessors: [0x917]
Successors: []
---
0x923 INVALID
---
0x923: INVALID 
---
Entry stack: [V12, 0x1f0, V168, 0x9, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f0, V168, 0x9, V168]

================================

Block 0x924
[0x924:0x92a]
---
Predecessors: [0x917]
Successors: [0x92b]
---
0x924 JUMPDEST
0x925 PUSH1 0x3
0x927 MUL
0x928 ADD
0x929 PUSH1 0x0
---
0x924: JUMPDEST 
0x925: V865 = 0x3
0x927: V866 = MUL 0x3 V168
0x928: V867 = ADD V866 0x9
0x929: V868 = 0x0
---
Entry stack: [V12, 0x1f0, V168, 0x9, V168]
Stack pops: 2
Stack additions: [V867, 0x0]
Exit stack: [V12, 0x1f0, V168, V867, 0x0]

================================

Block 0x92b
[0x92b:0x93e]
---
Predecessors: [0x924]
Successors: [0x1f0]
---
0x92b JUMPDEST
0x92c POP
0x92d DUP1
0x92e SLOAD
0x92f PUSH1 0x1
0x931 DUP3
0x932 ADD
0x933 SLOAD
0x934 PUSH1 0x2
0x936 SWAP1
0x937 SWAP3
0x938 ADD
0x939 SLOAD
0x93a SWAP1
0x93b SWAP3
0x93c POP
0x93d DUP4
0x93e JUMP
---
0x92b: JUMPDEST 
0x92e: V869 = S[V867]
0x92f: V870 = 0x1
0x932: V871 = ADD V867 0x1
0x933: V872 = S[V871]
0x934: V873 = 0x2
0x938: V874 = ADD V867 0x2
0x939: V875 = S[V874]
0x93e: JUMP 0x1f0
---
Entry stack: [V12, 0x1f0, V168, V867, 0x0]
Stack pops: 4
Stack additions: [S3, V869, V872, V875]
Exit stack: [V12, 0x1f0, V869, V872, V875]

================================

Block 0x93f
[0x93f:0x94d]
---
Predecessors: [0x21f]
Successors: [0x227]
---
0x93f JUMPDEST
0x940 PUSH1 0x4
0x942 SLOAD
0x943 PUSH1 0x1
0x945 PUSH1 0xa0
0x947 PUSH1 0x2
0x949 EXP
0x94a SUB
0x94b AND
0x94c DUP2
0x94d JUMP
---
0x93f: JUMPDEST 
0x940: V876 = 0x4
0x942: V877 = S[0x4]
0x943: V878 = 0x1
0x945: V879 = 0xa0
0x947: V880 = 0x2
0x949: V881 = EXP 0x2 0xa0
0x94a: V882 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94b: V883 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0x94d: JUMP 0x227
---
Entry stack: [V12, 0x227]
Stack pops: 1
Stack additions: [S0, V883]
Exit stack: [V12, 0x227, V883]

================================

Block 0x94e
[0x94e:0x964]
---
Predecessors: [0x24e]
Successors: [0x965, 0x969]
---
0x94e JUMPDEST
0x94f PUSH1 0x2
0x951 SLOAD
0x952 CALLER
0x953 PUSH1 0x1
0x955 PUSH1 0xa0
0x957 PUSH1 0x2
0x959 EXP
0x95a SUB
0x95b SWAP1
0x95c DUP2
0x95d AND
0x95e SWAP2
0x95f AND
0x960 EQ
0x961 PUSH2 0x969
0x964 JUMPI
---
0x94e: JUMPDEST 
0x94f: V884 = 0x2
0x951: V885 = S[0x2]
0x952: V886 = CALLER
0x953: V887 = 0x1
0x955: V888 = 0xa0
0x957: V889 = 0x2
0x959: V890 = EXP 0x2 0xa0
0x95a: V891 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95d: V892 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0x95f: V893 = AND V885 0xffffffffffffffffffffffffffffffffffffffff
0x960: V894 = EQ V893 V892
0x961: V895 = 0x969
0x964: JUMPI 0x969 V894
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e]

================================

Block 0x965
[0x965:0x968]
---
Predecessors: [0x94e]
Successors: []
---
0x965 PUSH1 0x0
0x967 DUP1
0x968 REVERT
---
0x965: V896 = 0x0
0x968: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e]

================================

Block 0x969
[0x969:0x96b]
---
Predecessors: [0x94e]
Successors: [0x96c]
---
0x969 JUMPDEST
0x96a PUSH1 0x2
---
0x969: JUMPDEST 
0x96a: V897 = 0x2
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x18e, 0x2]

================================

Block 0x96c
[0x96c:0x97b]
---
Predecessors: [0x969]
Successors: [0x97c, 0x97d]
---
0x96c JUMPDEST
0x96d PUSH1 0x12
0x96f SLOAD
0x970 PUSH1 0xff
0x972 AND
0x973 PUSH1 0x4
0x975 DUP2
0x976 GT
0x977 ISZERO
0x978 PUSH2 0x97d
0x97b JUMPI
---
0x96c: JUMPDEST 
0x96d: V898 = 0x12
0x96f: V899 = S[0x12]
0x970: V900 = 0xff
0x972: V901 = AND 0xff V899
0x973: V902 = 0x4
0x976: V903 = GT V901 0x4
0x977: V904 = ISZERO V903
0x978: V905 = 0x97d
0x97b: JUMPI 0x97d V904
---
Entry stack: [V12, 0x18e, 0x2]
Stack pops: 0
Stack additions: [V901]
Exit stack: [V12, 0x18e, 0x2, V901]

================================

Block 0x97c
[0x97c:0x97c]
---
Predecessors: [0x96c]
Successors: []
---
0x97c INVALID
---
0x97c: INVALID 
---
Entry stack: [V12, 0x18e, 0x2, V901]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, 0x2, V901]

================================

Block 0x97d
[0x97d:0x984]
---
Predecessors: [0x96c]
Successors: [0x985, 0x98c]
---
0x97d JUMPDEST
0x97e EQ
0x97f DUP1
0x980 ISZERO
0x981 PUSH2 0x98c
0x984 JUMPI
---
0x97d: JUMPDEST 
0x97e: V906 = EQ V901 0x2
0x980: V907 = ISZERO V906
0x981: V908 = 0x98c
0x984: JUMPI 0x98c V907
---
Entry stack: [V12, 0x18e, 0x2, V901]
Stack pops: 2
Stack additions: [V906]
Exit stack: [V12, 0x18e, V906]

================================

Block 0x985
[0x985:0x98b]
---
Predecessors: [0x97d]
Successors: [0x98c]
---
0x985 POP
0x986 PUSH1 0x7
0x988 SLOAD
0x989 NUMBER
0x98a LT
0x98b ISZERO
---
0x986: V909 = 0x7
0x988: V910 = S[0x7]
0x989: V911 = NUMBER
0x98a: V912 = LT V911 V910
0x98b: V913 = ISZERO V912
---
Entry stack: [V12, 0x18e, V906]
Stack pops: 1
Stack additions: [V913]
Exit stack: [V12, 0x18e, V913]

================================

Block 0x98c
[0x98c:0x991]
---
Predecessors: [0x97d, 0x985]
Successors: [0x992, 0x9a7]
---
0x98c JUMPDEST
0x98d ISZERO
0x98e PUSH2 0x9a7
0x991 JUMPI
---
0x98c: JUMPDEST 
0x98d: V914 = ISZERO S0
0x98e: V915 = 0x9a7
0x991: JUMPI 0x9a7 V914
---
Entry stack: [V12, 0x18e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18e]

================================

Block 0x992
[0x992:0x9a0]
---
Predecessors: [0x98c]
Successors: [0x9a1]
---
0x992 PUSH1 0x12
0x994 DUP1
0x995 SLOAD
0x996 PUSH1 0x3
0x998 SWAP2
0x999 SWAP1
0x99a PUSH1 0xff
0x99c NOT
0x99d AND
0x99e PUSH1 0x1
0x9a0 DUP4
---
0x992: V916 = 0x12
0x995: V917 = S[0x12]
0x996: V918 = 0x3
0x99a: V919 = 0xff
0x99c: V920 = NOT 0xff
0x99d: V921 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V917
0x99e: V922 = 0x1
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: [0x3, 0x12, V921, 0x1, 0x3]
Exit stack: [V12, 0x18e, 0x3, 0x12, V921, 0x1, 0x3]

================================

Block 0x9a1
[0x9a1:0x9a6]
---
Predecessors: [0x992]
Successors: [0x9a7]
---
0x9a1 JUMPDEST
0x9a2 MUL
0x9a3 OR
0x9a4 SWAP1
0x9a5 SSTORE
0x9a6 POP
---
0x9a1: JUMPDEST 
0x9a2: V923 = MUL 0x3 0x1
0x9a3: V924 = OR 0x3 V921
0x9a5: S[0x12] = V924
---
Entry stack: [V12, 0x18e, 0x3, 0x12, V921, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x18e]

================================

Block 0x9a7
[0x9a7:0x9a9]
---
Predecessors: [0x98c, 0x9a1]
Successors: [0x9aa]
---
0x9a7 JUMPDEST
0x9a8 PUSH1 0x3
---
0x9a7: JUMPDEST 
0x9a8: V925 = 0x3
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x18e, 0x3]

================================

Block 0x9aa
[0x9aa:0x9b9]
---
Predecessors: [0x9a7]
Successors: [0x9ba, 0x9bb]
---
0x9aa JUMPDEST
0x9ab PUSH1 0x12
0x9ad SLOAD
0x9ae PUSH1 0xff
0x9b0 AND
0x9b1 PUSH1 0x4
0x9b3 DUP2
0x9b4 GT
0x9b5 ISZERO
0x9b6 PUSH2 0x9bb
0x9b9 JUMPI
---
0x9aa: JUMPDEST 
0x9ab: V926 = 0x12
0x9ad: V927 = S[0x12]
0x9ae: V928 = 0xff
0x9b0: V929 = AND 0xff V927
0x9b1: V930 = 0x4
0x9b4: V931 = GT V929 0x4
0x9b5: V932 = ISZERO V931
0x9b6: V933 = 0x9bb
0x9b9: JUMPI 0x9bb V932
---
Entry stack: [V12, 0x18e, 0x3]
Stack pops: 0
Stack additions: [V929]
Exit stack: [V12, 0x18e, 0x3, V929]

================================

Block 0x9ba
[0x9ba:0x9ba]
---
Predecessors: [0x9aa]
Successors: []
---
0x9ba INVALID
---
0x9ba: INVALID 
---
Entry stack: [V12, 0x18e, 0x3, V929]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, 0x3, V929]

================================

Block 0x9bb
[0x9bb:0x9c2]
---
Predecessors: [0x9aa]
Successors: [0x9c3, 0x9ca]
---
0x9bb JUMPDEST
0x9bc EQ
0x9bd DUP1
0x9be ISZERO
0x9bf PUSH2 0x9ca
0x9c2 JUMPI
---
0x9bb: JUMPDEST 
0x9bc: V934 = EQ V929 0x3
0x9be: V935 = ISZERO V934
0x9bf: V936 = 0x9ca
0x9c2: JUMPI 0x9ca V935
---
Entry stack: [V12, 0x18e, 0x3, V929]
Stack pops: 2
Stack additions: [V934]
Exit stack: [V12, 0x18e, V934]

================================

Block 0x9c3
[0x9c3:0x9c9]
---
Predecessors: [0x9bb]
Successors: [0x9ca]
---
0x9c3 POP
0x9c4 PUSH1 0x8
0x9c6 SLOAD
0x9c7 NUMBER
0x9c8 LT
0x9c9 ISZERO
---
0x9c4: V937 = 0x8
0x9c6: V938 = S[0x8]
0x9c7: V939 = NUMBER
0x9c8: V940 = LT V939 V938
0x9c9: V941 = ISZERO V940
---
Entry stack: [V12, 0x18e, V934]
Stack pops: 1
Stack additions: [V941]
Exit stack: [V12, 0x18e, V941]

================================

Block 0x9ca
[0x9ca:0x9cf]
---
Predecessors: [0x9bb, 0x9c3]
Successors: [0x9d0, 0x9d7]
---
0x9ca JUMPDEST
0x9cb ISZERO
0x9cc PUSH2 0x9d7
0x9cf JUMPI
---
0x9ca: JUMPDEST 
0x9cb: V942 = ISZERO S0
0x9cc: V943 = 0x9d7
0x9cf: JUMPI 0x9d7 V942
---
Entry stack: [V12, 0x18e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18e]

================================

Block 0x9d0
[0x9d0:0x9d6]
---
Predecessors: [0x9ca]
Successors: [0x483]
---
0x9d0 PUSH2 0x9d7
0x9d3 PUSH2 0x483
0x9d6 JUMP
---
0x9d0: V944 = 0x9d7
0x9d3: V945 = 0x483
0x9d6: JUMP 0x483
---
Entry stack: [V12, 0x18e]
Stack pops: 0
Stack additions: [0x9d7]
Exit stack: [V12, 0x18e, 0x9d7]

================================

Block 0x9d7
[0x9d7:0x9d7]
---
Predecessors: [0x5b2, 0x9ca]
Successors: [0x9d8]
---
0x9d7 JUMPDEST
---
0x9d7: JUMPDEST 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9d8
[0x9d8:0x9db]
---
Predecessors: [0x9d7]
Successors: [0x9dc]
---
0x9d8 JUMPDEST
0x9d9 PUSH1 0x4
0x9db DUP1
---
0x9d8: JUMPDEST 
0x9d9: V946 = 0x4
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4, 0x4]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0, 0x4, 0x4]

================================

Block 0x9dc
[0x9dc:0x9eb]
---
Predecessors: [0x9d8]
Successors: [0x9ec, 0x9ed]
---
0x9dc JUMPDEST
0x9dd PUSH1 0x12
0x9df SLOAD
0x9e0 PUSH1 0xff
0x9e2 AND
0x9e3 PUSH1 0x4
0x9e5 DUP2
0x9e6 GT
0x9e7 ISZERO
0x9e8 PUSH2 0x9ed
0x9eb JUMPI
---
0x9dc: JUMPDEST 
0x9dd: V947 = 0x12
0x9df: V948 = S[0x12]
0x9e0: V949 = 0xff
0x9e2: V950 = AND 0xff V948
0x9e3: V951 = 0x4
0x9e6: V952 = GT V950 0x4
0x9e7: V953 = ISZERO V952
0x9e8: V954 = 0x9ed
0x9eb: JUMPI 0x9ed V953
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, 0x4]
Stack pops: 0
Stack additions: [V950]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x4, 0x4, V950]

================================

Block 0x9ec
[0x9ec:0x9ec]
---
Predecessors: [0x9dc]
Successors: []
---
0x9ec INVALID
---
0x9ec: INVALID 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x4, 0x4, V950]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x4, 0x4, V950]

================================

Block 0x9ed
[0x9ed:0x9f2]
---
Predecessors: [0x9dc]
Successors: [0x9f3, 0x9f7]
---
0x9ed JUMPDEST
0x9ee EQ
0x9ef PUSH2 0x9f7
0x9f2 JUMPI
---
0x9ed: JUMPDEST 
0x9ee: V955 = EQ V950 0x4
0x9ef: V956 = 0x9f7
0x9f2: JUMPI 0x9f7 V955
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x4, 0x4, V950]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x4]

================================

Block 0x9f3
[0x9f3:0x9f6]
---
Predecessors: [0x9ed]
Successors: []
---
0x9f3 PUSH1 0x0
0x9f5 DUP1
0x9f6 REVERT
---
0x9f3: V957 = 0x0
0x9f6: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]

================================

Block 0x9f7
[0x9f7:0xa2b]
---
Predecessors: [0x9ed]
Successors: [0x5b2, 0xa2c]
---
0x9f7 JUMPDEST
0x9f8 PUSH1 0x2
0x9fa SLOAD
0x9fb PUSH1 0x1
0x9fd PUSH1 0xa0
0x9ff PUSH1 0x2
0xa01 EXP
0xa02 SUB
0xa03 SWAP1
0xa04 DUP2
0xa05 AND
0xa06 SWAP1
0xa07 ADDRESS
0xa08 AND
0xa09 BALANCE
0xa0a DUP1
0xa0b ISZERO
0xa0c PUSH2 0x8fc
0xa0f MUL
0xa10 SWAP1
0xa11 PUSH1 0x40
0xa13 MLOAD
0xa14 PUSH1 0x0
0xa16 PUSH1 0x40
0xa18 MLOAD
0xa19 DUP1
0xa1a DUP4
0xa1b SUB
0xa1c DUP2
0xa1d DUP6
0xa1e DUP9
0xa1f DUP9
0xa20 CALL
0xa21 SWAP4
0xa22 POP
0xa23 POP
0xa24 POP
0xa25 POP
0xa26 ISZERO
0xa27 ISZERO
0xa28 PUSH2 0x5b2
0xa2b JUMPI
---
0x9f7: JUMPDEST 
0x9f8: V958 = 0x2
0x9fa: V959 = S[0x2]
0x9fb: V960 = 0x1
0x9fd: V961 = 0xa0
0x9ff: V962 = 0x2
0xa01: V963 = EXP 0x2 0xa0
0xa02: V964 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa05: V965 = AND 0xffffffffffffffffffffffffffffffffffffffff V959
0xa07: V966 = ADDRESS
0xa08: V967 = AND V966 0xffffffffffffffffffffffffffffffffffffffff
0xa09: V968 = BALANCE V967
0xa0b: V969 = ISZERO V968
0xa0c: V970 = 0x8fc
0xa0f: V971 = MUL 0x8fc V969
0xa11: V972 = 0x40
0xa13: V973 = M[0x40]
0xa14: V974 = 0x0
0xa16: V975 = 0x40
0xa18: V976 = M[0x40]
0xa1b: V977 = SUB V973 V976
0xa20: V978 = CALL V971 V965 V968 V976 V977 V976 0x0
0xa26: V979 = ISZERO V978
0xa27: V980 = ISZERO V979
0xa28: V981 = 0x5b2
0xa2b: JUMPI 0x5b2 V980
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]

================================

Block 0xa2c
[0xa2c:0xa2c]
---
Predecessors: [0x9f7]
Successors: []
---
0xa2c INVALID
---
0xa2c: INVALID 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]

================================

Block 0xa2d
[0xa2d:0xa2d]
---
Predecessors: []
Successors: [0xa2e]
---
0xa2d JUMPDEST
---
0xa2d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa2e
[0xa2e:0xa2e]
---
Predecessors: [0xa2d]
Successors: [0xa2f]
---
0xa2e JUMPDEST
---
0xa2e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa2f
[0xa2f:0xa30]
---
Predecessors: [0xa2e]
Successors: [0xa31]
---
0xa2f JUMPDEST
0xa30 POP
---
0xa2f: JUMPDEST 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa31
[0xa31:0xa31]
---
Predecessors: [0xa2f]
Successors: [0xa32]
---
0xa31 JUMPDEST
---
0xa31: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa32
[0xa32:0xa33]
---
Predecessors: [0xa31]
Successors: []
Has unresolved jump.
---
0xa32 JUMPDEST
0xa33 JUMP
---
0xa32: JUMPDEST 
0xa33: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa34
[0xa34:0xa39]
---
Predecessors: [0x263]
Successors: [0x1a3]
---
0xa34 JUMPDEST
0xa35 PUSH1 0x7
0xa37 SLOAD
0xa38 DUP2
0xa39 JUMP
---
0xa34: JUMPDEST 
0xa35: V982 = 0x7
0xa37: V983 = S[0x7]
0xa39: JUMP 0x1a3
---
Entry stack: [V12, 0x1a3]
Stack pops: 1
Stack additions: [S0, V983]
Exit stack: [V12, 0x1a3, V983]

================================

Block 0xa3a
[0xa3a:0xa50]
---
Predecessors: [0x288]
Successors: [0xa51, 0xa55]
---
0xa3a JUMPDEST
0xa3b PUSH1 0x2
0xa3d SLOAD
0xa3e CALLER
0xa3f PUSH1 0x1
0xa41 PUSH1 0xa0
0xa43 PUSH1 0x2
0xa45 EXP
0xa46 SUB
0xa47 SWAP1
0xa48 DUP2
0xa49 AND
0xa4a SWAP2
0xa4b AND
0xa4c EQ
0xa4d PUSH2 0xa55
0xa50 JUMPI
---
0xa3a: JUMPDEST 
0xa3b: V984 = 0x2
0xa3d: V985 = S[0x2]
0xa3e: V986 = CALLER
0xa3f: V987 = 0x1
0xa41: V988 = 0xa0
0xa43: V989 = 0x2
0xa45: V990 = EXP 0x2 0xa0
0xa46: V991 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa49: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V986
0xa4b: V993 = AND V985 0xffffffffffffffffffffffffffffffffffffffff
0xa4c: V994 = EQ V993 V992
0xa4d: V995 = 0xa55
0xa50: JUMPI 0xa55 V994
---
Entry stack: [V12, 0x18e, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V225]

================================

Block 0xa51
[0xa51:0xa54]
---
Predecessors: [0xa3a]
Successors: []
---
0xa51 PUSH1 0x0
0xa53 DUP1
0xa54 REVERT
---
0xa51: V996 = 0x0
0xa54: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V225]

================================

Block 0xa55
[0xa55:0xa58]
---
Predecessors: [0xa3a]
Successors: [0xa59]
---
0xa55 JUMPDEST
0xa56 PUSH1 0x1
0xa58 DUP1
---
0xa55: JUMPDEST 
0xa56: V997 = 0x1
---
Entry stack: [V12, 0x18e, V225]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V12, 0x18e, V225, 0x1, 0x1]

================================

Block 0xa59
[0xa59:0xa68]
---
Predecessors: [0xa55]
Successors: [0xa69, 0xa6a]
---
0xa59 JUMPDEST
0xa5a PUSH1 0x12
0xa5c SLOAD
0xa5d PUSH1 0xff
0xa5f AND
0xa60 PUSH1 0x4
0xa62 DUP2
0xa63 GT
0xa64 ISZERO
0xa65 PUSH2 0xa6a
0xa68 JUMPI
---
0xa59: JUMPDEST 
0xa5a: V998 = 0x12
0xa5c: V999 = S[0x12]
0xa5d: V1000 = 0xff
0xa5f: V1001 = AND 0xff V999
0xa60: V1002 = 0x4
0xa63: V1003 = GT V1001 0x4
0xa64: V1004 = ISZERO V1003
0xa65: V1005 = 0xa6a
0xa68: JUMPI 0xa6a V1004
---
Entry stack: [V12, 0x18e, V225, 0x1, 0x1]
Stack pops: 0
Stack additions: [V1001]
Exit stack: [V12, 0x18e, V225, 0x1, 0x1, V1001]

================================

Block 0xa69
[0xa69:0xa69]
---
Predecessors: [0xa59]
Successors: []
---
0xa69 INVALID
---
0xa69: INVALID 
---
Entry stack: [V12, 0x18e, V225, 0x1, 0x1, V1001]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V225, 0x1, 0x1, V1001]

================================

Block 0xa6a
[0xa6a:0xa6f]
---
Predecessors: [0xa59]
Successors: [0xa70, 0xa74]
---
0xa6a JUMPDEST
0xa6b EQ
0xa6c PUSH2 0xa74
0xa6f JUMPI
---
0xa6a: JUMPDEST 
0xa6b: V1006 = EQ V1001 0x1
0xa6c: V1007 = 0xa74
0xa6f: JUMPI 0xa74 V1006
---
Entry stack: [V12, 0x18e, V225, 0x1, 0x1, V1001]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x18e, V225, 0x1]

================================

Block 0xa70
[0xa70:0xa73]
---
Predecessors: [0xa6a]
Successors: []
---
0xa70 PUSH1 0x0
0xa72 DUP1
0xa73 REVERT
---
0xa70: V1008 = 0x0
0xa73: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V225, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V225, 0x1]

================================

Block 0xa74
[0xa74:0xa7f]
---
Predecessors: [0xa6a]
Successors: [0xa80, 0xa84]
---
0xa74 JUMPDEST
0xa75 PUSH1 0x1
0xa77 SLOAD
0xa78 NUMBER
0xa79 ADD
0xa7a DUP3
0xa7b GT
0xa7c PUSH2 0xa84
0xa7f JUMPI
---
0xa74: JUMPDEST 
0xa75: V1009 = 0x1
0xa77: V1010 = S[0x1]
0xa78: V1011 = NUMBER
0xa79: V1012 = ADD V1011 V1010
0xa7b: V1013 = GT V225 V1012
0xa7c: V1014 = 0xa84
0xa7f: JUMPI 0xa84 V1013
---
Entry stack: [V12, 0x18e, V225, 0x1]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x18e, V225, 0x1]

================================

Block 0xa80
[0xa80:0xa83]
---
Predecessors: [0xa74]
Successors: []
---
0xa80 PUSH1 0x0
0xa82 DUP1
0xa83 REVERT
---
0xa80: V1015 = 0x0
0xa83: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V225, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V225, 0x1]

================================

Block 0xa84
[0xa84:0xaa0]
---
Predecessors: [0xa74]
Successors: [0xaa1]
---
0xa84 JUMPDEST
0xa85 PUSH1 0x7
0xa87 DUP3
0xa88 SWAP1
0xa89 SSTORE
0xa8a PUSH1 0x0
0xa8c SLOAD
0xa8d DUP3
0xa8e ADD
0xa8f PUSH1 0x8
0xa91 SSTORE
0xa92 PUSH1 0x12
0xa94 DUP1
0xa95 SLOAD
0xa96 PUSH1 0x2
0xa98 SWAP2
0xa99 SWAP1
0xa9a PUSH1 0xff
0xa9c NOT
0xa9d AND
0xa9e PUSH1 0x1
0xaa0 DUP4
---
0xa84: JUMPDEST 
0xa85: V1016 = 0x7
0xa89: S[0x7] = V225
0xa8a: V1017 = 0x0
0xa8c: V1018 = S[0x0]
0xa8e: V1019 = ADD V225 V1018
0xa8f: V1020 = 0x8
0xa91: S[0x8] = V1019
0xa92: V1021 = 0x12
0xa95: V1022 = S[0x12]
0xa96: V1023 = 0x2
0xa9a: V1024 = 0xff
0xa9c: V1025 = NOT 0xff
0xa9d: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1022
0xa9e: V1027 = 0x1
---
Entry stack: [V12, 0x18e, V225, 0x1]
Stack pops: 2
Stack additions: [S1, S0, 0x2, 0x12, V1026, 0x1, 0x2]
Exit stack: [V12, 0x18e, V225, 0x1, 0x2, 0x12, V1026, 0x1, 0x2]

================================

Block 0xaa1
[0xaa1:0xaa6]
---
Predecessors: [0xa84]
Successors: [0xaa7]
---
0xaa1 JUMPDEST
0xaa2 MUL
0xaa3 OR
0xaa4 SWAP1
0xaa5 SSTORE
0xaa6 POP
---
0xaa1: JUMPDEST 
0xaa2: V1028 = MUL 0x2 0x1
0xaa3: V1029 = OR 0x2 V1026
0xaa5: S[0x12] = V1029
---
Entry stack: [V12, 0x18e, V225, 0x1, 0x2, 0x12, V1026, 0x1, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x18e, V225, 0x1]

================================

Block 0xaa7
[0xaa7:0xaa7]
---
Predecessors: [0xaa1]
Successors: [0xaa8]
---
0xaa7 JUMPDEST
---
0xaa7: JUMPDEST 
---
Entry stack: [V12, 0x18e, V225, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V225, 0x1]

================================

Block 0xaa8
[0xaa8:0xaa9]
---
Predecessors: [0xaa7]
Successors: [0xaaa]
---
0xaa8 JUMPDEST
0xaa9 POP
---
0xaa8: JUMPDEST 
---
Entry stack: [V12, 0x18e, V225, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18e, V225]

================================

Block 0xaaa
[0xaaa:0xaac]
---
Predecessors: [0xaa8]
Successors: [0x18e]
---
0xaaa JUMPDEST
0xaab POP
0xaac JUMP
---
0xaaa: JUMPDEST 
0xaac: JUMP 0x18e
---
Entry stack: [V12, 0x18e, V225]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xaad
[0xaad:0xabb]
---
Predecessors: [0x2a0]
Successors: [0x227]
---
0xaad JUMPDEST
0xaae PUSH1 0x5
0xab0 SLOAD
0xab1 PUSH1 0x1
0xab3 PUSH1 0xa0
0xab5 PUSH1 0x2
0xab7 EXP
0xab8 SUB
0xab9 AND
0xaba DUP2
0xabb JUMP
---
0xaad: JUMPDEST 
0xaae: V1030 = 0x5
0xab0: V1031 = S[0x5]
0xab1: V1032 = 0x1
0xab3: V1033 = 0xa0
0xab5: V1034 = 0x2
0xab7: V1035 = EXP 0x2 0xa0
0xab8: V1036 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab9: V1037 = AND 0xffffffffffffffffffffffffffffffffffffffff V1031
0xabb: JUMP 0x227
---
Entry stack: [V12, 0x227]
Stack pops: 1
Stack additions: [S0, V1037]
Exit stack: [V12, 0x227, V1037]

================================

Block 0xabc
[0xabc:0xac1]
---
Predecessors: [0x2cf]
Successors: [0x1a3]
---
0xabc JUMPDEST
0xabd PUSH1 0x1
0xabf SLOAD
0xac0 DUP2
0xac1 JUMP
---
0xabc: JUMPDEST 
0xabd: V1038 = 0x1
0xabf: V1039 = S[0x1]
0xac1: JUMP 0x1a3
---
Entry stack: [V12, 0x1a3]
Stack pops: 1
Stack additions: [S0, V1039]
Exit stack: [V12, 0x1a3, V1039]

================================

Block 0xac2
[0xac2:0xac6]
---
Predecessors: [0x2f4, 0x86f, 0x1027]
Successors: [0xac7]
---
0xac2 JUMPDEST
0xac3 PUSH1 0x0
0xac5 DUP1
0xac6 DUP1
---
0xac2: JUMPDEST 
0xac3: V1040 = 0x0
---
Entry stack: [S17, V610, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x1a3, 0x877, 0x102f}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x1a3, 0x877, 0x102f}, 0x0, 0x0, 0x0]

================================

Block 0xac7
[0xac7:0xad3]
---
Predecessors: [0xac2, 0xaf4]
Successors: [0x90e, 0xad4]
---
0xac7 JUMPDEST
0xac8 PUSH1 0x3
0xaca DUP2
0xacb PUSH1 0xff
0xacd AND
0xace LT
0xacf ISZERO
0xad0 PUSH2 0x90e
0xad3 JUMPI
---
0xac7: JUMPDEST 
0xac8: V1041 = 0x3
0xacb: V1042 = 0xff
0xacd: V1043 = AND 0xff S0
0xace: V1044 = LT V1043 0x3
0xacf: V1045 = ISZERO V1044
0xad0: V1046 = 0x90e
0xad3: JUMPI 0x90e V1045
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x877, 0x102f}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x877, 0x102f}, 0x0, S1, S0]

================================

Block 0xad4
[0xad4:0xae1]
---
Predecessors: [0xac7]
Successors: [0xae2, 0xae3]
---
0xad4 PUSH1 0x9
0xad6 PUSH1 0xff
0xad8 DUP3
0xad9 AND
0xada PUSH1 0x3
0xadc DUP2
0xadd LT
0xade PUSH2 0xae3
0xae1 JUMPI
---
0xad4: V1047 = 0x9
0xad6: V1048 = 0xff
0xad9: V1049 = AND S0 0xff
0xada: V1050 = 0x3
0xadd: V1051 = LT V1049 0x3
0xade: V1052 = 0xae3
0xae1: JUMPI 0xae3 V1051
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x877, 0x102f}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x9, V1049]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x877, 0x102f}, 0x0, S1, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}, 0x9, V1049]

================================

Block 0xae2
[0xae2:0xae2]
---
Predecessors: [0xad4]
Successors: []
---
0xae2 INVALID
---
0xae2: INVALID 
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x877, 0x102f}, 0x0, S3, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}, 0x9, V1049]
Stack pops: 0
Stack additions: []
Exit stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x877, 0x102f}, 0x0, S3, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}, 0x9, V1049]

================================

Block 0xae3
[0xae3:0xae9]
---
Predecessors: [0xad4]
Successors: [0xaea]
---
0xae3 JUMPDEST
0xae4 PUSH1 0x3
0xae6 MUL
0xae7 ADD
0xae8 PUSH1 0x0
---
0xae3: JUMPDEST 
0xae4: V1053 = 0x3
0xae6: V1054 = MUL 0x3 V1049
0xae7: V1055 = ADD V1054 0x9
0xae8: V1056 = 0x0
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x877, 0x102f}, 0x0, S3, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}, 0x9, V1049]
Stack pops: 2
Stack additions: [V1055, 0x0]
Exit stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x877, 0x102f}, 0x0, S3, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}, V1055, 0x0]

================================

Block 0xaea
[0xaea:0xaf3]
---
Predecessors: [0xae3]
Successors: [0xaf4]
---
0xaea JUMPDEST
0xaeb POP
0xaec PUSH1 0x2
0xaee ADD
0xaef SLOAD
0xaf0 DUP3
0xaf1 ADD
0xaf2 SWAP2
0xaf3 POP
---
0xaea: JUMPDEST 
0xaec: V1057 = 0x2
0xaee: V1058 = ADD 0x2 V1055
0xaef: V1059 = S[V1058]
0xaf1: V1060 = ADD S3 V1059
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x877, 0x102f}, 0x0, S3, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}, V1055, 0x0]
Stack pops: 4
Stack additions: [V1060, S2]
Exit stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x1a3, 0x877, 0x102f}, 0x0, V1060, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}]

================================

Block 0xaf4
[0xaf4:0xafb]
---
Predecessors: [0xaea]
Successors: [0xac7]
---
0xaf4 JUMPDEST
0xaf5 PUSH1 0x1
0xaf7 ADD
0xaf8 PUSH2 0xac7
0xafb JUMP
---
0xaf4: JUMPDEST 
0xaf5: V1061 = 0x1
0xaf7: V1062 = ADD 0x1 {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}
0xaf8: V1063 = 0xac7
0xafb: JUMP 0xac7
---
Entry stack: [S17, V610, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x877, 0x102f}, 0x0, V1060, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9}]
Stack pops: 1
Stack additions: [V1062]
Exit stack: [S17, V610, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a3, 0x877, 0x102f}, 0x0, V1060, V1062]

================================

Block 0xafc
[0xafc:0xaff]
---
Predecessors: []
Successors: [0xb00]
---
0xafc JUMPDEST
0xafd DUP2
0xafe SWAP3
0xaff POP
---
0xafc: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: [S1, S1, S0]
Exit stack: [S1, S1, S0]

================================

Block 0xb00
[0xb00:0xb04]
---
Predecessors: [0xafc]
Successors: []
Has unresolved jump.
---
0xb00 JUMPDEST
0xb01 POP
0xb02 POP
0xb03 SWAP1
0xb04 JUMP
---
0xb00: JUMPDEST 
0xb04: JUMP S3
---
Entry stack: [S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [S2]

================================

Block 0xb05
[0xb05:0xb0a]
---
Predecessors: [0x319]
Successors: [0x1a3]
---
0xb05 JUMPDEST
0xb06 PUSH1 0x0
0xb08 SLOAD
0xb09 DUP2
0xb0a JUMP
---
0xb05: JUMPDEST 
0xb06: V1064 = 0x0
0xb08: V1065 = S[0x0]
0xb0a: JUMP 0x1a3
---
Entry stack: [V12, 0x1a3]
Stack pops: 1
Stack additions: [S0, V1065]
Exit stack: [V12, 0x1a3, V1065]

================================

Block 0xb0b
[0xb0b:0xb19]
---
Predecessors: [0x33e]
Successors: [0x227]
---
0xb0b JUMPDEST
0xb0c PUSH1 0x2
0xb0e SLOAD
0xb0f PUSH1 0x1
0xb11 PUSH1 0xa0
0xb13 PUSH1 0x2
0xb15 EXP
0xb16 SUB
0xb17 AND
0xb18 DUP2
0xb19 JUMP
---
0xb0b: JUMPDEST 
0xb0c: V1066 = 0x2
0xb0e: V1067 = S[0x2]
0xb0f: V1068 = 0x1
0xb11: V1069 = 0xa0
0xb13: V1070 = 0x2
0xb15: V1071 = EXP 0x2 0xa0
0xb16: V1072 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb17: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff V1067
0xb19: JUMP 0x227
---
Entry stack: [V12, 0x227]
Stack pops: 1
Stack additions: [S0, V1073]
Exit stack: [V12, 0x227, V1073]

================================

Block 0xb1a
[0xb1a:0xb28]
---
Predecessors: [0x36d]
Successors: [0x227]
---
0xb1a JUMPDEST
0xb1b PUSH1 0x3
0xb1d SLOAD
0xb1e PUSH1 0x1
0xb20 PUSH1 0xa0
0xb22 PUSH1 0x2
0xb24 EXP
0xb25 SUB
0xb26 AND
0xb27 DUP2
0xb28 JUMP
---
0xb1a: JUMPDEST 
0xb1b: V1074 = 0x3
0xb1d: V1075 = S[0x3]
0xb1e: V1076 = 0x1
0xb20: V1077 = 0xa0
0xb22: V1078 = 0x2
0xb24: V1079 = EXP 0x2 0xa0
0xb25: V1080 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb26: V1081 = AND 0xffffffffffffffffffffffffffffffffffffffff V1075
0xb28: JUMP 0x227
---
Entry stack: [V12, 0x227]
Stack pops: 1
Stack additions: [S0, V1081]
Exit stack: [V12, 0x227, V1081]

================================

Block 0xb29
[0xb29:0xb37]
---
Predecessors: [0x39c]
Successors: [0x227]
---
0xb29 JUMPDEST
0xb2a PUSH1 0x6
0xb2c SLOAD
0xb2d PUSH1 0x1
0xb2f PUSH1 0xa0
0xb31 PUSH1 0x2
0xb33 EXP
0xb34 SUB
0xb35 AND
0xb36 DUP2
0xb37 JUMP
---
0xb29: JUMPDEST 
0xb2a: V1082 = 0x6
0xb2c: V1083 = S[0x6]
0xb2d: V1084 = 0x1
0xb2f: V1085 = 0xa0
0xb31: V1086 = 0x2
0xb33: V1087 = EXP 0x2 0xa0
0xb34: V1088 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb35: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff V1083
0xb37: JUMP 0x227
---
Entry stack: [V12, 0x227]
Stack pops: 1
Stack additions: [S0, V1089]
Exit stack: [V12, 0x227, V1089]

================================

Block 0xb38
[0xb38:0xb40]
---
Predecessors: [0x3cb]
Successors: [0x3d3]
---
0xb38 JUMPDEST
0xb39 PUSH1 0x12
0xb3b SLOAD
0xb3c PUSH1 0xff
0xb3e AND
0xb3f DUP2
0xb40 JUMP
---
0xb38: JUMPDEST 
0xb39: V1090 = 0x12
0xb3b: V1091 = S[0x12]
0xb3c: V1092 = 0xff
0xb3e: V1093 = AND 0xff V1091
0xb40: JUMP 0x3d3
---
Entry stack: [V12, 0x3d3]
Stack pops: 1
Stack additions: [S0, V1093]
Exit stack: [V12, 0x3d3, V1093]

================================

Block 0xb41
[0xb41:0xb45]
---
Predecessors: [0x402]
Successors: [0xb46]
---
0xb41 JUMPDEST
0xb42 PUSH1 0x0
0xb44 PUSH1 0x2
---
0xb41: JUMPDEST 
0xb42: V1094 = 0x0
0xb44: V1095 = 0x2
---
Entry stack: [V12, 0x3d3]
Stack pops: 0
Stack additions: [0x0, 0x2]
Exit stack: [V12, 0x3d3, 0x0, 0x2]

================================

Block 0xb46
[0xb46:0xb55]
---
Predecessors: [0xb41]
Successors: [0xb56, 0xb57]
---
0xb46 JUMPDEST
0xb47 PUSH1 0x12
0xb49 SLOAD
0xb4a PUSH1 0xff
0xb4c AND
0xb4d PUSH1 0x4
0xb4f DUP2
0xb50 GT
0xb51 ISZERO
0xb52 PUSH2 0xb57
0xb55 JUMPI
---
0xb46: JUMPDEST 
0xb47: V1096 = 0x12
0xb49: V1097 = S[0x12]
0xb4a: V1098 = 0xff
0xb4c: V1099 = AND 0xff V1097
0xb4d: V1100 = 0x4
0xb50: V1101 = GT V1099 0x4
0xb51: V1102 = ISZERO V1101
0xb52: V1103 = 0xb57
0xb55: JUMPI 0xb57 V1102
---
Entry stack: [V12, 0x3d3, 0x0, 0x2]
Stack pops: 0
Stack additions: [V1099]
Exit stack: [V12, 0x3d3, 0x0, 0x2, V1099]

================================

Block 0xb56
[0xb56:0xb56]
---
Predecessors: [0xb46]
Successors: []
---
0xb56 INVALID
---
0xb56: INVALID 
---
Entry stack: [V12, 0x3d3, 0x0, 0x2, V1099]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3d3, 0x0, 0x2, V1099]

================================

Block 0xb57
[0xb57:0xb5e]
---
Predecessors: [0xb46]
Successors: [0xb5f, 0xb66]
---
0xb57 JUMPDEST
0xb58 EQ
0xb59 DUP1
0xb5a ISZERO
0xb5b PUSH2 0xb66
0xb5e JUMPI
---
0xb57: JUMPDEST 
0xb58: V1104 = EQ V1099 0x2
0xb5a: V1105 = ISZERO V1104
0xb5b: V1106 = 0xb66
0xb5e: JUMPI 0xb66 V1105
---
Entry stack: [V12, 0x3d3, 0x0, 0x2, V1099]
Stack pops: 2
Stack additions: [V1104]
Exit stack: [V12, 0x3d3, 0x0, V1104]

================================

Block 0xb5f
[0xb5f:0xb65]
---
Predecessors: [0xb57]
Successors: [0xb66]
---
0xb5f POP
0xb60 PUSH1 0x7
0xb62 SLOAD
0xb63 NUMBER
0xb64 LT
0xb65 ISZERO
---
0xb60: V1107 = 0x7
0xb62: V1108 = S[0x7]
0xb63: V1109 = NUMBER
0xb64: V1110 = LT V1109 V1108
0xb65: V1111 = ISZERO V1110
---
Entry stack: [V12, 0x3d3, 0x0, V1104]
Stack pops: 1
Stack additions: [V1111]
Exit stack: [V12, 0x3d3, 0x0, V1111]

================================

Block 0xb66
[0xb66:0xb6b]
---
Predecessors: [0xb57, 0xb5f]
Successors: [0xb6c, 0xb81]
---
0xb66 JUMPDEST
0xb67 ISZERO
0xb68 PUSH2 0xb81
0xb6b JUMPI
---
0xb66: JUMPDEST 
0xb67: V1112 = ISZERO S0
0xb68: V1113 = 0xb81
0xb6b: JUMPI 0xb81 V1112
---
Entry stack: [V12, 0x3d3, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x3d3, 0x0]

================================

Block 0xb6c
[0xb6c:0xb7a]
---
Predecessors: [0xb66]
Successors: [0xb7b]
---
0xb6c PUSH1 0x12
0xb6e DUP1
0xb6f SLOAD
0xb70 PUSH1 0x3
0xb72 SWAP2
0xb73 SWAP1
0xb74 PUSH1 0xff
0xb76 NOT
0xb77 AND
0xb78 PUSH1 0x1
0xb7a DUP4
---
0xb6c: V1114 = 0x12
0xb6f: V1115 = S[0x12]
0xb70: V1116 = 0x3
0xb74: V1117 = 0xff
0xb76: V1118 = NOT 0xff
0xb77: V1119 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1115
0xb78: V1120 = 0x1
---
Entry stack: [V12, 0x3d3, 0x0]
Stack pops: 0
Stack additions: [0x3, 0x12, V1119, 0x1, 0x3]
Exit stack: [V12, 0x3d3, 0x0, 0x3, 0x12, V1119, 0x1, 0x3]

================================

Block 0xb7b
[0xb7b:0xb80]
---
Predecessors: [0xb6c]
Successors: [0xb81]
---
0xb7b JUMPDEST
0xb7c MUL
0xb7d OR
0xb7e SWAP1
0xb7f SSTORE
0xb80 POP
---
0xb7b: JUMPDEST 
0xb7c: V1121 = MUL 0x3 0x1
0xb7d: V1122 = OR 0x3 V1119
0xb7f: S[0x12] = V1122
---
Entry stack: [V12, 0x3d3, 0x0, 0x3, 0x12, V1119, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x3d3, 0x0]

================================

Block 0xb81
[0xb81:0xb83]
---
Predecessors: [0xb66, 0xb7b]
Successors: [0xb84]
---
0xb81 JUMPDEST
0xb82 PUSH1 0x3
---
0xb81: JUMPDEST 
0xb82: V1123 = 0x3
---
Entry stack: [V12, 0x3d3, 0x0]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x3d3, 0x0, 0x3]

================================

Block 0xb84
[0xb84:0xb93]
---
Predecessors: [0xb81]
Successors: [0xb94, 0xb95]
---
0xb84 JUMPDEST
0xb85 PUSH1 0x12
0xb87 SLOAD
0xb88 PUSH1 0xff
0xb8a AND
0xb8b PUSH1 0x4
0xb8d DUP2
0xb8e GT
0xb8f ISZERO
0xb90 PUSH2 0xb95
0xb93 JUMPI
---
0xb84: JUMPDEST 
0xb85: V1124 = 0x12
0xb87: V1125 = S[0x12]
0xb88: V1126 = 0xff
0xb8a: V1127 = AND 0xff V1125
0xb8b: V1128 = 0x4
0xb8e: V1129 = GT V1127 0x4
0xb8f: V1130 = ISZERO V1129
0xb90: V1131 = 0xb95
0xb93: JUMPI 0xb95 V1130
---
Entry stack: [V12, 0x3d3, 0x0, 0x3]
Stack pops: 0
Stack additions: [V1127]
Exit stack: [V12, 0x3d3, 0x0, 0x3, V1127]

================================

Block 0xb94
[0xb94:0xb94]
---
Predecessors: [0xb84]
Successors: []
---
0xb94 INVALID
---
0xb94: INVALID 
---
Entry stack: [V12, 0x3d3, 0x0, 0x3, V1127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3d3, 0x0, 0x3, V1127]

================================

Block 0xb95
[0xb95:0xb9c]
---
Predecessors: [0xb84]
Successors: [0xb9d, 0xba4]
---
0xb95 JUMPDEST
0xb96 EQ
0xb97 DUP1
0xb98 ISZERO
0xb99 PUSH2 0xba4
0xb9c JUMPI
---
0xb95: JUMPDEST 
0xb96: V1132 = EQ V1127 0x3
0xb98: V1133 = ISZERO V1132
0xb99: V1134 = 0xba4
0xb9c: JUMPI 0xba4 V1133
---
Entry stack: [V12, 0x3d3, 0x0, 0x3, V1127]
Stack pops: 2
Stack additions: [V1132]
Exit stack: [V12, 0x3d3, 0x0, V1132]

================================

Block 0xb9d
[0xb9d:0xba3]
---
Predecessors: [0xb95]
Successors: [0xba4]
---
0xb9d POP
0xb9e PUSH1 0x8
0xba0 SLOAD
0xba1 NUMBER
0xba2 LT
0xba3 ISZERO
---
0xb9e: V1135 = 0x8
0xba0: V1136 = S[0x8]
0xba1: V1137 = NUMBER
0xba2: V1138 = LT V1137 V1136
0xba3: V1139 = ISZERO V1138
---
Entry stack: [V12, 0x3d3, 0x0, V1132]
Stack pops: 1
Stack additions: [V1139]
Exit stack: [V12, 0x3d3, 0x0, V1139]

================================

Block 0xba4
[0xba4:0xba9]
---
Predecessors: [0xb95, 0xb9d]
Successors: [0xbaa, 0xbb1]
---
0xba4 JUMPDEST
0xba5 ISZERO
0xba6 PUSH2 0xbb1
0xba9 JUMPI
---
0xba4: JUMPDEST 
0xba5: V1140 = ISZERO S0
0xba6: V1141 = 0xbb1
0xba9: JUMPI 0xbb1 V1140
---
Entry stack: [V12, 0x3d3, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x3d3, 0x0]

================================

Block 0xbaa
[0xbaa:0xbb0]
---
Predecessors: [0xba4]
Successors: [0x483]
---
0xbaa PUSH2 0xbb1
0xbad PUSH2 0x483
0xbb0 JUMP
---
0xbaa: V1142 = 0xbb1
0xbad: V1143 = 0x483
0xbb0: JUMP 0x483
---
Entry stack: [V12, 0x3d3, 0x0]
Stack pops: 0
Stack additions: [0xbb1]
Exit stack: [V12, 0x3d3, 0x0, 0xbb1]

================================

Block 0xbb1
[0xbb1:0xbb1]
---
Predecessors: [0x5b2, 0xba4]
Successors: [0xbb2]
---
0xbb1 JUMPDEST
---
0xbb1: JUMPDEST 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbb2
[0xbb2:0xbb9]
---
Predecessors: [0xbb1]
Successors: [0xbba]
---
0xbb2 JUMPDEST
0xbb3 POP
0xbb4 PUSH1 0x12
0xbb6 SLOAD
0xbb7 PUSH1 0xff
0xbb9 AND
---
0xbb2: JUMPDEST 
0xbb4: V1144 = 0x12
0xbb6: V1145 = S[0x12]
0xbb7: V1146 = 0xff
0xbb9: V1147 = AND 0xff V1145
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V1147]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, V1147]

================================

Block 0xbba
[0xbba:0xbba]
---
Predecessors: [0xbb2]
Successors: [0xbbb]
---
0xbba JUMPDEST
---
0xbba: JUMPDEST 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, V1147]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, V1147]

================================

Block 0xbbb
[0xbbb:0xbbd]
---
Predecessors: [0xbba]
Successors: [0x3d3]
---
0xbbb JUMPDEST
0xbbc SWAP1
0xbbd JUMP
---
0xbbb: JUMPDEST 
0xbbd: JUMP S1
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, V1147]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, V1147]

================================

Block 0xbbe
[0xbbe:0xbd4]
---
Predecessors: [0x439]
Successors: [0xbd5, 0xbd9]
---
0xbbe JUMPDEST
0xbbf PUSH1 0x2
0xbc1 SLOAD
0xbc2 CALLER
0xbc3 PUSH1 0x1
0xbc5 PUSH1 0xa0
0xbc7 PUSH1 0x2
0xbc9 EXP
0xbca SUB
0xbcb SWAP1
0xbcc DUP2
0xbcd AND
0xbce SWAP2
0xbcf AND
0xbd0 EQ
0xbd1 PUSH2 0xbd9
0xbd4 JUMPI
---
0xbbe: JUMPDEST 
0xbbf: V1148 = 0x2
0xbc1: V1149 = S[0x2]
0xbc2: V1150 = CALLER
0xbc3: V1151 = 0x1
0xbc5: V1152 = 0xa0
0xbc7: V1153 = 0x2
0xbc9: V1154 = EXP 0x2 0xa0
0xbca: V1155 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbcd: V1156 = AND 0xffffffffffffffffffffffffffffffffffffffff V1150
0xbcf: V1157 = AND V1149 0xffffffffffffffffffffffffffffffffffffffff
0xbd0: V1158 = EQ V1157 V1156
0xbd1: V1159 = 0xbd9
0xbd4: JUMPI 0xbd9 V1158
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402]

================================

Block 0xbd5
[0xbd5:0xbd8]
---
Predecessors: [0xbbe]
Successors: []
---
0xbd5 PUSH1 0x0
0xbd7 DUP1
0xbd8 REVERT
---
0xbd5: V1160 = 0x0
0xbd8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402]

================================

Block 0xbd9
[0xbd9:0xbdc]
---
Predecessors: [0xbbe]
Successors: [0xbdd]
---
0xbd9 JUMPDEST
0xbda PUSH1 0x0
0xbdc DUP1
---
0xbd9: JUMPDEST 
0xbda: V1161 = 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, 0x0]

================================

Block 0xbdd
[0xbdd:0xbec]
---
Predecessors: [0xbd9]
Successors: [0xbed, 0xbee]
---
0xbdd JUMPDEST
0xbde PUSH1 0x12
0xbe0 SLOAD
0xbe1 PUSH1 0xff
0xbe3 AND
0xbe4 PUSH1 0x4
0xbe6 DUP2
0xbe7 GT
0xbe8 ISZERO
0xbe9 PUSH2 0xbee
0xbec JUMPI
---
0xbdd: JUMPDEST 
0xbde: V1162 = 0x12
0xbe0: V1163 = S[0x12]
0xbe1: V1164 = 0xff
0xbe3: V1165 = AND 0xff V1163
0xbe4: V1166 = 0x4
0xbe7: V1167 = GT V1165 0x4
0xbe8: V1168 = ISZERO V1167
0xbe9: V1169 = 0xbee
0xbec: JUMPI 0xbee V1168
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, 0x0]
Stack pops: 0
Stack additions: [V1165]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, 0x0, V1165]

================================

Block 0xbed
[0xbed:0xbed]
---
Predecessors: [0xbdd]
Successors: []
---
0xbed INVALID
---
0xbed: INVALID 
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, 0x0, V1165]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, 0x0, V1165]

================================

Block 0xbee
[0xbee:0xbf3]
---
Predecessors: [0xbdd]
Successors: [0xbf4, 0xbf8]
---
0xbee JUMPDEST
0xbef EQ
0xbf0 PUSH2 0xbf8
0xbf3 JUMPI
---
0xbee: JUMPDEST 
0xbef: V1170 = EQ V1165 0x0
0xbf0: V1171 = 0xbf8
0xbf3: JUMPI 0xbf8 V1170
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, 0x0, V1165]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xbf4
[0xbf4:0xbf7]
---
Predecessors: [0xbee]
Successors: []
---
0xbf4 PUSH1 0x0
0xbf6 DUP1
0xbf7 REVERT
---
0xbf4: V1172 = 0x0
0xbf7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xbf8
[0xbf8:0xc08]
---
Predecessors: [0xbee]
Successors: [0xc09, 0xc0d]
---
0xbf8 JUMPDEST
0xbf9 PUSH1 0x1
0xbfb PUSH1 0xa0
0xbfd PUSH1 0x2
0xbff EXP
0xc00 SUB
0xc01 DUP7
0xc02 AND
0xc03 ISZERO
0xc04 ISZERO
0xc05 PUSH2 0xc0d
0xc08 JUMPI
---
0xbf8: JUMPDEST 
0xbf9: V1173 = 0x1
0xbfb: V1174 = 0xa0
0xbfd: V1175 = 0x2
0xbff: V1176 = EXP 0x2 0xa0
0xc00: V1177 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc02: V1178 = AND V392 0xffffffffffffffffffffffffffffffffffffffff
0xc03: V1179 = ISZERO V1178
0xc04: V1180 = ISZERO V1179
0xc05: V1181 = 0xc0d
0xc08: JUMPI 0xc0d V1180
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc09
[0xc09:0xc0c]
---
Predecessors: [0xbf8]
Successors: []
---
0xc09 PUSH1 0x0
0xc0b DUP1
0xc0c REVERT
---
0xc09: V1182 = 0x0
0xc0c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc0d
[0xc0d:0xc1d]
---
Predecessors: [0xbf8]
Successors: [0xc1e, 0xc22]
---
0xc0d JUMPDEST
0xc0e PUSH1 0x1
0xc10 PUSH1 0xa0
0xc12 PUSH1 0x2
0xc14 EXP
0xc15 SUB
0xc16 DUP6
0xc17 AND
0xc18 ISZERO
0xc19 ISZERO
0xc1a PUSH2 0xc22
0xc1d JUMPI
---
0xc0d: JUMPDEST 
0xc0e: V1183 = 0x1
0xc10: V1184 = 0xa0
0xc12: V1185 = 0x2
0xc14: V1186 = EXP 0x2 0xa0
0xc15: V1187 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc17: V1188 = AND V395 0xffffffffffffffffffffffffffffffffffffffff
0xc18: V1189 = ISZERO V1188
0xc19: V1190 = ISZERO V1189
0xc1a: V1191 = 0xc22
0xc1d: JUMPI 0xc22 V1190
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc1e
[0xc1e:0xc21]
---
Predecessors: [0xc0d]
Successors: []
---
0xc1e PUSH1 0x0
0xc20 DUP1
0xc21 REVERT
---
0xc1e: V1192 = 0x0
0xc21: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc22
[0xc22:0xc32]
---
Predecessors: [0xc0d]
Successors: [0xc33, 0xc37]
---
0xc22 JUMPDEST
0xc23 PUSH1 0x1
0xc25 PUSH1 0xa0
0xc27 PUSH1 0x2
0xc29 EXP
0xc2a SUB
0xc2b DUP5
0xc2c AND
0xc2d ISZERO
0xc2e ISZERO
0xc2f PUSH2 0xc37
0xc32 JUMPI
---
0xc22: JUMPDEST 
0xc23: V1193 = 0x1
0xc25: V1194 = 0xa0
0xc27: V1195 = 0x2
0xc29: V1196 = EXP 0x2 0xa0
0xc2a: V1197 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2c: V1198 = AND V398 0xffffffffffffffffffffffffffffffffffffffff
0xc2d: V1199 = ISZERO V1198
0xc2e: V1200 = ISZERO V1199
0xc2f: V1201 = 0xc37
0xc32: JUMPI 0xc37 V1200
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc33
[0xc33:0xc36]
---
Predecessors: [0xc22]
Successors: []
---
0xc33 PUSH1 0x0
0xc35 DUP1
0xc36 REVERT
---
0xc33: V1202 = 0x0
0xc36: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc37
[0xc37:0xc3f]
---
Predecessors: [0xc22]
Successors: [0xc40, 0xc44]
---
0xc37 JUMPDEST
0xc38 PUSH1 0x0
0xc3a DUP4
0xc3b GT
0xc3c PUSH2 0xc44
0xc3f JUMPI
---
0xc37: JUMPDEST 
0xc38: V1203 = 0x0
0xc3b: V1204 = GT V400 0x0
0xc3c: V1205 = 0xc44
0xc3f: JUMPI 0xc44 V1204
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc40
[0xc40:0xc43]
---
Predecessors: [0xc37]
Successors: []
---
0xc40 PUSH1 0x0
0xc42 DUP1
0xc43 REVERT
---
0xc40: V1206 = 0x0
0xc43: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc44
[0xc44:0xc4c]
---
Predecessors: [0xc37]
Successors: [0xc4d, 0xc51]
---
0xc44 JUMPDEST
0xc45 PUSH1 0x0
0xc47 DUP3
0xc48 GT
0xc49 PUSH2 0xc51
0xc4c JUMPI
---
0xc44: JUMPDEST 
0xc45: V1207 = 0x0
0xc48: V1208 = GT V402 0x0
0xc49: V1209 = 0xc51
0xc4c: JUMPI 0xc51 V1208
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc4d
[0xc4d:0xc50]
---
Predecessors: [0xc44]
Successors: []
---
0xc4d PUSH1 0x0
0xc4f DUP1
0xc50 REVERT
---
0xc4d: V1210 = 0x0
0xc50: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]

================================

Block 0xc51
[0xc51:0xc84]
---
Predecessors: [0xc44]
Successors: [0xc85]
---
0xc51 JUMPDEST
0xc52 PUSH1 0x60
0xc54 PUSH1 0x40
0xc56 MLOAD
0xc57 SWAP1
0xc58 DUP2
0xc59 ADD
0xc5a PUSH1 0x40
0xc5c SWAP1
0xc5d DUP2
0xc5e MSTORE
0xc5f PUSH11 0x1a784379d99db42000000
0xc6b DUP3
0xc6c MSTORE
0xc6d PUSH7 0x27ca57357c000
0xc75 PUSH1 0x20
0xc77 DUP4
0xc78 ADD
0xc79 MSTORE
0xc7a PUSH1 0x0
0xc7c SWAP1
0xc7d DUP3
0xc7e ADD
0xc7f DUP2
0xc80 SWAP1
0xc81 MSTORE
0xc82 PUSH1 0x9
0xc84 SWAP1
---
0xc51: JUMPDEST 
0xc52: V1211 = 0x60
0xc54: V1212 = 0x40
0xc56: V1213 = M[0x40]
0xc59: V1214 = ADD V1213 0x60
0xc5a: V1215 = 0x40
0xc5e: M[0x40] = V1214
0xc5f: V1216 = 0x1a784379d99db42000000
0xc6c: M[V1213] = 0x1a784379d99db42000000
0xc6d: V1217 = 0x27ca57357c000
0xc75: V1218 = 0x20
0xc78: V1219 = ADD V1213 0x20
0xc79: M[V1219] = 0x27ca57357c000
0xc7a: V1220 = 0x0
0xc7e: V1221 = ADD V1213 0x40
0xc81: M[V1221] = 0x0
0xc82: V1222 = 0x9
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0]
Stack pops: 0
Stack additions: [V1213, 0x9, 0x0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1213, 0x9, 0x0]

================================

Block 0xc85
[0xc85:0xc8b]
---
Predecessors: [0xc51]
Successors: [0xc8c]
---
0xc85 JUMPDEST
0xc86 PUSH1 0x3
0xc88 MUL
0xc89 ADD
0xc8a PUSH1 0x0
---
0xc85: JUMPDEST 
0xc86: V1223 = 0x3
0xc88: V1224 = MUL 0x3 0x0
0xc89: V1225 = ADD 0x0 0x9
0xc8a: V1226 = 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1213, 0x9, 0x0]
Stack pops: 2
Stack additions: [0x9, 0x0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1213, 0x9, 0x0]

================================

Block 0xc8c
[0xc8c:0xcd9]
---
Predecessors: [0xc85]
Successors: [0xcda]
---
0xc8c JUMPDEST
0xc8d POP
0xc8e DUP2
0xc8f MLOAD
0xc90 DUP2
0xc91 SSTORE
0xc92 PUSH1 0x20
0xc94 DUP3
0xc95 ADD
0xc96 MLOAD
0xc97 DUP2
0xc98 PUSH1 0x1
0xc9a ADD
0xc9b SSTORE
0xc9c PUSH1 0x40
0xc9e DUP3
0xc9f ADD
0xca0 MLOAD
0xca1 PUSH1 0x2
0xca3 SWAP1
0xca4 SWAP2
0xca5 ADD
0xca6 SSTORE
0xca7 POP
0xca8 PUSH1 0x60
0xcaa PUSH1 0x40
0xcac MLOAD
0xcad SWAP1
0xcae DUP2
0xcaf ADD
0xcb0 PUSH1 0x40
0xcb2 SWAP1
0xcb3 DUP2
0xcb4 MSTORE
0xcb5 PUSH11 0x1a784379d99db42000000
0xcc1 DUP3
0xcc2 MSTORE
0xcc3 PUSH7 0x2aa1efb94e000
0xccb PUSH1 0x20
0xccd DUP4
0xcce ADD
0xccf MSTORE
0xcd0 PUSH1 0x0
0xcd2 SWAP1
0xcd3 DUP3
0xcd4 ADD
0xcd5 MSTORE
0xcd6 PUSH1 0x9
0xcd8 PUSH1 0x1
---
0xc8c: JUMPDEST 
0xc8f: V1227 = M[V1213]
0xc91: S[0x9] = V1227
0xc92: V1228 = 0x20
0xc95: V1229 = ADD V1213 0x20
0xc96: V1230 = M[V1229]
0xc98: V1231 = 0x1
0xc9a: V1232 = ADD 0x1 0x9
0xc9b: S[0xa] = V1230
0xc9c: V1233 = 0x40
0xc9f: V1234 = ADD V1213 0x40
0xca0: V1235 = M[V1234]
0xca1: V1236 = 0x2
0xca5: V1237 = ADD 0x9 0x2
0xca6: S[0xb] = V1235
0xca8: V1238 = 0x60
0xcaa: V1239 = 0x40
0xcac: V1240 = M[0x40]
0xcaf: V1241 = ADD V1240 0x60
0xcb0: V1242 = 0x40
0xcb4: M[0x40] = V1241
0xcb5: V1243 = 0x1a784379d99db42000000
0xcc2: M[V1240] = 0x1a784379d99db42000000
0xcc3: V1244 = 0x2aa1efb94e000
0xccb: V1245 = 0x20
0xcce: V1246 = ADD V1240 0x20
0xccf: M[V1246] = 0x2aa1efb94e000
0xcd0: V1247 = 0x0
0xcd4: V1248 = ADD V1240 0x40
0xcd5: M[V1248] = 0x0
0xcd6: V1249 = 0x9
0xcd8: V1250 = 0x1
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1213, 0x9, 0x0]
Stack pops: 3
Stack additions: [V1240, 0x9, 0x1]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1240, 0x9, 0x1]

================================

Block 0xcda
[0xcda:0xce0]
---
Predecessors: [0xc8c]
Successors: [0xce1]
---
0xcda JUMPDEST
0xcdb PUSH1 0x3
0xcdd MUL
0xcde ADD
0xcdf PUSH1 0x0
---
0xcda: JUMPDEST 
0xcdb: V1251 = 0x3
0xcdd: V1252 = MUL 0x3 0x1
0xcde: V1253 = ADD 0x3 0x9
0xcdf: V1254 = 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1240, 0x9, 0x1]
Stack pops: 2
Stack additions: [0xc, 0x0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1240, 0xc, 0x0]

================================

Block 0xce1
[0xce1:0xd2e]
---
Predecessors: [0xcda]
Successors: [0xd2f]
---
0xce1 JUMPDEST
0xce2 POP
0xce3 DUP2
0xce4 MLOAD
0xce5 DUP2
0xce6 SSTORE
0xce7 PUSH1 0x20
0xce9 DUP3
0xcea ADD
0xceb MLOAD
0xcec DUP2
0xced PUSH1 0x1
0xcef ADD
0xcf0 SSTORE
0xcf1 PUSH1 0x40
0xcf3 DUP3
0xcf4 ADD
0xcf5 MLOAD
0xcf6 PUSH1 0x2
0xcf8 SWAP1
0xcf9 SWAP2
0xcfa ADD
0xcfb SSTORE
0xcfc POP
0xcfd PUSH1 0x60
0xcff PUSH1 0x40
0xd01 MLOAD
0xd02 SWAP1
0xd03 DUP2
0xd04 ADD
0xd05 PUSH1 0x40
0xd07 SWAP1
0xd08 DUP2
0xd09 MSTORE
0xd0a PUSH11 0x1306707f94695977000000
0xd16 DUP3
0xd17 MSTORE
0xd18 PUSH7 0x2d79883d20000
0xd20 PUSH1 0x20
0xd22 DUP4
0xd23 ADD
0xd24 MSTORE
0xd25 PUSH1 0x0
0xd27 SWAP1
0xd28 DUP3
0xd29 ADD
0xd2a MSTORE
0xd2b PUSH1 0x9
0xd2d PUSH1 0x2
---
0xce1: JUMPDEST 
0xce4: V1255 = M[V1240]
0xce6: S[0xc] = V1255
0xce7: V1256 = 0x20
0xcea: V1257 = ADD V1240 0x20
0xceb: V1258 = M[V1257]
0xced: V1259 = 0x1
0xcef: V1260 = ADD 0x1 0xc
0xcf0: S[0xd] = V1258
0xcf1: V1261 = 0x40
0xcf4: V1262 = ADD V1240 0x40
0xcf5: V1263 = M[V1262]
0xcf6: V1264 = 0x2
0xcfa: V1265 = ADD 0xc 0x2
0xcfb: S[0xe] = V1263
0xcfd: V1266 = 0x60
0xcff: V1267 = 0x40
0xd01: V1268 = M[0x40]
0xd04: V1269 = ADD V1268 0x60
0xd05: V1270 = 0x40
0xd09: M[0x40] = V1269
0xd0a: V1271 = 0x1306707f94695977000000
0xd17: M[V1268] = 0x1306707f94695977000000
0xd18: V1272 = 0x2d79883d20000
0xd20: V1273 = 0x20
0xd23: V1274 = ADD V1268 0x20
0xd24: M[V1274] = 0x2d79883d20000
0xd25: V1275 = 0x0
0xd29: V1276 = ADD V1268 0x40
0xd2a: M[V1276] = 0x0
0xd2b: V1277 = 0x9
0xd2d: V1278 = 0x2
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1240, 0xc, 0x0]
Stack pops: 3
Stack additions: [V1268, 0x9, 0x2]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1268, 0x9, 0x2]

================================

Block 0xd2f
[0xd2f:0xd35]
---
Predecessors: [0xce1]
Successors: [0xd36]
---
0xd2f JUMPDEST
0xd30 PUSH1 0x3
0xd32 MUL
0xd33 ADD
0xd34 PUSH1 0x0
---
0xd2f: JUMPDEST 
0xd30: V1279 = 0x3
0xd32: V1280 = MUL 0x3 0x2
0xd33: V1281 = ADD 0x6 0x9
0xd34: V1282 = 0x0
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1268, 0x9, 0x2]
Stack pops: 2
Stack additions: [0xf, 0x0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1268, 0xf, 0x0]

================================

Block 0xd36
[0xd36:0xd9f]
---
Predecessors: [0xd2f]
Successors: [0x8d6]
---
0xd36 JUMPDEST
0xd37 POP
0xd38 DUP2
0xd39 MLOAD
0xd3a DUP2
0xd3b SSTORE
0xd3c PUSH1 0x20
0xd3e DUP3
0xd3f ADD
0xd40 MLOAD
0xd41 DUP2
0xd42 PUSH1 0x1
0xd44 ADD
0xd45 SSTORE
0xd46 PUSH1 0x40
0xd48 DUP3
0xd49 ADD
0xd4a MLOAD
0xd4b PUSH1 0x2
0xd4d SWAP1
0xd4e SWAP2
0xd4f ADD
0xd50 SSTORE
0xd51 POP
0xd52 PUSH1 0x6
0xd54 DUP1
0xd55 SLOAD
0xd56 PUSH1 0x1
0xd58 PUSH1 0xa0
0xd5a PUSH1 0x2
0xd5c EXP
0xd5d SUB
0xd5e DUP1
0xd5f DUP10
0xd60 AND
0xd61 PUSH1 0x1
0xd63 PUSH1 0xa0
0xd65 PUSH1 0x2
0xd67 EXP
0xd68 SUB
0xd69 NOT
0xd6a SWAP3
0xd6b DUP4
0xd6c AND
0xd6d OR
0xd6e SWAP1
0xd6f SWAP3
0xd70 SSTORE
0xd71 PUSH1 0x3
0xd73 DUP1
0xd74 SLOAD
0xd75 DUP9
0xd76 DUP5
0xd77 AND
0xd78 SWAP1
0xd79 DUP4
0xd7a AND
0xd7b OR
0xd7c SWAP1
0xd7d SSTORE
0xd7e PUSH1 0x4
0xd80 DUP1
0xd81 SLOAD
0xd82 SWAP3
0xd83 DUP8
0xd84 AND
0xd85 SWAP3
0xd86 SWAP1
0xd87 SWAP2
0xd88 AND
0xd89 SWAP2
0xd8a SWAP1
0xd8b SWAP2
0xd8c OR
0xd8d SWAP1
0xd8e SSTORE
0xd8f PUSH1 0x1
0xd91 DUP4
0xd92 SWAP1
0xd93 SSTORE
0xd94 PUSH1 0x0
0xd96 DUP3
0xd97 SWAP1
0xd98 SSTORE
0xd99 PUSH2 0xda0
0xd9c PUSH2 0x8d6
0xd9f JUMP
---
0xd36: JUMPDEST 
0xd39: V1283 = M[V1268]
0xd3b: S[0xf] = V1283
0xd3c: V1284 = 0x20
0xd3f: V1285 = ADD V1268 0x20
0xd40: V1286 = M[V1285]
0xd42: V1287 = 0x1
0xd44: V1288 = ADD 0x1 0xf
0xd45: S[0x10] = V1286
0xd46: V1289 = 0x40
0xd49: V1290 = ADD V1268 0x40
0xd4a: V1291 = M[V1290]
0xd4b: V1292 = 0x2
0xd4f: V1293 = ADD 0xf 0x2
0xd50: S[0x11] = V1291
0xd52: V1294 = 0x6
0xd55: V1295 = S[0x6]
0xd56: V1296 = 0x1
0xd58: V1297 = 0xa0
0xd5a: V1298 = 0x2
0xd5c: V1299 = EXP 0x2 0xa0
0xd5d: V1300 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd60: V1301 = AND V392 0xffffffffffffffffffffffffffffffffffffffff
0xd61: V1302 = 0x1
0xd63: V1303 = 0xa0
0xd65: V1304 = 0x2
0xd67: V1305 = EXP 0x2 0xa0
0xd68: V1306 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd69: V1307 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd6c: V1308 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1295
0xd6d: V1309 = OR V1308 V1301
0xd70: S[0x6] = V1309
0xd71: V1310 = 0x3
0xd74: V1311 = S[0x3]
0xd77: V1312 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0xd7a: V1313 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1311
0xd7b: V1314 = OR V1313 V1312
0xd7d: S[0x3] = V1314
0xd7e: V1315 = 0x4
0xd81: V1316 = S[0x4]
0xd84: V1317 = AND V398 0xffffffffffffffffffffffffffffffffffffffff
0xd88: V1318 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1316
0xd8c: V1319 = OR V1318 V1317
0xd8e: S[0x4] = V1319
0xd8f: V1320 = 0x1
0xd93: S[0x1] = V400
0xd94: V1321 = 0x0
0xd98: S[0x0] = V402
0xd99: V1322 = 0xda0
0xd9c: V1323 = 0x8d6
0xd9f: JUMP 0x8d6
---
Entry stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, V1268, 0xf, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, 0xda0]
Exit stack: [V12, 0x18e, V392, V395, V398, V400, V402, 0x0, 0xda0]

================================

Block 0xda0
[0xda0:0xdf4]
---
Predecessors: [0x912]
Successors: [0xdf5, 0xdf9]
---
0xda0 JUMPDEST
0xda1 PUSH1 0x6
0xda3 SLOAD
0xda4 PUSH1 0x1
0xda6 PUSH1 0xa0
0xda8 PUSH1 0x2
0xdaa EXP
0xdab SUB
0xdac AND
0xdad PUSH4 0x70a08231
0xdb2 ADDRESS
0xdb3 PUSH1 0x0
0xdb5 PUSH1 0x40
0xdb7 MLOAD
0xdb8 PUSH1 0x20
0xdba ADD
0xdbb MSTORE
0xdbc PUSH1 0x40
0xdbe MLOAD
0xdbf PUSH1 0xe0
0xdc1 PUSH1 0x2
0xdc3 EXP
0xdc4 PUSH4 0xffffffff
0xdc9 DUP5
0xdca AND
0xdcb MUL
0xdcc DUP2
0xdcd MSTORE
0xdce PUSH1 0x1
0xdd0 PUSH1 0xa0
0xdd2 PUSH1 0x2
0xdd4 EXP
0xdd5 SUB
0xdd6 SWAP1
0xdd7 SWAP2
0xdd8 AND
0xdd9 PUSH1 0x4
0xddb DUP3
0xddc ADD
0xddd MSTORE
0xdde PUSH1 0x24
0xde0 ADD
0xde1 PUSH1 0x20
0xde3 PUSH1 0x40
0xde5 MLOAD
0xde6 DUP1
0xde7 DUP4
0xde8 SUB
0xde9 DUP2
0xdea PUSH1 0x0
0xdec DUP8
0xded DUP1
0xdee EXTCODESIZE
0xdef ISZERO
0xdf0 ISZERO
0xdf1 PUSH2 0xdf9
0xdf4 JUMPI
---
0xda0: JUMPDEST 
0xda1: V1324 = 0x6
0xda3: V1325 = S[0x6]
0xda4: V1326 = 0x1
0xda6: V1327 = 0xa0
0xda8: V1328 = 0x2
0xdaa: V1329 = EXP 0x2 0xa0
0xdab: V1330 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdac: V1331 = AND 0xffffffffffffffffffffffffffffffffffffffff V1325
0xdad: V1332 = 0x70a08231
0xdb2: V1333 = ADDRESS
0xdb3: V1334 = 0x0
0xdb5: V1335 = 0x40
0xdb7: V1336 = M[0x40]
0xdb8: V1337 = 0x20
0xdba: V1338 = ADD 0x20 V1336
0xdbb: M[V1338] = 0x0
0xdbc: V1339 = 0x40
0xdbe: V1340 = M[0x40]
0xdbf: V1341 = 0xe0
0xdc1: V1342 = 0x2
0xdc3: V1343 = EXP 0x2 0xe0
0xdc4: V1344 = 0xffffffff
0xdca: V1345 = AND 0x70a08231 0xffffffff
0xdcb: V1346 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xdcd: M[V1340] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xdce: V1347 = 0x1
0xdd0: V1348 = 0xa0
0xdd2: V1349 = 0x2
0xdd4: V1350 = EXP 0x2 0xa0
0xdd5: V1351 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd8: V1352 = AND V1333 0xffffffffffffffffffffffffffffffffffffffff
0xdd9: V1353 = 0x4
0xddc: V1354 = ADD V1340 0x4
0xddd: M[V1354] = V1352
0xdde: V1355 = 0x24
0xde0: V1356 = ADD 0x24 V1340
0xde1: V1357 = 0x20
0xde3: V1358 = 0x40
0xde5: V1359 = M[0x40]
0xde8: V1360 = SUB V1356 V1359
0xdea: V1361 = 0x0
0xdee: V1362 = EXTCODESIZE V1331
0xdef: V1363 = ISZERO V1362
0xdf0: V1364 = ISZERO V1363
0xdf1: V1365 = 0xdf9
0xdf4: JUMPI 0xdf9 V1364
---
Entry stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V1331, 0x70a08231, V1356, 0x20, V1359, V1360, V1359, 0x0, V1331]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1331, 0x70a08231, V1356, 0x20, V1359, V1360, V1359, 0x0, V1331]

================================

Block 0xdf5
[0xdf5:0xdf8]
---
Predecessors: [0xda0]
Successors: []
---
0xdf5 PUSH1 0x0
0xdf7 DUP1
0xdf8 REVERT
---
0xdf5: V1366 = 0x0
0xdf8: REVERT 0x0 0x0
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1331, 0x70a08231, V1356, 0x20, V1359, V1360, V1359, 0x0, V1331]
Stack pops: 0
Stack additions: []
Exit stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1331, 0x70a08231, V1356, 0x20, V1359, V1360, V1359, 0x0, V1331]

================================

Block 0xdf9
[0xdf9:0xe05]
---
Predecessors: [0xda0]
Successors: [0xe06, 0xe0a]
---
0xdf9 JUMPDEST
0xdfa PUSH2 0x2c6
0xdfd GAS
0xdfe SUB
0xdff CALL
0xe00 ISZERO
0xe01 ISZERO
0xe02 PUSH2 0xe0a
0xe05 JUMPI
---
0xdf9: JUMPDEST 
0xdfa: V1367 = 0x2c6
0xdfd: V1368 = GAS
0xdfe: V1369 = SUB V1368 0x2c6
0xdff: V1370 = CALL V1369 V1331 0x0 V1359 V1360 V1359 0x20
0xe00: V1371 = ISZERO V1370
0xe01: V1372 = ISZERO V1371
0xe02: V1373 = 0xe0a
0xe05: JUMPI 0xe0a V1372
---
Entry stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1331, 0x70a08231, V1356, 0x20, V1359, V1360, V1359, 0x0, V1331]
Stack pops: 6
Stack additions: []
Exit stack: [S19, V610, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1331, 0x70a08231, V1356]

================================

Block 0xe06
[0xe06:0xe09]
---
Predecessors: [0xdf9]
Successors: []
---
0xe06 PUSH1 0x0
0xe08 DUP1
0xe09 REVERT
---
0xe06: V1374 = 0x0
0xe09: REVERT 0x0 0x0
---
Entry stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1331, 0x70a08231, V1356]
Stack pops: 0
Stack additions: []
Exit stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1331, 0x70a08231, V1356]

================================

Block 0xe0a
[0xe0a:0xe1b]
---
Predecessors: [0xdf9]
Successors: [0xe1c, 0xe1d]
---
0xe0a JUMPDEST
0xe0b POP
0xe0c POP
0xe0d POP
0xe0e PUSH1 0x40
0xe10 MLOAD
0xe11 DUP1
0xe12 MLOAD
0xe13 SWAP1
0xe14 POP
0xe15 EQ
0xe16 ISZERO
0xe17 ISZERO
0xe18 PUSH2 0xe1d
0xe1b JUMPI
---
0xe0a: JUMPDEST 
0xe0e: V1375 = 0x40
0xe10: V1376 = M[0x40]
0xe12: V1377 = M[V1376]
0xe15: V1378 = EQ V1377 S3
0xe16: V1379 = ISZERO V1378
0xe17: V1380 = ISZERO V1379
0xe18: V1381 = 0xe1d
0xe1b: JUMPI 0xe1d V1380
---
Entry stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1331, 0x70a08231, V1356]
Stack pops: 4
Stack additions: []
Exit stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0xe1c
[0xe1c:0xe1c]
---
Predecessors: [0xe0a]
Successors: []
---
0xe1c INVALID
---
0xe1c: INVALID 
---
Entry stack: [S9, V610, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, V610, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe1d
[0xe1d:0xe2b]
---
Predecessors: [0xe0a]
Successors: [0xe2c]
---
0xe1d JUMPDEST
0xe1e PUSH1 0x12
0xe20 DUP1
0xe21 SLOAD
0xe22 PUSH1 0x1
0xe24 SWAP2
0xe25 SWAP1
0xe26 PUSH1 0xff
0xe28 NOT
0xe29 AND
0xe2a DUP3
0xe2b DUP1
---
0xe1d: JUMPDEST 
0xe1e: V1382 = 0x12
0xe21: V1383 = S[0x12]
0xe22: V1384 = 0x1
0xe26: V1385 = 0xff
0xe28: V1386 = NOT 0xff
0xe29: V1387 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1383
---
Entry stack: [S9, V610, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x1, 0x12, V1387, 0x1, 0x1]
Exit stack: [S9, V610, S7, S6, S5, S4, S3, S2, S1, S0, 0x1, 0x12, V1387, 0x1, 0x1]

================================

Block 0xe2c
[0xe2c:0xe31]
---
Predecessors: [0xe1d]
Successors: [0xe32]
---
0xe2c JUMPDEST
0xe2d MUL
0xe2e OR
0xe2f SWAP1
0xe30 SSTORE
0xe31 POP
---
0xe2c: JUMPDEST 
0xe2d: V1388 = MUL 0x1 0x1
0xe2e: V1389 = OR 0x1 V1387
0xe30: S[0x12] = V1389
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, 0x1, 0x12, V1387, 0x1, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5]

================================

Block 0xe32
[0xe32:0xe32]
---
Predecessors: [0xe2c]
Successors: [0xe33]
---
0xe32 JUMPDEST
---
0xe32: JUMPDEST 
---
Entry stack: [S9, V610, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, V610, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe33
[0xe33:0xe34]
---
Predecessors: [0xe32]
Successors: [0xe35]
---
0xe33 JUMPDEST
0xe34 POP
---
0xe33: JUMPDEST 
---
Entry stack: [S9, V610, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S9, V610, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xe35
[0xe35:0xe3b]
---
Predecessors: [0xe33]
Successors: [0x18e]
---
0xe35 JUMPDEST
0xe36 POP
0xe37 POP
0xe38 POP
0xe39 POP
0xe3a POP
0xe3b JUMP
---
0xe35: JUMPDEST 
0xe3b: JUMP S5
---
Entry stack: [S8, V610, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [S8, V610, S6]

================================

Block 0xe3c
[0xe3c:0xe5d]
---
Predecessors: [0x46c]
Successors: [0xe5e, 0xe62]
---
0xe3c JUMPDEST
0xe3d PUSH1 0x3
0xe3f SLOAD
0xe40 PUSH1 0x0
0xe42 SWAP1
0xe43 DUP2
0xe44 SWAP1
0xe45 DUP2
0xe46 SWAP1
0xe47 DUP2
0xe48 SWAP1
0xe49 DUP2
0xe4a SWAP1
0xe4b CALLER
0xe4c PUSH1 0x1
0xe4e PUSH1 0xa0
0xe50 PUSH1 0x2
0xe52 EXP
0xe53 SUB
0xe54 SWAP1
0xe55 DUP2
0xe56 AND
0xe57 SWAP2
0xe58 AND
0xe59 EQ
0xe5a PUSH2 0xe62
0xe5d JUMPI
---
0xe3c: JUMPDEST 
0xe3d: V1390 = 0x3
0xe3f: V1391 = S[0x3]
0xe40: V1392 = 0x0
0xe4b: V1393 = CALLER
0xe4c: V1394 = 0x1
0xe4e: V1395 = 0xa0
0xe50: V1396 = 0x2
0xe52: V1397 = EXP 0x2 0xa0
0xe53: V1398 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe56: V1399 = AND 0xffffffffffffffffffffffffffffffffffffffff V1393
0xe58: V1400 = AND V1391 0xffffffffffffffffffffffffffffffffffffffff
0xe59: V1401 = EQ V1400 V1399
0xe5a: V1402 = 0xe62
0xe5d: JUMPI 0xe62 V1401
---
Entry stack: [V12, 0x18e, V410]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xe5e
[0xe5e:0xe61]
---
Predecessors: [0xe3c]
Successors: []
---
0xe5e PUSH1 0x0
0xe60 DUP1
0xe61 REVERT
---
0xe5e: V1403 = 0x0
0xe61: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xe62
[0xe62:0xe64]
---
Predecessors: [0xe3c]
Successors: [0xe65]
---
0xe62 JUMPDEST
0xe63 PUSH1 0x2
---
0xe62: JUMPDEST 
0xe63: V1404 = 0x2
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2]

================================

Block 0xe65
[0xe65:0xe74]
---
Predecessors: [0xe62]
Successors: [0xe75, 0xe76]
---
0xe65 JUMPDEST
0xe66 PUSH1 0x12
0xe68 SLOAD
0xe69 PUSH1 0xff
0xe6b AND
0xe6c PUSH1 0x4
0xe6e DUP2
0xe6f GT
0xe70 ISZERO
0xe71 PUSH2 0xe76
0xe74 JUMPI
---
0xe65: JUMPDEST 
0xe66: V1405 = 0x12
0xe68: V1406 = S[0x12]
0xe69: V1407 = 0xff
0xe6b: V1408 = AND 0xff V1406
0xe6c: V1409 = 0x4
0xe6f: V1410 = GT V1408 0x4
0xe70: V1411 = ISZERO V1410
0xe71: V1412 = 0xe76
0xe74: JUMPI 0xe76 V1411
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2]
Stack pops: 0
Stack additions: [V1408]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V1408]

================================

Block 0xe75
[0xe75:0xe75]
---
Predecessors: [0xe65]
Successors: []
---
0xe75 INVALID
---
0xe75: INVALID 
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V1408]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V1408]

================================

Block 0xe76
[0xe76:0xe7d]
---
Predecessors: [0xe65]
Successors: [0xe7e, 0xe85]
---
0xe76 JUMPDEST
0xe77 EQ
0xe78 DUP1
0xe79 ISZERO
0xe7a PUSH2 0xe85
0xe7d JUMPI
---
0xe76: JUMPDEST 
0xe77: V1413 = EQ V1408 0x2
0xe79: V1414 = ISZERO V1413
0xe7a: V1415 = 0xe85
0xe7d: JUMPI 0xe85 V1414
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V1408]
Stack pops: 2
Stack additions: [V1413]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V1413]

================================

Block 0xe7e
[0xe7e:0xe84]
---
Predecessors: [0xe76]
Successors: [0xe85]
---
0xe7e POP
0xe7f PUSH1 0x7
0xe81 SLOAD
0xe82 NUMBER
0xe83 LT
0xe84 ISZERO
---
0xe7f: V1416 = 0x7
0xe81: V1417 = S[0x7]
0xe82: V1418 = NUMBER
0xe83: V1419 = LT V1418 V1417
0xe84: V1420 = ISZERO V1419
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V1413]
Stack pops: 1
Stack additions: [V1420]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V1420]

================================

Block 0xe85
[0xe85:0xe8a]
---
Predecessors: [0xe76, 0xe7e]
Successors: [0xe8b, 0xea0]
---
0xe85 JUMPDEST
0xe86 ISZERO
0xe87 PUSH2 0xea0
0xe8a JUMPI
---
0xe85: JUMPDEST 
0xe86: V1421 = ISZERO S0
0xe87: V1422 = 0xea0
0xe8a: JUMPI 0xea0 V1421
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xe8b
[0xe8b:0xe99]
---
Predecessors: [0xe85]
Successors: [0xe9a]
---
0xe8b PUSH1 0x12
0xe8d DUP1
0xe8e SLOAD
0xe8f PUSH1 0x3
0xe91 SWAP2
0xe92 SWAP1
0xe93 PUSH1 0xff
0xe95 NOT
0xe96 AND
0xe97 PUSH1 0x1
0xe99 DUP4
---
0xe8b: V1423 = 0x12
0xe8e: V1424 = S[0x12]
0xe8f: V1425 = 0x3
0xe93: V1426 = 0xff
0xe95: V1427 = NOT 0xff
0xe96: V1428 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1424
0xe97: V1429 = 0x1
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, 0x12, V1428, 0x1, 0x3]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x12, V1428, 0x1, 0x3]

================================

Block 0xe9a
[0xe9a:0xe9f]
---
Predecessors: [0xe8b]
Successors: [0xea0]
---
0xe9a JUMPDEST
0xe9b MUL
0xe9c OR
0xe9d SWAP1
0xe9e SSTORE
0xe9f POP
---
0xe9a: JUMPDEST 
0xe9b: V1430 = MUL 0x3 0x1
0xe9c: V1431 = OR 0x3 V1428
0xe9e: S[0x12] = V1431
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x12, V1428, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xea0
[0xea0:0xea2]
---
Predecessors: [0xe85, 0xe9a]
Successors: [0xea3]
---
0xea0 JUMPDEST
0xea1 PUSH1 0x3
---
0xea0: JUMPDEST 
0xea1: V1432 = 0x3
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3]

================================

Block 0xea3
[0xea3:0xeb2]
---
Predecessors: [0xea0]
Successors: [0xeb3, 0xeb4]
---
0xea3 JUMPDEST
0xea4 PUSH1 0x12
0xea6 SLOAD
0xea7 PUSH1 0xff
0xea9 AND
0xeaa PUSH1 0x4
0xeac DUP2
0xead GT
0xeae ISZERO
0xeaf PUSH2 0xeb4
0xeb2 JUMPI
---
0xea3: JUMPDEST 
0xea4: V1433 = 0x12
0xea6: V1434 = S[0x12]
0xea7: V1435 = 0xff
0xea9: V1436 = AND 0xff V1434
0xeaa: V1437 = 0x4
0xead: V1438 = GT V1436 0x4
0xeae: V1439 = ISZERO V1438
0xeaf: V1440 = 0xeb4
0xeb2: JUMPI 0xeb4 V1439
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3]
Stack pops: 0
Stack additions: [V1436]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V1436]

================================

Block 0xeb3
[0xeb3:0xeb3]
---
Predecessors: [0xea3]
Successors: []
---
0xeb3 INVALID
---
0xeb3: INVALID 
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V1436]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V1436]

================================

Block 0xeb4
[0xeb4:0xebb]
---
Predecessors: [0xea3]
Successors: [0xebc, 0xec3]
---
0xeb4 JUMPDEST
0xeb5 EQ
0xeb6 DUP1
0xeb7 ISZERO
0xeb8 PUSH2 0xec3
0xebb JUMPI
---
0xeb4: JUMPDEST 
0xeb5: V1441 = EQ V1436 0x3
0xeb7: V1442 = ISZERO V1441
0xeb8: V1443 = 0xec3
0xebb: JUMPI 0xec3 V1442
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V1436]
Stack pops: 2
Stack additions: [V1441]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V1441]

================================

Block 0xebc
[0xebc:0xec2]
---
Predecessors: [0xeb4]
Successors: [0xec3]
---
0xebc POP
0xebd PUSH1 0x8
0xebf SLOAD
0xec0 NUMBER
0xec1 LT
0xec2 ISZERO
---
0xebd: V1444 = 0x8
0xebf: V1445 = S[0x8]
0xec0: V1446 = NUMBER
0xec1: V1447 = LT V1446 V1445
0xec2: V1448 = ISZERO V1447
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V1441]
Stack pops: 1
Stack additions: [V1448]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V1448]

================================

Block 0xec3
[0xec3:0xec8]
---
Predecessors: [0xeb4, 0xebc]
Successors: [0xec9, 0xed0]
---
0xec3 JUMPDEST
0xec4 ISZERO
0xec5 PUSH2 0xed0
0xec8 JUMPI
---
0xec3: JUMPDEST 
0xec4: V1449 = ISZERO S0
0xec5: V1450 = 0xed0
0xec8: JUMPI 0xed0 V1449
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xec9
[0xec9:0xecf]
---
Predecessors: [0xec3]
Successors: [0x483]
---
0xec9 PUSH2 0xed0
0xecc PUSH2 0x483
0xecf JUMP
---
0xec9: V1451 = 0xed0
0xecc: V1452 = 0x483
0xecf: JUMP 0x483
---
Entry stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xed0]
Exit stack: [V12, 0x18e, V410, 0x0, 0x0, 0x0, 0x0, 0x0, 0xed0]

================================

Block 0xed0
[0xed0:0xed0]
---
Predecessors: [0x5b2, 0xec3]
Successors: [0xed1]
---
0xed0 JUMPDEST
---
0xed0: JUMPDEST 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xed1
[0xed1:0xed4]
---
Predecessors: [0xed0]
Successors: [0xed5]
---
0xed1 JUMPDEST
0xed2 PUSH1 0x3
0xed4 DUP1
---
0xed1: JUMPDEST 
0xed2: V1453 = 0x3
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3, 0x3]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0, 0x3, 0x3]

================================

Block 0xed5
[0xed5:0xee4]
---
Predecessors: [0xed1]
Successors: [0xee5, 0xee6]
---
0xed5 JUMPDEST
0xed6 PUSH1 0x12
0xed8 SLOAD
0xed9 PUSH1 0xff
0xedb AND
0xedc PUSH1 0x4
0xede DUP2
0xedf GT
0xee0 ISZERO
0xee1 PUSH2 0xee6
0xee4 JUMPI
---
0xed5: JUMPDEST 
0xed6: V1454 = 0x12
0xed8: V1455 = S[0x12]
0xed9: V1456 = 0xff
0xedb: V1457 = AND 0xff V1455
0xedc: V1458 = 0x4
0xedf: V1459 = GT V1457 0x4
0xee0: V1460 = ISZERO V1459
0xee1: V1461 = 0xee6
0xee4: JUMPI 0xee6 V1460
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, 0x3]
Stack pops: 0
Stack additions: [V1457]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, 0x3, V1457]

================================

Block 0xee5
[0xee5:0xee5]
---
Predecessors: [0xed5]
Successors: []
---
0xee5 INVALID
---
0xee5: INVALID 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x3, V1457]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x3, V1457]

================================

Block 0xee6
[0xee6:0xeeb]
---
Predecessors: [0xed5]
Successors: [0xeec, 0xef0]
---
0xee6 JUMPDEST
0xee7 EQ
0xee8 PUSH2 0xef0
0xeeb JUMPI
---
0xee6: JUMPDEST 
0xee7: V1462 = EQ V1457 0x3
0xee8: V1463 = 0xef0
0xeeb: JUMPI 0xef0 V1462
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x3, V1457]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3]

================================

Block 0xeec
[0xeec:0xeef]
---
Predecessors: [0xee6]
Successors: []
---
0xeec PUSH1 0x0
0xeee DUP1
0xeef REVERT
---
0xeec: V1464 = 0x0
0xeef: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0xef0
[0xef0:0xef8]
---
Predecessors: [0xee6]
Successors: [0xef9, 0xefd]
---
0xef0 JUMPDEST
0xef1 PUSH1 0x0
0xef3 DUP8
0xef4 GT
0xef5 PUSH2 0xefd
0xef8 JUMPI
---
0xef0: JUMPDEST 
0xef1: V1465 = 0x0
0xef4: V1466 = GT S6 0x0
0xef5: V1467 = 0xefd
0xef8: JUMPI 0xefd V1466
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0xef9
[0xef9:0xefc]
---
Predecessors: [0xef0]
Successors: []
---
0xef9 PUSH1 0x0
0xefb DUP1
0xefc REVERT
---
0xef9: V1468 = 0x0
0xefc: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0xefd
[0xefd:0xf04]
---
Predecessors: [0xef0]
Successors: [0xf05]
---
0xefd JUMPDEST
0xefe DUP7
0xeff SWAP6
0xf00 POP
0xf01 PUSH1 0x0
0xf03 SWAP5
0xf04 POP
---
0xefd: JUMPDEST 
0xf01: V1469 = 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 7
Stack additions: [S6, S6, 0x0, S3, S2, S1, S0]
Exit stack: [V12, S8, S7, S6, S6, 0x0, S3, S2, S1, 0x3]

================================

Block 0xf05
[0xf05:0xf11]
---
Predecessors: [0xefd, 0xf86]
Successors: [0xf12, 0xf91]
---
0xf05 JUMPDEST
0xf06 PUSH1 0x3
0xf08 DUP6
0xf09 PUSH1 0xff
0xf0b AND
0xf0c LT
0xf0d ISZERO
0xf0e PUSH2 0xf91
0xf11 JUMPI
---
0xf05: JUMPDEST 
0xf06: V1470 = 0x3
0xf09: V1471 = 0xff
0xf0b: V1472 = AND 0xff S4
0xf0c: V1473 = LT V1472 0x3
0xf0d: V1474 = ISZERO V1473
0xf0e: V1475 = 0xf91
0xf11: JUMPI 0xf91 V1474
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0xf12
[0xf12:0xf1f]
---
Predecessors: [0xf05]
Successors: [0xf20, 0xf21]
---
0xf12 PUSH1 0x9
0xf14 PUSH1 0xff
0xf16 DUP7
0xf17 AND
0xf18 PUSH1 0x3
0xf1a DUP2
0xf1b LT
0xf1c PUSH2 0xf21
0xf1f JUMPI
---
0xf12: V1476 = 0x9
0xf14: V1477 = 0xff
0xf17: V1478 = AND S4 0xff
0xf18: V1479 = 0x3
0xf1b: V1480 = LT V1478 0x3
0xf1c: V1481 = 0xf21
0xf1f: JUMPI 0xf21 V1480
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x9, V1478]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3, 0x9, V1478]

================================

Block 0xf20
[0xf20:0xf20]
---
Predecessors: [0xf12]
Successors: []
---
0xf20 INVALID
---
0xf20: INVALID 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x9, V1478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x9, V1478]

================================

Block 0xf21
[0xf21:0xf27]
---
Predecessors: [0xf12]
Successors: [0xf28]
---
0xf21 JUMPDEST
0xf22 PUSH1 0x3
0xf24 MUL
0xf25 ADD
0xf26 PUSH1 0x0
---
0xf21: JUMPDEST 
0xf22: V1482 = 0x3
0xf24: V1483 = MUL 0x3 V1478
0xf25: V1484 = ADD V1483 0x9
0xf26: V1485 = 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, 0x9, V1478]
Stack pops: 2
Stack additions: [V1484, 0x0]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, V1484, 0x0]

================================

Block 0xf28
[0xf28:0xf3b]
---
Predecessors: [0xf21]
Successors: [0xf3c, 0xf3d]
---
0xf28 JUMPDEST
0xf29 POP
0xf2a PUSH1 0x2
0xf2c ADD
0xf2d SLOAD
0xf2e PUSH1 0x9
0xf30 PUSH1 0xff
0xf32 DUP8
0xf33 AND
0xf34 PUSH1 0x3
0xf36 DUP2
0xf37 LT
0xf38 PUSH2 0xf3d
0xf3b JUMPI
---
0xf28: JUMPDEST 
0xf2a: V1486 = 0x2
0xf2c: V1487 = ADD 0x2 V1484
0xf2d: V1488 = S[V1487]
0xf2e: V1489 = 0x9
0xf30: V1490 = 0xff
0xf33: V1491 = AND S6 0xff
0xf34: V1492 = 0x3
0xf37: V1493 = LT V1491 0x3
0xf38: V1494 = 0xf3d
0xf3b: JUMPI 0xf3d V1493
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, V1484, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V1488, 0x9, V1491]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x3, V1488, 0x9, V1491]

================================

Block 0xf3c
[0xf3c:0xf3c]
---
Predecessors: [0xf28]
Successors: []
---
0xf3c INVALID
---
0xf3c: INVALID 
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V1488, 0x9, V1491]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V1488, 0x9, V1491]

================================

Block 0xf3d
[0xf3d:0xf43]
---
Predecessors: [0xf28]
Successors: [0xf44]
---
0xf3d JUMPDEST
0xf3e PUSH1 0x3
0xf40 MUL
0xf41 ADD
0xf42 PUSH1 0x0
---
0xf3d: JUMPDEST 
0xf3e: V1495 = 0x3
0xf40: V1496 = MUL 0x3 V1491
0xf41: V1497 = ADD V1496 0x9
0xf42: V1498 = 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V1488, 0x9, V1491]
Stack pops: 2
Stack additions: [V1497, 0x0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V1488, V1497, 0x0]

================================

Block 0xf44
[0xf44:0xf51]
---
Predecessors: [0xf3d]
Successors: [0xf52, 0xf59]
---
0xf44 JUMPDEST
0xf45 POP
0xf46 SLOAD
0xf47 SUB
0xf48 SWAP4
0xf49 POP
0xf4a DUP4
0xf4b DUP7
0xf4c GT
0xf4d ISZERO
0xf4e PUSH2 0xf59
0xf51 JUMPI
---
0xf44: JUMPDEST 
0xf46: V1499 = S[V1497]
0xf47: V1500 = SUB V1499 V1488
0xf4c: V1501 = GT S8 V1500
0xf4d: V1502 = ISZERO V1501
0xf4e: V1503 = 0xf59
0xf51: JUMPI 0xf59 V1502
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, 0x3, V1488, V1497, 0x0]
Stack pops: 9
Stack additions: [S8, S7, V1500, S5, S4, S3]
Exit stack: [V12, S11, S10, S9, S8, S7, V1500, S5, S4, 0x3]

================================

Block 0xf52
[0xf52:0xf58]
---
Predecessors: [0xf44]
Successors: [0xf5d]
---
0xf52 DUP4
0xf53 SWAP3
0xf54 POP
0xf55 PUSH2 0xf5d
0xf58 JUMP
---
0xf55: V1504 = 0xf5d
0xf58: JUMP 0xf5d
---
Entry stack: [V12, S8, S7, S6, S5, S4, V1500, S2, S1, 0x3]
Stack pops: 4
Stack additions: [S3, S3, S1, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, V1500, V1500, S1, 0x3]

================================

Block 0xf59
[0xf59:0xf5c]
---
Predecessors: [0xf44]
Successors: [0xf5d]
---
0xf59 JUMPDEST
0xf5a DUP6
0xf5b SWAP3
0xf5c POP
---
0xf59: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, V1500, S2, S1, 0x3]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, S1, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, V1500, S5, S1, 0x3]

================================

Block 0xf5d
[0xf5d:0xf6c]
---
Predecessors: [0xf52, 0xf59]
Successors: [0xf6d, 0xf6e]
---
0xf5d JUMPDEST
0xf5e DUP3
0xf5f PUSH1 0x9
0xf61 PUSH1 0xff
0xf63 DUP8
0xf64 AND
0xf65 PUSH1 0x3
0xf67 DUP2
0xf68 LT
0xf69 PUSH2 0xf6e
0xf6c JUMPI
---
0xf5d: JUMPDEST 
0xf5f: V1505 = 0x9
0xf61: V1506 = 0xff
0xf64: V1507 = AND S4 0xff
0xf65: V1508 = 0x3
0xf68: V1509 = LT V1507 0x3
0xf69: V1510 = 0xf6e
0xf6c: JUMPI 0xf6e V1509
---
Entry stack: [V12, S8, S7, S6, S5, S4, V1500, S2, S1, 0x3]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S2, 0x9, V1507]
Exit stack: [V12, S8, S7, S6, S5, S4, V1500, S2, S1, 0x3, S2, 0x9, V1507]

================================

Block 0xf6d
[0xf6d:0xf6d]
---
Predecessors: [0xf5d]
Successors: []
---
0xf6d INVALID
---
0xf6d: INVALID 
---
Entry stack: [V12, S11, S10, S9, S8, S7, V1500, S5, S4, 0x3, S2, 0x9, V1507]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, V1500, S5, S4, 0x3, S2, 0x9, V1507]

================================

Block 0xf6e
[0xf6e:0xf74]
---
Predecessors: [0xf5d]
Successors: [0xf75]
---
0xf6e JUMPDEST
0xf6f PUSH1 0x3
0xf71 MUL
0xf72 ADD
0xf73 PUSH1 0x0
---
0xf6e: JUMPDEST 
0xf6f: V1511 = 0x3
0xf71: V1512 = MUL 0x3 V1507
0xf72: V1513 = ADD V1512 0x9
0xf73: V1514 = 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, V1500, S5, S4, 0x3, S2, 0x9, V1507]
Stack pops: 2
Stack additions: [V1513, 0x0]
Exit stack: [V12, S11, S10, S9, S8, S7, V1500, S5, S4, 0x3, S2, V1513, 0x0]

================================

Block 0xf75
[0xf75:0xf85]
---
Predecessors: [0xf6e]
Successors: [0xf86]
---
0xf75 JUMPDEST
0xf76 POP
0xf77 PUSH1 0x2
0xf79 ADD
0xf7a DUP1
0xf7b SLOAD
0xf7c SWAP1
0xf7d SWAP2
0xf7e ADD
0xf7f SWAP1
0xf80 SSTORE
0xf81 SWAP5
0xf82 DUP3
0xf83 SWAP1
0xf84 SUB
0xf85 SWAP5
---
0xf75: JUMPDEST 
0xf77: V1515 = 0x2
0xf79: V1516 = ADD 0x2 V1513
0xf7b: V1517 = S[V1516]
0xf7e: V1518 = ADD S2 V1517
0xf80: S[V1516] = V1518
0xf84: V1519 = SUB S8 S5
---
Entry stack: [V12, S11, S10, S9, S8, S7, V1500, S5, S4, 0x3, S2, V1513, 0x0]
Stack pops: 9
Stack additions: [V1519, S7, S6, S5, S4, S3]
Exit stack: [V12, S11, S10, S9, V1519, S7, V1500, S5, S4, 0x3]

================================

Block 0xf86
[0xf86:0xf90]
---
Predecessors: [0xf75]
Successors: [0xf05]
---
0xf86 JUMPDEST
0xf87 PUSH1 0x1
0xf89 SWAP1
0xf8a SWAP5
0xf8b ADD
0xf8c SWAP4
0xf8d PUSH2 0xf05
0xf90 JUMP
---
0xf86: JUMPDEST 
0xf87: V1520 = 0x1
0xf8b: V1521 = ADD S4 0x1
0xf8d: V1522 = 0xf05
0xf90: JUMP 0xf05
---
Entry stack: [V12, S8, S7, S6, V1519, S4, V1500, S2, S1, 0x3]
Stack pops: 5
Stack additions: [V1521, S3, S2, S1, S0]
Exit stack: [V12, S8, S7, S6, V1519, V1521, V1500, S2, S1, 0x3]

================================

Block 0xf91
[0xf91:0xff7]
---
Predecessors: [0xf05]
Successors: [0xff8, 0xffc]
---
0xf91 JUMPDEST
0xf92 PUSH1 0x6
0xf94 SLOAD
0xf95 PUSH1 0x4
0xf97 SLOAD
0xf98 DUP8
0xf99 DUP10
0xf9a SUB
0xf9b SWAP4
0xf9c POP
0xf9d PUSH1 0x1
0xf9f PUSH1 0xa0
0xfa1 PUSH1 0x2
0xfa3 EXP
0xfa4 SUB
0xfa5 SWAP2
0xfa6 DUP3
0xfa7 AND
0xfa8 SWAP2
0xfa9 PUSH4 0xa9059cbb
0xfae SWAP2
0xfaf AND
0xfb0 DUP5
0xfb1 PUSH1 0x0
0xfb3 PUSH1 0x40
0xfb5 MLOAD
0xfb6 PUSH1 0x20
0xfb8 ADD
0xfb9 MSTORE
0xfba PUSH1 0x40
0xfbc MLOAD
0xfbd PUSH1 0xe0
0xfbf PUSH1 0x2
0xfc1 EXP
0xfc2 PUSH4 0xffffffff
0xfc7 DUP6
0xfc8 AND
0xfc9 MUL
0xfca DUP2
0xfcb MSTORE
0xfcc PUSH1 0x1
0xfce PUSH1 0xa0
0xfd0 PUSH1 0x2
0xfd2 EXP
0xfd3 SUB
0xfd4 SWAP1
0xfd5 SWAP3
0xfd6 AND
0xfd7 PUSH1 0x4
0xfd9 DUP4
0xfda ADD
0xfdb MSTORE
0xfdc PUSH1 0x24
0xfde DUP3
0xfdf ADD
0xfe0 MSTORE
0xfe1 PUSH1 0x44
0xfe3 ADD
0xfe4 PUSH1 0x20
0xfe6 PUSH1 0x40
0xfe8 MLOAD
0xfe9 DUP1
0xfea DUP4
0xfeb SUB
0xfec DUP2
0xfed PUSH1 0x0
0xfef DUP8
0xff0 DUP1
0xff1 EXTCODESIZE
0xff2 ISZERO
0xff3 ISZERO
0xff4 PUSH2 0xffc
0xff7 JUMPI
---
0xf91: JUMPDEST 
0xf92: V1523 = 0x6
0xf94: V1524 = S[0x6]
0xf95: V1525 = 0x4
0xf97: V1526 = S[0x4]
0xf9a: V1527 = SUB S6 S5
0xf9d: V1528 = 0x1
0xf9f: V1529 = 0xa0
0xfa1: V1530 = 0x2
0xfa3: V1531 = EXP 0x2 0xa0
0xfa4: V1532 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa7: V1533 = AND 0xffffffffffffffffffffffffffffffffffffffff V1524
0xfa9: V1534 = 0xa9059cbb
0xfaf: V1535 = AND V1526 0xffffffffffffffffffffffffffffffffffffffff
0xfb1: V1536 = 0x0
0xfb3: V1537 = 0x40
0xfb5: V1538 = M[0x40]
0xfb6: V1539 = 0x20
0xfb8: V1540 = ADD 0x20 V1538
0xfb9: M[V1540] = 0x0
0xfba: V1541 = 0x40
0xfbc: V1542 = M[0x40]
0xfbd: V1543 = 0xe0
0xfbf: V1544 = 0x2
0xfc1: V1545 = EXP 0x2 0xe0
0xfc2: V1546 = 0xffffffff
0xfc8: V1547 = AND 0xa9059cbb 0xffffffff
0xfc9: V1548 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xfcb: M[V1542] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xfcc: V1549 = 0x1
0xfce: V1550 = 0xa0
0xfd0: V1551 = 0x2
0xfd2: V1552 = EXP 0x2 0xa0
0xfd3: V1553 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd6: V1554 = AND V1535 0xffffffffffffffffffffffffffffffffffffffff
0xfd7: V1555 = 0x4
0xfda: V1556 = ADD V1542 0x4
0xfdb: M[V1556] = V1554
0xfdc: V1557 = 0x24
0xfdf: V1558 = ADD V1542 0x24
0xfe0: M[V1558] = V1527
0xfe1: V1559 = 0x44
0xfe3: V1560 = ADD 0x44 V1542
0xfe4: V1561 = 0x20
0xfe6: V1562 = 0x40
0xfe8: V1563 = M[0x40]
0xfeb: V1564 = SUB V1560 V1563
0xfed: V1565 = 0x0
0xff1: V1566 = EXTCODESIZE V1533
0xff2: V1567 = ISZERO V1566
0xff3: V1568 = ISZERO V1567
0xff4: V1569 = 0xffc
0xff7: JUMPI 0xffc V1568
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V1527, S0, V1533, 0xa9059cbb, V1560, 0x20, V1563, V1564, V1563, 0x0, V1533]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, V1527, 0x3, V1533, 0xa9059cbb, V1560, 0x20, V1563, V1564, V1563, 0x0, V1533]

================================

Block 0xff8
[0xff8:0xffb]
---
Predecessors: [0xf91]
Successors: []
---
0xff8 PUSH1 0x0
0xffa DUP1
0xffb REVERT
---
0xff8: V1570 = 0x0
0xffb: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, V1527, 0x3, V1533, 0xa9059cbb, V1560, 0x20, V1563, V1564, V1563, 0x0, V1533]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, V1527, 0x3, V1533, 0xa9059cbb, V1560, 0x20, V1563, V1564, V1563, 0x0, V1533]

================================

Block 0xffc
[0xffc:0x1008]
---
Predecessors: [0xf91]
Successors: [0x1009, 0x100d]
---
0xffc JUMPDEST
0xffd PUSH2 0x2c6
0x1000 GAS
0x1001 SUB
0x1002 CALL
0x1003 ISZERO
0x1004 ISZERO
0x1005 PUSH2 0x100d
0x1008 JUMPI
---
0xffc: JUMPDEST 
0xffd: V1571 = 0x2c6
0x1000: V1572 = GAS
0x1001: V1573 = SUB V1572 0x2c6
0x1002: V1574 = CALL V1573 V1533 0x0 V1563 V1564 V1563 0x20
0x1003: V1575 = ISZERO V1574
0x1004: V1576 = ISZERO V1575
0x1005: V1577 = 0x100d
0x1008: JUMPI 0x100d V1576
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, V1527, 0x3, V1533, 0xa9059cbb, V1560, 0x20, V1563, V1564, V1563, 0x0, V1533]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, V1527, 0x3, V1533, 0xa9059cbb, V1560]

================================

Block 0x1009
[0x1009:0x100c]
---
Predecessors: [0xffc]
Successors: []
---
0x1009 PUSH1 0x0
0x100b DUP1
0x100c REVERT
---
0x1009: V1578 = 0x0
0x100c: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, V1527, 0x3, V1533, 0xa9059cbb, V1560]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, V1527, 0x3, V1533, 0xa9059cbb, V1560]

================================

Block 0x100d
[0x100d:0x101d]
---
Predecessors: [0xffc]
Successors: [0x101e, 0x101f]
---
0x100d JUMPDEST
0x100e POP
0x100f POP
0x1010 POP
0x1011 PUSH1 0x40
0x1013 MLOAD
0x1014 DUP1
0x1015 MLOAD
0x1016 SWAP1
0x1017 POP
0x1018 ISZERO
0x1019 ISZERO
0x101a PUSH2 0x101f
0x101d JUMPI
---
0x100d: JUMPDEST 
0x1011: V1579 = 0x40
0x1013: V1580 = M[0x40]
0x1015: V1581 = M[V1580]
0x1018: V1582 = ISZERO V1581
0x1019: V1583 = ISZERO V1582
0x101a: V1584 = 0x101f
0x101d: JUMPI 0x101f V1583
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, V1527, 0x3, V1533, 0xa9059cbb, V1560]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, V1527, 0x3]

================================

Block 0x101e
[0x101e:0x101e]
---
Predecessors: [0x100d]
Successors: []
---
0x101e INVALID
---
0x101e: INVALID 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, V1527, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, V1527, 0x3]

================================

Block 0x101f
[0x101f:0x1026]
---
Predecessors: [0x100d]
Successors: [0x8d6]
---
0x101f JUMPDEST
0x1020 PUSH2 0x1027
0x1023 PUSH2 0x8d6
0x1026 JUMP
---
0x101f: JUMPDEST 
0x1020: V1585 = 0x1027
0x1023: V1586 = 0x8d6
0x1026: JUMP 0x8d6
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, V1527, 0x3]
Stack pops: 0
Stack additions: [0x1027]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, V1527, 0x3, 0x1027]

================================

Block 0x1027
[0x1027:0x102e]
---
Predecessors: [0x912]
Successors: [0xac2]
---
0x1027 JUMPDEST
0x1028 PUSH2 0x102f
0x102b PUSH2 0xac2
0x102e JUMP
---
0x1027: JUMPDEST 
0x1028: V1587 = 0x102f
0x102b: V1588 = 0xac2
0x102e: JUMP 0xac2
---
Entry stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x102f]
Exit stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x102f]

================================

Block 0x102f
[0x102f:0x1035]
---
Predecessors: [0x912]
Successors: [0x1036, 0x103d]
---
0x102f JUMPDEST
0x1030 EQ
0x1031 ISZERO
0x1032 PUSH2 0x103d
0x1035 JUMPI
---
0x102f: JUMPDEST 
0x1030: V1589 = EQ S0 S1
0x1031: V1590 = ISZERO V1589
0x1032: V1591 = 0x103d
0x1035: JUMPI 0x103d V1590
---
Entry stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S16, V610, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x1036
[0x1036:0x103c]
---
Predecessors: [0x102f]
Successors: [0x483]
---
0x1036 PUSH2 0x103d
0x1039 PUSH2 0x483
0x103c JUMP
---
0x1036: V1592 = 0x103d
0x1039: V1593 = 0x483
0x103c: JUMP 0x483
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x103d]
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x103d]

================================

Block 0x103d
[0x103d:0x103d]
---
Predecessors: [0x5b2, 0x102f]
Successors: [0x103e]
---
0x103d JUMPDEST
---
0x103d: JUMPDEST 
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x103e
[0x103e:0x1071]
---
Predecessors: [0x103d]
Successors: [0x1072]
---
0x103e JUMPDEST
0x103f PUSH32 0xbf77afdbd3c69c4beef7d2bde755f15d1db8bb3e1c87ae262cb7f3b48685ddc1
0x1060 DUP3
0x1061 PUSH1 0x40
0x1063 MLOAD
0x1064 SWAP1
0x1065 DUP2
0x1066 MSTORE
0x1067 PUSH1 0x20
0x1069 ADD
0x106a PUSH1 0x40
0x106c MLOAD
0x106d DUP1
0x106e SWAP2
0x106f SUB
0x1070 SWAP1
0x1071 LOG1
---
0x103e: JUMPDEST 
0x103f: V1594 = 0xbf77afdbd3c69c4beef7d2bde755f15d1db8bb3e1c87ae262cb7f3b48685ddc1
0x1061: V1595 = 0x40
0x1063: V1596 = M[0x40]
0x1066: M[V1596] = S1
0x1067: V1597 = 0x20
0x1069: V1598 = ADD 0x20 V1596
0x106a: V1599 = 0x40
0x106c: V1600 = M[0x40]
0x106f: V1601 = SUB V1598 V1600
0x1071: LOG V1600 V1601 0xbf77afdbd3c69c4beef7d2bde755f15d1db8bb3e1c87ae262cb7f3b48685ddc1
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1072
[0x1072:0x1072]
---
Predecessors: [0x103e]
Successors: [0x1073]
---
0x1072 JUMPDEST
---
0x1072: JUMPDEST 
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1073
[0x1073:0x1074]
---
Predecessors: [0x1072]
Successors: [0x1075]
---
0x1073 JUMPDEST
0x1074 POP
---
0x1073: JUMPDEST 
---
Entry stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S14, V610, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1075
[0x1075:0x1075]
---
Predecessors: [0x1073]
Successors: [0x1076]
---
0x1075 JUMPDEST
---
0x1075: JUMPDEST 
---
Entry stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1076
[0x1076:0x107d]
---
Predecessors: [0x1075]
Successors: [0x180, 0x18e, 0x3d3]
---
0x1076 JUMPDEST
0x1077 POP
0x1078 POP
0x1079 POP
0x107a POP
0x107b POP
0x107c POP
0x107d JUMP
---
0x1076: JUMPDEST 
0x107d: JUMP S6
---
Entry stack: [S13, V610, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [S13, V610, S11, S10, S9, S8, S7]

================================

Block 0x107e
[0x107e:0x10bc]
---
Predecessors: []
Successors: []
---
0x107e STOP
0x107f LOG1
0x1080 PUSH6 0x627a7a723058
0x1087 SHA3
0x1088 MISSING 0xdc
0x1089 EQ
0x108a MISSING 0xbb
0x108b MISSING 0xd9
0x108c TIMESTAMP
0x108d MISSING 0x22
0x108e SAR
0x108f MSIZE
0x1090 SHA3
0x1091 MISSING 0xc1
0x1092 PUSH15 0x22a99c17267a2504e53dbfeb222c12
0x10a2 MISSING 0xbe
0x10a3 MISSING 0xe
0x10a4 MISSING 0xdb
0x10a5 POP
0x10a6 MSIZE
0x10a7 PUSH21 0x29
---
0x107e: STOP 
0x107f: LOG S0 S1 S2
0x1080: V1602 = 0x627a7a723058
0x1087: V1603 = SHA3 0x627a7a723058 S3
0x1088: MISSING 0xdc
0x1089: V1604 = EQ S0 S1
0x108a: MISSING 0xbb
0x108b: MISSING 0xd9
0x108c: V1605 = TIMESTAMP
0x108d: MISSING 0x22
0x108e: V1606 = SAR S0 S1
0x108f: V1607 = MSIZE
0x1090: V1608 = SHA3 V1607 V1606
0x1091: MISSING 0xc1
0x1092: V1609 = 0x22a99c17267a2504e53dbfeb222c12
0x10a2: MISSING 0xbe
0x10a3: MISSING 0xe
0x10a4: MISSING 0xdb
0x10a6: V1610 = MSIZE
0x10a7: V1611 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1603, V1604, V1605, V1608, 0x22a99c17267a2504e53dbfeb222c12, 0x29, V1610]
Exit stack: []

================================

Function 0:
Public function signature: 0x83c6323
Entry block: 0x190
Exit block: 0x1a3
Body: 0x190, 0x197, 0x19b, 0x1a3, 0x8d0

Function 1:
Public function signature: 0x11f58e99
Entry block: 0x1b5
Exit block: 0x1bc
Body: 0x1a3, 0x1b5, 0x1bc, 0x1c0

Function 2:
Public function signature: 0x1944bc3d
Entry block: 0x1da
Exit block: 0x1f0
Body: 0x1da, 0x1e1, 0x1e5, 0x1f0, 0x917, 0x923, 0x924, 0x92b

Function 3:
Public function signature: 0x1fa4ea66
Entry block: 0x214
Exit block: 0x227
Body: 0x214, 0x21b, 0x21f, 0x227, 0x93f

Function 4:
Public function signature: 0x3cecd719
Entry block: 0x243
Exit block: 0x3e3
Body: 0x243, 0x24a, 0x24e, 0x3e3, 0x94e, 0x965, 0x969, 0x96c, 0x97c, 0x97d, 0x985, 0x98c, 0x992, 0x9a1, 0x9a7, 0x9aa, 0x9ba, 0x9bb, 0x9c3, 0x9ca, 0x9d0, 0x9d7, 0x9d8, 0x9dc, 0x9ec, 0x9ed, 0x9f3, 0x9f7, 0xa2c

Function 5:
Public function signature: 0x48cd4cb1
Entry block: 0x258
Exit block: 0x1a3
Body: 0x1a3, 0x258, 0x25f, 0x263, 0xa34

Function 6:
Public function signature: 0x4c9297fa
Entry block: 0x27d
Exit block: 0x18e
Body: 0x18e, 0x27d, 0x284, 0x288, 0xa3a, 0xa51, 0xa55, 0xa59, 0xa69, 0xa6a, 0xa70, 0xa74, 0xa80, 0xa84, 0xaa1, 0xaa7, 0xaa8, 0xaaa

Function 7:
Public function signature: 0x521eb273
Entry block: 0x295
Exit block: 0x227
Body: 0x227, 0x295, 0x29c, 0x2a0, 0xaad

Function 8:
Public function signature: 0x58623642
Entry block: 0x2c4
Exit block: 0x1a3
Body: 0x1a3, 0x2c4, 0x2cb, 0x2cf, 0xabc

Function 9:
Public function signature: 0x63b20117
Entry block: 0x2e9
Exit block: 0x2f0
Body: 0x1a3, 0x2e9, 0x2f0, 0x2f4

Function 10:
Public function signature: 0x6db5c8fd
Entry block: 0x30e
Exit block: 0x1a3
Body: 0x1a3, 0x30e, 0x315, 0x319, 0xb05

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x333
Exit block: 0x227
Body: 0x227, 0x333, 0x33a, 0x33e, 0xb0b

Function 12:
Public function signature: 0xae422c09
Entry block: 0x362
Exit block: 0x227
Body: 0x227, 0x362, 0x369, 0x36d, 0xb1a

Function 13:
Public function signature: 0xb956a8a6
Entry block: 0x391
Exit block: 0x227
Body: 0x227, 0x391, 0x398, 0x39c, 0xb29

Function 14:
Public function signature: 0xc040e6b8
Entry block: 0x3c0
Exit block: 0x3e3
Body: 0x3c0, 0x3c7, 0x3cb, 0x3d3, 0x3e2, 0x3e3, 0xb38

Function 15:
Public function signature: 0xc062f578
Entry block: 0x3f7
Exit block: 0x3e3
Body: 0x3d3, 0x3e2, 0x3e3, 0x3f7, 0x3fe, 0x402, 0xb41, 0xb46, 0xb56, 0xb57, 0xb5f, 0xb66, 0xb6c, 0xb7b, 0xb81, 0xb84, 0xb94, 0xb95, 0xb9d, 0xba4, 0xbaa, 0xbb1, 0xbb2, 0xbba, 0xbbb

Function 16:
Public function signature: 0xc7efb162
Entry block: 0x42e
Exit block: 0xdf5
Body: 0x18e, 0x42e, 0x435, 0x439, 0xbbe, 0xbd5, 0xbd9, 0xbdd, 0xbed, 0xbee, 0xbf4, 0xbf8, 0xc09, 0xc0d, 0xc1e, 0xc22, 0xc33, 0xc37, 0xc40, 0xc44, 0xc4d, 0xc51, 0xc85, 0xc8c, 0xcda, 0xce1, 0xd2f, 0xd36, 0xda0, 0xdf5

Function 17:
Public function signature: 0xd031370b
Entry block: 0x461
Exit block: 0xf6d
Body: 0x461, 0x468, 0x46c, 0x55e, 0xe3c, 0xe5e, 0xe62, 0xe65, 0xe75, 0xe76, 0xe7e, 0xe85, 0xe8b, 0xe9a, 0xea0, 0xea3, 0xeb3, 0xeb4, 0xebc, 0xec3, 0xec9, 0xed0, 0xed1, 0xed5, 0xee5, 0xee6, 0xeec, 0xef0, 0xef9, 0xefd, 0xf05, 0xf12, 0xf20, 0xf21, 0xf28, 0xf3c, 0xf3d, 0xf44, 0xf52, 0xf59, 0xf5d, 0xf6d, 0xf6e, 0xf75, 0xf86, 0xf91, 0xff8, 0xffc, 0x1009, 0x100d, 0x101e, 0x101f, 0x1027

Function 18:
Public function signature: 0xd0febe4c
Entry block: 0x479
Exit block: 0x18e
Body: 0x18e, 0x479

Function 19:
Public fallback function
Entry block: 0xeb
Exit block: 0x18e
Body: 0xeb, 0xef, 0xf2, 0x102, 0x103, 0x10b, 0x112, 0x118, 0x127, 0x12d, 0x130, 0x140, 0x141, 0x149, 0x150, 0x156, 0x15d, 0x15e, 0x161, 0x171, 0x172, 0x179, 0x180, 0x185, 0x18a, 0x18b, 0x18c, 0x18e

Function 20:
Private function
Entry block: 0xac2
Exit block: 0x912
Body: 0x86f, 0x877, 0x87e, 0x90e, 0x912, 0xac2, 0xac7, 0xad4, 0xae3, 0xaea, 0xaf4, 0x1027, 0x102f, 0x1036

Function 21:
Private function
Entry block: 0x8d6
Exit block: 0x912
Body: 0x877, 0x87e, 0x8d6, 0x8db, 0x8e8, 0x8f7, 0x8fe, 0x906, 0x90e, 0x912, 0x102f, 0x1036

Function 22:
Private function
Entry block: 0x5b5
Exit block: 0x1076
Body: 0x5b5, 0x5c4, 0x5c9, 0x5d4, 0x5d7, 0x5e8, 0x5f0, 0x5f7, 0x5fd, 0x60c, 0x612, 0x615, 0x626, 0x62e, 0x635, 0x63b, 0x642, 0x643, 0x647, 0x658, 0x662, 0x66f, 0x67b, 0x688, 0x697, 0x69e, 0x6b3, 0x6ba, 0x6cf, 0x6d6, 0x6ef, 0x6fb, 0x717, 0x71e, 0x72d, 0x737, 0x73f, 0x750, 0x757, 0x767, 0x772, 0x77c, 0x783, 0x7b0, 0x7b1, 0x7e5, 0x844, 0x855, 0x867, 0x86f, 0x86f, 0x877, 0x87e, 0x885, 0x886, 0x8c4, 0x8c5, 0x8c7, 0x8c8, 0x90e, 0x912, 0xac2, 0xac7, 0xad4, 0xae3, 0xaea, 0xaf4, 0xda0, 0xdf9, 0xe0a, 0xe1d, 0xe2c, 0xe32, 0xe33, 0xe35, 0x1027, 0x102f, 0x1036, 0x103d, 0x103e, 0x1072, 0x1073, 0x1075, 0x1076

Function 23:
Private function
Entry block: 0x483
Exit block: 0x5b2
Body: 0x483, 0x495, 0x4f3, 0x504, 0x562, 0x573, 0x5b2

