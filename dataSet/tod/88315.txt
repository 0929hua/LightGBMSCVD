Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x147]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH3 0x821de3
0x3b EQ
0x3c PUSH2 0x147
0x3f JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x821de3
0x3b: V13 = EQ 0x821de3 V11
0x3c: V14 = 0x147
0x3f: JUMPI 0x147 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x19c]
---
0x40 DUP1
0x41 PUSH4 0x3ef13367
0x46 EQ
0x47 PUSH2 0x19c
0x4a JUMPI
---
0x41: V15 = 0x3ef13367
0x46: V16 = EQ 0x3ef13367 V11
0x47: V17 = 0x19c
0x4a: JUMPI 0x19c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1d5]
---
0x4b DUP1
0x4c PUSH4 0x6b9f96ea
0x51 EQ
0x52 PUSH2 0x1d5
0x55 JUMPI
---
0x4c: V18 = 0x6b9f96ea
0x51: V19 = EQ 0x6b9f96ea V11
0x52: V20 = 0x1d5
0x55: JUMPI 0x1d5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0xb2]
---
Predecessors: [0x0, 0x4b]
Successors: [0xb3, 0xb7]
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 DUP1
0x5a SWAP1
0x5b SLOAD
0x5c SWAP1
0x5d PUSH2 0x100
0x60 EXP
0x61 SWAP1
0x62 DIV
0x63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78 AND
0x79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e AND
0x8f PUSH2 0x8fc
0x92 CALLVALUE
0x93 SWAP1
0x94 DUP2
0x95 ISZERO
0x96 MUL
0x97 SWAP1
0x98 PUSH1 0x40
0x9a MLOAD
0x9b PUSH1 0x0
0x9d PUSH1 0x40
0x9f MLOAD
0xa0 DUP1
0xa1 DUP4
0xa2 SUB
0xa3 DUP2
0xa4 DUP6
0xa5 DUP9
0xa6 DUP9
0xa7 CALL
0xa8 SWAP4
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad ISZERO
0xae ISZERO
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0x56: JUMPDEST 
0x57: V21 = 0x0
0x5b: V22 = S[0x0]
0x5d: V23 = 0x100
0x60: V24 = EXP 0x100 0x0
0x62: V25 = DIV V22 0x1
0x63: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x78: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x79: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x8f: V30 = 0x8fc
0x92: V31 = CALLVALUE
0x95: V32 = ISZERO V31
0x96: V33 = MUL V32 0x8fc
0x98: V34 = 0x40
0x9a: V35 = M[0x40]
0x9b: V36 = 0x0
0x9d: V37 = 0x40
0x9f: V38 = M[0x40]
0xa2: V39 = SUB V35 V38
0xa7: V40 = CALL V33 V29 V31 V38 V39 V38 0x0
0xad: V41 = ISZERO V40
0xae: V42 = ISZERO V41
0xaf: V43 = 0xb7
0xb2: JUMPI 0xb7 V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0x56]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V44 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb7
[0xb7:0x146]
---
Predecessors: [0x56]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xd9 CALLER
0xda CALLVALUE
0xdb PUSH1 0x0
0xdd CALLDATASIZE
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 DUP6
0xe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8 AND
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 DUP5
0x115 DUP2
0x116 MSTORE
0x117 PUSH1 0x20
0x119 ADD
0x11a DUP1
0x11b PUSH1 0x20
0x11d ADD
0x11e DUP3
0x11f DUP2
0x120 SUB
0x121 DUP3
0x122 MSTORE
0x123 DUP5
0x124 DUP5
0x125 DUP3
0x126 DUP2
0x127 DUP2
0x128 MSTORE
0x129 PUSH1 0x20
0x12b ADD
0x12c SWAP3
0x12d POP
0x12e DUP1
0x12f DUP3
0x130 DUP5
0x131 CALLDATACOPY
0x132 DUP3
0x133 ADD
0x134 SWAP2
0x135 POP
0x136 POP
0x137 SWAP6
0x138 POP
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e PUSH1 0x40
0x140 MLOAD
0x141 DUP1
0x142 SWAP2
0x143 SUB
0x144 SWAP1
0x145 LOG1
0x146 STOP
---
0xb7: JUMPDEST 
0xb8: V45 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xd9: V46 = CALLER
0xda: V47 = CALLVALUE
0xdb: V48 = 0x0
0xdd: V49 = CALLDATASIZE
0xde: V50 = 0x40
0xe0: V51 = M[0x40]
0xe3: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xf9: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x110: M[V51] = V55
0x111: V56 = 0x20
0x113: V57 = ADD 0x20 V51
0x116: M[V57] = V47
0x117: V58 = 0x20
0x119: V59 = ADD 0x20 V57
0x11b: V60 = 0x20
0x11d: V61 = ADD 0x20 V59
0x120: V62 = SUB V61 V51
0x122: M[V59] = V62
0x128: M[V61] = V49
0x129: V63 = 0x20
0x12b: V64 = ADD 0x20 V61
0x131: CALLDATACOPY V64 0x0 V49
0x133: V65 = ADD V64 V49
0x13e: V66 = 0x40
0x140: V67 = M[0x40]
0x143: V68 = SUB V65 V67
0x145: LOG V67 V68 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0x146: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0xd]
Successors: [0x14e, 0x152]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x147: JUMPDEST 
0x148: V69 = CALLVALUE
0x149: V70 = ISZERO V69
0x14a: V71 = 0x152
0x14d: JUMPI 0x152 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x147]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V72 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0x147]
Successors: [0x1ea]
---
0x152 JUMPDEST
0x153 PUSH2 0x15a
0x156 PUSH2 0x1ea
0x159 JUMP
---
0x152: JUMPDEST 
0x153: V73 = 0x15a
0x156: V74 = 0x1ea
0x159: JUMP 0x1ea
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V11, 0x15a]

================================

Block 0x15a
[0x15a:0x19b]
---
Predecessors: [0x1ea]
Successors: []
---
0x15a JUMPDEST
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f DUP3
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18b AND
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP2
0x192 POP
0x193 POP
0x194 PUSH1 0x40
0x196 MLOAD
0x197 DUP1
0x198 SWAP2
0x199 SUB
0x19a SWAP1
0x19b RETURN
---
0x15a: JUMPDEST 
0x15b: V75 = 0x40
0x15d: V76 = M[0x40]
0x160: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x176: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x18d: M[V76] = V80
0x18e: V81 = 0x20
0x190: V82 = ADD 0x20 V76
0x194: V83 = 0x40
0x196: V84 = M[0x40]
0x199: V85 = SUB V82 V84
0x19b: RETURN V84 V85
---
Entry stack: [V11, 0x15a, V110]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15a]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x40]
Successors: [0x1a3, 0x1a7]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V86 = CALLVALUE
0x19e: V87 = ISZERO V86
0x19f: V88 = 0x1a7
0x1a2: JUMPI 0x1a7 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V89 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a7
[0x1a7:0x1d2]
---
Predecessors: [0x19c]
Successors: [0x20f]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0x1d3
0x1ab PUSH1 0x4
0x1ad DUP1
0x1ae DUP1
0x1af CALLDATALOAD
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 SWAP1
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP1
0x1cb SWAP2
0x1cc SWAP1
0x1cd POP
0x1ce POP
0x1cf PUSH2 0x20f
0x1d2 JUMP
---
0x1a7: JUMPDEST 
0x1a8: V90 = 0x1d3
0x1ab: V91 = 0x4
0x1af: V92 = CALLDATALOAD 0x4
0x1b0: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1c7: V95 = 0x20
0x1c9: V96 = ADD 0x20 0x4
0x1cf: V97 = 0x20f
0x1d2: JUMP 0x20f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d3, V94]
Exit stack: [V11, 0x1d3, V94]

================================

Block 0x1d3
[0x1d3:0x1d4]
---
Predecessors: [0x436]
Successors: []
---
0x1d3 JUMPDEST
0x1d4 STOP
---
0x1d3: JUMPDEST 
0x1d4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d5
[0x1d5:0x1db]
---
Predecessors: [0x4b]
Successors: [0x1dc, 0x1e0]
---
0x1d5 JUMPDEST
0x1d6 CALLVALUE
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V98 = CALLVALUE
0x1d7: V99 = ISZERO V98
0x1d8: V100 = 0x1e0
0x1db: JUMPI 0x1e0 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1d5]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V101 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e0
[0x1e0:0x1e7]
---
Predecessors: [0x1d5]
Successors: [0x43c]
---
0x1e0 JUMPDEST
0x1e1 PUSH2 0x1e8
0x1e4 PUSH2 0x43c
0x1e7 JUMP
---
0x1e0: JUMPDEST 
0x1e1: V102 = 0x1e8
0x1e4: V103 = 0x43c
0x1e7: JUMP 0x43c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V11, 0x1e8]

================================

Block 0x1e8
[0x1e8:0x1e9]
---
Predecessors: [0x4b4]
Successors: []
---
0x1e8 JUMPDEST
0x1e9 STOP
---
0x1e8: JUMPDEST 
0x1e9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ea
[0x1ea:0x20e]
---
Predecessors: [0x152]
Successors: [0x15a]
---
0x1ea JUMPDEST
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee SWAP1
0x1ef SLOAD
0x1f0 SWAP1
0x1f1 PUSH2 0x100
0x1f4 EXP
0x1f5 SWAP1
0x1f6 DIV
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d DUP2
0x20e JUMP
---
0x1ea: JUMPDEST 
0x1eb: V104 = 0x0
0x1ef: V105 = S[0x0]
0x1f1: V106 = 0x100
0x1f4: V107 = EXP 0x100 0x0
0x1f6: V108 = DIV V105 0x1
0x1f7: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x20e: JUMP 0x15a
---
Entry stack: [V11, 0x15a]
Stack pops: 1
Stack additions: [S0, V110]
Exit stack: [V11, 0x15a, V110]

================================

Block 0x20f
[0x20f:0x26a]
---
Predecessors: [0x1a7]
Successors: [0x26b, 0x26f]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 PUSH1 0x0
0x215 DUP1
0x216 PUSH1 0x0
0x218 SWAP1
0x219 SLOAD
0x21a SWAP1
0x21b PUSH2 0x100
0x21e EXP
0x21f SWAP1
0x220 DIV
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24c AND
0x24d CALLER
0x24e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x263 AND
0x264 EQ
0x265 ISZERO
0x266 ISZERO
0x267 PUSH2 0x26f
0x26a JUMPI
---
0x20f: JUMPDEST 
0x210: V111 = 0x0
0x213: V112 = 0x0
0x216: V113 = 0x0
0x219: V114 = S[0x0]
0x21b: V115 = 0x100
0x21e: V116 = EXP 0x100 0x0
0x220: V117 = DIV V114 0x1
0x221: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x237: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x24d: V122 = CALLER
0x24e: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x263: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x264: V125 = EQ V124 V121
0x265: V126 = ISZERO V125
0x266: V127 = ISZERO V126
0x267: V128 = 0x26f
0x26a: JUMPI 0x26f V127
---
Entry stack: [V11, 0x1d3, V94]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x1d3, V94, 0x0, 0x0, 0x0]

================================

Block 0x26b
[0x26b:0x26e]
---
Predecessors: [0x20f]
Successors: []
---
0x26b PUSH1 0x0
0x26d DUP1
0x26e REVERT
---
0x26b: V129 = 0x0
0x26e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, 0x0, 0x0, 0x0]

================================

Block 0x26f
[0x26f:0x313]
---
Predecessors: [0x20f]
Successors: [0x314, 0x318]
---
0x26f JUMPDEST
0x270 DUP4
0x271 SWAP3
0x272 POP
0x273 ADDRESS
0x274 SWAP2
0x275 POP
0x276 DUP3
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d PUSH4 0x70a08231
0x292 DUP4
0x293 PUSH1 0x0
0x295 PUSH1 0x40
0x297 MLOAD
0x298 PUSH1 0x20
0x29a ADD
0x29b MSTORE
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP3
0x2a0 PUSH4 0xffffffff
0x2a5 AND
0x2a6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c4 MUL
0x2c5 DUP2
0x2c6 MSTORE
0x2c7 PUSH1 0x4
0x2c9 ADD
0x2ca DUP1
0x2cb DUP3
0x2cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e1 AND
0x2e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f7 AND
0x2f8 DUP2
0x2f9 MSTORE
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd SWAP2
0x2fe POP
0x2ff POP
0x300 PUSH1 0x20
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 DUP4
0x307 SUB
0x308 DUP2
0x309 PUSH1 0x0
0x30b DUP8
0x30c DUP1
0x30d EXTCODESIZE
0x30e ISZERO
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x26f: JUMPDEST 
0x273: V130 = ADDRESS
0x277: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x28d: V133 = 0x70a08231
0x293: V134 = 0x0
0x295: V135 = 0x40
0x297: V136 = M[0x40]
0x298: V137 = 0x20
0x29a: V138 = ADD 0x20 V136
0x29b: M[V138] = 0x0
0x29c: V139 = 0x40
0x29e: V140 = M[0x40]
0x2a0: V141 = 0xffffffff
0x2a5: V142 = AND 0xffffffff 0x70a08231
0x2a6: V143 = 0x100000000000000000000000000000000000000000000000000000000
0x2c4: V144 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x2c6: M[V140] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2c7: V145 = 0x4
0x2c9: V146 = ADD 0x4 V140
0x2cc: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e1: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x2e2: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2f9: M[V146] = V150
0x2fa: V151 = 0x20
0x2fc: V152 = ADD 0x20 V146
0x300: V153 = 0x20
0x302: V154 = 0x40
0x304: V155 = M[0x40]
0x307: V156 = SUB V152 V155
0x309: V157 = 0x0
0x30d: V158 = EXTCODESIZE V132
0x30e: V159 = ISZERO V158
0x30f: V160 = ISZERO V159
0x310: V161 = 0x318
0x313: JUMPI 0x318 V160
---
Entry stack: [V11, 0x1d3, V94, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V130, S0, V132, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V132]
Exit stack: [V11, 0x1d3, V94, V94, V130, 0x0, V132, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V132]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x26f]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V162 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, V94, V130, 0x0, V132, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, 0x0, V132, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V132]

================================

Block 0x318
[0x318:0x324]
---
Predecessors: [0x26f]
Successors: [0x325, 0x329]
---
0x318 JUMPDEST
0x319 PUSH2 0x2c6
0x31c GAS
0x31d SUB
0x31e CALL
0x31f ISZERO
0x320 ISZERO
0x321 PUSH2 0x329
0x324 JUMPI
---
0x318: JUMPDEST 
0x319: V163 = 0x2c6
0x31c: V164 = GAS
0x31d: V165 = SUB V164 0x2c6
0x31e: V166 = CALL V165 V132 0x0 V155 V156 V155 0x20
0x31f: V167 = ISZERO V166
0x320: V168 = ISZERO V167
0x321: V169 = 0x329
0x324: JUMPI 0x329 V168
---
Entry stack: [V11, 0x1d3, V94, V94, V130, 0x0, V132, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V132]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, 0x0, V132, 0x70a08231, V152]

================================

Block 0x325
[0x325:0x328]
---
Predecessors: [0x318]
Successors: []
---
0x325 PUSH1 0x0
0x327 DUP1
0x328 REVERT
---
0x325: V170 = 0x0
0x328: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, V94, V130, 0x0, V132, 0x70a08231, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, 0x0, V132, 0x70a08231, V152]

================================

Block 0x329
[0x329:0x33e]
---
Predecessors: [0x318]
Successors: [0x33f, 0x343]
---
0x329 JUMPDEST
0x32a POP
0x32b POP
0x32c POP
0x32d PUSH1 0x40
0x32f MLOAD
0x330 DUP1
0x331 MLOAD
0x332 SWAP1
0x333 POP
0x334 SWAP1
0x335 POP
0x336 PUSH1 0x0
0x338 DUP2
0x339 EQ
0x33a ISZERO
0x33b PUSH2 0x343
0x33e JUMPI
---
0x329: JUMPDEST 
0x32d: V171 = 0x40
0x32f: V172 = M[0x40]
0x331: V173 = M[V172]
0x336: V174 = 0x0
0x339: V175 = EQ V173 0x0
0x33a: V176 = ISZERO V175
0x33b: V177 = 0x343
0x33e: JUMPI 0x343 V176
---
Entry stack: [V11, 0x1d3, V94, V94, V130, 0x0, V132, 0x70a08231, V152]
Stack pops: 4
Stack additions: [V173]
Exit stack: [V11, 0x1d3, V94, V94, V130, V173]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x329]
Successors: [0x436]
---
0x33f PUSH2 0x436
0x342 JUMP
---
0x33f: V178 = 0x436
0x342: JUMP 0x436
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, V173]

================================

Block 0x343
[0x343:0x40a]
---
Predecessors: [0x329]
Successors: [0x40b, 0x40f]
---
0x343 JUMPDEST
0x344 DUP3
0x345 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35a AND
0x35b PUSH4 0xa9059cbb
0x360 PUSH1 0x0
0x362 DUP1
0x363 SWAP1
0x364 SLOAD
0x365 SWAP1
0x366 PUSH2 0x100
0x369 EXP
0x36a SWAP1
0x36b DIV
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 DUP4
0x383 PUSH1 0x0
0x385 PUSH1 0x40
0x387 MLOAD
0x388 PUSH1 0x20
0x38a ADD
0x38b MSTORE
0x38c PUSH1 0x40
0x38e MLOAD
0x38f DUP4
0x390 PUSH4 0xffffffff
0x395 AND
0x396 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b4 MUL
0x3b5 DUP2
0x3b6 MSTORE
0x3b7 PUSH1 0x4
0x3b9 ADD
0x3ba DUP1
0x3bb DUP4
0x3bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d1 AND
0x3d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e7 AND
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed DUP3
0x3ee DUP2
0x3ef MSTORE
0x3f0 PUSH1 0x20
0x3f2 ADD
0x3f3 SWAP3
0x3f4 POP
0x3f5 POP
0x3f6 POP
0x3f7 PUSH1 0x20
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd DUP4
0x3fe SUB
0x3ff DUP2
0x400 PUSH1 0x0
0x402 DUP8
0x403 DUP1
0x404 EXTCODESIZE
0x405 ISZERO
0x406 ISZERO
0x407 PUSH2 0x40f
0x40a JUMPI
---
0x343: JUMPDEST 
0x345: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x35b: V181 = 0xa9059cbb
0x360: V182 = 0x0
0x364: V183 = S[0x0]
0x366: V184 = 0x100
0x369: V185 = EXP 0x100 0x0
0x36b: V186 = DIV V183 0x1
0x36c: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x383: V189 = 0x0
0x385: V190 = 0x40
0x387: V191 = M[0x40]
0x388: V192 = 0x20
0x38a: V193 = ADD 0x20 V191
0x38b: M[V193] = 0x0
0x38c: V194 = 0x40
0x38e: V195 = M[0x40]
0x390: V196 = 0xffffffff
0x395: V197 = AND 0xffffffff 0xa9059cbb
0x396: V198 = 0x100000000000000000000000000000000000000000000000000000000
0x3b4: V199 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3b6: M[V195] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b7: V200 = 0x4
0x3b9: V201 = ADD 0x4 V195
0x3bc: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x3d2: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x3e9: M[V201] = V205
0x3ea: V206 = 0x20
0x3ec: V207 = ADD 0x20 V201
0x3ef: M[V207] = V173
0x3f0: V208 = 0x20
0x3f2: V209 = ADD 0x20 V207
0x3f7: V210 = 0x20
0x3f9: V211 = 0x40
0x3fb: V212 = M[0x40]
0x3fe: V213 = SUB V209 V212
0x400: V214 = 0x0
0x404: V215 = EXTCODESIZE V180
0x405: V216 = ISZERO V215
0x406: V217 = ISZERO V216
0x407: V218 = 0x40f
0x40a: JUMPI 0x40f V217
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173]
Stack pops: 3
Stack additions: [S2, S1, S0, V180, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V180]
Exit stack: [V11, 0x1d3, V94, V94, V130, V173, V180, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V180]

================================

Block 0x40b
[0x40b:0x40e]
---
Predecessors: [0x343]
Successors: []
---
0x40b PUSH1 0x0
0x40d DUP1
0x40e REVERT
---
0x40b: V219 = 0x0
0x40e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173, V180, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, V173, V180, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V180]

================================

Block 0x40f
[0x40f:0x41b]
---
Predecessors: [0x343]
Successors: [0x41c, 0x420]
---
0x40f JUMPDEST
0x410 PUSH2 0x2c6
0x413 GAS
0x414 SUB
0x415 CALL
0x416 ISZERO
0x417 ISZERO
0x418 PUSH2 0x420
0x41b JUMPI
---
0x40f: JUMPDEST 
0x410: V220 = 0x2c6
0x413: V221 = GAS
0x414: V222 = SUB V221 0x2c6
0x415: V223 = CALL V222 V180 0x0 V212 V213 V212 0x20
0x416: V224 = ISZERO V223
0x417: V225 = ISZERO V224
0x418: V226 = 0x420
0x41b: JUMPI 0x420 V225
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173, V180, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V180]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, V173, V180, 0xa9059cbb, V209]

================================

Block 0x41c
[0x41c:0x41f]
---
Predecessors: [0x40f]
Successors: []
---
0x41c PUSH1 0x0
0x41e DUP1
0x41f REVERT
---
0x41c: V227 = 0x0
0x41f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173, V180, 0xa9059cbb, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, V173, V180, 0xa9059cbb, V209]

================================

Block 0x420
[0x420:0x430]
---
Predecessors: [0x40f]
Successors: [0x431, 0x435]
---
0x420 JUMPDEST
0x421 POP
0x422 POP
0x423 POP
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 MLOAD
0x429 SWAP1
0x42a POP
0x42b ISZERO
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x420: JUMPDEST 
0x424: V228 = 0x40
0x426: V229 = M[0x40]
0x428: V230 = M[V229]
0x42b: V231 = ISZERO V230
0x42c: V232 = ISZERO V231
0x42d: V233 = 0x435
0x430: JUMPI 0x435 V232
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173, V180, 0xa9059cbb, V209]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, V173]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x420]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V234 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, V173]

================================

Block 0x435
[0x435:0x435]
---
Predecessors: [0x420]
Successors: [0x436]
---
0x435 JUMPDEST
---
0x435: JUMPDEST 
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V94, V130, V173]

================================

Block 0x436
[0x436:0x43b]
---
Predecessors: [0x33f, 0x435]
Successors: [0x1d3]
---
0x436 JUMPDEST
0x437 POP
0x438 POP
0x439 POP
0x43a POP
0x43b JUMP
---
0x436: JUMPDEST 
0x43b: JUMP 0x1d3
---
Entry stack: [V11, 0x1d3, V94, V94, V130, V173]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x43c
[0x43c:0x4af]
---
Predecessors: [0x1e0]
Successors: [0x4b0, 0x4b4]
---
0x43c JUMPDEST
0x43d PUSH1 0x0
0x43f DUP1
0x440 SWAP1
0x441 SLOAD
0x442 SWAP1
0x443 PUSH2 0x100
0x446 EXP
0x447 SWAP1
0x448 DIV
0x449 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45e AND
0x45f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x474 AND
0x475 PUSH2 0x8fc
0x478 ADDRESS
0x479 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48e AND
0x48f BALANCE
0x490 SWAP1
0x491 DUP2
0x492 ISZERO
0x493 MUL
0x494 SWAP1
0x495 PUSH1 0x40
0x497 MLOAD
0x498 PUSH1 0x0
0x49a PUSH1 0x40
0x49c MLOAD
0x49d DUP1
0x49e DUP4
0x49f SUB
0x4a0 DUP2
0x4a1 DUP6
0x4a2 DUP9
0x4a3 DUP9
0x4a4 CALL
0x4a5 SWAP4
0x4a6 POP
0x4a7 POP
0x4a8 POP
0x4a9 POP
0x4aa ISZERO
0x4ab ISZERO
0x4ac PUSH2 0x4b4
0x4af JUMPI
---
0x43c: JUMPDEST 
0x43d: V235 = 0x0
0x441: V236 = S[0x0]
0x443: V237 = 0x100
0x446: V238 = EXP 0x100 0x0
0x448: V239 = DIV V236 0x1
0x449: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x45f: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x474: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x475: V244 = 0x8fc
0x478: V245 = ADDRESS
0x479: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x48e: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x48f: V248 = BALANCE V247
0x492: V249 = ISZERO V248
0x493: V250 = MUL V249 0x8fc
0x495: V251 = 0x40
0x497: V252 = M[0x40]
0x498: V253 = 0x0
0x49a: V254 = 0x40
0x49c: V255 = M[0x40]
0x49f: V256 = SUB V252 V255
0x4a4: V257 = CALL V250 V243 V248 V255 V256 V255 0x0
0x4aa: V258 = ISZERO V257
0x4ab: V259 = ISZERO V258
0x4ac: V260 = 0x4b4
0x4af: JUMPI 0x4b4 V259
---
Entry stack: [V11, 0x1e8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e8]

================================

Block 0x4b0
[0x4b0:0x4b3]
---
Predecessors: [0x43c]
Successors: []
---
0x4b0 PUSH1 0x0
0x4b2 DUP1
0x4b3 REVERT
---
0x4b0: V261 = 0x0
0x4b3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e8]

================================

Block 0x4b4
[0x4b4:0x4b5]
---
Predecessors: [0x43c]
Successors: [0x1e8]
---
0x4b4 JUMPDEST
0x4b5 JUMP
---
0x4b4: JUMPDEST 
0x4b5: JUMP 0x1e8
---
Entry stack: [V11, 0x1e8]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b6
[0x4b6:0x4ed]
---
Predecessors: []
Successors: []
---
0x4b6 STOP
0x4b7 LOG1
0x4b8 PUSH6 0x627a7a723058
0x4bf SHA3
0x4c0 MISSING 0x28
0x4c1 MISSING 0xa7
0x4c2 POP
0x4c3 MISSING 0xe0
0x4c4 MISSING 0x28
0x4c5 SWAP3
0x4c6 MISSING 0xe3
0x4c7 MISSING 0xad
0x4c8 MISSING 0xf7
0x4c9 MISSING 0xca
0x4ca CALLDATACOPY
0x4cb COINBASE
0x4cc SWAP16
0x4cd PUSH32 0x105afb59ae618e1976dd5c366d3e6ab98500029
---
0x4b6: STOP 
0x4b7: LOG S0 S1 S2
0x4b8: V262 = 0x627a7a723058
0x4bf: V263 = SHA3 0x627a7a723058 S3
0x4c0: MISSING 0x28
0x4c1: MISSING 0xa7
0x4c3: MISSING 0xe0
0x4c4: MISSING 0x28
0x4c6: MISSING 0xe3
0x4c7: MISSING 0xad
0x4c8: MISSING 0xf7
0x4c9: MISSING 0xca
0x4ca: CALLDATACOPY S0 S1 S2
0x4cb: V264 = COINBASE
0x4cd: V265 = 0x105afb59ae618e1976dd5c366d3e6ab98500029
---
Entry stack: []
Stack pops: 0
Stack additions: [V263, S3, S1, S2, S0, 0x105afb59ae618e1976dd5c366d3e6ab98500029, S18, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V264]
Exit stack: []

================================

Function 0:
Public function signature: 0x821de3
Entry block: 0x147
Exit block: 0x15a
Body: 0x147, 0x14e, 0x152, 0x15a, 0x1ea

Function 1:
Public function signature: 0x3ef13367
Entry block: 0x19c
Exit block: 0x431
Body: 0x19c, 0x1a3, 0x1a7, 0x1d3, 0x20f, 0x26b, 0x26f, 0x314, 0x318, 0x325, 0x329, 0x33f, 0x343, 0x40b, 0x40f, 0x41c, 0x420, 0x431, 0x435, 0x436

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x1d5
Exit block: 0x1e8
Body: 0x1d5, 0x1dc, 0x1e0, 0x1e8, 0x43c, 0x4b0, 0x4b4

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0xb7
Body: 0x56, 0xb3, 0xb7

