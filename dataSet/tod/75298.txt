Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x25d1fac0
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x25d1fac0
0x3c: V13 = EQ 0x25d1fac0 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xec]
---
0x41 DUP1
0x42 PUSH4 0xbf3f2ba4
0x47 EQ
0x48 PUSH2 0xec
0x4b JUMPI
---
0x42: V15 = 0xbf3f2ba4
0x47: V16 = EQ 0xbf3f2ba4 V11
0x48: V17 = 0xec
0x4b: JUMPI 0xec V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x17c]
---
0x4c DUP1
0x4d PUSH4 0xd0b27083
0x52 EQ
0x53 PUSH2 0x17c
0x56 JUMPI
---
0x4d: V18 = 0xd0b27083
0x52: V19 = EQ 0xd0b27083 V11
0x53: V20 = 0x17c
0x56: JUMPI 0x17c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x20c]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x20c
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x20c
0x70: JUMP 0x20c
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x95]
---
Predecessors: [0x29d]
Successors: [0x96]
---
0x71 JUMPDEST
0x72 PUSH1 0x40
0x74 MLOAD
0x75 DUP1
0x76 DUP1
0x77 PUSH1 0x20
0x79 ADD
0x7a DUP3
0x7b DUP2
0x7c SUB
0x7d DUP3
0x7e MSTORE
0x7f DUP4
0x80 DUP2
0x81 DUP2
0x82 MLOAD
0x83 DUP2
0x84 MSTORE
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP2
0x89 POP
0x8a DUP1
0x8b MLOAD
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 DUP1
0x92 DUP4
0x93 DUP4
0x94 PUSH1 0x0
---
0x71: JUMPDEST 
0x72: V28 = 0x40
0x74: V29 = M[0x40]
0x77: V30 = 0x20
0x79: V31 = ADD 0x20 V29
0x7c: V32 = SUB V31 V29
0x7e: M[V29] = V32
0x82: V33 = M[V189]
0x84: M[V31] = V33
0x85: V34 = 0x20
0x87: V35 = ADD 0x20 V31
0x8b: V36 = M[V189]
0x8d: V37 = 0x20
0x8f: V38 = ADD 0x20 V189
0x94: V39 = 0x0
---
Entry stack: [V11, V189]
Stack pops: 1
Stack additions: [S0, V29, V29, V35, V38, V36, V36, V35, V38, 0x0]
Exit stack: [V11, V189, V29, V29, V35, V38, V36, V36, V35, V38, 0x0]

================================

Block 0x96
[0x96:0x9e]
---
Predecessors: [0x71, 0x9f]
Successors: [0x9f, 0xb1]
---
0x96 JUMPDEST
0x97 DUP4
0x98 DUP2
0x99 LT
0x9a ISZERO
0x9b PUSH2 0xb1
0x9e JUMPI
---
0x96: JUMPDEST 
0x99: V40 = LT S0 V36
0x9a: V41 = ISZERO V40
0x9b: V42 = 0xb1
0x9e: JUMPI 0xb1 V41
---
Entry stack: [V11, V189, V29, V29, V35, V38, V36, V36, V35, V38, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V189, V29, V29, V35, V38, V36, V36, V35, V38, S0]

================================

Block 0x9f
[0x9f:0xb0]
---
Predecessors: [0x96]
Successors: [0x96]
---
0x9f DUP1
0xa0 DUP3
0xa1 ADD
0xa2 MLOAD
0xa3 DUP2
0xa4 DUP5
0xa5 ADD
0xa6 MSTORE
0xa7 PUSH1 0x20
0xa9 DUP2
0xaa ADD
0xab SWAP1
0xac POP
0xad PUSH2 0x96
0xb0 JUMP
---
0xa1: V43 = ADD V38 S0
0xa2: V44 = M[V43]
0xa5: V45 = ADD V35 S0
0xa6: M[V45] = V44
0xa7: V46 = 0x20
0xaa: V47 = ADD S0 0x20
0xad: V48 = 0x96
0xb0: JUMP 0x96
---
Entry stack: [V11, V189, V29, V29, V35, V38, V36, V36, V35, V38, S0]
Stack pops: 3
Stack additions: [S2, S1, V47]
Exit stack: [V11, V189, V29, V29, V35, V38, V36, V36, V35, V38, V47]

================================

Block 0xb1
[0xb1:0xc4]
---
Predecessors: [0x96]
Successors: [0xc5, 0xde]
---
0xb1 JUMPDEST
0xb2 POP
0xb3 POP
0xb4 POP
0xb5 POP
0xb6 SWAP1
0xb7 POP
0xb8 SWAP1
0xb9 DUP2
0xba ADD
0xbb SWAP1
0xbc PUSH1 0x1f
0xbe AND
0xbf DUP1
0xc0 ISZERO
0xc1 PUSH2 0xde
0xc4 JUMPI
---
0xb1: JUMPDEST 
0xba: V49 = ADD V36 V35
0xbc: V50 = 0x1f
0xbe: V51 = AND 0x1f V36
0xc0: V52 = ISZERO V51
0xc1: V53 = 0xde
0xc4: JUMPI 0xde V52
---
Entry stack: [V11, V189, V29, V29, V35, V38, V36, V36, V35, V38, S0]
Stack pops: 7
Stack additions: [V49, V51]
Exit stack: [V11, V189, V29, V29, V49, V51]

================================

Block 0xc5
[0xc5:0xdd]
---
Predecessors: [0xb1]
Successors: [0xde]
---
0xc5 DUP1
0xc6 DUP3
0xc7 SUB
0xc8 DUP1
0xc9 MLOAD
0xca PUSH1 0x1
0xcc DUP4
0xcd PUSH1 0x20
0xcf SUB
0xd0 PUSH2 0x100
0xd3 EXP
0xd4 SUB
0xd5 NOT
0xd6 AND
0xd7 DUP2
0xd8 MSTORE
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP2
0xdd POP
---
0xc7: V54 = SUB V49 V51
0xc9: V55 = M[V54]
0xca: V56 = 0x1
0xcd: V57 = 0x20
0xcf: V58 = SUB 0x20 V51
0xd0: V59 = 0x100
0xd3: V60 = EXP 0x100 V58
0xd4: V61 = SUB V60 0x1
0xd5: V62 = NOT V61
0xd6: V63 = AND V62 V55
0xd8: M[V54] = V63
0xd9: V64 = 0x20
0xdb: V65 = ADD 0x20 V54
---
Entry stack: [V11, V189, V29, V29, V49, V51]
Stack pops: 2
Stack additions: [V65, S0]
Exit stack: [V11, V189, V29, V29, V65, V51]

================================

Block 0xde
[0xde:0xeb]
---
Predecessors: [0xb1, 0xc5]
Successors: []
---
0xde JUMPDEST
0xdf POP
0xe0 SWAP3
0xe1 POP
0xe2 POP
0xe3 POP
0xe4 PUSH1 0x40
0xe6 MLOAD
0xe7 DUP1
0xe8 SWAP2
0xe9 SUB
0xea SWAP1
0xeb RETURN
---
0xde: JUMPDEST 
0xe4: V66 = 0x40
0xe6: V67 = M[0x40]
0xe9: V68 = SUB S1 V67
0xeb: RETURN V67 V68
---
Entry stack: [V11, V189, V29, V29, S1, V51]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0x41]
Successors: [0xf4, 0xf8]
---
0xec JUMPDEST
0xed CALLVALUE
0xee DUP1
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xec: JUMPDEST 
0xed: V69 = CALLVALUE
0xef: V70 = ISZERO V69
0xf0: V71 = 0xf8
0xf3: JUMPI 0xf8 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xec]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V72 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0xf8
[0xf8:0x100]
---
Predecessors: [0xec]
Successors: [0x2d8]
---
0xf8 JUMPDEST
0xf9 POP
0xfa PUSH2 0x101
0xfd PUSH2 0x2d8
0x100 JUMP
---
0xf8: JUMPDEST 
0xfa: V73 = 0x101
0xfd: V74 = 0x2d8
0x100: JUMP 0x2d8
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x101
[0x101:0x125]
---
Predecessors: [0x36a]
Successors: [0x126]
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 MLOAD
0x105 DUP1
0x106 DUP1
0x107 PUSH1 0x20
0x109 ADD
0x10a DUP3
0x10b DUP2
0x10c SUB
0x10d DUP3
0x10e MSTORE
0x10f DUP4
0x110 DUP2
0x111 DUP2
0x112 MLOAD
0x113 DUP2
0x114 MSTORE
0x115 PUSH1 0x20
0x117 ADD
0x118 SWAP2
0x119 POP
0x11a DUP1
0x11b MLOAD
0x11c SWAP1
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 DUP1
0x122 DUP4
0x123 DUP4
0x124 PUSH1 0x0
---
0x101: JUMPDEST 
0x102: V75 = 0x40
0x104: V76 = M[0x40]
0x107: V77 = 0x20
0x109: V78 = ADD 0x20 V76
0x10c: V79 = SUB V78 V76
0x10e: M[V76] = V79
0x112: V80 = M[V223]
0x114: M[V78] = V80
0x115: V81 = 0x20
0x117: V82 = ADD 0x20 V78
0x11b: V83 = M[V223]
0x11d: V84 = 0x20
0x11f: V85 = ADD 0x20 V223
0x124: V86 = 0x0
---
Entry stack: [V11, V223]
Stack pops: 1
Stack additions: [S0, V76, V76, V82, V85, V83, V83, V82, V85, 0x0]
Exit stack: [V11, V223, V76, V76, V82, V85, V83, V83, V82, V85, 0x0]

================================

Block 0x126
[0x126:0x12e]
---
Predecessors: [0x101, 0x12f]
Successors: [0x12f, 0x141]
---
0x126 JUMPDEST
0x127 DUP4
0x128 DUP2
0x129 LT
0x12a ISZERO
0x12b PUSH2 0x141
0x12e JUMPI
---
0x126: JUMPDEST 
0x129: V87 = LT S0 V83
0x12a: V88 = ISZERO V87
0x12b: V89 = 0x141
0x12e: JUMPI 0x141 V88
---
Entry stack: [V11, V223, V76, V76, V82, V85, V83, V83, V82, V85, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V223, V76, V76, V82, V85, V83, V83, V82, V85, S0]

================================

Block 0x12f
[0x12f:0x140]
---
Predecessors: [0x126]
Successors: [0x126]
---
0x12f DUP1
0x130 DUP3
0x131 ADD
0x132 MLOAD
0x133 DUP2
0x134 DUP5
0x135 ADD
0x136 MSTORE
0x137 PUSH1 0x20
0x139 DUP2
0x13a ADD
0x13b SWAP1
0x13c POP
0x13d PUSH2 0x126
0x140 JUMP
---
0x131: V90 = ADD V85 S0
0x132: V91 = M[V90]
0x135: V92 = ADD V82 S0
0x136: M[V92] = V91
0x137: V93 = 0x20
0x13a: V94 = ADD S0 0x20
0x13d: V95 = 0x126
0x140: JUMP 0x126
---
Entry stack: [V11, V223, V76, V76, V82, V85, V83, V83, V82, V85, S0]
Stack pops: 3
Stack additions: [S2, S1, V94]
Exit stack: [V11, V223, V76, V76, V82, V85, V83, V83, V82, V85, V94]

================================

Block 0x141
[0x141:0x154]
---
Predecessors: [0x126]
Successors: [0x155, 0x16e]
---
0x141 JUMPDEST
0x142 POP
0x143 POP
0x144 POP
0x145 POP
0x146 SWAP1
0x147 POP
0x148 SWAP1
0x149 DUP2
0x14a ADD
0x14b SWAP1
0x14c PUSH1 0x1f
0x14e AND
0x14f DUP1
0x150 ISZERO
0x151 PUSH2 0x16e
0x154 JUMPI
---
0x141: JUMPDEST 
0x14a: V96 = ADD V83 V82
0x14c: V97 = 0x1f
0x14e: V98 = AND 0x1f V83
0x150: V99 = ISZERO V98
0x151: V100 = 0x16e
0x154: JUMPI 0x16e V99
---
Entry stack: [V11, V223, V76, V76, V82, V85, V83, V83, V82, V85, S0]
Stack pops: 7
Stack additions: [V96, V98]
Exit stack: [V11, V223, V76, V76, V96, V98]

================================

Block 0x155
[0x155:0x16d]
---
Predecessors: [0x141]
Successors: [0x16e]
---
0x155 DUP1
0x156 DUP3
0x157 SUB
0x158 DUP1
0x159 MLOAD
0x15a PUSH1 0x1
0x15c DUP4
0x15d PUSH1 0x20
0x15f SUB
0x160 PUSH2 0x100
0x163 EXP
0x164 SUB
0x165 NOT
0x166 AND
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x20
0x16b ADD
0x16c SWAP2
0x16d POP
---
0x157: V101 = SUB V96 V98
0x159: V102 = M[V101]
0x15a: V103 = 0x1
0x15d: V104 = 0x20
0x15f: V105 = SUB 0x20 V98
0x160: V106 = 0x100
0x163: V107 = EXP 0x100 V105
0x164: V108 = SUB V107 0x1
0x165: V109 = NOT V108
0x166: V110 = AND V109 V102
0x168: M[V101] = V110
0x169: V111 = 0x20
0x16b: V112 = ADD 0x20 V101
---
Entry stack: [V11, V223, V76, V76, V96, V98]
Stack pops: 2
Stack additions: [V112, S0]
Exit stack: [V11, V223, V76, V76, V112, V98]

================================

Block 0x16e
[0x16e:0x17b]
---
Predecessors: [0x141, 0x155]
Successors: []
---
0x16e JUMPDEST
0x16f POP
0x170 SWAP3
0x171 POP
0x172 POP
0x173 POP
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 SWAP2
0x179 SUB
0x17a SWAP1
0x17b RETURN
---
0x16e: JUMPDEST 
0x174: V113 = 0x40
0x176: V114 = M[0x40]
0x179: V115 = SUB S1 V114
0x17b: RETURN V114 V115
---
Entry stack: [V11, V223, V76, V76, S1, V98]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x4c]
Successors: [0x184, 0x188]
---
0x17c JUMPDEST
0x17d CALLVALUE
0x17e DUP1
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x17c: JUMPDEST 
0x17d: V116 = CALLVALUE
0x17f: V117 = ISZERO V116
0x180: V118 = 0x188
0x183: JUMPI 0x188 V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x17c]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V119 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x188
[0x188:0x190]
---
Predecessors: [0x17c]
Successors: [0x3a5]
---
0x188 JUMPDEST
0x189 POP
0x18a PUSH2 0x191
0x18d PUSH2 0x3a5
0x190 JUMP
---
0x188: JUMPDEST 
0x18a: V120 = 0x191
0x18d: V121 = 0x3a5
0x190: JUMP 0x3a5
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: [0x191]
Exit stack: [V11, 0x191]

================================

Block 0x191
[0x191:0x1b5]
---
Predecessors: [0x438]
Successors: [0x1b6]
---
0x191 JUMPDEST
0x192 PUSH1 0x40
0x194 MLOAD
0x195 DUP1
0x196 DUP1
0x197 PUSH1 0x20
0x199 ADD
0x19a DUP3
0x19b DUP2
0x19c SUB
0x19d DUP3
0x19e MSTORE
0x19f DUP4
0x1a0 DUP2
0x1a1 DUP2
0x1a2 MLOAD
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 SWAP2
0x1a9 POP
0x1aa DUP1
0x1ab MLOAD
0x1ac SWAP1
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP1
0x1b1 DUP1
0x1b2 DUP4
0x1b3 DUP4
0x1b4 PUSH1 0x0
---
0x191: JUMPDEST 
0x192: V122 = 0x40
0x194: V123 = M[0x40]
0x197: V124 = 0x20
0x199: V125 = ADD 0x20 V123
0x19c: V126 = SUB V125 V123
0x19e: M[V123] = V126
0x1a2: V127 = M[V258]
0x1a4: M[V125] = V127
0x1a5: V128 = 0x20
0x1a7: V129 = ADD 0x20 V125
0x1ab: V130 = M[V258]
0x1ad: V131 = 0x20
0x1af: V132 = ADD 0x20 V258
0x1b4: V133 = 0x0
---
Entry stack: [V11, V258]
Stack pops: 1
Stack additions: [S0, V123, V123, V129, V132, V130, V130, V129, V132, 0x0]
Exit stack: [V11, V258, V123, V123, V129, V132, V130, V130, V129, V132, 0x0]

================================

Block 0x1b6
[0x1b6:0x1be]
---
Predecessors: [0x191, 0x1bf]
Successors: [0x1bf, 0x1d1]
---
0x1b6 JUMPDEST
0x1b7 DUP4
0x1b8 DUP2
0x1b9 LT
0x1ba ISZERO
0x1bb PUSH2 0x1d1
0x1be JUMPI
---
0x1b6: JUMPDEST 
0x1b9: V134 = LT S0 V130
0x1ba: V135 = ISZERO V134
0x1bb: V136 = 0x1d1
0x1be: JUMPI 0x1d1 V135
---
Entry stack: [V11, V258, V123, V123, V129, V132, V130, V130, V129, V132, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V258, V123, V123, V129, V132, V130, V130, V129, V132, S0]

================================

Block 0x1bf
[0x1bf:0x1d0]
---
Predecessors: [0x1b6]
Successors: [0x1b6]
---
0x1bf DUP1
0x1c0 DUP3
0x1c1 ADD
0x1c2 MLOAD
0x1c3 DUP2
0x1c4 DUP5
0x1c5 ADD
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 DUP2
0x1ca ADD
0x1cb SWAP1
0x1cc POP
0x1cd PUSH2 0x1b6
0x1d0 JUMP
---
0x1c1: V137 = ADD V132 S0
0x1c2: V138 = M[V137]
0x1c5: V139 = ADD V129 S0
0x1c6: M[V139] = V138
0x1c7: V140 = 0x20
0x1ca: V141 = ADD S0 0x20
0x1cd: V142 = 0x1b6
0x1d0: JUMP 0x1b6
---
Entry stack: [V11, V258, V123, V123, V129, V132, V130, V130, V129, V132, S0]
Stack pops: 3
Stack additions: [S2, S1, V141]
Exit stack: [V11, V258, V123, V123, V129, V132, V130, V130, V129, V132, V141]

================================

Block 0x1d1
[0x1d1:0x1e4]
---
Predecessors: [0x1b6]
Successors: [0x1e5, 0x1fe]
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 SWAP1
0x1d7 POP
0x1d8 SWAP1
0x1d9 DUP2
0x1da ADD
0x1db SWAP1
0x1dc PUSH1 0x1f
0x1de AND
0x1df DUP1
0x1e0 ISZERO
0x1e1 PUSH2 0x1fe
0x1e4 JUMPI
---
0x1d1: JUMPDEST 
0x1da: V143 = ADD V130 V129
0x1dc: V144 = 0x1f
0x1de: V145 = AND 0x1f V130
0x1e0: V146 = ISZERO V145
0x1e1: V147 = 0x1fe
0x1e4: JUMPI 0x1fe V146
---
Entry stack: [V11, V258, V123, V123, V129, V132, V130, V130, V129, V132, S0]
Stack pops: 7
Stack additions: [V143, V145]
Exit stack: [V11, V258, V123, V123, V143, V145]

================================

Block 0x1e5
[0x1e5:0x1fd]
---
Predecessors: [0x1d1]
Successors: [0x1fe]
---
0x1e5 DUP1
0x1e6 DUP3
0x1e7 SUB
0x1e8 DUP1
0x1e9 MLOAD
0x1ea PUSH1 0x1
0x1ec DUP4
0x1ed PUSH1 0x20
0x1ef SUB
0x1f0 PUSH2 0x100
0x1f3 EXP
0x1f4 SUB
0x1f5 NOT
0x1f6 AND
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP2
0x1fd POP
---
0x1e7: V148 = SUB V143 V145
0x1e9: V149 = M[V148]
0x1ea: V150 = 0x1
0x1ed: V151 = 0x20
0x1ef: V152 = SUB 0x20 V145
0x1f0: V153 = 0x100
0x1f3: V154 = EXP 0x100 V152
0x1f4: V155 = SUB V154 0x1
0x1f5: V156 = NOT V155
0x1f6: V157 = AND V156 V149
0x1f8: M[V148] = V157
0x1f9: V158 = 0x20
0x1fb: V159 = ADD 0x20 V148
---
Entry stack: [V11, V258, V123, V123, V143, V145]
Stack pops: 2
Stack additions: [V159, S0]
Exit stack: [V11, V258, V123, V123, V159, V145]

================================

Block 0x1fe
[0x1fe:0x20b]
---
Predecessors: [0x1d1, 0x1e5]
Successors: []
---
0x1fe JUMPDEST
0x1ff POP
0x200 SWAP3
0x201 POP
0x202 POP
0x203 POP
0x204 PUSH1 0x40
0x206 MLOAD
0x207 DUP1
0x208 SWAP2
0x209 SUB
0x20a SWAP1
0x20b RETURN
---
0x1fe: JUMPDEST 
0x204: V160 = 0x40
0x206: V161 = M[0x40]
0x209: V162 = SUB S1 V161
0x20b: RETURN V161 V162
---
Entry stack: [V11, V258, V123, V123, S1, V145]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x20c
[0x20c:0x263]
---
Predecessors: [0x68]
Successors: [0x264, 0x29d]
---
0x20c JUMPDEST
0x20d PUSH1 0x60
0x20f PUSH1 0x0
0x211 DUP1
0x212 SWAP1
0x213 SLOAD
0x214 SWAP1
0x215 PUSH2 0x100
0x218 EXP
0x219 SWAP1
0x21a DIV
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 CALLER
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e EQ
0x25f ISZERO
0x260 PUSH2 0x29d
0x263 JUMPI
---
0x20c: JUMPDEST 
0x20d: V163 = 0x60
0x20f: V164 = 0x0
0x213: V165 = S[0x0]
0x215: V166 = 0x100
0x218: V167 = EXP 0x100 0x0
0x21a: V168 = DIV V165 0x1
0x21b: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x231: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x247: V173 = CALLER
0x248: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x25e: V176 = EQ V175 V172
0x25f: V177 = ISZERO V176
0x260: V178 = 0x29d
0x263: JUMPI 0x29d V177
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V11, 0x71, 0x60]

================================

Block 0x264
[0x264:0x29c]
---
Predecessors: [0x20c]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 SWAP1
0x268 SLOAD
0x269 SWAP1
0x26a PUSH2 0x100
0x26d EXP
0x26e SWAP1
0x26f DIV
0x270 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x285 AND
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b AND
0x29c SELFDESTRUCT
---
0x264: V179 = 0x0
0x268: V180 = S[0x0]
0x26a: V181 = 0x100
0x26d: V182 = EXP 0x100 0x0
0x26f: V183 = DIV V180 0x1
0x270: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x285: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x286: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x29c: SELFDESTRUCT V187
---
Entry stack: [V11, 0x71, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71, 0x60]

================================

Block 0x29d
[0x29d:0x2d7]
---
Predecessors: [0x20c]
Successors: [0x71]
---
0x29d JUMPDEST
0x29e PUSH1 0x40
0x2a0 DUP1
0x2a1 MLOAD
0x2a2 SWAP1
0x2a3 DUP2
0x2a4 ADD
0x2a5 PUSH1 0x40
0x2a7 MSTORE
0x2a8 DUP1
0x2a9 PUSH1 0x19
0x2ab DUP2
0x2ac MSTORE
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 PUSH32 0x596f7520617265206e6f742074686520637573746f6d65722e00000000000000
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 POP
0x2d4 SWAP1
0x2d5 POP
0x2d6 SWAP1
0x2d7 JUMP
---
0x29d: JUMPDEST 
0x29e: V188 = 0x40
0x2a1: V189 = M[0x40]
0x2a4: V190 = ADD V189 0x40
0x2a5: V191 = 0x40
0x2a7: M[0x40] = V190
0x2a9: V192 = 0x19
0x2ac: M[V189] = 0x19
0x2ad: V193 = 0x20
0x2af: V194 = ADD 0x20 V189
0x2b0: V195 = 0x596f7520617265206e6f742074686520637573746f6d65722e00000000000000
0x2d2: M[V194] = 0x596f7520617265206e6f742074686520637573746f6d65722e00000000000000
0x2d7: JUMP 0x71
---
Entry stack: [V11, 0x71, 0x60]
Stack pops: 2
Stack additions: [V189]
Exit stack: [V11, V189]

================================

Block 0x2d8
[0x2d8:0x330]
---
Predecessors: [0xf8]
Successors: [0x331, 0x36a]
---
0x2d8 JUMPDEST
0x2d9 PUSH1 0x60
0x2db PUSH1 0x1
0x2dd PUSH1 0x0
0x2df SWAP1
0x2e0 SLOAD
0x2e1 SWAP1
0x2e2 PUSH2 0x100
0x2e5 EXP
0x2e6 SWAP1
0x2e7 DIV
0x2e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fd AND
0x2fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x313 AND
0x314 CALLER
0x315 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32a AND
0x32b EQ
0x32c ISZERO
0x32d PUSH2 0x36a
0x330 JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V196 = 0x60
0x2db: V197 = 0x1
0x2dd: V198 = 0x0
0x2e0: V199 = S[0x1]
0x2e2: V200 = 0x100
0x2e5: V201 = EXP 0x100 0x0
0x2e7: V202 = DIV V199 0x1
0x2e8: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x2fe: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x313: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x314: V207 = CALLER
0x315: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x32b: V210 = EQ V209 V206
0x32c: V211 = ISZERO V210
0x32d: V212 = 0x36a
0x330: JUMPI 0x36a V211
---
Entry stack: [V11, 0x101]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V11, 0x101, 0x60]

================================

Block 0x331
[0x331:0x369]
---
Predecessors: [0x2d8]
Successors: []
---
0x331 PUSH1 0x0
0x333 DUP1
0x334 SWAP1
0x335 SLOAD
0x336 SWAP1
0x337 PUSH2 0x100
0x33a EXP
0x33b SWAP1
0x33c DIV
0x33d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x352 AND
0x353 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x368 AND
0x369 SELFDESTRUCT
---
0x331: V213 = 0x0
0x335: V214 = S[0x0]
0x337: V215 = 0x100
0x33a: V216 = EXP 0x100 0x0
0x33c: V217 = DIV V214 0x1
0x33d: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x352: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x353: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x368: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x369: SELFDESTRUCT V221
---
Entry stack: [V11, 0x101, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x101, 0x60]

================================

Block 0x36a
[0x36a:0x3a4]
---
Predecessors: [0x2d8]
Successors: [0x101]
---
0x36a JUMPDEST
0x36b PUSH1 0x40
0x36d DUP1
0x36e MLOAD
0x36f SWAP1
0x370 DUP2
0x371 ADD
0x372 PUSH1 0x40
0x374 MSTORE
0x375 DUP1
0x376 PUSH1 0x1a
0x378 DUP2
0x379 MSTORE
0x37a PUSH1 0x20
0x37c ADD
0x37d PUSH32 0x596f7520617265206e6f742074686520636f72726563746f722e000000000000
0x39e DUP2
0x39f MSTORE
0x3a0 POP
0x3a1 SWAP1
0x3a2 POP
0x3a3 SWAP1
0x3a4 JUMP
---
0x36a: JUMPDEST 
0x36b: V222 = 0x40
0x36e: V223 = M[0x40]
0x371: V224 = ADD V223 0x40
0x372: V225 = 0x40
0x374: M[0x40] = V224
0x376: V226 = 0x1a
0x379: M[V223] = 0x1a
0x37a: V227 = 0x20
0x37c: V228 = ADD 0x20 V223
0x37d: V229 = 0x596f7520617265206e6f742074686520636f72726563746f722e000000000000
0x39f: M[V228] = 0x596f7520617265206e6f742074686520636f72726563746f722e000000000000
0x3a4: JUMP 0x101
---
Entry stack: [V11, 0x101, 0x60]
Stack pops: 2
Stack additions: [V223]
Exit stack: [V11, V223]

================================

Block 0x3a5
[0x3a5:0x3fd]
---
Predecessors: [0x188]
Successors: [0x3fe, 0x438]
---
0x3a5 JUMPDEST
0x3a6 PUSH1 0x60
0x3a8 PUSH1 0x1
0x3aa PUSH1 0x0
0x3ac SWAP1
0x3ad SLOAD
0x3ae SWAP1
0x3af PUSH2 0x100
0x3b2 EXP
0x3b3 SWAP1
0x3b4 DIV
0x3b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ca AND
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 CALLER
0x3e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f7 AND
0x3f8 EQ
0x3f9 ISZERO
0x3fa PUSH2 0x438
0x3fd JUMPI
---
0x3a5: JUMPDEST 
0x3a6: V230 = 0x60
0x3a8: V231 = 0x1
0x3aa: V232 = 0x0
0x3ad: V233 = S[0x1]
0x3af: V234 = 0x100
0x3b2: V235 = EXP 0x100 0x0
0x3b4: V236 = DIV V233 0x1
0x3b5: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x3cb: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x3e1: V241 = CALLER
0x3e2: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x3f8: V244 = EQ V243 V240
0x3f9: V245 = ISZERO V244
0x3fa: V246 = 0x438
0x3fd: JUMPI 0x438 V245
---
Entry stack: [V11, 0x191]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V11, 0x191, 0x60]

================================

Block 0x3fe
[0x3fe:0x437]
---
Predecessors: [0x3a5]
Successors: []
---
0x3fe PUSH1 0x1
0x400 PUSH1 0x0
0x402 SWAP1
0x403 SLOAD
0x404 SWAP1
0x405 PUSH2 0x100
0x408 EXP
0x409 SWAP1
0x40a DIV
0x40b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x420 AND
0x421 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x436 AND
0x437 SELFDESTRUCT
---
0x3fe: V247 = 0x1
0x400: V248 = 0x0
0x403: V249 = S[0x1]
0x405: V250 = 0x100
0x408: V251 = EXP 0x100 0x0
0x40a: V252 = DIV V249 0x1
0x40b: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x420: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x421: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x436: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x437: SELFDESTRUCT V256
---
Entry stack: [V11, 0x191, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, 0x60]

================================

Block 0x438
[0x438:0x472]
---
Predecessors: [0x3a5]
Successors: [0x191]
---
0x438 JUMPDEST
0x439 PUSH1 0x40
0x43b DUP1
0x43c MLOAD
0x43d SWAP1
0x43e DUP2
0x43f ADD
0x440 PUSH1 0x40
0x442 MSTORE
0x443 DUP1
0x444 PUSH1 0x1a
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x20
0x44a ADD
0x44b PUSH32 0x596f7520617265206e6f742074686520636f72726563746f722e000000000000
0x46c DUP2
0x46d MSTORE
0x46e POP
0x46f SWAP1
0x470 POP
0x471 SWAP1
0x472 JUMP
---
0x438: JUMPDEST 
0x439: V257 = 0x40
0x43c: V258 = M[0x40]
0x43f: V259 = ADD V258 0x40
0x440: V260 = 0x40
0x442: M[0x40] = V259
0x444: V261 = 0x1a
0x447: M[V258] = 0x1a
0x448: V262 = 0x20
0x44a: V263 = ADD 0x20 V258
0x44b: V264 = 0x596f7520617265206e6f742074686520636f72726563746f722e000000000000
0x46d: M[V263] = 0x596f7520617265206e6f742074686520636f72726563746f722e000000000000
0x472: JUMP 0x191
---
Entry stack: [V11, 0x191, 0x60]
Stack pops: 2
Stack additions: [V258]
Exit stack: [V11, V258]

================================

Block 0x473
[0x473:0x4a4]
---
Predecessors: []
Successors: []
---
0x473 STOP
0x474 LOG1
0x475 PUSH6 0x627a7a723058
0x47c SHA3
0x47d MISSING 0xdd
0x47e MISSING 0xd2
0x47f CODECOPY
0x480 MISSING 0xcf
0x481 MISSING 0xfc
0x482 MISSING 0x2b
0x483 PUSH19 0x95dbe1d24b2f205c92a40dc0b4578bbe53cd04
0x497 PUSH2 0xc66f
0x49a PUSH10 0x3df00029
---
0x473: STOP 
0x474: LOG S0 S1 S2
0x475: V265 = 0x627a7a723058
0x47c: V266 = SHA3 0x627a7a723058 S3
0x47d: MISSING 0xdd
0x47e: MISSING 0xd2
0x47f: CODECOPY S0 S1 S2
0x480: MISSING 0xcf
0x481: MISSING 0xfc
0x482: MISSING 0x2b
0x483: V267 = 0x95dbe1d24b2f205c92a40dc0b4578bbe53cd04
0x497: V268 = 0xc66f
0x49a: V269 = 0x3df00029
---
Entry stack: []
Stack pops: 0
Stack additions: [V266, 0x3df00029, 0xc66f, 0x95dbe1d24b2f205c92a40dc0b4578bbe53cd04]
Exit stack: []

================================

Function 0:
Public function signature: 0x25d1fac0
Entry block: 0x5c
Exit block: 0xde
Body: 0x5c, 0x64, 0x68, 0x71, 0x96, 0x9f, 0xb1, 0xc5, 0xde, 0x20c, 0x264, 0x29d

Function 1:
Public function signature: 0xbf3f2ba4
Entry block: 0xec
Exit block: 0x16e
Body: 0xec, 0xf4, 0xf8, 0x101, 0x126, 0x12f, 0x141, 0x155, 0x16e, 0x2d8, 0x331, 0x36a

Function 2:
Public function signature: 0xd0b27083
Entry block: 0x17c
Exit block: 0x1fe
Body: 0x17c, 0x184, 0x188, 0x191, 0x1b6, 0x1bf, 0x1d1, 0x1e5, 0x1fe, 0x3a5, 0x3fe, 0x438

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

