Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1998aeef
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1998aeef
0x3c: V13 = EQ 0x1998aeef V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x5b]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x5b
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x5b
0x4b: JUMPI 0x5b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x70]
---
0x51 JUMPDEST
0x52 PUSH2 0x59
0x55 PUSH2 0x70
0x58 JUMP
---
0x51: JUMPDEST 
0x52: V19 = 0x59
0x55: V20 = 0x70
0x58: JUMP 0x70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x59]
Exit stack: [V11, 0x59]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: [0x15d]
Successors: []
---
0x59 JUMPDEST
0x5a STOP
---
0x59: JUMPDEST 
0x5a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x61]
---
Predecessors: [0x41]
Successors: [0x62, 0x66]
---
0x5b JUMPDEST
0x5c CALLVALUE
0x5d ISZERO
0x5e PUSH2 0x66
0x61 JUMPI
---
0x5b: JUMPDEST 
0x5c: V21 = CALLVALUE
0x5d: V22 = ISZERO V21
0x5e: V23 = 0x66
0x61: JUMPI 0x66 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x5b]
Successors: []
---
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0x5b]
Successors: [0x163]
---
0x66 JUMPDEST
0x67 PUSH2 0x6e
0x6a PUSH2 0x163
0x6d JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x6e
0x6a: V26 = 0x163
0x6d: JUMP 0x163
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x2aa]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x70
[0x70:0xc6]
---
Predecessors: [0x51]
Successors: [0xc7, 0xcb]
---
0x70 JUMPDEST
0x71 CALLER
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 PUSH1 0x0
0x8a DUP1
0x8b SWAP1
0x8c SLOAD
0x8d SWAP1
0x8e PUSH2 0x100
0x91 EXP
0x92 SWAP1
0x93 DIV
0x94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9 AND
0xaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf AND
0xc0 EQ
0xc1 ISZERO
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0x70: JUMPDEST 
0x71: V27 = CALLER
0x72: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x88: V30 = 0x0
0x8c: V31 = S[0x0]
0x8e: V32 = 0x100
0x91: V33 = EXP 0x100 0x0
0x93: V34 = DIV V31 0x1
0x94: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xaa: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xc0: V39 = EQ V38 V29
0xc1: V40 = ISZERO V39
0xc2: V41 = ISZERO V40
0xc3: V42 = 0xcb
0xc6: JUMPI 0xcb V41
---
Entry stack: [V11, 0x59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x59]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0x70]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V43 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x59]

================================

Block 0xcb
[0xcb:0x14b]
---
Predecessors: [0x70]
Successors: [0x14c, 0x150]
---
0xcb JUMPDEST
0xcc PUSH1 0x2
0xce PUSH1 0x0
0xd0 SWAP1
0xd1 SLOAD
0xd2 SWAP1
0xd3 PUSH2 0x100
0xd6 EXP
0xd7 SWAP1
0xd8 DIV
0xd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee AND
0xef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104 AND
0x105 PUSH4 0x1998aeef
0x10a CALLVALUE
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP3
0x10f PUSH4 0xffffffff
0x114 AND
0x115 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x133 MUL
0x134 DUP2
0x135 MSTORE
0x136 PUSH1 0x4
0x138 ADD
0x139 PUSH1 0x0
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP4
0x140 SUB
0x141 DUP2
0x142 DUP6
0x143 DUP9
0x144 DUP1
0x145 EXTCODESIZE
0x146 ISZERO
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0xcb: JUMPDEST 
0xcc: V44 = 0x2
0xce: V45 = 0x0
0xd1: V46 = S[0x2]
0xd3: V47 = 0x100
0xd6: V48 = EXP 0x100 0x0
0xd8: V49 = DIV V46 0x1
0xd9: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xee: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xef: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0x104: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x105: V54 = 0x1998aeef
0x10a: V55 = CALLVALUE
0x10b: V56 = 0x40
0x10d: V57 = M[0x40]
0x10f: V58 = 0xffffffff
0x114: V59 = AND 0xffffffff 0x1998aeef
0x115: V60 = 0x100000000000000000000000000000000000000000000000000000000
0x133: V61 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1998aeef
0x135: M[V57] = 0x1998aeef00000000000000000000000000000000000000000000000000000000
0x136: V62 = 0x4
0x138: V63 = ADD 0x4 V57
0x139: V64 = 0x0
0x13b: V65 = 0x40
0x13d: V66 = M[0x40]
0x140: V67 = SUB V63 V66
0x145: V68 = EXTCODESIZE V53
0x146: V69 = ISZERO V68
0x147: V70 = ISZERO V69
0x148: V71 = 0x150
0x14b: JUMPI 0x150 V70
---
Entry stack: [V11, 0x59]
Stack pops: 0
Stack additions: [V53, 0x1998aeef, V55, V63, 0x0, V66, V67, V66, V55, V53]
Exit stack: [V11, 0x59, V53, 0x1998aeef, V55, V63, 0x0, V66, V67, V66, V55, V53]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0xcb]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V72 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x59, V53, 0x1998aeef, V55, V63, 0x0, V66, V67, V66, V55, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x59, V53, 0x1998aeef, V55, V63, 0x0, V66, V67, V66, V55, V53]

================================

Block 0x150
[0x150:0x158]
---
Predecessors: [0xcb]
Successors: [0x159, 0x15d]
---
0x150 JUMPDEST
0x151 GAS
0x152 CALL
0x153 ISZERO
0x154 ISZERO
0x155 PUSH2 0x15d
0x158 JUMPI
---
0x150: JUMPDEST 
0x151: V73 = GAS
0x152: V74 = CALL V73 V53 V55 V66 V67 V66 0x0
0x153: V75 = ISZERO V74
0x154: V76 = ISZERO V75
0x155: V77 = 0x15d
0x158: JUMPI 0x15d V76
---
Entry stack: [V11, 0x59, V53, 0x1998aeef, V55, V63, 0x0, V66, V67, V66, V55, V53]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x59, V53, 0x1998aeef, V55, V63]

================================

Block 0x159
[0x159:0x15c]
---
Predecessors: [0x150]
Successors: []
---
0x159 PUSH1 0x0
0x15b DUP1
0x15c REVERT
---
0x159: V78 = 0x0
0x15c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x59, V53, 0x1998aeef, V55, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x59, V53, 0x1998aeef, V55, V63]

================================

Block 0x15d
[0x15d:0x162]
---
Predecessors: [0x150]
Successors: [0x59]
---
0x15d JUMPDEST
0x15e POP
0x15f POP
0x160 POP
0x161 POP
0x162 JUMP
---
0x15d: JUMPDEST 
0x162: JUMP 0x59
---
Entry stack: [V11, 0x59, V53, 0x1998aeef, V55, V63]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x1b9]
---
Predecessors: [0x66]
Successors: [0x1ba, 0x1be]
---
0x163 JUMPDEST
0x164 CALLER
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b PUSH1 0x0
0x17d DUP1
0x17e SWAP1
0x17f SLOAD
0x180 SWAP1
0x181 PUSH2 0x100
0x184 EXP
0x185 SWAP1
0x186 DIV
0x187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c AND
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 EQ
0x1b4 ISZERO
0x1b5 ISZERO
0x1b6 PUSH2 0x1be
0x1b9 JUMPI
---
0x163: JUMPDEST 
0x164: V79 = CALLER
0x165: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x17b: V82 = 0x0
0x17f: V83 = S[0x0]
0x181: V84 = 0x100
0x184: V85 = EXP 0x100 0x0
0x186: V86 = DIV V83 0x1
0x187: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x19d: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x1b3: V91 = EQ V90 V81
0x1b4: V92 = ISZERO V91
0x1b5: V93 = ISZERO V92
0x1b6: V94 = 0x1be
0x1b9: JUMPI 0x1be V93
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x1ba
[0x1ba:0x1bd]
---
Predecessors: [0x163]
Successors: []
---
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd REVERT
---
0x1ba: V95 = 0x0
0x1bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x1be
[0x1be:0x23e]
---
Predecessors: [0x163]
Successors: [0x23f, 0x243]
---
0x1be JUMPDEST
0x1bf PUSH1 0x2
0x1c1 PUSH1 0x0
0x1c3 SWAP1
0x1c4 SLOAD
0x1c5 SWAP1
0x1c6 PUSH2 0x100
0x1c9 EXP
0x1ca SWAP1
0x1cb DIV
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f7 AND
0x1f8 PUSH4 0xb73c6ce9
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 DUP2
0x201 PUSH4 0xffffffff
0x206 AND
0x207 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x225 MUL
0x226 DUP2
0x227 MSTORE
0x228 PUSH1 0x4
0x22a ADD
0x22b PUSH1 0x0
0x22d PUSH1 0x40
0x22f MLOAD
0x230 DUP1
0x231 DUP4
0x232 SUB
0x233 DUP2
0x234 PUSH1 0x0
0x236 DUP8
0x237 DUP1
0x238 EXTCODESIZE
0x239 ISZERO
0x23a ISZERO
0x23b PUSH2 0x243
0x23e JUMPI
---
0x1be: JUMPDEST 
0x1bf: V96 = 0x2
0x1c1: V97 = 0x0
0x1c4: V98 = S[0x2]
0x1c6: V99 = 0x100
0x1c9: V100 = EXP 0x100 0x0
0x1cb: V101 = DIV V98 0x1
0x1cc: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1e2: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1f8: V106 = 0xb73c6ce9
0x1fd: V107 = 0x40
0x1ff: V108 = M[0x40]
0x201: V109 = 0xffffffff
0x206: V110 = AND 0xffffffff 0xb73c6ce9
0x207: V111 = 0x100000000000000000000000000000000000000000000000000000000
0x225: V112 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb73c6ce9
0x227: M[V108] = 0xb73c6ce900000000000000000000000000000000000000000000000000000000
0x228: V113 = 0x4
0x22a: V114 = ADD 0x4 V108
0x22b: V115 = 0x0
0x22d: V116 = 0x40
0x22f: V117 = M[0x40]
0x232: V118 = SUB V114 V117
0x234: V119 = 0x0
0x238: V120 = EXTCODESIZE V105
0x239: V121 = ISZERO V120
0x23a: V122 = ISZERO V121
0x23b: V123 = 0x243
0x23e: JUMPI 0x243 V122
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: [V105, 0xb73c6ce9, V114, 0x0, V117, V118, V117, 0x0, V105]
Exit stack: [V11, 0x6e, V105, 0xb73c6ce9, V114, 0x0, V117, V118, V117, 0x0, V105]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x1be]
Successors: []
---
0x23f PUSH1 0x0
0x241 DUP1
0x242 REVERT
---
0x23f: V124 = 0x0
0x242: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, V105, 0xb73c6ce9, V114, 0x0, V117, V118, V117, 0x0, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, V105, 0xb73c6ce9, V114, 0x0, V117, V118, V117, 0x0, V105]

================================

Block 0x243
[0x243:0x24b]
---
Predecessors: [0x1be]
Successors: [0x24c, 0x250]
---
0x243 JUMPDEST
0x244 GAS
0x245 CALL
0x246 ISZERO
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x243: JUMPDEST 
0x244: V125 = GAS
0x245: V126 = CALL V125 V105 0x0 V117 V118 V117 0x0
0x246: V127 = ISZERO V126
0x247: V128 = ISZERO V127
0x248: V129 = 0x250
0x24b: JUMPI 0x250 V128
---
Entry stack: [V11, 0x6e, V105, 0xb73c6ce9, V114, 0x0, V117, V118, V117, 0x0, V105]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x6e, V105, 0xb73c6ce9, V114]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x243]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V130 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, V105, 0xb73c6ce9, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, V105, 0xb73c6ce9, V114]

================================

Block 0x250
[0x250:0x2a5]
---
Predecessors: [0x243]
Successors: [0x2a6, 0x2aa]
---
0x250 JUMPDEST
0x251 POP
0x252 POP
0x253 POP
0x254 CALLER
0x255 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26a AND
0x26b PUSH2 0x8fc
0x26e ADDRESS
0x26f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x284 AND
0x285 BALANCE
0x286 SWAP1
0x287 DUP2
0x288 ISZERO
0x289 MUL
0x28a SWAP1
0x28b PUSH1 0x40
0x28d MLOAD
0x28e PUSH1 0x0
0x290 PUSH1 0x40
0x292 MLOAD
0x293 DUP1
0x294 DUP4
0x295 SUB
0x296 DUP2
0x297 DUP6
0x298 DUP9
0x299 DUP9
0x29a CALL
0x29b SWAP4
0x29c POP
0x29d POP
0x29e POP
0x29f POP
0x2a0 ISZERO
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x250: JUMPDEST 
0x254: V131 = CALLER
0x255: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x26b: V134 = 0x8fc
0x26e: V135 = ADDRESS
0x26f: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x284: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x285: V138 = BALANCE V137
0x288: V139 = ISZERO V138
0x289: V140 = MUL V139 0x8fc
0x28b: V141 = 0x40
0x28d: V142 = M[0x40]
0x28e: V143 = 0x0
0x290: V144 = 0x40
0x292: V145 = M[0x40]
0x295: V146 = SUB V142 V145
0x29a: V147 = CALL V140 V133 V138 V145 V146 V145 0x0
0x2a0: V148 = ISZERO V147
0x2a1: V149 = ISZERO V148
0x2a2: V150 = 0x2aa
0x2a5: JUMPI 0x2aa V149
---
Entry stack: [V11, 0x6e, V105, 0xb73c6ce9, V114]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x250]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V151 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x2aa
[0x2aa:0x2ab]
---
Predecessors: [0x250]
Successors: [0x6e]
---
0x2aa JUMPDEST
0x2ab JUMP
---
0x2aa: JUMPDEST 
0x2ab: JUMP 0x6e
---
Entry stack: [V11, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ac
[0x2ac:0x2d7]
---
Predecessors: []
Successors: []
---
0x2ac STOP
0x2ad LOG1
0x2ae PUSH6 0x627a7a723058
0x2b5 SHA3
0x2b6 PUSH22 0x27be4aaa0a93ed833744d8ebb238a5a5c0fe27c203ac
0x2cd REVERT
0x2ce DUP5
0x2cf CODECOPY
0x2d0 DUP5
0x2d1 MISSING 0xaa
0x2d2 ADDRESS
0x2d3 MISSING 0xd0
0x2d4 CREATE2
0x2d5 MISSING 0xe2
0x2d6 STOP
0x2d7 MISSING 0x29
---
0x2ac: STOP 
0x2ad: LOG S0 S1 S2
0x2ae: V152 = 0x627a7a723058
0x2b5: V153 = SHA3 0x627a7a723058 S3
0x2b6: V154 = 0x27be4aaa0a93ed833744d8ebb238a5a5c0fe27c203ac
0x2cd: REVERT 0x27be4aaa0a93ed833744d8ebb238a5a5c0fe27c203ac V153
0x2cf: CODECOPY S4 S0 S1
0x2d1: MISSING 0xaa
0x2d2: V155 = ADDRESS
0x2d3: MISSING 0xd0
0x2d4: V156 = CREATE2 S0 S1 S2 S3
0x2d5: MISSING 0xe2
0x2d6: STOP 
0x2d7: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, S2, S3, S4, S5, S6, V155, V156]
Exit stack: []

================================

Function 0:
Public function signature: 0x1998aeef
Entry block: 0x51
Exit block: 0x59
Body: 0x51, 0x59, 0x70, 0xc7, 0xcb, 0x14c, 0x150, 0x159, 0x15d

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x5b
Exit block: 0x6e
Body: 0x5b, 0x62, 0x66, 0x6e, 0x163, 0x1ba, 0x1be, 0x23f, 0x243, 0x24c, 0x250, 0x2a6, 0x2aa

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

