Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xcf]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xcf
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xcf
0xc: JUMPI 0xcf V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xd1]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6a21857f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xd1
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6a21857f
0x3b: V13 = EQ V11 0x6a21857f
0x3c: V14 = 0xd1
0x3f: JUMPI 0xd1 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xff]
---
0x40 DUP1
0x41 PUSH4 0x723de5cd
0x46 EQ
0x47 PUSH2 0xff
0x4a JUMPI
---
0x41: V15 = 0x723de5cd
0x46: V16 = EQ 0x723de5cd V11
0x47: V17 = 0xff
0x4a: JUMPI 0xff V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x135]
---
0x4b DUP1
0x4c PUSH4 0x72d209f5
0x51 EQ
0x52 PUSH2 0x135
0x55 JUMPI
---
0x4c: V18 = 0x72d209f5
0x51: V19 = EQ 0x72d209f5 V11
0x52: V20 = 0x135
0x55: JUMPI 0x135 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1a2]
---
0x56 DUP1
0x57 PUSH4 0x7f58fa14
0x5c EQ
0x5d PUSH2 0x1a2
0x60 JUMPI
---
0x57: V21 = 0x7f58fa14
0x5c: V22 = EQ 0x7f58fa14 V11
0x5d: V23 = 0x1a2
0x60: JUMPI 0x1a2 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1c9]
---
0x61 DUP1
0x62 PUSH4 0x81e8706d
0x67 EQ
0x68 PUSH2 0x1c9
0x6b JUMPI
---
0x62: V24 = 0x81e8706d
0x67: V25 = EQ 0x81e8706d V11
0x68: V26 = 0x1c9
0x6b: JUMPI 0x1c9 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1ea]
---
0x6c DUP1
0x6d PUSH4 0xa169ce09
0x72 EQ
0x73 PUSH2 0x1ea
0x76 JUMPI
---
0x6d: V27 = 0xa169ce09
0x72: V28 = EQ 0xa169ce09 V11
0x73: V29 = 0x1ea
0x76: JUMPI 0x1ea V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1ff]
---
0x77 DUP1
0x78 PUSH4 0xa4438334
0x7d EQ
0x7e PUSH2 0x1ff
0x81 JUMPI
---
0x78: V30 = 0xa4438334
0x7d: V31 = EQ 0xa4438334 V11
0x7e: V32 = 0x1ff
0x81: JUMPI 0x1ff V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x21d]
---
0x82 DUP1
0x83 PUSH4 0xadb187bb
0x88 EQ
0x89 PUSH2 0x21d
0x8c JUMPI
---
0x83: V33 = 0xadb187bb
0x88: V34 = EQ 0xadb187bb V11
0x89: V35 = 0x21d
0x8c: JUMPI 0x21d V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x28a]
---
0x8d DUP1
0x8e PUSH4 0xbc41f298
0x93 EQ
0x94 PUSH2 0x28a
0x97 JUMPI
---
0x8e: V36 = 0xbc41f298
0x93: V37 = EQ 0xbc41f298 V11
0x94: V38 = 0x28a
0x97: JUMPI 0x28a V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x2b0]
---
0x98 DUP1
0x99 PUSH4 0xc55a02a0
0x9e EQ
0x9f PUSH2 0x2b0
0xa2 JUMPI
---
0x99: V39 = 0xc55a02a0
0x9e: V40 = EQ 0xc55a02a0 V11
0x9f: V41 = 0x2b0
0xa2: JUMPI 0x2b0 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x2e1]
---
0xa3 DUP1
0xa4 PUSH4 0xc98166c0
0xa9 EQ
0xaa PUSH2 0x2e1
0xad JUMPI
---
0xa4: V42 = 0xc98166c0
0xa9: V43 = EQ 0xc98166c0 V11
0xaa: V44 = 0x2e1
0xad: JUMPI 0x2e1 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x2f6]
---
0xae DUP1
0xaf PUSH4 0xda8c229e
0xb4 EQ
0xb5 PUSH2 0x2f6
0xb8 JUMPI
---
0xaf: V45 = 0xda8c229e
0xb4: V46 = EQ 0xda8c229e V11
0xb5: V47 = 0x2f6
0xb8: JUMPI 0x2f6 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x317]
---
0xb9 DUP1
0xba PUSH4 0xebf0c717
0xbf EQ
0xc0 PUSH2 0x317
0xc3 JUMPI
---
0xba: V48 = 0xebf0c717
0xbf: V49 = EQ 0xebf0c717 V11
0xc0: V50 = 0x317
0xc3: JUMPI 0x317 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x32c]
---
0xc4 DUP1
0xc5 PUSH4 0xf77c4791
0xca EQ
0xcb PUSH2 0x32c
0xce JUMPI
---
0xc5: V51 = 0xf77c4791
0xca: V52 = EQ 0xf77c4791 V11
0xcb: V53 = 0x32c
0xce: JUMPI 0x32c V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd0]
---
Predecessors: [0x0, 0xc4, 0x586, 0x937, 0xb7c, 0xc63]
Successors: []
---
0xcf JUMPDEST
0xd0 STOP
---
0xcf: JUMPDEST 
0xd0: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0xd1
[0xd1:0xd8]
---
Predecessors: [0xd]
Successors: [0xd9, 0xdd]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 DUP1
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd1: JUMPDEST 
0xd2: V54 = CALLVALUE
0xd4: V55 = ISZERO V54
0xd5: V56 = 0xdd
0xd8: JUMPI 0xdd V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd1]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V57 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xdd
[0xdd:0xfe]
---
Predecessors: [0xd1]
Successors: [0x341]
---
0xdd JUMPDEST
0xde POP
0xdf PUSH2 0xcf
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea PUSH1 0x4
0xec CALLDATALOAD
0xed AND
0xee PUSH1 0x1
0xf0 PUSH1 0xd8
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 SUB
0xf6 NOT
0xf7 PUSH1 0x24
0xf9 CALLDATALOAD
0xfa AND
0xfb PUSH2 0x341
0xfe JUMP
---
0xdd: JUMPDEST 
0xdf: V58 = 0xcf
0xe2: V59 = 0x1
0xe4: V60 = 0xa0
0xe6: V61 = 0x2
0xe8: V62 = EXP 0x2 0xa0
0xe9: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea: V64 = 0x4
0xec: V65 = CALLDATALOAD 0x4
0xed: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xee: V67 = 0x1
0xf0: V68 = 0xd8
0xf2: V69 = 0x2
0xf4: V70 = EXP 0x2 0xd8
0xf5: V71 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xf6: V72 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xf7: V73 = 0x24
0xf9: V74 = CALLDATALOAD 0x24
0xfa: V75 = AND V74 0xffffffffff000000000000000000000000000000000000000000000000000000
0xfb: V76 = 0x341
0xfe: JUMP 0x341
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0xcf, V66, V75]
Exit stack: [V11, 0xcf, V66, V75]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0x40]
Successors: [0x107, 0x10b]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 DUP1
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0xff: JUMPDEST 
0x100: V77 = CALLVALUE
0x102: V78 = ISZERO V77
0x103: V79 = 0x10b
0x106: JUMPI 0x10b V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0xff]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V80 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x10b
[0x10b:0x120]
---
Predecessors: [0xff]
Successors: [0x5eb]
---
0x10b JUMPDEST
0x10c POP
0x10d PUSH2 0x121
0x110 PUSH1 0x1
0x112 PUSH1 0xd8
0x114 PUSH1 0x2
0x116 EXP
0x117 SUB
0x118 NOT
0x119 PUSH1 0x4
0x11b CALLDATALOAD
0x11c AND
0x11d PUSH2 0x5eb
0x120 JUMP
---
0x10b: JUMPDEST 
0x10d: V81 = 0x121
0x110: V82 = 0x1
0x112: V83 = 0xd8
0x114: V84 = 0x2
0x116: V85 = EXP 0x2 0xd8
0x117: V86 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x118: V87 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x119: V88 = 0x4
0x11b: V89 = CALLDATALOAD 0x4
0x11c: V90 = AND V89 0xffffffffff000000000000000000000000000000000000000000000000000000
0x11d: V91 = 0x5eb
0x120: JUMP 0x5eb
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x121, V90]
Exit stack: [V11, 0x121, V90]

================================

Block 0x121
[0x121:0x134]
---
Predecessors: [0x5eb, 0x9a3, 0xc3d, 0xca3]
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0x40
0x124 DUP1
0x125 MLOAD
0x126 SWAP2
0x127 ISZERO
0x128 ISZERO
0x129 DUP3
0x12a MSTORE
0x12b MLOAD
0x12c SWAP1
0x12d DUP2
0x12e SWAP1
0x12f SUB
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP1
0x134 RETURN
---
0x121: JUMPDEST 
0x122: V92 = 0x40
0x125: V93 = M[0x40]
0x127: V94 = ISZERO S0
0x128: V95 = ISZERO V94
0x12a: M[V93] = V95
0x12b: V96 = M[0x40]
0x12f: V97 = SUB V93 V96
0x130: V98 = 0x20
0x132: V99 = ADD 0x20 V97
0x134: RETURN V96 V99
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x4b]
Successors: [0x13d, 0x141]
---
0x135 JUMPDEST
0x136 CALLVALUE
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x135: JUMPDEST 
0x136: V100 = CALLVALUE
0x138: V101 = ISZERO V100
0x139: V102 = 0x141
0x13c: JUMPI 0x141 V101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V100]
Exit stack: [V11, V100]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x135]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V103 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V11, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V100]

================================

Block 0x141
[0x141:0x1a1]
---
Predecessors: [0x135]
Successors: [0x600]
---
0x141 JUMPDEST
0x142 POP
0x143 PUSH1 0x40
0x145 DUP1
0x146 MLOAD
0x147 PUSH1 0x20
0x149 PUSH1 0x4
0x14b DUP1
0x14c CALLDATALOAD
0x14d DUP1
0x14e DUP3
0x14f ADD
0x150 CALLDATALOAD
0x151 DUP4
0x152 DUP2
0x153 MUL
0x154 DUP1
0x155 DUP7
0x156 ADD
0x157 DUP6
0x158 ADD
0x159 SWAP1
0x15a SWAP7
0x15b MSTORE
0x15c DUP1
0x15d DUP6
0x15e MSTORE
0x15f PUSH2 0xcf
0x162 SWAP6
0x163 CALLDATASIZE
0x164 SWAP6
0x165 SWAP4
0x166 SWAP5
0x167 PUSH1 0x24
0x169 SWAP5
0x16a SWAP4
0x16b DUP6
0x16c ADD
0x16d SWAP3
0x16e SWAP2
0x16f DUP3
0x170 SWAP2
0x171 DUP6
0x172 ADD
0x173 SWAP1
0x174 DUP5
0x175 SWAP1
0x176 DUP1
0x177 DUP3
0x178 DUP5
0x179 CALLDATACOPY
0x17a POP
0x17b SWAP5
0x17c SWAP8
0x17d POP
0x17e POP
0x17f POP
0x180 DUP4
0x181 CALLDATALOAD
0x182 PUSH1 0x1
0x184 PUSH1 0xd8
0x186 PUSH1 0x2
0x188 EXP
0x189 SUB
0x18a NOT
0x18b AND
0x18c SWAP5
0x18d POP
0x18e POP
0x18f POP
0x190 POP
0x191 PUSH1 0x20
0x193 ADD
0x194 CALLDATALOAD
0x195 PUSH1 0x1
0x197 PUSH1 0xa0
0x199 PUSH1 0x2
0x19b EXP
0x19c SUB
0x19d AND
0x19e PUSH2 0x600
0x1a1 JUMP
---
0x141: JUMPDEST 
0x143: V104 = 0x40
0x146: V105 = M[0x40]
0x147: V106 = 0x20
0x149: V107 = 0x4
0x14c: V108 = CALLDATALOAD 0x4
0x14f: V109 = ADD 0x4 V108
0x150: V110 = CALLDATALOAD V109
0x153: V111 = MUL V110 0x20
0x156: V112 = ADD V105 V111
0x158: V113 = ADD 0x20 V112
0x15b: M[0x40] = V113
0x15e: M[V105] = V110
0x15f: V114 = 0xcf
0x163: V115 = CALLDATASIZE
0x167: V116 = 0x24
0x16c: V117 = ADD 0x24 V108
0x172: V118 = ADD V105 0x20
0x179: CALLDATACOPY V118 V117 V111
0x181: V119 = CALLDATALOAD 0x24
0x182: V120 = 0x1
0x184: V121 = 0xd8
0x186: V122 = 0x2
0x188: V123 = EXP 0x2 0xd8
0x189: V124 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x18a: V125 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x18b: V126 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V119
0x191: V127 = 0x20
0x193: V128 = ADD 0x20 0x24
0x194: V129 = CALLDATALOAD 0x44
0x195: V130 = 0x1
0x197: V131 = 0xa0
0x199: V132 = 0x2
0x19b: V133 = EXP 0x2 0xa0
0x19c: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19d: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x19e: V136 = 0x600
0x1a1: JUMP 0x600
---
Entry stack: [V11, V100]
Stack pops: 1
Stack additions: [0xcf, V105, V126, V135]
Exit stack: [V11, 0xcf, V105, V126, V135]

================================

Block 0x1a2
[0x1a2:0x1a9]
---
Predecessors: [0x56]
Successors: [0x1aa, 0x1ae]
---
0x1a2 JUMPDEST
0x1a3 CALLVALUE
0x1a4 DUP1
0x1a5 ISZERO
0x1a6 PUSH2 0x1ae
0x1a9 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V137 = CALLVALUE
0x1a5: V138 = ISZERO V137
0x1a6: V139 = 0x1ae
0x1a9: JUMPI 0x1ae V138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V137]
Exit stack: [V11, V137]

================================

Block 0x1aa
[0x1aa:0x1ad]
---
Predecessors: [0x1a2]
Successors: []
---
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad REVERT
---
0x1aa: V140 = 0x0
0x1ad: REVERT 0x0 0x0
---
Entry stack: [V11, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V137]

================================

Block 0x1ae
[0x1ae:0x1b6]
---
Predecessors: [0x1a2]
Successors: [0x99d]
---
0x1ae JUMPDEST
0x1af POP
0x1b0 PUSH2 0x1b7
0x1b3 PUSH2 0x99d
0x1b6 JUMP
---
0x1ae: JUMPDEST 
0x1b0: V141 = 0x1b7
0x1b3: V142 = 0x99d
0x1b6: JUMP 0x99d
---
Entry stack: [V11, V137]
Stack pops: 1
Stack additions: [0x1b7]
Exit stack: [V11, 0x1b7]

================================

Block 0x1b7
[0x1b7:0x1c8]
---
Predecessors: [0x99d, 0xc9d, 0xcb8]
Successors: []
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba DUP1
0x1bb MLOAD
0x1bc SWAP2
0x1bd DUP3
0x1be MSTORE
0x1bf MLOAD
0x1c0 SWAP1
0x1c1 DUP2
0x1c2 SWAP1
0x1c3 SUB
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 RETURN
---
0x1b7: JUMPDEST 
0x1b8: V143 = 0x40
0x1bb: V144 = M[0x40]
0x1be: M[V144] = S0
0x1bf: V145 = M[0x40]
0x1c3: V146 = SUB V144 V145
0x1c4: V147 = 0x20
0x1c6: V148 = ADD 0x20 V146
0x1c8: RETURN V145 V148
---
Entry stack: [V11, 0x1b7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1b7]

================================

Block 0x1c9
[0x1c9:0x1d0]
---
Predecessors: [0x61]
Successors: [0x1d1, 0x1d5]
---
0x1c9 JUMPDEST
0x1ca CALLVALUE
0x1cb DUP1
0x1cc ISZERO
0x1cd PUSH2 0x1d5
0x1d0 JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V149 = CALLVALUE
0x1cc: V150 = ISZERO V149
0x1cd: V151 = 0x1d5
0x1d0: JUMPI 0x1d5 V150
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V11, V149]

================================

Block 0x1d1
[0x1d1:0x1d4]
---
Predecessors: [0x1c9]
Successors: []
---
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 REVERT
---
0x1d1: V152 = 0x0
0x1d4: REVERT 0x0 0x0
---
Entry stack: [V11, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V149]

================================

Block 0x1d5
[0x1d5:0x1e9]
---
Predecessors: [0x1c9]
Successors: [0x9a3]
---
0x1d5 JUMPDEST
0x1d6 POP
0x1d7 PUSH2 0x121
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 PUSH1 0x4
0x1e4 CALLDATALOAD
0x1e5 AND
0x1e6 PUSH2 0x9a3
0x1e9 JUMP
---
0x1d5: JUMPDEST 
0x1d7: V153 = 0x121
0x1da: V154 = 0x1
0x1dc: V155 = 0xa0
0x1de: V156 = 0x2
0x1e0: V157 = EXP 0x2 0xa0
0x1e1: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V159 = 0x4
0x1e4: V160 = CALLDATALOAD 0x4
0x1e5: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V162 = 0x9a3
0x1e9: JUMP 0x9a3
---
Entry stack: [V11, V149]
Stack pops: 1
Stack additions: [0x121, V161]
Exit stack: [V11, 0x121, V161]

================================

Block 0x1ea
[0x1ea:0x1f1]
---
Predecessors: [0x6c]
Successors: [0x1f2, 0x1f6]
---
0x1ea JUMPDEST
0x1eb CALLVALUE
0x1ec DUP1
0x1ed ISZERO
0x1ee PUSH2 0x1f6
0x1f1 JUMPI
---
0x1ea: JUMPDEST 
0x1eb: V163 = CALLVALUE
0x1ed: V164 = ISZERO V163
0x1ee: V165 = 0x1f6
0x1f1: JUMPI 0x1f6 V164
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V163]
Exit stack: [V11, V163]

================================

Block 0x1f2
[0x1f2:0x1f5]
---
Predecessors: [0x1ea]
Successors: []
---
0x1f2 PUSH1 0x0
0x1f4 DUP1
0x1f5 REVERT
---
0x1f2: V166 = 0x0
0x1f5: REVERT 0x0 0x0
---
Entry stack: [V11, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V163]

================================

Block 0x1f6
[0x1f6:0x1fe]
---
Predecessors: [0x1ea]
Successors: [0x9b8]
---
0x1f6 JUMPDEST
0x1f7 POP
0x1f8 PUSH2 0xcf
0x1fb PUSH2 0x9b8
0x1fe JUMP
---
0x1f6: JUMPDEST 
0x1f8: V167 = 0xcf
0x1fb: V168 = 0x9b8
0x1fe: JUMP 0x9b8
---
Entry stack: [V11, V163]
Stack pops: 1
Stack additions: [0xcf]
Exit stack: [V11, 0xcf]

================================

Block 0x1ff
[0x1ff:0x206]
---
Predecessors: [0x77]
Successors: [0x207, 0x20b]
---
0x1ff JUMPDEST
0x200 CALLVALUE
0x201 DUP1
0x202 ISZERO
0x203 PUSH2 0x20b
0x206 JUMPI
---
0x1ff: JUMPDEST 
0x200: V169 = CALLVALUE
0x202: V170 = ISZERO V169
0x203: V171 = 0x20b
0x206: JUMPI 0x20b V170
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V169]
Exit stack: [V11, V169]

================================

Block 0x207
[0x207:0x20a]
---
Predecessors: [0x1ff]
Successors: []
---
0x207 PUSH1 0x0
0x209 DUP1
0x20a REVERT
---
0x207: V172 = 0x0
0x20a: REVERT 0x0 0x0
---
Entry stack: [V11, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V169]

================================

Block 0x20b
[0x20b:0x21c]
---
Predecessors: [0x1ff]
Successors: [0xb5e]
---
0x20b JUMPDEST
0x20c POP
0x20d PUSH2 0xcf
0x210 PUSH1 0x4
0x212 CALLDATALOAD
0x213 PUSH1 0x24
0x215 CALLDATALOAD
0x216 PUSH1 0x44
0x218 CALLDATALOAD
0x219 PUSH2 0xb5e
0x21c JUMP
---
0x20b: JUMPDEST 
0x20d: V173 = 0xcf
0x210: V174 = 0x4
0x212: V175 = CALLDATALOAD 0x4
0x213: V176 = 0x24
0x215: V177 = CALLDATALOAD 0x24
0x216: V178 = 0x44
0x218: V179 = CALLDATALOAD 0x44
0x219: V180 = 0xb5e
0x21c: JUMP 0xb5e
---
Entry stack: [V11, V169]
Stack pops: 1
Stack additions: [0xcf, V175, V177, V179]
Exit stack: [V11, 0xcf, V175, V177, V179]

================================

Block 0x21d
[0x21d:0x224]
---
Predecessors: [0x82]
Successors: [0x225, 0x229]
---
0x21d JUMPDEST
0x21e CALLVALUE
0x21f DUP1
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x21d: JUMPDEST 
0x21e: V181 = CALLVALUE
0x220: V182 = ISZERO V181
0x221: V183 = 0x229
0x224: JUMPI 0x229 V182
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V181]
Exit stack: [V11, V181]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x21d]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V184 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V11, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V181]

================================

Block 0x229
[0x229:0x289]
---
Predecessors: [0x21d]
Successors: [0xb8a]
---
0x229 JUMPDEST
0x22a POP
0x22b PUSH1 0x40
0x22d DUP1
0x22e MLOAD
0x22f PUSH1 0x20
0x231 PUSH1 0x4
0x233 DUP1
0x234 CALLDATALOAD
0x235 DUP1
0x236 DUP3
0x237 ADD
0x238 CALLDATALOAD
0x239 DUP4
0x23a DUP2
0x23b MUL
0x23c DUP1
0x23d DUP7
0x23e ADD
0x23f DUP6
0x240 ADD
0x241 SWAP1
0x242 SWAP7
0x243 MSTORE
0x244 DUP1
0x245 DUP6
0x246 MSTORE
0x247 PUSH2 0x121
0x24a SWAP6
0x24b CALLDATASIZE
0x24c SWAP6
0x24d SWAP4
0x24e SWAP5
0x24f PUSH1 0x24
0x251 SWAP5
0x252 SWAP4
0x253 DUP6
0x254 ADD
0x255 SWAP3
0x256 SWAP2
0x257 DUP3
0x258 SWAP2
0x259 DUP6
0x25a ADD
0x25b SWAP1
0x25c DUP5
0x25d SWAP1
0x25e DUP1
0x25f DUP3
0x260 DUP5
0x261 CALLDATACOPY
0x262 POP
0x263 SWAP5
0x264 SWAP8
0x265 POP
0x266 POP
0x267 POP
0x268 DUP4
0x269 CALLDATALOAD
0x26a PUSH1 0x1
0x26c PUSH1 0xd8
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 NOT
0x273 AND
0x274 SWAP5
0x275 POP
0x276 POP
0x277 POP
0x278 POP
0x279 PUSH1 0x20
0x27b ADD
0x27c CALLDATALOAD
0x27d PUSH1 0x1
0x27f PUSH1 0xa0
0x281 PUSH1 0x2
0x283 EXP
0x284 SUB
0x285 AND
0x286 PUSH2 0xb8a
0x289 JUMP
---
0x229: JUMPDEST 
0x22b: V185 = 0x40
0x22e: V186 = M[0x40]
0x22f: V187 = 0x20
0x231: V188 = 0x4
0x234: V189 = CALLDATALOAD 0x4
0x237: V190 = ADD 0x4 V189
0x238: V191 = CALLDATALOAD V190
0x23b: V192 = MUL V191 0x20
0x23e: V193 = ADD V186 V192
0x240: V194 = ADD 0x20 V193
0x243: M[0x40] = V194
0x246: M[V186] = V191
0x247: V195 = 0x121
0x24b: V196 = CALLDATASIZE
0x24f: V197 = 0x24
0x254: V198 = ADD 0x24 V189
0x25a: V199 = ADD V186 0x20
0x261: CALLDATACOPY V199 V198 V192
0x269: V200 = CALLDATALOAD 0x24
0x26a: V201 = 0x1
0x26c: V202 = 0xd8
0x26e: V203 = 0x2
0x270: V204 = EXP 0x2 0xd8
0x271: V205 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x272: V206 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x273: V207 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V200
0x279: V208 = 0x20
0x27b: V209 = ADD 0x20 0x24
0x27c: V210 = CALLDATALOAD 0x44
0x27d: V211 = 0x1
0x27f: V212 = 0xa0
0x281: V213 = 0x2
0x283: V214 = EXP 0x2 0xa0
0x284: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x285: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x286: V217 = 0xb8a
0x289: JUMP 0xb8a
---
Entry stack: [V11, V181]
Stack pops: 1
Stack additions: [0x121, V186, V207, V216]
Exit stack: [V11, 0x121, V186, V207, V216]

================================

Block 0x28a
[0x28a:0x291]
---
Predecessors: [0x8d]
Successors: [0x292, 0x296]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c DUP1
0x28d ISZERO
0x28e PUSH2 0x296
0x291 JUMPI
---
0x28a: JUMPDEST 
0x28b: V218 = CALLVALUE
0x28d: V219 = ISZERO V218
0x28e: V220 = 0x296
0x291: JUMPI 0x296 V219
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V218]
Exit stack: [V11, V218]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x28a]
Successors: []
---
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x292: V221 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V11, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V218]

================================

Block 0x296
[0x296:0x2af]
---
Predecessors: [0x28a]
Successors: [0xc45]
---
0x296 JUMPDEST
0x297 POP
0x298 PUSH2 0xcf
0x29b PUSH1 0x1
0x29d PUSH1 0xa0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 SUB
0x2a3 PUSH1 0x4
0x2a5 CALLDATALOAD
0x2a6 AND
0x2a7 PUSH1 0x24
0x2a9 CALLDATALOAD
0x2aa ISZERO
0x2ab ISZERO
0x2ac PUSH2 0xc45
0x2af JUMP
---
0x296: JUMPDEST 
0x298: V222 = 0xcf
0x29b: V223 = 0x1
0x29d: V224 = 0xa0
0x29f: V225 = 0x2
0x2a1: V226 = EXP 0x2 0xa0
0x2a2: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V228 = 0x4
0x2a5: V229 = CALLDATALOAD 0x4
0x2a6: V230 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V231 = 0x24
0x2a9: V232 = CALLDATALOAD 0x24
0x2aa: V233 = ISZERO V232
0x2ab: V234 = ISZERO V233
0x2ac: V235 = 0xc45
0x2af: JUMP 0xc45
---
Entry stack: [V11, V218]
Stack pops: 1
Stack additions: [0xcf, V230, V234]
Exit stack: [V11, 0xcf, V230, V234]

================================

Block 0x2b0
[0x2b0:0x2b7]
---
Predecessors: [0x98]
Successors: [0x2b8, 0x2bc]
---
0x2b0 JUMPDEST
0x2b1 CALLVALUE
0x2b2 DUP1
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V236 = CALLVALUE
0x2b3: V237 = ISZERO V236
0x2b4: V238 = 0x2bc
0x2b7: JUMPI 0x2bc V237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V236]
Exit stack: [V11, V236]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2b0]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V239 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V11, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V236]

================================

Block 0x2bc
[0x2bc:0x2c4]
---
Predecessors: [0x2b0]
Successors: [0xc8e]
---
0x2bc JUMPDEST
0x2bd POP
0x2be PUSH2 0x2c5
0x2c1 PUSH2 0xc8e
0x2c4 JUMP
---
0x2bc: JUMPDEST 
0x2be: V240 = 0x2c5
0x2c1: V241 = 0xc8e
0x2c4: JUMP 0xc8e
---
Entry stack: [V11, V236]
Stack pops: 1
Stack additions: [0x2c5]
Exit stack: [V11, 0x2c5]

================================

Block 0x2c5
[0x2c5:0x2e0]
---
Predecessors: [0xc8e, 0xcbe]
Successors: []
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x40
0x2c8 DUP1
0x2c9 MLOAD
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 SWAP1
0x2d3 SWAP3
0x2d4 AND
0x2d5 DUP3
0x2d6 MSTORE
0x2d7 MLOAD
0x2d8 SWAP1
0x2d9 DUP2
0x2da SWAP1
0x2db SUB
0x2dc PUSH1 0x20
0x2de ADD
0x2df SWAP1
0x2e0 RETURN
---
0x2c5: JUMPDEST 
0x2c6: V242 = 0x40
0x2c9: V243 = M[0x40]
0x2ca: V244 = 0x1
0x2cc: V245 = 0xa0
0x2ce: V246 = 0x2
0x2d0: V247 = EXP 0x2 0xa0
0x2d1: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d4: V249 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: M[V243] = V249
0x2d7: V250 = M[0x40]
0x2db: V251 = SUB V243 V250
0x2dc: V252 = 0x20
0x2de: V253 = ADD 0x20 V251
0x2e0: RETURN V250 V253
---
Entry stack: [V11, 0x2c5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2c5]

================================

Block 0x2e1
[0x2e1:0x2e8]
---
Predecessors: [0xa3]
Successors: [0x2e9, 0x2ed]
---
0x2e1 JUMPDEST
0x2e2 CALLVALUE
0x2e3 DUP1
0x2e4 ISZERO
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V254 = CALLVALUE
0x2e4: V255 = ISZERO V254
0x2e5: V256 = 0x2ed
0x2e8: JUMPI 0x2ed V255
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V254]
Exit stack: [V11, V254]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2e1]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V257 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V11, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V254]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2e1]
Successors: [0xc9d]
---
0x2ed JUMPDEST
0x2ee POP
0x2ef PUSH2 0x1b7
0x2f2 PUSH2 0xc9d
0x2f5 JUMP
---
0x2ed: JUMPDEST 
0x2ef: V258 = 0x1b7
0x2f2: V259 = 0xc9d
0x2f5: JUMP 0xc9d
---
Entry stack: [V11, V254]
Stack pops: 1
Stack additions: [0x1b7]
Exit stack: [V11, 0x1b7]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0xae]
Successors: [0x2fe, 0x302]
---
0x2f6 JUMPDEST
0x2f7 CALLVALUE
0x2f8 DUP1
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2f6: JUMPDEST 
0x2f7: V260 = CALLVALUE
0x2f9: V261 = ISZERO V260
0x2fa: V262 = 0x302
0x2fd: JUMPI 0x302 V261
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V260]
Exit stack: [V11, V260]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2f6]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V263 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V11, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V260]

================================

Block 0x302
[0x302:0x316]
---
Predecessors: [0x2f6]
Successors: [0xca3]
---
0x302 JUMPDEST
0x303 POP
0x304 PUSH2 0x121
0x307 PUSH1 0x1
0x309 PUSH1 0xa0
0x30b PUSH1 0x2
0x30d EXP
0x30e SUB
0x30f PUSH1 0x4
0x311 CALLDATALOAD
0x312 AND
0x313 PUSH2 0xca3
0x316 JUMP
---
0x302: JUMPDEST 
0x304: V264 = 0x121
0x307: V265 = 0x1
0x309: V266 = 0xa0
0x30b: V267 = 0x2
0x30d: V268 = EXP 0x2 0xa0
0x30e: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V270 = 0x4
0x311: V271 = CALLDATALOAD 0x4
0x312: V272 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x313: V273 = 0xca3
0x316: JUMP 0xca3
---
Entry stack: [V11, V260]
Stack pops: 1
Stack additions: [0x121, V272]
Exit stack: [V11, 0x121, V272]

================================

Block 0x317
[0x317:0x31e]
---
Predecessors: [0xb9]
Successors: [0x31f, 0x323]
---
0x317 JUMPDEST
0x318 CALLVALUE
0x319 DUP1
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x317: JUMPDEST 
0x318: V274 = CALLVALUE
0x31a: V275 = ISZERO V274
0x31b: V276 = 0x323
0x31e: JUMPI 0x323 V275
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V274]
Exit stack: [V11, V274]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x317]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V277 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V11, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V274]

================================

Block 0x323
[0x323:0x32b]
---
Predecessors: [0x317]
Successors: [0xcb8]
---
0x323 JUMPDEST
0x324 POP
0x325 PUSH2 0x1b7
0x328 PUSH2 0xcb8
0x32b JUMP
---
0x323: JUMPDEST 
0x325: V278 = 0x1b7
0x328: V279 = 0xcb8
0x32b: JUMP 0xcb8
---
Entry stack: [V11, V274]
Stack pops: 1
Stack additions: [0x1b7]
Exit stack: [V11, 0x1b7]

================================

Block 0x32c
[0x32c:0x333]
---
Predecessors: [0xc4]
Successors: [0x334, 0x338]
---
0x32c JUMPDEST
0x32d CALLVALUE
0x32e DUP1
0x32f ISZERO
0x330 PUSH2 0x338
0x333 JUMPI
---
0x32c: JUMPDEST 
0x32d: V280 = CALLVALUE
0x32f: V281 = ISZERO V280
0x330: V282 = 0x338
0x333: JUMPI 0x338 V281
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V280]
Exit stack: [V11, V280]

================================

Block 0x334
[0x334:0x337]
---
Predecessors: [0x32c]
Successors: []
---
0x334 PUSH1 0x0
0x336 DUP1
0x337 REVERT
---
0x334: V283 = 0x0
0x337: REVERT 0x0 0x0
---
Entry stack: [V11, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V280]

================================

Block 0x338
[0x338:0x340]
---
Predecessors: [0x32c]
Successors: [0xcbe]
---
0x338 JUMPDEST
0x339 POP
0x33a PUSH2 0x2c5
0x33d PUSH2 0xcbe
0x340 JUMP
---
0x338: JUMPDEST 
0x33a: V284 = 0x2c5
0x33d: V285 = 0xcbe
0x340: JUMP 0xcbe
---
Entry stack: [V11, V280]
Stack pops: 1
Stack additions: [0x2c5]
Exit stack: [V11, 0x2c5]

================================

Block 0x341
[0x341:0x35a]
---
Predecessors: [0xdd]
Successors: [0x35b, 0x35f]
---
0x341 JUMPDEST
0x342 CALLER
0x343 PUSH1 0x0
0x345 SWAP1
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x20
0x34a DUP2
0x34b SWAP1
0x34c MSTORE
0x34d PUSH1 0x40
0x34f SWAP1
0x350 SHA3
0x351 SLOAD
0x352 PUSH1 0xff
0x354 AND
0x355 ISZERO
0x356 ISZERO
0x357 PUSH2 0x35f
0x35a JUMPI
---
0x341: JUMPDEST 
0x342: V286 = CALLER
0x343: V287 = 0x0
0x347: M[0x0] = V286
0x348: V288 = 0x20
0x34c: M[0x20] = 0x0
0x34d: V289 = 0x40
0x350: V290 = SHA3 0x0 0x40
0x351: V291 = S[V290]
0x352: V292 = 0xff
0x354: V293 = AND 0xff V291
0x355: V294 = ISZERO V293
0x356: V295 = ISZERO V294
0x357: V296 = 0x35f
0x35a: JUMPI 0x35f V295
---
Entry stack: [V11, 0xcf, V66, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75]

================================

Block 0x35b
[0x35b:0x35e]
---
Predecessors: [0x341]
Successors: []
---
0x35b PUSH1 0x0
0x35d DUP1
0x35e REVERT
---
0x35b: V297 = 0x0
0x35e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V66, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75]

================================

Block 0x35f
[0x35f:0x382]
---
Predecessors: [0x341]
Successors: [0x383, 0x3a2]
---
0x35f JUMPDEST
0x360 PUSH1 0x1
0x362 PUSH1 0xa0
0x364 PUSH1 0x2
0x366 EXP
0x367 SUB
0x368 DUP3
0x369 AND
0x36a PUSH1 0x0
0x36c SWAP1
0x36d DUP2
0x36e MSTORE
0x36f PUSH1 0x2
0x371 PUSH1 0x20
0x373 MSTORE
0x374 PUSH1 0x40
0x376 SWAP1
0x377 SHA3
0x378 SLOAD
0x379 PUSH1 0xff
0x37b AND
0x37c ISZERO
0x37d DUP1
0x37e ISZERO
0x37f PUSH2 0x3a2
0x382 JUMPI
---
0x35f: JUMPDEST 
0x360: V298 = 0x1
0x362: V299 = 0xa0
0x364: V300 = 0x2
0x366: V301 = EXP 0x2 0xa0
0x367: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x369: V303 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V304 = 0x0
0x36e: M[0x0] = V303
0x36f: V305 = 0x2
0x371: V306 = 0x20
0x373: M[0x20] = 0x2
0x374: V307 = 0x40
0x377: V308 = SHA3 0x0 0x40
0x378: V309 = S[V308]
0x379: V310 = 0xff
0x37b: V311 = AND 0xff V309
0x37c: V312 = ISZERO V311
0x37e: V313 = ISZERO V312
0x37f: V314 = 0x3a2
0x382: JUMPI 0x3a2 V313
---
Entry stack: [V11, 0xcf, V66, V75]
Stack pops: 2
Stack additions: [S1, S0, V312]
Exit stack: [V11, 0xcf, V66, V75, V312]

================================

Block 0x383
[0x383:0x3a1]
---
Predecessors: [0x35f]
Successors: [0x3a2]
---
0x383 POP
0x384 PUSH1 0x1
0x386 PUSH1 0xd8
0x388 PUSH1 0x2
0x38a EXP
0x38b SUB
0x38c NOT
0x38d DUP2
0x38e AND
0x38f PUSH1 0x0
0x391 SWAP1
0x392 DUP2
0x393 MSTORE
0x394 PUSH1 0x3
0x396 PUSH1 0x20
0x398 MSTORE
0x399 PUSH1 0x40
0x39b SWAP1
0x39c SHA3
0x39d SLOAD
0x39e PUSH1 0xff
0x3a0 AND
0x3a1 ISZERO
---
0x384: V315 = 0x1
0x386: V316 = 0xd8
0x388: V317 = 0x2
0x38a: V318 = EXP 0x2 0xd8
0x38b: V319 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x38c: V320 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x38e: V321 = AND V75 0xffffffffff000000000000000000000000000000000000000000000000000000
0x38f: V322 = 0x0
0x393: M[0x0] = V321
0x394: V323 = 0x3
0x396: V324 = 0x20
0x398: M[0x20] = 0x3
0x399: V325 = 0x40
0x39c: V326 = SHA3 0x0 0x40
0x39d: V327 = S[V326]
0x39e: V328 = 0xff
0x3a0: V329 = AND 0xff V327
0x3a1: V330 = ISZERO V329
---
Entry stack: [V11, 0xcf, V66, V75, V312]
Stack pops: 2
Stack additions: [S1, V330]
Exit stack: [V11, 0xcf, V66, V75, V330]

================================

Block 0x3a2
[0x3a2:0x3a8]
---
Predecessors: [0x35f, 0x383]
Successors: [0x3a9, 0x41e]
---
0x3a2 JUMPDEST
0x3a3 ISZERO
0x3a4 ISZERO
0x3a5 PUSH2 0x41e
0x3a8 JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V331 = ISZERO S0
0x3a4: V332 = ISZERO V331
0x3a5: V333 = 0x41e
0x3a8: JUMPI 0x41e V332
---
Entry stack: [V11, 0xcf, V66, V75, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75]

================================

Block 0x3a9
[0x3a9:0x41d]
---
Predecessors: [0x3a2]
Successors: []
---
0x3a9 PUSH1 0x40
0x3ab DUP1
0x3ac MLOAD
0x3ad PUSH1 0xe5
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 PUSH3 0x461bcd
0x3b6 MUL
0x3b7 DUP2
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb PUSH1 0x4
0x3bd DUP3
0x3be ADD
0x3bf MSTORE
0x3c0 PUSH1 0x26
0x3c2 PUSH1 0x24
0x3c4 DUP3
0x3c5 ADD
0x3c6 MSTORE
0x3c7 PUSH32 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x3e8 PUSH1 0x44
0x3ea DUP3
0x3eb ADD
0x3ec MSTORE
0x3ed PUSH32 0x7920757365640000000000000000000000000000000000000000000000000000
0x40e PUSH1 0x64
0x410 DUP3
0x411 ADD
0x412 MSTORE
0x413 SWAP1
0x414 MLOAD
0x415 SWAP1
0x416 DUP2
0x417 SWAP1
0x418 SUB
0x419 PUSH1 0x84
0x41b ADD
0x41c SWAP1
0x41d REVERT
---
0x3a9: V334 = 0x40
0x3ac: V335 = M[0x40]
0x3ad: V336 = 0xe5
0x3af: V337 = 0x2
0x3b1: V338 = EXP 0x2 0xe5
0x3b2: V339 = 0x461bcd
0x3b6: V340 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x3b8: M[V335] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3b9: V341 = 0x20
0x3bb: V342 = 0x4
0x3be: V343 = ADD V335 0x4
0x3bf: M[V343] = 0x20
0x3c0: V344 = 0x26
0x3c2: V345 = 0x24
0x3c5: V346 = ADD V335 0x24
0x3c6: M[V346] = 0x26
0x3c7: V347 = 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x3e8: V348 = 0x44
0x3eb: V349 = ADD V335 0x44
0x3ec: M[V349] = 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x3ed: V350 = 0x7920757365640000000000000000000000000000000000000000000000000000
0x40e: V351 = 0x64
0x411: V352 = ADD V335 0x64
0x412: M[V352] = 0x7920757365640000000000000000000000000000000000000000000000000000
0x414: V353 = M[0x40]
0x418: V354 = SUB V335 V353
0x419: V355 = 0x84
0x41b: V356 = ADD 0x84 V354
0x41d: REVERT V353 V356
---
Entry stack: [V11, 0xcf, V66, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75]

================================

Block 0x41e
[0x41e:0x4c8]
---
Predecessors: [0x3a2]
Successors: [0x4c9, 0x4cd]
---
0x41e JUMPDEST
0x41f PUSH1 0x1
0x421 PUSH1 0xa0
0x423 PUSH1 0x2
0x425 EXP
0x426 SUB
0x427 DUP3
0x428 DUP2
0x429 AND
0x42a PUSH1 0x0
0x42c DUP2
0x42d DUP2
0x42e MSTORE
0x42f PUSH1 0x2
0x431 PUSH1 0x20
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x40
0x438 DUP1
0x439 DUP4
0x43a SHA3
0x43b DUP1
0x43c SLOAD
0x43d PUSH1 0x1
0x43f PUSH1 0xff
0x441 NOT
0x442 SWAP2
0x443 DUP3
0x444 AND
0x445 DUP2
0x446 OR
0x447 SWAP1
0x448 SWAP3
0x449 SSTORE
0x44a PUSH1 0x1
0x44c PUSH1 0xd8
0x44e PUSH1 0x2
0x450 EXP
0x451 SUB
0x452 NOT
0x453 DUP9
0x454 AND
0x455 DUP6
0x456 MSTORE
0x457 PUSH1 0x3
0x459 DUP5
0x45a MSTORE
0x45b DUP3
0x45c DUP6
0x45d SHA3
0x45e DUP1
0x45f SLOAD
0x460 SWAP1
0x461 SWAP2
0x462 AND
0x463 SWAP1
0x464 SWAP2
0x465 OR
0x466 SWAP1
0x467 SSTORE
0x468 PUSH1 0x4
0x46a DUP1
0x46b SLOAD
0x46c PUSH1 0x6
0x46e SLOAD
0x46f DUP4
0x470 MLOAD
0x471 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x492 DUP2
0x493 MSTORE
0x494 SWAP3
0x495 DUP4
0x496 ADD
0x497 SWAP7
0x498 SWAP1
0x499 SWAP7
0x49a MSTORE
0x49b PUSH1 0x24
0x49d DUP3
0x49e ADD
0x49f SWAP6
0x4a0 SWAP1
0x4a1 SWAP6
0x4a2 MSTORE
0x4a3 SWAP1
0x4a4 MLOAD
0x4a5 SWAP4
0x4a6 SWAP1
0x4a7 SWAP5
0x4a8 AND
0x4a9 SWAP4
0x4aa PUSH4 0xa9059cbb
0x4af SWAP4
0x4b0 PUSH1 0x44
0x4b2 DUP1
0x4b3 DUP4
0x4b4 ADD
0x4b5 SWAP5
0x4b6 SWAP2
0x4b7 SWAP3
0x4b8 DUP4
0x4b9 SWAP1
0x4ba SUB
0x4bb ADD
0x4bc SWAP1
0x4bd DUP3
0x4be SWAP1
0x4bf DUP8
0x4c0 DUP1
0x4c1 EXTCODESIZE
0x4c2 ISZERO
0x4c3 DUP1
0x4c4 ISZERO
0x4c5 PUSH2 0x4cd
0x4c8 JUMPI
---
0x41e: JUMPDEST 
0x41f: V357 = 0x1
0x421: V358 = 0xa0
0x423: V359 = 0x2
0x425: V360 = EXP 0x2 0xa0
0x426: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x42a: V363 = 0x0
0x42e: M[0x0] = V362
0x42f: V364 = 0x2
0x431: V365 = 0x20
0x435: M[0x20] = 0x2
0x436: V366 = 0x40
0x43a: V367 = SHA3 0x0 0x40
0x43c: V368 = S[V367]
0x43d: V369 = 0x1
0x43f: V370 = 0xff
0x441: V371 = NOT 0xff
0x444: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V368
0x446: V373 = OR 0x1 V372
0x449: S[V367] = V373
0x44a: V374 = 0x1
0x44c: V375 = 0xd8
0x44e: V376 = 0x2
0x450: V377 = EXP 0x2 0xd8
0x451: V378 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x452: V379 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x454: V380 = AND V75 0xffffffffff000000000000000000000000000000000000000000000000000000
0x456: M[0x0] = V380
0x457: V381 = 0x3
0x45a: M[0x20] = 0x3
0x45d: V382 = SHA3 0x0 0x40
0x45f: V383 = S[V382]
0x462: V384 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V383
0x465: V385 = OR 0x1 V384
0x467: S[V382] = V385
0x468: V386 = 0x4
0x46b: V387 = S[0x4]
0x46c: V388 = 0x6
0x46e: V389 = S[0x6]
0x470: V390 = M[0x40]
0x471: V391 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x493: M[V390] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x496: V392 = ADD V390 0x4
0x49a: M[V392] = V362
0x49b: V393 = 0x24
0x49e: V394 = ADD V390 0x24
0x4a2: M[V394] = V389
0x4a4: V395 = M[0x40]
0x4a8: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x4aa: V397 = 0xa9059cbb
0x4b0: V398 = 0x44
0x4b4: V399 = ADD V390 0x44
0x4ba: V400 = SUB V390 V395
0x4bb: V401 = ADD V400 0x44
0x4c1: V402 = EXTCODESIZE V396
0x4c2: V403 = ISZERO V402
0x4c4: V404 = ISZERO V403
0x4c5: V405 = 0x4cd
0x4c8: JUMPI 0x4cd V404
---
Entry stack: [V11, 0xcf, V66, V75]
Stack pops: 2
Stack additions: [S1, S0, V396, 0xa9059cbb, V399, 0x20, V395, V401, V395, 0x0, V396, V403]
Exit stack: [V11, 0xcf, V66, V75, V396, 0xa9059cbb, V399, 0x20, V395, V401, V395, 0x0, V396, V403]

================================

Block 0x4c9
[0x4c9:0x4cc]
---
Predecessors: [0x41e]
Successors: []
---
0x4c9 PUSH1 0x0
0x4cb DUP1
0x4cc REVERT
---
0x4c9: V406 = 0x0
0x4cc: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V66, V75, V396, 0xa9059cbb, V399, 0x20, V395, V401, V395, 0x0, V396, V403]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75, V396, 0xa9059cbb, V399, 0x20, V395, V401, V395, 0x0, V396, V403]

================================

Block 0x4cd
[0x4cd:0x4d7]
---
Predecessors: [0x41e]
Successors: [0x4d8, 0x4e1]
---
0x4cd JUMPDEST
0x4ce POP
0x4cf GAS
0x4d0 CALL
0x4d1 ISZERO
0x4d2 DUP1
0x4d3 ISZERO
0x4d4 PUSH2 0x4e1
0x4d7 JUMPI
---
0x4cd: JUMPDEST 
0x4cf: V407 = GAS
0x4d0: V408 = CALL V407 V396 0x0 V395 V401 V395 0x20
0x4d1: V409 = ISZERO V408
0x4d3: V410 = ISZERO V409
0x4d4: V411 = 0x4e1
0x4d7: JUMPI 0x4e1 V410
---
Entry stack: [V11, 0xcf, V66, V75, V396, 0xa9059cbb, V399, 0x20, V395, V401, V395, 0x0, V396, V403]
Stack pops: 7
Stack additions: [V409]
Exit stack: [V11, 0xcf, V66, V75, V396, 0xa9059cbb, V399, V409]

================================

Block 0x4d8
[0x4d8:0x4e0]
---
Predecessors: [0x4cd]
Successors: []
---
0x4d8 RETURNDATASIZE
0x4d9 PUSH1 0x0
0x4db DUP1
0x4dc RETURNDATACOPY
0x4dd RETURNDATASIZE
0x4de PUSH1 0x0
0x4e0 REVERT
---
0x4d8: V412 = RETURNDATASIZE
0x4d9: V413 = 0x0
0x4dc: RETURNDATACOPY 0x0 0x0 V412
0x4dd: V414 = RETURNDATASIZE
0x4de: V415 = 0x0
0x4e0: REVERT 0x0 V414
---
Entry stack: [V11, 0xcf, V66, V75, V396, 0xa9059cbb, V399, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75, V396, 0xa9059cbb, V399, V409]

================================

Block 0x4e1
[0x4e1:0x4f2]
---
Predecessors: [0x4cd]
Successors: [0x4f3, 0x4f7]
---
0x4e1 JUMPDEST
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 POP
0x4e6 PUSH1 0x40
0x4e8 MLOAD
0x4e9 RETURNDATASIZE
0x4ea PUSH1 0x20
0x4ec DUP2
0x4ed LT
0x4ee ISZERO
0x4ef PUSH2 0x4f7
0x4f2 JUMPI
---
0x4e1: JUMPDEST 
0x4e6: V416 = 0x40
0x4e8: V417 = M[0x40]
0x4e9: V418 = RETURNDATASIZE
0x4ea: V419 = 0x20
0x4ed: V420 = LT V418 0x20
0x4ee: V421 = ISZERO V420
0x4ef: V422 = 0x4f7
0x4f2: JUMPI 0x4f7 V421
---
Entry stack: [V11, 0xcf, V66, V75, V396, 0xa9059cbb, V399, V409]
Stack pops: 4
Stack additions: [V417, V418]
Exit stack: [V11, 0xcf, V66, V75, V417, V418]

================================

Block 0x4f3
[0x4f3:0x4f6]
---
Predecessors: [0x4e1]
Successors: []
---
0x4f3 PUSH1 0x0
0x4f5 DUP1
0x4f6 REVERT
---
0x4f3: V423 = 0x0
0x4f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V66, V75, V417, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75, V417, V418]

================================

Block 0x4f7
[0x4f7:0x4ff]
---
Predecessors: [0x4e1]
Successors: [0x500, 0x54f]
---
0x4f7 JUMPDEST
0x4f8 POP
0x4f9 MLOAD
0x4fa ISZERO
0x4fb ISZERO
0x4fc PUSH2 0x54f
0x4ff JUMPI
---
0x4f7: JUMPDEST 
0x4f9: V424 = M[V417]
0x4fa: V425 = ISZERO V424
0x4fb: V426 = ISZERO V425
0x4fc: V427 = 0x54f
0x4ff: JUMPI 0x54f V426
---
Entry stack: [V11, 0xcf, V66, V75, V417, V418]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75]

================================

Block 0x500
[0x500:0x54e]
---
Predecessors: [0x4f7]
Successors: []
---
0x500 PUSH1 0x40
0x502 DUP1
0x503 MLOAD
0x504 PUSH1 0xe5
0x506 PUSH1 0x2
0x508 EXP
0x509 PUSH3 0x461bcd
0x50d MUL
0x50e DUP2
0x50f MSTORE
0x510 PUSH1 0x20
0x512 PUSH1 0x4
0x514 DUP3
0x515 ADD
0x516 MSTORE
0x517 PUSH1 0x15
0x519 PUSH1 0x24
0x51b DUP3
0x51c ADD
0x51d MSTORE
0x51e PUSH32 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x53f PUSH1 0x44
0x541 DUP3
0x542 ADD
0x543 MSTORE
0x544 SWAP1
0x545 MLOAD
0x546 SWAP1
0x547 DUP2
0x548 SWAP1
0x549 SUB
0x54a PUSH1 0x64
0x54c ADD
0x54d SWAP1
0x54e REVERT
---
0x500: V428 = 0x40
0x503: V429 = M[0x40]
0x504: V430 = 0xe5
0x506: V431 = 0x2
0x508: V432 = EXP 0x2 0xe5
0x509: V433 = 0x461bcd
0x50d: V434 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x50f: M[V429] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x510: V435 = 0x20
0x512: V436 = 0x4
0x515: V437 = ADD V429 0x4
0x516: M[V437] = 0x20
0x517: V438 = 0x15
0x519: V439 = 0x24
0x51c: V440 = ADD V429 0x24
0x51d: M[V440] = 0x15
0x51e: V441 = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x53f: V442 = 0x44
0x542: V443 = ADD V429 0x44
0x543: M[V443] = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x545: V444 = M[0x40]
0x549: V445 = SUB V429 V444
0x54a: V446 = 0x64
0x54c: V447 = ADD 0x64 V445
0x54e: REVERT V444 V447
---
Entry stack: [V11, 0xcf, V66, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75]

================================

Block 0x54f
[0x54f:0x57c]
---
Predecessors: [0x4f7]
Successors: [0x57d, 0x586]
---
0x54f JUMPDEST
0x550 PUSH1 0x5
0x552 SLOAD
0x553 PUSH1 0x40
0x555 MLOAD
0x556 PUSH1 0x1
0x558 PUSH1 0xa0
0x55a PUSH1 0x2
0x55c EXP
0x55d SUB
0x55e DUP5
0x55f AND
0x560 SWAP2
0x561 DUP1
0x562 ISZERO
0x563 PUSH2 0x8fc
0x566 MUL
0x567 SWAP2
0x568 PUSH1 0x0
0x56a DUP2
0x56b DUP2
0x56c DUP2
0x56d DUP6
0x56e DUP9
0x56f DUP9
0x570 CALL
0x571 SWAP4
0x572 POP
0x573 POP
0x574 POP
0x575 POP
0x576 ISZERO
0x577 DUP1
0x578 ISZERO
0x579 PUSH2 0x586
0x57c JUMPI
---
0x54f: JUMPDEST 
0x550: V448 = 0x5
0x552: V449 = S[0x5]
0x553: V450 = 0x40
0x555: V451 = M[0x40]
0x556: V452 = 0x1
0x558: V453 = 0xa0
0x55a: V454 = 0x2
0x55c: V455 = EXP 0x2 0xa0
0x55d: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V457 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x562: V458 = ISZERO V449
0x563: V459 = 0x8fc
0x566: V460 = MUL 0x8fc V458
0x568: V461 = 0x0
0x570: V462 = CALL V460 V457 V449 V451 0x0 V451 0x0
0x576: V463 = ISZERO V462
0x578: V464 = ISZERO V463
0x579: V465 = 0x586
0x57c: JUMPI 0x586 V464
---
Entry stack: [V11, 0xcf, V66, V75]
Stack pops: 2
Stack additions: [S1, S0, V463]
Exit stack: [V11, 0xcf, V66, V75, V463]

================================

Block 0x57d
[0x57d:0x585]
---
Predecessors: [0x54f]
Successors: []
---
0x57d RETURNDATASIZE
0x57e PUSH1 0x0
0x580 DUP1
0x581 RETURNDATACOPY
0x582 RETURNDATASIZE
0x583 PUSH1 0x0
0x585 REVERT
---
0x57d: V466 = RETURNDATASIZE
0x57e: V467 = 0x0
0x581: RETURNDATACOPY 0x0 0x0 V466
0x582: V468 = RETURNDATASIZE
0x583: V469 = 0x0
0x585: REVERT 0x0 V468
---
Entry stack: [V11, 0xcf, V66, V75, V463]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V66, V75, V463]

================================

Block 0x586
[0x586:0x5ea]
---
Predecessors: [0x54f]
Successors: [0xcf]
---
0x586 JUMPDEST
0x587 POP
0x588 PUSH1 0x5
0x58a SLOAD
0x58b PUSH1 0x6
0x58d SLOAD
0x58e PUSH1 0x40
0x590 DUP1
0x591 MLOAD
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a DUP7
0x59b AND
0x59c DUP2
0x59d MSTORE
0x59e PUSH1 0x1
0x5a0 PUSH1 0xd8
0x5a2 PUSH1 0x2
0x5a4 EXP
0x5a5 SUB
0x5a6 NOT
0x5a7 DUP6
0x5a8 AND
0x5a9 PUSH1 0x20
0x5ab DUP3
0x5ac ADD
0x5ad MSTORE
0x5ae DUP1
0x5af DUP3
0x5b0 ADD
0x5b1 SWAP4
0x5b2 SWAP1
0x5b3 SWAP4
0x5b4 MSTORE
0x5b5 PUSH1 0x60
0x5b7 DUP4
0x5b8 ADD
0x5b9 SWAP2
0x5ba SWAP1
0x5bb SWAP2
0x5bc MSTORE
0x5bd MLOAD
0x5be PUSH32 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x5df SWAP2
0x5e0 DUP2
0x5e1 SWAP1
0x5e2 SUB
0x5e3 PUSH1 0x80
0x5e5 ADD
0x5e6 SWAP1
0x5e7 LOG1
0x5e8 POP
0x5e9 POP
0x5ea JUMP
---
0x586: JUMPDEST 
0x588: V470 = 0x5
0x58a: V471 = S[0x5]
0x58b: V472 = 0x6
0x58d: V473 = S[0x6]
0x58e: V474 = 0x40
0x591: V475 = M[0x40]
0x592: V476 = 0x1
0x594: V477 = 0xa0
0x596: V478 = 0x2
0x598: V479 = EXP 0x2 0xa0
0x599: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V481 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x59d: M[V475] = V481
0x59e: V482 = 0x1
0x5a0: V483 = 0xd8
0x5a2: V484 = 0x2
0x5a4: V485 = EXP 0x2 0xd8
0x5a5: V486 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x5a6: V487 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x5a8: V488 = AND V75 0xffffffffff000000000000000000000000000000000000000000000000000000
0x5a9: V489 = 0x20
0x5ac: V490 = ADD V475 0x20
0x5ad: M[V490] = V488
0x5b0: V491 = ADD 0x40 V475
0x5b4: M[V491] = V471
0x5b5: V492 = 0x60
0x5b8: V493 = ADD V475 0x60
0x5bc: M[V493] = V473
0x5bd: V494 = M[0x40]
0x5be: V495 = 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x5e2: V496 = SUB V475 V494
0x5e3: V497 = 0x80
0x5e5: V498 = ADD 0x80 V496
0x5e7: LOG V494 V498 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x5ea: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V66, V75, V463]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x5eb
[0x5eb:0x5ff]
---
Predecessors: [0x10b]
Successors: [0x121]
---
0x5eb JUMPDEST
0x5ec PUSH1 0x3
0x5ee PUSH1 0x20
0x5f0 MSTORE
0x5f1 PUSH1 0x0
0x5f3 SWAP1
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 PUSH1 0x40
0x5f8 SWAP1
0x5f9 SHA3
0x5fa SLOAD
0x5fb PUSH1 0xff
0x5fd AND
0x5fe DUP2
0x5ff JUMP
---
0x5eb: JUMPDEST 
0x5ec: V499 = 0x3
0x5ee: V500 = 0x20
0x5f0: M[0x20] = 0x3
0x5f1: V501 = 0x0
0x5f5: M[0x0] = V90
0x5f6: V502 = 0x40
0x5f9: V503 = SHA3 0x0 0x40
0x5fa: V504 = S[V503]
0x5fb: V505 = 0xff
0x5fd: V506 = AND 0xff V504
0x5ff: JUMP 0x121
---
Entry stack: [V11, 0x121, V90]
Stack pops: 2
Stack additions: [S1, V506]
Exit stack: [V11, 0x121, V506]

================================

Block 0x600
[0x600:0x619]
---
Predecessors: [0x141]
Successors: [0x61a, 0x61e]
---
0x600 JUMPDEST
0x601 CALLER
0x602 PUSH1 0x0
0x604 SWAP1
0x605 DUP2
0x606 MSTORE
0x607 PUSH1 0x20
0x609 DUP2
0x60a SWAP1
0x60b MSTORE
0x60c PUSH1 0x40
0x60e SWAP1
0x60f SHA3
0x610 SLOAD
0x611 PUSH1 0xff
0x613 AND
0x614 ISZERO
0x615 ISZERO
0x616 PUSH2 0x61e
0x619 JUMPI
---
0x600: JUMPDEST 
0x601: V507 = CALLER
0x602: V508 = 0x0
0x606: M[0x0] = V507
0x607: V509 = 0x20
0x60b: M[0x20] = 0x0
0x60c: V510 = 0x40
0x60f: V511 = SHA3 0x0 0x40
0x610: V512 = S[V511]
0x611: V513 = 0xff
0x613: V514 = AND 0xff V512
0x614: V515 = ISZERO V514
0x615: V516 = ISZERO V515
0x616: V517 = 0x61e
0x619: JUMPI 0x61e V516
---
Entry stack: [V11, 0xcf, V105, V126, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V105, V126, V135]

================================

Block 0x61a
[0x61a:0x61d]
---
Predecessors: [0x600]
Successors: []
---
0x61a PUSH1 0x0
0x61c DUP1
0x61d REVERT
---
0x61a: V518 = 0x0
0x61d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V105, V126, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V105, V126, V135]

================================

Block 0x61e
[0x61e:0x641]
---
Predecessors: [0x600]
Successors: [0x642, 0x661]
---
0x61e JUMPDEST
0x61f PUSH1 0x1
0x621 PUSH1 0xa0
0x623 PUSH1 0x2
0x625 EXP
0x626 SUB
0x627 DUP2
0x628 AND
0x629 PUSH1 0x0
0x62b SWAP1
0x62c DUP2
0x62d MSTORE
0x62e PUSH1 0x2
0x630 PUSH1 0x20
0x632 MSTORE
0x633 PUSH1 0x40
0x635 SWAP1
0x636 SHA3
0x637 SLOAD
0x638 PUSH1 0xff
0x63a AND
0x63b ISZERO
0x63c DUP1
0x63d ISZERO
0x63e PUSH2 0x661
0x641 JUMPI
---
0x61e: JUMPDEST 
0x61f: V519 = 0x1
0x621: V520 = 0xa0
0x623: V521 = 0x2
0x625: V522 = EXP 0x2 0xa0
0x626: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x628: V524 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x629: V525 = 0x0
0x62d: M[0x0] = V524
0x62e: V526 = 0x2
0x630: V527 = 0x20
0x632: M[0x20] = 0x2
0x633: V528 = 0x40
0x636: V529 = SHA3 0x0 0x40
0x637: V530 = S[V529]
0x638: V531 = 0xff
0x63a: V532 = AND 0xff V530
0x63b: V533 = ISZERO V532
0x63d: V534 = ISZERO V533
0x63e: V535 = 0x661
0x641: JUMPI 0x661 V534
---
Entry stack: [V11, 0xcf, V105, V126, V135]
Stack pops: 1
Stack additions: [S0, V533]
Exit stack: [V11, 0xcf, V105, V126, V135, V533]

================================

Block 0x642
[0x642:0x660]
---
Predecessors: [0x61e]
Successors: [0x661]
---
0x642 POP
0x643 PUSH1 0x1
0x645 PUSH1 0xd8
0x647 PUSH1 0x2
0x649 EXP
0x64a SUB
0x64b NOT
0x64c DUP3
0x64d AND
0x64e PUSH1 0x0
0x650 SWAP1
0x651 DUP2
0x652 MSTORE
0x653 PUSH1 0x3
0x655 PUSH1 0x20
0x657 MSTORE
0x658 PUSH1 0x40
0x65a SWAP1
0x65b SHA3
0x65c SLOAD
0x65d PUSH1 0xff
0x65f AND
0x660 ISZERO
---
0x643: V536 = 0x1
0x645: V537 = 0xd8
0x647: V538 = 0x2
0x649: V539 = EXP 0x2 0xd8
0x64a: V540 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x64b: V541 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x64d: V542 = AND V126 0xffffffffff000000000000000000000000000000000000000000000000000000
0x64e: V543 = 0x0
0x652: M[0x0] = V542
0x653: V544 = 0x3
0x655: V545 = 0x20
0x657: M[0x20] = 0x3
0x658: V546 = 0x40
0x65b: V547 = SHA3 0x0 0x40
0x65c: V548 = S[V547]
0x65d: V549 = 0xff
0x65f: V550 = AND 0xff V548
0x660: V551 = ISZERO V550
---
Entry stack: [V11, 0xcf, V105, V126, V135, V533]
Stack pops: 3
Stack additions: [S2, S1, V551]
Exit stack: [V11, 0xcf, V105, V126, V135, V551]

================================

Block 0x661
[0x661:0x667]
---
Predecessors: [0x61e, 0x642]
Successors: [0x668, 0x6dd]
---
0x661 JUMPDEST
0x662 ISZERO
0x663 ISZERO
0x664 PUSH2 0x6dd
0x667 JUMPI
---
0x661: JUMPDEST 
0x662: V552 = ISZERO S0
0x663: V553 = ISZERO V552
0x664: V554 = 0x6dd
0x667: JUMPI 0x6dd V553
---
Entry stack: [V11, 0xcf, V105, V126, V135, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, V105, V126, V135]

================================

Block 0x668
[0x668:0x6dc]
---
Predecessors: [0x661]
Successors: []
---
0x668 PUSH1 0x40
0x66a DUP1
0x66b MLOAD
0x66c PUSH1 0xe5
0x66e PUSH1 0x2
0x670 EXP
0x671 PUSH3 0x461bcd
0x675 MUL
0x676 DUP2
0x677 MSTORE
0x678 PUSH1 0x20
0x67a PUSH1 0x4
0x67c DUP3
0x67d ADD
0x67e MSTORE
0x67f PUSH1 0x26
0x681 PUSH1 0x24
0x683 DUP3
0x684 ADD
0x685 MSTORE
0x686 PUSH32 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x6a7 PUSH1 0x44
0x6a9 DUP3
0x6aa ADD
0x6ab MSTORE
0x6ac PUSH32 0x7920757365640000000000000000000000000000000000000000000000000000
0x6cd PUSH1 0x64
0x6cf DUP3
0x6d0 ADD
0x6d1 MSTORE
0x6d2 SWAP1
0x6d3 MLOAD
0x6d4 SWAP1
0x6d5 DUP2
0x6d6 SWAP1
0x6d7 SUB
0x6d8 PUSH1 0x84
0x6da ADD
0x6db SWAP1
0x6dc REVERT
---
0x668: V555 = 0x40
0x66b: V556 = M[0x40]
0x66c: V557 = 0xe5
0x66e: V558 = 0x2
0x670: V559 = EXP 0x2 0xe5
0x671: V560 = 0x461bcd
0x675: V561 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x677: M[V556] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x678: V562 = 0x20
0x67a: V563 = 0x4
0x67d: V564 = ADD V556 0x4
0x67e: M[V564] = 0x20
0x67f: V565 = 0x26
0x681: V566 = 0x24
0x684: V567 = ADD V556 0x24
0x685: M[V567] = 0x26
0x686: V568 = 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x6a7: V569 = 0x44
0x6aa: V570 = ADD V556 0x44
0x6ab: M[V570] = 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x6ac: V571 = 0x7920757365640000000000000000000000000000000000000000000000000000
0x6cd: V572 = 0x64
0x6d0: V573 = ADD V556 0x64
0x6d1: M[V573] = 0x7920757365640000000000000000000000000000000000000000000000000000
0x6d3: V574 = M[0x40]
0x6d7: V575 = SUB V556 V574
0x6d8: V576 = 0x84
0x6da: V577 = ADD 0x84 V575
0x6dc: REVERT V574 V577
---
Entry stack: [V11, 0xcf, V105, V126, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V105, V126, V135]

================================

Block 0x6dd
[0x6dd:0x727]
---
Predecessors: [0x661]
Successors: [0x728]
---
0x6dd JUMPDEST
0x6de PUSH2 0x779
0x6e1 DUP4
0x6e2 PUSH1 0x7
0x6e4 SLOAD
0x6e5 DUP5
0x6e6 PUSH1 0x40
0x6e8 MLOAD
0x6e9 PUSH1 0x20
0x6eb ADD
0x6ec DUP1
0x6ed DUP3
0x6ee PUSH1 0x1
0x6f0 PUSH1 0xd8
0x6f2 PUSH1 0x2
0x6f4 EXP
0x6f5 SUB
0x6f6 NOT
0x6f7 AND
0x6f8 PUSH1 0x1
0x6fa PUSH1 0xd8
0x6fc PUSH1 0x2
0x6fe EXP
0x6ff SUB
0x700 NOT
0x701 AND
0x702 DUP2
0x703 MSTORE
0x704 PUSH1 0x5
0x706 ADD
0x707 SWAP2
0x708 POP
0x709 POP
0x70a PUSH1 0x40
0x70c MLOAD
0x70d PUSH1 0x20
0x70f DUP2
0x710 DUP4
0x711 SUB
0x712 SUB
0x713 DUP2
0x714 MSTORE
0x715 SWAP1
0x716 PUSH1 0x40
0x718 MSTORE
0x719 PUSH1 0x40
0x71b MLOAD
0x71c DUP1
0x71d DUP3
0x71e DUP1
0x71f MLOAD
0x720 SWAP1
0x721 PUSH1 0x20
0x723 ADD
0x724 SWAP1
0x725 DUP1
0x726 DUP4
0x727 DUP4
---
0x6dd: JUMPDEST 
0x6de: V578 = 0x779
0x6e2: V579 = 0x7
0x6e4: V580 = S[0x7]
0x6e6: V581 = 0x40
0x6e8: V582 = M[0x40]
0x6e9: V583 = 0x20
0x6eb: V584 = ADD 0x20 V582
0x6ee: V585 = 0x1
0x6f0: V586 = 0xd8
0x6f2: V587 = 0x2
0x6f4: V588 = EXP 0x2 0xd8
0x6f5: V589 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x6f6: V590 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6f7: V591 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V126
0x6f8: V592 = 0x1
0x6fa: V593 = 0xd8
0x6fc: V594 = 0x2
0x6fe: V595 = EXP 0x2 0xd8
0x6ff: V596 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x700: V597 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x701: V598 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V591
0x703: M[V584] = V598
0x704: V599 = 0x5
0x706: V600 = ADD 0x5 V584
0x70a: V601 = 0x40
0x70c: V602 = M[0x40]
0x70d: V603 = 0x20
0x711: V604 = SUB V600 V602
0x712: V605 = SUB V604 0x20
0x714: M[V602] = V605
0x716: V606 = 0x40
0x718: M[0x40] = V600
0x719: V607 = 0x40
0x71b: V608 = M[0x40]
0x71f: V609 = M[V602]
0x721: V610 = 0x20
0x723: V611 = ADD 0x20 V602
---
Entry stack: [V11, 0xcf, V105, V126, V135]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x779, S2, V580, V602, V608, V608, V611, V609, V609, V608, V611]
Exit stack: [V11, 0xcf, V105, V126, V135, 0x779, V105, V580, V602, V608, V608, V611, V609, V609, V608, V611]

================================

Block 0x728
[0x728:0x730]
---
Predecessors: [0x6dd, 0x731, 0xc27]
Successors: [0x731, 0x747]
---
0x728 JUMPDEST
0x729 PUSH1 0x20
0x72b DUP4
0x72c LT
0x72d PUSH2 0x747
0x730 JUMPI
---
0x728: JUMPDEST 
0x729: V612 = 0x20
0x72c: V613 = LT S2 0x20
0x72d: V614 = 0x747
0x730: JUMPI 0x747 V613
---
Entry stack: [V11, S15, S14, S13, S12, S11, {0x779, 0xc3d}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S15, S14, S13, S12, S11, {0x779, 0xc3d}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x731
[0x731:0x746]
---
Predecessors: [0x728]
Successors: [0x728]
---
0x731 DUP1
0x732 MLOAD
0x733 DUP3
0x734 MSTORE
0x735 PUSH1 0x1f
0x737 NOT
0x738 SWAP1
0x739 SWAP3
0x73a ADD
0x73b SWAP2
0x73c PUSH1 0x20
0x73e SWAP2
0x73f DUP3
0x740 ADD
0x741 SWAP2
0x742 ADD
0x743 PUSH2 0x728
0x746 JUMP
---
0x732: V615 = M[S0]
0x734: M[S1] = V615
0x735: V616 = 0x1f
0x737: V617 = NOT 0x1f
0x73a: V618 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x73c: V619 = 0x20
0x740: V620 = ADD 0x20 S1
0x742: V621 = ADD 0x20 S0
0x743: V622 = 0x728
0x746: JUMP 0x728
---
Entry stack: [V11, S15, S14, S13, S12, S11, {0x779, 0xc3d}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V618, V620, V621]
Exit stack: [V11, S15, S14, S13, S12, S11, {0x779, 0xc3d}, S9, S8, S7, S6, S5, S4, S3, V618, V620, V621]

================================

Block 0x747
[0x747:0x778]
---
Predecessors: [0x728, 0xbd4]
Successors: [0xccd]
---
0x747 JUMPDEST
0x748 PUSH1 0x1
0x74a DUP4
0x74b PUSH1 0x20
0x74d SUB
0x74e PUSH2 0x100
0x751 EXP
0x752 SUB
0x753 DUP1
0x754 NOT
0x755 DUP3
0x756 MLOAD
0x757 AND
0x758 DUP2
0x759 DUP5
0x75a MLOAD
0x75b AND
0x75c DUP1
0x75d DUP3
0x75e OR
0x75f DUP6
0x760 MSTORE
0x761 POP
0x762 POP
0x763 POP
0x764 POP
0x765 POP
0x766 POP
0x767 SWAP1
0x768 POP
0x769 ADD
0x76a SWAP2
0x76b POP
0x76c POP
0x76d PUSH1 0x40
0x76f MLOAD
0x770 DUP1
0x771 SWAP2
0x772 SUB
0x773 SWAP1
0x774 SHA3
0x775 PUSH2 0xccd
0x778 JUMP
---
0x747: JUMPDEST 
0x748: V623 = 0x1
0x74b: V624 = 0x20
0x74d: V625 = SUB 0x20 S2
0x74e: V626 = 0x100
0x751: V627 = EXP 0x100 V625
0x752: V628 = SUB V627 0x1
0x754: V629 = NOT V628
0x756: V630 = M[S0]
0x757: V631 = AND V630 V629
0x75a: V632 = M[S1]
0x75b: V633 = AND V632 V628
0x75e: V634 = OR V631 V633
0x760: M[S1] = V634
0x769: V635 = ADD S3 S5
0x76d: V636 = 0x40
0x76f: V637 = M[0x40]
0x772: V638 = SUB V635 V637
0x774: V639 = SHA3 V637 V638
0x775: V640 = 0xccd
0x778: JUMP 0xccd
---
Entry stack: [V11, S15, S14, S13, S12, S11, {0x779, 0xc3d}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [V639]
Exit stack: [V11, S15, S14, S13, S12, S11, {0x779, 0xc3d}, S9, S8, V639]

================================

Block 0x779
[0x779:0x77f]
---
Predecessors: [0xe0f]
Successors: [0x780, 0x7cf]
---
0x779 JUMPDEST
0x77a ISZERO
0x77b ISZERO
0x77c PUSH2 0x7cf
0x77f JUMPI
---
0x779: JUMPDEST 
0x77a: V641 = ISZERO V1195
0x77b: V642 = ISZERO V641
0x77c: V643 = 0x7cf
0x77f: JUMPI 0x7cf V642
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1195]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0x780
[0x780:0x7ce]
---
Predecessors: [0x779]
Successors: []
---
0x780 PUSH1 0x40
0x782 DUP1
0x783 MLOAD
0x784 PUSH1 0xe5
0x786 PUSH1 0x2
0x788 EXP
0x789 PUSH3 0x461bcd
0x78d MUL
0x78e DUP2
0x78f MSTORE
0x790 PUSH1 0x20
0x792 PUSH1 0x4
0x794 DUP3
0x795 ADD
0x796 MSTORE
0x797 PUSH1 0xc
0x799 PUSH1 0x24
0x79b DUP3
0x79c ADD
0x79d MSTORE
0x79e PUSH32 0x496e76616c696420636f64650000000000000000000000000000000000000000
0x7bf PUSH1 0x44
0x7c1 DUP3
0x7c2 ADD
0x7c3 MSTORE
0x7c4 SWAP1
0x7c5 MLOAD
0x7c6 SWAP1
0x7c7 DUP2
0x7c8 SWAP1
0x7c9 SUB
0x7ca PUSH1 0x64
0x7cc ADD
0x7cd SWAP1
0x7ce REVERT
---
0x780: V644 = 0x40
0x783: V645 = M[0x40]
0x784: V646 = 0xe5
0x786: V647 = 0x2
0x788: V648 = EXP 0x2 0xe5
0x789: V649 = 0x461bcd
0x78d: V650 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x78f: M[V645] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x790: V651 = 0x20
0x792: V652 = 0x4
0x795: V653 = ADD V645 0x4
0x796: M[V653] = 0x20
0x797: V654 = 0xc
0x799: V655 = 0x24
0x79c: V656 = ADD V645 0x24
0x79d: M[V656] = 0xc
0x79e: V657 = 0x496e76616c696420636f64650000000000000000000000000000000000000000
0x7bf: V658 = 0x44
0x7c2: V659 = ADD V645 0x44
0x7c3: M[V659] = 0x496e76616c696420636f64650000000000000000000000000000000000000000
0x7c5: V660 = M[0x40]
0x7c9: V661 = SUB V645 V660
0x7ca: V662 = 0x64
0x7cc: V663 = ADD 0x64 V661
0x7ce: REVERT V660 V663
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x7cf
[0x7cf:0x879]
---
Predecessors: [0x779]
Successors: [0x87a, 0x87e]
---
0x7cf JUMPDEST
0x7d0 PUSH1 0x1
0x7d2 PUSH1 0xa0
0x7d4 PUSH1 0x2
0x7d6 EXP
0x7d7 SUB
0x7d8 DUP2
0x7d9 DUP2
0x7da AND
0x7db PUSH1 0x0
0x7dd DUP2
0x7de DUP2
0x7df MSTORE
0x7e0 PUSH1 0x2
0x7e2 PUSH1 0x20
0x7e4 SWAP1
0x7e5 DUP2
0x7e6 MSTORE
0x7e7 PUSH1 0x40
0x7e9 DUP1
0x7ea DUP4
0x7eb SHA3
0x7ec DUP1
0x7ed SLOAD
0x7ee PUSH1 0x1
0x7f0 PUSH1 0xff
0x7f2 NOT
0x7f3 SWAP2
0x7f4 DUP3
0x7f5 AND
0x7f6 DUP2
0x7f7 OR
0x7f8 SWAP1
0x7f9 SWAP3
0x7fa SSTORE
0x7fb PUSH1 0x1
0x7fd PUSH1 0xd8
0x7ff PUSH1 0x2
0x801 EXP
0x802 SUB
0x803 NOT
0x804 DUP10
0x805 AND
0x806 DUP6
0x807 MSTORE
0x808 PUSH1 0x3
0x80a DUP5
0x80b MSTORE
0x80c DUP3
0x80d DUP6
0x80e SHA3
0x80f DUP1
0x810 SLOAD
0x811 SWAP1
0x812 SWAP2
0x813 AND
0x814 SWAP1
0x815 SWAP2
0x816 OR
0x817 SWAP1
0x818 SSTORE
0x819 PUSH1 0x4
0x81b DUP1
0x81c SLOAD
0x81d PUSH1 0x6
0x81f SLOAD
0x820 DUP4
0x821 MLOAD
0x822 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x843 DUP2
0x844 MSTORE
0x845 SWAP3
0x846 DUP4
0x847 ADD
0x848 SWAP7
0x849 SWAP1
0x84a SWAP7
0x84b MSTORE
0x84c PUSH1 0x24
0x84e DUP3
0x84f ADD
0x850 SWAP6
0x851 SWAP1
0x852 SWAP6
0x853 MSTORE
0x854 SWAP1
0x855 MLOAD
0x856 SWAP4
0x857 SWAP1
0x858 SWAP5
0x859 AND
0x85a SWAP4
0x85b PUSH4 0xa9059cbb
0x860 SWAP4
0x861 PUSH1 0x44
0x863 DUP1
0x864 DUP4
0x865 ADD
0x866 SWAP5
0x867 SWAP2
0x868 SWAP3
0x869 DUP4
0x86a SWAP1
0x86b SUB
0x86c ADD
0x86d SWAP1
0x86e DUP3
0x86f SWAP1
0x870 DUP8
0x871 DUP1
0x872 EXTCODESIZE
0x873 ISZERO
0x874 DUP1
0x875 ISZERO
0x876 PUSH2 0x87e
0x879 JUMPI
---
0x7cf: JUMPDEST 
0x7d0: V664 = 0x1
0x7d2: V665 = 0xa0
0x7d4: V666 = 0x2
0x7d6: V667 = EXP 0x2 0xa0
0x7d7: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7da: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7db: V670 = 0x0
0x7df: M[0x0] = V669
0x7e0: V671 = 0x2
0x7e2: V672 = 0x20
0x7e6: M[0x20] = 0x2
0x7e7: V673 = 0x40
0x7eb: V674 = SHA3 0x0 0x40
0x7ed: V675 = S[V674]
0x7ee: V676 = 0x1
0x7f0: V677 = 0xff
0x7f2: V678 = NOT 0xff
0x7f5: V679 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V675
0x7f7: V680 = OR 0x1 V679
0x7fa: S[V674] = V680
0x7fb: V681 = 0x1
0x7fd: V682 = 0xd8
0x7ff: V683 = 0x2
0x801: V684 = EXP 0x2 0xd8
0x802: V685 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x803: V686 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x805: V687 = AND S1 0xffffffffff000000000000000000000000000000000000000000000000000000
0x807: M[0x0] = V687
0x808: V688 = 0x3
0x80b: M[0x20] = 0x3
0x80e: V689 = SHA3 0x0 0x40
0x810: V690 = S[V689]
0x813: V691 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V690
0x816: V692 = OR 0x1 V691
0x818: S[V689] = V692
0x819: V693 = 0x4
0x81c: V694 = S[0x4]
0x81d: V695 = 0x6
0x81f: V696 = S[0x6]
0x821: V697 = M[0x40]
0x822: V698 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x844: M[V697] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x847: V699 = ADD V697 0x4
0x84b: M[V699] = V669
0x84c: V700 = 0x24
0x84f: V701 = ADD V697 0x24
0x853: M[V701] = V696
0x855: V702 = M[0x40]
0x859: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V694
0x85b: V704 = 0xa9059cbb
0x861: V705 = 0x44
0x865: V706 = ADD V697 0x44
0x86b: V707 = SUB V697 V702
0x86c: V708 = ADD V707 0x44
0x872: V709 = EXTCODESIZE V703
0x873: V710 = ISZERO V709
0x875: V711 = ISZERO V710
0x876: V712 = 0x87e
0x879: JUMPI 0x87e V711
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V703, 0xa9059cbb, V706, 0x20, V702, V708, V702, 0x0, V703, V710]
Exit stack: [V11, S4, S3, S2, S1, S0, V703, 0xa9059cbb, V706, 0x20, V702, V708, V702, 0x0, V703, V710]

================================

Block 0x87a
[0x87a:0x87d]
---
Predecessors: [0x7cf]
Successors: []
---
0x87a PUSH1 0x0
0x87c DUP1
0x87d REVERT
---
0x87a: V713 = 0x0
0x87d: REVERT 0x0 0x0
---
Entry stack: [V11, S14, S13, S12, S11, S10, V703, 0xa9059cbb, V706, 0x20, V702, V708, V702, 0x0, V703, V710]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, V703, 0xa9059cbb, V706, 0x20, V702, V708, V702, 0x0, V703, V710]

================================

Block 0x87e
[0x87e:0x888]
---
Predecessors: [0x7cf]
Successors: [0x889, 0x892]
---
0x87e JUMPDEST
0x87f POP
0x880 GAS
0x881 CALL
0x882 ISZERO
0x883 DUP1
0x884 ISZERO
0x885 PUSH2 0x892
0x888 JUMPI
---
0x87e: JUMPDEST 
0x880: V714 = GAS
0x881: V715 = CALL V714 V703 0x0 V702 V708 V702 0x20
0x882: V716 = ISZERO V715
0x884: V717 = ISZERO V716
0x885: V718 = 0x892
0x888: JUMPI 0x892 V717
---
Entry stack: [V11, S14, S13, S12, S11, S10, V703, 0xa9059cbb, V706, 0x20, V702, V708, V702, 0x0, V703, V710]
Stack pops: 7
Stack additions: [V716]
Exit stack: [V11, S14, S13, S12, S11, S10, V703, 0xa9059cbb, V706, V716]

================================

Block 0x889
[0x889:0x891]
---
Predecessors: [0x87e]
Successors: []
---
0x889 RETURNDATASIZE
0x88a PUSH1 0x0
0x88c DUP1
0x88d RETURNDATACOPY
0x88e RETURNDATASIZE
0x88f PUSH1 0x0
0x891 REVERT
---
0x889: V719 = RETURNDATASIZE
0x88a: V720 = 0x0
0x88d: RETURNDATACOPY 0x0 0x0 V719
0x88e: V721 = RETURNDATASIZE
0x88f: V722 = 0x0
0x891: REVERT 0x0 V721
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V716]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V716]

================================

Block 0x892
[0x892:0x8a3]
---
Predecessors: [0x87e]
Successors: [0x8a4, 0x8a8]
---
0x892 JUMPDEST
0x893 POP
0x894 POP
0x895 POP
0x896 POP
0x897 PUSH1 0x40
0x899 MLOAD
0x89a RETURNDATASIZE
0x89b PUSH1 0x20
0x89d DUP2
0x89e LT
0x89f ISZERO
0x8a0 PUSH2 0x8a8
0x8a3 JUMPI
---
0x892: JUMPDEST 
0x897: V723 = 0x40
0x899: V724 = M[0x40]
0x89a: V725 = RETURNDATASIZE
0x89b: V726 = 0x20
0x89e: V727 = LT V725 0x20
0x89f: V728 = ISZERO V727
0x8a0: V729 = 0x8a8
0x8a3: JUMPI 0x8a8 V728
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V716]
Stack pops: 4
Stack additions: [V724, V725]
Exit stack: [V11, S8, S7, S6, S5, S4, V724, V725]

================================

Block 0x8a4
[0x8a4:0x8a7]
---
Predecessors: [0x892]
Successors: []
---
0x8a4 PUSH1 0x0
0x8a6 DUP1
0x8a7 REVERT
---
0x8a4: V730 = 0x0
0x8a7: REVERT 0x0 0x0
---
Entry stack: [V11, S6, S5, S4, S3, S2, V724, V725]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, V724, V725]

================================

Block 0x8a8
[0x8a8:0x8b0]
---
Predecessors: [0x892]
Successors: [0x8b1, 0x900]
---
0x8a8 JUMPDEST
0x8a9 POP
0x8aa MLOAD
0x8ab ISZERO
0x8ac ISZERO
0x8ad PUSH2 0x900
0x8b0 JUMPI
---
0x8a8: JUMPDEST 
0x8aa: V731 = M[V724]
0x8ab: V732 = ISZERO V731
0x8ac: V733 = ISZERO V732
0x8ad: V734 = 0x900
0x8b0: JUMPI 0x900 V733
---
Entry stack: [V11, S6, S5, S4, S3, S2, V724, V725]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2]

================================

Block 0x8b1
[0x8b1:0x8ff]
---
Predecessors: [0x8a8]
Successors: []
---
0x8b1 PUSH1 0x40
0x8b3 DUP1
0x8b4 MLOAD
0x8b5 PUSH1 0xe5
0x8b7 PUSH1 0x2
0x8b9 EXP
0x8ba PUSH3 0x461bcd
0x8be MUL
0x8bf DUP2
0x8c0 MSTORE
0x8c1 PUSH1 0x20
0x8c3 PUSH1 0x4
0x8c5 DUP3
0x8c6 ADD
0x8c7 MSTORE
0x8c8 PUSH1 0x15
0x8ca PUSH1 0x24
0x8cc DUP3
0x8cd ADD
0x8ce MSTORE
0x8cf PUSH32 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x8f0 PUSH1 0x44
0x8f2 DUP3
0x8f3 ADD
0x8f4 MSTORE
0x8f5 SWAP1
0x8f6 MLOAD
0x8f7 SWAP1
0x8f8 DUP2
0x8f9 SWAP1
0x8fa SUB
0x8fb PUSH1 0x64
0x8fd ADD
0x8fe SWAP1
0x8ff REVERT
---
0x8b1: V735 = 0x40
0x8b4: V736 = M[0x40]
0x8b5: V737 = 0xe5
0x8b7: V738 = 0x2
0x8b9: V739 = EXP 0x2 0xe5
0x8ba: V740 = 0x461bcd
0x8be: V741 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x8c0: M[V736] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8c1: V742 = 0x20
0x8c3: V743 = 0x4
0x8c6: V744 = ADD V736 0x4
0x8c7: M[V744] = 0x20
0x8c8: V745 = 0x15
0x8ca: V746 = 0x24
0x8cd: V747 = ADD V736 0x24
0x8ce: M[V747] = 0x15
0x8cf: V748 = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x8f0: V749 = 0x44
0x8f3: V750 = ADD V736 0x44
0x8f4: M[V750] = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x8f6: V751 = M[0x40]
0x8fa: V752 = SUB V736 V751
0x8fb: V753 = 0x64
0x8fd: V754 = ADD 0x64 V752
0x8ff: REVERT V751 V754
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x900
[0x900:0x92d]
---
Predecessors: [0x8a8]
Successors: [0x92e, 0x937]
---
0x900 JUMPDEST
0x901 PUSH1 0x5
0x903 SLOAD
0x904 PUSH1 0x40
0x906 MLOAD
0x907 PUSH1 0x1
0x909 PUSH1 0xa0
0x90b PUSH1 0x2
0x90d EXP
0x90e SUB
0x90f DUP4
0x910 AND
0x911 SWAP2
0x912 DUP1
0x913 ISZERO
0x914 PUSH2 0x8fc
0x917 MUL
0x918 SWAP2
0x919 PUSH1 0x0
0x91b DUP2
0x91c DUP2
0x91d DUP2
0x91e DUP6
0x91f DUP9
0x920 DUP9
0x921 CALL
0x922 SWAP4
0x923 POP
0x924 POP
0x925 POP
0x926 POP
0x927 ISZERO
0x928 DUP1
0x929 ISZERO
0x92a PUSH2 0x937
0x92d JUMPI
---
0x900: JUMPDEST 
0x901: V755 = 0x5
0x903: V756 = S[0x5]
0x904: V757 = 0x40
0x906: V758 = M[0x40]
0x907: V759 = 0x1
0x909: V760 = 0xa0
0x90b: V761 = 0x2
0x90d: V762 = EXP 0x2 0xa0
0x90e: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x910: V764 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x913: V765 = ISZERO V756
0x914: V766 = 0x8fc
0x917: V767 = MUL 0x8fc V765
0x919: V768 = 0x0
0x921: V769 = CALL V767 V764 V756 V758 0x0 V758 0x0
0x927: V770 = ISZERO V769
0x929: V771 = ISZERO V770
0x92a: V772 = 0x937
0x92d: JUMPI 0x937 V771
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V770]
Exit stack: [V11, S4, S3, S2, S1, S0, V770]

================================

Block 0x92e
[0x92e:0x936]
---
Predecessors: [0x900]
Successors: []
---
0x92e RETURNDATASIZE
0x92f PUSH1 0x0
0x931 DUP1
0x932 RETURNDATACOPY
0x933 RETURNDATASIZE
0x934 PUSH1 0x0
0x936 REVERT
---
0x92e: V773 = RETURNDATASIZE
0x92f: V774 = 0x0
0x932: RETURNDATACOPY 0x0 0x0 V773
0x933: V775 = RETURNDATASIZE
0x934: V776 = 0x0
0x936: REVERT 0x0 V775
---
Entry stack: [V11, S5, S4, S3, S2, S1, V770]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1, V770]

================================

Block 0x937
[0x937:0x99c]
---
Predecessors: [0x900]
Successors: [0xcf]
---
0x937 JUMPDEST
0x938 POP
0x939 PUSH1 0x5
0x93b SLOAD
0x93c PUSH1 0x6
0x93e SLOAD
0x93f PUSH1 0x40
0x941 DUP1
0x942 MLOAD
0x943 PUSH1 0x1
0x945 PUSH1 0xa0
0x947 PUSH1 0x2
0x949 EXP
0x94a SUB
0x94b DUP6
0x94c AND
0x94d DUP2
0x94e MSTORE
0x94f PUSH1 0x1
0x951 PUSH1 0xd8
0x953 PUSH1 0x2
0x955 EXP
0x956 SUB
0x957 NOT
0x958 DUP7
0x959 AND
0x95a PUSH1 0x20
0x95c DUP3
0x95d ADD
0x95e MSTORE
0x95f DUP1
0x960 DUP3
0x961 ADD
0x962 SWAP4
0x963 SWAP1
0x964 SWAP4
0x965 MSTORE
0x966 PUSH1 0x60
0x968 DUP4
0x969 ADD
0x96a SWAP2
0x96b SWAP1
0x96c SWAP2
0x96d MSTORE
0x96e MLOAD
0x96f PUSH32 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x990 SWAP2
0x991 DUP2
0x992 SWAP1
0x993 SUB
0x994 PUSH1 0x80
0x996 ADD
0x997 SWAP1
0x998 LOG1
0x999 POP
0x99a POP
0x99b POP
0x99c JUMP
---
0x937: JUMPDEST 
0x939: V777 = 0x5
0x93b: V778 = S[0x5]
0x93c: V779 = 0x6
0x93e: V780 = S[0x6]
0x93f: V781 = 0x40
0x942: V782 = M[0x40]
0x943: V783 = 0x1
0x945: V784 = 0xa0
0x947: V785 = 0x2
0x949: V786 = EXP 0x2 0xa0
0x94a: V787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94c: V788 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x94e: M[V782] = V788
0x94f: V789 = 0x1
0x951: V790 = 0xd8
0x953: V791 = 0x2
0x955: V792 = EXP 0x2 0xd8
0x956: V793 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x957: V794 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x959: V795 = AND S2 0xffffffffff000000000000000000000000000000000000000000000000000000
0x95a: V796 = 0x20
0x95d: V797 = ADD V782 0x20
0x95e: M[V797] = V795
0x961: V798 = ADD 0x40 V782
0x965: M[V798] = V778
0x966: V799 = 0x60
0x969: V800 = ADD V782 0x60
0x96d: M[V800] = V780
0x96e: V801 = M[0x40]
0x96f: V802 = 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x993: V803 = SUB V782 V801
0x994: V804 = 0x80
0x996: V805 = ADD 0x80 V803
0x998: LOG V801 V805 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x99c: JUMP S4
---
Entry stack: [V11, S5, S4, S3, S2, S1, V770]
Stack pops: 5
Stack additions: []
Exit stack: [V11, S5]

================================

Block 0x99d
[0x99d:0x9a2]
---
Predecessors: [0x1ae]
Successors: [0x1b7]
---
0x99d JUMPDEST
0x99e PUSH1 0x6
0x9a0 SLOAD
0x9a1 DUP2
0x9a2 JUMP
---
0x99d: JUMPDEST 
0x99e: V806 = 0x6
0x9a0: V807 = S[0x6]
0x9a2: JUMP 0x1b7
---
Entry stack: [V11, 0x1b7]
Stack pops: 1
Stack additions: [S0, V807]
Exit stack: [V11, 0x1b7, V807]

================================

Block 0x9a3
[0x9a3:0x9b7]
---
Predecessors: [0x1d5]
Successors: [0x121]
---
0x9a3 JUMPDEST
0x9a4 PUSH1 0x2
0x9a6 PUSH1 0x20
0x9a8 MSTORE
0x9a9 PUSH1 0x0
0x9ab SWAP1
0x9ac DUP2
0x9ad MSTORE
0x9ae PUSH1 0x40
0x9b0 SWAP1
0x9b1 SHA3
0x9b2 SLOAD
0x9b3 PUSH1 0xff
0x9b5 AND
0x9b6 DUP2
0x9b7 JUMP
---
0x9a3: JUMPDEST 
0x9a4: V808 = 0x2
0x9a6: V809 = 0x20
0x9a8: M[0x20] = 0x2
0x9a9: V810 = 0x0
0x9ad: M[0x0] = V161
0x9ae: V811 = 0x40
0x9b1: V812 = SHA3 0x0 0x40
0x9b2: V813 = S[V812]
0x9b3: V814 = 0xff
0x9b5: V815 = AND 0xff V813
0x9b7: JUMP 0x121
---
Entry stack: [V11, 0x121, V161]
Stack pops: 2
Stack additions: [S1, V815]
Exit stack: [V11, 0x121, V815]

================================

Block 0x9b8
[0x9b8:0x9d1]
---
Predecessors: [0x1f6]
Successors: [0x9d2, 0x9d6]
---
0x9b8 JUMPDEST
0x9b9 CALLER
0x9ba PUSH1 0x0
0x9bc SWAP1
0x9bd DUP2
0x9be MSTORE
0x9bf PUSH1 0x20
0x9c1 DUP2
0x9c2 SWAP1
0x9c3 MSTORE
0x9c4 PUSH1 0x40
0x9c6 DUP2
0x9c7 SHA3
0x9c8 SLOAD
0x9c9 PUSH1 0xff
0x9cb AND
0x9cc ISZERO
0x9cd ISZERO
0x9ce PUSH2 0x9d6
0x9d1 JUMPI
---
0x9b8: JUMPDEST 
0x9b9: V816 = CALLER
0x9ba: V817 = 0x0
0x9be: M[0x0] = V816
0x9bf: V818 = 0x20
0x9c3: M[0x20] = 0x0
0x9c4: V819 = 0x40
0x9c7: V820 = SHA3 0x0 0x40
0x9c8: V821 = S[V820]
0x9c9: V822 = 0xff
0x9cb: V823 = AND 0xff V821
0x9cc: V824 = ISZERO V823
0x9cd: V825 = ISZERO V824
0x9ce: V826 = 0x9d6
0x9d1: JUMPI 0x9d6 V825
---
Entry stack: [V11, 0xcf]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xcf, 0x0]

================================

Block 0x9d2
[0x9d2:0x9d5]
---
Predecessors: [0x9b8]
Successors: []
---
0x9d2 PUSH1 0x0
0x9d4 DUP1
0x9d5 REVERT
---
0x9d2: V827 = 0x0
0x9d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, 0x0]

================================

Block 0x9d6
[0x9d6:0xa38]
---
Predecessors: [0x9b8]
Successors: [0xa39, 0xa3d]
---
0x9d6 JUMPDEST
0x9d7 PUSH1 0x4
0x9d9 DUP1
0x9da SLOAD
0x9db PUSH1 0x40
0x9dd DUP1
0x9de MLOAD
0x9df PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa00 DUP2
0xa01 MSTORE
0xa02 ADDRESS
0xa03 SWAP4
0xa04 DUP2
0xa05 ADD
0xa06 SWAP4
0xa07 SWAP1
0xa08 SWAP4
0xa09 MSTORE
0xa0a MLOAD
0xa0b PUSH1 0x1
0xa0d PUSH1 0xa0
0xa0f PUSH1 0x2
0xa11 EXP
0xa12 SUB
0xa13 SWAP1
0xa14 SWAP2
0xa15 AND
0xa16 SWAP2
0xa17 PUSH4 0x70a08231
0xa1c SWAP2
0xa1d PUSH1 0x24
0xa1f DUP1
0xa20 DUP4
0xa21 ADD
0xa22 SWAP3
0xa23 PUSH1 0x20
0xa25 SWAP3
0xa26 SWAP2
0xa27 SWAP1
0xa28 DUP3
0xa29 SWAP1
0xa2a SUB
0xa2b ADD
0xa2c DUP2
0xa2d PUSH1 0x0
0xa2f DUP8
0xa30 DUP1
0xa31 EXTCODESIZE
0xa32 ISZERO
0xa33 DUP1
0xa34 ISZERO
0xa35 PUSH2 0xa3d
0xa38 JUMPI
---
0x9d6: JUMPDEST 
0x9d7: V828 = 0x4
0x9da: V829 = S[0x4]
0x9db: V830 = 0x40
0x9de: V831 = M[0x40]
0x9df: V832 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa01: M[V831] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa02: V833 = ADDRESS
0xa05: V834 = ADD V831 0x4
0xa09: M[V834] = V833
0xa0a: V835 = M[0x40]
0xa0b: V836 = 0x1
0xa0d: V837 = 0xa0
0xa0f: V838 = 0x2
0xa11: V839 = EXP 0x2 0xa0
0xa12: V840 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa15: V841 = AND V829 0xffffffffffffffffffffffffffffffffffffffff
0xa17: V842 = 0x70a08231
0xa1d: V843 = 0x24
0xa21: V844 = ADD V831 0x24
0xa23: V845 = 0x20
0xa2a: V846 = SUB V831 V835
0xa2b: V847 = ADD V846 0x24
0xa2d: V848 = 0x0
0xa31: V849 = EXTCODESIZE V841
0xa32: V850 = ISZERO V849
0xa34: V851 = ISZERO V850
0xa35: V852 = 0xa3d
0xa38: JUMPI 0xa3d V851
---
Entry stack: [V11, 0xcf, 0x0]
Stack pops: 0
Stack additions: [V841, 0x70a08231, V844, 0x20, V835, V847, V835, 0x0, V841, V850]
Exit stack: [V11, 0xcf, 0x0, V841, 0x70a08231, V844, 0x20, V835, V847, V835, 0x0, V841, V850]

================================

Block 0xa39
[0xa39:0xa3c]
---
Predecessors: [0x9d6]
Successors: []
---
0xa39 PUSH1 0x0
0xa3b DUP1
0xa3c REVERT
---
0xa39: V853 = 0x0
0xa3c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, 0x0, V841, 0x70a08231, V844, 0x20, V835, V847, V835, 0x0, V841, V850]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, 0x0, V841, 0x70a08231, V844, 0x20, V835, V847, V835, 0x0, V841, V850]

================================

Block 0xa3d
[0xa3d:0xa47]
---
Predecessors: [0x9d6]
Successors: [0xa48, 0xa51]
---
0xa3d JUMPDEST
0xa3e POP
0xa3f GAS
0xa40 CALL
0xa41 ISZERO
0xa42 DUP1
0xa43 ISZERO
0xa44 PUSH2 0xa51
0xa47 JUMPI
---
0xa3d: JUMPDEST 
0xa3f: V854 = GAS
0xa40: V855 = CALL V854 V841 0x0 V835 V847 V835 0x20
0xa41: V856 = ISZERO V855
0xa43: V857 = ISZERO V856
0xa44: V858 = 0xa51
0xa47: JUMPI 0xa51 V857
---
Entry stack: [V11, 0xcf, 0x0, V841, 0x70a08231, V844, 0x20, V835, V847, V835, 0x0, V841, V850]
Stack pops: 7
Stack additions: [V856]
Exit stack: [V11, 0xcf, 0x0, V841, 0x70a08231, V844, V856]

================================

Block 0xa48
[0xa48:0xa50]
---
Predecessors: [0xa3d]
Successors: []
---
0xa48 RETURNDATASIZE
0xa49 PUSH1 0x0
0xa4b DUP1
0xa4c RETURNDATACOPY
0xa4d RETURNDATASIZE
0xa4e PUSH1 0x0
0xa50 REVERT
---
0xa48: V859 = RETURNDATASIZE
0xa49: V860 = 0x0
0xa4c: RETURNDATACOPY 0x0 0x0 V859
0xa4d: V861 = RETURNDATASIZE
0xa4e: V862 = 0x0
0xa50: REVERT 0x0 V861
---
Entry stack: [V11, 0xcf, 0x0, V841, 0x70a08231, V844, V856]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, 0x0, V841, 0x70a08231, V844, V856]

================================

Block 0xa51
[0xa51:0xa62]
---
Predecessors: [0xa3d]
Successors: [0xa63, 0xa67]
---
0xa51 JUMPDEST
0xa52 POP
0xa53 POP
0xa54 POP
0xa55 POP
0xa56 PUSH1 0x40
0xa58 MLOAD
0xa59 RETURNDATASIZE
0xa5a PUSH1 0x20
0xa5c DUP2
0xa5d LT
0xa5e ISZERO
0xa5f PUSH2 0xa67
0xa62 JUMPI
---
0xa51: JUMPDEST 
0xa56: V863 = 0x40
0xa58: V864 = M[0x40]
0xa59: V865 = RETURNDATASIZE
0xa5a: V866 = 0x20
0xa5d: V867 = LT V865 0x20
0xa5e: V868 = ISZERO V867
0xa5f: V869 = 0xa67
0xa62: JUMPI 0xa67 V868
---
Entry stack: [V11, 0xcf, 0x0, V841, 0x70a08231, V844, V856]
Stack pops: 4
Stack additions: [V864, V865]
Exit stack: [V11, 0xcf, 0x0, V864, V865]

================================

Block 0xa63
[0xa63:0xa66]
---
Predecessors: [0xa51]
Successors: []
---
0xa63 PUSH1 0x0
0xa65 DUP1
0xa66 REVERT
---
0xa63: V870 = 0x0
0xa66: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, 0x0, V864, V865]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, 0x0, V864, V865]

================================

Block 0xa67
[0xa67:0xad4]
---
Predecessors: [0xa51]
Successors: [0xad5, 0xad9]
---
0xa67 JUMPDEST
0xa68 POP
0xa69 MLOAD
0xa6a PUSH1 0x4
0xa6c DUP1
0xa6d SLOAD
0xa6e PUSH1 0x40
0xa70 DUP1
0xa71 MLOAD
0xa72 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa93 DUP2
0xa94 MSTORE
0xa95 CALLER
0xa96 SWAP4
0xa97 DUP2
0xa98 ADD
0xa99 SWAP4
0xa9a SWAP1
0xa9b SWAP4
0xa9c MSTORE
0xa9d PUSH1 0x24
0xa9f DUP4
0xaa0 ADD
0xaa1 DUP5
0xaa2 SWAP1
0xaa3 MSTORE
0xaa4 MLOAD
0xaa5 SWAP3
0xaa6 SWAP4
0xaa7 POP
0xaa8 PUSH1 0x1
0xaaa PUSH1 0xa0
0xaac PUSH1 0x2
0xaae EXP
0xaaf SUB
0xab0 AND
0xab1 SWAP2
0xab2 PUSH4 0xa9059cbb
0xab7 SWAP2
0xab8 PUSH1 0x44
0xaba DUP1
0xabb DUP3
0xabc ADD
0xabd SWAP3
0xabe PUSH1 0x20
0xac0 SWAP3
0xac1 SWAP1
0xac2 SWAP2
0xac3 SWAP1
0xac4 DUP3
0xac5 SWAP1
0xac6 SUB
0xac7 ADD
0xac8 DUP2
0xac9 PUSH1 0x0
0xacb DUP8
0xacc DUP1
0xacd EXTCODESIZE
0xace ISZERO
0xacf DUP1
0xad0 ISZERO
0xad1 PUSH2 0xad9
0xad4 JUMPI
---
0xa67: JUMPDEST 
0xa69: V871 = M[V864]
0xa6a: V872 = 0x4
0xa6d: V873 = S[0x4]
0xa6e: V874 = 0x40
0xa71: V875 = M[0x40]
0xa72: V876 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa94: M[V875] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa95: V877 = CALLER
0xa98: V878 = ADD V875 0x4
0xa9c: M[V878] = V877
0xa9d: V879 = 0x24
0xaa0: V880 = ADD V875 0x24
0xaa3: M[V880] = V871
0xaa4: V881 = M[0x40]
0xaa8: V882 = 0x1
0xaaa: V883 = 0xa0
0xaac: V884 = 0x2
0xaae: V885 = EXP 0x2 0xa0
0xaaf: V886 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab0: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xab2: V888 = 0xa9059cbb
0xab8: V889 = 0x44
0xabc: V890 = ADD V875 0x44
0xabe: V891 = 0x20
0xac6: V892 = SUB V875 V881
0xac7: V893 = ADD V892 0x44
0xac9: V894 = 0x0
0xacd: V895 = EXTCODESIZE V887
0xace: V896 = ISZERO V895
0xad0: V897 = ISZERO V896
0xad1: V898 = 0xad9
0xad4: JUMPI 0xad9 V897
---
Entry stack: [V11, 0xcf, 0x0, V864, V865]
Stack pops: 3
Stack additions: [V871, V887, 0xa9059cbb, V890, 0x20, V881, V893, V881, 0x0, V887, V896]
Exit stack: [V11, 0xcf, V871, V887, 0xa9059cbb, V890, 0x20, V881, V893, V881, 0x0, V887, V896]

================================

Block 0xad5
[0xad5:0xad8]
---
Predecessors: [0xa67]
Successors: []
---
0xad5 PUSH1 0x0
0xad7 DUP1
0xad8 REVERT
---
0xad5: V899 = 0x0
0xad8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V871, V887, 0xa9059cbb, V890, 0x20, V881, V893, V881, 0x0, V887, V896]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V871, V887, 0xa9059cbb, V890, 0x20, V881, V893, V881, 0x0, V887, V896]

================================

Block 0xad9
[0xad9:0xae3]
---
Predecessors: [0xa67]
Successors: [0xae4, 0xaed]
---
0xad9 JUMPDEST
0xada POP
0xadb GAS
0xadc CALL
0xadd ISZERO
0xade DUP1
0xadf ISZERO
0xae0 PUSH2 0xaed
0xae3 JUMPI
---
0xad9: JUMPDEST 
0xadb: V900 = GAS
0xadc: V901 = CALL V900 V887 0x0 V881 V893 V881 0x20
0xadd: V902 = ISZERO V901
0xadf: V903 = ISZERO V902
0xae0: V904 = 0xaed
0xae3: JUMPI 0xaed V903
---
Entry stack: [V11, 0xcf, V871, V887, 0xa9059cbb, V890, 0x20, V881, V893, V881, 0x0, V887, V896]
Stack pops: 7
Stack additions: [V902]
Exit stack: [V11, 0xcf, V871, V887, 0xa9059cbb, V890, V902]

================================

Block 0xae4
[0xae4:0xaec]
---
Predecessors: [0xad9]
Successors: []
---
0xae4 RETURNDATASIZE
0xae5 PUSH1 0x0
0xae7 DUP1
0xae8 RETURNDATACOPY
0xae9 RETURNDATASIZE
0xaea PUSH1 0x0
0xaec REVERT
---
0xae4: V905 = RETURNDATASIZE
0xae5: V906 = 0x0
0xae8: RETURNDATACOPY 0x0 0x0 V905
0xae9: V907 = RETURNDATASIZE
0xaea: V908 = 0x0
0xaec: REVERT 0x0 V907
---
Entry stack: [V11, 0xcf, V871, V887, 0xa9059cbb, V890, V902]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V871, V887, 0xa9059cbb, V890, V902]

================================

Block 0xaed
[0xaed:0xafe]
---
Predecessors: [0xad9]
Successors: [0xaff, 0xb03]
---
0xaed JUMPDEST
0xaee POP
0xaef POP
0xaf0 POP
0xaf1 POP
0xaf2 PUSH1 0x40
0xaf4 MLOAD
0xaf5 RETURNDATASIZE
0xaf6 PUSH1 0x20
0xaf8 DUP2
0xaf9 LT
0xafa ISZERO
0xafb PUSH2 0xb03
0xafe JUMPI
---
0xaed: JUMPDEST 
0xaf2: V909 = 0x40
0xaf4: V910 = M[0x40]
0xaf5: V911 = RETURNDATASIZE
0xaf6: V912 = 0x20
0xaf9: V913 = LT V911 0x20
0xafa: V914 = ISZERO V913
0xafb: V915 = 0xb03
0xafe: JUMPI 0xb03 V914
---
Entry stack: [V11, 0xcf, V871, V887, 0xa9059cbb, V890, V902]
Stack pops: 4
Stack additions: [V910, V911]
Exit stack: [V11, 0xcf, V871, V910, V911]

================================

Block 0xaff
[0xaff:0xb02]
---
Predecessors: [0xaed]
Successors: []
---
0xaff PUSH1 0x0
0xb01 DUP1
0xb02 REVERT
---
0xaff: V916 = 0x0
0xb02: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V871, V910, V911]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V871, V910, V911]

================================

Block 0xb03
[0xb03:0xb0b]
---
Predecessors: [0xaed]
Successors: [0xb0c, 0xb5b]
---
0xb03 JUMPDEST
0xb04 POP
0xb05 MLOAD
0xb06 ISZERO
0xb07 ISZERO
0xb08 PUSH2 0xb5b
0xb0b JUMPI
---
0xb03: JUMPDEST 
0xb05: V917 = M[V910]
0xb06: V918 = ISZERO V917
0xb07: V919 = ISZERO V918
0xb08: V920 = 0xb5b
0xb0b: JUMPI 0xb5b V919
---
Entry stack: [V11, 0xcf, V871, V910, V911]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xcf, V871]

================================

Block 0xb0c
[0xb0c:0xb5a]
---
Predecessors: [0xb03]
Successors: []
---
0xb0c PUSH1 0x40
0xb0e DUP1
0xb0f MLOAD
0xb10 PUSH1 0xe5
0xb12 PUSH1 0x2
0xb14 EXP
0xb15 PUSH3 0x461bcd
0xb19 MUL
0xb1a DUP2
0xb1b MSTORE
0xb1c PUSH1 0x20
0xb1e PUSH1 0x4
0xb20 DUP3
0xb21 ADD
0xb22 MSTORE
0xb23 PUSH1 0x15
0xb25 PUSH1 0x24
0xb27 DUP3
0xb28 ADD
0xb29 MSTORE
0xb2a PUSH32 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0xb4b PUSH1 0x44
0xb4d DUP3
0xb4e ADD
0xb4f MSTORE
0xb50 SWAP1
0xb51 MLOAD
0xb52 SWAP1
0xb53 DUP2
0xb54 SWAP1
0xb55 SUB
0xb56 PUSH1 0x64
0xb58 ADD
0xb59 SWAP1
0xb5a REVERT
---
0xb0c: V921 = 0x40
0xb0f: V922 = M[0x40]
0xb10: V923 = 0xe5
0xb12: V924 = 0x2
0xb14: V925 = EXP 0x2 0xe5
0xb15: V926 = 0x461bcd
0xb19: V927 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xb1b: M[V922] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb1c: V928 = 0x20
0xb1e: V929 = 0x4
0xb21: V930 = ADD V922 0x4
0xb22: M[V930] = 0x20
0xb23: V931 = 0x15
0xb25: V932 = 0x24
0xb28: V933 = ADD V922 0x24
0xb29: M[V933] = 0x15
0xb2a: V934 = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0xb4b: V935 = 0x44
0xb4e: V936 = ADD V922 0x44
0xb4f: M[V936] = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0xb51: V937 = M[0x40]
0xb55: V938 = SUB V922 V937
0xb56: V939 = 0x64
0xb58: V940 = ADD 0x64 V938
0xb5a: REVERT V937 V940
---
Entry stack: [V11, 0xcf, V871]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V871]

================================

Block 0xb5b
[0xb5b:0xb5d]
---
Predecessors: [0xb03]
Successors: []
---
0xb5b JUMPDEST
0xb5c CALLER
0xb5d SELFDESTRUCT
---
0xb5b: JUMPDEST 
0xb5c: V941 = CALLER
0xb5d: SELFDESTRUCT V941
---
Entry stack: [V11, 0xcf, V871]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V871]

================================

Block 0xb5e
[0xb5e:0xb77]
---
Predecessors: [0x20b]
Successors: [0xb78, 0xb7c]
---
0xb5e JUMPDEST
0xb5f CALLER
0xb60 PUSH1 0x0
0xb62 SWAP1
0xb63 DUP2
0xb64 MSTORE
0xb65 PUSH1 0x20
0xb67 DUP2
0xb68 SWAP1
0xb69 MSTORE
0xb6a PUSH1 0x40
0xb6c SWAP1
0xb6d SHA3
0xb6e SLOAD
0xb6f PUSH1 0xff
0xb71 AND
0xb72 ISZERO
0xb73 ISZERO
0xb74 PUSH2 0xb7c
0xb77 JUMPI
---
0xb5e: JUMPDEST 
0xb5f: V942 = CALLER
0xb60: V943 = 0x0
0xb64: M[0x0] = V942
0xb65: V944 = 0x20
0xb69: M[0x20] = 0x0
0xb6a: V945 = 0x40
0xb6d: V946 = SHA3 0x0 0x40
0xb6e: V947 = S[V946]
0xb6f: V948 = 0xff
0xb71: V949 = AND 0xff V947
0xb72: V950 = ISZERO V949
0xb73: V951 = ISZERO V950
0xb74: V952 = 0xb7c
0xb77: JUMPI 0xb7c V951
---
Entry stack: [V11, 0xcf, V175, V177, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V175, V177, V179]

================================

Block 0xb78
[0xb78:0xb7b]
---
Predecessors: [0xb5e]
Successors: []
---
0xb78 PUSH1 0x0
0xb7a DUP1
0xb7b REVERT
---
0xb78: V953 = 0x0
0xb7b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V175, V177, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V175, V177, V179]

================================

Block 0xb7c
[0xb7c:0xb89]
---
Predecessors: [0xb5e]
Successors: [0xcf]
---
0xb7c JUMPDEST
0xb7d PUSH1 0x5
0xb7f SWAP3
0xb80 SWAP1
0xb81 SWAP3
0xb82 SSTORE
0xb83 PUSH1 0x6
0xb85 SSTORE
0xb86 PUSH1 0x7
0xb88 SSTORE
0xb89 JUMP
---
0xb7c: JUMPDEST 
0xb7d: V954 = 0x5
0xb82: S[0x5] = V175
0xb83: V955 = 0x6
0xb85: S[0x6] = V177
0xb86: V956 = 0x7
0xb88: S[0x7] = V179
0xb89: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V175, V177, V179]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8a
[0xb8a:0xbad]
---
Predecessors: [0x229]
Successors: [0xbae, 0xbcd]
---
0xb8a JUMPDEST
0xb8b PUSH1 0x1
0xb8d PUSH1 0xa0
0xb8f PUSH1 0x2
0xb91 EXP
0xb92 SUB
0xb93 DUP2
0xb94 AND
0xb95 PUSH1 0x0
0xb97 SWAP1
0xb98 DUP2
0xb99 MSTORE
0xb9a PUSH1 0x2
0xb9c PUSH1 0x20
0xb9e MSTORE
0xb9f PUSH1 0x40
0xba1 DUP2
0xba2 SHA3
0xba3 SLOAD
0xba4 PUSH1 0xff
0xba6 AND
0xba7 ISZERO
0xba8 DUP1
0xba9 ISZERO
0xbaa PUSH2 0xbcd
0xbad JUMPI
---
0xb8a: JUMPDEST 
0xb8b: V957 = 0x1
0xb8d: V958 = 0xa0
0xb8f: V959 = 0x2
0xb91: V960 = EXP 0x2 0xa0
0xb92: V961 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb94: V962 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0xb95: V963 = 0x0
0xb99: M[0x0] = V962
0xb9a: V964 = 0x2
0xb9c: V965 = 0x20
0xb9e: M[0x20] = 0x2
0xb9f: V966 = 0x40
0xba2: V967 = SHA3 0x0 0x40
0xba3: V968 = S[V967]
0xba4: V969 = 0xff
0xba6: V970 = AND 0xff V968
0xba7: V971 = ISZERO V970
0xba9: V972 = ISZERO V971
0xbaa: V973 = 0xbcd
0xbad: JUMPI 0xbcd V972
---
Entry stack: [V11, 0x121, V186, V207, V216]
Stack pops: 1
Stack additions: [S0, 0x0, V971]
Exit stack: [V11, 0x121, V186, V207, V216, 0x0, V971]

================================

Block 0xbae
[0xbae:0xbcc]
---
Predecessors: [0xb8a]
Successors: [0xbcd]
---
0xbae POP
0xbaf PUSH1 0x1
0xbb1 PUSH1 0xd8
0xbb3 PUSH1 0x2
0xbb5 EXP
0xbb6 SUB
0xbb7 NOT
0xbb8 DUP4
0xbb9 AND
0xbba PUSH1 0x0
0xbbc SWAP1
0xbbd DUP2
0xbbe MSTORE
0xbbf PUSH1 0x3
0xbc1 PUSH1 0x20
0xbc3 MSTORE
0xbc4 PUSH1 0x40
0xbc6 SWAP1
0xbc7 SHA3
0xbc8 SLOAD
0xbc9 PUSH1 0xff
0xbcb AND
0xbcc ISZERO
---
0xbaf: V974 = 0x1
0xbb1: V975 = 0xd8
0xbb3: V976 = 0x2
0xbb5: V977 = EXP 0x2 0xd8
0xbb6: V978 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xbb7: V979 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xbb9: V980 = AND V207 0xffffffffff000000000000000000000000000000000000000000000000000000
0xbba: V981 = 0x0
0xbbe: M[0x0] = V980
0xbbf: V982 = 0x3
0xbc1: V983 = 0x20
0xbc3: M[0x20] = 0x3
0xbc4: V984 = 0x40
0xbc7: V985 = SHA3 0x0 0x40
0xbc8: V986 = S[V985]
0xbc9: V987 = 0xff
0xbcb: V988 = AND 0xff V986
0xbcc: V989 = ISZERO V988
---
Entry stack: [V11, 0x121, V186, V207, V216, 0x0, V971]
Stack pops: 4
Stack additions: [S3, S2, S1, V989]
Exit stack: [V11, 0x121, V186, V207, V216, 0x0, V989]

================================

Block 0xbcd
[0xbcd:0xbd3]
---
Predecessors: [0xb8a, 0xbae]
Successors: [0xbd4, 0xc3d]
---
0xbcd JUMPDEST
0xbce DUP1
0xbcf ISZERO
0xbd0 PUSH2 0xc3d
0xbd3 JUMPI
---
0xbcd: JUMPDEST 
0xbcf: V990 = ISZERO S0
0xbd0: V991 = 0xc3d
0xbd3: JUMPI 0xc3d V990
---
Entry stack: [V11, 0x121, V186, V207, V216, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x121, V186, V207, V216, 0x0, S0]

================================

Block 0xbd4
[0xbd4:0xc26]
---
Predecessors: [0xbcd]
Successors: [0x747, 0xc27]
---
0xbd4 POP
0xbd5 PUSH2 0xc3d
0xbd8 DUP5
0xbd9 PUSH1 0x7
0xbdb SLOAD
0xbdc DUP6
0xbdd PUSH1 0x40
0xbdf MLOAD
0xbe0 PUSH1 0x20
0xbe2 ADD
0xbe3 DUP1
0xbe4 DUP3
0xbe5 PUSH1 0x1
0xbe7 PUSH1 0xd8
0xbe9 PUSH1 0x2
0xbeb EXP
0xbec SUB
0xbed NOT
0xbee AND
0xbef PUSH1 0x1
0xbf1 PUSH1 0xd8
0xbf3 PUSH1 0x2
0xbf5 EXP
0xbf6 SUB
0xbf7 NOT
0xbf8 AND
0xbf9 DUP2
0xbfa MSTORE
0xbfb PUSH1 0x5
0xbfd ADD
0xbfe SWAP2
0xbff POP
0xc00 POP
0xc01 PUSH1 0x40
0xc03 MLOAD
0xc04 PUSH1 0x20
0xc06 DUP2
0xc07 DUP4
0xc08 SUB
0xc09 SUB
0xc0a DUP2
0xc0b MSTORE
0xc0c SWAP1
0xc0d PUSH1 0x40
0xc0f MSTORE
0xc10 PUSH1 0x40
0xc12 MLOAD
0xc13 DUP1
0xc14 DUP3
0xc15 DUP1
0xc16 MLOAD
0xc17 SWAP1
0xc18 PUSH1 0x20
0xc1a ADD
0xc1b SWAP1
0xc1c DUP1
0xc1d DUP4
0xc1e DUP4
0xc1f PUSH1 0x20
0xc21 DUP4
0xc22 LT
0xc23 PUSH2 0x747
0xc26 JUMPI
---
0xbd5: V992 = 0xc3d
0xbd9: V993 = 0x7
0xbdb: V994 = S[0x7]
0xbdd: V995 = 0x40
0xbdf: V996 = M[0x40]
0xbe0: V997 = 0x20
0xbe2: V998 = ADD 0x20 V996
0xbe5: V999 = 0x1
0xbe7: V1000 = 0xd8
0xbe9: V1001 = 0x2
0xbeb: V1002 = EXP 0x2 0xd8
0xbec: V1003 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xbed: V1004 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xbee: V1005 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V207
0xbef: V1006 = 0x1
0xbf1: V1007 = 0xd8
0xbf3: V1008 = 0x2
0xbf5: V1009 = EXP 0x2 0xd8
0xbf6: V1010 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xbf7: V1011 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xbf8: V1012 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V1005
0xbfa: M[V998] = V1012
0xbfb: V1013 = 0x5
0xbfd: V1014 = ADD 0x5 V998
0xc01: V1015 = 0x40
0xc03: V1016 = M[0x40]
0xc04: V1017 = 0x20
0xc08: V1018 = SUB V1014 V1016
0xc09: V1019 = SUB V1018 0x20
0xc0b: M[V1016] = V1019
0xc0d: V1020 = 0x40
0xc0f: M[0x40] = V1014
0xc10: V1021 = 0x40
0xc12: V1022 = M[0x40]
0xc16: V1023 = M[V1016]
0xc18: V1024 = 0x20
0xc1a: V1025 = ADD 0x20 V1016
0xc1f: V1026 = 0x20
0xc22: V1027 = LT V1023 0x20
0xc23: V1028 = 0x747
0xc26: JUMPI 0x747 V1027
---
Entry stack: [V11, 0x121, V186, V207, V216, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xc3d, S4, V994, V1016, V1022, V1022, V1025, V1023, V1023, V1022, V1025]
Exit stack: [V11, 0x121, V186, V207, V216, 0x0, 0xc3d, V186, V994, V1016, V1022, V1022, V1025, V1023, V1023, V1022, V1025]

================================

Block 0xc27
[0xc27:0xc3c]
---
Predecessors: [0xbd4]
Successors: [0x728]
---
0xc27 DUP1
0xc28 MLOAD
0xc29 DUP3
0xc2a MSTORE
0xc2b PUSH1 0x1f
0xc2d NOT
0xc2e SWAP1
0xc2f SWAP3
0xc30 ADD
0xc31 SWAP2
0xc32 PUSH1 0x20
0xc34 SWAP2
0xc35 DUP3
0xc36 ADD
0xc37 SWAP2
0xc38 ADD
0xc39 PUSH2 0x728
0xc3c JUMP
---
0xc28: V1029 = M[V1025]
0xc2a: M[V1022] = V1029
0xc2b: V1030 = 0x1f
0xc2d: V1031 = NOT 0x1f
0xc30: V1032 = ADD V1023 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xc32: V1033 = 0x20
0xc36: V1034 = ADD 0x20 V1022
0xc38: V1035 = ADD 0x20 V1025
0xc39: V1036 = 0x728
0xc3c: JUMP 0x728
---
Entry stack: [V11, 0x121, V186, V207, V216, 0x0, 0xc3d, V186, V994, V1016, V1022, V1022, V1025, V1023, V1023, V1022, V1025]
Stack pops: 3
Stack additions: [V1032, V1034, V1035]
Exit stack: [V11, 0x121, V186, V207, V216, 0x0, 0xc3d, V186, V994, V1016, V1022, V1022, V1025, V1023, V1032, V1034, V1035]

================================

Block 0xc3d
[0xc3d:0xc44]
---
Predecessors: [0xbcd, 0xe0f]
Successors: [0x121]
---
0xc3d JUMPDEST
0xc3e SWAP5
0xc3f SWAP4
0xc40 POP
0xc41 POP
0xc42 POP
0xc43 POP
0xc44 JUMP
---
0xc3d: JUMPDEST 
0xc44: JUMP S5
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0xc45
[0xc45:0xc5e]
---
Predecessors: [0x296]
Successors: [0xc5f, 0xc63]
---
0xc45 JUMPDEST
0xc46 CALLER
0xc47 PUSH1 0x0
0xc49 SWAP1
0xc4a DUP2
0xc4b MSTORE
0xc4c PUSH1 0x20
0xc4e DUP2
0xc4f SWAP1
0xc50 MSTORE
0xc51 PUSH1 0x40
0xc53 SWAP1
0xc54 SHA3
0xc55 SLOAD
0xc56 PUSH1 0xff
0xc58 AND
0xc59 ISZERO
0xc5a ISZERO
0xc5b PUSH2 0xc63
0xc5e JUMPI
---
0xc45: JUMPDEST 
0xc46: V1037 = CALLER
0xc47: V1038 = 0x0
0xc4b: M[0x0] = V1037
0xc4c: V1039 = 0x20
0xc50: M[0x20] = 0x0
0xc51: V1040 = 0x40
0xc54: V1041 = SHA3 0x0 0x40
0xc55: V1042 = S[V1041]
0xc56: V1043 = 0xff
0xc58: V1044 = AND 0xff V1042
0xc59: V1045 = ISZERO V1044
0xc5a: V1046 = ISZERO V1045
0xc5b: V1047 = 0xc63
0xc5e: JUMPI 0xc63 V1046
---
Entry stack: [V11, 0xcf, V230, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V230, V234]

================================

Block 0xc5f
[0xc5f:0xc62]
---
Predecessors: [0xc45]
Successors: []
---
0xc5f PUSH1 0x0
0xc61 DUP1
0xc62 REVERT
---
0xc5f: V1048 = 0x0
0xc62: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V230, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V230, V234]

================================

Block 0xc63
[0xc63:0xc8d]
---
Predecessors: [0xc45]
Successors: [0xcf]
---
0xc63 JUMPDEST
0xc64 PUSH1 0x1
0xc66 PUSH1 0xa0
0xc68 PUSH1 0x2
0xc6a EXP
0xc6b SUB
0xc6c SWAP2
0xc6d SWAP1
0xc6e SWAP2
0xc6f AND
0xc70 PUSH1 0x0
0xc72 SWAP1
0xc73 DUP2
0xc74 MSTORE
0xc75 PUSH1 0x20
0xc77 DUP2
0xc78 SWAP1
0xc79 MSTORE
0xc7a PUSH1 0x40
0xc7c SWAP1
0xc7d SHA3
0xc7e DUP1
0xc7f SLOAD
0xc80 PUSH1 0xff
0xc82 NOT
0xc83 AND
0xc84 SWAP2
0xc85 ISZERO
0xc86 ISZERO
0xc87 SWAP2
0xc88 SWAP1
0xc89 SWAP2
0xc8a OR
0xc8b SWAP1
0xc8c SSTORE
0xc8d JUMP
---
0xc63: JUMPDEST 
0xc64: V1049 = 0x1
0xc66: V1050 = 0xa0
0xc68: V1051 = 0x2
0xc6a: V1052 = EXP 0x2 0xa0
0xc6b: V1053 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6f: V1054 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0xc70: V1055 = 0x0
0xc74: M[0x0] = V1054
0xc75: V1056 = 0x20
0xc79: M[0x20] = 0x0
0xc7a: V1057 = 0x40
0xc7d: V1058 = SHA3 0x0 0x40
0xc7f: V1059 = S[V1058]
0xc80: V1060 = 0xff
0xc82: V1061 = NOT 0xff
0xc83: V1062 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1059
0xc85: V1063 = ISZERO V234
0xc86: V1064 = ISZERO V1063
0xc8a: V1065 = OR V1064 V1062
0xc8c: S[V1058] = V1065
0xc8d: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V230, V234]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0xc8e
[0xc8e:0xc9c]
---
Predecessors: [0x2bc]
Successors: [0x2c5]
---
0xc8e JUMPDEST
0xc8f PUSH1 0x4
0xc91 SLOAD
0xc92 PUSH1 0x1
0xc94 PUSH1 0xa0
0xc96 PUSH1 0x2
0xc98 EXP
0xc99 SUB
0xc9a AND
0xc9b DUP2
0xc9c JUMP
---
0xc8e: JUMPDEST 
0xc8f: V1066 = 0x4
0xc91: V1067 = S[0x4]
0xc92: V1068 = 0x1
0xc94: V1069 = 0xa0
0xc96: V1070 = 0x2
0xc98: V1071 = EXP 0x2 0xa0
0xc99: V1072 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9a: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff V1067
0xc9c: JUMP 0x2c5
---
Entry stack: [V11, 0x2c5]
Stack pops: 1
Stack additions: [S0, V1073]
Exit stack: [V11, 0x2c5, V1073]

================================

Block 0xc9d
[0xc9d:0xca2]
---
Predecessors: [0x2ed]
Successors: [0x1b7]
---
0xc9d JUMPDEST
0xc9e PUSH1 0x5
0xca0 SLOAD
0xca1 DUP2
0xca2 JUMP
---
0xc9d: JUMPDEST 
0xc9e: V1074 = 0x5
0xca0: V1075 = S[0x5]
0xca2: JUMP 0x1b7
---
Entry stack: [V11, 0x1b7]
Stack pops: 1
Stack additions: [S0, V1075]
Exit stack: [V11, 0x1b7, V1075]

================================

Block 0xca3
[0xca3:0xcb7]
---
Predecessors: [0x302]
Successors: [0x121]
---
0xca3 JUMPDEST
0xca4 PUSH1 0x0
0xca6 PUSH1 0x20
0xca8 DUP2
0xca9 SWAP1
0xcaa MSTORE
0xcab SWAP1
0xcac DUP2
0xcad MSTORE
0xcae PUSH1 0x40
0xcb0 SWAP1
0xcb1 SHA3
0xcb2 SLOAD
0xcb3 PUSH1 0xff
0xcb5 AND
0xcb6 DUP2
0xcb7 JUMP
---
0xca3: JUMPDEST 
0xca4: V1076 = 0x0
0xca6: V1077 = 0x20
0xcaa: M[0x20] = 0x0
0xcad: M[0x0] = V272
0xcae: V1078 = 0x40
0xcb1: V1079 = SHA3 0x0 0x40
0xcb2: V1080 = S[V1079]
0xcb3: V1081 = 0xff
0xcb5: V1082 = AND 0xff V1080
0xcb7: JUMP 0x121
---
Entry stack: [V11, 0x121, V272]
Stack pops: 2
Stack additions: [S1, V1082]
Exit stack: [V11, 0x121, V1082]

================================

Block 0xcb8
[0xcb8:0xcbd]
---
Predecessors: [0x323]
Successors: [0x1b7]
---
0xcb8 JUMPDEST
0xcb9 PUSH1 0x7
0xcbb SLOAD
0xcbc DUP2
0xcbd JUMP
---
0xcb8: JUMPDEST 
0xcb9: V1083 = 0x7
0xcbb: V1084 = S[0x7]
0xcbd: JUMP 0x1b7
---
Entry stack: [V11, 0x1b7]
Stack pops: 1
Stack additions: [S0, V1084]
Exit stack: [V11, 0x1b7, V1084]

================================

Block 0xcbe
[0xcbe:0xccc]
---
Predecessors: [0x338]
Successors: [0x2c5]
---
0xcbe JUMPDEST
0xcbf PUSH1 0x1
0xcc1 SLOAD
0xcc2 PUSH1 0x1
0xcc4 PUSH1 0xa0
0xcc6 PUSH1 0x2
0xcc8 EXP
0xcc9 SUB
0xcca AND
0xccb DUP2
0xccc JUMP
---
0xcbe: JUMPDEST 
0xcbf: V1085 = 0x1
0xcc1: V1086 = S[0x1]
0xcc2: V1087 = 0x1
0xcc4: V1088 = 0xa0
0xcc6: V1089 = 0x2
0xcc8: V1090 = EXP 0x2 0xa0
0xcc9: V1091 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcca: V1092 = AND 0xffffffffffffffffffffffffffffffffffffffff V1086
0xccc: JUMP 0x2c5
---
Entry stack: [V11, 0x2c5]
Stack pops: 1
Stack additions: [S0, V1092]
Exit stack: [V11, 0x2c5, V1092]

================================

Block 0xccd
[0xccd:0xcd2]
---
Predecessors: [0x747]
Successors: [0xcd3]
---
0xccd JUMPDEST
0xcce PUSH1 0x0
0xcd0 DUP2
0xcd1 DUP2
0xcd2 DUP1
---
0xccd: JUMPDEST 
0xcce: V1093 = 0x0
---
Entry stack: [V11, S8, S7, S6, S5, S4, {0x779, 0xc3d}, S2, S1, V639]
Stack pops: 1
Stack additions: [S0, 0x0, S0, 0x0, 0x0]
Exit stack: [V11, S8, S7, S6, S5, S4, {0x779, 0xc3d}, S2, S1, V639, 0x0, V639, 0x0, 0x0]

================================

Block 0xcd3
[0xcd3:0xcdc]
---
Predecessors: [0xccd, 0xe04]
Successors: [0xcdd, 0xe0f]
---
0xcd3 JUMPDEST
0xcd4 DUP7
0xcd5 MLOAD
0xcd6 DUP3
0xcd7 LT
0xcd8 ISZERO
0xcd9 PUSH2 0xe0f
0xcdc JUMPI
---
0xcd3: JUMPDEST 
0xcd5: V1094 = M[S6]
0xcd7: V1095 = LT S1 V1094
0xcd8: V1096 = ISZERO V1095
0xcd9: V1097 = 0xe0f
0xcdc: JUMPI 0xe0f V1096
---
Entry stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xcdd
[0xcdd:0xce8]
---
Predecessors: [0xcd3]
Successors: [0xce9, 0xcea]
---
0xcdd DUP7
0xcde DUP3
0xcdf DUP2
0xce0 MLOAD
0xce1 DUP2
0xce2 LT
0xce3 ISZERO
0xce4 ISZERO
0xce5 PUSH2 0xcea
0xce8 JUMPI
---
0xce0: V1098 = M[S6]
0xce2: V1099 = LT S1 V1098
0xce3: V1100 = ISZERO V1099
0xce4: V1101 = ISZERO V1100
0xce5: V1102 = 0xcea
0xce8: JUMPI 0xcea V1101
---
Entry stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, S1]
Exit stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, S0, S6, S1]

================================

Block 0xce9
[0xce9:0xce9]
---
Predecessors: [0xcdd]
Successors: []
---
0xce9 INVALID
---
0xce9: INVALID 
---
Entry stack: [V11, S14, S13, S12, S11, S10, {0x779, 0xc3d}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, {0x779, 0xc3d}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xcea
[0xcea:0xcfe]
---
Predecessors: [0xcdd]
Successors: [0xcff, 0xd83]
---
0xcea JUMPDEST
0xceb PUSH1 0x20
0xced SWAP1
0xcee DUP2
0xcef MUL
0xcf0 SWAP1
0xcf1 SWAP2
0xcf2 ADD
0xcf3 ADD
0xcf4 MLOAD
0xcf5 SWAP1
0xcf6 POP
0xcf7 DUP1
0xcf8 DUP4
0xcf9 LT
0xcfa ISZERO
0xcfb PUSH2 0xd83
0xcfe JUMPI
---
0xcea: JUMPDEST 
0xceb: V1103 = 0x20
0xcef: V1104 = MUL 0x20 S0
0xcf2: V1105 = ADD S1 V1104
0xcf3: V1106 = ADD V1105 0x20
0xcf4: V1107 = M[V1106]
0xcf9: V1108 = LT S4 V1107
0xcfa: V1109 = ISZERO V1108
0xcfb: V1110 = 0xd83
0xcfe: JUMPI 0xd83 V1109
---
Entry stack: [V11, S14, S13, S12, S11, S10, {0x779, 0xc3d}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V1107]
Exit stack: [V11, S14, S13, S12, S11, S10, {0x779, 0xc3d}, S8, S7, S6, S5, S4, S3, V1107]

================================

Block 0xcff
[0xcff:0xd2f]
---
Predecessors: [0xcea]
Successors: [0xd30]
---
0xcff PUSH1 0x40
0xd01 DUP1
0xd02 MLOAD
0xd03 PUSH1 0x20
0xd05 DUP1
0xd06 DUP3
0xd07 ADD
0xd08 DUP7
0xd09 SWAP1
0xd0a MSTORE
0xd0b DUP2
0xd0c DUP4
0xd0d ADD
0xd0e DUP5
0xd0f SWAP1
0xd10 MSTORE
0xd11 DUP3
0xd12 MLOAD
0xd13 DUP1
0xd14 DUP4
0xd15 SUB
0xd16 DUP5
0xd17 ADD
0xd18 DUP2
0xd19 MSTORE
0xd1a PUSH1 0x60
0xd1c SWAP1
0xd1d SWAP3
0xd1e ADD
0xd1f SWAP3
0xd20 DUP4
0xd21 SWAP1
0xd22 MSTORE
0xd23 DUP2
0xd24 MLOAD
0xd25 SWAP2
0xd26 SWAP3
0xd27 SWAP2
0xd28 DUP3
0xd29 SWAP2
0xd2a DUP5
0xd2b ADD
0xd2c SWAP1
0xd2d DUP1
0xd2e DUP4
0xd2f DUP4
---
0xcff: V1111 = 0x40
0xd02: V1112 = M[0x40]
0xd03: V1113 = 0x20
0xd07: V1114 = ADD V1112 0x20
0xd0a: M[V1114] = S2
0xd0d: V1115 = ADD 0x40 V1112
0xd10: M[V1115] = V1107
0xd12: V1116 = M[0x40]
0xd15: V1117 = SUB V1112 V1116
0xd17: V1118 = ADD 0x40 V1117
0xd19: M[V1116] = V1118
0xd1a: V1119 = 0x60
0xd1e: V1120 = ADD V1112 0x60
0xd22: M[0x40] = V1120
0xd24: V1121 = M[V1116]
0xd2b: V1122 = ADD V1116 0x20
---
Entry stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, V1107]
Stack pops: 3
Stack additions: [S2, S1, S0, V1116, V1120, V1120, V1122, V1121, V1121, V1120, V1122]
Exit stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, V1107, V1116, V1120, V1120, V1122, V1121, V1121, V1120, V1122]

================================

Block 0xd30
[0xd30:0xd38]
---
Predecessors: [0xcff, 0xd39]
Successors: [0xd39, 0xd4f]
---
0xd30 JUMPDEST
0xd31 PUSH1 0x20
0xd33 DUP4
0xd34 LT
0xd35 PUSH2 0xd4f
0xd38 JUMPI
---
0xd30: JUMPDEST 
0xd31: V1123 = 0x20
0xd34: V1124 = LT S2 0x20
0xd35: V1125 = 0xd4f
0xd38: JUMPI 0xd4f V1124
---
Entry stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1116, V1120, V1120, V1122, V1121, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1116, V1120, V1120, V1122, V1121, S2, S1, S0]

================================

Block 0xd39
[0xd39:0xd4e]
---
Predecessors: [0xd30]
Successors: [0xd30]
---
0xd39 DUP1
0xd3a MLOAD
0xd3b DUP3
0xd3c MSTORE
0xd3d PUSH1 0x1f
0xd3f NOT
0xd40 SWAP1
0xd41 SWAP3
0xd42 ADD
0xd43 SWAP2
0xd44 PUSH1 0x20
0xd46 SWAP2
0xd47 DUP3
0xd48 ADD
0xd49 SWAP2
0xd4a ADD
0xd4b PUSH2 0xd30
0xd4e JUMP
---
0xd3a: V1126 = M[S0]
0xd3c: M[S1] = V1126
0xd3d: V1127 = 0x1f
0xd3f: V1128 = NOT 0x1f
0xd42: V1129 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xd44: V1130 = 0x20
0xd48: V1131 = ADD 0x20 S1
0xd4a: V1132 = ADD 0x20 S0
0xd4b: V1133 = 0xd30
0xd4e: JUMP 0xd30
---
Entry stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1116, V1120, V1120, V1122, V1121, S2, S1, S0]
Stack pops: 3
Stack additions: [V1129, V1131, V1132]
Exit stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1116, V1120, V1120, V1122, V1121, V1129, V1131, V1132]

================================

Block 0xd4f
[0xd4f:0xd82]
---
Predecessors: [0xd30]
Successors: [0xe04]
---
0xd4f JUMPDEST
0xd50 PUSH1 0x1
0xd52 DUP4
0xd53 PUSH1 0x20
0xd55 SUB
0xd56 PUSH2 0x100
0xd59 EXP
0xd5a SUB
0xd5b DUP1
0xd5c NOT
0xd5d DUP3
0xd5e MLOAD
0xd5f AND
0xd60 DUP2
0xd61 DUP5
0xd62 MLOAD
0xd63 AND
0xd64 DUP1
0xd65 DUP3
0xd66 OR
0xd67 DUP6
0xd68 MSTORE
0xd69 POP
0xd6a POP
0xd6b POP
0xd6c POP
0xd6d POP
0xd6e POP
0xd6f SWAP1
0xd70 POP
0xd71 ADD
0xd72 SWAP2
0xd73 POP
0xd74 POP
0xd75 PUSH1 0x40
0xd77 MLOAD
0xd78 DUP1
0xd79 SWAP2
0xd7a SUB
0xd7b SWAP1
0xd7c SHA3
0xd7d SWAP3
0xd7e POP
0xd7f PUSH2 0xe04
0xd82 JUMP
---
0xd4f: JUMPDEST 
0xd50: V1134 = 0x1
0xd53: V1135 = 0x20
0xd55: V1136 = SUB 0x20 S2
0xd56: V1137 = 0x100
0xd59: V1138 = EXP 0x100 V1136
0xd5a: V1139 = SUB V1138 0x1
0xd5c: V1140 = NOT V1139
0xd5e: V1141 = M[S0]
0xd5f: V1142 = AND V1141 V1140
0xd62: V1143 = M[S1]
0xd63: V1144 = AND V1143 V1139
0xd66: V1145 = OR V1142 V1144
0xd68: M[S1] = V1145
0xd71: V1146 = ADD V1121 V1120
0xd75: V1147 = 0x40
0xd77: V1148 = M[0x40]
0xd7a: V1149 = SUB V1146 V1148
0xd7c: V1150 = SHA3 V1148 V1149
0xd7f: V1151 = 0xe04
0xd82: JUMP 0xe04
---
Entry stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1116, V1120, V1120, V1122, V1121, S2, S1, S0]
Stack pops: 11
Stack additions: [V1150, S9, S8]
Exit stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, V1150, S9, V1107]

================================

Block 0xd83
[0xd83:0xdb4]
---
Predecessors: [0xcea]
Successors: [0xdb5]
---
0xd83 JUMPDEST
0xd84 PUSH1 0x40
0xd86 DUP1
0xd87 MLOAD
0xd88 PUSH1 0x20
0xd8a DUP1
0xd8b DUP3
0xd8c ADD
0xd8d DUP5
0xd8e SWAP1
0xd8f MSTORE
0xd90 DUP2
0xd91 DUP4
0xd92 ADD
0xd93 DUP7
0xd94 SWAP1
0xd95 MSTORE
0xd96 DUP3
0xd97 MLOAD
0xd98 DUP1
0xd99 DUP4
0xd9a SUB
0xd9b DUP5
0xd9c ADD
0xd9d DUP2
0xd9e MSTORE
0xd9f PUSH1 0x60
0xda1 SWAP1
0xda2 SWAP3
0xda3 ADD
0xda4 SWAP3
0xda5 DUP4
0xda6 SWAP1
0xda7 MSTORE
0xda8 DUP2
0xda9 MLOAD
0xdaa SWAP2
0xdab SWAP3
0xdac SWAP2
0xdad DUP3
0xdae SWAP2
0xdaf DUP5
0xdb0 ADD
0xdb1 SWAP1
0xdb2 DUP1
0xdb3 DUP4
0xdb4 DUP4
---
0xd83: JUMPDEST 
0xd84: V1152 = 0x40
0xd87: V1153 = M[0x40]
0xd88: V1154 = 0x20
0xd8c: V1155 = ADD V1153 0x20
0xd8f: M[V1155] = V1107
0xd92: V1156 = ADD 0x40 V1153
0xd95: M[V1156] = S2
0xd97: V1157 = M[0x40]
0xd9a: V1158 = SUB V1153 V1157
0xd9c: V1159 = ADD 0x40 V1158
0xd9e: M[V1157] = V1159
0xd9f: V1160 = 0x60
0xda3: V1161 = ADD V1153 0x60
0xda7: M[0x40] = V1161
0xda9: V1162 = M[V1157]
0xdb0: V1163 = ADD V1157 0x20
---
Entry stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, V1107]
Stack pops: 3
Stack additions: [S2, S1, S0, V1157, V1161, V1161, V1163, V1162, V1162, V1161, V1163]
Exit stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, V1107, V1157, V1161, V1161, V1163, V1162, V1162, V1161, V1163]

================================

Block 0xdb5
[0xdb5:0xdbd]
---
Predecessors: [0xd83, 0xdbe]
Successors: [0xdbe, 0xdd4]
---
0xdb5 JUMPDEST
0xdb6 PUSH1 0x20
0xdb8 DUP4
0xdb9 LT
0xdba PUSH2 0xdd4
0xdbd JUMPI
---
0xdb5: JUMPDEST 
0xdb6: V1164 = 0x20
0xdb9: V1165 = LT S2 0x20
0xdba: V1166 = 0xdd4
0xdbd: JUMPI 0xdd4 V1165
---
Entry stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1157, V1161, V1161, V1163, V1162, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1157, V1161, V1161, V1163, V1162, S2, S1, S0]

================================

Block 0xdbe
[0xdbe:0xdd3]
---
Predecessors: [0xdb5]
Successors: [0xdb5]
---
0xdbe DUP1
0xdbf MLOAD
0xdc0 DUP3
0xdc1 MSTORE
0xdc2 PUSH1 0x1f
0xdc4 NOT
0xdc5 SWAP1
0xdc6 SWAP3
0xdc7 ADD
0xdc8 SWAP2
0xdc9 PUSH1 0x20
0xdcb SWAP2
0xdcc DUP3
0xdcd ADD
0xdce SWAP2
0xdcf ADD
0xdd0 PUSH2 0xdb5
0xdd3 JUMP
---
0xdbf: V1167 = M[S0]
0xdc1: M[S1] = V1167
0xdc2: V1168 = 0x1f
0xdc4: V1169 = NOT 0x1f
0xdc7: V1170 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xdc9: V1171 = 0x20
0xdcd: V1172 = ADD 0x20 S1
0xdcf: V1173 = ADD 0x20 S0
0xdd0: V1174 = 0xdb5
0xdd3: JUMP 0xdb5
---
Entry stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1157, V1161, V1161, V1163, V1162, S2, S1, S0]
Stack pops: 3
Stack additions: [V1170, V1172, V1173]
Exit stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1157, V1161, V1161, V1163, V1162, V1170, V1172, V1173]

================================

Block 0xdd4
[0xdd4:0xe03]
---
Predecessors: [0xdb5]
Successors: [0xe04]
---
0xdd4 JUMPDEST
0xdd5 PUSH1 0x1
0xdd7 DUP4
0xdd8 PUSH1 0x20
0xdda SUB
0xddb PUSH2 0x100
0xdde EXP
0xddf SUB
0xde0 DUP1
0xde1 NOT
0xde2 DUP3
0xde3 MLOAD
0xde4 AND
0xde5 DUP2
0xde6 DUP5
0xde7 MLOAD
0xde8 AND
0xde9 DUP1
0xdea DUP3
0xdeb OR
0xdec DUP6
0xded MSTORE
0xdee POP
0xdef POP
0xdf0 POP
0xdf1 POP
0xdf2 POP
0xdf3 POP
0xdf4 SWAP1
0xdf5 POP
0xdf6 ADD
0xdf7 SWAP2
0xdf8 POP
0xdf9 POP
0xdfa PUSH1 0x40
0xdfc MLOAD
0xdfd DUP1
0xdfe SWAP2
0xdff SUB
0xe00 SWAP1
0xe01 SHA3
0xe02 SWAP3
0xe03 POP
---
0xdd4: JUMPDEST 
0xdd5: V1175 = 0x1
0xdd8: V1176 = 0x20
0xdda: V1177 = SUB 0x20 S2
0xddb: V1178 = 0x100
0xdde: V1179 = EXP 0x100 V1177
0xddf: V1180 = SUB V1179 0x1
0xde1: V1181 = NOT V1180
0xde3: V1182 = M[S0]
0xde4: V1183 = AND V1182 V1181
0xde7: V1184 = M[S1]
0xde8: V1185 = AND V1184 V1180
0xdeb: V1186 = OR V1183 V1185
0xded: M[S1] = V1186
0xdf6: V1187 = ADD V1162 V1161
0xdfa: V1188 = 0x40
0xdfc: V1189 = M[0x40]
0xdff: V1190 = SUB V1187 V1189
0xe01: V1191 = SHA3 V1189 V1190
---
Entry stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, S10, S9, V1107, V1157, V1161, V1161, V1163, V1162, S2, S1, S0]
Stack pops: 11
Stack additions: [V1191, S9, S8]
Exit stack: [V11, S20, S19, S18, S17, S16, {0x779, 0xc3d}, S14, S13, S12, S11, V1191, S9, V1107]

================================

Block 0xe04
[0xe04:0xe0e]
---
Predecessors: [0xd4f, 0xdd4]
Successors: [0xcd3]
---
0xe04 JUMPDEST
0xe05 PUSH1 0x1
0xe07 SWAP1
0xe08 SWAP2
0xe09 ADD
0xe0a SWAP1
0xe0b PUSH2 0xcd3
0xe0e JUMP
---
0xe04: JUMPDEST 
0xe05: V1192 = 0x1
0xe09: V1193 = ADD S1 0x1
0xe0b: V1194 = 0xcd3
0xe0e: JUMP 0xcd3
---
Entry stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, V1107]
Stack pops: 2
Stack additions: [V1193, S0]
Exit stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, V1193, V1107]

================================

Block 0xe0f
[0xe0f:0xe1b]
---
Predecessors: [0xcd3]
Successors: [0x779, 0xc3d]
---
0xe0f JUMPDEST
0xe10 POP
0xe11 POP
0xe12 SWAP3
0xe13 SWAP1
0xe14 SWAP3
0xe15 EQ
0xe16 SWAP4
0xe17 SWAP3
0xe18 POP
0xe19 POP
0xe1a POP
0xe1b JUMP
---
0xe0f: JUMPDEST 
0xe15: V1195 = EQ S2 S5
0xe1b: JUMP {0x779, 0xc3d}
---
Entry stack: [V11, S12, S11, S10, S9, S8, {0x779, 0xc3d}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [V1195]
Exit stack: [V11, S12, S11, S10, S9, S8, V1195]

================================

Block 0xe1c
[0xe1c:0xe5f]
---
Predecessors: []
Successors: []
---
0xe1c STOP
0xe1d LOG1
0xe1e PUSH6 0x627a7a723058
0xe25 SHA3
0xe26 CALLER
0xe27 SWAP11
0xe28 SWAP1
0xe29 SIGNEXTEND
0xe2a DUP14
0xe2b CALLCODE
0xe2c NUMBER
0xe2d DUP11
0xe2e MISSING 0xd3
0xe2f MISSING 0x4f
0xe30 PUSH11 0x41fb32a9b890ced4a68cc1
0xe3c MISSING 0xbe
0xe3d DIFFICULTY
0xe3e ORIGIN
0xe3f POP
0xe40 MISSING 0xdd
0xe41 PUSH30 0xe9efeeb70029
---
0xe1c: STOP 
0xe1d: LOG S0 S1 S2
0xe1e: V1196 = 0x627a7a723058
0xe25: V1197 = SHA3 0x627a7a723058 S3
0xe26: V1198 = CALLER
0xe29: V1199 = SIGNEXTEND V1197 S13
0xe2b: V1200 = CALLCODE S16 V1199 S4 S5 S6 S7 S8
0xe2c: V1201 = NUMBER
0xe2e: MISSING 0xd3
0xe2f: MISSING 0x4f
0xe30: V1202 = 0x41fb32a9b890ced4a68cc1
0xe3c: MISSING 0xbe
0xe3d: V1203 = DIFFICULTY
0xe3e: V1204 = ORIGIN
0xe40: MISSING 0xdd
0xe41: V1205 = 0xe9efeeb70029
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, V1201, V1200, S9, S10, S11, S12, V1198, S14, S15, S16, S17, 0x41fb32a9b890ced4a68cc1, V1203, 0xe9efeeb70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6a21857f
Entry block: 0xd1
Exit block: 0xcf
Body: 0xcf, 0xd1, 0xd9, 0xdd, 0x341, 0x35b, 0x35f, 0x383, 0x3a2, 0x3a9, 0x41e, 0x4c9, 0x4cd, 0x4d8, 0x4e1, 0x4f3, 0x4f7, 0x500, 0x54f, 0x57d, 0x586

Function 1:
Public function signature: 0x723de5cd
Entry block: 0xff
Exit block: 0x121
Body: 0xff, 0x107, 0x10b, 0x121, 0x5eb

Function 2:
Public function signature: 0x72d209f5
Entry block: 0x135
Exit block: 0xcf
Body: 0xcf, 0x121, 0x135, 0x13d, 0x141, 0x600, 0x61a, 0x61e, 0x642, 0x661, 0x668, 0x6dd, 0x728, 0x731, 0x747, 0x779, 0x780, 0x7cf, 0x87a, 0x87e, 0x889, 0x892, 0x8a4, 0x8a8, 0x8b1, 0x900, 0x92e, 0x937, 0xc3d, 0xccd, 0xcd3, 0xcdd, 0xce9, 0xcea, 0xcff, 0xd30, 0xd39, 0xd4f, 0xd83, 0xdb5, 0xdbe, 0xdd4, 0xe04, 0xe0f

Function 3:
Public function signature: 0x7f58fa14
Entry block: 0x1a2
Exit block: 0x1b7
Body: 0x1a2, 0x1aa, 0x1ae, 0x1b7, 0x99d

Function 4:
Public function signature: 0x81e8706d
Entry block: 0x1c9
Exit block: 0x121
Body: 0x121, 0x1c9, 0x1d1, 0x1d5, 0x9a3

Function 5:
Public function signature: 0xa169ce09
Entry block: 0x1ea
Exit block: 0xb0c
Body: 0x1ea, 0x1f2, 0x1f6, 0x9b8, 0x9d2, 0x9d6, 0xa39, 0xa3d, 0xa48, 0xa51, 0xa63, 0xa67, 0xad5, 0xad9, 0xae4, 0xaed, 0xaff, 0xb03, 0xb0c, 0xb5b

Function 6:
Public function signature: 0xa4438334
Entry block: 0x1ff
Exit block: 0xcf
Body: 0xcf, 0x1ff, 0x207, 0x20b, 0xb5e, 0xb78, 0xb7c

Function 7:
Public function signature: 0xadb187bb
Entry block: 0x21d
Exit block: 0xcf
Body: 0xcf, 0x121, 0x21d, 0x225, 0x229, 0x728, 0x731, 0x747, 0x779, 0x780, 0x7cf, 0x87a, 0x87e, 0x889, 0x892, 0x8a4, 0x8a8, 0x8b1, 0x900, 0x92e, 0x937, 0xb8a, 0xbae, 0xbcd, 0xbd4, 0xc27, 0xc3d, 0xccd, 0xcd3, 0xcdd, 0xce9, 0xcea, 0xcff, 0xd30, 0xd39, 0xd4f, 0xd83, 0xdb5, 0xdbe, 0xdd4, 0xe04, 0xe0f

Function 8:
Public function signature: 0xbc41f298
Entry block: 0x28a
Exit block: 0xcf
Body: 0xcf, 0x28a, 0x292, 0x296, 0xc45, 0xc5f, 0xc63

Function 9:
Public function signature: 0xc55a02a0
Entry block: 0x2b0
Exit block: 0x2c5
Body: 0x2b0, 0x2b8, 0x2bc, 0x2c5, 0xc8e

Function 10:
Public function signature: 0xc98166c0
Entry block: 0x2e1
Exit block: 0x1b7
Body: 0x1b7, 0x2e1, 0x2e9, 0x2ed, 0xc9d

Function 11:
Public function signature: 0xda8c229e
Entry block: 0x2f6
Exit block: 0x121
Body: 0x121, 0x2f6, 0x2fe, 0x302, 0xca3

Function 12:
Public function signature: 0xebf0c717
Entry block: 0x317
Exit block: 0x1b7
Body: 0x1b7, 0x317, 0x31f, 0x323, 0xcb8

Function 13:
Public function signature: 0xf77c4791
Entry block: 0x32c
Exit block: 0x2c5
Body: 0x2c5, 0x32c, 0x334, 0x338, 0xcbe

Function 14:
Public fallback function
Entry block: 0xcf
Exit block: 0xcf
Body: 0xcf

