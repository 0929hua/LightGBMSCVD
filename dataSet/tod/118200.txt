Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x44]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x44
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x44
0xa: JUMPI 0x44 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x4d]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x4266049a
0x34 EQ
0x35 PUSH2 0x4d
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x4266049a
0x34: V10 = EQ 0x4266049a V8
0x35: V11 = 0x4d
0x38: JUMPI 0x4d V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x57]
---
0x39 DUP1
0x3a PUSH4 0x83197ef0
0x3f EQ
0x40 PUSH2 0x57
0x43 JUMPI
---
0x3a: V12 = 0x83197ef0
0x3f: V13 = EQ 0x83197ef0 V8
0x40: V14 = 0x57
0x43: JUMPI 0x57 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x0, 0x39, 0x360]
Successors: [0x48]
---
0x44 JUMPDEST
0x45 PUSH2 0x4b
---
0x44: JUMPDEST 
0x45: V15 = 0x4b
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x4b]
Exit stack: [V8, 0x4b]

================================

Block 0x48
[0x48:0x48]
---
Predecessors: [0x44]
Successors: [0x49]
---
0x48 JUMPDEST
---
0x48: JUMPDEST 
---
Entry stack: [V8, 0x4b]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x4b]

================================

Block 0x49
[0x49:0x4a]
---
Predecessors: [0x48]
Successors: [0x4b]
---
0x49 JUMPDEST
0x4a JUMP
---
0x49: JUMPDEST 
0x4a: JUMP 0x4b
---
Entry stack: [V8, 0x4b]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x4b
[0x4b:0x4c]
---
Predecessors: [0x49, 0x3b7]
Successors: []
---
0x4b JUMPDEST
0x4c STOP
---
0x4b: JUMPDEST 
0x4c: STOP 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x4d
[0x4d:0x54]
---
Predecessors: [0xb, 0x379]
Successors: [0x66]
---
0x4d JUMPDEST
0x4e PUSH2 0x55
0x51 PUSH2 0x66
0x54 JUMP
---
0x4d: JUMPDEST 
0x4e: V16 = 0x55
0x51: V17 = 0x66
0x54: JUMP 0x66
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0x55]
Exit stack: [S0, 0x55]

================================

Block 0x55
[0x55:0x56]
---
Predecessors: [0x22f]
Successors: []
---
0x55 JUMPDEST
0x56 STOP
---
0x55: JUMPDEST 
0x56: STOP 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x57
[0x57:0x5c]
---
Predecessors: [0x39]
Successors: [0x5d]
---
0x57 JUMPDEST
0x58 CALLVALUE
0x59 PUSH2 0x0
0x5c JUMPI
---
0x57: JUMPDEST 
0x58: V18 = CALLVALUE
0x59: V19 = 0x0
0x5c: THROWI V18
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x5d
[0x5d:0x63]
---
Predecessors: [0x57]
Successors: [0x232]
---
0x5d PUSH2 0x64
0x60 PUSH2 0x232
0x63 JUMP
---
0x5d: V20 = 0x64
0x60: V21 = 0x232
0x63: JUMP 0x232
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V8, 0x64]

================================

Block 0x64
[0x64:0x65]
---
Predecessors: [0x2c4]
Successors: []
---
0x64 JUMPDEST
0x65 STOP
---
0x64: JUMPDEST 
0x65: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x66
[0x66:0x88]
---
Predecessors: [0x4d]
Successors: [0x89]
---
0x66 JUMPDEST
0x67 PUSH1 0x0
0x69 PUSH1 0x40
0x6b MLOAD
0x6c PUSH2 0x2a3
0x6f DUP1
0x70 PUSH2 0x2c6
0x73 DUP4
0x74 CODECOPY
0x75 ADD
0x76 DUP1
0x77 SWAP1
0x78 POP
0x79 PUSH1 0x40
0x7b MLOAD
0x7c DUP1
0x7d SWAP2
0x7e SUB
0x7f SWAP1
0x80 PUSH1 0x0
0x82 CREATE
0x83 DUP1
0x84 ISZERO
0x85 PUSH2 0x0
0x88 JUMPI
---
0x66: JUMPDEST 
0x67: V22 = 0x0
0x69: V23 = 0x40
0x6b: V24 = M[0x40]
0x6c: V25 = 0x2a3
0x70: V26 = 0x2c6
0x74: CODECOPY V24 0x2c6 0x2a3
0x75: V27 = ADD 0x2a3 V24
0x79: V28 = 0x40
0x7b: V29 = M[0x40]
0x7e: V30 = SUB V27 V29
0x80: V31 = 0x0
0x82: V32 = CREATE 0x0 V29 V30
0x84: V33 = ISZERO V32
0x85: V34 = 0x0
0x88: THROWI V33
---
Entry stack: [S1, 0x55]
Stack pops: 0
Stack additions: [0x0, V32]
Exit stack: [S1, 0x55, 0x0, V32]

================================

Block 0x89
[0x89:0xdf]
---
Predecessors: [0x66]
Successors: [0xe0, 0xe4]
---
0x89 SWAP1
0x8a POP
0x8b DUP1
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 AND
0xa2 PUSH2 0x8fc
0xa5 ADDRESS
0xa6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb AND
0xbc BALANCE
0xbd SWAP1
0xbe DUP2
0xbf ISZERO
0xc0 MUL
0xc1 SWAP1
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP1
0xc7 POP
0xc8 PUSH1 0x0
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP1
0xce DUP4
0xcf SUB
0xd0 DUP2
0xd1 DUP6
0xd2 DUP9
0xd3 DUP9
0xd4 CALL
0xd5 SWAP4
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 POP
0xda ISZERO
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0x8c: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa2: V37 = 0x8fc
0xa5: V38 = ADDRESS
0xa6: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xbc: V41 = BALANCE V40
0xbf: V42 = ISZERO V41
0xc0: V43 = MUL V42 0x8fc
0xc2: V44 = 0x40
0xc4: V45 = M[0x40]
0xc8: V46 = 0x0
0xca: V47 = 0x40
0xcc: V48 = M[0x40]
0xcf: V49 = SUB V45 V48
0xd4: V50 = CALL V43 V36 V41 V48 V49 V48 0x0
0xda: V51 = ISZERO V50
0xdb: V52 = ISZERO V51
0xdc: V53 = 0xe4
0xdf: JUMPI 0xe4 V52
---
Entry stack: [S3, 0x55, 0x0, V32]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S3, 0x55, V32]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0x89]
Successors: []
---
0xe0 PUSH2 0x0
0xe3 JUMP
---
0xe0: V54 = 0x0
0xe3: THROW 
---
Entry stack: [S2, 0x55, V32]
Stack pops: 0
Stack additions: []
Exit stack: [S2, 0x55, V32]

================================

Block 0xe4
[0xe4:0x13e]
---
Predecessors: [0x89]
Successors: [0x13f]
---
0xe4 JUMPDEST
0xe5 DUP1
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc PUSH4 0x93cca918
0x101 PUSH1 0x40
0x103 MLOAD
0x104 DUP2
0x105 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x123 MUL
0x124 DUP2
0x125 MSTORE
0x126 PUSH1 0x4
0x128 ADD
0x129 DUP1
0x12a SWAP1
0x12b POP
0x12c PUSH1 0x0
0x12e PUSH1 0x40
0x130 MLOAD
0x131 DUP1
0x132 DUP4
0x133 SUB
0x134 DUP2
0x135 PUSH1 0x0
0x137 DUP8
0x138 DUP1
0x139 EXTCODESIZE
0x13a ISZERO
0x13b PUSH2 0x0
0x13e JUMPI
---
0xe4: JUMPDEST 
0xe6: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xfc: V57 = 0x93cca918
0x101: V58 = 0x40
0x103: V59 = M[0x40]
0x105: V60 = 0x100000000000000000000000000000000000000000000000000000000
0x123: V61 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x93cca918
0x125: M[V59] = 0x93cca91800000000000000000000000000000000000000000000000000000000
0x126: V62 = 0x4
0x128: V63 = ADD 0x4 V59
0x12c: V64 = 0x0
0x12e: V65 = 0x40
0x130: V66 = M[0x40]
0x133: V67 = SUB V63 V66
0x135: V68 = 0x0
0x139: V69 = EXTCODESIZE V56
0x13a: V70 = ISZERO V69
0x13b: V71 = 0x0
0x13e: THROWI V70
---
Entry stack: [S2, 0x55, V32]
Stack pops: 1
Stack additions: [S0, V56, 0x93cca918, V63, 0x0, V66, V67, V66, 0x0, V56]
Exit stack: [S2, 0x55, V32, V56, 0x93cca918, V63, 0x0, V66, V67, V66, 0x0, V56]

================================

Block 0x13f
[0x13f:0x148]
---
Predecessors: [0xe4]
Successors: [0x149]
---
0x13f PUSH1 0x32
0x141 GAS
0x142 SUB
0x143 CALL
0x144 ISZERO
0x145 PUSH2 0x0
0x148 JUMPI
---
0x13f: V72 = 0x32
0x141: V73 = GAS
0x142: V74 = SUB V73 0x32
0x143: V75 = CALL V74 V56 0x0 V66 V67 V66 0x0
0x144: V76 = ISZERO V75
0x145: V77 = 0x0
0x148: THROWI V76
---
Entry stack: [S11, 0x55, V32, V56, 0x93cca918, V63, 0x0, V66, V67, V66, 0x0, V56]
Stack pops: 6
Stack additions: []
Exit stack: [S11, 0x55, V32, V56, 0x93cca918, V63]

================================

Block 0x149
[0x149:0x1a5]
---
Predecessors: [0x13f]
Successors: [0x1a6]
---
0x149 POP
0x14a POP
0x14b POP
0x14c DUP1
0x14d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x162 AND
0x163 PUSH4 0x83197ef0
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP2
0x16c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x18a MUL
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x4
0x18f ADD
0x190 DUP1
0x191 SWAP1
0x192 POP
0x193 PUSH1 0x0
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 DUP4
0x19a SUB
0x19b DUP2
0x19c PUSH1 0x0
0x19e DUP8
0x19f DUP1
0x1a0 EXTCODESIZE
0x1a1 ISZERO
0x1a2 PUSH2 0x0
0x1a5 JUMPI
---
0x14d: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x162: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x163: V80 = 0x83197ef0
0x168: V81 = 0x40
0x16a: V82 = M[0x40]
0x16c: V83 = 0x100000000000000000000000000000000000000000000000000000000
0x18a: V84 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x83197ef0
0x18c: M[V82] = 0x83197ef000000000000000000000000000000000000000000000000000000000
0x18d: V85 = 0x4
0x18f: V86 = ADD 0x4 V82
0x193: V87 = 0x0
0x195: V88 = 0x40
0x197: V89 = M[0x40]
0x19a: V90 = SUB V86 V89
0x19c: V91 = 0x0
0x1a0: V92 = EXTCODESIZE V79
0x1a1: V93 = ISZERO V92
0x1a2: V94 = 0x0
0x1a5: THROWI V93
---
Entry stack: [S5, 0x55, V32, V56, 0x93cca918, V63]
Stack pops: 4
Stack additions: [S3, V79, 0x83197ef0, V86, 0x0, V89, V90, V89, 0x0, V79]
Exit stack: [S5, 0x55, V32, V79, 0x83197ef0, V86, 0x0, V89, V90, V89, 0x0, V79]

================================

Block 0x1a6
[0x1a6:0x1af]
---
Predecessors: [0x149]
Successors: [0x1b0]
---
0x1a6 PUSH1 0x32
0x1a8 GAS
0x1a9 SUB
0x1aa CALL
0x1ab ISZERO
0x1ac PUSH2 0x0
0x1af JUMPI
---
0x1a6: V95 = 0x32
0x1a8: V96 = GAS
0x1a9: V97 = SUB V96 0x32
0x1aa: V98 = CALL V97 V79 0x0 V89 V90 V89 0x0
0x1ab: V99 = ISZERO V98
0x1ac: V100 = 0x0
0x1af: THROWI V99
---
Entry stack: [S11, 0x55, V32, V79, 0x83197ef0, V86, 0x0, V89, V90, V89, 0x0, V79]
Stack pops: 6
Stack additions: []
Exit stack: [S11, 0x55, V32, V79, 0x83197ef0, V86]

================================

Block 0x1b0
[0x1b0:0x229]
---
Predecessors: [0x1a6]
Successors: [0x22a, 0x22e]
---
0x1b0 POP
0x1b1 POP
0x1b2 POP
0x1b3 PUSH1 0x0
0x1b5 PUSH1 0x0
0x1b7 SWAP1
0x1b8 SLOAD
0x1b9 SWAP1
0x1ba PUSH2 0x100
0x1bd EXP
0x1be SWAP1
0x1bf DIV
0x1c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d5 AND
0x1d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1eb AND
0x1ec PUSH2 0x8fc
0x1ef ADDRESS
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 AND
0x206 BALANCE
0x207 SWAP1
0x208 DUP2
0x209 ISZERO
0x20a MUL
0x20b SWAP1
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 SWAP1
0x211 POP
0x212 PUSH1 0x0
0x214 PUSH1 0x40
0x216 MLOAD
0x217 DUP1
0x218 DUP4
0x219 SUB
0x21a DUP2
0x21b DUP6
0x21c DUP9
0x21d DUP9
0x21e CALL
0x21f SWAP4
0x220 POP
0x221 POP
0x222 POP
0x223 POP
0x224 ISZERO
0x225 ISZERO
0x226 PUSH2 0x22e
0x229 JUMPI
---
0x1b3: V101 = 0x0
0x1b5: V102 = 0x0
0x1b8: V103 = S[0x0]
0x1ba: V104 = 0x100
0x1bd: V105 = EXP 0x100 0x0
0x1bf: V106 = DIV V103 0x1
0x1c0: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1d6: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1ec: V111 = 0x8fc
0x1ef: V112 = ADDRESS
0x1f0: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x206: V115 = BALANCE V114
0x209: V116 = ISZERO V115
0x20a: V117 = MUL V116 0x8fc
0x20c: V118 = 0x40
0x20e: V119 = M[0x40]
0x212: V120 = 0x0
0x214: V121 = 0x40
0x216: V122 = M[0x40]
0x219: V123 = SUB V119 V122
0x21e: V124 = CALL V117 V110 V115 V122 V123 V122 0x0
0x224: V125 = ISZERO V124
0x225: V126 = ISZERO V125
0x226: V127 = 0x22e
0x229: JUMPI 0x22e V126
---
Entry stack: [S5, 0x55, V32, V79, 0x83197ef0, V86]
Stack pops: 3
Stack additions: []
Exit stack: [S5, 0x55, V32]

================================

Block 0x22a
[0x22a:0x22d]
---
Predecessors: [0x1b0]
Successors: []
---
0x22a PUSH2 0x0
0x22d JUMP
---
0x22a: V128 = 0x0
0x22d: THROW 
---
Entry stack: [S2, 0x55, V32]
Stack pops: 0
Stack additions: []
Exit stack: [S2, 0x55, V32]

================================

Block 0x22e
[0x22e:0x22e]
---
Predecessors: [0x1b0]
Successors: [0x22f]
---
0x22e JUMPDEST
---
0x22e: JUMPDEST 
---
Entry stack: [S2, 0x55, V32]
Stack pops: 0
Stack additions: []
Exit stack: [S2, 0x55, V32]

================================

Block 0x22f
[0x22f:0x231]
---
Predecessors: [0x22e]
Successors: [0x55]
---
0x22f JUMPDEST
0x230 POP
0x231 JUMP
---
0x22f: JUMPDEST 
0x231: JUMP 0x55
---
Entry stack: [S2, 0x55, V32]
Stack pops: 2
Stack additions: []
Exit stack: [S2]

================================

Block 0x232
[0x232:0x288]
---
Predecessors: [0x5d]
Successors: [0x289, 0x2c3]
---
0x232 JUMPDEST
0x233 PUSH1 0x0
0x235 PUSH1 0x0
0x237 SWAP1
0x238 SLOAD
0x239 SWAP1
0x23a PUSH2 0x100
0x23d EXP
0x23e SWAP1
0x23f DIV
0x240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x255 AND
0x256 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26b AND
0x26c CALLER
0x26d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x282 AND
0x283 EQ
0x284 ISZERO
0x285 PUSH2 0x2c3
0x288 JUMPI
---
0x232: JUMPDEST 
0x233: V129 = 0x0
0x235: V130 = 0x0
0x238: V131 = S[0x0]
0x23a: V132 = 0x100
0x23d: V133 = EXP 0x100 0x0
0x23f: V134 = DIV V131 0x1
0x240: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x255: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x256: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x26c: V139 = CALLER
0x26d: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x282: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x283: V142 = EQ V141 V138
0x284: V143 = ISZERO V142
0x285: V144 = 0x2c3
0x288: JUMPI 0x2c3 V143
---
Entry stack: [V8, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x64]

================================

Block 0x289
[0x289:0x2c2]
---
Predecessors: [0x232]
Successors: []
---
0x289 PUSH1 0x0
0x28b PUSH1 0x0
0x28d SWAP1
0x28e SLOAD
0x28f SWAP1
0x290 PUSH2 0x100
0x293 EXP
0x294 SWAP1
0x295 DIV
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c1 AND
0x2c2 SELFDESTRUCT
---
0x289: V145 = 0x0
0x28b: V146 = 0x0
0x28e: V147 = S[0x0]
0x290: V148 = 0x100
0x293: V149 = EXP 0x100 0x0
0x295: V150 = DIV V147 0x1
0x296: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2ac: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2c2: SELFDESTRUCT V154
---
Entry stack: [V8, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x64]

================================

Block 0x2c3
[0x2c3:0x2c3]
---
Predecessors: [0x232]
Successors: [0x2c4]
---
0x2c3 JUMPDEST
---
0x2c3: JUMPDEST 
---
Entry stack: [V8, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x64]

================================

Block 0x2c4
[0x2c4:0x2c5]
---
Predecessors: [0x2c3]
Successors: [0x64]
---
0x2c4 JUMPDEST
0x2c5 JUMP
---
0x2c4: JUMPDEST 
0x2c5: JUMP 0x64
---
Entry stack: [V8, 0x64]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x2c6
[0x2c6:0x320]
---
Predecessors: []
Successors: [0x321]
---
0x2c6 PUSH1 0x60
0x2c8 PUSH1 0x40
0x2ca MSTORE
0x2cb PUSH20 0x7b4700f2a2e0765aab00b082613b417cecd0f9f0
0x2e0 PUSH1 0x0
0x2e2 PUSH1 0x0
0x2e4 PUSH2 0x100
0x2e7 EXP
0x2e8 DUP2
0x2e9 SLOAD
0x2ea DUP2
0x2eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x300 MUL
0x301 NOT
0x302 AND
0x303 SWAP1
0x304 DUP4
0x305 PUSH13 0x1000000000000000000000000
0x313 SWAP1
0x314 DUP2
0x315 MUL
0x316 DIV
0x317 MUL
0x318 OR
0x319 SWAP1
0x31a SSTORE
0x31b POP
0x31c CALLVALUE
0x31d PUSH2 0x0
0x320 JUMPI
---
0x2c6: V155 = 0x60
0x2c8: V156 = 0x40
0x2ca: M[0x40] = 0x60
0x2cb: V157 = 0x7b4700f2a2e0765aab00b082613b417cecd0f9f0
0x2e0: V158 = 0x0
0x2e2: V159 = 0x0
0x2e4: V160 = 0x100
0x2e7: V161 = EXP 0x100 0x0
0x2e9: V162 = S[0x0]
0x2eb: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x300: V164 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x301: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x302: V166 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V162
0x305: V167 = 0x1000000000000000000000000
0x315: V168 = MUL 0x1000000000000000000000000 0x7b4700f2a2e0765aab00b082613b417cecd0f9f0
0x316: V169 = DIV 0x7b4700f2a2e0765aab00b082613b417cecd0f9f0000000000000000000000000 0x1000000000000000000000000
0x317: V170 = MUL 0x7b4700f2a2e0765aab00b082613b417cecd0f9f0 0x1
0x318: V171 = OR 0x7b4700f2a2e0765aab00b082613b417cecd0f9f0 V166
0x31a: S[0x0] = V171
0x31c: V172 = CALLVALUE
0x31d: V173 = 0x0
0x320: THROWI V172
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x321
[0x321:0x35e]
---
Predecessors: [0x2c6]
Successors: [0x35f]
---
0x321 JUMPDEST
0x322 CALLER
0x323 PUSH1 0x1
0x325 PUSH1 0x0
0x327 PUSH2 0x100
0x32a EXP
0x32b DUP2
0x32c SLOAD
0x32d DUP2
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 MUL
0x344 NOT
0x345 AND
0x346 SWAP1
0x347 DUP4
0x348 PUSH13 0x1000000000000000000000000
0x356 SWAP1
0x357 DUP2
0x358 MUL
0x359 DIV
0x35a MUL
0x35b OR
0x35c SWAP1
0x35d SSTORE
0x35e POP
---
0x321: JUMPDEST 
0x322: V174 = CALLER
0x323: V175 = 0x1
0x325: V176 = 0x0
0x327: V177 = 0x100
0x32a: V178 = EXP 0x100 0x0
0x32c: V179 = S[0x1]
0x32e: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V181 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x344: V182 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x345: V183 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V179
0x348: V184 = 0x1000000000000000000000000
0x358: V185 = MUL 0x1000000000000000000000000 V174
0x359: V186 = DIV V185 0x1000000000000000000000000
0x35a: V187 = MUL V186 0x1
0x35b: V188 = OR V187 V183
0x35d: S[0x1] = V188
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x35f
[0x35f:0x35f]
---
Predecessors: [0x321]
Successors: [0x360]
---
0x35f JUMPDEST
---
0x35f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x360
[0x360:0x378]
---
Predecessors: [0x35f]
Successors: [0x44, 0x379]
---
0x360 JUMPDEST
0x361 PUSH2 0x1fb
0x364 DUP1
0x365 PUSH2 0xa8
0x368 PUSH1 0x0
0x36a CODECOPY
0x36b PUSH1 0x0
0x36d RETURN
0x36e PUSH1 0x60
0x370 PUSH1 0x40
0x372 MSTORE
0x373 CALLDATASIZE
0x374 ISZERO
0x375 PUSH2 0x44
0x378 JUMPI
---
0x360: JUMPDEST 
0x361: V189 = 0x1fb
0x365: V190 = 0xa8
0x368: V191 = 0x0
0x36a: CODECOPY 0x0 0xa8 0x1fb
0x36b: V192 = 0x0
0x36d: RETURN 0x0 0x1fb
0x36e: V193 = 0x60
0x370: V194 = 0x40
0x372: M[0x40] = 0x60
0x373: V195 = CALLDATASIZE
0x374: V196 = ISZERO V195
0x375: V197 = 0x44
0x378: JUMPI 0x44 V196
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x379
[0x379:0x3a6]
---
Predecessors: [0x360]
Successors: [0x4d, 0x3a7]
---
0x379 PUSH1 0x0
0x37b CALLDATALOAD
0x37c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x39a SWAP1
0x39b DIV
0x39c DUP1
0x39d PUSH4 0x83197ef0
0x3a2 EQ
0x3a3 PUSH2 0x4d
0x3a6 JUMPI
---
0x379: V198 = 0x0
0x37b: V199 = CALLDATALOAD 0x0
0x37c: V200 = 0x100000000000000000000000000000000000000000000000000000000
0x39b: V201 = DIV V199 0x100000000000000000000000000000000000000000000000000000000
0x39d: V202 = 0x83197ef0
0x3a2: V203 = EQ 0x83197ef0 V201
0x3a3: V204 = 0x4d
0x3a6: JUMPI 0x4d V203
---
Entry stack: []
Stack pops: 0
Stack additions: [V201]
Exit stack: [V201]

================================

Block 0x3a7
[0x3a7:0x3b1]
---
Predecessors: [0x379]
Successors: [0x3b2]
---
0x3a7 DUP1
0x3a8 PUSH4 0x93cca918
0x3ad EQ
0x3ae PUSH2 0x5c
0x3b1 JUMPI
---
0x3a8: V205 = 0x93cca918
0x3ad: V206 = EQ 0x93cca918 V201
0x3ae: V207 = 0x5c
0x3b1: THROWI V206
---
Entry stack: [V201]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V201]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x3a7]
Successors: [0x3b6]
---
0x3b2 JUMPDEST
0x3b3 PUSH2 0x4b
---
0x3b2: JUMPDEST 
0x3b3: V208 = 0x4b
---
Entry stack: [V201]
Stack pops: 0
Stack additions: [0x4b]
Exit stack: [V201, 0x4b]

================================

Block 0x3b6
[0x3b6:0x3b6]
---
Predecessors: [0x3b2]
Successors: [0x3b7]
---
0x3b6 JUMPDEST
---
0x3b6: JUMPDEST 
---
Entry stack: [V201, 0x4b]
Stack pops: 0
Stack additions: []
Exit stack: [V201, 0x4b]

================================

Block 0x3b7
[0x3b7:0x3b8]
---
Predecessors: [0x3b6]
Successors: [0x4b]
---
0x3b7 JUMPDEST
0x3b8 JUMP
---
0x3b7: JUMPDEST 
0x3b8: JUMP 0x4b
---
Entry stack: [V201, 0x4b]
Stack pops: 1
Stack additions: []
Exit stack: [V201]

================================

Block 0x3b9
[0x3b9:0x3c0]
---
Predecessors: []
Successors: [0x3c1]
---
0x3b9 JUMPDEST
0x3ba STOP
0x3bb JUMPDEST
0x3bc CALLVALUE
0x3bd PUSH2 0x0
0x3c0 JUMPI
---
0x3b9: JUMPDEST 
0x3ba: STOP 
0x3bb: JUMPDEST 
0x3bc: V209 = CALLVALUE
0x3bd: V210 = 0x0
0x3c0: THROWI V209
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3c1
[0x3c1:0x3cf]
---
Predecessors: [0x3b9]
Successors: [0x3d0]
---
0x3c1 PUSH2 0x5a
0x3c4 PUSH2 0x6b
0x3c7 JUMP
0x3c8 JUMPDEST
0x3c9 STOP
0x3ca JUMPDEST
0x3cb CALLVALUE
0x3cc PUSH2 0x0
0x3cf JUMPI
---
0x3c1: V211 = 0x5a
0x3c4: V212 = 0x6b
0x3c7: THROW 
0x3c8: JUMPDEST 
0x3c9: STOP 
0x3ca: JUMPDEST 
0x3cb: V213 = CALLVALUE
0x3cc: V214 = 0x0
0x3cf: THROWI V213
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5a]
Exit stack: []

================================

Block 0x3d0
[0x3d0:0x42f]
---
Predecessors: [0x3c1]
Successors: [0x430]
---
0x3d0 PUSH2 0x69
0x3d3 PUSH2 0xff
0x3d6 JUMP
0x3d7 JUMPDEST
0x3d8 STOP
0x3d9 JUMPDEST
0x3da PUSH1 0x1
0x3dc PUSH1 0x0
0x3de SWAP1
0x3df SLOAD
0x3e0 SWAP1
0x3e1 PUSH2 0x100
0x3e4 EXP
0x3e5 SWAP1
0x3e6 DIV
0x3e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fc AND
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 CALLER
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a EQ
0x42b ISZERO
0x42c PUSH2 0xfc
0x42f JUMPI
---
0x3d0: V215 = 0x69
0x3d3: V216 = 0xff
0x3d6: THROW 
0x3d7: JUMPDEST 
0x3d8: STOP 
0x3d9: JUMPDEST 
0x3da: V217 = 0x1
0x3dc: V218 = 0x0
0x3df: V219 = S[0x1]
0x3e1: V220 = 0x100
0x3e4: V221 = EXP 0x100 0x0
0x3e6: V222 = DIV V219 0x1
0x3e7: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3fd: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x413: V227 = CALLER
0x414: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x42a: V230 = EQ V229 V226
0x42b: V231 = ISZERO V230
0x42c: V232 = 0xfc
0x42f: THROWI V231
---
Entry stack: []
Stack pops: 0
Stack additions: [0x69]
Exit stack: []

================================

Block 0x430
[0x430:0x46a]
---
Predecessors: [0x3d0]
Successors: [0x46b]
---
0x430 PUSH1 0x1
0x432 PUSH1 0x0
0x434 SWAP1
0x435 SLOAD
0x436 SWAP1
0x437 PUSH2 0x100
0x43a EXP
0x43b SWAP1
0x43c DIV
0x43d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x452 AND
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 AND
0x469 SELFDESTRUCT
0x46a JUMPDEST
---
0x430: V233 = 0x1
0x432: V234 = 0x0
0x435: V235 = S[0x1]
0x437: V236 = 0x100
0x43a: V237 = EXP 0x100 0x0
0x43c: V238 = DIV V235 0x1
0x43d: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x452: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x453: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x469: SELFDESTRUCT V242
0x46a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x46b
[0x46b:0x561]
---
Predecessors: [0x430]
Successors: [0x562]
---
0x46b JUMPDEST
0x46c JUMP
0x46d JUMPDEST
0x46e PUSH1 0x0
0x470 PUSH1 0x0
0x472 SWAP1
0x473 SLOAD
0x474 SWAP1
0x475 PUSH2 0x100
0x478 EXP
0x479 SWAP1
0x47a DIV
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a6 AND
0x4a7 PUSH3 0x30d40
0x4ab ADDRESS
0x4ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c1 AND
0x4c2 BALANCE
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 DUP1
0x4c7 DUP1
0x4c8 PUSH32 0x5f6170695f506c61636542657428290000000000000000000000000000000000
0x4e9 DUP2
0x4ea MSTORE
0x4eb PUSH1 0x20
0x4ed ADD
0x4ee POP
0x4ef PUSH1 0xf
0x4f1 ADD
0x4f2 SWAP1
0x4f3 POP
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 DUP1
0x4f8 SWAP2
0x4f9 SUB
0x4fa SWAP1
0x4fb SHA3
0x4fc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x51a SWAP1
0x51b DIV
0x51c SWAP2
0x51d SWAP1
0x51e PUSH1 0x40
0x520 MLOAD
0x521 DUP4
0x522 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x540 MUL
0x541 DUP2
0x542 MSTORE
0x543 PUSH1 0x4
0x545 ADD
0x546 DUP1
0x547 SWAP1
0x548 POP
0x549 PUSH1 0x0
0x54b PUSH1 0x40
0x54d MLOAD
0x54e DUP1
0x54f DUP4
0x550 SUB
0x551 DUP2
0x552 DUP6
0x553 DUP10
0x554 DUP9
0x555 CALL
0x556 SWAP5
0x557 POP
0x558 POP
0x559 POP
0x55a POP
0x55b POP
0x55c ISZERO
0x55d ISZERO
0x55e PUSH2 0x1f8
0x561 JUMPI
---
0x46b: JUMPDEST 
0x46c: JUMP S0
0x46d: JUMPDEST 
0x46e: V243 = 0x0
0x470: V244 = 0x0
0x473: V245 = S[0x0]
0x475: V246 = 0x100
0x478: V247 = EXP 0x100 0x0
0x47a: V248 = DIV V245 0x1
0x47b: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x491: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a6: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x4a7: V253 = 0x30d40
0x4ab: V254 = ADDRESS
0x4ac: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x4c2: V257 = BALANCE V256
0x4c3: V258 = 0x40
0x4c5: V259 = M[0x40]
0x4c8: V260 = 0x5f6170695f506c61636542657428290000000000000000000000000000000000
0x4ea: M[V259] = 0x5f6170695f506c61636542657428290000000000000000000000000000000000
0x4eb: V261 = 0x20
0x4ed: V262 = ADD 0x20 V259
0x4ef: V263 = 0xf
0x4f1: V264 = ADD 0xf V259
0x4f4: V265 = 0x40
0x4f6: V266 = M[0x40]
0x4f9: V267 = SUB V264 V266
0x4fb: V268 = SHA3 V266 V267
0x4fc: V269 = 0x100000000000000000000000000000000000000000000000000000000
0x51b: V270 = DIV V268 0x100000000000000000000000000000000000000000000000000000000
0x51e: V271 = 0x40
0x520: V272 = M[0x40]
0x522: V273 = 0x100000000000000000000000000000000000000000000000000000000
0x540: V274 = MUL 0x100000000000000000000000000000000000000000000000000000000 V270
0x542: M[V272] = V274
0x543: V275 = 0x4
0x545: V276 = ADD 0x4 V272
0x549: V277 = 0x0
0x54b: V278 = 0x40
0x54d: V279 = M[0x40]
0x550: V280 = SUB V276 V279
0x555: V281 = CALL 0x30d40 V252 V257 V279 V280 V279 0x0
0x55c: V282 = ISZERO V281
0x55d: V283 = ISZERO V282
0x55e: V284 = 0x1f8
0x561: THROWI V283
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x562
[0x562:0x566]
---
Predecessors: [0x46b]
Successors: [0x567]
---
0x562 PUSH2 0x0
0x565 JUMP
0x566 JUMPDEST
---
0x562: V285 = 0x0
0x565: THROW 
0x566: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x567
[0x567:0x568]
---
Predecessors: [0x562]
Successors: []
Has unresolved jump.
---
0x567 JUMPDEST
0x568 JUMP
---
0x567: JUMPDEST 
0x568: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x4266049a
Entry block: 0x4d
Exit block: 0x55
Body: 0x4d, 0x55, 0x66, 0x89, 0xe0, 0xe4, 0x13f, 0x149, 0x1a6, 0x1b0, 0x22a, 0x22e, 0x22f

Function 1:
Public function signature: 0x83197ef0
Entry block: 0x57
Exit block: 0x64
Body: 0x57, 0x5d, 0x64, 0x232, 0x289, 0x2c3, 0x2c4

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x4b
Body: 0x44, 0x48, 0x49, 0x4b

