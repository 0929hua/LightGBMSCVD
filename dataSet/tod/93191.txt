Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xaf]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2170ebf7
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xaf
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2170ebf7
0x20: V14 = EQ V12 0x2170ebf7
0x21: V15 = 0xaf
0x24: JUMPI 0xaf V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd6]
---
0x25 DUP1
0x26 PUSH4 0x38d52e0f
0x2b EQ
0x2c PUSH2 0xd6
0x2f JUMPI
---
0x26: V16 = 0x38d52e0f
0x2b: V17 = EQ 0x38d52e0f V12
0x2c: V18 = 0xd6
0x2f: JUMPI 0xd6 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x102]
---
0x30 DUP1
0x31 PUSH4 0x4b750334
0x36 EQ
0x37 PUSH2 0x102
0x3a JUMPI
---
0x31: V19 = 0x4b750334
0x36: V20 = EQ 0x4b750334 V12
0x37: V21 = 0x102
0x3a: JUMPI 0x102 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x124]
---
0x3b DUP1
0x3c PUSH4 0x4ca50f59
0x41 EQ
0x42 PUSH2 0x124
0x45 JUMPI
---
0x3c: V22 = 0x4ca50f59
0x41: V23 = EQ 0x4ca50f59 V12
0x42: V24 = 0x124
0x45: JUMPI 0x124 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x148]
---
0x46 DUP1
0x47 PUSH4 0x52954e5a
0x4c EQ
0x4d PUSH2 0x148
0x50 JUMPI
---
0x47: V25 = 0x52954e5a
0x4c: V26 = EQ 0x52954e5a V12
0x4d: V27 = 0x148
0x50: JUMPI 0x148 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x17b]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x17b
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x17b
0x5b: JUMPI 0x17b V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a7]
---
0x5c DUP1
0x5d PUSH4 0x976a8435
0x62 EQ
0x63 PUSH2 0x1a7
0x66 JUMPI
---
0x5d: V31 = 0x976a8435
0x62: V32 = EQ 0x976a8435 V12
0x63: V33 = 0x1a7
0x66: JUMPI 0x1a7 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c9]
---
0x67 DUP1
0x68 PUSH4 0xc34764cf
0x6d EQ
0x6e PUSH2 0x1c9
0x71 JUMPI
---
0x68: V34 = 0xc34764cf
0x6d: V35 = EQ 0xc34764cf V12
0x6e: V36 = 0x1c9
0x71: JUMPI 0x1c9 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1fc]
---
0x72 DUP1
0x73 PUSH4 0xc60ccb0e
0x78 EQ
0x79 PUSH2 0x1fc
0x7c JUMPI
---
0x73: V37 = 0xc60ccb0e
0x78: V38 = EQ 0xc60ccb0e V12
0x79: V39 = 0x1fc
0x7c: JUMPI 0x1fc V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x206]
---
0x7d DUP1
0x7e PUSH4 0xcd53a3b7
0x83 EQ
0x84 PUSH2 0x206
0x87 JUMPI
---
0x7e: V40 = 0xcd53a3b7
0x83: V41 = EQ 0xcd53a3b7 V12
0x84: V42 = 0x206
0x87: JUMPI 0x206 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x22d]
---
0x88 DUP1
0x89 PUSH4 0xce5e84a3
0x8e EQ
0x8f PUSH2 0x22d
0x92 JUMPI
---
0x89: V43 = 0xce5e84a3
0x8e: V44 = EQ 0xce5e84a3 V12
0x8f: V45 = 0x22d
0x92: JUMPI 0x22d V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x244]
---
0x93 DUP1
0x94 PUSH4 0xf2fde38b
0x99 EQ
0x9a PUSH2 0x244
0x9d JUMPI
---
0x94: V46 = 0xf2fde38b
0x99: V47 = EQ 0xf2fde38b V12
0x9a: V48 = 0x244
0x9d: JUMPI 0x244 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x0, 0x93]
Successors: [0xa2]
---
0x9e JUMPDEST
0x9f PUSH2 0xad
---
0x9e: JUMPDEST 
0x9f: V49 = 0xad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V12, 0xad]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x9e]
Successors: [0x262]
---
0xa2 JUMPDEST
0xa3 PUSH2 0xaa
0xa6 PUSH2 0x262
0xa9 JUMP
---
0xa2: JUMPDEST 
0xa3: V50 = 0xaa
0xa6: V51 = 0x262
0xa9: JUMP 0x262
---
Entry stack: [V12, 0xad]
Stack pops: 0
Stack additions: [0xaa]
Exit stack: [V12, 0xad, 0xaa]

================================

Block 0xaa
[0xaa:0xaa]
---
Predecessors: [0x4a4]
Successors: [0xab]
---
0xaa JUMPDEST
---
0xaa: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0xaa]
Successors: [0xad]
---
0xab JUMPDEST
0xac JUMP
---
0xab: JUMPDEST 
0xac: JUMP S0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0xab, 0x4a4, 0x94e, 0x9d0]
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xaf
[0xaf:0xb5]
---
Predecessors: [0xb]
Successors: [0xb6, 0xb7]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 ISZERO
0xb2 PUSH2 0xb7
0xb5 JUMPI
---
0xaf: JUMPDEST 
0xb0: V52 = CALLVALUE
0xb1: V53 = ISZERO V52
0xb2: V54 = 0xb7
0xb5: JUMPI 0xb7 V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb6
[0xb6:0xb6]
---
Predecessors: [0xaf]
Successors: []
---
0xb6 INVALID
---
0xb6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xaf]
Successors: [0x4a9]
---
0xb7 JUMPDEST
0xb8 PUSH2 0xc2
0xbb PUSH1 0x4
0xbd CALLDATALOAD
0xbe PUSH2 0x4a9
0xc1 JUMP
---
0xb7: JUMPDEST 
0xb8: V55 = 0xc2
0xbb: V56 = 0x4
0xbd: V57 = CALLDATALOAD 0x4
0xbe: V58 = 0x4a9
0xc1: JUMP 0x4a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V57]
Exit stack: [V12, 0xc2, V57]

================================

Block 0xc2
[0xc2:0xd5]
---
Predecessors: [0x537, 0x551, 0x721, 0x8e2]
Successors: []
---
0xc2 JUMPDEST
0xc3 PUSH1 0x40
0xc5 DUP1
0xc6 MLOAD
0xc7 SWAP2
0xc8 ISZERO
0xc9 ISZERO
0xca DUP3
0xcb MSTORE
0xcc MLOAD
0xcd SWAP1
0xce DUP2
0xcf SWAP1
0xd0 SUB
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 RETURN
---
0xc2: JUMPDEST 
0xc3: V59 = 0x40
0xc6: V60 = M[0x40]
0xc8: V61 = ISZERO S0
0xc9: V62 = ISZERO V61
0xcb: M[V60] = V62
0xcc: V63 = M[0x40]
0xd0: V64 = SUB V60 V63
0xd1: V65 = 0x20
0xd3: V66 = ADD 0x20 V64
0xd5: RETURN V63 V66
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x25]
Successors: [0xdd, 0xde]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xde
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V67 = CALLVALUE
0xd8: V68 = ISZERO V67
0xd9: V69 = 0xde
0xdc: JUMPI 0xde V68
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xdd]
---
Predecessors: [0xd6]
Successors: []
---
0xdd INVALID
---
0xdd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd6]
Successors: [0x53c]
---
0xde JUMPDEST
0xdf PUSH2 0xe6
0xe2 PUSH2 0x53c
0xe5 JUMP
---
0xde: JUMPDEST 
0xdf: V70 = 0xe6
0xe2: V71 = 0x53c
0xe5: JUMP 0x53c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0xe6
[0xe6:0x101]
---
Predecessors: [0x53c, 0x727]
Successors: []
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 DUP1
0xea MLOAD
0xeb PUSH1 0x1
0xed PUSH1 0xa0
0xef PUSH1 0x2
0xf1 EXP
0xf2 SUB
0xf3 SWAP1
0xf4 SWAP3
0xf5 AND
0xf6 DUP3
0xf7 MSTORE
0xf8 MLOAD
0xf9 SWAP1
0xfa DUP2
0xfb SWAP1
0xfc SUB
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 RETURN
---
0xe6: JUMPDEST 
0xe7: V72 = 0x40
0xea: V73 = M[0x40]
0xeb: V74 = 0x1
0xed: V75 = 0xa0
0xef: V76 = 0x2
0xf1: V77 = EXP 0x2 0xa0
0xf2: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf5: V79 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf7: M[V73] = V79
0xf8: V80 = M[0x40]
0xfc: V81 = SUB V73 V80
0xfd: V82 = 0x20
0xff: V83 = ADD 0x20 V81
0x101: RETURN V80 V83
---
Entry stack: [V12, 0xe6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0x102
[0x102:0x108]
---
Predecessors: [0x30]
Successors: [0x109, 0x10a]
---
0x102 JUMPDEST
0x103 CALLVALUE
0x104 ISZERO
0x105 PUSH2 0x10a
0x108 JUMPI
---
0x102: JUMPDEST 
0x103: V84 = CALLVALUE
0x104: V85 = ISZERO V84
0x105: V86 = 0x10a
0x108: JUMPI 0x10a V85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x109
[0x109:0x109]
---
Predecessors: [0x102]
Successors: []
---
0x109 INVALID
---
0x109: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10a
[0x10a:0x111]
---
Predecessors: [0x102]
Successors: [0x54b]
---
0x10a JUMPDEST
0x10b PUSH2 0x112
0x10e PUSH2 0x54b
0x111 JUMP
---
0x10a: JUMPDEST 
0x10b: V87 = 0x112
0x10e: V88 = 0x54b
0x111: JUMP 0x54b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x112]
Exit stack: [V12, 0x112]

================================

Block 0x112
[0x112:0x123]
---
Predecessors: [0x54b, 0x736]
Successors: []
---
0x112 JUMPDEST
0x113 PUSH1 0x40
0x115 DUP1
0x116 MLOAD
0x117 SWAP2
0x118 DUP3
0x119 MSTORE
0x11a MLOAD
0x11b SWAP1
0x11c DUP2
0x11d SWAP1
0x11e SUB
0x11f PUSH1 0x20
0x121 ADD
0x122 SWAP1
0x123 RETURN
---
0x112: JUMPDEST 
0x113: V89 = 0x40
0x116: V90 = M[0x40]
0x119: M[V90] = S0
0x11a: V91 = M[0x40]
0x11e: V92 = SUB V90 V91
0x11f: V93 = 0x20
0x121: V94 = ADD 0x20 V92
0x123: RETURN V91 V94
---
Entry stack: [V12, 0x112, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x112]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x3b]
Successors: [0x12b, 0x12c]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12c
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V95 = CALLVALUE
0x126: V96 = ISZERO V95
0x127: V97 = 0x12c
0x12a: JUMPI 0x12c V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12b
[0x12b:0x12b]
---
Predecessors: [0x124]
Successors: []
---
0x12b INVALID
---
0x12b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x124]
Successors: [0x551]
---
0x12c JUMPDEST
0x12d PUSH2 0xc2
0x130 PUSH2 0x551
0x133 JUMP
---
0x12c: JUMPDEST 
0x12d: V98 = 0xc2
0x130: V99 = 0x551
0x133: JUMP 0x551
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V12, 0xc2]

================================

Block 0x134
[0x134:0x147]
---
Predecessors: []
Successors: []
---
0x134 JUMPDEST
0x135 PUSH1 0x40
0x137 DUP1
0x138 MLOAD
0x139 SWAP2
0x13a ISZERO
0x13b ISZERO
0x13c DUP3
0x13d MSTORE
0x13e MLOAD
0x13f SWAP1
0x140 DUP2
0x141 SWAP1
0x142 SUB
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP1
0x147 RETURN
---
0x134: JUMPDEST 
0x135: V100 = 0x40
0x138: V101 = M[0x40]
0x13a: V102 = ISZERO S0
0x13b: V103 = ISZERO V102
0x13d: M[V101] = V103
0x13e: V104 = M[0x40]
0x142: V105 = SUB V101 V104
0x143: V106 = 0x20
0x145: V107 = ADD 0x20 V105
0x147: RETURN V104 V107
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x148
[0x148:0x14e]
---
Predecessors: [0x46]
Successors: [0x14f, 0x150]
---
0x148 JUMPDEST
0x149 CALLVALUE
0x14a ISZERO
0x14b PUSH2 0x150
0x14e JUMPI
---
0x148: JUMPDEST 
0x149: V108 = CALLVALUE
0x14a: V109 = ISZERO V108
0x14b: V110 = 0x150
0x14e: JUMPI 0x150 V109
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14f
[0x14f:0x14f]
---
Predecessors: [0x148]
Successors: []
---
0x14f INVALID
---
0x14f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x150
[0x150:0x166]
---
Predecessors: [0x148]
Successors: [0x55a]
---
0x150 JUMPDEST
0x151 PUSH2 0xc2
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c PUSH1 0x4
0x15e CALLDATALOAD
0x15f AND
0x160 PUSH1 0x24
0x162 CALLDATALOAD
0x163 PUSH2 0x55a
0x166 JUMP
---
0x150: JUMPDEST 
0x151: V111 = 0xc2
0x154: V112 = 0x1
0x156: V113 = 0xa0
0x158: V114 = 0x2
0x15a: V115 = EXP 0x2 0xa0
0x15b: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V117 = 0x4
0x15e: V118 = CALLDATALOAD 0x4
0x15f: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x160: V120 = 0x24
0x162: V121 = CALLDATALOAD 0x24
0x163: V122 = 0x55a
0x166: JUMP 0x55a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V119, V121]
Exit stack: [V12, 0xc2, V119, V121]

================================

Block 0x167
[0x167:0x17a]
---
Predecessors: []
Successors: []
---
0x167 JUMPDEST
0x168 PUSH1 0x40
0x16a DUP1
0x16b MLOAD
0x16c SWAP2
0x16d ISZERO
0x16e ISZERO
0x16f DUP3
0x170 MSTORE
0x171 MLOAD
0x172 SWAP1
0x173 DUP2
0x174 SWAP1
0x175 SUB
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP1
0x17a RETURN
---
0x167: JUMPDEST 
0x168: V123 = 0x40
0x16b: V124 = M[0x40]
0x16d: V125 = ISZERO S0
0x16e: V126 = ISZERO V125
0x170: M[V124] = V126
0x171: V127 = M[0x40]
0x175: V128 = SUB V124 V127
0x176: V129 = 0x20
0x178: V130 = ADD 0x20 V128
0x17a: RETURN V127 V130
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x51]
Successors: [0x182, 0x183]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x183
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V131 = CALLVALUE
0x17d: V132 = ISZERO V131
0x17e: V133 = 0x183
0x181: JUMPI 0x183 V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x182]
---
Predecessors: [0x17b]
Successors: []
---
0x182 INVALID
---
0x182: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x18a]
---
Predecessors: [0x17b]
Successors: [0x727]
---
0x183 JUMPDEST
0x184 PUSH2 0xe6
0x187 PUSH2 0x727
0x18a JUMP
---
0x183: JUMPDEST 
0x184: V134 = 0xe6
0x187: V135 = 0x727
0x18a: JUMP 0x727
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0x18b
[0x18b:0x1a6]
---
Predecessors: []
Successors: []
---
0x18b JUMPDEST
0x18c PUSH1 0x40
0x18e DUP1
0x18f MLOAD
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 SWAP1
0x199 SWAP3
0x19a AND
0x19b DUP3
0x19c MSTORE
0x19d MLOAD
0x19e SWAP1
0x19f DUP2
0x1a0 SWAP1
0x1a1 SUB
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 SWAP1
0x1a6 RETURN
---
0x18b: JUMPDEST 
0x18c: V136 = 0x40
0x18f: V137 = M[0x40]
0x190: V138 = 0x1
0x192: V139 = 0xa0
0x194: V140 = 0x2
0x196: V141 = EXP 0x2 0xa0
0x197: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19a: V143 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x19c: M[V137] = V143
0x19d: V144 = M[0x40]
0x1a1: V145 = SUB V137 V144
0x1a2: V146 = 0x20
0x1a4: V147 = ADD 0x20 V145
0x1a6: RETURN V144 V147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0x5c]
Successors: [0x1ae, 0x1af]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1af
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V148 = CALLVALUE
0x1a9: V149 = ISZERO V148
0x1aa: V150 = 0x1af
0x1ad: JUMPI 0x1af V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ae
[0x1ae:0x1ae]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae INVALID
---
0x1ae: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a7]
Successors: [0x736]
---
0x1af JUMPDEST
0x1b0 PUSH2 0x112
0x1b3 PUSH2 0x736
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V151 = 0x112
0x1b3: V152 = 0x736
0x1b6: JUMP 0x736
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x112]
Exit stack: [V12, 0x112]

================================

Block 0x1b7
[0x1b7:0x1c8]
---
Predecessors: []
Successors: []
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba DUP1
0x1bb MLOAD
0x1bc SWAP2
0x1bd DUP3
0x1be MSTORE
0x1bf MLOAD
0x1c0 SWAP1
0x1c1 DUP2
0x1c2 SWAP1
0x1c3 SUB
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 RETURN
---
0x1b7: JUMPDEST 
0x1b8: V153 = 0x40
0x1bb: V154 = M[0x40]
0x1be: M[V154] = S0
0x1bf: V155 = M[0x40]
0x1c3: V156 = SUB V154 V155
0x1c4: V157 = 0x20
0x1c6: V158 = ADD 0x20 V156
0x1c8: RETURN V155 V158
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1c9
[0x1c9:0x1cf]
---
Predecessors: [0x67]
Successors: [0x1d0, 0x1d1]
---
0x1c9 JUMPDEST
0x1ca CALLVALUE
0x1cb ISZERO
0x1cc PUSH2 0x1d1
0x1cf JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V159 = CALLVALUE
0x1cb: V160 = ISZERO V159
0x1cc: V161 = 0x1d1
0x1cf: JUMPI 0x1d1 V160
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d0
[0x1d0:0x1d0]
---
Predecessors: [0x1c9]
Successors: []
---
0x1d0 INVALID
---
0x1d0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d1
[0x1d1:0x1e7]
---
Predecessors: [0x1c9]
Successors: [0x73c]
---
0x1d1 JUMPDEST
0x1d2 PUSH2 0xc2
0x1d5 PUSH1 0x1
0x1d7 PUSH1 0xa0
0x1d9 PUSH1 0x2
0x1db EXP
0x1dc SUB
0x1dd PUSH1 0x4
0x1df CALLDATALOAD
0x1e0 AND
0x1e1 PUSH1 0x24
0x1e3 CALLDATALOAD
0x1e4 PUSH2 0x73c
0x1e7 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V162 = 0xc2
0x1d5: V163 = 0x1
0x1d7: V164 = 0xa0
0x1d9: V165 = 0x2
0x1db: V166 = EXP 0x2 0xa0
0x1dc: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dd: V168 = 0x4
0x1df: V169 = CALLDATALOAD 0x4
0x1e0: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V171 = 0x24
0x1e3: V172 = CALLDATALOAD 0x24
0x1e4: V173 = 0x73c
0x1e7: JUMP 0x73c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V170, V172]
Exit stack: [V12, 0xc2, V170, V172]

================================

Block 0x1e8
[0x1e8:0x1fb]
---
Predecessors: []
Successors: []
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x40
0x1eb DUP1
0x1ec MLOAD
0x1ed SWAP2
0x1ee ISZERO
0x1ef ISZERO
0x1f0 DUP3
0x1f1 MSTORE
0x1f2 MLOAD
0x1f3 SWAP1
0x1f4 DUP2
0x1f5 SWAP1
0x1f6 SUB
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP1
0x1fb RETURN
---
0x1e8: JUMPDEST 
0x1e9: V174 = 0x40
0x1ec: V175 = M[0x40]
0x1ee: V176 = ISZERO S0
0x1ef: V177 = ISZERO V176
0x1f1: M[V175] = V177
0x1f2: V178 = M[0x40]
0x1f6: V179 = SUB V175 V178
0x1f7: V180 = 0x20
0x1f9: V181 = ADD 0x20 V179
0x1fb: RETURN V178 V181
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fc
[0x1fc:0x203]
---
Predecessors: [0x72]
Successors: [0x262]
---
0x1fc JUMPDEST
0x1fd PUSH2 0xad
0x200 PUSH2 0x262
0x203 JUMP
---
0x1fc: JUMPDEST 
0x1fd: V182 = 0xad
0x200: V183 = 0x262
0x203: JUMP 0x262
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V12, 0xad]

================================

Block 0x204
[0x204:0x205]
---
Predecessors: []
Successors: []
---
0x204 JUMPDEST
0x205 STOP
---
0x204: JUMPDEST 
0x205: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x206
[0x206:0x20c]
---
Predecessors: [0x7d]
Successors: [0x20d, 0x20e]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 ISZERO
0x209 PUSH2 0x20e
0x20c JUMPI
---
0x206: JUMPDEST 
0x207: V184 = CALLVALUE
0x208: V185 = ISZERO V184
0x209: V186 = 0x20e
0x20c: JUMPI 0x20e V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20d
[0x20d:0x20d]
---
Predecessors: [0x206]
Successors: []
---
0x20d INVALID
---
0x20d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20e
[0x20e:0x218]
---
Predecessors: [0x206]
Successors: [0x819]
---
0x20e JUMPDEST
0x20f PUSH2 0xc2
0x212 PUSH1 0x4
0x214 CALLDATALOAD
0x215 PUSH2 0x819
0x218 JUMP
---
0x20e: JUMPDEST 
0x20f: V187 = 0xc2
0x212: V188 = 0x4
0x214: V189 = CALLDATALOAD 0x4
0x215: V190 = 0x819
0x218: JUMP 0x819
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V189]
Exit stack: [V12, 0xc2, V189]

================================

Block 0x219
[0x219:0x22c]
---
Predecessors: []
Successors: []
---
0x219 JUMPDEST
0x21a PUSH1 0x40
0x21c DUP1
0x21d MLOAD
0x21e SWAP2
0x21f ISZERO
0x220 ISZERO
0x221 DUP3
0x222 MSTORE
0x223 MLOAD
0x224 SWAP1
0x225 DUP2
0x226 SWAP1
0x227 SUB
0x228 PUSH1 0x20
0x22a ADD
0x22b SWAP1
0x22c RETURN
---
0x219: JUMPDEST 
0x21a: V191 = 0x40
0x21d: V192 = M[0x40]
0x21f: V193 = ISZERO S0
0x220: V194 = ISZERO V193
0x222: M[V192] = V194
0x223: V195 = M[0x40]
0x227: V196 = SUB V192 V195
0x228: V197 = 0x20
0x22a: V198 = ADD 0x20 V196
0x22c: RETURN V195 V198
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22d
[0x22d:0x233]
---
Predecessors: [0x88]
Successors: [0x234, 0x235]
---
0x22d JUMPDEST
0x22e CALLVALUE
0x22f ISZERO
0x230 PUSH2 0x235
0x233 JUMPI
---
0x22d: JUMPDEST 
0x22e: V199 = CALLVALUE
0x22f: V200 = ISZERO V199
0x230: V201 = 0x235
0x233: JUMPI 0x235 V200
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x234
[0x234:0x234]
---
Predecessors: [0x22d]
Successors: []
---
0x234 INVALID
---
0x234: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x235
[0x235:0x241]
---
Predecessors: [0x22d]
Successors: [0x8e7]
---
0x235 JUMPDEST
0x236 PUSH2 0xad
0x239 PUSH1 0x4
0x23b CALLDATALOAD
0x23c ISZERO
0x23d ISZERO
0x23e PUSH2 0x8e7
0x241 JUMP
---
0x235: JUMPDEST 
0x236: V202 = 0xad
0x239: V203 = 0x4
0x23b: V204 = CALLDATALOAD 0x4
0x23c: V205 = ISZERO V204
0x23d: V206 = ISZERO V205
0x23e: V207 = 0x8e7
0x241: JUMP 0x8e7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xad, V206]
Exit stack: [V12, 0xad, V206]

================================

Block 0x242
[0x242:0x243]
---
Predecessors: []
Successors: []
---
0x242 JUMPDEST
0x243 STOP
---
0x242: JUMPDEST 
0x243: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x244
[0x244:0x24a]
---
Predecessors: [0x93]
Successors: [0x24b, 0x24c]
---
0x244 JUMPDEST
0x245 CALLVALUE
0x246 ISZERO
0x247 PUSH2 0x24c
0x24a JUMPI
---
0x244: JUMPDEST 
0x245: V208 = CALLVALUE
0x246: V209 = ISZERO V208
0x247: V210 = 0x24c
0x24a: JUMPI 0x24c V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24b
[0x24b:0x24b]
---
Predecessors: [0x244]
Successors: []
---
0x24b INVALID
---
0x24b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24c
[0x24c:0x25f]
---
Predecessors: [0x244]
Successors: [0x951]
---
0x24c JUMPDEST
0x24d PUSH2 0xad
0x250 PUSH1 0x1
0x252 PUSH1 0xa0
0x254 PUSH1 0x2
0x256 EXP
0x257 SUB
0x258 PUSH1 0x4
0x25a CALLDATALOAD
0x25b AND
0x25c PUSH2 0x951
0x25f JUMP
---
0x24c: JUMPDEST 
0x24d: V211 = 0xad
0x250: V212 = 0x1
0x252: V213 = 0xa0
0x254: V214 = 0x2
0x256: V215 = EXP 0x2 0xa0
0x257: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x258: V217 = 0x4
0x25a: V218 = CALLDATALOAD 0x4
0x25b: V219 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V220 = 0x951
0x25f: JUMP 0x951
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xad, V219]
Exit stack: [V12, 0xad, V219]

================================

Block 0x260
[0x260:0x261]
---
Predecessors: []
Successors: []
---
0x260 JUMPDEST
0x261 STOP
---
0x260: JUMPDEST 
0x261: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x262
[0x262:0x274]
---
Predecessors: [0xa2, 0x1fc]
Successors: [0x275, 0x288]
---
0x262 JUMPDEST
0x263 PUSH1 0x4
0x265 SLOAD
0x266 PUSH1 0x0
0x268 SWAP1
0x269 DUP2
0x26a SWAP1
0x26b DUP2
0x26c SWAP1
0x26d PUSH1 0xff
0x26f AND
0x270 DUP1
0x271 PUSH2 0x288
0x274 JUMPI
---
0x262: JUMPDEST 
0x263: V221 = 0x4
0x265: V222 = S[0x4]
0x266: V223 = 0x0
0x26d: V224 = 0xff
0x26f: V225 = AND 0xff V222
0x271: V226 = 0x288
0x274: JUMPI 0x288 V225
---
Entry stack: [V12, S1, {0xaa, 0xad}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V225]
Exit stack: [V12, S1, {0xaa, 0xad}, 0x0, 0x0, 0x0, V225]

================================

Block 0x275
[0x275:0x287]
---
Predecessors: [0x262]
Successors: [0x288]
---
0x275 POP
0x276 PUSH1 0x0
0x278 SLOAD
0x279 CALLER
0x27a PUSH1 0x1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 SUB
0x282 SWAP1
0x283 DUP2
0x284 AND
0x285 SWAP2
0x286 AND
0x287 EQ
---
0x276: V227 = 0x0
0x278: V228 = S[0x0]
0x279: V229 = CALLER
0x27a: V230 = 0x1
0x27c: V231 = 0xa0
0x27e: V232 = 0x2
0x280: V233 = EXP 0x2 0xa0
0x281: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x286: V236 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x287: V237 = EQ V236 V235
---
Entry stack: [V12, S5, {0xaa, 0xad}, 0x0, 0x0, 0x0, V225]
Stack pops: 1
Stack additions: [V237]
Exit stack: [V12, S5, {0xaa, 0xad}, 0x0, 0x0, 0x0, V237]

================================

Block 0x288
[0x288:0x28d]
---
Predecessors: [0x262, 0x275]
Successors: [0x28e, 0x472]
---
0x288 JUMPDEST
0x289 ISZERO
0x28a PUSH2 0x472
0x28d JUMPI
---
0x288: JUMPDEST 
0x289: V238 = ISZERO S0
0x28a: V239 = 0x472
0x28d: JUMPI 0x472 V238
---
Entry stack: [V12, S5, {0xaa, 0xad}, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S5, {0xaa, 0xad}, 0x0, 0x0, 0x0]

================================

Block 0x28e
[0x28e:0x298]
---
Predecessors: [0x288]
Successors: [0x299, 0x29a]
---
0x28e PUSH1 0x2
0x290 SLOAD
0x291 CALLVALUE
0x292 DUP2
0x293 ISZERO
0x294 ISZERO
0x295 PUSH2 0x29a
0x298 JUMPI
---
0x28e: V240 = 0x2
0x290: V241 = S[0x2]
0x291: V242 = CALLVALUE
0x293: V243 = ISZERO V241
0x294: V244 = ISZERO V243
0x295: V245 = 0x29a
0x298: JUMPI 0x29a V244
---
Entry stack: [V12, S4, {0xaa, 0xad}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V241, V242]
Exit stack: [V12, S4, {0xaa, 0xad}, 0x0, 0x0, 0x0, V241, V242]

================================

Block 0x299
[0x299:0x299]
---
Predecessors: [0x28e]
Successors: []
---
0x299 INVALID
---
0x299: INVALID 
---
Entry stack: [V12, S6, {0xaa, 0xad}, 0x0, 0x0, 0x0, V241, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0xaa, 0xad}, 0x0, 0x0, 0x0, V241, V242]

================================

Block 0x29a
[0x29a:0x313]
---
Predecessors: [0x28e]
Successors: [0x314, 0x315]
---
0x29a JUMPDEST
0x29b DIV
0x29c SWAP3
0x29d POP
0x29e PUSH1 0x3
0x2a0 SLOAD
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0x0
0x2a5 SWAP1
0x2a6 SLOAD
0x2a7 SWAP1
0x2a8 PUSH2 0x100
0x2ab EXP
0x2ac SWAP1
0x2ad DIV
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 AND
0x2b7 PUSH1 0x1
0x2b9 PUSH1 0xa0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be SUB
0x2bf AND
0x2c0 PUSH4 0x70a08231
0x2c5 ADDRESS
0x2c6 PUSH1 0x0
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb PUSH1 0x20
0x2cd ADD
0x2ce MSTORE
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 DUP3
0x2d3 PUSH4 0xffffffff
0x2d8 AND
0x2d9 PUSH1 0xe0
0x2db PUSH1 0x2
0x2dd EXP
0x2de MUL
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x4
0x2e3 ADD
0x2e4 DUP1
0x2e5 DUP3
0x2e6 PUSH1 0x1
0x2e8 PUSH1 0xa0
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed SUB
0x2ee AND
0x2ef PUSH1 0x1
0x2f1 PUSH1 0xa0
0x2f3 PUSH1 0x2
0x2f5 EXP
0x2f6 SUB
0x2f7 AND
0x2f8 DUP2
0x2f9 MSTORE
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd SWAP2
0x2fe POP
0x2ff POP
0x300 PUSH1 0x20
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 DUP4
0x307 SUB
0x308 DUP2
0x309 PUSH1 0x0
0x30b DUP8
0x30c DUP1
0x30d EXTCODESIZE
0x30e ISZERO
0x30f ISZERO
0x310 PUSH2 0x315
0x313 JUMPI
---
0x29a: JUMPDEST 
0x29b: V246 = DIV V242 V241
0x29e: V247 = 0x3
0x2a0: V248 = S[0x3]
0x2a1: V249 = 0x1
0x2a3: V250 = 0x0
0x2a6: V251 = S[0x1]
0x2a8: V252 = 0x100
0x2ab: V253 = EXP 0x100 0x0
0x2ad: V254 = DIV V251 0x1
0x2ae: V255 = 0x1
0x2b0: V256 = 0xa0
0x2b2: V257 = 0x2
0x2b4: V258 = EXP 0x2 0xa0
0x2b5: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x2b7: V261 = 0x1
0x2b9: V262 = 0xa0
0x2bb: V263 = 0x2
0x2bd: V264 = EXP 0x2 0xa0
0x2be: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bf: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x2c0: V267 = 0x70a08231
0x2c5: V268 = ADDRESS
0x2c6: V269 = 0x0
0x2c8: V270 = 0x40
0x2ca: V271 = M[0x40]
0x2cb: V272 = 0x20
0x2cd: V273 = ADD 0x20 V271
0x2ce: M[V273] = 0x0
0x2cf: V274 = 0x40
0x2d1: V275 = M[0x40]
0x2d3: V276 = 0xffffffff
0x2d8: V277 = AND 0xffffffff 0x70a08231
0x2d9: V278 = 0xe0
0x2db: V279 = 0x2
0x2dd: V280 = EXP 0x2 0xe0
0x2de: V281 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x2e0: M[V275] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2e1: V282 = 0x4
0x2e3: V283 = ADD 0x4 V275
0x2e6: V284 = 0x1
0x2e8: V285 = 0xa0
0x2ea: V286 = 0x2
0x2ec: V287 = EXP 0x2 0xa0
0x2ed: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ee: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x2ef: V290 = 0x1
0x2f1: V291 = 0xa0
0x2f3: V292 = 0x2
0x2f5: V293 = EXP 0x2 0xa0
0x2f6: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x2f9: M[V283] = V295
0x2fa: V296 = 0x20
0x2fc: V297 = ADD 0x20 V283
0x300: V298 = 0x20
0x302: V299 = 0x40
0x304: V300 = M[0x40]
0x307: V301 = SUB V297 V300
0x309: V302 = 0x0
0x30d: V303 = EXTCODESIZE V266
0x30e: V304 = ISZERO V303
0x30f: V305 = ISZERO V304
0x310: V306 = 0x315
0x313: JUMPI 0x315 V305
---
Entry stack: [V12, S6, {0xaa, 0xad}, 0x0, 0x0, 0x0, V241, V242]
Stack pops: 5
Stack additions: [V246, S3, S2, V248, V266, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V266]
Exit stack: [V12, S6, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V266, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V266]

================================

Block 0x314
[0x314:0x314]
---
Predecessors: [0x29a]
Successors: []
---
0x314 INVALID
---
0x314: INVALID 
---
Entry stack: [V12, S14, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V266, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V266, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V266]

================================

Block 0x315
[0x315:0x321]
---
Predecessors: [0x29a]
Successors: [0x322, 0x323]
---
0x315 JUMPDEST
0x316 PUSH2 0x2c6
0x319 GAS
0x31a SUB
0x31b CALL
0x31c ISZERO
0x31d ISZERO
0x31e PUSH2 0x323
0x321 JUMPI
---
0x315: JUMPDEST 
0x316: V307 = 0x2c6
0x319: V308 = GAS
0x31a: V309 = SUB V308 0x2c6
0x31b: V310 = CALL V309 V266 0x0 V300 V301 V300 0x20
0x31c: V311 = ISZERO V310
0x31d: V312 = ISZERO V311
0x31e: V313 = 0x323
0x321: JUMPI 0x323 V312
---
Entry stack: [V12, S14, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V266, 0x70a08231, V297, 0x20, V300, V301, V300, 0x0, V266]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V266, 0x70a08231, V297]

================================

Block 0x322
[0x322:0x322]
---
Predecessors: [0x315]
Successors: []
---
0x322 INVALID
---
0x322: INVALID 
---
Entry stack: [V12, S8, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V266, 0x70a08231, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V266, 0x70a08231, V297]

================================

Block 0x323
[0x323:0x332]
---
Predecessors: [0x315]
Successors: [0x333, 0x334]
---
0x323 JUMPDEST
0x324 POP
0x325 POP
0x326 PUSH1 0x40
0x328 MLOAD
0x329 MLOAD
0x32a SWAP1
0x32b POP
0x32c DUP2
0x32d ISZERO
0x32e ISZERO
0x32f PUSH2 0x334
0x332 JUMPI
---
0x323: JUMPDEST 
0x326: V314 = 0x40
0x328: V315 = M[0x40]
0x329: V316 = M[V315]
0x32d: V317 = ISZERO V248
0x32e: V318 = ISZERO V317
0x32f: V319 = 0x334
0x332: JUMPI 0x334 V318
---
Entry stack: [V12, S8, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V266, 0x70a08231, V297]
Stack pops: 4
Stack additions: [S3, V316]
Exit stack: [V12, S8, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V316]

================================

Block 0x333
[0x333:0x333]
---
Predecessors: [0x323]
Successors: []
---
0x333 INVALID
---
0x333: INVALID 
---
Entry stack: [V12, S6, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V316]

================================

Block 0x334
[0x334:0x347]
---
Predecessors: [0x323]
Successors: [0x348, 0x354]
---
0x334 JUMPDEST
0x335 DIV
0x336 SWAP2
0x337 POP
0x338 PUSH1 0x0
0x33a SWAP1
0x33b POP
0x33c PUSH1 0x2
0x33e SLOAD
0x33f DUP3
0x340 MUL
0x341 CALLVALUE
0x342 GT
0x343 ISZERO
0x344 PUSH2 0x354
0x347 JUMPI
---
0x334: JUMPDEST 
0x335: V320 = DIV V316 V248
0x338: V321 = 0x0
0x33c: V322 = 0x2
0x33e: V323 = S[0x2]
0x340: V324 = MUL V320 V323
0x341: V325 = CALLVALUE
0x342: V326 = GT V325 V324
0x343: V327 = ISZERO V326
0x344: V328 = 0x354
0x347: JUMPI 0x354 V327
---
Entry stack: [V12, S6, {0xaa, 0xad}, V246, 0x0, 0x0, V248, V316]
Stack pops: 4
Stack additions: [V320, 0x0]
Exit stack: [V12, S6, {0xaa, 0xad}, V246, V320, 0x0]

================================

Block 0x348
[0x348:0x353]
---
Predecessors: [0x334]
Successors: [0x354]
---
0x348 PUSH1 0x2
0x34a SLOAD
0x34b DUP3
0x34c MUL
0x34d CALLVALUE
0x34e SUB
0x34f SWAP1
0x350 POP
0x351 DUP2
0x352 SWAP3
0x353 POP
---
0x348: V329 = 0x2
0x34a: V330 = S[0x2]
0x34c: V331 = MUL V320 V330
0x34d: V332 = CALLVALUE
0x34e: V333 = SUB V332 V331
---
Entry stack: [V12, S4, {0xaa, 0xad}, V246, V320, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V333]
Exit stack: [V12, S4, {0xaa, 0xad}, V320, V320, V333]

================================

Block 0x354
[0x354:0x35d]
---
Predecessors: [0x334, 0x348]
Successors: [0x35e, 0x38e]
---
0x354 JUMPDEST
0x355 PUSH1 0x0
0x357 DUP2
0x358 GT
0x359 ISZERO
0x35a PUSH2 0x38e
0x35d JUMPI
---
0x354: JUMPDEST 
0x355: V334 = 0x0
0x358: V335 = GT S0 0x0
0x359: V336 = ISZERO V335
0x35a: V337 = 0x38e
0x35d: JUMPI 0x38e V336
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]

================================

Block 0x35e
[0x35e:0x388]
---
Predecessors: [0x354]
Successors: [0x389, 0x38e]
---
0x35e PUSH1 0x40
0x360 MLOAD
0x361 PUSH1 0x1
0x363 PUSH1 0xa0
0x365 PUSH1 0x2
0x367 EXP
0x368 SUB
0x369 CALLER
0x36a AND
0x36b SWAP1
0x36c DUP3
0x36d ISZERO
0x36e PUSH2 0x8fc
0x371 MUL
0x372 SWAP1
0x373 DUP4
0x374 SWAP1
0x375 PUSH1 0x0
0x377 DUP2
0x378 DUP2
0x379 DUP2
0x37a DUP6
0x37b DUP9
0x37c DUP9
0x37d CALL
0x37e SWAP4
0x37f POP
0x380 POP
0x381 POP
0x382 POP
0x383 ISZERO
0x384 ISZERO
0x385 PUSH2 0x38e
0x388 JUMPI
---
0x35e: V338 = 0x40
0x360: V339 = M[0x40]
0x361: V340 = 0x1
0x363: V341 = 0xa0
0x365: V342 = 0x2
0x367: V343 = EXP 0x2 0xa0
0x368: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x369: V345 = CALLER
0x36a: V346 = AND V345 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V347 = ISZERO S0
0x36e: V348 = 0x8fc
0x371: V349 = MUL 0x8fc V347
0x375: V350 = 0x0
0x37d: V351 = CALL V349 V346 S0 V339 0x0 V339 0x0
0x383: V352 = ISZERO V351
0x384: V353 = ISZERO V352
0x385: V354 = 0x38e
0x388: JUMPI 0x38e V353
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]

================================

Block 0x389
[0x389:0x38d]
---
Predecessors: [0x35e]
Successors: []
---
0x389 PUSH1 0x0
0x38b PUSH1 0x0
0x38d REVERT
---
0x389: V355 = 0x0
0x38b: V356 = 0x0
0x38d: REVERT 0x0 0x0
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]

================================

Block 0x38e
[0x38e:0x38e]
---
Predecessors: [0x354, 0x35e]
Successors: [0x38f]
---
0x38e JUMPDEST
---
0x38e: JUMPDEST 
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]

================================

Block 0x38f
[0x38f:0x398]
---
Predecessors: [0x38e]
Successors: [0x399, 0x41d]
---
0x38f JUMPDEST
0x390 PUSH1 0x0
0x392 DUP4
0x393 GT
0x394 ISZERO
0x395 PUSH2 0x41d
0x398 JUMPI
---
0x38f: JUMPDEST 
0x390: V357 = 0x0
0x393: V358 = GT S2 0x0
0x394: V359 = ISZERO V358
0x395: V360 = 0x41d
0x398: JUMPI 0x41d V359
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]

================================

Block 0x399
[0x399:0x3f9]
---
Predecessors: [0x38f]
Successors: [0x3fa, 0x3fb]
---
0x399 PUSH1 0x1
0x39b SLOAD
0x39c PUSH1 0x3
0x39e SLOAD
0x39f PUSH1 0x40
0x3a1 DUP1
0x3a2 MLOAD
0x3a3 PUSH1 0x0
0x3a5 PUSH1 0x20
0x3a7 SWAP2
0x3a8 DUP3
0x3a9 ADD
0x3aa DUP2
0x3ab SWAP1
0x3ac MSTORE
0x3ad DUP3
0x3ae MLOAD
0x3af PUSH1 0xe0
0x3b1 PUSH1 0x2
0x3b3 EXP
0x3b4 PUSH4 0xa9059cbb
0x3b9 MUL
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x1
0x3be PUSH1 0xa0
0x3c0 PUSH1 0x2
0x3c2 EXP
0x3c3 SUB
0x3c4 CALLER
0x3c5 DUP2
0x3c6 AND
0x3c7 PUSH1 0x4
0x3c9 DUP4
0x3ca ADD
0x3cb MSTORE
0x3cc SWAP5
0x3cd DUP10
0x3ce MUL
0x3cf PUSH1 0x24
0x3d1 DUP3
0x3d2 ADD
0x3d3 MSTORE
0x3d4 SWAP3
0x3d5 MLOAD
0x3d6 SWAP4
0x3d7 SWAP1
0x3d8 SWAP5
0x3d9 AND
0x3da SWAP4
0x3db PUSH4 0xa9059cbb
0x3e0 SWAP4
0x3e1 PUSH1 0x44
0x3e3 DUP1
0x3e4 DUP6
0x3e5 ADD
0x3e6 SWAP5
0x3e7 SWAP2
0x3e8 SWAP3
0x3e9 SWAP2
0x3ea DUP4
0x3eb SWAP1
0x3ec SUB
0x3ed ADD
0x3ee SWAP1
0x3ef DUP3
0x3f0 SWAP1
0x3f1 DUP8
0x3f2 DUP1
0x3f3 EXTCODESIZE
0x3f4 ISZERO
0x3f5 ISZERO
0x3f6 PUSH2 0x3fb
0x3f9 JUMPI
---
0x399: V361 = 0x1
0x39b: V362 = S[0x1]
0x39c: V363 = 0x3
0x39e: V364 = S[0x3]
0x39f: V365 = 0x40
0x3a2: V366 = M[0x40]
0x3a3: V367 = 0x0
0x3a5: V368 = 0x20
0x3a9: V369 = ADD 0x20 V366
0x3ac: M[V369] = 0x0
0x3ae: V370 = M[0x40]
0x3af: V371 = 0xe0
0x3b1: V372 = 0x2
0x3b3: V373 = EXP 0x2 0xe0
0x3b4: V374 = 0xa9059cbb
0x3b9: V375 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3bb: M[V370] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3bc: V376 = 0x1
0x3be: V377 = 0xa0
0x3c0: V378 = 0x2
0x3c2: V379 = EXP 0x2 0xa0
0x3c3: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c4: V381 = CALLER
0x3c6: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x3c7: V383 = 0x4
0x3ca: V384 = ADD V370 0x4
0x3cb: M[V384] = V382
0x3ce: V385 = MUL S2 V364
0x3cf: V386 = 0x24
0x3d2: V387 = ADD V370 0x24
0x3d3: M[V387] = V385
0x3d5: V388 = M[0x40]
0x3d9: V389 = AND V362 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V390 = 0xa9059cbb
0x3e1: V391 = 0x44
0x3e5: V392 = ADD V370 0x44
0x3ec: V393 = SUB V370 V388
0x3ed: V394 = ADD V393 0x44
0x3f3: V395 = EXTCODESIZE V389
0x3f4: V396 = ISZERO V395
0x3f5: V397 = ISZERO V396
0x3f6: V398 = 0x3fb
0x3f9: JUMPI 0x3fb V397
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V389, 0xa9059cbb, V392, 0x20, V388, V394, V388, 0x0, V389]
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0, V389, 0xa9059cbb, V392, 0x20, V388, V394, V388, 0x0, V389]

================================

Block 0x3fa
[0x3fa:0x3fa]
---
Predecessors: [0x399]
Successors: []
---
0x3fa INVALID
---
0x3fa: INVALID 
---
Entry stack: [V12, S13, {0xaa, 0xad}, S11, V320, S9, V389, 0xa9059cbb, V392, 0x20, V388, V394, V388, 0x0, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0xaa, 0xad}, S11, V320, S9, V389, 0xa9059cbb, V392, 0x20, V388, V394, V388, 0x0, V389]

================================

Block 0x3fb
[0x3fb:0x407]
---
Predecessors: [0x399]
Successors: [0x408, 0x409]
---
0x3fb JUMPDEST
0x3fc PUSH2 0x2c6
0x3ff GAS
0x400 SUB
0x401 CALL
0x402 ISZERO
0x403 ISZERO
0x404 PUSH2 0x409
0x407 JUMPI
---
0x3fb: JUMPDEST 
0x3fc: V399 = 0x2c6
0x3ff: V400 = GAS
0x400: V401 = SUB V400 0x2c6
0x401: V402 = CALL V401 V389 0x0 V388 V394 V388 0x20
0x402: V403 = ISZERO V402
0x403: V404 = ISZERO V403
0x404: V405 = 0x409
0x407: JUMPI 0x409 V404
---
Entry stack: [V12, S13, {0xaa, 0xad}, S11, V320, S9, V389, 0xa9059cbb, V392, 0x20, V388, V394, V388, 0x0, V389]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S13, {0xaa, 0xad}, S11, V320, S9, V389, 0xa9059cbb, V392]

================================

Block 0x408
[0x408:0x408]
---
Predecessors: [0x3fb]
Successors: []
---
0x408 INVALID
---
0x408: INVALID 
---
Entry stack: [V12, S7, {0xaa, 0xad}, S5, V320, S3, V389, 0xa9059cbb, V392]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0xaa, 0xad}, S5, V320, S3, V389, 0xa9059cbb, V392]

================================

Block 0x409
[0x409:0x417]
---
Predecessors: [0x3fb]
Successors: [0x418, 0x41d]
---
0x409 JUMPDEST
0x40a POP
0x40b POP
0x40c PUSH1 0x40
0x40e MLOAD
0x40f MLOAD
0x410 ISZERO
0x411 ISZERO
0x412 SWAP1
0x413 POP
0x414 PUSH2 0x41d
0x417 JUMPI
---
0x409: JUMPDEST 
0x40c: V406 = 0x40
0x40e: V407 = M[0x40]
0x40f: V408 = M[V407]
0x410: V409 = ISZERO V408
0x411: V410 = ISZERO V409
0x414: V411 = 0x41d
0x417: JUMPI 0x41d V410
---
Entry stack: [V12, S7, {0xaa, 0xad}, S5, V320, S3, V389, 0xa9059cbb, V392]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S7, {0xaa, 0xad}, S5, V320, S3]

================================

Block 0x418
[0x418:0x41c]
---
Predecessors: [0x409]
Successors: []
---
0x418 PUSH1 0x0
0x41a PUSH1 0x0
0x41c REVERT
---
0x418: V412 = 0x0
0x41a: V413 = 0x0
0x41c: REVERT 0x0 0x0
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]

================================

Block 0x41d
[0x41d:0x41d]
---
Predecessors: [0x38f, 0x409]
Successors: [0x41e]
---
0x41d JUMPDEST
---
0x41d: JUMPDEST 
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]

================================

Block 0x41e
[0x41e:0x471]
---
Predecessors: [0x41d]
Successors: [0x4a2]
---
0x41e JUMPDEST
0x41f PUSH1 0x3
0x421 SLOAD
0x422 PUSH1 0x40
0x424 DUP1
0x425 MLOAD
0x426 CALLVALUE
0x427 DUP2
0x428 MSTORE
0x429 PUSH1 0x20
0x42b DUP2
0x42c ADD
0x42d DUP5
0x42e SWAP1
0x42f MSTORE
0x430 SWAP2
0x431 DUP6
0x432 MUL
0x433 DUP3
0x434 DUP3
0x435 ADD
0x436 MSTORE
0x437 MLOAD
0x438 PUSH1 0x1
0x43a PUSH1 0xa0
0x43c PUSH1 0x2
0x43e EXP
0x43f SUB
0x440 CALLER
0x441 AND
0x442 SWAP2
0x443 PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x464 SWAP2
0x465 SWAP1
0x466 DUP2
0x467 SWAP1
0x468 SUB
0x469 PUSH1 0x60
0x46b ADD
0x46c SWAP1
0x46d LOG2
0x46e PUSH2 0x4a2
0x471 JUMP
---
0x41e: JUMPDEST 
0x41f: V414 = 0x3
0x421: V415 = S[0x3]
0x422: V416 = 0x40
0x425: V417 = M[0x40]
0x426: V418 = CALLVALUE
0x428: M[V417] = V418
0x429: V419 = 0x20
0x42c: V420 = ADD V417 0x20
0x42f: M[V420] = S0
0x432: V421 = MUL S2 V415
0x435: V422 = ADD 0x40 V417
0x436: M[V422] = V421
0x437: V423 = M[0x40]
0x438: V424 = 0x1
0x43a: V425 = 0xa0
0x43c: V426 = 0x2
0x43e: V427 = EXP 0x2 0xa0
0x43f: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x440: V429 = CALLER
0x441: V430 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x443: V431 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x468: V432 = SUB V417 V423
0x469: V433 = 0x60
0x46b: V434 = ADD 0x60 V432
0x46d: LOG V423 V434 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V430
0x46e: V435 = 0x4a2
0x471: JUMP 0x4a2
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S4, {0xaa, 0xad}, S2, V320, S0]

================================

Block 0x472
[0x472:0x49c]
---
Predecessors: [0x288]
Successors: [0x49d, 0x4a2]
---
0x472 JUMPDEST
0x473 PUSH1 0x40
0x475 MLOAD
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e CALLER
0x47f AND
0x480 SWAP1
0x481 CALLVALUE
0x482 DUP1
0x483 ISZERO
0x484 PUSH2 0x8fc
0x487 MUL
0x488 SWAP2
0x489 PUSH1 0x0
0x48b DUP2
0x48c DUP2
0x48d DUP2
0x48e DUP6
0x48f DUP9
0x490 DUP9
0x491 CALL
0x492 SWAP4
0x493 POP
0x494 POP
0x495 POP
0x496 POP
0x497 ISZERO
0x498 ISZERO
0x499 PUSH2 0x4a2
0x49c JUMPI
---
0x472: JUMPDEST 
0x473: V436 = 0x40
0x475: V437 = M[0x40]
0x476: V438 = 0x1
0x478: V439 = 0xa0
0x47a: V440 = 0x2
0x47c: V441 = EXP 0x2 0xa0
0x47d: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V443 = CALLER
0x47f: V444 = AND V443 0xffffffffffffffffffffffffffffffffffffffff
0x481: V445 = CALLVALUE
0x483: V446 = ISZERO V445
0x484: V447 = 0x8fc
0x487: V448 = MUL 0x8fc V446
0x489: V449 = 0x0
0x491: V450 = CALL V448 V444 V445 V437 0x0 V437 0x0
0x497: V451 = ISZERO V450
0x498: V452 = ISZERO V451
0x499: V453 = 0x4a2
0x49c: JUMPI 0x4a2 V452
---
Entry stack: [V12, S4, {0xaa, 0xad}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xaa, 0xad}, 0x0, 0x0, 0x0]

================================

Block 0x49d
[0x49d:0x4a1]
---
Predecessors: [0x472]
Successors: []
---
0x49d PUSH1 0x0
0x49f PUSH1 0x0
0x4a1 REVERT
---
0x49d: V454 = 0x0
0x49f: V455 = 0x0
0x4a1: REVERT 0x0 0x0
---
Entry stack: [V12, S4, {0xaa, 0xad}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xaa, 0xad}, 0x0, 0x0, 0x0]

================================

Block 0x4a2
[0x4a2:0x4a2]
---
Predecessors: [0x41e, 0x472]
Successors: [0x4a3]
---
0x4a2 JUMPDEST
---
0x4a2: JUMPDEST 
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xaa, 0xad}, S2, S1, S0]

================================

Block 0x4a3
[0x4a3:0x4a3]
---
Predecessors: [0x4a2]
Successors: [0x4a4]
---
0x4a3 JUMPDEST
---
0x4a3: JUMPDEST 
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xaa, 0xad}, S2, S1, S0]

================================

Block 0x4a4
[0x4a4:0x4a8]
---
Predecessors: [0x4a3]
Successors: [0xaa, 0xad]
---
0x4a4 JUMPDEST
0x4a5 POP
0x4a6 POP
0x4a7 POP
0x4a8 JUMP
---
0x4a4: JUMPDEST 
0x4a8: JUMP {0xaa, 0xad}
---
Entry stack: [V12, S4, {0xaa, 0xad}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S4]

================================

Block 0x4a9
[0x4a9:0x4c0]
---
Predecessors: [0xb7]
Successors: [0x4c1, 0x4c6]
---
0x4a9 JUMPDEST
0x4aa PUSH1 0x0
0x4ac DUP1
0x4ad SLOAD
0x4ae CALLER
0x4af PUSH1 0x1
0x4b1 PUSH1 0xa0
0x4b3 PUSH1 0x2
0x4b5 EXP
0x4b6 SUB
0x4b7 SWAP1
0x4b8 DUP2
0x4b9 AND
0x4ba SWAP2
0x4bb AND
0x4bc EQ
0x4bd PUSH2 0x4c6
0x4c0 JUMPI
---
0x4a9: JUMPDEST 
0x4aa: V456 = 0x0
0x4ad: V457 = S[0x0]
0x4ae: V458 = CALLER
0x4af: V459 = 0x1
0x4b1: V460 = 0xa0
0x4b3: V461 = 0x2
0x4b5: V462 = EXP 0x2 0xa0
0x4b6: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b9: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x4bb: V465 = AND V457 0xffffffffffffffffffffffffffffffffffffffff
0x4bc: V466 = EQ V465 V464
0x4bd: V467 = 0x4c6
0x4c0: JUMPI 0x4c6 V466
---
Entry stack: [V12, 0xc2, V57]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc2, V57, 0x0]

================================

Block 0x4c1
[0x4c1:0x4c5]
---
Predecessors: [0x4a9]
Successors: []
---
0x4c1 PUSH1 0x0
0x4c3 PUSH1 0x0
0x4c5 REVERT
---
0x4c1: V468 = 0x0
0x4c3: V469 = 0x0
0x4c5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V57, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V57, 0x0]

================================

Block 0x4c6
[0x4c6:0x4d8]
---
Predecessors: [0x4a9]
Successors: [0x4d9, 0x535]
---
0x4c6 JUMPDEST
0x4c7 PUSH1 0x1
0x4c9 PUSH1 0xa0
0x4cb PUSH1 0x2
0x4cd EXP
0x4ce SUB
0x4cf ADDRESS
0x4d0 AND
0x4d1 BALANCE
0x4d2 DUP3
0x4d3 SWAP1
0x4d4 LT
0x4d5 PUSH2 0x535
0x4d8 JUMPI
---
0x4c6: JUMPDEST 
0x4c7: V470 = 0x1
0x4c9: V471 = 0xa0
0x4cb: V472 = 0x2
0x4cd: V473 = EXP 0x2 0xa0
0x4ce: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V475 = ADDRESS
0x4d0: V476 = AND V475 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V477 = BALANCE V476
0x4d4: V478 = LT V477 V57
0x4d5: V479 = 0x535
0x4d8: JUMPI 0x535 V478
---
Entry stack: [V12, 0xc2, V57, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xc2, V57, 0x0]

================================

Block 0x4d9
[0x4d9:0x534]
---
Predecessors: [0x4c6]
Successors: [0x535]
---
0x4d9 PUSH1 0x40
0x4db DUP1
0x4dc MLOAD
0x4dd DUP4
0x4de DUP2
0x4df MSTORE
0x4e0 SWAP1
0x4e1 MLOAD
0x4e2 PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x503 SWAP2
0x504 DUP2
0x505 SWAP1
0x506 SUB
0x507 PUSH1 0x20
0x509 ADD
0x50a SWAP1
0x50b LOG1
0x50c PUSH1 0x0
0x50e DUP1
0x50f SLOAD
0x510 PUSH1 0x40
0x512 MLOAD
0x513 PUSH1 0x1
0x515 PUSH1 0xa0
0x517 PUSH1 0x2
0x519 EXP
0x51a SUB
0x51b SWAP1
0x51c SWAP2
0x51d AND
0x51e SWAP2
0x51f DUP5
0x520 ISZERO
0x521 PUSH2 0x8fc
0x524 MUL
0x525 SWAP2
0x526 DUP6
0x527 SWAP2
0x528 DUP2
0x529 DUP2
0x52a DUP2
0x52b DUP6
0x52c DUP9
0x52d DUP9
0x52e CALL
0x52f SWAP5
0x530 POP
0x531 POP
0x532 POP
0x533 POP
0x534 POP
---
0x4d9: V480 = 0x40
0x4dc: V481 = M[0x40]
0x4df: M[V481] = V57
0x4e1: V482 = M[0x40]
0x4e2: V483 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x506: V484 = SUB V481 V482
0x507: V485 = 0x20
0x509: V486 = ADD 0x20 V484
0x50b: LOG V482 V486 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x50c: V487 = 0x0
0x50f: V488 = S[0x0]
0x510: V489 = 0x40
0x512: V490 = M[0x40]
0x513: V491 = 0x1
0x515: V492 = 0xa0
0x517: V493 = 0x2
0x519: V494 = EXP 0x2 0xa0
0x51a: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51d: V496 = AND V488 0xffffffffffffffffffffffffffffffffffffffff
0x520: V497 = ISZERO V57
0x521: V498 = 0x8fc
0x524: V499 = MUL 0x8fc V497
0x52e: V500 = CALL V499 V496 V57 V490 0x0 V490 0x0
---
Entry stack: [V12, 0xc2, V57, 0x0]
Stack pops: 2
Stack additions: [S1, V500]
Exit stack: [V12, 0xc2, V57, V500]

================================

Block 0x535
[0x535:0x535]
---
Predecessors: [0x4c6, 0x4d9]
Successors: [0x536]
---
0x535 JUMPDEST
---
0x535: JUMPDEST 
---
Entry stack: [V12, 0xc2, V57, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V57, S0]

================================

Block 0x536
[0x536:0x536]
---
Predecessors: [0x535]
Successors: [0x537]
---
0x536 JUMPDEST
---
0x536: JUMPDEST 
---
Entry stack: [V12, 0xc2, V57, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V57, S0]

================================

Block 0x537
[0x537:0x53b]
---
Predecessors: [0x536]
Successors: [0xc2]
---
0x537 JUMPDEST
0x538 SWAP2
0x539 SWAP1
0x53a POP
0x53b JUMP
---
0x537: JUMPDEST 
0x53b: JUMP 0xc2
---
Entry stack: [V12, 0xc2, V57, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x53c
[0x53c:0x54a]
---
Predecessors: [0xde]
Successors: [0xe6]
---
0x53c JUMPDEST
0x53d PUSH1 0x1
0x53f SLOAD
0x540 PUSH1 0x1
0x542 PUSH1 0xa0
0x544 PUSH1 0x2
0x546 EXP
0x547 SUB
0x548 AND
0x549 DUP2
0x54a JUMP
---
0x53c: JUMPDEST 
0x53d: V501 = 0x1
0x53f: V502 = S[0x1]
0x540: V503 = 0x1
0x542: V504 = 0xa0
0x544: V505 = 0x2
0x546: V506 = EXP 0x2 0xa0
0x547: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x548: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x54a: JUMP 0xe6
---
Entry stack: [V12, 0xe6]
Stack pops: 1
Stack additions: [S0, V508]
Exit stack: [V12, 0xe6, V508]

================================

Block 0x54b
[0x54b:0x550]
---
Predecessors: [0x10a]
Successors: [0x112]
---
0x54b JUMPDEST
0x54c PUSH1 0x2
0x54e SLOAD
0x54f DUP2
0x550 JUMP
---
0x54b: JUMPDEST 
0x54c: V509 = 0x2
0x54e: V510 = S[0x2]
0x550: JUMP 0x112
---
Entry stack: [V12, 0x112]
Stack pops: 1
Stack additions: [S0, V510]
Exit stack: [V12, 0x112, V510]

================================

Block 0x551
[0x551:0x559]
---
Predecessors: [0x12c]
Successors: [0xc2]
---
0x551 JUMPDEST
0x552 PUSH1 0x4
0x554 SLOAD
0x555 PUSH1 0xff
0x557 AND
0x558 DUP2
0x559 JUMP
---
0x551: JUMPDEST 
0x552: V511 = 0x4
0x554: V512 = S[0x4]
0x555: V513 = 0xff
0x557: V514 = AND 0xff V512
0x559: JUMP 0xc2
---
Entry stack: [V12, 0xc2]
Stack pops: 1
Stack additions: [S0, V514]
Exit stack: [V12, 0xc2, V514]

================================

Block 0x55a
[0x55a:0x571]
---
Predecessors: [0x150]
Successors: [0x572, 0x577]
---
0x55a JUMPDEST
0x55b PUSH1 0x0
0x55d DUP1
0x55e SLOAD
0x55f CALLER
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 SWAP1
0x569 DUP2
0x56a AND
0x56b SWAP2
0x56c AND
0x56d EQ
0x56e PUSH2 0x577
0x571 JUMPI
---
0x55a: JUMPDEST 
0x55b: V515 = 0x0
0x55e: V516 = S[0x0]
0x55f: V517 = CALLER
0x560: V518 = 0x1
0x562: V519 = 0xa0
0x564: V520 = 0x2
0x566: V521 = EXP 0x2 0xa0
0x567: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x56c: V524 = AND V516 0xffffffffffffffffffffffffffffffffffffffff
0x56d: V525 = EQ V524 V523
0x56e: V526 = 0x577
0x571: JUMPI 0x577 V525
---
Entry stack: [V12, 0xc2, V119, V121]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc2, V119, V121, 0x0]

================================

Block 0x572
[0x572:0x576]
---
Predecessors: [0x55a]
Successors: []
---
0x572 PUSH1 0x0
0x574 PUSH1 0x0
0x576 REVERT
---
0x572: V527 = 0x0
0x574: V528 = 0x0
0x576: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V119, V121, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0]

================================

Block 0x577
[0x577:0x5bb]
---
Predecessors: [0x55a]
Successors: [0x5bc, 0x5bd]
---
0x577 JUMPDEST
0x578 DUP3
0x579 PUSH1 0x1
0x57b PUSH1 0xa0
0x57d PUSH1 0x2
0x57f EXP
0x580 SUB
0x581 AND
0x582 PUSH4 0x8da5cb5b
0x587 PUSH1 0x0
0x589 PUSH1 0x40
0x58b MLOAD
0x58c PUSH1 0x20
0x58e ADD
0x58f MSTORE
0x590 PUSH1 0x40
0x592 MLOAD
0x593 DUP2
0x594 PUSH4 0xffffffff
0x599 AND
0x59a PUSH1 0xe0
0x59c PUSH1 0x2
0x59e EXP
0x59f MUL
0x5a0 DUP2
0x5a1 MSTORE
0x5a2 PUSH1 0x4
0x5a4 ADD
0x5a5 DUP1
0x5a6 SWAP1
0x5a7 POP
0x5a8 PUSH1 0x20
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae DUP4
0x5af SUB
0x5b0 DUP2
0x5b1 PUSH1 0x0
0x5b3 DUP8
0x5b4 DUP1
0x5b5 EXTCODESIZE
0x5b6 ISZERO
0x5b7 ISZERO
0x5b8 PUSH2 0x5bd
0x5bb JUMPI
---
0x577: JUMPDEST 
0x579: V529 = 0x1
0x57b: V530 = 0xa0
0x57d: V531 = 0x2
0x57f: V532 = EXP 0x2 0xa0
0x580: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x581: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x582: V535 = 0x8da5cb5b
0x587: V536 = 0x0
0x589: V537 = 0x40
0x58b: V538 = M[0x40]
0x58c: V539 = 0x20
0x58e: V540 = ADD 0x20 V538
0x58f: M[V540] = 0x0
0x590: V541 = 0x40
0x592: V542 = M[0x40]
0x594: V543 = 0xffffffff
0x599: V544 = AND 0xffffffff 0x8da5cb5b
0x59a: V545 = 0xe0
0x59c: V546 = 0x2
0x59e: V547 = EXP 0x2 0xe0
0x59f: V548 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x5a1: M[V542] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x5a2: V549 = 0x4
0x5a4: V550 = ADD 0x4 V542
0x5a8: V551 = 0x20
0x5aa: V552 = 0x40
0x5ac: V553 = M[0x40]
0x5af: V554 = SUB V550 V553
0x5b1: V555 = 0x0
0x5b5: V556 = EXTCODESIZE V534
0x5b6: V557 = ISZERO V556
0x5b7: V558 = ISZERO V557
0x5b8: V559 = 0x5bd
0x5bb: JUMPI 0x5bd V558
---
Entry stack: [V12, 0xc2, V119, V121, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V534, 0x8da5cb5b, V550, 0x20, V553, V554, V553, 0x0, V534]
Exit stack: [V12, 0xc2, V119, V121, 0x0, V534, 0x8da5cb5b, V550, 0x20, V553, V554, V553, 0x0, V534]

================================

Block 0x5bc
[0x5bc:0x5bc]
---
Predecessors: [0x577]
Successors: []
---
0x5bc INVALID
---
0x5bc: INVALID 
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V534, 0x8da5cb5b, V550, 0x20, V553, V554, V553, 0x0, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0, V534, 0x8da5cb5b, V550, 0x20, V553, V554, V553, 0x0, V534]

================================

Block 0x5bd
[0x5bd:0x5c9]
---
Predecessors: [0x577]
Successors: [0x5ca, 0x5cb]
---
0x5bd JUMPDEST
0x5be PUSH2 0x2c6
0x5c1 GAS
0x5c2 SUB
0x5c3 CALL
0x5c4 ISZERO
0x5c5 ISZERO
0x5c6 PUSH2 0x5cb
0x5c9 JUMPI
---
0x5bd: JUMPDEST 
0x5be: V560 = 0x2c6
0x5c1: V561 = GAS
0x5c2: V562 = SUB V561 0x2c6
0x5c3: V563 = CALL V562 V534 0x0 V553 V554 V553 0x20
0x5c4: V564 = ISZERO V563
0x5c5: V565 = ISZERO V564
0x5c6: V566 = 0x5cb
0x5c9: JUMPI 0x5cb V565
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V534, 0x8da5cb5b, V550, 0x20, V553, V554, V553, 0x0, V534]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0, V534, 0x8da5cb5b, V550]

================================

Block 0x5ca
[0x5ca:0x5ca]
---
Predecessors: [0x5bd]
Successors: []
---
0x5ca INVALID
---
0x5ca: INVALID 
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V534, 0x8da5cb5b, V550]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0, V534, 0x8da5cb5b, V550]

================================

Block 0x5cb
[0x5cb:0x5ea]
---
Predecessors: [0x5bd]
Successors: [0x5eb, 0x65a]
---
0x5cb JUMPDEST
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 MLOAD
0x5d2 PUSH1 0x0
0x5d4 SLOAD
0x5d5 PUSH1 0x1
0x5d7 PUSH1 0xa0
0x5d9 PUSH1 0x2
0x5db EXP
0x5dc SUB
0x5dd SWAP1
0x5de DUP2
0x5df AND
0x5e0 SWAP2
0x5e1 AND
0x5e2 EQ
0x5e3 ISZERO
0x5e4 SWAP1
0x5e5 POP
0x5e6 DUP1
0x5e7 PUSH2 0x65a
0x5ea JUMPI
---
0x5cb: JUMPDEST 
0x5ce: V567 = 0x40
0x5d0: V568 = M[0x40]
0x5d1: V569 = M[V568]
0x5d2: V570 = 0x0
0x5d4: V571 = S[0x0]
0x5d5: V572 = 0x1
0x5d7: V573 = 0xa0
0x5d9: V574 = 0x2
0x5db: V575 = EXP 0x2 0xa0
0x5dc: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5df: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x5e1: V578 = AND V569 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V579 = EQ V578 V577
0x5e3: V580 = ISZERO V579
0x5e7: V581 = 0x65a
0x5ea: JUMPI 0x65a V580
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V534, 0x8da5cb5b, V550]
Stack pops: 3
Stack additions: [V580]
Exit stack: [V12, 0xc2, V119, V121, 0x0, V580]

================================

Block 0x5eb
[0x5eb:0x62f]
---
Predecessors: [0x5cb]
Successors: [0x630, 0x631]
---
0x5eb POP
0x5ec DUP3
0x5ed PUSH1 0x1
0x5ef PUSH1 0xa0
0x5f1 PUSH1 0x2
0x5f3 EXP
0x5f4 SUB
0x5f5 AND
0x5f6 PUSH4 0x38d52e0f
0x5fb PUSH1 0x0
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 PUSH1 0x20
0x602 ADD
0x603 MSTORE
0x604 PUSH1 0x40
0x606 MLOAD
0x607 DUP2
0x608 PUSH4 0xffffffff
0x60d AND
0x60e PUSH1 0xe0
0x610 PUSH1 0x2
0x612 EXP
0x613 MUL
0x614 DUP2
0x615 MSTORE
0x616 PUSH1 0x4
0x618 ADD
0x619 DUP1
0x61a SWAP1
0x61b POP
0x61c PUSH1 0x20
0x61e PUSH1 0x40
0x620 MLOAD
0x621 DUP1
0x622 DUP4
0x623 SUB
0x624 DUP2
0x625 PUSH1 0x0
0x627 DUP8
0x628 DUP1
0x629 EXTCODESIZE
0x62a ISZERO
0x62b ISZERO
0x62c PUSH2 0x631
0x62f JUMPI
---
0x5ed: V582 = 0x1
0x5ef: V583 = 0xa0
0x5f1: V584 = 0x2
0x5f3: V585 = EXP 0x2 0xa0
0x5f4: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f5: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x5f6: V588 = 0x38d52e0f
0x5fb: V589 = 0x0
0x5fd: V590 = 0x40
0x5ff: V591 = M[0x40]
0x600: V592 = 0x20
0x602: V593 = ADD 0x20 V591
0x603: M[V593] = 0x0
0x604: V594 = 0x40
0x606: V595 = M[0x40]
0x608: V596 = 0xffffffff
0x60d: V597 = AND 0xffffffff 0x38d52e0f
0x60e: V598 = 0xe0
0x610: V599 = 0x2
0x612: V600 = EXP 0x2 0xe0
0x613: V601 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x615: M[V595] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x616: V602 = 0x4
0x618: V603 = ADD 0x4 V595
0x61c: V604 = 0x20
0x61e: V605 = 0x40
0x620: V606 = M[0x40]
0x623: V607 = SUB V603 V606
0x625: V608 = 0x0
0x629: V609 = EXTCODESIZE V587
0x62a: V610 = ISZERO V609
0x62b: V611 = ISZERO V610
0x62c: V612 = 0x631
0x62f: JUMPI 0x631 V611
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V580]
Stack pops: 4
Stack additions: [S3, S2, S1, V587, 0x38d52e0f, V603, 0x20, V606, V607, V606, 0x0, V587]
Exit stack: [V12, 0xc2, V119, V121, 0x0, V587, 0x38d52e0f, V603, 0x20, V606, V607, V606, 0x0, V587]

================================

Block 0x630
[0x630:0x630]
---
Predecessors: [0x5eb]
Successors: []
---
0x630 INVALID
---
0x630: INVALID 
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V587, 0x38d52e0f, V603, 0x20, V606, V607, V606, 0x0, V587]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0, V587, 0x38d52e0f, V603, 0x20, V606, V607, V606, 0x0, V587]

================================

Block 0x631
[0x631:0x63d]
---
Predecessors: [0x5eb]
Successors: [0x63e, 0x63f]
---
0x631 JUMPDEST
0x632 PUSH2 0x2c6
0x635 GAS
0x636 SUB
0x637 CALL
0x638 ISZERO
0x639 ISZERO
0x63a PUSH2 0x63f
0x63d JUMPI
---
0x631: JUMPDEST 
0x632: V613 = 0x2c6
0x635: V614 = GAS
0x636: V615 = SUB V614 0x2c6
0x637: V616 = CALL V615 V587 0x0 V606 V607 V606 0x20
0x638: V617 = ISZERO V616
0x639: V618 = ISZERO V617
0x63a: V619 = 0x63f
0x63d: JUMPI 0x63f V618
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V587, 0x38d52e0f, V603, 0x20, V606, V607, V606, 0x0, V587]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0, V587, 0x38d52e0f, V603]

================================

Block 0x63e
[0x63e:0x63e]
---
Predecessors: [0x631]
Successors: []
---
0x63e INVALID
---
0x63e: INVALID 
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V587, 0x38d52e0f, V603]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0, V587, 0x38d52e0f, V603]

================================

Block 0x63f
[0x63f:0x659]
---
Predecessors: [0x631]
Successors: [0x65a]
---
0x63f JUMPDEST
0x640 POP
0x641 POP
0x642 PUSH1 0x40
0x644 MLOAD
0x645 MLOAD
0x646 PUSH1 0x1
0x648 SLOAD
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 SWAP1
0x652 DUP2
0x653 AND
0x654 SWAP2
0x655 AND
0x656 EQ
0x657 ISZERO
0x658 SWAP1
0x659 POP
---
0x63f: JUMPDEST 
0x642: V620 = 0x40
0x644: V621 = M[0x40]
0x645: V622 = M[V621]
0x646: V623 = 0x1
0x648: V624 = S[0x1]
0x649: V625 = 0x1
0x64b: V626 = 0xa0
0x64d: V627 = 0x2
0x64f: V628 = EXP 0x2 0xa0
0x650: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x653: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x655: V631 = AND V622 0xffffffffffffffffffffffffffffffffffffffff
0x656: V632 = EQ V631 V630
0x657: V633 = ISZERO V632
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V587, 0x38d52e0f, V603]
Stack pops: 3
Stack additions: [V633]
Exit stack: [V12, 0xc2, V119, V121, 0x0, V633]

================================

Block 0x65a
[0x65a:0x65f]
---
Predecessors: [0x5cb, 0x63f]
Successors: [0x660, 0x665]
---
0x65a JUMPDEST
0x65b ISZERO
0x65c PUSH2 0x665
0x65f JUMPI
---
0x65a: JUMPDEST 
0x65b: V634 = ISZERO S0
0x65c: V635 = 0x665
0x65f: JUMPI 0x665 V634
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0]

================================

Block 0x660
[0x660:0x664]
---
Predecessors: [0x65a]
Successors: []
---
0x660 PUSH1 0x0
0x662 PUSH1 0x0
0x664 REVERT
---
0x660: V636 = 0x0
0x662: V637 = 0x0
0x664: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V119, V121, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0]

================================

Block 0x665
[0x665:0x706]
---
Predecessors: [0x65a]
Successors: [0x707, 0x708]
---
0x665 JUMPDEST
0x666 PUSH1 0x40
0x668 DUP1
0x669 MLOAD
0x66a PUSH1 0x1
0x66c PUSH1 0xa0
0x66e PUSH1 0x2
0x670 EXP
0x671 SUB
0x672 DUP6
0x673 AND
0x674 DUP2
0x675 MSTORE
0x676 PUSH1 0x20
0x678 DUP2
0x679 ADD
0x67a DUP5
0x67b SWAP1
0x67c MSTORE
0x67d DUP2
0x67e MLOAD
0x67f PUSH32 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x6a0 SWAP3
0x6a1 SWAP2
0x6a2 DUP2
0x6a3 SWAP1
0x6a4 SUB
0x6a5 SWAP1
0x6a6 SWAP2
0x6a7 ADD
0x6a8 SWAP1
0x6a9 LOG1
0x6aa PUSH1 0x1
0x6ac SLOAD
0x6ad PUSH1 0x40
0x6af DUP1
0x6b0 MLOAD
0x6b1 PUSH1 0x0
0x6b3 PUSH1 0x20
0x6b5 SWAP2
0x6b6 DUP3
0x6b7 ADD
0x6b8 DUP2
0x6b9 SWAP1
0x6ba MSTORE
0x6bb DUP3
0x6bc MLOAD
0x6bd PUSH1 0xe0
0x6bf PUSH1 0x2
0x6c1 EXP
0x6c2 PUSH4 0xa9059cbb
0x6c7 MUL
0x6c8 DUP2
0x6c9 MSTORE
0x6ca PUSH1 0x1
0x6cc PUSH1 0xa0
0x6ce PUSH1 0x2
0x6d0 EXP
0x6d1 SUB
0x6d2 DUP9
0x6d3 DUP2
0x6d4 AND
0x6d5 PUSH1 0x4
0x6d7 DUP4
0x6d8 ADD
0x6d9 MSTORE
0x6da PUSH1 0x24
0x6dc DUP3
0x6dd ADD
0x6de DUP9
0x6df SWAP1
0x6e0 MSTORE
0x6e1 SWAP4
0x6e2 MLOAD
0x6e3 SWAP4
0x6e4 SWAP1
0x6e5 SWAP5
0x6e6 AND
0x6e7 SWAP4
0x6e8 PUSH4 0xa9059cbb
0x6ed SWAP4
0x6ee PUSH1 0x44
0x6f0 DUP1
0x6f1 DUP4
0x6f2 ADD
0x6f3 SWAP5
0x6f4 SWAP4
0x6f5 SWAP2
0x6f6 SWAP3
0x6f7 DUP4
0x6f8 SWAP1
0x6f9 SUB
0x6fa ADD
0x6fb SWAP1
0x6fc DUP3
0x6fd SWAP1
0x6fe DUP8
0x6ff DUP1
0x700 EXTCODESIZE
0x701 ISZERO
0x702 ISZERO
0x703 PUSH2 0x708
0x706 JUMPI
---
0x665: JUMPDEST 
0x666: V638 = 0x40
0x669: V639 = M[0x40]
0x66a: V640 = 0x1
0x66c: V641 = 0xa0
0x66e: V642 = 0x2
0x670: V643 = EXP 0x2 0xa0
0x671: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x673: V645 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x675: M[V639] = V645
0x676: V646 = 0x20
0x679: V647 = ADD V639 0x20
0x67c: M[V647] = V121
0x67e: V648 = M[0x40]
0x67f: V649 = 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x6a4: V650 = SUB V639 V648
0x6a7: V651 = ADD 0x40 V650
0x6a9: LOG V648 V651 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x6aa: V652 = 0x1
0x6ac: V653 = S[0x1]
0x6ad: V654 = 0x40
0x6b0: V655 = M[0x40]
0x6b1: V656 = 0x0
0x6b3: V657 = 0x20
0x6b7: V658 = ADD 0x20 V655
0x6ba: M[V658] = 0x0
0x6bc: V659 = M[0x40]
0x6bd: V660 = 0xe0
0x6bf: V661 = 0x2
0x6c1: V662 = EXP 0x2 0xe0
0x6c2: V663 = 0xa9059cbb
0x6c7: V664 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6c9: M[V659] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6ca: V665 = 0x1
0x6cc: V666 = 0xa0
0x6ce: V667 = 0x2
0x6d0: V668 = EXP 0x2 0xa0
0x6d1: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d4: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x6d5: V671 = 0x4
0x6d8: V672 = ADD V659 0x4
0x6d9: M[V672] = V670
0x6da: V673 = 0x24
0x6dd: V674 = ADD V659 0x24
0x6e0: M[V674] = V121
0x6e2: V675 = M[0x40]
0x6e6: V676 = AND V653 0xffffffffffffffffffffffffffffffffffffffff
0x6e8: V677 = 0xa9059cbb
0x6ee: V678 = 0x44
0x6f2: V679 = ADD V659 0x44
0x6f9: V680 = SUB V659 V675
0x6fa: V681 = ADD V680 0x44
0x700: V682 = EXTCODESIZE V676
0x701: V683 = ISZERO V682
0x702: V684 = ISZERO V683
0x703: V685 = 0x708
0x706: JUMPI 0x708 V684
---
Entry stack: [V12, 0xc2, V119, V121, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V676, 0xa9059cbb, V679, 0x20, V675, V681, V675, 0x0, V676]
Exit stack: [V12, 0xc2, V119, V121, 0x0, V676, 0xa9059cbb, V679, 0x20, V675, V681, V675, 0x0, V676]

================================

Block 0x707
[0x707:0x707]
---
Predecessors: [0x665]
Successors: []
---
0x707 INVALID
---
0x707: INVALID 
---
Entry stack: [V12, 0xc2, V119, V121, 0x0, V676, 0xa9059cbb, V679, 0x20, V675, V681, V675, 0x0, V676]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V119, V121, 0x0, V676, 0xa9059cbb, V679, 0x20, V675, V681, V675, 0x0, V676]

================================

Block 0x708
[0x708:0x714]
---
Predecessors: [0x665, 0x759]
Successors: [0x715, 0x716]
---
0x708 JUMPDEST
0x709 PUSH2 0x2c6
0x70c GAS
0x70d SUB
0x70e CALL
0x70f ISZERO
0x710 ISZERO
0x711 PUSH2 0x716
0x714 JUMPI
---
0x708: JUMPDEST 
0x709: V686 = 0x2c6
0x70c: V687 = GAS
0x70d: V688 = SUB V687 0x2c6
0x70e: V689 = CALL V688 S0 0x0 S2 S3 S4 0x20
0x70f: V690 = ISZERO V689
0x710: V691 = ISZERO V690
0x711: V692 = 0x716
0x714: JUMPI 0x716 V691
---
Entry stack: [V12, 0xc2, S11, S10, 0x0, S8, 0xa9059cbb, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, S11, S10, 0x0, S8, 0xa9059cbb, S6]

================================

Block 0x715
[0x715:0x715]
---
Predecessors: [0x708]
Successors: []
---
0x715 INVALID
---
0x715: INVALID 
---
Entry stack: [V12, 0xc2, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, S5, S4, 0x0, S2, 0xa9059cbb, S0]

================================

Block 0x716
[0x716:0x71f]
---
Predecessors: [0x708, 0x7fa]
Successors: [0x720]
---
0x716 JUMPDEST
0x717 POP
0x718 POP
0x719 PUSH1 0x40
0x71b MLOAD
0x71c MLOAD
0x71d SWAP2
0x71e POP
0x71f POP
---
0x716: JUMPDEST 
0x719: V693 = 0x40
0x71b: V694 = M[0x40]
0x71c: V695 = M[V694]
---
Entry stack: [V12, 0xc2, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 4
Stack additions: [V695]
Exit stack: [V12, 0xc2, S5, S4, V695]

================================

Block 0x720
[0x720:0x720]
---
Predecessors: [0x716]
Successors: [0x721]
---
0x720 JUMPDEST
---
0x720: JUMPDEST 
---
Entry stack: [V12, 0xc2, S2, S1, V695]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, S2, S1, V695]

================================

Block 0x721
[0x721:0x726]
---
Predecessors: [0x720]
Successors: [0xc2]
---
0x721 JUMPDEST
0x722 SWAP3
0x723 SWAP2
0x724 POP
0x725 POP
0x726 JUMP
---
0x721: JUMPDEST 
0x726: JUMP 0xc2
---
Entry stack: [V12, 0xc2, S2, S1, V695]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V695]

================================

Block 0x727
[0x727:0x735]
---
Predecessors: [0x183]
Successors: [0xe6]
---
0x727 JUMPDEST
0x728 PUSH1 0x0
0x72a SLOAD
0x72b PUSH1 0x1
0x72d PUSH1 0xa0
0x72f PUSH1 0x2
0x731 EXP
0x732 SUB
0x733 AND
0x734 DUP2
0x735 JUMP
---
0x727: JUMPDEST 
0x728: V696 = 0x0
0x72a: V697 = S[0x0]
0x72b: V698 = 0x1
0x72d: V699 = 0xa0
0x72f: V700 = 0x2
0x731: V701 = EXP 0x2 0xa0
0x732: V702 = SUB 0x10000000000000000000000000000000000000000 0x1
0x733: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0x735: JUMP 0xe6
---
Entry stack: [V12, 0xe6]
Stack pops: 1
Stack additions: [S0, V703]
Exit stack: [V12, 0xe6, V703]

================================

Block 0x736
[0x736:0x73b]
---
Predecessors: [0x1af]
Successors: [0x112]
---
0x736 JUMPDEST
0x737 PUSH1 0x3
0x739 SLOAD
0x73a DUP2
0x73b JUMP
---
0x736: JUMPDEST 
0x737: V704 = 0x3
0x739: V705 = S[0x3]
0x73b: JUMP 0x112
---
Entry stack: [V12, 0x112]
Stack pops: 1
Stack additions: [S0, V705]
Exit stack: [V12, 0x112, V705]

================================

Block 0x73c
[0x73c:0x753]
---
Predecessors: [0x1d1]
Successors: [0x754, 0x759]
---
0x73c JUMPDEST
0x73d PUSH1 0x0
0x73f DUP1
0x740 SLOAD
0x741 CALLER
0x742 PUSH1 0x1
0x744 PUSH1 0xa0
0x746 PUSH1 0x2
0x748 EXP
0x749 SUB
0x74a SWAP1
0x74b DUP2
0x74c AND
0x74d SWAP2
0x74e AND
0x74f EQ
0x750 PUSH2 0x759
0x753 JUMPI
---
0x73c: JUMPDEST 
0x73d: V706 = 0x0
0x740: V707 = S[0x0]
0x741: V708 = CALLER
0x742: V709 = 0x1
0x744: V710 = 0xa0
0x746: V711 = 0x2
0x748: V712 = EXP 0x2 0xa0
0x749: V713 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74c: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0x74e: V715 = AND V707 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V716 = EQ V715 V714
0x750: V717 = 0x759
0x753: JUMPI 0x759 V716
---
Entry stack: [V12, 0xc2, V170, V172]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc2, V170, V172, 0x0]

================================

Block 0x754
[0x754:0x758]
---
Predecessors: [0x73c]
Successors: []
---
0x754 PUSH1 0x0
0x756 PUSH1 0x0
0x758 REVERT
---
0x754: V718 = 0x0
0x756: V719 = 0x0
0x758: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V170, V172, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V170, V172, 0x0]

================================

Block 0x759
[0x759:0x7f8]
---
Predecessors: [0x73c]
Successors: [0x708, 0x7f9]
---
0x759 JUMPDEST
0x75a PUSH1 0x40
0x75c DUP1
0x75d MLOAD
0x75e PUSH1 0x1
0x760 PUSH1 0xa0
0x762 PUSH1 0x2
0x764 EXP
0x765 SUB
0x766 DUP6
0x767 AND
0x768 DUP2
0x769 MSTORE
0x76a PUSH1 0x20
0x76c DUP2
0x76d ADD
0x76e DUP5
0x76f SWAP1
0x770 MSTORE
0x771 DUP2
0x772 MLOAD
0x773 PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x794 SWAP3
0x795 SWAP2
0x796 DUP2
0x797 SWAP1
0x798 SUB
0x799 SWAP1
0x79a SWAP2
0x79b ADD
0x79c SWAP1
0x79d LOG1
0x79e PUSH1 0x0
0x7a0 DUP1
0x7a1 SLOAD
0x7a2 PUSH1 0x40
0x7a4 DUP1
0x7a5 MLOAD
0x7a6 PUSH1 0x20
0x7a8 SWAP1
0x7a9 DUP2
0x7aa ADD
0x7ab DUP5
0x7ac SWAP1
0x7ad MSTORE
0x7ae DUP2
0x7af MLOAD
0x7b0 PUSH1 0xe0
0x7b2 PUSH1 0x2
0x7b4 EXP
0x7b5 PUSH4 0xa9059cbb
0x7ba MUL
0x7bb DUP2
0x7bc MSTORE
0x7bd PUSH1 0x1
0x7bf PUSH1 0xa0
0x7c1 PUSH1 0x2
0x7c3 EXP
0x7c4 SUB
0x7c5 SWAP4
0x7c6 DUP5
0x7c7 AND
0x7c8 PUSH1 0x4
0x7ca DUP3
0x7cb ADD
0x7cc MSTORE
0x7cd PUSH1 0x24
0x7cf DUP2
0x7d0 ADD
0x7d1 DUP8
0x7d2 SWAP1
0x7d3 MSTORE
0x7d4 SWAP2
0x7d5 MLOAD
0x7d6 SWAP3
0x7d7 DUP8
0x7d8 AND
0x7d9 SWAP4
0x7da PUSH4 0xa9059cbb
0x7df SWAP4
0x7e0 PUSH1 0x44
0x7e2 DUP1
0x7e3 DUP6
0x7e4 ADD
0x7e5 SWAP5
0x7e6 SWAP2
0x7e7 SWAP3
0x7e8 SWAP2
0x7e9 DUP4
0x7ea SWAP1
0x7eb SUB
0x7ec ADD
0x7ed SWAP1
0x7ee DUP3
0x7ef SWAP1
0x7f0 DUP8
0x7f1 DUP1
0x7f2 EXTCODESIZE
0x7f3 ISZERO
0x7f4 ISZERO
0x7f5 PUSH2 0x708
0x7f8 JUMPI
---
0x759: JUMPDEST 
0x75a: V720 = 0x40
0x75d: V721 = M[0x40]
0x75e: V722 = 0x1
0x760: V723 = 0xa0
0x762: V724 = 0x2
0x764: V725 = EXP 0x2 0xa0
0x765: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x767: V727 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x769: M[V721] = V727
0x76a: V728 = 0x20
0x76d: V729 = ADD V721 0x20
0x770: M[V729] = V172
0x772: V730 = M[0x40]
0x773: V731 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x798: V732 = SUB V721 V730
0x79b: V733 = ADD 0x40 V732
0x79d: LOG V730 V733 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x79e: V734 = 0x0
0x7a1: V735 = S[0x0]
0x7a2: V736 = 0x40
0x7a5: V737 = M[0x40]
0x7a6: V738 = 0x20
0x7aa: V739 = ADD 0x20 V737
0x7ad: M[V739] = 0x0
0x7af: V740 = M[0x40]
0x7b0: V741 = 0xe0
0x7b2: V742 = 0x2
0x7b4: V743 = EXP 0x2 0xe0
0x7b5: V744 = 0xa9059cbb
0x7ba: V745 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x7bc: M[V740] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7bd: V746 = 0x1
0x7bf: V747 = 0xa0
0x7c1: V748 = 0x2
0x7c3: V749 = EXP 0x2 0xa0
0x7c4: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c7: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V735
0x7c8: V752 = 0x4
0x7cb: V753 = ADD V740 0x4
0x7cc: M[V753] = V751
0x7cd: V754 = 0x24
0x7d0: V755 = ADD V740 0x24
0x7d3: M[V755] = V172
0x7d5: V756 = M[0x40]
0x7d8: V757 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x7da: V758 = 0xa9059cbb
0x7e0: V759 = 0x44
0x7e4: V760 = ADD V740 0x44
0x7eb: V761 = SUB V740 V756
0x7ec: V762 = ADD V761 0x44
0x7f2: V763 = EXTCODESIZE V757
0x7f3: V764 = ISZERO V763
0x7f4: V765 = ISZERO V764
0x7f5: V766 = 0x708
0x7f8: JUMPI 0x708 V765
---
Entry stack: [V12, 0xc2, V170, V172, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V757, 0xa9059cbb, V760, 0x20, V756, V762, V756, 0x0, V757]
Exit stack: [V12, 0xc2, V170, V172, 0x0, V757, 0xa9059cbb, V760, 0x20, V756, V762, V756, 0x0, V757]

================================

Block 0x7f9
[0x7f9:0x7f9]
---
Predecessors: [0x759]
Successors: []
---
0x7f9 INVALID
---
0x7f9: INVALID 
---
Entry stack: [V12, 0xc2, V170, V172, 0x0, V757, 0xa9059cbb, V760, 0x20, V756, V762, V756, 0x0, V757]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V170, V172, 0x0, V757, 0xa9059cbb, V760, 0x20, V756, V762, V756, 0x0, V757]

================================

Block 0x7fa
[0x7fa:0x806]
---
Predecessors: []
Successors: [0x716, 0x807]
---
0x7fa JUMPDEST
0x7fb PUSH2 0x2c6
0x7fe GAS
0x7ff SUB
0x800 CALL
0x801 ISZERO
0x802 ISZERO
0x803 PUSH2 0x716
0x806 JUMPI
---
0x7fa: JUMPDEST 
0x7fb: V767 = 0x2c6
0x7fe: V768 = GAS
0x7ff: V769 = SUB V768 0x2c6
0x800: V770 = CALL V769 S0 S1 S2 S3 S4 S5
0x801: V771 = ISZERO V770
0x802: V772 = ISZERO V771
0x803: V773 = 0x716
0x806: JUMPI 0x716 V772
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x807
[0x807:0x811]
---
Predecessors: [0x7fa]
Successors: [0x812]
---
0x807 INVALID
0x808 JUMPDEST
0x809 POP
0x80a POP
0x80b PUSH1 0x40
0x80d MLOAD
0x80e MLOAD
0x80f SWAP2
0x810 POP
0x811 POP
---
0x807: INVALID 
0x808: JUMPDEST 
0x80b: V774 = 0x40
0x80d: V775 = M[0x40]
0x80e: V776 = M[V775]
---
Entry stack: []
Stack pops: 0
Stack additions: [V776]
Exit stack: []

================================

Block 0x812
[0x812:0x812]
---
Predecessors: [0x807]
Successors: [0x813]
---
0x812 JUMPDEST
---
0x812: JUMPDEST 
---
Entry stack: [V776]
Stack pops: 0
Stack additions: []
Exit stack: [V776]

================================

Block 0x813
[0x813:0x818]
---
Predecessors: [0x812]
Successors: []
Has unresolved jump.
---
0x813 JUMPDEST
0x814 SWAP3
0x815 SWAP2
0x816 POP
0x817 POP
0x818 JUMP
---
0x813: JUMPDEST 
0x818: JUMP S3
---
Entry stack: [V776]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V776]

================================

Block 0x819
[0x819:0x830]
---
Predecessors: [0x20e]
Successors: [0x831, 0x836]
---
0x819 JUMPDEST
0x81a PUSH1 0x0
0x81c DUP1
0x81d SLOAD
0x81e CALLER
0x81f PUSH1 0x1
0x821 PUSH1 0xa0
0x823 PUSH1 0x2
0x825 EXP
0x826 SUB
0x827 SWAP1
0x828 DUP2
0x829 AND
0x82a SWAP2
0x82b AND
0x82c EQ
0x82d PUSH2 0x836
0x830 JUMPI
---
0x819: JUMPDEST 
0x81a: V777 = 0x0
0x81d: V778 = S[0x0]
0x81e: V779 = CALLER
0x81f: V780 = 0x1
0x821: V781 = 0xa0
0x823: V782 = 0x2
0x825: V783 = EXP 0x2 0xa0
0x826: V784 = SUB 0x10000000000000000000000000000000000000000 0x1
0x829: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V779
0x82b: V786 = AND V778 0xffffffffffffffffffffffffffffffffffffffff
0x82c: V787 = EQ V786 V785
0x82d: V788 = 0x836
0x830: JUMPI 0x836 V787
---
Entry stack: [V12, 0xc2, V189]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc2, V189, 0x0]

================================

Block 0x831
[0x831:0x835]
---
Predecessors: [0x819]
Successors: []
---
0x831 PUSH1 0x0
0x833 PUSH1 0x0
0x835 REVERT
---
0x831: V789 = 0x0
0x833: V790 = 0x0
0x835: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V189, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V189, 0x0]

================================

Block 0x836
[0x836:0x8c7]
---
Predecessors: [0x819]
Successors: [0x8c8, 0x8c9]
---
0x836 JUMPDEST
0x837 PUSH1 0x40
0x839 DUP1
0x83a MLOAD
0x83b DUP4
0x83c DUP2
0x83d MSTORE
0x83e SWAP1
0x83f MLOAD
0x840 PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x861 SWAP2
0x862 DUP2
0x863 SWAP1
0x864 SUB
0x865 PUSH1 0x20
0x867 ADD
0x868 SWAP1
0x869 LOG1
0x86a PUSH1 0x1
0x86c SLOAD
0x86d PUSH1 0x0
0x86f DUP1
0x870 SLOAD
0x871 PUSH1 0x40
0x873 DUP1
0x874 MLOAD
0x875 PUSH1 0x20
0x877 SWAP1
0x878 DUP2
0x879 ADD
0x87a DUP5
0x87b SWAP1
0x87c MSTORE
0x87d DUP2
0x87e MLOAD
0x87f PUSH1 0xe0
0x881 PUSH1 0x2
0x883 EXP
0x884 PUSH4 0xa9059cbb
0x889 MUL
0x88a DUP2
0x88b MSTORE
0x88c PUSH1 0x1
0x88e PUSH1 0xa0
0x890 PUSH1 0x2
0x892 EXP
0x893 SUB
0x894 SWAP4
0x895 DUP5
0x896 AND
0x897 PUSH1 0x4
0x899 DUP3
0x89a ADD
0x89b MSTORE
0x89c PUSH1 0x24
0x89e DUP2
0x89f ADD
0x8a0 DUP9
0x8a1 SWAP1
0x8a2 MSTORE
0x8a3 SWAP2
0x8a4 MLOAD
0x8a5 SWAP3
0x8a6 SWAP1
0x8a7 SWAP5
0x8a8 AND
0x8a9 SWAP4
0x8aa PUSH4 0xa9059cbb
0x8af SWAP4
0x8b0 PUSH1 0x44
0x8b2 DUP1
0x8b3 DUP5
0x8b4 ADD
0x8b5 SWAP5
0x8b6 SWAP3
0x8b7 SWAP4
0x8b8 DUP4
0x8b9 SWAP1
0x8ba SUB
0x8bb ADD
0x8bc SWAP1
0x8bd DUP3
0x8be SWAP1
0x8bf DUP8
0x8c0 DUP1
0x8c1 EXTCODESIZE
0x8c2 ISZERO
0x8c3 ISZERO
0x8c4 PUSH2 0x8c9
0x8c7 JUMPI
---
0x836: JUMPDEST 
0x837: V791 = 0x40
0x83a: V792 = M[0x40]
0x83d: M[V792] = V189
0x83f: V793 = M[0x40]
0x840: V794 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x864: V795 = SUB V792 V793
0x865: V796 = 0x20
0x867: V797 = ADD 0x20 V795
0x869: LOG V793 V797 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x86a: V798 = 0x1
0x86c: V799 = S[0x1]
0x86d: V800 = 0x0
0x870: V801 = S[0x0]
0x871: V802 = 0x40
0x874: V803 = M[0x40]
0x875: V804 = 0x20
0x879: V805 = ADD 0x20 V803
0x87c: M[V805] = 0x0
0x87e: V806 = M[0x40]
0x87f: V807 = 0xe0
0x881: V808 = 0x2
0x883: V809 = EXP 0x2 0xe0
0x884: V810 = 0xa9059cbb
0x889: V811 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x88b: M[V806] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x88c: V812 = 0x1
0x88e: V813 = 0xa0
0x890: V814 = 0x2
0x892: V815 = EXP 0x2 0xa0
0x893: V816 = SUB 0x10000000000000000000000000000000000000000 0x1
0x896: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0x897: V818 = 0x4
0x89a: V819 = ADD V806 0x4
0x89b: M[V819] = V817
0x89c: V820 = 0x24
0x89f: V821 = ADD V806 0x24
0x8a2: M[V821] = V189
0x8a4: V822 = M[0x40]
0x8a8: V823 = AND V799 0xffffffffffffffffffffffffffffffffffffffff
0x8aa: V824 = 0xa9059cbb
0x8b0: V825 = 0x44
0x8b4: V826 = ADD V806 0x44
0x8ba: V827 = SUB V806 V822
0x8bb: V828 = ADD V827 0x44
0x8c1: V829 = EXTCODESIZE V823
0x8c2: V830 = ISZERO V829
0x8c3: V831 = ISZERO V830
0x8c4: V832 = 0x8c9
0x8c7: JUMPI 0x8c9 V831
---
Entry stack: [V12, 0xc2, V189, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V823, 0xa9059cbb, V826, 0x20, V822, V828, V822, 0x0, V823]
Exit stack: [V12, 0xc2, V189, 0x0, V823, 0xa9059cbb, V826, 0x20, V822, V828, V822, 0x0, V823]

================================

Block 0x8c8
[0x8c8:0x8c8]
---
Predecessors: [0x836]
Successors: []
---
0x8c8 INVALID
---
0x8c8: INVALID 
---
Entry stack: [V12, 0xc2, V189, 0x0, V823, 0xa9059cbb, V826, 0x20, V822, V828, V822, 0x0, V823]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V189, 0x0, V823, 0xa9059cbb, V826, 0x20, V822, V828, V822, 0x0, V823]

================================

Block 0x8c9
[0x8c9:0x8d5]
---
Predecessors: [0x836]
Successors: [0x8d6, 0x8d7]
---
0x8c9 JUMPDEST
0x8ca PUSH2 0x2c6
0x8cd GAS
0x8ce SUB
0x8cf CALL
0x8d0 ISZERO
0x8d1 ISZERO
0x8d2 PUSH2 0x8d7
0x8d5 JUMPI
---
0x8c9: JUMPDEST 
0x8ca: V833 = 0x2c6
0x8cd: V834 = GAS
0x8ce: V835 = SUB V834 0x2c6
0x8cf: V836 = CALL V835 V823 0x0 V822 V828 V822 0x20
0x8d0: V837 = ISZERO V836
0x8d1: V838 = ISZERO V837
0x8d2: V839 = 0x8d7
0x8d5: JUMPI 0x8d7 V838
---
Entry stack: [V12, 0xc2, V189, 0x0, V823, 0xa9059cbb, V826, 0x20, V822, V828, V822, 0x0, V823]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V189, 0x0, V823, 0xa9059cbb, V826]

================================

Block 0x8d6
[0x8d6:0x8d6]
---
Predecessors: [0x8c9]
Successors: []
---
0x8d6 INVALID
---
0x8d6: INVALID 
---
Entry stack: [V12, 0xc2, V189, 0x0, V823, 0xa9059cbb, V826]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V189, 0x0, V823, 0xa9059cbb, V826]

================================

Block 0x8d7
[0x8d7:0x8e0]
---
Predecessors: [0x8c9]
Successors: [0x8e1]
---
0x8d7 JUMPDEST
0x8d8 POP
0x8d9 POP
0x8da PUSH1 0x40
0x8dc MLOAD
0x8dd MLOAD
0x8de SWAP2
0x8df POP
0x8e0 POP
---
0x8d7: JUMPDEST 
0x8da: V840 = 0x40
0x8dc: V841 = M[0x40]
0x8dd: V842 = M[V841]
---
Entry stack: [V12, 0xc2, V189, 0x0, V823, 0xa9059cbb, V826]
Stack pops: 4
Stack additions: [V842]
Exit stack: [V12, 0xc2, V189, V842]

================================

Block 0x8e1
[0x8e1:0x8e1]
---
Predecessors: [0x8d7]
Successors: [0x8e2]
---
0x8e1 JUMPDEST
---
0x8e1: JUMPDEST 
---
Entry stack: [V12, 0xc2, V189, V842]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V189, V842]

================================

Block 0x8e2
[0x8e2:0x8e6]
---
Predecessors: [0x8e1]
Successors: [0xc2]
---
0x8e2 JUMPDEST
0x8e3 SWAP2
0x8e4 SWAP1
0x8e5 POP
0x8e6 JUMP
---
0x8e2: JUMPDEST 
0x8e6: JUMP 0xc2
---
Entry stack: [V12, 0xc2, V189, V842]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V842]

================================

Block 0x8e7
[0x8e7:0x8fd]
---
Predecessors: [0x235]
Successors: [0x8fe, 0x903]
---
0x8e7 JUMPDEST
0x8e8 PUSH1 0x0
0x8ea SLOAD
0x8eb CALLER
0x8ec PUSH1 0x1
0x8ee PUSH1 0xa0
0x8f0 PUSH1 0x2
0x8f2 EXP
0x8f3 SUB
0x8f4 SWAP1
0x8f5 DUP2
0x8f6 AND
0x8f7 SWAP2
0x8f8 AND
0x8f9 EQ
0x8fa PUSH2 0x903
0x8fd JUMPI
---
0x8e7: JUMPDEST 
0x8e8: V843 = 0x0
0x8ea: V844 = S[0x0]
0x8eb: V845 = CALLER
0x8ec: V846 = 0x1
0x8ee: V847 = 0xa0
0x8f0: V848 = 0x2
0x8f2: V849 = EXP 0x2 0xa0
0x8f3: V850 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f6: V851 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0x8f8: V852 = AND V844 0xffffffffffffffffffffffffffffffffffffffff
0x8f9: V853 = EQ V852 V851
0x8fa: V854 = 0x903
0x8fd: JUMPI 0x903 V853
---
Entry stack: [V12, 0xad, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, V206]

================================

Block 0x8fe
[0x8fe:0x902]
---
Predecessors: [0x8e7]
Successors: []
---
0x8fe PUSH1 0x0
0x900 PUSH1 0x0
0x902 REVERT
---
0x8fe: V855 = 0x0
0x900: V856 = 0x0
0x902: REVERT 0x0 0x0
---
Entry stack: [V12, 0xad, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, V206]

================================

Block 0x903
[0x903:0x94c]
---
Predecessors: [0x8e7]
Successors: [0x94d]
---
0x903 JUMPDEST
0x904 PUSH1 0x4
0x906 DUP1
0x907 SLOAD
0x908 PUSH1 0xff
0x90a NOT
0x90b AND
0x90c DUP3
0x90d ISZERO
0x90e ISZERO
0x90f OR
0x910 SWAP1
0x911 DUP2
0x912 SWAP1
0x913 SSTORE
0x914 PUSH1 0x40
0x916 DUP1
0x917 MLOAD
0x918 PUSH1 0xff
0x91a SWAP1
0x91b SWAP3
0x91c AND
0x91d ISZERO
0x91e ISZERO
0x91f DUP3
0x920 MSTORE
0x921 MLOAD
0x922 PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x943 SWAP2
0x944 PUSH1 0x20
0x946 SWAP1
0x947 DUP3
0x948 SWAP1
0x949 SUB
0x94a ADD
0x94b SWAP1
0x94c LOG1
---
0x903: JUMPDEST 
0x904: V857 = 0x4
0x907: V858 = S[0x4]
0x908: V859 = 0xff
0x90a: V860 = NOT 0xff
0x90b: V861 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V858
0x90d: V862 = ISZERO V206
0x90e: V863 = ISZERO V862
0x90f: V864 = OR V863 V861
0x913: S[0x4] = V864
0x914: V865 = 0x40
0x917: V866 = M[0x40]
0x918: V867 = 0xff
0x91c: V868 = AND V864 0xff
0x91d: V869 = ISZERO V868
0x91e: V870 = ISZERO V869
0x920: M[V866] = V870
0x921: V871 = M[0x40]
0x922: V872 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x944: V873 = 0x20
0x949: V874 = SUB V866 V871
0x94a: V875 = ADD V874 0x20
0x94c: LOG V871 V875 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
---
Entry stack: [V12, 0xad, V206]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xad, V206]

================================

Block 0x94d
[0x94d:0x94d]
---
Predecessors: [0x903]
Successors: [0x94e]
---
0x94d JUMPDEST
---
0x94d: JUMPDEST 
---
Entry stack: [V12, 0xad, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, V206]

================================

Block 0x94e
[0x94e:0x950]
---
Predecessors: [0x94d]
Successors: [0xad]
---
0x94e JUMPDEST
0x94f POP
0x950 JUMP
---
0x94e: JUMPDEST 
0x950: JUMP 0xad
---
Entry stack: [V12, 0xad, V206]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x951
[0x951:0x967]
---
Predecessors: [0x24c]
Successors: [0x968, 0x96d]
---
0x951 JUMPDEST
0x952 PUSH1 0x0
0x954 SLOAD
0x955 CALLER
0x956 PUSH1 0x1
0x958 PUSH1 0xa0
0x95a PUSH1 0x2
0x95c EXP
0x95d SUB
0x95e SWAP1
0x95f DUP2
0x960 AND
0x961 SWAP2
0x962 AND
0x963 EQ
0x964 PUSH2 0x96d
0x967 JUMPI
---
0x951: JUMPDEST 
0x952: V876 = 0x0
0x954: V877 = S[0x0]
0x955: V878 = CALLER
0x956: V879 = 0x1
0x958: V880 = 0xa0
0x95a: V881 = 0x2
0x95c: V882 = EXP 0x2 0xa0
0x95d: V883 = SUB 0x10000000000000000000000000000000000000000 0x1
0x960: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V878
0x962: V885 = AND V877 0xffffffffffffffffffffffffffffffffffffffff
0x963: V886 = EQ V885 V884
0x964: V887 = 0x96d
0x967: JUMPI 0x96d V886
---
Entry stack: [V12, 0xad, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, V219]

================================

Block 0x968
[0x968:0x96c]
---
Predecessors: [0x951]
Successors: []
---
0x968 PUSH1 0x0
0x96a PUSH1 0x0
0x96c REVERT
---
0x968: V888 = 0x0
0x96a: V889 = 0x0
0x96c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xad, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, V219]

================================

Block 0x96d
[0x96d:0x9ce]
---
Predecessors: [0x951]
Successors: [0x9cf]
---
0x96d JUMPDEST
0x96e PUSH1 0x0
0x970 DUP1
0x971 SLOAD
0x972 PUSH1 0x40
0x974 MLOAD
0x975 PUSH1 0x1
0x977 PUSH1 0xa0
0x979 PUSH1 0x2
0x97b EXP
0x97c SUB
0x97d DUP1
0x97e DUP6
0x97f AND
0x980 SWAP4
0x981 SWAP3
0x982 AND
0x983 SWAP2
0x984 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9a5 SWAP2
0x9a6 LOG3
0x9a7 PUSH1 0x0
0x9a9 DUP1
0x9aa SLOAD
0x9ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c0 NOT
0x9c1 AND
0x9c2 PUSH1 0x1
0x9c4 PUSH1 0xa0
0x9c6 PUSH1 0x2
0x9c8 EXP
0x9c9 SUB
0x9ca DUP4
0x9cb AND
0x9cc OR
0x9cd SWAP1
0x9ce SSTORE
---
0x96d: JUMPDEST 
0x96e: V890 = 0x0
0x971: V891 = S[0x0]
0x972: V892 = 0x40
0x974: V893 = M[0x40]
0x975: V894 = 0x1
0x977: V895 = 0xa0
0x979: V896 = 0x2
0x97b: V897 = EXP 0x2 0xa0
0x97c: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97f: V899 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x982: V900 = AND V891 0xffffffffffffffffffffffffffffffffffffffff
0x984: V901 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9a6: LOG V893 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V900 V899
0x9a7: V902 = 0x0
0x9aa: V903 = S[0x0]
0x9ab: V904 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c0: V905 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9c1: V906 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V903
0x9c2: V907 = 0x1
0x9c4: V908 = 0xa0
0x9c6: V909 = 0x2
0x9c8: V910 = EXP 0x2 0xa0
0x9c9: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cb: V912 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x9cc: V913 = OR V912 V906
0x9ce: S[0x0] = V913
---
Entry stack: [V12, 0xad, V219]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xad, V219]

================================

Block 0x9cf
[0x9cf:0x9cf]
---
Predecessors: [0x96d]
Successors: [0x9d0]
---
0x9cf JUMPDEST
---
0x9cf: JUMPDEST 
---
Entry stack: [V12, 0xad, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, V219]

================================

Block 0x9d0
[0x9d0:0x9d2]
---
Predecessors: [0x9cf]
Successors: [0xad]
---
0x9d0 JUMPDEST
0x9d1 POP
0x9d2 JUMP
---
0x9d0: JUMPDEST 
0x9d2: JUMP 0xad
---
Entry stack: [V12, 0xad, V219]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d3
[0x9d3:0x9fe]
---
Predecessors: []
Successors: []
---
0x9d3 STOP
0x9d4 LOG1
0x9d5 PUSH6 0x627a7a723058
0x9dc SHA3
0x9dd MISSING 0xbe
0x9de MISSING 0x29
0x9df CREATE2
0x9e0 CREATE2
0x9e1 NOT
0x9e2 MISSING 0x29
0x9e3 AND
0x9e4 PUSH18 0xf6f998f401e2883362d74d6532c391f61590
0x9f7 MISSING 0x23
0x9f8 LOG3
0x9f9 SHL
0x9fa DUP1
0x9fb MISSING 0xc9
0x9fc JUMP
0x9fd STOP
0x9fe MISSING 0x29
---
0x9d3: STOP 
0x9d4: LOG S0 S1 S2
0x9d5: V914 = 0x627a7a723058
0x9dc: V915 = SHA3 0x627a7a723058 S3
0x9dd: MISSING 0xbe
0x9de: MISSING 0x29
0x9df: V916 = CREATE2 S0 S1 S2 S3
0x9e0: V917 = CREATE2 V916 S4 S5 S6
0x9e1: V918 = NOT V917
0x9e2: MISSING 0x29
0x9e3: V919 = AND S0 S1
0x9e4: V920 = 0xf6f998f401e2883362d74d6532c391f61590
0x9f7: MISSING 0x23
0x9f8: LOG S0 S1 S2 S3 S4
0x9f9: V921 = SHL S5 S6
0x9fb: MISSING 0xc9
0x9fc: JUMP S0
0x9fd: STOP 
0x9fe: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V915, V918, 0xf6f998f401e2883362d74d6532c391f61590, V919, V921, V921]
Exit stack: []

================================

Function 0:
Public function signature: 0x2170ebf7
Entry block: 0xaf
Exit block: 0xc2
Body: 0xaf, 0xb6, 0xb7, 0xc2, 0x4a9, 0x4c1, 0x4c6, 0x4d9, 0x535, 0x536, 0x537

Function 1:
Public function signature: 0x38d52e0f
Entry block: 0xd6
Exit block: 0xe6
Body: 0xd6, 0xdd, 0xde, 0xe6, 0x53c

Function 2:
Public function signature: 0x4b750334
Entry block: 0x102
Exit block: 0x112
Body: 0x102, 0x109, 0x10a, 0x112, 0x54b

Function 3:
Public function signature: 0x4ca50f59
Entry block: 0x124
Exit block: 0xc2
Body: 0xc2, 0x124, 0x12b, 0x12c, 0x551

Function 4:
Public function signature: 0x52954e5a
Entry block: 0x148
Exit block: 0xc2
Body: 0xc2, 0x148, 0x14f, 0x150, 0x55a, 0x572, 0x577, 0x5bc, 0x5bd, 0x5ca, 0x5cb, 0x5eb, 0x630, 0x631, 0x63e, 0x63f, 0x65a, 0x660, 0x665, 0x707, 0x708, 0x715, 0x716, 0x720, 0x721

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x17b
Exit block: 0xe6
Body: 0xe6, 0x17b, 0x182, 0x183, 0x727

Function 6:
Public function signature: 0x976a8435
Entry block: 0x1a7
Exit block: 0x112
Body: 0x112, 0x1a7, 0x1ae, 0x1af, 0x736

Function 7:
Public function signature: 0xc34764cf
Entry block: 0x1c9
Exit block: 0xc2
Body: 0xc2, 0x1c9, 0x1d0, 0x1d1, 0x708, 0x715, 0x716, 0x720, 0x721, 0x73c, 0x754, 0x759, 0x7f9

Function 8:
Public function signature: 0xc60ccb0e
Entry block: 0x1fc
Exit block: 0xad
Body: 0xad, 0x1fc

Function 9:
Public function signature: 0xcd53a3b7
Entry block: 0x206
Exit block: 0xc2
Body: 0xc2, 0x206, 0x20d, 0x20e, 0x819, 0x831, 0x836, 0x8c8, 0x8c9, 0x8d6, 0x8d7, 0x8e1, 0x8e2

Function 10:
Public function signature: 0xce5e84a3
Entry block: 0x22d
Exit block: 0xad
Body: 0xad, 0x22d, 0x234, 0x235, 0x8e7, 0x8fe, 0x903, 0x94d, 0x94e

Function 11:
Public function signature: 0xf2fde38b
Entry block: 0x244
Exit block: 0xad
Body: 0xad, 0x244, 0x24b, 0x24c, 0x951, 0x968, 0x96d, 0x9cf, 0x9d0

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0xad
Body: 0x9e, 0xa2, 0xaa, 0xab, 0xad

Function 13:
Private function
Entry block: 0x262
Exit block: 0x4a4
Body: 0x262, 0x275, 0x288, 0x28e, 0x29a, 0x315, 0x323, 0x334, 0x348, 0x354, 0x35e, 0x38e, 0x38f, 0x399, 0x3fb, 0x409, 0x41d, 0x41e, 0x472, 0x4a2, 0x4a3, 0x4a4

