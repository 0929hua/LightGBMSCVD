Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x8f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x134087a2
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x8f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x134087a2
0x20: V14 = EQ V12 0x134087a2
0x21: V15 = 0x8f
0x24: JUMPI 0x8f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb8]
---
0x25 DUP1
0x26 PUSH4 0x1e820325
0x2b EQ
0x2c PUSH2 0xb8
0x2f JUMPI
---
0x26: V16 = 0x1e820325
0x2b: V17 = EQ 0x1e820325 V12
0x2c: V18 = 0xb8
0x2f: JUMPI 0xb8 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xc7]
---
0x30 DUP1
0x31 PUSH4 0x2dd5b58e
0x36 EQ
0x37 PUSH2 0xc7
0x3a JUMPI
---
0x31: V19 = 0x2dd5b58e
0x36: V20 = EQ 0x2dd5b58e V12
0x37: V21 = 0xc7
0x3a: JUMPI 0xc7 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe2]
---
0x3b DUP1
0x3c PUSH4 0x3ccfd60b
0x41 EQ
0x42 PUSH2 0xe2
0x45 JUMPI
---
0x3c: V22 = 0x3ccfd60b
0x41: V23 = EQ 0x3ccfd60b V12
0x42: V24 = 0xe2
0x45: JUMPI 0xe2 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xf1]
---
0x46 DUP1
0x47 PUSH4 0x8a19c8bc
0x4c EQ
0x4d PUSH2 0xf1
0x50 JUMPI
---
0x47: V25 = 0x8a19c8bc
0x4c: V26 = EQ 0x8a19c8bc V12
0x4d: V27 = 0xf1
0x50: JUMPI 0xf1 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x11a]
---
0x51 DUP1
0x52 PUSH4 0x9aa92f0c
0x57 EQ
0x58 PUSH2 0x11a
0x5b JUMPI
---
0x52: V28 = 0x9aa92f0c
0x57: V29 = EQ 0x9aa92f0c V12
0x58: V30 = 0x11a
0x5b: JUMPI 0x11a V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x146]
---
0x5c DUP1
0x5d PUSH4 0xeac8221e
0x62 EQ
0x63 PUSH2 0x146
0x66 JUMPI
---
0x5d: V31 = 0xeac8221e
0x62: V32 = EQ 0xeac8221e V12
0x63: V33 = 0x146
0x66: JUMPI 0x146 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x165]
---
0x67 DUP1
0x68 PUSH4 0xf2fde38b
0x6d EQ
0x6e PUSH2 0x165
0x71 JUMPI
---
0x68: V34 = 0xf2fde38b
0x6d: V35 = EQ 0xf2fde38b V12
0x6e: V36 = 0x165
0x71: JUMPI 0x165 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x180]
---
0x72 DUP1
0x73 PUSH4 0xfc0e74d1
0x78 EQ
0x79 PUSH2 0x180
0x7c JUMPI
---
0x73: V37 = 0xfc0e74d1
0x78: V38 = EQ 0xfc0e74d1 V12
0x79: V39 = 0x180
0x7c: JUMPI 0x180 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x82]
---
Predecessors: [0x0, 0x72]
Successors: [0x83]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f PUSH2 0x0
0x82 JUMPI
---
0x7d: JUMPDEST 
0x7e: V40 = CALLVALUE
0x7f: V41 = 0x0
0x82: THROWI V40
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x83
[0x83:0x85]
---
Predecessors: [0x7d]
Successors: [0x86]
---
0x83 PUSH2 0x8d
---
0x83: V42 = 0x8d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V12, 0x8d]

================================

Block 0x86
[0x86:0x8a]
---
Predecessors: [0x83]
Successors: []
---
0x86 JUMPDEST
0x87 PUSH2 0x0
0x8a JUMP
---
0x86: JUMPDEST 
0x87: V43 = 0x0
0x8a: THROW 
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d]

================================

Block 0x8b
[0x8b:0x8c]
---
Predecessors: [0x3f9]
Successors: [0x8d]
---
0x8b JUMPDEST
0x8c JUMP
---
0x8b: JUMPDEST 
0x8c: JUMP 0x8d
---
Entry stack: [V12, 0x8d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x8b, 0x2a6, 0x3db, 0x529]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f
[0x8f:0x94]
---
Predecessors: [0xb]
Successors: [0x95]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 PUSH2 0x0
0x94 JUMPI
---
0x8f: JUMPDEST 
0x90: V44 = CALLVALUE
0x91: V45 = 0x0
0x94: THROWI V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95
[0x95:0x9b]
---
Predecessors: [0x8f]
Successors: [0x18f]
---
0x95 PUSH2 0x9c
0x98 PUSH2 0x18f
0x9b JUMP
---
0x95: V46 = 0x9c
0x98: V47 = 0x18f
0x9b: JUMP 0x18f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9c]
Exit stack: [V12, 0x9c]

================================

Block 0x9c
[0x9c:0xb7]
---
Predecessors: [0x18f, 0x4aa, 0x4c7]
Successors: []
---
0x9c JUMPDEST
0x9d PUSH1 0x40
0x9f DUP1
0xa0 MLOAD
0xa1 PUSH1 0x1
0xa3 PUSH1 0xa0
0xa5 PUSH1 0x2
0xa7 EXP
0xa8 SUB
0xa9 SWAP1
0xaa SWAP3
0xab AND
0xac DUP3
0xad MSTORE
0xae MLOAD
0xaf SWAP1
0xb0 DUP2
0xb1 SWAP1
0xb2 SUB
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 SWAP1
0xb7 RETURN
---
0x9c: JUMPDEST 
0x9d: V48 = 0x40
0xa0: V49 = M[0x40]
0xa1: V50 = 0x1
0xa3: V51 = 0xa0
0xa5: V52 = 0x2
0xa7: V53 = EXP 0x2 0xa0
0xa8: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab: V55 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xad: M[V49] = V55
0xae: V56 = M[0x40]
0xb2: V57 = SUB V49 V56
0xb3: V58 = 0x20
0xb5: V59 = ADD 0x20 V57
0xb7: RETURN V56 V59
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0xb8
[0xb8:0xbd]
---
Predecessors: [0x25]
Successors: [0xbe]
---
0xb8 JUMPDEST
0xb9 CALLVALUE
0xba PUSH2 0x0
0xbd JUMPI
---
0xb8: JUMPDEST 
0xb9: V60 = CALLVALUE
0xba: V61 = 0x0
0xbd: THROWI V60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0xb8]
Successors: [0x19e]
---
0xbe PUSH2 0x8d
0xc1 PUSH2 0x19e
0xc4 JUMP
---
0xbe: V62 = 0x8d
0xc1: V63 = 0x19e
0xc4: JUMP 0x19e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V12, 0x8d]

================================

Block 0xc5
[0xc5:0xc6]
---
Predecessors: []
Successors: []
---
0xc5 JUMPDEST
0xc6 STOP
---
0xc5: JUMPDEST 
0xc6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc7
[0xc7:0xcc]
---
Predecessors: [0x30]
Successors: [0xcd]
---
0xc7 JUMPDEST
0xc8 CALLVALUE
0xc9 PUSH2 0x0
0xcc JUMPI
---
0xc7: JUMPDEST 
0xc8: V64 = CALLVALUE
0xc9: V65 = 0x0
0xcc: THROWI V64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd
[0xcd:0xdf]
---
Predecessors: [0xc7]
Successors: [0x2a9]
---
0xcd PUSH2 0x8d
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 PUSH1 0x4
0xda CALLDATALOAD
0xdb AND
0xdc PUSH2 0x2a9
0xdf JUMP
---
0xcd: V66 = 0x8d
0xd0: V67 = 0x1
0xd2: V68 = 0xa0
0xd4: V69 = 0x2
0xd6: V70 = EXP 0x2 0xa0
0xd7: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V72 = 0x4
0xda: V73 = CALLDATALOAD 0x4
0xdb: V74 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V75 = 0x2a9
0xdf: JUMP 0x2a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8d, V74]
Exit stack: [V12, 0x8d, V74]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: []
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe2
[0xe2:0xe7]
---
Predecessors: [0x3b]
Successors: [0xe8]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 PUSH2 0x0
0xe7 JUMPI
---
0xe2: JUMPDEST 
0xe3: V76 = CALLVALUE
0xe4: V77 = 0x0
0xe7: THROWI V76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0xe2]
Successors: [0x3de]
---
0xe8 PUSH2 0x8d
0xeb PUSH2 0x3de
0xee JUMP
---
0xe8: V78 = 0x8d
0xeb: V79 = 0x3de
0xee: JUMP 0x3de
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V12, 0x8d]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: []
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf1
[0xf1:0xf6]
---
Predecessors: [0x46]
Successors: [0xf7]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 PUSH2 0x0
0xf6 JUMPI
---
0xf1: JUMPDEST 
0xf2: V80 = CALLVALUE
0xf3: V81 = 0x0
0xf6: THROWI V80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0xfd]
---
Predecessors: [0xf1]
Successors: [0x436]
---
0xf7 PUSH2 0x9c
0xfa PUSH2 0x436
0xfd JUMP
---
0xf7: V82 = 0x9c
0xfa: V83 = 0x436
0xfd: JUMP 0x436
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9c]
Exit stack: [V12, 0x9c]

================================

Block 0xfe
[0xfe:0x119]
---
Predecessors: []
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 DUP1
0x102 MLOAD
0x103 PUSH1 0x1
0x105 PUSH1 0xa0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b SWAP1
0x10c SWAP3
0x10d AND
0x10e DUP3
0x10f MSTORE
0x110 MLOAD
0x111 SWAP1
0x112 DUP2
0x113 SWAP1
0x114 SUB
0x115 PUSH1 0x20
0x117 ADD
0x118 SWAP1
0x119 RETURN
---
0xfe: JUMPDEST 
0xff: V84 = 0x40
0x102: V85 = M[0x40]
0x103: V86 = 0x1
0x105: V87 = 0xa0
0x107: V88 = 0x2
0x109: V89 = EXP 0x2 0xa0
0x10a: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10d: V91 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10f: M[V85] = V91
0x110: V92 = M[0x40]
0x114: V93 = SUB V85 V92
0x115: V94 = 0x20
0x117: V95 = ADD 0x20 V93
0x119: RETURN V92 V95
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x11a
[0x11a:0x11f]
---
Predecessors: [0x51]
Successors: [0x120]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c PUSH2 0x0
0x11f JUMPI
---
0x11a: JUMPDEST 
0x11b: V96 = CALLVALUE
0x11c: V97 = 0x0
0x11f: THROWI V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x120
[0x120:0x129]
---
Predecessors: [0x11a]
Successors: [0x4ad]
---
0x120 PUSH2 0x9c
0x123 PUSH1 0x4
0x125 CALLDATALOAD
0x126 PUSH2 0x4ad
0x129 JUMP
---
0x120: V98 = 0x9c
0x123: V99 = 0x4
0x125: V100 = CALLDATALOAD 0x4
0x126: V101 = 0x4ad
0x129: JUMP 0x4ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9c, V100]
Exit stack: [V12, 0x9c, V100]

================================

Block 0x12a
[0x12a:0x145]
---
Predecessors: []
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d DUP1
0x12e MLOAD
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 SWAP1
0x138 SWAP3
0x139 AND
0x13a DUP3
0x13b MSTORE
0x13c MLOAD
0x13d SWAP1
0x13e DUP2
0x13f SWAP1
0x140 SUB
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 RETURN
---
0x12a: JUMPDEST 
0x12b: V102 = 0x40
0x12e: V103 = M[0x40]
0x12f: V104 = 0x1
0x131: V105 = 0xa0
0x133: V106 = 0x2
0x135: V107 = EXP 0x2 0xa0
0x136: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V109 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x13b: M[V103] = V109
0x13c: V110 = M[0x40]
0x140: V111 = SUB V103 V110
0x141: V112 = 0x20
0x143: V113 = ADD 0x20 V111
0x145: RETURN V110 V113
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x146
[0x146:0x14b]
---
Predecessors: [0x5c]
Successors: [0x14c]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 PUSH2 0x0
0x14b JUMPI
---
0x146: JUMPDEST 
0x147: V114 = CALLVALUE
0x148: V115 = 0x0
0x14b: THROWI V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x146]
Successors: [0x4dd]
---
0x14c PUSH2 0x153
0x14f PUSH2 0x4dd
0x152 JUMP
---
0x14c: V116 = 0x153
0x14f: V117 = 0x4dd
0x152: JUMP 0x4dd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x153]
Exit stack: [V12, 0x153]

================================

Block 0x153
[0x153:0x164]
---
Predecessors: [0x4e1]
Successors: []
---
0x153 JUMPDEST
0x154 PUSH1 0x40
0x156 DUP1
0x157 MLOAD
0x158 SWAP2
0x159 DUP3
0x15a MSTORE
0x15b MLOAD
0x15c SWAP1
0x15d DUP2
0x15e SWAP1
0x15f SUB
0x160 PUSH1 0x20
0x162 ADD
0x163 SWAP1
0x164 RETURN
---
0x153: JUMPDEST 
0x154: V118 = 0x40
0x157: V119 = M[0x40]
0x15a: M[V119] = V417
0x15b: V120 = M[0x40]
0x15f: V121 = SUB V119 V120
0x160: V122 = 0x20
0x162: V123 = ADD 0x20 V121
0x164: RETURN V120 V123
---
Entry stack: [V12, V417]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x16a]
---
Predecessors: [0x67]
Successors: [0x16b]
---
0x165 JUMPDEST
0x166 CALLVALUE
0x167 PUSH2 0x0
0x16a JUMPI
---
0x165: JUMPDEST 
0x166: V124 = CALLVALUE
0x167: V125 = 0x0
0x16a: THROWI V124
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16b
[0x16b:0x17d]
---
Predecessors: [0x165]
Successors: [0x4e4]
---
0x16b PUSH2 0x8d
0x16e PUSH1 0x1
0x170 PUSH1 0xa0
0x172 PUSH1 0x2
0x174 EXP
0x175 SUB
0x176 PUSH1 0x4
0x178 CALLDATALOAD
0x179 AND
0x17a PUSH2 0x4e4
0x17d JUMP
---
0x16b: V126 = 0x8d
0x16e: V127 = 0x1
0x170: V128 = 0xa0
0x172: V129 = 0x2
0x174: V130 = EXP 0x2 0xa0
0x175: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V132 = 0x4
0x178: V133 = CALLDATALOAD 0x4
0x179: V134 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V135 = 0x4e4
0x17d: JUMP 0x4e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8d, V134]
Exit stack: [V12, 0x8d, V134]

================================

Block 0x17e
[0x17e:0x17f]
---
Predecessors: []
Successors: []
---
0x17e JUMPDEST
0x17f STOP
---
0x17e: JUMPDEST 
0x17f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x180
[0x180:0x185]
---
Predecessors: [0x72]
Successors: [0x186]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 PUSH2 0x0
0x185 JUMPI
---
0x180: JUMPDEST 
0x181: V136 = CALLVALUE
0x182: V137 = 0x0
0x185: THROWI V136
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x180]
Successors: [0x52c]
---
0x186 PUSH2 0x8d
0x189 PUSH2 0x52c
0x18c JUMP
---
0x186: V138 = 0x8d
0x189: V139 = 0x52c
0x18c: JUMP 0x52c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V12, 0x8d]

================================

Block 0x18d
[0x18d:0x18e]
---
Predecessors: []
Successors: []
---
0x18d JUMPDEST
0x18e STOP
---
0x18d: JUMPDEST 
0x18e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x18f
[0x18f:0x19d]
---
Predecessors: [0x95]
Successors: [0x9c]
---
0x18f JUMPDEST
0x190 PUSH1 0x2
0x192 SLOAD
0x193 PUSH1 0x1
0x195 PUSH1 0xa0
0x197 PUSH1 0x2
0x199 EXP
0x19a SUB
0x19b AND
0x19c DUP2
0x19d JUMP
---
0x18f: JUMPDEST 
0x190: V140 = 0x2
0x192: V141 = S[0x2]
0x193: V142 = 0x1
0x195: V143 = 0xa0
0x197: V144 = 0x2
0x199: V145 = EXP 0x2 0xa0
0x19a: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x19d: JUMP 0x9c
---
Entry stack: [V12, 0x9c]
Stack pops: 1
Stack additions: [S0, V147]
Exit stack: [V12, 0x9c, V147]

================================

Block 0x19e
[0x19e:0x1b5]
---
Predecessors: [0xbe]
Successors: [0x1b6, 0x1ba]
---
0x19e JUMPDEST
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 SLOAD
0x1a3 CALLER
0x1a4 PUSH1 0x1
0x1a6 PUSH1 0xa0
0x1a8 PUSH1 0x2
0x1aa EXP
0x1ab SUB
0x1ac SWAP1
0x1ad DUP2
0x1ae AND
0x1af SWAP2
0x1b0 AND
0x1b1 EQ
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x19e: JUMPDEST 
0x19f: V148 = 0x0
0x1a2: V149 = S[0x0]
0x1a3: V150 = CALLER
0x1a4: V151 = 0x1
0x1a6: V152 = 0xa0
0x1a8: V153 = 0x2
0x1aa: V154 = EXP 0x2 0xa0
0x1ab: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x1b0: V157 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V158 = EQ V157 V156
0x1b2: V159 = 0x1ba
0x1b5: JUMPI 0x1ba V158
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x8d, 0x0]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x19e]
Successors: []
---
0x1b6 PUSH2 0x0
0x1b9 JUMP
---
0x1b6: V160 = 0x0
0x1b9: THROW 
---
Entry stack: [V12, 0x8d, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, 0x0]

================================

Block 0x1ba
[0x1ba:0x21b]
---
Predecessors: [0x19e]
Successors: [0x21c]
---
0x1ba JUMPDEST
0x1bb PUSH1 0x2
0x1bd SLOAD
0x1be PUSH1 0x40
0x1c0 DUP1
0x1c1 MLOAD
0x1c2 PUSH1 0x0
0x1c4 PUSH1 0x20
0x1c6 SWAP2
0x1c7 DUP3
0x1c8 ADD
0x1c9 DUP2
0x1ca SWAP1
0x1cb MSTORE
0x1cc DUP3
0x1cd MLOAD
0x1ce PUSH32 0x1e82032500000000000000000000000000000000000000000000000000000000
0x1ef DUP2
0x1f0 MSTORE
0x1f1 SWAP3
0x1f2 MLOAD
0x1f3 PUSH1 0x1
0x1f5 PUSH1 0xa0
0x1f7 PUSH1 0x2
0x1f9 EXP
0x1fa SUB
0x1fb SWAP1
0x1fc SWAP5
0x1fd AND
0x1fe SWAP4
0x1ff PUSH4 0x1e820325
0x204 SWAP4
0x205 PUSH1 0x4
0x207 DUP1
0x208 DUP3
0x209 ADD
0x20a SWAP5
0x20b SWAP4
0x20c SWAP2
0x20d DUP4
0x20e SWAP1
0x20f SUB
0x210 ADD
0x211 SWAP1
0x212 DUP3
0x213 SWAP1
0x214 DUP8
0x215 DUP1
0x216 EXTCODESIZE
0x217 ISZERO
0x218 PUSH2 0x0
0x21b JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V161 = 0x2
0x1bd: V162 = S[0x2]
0x1be: V163 = 0x40
0x1c1: V164 = M[0x40]
0x1c2: V165 = 0x0
0x1c4: V166 = 0x20
0x1c8: V167 = ADD 0x20 V164
0x1cb: M[V167] = 0x0
0x1cd: V168 = M[0x40]
0x1ce: V169 = 0x1e82032500000000000000000000000000000000000000000000000000000000
0x1f0: M[V168] = 0x1e82032500000000000000000000000000000000000000000000000000000000
0x1f2: V170 = M[0x40]
0x1f3: V171 = 0x1
0x1f5: V172 = 0xa0
0x1f7: V173 = 0x2
0x1f9: V174 = EXP 0x2 0xa0
0x1fa: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V176 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V177 = 0x1e820325
0x205: V178 = 0x4
0x209: V179 = ADD V168 0x4
0x20f: V180 = SUB V168 V170
0x210: V181 = ADD V180 0x4
0x216: V182 = EXTCODESIZE V176
0x217: V183 = ISZERO V182
0x218: V184 = 0x0
0x21b: THROWI V183
---
Entry stack: [V12, 0x8d, 0x0]
Stack pops: 0
Stack additions: [V176, 0x1e820325, V179, 0x20, V170, V181, V170, 0x0, V176]
Exit stack: [V12, 0x8d, 0x0, V176, 0x1e820325, V179, 0x20, V170, V181, V170, 0x0, V176]

================================

Block 0x21c
[0x21c:0x225]
---
Predecessors: [0x1ba]
Successors: [0x226]
---
0x21c PUSH1 0x32
0x21e GAS
0x21f SUB
0x220 CALL
0x221 ISZERO
0x222 PUSH2 0x0
0x225 JUMPI
---
0x21c: V185 = 0x32
0x21e: V186 = GAS
0x21f: V187 = SUB V186 0x32
0x220: V188 = CALL V187 V176 0x0 V170 V181 V170 0x20
0x221: V189 = ISZERO V188
0x222: V190 = 0x0
0x225: THROWI V189
---
Entry stack: [V12, 0x8d, 0x0, V176, 0x1e820325, V179, 0x20, V170, V181, V170, 0x0, V176]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8d, 0x0, V176, 0x1e820325, V179]

================================

Block 0x226
[0x226:0x248]
---
Predecessors: [0x21c]
Successors: [0x249, 0x273]
---
0x226 POP
0x227 POP
0x228 POP
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d MLOAD
0x22e SWAP1
0x22f POP
0x230 SWAP1
0x231 POP
0x232 PUSH1 0x1
0x234 DUP1
0x235 SLOAD
0x236 DUP1
0x237 PUSH1 0x1
0x239 ADD
0x23a DUP3
0x23b DUP2
0x23c DUP2
0x23d SLOAD
0x23e DUP2
0x23f DUP4
0x240 SSTORE
0x241 DUP2
0x242 DUP2
0x243 ISZERO
0x244 GT
0x245 PUSH2 0x273
0x248 JUMPI
---
0x229: V191 = 0x40
0x22b: V192 = M[0x40]
0x22d: V193 = M[V192]
0x232: V194 = 0x1
0x235: V195 = S[0x1]
0x237: V196 = 0x1
0x239: V197 = ADD 0x1 V195
0x23d: V198 = S[0x1]
0x240: S[0x1] = V197
0x243: V199 = ISZERO V198
0x244: V200 = GT V199 V197
0x245: V201 = 0x273
0x248: JUMPI 0x273 V200
---
Entry stack: [V12, 0x8d, 0x0, V176, 0x1e820325, V179]
Stack pops: 4
Stack additions: [V193, 0x1, V195, V197, 0x1, V197, V198]
Exit stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, V198]

================================

Block 0x249
[0x249:0x25a]
---
Predecessors: [0x226]
Successors: [0x25b]
---
0x249 PUSH1 0x0
0x24b DUP4
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 SWAP1
0x251 SHA3
0x252 PUSH2 0x273
0x255 SWAP2
0x256 DUP2
0x257 ADD
0x258 SWAP1
0x259 DUP4
0x25a ADD
---
0x249: V202 = 0x0
0x24d: M[0x0] = 0x1
0x24e: V203 = 0x20
0x251: V204 = SHA3 0x0 0x20
0x252: V205 = 0x273
0x257: V206 = ADD V204 V198
0x25a: V207 = ADD V197 V204
---
Entry stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, V198]
Stack pops: 3
Stack additions: [S2, S1, 0x273, V206, V207]
Exit stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, 0x273, V206, V207]

================================

Block 0x25b
[0x25b:0x263]
---
Predecessors: [0x249, 0x264]
Successors: [0x264, 0x26f]
---
0x25b JUMPDEST
0x25c DUP1
0x25d DUP3
0x25e GT
0x25f ISZERO
0x260 PUSH2 0x26f
0x263 JUMPI
---
0x25b: JUMPDEST 
0x25e: V208 = GT V206 S0
0x25f: V209 = ISZERO V208
0x260: V210 = 0x26f
0x263: JUMPI 0x26f V209
---
Entry stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, 0x273, V206, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, 0x273, V206, S0]

================================

Block 0x264
[0x264:0x26e]
---
Predecessors: [0x25b]
Successors: [0x25b]
---
0x264 PUSH1 0x0
0x266 DUP2
0x267 SSTORE
0x268 PUSH1 0x1
0x26a ADD
0x26b PUSH2 0x25b
0x26e JUMP
---
0x264: V211 = 0x0
0x267: S[S0] = 0x0
0x268: V212 = 0x1
0x26a: V213 = ADD 0x1 S0
0x26b: V214 = 0x25b
0x26e: JUMP 0x25b
---
Entry stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, 0x273, V206, S0]
Stack pops: 1
Stack additions: [V213]
Exit stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, 0x273, V206, V213]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x25b]
Successors: [0x273]
---
0x26f JUMPDEST
0x270 POP
0x271 SWAP1
0x272 JUMP
---
0x26f: JUMPDEST 
0x272: JUMP 0x273
---
Entry stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, 0x273, V206, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, V206]

================================

Block 0x273
[0x273:0x273]
---
Predecessors: [0x226, 0x26f]
Successors: [0x274]
---
0x273 JUMPDEST
---
0x273: JUMPDEST 
---
Entry stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, S0]

================================

Block 0x274
[0x274:0x284]
---
Predecessors: [0x273]
Successors: [0x285]
---
0x274 JUMPDEST
0x275 POP
0x276 POP
0x277 POP
0x278 SWAP2
0x279 PUSH1 0x0
0x27b MSTORE
0x27c PUSH1 0x20
0x27e PUSH1 0x0
0x280 SHA3
0x281 SWAP1
0x282 ADD
0x283 PUSH1 0x0
---
0x274: JUMPDEST 
0x279: V215 = 0x0
0x27b: M[0x0] = 0x1
0x27c: V216 = 0x20
0x27e: V217 = 0x0
0x280: V218 = SHA3 0x0 0x20
0x282: V219 = ADD V195 V218
0x283: V220 = 0x0
---
Entry stack: [V12, 0x8d, V193, 0x1, V195, V197, 0x1, V197, S0]
Stack pops: 6
Stack additions: [S3, V219, 0x0]
Exit stack: [V12, 0x8d, V193, V197, V219, 0x0]

================================

Block 0x285
[0x285:0x2a4]
---
Predecessors: [0x274]
Successors: [0x2a5]
---
0x285 JUMPDEST
0x286 DUP2
0x287 SLOAD
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 DUP1
0x291 DUP7
0x292 AND
0x293 PUSH2 0x100
0x296 SWAP4
0x297 SWAP1
0x298 SWAP4
0x299 EXP
0x29a SWAP3
0x29b DUP4
0x29c MUL
0x29d SWAP3
0x29e MUL
0x29f NOT
0x2a0 AND
0x2a1 OR
0x2a2 SWAP1
0x2a3 SSTORE
0x2a4 POP
---
0x285: JUMPDEST 
0x287: V221 = S[V219]
0x288: V222 = 0x1
0x28a: V223 = 0xa0
0x28c: V224 = 0x2
0x28e: V225 = EXP 0x2 0xa0
0x28f: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x292: V227 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x293: V228 = 0x100
0x299: V229 = EXP 0x100 0x0
0x29c: V230 = MUL 0x1 V227
0x29e: V231 = MUL 0x1 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V232 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V233 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V221
0x2a1: V234 = OR V233 V230
0x2a3: S[V219] = V234
---
Entry stack: [V12, 0x8d, V193, V197, V219, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x8d, V193]

================================

Block 0x2a5
[0x2a5:0x2a5]
---
Predecessors: [0x285]
Successors: [0x2a6]
---
0x2a5 JUMPDEST
---
0x2a5: JUMPDEST 
---
Entry stack: [V12, 0x8d, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V193]

================================

Block 0x2a6
[0x2a6:0x2a8]
---
Predecessors: [0x2a5]
Successors: [0x8d]
---
0x2a6 JUMPDEST
0x2a7 POP
0x2a8 JUMP
---
0x2a6: JUMPDEST 
0x2a8: JUMP 0x8d
---
Entry stack: [V12, 0x8d, V193]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a9
[0x2a9:0x2bf]
---
Predecessors: [0xcd]
Successors: [0x2c0, 0x2c4]
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x0
0x2ac SLOAD
0x2ad CALLER
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 SWAP1
0x2b7 DUP2
0x2b8 AND
0x2b9 SWAP2
0x2ba AND
0x2bb EQ
0x2bc PUSH2 0x2c4
0x2bf JUMPI
---
0x2a9: JUMPDEST 
0x2aa: V235 = 0x0
0x2ac: V236 = S[0x0]
0x2ad: V237 = CALLER
0x2ae: V238 = 0x1
0x2b0: V239 = 0xa0
0x2b2: V240 = 0x2
0x2b4: V241 = EXP 0x2 0xa0
0x2b5: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b8: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2ba: V244 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V245 = EQ V244 V243
0x2bc: V246 = 0x2c4
0x2bf: JUMPI 0x2c4 V245
---
Entry stack: [V12, 0x8d, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V74]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x2a9]
Successors: []
---
0x2c0 PUSH2 0x0
0x2c3 JUMP
---
0x2c0: V247 = 0x0
0x2c3: THROW 
---
Entry stack: [V12, 0x8d, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V74]

================================

Block 0x2c4
[0x2c4:0x325]
---
Predecessors: [0x2a9]
Successors: [0x326]
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x2
0x2c7 SLOAD
0x2c8 PUSH1 0x40
0x2ca DUP1
0x2cb MLOAD
0x2cc PUSH1 0x0
0x2ce PUSH1 0x20
0x2d0 SWAP2
0x2d1 DUP3
0x2d2 ADD
0x2d3 DUP2
0x2d4 SWAP1
0x2d5 MSTORE
0x2d6 DUP3
0x2d7 MLOAD
0x2d8 PUSH32 0x1c0463de00000000000000000000000000000000000000000000000000000000
0x2f9 DUP2
0x2fa MSTORE
0x2fb SWAP3
0x2fc MLOAD
0x2fd PUSH1 0x1
0x2ff PUSH1 0xa0
0x301 PUSH1 0x2
0x303 EXP
0x304 SUB
0x305 SWAP1
0x306 SWAP5
0x307 AND
0x308 SWAP4
0x309 PUSH4 0x1c0463de
0x30e SWAP4
0x30f PUSH1 0x4
0x311 DUP1
0x312 DUP3
0x313 ADD
0x314 SWAP5
0x315 SWAP4
0x316 SWAP2
0x317 DUP4
0x318 SWAP1
0x319 SUB
0x31a ADD
0x31b SWAP1
0x31c DUP3
0x31d SWAP1
0x31e DUP8
0x31f DUP1
0x320 EXTCODESIZE
0x321 ISZERO
0x322 PUSH2 0x0
0x325 JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V248 = 0x2
0x2c7: V249 = S[0x2]
0x2c8: V250 = 0x40
0x2cb: V251 = M[0x40]
0x2cc: V252 = 0x0
0x2ce: V253 = 0x20
0x2d2: V254 = ADD 0x20 V251
0x2d5: M[V254] = 0x0
0x2d7: V255 = M[0x40]
0x2d8: V256 = 0x1c0463de00000000000000000000000000000000000000000000000000000000
0x2fa: M[V255] = 0x1c0463de00000000000000000000000000000000000000000000000000000000
0x2fc: V257 = M[0x40]
0x2fd: V258 = 0x1
0x2ff: V259 = 0xa0
0x301: V260 = 0x2
0x303: V261 = EXP 0x2 0xa0
0x304: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x307: V263 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x309: V264 = 0x1c0463de
0x30f: V265 = 0x4
0x313: V266 = ADD V255 0x4
0x319: V267 = SUB V255 V257
0x31a: V268 = ADD V267 0x4
0x320: V269 = EXTCODESIZE V263
0x321: V270 = ISZERO V269
0x322: V271 = 0x0
0x325: THROWI V270
---
Entry stack: [V12, 0x8d, V74]
Stack pops: 0
Stack additions: [V263, 0x1c0463de, V266, 0x20, V257, V268, V257, 0x0, V263]
Exit stack: [V12, 0x8d, V74, V263, 0x1c0463de, V266, 0x20, V257, V268, V257, 0x0, V263]

================================

Block 0x326
[0x326:0x32f]
---
Predecessors: [0x2c4]
Successors: [0x330]
---
0x326 PUSH1 0x32
0x328 GAS
0x329 SUB
0x32a CALL
0x32b ISZERO
0x32c PUSH2 0x0
0x32f JUMPI
---
0x326: V272 = 0x32
0x328: V273 = GAS
0x329: V274 = SUB V273 0x32
0x32a: V275 = CALL V274 V263 0x0 V257 V268 V257 0x20
0x32b: V276 = ISZERO V275
0x32c: V277 = 0x0
0x32f: THROWI V276
---
Entry stack: [V12, 0x8d, V74, V263, 0x1c0463de, V266, 0x20, V257, V268, V257, 0x0, V263]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8d, V74, V263, 0x1c0463de, V266]

================================

Block 0x330
[0x330:0x33d]
---
Predecessors: [0x326]
Successors: [0x33e, 0x342]
---
0x330 POP
0x331 POP
0x332 PUSH1 0x40
0x334 MLOAD
0x335 MLOAD
0x336 ISZERO
0x337 ISZERO
0x338 SWAP1
0x339 POP
0x33a PUSH2 0x342
0x33d JUMPI
---
0x332: V278 = 0x40
0x334: V279 = M[0x40]
0x335: V280 = M[V279]
0x336: V281 = ISZERO V280
0x337: V282 = ISZERO V281
0x33a: V283 = 0x342
0x33d: JUMPI 0x342 V282
---
Entry stack: [V12, 0x8d, V74, V263, 0x1c0463de, V266]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8d, V74]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x330]
Successors: []
---
0x33e PUSH2 0x0
0x341 JUMP
---
0x33e: V284 = 0x0
0x341: THROW 
---
Entry stack: [V12, 0x8d, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V74]

================================

Block 0x342
[0x342:0x3a3]
---
Predecessors: [0x330]
Successors: [0x3a4]
---
0x342 JUMPDEST
0x343 PUSH1 0x2
0x345 SLOAD
0x346 PUSH1 0x0
0x348 DUP1
0x349 SLOAD
0x34a PUSH1 0x40
0x34c DUP1
0x34d MLOAD
0x34e PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x1
0x373 PUSH1 0xa0
0x375 PUSH1 0x2
0x377 EXP
0x378 SUB
0x379 SWAP3
0x37a DUP4
0x37b AND
0x37c PUSH1 0x4
0x37e DUP3
0x37f ADD
0x380 MSTORE
0x381 SWAP1
0x382 MLOAD
0x383 SWAP2
0x384 SWAP1
0x385 SWAP4
0x386 AND
0x387 SWAP3
0x388 PUSH4 0xf2fde38b
0x38d SWAP3
0x38e PUSH1 0x24
0x390 DUP1
0x391 DUP4
0x392 ADD
0x393 SWAP4
0x394 SWAP2
0x395 SWAP3
0x396 DUP3
0x397 SWAP1
0x398 SUB
0x399 ADD
0x39a DUP2
0x39b DUP4
0x39c DUP8
0x39d DUP1
0x39e EXTCODESIZE
0x39f ISZERO
0x3a0 PUSH2 0x0
0x3a3 JUMPI
---
0x342: JUMPDEST 
0x343: V285 = 0x2
0x345: V286 = S[0x2]
0x346: V287 = 0x0
0x349: V288 = S[0x0]
0x34a: V289 = 0x40
0x34d: V290 = M[0x40]
0x34e: V291 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x370: M[V290] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x371: V292 = 0x1
0x373: V293 = 0xa0
0x375: V294 = 0x2
0x377: V295 = EXP 0x2 0xa0
0x378: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37b: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x37c: V298 = 0x4
0x37f: V299 = ADD V290 0x4
0x380: M[V299] = V297
0x382: V300 = M[0x40]
0x386: V301 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x388: V302 = 0xf2fde38b
0x38e: V303 = 0x24
0x392: V304 = ADD V290 0x24
0x398: V305 = SUB V290 V300
0x399: V306 = ADD V305 0x24
0x39e: V307 = EXTCODESIZE V301
0x39f: V308 = ISZERO V307
0x3a0: V309 = 0x0
0x3a3: THROWI V308
---
Entry stack: [V12, 0x8d, V74]
Stack pops: 0
Stack additions: [V301, 0xf2fde38b, V304, 0x0, V300, V306, V300, 0x0, V301]
Exit stack: [V12, 0x8d, V74, V301, 0xf2fde38b, V304, 0x0, V300, V306, V300, 0x0, V301]

================================

Block 0x3a4
[0x3a4:0x3ad]
---
Predecessors: [0x342]
Successors: [0x3ae]
---
0x3a4 PUSH1 0x32
0x3a6 GAS
0x3a7 SUB
0x3a8 CALL
0x3a9 ISZERO
0x3aa PUSH2 0x0
0x3ad JUMPI
---
0x3a4: V310 = 0x32
0x3a6: V311 = GAS
0x3a7: V312 = SUB V311 0x32
0x3a8: V313 = CALL V312 V301 0x0 V300 V306 V300 0x0
0x3a9: V314 = ISZERO V313
0x3aa: V315 = 0x0
0x3ad: THROWI V314
---
Entry stack: [V12, 0x8d, V74, V301, 0xf2fde38b, V304, 0x0, V300, V306, V300, 0x0, V301]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8d, V74, V301, 0xf2fde38b, V304]

================================

Block 0x3ae
[0x3ae:0x3d8]
---
Predecessors: [0x3a4]
Successors: [0x3d9]
---
0x3ae POP
0x3af POP
0x3b0 PUSH1 0x2
0x3b2 DUP1
0x3b3 SLOAD
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 NOT
0x3ca AND
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 DUP5
0x3d4 AND
0x3d5 OR
0x3d6 SWAP1
0x3d7 SSTORE
0x3d8 POP
---
0x3b0: V316 = 0x2
0x3b3: V317 = S[0x2]
0x3b4: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V319 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: V320 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V317
0x3cb: V321 = 0x1
0x3cd: V322 = 0xa0
0x3cf: V323 = 0x2
0x3d1: V324 = EXP 0x2 0xa0
0x3d2: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d4: V326 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V327 = OR V326 V320
0x3d7: S[0x2] = V327
---
Entry stack: [V12, 0x8d, V74, V301, 0xf2fde38b, V304]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x8d, V74]

================================

Block 0x3d9
[0x3d9:0x3d9]
---
Predecessors: [0x3ae]
Successors: [0x3da]
---
0x3d9 JUMPDEST
---
0x3d9: JUMPDEST 
---
Entry stack: [V12, 0x8d, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V74]

================================

Block 0x3da
[0x3da:0x3da]
---
Predecessors: [0x3d9]
Successors: [0x3db]
---
0x3da JUMPDEST
---
0x3da: JUMPDEST 
---
Entry stack: [V12, 0x8d, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V74]

================================

Block 0x3db
[0x3db:0x3dd]
---
Predecessors: [0x3da]
Successors: [0x8d]
---
0x3db JUMPDEST
0x3dc POP
0x3dd JUMP
---
0x3db: JUMPDEST 
0x3dd: JUMP 0x8d
---
Entry stack: [V12, 0x8d, V74]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3de
[0x3de:0x3f4]
---
Predecessors: [0xe8]
Successors: [0x3f5, 0x3f9]
---
0x3de JUMPDEST
0x3df PUSH1 0x0
0x3e1 SLOAD
0x3e2 CALLER
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb SWAP1
0x3ec DUP2
0x3ed AND
0x3ee SWAP2
0x3ef AND
0x3f0 EQ
0x3f1 PUSH2 0x3f9
0x3f4 JUMPI
---
0x3de: JUMPDEST 
0x3df: V328 = 0x0
0x3e1: V329 = S[0x0]
0x3e2: V330 = CALLER
0x3e3: V331 = 0x1
0x3e5: V332 = 0xa0
0x3e7: V333 = 0x2
0x3e9: V334 = EXP 0x2 0xa0
0x3ea: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ed: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x3ef: V337 = AND V329 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V338 = EQ V337 V336
0x3f1: V339 = 0x3f9
0x3f4: JUMPI 0x3f9 V338
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d]

================================

Block 0x3f5
[0x3f5:0x3f8]
---
Predecessors: [0x3de]
Successors: []
---
0x3f5 PUSH2 0x0
0x3f8 JUMP
---
0x3f5: V340 = 0x0
0x3f8: THROW 
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d]

================================

Block 0x3f9
[0x3f9:0x42d]
---
Predecessors: [0x3de]
Successors: [0x8b, 0x42e]
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd SLOAD
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 SWAP2
0x40a DUP3
0x40b AND
0x40c SWAP3
0x40d ADDRESS
0x40e SWAP1
0x40f SWAP3
0x410 AND
0x411 BALANCE
0x412 DUP1
0x413 ISZERO
0x414 PUSH2 0x8fc
0x417 MUL
0x418 SWAP3
0x419 SWAP1
0x41a SWAP2
0x41b SWAP1
0x41c DUP2
0x41d DUP2
0x41e DUP2
0x41f DUP6
0x420 DUP9
0x421 DUP9
0x422 CALL
0x423 SWAP4
0x424 POP
0x425 POP
0x426 POP
0x427 POP
0x428 ISZERO
0x429 ISZERO
0x42a PUSH2 0x8b
0x42d JUMPI
---
0x3f9: JUMPDEST 
0x3fa: V341 = 0x0
0x3fd: V342 = S[0x0]
0x3fe: V343 = 0x40
0x400: V344 = M[0x40]
0x401: V345 = 0x1
0x403: V346 = 0xa0
0x405: V347 = 0x2
0x407: V348 = EXP 0x2 0xa0
0x408: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40b: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x40d: V351 = ADDRESS
0x410: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x411: V353 = BALANCE V352
0x413: V354 = ISZERO V353
0x414: V355 = 0x8fc
0x417: V356 = MUL 0x8fc V354
0x422: V357 = CALL V356 V350 V353 V344 0x0 V344 0x0
0x428: V358 = ISZERO V357
0x429: V359 = ISZERO V358
0x42a: V360 = 0x8b
0x42d: JUMPI 0x8b V359
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d]

================================

Block 0x42e
[0x42e:0x431]
---
Predecessors: [0x3f9]
Successors: []
---
0x42e PUSH2 0x0
0x431 JUMP
---
0x42e: V361 = 0x0
0x431: THROW 
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d]

================================

Block 0x432
[0x432:0x432]
---
Predecessors: []
Successors: [0x433]
---
0x432 JUMPDEST
---
0x432: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x433
[0x433:0x433]
---
Predecessors: [0x432]
Successors: [0x434]
---
0x433 JUMPDEST
---
0x433: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x434
[0x434:0x435]
---
Predecessors: [0x433]
Successors: []
Has unresolved jump.
---
0x434 JUMPDEST
0x435 JUMP
---
0x434: JUMPDEST 
0x435: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x436
[0x436:0x496]
---
Predecessors: [0xf7]
Successors: [0x497]
---
0x436 JUMPDEST
0x437 PUSH1 0x2
0x439 SLOAD
0x43a PUSH1 0x40
0x43c DUP1
0x43d MLOAD
0x43e PUSH1 0x0
0x440 PUSH1 0x20
0x442 SWAP2
0x443 DUP3
0x444 ADD
0x445 DUP2
0x446 SWAP1
0x447 MSTORE
0x448 DUP3
0x449 MLOAD
0x44a PUSH32 0x8a19c8bc00000000000000000000000000000000000000000000000000000000
0x46b DUP2
0x46c MSTORE
0x46d SWAP3
0x46e MLOAD
0x46f SWAP1
0x470 SWAP4
0x471 PUSH1 0x1
0x473 PUSH1 0xa0
0x475 PUSH1 0x2
0x477 EXP
0x478 SUB
0x479 AND
0x47a SWAP3
0x47b PUSH4 0x8a19c8bc
0x480 SWAP3
0x481 PUSH1 0x4
0x483 DUP1
0x484 DUP4
0x485 ADD
0x486 SWAP4
0x487 SWAP2
0x488 SWAP3
0x489 DUP3
0x48a SWAP1
0x48b SUB
0x48c ADD
0x48d DUP2
0x48e DUP8
0x48f DUP8
0x490 DUP1
0x491 EXTCODESIZE
0x492 ISZERO
0x493 PUSH2 0x0
0x496 JUMPI
---
0x436: JUMPDEST 
0x437: V362 = 0x2
0x439: V363 = S[0x2]
0x43a: V364 = 0x40
0x43d: V365 = M[0x40]
0x43e: V366 = 0x0
0x440: V367 = 0x20
0x444: V368 = ADD 0x20 V365
0x447: M[V368] = 0x0
0x449: V369 = M[0x40]
0x44a: V370 = 0x8a19c8bc00000000000000000000000000000000000000000000000000000000
0x46c: M[V369] = 0x8a19c8bc00000000000000000000000000000000000000000000000000000000
0x46e: V371 = M[0x40]
0x471: V372 = 0x1
0x473: V373 = 0xa0
0x475: V374 = 0x2
0x477: V375 = EXP 0x2 0xa0
0x478: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x479: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x47b: V378 = 0x8a19c8bc
0x481: V379 = 0x4
0x485: V380 = ADD V369 0x4
0x48b: V381 = SUB V369 V371
0x48c: V382 = ADD V381 0x4
0x491: V383 = EXTCODESIZE V377
0x492: V384 = ISZERO V383
0x493: V385 = 0x0
0x496: THROWI V384
---
Entry stack: [V12, 0x9c]
Stack pops: 0
Stack additions: [0x0, V377, 0x8a19c8bc, V380, 0x20, V371, V382, V371, 0x0, V377]
Exit stack: [V12, 0x9c, 0x0, V377, 0x8a19c8bc, V380, 0x20, V371, V382, V371, 0x0, V377]

================================

Block 0x497
[0x497:0x4a0]
---
Predecessors: [0x436]
Successors: [0x4a1]
---
0x497 PUSH1 0x32
0x499 GAS
0x49a SUB
0x49b CALL
0x49c ISZERO
0x49d PUSH2 0x0
0x4a0 JUMPI
---
0x497: V386 = 0x32
0x499: V387 = GAS
0x49a: V388 = SUB V387 0x32
0x49b: V389 = CALL V388 V377 0x0 V371 V382 V371 0x20
0x49c: V390 = ISZERO V389
0x49d: V391 = 0x0
0x4a0: THROWI V390
---
Entry stack: [V12, 0x9c, 0x0, V377, 0x8a19c8bc, V380, 0x20, V371, V382, V371, 0x0, V377]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x9c, 0x0, V377, 0x8a19c8bc, V380]

================================

Block 0x4a1
[0x4a1:0x4a9]
---
Predecessors: [0x497]
Successors: [0x4aa]
---
0x4a1 POP
0x4a2 POP
0x4a3 PUSH1 0x40
0x4a5 MLOAD
0x4a6 MLOAD
0x4a7 SWAP2
0x4a8 POP
0x4a9 POP
---
0x4a3: V392 = 0x40
0x4a5: V393 = M[0x40]
0x4a6: V394 = M[V393]
---
Entry stack: [V12, 0x9c, 0x0, V377, 0x8a19c8bc, V380]
Stack pops: 4
Stack additions: [V394]
Exit stack: [V12, 0x9c, V394]

================================

Block 0x4aa
[0x4aa:0x4ac]
---
Predecessors: [0x4a1]
Successors: [0x9c]
---
0x4aa JUMPDEST
0x4ab SWAP1
0x4ac JUMP
---
0x4aa: JUMPDEST 
0x4ac: JUMP 0x9c
---
Entry stack: [V12, 0x9c, V394]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V394]

================================

Block 0x4ad
[0x4ad:0x4b9]
---
Predecessors: [0x120]
Successors: [0x4ba]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x1
0x4b0 DUP2
0x4b1 DUP2
0x4b2 SLOAD
0x4b3 DUP2
0x4b4 LT
0x4b5 ISZERO
0x4b6 PUSH2 0x0
0x4b9 JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V395 = 0x1
0x4b2: V396 = S[0x1]
0x4b4: V397 = LT V100 V396
0x4b5: V398 = ISZERO V397
0x4b6: V399 = 0x0
0x4b9: THROWI V398
---
Entry stack: [V12, 0x9c, V100]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V12, 0x9c, V100, 0x1, V100]

================================

Block 0x4ba
[0x4ba:0x4c6]
---
Predecessors: [0x4ad]
Successors: [0x4c7]
---
0x4ba SWAP1
0x4bb PUSH1 0x0
0x4bd MSTORE
0x4be PUSH1 0x20
0x4c0 PUSH1 0x0
0x4c2 SHA3
0x4c3 SWAP1
0x4c4 ADD
0x4c5 PUSH1 0x0
---
0x4bb: V400 = 0x0
0x4bd: M[0x0] = 0x1
0x4be: V401 = 0x20
0x4c0: V402 = 0x0
0x4c2: V403 = SHA3 0x0 0x20
0x4c4: V404 = ADD V100 V403
0x4c5: V405 = 0x0
---
Entry stack: [V12, 0x9c, V100, 0x1, V100]
Stack pops: 2
Stack additions: [V404, 0x0]
Exit stack: [V12, 0x9c, V100, V404, 0x0]

================================

Block 0x4c7
[0x4c7:0x4dc]
---
Predecessors: [0x4ba]
Successors: [0x9c]
---
0x4c7 JUMPDEST
0x4c8 SWAP2
0x4c9 POP
0x4ca SLOAD
0x4cb SWAP1
0x4cc PUSH2 0x100
0x4cf EXP
0x4d0 SWAP1
0x4d1 DIV
0x4d2 PUSH1 0x1
0x4d4 PUSH1 0xa0
0x4d6 PUSH1 0x2
0x4d8 EXP
0x4d9 SUB
0x4da AND
0x4db DUP2
0x4dc JUMP
---
0x4c7: JUMPDEST 
0x4ca: V406 = S[V404]
0x4cc: V407 = 0x100
0x4cf: V408 = EXP 0x100 0x0
0x4d1: V409 = DIV V406 0x1
0x4d2: V410 = 0x1
0x4d4: V411 = 0xa0
0x4d6: V412 = 0x2
0x4d8: V413 = EXP 0x2 0xa0
0x4d9: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4da: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x4dc: JUMP 0x9c
---
Entry stack: [V12, 0x9c, V100, V404, 0x0]
Stack pops: 4
Stack additions: [S3, V415]
Exit stack: [V12, 0x9c, V415]

================================

Block 0x4dd
[0x4dd:0x4e0]
---
Predecessors: [0x14c]
Successors: [0x4e1]
---
0x4dd JUMPDEST
0x4de PUSH1 0x1
0x4e0 SLOAD
---
0x4dd: JUMPDEST 
0x4de: V416 = 0x1
0x4e0: V417 = S[0x1]
---
Entry stack: [V12, 0x153]
Stack pops: 0
Stack additions: [V417]
Exit stack: [V12, 0x153, V417]

================================

Block 0x4e1
[0x4e1:0x4e3]
---
Predecessors: [0x4dd]
Successors: [0x153]
---
0x4e1 JUMPDEST
0x4e2 SWAP1
0x4e3 JUMP
---
0x4e1: JUMPDEST 
0x4e3: JUMP 0x153
---
Entry stack: [V12, 0x153, V417]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V417]

================================

Block 0x4e4
[0x4e4:0x4fa]
---
Predecessors: [0x16b]
Successors: [0x4fb, 0x4ff]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x0
0x4e7 SLOAD
0x4e8 CALLER
0x4e9 PUSH1 0x1
0x4eb PUSH1 0xa0
0x4ed PUSH1 0x2
0x4ef EXP
0x4f0 SUB
0x4f1 SWAP1
0x4f2 DUP2
0x4f3 AND
0x4f4 SWAP2
0x4f5 AND
0x4f6 EQ
0x4f7 PUSH2 0x4ff
0x4fa JUMPI
---
0x4e4: JUMPDEST 
0x4e5: V418 = 0x0
0x4e7: V419 = S[0x0]
0x4e8: V420 = CALLER
0x4e9: V421 = 0x1
0x4eb: V422 = 0xa0
0x4ed: V423 = 0x2
0x4ef: V424 = EXP 0x2 0xa0
0x4f0: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x4f5: V427 = AND V419 0xffffffffffffffffffffffffffffffffffffffff
0x4f6: V428 = EQ V427 V426
0x4f7: V429 = 0x4ff
0x4fa: JUMPI 0x4ff V428
---
Entry stack: [V12, 0x8d, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V134]

================================

Block 0x4fb
[0x4fb:0x4fe]
---
Predecessors: [0x4e4]
Successors: []
---
0x4fb PUSH2 0x0
0x4fe JUMP
---
0x4fb: V430 = 0x0
0x4fe: THROW 
---
Entry stack: [V12, 0x8d, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V134]

================================

Block 0x4ff
[0x4ff:0x527]
---
Predecessors: [0x4e4]
Successors: [0x528]
---
0x4ff JUMPDEST
0x500 PUSH1 0x0
0x502 DUP1
0x503 SLOAD
0x504 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x519 NOT
0x51a AND
0x51b PUSH1 0x1
0x51d PUSH1 0xa0
0x51f PUSH1 0x2
0x521 EXP
0x522 SUB
0x523 DUP4
0x524 AND
0x525 OR
0x526 SWAP1
0x527 SSTORE
---
0x4ff: JUMPDEST 
0x500: V431 = 0x0
0x503: V432 = S[0x0]
0x504: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x519: V434 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V435 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V432
0x51b: V436 = 0x1
0x51d: V437 = 0xa0
0x51f: V438 = 0x2
0x521: V439 = EXP 0x2 0xa0
0x522: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x524: V441 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x525: V442 = OR V441 V435
0x527: S[0x0] = V442
---
Entry stack: [V12, 0x8d, V134]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8d, V134]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x4ff]
Successors: [0x529]
---
0x528 JUMPDEST
---
0x528: JUMPDEST 
---
Entry stack: [V12, 0x8d, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d, V134]

================================

Block 0x529
[0x529:0x52b]
---
Predecessors: [0x528]
Successors: [0x8d]
---
0x529 JUMPDEST
0x52a POP
0x52b JUMP
---
0x529: JUMPDEST 
0x52b: JUMP 0x8d
---
Entry stack: [V12, 0x8d, V134]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x52c
[0x52c:0x542]
---
Predecessors: [0x186]
Successors: [0x543, 0x547]
---
0x52c JUMPDEST
0x52d PUSH1 0x0
0x52f SLOAD
0x530 CALLER
0x531 PUSH1 0x1
0x533 PUSH1 0xa0
0x535 PUSH1 0x2
0x537 EXP
0x538 SUB
0x539 SWAP1
0x53a DUP2
0x53b AND
0x53c SWAP2
0x53d AND
0x53e EQ
0x53f PUSH2 0x547
0x542 JUMPI
---
0x52c: JUMPDEST 
0x52d: V443 = 0x0
0x52f: V444 = S[0x0]
0x530: V445 = CALLER
0x531: V446 = 0x1
0x533: V447 = 0xa0
0x535: V448 = 0x2
0x537: V449 = EXP 0x2 0xa0
0x538: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53b: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x53d: V452 = AND V444 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V453 = EQ V452 V451
0x53f: V454 = 0x547
0x542: JUMPI 0x547 V453
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d]

================================

Block 0x543
[0x543:0x546]
---
Predecessors: [0x52c]
Successors: []
---
0x543 PUSH2 0x0
0x546 JUMP
---
0x543: V455 = 0x0
0x546: THROW 
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d]

================================

Block 0x547
[0x547:0x554]
---
Predecessors: [0x52c]
Successors: []
---
0x547 JUMPDEST
0x548 PUSH1 0x0
0x54a SLOAD
0x54b PUSH1 0x1
0x54d PUSH1 0xa0
0x54f PUSH1 0x2
0x551 EXP
0x552 SUB
0x553 AND
0x554 SELFDESTRUCT
---
0x547: JUMPDEST 
0x548: V456 = 0x0
0x54a: V457 = S[0x0]
0x54b: V458 = 0x1
0x54d: V459 = 0xa0
0x54f: V460 = 0x2
0x551: V461 = EXP 0x2 0xa0
0x552: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x553: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x554: SELFDESTRUCT V463
---
Entry stack: [V12, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8d]

================================

Block 0x555
[0x555:0x555]
---
Predecessors: []
Successors: [0x556]
---
0x555 JUMPDEST
---
0x555: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x556
[0x556:0x566]
---
Predecessors: [0x555]
Successors: [0x567]
Has unresolved jump.
---
0x556 JUMPDEST
0x557 JUMP
0x558 STOP
0x559 LOG1
0x55a PUSH6 0x627a7a723058
0x561 SHA3
0x562 GT
0x563 MISSING 0xcb
0x564 MISSING 0x22
0x565 NOT
0x566 JUMPI
---
0x556: JUMPDEST 
0x557: JUMP S0
0x558: STOP 
0x559: LOG S0 S1 S2
0x55a: V464 = 0x627a7a723058
0x561: V465 = SHA3 0x627a7a723058 S3
0x562: V466 = GT V465 S4
0x563: MISSING 0xcb
0x564: MISSING 0x22
0x565: V467 = NOT S0
0x566: JUMPI V467 S1
---
Entry stack: []
Stack pops: 14
Stack additions: []
Exit stack: []

================================

Block 0x567
[0x567:0x590]
---
Predecessors: [0x556]
Successors: []
---
0x567 SWAP9
0x568 SHL
0x569 RETURNDATACOPY
0x56a MISSING 0xce
0x56b SWAP3
0x56c MSIZE
0x56d LOG1
0x56e CODECOPY
0x56f SWAP10
0x570 DUP12
0x571 LOG3
0x572 BYTE
0x573 MISSING 0xb5
0x574 CALLCODE
0x575 MISSING 0x47
0x576 MISSING 0x47
0x577 SWAP12
0x578 MISSING 0xb1
0x579 MISSING 0xb7
0x57a DUP2
0x57b PUSH21 0x59d7ddeaf8f30029
---
0x568: V468 = SHL S9 S1
0x569: RETURNDATACOPY V468 S2 S3
0x56a: MISSING 0xce
0x56c: V469 = MSIZE
0x56d: LOG V469 S3 S1
0x56e: CODECOPY S2 S0 S4
0x571: LOG S16 S15 S6 S7 S8
0x572: V470 = BYTE S9 S10
0x573: MISSING 0xb5
0x574: V471 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x575: MISSING 0x47
0x576: MISSING 0x47
0x578: MISSING 0xb1
0x579: MISSING 0xb7
0x57b: V472 = 0x59d7ddeaf8f30029
---
Entry stack: []
Stack pops: 302
Stack additions: [0x59d7ddeaf8f30029, S1, S0, S1]
Exit stack: []

================================

Function 0:
Public function signature: 0x134087a2
Entry block: 0x8f
Exit block: 0x9c
Body: 0x8f, 0x95, 0x9c, 0x18f

Function 1:
Public function signature: 0x1e820325
Entry block: 0xb8
Exit block: 0x8d
Body: 0x8d, 0xb8, 0xbe, 0x19e, 0x1b6, 0x1ba, 0x21c, 0x226, 0x249, 0x25b, 0x264, 0x26f, 0x273, 0x274, 0x285, 0x2a5, 0x2a6

Function 2:
Public function signature: 0x2dd5b58e
Entry block: 0xc7
Exit block: 0x8d
Body: 0x8d, 0xc7, 0xcd, 0x2a9, 0x2c0, 0x2c4, 0x326, 0x330, 0x33e, 0x342, 0x3a4, 0x3ae, 0x3d9, 0x3da, 0x3db

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0xe2
Exit block: 0x8d
Body: 0x8b, 0x8d, 0xe2, 0xe8, 0x3de, 0x3f5, 0x3f9, 0x42e

Function 4:
Public function signature: 0x8a19c8bc
Entry block: 0xf1
Exit block: 0x9c
Body: 0x9c, 0xf1, 0xf7, 0x436, 0x497, 0x4a1, 0x4aa

Function 5:
Public function signature: 0x9aa92f0c
Entry block: 0x11a
Exit block: 0x9c
Body: 0x9c, 0x11a, 0x120, 0x4ad, 0x4ba, 0x4c7

Function 6:
Public function signature: 0xeac8221e
Entry block: 0x146
Exit block: 0x153
Body: 0x146, 0x14c, 0x153, 0x4dd, 0x4e1

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x165
Exit block: 0x8d
Body: 0x8d, 0x165, 0x16b, 0x4e4, 0x4fb, 0x4ff, 0x528, 0x529

Function 8:
Public function signature: 0xfc0e74d1
Entry block: 0x180
Exit block: 0x547
Body: 0x180, 0x186, 0x52c, 0x543, 0x547

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x86
Body: 0x7d, 0x83, 0x86

