Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x46]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x4bb278f3
0x34 EQ
0x35 PUSH2 0x46
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x4bb278f3
0x34: V9 = EQ 0x4bb278f3 V7
0x35: V10 = 0x46
0x38: JUMPI 0x46 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x58]
---
0x39 DUP1
0x3a PUSH4 0x590e1ae3
0x3f EQ
0x40 PUSH2 0x58
0x43 JUMPI
---
0x3a: V11 = 0x590e1ae3
0x3f: V12 = EQ 0x590e1ae3 V7
0x40: V13 = 0x58
0x43: JUMPI 0x58 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x45]
---
Predecessors: [0x39]
Successors: []
---
0x44 JUMPDEST
0x45 INVALID
---
0x44: JUMPDEST 
0x45: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x46
[0x46:0x4c]
---
Predecessors: [0x0]
Successors: [0x4d, 0x4e]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 ISZERO
0x49 PUSH2 0x4e
0x4c JUMPI
---
0x46: JUMPDEST 
0x47: V14 = CALLVALUE
0x48: V15 = ISZERO V14
0x49: V16 = 0x4e
0x4c: JUMPI 0x4e V15
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x4d
[0x4d:0x4d]
---
Predecessors: [0x46]
Successors: []
---
0x4d INVALID
---
0x4d: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x4e
[0x4e:0x55]
---
Predecessors: [0x46]
Successors: [0x6a]
---
0x4e JUMPDEST
0x4f PUSH2 0x56
0x52 PUSH2 0x6a
0x55 JUMP
---
0x4e: JUMPDEST 
0x4f: V17 = 0x56
0x52: V18 = 0x6a
0x55: JUMP 0x6a
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V7, 0x56]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x18c]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x58
[0x58:0x5e]
---
Predecessors: [0x39]
Successors: [0x5f, 0x60]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a ISZERO
0x5b PUSH2 0x60
0x5e JUMPI
---
0x58: JUMPDEST 
0x59: V19 = CALLVALUE
0x5a: V20 = ISZERO V19
0x5b: V21 = 0x60
0x5e: JUMPI 0x60 V20
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0x5f]
---
Predecessors: [0x58]
Successors: []
---
0x5f INVALID
---
0x5f: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x60
[0x60:0x67]
---
Predecessors: [0x58]
Successors: [0x18e]
---
0x60 JUMPDEST
0x61 PUSH2 0x68
0x64 PUSH2 0x18e
0x67 JUMP
---
0x60: JUMPDEST 
0x61: V22 = 0x68
0x64: V23 = 0x18e
0x67: JUMP 0x18e
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x68]
Exit stack: [V7, 0x68]

================================

Block 0x68
[0x68:0x69]
---
Predecessors: [0x2b0]
Successors: []
---
0x68 JUMPDEST
0x69 STOP
---
0x68: JUMPDEST 
0x69: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6a
[0x6a:0xc0]
---
Predecessors: [0x4e]
Successors: [0xc1, 0x113]
---
0x6a JUMPDEST
0x6b PUSH1 0x0
0x6d PUSH1 0x0
0x6f SWAP1
0x70 SLOAD
0x71 SWAP1
0x72 PUSH2 0x100
0x75 EXP
0x76 SWAP1
0x77 DIV
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 CALLER
0xa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba AND
0xbb EQ
0xbc DUP1
0xbd PUSH2 0x113
0xc0 JUMPI
---
0x6a: JUMPDEST 
0x6b: V24 = 0x0
0x6d: V25 = 0x0
0x70: V26 = S[0x0]
0x72: V27 = 0x100
0x75: V28 = EXP 0x100 0x0
0x77: V29 = DIV V26 0x1
0x78: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x8e: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xa4: V34 = CALLER
0xa5: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xba: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xbb: V37 = EQ V36 V33
0xbd: V38 = 0x113
0xc0: JUMPI 0x113 V37
---
Entry stack: [V7, 0x56]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V7, 0x56, V37]

================================

Block 0xc1
[0xc1:0x112]
---
Predecessors: [0x6a]
Successors: [0x113]
---
0xc1 POP
0xc2 PUSH1 0x2
0xc4 PUSH1 0x0
0xc6 SWAP1
0xc7 SLOAD
0xc8 SWAP1
0xc9 PUSH2 0x100
0xcc EXP
0xcd SWAP1
0xce DIV
0xcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4 AND
0xe5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa AND
0xfb CALLER
0xfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111 AND
0x112 EQ
---
0xc2: V39 = 0x2
0xc4: V40 = 0x0
0xc7: V41 = S[0x2]
0xc9: V42 = 0x100
0xcc: V43 = EXP 0x100 0x0
0xce: V44 = DIV V41 0x1
0xcf: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xe5: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xfb: V49 = CALLER
0xfc: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0x111: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x112: V52 = EQ V51 V48
---
Entry stack: [V7, 0x56, V37]
Stack pops: 1
Stack additions: [V52]
Exit stack: [V7, 0x56, V52]

================================

Block 0x113
[0x113:0x118]
---
Predecessors: [0x6a, 0xc1]
Successors: [0x119, 0x18b]
---
0x113 JUMPDEST
0x114 ISZERO
0x115 PUSH2 0x18b
0x118 JUMPI
---
0x113: JUMPDEST 
0x114: V53 = ISZERO S0
0x115: V54 = 0x18b
0x118: JUMPI 0x18b V53
---
Entry stack: [V7, 0x56, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x56]

================================

Block 0x119
[0x119:0x18a]
---
Predecessors: [0x113]
Successors: [0x18b]
---
0x119 PUSH1 0x1
0x11b PUSH1 0x0
0x11d SWAP1
0x11e SLOAD
0x11f SWAP1
0x120 PUSH2 0x100
0x123 EXP
0x124 SWAP1
0x125 DIV
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 PUSH2 0x8fc
0x155 ADDRESS
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c BALANCE
0x16d SWAP1
0x16e DUP2
0x16f ISZERO
0x170 MUL
0x171 SWAP1
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 SWAP1
0x177 POP
0x178 PUSH1 0x0
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e DUP4
0x17f SUB
0x180 DUP2
0x181 DUP6
0x182 DUP9
0x183 DUP9
0x184 CALL
0x185 SWAP4
0x186 POP
0x187 POP
0x188 POP
0x189 POP
0x18a POP
---
0x119: V55 = 0x1
0x11b: V56 = 0x0
0x11e: V57 = S[0x1]
0x120: V58 = 0x100
0x123: V59 = EXP 0x100 0x0
0x125: V60 = DIV V57 0x1
0x126: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x13c: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x152: V65 = 0x8fc
0x155: V66 = ADDRESS
0x156: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x16c: V69 = BALANCE V68
0x16f: V70 = ISZERO V69
0x170: V71 = MUL V70 0x8fc
0x172: V72 = 0x40
0x174: V73 = M[0x40]
0x178: V74 = 0x0
0x17a: V75 = 0x40
0x17c: V76 = M[0x40]
0x17f: V77 = SUB V73 V76
0x184: V78 = CALL V71 V64 V69 V76 V77 V76 0x0
---
Entry stack: [V7, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x56]

================================

Block 0x18b
[0x18b:0x18b]
---
Predecessors: [0x113, 0x119]
Successors: [0x18c]
---
0x18b JUMPDEST
---
0x18b: JUMPDEST 
---
Entry stack: [V7, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x56]

================================

Block 0x18c
[0x18c:0x18d]
---
Predecessors: [0x18b]
Successors: [0x56]
---
0x18c JUMPDEST
0x18d JUMP
---
0x18c: JUMPDEST 
0x18d: JUMP 0x56
---
Entry stack: [V7, 0x56]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x18e
[0x18e:0x1e4]
---
Predecessors: [0x60]
Successors: [0x1e5, 0x237]
---
0x18e JUMPDEST
0x18f PUSH1 0x1
0x191 PUSH1 0x0
0x193 SWAP1
0x194 SLOAD
0x195 SWAP1
0x196 PUSH2 0x100
0x199 EXP
0x19a SWAP1
0x19b DIV
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 CALLER
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df EQ
0x1e0 DUP1
0x1e1 PUSH2 0x237
0x1e4 JUMPI
---
0x18e: JUMPDEST 
0x18f: V79 = 0x1
0x191: V80 = 0x0
0x194: V81 = S[0x1]
0x196: V82 = 0x100
0x199: V83 = EXP 0x100 0x0
0x19b: V84 = DIV V81 0x1
0x19c: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1b2: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x1c8: V89 = CALLER
0x1c9: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1df: V92 = EQ V91 V88
0x1e1: V93 = 0x237
0x1e4: JUMPI 0x237 V92
---
Entry stack: [V7, 0x68]
Stack pops: 0
Stack additions: [V92]
Exit stack: [V7, 0x68, V92]

================================

Block 0x1e5
[0x1e5:0x236]
---
Predecessors: [0x18e]
Successors: [0x237]
---
0x1e5 POP
0x1e6 PUSH1 0x2
0x1e8 PUSH1 0x0
0x1ea SWAP1
0x1eb SLOAD
0x1ec SWAP1
0x1ed PUSH2 0x100
0x1f0 EXP
0x1f1 SWAP1
0x1f2 DIV
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21e AND
0x21f CALLER
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 EQ
---
0x1e6: V94 = 0x2
0x1e8: V95 = 0x0
0x1eb: V96 = S[0x2]
0x1ed: V97 = 0x100
0x1f0: V98 = EXP 0x100 0x0
0x1f2: V99 = DIV V96 0x1
0x1f3: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x209: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x21e: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x21f: V104 = CALLER
0x220: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x236: V107 = EQ V106 V103
---
Entry stack: [V7, 0x68, V92]
Stack pops: 1
Stack additions: [V107]
Exit stack: [V7, 0x68, V107]

================================

Block 0x237
[0x237:0x23c]
---
Predecessors: [0x18e, 0x1e5]
Successors: [0x23d, 0x2af]
---
0x237 JUMPDEST
0x238 ISZERO
0x239 PUSH2 0x2af
0x23c JUMPI
---
0x237: JUMPDEST 
0x238: V108 = ISZERO S0
0x239: V109 = 0x2af
0x23c: JUMPI 0x2af V108
---
Entry stack: [V7, 0x68, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x68]

================================

Block 0x23d
[0x23d:0x2ae]
---
Predecessors: [0x237]
Successors: [0x2af]
---
0x23d PUSH1 0x0
0x23f PUSH1 0x0
0x241 SWAP1
0x242 SLOAD
0x243 SWAP1
0x244 PUSH2 0x100
0x247 EXP
0x248 SWAP1
0x249 DIV
0x24a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25f AND
0x260 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x275 AND
0x276 PUSH2 0x8fc
0x279 ADDRESS
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 BALANCE
0x291 SWAP1
0x292 DUP2
0x293 ISZERO
0x294 MUL
0x295 SWAP1
0x296 PUSH1 0x40
0x298 MLOAD
0x299 DUP1
0x29a SWAP1
0x29b POP
0x29c PUSH1 0x0
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP1
0x2a2 DUP4
0x2a3 SUB
0x2a4 DUP2
0x2a5 DUP6
0x2a6 DUP9
0x2a7 DUP9
0x2a8 CALL
0x2a9 SWAP4
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad POP
0x2ae POP
---
0x23d: V110 = 0x0
0x23f: V111 = 0x0
0x242: V112 = S[0x0]
0x244: V113 = 0x100
0x247: V114 = EXP 0x100 0x0
0x249: V115 = DIV V112 0x1
0x24a: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x260: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x275: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x276: V120 = 0x8fc
0x279: V121 = ADDRESS
0x27a: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x290: V124 = BALANCE V123
0x293: V125 = ISZERO V124
0x294: V126 = MUL V125 0x8fc
0x296: V127 = 0x40
0x298: V128 = M[0x40]
0x29c: V129 = 0x0
0x29e: V130 = 0x40
0x2a0: V131 = M[0x40]
0x2a3: V132 = SUB V128 V131
0x2a8: V133 = CALL V126 V119 V124 V131 V132 V131 0x0
---
Entry stack: [V7, 0x68]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x68]

================================

Block 0x2af
[0x2af:0x2af]
---
Predecessors: [0x237, 0x23d]
Successors: [0x2b0]
---
0x2af JUMPDEST
---
0x2af: JUMPDEST 
---
Entry stack: [V7, 0x68]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x68]

================================

Block 0x2b0
[0x2b0:0x2b1]
---
Predecessors: [0x2af]
Successors: [0x68]
---
0x2b0 JUMPDEST
0x2b1 JUMP
---
0x2b0: JUMPDEST 
0x2b1: JUMP 0x68
---
Entry stack: [V7, 0x68]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x2b2
[0x2b2:0x2dd]
---
Predecessors: []
Successors: []
---
0x2b2 STOP
0x2b3 LOG1
0x2b4 PUSH6 0x627a7a723058
0x2bb SHA3
0x2bc PUSH24 0x6ed3deb0e6e6386b7f758999ac7a1b6859a819c8164bb7dd
0x2d5 MISSING 0xfb
0x2d6 PUSH1 0x80
0x2d8 POP
0x2d9 SWAP15
0x2da MISSING 0xc9
0x2db NOT
0x2dc STOP
0x2dd MISSING 0x29
---
0x2b2: STOP 
0x2b3: LOG S0 S1 S2
0x2b4: V134 = 0x627a7a723058
0x2bb: V135 = SHA3 0x627a7a723058 S3
0x2bc: V136 = 0x6ed3deb0e6e6386b7f758999ac7a1b6859a819c8164bb7dd
0x2d5: MISSING 0xfb
0x2d6: V137 = 0x80
0x2da: MISSING 0xc9
0x2db: V138 = NOT S0
0x2dc: STOP 
0x2dd: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6ed3deb0e6e6386b7f758999ac7a1b6859a819c8164bb7dd, V135, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V138]
Exit stack: []

================================

Function 0:
Public function signature: 0x4bb278f3
Entry block: 0x46
Exit block: 0x56
Body: 0x46, 0x4d, 0x4e, 0x56, 0x6a, 0xc1, 0x113, 0x119, 0x18b, 0x18c

Function 1:
Public function signature: 0x590e1ae3
Entry block: 0x58
Exit block: 0x68
Body: 0x58, 0x5f, 0x60, 0x68, 0x18e, 0x1e5, 0x237, 0x23d, 0x2af, 0x2b0

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x44
Body: 0x44

