Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x47]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x3ccfd60b
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x47
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x3ccfd60b
0x14: V9 = EQ V7 0x3ccfd60b
0x15: V10 = 0x47
0x18: JUMPI 0x47 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x65]
---
0x19 DUP1
0x1a PUSH4 0x53d52a5f
0x1f EQ
0x20 PUSH2 0x65
0x23 JUMPI
---
0x1a: V11 = 0x53d52a5f
0x1f: V12 = EQ 0x53d52a5f V7
0x20: V13 = 0x65
0x23: JUMPI 0x65 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x8b]
---
0x24 DUP1
0x25 PUSH4 0x777a41ca
0x2a EQ
0x2b PUSH2 0x8b
0x2e JUMPI
---
0x25: V14 = 0x777a41ca
0x2a: V15 = EQ 0x777a41ca V7
0x2b: V16 = 0x8b
0x2e: JUMPI 0x8b V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0xac]
---
0x2f DUP1
0x30 PUSH4 0xf2fde38b
0x35 EQ
0x36 PUSH2 0xac
0x39 JUMPI
---
0x30: V17 = 0xf2fde38b
0x35: V18 = EQ 0xf2fde38b V7
0x36: V19 = 0xac
0x39: JUMPI 0xac V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0xcd]
---
0x3a DUP1
0x3b PUSH4 0xfc0e74d1
0x40 EQ
0x41 PUSH2 0xcd
0x44 JUMPI
---
0x3b: V20 = 0xfc0e74d1
0x40: V21 = EQ 0xfc0e74d1 V7
0x41: V22 = 0xcd
0x44: JUMPI 0xcd V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x45
[0x45:0x46]
---
Predecessors: [0x3a, 0x65, 0x136, 0x200]
Successors: []
---
0x45 JUMPDEST
0x46 STOP
---
0x45: JUMPDEST 
0x46: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x47
[0x47:0x60]
---
Predecessors: [0x0]
Successors: [0x61, 0x108]
---
0x47 JUMPDEST
0x48 PUSH2 0x45
0x4b PUSH1 0x0
0x4d SLOAD
0x4e CALLER
0x4f PUSH1 0x1
0x51 PUSH1 0xa0
0x53 PUSH1 0x2
0x55 EXP
0x56 SUB
0x57 SWAP1
0x58 DUP2
0x59 AND
0x5a SWAP2
0x5b AND
0x5c EQ
0x5d PUSH2 0x108
0x60 JUMPI
---
0x47: JUMPDEST 
0x48: V23 = 0x45
0x4b: V24 = 0x0
0x4d: V25 = S[0x0]
0x4e: V26 = CALLER
0x4f: V27 = 0x1
0x51: V28 = 0xa0
0x53: V29 = 0x2
0x55: V30 = EXP 0x2 0xa0
0x56: V31 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x5b: V33 = AND V25 0xffffffffffffffffffffffffffffffffffffffff
0x5c: V34 = EQ V33 V32
0x5d: V35 = 0x108
0x60: JUMPI 0x108 V34
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45]
Exit stack: [V7, 0x45]

================================

Block 0x61
[0x61:0x64]
---
Predecessors: [0x47]
Successors: []
---
0x61 PUSH2 0x2
0x64 JUMP
---
0x61: V36 = 0x2
0x64: THROW 
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45]

================================

Block 0x65
[0x65:0x8a]
---
Predecessors: [0x19]
Successors: [0x45]
---
0x65 JUMPDEST
0x66 PUSH1 0x2
0x68 DUP1
0x69 SLOAD
0x6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f NOT
0x80 AND
0x81 PUSH1 0x4
0x83 CALLDATALOAD
0x84 OR
0x85 SWAP1
0x86 SSTORE
0x87 PUSH2 0x45
0x8a JUMP
---
0x65: JUMPDEST 
0x66: V37 = 0x2
0x69: V38 = S[0x2]
0x6a: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f: V40 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x80: V41 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V38
0x81: V42 = 0x4
0x83: V43 = CALLDATALOAD 0x4
0x84: V44 = OR V43 V41
0x86: S[0x2] = V44
0x87: V45 = 0x45
0x8a: JUMP 0x45
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x8b
[0x8b:0xa7]
---
Predecessors: [0x24]
Successors: [0xa8, 0x138]
---
0x8b JUMPDEST
0x8c PUSH2 0xeb
0x8f PUSH1 0x4
0x91 CALLDATALOAD
0x92 PUSH1 0x2
0x94 SLOAD
0x95 PUSH1 0x0
0x97 SWAP1
0x98 PUSH1 0x1
0x9a PUSH1 0xa0
0x9c PUSH1 0x2
0x9e EXP
0x9f SUB
0xa0 AND
0xa1 DUP2
0xa2 EQ
0xa3 ISZERO
0xa4 PUSH2 0x138
0xa7 JUMPI
---
0x8b: JUMPDEST 
0x8c: V46 = 0xeb
0x8f: V47 = 0x4
0x91: V48 = CALLDATALOAD 0x4
0x92: V49 = 0x2
0x94: V50 = S[0x2]
0x95: V51 = 0x0
0x98: V52 = 0x1
0x9a: V53 = 0xa0
0x9c: V54 = 0x2
0x9e: V55 = EXP 0x2 0xa0
0x9f: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xa2: V58 = EQ 0x0 V57
0xa3: V59 = ISZERO V58
0xa4: V60 = 0x138
0xa7: JUMPI 0x138 V59
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xeb, V48, 0x0]
Exit stack: [V7, 0xeb, V48, 0x0]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0x8b]
Successors: []
---
0xa8 PUSH2 0x2
0xab JUMP
---
0xa8: V61 = 0x2
0xab: THROW 
---
Entry stack: [V7, 0xeb, V48, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V48, 0x0]

================================

Block 0xac
[0xac:0xc8]
---
Predecessors: [0x2f]
Successors: [0xc9, 0x200]
---
0xac JUMPDEST
0xad PUSH2 0x45
0xb0 PUSH1 0x4
0xb2 CALLDATALOAD
0xb3 PUSH1 0x0
0xb5 SLOAD
0xb6 CALLER
0xb7 PUSH1 0x1
0xb9 PUSH1 0xa0
0xbb PUSH1 0x2
0xbd EXP
0xbe SUB
0xbf SWAP1
0xc0 DUP2
0xc1 AND
0xc2 SWAP2
0xc3 AND
0xc4 EQ
0xc5 PUSH2 0x200
0xc8 JUMPI
---
0xac: JUMPDEST 
0xad: V62 = 0x45
0xb0: V63 = 0x4
0xb2: V64 = CALLDATALOAD 0x4
0xb3: V65 = 0x0
0xb5: V66 = S[0x0]
0xb6: V67 = CALLER
0xb7: V68 = 0x1
0xb9: V69 = 0xa0
0xbb: V70 = 0x2
0xbd: V71 = EXP 0x2 0xa0
0xbe: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xc3: V74 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V75 = EQ V74 V73
0xc5: V76 = 0x200
0xc8: JUMPI 0x200 V75
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45, V64]
Exit stack: [V7, 0x45, V64]

================================

Block 0xc9
[0xc9:0xcc]
---
Predecessors: [0xac]
Successors: []
---
0xc9 PUSH2 0x2
0xcc JUMP
---
0xc9: V77 = 0x2
0xcc: THROW 
---
Entry stack: [V7, 0x45, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45, V64]

================================

Block 0xcd
[0xcd:0xe6]
---
Predecessors: [0x3a]
Successors: [0xe7, 0x222]
---
0xcd JUMPDEST
0xce PUSH2 0x45
0xd1 PUSH1 0x0
0xd3 SLOAD
0xd4 CALLER
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde DUP2
0xdf AND
0xe0 SWAP2
0xe1 AND
0xe2 EQ
0xe3 PUSH2 0x222
0xe6 JUMPI
---
0xcd: JUMPDEST 
0xce: V78 = 0x45
0xd1: V79 = 0x0
0xd3: V80 = S[0x0]
0xd4: V81 = CALLER
0xd5: V82 = 0x1
0xd7: V83 = 0xa0
0xd9: V84 = 0x2
0xdb: V85 = EXP 0x2 0xa0
0xdc: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0xe1: V88 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0xe2: V89 = EQ V88 V87
0xe3: V90 = 0x222
0xe6: JUMPI 0x222 V89
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45]
Exit stack: [V7, 0x45]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xcd]
Successors: []
---
0xe7 PUSH2 0x2
0xea JUMP
---
0xe7: V91 = 0x2
0xea: THROW 
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45]

================================

Block 0xeb
[0xeb:0x107]
---
Predecessors: [0x1f4]
Successors: []
---
0xeb JUMPDEST
0xec PUSH1 0x40
0xee DUP1
0xef MLOAD
0xf0 PUSH1 0x1
0xf2 PUSH1 0xa0
0xf4 PUSH1 0x2
0xf6 EXP
0xf7 SUB
0xf8 SWAP3
0xf9 SWAP1
0xfa SWAP3
0xfb AND
0xfc DUP3
0xfd MSTORE
0xfe MLOAD
0xff SWAP1
0x100 DUP2
0x101 SWAP1
0x102 SUB
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP1
0x107 RETURN
---
0xeb: JUMPDEST 
0xec: V92 = 0x40
0xef: V93 = M[0x40]
0xf0: V94 = 0x1
0xf2: V95 = 0xa0
0xf4: V96 = 0x2
0xf6: V97 = EXP 0x2 0xa0
0xf7: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0xfd: M[V93] = V99
0xfe: V100 = M[0x40]
0x102: V101 = SUB V93 V100
0x103: V102 = 0x20
0x105: V103 = ADD 0x20 V101
0x107: RETURN V100 V103
---
Entry stack: [V7, V214]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x108
[0x108:0x131]
---
Predecessors: [0x47]
Successors: [0x132, 0x136]
---
0x108 JUMPDEST
0x109 PUSH1 0x0
0x10b DUP1
0x10c SLOAD
0x10d PUSH1 0x1
0x10f PUSH1 0xa0
0x111 PUSH1 0x2
0x113 EXP
0x114 SUB
0x115 SWAP1
0x116 DUP2
0x117 AND
0x118 SWAP2
0x119 SWAP1
0x11a ADDRESS
0x11b AND
0x11c BALANCE
0x11d PUSH1 0x60
0x11f DUP3
0x120 DUP2
0x121 DUP2
0x122 DUP2
0x123 DUP6
0x124 DUP9
0x125 DUP4
0x126 CALL
0x127 SWAP4
0x128 POP
0x129 POP
0x12a POP
0x12b POP
0x12c ISZERO
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x108: JUMPDEST 
0x109: V104 = 0x0
0x10c: V105 = S[0x0]
0x10d: V106 = 0x1
0x10f: V107 = 0xa0
0x111: V108 = 0x2
0x113: V109 = EXP 0x2 0xa0
0x114: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x117: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x11a: V112 = ADDRESS
0x11b: V113 = AND V112 0xffffffffffffffffffffffffffffffffffffffff
0x11c: V114 = BALANCE V113
0x11d: V115 = 0x60
0x126: V116 = CALL 0x0 V111 V114 0x60 0x0 0x60 0x0
0x12c: V117 = ISZERO V116
0x12d: V118 = ISZERO V117
0x12e: V119 = 0x136
0x131: JUMPI 0x136 V118
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x108]
Successors: []
---
0x132 PUSH2 0x2
0x135 JUMP
---
0x132: V120 = 0x2
0x135: THROW 
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45]

================================

Block 0x136
[0x136:0x137]
---
Predecessors: [0x108]
Successors: [0x45]
---
0x136 JUMPDEST
0x137 JUMP
---
0x136: JUMPDEST 
0x137: JUMP 0x45
---
Entry stack: [V7, 0x45]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x138
[0x138:0x158]
---
Predecessors: [0x8b]
Successors: [0x159, 0x16d]
---
0x138 JUMPDEST
0x139 PUSH1 0x1
0x13b PUSH1 0xa0
0x13d PUSH1 0x2
0x13f EXP
0x140 SUB
0x141 CALLER
0x142 DUP2
0x143 AND
0x144 DUP3
0x145 MSTORE
0x146 PUSH1 0x1
0x148 PUSH1 0x20
0x14a MSTORE
0x14b PUSH1 0x40
0x14d DUP3
0x14e SHA3
0x14f SLOAD
0x150 AND
0x151 DUP2
0x152 EQ
0x153 DUP1
0x154 ISZERO
0x155 PUSH2 0x16d
0x158 JUMPI
---
0x138: JUMPDEST 
0x139: V121 = 0x1
0x13b: V122 = 0xa0
0x13d: V123 = 0x2
0x13f: V124 = EXP 0x2 0xa0
0x140: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x141: V126 = CALLER
0x143: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x145: M[0x0] = V127
0x146: V128 = 0x1
0x148: V129 = 0x20
0x14a: M[0x20] = 0x1
0x14b: V130 = 0x40
0x14e: V131 = SHA3 0x0 0x40
0x14f: V132 = S[V131]
0x150: V133 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x152: V134 = EQ 0x0 V133
0x154: V135 = ISZERO V134
0x155: V136 = 0x16d
0x158: JUMPI 0x16d V135
---
Entry stack: [V7, 0xeb, V48, 0x0]
Stack pops: 1
Stack additions: [S0, V134]
Exit stack: [V7, 0xeb, V48, 0x0, V134]

================================

Block 0x159
[0x159:0x16c]
---
Predecessors: [0x138]
Successors: [0x16d]
---
0x159 POP
0x15a DUP1
0x15b SLOAD
0x15c PUSH1 0x1
0x15e PUSH1 0xa0
0x160 PUSH1 0x2
0x162 EXP
0x163 SUB
0x164 SWAP1
0x165 DUP2
0x166 AND
0x167 CALLER
0x168 SWAP1
0x169 SWAP2
0x16a AND
0x16b EQ
0x16c ISZERO
---
0x15b: V137 = S[0x0]
0x15c: V138 = 0x1
0x15e: V139 = 0xa0
0x160: V140 = 0x2
0x162: V141 = EXP 0x2 0xa0
0x163: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x166: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x167: V144 = CALLER
0x16a: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x16b: V146 = EQ V145 V143
0x16c: V147 = ISZERO V146
---
Entry stack: [V7, 0xeb, V48, 0x0, V134]
Stack pops: 2
Stack additions: [S1, V147]
Exit stack: [V7, 0xeb, V48, 0x0, V147]

================================

Block 0x16d
[0x16d:0x173]
---
Predecessors: [0x138, 0x159]
Successors: [0x174, 0x17a]
---
0x16d JUMPDEST
0x16e DUP1
0x16f ISZERO
0x170 PUSH2 0x17a
0x173 JUMPI
---
0x16d: JUMPDEST 
0x16f: V148 = ISZERO S0
0x170: V149 = 0x17a
0x173: JUMPI 0x17a V148
---
Entry stack: [V7, 0xeb, V48, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xeb, V48, 0x0, S0]

================================

Block 0x174
[0x174:0x179]
---
Predecessors: [0x16d]
Successors: [0x17a]
---
0x174 POP
0x175 PUSH1 0x3
0x177 SLOAD
0x178 CALLVALUE
0x179 LT
---
0x175: V150 = 0x3
0x177: V151 = S[0x3]
0x178: V152 = CALLVALUE
0x179: V153 = LT V152 V151
---
Entry stack: [V7, 0xeb, V48, 0x0, S0]
Stack pops: 1
Stack additions: [V153]
Exit stack: [V7, 0xeb, V48, 0x0, V153]

================================

Block 0x17a
[0x17a:0x17f]
---
Predecessors: [0x16d, 0x174]
Successors: [0x180, 0x184]
---
0x17a JUMPDEST
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x17a: JUMPDEST 
0x17b: V154 = ISZERO S0
0x17c: V155 = 0x184
0x17f: JUMPI 0x184 V154
---
Entry stack: [V7, 0xeb, V48, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xeb, V48, 0x0]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x17a]
Successors: []
---
0x180 PUSH2 0x2
0x183 JUMP
---
0x180: V156 = 0x2
0x183: THROW 
---
Entry stack: [V7, 0xeb, V48, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V48, 0x0]

================================

Block 0x184
[0x184:0x1f3]
---
Predecessors: [0x17a]
Successors: [0x1f4]
---
0x184 JUMPDEST
0x185 PUSH1 0x2
0x187 PUSH1 0x0
0x189 SWAP1
0x18a SLOAD
0x18b SWAP1
0x18c PUSH2 0x100
0x18f EXP
0x190 SWAP1
0x191 DIV
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a AND
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 AND
0x1a4 PUSH4 0x656f9fe3
0x1a9 CALLER
0x1aa DUP5
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae DUP4
0x1af PUSH1 0xe0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 MUL
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x4
0x1b9 ADD
0x1ba DUP1
0x1bb DUP4
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 AND
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca DUP3
0x1cb PUSH1 0x1
0x1cd PUSH1 0xa0
0x1cf PUSH1 0x2
0x1d1 EXP
0x1d2 SUB
0x1d3 AND
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP3
0x1da POP
0x1db POP
0x1dc POP
0x1dd PUSH1 0x20
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 DUP4
0x1e4 SUB
0x1e5 DUP2
0x1e6 PUSH1 0x0
0x1e8 DUP8
0x1e9 PUSH2 0x61da
0x1ec GAS
0x1ed SUB
0x1ee CALL
0x1ef ISZERO
0x1f0 PUSH2 0x2
0x1f3 JUMPI
---
0x184: JUMPDEST 
0x185: V157 = 0x2
0x187: V158 = 0x0
0x18a: V159 = S[0x2]
0x18c: V160 = 0x100
0x18f: V161 = EXP 0x100 0x0
0x191: V162 = DIV V159 0x1
0x192: V163 = 0x1
0x194: V164 = 0xa0
0x196: V165 = 0x2
0x198: V166 = EXP 0x2 0xa0
0x199: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19a: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x19b: V169 = 0x1
0x19d: V170 = 0xa0
0x19f: V171 = 0x2
0x1a1: V172 = EXP 0x2 0xa0
0x1a2: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a3: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x1a4: V175 = 0x656f9fe3
0x1a9: V176 = CALLER
0x1ab: V177 = 0x40
0x1ad: V178 = M[0x40]
0x1af: V179 = 0xe0
0x1b1: V180 = 0x2
0x1b3: V181 = EXP 0x2 0xe0
0x1b4: V182 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x656f9fe3
0x1b6: M[V178] = 0x656f9fe300000000000000000000000000000000000000000000000000000000
0x1b7: V183 = 0x4
0x1b9: V184 = ADD 0x4 V178
0x1bc: V185 = 0x1
0x1be: V186 = 0xa0
0x1c0: V187 = 0x2
0x1c2: V188 = EXP 0x2 0xa0
0x1c3: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x1c6: M[V184] = V190
0x1c7: V191 = 0x20
0x1c9: V192 = ADD 0x20 V184
0x1cb: V193 = 0x1
0x1cd: V194 = 0xa0
0x1cf: V195 = 0x2
0x1d1: V196 = EXP 0x2 0xa0
0x1d2: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d3: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x1d5: M[V192] = V198
0x1d6: V199 = 0x20
0x1d8: V200 = ADD 0x20 V192
0x1dd: V201 = 0x20
0x1df: V202 = 0x40
0x1e1: V203 = M[0x40]
0x1e4: V204 = SUB V200 V203
0x1e6: V205 = 0x0
0x1e9: V206 = 0x61da
0x1ec: V207 = GAS
0x1ed: V208 = SUB V207 0x61da
0x1ee: V209 = CALL V208 V174 0x0 V203 V204 V203 0x20
0x1ef: V210 = ISZERO V209
0x1f0: V211 = 0x2
0x1f3: THROWI V210
---
Entry stack: [V7, 0xeb, V48, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V174, 0x656f9fe3, V200]
Exit stack: [V7, 0xeb, V48, 0x0, V174, 0x656f9fe3, V200]

================================

Block 0x1f4
[0x1f4:0x1ff]
---
Predecessors: [0x184]
Successors: [0xeb]
---
0x1f4 POP
0x1f5 POP
0x1f6 PUSH1 0x40
0x1f8 MLOAD
0x1f9 MLOAD
0x1fa SWAP4
0x1fb SWAP3
0x1fc POP
0x1fd POP
0x1fe POP
0x1ff JUMP
---
0x1f6: V212 = 0x40
0x1f8: V213 = M[0x40]
0x1f9: V214 = M[V213]
0x1ff: JUMP 0xeb
---
Entry stack: [V7, 0xeb, V48, 0x0, V174, 0x656f9fe3, V200]
Stack pops: 6
Stack additions: [V214]
Exit stack: [V7, V214]

================================

Block 0x200
[0x200:0x221]
---
Predecessors: [0xac]
Successors: [0x45]
---
0x200 JUMPDEST
0x201 PUSH1 0x0
0x203 DUP1
0x204 SLOAD
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a NOT
0x21b AND
0x21c DUP3
0x21d OR
0x21e SWAP1
0x21f SSTORE
0x220 POP
0x221 JUMP
---
0x200: JUMPDEST 
0x201: V215 = 0x0
0x204: V216 = S[0x0]
0x205: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V218 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V219 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V216
0x21d: V220 = OR V64 V219
0x21f: S[0x0] = V220
0x221: JUMP 0x45
---
Entry stack: [V7, 0x45, V64]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x222
[0x222:0x22f]
---
Predecessors: [0xcd]
Successors: []
---
0x222 JUMPDEST
0x223 PUSH1 0x0
0x225 SLOAD
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e AND
0x22f SELFDESTRUCT
---
0x222: JUMPDEST 
0x223: V221 = 0x0
0x225: V222 = S[0x0]
0x226: V223 = 0x1
0x228: V224 = 0xa0
0x22a: V225 = 0x2
0x22c: V226 = EXP 0x2 0xa0
0x22d: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x22f: SELFDESTRUCT V228
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45]

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x47
Exit block: 0x45
Body: 0x45, 0x47, 0x61, 0x108, 0x132, 0x136

Function 1:
Public function signature: 0x53d52a5f
Entry block: 0x65
Exit block: 0x45
Body: 0x45, 0x65

Function 2:
Public function signature: 0x777a41ca
Entry block: 0x8b
Exit block: 0xeb
Body: 0x8b, 0xa8, 0xeb, 0x138, 0x159, 0x16d, 0x174, 0x17a, 0x180, 0x184, 0x1f4

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0xac
Exit block: 0x45
Body: 0x45, 0xac, 0xc9, 0x200

Function 4:
Public function signature: 0xfc0e74d1
Entry block: 0xcd
Exit block: 0xe7
Body: 0xcd, 0xe7, 0x222

Function 5:
Public fallback function
Entry block: 0x45
Exit block: 0x45
Body: 0x45

