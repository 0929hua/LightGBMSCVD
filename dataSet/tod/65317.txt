Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2e92abdd
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2e92abdd
0x3b: V13 = EQ V11 0x2e92abdd
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8e]
---
0x40 DUP1
0x41 PUSH4 0x465ad773
0x46 EQ
0x47 PUSH2 0x8e
0x4a JUMPI
---
0x41: V15 = 0x465ad773
0x46: V16 = EQ 0x465ad773 V11
0x47: V17 = 0x8e
0x4a: JUMPI 0x8e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xaf]
---
0x4b DUP1
0x4c PUSH4 0x9904e174
0x51 EQ
0x52 PUSH2 0xaf
0x55 JUMPI
---
0x4c: V18 = 0x9904e174
0x51: V19 = EQ 0x9904e174 V11
0x52: V20 = 0xaf
0x55: JUMPI 0xaf V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xc4]
---
0x56 DUP1
0x57 PUSH4 0xd0febe4c
0x5c EQ
0x5d PUSH2 0xc4
0x60 JUMPI
---
0x57: V21 = 0xd0febe4c
0x5c: V22 = EQ 0xd0febe4c V11
0x5d: V23 = 0xc4
0x60: JUMPI 0xc4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xcc]
---
0x61 DUP1
0x62 PUSH4 0xf8b2cb4f
0x67 EQ
0x68 PUSH2 0xcc
0x6b JUMPI
---
0x62: V24 = 0xf8b2cb4f
0x67: V25 = EQ 0xf8b2cb4f V11
0x68: V26 = 0xcc
0x6b: JUMPI 0xcc V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0xff]
---
0x6c DUP1
0x6d PUSH4 0xfc7fcae1
0x72 EQ
0x73 PUSH2 0xff
0x76 JUMPI
---
0x6d: V27 = 0xfc7fcae1
0x72: V28 = EQ 0xfc7fcae1 V11
0x73: V29 = 0xff
0x76: JUMPI 0xff V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x1e7, 0x3b9, 0x458, 0x5d8]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b DUP1
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x79]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x85
[0x85:0x8d]
---
Predecessors: [0x79]
Successors: [0x117]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH2 0x77
0x8a PUSH2 0x117
0x8d JUMP
---
0x85: JUMPDEST 
0x87: V34 = 0x77
0x8a: V35 = 0x117
0x8d: JUMP 0x117
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x8e
[0x8e:0x95]
---
Predecessors: [0x40]
Successors: [0x96, 0x9a]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 DUP1
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8e: JUMPDEST 
0x8f: V36 = CALLVALUE
0x91: V37 = ISZERO V36
0x92: V38 = 0x9a
0x95: JUMPI 0x9a V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8e]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V39 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9a
[0x9a:0xae]
---
Predecessors: [0x8e]
Successors: [0x1ed]
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH2 0x77
0x9f PUSH1 0x1
0xa1 PUSH1 0xa0
0xa3 PUSH1 0x2
0xa5 EXP
0xa6 SUB
0xa7 PUSH1 0x4
0xa9 CALLDATALOAD
0xaa AND
0xab PUSH2 0x1ed
0xae JUMP
---
0x9a: JUMPDEST 
0x9c: V40 = 0x77
0x9f: V41 = 0x1
0xa1: V42 = 0xa0
0xa3: V43 = 0x2
0xa5: V44 = EXP 0x2 0xa0
0xa6: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7: V46 = 0x4
0xa9: V47 = CALLDATALOAD 0x4
0xaa: V48 = AND V47 0xffffffffffffffffffffffffffffffffffffffff
0xab: V49 = 0x1ed
0xae: JUMP 0x1ed
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x77, V48]
Exit stack: [V11, 0x77, V48]

================================

Block 0xaf
[0xaf:0xb6]
---
Predecessors: [0x4b]
Successors: [0xb7, 0xbb]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 DUP1
0xb2 ISZERO
0xb3 PUSH2 0xbb
0xb6 JUMPI
---
0xaf: JUMPDEST 
0xb0: V50 = CALLVALUE
0xb2: V51 = ISZERO V50
0xb3: V52 = 0xbb
0xb6: JUMPI 0xbb V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0xaf]
Successors: []
---
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb7: V53 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xbb
[0xbb:0xc3]
---
Predecessors: [0xaf]
Successors: [0x2e2]
---
0xbb JUMPDEST
0xbc POP
0xbd PUSH2 0x77
0xc0 PUSH2 0x2e2
0xc3 JUMP
---
0xbb: JUMPDEST 
0xbd: V54 = 0x77
0xc0: V55 = 0x2e2
0xc3: JUMP 0x2e2
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xc4
[0xc4:0xcb]
---
Predecessors: [0x56]
Successors: [0x3c0]
---
0xc4 JUMPDEST
0xc5 PUSH2 0x77
0xc8 PUSH2 0x3c0
0xcb JUMP
---
0xc4: JUMPDEST 
0xc5: V56 = 0x77
0xc8: V57 = 0x3c0
0xcb: JUMP 0x3c0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0x61]
Successors: [0xd4, 0xd8]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce DUP1
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xcc: JUMPDEST 
0xcd: V58 = CALLVALUE
0xcf: V59 = ISZERO V58
0xd0: V60 = 0xd8
0xd3: JUMPI 0xd8 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xcc]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V61 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xd8
[0xd8:0xec]
---
Predecessors: [0xcc]
Successors: [0x45c]
---
0xd8 JUMPDEST
0xd9 POP
0xda PUSH2 0xed
0xdd PUSH1 0x1
0xdf PUSH1 0xa0
0xe1 PUSH1 0x2
0xe3 EXP
0xe4 SUB
0xe5 PUSH1 0x4
0xe7 CALLDATALOAD
0xe8 AND
0xe9 PUSH2 0x45c
0xec JUMP
---
0xd8: JUMPDEST 
0xda: V62 = 0xed
0xdd: V63 = 0x1
0xdf: V64 = 0xa0
0xe1: V65 = 0x2
0xe3: V66 = EXP 0x2 0xa0
0xe4: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V68 = 0x4
0xe7: V69 = CALLDATALOAD 0x4
0xe8: V70 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V71 = 0x45c
0xec: JUMP 0x45c
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xed, V70]
Exit stack: [V11, 0xed, V70]

================================

Block 0xed
[0xed:0xfe]
---
Predecessors: [0x4f1]
Successors: []
---
0xed JUMPDEST
0xee PUSH1 0x40
0xf0 DUP1
0xf1 MLOAD
0xf2 SWAP2
0xf3 DUP3
0xf4 MSTORE
0xf5 MLOAD
0xf6 SWAP1
0xf7 DUP2
0xf8 SWAP1
0xf9 SUB
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe RETURN
---
0xed: JUMPDEST 
0xee: V72 = 0x40
0xf1: V73 = M[0x40]
0xf4: M[V73] = V413
0xf5: V74 = M[0x40]
0xf9: V75 = SUB V73 V74
0xfa: V76 = 0x20
0xfc: V77 = ADD 0x20 V75
0xfe: RETURN V74 V77
---
Entry stack: [V11, S3, S2, S1, V413]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S3, S2, S1]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0x6c]
Successors: [0x107, 0x10b]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 DUP1
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0xff: JUMPDEST 
0x100: V78 = CALLVALUE
0x102: V79 = ISZERO V78
0x103: V80 = 0x10b
0x106: JUMPI 0x10b V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0xff]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V81 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x10b
[0x10b:0x116]
---
Predecessors: [0xff]
Successors: [0x4f9]
---
0x10b JUMPDEST
0x10c POP
0x10d PUSH2 0x77
0x110 PUSH1 0x4
0x112 CALLDATALOAD
0x113 PUSH2 0x4f9
0x116 JUMP
---
0x10b: JUMPDEST 
0x10d: V82 = 0x77
0x110: V83 = 0x4
0x112: V84 = CALLDATALOAD 0x4
0x113: V85 = 0x4f9
0x116: JUMP 0x4f9
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x77, V84]
Exit stack: [V11, 0x77, V84]

================================

Block 0x117
[0x117:0x129]
---
Predecessors: [0x85]
Successors: [0x12a, 0x167]
---
0x117 JUMPDEST
0x118 PUSH1 0x0
0x11a SLOAD
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 AND
0x124 CALLER
0x125 EQ
0x126 PUSH2 0x167
0x129 JUMPI
---
0x117: JUMPDEST 
0x118: V86 = 0x0
0x11a: V87 = S[0x0]
0x11b: V88 = 0x1
0x11d: V89 = 0xa0
0x11f: V90 = 0x2
0x121: V91 = EXP 0x2 0xa0
0x122: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x123: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x124: V94 = CALLER
0x125: V95 = EQ V94 V93
0x126: V96 = 0x167
0x129: JUMPI 0x167 V95
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x12a
[0x12a:0x166]
---
Predecessors: [0x117]
Successors: []
---
0x12a PUSH1 0x40
0x12c DUP1
0x12d MLOAD
0x12e PUSH1 0xe5
0x130 PUSH1 0x2
0x132 EXP
0x133 PUSH3 0x461bcd
0x137 MUL
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x20
0x13c PUSH1 0x4
0x13e DUP3
0x13f ADD
0x140 MSTORE
0x141 PUSH1 0xe
0x143 PUSH1 0x24
0x145 DUP3
0x146 ADD
0x147 MSTORE
0x148 PUSH1 0x0
0x14a DUP1
0x14b MLOAD
0x14c PUSH1 0x20
0x14e PUSH2 0x5dc
0x151 DUP4
0x152 CODECOPY
0x153 DUP2
0x154 MLOAD
0x155 SWAP2
0x156 MSTORE
0x157 PUSH1 0x44
0x159 DUP3
0x15a ADD
0x15b MSTORE
0x15c SWAP1
0x15d MLOAD
0x15e SWAP1
0x15f DUP2
0x160 SWAP1
0x161 SUB
0x162 PUSH1 0x64
0x164 ADD
0x165 SWAP1
0x166 REVERT
---
0x12a: V97 = 0x40
0x12d: V98 = M[0x40]
0x12e: V99 = 0xe5
0x130: V100 = 0x2
0x132: V101 = EXP 0x2 0xe5
0x133: V102 = 0x461bcd
0x137: V103 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x139: M[V98] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x13a: V104 = 0x20
0x13c: V105 = 0x4
0x13f: V106 = ADD V98 0x4
0x140: M[V106] = 0x20
0x141: V107 = 0xe
0x143: V108 = 0x24
0x146: V109 = ADD V98 0x24
0x147: M[V109] = 0xe
0x148: V110 = 0x0
0x14b: V111 = M[0x0]
0x14c: V112 = 0x20
0x14e: V113 = 0x5dc
0x152: CODECOPY 0x0 0x5dc 0x20
0x154: V114 = M[0x0]
0x156: M[0x0] = V111
0x157: V115 = 0x44
0x15a: V116 = ADD V98 0x44
0x15b: M[V116] = V114
0x15d: V117 = M[0x40]
0x161: V118 = SUB V98 V117
0x162: V119 = 0x64
0x164: V120 = ADD 0x64 V118
0x166: REVERT V117 V120
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x167
[0x167:0x1ce]
---
Predecessors: [0x117]
Successors: [0x1cf, 0x1d3]
---
0x167 JUMPDEST
0x168 PUSH1 0x2
0x16a PUSH1 0x0
0x16c SWAP1
0x16d SLOAD
0x16e SWAP1
0x16f PUSH2 0x100
0x172 EXP
0x173 SWAP1
0x174 DIV
0x175 PUSH1 0x1
0x177 PUSH1 0xa0
0x179 PUSH1 0x2
0x17b EXP
0x17c SUB
0x17d AND
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 AND
0x187 PUSH4 0x3ccfd60b
0x18c PUSH1 0x40
0x18e MLOAD
0x18f DUP2
0x190 PUSH4 0xffffffff
0x195 AND
0x196 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1b4 MUL
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x4
0x1b9 ADD
0x1ba PUSH1 0x0
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 DUP4
0x1c1 SUB
0x1c2 DUP2
0x1c3 PUSH1 0x0
0x1c5 DUP8
0x1c6 DUP1
0x1c7 EXTCODESIZE
0x1c8 ISZERO
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x167: JUMPDEST 
0x168: V121 = 0x2
0x16a: V122 = 0x0
0x16d: V123 = S[0x2]
0x16f: V124 = 0x100
0x172: V125 = EXP 0x100 0x0
0x174: V126 = DIV V123 0x1
0x175: V127 = 0x1
0x177: V128 = 0xa0
0x179: V129 = 0x2
0x17b: V130 = EXP 0x2 0xa0
0x17c: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17d: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x17e: V133 = 0x1
0x180: V134 = 0xa0
0x182: V135 = 0x2
0x184: V136 = EXP 0x2 0xa0
0x185: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x187: V139 = 0x3ccfd60b
0x18c: V140 = 0x40
0x18e: V141 = M[0x40]
0x190: V142 = 0xffffffff
0x195: V143 = AND 0xffffffff 0x3ccfd60b
0x196: V144 = 0x100000000000000000000000000000000000000000000000000000000
0x1b4: V145 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x1b6: M[V141] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x1b7: V146 = 0x4
0x1b9: V147 = ADD 0x4 V141
0x1ba: V148 = 0x0
0x1bc: V149 = 0x40
0x1be: V150 = M[0x40]
0x1c1: V151 = SUB V147 V150
0x1c3: V152 = 0x0
0x1c7: V153 = EXTCODESIZE V138
0x1c8: V154 = ISZERO V153
0x1ca: V155 = ISZERO V154
0x1cb: V156 = 0x1d3
0x1ce: JUMPI 0x1d3 V155
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V138, 0x3ccfd60b, V147, 0x0, V150, V151, V150, 0x0, V138, V154]
Exit stack: [V11, 0x77, V138, 0x3ccfd60b, V147, 0x0, V150, V151, V150, 0x0, V138, V154]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x167]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V157 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V138, 0x3ccfd60b, V147, 0x0, V150, V151, V150, 0x0, V138, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V138, 0x3ccfd60b, V147, 0x0, V150, V151, V150, 0x0, V138, V154]

================================

Block 0x1d3
[0x1d3:0x1dd]
---
Predecessors: [0x167]
Successors: [0x1de, 0x1e7]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 GAS
0x1d6 CALL
0x1d7 ISZERO
0x1d8 DUP1
0x1d9 ISZERO
0x1da PUSH2 0x1e7
0x1dd JUMPI
---
0x1d3: JUMPDEST 
0x1d5: V158 = GAS
0x1d6: V159 = CALL V158 V138 0x0 V150 V151 V150 0x0
0x1d7: V160 = ISZERO V159
0x1d9: V161 = ISZERO V160
0x1da: V162 = 0x1e7
0x1dd: JUMPI 0x1e7 V161
---
Entry stack: [V11, 0x77, V138, 0x3ccfd60b, V147, 0x0, V150, V151, V150, 0x0, V138, V154]
Stack pops: 7
Stack additions: [V160]
Exit stack: [V11, 0x77, V138, 0x3ccfd60b, V147, V160]

================================

Block 0x1de
[0x1de:0x1e6]
---
Predecessors: [0x1d3]
Successors: []
---
0x1de RETURNDATASIZE
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 RETURNDATACOPY
0x1e3 RETURNDATASIZE
0x1e4 PUSH1 0x0
0x1e6 REVERT
---
0x1de: V163 = RETURNDATASIZE
0x1df: V164 = 0x0
0x1e2: RETURNDATACOPY 0x0 0x0 V163
0x1e3: V165 = RETURNDATASIZE
0x1e4: V166 = 0x0
0x1e6: REVERT 0x0 V165
---
Entry stack: [V11, 0x77, V138, 0x3ccfd60b, V147, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V138, 0x3ccfd60b, V147, V160]

================================

Block 0x1e7
[0x1e7:0x1ec]
---
Predecessors: [0x1d3, 0x2cc]
Successors: [0x77]
---
0x1e7 JUMPDEST
0x1e8 POP
0x1e9 POP
0x1ea POP
0x1eb POP
0x1ec JUMP
---
0x1e7: JUMPDEST 
0x1ec: JUMP S4
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ed
[0x1ed:0x200]
---
Predecessors: [0x9a]
Successors: [0x201, 0x23e]
---
0x1ed JUMPDEST
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 SLOAD
0x1f2 PUSH1 0x1
0x1f4 PUSH1 0xa0
0x1f6 PUSH1 0x2
0x1f8 EXP
0x1f9 SUB
0x1fa AND
0x1fb CALLER
0x1fc EQ
0x1fd PUSH2 0x23e
0x200 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V167 = 0x0
0x1f1: V168 = S[0x0]
0x1f2: V169 = 0x1
0x1f4: V170 = 0xa0
0x1f6: V171 = 0x2
0x1f8: V172 = EXP 0x2 0xa0
0x1f9: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fa: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x1fb: V175 = CALLER
0x1fc: V176 = EQ V175 V174
0x1fd: V177 = 0x23e
0x200: JUMPI 0x23e V176
---
Entry stack: [V11, 0x77, V48]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x77, V48, 0x0]

================================

Block 0x201
[0x201:0x23d]
---
Predecessors: [0x1ed]
Successors: []
---
0x201 PUSH1 0x40
0x203 DUP1
0x204 MLOAD
0x205 PUSH1 0xe5
0x207 PUSH1 0x2
0x209 EXP
0x20a PUSH3 0x461bcd
0x20e MUL
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 PUSH1 0x4
0x215 DUP3
0x216 ADD
0x217 MSTORE
0x218 PUSH1 0xe
0x21a PUSH1 0x24
0x21c DUP3
0x21d ADD
0x21e MSTORE
0x21f PUSH1 0x0
0x221 DUP1
0x222 MLOAD
0x223 PUSH1 0x20
0x225 PUSH2 0x5dc
0x228 DUP4
0x229 CODECOPY
0x22a DUP2
0x22b MLOAD
0x22c SWAP2
0x22d MSTORE
0x22e PUSH1 0x44
0x230 DUP3
0x231 ADD
0x232 MSTORE
0x233 SWAP1
0x234 MLOAD
0x235 SWAP1
0x236 DUP2
0x237 SWAP1
0x238 SUB
0x239 PUSH1 0x64
0x23b ADD
0x23c SWAP1
0x23d REVERT
---
0x201: V178 = 0x40
0x204: V179 = M[0x40]
0x205: V180 = 0xe5
0x207: V181 = 0x2
0x209: V182 = EXP 0x2 0xe5
0x20a: V183 = 0x461bcd
0x20e: V184 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x210: M[V179] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x211: V185 = 0x20
0x213: V186 = 0x4
0x216: V187 = ADD V179 0x4
0x217: M[V187] = 0x20
0x218: V188 = 0xe
0x21a: V189 = 0x24
0x21d: V190 = ADD V179 0x24
0x21e: M[V190] = 0xe
0x21f: V191 = 0x0
0x222: V192 = M[0x0]
0x223: V193 = 0x20
0x225: V194 = 0x5dc
0x229: CODECOPY 0x0 0x5dc 0x20
0x22b: V195 = M[0x0]
0x22d: M[0x0] = V192
0x22e: V196 = 0x44
0x231: V197 = ADD V179 0x44
0x232: M[V197] = V195
0x234: V198 = M[0x40]
0x238: V199 = SUB V179 V198
0x239: V200 = 0x64
0x23b: V201 = ADD 0x64 V199
0x23d: REVERT V198 V201
---
Entry stack: [V11, 0x77, V48, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V48, 0x0]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x1ed]
Successors: [0x45c]
---
0x23e JUMPDEST
0x23f PUSH2 0x247
0x242 ADDRESS
0x243 PUSH2 0x45c
0x246 JUMP
---
0x23e: JUMPDEST 
0x23f: V202 = 0x247
0x242: V203 = ADDRESS
0x243: V204 = 0x45c
0x246: JUMP 0x45c
---
Entry stack: [V11, 0x77, V48, 0x0]
Stack pops: 0
Stack additions: [0x247, V203]
Exit stack: [V11, 0x77, V48, 0x0, 0x247, V203]

================================

Block 0x247
[0x247:0x2b3]
---
Predecessors: [0x4f1]
Successors: [0x2b4, 0x2b8]
---
0x247 JUMPDEST
0x248 PUSH1 0x2
0x24a SLOAD
0x24b PUSH1 0x40
0x24d DUP1
0x24e MLOAD
0x24f PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x270 DUP2
0x271 MSTORE
0x272 PUSH1 0x1
0x274 PUSH1 0xa0
0x276 PUSH1 0x2
0x278 EXP
0x279 SUB
0x27a DUP7
0x27b DUP2
0x27c AND
0x27d PUSH1 0x4
0x27f DUP4
0x280 ADD
0x281 MSTORE
0x282 PUSH1 0x24
0x284 DUP3
0x285 ADD
0x286 DUP6
0x287 SWAP1
0x288 MSTORE
0x289 SWAP2
0x28a MLOAD
0x28b SWAP4
0x28c SWAP5
0x28d POP
0x28e SWAP2
0x28f AND
0x290 SWAP2
0x291 PUSH4 0xa9059cbb
0x296 SWAP2
0x297 PUSH1 0x44
0x299 DUP1
0x29a DUP3
0x29b ADD
0x29c SWAP3
0x29d PUSH1 0x20
0x29f SWAP3
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 SWAP1
0x2a3 DUP3
0x2a4 SWAP1
0x2a5 SUB
0x2a6 ADD
0x2a7 DUP2
0x2a8 PUSH1 0x0
0x2aa DUP8
0x2ab DUP1
0x2ac EXTCODESIZE
0x2ad ISZERO
0x2ae DUP1
0x2af ISZERO
0x2b0 PUSH2 0x2b8
0x2b3 JUMPI
---
0x247: JUMPDEST 
0x248: V205 = 0x2
0x24a: V206 = S[0x2]
0x24b: V207 = 0x40
0x24e: V208 = M[0x40]
0x24f: V209 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x271: M[V208] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x272: V210 = 0x1
0x274: V211 = 0xa0
0x276: V212 = 0x2
0x278: V213 = EXP 0x2 0xa0
0x279: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x27d: V216 = 0x4
0x280: V217 = ADD V208 0x4
0x281: M[V217] = V215
0x282: V218 = 0x24
0x285: V219 = ADD V208 0x24
0x288: M[V219] = V413
0x28a: V220 = M[0x40]
0x28f: V221 = AND V206 0xffffffffffffffffffffffffffffffffffffffff
0x291: V222 = 0xa9059cbb
0x297: V223 = 0x44
0x29b: V224 = ADD V208 0x44
0x29d: V225 = 0x20
0x2a5: V226 = SUB V208 V220
0x2a6: V227 = ADD V226 0x44
0x2a8: V228 = 0x0
0x2ac: V229 = EXTCODESIZE V221
0x2ad: V230 = ISZERO V229
0x2af: V231 = ISZERO V230
0x2b0: V232 = 0x2b8
0x2b3: JUMPI 0x2b8 V231
---
Entry stack: [V11, S3, S2, S1, V413]
Stack pops: 3
Stack additions: [S2, S0, V221, 0xa9059cbb, V224, 0x20, V220, V227, V220, 0x0, V221, V230]
Exit stack: [V11, S3, S2, V413, V221, 0xa9059cbb, V224, 0x20, V220, V227, V220, 0x0, V221, V230]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x247]
Successors: []
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
---
0x2b4: V233 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V11, S12, S11, V413, V221, 0xa9059cbb, V224, 0x20, V220, V227, V220, 0x0, V221, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, V413, V221, 0xa9059cbb, V224, 0x20, V220, V227, V220, 0x0, V221, V230]

================================

Block 0x2b8
[0x2b8:0x2c2]
---
Predecessors: [0x247]
Successors: [0x2c3, 0x2cc]
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba GAS
0x2bb CALL
0x2bc ISZERO
0x2bd DUP1
0x2be ISZERO
0x2bf PUSH2 0x2cc
0x2c2 JUMPI
---
0x2b8: JUMPDEST 
0x2ba: V234 = GAS
0x2bb: V235 = CALL V234 V221 0x0 V220 V227 V220 0x20
0x2bc: V236 = ISZERO V235
0x2be: V237 = ISZERO V236
0x2bf: V238 = 0x2cc
0x2c2: JUMPI 0x2cc V237
---
Entry stack: [V11, S12, S11, V413, V221, 0xa9059cbb, V224, 0x20, V220, V227, V220, 0x0, V221, V230]
Stack pops: 7
Stack additions: [V236]
Exit stack: [V11, S12, S11, V413, V221, 0xa9059cbb, V224, V236]

================================

Block 0x2c3
[0x2c3:0x2cb]
---
Predecessors: [0x2b8]
Successors: []
---
0x2c3 RETURNDATASIZE
0x2c4 PUSH1 0x0
0x2c6 DUP1
0x2c7 RETURNDATACOPY
0x2c8 RETURNDATASIZE
0x2c9 PUSH1 0x0
0x2cb REVERT
---
0x2c3: V239 = RETURNDATASIZE
0x2c4: V240 = 0x0
0x2c7: RETURNDATACOPY 0x0 0x0 V239
0x2c8: V241 = RETURNDATASIZE
0x2c9: V242 = 0x0
0x2cb: REVERT 0x0 V241
---
Entry stack: [V11, S6, S5, V413, V221, 0xa9059cbb, V224, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, V413, V221, 0xa9059cbb, V224, V236]

================================

Block 0x2cc
[0x2cc:0x2dd]
---
Predecessors: [0x2b8]
Successors: [0x1e7, 0x2de]
---
0x2cc JUMPDEST
0x2cd POP
0x2ce POP
0x2cf POP
0x2d0 POP
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 RETURNDATASIZE
0x2d5 PUSH1 0x20
0x2d7 DUP2
0x2d8 LT
0x2d9 ISZERO
0x2da PUSH2 0x1e7
0x2dd JUMPI
---
0x2cc: JUMPDEST 
0x2d1: V243 = 0x40
0x2d3: V244 = M[0x40]
0x2d4: V245 = RETURNDATASIZE
0x2d5: V246 = 0x20
0x2d8: V247 = LT V245 0x20
0x2d9: V248 = ISZERO V247
0x2da: V249 = 0x1e7
0x2dd: JUMPI 0x1e7 V248
---
Entry stack: [V11, S6, S5, V413, V221, 0xa9059cbb, V224, V236]
Stack pops: 4
Stack additions: [V244, V245]
Exit stack: [V11, S6, S5, V413, V244, V245]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x2cc]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V250 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, V413, V244, V245]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, V413, V244, V245]

================================

Block 0x2e2
[0x2e2:0x2f5]
---
Predecessors: [0xbb]
Successors: [0x2f6, 0x333]
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x0
0x2e5 DUP1
0x2e6 SLOAD
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef AND
0x2f0 CALLER
0x2f1 EQ
0x2f2 PUSH2 0x333
0x2f5 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V251 = 0x0
0x2e6: V252 = S[0x0]
0x2e7: V253 = 0x1
0x2e9: V254 = 0xa0
0x2eb: V255 = 0x2
0x2ed: V256 = EXP 0x2 0xa0
0x2ee: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x2f0: V259 = CALLER
0x2f1: V260 = EQ V259 V258
0x2f2: V261 = 0x333
0x2f5: JUMPI 0x333 V260
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x77, 0x0]

================================

Block 0x2f6
[0x2f6:0x332]
---
Predecessors: [0x2e2]
Successors: []
---
0x2f6 PUSH1 0x40
0x2f8 DUP1
0x2f9 MLOAD
0x2fa PUSH1 0xe5
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff PUSH3 0x461bcd
0x303 MUL
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x20
0x308 PUSH1 0x4
0x30a DUP3
0x30b ADD
0x30c MSTORE
0x30d PUSH1 0xe
0x30f PUSH1 0x24
0x311 DUP3
0x312 ADD
0x313 MSTORE
0x314 PUSH1 0x0
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0x20
0x31a PUSH2 0x5dc
0x31d DUP4
0x31e CODECOPY
0x31f DUP2
0x320 MLOAD
0x321 SWAP2
0x322 MSTORE
0x323 PUSH1 0x44
0x325 DUP3
0x326 ADD
0x327 MSTORE
0x328 SWAP1
0x329 MLOAD
0x32a SWAP1
0x32b DUP2
0x32c SWAP1
0x32d SUB
0x32e PUSH1 0x64
0x330 ADD
0x331 SWAP1
0x332 REVERT
---
0x2f6: V262 = 0x40
0x2f9: V263 = M[0x40]
0x2fa: V264 = 0xe5
0x2fc: V265 = 0x2
0x2fe: V266 = EXP 0x2 0xe5
0x2ff: V267 = 0x461bcd
0x303: V268 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x305: M[V263] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x306: V269 = 0x20
0x308: V270 = 0x4
0x30b: V271 = ADD V263 0x4
0x30c: M[V271] = 0x20
0x30d: V272 = 0xe
0x30f: V273 = 0x24
0x312: V274 = ADD V263 0x24
0x313: M[V274] = 0xe
0x314: V275 = 0x0
0x317: V276 = M[0x0]
0x318: V277 = 0x20
0x31a: V278 = 0x5dc
0x31e: CODECOPY 0x0 0x5dc 0x20
0x320: V279 = M[0x0]
0x322: M[0x0] = V276
0x323: V280 = 0x44
0x326: V281 = ADD V263 0x44
0x327: M[V281] = V279
0x329: V282 = M[0x40]
0x32d: V283 = SUB V263 V282
0x32e: V284 = 0x64
0x330: V285 = ADD 0x64 V283
0x332: REVERT V282 V285
---
Entry stack: [V11, 0x77, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x0]

================================

Block 0x333
[0x333:0x33b]
---
Predecessors: [0x2e2]
Successors: [0x45c]
---
0x333 JUMPDEST
0x334 PUSH2 0x33c
0x337 ADDRESS
0x338 PUSH2 0x45c
0x33b JUMP
---
0x333: JUMPDEST 
0x334: V286 = 0x33c
0x337: V287 = ADDRESS
0x338: V288 = 0x45c
0x33b: JUMP 0x45c
---
Entry stack: [V11, 0x77, 0x0]
Stack pops: 0
Stack additions: [0x33c, V287]
Exit stack: [V11, 0x77, 0x0, 0x33c, V287]

================================

Block 0x33c
[0x33c:0x3a0]
---
Predecessors: [0x4f1]
Successors: [0x3a1, 0x3a5]
---
0x33c JUMPDEST
0x33d PUSH1 0x2
0x33f SLOAD
0x340 PUSH1 0x40
0x342 DUP1
0x343 MLOAD
0x344 PUSH32 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x4
0x369 DUP2
0x36a ADD
0x36b DUP5
0x36c SWAP1
0x36d MSTORE
0x36e SWAP1
0x36f MLOAD
0x370 SWAP3
0x371 SWAP4
0x372 POP
0x373 PUSH1 0x1
0x375 PUSH1 0xa0
0x377 PUSH1 0x2
0x379 EXP
0x37a SUB
0x37b SWAP1
0x37c SWAP2
0x37d AND
0x37e SWAP2
0x37f PUSH4 0xe4849b32
0x384 SWAP2
0x385 PUSH1 0x24
0x387 DUP1
0x388 DUP3
0x389 ADD
0x38a SWAP3
0x38b PUSH1 0x0
0x38d SWAP3
0x38e SWAP1
0x38f SWAP2
0x390 SWAP1
0x391 DUP3
0x392 SWAP1
0x393 SUB
0x394 ADD
0x395 DUP2
0x396 DUP4
0x397 DUP8
0x398 DUP1
0x399 EXTCODESIZE
0x39a ISZERO
0x39b DUP1
0x39c ISZERO
0x39d PUSH2 0x3a5
0x3a0 JUMPI
---
0x33c: JUMPDEST 
0x33d: V289 = 0x2
0x33f: V290 = S[0x2]
0x340: V291 = 0x40
0x343: V292 = M[0x40]
0x344: V293 = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x366: M[V292] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x367: V294 = 0x4
0x36a: V295 = ADD V292 0x4
0x36d: M[V295] = V413
0x36f: V296 = M[0x40]
0x373: V297 = 0x1
0x375: V298 = 0xa0
0x377: V299 = 0x2
0x379: V300 = EXP 0x2 0xa0
0x37a: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37d: V302 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V303 = 0xe4849b32
0x385: V304 = 0x24
0x389: V305 = ADD V292 0x24
0x38b: V306 = 0x0
0x393: V307 = SUB V292 V296
0x394: V308 = ADD V307 0x24
0x399: V309 = EXTCODESIZE V302
0x39a: V310 = ISZERO V309
0x39c: V311 = ISZERO V310
0x39d: V312 = 0x3a5
0x3a0: JUMPI 0x3a5 V311
---
Entry stack: [V11, S3, S2, S1, V413]
Stack pops: 2
Stack additions: [S0, V302, 0xe4849b32, V305, 0x0, V296, V308, V296, 0x0, V302, V310]
Exit stack: [V11, S3, S2, V413, V302, 0xe4849b32, V305, 0x0, V296, V308, V296, 0x0, V302, V310]

================================

Block 0x3a1
[0x3a1:0x3a4]
---
Predecessors: [0x33c]
Successors: []
---
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 REVERT
---
0x3a1: V313 = 0x0
0x3a4: REVERT 0x0 0x0
---
Entry stack: [V11, S12, S11, S10, V302, 0xe4849b32, V305, 0x0, V296, V308, V296, 0x0, V302, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, S10, V302, 0xe4849b32, V305, 0x0, V296, V308, V296, 0x0, V302, V310]

================================

Block 0x3a5
[0x3a5:0x3af]
---
Predecessors: [0x33c]
Successors: [0x3b0, 0x3b9]
---
0x3a5 JUMPDEST
0x3a6 POP
0x3a7 GAS
0x3a8 CALL
0x3a9 ISZERO
0x3aa DUP1
0x3ab ISZERO
0x3ac PUSH2 0x3b9
0x3af JUMPI
---
0x3a5: JUMPDEST 
0x3a7: V314 = GAS
0x3a8: V315 = CALL V314 V302 0x0 V296 V308 V296 0x0
0x3a9: V316 = ISZERO V315
0x3ab: V317 = ISZERO V316
0x3ac: V318 = 0x3b9
0x3af: JUMPI 0x3b9 V317
---
Entry stack: [V11, S12, S11, S10, V302, 0xe4849b32, V305, 0x0, V296, V308, V296, 0x0, V302, V310]
Stack pops: 7
Stack additions: [V316]
Exit stack: [V11, S12, S11, S10, V302, 0xe4849b32, V305, V316]

================================

Block 0x3b0
[0x3b0:0x3b8]
---
Predecessors: [0x3a5]
Successors: []
---
0x3b0 RETURNDATASIZE
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 RETURNDATACOPY
0x3b5 RETURNDATASIZE
0x3b6 PUSH1 0x0
0x3b8 REVERT
---
0x3b0: V319 = RETURNDATASIZE
0x3b1: V320 = 0x0
0x3b4: RETURNDATACOPY 0x0 0x0 V319
0x3b5: V321 = RETURNDATASIZE
0x3b6: V322 = 0x0
0x3b8: REVERT 0x0 V321
---
Entry stack: [V11, S6, S5, S4, S3, 0xe4849b32, S1, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, 0xe4849b32, S1, V316]

================================

Block 0x3b9
[0x3b9:0x3bf]
---
Predecessors: [0x3a5]
Successors: [0x77]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd POP
0x3be POP
0x3bf JUMP
---
0x3b9: JUMPDEST 
0x3bf: JUMP S5
---
Entry stack: [V11, S6, S5, S4, S3, 0xe4849b32, S1, V316]
Stack pops: 6
Stack additions: []
Exit stack: [V11, S6]

================================

Block 0x3c0
[0x3c0:0x428]
---
Predecessors: [0xc4]
Successors: [0x429, 0x42d]
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x2
0x3c3 SLOAD
0x3c4 PUSH1 0x1
0x3c6 SLOAD
0x3c7 PUSH1 0x40
0x3c9 DUP1
0x3ca MLOAD
0x3cb PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x3ec DUP2
0x3ed MSTORE
0x3ee PUSH1 0x1
0x3f0 PUSH1 0xa0
0x3f2 PUSH1 0x2
0x3f4 EXP
0x3f5 SUB
0x3f6 SWAP3
0x3f7 DUP4
0x3f8 AND
0x3f9 PUSH1 0x4
0x3fb DUP3
0x3fc ADD
0x3fd MSTORE
0x3fe SWAP1
0x3ff MLOAD
0x400 SWAP2
0x401 SWAP1
0x402 SWAP3
0x403 AND
0x404 SWAP2
0x405 PUSH4 0xf088d547
0x40a SWAP2
0x40b CALLVALUE
0x40c SWAP2
0x40d PUSH1 0x24
0x40f DUP1
0x410 DUP3
0x411 ADD
0x412 SWAP3
0x413 PUSH1 0x20
0x415 SWAP3
0x416 SWAP1
0x417 SWAP2
0x418 SWAP1
0x419 DUP3
0x41a SWAP1
0x41b SUB
0x41c ADD
0x41d DUP2
0x41e DUP6
0x41f DUP9
0x420 DUP1
0x421 EXTCODESIZE
0x422 ISZERO
0x423 DUP1
0x424 ISZERO
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x3c0: JUMPDEST 
0x3c1: V323 = 0x2
0x3c3: V324 = S[0x2]
0x3c4: V325 = 0x1
0x3c6: V326 = S[0x1]
0x3c7: V327 = 0x40
0x3ca: V328 = M[0x40]
0x3cb: V329 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x3ed: M[V328] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x3ee: V330 = 0x1
0x3f0: V331 = 0xa0
0x3f2: V332 = 0x2
0x3f4: V333 = EXP 0x2 0xa0
0x3f5: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f8: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x3f9: V336 = 0x4
0x3fc: V337 = ADD V328 0x4
0x3fd: M[V337] = V335
0x3ff: V338 = M[0x40]
0x403: V339 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x405: V340 = 0xf088d547
0x40b: V341 = CALLVALUE
0x40d: V342 = 0x24
0x411: V343 = ADD V328 0x24
0x413: V344 = 0x20
0x41b: V345 = SUB V328 V338
0x41c: V346 = ADD V345 0x24
0x421: V347 = EXTCODESIZE V339
0x422: V348 = ISZERO V347
0x424: V349 = ISZERO V348
0x425: V350 = 0x42d
0x428: JUMPI 0x42d V349
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V339, 0xf088d547, V341, V343, 0x20, V338, V346, V338, V341, V339, V348]
Exit stack: [V11, 0x77, V339, 0xf088d547, V341, V343, 0x20, V338, V346, V338, V341, V339, V348]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x3c0]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V351 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V339, 0xf088d547, V341, V343, 0x20, V338, V346, V338, V341, V339, V348]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V339, 0xf088d547, V341, V343, 0x20, V338, V346, V338, V341, V339, V348]

================================

Block 0x42d
[0x42d:0x437]
---
Predecessors: [0x3c0]
Successors: [0x438, 0x441]
---
0x42d JUMPDEST
0x42e POP
0x42f GAS
0x430 CALL
0x431 ISZERO
0x432 DUP1
0x433 ISZERO
0x434 PUSH2 0x441
0x437 JUMPI
---
0x42d: JUMPDEST 
0x42f: V352 = GAS
0x430: V353 = CALL V352 V339 V341 V338 V346 V338 0x20
0x431: V354 = ISZERO V353
0x433: V355 = ISZERO V354
0x434: V356 = 0x441
0x437: JUMPI 0x441 V355
---
Entry stack: [V11, 0x77, V339, 0xf088d547, V341, V343, 0x20, V338, V346, V338, V341, V339, V348]
Stack pops: 7
Stack additions: [V354]
Exit stack: [V11, 0x77, V339, 0xf088d547, V341, V343, V354]

================================

Block 0x438
[0x438:0x440]
---
Predecessors: [0x42d]
Successors: []
---
0x438 RETURNDATASIZE
0x439 PUSH1 0x0
0x43b DUP1
0x43c RETURNDATACOPY
0x43d RETURNDATASIZE
0x43e PUSH1 0x0
0x440 REVERT
---
0x438: V357 = RETURNDATASIZE
0x439: V358 = 0x0
0x43c: RETURNDATACOPY 0x0 0x0 V357
0x43d: V359 = RETURNDATASIZE
0x43e: V360 = 0x0
0x440: REVERT 0x0 V359
---
Entry stack: [V11, 0x77, V339, 0xf088d547, V341, V343, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V339, 0xf088d547, V341, V343, V354]

================================

Block 0x441
[0x441:0x453]
---
Predecessors: [0x42d]
Successors: [0x454, 0x458]
---
0x441 JUMPDEST
0x442 POP
0x443 POP
0x444 POP
0x445 POP
0x446 POP
0x447 PUSH1 0x40
0x449 MLOAD
0x44a RETURNDATASIZE
0x44b PUSH1 0x20
0x44d DUP2
0x44e LT
0x44f ISZERO
0x450 PUSH2 0x458
0x453 JUMPI
---
0x441: JUMPDEST 
0x447: V361 = 0x40
0x449: V362 = M[0x40]
0x44a: V363 = RETURNDATASIZE
0x44b: V364 = 0x20
0x44e: V365 = LT V363 0x20
0x44f: V366 = ISZERO V365
0x450: V367 = 0x458
0x453: JUMPI 0x458 V366
---
Entry stack: [V11, 0x77, V339, 0xf088d547, V341, V343, V354]
Stack pops: 5
Stack additions: [V362, V363]
Exit stack: [V11, 0x77, V362, V363]

================================

Block 0x454
[0x454:0x457]
---
Predecessors: [0x441]
Successors: []
---
0x454 PUSH1 0x0
0x456 DUP1
0x457 REVERT
---
0x454: V368 = 0x0
0x457: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V362, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V362, V363]

================================

Block 0x458
[0x458:0x45b]
---
Predecessors: [0x441, 0x59f]
Successors: [0x77]
---
0x458 JUMPDEST
0x459 POP
0x45a POP
0x45b JUMP
---
0x458: JUMPDEST 
0x45b: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x45c
[0x45c:0x4c2]
---
Predecessors: [0xd8, 0x23e, 0x333]
Successors: [0x4c3, 0x4c7]
---
0x45c JUMPDEST
0x45d PUSH1 0x2
0x45f SLOAD
0x460 PUSH1 0x40
0x462 DUP1
0x463 MLOAD
0x464 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f DUP5
0x490 DUP2
0x491 AND
0x492 PUSH1 0x4
0x494 DUP4
0x495 ADD
0x496 MSTORE
0x497 SWAP2
0x498 MLOAD
0x499 PUSH1 0x0
0x49b SWAP4
0x49c SWAP3
0x49d SWAP1
0x49e SWAP3
0x49f AND
0x4a0 SWAP2
0x4a1 PUSH4 0x70a08231
0x4a6 SWAP2
0x4a7 PUSH1 0x24
0x4a9 DUP1
0x4aa DUP3
0x4ab ADD
0x4ac SWAP3
0x4ad PUSH1 0x20
0x4af SWAP3
0x4b0 SWAP1
0x4b1 SWAP2
0x4b2 SWAP1
0x4b3 DUP3
0x4b4 SWAP1
0x4b5 SUB
0x4b6 ADD
0x4b7 DUP2
0x4b8 DUP8
0x4b9 DUP8
0x4ba DUP1
0x4bb EXTCODESIZE
0x4bc ISZERO
0x4bd DUP1
0x4be ISZERO
0x4bf PUSH2 0x4c7
0x4c2 JUMPI
---
0x45c: JUMPDEST 
0x45d: V369 = 0x2
0x45f: V370 = S[0x2]
0x460: V371 = 0x40
0x463: V372 = M[0x40]
0x464: V373 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x486: M[V372] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x487: V374 = 0x1
0x489: V375 = 0xa0
0x48b: V376 = 0x2
0x48d: V377 = EXP 0x2 0xa0
0x48e: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x492: V380 = 0x4
0x495: V381 = ADD V372 0x4
0x496: M[V381] = V379
0x498: V382 = M[0x40]
0x499: V383 = 0x0
0x49f: V384 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V385 = 0x70a08231
0x4a7: V386 = 0x24
0x4ab: V387 = ADD V372 0x24
0x4ad: V388 = 0x20
0x4b5: V389 = SUB V372 V382
0x4b6: V390 = ADD V389 0x24
0x4bb: V391 = EXTCODESIZE V384
0x4bc: V392 = ISZERO V391
0x4be: V393 = ISZERO V392
0x4bf: V394 = 0x4c7
0x4c2: JUMPI 0x4c7 V393
---
Entry stack: [V11, S4, S3, S2, {0xed, 0x247, 0x33c}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V384, 0x70a08231, V387, 0x20, V382, V390, V382, 0x0, V384, V392]
Exit stack: [V11, S4, S3, S2, {0xed, 0x247, 0x33c}, S0, 0x0, V384, 0x70a08231, V387, 0x20, V382, V390, V382, 0x0, V384, V392]

================================

Block 0x4c3
[0x4c3:0x4c6]
---
Predecessors: [0x45c]
Successors: []
---
0x4c3 PUSH1 0x0
0x4c5 DUP1
0x4c6 REVERT
---
0x4c3: V395 = 0x0
0x4c6: REVERT 0x0 0x0
---
Entry stack: [V11, S15, S14, S13, {0xed, 0x247, 0x33c}, S11, 0x0, V384, 0x70a08231, V387, 0x20, V382, V390, V382, 0x0, V384, V392]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, S13, {0xed, 0x247, 0x33c}, S11, 0x0, V384, 0x70a08231, V387, 0x20, V382, V390, V382, 0x0, V384, V392]

================================

Block 0x4c7
[0x4c7:0x4d1]
---
Predecessors: [0x45c]
Successors: [0x4d2, 0x4db]
---
0x4c7 JUMPDEST
0x4c8 POP
0x4c9 GAS
0x4ca CALL
0x4cb ISZERO
0x4cc DUP1
0x4cd ISZERO
0x4ce PUSH2 0x4db
0x4d1 JUMPI
---
0x4c7: JUMPDEST 
0x4c9: V396 = GAS
0x4ca: V397 = CALL V396 V384 0x0 V382 V390 V382 0x20
0x4cb: V398 = ISZERO V397
0x4cd: V399 = ISZERO V398
0x4ce: V400 = 0x4db
0x4d1: JUMPI 0x4db V399
---
Entry stack: [V11, S15, S14, S13, {0xed, 0x247, 0x33c}, S11, 0x0, V384, 0x70a08231, V387, 0x20, V382, V390, V382, 0x0, V384, V392]
Stack pops: 7
Stack additions: [V398]
Exit stack: [V11, S15, S14, S13, {0xed, 0x247, 0x33c}, S11, 0x0, V384, 0x70a08231, V387, V398]

================================

Block 0x4d2
[0x4d2:0x4da]
---
Predecessors: [0x4c7]
Successors: []
---
0x4d2 RETURNDATASIZE
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 RETURNDATACOPY
0x4d7 RETURNDATASIZE
0x4d8 PUSH1 0x0
0x4da REVERT
---
0x4d2: V401 = RETURNDATASIZE
0x4d3: V402 = 0x0
0x4d6: RETURNDATACOPY 0x0 0x0 V401
0x4d7: V403 = RETURNDATASIZE
0x4d8: V404 = 0x0
0x4da: REVERT 0x0 V403
---
Entry stack: [V11, S9, S8, S7, {0xed, 0x247, 0x33c}, S5, 0x0, S3, 0x70a08231, S1, V398]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, {0xed, 0x247, 0x33c}, S5, 0x0, S3, 0x70a08231, S1, V398]

================================

Block 0x4db
[0x4db:0x4ec]
---
Predecessors: [0x4c7]
Successors: [0x4ed, 0x4f1]
---
0x4db JUMPDEST
0x4dc POP
0x4dd POP
0x4de POP
0x4df POP
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 RETURNDATASIZE
0x4e4 PUSH1 0x20
0x4e6 DUP2
0x4e7 LT
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4db: JUMPDEST 
0x4e0: V405 = 0x40
0x4e2: V406 = M[0x40]
0x4e3: V407 = RETURNDATASIZE
0x4e4: V408 = 0x20
0x4e7: V409 = LT V407 0x20
0x4e8: V410 = ISZERO V409
0x4e9: V411 = 0x4f1
0x4ec: JUMPI 0x4f1 V410
---
Entry stack: [V11, S9, S8, S7, {0xed, 0x247, 0x33c}, S5, 0x0, S3, 0x70a08231, S1, V398]
Stack pops: 4
Stack additions: [V406, V407]
Exit stack: [V11, S9, S8, S7, {0xed, 0x247, 0x33c}, S5, 0x0, V406, V407]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4db]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V412 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V11, S7, S6, S5, {0xed, 0x247, 0x33c}, S3, 0x0, V406, V407]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, {0xed, 0x247, 0x33c}, S3, 0x0, V406, V407]

================================

Block 0x4f1
[0x4f1:0x4f8]
---
Predecessors: [0x4db]
Successors: [0xed, 0x247, 0x33c]
---
0x4f1 JUMPDEST
0x4f2 POP
0x4f3 MLOAD
0x4f4 SWAP3
0x4f5 SWAP2
0x4f6 POP
0x4f7 POP
0x4f8 JUMP
---
0x4f1: JUMPDEST 
0x4f3: V413 = M[V406]
0x4f8: JUMP {0xed, 0x247, 0x33c}
---
Entry stack: [V11, S7, S6, S5, {0xed, 0x247, 0x33c}, S3, 0x0, V406, V407]
Stack pops: 5
Stack additions: [V413]
Exit stack: [V11, S7, S6, S5, V413]

================================

Block 0x4f9
[0x4f9:0x50b]
---
Predecessors: [0x10b]
Successors: [0x50c, 0x549]
---
0x4f9 JUMPDEST
0x4fa PUSH1 0x0
0x4fc SLOAD
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 AND
0x506 CALLER
0x507 EQ
0x508 PUSH2 0x549
0x50b JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V414 = 0x0
0x4fc: V415 = S[0x0]
0x4fd: V416 = 0x1
0x4ff: V417 = 0xa0
0x501: V418 = 0x2
0x503: V419 = EXP 0x2 0xa0
0x504: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x505: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x506: V422 = CALLER
0x507: V423 = EQ V422 V421
0x508: V424 = 0x549
0x50b: JUMPI 0x549 V423
---
Entry stack: [V11, 0x77, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V84]

================================

Block 0x50c
[0x50c:0x548]
---
Predecessors: [0x4f9]
Successors: []
---
0x50c PUSH1 0x40
0x50e DUP1
0x50f MLOAD
0x510 PUSH1 0xe5
0x512 PUSH1 0x2
0x514 EXP
0x515 PUSH3 0x461bcd
0x519 MUL
0x51a DUP2
0x51b MSTORE
0x51c PUSH1 0x20
0x51e PUSH1 0x4
0x520 DUP3
0x521 ADD
0x522 MSTORE
0x523 PUSH1 0xe
0x525 PUSH1 0x24
0x527 DUP3
0x528 ADD
0x529 MSTORE
0x52a PUSH1 0x0
0x52c DUP1
0x52d MLOAD
0x52e PUSH1 0x20
0x530 PUSH2 0x5dc
0x533 DUP4
0x534 CODECOPY
0x535 DUP2
0x536 MLOAD
0x537 SWAP2
0x538 MSTORE
0x539 PUSH1 0x44
0x53b DUP3
0x53c ADD
0x53d MSTORE
0x53e SWAP1
0x53f MLOAD
0x540 SWAP1
0x541 DUP2
0x542 SWAP1
0x543 SUB
0x544 PUSH1 0x64
0x546 ADD
0x547 SWAP1
0x548 REVERT
---
0x50c: V425 = 0x40
0x50f: V426 = M[0x40]
0x510: V427 = 0xe5
0x512: V428 = 0x2
0x514: V429 = EXP 0x2 0xe5
0x515: V430 = 0x461bcd
0x519: V431 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x51b: M[V426] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x51c: V432 = 0x20
0x51e: V433 = 0x4
0x521: V434 = ADD V426 0x4
0x522: M[V434] = 0x20
0x523: V435 = 0xe
0x525: V436 = 0x24
0x528: V437 = ADD V426 0x24
0x529: M[V437] = 0xe
0x52a: V438 = 0x0
0x52d: V439 = M[0x0]
0x52e: V440 = 0x20
0x530: V441 = 0x5dc
0x534: CODECOPY 0x0 0x5dc 0x20
0x536: V442 = M[0x0]
0x538: M[0x0] = V439
0x539: V443 = 0x44
0x53c: V444 = ADD V426 0x44
0x53d: M[V444] = V442
0x53f: V445 = M[0x40]
0x543: V446 = SUB V426 V445
0x544: V447 = 0x64
0x546: V448 = ADD 0x64 V446
0x548: REVERT V445 V448
---
Entry stack: [V11, 0x77, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V84]

================================

Block 0x549
[0x549:0x550]
---
Predecessors: [0x4f9]
Successors: [0x551, 0x591]
---
0x549 JUMPDEST
0x54a DUP1
0x54b ISZERO
0x54c ISZERO
0x54d PUSH2 0x591
0x550 JUMPI
---
0x549: JUMPDEST 
0x54b: V449 = ISZERO V84
0x54c: V450 = ISZERO V449
0x54d: V451 = 0x591
0x550: JUMPI 0x591 V450
---
Entry stack: [V11, 0x77, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V84]

================================

Block 0x551
[0x551:0x581]
---
Predecessors: [0x549]
Successors: [0x582, 0x58b]
---
0x551 PUSH1 0x0
0x553 DUP1
0x554 SLOAD
0x555 PUSH1 0x40
0x557 MLOAD
0x558 PUSH1 0x1
0x55a PUSH1 0xa0
0x55c PUSH1 0x2
0x55e EXP
0x55f SUB
0x560 SWAP1
0x561 SWAP2
0x562 AND
0x563 SWAP2
0x564 ADDRESS
0x565 BALANCE
0x566 DUP1
0x567 ISZERO
0x568 PUSH2 0x8fc
0x56b MUL
0x56c SWAP3
0x56d SWAP1
0x56e SWAP2
0x56f DUP2
0x570 DUP2
0x571 DUP2
0x572 DUP6
0x573 DUP9
0x574 DUP9
0x575 CALL
0x576 SWAP4
0x577 POP
0x578 POP
0x579 POP
0x57a POP
0x57b ISZERO
0x57c DUP1
0x57d ISZERO
0x57e PUSH2 0x58b
0x581 JUMPI
---
0x551: V452 = 0x0
0x554: V453 = S[0x0]
0x555: V454 = 0x40
0x557: V455 = M[0x40]
0x558: V456 = 0x1
0x55a: V457 = 0xa0
0x55c: V458 = 0x2
0x55e: V459 = EXP 0x2 0xa0
0x55f: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x562: V461 = AND V453 0xffffffffffffffffffffffffffffffffffffffff
0x564: V462 = ADDRESS
0x565: V463 = BALANCE V462
0x567: V464 = ISZERO V463
0x568: V465 = 0x8fc
0x56b: V466 = MUL 0x8fc V464
0x575: V467 = CALL V466 V461 V463 V455 0x0 V455 0x0
0x57b: V468 = ISZERO V467
0x57d: V469 = ISZERO V468
0x57e: V470 = 0x58b
0x581: JUMPI 0x58b V469
---
Entry stack: [V11, 0x77, V84]
Stack pops: 0
Stack additions: [V468]
Exit stack: [V11, 0x77, V84, V468]

================================

Block 0x582
[0x582:0x58a]
---
Predecessors: [0x551]
Successors: []
---
0x582 RETURNDATASIZE
0x583 PUSH1 0x0
0x585 DUP1
0x586 RETURNDATACOPY
0x587 RETURNDATASIZE
0x588 PUSH1 0x0
0x58a REVERT
---
0x582: V471 = RETURNDATASIZE
0x583: V472 = 0x0
0x586: RETURNDATACOPY 0x0 0x0 V471
0x587: V473 = RETURNDATASIZE
0x588: V474 = 0x0
0x58a: REVERT 0x0 V473
---
Entry stack: [V11, 0x77, V84, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V84, V468]

================================

Block 0x58b
[0x58b:0x590]
---
Predecessors: [0x551]
Successors: [0x5d8]
---
0x58b JUMPDEST
0x58c POP
0x58d PUSH2 0x5d8
0x590 JUMP
---
0x58b: JUMPDEST 
0x58d: V475 = 0x5d8
0x590: JUMP 0x5d8
---
Entry stack: [V11, 0x77, V84, V468]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V84]

================================

Block 0x591
[0x591:0x59a]
---
Predecessors: [0x549]
Successors: [0x59b, 0x59f]
---
0x591 JUMPDEST
0x592 ADDRESS
0x593 BALANCE
0x594 DUP2
0x595 GT
0x596 ISZERO
0x597 PUSH2 0x59f
0x59a JUMPI
---
0x591: JUMPDEST 
0x592: V476 = ADDRESS
0x593: V477 = BALANCE V476
0x595: V478 = GT V84 V477
0x596: V479 = ISZERO V478
0x597: V480 = 0x59f
0x59a: JUMPI 0x59f V479
---
Entry stack: [V11, 0x77, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V84]

================================

Block 0x59b
[0x59b:0x59e]
---
Predecessors: [0x591]
Successors: []
---
0x59b PUSH1 0x0
0x59d DUP1
0x59e REVERT
---
0x59b: V481 = 0x0
0x59e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V84]

================================

Block 0x59f
[0x59f:0x5ce]
---
Predecessors: [0x591]
Successors: [0x458, 0x5cf]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x0
0x5a2 DUP1
0x5a3 SLOAD
0x5a4 PUSH1 0x40
0x5a6 MLOAD
0x5a7 PUSH1 0x1
0x5a9 PUSH1 0xa0
0x5ab PUSH1 0x2
0x5ad EXP
0x5ae SUB
0x5af SWAP1
0x5b0 SWAP2
0x5b1 AND
0x5b2 SWAP2
0x5b3 DUP4
0x5b4 ISZERO
0x5b5 PUSH2 0x8fc
0x5b8 MUL
0x5b9 SWAP2
0x5ba DUP5
0x5bb SWAP2
0x5bc DUP2
0x5bd DUP2
0x5be DUP2
0x5bf DUP6
0x5c0 DUP9
0x5c1 DUP9
0x5c2 CALL
0x5c3 SWAP4
0x5c4 POP
0x5c5 POP
0x5c6 POP
0x5c7 POP
0x5c8 ISZERO
0x5c9 DUP1
0x5ca ISZERO
0x5cb PUSH2 0x458
0x5ce JUMPI
---
0x59f: JUMPDEST 
0x5a0: V482 = 0x0
0x5a3: V483 = S[0x0]
0x5a4: V484 = 0x40
0x5a6: V485 = M[0x40]
0x5a7: V486 = 0x1
0x5a9: V487 = 0xa0
0x5ab: V488 = 0x2
0x5ad: V489 = EXP 0x2 0xa0
0x5ae: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b1: V491 = AND V483 0xffffffffffffffffffffffffffffffffffffffff
0x5b4: V492 = ISZERO V84
0x5b5: V493 = 0x8fc
0x5b8: V494 = MUL 0x8fc V492
0x5c2: V495 = CALL V494 V491 V84 V485 0x0 V485 0x0
0x5c8: V496 = ISZERO V495
0x5ca: V497 = ISZERO V496
0x5cb: V498 = 0x458
0x5ce: JUMPI 0x458 V497
---
Entry stack: [V11, 0x77, V84]
Stack pops: 1
Stack additions: [S0, V496]
Exit stack: [V11, 0x77, V84, V496]

================================

Block 0x5cf
[0x5cf:0x5d7]
---
Predecessors: [0x59f]
Successors: []
---
0x5cf RETURNDATASIZE
0x5d0 PUSH1 0x0
0x5d2 DUP1
0x5d3 RETURNDATACOPY
0x5d4 RETURNDATASIZE
0x5d5 PUSH1 0x0
0x5d7 REVERT
---
0x5cf: V499 = RETURNDATASIZE
0x5d0: V500 = 0x0
0x5d3: RETURNDATACOPY 0x0 0x0 V499
0x5d4: V501 = RETURNDATASIZE
0x5d5: V502 = 0x0
0x5d7: REVERT 0x0 V501
---
Entry stack: [V11, 0x77, V84, V496]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V84, V496]

================================

Block 0x5d8
[0x5d8:0x5da]
---
Predecessors: [0x58b]
Successors: [0x77]
---
0x5d8 JUMPDEST
0x5d9 POP
0x5da JUMP
---
0x5d8: JUMPDEST 
0x5da: JUMP 0x77
---
Entry stack: [V11, 0x77, V84]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5db
[0x5db:0x631]
---
Predecessors: []
Successors: []
---
0x5db STOP
0x5dc COINBASE
0x5dd PUSH4 0x63657373
0x5e2 SHA3
0x5e3 DIFFICULTY
0x5e4 PUSH6 0x6e6965642100
0x5eb STOP
0x5ec STOP
0x5ed STOP
0x5ee STOP
0x5ef STOP
0x5f0 STOP
0x5f1 STOP
0x5f2 STOP
0x5f3 STOP
0x5f4 STOP
0x5f5 STOP
0x5f6 STOP
0x5f7 STOP
0x5f8 STOP
0x5f9 STOP
0x5fa STOP
0x5fb STOP
0x5fc LOG1
0x5fd PUSH6 0x627a7a723058
0x604 SHA3
0x605 MISSING 0x1e
0x606 PUSH6 0x67adedbdff3e
0x60d MISSING 0xe3
0x60e SIGNEXTEND
0x60f OR
0x610 POP
0x611 MISSING 0xe6
0x612 DUP10
0x613 MISSING 0xea
0x614 PUSH29 0x6c4c76aead99d212a12d7e0c4241c24b0029
---
0x5db: STOP 
0x5dc: V503 = COINBASE
0x5dd: V504 = 0x63657373
0x5e2: V505 = SHA3 0x63657373 V503
0x5e3: V506 = DIFFICULTY
0x5e4: V507 = 0x6e6965642100
0x5eb: STOP 
0x5ec: STOP 
0x5ed: STOP 
0x5ee: STOP 
0x5ef: STOP 
0x5f0: STOP 
0x5f1: STOP 
0x5f2: STOP 
0x5f3: STOP 
0x5f4: STOP 
0x5f5: STOP 
0x5f6: STOP 
0x5f7: STOP 
0x5f8: STOP 
0x5f9: STOP 
0x5fa: STOP 
0x5fb: STOP 
0x5fc: LOG S0 S1 S2
0x5fd: V508 = 0x627a7a723058
0x604: V509 = SHA3 0x627a7a723058 S3
0x605: MISSING 0x1e
0x606: V510 = 0x67adedbdff3e
0x60d: MISSING 0xe3
0x60e: V511 = SIGNEXTEND S0 S1
0x60f: V512 = OR V511 S2
0x611: MISSING 0xe6
0x613: MISSING 0xea
0x614: V513 = 0x6c4c76aead99d212a12d7e0c4241c24b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6e6965642100, V506, V505, V509, 0x67adedbdff3e, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0x6c4c76aead99d212a12d7e0c4241c24b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e92abdd
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x81, 0x85, 0x117, 0x12a, 0x167, 0x1cf, 0x1d3, 0x1de, 0x1e7

Function 1:
Public function signature: 0x465ad773
Entry block: 0x8e
Exit block: 0x77
Body: 0x77, 0x8e, 0x96, 0x9a, 0x1e7, 0x1ed, 0x201, 0x23e, 0x247, 0x2b4, 0x2b8, 0x2c3, 0x2cc, 0x2de

Function 2:
Public function signature: 0x9904e174
Entry block: 0xaf
Exit block: 0x77
Body: 0x77, 0xaf, 0xb7, 0xbb, 0x2e2, 0x2f6, 0x333, 0x33c, 0x3a1, 0x3a5, 0x3b0, 0x3b9

Function 3:
Public function signature: 0xd0febe4c
Entry block: 0xc4
Exit block: 0x77
Body: 0x77, 0xc4, 0x3c0, 0x429, 0x42d, 0x438, 0x441, 0x454, 0x458

Function 4:
Public function signature: 0xf8b2cb4f
Entry block: 0xcc
Exit block: 0xed
Body: 0xcc, 0xd4, 0xd8, 0xed

Function 5:
Public function signature: 0xfc7fcae1
Entry block: 0xff
Exit block: 0x77
Body: 0x77, 0xff, 0x107, 0x10b, 0x458, 0x4f9, 0x50c, 0x549, 0x551, 0x582, 0x58b, 0x591, 0x59b, 0x59f, 0x5cf, 0x5d8

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x45c
Exit block: 0x4f1
Body: 0x45c, 0x4c7, 0x4db, 0x4f1

