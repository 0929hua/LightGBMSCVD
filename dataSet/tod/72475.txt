Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xab]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xab
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xab
0xc: JUMPI 0xab V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xb0]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x14bfd6d0
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xb0
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x14bfd6d0
0x22: V15 = EQ V13 0x14bfd6d0
0x23: V16 = 0xb0
0x26: JUMPI 0xb0 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xe4]
---
0x27 DUP1
0x28 PUSH4 0x35a063b4
0x2d EQ
0x2e PUSH2 0xe4
0x31 JUMPI
---
0x28: V17 = 0x35a063b4
0x2d: V18 = EQ 0x35a063b4 V13
0x2e: V19 = 0xe4
0x31: JUMPI 0xe4 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xfb]
---
0x32 DUP1
0x33 PUSH4 0x4783c35b
0x38 EQ
0x39 PUSH2 0xfb
0x3c JUMPI
---
0x33: V20 = 0x4783c35b
0x38: V21 = EQ 0x4783c35b V13
0x39: V22 = 0xfb
0x3c: JUMPI 0xfb V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x110]
---
0x3d DUP1
0x3e PUSH4 0x53f754e0
0x43 EQ
0x44 PUSH2 0x110
0x47 JUMPI
---
0x3e: V23 = 0x53f754e0
0x43: V24 = EQ 0x53f754e0 V13
0x44: V25 = 0x110
0x47: JUMPI 0x110 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x13a]
---
0x48 DUP1
0x49 PUSH4 0x63037b0c
0x4e EQ
0x4f PUSH2 0x13a
0x52 JUMPI
---
0x49: V26 = 0x63037b0c
0x4e: V27 = EQ 0x63037b0c V13
0x4f: V28 = 0x13a
0x52: JUMPI 0x13a V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x17c]
---
0x53 DUP1
0x54 PUSH4 0x66829b16
0x59 EQ
0x5a PUSH2 0x17c
0x5d JUMPI
---
0x54: V29 = 0x66829b16
0x59: V30 = EQ 0x66829b16 V13
0x5a: V31 = 0x17c
0x5d: JUMPI 0x17c V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x19d]
---
0x5e DUP1
0x5f PUSH4 0x6901f668
0x64 EQ
0x65 PUSH2 0x19d
0x68 JUMPI
---
0x5f: V32 = 0x6901f668
0x64: V33 = EQ 0x6901f668 V13
0x65: V34 = 0x19d
0x68: JUMPI 0x19d V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1c6]
---
0x69 DUP1
0x6a PUSH4 0x853828b6
0x6f EQ
0x70 PUSH2 0x1c6
0x73 JUMPI
---
0x6a: V35 = 0x853828b6
0x6f: V36 = EQ 0x853828b6 V13
0x70: V37 = 0x1c6
0x73: JUMPI 0x1c6 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1db]
---
0x74 DUP1
0x75 PUSH4 0xba3f5a12
0x7a EQ
0x7b PUSH2 0x1db
0x7e JUMPI
---
0x75: V38 = 0xba3f5a12
0x7a: V39 = EQ 0xba3f5a12 V13
0x7b: V40 = 0x1db
0x7e: JUMPI 0x1db V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1f0]
---
0x7f DUP1
0x80 PUSH4 0xdb171211
0x85 EQ
0x86 PUSH2 0x1f0
0x89 JUMPI
---
0x80: V41 = 0xdb171211
0x85: V42 = EQ 0xdb171211 V13
0x86: V43 = 0x1f0
0x89: JUMPI 0x1f0 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x205]
---
0x8a DUP1
0x8b PUSH4 0xe09adc70
0x90 EQ
0x91 PUSH2 0x205
0x94 JUMPI
---
0x8b: V44 = 0xe09adc70
0x90: V45 = EQ 0xe09adc70 V13
0x91: V46 = 0x205
0x94: JUMPI 0x205 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x21a]
---
0x95 DUP1
0x96 PUSH4 0xeffd88b7
0x9b EQ
0x9c PUSH2 0x21a
0x9f JUMPI
---
0x96: V47 = 0xeffd88b7
0x9b: V48 = EQ 0xeffd88b7 V13
0x9c: V49 = 0x21a
0x9f: JUMPI 0x21a V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x22f]
---
0xa0 DUP1
0xa1 PUSH4 0xfc0c546a
0xa6 EQ
0xa7 PUSH2 0x22f
0xaa JUMPI
---
0xa1: V50 = 0xfc0c546a
0xa6: V51 = EQ 0xfc0c546a V13
0xa7: V52 = 0x22f
0xaa: JUMPI 0x22f V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xaf]
---
Predecessors: [0x0, 0xa0]
Successors: []
---
0xab JUMPDEST
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xab: JUMPDEST 
0xac: V53 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xb0
[0xb0:0xb7]
---
Predecessors: [0xd]
Successors: [0xb8, 0xbc]
---
0xb0 JUMPDEST
0xb1 CALLVALUE
0xb2 DUP1
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb0: JUMPDEST 
0xb1: V54 = CALLVALUE
0xb3: V55 = ISZERO V54
0xb4: V56 = 0xbc
0xb7: JUMPI 0xbc V55
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V13, V54]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb0]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V57 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V13, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V54]

================================

Block 0xbc
[0xbc:0xc7]
---
Predecessors: [0xb0]
Successors: [0x244]
---
0xbc JUMPDEST
0xbd POP
0xbe PUSH2 0xc8
0xc1 PUSH1 0x4
0xc3 CALLDATALOAD
0xc4 PUSH2 0x244
0xc7 JUMP
---
0xbc: JUMPDEST 
0xbe: V58 = 0xc8
0xc1: V59 = 0x4
0xc3: V60 = CALLDATALOAD 0x4
0xc4: V61 = 0x244
0xc7: JUMP 0x244
---
Entry stack: [V13, V54]
Stack pops: 1
Stack additions: [0xc8, V60]
Exit stack: [V13, 0xc8, V60]

================================

Block 0xc8
[0xc8:0xe3]
---
Predecessors: [0x252, 0x2ec, 0x963]
Successors: []
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb DUP1
0xcc MLOAD
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 SWAP1
0xd6 SWAP3
0xd7 AND
0xd8 DUP3
0xd9 MSTORE
0xda MLOAD
0xdb SWAP1
0xdc DUP2
0xdd SWAP1
0xde SUB
0xdf PUSH1 0x20
0xe1 ADD
0xe2 SWAP1
0xe3 RETURN
---
0xc8: JUMPDEST 
0xc9: V62 = 0x40
0xcc: V63 = M[0x40]
0xcd: V64 = 0x1
0xcf: V65 = 0xa0
0xd1: V66 = 0x2
0xd3: V67 = EXP 0x2 0xa0
0xd4: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V69 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd9: M[V63] = V69
0xda: V70 = M[0x40]
0xde: V71 = SUB V63 V70
0xdf: V72 = 0x20
0xe1: V73 = ADD 0x20 V71
0xe3: RETURN V70 V73
---
Entry stack: [V13, 0xc8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc8]

================================

Block 0xe4
[0xe4:0xeb]
---
Predecessors: [0x27]
Successors: [0xec, 0xf0]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 DUP1
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe4: JUMPDEST 
0xe5: V74 = CALLVALUE
0xe7: V75 = ISZERO V74
0xe8: V76 = 0xf0
0xeb: JUMPI 0xf0 V75
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V13, V74]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe4]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V77 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V13, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V74]

================================

Block 0xf0
[0xf0:0xf8]
---
Predecessors: [0xe4]
Successors: [0x26c]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 PUSH2 0xf9
0xf5 PUSH2 0x26c
0xf8 JUMP
---
0xf0: JUMPDEST 
0xf2: V78 = 0xf9
0xf5: V79 = 0x26c
0xf8: JUMP 0x26c
---
Entry stack: [V13, V74]
Stack pops: 1
Stack additions: [0xf9]
Exit stack: [V13, 0xf9]

================================

Block 0xf9
[0xf9:0xfa]
---
Predecessors: [0x3b2, 0x78a]
Successors: []
---
0xf9 JUMPDEST
0xfa STOP
---
0xf9: JUMPDEST 
0xfa: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfb
[0xfb:0x102]
---
Predecessors: [0x32]
Successors: [0x103, 0x107]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd DUP1
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xfb: JUMPDEST 
0xfc: V80 = CALLVALUE
0xfe: V81 = ISZERO V80
0xff: V82 = 0x107
0x102: JUMPI 0x107 V81
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V13, V80]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xfb]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V83 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V13, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V80]

================================

Block 0x107
[0x107:0x10f]
---
Predecessors: [0xfb]
Successors: [0x2ec]
---
0x107 JUMPDEST
0x108 POP
0x109 PUSH2 0xc8
0x10c PUSH2 0x2ec
0x10f JUMP
---
0x107: JUMPDEST 
0x109: V84 = 0xc8
0x10c: V85 = 0x2ec
0x10f: JUMP 0x2ec
---
Entry stack: [V13, V80]
Stack pops: 1
Stack additions: [0xc8]
Exit stack: [V13, 0xc8]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x3d]
Successors: [0x118, 0x11c]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 DUP1
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x110: JUMPDEST 
0x111: V86 = CALLVALUE
0x113: V87 = ISZERO V86
0x114: V88 = 0x11c
0x117: JUMPI 0x11c V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V13, V86]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x110]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V89 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V13, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V86]

================================

Block 0x11c
[0x11c:0x127]
---
Predecessors: [0x110]
Successors: [0x2fb]
---
0x11c JUMPDEST
0x11d POP
0x11e PUSH2 0x128
0x121 PUSH1 0x4
0x123 CALLDATALOAD
0x124 PUSH2 0x2fb
0x127 JUMP
---
0x11c: JUMPDEST 
0x11e: V90 = 0x128
0x121: V91 = 0x4
0x123: V92 = CALLDATALOAD 0x4
0x124: V93 = 0x2fb
0x127: JUMP 0x2fb
---
Entry stack: [V13, V86]
Stack pops: 1
Stack additions: [0x128, V92]
Exit stack: [V13, 0x128, V92]

================================

Block 0x128
[0x128:0x139]
---
Predecessors: [0x30e, 0x78f, 0x957, 0x95d]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b DUP1
0x12c MLOAD
0x12d SWAP2
0x12e DUP3
0x12f MSTORE
0x130 MLOAD
0x131 SWAP1
0x132 DUP2
0x133 SWAP1
0x134 SUB
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP1
0x139 RETURN
---
0x128: JUMPDEST 
0x129: V94 = 0x40
0x12c: V95 = M[0x40]
0x12f: M[V95] = S0
0x130: V96 = M[0x40]
0x134: V97 = SUB V95 V96
0x135: V98 = 0x20
0x137: V99 = ADD 0x20 V97
0x139: RETURN V96 V99
---
Entry stack: [V13, 0xf9, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf9, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1]

================================

Block 0x13a
[0x13a:0x141]
---
Predecessors: [0x48]
Successors: [0x142, 0x146]
---
0x13a JUMPDEST
0x13b CALLVALUE
0x13c DUP1
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13a: JUMPDEST 
0x13b: V100 = CALLVALUE
0x13d: V101 = ISZERO V100
0x13e: V102 = 0x146
0x141: JUMPI 0x146 V101
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V100]
Exit stack: [V13, V100]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13a]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V103 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V13, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V100]

================================

Block 0x146
[0x146:0x151]
---
Predecessors: [0x13a]
Successors: [0x315]
---
0x146 JUMPDEST
0x147 POP
0x148 PUSH2 0x152
0x14b PUSH1 0x4
0x14d CALLDATALOAD
0x14e PUSH2 0x315
0x151 JUMP
---
0x146: JUMPDEST 
0x148: V104 = 0x152
0x14b: V105 = 0x4
0x14d: V106 = CALLDATALOAD 0x4
0x14e: V107 = 0x315
0x151: JUMP 0x315
---
Entry stack: [V13, V100]
Stack pops: 1
Stack additions: [0x152, V106]
Exit stack: [V13, 0x152, V106]

================================

Block 0x152
[0x152:0x17b]
---
Predecessors: [0x323]
Successors: []
---
0x152 JUMPDEST
0x153 PUSH1 0x40
0x155 DUP1
0x156 MLOAD
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f SWAP1
0x160 SWAP5
0x161 AND
0x162 DUP5
0x163 MSTORE
0x164 PUSH1 0x20
0x166 DUP5
0x167 ADD
0x168 SWAP3
0x169 SWAP1
0x16a SWAP3
0x16b MSTORE
0x16c ISZERO
0x16d ISZERO
0x16e DUP3
0x16f DUP3
0x170 ADD
0x171 MSTORE
0x172 MLOAD
0x173 SWAP1
0x174 DUP2
0x175 SWAP1
0x176 SUB
0x177 PUSH1 0x60
0x179 ADD
0x17a SWAP1
0x17b RETURN
---
0x152: JUMPDEST 
0x153: V108 = 0x40
0x156: V109 = M[0x40]
0x157: V110 = 0x1
0x159: V111 = 0xa0
0x15b: V112 = 0x2
0x15d: V113 = EXP 0x2 0xa0
0x15e: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x161: V115 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x163: M[V109] = V115
0x164: V116 = 0x20
0x167: V117 = ADD V109 0x20
0x16b: M[V117] = V289
0x16c: V118 = ISZERO V300
0x16d: V119 = ISZERO V118
0x170: V120 = ADD 0x40 V109
0x171: M[V120] = V119
0x172: V121 = M[0x40]
0x176: V122 = SUB V109 V121
0x177: V123 = 0x60
0x179: V124 = ADD 0x60 V122
0x17b: RETURN V121 V124
---
Entry stack: [V13, 0x152, V298, V289, V300]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x152]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x53]
Successors: [0x184, 0x188]
---
0x17c JUMPDEST
0x17d CALLVALUE
0x17e DUP1
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x17c: JUMPDEST 
0x17d: V125 = CALLVALUE
0x17f: V126 = ISZERO V125
0x180: V127 = 0x188
0x183: JUMPI 0x188 V126
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V13, V125]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x17c]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V128 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V13, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V125]

================================

Block 0x188
[0x188:0x19c]
---
Predecessors: [0x17c]
Successors: [0x353]
---
0x188 JUMPDEST
0x189 POP
0x18a PUSH2 0xf9
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 AND
0x199 PUSH2 0x353
0x19c JUMP
---
0x188: JUMPDEST 
0x18a: V129 = 0xf9
0x18d: V130 = 0x1
0x18f: V131 = 0xa0
0x191: V132 = 0x2
0x193: V133 = EXP 0x2 0xa0
0x194: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V135 = 0x4
0x197: V136 = CALLDATALOAD 0x4
0x198: V137 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x199: V138 = 0x353
0x19c: JUMP 0x353
---
Entry stack: [V13, V125]
Stack pops: 1
Stack additions: [0xf9, V137]
Exit stack: [V13, 0xf9, V137]

================================

Block 0x19d
[0x19d:0x1a4]
---
Predecessors: [0x5e]
Successors: [0x1a5, 0x1a9]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f DUP1
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19d: JUMPDEST 
0x19e: V139 = CALLVALUE
0x1a0: V140 = ISZERO V139
0x1a1: V141 = 0x1a9
0x1a4: JUMPI 0x1a9 V140
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V139]
Exit stack: [V13, V139]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19d]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V142 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V13, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V139]

================================

Block 0x1a9
[0x1a9:0x1b1]
---
Predecessors: [0x19d]
Successors: [0x3e3]
---
0x1a9 JUMPDEST
0x1aa POP
0x1ab PUSH2 0x1b2
0x1ae PUSH2 0x3e3
0x1b1 JUMP
---
0x1a9: JUMPDEST 
0x1ab: V143 = 0x1b2
0x1ae: V144 = 0x3e3
0x1b1: JUMP 0x3e3
---
Entry stack: [V13, V139]
Stack pops: 1
Stack additions: [0x1b2]
Exit stack: [V13, 0x1b2]

================================

Block 0x1b2
[0x1b2:0x1c5]
---
Predecessors: [0x5a1, 0x94e]
Successors: []
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x40
0x1b5 DUP1
0x1b6 MLOAD
0x1b7 SWAP2
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba DUP3
0x1bb MSTORE
0x1bc MLOAD
0x1bd SWAP1
0x1be DUP2
0x1bf SWAP1
0x1c0 SUB
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP1
0x1c5 RETURN
---
0x1b2: JUMPDEST 
0x1b3: V145 = 0x40
0x1b6: V146 = M[0x40]
0x1b8: V147 = ISZERO S0
0x1b9: V148 = ISZERO V147
0x1bb: M[V146] = V148
0x1bc: V149 = M[0x40]
0x1c0: V150 = SUB V146 V149
0x1c1: V151 = 0x20
0x1c3: V152 = ADD 0x20 V150
0x1c5: RETURN V149 V152
---
Entry stack: [V13, S4, {0x0, 0xf9}, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S4, {0x0, 0xf9}, {0x0, 0x1}, S1]

================================

Block 0x1c6
[0x1c6:0x1cd]
---
Predecessors: [0x69]
Successors: [0x1ce, 0x1d2]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 DUP1
0x1c9 ISZERO
0x1ca PUSH2 0x1d2
0x1cd JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V153 = CALLVALUE
0x1c9: V154 = ISZERO V153
0x1ca: V155 = 0x1d2
0x1cd: JUMPI 0x1d2 V154
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V153]
Exit stack: [V13, V153]

================================

Block 0x1ce
[0x1ce:0x1d1]
---
Predecessors: [0x1c6]
Successors: []
---
0x1ce PUSH1 0x0
0x1d0 DUP1
0x1d1 REVERT
---
0x1ce: V156 = 0x0
0x1d1: REVERT 0x0 0x0
---
Entry stack: [V13, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V153]

================================

Block 0x1d2
[0x1d2:0x1da]
---
Predecessors: [0x1c6]
Successors: [0x5a8]
---
0x1d2 JUMPDEST
0x1d3 POP
0x1d4 PUSH2 0xf9
0x1d7 PUSH2 0x5a8
0x1da JUMP
---
0x1d2: JUMPDEST 
0x1d4: V157 = 0xf9
0x1d7: V158 = 0x5a8
0x1da: JUMP 0x5a8
---
Entry stack: [V13, V153]
Stack pops: 1
Stack additions: [0xf9]
Exit stack: [V13, 0xf9]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x74]
Successors: [0x1e3, 0x1e7]
---
0x1db JUMPDEST
0x1dc CALLVALUE
0x1dd DUP1
0x1de ISZERO
0x1df PUSH2 0x1e7
0x1e2 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V159 = CALLVALUE
0x1de: V160 = ISZERO V159
0x1df: V161 = 0x1e7
0x1e2: JUMPI 0x1e7 V160
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V13, V159]

================================

Block 0x1e3
[0x1e3:0x1e6]
---
Predecessors: [0x1db]
Successors: []
---
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 REVERT
---
0x1e3: V162 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V13, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V159]

================================

Block 0x1e7
[0x1e7:0x1ef]
---
Predecessors: [0x1db]
Successors: [0x78f]
---
0x1e7 JUMPDEST
0x1e8 POP
0x1e9 PUSH2 0x128
0x1ec PUSH2 0x78f
0x1ef JUMP
---
0x1e7: JUMPDEST 
0x1e9: V163 = 0x128
0x1ec: V164 = 0x78f
0x1ef: JUMP 0x78f
---
Entry stack: [V13, V159]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V13, 0x128]

================================

Block 0x1f0
[0x1f0:0x1f7]
---
Predecessors: [0x7f]
Successors: [0x1f8, 0x1fc]
---
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 DUP1
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V165 = CALLVALUE
0x1f3: V166 = ISZERO V165
0x1f4: V167 = 0x1fc
0x1f7: JUMPI 0x1fc V166
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V165]
Exit stack: [V13, V165]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f0]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V168 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V13, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V165]

================================

Block 0x1fc
[0x1fc:0x204]
---
Predecessors: [0x1f0]
Successors: [0x795]
---
0x1fc JUMPDEST
0x1fd POP
0x1fe PUSH2 0x1b2
0x201 PUSH2 0x795
0x204 JUMP
---
0x1fc: JUMPDEST 
0x1fe: V169 = 0x1b2
0x201: V170 = 0x795
0x204: JUMP 0x795
---
Entry stack: [V13, V165]
Stack pops: 1
Stack additions: [0x1b2]
Exit stack: [V13, 0x1b2]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x8a]
Successors: [0x20d, 0x211]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x205: JUMPDEST 
0x206: V171 = CALLVALUE
0x208: V172 = ISZERO V171
0x209: V173 = 0x211
0x20c: JUMPI 0x211 V172
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V171]
Exit stack: [V13, V171]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x205]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V174 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V13, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V171]

================================

Block 0x211
[0x211:0x219]
---
Predecessors: [0x205]
Successors: [0x957]
---
0x211 JUMPDEST
0x212 POP
0x213 PUSH2 0x128
0x216 PUSH2 0x957
0x219 JUMP
---
0x211: JUMPDEST 
0x213: V175 = 0x128
0x216: V176 = 0x957
0x219: JUMP 0x957
---
Entry stack: [V13, V171]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V13, 0x128]

================================

Block 0x21a
[0x21a:0x221]
---
Predecessors: [0x95]
Successors: [0x222, 0x226]
---
0x21a JUMPDEST
0x21b CALLVALUE
0x21c DUP1
0x21d ISZERO
0x21e PUSH2 0x226
0x221 JUMPI
---
0x21a: JUMPDEST 
0x21b: V177 = CALLVALUE
0x21d: V178 = ISZERO V177
0x21e: V179 = 0x226
0x221: JUMPI 0x226 V178
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V13, V177]

================================

Block 0x222
[0x222:0x225]
---
Predecessors: [0x21a]
Successors: []
---
0x222 PUSH1 0x0
0x224 DUP1
0x225 REVERT
---
0x222: V180 = 0x0
0x225: REVERT 0x0 0x0
---
Entry stack: [V13, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V177]

================================

Block 0x226
[0x226:0x22e]
---
Predecessors: [0x21a]
Successors: [0x95d]
---
0x226 JUMPDEST
0x227 POP
0x228 PUSH2 0x128
0x22b PUSH2 0x95d
0x22e JUMP
---
0x226: JUMPDEST 
0x228: V181 = 0x128
0x22b: V182 = 0x95d
0x22e: JUMP 0x95d
---
Entry stack: [V13, V177]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V13, 0x128]

================================

Block 0x22f
[0x22f:0x236]
---
Predecessors: [0xa0]
Successors: [0x237, 0x23b]
---
0x22f JUMPDEST
0x230 CALLVALUE
0x231 DUP1
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x22f: JUMPDEST 
0x230: V183 = CALLVALUE
0x232: V184 = ISZERO V183
0x233: V185 = 0x23b
0x236: JUMPI 0x23b V184
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V183]
Exit stack: [V13, V183]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x22f]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V186 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V13, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V183]

================================

Block 0x23b
[0x23b:0x243]
---
Predecessors: [0x22f]
Successors: [0x963]
---
0x23b JUMPDEST
0x23c POP
0x23d PUSH2 0xc8
0x240 PUSH2 0x963
0x243 JUMP
---
0x23b: JUMPDEST 
0x23d: V187 = 0xc8
0x240: V188 = 0x963
0x243: JUMP 0x963
---
Entry stack: [V13, V183]
Stack pops: 1
Stack additions: [0xc8]
Exit stack: [V13, 0xc8]

================================

Block 0x244
[0x244:0x250]
---
Predecessors: [0xbc]
Successors: [0x251, 0x252]
---
0x244 JUMPDEST
0x245 PUSH1 0x4
0x247 DUP1
0x248 SLOAD
0x249 DUP3
0x24a SWAP1
0x24b DUP2
0x24c LT
0x24d PUSH2 0x252
0x250 JUMPI
---
0x244: JUMPDEST 
0x245: V189 = 0x4
0x248: V190 = S[0x4]
0x24c: V191 = LT V60 V190
0x24d: V192 = 0x252
0x250: JUMPI 0x252 V191
---
Entry stack: [V13, 0xc8, V60]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V13, 0xc8, V60, 0x4, V60]

================================

Block 0x251
[0x251:0x251]
---
Predecessors: [0x244]
Successors: []
---
0x251 INVALID
---
0x251: INVALID 
---
Entry stack: [V13, 0xc8, V60, 0x4, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc8, V60, 0x4, V60]

================================

Block 0x252
[0x252:0x26b]
---
Predecessors: [0x244]
Successors: [0xc8]
---
0x252 JUMPDEST
0x253 PUSH1 0x0
0x255 SWAP2
0x256 DUP3
0x257 MSTORE
0x258 PUSH1 0x20
0x25a SWAP1
0x25b SWAP2
0x25c SHA3
0x25d ADD
0x25e SLOAD
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 AND
0x268 SWAP1
0x269 POP
0x26a DUP2
0x26b JUMP
---
0x252: JUMPDEST 
0x253: V193 = 0x0
0x257: M[0x0] = 0x4
0x258: V194 = 0x20
0x25c: V195 = SHA3 0x0 0x20
0x25d: V196 = ADD V195 V60
0x25e: V197 = S[V196]
0x25f: V198 = 0x1
0x261: V199 = 0xa0
0x263: V200 = 0x2
0x265: V201 = EXP 0x2 0xa0
0x266: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x26b: JUMP 0xc8
---
Entry stack: [V13, 0xc8, V60, 0x4, V60]
Stack pops: 4
Stack additions: [S3, V203]
Exit stack: [V13, 0xc8, V203]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0xf0]
Successors: [0x270]
---
0x26c JUMPDEST
0x26d PUSH1 0x0
0x26f DUP1
---
0x26c: JUMPDEST 
0x26d: V204 = 0x0
---
Entry stack: [V13, 0xf9]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0xf9, 0x0, 0x0]

================================

Block 0x270
[0x270:0x27d]
---
Predecessors: [0x26c, 0x2b3]
Successors: [0x27e, 0x2bb]
---
0x270 JUMPDEST
0x271 PUSH1 0x4
0x273 SLOAD
0x274 PUSH1 0xff
0x276 DUP3
0x277 AND
0x278 LT
0x279 ISZERO
0x27a PUSH2 0x2bb
0x27d JUMPI
---
0x270: JUMPDEST 
0x271: V205 = 0x4
0x273: V206 = S[0x4]
0x274: V207 = 0xff
0x277: V208 = AND S0 0xff
0x278: V209 = LT V208 V206
0x279: V210 = ISZERO V209
0x27a: V211 = 0x2bb
0x27d: JUMPI 0x2bb V210
---
Entry stack: [V13, 0xf9, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xf9, S1, S0]

================================

Block 0x27e
[0x27e:0x28f]
---
Predecessors: [0x270]
Successors: [0x290, 0x291]
---
0x27e PUSH1 0x4
0x280 DUP1
0x281 SLOAD
0x282 CALLER
0x283 SWAP2
0x284 SWAP1
0x285 PUSH1 0xff
0x287 DUP5
0x288 AND
0x289 SWAP1
0x28a DUP2
0x28b LT
0x28c PUSH2 0x291
0x28f JUMPI
---
0x27e: V212 = 0x4
0x281: V213 = S[0x4]
0x282: V214 = CALLER
0x285: V215 = 0xff
0x288: V216 = AND S0 0xff
0x28b: V217 = LT V216 V213
0x28c: V218 = 0x291
0x28f: JUMPI 0x291 V217
---
Entry stack: [V13, 0xf9, S1, S0]
Stack pops: 1
Stack additions: [S0, V214, 0x4, V216]
Exit stack: [V13, 0xf9, S1, S0, V214, 0x4, V216]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: [0x27e]
Successors: []
---
0x290 INVALID
---
0x290: INVALID 
---
Entry stack: [V13, 0xf9, S4, S3, V214, 0x4, V216]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S4, S3, V214, 0x4, V216]

================================

Block 0x291
[0x291:0x2ac]
---
Predecessors: [0x27e]
Successors: [0x2ad, 0x2b3]
---
0x291 JUMPDEST
0x292 PUSH1 0x0
0x294 SWAP2
0x295 DUP3
0x296 MSTORE
0x297 PUSH1 0x20
0x299 SWAP1
0x29a SWAP2
0x29b SHA3
0x29c ADD
0x29d SLOAD
0x29e PUSH1 0x1
0x2a0 PUSH1 0xa0
0x2a2 PUSH1 0x2
0x2a4 EXP
0x2a5 SUB
0x2a6 AND
0x2a7 EQ
0x2a8 ISZERO
0x2a9 PUSH2 0x2b3
0x2ac JUMPI
---
0x291: JUMPDEST 
0x292: V219 = 0x0
0x296: M[0x0] = 0x4
0x297: V220 = 0x20
0x29b: V221 = SHA3 0x0 0x20
0x29c: V222 = ADD V221 V216
0x29d: V223 = S[V222]
0x29e: V224 = 0x1
0x2a0: V225 = 0xa0
0x2a2: V226 = 0x2
0x2a4: V227 = EXP 0x2 0xa0
0x2a5: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a6: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x2a7: V230 = EQ V229 V214
0x2a8: V231 = ISZERO V230
0x2a9: V232 = 0x2b3
0x2ac: JUMPI 0x2b3 V231
---
Entry stack: [V13, 0xf9, S4, S3, V214, 0x4, V216]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xf9, S4, S3]

================================

Block 0x2ad
[0x2ad:0x2b2]
---
Predecessors: [0x291]
Successors: [0x2b3]
---
0x2ad DUP2
0x2ae PUSH1 0x1
0x2b0 OR
0x2b1 SWAP2
0x2b2 POP
---
0x2ae: V233 = 0x1
0x2b0: V234 = OR 0x1 S1
---
Entry stack: [V13, 0xf9, S1, S0]
Stack pops: 2
Stack additions: [V234, S0]
Exit stack: [V13, 0xf9, V234, S0]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x291, 0x2ad]
Successors: [0x270]
---
0x2b3 JUMPDEST
0x2b4 PUSH1 0x1
0x2b6 ADD
0x2b7 PUSH2 0x270
0x2ba JUMP
---
0x2b3: JUMPDEST 
0x2b4: V235 = 0x1
0x2b6: V236 = ADD 0x1 S0
0x2b7: V237 = 0x270
0x2ba: JUMP 0x270
---
Entry stack: [V13, 0xf9, S1, S0]
Stack pops: 1
Stack additions: [V236]
Exit stack: [V13, 0xf9, S1, V236]

================================

Block 0x2bb
[0x2bb:0x2c6]
---
Predecessors: [0x270]
Successors: [0x2c7, 0x2cb]
---
0x2bb JUMPDEST
0x2bc PUSH1 0x1
0x2be PUSH1 0xff
0x2c0 DUP4
0x2c1 AND
0x2c2 EQ
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V238 = 0x1
0x2be: V239 = 0xff
0x2c1: V240 = AND S1 0xff
0x2c2: V241 = EQ V240 0x1
0x2c3: V242 = 0x2cb
0x2c6: JUMPI 0x2cb V241
---
Entry stack: [V13, 0xf9, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xf9, S1, S0]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V243 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S1, S0]

================================

Block 0x2cb
[0x2cb:0x2d2]
---
Predecessors: [0x2bb]
Successors: [0x795]
---
0x2cb JUMPDEST
0x2cc PUSH2 0x2d3
0x2cf PUSH2 0x795
0x2d2 JUMP
---
0x2cb: JUMPDEST 
0x2cc: V244 = 0x2d3
0x2cf: V245 = 0x795
0x2d2: JUMP 0x795
---
Entry stack: [V13, 0xf9, S1, S0]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V13, 0xf9, S1, S0, 0x2d3]

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0x94e]
Successors: [0x2da, 0x2de]
---
0x2d3 JUMPDEST
0x2d4 ISZERO
0x2d5 ISZERO
0x2d6 PUSH2 0x2de
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V246 = ISZERO 0x1
0x2d5: V247 = ISZERO 0x0
0x2d6: V248 = 0x2de
0x2d9: JUMPI 0x2de 0x1
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S1]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
---
0x2da: V249 = 0x0
0x2dd: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S0]

================================

Block 0x2de
[0x2de:0x2eb]
---
Predecessors: [0x2d3]
Successors: []
---
0x2de JUMPDEST
0x2df PUSH1 0x1
0x2e1 SLOAD
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea AND
0x2eb SELFDESTRUCT
---
0x2de: JUMPDEST 
0x2df: V250 = 0x1
0x2e1: V251 = S[0x1]
0x2e2: V252 = 0x1
0x2e4: V253 = 0xa0
0x2e6: V254 = 0x2
0x2e8: V255 = EXP 0x2 0xa0
0x2e9: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x2eb: SELFDESTRUCT V257
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S0]

================================

Block 0x2ec
[0x2ec:0x2fa]
---
Predecessors: [0x107]
Successors: [0xc8]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x1
0x2ef SLOAD
0x2f0 PUSH1 0x1
0x2f2 PUSH1 0xa0
0x2f4 PUSH1 0x2
0x2f6 EXP
0x2f7 SUB
0x2f8 AND
0x2f9 DUP2
0x2fa JUMP
---
0x2ec: JUMPDEST 
0x2ed: V258 = 0x1
0x2ef: V259 = S[0x1]
0x2f0: V260 = 0x1
0x2f2: V261 = 0xa0
0x2f4: V262 = 0x2
0x2f6: V263 = EXP 0x2 0xa0
0x2f7: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f8: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2fa: JUMP 0xc8
---
Entry stack: [V13, 0xc8]
Stack pops: 1
Stack additions: [S0, V265]
Exit stack: [V13, 0xc8, V265]

================================

Block 0x2fb
[0x2fb:0x30c]
---
Predecessors: [0x11c, 0x432]
Successors: [0x30d, 0x30e]
---
0x2fb JUMPDEST
0x2fc PUSH1 0x0
0x2fe PUSH1 0x6
0x300 SLOAD
0x301 PUSH1 0x2
0x303 SLOAD
0x304 DUP4
0x305 MUL
0x306 DUP2
0x307 ISZERO
0x308 ISZERO
0x309 PUSH2 0x30e
0x30c JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V266 = 0x0
0x2fe: V267 = 0x6
0x300: V268 = S[0x6]
0x301: V269 = 0x2
0x303: V270 = S[0x2]
0x305: V271 = MUL S0 V270
0x307: V272 = ISZERO V268
0x308: V273 = ISZERO V272
0x309: V274 = 0x30e
0x30c: JUMPI 0x30e V273
---
Entry stack: [V13, 0xf9, S9, S8, S7, S6, {0x0, 0x23b872dd}, S4, S3, S2, {0x128, 0x449, 0x6bf}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V268, V271]
Exit stack: [V13, 0xf9, S9, S8, S7, S6, {0x0, 0x23b872dd}, S4, S3, S2, {0x128, 0x449, 0x6bf}, S0, 0x0, V268, V271]

================================

Block 0x30d
[0x30d:0x30d]
---
Predecessors: [0x2fb]
Successors: []
---
0x30d INVALID
---
0x30d: INVALID 
---
Entry stack: [V13, 0xf9, S12, S11, S10, S9, {0x0, 0x23b872dd}, S7, S6, S5, {0x128, 0x449, 0x6bf}, S3, 0x0, V268, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S12, S11, S10, S9, {0x0, 0x23b872dd}, S7, S6, S5, {0x128, 0x449, 0x6bf}, S3, 0x0, V268, V271]

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0x2fb]
Successors: [0x128, 0x449, 0x6bf]
---
0x30e JUMPDEST
0x30f DIV
0x310 SWAP3
0x311 SWAP2
0x312 POP
0x313 POP
0x314 JUMP
---
0x30e: JUMPDEST 
0x30f: V275 = DIV V271 V268
0x314: JUMP {0x128, 0x449, 0x6bf}
---
Entry stack: [V13, 0xf9, S12, S11, S10, S9, {0x0, 0x23b872dd}, S7, S6, S5, {0x128, 0x449, 0x6bf}, S3, 0x0, V268, V271]
Stack pops: 5
Stack additions: [V275]
Exit stack: [V13, 0xf9, S12, S11, S10, S9, {0x0, 0x23b872dd}, S7, S6, S5, V275]

================================

Block 0x315
[0x315:0x321]
---
Predecessors: [0x146]
Successors: [0x322, 0x323]
---
0x315 JUMPDEST
0x316 PUSH1 0x3
0x318 DUP1
0x319 SLOAD
0x31a DUP3
0x31b SWAP1
0x31c DUP2
0x31d LT
0x31e PUSH2 0x323
0x321 JUMPI
---
0x315: JUMPDEST 
0x316: V276 = 0x3
0x319: V277 = S[0x3]
0x31d: V278 = LT V106 V277
0x31e: V279 = 0x323
0x321: JUMPI 0x323 V278
---
Entry stack: [V13, 0x152, V106]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V13, 0x152, V106, 0x3, V106]

================================

Block 0x322
[0x322:0x322]
---
Predecessors: [0x315]
Successors: []
---
0x322 INVALID
---
0x322: INVALID 
---
Entry stack: [V13, 0x152, V106, 0x3, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x152, V106, 0x3, V106]

================================

Block 0x323
[0x323:0x352]
---
Predecessors: [0x315]
Successors: [0x152]
---
0x323 JUMPDEST
0x324 PUSH1 0x0
0x326 SWAP2
0x327 DUP3
0x328 MSTORE
0x329 PUSH1 0x20
0x32b SWAP1
0x32c SWAP2
0x32d SHA3
0x32e PUSH1 0x3
0x330 SWAP1
0x331 SWAP2
0x332 MUL
0x333 ADD
0x334 DUP1
0x335 SLOAD
0x336 PUSH1 0x1
0x338 DUP3
0x339 ADD
0x33a SLOAD
0x33b PUSH1 0x2
0x33d SWAP1
0x33e SWAP3
0x33f ADD
0x340 SLOAD
0x341 PUSH1 0x1
0x343 PUSH1 0xa0
0x345 PUSH1 0x2
0x347 EXP
0x348 SUB
0x349 SWAP1
0x34a SWAP2
0x34b AND
0x34c SWAP3
0x34d POP
0x34e PUSH1 0xff
0x350 AND
0x351 DUP4
0x352 JUMP
---
0x323: JUMPDEST 
0x324: V280 = 0x0
0x328: M[0x0] = 0x3
0x329: V281 = 0x20
0x32d: V282 = SHA3 0x0 0x20
0x32e: V283 = 0x3
0x332: V284 = MUL V106 0x3
0x333: V285 = ADD V284 V282
0x335: V286 = S[V285]
0x336: V287 = 0x1
0x339: V288 = ADD V285 0x1
0x33a: V289 = S[V288]
0x33b: V290 = 0x2
0x33f: V291 = ADD V285 0x2
0x340: V292 = S[V291]
0x341: V293 = 0x1
0x343: V294 = 0xa0
0x345: V295 = 0x2
0x347: V296 = EXP 0x2 0xa0
0x348: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34b: V298 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V299 = 0xff
0x350: V300 = AND 0xff V292
0x352: JUMP 0x152
---
Entry stack: [V13, 0x152, V106, 0x3, V106]
Stack pops: 4
Stack additions: [S3, V298, V289, V300]
Exit stack: [V13, 0x152, V298, V289, V300]

================================

Block 0x353
[0x353:0x356]
---
Predecessors: [0x188]
Successors: [0x357]
---
0x353 JUMPDEST
0x354 PUSH1 0x0
0x356 DUP1
---
0x353: JUMPDEST 
0x354: V301 = 0x0
---
Entry stack: [V13, 0xf9, V137]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0xf9, V137, 0x0, 0x0]

================================

Block 0x357
[0x357:0x364]
---
Predecessors: [0x353, 0x39a]
Successors: [0x365, 0x3a2]
---
0x357 JUMPDEST
0x358 PUSH1 0x4
0x35a SLOAD
0x35b PUSH1 0xff
0x35d DUP3
0x35e AND
0x35f LT
0x360 ISZERO
0x361 PUSH2 0x3a2
0x364 JUMPI
---
0x357: JUMPDEST 
0x358: V302 = 0x4
0x35a: V303 = S[0x4]
0x35b: V304 = 0xff
0x35e: V305 = AND S0 0xff
0x35f: V306 = LT V305 V303
0x360: V307 = ISZERO V306
0x361: V308 = 0x3a2
0x364: JUMPI 0x3a2 V307
---
Entry stack: [V13, 0xf9, V137, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xf9, V137, S1, S0]

================================

Block 0x365
[0x365:0x376]
---
Predecessors: [0x357]
Successors: [0x377, 0x378]
---
0x365 PUSH1 0x4
0x367 DUP1
0x368 SLOAD
0x369 CALLER
0x36a SWAP2
0x36b SWAP1
0x36c PUSH1 0xff
0x36e DUP5
0x36f AND
0x370 SWAP1
0x371 DUP2
0x372 LT
0x373 PUSH2 0x378
0x376 JUMPI
---
0x365: V309 = 0x4
0x368: V310 = S[0x4]
0x369: V311 = CALLER
0x36c: V312 = 0xff
0x36f: V313 = AND S0 0xff
0x372: V314 = LT V313 V310
0x373: V315 = 0x378
0x376: JUMPI 0x378 V314
---
Entry stack: [V13, 0xf9, V137, S1, S0]
Stack pops: 1
Stack additions: [S0, V311, 0x4, V313]
Exit stack: [V13, 0xf9, V137, S1, S0, V311, 0x4, V313]

================================

Block 0x377
[0x377:0x377]
---
Predecessors: [0x365]
Successors: []
---
0x377 INVALID
---
0x377: INVALID 
---
Entry stack: [V13, 0xf9, V137, S4, S3, V311, 0x4, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, V137, S4, S3, V311, 0x4, V313]

================================

Block 0x378
[0x378:0x393]
---
Predecessors: [0x365]
Successors: [0x394, 0x39a]
---
0x378 JUMPDEST
0x379 PUSH1 0x0
0x37b SWAP2
0x37c DUP3
0x37d MSTORE
0x37e PUSH1 0x20
0x380 SWAP1
0x381 SWAP2
0x382 SHA3
0x383 ADD
0x384 SLOAD
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d AND
0x38e EQ
0x38f ISZERO
0x390 PUSH2 0x39a
0x393 JUMPI
---
0x378: JUMPDEST 
0x379: V316 = 0x0
0x37d: M[0x0] = 0x4
0x37e: V317 = 0x20
0x382: V318 = SHA3 0x0 0x20
0x383: V319 = ADD V318 V313
0x384: V320 = S[V319]
0x385: V321 = 0x1
0x387: V322 = 0xa0
0x389: V323 = 0x2
0x38b: V324 = EXP 0x2 0xa0
0x38c: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38d: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x38e: V327 = EQ V326 V311
0x38f: V328 = ISZERO V327
0x390: V329 = 0x39a
0x393: JUMPI 0x39a V328
---
Entry stack: [V13, 0xf9, V137, S4, S3, V311, 0x4, V313]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xf9, V137, S4, S3]

================================

Block 0x394
[0x394:0x399]
---
Predecessors: [0x378]
Successors: [0x39a]
---
0x394 DUP2
0x395 PUSH1 0x1
0x397 OR
0x398 SWAP2
0x399 POP
---
0x395: V330 = 0x1
0x397: V331 = OR 0x1 S1
---
Entry stack: [V13, 0xf9, V137, S1, S0]
Stack pops: 2
Stack additions: [V331, S0]
Exit stack: [V13, 0xf9, V137, V331, S0]

================================

Block 0x39a
[0x39a:0x3a1]
---
Predecessors: [0x378, 0x394]
Successors: [0x357]
---
0x39a JUMPDEST
0x39b PUSH1 0x1
0x39d ADD
0x39e PUSH2 0x357
0x3a1 JUMP
---
0x39a: JUMPDEST 
0x39b: V332 = 0x1
0x39d: V333 = ADD 0x1 S0
0x39e: V334 = 0x357
0x3a1: JUMP 0x357
---
Entry stack: [V13, 0xf9, V137, S1, S0]
Stack pops: 1
Stack additions: [V333]
Exit stack: [V13, 0xf9, V137, S1, V333]

================================

Block 0x3a2
[0x3a2:0x3ad]
---
Predecessors: [0x357]
Successors: [0x3ae, 0x3b2]
---
0x3a2 JUMPDEST
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0xff
0x3a7 DUP4
0x3a8 AND
0x3a9 EQ
0x3aa PUSH2 0x3b2
0x3ad JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V335 = 0x1
0x3a5: V336 = 0xff
0x3a8: V337 = AND S1 0xff
0x3a9: V338 = EQ V337 0x1
0x3aa: V339 = 0x3b2
0x3ad: JUMPI 0x3b2 V338
---
Entry stack: [V13, 0xf9, V137, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xf9, V137, S1, S0]

================================

Block 0x3ae
[0x3ae:0x3b1]
---
Predecessors: [0x3a2]
Successors: []
---
0x3ae PUSH1 0x0
0x3b0 DUP1
0x3b1 REVERT
---
0x3ae: V340 = 0x0
0x3b1: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, V137, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, V137, S1, S0]

================================

Block 0x3b2
[0x3b2:0x3e2]
---
Predecessors: [0x3a2]
Successors: [0xf9]
---
0x3b2 JUMPDEST
0x3b3 POP
0x3b4 POP
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 SLOAD
0x3b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ce NOT
0x3cf AND
0x3d0 PUSH1 0x1
0x3d2 PUSH1 0xa0
0x3d4 PUSH1 0x2
0x3d6 EXP
0x3d7 SUB
0x3d8 SWAP3
0x3d9 SWAP1
0x3da SWAP3
0x3db AND
0x3dc SWAP2
0x3dd SWAP1
0x3de SWAP2
0x3df OR
0x3e0 SWAP1
0x3e1 SSTORE
0x3e2 JUMP
---
0x3b2: JUMPDEST 
0x3b5: V341 = 0x0
0x3b8: V342 = S[0x0]
0x3b9: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ce: V344 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3cf: V345 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V342
0x3d0: V346 = 0x1
0x3d2: V347 = 0xa0
0x3d4: V348 = 0x2
0x3d6: V349 = EXP 0x2 0xa0
0x3d7: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3db: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x3df: V352 = OR V351 V345
0x3e1: S[0x0] = V352
0x3e2: JUMP 0xf9
---
Entry stack: [V13, 0xf9, V137, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x3e3
[0x3e3:0x3e7]
---
Predecessors: [0x1a9, 0x608]
Successors: [0x3e8]
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x0
0x3e6 DUP1
0x3e7 DUP1
---
0x3e3: JUMPDEST 
0x3e4: V353 = 0x0
---
Entry stack: [V13, 0xf9, 0x0, S2, S1, {0x1b2, 0x610}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0xf9, 0x0, S2, S1, {0x1b2, 0x610}, 0x0, 0x0, 0x0]

================================

Block 0x3e8
[0x3e8:0x3f2]
---
Predecessors: [0x3e3, 0x44f]
Successors: [0x3f3, 0x457]
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0x3
0x3eb SLOAD
0x3ec DUP2
0x3ed LT
0x3ee ISZERO
0x3ef PUSH2 0x457
0x3f2 JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V354 = 0x3
0x3eb: V355 = S[0x3]
0x3ed: V356 = LT S0 V355
0x3ee: V357 = ISZERO V356
0x3ef: V358 = 0x457
0x3f2: JUMPI 0x457 V357
---
Entry stack: [V13, 0xf9, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xf9, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]

================================

Block 0x3f3
[0x3f3:0x3fe]
---
Predecessors: [0x3e8]
Successors: [0x3ff, 0x400]
---
0x3f3 PUSH1 0x3
0x3f5 DUP1
0x3f6 SLOAD
0x3f7 DUP3
0x3f8 SWAP1
0x3f9 DUP2
0x3fa LT
0x3fb PUSH2 0x400
0x3fe JUMPI
---
0x3f3: V359 = 0x3
0x3f6: V360 = S[0x3]
0x3fa: V361 = LT S0 V360
0x3fb: V362 = 0x400
0x3fe: JUMPI 0x400 V361
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S4, {0x1b2, 0x610}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S4, {0x1b2, 0x610}, 0x0, S1, S0, 0x3, S0]

================================

Block 0x3ff
[0x3ff:0x3ff]
---
Predecessors: [0x3f3]
Successors: []
---
0x3ff INVALID
---
0x3ff: INVALID 
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S6, {0x1b2, 0x610}, 0x0, S3, S2, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S6, {0x1b2, 0x610}, 0x0, S3, S2, 0x3, S0]

================================

Block 0x400
[0x400:0x41d]
---
Predecessors: [0x3f3]
Successors: [0x41e, 0x44f]
---
0x400 JUMPDEST
0x401 PUSH1 0x0
0x403 SWAP2
0x404 DUP3
0x405 MSTORE
0x406 PUSH1 0x20
0x408 SWAP1
0x409 SWAP2
0x40a SHA3
0x40b PUSH1 0x2
0x40d PUSH1 0x3
0x40f SWAP1
0x410 SWAP3
0x411 MUL
0x412 ADD
0x413 ADD
0x414 SLOAD
0x415 PUSH1 0xff
0x417 AND
0x418 ISZERO
0x419 ISZERO
0x41a PUSH2 0x44f
0x41d JUMPI
---
0x400: JUMPDEST 
0x401: V363 = 0x0
0x405: M[0x0] = 0x3
0x406: V364 = 0x20
0x40a: V365 = SHA3 0x0 0x20
0x40b: V366 = 0x2
0x40d: V367 = 0x3
0x411: V368 = MUL S0 0x3
0x412: V369 = ADD V368 V365
0x413: V370 = ADD V369 0x2
0x414: V371 = S[V370]
0x415: V372 = 0xff
0x417: V373 = AND 0xff V371
0x418: V374 = ISZERO V373
0x419: V375 = ISZERO V374
0x41a: V376 = 0x44f
0x41d: JUMPI 0x44f V375
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S6, {0x1b2, 0x610}, 0x0, S3, S2, 0x3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S6, {0x1b2, 0x610}, 0x0, S3, S2]

================================

Block 0x41e
[0x41e:0x430]
---
Predecessors: [0x400]
Successors: [0x431, 0x432]
---
0x41e PUSH1 0x5
0x420 SLOAD
0x421 PUSH2 0x449
0x424 PUSH1 0x3
0x426 DUP4
0x427 DUP2
0x428 SLOAD
0x429 DUP2
0x42a LT
0x42b ISZERO
0x42c ISZERO
0x42d PUSH2 0x432
0x430 JUMPI
---
0x41e: V377 = 0x5
0x420: V378 = S[0x5]
0x421: V379 = 0x449
0x424: V380 = 0x3
0x428: V381 = S[0x3]
0x42a: V382 = LT S0 V381
0x42b: V383 = ISZERO V382
0x42c: V384 = ISZERO V383
0x42d: V385 = 0x432
0x430: JUMPI 0x432 V384
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S4, {0x1b2, 0x610}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V378, 0x449, 0x3, S0]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S4, {0x1b2, 0x610}, 0x0, S1, S0, V378, 0x449, 0x3, S0]

================================

Block 0x431
[0x431:0x431]
---
Predecessors: [0x41e]
Successors: []
---
0x431 INVALID
---
0x431: INVALID 
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S8, {0x1b2, 0x610}, 0x0, S5, S4, V378, 0x449, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S8, {0x1b2, 0x610}, 0x0, S5, S4, V378, 0x449, 0x3, S0]

================================

Block 0x432
[0x432:0x448]
---
Predecessors: [0x41e, 0x68c]
Successors: [0x2fb]
---
0x432 JUMPDEST
0x433 SWAP1
0x434 PUSH1 0x0
0x436 MSTORE
0x437 PUSH1 0x20
0x439 PUSH1 0x0
0x43b SHA3
0x43c SWAP1
0x43d PUSH1 0x3
0x43f MUL
0x440 ADD
0x441 PUSH1 0x1
0x443 ADD
0x444 SLOAD
0x445 PUSH2 0x2fb
0x448 JUMP
---
0x432: JUMPDEST 
0x434: V386 = 0x0
0x436: M[0x0] = 0x3
0x437: V387 = 0x20
0x439: V388 = 0x0
0x43b: V389 = SHA3 0x0 0x20
0x43d: V390 = 0x3
0x43f: V391 = MUL 0x3 S0
0x440: V392 = ADD V391 V389
0x441: V393 = 0x1
0x443: V394 = ADD 0x1 V392
0x444: V395 = S[V394]
0x445: V396 = 0x2fb
0x448: JUMP 0x2fb
---
Entry stack: [V13, 0xf9, S10, S9, S8, S7, {0x0, 0x23b872dd}, S5, S4, S3, {0x449, 0x6bf}, 0x3, S0]
Stack pops: 2
Stack additions: [V395]
Exit stack: [V13, 0xf9, S10, S9, S8, S7, {0x0, 0x23b872dd}, S5, S4, S3, {0x449, 0x6bf}, V395]

================================

Block 0x449
[0x449:0x44e]
---
Predecessors: [0x30e]
Successors: [0x44f]
---
0x449 JUMPDEST
0x44a MUL
0x44b DUP3
0x44c ADD
0x44d SWAP2
0x44e POP
---
0x449: JUMPDEST 
0x44a: V397 = MUL V275 S1
0x44c: V398 = ADD S3 V397
---
Entry stack: [V13, 0xf9, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1, V275]
Stack pops: 4
Stack additions: [V398, S2]
Exit stack: [V13, 0xf9, S8, S7, S6, S5, {0x0, 0x23b872dd}, V398, S2]

================================

Block 0x44f
[0x44f:0x456]
---
Predecessors: [0x400, 0x449]
Successors: [0x3e8]
---
0x44f JUMPDEST
0x450 PUSH1 0x1
0x452 ADD
0x453 PUSH2 0x3e8
0x456 JUMP
---
0x44f: JUMPDEST 
0x450: V399 = 0x1
0x452: V400 = ADD 0x1 S0
0x453: V401 = 0x3e8
0x456: JUMP 0x3e8
---
Entry stack: [V13, 0xf9, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, S0]
Stack pops: 1
Stack additions: [V400]
Exit stack: [V13, 0xf9, S6, S5, S4, S3, {0x0, 0x23b872dd}, S1, V400]

================================

Block 0x457
[0x457:0x4c2]
---
Predecessors: [0x3e8]
Successors: [0x4c3, 0x4c7]
---
0x457 JUMPDEST
0x458 PUSH1 0x0
0x45a DUP1
0x45b SLOAD
0x45c PUSH1 0x1
0x45e SLOAD
0x45f PUSH1 0x40
0x461 DUP1
0x462 MLOAD
0x463 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x484 DUP2
0x485 MSTORE
0x486 PUSH1 0x1
0x488 PUSH1 0xa0
0x48a PUSH1 0x2
0x48c EXP
0x48d SUB
0x48e SWAP3
0x48f DUP4
0x490 AND
0x491 PUSH1 0x4
0x493 DUP3
0x494 ADD
0x495 MSTORE
0x496 SWAP1
0x497 MLOAD
0x498 DUP7
0x499 SWAP5
0x49a SWAP3
0x49b SWAP1
0x49c SWAP4
0x49d AND
0x49e SWAP3
0x49f PUSH4 0x70a08231
0x4a4 SWAP3
0x4a5 PUSH1 0x24
0x4a7 DUP1
0x4a8 DUP5
0x4a9 ADD
0x4aa SWAP4
0x4ab PUSH1 0x20
0x4ad SWAP4
0x4ae SWAP3
0x4af SWAP1
0x4b0 DUP4
0x4b1 SWAP1
0x4b2 SUB
0x4b3 SWAP1
0x4b4 SWAP2
0x4b5 ADD
0x4b6 SWAP1
0x4b7 DUP3
0x4b8 SWAP1
0x4b9 DUP8
0x4ba DUP1
0x4bb EXTCODESIZE
0x4bc ISZERO
0x4bd DUP1
0x4be ISZERO
0x4bf PUSH2 0x4c7
0x4c2 JUMPI
---
0x457: JUMPDEST 
0x458: V402 = 0x0
0x45b: V403 = S[0x0]
0x45c: V404 = 0x1
0x45e: V405 = S[0x1]
0x45f: V406 = 0x40
0x462: V407 = M[0x40]
0x463: V408 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x485: M[V407] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x486: V409 = 0x1
0x488: V410 = 0xa0
0x48a: V411 = 0x2
0x48c: V412 = EXP 0x2 0xa0
0x48d: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x490: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x491: V415 = 0x4
0x494: V416 = ADD V407 0x4
0x495: M[V416] = V414
0x497: V417 = M[0x40]
0x49d: V418 = AND V403 0xffffffffffffffffffffffffffffffffffffffff
0x49f: V419 = 0x70a08231
0x4a5: V420 = 0x24
0x4a9: V421 = ADD V407 0x24
0x4ab: V422 = 0x20
0x4b2: V423 = SUB V407 V417
0x4b5: V424 = ADD 0x24 V423
0x4bb: V425 = EXTCODESIZE V418
0x4bc: V426 = ISZERO V425
0x4be: V427 = ISZERO V426
0x4bf: V428 = 0x4c7
0x4c2: JUMPI 0x4c7 V427
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S4, {0x1b2, 0x610}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, V418, 0x70a08231, V421, 0x20, V417, V424, V417, 0x0, V418, V426]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S4, {0x1b2, 0x610}, 0x0, S1, S0, S1, V418, 0x70a08231, V421, 0x20, V417, V424, V417, 0x0, V418, V426]

================================

Block 0x4c3
[0x4c3:0x4c6]
---
Predecessors: [0x457]
Successors: []
---
0x4c3 PUSH1 0x0
0x4c5 DUP1
0x4c6 REVERT
---
0x4c3: V429 = 0x0
0x4c6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S15, {0x1b2, 0x610}, 0x0, S12, S11, S10, V418, 0x70a08231, V421, 0x20, V417, V424, V417, 0x0, V418, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S15, {0x1b2, 0x610}, 0x0, S12, S11, S10, V418, 0x70a08231, V421, 0x20, V417, V424, V417, 0x0, V418, V426]

================================

Block 0x4c7
[0x4c7:0x4d1]
---
Predecessors: [0x457]
Successors: [0x4d2, 0x4db]
---
0x4c7 JUMPDEST
0x4c8 POP
0x4c9 GAS
0x4ca CALL
0x4cb ISZERO
0x4cc DUP1
0x4cd ISZERO
0x4ce PUSH2 0x4db
0x4d1 JUMPI
---
0x4c7: JUMPDEST 
0x4c9: V430 = GAS
0x4ca: V431 = CALL V430 V418 0x0 V417 V424 V417 0x20
0x4cb: V432 = ISZERO V431
0x4cd: V433 = ISZERO V432
0x4ce: V434 = 0x4db
0x4d1: JUMPI 0x4db V433
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S15, {0x1b2, 0x610}, 0x0, S12, S11, S10, V418, 0x70a08231, V421, 0x20, V417, V424, V417, 0x0, V418, V426]
Stack pops: 7
Stack additions: [V432]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S15, {0x1b2, 0x610}, 0x0, S12, S11, S10, V418, 0x70a08231, V421, V432]

================================

Block 0x4d2
[0x4d2:0x4da]
---
Predecessors: [0x4c7]
Successors: []
---
0x4d2 RETURNDATASIZE
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 RETURNDATACOPY
0x4d7 RETURNDATASIZE
0x4d8 PUSH1 0x0
0x4da REVERT
---
0x4d2: V435 = RETURNDATASIZE
0x4d3: V436 = 0x0
0x4d6: RETURNDATACOPY 0x0 0x0 V435
0x4d7: V437 = RETURNDATASIZE
0x4d8: V438 = 0x0
0x4da: REVERT 0x0 V437
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S9, {0x1b2, 0x610}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V432]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S9, {0x1b2, 0x610}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V432]

================================

Block 0x4db
[0x4db:0x4ec]
---
Predecessors: [0x4c7]
Successors: [0x4ed, 0x4f1]
---
0x4db JUMPDEST
0x4dc POP
0x4dd POP
0x4de POP
0x4df POP
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 RETURNDATASIZE
0x4e4 PUSH1 0x20
0x4e6 DUP2
0x4e7 LT
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4db: JUMPDEST 
0x4e0: V439 = 0x40
0x4e2: V440 = M[0x40]
0x4e3: V441 = RETURNDATASIZE
0x4e4: V442 = 0x20
0x4e7: V443 = LT V441 0x20
0x4e8: V444 = ISZERO V443
0x4e9: V445 = 0x4f1
0x4ec: JUMPI 0x4f1 V444
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S9, {0x1b2, 0x610}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V432]
Stack pops: 4
Stack additions: [V440, V441]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S9, {0x1b2, 0x610}, 0x0, S6, S5, S4, V440, V441]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4db]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V446 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S7, {0x1b2, 0x610}, 0x0, S4, S3, S2, V440, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S7, {0x1b2, 0x610}, 0x0, S4, S3, S2, V440, V441]

================================

Block 0x4f1
[0x4f1:0x4fb]
---
Predecessors: [0x4db]
Successors: [0x4fc, 0x5a1]
---
0x4f1 JUMPDEST
0x4f2 POP
0x4f3 MLOAD
0x4f4 LT
0x4f5 DUP1
0x4f6 ISZERO
0x4f7 SWAP1
0x4f8 PUSH2 0x5a1
0x4fb JUMPI
---
0x4f1: JUMPDEST 
0x4f3: V447 = M[V440]
0x4f4: V448 = LT V447 S2
0x4f6: V449 = ISZERO V448
0x4f8: V450 = 0x5a1
0x4fb: JUMPI 0x5a1 V448
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S7, {0x1b2, 0x610}, 0x0, S4, S3, S2, V440, V441]
Stack pops: 3
Stack additions: [V449]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S7, {0x1b2, 0x610}, 0x0, S4, S3, V449]

================================

Block 0x4fc
[0x4fc:0x56d]
---
Predecessors: [0x4f1]
Successors: [0x56e, 0x572]
---
0x4fc POP
0x4fd PUSH1 0x0
0x4ff DUP1
0x500 SLOAD
0x501 PUSH1 0x1
0x503 SLOAD
0x504 PUSH1 0x40
0x506 DUP1
0x507 MLOAD
0x508 PUSH32 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x529 DUP2
0x52a MSTORE
0x52b PUSH1 0x1
0x52d PUSH1 0xa0
0x52f PUSH1 0x2
0x531 EXP
0x532 SUB
0x533 SWAP3
0x534 DUP4
0x535 AND
0x536 PUSH1 0x4
0x538 DUP3
0x539 ADD
0x53a MSTORE
0x53b ADDRESS
0x53c PUSH1 0x24
0x53e DUP3
0x53f ADD
0x540 MSTORE
0x541 SWAP1
0x542 MLOAD
0x543 DUP7
0x544 SWAP5
0x545 SWAP3
0x546 SWAP1
0x547 SWAP4
0x548 AND
0x549 SWAP3
0x54a PUSH4 0xdd62ed3e
0x54f SWAP3
0x550 PUSH1 0x44
0x552 DUP1
0x553 DUP5
0x554 ADD
0x555 SWAP4
0x556 PUSH1 0x20
0x558 SWAP4
0x559 SWAP3
0x55a SWAP1
0x55b DUP4
0x55c SWAP1
0x55d SUB
0x55e SWAP1
0x55f SWAP2
0x560 ADD
0x561 SWAP1
0x562 DUP3
0x563 SWAP1
0x564 DUP8
0x565 DUP1
0x566 EXTCODESIZE
0x567 ISZERO
0x568 DUP1
0x569 ISZERO
0x56a PUSH2 0x572
0x56d JUMPI
---
0x4fd: V451 = 0x0
0x500: V452 = S[0x0]
0x501: V453 = 0x1
0x503: V454 = S[0x1]
0x504: V455 = 0x40
0x507: V456 = M[0x40]
0x508: V457 = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x52a: M[V456] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x52b: V458 = 0x1
0x52d: V459 = 0xa0
0x52f: V460 = 0x2
0x531: V461 = EXP 0x2 0xa0
0x532: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x535: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x536: V464 = 0x4
0x539: V465 = ADD V456 0x4
0x53a: M[V465] = V463
0x53b: V466 = ADDRESS
0x53c: V467 = 0x24
0x53f: V468 = ADD V456 0x24
0x540: M[V468] = V466
0x542: V469 = M[0x40]
0x548: V470 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V471 = 0xdd62ed3e
0x550: V472 = 0x44
0x554: V473 = ADD V456 0x44
0x556: V474 = 0x20
0x55d: V475 = SUB V456 V469
0x560: V476 = ADD 0x44 V475
0x566: V477 = EXTCODESIZE V470
0x567: V478 = ISZERO V477
0x569: V479 = ISZERO V478
0x56a: V480 = 0x572
0x56d: JUMPI 0x572 V479
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S5, {0x1b2, 0x610}, 0x0, S2, S1, V449]
Stack pops: 3
Stack additions: [S2, S1, S2, V470, 0xdd62ed3e, V473, 0x20, V469, V476, V469, 0x0, V470, V478]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S5, {0x1b2, 0x610}, 0x0, S2, S1, S2, V470, 0xdd62ed3e, V473, 0x20, V469, V476, V469, 0x0, V470, V478]

================================

Block 0x56e
[0x56e:0x571]
---
Predecessors: [0x4fc]
Successors: []
---
0x56e PUSH1 0x0
0x570 DUP1
0x571 REVERT
---
0x56e: V481 = 0x0
0x571: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S15, {0x1b2, 0x610}, 0x0, S12, S11, S10, V470, 0xdd62ed3e, V473, 0x20, V469, V476, V469, 0x0, V470, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S15, {0x1b2, 0x610}, 0x0, S12, S11, S10, V470, 0xdd62ed3e, V473, 0x20, V469, V476, V469, 0x0, V470, V478]

================================

Block 0x572
[0x572:0x57c]
---
Predecessors: [0x4fc]
Successors: [0x57d, 0x586]
---
0x572 JUMPDEST
0x573 POP
0x574 GAS
0x575 CALL
0x576 ISZERO
0x577 DUP1
0x578 ISZERO
0x579 PUSH2 0x586
0x57c JUMPI
---
0x572: JUMPDEST 
0x574: V482 = GAS
0x575: V483 = CALL V482 V470 0x0 V469 V476 V469 0x20
0x576: V484 = ISZERO V483
0x578: V485 = ISZERO V484
0x579: V486 = 0x586
0x57c: JUMPI 0x586 V485
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S15, {0x1b2, 0x610}, 0x0, S12, S11, S10, V470, 0xdd62ed3e, V473, 0x20, V469, V476, V469, 0x0, V470, V478]
Stack pops: 7
Stack additions: [V484]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S15, {0x1b2, 0x610}, 0x0, S12, S11, S10, V470, 0xdd62ed3e, V473, V484]

================================

Block 0x57d
[0x57d:0x585]
---
Predecessors: [0x572]
Successors: []
---
0x57d RETURNDATASIZE
0x57e PUSH1 0x0
0x580 DUP1
0x581 RETURNDATACOPY
0x582 RETURNDATASIZE
0x583 PUSH1 0x0
0x585 REVERT
---
0x57d: V487 = RETURNDATASIZE
0x57e: V488 = 0x0
0x581: RETURNDATACOPY 0x0 0x0 V487
0x582: V489 = RETURNDATASIZE
0x583: V490 = 0x0
0x585: REVERT 0x0 V489
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S9, {0x1b2, 0x610}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V484]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S9, {0x1b2, 0x610}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V484]

================================

Block 0x586
[0x586:0x597]
---
Predecessors: [0x572]
Successors: [0x598, 0x59c]
---
0x586 JUMPDEST
0x587 POP
0x588 POP
0x589 POP
0x58a POP
0x58b PUSH1 0x40
0x58d MLOAD
0x58e RETURNDATASIZE
0x58f PUSH1 0x20
0x591 DUP2
0x592 LT
0x593 ISZERO
0x594 PUSH2 0x59c
0x597 JUMPI
---
0x586: JUMPDEST 
0x58b: V491 = 0x40
0x58d: V492 = M[0x40]
0x58e: V493 = RETURNDATASIZE
0x58f: V494 = 0x20
0x592: V495 = LT V493 0x20
0x593: V496 = ISZERO V495
0x594: V497 = 0x59c
0x597: JUMPI 0x59c V496
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S9, {0x1b2, 0x610}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V484]
Stack pops: 4
Stack additions: [V492, V493]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S9, {0x1b2, 0x610}, 0x0, S6, S5, S4, V492, V493]

================================

Block 0x598
[0x598:0x59b]
---
Predecessors: [0x586]
Successors: []
---
0x598 PUSH1 0x0
0x59a DUP1
0x59b REVERT
---
0x598: V498 = 0x0
0x59b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S7, {0x1b2, 0x610}, 0x0, S4, S3, S2, V492, V493]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S7, {0x1b2, 0x610}, 0x0, S4, S3, S2, V492, V493]

================================

Block 0x59c
[0x59c:0x5a0]
---
Predecessors: [0x586]
Successors: [0x5a1]
---
0x59c JUMPDEST
0x59d POP
0x59e MLOAD
0x59f LT
0x5a0 ISZERO
---
0x59c: JUMPDEST 
0x59e: V499 = M[V492]
0x59f: V500 = LT V499 S2
0x5a0: V501 = ISZERO V500
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S7, {0x1b2, 0x610}, 0x0, S4, S3, S2, V492, V493]
Stack pops: 3
Stack additions: [V501]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S7, {0x1b2, 0x610}, 0x0, S4, S3, V501]

================================

Block 0x5a1
[0x5a1:0x5a7]
---
Predecessors: [0x4f1, 0x59c]
Successors: [0x1b2, 0x610]
---
0x5a1 JUMPDEST
0x5a2 SWAP3
0x5a3 POP
0x5a4 POP
0x5a5 POP
0x5a6 SWAP1
0x5a7 JUMP
---
0x5a1: JUMPDEST 
0x5a7: JUMP {0x1b2, 0x610}
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S5, {0x1b2, 0x610}, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S5, S0]

================================

Block 0x5a8
[0x5a8:0x5ac]
---
Predecessors: [0x1d2]
Successors: [0x5ad]
---
0x5a8 JUMPDEST
0x5a9 PUSH1 0x0
0x5ab DUP1
0x5ac DUP1
---
0x5a8: JUMPDEST 
0x5a9: V502 = 0x0
---
Entry stack: [V13, 0xf9]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0xf9, 0x0, 0x0, 0x0]

================================

Block 0x5ad
[0x5ad:0x5ba]
---
Predecessors: [0x5a8, 0x5f0]
Successors: [0x5bb, 0x5f8]
---
0x5ad JUMPDEST
0x5ae PUSH1 0x4
0x5b0 SLOAD
0x5b1 PUSH1 0xff
0x5b3 DUP3
0x5b4 AND
0x5b5 LT
0x5b6 ISZERO
0x5b7 PUSH2 0x5f8
0x5ba JUMPI
---
0x5ad: JUMPDEST 
0x5ae: V503 = 0x4
0x5b0: V504 = S[0x4]
0x5b1: V505 = 0xff
0x5b4: V506 = AND S0 0xff
0x5b5: V507 = LT V506 V504
0x5b6: V508 = ISZERO V507
0x5b7: V509 = 0x5f8
0x5ba: JUMPI 0x5f8 V508
---
Entry stack: [V13, 0xf9, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xf9, 0x0, S1, S0]

================================

Block 0x5bb
[0x5bb:0x5cc]
---
Predecessors: [0x5ad]
Successors: [0x5cd, 0x5ce]
---
0x5bb PUSH1 0x4
0x5bd DUP1
0x5be SLOAD
0x5bf CALLER
0x5c0 SWAP2
0x5c1 SWAP1
0x5c2 PUSH1 0xff
0x5c4 DUP5
0x5c5 AND
0x5c6 SWAP1
0x5c7 DUP2
0x5c8 LT
0x5c9 PUSH2 0x5ce
0x5cc JUMPI
---
0x5bb: V510 = 0x4
0x5be: V511 = S[0x4]
0x5bf: V512 = CALLER
0x5c2: V513 = 0xff
0x5c5: V514 = AND S0 0xff
0x5c8: V515 = LT V514 V511
0x5c9: V516 = 0x5ce
0x5cc: JUMPI 0x5ce V515
---
Entry stack: [V13, 0xf9, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V512, 0x4, V514]
Exit stack: [V13, 0xf9, 0x0, S1, S0, V512, 0x4, V514]

================================

Block 0x5cd
[0x5cd:0x5cd]
---
Predecessors: [0x5bb]
Successors: []
---
0x5cd INVALID
---
0x5cd: INVALID 
---
Entry stack: [V13, 0xf9, 0x0, S4, S3, V512, 0x4, V514]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, S4, S3, V512, 0x4, V514]

================================

Block 0x5ce
[0x5ce:0x5e9]
---
Predecessors: [0x5bb]
Successors: [0x5ea, 0x5f0]
---
0x5ce JUMPDEST
0x5cf PUSH1 0x0
0x5d1 SWAP2
0x5d2 DUP3
0x5d3 MSTORE
0x5d4 PUSH1 0x20
0x5d6 SWAP1
0x5d7 SWAP2
0x5d8 SHA3
0x5d9 ADD
0x5da SLOAD
0x5db PUSH1 0x1
0x5dd PUSH1 0xa0
0x5df PUSH1 0x2
0x5e1 EXP
0x5e2 SUB
0x5e3 AND
0x5e4 EQ
0x5e5 ISZERO
0x5e6 PUSH2 0x5f0
0x5e9 JUMPI
---
0x5ce: JUMPDEST 
0x5cf: V517 = 0x0
0x5d3: M[0x0] = 0x4
0x5d4: V518 = 0x20
0x5d8: V519 = SHA3 0x0 0x20
0x5d9: V520 = ADD V519 V514
0x5da: V521 = S[V520]
0x5db: V522 = 0x1
0x5dd: V523 = 0xa0
0x5df: V524 = 0x2
0x5e1: V525 = EXP 0x2 0xa0
0x5e2: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e3: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x5e4: V528 = EQ V527 V512
0x5e5: V529 = ISZERO V528
0x5e6: V530 = 0x5f0
0x5e9: JUMPI 0x5f0 V529
---
Entry stack: [V13, 0xf9, 0x0, S4, S3, V512, 0x4, V514]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, S4, S3]

================================

Block 0x5ea
[0x5ea:0x5ef]
---
Predecessors: [0x5ce]
Successors: [0x5f0]
---
0x5ea DUP2
0x5eb PUSH1 0x1
0x5ed OR
0x5ee SWAP2
0x5ef POP
---
0x5eb: V531 = 0x1
0x5ed: V532 = OR 0x1 S1
---
Entry stack: [V13, 0xf9, 0x0, S1, S0]
Stack pops: 2
Stack additions: [V532, S0]
Exit stack: [V13, 0xf9, 0x0, V532, S0]

================================

Block 0x5f0
[0x5f0:0x5f7]
---
Predecessors: [0x5ce, 0x5ea]
Successors: [0x5ad]
---
0x5f0 JUMPDEST
0x5f1 PUSH1 0x1
0x5f3 ADD
0x5f4 PUSH2 0x5ad
0x5f7 JUMP
---
0x5f0: JUMPDEST 
0x5f1: V533 = 0x1
0x5f3: V534 = ADD 0x1 S0
0x5f4: V535 = 0x5ad
0x5f7: JUMP 0x5ad
---
Entry stack: [V13, 0xf9, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V534]
Exit stack: [V13, 0xf9, 0x0, S1, V534]

================================

Block 0x5f8
[0x5f8:0x603]
---
Predecessors: [0x5ad]
Successors: [0x604, 0x608]
---
0x5f8 JUMPDEST
0x5f9 PUSH1 0x1
0x5fb PUSH1 0xff
0x5fd DUP4
0x5fe AND
0x5ff EQ
0x600 PUSH2 0x608
0x603 JUMPI
---
0x5f8: JUMPDEST 
0x5f9: V536 = 0x1
0x5fb: V537 = 0xff
0x5fe: V538 = AND S1 0xff
0x5ff: V539 = EQ V538 0x1
0x600: V540 = 0x608
0x603: JUMPI 0x608 V539
---
Entry stack: [V13, 0xf9, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xf9, 0x0, S1, S0]

================================

Block 0x604
[0x604:0x607]
---
Predecessors: [0x5f8]
Successors: []
---
0x604 PUSH1 0x0
0x606 DUP1
0x607 REVERT
---
0x604: V541 = 0x0
0x607: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, S1, S0]

================================

Block 0x608
[0x608:0x60f]
---
Predecessors: [0x5f8]
Successors: [0x3e3]
---
0x608 JUMPDEST
0x609 PUSH2 0x610
0x60c PUSH2 0x3e3
0x60f JUMP
---
0x608: JUMPDEST 
0x609: V542 = 0x610
0x60c: V543 = 0x3e3
0x60f: JUMP 0x3e3
---
Entry stack: [V13, 0xf9, 0x0, S1, S0]
Stack pops: 0
Stack additions: [0x610]
Exit stack: [V13, 0xf9, 0x0, S1, S0, 0x610]

================================

Block 0x610
[0x610:0x616]
---
Predecessors: [0x5a1]
Successors: [0x617, 0x61b]
---
0x610 JUMPDEST
0x611 ISZERO
0x612 ISZERO
0x613 PUSH2 0x61b
0x616 JUMPI
---
0x610: JUMPDEST 
0x611: V544 = ISZERO S0
0x612: V545 = ISZERO V544
0x613: V546 = 0x61b
0x616: JUMPI 0x61b V545
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S1]

================================

Block 0x617
[0x617:0x61a]
---
Predecessors: [0x610]
Successors: []
---
0x617 PUSH1 0x0
0x619 DUP1
0x61a REVERT
---
0x617: V547 = 0x0
0x61a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S0]

================================

Block 0x61b
[0x61b:0x61f]
---
Predecessors: [0x610]
Successors: [0x620]
---
0x61b JUMPDEST
0x61c PUSH1 0x0
0x61e SWAP3
0x61f POP
---
0x61b: JUMPDEST 
0x61c: V548 = 0x0
---
Entry stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V13, 0xf9, 0x0, {0x0, 0x1}, S0]

================================

Block 0x620
[0x620:0x62a]
---
Predecessors: [0x61b, 0x77f]
Successors: [0x62b, 0x78a]
---
0x620 JUMPDEST
0x621 PUSH1 0x3
0x623 SLOAD
0x624 DUP4
0x625 LT
0x626 ISZERO
0x627 PUSH2 0x78a
0x62a JUMPI
---
0x620: JUMPDEST 
0x621: V549 = 0x3
0x623: V550 = S[0x3]
0x625: V551 = LT S2 V550
0x626: V552 = ISZERO V551
0x627: V553 = 0x78a
0x62a: JUMPI 0x78a V552
---
Entry stack: [V13, 0xf9, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xf9, S2, S1, S0]

================================

Block 0x62b
[0x62b:0x636]
---
Predecessors: [0x620]
Successors: [0x637, 0x638]
---
0x62b PUSH1 0x3
0x62d DUP1
0x62e SLOAD
0x62f DUP5
0x630 SWAP1
0x631 DUP2
0x632 LT
0x633 PUSH2 0x638
0x636 JUMPI
---
0x62b: V554 = 0x3
0x62e: V555 = S[0x3]
0x632: V556 = LT S2 V555
0x633: V557 = 0x638
0x636: JUMPI 0x638 V556
---
Entry stack: [V13, 0xf9, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x3, S2]
Exit stack: [V13, 0xf9, S2, S1, S0, 0x3, S2]

================================

Block 0x637
[0x637:0x637]
---
Predecessors: [0x62b]
Successors: []
---
0x637 INVALID
---
0x637: INVALID 
---
Entry stack: [V13, 0xf9, S4, S3, S2, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S4, S3, S2, 0x3, S0]

================================

Block 0x638
[0x638:0x656]
---
Predecessors: [0x62b]
Successors: [0x657, 0x65e]
---
0x638 JUMPDEST
0x639 PUSH1 0x0
0x63b SWAP2
0x63c DUP3
0x63d MSTORE
0x63e PUSH1 0x20
0x640 SWAP1
0x641 SWAP2
0x642 SHA3
0x643 PUSH1 0x2
0x645 PUSH1 0x3
0x647 SWAP1
0x648 SWAP3
0x649 MUL
0x64a ADD
0x64b ADD
0x64c SLOAD
0x64d PUSH1 0xff
0x64f AND
0x650 ISZERO
0x651 DUP1
0x652 ISZERO
0x653 PUSH2 0x65e
0x656 JUMPI
---
0x638: JUMPDEST 
0x639: V558 = 0x0
0x63d: M[0x0] = 0x3
0x63e: V559 = 0x20
0x642: V560 = SHA3 0x0 0x20
0x643: V561 = 0x2
0x645: V562 = 0x3
0x649: V563 = MUL S0 0x3
0x64a: V564 = ADD V563 V560
0x64b: V565 = ADD V564 0x2
0x64c: V566 = S[V565]
0x64d: V567 = 0xff
0x64f: V568 = AND 0xff V566
0x650: V569 = ISZERO V568
0x652: V570 = ISZERO V569
0x653: V571 = 0x65e
0x656: JUMPI 0x65e V570
---
Entry stack: [V13, 0xf9, S4, S3, S2, 0x3, S0]
Stack pops: 2
Stack additions: [V569]
Exit stack: [V13, 0xf9, S4, S3, S2, V569]

================================

Block 0x657
[0x657:0x65d]
---
Predecessors: [0x638]
Successors: [0x65e]
---
0x657 POP
0x658 PUSH3 0x249f0
0x65c GAS
0x65d GT
---
0x658: V572 = 0x249f0
0x65c: V573 = GAS
0x65d: V574 = GT V573 0x249f0
---
Entry stack: [V13, 0xf9, S3, S2, S1, V569]
Stack pops: 1
Stack additions: [V574]
Exit stack: [V13, 0xf9, S3, S2, S1, V574]

================================

Block 0x65e
[0x65e:0x663]
---
Predecessors: [0x638, 0x657]
Successors: [0x664, 0x77f]
---
0x65e JUMPDEST
0x65f ISZERO
0x660 PUSH2 0x77f
0x663 JUMPI
---
0x65e: JUMPDEST 
0x65f: V575 = ISZERO S0
0x660: V576 = 0x77f
0x663: JUMPI 0x77f V575
---
Entry stack: [V13, 0xf9, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf9, S3, S2, S1]

================================

Block 0x664
[0x664:0x68a]
---
Predecessors: [0x65e]
Successors: [0x68b, 0x68c]
---
0x664 PUSH1 0x0
0x666 SLOAD
0x667 PUSH1 0x1
0x669 SLOAD
0x66a PUSH1 0x3
0x66c DUP1
0x66d SLOAD
0x66e PUSH1 0x1
0x670 PUSH1 0xa0
0x672 PUSH1 0x2
0x674 EXP
0x675 SUB
0x676 SWAP4
0x677 DUP5
0x678 AND
0x679 SWAP4
0x67a PUSH4 0x23b872dd
0x67f SWAP4
0x680 AND
0x681 SWAP2
0x682 SWAP1
0x683 DUP8
0x684 SWAP1
0x685 DUP2
0x686 LT
0x687 PUSH2 0x68c
0x68a JUMPI
---
0x664: V577 = 0x0
0x666: V578 = S[0x0]
0x667: V579 = 0x1
0x669: V580 = S[0x1]
0x66a: V581 = 0x3
0x66d: V582 = S[0x3]
0x66e: V583 = 0x1
0x670: V584 = 0xa0
0x672: V585 = 0x2
0x674: V586 = EXP 0x2 0xa0
0x675: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x678: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V578
0x67a: V589 = 0x23b872dd
0x680: V590 = AND V580 0xffffffffffffffffffffffffffffffffffffffff
0x686: V591 = LT S2 V582
0x687: V592 = 0x68c
0x68a: JUMPI 0x68c V591
---
Entry stack: [V13, 0xf9, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V588, 0x23b872dd, V590, 0x3, S2]
Exit stack: [V13, 0xf9, S2, S1, S0, V588, 0x23b872dd, V590, 0x3, S2]

================================

Block 0x68b
[0x68b:0x68b]
---
Predecessors: [0x664]
Successors: []
---
0x68b INVALID
---
0x68b: INVALID 
---
Entry stack: [V13, 0xf9, S7, S6, S5, V588, 0x23b872dd, V590, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S7, S6, S5, V588, 0x23b872dd, V590, 0x3, S0]

================================

Block 0x68c
[0x68c:0x6bd]
---
Predecessors: [0x664]
Successors: [0x432, 0x6be]
---
0x68c JUMPDEST
0x68d PUSH1 0x0
0x68f SWAP2
0x690 DUP3
0x691 MSTORE
0x692 PUSH1 0x20
0x694 SWAP1
0x695 SWAP2
0x696 SHA3
0x697 PUSH1 0x3
0x699 SWAP2
0x69a DUP3
0x69b MUL
0x69c ADD
0x69d SLOAD
0x69e PUSH1 0x5
0x6a0 SLOAD
0x6a1 DUP3
0x6a2 SLOAD
0x6a3 PUSH1 0x1
0x6a5 PUSH1 0xa0
0x6a7 PUSH1 0x2
0x6a9 EXP
0x6aa SUB
0x6ab SWAP1
0x6ac SWAP3
0x6ad AND
0x6ae SWAP3
0x6af SWAP1
0x6b0 SWAP2
0x6b1 PUSH2 0x6bf
0x6b4 SWAP2
0x6b5 SWAP1
0x6b6 DUP11
0x6b7 SWAP1
0x6b8 DUP2
0x6b9 LT
0x6ba PUSH2 0x432
0x6bd JUMPI
---
0x68c: JUMPDEST 
0x68d: V593 = 0x0
0x691: M[0x0] = 0x3
0x692: V594 = 0x20
0x696: V595 = SHA3 0x0 0x20
0x697: V596 = 0x3
0x69b: V597 = MUL 0x3 S0
0x69c: V598 = ADD V597 V595
0x69d: V599 = S[V598]
0x69e: V600 = 0x5
0x6a0: V601 = S[0x5]
0x6a2: V602 = S[0x3]
0x6a3: V603 = 0x1
0x6a5: V604 = 0xa0
0x6a7: V605 = 0x2
0x6a9: V606 = EXP 0x2 0xa0
0x6aa: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ad: V608 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V609 = 0x6bf
0x6b9: V610 = LT S7 V602
0x6ba: V611 = 0x432
0x6bd: JUMPI 0x432 V610
---
Entry stack: [V13, 0xf9, S7, S6, S5, V588, 0x23b872dd, V590, 0x3, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V608, V601, 0x6bf, 0x3, S7]
Exit stack: [V13, 0xf9, S7, S6, S5, V588, 0x23b872dd, V590, V608, V601, 0x6bf, 0x3, S7]

================================

Block 0x6be
[0x6be:0x6be]
---
Predecessors: [0x68c]
Successors: []
---
0x6be INVALID
---
0x6be: INVALID 
---
Entry stack: [V13, 0xf9, S10, S9, S8, V588, 0x23b872dd, V590, V608, V601, 0x6bf, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S10, S9, S8, V588, 0x23b872dd, V590, V608, V601, 0x6bf, 0x3, S0]

================================

Block 0x6bf
[0x6bf:0x70f]
---
Predecessors: [0x30e]
Successors: [0x710, 0x714]
---
0x6bf JUMPDEST
0x6c0 PUSH1 0x40
0x6c2 DUP1
0x6c3 MLOAD
0x6c4 PUSH1 0xe0
0x6c6 PUSH1 0x2
0x6c8 EXP
0x6c9 PUSH4 0xffffffff
0x6ce DUP9
0x6cf AND
0x6d0 MUL
0x6d1 DUP2
0x6d2 MSTORE
0x6d3 PUSH1 0x1
0x6d5 PUSH1 0xa0
0x6d7 PUSH1 0x2
0x6d9 EXP
0x6da SUB
0x6db SWAP6
0x6dc DUP7
0x6dd AND
0x6de PUSH1 0x4
0x6e0 DUP3
0x6e1 ADD
0x6e2 MSTORE
0x6e3 SWAP4
0x6e4 SWAP1
0x6e5 SWAP5
0x6e6 AND
0x6e7 PUSH1 0x24
0x6e9 DUP5
0x6ea ADD
0x6eb MSTORE
0x6ec MUL
0x6ed PUSH1 0x44
0x6ef DUP3
0x6f0 ADD
0x6f1 MSTORE
0x6f2 SWAP1
0x6f3 MLOAD
0x6f4 PUSH1 0x64
0x6f6 DUP1
0x6f7 DUP4
0x6f8 ADD
0x6f9 SWAP3
0x6fa PUSH1 0x20
0x6fc SWAP3
0x6fd SWAP2
0x6fe SWAP1
0x6ff DUP3
0x700 SWAP1
0x701 SUB
0x702 ADD
0x703 DUP2
0x704 PUSH1 0x0
0x706 DUP8
0x707 DUP1
0x708 EXTCODESIZE
0x709 ISZERO
0x70a DUP1
0x70b ISZERO
0x70c PUSH2 0x714
0x70f JUMPI
---
0x6bf: JUMPDEST 
0x6c0: V612 = 0x40
0x6c3: V613 = M[0x40]
0x6c4: V614 = 0xe0
0x6c6: V615 = 0x2
0x6c8: V616 = EXP 0x2 0xe0
0x6c9: V617 = 0xffffffff
0x6cf: V618 = AND {0x0, 0x23b872dd} 0xffffffff
0x6d0: V619 = MUL V618 0x100000000000000000000000000000000000000000000000000000000
0x6d2: M[V613] = V619
0x6d3: V620 = 0x1
0x6d5: V621 = 0xa0
0x6d7: V622 = 0x2
0x6d9: V623 = EXP 0x2 0xa0
0x6da: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dd: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x6de: V626 = 0x4
0x6e1: V627 = ADD V613 0x4
0x6e2: M[V627] = V625
0x6e6: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6e7: V629 = 0x24
0x6ea: V630 = ADD V613 0x24
0x6eb: M[V630] = V628
0x6ec: V631 = MUL V275 S1
0x6ed: V632 = 0x44
0x6f0: V633 = ADD V613 0x44
0x6f1: M[V633] = V631
0x6f3: V634 = M[0x40]
0x6f4: V635 = 0x64
0x6f8: V636 = ADD V613 0x64
0x6fa: V637 = 0x20
0x701: V638 = SUB V613 V634
0x702: V639 = ADD V638 0x64
0x704: V640 = 0x0
0x708: V641 = EXTCODESIZE S5
0x709: V642 = ISZERO V641
0x70b: V643 = ISZERO V642
0x70c: V644 = 0x714
0x70f: JUMPI 0x714 V643
---
Entry stack: [V13, 0xf9, S8, S7, S6, S5, {0x0, 0x23b872dd}, S3, S2, S1, V275]
Stack pops: 6
Stack additions: [S5, S4, V636, 0x20, V634, V639, V634, 0x0, S5, V642]
Exit stack: [V13, 0xf9, S8, S7, S6, S5, {0x0, 0x23b872dd}, V636, 0x20, V634, V639, V634, 0x0, S5, V642]

================================

Block 0x710
[0x710:0x713]
---
Predecessors: [0x6bf]
Successors: []
---
0x710 PUSH1 0x0
0x712 DUP1
0x713 REVERT
---
0x710: V645 = 0x0
0x713: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, S12, S11, S10, S9, {0x0, 0x23b872dd}, V636, 0x20, V634, V639, V634, 0x0, S1, V642]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S12, S11, S10, S9, {0x0, 0x23b872dd}, V636, 0x20, V634, V639, V634, 0x0, S1, V642]

================================

Block 0x714
[0x714:0x71e]
---
Predecessors: [0x6bf]
Successors: [0x71f, 0x728]
---
0x714 JUMPDEST
0x715 POP
0x716 GAS
0x717 CALL
0x718 ISZERO
0x719 DUP1
0x71a ISZERO
0x71b PUSH2 0x728
0x71e JUMPI
---
0x714: JUMPDEST 
0x716: V646 = GAS
0x717: V647 = CALL V646 S1 0x0 V634 V639 V634 0x20
0x718: V648 = ISZERO V647
0x71a: V649 = ISZERO V648
0x71b: V650 = 0x728
0x71e: JUMPI 0x728 V649
---
Entry stack: [V13, 0xf9, S12, S11, S10, S9, {0x0, 0x23b872dd}, V636, 0x20, V634, V639, V634, 0x0, S1, V642]
Stack pops: 7
Stack additions: [V648]
Exit stack: [V13, 0xf9, S12, S11, S10, S9, {0x0, 0x23b872dd}, V636, V648]

================================

Block 0x71f
[0x71f:0x727]
---
Predecessors: [0x714]
Successors: []
---
0x71f RETURNDATASIZE
0x720 PUSH1 0x0
0x722 DUP1
0x723 RETURNDATACOPY
0x724 RETURNDATASIZE
0x725 PUSH1 0x0
0x727 REVERT
---
0x71f: V651 = RETURNDATASIZE
0x720: V652 = 0x0
0x723: RETURNDATACOPY 0x0 0x0 V651
0x724: V653 = RETURNDATASIZE
0x725: V654 = 0x0
0x727: REVERT 0x0 V653
---
Entry stack: [V13, 0xf9, S6, S5, S4, S3, {0x0, 0x23b872dd}, V636, V648]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S6, S5, S4, S3, {0x0, 0x23b872dd}, V636, V648]

================================

Block 0x728
[0x728:0x739]
---
Predecessors: [0x714]
Successors: [0x73a, 0x73e]
---
0x728 JUMPDEST
0x729 POP
0x72a POP
0x72b POP
0x72c POP
0x72d PUSH1 0x40
0x72f MLOAD
0x730 RETURNDATASIZE
0x731 PUSH1 0x20
0x733 DUP2
0x734 LT
0x735 ISZERO
0x736 PUSH2 0x73e
0x739 JUMPI
---
0x728: JUMPDEST 
0x72d: V655 = 0x40
0x72f: V656 = M[0x40]
0x730: V657 = RETURNDATASIZE
0x731: V658 = 0x20
0x734: V659 = LT V657 0x20
0x735: V660 = ISZERO V659
0x736: V661 = 0x73e
0x739: JUMPI 0x73e V660
---
Entry stack: [V13, 0xf9, S6, S5, S4, S3, {0x0, 0x23b872dd}, V636, V648]
Stack pops: 4
Stack additions: [V656, V657]
Exit stack: [V13, 0xf9, S6, S5, S4, V656, V657]

================================

Block 0x73a
[0x73a:0x73d]
---
Predecessors: [0x728]
Successors: []
---
0x73a PUSH1 0x0
0x73c DUP1
0x73d REVERT
---
0x73a: V662 = 0x0
0x73d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, S4, S3, S2, V656, V657]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S4, S3, S2, V656, V657]

================================

Block 0x73e
[0x73e:0x746]
---
Predecessors: [0x728]
Successors: [0x747, 0x74b]
---
0x73e JUMPDEST
0x73f POP
0x740 MLOAD
0x741 ISZERO
0x742 ISZERO
0x743 PUSH2 0x74b
0x746 JUMPI
---
0x73e: JUMPDEST 
0x740: V663 = M[V656]
0x741: V664 = ISZERO V663
0x742: V665 = ISZERO V664
0x743: V666 = 0x74b
0x746: JUMPI 0x74b V665
---
Entry stack: [V13, 0xf9, S4, S3, S2, V656, V657]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xf9, S4, S3, S2]

================================

Block 0x747
[0x747:0x74a]
---
Predecessors: [0x73e]
Successors: []
---
0x747 PUSH1 0x0
0x749 DUP1
0x74a REVERT
---
0x747: V667 = 0x0
0x74a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S2, S1, S0]

================================

Block 0x74b
[0x74b:0x75a]
---
Predecessors: [0x73e]
Successors: [0x75b, 0x75c]
---
0x74b JUMPDEST
0x74c PUSH1 0x1
0x74e PUSH1 0x3
0x750 DUP5
0x751 DUP2
0x752 SLOAD
0x753 DUP2
0x754 LT
0x755 ISZERO
0x756 ISZERO
0x757 PUSH2 0x75c
0x75a JUMPI
---
0x74b: JUMPDEST 
0x74c: V668 = 0x1
0x74e: V669 = 0x3
0x752: V670 = S[0x3]
0x754: V671 = LT S2 V670
0x755: V672 = ISZERO V671
0x756: V673 = ISZERO V672
0x757: V674 = 0x75c
0x75a: JUMPI 0x75c V673
---
Entry stack: [V13, 0xf9, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, 0x3, S2]
Exit stack: [V13, 0xf9, S2, S1, S0, 0x1, 0x3, S2]

================================

Block 0x75b
[0x75b:0x75b]
---
Predecessors: [0x74b]
Successors: []
---
0x75b INVALID
---
0x75b: INVALID 
---
Entry stack: [V13, 0xf9, S5, S4, S3, 0x1, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, S5, S4, S3, 0x1, 0x3, S0]

================================

Block 0x75c
[0x75c:0x77e]
---
Predecessors: [0x74b]
Successors: [0x77f]
---
0x75c JUMPDEST
0x75d PUSH1 0x0
0x75f SWAP2
0x760 DUP3
0x761 MSTORE
0x762 PUSH1 0x20
0x764 SWAP1
0x765 SWAP2
0x766 SHA3
0x767 PUSH1 0x3
0x769 SWAP1
0x76a SWAP2
0x76b MUL
0x76c ADD
0x76d PUSH1 0x2
0x76f ADD
0x770 DUP1
0x771 SLOAD
0x772 PUSH1 0xff
0x774 NOT
0x775 AND
0x776 SWAP2
0x777 ISZERO
0x778 ISZERO
0x779 SWAP2
0x77a SWAP1
0x77b SWAP2
0x77c OR
0x77d SWAP1
0x77e SSTORE
---
0x75c: JUMPDEST 
0x75d: V675 = 0x0
0x761: M[0x0] = 0x3
0x762: V676 = 0x20
0x766: V677 = SHA3 0x0 0x20
0x767: V678 = 0x3
0x76b: V679 = MUL S0 0x3
0x76c: V680 = ADD V679 V677
0x76d: V681 = 0x2
0x76f: V682 = ADD 0x2 V680
0x771: V683 = S[V682]
0x772: V684 = 0xff
0x774: V685 = NOT 0xff
0x775: V686 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V683
0x777: V687 = ISZERO 0x1
0x778: V688 = ISZERO 0x0
0x77c: V689 = OR 0x1 V686
0x77e: S[V682] = V689
---
Entry stack: [V13, 0xf9, S5, S4, S3, 0x1, 0x3, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xf9, S5, S4, S3]

================================

Block 0x77f
[0x77f:0x789]
---
Predecessors: [0x65e, 0x75c]
Successors: [0x620]
---
0x77f JUMPDEST
0x780 PUSH1 0x1
0x782 SWAP1
0x783 SWAP3
0x784 ADD
0x785 SWAP2
0x786 PUSH2 0x620
0x789 JUMP
---
0x77f: JUMPDEST 
0x780: V690 = 0x1
0x784: V691 = ADD S2 0x1
0x786: V692 = 0x620
0x789: JUMP 0x620
---
Entry stack: [V13, 0xf9, S2, S1, S0]
Stack pops: 3
Stack additions: [V691, S1, S0]
Exit stack: [V13, 0xf9, V691, S1, S0]

================================

Block 0x78a
[0x78a:0x78e]
---
Predecessors: [0x620]
Successors: [0xf9]
---
0x78a JUMPDEST
0x78b POP
0x78c POP
0x78d POP
0x78e JUMP
---
0x78a: JUMPDEST 
0x78e: JUMP 0xf9
---
Entry stack: [V13, 0xf9, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x78f
[0x78f:0x794]
---
Predecessors: [0x1e7]
Successors: [0x128]
---
0x78f JUMPDEST
0x790 PUSH1 0x5
0x792 SLOAD
0x793 DUP2
0x794 JUMP
---
0x78f: JUMPDEST 
0x790: V693 = 0x5
0x792: V694 = S[0x5]
0x794: JUMP 0x128
---
Entry stack: [V13, 0x128]
Stack pops: 1
Stack additions: [S0, V694]
Exit stack: [V13, 0x128, V694]

================================

Block 0x795
[0x795:0x799]
---
Predecessors: [0x1fc, 0x2cb]
Successors: [0x79a]
---
0x795 JUMPDEST
0x796 PUSH1 0x0
0x798 DUP1
0x799 DUP1
---
0x795: JUMPDEST 
0x796: V695 = 0x0
---
Entry stack: [V13, 0xf9, S2, S1, {0x1b2, 0x2d3}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0xf9, S2, S1, {0x1b2, 0x2d3}, 0x0, 0x0, 0x0]

================================

Block 0x79a
[0x79a:0x7a7]
---
Predecessors: [0x795, 0x7dd]
Successors: [0x7a8, 0x7e5]
---
0x79a JUMPDEST
0x79b PUSH1 0x4
0x79d SLOAD
0x79e PUSH1 0xff
0x7a0 DUP3
0x7a1 AND
0x7a2 LT
0x7a3 ISZERO
0x7a4 PUSH2 0x7e5
0x7a7 JUMPI
---
0x79a: JUMPDEST 
0x79b: V696 = 0x4
0x79d: V697 = S[0x4]
0x79e: V698 = 0xff
0x7a1: V699 = AND S0 0xff
0x7a2: V700 = LT V699 V697
0x7a3: V701 = ISZERO V700
0x7a4: V702 = 0x7e5
0x7a7: JUMPI 0x7e5 V701
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, S1, S0]

================================

Block 0x7a8
[0x7a8:0x7b9]
---
Predecessors: [0x79a]
Successors: [0x7ba, 0x7bb]
---
0x7a8 PUSH1 0x4
0x7aa DUP1
0x7ab SLOAD
0x7ac CALLER
0x7ad SWAP2
0x7ae SWAP1
0x7af PUSH1 0xff
0x7b1 DUP5
0x7b2 AND
0x7b3 SWAP1
0x7b4 DUP2
0x7b5 LT
0x7b6 PUSH2 0x7bb
0x7b9 JUMPI
---
0x7a8: V703 = 0x4
0x7ab: V704 = S[0x4]
0x7ac: V705 = CALLER
0x7af: V706 = 0xff
0x7b2: V707 = AND S0 0xff
0x7b5: V708 = LT V707 V704
0x7b6: V709 = 0x7bb
0x7b9: JUMPI 0x7bb V708
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0, V705, 0x4, V707]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0, V705, 0x4, V707]

================================

Block 0x7ba
[0x7ba:0x7ba]
---
Predecessors: [0x7a8]
Successors: []
---
0x7ba INVALID
---
0x7ba: INVALID 
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S7, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S3, V705, 0x4, V707]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S7, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S3, V705, 0x4, V707]

================================

Block 0x7bb
[0x7bb:0x7d6]
---
Predecessors: [0x7a8]
Successors: [0x7d7, 0x7dd]
---
0x7bb JUMPDEST
0x7bc PUSH1 0x0
0x7be SWAP2
0x7bf DUP3
0x7c0 MSTORE
0x7c1 PUSH1 0x20
0x7c3 SWAP1
0x7c4 SWAP2
0x7c5 SHA3
0x7c6 ADD
0x7c7 SLOAD
0x7c8 PUSH1 0x1
0x7ca PUSH1 0xa0
0x7cc PUSH1 0x2
0x7ce EXP
0x7cf SUB
0x7d0 AND
0x7d1 EQ
0x7d2 ISZERO
0x7d3 PUSH2 0x7dd
0x7d6 JUMPI
---
0x7bb: JUMPDEST 
0x7bc: V710 = 0x0
0x7c0: M[0x0] = 0x4
0x7c1: V711 = 0x20
0x7c5: V712 = SHA3 0x0 0x20
0x7c6: V713 = ADD V712 V707
0x7c7: V714 = S[V713]
0x7c8: V715 = 0x1
0x7ca: V716 = 0xa0
0x7cc: V717 = 0x2
0x7ce: V718 = EXP 0x2 0xa0
0x7cf: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d0: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0x7d1: V721 = EQ V720 V705
0x7d2: V722 = ISZERO V721
0x7d3: V723 = 0x7dd
0x7d6: JUMPI 0x7dd V722
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S7, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S3, V705, 0x4, V707]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S7, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S3]

================================

Block 0x7d7
[0x7d7:0x7dc]
---
Predecessors: [0x7bb]
Successors: [0x7dd]
---
0x7d7 DUP2
0x7d8 PUSH1 0x1
0x7da OR
0x7db SWAP2
0x7dc POP
---
0x7d8: V724 = 0x1
0x7da: V725 = OR 0x1 {0x0, 0x1}
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [V725, S0]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, V725, S0]

================================

Block 0x7dd
[0x7dd:0x7e4]
---
Predecessors: [0x7bb, 0x7d7]
Successors: [0x79a]
---
0x7dd JUMPDEST
0x7de PUSH1 0x1
0x7e0 ADD
0x7e1 PUSH2 0x79a
0x7e4 JUMP
---
0x7dd: JUMPDEST 
0x7de: V726 = 0x1
0x7e0: V727 = ADD 0x1 S0
0x7e1: V728 = 0x79a
0x7e4: JUMP 0x79a
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V727]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, S1, V727]

================================

Block 0x7e5
[0x7e5:0x7f0]
---
Predecessors: [0x79a]
Successors: [0x7f1, 0x7f5]
---
0x7e5 JUMPDEST
0x7e6 PUSH1 0x1
0x7e8 PUSH1 0xff
0x7ea DUP4
0x7eb AND
0x7ec EQ
0x7ed PUSH2 0x7f5
0x7f0 JUMPI
---
0x7e5: JUMPDEST 
0x7e6: V729 = 0x1
0x7e8: V730 = 0xff
0x7eb: V731 = AND {0x0, 0x1} 0xff
0x7ec: V732 = EQ V731 0x1
0x7ed: V733 = 0x7f5
0x7f0: JUMPI 0x7f5 V732
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x7f1
[0x7f1:0x7f4]
---
Predecessors: [0x7e5]
Successors: []
---
0x7f1 PUSH1 0x0
0x7f3 DUP1
0x7f4 REVERT
---
0x7f1: V734 = 0x0
0x7f4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x7f5
[0x7f5:0x865]
---
Predecessors: [0x7e5]
Successors: [0x866, 0x86a]
---
0x7f5 JUMPDEST
0x7f6 PUSH1 0x0
0x7f8 DUP1
0x7f9 SLOAD
0x7fa PUSH1 0x1
0x7fc SLOAD
0x7fd PUSH1 0x40
0x7ff DUP1
0x800 MLOAD
0x801 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x822 DUP2
0x823 MSTORE
0x824 ADDRESS
0x825 PUSH1 0x4
0x827 DUP3
0x828 ADD
0x829 MSTORE
0x82a SWAP1
0x82b MLOAD
0x82c PUSH1 0x1
0x82e PUSH1 0xa0
0x830 PUSH1 0x2
0x832 EXP
0x833 SUB
0x834 SWAP4
0x835 DUP5
0x836 AND
0x837 SWAP5
0x838 PUSH4 0xa9059cbb
0x83d SWAP5
0x83e SWAP1
0x83f SWAP4
0x840 AND
0x841 SWAP3
0x842 DUP6
0x843 SWAP3
0x844 PUSH4 0x70a08231
0x849 SWAP3
0x84a PUSH1 0x24
0x84c DUP1
0x84d DUP4
0x84e ADD
0x84f SWAP4
0x850 PUSH1 0x20
0x852 SWAP4
0x853 DUP4
0x854 SWAP1
0x855 SUB
0x856 SWAP1
0x857 SWAP2
0x858 ADD
0x859 SWAP1
0x85a DUP3
0x85b SWAP1
0x85c DUP8
0x85d DUP1
0x85e EXTCODESIZE
0x85f ISZERO
0x860 DUP1
0x861 ISZERO
0x862 PUSH2 0x86a
0x865 JUMPI
---
0x7f5: JUMPDEST 
0x7f6: V735 = 0x0
0x7f9: V736 = S[0x0]
0x7fa: V737 = 0x1
0x7fc: V738 = S[0x1]
0x7fd: V739 = 0x40
0x800: V740 = M[0x40]
0x801: V741 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x823: M[V740] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x824: V742 = ADDRESS
0x825: V743 = 0x4
0x828: V744 = ADD V740 0x4
0x829: M[V744] = V742
0x82b: V745 = M[0x40]
0x82c: V746 = 0x1
0x82e: V747 = 0xa0
0x830: V748 = 0x2
0x832: V749 = EXP 0x2 0xa0
0x833: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x836: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x838: V752 = 0xa9059cbb
0x840: V753 = AND V738 0xffffffffffffffffffffffffffffffffffffffff
0x844: V754 = 0x70a08231
0x84a: V755 = 0x24
0x84e: V756 = ADD V740 0x24
0x850: V757 = 0x20
0x855: V758 = SUB V740 V745
0x858: V759 = ADD 0x24 V758
0x85e: V760 = EXTCODESIZE V751
0x85f: V761 = ISZERO V760
0x861: V762 = ISZERO V761
0x862: V763 = 0x86a
0x865: JUMPI 0x86a V762
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: [V751, 0xa9059cbb, V753, V751, 0x70a08231, V756, 0x20, V745, V759, V745, 0x0, V751, V761]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0, V751, 0xa9059cbb, V753, V751, 0x70a08231, V756, 0x20, V745, V759, V745, 0x0, V751, V761]

================================

Block 0x866
[0x866:0x869]
---
Predecessors: [0x7f5]
Successors: []
---
0x866 PUSH1 0x0
0x868 DUP1
0x869 REVERT
---
0x866: V764 = 0x0
0x869: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S17, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S13, V751, 0xa9059cbb, V753, V751, 0x70a08231, V756, 0x20, V745, V759, V745, 0x0, V751, V761]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S17, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S13, V751, 0xa9059cbb, V753, V751, 0x70a08231, V756, 0x20, V745, V759, V745, 0x0, V751, V761]

================================

Block 0x86a
[0x86a:0x874]
---
Predecessors: [0x7f5]
Successors: [0x875, 0x87e]
---
0x86a JUMPDEST
0x86b POP
0x86c GAS
0x86d CALL
0x86e ISZERO
0x86f DUP1
0x870 ISZERO
0x871 PUSH2 0x87e
0x874 JUMPI
---
0x86a: JUMPDEST 
0x86c: V765 = GAS
0x86d: V766 = CALL V765 V751 0x0 V745 V759 V745 0x20
0x86e: V767 = ISZERO V766
0x870: V768 = ISZERO V767
0x871: V769 = 0x87e
0x874: JUMPI 0x87e V768
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S17, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S13, V751, 0xa9059cbb, V753, V751, 0x70a08231, V756, 0x20, V745, V759, V745, 0x0, V751, V761]
Stack pops: 7
Stack additions: [V767]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S17, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S13, V751, 0xa9059cbb, V753, V751, 0x70a08231, V756, V767]

================================

Block 0x875
[0x875:0x87d]
---
Predecessors: [0x86a]
Successors: []
---
0x875 RETURNDATASIZE
0x876 PUSH1 0x0
0x878 DUP1
0x879 RETURNDATACOPY
0x87a RETURNDATASIZE
0x87b PUSH1 0x0
0x87d REVERT
---
0x875: V770 = RETURNDATASIZE
0x876: V771 = 0x0
0x879: RETURNDATACOPY 0x0 0x0 V770
0x87a: V772 = RETURNDATASIZE
0x87b: V773 = 0x0
0x87d: REVERT 0x0 V772
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S11, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V767]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S11, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V767]

================================

Block 0x87e
[0x87e:0x88f]
---
Predecessors: [0x86a]
Successors: [0x890, 0x894]
---
0x87e JUMPDEST
0x87f POP
0x880 POP
0x881 POP
0x882 POP
0x883 PUSH1 0x40
0x885 MLOAD
0x886 RETURNDATASIZE
0x887 PUSH1 0x20
0x889 DUP2
0x88a LT
0x88b ISZERO
0x88c PUSH2 0x894
0x88f JUMPI
---
0x87e: JUMPDEST 
0x883: V774 = 0x40
0x885: V775 = M[0x40]
0x886: V776 = RETURNDATASIZE
0x887: V777 = 0x20
0x88a: V778 = LT V776 0x20
0x88b: V779 = ISZERO V778
0x88c: V780 = 0x894
0x88f: JUMPI 0x894 V779
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S11, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V767]
Stack pops: 4
Stack additions: [V775, V776]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S11, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, V775, V776]

================================

Block 0x890
[0x890:0x893]
---
Predecessors: [0x87e]
Successors: []
---
0x890 PUSH1 0x0
0x892 DUP1
0x893 REVERT
---
0x890: V781 = 0x0
0x893: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S9, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V775, V776]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S9, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V775, V776]

================================

Block 0x894
[0x894:0x8de]
---
Predecessors: [0x87e]
Successors: [0x8df, 0x8e3]
---
0x894 JUMPDEST
0x895 POP
0x896 MLOAD
0x897 PUSH1 0x40
0x899 DUP1
0x89a MLOAD
0x89b PUSH1 0xe0
0x89d PUSH1 0x2
0x89f EXP
0x8a0 PUSH4 0xffffffff
0x8a5 DUP7
0x8a6 AND
0x8a7 MUL
0x8a8 DUP2
0x8a9 MSTORE
0x8aa PUSH1 0x1
0x8ac PUSH1 0xa0
0x8ae PUSH1 0x2
0x8b0 EXP
0x8b1 SUB
0x8b2 SWAP1
0x8b3 SWAP4
0x8b4 AND
0x8b5 PUSH1 0x4
0x8b7 DUP5
0x8b8 ADD
0x8b9 MSTORE
0x8ba PUSH1 0x24
0x8bc DUP4
0x8bd ADD
0x8be SWAP2
0x8bf SWAP1
0x8c0 SWAP2
0x8c1 MSTORE
0x8c2 MLOAD
0x8c3 PUSH1 0x44
0x8c5 DUP1
0x8c6 DUP4
0x8c7 ADD
0x8c8 SWAP3
0x8c9 PUSH1 0x20
0x8cb SWAP3
0x8cc SWAP2
0x8cd SWAP1
0x8ce DUP3
0x8cf SWAP1
0x8d0 SUB
0x8d1 ADD
0x8d2 DUP2
0x8d3 PUSH1 0x0
0x8d5 DUP8
0x8d6 DUP1
0x8d7 EXTCODESIZE
0x8d8 ISZERO
0x8d9 DUP1
0x8da ISZERO
0x8db PUSH2 0x8e3
0x8de JUMPI
---
0x894: JUMPDEST 
0x896: V782 = M[V775]
0x897: V783 = 0x40
0x89a: V784 = M[0x40]
0x89b: V785 = 0xe0
0x89d: V786 = 0x2
0x89f: V787 = EXP 0x2 0xe0
0x8a0: V788 = 0xffffffff
0x8a6: V789 = AND 0xa9059cbb 0xffffffff
0x8a7: V790 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x8a9: M[V784] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8aa: V791 = 0x1
0x8ac: V792 = 0xa0
0x8ae: V793 = 0x2
0x8b0: V794 = EXP 0x2 0xa0
0x8b1: V795 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b4: V796 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x8b5: V797 = 0x4
0x8b8: V798 = ADD V784 0x4
0x8b9: M[V798] = V796
0x8ba: V799 = 0x24
0x8bd: V800 = ADD V784 0x24
0x8c1: M[V800] = V782
0x8c2: V801 = M[0x40]
0x8c3: V802 = 0x44
0x8c7: V803 = ADD V784 0x44
0x8c9: V804 = 0x20
0x8d0: V805 = SUB V784 V801
0x8d1: V806 = ADD V805 0x44
0x8d3: V807 = 0x0
0x8d7: V808 = EXTCODESIZE S4
0x8d8: V809 = ISZERO V808
0x8da: V810 = ISZERO V809
0x8db: V811 = 0x8e3
0x8de: JUMPI 0x8e3 V810
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S9, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V775, V776]
Stack pops: 5
Stack additions: [S4, S3, V803, 0x20, V801, V806, V801, 0x0, S4, V809]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S9, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, V803, 0x20, V801, V806, V801, 0x0, S4, V809]

================================

Block 0x8df
[0x8df:0x8e2]
---
Predecessors: [0x894]
Successors: []
---
0x8df PUSH1 0x0
0x8e1 DUP1
0x8e2 REVERT
---
0x8df: V812 = 0x0
0x8e2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S14, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V803, 0x20, V801, V806, V801, 0x0, S1, V809]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S14, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V803, 0x20, V801, V806, V801, 0x0, S1, V809]

================================

Block 0x8e3
[0x8e3:0x8ed]
---
Predecessors: [0x894]
Successors: [0x8ee, 0x8f7]
---
0x8e3 JUMPDEST
0x8e4 POP
0x8e5 GAS
0x8e6 CALL
0x8e7 ISZERO
0x8e8 DUP1
0x8e9 ISZERO
0x8ea PUSH2 0x8f7
0x8ed JUMPI
---
0x8e3: JUMPDEST 
0x8e5: V813 = GAS
0x8e6: V814 = CALL V813 S1 0x0 V801 V806 V801 0x20
0x8e7: V815 = ISZERO V814
0x8e9: V816 = ISZERO V815
0x8ea: V817 = 0x8f7
0x8ed: JUMPI 0x8f7 V816
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S14, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V803, 0x20, V801, V806, V801, 0x0, S1, V809]
Stack pops: 7
Stack additions: [V815]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S14, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V803, V815]

================================

Block 0x8ee
[0x8ee:0x8f6]
---
Predecessors: [0x8e3]
Successors: []
---
0x8ee RETURNDATASIZE
0x8ef PUSH1 0x0
0x8f1 DUP1
0x8f2 RETURNDATACOPY
0x8f3 RETURNDATASIZE
0x8f4 PUSH1 0x0
0x8f6 REVERT
---
0x8ee: V818 = RETURNDATASIZE
0x8ef: V819 = 0x0
0x8f2: RETURNDATACOPY 0x0 0x0 V818
0x8f3: V820 = RETURNDATASIZE
0x8f4: V821 = 0x0
0x8f6: REVERT 0x0 V820
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S8, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V815]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S8, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V815]

================================

Block 0x8f7
[0x8f7:0x908]
---
Predecessors: [0x8e3]
Successors: [0x909, 0x90d]
---
0x8f7 JUMPDEST
0x8f8 POP
0x8f9 POP
0x8fa POP
0x8fb POP
0x8fc PUSH1 0x40
0x8fe MLOAD
0x8ff RETURNDATASIZE
0x900 PUSH1 0x20
0x902 DUP2
0x903 LT
0x904 ISZERO
0x905 PUSH2 0x90d
0x908 JUMPI
---
0x8f7: JUMPDEST 
0x8fc: V822 = 0x40
0x8fe: V823 = M[0x40]
0x8ff: V824 = RETURNDATASIZE
0x900: V825 = 0x20
0x903: V826 = LT V824 0x20
0x904: V827 = ISZERO V826
0x905: V828 = 0x90d
0x908: JUMPI 0x90d V827
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S8, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V815]
Stack pops: 4
Stack additions: [V823, V824]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S8, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S4, V823, V824]

================================

Block 0x909
[0x909:0x90c]
---
Predecessors: [0x8f7]
Successors: []
---
0x909 PUSH1 0x0
0x90b DUP1
0x90c REVERT
---
0x909: V829 = 0x0
0x90c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S6, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S2, V823, V824]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S6, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S2, V823, V824]

================================

Block 0x90d
[0x90d:0x915]
---
Predecessors: [0x8f7]
Successors: [0x916, 0x91a]
---
0x90d JUMPDEST
0x90e POP
0x90f MLOAD
0x910 ISZERO
0x911 ISZERO
0x912 PUSH2 0x91a
0x915 JUMPI
---
0x90d: JUMPDEST 
0x90f: V830 = M[V823]
0x910: V831 = ISZERO V830
0x911: V832 = ISZERO V831
0x912: V833 = 0x91a
0x915: JUMPI 0x91a V832
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S6, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S2, V823, V824]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S6, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S2]

================================

Block 0x916
[0x916:0x919]
---
Predecessors: [0x90d]
Successors: []
---
0x916 PUSH1 0x0
0x918 DUP1
0x919 REVERT
---
0x916: V834 = 0x0
0x919: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x91a
[0x91a:0x949]
---
Predecessors: [0x90d]
Successors: [0x94a, 0x94e]
---
0x91a JUMPDEST
0x91b PUSH1 0x1
0x91d SLOAD
0x91e PUSH1 0x40
0x920 MLOAD
0x921 PUSH1 0x1
0x923 PUSH1 0xa0
0x925 PUSH1 0x2
0x927 EXP
0x928 SUB
0x929 SWAP1
0x92a SWAP2
0x92b AND
0x92c SWAP1
0x92d ADDRESS
0x92e BALANCE
0x92f DUP1
0x930 ISZERO
0x931 PUSH2 0x8fc
0x934 MUL
0x935 SWAP2
0x936 PUSH1 0x0
0x938 DUP2
0x939 DUP2
0x93a DUP2
0x93b DUP6
0x93c DUP9
0x93d DUP9
0x93e CALL
0x93f SWAP4
0x940 POP
0x941 POP
0x942 POP
0x943 POP
0x944 ISZERO
0x945 ISZERO
0x946 PUSH2 0x94e
0x949 JUMPI
---
0x91a: JUMPDEST 
0x91b: V835 = 0x1
0x91d: V836 = S[0x1]
0x91e: V837 = 0x40
0x920: V838 = M[0x40]
0x921: V839 = 0x1
0x923: V840 = 0xa0
0x925: V841 = 0x2
0x927: V842 = EXP 0x2 0xa0
0x928: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92b: V844 = AND V836 0xffffffffffffffffffffffffffffffffffffffff
0x92d: V845 = ADDRESS
0x92e: V846 = BALANCE V845
0x930: V847 = ISZERO V846
0x931: V848 = 0x8fc
0x934: V849 = MUL 0x8fc V847
0x936: V850 = 0x0
0x93e: V851 = CALL V849 V844 V846 V838 0x0 V838 0x0
0x944: V852 = ISZERO V851
0x945: V853 = ISZERO V852
0x946: V854 = 0x94e
0x949: JUMPI 0x94e V853
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x94a
[0x94a:0x94d]
---
Predecessors: [0x91a]
Successors: []
---
0x94a PUSH1 0x0
0x94c DUP1
0x94d REVERT
---
0x94a: V855 = 0x0
0x94d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x94e
[0x94e:0x956]
---
Predecessors: [0x91a]
Successors: [0x1b2, 0x2d3]
---
0x94e JUMPDEST
0x94f PUSH1 0x1
0x951 SWAP3
0x952 POP
0x953 POP
0x954 POP
0x955 SWAP1
0x956 JUMP
---
0x94e: JUMPDEST 
0x94f: V856 = 0x1
0x956: JUMP {0x1b2, 0x2d3}
---
Entry stack: [V13, 0xf9, {0x0, 0x1}, S4, {0x1b2, 0x2d3}, 0x0, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, 0xf9, {0x0, 0x1}, S4, 0x1]

================================

Block 0x957
[0x957:0x95c]
---
Predecessors: [0x211]
Successors: [0x128]
---
0x957 JUMPDEST
0x958 PUSH1 0x2
0x95a SLOAD
0x95b DUP2
0x95c JUMP
---
0x957: JUMPDEST 
0x958: V857 = 0x2
0x95a: V858 = S[0x2]
0x95c: JUMP 0x128
---
Entry stack: [V13, 0x128]
Stack pops: 1
Stack additions: [S0, V858]
Exit stack: [V13, 0x128, V858]

================================

Block 0x95d
[0x95d:0x962]
---
Predecessors: [0x226]
Successors: [0x128]
---
0x95d JUMPDEST
0x95e PUSH1 0x6
0x960 SLOAD
0x961 DUP2
0x962 JUMP
---
0x95d: JUMPDEST 
0x95e: V859 = 0x6
0x960: V860 = S[0x6]
0x962: JUMP 0x128
---
Entry stack: [V13, 0x128]
Stack pops: 1
Stack additions: [S0, V860]
Exit stack: [V13, 0x128, V860]

================================

Block 0x963
[0x963:0x971]
---
Predecessors: [0x23b]
Successors: [0xc8]
---
0x963 JUMPDEST
0x964 PUSH1 0x0
0x966 SLOAD
0x967 PUSH1 0x1
0x969 PUSH1 0xa0
0x96b PUSH1 0x2
0x96d EXP
0x96e SUB
0x96f AND
0x970 DUP2
0x971 JUMP
---
0x963: JUMPDEST 
0x964: V861 = 0x0
0x966: V862 = S[0x0]
0x967: V863 = 0x1
0x969: V864 = 0xa0
0x96b: V865 = 0x2
0x96d: V866 = EXP 0x2 0xa0
0x96e: V867 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96f: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0x971: JUMP 0xc8
---
Entry stack: [V13, 0xc8]
Stack pops: 1
Stack additions: [S0, V868]
Exit stack: [V13, 0xc8, V868]

================================

Block 0x972
[0x972:0x9a1]
---
Predecessors: []
Successors: []
---
0x972 STOP
0x973 LOG1
0x974 PUSH6 0x627a7a723058
0x97b SHA3
0x97c MISSING 0xc7
0x97d SAR
0x97e MISSING 0xa8
0x97f PUSH8 0x29176392c479ee86
0x988 DIV
0x989 MISSING 0xda
0x98a RETURNDATASIZE
0x98b MISSING 0x5e
0x98c MISSING 0xbf
0x98d PUSH5 0x44a34fd92f
0x993 LOG1
0x994 MLOAD
0x995 SDIV
0x996 MISSING 0xa8
0x997 PUSH10 0xc86245180029
---
0x972: STOP 
0x973: LOG S0 S1 S2
0x974: V869 = 0x627a7a723058
0x97b: V870 = SHA3 0x627a7a723058 S3
0x97c: MISSING 0xc7
0x97d: V871 = SAR S0 S1
0x97e: MISSING 0xa8
0x97f: V872 = 0x29176392c479ee86
0x988: V873 = DIV 0x29176392c479ee86 S0
0x989: MISSING 0xda
0x98a: V874 = RETURNDATASIZE
0x98b: MISSING 0x5e
0x98c: MISSING 0xbf
0x98d: V875 = 0x44a34fd92f
0x993: LOG 0x44a34fd92f S0 S1
0x994: V876 = M[S2]
0x995: V877 = SDIV V876 S3
0x996: MISSING 0xa8
0x997: V878 = 0xc86245180029
---
Entry stack: []
Stack pops: 0
Stack additions: [V870, V871, V873, V874, V877, 0xc86245180029]
Exit stack: []

================================

Function 0:
Public function signature: 0x14bfd6d0
Entry block: 0xb0
Exit block: 0xc8
Body: 0xb0, 0xb8, 0xbc, 0xc8, 0x244, 0x251, 0x252

Function 1:
Public function signature: 0x35a063b4
Entry block: 0xe4
Exit block: 0x2da
Body: 0xe4, 0xec, 0xf0, 0x26c, 0x270, 0x27e, 0x290, 0x291, 0x2ad, 0x2b3, 0x2bb, 0x2c7, 0x2cb, 0x2d3, 0x2da, 0x2de

Function 2:
Public function signature: 0x4783c35b
Entry block: 0xfb
Exit block: 0xc8
Body: 0xc8, 0xfb, 0x103, 0x107, 0x2ec

Function 3:
Public function signature: 0x53f754e0
Entry block: 0x110
Exit block: 0x71f
Body: 0x110, 0x118, 0x11c, 0x71f

Function 4:
Public function signature: 0x63037b0c
Entry block: 0x13a
Exit block: 0x152
Body: 0x13a, 0x142, 0x146, 0x152, 0x315, 0x322, 0x323

Function 5:
Public function signature: 0x66829b16
Entry block: 0x17c
Exit block: 0xf9
Body: 0xf9, 0x17c, 0x184, 0x188, 0x353, 0x357, 0x365, 0x377, 0x378, 0x394, 0x39a, 0x3a2, 0x3ae, 0x3b2

Function 6:
Public function signature: 0x6901f668
Entry block: 0x19d
Exit block: 0x1a5
Body: 0x19d, 0x1a5, 0x1a9, 0x1b2

Function 7:
Public function signature: 0x853828b6
Entry block: 0x1c6
Exit block: 0x75b
Body: 0xf9, 0x1c6, 0x1ce, 0x1d2, 0x5a8, 0x5ad, 0x5bb, 0x5cd, 0x5ce, 0x5ea, 0x5f0, 0x5f8, 0x604, 0x608, 0x610, 0x617, 0x61b, 0x620, 0x62b, 0x637, 0x638, 0x657, 0x65e, 0x664, 0x68b, 0x68c, 0x6bf, 0x710, 0x714, 0x71f, 0x728, 0x73a, 0x73e, 0x747, 0x74b, 0x75b, 0x75c, 0x77f, 0x78a

Function 8:
Public function signature: 0xba3f5a12
Entry block: 0x1db
Exit block: 0x128
Body: 0x128, 0x1db, 0x1e3, 0x1e7, 0x78f

Function 9:
Public function signature: 0xdb171211
Entry block: 0x1f0
Exit block: 0x1f8
Body: 0x1b2, 0x1f0, 0x1f8, 0x1fc

Function 10:
Public function signature: 0xe09adc70
Entry block: 0x205
Exit block: 0x128
Body: 0x128, 0x205, 0x20d, 0x211, 0x957

Function 11:
Public function signature: 0xeffd88b7
Entry block: 0x21a
Exit block: 0x128
Body: 0x128, 0x21a, 0x222, 0x226, 0x95d

Function 12:
Public function signature: 0xfc0c546a
Entry block: 0x22f
Exit block: 0xc8
Body: 0xc8, 0x22f, 0x237, 0x23b, 0x963

Function 13:
Public fallback function
Entry block: 0xab
Exit block: 0xab
Body: 0xab

Function 14:
Private function
Entry block: 0x3e3
Exit block: 0x5a1
Body: 0x3e3, 0x3e8, 0x3f3, 0x400, 0x41e, 0x449, 0x44f, 0x457, 0x4c7, 0x4db, 0x4f1, 0x4fc, 0x572, 0x586, 0x59c, 0x5a1

Function 15:
Private function
Entry block: 0x795
Exit block: 0x94e
Body: 0x795, 0x79a, 0x7a8, 0x7bb, 0x7d7, 0x7dd, 0x7e5, 0x7f5, 0x86a, 0x87e, 0x894, 0x8e3, 0x8f7, 0x90d, 0x91a, 0x94e

Function 16:
Private function
Entry block: 0x432
Exit block: 0x30e
Body: 0x2fb, 0x30e, 0x432

