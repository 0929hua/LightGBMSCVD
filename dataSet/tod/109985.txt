Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x111]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x111
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x111
0xc: JUMPI 0x111 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x11b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x11b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x11b
0x3f: JUMPI 0x11b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1a5]
---
0x40 DUP1
0x41 PUSH4 0x95ea7b3
0x46 EQ
0x47 PUSH2 0x1a5
0x4a JUMPI
---
0x41: V15 = 0x95ea7b3
0x46: V16 = EQ 0x95ea7b3 V11
0x47: V17 = 0x1a5
0x4a: JUMPI 0x1a5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1dd]
---
0x4b DUP1
0x4c PUSH4 0x18160ddd
0x51 EQ
0x52 PUSH2 0x1dd
0x55 JUMPI
---
0x4c: V18 = 0x18160ddd
0x51: V19 = EQ 0x18160ddd V11
0x52: V20 = 0x1dd
0x55: JUMPI 0x1dd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x204]
---
0x56 DUP1
0x57 PUSH4 0x23b872dd
0x5c EQ
0x5d PUSH2 0x204
0x60 JUMPI
---
0x57: V21 = 0x23b872dd
0x5c: V22 = EQ 0x23b872dd V11
0x5d: V23 = 0x204
0x60: JUMPI 0x204 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x22e]
---
0x61 DUP1
0x62 PUSH4 0x313ce567
0x67 EQ
0x68 PUSH2 0x22e
0x6b JUMPI
---
0x62: V24 = 0x313ce567
0x67: V25 = EQ 0x313ce567 V11
0x68: V26 = 0x22e
0x6b: JUMPI 0x22e V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x243]
---
0x6c DUP1
0x6d PUSH4 0x3ccfd60b
0x72 EQ
0x73 PUSH2 0x243
0x76 JUMPI
---
0x6d: V27 = 0x3ccfd60b
0x72: V28 = EQ 0x3ccfd60b V11
0x73: V29 = 0x243
0x76: JUMPI 0x243 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x258]
---
0x77 DUP1
0x78 PUSH4 0x3fa4f245
0x7d EQ
0x7e PUSH2 0x258
0x81 JUMPI
---
0x78: V30 = 0x3fa4f245
0x7d: V31 = EQ 0x3fa4f245 V11
0x7e: V32 = 0x258
0x81: JUMPI 0x258 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x26d]
---
0x82 DUP1
0x83 PUSH4 0x42966c68
0x88 EQ
0x89 PUSH2 0x26d
0x8c JUMPI
---
0x83: V33 = 0x42966c68
0x88: V34 = EQ 0x42966c68 V11
0x89: V35 = 0x26d
0x8c: JUMPI 0x26d V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x285]
---
0x8d DUP1
0x8e PUSH4 0x70a08231
0x93 EQ
0x94 PUSH2 0x285
0x97 JUMPI
---
0x8e: V36 = 0x70a08231
0x93: V37 = EQ 0x70a08231 V11
0x94: V38 = 0x285
0x97: JUMPI 0x285 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x2a6]
---
0x98 DUP1
0x99 PUSH4 0x95d89b41
0x9e EQ
0x9f PUSH2 0x2a6
0xa2 JUMPI
---
0x99: V39 = 0x95d89b41
0x9e: V40 = EQ 0x95d89b41 V11
0x9f: V41 = 0x2a6
0xa2: JUMPI 0x2a6 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x2bb]
---
0xa3 DUP1
0xa4 PUSH4 0x9b1cbccc
0xa9 EQ
0xaa PUSH2 0x2bb
0xad JUMPI
---
0xa4: V42 = 0x9b1cbccc
0xa9: V43 = EQ 0x9b1cbccc V11
0xaa: V44 = 0x2bb
0xad: JUMPI 0x2bb V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x2d0]
---
0xae DUP1
0xaf PUSH4 0xa9059cbb
0xb4 EQ
0xb5 PUSH2 0x2d0
0xb8 JUMPI
---
0xaf: V45 = 0xa9059cbb
0xb4: V46 = EQ 0xa9059cbb V11
0xb5: V47 = 0x2d0
0xb8: JUMPI 0x2d0 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x111]
---
0xb9 DUP1
0xba PUSH4 0xaa6ca808
0xbf EQ
0xc0 PUSH2 0x111
0xc3 JUMPI
---
0xba: V48 = 0xaa6ca808
0xbf: V49 = EQ 0xaa6ca808 V11
0xc0: V50 = 0x111
0xc3: JUMPI 0x111 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x2f4]
---
0xc4 DUP1
0xc5 PUSH4 0xc108d542
0xca EQ
0xcb PUSH2 0x2f4
0xce JUMPI
---
0xc5: V51 = 0xc108d542
0xca: V52 = EQ 0xc108d542 V11
0xcb: V53 = 0x2f4
0xce: JUMPI 0x2f4 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x309]
---
0xcf DUP1
0xd0 PUSH4 0xc489744b
0xd5 EQ
0xd6 PUSH2 0x309
0xd9 JUMPI
---
0xd0: V54 = 0xc489744b
0xd5: V55 = EQ 0xc489744b V11
0xd6: V56 = 0x309
0xd9: JUMPI 0x309 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x330]
---
0xda DUP1
0xdb PUSH4 0xd8a54360
0xe0 EQ
0xe1 PUSH2 0x330
0xe4 JUMPI
---
0xdb: V57 = 0xd8a54360
0xe0: V58 = EQ 0xd8a54360 V11
0xe1: V59 = 0x330
0xe4: JUMPI 0x330 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x345]
---
0xe5 DUP1
0xe6 PUSH4 0xdd62ed3e
0xeb EQ
0xec PUSH2 0x345
0xef JUMPI
---
0xe6: V60 = 0xdd62ed3e
0xeb: V61 = EQ 0xdd62ed3e V11
0xec: V62 = 0x345
0xef: JUMPI 0x345 V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x36c]
---
0xf0 DUP1
0xf1 PUSH4 0xe58fc54c
0xf6 EQ
0xf7 PUSH2 0x36c
0xfa JUMPI
---
0xf1: V63 = 0xe58fc54c
0xf6: V64 = EQ 0xe58fc54c V11
0xf7: V65 = 0x36c
0xfa: JUMPI 0x36c V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0xf0]
Successors: [0x106, 0x38d]
---
0xfb DUP1
0xfc PUSH4 0xefca2eed
0x101 EQ
0x102 PUSH2 0x38d
0x105 JUMPI
---
0xfc: V66 = 0xefca2eed
0x101: V67 = EQ 0xefca2eed V11
0x102: V68 = 0x38d
0x105: JUMPI 0x38d V67
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfb]
Successors: [0x111, 0x3a2]
---
0x106 DUP1
0x107 PUSH4 0xf2fde38b
0x10c EQ
0x10d PUSH2 0x3a2
0x110 JUMPI
---
0x107: V69 = 0xf2fde38b
0x10c: V70 = EQ 0xf2fde38b V11
0x10d: V71 = 0x3a2
0x110: JUMPI 0x3a2 V70
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x0, 0xb9, 0x106]
Successors: [0x3c3]
---
0x111 JUMPDEST
0x112 PUSH2 0x119
0x115 PUSH2 0x3c3
0x118 JUMP
---
0x111: JUMPDEST 
0x112: V72 = 0x119
0x115: V73 = 0x3c3
0x118: JUMP 0x3c3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x119]
Exit stack: [V11, 0x119]

================================

Block 0x119
[0x119:0x11a]
---
Predecessors: [0x53a, 0x806, 0x8a9, 0xa39, 0xd2c]
Successors: []
---
0x119 JUMPDEST
0x11a STOP
---
0x119: JUMPDEST 
0x11a: STOP 
---
Entry stack: [0x119, S10, {0x0, 0x119}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S10, {0x0, 0x119}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0xd]
Successors: [0x123, 0x127]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d DUP1
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11b: JUMPDEST 
0x11c: V74 = CALLVALUE
0x11e: V75 = ISZERO V74
0x11f: V76 = 0x127
0x122: JUMPI 0x127 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V11, V74]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11b]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V77 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V11, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V74]

================================

Block 0x127
[0x127:0x12f]
---
Predecessors: [0x11b]
Successors: [0x541]
---
0x127 JUMPDEST
0x128 POP
0x129 PUSH2 0x130
0x12c PUSH2 0x541
0x12f JUMP
---
0x127: JUMPDEST 
0x129: V78 = 0x130
0x12c: V79 = 0x541
0x12f: JUMP 0x541
---
Entry stack: [V11, V74]
Stack pops: 1
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x130
[0x130:0x151]
---
Predecessors: [0x541, 0x90a]
Successors: [0x152]
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x20
0x137 DUP1
0x138 DUP3
0x139 MSTORE
0x13a DUP4
0x13b MLOAD
0x13c DUP2
0x13d DUP4
0x13e ADD
0x13f MSTORE
0x140 DUP4
0x141 MLOAD
0x142 SWAP2
0x143 SWAP3
0x144 DUP4
0x145 SWAP3
0x146 SWAP1
0x147 DUP4
0x148 ADD
0x149 SWAP2
0x14a DUP6
0x14b ADD
0x14c SWAP1
0x14d DUP1
0x14e DUP4
0x14f DUP4
0x150 PUSH1 0x0
---
0x130: JUMPDEST 
0x131: V80 = 0x40
0x134: V81 = M[0x40]
0x135: V82 = 0x20
0x139: M[V81] = 0x20
0x13b: V83 = M[S0]
0x13e: V84 = ADD V81 0x20
0x13f: M[V84] = V83
0x141: V85 = M[S0]
0x148: V86 = ADD V81 0x40
0x14b: V87 = ADD S0 0x20
0x150: V88 = 0x0
---
Entry stack: [V11, 0x130, S0]
Stack pops: 1
Stack additions: [S0, V81, V81, V86, V87, V85, V85, V86, V87, 0x0]
Exit stack: [V11, 0x130, S0, V81, V81, V86, V87, V85, V85, V86, V87, 0x0]

================================

Block 0x152
[0x152:0x15a]
---
Predecessors: [0x130, 0x15b]
Successors: [0x15b, 0x16a]
---
0x152 JUMPDEST
0x153 DUP4
0x154 DUP2
0x155 LT
0x156 ISZERO
0x157 PUSH2 0x16a
0x15a JUMPI
---
0x152: JUMPDEST 
0x155: V89 = LT S0 V85
0x156: V90 = ISZERO V89
0x157: V91 = 0x16a
0x15a: JUMPI 0x16a V90
---
Entry stack: [V11, 0x130, S9, V81, V81, V86, V87, V85, V85, V86, V87, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x130, S9, V81, V81, V86, V87, V85, V85, V86, V87, S0]

================================

Block 0x15b
[0x15b:0x169]
---
Predecessors: [0x152]
Successors: [0x152]
---
0x15b DUP2
0x15c DUP2
0x15d ADD
0x15e MLOAD
0x15f DUP4
0x160 DUP3
0x161 ADD
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 PUSH2 0x152
0x169 JUMP
---
0x15d: V92 = ADD S0 V87
0x15e: V93 = M[V92]
0x161: V94 = ADD S0 V86
0x162: M[V94] = V93
0x163: V95 = 0x20
0x165: V96 = ADD 0x20 S0
0x166: V97 = 0x152
0x169: JUMP 0x152
---
Entry stack: [V11, 0x130, S9, V81, V81, V86, V87, V85, V85, V86, V87, S0]
Stack pops: 3
Stack additions: [S2, S1, V96]
Exit stack: [V11, 0x130, S9, V81, V81, V86, V87, V85, V85, V86, V87, V96]

================================

Block 0x16a
[0x16a:0x17d]
---
Predecessors: [0x152]
Successors: [0x17e, 0x197]
---
0x16a JUMPDEST
0x16b POP
0x16c POP
0x16d POP
0x16e POP
0x16f SWAP1
0x170 POP
0x171 SWAP1
0x172 DUP2
0x173 ADD
0x174 SWAP1
0x175 PUSH1 0x1f
0x177 AND
0x178 DUP1
0x179 ISZERO
0x17a PUSH2 0x197
0x17d JUMPI
---
0x16a: JUMPDEST 
0x173: V98 = ADD V85 V86
0x175: V99 = 0x1f
0x177: V100 = AND 0x1f V85
0x179: V101 = ISZERO V100
0x17a: V102 = 0x197
0x17d: JUMPI 0x197 V101
---
Entry stack: [V11, 0x130, S9, V81, V81, V86, V87, V85, V85, V86, V87, S0]
Stack pops: 7
Stack additions: [V98, V100]
Exit stack: [V11, 0x130, S9, V81, V81, V98, V100]

================================

Block 0x17e
[0x17e:0x196]
---
Predecessors: [0x16a]
Successors: [0x197]
---
0x17e DUP1
0x17f DUP3
0x180 SUB
0x181 DUP1
0x182 MLOAD
0x183 PUSH1 0x1
0x185 DUP4
0x186 PUSH1 0x20
0x188 SUB
0x189 PUSH2 0x100
0x18c EXP
0x18d SUB
0x18e NOT
0x18f AND
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
---
0x180: V103 = SUB V98 V100
0x182: V104 = M[V103]
0x183: V105 = 0x1
0x186: V106 = 0x20
0x188: V107 = SUB 0x20 V100
0x189: V108 = 0x100
0x18c: V109 = EXP 0x100 V107
0x18d: V110 = SUB V109 0x1
0x18e: V111 = NOT V110
0x18f: V112 = AND V111 V104
0x191: M[V103] = V112
0x192: V113 = 0x20
0x194: V114 = ADD 0x20 V103
---
Entry stack: [V11, 0x130, S4, V81, V81, V98, V100]
Stack pops: 2
Stack additions: [V114, S0]
Exit stack: [V11, 0x130, S4, V81, V81, V114, V100]

================================

Block 0x197
[0x197:0x1a4]
---
Predecessors: [0x16a, 0x17e]
Successors: []
---
0x197 JUMPDEST
0x198 POP
0x199 SWAP3
0x19a POP
0x19b POP
0x19c POP
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP1
0x1a1 SWAP2
0x1a2 SUB
0x1a3 SWAP1
0x1a4 RETURN
---
0x197: JUMPDEST 
0x19d: V115 = 0x40
0x19f: V116 = M[0x40]
0x1a2: V117 = SUB S1 V116
0x1a4: RETURN V116 V117
---
Entry stack: [V11, 0x130, S4, V81, V81, S1, V100]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x1a5
[0x1a5:0x1ac]
---
Predecessors: [0x40]
Successors: [0x1ad, 0x1b1]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 DUP1
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V118 = CALLVALUE
0x1a8: V119 = ISZERO V118
0x1a9: V120 = 0x1b1
0x1ac: JUMPI 0x1b1 V119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, V118]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V121 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V11, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V118]

================================

Block 0x1b1
[0x1b1:0x1c8]
---
Predecessors: [0x1a5]
Successors: [0x578]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 PUSH2 0x1c9
0x1b6 PUSH1 0x1
0x1b8 PUSH1 0xa0
0x1ba PUSH1 0x2
0x1bc EXP
0x1bd SUB
0x1be PUSH1 0x4
0x1c0 CALLDATALOAD
0x1c1 AND
0x1c2 PUSH1 0x24
0x1c4 CALLDATALOAD
0x1c5 PUSH2 0x578
0x1c8 JUMP
---
0x1b1: JUMPDEST 
0x1b3: V122 = 0x1c9
0x1b6: V123 = 0x1
0x1b8: V124 = 0xa0
0x1ba: V125 = 0x2
0x1bc: V126 = EXP 0x2 0xa0
0x1bd: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V128 = 0x4
0x1c0: V129 = CALLDATALOAD 0x4
0x1c1: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V131 = 0x24
0x1c4: V132 = CALLDATALOAD 0x24
0x1c5: V133 = 0x578
0x1c8: JUMP 0x578
---
Entry stack: [V11, V118]
Stack pops: 1
Stack additions: [0x1c9, V130, V132]
Exit stack: [V11, 0x1c9, V130, V132]

================================

Block 0x1c9
[0x1c9:0x1dc]
---
Predecessors: [0x53a, 0x61a, 0x749, 0x96b, 0xa39, 0xa98, 0xccd, 0xd53, 0xd68]
Successors: []
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x40
0x1cc DUP1
0x1cd MLOAD
0x1ce SWAP2
0x1cf ISZERO
0x1d0 ISZERO
0x1d1 DUP3
0x1d2 MSTORE
0x1d3 MLOAD
0x1d4 SWAP1
0x1d5 DUP2
0x1d6 SWAP1
0x1d7 SUB
0x1d8 PUSH1 0x20
0x1da ADD
0x1db SWAP1
0x1dc RETURN
---
0x1c9: JUMPDEST 
0x1ca: V134 = 0x40
0x1cd: V135 = M[0x40]
0x1cf: V136 = ISZERO S0
0x1d0: V137 = ISZERO V136
0x1d2: M[V135] = V137
0x1d3: V138 = M[0x40]
0x1d7: V139 = SUB V135 V138
0x1d8: V140 = 0x20
0x1da: V141 = ADD 0x20 V139
0x1dc: RETURN V138 V141
---
Entry stack: [0x119, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x119, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1dd
[0x1dd:0x1e4]
---
Predecessors: [0x4b]
Successors: [0x1e5, 0x1e9]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df DUP1
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V142 = CALLVALUE
0x1e0: V143 = ISZERO V142
0x1e1: V144 = 0x1e9
0x1e4: JUMPI 0x1e9 V143
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V142]
Exit stack: [V11, V142]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V145 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V11, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V142]

================================

Block 0x1e9
[0x1e9:0x1f1]
---
Predecessors: [0x1dd]
Successors: [0x620]
---
0x1e9 JUMPDEST
0x1ea POP
0x1eb PUSH2 0x1f2
0x1ee PUSH2 0x620
0x1f1 JUMP
---
0x1e9: JUMPDEST 
0x1eb: V146 = 0x1f2
0x1ee: V147 = 0x620
0x1f1: JUMP 0x620
---
Entry stack: [V11, V142]
Stack pops: 1
Stack additions: [0x1f2]
Exit stack: [V11, 0x1f2]

================================

Block 0x1f2
[0x1f2:0x203]
---
Predecessors: [0x620, 0x7ab, 0x80a, 0x8ef, 0xb47, 0xb52, 0xb58, 0xcd7]
Successors: []
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x40
0x1f5 DUP1
0x1f6 MLOAD
0x1f7 SWAP2
0x1f8 DUP3
0x1f9 MSTORE
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd SWAP1
0x1fe SUB
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP1
0x203 RETURN
---
0x1f2: JUMPDEST 
0x1f3: V148 = 0x40
0x1f6: V149 = M[0x40]
0x1f9: M[V149] = S0
0x1fa: V150 = M[0x40]
0x1fe: V151 = SUB V149 V150
0x1ff: V152 = 0x20
0x201: V153 = ADD 0x20 V151
0x203: RETURN V150 V153
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x204
[0x204:0x20b]
---
Predecessors: [0x56]
Successors: [0x20c, 0x210]
---
0x204 JUMPDEST
0x205 CALLVALUE
0x206 DUP1
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x204: JUMPDEST 
0x205: V154 = CALLVALUE
0x207: V155 = ISZERO V154
0x208: V156 = 0x210
0x20b: JUMPI 0x210 V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x204]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V157 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x210
[0x210:0x22d]
---
Predecessors: [0x204]
Successors: [0x626]
---
0x210 JUMPDEST
0x211 POP
0x212 PUSH2 0x1c9
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d PUSH1 0x4
0x21f CALLDATALOAD
0x220 DUP2
0x221 AND
0x222 SWAP1
0x223 PUSH1 0x24
0x225 CALLDATALOAD
0x226 AND
0x227 PUSH1 0x44
0x229 CALLDATALOAD
0x22a PUSH2 0x626
0x22d JUMP
---
0x210: JUMPDEST 
0x212: V158 = 0x1c9
0x215: V159 = 0x1
0x217: V160 = 0xa0
0x219: V161 = 0x2
0x21b: V162 = EXP 0x2 0xa0
0x21c: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V164 = 0x4
0x21f: V165 = CALLDATALOAD 0x4
0x221: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x223: V167 = 0x24
0x225: V168 = CALLDATALOAD 0x24
0x226: V169 = AND V168 0xffffffffffffffffffffffffffffffffffffffff
0x227: V170 = 0x44
0x229: V171 = CALLDATALOAD 0x44
0x22a: V172 = 0x626
0x22d: JUMP 0x626
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0x1c9, V166, V169, V171]
Exit stack: [V11, 0x1c9, V166, V169, V171]

================================

Block 0x22e
[0x22e:0x235]
---
Predecessors: [0x61]
Successors: [0x236, 0x23a]
---
0x22e JUMPDEST
0x22f CALLVALUE
0x230 DUP1
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x22e: JUMPDEST 
0x22f: V173 = CALLVALUE
0x231: V174 = ISZERO V173
0x232: V175 = 0x23a
0x235: JUMPI 0x23a V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V11, V173]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x22e]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V176 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V11, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V173]

================================

Block 0x23a
[0x23a:0x242]
---
Predecessors: [0x22e]
Successors: [0x7ab]
---
0x23a JUMPDEST
0x23b POP
0x23c PUSH2 0x1f2
0x23f PUSH2 0x7ab
0x242 JUMP
---
0x23a: JUMPDEST 
0x23c: V177 = 0x1f2
0x23f: V178 = 0x7ab
0x242: JUMP 0x7ab
---
Entry stack: [V11, V173]
Stack pops: 1
Stack additions: [0x1f2]
Exit stack: [V11, 0x1f2]

================================

Block 0x243
[0x243:0x24a]
---
Predecessors: [0x6c]
Successors: [0x24b, 0x24f]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 DUP1
0x246 ISZERO
0x247 PUSH2 0x24f
0x24a JUMPI
---
0x243: JUMPDEST 
0x244: V179 = CALLVALUE
0x246: V180 = ISZERO V179
0x247: V181 = 0x24f
0x24a: JUMPI 0x24f V180
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V11, V179]

================================

Block 0x24b
[0x24b:0x24e]
---
Predecessors: [0x243]
Successors: []
---
0x24b PUSH1 0x0
0x24d DUP1
0x24e REVERT
---
0x24b: V182 = 0x0
0x24e: REVERT 0x0 0x0
---
Entry stack: [V11, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V179]

================================

Block 0x24f
[0x24f:0x257]
---
Predecessors: [0x243]
Successors: [0x7b0]
---
0x24f JUMPDEST
0x250 POP
0x251 PUSH2 0x119
0x254 PUSH2 0x7b0
0x257 JUMP
---
0x24f: JUMPDEST 
0x251: V183 = 0x119
0x254: V184 = 0x7b0
0x257: JUMP 0x7b0
---
Entry stack: [V11, V179]
Stack pops: 1
Stack additions: [0x119]
Exit stack: [V11, 0x119]

================================

Block 0x258
[0x258:0x25f]
---
Predecessors: [0x77]
Successors: [0x260, 0x264]
---
0x258 JUMPDEST
0x259 CALLVALUE
0x25a DUP1
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x258: JUMPDEST 
0x259: V185 = CALLVALUE
0x25b: V186 = ISZERO V185
0x25c: V187 = 0x264
0x25f: JUMPI 0x264 V186
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V185]
Exit stack: [V11, V185]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x258]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V188 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V11, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V185]

================================

Block 0x264
[0x264:0x26c]
---
Predecessors: [0x258]
Successors: [0x80a]
---
0x264 JUMPDEST
0x265 POP
0x266 PUSH2 0x1f2
0x269 PUSH2 0x80a
0x26c JUMP
---
0x264: JUMPDEST 
0x266: V189 = 0x1f2
0x269: V190 = 0x80a
0x26c: JUMP 0x80a
---
Entry stack: [V11, V185]
Stack pops: 1
Stack additions: [0x1f2]
Exit stack: [V11, 0x1f2]

================================

Block 0x26d
[0x26d:0x274]
---
Predecessors: [0x82]
Successors: [0x275, 0x279]
---
0x26d JUMPDEST
0x26e CALLVALUE
0x26f DUP1
0x270 ISZERO
0x271 PUSH2 0x279
0x274 JUMPI
---
0x26d: JUMPDEST 
0x26e: V191 = CALLVALUE
0x270: V192 = ISZERO V191
0x271: V193 = 0x279
0x274: JUMPI 0x279 V192
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V11, V191]

================================

Block 0x275
[0x275:0x278]
---
Predecessors: [0x26d]
Successors: []
---
0x275 PUSH1 0x0
0x277 DUP1
0x278 REVERT
---
0x275: V194 = 0x0
0x278: REVERT 0x0 0x0
---
Entry stack: [V11, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V191]

================================

Block 0x279
[0x279:0x284]
---
Predecessors: [0x26d]
Successors: [0x810]
---
0x279 JUMPDEST
0x27a POP
0x27b PUSH2 0x119
0x27e PUSH1 0x4
0x280 CALLDATALOAD
0x281 PUSH2 0x810
0x284 JUMP
---
0x279: JUMPDEST 
0x27b: V195 = 0x119
0x27e: V196 = 0x4
0x280: V197 = CALLDATALOAD 0x4
0x281: V198 = 0x810
0x284: JUMP 0x810
---
Entry stack: [V11, V191]
Stack pops: 1
Stack additions: [0x119, V197]
Exit stack: [V11, 0x119, V197]

================================

Block 0x285
[0x285:0x28c]
---
Predecessors: [0x8d]
Successors: [0x28d, 0x291]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 DUP1
0x288 ISZERO
0x289 PUSH2 0x291
0x28c JUMPI
---
0x285: JUMPDEST 
0x286: V199 = CALLVALUE
0x288: V200 = ISZERO V199
0x289: V201 = 0x291
0x28c: JUMPI 0x291 V200
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V199]
Exit stack: [V11, V199]

================================

Block 0x28d
[0x28d:0x290]
---
Predecessors: [0x285]
Successors: []
---
0x28d PUSH1 0x0
0x28f DUP1
0x290 REVERT
---
0x28d: V202 = 0x0
0x290: REVERT 0x0 0x0
---
Entry stack: [V11, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V199]

================================

Block 0x291
[0x291:0x2a5]
---
Predecessors: [0x285]
Successors: [0x8ef]
---
0x291 JUMPDEST
0x292 POP
0x293 PUSH2 0x1f2
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e PUSH1 0x4
0x2a0 CALLDATALOAD
0x2a1 AND
0x2a2 PUSH2 0x8ef
0x2a5 JUMP
---
0x291: JUMPDEST 
0x293: V203 = 0x1f2
0x296: V204 = 0x1
0x298: V205 = 0xa0
0x29a: V206 = 0x2
0x29c: V207 = EXP 0x2 0xa0
0x29d: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29e: V209 = 0x4
0x2a0: V210 = CALLDATALOAD 0x4
0x2a1: V211 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x2a2: V212 = 0x8ef
0x2a5: JUMP 0x8ef
---
Entry stack: [V11, V199]
Stack pops: 1
Stack additions: [0x1f2, V211]
Exit stack: [V11, 0x1f2, V211]

================================

Block 0x2a6
[0x2a6:0x2ad]
---
Predecessors: [0x98]
Successors: [0x2ae, 0x2b2]
---
0x2a6 JUMPDEST
0x2a7 CALLVALUE
0x2a8 DUP1
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V213 = CALLVALUE
0x2a9: V214 = ISZERO V213
0x2aa: V215 = 0x2b2
0x2ad: JUMPI 0x2b2 V214
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V213]
Exit stack: [V11, V213]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x2a6]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V216 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V11, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V213]

================================

Block 0x2b2
[0x2b2:0x2ba]
---
Predecessors: [0x2a6]
Successors: [0x90a]
---
0x2b2 JUMPDEST
0x2b3 POP
0x2b4 PUSH2 0x130
0x2b7 PUSH2 0x90a
0x2ba JUMP
---
0x2b2: JUMPDEST 
0x2b4: V217 = 0x130
0x2b7: V218 = 0x90a
0x2ba: JUMP 0x90a
---
Entry stack: [V11, V213]
Stack pops: 1
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x2bb
[0x2bb:0x2c2]
---
Predecessors: [0xa3]
Successors: [0x2c3, 0x2c7]
---
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd DUP1
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V219 = CALLVALUE
0x2be: V220 = ISZERO V219
0x2bf: V221 = 0x2c7
0x2c2: JUMPI 0x2c7 V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V219]
Exit stack: [V11, V219]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V222 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V11, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V219]

================================

Block 0x2c7
[0x2c7:0x2cf]
---
Predecessors: [0x2bb]
Successors: [0x941]
---
0x2c7 JUMPDEST
0x2c8 POP
0x2c9 PUSH2 0x1c9
0x2cc PUSH2 0x941
0x2cf JUMP
---
0x2c7: JUMPDEST 
0x2c9: V223 = 0x1c9
0x2cc: V224 = 0x941
0x2cf: JUMP 0x941
---
Entry stack: [V11, V219]
Stack pops: 1
Stack additions: [0x1c9]
Exit stack: [V11, 0x1c9]

================================

Block 0x2d0
[0x2d0:0x2d7]
---
Predecessors: [0xae]
Successors: [0x2d8, 0x2dc]
---
0x2d0 JUMPDEST
0x2d1 CALLVALUE
0x2d2 DUP1
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2d0: JUMPDEST 
0x2d1: V225 = CALLVALUE
0x2d3: V226 = ISZERO V225
0x2d4: V227 = 0x2dc
0x2d7: JUMPI 0x2dc V226
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V225]
Exit stack: [V11, V225]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2d0]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V228 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V11, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V225]

================================

Block 0x2dc
[0x2dc:0x2f3]
---
Predecessors: [0x2d0]
Successors: [0x9a7]
---
0x2dc JUMPDEST
0x2dd POP
0x2de PUSH2 0x1c9
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 PUSH1 0x4
0x2eb CALLDATALOAD
0x2ec AND
0x2ed PUSH1 0x24
0x2ef CALLDATALOAD
0x2f0 PUSH2 0x9a7
0x2f3 JUMP
---
0x2dc: JUMPDEST 
0x2de: V229 = 0x1c9
0x2e1: V230 = 0x1
0x2e3: V231 = 0xa0
0x2e5: V232 = 0x2
0x2e7: V233 = EXP 0x2 0xa0
0x2e8: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e9: V235 = 0x4
0x2eb: V236 = CALLDATALOAD 0x4
0x2ec: V237 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V238 = 0x24
0x2ef: V239 = CALLDATALOAD 0x24
0x2f0: V240 = 0x9a7
0x2f3: JUMP 0x9a7
---
Entry stack: [V11, V225]
Stack pops: 1
Stack additions: [0x1c9, V237, V239]
Exit stack: [V11, 0x1c9, V237, V239]

================================

Block 0x2f4
[0x2f4:0x2fb]
---
Predecessors: [0xc4]
Successors: [0x2fc, 0x300]
---
0x2f4 JUMPDEST
0x2f5 CALLVALUE
0x2f6 DUP1
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V241 = CALLVALUE
0x2f7: V242 = ISZERO V241
0x2f8: V243 = 0x300
0x2fb: JUMPI 0x300 V242
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V241]
Exit stack: [V11, V241]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2f4]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V244 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V11, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V241]

================================

Block 0x300
[0x300:0x308]
---
Predecessors: [0x2f4]
Successors: [0xa98]
---
0x300 JUMPDEST
0x301 POP
0x302 PUSH2 0x1c9
0x305 PUSH2 0xa98
0x308 JUMP
---
0x300: JUMPDEST 
0x302: V245 = 0x1c9
0x305: V246 = 0xa98
0x308: JUMP 0xa98
---
Entry stack: [V11, V241]
Stack pops: 1
Stack additions: [0x1c9]
Exit stack: [V11, 0x1c9]

================================

Block 0x309
[0x309:0x310]
---
Predecessors: [0xcf]
Successors: [0x311, 0x315]
---
0x309 JUMPDEST
0x30a CALLVALUE
0x30b DUP1
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x309: JUMPDEST 
0x30a: V247 = CALLVALUE
0x30c: V248 = ISZERO V247
0x30d: V249 = 0x315
0x310: JUMPI 0x315 V248
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V247]
Exit stack: [V11, V247]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x309]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V250 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V11, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V247]

================================

Block 0x315
[0x315:0x32f]
---
Predecessors: [0x309]
Successors: [0xaa1]
---
0x315 JUMPDEST
0x316 POP
0x317 PUSH2 0x1f2
0x31a PUSH1 0x1
0x31c PUSH1 0xa0
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 PUSH1 0x4
0x324 CALLDATALOAD
0x325 DUP2
0x326 AND
0x327 SWAP1
0x328 PUSH1 0x24
0x32a CALLDATALOAD
0x32b AND
0x32c PUSH2 0xaa1
0x32f JUMP
---
0x315: JUMPDEST 
0x317: V251 = 0x1f2
0x31a: V252 = 0x1
0x31c: V253 = 0xa0
0x31e: V254 = 0x2
0x320: V255 = EXP 0x2 0xa0
0x321: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V257 = 0x4
0x324: V258 = CALLDATALOAD 0x4
0x326: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x328: V260 = 0x24
0x32a: V261 = CALLDATALOAD 0x24
0x32b: V262 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V263 = 0xaa1
0x32f: JUMP 0xaa1
---
Entry stack: [V11, V247]
Stack pops: 1
Stack additions: [0x1f2, V259, V262]
Exit stack: [V11, 0x1f2, V259, V262]

================================

Block 0x330
[0x330:0x337]
---
Predecessors: [0xda]
Successors: [0x338, 0x33c]
---
0x330 JUMPDEST
0x331 CALLVALUE
0x332 DUP1
0x333 ISZERO
0x334 PUSH2 0x33c
0x337 JUMPI
---
0x330: JUMPDEST 
0x331: V264 = CALLVALUE
0x333: V265 = ISZERO V264
0x334: V266 = 0x33c
0x337: JUMPI 0x33c V265
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V264]
Exit stack: [V11, V264]

================================

Block 0x338
[0x338:0x33b]
---
Predecessors: [0x330]
Successors: []
---
0x338 PUSH1 0x0
0x33a DUP1
0x33b REVERT
---
0x338: V267 = 0x0
0x33b: REVERT 0x0 0x0
---
Entry stack: [V11, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V264]

================================

Block 0x33c
[0x33c:0x344]
---
Predecessors: [0x330]
Successors: [0xb52]
---
0x33c JUMPDEST
0x33d POP
0x33e PUSH2 0x1f2
0x341 PUSH2 0xb52
0x344 JUMP
---
0x33c: JUMPDEST 
0x33e: V268 = 0x1f2
0x341: V269 = 0xb52
0x344: JUMP 0xb52
---
Entry stack: [V11, V264]
Stack pops: 1
Stack additions: [0x1f2]
Exit stack: [V11, 0x1f2]

================================

Block 0x345
[0x345:0x34c]
---
Predecessors: [0xe5]
Successors: [0x34d, 0x351]
---
0x345 JUMPDEST
0x346 CALLVALUE
0x347 DUP1
0x348 ISZERO
0x349 PUSH2 0x351
0x34c JUMPI
---
0x345: JUMPDEST 
0x346: V270 = CALLVALUE
0x348: V271 = ISZERO V270
0x349: V272 = 0x351
0x34c: JUMPI 0x351 V271
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V270]
Exit stack: [V11, V270]

================================

Block 0x34d
[0x34d:0x350]
---
Predecessors: [0x345]
Successors: []
---
0x34d PUSH1 0x0
0x34f DUP1
0x350 REVERT
---
0x34d: V273 = 0x0
0x350: REVERT 0x0 0x0
---
Entry stack: [V11, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V270]

================================

Block 0x351
[0x351:0x36b]
---
Predecessors: [0x345]
Successors: [0xb58]
---
0x351 JUMPDEST
0x352 POP
0x353 PUSH2 0x1f2
0x356 PUSH1 0x1
0x358 PUSH1 0xa0
0x35a PUSH1 0x2
0x35c EXP
0x35d SUB
0x35e PUSH1 0x4
0x360 CALLDATALOAD
0x361 DUP2
0x362 AND
0x363 SWAP1
0x364 PUSH1 0x24
0x366 CALLDATALOAD
0x367 AND
0x368 PUSH2 0xb58
0x36b JUMP
---
0x351: JUMPDEST 
0x353: V274 = 0x1f2
0x356: V275 = 0x1
0x358: V276 = 0xa0
0x35a: V277 = 0x2
0x35c: V278 = EXP 0x2 0xa0
0x35d: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35e: V280 = 0x4
0x360: V281 = CALLDATALOAD 0x4
0x362: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x364: V283 = 0x24
0x366: V284 = CALLDATALOAD 0x24
0x367: V285 = AND V284 0xffffffffffffffffffffffffffffffffffffffff
0x368: V286 = 0xb58
0x36b: JUMP 0xb58
---
Entry stack: [V11, V270]
Stack pops: 1
Stack additions: [0x1f2, V282, V285]
Exit stack: [V11, 0x1f2, V282, V285]

================================

Block 0x36c
[0x36c:0x373]
---
Predecessors: [0xf0]
Successors: [0x374, 0x378]
---
0x36c JUMPDEST
0x36d CALLVALUE
0x36e DUP1
0x36f ISZERO
0x370 PUSH2 0x378
0x373 JUMPI
---
0x36c: JUMPDEST 
0x36d: V287 = CALLVALUE
0x36f: V288 = ISZERO V287
0x370: V289 = 0x378
0x373: JUMPI 0x378 V288
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V287]
Exit stack: [V11, V287]

================================

Block 0x374
[0x374:0x377]
---
Predecessors: [0x36c]
Successors: []
---
0x374 PUSH1 0x0
0x376 DUP1
0x377 REVERT
---
0x374: V290 = 0x0
0x377: REVERT 0x0 0x0
---
Entry stack: [V11, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V287]

================================

Block 0x378
[0x378:0x38c]
---
Predecessors: [0x36c]
Successors: [0xb83]
---
0x378 JUMPDEST
0x379 POP
0x37a PUSH2 0x1c9
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 PUSH1 0x4
0x387 CALLDATALOAD
0x388 AND
0x389 PUSH2 0xb83
0x38c JUMP
---
0x378: JUMPDEST 
0x37a: V291 = 0x1c9
0x37d: V292 = 0x1
0x37f: V293 = 0xa0
0x381: V294 = 0x2
0x383: V295 = EXP 0x2 0xa0
0x384: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x385: V297 = 0x4
0x387: V298 = CALLDATALOAD 0x4
0x388: V299 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x389: V300 = 0xb83
0x38c: JUMP 0xb83
---
Entry stack: [V11, V287]
Stack pops: 1
Stack additions: [0x1c9, V299]
Exit stack: [V11, 0x1c9, V299]

================================

Block 0x38d
[0x38d:0x394]
---
Predecessors: [0xfb]
Successors: [0x395, 0x399]
---
0x38d JUMPDEST
0x38e CALLVALUE
0x38f DUP1
0x390 ISZERO
0x391 PUSH2 0x399
0x394 JUMPI
---
0x38d: JUMPDEST 
0x38e: V301 = CALLVALUE
0x390: V302 = ISZERO V301
0x391: V303 = 0x399
0x394: JUMPI 0x399 V302
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V301]
Exit stack: [V11, V301]

================================

Block 0x395
[0x395:0x398]
---
Predecessors: [0x38d]
Successors: []
---
0x395 PUSH1 0x0
0x397 DUP1
0x398 REVERT
---
0x395: V304 = 0x0
0x398: REVERT 0x0 0x0
---
Entry stack: [V11, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V301]

================================

Block 0x399
[0x399:0x3a1]
---
Predecessors: [0x38d]
Successors: [0xcd7]
---
0x399 JUMPDEST
0x39a POP
0x39b PUSH2 0x1f2
0x39e PUSH2 0xcd7
0x3a1 JUMP
---
0x399: JUMPDEST 
0x39b: V305 = 0x1f2
0x39e: V306 = 0xcd7
0x3a1: JUMP 0xcd7
---
Entry stack: [V11, V301]
Stack pops: 1
Stack additions: [0x1f2]
Exit stack: [V11, 0x1f2]

================================

Block 0x3a2
[0x3a2:0x3a9]
---
Predecessors: [0x106]
Successors: [0x3aa, 0x3ae]
---
0x3a2 JUMPDEST
0x3a3 CALLVALUE
0x3a4 DUP1
0x3a5 ISZERO
0x3a6 PUSH2 0x3ae
0x3a9 JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V307 = CALLVALUE
0x3a5: V308 = ISZERO V307
0x3a6: V309 = 0x3ae
0x3a9: JUMPI 0x3ae V308
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V307]
Exit stack: [V11, V307]

================================

Block 0x3aa
[0x3aa:0x3ad]
---
Predecessors: [0x3a2]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad REVERT
---
0x3aa: V310 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V11, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V307]

================================

Block 0x3ae
[0x3ae:0x3c2]
---
Predecessors: [0x3a2]
Successors: [0xcdd]
---
0x3ae JUMPDEST
0x3af POP
0x3b0 PUSH2 0x119
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb PUSH1 0x4
0x3bd CALLDATALOAD
0x3be AND
0x3bf PUSH2 0xcdd
0x3c2 JUMP
---
0x3ae: JUMPDEST 
0x3b0: V311 = 0x119
0x3b3: V312 = 0x1
0x3b5: V313 = 0xa0
0x3b7: V314 = 0x2
0x3b9: V315 = EXP 0x2 0xa0
0x3ba: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bb: V317 = 0x4
0x3bd: V318 = CALLDATALOAD 0x4
0x3be: V319 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V320 = 0xcdd
0x3c2: JUMP 0xcdd
---
Entry stack: [V11, V307]
Stack pops: 1
Stack additions: [0x119, V319]
Exit stack: [V11, 0x119, V319]

================================

Block 0x3c3
[0x3c3:0x3d3]
---
Predecessors: [0x111]
Successors: [0x3d4, 0x3d8]
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x8
0x3c6 SLOAD
0x3c7 PUSH1 0x0
0x3c9 SWAP1
0x3ca DUP2
0x3cb SWAP1
0x3cc PUSH1 0xff
0x3ce AND
0x3cf ISZERO
0x3d0 PUSH2 0x3d8
0x3d3 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V321 = 0x8
0x3c6: V322 = S[0x8]
0x3c7: V323 = 0x0
0x3cc: V324 = 0xff
0x3ce: V325 = AND 0xff V322
0x3cf: V326 = ISZERO V325
0x3d0: V327 = 0x3d8
0x3d3: JUMPI 0x3d8 V326
---
Entry stack: [V11, 0x119]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x119, 0x0, 0x0]

================================

Block 0x3d4
[0x3d4:0x3d7]
---
Predecessors: [0x3c3]
Successors: []
---
0x3d4 PUSH1 0x0
0x3d6 DUP1
0x3d7 REVERT
---
0x3d4: V328 = 0x0
0x3d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, 0x0, 0x0]

================================

Block 0x3d8
[0x3d8:0x3ec]
---
Predecessors: [0x3c3]
Successors: [0x3ed, 0x494]
---
0x3d8 JUMPDEST
0x3d9 PUSH1 0x7
0x3db SLOAD
0x3dc SWAP2
0x3dd POP
0x3de PUSH7 0x2386f26fc10000
0x3e6 CALLVALUE
0x3e7 GT
0x3e8 ISZERO
0x3e9 PUSH2 0x494
0x3ec JUMPI
---
0x3d8: JUMPDEST 
0x3d9: V329 = 0x7
0x3db: V330 = S[0x7]
0x3de: V331 = 0x2386f26fc10000
0x3e6: V332 = CALLVALUE
0x3e7: V333 = GT V332 0x2386f26fc10000
0x3e8: V334 = ISZERO V333
0x3e9: V335 = 0x494
0x3ec: JUMPI 0x494 V334
---
Entry stack: [V11, 0x119, 0x0, 0x0]
Stack pops: 2
Stack additions: [V330, S0]
Exit stack: [V11, 0x119, V330, 0x0]

================================

Block 0x3ed
[0x3ed:0x412]
---
Predecessors: [0x3d8]
Successors: [0xd2f]
---
0x3ed PUSH2 0x42b
0x3f0 PUSH8 0xde0b6b3a7640000
0x3f9 PUSH2 0x41f
0x3fc CALLVALUE
0x3fd PUSH2 0x413
0x400 PUSH2 0xfa0
0x403 PUSH1 0x7
0x405 SLOAD
0x406 PUSH2 0xd2f
0x409 SWAP1
0x40a SWAP2
0x40b SWAP1
0x40c PUSH4 0xffffffff
0x411 AND
0x412 JUMP
---
0x3ed: V336 = 0x42b
0x3f0: V337 = 0xde0b6b3a7640000
0x3f9: V338 = 0x41f
0x3fc: V339 = CALLVALUE
0x3fd: V340 = 0x413
0x400: V341 = 0xfa0
0x403: V342 = 0x7
0x405: V343 = S[0x7]
0x406: V344 = 0xd2f
0x40c: V345 = 0xffffffff
0x411: V346 = AND 0xffffffff 0xd2f
0x412: JUMP 0xd2f
---
Entry stack: [V11, 0x119, V330, 0x0]
Stack pops: 0
Stack additions: [0x42b, 0xde0b6b3a7640000, 0x41f, V339, 0x413, V343, 0xfa0]
Exit stack: [V11, 0x119, V330, 0x0, 0x42b, 0xde0b6b3a7640000, 0x41f, V339, 0x413, V343, 0xfa0]

================================

Block 0x413
[0x413:0x41e]
---
Predecessors: [0xd53, 0xd68]
Successors: [0xd2f]
---
0x413 JUMPDEST
0x414 SWAP1
0x415 PUSH4 0xffffffff
0x41a PUSH2 0xd2f
0x41d AND
0x41e JUMP
---
0x413: JUMPDEST 
0x415: V347 = 0xffffffff
0x41a: V348 = 0xd2f
0x41d: V349 = AND 0xd2f 0xffffffff
0x41e: JUMP 0xd2f
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x41f
[0x41f:0x42a]
---
Predecessors: [0x61a, 0x749, 0xd53, 0xd68]
Successors: [0xd5a]
---
0x41f JUMPDEST
0x420 SWAP1
0x421 PUSH4 0xffffffff
0x426 PUSH2 0xd5a
0x429 AND
0x42a JUMP
---
0x41f: JUMPDEST 
0x421: V350 = 0xffffffff
0x426: V351 = 0xd5a
0x429: V352 = AND 0xd5a 0xffffffff
0x42a: JUMP 0xd5a
---
Entry stack: [0x119, S16, {0x0, 0x119}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [0x119, S16, {0x0, 0x119}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x42b
[0x42b:0x464]
---
Predecessors: [0x61a, 0x749, 0xd53, 0xd68]
Successors: [0x465, 0x46e]
---
0x42b JUMPDEST
0x42c PUSH1 0x40
0x42e MLOAD
0x42f SWAP1
0x430 SWAP3
0x431 POP
0x432 PUSH20 0x175e8ca2a7ad4f205688a6896daa572733e0b6e1
0x447 SWAP1
0x448 CALLVALUE
0x449 DUP1
0x44a ISZERO
0x44b PUSH2 0x8fc
0x44e MUL
0x44f SWAP2
0x450 PUSH1 0x0
0x452 DUP2
0x453 DUP2
0x454 DUP2
0x455 DUP6
0x456 DUP9
0x457 DUP9
0x458 CALL
0x459 SWAP4
0x45a POP
0x45b POP
0x45c POP
0x45d POP
0x45e ISZERO
0x45f DUP1
0x460 ISZERO
0x461 PUSH2 0x46e
0x464 JUMPI
---
0x42b: JUMPDEST 
0x42c: V353 = 0x40
0x42e: V354 = M[0x40]
0x432: V355 = 0x175e8ca2a7ad4f205688a6896daa572733e0b6e1
0x448: V356 = CALLVALUE
0x44a: V357 = ISZERO V356
0x44b: V358 = 0x8fc
0x44e: V359 = MUL 0x8fc V357
0x450: V360 = 0x0
0x458: V361 = CALL V359 0x175e8ca2a7ad4f205688a6896daa572733e0b6e1 V356 V354 0x0 V354 0x0
0x45e: V362 = ISZERO V361
0x460: V363 = ISZERO V362
0x461: V364 = 0x46e
0x464: JUMPI 0x46e V363
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V362]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, V362]

================================

Block 0x465
[0x465:0x46d]
---
Predecessors: [0x42b]
Successors: []
---
0x465 RETURNDATASIZE
0x466 PUSH1 0x0
0x468 DUP1
0x469 RETURNDATACOPY
0x46a RETURNDATASIZE
0x46b PUSH1 0x0
0x46d REVERT
---
0x465: V365 = RETURNDATASIZE
0x466: V366 = 0x0
0x469: RETURNDATACOPY 0x0 0x0 V365
0x46a: V367 = RETURNDATASIZE
0x46b: V368 = 0x0
0x46d: REVERT 0x0 V367
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V362]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V362]

================================

Block 0x46e
[0x46e:0x48b]
---
Predecessors: [0x42b]
Successors: [0xd5a]
---
0x46e JUMPDEST
0x46f POP
0x470 PUSH2 0x48c
0x473 PUSH2 0x3e7
0x476 PUSH2 0x413
0x479 PUSH2 0x3e8
0x47c PUSH1 0x7
0x47e SLOAD
0x47f PUSH2 0xd5a
0x482 SWAP1
0x483 SWAP2
0x484 SWAP1
0x485 PUSH4 0xffffffff
0x48a AND
0x48b JUMP
---
0x46e: JUMPDEST 
0x470: V369 = 0x48c
0x473: V370 = 0x3e7
0x476: V371 = 0x413
0x479: V372 = 0x3e8
0x47c: V373 = 0x7
0x47e: V374 = S[0x7]
0x47f: V375 = 0xd5a
0x485: V376 = 0xffffffff
0x48a: V377 = AND 0xffffffff 0xd5a
0x48b: JUMP 0xd5a
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V362]
Stack pops: 1
Stack additions: [0x48c, 0x3e7, 0x413, V374, 0x3e8]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x48c, 0x3e7, 0x413, V374, 0x3e8]

================================

Block 0x48c
[0x48c:0x493]
---
Predecessors: [0xd53]
Successors: [0x4d6]
---
0x48c JUMPDEST
0x48d PUSH1 0x7
0x48f SSTORE
0x490 PUSH2 0x4d6
0x493 JUMP
---
0x48c: JUMPDEST 
0x48d: V378 = 0x7
0x48f: S[0x7] = S0
0x490: V379 = 0x4d6
0x493: JUMP 0x4d6
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x494
[0x494:0x4ca]
---
Predecessors: [0x3d8]
Successors: [0x4cb, 0x4d4]
---
0x494 JUMPDEST
0x495 PUSH1 0x40
0x497 MLOAD
0x498 PUSH20 0x175e8ca2a7ad4f205688a6896daa572733e0b6e1
0x4ad SWAP1
0x4ae CALLVALUE
0x4af DUP1
0x4b0 ISZERO
0x4b1 PUSH2 0x8fc
0x4b4 MUL
0x4b5 SWAP2
0x4b6 PUSH1 0x0
0x4b8 DUP2
0x4b9 DUP2
0x4ba DUP2
0x4bb DUP6
0x4bc DUP9
0x4bd DUP9
0x4be CALL
0x4bf SWAP4
0x4c0 POP
0x4c1 POP
0x4c2 POP
0x4c3 POP
0x4c4 ISZERO
0x4c5 DUP1
0x4c6 ISZERO
0x4c7 PUSH2 0x4d4
0x4ca JUMPI
---
0x494: JUMPDEST 
0x495: V380 = 0x40
0x497: V381 = M[0x40]
0x498: V382 = 0x175e8ca2a7ad4f205688a6896daa572733e0b6e1
0x4ae: V383 = CALLVALUE
0x4b0: V384 = ISZERO V383
0x4b1: V385 = 0x8fc
0x4b4: V386 = MUL 0x8fc V384
0x4b6: V387 = 0x0
0x4be: V388 = CALL V386 0x175e8ca2a7ad4f205688a6896daa572733e0b6e1 V383 V381 0x0 V381 0x0
0x4c4: V389 = ISZERO V388
0x4c6: V390 = ISZERO V389
0x4c7: V391 = 0x4d4
0x4ca: JUMPI 0x4d4 V390
---
Entry stack: [V11, 0x119, V330, 0x0]
Stack pops: 0
Stack additions: [V389]
Exit stack: [V11, 0x119, V330, 0x0, V389]

================================

Block 0x4cb
[0x4cb:0x4d3]
---
Predecessors: [0x494]
Successors: []
---
0x4cb RETURNDATASIZE
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf RETURNDATACOPY
0x4d0 RETURNDATASIZE
0x4d1 PUSH1 0x0
0x4d3 REVERT
---
0x4cb: V392 = RETURNDATASIZE
0x4cc: V393 = 0x0
0x4cf: RETURNDATACOPY 0x0 0x0 V392
0x4d0: V394 = RETURNDATASIZE
0x4d1: V395 = 0x0
0x4d3: REVERT 0x0 V394
---
Entry stack: [V11, 0x119, V330, 0x0, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V330, 0x0, V389]

================================

Block 0x4d4
[0x4d4:0x4d5]
---
Predecessors: [0x494]
Successors: [0x4d6]
---
0x4d4 JUMPDEST
0x4d5 POP
---
0x4d4: JUMPDEST 
---
Entry stack: [V11, 0x119, V330, 0x0, V389]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x119, V330, 0x0]

================================

Block 0x4d6
[0x4d6:0x4e0]
---
Predecessors: [0x48c, 0x4d4]
Successors: [0x4e1, 0x4e6]
---
0x4d6 JUMPDEST
0x4d7 PUSH1 0x6
0x4d9 SLOAD
0x4da DUP3
0x4db GT
0x4dc ISZERO
0x4dd PUSH2 0x4e6
0x4e0 JUMPI
---
0x4d6: JUMPDEST 
0x4d7: V396 = 0x6
0x4d9: V397 = S[0x6]
0x4db: V398 = GT S1 V397
0x4dc: V399 = ISZERO V398
0x4dd: V400 = 0x4e6
0x4e0: JUMPI 0x4e6 V399
---
Entry stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4e1
[0x4e1:0x4e5]
---
Predecessors: [0x4d6]
Successors: [0x4e6]
---
0x4e1 PUSH1 0x6
0x4e3 SLOAD
0x4e4 SWAP2
0x4e5 POP
---
0x4e1: V401 = 0x6
0x4e3: V402 = S[0x6]
---
Entry stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V402, S0]
Exit stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V402, S0]

================================

Block 0x4e6
[0x4e6:0x4f0]
---
Predecessors: [0x4d6, 0x4e1]
Successors: [0x4f1, 0x4f5]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x6
0x4e9 SLOAD
0x4ea DUP3
0x4eb GT
0x4ec ISZERO
0x4ed PUSH2 0x4f5
0x4f0 JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V403 = 0x6
0x4e9: V404 = S[0x6]
0x4eb: V405 = GT S1 V404
0x4ec: V406 = ISZERO V405
0x4ed: V407 = 0x4f5
0x4f0: JUMPI 0x4f5 V406
---
Entry stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4f1
[0x4f1:0x4f4]
---
Predecessors: [0x4e6]
Successors: []
---
0x4f1 PUSH1 0x0
0x4f3 DUP1
0x4f4 REVERT
---
0x4f1: V408 = 0x0
0x4f4: REVERT 0x0 0x0
---
Entry stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4f5
[0x4f5:0x500]
---
Predecessors: [0x4e6]
Successors: [0xd71]
---
0x4f5 JUMPDEST
0x4f6 POP
0x4f7 CALLER
0x4f8 PUSH2 0x501
0x4fb DUP2
0x4fc DUP4
0x4fd PUSH2 0xd71
0x500 JUMP
---
0x4f5: JUMPDEST 
0x4f7: V409 = CALLER
0x4f8: V410 = 0x501
0x4fd: V411 = 0xd71
0x500: JUMP 0xd71
---
Entry stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V409, 0x501, V409, S1]
Exit stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V409, 0x501, V409, S1]

================================

Block 0x501
[0x501:0x50d]
---
Predecessors: [0x61a, 0xd53, 0xd68]
Successors: [0x50e, 0x51b]
---
0x501 JUMPDEST
0x502 POP
0x503 PUSH1 0x4
0x505 SLOAD
0x506 PUSH1 0x5
0x508 SLOAD
0x509 LT
0x50a PUSH2 0x51b
0x50d JUMPI
---
0x501: JUMPDEST 
0x503: V412 = 0x4
0x505: V413 = S[0x4]
0x506: V414 = 0x5
0x508: V415 = S[0x5]
0x509: V416 = LT V415 V413
0x50a: V417 = 0x51b
0x50d: JUMPI 0x51b V416
---
Entry stack: [0x119, S10, {0x0, 0x119}, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [0x119, S10, {0x0, 0x119}, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x50e
[0x50e:0x51a]
---
Predecessors: [0x501]
Successors: [0x51b]
---
0x50e PUSH1 0x8
0x510 DUP1
0x511 SLOAD
0x512 PUSH1 0xff
0x514 NOT
0x515 AND
0x516 PUSH1 0x1
0x518 OR
0x519 SWAP1
0x51a SSTORE
---
0x50e: V418 = 0x8
0x511: V419 = S[0x8]
0x512: V420 = 0xff
0x514: V421 = NOT 0xff
0x515: V422 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V419
0x516: V423 = 0x1
0x518: V424 = OR 0x1 V422
0x51a: S[0x8] = V424
---
Entry stack: [0x119, S9, {0x0, 0x119}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S9, {0x0, 0x119}, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x51b
[0x51b:0x539]
---
Predecessors: [0x501, 0x50e]
Successors: [0xd5a]
---
0x51b JUMPDEST
0x51c PUSH2 0x53a
0x51f PUSH3 0xf423f
0x523 PUSH2 0x413
0x526 PUSH3 0xf4240
0x52a PUSH1 0x7
0x52c SLOAD
0x52d PUSH2 0xd5a
0x530 SWAP1
0x531 SWAP2
0x532 SWAP1
0x533 PUSH4 0xffffffff
0x538 AND
0x539 JUMP
---
0x51b: JUMPDEST 
0x51c: V425 = 0x53a
0x51f: V426 = 0xf423f
0x523: V427 = 0x413
0x526: V428 = 0xf4240
0x52a: V429 = 0x7
0x52c: V430 = S[0x7]
0x52d: V431 = 0xd5a
0x533: V432 = 0xffffffff
0x538: V433 = AND 0xffffffff 0xd5a
0x539: JUMP 0xd5a
---
Entry stack: [0x119, S9, {0x0, 0x119}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x53a, 0xf423f, 0x413, V430, 0xf4240]
Exit stack: [0x119, S9, {0x0, 0x119}, S7, S6, S5, S4, S3, S2, S1, S0, 0x53a, 0xf423f, 0x413, V430, 0xf4240]

================================

Block 0x53a
[0x53a:0x540]
---
Predecessors: [0xd53]
Successors: [0x119, 0x1c9]
---
0x53a JUMPDEST
0x53b PUSH1 0x7
0x53d SSTORE
0x53e POP
0x53f POP
0x540 JUMP
---
0x53a: JUMPDEST 
0x53b: V434 = 0x7
0x53d: S[0x7] = S0
0x540: JUMP S3
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x541
[0x541:0x577]
---
Predecessors: [0x127]
Successors: [0x130]
---
0x541 JUMPDEST
0x542 PUSH1 0x40
0x544 DUP1
0x545 MLOAD
0x546 DUP1
0x547 DUP3
0x548 ADD
0x549 SWAP1
0x54a SWAP2
0x54b MSTORE
0x54c PUSH1 0x7
0x54e DUP2
0x54f MSTORE
0x550 PUSH32 0x746573742e696f00000000000000000000000000000000000000000000000000
0x571 PUSH1 0x20
0x573 DUP3
0x574 ADD
0x575 MSTORE
0x576 DUP2
0x577 JUMP
---
0x541: JUMPDEST 
0x542: V435 = 0x40
0x545: V436 = M[0x40]
0x548: V437 = ADD 0x40 V436
0x54b: M[0x40] = V437
0x54c: V438 = 0x7
0x54f: M[V436] = 0x7
0x550: V439 = 0x746573742e696f00000000000000000000000000000000000000000000000000
0x571: V440 = 0x20
0x574: V441 = ADD V436 0x20
0x575: M[V441] = 0x746573742e696f00000000000000000000000000000000000000000000000000
0x577: JUMP 0x130
---
Entry stack: [V11, 0x130]
Stack pops: 1
Stack additions: [S0, V436]
Exit stack: [V11, 0x130, V436]

================================

Block 0x578
[0x578:0x583]
---
Predecessors: [0x1b1]
Successors: [0x584, 0x5ab]
---
0x578 JUMPDEST
0x579 PUSH1 0x0
0x57b DUP2
0x57c ISZERO
0x57d DUP1
0x57e ISZERO
0x57f SWAP1
0x580 PUSH2 0x5ab
0x583 JUMPI
---
0x578: JUMPDEST 
0x579: V442 = 0x0
0x57c: V443 = ISZERO V132
0x57e: V444 = ISZERO V443
0x580: V445 = 0x5ab
0x583: JUMPI 0x5ab V443
---
Entry stack: [V11, 0x1c9, V130, V132]
Stack pops: 1
Stack additions: [S0, 0x0, V444]
Exit stack: [V11, 0x1c9, V130, V132, 0x0, V444]

================================

Block 0x584
[0x584:0x5aa]
---
Predecessors: [0x578]
Successors: [0x5ab]
---
0x584 POP
0x585 CALLER
0x586 PUSH1 0x0
0x588 SWAP1
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x3
0x58d PUSH1 0x20
0x58f SWAP1
0x590 DUP2
0x591 MSTORE
0x592 PUSH1 0x40
0x594 DUP1
0x595 DUP4
0x596 SHA3
0x597 PUSH1 0x1
0x599 PUSH1 0xa0
0x59b PUSH1 0x2
0x59d EXP
0x59e SUB
0x59f DUP8
0x5a0 AND
0x5a1 DUP5
0x5a2 MSTORE
0x5a3 SWAP1
0x5a4 SWAP2
0x5a5 MSTORE
0x5a6 SWAP1
0x5a7 SHA3
0x5a8 SLOAD
0x5a9 ISZERO
0x5aa ISZERO
---
0x585: V446 = CALLER
0x586: V447 = 0x0
0x58a: M[0x0] = V446
0x58b: V448 = 0x3
0x58d: V449 = 0x20
0x591: M[0x20] = 0x3
0x592: V450 = 0x40
0x596: V451 = SHA3 0x0 0x40
0x597: V452 = 0x1
0x599: V453 = 0xa0
0x59b: V454 = 0x2
0x59d: V455 = EXP 0x2 0xa0
0x59e: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a0: V457 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x5a2: M[0x0] = V457
0x5a5: M[0x20] = V451
0x5a7: V458 = SHA3 0x0 0x40
0x5a8: V459 = S[V458]
0x5a9: V460 = ISZERO V459
0x5aa: V461 = ISZERO V460
---
Entry stack: [V11, 0x1c9, V130, V132, 0x0, V444]
Stack pops: 4
Stack additions: [S3, S2, S1, V461]
Exit stack: [V11, 0x1c9, V130, V132, 0x0, V461]

================================

Block 0x5ab
[0x5ab:0x5b0]
---
Predecessors: [0x578, 0x584]
Successors: [0x5b1, 0x5b8]
---
0x5ab JUMPDEST
0x5ac ISZERO
0x5ad PUSH2 0x5b8
0x5b0 JUMPI
---
0x5ab: JUMPDEST 
0x5ac: V462 = ISZERO S0
0x5ad: V463 = 0x5b8
0x5b0: JUMPI 0x5b8 V462
---
Entry stack: [V11, 0x1c9, V130, V132, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1c9, V130, V132, 0x0]

================================

Block 0x5b1
[0x5b1:0x5b7]
---
Predecessors: [0x5ab]
Successors: [0x61a]
---
0x5b1 POP
0x5b2 PUSH1 0x0
0x5b4 PUSH2 0x61a
0x5b7 JUMP
---
0x5b2: V464 = 0x0
0x5b4: V465 = 0x61a
0x5b7: JUMP 0x61a
---
Entry stack: [V11, 0x1c9, V130, V132, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1c9, V130, V132, 0x0]

================================

Block 0x5b8
[0x5b8:0x619]
---
Predecessors: [0x5ab]
Successors: [0x61a]
---
0x5b8 JUMPDEST
0x5b9 CALLER
0x5ba PUSH1 0x0
0x5bc DUP2
0x5bd DUP2
0x5be MSTORE
0x5bf PUSH1 0x3
0x5c1 PUSH1 0x20
0x5c3 SWAP1
0x5c4 DUP2
0x5c5 MSTORE
0x5c6 PUSH1 0x40
0x5c8 DUP1
0x5c9 DUP4
0x5ca SHA3
0x5cb PUSH1 0x1
0x5cd PUSH1 0xa0
0x5cf PUSH1 0x2
0x5d1 EXP
0x5d2 SUB
0x5d3 DUP9
0x5d4 AND
0x5d5 DUP1
0x5d6 DUP6
0x5d7 MSTORE
0x5d8 SWAP1
0x5d9 DUP4
0x5da MSTORE
0x5db SWAP3
0x5dc DUP2
0x5dd SWAP1
0x5de SHA3
0x5df DUP7
0x5e0 SWAP1
0x5e1 SSTORE
0x5e2 DUP1
0x5e3 MLOAD
0x5e4 DUP7
0x5e5 DUP2
0x5e6 MSTORE
0x5e7 SWAP1
0x5e8 MLOAD
0x5e9 SWAP3
0x5ea SWAP4
0x5eb SWAP3
0x5ec PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x60d SWAP3
0x60e SWAP2
0x60f DUP2
0x610 SWAP1
0x611 SUB
0x612 SWAP1
0x613 SWAP2
0x614 ADD
0x615 SWAP1
0x616 LOG3
0x617 POP
0x618 PUSH1 0x1
---
0x5b8: JUMPDEST 
0x5b9: V466 = CALLER
0x5ba: V467 = 0x0
0x5be: M[0x0] = V466
0x5bf: V468 = 0x3
0x5c1: V469 = 0x20
0x5c5: M[0x20] = 0x3
0x5c6: V470 = 0x40
0x5ca: V471 = SHA3 0x0 0x40
0x5cb: V472 = 0x1
0x5cd: V473 = 0xa0
0x5cf: V474 = 0x2
0x5d1: V475 = EXP 0x2 0xa0
0x5d2: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d4: V477 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x5d7: M[0x0] = V477
0x5da: M[0x20] = V471
0x5de: V478 = SHA3 0x0 0x40
0x5e1: S[V478] = V132
0x5e3: V479 = M[0x40]
0x5e6: M[V479] = V132
0x5e8: V480 = M[0x40]
0x5ec: V481 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x611: V482 = SUB V479 V480
0x614: V483 = ADD 0x20 V482
0x616: LOG V480 V483 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V466 V477
0x618: V484 = 0x1
---
Entry stack: [V11, 0x1c9, V130, V132, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V11, 0x1c9, V130, V132, 0x1]

================================

Block 0x61a
[0x61a:0x61f]
---
Predecessors: [0x5b1, 0x5b8, 0xdd9]
Successors: [0x1c9, 0x41f, 0x42b, 0x501]
---
0x61a JUMPDEST
0x61b SWAP3
0x61c SWAP2
0x61d POP
0x61e POP
0x61f JUMP
---
0x61a: JUMPDEST 
0x61f: JUMP S3
---
Entry stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x1}]

================================

Block 0x620
[0x620:0x625]
---
Predecessors: [0x1e9]
Successors: [0x1f2]
---
0x620 JUMPDEST
0x621 PUSH1 0x4
0x623 SLOAD
0x624 DUP2
0x625 JUMP
---
0x620: JUMPDEST 
0x621: V485 = 0x4
0x623: V486 = S[0x4]
0x625: JUMP 0x1f2
---
Entry stack: [V11, 0x1f2]
Stack pops: 1
Stack additions: [S0, V486]
Exit stack: [V11, 0x1f2, V486]

================================

Block 0x626
[0x626:0x633]
---
Predecessors: [0x210]
Successors: [0x634, 0x635]
---
0x626 JUMPDEST
0x627 PUSH1 0x0
0x629 PUSH1 0x60
0x62b PUSH1 0x64
0x62d CALLDATASIZE
0x62e LT
0x62f ISZERO
0x630 PUSH2 0x635
0x633 JUMPI
---
0x626: JUMPDEST 
0x627: V487 = 0x0
0x629: V488 = 0x60
0x62b: V489 = 0x64
0x62d: V490 = CALLDATASIZE
0x62e: V491 = LT V490 0x64
0x62f: V492 = ISZERO V491
0x630: V493 = 0x635
0x633: JUMPI 0x635 V492
---
Entry stack: [V11, 0x1c9, V166, V169, V171]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]

================================

Block 0x634
[0x634:0x634]
---
Predecessors: [0x626]
Successors: []
---
0x634 INVALID
---
0x634: INVALID 
---
Entry stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]

================================

Block 0x635
[0x635:0x645]
---
Predecessors: [0x626]
Successors: [0x646, 0x64a]
---
0x635 JUMPDEST
0x636 PUSH1 0x1
0x638 PUSH1 0xa0
0x63a PUSH1 0x2
0x63c EXP
0x63d SUB
0x63e DUP5
0x63f AND
0x640 ISZERO
0x641 ISZERO
0x642 PUSH2 0x64a
0x645 JUMPI
---
0x635: JUMPDEST 
0x636: V494 = 0x1
0x638: V495 = 0xa0
0x63a: V496 = 0x2
0x63c: V497 = EXP 0x2 0xa0
0x63d: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63f: V499 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x640: V500 = ISZERO V499
0x641: V501 = ISZERO V500
0x642: V502 = 0x64a
0x645: JUMPI 0x64a V501
---
Entry stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]

================================

Block 0x646
[0x646:0x649]
---
Predecessors: [0x635]
Successors: []
---
0x646 PUSH1 0x0
0x648 DUP1
0x649 REVERT
---
0x646: V503 = 0x0
0x649: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]

================================

Block 0x64a
[0x64a:0x66a]
---
Predecessors: [0x635]
Successors: [0x66b, 0x66f]
---
0x64a JUMPDEST
0x64b PUSH1 0x1
0x64d PUSH1 0xa0
0x64f PUSH1 0x2
0x651 EXP
0x652 SUB
0x653 DUP6
0x654 AND
0x655 PUSH1 0x0
0x657 SWAP1
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x2
0x65c PUSH1 0x20
0x65e MSTORE
0x65f PUSH1 0x40
0x661 SWAP1
0x662 SHA3
0x663 SLOAD
0x664 DUP4
0x665 GT
0x666 ISZERO
0x667 PUSH2 0x66f
0x66a JUMPI
---
0x64a: JUMPDEST 
0x64b: V504 = 0x1
0x64d: V505 = 0xa0
0x64f: V506 = 0x2
0x651: V507 = EXP 0x2 0xa0
0x652: V508 = SUB 0x10000000000000000000000000000000000000000 0x1
0x654: V509 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x655: V510 = 0x0
0x659: M[0x0] = V509
0x65a: V511 = 0x2
0x65c: V512 = 0x20
0x65e: M[0x20] = 0x2
0x65f: V513 = 0x40
0x662: V514 = SHA3 0x0 0x40
0x663: V515 = S[V514]
0x665: V516 = GT V171 V515
0x666: V517 = ISZERO V516
0x667: V518 = 0x66f
0x66a: JUMPI 0x66f V517
---
Entry stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]

================================

Block 0x66b
[0x66b:0x66e]
---
Predecessors: [0x64a]
Successors: []
---
0x66b PUSH1 0x0
0x66d DUP1
0x66e REVERT
---
0x66b: V519 = 0x0
0x66e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]

================================

Block 0x66f
[0x66f:0x69a]
---
Predecessors: [0x64a]
Successors: [0x69b, 0x69f]
---
0x66f JUMPDEST
0x670 PUSH1 0x1
0x672 PUSH1 0xa0
0x674 PUSH1 0x2
0x676 EXP
0x677 SUB
0x678 DUP6
0x679 AND
0x67a PUSH1 0x0
0x67c SWAP1
0x67d DUP2
0x67e MSTORE
0x67f PUSH1 0x3
0x681 PUSH1 0x20
0x683 SWAP1
0x684 DUP2
0x685 MSTORE
0x686 PUSH1 0x40
0x688 DUP1
0x689 DUP4
0x68a SHA3
0x68b CALLER
0x68c DUP5
0x68d MSTORE
0x68e SWAP1
0x68f SWAP2
0x690 MSTORE
0x691 SWAP1
0x692 SHA3
0x693 SLOAD
0x694 DUP4
0x695 GT
0x696 ISZERO
0x697 PUSH2 0x69f
0x69a JUMPI
---
0x66f: JUMPDEST 
0x670: V520 = 0x1
0x672: V521 = 0xa0
0x674: V522 = 0x2
0x676: V523 = EXP 0x2 0xa0
0x677: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x679: V525 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V526 = 0x0
0x67e: M[0x0] = V525
0x67f: V527 = 0x3
0x681: V528 = 0x20
0x685: M[0x20] = 0x3
0x686: V529 = 0x40
0x68a: V530 = SHA3 0x0 0x40
0x68b: V531 = CALLER
0x68d: M[0x0] = V531
0x690: M[0x20] = V530
0x692: V532 = SHA3 0x0 0x40
0x693: V533 = S[V532]
0x695: V534 = GT V171 V533
0x696: V535 = ISZERO V534
0x697: V536 = 0x69f
0x69a: JUMPI 0x69f V535
---
Entry stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]

================================

Block 0x69b
[0x69b:0x69e]
---
Predecessors: [0x66f]
Successors: []
---
0x69b PUSH1 0x0
0x69d DUP1
0x69e REVERT
---
0x69b: V537 = 0x0
0x69e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]

================================

Block 0x69f
[0x69f:0x6c7]
---
Predecessors: [0x66f]
Successors: [0xe74]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x1
0x6a2 PUSH1 0xa0
0x6a4 PUSH1 0x2
0x6a6 EXP
0x6a7 SUB
0x6a8 DUP6
0x6a9 AND
0x6aa PUSH1 0x0
0x6ac SWAP1
0x6ad DUP2
0x6ae MSTORE
0x6af PUSH1 0x2
0x6b1 PUSH1 0x20
0x6b3 MSTORE
0x6b4 PUSH1 0x40
0x6b6 SWAP1
0x6b7 SHA3
0x6b8 SLOAD
0x6b9 PUSH2 0x6c8
0x6bc SWAP1
0x6bd DUP5
0x6be PUSH4 0xffffffff
0x6c3 PUSH2 0xe74
0x6c6 AND
0x6c7 JUMP
---
0x69f: JUMPDEST 
0x6a0: V538 = 0x1
0x6a2: V539 = 0xa0
0x6a4: V540 = 0x2
0x6a6: V541 = EXP 0x2 0xa0
0x6a7: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a9: V543 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x6aa: V544 = 0x0
0x6ae: M[0x0] = V543
0x6af: V545 = 0x2
0x6b1: V546 = 0x20
0x6b3: M[0x20] = 0x2
0x6b4: V547 = 0x40
0x6b7: V548 = SHA3 0x0 0x40
0x6b8: V549 = S[V548]
0x6b9: V550 = 0x6c8
0x6be: V551 = 0xffffffff
0x6c3: V552 = 0xe74
0x6c6: V553 = AND 0xe74 0xffffffff
0x6c7: JUMP 0xe74
---
Entry stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x6c8, V549, S2]
Exit stack: [V11, 0x1c9, V166, V169, V171, 0x0, 0x60, 0x6c8, V549, V171]

================================

Block 0x6c8
[0x6c8:0x704]
---
Predecessors: [0xe80]
Successors: [0xe74]
---
0x6c8 JUMPDEST
0x6c9 PUSH1 0x1
0x6cb PUSH1 0xa0
0x6cd PUSH1 0x2
0x6cf EXP
0x6d0 SUB
0x6d1 DUP7
0x6d2 AND
0x6d3 PUSH1 0x0
0x6d5 SWAP1
0x6d6 DUP2
0x6d7 MSTORE
0x6d8 PUSH1 0x2
0x6da PUSH1 0x20
0x6dc SWAP1
0x6dd DUP2
0x6de MSTORE
0x6df PUSH1 0x40
0x6e1 DUP1
0x6e2 DUP4
0x6e3 SHA3
0x6e4 SWAP4
0x6e5 SWAP1
0x6e6 SWAP4
0x6e7 SSTORE
0x6e8 PUSH1 0x3
0x6ea DUP2
0x6eb MSTORE
0x6ec DUP3
0x6ed DUP3
0x6ee SHA3
0x6ef CALLER
0x6f0 DUP4
0x6f1 MSTORE
0x6f2 SWAP1
0x6f3 MSTORE
0x6f4 SHA3
0x6f5 SLOAD
0x6f6 PUSH2 0x705
0x6f9 SWAP1
0x6fa DUP5
0x6fb PUSH4 0xffffffff
0x700 PUSH2 0xe74
0x703 AND
0x704 JUMP
---
0x6c8: JUMPDEST 
0x6c9: V554 = 0x1
0x6cb: V555 = 0xa0
0x6cd: V556 = 0x2
0x6cf: V557 = EXP 0x2 0xa0
0x6d0: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d2: V559 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x6d3: V560 = 0x0
0x6d7: M[0x0] = V559
0x6d8: V561 = 0x2
0x6da: V562 = 0x20
0x6de: M[0x20] = 0x2
0x6df: V563 = 0x40
0x6e3: V564 = SHA3 0x0 0x40
0x6e7: S[V564] = V1159
0x6e8: V565 = 0x3
0x6eb: M[0x20] = 0x3
0x6ee: V566 = SHA3 0x0 0x40
0x6ef: V567 = CALLER
0x6f1: M[0x0] = V567
0x6f3: M[0x20] = V566
0x6f4: V568 = SHA3 0x0 0x40
0x6f5: V569 = S[V568]
0x6f6: V570 = 0x705
0x6fb: V571 = 0xffffffff
0x700: V572 = 0xe74
0x703: V573 = AND 0xe74 0xffffffff
0x704: JUMP 0xe74
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1159]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x705, V569, S3]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x705, V569, S3]

================================

Block 0x705
[0x705:0x748]
---
Predecessors: [0xe80]
Successors: [0xe86]
---
0x705 JUMPDEST
0x706 PUSH1 0x1
0x708 PUSH1 0xa0
0x70a PUSH1 0x2
0x70c EXP
0x70d SUB
0x70e DUP1
0x70f DUP8
0x710 AND
0x711 PUSH1 0x0
0x713 SWAP1
0x714 DUP2
0x715 MSTORE
0x716 PUSH1 0x3
0x718 PUSH1 0x20
0x71a SWAP1
0x71b DUP2
0x71c MSTORE
0x71d PUSH1 0x40
0x71f DUP1
0x720 DUP4
0x721 SHA3
0x722 CALLER
0x723 DUP5
0x724 MSTORE
0x725 DUP3
0x726 MSTORE
0x727 DUP1
0x728 DUP4
0x729 SHA3
0x72a SWAP5
0x72b SWAP1
0x72c SWAP5
0x72d SSTORE
0x72e SWAP2
0x72f DUP8
0x730 AND
0x731 DUP2
0x732 MSTORE
0x733 PUSH1 0x2
0x735 SWAP1
0x736 SWAP2
0x737 MSTORE
0x738 SHA3
0x739 SLOAD
0x73a PUSH2 0x749
0x73d SWAP1
0x73e DUP5
0x73f PUSH4 0xffffffff
0x744 PUSH2 0xe86
0x747 AND
0x748 JUMP
---
0x705: JUMPDEST 
0x706: V574 = 0x1
0x708: V575 = 0xa0
0x70a: V576 = 0x2
0x70c: V577 = EXP 0x2 0xa0
0x70d: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x710: V579 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x711: V580 = 0x0
0x715: M[0x0] = V579
0x716: V581 = 0x3
0x718: V582 = 0x20
0x71c: M[0x20] = 0x3
0x71d: V583 = 0x40
0x721: V584 = SHA3 0x0 0x40
0x722: V585 = CALLER
0x724: M[0x0] = V585
0x726: M[0x20] = V584
0x729: V586 = SHA3 0x0 0x40
0x72d: S[V586] = V1159
0x730: V587 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x732: M[0x0] = V587
0x733: V588 = 0x2
0x737: M[0x20] = 0x2
0x738: V589 = SHA3 0x0 0x40
0x739: V590 = S[V589]
0x73a: V591 = 0x749
0x73f: V592 = 0xffffffff
0x744: V593 = 0xe86
0x747: V594 = AND 0xe86 0xffffffff
0x748: JUMP 0xe86
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1159]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x749, V590, S3]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x749, V590, S3]

================================

Block 0x749
[0x749:0x7aa]
---
Predecessors: [0xd53]
Successors: [0x1c9, 0x41f, 0x42b]
---
0x749 JUMPDEST
0x74a PUSH1 0x1
0x74c PUSH1 0xa0
0x74e PUSH1 0x2
0x750 EXP
0x751 SUB
0x752 DUP1
0x753 DUP7
0x754 AND
0x755 PUSH1 0x0
0x757 DUP2
0x758 DUP2
0x759 MSTORE
0x75a PUSH1 0x2
0x75c PUSH1 0x20
0x75e SWAP1
0x75f DUP2
0x760 MSTORE
0x761 PUSH1 0x40
0x763 SWAP2
0x764 DUP3
0x765 SWAP1
0x766 SHA3
0x767 SWAP5
0x768 SWAP1
0x769 SWAP5
0x76a SSTORE
0x76b DUP1
0x76c MLOAD
0x76d DUP8
0x76e DUP2
0x76f MSTORE
0x770 SWAP1
0x771 MLOAD
0x772 SWAP2
0x773 SWAP4
0x774 SWAP3
0x775 DUP10
0x776 AND
0x777 SWAP3
0x778 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x799 SWAP3
0x79a SWAP2
0x79b DUP3
0x79c SWAP1
0x79d SUB
0x79e ADD
0x79f SWAP1
0x7a0 LOG3
0x7a1 POP
0x7a2 PUSH1 0x1
0x7a4 SWAP5
0x7a5 SWAP4
0x7a6 POP
0x7a7 POP
0x7a8 POP
0x7a9 POP
0x7aa JUMP
---
0x749: JUMPDEST 
0x74a: V595 = 0x1
0x74c: V596 = 0xa0
0x74e: V597 = 0x2
0x750: V598 = EXP 0x2 0xa0
0x751: V599 = SUB 0x10000000000000000000000000000000000000000 0x1
0x754: V600 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x755: V601 = 0x0
0x759: M[0x0] = V600
0x75a: V602 = 0x2
0x75c: V603 = 0x20
0x760: M[0x20] = 0x2
0x761: V604 = 0x40
0x766: V605 = SHA3 0x0 0x40
0x76a: S[V605] = S0
0x76c: V606 = M[0x40]
0x76f: M[V606] = S3
0x771: V607 = M[0x40]
0x776: V608 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x778: V609 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x79d: V610 = SUB V606 V607
0x79e: V611 = ADD V610 0x20
0x7a0: LOG V607 V611 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V608 V600
0x7a2: V612 = 0x1
0x7aa: JUMP S6
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, 0x1]

================================

Block 0x7ab
[0x7ab:0x7af]
---
Predecessors: [0x23a]
Successors: [0x1f2]
---
0x7ab JUMPDEST
0x7ac PUSH1 0x12
0x7ae DUP2
0x7af JUMP
---
0x7ab: JUMPDEST 
0x7ac: V613 = 0x12
0x7af: JUMP 0x1f2
---
Entry stack: [V11, 0x1f2]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V11, 0x1f2, 0x12]

================================

Block 0x7b0
[0x7b0:0x7c5]
---
Predecessors: [0x24f]
Successors: [0x7c6, 0x7ca]
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x1
0x7b3 SLOAD
0x7b4 PUSH1 0x0
0x7b6 SWAP1
0x7b7 PUSH1 0x1
0x7b9 PUSH1 0xa0
0x7bb PUSH1 0x2
0x7bd EXP
0x7be SUB
0x7bf AND
0x7c0 CALLER
0x7c1 EQ
0x7c2 PUSH2 0x7ca
0x7c5 JUMPI
---
0x7b0: JUMPDEST 
0x7b1: V614 = 0x1
0x7b3: V615 = S[0x1]
0x7b4: V616 = 0x0
0x7b7: V617 = 0x1
0x7b9: V618 = 0xa0
0x7bb: V619 = 0x2
0x7bd: V620 = EXP 0x2 0xa0
0x7be: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bf: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0x7c0: V623 = CALLER
0x7c1: V624 = EQ V623 V622
0x7c2: V625 = 0x7ca
0x7c5: JUMPI 0x7ca V624
---
Entry stack: [V11, 0x119]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x119, 0x0]

================================

Block 0x7c6
[0x7c6:0x7c9]
---
Predecessors: [0x7b0]
Successors: []
---
0x7c6 PUSH1 0x0
0x7c8 DUP1
0x7c9 REVERT
---
0x7c6: V626 = 0x0
0x7c9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, 0x0]

================================

Block 0x7ca
[0x7ca:0x7fc]
---
Predecessors: [0x7b0]
Successors: [0x7fd, 0x806]
---
0x7ca JUMPDEST
0x7cb POP
0x7cc PUSH1 0x1
0x7ce SLOAD
0x7cf PUSH1 0x40
0x7d1 MLOAD
0x7d2 ADDRESS
0x7d3 BALANCE
0x7d4 SWAP2
0x7d5 PUSH1 0x1
0x7d7 PUSH1 0xa0
0x7d9 PUSH1 0x2
0x7db EXP
0x7dc SUB
0x7dd AND
0x7de SWAP1
0x7df DUP3
0x7e0 ISZERO
0x7e1 PUSH2 0x8fc
0x7e4 MUL
0x7e5 SWAP1
0x7e6 DUP4
0x7e7 SWAP1
0x7e8 PUSH1 0x0
0x7ea DUP2
0x7eb DUP2
0x7ec DUP2
0x7ed DUP6
0x7ee DUP9
0x7ef DUP9
0x7f0 CALL
0x7f1 SWAP4
0x7f2 POP
0x7f3 POP
0x7f4 POP
0x7f5 POP
0x7f6 ISZERO
0x7f7 DUP1
0x7f8 ISZERO
0x7f9 PUSH2 0x806
0x7fc JUMPI
---
0x7ca: JUMPDEST 
0x7cc: V627 = 0x1
0x7ce: V628 = S[0x1]
0x7cf: V629 = 0x40
0x7d1: V630 = M[0x40]
0x7d2: V631 = ADDRESS
0x7d3: V632 = BALANCE V631
0x7d5: V633 = 0x1
0x7d7: V634 = 0xa0
0x7d9: V635 = 0x2
0x7db: V636 = EXP 0x2 0xa0
0x7dc: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dd: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x7e0: V639 = ISZERO V632
0x7e1: V640 = 0x8fc
0x7e4: V641 = MUL 0x8fc V639
0x7e8: V642 = 0x0
0x7f0: V643 = CALL V641 V638 V632 V630 0x0 V630 0x0
0x7f6: V644 = ISZERO V643
0x7f8: V645 = ISZERO V644
0x7f9: V646 = 0x806
0x7fc: JUMPI 0x806 V645
---
Entry stack: [V11, 0x119, 0x0]
Stack pops: 1
Stack additions: [V632, V644]
Exit stack: [V11, 0x119, V632, V644]

================================

Block 0x7fd
[0x7fd:0x805]
---
Predecessors: [0x7ca]
Successors: []
---
0x7fd RETURNDATASIZE
0x7fe PUSH1 0x0
0x800 DUP1
0x801 RETURNDATACOPY
0x802 RETURNDATASIZE
0x803 PUSH1 0x0
0x805 REVERT
---
0x7fd: V647 = RETURNDATASIZE
0x7fe: V648 = 0x0
0x801: RETURNDATACOPY 0x0 0x0 V647
0x802: V649 = RETURNDATASIZE
0x803: V650 = 0x0
0x805: REVERT 0x0 V649
---
Entry stack: [V11, 0x119, V632, V644]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V632, V644]

================================

Block 0x806
[0x806:0x809]
---
Predecessors: [0x7ca]
Successors: [0x119]
---
0x806 JUMPDEST
0x807 POP
0x808 POP
0x809 JUMP
---
0x806: JUMPDEST 
0x809: JUMP 0x119
---
Entry stack: [V11, 0x119, V632, V644]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x80a
[0x80a:0x80f]
---
Predecessors: [0x264]
Successors: [0x1f2]
---
0x80a JUMPDEST
0x80b PUSH1 0x7
0x80d SLOAD
0x80e DUP2
0x80f JUMP
---
0x80a: JUMPDEST 
0x80b: V651 = 0x7
0x80d: V652 = S[0x7]
0x80f: JUMP 0x1f2
---
Entry stack: [V11, 0x1f2]
Stack pops: 1
Stack additions: [S0, V652]
Exit stack: [V11, 0x1f2, V652]

================================

Block 0x810
[0x810:0x825]
---
Predecessors: [0x279]
Successors: [0x826, 0x82a]
---
0x810 JUMPDEST
0x811 PUSH1 0x1
0x813 SLOAD
0x814 PUSH1 0x0
0x816 SWAP1
0x817 PUSH1 0x1
0x819 PUSH1 0xa0
0x81b PUSH1 0x2
0x81d EXP
0x81e SUB
0x81f AND
0x820 CALLER
0x821 EQ
0x822 PUSH2 0x82a
0x825 JUMPI
---
0x810: JUMPDEST 
0x811: V653 = 0x1
0x813: V654 = S[0x1]
0x814: V655 = 0x0
0x817: V656 = 0x1
0x819: V657 = 0xa0
0x81b: V658 = 0x2
0x81d: V659 = EXP 0x2 0xa0
0x81e: V660 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81f: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0x820: V662 = CALLER
0x821: V663 = EQ V662 V661
0x822: V664 = 0x82a
0x825: JUMPI 0x82a V663
---
Entry stack: [V11, 0x119, V197]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x119, V197, 0x0]

================================

Block 0x826
[0x826:0x829]
---
Predecessors: [0x810]
Successors: []
---
0x826 PUSH1 0x0
0x828 DUP1
0x829 REVERT
---
0x826: V665 = 0x0
0x829: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V197, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V197, 0x0]

================================

Block 0x82a
[0x82a:0x841]
---
Predecessors: [0x810]
Successors: [0x842, 0x846]
---
0x82a JUMPDEST
0x82b CALLER
0x82c PUSH1 0x0
0x82e SWAP1
0x82f DUP2
0x830 MSTORE
0x831 PUSH1 0x2
0x833 PUSH1 0x20
0x835 MSTORE
0x836 PUSH1 0x40
0x838 SWAP1
0x839 SHA3
0x83a SLOAD
0x83b DUP3
0x83c GT
0x83d ISZERO
0x83e PUSH2 0x846
0x841 JUMPI
---
0x82a: JUMPDEST 
0x82b: V666 = CALLER
0x82c: V667 = 0x0
0x830: M[0x0] = V666
0x831: V668 = 0x2
0x833: V669 = 0x20
0x835: M[0x20] = 0x2
0x836: V670 = 0x40
0x839: V671 = SHA3 0x0 0x40
0x83a: V672 = S[V671]
0x83c: V673 = GT V197 V672
0x83d: V674 = ISZERO V673
0x83e: V675 = 0x846
0x841: JUMPI 0x846 V674
---
Entry stack: [V11, 0x119, V197, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x119, V197, 0x0]

================================

Block 0x842
[0x842:0x845]
---
Predecessors: [0x82a]
Successors: []
---
0x842 PUSH1 0x0
0x844 DUP1
0x845 REVERT
---
0x842: V676 = 0x0
0x845: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V197, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V197, 0x0]

================================

Block 0x846
[0x846:0x866]
---
Predecessors: [0x82a]
Successors: [0xe74]
---
0x846 JUMPDEST
0x847 POP
0x848 CALLER
0x849 PUSH1 0x0
0x84b DUP2
0x84c DUP2
0x84d MSTORE
0x84e PUSH1 0x2
0x850 PUSH1 0x20
0x852 MSTORE
0x853 PUSH1 0x40
0x855 SWAP1
0x856 SHA3
0x857 SLOAD
0x858 PUSH2 0x867
0x85b SWAP1
0x85c DUP4
0x85d PUSH4 0xffffffff
0x862 PUSH2 0xe74
0x865 AND
0x866 JUMP
---
0x846: JUMPDEST 
0x848: V677 = CALLER
0x849: V678 = 0x0
0x84d: M[0x0] = V677
0x84e: V679 = 0x2
0x850: V680 = 0x20
0x852: M[0x20] = 0x2
0x853: V681 = 0x40
0x856: V682 = SHA3 0x0 0x40
0x857: V683 = S[V682]
0x858: V684 = 0x867
0x85d: V685 = 0xffffffff
0x862: V686 = 0xe74
0x865: V687 = AND 0xe74 0xffffffff
0x866: JUMP 0xe74
---
Entry stack: [V11, 0x119, V197, 0x0]
Stack pops: 2
Stack additions: [S1, V677, 0x867, V683, S1]
Exit stack: [V11, 0x119, V197, V677, 0x867, V683, V197]

================================

Block 0x867
[0x867:0x892]
---
Predecessors: [0xe80]
Successors: [0xe74]
---
0x867 JUMPDEST
0x868 PUSH1 0x1
0x86a PUSH1 0xa0
0x86c PUSH1 0x2
0x86e EXP
0x86f SUB
0x870 DUP3
0x871 AND
0x872 PUSH1 0x0
0x874 SWAP1
0x875 DUP2
0x876 MSTORE
0x877 PUSH1 0x2
0x879 PUSH1 0x20
0x87b MSTORE
0x87c PUSH1 0x40
0x87e SWAP1
0x87f SHA3
0x880 SSTORE
0x881 PUSH1 0x4
0x883 SLOAD
0x884 PUSH2 0x893
0x887 SWAP1
0x888 DUP4
0x889 PUSH4 0xffffffff
0x88e PUSH2 0xe74
0x891 AND
0x892 JUMP
---
0x867: JUMPDEST 
0x868: V688 = 0x1
0x86a: V689 = 0xa0
0x86c: V690 = 0x2
0x86e: V691 = EXP 0x2 0xa0
0x86f: V692 = SUB 0x10000000000000000000000000000000000000000 0x1
0x871: V693 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x872: V694 = 0x0
0x876: M[0x0] = V693
0x877: V695 = 0x2
0x879: V696 = 0x20
0x87b: M[0x20] = 0x2
0x87c: V697 = 0x40
0x87f: V698 = SHA3 0x0 0x40
0x880: S[V698] = V1159
0x881: V699 = 0x4
0x883: V700 = S[0x4]
0x884: V701 = 0x893
0x889: V702 = 0xffffffff
0x88e: V703 = 0xe74
0x891: V704 = AND 0xe74 0xffffffff
0x892: JUMP 0xe74
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1159]
Stack pops: 3
Stack additions: [S2, S1, 0x893, V700, S2]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x893, V700, S2]

================================

Block 0x893
[0x893:0x8a8]
---
Predecessors: [0xe80]
Successors: [0xe74]
---
0x893 JUMPDEST
0x894 PUSH1 0x4
0x896 SSTORE
0x897 PUSH1 0x5
0x899 SLOAD
0x89a PUSH2 0x8a9
0x89d SWAP1
0x89e DUP4
0x89f PUSH4 0xffffffff
0x8a4 PUSH2 0xe74
0x8a7 AND
0x8a8 JUMP
---
0x893: JUMPDEST 
0x894: V705 = 0x4
0x896: S[0x4] = V1159
0x897: V706 = 0x5
0x899: V707 = S[0x5]
0x89a: V708 = 0x8a9
0x89f: V709 = 0xffffffff
0x8a4: V710 = 0xe74
0x8a7: V711 = AND 0xe74 0xffffffff
0x8a8: JUMP 0xe74
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1159]
Stack pops: 3
Stack additions: [S2, S1, 0x8a9, V707, S2]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x8a9, V707, S2]

================================

Block 0x8a9
[0x8a9:0x8ee]
---
Predecessors: [0xe80]
Successors: [0x119]
---
0x8a9 JUMPDEST
0x8aa PUSH1 0x5
0x8ac SSTORE
0x8ad PUSH1 0x40
0x8af DUP1
0x8b0 MLOAD
0x8b1 DUP4
0x8b2 DUP2
0x8b3 MSTORE
0x8b4 SWAP1
0x8b5 MLOAD
0x8b6 PUSH1 0x1
0x8b8 PUSH1 0xa0
0x8ba PUSH1 0x2
0x8bc EXP
0x8bd SUB
0x8be DUP4
0x8bf AND
0x8c0 SWAP2
0x8c1 PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x8e2 SWAP2
0x8e3 SWAP1
0x8e4 DUP2
0x8e5 SWAP1
0x8e6 SUB
0x8e7 PUSH1 0x20
0x8e9 ADD
0x8ea SWAP1
0x8eb LOG2
0x8ec POP
0x8ed POP
0x8ee JUMP
---
0x8a9: JUMPDEST 
0x8aa: V712 = 0x5
0x8ac: S[0x5] = V1159
0x8ad: V713 = 0x40
0x8b0: V714 = M[0x40]
0x8b3: M[V714] = S2
0x8b5: V715 = M[0x40]
0x8b6: V716 = 0x1
0x8b8: V717 = 0xa0
0x8ba: V718 = 0x2
0x8bc: V719 = EXP 0x2 0xa0
0x8bd: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bf: V721 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x8c1: V722 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x8e6: V723 = SUB V714 V715
0x8e7: V724 = 0x20
0x8e9: V725 = ADD 0x20 V723
0x8eb: LOG V715 V725 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V721
0x8ee: JUMP S3
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1159]
Stack pops: 4
Stack additions: []
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x8ef
[0x8ef:0x909]
---
Predecessors: [0x291]
Successors: [0x1f2]
---
0x8ef JUMPDEST
0x8f0 PUSH1 0x1
0x8f2 PUSH1 0xa0
0x8f4 PUSH1 0x2
0x8f6 EXP
0x8f7 SUB
0x8f8 AND
0x8f9 PUSH1 0x0
0x8fb SWAP1
0x8fc DUP2
0x8fd MSTORE
0x8fe PUSH1 0x2
0x900 PUSH1 0x20
0x902 MSTORE
0x903 PUSH1 0x40
0x905 SWAP1
0x906 SHA3
0x907 SLOAD
0x908 SWAP1
0x909 JUMP
---
0x8ef: JUMPDEST 
0x8f0: V726 = 0x1
0x8f2: V727 = 0xa0
0x8f4: V728 = 0x2
0x8f6: V729 = EXP 0x2 0xa0
0x8f7: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f8: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x8f9: V732 = 0x0
0x8fd: M[0x0] = V731
0x8fe: V733 = 0x2
0x900: V734 = 0x20
0x902: M[0x20] = 0x2
0x903: V735 = 0x40
0x906: V736 = SHA3 0x0 0x40
0x907: V737 = S[V736]
0x909: JUMP 0x1f2
---
Entry stack: [V11, 0x1f2, V211]
Stack pops: 2
Stack additions: [V737]
Exit stack: [V11, V737]

================================

Block 0x90a
[0x90a:0x940]
---
Predecessors: [0x2b2]
Successors: [0x130]
---
0x90a JUMPDEST
0x90b PUSH1 0x40
0x90d DUP1
0x90e MLOAD
0x90f DUP1
0x910 DUP3
0x911 ADD
0x912 SWAP1
0x913 SWAP2
0x914 MSTORE
0x915 PUSH1 0x4
0x917 DUP2
0x918 MSTORE
0x919 PUSH32 0x7465737400000000000000000000000000000000000000000000000000000000
0x93a PUSH1 0x20
0x93c DUP3
0x93d ADD
0x93e MSTORE
0x93f DUP2
0x940 JUMP
---
0x90a: JUMPDEST 
0x90b: V738 = 0x40
0x90e: V739 = M[0x40]
0x911: V740 = ADD 0x40 V739
0x914: M[0x40] = V740
0x915: V741 = 0x4
0x918: M[V739] = 0x4
0x919: V742 = 0x7465737400000000000000000000000000000000000000000000000000000000
0x93a: V743 = 0x20
0x93d: V744 = ADD V739 0x20
0x93e: M[V744] = 0x7465737400000000000000000000000000000000000000000000000000000000
0x940: JUMP 0x130
---
Entry stack: [V11, 0x130]
Stack pops: 1
Stack additions: [S0, V739]
Exit stack: [V11, 0x130, V739]

================================

Block 0x941
[0x941:0x956]
---
Predecessors: [0x2c7]
Successors: [0x957, 0x95b]
---
0x941 JUMPDEST
0x942 PUSH1 0x1
0x944 SLOAD
0x945 PUSH1 0x0
0x947 SWAP1
0x948 PUSH1 0x1
0x94a PUSH1 0xa0
0x94c PUSH1 0x2
0x94e EXP
0x94f SUB
0x950 AND
0x951 CALLER
0x952 EQ
0x953 PUSH2 0x95b
0x956 JUMPI
---
0x941: JUMPDEST 
0x942: V745 = 0x1
0x944: V746 = S[0x1]
0x945: V747 = 0x0
0x948: V748 = 0x1
0x94a: V749 = 0xa0
0x94c: V750 = 0x2
0x94e: V751 = EXP 0x2 0xa0
0x94f: V752 = SUB 0x10000000000000000000000000000000000000000 0x1
0x950: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0x951: V754 = CALLER
0x952: V755 = EQ V754 V753
0x953: V756 = 0x95b
0x956: JUMPI 0x95b V755
---
Entry stack: [V11, 0x1c9]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1c9, 0x0]

================================

Block 0x957
[0x957:0x95a]
---
Predecessors: [0x941]
Successors: []
---
0x957 PUSH1 0x0
0x959 DUP1
0x95a REVERT
---
0x957: V757 = 0x0
0x95a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, 0x0]

================================

Block 0x95b
[0x95b:0x966]
---
Predecessors: [0x941]
Successors: [0x967, 0x96b]
---
0x95b JUMPDEST
0x95c PUSH1 0x8
0x95e SLOAD
0x95f PUSH1 0xff
0x961 AND
0x962 ISZERO
0x963 PUSH2 0x96b
0x966 JUMPI
---
0x95b: JUMPDEST 
0x95c: V758 = 0x8
0x95e: V759 = S[0x8]
0x95f: V760 = 0xff
0x961: V761 = AND 0xff V759
0x962: V762 = ISZERO V761
0x963: V763 = 0x96b
0x966: JUMPI 0x96b V762
---
Entry stack: [V11, 0x1c9, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, 0x0]

================================

Block 0x967
[0x967:0x96a]
---
Predecessors: [0x95b]
Successors: []
---
0x967 PUSH1 0x0
0x969 DUP1
0x96a REVERT
---
0x967: V764 = 0x0
0x96a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, 0x0]

================================

Block 0x96b
[0x96b:0x9a6]
---
Predecessors: [0x95b]
Successors: [0x1c9]
---
0x96b JUMPDEST
0x96c PUSH1 0x8
0x96e DUP1
0x96f SLOAD
0x970 PUSH1 0xff
0x972 NOT
0x973 AND
0x974 PUSH1 0x1
0x976 OR
0x977 SWAP1
0x978 SSTORE
0x979 PUSH1 0x40
0x97b MLOAD
0x97c PUSH32 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0x99d SWAP1
0x99e PUSH1 0x0
0x9a0 SWAP1
0x9a1 LOG1
0x9a2 POP
0x9a3 PUSH1 0x1
0x9a5 SWAP1
0x9a6 JUMP
---
0x96b: JUMPDEST 
0x96c: V765 = 0x8
0x96f: V766 = S[0x8]
0x970: V767 = 0xff
0x972: V768 = NOT 0xff
0x973: V769 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V766
0x974: V770 = 0x1
0x976: V771 = OR 0x1 V769
0x978: S[0x8] = V771
0x979: V772 = 0x40
0x97b: V773 = M[0x40]
0x97c: V774 = 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0x99e: V775 = 0x0
0x9a1: LOG V773 0x0 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0x9a3: V776 = 0x1
0x9a6: JUMP 0x1c9
---
Entry stack: [V11, 0x1c9, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x9a7
[0x9a7:0x9b4]
---
Predecessors: [0x2dc]
Successors: [0x9b5, 0x9b6]
---
0x9a7 JUMPDEST
0x9a8 PUSH1 0x0
0x9aa PUSH1 0x40
0x9ac PUSH1 0x44
0x9ae CALLDATASIZE
0x9af LT
0x9b0 ISZERO
0x9b1 PUSH2 0x9b6
0x9b4 JUMPI
---
0x9a7: JUMPDEST 
0x9a8: V777 = 0x0
0x9aa: V778 = 0x40
0x9ac: V779 = 0x44
0x9ae: V780 = CALLDATASIZE
0x9af: V781 = LT V780 0x44
0x9b0: V782 = ISZERO V781
0x9b1: V783 = 0x9b6
0x9b4: JUMPI 0x9b6 V782
---
Entry stack: [V11, 0x1c9, V237, V239]
Stack pops: 0
Stack additions: [0x0, 0x40]
Exit stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]

================================

Block 0x9b5
[0x9b5:0x9b5]
---
Predecessors: [0x9a7]
Successors: []
---
0x9b5 INVALID
---
0x9b5: INVALID 
---
Entry stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]

================================

Block 0x9b6
[0x9b6:0x9c6]
---
Predecessors: [0x9a7]
Successors: [0x9c7, 0x9cb]
---
0x9b6 JUMPDEST
0x9b7 PUSH1 0x1
0x9b9 PUSH1 0xa0
0x9bb PUSH1 0x2
0x9bd EXP
0x9be SUB
0x9bf DUP5
0x9c0 AND
0x9c1 ISZERO
0x9c2 ISZERO
0x9c3 PUSH2 0x9cb
0x9c6 JUMPI
---
0x9b6: JUMPDEST 
0x9b7: V784 = 0x1
0x9b9: V785 = 0xa0
0x9bb: V786 = 0x2
0x9bd: V787 = EXP 0x2 0xa0
0x9be: V788 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c0: V789 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x9c1: V790 = ISZERO V789
0x9c2: V791 = ISZERO V790
0x9c3: V792 = 0x9cb
0x9c6: JUMPI 0x9cb V791
---
Entry stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]

================================

Block 0x9c7
[0x9c7:0x9ca]
---
Predecessors: [0x9b6]
Successors: []
---
0x9c7 PUSH1 0x0
0x9c9 DUP1
0x9ca REVERT
---
0x9c7: V793 = 0x0
0x9ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]

================================

Block 0x9cb
[0x9cb:0x9e2]
---
Predecessors: [0x9b6]
Successors: [0x9e3, 0x9e7]
---
0x9cb JUMPDEST
0x9cc CALLER
0x9cd PUSH1 0x0
0x9cf SWAP1
0x9d0 DUP2
0x9d1 MSTORE
0x9d2 PUSH1 0x2
0x9d4 PUSH1 0x20
0x9d6 MSTORE
0x9d7 PUSH1 0x40
0x9d9 SWAP1
0x9da SHA3
0x9db SLOAD
0x9dc DUP4
0x9dd GT
0x9de ISZERO
0x9df PUSH2 0x9e7
0x9e2 JUMPI
---
0x9cb: JUMPDEST 
0x9cc: V794 = CALLER
0x9cd: V795 = 0x0
0x9d1: M[0x0] = V794
0x9d2: V796 = 0x2
0x9d4: V797 = 0x20
0x9d6: M[0x20] = 0x2
0x9d7: V798 = 0x40
0x9da: V799 = SHA3 0x0 0x40
0x9db: V800 = S[V799]
0x9dd: V801 = GT V239 V800
0x9de: V802 = ISZERO V801
0x9df: V803 = 0x9e7
0x9e2: JUMPI 0x9e7 V802
---
Entry stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]

================================

Block 0x9e3
[0x9e3:0x9e6]
---
Predecessors: [0x9cb]
Successors: []
---
0x9e3 PUSH1 0x0
0x9e5 DUP1
0x9e6 REVERT
---
0x9e3: V804 = 0x0
0x9e6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]

================================

Block 0x9e7
[0x9e7:0xa06]
---
Predecessors: [0x9cb]
Successors: [0xe74]
---
0x9e7 JUMPDEST
0x9e8 CALLER
0x9e9 PUSH1 0x0
0x9eb SWAP1
0x9ec DUP2
0x9ed MSTORE
0x9ee PUSH1 0x2
0x9f0 PUSH1 0x20
0x9f2 MSTORE
0x9f3 PUSH1 0x40
0x9f5 SWAP1
0x9f6 SHA3
0x9f7 SLOAD
0x9f8 PUSH2 0xa07
0x9fb SWAP1
0x9fc DUP5
0x9fd PUSH4 0xffffffff
0xa02 PUSH2 0xe74
0xa05 AND
0xa06 JUMP
---
0x9e7: JUMPDEST 
0x9e8: V805 = CALLER
0x9e9: V806 = 0x0
0x9ed: M[0x0] = V805
0x9ee: V807 = 0x2
0x9f0: V808 = 0x20
0x9f2: M[0x20] = 0x2
0x9f3: V809 = 0x40
0x9f6: V810 = SHA3 0x0 0x40
0x9f7: V811 = S[V810]
0x9f8: V812 = 0xa07
0x9fd: V813 = 0xffffffff
0xa02: V814 = 0xe74
0xa05: V815 = AND 0xe74 0xffffffff
0xa06: JUMP 0xe74
---
Entry stack: [V11, 0x1c9, V237, V239, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xa07, V811, S2]
Exit stack: [V11, 0x1c9, V237, V239, 0x0, 0x40, 0xa07, V811, V239]

================================

Block 0xa07
[0xa07:0xa38]
---
Predecessors: [0xe80]
Successors: [0xe86]
---
0xa07 JUMPDEST
0xa08 CALLER
0xa09 PUSH1 0x0
0xa0b SWAP1
0xa0c DUP2
0xa0d MSTORE
0xa0e PUSH1 0x2
0xa10 PUSH1 0x20
0xa12 MSTORE
0xa13 PUSH1 0x40
0xa15 DUP1
0xa16 DUP3
0xa17 SHA3
0xa18 SWAP3
0xa19 SWAP1
0xa1a SWAP3
0xa1b SSTORE
0xa1c PUSH1 0x1
0xa1e PUSH1 0xa0
0xa20 PUSH1 0x2
0xa22 EXP
0xa23 SUB
0xa24 DUP7
0xa25 AND
0xa26 DUP2
0xa27 MSTORE
0xa28 SHA3
0xa29 SLOAD
0xa2a PUSH2 0xa39
0xa2d SWAP1
0xa2e DUP5
0xa2f PUSH4 0xffffffff
0xa34 PUSH2 0xe86
0xa37 AND
0xa38 JUMP
---
0xa07: JUMPDEST 
0xa08: V816 = CALLER
0xa09: V817 = 0x0
0xa0d: M[0x0] = V816
0xa0e: V818 = 0x2
0xa10: V819 = 0x20
0xa12: M[0x20] = 0x2
0xa13: V820 = 0x40
0xa17: V821 = SHA3 0x0 0x40
0xa1b: S[V821] = V1159
0xa1c: V822 = 0x1
0xa1e: V823 = 0xa0
0xa20: V824 = 0x2
0xa22: V825 = EXP 0x2 0xa0
0xa23: V826 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa25: V827 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xa27: M[0x0] = V827
0xa28: V828 = SHA3 0x0 0x40
0xa29: V829 = S[V828]
0xa2a: V830 = 0xa39
0xa2f: V831 = 0xffffffff
0xa34: V832 = 0xe86
0xa37: V833 = AND 0xe86 0xffffffff
0xa38: JUMP 0xe86
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1159]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xa39, V829, S3]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xa39, V829, S3]

================================

Block 0xa39
[0xa39:0xa97]
---
Predecessors: [0xd53]
Successors: [0x119, 0x1c9]
---
0xa39 JUMPDEST
0xa3a PUSH1 0x1
0xa3c PUSH1 0xa0
0xa3e PUSH1 0x2
0xa40 EXP
0xa41 SUB
0xa42 DUP6
0xa43 AND
0xa44 PUSH1 0x0
0xa46 DUP2
0xa47 DUP2
0xa48 MSTORE
0xa49 PUSH1 0x2
0xa4b PUSH1 0x20
0xa4d SWAP1
0xa4e DUP2
0xa4f MSTORE
0xa50 PUSH1 0x40
0xa52 SWAP2
0xa53 DUP3
0xa54 SWAP1
0xa55 SHA3
0xa56 SWAP4
0xa57 SWAP1
0xa58 SWAP4
0xa59 SSTORE
0xa5a DUP1
0xa5b MLOAD
0xa5c DUP7
0xa5d DUP2
0xa5e MSTORE
0xa5f SWAP1
0xa60 MLOAD
0xa61 SWAP2
0xa62 SWAP3
0xa63 CALLER
0xa64 SWAP3
0xa65 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa86 SWAP3
0xa87 DUP2
0xa88 SWAP1
0xa89 SUB
0xa8a SWAP1
0xa8b SWAP2
0xa8c ADD
0xa8d SWAP1
0xa8e LOG3
0xa8f POP
0xa90 PUSH1 0x1
0xa92 SWAP4
0xa93 SWAP3
0xa94 POP
0xa95 POP
0xa96 POP
0xa97 JUMP
---
0xa39: JUMPDEST 
0xa3a: V834 = 0x1
0xa3c: V835 = 0xa0
0xa3e: V836 = 0x2
0xa40: V837 = EXP 0x2 0xa0
0xa41: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa43: V839 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xa44: V840 = 0x0
0xa48: M[0x0] = V839
0xa49: V841 = 0x2
0xa4b: V842 = 0x20
0xa4f: M[0x20] = 0x2
0xa50: V843 = 0x40
0xa55: V844 = SHA3 0x0 0x40
0xa59: S[V844] = S0
0xa5b: V845 = M[0x40]
0xa5e: M[V845] = S3
0xa60: V846 = M[0x40]
0xa63: V847 = CALLER
0xa65: V848 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa89: V849 = SUB V845 V846
0xa8c: V850 = ADD 0x20 V849
0xa8e: LOG V846 V850 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V847 V839
0xa90: V851 = 0x1
0xa97: JUMP S5
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, 0x1]

================================

Block 0xa98
[0xa98:0xaa0]
---
Predecessors: [0x300]
Successors: [0x1c9]
---
0xa98 JUMPDEST
0xa99 PUSH1 0x8
0xa9b SLOAD
0xa9c PUSH1 0xff
0xa9e AND
0xa9f DUP2
0xaa0 JUMP
---
0xa98: JUMPDEST 
0xa99: V852 = 0x8
0xa9b: V853 = S[0x8]
0xa9c: V854 = 0xff
0xa9e: V855 = AND 0xff V853
0xaa0: JUMP 0x1c9
---
Entry stack: [V11, 0x1c9]
Stack pops: 1
Stack additions: [S0, V855]
Exit stack: [V11, 0x1c9, V855]

================================

Block 0xaa1
[0xaa1:0xb18]
---
Predecessors: [0x315]
Successors: [0xb19, 0xb1d]
---
0xaa1 JUMPDEST
0xaa2 PUSH1 0x0
0xaa4 DUP1
0xaa5 PUSH1 0x0
0xaa7 DUP5
0xaa8 SWAP2
0xaa9 POP
0xaaa DUP2
0xaab PUSH1 0x1
0xaad PUSH1 0xa0
0xaaf PUSH1 0x2
0xab1 EXP
0xab2 SUB
0xab3 AND
0xab4 PUSH4 0x70a08231
0xab9 DUP6
0xaba PUSH1 0x40
0xabc MLOAD
0xabd DUP3
0xabe PUSH4 0xffffffff
0xac3 AND
0xac4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xae2 MUL
0xae3 DUP2
0xae4 MSTORE
0xae5 PUSH1 0x4
0xae7 ADD
0xae8 DUP1
0xae9 DUP3
0xaea PUSH1 0x1
0xaec PUSH1 0xa0
0xaee PUSH1 0x2
0xaf0 EXP
0xaf1 SUB
0xaf2 AND
0xaf3 PUSH1 0x1
0xaf5 PUSH1 0xa0
0xaf7 PUSH1 0x2
0xaf9 EXP
0xafa SUB
0xafb AND
0xafc DUP2
0xafd MSTORE
0xafe PUSH1 0x20
0xb00 ADD
0xb01 SWAP2
0xb02 POP
0xb03 POP
0xb04 PUSH1 0x20
0xb06 PUSH1 0x40
0xb08 MLOAD
0xb09 DUP1
0xb0a DUP4
0xb0b SUB
0xb0c DUP2
0xb0d PUSH1 0x0
0xb0f DUP8
0xb10 DUP1
0xb11 EXTCODESIZE
0xb12 ISZERO
0xb13 DUP1
0xb14 ISZERO
0xb15 PUSH2 0xb1d
0xb18 JUMPI
---
0xaa1: JUMPDEST 
0xaa2: V856 = 0x0
0xaa5: V857 = 0x0
0xaab: V858 = 0x1
0xaad: V859 = 0xa0
0xaaf: V860 = 0x2
0xab1: V861 = EXP 0x2 0xa0
0xab2: V862 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab3: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0xab4: V864 = 0x70a08231
0xaba: V865 = 0x40
0xabc: V866 = M[0x40]
0xabe: V867 = 0xffffffff
0xac3: V868 = AND 0xffffffff 0x70a08231
0xac4: V869 = 0x100000000000000000000000000000000000000000000000000000000
0xae2: V870 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xae4: M[V866] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xae5: V871 = 0x4
0xae7: V872 = ADD 0x4 V866
0xaea: V873 = 0x1
0xaec: V874 = 0xa0
0xaee: V875 = 0x2
0xaf0: V876 = EXP 0x2 0xa0
0xaf1: V877 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf2: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0xaf3: V879 = 0x1
0xaf5: V880 = 0xa0
0xaf7: V881 = 0x2
0xaf9: V882 = EXP 0x2 0xa0
0xafa: V883 = SUB 0x10000000000000000000000000000000000000000 0x1
0xafb: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V878
0xafd: M[V872] = V884
0xafe: V885 = 0x20
0xb00: V886 = ADD 0x20 V872
0xb04: V887 = 0x20
0xb06: V888 = 0x40
0xb08: V889 = M[0x40]
0xb0b: V890 = SUB V886 V889
0xb0d: V891 = 0x0
0xb11: V892 = EXTCODESIZE V863
0xb12: V893 = ISZERO V892
0xb14: V894 = ISZERO V893
0xb15: V895 = 0xb1d
0xb18: JUMPI 0xb1d V894
---
Entry stack: [V11, 0x1f2, V259, V262]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1, 0x0, V863, 0x70a08231, V886, 0x20, V889, V890, V889, 0x0, V863, V893]
Exit stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V863, 0x70a08231, V886, 0x20, V889, V890, V889, 0x0, V863, V893]

================================

Block 0xb19
[0xb19:0xb1c]
---
Predecessors: [0xaa1]
Successors: []
---
0xb19 PUSH1 0x0
0xb1b DUP1
0xb1c REVERT
---
0xb19: V896 = 0x0
0xb1c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V863, 0x70a08231, V886, 0x20, V889, V890, V889, 0x0, V863, V893]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V863, 0x70a08231, V886, 0x20, V889, V890, V889, 0x0, V863, V893]

================================

Block 0xb1d
[0xb1d:0xb27]
---
Predecessors: [0xaa1]
Successors: [0xb28, 0xb31]
---
0xb1d JUMPDEST
0xb1e POP
0xb1f GAS
0xb20 CALL
0xb21 ISZERO
0xb22 DUP1
0xb23 ISZERO
0xb24 PUSH2 0xb31
0xb27 JUMPI
---
0xb1d: JUMPDEST 
0xb1f: V897 = GAS
0xb20: V898 = CALL V897 V863 0x0 V889 V890 V889 0x20
0xb21: V899 = ISZERO V898
0xb23: V900 = ISZERO V899
0xb24: V901 = 0xb31
0xb27: JUMPI 0xb31 V900
---
Entry stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V863, 0x70a08231, V886, 0x20, V889, V890, V889, 0x0, V863, V893]
Stack pops: 7
Stack additions: [V899]
Exit stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V863, 0x70a08231, V886, V899]

================================

Block 0xb28
[0xb28:0xb30]
---
Predecessors: [0xb1d]
Successors: []
---
0xb28 RETURNDATASIZE
0xb29 PUSH1 0x0
0xb2b DUP1
0xb2c RETURNDATACOPY
0xb2d RETURNDATASIZE
0xb2e PUSH1 0x0
0xb30 REVERT
---
0xb28: V902 = RETURNDATASIZE
0xb29: V903 = 0x0
0xb2c: RETURNDATACOPY 0x0 0x0 V902
0xb2d: V904 = RETURNDATASIZE
0xb2e: V905 = 0x0
0xb30: REVERT 0x0 V904
---
Entry stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V863, 0x70a08231, V886, V899]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V863, 0x70a08231, V886, V899]

================================

Block 0xb31
[0xb31:0xb42]
---
Predecessors: [0xb1d]
Successors: [0xb43, 0xb47]
---
0xb31 JUMPDEST
0xb32 POP
0xb33 POP
0xb34 POP
0xb35 POP
0xb36 PUSH1 0x40
0xb38 MLOAD
0xb39 RETURNDATASIZE
0xb3a PUSH1 0x20
0xb3c DUP2
0xb3d LT
0xb3e ISZERO
0xb3f PUSH2 0xb47
0xb42 JUMPI
---
0xb31: JUMPDEST 
0xb36: V906 = 0x40
0xb38: V907 = M[0x40]
0xb39: V908 = RETURNDATASIZE
0xb3a: V909 = 0x20
0xb3d: V910 = LT V908 0x20
0xb3e: V911 = ISZERO V910
0xb3f: V912 = 0xb47
0xb42: JUMPI 0xb47 V911
---
Entry stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V863, 0x70a08231, V886, V899]
Stack pops: 4
Stack additions: [V907, V908]
Exit stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V907, V908]

================================

Block 0xb43
[0xb43:0xb46]
---
Predecessors: [0xb31]
Successors: []
---
0xb43 PUSH1 0x0
0xb45 DUP1
0xb46 REVERT
---
0xb43: V913 = 0x0
0xb46: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V907, V908]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V907, V908]

================================

Block 0xb47
[0xb47:0xb51]
---
Predecessors: [0xb31]
Successors: [0x1f2]
---
0xb47 JUMPDEST
0xb48 POP
0xb49 MLOAD
0xb4a SWAP6
0xb4b SWAP5
0xb4c POP
0xb4d POP
0xb4e POP
0xb4f POP
0xb50 POP
0xb51 JUMP
---
0xb47: JUMPDEST 
0xb49: V914 = M[V907]
0xb51: JUMP 0x1f2
---
Entry stack: [V11, 0x1f2, V259, V262, 0x0, V259, 0x0, V907, V908]
Stack pops: 8
Stack additions: [V914]
Exit stack: [V11, V914]

================================

Block 0xb52
[0xb52:0xb57]
---
Predecessors: [0x33c]
Successors: [0x1f2]
---
0xb52 JUMPDEST
0xb53 PUSH1 0x6
0xb55 SLOAD
0xb56 DUP2
0xb57 JUMP
---
0xb52: JUMPDEST 
0xb53: V915 = 0x6
0xb55: V916 = S[0x6]
0xb57: JUMP 0x1f2
---
Entry stack: [V11, 0x1f2]
Stack pops: 1
Stack additions: [S0, V916]
Exit stack: [V11, 0x1f2, V916]

================================

Block 0xb58
[0xb58:0xb82]
---
Predecessors: [0x351]
Successors: [0x1f2]
---
0xb58 JUMPDEST
0xb59 PUSH1 0x1
0xb5b PUSH1 0xa0
0xb5d PUSH1 0x2
0xb5f EXP
0xb60 SUB
0xb61 SWAP2
0xb62 DUP3
0xb63 AND
0xb64 PUSH1 0x0
0xb66 SWAP1
0xb67 DUP2
0xb68 MSTORE
0xb69 PUSH1 0x3
0xb6b PUSH1 0x20
0xb6d SWAP1
0xb6e DUP2
0xb6f MSTORE
0xb70 PUSH1 0x40
0xb72 DUP1
0xb73 DUP4
0xb74 SHA3
0xb75 SWAP4
0xb76 SWAP1
0xb77 SWAP5
0xb78 AND
0xb79 DUP3
0xb7a MSTORE
0xb7b SWAP2
0xb7c SWAP1
0xb7d SWAP2
0xb7e MSTORE
0xb7f SHA3
0xb80 SLOAD
0xb81 SWAP1
0xb82 JUMP
---
0xb58: JUMPDEST 
0xb59: V917 = 0x1
0xb5b: V918 = 0xa0
0xb5d: V919 = 0x2
0xb5f: V920 = EXP 0x2 0xa0
0xb60: V921 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb63: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0xb64: V923 = 0x0
0xb68: M[0x0] = V922
0xb69: V924 = 0x3
0xb6b: V925 = 0x20
0xb6f: M[0x20] = 0x3
0xb70: V926 = 0x40
0xb74: V927 = SHA3 0x0 0x40
0xb78: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0xb7a: M[0x0] = V928
0xb7e: M[0x20] = V927
0xb7f: V929 = SHA3 0x0 0x40
0xb80: V930 = S[V929]
0xb82: JUMP 0x1f2
---
Entry stack: [V11, 0x1f2, V282, V285]
Stack pops: 3
Stack additions: [V930]
Exit stack: [V11, V930]

================================

Block 0xb83
[0xb83:0xb9c]
---
Predecessors: [0x378]
Successors: [0xb9d, 0xba1]
---
0xb83 JUMPDEST
0xb84 PUSH1 0x1
0xb86 SLOAD
0xb87 PUSH1 0x0
0xb89 SWAP1
0xb8a DUP2
0xb8b SWAP1
0xb8c DUP2
0xb8d SWAP1
0xb8e PUSH1 0x1
0xb90 PUSH1 0xa0
0xb92 PUSH1 0x2
0xb94 EXP
0xb95 SUB
0xb96 AND
0xb97 CALLER
0xb98 EQ
0xb99 PUSH2 0xba1
0xb9c JUMPI
---
0xb83: JUMPDEST 
0xb84: V931 = 0x1
0xb86: V932 = S[0x1]
0xb87: V933 = 0x0
0xb8e: V934 = 0x1
0xb90: V935 = 0xa0
0xb92: V936 = 0x2
0xb94: V937 = EXP 0x2 0xa0
0xb95: V938 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb96: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V932
0xb97: V940 = CALLER
0xb98: V941 = EQ V940 V939
0xb99: V942 = 0xba1
0xb9c: JUMPI 0xba1 V941
---
Entry stack: [V11, 0x1c9, V299]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x1c9, V299, 0x0, 0x0, 0x0]

================================

Block 0xb9d
[0xb9d:0xba0]
---
Predecessors: [0xb83]
Successors: []
---
0xb9d PUSH1 0x0
0xb9f DUP1
0xba0 REVERT
---
0xb9d: V943 = 0x0
0xba0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V299, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V299, 0x0, 0x0, 0x0]

================================

Block 0xba1
[0xba1:0xc00]
---
Predecessors: [0xb83]
Successors: [0xc01, 0xc05]
---
0xba1 JUMPDEST
0xba2 PUSH1 0x40
0xba4 DUP1
0xba5 MLOAD
0xba6 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbc7 DUP2
0xbc8 MSTORE
0xbc9 ADDRESS
0xbca PUSH1 0x4
0xbcc DUP3
0xbcd ADD
0xbce MSTORE
0xbcf SWAP1
0xbd0 MLOAD
0xbd1 DUP6
0xbd2 SWAP4
0xbd3 POP
0xbd4 PUSH1 0x1
0xbd6 PUSH1 0xa0
0xbd8 PUSH1 0x2
0xbda EXP
0xbdb SUB
0xbdc DUP5
0xbdd AND
0xbde SWAP2
0xbdf PUSH4 0x70a08231
0xbe4 SWAP2
0xbe5 PUSH1 0x24
0xbe7 DUP1
0xbe8 DUP4
0xbe9 ADD
0xbea SWAP3
0xbeb PUSH1 0x20
0xbed SWAP3
0xbee SWAP2
0xbef SWAP1
0xbf0 DUP3
0xbf1 SWAP1
0xbf2 SUB
0xbf3 ADD
0xbf4 DUP2
0xbf5 PUSH1 0x0
0xbf7 DUP8
0xbf8 DUP1
0xbf9 EXTCODESIZE
0xbfa ISZERO
0xbfb DUP1
0xbfc ISZERO
0xbfd PUSH2 0xc05
0xc00 JUMPI
---
0xba1: JUMPDEST 
0xba2: V944 = 0x40
0xba5: V945 = M[0x40]
0xba6: V946 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbc8: M[V945] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbc9: V947 = ADDRESS
0xbca: V948 = 0x4
0xbcd: V949 = ADD V945 0x4
0xbce: M[V949] = V947
0xbd0: V950 = M[0x40]
0xbd4: V951 = 0x1
0xbd6: V952 = 0xa0
0xbd8: V953 = 0x2
0xbda: V954 = EXP 0x2 0xa0
0xbdb: V955 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbdd: V956 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0xbdf: V957 = 0x70a08231
0xbe5: V958 = 0x24
0xbe9: V959 = ADD V945 0x24
0xbeb: V960 = 0x20
0xbf2: V961 = SUB V945 V950
0xbf3: V962 = ADD V961 0x24
0xbf5: V963 = 0x0
0xbf9: V964 = EXTCODESIZE V956
0xbfa: V965 = ISZERO V964
0xbfc: V966 = ISZERO V965
0xbfd: V967 = 0xc05
0xc00: JUMPI 0xc05 V966
---
Entry stack: [V11, 0x1c9, V299, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V956, 0x70a08231, V959, 0x20, V950, V962, V950, 0x0, V956, V965]
Exit stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V956, 0x70a08231, V959, 0x20, V950, V962, V950, 0x0, V956, V965]

================================

Block 0xc01
[0xc01:0xc04]
---
Predecessors: [0xba1]
Successors: []
---
0xc01 PUSH1 0x0
0xc03 DUP1
0xc04 REVERT
---
0xc01: V968 = 0x0
0xc04: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V956, 0x70a08231, V959, 0x20, V950, V962, V950, 0x0, V956, V965]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V956, 0x70a08231, V959, 0x20, V950, V962, V950, 0x0, V956, V965]

================================

Block 0xc05
[0xc05:0xc0f]
---
Predecessors: [0xba1]
Successors: [0xc10, 0xc19]
---
0xc05 JUMPDEST
0xc06 POP
0xc07 GAS
0xc08 CALL
0xc09 ISZERO
0xc0a DUP1
0xc0b ISZERO
0xc0c PUSH2 0xc19
0xc0f JUMPI
---
0xc05: JUMPDEST 
0xc07: V969 = GAS
0xc08: V970 = CALL V969 V956 0x0 V950 V962 V950 0x20
0xc09: V971 = ISZERO V970
0xc0b: V972 = ISZERO V971
0xc0c: V973 = 0xc19
0xc0f: JUMPI 0xc19 V972
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V956, 0x70a08231, V959, 0x20, V950, V962, V950, 0x0, V956, V965]
Stack pops: 7
Stack additions: [V971]
Exit stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V956, 0x70a08231, V959, V971]

================================

Block 0xc10
[0xc10:0xc18]
---
Predecessors: [0xc05]
Successors: []
---
0xc10 RETURNDATASIZE
0xc11 PUSH1 0x0
0xc13 DUP1
0xc14 RETURNDATACOPY
0xc15 RETURNDATASIZE
0xc16 PUSH1 0x0
0xc18 REVERT
---
0xc10: V974 = RETURNDATASIZE
0xc11: V975 = 0x0
0xc14: RETURNDATACOPY 0x0 0x0 V974
0xc15: V976 = RETURNDATASIZE
0xc16: V977 = 0x0
0xc18: REVERT 0x0 V976
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V956, 0x70a08231, V959, V971]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V956, 0x70a08231, V959, V971]

================================

Block 0xc19
[0xc19:0xc2a]
---
Predecessors: [0xc05]
Successors: [0xc2b, 0xc2f]
---
0xc19 JUMPDEST
0xc1a POP
0xc1b POP
0xc1c POP
0xc1d POP
0xc1e PUSH1 0x40
0xc20 MLOAD
0xc21 RETURNDATASIZE
0xc22 PUSH1 0x20
0xc24 DUP2
0xc25 LT
0xc26 ISZERO
0xc27 PUSH2 0xc2f
0xc2a JUMPI
---
0xc19: JUMPDEST 
0xc1e: V978 = 0x40
0xc20: V979 = M[0x40]
0xc21: V980 = RETURNDATASIZE
0xc22: V981 = 0x20
0xc25: V982 = LT V980 0x20
0xc26: V983 = ISZERO V982
0xc27: V984 = 0xc2f
0xc2a: JUMPI 0xc2f V983
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V956, 0x70a08231, V959, V971]
Stack pops: 4
Stack additions: [V979, V980]
Exit stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V979, V980]

================================

Block 0xc2b
[0xc2b:0xc2e]
---
Predecessors: [0xc19]
Successors: []
---
0xc2b PUSH1 0x0
0xc2d DUP1
0xc2e REVERT
---
0xc2b: V985 = 0x0
0xc2e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V979, V980]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V979, V980]

================================

Block 0xc2f
[0xc2f:0xc9e]
---
Predecessors: [0xc19]
Successors: [0xc9f, 0xca3]
---
0xc2f JUMPDEST
0xc30 POP
0xc31 MLOAD
0xc32 PUSH1 0x1
0xc34 SLOAD
0xc35 PUSH1 0x40
0xc37 DUP1
0xc38 MLOAD
0xc39 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc5a DUP2
0xc5b MSTORE
0xc5c PUSH1 0x1
0xc5e PUSH1 0xa0
0xc60 PUSH1 0x2
0xc62 EXP
0xc63 SUB
0xc64 SWAP3
0xc65 DUP4
0xc66 AND
0xc67 PUSH1 0x4
0xc69 DUP3
0xc6a ADD
0xc6b MSTORE
0xc6c PUSH1 0x24
0xc6e DUP2
0xc6f ADD
0xc70 DUP5
0xc71 SWAP1
0xc72 MSTORE
0xc73 SWAP1
0xc74 MLOAD
0xc75 SWAP3
0xc76 SWAP4
0xc77 POP
0xc78 SWAP1
0xc79 DUP5
0xc7a AND
0xc7b SWAP2
0xc7c PUSH4 0xa9059cbb
0xc81 SWAP2
0xc82 PUSH1 0x44
0xc84 DUP1
0xc85 DUP3
0xc86 ADD
0xc87 SWAP3
0xc88 PUSH1 0x20
0xc8a SWAP3
0xc8b SWAP1
0xc8c SWAP2
0xc8d SWAP1
0xc8e DUP3
0xc8f SWAP1
0xc90 SUB
0xc91 ADD
0xc92 DUP2
0xc93 PUSH1 0x0
0xc95 DUP8
0xc96 DUP1
0xc97 EXTCODESIZE
0xc98 ISZERO
0xc99 DUP1
0xc9a ISZERO
0xc9b PUSH2 0xca3
0xc9e JUMPI
---
0xc2f: JUMPDEST 
0xc31: V986 = M[V979]
0xc32: V987 = 0x1
0xc34: V988 = S[0x1]
0xc35: V989 = 0x40
0xc38: V990 = M[0x40]
0xc39: V991 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc5b: M[V990] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc5c: V992 = 0x1
0xc5e: V993 = 0xa0
0xc60: V994 = 0x2
0xc62: V995 = EXP 0x2 0xa0
0xc63: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc66: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V988
0xc67: V998 = 0x4
0xc6a: V999 = ADD V990 0x4
0xc6b: M[V999] = V997
0xc6c: V1000 = 0x24
0xc6f: V1001 = ADD V990 0x24
0xc72: M[V1001] = V986
0xc74: V1002 = M[0x40]
0xc7a: V1003 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0xc7c: V1004 = 0xa9059cbb
0xc82: V1005 = 0x44
0xc86: V1006 = ADD V990 0x44
0xc88: V1007 = 0x20
0xc90: V1008 = SUB V990 V1002
0xc91: V1009 = ADD V1008 0x44
0xc93: V1010 = 0x0
0xc97: V1011 = EXTCODESIZE V1003
0xc98: V1012 = ISZERO V1011
0xc9a: V1013 = ISZERO V1012
0xc9b: V1014 = 0xca3
0xc9e: JUMPI 0xca3 V1013
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, 0x0, V979, V980]
Stack pops: 4
Stack additions: [S3, V986, V1003, 0xa9059cbb, V1006, 0x20, V1002, V1009, V1002, 0x0, V1003, V1012]
Exit stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1003, 0xa9059cbb, V1006, 0x20, V1002, V1009, V1002, 0x0, V1003, V1012]

================================

Block 0xc9f
[0xc9f:0xca2]
---
Predecessors: [0xc2f]
Successors: []
---
0xc9f PUSH1 0x0
0xca1 DUP1
0xca2 REVERT
---
0xc9f: V1015 = 0x0
0xca2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1003, 0xa9059cbb, V1006, 0x20, V1002, V1009, V1002, 0x0, V1003, V1012]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1003, 0xa9059cbb, V1006, 0x20, V1002, V1009, V1002, 0x0, V1003, V1012]

================================

Block 0xca3
[0xca3:0xcad]
---
Predecessors: [0xc2f]
Successors: [0xcae, 0xcb7]
---
0xca3 JUMPDEST
0xca4 POP
0xca5 GAS
0xca6 CALL
0xca7 ISZERO
0xca8 DUP1
0xca9 ISZERO
0xcaa PUSH2 0xcb7
0xcad JUMPI
---
0xca3: JUMPDEST 
0xca5: V1016 = GAS
0xca6: V1017 = CALL V1016 V1003 0x0 V1002 V1009 V1002 0x20
0xca7: V1018 = ISZERO V1017
0xca9: V1019 = ISZERO V1018
0xcaa: V1020 = 0xcb7
0xcad: JUMPI 0xcb7 V1019
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1003, 0xa9059cbb, V1006, 0x20, V1002, V1009, V1002, 0x0, V1003, V1012]
Stack pops: 7
Stack additions: [V1018]
Exit stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1003, 0xa9059cbb, V1006, V1018]

================================

Block 0xcae
[0xcae:0xcb6]
---
Predecessors: [0xca3]
Successors: []
---
0xcae RETURNDATASIZE
0xcaf PUSH1 0x0
0xcb1 DUP1
0xcb2 RETURNDATACOPY
0xcb3 RETURNDATASIZE
0xcb4 PUSH1 0x0
0xcb6 REVERT
---
0xcae: V1021 = RETURNDATASIZE
0xcaf: V1022 = 0x0
0xcb2: RETURNDATACOPY 0x0 0x0 V1021
0xcb3: V1023 = RETURNDATASIZE
0xcb4: V1024 = 0x0
0xcb6: REVERT 0x0 V1023
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1003, 0xa9059cbb, V1006, V1018]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1003, 0xa9059cbb, V1006, V1018]

================================

Block 0xcb7
[0xcb7:0xcc8]
---
Predecessors: [0xca3]
Successors: [0xcc9, 0xccd]
---
0xcb7 JUMPDEST
0xcb8 POP
0xcb9 POP
0xcba POP
0xcbb POP
0xcbc PUSH1 0x40
0xcbe MLOAD
0xcbf RETURNDATASIZE
0xcc0 PUSH1 0x20
0xcc2 DUP2
0xcc3 LT
0xcc4 ISZERO
0xcc5 PUSH2 0xccd
0xcc8 JUMPI
---
0xcb7: JUMPDEST 
0xcbc: V1025 = 0x40
0xcbe: V1026 = M[0x40]
0xcbf: V1027 = RETURNDATASIZE
0xcc0: V1028 = 0x20
0xcc3: V1029 = LT V1027 0x20
0xcc4: V1030 = ISZERO V1029
0xcc5: V1031 = 0xccd
0xcc8: JUMPI 0xccd V1030
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1003, 0xa9059cbb, V1006, V1018]
Stack pops: 4
Stack additions: [V1026, V1027]
Exit stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1026, V1027]

================================

Block 0xcc9
[0xcc9:0xccc]
---
Predecessors: [0xcb7]
Successors: []
---
0xcc9 PUSH1 0x0
0xccb DUP1
0xccc REVERT
---
0xcc9: V1032 = 0x0
0xccc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1026, V1027]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1026, V1027]

================================

Block 0xccd
[0xccd:0xcd6]
---
Predecessors: [0xcb7]
Successors: [0x1c9]
---
0xccd JUMPDEST
0xcce POP
0xccf MLOAD
0xcd0 SWAP5
0xcd1 SWAP4
0xcd2 POP
0xcd3 POP
0xcd4 POP
0xcd5 POP
0xcd6 JUMP
---
0xccd: JUMPDEST 
0xccf: V1033 = M[V1026]
0xcd6: JUMP 0x1c9
---
Entry stack: [V11, 0x1c9, V299, 0x0, V299, V986, V1026, V1027]
Stack pops: 7
Stack additions: [V1033]
Exit stack: [V11, V1033]

================================

Block 0xcd7
[0xcd7:0xcdc]
---
Predecessors: [0x399]
Successors: [0x1f2]
---
0xcd7 JUMPDEST
0xcd8 PUSH1 0x5
0xcda SLOAD
0xcdb DUP2
0xcdc JUMP
---
0xcd7: JUMPDEST 
0xcd8: V1034 = 0x5
0xcda: V1035 = S[0x5]
0xcdc: JUMP 0x1f2
---
Entry stack: [V11, 0x1f2]
Stack pops: 1
Stack additions: [S0, V1035]
Exit stack: [V11, 0x1f2, V1035]

================================

Block 0xcdd
[0xcdd:0xcef]
---
Predecessors: [0x3ae]
Successors: [0xcf0, 0xcf4]
---
0xcdd JUMPDEST
0xcde PUSH1 0x1
0xce0 SLOAD
0xce1 PUSH1 0x1
0xce3 PUSH1 0xa0
0xce5 PUSH1 0x2
0xce7 EXP
0xce8 SUB
0xce9 AND
0xcea CALLER
0xceb EQ
0xcec PUSH2 0xcf4
0xcef JUMPI
---
0xcdd: JUMPDEST 
0xcde: V1036 = 0x1
0xce0: V1037 = S[0x1]
0xce1: V1038 = 0x1
0xce3: V1039 = 0xa0
0xce5: V1040 = 0x2
0xce7: V1041 = EXP 0x2 0xa0
0xce8: V1042 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce9: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff V1037
0xcea: V1044 = CALLER
0xceb: V1045 = EQ V1044 V1043
0xcec: V1046 = 0xcf4
0xcef: JUMPI 0xcf4 V1045
---
Entry stack: [V11, 0x119, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V319]

================================

Block 0xcf0
[0xcf0:0xcf3]
---
Predecessors: [0xcdd]
Successors: []
---
0xcf0 PUSH1 0x0
0xcf2 DUP1
0xcf3 REVERT
---
0xcf0: V1047 = 0x0
0xcf3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V319]

================================

Block 0xcf4
[0xcf4:0xd03]
---
Predecessors: [0xcdd]
Successors: [0xd04, 0xd2c]
---
0xcf4 JUMPDEST
0xcf5 PUSH1 0x1
0xcf7 PUSH1 0xa0
0xcf9 PUSH1 0x2
0xcfb EXP
0xcfc SUB
0xcfd DUP2
0xcfe AND
0xcff ISZERO
0xd00 PUSH2 0xd2c
0xd03 JUMPI
---
0xcf4: JUMPDEST 
0xcf5: V1048 = 0x1
0xcf7: V1049 = 0xa0
0xcf9: V1050 = 0x2
0xcfb: V1051 = EXP 0x2 0xa0
0xcfc: V1052 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcfe: V1053 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0xcff: V1054 = ISZERO V1053
0xd00: V1055 = 0xd2c
0xd03: JUMPI 0xd2c V1054
---
Entry stack: [V11, 0x119, V319]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x119, V319]

================================

Block 0xd04
[0xd04:0xd2b]
---
Predecessors: [0xcf4]
Successors: [0xd2c]
---
0xd04 PUSH1 0x1
0xd06 DUP1
0xd07 SLOAD
0xd08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1d NOT
0xd1e AND
0xd1f PUSH1 0x1
0xd21 PUSH1 0xa0
0xd23 PUSH1 0x2
0xd25 EXP
0xd26 SUB
0xd27 DUP4
0xd28 AND
0xd29 OR
0xd2a SWAP1
0xd2b SSTORE
---
0xd04: V1056 = 0x1
0xd07: V1057 = S[0x1]
0xd08: V1058 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1d: V1059 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd1e: V1060 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1057
0xd1f: V1061 = 0x1
0xd21: V1062 = 0xa0
0xd23: V1063 = 0x2
0xd25: V1064 = EXP 0x2 0xa0
0xd26: V1065 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd28: V1066 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0xd29: V1067 = OR V1066 V1060
0xd2b: S[0x1] = V1067
---
Entry stack: [V11, 0x119, V319]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x119, V319]

================================

Block 0xd2c
[0xd2c:0xd2e]
---
Predecessors: [0xcf4, 0xd04]
Successors: [0x119]
---
0xd2c JUMPDEST
0xd2d POP
0xd2e JUMP
---
0xd2c: JUMPDEST 
0xd2e: JUMP 0x119
---
Entry stack: [V11, 0x119, V319]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2f
[0xd2f:0xd3b]
---
Predecessors: [0x3ed, 0x413]
Successors: [0xd3c, 0xd4b]
---
0xd2f JUMPDEST
0xd30 PUSH1 0x0
0xd32 DUP3
0xd33 DUP3
0xd34 MUL
0xd35 DUP4
0xd36 ISZERO
0xd37 DUP1
0xd38 PUSH2 0xd4b
0xd3b JUMPI
---
0xd2f: JUMPDEST 
0xd30: V1068 = 0x0
0xd34: V1069 = MUL S0 S1
0xd36: V1070 = ISZERO S1
0xd38: V1071 = 0xd4b
0xd3b: JUMPI 0xd4b V1070
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1069, V1070]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V1069, V1070]

================================

Block 0xd3c
[0xd3c:0xd46]
---
Predecessors: [0xd2f]
Successors: [0xd47, 0xd48]
---
0xd3c POP
0xd3d DUP3
0xd3e DUP5
0xd3f DUP3
0xd40 DUP2
0xd41 ISZERO
0xd42 ISZERO
0xd43 PUSH2 0xd48
0xd46 JUMPI
---
0xd41: V1072 = ISZERO S4
0xd42: V1073 = ISZERO V1072
0xd43: V1074 = 0xd48
0xd46: JUMPI 0xd48 V1073
---
Entry stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V1069, V1070]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [0x119, S15, {0x0, 0x119}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S3, S4, S1]

================================

Block 0xd47
[0xd47:0xd47]
---
Predecessors: [0xd3c]
Successors: []
---
0xd47 INVALID
---
0xd47: INVALID 
---
Entry stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, S1, S0]

================================

Block 0xd48
[0xd48:0xd4a]
---
Predecessors: [0xd3c]
Successors: [0xd4b]
---
0xd48 JUMPDEST
0xd49 DIV
0xd4a EQ
---
0xd48: JUMPDEST 
0xd49: V1075 = DIV S0 S1
0xd4a: V1076 = EQ V1075 S2
---
Entry stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V1076]
Exit stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, V1076]

================================

Block 0xd4b
[0xd4b:0xd51]
---
Predecessors: [0xd2f, 0xd48]
Successors: [0xd52, 0xd53]
---
0xd4b JUMPDEST
0xd4c ISZERO
0xd4d ISZERO
0xd4e PUSH2 0xd53
0xd51 JUMPI
---
0xd4b: JUMPDEST 
0xd4c: V1077 = ISZERO S0
0xd4d: V1078 = ISZERO V1077
0xd4e: V1079 = 0xd53
0xd51: JUMPI 0xd53 V1078
---
Entry stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1]

================================

Block 0xd52
[0xd52:0xd52]
---
Predecessors: [0xd4b]
Successors: []
---
0xd52 INVALID
---
0xd52: INVALID 
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0xd53
[0xd53:0xd59]
---
Predecessors: [0xd4b, 0xe86]
Successors: [0x1c9, 0x413, 0x41f, 0x42b, 0x48c, 0x501, 0x53a, 0x749, 0xa39, 0xd97, 0xdd9]
---
0xd53 JUMPDEST
0xd54 SWAP4
0xd55 SWAP3
0xd56 POP
0xd57 POP
0xd58 POP
0xd59 JUMP
---
0xd53: JUMPDEST 
0xd59: JUMP S4
---
Entry stack: [0x119, S18, {0x0, 0x119}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [0x119, S18, {0x0, 0x119}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0xd5a
[0xd5a:0xd66]
---
Predecessors: [0x41f, 0x46e, 0x51b]
Successors: [0xd67, 0xd68]
---
0xd5a JUMPDEST
0xd5b PUSH1 0x0
0xd5d DUP1
0xd5e DUP3
0xd5f DUP5
0xd60 DUP2
0xd61 ISZERO
0xd62 ISZERO
0xd63 PUSH2 0xd68
0xd66 JUMPI
---
0xd5a: JUMPDEST 
0xd5b: V1080 = 0x0
0xd61: V1081 = ISZERO S0
0xd62: V1082 = ISZERO V1081
0xd63: V1083 = 0xd68
0xd66: JUMPI 0xd68 V1082
---
Entry stack: [0x119, S18, {0x0, 0x119}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [0x119, S18, {0x0, 0x119}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0xd67
[0xd67:0xd67]
---
Predecessors: [0xd5a]
Successors: []
---
0xd67 INVALID
---
0xd67: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0xd68
[0xd68:0xd70]
---
Predecessors: [0xd5a]
Successors: [0x1c9, 0x413, 0x41f, 0x42b, 0x501]
---
0xd68 JUMPDEST
0xd69 DIV
0xd6a SWAP5
0xd6b SWAP4
0xd6c POP
0xd6d POP
0xd6e POP
0xd6f POP
0xd70 JUMP
---
0xd68: JUMPDEST 
0xd69: V1084 = DIV S0 S1
0xd70: JUMP S6
---
Entry stack: [0x119, S22, {0x0, 0x119}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V1084]
Exit stack: [0x119, S22, {0x0, 0x119}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V1084]

================================

Block 0xd71
[0xd71:0xd7f]
---
Predecessors: [0x4f5]
Successors: [0xd80, 0xd84]
---
0xd71 JUMPDEST
0xd72 PUSH1 0x8
0xd74 SLOAD
0xd75 PUSH1 0x0
0xd77 SWAP1
0xd78 PUSH1 0xff
0xd7a AND
0xd7b ISZERO
0xd7c PUSH2 0xd84
0xd7f JUMPI
---
0xd71: JUMPDEST 
0xd72: V1085 = 0x8
0xd74: V1086 = S[0x8]
0xd75: V1087 = 0x0
0xd78: V1088 = 0xff
0xd7a: V1089 = AND 0xff V1086
0xd7b: V1090 = ISZERO V1089
0xd7c: V1091 = 0xd84
0xd7f: JUMPI 0xd84 V1090
---
Entry stack: [0x119, S12, {0x0, 0x119}, S10, S9, S8, S7, S6, S5, S4, V409, 0x501, V409, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [0x119, S12, {0x0, 0x119}, S10, S9, S8, S7, S6, S5, S4, V409, 0x501, V409, S0, 0x0]

================================

Block 0xd80
[0xd80:0xd83]
---
Predecessors: [0xd71]
Successors: []
---
0xd80 PUSH1 0x0
0xd82 DUP1
0xd83 REVERT
---
0xd80: V1092 = 0x0
0xd83: REVERT 0x0 0x0
---
Entry stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, 0x501, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, 0x501, S2, S1, 0x0]

================================

Block 0xd84
[0xd84:0xd96]
---
Predecessors: [0xd71]
Successors: [0xe86]
---
0xd84 JUMPDEST
0xd85 PUSH1 0x5
0xd87 SLOAD
0xd88 PUSH2 0xd97
0xd8b SWAP1
0xd8c DUP4
0xd8d PUSH4 0xffffffff
0xd92 PUSH2 0xe86
0xd95 AND
0xd96 JUMP
---
0xd84: JUMPDEST 
0xd85: V1093 = 0x5
0xd87: V1094 = S[0x5]
0xd88: V1095 = 0xd97
0xd8d: V1096 = 0xffffffff
0xd92: V1097 = 0xe86
0xd95: V1098 = AND 0xe86 0xffffffff
0xd96: JUMP 0xe86
---
Entry stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, 0x501, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xd97, V1094, S1]
Exit stack: [0x119, S13, {0x0, 0x119}, S11, S10, S9, S8, S7, S6, S5, S4, 0x501, S2, S1, 0x0, 0xd97, V1094, S1]

================================

Block 0xd97
[0xd97:0xdac]
---
Predecessors: [0xd53]
Successors: [0xe74]
---
0xd97 JUMPDEST
0xd98 PUSH1 0x5
0xd9a SSTORE
0xd9b PUSH1 0x6
0xd9d SLOAD
0xd9e PUSH2 0xdad
0xda1 SWAP1
0xda2 DUP4
0xda3 PUSH4 0xffffffff
0xda8 PUSH2 0xe74
0xdab AND
0xdac JUMP
---
0xd97: JUMPDEST 
0xd98: V1099 = 0x5
0xd9a: S[0x5] = S0
0xd9b: V1100 = 0x6
0xd9d: V1101 = S[0x6]
0xd9e: V1102 = 0xdad
0xda3: V1103 = 0xffffffff
0xda8: V1104 = 0xe74
0xdab: V1105 = AND 0xe74 0xffffffff
0xdac: JUMP 0xe74
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xdad, V1101, S2]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xdad, V1101, S2]

================================

Block 0xdad
[0xdad:0xdd8]
---
Predecessors: [0xe80]
Successors: [0xe86]
---
0xdad JUMPDEST
0xdae PUSH1 0x6
0xdb0 SSTORE
0xdb1 PUSH1 0x1
0xdb3 PUSH1 0xa0
0xdb5 PUSH1 0x2
0xdb7 EXP
0xdb8 SUB
0xdb9 DUP4
0xdba AND
0xdbb PUSH1 0x0
0xdbd SWAP1
0xdbe DUP2
0xdbf MSTORE
0xdc0 PUSH1 0x2
0xdc2 PUSH1 0x20
0xdc4 MSTORE
0xdc5 PUSH1 0x40
0xdc7 SWAP1
0xdc8 SHA3
0xdc9 SLOAD
0xdca PUSH2 0xdd9
0xdcd SWAP1
0xdce DUP4
0xdcf PUSH4 0xffffffff
0xdd4 PUSH2 0xe86
0xdd7 AND
0xdd8 JUMP
---
0xdad: JUMPDEST 
0xdae: V1106 = 0x6
0xdb0: S[0x6] = V1159
0xdb1: V1107 = 0x1
0xdb3: V1108 = 0xa0
0xdb5: V1109 = 0x2
0xdb7: V1110 = EXP 0x2 0xa0
0xdb8: V1111 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdba: V1112 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xdbb: V1113 = 0x0
0xdbf: M[0x0] = V1112
0xdc0: V1114 = 0x2
0xdc2: V1115 = 0x20
0xdc4: M[0x20] = 0x2
0xdc5: V1116 = 0x40
0xdc8: V1117 = SHA3 0x0 0x40
0xdc9: V1118 = S[V1117]
0xdca: V1119 = 0xdd9
0xdcf: V1120 = 0xffffffff
0xdd4: V1121 = 0xe86
0xdd7: V1122 = AND 0xe86 0xffffffff
0xdd8: JUMP 0xe86
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1159]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xdd9, V1118, S2]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xdd9, V1118, S2]

================================

Block 0xdd9
[0xdd9:0xe73]
---
Predecessors: [0xd53]
Successors: [0x61a]
---
0xdd9 JUMPDEST
0xdda PUSH1 0x1
0xddc PUSH1 0xa0
0xdde PUSH1 0x2
0xde0 EXP
0xde1 SUB
0xde2 DUP5
0xde3 AND
0xde4 PUSH1 0x0
0xde6 DUP2
0xde7 DUP2
0xde8 MSTORE
0xde9 PUSH1 0x2
0xdeb PUSH1 0x20
0xded SWAP1
0xdee DUP2
0xdef MSTORE
0xdf0 PUSH1 0x40
0xdf2 SWAP2
0xdf3 DUP3
0xdf4 SWAP1
0xdf5 SHA3
0xdf6 SWAP4
0xdf7 SWAP1
0xdf8 SWAP4
0xdf9 SSTORE
0xdfa DUP1
0xdfb MLOAD
0xdfc DUP6
0xdfd DUP2
0xdfe MSTORE
0xdff SWAP1
0xe00 MLOAD
0xe01 SWAP2
0xe02 SWAP3
0xe03 PUSH32 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77
0xe24 SWAP3
0xe25 SWAP2
0xe26 DUP3
0xe27 SWAP1
0xe28 SUB
0xe29 ADD
0xe2a SWAP1
0xe2b LOG2
0xe2c PUSH1 0x40
0xe2e DUP1
0xe2f MLOAD
0xe30 DUP4
0xe31 DUP2
0xe32 MSTORE
0xe33 SWAP1
0xe34 MLOAD
0xe35 PUSH1 0x1
0xe37 PUSH1 0xa0
0xe39 PUSH1 0x2
0xe3b EXP
0xe3c SUB
0xe3d DUP6
0xe3e AND
0xe3f SWAP2
0xe40 PUSH1 0x0
0xe42 SWAP2
0xe43 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xe64 SWAP2
0xe65 DUP2
0xe66 SWAP1
0xe67 SUB
0xe68 PUSH1 0x20
0xe6a ADD
0xe6b SWAP1
0xe6c LOG3
0xe6d POP
0xe6e PUSH1 0x1
0xe70 PUSH2 0x61a
0xe73 JUMP
---
0xdd9: JUMPDEST 
0xdda: V1123 = 0x1
0xddc: V1124 = 0xa0
0xdde: V1125 = 0x2
0xde0: V1126 = EXP 0x2 0xa0
0xde1: V1127 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde3: V1128 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xde4: V1129 = 0x0
0xde8: M[0x0] = V1128
0xde9: V1130 = 0x2
0xdeb: V1131 = 0x20
0xdef: M[0x20] = 0x2
0xdf0: V1132 = 0x40
0xdf5: V1133 = SHA3 0x0 0x40
0xdf9: S[V1133] = S0
0xdfb: V1134 = M[0x40]
0xdfe: M[V1134] = S2
0xe00: V1135 = M[0x40]
0xe03: V1136 = 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77
0xe28: V1137 = SUB V1134 V1135
0xe29: V1138 = ADD V1137 0x20
0xe2b: LOG V1135 V1138 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77 V1128
0xe2c: V1139 = 0x40
0xe2f: V1140 = M[0x40]
0xe32: M[V1140] = S2
0xe34: V1141 = M[0x40]
0xe35: V1142 = 0x1
0xe37: V1143 = 0xa0
0xe39: V1144 = 0x2
0xe3b: V1145 = EXP 0x2 0xa0
0xe3c: V1146 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3e: V1147 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xe40: V1148 = 0x0
0xe43: V1149 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xe67: V1150 = SUB V1140 V1141
0xe68: V1151 = 0x20
0xe6a: V1152 = ADD 0x20 V1150
0xe6c: LOG V1141 V1152 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef 0x0 V1147
0xe6e: V1153 = 0x1
0xe70: V1154 = 0x61a
0xe73: JUMP 0x61a
---
Entry stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [0x119, S14, {0x0, 0x119}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1]

================================

Block 0xe74
[0xe74:0xe7e]
---
Predecessors: [0x69f, 0x6c8, 0x846, 0x867, 0x893, 0x9e7, 0xd97]
Successors: [0xe7f, 0xe80]
---
0xe74 JUMPDEST
0xe75 PUSH1 0x0
0xe77 DUP3
0xe78 DUP3
0xe79 GT
0xe7a ISZERO
0xe7b PUSH2 0xe80
0xe7e JUMPI
---
0xe74: JUMPDEST 
0xe75: V1155 = 0x0
0xe79: V1156 = GT S0 S1
0xe7a: V1157 = ISZERO V1156
0xe7b: V1158 = 0xe80
0xe7e: JUMPI 0xe80 V1157
---
Entry stack: [0x119, S16, {0x0, 0x119}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x6c8, 0x705, 0x867, 0x893, 0x8a9, 0xa07, 0xdad}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [0x119, S16, {0x0, 0x119}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x6c8, 0x705, 0x867, 0x893, 0x8a9, 0xa07, 0xdad}, S1, S0, 0x0]

================================

Block 0xe7f
[0xe7f:0xe7f]
---
Predecessors: [0xe74]
Successors: []
---
0xe7f INVALID
---
0xe7f: INVALID 
---
Entry stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x6c8, 0x705, 0x867, 0x893, 0x8a9, 0xa07, 0xdad}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x6c8, 0x705, 0x867, 0x893, 0x8a9, 0xa07, 0xdad}, S2, S1, 0x0]

================================

Block 0xe80
[0xe80:0xe85]
---
Predecessors: [0xe74]
Successors: [0x6c8, 0x705, 0x867, 0x893, 0x8a9, 0xa07, 0xdad]
---
0xe80 JUMPDEST
0xe81 POP
0xe82 SWAP1
0xe83 SUB
0xe84 SWAP1
0xe85 JUMP
---
0xe80: JUMPDEST 
0xe83: V1159 = SUB S2 S1
0xe85: JUMP {0x6c8, 0x705, 0x867, 0x893, 0x8a9, 0xa07, 0xdad}
---
Entry stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x6c8, 0x705, 0x867, 0x893, 0x8a9, 0xa07, 0xdad}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1159]
Exit stack: [0x119, S17, {0x0, 0x119}, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1159]

================================

Block 0xe86
[0xe86:0xe93]
---
Predecessors: [0x705, 0xa07, 0xd84, 0xdad]
Successors: [0xd53, 0xe94]
---
0xe86 JUMPDEST
0xe87 PUSH1 0x0
0xe89 DUP3
0xe8a DUP3
0xe8b ADD
0xe8c DUP4
0xe8d DUP2
0xe8e LT
0xe8f ISZERO
0xe90 PUSH2 0xd53
0xe93 JUMPI
---
0xe86: JUMPDEST 
0xe87: V1160 = 0x0
0xe8b: V1161 = ADD S0 S1
0xe8e: V1162 = LT V1161 S1
0xe8f: V1163 = ISZERO V1162
0xe90: V1164 = 0xd53
0xe93: JUMPI 0xd53 V1163
---
Entry stack: [0x119, S16, {0x0, 0x119}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x749, 0xa39, 0xd97, 0xdd9}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1161]
Exit stack: [0x119, S16, {0x0, 0x119}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x749, 0xa39, 0xd97, 0xdd9}, S1, S0, 0x0, V1161]

================================

Block 0xe94
[0xe94:0xe94]
---
Predecessors: [0xe86]
Successors: []
---
0xe94 INVALID
---
0xe94: INVALID 
---
Entry stack: [0x119, S18, {0x0, 0x119}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x749, 0xa39, 0xd97, 0xdd9}, S3, S2, 0x0, V1161]
Stack pops: 0
Stack additions: []
Exit stack: [0x119, S18, {0x0, 0x119}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x749, 0xa39, 0xd97, 0xdd9}, S3, S2, 0x0, V1161]

================================

Block 0xe95
[0xe95:0xed6]
---
Predecessors: []
Successors: []
---
0xe95 STOP
0xe96 LOG1
0xe97 PUSH6 0x627a7a723058
0xe9e SHA3
0xe9f MISSING 0xab
0xea0 SWAP1
0xea1 BALANCE
0xea2 MISSING 0xd4
0xea3 PUSH22 0x80c938a9fcbbb269f3b76afc7f6d0eecd9e917b30d73
0xeba PUSH28 0xdb8d5ba50029
---
0xe95: STOP 
0xe96: LOG S0 S1 S2
0xe97: V1165 = 0x627a7a723058
0xe9e: V1166 = SHA3 0x627a7a723058 S3
0xe9f: MISSING 0xab
0xea1: V1167 = BALANCE S1
0xea2: MISSING 0xd4
0xea3: V1168 = 0x80c938a9fcbbb269f3b76afc7f6d0eecd9e917b30d73
0xeba: V1169 = 0xdb8d5ba50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1166, V1167, S0, 0xdb8d5ba50029, 0x80c938a9fcbbb269f3b76afc7f6d0eecd9e917b30d73]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x11b
Exit block: 0x197
Body: 0x11b, 0x123, 0x127, 0x130, 0x152, 0x15b, 0x16a, 0x17e, 0x197, 0x541

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x1a5
Exit block: 0x1c9
Body: 0x1a5, 0x1ad, 0x1b1, 0x1c9, 0x578, 0x584, 0x5ab, 0x5b1, 0x5b8

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1dd
Exit block: 0x1f2
Body: 0x1dd, 0x1e5, 0x1e9, 0x1f2, 0x620

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x204
Exit block: 0xe94
Body: 0x204, 0x20c, 0x210, 0x626, 0x634, 0x635, 0x646, 0x64a, 0x66b, 0x66f, 0x69b, 0x69f, 0x6c8, 0xe94

Function 4:
Public function signature: 0x313ce567
Entry block: 0x22e
Exit block: 0x1f2
Body: 0x1f2, 0x22e, 0x236, 0x23a, 0x7ab

Function 5:
Public function signature: 0x3ccfd60b
Entry block: 0x243
Exit block: 0x119
Body: 0x119, 0x243, 0x24b, 0x24f, 0x7b0, 0x7c6, 0x7ca, 0x7fd, 0x806

Function 6:
Public function signature: 0x3fa4f245
Entry block: 0x258
Exit block: 0x1f2
Body: 0x1f2, 0x258, 0x260, 0x264, 0x80a

Function 7:
Public function signature: 0x42966c68
Entry block: 0x26d
Exit block: 0xe94
Body: 0x26d, 0x275, 0x279, 0x810, 0x826, 0x82a, 0x842, 0x846, 0x867, 0xe94

Function 8:
Public function signature: 0x70a08231
Entry block: 0x285
Exit block: 0x1f2
Body: 0x1f2, 0x285, 0x28d, 0x291, 0x8ef

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x2a6
Exit block: 0x197
Body: 0x130, 0x152, 0x15b, 0x16a, 0x17e, 0x197, 0x2a6, 0x2ae, 0x2b2, 0x90a

Function 10:
Public function signature: 0x9b1cbccc
Entry block: 0x2bb
Exit block: 0x1c9
Body: 0x1c9, 0x2bb, 0x2c3, 0x2c7, 0x941, 0x957, 0x95b, 0x967, 0x96b

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x2d0
Exit block: 0xe94
Body: 0x2d0, 0x2d8, 0x2dc, 0x9a7, 0x9b5, 0x9b6, 0x9c7, 0x9cb, 0x9e3, 0x9e7, 0xa07, 0xe94

Function 12:
Public function signature: 0xaa6ca808
Entry block: 0x111
Exit block: 0xe94
Body: 0x111, 0x1c9, 0x3c3, 0x3d4, 0x3d8, 0x3ed, 0x494, 0x4cb, 0x4d4, 0xe94

Function 13:
Public function signature: 0xc108d542
Entry block: 0x2f4
Exit block: 0x1c9
Body: 0x1c9, 0x2f4, 0x2fc, 0x300, 0xa98

Function 14:
Public function signature: 0xc489744b
Entry block: 0x309
Exit block: 0x1f2
Body: 0x1f2, 0x309, 0x311, 0x315, 0xaa1, 0xb19, 0xb1d, 0xb28, 0xb31, 0xb43, 0xb47

Function 15:
Public function signature: 0xd8a54360
Entry block: 0x330
Exit block: 0x1f2
Body: 0x1f2, 0x330, 0x338, 0x33c, 0xb52

Function 16:
Public function signature: 0xdd62ed3e
Entry block: 0x345
Exit block: 0x1f2
Body: 0x1f2, 0x345, 0x34d, 0x351, 0xb58

Function 17:
Public function signature: 0xe58fc54c
Entry block: 0x36c
Exit block: 0x1c9
Body: 0x1c9, 0x36c, 0x374, 0x378, 0xb83, 0xb9d, 0xba1, 0xc01, 0xc05, 0xc10, 0xc19, 0xc2b, 0xc2f, 0xc9f, 0xca3, 0xcae, 0xcb7, 0xcc9, 0xccd

Function 18:
Public function signature: 0xefca2eed
Entry block: 0x38d
Exit block: 0x1f2
Body: 0x1f2, 0x38d, 0x395, 0x399, 0xcd7

Function 19:
Public function signature: 0xf2fde38b
Entry block: 0x3a2
Exit block: 0x119
Body: 0x119, 0x3a2, 0x3aa, 0x3ae, 0xcdd, 0xcf0, 0xcf4, 0xd04, 0xd2c

Function 20:
Public fallback function
Entry block: 0x111
Exit block: 0xe94
Body: 0x111, 0x1c9, 0x3c3, 0x3d4, 0x3d8, 0x3ed, 0x494, 0x4cb, 0x4d4, 0xe94

Function 21:
Private function
Entry block: 0xd5a
Exit block: 0xd68
Body: 0x413, 0x41f, 0x42b, 0x46e, 0x48c, 0x4d6, 0x4e1, 0x4e6, 0x4f5, 0x501, 0x50e, 0x51b, 0x51b, 0x61a, 0x749, 0xd2f, 0xd3c, 0xd48, 0xd4b, 0xd53, 0xd5a, 0xd68, 0xd71, 0xd84, 0xd97, 0xd97, 0xdad, 0xdd9, 0xe86

Function 22:
Private function
Entry block: 0xe86
Exit block: 0xd53
Body: 0x413, 0x41f, 0x42b, 0x46e, 0x48c, 0x4d6, 0x4e1, 0x4e6, 0x4f5, 0x501, 0x50e, 0x51b, 0x51b, 0xd2f, 0xd3c, 0xd48, 0xd4b, 0xd53, 0xd5a, 0xd68, 0xd71, 0xd84, 0xd97, 0xdad, 0xe86

Function 23:
Private function
Entry block: 0xe74
Exit block: 0xe80
Body: 0xe74, 0xe80

