Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x92]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x12065fe0
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x92
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x12065fe0
0x3b: V13 = EQ V11 0x12065fe0
0x3c: V14 = 0x92
0x3f: JUMPI 0x92 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xb9]
---
0x40 DUP1
0x41 PUSH4 0x1b338710
0x46 EQ
0x47 PUSH2 0xb9
0x4a JUMPI
---
0x41: V15 = 0x1b338710
0x46: V16 = EQ 0x1b338710 V11
0x47: V17 = 0xb9
0x4a: JUMPI 0xb9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xd1]
---
0x4b DUP1
0x4c PUSH4 0x3ccfd60b
0x51 EQ
0x52 PUSH2 0xd1
0x55 JUMPI
---
0x4c: V18 = 0x3ccfd60b
0x51: V19 = EQ 0x3ccfd60b V11
0x52: V20 = 0xd1
0x55: JUMPI 0xd1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xe8]
---
0x56 DUP1
0x57 PUSH4 0x72d475db
0x5c EQ
0x5d PUSH2 0xe8
0x60 JUMPI
---
0x57: V21 = 0x72d475db
0x5c: V22 = EQ 0x72d475db V11
0x5d: V23 = 0xe8
0x60: JUMPI 0xe8 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x100]
---
0x61 DUP1
0x62 PUSH4 0x78afda07
0x67 EQ
0x68 PUSH2 0x100
0x6b JUMPI
---
0x62: V24 = 0x78afda07
0x67: V25 = EQ 0x78afda07 V11
0x68: V26 = 0x100
0x6b: JUMPI 0x100 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x131]
---
0x6c DUP1
0x6d PUSH4 0x82ab890a
0x72 EQ
0x73 PUSH2 0x131
0x76 JUMPI
---
0x6d: V27 = 0x82ab890a
0x72: V28 = EQ 0x82ab890a V11
0x73: V29 = 0x131
0x76: JUMPI 0x131 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x13c]
---
0x77 DUP1
0x78 PUSH4 0xcd68100c
0x7d EQ
0x7e PUSH2 0x13c
0x81 JUMPI
---
0x78: V30 = 0xcd68100c
0x7d: V31 = EQ 0xcd68100c V11
0x7e: V32 = 0x13c
0x81: JUMPI 0x13c V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x151]
---
0x82 DUP1
0x83 PUSH4 0xce606ee0
0x88 EQ
0x89 PUSH2 0x151
0x8c JUMPI
---
0x83: V33 = 0xce606ee0
0x88: V34 = EQ 0xce606ee0 V11
0x89: V35 = 0x151
0x8c: JUMPI 0x151 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x91]
---
Predecessors: [0x0, 0x82]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x0
0x90 DUP1
0x91 REVERT
---
0x8d: JUMPDEST 
0x8e: V36 = 0x0
0x91: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x99]
---
Predecessors: [0xd]
Successors: [0x9a, 0x9e]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 DUP1
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x92: JUMPDEST 
0x93: V37 = CALLVALUE
0x95: V38 = ISZERO V37
0x96: V39 = 0x9e
0x99: JUMPI 0x9e V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x92]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V40 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x9e
[0x9e:0xa6]
---
Predecessors: [0x92]
Successors: [0x166]
---
0x9e JUMPDEST
0x9f POP
0xa0 PUSH2 0xa7
0xa3 PUSH2 0x166
0xa6 JUMP
---
0x9e: JUMPDEST 
0xa0: V41 = 0xa7
0xa3: V42 = 0x166
0xa6: JUMP 0x166
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xa7]
Exit stack: [V11, 0xa7]

================================

Block 0xa7
[0xa7:0xb8]
---
Predecessors: [0x166, 0x16b, 0x280]
Successors: []
---
0xa7 JUMPDEST
0xa8 PUSH1 0x40
0xaa DUP1
0xab MLOAD
0xac SWAP2
0xad DUP3
0xae MSTORE
0xaf MLOAD
0xb0 SWAP1
0xb1 DUP2
0xb2 SWAP1
0xb3 SUB
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP1
0xb8 RETURN
---
0xa7: JUMPDEST 
0xa8: V43 = 0x40
0xab: V44 = M[0x40]
0xae: M[V44] = S0
0xaf: V45 = M[0x40]
0xb3: V46 = SUB V44 V45
0xb4: V47 = 0x20
0xb6: V48 = ADD 0x20 V46
0xb8: RETURN V45 V48
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S3, S2, S1]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0x40]
Successors: [0xc1, 0xc5]
---
0xb9 JUMPDEST
0xba CALLVALUE
0xbb DUP1
0xbc ISZERO
0xbd PUSH2 0xc5
0xc0 JUMPI
---
0xb9: JUMPDEST 
0xba: V49 = CALLVALUE
0xbc: V50 = ISZERO V49
0xbd: V51 = 0xc5
0xc0: JUMPI 0xc5 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xb9]
Successors: []
---
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 REVERT
---
0xc1: V52 = 0x0
0xc4: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xc5
[0xc5:0xd0]
---
Predecessors: [0xb9]
Successors: [0x16b]
---
0xc5 JUMPDEST
0xc6 POP
0xc7 PUSH2 0xa7
0xca PUSH1 0x4
0xcc CALLDATALOAD
0xcd PUSH2 0x16b
0xd0 JUMP
---
0xc5: JUMPDEST 
0xc7: V53 = 0xa7
0xca: V54 = 0x4
0xcc: V55 = CALLDATALOAD 0x4
0xcd: V56 = 0x16b
0xd0: JUMP 0x16b
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xa7, V55]
Exit stack: [V11, 0xa7, V55]

================================

Block 0xd1
[0xd1:0xd8]
---
Predecessors: [0x4b]
Successors: [0xd9, 0xdd]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 DUP1
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd1: JUMPDEST 
0xd2: V57 = CALLVALUE
0xd4: V58 = ISZERO V57
0xd5: V59 = 0xdd
0xd8: JUMPI 0xdd V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd1]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V60 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0xdd
[0xdd:0xe5]
---
Predecessors: [0xd1]
Successors: [0x17d]
---
0xdd JUMPDEST
0xde POP
0xdf PUSH2 0xe6
0xe2 PUSH2 0x17d
0xe5 JUMP
---
0xdd: JUMPDEST 
0xdf: V61 = 0xe6
0xe2: V62 = 0x17d
0xe5: JUMP 0x17d
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0xe6]
Exit stack: [V11, 0xe6]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: [0x1ce, 0x334]
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0xe8
[0xe8:0xef]
---
Predecessors: [0x56]
Successors: [0xf0, 0xf4]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea DUP1
0xeb ISZERO
0xec PUSH2 0xf4
0xef JUMPI
---
0xe8: JUMPDEST 
0xe9: V63 = CALLVALUE
0xeb: V64 = ISZERO V63
0xec: V65 = 0xf4
0xef: JUMPI 0xf4 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xf0
[0xf0:0xf3]
---
Predecessors: [0xe8]
Successors: []
---
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 REVERT
---
0xf0: V66 = 0x0
0xf3: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0xf4
[0xf4:0xff]
---
Predecessors: [0xe8]
Successors: [0x1d1]
---
0xf4 JUMPDEST
0xf5 POP
0xf6 PUSH2 0xa7
0xf9 PUSH1 0x4
0xfb CALLDATALOAD
0xfc PUSH2 0x1d1
0xff JUMP
---
0xf4: JUMPDEST 
0xf6: V67 = 0xa7
0xf9: V68 = 0x4
0xfb: V69 = CALLDATALOAD 0x4
0xfc: V70 = 0x1d1
0xff: JUMP 0x1d1
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0xa7, V69]
Exit stack: [V11, 0xa7, V69]

================================

Block 0x100
[0x100:0x107]
---
Predecessors: [0x61]
Successors: [0x108, 0x10c]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 DUP1
0x103 ISZERO
0x104 PUSH2 0x10c
0x107 JUMPI
---
0x100: JUMPDEST 
0x101: V71 = CALLVALUE
0x103: V72 = ISZERO V71
0x104: V73 = 0x10c
0x107: JUMPI 0x10c V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V11, V71]

================================

Block 0x108
[0x108:0x10b]
---
Predecessors: [0x100]
Successors: []
---
0x108 PUSH1 0x0
0x10a DUP1
0x10b REVERT
---
0x108: V74 = 0x0
0x10b: REVERT 0x0 0x0
---
Entry stack: [V11, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V71]

================================

Block 0x10c
[0x10c:0x114]
---
Predecessors: [0x100]
Successors: [0x286]
---
0x10c JUMPDEST
0x10d POP
0x10e PUSH2 0x115
0x111 PUSH2 0x286
0x114 JUMP
---
0x10c: JUMPDEST 
0x10e: V75 = 0x115
0x111: V76 = 0x286
0x114: JUMP 0x286
---
Entry stack: [V11, V71]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x115
[0x115:0x130]
---
Predecessors: [0x286, 0x355, 0x364]
Successors: []
---
0x115 JUMPDEST
0x116 PUSH1 0x40
0x118 DUP1
0x119 MLOAD
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 SWAP1
0x123 SWAP3
0x124 AND
0x125 DUP3
0x126 MSTORE
0x127 MLOAD
0x128 SWAP1
0x129 DUP2
0x12a SWAP1
0x12b SUB
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 RETURN
---
0x115: JUMPDEST 
0x116: V77 = 0x40
0x119: V78 = M[0x40]
0x11a: V79 = 0x1
0x11c: V80 = 0xa0
0x11e: V81 = 0x2
0x120: V82 = EXP 0x2 0xa0
0x121: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V84 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x126: M[V78] = V84
0x127: V85 = M[0x40]
0x12b: V86 = SUB V78 V85
0x12c: V87 = 0x20
0x12e: V88 = ADD 0x20 V86
0x130: RETURN V85 V88
---
Entry stack: [V11, 0x115, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x131
[0x131:0x13b]
---
Predecessors: [0x6c]
Successors: [0x29e]
---
0x131 JUMPDEST
0x132 PUSH2 0xe6
0x135 PUSH1 0x4
0x137 CALLDATALOAD
0x138 PUSH2 0x29e
0x13b JUMP
---
0x131: JUMPDEST 
0x132: V89 = 0xe6
0x135: V90 = 0x4
0x137: V91 = CALLDATALOAD 0x4
0x138: V92 = 0x29e
0x13b: JUMP 0x29e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe6, V91]
Exit stack: [V11, 0xe6, V91]

================================

Block 0x13c
[0x13c:0x143]
---
Predecessors: [0x77]
Successors: [0x144, 0x148]
---
0x13c JUMPDEST
0x13d CALLVALUE
0x13e DUP1
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13c: JUMPDEST 
0x13d: V93 = CALLVALUE
0x13f: V94 = ISZERO V93
0x140: V95 = 0x148
0x143: JUMPI 0x148 V94
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V11, V93]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13c]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V96 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V11, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V93]

================================

Block 0x148
[0x148:0x150]
---
Predecessors: [0x13c]
Successors: [0x355]
---
0x148 JUMPDEST
0x149 POP
0x14a PUSH2 0x115
0x14d PUSH2 0x355
0x150 JUMP
---
0x148: JUMPDEST 
0x14a: V97 = 0x115
0x14d: V98 = 0x355
0x150: JUMP 0x355
---
Entry stack: [V11, V93]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0x82]
Successors: [0x159, 0x15d]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 DUP1
0x154 ISZERO
0x155 PUSH2 0x15d
0x158 JUMPI
---
0x151: JUMPDEST 
0x152: V99 = CALLVALUE
0x154: V100 = ISZERO V99
0x155: V101 = 0x15d
0x158: JUMPI 0x15d V100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V99]
Exit stack: [V11, V99]

================================

Block 0x159
[0x159:0x15c]
---
Predecessors: [0x151]
Successors: []
---
0x159 PUSH1 0x0
0x15b DUP1
0x15c REVERT
---
0x159: V102 = 0x0
0x15c: REVERT 0x0 0x0
---
Entry stack: [V11, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V99]

================================

Block 0x15d
[0x15d:0x165]
---
Predecessors: [0x151]
Successors: [0x364]
---
0x15d JUMPDEST
0x15e POP
0x15f PUSH2 0x115
0x162 PUSH2 0x364
0x165 JUMP
---
0x15d: JUMPDEST 
0x15f: V103 = 0x115
0x162: V104 = 0x364
0x165: JUMP 0x364
---
Entry stack: [V11, V99]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x166
[0x166:0x16a]
---
Predecessors: [0x9e]
Successors: [0xa7]
---
0x166 JUMPDEST
0x167 ADDRESS
0x168 BALANCE
0x169 SWAP1
0x16a JUMP
---
0x166: JUMPDEST 
0x167: V105 = ADDRESS
0x168: V106 = BALANCE V105
0x16a: JUMP 0xa7
---
Entry stack: [V11, 0xa7]
Stack pops: 1
Stack additions: [V106]
Exit stack: [V11, V106]

================================

Block 0x16b
[0x16b:0x17c]
---
Predecessors: [0xc5]
Successors: [0xa7]
---
0x16b JUMPDEST
0x16c PUSH1 0x3
0x16e PUSH1 0x20
0x170 MSTORE
0x171 PUSH1 0x0
0x173 SWAP1
0x174 DUP2
0x175 MSTORE
0x176 PUSH1 0x40
0x178 SWAP1
0x179 SHA3
0x17a SLOAD
0x17b DUP2
0x17c JUMP
---
0x16b: JUMPDEST 
0x16c: V107 = 0x3
0x16e: V108 = 0x20
0x170: M[0x20] = 0x3
0x171: V109 = 0x0
0x175: M[0x0] = V55
0x176: V110 = 0x40
0x179: V111 = SHA3 0x0 0x40
0x17a: V112 = S[V111]
0x17c: JUMP 0xa7
---
Entry stack: [V11, 0xa7, V55]
Stack pops: 2
Stack additions: [S1, V112]
Exit stack: [V11, 0xa7, V112]

================================

Block 0x17d
[0x17d:0x18f]
---
Predecessors: [0xdd]
Successors: [0x190, 0x194]
---
0x17d JUMPDEST
0x17e PUSH1 0x1
0x180 SLOAD
0x181 PUSH1 0x1
0x183 PUSH1 0xa0
0x185 PUSH1 0x2
0x187 EXP
0x188 SUB
0x189 AND
0x18a CALLER
0x18b EQ
0x18c PUSH2 0x194
0x18f JUMPI
---
0x17d: JUMPDEST 
0x17e: V113 = 0x1
0x180: V114 = S[0x1]
0x181: V115 = 0x1
0x183: V116 = 0xa0
0x185: V117 = 0x2
0x187: V118 = EXP 0x2 0xa0
0x188: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x18a: V121 = CALLER
0x18b: V122 = EQ V121 V120
0x18c: V123 = 0x194
0x18f: JUMPI 0x194 V122
---
Entry stack: [V11, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x17d]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V124 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6]

================================

Block 0x194
[0x194:0x1c4]
---
Predecessors: [0x17d]
Successors: [0x1c5, 0x1ce]
---
0x194 JUMPDEST
0x195 PUSH1 0x1
0x197 SLOAD
0x198 PUSH1 0x40
0x19a MLOAD
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 SWAP1
0x1a4 SWAP2
0x1a5 AND
0x1a6 SWAP1
0x1a7 ADDRESS
0x1a8 BALANCE
0x1a9 DUP1
0x1aa ISZERO
0x1ab PUSH2 0x8fc
0x1ae MUL
0x1af SWAP2
0x1b0 PUSH1 0x0
0x1b2 DUP2
0x1b3 DUP2
0x1b4 DUP2
0x1b5 DUP6
0x1b6 DUP9
0x1b7 DUP9
0x1b8 CALL
0x1b9 SWAP4
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd POP
0x1be ISZERO
0x1bf DUP1
0x1c0 ISZERO
0x1c1 PUSH2 0x1ce
0x1c4 JUMPI
---
0x194: JUMPDEST 
0x195: V125 = 0x1
0x197: V126 = S[0x1]
0x198: V127 = 0x40
0x19a: V128 = M[0x40]
0x19b: V129 = 0x1
0x19d: V130 = 0xa0
0x19f: V131 = 0x2
0x1a1: V132 = EXP 0x2 0xa0
0x1a2: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a5: V134 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V135 = ADDRESS
0x1a8: V136 = BALANCE V135
0x1aa: V137 = ISZERO V136
0x1ab: V138 = 0x8fc
0x1ae: V139 = MUL 0x8fc V137
0x1b0: V140 = 0x0
0x1b8: V141 = CALL V139 V134 V136 V128 0x0 V128 0x0
0x1be: V142 = ISZERO V141
0x1c0: V143 = ISZERO V142
0x1c1: V144 = 0x1ce
0x1c4: JUMPI 0x1ce V143
---
Entry stack: [V11, 0xe6]
Stack pops: 0
Stack additions: [V142]
Exit stack: [V11, 0xe6, V142]

================================

Block 0x1c5
[0x1c5:0x1cd]
---
Predecessors: [0x194]
Successors: []
---
0x1c5 RETURNDATASIZE
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 RETURNDATACOPY
0x1ca RETURNDATASIZE
0x1cb PUSH1 0x0
0x1cd REVERT
---
0x1c5: V145 = RETURNDATASIZE
0x1c6: V146 = 0x0
0x1c9: RETURNDATACOPY 0x0 0x0 V145
0x1ca: V147 = RETURNDATASIZE
0x1cb: V148 = 0x0
0x1cd: REVERT 0x0 V147
---
Entry stack: [V11, 0xe6, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V142]

================================

Block 0x1ce
[0x1ce:0x1d0]
---
Predecessors: [0x194, 0x310]
Successors: [0xe6]
---
0x1ce JUMPDEST
0x1cf POP
0x1d0 JUMP
---
0x1ce: JUMPDEST 
0x1d0: JUMP S1
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S2]

================================

Block 0x1d1
[0x1d1:0x234]
---
Predecessors: [0xf4]
Successors: [0x235, 0x239]
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 SLOAD
0x1d6 PUSH1 0x40
0x1d8 DUP1
0x1d9 MLOAD
0x1da PUSH32 0x72d475db00000000000000000000000000000000000000000000000000000000
0x1fb DUP2
0x1fc MSTORE
0x1fd PUSH1 0x4
0x1ff DUP2
0x200 ADD
0x201 DUP6
0x202 SWAP1
0x203 MSTORE
0x204 SWAP1
0x205 MLOAD
0x206 PUSH2 0x280
0x209 SWAP3
0x20a PUSH1 0x1
0x20c PUSH1 0xa0
0x20e PUSH1 0x2
0x210 EXP
0x211 SUB
0x212 AND
0x213 SWAP2
0x214 PUSH4 0x72d475db
0x219 SWAP2
0x21a PUSH1 0x24
0x21c DUP1
0x21d DUP4
0x21e ADD
0x21f SWAP3
0x220 PUSH1 0x20
0x222 SWAP3
0x223 SWAP2
0x224 SWAP1
0x225 DUP3
0x226 SWAP1
0x227 SUB
0x228 ADD
0x229 DUP2
0x22a DUP9
0x22b DUP8
0x22c DUP1
0x22d EXTCODESIZE
0x22e ISZERO
0x22f DUP1
0x230 ISZERO
0x231 PUSH2 0x239
0x234 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V149 = 0x0
0x1d5: V150 = S[0x0]
0x1d6: V151 = 0x40
0x1d9: V152 = M[0x40]
0x1da: V153 = 0x72d475db00000000000000000000000000000000000000000000000000000000
0x1fc: M[V152] = 0x72d475db00000000000000000000000000000000000000000000000000000000
0x1fd: V154 = 0x4
0x200: V155 = ADD V152 0x4
0x203: M[V155] = V69
0x205: V156 = M[0x40]
0x206: V157 = 0x280
0x20a: V158 = 0x1
0x20c: V159 = 0xa0
0x20e: V160 = 0x2
0x210: V161 = EXP 0x2 0xa0
0x211: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x212: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x214: V164 = 0x72d475db
0x21a: V165 = 0x24
0x21e: V166 = ADD V152 0x24
0x220: V167 = 0x20
0x227: V168 = SUB V152 V156
0x228: V169 = ADD V168 0x24
0x22d: V170 = EXTCODESIZE V163
0x22e: V171 = ISZERO V170
0x230: V172 = ISZERO V171
0x231: V173 = 0x239
0x234: JUMPI 0x239 V172
---
Entry stack: [V11, 0xa7, V69]
Stack pops: 1
Stack additions: [S0, 0x0, 0x280, V163, 0x72d475db, V166, 0x20, V156, V169, V156, 0x0, V163, V171]
Exit stack: [V11, 0xa7, V69, 0x0, 0x280, V163, 0x72d475db, V166, 0x20, V156, V169, V156, 0x0, V163, V171]

================================

Block 0x235
[0x235:0x238]
---
Predecessors: [0x1d1]
Successors: []
---
0x235 PUSH1 0x0
0x237 DUP1
0x238 REVERT
---
0x235: V174 = 0x0
0x238: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa7, V69, 0x0, 0x280, V163, 0x72d475db, V166, 0x20, V156, V169, V156, 0x0, V163, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa7, V69, 0x0, 0x280, V163, 0x72d475db, V166, 0x20, V156, V169, V156, 0x0, V163, V171]

================================

Block 0x239
[0x239:0x243]
---
Predecessors: [0x1d1]
Successors: [0x244, 0x24d]
---
0x239 JUMPDEST
0x23a POP
0x23b GAS
0x23c CALL
0x23d ISZERO
0x23e DUP1
0x23f ISZERO
0x240 PUSH2 0x24d
0x243 JUMPI
---
0x239: JUMPDEST 
0x23b: V175 = GAS
0x23c: V176 = CALL V175 V163 0x0 V156 V169 V156 0x20
0x23d: V177 = ISZERO V176
0x23f: V178 = ISZERO V177
0x240: V179 = 0x24d
0x243: JUMPI 0x24d V178
---
Entry stack: [V11, 0xa7, V69, 0x0, 0x280, V163, 0x72d475db, V166, 0x20, V156, V169, V156, 0x0, V163, V171]
Stack pops: 7
Stack additions: [V177]
Exit stack: [V11, 0xa7, V69, 0x0, 0x280, V163, 0x72d475db, V166, V177]

================================

Block 0x244
[0x244:0x24c]
---
Predecessors: [0x239]
Successors: []
---
0x244 RETURNDATASIZE
0x245 PUSH1 0x0
0x247 DUP1
0x248 RETURNDATACOPY
0x249 RETURNDATASIZE
0x24a PUSH1 0x0
0x24c REVERT
---
0x244: V180 = RETURNDATASIZE
0x245: V181 = 0x0
0x248: RETURNDATACOPY 0x0 0x0 V180
0x249: V182 = RETURNDATASIZE
0x24a: V183 = 0x0
0x24c: REVERT 0x0 V182
---
Entry stack: [V11, 0xa7, V69, 0x0, 0x280, V163, 0x72d475db, V166, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa7, V69, 0x0, 0x280, V163, 0x72d475db, V166, V177]

================================

Block 0x24d
[0x24d:0x25e]
---
Predecessors: [0x239]
Successors: [0x25f, 0x263]
---
0x24d JUMPDEST
0x24e POP
0x24f POP
0x250 POP
0x251 POP
0x252 PUSH1 0x40
0x254 MLOAD
0x255 RETURNDATASIZE
0x256 PUSH1 0x20
0x258 DUP2
0x259 LT
0x25a ISZERO
0x25b PUSH2 0x263
0x25e JUMPI
---
0x24d: JUMPDEST 
0x252: V184 = 0x40
0x254: V185 = M[0x40]
0x255: V186 = RETURNDATASIZE
0x256: V187 = 0x20
0x259: V188 = LT V186 0x20
0x25a: V189 = ISZERO V188
0x25b: V190 = 0x263
0x25e: JUMPI 0x263 V189
---
Entry stack: [V11, 0xa7, V69, 0x0, 0x280, V163, 0x72d475db, V166, V177]
Stack pops: 4
Stack additions: [V185, V186]
Exit stack: [V11, 0xa7, V69, 0x0, 0x280, V185, V186]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x24d]
Successors: []
---
0x25f PUSH1 0x0
0x261 DUP1
0x262 REVERT
---
0x25f: V191 = 0x0
0x262: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa7, V69, 0x0, 0x280, V185, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa7, V69, 0x0, 0x280, V185, V186]

================================

Block 0x263
[0x263:0x27f]
---
Predecessors: [0x24d]
Successors: [0x373]
---
0x263 JUMPDEST
0x264 POP
0x265 MLOAD
0x266 PUSH1 0x0
0x268 DUP5
0x269 DUP2
0x26a MSTORE
0x26b PUSH1 0x3
0x26d PUSH1 0x20
0x26f MSTORE
0x270 PUSH1 0x40
0x272 SWAP1
0x273 SHA3
0x274 SLOAD
0x275 SWAP1
0x276 PUSH4 0xffffffff
0x27b PUSH2 0x373
0x27e AND
0x27f JUMP
---
0x263: JUMPDEST 
0x265: V192 = M[V185]
0x266: V193 = 0x0
0x26a: M[0x0] = V69
0x26b: V194 = 0x3
0x26d: V195 = 0x20
0x26f: M[0x20] = 0x3
0x270: V196 = 0x40
0x273: V197 = SHA3 0x0 0x40
0x274: V198 = S[V197]
0x276: V199 = 0xffffffff
0x27b: V200 = 0x373
0x27e: V201 = AND 0x373 0xffffffff
0x27f: JUMP 0x373
---
Entry stack: [V11, 0xa7, V69, 0x0, 0x280, V185, V186]
Stack pops: 5
Stack additions: [S4, S3, S2, V198, V192]
Exit stack: [V11, 0xa7, V69, 0x0, 0x280, V198, V192]

================================

Block 0x280
[0x280:0x285]
---
Predecessors: [0x280, 0x373]
Successors: [0xa7, 0x280, 0x2de]
---
0x280 JUMPDEST
0x281 SWAP3
0x282 SWAP2
0x283 POP
0x284 POP
0x285 JUMP
---
0x280: JUMPDEST 
0x285: JUMP S3
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V280]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S6, S5, S4, V280]

================================

Block 0x286
[0x286:0x29d]
---
Predecessors: [0x10c]
Successors: [0x115]
---
0x286 JUMPDEST
0x287 PUSH20 0x6acd16200a2a046bf207d1b263202ec1a75a7d51
0x29c DUP2
0x29d JUMP
---
0x286: JUMPDEST 
0x287: V202 = 0x6acd16200a2a046bf207d1b263202ec1a75a7d51
0x29d: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: [S0, 0x6acd16200a2a046bf207d1b263202ec1a75a7d51]
Exit stack: [V11, 0x115, 0x6acd16200a2a046bf207d1b263202ec1a75a7d51]

================================

Block 0x29e
[0x29e:0x2ad]
---
Predecessors: [0x131]
Successors: [0x2ae, 0x2b2]
---
0x29e JUMPDEST
0x29f PUSH7 0x71afd498d0000
0x2a7 CALLVALUE
0x2a8 LT
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x29e: JUMPDEST 
0x29f: V203 = 0x71afd498d0000
0x2a7: V204 = CALLVALUE
0x2a8: V205 = LT V204 0x71afd498d0000
0x2a9: V206 = ISZERO V205
0x2aa: V207 = 0x2b2
0x2ad: JUMPI 0x2b2 V206
---
Entry stack: [V11, 0xe6, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V91]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x29e]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V208 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe6, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V91]

================================

Block 0x2b2
[0x2b2:0x2ba]
---
Predecessors: [0x29e]
Successors: [0x2bb, 0x2bf]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x0
0x2b5 DUP2
0x2b6 GT
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V209 = 0x0
0x2b6: V210 = GT V91 0x0
0x2b7: V211 = 0x2bf
0x2ba: JUMPI 0x2bf V210
---
Entry stack: [V11, 0xe6, V91]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe6, V91]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2b2]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V212 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe6, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V91]

================================

Block 0x2bf
[0x2bf:0x2dd]
---
Predecessors: [0x2b2]
Successors: [0x373]
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x0
0x2c2 DUP2
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 PUSH1 0x3
0x2c7 PUSH1 0x20
0x2c9 MSTORE
0x2ca PUSH1 0x40
0x2cc SWAP1
0x2cd SHA3
0x2ce SLOAD
0x2cf PUSH2 0x2de
0x2d2 SWAP1
0x2d3 CALLVALUE
0x2d4 PUSH4 0xffffffff
0x2d9 PUSH2 0x373
0x2dc AND
0x2dd JUMP
---
0x2bf: JUMPDEST 
0x2c0: V213 = 0x0
0x2c4: M[0x0] = V91
0x2c5: V214 = 0x3
0x2c7: V215 = 0x20
0x2c9: M[0x20] = 0x3
0x2ca: V216 = 0x40
0x2cd: V217 = SHA3 0x0 0x40
0x2ce: V218 = S[V217]
0x2cf: V219 = 0x2de
0x2d3: V220 = CALLVALUE
0x2d4: V221 = 0xffffffff
0x2d9: V222 = 0x373
0x2dc: V223 = AND 0x373 0xffffffff
0x2dd: JUMP 0x373
---
Entry stack: [V11, 0xe6, V91]
Stack pops: 1
Stack additions: [S0, 0x2de, V218, V220]
Exit stack: [V11, 0xe6, V91, 0x2de, V218, V220]

================================

Block 0x2de
[0x2de:0x30f]
---
Predecessors: [0x280]
Successors: [0x380]
---
0x2de JUMPDEST
0x2df PUSH1 0x0
0x2e1 DUP3
0x2e2 DUP2
0x2e3 MSTORE
0x2e4 PUSH1 0x3
0x2e6 PUSH1 0x20
0x2e8 MSTORE
0x2e9 PUSH1 0x40
0x2eb SWAP1
0x2ec SHA3
0x2ed SSTORE
0x2ee PUSH1 0x2
0x2f0 DUP1
0x2f1 SLOAD
0x2f2 PUSH1 0x1
0x2f4 PUSH1 0xa0
0x2f6 PUSH1 0x2
0x2f8 EXP
0x2f9 SUB
0x2fa AND
0x2fb SWAP1
0x2fc PUSH2 0x8fc
0x2ff SWAP1
0x300 PUSH2 0x310
0x303 SWAP1
0x304 CALLVALUE
0x305 SWAP1
0x306 PUSH4 0xffffffff
0x30b PUSH2 0x380
0x30e AND
0x30f JUMP
---
0x2de: JUMPDEST 
0x2df: V224 = 0x0
0x2e3: M[0x0] = S1
0x2e4: V225 = 0x3
0x2e6: V226 = 0x20
0x2e8: M[0x20] = 0x3
0x2e9: V227 = 0x40
0x2ec: V228 = SHA3 0x0 0x40
0x2ed: S[V228] = V280
0x2ee: V229 = 0x2
0x2f1: V230 = S[0x2]
0x2f2: V231 = 0x1
0x2f4: V232 = 0xa0
0x2f6: V233 = 0x2
0x2f8: V234 = EXP 0x2 0xa0
0x2f9: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fa: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x2fc: V237 = 0x8fc
0x300: V238 = 0x310
0x304: V239 = CALLVALUE
0x306: V240 = 0xffffffff
0x30b: V241 = 0x380
0x30e: V242 = AND 0x380 0xffffffff
0x30f: JUMP 0x380
---
Entry stack: [V11, S3, S2, S1, V280]
Stack pops: 2
Stack additions: [S1, V236, 0x8fc, 0x310, V239, 0x2]
Exit stack: [V11, S3, S2, S1, V236, 0x8fc, 0x310, V239, 0x2]

================================

Block 0x310
[0x310:0x333]
---
Predecessors: [0x38d]
Successors: [0x1ce, 0x334]
---
0x310 JUMPDEST
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP2
0x315 ISZERO
0x316 SWAP1
0x317 SWAP3
0x318 MUL
0x319 SWAP2
0x31a PUSH1 0x0
0x31c DUP2
0x31d DUP2
0x31e DUP2
0x31f DUP6
0x320 DUP9
0x321 DUP9
0x322 CALL
0x323 SWAP4
0x324 POP
0x325 POP
0x326 POP
0x327 POP
0x328 ISZERO
0x329 ISZERO
0x32a PUSH1 0x1
0x32c ISZERO
0x32d ISZERO
0x32e EQ
0x32f ISZERO
0x330 PUSH2 0x1ce
0x333 JUMPI
---
0x310: JUMPDEST 
0x311: V243 = 0x40
0x313: V244 = M[0x40]
0x315: V245 = ISZERO V288
0x318: V246 = MUL 0x8fc V245
0x31a: V247 = 0x0
0x322: V248 = CALL V246 V236 V288 V244 0x0 V244 0x0
0x328: V249 = ISZERO V248
0x329: V250 = ISZERO V249
0x32a: V251 = 0x1
0x32c: V252 = ISZERO 0x1
0x32d: V253 = ISZERO 0x0
0x32e: V254 = EQ 0x1 V250
0x32f: V255 = ISZERO V254
0x330: V256 = 0x1ce
0x333: JUMPI 0x1ce V255
---
Entry stack: [V11, S5, S4, S3, V236, 0x8fc, V288]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S5, S4, S3]

================================

Block 0x334
[0x334:0x354]
---
Predecessors: [0x310]
Successors: [0xe6]
---
0x334 PUSH1 0x2
0x336 DUP1
0x337 SLOAD
0x338 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34d NOT
0x34e AND
0x34f CALLER
0x350 OR
0x351 SWAP1
0x352 SSTORE
0x353 POP
0x354 JUMP
---
0x334: V257 = 0x2
0x337: V258 = S[0x2]
0x338: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x34d: V260 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V261 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V258
0x34f: V262 = CALLER
0x350: V263 = OR V262 V261
0x352: S[0x2] = V263
0x354: JUMP S1
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S2]

================================

Block 0x355
[0x355:0x363]
---
Predecessors: [0x148]
Successors: [0x115]
---
0x355 JUMPDEST
0x356 PUSH1 0x2
0x358 SLOAD
0x359 PUSH1 0x1
0x35b PUSH1 0xa0
0x35d PUSH1 0x2
0x35f EXP
0x360 SUB
0x361 AND
0x362 DUP2
0x363 JUMP
---
0x355: JUMPDEST 
0x356: V264 = 0x2
0x358: V265 = S[0x2]
0x359: V266 = 0x1
0x35b: V267 = 0xa0
0x35d: V268 = 0x2
0x35f: V269 = EXP 0x2 0xa0
0x360: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x361: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x363: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: [S0, V271]
Exit stack: [V11, 0x115, V271]

================================

Block 0x364
[0x364:0x372]
---
Predecessors: [0x15d]
Successors: [0x115]
---
0x364 JUMPDEST
0x365 PUSH1 0x1
0x367 SLOAD
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 AND
0x371 DUP2
0x372 JUMP
---
0x364: JUMPDEST 
0x365: V272 = 0x1
0x367: V273 = S[0x1]
0x368: V274 = 0x1
0x36a: V275 = 0xa0
0x36c: V276 = 0x2
0x36e: V277 = EXP 0x2 0xa0
0x36f: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x370: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x372: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: [S0, V279]
Exit stack: [V11, 0x115, V279]

================================

Block 0x373
[0x373:0x37e]
---
Predecessors: [0x263, 0x2bf]
Successors: [0x280, 0x37f]
---
0x373 JUMPDEST
0x374 DUP2
0x375 DUP2
0x376 ADD
0x377 DUP3
0x378 DUP2
0x379 LT
0x37a ISZERO
0x37b PUSH2 0x280
0x37e JUMPI
---
0x373: JUMPDEST 
0x376: V280 = ADD S0 S1
0x379: V281 = LT V280 S1
0x37a: V282 = ISZERO V281
0x37b: V283 = 0x280
0x37e: JUMPI 0x280 V282
---
Entry stack: [V11, S5, S4, S3, {0x280, 0x2de}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V280]
Exit stack: [V11, S5, S4, S3, {0x280, 0x2de}, S1, S0, V280]

================================

Block 0x37f
[0x37f:0x37f]
---
Predecessors: [0x373]
Successors: []
---
0x37f INVALID
---
0x37f: INVALID 
---
Entry stack: [V11, S6, S5, S4, {0x280, 0x2de}, S2, S1, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, {0x280, 0x2de}, S2, S1, V280]

================================

Block 0x380
[0x380:0x38b]
---
Predecessors: [0x2de]
Successors: [0x38c, 0x38d]
---
0x380 JUMPDEST
0x381 PUSH1 0x0
0x383 DUP2
0x384 DUP4
0x385 DUP2
0x386 ISZERO
0x387 ISZERO
0x388 PUSH2 0x38d
0x38b JUMPI
---
0x380: JUMPDEST 
0x381: V284 = 0x0
0x386: V285 = ISZERO 0x2
0x387: V286 = ISZERO 0x0
0x388: V287 = 0x38d
0x38b: JUMPI 0x38d 0x1
---
Entry stack: [V11, S7, S6, S5, V236, 0x8fc, 0x310, V239, 0x2]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S0, S1]
Exit stack: [V11, S7, S6, S5, V236, 0x8fc, 0x310, V239, 0x2, 0x0, 0x2, V239]

================================

Block 0x38c
[0x38c:0x38c]
---
Predecessors: [0x380]
Successors: []
---
0x38c INVALID
---
0x38c: INVALID 
---
Entry stack: [V11, S10, S9, S8, V236, 0x8fc, 0x310, V239, 0x2, 0x0, 0x2, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, V236, 0x8fc, 0x310, V239, 0x2, 0x0, 0x2, V239]

================================

Block 0x38d
[0x38d:0x394]
---
Predecessors: [0x380]
Successors: [0x310]
---
0x38d JUMPDEST
0x38e DIV
0x38f SWAP4
0x390 SWAP3
0x391 POP
0x392 POP
0x393 POP
0x394 JUMP
---
0x38d: JUMPDEST 
0x38e: V288 = DIV V239 0x2
0x394: JUMP 0x310
---
Entry stack: [V11, S10, S9, S8, V236, 0x8fc, 0x310, V239, 0x2, 0x0, 0x2, V239]
Stack pops: 6
Stack additions: [V288]
Exit stack: [V11, S10, S9, S8, V236, 0x8fc, V288]

================================

Block 0x395
[0x395:0x3c5]
---
Predecessors: []
Successors: []
---
0x395 STOP
0x396 LOG1
0x397 PUSH6 0x627a7a723058
0x39e SHA3
0x39f PUSH19 0x2a0c53256d7551001e25890fe6f3363fdce55c
0x3b3 MISSING 0xc4
0x3b4 SLT
0x3b5 SWAP12
0x3b6 STATICCALL
0x3b7 MISSING 0xf6
0x3b8 DUP9
0x3b9 OR
0x3ba SWAP5
0x3bb MISSING 0xdc
0x3bc SMOD
0x3bd PUSH8 0xaf0029
---
0x395: STOP 
0x396: LOG S0 S1 S2
0x397: V289 = 0x627a7a723058
0x39e: V290 = SHA3 0x627a7a723058 S3
0x39f: V291 = 0x2a0c53256d7551001e25890fe6f3363fdce55c
0x3b3: MISSING 0xc4
0x3b4: V292 = SLT S0 S1
0x3b6: V293 = STATICCALL S13 S2 S3 S4 S5 S6
0x3b7: MISSING 0xf6
0x3b9: V294 = OR S8 S0
0x3bb: MISSING 0xdc
0x3bc: V295 = SMOD S0 S1
0x3bd: V296 = 0xaf0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2a0c53256d7551001e25890fe6f3363fdce55c, V290, V293, S7, S8, S9, S10, S11, S12, V292, S5, S1, S2, S3, S4, V294, S6, S7, S8, 0xaf0029, V295]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x92
Exit block: 0xa7
Body: 0x92, 0x9a, 0x9e, 0xa7, 0x166

Function 1:
Public function signature: 0x1b338710
Entry block: 0xb9
Exit block: 0xa7
Body: 0xa7, 0xb9, 0xc1, 0xc5, 0x16b

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xd1
Exit block: 0xe6
Body: 0xd1, 0xd9, 0xdd, 0xe6, 0x17d, 0x190, 0x194, 0x1c5, 0x1ce

Function 3:
Public function signature: 0x72d475db
Entry block: 0xe8
Exit block: 0xe6
Body: 0xa7, 0xe6, 0xe8, 0xf0, 0xf4, 0x1ce, 0x1d1, 0x235, 0x239, 0x244, 0x24d, 0x25f, 0x263, 0x280, 0x2de, 0x310, 0x334, 0x373, 0x37f, 0x380, 0x38c, 0x38d

Function 4:
Public function signature: 0x78afda07
Entry block: 0x100
Exit block: 0x115
Body: 0x100, 0x108, 0x10c, 0x115, 0x286

Function 5:
Public function signature: 0x82ab890a
Entry block: 0x131
Exit block: 0xe6
Body: 0xa7, 0xe6, 0x131, 0x1ce, 0x280, 0x29e, 0x2ae, 0x2b2, 0x2bb, 0x2bf, 0x2de, 0x310, 0x334, 0x373, 0x37f, 0x380, 0x38c, 0x38d

Function 6:
Public function signature: 0xcd68100c
Entry block: 0x13c
Exit block: 0x115
Body: 0x115, 0x13c, 0x144, 0x148, 0x355

Function 7:
Public function signature: 0xce606ee0
Entry block: 0x151
Exit block: 0x115
Body: 0x115, 0x151, 0x159, 0x15d, 0x364

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

