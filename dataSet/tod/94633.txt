Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x78]
---
0x40 DUP1
0x41 PUSH4 0x83197ef0
0x46 EQ
0x47 PUSH2 0x78
0x4a JUMPI
---
0x41: V15 = 0x83197ef0
0x46: V16 = EQ 0x83197ef0 V11
0x47: V17 = 0x78
0x4a: JUMPI 0x78 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x8d]
---
0x4b DUP1
0x4c PUSH4 0xbdf3390e
0x51 EQ
0x52 PUSH2 0x8d
0x55 JUMPI
---
0x4c: V18 = 0xbdf3390e
0x51: V19 = EQ 0xbdf3390e V11
0x52: V20 = 0x8d
0x55: JUMPI 0x8d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xc9]
---
0x56 DUP1
0x57 PUSH4 0xc2381296
0x5c EQ
0x5d PUSH2 0xc9
0x60 JUMPI
---
0x57: V21 = 0xc2381296
0x5c: V22 = EQ 0xc2381296 V11
0x5d: V23 = 0xc9
0x60: JUMPI 0xc9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x122, 0x740]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x6f
[0x6f:0x77]
---
Predecessors: [0x63]
Successors: [0xd1]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH2 0x61
0x74 PUSH2 0xd1
0x77 JUMP
---
0x6f: JUMPDEST 
0x71: V28 = 0x61
0x74: V29 = 0xd1
0x77: JUMP 0xd1
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x40]
Successors: [0x80, 0x84]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a DUP1
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x78: JUMPDEST 
0x79: V30 = CALLVALUE
0x7b: V31 = ISZERO V30
0x7c: V32 = 0x84
0x7f: JUMPI 0x84 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x78]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V33 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x84
[0x84:0x8c]
---
Predecessors: [0x78]
Successors: [0x125]
---
0x84 JUMPDEST
0x85 POP
0x86 PUSH2 0x61
0x89 PUSH2 0x125
0x8c JUMP
---
0x84: JUMPDEST 
0x86: V34 = 0x61
0x89: V35 = 0x125
0x8c: JUMP 0x125
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x8d
[0x8d:0x94]
---
Predecessors: [0x4b]
Successors: [0x95, 0x99]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f DUP1
0x90 ISZERO
0x91 PUSH2 0x99
0x94 JUMPI
---
0x8d: JUMPDEST 
0x8e: V36 = CALLVALUE
0x90: V37 = ISZERO V36
0x91: V38 = 0x99
0x94: JUMPI 0x99 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x8d]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V39 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x99
[0x99:0xa1]
---
Predecessors: [0x8d]
Successors: [0x14a]
---
0x99 JUMPDEST
0x9a POP
0x9b PUSH2 0xa2
0x9e PUSH2 0x14a
0xa1 JUMP
---
0x99: JUMPDEST 
0x9b: V40 = 0xa2
0x9e: V41 = 0x14a
0xa1: JUMP 0x14a
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xa2]
Exit stack: [V11, 0xa2]

================================

Block 0xa2
[0xa2:0xc8]
---
Predecessors: [0x6e3]
Successors: []
---
0xa2 JUMPDEST
0xa3 PUSH1 0x40
0xa5 DUP1
0xa6 MLOAD
0xa7 SWAP4
0xa8 DUP5
0xa9 MSTORE
0xaa PUSH1 0x20
0xac DUP5
0xad ADD
0xae SWAP3
0xaf SWAP1
0xb0 SWAP3
0xb1 MSTORE
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 PUSH1 0x2
0xb8 EXP
0xb9 SUB
0xba AND
0xbb DUP3
0xbc DUP3
0xbd ADD
0xbe MSTORE
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 SWAP1
0xc3 SUB
0xc4 PUSH1 0x60
0xc6 ADD
0xc7 SWAP1
0xc8 RETURN
---
0xa2: JUMPDEST 
0xa3: V42 = 0x40
0xa6: V43 = M[0x40]
0xa9: M[V43] = S2
0xaa: V44 = 0x20
0xad: V45 = ADD V43 0x20
0xb1: M[V45] = S1
0xb2: V46 = 0x1
0xb4: V47 = 0xa0
0xb6: V48 = 0x2
0xb8: V49 = EXP 0x2 0xa0
0xb9: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbd: V52 = ADD 0x40 V43
0xbe: M[V52] = V51
0xbf: V53 = M[0x40]
0xc3: V54 = SUB V43 V53
0xc4: V55 = 0x60
0xc6: V56 = ADD 0x60 V54
0xc8: RETURN V53 V56
---
Entry stack: [V11, 0x61, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, S3]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x56]
Successors: [0x6f4]
---
0xc9 JUMPDEST
0xca PUSH2 0x61
0xcd PUSH2 0x6f4
0xd0 JUMP
---
0xc9: JUMPDEST 
0xca: V57 = 0x61
0xcd: V58 = 0x6f4
0xd0: JUMP 0x6f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xd1
[0xd1:0xe3]
---
Predecessors: [0x6f]
Successors: [0xe4, 0xe8]
---
0xd1 JUMPDEST
0xd2 PUSH1 0x1
0xd4 SLOAD
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd AND
0xde CALLER
0xdf EQ
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xd1: JUMPDEST 
0xd2: V59 = 0x1
0xd4: V60 = S[0x1]
0xd5: V61 = 0x1
0xd7: V62 = 0xa0
0xd9: V63 = 0x2
0xdb: V64 = EXP 0x2 0xa0
0xdc: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xde: V67 = CALLER
0xdf: V68 = EQ V67 V66
0xe0: V69 = 0xe8
0xe3: JUMPI 0xe8 V68
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xd1]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V70 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xe8
[0xe8:0x118]
---
Predecessors: [0xd1]
Successors: [0x119, 0x122]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x1
0xeb SLOAD
0xec PUSH1 0x40
0xee MLOAD
0xef PUSH1 0x1
0xf1 PUSH1 0xa0
0xf3 PUSH1 0x2
0xf5 EXP
0xf6 SUB
0xf7 SWAP1
0xf8 SWAP2
0xf9 AND
0xfa SWAP1
0xfb ADDRESS
0xfc BALANCE
0xfd DUP1
0xfe ISZERO
0xff PUSH2 0x8fc
0x102 MUL
0x103 SWAP2
0x104 PUSH1 0x0
0x106 DUP2
0x107 DUP2
0x108 DUP2
0x109 DUP6
0x10a DUP9
0x10b DUP9
0x10c CALL
0x10d SWAP4
0x10e POP
0x10f POP
0x110 POP
0x111 POP
0x112 ISZERO
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x122
0x118 JUMPI
---
0xe8: JUMPDEST 
0xe9: V71 = 0x1
0xeb: V72 = S[0x1]
0xec: V73 = 0x40
0xee: V74 = M[0x40]
0xef: V75 = 0x1
0xf1: V76 = 0xa0
0xf3: V77 = 0x2
0xf5: V78 = EXP 0x2 0xa0
0xf6: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V80 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V81 = ADDRESS
0xfc: V82 = BALANCE V81
0xfe: V83 = ISZERO V82
0xff: V84 = 0x8fc
0x102: V85 = MUL 0x8fc V83
0x104: V86 = 0x0
0x10c: V87 = CALL V85 V80 V82 V74 0x0 V74 0x0
0x112: V88 = ISZERO V87
0x114: V89 = ISZERO V88
0x115: V90 = 0x122
0x118: JUMPI 0x122 V89
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, 0x61, V88]

================================

Block 0x119
[0x119:0x121]
---
Predecessors: [0xe8]
Successors: []
---
0x119 RETURNDATASIZE
0x11a PUSH1 0x0
0x11c DUP1
0x11d RETURNDATACOPY
0x11e RETURNDATASIZE
0x11f PUSH1 0x0
0x121 REVERT
---
0x119: V91 = RETURNDATASIZE
0x11a: V92 = 0x0
0x11d: RETURNDATACOPY 0x0 0x0 V91
0x11e: V93 = RETURNDATASIZE
0x11f: V94 = 0x0
0x121: REVERT 0x0 V93
---
Entry stack: [V11, 0x61, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V88]

================================

Block 0x122
[0x122:0x124]
---
Predecessors: [0xe8]
Successors: [0x61]
---
0x122 JUMPDEST
0x123 POP
0x124 JUMP
---
0x122: JUMPDEST 
0x124: JUMP 0x61
---
Entry stack: [V11, 0x61, V88]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x125
[0x125:0x137]
---
Predecessors: [0x84]
Successors: [0x138, 0x13c]
---
0x125 JUMPDEST
0x126 PUSH1 0x1
0x128 SLOAD
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 AND
0x132 CALLER
0x133 EQ
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x125: JUMPDEST 
0x126: V95 = 0x1
0x128: V96 = S[0x1]
0x129: V97 = 0x1
0x12b: V98 = 0xa0
0x12d: V99 = 0x2
0x12f: V100 = EXP 0x2 0xa0
0x130: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x132: V103 = CALLER
0x133: V104 = EQ V103 V102
0x134: V105 = 0x13c
0x137: JUMPI 0x13c V104
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x125]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V106 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x13c
[0x13c:0x149]
---
Predecessors: [0x125]
Successors: []
---
0x13c JUMPDEST
0x13d PUSH1 0x1
0x13f SLOAD
0x140 PUSH1 0x1
0x142 PUSH1 0xa0
0x144 PUSH1 0x2
0x146 EXP
0x147 SUB
0x148 AND
0x149 SELFDESTRUCT
---
0x13c: JUMPDEST 
0x13d: V107 = 0x1
0x13f: V108 = S[0x1]
0x140: V109 = 0x1
0x142: V110 = 0xa0
0x144: V111 = 0x2
0x146: V112 = EXP 0x2 0xa0
0x147: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x148: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x149: SELFDESTRUCT V114
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x14a
[0x14a:0x171]
---
Predecessors: [0x99, 0x712]
Successors: [0x172, 0x176]
---
0x14a JUMPDEST
0x14b PUSH1 0x1
0x14d SLOAD
0x14e PUSH1 0x0
0x150 SWAP1
0x151 DUP2
0x152 SWAP1
0x153 DUP2
0x154 SWAP1
0x155 DUP2
0x156 SWAP1
0x157 DUP2
0x158 SWAP1
0x159 DUP2
0x15a SWAP1
0x15b DUP2
0x15c SWAP1
0x15d DUP2
0x15e SWAP1
0x15f DUP2
0x160 SWAP1
0x161 DUP2
0x162 SWAP1
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b AND
0x16c CALLER
0x16d EQ
0x16e PUSH2 0x176
0x171 JUMPI
---
0x14a: JUMPDEST 
0x14b: V115 = 0x1
0x14d: V116 = S[0x1]
0x14e: V117 = 0x0
0x163: V118 = 0x1
0x165: V119 = 0xa0
0x167: V120 = 0x2
0x169: V121 = EXP 0x2 0xa0
0x16a: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x16c: V124 = CALLER
0x16d: V125 = EQ V124 V123
0x16e: V126 = 0x176
0x171: JUMPI 0x176 V125
---
Entry stack: [V11, 0x61, 0x0, 0x0, S1, {0xa2, 0x71a}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x61, 0x0, 0x0, S1, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x14a]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V127 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x176
[0x176:0x229]
---
Predecessors: [0x14a]
Successors: [0x22a]
---
0x176 JUMPDEST
0x177 PUSH1 0x40
0x179 DUP1
0x17a MLOAD
0x17b PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x19c PUSH1 0x20
0x19e DUP1
0x19f DUP4
0x1a0 ADD
0x1a1 SWAP2
0x1a2 SWAP1
0x1a3 SWAP2
0x1a4 MSTORE
0x1a5 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x1c6 PUSH1 0x21
0x1c8 DUP4
0x1c9 ADD
0x1ca MSTORE
0x1cb PUSH13 0x1000000000000000000000000
0x1d9 ADDRESS
0x1da MUL
0x1db PUSH1 0x22
0x1dd DUP4
0x1de ADD
0x1df MSTORE
0x1e0 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x201 PUSH1 0x36
0x203 DUP4
0x204 ADD
0x205 MSTORE
0x206 DUP3
0x207 MLOAD
0x208 PUSH1 0x17
0x20a DUP2
0x20b DUP5
0x20c SUB
0x20d ADD
0x20e DUP2
0x20f MSTORE
0x210 PUSH1 0x37
0x212 SWAP1
0x213 SWAP3
0x214 ADD
0x215 SWAP3
0x216 DUP4
0x217 SWAP1
0x218 MSTORE
0x219 DUP2
0x21a MLOAD
0x21b PUSH1 0x1
0x21d SWAP11
0x21e POP
0x21f SWAP2
0x220 SWAP3
0x221 SWAP2
0x222 DUP3
0x223 SWAP2
0x224 DUP5
0x225 ADD
0x226 SWAP1
0x227 DUP1
0x228 DUP4
0x229 DUP4
---
0x176: JUMPDEST 
0x177: V128 = 0x40
0x17a: V129 = M[0x40]
0x17b: V130 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x19c: V131 = 0x20
0x1a0: V132 = ADD V129 0x20
0x1a4: M[V132] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x1a5: V133 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x1c6: V134 = 0x21
0x1c9: V135 = ADD V129 0x21
0x1ca: M[V135] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x1cb: V136 = 0x1000000000000000000000000
0x1d9: V137 = ADDRESS
0x1da: V138 = MUL V137 0x1000000000000000000000000
0x1db: V139 = 0x22
0x1de: V140 = ADD V129 0x22
0x1df: M[V140] = V138
0x1e0: V141 = 0x100000000000000000000000000000000000000000000000000000000000000
0x201: V142 = 0x36
0x204: V143 = ADD V129 0x36
0x205: M[V143] = 0x100000000000000000000000000000000000000000000000000000000000000
0x207: V144 = M[0x40]
0x208: V145 = 0x17
0x20c: V146 = SUB V129 V144
0x20d: V147 = ADD V146 0x17
0x20f: M[V144] = V147
0x210: V148 = 0x37
0x214: V149 = ADD V129 0x37
0x218: M[0x40] = V149
0x21a: V150 = M[V144]
0x21b: V151 = 0x1
0x225: V152 = ADD V144 0x20
---
Entry stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [0x1, S5, S4, S3, S2, S1, S0, V144, V149, V149, V152, V150, V150, V149, V152]
Exit stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V144, V149, V149, V152, V150, V150, V149, V152]

================================

Block 0x22a
[0x22a:0x232]
---
Predecessors: [0x176, 0x233]
Successors: [0x233, 0x249]
---
0x22a JUMPDEST
0x22b PUSH1 0x20
0x22d DUP4
0x22e LT
0x22f PUSH2 0x249
0x232 JUMPI
---
0x22a: JUMPDEST 
0x22b: V153 = 0x20
0x22e: V154 = LT S2 0x20
0x22f: V155 = 0x249
0x232: JUMPI 0x249 V154
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x233
[0x233:0x248]
---
Predecessors: [0x22a]
Successors: [0x22a]
---
0x233 DUP1
0x234 MLOAD
0x235 DUP3
0x236 MSTORE
0x237 PUSH1 0x1f
0x239 NOT
0x23a SWAP1
0x23b SWAP3
0x23c ADD
0x23d SWAP2
0x23e PUSH1 0x20
0x240 SWAP2
0x241 DUP3
0x242 ADD
0x243 SWAP2
0x244 ADD
0x245 PUSH2 0x22a
0x248 JUMP
---
0x234: V156 = M[S0]
0x236: M[S1] = V156
0x237: V157 = 0x1f
0x239: V158 = NOT 0x1f
0x23c: V159 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x23e: V160 = 0x20
0x242: V161 = ADD 0x20 S1
0x244: V162 = ADD 0x20 S0
0x245: V163 = 0x22a
0x248: JUMP 0x22a
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V159, V161, V162]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, V159, V161, V162]

================================

Block 0x249
[0x249:0x2d3]
---
Predecessors: [0x22a]
Successors: [0x2d4, 0x2d8]
---
0x249 JUMPDEST
0x24a MLOAD
0x24b DUP2
0x24c MLOAD
0x24d PUSH1 0x20
0x24f SWAP4
0x250 DUP5
0x251 SUB
0x252 PUSH2 0x100
0x255 EXP
0x256 PUSH1 0x0
0x258 NOT
0x259 ADD
0x25a DUP1
0x25b NOT
0x25c SWAP1
0x25d SWAP3
0x25e AND
0x25f SWAP2
0x260 AND
0x261 OR
0x262 SWAP1
0x263 MSTORE
0x264 PUSH1 0x40
0x266 DUP1
0x267 MLOAD
0x268 SWAP3
0x269 SWAP1
0x26a SWAP5
0x26b ADD
0x26c DUP3
0x26d SWAP1
0x26e SUB
0x26f DUP3
0x270 SHA3
0x271 PUSH1 0x0
0x273 DUP1
0x274 SLOAD
0x275 PUSH32 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x296 DUP6
0x297 MSTORE
0x298 SWAP6
0x299 MLOAD
0x29a SWAP2
0x29b SWAP14
0x29c POP
0x29d SWAP12
0x29e POP
0x29f DUP12
0x2a0 SWAP11
0x2a1 POP
0x2a2 DUP11
0x2a3 SWAP10
0x2a4 POP
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad SWAP1
0x2ae SWAP5
0x2af AND
0x2b0 SWAP6
0x2b1 POP
0x2b2 PUSH4 0x11a09ae7
0x2b7 SWAP5
0x2b8 POP
0x2b9 PUSH1 0x4
0x2bb DUP1
0x2bc DUP4
0x2bd ADD
0x2be SWAP5
0x2bf SWAP2
0x2c0 SWAP4
0x2c1 POP
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 DUP3
0x2c5 SWAP1
0x2c6 SUB
0x2c7 ADD
0x2c8 DUP2
0x2c9 DUP10
0x2ca DUP8
0x2cb DUP1
0x2cc EXTCODESIZE
0x2cd ISZERO
0x2ce DUP1
0x2cf ISZERO
0x2d0 PUSH2 0x2d8
0x2d3 JUMPI
---
0x249: JUMPDEST 
0x24a: V164 = M[S0]
0x24c: V165 = M[S1]
0x24d: V166 = 0x20
0x251: V167 = SUB 0x20 S2
0x252: V168 = 0x100
0x255: V169 = EXP 0x100 V167
0x256: V170 = 0x0
0x258: V171 = NOT 0x0
0x259: V172 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V169
0x25b: V173 = NOT V172
0x25e: V174 = AND V164 V173
0x260: V175 = AND V172 V165
0x261: V176 = OR V175 V174
0x263: M[S1] = V176
0x264: V177 = 0x40
0x267: V178 = M[0x40]
0x26b: V179 = ADD S5 S3
0x26e: V180 = SUB V179 V178
0x270: V181 = SHA3 V178 V180
0x271: V182 = 0x0
0x274: V183 = S[0x0]
0x275: V184 = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x297: M[V178] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x299: V185 = M[0x40]
0x2a5: V186 = 0x1
0x2a7: V187 = 0xa0
0x2a9: V188 = 0x2
0x2ab: V189 = EXP 0x2 0xa0
0x2ac: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V191 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V192 = 0x11a09ae7
0x2b9: V193 = 0x4
0x2bd: V194 = ADD V178 0x4
0x2c6: V195 = SUB V178 V185
0x2c7: V196 = ADD V195 0x4
0x2cc: V197 = EXTCODESIZE V191
0x2cd: V198 = ISZERO V197
0x2cf: V199 = ISZERO V198
0x2d0: V200 = 0x2d8
0x2d3: JUMPI 0x2d8 V199
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [V181, 0x0, 0x0, 0x0, S9, S8, V191, 0x11a09ae7, V194, 0x20, V185, V196, V185, 0x0, V191, V198]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, V181, 0x0, 0x0, 0x0, 0x0, 0x0, V191, 0x11a09ae7, V194, 0x20, V185, V196, V185, 0x0, V191, V198]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x249]
Successors: []
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d4: V201 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, V181, 0x0, 0x0, 0x0, 0x0, 0x0, V191, 0x11a09ae7, V194, 0x20, V185, V196, V185, 0x0, V191, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, V181, 0x0, 0x0, 0x0, 0x0, 0x0, V191, 0x11a09ae7, V194, 0x20, V185, V196, V185, 0x0, V191, V198]

================================

Block 0x2d8
[0x2d8:0x2e2]
---
Predecessors: [0x249]
Successors: [0x2e3, 0x2ec]
---
0x2d8 JUMPDEST
0x2d9 POP
0x2da GAS
0x2db CALL
0x2dc ISZERO
0x2dd DUP1
0x2de ISZERO
0x2df PUSH2 0x2ec
0x2e2 JUMPI
---
0x2d8: JUMPDEST 
0x2da: V202 = GAS
0x2db: V203 = CALL V202 V191 0x0 V185 V196 V185 0x20
0x2dc: V204 = ISZERO V203
0x2de: V205 = ISZERO V204
0x2df: V206 = 0x2ec
0x2e2: JUMPI 0x2ec V205
---
Entry stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, V181, 0x0, 0x0, 0x0, 0x0, 0x0, V191, 0x11a09ae7, V194, 0x20, V185, V196, V185, 0x0, V191, V198]
Stack pops: 7
Stack additions: [V204]
Exit stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, V181, 0x0, 0x0, 0x0, 0x0, 0x0, V191, 0x11a09ae7, V194, V204]

================================

Block 0x2e3
[0x2e3:0x2eb]
---
Predecessors: [0x2d8]
Successors: []
---
0x2e3 RETURNDATASIZE
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 RETURNDATACOPY
0x2e8 RETURNDATASIZE
0x2e9 PUSH1 0x0
0x2eb REVERT
---
0x2e3: V207 = RETURNDATASIZE
0x2e4: V208 = 0x0
0x2e7: RETURNDATACOPY 0x0 0x0 V207
0x2e8: V209 = RETURNDATASIZE
0x2e9: V210 = 0x0
0x2eb: REVERT 0x0 V209
---
Entry stack: [V11, 0x61, 0x0, 0x0, S15, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, S15, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V204]

================================

Block 0x2ec
[0x2ec:0x2fd]
---
Predecessors: [0x2d8]
Successors: [0x2fe, 0x302]
---
0x2ec JUMPDEST
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 POP
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 RETURNDATASIZE
0x2f5 PUSH1 0x20
0x2f7 DUP2
0x2f8 LT
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2ec: JUMPDEST 
0x2f1: V211 = 0x40
0x2f3: V212 = M[0x40]
0x2f4: V213 = RETURNDATASIZE
0x2f5: V214 = 0x20
0x2f8: V215 = LT V213 0x20
0x2f9: V216 = ISZERO V215
0x2fa: V217 = 0x302
0x2fd: JUMPI 0x302 V216
---
Entry stack: [V11, 0x61, 0x0, 0x0, S15, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V204]
Stack pops: 4
Stack additions: [V212, V213]
Exit stack: [V11, 0x61, 0x0, 0x0, S15, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, S9, 0x0, 0x0, 0x0, 0x0, 0x0, V212, V213]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2ec]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V218 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, 0x0, 0x0, S13, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V212, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, S13, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V212, V213]

================================

Block 0x302
[0x302:0x30a]
---
Predecessors: [0x2ec]
Successors: [0x30b]
---
0x302 JUMPDEST
0x303 POP
0x304 MLOAD
0x305 SWAP2
0x306 POP
0x307 PUSH1 0x0
0x309 SWAP1
0x30a POP
---
0x302: JUMPDEST 
0x304: V219 = M[V212]
0x307: V220 = 0x0
---
Entry stack: [V11, 0x61, 0x0, 0x0, S13, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V212, V213]
Stack pops: 4
Stack additions: [V219, 0x0]
Exit stack: [V11, 0x61, 0x0, 0x0, S13, {0xa2, 0x71a}, 0x0, 0x0, 0x0, 0x1, S7, 0x0, 0x0, 0x0, V219, 0x0]

================================

Block 0x30b
[0x30b:0x312]
---
Predecessors: [0x302, 0x6de]
Successors: [0x313, 0x6e3]
---
0x30b JUMPDEST
0x30c DUP1
0x30d ISZERO
0x30e ISZERO
0x30f PUSH2 0x6e3
0x312 JUMPI
---
0x30b: JUMPDEST 
0x30d: V221 = ISZERO S0
0x30e: V222 = ISZERO V221
0x30f: V223 = 0x6e3
0x312: JUMPI 0x6e3 V222
---
Entry stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x313
[0x313:0x364]
---
Predecessors: [0x30b]
Successors: [0x365]
---
0x313 NUMBER
0x314 TIMESTAMP
0x315 DUP8
0x316 PUSH1 0x40
0x318 MLOAD
0x319 PUSH1 0x20
0x31b ADD
0x31c DUP1
0x31d DUP3
0x31e PUSH1 0x1
0x320 PUSH1 0xa0
0x322 PUSH1 0x2
0x324 EXP
0x325 SUB
0x326 AND
0x327 PUSH1 0x1
0x329 PUSH1 0xa0
0x32b PUSH1 0x2
0x32d EXP
0x32e SUB
0x32f AND
0x330 PUSH13 0x1000000000000000000000000
0x33e MUL
0x33f DUP2
0x340 MSTORE
0x341 PUSH1 0x14
0x343 ADD
0x344 SWAP2
0x345 POP
0x346 POP
0x347 PUSH1 0x40
0x349 MLOAD
0x34a PUSH1 0x20
0x34c DUP2
0x34d DUP4
0x34e SUB
0x34f SUB
0x350 DUP2
0x351 MSTORE
0x352 SWAP1
0x353 PUSH1 0x40
0x355 MSTORE
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP1
0x35a DUP3
0x35b DUP1
0x35c MLOAD
0x35d SWAP1
0x35e PUSH1 0x20
0x360 ADD
0x361 SWAP1
0x362 DUP1
0x363 DUP4
0x364 DUP4
---
0x313: V224 = NUMBER
0x314: V225 = TIMESTAMP
0x316: V226 = 0x40
0x318: V227 = M[0x40]
0x319: V228 = 0x20
0x31b: V229 = ADD 0x20 V227
0x31e: V230 = 0x1
0x320: V231 = 0xa0
0x322: V232 = 0x2
0x324: V233 = EXP 0x2 0xa0
0x325: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x326: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x327: V236 = 0x1
0x329: V237 = 0xa0
0x32b: V238 = 0x2
0x32d: V239 = EXP 0x2 0xa0
0x32e: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32f: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x330: V242 = 0x1000000000000000000000000
0x33e: V243 = MUL 0x1000000000000000000000000 V241
0x340: M[V229] = V243
0x341: V244 = 0x14
0x343: V245 = ADD 0x14 V229
0x347: V246 = 0x40
0x349: V247 = M[0x40]
0x34a: V248 = 0x20
0x34e: V249 = SUB V245 V247
0x34f: V250 = SUB V249 0x20
0x351: M[V247] = V250
0x353: V251 = 0x40
0x355: M[0x40] = V245
0x356: V252 = 0x40
0x358: V253 = M[0x40]
0x35c: V254 = M[V247]
0x35e: V255 = 0x20
0x360: V256 = ADD 0x20 V247
---
Entry stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V224, V225, V247, V253, V253, V256, V254, V254, V253, V256]
Exit stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0, V224, V225, V247, V253, V253, V256, V254, V254, V253, V256]

================================

Block 0x365
[0x365:0x36d]
---
Predecessors: [0x313, 0x36e]
Successors: [0x36e, 0x384]
---
0x365 JUMPDEST
0x366 PUSH1 0x20
0x368 DUP4
0x369 LT
0x36a PUSH2 0x384
0x36d JUMPI
---
0x365: JUMPDEST 
0x366: V257 = 0x20
0x369: V258 = LT S2 0x20
0x36a: V259 = 0x384
0x36d: JUMPI 0x384 V258
---
Entry stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V224, V225, V247, V253, V253, V256, V254, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V224, V225, V247, V253, V253, V256, V254, S2, S1, S0]

================================

Block 0x36e
[0x36e:0x383]
---
Predecessors: [0x365]
Successors: [0x365]
---
0x36e DUP1
0x36f MLOAD
0x370 DUP3
0x371 MSTORE
0x372 PUSH1 0x1f
0x374 NOT
0x375 SWAP1
0x376 SWAP3
0x377 ADD
0x378 SWAP2
0x379 PUSH1 0x20
0x37b SWAP2
0x37c DUP3
0x37d ADD
0x37e SWAP2
0x37f ADD
0x380 PUSH2 0x365
0x383 JUMP
---
0x36f: V260 = M[S0]
0x371: M[S1] = V260
0x372: V261 = 0x1f
0x374: V262 = NOT 0x1f
0x377: V263 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x379: V264 = 0x20
0x37d: V265 = ADD 0x20 S1
0x37f: V266 = ADD 0x20 S0
0x380: V267 = 0x365
0x383: JUMP 0x365
---
Entry stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V224, V225, V247, V253, V253, V256, V254, S2, S1, S0]
Stack pops: 3
Stack additions: [V263, V265, V266]
Exit stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V224, V225, V247, V253, V253, V256, V254, V263, V265, V266]

================================

Block 0x384
[0x384:0x3b8]
---
Predecessors: [0x365]
Successors: [0x3b9, 0x3ba]
---
0x384 JUMPDEST
0x385 MLOAD
0x386 DUP2
0x387 MLOAD
0x388 PUSH1 0x20
0x38a SWAP4
0x38b SWAP1
0x38c SWAP4
0x38d SUB
0x38e PUSH2 0x100
0x391 EXP
0x392 PUSH1 0x0
0x394 NOT
0x395 ADD
0x396 DUP1
0x397 NOT
0x398 SWAP1
0x399 SWAP2
0x39a AND
0x39b SWAP3
0x39c AND
0x39d SWAP2
0x39e SWAP1
0x39f SWAP2
0x3a0 OR
0x3a1 SWAP1
0x3a2 MSTORE
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 SWAP3
0x3a7 ADD
0x3a8 DUP3
0x3a9 SWAP1
0x3aa SUB
0x3ab SWAP1
0x3ac SWAP2
0x3ad SHA3
0x3ae SWAP3
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 DUP2
0x3b3 ISZERO
0x3b4 ISZERO
0x3b5 PUSH2 0x3ba
0x3b8 JUMPI
---
0x384: JUMPDEST 
0x385: V268 = M[S0]
0x387: V269 = M[S1]
0x388: V270 = 0x20
0x38d: V271 = SUB 0x20 S2
0x38e: V272 = 0x100
0x391: V273 = EXP 0x100 V271
0x392: V274 = 0x0
0x394: V275 = NOT 0x0
0x395: V276 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V273
0x397: V277 = NOT V276
0x39a: V278 = AND V268 V277
0x39c: V279 = AND V269 V276
0x3a0: V280 = OR V279 V278
0x3a2: M[S1] = V280
0x3a3: V281 = 0x40
0x3a5: V282 = M[0x40]
0x3a7: V283 = ADD V253 V254
0x3aa: V284 = SUB V283 V282
0x3ad: V285 = SHA3 V282 V284
0x3b3: V286 = ISZERO V225
0x3b4: V287 = ISZERO V286
0x3b5: V288 = 0x3ba
0x3b8: JUMPI 0x3ba V287
---
Entry stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V224, V225, V247, V253, V253, V256, V254, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V285]
Exit stack: [V11, 0x61, 0x0, 0x0, S21, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V224, V225, V285]

================================

Block 0x3b9
[0x3b9:0x3b9]
---
Predecessors: [0x384]
Successors: []
---
0x3b9 INVALID
---
0x3b9: INVALID 
---
Entry stack: [V11, 0x61, 0x0, 0x0, S14, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V224, V225, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, S14, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V224, V225, V285]

================================

Block 0x3ba
[0x3ba:0x40d]
---
Predecessors: [0x384]
Successors: [0x40e]
---
0x3ba JUMPDEST
0x3bb DIV
0x3bc GASLIMIT
0x3bd TIMESTAMP
0x3be COINBASE
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 PUSH1 0x20
0x3c4 ADD
0x3c5 DUP1
0x3c6 DUP3
0x3c7 PUSH1 0x1
0x3c9 PUSH1 0xa0
0x3cb PUSH1 0x2
0x3cd EXP
0x3ce SUB
0x3cf AND
0x3d0 PUSH1 0x1
0x3d2 PUSH1 0xa0
0x3d4 PUSH1 0x2
0x3d6 EXP
0x3d7 SUB
0x3d8 AND
0x3d9 PUSH13 0x1000000000000000000000000
0x3e7 MUL
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x14
0x3ec ADD
0x3ed SWAP2
0x3ee POP
0x3ef POP
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 PUSH1 0x20
0x3f5 DUP2
0x3f6 DUP4
0x3f7 SUB
0x3f8 SUB
0x3f9 DUP2
0x3fa MSTORE
0x3fb SWAP1
0x3fc PUSH1 0x40
0x3fe MSTORE
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 DUP3
0x404 DUP1
0x405 MLOAD
0x406 SWAP1
0x407 PUSH1 0x20
0x409 ADD
0x40a SWAP1
0x40b DUP1
0x40c DUP4
0x40d DUP4
---
0x3ba: JUMPDEST 
0x3bb: V289 = DIV V285 V225
0x3bc: V290 = GASLIMIT
0x3bd: V291 = TIMESTAMP
0x3be: V292 = COINBASE
0x3bf: V293 = 0x40
0x3c1: V294 = M[0x40]
0x3c2: V295 = 0x20
0x3c4: V296 = ADD 0x20 V294
0x3c7: V297 = 0x1
0x3c9: V298 = 0xa0
0x3cb: V299 = 0x2
0x3cd: V300 = EXP 0x2 0xa0
0x3ce: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cf: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x3d0: V303 = 0x1
0x3d2: V304 = 0xa0
0x3d4: V305 = 0x2
0x3d6: V306 = EXP 0x2 0xa0
0x3d7: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d8: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x3d9: V309 = 0x1000000000000000000000000
0x3e7: V310 = MUL 0x1000000000000000000000000 V308
0x3e9: M[V296] = V310
0x3ea: V311 = 0x14
0x3ec: V312 = ADD 0x14 V296
0x3f0: V313 = 0x40
0x3f2: V314 = M[0x40]
0x3f3: V315 = 0x20
0x3f7: V316 = SUB V312 V314
0x3f8: V317 = SUB V316 0x20
0x3fa: M[V314] = V317
0x3fc: V318 = 0x40
0x3fe: M[0x40] = V312
0x3ff: V319 = 0x40
0x401: V320 = M[0x40]
0x405: V321 = M[V314]
0x407: V322 = 0x20
0x409: V323 = ADD 0x20 V314
---
Entry stack: [V11, 0x61, 0x0, 0x0, S14, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V224, V225, V285]
Stack pops: 2
Stack additions: [V289, V290, V291, V314, V320, V320, V323, V321, V321, V320, V323]
Exit stack: [V11, 0x61, 0x0, 0x0, S14, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V224, V289, V290, V291, V314, V320, V320, V323, V321, V321, V320, V323]

================================

Block 0x40e
[0x40e:0x416]
---
Predecessors: [0x3ba, 0x417]
Successors: [0x417, 0x42d]
---
0x40e JUMPDEST
0x40f PUSH1 0x20
0x411 DUP4
0x412 LT
0x413 PUSH2 0x42d
0x416 JUMPI
---
0x40e: JUMPDEST 
0x40f: V324 = 0x20
0x412: V325 = LT S2 0x20
0x413: V326 = 0x42d
0x416: JUMPI 0x42d V325
---
Entry stack: [V11, 0x61, 0x0, 0x0, S23, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V224, V289, V290, V291, V314, V320, V320, V323, V321, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, 0x0, 0x0, S23, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V224, V289, V290, V291, V314, V320, V320, V323, V321, S2, S1, S0]

================================

Block 0x417
[0x417:0x42c]
---
Predecessors: [0x40e]
Successors: [0x40e]
---
0x417 DUP1
0x418 MLOAD
0x419 DUP3
0x41a MSTORE
0x41b PUSH1 0x1f
0x41d NOT
0x41e SWAP1
0x41f SWAP3
0x420 ADD
0x421 SWAP2
0x422 PUSH1 0x20
0x424 SWAP2
0x425 DUP3
0x426 ADD
0x427 SWAP2
0x428 ADD
0x429 PUSH2 0x40e
0x42c JUMP
---
0x418: V327 = M[S0]
0x41a: M[S1] = V327
0x41b: V328 = 0x1f
0x41d: V329 = NOT 0x1f
0x420: V330 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x422: V331 = 0x20
0x426: V332 = ADD 0x20 S1
0x428: V333 = ADD 0x20 S0
0x429: V334 = 0x40e
0x42c: JUMP 0x40e
---
Entry stack: [V11, 0x61, 0x0, 0x0, S23, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V224, V289, V290, V291, V314, V320, V320, V323, V321, S2, S1, S0]
Stack pops: 3
Stack additions: [V330, V332, V333]
Exit stack: [V11, 0x61, 0x0, 0x0, S23, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V224, V289, V290, V291, V314, V320, V320, V323, V321, V330, V332, V333]

================================

Block 0x42d
[0x42d:0x461]
---
Predecessors: [0x40e]
Successors: [0x462, 0x463]
---
0x42d JUMPDEST
0x42e MLOAD
0x42f DUP2
0x430 MLOAD
0x431 PUSH1 0x20
0x433 SWAP4
0x434 SWAP1
0x435 SWAP4
0x436 SUB
0x437 PUSH2 0x100
0x43a EXP
0x43b PUSH1 0x0
0x43d NOT
0x43e ADD
0x43f DUP1
0x440 NOT
0x441 SWAP1
0x442 SWAP2
0x443 AND
0x444 SWAP3
0x445 AND
0x446 SWAP2
0x447 SWAP1
0x448 SWAP2
0x449 OR
0x44a SWAP1
0x44b MSTORE
0x44c PUSH1 0x40
0x44e MLOAD
0x44f SWAP3
0x450 ADD
0x451 DUP3
0x452 SWAP1
0x453 SUB
0x454 SWAP1
0x455 SWAP2
0x456 SHA3
0x457 SWAP3
0x458 POP
0x459 POP
0x45a POP
0x45b DUP2
0x45c ISZERO
0x45d ISZERO
0x45e PUSH2 0x463
0x461 JUMPI
---
0x42d: JUMPDEST 
0x42e: V335 = M[S0]
0x430: V336 = M[S1]
0x431: V337 = 0x20
0x436: V338 = SUB 0x20 S2
0x437: V339 = 0x100
0x43a: V340 = EXP 0x100 V338
0x43b: V341 = 0x0
0x43d: V342 = NOT 0x0
0x43e: V343 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V340
0x440: V344 = NOT V343
0x443: V345 = AND V335 V344
0x445: V346 = AND V336 V343
0x449: V347 = OR V346 V345
0x44b: M[S1] = V347
0x44c: V348 = 0x40
0x44e: V349 = M[0x40]
0x450: V350 = ADD V320 V321
0x453: V351 = SUB V350 V349
0x456: V352 = SHA3 V349 V351
0x45c: V353 = ISZERO V291
0x45d: V354 = ISZERO V353
0x45e: V355 = 0x463
0x461: JUMPI 0x463 V354
---
Entry stack: [V11, 0x61, 0x0, 0x0, S23, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V224, V289, V290, V291, V314, V320, V320, V323, V321, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V352]
Exit stack: [V11, 0x61, 0x0, 0x0, S23, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V224, V289, V290, V291, V352]

================================

Block 0x462
[0x462:0x462]
---
Predecessors: [0x42d]
Successors: []
---
0x462 INVALID
---
0x462: INVALID 
---
Entry stack: [V11, 0x61, 0x0, 0x0, S16, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V224, V289, V290, V291, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, S16, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V224, V289, V290, V291, V352]

================================

Block 0x463
[0x463:0x499]
---
Predecessors: [0x42d]
Successors: [0x49a]
---
0x463 JUMPDEST
0x464 DIV
0x465 DIFFICULTY
0x466 TIMESTAMP
0x467 ADD
0x468 ADD
0x469 ADD
0x46a ADD
0x46b ADD
0x46c PUSH1 0x40
0x46e MLOAD
0x46f PUSH1 0x20
0x471 ADD
0x472 DUP1
0x473 DUP3
0x474 DUP2
0x475 MSTORE
0x476 PUSH1 0x20
0x478 ADD
0x479 SWAP2
0x47a POP
0x47b POP
0x47c PUSH1 0x40
0x47e MLOAD
0x47f PUSH1 0x20
0x481 DUP2
0x482 DUP4
0x483 SUB
0x484 SUB
0x485 DUP2
0x486 MSTORE
0x487 SWAP1
0x488 PUSH1 0x40
0x48a MSTORE
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f DUP3
0x490 DUP1
0x491 MLOAD
0x492 SWAP1
0x493 PUSH1 0x20
0x495 ADD
0x496 SWAP1
0x497 DUP1
0x498 DUP4
0x499 DUP4
---
0x463: JUMPDEST 
0x464: V356 = DIV V352 V291
0x465: V357 = DIFFICULTY
0x466: V358 = TIMESTAMP
0x467: V359 = ADD V358 V357
0x468: V360 = ADD V359 V356
0x469: V361 = ADD V360 V290
0x46a: V362 = ADD V361 V289
0x46b: V363 = ADD V362 V224
0x46c: V364 = 0x40
0x46e: V365 = M[0x40]
0x46f: V366 = 0x20
0x471: V367 = ADD 0x20 V365
0x475: M[V367] = V363
0x476: V368 = 0x20
0x478: V369 = ADD 0x20 V367
0x47c: V370 = 0x40
0x47e: V371 = M[0x40]
0x47f: V372 = 0x20
0x483: V373 = SUB V369 V371
0x484: V374 = SUB V373 0x20
0x486: M[V371] = V374
0x488: V375 = 0x40
0x48a: M[0x40] = V369
0x48b: V376 = 0x40
0x48d: V377 = M[0x40]
0x491: V378 = M[V371]
0x493: V379 = 0x20
0x495: V380 = ADD 0x20 V371
---
Entry stack: [V11, 0x61, 0x0, 0x0, S16, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V224, V289, V290, V291, V352]
Stack pops: 5
Stack additions: [V371, V377, V377, V380, V378, V378, V377, V380]
Exit stack: [V11, 0x61, 0x0, 0x0, S16, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V371, V377, V377, V380, V378, V378, V377, V380]

================================

Block 0x49a
[0x49a:0x4a2]
---
Predecessors: [0x463, 0x4a3]
Successors: [0x4a3, 0x4b9]
---
0x49a JUMPDEST
0x49b PUSH1 0x20
0x49d DUP4
0x49e LT
0x49f PUSH2 0x4b9
0x4a2 JUMPI
---
0x49a: JUMPDEST 
0x49b: V381 = 0x20
0x49e: V382 = LT S2 0x20
0x49f: V383 = 0x4b9
0x4a2: JUMPI 0x4b9 V382
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V371, V377, V377, V380, V378, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V371, V377, V377, V380, V378, S2, S1, S0]

================================

Block 0x4a3
[0x4a3:0x4b8]
---
Predecessors: [0x49a]
Successors: [0x49a]
---
0x4a3 DUP1
0x4a4 MLOAD
0x4a5 DUP3
0x4a6 MSTORE
0x4a7 PUSH1 0x1f
0x4a9 NOT
0x4aa SWAP1
0x4ab SWAP3
0x4ac ADD
0x4ad SWAP2
0x4ae PUSH1 0x20
0x4b0 SWAP2
0x4b1 DUP3
0x4b2 ADD
0x4b3 SWAP2
0x4b4 ADD
0x4b5 PUSH2 0x49a
0x4b8 JUMP
---
0x4a4: V384 = M[S0]
0x4a6: M[S1] = V384
0x4a7: V385 = 0x1f
0x4a9: V386 = NOT 0x1f
0x4ac: V387 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4ae: V388 = 0x20
0x4b2: V389 = ADD 0x20 S1
0x4b4: V390 = ADD 0x20 S0
0x4b5: V391 = 0x49a
0x4b8: JUMP 0x49a
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V371, V377, V377, V380, V378, S2, S1, S0]
Stack pops: 3
Stack additions: [V387, V389, V390]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V371, V377, V377, V380, V378, V387, V389, V390]

================================

Block 0x4b9
[0x4b9:0x52b]
---
Predecessors: [0x49a]
Successors: [0x52c, 0x67d]
---
0x4b9 JUMPDEST
0x4ba MLOAD
0x4bb DUP2
0x4bc MLOAD
0x4bd PUSH1 0x0
0x4bf NOT
0x4c0 PUSH1 0x20
0x4c2 SWAP5
0x4c3 DUP6
0x4c4 SUB
0x4c5 PUSH2 0x100
0x4c8 EXP
0x4c9 ADD
0x4ca SWAP1
0x4cb DUP2
0x4cc AND
0x4cd SWAP1
0x4ce NOT
0x4cf SWAP2
0x4d0 SWAP1
0x4d1 SWAP2
0x4d2 AND
0x4d3 OR
0x4d4 SWAP1
0x4d5 MSTORE
0x4d6 PUSH1 0x40
0x4d8 DUP1
0x4d9 MLOAD
0x4da SWAP5
0x4db SWAP1
0x4dc SWAP3
0x4dd ADD
0x4de DUP5
0x4df SWAP1
0x4e0 SUB
0x4e1 DUP5
0x4e2 SHA3
0x4e3 DUP1
0x4e4 DUP6
0x4e5 MSTORE
0x4e6 SWAP1
0x4e7 DUP5
0x4e8 ADD
0x4e9 DUP9
0x4ea SWAP1
0x4eb MSTORE
0x4ec DUP2
0x4ed MLOAD
0x4ee SWAP1
0x4ef SWAP9
0x4f0 POP
0x4f1 PUSH32 0xd7db8bd6749f2cdf59a7b660098558630fb02f3884bcd31ad6c5deec74d81af6
0x512 SWAP6
0x513 POP
0x514 SWAP3
0x515 DUP4
0x516 SWAP1
0x517 SUB
0x518 ADD
0x519 SWAP3
0x51a POP
0x51b POP
0x51c LOG1
0x51d PUSH2 0x3e8
0x520 DUP1
0x521 DUP5
0x522 DIV
0x523 MUL
0x524 DUP4
0x525 SUB
0x526 DUP3
0x527 GT
0x528 PUSH2 0x67d
0x52b JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V392 = M[S0]
0x4bc: V393 = M[S1]
0x4bd: V394 = 0x0
0x4bf: V395 = NOT 0x0
0x4c0: V396 = 0x20
0x4c4: V397 = SUB 0x20 S2
0x4c5: V398 = 0x100
0x4c8: V399 = EXP 0x100 V397
0x4c9: V400 = ADD V399 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4cc: V401 = AND V400 V393
0x4ce: V402 = NOT V400
0x4d2: V403 = AND V402 V392
0x4d3: V404 = OR V403 V401
0x4d5: M[S1] = V404
0x4d6: V405 = 0x40
0x4d9: V406 = M[0x40]
0x4dd: V407 = ADD V378 V377
0x4e0: V408 = SUB V407 V406
0x4e2: V409 = SHA3 V406 V408
0x4e5: M[V406] = V409
0x4e8: V410 = ADD V406 0x20
0x4eb: M[V410] = S9
0x4ed: V411 = M[0x40]
0x4f1: V412 = 0xd7db8bd6749f2cdf59a7b660098558630fb02f3884bcd31ad6c5deec74d81af6
0x517: V413 = SUB V406 V411
0x518: V414 = ADD V413 0x40
0x51c: LOG V411 V414 0xd7db8bd6749f2cdf59a7b660098558630fb02f3884bcd31ad6c5deec74d81af6
0x51d: V415 = 0x3e8
0x522: V416 = DIV V409 0x3e8
0x523: V417 = MUL V416 0x3e8
0x525: V418 = SUB V409 V417
0x527: V419 = GT S9 V418
0x528: V420 = 0x67d
0x52b: JUMPI 0x67d V419
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V371, V377, V377, V380, V378, S2, S1, S0]
Stack pops: 11
Stack additions: [V409, S9, S8]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S14, S13, S12, S11, V409, S9, S8]

================================

Block 0x52c
[0x52c:0x619]
---
Predecessors: [0x4b9]
Successors: [0x61a]
---
0x52c PUSH1 0x40
0x52e MLOAD
0x52f PUSH1 0x1
0x531 SWAP1
0x532 SWAP8
0x533 ADD
0x534 SWAP7
0x535 PUSH1 0x1
0x537 PUSH1 0xa0
0x539 PUSH1 0x2
0x53b EXP
0x53c SUB
0x53d DUP8
0x53e AND
0x53f SWAP1
0x540 PUSH32 0xa35df3d1853b647a163b505ab8d8d760857e532fa477cad46216cb51433f2166
0x561 SWAP1
0x562 PUSH1 0x0
0x564 SWAP1
0x565 LOG2
0x566 PUSH1 0x40
0x568 DUP1
0x569 MLOAD
0x56a PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x58b PUSH1 0x20
0x58d DUP1
0x58e DUP4
0x58f ADD
0x590 SWAP2
0x591 SWAP1
0x592 SWAP2
0x593 MSTORE
0x594 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x5b5 PUSH1 0x21
0x5b7 DUP4
0x5b8 ADD
0x5b9 MSTORE
0x5ba PUSH13 0x1000000000000000000000000
0x5c8 ADDRESS
0x5c9 MUL
0x5ca PUSH1 0x22
0x5cc DUP4
0x5cd ADD
0x5ce MSTORE
0x5cf PUSH1 0xff
0x5d1 DUP11
0x5d2 AND
0x5d3 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x5f4 MUL
0x5f5 PUSH1 0x36
0x5f7 DUP4
0x5f8 ADD
0x5f9 MSTORE
0x5fa DUP3
0x5fb MLOAD
0x5fc PUSH1 0x17
0x5fe DUP2
0x5ff DUP5
0x600 SUB
0x601 ADD
0x602 DUP2
0x603 MSTORE
0x604 PUSH1 0x37
0x606 SWAP1
0x607 SWAP3
0x608 ADD
0x609 SWAP3
0x60a DUP4
0x60b SWAP1
0x60c MSTORE
0x60d DUP2
0x60e MLOAD
0x60f SWAP2
0x610 SWAP3
0x611 SWAP2
0x612 DUP3
0x613 SWAP2
0x614 DUP5
0x615 ADD
0x616 SWAP1
0x617 DUP1
0x618 DUP4
0x619 DUP4
---
0x52c: V421 = 0x40
0x52e: V422 = M[0x40]
0x52f: V423 = 0x1
0x533: V424 = ADD S6 0x1
0x535: V425 = 0x1
0x537: V426 = 0xa0
0x539: V427 = 0x2
0x53b: V428 = EXP 0x2 0xa0
0x53c: V429 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53e: V430 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x540: V431 = 0xa35df3d1853b647a163b505ab8d8d760857e532fa477cad46216cb51433f2166
0x562: V432 = 0x0
0x565: LOG V422 0x0 0xa35df3d1853b647a163b505ab8d8d760857e532fa477cad46216cb51433f2166 V430
0x566: V433 = 0x40
0x569: V434 = M[0x40]
0x56a: V435 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x58b: V436 = 0x20
0x58f: V437 = ADD V434 0x20
0x593: M[V437] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x594: V438 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x5b5: V439 = 0x21
0x5b8: V440 = ADD V434 0x21
0x5b9: M[V440] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x5ba: V441 = 0x1000000000000000000000000
0x5c8: V442 = ADDRESS
0x5c9: V443 = MUL V442 0x1000000000000000000000000
0x5ca: V444 = 0x22
0x5cd: V445 = ADD V434 0x22
0x5ce: M[V445] = V443
0x5cf: V446 = 0xff
0x5d2: V447 = AND V424 0xff
0x5d3: V448 = 0x100000000000000000000000000000000000000000000000000000000000000
0x5f4: V449 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V447
0x5f5: V450 = 0x36
0x5f8: V451 = ADD V434 0x36
0x5f9: M[V451] = V449
0x5fb: V452 = M[0x40]
0x5fc: V453 = 0x17
0x600: V454 = SUB V434 V452
0x601: V455 = ADD V454 0x17
0x603: M[V452] = V455
0x604: V456 = 0x37
0x608: V457 = ADD V434 0x37
0x60c: M[0x40] = V457
0x60e: V458 = M[V452]
0x615: V459 = ADD V452 0x20
---
Entry stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, V409, S1, S0]
Stack pops: 7
Stack additions: [V424, S5, S4, S3, S2, S1, S0, V452, V457, V457, V459, V458, V458, V457, V459]
Exit stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, V424, S5, S4, S3, V409, S1, S0, V452, V457, V457, V459, V458, V458, V457, V459]

================================

Block 0x61a
[0x61a:0x622]
---
Predecessors: [0x52c, 0x623]
Successors: [0x623, 0x639]
---
0x61a JUMPDEST
0x61b PUSH1 0x20
0x61d DUP4
0x61e LT
0x61f PUSH2 0x639
0x622 JUMPI
---
0x61a: JUMPDEST 
0x61b: V460 = 0x20
0x61e: V461 = LT S2 0x20
0x61f: V462 = 0x639
0x622: JUMPI 0x639 V461
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, V424, S13, S12, S11, S10, S9, S8, V452, V457, V457, V459, V458, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, V424, S13, S12, S11, S10, S9, S8, V452, V457, V457, V459, V458, S2, S1, S0]

================================

Block 0x623
[0x623:0x638]
---
Predecessors: [0x61a]
Successors: [0x61a]
---
0x623 DUP1
0x624 MLOAD
0x625 DUP3
0x626 MSTORE
0x627 PUSH1 0x1f
0x629 NOT
0x62a SWAP1
0x62b SWAP3
0x62c ADD
0x62d SWAP2
0x62e PUSH1 0x20
0x630 SWAP2
0x631 DUP3
0x632 ADD
0x633 SWAP2
0x634 ADD
0x635 PUSH2 0x61a
0x638 JUMP
---
0x624: V463 = M[S0]
0x626: M[S1] = V463
0x627: V464 = 0x1f
0x629: V465 = NOT 0x1f
0x62c: V466 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x62e: V467 = 0x20
0x632: V468 = ADD 0x20 S1
0x634: V469 = ADD 0x20 S0
0x635: V470 = 0x61a
0x638: JUMP 0x61a
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, V424, S13, S12, S11, S10, S9, S8, V452, V457, V457, V459, V458, S2, S1, S0]
Stack pops: 3
Stack additions: [V466, V468, V469]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, V424, S13, S12, S11, S10, S9, S8, V452, V457, V457, V459, V458, V466, V468, V469]

================================

Block 0x639
[0x639:0x67c]
---
Predecessors: [0x61a]
Successors: [0x6de]
---
0x639 JUMPDEST
0x63a MLOAD
0x63b DUP2
0x63c MLOAD
0x63d PUSH1 0x20
0x63f SWAP4
0x640 SWAP1
0x641 SWAP4
0x642 SUB
0x643 PUSH2 0x100
0x646 EXP
0x647 PUSH1 0x0
0x649 NOT
0x64a ADD
0x64b DUP1
0x64c NOT
0x64d SWAP1
0x64e SWAP2
0x64f AND
0x650 SWAP3
0x651 AND
0x652 SWAP2
0x653 SWAP1
0x654 SWAP2
0x655 OR
0x656 SWAP1
0x657 MSTORE
0x658 PUSH1 0x40
0x65a MLOAD
0x65b SWAP3
0x65c ADD
0x65d DUP3
0x65e SWAP1
0x65f SUB
0x660 SWAP1
0x661 SWAP2
0x662 SHA3
0x663 PUSH1 0x6
0x665 SLOAD
0x666 SWAP1
0x667 SWAP10
0x668 POP
0x669 PUSH1 0x1
0x66b SWAP9
0x66c SWAP1
0x66d SWAP9
0x66e ADD
0x66f SWAP8
0x670 SWAP7
0x671 SWAP1
0x672 SWAP7
0x673 ADD
0x674 SWAP6
0x675 POP
0x676 PUSH2 0x6de
0x679 SWAP2
0x67a POP
0x67b POP
0x67c JUMP
---
0x639: JUMPDEST 
0x63a: V471 = M[S0]
0x63c: V472 = M[S1]
0x63d: V473 = 0x20
0x642: V474 = SUB 0x20 S2
0x643: V475 = 0x100
0x646: V476 = EXP 0x100 V474
0x647: V477 = 0x0
0x649: V478 = NOT 0x0
0x64a: V479 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V476
0x64c: V480 = NOT V479
0x64f: V481 = AND V471 V480
0x651: V482 = AND V472 V479
0x655: V483 = OR V482 V481
0x657: M[S1] = V483
0x658: V484 = 0x40
0x65a: V485 = M[0x40]
0x65c: V486 = ADD V457 V458
0x65f: V487 = SUB V486 V485
0x662: V488 = SHA3 V485 V487
0x663: V489 = 0x6
0x665: V490 = S[0x6]
0x669: V491 = 0x1
0x66e: V492 = ADD 0x1 S12
0x673: V493 = ADD V490 S11
0x676: V494 = 0x6de
0x67c: JUMP 0x6de
---
Entry stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, V424, S13, S12, S11, S10, S9, S8, V452, V457, V457, V459, V458, S2, S1, S0]
Stack pops: 14
Stack additions: [V488, V492, V493, S10, S9, S8]
Exit stack: [V11, 0x61, 0x0, 0x0, S19, {0xa2, 0x71a}, 0x0, 0x0, 0x0, V424, V488, V492, V493, S10, S9, S8]

================================

Block 0x67d
[0x67d:0x6dd]
---
Predecessors: [0x4b9]
Successors: [0x6de]
---
0x67d JUMPDEST
0x67e POP
0x67f PUSH1 0x7
0x681 SLOAD
0x682 PUSH1 0x40
0x684 DUP1
0x685 MLOAD
0x686 SWAP5
0x687 SWAP1
0x688 SWAP2
0x689 ADD
0x68a DUP1
0x68b DUP6
0x68c MSTORE
0x68d PUSH1 0x20
0x68f DUP6
0x690 ADD
0x691 DUP7
0x692 SWAP1
0x693 MSTORE
0x694 DUP5
0x695 DUP3
0x696 ADD
0x697 DUP5
0x698 SWAP1
0x699 MSTORE
0x69a PUSH1 0x60
0x69c DUP6
0x69d ADD
0x69e DUP4
0x69f SWAP1
0x6a0 MSTORE
0x6a1 SWAP1
0x6a2 MLOAD
0x6a3 SWAP1
0x6a4 SWAP4
0x6a5 PUSH1 0x1
0x6a7 SWAP2
0x6a8 PUSH1 0x1
0x6aa PUSH1 0xa0
0x6ac PUSH1 0x2
0x6ae EXP
0x6af SUB
0x6b0 DUP9
0x6b1 AND
0x6b2 SWAP2
0x6b3 PUSH32 0x9ba171a0bf779fb814b08421a0deb279f72dfa73ac7a8f35a8edf6bdfa898cf4
0x6d4 SWAP2
0x6d5 SWAP1
0x6d6 DUP2
0x6d7 SWAP1
0x6d8 SUB
0x6d9 PUSH1 0x80
0x6db ADD
0x6dc SWAP1
0x6dd LOG2
---
0x67d: JUMPDEST 
0x67f: V495 = 0x7
0x681: V496 = S[0x7]
0x682: V497 = 0x40
0x685: V498 = M[0x40]
0x689: V499 = ADD V496 S3
0x68c: M[V498] = V499
0x68d: V500 = 0x20
0x690: V501 = ADD V498 0x20
0x693: M[V501] = S4
0x696: V502 = ADD 0x40 V498
0x699: M[V502] = V409
0x69a: V503 = 0x60
0x69d: V504 = ADD V498 0x60
0x6a0: M[V504] = S1
0x6a2: V505 = M[0x40]
0x6a5: V506 = 0x1
0x6a8: V507 = 0x1
0x6aa: V508 = 0xa0
0x6ac: V509 = 0x2
0x6ae: V510 = EXP 0x2 0xa0
0x6af: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b1: V512 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x6b3: V513 = 0x9ba171a0bf779fb814b08421a0deb279f72dfa73ac7a8f35a8edf6bdfa898cf4
0x6d8: V514 = SUB V498 V505
0x6d9: V515 = 0x80
0x6db: V516 = ADD 0x80 V514
0x6dd: LOG V505 V516 0x9ba171a0bf779fb814b08421a0deb279f72dfa73ac7a8f35a8edf6bdfa898cf4 V512
---
Entry stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, V409, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, V499, S2, S1, 0x1]
Exit stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, V499, V409, S1, 0x1]

================================

Block 0x6de
[0x6de:0x6e2]
---
Predecessors: [0x639, 0x67d]
Successors: [0x30b]
---
0x6de JUMPDEST
0x6df PUSH2 0x30b
0x6e2 JUMP
---
0x6de: JUMPDEST 
0x6df: V517 = 0x30b
0x6e2: JUMP 0x30b
---
Entry stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e3
[0x6e3:0x6f3]
---
Predecessors: [0x30b]
Successors: [0xa2, 0x71a]
---
0x6e3 JUMPDEST
0x6e4 POP
0x6e5 SWAP2
0x6e6 SWAP9
0x6e7 SWAP3
0x6e8 SWAP8
0x6e9 POP
0x6ea SWAP3
0x6eb SWAP6
0x6ec POP
0x6ed SWAP1
0x6ee SWAP4
0x6ef POP
0x6f0 POP
0x6f1 POP
0x6f2 POP
0x6f3 JUMP
---
0x6e3: JUMPDEST 
0x6f3: JUMP {0xa2, 0x71a}
---
Entry stack: [V11, 0x61, 0x0, 0x0, S11, {0xa2, 0x71a}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S3, S4, S5]
Exit stack: [V11, 0x61, 0x0, 0x0, S11, S3, S4, S5]

================================

Block 0x6f4
[0x6f4:0x70d]
---
Predecessors: [0xc9]
Successors: [0x70e, 0x712]
---
0x6f4 JUMPDEST
0x6f5 PUSH1 0x1
0x6f7 SLOAD
0x6f8 PUSH1 0x0
0x6fa SWAP1
0x6fb DUP2
0x6fc SWAP1
0x6fd DUP2
0x6fe SWAP1
0x6ff PUSH1 0x1
0x701 PUSH1 0xa0
0x703 PUSH1 0x2
0x705 EXP
0x706 SUB
0x707 AND
0x708 CALLER
0x709 EQ
0x70a PUSH2 0x712
0x70d JUMPI
---
0x6f4: JUMPDEST 
0x6f5: V518 = 0x1
0x6f7: V519 = S[0x1]
0x6f8: V520 = 0x0
0x6ff: V521 = 0x1
0x701: V522 = 0xa0
0x703: V523 = 0x2
0x705: V524 = EXP 0x2 0xa0
0x706: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x707: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x708: V527 = CALLER
0x709: V528 = EQ V527 V526
0x70a: V529 = 0x712
0x70d: JUMPI 0x712 V528
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x61, 0x0, 0x0, 0x0]

================================

Block 0x70e
[0x70e:0x711]
---
Predecessors: [0x6f4]
Successors: []
---
0x70e PUSH1 0x0
0x710 DUP1
0x711 REVERT
---
0x70e: V530 = 0x0
0x711: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, 0x0]

================================

Block 0x712
[0x712:0x719]
---
Predecessors: [0x6f4]
Successors: [0x14a]
---
0x712 JUMPDEST
0x713 PUSH2 0x71a
0x716 PUSH2 0x14a
0x719 JUMP
---
0x712: JUMPDEST 
0x713: V531 = 0x71a
0x716: V532 = 0x14a
0x719: JUMP 0x14a
---
Entry stack: [V11, 0x61, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x71a]
Exit stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x71a]

================================

Block 0x71a
[0x71a:0x736]
---
Predecessors: [0x6e3]
Successors: [0x737, 0x740]
---
0x71a JUMPDEST
0x71b PUSH1 0x8
0x71d SLOAD
0x71e SWAP3
0x71f SWAP6
0x720 POP
0x721 SWAP1
0x722 SWAP4
0x723 POP
0x724 SWAP2
0x725 POP
0x726 PUSH8 0x16345785d8a0000
0x72f DUP5
0x730 ADD
0x731 LT
0x732 ISZERO
0x733 PUSH2 0x740
0x736 JUMPI
---
0x71a: JUMPDEST 
0x71b: V533 = 0x8
0x71d: V534 = S[0x8]
0x726: V535 = 0x16345785d8a0000
0x730: V536 = ADD S2 0x16345785d8a0000
0x731: V537 = LT V536 V534
0x732: V538 = ISZERO V537
0x733: V539 = 0x740
0x736: JUMPI 0x740 V538
---
Entry stack: [V11, 0x61, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x61, S2, S1, S0]

================================

Block 0x737
[0x737:0x73f]
---
Predecessors: [0x71a]
Successors: [0x745]
---
0x737 PUSH2 0x740
0x73a DUP3
0x73b DUP3
0x73c PUSH2 0x745
0x73f JUMP
---
0x737: V540 = 0x740
0x73c: V541 = 0x745
0x73f: JUMP 0x745
---
Entry stack: [V11, 0x61, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x740, S1, S0]
Exit stack: [V11, 0x61, S2, S1, S0, 0x740, S1, S0]

================================

Block 0x740
[0x740:0x744]
---
Predecessors: [0x71a, 0x83f]
Successors: [0x61]
---
0x740 JUMPDEST
0x741 POP
0x742 POP
0x743 POP
0x744 JUMP
---
0x740: JUMPDEST 
0x744: JUMP 0x61
---
Entry stack: [V11, 0x61, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x745
[0x745:0x748]
---
Predecessors: [0x737]
Successors: [0x749]
---
0x745 JUMPDEST
0x746 PUSH1 0x0
0x748 DUP1
---
0x745: JUMPDEST 
0x746: V542 = 0x0
---
Entry stack: [V11, 0x61, S5, S4, S3, 0x740, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x61, S5, S4, S3, 0x740, S1, S0, 0x0, 0x0]

================================

Block 0x749
[0x749:0x751]
---
Predecessors: [0x745, 0x775]
Successors: [0x752, 0x7b8]
---
0x749 JUMPDEST
0x74a DUP4
0x74b DUP3
0x74c LT
0x74d ISZERO
0x74e PUSH2 0x7b8
0x751 JUMPI
---
0x749: JUMPDEST 
0x74c: V543 = LT S1 S3
0x74d: V544 = ISZERO V543
0x74e: V545 = 0x7b8
0x751: JUMPI 0x7b8 V544
---
Entry stack: [V11, 0x61, S7, S6, S5, 0x740, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x61, S7, S6, S5, 0x740, S3, S2, S1, S0]

================================

Block 0x752
[0x752:0x758]
---
Predecessors: [0x749]
Successors: [0x847]
---
0x752 PUSH2 0x759
0x755 PUSH2 0x847
0x758 JUMP
---
0x752: V546 = 0x759
0x755: V547 = 0x847
0x758: JUMP 0x847
---
Entry stack: [V11, 0x61, S7, S6, S5, 0x740, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x759]
Exit stack: [V11, 0x61, S7, S6, S5, 0x740, S3, S2, S1, S0, 0x759]

================================

Block 0x759
[0x759:0x76b]
---
Predecessors: [0x847]
Successors: [0x76c, 0x775]
---
0x759 JUMPDEST
0x75a PUSH1 0x40
0x75c MLOAD
0x75d DUP1
0x75e SWAP2
0x75f SUB
0x760 SWAP1
0x761 PUSH1 0x0
0x763 CREATE
0x764 DUP1
0x765 ISZERO
0x766 DUP1
0x767 ISZERO
0x768 PUSH2 0x775
0x76b JUMPI
---
0x759: JUMPDEST 
0x75a: V548 = 0x40
0x75c: V549 = M[0x40]
0x75f: V550 = SUB V620 V549
0x761: V551 = 0x0
0x763: V552 = CREATE 0x0 V549 V550
0x765: V553 = ISZERO V552
0x767: V554 = ISZERO V553
0x768: V555 = 0x775
0x76b: JUMPI 0x775 V554
---
Entry stack: [V11, 0x61, S8, S7, S6, 0x740, S4, S3, S2, S1, V620]
Stack pops: 1
Stack additions: [V552, V553]
Exit stack: [V11, 0x61, S8, S7, S6, 0x740, S4, S3, S2, S1, V552, V553]

================================

Block 0x76c
[0x76c:0x774]
---
Predecessors: [0x759]
Successors: []
---
0x76c RETURNDATASIZE
0x76d PUSH1 0x0
0x76f DUP1
0x770 RETURNDATACOPY
0x771 RETURNDATASIZE
0x772 PUSH1 0x0
0x774 REVERT
---
0x76c: V556 = RETURNDATASIZE
0x76d: V557 = 0x0
0x770: RETURNDATACOPY 0x0 0x0 V556
0x771: V558 = RETURNDATASIZE
0x772: V559 = 0x0
0x774: REVERT 0x0 V558
---
Entry stack: [V11, 0x61, S9, S8, S7, 0x740, S5, S4, S3, S2, V552, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, S9, S8, S7, 0x740, S5, S4, S3, S2, V552, V553]

================================

Block 0x775
[0x775:0x7b7]
---
Predecessors: [0x759]
Successors: [0x749]
---
0x775 JUMPDEST
0x776 POP
0x777 PUSH1 0x40
0x779 MLOAD
0x77a SWAP1
0x77b SWAP2
0x77c POP
0x77d PUSH1 0x1
0x77f PUSH1 0xa0
0x781 PUSH1 0x2
0x783 EXP
0x784 SUB
0x785 DUP3
0x786 AND
0x787 SWAP1
0x788 PUSH32 0x6eb67ddb1c00eddcd1b16fed1715360c136b15e356ab41e7bec158ff3e549528
0x7a9 SWAP1
0x7aa PUSH1 0x0
0x7ac SWAP1
0x7ad LOG2
0x7ae PUSH1 0x1
0x7b0 SWAP1
0x7b1 SWAP2
0x7b2 ADD
0x7b3 SWAP1
0x7b4 PUSH2 0x749
0x7b7 JUMP
---
0x775: JUMPDEST 
0x777: V560 = 0x40
0x779: V561 = M[0x40]
0x77d: V562 = 0x1
0x77f: V563 = 0xa0
0x781: V564 = 0x2
0x783: V565 = EXP 0x2 0xa0
0x784: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x786: V567 = AND V552 0xffffffffffffffffffffffffffffffffffffffff
0x788: V568 = 0x6eb67ddb1c00eddcd1b16fed1715360c136b15e356ab41e7bec158ff3e549528
0x7aa: V569 = 0x0
0x7ad: LOG V561 0x0 0x6eb67ddb1c00eddcd1b16fed1715360c136b15e356ab41e7bec158ff3e549528 V567
0x7ae: V570 = 0x1
0x7b2: V571 = ADD S3 0x1
0x7b4: V572 = 0x749
0x7b7: JUMP 0x749
---
Entry stack: [V11, 0x61, S9, S8, S7, 0x740, S5, S4, S3, S2, V552, V553]
Stack pops: 4
Stack additions: [V571, S1]
Exit stack: [V11, 0x61, S9, S8, S7, 0x740, S5, S4, V571, V552]

================================

Block 0x7b8
[0x7b8:0x822]
---
Predecessors: [0x749]
Successors: [0x856]
---
0x7b8 JUMPDEST
0x7b9 PUSH1 0x40
0x7bb DUP1
0x7bc MLOAD
0x7bd PUSH1 0x1
0x7bf PUSH1 0xa0
0x7c1 PUSH1 0x2
0x7c3 EXP
0x7c4 SUB
0x7c5 DUP6
0x7c6 AND
0x7c7 DUP2
0x7c8 MSTORE
0x7c9 ADDRESS
0x7ca BALANCE
0x7cb PUSH1 0x20
0x7cd DUP3
0x7ce ADD
0x7cf MSTORE
0x7d0 DUP2
0x7d1 MLOAD
0x7d2 PUSH32 0x6f64f88d9c7bce9de81630a906db0b3cca6a7fab9fb0203e20d5beac8bcf70b7
0x7f3 SWAP3
0x7f4 SWAP2
0x7f5 DUP2
0x7f6 SWAP1
0x7f7 SUB
0x7f8 SWAP1
0x7f9 SWAP2
0x7fa ADD
0x7fb SWAP1
0x7fc LOG1
0x7fd PUSH1 0x40
0x7ff MLOAD
0x800 PUSH1 0x1
0x802 PUSH1 0xa0
0x804 PUSH1 0x2
0x806 EXP
0x807 SUB
0x808 DUP5
0x809 AND
0x80a SWAP1
0x80b ADDRESS
0x80c BALANCE
0x80d SWAP1
0x80e PUSH1 0x0
0x810 DUP2
0x811 DUP2
0x812 DUP2
0x813 DUP6
0x814 DUP8
0x815 GAS
0x816 CALL
0x817 SWAP3
0x818 POP
0x819 POP
0x81a POP
0x81b POP
0x81c PUSH2 0x823
0x81f PUSH2 0x856
0x822 JUMP
---
0x7b8: JUMPDEST 
0x7b9: V573 = 0x40
0x7bc: V574 = M[0x40]
0x7bd: V575 = 0x1
0x7bf: V576 = 0xa0
0x7c1: V577 = 0x2
0x7c3: V578 = EXP 0x2 0xa0
0x7c4: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c6: V580 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x7c8: M[V574] = V580
0x7c9: V581 = ADDRESS
0x7ca: V582 = BALANCE V581
0x7cb: V583 = 0x20
0x7ce: V584 = ADD V574 0x20
0x7cf: M[V584] = V582
0x7d1: V585 = M[0x40]
0x7d2: V586 = 0x6f64f88d9c7bce9de81630a906db0b3cca6a7fab9fb0203e20d5beac8bcf70b7
0x7f7: V587 = SUB V574 V585
0x7fa: V588 = ADD 0x40 V587
0x7fc: LOG V585 V588 0x6f64f88d9c7bce9de81630a906db0b3cca6a7fab9fb0203e20d5beac8bcf70b7
0x7fd: V589 = 0x40
0x7ff: V590 = M[0x40]
0x800: V591 = 0x1
0x802: V592 = 0xa0
0x804: V593 = 0x2
0x806: V594 = EXP 0x2 0xa0
0x807: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x809: V596 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x80b: V597 = ADDRESS
0x80c: V598 = BALANCE V597
0x80e: V599 = 0x0
0x815: V600 = GAS
0x816: V601 = CALL V600 V596 V598 V590 0x0 V590 0x0
0x81c: V602 = 0x823
0x81f: V603 = 0x856
0x822: JUMP 0x856
---
Entry stack: [V11, 0x61, S7, S6, S5, 0x740, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x823]
Exit stack: [V11, 0x61, S7, S6, S5, 0x740, S3, S2, S1, S0, 0x823]

================================

Block 0x823
[0x823:0x835]
---
Predecessors: [0x856]
Successors: [0x836, 0x83f]
---
0x823 JUMPDEST
0x824 PUSH1 0x40
0x826 MLOAD
0x827 DUP1
0x828 SWAP2
0x829 SUB
0x82a SWAP1
0x82b PUSH1 0x0
0x82d CREATE
0x82e DUP1
0x82f ISZERO
0x830 DUP1
0x831 ISZERO
0x832 PUSH2 0x83f
0x835 JUMPI
---
0x823: JUMPDEST 
0x824: V604 = 0x40
0x826: V605 = M[0x40]
0x829: V606 = SUB V625 V605
0x82b: V607 = 0x0
0x82d: V608 = CREATE 0x0 V605 V606
0x82f: V609 = ISZERO V608
0x831: V610 = ISZERO V609
0x832: V611 = 0x83f
0x835: JUMPI 0x83f V610
---
Entry stack: [V11, 0x61, S8, S7, S6, 0x740, S4, S3, S2, S1, V625]
Stack pops: 1
Stack additions: [V608, V609]
Exit stack: [V11, 0x61, S8, S7, S6, 0x740, S4, S3, S2, S1, V608, V609]

================================

Block 0x836
[0x836:0x83e]
---
Predecessors: [0x823]
Successors: []
---
0x836 RETURNDATASIZE
0x837 PUSH1 0x0
0x839 DUP1
0x83a RETURNDATACOPY
0x83b RETURNDATASIZE
0x83c PUSH1 0x0
0x83e REVERT
---
0x836: V612 = RETURNDATASIZE
0x837: V613 = 0x0
0x83a: RETURNDATACOPY 0x0 0x0 V612
0x83b: V614 = RETURNDATASIZE
0x83c: V615 = 0x0
0x83e: REVERT 0x0 V614
---
Entry stack: [V11, 0x61, S9, S8, S7, 0x740, S5, S4, S3, S2, V608, V609]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, S9, S8, S7, 0x740, S5, S4, S3, S2, V608, V609]

================================

Block 0x83f
[0x83f:0x846]
---
Predecessors: [0x823]
Successors: [0x740]
---
0x83f JUMPDEST
0x840 POP
0x841 POP
0x842 POP
0x843 POP
0x844 POP
0x845 POP
0x846 JUMP
---
0x83f: JUMPDEST 
0x846: JUMP 0x740
---
Entry stack: [V11, 0x61, S9, S8, S7, 0x740, S5, S4, S3, S2, V608, V609]
Stack pops: 7
Stack additions: []
Exit stack: [V11, 0x61, S9, S8, S7]

================================

Block 0x847
[0x847:0x855]
---
Predecessors: [0x752]
Successors: [0x759]
---
0x847 JUMPDEST
0x848 PUSH1 0x40
0x84a MLOAD
0x84b PUSH1 0x52
0x84d DUP1
0x84e PUSH2 0x867
0x851 DUP4
0x852 CODECOPY
0x853 ADD
0x854 SWAP1
0x855 JUMP
---
0x847: JUMPDEST 
0x848: V616 = 0x40
0x84a: V617 = M[0x40]
0x84b: V618 = 0x52
0x84e: V619 = 0x867
0x852: CODECOPY V617 0x867 0x52
0x853: V620 = ADD 0x52 V617
0x855: JUMP 0x759
---
Entry stack: [V11, 0x61, S8, S7, S6, 0x740, S4, S3, S2, S1, 0x759]
Stack pops: 1
Stack additions: [V620]
Exit stack: [V11, 0x61, S8, S7, S6, 0x740, S4, S3, S2, S1, V620]

================================

Block 0x856
[0x856:0x865]
---
Predecessors: [0x7b8]
Successors: [0x823]
---
0x856 JUMPDEST
0x857 PUSH1 0x40
0x859 MLOAD
0x85a PUSH2 0x348
0x85d DUP1
0x85e PUSH2 0x8b9
0x861 DUP4
0x862 CODECOPY
0x863 ADD
0x864 SWAP1
0x865 JUMP
---
0x856: JUMPDEST 
0x857: V621 = 0x40
0x859: V622 = M[0x40]
0x85a: V623 = 0x348
0x85e: V624 = 0x8b9
0x862: CODECOPY V622 0x8b9 0x348
0x863: V625 = ADD 0x348 V622
0x865: JUMP 0x823
---
Entry stack: [V11, 0x61, S8, S7, S6, 0x740, S4, S3, S2, S1, 0x823]
Stack pops: 1
Stack additions: [V625]
Exit stack: [V11, 0x61, S8, S7, S6, 0x740, S4, S3, S2, S1, V625]

================================

Block 0x866
[0x866:0x871]
---
Predecessors: []
Successors: [0x872]
---
0x866 STOP
0x867 PUSH1 0x80
0x869 PUSH1 0x40
0x86b MSTORE
0x86c CALLVALUE
0x86d DUP1
0x86e ISZERO
0x86f PUSH1 0xf
0x871 JUMPI
---
0x866: STOP 
0x867: V626 = 0x80
0x869: V627 = 0x40
0x86b: M[0x40] = 0x80
0x86c: V628 = CALLVALUE
0x86e: V629 = ISZERO V628
0x86f: V630 = 0xf
0x871: THROWI V629
---
Entry stack: []
Stack pops: 0
Stack additions: [V628]
Exit stack: []

================================

Block 0x872
[0x872:0x976]
---
Predecessors: [0x866]
Successors: [0x977]
---
0x872 PUSH1 0x0
0x874 DUP1
0x875 REVERT
0x876 JUMPDEST
0x877 POP
0x878 PUSH1 0x35
0x87a DUP1
0x87b PUSH1 0x1d
0x87d PUSH1 0x0
0x87f CODECOPY
0x880 PUSH1 0x0
0x882 RETURN
0x883 STOP
0x884 PUSH1 0x80
0x886 PUSH1 0x40
0x888 MSTORE
0x889 PUSH1 0x0
0x88b DUP1
0x88c REVERT
0x88d STOP
0x88e LOG1
0x88f PUSH6 0x627a7a723058
0x896 SHA3
0x897 CODECOPY
0x898 STATICCALL
0x899 MISSING 0xb5
0x89a TIMESTAMP
0x89b MISSING 0xc9
0x89c COINBASE
0x89d EXTCODEHASH
0x89e MISSING 0xf7
0x89f MISSING 0xea
0x8a0 SWAP16
0x8a1 MISSING 0xef
0x8a2 MISSING 0xd4
0x8a3 MISSING 0xd8
0x8a4 MISSING 0xb3
0x8a5 PUSH7 0xddbf9fa35952f5
0x8ad MISSING 0xea
0x8ae MISSING 0xe0
0x8af PUSH10 0x56e8874ba4a392002960
0x8ba DUP1
0x8bb PUSH1 0x40
0x8bd DUP2
0x8be DUP2
0x8bf MSTORE
0x8c0 PUSH1 0x1
0x8c2 DUP1
0x8c3 SLOAD
0x8c4 PUSH1 0x1
0x8c6 PUSH1 0xa0
0x8c8 PUSH1 0x2
0x8ca EXP
0x8cb SUB
0x8cc NOT
0x8cd SWAP1
0x8ce DUP2
0x8cf AND
0x8d0 PUSH20 0x5d0d76787d9d564061dd23f8209f804a3b8ad2f2
0x8e5 OR
0x8e6 SWAP1
0x8e7 SWAP2
0x8e8 SSTORE
0x8e9 PUSH1 0x0
0x8eb DUP1
0x8ec SLOAD
0x8ed SWAP1
0x8ee SWAP2
0x8ef AND
0x8f0 PUSH20 0xb138c88ac13303d890873b2e86d3f2257fd2d1f1
0x905 OR
0x906 SWAP1
0x907 SSTORE
0x908 ADDRESS
0x909 PUSH1 0xa0
0x90b MSTORE
0x90c DUP2
0x90d MSTORE
0x90e PUSH1 0x5
0x910 PUSH1 0xc0
0x912 MSTORE
0x913 PUSH32 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x934 PUSH1 0xe0
0x936 MSTORE
0x937 PUSH1 0x0
0x939 DUP1
0x93a MLOAD
0x93b PUSH1 0x20
0x93d PUSH2 0x328
0x940 DUP4
0x941 CODECOPY
0x942 DUP2
0x943 MLOAD
0x944 SWAP2
0x945 MSTORE
0x946 SWAP1
0x947 DUP1
0x948 LOG1
0x949 PUSH1 0x1
0x94b SLOAD
0x94c PUSH1 0x40
0x94e MLOAD
0x94f PUSH1 0x1
0x951 PUSH1 0xa0
0x953 PUSH1 0x2
0x955 EXP
0x956 SUB
0x957 SWAP1
0x958 SWAP2
0x959 AND
0x95a SWAP1
0x95b PUSH8 0x16345785d8a0000
0x964 SWAP1
0x965 PUSH1 0x0
0x967 DUP2
0x968 DUP2
0x969 DUP2
0x96a DUP6
0x96b DUP8
0x96c GAS
0x96d CALL
0x96e SWAP3
0x96f POP
0x970 POP
0x971 POP
0x972 ISZERO
0x973 PUSH2 0x115
0x976 JUMPI
---
0x872: V631 = 0x0
0x875: REVERT 0x0 0x0
0x876: JUMPDEST 
0x878: V632 = 0x35
0x87b: V633 = 0x1d
0x87d: V634 = 0x0
0x87f: CODECOPY 0x0 0x1d 0x35
0x880: V635 = 0x0
0x882: RETURN 0x0 0x35
0x883: STOP 
0x884: V636 = 0x80
0x886: V637 = 0x40
0x888: M[0x40] = 0x80
0x889: V638 = 0x0
0x88c: REVERT 0x0 0x0
0x88d: STOP 
0x88e: LOG S0 S1 S2
0x88f: V639 = 0x627a7a723058
0x896: V640 = SHA3 0x627a7a723058 S3
0x897: CODECOPY V640 S4 S5
0x898: V641 = STATICCALL S6 S7 S8 S9 S10 S11
0x899: MISSING 0xb5
0x89a: V642 = TIMESTAMP
0x89b: MISSING 0xc9
0x89c: V643 = COINBASE
0x89d: V644 = EXTCODEHASH V643
0x89e: MISSING 0xf7
0x89f: MISSING 0xea
0x8a1: MISSING 0xef
0x8a2: MISSING 0xd4
0x8a3: MISSING 0xd8
0x8a4: MISSING 0xb3
0x8a5: V645 = 0xddbf9fa35952f5
0x8ad: MISSING 0xea
0x8ae: MISSING 0xe0
0x8af: V646 = 0x56e8874ba4a392002960
0x8bb: V647 = 0x40
0x8bf: M[0x40] = 0x56e8874ba4a392002960
0x8c0: V648 = 0x1
0x8c3: V649 = S[0x1]
0x8c4: V650 = 0x1
0x8c6: V651 = 0xa0
0x8c8: V652 = 0x2
0x8ca: V653 = EXP 0x2 0xa0
0x8cb: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8cc: V655 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8cf: V656 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V649
0x8d0: V657 = 0x5d0d76787d9d564061dd23f8209f804a3b8ad2f2
0x8e5: V658 = OR 0x5d0d76787d9d564061dd23f8209f804a3b8ad2f2 V656
0x8e8: S[0x1] = V658
0x8e9: V659 = 0x0
0x8ec: V660 = S[0x0]
0x8ef: V661 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V660
0x8f0: V662 = 0xb138c88ac13303d890873b2e86d3f2257fd2d1f1
0x905: V663 = OR 0xb138c88ac13303d890873b2e86d3f2257fd2d1f1 V661
0x907: S[0x0] = V663
0x908: V664 = ADDRESS
0x909: V665 = 0xa0
0x90b: M[0xa0] = V664
0x90d: M[0x56e8874ba4a392002960] = 0x40
0x90e: V666 = 0x5
0x910: V667 = 0xc0
0x912: M[0xc0] = 0x5
0x913: V668 = 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x934: V669 = 0xe0
0x936: M[0xe0] = 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x937: V670 = 0x0
0x93a: V671 = M[0x0]
0x93b: V672 = 0x20
0x93d: V673 = 0x328
0x941: CODECOPY 0x0 0x328 0x20
0x943: V674 = M[0x0]
0x945: M[0x0] = V671
0x948: LOG 0x56e8874ba4a392002960 0x56e8874ba4a392002960 V674
0x949: V675 = 0x1
0x94b: V676 = S[0x1]
0x94c: V677 = 0x40
0x94e: V678 = M[0x40]
0x94f: V679 = 0x1
0x951: V680 = 0xa0
0x953: V681 = 0x2
0x955: V682 = EXP 0x2 0xa0
0x956: V683 = SUB 0x10000000000000000000000000000000000000000 0x1
0x959: V684 = AND V676 0xffffffffffffffffffffffffffffffffffffffff
0x95b: V685 = 0x16345785d8a0000
0x965: V686 = 0x0
0x96c: V687 = GAS
0x96d: V688 = CALL V687 V684 0x16345785d8a0000 V678 0x0 V678 0x0
0x972: V689 = ISZERO V688
0x973: V690 = 0x115
0x976: THROWI V689
---
Entry stack: [V628]
Stack pops: 0
Stack additions: [V641, V642, V644, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, 0xddbf9fa35952f5, 0x56e8874ba4a392002960]
Exit stack: []

================================

Block 0x977
[0x977:0x9f7]
---
Predecessors: [0x872]
Successors: [0x9f8]
---
0x977 PUSH1 0x40
0x979 DUP1
0x97a MLOAD
0x97b ADDRESS
0x97c PUSH1 0x20
0x97e DUP3
0x97f ADD
0x980 MSTORE
0x981 DUP2
0x982 DUP2
0x983 MSTORE
0x984 PUSH1 0x5
0x986 DUP2
0x987 DUP4
0x988 ADD
0x989 MSTORE
0x98a PUSH32 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x9ab PUSH1 0x60
0x9ad DUP3
0x9ae ADD
0x9af MSTORE
0x9b0 SWAP1
0x9b1 MLOAD
0x9b2 PUSH1 0x0
0x9b4 DUP1
0x9b5 MLOAD
0x9b6 PUSH1 0x20
0x9b8 PUSH2 0x328
0x9bb DUP4
0x9bc CODECOPY
0x9bd DUP2
0x9be MLOAD
0x9bf SWAP2
0x9c0 MSTORE
0x9c1 SWAP2
0x9c2 DUP2
0x9c3 SWAP1
0x9c4 SUB
0x9c5 PUSH1 0x80
0x9c7 ADD
0x9c8 SWAP1
0x9c9 LOG1
0x9ca PUSH2 0x13f
0x9cd JUMP
0x9ce JUMPDEST
0x9cf PUSH1 0x40
0x9d1 MLOAD
0x9d2 PUSH32 0x4986001485a7ca10d447b20cbac163eb960d681d1165c3699897e22086f3c5d7
0x9f3 SWAP1
0x9f4 PUSH1 0x0
0x9f6 SWAP1
0x9f7 LOG1
---
0x977: V691 = 0x40
0x97a: V692 = M[0x40]
0x97b: V693 = ADDRESS
0x97c: V694 = 0x20
0x97f: V695 = ADD V692 0x20
0x980: M[V695] = V693
0x983: M[V692] = 0x40
0x984: V696 = 0x5
0x988: V697 = ADD 0x40 V692
0x989: M[V697] = 0x5
0x98a: V698 = 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x9ab: V699 = 0x60
0x9ae: V700 = ADD V692 0x60
0x9af: M[V700] = 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x9b1: V701 = M[0x40]
0x9b2: V702 = 0x0
0x9b5: V703 = M[0x0]
0x9b6: V704 = 0x20
0x9b8: V705 = 0x328
0x9bc: CODECOPY 0x0 0x328 0x20
0x9be: V706 = M[0x0]
0x9c0: M[0x0] = V703
0x9c4: V707 = SUB V692 V701
0x9c5: V708 = 0x80
0x9c7: V709 = ADD 0x80 V707
0x9c9: LOG V701 V709 V706
0x9ca: V710 = 0x13f
0x9cd: THROW 
0x9ce: JUMPDEST 
0x9cf: V711 = 0x40
0x9d1: V712 = M[0x40]
0x9d2: V713 = 0x4986001485a7ca10d447b20cbac163eb960d681d1165c3699897e22086f3c5d7
0x9f4: V714 = 0x0
0x9f7: LOG V712 0x0 0x4986001485a7ca10d447b20cbac163eb960d681d1165c3699897e22086f3c5d7
---
Entry stack: [0x56e8874ba4a392002960]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9f8
[0x9f8:0xa13]
---
Predecessors: [0x977]
Successors: [0xa14]
---
0x9f8 JUMPDEST
0x9f9 PUSH2 0x1da
0x9fc DUP1
0x9fd PUSH2 0x14e
0xa00 PUSH1 0x0
0xa02 CODECOPY
0xa03 PUSH1 0x0
0xa05 RETURN
0xa06 STOP
0xa07 PUSH1 0x80
0xa09 PUSH1 0x40
0xa0b MSTORE
0xa0c PUSH1 0x4
0xa0e CALLDATASIZE
0xa0f LT
0xa10 PUSH2 0x56
0xa13 JUMPI
---
0x9f8: JUMPDEST 
0x9f9: V715 = 0x1da
0x9fd: V716 = 0x14e
0xa00: V717 = 0x0
0xa02: CODECOPY 0x0 0x14e 0x1da
0xa03: V718 = 0x0
0xa05: RETURN 0x0 0x1da
0xa06: STOP 
0xa07: V719 = 0x80
0xa09: V720 = 0x40
0xa0b: M[0x40] = 0x80
0xa0c: V721 = 0x4
0xa0e: V722 = CALLDATASIZE
0xa0f: V723 = LT V722 0x4
0xa10: V724 = 0x56
0xa13: THROWI V723
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa14
[0xa14:0xa46]
---
Predecessors: [0x9f8]
Successors: [0xa47]
---
0xa14 PUSH4 0xffffffff
0xa19 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa37 PUSH1 0x0
0xa39 CALLDATALOAD
0xa3a DIV
0xa3b AND
0xa3c PUSH4 0x3ccfd60b
0xa41 DUP2
0xa42 EQ
0xa43 PUSH2 0x58
0xa46 JUMPI
---
0xa14: V725 = 0xffffffff
0xa19: V726 = 0x100000000000000000000000000000000000000000000000000000000
0xa37: V727 = 0x0
0xa39: V728 = CALLDATALOAD 0x0
0xa3a: V729 = DIV V728 0x100000000000000000000000000000000000000000000000000000000
0xa3b: V730 = AND V729 0xffffffff
0xa3c: V731 = 0x3ccfd60b
0xa42: V732 = EQ V730 0x3ccfd60b
0xa43: V733 = 0x58
0xa46: THROWI V732
---
Entry stack: []
Stack pops: 0
Stack additions: [V730]
Exit stack: [V730]

================================

Block 0xa47
[0xa47:0xa51]
---
Predecessors: [0xa14]
Successors: [0xa52]
---
0xa47 DUP1
0xa48 PUSH4 0x83197ef0
0xa4d EQ
0xa4e PUSH2 0x6d
0xa51 JUMPI
---
0xa48: V734 = 0x83197ef0
0xa4d: V735 = EQ 0x83197ef0 V730
0xa4e: V736 = 0x6d
0xa51: THROWI V735
---
Entry stack: [V730]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V730]

================================

Block 0xa52
[0xa52:0xa5c]
---
Predecessors: [0xa47]
Successors: [0xa5d]
---
0xa52 DUP1
0xa53 PUSH4 0x8dc48fcd
0xa58 EQ
0xa59 PUSH2 0x82
0xa5c JUMPI
---
0xa53: V737 = 0x8dc48fcd
0xa58: V738 = EQ 0x8dc48fcd V730
0xa59: V739 = 0x82
0xa5c: THROWI V738
---
Entry stack: [V730]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V730]

================================

Block 0xa5d
[0xa5d:0xa66]
---
Predecessors: [0xa52]
Successors: [0xa67]
---
0xa5d JUMPDEST
0xa5e STOP
0xa5f JUMPDEST
0xa60 CALLVALUE
0xa61 DUP1
0xa62 ISZERO
0xa63 PUSH2 0x64
0xa66 JUMPI
---
0xa5d: JUMPDEST 
0xa5e: STOP 
0xa5f: JUMPDEST 
0xa60: V740 = CALLVALUE
0xa62: V741 = ISZERO V740
0xa63: V742 = 0x64
0xa66: THROWI V741
---
Entry stack: [V730]
Stack pops: 0
Stack additions: [V740]
Exit stack: []

================================

Block 0xa67
[0xa67:0xa7b]
---
Predecessors: [0xa5d]
Successors: [0xa7c]
---
0xa67 PUSH1 0x0
0xa69 DUP1
0xa6a REVERT
0xa6b JUMPDEST
0xa6c POP
0xa6d PUSH2 0x56
0xa70 PUSH2 0x97
0xa73 JUMP
0xa74 JUMPDEST
0xa75 CALLVALUE
0xa76 DUP1
0xa77 ISZERO
0xa78 PUSH2 0x79
0xa7b JUMPI
---
0xa67: V743 = 0x0
0xa6a: REVERT 0x0 0x0
0xa6b: JUMPDEST 
0xa6d: V744 = 0x56
0xa70: V745 = 0x97
0xa73: THROW 
0xa74: JUMPDEST 
0xa75: V746 = CALLVALUE
0xa77: V747 = ISZERO V746
0xa78: V748 = 0x79
0xa7b: THROWI V747
---
Entry stack: [V740]
Stack pops: 0
Stack additions: [0x56, V746]
Exit stack: []

================================

Block 0xa7c
[0xa7c:0xa90]
---
Predecessors: [0xa67]
Successors: [0xa91]
---
0xa7c PUSH1 0x0
0xa7e DUP1
0xa7f REVERT
0xa80 JUMPDEST
0xa81 POP
0xa82 PUSH2 0x56
0xa85 PUSH2 0xec
0xa88 JUMP
0xa89 JUMPDEST
0xa8a CALLVALUE
0xa8b DUP1
0xa8c ISZERO
0xa8d PUSH2 0x8e
0xa90 JUMPI
---
0xa7c: V749 = 0x0
0xa7f: REVERT 0x0 0x0
0xa80: JUMPDEST 
0xa82: V750 = 0x56
0xa85: V751 = 0xec
0xa88: THROW 
0xa89: JUMPDEST 
0xa8a: V752 = CALLVALUE
0xa8c: V753 = ISZERO V752
0xa8d: V754 = 0x8e
0xa90: THROWI V753
---
Entry stack: [V746]
Stack pops: 0
Stack additions: [0x56, V752]
Exit stack: []

================================

Block 0xa91
[0xa91:0xab0]
---
Predecessors: [0xa7c]
Successors: [0xab1]
---
0xa91 PUSH1 0x0
0xa93 DUP1
0xa94 REVERT
0xa95 JUMPDEST
0xa96 POP
0xa97 PUSH2 0x56
0xa9a PUSH2 0x111
0xa9d JUMP
0xa9e JUMPDEST
0xa9f PUSH1 0x0
0xaa1 SLOAD
0xaa2 PUSH1 0x1
0xaa4 PUSH1 0xa0
0xaa6 PUSH1 0x2
0xaa8 EXP
0xaa9 SUB
0xaaa AND
0xaab CALLER
0xaac EQ
0xaad PUSH2 0xae
0xab0 JUMPI
---
0xa91: V755 = 0x0
0xa94: REVERT 0x0 0x0
0xa95: JUMPDEST 
0xa97: V756 = 0x56
0xa9a: V757 = 0x111
0xa9d: THROW 
0xa9e: JUMPDEST 
0xa9f: V758 = 0x0
0xaa1: V759 = S[0x0]
0xaa2: V760 = 0x1
0xaa4: V761 = 0xa0
0xaa6: V762 = 0x2
0xaa8: V763 = EXP 0x2 0xa0
0xaa9: V764 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaaa: V765 = AND 0xffffffffffffffffffffffffffffffffffffffff V759
0xaab: V766 = CALLER
0xaac: V767 = EQ V766 V765
0xaad: V768 = 0xae
0xab0: THROWI V767
---
Entry stack: [V752]
Stack pops: 0
Stack additions: [0x56]
Exit stack: []

================================

Block 0xab1
[0xab1:0xae6]
---
Predecessors: [0xa91]
Successors: [0xae7]
---
0xab1 PUSH1 0x0
0xab3 DUP1
0xab4 REVERT
0xab5 JUMPDEST
0xab6 PUSH1 0x0
0xab8 DUP1
0xab9 SLOAD
0xaba PUSH1 0x40
0xabc MLOAD
0xabd PUSH1 0x1
0xabf PUSH1 0xa0
0xac1 PUSH1 0x2
0xac3 EXP
0xac4 SUB
0xac5 SWAP1
0xac6 SWAP2
0xac7 AND
0xac8 SWAP2
0xac9 ADDRESS
0xaca BALANCE
0xacb DUP1
0xacc ISZERO
0xacd PUSH2 0x8fc
0xad0 MUL
0xad1 SWAP3
0xad2 SWAP1
0xad3 SWAP2
0xad4 DUP2
0xad5 DUP2
0xad6 DUP2
0xad7 DUP6
0xad8 DUP9
0xad9 DUP9
0xada CALL
0xadb SWAP4
0xadc POP
0xadd POP
0xade POP
0xadf POP
0xae0 ISZERO
0xae1 DUP1
0xae2 ISZERO
0xae3 PUSH2 0xe9
0xae6 JUMPI
---
0xab1: V769 = 0x0
0xab4: REVERT 0x0 0x0
0xab5: JUMPDEST 
0xab6: V770 = 0x0
0xab9: V771 = S[0x0]
0xaba: V772 = 0x40
0xabc: V773 = M[0x40]
0xabd: V774 = 0x1
0xabf: V775 = 0xa0
0xac1: V776 = 0x2
0xac3: V777 = EXP 0x2 0xa0
0xac4: V778 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac7: V779 = AND V771 0xffffffffffffffffffffffffffffffffffffffff
0xac9: V780 = ADDRESS
0xaca: V781 = BALANCE V780
0xacc: V782 = ISZERO V781
0xacd: V783 = 0x8fc
0xad0: V784 = MUL 0x8fc V782
0xada: V785 = CALL V784 V779 V781 V773 0x0 V773 0x0
0xae0: V786 = ISZERO V785
0xae2: V787 = ISZERO V786
0xae3: V788 = 0xe9
0xae6: THROWI V787
---
Entry stack: []
Stack pops: 0
Stack additions: [V786]
Exit stack: []

================================

Block 0xae7
[0xae7:0xb05]
---
Predecessors: [0xab1]
Successors: [0xb06]
---
0xae7 RETURNDATASIZE
0xae8 PUSH1 0x0
0xaea DUP1
0xaeb RETURNDATACOPY
0xaec RETURNDATASIZE
0xaed PUSH1 0x0
0xaef REVERT
0xaf0 JUMPDEST
0xaf1 POP
0xaf2 JUMP
0xaf3 JUMPDEST
0xaf4 PUSH1 0x0
0xaf6 SLOAD
0xaf7 PUSH1 0x1
0xaf9 PUSH1 0xa0
0xafb PUSH1 0x2
0xafd EXP
0xafe SUB
0xaff AND
0xb00 CALLER
0xb01 EQ
0xb02 PUSH2 0x103
0xb05 JUMPI
---
0xae7: V789 = RETURNDATASIZE
0xae8: V790 = 0x0
0xaeb: RETURNDATACOPY 0x0 0x0 V789
0xaec: V791 = RETURNDATASIZE
0xaed: V792 = 0x0
0xaef: REVERT 0x0 V791
0xaf0: JUMPDEST 
0xaf2: JUMP S1
0xaf3: JUMPDEST 
0xaf4: V793 = 0x0
0xaf6: V794 = S[0x0]
0xaf7: V795 = 0x1
0xaf9: V796 = 0xa0
0xafb: V797 = 0x2
0xafd: V798 = EXP 0x2 0xa0
0xafe: V799 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaff: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V794
0xb00: V801 = CALLER
0xb01: V802 = EQ V801 V800
0xb02: V803 = 0x103
0xb05: THROWI V802
---
Entry stack: [V786]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb06
[0xb06:0xb2a]
---
Predecessors: [0xae7]
Successors: [0xb2b]
---
0xb06 PUSH1 0x0
0xb08 DUP1
0xb09 REVERT
0xb0a JUMPDEST
0xb0b PUSH1 0x0
0xb0d SLOAD
0xb0e PUSH1 0x1
0xb10 PUSH1 0xa0
0xb12 PUSH1 0x2
0xb14 EXP
0xb15 SUB
0xb16 AND
0xb17 SELFDESTRUCT
0xb18 JUMPDEST
0xb19 PUSH1 0x0
0xb1b SLOAD
0xb1c PUSH1 0x1
0xb1e PUSH1 0xa0
0xb20 PUSH1 0x2
0xb22 EXP
0xb23 SUB
0xb24 AND
0xb25 CALLER
0xb26 EQ
0xb27 PUSH2 0x128
0xb2a JUMPI
---
0xb06: V804 = 0x0
0xb09: REVERT 0x0 0x0
0xb0a: JUMPDEST 
0xb0b: V805 = 0x0
0xb0d: V806 = S[0x0]
0xb0e: V807 = 0x1
0xb10: V808 = 0xa0
0xb12: V809 = 0x2
0xb14: V810 = EXP 0x2 0xa0
0xb15: V811 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb16: V812 = AND 0xffffffffffffffffffffffffffffffffffffffff V806
0xb17: SELFDESTRUCT V812
0xb18: JUMPDEST 
0xb19: V813 = 0x0
0xb1b: V814 = S[0x0]
0xb1c: V815 = 0x1
0xb1e: V816 = 0xa0
0xb20: V817 = 0x2
0xb22: V818 = EXP 0x2 0xa0
0xb23: V819 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb24: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0xb25: V821 = CALLER
0xb26: V822 = EQ V821 V820
0xb27: V823 = 0x128
0xb2a: THROWI V822
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb2b
[0xb2b:0xb96]
---
Predecessors: [0xb06]
Successors: [0xb97]
---
0xb2b PUSH1 0x0
0xb2d DUP1
0xb2e REVERT
0xb2f JUMPDEST
0xb30 PUSH1 0x1
0xb32 PUSH1 0x0
0xb34 SWAP1
0xb35 SLOAD
0xb36 SWAP1
0xb37 PUSH2 0x100
0xb3a EXP
0xb3b SWAP1
0xb3c DIV
0xb3d PUSH1 0x1
0xb3f PUSH1 0xa0
0xb41 PUSH1 0x2
0xb43 EXP
0xb44 SUB
0xb45 AND
0xb46 PUSH1 0x1
0xb48 PUSH1 0xa0
0xb4a PUSH1 0x2
0xb4c EXP
0xb4d SUB
0xb4e AND
0xb4f PUSH4 0x3ccfd60b
0xb54 PUSH1 0x40
0xb56 MLOAD
0xb57 DUP2
0xb58 PUSH4 0xffffffff
0xb5d AND
0xb5e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb7c MUL
0xb7d DUP2
0xb7e MSTORE
0xb7f PUSH1 0x4
0xb81 ADD
0xb82 PUSH1 0x0
0xb84 PUSH1 0x40
0xb86 MLOAD
0xb87 DUP1
0xb88 DUP4
0xb89 SUB
0xb8a DUP2
0xb8b PUSH1 0x0
0xb8d DUP8
0xb8e DUP1
0xb8f EXTCODESIZE
0xb90 ISZERO
0xb91 DUP1
0xb92 ISZERO
0xb93 PUSH2 0x194
0xb96 JUMPI
---
0xb2b: V824 = 0x0
0xb2e: REVERT 0x0 0x0
0xb2f: JUMPDEST 
0xb30: V825 = 0x1
0xb32: V826 = 0x0
0xb35: V827 = S[0x1]
0xb37: V828 = 0x100
0xb3a: V829 = EXP 0x100 0x0
0xb3c: V830 = DIV V827 0x1
0xb3d: V831 = 0x1
0xb3f: V832 = 0xa0
0xb41: V833 = 0x2
0xb43: V834 = EXP 0x2 0xa0
0xb44: V835 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb45: V836 = AND 0xffffffffffffffffffffffffffffffffffffffff V830
0xb46: V837 = 0x1
0xb48: V838 = 0xa0
0xb4a: V839 = 0x2
0xb4c: V840 = EXP 0x2 0xa0
0xb4d: V841 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4e: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V836
0xb4f: V843 = 0x3ccfd60b
0xb54: V844 = 0x40
0xb56: V845 = M[0x40]
0xb58: V846 = 0xffffffff
0xb5d: V847 = AND 0xffffffff 0x3ccfd60b
0xb5e: V848 = 0x100000000000000000000000000000000000000000000000000000000
0xb7c: V849 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0xb7e: M[V845] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xb7f: V850 = 0x4
0xb81: V851 = ADD 0x4 V845
0xb82: V852 = 0x0
0xb84: V853 = 0x40
0xb86: V854 = M[0x40]
0xb89: V855 = SUB V851 V854
0xb8b: V856 = 0x0
0xb8f: V857 = EXTCODESIZE V842
0xb90: V858 = ISZERO V857
0xb92: V859 = ISZERO V858
0xb93: V860 = 0x194
0xb96: THROWI V859
---
Entry stack: []
Stack pops: 0
Stack additions: [V858, V842, 0x0, V854, V855, V854, 0x0, V851, 0x3ccfd60b, V842]
Exit stack: []

================================

Block 0xb97
[0xb97:0xba5]
---
Predecessors: [0xb2b]
Successors: [0xba6]
---
0xb97 PUSH1 0x0
0xb99 DUP1
0xb9a REVERT
0xb9b JUMPDEST
0xb9c POP
0xb9d GAS
0xb9e CALL
0xb9f ISZERO
0xba0 DUP1
0xba1 ISZERO
0xba2 PUSH2 0x1a8
0xba5 JUMPI
---
0xb97: V861 = 0x0
0xb9a: REVERT 0x0 0x0
0xb9b: JUMPDEST 
0xb9d: V862 = GAS
0xb9e: V863 = CALL V862 S1 S2 S3 S4 S5 S6
0xb9f: V864 = ISZERO V863
0xba1: V865 = ISZERO V864
0xba2: V866 = 0x1a8
0xba5: THROWI V865
---
Entry stack: [V842, 0x3ccfd60b, V851, 0x0, V854, V855, V854, 0x0, V842, V858]
Stack pops: 0
Stack additions: [V864]
Exit stack: []

================================

Block 0xba6
[0xba6:0xc3c]
---
Predecessors: [0xb97]
Successors: []
---
0xba6 RETURNDATASIZE
0xba7 PUSH1 0x0
0xba9 DUP1
0xbaa RETURNDATACOPY
0xbab RETURNDATASIZE
0xbac PUSH1 0x0
0xbae REVERT
0xbaf JUMPDEST
0xbb0 POP
0xbb1 POP
0xbb2 POP
0xbb3 POP
0xbb4 JUMP
0xbb5 STOP
0xbb6 LOG1
0xbb7 PUSH6 0x627a7a723058
0xbbe SHA3
0xbbf ADD
0xbc0 MISSING 0xa6
0xbc1 MISSING 0xe1
0xbc2 DELEGATECALL
0xbc3 MISSING 0x4f
0xbc4 MISSING 0xd0
0xbc5 NOT
0xbc6 MISSING 0xe8
0xbc7 MUL
0xbc8 MISSING 0x22
0xbc9 EXTCODEHASH
0xbca EQ
0xbcb MISSING 0xe1
0xbcc DUP4
0xbcd MISSING 0x4e
0xbce MISSING 0xc4
0xbcf MISSING 0x4b
0xbd0 MISSING 0xfb
0xbd1 PUSH19 0x238d62b4f12a6e6065ef11145700292057896c
0xbe5 MISSING 0xc0
0xbe6 SWAP9
0xbe7 PUSH9 0x316964a1f6a8b6b2e6
0xbf1 MISSING 0x48
0xbf2 CALLCODE
0xbf3 MSTORE8
0xbf4 MISSING 0x29
0xbf5 PC
0xbf6 PUSH16 0xebe87cda8248e4f37da5a165627a7a72
0xc07 ADDRESS
0xc08 PC
0xc09 SHA3
0xc0a MISSING 0xb8
0xc0b MISSING 0x1f
0xc0c MISSING 0xe4
0xc0d MISSING 0xe3
0xc0e SGT
0xc0f MISSING 0x21
0xc10 GASPRICE
0xc11 MUL
0xc12 MISSING 0xe3
0xc13 MISSING 0xb2
0xc14 MISSING 0x2b
0xc15 AND
0xc16 MISSING 0xf
0xc17 STOP
0xc18 MISSING 0xd3
0xc19 DUP9
0xc1a SWAP4
0xc1b MISSING 0xd4
0xc1c PC
0xc1d SSTORE
0xc1e LOG3
0xc1f MISSING 0x2a
0xc20 PUSH28 0xae0bd8e0b0def2f8cd0029
---
0xba6: V867 = RETURNDATASIZE
0xba7: V868 = 0x0
0xbaa: RETURNDATACOPY 0x0 0x0 V867
0xbab: V869 = RETURNDATASIZE
0xbac: V870 = 0x0
0xbae: REVERT 0x0 V869
0xbaf: JUMPDEST 
0xbb4: JUMP S4
0xbb5: STOP 
0xbb6: LOG S0 S1 S2
0xbb7: V871 = 0x627a7a723058
0xbbe: V872 = SHA3 0x627a7a723058 S3
0xbbf: V873 = ADD V872 S4
0xbc0: MISSING 0xa6
0xbc1: MISSING 0xe1
0xbc2: V874 = DELEGATECALL S0 S1 S2 S3 S4 S5
0xbc3: MISSING 0x4f
0xbc4: MISSING 0xd0
0xbc5: V875 = NOT S0
0xbc6: MISSING 0xe8
0xbc7: V876 = MUL S0 S1
0xbc8: MISSING 0x22
0xbc9: V877 = EXTCODEHASH S0
0xbca: V878 = EQ V877 S1
0xbcb: MISSING 0xe1
0xbcd: MISSING 0x4e
0xbce: MISSING 0xc4
0xbcf: MISSING 0x4b
0xbd0: MISSING 0xfb
0xbd1: V879 = 0x238d62b4f12a6e6065ef11145700292057896c
0xbe5: MISSING 0xc0
0xbe7: V880 = 0x316964a1f6a8b6b2e6
0xbf1: MISSING 0x48
0xbf2: V881 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xbf3: M8[V881] = S7
0xbf4: MISSING 0x29
0xbf5: V882 = PC
0xbf6: V883 = 0xebe87cda8248e4f37da5a165627a7a72
0xc07: V884 = ADDRESS
0xc08: V885 = PC
0xc09: V886 = SHA3 V885 V884
0xc0a: MISSING 0xb8
0xc0b: MISSING 0x1f
0xc0c: MISSING 0xe4
0xc0d: MISSING 0xe3
0xc0e: V887 = SGT S0 S1
0xc0f: MISSING 0x21
0xc10: V888 = GASPRICE
0xc11: V889 = MUL V888 S0
0xc12: MISSING 0xe3
0xc13: MISSING 0xb2
0xc14: MISSING 0x2b
0xc15: V890 = AND S0 S1
0xc16: MISSING 0xf
0xc17: STOP 
0xc18: MISSING 0xd3
0xc1b: MISSING 0xd4
0xc1c: V891 = PC
0xc1d: S[V891] = S0
0xc1e: LOG S1 S2 S3 S4 S5
0xc1f: MISSING 0x2a
0xc20: V892 = 0xae0bd8e0b0def2f8cd0029
---
Entry stack: [V864]
Stack pops: 0
Stack additions: [V873, V874, V875, V876, V878, S3, S0, S1, S2, S3, 0x238d62b4f12a6e6065ef11145700292057896c, 0x316964a1f6a8b6b2e6, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V886, 0xebe87cda8248e4f37da5a165627a7a72, V882, V887, V889, V890, S3, S0, S1, S2, S8, S4, S5, S6, S7, S8, 0xae0bd8e0b0def2f8cd0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x6b, 0x6f, 0xd1, 0xe4, 0xe8, 0x119, 0x122

Function 1:
Public function signature: 0x83197ef0
Entry block: 0x78
Exit block: 0x138
Body: 0x78, 0x80, 0x84, 0x125, 0x138, 0x13c

Function 2:
Public function signature: 0xbdf3390e
Entry block: 0x8d
Exit block: 0x95
Body: 0x8d, 0x95, 0x99, 0xa2

Function 3:
Public function signature: 0xc2381296
Entry block: 0xc9
Exit block: 0x76c
Body: 0x61, 0xc9, 0x6f4, 0x70e, 0x712, 0x71a, 0x737, 0x740, 0x745, 0x749, 0x752, 0x759, 0x76c, 0x775, 0x7b8, 0x823, 0x836, 0x83f, 0x847, 0x856

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

Function 5:
Private function
Entry block: 0x14a
Exit block: 0x6e3
Body: 0x14a, 0x176, 0x22a, 0x233, 0x249, 0x2d8, 0x2ec, 0x302, 0x30b, 0x313, 0x365, 0x36e, 0x384, 0x3ba, 0x40e, 0x417, 0x42d, 0x463, 0x49a, 0x4a3, 0x4b9, 0x52c, 0x61a, 0x623, 0x639, 0x67d, 0x6de, 0x6e3

