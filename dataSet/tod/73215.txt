Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x66]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x66
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x66
0xa: JUMPI 0x66 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x68]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH3 0x5c33e1
0x1e DUP2
0x1f EQ
0x20 PUSH2 0x68
0x23 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x5c33e1
0x1f: V14 = EQ V12 0x5c33e1
0x20: V15 = 0x68
0x23: JUMPI 0x68 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0xb]
Successors: [0x2f, 0x72]
---
0x24 DUP1
0x25 PUSH4 0x41c0e1b5
0x2a EQ
0x2b PUSH2 0x72
0x2e JUMPI
---
0x25: V16 = 0x41c0e1b5
0x2a: V17 = EQ 0x41c0e1b5 V12
0x2b: V18 = 0x72
0x2e: JUMPI 0x72 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x84]
---
0x2f DUP1
0x30 PUSH4 0x6f64234e
0x35 EQ
0x36 PUSH2 0x84
0x39 JUMPI
---
0x30: V19 = 0x6f64234e
0x35: V20 = EQ 0x6f64234e V12
0x36: V21 = 0x84
0x39: JUMPI 0x84 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0xa5]
---
0x3a DUP1
0x3b PUSH4 0x8918485b
0x40 EQ
0x41 PUSH2 0xa5
0x44 JUMPI
---
0x3b: V22 = 0x8918485b
0x40: V23 = EQ 0x8918485b V12
0x41: V24 = 0xa5
0x44: JUMPI 0xa5 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x45
[0x45:0x4f]
---
Predecessors: [0x3a]
Successors: [0x50, 0xc3]
---
0x45 DUP1
0x46 PUSH4 0x8da5cb5b
0x4b EQ
0x4c PUSH2 0xc3
0x4f JUMPI
---
0x46: V25 = 0x8da5cb5b
0x4b: V26 = EQ 0x8da5cb5b V12
0x4c: V27 = 0xc3
0x4f: JUMPI 0xc3 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0x45]
Successors: [0x5b, 0xef]
---
0x50 DUP1
0x51 PUSH4 0xa6f9dae1
0x56 EQ
0x57 PUSH2 0xef
0x5a JUMPI
---
0x51: V28 = 0xa6f9dae1
0x56: V29 = EQ 0xa6f9dae1 V12
0x57: V30 = 0xef
0x5a: JUMPI 0xef V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5b
[0x5b:0x65]
---
Predecessors: [0x50]
Successors: [0x66, 0x10d]
---
0x5b DUP1
0x5c PUSH4 0xe2e7ab3a
0x61 EQ
0x62 PUSH2 0x10d
0x65 JUMPI
---
0x5c: V31 = 0xe2e7ab3a
0x61: V32 = EQ 0xe2e7ab3a V12
0x62: V33 = 0x10d
0x65: JUMPI 0x10d V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0x0, 0x5b]
Successors: []
---
0x66 JUMPDEST
0x67 INVALID
---
0x66: JUMPDEST 
0x67: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68
[0x68:0x6f]
---
Predecessors: [0xb]
Successors: [0x12b]
---
0x68 JUMPDEST
0x69 PUSH2 0x70
0x6c PUSH2 0x12b
0x6f JUMP
---
0x68: JUMPDEST 
0x69: V34 = 0x70
0x6c: V35 = 0x12b
0x6f: JUMP 0x12b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70]
Exit stack: [V12, 0x70]

================================

Block 0x70
[0x70:0x71]
---
Predecessors: [0x148, 0x1d7, 0x22a, 0x28b, 0x2dd]
Successors: []
---
0x70 JUMPDEST
0x71 STOP
---
0x70: JUMPDEST 
0x71: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x72
[0x72:0x78]
---
Predecessors: [0x24]
Successors: [0x79, 0x7a]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 ISZERO
0x75 PUSH2 0x7a
0x78 JUMPI
---
0x72: JUMPDEST 
0x73: V36 = CALLVALUE
0x74: V37 = ISZERO V36
0x75: V38 = 0x7a
0x78: JUMPI 0x7a V37
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x79
[0x79:0x79]
---
Predecessors: [0x72]
Successors: []
---
0x79 INVALID
---
0x79: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0x72]
Successors: [0x14a]
---
0x7a JUMPDEST
0x7b PUSH2 0x70
0x7e PUSH2 0x14a
0x81 JUMP
---
0x7a: JUMPDEST 
0x7b: V39 = 0x70
0x7e: V40 = 0x14a
0x81: JUMP 0x14a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70]
Exit stack: [V12, 0x70]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: []
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x84
[0x84:0x8a]
---
Predecessors: [0x2f]
Successors: [0x8b, 0x8c]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 ISZERO
0x87 PUSH2 0x8c
0x8a JUMPI
---
0x84: JUMPDEST 
0x85: V41 = CALLVALUE
0x86: V42 = ISZERO V41
0x87: V43 = 0x8c
0x8a: JUMPI 0x8c V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x84]
Successors: []
---
0x8b INVALID
---
0x8b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0xa2]
---
Predecessors: [0x84]
Successors: [0x172]
---
0x8c JUMPDEST
0x8d PUSH2 0x70
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 PUSH1 0x4
0x9a CALLDATALOAD
0x9b AND
0x9c PUSH1 0x24
0x9e CALLDATALOAD
0x9f PUSH2 0x172
0xa2 JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x70
0x90: V45 = 0x1
0x92: V46 = 0xa0
0x94: V47 = 0x2
0x96: V48 = EXP 0x2 0xa0
0x97: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98: V50 = 0x4
0x9a: V51 = CALLDATALOAD 0x4
0x9b: V52 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V53 = 0x24
0x9e: V54 = CALLDATALOAD 0x24
0x9f: V55 = 0x172
0xa2: JUMP 0x172
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70, V52, V54]
Exit stack: [V12, 0x70, V52, V54]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: []
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x3a]
Successors: [0xac, 0xad]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xad
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V56 = CALLVALUE
0xa7: V57 = ISZERO V56
0xa8: V58 = 0xad
0xab: JUMPI 0xad V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac
[0xac:0xac]
---
Predecessors: [0xa5]
Successors: []
---
0xac INVALID
---
0xac: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xad
[0xad:0xc0]
---
Predecessors: [0xa5]
Successors: [0x1db]
---
0xad JUMPDEST
0xae PUSH2 0x70
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 PUSH1 0x4
0xbb CALLDATALOAD
0xbc AND
0xbd PUSH2 0x1db
0xc0 JUMP
---
0xad: JUMPDEST 
0xae: V59 = 0x70
0xb1: V60 = 0x1
0xb3: V61 = 0xa0
0xb5: V62 = 0x2
0xb7: V63 = EXP 0x2 0xa0
0xb8: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V65 = 0x4
0xbb: V66 = CALLDATALOAD 0x4
0xbc: V67 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xbd: V68 = 0x1db
0xc0: JUMP 0x1db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70, V67]
Exit stack: [V12, 0x70, V67]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: []
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc3
[0xc3:0xc9]
---
Predecessors: [0x45]
Successors: [0xca, 0xcb]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 ISZERO
0xc6 PUSH2 0xcb
0xc9 JUMPI
---
0xc3: JUMPDEST 
0xc4: V69 = CALLVALUE
0xc5: V70 = ISZERO V69
0xc6: V71 = 0xcb
0xc9: JUMPI 0xcb V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xca
[0xca:0xca]
---
Predecessors: [0xc3]
Successors: []
---
0xca INVALID
---
0xca: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0xc3]
Successors: [0x22d]
---
0xcb JUMPDEST
0xcc PUSH2 0xd3
0xcf PUSH2 0x22d
0xd2 JUMP
---
0xcb: JUMPDEST 
0xcc: V72 = 0xd3
0xcf: V73 = 0x22d
0xd2: JUMP 0x22d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V12, 0xd3]

================================

Block 0xd3
[0xd3:0xee]
---
Predecessors: [0x22d]
Successors: []
---
0xd3 JUMPDEST
0xd4 PUSH1 0x40
0xd6 DUP1
0xd7 MLOAD
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 SWAP1
0xe1 SWAP3
0xe2 AND
0xe3 DUP3
0xe4 MSTORE
0xe5 MLOAD
0xe6 SWAP1
0xe7 DUP2
0xe8 SWAP1
0xe9 SUB
0xea PUSH1 0x20
0xec ADD
0xed SWAP1
0xee RETURN
---
0xd3: JUMPDEST 
0xd4: V74 = 0x40
0xd7: V75 = M[0x40]
0xd8: V76 = 0x1
0xda: V77 = 0xa0
0xdc: V78 = 0x2
0xde: V79 = EXP 0x2 0xa0
0xdf: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V81 = AND V239 0xffffffffffffffffffffffffffffffffffffffff
0xe4: M[V75] = V81
0xe5: V82 = M[0x40]
0xe9: V83 = SUB V75 V82
0xea: V84 = 0x20
0xec: V85 = ADD 0x20 V83
0xee: RETURN V82 V85
---
Entry stack: [V12, 0xd3, V239]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd3]

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0x50]
Successors: [0xf6, 0xf7]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xf7
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V86 = CALLVALUE
0xf1: V87 = ISZERO V86
0xf2: V88 = 0xf7
0xf5: JUMPI 0xf7 V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xf6]
---
Predecessors: [0xef]
Successors: []
---
0xf6 INVALID
---
0xf6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0x10a]
---
Predecessors: [0xef]
Successors: [0x23c]
---
0xf7 JUMPDEST
0xf8 PUSH2 0x70
0xfb PUSH1 0x1
0xfd PUSH1 0xa0
0xff PUSH1 0x2
0x101 EXP
0x102 SUB
0x103 PUSH1 0x4
0x105 CALLDATALOAD
0x106 AND
0x107 PUSH2 0x23c
0x10a JUMP
---
0xf7: JUMPDEST 
0xf8: V89 = 0x70
0xfb: V90 = 0x1
0xfd: V91 = 0xa0
0xff: V92 = 0x2
0x101: V93 = EXP 0x2 0xa0
0x102: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x103: V95 = 0x4
0x105: V96 = CALLDATALOAD 0x4
0x106: V97 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x107: V98 = 0x23c
0x10a: JUMP 0x23c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70, V97]
Exit stack: [V12, 0x70, V97]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: []
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10d
[0x10d:0x113]
---
Predecessors: [0x5b]
Successors: [0x114, 0x115]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f ISZERO
0x110 PUSH2 0x115
0x113 JUMPI
---
0x10d: JUMPDEST 
0x10e: V99 = CALLVALUE
0x10f: V100 = ISZERO V99
0x110: V101 = 0x115
0x113: JUMPI 0x115 V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x114
[0x114:0x114]
---
Predecessors: [0x10d]
Successors: []
---
0x114 INVALID
---
0x114: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x115
[0x115:0x128]
---
Predecessors: [0x10d]
Successors: [0x28e]
---
0x115 JUMPDEST
0x116 PUSH2 0x70
0x119 PUSH1 0x1
0x11b PUSH1 0xa0
0x11d PUSH1 0x2
0x11f EXP
0x120 SUB
0x121 PUSH1 0x4
0x123 CALLDATALOAD
0x124 AND
0x125 PUSH2 0x28e
0x128 JUMP
---
0x115: JUMPDEST 
0x116: V102 = 0x70
0x119: V103 = 0x1
0x11b: V104 = 0xa0
0x11d: V105 = 0x2
0x11f: V106 = EXP 0x2 0xa0
0x120: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x121: V108 = 0x4
0x123: V109 = CALLDATALOAD 0x4
0x124: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x125: V111 = 0x28e
0x128: JUMP 0x28e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70, V110]
Exit stack: [V12, 0x70, V110]

================================

Block 0x129
[0x129:0x12a]
---
Predecessors: []
Successors: []
---
0x129 JUMPDEST
0x12a STOP
---
0x129: JUMPDEST 
0x12a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12b
[0x12b:0x141]
---
Predecessors: [0x68]
Successors: [0x142, 0x147]
---
0x12b JUMPDEST
0x12c PUSH1 0x2
0x12e SLOAD
0x12f CALLER
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 SWAP1
0x139 DUP2
0x13a AND
0x13b SWAP2
0x13c AND
0x13d EQ
0x13e PUSH2 0x147
0x141 JUMPI
---
0x12b: JUMPDEST 
0x12c: V112 = 0x2
0x12e: V113 = S[0x2]
0x12f: V114 = CALLER
0x130: V115 = 0x1
0x132: V116 = 0xa0
0x134: V117 = 0x2
0x136: V118 = EXP 0x2 0xa0
0x137: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x13c: V121 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x13d: V122 = EQ V121 V120
0x13e: V123 = 0x147
0x141: JUMPI 0x147 V122
---
Entry stack: [V12, 0x70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70]

================================

Block 0x142
[0x142:0x146]
---
Predecessors: [0x12b]
Successors: []
---
0x142 PUSH1 0x0
0x144 PUSH1 0x0
0x146 REVERT
---
0x142: V124 = 0x0
0x144: V125 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V12, 0x70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70]

================================

Block 0x147
[0x147:0x147]
---
Predecessors: [0x12b, 0x14a]
Successors: [0x148]
---
0x147 JUMPDEST
---
0x147: JUMPDEST 
---
Entry stack: [V12, 0x70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70]

================================

Block 0x148
[0x148:0x149]
---
Predecessors: [0x147]
Successors: [0x70]
---
0x148 JUMPDEST
0x149 JUMP
---
0x148: JUMPDEST 
0x149: JUMP 0x70
---
Entry stack: [V12, 0x70]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x14a
[0x14a:0x161]
---
Predecessors: [0x7a]
Successors: [0x147, 0x162]
---
0x14a JUMPDEST
0x14b PUSH1 0x0
0x14d SLOAD
0x14e CALLER
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 SWAP1
0x158 DUP2
0x159 AND
0x15a SWAP2
0x15b AND
0x15c EQ
0x15d ISZERO
0x15e PUSH2 0x147
0x161 JUMPI
---
0x14a: JUMPDEST 
0x14b: V126 = 0x0
0x14d: V127 = S[0x0]
0x14e: V128 = CALLER
0x14f: V129 = 0x1
0x151: V130 = 0xa0
0x153: V131 = 0x2
0x155: V132 = EXP 0x2 0xa0
0x156: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x15b: V135 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V136 = EQ V135 V134
0x15d: V137 = ISZERO V136
0x15e: V138 = 0x147
0x161: JUMPI 0x147 V137
---
Entry stack: [V12, 0x70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70]

================================

Block 0x162
[0x162:0x16e]
---
Predecessors: [0x14a]
Successors: []
---
0x162 PUSH1 0x0
0x164 SLOAD
0x165 PUSH1 0x1
0x167 PUSH1 0xa0
0x169 PUSH1 0x2
0x16b EXP
0x16c SUB
0x16d AND
0x16e SELFDESTRUCT
---
0x162: V139 = 0x0
0x164: V140 = S[0x0]
0x165: V141 = 0x1
0x167: V142 = 0xa0
0x169: V143 = 0x2
0x16b: V144 = EXP 0x2 0xa0
0x16c: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16d: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x16e: SELFDESTRUCT V146
---
Entry stack: [V12, 0x70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70]

================================

Block 0x16f
[0x16f:0x16f]
---
Predecessors: []
Successors: [0x170]
---
0x16f JUMPDEST
---
0x16f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x170
[0x170:0x171]
---
Predecessors: [0x16f]
Successors: []
Has unresolved jump.
---
0x170 JUMPDEST
0x171 JUMP
---
0x170: JUMPDEST 
0x171: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x172
[0x172:0x189]
---
Predecessors: [0x8c]
Successors: [0x18a, 0x19d]
---
0x172 JUMPDEST
0x173 PUSH1 0x2
0x175 SLOAD
0x176 CALLER
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f SWAP1
0x180 DUP2
0x181 AND
0x182 SWAP2
0x183 AND
0x184 EQ
0x185 DUP1
0x186 PUSH2 0x19d
0x189 JUMPI
---
0x172: JUMPDEST 
0x173: V147 = 0x2
0x175: V148 = S[0x2]
0x176: V149 = CALLER
0x177: V150 = 0x1
0x179: V151 = 0xa0
0x17b: V152 = 0x2
0x17d: V153 = EXP 0x2 0xa0
0x17e: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x183: V156 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x184: V157 = EQ V156 V155
0x186: V158 = 0x19d
0x189: JUMPI 0x19d V157
---
Entry stack: [V12, 0x70, V52, V54]
Stack pops: 0
Stack additions: [V157]
Exit stack: [V12, 0x70, V52, V54, V157]

================================

Block 0x18a
[0x18a:0x19c]
---
Predecessors: [0x172]
Successors: [0x19d]
---
0x18a POP
0x18b PUSH1 0x1
0x18d SLOAD
0x18e CALLER
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 SWAP1
0x198 DUP2
0x199 AND
0x19a SWAP2
0x19b AND
0x19c EQ
---
0x18b: V159 = 0x1
0x18d: V160 = S[0x1]
0x18e: V161 = CALLER
0x18f: V162 = 0x1
0x191: V163 = 0xa0
0x193: V164 = 0x2
0x195: V165 = EXP 0x2 0xa0
0x196: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x19b: V168 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V169 = EQ V168 V167
---
Entry stack: [V12, 0x70, V52, V54, V157]
Stack pops: 1
Stack additions: [V169]
Exit stack: [V12, 0x70, V52, V54, V169]

================================

Block 0x19d
[0x19d:0x1a3]
---
Predecessors: [0x172, 0x18a]
Successors: [0x1a4, 0x1a9]
---
0x19d JUMPDEST
0x19e ISZERO
0x19f ISZERO
0x1a0 PUSH2 0x1a9
0x1a3 JUMPI
---
0x19d: JUMPDEST 
0x19e: V170 = ISZERO S0
0x19f: V171 = ISZERO V170
0x1a0: V172 = 0x1a9
0x1a3: JUMPI 0x1a9 V171
---
Entry stack: [V12, 0x70, V52, V54, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x70, V52, V54]

================================

Block 0x1a4
[0x1a4:0x1a8]
---
Predecessors: [0x19d]
Successors: []
---
0x1a4 PUSH1 0x0
0x1a6 PUSH1 0x0
0x1a8 REVERT
---
0x1a4: V173 = 0x0
0x1a6: V174 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x70, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V52, V54]

================================

Block 0x1a9
[0x1a9:0x1d4]
---
Predecessors: [0x19d]
Successors: [0x1d5, 0x1d6]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 DUP4
0x1b6 AND
0x1b7 SWAP1
0x1b8 DUP3
0x1b9 ISZERO
0x1ba PUSH2 0x8fc
0x1bd MUL
0x1be SWAP1
0x1bf DUP4
0x1c0 SWAP1
0x1c1 PUSH1 0x0
0x1c3 DUP2
0x1c4 DUP2
0x1c5 DUP2
0x1c6 DUP6
0x1c7 DUP9
0x1c8 DUP9
0x1c9 CALL
0x1ca SWAP4
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce POP
0x1cf ISZERO
0x1d0 ISZERO
0x1d1 PUSH2 0x1d6
0x1d4 JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V175 = 0x40
0x1ac: V176 = M[0x40]
0x1ad: V177 = 0x1
0x1af: V178 = 0xa0
0x1b1: V179 = 0x2
0x1b3: V180 = EXP 0x2 0xa0
0x1b4: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b6: V182 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V183 = ISZERO V54
0x1ba: V184 = 0x8fc
0x1bd: V185 = MUL 0x8fc V183
0x1c1: V186 = 0x0
0x1c9: V187 = CALL V185 V182 V54 V176 0x0 V176 0x0
0x1cf: V188 = ISZERO V187
0x1d0: V189 = ISZERO V188
0x1d1: V190 = 0x1d6
0x1d4: JUMPI 0x1d6 V189
---
Entry stack: [V12, 0x70, V52, V54]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x70, V52, V54]

================================

Block 0x1d5
[0x1d5:0x1d5]
---
Predecessors: [0x1a9]
Successors: []
---
0x1d5 INVALID
---
0x1d5: INVALID 
---
Entry stack: [V12, 0x70, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V52, V54]

================================

Block 0x1d6
[0x1d6:0x1d6]
---
Predecessors: [0x1a9]
Successors: [0x1d7]
---
0x1d6 JUMPDEST
---
0x1d6: JUMPDEST 
---
Entry stack: [V12, 0x70, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V52, V54]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1d6]
Successors: [0x70]
---
0x1d7 JUMPDEST
0x1d8 POP
0x1d9 POP
0x1da JUMP
---
0x1d7: JUMPDEST 
0x1da: JUMP 0x70
---
Entry stack: [V12, 0x70, V52, V54]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x1db
[0x1db:0x1f1]
---
Predecessors: [0xad]
Successors: [0x1f2, 0x1f7]
---
0x1db JUMPDEST
0x1dc PUSH1 0x0
0x1de SLOAD
0x1df CALLER
0x1e0 PUSH1 0x1
0x1e2 PUSH1 0xa0
0x1e4 PUSH1 0x2
0x1e6 EXP
0x1e7 SUB
0x1e8 SWAP1
0x1e9 DUP2
0x1ea AND
0x1eb SWAP2
0x1ec AND
0x1ed EQ
0x1ee PUSH2 0x1f7
0x1f1 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V191 = 0x0
0x1de: V192 = S[0x0]
0x1df: V193 = CALLER
0x1e0: V194 = 0x1
0x1e2: V195 = 0xa0
0x1e4: V196 = 0x2
0x1e6: V197 = EXP 0x2 0xa0
0x1e7: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x1ec: V200 = AND V192 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V201 = EQ V200 V199
0x1ee: V202 = 0x1f7
0x1f1: JUMPI 0x1f7 V201
---
Entry stack: [V12, 0x70, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V67]

================================

Block 0x1f2
[0x1f2:0x1f6]
---
Predecessors: [0x1db]
Successors: []
---
0x1f2 PUSH1 0x0
0x1f4 PUSH1 0x0
0x1f6 REVERT
---
0x1f2: V203 = 0x0
0x1f4: V204 = 0x0
0x1f6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x70, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V67]

================================

Block 0x1f7
[0x1f7:0x207]
---
Predecessors: [0x1db]
Successors: [0x208, 0x20d]
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 DUP2
0x201 AND
0x202 ISZERO
0x203 ISZERO
0x204 PUSH2 0x20d
0x207 JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V205 = 0x1
0x1fa: V206 = 0xa0
0x1fc: V207 = 0x2
0x1fe: V208 = EXP 0x2 0xa0
0x1ff: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x201: V210 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0x202: V211 = ISZERO V210
0x203: V212 = ISZERO V211
0x204: V213 = 0x20d
0x207: JUMPI 0x20d V212
---
Entry stack: [V12, 0x70, V67]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x70, V67]

================================

Block 0x208
[0x208:0x20c]
---
Predecessors: [0x1f7]
Successors: []
---
0x208 PUSH1 0x0
0x20a PUSH1 0x0
0x20c REVERT
---
0x208: V214 = 0x0
0x20a: V215 = 0x0
0x20c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x70, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V67]

================================

Block 0x20d
[0x20d:0x228]
---
Predecessors: [0x1f7]
Successors: [0x229]
---
0x20d JUMPDEST
0x20e PUSH1 0x2
0x210 DUP1
0x211 SLOAD
0x212 PUSH1 0x1
0x214 PUSH1 0xa0
0x216 PUSH1 0x2
0x218 EXP
0x219 SUB
0x21a NOT
0x21b AND
0x21c PUSH1 0x1
0x21e PUSH1 0xa0
0x220 PUSH1 0x2
0x222 EXP
0x223 SUB
0x224 DUP4
0x225 AND
0x226 OR
0x227 SWAP1
0x228 SSTORE
---
0x20d: JUMPDEST 
0x20e: V216 = 0x2
0x211: V217 = S[0x2]
0x212: V218 = 0x1
0x214: V219 = 0xa0
0x216: V220 = 0x2
0x218: V221 = EXP 0x2 0xa0
0x219: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V223 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V224 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V217
0x21c: V225 = 0x1
0x21e: V226 = 0xa0
0x220: V227 = 0x2
0x222: V228 = EXP 0x2 0xa0
0x223: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x225: V230 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0x226: V231 = OR V230 V224
0x228: S[0x2] = V231
---
Entry stack: [V12, 0x70, V67]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x70, V67]

================================

Block 0x229
[0x229:0x229]
---
Predecessors: [0x20d]
Successors: [0x22a]
---
0x229 JUMPDEST
---
0x229: JUMPDEST 
---
Entry stack: [V12, 0x70, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V67]

================================

Block 0x22a
[0x22a:0x22c]
---
Predecessors: [0x229]
Successors: [0x70]
---
0x22a JUMPDEST
0x22b POP
0x22c JUMP
---
0x22a: JUMPDEST 
0x22c: JUMP 0x70
---
Entry stack: [V12, 0x70, V67]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x23b]
---
Predecessors: [0xcb]
Successors: [0xd3]
---
0x22d JUMPDEST
0x22e PUSH1 0x0
0x230 SLOAD
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 AND
0x23a DUP2
0x23b JUMP
---
0x22d: JUMPDEST 
0x22e: V232 = 0x0
0x230: V233 = S[0x0]
0x231: V234 = 0x1
0x233: V235 = 0xa0
0x235: V236 = 0x2
0x237: V237 = EXP 0x2 0xa0
0x238: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x23b: JUMP 0xd3
---
Entry stack: [V12, 0xd3]
Stack pops: 1
Stack additions: [S0, V239]
Exit stack: [V12, 0xd3, V239]

================================

Block 0x23c
[0x23c:0x252]
---
Predecessors: [0xf7]
Successors: [0x253, 0x258]
---
0x23c JUMPDEST
0x23d PUSH1 0x0
0x23f SLOAD
0x240 CALLER
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 SWAP1
0x24a DUP2
0x24b AND
0x24c SWAP2
0x24d AND
0x24e EQ
0x24f PUSH2 0x258
0x252 JUMPI
---
0x23c: JUMPDEST 
0x23d: V240 = 0x0
0x23f: V241 = S[0x0]
0x240: V242 = CALLER
0x241: V243 = 0x1
0x243: V244 = 0xa0
0x245: V245 = 0x2
0x247: V246 = EXP 0x2 0xa0
0x248: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24b: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x24d: V249 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x24e: V250 = EQ V249 V248
0x24f: V251 = 0x258
0x252: JUMPI 0x258 V250
---
Entry stack: [V12, 0x70, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V97]

================================

Block 0x253
[0x253:0x257]
---
Predecessors: [0x23c]
Successors: []
---
0x253 PUSH1 0x0
0x255 PUSH1 0x0
0x257 REVERT
---
0x253: V252 = 0x0
0x255: V253 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V12, 0x70, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V97]

================================

Block 0x258
[0x258:0x268]
---
Predecessors: [0x23c]
Successors: [0x269, 0x26e]
---
0x258 JUMPDEST
0x259 PUSH1 0x1
0x25b PUSH1 0xa0
0x25d PUSH1 0x2
0x25f EXP
0x260 SUB
0x261 DUP2
0x262 AND
0x263 ISZERO
0x264 ISZERO
0x265 PUSH2 0x26e
0x268 JUMPI
---
0x258: JUMPDEST 
0x259: V254 = 0x1
0x25b: V255 = 0xa0
0x25d: V256 = 0x2
0x25f: V257 = EXP 0x2 0xa0
0x260: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x262: V259 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x263: V260 = ISZERO V259
0x264: V261 = ISZERO V260
0x265: V262 = 0x26e
0x268: JUMPI 0x26e V261
---
Entry stack: [V12, 0x70, V97]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x70, V97]

================================

Block 0x269
[0x269:0x26d]
---
Predecessors: [0x258]
Successors: []
---
0x269 PUSH1 0x0
0x26b PUSH1 0x0
0x26d REVERT
---
0x269: V263 = 0x0
0x26b: V264 = 0x0
0x26d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x70, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V97]

================================

Block 0x26e
[0x26e:0x289]
---
Predecessors: [0x258]
Successors: [0x28a]
---
0x26e JUMPDEST
0x26f PUSH1 0x0
0x271 DUP1
0x272 SLOAD
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b NOT
0x27c AND
0x27d PUSH1 0x1
0x27f PUSH1 0xa0
0x281 PUSH1 0x2
0x283 EXP
0x284 SUB
0x285 DUP4
0x286 AND
0x287 OR
0x288 SWAP1
0x289 SSTORE
---
0x26e: JUMPDEST 
0x26f: V265 = 0x0
0x272: V266 = S[0x0]
0x273: V267 = 0x1
0x275: V268 = 0xa0
0x277: V269 = 0x2
0x279: V270 = EXP 0x2 0xa0
0x27a: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27b: V272 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V273 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V266
0x27d: V274 = 0x1
0x27f: V275 = 0xa0
0x281: V276 = 0x2
0x283: V277 = EXP 0x2 0xa0
0x284: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V279 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x287: V280 = OR V279 V273
0x289: S[0x0] = V280
---
Entry stack: [V12, 0x70, V97]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x70, V97]

================================

Block 0x28a
[0x28a:0x28a]
---
Predecessors: [0x26e]
Successors: [0x28b]
---
0x28a JUMPDEST
---
0x28a: JUMPDEST 
---
Entry stack: [V12, 0x70, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V97]

================================

Block 0x28b
[0x28b:0x28d]
---
Predecessors: [0x28a]
Successors: [0x70]
---
0x28b JUMPDEST
0x28c POP
0x28d JUMP
---
0x28b: JUMPDEST 
0x28d: JUMP 0x70
---
Entry stack: [V12, 0x70, V97]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x28e
[0x28e:0x2a4]
---
Predecessors: [0x115]
Successors: [0x2a5, 0x2aa]
---
0x28e JUMPDEST
0x28f PUSH1 0x0
0x291 SLOAD
0x292 CALLER
0x293 PUSH1 0x1
0x295 PUSH1 0xa0
0x297 PUSH1 0x2
0x299 EXP
0x29a SUB
0x29b SWAP1
0x29c DUP2
0x29d AND
0x29e SWAP2
0x29f AND
0x2a0 EQ
0x2a1 PUSH2 0x2aa
0x2a4 JUMPI
---
0x28e: JUMPDEST 
0x28f: V281 = 0x0
0x291: V282 = S[0x0]
0x292: V283 = CALLER
0x293: V284 = 0x1
0x295: V285 = 0xa0
0x297: V286 = 0x2
0x299: V287 = EXP 0x2 0xa0
0x29a: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29d: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x29f: V290 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V291 = EQ V290 V289
0x2a1: V292 = 0x2aa
0x2a4: JUMPI 0x2aa V291
---
Entry stack: [V12, 0x70, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V110]

================================

Block 0x2a5
[0x2a5:0x2a9]
---
Predecessors: [0x28e]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 PUSH1 0x0
0x2a9 REVERT
---
0x2a5: V293 = 0x0
0x2a7: V294 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x70, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V110]

================================

Block 0x2aa
[0x2aa:0x2ba]
---
Predecessors: [0x28e]
Successors: [0x2bb, 0x2c0]
---
0x2aa JUMPDEST
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 DUP2
0x2b4 AND
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 PUSH2 0x2c0
0x2ba JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V295 = 0x1
0x2ad: V296 = 0xa0
0x2af: V297 = 0x2
0x2b1: V298 = EXP 0x2 0xa0
0x2b2: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b4: V300 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V301 = ISZERO V300
0x2b6: V302 = ISZERO V301
0x2b7: V303 = 0x2c0
0x2ba: JUMPI 0x2c0 V302
---
Entry stack: [V12, 0x70, V110]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x70, V110]

================================

Block 0x2bb
[0x2bb:0x2bf]
---
Predecessors: [0x2aa]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd PUSH1 0x0
0x2bf REVERT
---
0x2bb: V304 = 0x0
0x2bd: V305 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x70, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V110]

================================

Block 0x2c0
[0x2c0:0x2db]
---
Predecessors: [0x2aa]
Successors: [0x2dc]
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x1
0x2c3 DUP1
0x2c4 SLOAD
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd NOT
0x2ce AND
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 DUP4
0x2d8 AND
0x2d9 OR
0x2da SWAP1
0x2db SSTORE
---
0x2c0: JUMPDEST 
0x2c1: V306 = 0x1
0x2c4: V307 = S[0x1]
0x2c5: V308 = 0x1
0x2c7: V309 = 0xa0
0x2c9: V310 = 0x2
0x2cb: V311 = EXP 0x2 0xa0
0x2cc: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cd: V313 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V314 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V307
0x2cf: V315 = 0x1
0x2d1: V316 = 0xa0
0x2d3: V317 = 0x2
0x2d5: V318 = EXP 0x2 0xa0
0x2d6: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d8: V320 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V321 = OR V320 V314
0x2db: S[0x1] = V321
---
Entry stack: [V12, 0x70, V110]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x70, V110]

================================

Block 0x2dc
[0x2dc:0x2dc]
---
Predecessors: [0x2c0]
Successors: [0x2dd]
---
0x2dc JUMPDEST
---
0x2dc: JUMPDEST 
---
Entry stack: [V12, 0x70, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x70, V110]

================================

Block 0x2dd
[0x2dd:0x2df]
---
Predecessors: [0x2dc]
Successors: [0x70]
---
0x2dd JUMPDEST
0x2de POP
0x2df JUMP
---
0x2dd: JUMPDEST 
0x2df: JUMP 0x70
---
Entry stack: [V12, 0x70, V110]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e0
[0x2e0:0x313]
---
Predecessors: []
Successors: []
---
0x2e0 STOP
0x2e1 LOG1
0x2e2 PUSH6 0x627a7a723058
0x2e9 SHA3
0x2ea MISSING 0xa6
0x2eb STATICCALL
0x2ec MISSING 0x49
0x2ed LOG1
0x2ee DUP14
0x2ef MISSING 0xb8
0x2f0 DUP10
0x2f1 STOP
0x2f2 MISSING 0xa6
0x2f3 MISSING 0xb5
0x2f4 NUMBER
0x2f5 MISSING 0xe2
0x2f6 EXTCODESIZE
0x2f7 PUSH28 0x2528fb845f7ff667278d21288d151269db160029
---
0x2e0: STOP 
0x2e1: LOG S0 S1 S2
0x2e2: V322 = 0x627a7a723058
0x2e9: V323 = SHA3 0x627a7a723058 S3
0x2ea: MISSING 0xa6
0x2eb: V324 = STATICCALL S0 S1 S2 S3 S4 S5
0x2ec: MISSING 0x49
0x2ed: LOG S0 S1 S2
0x2ef: MISSING 0xb8
0x2f1: STOP 
0x2f2: MISSING 0xa6
0x2f3: MISSING 0xb5
0x2f4: V325 = NUMBER
0x2f5: MISSING 0xe2
0x2f6: V326 = EXTCODESIZE S0
0x2f7: V327 = 0x2528fb845f7ff667278d21288d151269db160029
---
Entry stack: []
Stack pops: 0
Stack additions: [V323, V324, S16, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V325, 0x2528fb845f7ff667278d21288d151269db160029, V326]
Exit stack: []

================================

Function 0:
Public function signature: 0x5c33e1
Entry block: 0x68
Exit block: 0x70
Body: 0x68, 0x70, 0x12b, 0x142, 0x147, 0x148

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x72
Exit block: 0x70
Body: 0x70, 0x72, 0x79, 0x7a, 0x147, 0x148, 0x14a, 0x162

Function 2:
Public function signature: 0x6f64234e
Entry block: 0x84
Exit block: 0x70
Body: 0x70, 0x84, 0x8b, 0x8c, 0x172, 0x18a, 0x19d, 0x1a4, 0x1a9, 0x1d5, 0x1d6, 0x1d7

Function 3:
Public function signature: 0x8918485b
Entry block: 0xa5
Exit block: 0x70
Body: 0x70, 0xa5, 0xac, 0xad, 0x1db, 0x1f2, 0x1f7, 0x208, 0x20d, 0x229, 0x22a

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0xc3
Exit block: 0xd3
Body: 0xc3, 0xca, 0xcb, 0xd3, 0x22d

Function 5:
Public function signature: 0xa6f9dae1
Entry block: 0xef
Exit block: 0x70
Body: 0x70, 0xef, 0xf6, 0xf7, 0x23c, 0x253, 0x258, 0x269, 0x26e, 0x28a, 0x28b

Function 6:
Public function signature: 0xe2e7ab3a
Entry block: 0x10d
Exit block: 0x70
Body: 0x70, 0x10d, 0x114, 0x115, 0x28e, 0x2a5, 0x2aa, 0x2bb, 0x2c0, 0x2dc, 0x2dd

Function 7:
Public fallback function
Entry block: 0x66
Exit block: 0x66
Body: 0x66

