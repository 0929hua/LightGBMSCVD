Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xd7]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2e1a7d4d
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xd7
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2e1a7d4d
0x3b: V13 = EQ V11 0x2e1a7d4d
0x3c: V14 = 0xd7
0x3f: JUMPI 0xd7 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xef]
---
0x40 DUP1
0x41 PUSH4 0x3a13e1af
0x46 EQ
0x47 PUSH2 0xef
0x4a JUMPI
---
0x41: V15 = 0x3a13e1af
0x46: V16 = EQ 0x3a13e1af V11
0x47: V17 = 0xef
0x4a: JUMPI 0xef V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x120]
---
0x4b DUP1
0x4c PUSH4 0xc1dbd9b2
0x51 EQ
0x52 PUSH2 0x120
0x55 JUMPI
---
0x4c: V18 = 0xc1dbd9b2
0x51: V19 = EQ 0xc1dbd9b2 V11
0x52: V20 = 0x120
0x55: JUMPI 0x120 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x142]
---
0x56 DUP1
0x57 PUSH4 0xd0e30db0
0x5c EQ
0x5d PUSH2 0x142
0x60 JUMPI
---
0x57: V21 = 0xd0e30db0
0x5c: V22 = EQ 0xd0e30db0 V11
0x5d: V23 = 0x142
0x60: JUMPI 0x142 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x81]
---
Predecessors: [0x0, 0x56]
Successors: [0x82, 0x86]
---
0x61 JUMPDEST
0x62 PUSH1 0x1
0x64 PUSH1 0xa0
0x66 PUSH1 0x2
0x68 EXP
0x69 SUB
0x6a CALLER
0x6b AND
0x6c PUSH1 0x0
0x6e SWAP1
0x6f DUP2
0x70 MSTORE
0x71 PUSH1 0x1
0x73 PUSH1 0x20
0x75 MSTORE
0x76 PUSH1 0x40
0x78 DUP2
0x79 SHA3
0x7a SLOAD
0x7b SWAP1
0x7c DUP2
0x7d GT
0x7e PUSH2 0x86
0x81 JUMPI
---
0x61: JUMPDEST 
0x62: V24 = 0x1
0x64: V25 = 0xa0
0x66: V26 = 0x2
0x68: V27 = EXP 0x2 0xa0
0x69: V28 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a: V29 = CALLER
0x6b: V30 = AND V29 0xffffffffffffffffffffffffffffffffffffffff
0x6c: V31 = 0x0
0x70: M[0x0] = V30
0x71: V32 = 0x1
0x73: V33 = 0x20
0x75: M[0x20] = 0x1
0x76: V34 = 0x40
0x79: V35 = SHA3 0x0 0x40
0x7a: V36 = S[V35]
0x7d: V37 = GT V36 0x0
0x7e: V38 = 0x86
0x81: JUMPI 0x86 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x61]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V39 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x86
[0x86:0xcf]
---
Predecessors: [0x61]
Successors: [0xd0, 0xd4]
---
0x86 JUMPDEST
0x87 PUSH1 0x1
0x89 PUSH1 0xa0
0x8b PUSH1 0x2
0x8d EXP
0x8e SUB
0x8f CALLER
0x90 AND
0x91 PUSH1 0x0
0x93 DUP2
0x94 DUP2
0x95 MSTORE
0x96 PUSH1 0x1
0x98 PUSH1 0x20
0x9a MSTORE
0x9b PUSH1 0x40
0x9d DUP1
0x9e DUP3
0x9f SHA3
0xa0 SWAP2
0xa1 SWAP1
0xa2 SWAP2
0xa3 SSTORE
0xa4 PUSH7 0x38d7ea4c68000
0xac DUP4
0xad MUL
0xae CALLVALUE
0xaf ADD
0xb0 DUP1
0xb1 ISZERO
0xb2 PUSH2 0x8fc
0xb5 MUL
0xb6 SWAP2
0xb7 MLOAD
0xb8 PUSH1 0x0
0xba PUSH1 0x40
0xbc MLOAD
0xbd DUP1
0xbe DUP4
0xbf SUB
0xc0 DUP2
0xc1 DUP6
0xc2 DUP9
0xc3 DUP9
0xc4 CALL
0xc5 SWAP4
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca ISZERO
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0x86: JUMPDEST 
0x87: V40 = 0x1
0x89: V41 = 0xa0
0x8b: V42 = 0x2
0x8d: V43 = EXP 0x2 0xa0
0x8e: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f: V45 = CALLER
0x90: V46 = AND V45 0xffffffffffffffffffffffffffffffffffffffff
0x91: V47 = 0x0
0x95: M[0x0] = V46
0x96: V48 = 0x1
0x98: V49 = 0x20
0x9a: M[0x20] = 0x1
0x9b: V50 = 0x40
0x9f: V51 = SHA3 0x0 0x40
0xa3: S[V51] = 0x0
0xa4: V52 = 0x38d7ea4c68000
0xad: V53 = MUL V36 0x38d7ea4c68000
0xae: V54 = CALLVALUE
0xaf: V55 = ADD V54 V53
0xb1: V56 = ISZERO V55
0xb2: V57 = 0x8fc
0xb5: V58 = MUL 0x8fc V56
0xb7: V59 = M[0x40]
0xb8: V60 = 0x0
0xba: V61 = 0x40
0xbc: V62 = M[0x40]
0xbf: V63 = SUB V59 V62
0xc4: V64 = CALL V58 V46 V55 V62 V63 V62 0x0
0xca: V65 = ISZERO V64
0xcb: V66 = ISZERO V65
0xcc: V67 = 0xd4
0xcf: JUMPI 0xd4 V66
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, V36]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0x86]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V68 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0xd4
[0xd4:0xd6]
---
Predecessors: [0x86]
Successors: []
---
0xd4 JUMPDEST
0xd5 POP
0xd6 STOP
---
0xd4: JUMPDEST 
0xd6: STOP 
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0xd]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V69 = CALLVALUE
0xd9: V70 = ISZERO V69
0xda: V71 = 0xe2
0xdd: JUMPI 0xe2 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V72 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0x14a]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xed
0xe6 PUSH1 0x4
0xe8 CALLDATALOAD
0xe9 PUSH2 0x14a
0xec JUMP
---
0xe2: JUMPDEST 
0xe3: V73 = 0xed
0xe6: V74 = 0x4
0xe8: V75 = CALLDATALOAD 0x4
0xe9: V76 = 0x14a
0xec: JUMP 0x14a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xed, V75]
Exit stack: [V11, 0xed, V75]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: [0x198, 0x1e0, 0x217]
Successors: []
---
0xed JUMPDEST
0xee STOP
---
0xed: JUMPDEST 
0xee: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0x40]
Successors: [0xf6, 0xfa]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V77 = CALLVALUE
0xf1: V78 = ISZERO V77
0xf2: V79 = 0xfa
0xf5: JUMPI 0xfa V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xef]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V80 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfa
[0xfa:0x10d]
---
Predecessors: [0xef]
Successors: [0x19b]
---
0xfa JUMPDEST
0xfb PUSH2 0x10e
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 PUSH1 0x4
0x108 CALLDATALOAD
0x109 AND
0x10a PUSH2 0x19b
0x10d JUMP
---
0xfa: JUMPDEST 
0xfb: V81 = 0x10e
0xfe: V82 = 0x1
0x100: V83 = 0xa0
0x102: V84 = 0x2
0x104: V85 = EXP 0x2 0xa0
0x105: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0x106: V87 = 0x4
0x108: V88 = CALLDATALOAD 0x4
0x109: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V90 = 0x19b
0x10d: JUMP 0x19b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10e, V89]
Exit stack: [V11, 0x10e, V89]

================================

Block 0x10e
[0x10e:0x11f]
---
Predecessors: [0x19b]
Successors: []
---
0x10e JUMPDEST
0x10f PUSH1 0x40
0x111 MLOAD
0x112 SWAP1
0x113 DUP2
0x114 MSTORE
0x115 PUSH1 0x20
0x117 ADD
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0x10e: JUMPDEST 
0x10f: V91 = 0x40
0x111: V92 = M[0x40]
0x114: M[V92] = V156
0x115: V93 = 0x20
0x117: V94 = ADD 0x20 V92
0x118: V95 = 0x40
0x11a: V96 = M[0x40]
0x11d: V97 = SUB V94 V96
0x11f: RETURN V96 V97
---
Entry stack: [V11, 0x10e, V156]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x4b]
Successors: [0x127, 0x12b]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V98 = CALLVALUE
0x122: V99 = ISZERO V98
0x123: V100 = 0x12b
0x126: JUMPI 0x12b V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x120]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V101 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12b
[0x12b:0x141]
---
Predecessors: [0x120]
Successors: [0x1ad]
---
0x12b JUMPDEST
0x12c PUSH2 0xed
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 PUSH1 0x4
0x139 CALLDATALOAD
0x13a AND
0x13b PUSH1 0x24
0x13d CALLDATALOAD
0x13e PUSH2 0x1ad
0x141 JUMP
---
0x12b: JUMPDEST 
0x12c: V102 = 0xed
0x12f: V103 = 0x1
0x131: V104 = 0xa0
0x133: V105 = 0x2
0x135: V106 = EXP 0x2 0xa0
0x136: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137: V108 = 0x4
0x139: V109 = CALLDATALOAD 0x4
0x13a: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V111 = 0x24
0x13d: V112 = CALLDATALOAD 0x24
0x13e: V113 = 0x1ad
0x141: JUMP 0x1ad
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xed, V110, V112]
Exit stack: [V11, 0xed, V110, V112]

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x56]
Successors: [0x1fc]
---
0x142 JUMPDEST
0x143 PUSH2 0xed
0x146 PUSH2 0x1fc
0x149 JUMP
---
0x142: JUMPDEST 
0x143: V114 = 0xed
0x146: V115 = 0x1fc
0x149: JUMP 0x1fc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V11, 0xed]

================================

Block 0x14a
[0x14a:0x160]
---
Predecessors: [0xe2]
Successors: [0x161, 0x165]
---
0x14a JUMPDEST
0x14b PUSH1 0x0
0x14d SLOAD
0x14e CALLER
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 SWAP1
0x158 DUP2
0x159 AND
0x15a SWAP2
0x15b AND
0x15c EQ
0x15d PUSH2 0x165
0x160 JUMPI
---
0x14a: JUMPDEST 
0x14b: V116 = 0x0
0x14d: V117 = S[0x0]
0x14e: V118 = CALLER
0x14f: V119 = 0x1
0x151: V120 = 0xa0
0x153: V121 = 0x2
0x155: V122 = EXP 0x2 0xa0
0x156: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x15b: V125 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V126 = EQ V125 V124
0x15d: V127 = 0x165
0x160: JUMPI 0x165 V126
---
Entry stack: [V11, 0xed, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V75]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x14a]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V128 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V75]

================================

Block 0x165
[0x165:0x193]
---
Predecessors: [0x14a]
Successors: [0x194, 0x198]
---
0x165 JUMPDEST
0x166 PUSH1 0x0
0x168 SLOAD
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 AND
0x172 DUP2
0x173 ISZERO
0x174 PUSH2 0x8fc
0x177 MUL
0x178 DUP3
0x179 PUSH1 0x40
0x17b MLOAD
0x17c PUSH1 0x0
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 DUP4
0x183 SUB
0x184 DUP2
0x185 DUP6
0x186 DUP9
0x187 DUP9
0x188 CALL
0x189 SWAP4
0x18a POP
0x18b POP
0x18c POP
0x18d POP
0x18e ISZERO
0x18f ISZERO
0x190 PUSH2 0x198
0x193 JUMPI
---
0x165: JUMPDEST 
0x166: V129 = 0x0
0x168: V130 = S[0x0]
0x169: V131 = 0x1
0x16b: V132 = 0xa0
0x16d: V133 = 0x2
0x16f: V134 = EXP 0x2 0xa0
0x170: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x173: V137 = ISZERO V75
0x174: V138 = 0x8fc
0x177: V139 = MUL 0x8fc V137
0x179: V140 = 0x40
0x17b: V141 = M[0x40]
0x17c: V142 = 0x0
0x17e: V143 = 0x40
0x180: V144 = M[0x40]
0x183: V145 = SUB V141 V144
0x188: V146 = CALL V139 V136 V75 V144 V145 V144 0x0
0x18e: V147 = ISZERO V146
0x18f: V148 = ISZERO V147
0x190: V149 = 0x198
0x193: JUMPI 0x198 V148
---
Entry stack: [V11, 0xed, V75]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xed, V75]

================================

Block 0x194
[0x194:0x197]
---
Predecessors: [0x165]
Successors: []
---
0x194 PUSH1 0x0
0x196 DUP1
0x197 REVERT
---
0x194: V150 = 0x0
0x197: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V75]

================================

Block 0x198
[0x198:0x19a]
---
Predecessors: [0x165]
Successors: [0xed]
---
0x198 JUMPDEST
0x199 POP
0x19a JUMP
---
0x198: JUMPDEST 
0x19a: JUMP 0xed
---
Entry stack: [V11, 0xed, V75]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x19b
[0x19b:0x1ac]
---
Predecessors: [0xfa]
Successors: [0x10e]
---
0x19b JUMPDEST
0x19c PUSH1 0x1
0x19e PUSH1 0x20
0x1a0 MSTORE
0x1a1 PUSH1 0x0
0x1a3 SWAP1
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x40
0x1a8 SWAP1
0x1a9 SHA3
0x1aa SLOAD
0x1ab DUP2
0x1ac JUMP
---
0x19b: JUMPDEST 
0x19c: V151 = 0x1
0x19e: V152 = 0x20
0x1a0: M[0x20] = 0x1
0x1a1: V153 = 0x0
0x1a5: M[0x0] = V89
0x1a6: V154 = 0x40
0x1a9: V155 = SHA3 0x0 0x40
0x1aa: V156 = S[V155]
0x1ac: JUMP 0x10e
---
Entry stack: [V11, 0x10e, V89]
Stack pops: 2
Stack additions: [S1, V156]
Exit stack: [V11, 0x10e, V156]

================================

Block 0x1ad
[0x1ad:0x1c3]
---
Predecessors: [0x12b]
Successors: [0x1c4, 0x1c8]
---
0x1ad JUMPDEST
0x1ae PUSH1 0x0
0x1b0 SLOAD
0x1b1 CALLER
0x1b2 PUSH1 0x1
0x1b4 PUSH1 0xa0
0x1b6 PUSH1 0x2
0x1b8 EXP
0x1b9 SUB
0x1ba SWAP1
0x1bb DUP2
0x1bc AND
0x1bd SWAP2
0x1be AND
0x1bf EQ
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V157 = 0x0
0x1b0: V158 = S[0x0]
0x1b1: V159 = CALLER
0x1b2: V160 = 0x1
0x1b4: V161 = 0xa0
0x1b6: V162 = 0x2
0x1b8: V163 = EXP 0x2 0xa0
0x1b9: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bc: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x1be: V166 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V167 = EQ V166 V165
0x1c0: V168 = 0x1c8
0x1c3: JUMPI 0x1c8 V167
---
Entry stack: [V11, 0xed, V110, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V110, V112]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1ad]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V169 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed, V110, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V110, V112]

================================

Block 0x1c8
[0x1c8:0x1db]
---
Predecessors: [0x1ad]
Successors: [0x1dc, 0x1e0]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 ADDRESS
0x1d2 AND
0x1d3 BALANCE
0x1d4 DUP2
0x1d5 SWAP1
0x1d6 LT
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V170 = 0x1
0x1cb: V171 = 0xa0
0x1cd: V172 = 0x2
0x1cf: V173 = EXP 0x2 0xa0
0x1d0: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V175 = ADDRESS
0x1d2: V176 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V177 = BALANCE V176
0x1d6: V178 = LT V177 V112
0x1d7: V179 = ISZERO V178
0x1d8: V180 = 0x1e0
0x1db: JUMPI 0x1e0 V179
---
Entry stack: [V11, 0xed, V110, V112]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xed, V110, V112]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1c8]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V181 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed, V110, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V110, V112]

================================

Block 0x1e0
[0x1e0:0x1fb]
---
Predecessors: [0x1c8]
Successors: [0xed]
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0xa0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 SUB
0x1e9 SWAP1
0x1ea SWAP2
0x1eb AND
0x1ec PUSH1 0x0
0x1ee SWAP1
0x1ef DUP2
0x1f0 MSTORE
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0x20
0x1f5 MSTORE
0x1f6 PUSH1 0x40
0x1f8 SWAP1
0x1f9 SHA3
0x1fa SSTORE
0x1fb JUMP
---
0x1e0: JUMPDEST 
0x1e1: V182 = 0x1
0x1e3: V183 = 0xa0
0x1e5: V184 = 0x2
0x1e7: V185 = EXP 0x2 0xa0
0x1e8: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V187 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V188 = 0x0
0x1f0: M[0x0] = V187
0x1f1: V189 = 0x1
0x1f3: V190 = 0x20
0x1f5: M[0x20] = 0x1
0x1f6: V191 = 0x40
0x1f9: V192 = SHA3 0x0 0x40
0x1fa: S[V192] = V112
0x1fb: JUMP 0xed
---
Entry stack: [V11, 0xed, V110, V112]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fc
[0x1fc:0x212]
---
Predecessors: [0x142]
Successors: [0x213, 0x217]
---
0x1fc JUMPDEST
0x1fd PUSH1 0x0
0x1ff SLOAD
0x200 CALLER
0x201 PUSH1 0x1
0x203 PUSH1 0xa0
0x205 PUSH1 0x2
0x207 EXP
0x208 SUB
0x209 SWAP1
0x20a DUP2
0x20b AND
0x20c SWAP2
0x20d AND
0x20e EQ
0x20f PUSH2 0x217
0x212 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V193 = 0x0
0x1ff: V194 = S[0x0]
0x200: V195 = CALLER
0x201: V196 = 0x1
0x203: V197 = 0xa0
0x205: V198 = 0x2
0x207: V199 = EXP 0x2 0xa0
0x208: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x20d: V202 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V203 = EQ V202 V201
0x20f: V204 = 0x217
0x212: JUMPI 0x217 V203
---
Entry stack: [V11, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed]

================================

Block 0x213
[0x213:0x216]
---
Predecessors: [0x1fc]
Successors: []
---
0x213 PUSH1 0x0
0x215 DUP1
0x216 REVERT
---
0x213: V205 = 0x0
0x216: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed]

================================

Block 0x217
[0x217:0x218]
---
Predecessors: [0x1fc]
Successors: [0xed]
---
0x217 JUMPDEST
0x218 JUMP
---
0x217: JUMPDEST 
0x218: JUMP 0xed
---
Entry stack: [V11, 0xed]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x219
[0x219:0x244]
---
Predecessors: []
Successors: []
---
0x219 STOP
0x21a LOG1
0x21b PUSH6 0x627a7a723058
0x222 SHA3
0x223 OR
0x224 DIFFICULTY
0x225 MISSING 0xce
0x226 OR
0x227 PUSH27 0xf99d5c79763b60987b5b84146494133f7affe87d4d246810b6ec2
0x243 STOP
0x244 MISSING 0x29
---
0x219: STOP 
0x21a: LOG S0 S1 S2
0x21b: V206 = 0x627a7a723058
0x222: V207 = SHA3 0x627a7a723058 S3
0x223: V208 = OR V207 S4
0x224: V209 = DIFFICULTY
0x225: MISSING 0xce
0x226: V210 = OR S0 S1
0x227: V211 = 0xf99d5c79763b60987b5b84146494133f7affe87d4d246810b6ec2
0x243: STOP 
0x244: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V209, V208, 0xf99d5c79763b60987b5b84146494133f7affe87d4d246810b6ec2, V210]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0xd7
Exit block: 0xed
Body: 0xd7, 0xde, 0xe2, 0xed, 0x14a, 0x161, 0x165, 0x194, 0x198

Function 1:
Public function signature: 0x3a13e1af
Entry block: 0xef
Exit block: 0x10e
Body: 0xef, 0xf6, 0xfa, 0x10e, 0x19b

Function 2:
Public function signature: 0xc1dbd9b2
Entry block: 0x120
Exit block: 0xed
Body: 0xed, 0x120, 0x127, 0x12b, 0x1ad, 0x1c4, 0x1c8, 0x1dc, 0x1e0

Function 3:
Public function signature: 0xd0e30db0
Entry block: 0x142
Exit block: 0xed
Body: 0xed, 0x142, 0x1fc, 0x213, 0x217

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0xd4
Body: 0x61, 0x82, 0x86, 0xd0, 0xd4

