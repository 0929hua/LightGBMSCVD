Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x3d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x3d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3d
0xc: JUMPI 0x3d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x54ff18af
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x84
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x54ff18af
0x22: V15 = EQ V13 0x54ff18af
0x23: V16 = 0x84
0x26: JUMPI 0x84 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xb7]
---
0x27 DUP1
0x28 PUSH4 0x8da5cb5b
0x2d EQ
0x2e PUSH2 0xb7
0x31 JUMPI
---
0x28: V17 = 0x8da5cb5b
0x2d: V18 = EQ 0x8da5cb5b V13
0x2e: V19 = 0xb7
0x31: JUMPI 0xb7 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xe6]
---
0x32 DUP1
0x33 PUSH4 0xf2fde38b
0x38 EQ
0x39 PUSH2 0xe6
0x3c JUMPI
---
0x33: V20 = 0xf2fde38b
0x38: V21 = EQ 0xf2fde38b V13
0x39: V22 = 0xe6
0x3c: JUMPI 0xe6 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x44]
---
Predecessors: [0x0, 0x32]
Successors: [0x45, 0x49]
---
0x3d JUMPDEST
0x3e CALLVALUE
0x3f ISZERO
0x40 ISZERO
0x41 PUSH2 0x49
0x44 JUMPI
---
0x3d: JUMPDEST 
0x3e: V23 = CALLVALUE
0x3f: V24 = ISZERO V23
0x40: V25 = ISZERO V24
0x41: V26 = 0x49
0x44: JUMPI 0x49 V25
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x45
[0x45:0x48]
---
Predecessors: [0x3d]
Successors: []
---
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x45: V27 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x49
[0x49:0x7d]
---
Predecessors: [0x3d]
Successors: [0x7e, 0x82]
---
0x49 JUMPDEST
0x4a PUSH1 0x0
0x4c SLOAD
0x4d PUSH1 0x1
0x4f PUSH1 0xa0
0x51 PUSH1 0x2
0x53 EXP
0x54 SUB
0x55 SWAP1
0x56 DUP2
0x57 AND
0x58 SWAP1
0x59 ADDRESS
0x5a AND
0x5b BALANCE
0x5c DUP1
0x5d ISZERO
0x5e PUSH2 0x8fc
0x61 MUL
0x62 SWAP1
0x63 PUSH1 0x40
0x65 MLOAD
0x66 PUSH1 0x0
0x68 PUSH1 0x40
0x6a MLOAD
0x6b DUP1
0x6c DUP4
0x6d SUB
0x6e DUP2
0x6f DUP6
0x70 DUP9
0x71 DUP9
0x72 CALL
0x73 SWAP4
0x74 POP
0x75 POP
0x76 POP
0x77 POP
0x78 ISZERO
0x79 ISZERO
0x7a PUSH2 0x82
0x7d JUMPI
---
0x49: JUMPDEST 
0x4a: V28 = 0x0
0x4c: V29 = S[0x0]
0x4d: V30 = 0x1
0x4f: V31 = 0xa0
0x51: V32 = 0x2
0x53: V33 = EXP 0x2 0xa0
0x54: V34 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x59: V36 = ADDRESS
0x5a: V37 = AND V36 0xffffffffffffffffffffffffffffffffffffffff
0x5b: V38 = BALANCE V37
0x5d: V39 = ISZERO V38
0x5e: V40 = 0x8fc
0x61: V41 = MUL 0x8fc V39
0x63: V42 = 0x40
0x65: V43 = M[0x40]
0x66: V44 = 0x0
0x68: V45 = 0x40
0x6a: V46 = M[0x40]
0x6d: V47 = SUB V43 V46
0x72: V48 = CALL V41 V35 V38 V46 V47 V46 0x0
0x78: V49 = ISZERO V48
0x79: V50 = ISZERO V49
0x7a: V51 = 0x82
0x7d: JUMPI 0x82 V50
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x49]
Successors: []
---
0x7e PUSH1 0x0
0x80 DUP1
0x81 REVERT
---
0x7e: V52 = 0x0
0x81: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x49, 0x2b1]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x84
[0x84:0x8a]
---
Predecessors: [0xd]
Successors: [0x8b, 0x8f]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 ISZERO
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x84: JUMPDEST 
0x85: V53 = CALLVALUE
0x86: V54 = ISZERO V53
0x87: V55 = 0x8f
0x8a: JUMPI 0x8f V54
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x84]
Successors: []
---
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8b: V56 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8f
[0x8f:0xa2]
---
Predecessors: [0x84]
Successors: [0x105]
---
0x8f JUMPDEST
0x90 PUSH2 0xa3
0x93 PUSH1 0x1
0x95 PUSH1 0xa0
0x97 PUSH1 0x2
0x99 EXP
0x9a SUB
0x9b PUSH1 0x4
0x9d CALLDATALOAD
0x9e AND
0x9f PUSH2 0x105
0xa2 JUMP
---
0x8f: JUMPDEST 
0x90: V57 = 0xa3
0x93: V58 = 0x1
0x95: V59 = 0xa0
0x97: V60 = 0x2
0x99: V61 = EXP 0x2 0xa0
0x9a: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b: V63 = 0x4
0x9d: V64 = CALLDATALOAD 0x4
0x9e: V65 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V66 = 0x105
0xa2: JUMP 0x105
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa3, V65]
Exit stack: [V13, 0xa3, V65]

================================

Block 0xa3
[0xa3:0xb6]
---
Predecessors: [0x26a]
Successors: []
---
0xa3 JUMPDEST
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 SWAP1
0xa8 ISZERO
0xa9 ISZERO
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf PUSH1 0x40
0xb1 MLOAD
0xb2 DUP1
0xb3 SWAP2
0xb4 SUB
0xb5 SWAP1
0xb6 RETURN
---
0xa3: JUMPDEST 
0xa4: V67 = 0x40
0xa6: V68 = M[0x40]
0xa8: V69 = ISZERO V229
0xa9: V70 = ISZERO V69
0xab: M[V68] = V70
0xac: V71 = 0x20
0xae: V72 = ADD 0x20 V68
0xaf: V73 = 0x40
0xb1: V74 = M[0x40]
0xb4: V75 = SUB V72 V74
0xb6: RETURN V74 V75
---
Entry stack: [V13, V229]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xb7
[0xb7:0xbd]
---
Predecessors: [0x27]
Successors: [0xbe, 0xc2]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb7: JUMPDEST 
0xb8: V76 = CALLVALUE
0xb9: V77 = ISZERO V76
0xba: V78 = 0xc2
0xbd: JUMPI 0xc2 V77
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb7]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V79 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc2
[0xc2:0xc9]
---
Predecessors: [0xb7]
Successors: [0x272]
---
0xc2 JUMPDEST
0xc3 PUSH2 0xca
0xc6 PUSH2 0x272
0xc9 JUMP
---
0xc2: JUMPDEST 
0xc3: V80 = 0xca
0xc6: V81 = 0x272
0xc9: JUMP 0x272
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xca]
Exit stack: [V13, 0xca]

================================

Block 0xca
[0xca:0xe5]
---
Predecessors: [0x272]
Successors: []
---
0xca JUMPDEST
0xcb PUSH1 0x40
0xcd MLOAD
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 SWAP1
0xd7 SWAP2
0xd8 AND
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 SWAP2
0xe3 SUB
0xe4 SWAP1
0xe5 RETURN
---
0xca: JUMPDEST 
0xcb: V82 = 0x40
0xcd: V83 = M[0x40]
0xce: V84 = 0x1
0xd0: V85 = 0xa0
0xd2: V86 = 0x2
0xd4: V87 = EXP 0x2 0xa0
0xd5: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V89 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0xda: M[V83] = V89
0xdb: V90 = 0x20
0xdd: V91 = ADD 0x20 V83
0xde: V92 = 0x40
0xe0: V93 = M[0x40]
0xe3: V94 = SUB V91 V93
0xe5: RETURN V93 V94
---
Entry stack: [V13, 0xca, V250]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xca]

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x32]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V95 = CALLVALUE
0xe8: V96 = ISZERO V95
0xe9: V97 = 0xf1
0xec: JUMPI 0xf1 V96
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V98 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf1
[0xf1:0x104]
---
Predecessors: [0xe6]
Successors: [0x281]
---
0xf1 JUMPDEST
0xf2 PUSH2 0x82
0xf5 PUSH1 0x1
0xf7 PUSH1 0xa0
0xf9 PUSH1 0x2
0xfb EXP
0xfc SUB
0xfd PUSH1 0x4
0xff CALLDATALOAD
0x100 AND
0x101 PUSH2 0x281
0x104 JUMP
---
0xf1: JUMPDEST 
0xf2: V99 = 0x82
0xf5: V100 = 0x1
0xf7: V101 = 0xa0
0xf9: V102 = 0x2
0xfb: V103 = EXP 0x2 0xa0
0xfc: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd: V105 = 0x4
0xff: V106 = CALLDATALOAD 0x4
0x100: V107 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x101: V108 = 0x281
0x104: JUMP 0x281
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x82, V107]
Exit stack: [V13, 0x82, V107]

================================

Block 0x105
[0x105:0x122]
---
Predecessors: [0x8f]
Successors: [0x123, 0x127]
---
0x105 JUMPDEST
0x106 PUSH1 0x0
0x108 DUP1
0x109 SLOAD
0x10a DUP2
0x10b SWAP1
0x10c DUP2
0x10d SWAP1
0x10e DUP2
0x10f SWAP1
0x110 CALLER
0x111 PUSH1 0x1
0x113 PUSH1 0xa0
0x115 PUSH1 0x2
0x117 EXP
0x118 SUB
0x119 SWAP1
0x11a DUP2
0x11b AND
0x11c SWAP2
0x11d AND
0x11e EQ
0x11f PUSH2 0x127
0x122 JUMPI
---
0x105: JUMPDEST 
0x106: V109 = 0x0
0x109: V110 = S[0x0]
0x110: V111 = CALLER
0x111: V112 = 0x1
0x113: V113 = 0xa0
0x115: V114 = 0x2
0x117: V115 = EXP 0x2 0xa0
0x118: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11b: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x11d: V118 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V119 = EQ V118 V117
0x11f: V120 = 0x127
0x122: JUMPI 0x127 V119
---
Entry stack: [V13, 0xa3, V65]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0xa3, V65, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x105]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V121 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa3, V65, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa3, V65, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x127
[0x127:0x17c]
---
Predecessors: [0x105]
Successors: [0x17d, 0x181]
---
0x127 JUMPDEST
0x128 DUP5
0x129 SWAP3
0x12a POP
0x12b DUP3
0x12c PUSH1 0x1
0x12e PUSH1 0xa0
0x130 PUSH1 0x2
0x132 EXP
0x133 SUB
0x134 AND
0x135 PUSH4 0x70a08231
0x13a ADDRESS
0x13b PUSH1 0x0
0x13d PUSH1 0x40
0x13f MLOAD
0x140 PUSH1 0x20
0x142 ADD
0x143 MSTORE
0x144 PUSH1 0x40
0x146 MLOAD
0x147 PUSH1 0xe0
0x149 PUSH1 0x2
0x14b EXP
0x14c PUSH4 0xffffffff
0x151 DUP5
0x152 AND
0x153 MUL
0x154 DUP2
0x155 MSTORE
0x156 PUSH1 0x1
0x158 PUSH1 0xa0
0x15a PUSH1 0x2
0x15c EXP
0x15d SUB
0x15e SWAP1
0x15f SWAP2
0x160 AND
0x161 PUSH1 0x4
0x163 DUP3
0x164 ADD
0x165 MSTORE
0x166 PUSH1 0x24
0x168 ADD
0x169 PUSH1 0x20
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f DUP4
0x170 SUB
0x171 DUP2
0x172 PUSH1 0x0
0x174 DUP8
0x175 DUP1
0x176 EXTCODESIZE
0x177 ISZERO
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x127: JUMPDEST 
0x12c: V122 = 0x1
0x12e: V123 = 0xa0
0x130: V124 = 0x2
0x132: V125 = EXP 0x2 0xa0
0x133: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x134: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x135: V128 = 0x70a08231
0x13a: V129 = ADDRESS
0x13b: V130 = 0x0
0x13d: V131 = 0x40
0x13f: V132 = M[0x40]
0x140: V133 = 0x20
0x142: V134 = ADD 0x20 V132
0x143: M[V134] = 0x0
0x144: V135 = 0x40
0x146: V136 = M[0x40]
0x147: V137 = 0xe0
0x149: V138 = 0x2
0x14b: V139 = EXP 0x2 0xe0
0x14c: V140 = 0xffffffff
0x152: V141 = AND 0x70a08231 0xffffffff
0x153: V142 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x155: M[V136] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x156: V143 = 0x1
0x158: V144 = 0xa0
0x15a: V145 = 0x2
0x15c: V146 = EXP 0x2 0xa0
0x15d: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V148 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x161: V149 = 0x4
0x164: V150 = ADD V136 0x4
0x165: M[V150] = V148
0x166: V151 = 0x24
0x168: V152 = ADD 0x24 V136
0x169: V153 = 0x20
0x16b: V154 = 0x40
0x16d: V155 = M[0x40]
0x170: V156 = SUB V152 V155
0x172: V157 = 0x0
0x176: V158 = EXTCODESIZE V127
0x177: V159 = ISZERO V158
0x178: V160 = ISZERO V159
0x179: V161 = 0x181
0x17c: JUMPI 0x181 V160
---
Entry stack: [V13, 0xa3, V65, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S4, S1, S0, V127, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V127]
Exit stack: [V13, 0xa3, V65, 0x0, V65, 0x0, 0x0, V127, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V127]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x127]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V162 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa3, V65, 0x0, V65, 0x0, 0x0, V127, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa3, V65, 0x0, V65, 0x0, 0x0, V127, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V127]

================================

Block 0x181
[0x181:0x18d]
---
Predecessors: [0x127]
Successors: [0x18e, 0x192]
---
0x181 JUMPDEST
0x182 PUSH2 0x2c6
0x185 GAS
0x186 SUB
0x187 CALL
0x188 ISZERO
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x181: JUMPDEST 
0x182: V163 = 0x2c6
0x185: V164 = GAS
0x186: V165 = SUB V164 0x2c6
0x187: V166 = CALL V165 V127 0x0 V155 V156 V155 0x20
0x188: V167 = ISZERO V166
0x189: V168 = ISZERO V167
0x18a: V169 = 0x192
0x18d: JUMPI 0x192 V168
---
Entry stack: [V13, 0xa3, V65, 0x0, V65, 0x0, 0x0, V127, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V127]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xa3, V65, 0x0, V65, 0x0, 0x0, V127, 0x70a08231, V152]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x181]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V170 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa3, V65, 0x0, V65, 0x0, 0x0, V127, 0x70a08231, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa3, V65, 0x0, V65, 0x0, 0x0, V127, 0x70a08231, V152]

================================

Block 0x192
[0x192:0x23b]
---
Predecessors: [0x181]
Successors: [0x23c, 0x26a]
---
0x192 JUMPDEST
0x193 POP
0x194 POP
0x195 POP
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a MLOAD
0x19b SWAP3
0x19c POP
0x19d POP
0x19e PUSH1 0x1
0x1a0 PUSH1 0xa0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 SUB
0x1a6 DUP6
0x1a7 AND
0x1a8 PUSH1 0x40
0x1aa MLOAD
0x1ab PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x1cc DUP2
0x1cd MSTORE
0x1ce PUSH1 0x19
0x1d0 ADD
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 SWAP1
0x1d5 DUP2
0x1d6 SWAP1
0x1d7 SUB
0x1d8 SWAP1
0x1d9 SHA3
0x1da PUSH1 0x0
0x1dc SLOAD
0x1dd PUSH1 0xe0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SWAP1
0x1e3 SWAP2
0x1e4 DIV
0x1e5 SWAP1
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SUB
0x1ee AND
0x1ef DUP5
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 PUSH1 0xe0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 PUSH4 0xffffffff
0x1fd DUP6
0x1fe AND
0x1ff MUL
0x200 DUP2
0x201 MSTORE
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a SWAP1
0x20b SWAP3
0x20c AND
0x20d PUSH1 0x4
0x20f DUP4
0x210 ADD
0x211 MSTORE
0x212 PUSH1 0x24
0x214 DUP3
0x215 ADD
0x216 MSTORE
0x217 PUSH1 0x44
0x219 ADD
0x21a PUSH1 0x0
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 DUP4
0x221 SUB
0x222 DUP2
0x223 PUSH1 0x0
0x225 DUP8
0x226 PUSH2 0x646e
0x229 GAS
0x22a SUB
0x22b CALL
0x22c SWAP4
0x22d POP
0x22e POP
0x22f POP
0x230 POP
0x231 DUP1
0x232 ISZERO
0x233 ISZERO
0x234 PUSH1 0x1
0x236 EQ
0x237 ISZERO
0x238 PUSH2 0x26a
0x23b JUMPI
---
0x192: JUMPDEST 
0x196: V171 = 0x40
0x198: V172 = M[0x40]
0x19a: V173 = M[V172]
0x19e: V174 = 0x1
0x1a0: V175 = 0xa0
0x1a2: V176 = 0x2
0x1a4: V177 = EXP 0x2 0xa0
0x1a5: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a7: V179 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V180 = 0x40
0x1aa: V181 = M[0x40]
0x1ab: V182 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x1cd: M[V181] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x1ce: V183 = 0x19
0x1d0: V184 = ADD 0x19 V181
0x1d1: V185 = 0x40
0x1d3: V186 = M[0x40]
0x1d7: V187 = SUB V184 V186
0x1d9: V188 = SHA3 V186 V187
0x1da: V189 = 0x0
0x1dc: V190 = S[0x0]
0x1dd: V191 = 0xe0
0x1df: V192 = 0x2
0x1e1: V193 = EXP 0x2 0xe0
0x1e4: V194 = DIV V188 0x100000000000000000000000000000000000000000000000000000000
0x1e6: V195 = 0x1
0x1e8: V196 = 0xa0
0x1ea: V197 = 0x2
0x1ec: V198 = EXP 0x2 0xa0
0x1ed: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ee: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x1f0: V201 = 0x40
0x1f2: V202 = M[0x40]
0x1f3: V203 = 0xe0
0x1f5: V204 = 0x2
0x1f7: V205 = EXP 0x2 0xe0
0x1f8: V206 = 0xffffffff
0x1fe: V207 = AND V194 0xffffffff
0x1ff: V208 = MUL V207 0x100000000000000000000000000000000000000000000000000000000
0x201: M[V202] = V208
0x202: V209 = 0x1
0x204: V210 = 0xa0
0x206: V211 = 0x2
0x208: V212 = EXP 0x2 0xa0
0x209: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20c: V214 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V215 = 0x4
0x210: V216 = ADD V202 0x4
0x211: M[V216] = V214
0x212: V217 = 0x24
0x215: V218 = ADD V202 0x24
0x216: M[V218] = V173
0x217: V219 = 0x44
0x219: V220 = ADD 0x44 V202
0x21a: V221 = 0x0
0x21c: V222 = 0x40
0x21e: V223 = M[0x40]
0x221: V224 = SUB V220 V223
0x223: V225 = 0x0
0x226: V226 = 0x646e
0x229: V227 = GAS
0x22a: V228 = SUB V227 0x646e
0x22b: V229 = CALL V228 V179 0x0 V223 V224 V223 0x0
0x232: V230 = ISZERO V229
0x233: V231 = ISZERO V230
0x234: V232 = 0x1
0x236: V233 = EQ 0x1 V231
0x237: V234 = ISZERO V233
0x238: V235 = 0x26a
0x23b: JUMPI 0x26a V234
---
Entry stack: [V13, 0xa3, V65, 0x0, V65, 0x0, 0x0, V127, 0x70a08231, V152]
Stack pops: 8
Stack additions: [S7, S6, S5, V173, V229]
Exit stack: [V13, 0xa3, V65, 0x0, V65, V173, V229]

================================

Block 0x23c
[0x23c:0x269]
---
Predecessors: [0x192]
Successors: [0x26a]
---
0x23c PUSH1 0x0
0x23e PUSH32 0x4bbb293e05add540dc16f077481cb7f32a57851eb1a6d9b59c714f15ab70837a
0x25f PUSH1 0x40
0x261 MLOAD
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 SWAP2
0x267 SUB
0x268 SWAP1
0x269 LOG2
---
0x23c: V236 = 0x0
0x23e: V237 = 0x4bbb293e05add540dc16f077481cb7f32a57851eb1a6d9b59c714f15ab70837a
0x25f: V238 = 0x40
0x261: V239 = M[0x40]
0x262: V240 = 0x40
0x264: V241 = M[0x40]
0x267: V242 = SUB V239 V241
0x269: LOG V241 V242 0x4bbb293e05add540dc16f077481cb7f32a57851eb1a6d9b59c714f15ab70837a 0x0
---
Entry stack: [V13, 0xa3, V65, 0x0, V65, V173, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa3, V65, 0x0, V65, V173, V229]

================================

Block 0x26a
[0x26a:0x271]
---
Predecessors: [0x192, 0x23c]
Successors: [0xa3]
---
0x26a JUMPDEST
0x26b SWAP5
0x26c SWAP4
0x26d POP
0x26e POP
0x26f POP
0x270 POP
0x271 JUMP
---
0x26a: JUMPDEST 
0x271: JUMP 0xa3
---
Entry stack: [V13, 0xa3, V65, 0x0, V65, V173, V229]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V13, V229]

================================

Block 0x272
[0x272:0x280]
---
Predecessors: [0xc2]
Successors: [0xca]
---
0x272 JUMPDEST
0x273 PUSH1 0x0
0x275 SLOAD
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e AND
0x27f DUP2
0x280 JUMP
---
0x272: JUMPDEST 
0x273: V243 = 0x0
0x275: V244 = S[0x0]
0x276: V245 = 0x1
0x278: V246 = 0xa0
0x27a: V247 = 0x2
0x27c: V248 = EXP 0x2 0xa0
0x27d: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x280: JUMP 0xca
---
Entry stack: [V13, 0xca]
Stack pops: 1
Stack additions: [S0, V250]
Exit stack: [V13, 0xca, V250]

================================

Block 0x281
[0x281:0x297]
---
Predecessors: [0xf1]
Successors: [0x298, 0x29c]
---
0x281 JUMPDEST
0x282 PUSH1 0x0
0x284 SLOAD
0x285 CALLER
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e SWAP1
0x28f DUP2
0x290 AND
0x291 SWAP2
0x292 AND
0x293 EQ
0x294 PUSH2 0x29c
0x297 JUMPI
---
0x281: JUMPDEST 
0x282: V251 = 0x0
0x284: V252 = S[0x0]
0x285: V253 = CALLER
0x286: V254 = 0x1
0x288: V255 = 0xa0
0x28a: V256 = 0x2
0x28c: V257 = EXP 0x2 0xa0
0x28d: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x292: V260 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x293: V261 = EQ V260 V259
0x294: V262 = 0x29c
0x297: JUMPI 0x29c V261
---
Entry stack: [V13, 0x82, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V107]

================================

Block 0x298
[0x298:0x29b]
---
Predecessors: [0x281]
Successors: []
---
0x298 PUSH1 0x0
0x29a DUP1
0x29b REVERT
---
0x298: V263 = 0x0
0x29b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V107]

================================

Block 0x29c
[0x29c:0x2ac]
---
Predecessors: [0x281]
Successors: [0x2ad, 0x2b1]
---
0x29c JUMPDEST
0x29d PUSH1 0x1
0x29f PUSH1 0xa0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 SUB
0x2a5 DUP2
0x2a6 AND
0x2a7 ISZERO
0x2a8 ISZERO
0x2a9 PUSH2 0x2b1
0x2ac JUMPI
---
0x29c: JUMPDEST 
0x29d: V264 = 0x1
0x29f: V265 = 0xa0
0x2a1: V266 = 0x2
0x2a3: V267 = EXP 0x2 0xa0
0x2a4: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a6: V269 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V270 = ISZERO V269
0x2a8: V271 = ISZERO V270
0x2a9: V272 = 0x2b1
0x2ac: JUMPI 0x2b1 V271
---
Entry stack: [V13, 0x82, V107]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x82, V107]

================================

Block 0x2ad
[0x2ad:0x2b0]
---
Predecessors: [0x29c]
Successors: []
---
0x2ad PUSH1 0x0
0x2af DUP1
0x2b0 REVERT
---
0x2ad: V273 = 0x0
0x2b0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V107]

================================

Block 0x2b1
[0x2b1:0x31b]
---
Predecessors: [0x29c]
Successors: [0x82]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x0
0x2b4 SLOAD
0x2b5 PUSH1 0x1
0x2b7 PUSH1 0xa0
0x2b9 PUSH1 0x2
0x2bb EXP
0x2bc SUB
0x2bd DUP1
0x2be DUP4
0x2bf AND
0x2c0 SWAP2
0x2c1 AND
0x2c2 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 DUP1
0x2ea SWAP2
0x2eb SUB
0x2ec SWAP1
0x2ed LOG3
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 SLOAD
0x2f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x307 NOT
0x308 AND
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 SWAP3
0x312 SWAP1
0x313 SWAP3
0x314 AND
0x315 SWAP2
0x316 SWAP1
0x317 SWAP2
0x318 OR
0x319 SWAP1
0x31a SSTORE
0x31b JUMP
---
0x2b1: JUMPDEST 
0x2b2: V274 = 0x0
0x2b4: V275 = S[0x0]
0x2b5: V276 = 0x1
0x2b7: V277 = 0xa0
0x2b9: V278 = 0x2
0x2bb: V279 = EXP 0x2 0xa0
0x2bc: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bf: V281 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: V282 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V283 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2e3: V284 = 0x40
0x2e5: V285 = M[0x40]
0x2e6: V286 = 0x40
0x2e8: V287 = M[0x40]
0x2eb: V288 = SUB V285 V287
0x2ed: LOG V287 V288 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V282 V281
0x2ee: V289 = 0x0
0x2f1: V290 = S[0x0]
0x2f2: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x307: V292 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x308: V293 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V290
0x309: V294 = 0x1
0x30b: V295 = 0xa0
0x30d: V296 = 0x2
0x30f: V297 = EXP 0x2 0xa0
0x310: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x314: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x318: V300 = OR V299 V293
0x31a: S[0x0] = V300
0x31b: JUMP 0x82
---
Entry stack: [V13, 0x82, V107]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x31c
[0x31c:0x32e]
---
Predecessors: []
Successors: [0x32f]
Has unresolved jump.
---
0x31c STOP
0x31d LOG1
0x31e PUSH6 0x627a7a723058
0x325 SHA3
0x326 JUMP
0x327 DUP14
0x328 MISSING 0x22
0x329 MISSING 0x5d
0x32a MISSING 0x2c
0x32b MISSING 0xa6
0x32c MISSING 0xf
0x32d MISSING 0xd1
0x32e JUMPI
---
0x31c: STOP 
0x31d: LOG S0 S1 S2
0x31e: V301 = 0x627a7a723058
0x325: V302 = SHA3 0x627a7a723058 S3
0x326: JUMP V302
0x328: MISSING 0x22
0x329: MISSING 0x5d
0x32a: MISSING 0x2c
0x32b: MISSING 0xa6
0x32c: MISSING 0xf
0x32d: MISSING 0xd1
0x32e: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13]
Exit stack: []

================================

Block 0x32f
[0x32f:0x347]
---
Predecessors: [0x31c]
Successors: []
---
0x32f MISSING 0xa9
0x330 PUSH23 0x57992f90fdb5406b8a2f9b226c01ffa94fc74198f10029
---
0x32f: MISSING 0xa9
0x330: V303 = 0x57992f90fdb5406b8a2f9b226c01ffa94fc74198f10029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x57992f90fdb5406b8a2f9b226c01ffa94fc74198f10029]
Exit stack: []

================================

Function 0:
Public function signature: 0x54ff18af
Entry block: 0x84
Exit block: 0xa3
Body: 0x84, 0x8b, 0x8f, 0xa3, 0x105, 0x123, 0x127, 0x17d, 0x181, 0x18e, 0x192, 0x23c, 0x26a

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xb7
Exit block: 0xca
Body: 0xb7, 0xbe, 0xc2, 0xca, 0x272

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0xe6
Exit block: 0x82
Body: 0x82, 0xe6, 0xed, 0xf1, 0x281, 0x298, 0x29c, 0x2ad, 0x2b1

Function 3:
Public fallback function
Entry block: 0x3d
Exit block: 0x7e
Body: 0x3d, 0x45, 0x49, 0x7e, 0x82

