Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x30]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x30
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x30
0xa: JUMPI 0x30 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6e]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1698755f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6e
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1698755f
0x20: V14 = EQ V12 0x1698755f
0x21: V15 = 0x6e
0x24: JUMPI 0x6e V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x8f]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0x8f
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0x8f
0x2f: JUMPI 0x8f V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x33]
---
Predecessors: [0x0, 0x25]
Successors: [0x34]
---
0x30 JUMPDEST
0x31 PUSH2 0x6c
---
0x30: JUMPDEST 
0x31: V19 = 0x6c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V12, 0x6c]

================================

Block 0x34
[0x34:0x63]
---
Predecessors: [0x30]
Successors: [0x64, 0x69]
---
0x34 JUMPDEST
0x35 PUSH1 0x0
0x37 DUP1
0x38 SLOAD
0x39 PUSH1 0x40
0x3b MLOAD
0x3c PUSH1 0x1
0x3e PUSH1 0xa0
0x40 PUSH1 0x2
0x42 EXP
0x43 SUB
0x44 SWAP1
0x45 SWAP2
0x46 AND
0x47 SWAP2
0x48 CALLVALUE
0x49 DUP1
0x4a ISZERO
0x4b PUSH2 0x8fc
0x4e MUL
0x4f SWAP3
0x50 SWAP1
0x51 SWAP2
0x52 DUP2
0x53 DUP2
0x54 DUP2
0x55 DUP6
0x56 DUP9
0x57 DUP9
0x58 CALL
0x59 SWAP4
0x5a POP
0x5b POP
0x5c POP
0x5d POP
0x5e ISZERO
0x5f ISZERO
0x60 PUSH2 0x69
0x63 JUMPI
---
0x34: JUMPDEST 
0x35: V20 = 0x0
0x38: V21 = S[0x0]
0x39: V22 = 0x40
0x3b: V23 = M[0x40]
0x3c: V24 = 0x1
0x3e: V25 = 0xa0
0x40: V26 = 0x2
0x42: V27 = EXP 0x2 0xa0
0x43: V28 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46: V29 = AND V21 0xffffffffffffffffffffffffffffffffffffffff
0x48: V30 = CALLVALUE
0x4a: V31 = ISZERO V30
0x4b: V32 = 0x8fc
0x4e: V33 = MUL 0x8fc V31
0x58: V34 = CALL V33 V29 V30 V23 0x0 V23 0x0
0x5e: V35 = ISZERO V34
0x5f: V36 = ISZERO V35
0x60: V37 = 0x69
0x63: JUMPI 0x69 V36
---
Entry stack: [V12, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c]

================================

Block 0x64
[0x64:0x68]
---
Predecessors: [0x34]
Successors: []
---
0x64 PUSH1 0x0
0x66 PUSH1 0x0
0x68 REVERT
---
0x64: V38 = 0x0
0x66: V39 = 0x0
0x68: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c]

================================

Block 0x69
[0x69:0x69]
---
Predecessors: [0x34]
Successors: [0x6a]
---
0x69 JUMPDEST
---
0x69: JUMPDEST 
---
Entry stack: [V12, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c]

================================

Block 0x6a
[0x6a:0x6b]
---
Predecessors: [0x69]
Successors: [0x6c]
---
0x6a JUMPDEST
0x6b JUMP
---
0x6a: JUMPDEST 
0x6b: JUMP 0x6c
---
Entry stack: [V12, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x6a, 0x1dc]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e
[0x6e:0x74]
---
Predecessors: [0xb]
Successors: [0x75, 0x76]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 ISZERO
0x71 PUSH2 0x76
0x74 JUMPI
---
0x6e: JUMPDEST 
0x6f: V40 = CALLVALUE
0x70: V41 = ISZERO V40
0x71: V42 = 0x76
0x74: JUMPI 0x76 V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75
[0x75:0x75]
---
Predecessors: [0x6e]
Successors: []
---
0x75 INVALID
---
0x75: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76
[0x76:0x8c]
---
Predecessors: [0x6e]
Successors: [0xa1]
---
0x76 JUMPDEST
0x77 PUSH2 0x6c
0x7a PUSH1 0x1
0x7c PUSH1 0xa0
0x7e PUSH1 0x2
0x80 EXP
0x81 SUB
0x82 PUSH1 0x4
0x84 CALLDATALOAD
0x85 AND
0x86 PUSH1 0x24
0x88 CALLDATALOAD
0x89 PUSH2 0xa1
0x8c JUMP
---
0x76: JUMPDEST 
0x77: V43 = 0x6c
0x7a: V44 = 0x1
0x7c: V45 = 0xa0
0x7e: V46 = 0x2
0x80: V47 = EXP 0x2 0xa0
0x81: V48 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82: V49 = 0x4
0x84: V50 = CALLDATALOAD 0x4
0x85: V51 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x86: V52 = 0x24
0x88: V53 = CALLDATALOAD 0x24
0x89: V54 = 0xa1
0x8c: JUMP 0xa1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6c, V51, V53]
Exit stack: [V12, 0x6c, V51, V53]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: []
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8f
[0x8f:0x95]
---
Predecessors: [0x25]
Successors: [0x96, 0x97]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 ISZERO
0x92 PUSH2 0x97
0x95 JUMPI
---
0x8f: JUMPDEST 
0x90: V55 = CALLVALUE
0x91: V56 = ISZERO V55
0x92: V57 = 0x97
0x95: JUMPI 0x97 V56
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x96
[0x96:0x96]
---
Predecessors: [0x8f]
Successors: []
---
0x96 INVALID
---
0x96: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x97
[0x97:0x9e]
---
Predecessors: [0x8f]
Successors: [0x1e0]
---
0x97 JUMPDEST
0x98 PUSH2 0x6c
0x9b PUSH2 0x1e0
0x9e JUMP
---
0x97: JUMPDEST 
0x98: V58 = 0x6c
0x9b: V59 = 0x1e0
0x9e: JUMP 0x1e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V12, 0x6c]

================================

Block 0x9f
[0x9f:0xa0]
---
Predecessors: []
Successors: []
---
0x9f JUMPDEST
0xa0 STOP
---
0x9f: JUMPDEST 
0xa0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa1
[0xa1:0xbc]
---
Predecessors: [0x76]
Successors: [0xbd, 0xc2]
---
0xa1 JUMPDEST
0xa2 PUSH7 0x2386f26fc10000
0xaa CALLER
0xab PUSH1 0x1
0xad PUSH1 0xa0
0xaf PUSH1 0x2
0xb1 EXP
0xb2 SUB
0xb3 AND
0xb4 BALANCE
0xb5 LT
0xb6 ISZERO
0xb7 DUP1
0xb8 ISZERO
0xb9 PUSH2 0xc2
0xbc JUMPI
---
0xa1: JUMPDEST 
0xa2: V60 = 0x2386f26fc10000
0xaa: V61 = CALLER
0xab: V62 = 0x1
0xad: V63 = 0xa0
0xaf: V64 = 0x2
0xb1: V65 = EXP 0x2 0xa0
0xb2: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xb4: V68 = BALANCE V67
0xb5: V69 = LT V68 0x2386f26fc10000
0xb6: V70 = ISZERO V69
0xb8: V71 = ISZERO V70
0xb9: V72 = 0xc2
0xbc: JUMPI 0xc2 V71
---
Entry stack: [V12, 0x6c, V51, V53]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V12, 0x6c, V51, V53, V70]

================================

Block 0xbd
[0xbd:0xc1]
---
Predecessors: [0xa1]
Successors: [0xc2]
---
0xbd POP
0xbe PUSH1 0x0
0xc0 DUP2
0xc1 GT
---
0xbe: V73 = 0x0
0xc1: V74 = GT V53 0x0
---
Entry stack: [V12, 0x6c, V51, V53, V70]
Stack pops: 2
Stack additions: [S1, V74]
Exit stack: [V12, 0x6c, V51, V53, V74]

================================

Block 0xc2
[0xc2:0xc7]
---
Predecessors: [0xa1, 0xbd]
Successors: [0xc8, 0x19b]
---
0xc2 JUMPDEST
0xc3 ISZERO
0xc4 PUSH2 0x19b
0xc7 JUMPI
---
0xc2: JUMPDEST 
0xc3: V75 = ISZERO S0
0xc4: V76 = 0x19b
0xc7: JUMPI 0x19b V75
---
Entry stack: [V12, 0x6c, V51, V53, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6c, V51, V53]

================================

Block 0xc8
[0xc8:0x150]
---
Predecessors: [0xc2]
Successors: [0x151, 0x156]
---
0xc8 PUSH1 0x40
0xca DUP1
0xcb MLOAD
0xcc PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0xed DUP2
0xee MSTORE
0xef DUP2
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 SWAP1
0xf4 SUB
0xf5 PUSH1 0x19
0xf7 ADD
0xf8 DUP2
0xf9 SHA3
0xfa PUSH1 0x0
0xfc DUP1
0xfd SLOAD
0xfe PUSH4 0xffffffff
0x103 PUSH1 0xe0
0x105 PUSH1 0x2
0x107 EXP
0x108 SWAP4
0x109 DUP5
0x10a SWAP1
0x10b DIV
0x10c SWAP1
0x10d DUP2
0x10e AND
0x10f SWAP1
0x110 SWAP4
0x111 MUL
0x112 DUP5
0x113 MSTORE
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c SWAP1
0x11d DUP2
0x11e AND
0x11f PUSH1 0x4
0x121 DUP6
0x122 ADD
0x123 MSTORE
0x124 PUSH1 0x24
0x126 DUP5
0x127 ADD
0x128 DUP7
0x129 SWAP1
0x12a MSTORE
0x12b SWAP4
0x12c MLOAD
0x12d SWAP4
0x12e DUP7
0x12f AND
0x130 SWAP4
0x131 SWAP2
0x132 SWAP3
0x133 PUSH1 0x44
0x135 DUP1
0x136 DUP3
0x137 ADD
0x138 SWAP4
0x139 SWAP2
0x13a DUP3
0x13b SWAP1
0x13c SUB
0x13d ADD
0x13e DUP2
0x13f DUP4
0x140 DUP8
0x141 PUSH2 0x61da
0x144 GAS
0x145 SUB
0x146 CALL
0x147 SWAP3
0x148 POP
0x149 POP
0x14a POP
0x14b ISZERO
0x14c ISZERO
0x14d PUSH2 0x156
0x150 JUMPI
---
0xc8: V77 = 0x40
0xcb: V78 = M[0x40]
0xcc: V79 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0xee: M[V78] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0xf0: V80 = M[0x40]
0xf4: V81 = SUB V78 V80
0xf5: V82 = 0x19
0xf7: V83 = ADD 0x19 V81
0xf9: V84 = SHA3 V80 V83
0xfa: V85 = 0x0
0xfd: V86 = S[0x0]
0xfe: V87 = 0xffffffff
0x103: V88 = 0xe0
0x105: V89 = 0x2
0x107: V90 = EXP 0x2 0xe0
0x10b: V91 = DIV V84 0x100000000000000000000000000000000000000000000000000000000
0x10e: V92 = AND V91 0xffffffff
0x111: V93 = MUL 0x100000000000000000000000000000000000000000000000000000000 V92
0x113: M[V80] = V93
0x114: V94 = 0x1
0x116: V95 = 0xa0
0x118: V96 = 0x2
0x11a: V97 = EXP 0x2 0xa0
0x11b: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x11f: V100 = 0x4
0x122: V101 = ADD V80 0x4
0x123: M[V101] = V99
0x124: V102 = 0x24
0x127: V103 = ADD V80 0x24
0x12a: M[V103] = V53
0x12c: V104 = M[0x40]
0x12f: V105 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0x133: V106 = 0x44
0x137: V107 = ADD V80 0x44
0x13c: V108 = SUB V80 V104
0x13d: V109 = ADD V108 0x44
0x141: V110 = 0x61da
0x144: V111 = GAS
0x145: V112 = SUB V111 0x61da
0x146: V113 = CALL V112 V105 0x0 V104 V109 V104 0x0
0x14b: V114 = ISZERO V113
0x14c: V115 = ISZERO V114
0x14d: V116 = 0x156
0x150: JUMPI 0x156 V115
---
Entry stack: [V12, 0x6c, V51, V53]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x6c, V51, V53]

================================

Block 0x151
[0x151:0x155]
---
Predecessors: [0xc8]
Successors: []
---
0x151 PUSH1 0x0
0x153 PUSH1 0x0
0x155 REVERT
---
0x151: V117 = 0x0
0x153: V118 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6c, V51, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c, V51, V53]

================================

Block 0x156
[0x156:0x195]
---
Predecessors: [0xc8]
Successors: [0x196]
---
0x156 JUMPDEST
0x157 PUSH1 0x40
0x159 DUP1
0x15a MLOAD
0x15b DUP3
0x15c DUP2
0x15d MSTORE
0x15e SWAP1
0x15f MLOAD
0x160 PUSH1 0x1
0x162 PUSH1 0xa0
0x164 PUSH1 0x2
0x166 EXP
0x167 SUB
0x168 DUP5
0x169 AND
0x16a SWAP2
0x16b PUSH32 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4
0x18c SWAP2
0x18d SWAP1
0x18e DUP2
0x18f SWAP1
0x190 SUB
0x191 PUSH1 0x20
0x193 ADD
0x194 SWAP1
0x195 LOG2
---
0x156: JUMPDEST 
0x157: V119 = 0x40
0x15a: V120 = M[0x40]
0x15d: M[V120] = V53
0x15f: V121 = M[0x40]
0x160: V122 = 0x1
0x162: V123 = 0xa0
0x164: V124 = 0x2
0x166: V125 = EXP 0x2 0xa0
0x167: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169: V127 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V128 = 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4
0x190: V129 = SUB V120 V121
0x191: V130 = 0x20
0x193: V131 = ADD 0x20 V129
0x195: LOG V121 V131 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4 V127
---
Entry stack: [V12, 0x6c, V51, V53]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x6c, V51, V53]

================================

Block 0x196
[0x196:0x19a]
---
Predecessors: [0x156]
Successors: [0x1db]
---
0x196 JUMPDEST
0x197 PUSH2 0x1db
0x19a JUMP
---
0x196: JUMPDEST 
0x197: V132 = 0x1db
0x19a: JUMP 0x1db
---
Entry stack: [V12, 0x6c, V51, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c, V51, V53]

================================

Block 0x19b
[0x19b:0x1da]
---
Predecessors: [0xc2]
Successors: [0x1db]
---
0x19b JUMPDEST
0x19c PUSH1 0x40
0x19e DUP1
0x19f MLOAD
0x1a0 DUP3
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 SWAP1
0x1a4 MLOAD
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad DUP5
0x1ae AND
0x1af SWAP2
0x1b0 PUSH32 0xf4fc7b5d6fac8f12f768fbbaec1b6ac68a7058da0d0230a8119a75895d908f01
0x1d1 SWAP2
0x1d2 SWAP1
0x1d3 DUP2
0x1d4 SWAP1
0x1d5 SUB
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP1
0x1da LOG2
---
0x19b: JUMPDEST 
0x19c: V133 = 0x40
0x19f: V134 = M[0x40]
0x1a2: M[V134] = V53
0x1a4: V135 = M[0x40]
0x1a5: V136 = 0x1
0x1a7: V137 = 0xa0
0x1a9: V138 = 0x2
0x1ab: V139 = EXP 0x2 0xa0
0x1ac: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V141 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V142 = 0xf4fc7b5d6fac8f12f768fbbaec1b6ac68a7058da0d0230a8119a75895d908f01
0x1d5: V143 = SUB V134 V135
0x1d6: V144 = 0x20
0x1d8: V145 = ADD 0x20 V143
0x1da: LOG V135 V145 0xf4fc7b5d6fac8f12f768fbbaec1b6ac68a7058da0d0230a8119a75895d908f01 V141
---
Entry stack: [V12, 0x6c, V51, V53]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x6c, V51, V53]

================================

Block 0x1db
[0x1db:0x1db]
---
Predecessors: [0x196, 0x19b]
Successors: [0x1dc]
---
0x1db JUMPDEST
---
0x1db: JUMPDEST 
---
Entry stack: [V12, 0x6c, V51, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c, V51, V53]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1db]
Successors: [0x6c]
---
0x1dc JUMPDEST
0x1dd POP
0x1de POP
0x1df JUMP
---
0x1dc: JUMPDEST 
0x1df: JUMP 0x6c
---
Entry stack: [V12, 0x6c, V51, V53]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e0
[0x1e0:0x1f6]
---
Predecessors: [0x97]
Successors: [0x1f7, 0x1fc]
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x0
0x1e3 SLOAD
0x1e4 CALLER
0x1e5 PUSH1 0x1
0x1e7 PUSH1 0xa0
0x1e9 PUSH1 0x2
0x1eb EXP
0x1ec SUB
0x1ed SWAP1
0x1ee DUP2
0x1ef AND
0x1f0 SWAP2
0x1f1 AND
0x1f2 EQ
0x1f3 PUSH2 0x1fc
0x1f6 JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V146 = 0x0
0x1e3: V147 = S[0x0]
0x1e4: V148 = CALLER
0x1e5: V149 = 0x1
0x1e7: V150 = 0xa0
0x1e9: V151 = 0x2
0x1eb: V152 = EXP 0x2 0xa0
0x1ec: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1f1: V155 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V156 = EQ V155 V154
0x1f3: V157 = 0x1fc
0x1f6: JUMPI 0x1fc V156
---
Entry stack: [V12, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c]

================================

Block 0x1f7
[0x1f7:0x1fb]
---
Predecessors: [0x1e0]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 PUSH1 0x0
0x1fb REVERT
---
0x1f7: V158 = 0x0
0x1f9: V159 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c]

================================

Block 0x1fc
[0x1fc:0x209]
---
Predecessors: [0x1e0]
Successors: []
---
0x1fc JUMPDEST
0x1fd PUSH1 0x0
0x1ff SLOAD
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 AND
0x209 SELFDESTRUCT
---
0x1fc: JUMPDEST 
0x1fd: V160 = 0x0
0x1ff: V161 = S[0x0]
0x200: V162 = 0x1
0x202: V163 = 0xa0
0x204: V164 = 0x2
0x206: V165 = EXP 0x2 0xa0
0x207: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x208: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x209: SELFDESTRUCT V167
---
Entry stack: [V12, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6c]

================================

Block 0x20a
[0x20a:0x20a]
---
Predecessors: []
Successors: [0x20b]
---
0x20a JUMPDEST
---
0x20a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20b
[0x20b:0x243]
---
Predecessors: [0x20a]
Successors: []
---
0x20b JUMPDEST
0x20c JUMP
0x20d STOP
0x20e LOG1
0x20f PUSH6 0x627a7a723058
0x216 SHA3
0x217 DUP2
0x218 PUSH13 0xfeadfcf1c749418277b63fc461
0x226 PUSH29 0xafd5e1c1d2490d05d02aa282447c1e70029
---
0x20b: JUMPDEST 
0x20c: JUMP S0
0x20d: STOP 
0x20e: LOG S0 S1 S2
0x20f: V168 = 0x627a7a723058
0x216: V169 = SHA3 0x627a7a723058 S3
0x218: V170 = 0xfeadfcf1c749418277b63fc461
0x226: V171 = 0xafd5e1c1d2490d05d02aa282447c1e70029
---
Entry stack: []
Stack pops: 4
Stack additions: [0xafd5e1c1d2490d05d02aa282447c1e70029, 0xfeadfcf1c749418277b63fc461, S4, V169, S4]
Exit stack: []

================================

Function 0:
Public function signature: 0x1698755f
Entry block: 0x6e
Exit block: 0x6c
Body: 0x6c, 0x6e, 0x75, 0x76, 0xa1, 0xbd, 0xc2, 0xc8, 0x151, 0x156, 0x196, 0x19b, 0x1db, 0x1dc

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x8f
Exit block: 0x1fc
Body: 0x8f, 0x96, 0x97, 0x1e0, 0x1f7, 0x1fc

Function 2:
Public fallback function
Entry block: 0x30
Exit block: 0x6c
Body: 0x30, 0x34, 0x64, 0x69, 0x6a, 0x6c

