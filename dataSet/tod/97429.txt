Block 0x0
[0x0:0x1e]
---
Predecessors: []
Successors: [0x1f, 0x42]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH4 0xffffffff
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 AND
0x14 PUSH4 0x41c0e1b5
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x42
0x1e JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xffffffff
0xa: V3 = 0xe0
0xc: V4 = 0x2
0xe: V5 = EXP 0x2 0xe0
0xf: V6 = 0x0
0x11: V7 = CALLDATALOAD 0x0
0x12: V8 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x13: V9 = AND V8 0xffffffff
0x14: V10 = 0x41c0e1b5
0x1a: V11 = EQ V9 0x41c0e1b5
0x1b: V12 = 0x42
0x1e: JUMPI 0x42 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0x0]
Successors: [0x2a, 0x54]
---
0x1f DUP1
0x20 PUSH4 0x474b2d52
0x25 EQ
0x26 PUSH2 0x54
0x29 JUMPI
---
0x20: V13 = 0x474b2d52
0x25: V14 = EQ 0x474b2d52 V9
0x26: V15 = 0x54
0x29: JUMPI 0x54 V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x6a]
---
0x2a DUP1
0x2b PUSH4 0xa87d942c
0x30 EQ
0x31 PUSH2 0x6a
0x34 JUMPI
---
0x2b: V16 = 0xa87d942c
0x30: V17 = EQ 0xa87d942c V9
0x31: V18 = 0x6a
0x34: JUMPI 0x6a V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x8c]
---
0x35 DUP1
0x36 PUSH4 0xddf252ad
0x3b EQ
0x3c PUSH2 0x8c
0x3f JUMPI
---
0x36: V19 = 0xddf252ad
0x3b: V20 = EQ 0xddf252ad V9
0x3c: V21 = 0x8c
0x3f: JUMPI 0x8c V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x40
[0x40:0x41]
---
Predecessors: [0x35]
Successors: []
---
0x40 JUMPDEST
0x41 INVALID
---
0x40: JUMPDEST 
0x41: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x42
[0x42:0x48]
---
Predecessors: [0x0]
Successors: [0x49, 0x4a]
---
0x42 JUMPDEST
0x43 CALLVALUE
0x44 ISZERO
0x45 PUSH2 0x4a
0x48 JUMPI
---
0x42: JUMPDEST 
0x43: V22 = CALLVALUE
0x44: V23 = ISZERO V22
0x45: V24 = 0x4a
0x48: JUMPI 0x4a V23
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x49
[0x49:0x49]
---
Predecessors: [0x42]
Successors: []
---
0x49 INVALID
---
0x49: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x4a
[0x4a:0x51]
---
Predecessors: [0x42]
Successors: [0xb3]
---
0x4a JUMPDEST
0x4b PUSH2 0x52
0x4e PUSH2 0xb3
0x51 JUMP
---
0x4a: JUMPDEST 
0x4b: V25 = 0x52
0x4e: V26 = 0xb3
0x51: JUMP 0xb3
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x52]
Exit stack: [V9, 0x52]

================================

Block 0x52
[0x52:0x53]
---
Predecessors: [0xd9, 0x119, 0x25e]
Successors: []
---
0x52 JUMPDEST
0x53 STOP
---
0x52: JUMPDEST 
0x53: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x54
[0x54:0x67]
---
Predecessors: [0x1f]
Successors: [0xdb]
---
0x54 JUMPDEST
0x55 PUSH2 0x52
0x58 PUSH1 0x1
0x5a PUSH1 0xa0
0x5c PUSH1 0x2
0x5e EXP
0x5f SUB
0x60 PUSH1 0x4
0x62 CALLDATALOAD
0x63 AND
0x64 PUSH2 0xdb
0x67 JUMP
---
0x54: JUMPDEST 
0x55: V27 = 0x52
0x58: V28 = 0x1
0x5a: V29 = 0xa0
0x5c: V30 = 0x2
0x5e: V31 = EXP 0x2 0xa0
0x5f: V32 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60: V33 = 0x4
0x62: V34 = CALLDATALOAD 0x4
0x63: V35 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x64: V36 = 0xdb
0x67: JUMP 0xdb
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x52, V35]
Exit stack: [V9, 0x52, V35]

================================

Block 0x68
[0x68:0x69]
---
Predecessors: []
Successors: []
---
0x68 JUMPDEST
0x69 STOP
---
0x68: JUMPDEST 
0x69: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a
[0x6a:0x70]
---
Predecessors: [0x2a]
Successors: [0x71, 0x72]
---
0x6a JUMPDEST
0x6b CALLVALUE
0x6c ISZERO
0x6d PUSH2 0x72
0x70 JUMPI
---
0x6a: JUMPDEST 
0x6b: V37 = CALLVALUE
0x6c: V38 = ISZERO V37
0x6d: V39 = 0x72
0x70: JUMPI 0x72 V38
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x71
[0x71:0x71]
---
Predecessors: [0x6a]
Successors: []
---
0x71 INVALID
---
0x71: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x6a]
Successors: [0x11c]
---
0x72 JUMPDEST
0x73 PUSH2 0x7a
0x76 PUSH2 0x11c
0x79 JUMP
---
0x72: JUMPDEST 
0x73: V40 = 0x7a
0x76: V41 = 0x11c
0x79: JUMP 0x11c
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V9, 0x7a]

================================

Block 0x7a
[0x7a:0x8b]
---
Predecessors: [0x120]
Successors: []
---
0x7a JUMPDEST
0x7b PUSH1 0x40
0x7d DUP1
0x7e MLOAD
0x7f SWAP2
0x80 DUP3
0x81 MSTORE
0x82 MLOAD
0x83 SWAP1
0x84 DUP2
0x85 SWAP1
0x86 SUB
0x87 PUSH1 0x20
0x89 ADD
0x8a SWAP1
0x8b RETURN
---
0x7a: JUMPDEST 
0x7b: V42 = 0x40
0x7e: V43 = M[0x40]
0x81: M[V43] = V113
0x82: V44 = M[0x40]
0x86: V45 = SUB V43 V44
0x87: V46 = 0x20
0x89: V47 = ADD 0x20 V45
0x8b: RETURN V44 V47
---
Entry stack: [V9, V113]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x8c
[0x8c:0x92]
---
Predecessors: [0x35]
Successors: [0x93, 0x94]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e ISZERO
0x8f PUSH2 0x94
0x92 JUMPI
---
0x8c: JUMPDEST 
0x8d: V48 = CALLVALUE
0x8e: V49 = ISZERO V48
0x8f: V50 = 0x94
0x92: JUMPI 0x94 V49
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x93
[0x93:0x93]
---
Predecessors: [0x8c]
Successors: []
---
0x93 INVALID
---
0x93: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x94
[0x94:0xb0]
---
Predecessors: [0x8c]
Successors: [0x123]
---
0x94 JUMPDEST
0x95 PUSH2 0x52
0x98 PUSH1 0x1
0x9a PUSH1 0xa0
0x9c PUSH1 0x2
0x9e EXP
0x9f SUB
0xa0 PUSH1 0x4
0xa2 CALLDATALOAD
0xa3 DUP2
0xa4 AND
0xa5 SWAP1
0xa6 PUSH1 0x24
0xa8 CALLDATALOAD
0xa9 AND
0xaa PUSH1 0x44
0xac CALLDATALOAD
0xad PUSH2 0x123
0xb0 JUMP
---
0x94: JUMPDEST 
0x95: V51 = 0x52
0x98: V52 = 0x1
0x9a: V53 = 0xa0
0x9c: V54 = 0x2
0x9e: V55 = EXP 0x2 0xa0
0x9f: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V57 = 0x4
0xa2: V58 = CALLDATALOAD 0x4
0xa4: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xa6: V60 = 0x24
0xa8: V61 = CALLDATALOAD 0x24
0xa9: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V63 = 0x44
0xac: V64 = CALLDATALOAD 0x44
0xad: V65 = 0x123
0xb0: JUMP 0x123
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x52, V59, V62, V64]
Exit stack: [V9, 0x52, V59, V62, V64]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: []
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb3
[0xb3:0xca]
---
Predecessors: [0x4a]
Successors: [0xcb, 0xd8]
---
0xb3 JUMPDEST
0xb4 PUSH1 0x0
0xb6 SLOAD
0xb7 CALLER
0xb8 PUSH1 0x1
0xba PUSH1 0xa0
0xbc PUSH1 0x2
0xbe EXP
0xbf SUB
0xc0 SWAP1
0xc1 DUP2
0xc2 AND
0xc3 SWAP2
0xc4 AND
0xc5 EQ
0xc6 ISZERO
0xc7 PUSH2 0xd8
0xca JUMPI
---
0xb3: JUMPDEST 
0xb4: V66 = 0x0
0xb6: V67 = S[0x0]
0xb7: V68 = CALLER
0xb8: V69 = 0x1
0xba: V70 = 0xa0
0xbc: V71 = 0x2
0xbe: V72 = EXP 0x2 0xa0
0xbf: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xc4: V75 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V76 = EQ V75 V74
0xc6: V77 = ISZERO V76
0xc7: V78 = 0xd8
0xca: JUMPI 0xd8 V77
---
Entry stack: [V9, 0x52]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52]

================================

Block 0xcb
[0xcb:0xd7]
---
Predecessors: [0xb3]
Successors: []
---
0xcb PUSH1 0x0
0xcd SLOAD
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 AND
0xd7 SELFDESTRUCT
---
0xcb: V79 = 0x0
0xcd: V80 = S[0x0]
0xce: V81 = 0x1
0xd0: V82 = 0xa0
0xd2: V83 = 0x2
0xd4: V84 = EXP 0x2 0xa0
0xd5: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xd7: SELFDESTRUCT V86
---
Entry stack: [V9, 0x52]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52]

================================

Block 0xd8
[0xd8:0xd8]
---
Predecessors: [0xb3]
Successors: [0xd9]
---
0xd8 JUMPDEST
---
0xd8: JUMPDEST 
---
Entry stack: [V9, 0x52]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52]

================================

Block 0xd9
[0xd9:0xda]
---
Predecessors: [0xd8]
Successors: [0x52]
---
0xd9 JUMPDEST
0xda JUMP
---
0xd9: JUMPDEST 
0xda: JUMP 0x52
---
Entry stack: [V9, 0x52]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0x54]
Successors: [0xe3, 0xe8]
---
0xdb JUMPDEST
0xdc CALLVALUE
0xdd ISZERO
0xde ISZERO
0xdf PUSH2 0xe8
0xe2 JUMPI
---
0xdb: JUMPDEST 
0xdc: V87 = CALLVALUE
0xdd: V88 = ISZERO V87
0xde: V89 = ISZERO V88
0xdf: V90 = 0xe8
0xe2: JUMPI 0xe8 V89
---
Entry stack: [V9, 0x52, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V35]

================================

Block 0xe3
[0xe3:0xe7]
---
Predecessors: [0xdb]
Successors: []
---
0xe3 PUSH1 0x0
0xe5 PUSH1 0x0
0xe7 REVERT
---
0xe3: V91 = 0x0
0xe5: V92 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V9, 0x52, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V35]

================================

Block 0xe8
[0xe8:0x112]
---
Predecessors: [0xdb]
Successors: [0x113, 0x118]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x40
0xeb MLOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 DUP3
0xf5 AND
0xf6 SWAP1
0xf7 CALLVALUE
0xf8 DUP1
0xf9 ISZERO
0xfa PUSH2 0x8fc
0xfd MUL
0xfe SWAP2
0xff PUSH1 0x0
0x101 DUP2
0x102 DUP2
0x103 DUP2
0x104 DUP6
0x105 DUP9
0x106 DUP9
0x107 CALL
0x108 SWAP4
0x109 POP
0x10a POP
0x10b POP
0x10c POP
0x10d ISZERO
0x10e ISZERO
0x10f PUSH2 0x118
0x112 JUMPI
---
0xe8: JUMPDEST 
0xe9: V93 = 0x40
0xeb: V94 = M[0x40]
0xec: V95 = 0x1
0xee: V96 = 0xa0
0xf0: V97 = 0x2
0xf2: V98 = EXP 0x2 0xa0
0xf3: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf5: V100 = AND V35 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V101 = CALLVALUE
0xf9: V102 = ISZERO V101
0xfa: V103 = 0x8fc
0xfd: V104 = MUL 0x8fc V102
0xff: V105 = 0x0
0x107: V106 = CALL V104 V100 V101 V94 0x0 V94 0x0
0x10d: V107 = ISZERO V106
0x10e: V108 = ISZERO V107
0x10f: V109 = 0x118
0x112: JUMPI 0x118 V108
---
Entry stack: [V9, 0x52, V35]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x52, V35]

================================

Block 0x113
[0x113:0x117]
---
Predecessors: [0xe8]
Successors: []
---
0x113 PUSH1 0x0
0x115 PUSH1 0x0
0x117 REVERT
---
0x113: V110 = 0x0
0x115: V111 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V9, 0x52, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V35]

================================

Block 0x118
[0x118:0x118]
---
Predecessors: [0xe8]
Successors: [0x119]
---
0x118 JUMPDEST
---
0x118: JUMPDEST 
---
Entry stack: [V9, 0x52, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V35]

================================

Block 0x119
[0x119:0x11b]
---
Predecessors: [0x118]
Successors: [0x52]
---
0x119 JUMPDEST
0x11a POP
0x11b JUMP
---
0x119: JUMPDEST 
0x11b: JUMP 0x52
---
Entry stack: [V9, 0x52, V35]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x72]
Successors: [0x120]
---
0x11c JUMPDEST
0x11d PUSH1 0x3
0x11f SLOAD
---
0x11c: JUMPDEST 
0x11d: V112 = 0x3
0x11f: V113 = S[0x3]
---
Entry stack: [V9, 0x7a]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V9, 0x7a, V113]

================================

Block 0x120
[0x120:0x122]
---
Predecessors: [0x11c]
Successors: [0x7a]
---
0x120 JUMPDEST
0x121 SWAP1
0x122 JUMP
---
0x120: JUMPDEST 
0x122: JUMP 0x7a
---
Entry stack: [V9, 0x7a, V113]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V9, V113]

================================

Block 0x123
[0x123:0x17b]
---
Predecessors: [0x94]
Successors: [0x17c, 0x17d]
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 DUP1
0x127 MLOAD
0x128 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x149 DUP2
0x14a MSTORE
0x14b SWAP1
0x14c MLOAD
0x14d SWAP1
0x14e DUP2
0x14f SWAP1
0x150 SUB
0x151 PUSH1 0x19
0x153 ADD
0x154 SWAP1
0x155 SHA3
0x156 PUSH1 0x1
0x158 SLOAD
0x159 PUSH1 0x2
0x15b SLOAD
0x15c PUSH1 0x1
0x15e PUSH1 0xa0
0x160 PUSH1 0x2
0x162 EXP
0x163 SUB
0x164 DUP7
0x165 AND
0x166 SWAP2
0x167 PUSH1 0xe0
0x169 PUSH1 0x2
0x16b EXP
0x16c DUP5
0x16d DIV
0x16e SWAP2
0x16f DUP7
0x170 SWAP2
0x171 DUP2
0x172 SUB
0x173 SWAP1
0x174 DUP7
0x175 DUP2
0x176 ISZERO
0x177 ISZERO
0x178 PUSH2 0x17d
0x17b JUMPI
---
0x123: JUMPDEST 
0x124: V114 = 0x40
0x127: V115 = M[0x40]
0x128: V116 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x14a: M[V115] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x14c: V117 = M[0x40]
0x150: V118 = SUB V115 V117
0x151: V119 = 0x19
0x153: V120 = ADD 0x19 V118
0x155: V121 = SHA3 V117 V120
0x156: V122 = 0x1
0x158: V123 = S[0x1]
0x159: V124 = 0x2
0x15b: V125 = S[0x2]
0x15c: V126 = 0x1
0x15e: V127 = 0xa0
0x160: V128 = 0x2
0x162: V129 = EXP 0x2 0xa0
0x163: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x165: V131 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0x167: V132 = 0xe0
0x169: V133 = 0x2
0x16b: V134 = EXP 0x2 0xe0
0x16d: V135 = DIV V121 0x100000000000000000000000000000000000000000000000000000000
0x172: V136 = SUB V125 V123
0x176: V137 = ISZERO V125
0x177: V138 = ISZERO V137
0x178: V139 = 0x17d
0x17b: JUMPI 0x17d V138
---
Entry stack: [V9, 0x52, V59, V62, V64]
Stack pops: 3
Stack additions: [S2, S1, S0, V121, V131, V135, S1, V136, V125, S0]
Exit stack: [V9, 0x52, V59, V62, V64, V121, V131, V135, V62, V136, V125, V64]

================================

Block 0x17c
[0x17c:0x17c]
---
Predecessors: [0x123]
Successors: []
---
0x17c INVALID
---
0x17c: INVALID 
---
Entry stack: [V9, 0x52, V59, V62, V64, V121, V131, V135, V62, V136, V125, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V59, V62, V64, V121, V131, V135, V62, V136, V125, V64]

================================

Block 0x17d
[0x17d:0x1d3]
---
Predecessors: [0x123]
Successors: [0x1d4, 0x248]
---
0x17d JUMPDEST
0x17e DIV
0x17f MUL
0x180 PUSH1 0x40
0x182 MLOAD
0x183 DUP4
0x184 PUSH4 0xffffffff
0x189 AND
0x18a PUSH1 0xe0
0x18c PUSH1 0x2
0x18e EXP
0x18f MUL
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x4
0x194 ADD
0x195 DUP1
0x196 DUP4
0x197 PUSH1 0x1
0x199 PUSH1 0xa0
0x19b PUSH1 0x2
0x19d EXP
0x19e SUB
0x19f AND
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 AND
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae DUP3
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 SWAP3
0x1b5 POP
0x1b6 POP
0x1b7 POP
0x1b8 PUSH1 0x0
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be DUP4
0x1bf SUB
0x1c0 DUP2
0x1c1 PUSH1 0x0
0x1c3 DUP8
0x1c4 PUSH2 0x61da
0x1c7 GAS
0x1c8 SUB
0x1c9 CALL
0x1ca SWAP3
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce DUP1
0x1cf ISZERO
0x1d0 PUSH2 0x248
0x1d3 JUMPI
---
0x17d: JUMPDEST 
0x17e: V140 = DIV V64 V125
0x17f: V141 = MUL V140 V136
0x180: V142 = 0x40
0x182: V143 = M[0x40]
0x184: V144 = 0xffffffff
0x189: V145 = AND 0xffffffff V135
0x18a: V146 = 0xe0
0x18c: V147 = 0x2
0x18e: V148 = EXP 0x2 0xe0
0x18f: V149 = MUL 0x100000000000000000000000000000000000000000000000000000000 V145
0x191: M[V143] = V149
0x192: V150 = 0x4
0x194: V151 = ADD 0x4 V143
0x197: V152 = 0x1
0x199: V153 = 0xa0
0x19b: V154 = 0x2
0x19d: V155 = EXP 0x2 0xa0
0x19e: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x1a0: V158 = 0x1
0x1a2: V159 = 0xa0
0x1a4: V160 = 0x2
0x1a6: V161 = EXP 0x2 0xa0
0x1a7: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x1aa: M[V151] = V163
0x1ab: V164 = 0x20
0x1ad: V165 = ADD 0x20 V151
0x1b0: M[V165] = V141
0x1b1: V166 = 0x20
0x1b3: V167 = ADD 0x20 V165
0x1b8: V168 = 0x0
0x1ba: V169 = 0x40
0x1bc: V170 = M[0x40]
0x1bf: V171 = SUB V167 V170
0x1c1: V172 = 0x0
0x1c4: V173 = 0x61da
0x1c7: V174 = GAS
0x1c8: V175 = SUB V174 0x61da
0x1c9: V176 = CALL V175 V131 0x0 V170 V171 V170 0x0
0x1cf: V177 = ISZERO V176
0x1d0: V178 = 0x248
0x1d3: JUMPI 0x248 V177
---
Entry stack: [V9, 0x52, V59, V62, V64, V121, V131, V135, V62, V136, V125, V64]
Stack pops: 6
Stack additions: [V176]
Exit stack: [V9, 0x52, V59, V62, V64, V121, V176]

================================

Block 0x1d4
[0x1d4:0x1f5]
---
Predecessors: [0x17d]
Successors: [0x1f6, 0x1f7]
---
0x1d4 POP
0x1d5 DUP4
0x1d6 PUSH1 0x1
0x1d8 PUSH1 0xa0
0x1da PUSH1 0x2
0x1dc EXP
0x1dd SUB
0x1de AND
0x1df DUP2
0x1e0 PUSH1 0xe0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SWAP1
0x1e6 DIV
0x1e7 ADDRESS
0x1e8 PUSH1 0x1
0x1ea SLOAD
0x1eb PUSH1 0x2
0x1ed SLOAD
0x1ee DUP7
0x1ef DUP2
0x1f0 ISZERO
0x1f1 ISZERO
0x1f2 PUSH2 0x1f7
0x1f5 JUMPI
---
0x1d6: V179 = 0x1
0x1d8: V180 = 0xa0
0x1da: V181 = 0x2
0x1dc: V182 = EXP 0x2 0xa0
0x1dd: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1de: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x1e0: V185 = 0xe0
0x1e2: V186 = 0x2
0x1e4: V187 = EXP 0x2 0xe0
0x1e6: V188 = DIV V121 0x100000000000000000000000000000000000000000000000000000000
0x1e7: V189 = ADDRESS
0x1e8: V190 = 0x1
0x1ea: V191 = S[0x1]
0x1eb: V192 = 0x2
0x1ed: V193 = S[0x2]
0x1f0: V194 = ISZERO V193
0x1f1: V195 = ISZERO V194
0x1f2: V196 = 0x1f7
0x1f5: JUMPI 0x1f7 V195
---
Entry stack: [V9, 0x52, V59, V62, V64, V121, V176]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V184, V188, V189, V191, V193, S2]
Exit stack: [V9, 0x52, V59, V62, V64, V121, V184, V188, V189, V191, V193, V64]

================================

Block 0x1f6
[0x1f6:0x1f6]
---
Predecessors: [0x1d4]
Successors: []
---
0x1f6 INVALID
---
0x1f6: INVALID 
---
Entry stack: [V9, 0x52, V59, V62, V64, V121, V184, V188, V189, V191, V193, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V59, V62, V64, V121, V184, V188, V189, V191, V193, V64]

================================

Block 0x1f7
[0x1f7:0x247]
---
Predecessors: [0x1d4]
Successors: [0x248]
---
0x1f7 JUMPDEST
0x1f8 DIV
0x1f9 MUL
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd DUP4
0x1fe PUSH4 0xffffffff
0x203 AND
0x204 PUSH1 0xe0
0x206 PUSH1 0x2
0x208 EXP
0x209 MUL
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x4
0x20e ADD
0x20f DUP1
0x210 DUP4
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 AND
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 AND
0x223 DUP2
0x224 MSTORE
0x225 PUSH1 0x20
0x227 ADD
0x228 DUP3
0x229 DUP2
0x22a MSTORE
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP3
0x22f POP
0x230 POP
0x231 POP
0x232 PUSH1 0x0
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 DUP4
0x239 SUB
0x23a DUP2
0x23b PUSH1 0x0
0x23d DUP8
0x23e PUSH2 0x61da
0x241 GAS
0x242 SUB
0x243 CALL
0x244 SWAP3
0x245 POP
0x246 POP
0x247 POP
---
0x1f7: JUMPDEST 
0x1f8: V197 = DIV V64 V193
0x1f9: V198 = MUL V197 V191
0x1fa: V199 = 0x40
0x1fc: V200 = M[0x40]
0x1fe: V201 = 0xffffffff
0x203: V202 = AND 0xffffffff V188
0x204: V203 = 0xe0
0x206: V204 = 0x2
0x208: V205 = EXP 0x2 0xe0
0x209: V206 = MUL 0x100000000000000000000000000000000000000000000000000000000 V202
0x20b: M[V200] = V206
0x20c: V207 = 0x4
0x20e: V208 = ADD 0x4 V200
0x211: V209 = 0x1
0x213: V210 = 0xa0
0x215: V211 = 0x2
0x217: V212 = EXP 0x2 0xa0
0x218: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x219: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x21a: V215 = 0x1
0x21c: V216 = 0xa0
0x21e: V217 = 0x2
0x220: V218 = EXP 0x2 0xa0
0x221: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x224: M[V208] = V220
0x225: V221 = 0x20
0x227: V222 = ADD 0x20 V208
0x22a: M[V222] = V198
0x22b: V223 = 0x20
0x22d: V224 = ADD 0x20 V222
0x232: V225 = 0x0
0x234: V226 = 0x40
0x236: V227 = M[0x40]
0x239: V228 = SUB V224 V227
0x23b: V229 = 0x0
0x23e: V230 = 0x61da
0x241: V231 = GAS
0x242: V232 = SUB V231 0x61da
0x243: V233 = CALL V232 V184 0x0 V227 V228 V227 0x0
---
Entry stack: [V9, 0x52, V59, V62, V64, V121, V184, V188, V189, V191, V193, V64]
Stack pops: 6
Stack additions: [V233]
Exit stack: [V9, 0x52, V59, V62, V64, V121, V233]

================================

Block 0x248
[0x248:0x24d]
---
Predecessors: [0x17d, 0x1f7]
Successors: [0x24e, 0x257]
---
0x248 JUMPDEST
0x249 ISZERO
0x24a PUSH2 0x257
0x24d JUMPI
---
0x248: JUMPDEST 
0x249: V234 = ISZERO S0
0x24a: V235 = 0x257
0x24d: JUMPI 0x257 V234
---
Entry stack: [V9, 0x52, V59, V62, V64, V121, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x52, V59, V62, V64, V121]

================================

Block 0x24e
[0x24e:0x256]
---
Predecessors: [0x248]
Successors: [0x25d]
---
0x24e PUSH1 0x1
0x250 PUSH1 0x3
0x252 SSTORE
0x253 PUSH2 0x25d
0x256 JUMP
---
0x24e: V236 = 0x1
0x250: V237 = 0x3
0x252: S[0x3] = 0x1
0x253: V238 = 0x25d
0x256: JUMP 0x25d
---
Entry stack: [V9, 0x52, V59, V62, V64, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V59, V62, V64, V121]

================================

Block 0x257
[0x257:0x25c]
---
Predecessors: [0x248]
Successors: [0x25d]
---
0x257 JUMPDEST
0x258 PUSH1 0x0
0x25a PUSH1 0x3
0x25c SSTORE
---
0x257: JUMPDEST 
0x258: V239 = 0x0
0x25a: V240 = 0x3
0x25c: S[0x3] = 0x0
---
Entry stack: [V9, 0x52, V59, V62, V64, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V59, V62, V64, V121]

================================

Block 0x25d
[0x25d:0x25d]
---
Predecessors: [0x24e, 0x257]
Successors: [0x25e]
---
0x25d JUMPDEST
---
0x25d: JUMPDEST 
---
Entry stack: [V9, 0x52, V59, V62, V64, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x52, V59, V62, V64, V121]

================================

Block 0x25e
[0x25e:0x263]
---
Predecessors: [0x25d]
Successors: [0x52]
---
0x25e JUMPDEST
0x25f POP
0x260 POP
0x261 POP
0x262 POP
0x263 JUMP
---
0x25e: JUMPDEST 
0x263: JUMP 0x52
---
Entry stack: [V9, 0x52, V59, V62, V64, V121]
Stack pops: 5
Stack additions: []
Exit stack: [V9]

================================

Block 0x264
[0x264:0x28f]
---
Predecessors: []
Successors: []
---
0x264 STOP
0x265 LOG1
0x266 PUSH6 0x627a7a723058
0x26d SHA3
0x26e MISSING 0xc9
0x26f DUP2
0x270 MISSING 0xe6
0x271 MISSING 0xa7
0x272 SWAP11
0x273 PUSH17 0x772a3e69837b12b0663f7c2ae11ab38c7a
0x285 SLT
0x286 MISSING 0xc9
0x287 MISSING 0xec
0x288 MISSING 0xde
0x289 MISSING 0xd7
0x28a GASPRICE
0x28b MISSING 0xe0
0x28c MISSING 0xbe
0x28d SWAP13
0x28e STOP
0x28f MISSING 0x29
---
0x264: STOP 
0x265: LOG S0 S1 S2
0x266: V241 = 0x627a7a723058
0x26d: V242 = SHA3 0x627a7a723058 S3
0x26e: MISSING 0xc9
0x270: MISSING 0xe6
0x271: MISSING 0xa7
0x273: V243 = 0x772a3e69837b12b0663f7c2ae11ab38c7a
0x285: V244 = SLT 0x772a3e69837b12b0663f7c2ae11ab38c7a S11
0x286: MISSING 0xc9
0x287: MISSING 0xec
0x288: MISSING 0xde
0x289: MISSING 0xd7
0x28a: V245 = GASPRICE
0x28b: MISSING 0xe0
0x28c: MISSING 0xbe
0x28e: STOP 
0x28f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V242, S1, S0, S1, V244, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V245, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x42
Exit block: 0x52
Body: 0x42, 0x49, 0x4a, 0x52, 0xb3, 0xcb, 0xd8, 0xd9

Function 1:
Public function signature: 0x474b2d52
Entry block: 0x54
Exit block: 0x52
Body: 0x52, 0x54, 0xdb, 0xe3, 0xe8, 0x113, 0x118, 0x119

Function 2:
Public function signature: 0xa87d942c
Entry block: 0x6a
Exit block: 0x7a
Body: 0x6a, 0x71, 0x72, 0x7a, 0x11c, 0x120

Function 3:
Public function signature: 0xddf252ad
Entry block: 0x8c
Exit block: 0x52
Body: 0x52, 0x8c, 0x93, 0x94, 0x123, 0x17c, 0x17d, 0x1d4, 0x1f6, 0x1f7, 0x248, 0x24e, 0x257, 0x25d, 0x25e

Function 4:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

