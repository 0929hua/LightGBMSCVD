Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xb6]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6b9f96ea
0x3c EQ
0x3d PUSH2 0xb6
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6b9f96ea
0x3c: V13 = EQ 0x6b9f96ea V11
0x3d: V14 = 0xb6
0x40: JUMPI 0xb6 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcd]
---
0x41 DUP1
0x42 PUSH4 0xca325469
0x47 EQ
0x48 PUSH2 0xcd
0x4b JUMPI
---
0x42: V15 = 0xca325469
0x47: V16 = EQ 0xca325469 V11
0x48: V17 = 0xcd
0x4b: JUMPI 0xcd V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0xa9]
---
Predecessors: [0x0, 0x41]
Successors: [0xaa, 0xb3]
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 SWAP1
0x51 SLOAD
0x52 SWAP1
0x53 PUSH2 0x100
0x56 EXP
0x57 SWAP1
0x58 DIV
0x59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e AND
0x6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84 AND
0x85 PUSH2 0x8fc
0x88 CALLVALUE
0x89 SWAP1
0x8a DUP2
0x8b ISZERO
0x8c MUL
0x8d SWAP1
0x8e PUSH1 0x40
0x90 MLOAD
0x91 PUSH1 0x0
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP1
0x97 DUP4
0x98 SUB
0x99 DUP2
0x9a DUP6
0x9b DUP9
0x9c DUP9
0x9d CALL
0x9e SWAP4
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 ISZERO
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xb3
0xa9 JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x51: V19 = S[0x0]
0x53: V20 = 0x100
0x56: V21 = EXP 0x100 0x0
0x58: V22 = DIV V19 0x1
0x59: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x6f: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x84: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x85: V27 = 0x8fc
0x88: V28 = CALLVALUE
0x8b: V29 = ISZERO V28
0x8c: V30 = MUL V29 0x8fc
0x8e: V31 = 0x40
0x90: V32 = M[0x40]
0x91: V33 = 0x0
0x93: V34 = 0x40
0x95: V35 = M[0x40]
0x98: V36 = SUB V32 V35
0x9d: V37 = CALL V30 V26 V28 V35 V36 V35 0x0
0xa3: V38 = ISZERO V37
0xa5: V39 = ISZERO V38
0xa6: V40 = 0xb3
0xa9: JUMPI 0xb3 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V11, V38]

================================

Block 0xaa
[0xaa:0xb2]
---
Predecessors: [0x4c]
Successors: []
---
0xaa RETURNDATASIZE
0xab PUSH1 0x0
0xad DUP1
0xae RETURNDATACOPY
0xaf RETURNDATASIZE
0xb0 PUSH1 0x0
0xb2 REVERT
---
0xaa: V41 = RETURNDATASIZE
0xab: V42 = 0x0
0xae: RETURNDATACOPY 0x0 0x0 V41
0xaf: V43 = RETURNDATASIZE
0xb0: V44 = 0x0
0xb2: REVERT 0x0 V43
---
Entry stack: [V11, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38]

================================

Block 0xb3
[0xb3:0xb5]
---
Predecessors: [0x4c]
Successors: []
---
0xb3 JUMPDEST
0xb4 POP
0xb5 STOP
---
0xb3: JUMPDEST 
0xb5: STOP 
---
Entry stack: [V11, V38]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0xd]
Successors: [0xbe, 0xc2]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 DUP1
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb6: JUMPDEST 
0xb7: V45 = CALLVALUE
0xb9: V46 = ISZERO V45
0xba: V47 = 0xc2
0xbd: JUMPI 0xc2 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb6]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V48 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xc2
[0xc2:0xca]
---
Predecessors: [0xb6]
Successors: [0x124]
---
0xc2 JUMPDEST
0xc3 POP
0xc4 PUSH2 0xcb
0xc7 PUSH2 0x124
0xca JUMP
---
0xc2: JUMPDEST 
0xc4: V49 = 0xcb
0xc7: V50 = 0x124
0xca: JUMP 0x124
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0xcb]
Exit stack: [V11, 0xcb]

================================

Block 0xcb
[0xcb:0xcc]
---
Predecessors: [0x1a2]
Successors: []
---
0xcb JUMPDEST
0xcc STOP
---
0xcb: JUMPDEST 
0xcc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcd
[0xcd:0xd4]
---
Predecessors: [0x41]
Successors: [0xd5, 0xd9]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xcd: JUMPDEST 
0xce: V51 = CALLVALUE
0xd0: V52 = ISZERO V51
0xd1: V53 = 0xd9
0xd4: JUMPI 0xd9 V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V11, V51]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xcd]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V54 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V51]

================================

Block 0xd9
[0xd9:0xe1]
---
Predecessors: [0xcd]
Successors: [0x1a5]
---
0xd9 JUMPDEST
0xda POP
0xdb PUSH2 0xe2
0xde PUSH2 0x1a5
0xe1 JUMP
---
0xd9: JUMPDEST 
0xdb: V55 = 0xe2
0xde: V56 = 0x1a5
0xe1: JUMP 0x1a5
---
Entry stack: [V11, V51]
Stack pops: 1
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0x123]
---
Predecessors: [0x1a5]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 DUP3
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd AND
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP2
0x11a POP
0x11b POP
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 RETURN
---
0xe2: JUMPDEST 
0xe3: V57 = 0x40
0xe5: V58 = M[0x40]
0xe8: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0xfe: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x115: M[V58] = V62
0x116: V63 = 0x20
0x118: V64 = ADD 0x20 V58
0x11c: V65 = 0x40
0x11e: V66 = M[0x40]
0x121: V67 = SUB V64 V66
0x123: RETURN V66 V67
---
Entry stack: [V11, 0xe2, V104]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0x124
[0x124:0x198]
---
Predecessors: [0xc2]
Successors: [0x199, 0x1a2]
---
0x124 JUMPDEST
0x125 PUSH1 0x0
0x127 DUP1
0x128 SWAP1
0x129 SLOAD
0x12a SWAP1
0x12b PUSH2 0x100
0x12e EXP
0x12f SWAP1
0x130 DIV
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d PUSH2 0x8fc
0x160 ADDRESS
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 AND
0x177 BALANCE
0x178 SWAP1
0x179 DUP2
0x17a ISZERO
0x17b MUL
0x17c SWAP1
0x17d PUSH1 0x40
0x17f MLOAD
0x180 PUSH1 0x0
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 DUP4
0x187 SUB
0x188 DUP2
0x189 DUP6
0x18a DUP9
0x18b DUP9
0x18c CALL
0x18d SWAP4
0x18e POP
0x18f POP
0x190 POP
0x191 POP
0x192 ISZERO
0x193 DUP1
0x194 ISZERO
0x195 PUSH2 0x1a2
0x198 JUMPI
---
0x124: JUMPDEST 
0x125: V68 = 0x0
0x129: V69 = S[0x0]
0x12b: V70 = 0x100
0x12e: V71 = EXP 0x100 0x0
0x130: V72 = DIV V69 0x1
0x131: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x147: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15d: V77 = 0x8fc
0x160: V78 = ADDRESS
0x161: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x177: V81 = BALANCE V80
0x17a: V82 = ISZERO V81
0x17b: V83 = MUL V82 0x8fc
0x17d: V84 = 0x40
0x17f: V85 = M[0x40]
0x180: V86 = 0x0
0x182: V87 = 0x40
0x184: V88 = M[0x40]
0x187: V89 = SUB V85 V88
0x18c: V90 = CALL V83 V76 V81 V88 V89 V88 0x0
0x192: V91 = ISZERO V90
0x194: V92 = ISZERO V91
0x195: V93 = 0x1a2
0x198: JUMPI 0x1a2 V92
---
Entry stack: [V11, 0xcb]
Stack pops: 0
Stack additions: [V91]
Exit stack: [V11, 0xcb, V91]

================================

Block 0x199
[0x199:0x1a1]
---
Predecessors: [0x124]
Successors: []
---
0x199 RETURNDATASIZE
0x19a PUSH1 0x0
0x19c DUP1
0x19d RETURNDATACOPY
0x19e RETURNDATASIZE
0x19f PUSH1 0x0
0x1a1 REVERT
---
0x199: V94 = RETURNDATASIZE
0x19a: V95 = 0x0
0x19d: RETURNDATACOPY 0x0 0x0 V94
0x19e: V96 = RETURNDATASIZE
0x19f: V97 = 0x0
0x1a1: REVERT 0x0 V96
---
Entry stack: [V11, 0xcb, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcb, V91]

================================

Block 0x1a2
[0x1a2:0x1a4]
---
Predecessors: [0x124]
Successors: [0xcb]
---
0x1a2 JUMPDEST
0x1a3 POP
0x1a4 JUMP
---
0x1a2: JUMPDEST 
0x1a4: JUMP 0xcb
---
Entry stack: [V11, 0xcb, V91]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a5
[0x1a5:0x1c9]
---
Predecessors: [0xd9]
Successors: [0xe2]
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x0
0x1a8 DUP1
0x1a9 SWAP1
0x1aa SLOAD
0x1ab SWAP1
0x1ac PUSH2 0x100
0x1af EXP
0x1b0 SWAP1
0x1b1 DIV
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 DUP2
0x1c9 JUMP
---
0x1a5: JUMPDEST 
0x1a6: V98 = 0x0
0x1aa: V99 = S[0x0]
0x1ac: V100 = 0x100
0x1af: V101 = EXP 0x100 0x0
0x1b1: V102 = DIV V99 0x1
0x1b2: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c9: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: [S0, V104]
Exit stack: [V11, 0xe2, V104]

================================

Block 0x1ca
[0x1ca:0x1fe]
---
Predecessors: []
Successors: []
---
0x1ca STOP
0x1cb LOG1
0x1cc PUSH6 0x627a7a723058
0x1d3 SHA3
0x1d4 CALLVALUE
0x1d5 MISSING 0xab
0x1d6 MISSING 0xba
0x1d7 MISSING 0xd
0x1d8 SWAP9
0x1d9 SWAP8
0x1da MISSING 0x26
0x1db SELFDESTRUCT
0x1dc PUSH4 0xcbb353fa
0x1e1 MISSING 0xdc
0x1e2 SHA3
0x1e3 MISSING 0xd0
0x1e4 SWAP8
0x1e5 MISSING 0x5d
0x1e6 MISSING 0xa7
0x1e7 JUMPDEST
0x1e8 LT
0x1e9 MISSING 0xe8
0x1ea GASPRICE
0x1eb MISSING 0xe7
0x1ec MISSING 0x4d
0x1ed MISSING 0x25
0x1ee PUSH16 0x471242562d0029
---
0x1ca: STOP 
0x1cb: LOG S0 S1 S2
0x1cc: V105 = 0x627a7a723058
0x1d3: V106 = SHA3 0x627a7a723058 S3
0x1d4: V107 = CALLVALUE
0x1d5: MISSING 0xab
0x1d6: MISSING 0xba
0x1d7: MISSING 0xd
0x1da: MISSING 0x26
0x1db: SELFDESTRUCT S0
0x1dc: V108 = 0xcbb353fa
0x1e1: MISSING 0xdc
0x1e2: V109 = SHA3 S0 S1
0x1e3: MISSING 0xd0
0x1e5: MISSING 0x5d
0x1e6: MISSING 0xa7
0x1e7: JUMPDEST 
0x1e8: V110 = LT S0 S1
0x1e9: MISSING 0xe8
0x1ea: V111 = GASPRICE
0x1eb: MISSING 0xe7
0x1ec: MISSING 0x4d
0x1ed: MISSING 0x25
0x1ee: V112 = 0x471242562d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V107, V106, S8, S1, S2, S3, S4, S5, S6, S7, S9, S0, 0xcbb353fa, V109, S8, S1, S2, S3, S4, S5, S6, S7, S0, V110, V111, 0x471242562d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6b9f96ea
Entry block: 0xb6
Exit block: 0xcb
Body: 0xb6, 0xbe, 0xc2, 0xcb, 0x124, 0x199, 0x1a2

Function 1:
Public function signature: 0xca325469
Entry block: 0xcd
Exit block: 0xe2
Body: 0xcd, 0xd5, 0xd9, 0xe2, 0x1a5

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0xb3
Body: 0x4c, 0xaa, 0xb3

