Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x78]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x78
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x78
0x40: JUMPI 0x78 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x106]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x106
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x106
0x4b: JUMPI 0x106 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x11b]
---
0x4c DUP1
0x4d PUSH4 0xd0e30db0
0x52 EQ
0x53 PUSH2 0x11b
0x56 JUMPI
---
0x4d: V18 = 0xd0e30db0
0x52: V19 = EQ 0xd0e30db0 V11
0x53: V20 = 0x11b
0x56: JUMPI 0x11b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x60]
---
Predecessors: [0x0, 0x4c]
Successors: [0x61, 0x6d]
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a CALLVALUE
0x5b GT
0x5c ISZERO
0x5d PUSH2 0x6d
0x60 JUMPI
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5a: V22 = CALLVALUE
0x5b: V23 = GT V22 0x0
0x5c: V24 = ISZERO V23
0x5d: V25 = 0x6d
0x60: JUMPI 0x6d V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x61
[0x61:0x67]
---
Predecessors: [0x57]
Successors: [0x125]
---
0x61 PUSH2 0x68
0x64 PUSH2 0x125
0x67 JUMP
---
0x61: V26 = 0x68
0x64: V27 = 0x125
0x67: JUMP 0x125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x68]
Exit stack: [V11, 0x68]

================================

Block 0x68
[0x68:0x6c]
---
Predecessors: [0x20a]
Successors: [0x76]
---
0x68 JUMPDEST
0x69 PUSH2 0x76
0x6c JUMP
---
0x68: JUMPDEST 
0x69: V28 = 0x76
0x6c: JUMP 0x76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x74]
---
Predecessors: [0x57]
Successors: [0x20c]
---
0x6d JUMPDEST
0x6e PUSH2 0x75
0x71 PUSH2 0x20c
0x74 JUMP
---
0x6d: JUMPDEST 
0x6e: V29 = 0x75
0x71: V30 = 0x20c
0x74: JUMP 0x20c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x75]
Exit stack: [V11, 0x75]

================================

Block 0x75
[0x75:0x75]
---
Predecessors: [0x46b]
Successors: [0x76]
---
0x75 JUMPDEST
---
0x75: JUMPDEST 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x76
[0x76:0x77]
---
Predecessors: [0x68, 0x75]
Successors: []
---
0x76 JUMPDEST
0x77 STOP
---
0x76: JUMPDEST 
0x77: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x78
[0x78:0x7e]
---
Predecessors: [0xd]
Successors: [0x7f, 0x83]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a ISZERO
0x7b PUSH2 0x83
0x7e JUMPI
---
0x78: JUMPDEST 
0x79: V31 = CALLVALUE
0x7a: V32 = ISZERO V31
0x7b: V33 = 0x83
0x7e: JUMPI 0x83 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f
[0x7f:0x82]
---
Predecessors: [0x78]
Successors: []
---
0x7f PUSH1 0x0
0x81 DUP1
0x82 REVERT
---
0x7f: V34 = 0x0
0x82: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8a]
---
Predecessors: [0x78]
Successors: [0x46d]
---
0x83 JUMPDEST
0x84 PUSH2 0x8b
0x87 PUSH2 0x46d
0x8a JUMP
---
0x83: JUMPDEST 
0x84: V35 = 0x8b
0x87: V36 = 0x46d
0x8a: JUMP 0x46d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8b]
Exit stack: [V11, 0x8b]

================================

Block 0x8b
[0x8b:0xaf]
---
Predecessors: [0x46d]
Successors: [0xb0]
---
0x8b JUMPDEST
0x8c PUSH1 0x40
0x8e MLOAD
0x8f DUP1
0x90 DUP1
0x91 PUSH1 0x20
0x93 ADD
0x94 DUP3
0x95 DUP2
0x96 SUB
0x97 DUP3
0x98 MSTORE
0x99 DUP4
0x9a DUP2
0x9b DUP2
0x9c MLOAD
0x9d DUP2
0x9e MSTORE
0x9f PUSH1 0x20
0xa1 ADD
0xa2 SWAP2
0xa3 POP
0xa4 DUP1
0xa5 MLOAD
0xa6 SWAP1
0xa7 PUSH1 0x20
0xa9 ADD
0xaa SWAP1
0xab DUP1
0xac DUP4
0xad DUP4
0xae PUSH1 0x0
---
0x8b: JUMPDEST 
0x8c: V37 = 0x40
0x8e: V38 = M[0x40]
0x91: V39 = 0x20
0x93: V40 = ADD 0x20 V38
0x96: V41 = SUB V40 V38
0x98: M[V38] = V41
0x9c: V42 = M[V287]
0x9e: M[V40] = V42
0x9f: V43 = 0x20
0xa1: V44 = ADD 0x20 V40
0xa5: V45 = M[V287]
0xa7: V46 = 0x20
0xa9: V47 = ADD 0x20 V287
0xae: V48 = 0x0
---
Entry stack: [V11, 0x8b, V287]
Stack pops: 1
Stack additions: [S0, V38, V38, V44, V47, V45, V45, V44, V47, 0x0]
Exit stack: [V11, 0x8b, V287, V38, V38, V44, V47, V45, V45, V44, V47, 0x0]

================================

Block 0xb0
[0xb0:0xb8]
---
Predecessors: [0x8b, 0xb9]
Successors: [0xb9, 0xcb]
---
0xb0 JUMPDEST
0xb1 DUP4
0xb2 DUP2
0xb3 LT
0xb4 ISZERO
0xb5 PUSH2 0xcb
0xb8 JUMPI
---
0xb0: JUMPDEST 
0xb3: V49 = LT S0 V45
0xb4: V50 = ISZERO V49
0xb5: V51 = 0xcb
0xb8: JUMPI 0xcb V50
---
Entry stack: [V11, 0x8b, V287, V38, V38, V44, V47, V45, V45, V44, V47, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x8b, V287, V38, V38, V44, V47, V45, V45, V44, V47, S0]

================================

Block 0xb9
[0xb9:0xca]
---
Predecessors: [0xb0]
Successors: [0xb0]
---
0xb9 DUP1
0xba DUP3
0xbb ADD
0xbc MLOAD
0xbd DUP2
0xbe DUP5
0xbf ADD
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 DUP2
0xc4 ADD
0xc5 SWAP1
0xc6 POP
0xc7 PUSH2 0xb0
0xca JUMP
---
0xbb: V52 = ADD V47 S0
0xbc: V53 = M[V52]
0xbf: V54 = ADD V44 S0
0xc0: M[V54] = V53
0xc1: V55 = 0x20
0xc4: V56 = ADD S0 0x20
0xc7: V57 = 0xb0
0xca: JUMP 0xb0
---
Entry stack: [V11, 0x8b, V287, V38, V38, V44, V47, V45, V45, V44, V47, S0]
Stack pops: 3
Stack additions: [S2, S1, V56]
Exit stack: [V11, 0x8b, V287, V38, V38, V44, V47, V45, V45, V44, V47, V56]

================================

Block 0xcb
[0xcb:0xde]
---
Predecessors: [0xb0]
Successors: [0xdf, 0xf8]
---
0xcb JUMPDEST
0xcc POP
0xcd POP
0xce POP
0xcf POP
0xd0 SWAP1
0xd1 POP
0xd2 SWAP1
0xd3 DUP2
0xd4 ADD
0xd5 SWAP1
0xd6 PUSH1 0x1f
0xd8 AND
0xd9 DUP1
0xda ISZERO
0xdb PUSH2 0xf8
0xde JUMPI
---
0xcb: JUMPDEST 
0xd4: V58 = ADD V45 V44
0xd6: V59 = 0x1f
0xd8: V60 = AND 0x1f V45
0xda: V61 = ISZERO V60
0xdb: V62 = 0xf8
0xde: JUMPI 0xf8 V61
---
Entry stack: [V11, 0x8b, V287, V38, V38, V44, V47, V45, V45, V44, V47, S0]
Stack pops: 7
Stack additions: [V58, V60]
Exit stack: [V11, 0x8b, V287, V38, V38, V58, V60]

================================

Block 0xdf
[0xdf:0xf7]
---
Predecessors: [0xcb]
Successors: [0xf8]
---
0xdf DUP1
0xe0 DUP3
0xe1 SUB
0xe2 DUP1
0xe3 MLOAD
0xe4 PUSH1 0x1
0xe6 DUP4
0xe7 PUSH1 0x20
0xe9 SUB
0xea PUSH2 0x100
0xed EXP
0xee SUB
0xef NOT
0xf0 AND
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP2
0xf7 POP
---
0xe1: V63 = SUB V58 V60
0xe3: V64 = M[V63]
0xe4: V65 = 0x1
0xe7: V66 = 0x20
0xe9: V67 = SUB 0x20 V60
0xea: V68 = 0x100
0xed: V69 = EXP 0x100 V67
0xee: V70 = SUB V69 0x1
0xef: V71 = NOT V70
0xf0: V72 = AND V71 V64
0xf2: M[V63] = V72
0xf3: V73 = 0x20
0xf5: V74 = ADD 0x20 V63
---
Entry stack: [V11, 0x8b, V287, V38, V38, V58, V60]
Stack pops: 2
Stack additions: [V74, S0]
Exit stack: [V11, 0x8b, V287, V38, V38, V74, V60]

================================

Block 0xf8
[0xf8:0x105]
---
Predecessors: [0xcb, 0xdf]
Successors: []
---
0xf8 JUMPDEST
0xf9 POP
0xfa SWAP3
0xfb POP
0xfc POP
0xfd POP
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 SWAP2
0x103 SUB
0x104 SWAP1
0x105 RETURN
---
0xf8: JUMPDEST 
0xfe: V75 = 0x40
0x100: V76 = M[0x40]
0x103: V77 = SUB S1 V76
0x105: RETURN V76 V77
---
Entry stack: [V11, 0x8b, V287, V38, V38, S1, V60]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x8b]

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0x41]
Successors: [0x10d, 0x111]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V78 = CALLVALUE
0x108: V79 = ISZERO V78
0x109: V80 = 0x111
0x10c: JUMPI 0x111 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x106]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V81 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x106]
Successors: [0x20c]
---
0x111 JUMPDEST
0x112 PUSH2 0x119
0x115 PUSH2 0x20c
0x118 JUMP
---
0x111: JUMPDEST 
0x112: V82 = 0x119
0x115: V83 = 0x20c
0x118: JUMP 0x20c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x119]
Exit stack: [V11, 0x119]

================================

Block 0x119
[0x119:0x11a]
---
Predecessors: [0x46b]
Successors: []
---
0x119 JUMPDEST
0x11a STOP
---
0x119: JUMPDEST 
0x11a: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x4c]
Successors: [0x125]
---
0x11b JUMPDEST
0x11c PUSH2 0x123
0x11f PUSH2 0x125
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V84 = 0x123
0x11f: V85 = 0x125
0x122: JUMP 0x125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V11, 0x123]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: [0x20a]
Successors: []
---
0x123 JUMPDEST
0x124 STOP
---
0x123: JUMPDEST 
0x124: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x125
[0x125:0x201]
---
Predecessors: [0x61, 0x11b]
Successors: [0x202, 0x20a]
---
0x125 JUMPDEST
0x126 CALLER
0x127 PUSH1 0x1
0x129 PUSH1 0x0
0x12b PUSH2 0x100
0x12e EXP
0x12f DUP2
0x130 SLOAD
0x131 DUP2
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 MUL
0x148 NOT
0x149 AND
0x14a SWAP1
0x14b DUP4
0x14c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161 AND
0x162 MUL
0x163 OR
0x164 SWAP1
0x165 SSTORE
0x166 POP
0x167 CALLVALUE
0x168 PUSH1 0x5
0x16a PUSH1 0x0
0x16c PUSH1 0x1
0x16e PUSH1 0x0
0x170 SWAP1
0x171 SLOAD
0x172 SWAP1
0x173 PUSH2 0x100
0x176 EXP
0x177 SWAP1
0x178 DIV
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP1
0x1c1 DUP2
0x1c2 MSTORE
0x1c3 PUSH1 0x20
0x1c5 ADD
0x1c6 PUSH1 0x0
0x1c8 SHA3
0x1c9 PUSH1 0x0
0x1cb DUP3
0x1cc DUP3
0x1cd SLOAD
0x1ce ADD
0x1cf SWAP3
0x1d0 POP
0x1d1 POP
0x1d2 DUP2
0x1d3 SWAP1
0x1d4 SSTORE
0x1d5 POP
0x1d6 CALLVALUE
0x1d7 PUSH1 0x3
0x1d9 PUSH1 0x0
0x1db DUP3
0x1dc DUP3
0x1dd SLOAD
0x1de ADD
0x1df SWAP3
0x1e0 POP
0x1e1 POP
0x1e2 DUP2
0x1e3 SWAP1
0x1e4 SSTORE
0x1e5 POP
0x1e6 CALLVALUE
0x1e7 PUSH1 0x4
0x1e9 PUSH1 0x0
0x1eb DUP3
0x1ec DUP3
0x1ed SLOAD
0x1ee ADD
0x1ef SWAP3
0x1f0 POP
0x1f1 POP
0x1f2 DUP2
0x1f3 SWAP1
0x1f4 SSTORE
0x1f5 POP
0x1f6 PUSH1 0x14
0x1f8 PUSH1 0x3
0x1fa SLOAD
0x1fb LT
0x1fc ISZERO
0x1fd ISZERO
0x1fe PUSH2 0x20a
0x201 JUMPI
---
0x125: JUMPDEST 
0x126: V86 = CALLER
0x127: V87 = 0x1
0x129: V88 = 0x0
0x12b: V89 = 0x100
0x12e: V90 = EXP 0x100 0x0
0x130: V91 = S[0x1]
0x132: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V93 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x148: V94 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x149: V95 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V91
0x14c: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x161: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x162: V98 = MUL V97 0x1
0x163: V99 = OR V98 V95
0x165: S[0x1] = V99
0x167: V100 = CALLVALUE
0x168: V101 = 0x5
0x16a: V102 = 0x0
0x16c: V103 = 0x1
0x16e: V104 = 0x0
0x171: V105 = S[0x1]
0x173: V106 = 0x100
0x176: V107 = EXP 0x100 0x0
0x178: V108 = DIV V105 0x1
0x179: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x18f: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1a5: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1bc: M[0x0] = V114
0x1bd: V115 = 0x20
0x1bf: V116 = ADD 0x20 0x0
0x1c2: M[0x20] = 0x5
0x1c3: V117 = 0x20
0x1c5: V118 = ADD 0x20 0x20
0x1c6: V119 = 0x0
0x1c8: V120 = SHA3 0x0 0x40
0x1c9: V121 = 0x0
0x1cd: V122 = S[V120]
0x1ce: V123 = ADD V122 V100
0x1d4: S[V120] = V123
0x1d6: V124 = CALLVALUE
0x1d7: V125 = 0x3
0x1d9: V126 = 0x0
0x1dd: V127 = S[0x3]
0x1de: V128 = ADD V127 V124
0x1e4: S[0x3] = V128
0x1e6: V129 = CALLVALUE
0x1e7: V130 = 0x4
0x1e9: V131 = 0x0
0x1ed: V132 = S[0x4]
0x1ee: V133 = ADD V132 V129
0x1f4: S[0x4] = V133
0x1f6: V134 = 0x14
0x1f8: V135 = 0x3
0x1fa: V136 = S[0x3]
0x1fb: V137 = LT V136 0x14
0x1fc: V138 = ISZERO V137
0x1fd: V139 = ISZERO V138
0x1fe: V140 = 0x20a
0x201: JUMPI 0x20a V139
---
Entry stack: [V11, {0x68, 0x123}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x68, 0x123}]

================================

Block 0x202
[0x202:0x208]
---
Predecessors: [0x125]
Successors: [0x20c]
---
0x202 PUSH2 0x209
0x205 PUSH2 0x20c
0x208 JUMP
---
0x202: V141 = 0x209
0x205: V142 = 0x20c
0x208: JUMP 0x20c
---
Entry stack: [V11, {0x68, 0x123}]
Stack pops: 0
Stack additions: [0x209]
Exit stack: [V11, {0x68, 0x123}, 0x209]

================================

Block 0x209
[0x209:0x209]
---
Predecessors: [0x46b]
Successors: [0x20a]
---
0x209 JUMPDEST
---
0x209: JUMPDEST 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x20a
[0x20a:0x20b]
---
Predecessors: [0x125, 0x209]
Successors: [0x68, 0x123]
---
0x20a JUMPDEST
0x20b JUMP
---
0x20a: JUMPDEST 
0x20b: JUMP S0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x20c
[0x20c:0x26a]
---
Predecessors: [0x6d, 0x111, 0x202]
Successors: [0x26b, 0x26f]
---
0x20c JUMPDEST
0x20d PUSH1 0x0
0x20f DUP1
0x210 SWAP1
0x211 SLOAD
0x212 SWAP1
0x213 PUSH2 0x100
0x216 EXP
0x217 SWAP1
0x218 DIV
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 AND
0x245 PUSH2 0x8fc
0x248 PUSH1 0x4
0x24a SLOAD
0x24b SWAP1
0x24c DUP2
0x24d ISZERO
0x24e MUL
0x24f SWAP1
0x250 PUSH1 0x40
0x252 MLOAD
0x253 PUSH1 0x0
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 DUP4
0x25a SUB
0x25b DUP2
0x25c DUP6
0x25d DUP9
0x25e DUP9
0x25f CALL
0x260 SWAP4
0x261 POP
0x262 POP
0x263 POP
0x264 POP
0x265 ISZERO
0x266 ISZERO
0x267 PUSH2 0x26f
0x26a JUMPI
---
0x20c: JUMPDEST 
0x20d: V143 = 0x0
0x211: V144 = S[0x0]
0x213: V145 = 0x100
0x216: V146 = EXP 0x100 0x0
0x218: V147 = DIV V144 0x1
0x219: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x22f: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x245: V152 = 0x8fc
0x248: V153 = 0x4
0x24a: V154 = S[0x4]
0x24d: V155 = ISZERO V154
0x24e: V156 = MUL V155 0x8fc
0x250: V157 = 0x40
0x252: V158 = M[0x40]
0x253: V159 = 0x0
0x255: V160 = 0x40
0x257: V161 = M[0x40]
0x25a: V162 = SUB V158 V161
0x25f: V163 = CALL V156 V151 V154 V161 V162 V161 0x0
0x265: V164 = ISZERO V163
0x266: V165 = ISZERO V164
0x267: V166 = 0x26f
0x26a: JUMPI 0x26f V165
---
Entry stack: [V11, S1, {0x75, 0x119, 0x209}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x75, 0x119, 0x209}]

================================

Block 0x26b
[0x26b:0x26e]
---
Predecessors: [0x20c]
Successors: []
---
0x26b PUSH1 0x0
0x26d DUP1
0x26e REVERT
---
0x26b: V167 = 0x0
0x26e: REVERT 0x0 0x0
---
Entry stack: [V11, S1, {0x75, 0x119, 0x209}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x75, 0x119, 0x209}]

================================

Block 0x26f
[0x26f:0x27b]
---
Predecessors: [0x20c]
Successors: [0x27c, 0x46b]
---
0x26f JUMPDEST
0x270 PUSH1 0x14
0x272 PUSH1 0x3
0x274 SLOAD
0x275 LT
0x276 ISZERO
0x277 ISZERO
0x278 PUSH2 0x46b
0x27b JUMPI
---
0x26f: JUMPDEST 
0x270: V168 = 0x14
0x272: V169 = 0x3
0x274: V170 = S[0x3]
0x275: V171 = LT V170 0x14
0x276: V172 = ISZERO V171
0x277: V173 = ISZERO V172
0x278: V174 = 0x46b
0x27b: JUMPI 0x46b V173
---
Entry stack: [V11, S1, {0x75, 0x119, 0x209}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x75, 0x119, 0x209}]

================================

Block 0x27c
[0x27c:0x327]
---
Predecessors: [0x26f]
Successors: [0x4a6]
---
0x27c CALLER
0x27d PUSH1 0x1
0x27f PUSH1 0x0
0x281 PUSH2 0x100
0x284 EXP
0x285 DUP2
0x286 SLOAD
0x287 DUP2
0x288 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29d MUL
0x29e NOT
0x29f AND
0x2a0 SWAP1
0x2a1 DUP4
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 MUL
0x2b9 OR
0x2ba SWAP1
0x2bb SSTORE
0x2bc POP
0x2bd PUSH2 0x328
0x2c0 PUSH1 0x5
0x2c2 PUSH1 0x0
0x2c4 PUSH1 0x1
0x2c6 PUSH1 0x0
0x2c8 SWAP1
0x2c9 SLOAD
0x2ca SWAP1
0x2cb PUSH2 0x100
0x2ce EXP
0x2cf SWAP1
0x2d0 DIV
0x2d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e6 AND
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 AND
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x20
0x317 ADD
0x318 SWAP1
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e PUSH1 0x0
0x320 SHA3
0x321 SLOAD
0x322 PUSH1 0x2
0x324 PUSH2 0x4a6
0x327 JUMP
---
0x27c: V175 = CALLER
0x27d: V176 = 0x1
0x27f: V177 = 0x0
0x281: V178 = 0x100
0x284: V179 = EXP 0x100 0x0
0x286: V180 = S[0x1]
0x288: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V182 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x29e: V183 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V184 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V180
0x2a2: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2b8: V187 = MUL V186 0x1
0x2b9: V188 = OR V187 V184
0x2bb: S[0x1] = V188
0x2bd: V189 = 0x328
0x2c0: V190 = 0x5
0x2c2: V191 = 0x0
0x2c4: V192 = 0x1
0x2c6: V193 = 0x0
0x2c9: V194 = S[0x1]
0x2cb: V195 = 0x100
0x2ce: V196 = EXP 0x100 0x0
0x2d0: V197 = DIV V194 0x1
0x2d1: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x2e7: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x2fd: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x314: M[0x0] = V203
0x315: V204 = 0x20
0x317: V205 = ADD 0x20 0x0
0x31a: M[0x20] = 0x5
0x31b: V206 = 0x20
0x31d: V207 = ADD 0x20 0x20
0x31e: V208 = 0x0
0x320: V209 = SHA3 0x0 0x40
0x321: V210 = S[V209]
0x322: V211 = 0x2
0x324: V212 = 0x4a6
0x327: JUMP 0x4a6
---
Entry stack: [V11, S1, {0x75, 0x119, 0x209}]
Stack pops: 0
Stack additions: [0x328, V210, 0x2]
Exit stack: [V11, S1, {0x75, 0x119, 0x209}, 0x328, V210, 0x2]

================================

Block 0x328
[0x328:0x38d]
---
Predecessors: [0x4da]
Successors: [0x38e, 0x392]
---
0x328 JUMPDEST
0x329 PUSH1 0x2
0x32b DUP2
0x32c SWAP1
0x32d SSTORE
0x32e POP
0x32f PUSH1 0x1
0x331 PUSH1 0x0
0x333 SWAP1
0x334 SLOAD
0x335 SWAP1
0x336 PUSH2 0x100
0x339 EXP
0x33a SWAP1
0x33b DIV
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 PUSH2 0x8fc
0x36b PUSH1 0x2
0x36d SLOAD
0x36e SWAP1
0x36f DUP2
0x370 ISZERO
0x371 MUL
0x372 SWAP1
0x373 PUSH1 0x40
0x375 MLOAD
0x376 PUSH1 0x0
0x378 PUSH1 0x40
0x37a MLOAD
0x37b DUP1
0x37c DUP4
0x37d SUB
0x37e DUP2
0x37f DUP6
0x380 DUP9
0x381 DUP9
0x382 CALL
0x383 SWAP4
0x384 POP
0x385 POP
0x386 POP
0x387 POP
0x388 ISZERO
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x328: JUMPDEST 
0x329: V213 = 0x2
0x32d: S[0x2] = S0
0x32f: V214 = 0x1
0x331: V215 = 0x0
0x334: V216 = S[0x1]
0x336: V217 = 0x100
0x339: V218 = EXP 0x100 0x0
0x33b: V219 = DIV V216 0x1
0x33c: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x352: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x368: V224 = 0x8fc
0x36b: V225 = 0x2
0x36d: V226 = S[0x2]
0x370: V227 = ISZERO V226
0x371: V228 = MUL V227 0x8fc
0x373: V229 = 0x40
0x375: V230 = M[0x40]
0x376: V231 = 0x0
0x378: V232 = 0x40
0x37a: V233 = M[0x40]
0x37d: V234 = SUB V230 V233
0x382: V235 = CALL V228 V223 V226 V233 V234 V233 0x0
0x388: V236 = ISZERO V235
0x389: V237 = ISZERO V236
0x38a: V238 = 0x392
0x38d: JUMPI 0x392 V237
---
Entry stack: [V11, S2, {0x75, 0x119, 0x209}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, {0x75, 0x119, 0x209}]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x328]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V239 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V11, S1, {0x75, 0x119, 0x209}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x75, 0x119, 0x209}]

================================

Block 0x392
[0x392:0x46a]
---
Predecessors: [0x328]
Successors: [0x46b]
---
0x392 JUMPDEST
0x393 PUSH1 0x5
0x395 PUSH1 0x0
0x397 PUSH1 0x1
0x399 PUSH1 0x0
0x39b SWAP1
0x39c SLOAD
0x39d SWAP1
0x39e PUSH2 0x100
0x3a1 EXP
0x3a2 SWAP1
0x3a3 DIV
0x3a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b9 AND
0x3ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cf AND
0x3d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e5 AND
0x3e6 DUP2
0x3e7 MSTORE
0x3e8 PUSH1 0x20
0x3ea ADD
0x3eb SWAP1
0x3ec DUP2
0x3ed MSTORE
0x3ee PUSH1 0x20
0x3f0 ADD
0x3f1 PUSH1 0x0
0x3f3 SHA3
0x3f4 SLOAD
0x3f5 PUSH1 0x4
0x3f7 PUSH1 0x0
0x3f9 DUP3
0x3fa DUP3
0x3fb SLOAD
0x3fc SUB
0x3fd SWAP3
0x3fe POP
0x3ff POP
0x400 DUP2
0x401 SWAP1
0x402 SSTORE
0x403 POP
0x404 PUSH1 0x0
0x406 PUSH1 0x5
0x408 PUSH1 0x0
0x40a PUSH1 0x1
0x40c PUSH1 0x0
0x40e SWAP1
0x40f SLOAD
0x410 SWAP1
0x411 PUSH2 0x100
0x414 EXP
0x415 SWAP1
0x416 DIV
0x417 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42c AND
0x42d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x442 AND
0x443 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x458 AND
0x459 DUP2
0x45a MSTORE
0x45b PUSH1 0x20
0x45d ADD
0x45e SWAP1
0x45f DUP2
0x460 MSTORE
0x461 PUSH1 0x20
0x463 ADD
0x464 PUSH1 0x0
0x466 SHA3
0x467 DUP2
0x468 SWAP1
0x469 SSTORE
0x46a POP
---
0x392: JUMPDEST 
0x393: V240 = 0x5
0x395: V241 = 0x0
0x397: V242 = 0x1
0x399: V243 = 0x0
0x39c: V244 = S[0x1]
0x39e: V245 = 0x100
0x3a1: V246 = EXP 0x100 0x0
0x3a3: V247 = DIV V244 0x1
0x3a4: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b9: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x3ba: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cf: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x3d0: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x3e7: M[0x0] = V253
0x3e8: V254 = 0x20
0x3ea: V255 = ADD 0x20 0x0
0x3ed: M[0x20] = 0x5
0x3ee: V256 = 0x20
0x3f0: V257 = ADD 0x20 0x20
0x3f1: V258 = 0x0
0x3f3: V259 = SHA3 0x0 0x40
0x3f4: V260 = S[V259]
0x3f5: V261 = 0x4
0x3f7: V262 = 0x0
0x3fb: V263 = S[0x4]
0x3fc: V264 = SUB V263 V260
0x402: S[0x4] = V264
0x404: V265 = 0x0
0x406: V266 = 0x5
0x408: V267 = 0x0
0x40a: V268 = 0x1
0x40c: V269 = 0x0
0x40f: V270 = S[0x1]
0x411: V271 = 0x100
0x414: V272 = EXP 0x100 0x0
0x416: V273 = DIV V270 0x1
0x417: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x42c: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x42d: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x442: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x443: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x458: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x45a: M[0x0] = V279
0x45b: V280 = 0x20
0x45d: V281 = ADD 0x20 0x0
0x460: M[0x20] = 0x5
0x461: V282 = 0x20
0x463: V283 = ADD 0x20 0x20
0x464: V284 = 0x0
0x466: V285 = SHA3 0x0 0x40
0x469: S[V285] = 0x0
---
Entry stack: [V11, S1, {0x75, 0x119, 0x209}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x75, 0x119, 0x209}]

================================

Block 0x46b
[0x46b:0x46c]
---
Predecessors: [0x26f, 0x392]
Successors: [0x75, 0x119, 0x209]
---
0x46b JUMPDEST
0x46c JUMP
---
0x46b: JUMPDEST 
0x46c: JUMP {0x75, 0x119, 0x209}
---
Entry stack: [V11, S1, {0x75, 0x119, 0x209}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x46d
[0x46d:0x4a5]
---
Predecessors: [0x83]
Successors: [0x8b]
---
0x46d JUMPDEST
0x46e PUSH1 0x40
0x470 DUP1
0x471 MLOAD
0x472 SWAP1
0x473 DUP2
0x474 ADD
0x475 PUSH1 0x40
0x477 MSTORE
0x478 DUP1
0x479 PUSH1 0x9
0x47b DUP2
0x47c MSTORE
0x47d PUSH1 0x20
0x47f ADD
0x480 PUSH32 0x54776f4578527573680000000000000000000000000000000000000000000000
0x4a1 DUP2
0x4a2 MSTORE
0x4a3 POP
0x4a4 DUP2
0x4a5 JUMP
---
0x46d: JUMPDEST 
0x46e: V286 = 0x40
0x471: V287 = M[0x40]
0x474: V288 = ADD V287 0x40
0x475: V289 = 0x40
0x477: M[0x40] = V288
0x479: V290 = 0x9
0x47c: M[V287] = 0x9
0x47d: V291 = 0x20
0x47f: V292 = ADD 0x20 V287
0x480: V293 = 0x54776f4578527573680000000000000000000000000000000000000000000000
0x4a2: M[V292] = 0x54776f4578527573680000000000000000000000000000000000000000000000
0x4a5: JUMP 0x8b
---
Entry stack: [V11, 0x8b]
Stack pops: 1
Stack additions: [S0, V287]
Exit stack: [V11, 0x8b, V287]

================================

Block 0x4a6
[0x4a6:0x4b2]
---
Predecessors: [0x27c]
Successors: [0x4b3, 0x4bb]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x0
0x4a9 DUP1
0x4aa PUSH1 0x0
0x4ac DUP5
0x4ad EQ
0x4ae ISZERO
0x4af PUSH2 0x4bb
0x4b2 JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V294 = 0x0
0x4aa: V295 = 0x0
0x4ad: V296 = EQ V210 0x0
0x4ae: V297 = ISZERO V296
0x4af: V298 = 0x4bb
0x4b2: JUMPI 0x4bb V297
---
Entry stack: [V11, S4, {0x75, 0x119, 0x209}, 0x328, V210, 0x2]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, S4, {0x75, 0x119, 0x209}, 0x328, V210, 0x2, 0x0, 0x0]

================================

Block 0x4b3
[0x4b3:0x4ba]
---
Predecessors: [0x4a6]
Successors: [0x4da]
---
0x4b3 PUSH1 0x0
0x4b5 SWAP2
0x4b6 POP
0x4b7 PUSH2 0x4da
0x4ba JUMP
---
0x4b3: V299 = 0x0
0x4b7: V300 = 0x4da
0x4ba: JUMP 0x4da
---
Entry stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, 0x0, 0x0]

================================

Block 0x4bb
[0x4bb:0x4ca]
---
Predecessors: [0x4a6]
Successors: [0x4cb, 0x4cc]
---
0x4bb JUMPDEST
0x4bc DUP3
0x4bd DUP5
0x4be MUL
0x4bf SWAP1
0x4c0 POP
0x4c1 DUP3
0x4c2 DUP5
0x4c3 DUP3
0x4c4 DUP2
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 PUSH2 0x4cc
0x4ca JUMPI
---
0x4bb: JUMPDEST 
0x4be: V301 = MUL S3 0x2
0x4c5: V302 = ISZERO S3
0x4c6: V303 = ISZERO V302
0x4c7: V304 = 0x4cc
0x4ca: JUMPI 0x4cc V303
---
Entry stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V301, S2, S3, V301]
Exit stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, 0x0, V301, 0x2, S3, V301]

================================

Block 0x4cb
[0x4cb:0x4cb]
---
Predecessors: [0x4bb]
Successors: []
---
0x4cb INVALID
---
0x4cb: INVALID 
---
Entry stack: [V11, S9, {0x75, 0x119, 0x209}, 0x328, S6, 0x2, 0x0, V301, 0x2, S1, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, {0x75, 0x119, 0x209}, 0x328, S6, 0x2, 0x0, V301, 0x2, S1, V301]

================================

Block 0x4cc
[0x4cc:0x4d4]
---
Predecessors: [0x4bb]
Successors: [0x4d5, 0x4d6]
---
0x4cc JUMPDEST
0x4cd DIV
0x4ce EQ
0x4cf ISZERO
0x4d0 ISZERO
0x4d1 PUSH2 0x4d6
0x4d4 JUMPI
---
0x4cc: JUMPDEST 
0x4cd: V305 = DIV V301 S1
0x4ce: V306 = EQ V305 0x2
0x4cf: V307 = ISZERO V306
0x4d0: V308 = ISZERO V307
0x4d1: V309 = 0x4d6
0x4d4: JUMPI 0x4d6 V308
---
Entry stack: [V11, S9, {0x75, 0x119, 0x209}, 0x328, S6, 0x2, 0x0, V301, 0x2, S1, V301]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S9, {0x75, 0x119, 0x209}, 0x328, S6, 0x2, 0x0, V301]

================================

Block 0x4d5
[0x4d5:0x4d5]
---
Predecessors: [0x4cc]
Successors: []
---
0x4d5 INVALID
---
0x4d5: INVALID 
---
Entry stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, 0x0, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, 0x0, V301]

================================

Block 0x4d6
[0x4d6:0x4d9]
---
Predecessors: [0x4cc]
Successors: [0x4da]
---
0x4d6 JUMPDEST
0x4d7 DUP1
0x4d8 SWAP2
0x4d9 POP
---
0x4d6: JUMPDEST 
---
Entry stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, 0x0, V301]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, V301, V301]

================================

Block 0x4da
[0x4da:0x4e0]
---
Predecessors: [0x4b3, 0x4d6]
Successors: [0x328]
---
0x4da JUMPDEST
0x4db POP
0x4dc SWAP3
0x4dd SWAP2
0x4de POP
0x4df POP
0x4e0 JUMP
---
0x4da: JUMPDEST 
0x4e0: JUMP 0x328
---
Entry stack: [V11, S6, {0x75, 0x119, 0x209}, 0x328, S3, 0x2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, S6, {0x75, 0x119, 0x209}, S1]

================================

Block 0x4e1
[0x4e1:0x50c]
---
Predecessors: []
Successors: []
---
0x4e1 STOP
0x4e2 LOG1
0x4e3 PUSH6 0x627a7a723058
0x4ea SHA3
0x4eb CALLDATACOPY
0x4ec MISSING 0x5c
0x4ed LOG4
0x4ee EXP
0x4ef SWAP8
0x4f0 MISSING 0x4c
0x4f1 MISSING 0xcd
0x4f2 MISSING 0xfb
0x4f3 SELFDESTRUCT
0x4f4 PUSH15 0x61219ca6739ba5aa4417705b0c2d2f
0x504 XOR
0x505 SWAP15
0x506 MISSING 0xa6
0x507 ADD
0x508 SELFDESTRUCT
0x509 MISSING 0xc1
0x50a GASLIMIT
0x50b STOP
0x50c MISSING 0x29
---
0x4e1: STOP 
0x4e2: LOG S0 S1 S2
0x4e3: V310 = 0x627a7a723058
0x4ea: V311 = SHA3 0x627a7a723058 S3
0x4eb: CALLDATACOPY V311 S4 S5
0x4ec: MISSING 0x5c
0x4ed: LOG S0 S1 S2 S3 S4 S5
0x4ee: V312 = EXP S6 S7
0x4f0: MISSING 0x4c
0x4f1: MISSING 0xcd
0x4f2: MISSING 0xfb
0x4f3: SELFDESTRUCT S0
0x4f4: V313 = 0x61219ca6739ba5aa4417705b0c2d2f
0x504: V314 = XOR 0x61219ca6739ba5aa4417705b0c2d2f S0
0x506: MISSING 0xa6
0x507: V315 = ADD S0 S1
0x508: SELFDESTRUCT V315
0x509: MISSING 0xc1
0x50a: V316 = GASLIMIT
0x50b: STOP 
0x50c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, S8, S9, S10, S11, S12, S13, S14, V312, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V314, V316]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x78
Exit block: 0xf8
Body: 0x78, 0x7f, 0x83, 0x8b, 0xb0, 0xb9, 0xcb, 0xdf, 0xf8, 0x46d

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x106
Exit block: 0x119
Body: 0x106, 0x10d, 0x111, 0x119

Function 2:
Public function signature: 0xd0e30db0
Entry block: 0x11b
Exit block: 0x123
Body: 0x11b, 0x123

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x76
Body: 0x57, 0x61, 0x68, 0x6d, 0x75, 0x76

Function 4:
Private function
Entry block: 0x20c
Exit block: 0x46b
Body: 0x20c, 0x26f, 0x27c, 0x328, 0x392, 0x46b, 0x4a6, 0x4b3, 0x4bb, 0x4cc, 0x4d6, 0x4da

Function 5:
Private function
Entry block: 0x125
Exit block: 0x20a
Body: 0x125, 0x202, 0x209, 0x20a

